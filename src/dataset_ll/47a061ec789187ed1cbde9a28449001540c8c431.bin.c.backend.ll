source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_f5f4.16 = constant i32 -382906384
@global_var_1a248.19 = constant [4 x i8] c"GET\00"
@global_var_1a24c.21 = constant i32 47
@global_var_165e8.24 = constant i32 -449978364
@global_var_10000.25 = constant i32 1105119797
@global_var_1a240.27 = constant i32 32
@global_var_1a218.29 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1a230.31 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_1a23c.33 = constant [3 x i8] c"\0D\0A\00"
@global_var_1a250.35 = constant [9 x i8] c"Cookie: \00"
@global_var_1a25c.37 = constant [3 x i8] c"; \00"
@global_var_1a268.39 = constant i32 59
@global_var_1a260.41 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_1a26c.43 = constant [5 x i8] c"http\00"
@global_var_1a274.45 = constant [5 x i8] c"url=\00"
@global_var_1a27c.47 = constant [5 x i8] c"POST\00"
@global_var_1a284.49 = constant i32 39
@global_var_12e14.50 = constant i32 -439279616
@global_var_1a288.52 = constant i32 61
@global_var_23078.56 = global i32 0
@global_var_a050.57 = constant i32 -352321547
@global_var_14248.58 = constant i32 -382906384
@global_var_2307c.60 = global i32 0
@global_var_23080.61 = local_unnamed_addr global i32 0
@global_var_23084.62 = local_unnamed_addr global i32 0
@global_var_23088.63 = local_unnamed_addr global i32 0
@global_var_2308c.64 = local_unnamed_addr global i32 0
@global_var_23090.65 = local_unnamed_addr global i32 0
@global_var_23094.66 = local_unnamed_addr global i32 0
@global_var_23098.67 = local_unnamed_addr global i32 0
@global_var_daec.73 = constant i32 -382906384
@global_var_def8.75 = constant i32 -382906384
@global_var_d124.77 = constant i32 -382906384
@global_var_caa8.80 = constant i32 -382906384
@global_var_c3f0.82 = constant i32 -382906384
@global_var_b4c0.84 = constant i32 -382906384
@global_var_bc58.86 = constant i32 -382906384
@global_var_aee0.88 = constant i32 -382906384
@global_var_a884.90 = constant i32 -382906384
@global_var_81cc.92 = constant i32 -382906384
@global_var_2365c.94 = global i32 0
@global_var_23664.106 = global i32 0
@global_var_1a28c.108 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_2309c.112 = global i32 0
@global_var_23660.114 = global i32 0
@global_var_158a0.116 = constant i32 -382910336
@global_var_f0cc.117 = constant i32 -509607932
@global_var_f570.119 = constant i32 -382910352
@global_var_23040.121 = global i32 77992
@global_var_23038.123 = global i32 -1
@global_var_2366c.129 = local_unnamed_addr global i32 0
@global_var_2366a.130 = local_unnamed_addr global i32 0
@global_var_1a29c.133 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_1a2f0.138 = constant [3 x i8] c"/.\00"
@global_var_1a2cc.140 = constant i32 62448
@global_var_f3f0.141 = constant i32 -382910224
@global_var_1255c.143 = constant i32 -442552176
@global_var_125fc.146 = constant i32 -382906384
@global_var_124bc.148 = constant i32 -442552176
@global_var_1a2ec.153 = constant i32 62424
@global_var_1a2c0.156 = constant i32 10
@global_var_1a2ac.159 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_230a4.172 = global i32 0
@global_var_230b0.174 = global i32 0
@global_var_230a8.176 = global i32 0
@global_var_230ac.178 = global i32 0
@global_var_1a304.184 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_10788.194 = constant i32 -509607925
@global_var_23680.196 = global i32 0
@global_var_230e8.198 = global i32 0
@global_var_230b4.200 = global i32 0
@global_var_230e0.202 = global i32 0
@global_var_23678.209 = global i32 0
@global_var_2367c.211 = global i32 0
@global_var_230ba.214 = local_unnamed_addr global i32 0
@global_var_230bc.215 = local_unnamed_addr global i32 0
@global_var_230c0.216 = local_unnamed_addr global i32 0
@global_var_230c1.217 = local_unnamed_addr global i32 0
@global_var_230cc.219 = global i32 0
@global_var_230da.223 = local_unnamed_addr global i32 0
@global_var_1a328.225 = constant [5 x i8] c"PMMV\00"
@global_var_1a330.227 = constant i32 387006810
@global_var_1a338.229 = constant [6 x i8] c"TKXZT\00"
@global_var_1a340.231 = constant [6 x i8] c"CFOKL\00"
@global_var_1a348.233 = constant i32 437918234
@global_var_1a350.235 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1a358.237 = constant [8 x i8] c"FGDCWNV\00"
@global_var_1a360.239 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_1a36c.241 = constant i32 370216979
@global_var_1a374.243 = constant i32 269555223
@global_var_1a37c.245 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1a264.247 = constant i32 0
@global_var_1a384.249 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1a390.251 = constant i32 370216979
@global_var_1a398.253 = constant [5 x i8] c"WQGP\00"
@global_var_1a3a0.255 = constant [5 x i8] c"RCQQ\00"
@global_var_1a3a8.257 = constant i32 1263486531
@global_var_1a3b4.259 = constant i32 320017171
@global_var_1a3bc.261 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1a3c8.263 = constant i32 336860180
@global_var_1a3d0.265 = constant i32 370216979
@global_var_1a3d8.267 = constant i32 324292169
@global_var_1a3e0.269 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1a3f0.271 = constant [7 x i8] c"OGKLQO\00"
@global_var_1a3f8.273 = constant [8 x i8] c"QGPTKAG\00"
@global_var_1a400.275 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1a40c.277 = constant [6 x i8] c"EWGQV\00"
@global_var_1a414.279 = constant i32 1263486531
@global_var_1a41c.281 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_1a42c.283 = constant [5 x i8] c"W@LV\00"
@global_var_1a434.285 = constant i32 324292169
@global_var_1a43c.287 = constant i32 390551160
@global_var_1a444.289 = constant i32 387009354
@global_var_1a44c.291 = constant [6 x i8] c"HT@XF\00"
@global_var_1a454.293 = constant [5 x i8] c"CLIM\00"
@global_var_1a45c.295 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_1a464.297 = constant i32 1867011861
@global_var_1a474.299 = constant i32 1867011861
@global_var_1a484.301 = constant [7 x i8] c"Q[QVGO\00"
@global_var_1a48c.303 = constant [5 x i8] c"KIU@\00"
@global_var_1a494.305 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_1a4a0.307 = constant [8 x i8] c"PGCNVGI\00"
@global_var_1a4a8.309 = constant i32 303174162
@global_var_1a4b4.311 = constant i32 320017171
@global_var_1a4bc.313 = constant i32 319820054
@global_var_1a364.315 = constant [5 x i8] c"VGAJ\00"
@global_var_1a4c4.317 = constant [7 x i8] c"OMVJGP\00"
@global_var_1a4cc.319 = constant [7 x i8] c"DWAIGP\00"
@global_var_230c4.320 = local_unnamed_addr global i32 0
@global_var_230c8.321 = local_unnamed_addr global i32 0
@global_var_230c2.322 = local_unnamed_addr global i32 0
@global_var_230d0.324 = local_unnamed_addr global i32 0
@global_var_230dc.325 = local_unnamed_addr global i32 0
@global_var_10888.327 = constant i32 -382910352
@global_var_1a4dc.330 = constant [5 x i8] c"ogin\00"
@global_var_1a4e4.332 = constant [8 x i8] c"assword\00"
@global_var_1a4f5.334 = constant i32 1377827839
@global_var_1a4ec.336 = constant i32 2095871
@global_var_1a4d4.341 = constant [6 x i8] c"enter\00"
@global_var_23688.343 = global i32 0
@global_var_23048.346 = global i32 -559038737
@global_var_1a4f8.350 = constant [13 x i8] c"RKAGQ@PM\0CVI\22\00"
@global_var_236a0.352 = local_unnamed_addr global i32 0
@global_var_236a4.353 = local_unnamed_addr global i32 0
@global_var_1a508.355 = constant i32 42786
@global_var_236a8.356 = local_unnamed_addr global i32 0
@global_var_236ac.357 = local_unnamed_addr global i32 0
@global_var_23718.358 = local_unnamed_addr global i32 0
@global_var_2371c.359 = local_unnamed_addr global i32 0
@global_var_1a50c.361 = constant i32 36254
@global_var_23720.362 = local_unnamed_addr global i32 0
@global_var_23724.363 = local_unnamed_addr global i32 0
@global_var_1a510.365 = constant i32 1448168270
@global_var_23698.366 = local_unnamed_addr global i32 0
@global_var_2369c.367 = local_unnamed_addr global i32 0
@global_var_1a520.369 = constant i32 1381389898
@global_var_236b4.370 = local_unnamed_addr global i32 0
@global_var_236b0.371 = local_unnamed_addr global i32 0
@global_var_1a540.373 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_236b8.374 = local_unnamed_addr global i32 0
@global_var_236bc.375 = local_unnamed_addr global i32 0
@global_var_1a548.377 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_236c0.378 = local_unnamed_addr global i32 0
@global_var_236c4.379 = local_unnamed_addr global i32 0
@global_var_1a550.381 = constant i32 1195772418
@global_var_236c8.382 = local_unnamed_addr global i32 0
@global_var_236cc.383 = local_unnamed_addr global i32 0
@global_var_1a55c.385 = constant [5 x i8] c"\0DDF\22\00"
@global_var_236d4.386 = local_unnamed_addr global i32 0
@global_var_236d0.387 = local_unnamed_addr global i32 0
@global_var_1a564.389 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_236d8.390 = local_unnamed_addr global i32 0
@global_var_236dc.391 = local_unnamed_addr global i32 0
@global_var_1a56c.393 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_236e0.394 = local_unnamed_addr global i32 0
@global_var_236e4.395 = local_unnamed_addr global i32 0
@global_var_1a578.397 = constant i32 1836214128
@global_var_236e8.398 = local_unnamed_addr global i32 0
@global_var_236ec.399 = local_unnamed_addr global i32 0
@global_var_1a588.401 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_236f0.402 = local_unnamed_addr global i32 0
@global_var_236f4.403 = local_unnamed_addr global i32 0
@global_var_1a594.405 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_236f8.406 = local_unnamed_addr global i32 0
@global_var_236fc.407 = local_unnamed_addr global i32 0
@global_var_1a5a0.409 = constant i32 437738110
@global_var_23704.410 = local_unnamed_addr global i32 0
@global_var_23700.411 = local_unnamed_addr global i32 0
@global_var_1a5c4.413 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_23708.414 = local_unnamed_addr global i32 0
@global_var_2370c.415 = local_unnamed_addr global i32 0
@global_var_1a5d0.417 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_23710.418 = local_unnamed_addr global i32 0
@global_var_23714.419 = local_unnamed_addr global i32 0
@global_var_1a5dc.421 = constant [7 x i8] c"QJGNN\22\00"
@global_var_23728.422 = local_unnamed_addr global i32 0
@global_var_2372c.423 = local_unnamed_addr global i32 0
@global_var_1a5e4.425 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_23730.426 = local_unnamed_addr global i32 0
@global_var_23734.427 = local_unnamed_addr global i32 0
@global_var_1a5ec.429 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_23738.430 = local_unnamed_addr global i32 0
@global_var_2373c.431 = local_unnamed_addr global i32 0
@global_var_1a5f4.433 = constant [4 x i8] c"QJ\22\00"
@global_var_23744.434 = local_unnamed_addr global i32 0
@global_var_23740.435 = local_unnamed_addr global i32 0
@global_var_1a5f8.437 = constant i32 1280000013
@global_var_23748.438 = local_unnamed_addr global i32 0
@global_var_2374c.439 = local_unnamed_addr global i32 0
@global_var_1a60c.441 = constant i32 1668311919
@global_var_23754.442 = local_unnamed_addr global i32 0
@global_var_23750.443 = local_unnamed_addr global i32 0
@global_var_1a628.445 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_23758.446 = local_unnamed_addr global i32 0
@global_var_2375c.447 = local_unnamed_addr global i32 0
@global_var_1a634.449 = constant i32 1280000013
@global_var_23760.450 = local_unnamed_addr global i32 0
@global_var_23764.451 = local_unnamed_addr global i32 0
@global_var_1a648.453 = constant i32 1280000013
@global_var_23768.454 = local_unnamed_addr global i32 0
@global_var_2376c.455 = local_unnamed_addr global i32 0
@global_var_1a660.457 = constant i32 1464693110
@global_var_23774.458 = local_unnamed_addr global i32 0
@global_var_23770.459 = local_unnamed_addr global i32 0
@global_var_1a678.461 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_23778.462 = local_unnamed_addr global i32 0
@global_var_2377c.463 = local_unnamed_addr global i32 0
@global_var_1a68c.465 = constant i32 1196376908
@global_var_23780.466 = local_unnamed_addr global i32 0
@global_var_23784.467 = local_unnamed_addr global i32 0
@global_var_1a69c.469 = constant i32 1280068961
@global_var_23788.470 = local_unnamed_addr global i32 0
@global_var_1a6b4.472 = constant i32 1195458915
@global_var_23790.473 = local_unnamed_addr global i32 0
@global_var_1a708.475 = constant i32 1195458915
@global_var_23798.476 = local_unnamed_addr global i32 0
@global_var_1a72c.478 = constant i32 1447841121
@global_var_237a0.479 = local_unnamed_addr global i32 0
@global_var_1a760.481 = constant i32 1633044305
@global_var_237a8.482 = local_unnamed_addr global i32 0
@global_var_1a770.484 = constant i32 1346651984
@global_var_237b0.485 = local_unnamed_addr global i32 0
@global_var_1a77c.487 = constant i32 1128353102
@global_var_237b8.488 = local_unnamed_addr global i32 0
@global_var_1a788.490 = constant i32 257312593
@global_var_237c0.491 = local_unnamed_addr global i32 0
@global_var_1a798.493 = constant i32 1447841089
@global_var_237c8.494 = local_unnamed_addr global i32 0
@global_var_1a7ac.496 = constant i32 1279479894
@global_var_237d0.497 = local_unnamed_addr global i32 0
@global_var_1a7c0.499 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_237d8.500 = local_unnamed_addr global i32 0
@global_var_1a6a8.502 = constant i32 1380403017
@global_var_237e0.503 = local_unnamed_addr global i32 0
@global_var_1a7cc.505 = constant i32 1280068929
@global_var_237e8.506 = local_unnamed_addr global i32 0
@global_var_1a7dc.508 = constant i32 1414547281
@global_var_237f0.509 = local_unnamed_addr global i32 0
@global_var_1a7f0.511 = constant i32 1414547281
@global_var_237f8.512 = local_unnamed_addr global i32 0
@global_var_1a80c.514 = constant i32 1264078191
@global_var_23800.515 = local_unnamed_addr global i32 0
@global_var_1a87c.517 = constant i32 1264078191
@global_var_23808.518 = local_unnamed_addr global i32 0
@global_var_1a8ec.520 = constant i32 1264078191
@global_var_23810.521 = local_unnamed_addr global i32 0
@global_var_1a95c.523 = constant i32 1264078191
@global_var_23818.524 = local_unnamed_addr global i32 0
@global_var_1a9cc.526 = constant i32 1264078191
@global_var_23820.527 = local_unnamed_addr global i32 0
@global_var_2351c.529 = global i32 0
@global_var_2383c.532 = local_unnamed_addr global i32 0
@global_var_23828.534 = local_unnamed_addr global i32 0
@global_var_23860.536 = local_unnamed_addr global i32 0
@global_var_23844.537 = local_unnamed_addr global i32 0
@global_var_230ec.539 = global i32 0
@global_var_230f0.541 = global i32 0
@global_var_1aa44.544 = constant [10 x i8] c"/dev/null\00"
@global_var_23834.546 = local_unnamed_addr global i32 0
@global_var_23004.549 = global i32 33036
@global_var_23008.551 = global i32 32968
@global_var_13960.552 = constant i32 -352321519
@global_var_13a10.559 = constant i32 -450007036
@global_var_23838.562 = local_unnamed_addr global i32 0
@global_var_23108.564 = global i32 0
@global_var_2310c.566 = global i32 0
@global_var_23510.572 = global i32 0
@global_var_23514.576 = global i32 0
@global_var_1aa4e.580 = constant i32 35062016
@global_var_230fc.582 = global i32 0
@global_var_230f8.584 = global i32 0
@global_var_23100.585 = global i32 0
@global_var_150bc.590 = constant i32 -516948194
@global_var_155d0.601 = constant i32 -450007036
@global_var_1572c.603 = constant i32 -509607923
@global_var_1aa78.606 = constant i32 -1
@global_var_1aa70.608 = constant i32 2147483647
@global_var_16258.611 = constant i32 -449978364
@global_var_23518.615 = global i32 0
@global_var_1aa80.617 = constant [10 x i8] c"LINUX_2.6\00"
@global_var_1aa8c.619 = constant [21 x i8] c"__vdso_clock_gettime\00"
@global_var_16520.621 = constant i32 -382910336
@global_var_2304c.625 = global i32 0
@global_var_16770.626 = constant i32 -484573183
@global_var_23050.629 = global i32 0
@global_var_167c4.630 = constant i32 -509595648
@global_var_23054.632 = global i32 0
@global_var_16838.633 = constant i32 -300085392
@global_var_23864.635 = global i32 0
@global_var_23870.636 = local_unnamed_addr global i32 0
@global_var_23868.637 = local_unnamed_addr global i32 0
@global_var_2386c.639 = local_unnamed_addr global i32 0
@global_var_23840.641 = local_unnamed_addr global i32 0
@global_var_23520.643 = global i32 0
@global_var_23848.645 = global i32 0
@global_var_1aaae.647 = constant i32 -1
@global_var_1aaad.649 = constant i32 -1
@global_var_1aaa4.651 = constant i32 67240192
@global_var_2363c.656 = global i32 0
@global_var_23638.659 = global i32 0
@global_var_23644.661 = global i32 0
@global_var_23830.664 = local_unnamed_addr global i32 0
@global_var_23640.666 = global i32 0
@global_var_17dfc.686 = constant i32 -382910352
@global_var_2364c.688 = global i32 0
@global_var_23654.691 = global i32 0
@global_var_23650.694 = global i32 0
@global_var_23010.696 = global i32 0
@global_var_23058.3 = external global i8*
@global_var_23074.54 = external global i8*
@global_var_23075.71 = global i8 0
@1 = internal constant [2 x i8] c"\01\00"
@global_var_23044.125 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_23668.128 = global i16* null
@global_var_230e4.204 = global i16* null
@global_var_230b8.213 = external global i8*
@global_var_230d8.220 = local_unnamed_addr global i8 0
@global_var_230ce.221 = local_unnamed_addr global i16 0
@global_var_230d9.222 = local_unnamed_addr global i8 0
@global_var_2382c.531 = external global i8*

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_80b4() local_unnamed_addr {
entry:
  %v3_80b4 = load i32, i32* @r0, align 4
  ret i32 %v3_80b4
}

define i32 @function_80c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80c8 = load i32, i32* @r4, align 4
  store i32 %v3_80c8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_23058.3 to i32), i32* %r4.global-to-local, align 4
  %v2_80d0 = load i8, i8* bitcast (i8** @global_var_23058.3 to i8*), align 4
  %v2_80d4 = icmp eq i8 %v2_80d0, 0
  br i1 %v2_80d4, label %dec_label_pc_80dc, label %dec_label_pc_80f8

dec_label_pc_80dc:                                ; preds = %entry
  store i1 true, i1* @cpsr_z, align 1
  %v3_80ec = call i32 @function_8104()
  store i32 %v3_80ec, i32* @r0, align 4
  %v2_80f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_80f4 = inttoptr i32 %v2_80f4 to i8*
  store i8 1, i8* %v3_80f4, align 1
  %v2_80f8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80f8

dec_label_pc_80f8:                                ; preds = %entry, %dec_label_pc_80dc
  %v2_80f8 = phi i32 [ %v3_80c8, %entry ], [ %v2_80f8.pre, %dec_label_pc_80dc ]
  store i32 %v2_80f8, i32* %r4.global-to-local, align 4
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc

; uselistorder directives
  uselistorder i8** @global_var_23058.3, { 1, 0 }
  uselistorder label %dec_label_pc_80f8, { 1, 0 }
}

define i32 @function_8104() local_unnamed_addr {
dec_label_pc_8104:
  %v0_8108 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8108, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_8104
  br label %bb3

bb3:                                              ; preds = %bb, %dec_label_pc_8104
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8130 = load i32, i32* inttoptr (i32 143372 to i32*), align 4
  %v2_8134 = icmp eq i32 %v2_8130, 0
  br i1 %v2_8134, label %dec_label_pc_814c, label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %bb3
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_814c

dec_label_pc_814c:                                ; preds = %bb3, %dec_label_pc_813c
  ret i32 143372

; uselistorder directives
  uselistorder label %dec_label_pc_814c, { 1, 0 }
}

define i32 @entry_point() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v3_8188 = call i32 @function_8190(i32* nonnull %stack_var_0, i32 0)
  ret i32 %v3_8188
}

define i32 @function_8190(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8190:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_8190 = load i32, i32* @lr, align 4
  %v2_81a0 = load i32, i32* %arg1, align 4
  %v1_81a4 = add i32 %tmp, 4
  %v7_81bc = inttoptr i32 %v1_81a4 to i32*
  %v8_81bc = call i32 @function_1377c(i32 ptrtoint (i32* @global_var_f5f4.16 to i32), i32 %v2_81a0, i32* %v7_81bc, i32 32948, i32 106996, i32 0, i32 %v0_8190)
  ret i32 %v8_81bc
}

define i32 @function_81cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_81cc:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_81cc = load i32, i32* @r4, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_81f8 = inttoptr i32 %arg4 to i32*
  %v6_81f8 = call i32 @function_9f04(i32 %arg3, i32* %v5_81f8, i32 21, i32 0, i32 %arg2)
  %v0_81fc = load i32, i32* @r5, align 4
  store i32 %v0_81fc, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v0_8208 = load i32, i32* @r4, align 4
  store i32 %v0_8208, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a248.19 to i32), i32* %r3.global-to-local, align 4
  %v6_8210 = inttoptr i32 %v0_81fc to i32*
  %v7_8210 = call i32 @function_9f04(i32 %v0_8208, i32* %v6_8210, i32 20, i32 ptrtoint ([4 x i8]* @global_var_1a248.19 to i32), i32 %v6_81f8)
  %v0_8214 = load i32, i32* @r5, align 4
  store i32 %v0_8214, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_8210, i32* @sl, align 4
  %v0_8224 = load i32, i32* @r4, align 4
  store i32 %v0_8224, i32* %r0.global-to-local, align 4
  %v5_8228 = inttoptr i32 %v0_8214 to i32*
  %v6_8228 = call i32 @function_9f04(i32 %v0_8224, i32* %v5_8228, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_822c = load i32, i32* @r5, align 4
  store i32 %v0_822c, i32* %r1.global-to-local, align 4
  store i32 %v6_8228, i32* @r8, align 4
  store i32 22, i32* %r2.global-to-local, align 4
  %v0_8238 = load i32, i32* @r4, align 4
  store i32 %v0_8238, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a24c.21 to i32), i32* %r3.global-to-local, align 4
  %v5_8240 = inttoptr i32 %v0_822c to i32*
  %v6_8240 = call i32 @function_9f04(i32 %v0_8238, i32* %v5_8240, i32 22, i32 ptrtoint (i32* @global_var_1a24c.21 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8244 = load i32, i32* @r5, align 4
  store i32 %v0_8244, i32* %r1.global-to-local, align 4
  store i32 %v6_8240, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_8250 = load i32, i32* @r4, align 4
  store i32 %v0_8250, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_8258 = inttoptr i32 %v0_8244 to i32*
  %v5_8258 = call i32 @function_a430(i32 %v0_8250, i32* %v4_8258, i32 24, i32 1)
  %v0_825c = load i32, i32* @r5, align 4
  store i32 %v0_825c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_8258, i32* @r6, align 4
  %v0_826c = load i32, i32* @r4, align 4
  store i32 %v0_826c, i32* %r0.global-to-local, align 4
  %v4_8270 = inttoptr i32 %v0_825c to i32*
  %v5_8270 = call i32 @function_a430(i32 %v0_826c, i32* %v4_8270, i32 7, i32 80)
  %v2_8278 = ptrtoint i32* %stack_var_-20813 to i32
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_828c = urem i32 %v5_8270, 65536
  store i32 %v3_828c, i32* %r3.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_829c = bitcast i32* %stack_var_-20813 to i8*
  %v4_829c = call i32 @function_16010(i8* %v3_829c, i32 0, i32 10241)
  store i32 %v4_829c, i32* %r0.global-to-local, align 4
  %v0_82a0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_82a0 = icmp eq i32 %v0_82a0, 0
  store i1 %v2_82a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_82a0, label %.thread13, label %bb

bb:                                               ; preds = %dec_label_pc_81cc
  %v1_82a4 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_82a4 = icmp eq i32 %v1_82a4, 0
  store i1 %v3_82a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_82a4, label %bb157, label %dec_label_pc_82c4

.thread13:                                        ; preds = %dec_label_pc_81cc
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

bb157:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

dec_label_pc_82b4:                                ; preds = %bb157, %dec_label_pc_82e4, %.thread13, %dec_label_pc_82d4, %dec_label_pc_82c4
  %v1_82c0 = phi i32 [ %v2_82e8, %dec_label_pc_82e4 ], [ %v4_829c, %.thread13 ], [ %v4_829c, %bb157 ], [ %v2_82d8, %dec_label_pc_82d4 ], [ %v2_82c8, %dec_label_pc_82c4 ]
  store i32 %v3_81cc, i32* %r4.global-to-local, align 4
  ret i32 %v1_82c0

dec_label_pc_82c4:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_82a0, i32* %r0.global-to-local, align 4
  %v1_82c8 = inttoptr i32 %v0_82a0 to i8*
  %v2_82c8 = call i32 @function_12dec(i8* %v1_82c8)
  store i32 %v2_82c8, i32* %r0.global-to-local, align 4
  %v2_82cc = icmp ugt i32 %v2_82c8, 254
  store i1 %v2_82cc, i1* %cpsr_c.global-to-local, align 1
  %v7_82cc = icmp eq i32 %v2_82c8, 255
  store i1 %v7_82cc, i1* %cpsr_z.global-to-local, align 1
  %v8_82d0 = icmp sgt i32 %v2_82c8, 255
  br i1 %v8_82d0, label %dec_label_pc_82b4, label %dec_label_pc_82d4

dec_label_pc_82d4:                                ; preds = %dec_label_pc_82c4
  %v0_82d4 = load i32, i32* @r8, align 4
  store i32 %v0_82d4, i32* %r0.global-to-local, align 4
  %v1_82d8 = inttoptr i32 %v0_82d4 to i8*
  %v2_82d8 = call i32 @function_12dec(i8* %v1_82d8)
  store i32 %v2_82d8, i32* %r0.global-to-local, align 4
  %v2_82dc = icmp ugt i32 %v2_82d8, 126
  store i1 %v2_82dc, i1* %cpsr_c.global-to-local, align 1
  %v7_82dc = icmp eq i32 %v2_82d8, 127
  store i1 %v7_82dc, i1* %cpsr_z.global-to-local, align 1
  %v8_82e0 = icmp sgt i32 %v2_82d8, 127
  br i1 %v8_82e0, label %dec_label_pc_82b4, label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82d4
  %v0_82e4 = load i32, i32* @sl, align 4
  store i32 %v0_82e4, i32* %r0.global-to-local, align 4
  %v1_82e8 = inttoptr i32 %v0_82e4 to i8*
  %v2_82e8 = call i32 @function_12dec(i8* %v1_82e8)
  store i32 %v2_82e8, i32* %r0.global-to-local, align 4
  %v2_82ec = icmp ugt i32 %v2_82e8, 8
  store i1 %v2_82ec, i1* %cpsr_c.global-to-local, align 1
  %v7_82ec = icmp eq i32 %v2_82e8, 9
  store i1 %v7_82ec, i1* %cpsr_z.global-to-local, align 1
  %v7_82f0 = icmp sgt i32 %v2_82e8, 9
  br i1 %v7_82f0, label %dec_label_pc_82b4, label %bb158

bb158:                                            ; preds = %dec_label_pc_82e4
  %v10_82f0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v8_82f4 = load i32, i32* @r4, align 4
  %v10_82f4 = add i32 %v10_82f0, 356
  %v11_82f4 = inttoptr i32 %v10_82f4 to i32*
  store i32 %v8_82f4, i32* %v11_82f4, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %bb158, %bb162
  %v0_82fc = load i32, i32* @sl, align 4
  store i32 %v0_82fc, i32* %r0.global-to-local, align 4
  %v1_8300 = inttoptr i32 %v0_82fc to i8*
  %v2_8300 = call i32 @function_12dec(i8* %v1_8300)
  store i32 %v2_8300, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8308 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8308, i32* %ip.global-to-local, align 4
  %v3_830c = icmp uge i32 %v2_8300, %v3_8308
  store i1 %v3_830c, i1* %cpsr_c.global-to-local, align 1
  %v9_830c = icmp eq i32 %v2_8300, %v3_8308
  store i1 %v9_830c, i1* %cpsr_z.global-to-local, align 1
  %v7_8310 = icmp sgt i32 %v2_8300, %v3_8308
  br i1 %v7_8310, label %dec_label_pc_8314, label %dec_label_pc_8340

dec_label_pc_8314:                                ; preds = %dec_label_pc_82fc
  %v0_8314 = load i32, i32* @sl, align 4
  %v2_8314 = add i32 %v0_8314, %v3_8308
  %v3_8314 = inttoptr i32 %v2_8314 to i8*
  %v4_8314 = load i8, i8* %v3_8314, align 1
  %v6_8314 = zext i8 %v4_8314 to i32
  %v1_8318 = add nsw i32 %v6_8314, -32
  store i32 %v1_8318, i32* %r2.global-to-local, align 4
  %v1_831c = add nsw i32 %v6_8314, -97
  store i32 %v1_831c, i32* %r3.global-to-local, align 4
  %v2_8320 = icmp ugt i32 %v1_831c, 24
  store i1 %v2_8320, i1* %cpsr_c.global-to-local, align 1
  %v7_8320 = icmp eq i32 %v1_831c, 25
  store i1 %v7_8320, i1* %cpsr_z.global-to-local, align 1
  %v2_8324 = xor i1 %v2_8320, true
  %v3_8324 = or i1 %v7_8320, %v2_8324
  br i1 %v3_8324, label %bb159, label %bb160

bb159:                                            ; preds = %dec_label_pc_8314
  %v5_8324 = trunc i32 %v1_8318 to i8
  store i8 %v5_8324, i8* %v3_8314, align 1
  %v0_8328.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_8328.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb160

bb160:                                            ; preds = %dec_label_pc_8314, %bb159
  %v1_832c = phi i1 [ %v2_8320, %dec_label_pc_8314 ], [ %v1_8328.pre, %bb159 ]
  %v0_832c = phi i1 [ false, %dec_label_pc_8314 ], [ %v0_8328.pre, %bb159 ]
  %v2_8328 = xor i1 %v1_832c, true
  %v3_8328 = or i1 %v0_832c, %v2_8328
  br i1 %v3_8328, label %bb161, label %._crit_edge

._crit_edge:                                      ; preds = %bb160
  %v0_8334.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb162

bb161:                                            ; preds = %bb160
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v7_832c = load i32, i32* %v11_82f4, align 4
  store i32 %v7_832c, i32* %ip.global-to-local, align 4
  br label %bb162

bb162:                                            ; preds = %._crit_edge, %bb161
  %v0_8334 = phi i32 [ %v0_8334.pre, %._crit_edge ], [ %v7_832c, %bb161 ]
  store i32 %v10_82f0, i32* @lr, align 4
  %v1_8334 = add i32 %v0_8334, 1
  store i32 %v1_8334, i32* %ip.global-to-local, align 4
  store i32 %v1_8334, i32* %stack_var_-44, align 4
  br label %dec_label_pc_82fc

dec_label_pc_8340:                                ; preds = %dec_label_pc_82fc
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_8344 = call i32 @function_1255c(i32 36)
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_834c = call i32 @function_1255c(i32 37)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_8354 = call i32 @function_1255c(i32 38)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_835c = call i32 @function_1255c(i32 39)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_8364 = call i32 @function_1255c(i32 40)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_836c = call i32 @function_1255c(i32 41)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_8374 = call i32 @function_1255c(i32 42)
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_837c = call i32 @function_1255c(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_8384 = call i32 @function_1255c(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_838c = call i32 @function_1255c(i32 45)
  store i32 %v1_838c, i32* %r0.global-to-local, align 4
  %v0_8390 = load i32, i32* @r6, align 4
  %v3_8390 = icmp ugt i32 %v0_8390, 255
  store i1 %v3_8390, i1* %cpsr_c.global-to-local, align 1
  %v8_8390 = icmp eq i32 %v0_8390, 256
  store i1 %v8_8390, i1* %cpsr_z.global-to-local, align 1
  %v5_8394 = icmp slt i32 %v0_8390, 256
  br i1 %v5_8394, label %thread-pre-split, label %bb163

bb163:                                            ; preds = %dec_label_pc_8340
  store i32 256, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8340, %bb163
  %v0_839c = phi i32 [ 256, %bb163 ], [ %v0_8390, %dec_label_pc_8340 ]
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_83a0 = call i32 @function_1255c(i32 46)
  store i32 %v0_839c, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_83b0 = call i32 @function_13cd4(i32 %v0_839c, i32 3140)
  store i32 %v2_83b0, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_83b8 = icmp eq i32 %v0_839c, 0
  store i1 %v2_83b8, i1* %cpsr_z.global-to-local, align 1
  %tmp164 = icmp slt i32 %v0_839c, 1
  br i1 %tmp164, label %dec_label_pc_84d4, label %dec_label_pc_83c4

dec_label_pc_83c4:                                ; preds = %thread-pre-split
  store i32 %v2_83b0, i32* @r5, align 4
  store i32 0, i32* @sb, align 4
  %v2_83f0 = and i32 %arg1, 536870912
  %v3_83f0 = icmp ne i32 %v2_83f0, 0
  %v5_83f0 = mul i32 %arg1, 24
  %v2_83f4 = add i32 %v5_83f0, %arg2
  %v1_83f8 = add i32 %v2_83f4, 16
  %v2_83f8 = inttoptr i32 %v1_83f8 to i32*
  br label %dec_label_pc_83cc

dec_label_pc_83cc:                                ; preds = %dec_label_pc_9df8, %dec_label_pc_83c4
  %v1_83d8 = phi i32 [ %v1_9e14, %dec_label_pc_9df8 ], [ %v2_83b0, %dec_label_pc_83c4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_83d8 = inttoptr i32 %v1_83d8 to i32*
  store i32 -1, i32* %v2_83d8, align 4
  %v0_83dc = load i32, i32* %r3.global-to-local, align 4
  %v1_83dc = trunc i32 %v0_83dc to i8
  %v2_83dc = load i32, i32* @r5, align 4
  %v3_83dc = add i32 %v2_83dc, 4
  %v4_83dc = inttoptr i32 %v3_83dc to i8*
  store i8 %v1_83dc, i8* %v4_83dc, align 1
  %v0_83e0 = load i32, i32* @sb, align 4
  store i32 %v0_83e0, i32* %r0.global-to-local, align 4
  %v2_83e4 = call i32 @function_13628(i32 %v0_83e0, i32 %arg1)
  store i32 %v2_83e4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i1 %v3_83f0, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_83f0, i32* %r3.global-to-local, align 4
  store i32 %v2_83f4, i32* @r6, align 4
  %v3_83f8 = load i32, i32* %v2_83f8, align 4
  store i32 %v3_83f8, i32* %r2.global-to-local, align 4
  %v0_83fc = load i32, i32* @r5, align 4
  %v1_83fc = add i32 %v0_83fc, 532
  store i32 %v1_83fc, i32* @fp, align 4
  store i32 %v1_83fc, i32* @r0, align 4
  %v0_8404 = load i32, i32* @r7, align 4
  store i32 %v0_8404, i32* %r1.global-to-local, align 4
  %v2_8408 = add i32 %v0_83fc, 16
  %v3_8408 = inttoptr i32 %v2_8408 to i32*
  store i32 %v3_83f8, i32* %v3_8408, align 4
  %v2_840c = inttoptr i32 %v1_83fc to i8*
  %v3_840c = call i32 @function_12e14(i8* %v2_840c, i32 %v0_8404)
  store i32 %v3_840c, i32* %r0.global-to-local, align 4
  %v0_8410 = load i32, i32* @r5, align 4
  %v1_8410 = add i32 %v0_8410, 532
  %v2_8410 = inttoptr i32 %v1_8410 to i8*
  %v3_8410 = load i8, i8* %v2_8410, align 1
  %v4_8410 = zext i8 %v3_8410 to i32
  store i32 %v4_8410, i32* %r3.global-to-local, align 4
  %v2_8414 = icmp ugt i8 %v3_8410, 46
  store i1 %v2_8414, i1* %cpsr_c.global-to-local, align 1
  %v7_8414 = icmp eq i8 %v3_8410, 47
  store i1 %v7_8414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8414, label %dec_label_pc_8440, label %dec_label_pc_841c

dec_label_pc_841c:                                ; preds = %dec_label_pc_83cc
  %v0_841c = load i32, i32* @fp, align 4
  store i32 %v0_841c, i32* %r0.global-to-local, align 4
  %v1_8420 = inttoptr i32 %v0_841c to i8*
  %v2_8420 = call i32 @function_12dec(i8* %v1_8420)
  store i32 %v2_8420, i32* %r2.global-to-local, align 4
  %v0_8428 = load i32, i32* @r5, align 4
  %v1_842c = add i32 %v0_8428, 533
  store i32 %v1_842c, i32* %r0.global-to-local, align 4
  %v0_8430 = load i32, i32* @fp, align 4
  store i32 %v0_8430, i32* %r1.global-to-local, align 4
  %v3_8434 = inttoptr i32 %v1_842c to i8*
  %v4_8434 = call i32 @function_15ec4(i8* %v3_8434, i32 %v0_8430, i32 %v2_8420)
  store i32 %v4_8434, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_843c = load i32, i32* @r5, align 4
  %v3_843c = add i32 %v2_843c, 532
  %v4_843c = inttoptr i32 %v3_843c to i8*
  store i8 47, i8* %v4_843c, align 1
  %v0_8444.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_83cc, %dec_label_pc_841c
  %v0_8444 = phi i32 [ %v0_8410, %dec_label_pc_83cc ], [ %v0_8444.pre, %dec_label_pc_841c ]
  %v0_8440 = load i32, i32* @sl, align 4
  store i32 %v0_8440, i32* %r1.global-to-local, align 4
  %v1_8444 = add i32 %v0_8444, 1440
  store i32 %v1_8444, i32* @r0, align 4
  %v2_8448 = inttoptr i32 %v1_8444 to i8*
  %v3_8448 = call i32 @function_12e14(i8* %v2_8448, i32 %v0_8440)
  %v0_844c = load i32, i32* @r5, align 4
  %v0_8450 = load i32, i32* @sl, align 4
  store i32 %v0_8450, i32* %r1.global-to-local, align 4
  %v1_8454 = add i32 %v0_844c, 1431
  store i32 %v1_8454, i32* @r0, align 4
  %v2_8458 = inttoptr i32 %v1_8454 to i8*
  %v3_8458 = call i32 @function_12e14(i8* %v2_8458, i32 %v0_8450)
  %v0_845c = load i32, i32* @r5, align 4
  %v1_8460 = add i32 %v0_845c, 789
  store i32 %v1_8460, i32* @r0, align 4
  %v0_8464 = load i32, i32* @r8, align 4
  store i32 %v0_8464, i32* %r1.global-to-local, align 4
  %v2_8468 = inttoptr i32 %v1_8460 to i8*
  %v3_8468 = call i32 @function_12e14(i8* %v2_8468, i32 %v0_8464)
  store i32 %v3_8468, i32* %r0.global-to-local, align 4
  %v0_846c = load i32, i32* @r6, align 4
  %v1_846c = add i32 %v0_846c, 20
  %v2_846c = inttoptr i32 %v1_846c to i8*
  %v3_846c = load i8, i8* %v2_846c, align 1
  %v4_846c = zext i8 %v3_846c to i32
  store i32 %v4_846c, i32* %r3.global-to-local, align 4
  %v2_8470 = icmp ugt i8 %v3_846c, 30
  store i1 %v2_8470, i1* %cpsr_c.global-to-local, align 1
  %v7_8470 = icmp eq i8 %v3_846c, 31
  store i1 %v7_8470, i1* %cpsr_z.global-to-local, align 1
  %v2_8474 = xor i1 %v7_8470, true
  %v3_8474 = and i1 %v2_8470, %v2_8474
  br i1 %v3_8474, label %dec_label_pc_8498, label %dec_label_pc_8478

dec_label_pc_8478:                                ; preds = %dec_label_pc_8440
  %v1_8478 = add i32 %v0_846c, 16
  %v2_8478 = inttoptr i32 %v1_8478 to i32*
  %v3_8478 = load i32, i32* %v2_8478, align 4
  store i32 %v3_8478, i32* %r0.global-to-local, align 4
  %v1_847c = call i32 @function_15498(i32 %v3_8478)
  store i32 %v1_847c, i32* %r0.global-to-local, align 4
  store i32 %v1_847c, i32* @r4, align 4
  %v0_8484 = call i32 @function_10038()
  store i32 %v0_8484, i32* %r0.global-to-local, align 4
  %v0_8488 = load i32, i32* @r6, align 4
  %v1_8488 = add i32 %v0_8488, 20
  %v2_8488 = inttoptr i32 %v1_8488 to i8*
  %v3_8488 = load i8, i8* %v2_8488, align 1
  %v4_8488 = zext i8 %v3_8488 to i32
  store i32 %v4_8488, i32* %r3.global-to-local, align 4
  %v0_848c = load i32, i32* @r4, align 4
  %v3_848c = add nsw i32 %v4_8488, -1
  %v4_848c = shl i32 1, %v3_848c
  %v5_848c = and i32 %v4_848c, %v0_8484
  %v6_848c = icmp ne i32 %v5_848c, 0
  store i1 %v6_848c, i1* %cpsr_c.global-to-local, align 1
  %v7_848c = lshr i32 %v0_8484, %v4_8488
  %v8_848c = add i32 %v7_848c, %v0_848c
  store i32 %v8_848c, i32* %r0.global-to-local, align 4
  %v1_8490 = call i32 @function_152f0(i32 %v8_848c)
  store i32 %v1_8490, i32* %r0.global-to-local, align 4
  %v1_8494 = load i32, i32* @r5, align 4
  %v2_8494 = add i32 %v1_8494, 16
  %v3_8494 = inttoptr i32 %v2_8494 to i32*
  store i32 %v1_8490, i32* %v3_8494, align 4
  br label %dec_label_pc_8498

dec_label_pc_8498:                                ; preds = %dec_label_pc_8440, %dec_label_pc_8478
  %v0_8498 = call i32 @function_10038()
  %v3_84a4 = udiv i32 %v0_8498, 5
  store i32 %v3_84a4, i32* %r2.global-to-local, align 4
  store i32 %v3_84a4, i32* %r3.global-to-local, align 4
  %v2_84b0 = sub i32 %v0_8498, %v3_84a4
  store i32 %v2_84b0, i32* %r0.global-to-local, align 4
  %v7_84b4 = icmp eq i32 %v2_84b0, 4
  store i1 %v7_84b4, i1* %cpsr_z.global-to-local, align 1
  %v5_84b8 = and i32 %v2_84b0, 1073741824
  %v6_84b8 = icmp ne i32 %v5_84b8, 0
  store i1 %v6_84b8, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_84b0, label %dec_label_pc_9df8 [
    i32 0, label %dec_label_pc_9eac
    i32 1, label %dec_label_pc_9e80
    i32 2, label %dec_label_pc_9ed8
    i32 3, label %dec_label_pc_9dd0
    i32 4, label %dec_label_pc_9e40
  ]

dec_label_pc_84d4:                                ; preds = %thread-pre-split
  %v1_84e4 = add i32 %v2_83b0, 1452
  store i32 %v1_84e4, i32* %ip.global-to-local, align 4
  %v2_84e8 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_84e8, i32* @lr, align 4
  br label %dec_label_pc_84f4.preheader

dec_label_pc_84f4.preheader:                      ; preds = %dec_label_pc_84d4, %dec_label_pc_9e1c
  %stack_var_-20860.0.ph = phi i32 [ %v2_9e30, %dec_label_pc_9e1c ], [ %v2_84e8, %dec_label_pc_84d4 ]
  %stack_var_-20868.0.ph = phi i32 [ %v1_9e2c, %dec_label_pc_9e1c ], [ %v1_84e4, %dec_label_pc_84d4 ]
  %v2_865c = ptrtoint i32* %stack_var_-144 to i32
  %v2_8674 = ptrtoint i32* %stack_var_-44 to i32
  %v2_86bc = ptrtoint i32* %stack_var_-76 to i32
  %v2_86d8 = ptrtoint i32* %stack_var_-40 to i32
  %v1_88b8 = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_8c14 = icmp eq i32 %v6_81f8, 0
  %v1_8b10 = inttoptr i32 %v6_81f8 to i8*
  %v2_8740 = ptrtoint i32* %stack_var_-60 to i32
  %v2_8744 = ptrtoint i32* %stack_var_-204 to i32
  %v2_8748 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8828 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8834 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_84f4

dec_label_pc_84f4:                                ; preds = %dec_label_pc_8720, %dec_label_pc_8554, %dec_label_pc_8718, %dec_label_pc_87b4, %dec_label_pc_84f4.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_84f8 = call i32 @function_16598(i32* null)
  store i32 %v2_84f8, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 20680, i32* %ip.global-to-local, align 4
  %v2_8524213 = load i32, i32* @sp, align 4
  %v3_8524214 = add i32 %v2_8524213, 20680
  %v4_8524215 = inttoptr i32 %v3_8524214 to i32*
  store i32 0, i32* %v4_8524215, align 4
  br label %dec_label_pc_8510.dec_label_pc_8510_crit_edge

dec_label_pc_8510.dec_label_pc_8510_crit_edge:    ; preds = %dec_label_pc_84f4, %dec_label_pc_8510.dec_label_pc_8510_crit_edge
  %v0_8510.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8514 = add i32 %v0_8510.pre, 4
  store i32 %v1_8514, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_851c = add i32 %v0_8510.pre, 20676
  store i32 %v1_851c, i32* %ip.global-to-local, align 4
  %v7_8520 = icmp eq i32 %v1_8514, 128
  %v2_8524 = load i32, i32* @sp, align 4
  %v3_8524 = add i32 %v2_8524, %v1_851c
  %v4_8524 = inttoptr i32 %v3_8524 to i32*
  store i32 0, i32* %v4_8524, align 4
  br i1 %v7_8520, label %dec_label_pc_852c, label %dec_label_pc_8510.dec_label_pc_8510_crit_edge

dec_label_pc_852c:                                ; preds = %dec_label_pc_8510.dec_label_pc_8510_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* @lr, align 4
  %v0_8530 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8530, i32* %stack_var_-332, align 4
  %v0_8534 = load i32, i32* %r3.global-to-local, align 4
  %v1_853c216 = add i32 %v0_8534, -120
  store i32 %v1_853c216, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8544217 = add i32 %v0_8534, 20424
  store i32 %v1_8544217, i32* %r1.global-to-local, align 4
  %v7_8548218 = icmp eq i32 %v1_853c216, 128
  %v2_854c219 = load i32, i32* @sp, align 4
  %v3_854c220 = add i32 %v2_854c219, %v1_8544217
  %v4_854c221 = inttoptr i32 %v3_854c220 to i32*
  store i32 0, i32* %v4_854c221, align 4
  br i1 %v7_8548218, label %dec_label_pc_8554, label %dec_label_pc_8538.dec_label_pc_8538_crit_edge

dec_label_pc_8538.dec_label_pc_8538_crit_edge:    ; preds = %dec_label_pc_852c, %dec_label_pc_8538.dec_label_pc_8538_crit_edge
  %v0_8538.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_853c = add i32 %v0_8538.pre, 4
  store i32 %v1_853c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8544 = add i32 %v0_8538.pre, 20548
  store i32 %v1_8544, i32* %r1.global-to-local, align 4
  %v7_8548 = icmp eq i32 %v1_853c, 128
  %v2_854c = load i32, i32* @sp, align 4
  %v3_854c = add i32 %v2_854c, %v1_8544
  %v4_854c = inttoptr i32 %v3_854c to i32*
  store i32 0, i32* %v4_854c, align 4
  br i1 %v7_8548, label %dec_label_pc_8554, label %dec_label_pc_8538.dec_label_pc_8538_crit_edge

dec_label_pc_8554:                                ; preds = %dec_label_pc_8538.dec_label_pc_8538_crit_edge, %dec_label_pc_852c
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v1_8558 = load i32, i32* %r0.global-to-local, align 4
  %v3_8558 = icmp uge i32 %v0_839c, %v1_8558
  store i1 %v3_8558, i1* %cpsr_c.global-to-local, align 1
  %v9_8558 = icmp eq i32 %v0_839c, %v1_8558
  store i1 %v9_8558, i1* %cpsr_z.global-to-local, align 1
  %v7_855c = icmp sgt i32 %v0_839c, %v1_8558
  br i1 %v7_855c, label %dec_label_pc_8560, label %dec_label_pc_84f4

dec_label_pc_8560:                                ; preds = %dec_label_pc_8554
  store i32 %stack_var_-20868.0.ph, i32* @sl, align 4
  store i32 %v1_8558, i32* @r8, align 4
  store i32 %stack_var_-20868.0.ph, i32* @r6, align 4
  store i32 %v1_8558, i32* @r7, align 4
  br label %dec_label_pc_85d4

dec_label_pc_8574:                                ; preds = %dec_label_pc_85e8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_8574 = icmp eq i8 %v3_85d4, 2
  store i1 %v7_8574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8574, label %dec_label_pc_8cb4, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_8574
  %v2_857c = icmp ugt i8 %v3_85d4, 3
  store i1 %v2_857c, i1* %cpsr_c.global-to-local, align 1
  %v7_857c = icmp eq i8 %v3_85d4, 4
  store i1 %v7_857c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_857c, label %dec_label_pc_8884, label %dec_label_pc_8584

dec_label_pc_8584:                                ; preds = %dec_label_pc_857c
  %v1_8584 = add nsw i32 %v4_85d4, -6
  %v2_8584 = icmp ugt i8 %v3_85d4, 5
  store i1 %v2_8584, i1* %cpsr_c.global-to-local, align 1
  %v7_8584 = icmp eq i8 %v3_85d4, 6
  store i1 %v7_8584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8584, label %dec_label_pc_8d4c, label %dec_label_pc_858c

dec_label_pc_858c:                                ; preds = %dec_label_pc_8584
  %v2_858c = icmp ugt i8 %v3_85d4, 6
  store i1 %v2_858c, i1* %cpsr_c.global-to-local, align 1
  %v7_858c = icmp eq i8 %v3_85d4, 7
  store i1 %v7_858c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_858c, label %dec_label_pc_8f84, label %dec_label_pc_8594

dec_label_pc_8594:                                ; preds = %dec_label_pc_858c
  %v2_8594 = icmp ugt i8 %v3_85d4, 9
  store i1 %v2_8594, i1* %cpsr_c.global-to-local, align 1
  %v7_8594 = icmp eq i8 %v3_85d4, 10
  store i1 %v7_8594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8594, label %dec_label_pc_8fd8, label %dec_label_pc_859c

dec_label_pc_859c:                                ; preds = %dec_label_pc_8594
  %v1_859c = add nsw i32 %v4_85d4, -11
  %v2_859c = icmp ugt i8 %v3_85d4, 10
  store i1 %v2_859c, i1* %cpsr_c.global-to-local, align 1
  %v7_859c = icmp eq i8 %v3_85d4, 11
  store i1 %v7_859c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_859c, label %dec_label_pc_9574, label %dec_label_pc_85a4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_8cb4, %dec_label_pc_859c
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_85d4, align 1
  %v0_85ac = load i32, i32* @r6, align 4
  %v1_85ac = add i32 %v0_85ac, -1452
  %v2_85ac = inttoptr i32 %v1_85ac to i32*
  %v3_85ac = load i32, i32* %v2_85ac, align 4
  store i32 %v3_85ac, i32* @r0, align 4
  %v1_85b0 = call i32 @function_165e8(i32 %v3_85ac)
  store i32 %v1_85b0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_85b8 = load i32, i32* @r6, align 4
  %v2_85b8 = add i32 %v1_85b8, -1452
  %v3_85b8 = inttoptr i32 %v2_85b8 to i32*
  store i32 -1, i32* %v3_85b8, align 4
  br label %dec_label_pc_85bc

dec_label_pc_85bc:                                ; preds = %dec_label_pc_8d4c, %dec_label_pc_86e0, %dec_label_pc_85f0, %dec_label_pc_8fd8, %dec_label_pc_8f84, %dec_label_pc_9574, %bb168, %dec_label_pc_85a4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_85c0 = load i32, i32* @r7, align 4
  %v1_85c0 = add i32 %v0_85c0, 1
  store i32 %v1_85c0, i32* @r7, align 4
  %v0_85c4 = load i32, i32* @r6, align 4
  %v3_85c8 = icmp uge i32 %v1_85c0, %v0_839c
  store i1 %v3_85c8, i1* %cpsr_c.global-to-local, align 1
  %v9_85c8 = icmp eq i32 %v1_85c0, %v0_839c
  store i1 %v9_85c8, i1* %cpsr_z.global-to-local, align 1
  %v1_85cc = add i32 %v0_85c4, 3140
  store i32 %v1_85cc, i32* @r6, align 4
  br i1 %v9_85c8, label %dec_label_pc_85bc.dec_label_pc_8718_crit_edge, label %dec_label_pc_85d4

dec_label_pc_85bc.dec_label_pc_8718_crit_edge:    ; preds = %dec_label_pc_85bc
  %v0_8718.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8718

dec_label_pc_85d4:                                ; preds = %dec_label_pc_8700, %dec_label_pc_85bc, %dec_label_pc_8560
  %v3_8878 = phi i32 [ %stack_var_-20868.0.ph, %dec_label_pc_8560 ], [ %v1_85cc, %dec_label_pc_85bc ], [ %v1_8710, %dec_label_pc_8700 ]
  %v1_85d4 = add i32 %v3_8878, -1448
  %v2_85d4 = inttoptr i32 %v1_85d4 to i8*
  %v3_85d4 = load i8, i8* %v2_85d4, align 1
  %v4_85d4 = zext i8 %v3_85d4 to i32
  store i32 %v4_85d4, i32* %r3.global-to-local, align 4
  %v2_85dc = icmp ne i8 %v3_85d4, 0
  store i1 %v2_85dc, i1* %cpsr_c.global-to-local, align 1
  %v6_85dc = icmp eq i8 %v3_85d4, 0
  %v7_85dc = icmp eq i8 %v3_85d4, 1
  store i1 %v7_85dc, i1* %cpsr_z.global-to-local, align 1
  %v1_85e0 = add i32 %v3_8878, -1452
  store i32 %v1_85e0, i32* @r5, align 4
  br i1 %v7_85dc, label %dec_label_pc_886c, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85d4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_85dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_85dc, label %dec_label_pc_85f0, label %dec_label_pc_8574

dec_label_pc_85f0:                                ; preds = %.thread18.dec_label_pc_85f0_crit_edge, %dec_label_pc_85e8
  %v0_85f0 = phi i32 [ %v0_85f0.pre, %.thread18.dec_label_pc_85f0_crit_edge ], [ %v3_8878, %dec_label_pc_85e8 ]
  %v1_85f0 = add i32 %v0_85f0, -1452
  %v2_85f0 = inttoptr i32 %v1_85f0 to i32*
  %v3_85f0 = load i32, i32* %v2_85f0, align 4
  store i32 %v3_85f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v2_85fc = icmp eq i32 %v3_85f0, -1
  store i1 %v2_85fc, i1* %cpsr_c.global-to-local, align 1
  %v7_85fc = icmp eq i32 %v3_85f0, -1
  store i1 %v7_85fc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 34324, i32* @lr, align 4
  %v1_8610 = xor i1 %v7_85fc, true
  call void @__pseudo_cond_branch(i1 %v1_8610, i32 ptrtoint (i32* @global_var_165e8.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_861c = load i32, i32* @r5, align 4
  store i32 %v0_861c, i32* %r2.global-to-local, align 4
  %v3_8620 = call i32 @function_1561c(i32 2, i32 1, i32 %v0_861c)
  store i32 %v3_8620, i32* %r0.global-to-local, align 4
  %v2_8624 = icmp eq i32 %v3_8620, -1
  store i1 %v2_8624, i1* %cpsr_c.global-to-local, align 1
  %v7_8624 = icmp eq i32 %v3_8620, -1
  store i1 %v7_8624, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8620, i32* @r4, align 4
  %v1_862c = load i32, i32* @r6, align 4
  %v2_862c = add i32 %v1_862c, -1452
  %v3_862c = inttoptr i32 %v2_862c to i32*
  store i32 %v3_8620, i32* %v3_862c, align 4
  br i1 %v7_8624, label %dec_label_pc_85bc, label %dec_label_pc_8634

dec_label_pc_8634:                                ; preds = %dec_label_pc_85f0
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8638 = load i32, i32* @r5, align 4
  store i32 %v0_8638, i32* %r2.global-to-local, align 4
  %v3_863c = call i32 @function_13a30(i32 %v3_8620, i32 3, i32 %v0_8638)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_8644 = or i32 %v3_863c, 2048
  store i32 %v1_8644, i32* %r2.global-to-local, align 4
  %v0_8648 = load i32, i32* @r4, align 4
  store i32 %v0_8648, i32* %r0.global-to-local, align 4
  %v3_864c = call i32 @function_13a30(i32 %v0_8648, i32 4, i32 %v1_8644)
  store i32 %v3_864c, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %ip.global-to-local, align 4
  store i32 %v2_865c, i32* %r3.global-to-local, align 4
  %v0_8660 = load i32, i32* @r6, align 4
  %v1_8660 = add i32 %v0_8660, -1452
  %v2_8660 = inttoptr i32 %v1_8660 to i32*
  %v3_8660 = load i32, i32* %v2_8660, align 4
  store i32 %v3_8660, i32* @r0, align 4
  %v0_8664 = load i32, i32* @r5, align 4
  store i32 %v0_8664, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %stack_var_-44, align 4
  store i32 8, i32* @r2, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_8674, i32* %r3.global-to-local, align 4
  %v5_867c = call i32 @function_155ac(i32 %v3_8660, i32 %v0_8664, i32 8, i32 %v2_8674, i32 4)
  store i32 %v5_867c, i32* %r0.global-to-local, align 4
  %v0_8680 = load i32, i32* @r6, align 4
  %v1_8680 = add i32 %v0_8680, -1436
  %v2_8680 = inttoptr i32 %v1_8680 to i32*
  %v3_8680 = load i32, i32* %v2_8680, align 4
  store i32 %v3_8680, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  store i32 2, i32* @r4, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %v3_828c, i32* %r0.global-to-local, align 4
  %v1_869c = call i32 @function_15314(i32 %v3_828c)
  store i32 %v1_869c, i32* %r0.global-to-local, align 4
  store i32 %v2_865c, i32* %r3.global-to-local, align 4
  %v0_86a8 = load i32, i32* @r4, align 4
  %v1_86a8 = trunc i32 %v0_86a8 to i8
  %v2_86a8 = load i32, i32* @r6, align 4
  %v3_86a8 = add i32 %v2_86a8, -1448
  %v4_86a8 = inttoptr i32 %v3_86a8 to i8*
  store i8 %v1_86a8, i8* %v4_86a8, align 1
  store i32 %v2_84f8, i32* %ip.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v1_86b8 = load i32, i32* @r6, align 4
  %v2_86b8 = add i32 %v1_86b8, -1444
  %v3_86b8 = inttoptr i32 %v2_86b8 to i32*
  store i32 %v2_84f8, i32* %v3_86b8, align 4
  store i32 %v2_86bc, i32* %r1.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r6, align 4
  %v1_86c0 = add i32 %v0_86c0, -1452
  %v2_86c0 = inttoptr i32 %v1_86c0 to i32*
  %v3_86c0 = load i32, i32* %v2_86c0, align 4
  store i32 %v3_86c0, i32* %r0.global-to-local, align 4
  %v3_86c4 = call i32 @function_15260(i32 %v3_86c0, i32 %v2_86bc, i32 16)
  store i32 %v3_86c4, i32* %r0.global-to-local, align 4
  %v0_86c8 = load i32, i32* @r6, align 4
  %v1_86c8 = add i32 %v0_86c8, -1452
  %v2_86c8 = inttoptr i32 %v1_86c8 to i32*
  %v3_86c8 = load i32, i32* %v2_86c8, align 4
  store i32 %v3_86c8, i32* %ip.global-to-local, align 4
  %v3_86d0 = udiv i32 %v3_86c8, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_86d4 = mul nuw nsw i32 %v3_86d0, 4
  store i32 %v3_86d4, i32* %r2.global-to-local, align 4
  store i32 %v2_86d8, i32* @lr, align 4
  br label %dec_label_pc_86e0

dec_label_pc_86e0:                                ; preds = %dec_label_pc_8cc8, %dec_label_pc_8634
  %v0_86f0 = phi i32 [ %v3_86c8, %dec_label_pc_8634 ], [ %v3_8cc8, %dec_label_pc_8cc8 ]
  %v3_86d4.pn = phi i32 [ %v3_86d4, %dec_label_pc_8634 ], [ %v3_8cd4, %dec_label_pc_8cc8 ]
  %storemerge = add i32 %v3_86d4.pn, %v2_86d8
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_86e0 = add i32 %storemerge, -292
  %v2_86e0 = inttoptr i32 %v1_86e0 to i32*
  %v3_86e0 = load i32, i32* %v2_86e0, align 4
  %v1_86e4 = urem i32 %v0_86f0, 32
  store i32 %v1_86e4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_86ec = shl i32 1, %v1_86e4
  %v8_86ec = or i32 %v3_86e0, %v7_86ec
  store i32 %v8_86ec, i32* %r1.global-to-local, align 4
  %v1_86f0 = load i32, i32* @r8, align 4
  %v2_86f0 = sub i32 %v0_86f0, %v1_86f0
  %v3_86f0 = icmp uge i32 %v0_86f0, %v1_86f0
  store i1 %v3_86f0, i1* %cpsr_c.global-to-local, align 1
  %v4_86f0 = xor i32 %v1_86f0, %v0_86f0
  %v5_86f0 = xor i32 %v2_86f0, %v0_86f0
  %v6_86f0 = and i32 %v5_86f0, %v4_86f0
  %v7_86f0 = icmp slt i32 %v6_86f0, 0
  %v8_86f0 = icmp slt i32 %v2_86f0, 0
  %v9_86f0 = icmp eq i32 %v0_86f0, %v1_86f0
  store i1 %v9_86f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_86ec, i32* %v2_86e0, align 4
  %v3_86f8 = xor i1 %v8_86f0, %v7_86f0
  %v4_86f8 = or i1 %v9_86f0, %v3_86f8
  br i1 %v4_86f8, label %dec_label_pc_85bc, label %dec_label_pc_86fc

dec_label_pc_86fc:                                ; preds = %dec_label_pc_86e0
  %v0_86fc = load i32, i32* %ip.global-to-local, align 4
  %v1_86fc = load i32, i32* %r3.global-to-local, align 4
  %v2_86fc = add i32 %v1_86fc, %v0_86fc
  store i32 %v2_86fc, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8700:                                ; preds = %dec_label_pc_8d80, %dec_label_pc_900c, %dec_label_pc_8fb8, %dec_label_pc_86fc
  %v0_871860 = phi i32 [ %v2_8d80, %dec_label_pc_8d80 ], [ %v2_900c, %dec_label_pc_900c ], [ %v2_8fb8, %dec_label_pc_8fb8 ], [ %v2_86fc, %dec_label_pc_86fc ]
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_8704 = load i32, i32* @r7, align 4
  %v1_8704 = add i32 %v0_8704, 1
  store i32 %v1_8704, i32* @r7, align 4
  %v0_8708 = load i32, i32* @r6, align 4
  %v3_870c = icmp uge i32 %v1_8704, %v0_839c
  store i1 %v3_870c, i1* %cpsr_c.global-to-local, align 1
  %v9_870c = icmp eq i32 %v1_8704, %v0_839c
  store i1 %v9_870c, i1* %cpsr_z.global-to-local, align 1
  %v1_8710 = add i32 %v0_8708, 3140
  store i32 %v1_8710, i32* @r6, align 4
  br i1 %v9_870c, label %dec_label_pc_8718, label %dec_label_pc_85d4

dec_label_pc_8718:                                ; preds = %dec_label_pc_8700, %dec_label_pc_85bc.dec_label_pc_8718_crit_edge
  %v0_8750 = phi i32 [ %v0_8718.pre, %dec_label_pc_85bc.dec_label_pc_8718_crit_edge ], [ %v0_871860, %dec_label_pc_8700 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8718 = icmp eq i32 %v0_8750, 0
  store i1 %v2_8718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8718, label %dec_label_pc_84f4, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_8718
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8740, i32* %ip.global-to-local, align 4
  store i32 %v2_8744, i32* %r1.global-to-local, align 4
  store i32 %v2_8748, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8750, i32* %r0.global-to-local, align 4
  %v5_8758 = call i32 @function_157a0(i32 %v0_8750, i32 %v2_8744, i32 %v2_8748, i32 0, i32 %v2_8740)
  store i32 %v5_8758, i32* @r4, align 4
  %v0_8760 = load i32, i32* @r5, align 4
  store i32 %v0_8760, i32* %r0.global-to-local, align 4
  %v1_8764 = inttoptr i32 %v0_8760 to i32*
  %v2_8764 = call i32 @function_16598(i32* %v1_8764)
  store i32 %v2_8764, i32* %r0.global-to-local, align 4
  %v0_8768 = load i32, i32* @r4, align 4
  %v1_8768 = load i32, i32* @r5, align 4
  %v3_8768 = icmp uge i32 %v0_8768, %v1_8768
  store i1 %v3_8768, i1* %cpsr_c.global-to-local, align 1
  %v9_8768 = icmp eq i32 %v0_8768, %v1_8768
  store i1 %v9_8768, i1* %cpsr_z.global-to-local, align 1
  %v7_8770 = icmp sgt i32 %v0_8768, %v1_8768
  br i1 %v7_8770, label %dec_label_pc_8774, label %dec_label_pc_84f4

dec_label_pc_8774:                                ; preds = %dec_label_pc_8720
  %v0_87d4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_87d4

dec_label_pc_877c:                                ; preds = %dec_label_pc_87e8, %dec_label_pc_8854
  %v1_878c = phi i32 [ %v1_8800, %dec_label_pc_87e8 ], [ %v1_878c.pre, %dec_label_pc_8854 ]
  %v0_8784 = phi i32 [ %v3_87f0, %dec_label_pc_87e8 ], [ %v0_8784.pre, %dec_label_pc_8854 ]
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  %v2_8784 = add i32 %v0_8784, %v2_86d8
  store i32 %v2_8784, i32* %r2.global-to-local, align 4
  %v1_8788 = add i32 %v2_8784, -164
  %v2_8788 = inttoptr i32 %v1_8788 to i32*
  %v3_8788 = load i32, i32* %v2_8788, align 4
  %v2_878c = add i32 %v1_878c, -1
  %v3_878c = shl i32 1, %v2_878c
  %v4_878c = and i32 %v3_8788, %v3_878c
  %v5_878c = icmp ne i32 %v4_878c, 0
  store i1 %v5_878c, i1* %cpsr_c.global-to-local, align 1
  %v6_878c = lshr i32 %v3_8788, %v1_878c
  store i32 %v6_878c, i32* %r3.global-to-local, align 4
  %v1_8790 = urem i32 %v6_878c, 2
  %v2_8790 = icmp eq i32 %v1_8790, 0
  store i1 %v2_8790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8790, label %dec_label_pc_87b4, label %dec_label_pc_8798

dec_label_pc_8798:                                ; preds = %dec_label_pc_877c
  %v0_8798 = load i32, i32* @sl, align 4
  %v1_8798 = add i32 %v0_8798, -1448
  %v2_8798 = inttoptr i32 %v1_8798 to i8*
  %v3_8798 = load i8, i8* %v2_8798, align 1
  %v4_8798 = zext i8 %v3_8798 to i32
  store i32 %v4_8798, i32* %r3.global-to-local, align 4
  %v2_879c = icmp ugt i8 %v3_8798, 5
  store i1 %v2_879c, i1* %cpsr_c.global-to-local, align 1
  %v7_879c = icmp eq i8 %v3_8798, 6
  store i1 %v7_879c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_879c, label %dec_label_pc_9054, label %dec_label_pc_87a4

dec_label_pc_87a4:                                ; preds = %dec_label_pc_8798
  %v2_87a4 = icmp ugt i8 %v3_8798, 6
  store i1 %v2_87a4, i1* %cpsr_c.global-to-local, align 1
  %v7_87a4 = icmp eq i8 %v3_8798, 7
  store i1 %v7_87a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87a4, label %dec_label_pc_8d88, label %dec_label_pc_87ac

dec_label_pc_87ac:                                ; preds = %dec_label_pc_87a4
  %v2_87ac = icmp ugt i8 %v3_8798, 9
  store i1 %v2_87ac, i1* %cpsr_c.global-to-local, align 1
  %v7_87ac = icmp eq i8 %v3_8798, 10
  store i1 %v7_87ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87ac, label %dec_label_pc_8ce4, label %dec_label_pc_87b4

dec_label_pc_87b4:                                ; preds = %dec_label_pc_8e84, %dec_label_pc_95ac, %dec_label_pc_959c, %dec_label_pc_8d34, %dec_label_pc_87ac, %dec_label_pc_877c, %dec_label_pc_87d4, %dec_label_pc_90a4, %dec_label_pc_9b54, %dec_label_pc_9a00, %dec_label_pc_9978, %dec_label_pc_991c, %dec_label_pc_9704, %dec_label_pc_95bc, %dec_label_pc_8d40, %dec_label_pc_8fc0
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_87bc = add i32 %stack_var_-20824.0, 1
  store i32 %v1_87bc, i32* %r2.global-to-local, align 4
  %v0_87c0 = load i32, i32* @sl, align 4
  %v3_87c4 = icmp uge i32 %v1_87bc, %v0_839c
  store i1 %v3_87c4, i1* %cpsr_c.global-to-local, align 1
  %v9_87c4 = icmp eq i32 %v1_87bc, %v0_839c
  store i1 %v9_87c4, i1* %cpsr_z.global-to-local, align 1
  %v1_87cc = add i32 %v0_87c0, 3140
  store i32 %v1_87cc, i32* @sl, align 4
  br i1 %v9_87c4, label %dec_label_pc_84f4, label %dec_label_pc_87d4

dec_label_pc_87d4:                                ; preds = %dec_label_pc_87b4, %dec_label_pc_8774
  %stack_var_-20824.0 = phi i32 [ %v1_8768, %dec_label_pc_8774 ], [ %v1_87bc, %dec_label_pc_87b4 ]
  %v0_87d4 = phi i32 [ %v0_87d4.pre, %dec_label_pc_8774 ], [ %v1_87cc, %dec_label_pc_87b4 ]
  %v1_87d4 = add i32 %v0_87d4, -1452
  %v2_87d4 = inttoptr i32 %v1_87d4 to i32*
  %v3_87d4 = load i32, i32* %v2_87d4, align 4
  store i32 %v3_87d4, i32* %r0.global-to-local, align 4
  %v2_87dc = icmp eq i32 %v3_87d4, -1
  store i1 %v2_87dc, i1* %cpsr_c.global-to-local, align 1
  %v7_87dc = icmp eq i32 %v3_87d4, -1
  store i1 %v7_87dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_87d4, i32* @sb, align 4
  br i1 %v7_87dc, label %dec_label_pc_87b4, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87d4
  %v3_87e8 = udiv i32 %v3_87d4, 32
  %v3_87f0 = mul nuw nsw i32 %v3_87e8, 4
  store i32 %v3_87f0, i32* %ip.global-to-local, align 4
  store i32 %v2_86d8, i32* @lr, align 4
  %v2_87f8 = add i32 %v3_87f0, %v2_86d8
  store i32 %v2_87f8, i32* %r2.global-to-local, align 4
  %v1_87fc = add i32 %v2_87f8, -292
  %v2_87fc = inttoptr i32 %v1_87fc to i32*
  %v3_87fc = load i32, i32* %v2_87fc, align 4
  %v1_8800 = urem i32 %v3_87d4, 32
  store i32 %v1_8800, i32* %r1.global-to-local, align 4
  %v2_8804 = add nsw i32 %v1_8800, -1
  %v3_8804 = shl i32 1, %v2_8804
  %v4_8804 = and i32 %v3_87fc, %v3_8804
  %v5_8804 = icmp ne i32 %v4_8804, 0
  store i1 %v5_8804, i1* %cpsr_c.global-to-local, align 1
  %v6_8804 = lshr i32 %v3_87fc, %v1_8800
  store i32 %v6_8804, i32* %r3.global-to-local, align 4
  %v1_8808 = urem i32 %v6_8804, 2
  %v2_8808 = icmp eq i32 %v1_8808, 0
  store i1 %v2_8808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8808, label %dec_label_pc_877c, label %dec_label_pc_8810

dec_label_pc_8810:                                ; preds = %dec_label_pc_87e8
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8828, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_8834, i32* @lr, align 4
  store i32 4, i32* @r2, align 4
  %v5_8840 = call i32 @function_152cc(i32 %v3_87d4, i32 1, i32 4, i32 %v2_8828, i32 %v2_8834)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8848 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8848, i32* %r3.global-to-local, align 4
  %v2_884c = or i32 %v3_8848, %v5_8840
  store i32 %v2_884c, i32* %r0.global-to-local, align 4
  %v4_884c = icmp eq i32 %v2_884c, 0
  store i1 %v4_884c, i1* %cpsr_z.global-to-local, align 1
  %v0_8854 = load i32, i32* @sl, align 4
  %v1_8854 = add i32 %v0_8854, -1452
  %v2_8854 = inttoptr i32 %v1_8854 to i32*
  %v3_8854 = load i32, i32* %v2_8854, align 4
  br i1 %v4_884c, label %dec_label_pc_8854, label %dec_label_pc_8fc0

dec_label_pc_8854:                                ; preds = %dec_label_pc_8810
  store i32 %v3_8854, i32* %r3.global-to-local, align 4
  %v3_8858 = udiv i32 %v3_8854, 32
  store i32 %v3_8858, i32* %r2.global-to-local, align 4
  %v1_885c = urem i32 %v3_8854, 32
  store i32 %v1_885c, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8860 = mul nuw nsw i32 %v3_8858, 4
  store i32 %v3_8860, i32* %ip.global-to-local, align 4
  %v0_8864 = load i32, i32* @r4, align 4
  %v1_8864 = trunc i32 %v0_8864 to i8
  %v3_8864 = add i32 %v0_8854, -1448
  %v4_8864 = inttoptr i32 %v3_8864 to i8*
  store i8 %v1_8864, i8* %v4_8864, align 1
  %v0_8784.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_878c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_877c

dec_label_pc_886c:                                ; preds = %dec_label_pc_85d4
  %v1_886c = add i32 %v3_8878, 4
  %v2_886c = inttoptr i32 %v1_886c to i32*
  %v3_886c = load i32, i32* %v2_886c, align 4
  store i32 %v3_886c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8870 = icmp eq i32 %v3_886c, 0
  store i1 %v2_8870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8870, label %.thread18, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_886c
  store i32 4, i32* %r3.global-to-local, align 4
  store i8 4, i8* %v2_85d4, align 1
  %v0_887c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_887c.pr.pr, label %.thread16..thread18_crit_edge, label %dec_label_pc_8884

.thread16..thread18_crit_edge:                    ; preds = %.thread16
  %v1_887c.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_887c.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_887c.pre to i8
  br label %.thread18

.thread18:                                        ; preds = %.thread16..thread18_crit_edge, %dec_label_pc_886c
  %v3_887c = phi i32 [ %v3_887c.pre, %.thread16..thread18_crit_edge ], [ %v3_8878, %dec_label_pc_886c ]
  %v1_887c.off0 = phi i8 [ %extract.t, %.thread16..thread18_crit_edge ], [ 0, %dec_label_pc_886c ]
  %v4_887c = add i32 %v3_887c, -1448
  %v5_887c = inttoptr i32 %v4_887c to i8*
  store i8 %v1_887c.off0, i8* %v5_887c, align 1
  %v0_8880.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8880.pr, label %.thread18.dec_label_pc_85f0_crit_edge, label %dec_label_pc_8884

.thread18.dec_label_pc_85f0_crit_edge:            ; preds = %.thread18
  %v0_85f0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_85f0

dec_label_pc_8884:                                ; preds = %.thread16, %.thread18, %dec_label_pc_857c
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_888c = load i32, i32* @r5, align 4
  %v1_888c = add i32 %v0_888c, 2112
  store i32 %v1_888c, i32* %r0.global-to-local, align 4
  %v1_8890 = load i32, i32* @r6, align 4
  %v2_8890 = add i32 %v1_8890, 12
  %v3_8890 = inttoptr i32 %v2_8890 to i32*
  store i32 -1, i32* %v3_8890, align 4
  %v0_8894 = load i32, i32* %r0.global-to-local, align 4
  %v1_8894 = add i32 %v0_8894, 4
  store i32 %v1_8894, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_889c = load i32, i32* @sb, align 4
  %v1_889c = load i32, i32* @r6, align 4
  %v2_889c = inttoptr i32 %v1_889c to i32*
  store i32 %v0_889c, i32* %v2_889c, align 4
  %v2_88a0 = call i32 @function_12e80(i32 %v1_8894, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_88ac = load i32, i32* @sb, align 4
  %v1_88ac = load i32, i32* @r6, align 4
  %v2_88ac = add i32 %v1_88ac, 660
  %v3_88ac = inttoptr i32 %v2_88ac to i32*
  store i32 %v0_88ac, i32* %v3_88ac, align 4
  %v2_88b0 = call i32 @function_12e80(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88b8 = call i32 @function_12dec(i8* %v1_88b8)
  %v0_88bc = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_88c4 = add i32 %v0_88bc, 1431
  store i32 %v1_88c4, i32* @fp, align 4
  %v2_88c8 = add i32 %v2_88b8, %stack_var_-20860.0.ph
  store i32 %v2_88c8, i32* @r0, align 4
  store i32 %v1_88c4, i32* %r1.global-to-local, align 4
  %v2_88d0 = inttoptr i32 %v2_88c8 to i8*
  %v3_88d0 = call i32 @function_12e14(i8* %v2_88d0, i32 %v1_88c4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88d8 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_1a240.27 to i32), i32* %r1.global-to-local, align 4
  %v2_88e4 = add i32 %v2_88d8, %stack_var_-20860.0.ph
  store i32 %v2_88e4, i32* @r0, align 4
  %v2_88e8 = inttoptr i32 %v2_88e4 to i8*
  %v3_88e8 = call i32 @function_12e14(i8* %v2_88e8, i32 ptrtoint (i32* @global_var_1a240.27 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88f0 = call i32 @function_12dec(i8* %v1_88b8)
  %v2_88f8 = add i32 %v2_88f0, %stack_var_-20860.0.ph
  store i32 %v2_88f8, i32* @r0, align 4
  %v0_88fc = load i32, i32* @r5, align 4
  %v1_88fc = add i32 %v0_88fc, 532
  store i32 %v1_88fc, i32* %r1.global-to-local, align 4
  %v2_8900 = inttoptr i32 %v2_88f8 to i8*
  %v3_8900 = call i32 @function_12e14(i8* %v2_8900, i32 %v1_88fc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8908 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1a218.29 to i32), i32* %r1.global-to-local, align 4
  %v2_8914 = add i32 %v2_8908, %stack_var_-20860.0.ph
  store i32 %v2_8914, i32* @r0, align 4
  %v3_8918 = inttoptr i32 %v2_8914 to i8*
  %v4_8918 = call i32 @function_12e14(i8* %v3_8918, i32 ptrtoint ([24 x i8]* @global_var_1a218.29 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8920 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_8928 = load i32, i32* @r5, align 4
  %v1_8928 = add i32 %v0_8928, 20
  store i32 %v1_8928, i32* %r1.global-to-local, align 4
  %v2_892c = add i32 %v2_8920, %stack_var_-20860.0.ph
  store i32 %v2_892c, i32* @r0, align 4
  %v2_8930 = inttoptr i32 %v2_892c to i8*
  %v3_8930 = call i32 @function_12e14(i8* %v2_8930, i32 %v1_8928)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8938 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a230.31 to i32), i32* %r1.global-to-local, align 4
  %v2_8944 = add i32 %v2_8938, %stack_var_-20860.0.ph
  store i32 %v2_8944, i32* @r0, align 4
  %v3_8948 = inttoptr i32 %v2_8944 to i8*
  %v4_8948 = call i32 @function_12e14(i8* %v3_8948, i32 ptrtoint ([9 x i8]* @global_var_1a230.31 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8950 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_8958 = load i32, i32* @r5, align 4
  %v2_895c = add i32 %v2_8950, %stack_var_-20860.0.ph
  store i32 %v2_895c, i32* @r0, align 4
  %v1_8960 = add i32 %v0_8958, 789
  store i32 %v1_8960, i32* %r1.global-to-local, align 4
  %v2_8964 = inttoptr i32 %v2_895c to i8*
  %v3_8964 = call i32 @function_12e14(i8* %v2_8964, i32 %v1_8960)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_896c = call i32 @function_12dec(i8* %v1_88b8)
  %v2_8974 = add i32 %v2_896c, %stack_var_-20860.0.ph
  store i32 %v2_8974, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r1.global-to-local, align 4
  %v3_897c = inttoptr i32 %v2_8974 to i8*
  %v4_897c = call i32 @function_12e14(i8* %v3_897c, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32))
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_8984 = call i32 @function_1255c(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_898c = call i32 @function_12dec(i8* %v1_88b8)
  %v0_8990 = load i32, i32* @sb, align 4
  store i32 %v0_8990, i32* %r1.global-to-local, align 4
  store i32 %v2_898c, i32* @r4, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_899c = inttoptr i32 %v0_8990 to i32*
  %v3_899c = call i32 @function_12498(i32 32, i32* %v2_899c)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_899c, i32* %r1.global-to-local, align 4
  %v1_89a8 = load i32, i32* @r4, align 4
  %v2_89a8 = add i32 %v1_89a8, %stack_var_-20860.0.ph
  store i32 %v2_89a8, i32* @r0, align 4
  %v2_89ac = inttoptr i32 %v2_89a8 to i8*
  %v3_89ac = call i32 @function_12e14(i8* %v2_89ac, i32 %v3_899c)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_89b4 = call i32 @function_124bc(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89bc = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r1.global-to-local, align 4
  %v2_89c8 = add i32 %v2_89bc, %stack_var_-20860.0.ph
  store i32 %v2_89c8, i32* @r0, align 4
  %v3_89cc = inttoptr i32 %v2_89c8 to i8*
  %v4_89cc = call i32 @function_12e14(i8* %v3_89cc, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32))
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_89d4 = call i32 @function_1255c(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89dc = call i32 @function_12dec(i8* %v1_88b8)
  %v0_89e0 = load i32, i32* @sb, align 4
  store i32 %v0_89e0, i32* %r1.global-to-local, align 4
  store i32 %v2_89dc, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_89ec = inttoptr i32 %v0_89e0 to i32*
  %v3_89ec = call i32 @function_12498(i32 33, i32* %v2_89ec)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_89ec, i32* %r1.global-to-local, align 4
  %v1_89f8 = load i32, i32* @r4, align 4
  %v2_89f8 = add i32 %v1_89f8, %stack_var_-20860.0.ph
  store i32 %v2_89f8, i32* @r0, align 4
  %v2_89fc = inttoptr i32 %v2_89f8 to i8*
  %v3_89fc = call i32 @function_12e14(i8* %v2_89fc, i32 %v3_89ec)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_8a04 = call i32 @function_124bc(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a0c = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r1.global-to-local, align 4
  %v2_8a18 = add i32 %v2_8a0c, %stack_var_-20860.0.ph
  store i32 %v2_8a18, i32* @r0, align 4
  %v3_8a1c = inttoptr i32 %v2_8a18 to i8*
  %v4_8a1c = call i32 @function_12e14(i8* %v3_8a1c, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32))
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a24 = call i32 @function_1255c(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a2c = call i32 @function_12dec(i8* %v1_88b8)
  %v0_8a30 = load i32, i32* @sb, align 4
  store i32 %v0_8a30, i32* %r1.global-to-local, align 4
  store i32 %v2_8a2c, i32* @r4, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_8a3c = inttoptr i32 %v0_8a30 to i32*
  %v3_8a3c = call i32 @function_12498(i32 34, i32* %v2_8a3c)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8a3c, i32* %r1.global-to-local, align 4
  %v1_8a48 = load i32, i32* @r4, align 4
  %v2_8a48 = add i32 %v1_8a48, %stack_var_-20860.0.ph
  store i32 %v2_8a48, i32* @r0, align 4
  %v2_8a4c = inttoptr i32 %v2_8a48 to i8*
  %v3_8a4c = call i32 @function_12e14(i8* %v2_8a4c, i32 %v3_8a3c)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a54 = call i32 @function_124bc(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a5c = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r1.global-to-local, align 4
  %v2_8a68 = add i32 %v2_8a5c, %stack_var_-20860.0.ph
  store i32 %v2_8a68, i32* @r0, align 4
  %v3_8a6c = inttoptr i32 %v2_8a68 to i8*
  %v4_8a6c = call i32 @function_12e14(i8* %v3_8a6c, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32))
  store i32 %v4_8a6c, i32* %r0.global-to-local, align 4
  store i32 %v6_81f8, i32* %ip.global-to-local, align 4
  %v1_8a74 = load i32, i32* @sb, align 4
  %v3_8a74 = icmp uge i32 %v6_81f8, %v1_8a74
  store i1 %v3_8a74, i1* %cpsr_c.global-to-local, align 1
  %v9_8a74 = icmp eq i32 %v6_81f8, %v1_8a74
  store i1 %v9_8a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8a74, label %dec_label_pc_8b4c, label %dec_label_pc_8a7c

dec_label_pc_8a7c:                                ; preds = %dec_label_pc_8884
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8a80 = call i32 @function_1255c(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a88 = call i32 @function_12dec(i8* %v1_88b8)
  %v0_8a8c = load i32, i32* @sb, align 4
  store i32 %v0_8a8c, i32* %r1.global-to-local, align 4
  store i32 %v2_8a88, i32* @r4, align 4
  store i32 35, i32* %r0.global-to-local, align 4
  %v2_8a98 = inttoptr i32 %v0_8a8c to i32*
  %v3_8a98 = call i32 @function_12498(i32 35, i32* %v2_8a98)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_8a98, i32* %r1.global-to-local, align 4
  %v1_8aa4 = load i32, i32* @r4, align 4
  %v2_8aa4 = add i32 %v1_8aa4, %stack_var_-20860.0.ph
  store i32 %v2_8aa4, i32* @r0, align 4
  %v2_8aa8 = inttoptr i32 %v2_8aa4 to i8*
  %v3_8aa8 = call i32 @function_12e14(i8* %v2_8aa8, i32 %v3_8a98)
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8ab0 = call i32 @function_124bc(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ab8 = call i32 @function_12dec(i8* %v1_88b8)
  %v2_8ac0 = add i32 %v2_8ab8, %stack_var_-20860.0.ph
  store i32 %v2_8ac0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r1.global-to-local, align 4
  %v3_8ac8 = inttoptr i32 %v2_8ac0 to i8*
  %v4_8ac8 = call i32 @function_12e14(i8* %v3_8ac8, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ad0 = call i32 @function_12dec(i8* %v1_88b8)
  %v0_8ad4 = load i32, i32* @sb, align 4
  store i32 %v0_8ad4, i32* %r1.global-to-local, align 4
  store i32 %v2_8ad0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_8ae0 = inttoptr i32 %v0_8ad4 to i32*
  %v3_8ae0 = call i32 @function_12498(i32 40, i32* %v2_8ae0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8ae0, i32* %r1.global-to-local, align 4
  %v2_8aec = add i32 %v2_8ad0, %stack_var_-20860.0.ph
  store i32 %v2_8aec, i32* @r0, align 4
  %v2_8af0 = inttoptr i32 %v2_8aec to i8*
  %v3_8af0 = call i32 @function_12e14(i8* %v2_8af0, i32 %v3_8ae0)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8af8 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a240.27 to i32), i32* %r1.global-to-local, align 4
  %v2_8b04 = add i32 %v2_8af8, %stack_var_-20860.0.ph
  store i32 %v2_8b04, i32* @r0, align 4
  %v2_8b08 = inttoptr i32 %v2_8b04 to i8*
  %v3_8b08 = call i32 @function_12e14(i8* %v2_8b08, i32 ptrtoint (i32* @global_var_1a240.27 to i32))
  store i32 %v6_81f8, i32* %r0.global-to-local, align 4
  %v2_8b10 = call i32 @function_12dec(i8* %v1_8b10)
  store i32 %v2_8b10, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b1c = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8b28 = add i32 %v2_8b1c, %stack_var_-20860.0.ph
  store i32 %v2_8b28, i32* %r2.global-to-local, align 4
  %v0_8b2c = load i32, i32* @r4, align 4
  store i32 %v0_8b2c, i32* %r0.global-to-local, align 4
  %v3_8b30 = trunc i32 %v0_8b2c to i8
  %v4_8b30 = call i32 @function_132ec(i8 %v3_8b30, i32 10, i32 %v2_8b28)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b38 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r1.global-to-local, align 4
  %v2_8b44 = add i32 %v2_8b38, %stack_var_-20860.0.ph
  store i32 %v2_8b44, i32* @r0, align 4
  %v3_8b48 = inttoptr i32 %v2_8b44 to i8*
  %v4_8b48 = call i32 @function_12e14(i8* %v3_8b48, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32))
  store i32 %v4_8b48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b4c

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8884, %dec_label_pc_8a7c
  %v0_8b4c = load i32, i32* @r6, align 4
  %v1_8b4c = add i32 %v0_8b4c, 16
  %v2_8b4c = inttoptr i32 %v1_8b4c to i32*
  %v3_8b4c = load i32, i32* %v2_8b4c, align 4
  store i32 %v3_8b4c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b50 = icmp eq i32 %v3_8b4c, 0
  store i1 %v2_8b50, i1* %cpsr_z.global-to-local, align 1
  %tmp165 = icmp slt i32 %v3_8b4c, 1
  br i1 %tmp165, label %dec_label_pc_8bf8, label %dec_label_pc_8b58

dec_label_pc_8b58:                                ; preds = %dec_label_pc_8b4c
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b5c = call i32 @function_12dec(i8* %v1_88b8)
  %v2_8b64 = add i32 %v2_8b5c, %stack_var_-20860.0.ph
  store i32 %v2_8b64, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a250.35 to i32), i32* %r1.global-to-local, align 4
  %v3_8b6c = inttoptr i32 %v2_8b64 to i8*
  %v4_8b6c = call i32 @function_12e14(i8* %v3_8b6c, i32 ptrtoint ([9 x i8]* @global_var_1a250.35 to i32))
  store i32 %v4_8b6c, i32* %r0.global-to-local, align 4
  %v0_8b70 = load i32, i32* @r6, align 4
  %v1_8b70 = add i32 %v0_8b70, 16
  %v2_8b70 = inttoptr i32 %v1_8b70 to i32*
  %v3_8b70 = load i32, i32* %v2_8b70, align 4
  store i32 %v3_8b70, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b78 = icmp eq i32 %v3_8b70, 0
  store i1 %v2_8b78, i1* %cpsr_z.global-to-local, align 1
  %v0_8b7c = load i32, i32* @sb, align 4
  store i32 %v0_8b7c, i32* %stack_var_-44, align 4
  %tmp166 = icmp slt i32 %v3_8b70, 1
  br i1 %tmp166, label %dec_label_pc_8be0, label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_8b58, %dec_label_pc_8b84
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b88 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_8b90 = load i32, i32* %stack_var_-44, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_8b98 = and i32 %v3_8b90, 33554432
  %v2_8b98 = icmp ne i32 %v1_8b98, 0
  store i1 %v2_8b98, i1* %cpsr_c.global-to-local, align 1
  %v3_8b98 = mul i32 %v3_8b90, 128
  %v1_8b9c = add i32 %v3_8b98, 1472
  %v2_8ba0 = add i32 %v2_8b88, %stack_var_-20860.0.ph
  store i32 %v2_8ba0, i32* @r0, align 4
  %v0_8ba4 = load i32, i32* @r5, align 4
  %v2_8ba4 = add i32 %v1_8b9c, %v0_8ba4
  store i32 %v2_8ba4, i32* %r1.global-to-local, align 4
  %v2_8ba8 = inttoptr i32 %v2_8ba0 to i8*
  %v3_8ba8 = call i32 @function_12e14(i8* %v2_8ba8, i32 %v2_8ba4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bb0 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a25c.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8bbc = add i32 %v2_8bb0, %stack_var_-20860.0.ph
  store i32 %v2_8bbc, i32* @r0, align 4
  %v3_8bc0 = inttoptr i32 %v2_8bbc to i8*
  %v4_8bc0 = call i32 @function_12e14(i8* %v3_8bc0, i32 ptrtoint ([3 x i8]* @global_var_1a25c.37 to i32))
  store i32 %v4_8bc0, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8bc8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8bc8, i32* %r3.global-to-local, align 4
  %v0_8bcc = load i32, i32* @r6, align 4
  %v1_8bcc = add i32 %v0_8bcc, 16
  %v2_8bcc = inttoptr i32 %v1_8bcc to i32*
  %v3_8bcc = load i32, i32* %v2_8bcc, align 4
  store i32 %v3_8bcc, i32* %r2.global-to-local, align 4
  %v1_8bd0 = add i32 %v3_8bc8, 1
  store i32 %v1_8bd0, i32* %ip.global-to-local, align 4
  %v3_8bd4 = icmp uge i32 %v3_8bcc, %v1_8bd0
  store i1 %v3_8bd4, i1* %cpsr_c.global-to-local, align 1
  %v9_8bd4 = icmp eq i32 %v3_8bcc, %v1_8bd0
  store i1 %v9_8bd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8bd0, i32* %stack_var_-44, align 4
  %v8_8bdc = icmp sgt i32 %v3_8bcc, %v1_8bd0
  br i1 %v8_8bdc, label %dec_label_pc_8b84, label %dec_label_pc_8be0

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b84, %dec_label_pc_8b58
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8be4 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r1.global-to-local, align 4
  %v2_8bf0 = add i32 %v2_8be4, %stack_var_-20860.0.ph
  store i32 %v2_8bf0, i32* @r0, align 4
  %v3_8bf4 = inttoptr i32 %v2_8bf0 to i8*
  %v4_8bf4 = call i32 @function_12e14(i8* %v3_8bf4, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32))
  store i32 %v4_8bf4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8bf8

dec_label_pc_8bf8:                                ; preds = %dec_label_pc_8b4c, %dec_label_pc_8be0
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bfc = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r1.global-to-local, align 4
  %v2_8c08 = add i32 %v2_8bfc, %stack_var_-20860.0.ph
  store i32 %v2_8c08, i32* @r0, align 4
  %v3_8c0c = inttoptr i32 %v2_8c08 to i8*
  %v4_8c0c = call i32 @function_12e14(i8* %v3_8c0c, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32))
  store i32 %v4_8c0c, i32* %r0.global-to-local, align 4
  store i32 %v6_81f8, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_8c14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c14, label %dec_label_pc_8c34, label %dec_label_pc_8c1c

dec_label_pc_8c1c:                                ; preds = %dec_label_pc_8bf8
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c20 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_81f8, i32* %r1.global-to-local, align 4
  %v2_8c2c = add i32 %v2_8c20, %stack_var_-20860.0.ph
  store i32 %v2_8c2c, i32* @r0, align 4
  %v2_8c30 = inttoptr i32 %v2_8c2c to i8*
  %v3_8c30 = call i32 @function_12e14(i8* %v2_8c30, i32 %v6_81f8)
  store i32 %v3_8c30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c34

dec_label_pc_8c34:                                ; preds = %dec_label_pc_8bf8, %dec_label_pc_8c1c
  %v0_8c34 = load i32, i32* @r5, align 4
  %v1_8c34 = add i32 %v0_8c34, 1440
  store i32 %v1_8c34, i32* %r4.global-to-local, align 4
  %v0_8c38 = load i32, i32* @fp, align 4
  store i32 %v0_8c38, i32* %r0.global-to-local, align 4
  store i32 %v1_8c34, i32* %r1.global-to-local, align 4
  %v2_8c40 = inttoptr i32 %v0_8c38 to i8*
  %v3_8c40 = call i32 @function_131d8(i8* %v2_8c40, i32 %v1_8c34)
  store i32 %v3_8c40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8c44 = icmp eq i32 %v3_8c40, 0
  store i1 %v2_8c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c44, label %dec_label_pc_9710, label %dec_label_pc_8c4c

dec_label_pc_8c4c:                                ; preds = %dec_label_pc_8c34, %dec_label_pc_9710
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8c50 = load i32, i32* @r6, align 4
  %v1_8c50 = add i32 %v0_8c50, -1452
  %v2_8c50 = inttoptr i32 %v1_8c50 to i32*
  %v3_8c50 = load i32, i32* %v2_8c50, align 4
  store i32 %v3_8c50, i32* @r4, align 4
  %v2_8c54 = call i32 @function_12dec(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @r1, align 4
  store i32 %v2_8c54, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8c64 = load i32, i32* @r4, align 4
  store i32 %v0_8c64, i32* @r0, align 4
  %v4_8c68 = call i32 @function_1553c(i32 %v0_8c64, i32 %stack_var_-20860.0.ph, i32 %v2_8c54, i32 16384)
  store i32 %v4_8c68, i32* %r0.global-to-local, align 4
  %v0_8c6c = load i32, i32* @r6, align 4
  %v1_8c6c = add i32 %v0_8c6c, -1452
  %v2_8c6c = inttoptr i32 %v1_8c6c to i32*
  %v3_8c6c = load i32, i32* %v2_8c6c, align 4
  store i32 %v3_8c6c, i32* %ip.global-to-local, align 4
  %v3_8c74 = udiv i32 %v3_8c6c, 32
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v3_8c7c = mul nuw nsw i32 %v3_8c74, 4
  %v2_8c80 = add i32 %v3_8c7c, %v2_86d8
  store i32 %v2_8c80, i32* %r2.global-to-local, align 4
  %v1_8c84 = add i32 %v2_8c80, -164
  %v2_8c84 = inttoptr i32 %v1_8c84 to i32*
  %v3_8c84 = load i32, i32* %v2_8c84, align 4
  %v1_8c8c = urem i32 %v3_8c6c, 32
  store i32 %v1_8c8c, i32* %r0.global-to-local, align 4
  %v7_8c90 = shl i32 1, %v1_8c8c
  %v8_8c90 = or i32 %v3_8c84, %v7_8c90
  store i32 %v8_8c90, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_8c90, i32* %v2_8c84, align 4
  %v0_8c9c = load i32, i32* %r3.global-to-local, align 4
  %v1_8c9c = trunc i32 %v0_8c9c to i8
  %v2_8c9c = load i32, i32* @r6, align 4
  %v3_8c9c = add i32 %v2_8c9c, -1448
  %v4_8c9c = inttoptr i32 %v3_8c9c to i8*
  store i8 %v1_8c9c, i8* %v4_8c9c, align 1
  %v0_8ca0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8ca0 = load i32, i32* @r8, align 4
  %v2_8ca0 = sub i32 %v0_8ca0, %v1_8ca0
  %v3_8ca0 = icmp uge i32 %v0_8ca0, %v1_8ca0
  store i1 %v3_8ca0, i1* %cpsr_c.global-to-local, align 1
  %v4_8ca0 = xor i32 %v1_8ca0, %v0_8ca0
  %v5_8ca0 = xor i32 %v2_8ca0, %v0_8ca0
  %v6_8ca0 = and i32 %v5_8ca0, %v4_8ca0
  %v7_8ca0 = icmp slt i32 %v6_8ca0, 0
  %v8_8ca0 = icmp slt i32 %v2_8ca0, 0
  %v9_8ca0 = icmp eq i32 %v0_8ca0, %v1_8ca0
  store i1 %v9_8ca0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_84f8, i32* %r2.global-to-local, align 4
  %v3_8ca8 = xor i1 %v8_8ca0, %v7_8ca0
  %v4_8ca8 = or i1 %v9_8ca0, %v3_8ca8
  br i1 %v4_8ca8, label %bb168, label %bb167

bb167:                                            ; preds = %dec_label_pc_8c4c
  %v6_8ca8 = add i32 %v0_8ca0, 1
  store i32 %v6_8ca8, i32* @r8, align 4
  br label %bb168

bb168:                                            ; preds = %dec_label_pc_8c4c, %bb167
  %v1_8cac = load i32, i32* @r6, align 4
  %v2_8cac = add i32 %v1_8cac, -1440
  %v3_8cac = inttoptr i32 %v2_8cac to i32*
  store i32 %v2_84f8, i32* %v3_8cac, align 4
  br label %dec_label_pc_85bc

dec_label_pc_8cb4:                                ; preds = %dec_label_pc_8574
  %v1_8cb4 = add i32 %v3_8878, -1444
  %v2_8cb4 = inttoptr i32 %v1_8cb4 to i32*
  %v3_8cb4 = load i32, i32* %v2_8cb4, align 4
  store i32 %v2_84f8, i32* %r1.global-to-local, align 4
  %v2_8cbc = sub i32 %v2_84f8, %v3_8cb4
  store i32 %v2_8cbc, i32* %r3.global-to-local, align 4
  %v2_8cc0 = icmp ugt i32 %v2_8cbc, 29
  store i1 %v2_8cc0, i1* %cpsr_c.global-to-local, align 1
  %v7_8cc0 = icmp eq i32 %v2_8cbc, 30
  store i1 %v7_8cc0, i1* %cpsr_z.global-to-local, align 1
  %v2_8cc4 = xor i1 %v7_8cc0, true
  %v3_8cc4 = and i1 %v2_8cc0, %v2_8cc4
  br i1 %v3_8cc4, label %dec_label_pc_85a4, label %dec_label_pc_8cc8

dec_label_pc_8cc8:                                ; preds = %dec_label_pc_8cb4
  %v2_8cc8 = inttoptr i32 %v1_85e0 to i32*
  %v3_8cc8 = load i32, i32* %v2_8cc8, align 4
  store i32 %v3_8cc8, i32* %ip.global-to-local, align 4
  %v3_8cd0 = udiv i32 %v3_8cc8, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8cd4 = mul nuw nsw i32 %v3_8cd0, 4
  store i32 %v3_8cd4, i32* %r2.global-to-local, align 4
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_86e0

dec_label_pc_8ce4:                                ; preds = %dec_label_pc_87ac, %dec_label_pc_8d0c
  %v0_8ce4 = call i32 @function_13994()
  store i32 %v0_8ce4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8cec = inttoptr i32 %v0_8ce4 to i32*
  store i32 0, i32* %v2_8cec, align 4
  store i32 %v2_8278, i32* @r1, align 4
  %v0_8cf4 = load i32, i32* @sl, align 4
  %v1_8cf4 = add i32 %v0_8cf4, -1452
  %v2_8cf4 = inttoptr i32 %v1_8cf4 to i32*
  %v3_8cf4 = load i32, i32* %v2_8cf4, align 4
  store i32 %v3_8cf4, i32* @r0, align 4
  store i32 10240, i32* @r2, align 4
  %v0_8cfc = load i32, i32* %r3.global-to-local, align 4
  %v1_8cfc = add i32 %v0_8cfc, 16384
  store i32 %v1_8cfc, i32* %r3.global-to-local, align 4
  %v4_8d00 = call i32 @function_154d0(i32 %v3_8cf4, i32 %v2_8278, i32 10240, i32 %v1_8cfc)
  store i32 %v4_8d00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d04 = icmp eq i32 %v4_8d00, 0
  store i1 %v2_8d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d04, label %dec_label_pc_9990, label %dec_label_pc_8d0c

dec_label_pc_8d0c:                                ; preds = %dec_label_pc_8ce4
  %v3_8d0c = icmp eq i32 %v4_8d00, -1
  store i1 %v3_8d0c, i1* %cpsr_c.global-to-local, align 1
  %v8_8d0c = icmp eq i32 %v4_8d00, -1
  store i1 %v8_8d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8d0c, label %dec_label_pc_8d14, label %dec_label_pc_8ce4

dec_label_pc_8d14:                                ; preds = %dec_label_pc_8d0c, %dec_label_pc_9990
  %v0_8d14 = call i32 @function_13994()
  store i32 %v0_8d14, i32* %r0.global-to-local, align 4
  %v1_8d18 = inttoptr i32 %v0_8d14 to i32*
  %v2_8d18 = load i32, i32* %v1_8d18, align 4
  store i32 %v2_8d18, i32* %r3.global-to-local, align 4
  %v2_8d1c = icmp ugt i32 %v2_8d18, 10
  store i1 %v2_8d1c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d1c = icmp eq i32 %v2_8d18, 11
  store i1 %v7_8d1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d1c, label %dec_label_pc_8d34, label %dec_label_pc_8d24

dec_label_pc_8d24:                                ; preds = %dec_label_pc_8d14
  %v0_8d24 = call i32 @function_13994()
  store i32 %v0_8d24, i32* %r0.global-to-local, align 4
  %v1_8d28 = inttoptr i32 %v0_8d24 to i32*
  %v2_8d28 = load i32, i32* %v1_8d28, align 4
  store i32 %v2_8d28, i32* %r3.global-to-local, align 4
  %v2_8d2c = icmp ugt i32 %v2_8d28, 10
  store i1 %v2_8d2c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d2c = icmp eq i32 %v2_8d28, 11
  store i1 %v7_8d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d2c, label %dec_label_pc_8d34, label %dec_label_pc_95bc

dec_label_pc_8d34:                                ; preds = %dec_label_pc_8d24, %dec_label_pc_8d14
  %v0_8d34 = load i32, i32* @sl, align 4
  %v1_8d34 = add i32 %v0_8d34, -1448
  %v2_8d34 = inttoptr i32 %v1_8d34 to i8*
  %v3_8d34 = load i8, i8* %v2_8d34, align 1
  %v4_8d34 = zext i8 %v3_8d34 to i32
  store i32 %v4_8d34, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d38 = icmp eq i8 %v3_8d34, 0
  store i1 %v2_8d38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d38, label %dec_label_pc_87b4, label %dec_label_pc_8d40

dec_label_pc_8d40:                                ; preds = %dec_label_pc_9694, %dec_label_pc_9ae4, %dec_label_pc_9ac8, %dec_label_pc_96d4, %dec_label_pc_96a4, %dec_label_pc_8d34, %dec_label_pc_9b10, %dec_label_pc_96ec
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_8d44 = load i32, i32* @sl, align 4
  %v3_8d44 = add i32 %v2_8d44, -1448
  %v4_8d44 = inttoptr i32 %v3_8d44 to i8*
  store i8 1, i8* %v4_8d44, align 1
  br label %dec_label_pc_87b4

dec_label_pc_8d4c:                                ; preds = %dec_label_pc_8584
  %v2_8d4c = inttoptr i32 %v1_85e0 to i32*
  %v3_8d4c = load i32, i32* %v2_8d4c, align 4
  store i32 %v3_8d4c, i32* %ip.global-to-local, align 4
  %v3_8d54 = udiv i32 %v3_8d4c, 32
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  %v3_8d5c = mul nuw nsw i32 %v3_8d54, 4
  %v2_8d60 = add i32 %v3_8d5c, %v2_86d8
  store i32 %v2_8d60, i32* %r2.global-to-local, align 4
  %v1_8d64 = add i32 %v2_8d60, -164
  %v2_8d64 = inttoptr i32 %v1_8d64 to i32*
  %v3_8d64 = load i32, i32* %v2_8d64, align 4
  %v1_8d68 = urem i32 %v3_8d4c, 32
  store i32 %v1_8d68, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8d70 = shl i32 1, %v1_8d68
  %v8_8d70 = or i32 %v3_8d64, %v7_8d70
  store i32 %v8_8d70, i32* %r1.global-to-local, align 4
  %v1_8d74 = load i32, i32* @r8, align 4
  %v2_8d74 = sub i32 %v3_8d4c, %v1_8d74
  %v3_8d74 = icmp uge i32 %v3_8d4c, %v1_8d74
  store i1 %v3_8d74, i1* %cpsr_c.global-to-local, align 1
  %v4_8d74 = xor i32 %v1_8d74, %v3_8d4c
  %v5_8d74 = xor i32 %v2_8d74, %v3_8d4c
  %v6_8d74 = and i32 %v5_8d74, %v4_8d74
  %v7_8d74 = icmp slt i32 %v6_8d74, 0
  %v8_8d74 = icmp slt i32 %v2_8d74, 0
  %v9_8d74 = icmp eq i32 %v3_8d4c, %v1_8d74
  store i1 %v9_8d74, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8d70, i32* %v2_8d64, align 4
  %v3_8d7c = xor i1 %v8_8d74, %v7_8d74
  %v4_8d7c = or i1 %v9_8d74, %v3_8d7c
  br i1 %v4_8d7c, label %dec_label_pc_85bc, label %dec_label_pc_8d80

dec_label_pc_8d80:                                ; preds = %dec_label_pc_8d4c
  %v0_8d80 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d80 = load i32, i32* %r3.global-to-local, align 4
  %v2_8d80 = add i32 %v1_8d80, %v0_8d80
  store i32 %v2_8d80, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8d88:                                ; preds = %dec_label_pc_87a4
  %v1_8d88 = add i32 %v0_8798, 660
  %v2_8d88 = inttoptr i32 %v1_8d88 to i32*
  %v3_8d88 = load i32, i32* %v2_8d88, align 4
  store i32 %v3_8d88, i32* %r3.global-to-local, align 4
  %v0_8d8c = load i32, i32* @sb, align 4
  %v2_8d90 = icmp ugt i32 %v3_8d88, 1023
  store i1 %v2_8d90, i1* %cpsr_c.global-to-local, align 1
  %v7_8d90 = icmp eq i32 %v3_8d88, 1024
  store i1 %v7_8d90, i1* %cpsr_z.global-to-local, align 1
  %v1_8d94 = add i32 %v0_8d8c, 2116
  store i32 %v1_8d94, i32* @r7, align 4
  br i1 %v7_8d90, label %dec_label_pc_8e9c, label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8d88, %dec_label_pc_8e9c, %dec_label_pc_8e90
  %v0_8d9c = call i32 @function_13994()
  store i32 %v0_8d9c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8da4 = inttoptr i32 %v0_8d9c to i32*
  store i32 0, i32* %v2_8da4, align 4
  %v0_8da8 = load i32, i32* @sl, align 4
  %v1_8da8 = add i32 %v0_8da8, 660
  %v2_8da8 = inttoptr i32 %v1_8da8 to i32*
  %v3_8da8 = load i32, i32* %v2_8da8, align 4
  store i32 %v3_8da8, i32* %r1.global-to-local, align 4
  %v1_8dac = add i32 %v0_8da8, -1452
  %v2_8dac = inttoptr i32 %v1_8dac to i32*
  %v3_8dac = load i32, i32* %v2_8dac, align 4
  store i32 %v3_8dac, i32* @r0, align 4
  %v1_8db0 = sub i32 1024, %v3_8da8
  store i32 %v1_8db0, i32* @r2, align 4
  %v0_8db4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8db4 = add i32 %v0_8db4, 16384
  store i32 %v1_8db4, i32* %r3.global-to-local, align 4
  %v0_8db8 = load i32, i32* @r7, align 4
  %v2_8db8 = add i32 %v0_8db8, %v3_8da8
  store i32 %v2_8db8, i32* @r1, align 4
  %v4_8dbc = call i32 @function_154d0(i32 %v3_8dac, i32 %v2_8db8, i32 %v1_8db0, i32 %v1_8db4)
  store i32 %v4_8dbc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dc0 = icmp eq i32 %v4_8dbc, 0
  store i1 %v2_8dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8dc0, label %dec_label_pc_9590, label %dec_label_pc_8dc8

dec_label_pc_8dc8:                                ; preds = %dec_label_pc_8d9c
  %v2_8dc8 = icmp eq i32 %v4_8dbc, -1
  store i1 %v2_8dc8, i1* %cpsr_c.global-to-local, align 1
  %v7_8dc8 = icmp eq i32 %v4_8dbc, -1
  store i1 %v7_8dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dc8, label %dec_label_pc_959c, label %dec_label_pc_8dd0

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8dc8
  %v0_8dd0 = load i32, i32* @sl, align 4
  %v1_8dd0 = add i32 %v0_8dd0, 660
  %v2_8dd0 = inttoptr i32 %v1_8dd0 to i32*
  %v3_8dd0 = load i32, i32* %v2_8dd0, align 4
  store i32 %v2_8764, i32* %r1.global-to-local, align 4
  %v2_8dd8 = add i32 %v3_8dd0, %v4_8dbc
  store i32 %v2_8dd8, i32* @r4, align 4
  store i32 %v2_8dd8, i32* %v2_8dd0, align 4
  %v0_8de0 = load i32, i32* %r1.global-to-local, align 4
  %v1_8de0 = load i32, i32* @sl, align 4
  %v2_8de0 = add i32 %v1_8de0, -1444
  %v3_8de0 = inttoptr i32 %v2_8de0 to i32*
  store i32 %v0_8de0, i32* %v3_8de0, align 4
  br label %dec_label_pc_8e70

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8e70
  %v1_8de8 = inttoptr i32 %v0_8e70 to i32*
  %v2_8de8 = load i32, i32* %v1_8de8, align 4
  store i32 %v2_8de8, i32* @r8, align 4
  %v1_8dec = load i32, i32* @r4, align 4
  %v5_8df0 = icmp slt i32 %v3_8e70, %v1_8dec
  %storemerge46 = select i1 %v5_8df0, i32 %v3_8e70, i32 %v1_8dec
  store i32 %storemerge46, i32* @r6, align 4
  %v2_8df8 = sub i32 %v3_8e70, %storemerge46
  store i32 %v2_8df8, i32* %r3.global-to-local, align 4
  %v2_8dfc = icmp ne i32 %v2_8de8, 0
  store i1 %v2_8dfc, i1* %cpsr_c.global-to-local, align 1
  %v7_8dfc = icmp eq i32 %v2_8de8, 1
  store i1 %v7_8dfc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8df8, i32* %v2_8e70, align 4
  br i1 %v7_8dfc, label %dec_label_pc_8ec0, label %.dec_label_pc_8e0cthread-pre-split_crit_edge

.dec_label_pc_8e0cthread-pre-split_crit_edge:     ; preds = %dec_label_pc_8de8
  %v1_8e04 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_8e04, i32* @r5, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8e0c:                                ; preds = %dec_label_pc_8e7c, %.dec_label_pc_8e0cthread-pre-split_crit_edge, %dec_label_pc_8ee8
  %v0_8e0c = phi i32 [ %v3_8ee8, %dec_label_pc_8ee8 ], [ %v1_8e04, %.dec_label_pc_8e0cthread-pre-split_crit_edge ], [ %v3_8e70, %dec_label_pc_8e7c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e0c = icmp eq i32 %v0_8e0c, 0
  store i1 %v2_8e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e0c, label %dec_label_pc_8e14, label %dec_label_pc_8e34

dec_label_pc_8e14:                                ; preds = %dec_label_pc_8e0c
  %v0_8e14 = load i32, i32* @sl, align 4
  %v1_8e14 = add i32 %v0_8e14, 8
  %v2_8e14 = inttoptr i32 %v1_8e14 to i32*
  %v3_8e14 = load i32, i32* %v2_8e14, align 4
  store i32 %v3_8e14, i32* @r4, align 4
  %v2_8e18 = icmp ne i32 %v3_8e14, 0
  store i1 %v2_8e18, i1* %cpsr_c.global-to-local, align 1
  %v7_8e18 = icmp eq i32 %v3_8e14, 1
  store i1 %v7_8e18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e18, label %dec_label_pc_8ef0, label %dec_label_pc_8e20

dec_label_pc_8e20:                                ; preds = %dec_label_pc_8e14
  %v1_8e20 = add i32 %v0_8e14, 660
  %v2_8e20 = inttoptr i32 %v1_8e20 to i32*
  %v3_8e20 = load i32, i32* %v2_8e20, align 4
  %v0_8e24 = load i32, i32* @r6, align 4
  %v2_8e24 = sub i32 %v3_8e20, %v0_8e24
  store i32 %v2_8e24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e28 = icmp eq i32 %v2_8e24, 0
  store i1 %v2_8e28, i1* %cpsr_z.global-to-local, align 1
  %v2_8e2c = add i32 %v0_8e14, 12
  %v3_8e2c = inttoptr i32 %v2_8e2c to i32*
  store i32 %v2_8e24, i32* %v3_8e2c, align 4
  br i1 %v2_8e28, label %dec_label_pc_9704, label %dec_label_pc_8e34

dec_label_pc_8e34:                                ; preds = %dec_label_pc_8e0c, %dec_label_pc_8ef0, %dec_label_pc_8e20, %dec_label_pc_8f78
  %v0_8e34 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e34 = icmp eq i32 %v0_8e34, 0
  store i1 %v2_8e34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e34, label %dec_label_pc_8e84, label %dec_label_pc_8e3c

dec_label_pc_8e3c:                                ; preds = %dec_label_pc_8e34
  %v0_8e3c = load i32, i32* @sl, align 4
  %v1_8e3c = add i32 %v0_8e3c, 660
  %v2_8e3c = inttoptr i32 %v1_8e3c to i32*
  %v3_8e3c = load i32, i32* %v2_8e3c, align 4
  store i32 %v3_8e3c, i32* %r3.global-to-local, align 4
  %v2_8e40 = sub i32 %v3_8e3c, %v0_8e34
  store i32 %v2_8e40, i32* @r4, align 4
  store i32 %v2_8e40, i32* %r2.global-to-local, align 4
  store i32 %v2_8e40, i32* %v2_8e3c, align 4
  %v0_8e4c = load i32, i32* @r7, align 4
  %v1_8e4c = load i32, i32* @r6, align 4
  %v2_8e4c = add i32 %v1_8e4c, %v0_8e4c
  store i32 %v2_8e4c, i32* %r1.global-to-local, align 4
  store i32 %v0_8e4c, i32* %r0.global-to-local, align 4
  %v3_8e54 = inttoptr i32 %v0_8e4c to i8*
  %v4_8e54 = call i32 @function_15ec4(i8* %v3_8e54, i32 %v2_8e4c, i32 %v2_8e40)
  store i32 %v4_8e54, i32* %r0.global-to-local, align 4
  %v0_8e58 = load i32, i32* @sl, align 4
  %v1_8e58 = add i32 %v0_8e58, 660
  %v2_8e58 = inttoptr i32 %v1_8e58 to i32*
  %v3_8e58 = load i32, i32* %v2_8e58, align 4
  store i32 %v3_8e58, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8e60 = load i32, i32* @sb, align 4
  %v2_8e60 = add i32 %v0_8e60, %v3_8e58
  store i32 %v2_8e60, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e64 = icmp eq i32 %v3_8e58, 0
  store i1 %v2_8e64, i1* %cpsr_z.global-to-local, align 1
  %v3_8e68 = add i32 %v2_8e60, 2116
  %v4_8e68 = inttoptr i32 %v3_8e68 to i8*
  store i8 0, i8* %v4_8e68, align 1
  %v0_8e6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e6c, label %dec_label_pc_8e84, label %dec_label_pc_8e70

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e3c, %dec_label_pc_8dd0
  %v0_8e70 = load i32, i32* @sl, align 4
  %v1_8e70 = add i32 %v0_8e70, 12
  %v2_8e70 = inttoptr i32 %v1_8e70 to i32*
  %v3_8e70 = load i32, i32* %v2_8e70, align 4
  store i32 %v3_8e70, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e74 = icmp eq i32 %v3_8e70, 0
  store i1 %v2_8e74, i1* %cpsr_z.global-to-local, align 1
  %v5_8e78 = icmp sgt i32 %v3_8e70, 0
  br i1 %v5_8e78, label %dec_label_pc_8de8, label %dec_label_pc_8e7c

dec_label_pc_8e7c:                                ; preds = %dec_label_pc_8e70
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8e84:                                ; preds = %dec_label_pc_8e3c, %dec_label_pc_8e34
  %v0_8e84 = load i32, i32* @sl, align 4
  %v1_8e84 = add i32 %v0_8e84, -1448
  %v2_8e84 = inttoptr i32 %v1_8e84 to i8*
  %v3_8e84 = load i8, i8* %v2_8e84, align 1
  %v4_8e84 = zext i8 %v3_8e84 to i32
  store i32 %v4_8e84, i32* %r3.global-to-local, align 4
  %v2_8e88 = icmp ugt i8 %v3_8e84, 6
  store i1 %v2_8e88, i1* %cpsr_c.global-to-local, align 1
  %v7_8e88 = icmp eq i8 %v3_8e84, 7
  store i1 %v7_8e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e88, label %dec_label_pc_8e90, label %dec_label_pc_87b4

dec_label_pc_8e90:                                ; preds = %dec_label_pc_8e84
  %v1_8e90 = add i32 %v0_8e84, 660
  %v2_8e90 = inttoptr i32 %v1_8e90 to i32*
  %v3_8e90 = load i32, i32* %v2_8e90, align 4
  store i32 %v3_8e90, i32* %r3.global-to-local, align 4
  %v2_8e94 = icmp ugt i32 %v3_8e90, 1023
  store i1 %v2_8e94, i1* %cpsr_c.global-to-local, align 1
  %v7_8e94 = icmp eq i32 %v3_8e90, 1024
  store i1 %v7_8e94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e94, label %dec_label_pc_8e9c.loopexit, label %dec_label_pc_8d9c

dec_label_pc_8e9c.loopexit:                       ; preds = %dec_label_pc_8e90
  %v0_8e9c.pre = load i32, i32* @sb, align 4
  %v0_8ea4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e9c

dec_label_pc_8e9c:                                ; preds = %dec_label_pc_8e9c.loopexit, %dec_label_pc_8d88
  %v0_8ea4 = phi i32 [ %v0_8ea4.pre, %dec_label_pc_8e9c.loopexit ], [ %v1_8d94, %dec_label_pc_8d88 ]
  %v0_8e9c = phi i32 [ %v0_8e9c.pre, %dec_label_pc_8e9c.loopexit ], [ %v0_8d8c, %dec_label_pc_8d88 ]
  %v1_8ea0 = add i32 %v0_8e9c, 2180
  store i32 %v1_8ea0, i32* %r1.global-to-local, align 4
  store i32 %v0_8ea4, i32* %r0.global-to-local, align 4
  store i32 960, i32* %r2.global-to-local, align 4
  %v3_8eac = inttoptr i32 %v0_8ea4 to i8*
  %v4_8eac = call i32 @function_15ec4(i8* %v3_8eac, i32 %v1_8ea0, i32 960)
  store i32 %v4_8eac, i32* %r0.global-to-local, align 4
  %v0_8eb0 = load i32, i32* @sl, align 4
  %v1_8eb0 = add i32 %v0_8eb0, 660
  %v2_8eb0 = inttoptr i32 %v1_8eb0 to i32*
  %v3_8eb0 = load i32, i32* %v2_8eb0, align 4
  store i32 %v3_8eb0, i32* %r3.global-to-local, align 4
  %v1_8eb4 = add i32 %v3_8eb0, -64
  store i32 %v1_8eb4, i32* @r4, align 4
  store i32 %v1_8eb4, i32* %v2_8eb0, align 4
  br label %dec_label_pc_8d9c

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8de8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v3_8ec8 = call i32 @function_12498(i32 36, i32* null)
  %v0_8ecc = load i32, i32* @r4, align 4
  store i32 %v0_8ecc, i32* %r1.global-to-local, align 4
  store i32 %v3_8ec8, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_8ed8 = load i32, i32* @r7, align 4
  store i32 %v0_8ed8, i32* %r0.global-to-local, align 4
  %v4_8edc = call i32 @function_12ea4(i32 %v0_8ed8, i32 %v0_8ecc, i32 %v3_8ec8, i32 11)
  store i32 %v4_8edc, i32* %r0.global-to-local, align 4
  %v3_8ee0 = icmp eq i32 %v4_8edc, -1
  store i1 %v3_8ee0, i1* %cpsr_c.global-to-local, align 1
  %v8_8ee0 = icmp eq i32 %v4_8edc, -1
  store i1 %v8_8ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8ee0, label %dec_label_pc_8ee8, label %dec_label_pc_99a0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec0
  %v0_8ee8 = load i32, i32* @sl, align 4
  %v1_8ee8 = add i32 %v0_8ee8, 12
  %v2_8ee8 = inttoptr i32 %v1_8ee8 to i32*
  %v3_8ee8 = load i32, i32* %v2_8ee8, align 4
  store i32 %v3_8ee8, i32* @r5, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8ef0:                                ; preds = %dec_label_pc_8e14
  %v0_8ef0 = load i32, i32* @r7, align 4
  store i32 %v0_8ef0, i32* %r0.global-to-local, align 4
  %v1_8ef4 = add i32 %v0_8e14, 660
  %v2_8ef4 = inttoptr i32 %v1_8ef4 to i32*
  %v3_8ef4 = load i32, i32* %v2_8ef4, align 4
  store i32 %v3_8ef4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_8f00 = call i32 @function_12ea4(i32 %v0_8ef0, i32 %v3_8ef4, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2)
  store i32 %v5_8f00, i32* %r0.global-to-local, align 4
  %v2_8f04 = icmp eq i32 %v5_8f00, -1
  store i1 %v2_8f04, i1* %cpsr_c.global-to-local, align 1
  %v7_8f04 = icmp eq i32 %v5_8f00, -1
  store i1 %v7_8f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f04, label %dec_label_pc_8e34, label %dec_label_pc_8f0c

dec_label_pc_8f0c:                                ; preds = %dec_label_pc_8ef0
  %v0_8f0c = load i32, i32* @sl, align 4
  %v1_8f0c = add i32 %v0_8f0c, 660
  %v2_8f0c = inttoptr i32 %v1_8f0c to i32*
  %v3_8f0c = load i32, i32* %v2_8f0c, align 4
  store i32 %v3_8f0c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_8f18 = load i32, i32* @r7, align 4
  store i32 %v0_8f18, i32* %r0.global-to-local, align 4
  %v5_8f1c = call i32 @function_12ea4(i32 %v0_8f18, i32 %v3_8f0c, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2)
  %v1_8f20 = load i32, i32* @sb, align 4
  %v2_8f20 = add i32 %v1_8f20, %v5_8f1c
  store i32 %v2_8f20, i32* %ip.global-to-local, align 4
  store i32 %v5_8f1c, i32* @r6, align 4
  store i32 %v5_8f1c, i32* %r1.global-to-local, align 4
  %v0_8f2c = load i32, i32* @r7, align 4
  store i32 %v0_8f2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a268.39 to i32), i32* %r2.global-to-local, align 4
  %v0_8f34 = load i32, i32* @r4, align 4
  store i32 %v0_8f34, i32* %r3.global-to-local, align 4
  %v0_8f38 = load i32, i32* @r5, align 4
  %v1_8f38 = trunc i32 %v0_8f38 to i8
  %v3_8f38 = add i32 %v2_8f20, 2114
  %v4_8f38 = inttoptr i32 %v3_8f38 to i8*
  store i8 %v1_8f38, i8* %v4_8f38, align 1
  %v4_8f3c = call i32 @function_12ea4(i32 %v0_8f2c, i32 %v5_8f1c, i32 ptrtoint (i32* @global_var_1a268.39 to i32), i32 %v0_8f34)
  store i32 %v4_8f3c, i32* %r0.global-to-local, align 4
  %v2_8f40 = icmp eq i32 %v4_8f3c, -1
  store i1 %v2_8f40, i1* %cpsr_c.global-to-local, align 1
  %v7_8f40 = icmp eq i32 %v4_8f3c, -1
  store i1 %v7_8f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f40, label %dec_label_pc_8f64, label %dec_label_pc_8f48

dec_label_pc_8f48:                                ; preds = %dec_label_pc_8f0c
  %v0_8f48 = load i32, i32* @r7, align 4
  store i32 %v0_8f48, i32* %r0.global-to-local, align 4
  %v0_8f4c = load i32, i32* @r6, align 4
  store i32 %v0_8f4c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a268.39 to i32), i32* %r2.global-to-local, align 4
  %v0_8f54 = load i32, i32* @r4, align 4
  store i32 %v0_8f54, i32* %r3.global-to-local, align 4
  %v4_8f58 = call i32 @function_12ea4(i32 %v0_8f48, i32 %v0_8f4c, i32 ptrtoint (i32* @global_var_1a268.39 to i32), i32 %v0_8f54)
  %v0_8f5c = load i32, i32* @sb, align 4
  %v2_8f5c = add i32 %v0_8f5c, %v4_8f58
  store i32 %v2_8f5c, i32* %r0.global-to-local, align 4
  %v0_8f60 = load i32, i32* @r5, align 4
  %v1_8f60 = trunc i32 %v0_8f60 to i8
  %v3_8f60 = add i32 %v2_8f5c, 2116
  %v4_8f60 = inttoptr i32 %v3_8f60 to i8*
  store i8 %v1_8f60, i8* %v4_8f60, align 1
  br label %dec_label_pc_8f64

dec_label_pc_8f64:                                ; preds = %dec_label_pc_8f0c, %dec_label_pc_8f48
  %v0_8f64 = load i32, i32* @r7, align 4
  store i32 %v0_8f64, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_8f6c = inttoptr i32 %v0_8f64 to i8*
  %v3_8f6c = call i32 @function_12f10(i8* %v2_8f6c, i32 16)
  store i32 %v3_8f6c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8f70 = icmp eq i32 %v3_8f6c, 0
  store i1 %v2_8f70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f70, label %dec_label_pc_9b54, label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8f64
  %v1_8f78 = add i32 %v3_8f6c, 2
  store i32 %v1_8f78, i32* %r3.global-to-local, align 4
  %v1_8f7c = load i32, i32* @sl, align 4
  %v2_8f7c = add i32 %v1_8f7c, 12
  %v3_8f7c = inttoptr i32 %v2_8f7c to i32*
  store i32 %v1_8f78, i32* %v3_8f7c, align 4
  br label %dec_label_pc_8e34

dec_label_pc_8f84:                                ; preds = %dec_label_pc_858c
  %v2_8f84 = inttoptr i32 %v1_85e0 to i32*
  %v3_8f84 = load i32, i32* %v2_8f84, align 4
  store i32 %v3_8f84, i32* %ip.global-to-local, align 4
  %v3_8f8c = udiv i32 %v3_8f84, 32
  %v3_8f90 = mul nuw nsw i32 %v3_8f8c, 4
  store i32 %v2_86d8, i32* @lr, align 4
  %v2_8f98 = add i32 %v3_8f90, %v2_86d8
  store i32 %v2_8f98, i32* %r2.global-to-local, align 4
  %v1_8f9c = add i32 %v2_8f98, -164
  %v2_8f9c = inttoptr i32 %v1_8f9c to i32*
  %v3_8f9c = load i32, i32* %v2_8f9c, align 4
  %v1_8fa0 = urem i32 %v3_8f84, 32
  store i32 %v1_8fa0, i32* %r0.global-to-local, align 4
  store i32 %v1_8584, i32* %r3.global-to-local, align 4
  %v7_8fa8 = shl i32 %v1_8584, %v1_8fa0
  %v8_8fa8 = or i32 %v3_8f9c, %v7_8fa8
  store i32 %v8_8fa8, i32* %r1.global-to-local, align 4
  %v1_8fac = load i32, i32* @r8, align 4
  %v2_8fac = sub i32 %v3_8f84, %v1_8fac
  %v3_8fac = icmp uge i32 %v3_8f84, %v1_8fac
  store i1 %v3_8fac, i1* %cpsr_c.global-to-local, align 1
  %v4_8fac = xor i32 %v1_8fac, %v3_8f84
  %v5_8fac = xor i32 %v2_8fac, %v3_8f84
  %v6_8fac = and i32 %v5_8fac, %v4_8fac
  %v7_8fac = icmp slt i32 %v6_8fac, 0
  %v8_8fac = icmp slt i32 %v2_8fac, 0
  %v9_8fac = icmp eq i32 %v3_8f84, %v1_8fac
  store i1 %v9_8fac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8fa8, i32* %v2_8f9c, align 4
  %v3_8fb4 = xor i1 %v8_8fac, %v7_8fac
  %v4_8fb4 = or i1 %v9_8fac, %v3_8fb4
  br i1 %v4_8fb4, label %dec_label_pc_85bc, label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f84
  %v0_8fb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_8fb8 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fb8 = add i32 %v1_8fb8, %v0_8fb8
  store i32 %v2_8fb8, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8fc0:                                ; preds = %dec_label_pc_8810
  store i32 %v3_8854, i32* @r0, align 4
  %v1_8fc4 = call i32 @function_165e8(i32 %v3_8854)
  store i32 %v1_8fc4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8fcc = load i32, i32* @sl, align 4
  %v2_8fcc = add i32 %v1_8fcc, -1452
  %v3_8fcc = inttoptr i32 %v2_8fcc to i32*
  store i32 -1, i32* %v3_8fcc, align 4
  %v0_8fd0 = load i32, i32* @r5, align 4
  %v1_8fd0 = trunc i32 %v0_8fd0 to i8
  %v2_8fd0 = load i32, i32* @sl, align 4
  %v3_8fd0 = add i32 %v2_8fd0, -1448
  %v4_8fd0 = inttoptr i32 %v3_8fd0 to i8*
  store i8 %v1_8fd0, i8* %v4_8fd0, align 1
  br label %dec_label_pc_87b4

dec_label_pc_8fd8:                                ; preds = %dec_label_pc_8594
  %v2_8fd8 = inttoptr i32 %v1_85e0 to i32*
  %v3_8fd8 = load i32, i32* %v2_8fd8, align 4
  store i32 %v3_8fd8, i32* %ip.global-to-local, align 4
  %v3_8fe0 = udiv i32 %v3_8fd8, 32
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v3_8fe8 = mul nuw nsw i32 %v3_8fe0, 4
  %v2_8fec = add i32 %v3_8fe8, %v2_86d8
  store i32 %v2_8fec, i32* %r2.global-to-local, align 4
  %v1_8ff0 = add i32 %v2_8fec, -164
  %v2_8ff0 = inttoptr i32 %v1_8ff0 to i32*
  %v3_8ff0 = load i32, i32* %v2_8ff0, align 4
  %v1_8ff4 = urem i32 %v3_8fd8, 32
  store i32 %v1_8ff4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8ffc = shl i32 1, %v1_8ff4
  %v8_8ffc = or i32 %v3_8ff0, %v7_8ffc
  store i32 %v8_8ffc, i32* %r1.global-to-local, align 4
  %v1_9000 = load i32, i32* @r8, align 4
  %v2_9000 = sub i32 %v3_8fd8, %v1_9000
  %v3_9000 = icmp uge i32 %v3_8fd8, %v1_9000
  store i1 %v3_9000, i1* %cpsr_c.global-to-local, align 1
  %v4_9000 = xor i32 %v1_9000, %v3_8fd8
  %v5_9000 = xor i32 %v2_9000, %v3_8fd8
  %v6_9000 = and i32 %v5_9000, %v4_9000
  %v7_9000 = icmp slt i32 %v6_9000, 0
  %v8_9000 = icmp slt i32 %v2_9000, 0
  %v9_9000 = icmp eq i32 %v3_8fd8, %v1_9000
  store i1 %v9_9000, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8ffc, i32* %v2_8ff0, align 4
  %v3_9008 = xor i1 %v8_9000, %v7_9000
  %v4_9008 = or i1 %v9_9000, %v3_9008
  br i1 %v4_9008, label %dec_label_pc_85bc, label %dec_label_pc_900c

dec_label_pc_900c:                                ; preds = %dec_label_pc_8fd8
  %v0_900c = load i32, i32* %ip.global-to-local, align 4
  %v1_900c = load i32, i32* %r3.global-to-local, align 4
  %v2_900c = add i32 %v1_900c, %v0_900c
  store i32 %v2_900c, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_9054:                                ; preds = %dec_label_pc_8798
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_905c = call i32 @function_12e80(i32 %v2_8278, i32 10240)
  store i32 %v2_905c, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_9068 = load i32, i32* @sl, align 4
  %v1_9068 = add i32 %v0_9068, -1452
  %v2_9068 = inttoptr i32 %v1_9068 to i32*
  %v3_9068 = load i32, i32* %v2_9068, align 4
  store i32 %v3_9068, i32* @r0, align 4
  store i32 %v2_8278, i32* @r1, align 4
  store i32 10240, i32* @r2, align 4
  %v4_9074 = call i32 @function_154d0(i32 %v3_9068, i32 %v2_8278, i32 10240, i32 16386)
  store i32 %v4_9074, i32* %r0.global-to-local, align 4
  store i32 %v4_9074, i32* @fp, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_907c = icmp eq i32 %v4_9074, 0
  store i1 %v2_907c, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp169 = icmp slt i32 %v4_9074, 1
  br i1 %tmp169, label %dec_label_pc_95bc, label %dec_label_pc_9088

dec_label_pc_9088:                                ; preds = %dec_label_pc_9054
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i32 %v4_9074, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a260.41 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_9098 = call i32 @function_12ea4(i32 %v2_8278, i32 %v4_9074, i32 ptrtoint ([5 x i8]* @global_var_1a260.41 to i32), i32 4)
  store i32 %v5_9098, i32* %r0.global-to-local, align 4
  %v3_909c = icmp eq i32 %v5_9098, -1
  store i1 %v3_909c, i1* %cpsr_c.global-to-local, align 1
  %v8_909c = icmp eq i32 %v5_9098, -1
  store i1 %v8_909c, i1* %cpsr_z.global-to-local, align 1
  %v0_90a4 = load i32, i32* @fp, align 4
  br i1 %v3_909c, label %dec_label_pc_90a4, label %dec_label_pc_90ac

dec_label_pc_90a4:                                ; preds = %dec_label_pc_9088
  %v3_90a4 = icmp ugt i32 %v0_90a4, 10239
  store i1 %v3_90a4, i1* %cpsr_c.global-to-local, align 1
  %v8_90a4 = icmp eq i32 %v0_90a4, 10240
  store i1 %v8_90a4, i1* %cpsr_z.global-to-local, align 1
  %v5_90a8 = icmp slt i32 %v0_90a4, 10240
  br i1 %v5_90a8, label %dec_label_pc_87b4, label %dec_label_pc_90ac

dec_label_pc_90ac:                                ; preds = %dec_label_pc_9088, %dec_label_pc_90a4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a260.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_90a4, i32* %r1.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v5_90bc = call i32 @function_12ea4(i32 %v2_8278, i32 %v0_90a4, i32 ptrtoint ([5 x i8]* @global_var_1a260.41 to i32), i32 4)
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_90c8 = add i32 %v5_90bc, %v2_8278
  %v5_90c8 = inttoptr i32 %v4_90c8 to i8*
  store i8 0, i8* %v5_90c8, align 1
  %v0_90cc = load i32, i32* @r5, align 4
  store i32 %v0_90cc, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_90d4 = inttoptr i32 %v0_90cc to i32*
  %v3_90d4 = call i32 @function_12498(i32 46, i32* %v2_90d4)
  %v0_90d8 = load i32, i32* @fp, align 4
  store i32 %v0_90d8, i32* @r1, align 4
  store i32 %v3_90d4, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_90e4 = call i32 @function_13148(i8* %v3_829c, i32 %v0_90d8, i32 %v3_90d4)
  store i32 %v4_90e4, i32* %r0.global-to-local, align 4
  %v2_90e8 = icmp eq i32 %v4_90e4, -1
  store i1 %v2_90e8, i1* %cpsr_c.global-to-local, align 1
  %v7_90e8 = icmp eq i32 %v4_90e4, -1
  store i1 %v7_90e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e8, label %.thread22, label %bb170

bb170:                                            ; preds = %dec_label_pc_90ac
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_90f0 = load i32, i32* @sl, align 4
  %v3_90f0 = inttoptr i32 %v2_90f0 to i32*
  store i32 2, i32* %v3_90f0, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_90ac, %bb170
  %v0_90f4 = load i32, i32* @r5, align 4
  store i32 %v0_90f4, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v2_90fc = inttoptr i32 %v0_90f4 to i32*
  %v3_90fc = call i32 @function_12498(i32 45, i32* %v2_90fc)
  %v0_9100 = load i32, i32* @fp, align 4
  store i32 %v0_9100, i32* @r1, align 4
  store i32 %v3_90fc, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_910c = call i32 @function_13148(i8* %v3_829c, i32 %v0_9100, i32 %v3_90fc)
  store i32 %v4_910c, i32* %r0.global-to-local, align 4
  %v2_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v2_9110, i1* %cpsr_c.global-to-local, align 1
  %v7_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v7_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9110, label %.thread23, label %bb171

bb171:                                            ; preds = %.thread22
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9118 = load i32, i32* @sl, align 4
  %v3_9118 = inttoptr i32 %v2_9118 to i32*
  store i32 1, i32* %v3_9118, align 4
  br label %.thread23

.thread23:                                        ; preds = %.thread22, %bb171
  %v0_911c = load i32, i32* @r5, align 4
  store i32 %v0_911c, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_9124 = load i32, i32* @sl, align 4
  %v2_9124 = add i32 %v1_9124, 4
  %v3_9124 = inttoptr i32 %v2_9124 to i32*
  store i32 %v0_911c, i32* %v3_9124, align 4
  %v2_9128 = inttoptr i32 %v0_911c to i32*
  %v3_9128 = call i32 @function_12498(i32 44, i32* %v2_9128)
  %v0_912c = load i32, i32* @fp, align 4
  store i32 %v0_912c, i32* @r1, align 4
  store i32 %v3_9128, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9138 = call i32 @function_13148(i8* %v3_829c, i32 %v0_912c, i32 %v3_9128)
  store i32 %v4_9138, i32* %r0.global-to-local, align 4
  %v2_913c = icmp eq i32 %v4_9138, -1
  store i1 %v2_913c, i1* %cpsr_c.global-to-local, align 1
  %v7_913c = icmp eq i32 %v4_9138, -1
  store i1 %v7_913c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_913c, label %.thread24, label %dec_label_pc_9144

dec_label_pc_9144:                                ; preds = %.thread23
  %v0_9144 = load i32, i32* @r5, align 4
  store i32 %v0_9144, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v2_914c = inttoptr i32 %v0_9144 to i32*
  %v3_914c = call i32 @function_12498(i32 44, i32* %v2_914c)
  %v0_9150 = load i32, i32* @fp, align 4
  store i32 %v0_9150, i32* @r1, align 4
  store i32 %v3_914c, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_915c = call i32 @function_13148(i8* %v3_829c, i32 %v0_9150, i32 %v3_914c)
  store i32 %v4_915c, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9164 = add i32 %v4_915c, %v2_8278
  %v3_9164 = inttoptr i32 %v2_9164 to i8*
  %v4_9164 = load i8, i8* %v3_9164, align 1
  %v2_916c = icmp ugt i8 %v4_9164, 31
  store i1 %v2_916c, i1* %cpsr_c.global-to-local, align 1
  %v7_916c = icmp eq i8 %v4_9164, 32
  store i1 %v7_916c, i1* %cpsr_z.global-to-local, align 1
  %v2_9174 = zext i1 %v7_916c to i32
  %v2_9174.v4_915c = add i32 %v2_9174, %v4_915c
  store i32 %v2_9174.v4_915c, i32* @r4, align 4
  %v2_9178 = add i32 %v2_9174.v4_915c, %v2_8278
  store i32 %v2_9178, i32* @r6, align 4
  store i32 %v2_9178, i32* %r0.global-to-local, align 4
  %v1_9180 = load i32, i32* @fp, align 4
  %v2_9180 = sub i32 %v1_9180, %v2_9174.v4_915c
  store i32 %v2_9180, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_918c = call i32 @function_12ea4(i32 %v2_9178, i32 %v2_9180, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2)
  store i32 %v5_918c, i32* %r0.global-to-local, align 4
  %v2_9190 = icmp eq i32 %v5_918c, -1
  store i1 %v2_9190, i1* %cpsr_c.global-to-local, align 1
  %v7_9190 = icmp eq i32 %v5_918c, -1
  store i1 %v7_9190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9190, label %.thread24, label %dec_label_pc_9198

dec_label_pc_9198:                                ; preds = %dec_label_pc_9144
  %v2_9198 = icmp ne i32 %v5_918c, 0
  store i1 %v2_9198, i1* %cpsr_c.global-to-local, align 1
  %v7_9198 = icmp eq i32 %v5_918c, 1
  store i1 %v7_9198, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  %v7_91a0 = icmp slt i32 %v5_918c, 2
  br i1 %v7_91a0, label %bb173, label %bb172

bb172:                                            ; preds = %dec_label_pc_9198
  %v9_91a0 = add i32 %v5_918c, -2
  store i32 %v9_91a0, i32* %r0.global-to-local, align 4
  br label %bb173

bb173:                                            ; preds = %dec_label_pc_9198, %bb172
  %v1_91a8 = phi i32 [ %v5_918c, %dec_label_pc_9198 ], [ %v9_91a0, %bb172 ]
  store i32 %v2_86d8, i32* %r2.global-to-local, align 4
  %v2_91a8 = add i32 %v1_91a8, %v2_86d8
  %v1_91ac = load i32, i32* @r4, align 4
  %v2_91ac = add i32 %v2_91a8, %v1_91ac
  store i32 %v2_91ac, i32* %r3.global-to-local, align 4
  %v0_91b0 = load i32, i32* @r5, align 4
  %v1_91b0 = trunc i32 %v0_91b0 to i8
  %v3_91b0 = load i32, i32* @r7, align 4
  %v4_91b0 = add i32 %v3_91b0, %v2_91ac
  %v5_91b0 = inttoptr i32 %v4_91b0 to i8*
  store i8 %v1_91b0, i8* %v5_91b0, align 1
  %v0_91b4 = load i32, i32* @r6, align 4
  store i32 %v0_91b4, i32* %r0.global-to-local, align 4
  %v1_91b8 = inttoptr i32 %v0_91b4 to i8*
  %v2_91b8 = call i32 @function_12dec(i8* %v1_91b8)
  %v0_91bc = load i32, i32* @r5, align 4
  store i32 %v0_91bc, i32* %r1.global-to-local, align 4
  store i32 %v2_91b8, i32* @r4, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v2_91c8 = inttoptr i32 %v0_91bc to i32*
  %v3_91c8 = call i32 @function_12498(i32 43, i32* %v2_91c8)
  %v0_91cc = load i32, i32* @r4, align 4
  store i32 %v0_91cc, i32* @r1, align 4
  store i32 %v3_91c8, i32* %r2.global-to-local, align 4
  %v0_91d4 = load i32, i32* @r6, align 4
  store i32 %v0_91d4, i32* %r0.global-to-local, align 4
  %v3_91d8 = inttoptr i32 %v0_91d4 to i8*
  %v4_91d8 = call i32 @function_13148(i8* %v3_91d8, i32 %v0_91cc, i32 %v3_91c8)
  store i32 %v4_91d8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_91dc = icmp eq i32 %v4_91d8, 0
  store i1 %v2_91dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_91dc, label %.thread24, label %bb174

bb174:                                            ; preds = %bb173
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_91e4 = load i32, i32* @sl, align 4
  %v3_91e4 = add i32 %v2_91e4, 4
  %v4_91e4 = inttoptr i32 %v3_91e4 to i32*
  store i32 1, i32* %v4_91e4, align 4
  br label %.thread24

.thread24:                                        ; preds = %bb173, %dec_label_pc_9144, %.thread23, %bb174
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_91f4 = load i32, i32* @sl, align 4
  %v2_91f4 = add i32 %v1_91f4, 8
  %v3_91f4 = inttoptr i32 %v2_91f4 to i32*
  store i32 0, i32* %v3_91f4, align 4
  %v3_91f8 = call i32 @function_12498(i32 41, i32* null)
  %v0_91fc = load i32, i32* @fp, align 4
  store i32 %v0_91fc, i32* @r1, align 4
  store i32 %v3_91f8, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9208 = call i32 @function_13148(i8* %v3_829c, i32 %v0_91fc, i32 %v3_91f8)
  store i32 %v4_9208, i32* %r0.global-to-local, align 4
  %v2_9210 = icmp eq i32 %v4_9208, -1
  store i1 %v2_9210, i1* %cpsr_c.global-to-local, align 1
  %v7_9210 = icmp eq i32 %v4_9208, -1
  store i1 %v7_9210, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9210, label %.thread25, label %dec_label_pc_921c

dec_label_pc_921c:                                ; preds = %.thread24
  %v0_921c = load i32, i32* @r7, align 4
  store i32 %v0_921c, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_9224 = inttoptr i32 %v0_921c to i32*
  %v3_9224 = call i32 @function_12498(i32 41, i32* %v2_9224)
  %v0_9228 = load i32, i32* @fp, align 4
  store i32 %v0_9228, i32* @r1, align 4
  store i32 %v3_9224, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9234 = call i32 @function_13148(i8* %v3_829c, i32 %v0_9228, i32 %v3_9224)
  store i32 %v4_9234, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v2_923c = add i32 %v4_9234, %v2_8278
  %v3_923c = inttoptr i32 %v2_923c to i8*
  %v4_923c = load i8, i8* %v3_923c, align 1
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9244 = icmp ugt i8 %v4_923c, 31
  store i1 %v2_9244, i1* %cpsr_c.global-to-local, align 1
  %v7_9244 = icmp eq i8 %v4_923c, 32
  store i1 %v7_9244, i1* %cpsr_z.global-to-local, align 1
  %v2_924c = zext i1 %v7_9244 to i32
  %v2_924c.v4_9234 = add i32 %v2_924c, %v4_9234
  store i32 %v2_924c.v4_9234, i32* @r4, align 4
  %v2_9250 = add i32 %v2_924c.v4_9234, %v2_8278
  store i32 %v2_9250, i32* @r5, align 4
  store i32 %v2_9250, i32* %r0.global-to-local, align 4
  %v1_9258 = load i32, i32* @fp, align 4
  %v2_9258 = sub i32 %v1_9258, %v2_924c.v4_9234
  store i32 %v2_9258, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9264 = call i32 @function_12ea4(i32 %v2_9250, i32 %v2_9258, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2)
  store i32 %v5_9264, i32* %r0.global-to-local, align 4
  %v2_9268 = icmp eq i32 %v5_9264, -1
  store i1 %v2_9268, i1* %cpsr_c.global-to-local, align 1
  %v7_9268 = icmp eq i32 %v5_9264, -1
  store i1 %v7_9268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9268, label %.thread25, label %dec_label_pc_9270

dec_label_pc_9270:                                ; preds = %dec_label_pc_921c
  %v2_9270 = icmp ne i32 %v5_9264, 0
  store i1 %v2_9270, i1* %cpsr_c.global-to-local, align 1
  %v7_9270 = icmp eq i32 %v5_9264, 1
  store i1 %v7_9270, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r1.global-to-local, align 4
  %v7_9278 = icmp slt i32 %v5_9264, 2
  br i1 %v7_9278, label %bb176, label %bb175

bb175:                                            ; preds = %dec_label_pc_9270
  %v9_9278 = add i32 %v5_9264, -2
  store i32 %v9_9278, i32* %r0.global-to-local, align 4
  br label %bb176

bb176:                                            ; preds = %dec_label_pc_9270, %bb175
  %v1_9280 = phi i32 [ %v5_9264, %dec_label_pc_9270 ], [ %v9_9278, %bb175 ]
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v2_9280 = add i32 %v1_9280, %v2_86d8
  %v1_9284 = load i32, i32* @r4, align 4
  %v2_9284 = add i32 %v2_9280, %v1_9284
  store i32 %v2_9284, i32* %r3.global-to-local, align 4
  %v0_9288 = load i32, i32* @r7, align 4
  %v1_9288 = trunc i32 %v0_9288 to i8
  %v3_9288 = load i32, i32* @r6, align 4
  %v4_9288 = add i32 %v3_9288, %v2_9284
  %v5_9288 = inttoptr i32 %v4_9288 to i8*
  store i8 %v1_9288, i8* %v5_9288, align 1
  %v0_928c = load i32, i32* @r5, align 4
  store i32 %v0_928c, i32* %r0.global-to-local, align 4
  %v1_9290 = inttoptr i32 %v0_928c to i8*
  %v2_9290 = call i32 @function_12dec(i8* %v1_9290)
  %v0_9294 = load i32, i32* @r7, align 4
  store i32 %v0_9294, i32* %r1.global-to-local, align 4
  store i32 %v2_9290, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_92a0 = inttoptr i32 %v0_9294 to i32*
  %v3_92a0 = call i32 @function_12498(i32 42, i32* %v2_92a0)
  %v0_92a4 = load i32, i32* @r4, align 4
  store i32 %v0_92a4, i32* @r1, align 4
  store i32 %v3_92a0, i32* %r2.global-to-local, align 4
  %v0_92ac = load i32, i32* @r5, align 4
  store i32 %v0_92ac, i32* %r0.global-to-local, align 4
  %v3_92b0 = inttoptr i32 %v0_92ac to i8*
  %v4_92b0 = call i32 @function_13148(i8* %v3_92b0, i32 %v0_92a4, i32 %v3_92a0)
  store i32 %v4_92b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_92b4 = icmp eq i32 %v4_92b0, 0
  store i1 %v2_92b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_92b4, label %.thread25, label %bb177

bb177:                                            ; preds = %bb176
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_92bc = load i32, i32* @sl, align 4
  %v3_92bc = add i32 %v2_92bc, 8
  %v4_92bc = inttoptr i32 %v3_92bc to i32*
  store i32 1, i32* %v4_92bc, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb176, %dec_label_pc_921c, %.thread24, %bb177
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_92c8 = call i32 @function_12498(i32 40, i32* null)
  %v0_92cc = load i32, i32* @fp, align 4
  store i32 %v0_92cc, i32* @r1, align 4
  store i32 %v3_92c8, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_92d8 = call i32 @function_13148(i8* %v3_829c, i32 %v0_92cc, i32 %v3_92c8)
  store i32 %v4_92d8, i32* %r0.global-to-local, align 4
  %v2_92dc = icmp eq i32 %v4_92d8, -1
  store i1 %v2_92dc, i1* %cpsr_c.global-to-local, align 1
  %v7_92dc = icmp eq i32 %v4_92d8, -1
  store i1 %v7_92dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_92dc, label %.thread, label %dec_label_pc_92f4

.thread:                                          ; preds = %.thread25
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92ec = load i32, i32* @sl, align 4
  %v3_92ec = add i32 %v2_92ec, 12
  %v4_92ec = inttoptr i32 %v3_92ec to i32*
  store i32 0, i32* %v4_92ec, align 4
  br label %dec_label_pc_9378

dec_label_pc_92f4:                                ; preds = %.thread25
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_92fc = call i32 @function_12498(i32 40, i32* null)
  %v0_9300 = load i32, i32* @fp, align 4
  store i32 %v0_9300, i32* @r1, align 4
  store i32 %v3_92fc, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_930c = call i32 @function_13148(i8* %v3_829c, i32 %v0_9300, i32 %v3_92fc)
  store i32 %v4_930c, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %r2.global-to-local, align 4
  %v2_9314 = add i32 %v4_930c, %v2_8278
  %v3_9314 = inttoptr i32 %v2_9314 to i8*
  %v4_9314 = load i8, i8* %v3_9314, align 1
  %v2_9318 = icmp ugt i8 %v4_9314, 31
  store i1 %v2_9318, i1* %cpsr_c.global-to-local, align 1
  %v7_9318 = icmp eq i8 %v4_9314, 32
  store i1 %v7_9318, i1* %cpsr_z.global-to-local, align 1
  %v2_9324 = zext i1 %v7_9318 to i32
  %v2_9324.v4_930c = add i32 %v2_9324, %v4_930c
  store i32 %v2_9324.v4_930c, i32* @r4, align 4
  %v2_9328 = add i32 %v2_9324.v4_930c, %v2_8278
  store i32 %v2_9328, i32* @r5, align 4
  store i32 %v2_9328, i32* %r0.global-to-local, align 4
  %v1_9330 = load i32, i32* @fp, align 4
  %v2_9330 = sub i32 %v1_9330, %v2_9324.v4_930c
  store i32 %v2_9330, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_933c = call i32 @function_12ea4(i32 %v2_9328, i32 %v2_9330, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2)
  store i32 %v5_933c, i32* %r0.global-to-local, align 4
  %v2_9340 = icmp eq i32 %v5_933c, -1
  store i1 %v2_9340, i1* %cpsr_c.global-to-local, align 1
  %v7_9340 = icmp eq i32 %v5_933c, -1
  store i1 %v7_9340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9340, label %dec_label_pc_9378, label %dec_label_pc_9348

dec_label_pc_9348:                                ; preds = %dec_label_pc_92f4
  %v2_9348 = icmp ne i32 %v5_933c, 0
  store i1 %v2_9348, i1* %cpsr_c.global-to-local, align 1
  %v7_9348 = icmp eq i32 %v5_933c, 1
  store i1 %v7_9348, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %ip.global-to-local, align 4
  %v7_9350 = icmp slt i32 %v5_933c, 2
  br i1 %v7_9350, label %bb179, label %bb178

bb178:                                            ; preds = %dec_label_pc_9348
  %v9_9350 = add i32 %v5_933c, -2
  store i32 %v9_9350, i32* %r0.global-to-local, align 4
  br label %bb179

bb179:                                            ; preds = %dec_label_pc_9348, %bb178
  %v1_9358 = phi i32 [ %v5_933c, %dec_label_pc_9348 ], [ %v9_9350, %bb178 ]
  store i32 %v2_86d8, i32* %ip.global-to-local, align 4
  %v2_9358 = add i32 %v1_9358, %v2_86d8
  %v1_935c = load i32, i32* @r4, align 4
  %v2_935c = add i32 %v2_9358, %v1_935c
  store i32 %v2_935c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9364 = load i32, i32* @r5, align 4
  store i32 %v0_9364, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_936c = load i32, i32* @r6, align 4
  %v4_936c = add i32 %v3_936c, %v2_935c
  %v5_936c = inttoptr i32 %v4_936c to i8*
  store i8 0, i8* %v5_936c, align 1
  %v2_9370 = inttoptr i32 %v0_9364 to i8*
  %v3_9370 = call i32 @function_12f10(i8* %v2_9370, i32 10)
  store i32 %v3_9370, i32* %r0.global-to-local, align 4
  %v1_9374 = load i32, i32* @sl, align 4
  %v2_9374 = add i32 %v1_9374, 12
  %v3_9374 = inttoptr i32 %v2_9374 to i32*
  store i32 %v3_9370, i32* %v3_9374, align 4
  br label %dec_label_pc_9378

dec_label_pc_9378:                                ; preds = %.thread, %dec_label_pc_92f4, %bb179
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_937c:                                ; preds = %dec_label_pc_9548, %dec_label_pc_94c8, %dec_label_pc_9378
  %v1_9388 = phi i32 [ 0, %dec_label_pc_9378 ], [ %v0_94c8, %dec_label_pc_94c8 ], [ %v1_9388.pre.pre, %dec_label_pc_9548 ]
  store i32 %v2_8278, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_9388 = add i32 %v1_9388, %v2_8278
  store i32 %v2_9388, i32* @r4, align 4
  %v3_938c = call i32 @function_12498(i32 39, i32* null)
  %v0_9390 = load i32, i32* @fp, align 4
  store i32 %v0_9390, i32* @r1, align 4
  store i32 %v3_938c, i32* %r2.global-to-local, align 4
  %v0_9398 = load i32, i32* @r4, align 4
  store i32 %v0_9398, i32* %r0.global-to-local, align 4
  %v3_939c = inttoptr i32 %v0_9398 to i8*
  %v4_939c = call i32 @function_13148(i8* %v3_939c, i32 %v0_9390, i32 %v3_938c)
  store i32 %v4_939c, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_93a8 = icmp eq i32 %v4_939c, -1
  store i1 %v2_93a8, i1* %cpsr_c.global-to-local, align 1
  %v7_93a8 = icmp eq i32 %v4_939c, -1
  store i1 %v7_93a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93a8, label %dec_label_pc_95d8, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_937c
  %v0_93b4 = load i32, i32* @sl, align 4
  %v1_93b4 = add i32 %v0_93b4, 16
  %v2_93b4 = inttoptr i32 %v1_93b4 to i32*
  %v3_93b4 = load i32, i32* %v2_93b4, align 4
  store i32 %v3_93b4, i32* %r3.global-to-local, align 4
  %v2_93b8 = icmp ugt i32 %v3_93b4, 3
  store i1 %v2_93b8, i1* %cpsr_c.global-to-local, align 1
  %v7_93b8 = icmp eq i32 %v3_93b4, 4
  store i1 %v7_93b8, i1* %cpsr_z.global-to-local, align 1
  %v8_93bc = icmp sgt i32 %v3_93b4, 4
  br i1 %v8_93bc, label %dec_label_pc_95d8, label %dec_label_pc_93c0

dec_label_pc_93c0:                                ; preds = %dec_label_pc_93b4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v3_93c8 = call i32 @function_12498(i32 39, i32* null)
  %v0_93cc = load i32, i32* @fp, align 4
  store i32 %v0_93cc, i32* @r1, align 4
  store i32 %v3_93c8, i32* %r2.global-to-local, align 4
  %v0_93d4 = load i32, i32* @r4, align 4
  store i32 %v0_93d4, i32* %r0.global-to-local, align 4
  %v3_93d8 = inttoptr i32 %v0_93d4 to i8*
  %v4_93d8 = call i32 @function_13148(i8* %v3_93d8, i32 %v0_93cc, i32 %v3_93c8)
  store i32 %v4_93d8, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v1_93e0 = load i32, i32* @r5, align 4
  %v2_93e0 = add i32 %v1_93e0, %v4_93d8
  store i32 %v2_93e0, i32* @r8, align 4
  %v2_93e4 = add i32 %v2_93e0, %v2_8278
  %v3_93e4 = inttoptr i32 %v2_93e4 to i8*
  %v4_93e4 = load i8, i8* %v3_93e4, align 1
  %v6_93e4 = zext i8 %v4_93e4 to i32
  store i32 %v6_93e4, i32* %r3.global-to-local, align 4
  %v2_93e8 = icmp ugt i8 %v4_93e4, 31
  store i1 %v2_93e8, i1* %cpsr_c.global-to-local, align 1
  %v7_93e8 = icmp eq i8 %v4_93e4, 32
  store i1 %v7_93e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93e8, label %bb180, label %bb181

bb180:                                            ; preds = %dec_label_pc_93c0
  %v2_93ec = add i32 %v4_93d8, 1
  store i32 %v2_93ec, i32* %r0.global-to-local, align 4
  br label %bb181

bb181:                                            ; preds = %dec_label_pc_93c0, %bb180
  %v1_93fc = phi i32 [ %v4_93d8, %dec_label_pc_93c0 ], [ %v2_93ec, %bb180 ]
  %v1_93f0 = load i32, i32* @fp, align 4
  %v2_93f0 = sub i32 %v1_93f0, %v1_93e0
  store i32 %v2_93f0, i32* %r3.global-to-local, align 4
  %v2_93f4 = sub i32 %v2_93f0, %v1_93fc
  store i32 %v2_93f4, i32* @r7, align 4
  %v0_93f8 = load i32, i32* @r4, align 4
  %v2_93f8 = add i32 %v0_93f8, %v1_93fc
  store i32 %v2_93f8, i32* @r6, align 4
  br i1 %v7_93e8, label %bb182, label %bb183

bb182:                                            ; preds = %bb181
  %v3_93fc = add i32 %v1_93fc, %v1_93e0
  store i32 %v3_93fc, i32* @r8, align 4
  br label %bb183

bb183:                                            ; preds = %bb181, %bb182
  store i32 %v2_93f4, i32* %r1.global-to-local, align 4
  store i32 %v2_93f8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9410 = call i32 @function_12ea4(i32 %v2_93f8, i32 %v2_93f4, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2)
  store i32 %v5_9410, i32* %r0.global-to-local, align 4
  %v2_9414 = icmp eq i32 %v5_9410, -1
  store i1 %v2_9414, i1* %cpsr_c.global-to-local, align 1
  %v7_9414 = icmp eq i32 %v5_9410, -1
  store i1 %v7_9414, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9410, i32* @r4, align 4
  br i1 %v7_9414, label %dec_label_pc_94c8, label %dec_label_pc_9420

dec_label_pc_9420:                                ; preds = %bb183
  store i32 %v2_8278, i32* %r1.global-to-local, align 4
  %v2_9424 = icmp ne i32 %v5_9410, 0
  store i1 %v2_9424, i1* %cpsr_c.global-to-local, align 1
  %v7_9424 = icmp eq i32 %v5_9410, 1
  store i1 %v7_9424, i1* %cpsr_z.global-to-local, align 1
  %v7_9428 = icmp slt i32 %v5_9410, 2
  br i1 %v7_9428, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_9420
  %v9_9428 = add i32 %v5_9410, -2
  store i32 %v9_9428, i32* @r4, align 4
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_9420, %bb184
  %v1_942c = load i32, i32* @r8, align 4
  %v2_942c = add i32 %v1_942c, %v2_8278
  store i32 %v2_942c, i32* @r5, align 4
  %v0_9430 = load i32, i32* @r6, align 4
  store i32 %v0_9430, i32* %r0.global-to-local, align 4
  %v0_9434 = load i32, i32* @r7, align 4
  store i32 %v0_9434, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a268.39 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9440 = call i32 @function_12ea4(i32 %v0_9430, i32 %v0_9434, i32 ptrtoint (i32* @global_var_1a268.39 to i32), i32 1)
  store i32 %v4_9440, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9444 = icmp eq i32 %v4_9440, 0
  store i1 %v2_9444, i1* %cpsr_z.global-to-local, align 1
  %tmp186 = icmp slt i32 %v4_9440, 1
  br i1 %tmp186, label %.dec_label_pc_9464_crit_edge, label %dec_label_pc_944c

.dec_label_pc_9464_crit_edge:                     ; preds = %bb185
  %v1_9478.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9464

dec_label_pc_944c:                                ; preds = %bb185
  %v0_944c = load i32, i32* @r6, align 4
  store i32 %v0_944c, i32* %r0.global-to-local, align 4
  %v0_9450 = load i32, i32* @r7, align 4
  store i32 %v0_9450, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a268.39 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_945c = call i32 @function_12ea4(i32 %v0_944c, i32 %v0_9450, i32 ptrtoint (i32* @global_var_1a268.39 to i32), i32 1)
  store i32 %v4_945c, i32* %r0.global-to-local, align 4
  %v1_9460 = add i32 %v4_945c, -1
  store i32 %v1_9460, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9464

dec_label_pc_9464:                                ; preds = %.dec_label_pc_9464_crit_edge, %dec_label_pc_944c
  %v1_9478 = phi i32 [ %v1_9478.pre, %.dec_label_pc_9464_crit_edge ], [ %v1_9460, %dec_label_pc_944c ]
  store i32 %v2_86d8, i32* %ip.global-to-local, align 4
  %v1_946c = load i32, i32* @r8, align 4
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_946c = add i32 %v1_9478, %v2_86d8
  %v2_9478 = add i32 %v2_946c, %v1_946c
  store i32 %v2_9478, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v4_9480 = add i32 %v2_9478, -20773
  %v5_9480 = inttoptr i32 %v4_9480 to i8*
  store i8 0, i8* %v5_9480, align 1
  %storemerge5.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_94a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_94a0

dec_label_pc_948c:                                ; preds = %dec_label_pc_94a0
  br i1 %v7_9490, label %dec_label_pc_94d0, label %dec_label_pc_9498

dec_label_pc_9498:                                ; preds = %dec_label_pc_948c
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_94a0

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9464, %dec_label_pc_9498
  %v0_94a0 = phi i32 [ %v0_948c, %dec_label_pc_9498 ], [ %v0_94a0.pre, %dec_label_pc_9464 ]
  %storemerge5 = phi i32 [ %v1_94b4, %dec_label_pc_9498 ], [ %storemerge5.pre, %dec_label_pc_9464 ]
  store i32 %storemerge5, i32* %stack_var_-44, align 4
  store i32 %v0_94a0, i32* %r0.global-to-local, align 4
  %v1_94a4 = inttoptr i32 %v0_94a0 to i8*
  %v2_94a4 = call i32 @function_12dec(i8* %v1_94a4)
  store i32 %v2_94a4, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_94ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94ac, i32* %r4.global-to-local, align 4
  %v3_94b0 = icmp uge i32 %v2_94a4, %v3_94ac
  store i1 %v3_94b0, i1* %cpsr_c.global-to-local, align 1
  %v9_94b0 = icmp eq i32 %v2_94a4, %v3_94ac
  store i1 %v9_94b0, i1* %cpsr_z.global-to-local, align 1
  %v1_94b4 = add i32 %v3_94ac, 1
  store i32 %v1_94b4, i32* %ip.global-to-local, align 4
  %v8_94b8 = icmp sgt i32 %v2_94a4, %v3_94ac
  %v0_948c = load i32, i32* @r5, align 4
  %v2_948c = add i32 %v0_948c, %v3_94ac
  %v3_948c = inttoptr i32 %v2_948c to i8*
  %v4_948c = load i8, i8* %v3_948c, align 1
  %v6_948c = zext i8 %v4_948c to i32
  store i32 %v6_948c, i32* %r3.global-to-local, align 4
  %v2_9490 = icmp ugt i8 %v4_948c, 60
  store i1 %v2_9490, i1* %cpsr_c.global-to-local, align 1
  %v7_9490 = icmp eq i8 %v4_948c, 61
  store i1 %v7_9490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_94b8, label %dec_label_pc_948c, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94a0
  br i1 %v7_9490, label %dec_label_pc_94d0, label %dec_label_pc_94c8

dec_label_pc_94c8:                                ; preds = %dec_label_pc_9514, %dec_label_pc_9538, %dec_label_pc_94bc, %bb183
  %v0_94c8 = load i32, i32* @r8, align 4
  store i32 %v0_94c8, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_94d0:                                ; preds = %dec_label_pc_948c, %dec_label_pc_94bc
  %v0_94d0 = load i32, i32* @sl, align 4
  %v1_94d0 = add i32 %v0_94d0, 16
  %v2_94d0 = inttoptr i32 %v1_94d0 to i32*
  %v3_94d0 = load i32, i32* %v2_94d0, align 4
  store i32 %v3_94d0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94dc = icmp eq i32 %v3_94d0, 0
  store i1 %v2_94dc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %tmp187 = icmp slt i32 %v3_94d0, 1
  br i1 %tmp187, label %dec_label_pc_9538, label %dec_label_pc_94e8

dec_label_pc_94e8:                                ; preds = %dec_label_pc_94d0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9514

dec_label_pc_94f0:                                ; preds = %dec_label_pc_9514
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_94f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94f4, i32* %r3.global-to-local, align 4
  %v0_94f8 = load i32, i32* @sl, align 4
  %v1_94f8 = add i32 %v0_94f8, 16
  %v2_94f8 = inttoptr i32 %v1_94f8 to i32*
  %v3_94f8 = load i32, i32* %v2_94f8, align 4
  %v1_94fc = add i32 %v3_94f4, 1
  store i32 %v1_94fc, i32* %ip.global-to-local, align 4
  %v3_9500 = icmp uge i32 %v3_94f8, %v1_94fc
  store i1 %v3_9500, i1* %cpsr_c.global-to-local, align 1
  %v9_9500 = icmp eq i32 %v3_94f8, %v1_94fc
  store i1 %v9_9500, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_94fc, i32* %r1.global-to-local, align 4
  store i32 %v1_94fc, i32* %stack_var_-44, align 4
  %v7_9510 = icmp sgt i32 %v3_94f8, %v1_94fc
  %v0_9520.pre = load i32, i32* @r5, align 4
  br i1 %v7_9510, label %dec_label_pc_94f0.dec_label_pc_9514_crit_edge, label %dec_label_pc_9538

dec_label_pc_94f0.dec_label_pc_9514_crit_edge:    ; preds = %dec_label_pc_94f0
  %v0_9524.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9514

dec_label_pc_9514:                                ; preds = %dec_label_pc_94f0.dec_label_pc_9514_crit_edge, %dec_label_pc_94e8
  %v0_9524 = phi i32 [ %v0_9524.pre, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ %v3_94ac, %dec_label_pc_94e8 ]
  %v0_9520 = phi i32 [ %v0_9520.pre, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ %v0_948c, %dec_label_pc_94e8 ]
  %v0_9514 = phi i32 [ %v1_94fc, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ 0, %dec_label_pc_94e8 ]
  %v1_9514 = and i32 %v0_9514, 33554432
  %v2_9514 = icmp ne i32 %v1_9514, 0
  store i1 %v2_9514, i1* %cpsr_c.global-to-local, align 1
  %v3_9514 = mul i32 %v0_9514, 128
  %v1_9518 = add i32 %v3_9514, 1472
  %v0_951c = load i32, i32* @sb, align 4
  %v2_951c = add i32 %v1_9518, %v0_951c
  store i32 %v2_951c, i32* %r1.global-to-local, align 4
  store i32 %v0_9520, i32* %r0.global-to-local, align 4
  store i32 %v0_9524, i32* %r2.global-to-local, align 4
  %v3_9528 = inttoptr i32 %v0_9520 to i8*
  %v4_9528 = call i32 @function_13258(i8* %v3_9528, i32 %v2_951c, i32 %v0_9524)
  store i32 %v4_9528, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_952c = icmp eq i32 %v4_9528, 0
  store i1 %v2_952c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_952c, label %dec_label_pc_94f0, label %dec_label_pc_94c8

dec_label_pc_9538:                                ; preds = %dec_label_pc_94f0, %dec_label_pc_94d0
  %v0_9538 = phi i32 [ %v0_948c, %dec_label_pc_94d0 ], [ %v0_9520.pre, %dec_label_pc_94f0 ]
  store i32 %v0_9538, i32* %r0.global-to-local, align 4
  %v1_953c = inttoptr i32 %v0_9538 to i8*
  %v2_953c = call i32 @function_12dec(i8* %v1_953c)
  store i32 %v2_953c, i32* %r0.global-to-local, align 4
  %v2_9540 = icmp ugt i32 %v2_953c, 126
  store i1 %v2_9540, i1* %cpsr_c.global-to-local, align 1
  %v7_9540 = icmp eq i32 %v2_953c, 127
  store i1 %v7_9540, i1* %cpsr_z.global-to-local, align 1
  %v8_9544 = icmp sgt i32 %v2_953c, 127
  br i1 %v8_9544, label %dec_label_pc_94c8, label %dec_label_pc_9548

dec_label_pc_9548:                                ; preds = %dec_label_pc_9538
  %v0_9548 = load i32, i32* @sl, align 4
  %v1_9548 = add i32 %v0_9548, 16
  %v2_9548 = inttoptr i32 %v1_9548 to i32*
  %v3_9548 = load i32, i32* %v2_9548, align 4
  %v1_954c = and i32 %v3_9548, 33554432
  %v2_954c = icmp ne i32 %v1_954c, 0
  store i1 %v2_954c, i1* %cpsr_c.global-to-local, align 1
  %v3_954c = mul i32 %v3_9548, 128
  %v1_9550 = add i32 %v3_954c, 1472
  %v0_9554 = load i32, i32* @r5, align 4
  store i32 %v0_9554, i32* %r1.global-to-local, align 4
  %v0_9558 = load i32, i32* @sb, align 4
  %v2_9558 = add i32 %v1_9550, %v0_9558
  store i32 %v2_9558, i32* @r0, align 4
  %v2_955c = inttoptr i32 %v2_9558 to i8*
  %v3_955c = call i32 @function_12e14(i8* %v2_955c, i32 %v0_9554)
  store i32 %v3_955c, i32* %r0.global-to-local, align 4
  %v0_9560 = load i32, i32* @sl, align 4
  %v1_9560 = add i32 %v0_9560, 16
  %v2_9560 = inttoptr i32 %v1_9560 to i32*
  %v3_9560 = load i32, i32* %v2_9560, align 4
  %v0_9564 = load i32, i32* @r8, align 4
  store i32 %v0_9564, i32* @r5, align 4
  %v1_9568 = add i32 %v3_9560, 1
  store i32 %v1_9568, i32* %r3.global-to-local, align 4
  store i32 %v1_9568, i32* %v2_9560, align 4
  %v1_9388.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_9574:                                ; preds = %dec_label_pc_859c
  store i32 %v1_859c, i32* %r3.global-to-local, align 4
  %v1_9578 = trunc i32 %v1_859c to i8
  store i8 %v1_9578, i8* %v2_85d4, align 1
  %v0_957c = load i32, i32* @r6, align 4
  %v1_957c = add i32 %v0_957c, -1452
  %v2_957c = inttoptr i32 %v1_957c to i32*
  %v3_957c = load i32, i32* %v2_957c, align 4
  store i32 %v3_957c, i32* @r0, align 4
  %v1_9580 = call i32 @function_165e8(i32 %v3_957c)
  store i32 %v1_9580, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9588 = load i32, i32* @r6, align 4
  %v2_9588 = add i32 %v1_9588, -1452
  %v3_9588 = inttoptr i32 %v2_9588 to i32*
  store i32 -1, i32* %v3_9588, align 4
  br label %dec_label_pc_85bc

dec_label_pc_9590:                                ; preds = %dec_label_pc_8d9c
  %v0_9590 = call i32 @function_13994()
  store i32 %v0_9590, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_9598 = inttoptr i32 %v0_9590 to i32*
  store i32 104, i32* %v2_9598, align 4
  br label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %dec_label_pc_8dc8, %dec_label_pc_9590
  %v0_959c = call i32 @function_13994()
  store i32 %v0_959c, i32* %r0.global-to-local, align 4
  %v1_95a0 = inttoptr i32 %v0_959c to i32*
  %v2_95a0 = load i32, i32* %v1_95a0, align 4
  store i32 %v2_95a0, i32* %r3.global-to-local, align 4
  %v2_95a4 = icmp ugt i32 %v2_95a0, 10
  store i1 %v2_95a4, i1* %cpsr_c.global-to-local, align 1
  %v7_95a4 = icmp eq i32 %v2_95a0, 11
  store i1 %v7_95a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95a4, label %dec_label_pc_87b4, label %dec_label_pc_95ac

dec_label_pc_95ac:                                ; preds = %dec_label_pc_959c
  %v0_95ac = call i32 @function_13994()
  store i32 %v0_95ac, i32* %r0.global-to-local, align 4
  %v1_95b0 = inttoptr i32 %v0_95ac to i32*
  %v2_95b0 = load i32, i32* %v1_95b0, align 4
  store i32 %v2_95b0, i32* %r3.global-to-local, align 4
  %v2_95b4 = icmp ugt i32 %v2_95b0, 10
  store i1 %v2_95b4, i1* %cpsr_c.global-to-local, align 1
  %v7_95b4 = icmp eq i32 %v2_95b0, 11
  store i1 %v7_95b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95b4, label %dec_label_pc_87b4, label %dec_label_pc_95bc

dec_label_pc_95bc:                                ; preds = %dec_label_pc_8d24, %dec_label_pc_95ac, %dec_label_pc_9054
  %v0_95bc = load i32, i32* @sl, align 4
  %v1_95bc = add i32 %v0_95bc, -1452
  %v2_95bc = inttoptr i32 %v1_95bc to i32*
  %v3_95bc = load i32, i32* %v2_95bc, align 4
  store i32 %v3_95bc, i32* @r0, align 4
  %v1_95c0 = call i32 @function_165e8(i32 %v3_95bc)
  store i32 %v1_95c0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_95cc = load i32, i32* @sl, align 4
  %v2_95cc = add i32 %v1_95cc, -1452
  %v3_95cc = inttoptr i32 %v2_95cc to i32*
  store i32 -1, i32* %v3_95cc, align 4
  %v0_95d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_95d0 = trunc i32 %v0_95d0 to i8
  %v2_95d0 = load i32, i32* @sl, align 4
  %v3_95d0 = add i32 %v2_95d0, -1448
  %v4_95d0 = inttoptr i32 %v3_95d0 to i8*
  store i8 %v1_95d0, i8* %v4_95d0, align 1
  br label %dec_label_pc_87b4

dec_label_pc_95d8:                                ; preds = %dec_label_pc_93b4, %dec_label_pc_937c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_95e0 = call i32 @function_12498(i32 38, i32* null)
  %v0_95e4 = load i32, i32* @fp, align 4
  store i32 %v0_95e4, i32* @r1, align 4
  store i32 %v3_95e0, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_95f0 = call i32 @function_13148(i8* %v3_829c, i32 %v0_95e4, i32 %v3_95e0)
  store i32 %v4_95f0, i32* %r0.global-to-local, align 4
  %v2_95f4 = icmp eq i32 %v4_95f0, -1
  store i1 %v2_95f4, i1* %cpsr_c.global-to-local, align 1
  %v7_95f4 = icmp eq i32 %v4_95f0, -1
  store i1 %v7_95f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95f4, label %dec_label_pc_9720, label %dec_label_pc_95fc

dec_label_pc_95fc:                                ; preds = %dec_label_pc_95d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_9604 = call i32 @function_12498(i32 38, i32* null)
  %v0_9608 = load i32, i32* @fp, align 4
  store i32 %v0_9608, i32* @r1, align 4
  store i32 %v3_9604, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9614 = call i32 @function_13148(i8* %v3_829c, i32 %v0_9608, i32 %v3_9604)
  store i32 %v4_9614, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v2_961c = add i32 %v4_9614, %v2_8278
  %v3_961c = inttoptr i32 %v2_961c to i8*
  %v4_961c = load i8, i8* %v3_961c, align 1
  %v2_9624 = icmp ugt i8 %v4_961c, 31
  store i1 %v2_9624, i1* %cpsr_c.global-to-local, align 1
  %v7_9624 = icmp eq i8 %v4_961c, 32
  store i1 %v7_9624, i1* %cpsr_z.global-to-local, align 1
  %v2_962c = zext i1 %v7_9624 to i32
  %v2_962c.v4_9614 = add i32 %v2_962c, %v4_9614
  store i32 %v2_962c.v4_9614, i32* @r4, align 4
  %v2_9630 = add i32 %v2_962c.v4_9614, %v2_8278
  store i32 %v2_9630, i32* @r5, align 4
  store i32 %v2_9630, i32* %r0.global-to-local, align 4
  %v1_9638 = load i32, i32* @fp, align 4
  %v2_9638 = sub i32 %v1_9638, %v2_962c.v4_9614
  store i32 %v2_9638, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9644 = call i32 @function_12ea4(i32 %v2_9630, i32 %v2_9638, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2)
  store i32 %v5_9644, i32* %r0.global-to-local, align 4
  %v2_9648 = icmp eq i32 %v5_9644, -1
  store i1 %v2_9648, i1* %cpsr_c.global-to-local, align 1
  %v7_9648 = icmp eq i32 %v5_9644, -1
  store i1 %v7_9648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9648, label %dec_label_pc_9720, label %dec_label_pc_9650

dec_label_pc_9650:                                ; preds = %dec_label_pc_95fc
  %v2_9650 = icmp ne i32 %v5_9644, 0
  store i1 %v2_9650, i1* %cpsr_c.global-to-local, align 1
  %v7_9650 = icmp eq i32 %v5_9644, 1
  store i1 %v7_9650, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  %v7_9658 = icmp slt i32 %v5_9644, 2
  br i1 %v7_9658, label %bb189, label %bb188

bb188:                                            ; preds = %dec_label_pc_9650
  %v9_9658 = add i32 %v5_9644, -2
  store i32 %v9_9658, i32* %r0.global-to-local, align 4
  br label %bb189

bb189:                                            ; preds = %dec_label_pc_9650, %bb188
  %v1_9660 = phi i32 [ %v5_9644, %dec_label_pc_9650 ], [ %v9_9658, %bb188 ]
  %v2_9660 = add i32 %v1_9660, %v2_86d8
  store i32 -20773, i32* @lr, align 4
  %v1_9668 = add i32 %v1_9660, 1
  store i32 %v1_9668, i32* @r6, align 4
  %v1_966c = load i32, i32* @r4, align 4
  %v2_966c = add i32 %v2_9660, %v1_966c
  store i32 %v2_966c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_9674 = load i32, i32* @r5, align 4
  store i32 %v0_9674, i32* %r0.global-to-local, align 4
  store i32 %v1_9668, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a26c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_9684 = add i32 %v2_966c, -20773
  %v5_9684 = inttoptr i32 %v4_9684 to i8*
  store i8 0, i8* %v5_9684, align 1
  %v5_9688 = call i32 @function_12ea4(i32 %v0_9674, i32 %v1_9668, i32 ptrtoint ([5 x i8]* @global_var_1a26c.43 to i32), i32 4)
  store i32 %v5_9688, i32* %r0.global-to-local, align 4
  %v2_968c = icmp ugt i32 %v5_9688, 3
  store i1 %v2_968c, i1* %cpsr_c.global-to-local, align 1
  %v7_968c = icmp eq i32 %v5_9688, 4
  store i1 %v7_968c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_968c, label %dec_label_pc_9a14, label %dec_label_pc_9694

dec_label_pc_9694:                                ; preds = %bb189
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v1_9698 = load i32, i32* @r4, align 4
  %v2_9698 = add i32 %v1_9698, %v2_8278
  %v3_9698 = inttoptr i32 %v2_9698 to i8*
  %v4_9698 = load i8, i8* %v3_9698, align 1
  %v6_9698 = zext i8 %v4_9698 to i32
  store i32 %v6_9698, i32* %r3.global-to-local, align 4
  %v2_969c = icmp ugt i8 %v4_9698, 46
  store i1 %v2_969c, i1* %cpsr_c.global-to-local, align 1
  %v7_969c = icmp eq i8 %v4_9698, 47
  store i1 %v7_969c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_969c, label %dec_label_pc_96a4, label %dec_label_pc_8d40

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9694
  %v0_96a4 = load i32, i32* @sb, align 4
  %v1_96a8 = add i32 %v0_96a4, 533
  store i32 %v1_96a8, i32* @r4, align 4
  store i32 %v1_96a8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_96b4 = call i32 @function_12e80(i32 %v1_96a8, i32 255)
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_96bc = load i32, i32* %stack_var_-44, align 4
  %v0_96c0 = load i32, i32* @r5, align 4
  %v1_96c0 = add i32 %v0_96c0, 1
  store i32 %v1_96c0, i32* @r5, align 4
  %v2_96c4 = add i32 %v1_96c0, %v3_96bc
  store i32 %v2_96c4, i32* %r0.global-to-local, align 4
  %v1_96c8 = inttoptr i32 %v2_96c4 to i8*
  %v2_96c8 = call i32 @function_12dec(i8* %v1_96c8)
  store i32 %v2_96c8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_96cc = icmp eq i32 %v2_96c8, 0
  store i1 %v2_96cc, i1* %cpsr_z.global-to-local, align 1
  %tmp190 = icmp slt i32 %v2_96c8, 1
  br i1 %tmp190, label %dec_label_pc_8d40, label %dec_label_pc_96d4

dec_label_pc_96d4:                                ; preds = %dec_label_pc_96a4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_96d8 = load i32, i32* %stack_var_-44, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  %v2_96dc = add i32 %v0_96dc, %v3_96d8
  store i32 %v2_96dc, i32* %r0.global-to-local, align 4
  %v1_96e0 = inttoptr i32 %v2_96dc to i8*
  %v2_96e0 = call i32 @function_12dec(i8* %v1_96e0)
  store i32 %v2_96e0, i32* %r0.global-to-local, align 4
  %v2_96e4 = icmp ugt i32 %v2_96e0, 254
  store i1 %v2_96e4, i1* %cpsr_c.global-to-local, align 1
  %v7_96e4 = icmp eq i32 %v2_96e0, 255
  store i1 %v7_96e4, i1* %cpsr_z.global-to-local, align 1
  %v8_96e8 = icmp sgt i32 %v2_96e0, 255
  br i1 %v8_96e8, label %dec_label_pc_8d40, label %dec_label_pc_96ec

dec_label_pc_96ec:                                ; preds = %dec_label_pc_96d4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_96f0 = load i32, i32* %stack_var_-44, align 4
  %v0_96f4 = load i32, i32* @r4, align 4
  store i32 %v0_96f4, i32* @r0, align 4
  %v0_96f8 = load i32, i32* @r5, align 4
  %v2_96f8 = add i32 %v0_96f8, %v3_96f0
  store i32 %v2_96f8, i32* %r1.global-to-local, align 4
  %v2_96fc = inttoptr i32 %v0_96f4 to i8*
  %v3_96fc = call i32 @function_12e14(i8* %v2_96fc, i32 %v2_96f8)
  store i32 %v3_96fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d40

dec_label_pc_9704:                                ; preds = %dec_label_pc_8e20
  %v0_9704 = load i32, i32* %r3.global-to-local, align 4
  %v1_9704 = add i32 %v0_9704, 1
  store i32 %v1_9704, i32* %r3.global-to-local, align 4
  %v1_9708 = trunc i32 %v1_9704 to i8
  %v2_9708 = load i32, i32* @sl, align 4
  %v3_9708 = add i32 %v2_9708, -1448
  %v4_9708 = inttoptr i32 %v3_9708 to i8*
  store i8 %v1_9708, i8* %v4_9708, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9710:                                ; preds = %dec_label_pc_8c34
  %v0_9710 = load i32, i32* @fp, align 4
  store i32 %v0_9710, i32* @r0, align 4
  %v0_9714 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_9714, i32* %r1.global-to-local, align 4
  %v2_9718 = inttoptr i32 %v0_9710 to i8*
  %v3_9718 = call i32 @function_12e14(i8* %v2_9718, i32 %v0_9714)
  store i32 %v3_9718, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c4c

dec_label_pc_9720:                                ; preds = %dec_label_pc_95fc, %dec_label_pc_95d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_9728 = call i32 @function_12498(i32 37, i32* null)
  %v0_972c = load i32, i32* @fp, align 4
  store i32 %v0_972c, i32* @r1, align 4
  store i32 %v3_9728, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9738 = call i32 @function_13148(i8* %v3_829c, i32 %v0_972c, i32 %v3_9728)
  store i32 %v4_9738, i32* %r0.global-to-local, align 4
  %v2_9740 = icmp eq i32 %v4_9738, -1
  store i1 %v2_9740, i1* %cpsr_c.global-to-local, align 1
  %v7_9740 = icmp eq i32 %v4_9738, -1
  store i1 %v7_9740, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9740, label %dec_label_pc_993c, label %dec_label_pc_974c

dec_label_pc_974c:                                ; preds = %dec_label_pc_9720
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_9754 = call i32 @function_12498(i32 37, i32* null)
  %v0_9758 = load i32, i32* @fp, align 4
  store i32 %v0_9758, i32* @r1, align 4
  store i32 %v3_9754, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9764 = call i32 @function_13148(i8* %v3_829c, i32 %v0_9758, i32 %v3_9754)
  store i32 %v4_9764, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v2_976c = add i32 %v4_9764, %v2_8278
  %v3_976c = inttoptr i32 %v2_976c to i8*
  %v4_976c = load i8, i8* %v3_976c, align 1
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9774 = icmp ugt i8 %v4_976c, 31
  store i1 %v2_9774, i1* %cpsr_c.global-to-local, align 1
  %v7_9774 = icmp eq i8 %v4_976c, 32
  store i1 %v7_9774, i1* %cpsr_z.global-to-local, align 1
  %v2_977c = zext i1 %v7_9774 to i32
  %v2_977c.v4_9764 = add i32 %v2_977c, %v4_9764
  store i32 %v2_977c.v4_9764, i32* @r4, align 4
  %v2_9780 = add i32 %v2_977c.v4_9764, %v2_8278
  store i32 %v2_9780, i32* @r5, align 4
  store i32 %v2_9780, i32* %r0.global-to-local, align 4
  %v1_9788 = load i32, i32* @fp, align 4
  %v2_9788 = sub i32 %v1_9788, %v2_977c.v4_9764
  store i32 %v2_9788, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9794 = call i32 @function_12ea4(i32 %v2_9780, i32 %v2_9788, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2)
  store i32 %v5_9794, i32* %r0.global-to-local, align 4
  %v2_9798 = icmp eq i32 %v5_9794, -1
  store i1 %v2_9798, i1* %cpsr_c.global-to-local, align 1
  %v7_9798 = icmp eq i32 %v5_9794, -1
  store i1 %v7_9798, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9794, i32* @r7, align 4
  br i1 %v7_9798, label %dec_label_pc_993c, label %dec_label_pc_97a4

dec_label_pc_97a4:                                ; preds = %dec_label_pc_974c
  %v2_97a4 = icmp ne i32 %v5_9794, 0
  store i1 %v2_97a4, i1* %cpsr_c.global-to-local, align 1
  %v7_97a4 = icmp eq i32 %v5_9794, 1
  store i1 %v7_97a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r1.global-to-local, align 4
  %v7_97ac = icmp slt i32 %v5_9794, 2
  br i1 %v7_97ac, label %bb192, label %bb191

bb191:                                            ; preds = %dec_label_pc_97a4
  %v9_97ac = add i32 %v5_9794, -2
  store i32 %v9_97ac, i32* @r7, align 4
  br label %bb192

bb192:                                            ; preds = %dec_label_pc_97a4, %bb191
  %v1_97b4 = phi i32 [ %v5_9794, %dec_label_pc_97a4 ], [ %v9_97ac, %bb191 ]
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v2_97b4 = add i32 %v1_97b4, %v2_86d8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_97bc = load i32, i32* @r4, align 4
  %v2_97bc = add i32 %v2_97b4, %v1_97bc
  %v3_97c0 = load i32, i32* @r6, align 4
  %v4_97c0 = add i32 %v2_97bc, %v3_97c0
  %v5_97c0 = inttoptr i32 %v4_97c0 to i8*
  store i8 0, i8* %v5_97c0, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v0_97c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_97c8, i32* %stack_var_-44, align 4
  store i32 %v2_8278, i32* %r3.global-to-local, align 4
  %v1_97d0 = load i32, i32* @r4, align 4
  %v2_97d0 = add i32 %v1_97d0, %v2_8278
  %v3_97d0 = inttoptr i32 %v2_97d0 to i8*
  %v4_97d0 = load i8, i8* %v3_97d0, align 1
  %v6_97d0 = zext i8 %v4_97d0 to i32
  store i32 %v6_97d0, i32* %r0.global-to-local, align 4
  %v1_97d4 = add nsw i32 %v6_97d0, -48
  store i32 %v1_97d4, i32* %r3.global-to-local, align 4
  %v2_97d8 = icmp ugt i32 %v1_97d4, 8
  store i1 %v2_97d8, i1* %cpsr_c.global-to-local, align 1
  %v7_97d8 = icmp eq i32 %v1_97d4, 9
  store i1 %v7_97d8, i1* %cpsr_z.global-to-local, align 1
  %v2_97dc = xor i1 %v7_97d8, true
  %v3_97dc = and i1 %v2_97d8, %v2_97dc
  br i1 %v3_97dc, label %.thread105, label %dec_label_pc_97e4

.thread105:                                       ; preds = %bb192
  %v4_97dc = load i32, i32* @r5, align 4
  store i32 %v4_97dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_980c

dec_label_pc_97e4:                                ; preds = %bb192
  %v1_97f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_97e8

dec_label_pc_97e8:                                ; preds = %dec_label_pc_97e8, %dec_label_pc_97e4
  %v0_97e8 = phi i32 [ %v1_9800, %dec_label_pc_97e8 ], [ 1, %dec_label_pc_97e4 ]
  store i32 %v0_97e8, i32* %ip.global-to-local, align 4
  store i32 %v0_97e8, i32* %stack_var_-44, align 4
  %v2_97f4 = add i32 %v0_97e8, %v1_97f4.pre
  %v3_97f4 = inttoptr i32 %v2_97f4 to i8*
  %v4_97f4 = load i8, i8* %v3_97f4, align 1
  %v6_97f4 = zext i8 %v4_97f4 to i32
  store i32 %v6_97f4, i32* %r0.global-to-local, align 4
  %v1_97f8 = add nsw i32 %v6_97f4, -48
  store i32 %v1_97f8, i32* %r3.global-to-local, align 4
  %v2_97fc = icmp ugt i32 %v1_97f8, 8
  store i1 %v2_97fc, i1* %cpsr_c.global-to-local, align 1
  %v7_97fc = icmp eq i32 %v1_97f8, 9
  store i1 %v7_97fc, i1* %cpsr_z.global-to-local, align 1
  %v1_9800 = add i32 %v0_97e8, 1
  store i32 %v1_9800, i32* @lr, align 4
  store i32 %v2_97f4, i32* %r1.global-to-local, align 4
  %v2_9808 = xor i1 %v2_97fc, true
  %v3_9808 = or i1 %v7_97fc, %v2_9808
  br i1 %v3_9808, label %dec_label_pc_97e8, label %dec_label_pc_980c

dec_label_pc_980c:                                ; preds = %dec_label_pc_97e8, %.thread105
  %v2_9818 = phi i32 [ %v4_97dc, %.thread105 ], [ %v2_97f4, %dec_label_pc_97e8 ]
  %v0_980c = phi i32 [ %v6_97d0, %.thread105 ], [ %v6_97f4, %dec_label_pc_97e8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_980c = icmp eq i32 %v0_980c, 0
  store i1 %v2_980c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_980c, label %dec_label_pc_993c, label %dec_label_pc_9814

dec_label_pc_9814:                                ; preds = %dec_label_pc_980c
  store i32 0, i32* @r6, align 4
  %v3_9818 = inttoptr i32 %v2_9818 to i8*
  store i8 0, i8* %v3_9818, align 1
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9820 = load i32, i32* %stack_var_-44, align 4
  %v1_9824 = add i32 %v3_9820, 1
  store i32 %v1_9824, i32* %ip.global-to-local, align 4
  store i32 %v1_9824, i32* %stack_var_-44, align 4
  %v0_982c = load i32, i32* @r5, align 4
  %v2_982c = add i32 %v0_982c, %v1_9824
  %v3_982c = inttoptr i32 %v2_982c to i8*
  %v4_982c = load i8, i8* %v3_982c, align 1
  %v6_982c = zext i8 %v4_982c to i32
  store i32 %v6_982c, i32* %r3.global-to-local, align 4
  %v2_9830 = icmp ugt i8 %v4_982c, 31
  store i1 %v2_9830, i1* %cpsr_c.global-to-local, align 1
  %v7_9830 = icmp eq i8 %v4_982c, 32
  store i1 %v7_9830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9830, label %bb193, label %.thread31

.thread31:                                        ; preds = %dec_label_pc_9814
  store i32 %v2_982c, i32* @r4, align 4
  br label %bb194

bb193:                                            ; preds = %dec_label_pc_9814
  %v2_9834 = add i32 %v3_9820, 2
  store i32 %v2_9834, i32* %ip.global-to-local, align 4
  %v2_9838 = add i32 %v0_982c, %v2_9834
  store i32 %v2_9838, i32* @r4, align 4
  store i32 %v2_9834, i32* %stack_var_-44, align 4
  br label %bb194

bb194:                                            ; preds = %.thread31, %bb193
  %v0_9840 = phi i32 [ %v2_982c, %.thread31 ], [ %v2_9838, %bb193 ]
  store i32 %v0_9840, i32* %r0.global-to-local, align 4
  %v1_9844 = inttoptr i32 %v0_9840 to i8*
  %v2_9844 = call i32 @function_12dec(i8* %v1_9844)
  store i32 ptrtoint ([5 x i8]* @global_var_1a274.45 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9844, i32* @r1, align 4
  %v0_9850 = load i32, i32* @r4, align 4
  store i32 %v0_9850, i32* %r0.global-to-local, align 4
  %v4_9854 = inttoptr i32 %v0_9850 to i8*
  %v5_9854 = call i32 @function_13148(i8* %v4_9854, i32 %v2_9844, i32 ptrtoint ([5 x i8]* @global_var_1a274.45 to i32))
  store i32 %v5_9854, i32* %r0.global-to-local, align 4
  %v2_9858 = icmp eq i32 %v5_9854, -1
  store i1 %v2_9858, i1* %cpsr_c.global-to-local, align 1
  %v7_9858 = icmp eq i32 %v5_9854, -1
  store i1 %v7_9858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9858, label %.thread35, label %dec_label_pc_9868

.thread35:                                        ; preds = %bb194
  store i32 %v10_82f0, i32* @lr, align 4
  %v4_9860 = load i32, i32* %v11_82f4, align 4
  store i32 %v4_9860, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_989c

dec_label_pc_9868:                                ; preds = %bb194
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_986c = load i32, i32* %stack_var_-44, align 4
  %v0_9870 = load i32, i32* @r5, align 4
  %v2_9870 = add i32 %v0_9870, %v3_986c
  store i32 %v2_9870, i32* @r4, align 4
  store i32 %v2_9870, i32* %r0.global-to-local, align 4
  %v1_9878 = inttoptr i32 %v2_9870 to i8*
  %v2_9878 = call i32 @function_12dec(i8* %v1_9878)
  store i32 ptrtoint ([5 x i8]* @global_var_1a274.45 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9878, i32* @r1, align 4
  %v0_9884 = load i32, i32* @r4, align 4
  store i32 %v0_9884, i32* %r0.global-to-local, align 4
  %v4_9888 = inttoptr i32 %v0_9884 to i8*
  %v5_9888 = call i32 @function_13148(i8* %v4_9888, i32 %v2_9878, i32 ptrtoint ([5 x i8]* @global_var_1a274.45 to i32))
  store i32 %v5_9888, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9890 = load i32, i32* %stack_var_-44, align 4
  %v2_9894 = add i32 %v3_9890, %v5_9888
  store i32 %v2_9894, i32* %ip.global-to-local, align 4
  store i32 %v2_9894, i32* %stack_var_-44, align 4
  br label %dec_label_pc_989c

dec_label_pc_989c:                                ; preds = %.thread35, %dec_label_pc_9868
  %v0_9d28 = phi i32 [ %v4_9860, %.thread35 ], [ %v2_9894, %dec_label_pc_9868 ]
  %v0_989c = load i32, i32* @r5, align 4
  %v2_989c = add i32 %v0_989c, %v0_9d28
  %v3_989c = inttoptr i32 %v2_989c to i8*
  %v4_989c = load i8, i8* %v3_989c, align 1
  %v6_989c = zext i8 %v4_989c to i32
  store i32 %v6_989c, i32* %r3.global-to-local, align 4
  %v2_98a0 = icmp ugt i8 %v4_989c, 33
  store i1 %v2_98a0, i1* %cpsr_c.global-to-local, align 1
  %v7_98a0 = icmp eq i8 %v4_989c, 34
  store i1 %v7_98a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_98a0, label %dec_label_pc_9d28, label %dec_label_pc_98a8

dec_label_pc_98a8:                                ; preds = %dec_label_pc_9d28, %dec_label_pc_989c, %dec_label_pc_9d50
  %v0_98a8 = load i32, i32* @r5, align 4
  store i32 %v0_98a8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_98b0 = inttoptr i32 %v0_98a8 to i8*
  %v3_98b0 = call i32 @function_12f10(i8* %v2_98b0, i32 10)
  store i32 %v3_98b0, i32* %r0.global-to-local, align 4
  %v1_98b4 = add i32 %v3_98b0, -1
  store i32 %v1_98b4, i32* %r3.global-to-local, align 4
  %v2_98b8 = icmp ugt i32 %v1_98b4, 7
  store i1 %v2_98b8, i1* %cpsr_c.global-to-local, align 1
  %v7_98b8 = icmp eq i32 %v1_98b4, 8
  store i1 %v7_98b8, i1* %cpsr_z.global-to-local, align 1
  %v2_98bc = xor i1 %v2_98b8, true
  %v3_98bc = or i1 %v7_98b8, %v2_98bc
  br i1 %v3_98bc, label %dec_label_pc_98d0.preheader, label %dec_label_pc_98e4

dec_label_pc_98d0.preheader:                      ; preds = %dec_label_pc_98a8
  store i32 %v2_8764, i32* %r3.global-to-local, align 4
  %v6_98c0 = add i32 %v3_98b0, %v2_8764
  store i32 %v6_98c0, i32* @r4, align 4
  br label %dec_label_pc_98d0

dec_label_pc_98cc:                                ; preds = %dec_label_pc_98d0
  %v1_98cc = call i32 @function_166d4(i32 1)
  store i32 %v1_98cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98d0

dec_label_pc_98d0:                                ; preds = %dec_label_pc_98d0.preheader, %dec_label_pc_98cc
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_98d4 = call i32 @function_16598(i32* null)
  %v0_98d8 = load i32, i32* @r4, align 4
  %v3_98d8 = icmp uge i32 %v0_98d8, %v2_98d4
  store i1 %v3_98d8, i1* %cpsr_c.global-to-local, align 1
  %v9_98d8 = icmp eq i32 %v0_98d8, %v2_98d4
  store i1 %v9_98d8, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_98e0 = xor i1 %v9_98d8, true
  %v3_98e0 = and i1 %v3_98d8, %v2_98e0
  br i1 %v3_98e0, label %dec_label_pc_98cc, label %dec_label_pc_98e4

dec_label_pc_98e4:                                ; preds = %dec_label_pc_98d0, %dec_label_pc_98a8
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_98e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98e8, i32* @r4, align 4
  %v0_98ec = load i32, i32* @r5, align 4
  %v2_98ec = add i32 %v0_98ec, %v3_98e8
  store i32 %v2_98ec, i32* @r6, align 4
  store i32 %v2_98ec, i32* %r0.global-to-local, align 4
  %v1_98f4 = inttoptr i32 %v2_98ec to i8*
  %v2_98f4 = call i32 @function_12dec(i8* %v1_98f4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a26c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_98f4, i32* @r1, align 4
  %v0_9900 = load i32, i32* @r6, align 4
  store i32 %v0_9900, i32* %r0.global-to-local, align 4
  %v4_9904 = inttoptr i32 %v0_9900 to i8*
  %v5_9904 = call i32 @function_13148(i8* %v4_9904, i32 %v2_98f4, i32 ptrtoint ([5 x i8]* @global_var_1a26c.43 to i32))
  store i32 %v5_9904, i32* %r0.global-to-local, align 4
  %v2_9908 = icmp ugt i32 %v5_9904, 3
  store i1 %v2_9908, i1* %cpsr_c.global-to-local, align 1
  %v7_9908 = icmp eq i32 %v5_9904, 4
  store i1 %v7_9908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9908, label %dec_label_pc_9c14, label %dec_label_pc_9910

dec_label_pc_9910:                                ; preds = %dec_label_pc_98e4
  %v0_9910 = load i32, i32* @r5, align 4
  %v1_9910 = load i32, i32* @r4, align 4
  %v2_9910 = add i32 %v1_9910, %v0_9910
  %v3_9910 = inttoptr i32 %v2_9910 to i8*
  %v4_9910 = load i8, i8* %v3_9910, align 1
  %v6_9910 = zext i8 %v4_9910 to i32
  store i32 %v6_9910, i32* @r3, align 4
  %v2_9914 = icmp ugt i8 %v4_9910, 46
  store i1 %v2_9914, i1* %cpsr_c.global-to-local, align 1
  %v7_9914 = icmp eq i8 %v4_9910, 47
  store i1 %v7_9914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9914, label %dec_label_pc_9d70, label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %dec_label_pc_9d8c, %dec_label_pc_9d70, %dec_label_pc_9cd8, %dec_label_pc_9cbc, %dec_label_pc_9910, %dec_label_pc_9db8, %dec_label_pc_9d04
  %v0_991c = load i32, i32* @sb, align 4
  %v1_9920 = add i32 %v0_991c, 1431
  store i32 %v1_9920, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a248.19 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_992c = inttoptr i32 %v1_9920 to i16*
  %v5_992c = call i32 @function_15bb8(i16* %v4_992c, i32 ptrtoint ([4 x i8]* @global_var_1a248.19 to i32), i32 4)
  store i32 %v5_992c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_9934 = load i32, i32* @sl, align 4
  %v3_9934 = add i32 %v2_9934, -1448
  %v4_9934 = inttoptr i32 %v3_9934 to i8*
  store i8 10, i8* %v4_9934, align 1
  br label %dec_label_pc_87b4

dec_label_pc_993c:                                ; preds = %dec_label_pc_980c, %dec_label_pc_974c, %dec_label_pc_9720
  %v0_993c = load i32, i32* @fp, align 4
  store i32 %v0_993c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a260.41 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v5_994c = call i32 @function_12ea4(i32 %v2_8278, i32 %v0_993c, i32 ptrtoint ([5 x i8]* @global_var_1a260.41 to i32), i32 4)
  %v0_9950 = load i32, i32* @sb, align 4
  %v1_9954 = add i32 %v0_9950, 1431
  store i32 %v1_9954, i32* @r4, align 4
  store i32 %v5_994c, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a27c.47 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_9954, i32* %r0.global-to-local, align 4
  %v3_9964 = inttoptr i32 %v1_9954 to i8*
  %v4_9964 = call i32 @function_131d8(i8* %v3_9964, i32 ptrtoint ([5 x i8]* @global_var_1a27c.47 to i32))
  store i32 %v4_9964, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9968 = icmp eq i32 %v4_9964, 0
  store i1 %v2_9968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9968, label %dec_label_pc_9b28, label %dec_label_pc_9970

dec_label_pc_9970:                                ; preds = %dec_label_pc_9b28, %dec_label_pc_993c
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_9974 = load i32, i32* @sl, align 4
  %v3_9974 = add i32 %v2_9974, -1448
  %v4_9974 = inttoptr i32 %v3_9974 to i8*
  store i8 7, i8* %v4_9974, align 1
  br label %dec_label_pc_9978

dec_label_pc_9978:                                ; preds = %bb200, %dec_label_pc_9970
  %v0_9978 = load i32, i32* @r5, align 4
  store i32 %v0_9978, i32* @r2, align 4
  %v0_997c = load i32, i32* @sl, align 4
  %v1_997c = add i32 %v0_997c, -1452
  %v2_997c = inttoptr i32 %v1_997c to i32*
  %v3_997c = load i32, i32* %v2_997c, align 4
  store i32 %v3_997c, i32* @r0, align 4
  store i32 %v2_8278, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_9988 = call i32 @function_154d0(i32 %v3_997c, i32 %v2_8278, i32 %v0_9978, i32 16384)
  store i32 %v4_9988, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_87b4

dec_label_pc_9990:                                ; preds = %dec_label_pc_8ce4
  %v0_9990 = call i32 @function_13994()
  store i32 %v0_9990, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_9998 = inttoptr i32 %v0_9990 to i32*
  store i32 104, i32* %v2_9998, align 4
  br label %dec_label_pc_8d14

dec_label_pc_99a0:                                ; preds = %dec_label_pc_8ec0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v0_99a8 = load i32, i32* @sl, align 4
  %v1_99a8 = add i32 %v0_99a8, 660
  %v2_99a8 = inttoptr i32 %v1_99a8 to i32*
  %v3_99a8 = load i32, i32* %v2_99a8, align 4
  store i32 %v3_99a8, i32* @r4, align 4
  %v3_99ac = call i32 @function_12498(i32 36, i32* null)
  %v0_99b0 = load i32, i32* @r4, align 4
  store i32 %v0_99b0, i32* %r1.global-to-local, align 4
  store i32 %v3_99ac, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_99bc = load i32, i32* @r7, align 4
  store i32 %v0_99bc, i32* %r0.global-to-local, align 4
  %v4_99c0 = call i32 @function_12ea4(i32 %v0_99bc, i32 %v0_99b0, i32 %v3_99ac, i32 11)
  store i32 %v4_99c0, i32* %r0.global-to-local, align 4
  %v0_99c4 = load i32, i32* @sl, align 4
  %v1_99c4 = add i32 %v0_99c4, 660
  %v2_99c4 = inttoptr i32 %v1_99c4 to i32*
  %v3_99c4 = load i32, i32* %v2_99c4, align 4
  %v0_99c8 = load i32, i32* @r7, align 4
  %v2_99c8 = add i32 %v0_99c8, %v4_99c0
  store i32 %v2_99c8, i32* @r6, align 4
  store i32 %v4_99c0, i32* @r4, align 4
  %v2_99d0 = sub i32 %v3_99c4, %v4_99c0
  store i32 %v2_99d0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a284.49 to i32), i32* %r2.global-to-local, align 4
  %v0_99d8 = load i32, i32* @r8, align 4
  store i32 %v0_99d8, i32* %r3.global-to-local, align 4
  store i32 %v2_99c8, i32* %r0.global-to-local, align 4
  %v4_99e0 = call i32 @function_12ea4(i32 %v2_99c8, i32 %v2_99d0, i32 ptrtoint (i32* @global_var_1a284.49 to i32), i32 %v0_99d8)
  store i32 %v4_99e0, i32* %r0.global-to-local, align 4
  %v0_99e4 = load i32, i32* @sl, align 4
  %v1_99e4 = add i32 %v0_99e4, 16
  %v2_99e4 = inttoptr i32 %v1_99e4 to i32*
  %v3_99e4 = load i32, i32* %v2_99e4, align 4
  store i32 %v3_99e4, i32* %r3.global-to-local, align 4
  %v1_99e8 = load i32, i32* @r4, align 4
  %v2_99e8 = add i32 %v1_99e8, %v4_99e0
  store i32 %v2_99e8, i32* @r5, align 4
  %v0_99ec = load i32, i32* @sb, align 4
  %v2_99ec = add i32 %v0_99ec, %v2_99e8
  store i32 %v2_99ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* @fp, align 4
  %v2_99f4 = icmp ugt i32 %v3_99e4, 3
  store i1 %v2_99f4, i1* %cpsr_c.global-to-local, align 1
  %v7_99f4 = icmp eq i32 %v3_99e4, 4
  store i1 %v7_99f4, i1* %cpsr_z.global-to-local, align 1
  %v3_99f8 = add i32 %v2_99ec, 2115
  %v4_99f8 = inttoptr i32 %v3_99f8 to i8*
  store i8 0, i8* %v4_99f8, align 1
  %v7_99fc = icmp sgt i32 %v3_99e4, 4
  br i1 %v7_99fc, label %dec_label_pc_9a00, label %dec_label_pc_9b5c

dec_label_pc_9a00:                                ; preds = %dec_label_pc_99a0, %dec_label_pc_9b5c, %dec_label_pc_9b6c
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_9a08 = load i32, i32* @sl, align 4
  %v2_9a08 = add i32 %v1_9a08, 12
  %v3_9a08 = inttoptr i32 %v2_9a08 to i32*
  store i32 -1, i32* %v3_9a08, align 4
  %v0_9a0c = load i32, i32* %r2.global-to-local, align 4
  %v1_9a0c = trunc i32 %v0_9a0c to i8
  %v2_9a0c = load i32, i32* @sl, align 4
  %v3_9a0c = add i32 %v2_9a0c, -1448
  %v4_9a0c = inttoptr i32 %v3_9a0c to i8*
  store i8 %v1_9a0c, i8* %v4_9a0c, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9a14:                                ; preds = %bb189
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9a20 = load i32, i32* @r5, align 4
  %v1_9a20 = add i32 %v0_9a20, 4
  %v2_9a20 = inttoptr i32 %v1_9a20 to i8*
  %v3_9a20 = load i8, i8* %v2_9a20, align 1
  %v4_9a20 = zext i8 %v3_9a20 to i32
  store i32 %v4_9a20, i32* %r3.global-to-local, align 4
  %v2_9a24 = icmp ugt i8 %v3_9a20, 114
  store i1 %v2_9a24, i1* %cpsr_c.global-to-local, align 1
  %v7_9a24 = icmp eq i8 %v3_9a20, 115
  store i1 %v7_9a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a24, label %bb195, label %.thread38

bb195:                                            ; preds = %dec_label_pc_9a14
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread38

.thread38:                                        ; preds = %dec_label_pc_9a14, %bb195
  %v3_9a34 = phi i32 [ 7, %dec_label_pc_9a14 ], [ 8, %bb195 ]
  store i32 %v0_9a20, i32* %r0.global-to-local, align 4
  %v1_9a3c = load i32, i32* @r6, align 4
  %v2_9a3c = sub i32 %v1_9a3c, %v3_9a34
  store i32 %v2_9a3c, i32* %r2.global-to-local, align 4
  %v2_9a40 = add i32 %v3_9a34, %v0_9a20
  store i32 %v2_9a40, i32* %r1.global-to-local, align 4
  %v3_9a44 = inttoptr i32 %v0_9a20 to i8*
  %v4_9a44 = call i32 @function_15ec4(i8* %v3_9a44, i32 %v2_9a40, i32 %v2_9a3c)
  store i32 %v4_9a44, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v0_9a4c = load i32, i32* @r7, align 4
  store i32 %v0_9a4c, i32* %stack_var_-44, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v1_9a54 = load i32, i32* @r4, align 4
  %v2_9a54 = add i32 %v1_9a54, %v2_8278
  %v3_9a54 = inttoptr i32 %v2_9a54 to i8*
  %v4_9a54 = load i8, i8* %v3_9a54, align 1
  %v6_9a54 = zext i8 %v4_9a54 to i32
  store i32 %v6_9a54, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a58 = icmp eq i8 %v4_9a54, 0
  store i1 %v2_9a58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a58, label %dec_label_pc_9a9c, label %dec_label_pc_9a60

dec_label_pc_9a60:                                ; preds = %.thread38
  %v2_9a60 = icmp ugt i8 %v4_9a54, 46
  store i1 %v2_9a60, i1* %cpsr_c.global-to-local, align 1
  %v7_9a60 = icmp eq i8 %v4_9a54, 47
  store i1 %v7_9a60, i1* %cpsr_z.global-to-local, align 1
  %v1_9a64 = load i32, i32* @r5, align 4
  br i1 %v7_9a60, label %bb196, label %dec_label_pc_9a6c

bb196:                                            ; preds = %dec_label_pc_9a60
  store i32 %v1_9a64, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9c08

dec_label_pc_9a6c:                                ; preds = %dec_label_pc_9a60
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9a7c

dec_label_pc_9a74:                                ; preds = %dec_label_pc_9a7c
  %v2_9a74 = icmp ugt i8 %v4_9a88, 46
  store i1 %v2_9a74, i1* %cpsr_c.global-to-local, align 1
  %v7_9a74 = icmp eq i8 %v4_9a88, 47
  store i1 %v7_9a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a74, label %dec_label_pc_9c08, label %dec_label_pc_9a7c

dec_label_pc_9a7c:                                ; preds = %dec_label_pc_9a74, %dec_label_pc_9a6c
  %v0_9a90 = phi i32 [ %v1_9a90, %dec_label_pc_9a74 ], [ 1, %dec_label_pc_9a6c ]
  store i32 %v0_9a90, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v0_9a90, i32* %stack_var_-44, align 4
  %v2_9a88 = add i32 %v0_9a90, %v1_9a64
  %v3_9a88 = inttoptr i32 %v2_9a88 to i8*
  %v4_9a88 = load i8, i8* %v3_9a88, align 1
  %v6_9a88 = zext i8 %v4_9a88 to i32
  store i32 %v6_9a88, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a8c = icmp eq i8 %v4_9a88, 0
  store i1 %v2_9a8c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a90 = add i32 %v0_9a90, 1
  store i32 %v1_9a90, i32* %r2.global-to-local, align 4
  store i32 %v2_9a88, i32* %r1.global-to-local, align 4
  br i1 %v2_9a8c, label %dec_label_pc_9a9c, label %dec_label_pc_9a74

dec_label_pc_9a9c:                                ; preds = %dec_label_pc_9a7c, %.thread38, %dec_label_pc_9c08
  %v0_9a9c = load i32, i32* @r5, align 4
  store i32 %v0_9a9c, i32* %r0.global-to-local, align 4
  %v1_9aa0 = inttoptr i32 %v0_9a9c to i8*
  %v2_9aa0 = call i32 @function_12dec(i8* %v1_9aa0)
  store i32 %v2_9aa0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9aa4 = icmp eq i32 %v2_9aa0, 0
  store i1 %v2_9aa4, i1* %cpsr_z.global-to-local, align 1
  %tmp197 = icmp slt i32 %v2_9aa0, 1
  br i1 %tmp197, label %dec_label_pc_9ac8, label %dec_label_pc_9aac

dec_label_pc_9aac:                                ; preds = %dec_label_pc_9a9c
  %v0_9aac = load i32, i32* @r5, align 4
  store i32 %v0_9aac, i32* %r0.global-to-local, align 4
  %v1_9ab0 = inttoptr i32 %v0_9aac to i8*
  %v2_9ab0 = call i32 @function_12dec(i8* %v1_9ab0)
  store i32 %v2_9ab0, i32* %r0.global-to-local, align 4
  %v1_9ab4 = add i32 %v2_9ab0, -127
  %v2_9ab4 = icmp ugt i32 %v2_9ab0, 126
  store i1 %v2_9ab4, i1* %cpsr_c.global-to-local, align 1
  %v3_9ab4 = sub i32 126, %v2_9ab0
  %v4_9ab4 = and i32 %v3_9ab4, %v2_9ab0
  %v5_9ab4 = icmp slt i32 %v4_9ab4, 0
  %v6_9ab4 = icmp slt i32 %v1_9ab4, 0
  %v7_9ab4 = icmp eq i32 %v2_9ab0, 127
  store i1 %v7_9ab4, i1* %cpsr_z.global-to-local, align 1
  %v7_9ab8 = icmp sgt i32 %v2_9ab0, 127
  br i1 %v7_9ab8, label %.thread41, label %bb198

bb198:                                            ; preds = %dec_label_pc_9aac
  %v8_9ab8 = load i32, i32* @sb, align 4
  %v9_9abc = add i32 %v8_9ab8, 789
  store i32 %v9_9abc, i32* %r0.global-to-local, align 4
  %v8_9ac0 = load i32, i32* @r5, align 4
  store i32 %v8_9ac0, i32* %r1.global-to-local, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_9aac, %bb198
  store i32 39624, i32* @lr, align 4
  %v3_9ac4 = xor i1 %v6_9ab4, %v5_9ab4
  %v4_9ac4 = or i1 %v7_9ab4, %v3_9ac4
  call void @__pseudo_cond_branch(i1 %v4_9ac4, i32 ptrtoint (i32* @global_var_12e14.50 to i32))
  br label %dec_label_pc_9ac8

dec_label_pc_9ac8:                                ; preds = %dec_label_pc_9a9c, %.thread41
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9acc = load i32, i32* %stack_var_-44, align 4
  %v0_9ad0 = load i32, i32* @r5, align 4
  %v1_9ad0 = add i32 %v0_9ad0, 1
  store i32 %v1_9ad0, i32* @r5, align 4
  %v2_9ad4 = add i32 %v1_9ad0, %v3_9acc
  store i32 %v2_9ad4, i32* %r0.global-to-local, align 4
  %v1_9ad8 = inttoptr i32 %v2_9ad4 to i8*
  %v2_9ad8 = call i32 @function_12dec(i8* %v1_9ad8)
  store i32 %v2_9ad8, i32* %r0.global-to-local, align 4
  %v2_9adc = icmp ugt i32 %v2_9ad8, 254
  store i1 %v2_9adc, i1* %cpsr_c.global-to-local, align 1
  %v7_9adc = icmp eq i32 %v2_9ad8, 255
  store i1 %v7_9adc, i1* %cpsr_z.global-to-local, align 1
  %v8_9ae0 = icmp sgt i32 %v2_9ad8, 255
  br i1 %v8_9ae0, label %dec_label_pc_8d40, label %dec_label_pc_9ae4

dec_label_pc_9ae4:                                ; preds = %dec_label_pc_9ac8
  %v0_9ae4 = load i32, i32* @sb, align 4
  %v1_9ae8 = add i32 %v0_9ae4, 533
  store i32 %v1_9ae8, i32* @r4, align 4
  store i32 %v1_9ae8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9af4 = call i32 @function_12e80(i32 %v1_9ae8, i32 255)
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9afc = load i32, i32* %stack_var_-44, align 4
  %v0_9b00 = load i32, i32* @r5, align 4
  %v2_9b00 = add i32 %v0_9b00, %v3_9afc
  store i32 %v2_9b00, i32* %r0.global-to-local, align 4
  %v1_9b04 = inttoptr i32 %v2_9b00 to i8*
  %v2_9b04 = call i32 @function_12dec(i8* %v1_9b04)
  store i32 %v2_9b04, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b08 = icmp eq i32 %v2_9b04, 0
  store i1 %v2_9b08, i1* %cpsr_z.global-to-local, align 1
  %tmp199 = icmp slt i32 %v2_9b04, 1
  br i1 %tmp199, label %dec_label_pc_8d40, label %dec_label_pc_9b10

dec_label_pc_9b10:                                ; preds = %dec_label_pc_9ae4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9b14 = load i32, i32* %stack_var_-44, align 4
  %v0_9b18 = load i32, i32* @r4, align 4
  store i32 %v0_9b18, i32* @r0, align 4
  %v0_9b1c = load i32, i32* @r5, align 4
  %v2_9b1c = add i32 %v0_9b1c, %v3_9b14
  store i32 %v2_9b1c, i32* %r1.global-to-local, align 4
  %v2_9b20 = inttoptr i32 %v0_9b18 to i8*
  %v3_9b20 = call i32 @function_12e14(i8* %v2_9b20, i32 %v2_9b1c)
  store i32 %v3_9b20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d40

dec_label_pc_9b28:                                ; preds = %dec_label_pc_993c
  %v0_9b28 = load i32, i32* @r4, align 4
  store i32 %v0_9b28, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a248.19 to i32), i32* %r1.global-to-local, align 4
  %v3_9b30 = inttoptr i32 %v0_9b28 to i8*
  %v4_9b30 = call i32 @function_131d8(i8* %v3_9b30, i32 ptrtoint ([4 x i8]* @global_var_1a248.19 to i32))
  store i32 %v4_9b30, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b34 = icmp eq i32 %v4_9b30, 0
  store i1 %v2_9b34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b34, label %bb200, label %dec_label_pc_9970

bb200:                                            ; preds = %dec_label_pc_9b28
  %v0_9b3c = load i32, i32* @fp, align 4
  %v1_9b3c = load i32, i32* @r5, align 4
  %v3_9b3c = icmp uge i32 %v0_9b3c, %v1_9b3c
  store i1 %v3_9b3c, i1* %cpsr_c.global-to-local, align 1
  %v9_9b3c = icmp eq i32 %v0_9b3c, %v1_9b3c
  store i1 %v9_9b3c, i1* %cpsr_z.global-to-local, align 1
  %v7_9b40 = icmp sgt i32 %v0_9b3c, %v1_9b3c
  %. = select i1 %v7_9b40, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_9b48 = trunc i32 %. to i8
  %v10_9b48 = load i32, i32* @sl, align 4
  %v11_9b48 = add i32 %v10_9b48, -1448
  %v12_9b48 = inttoptr i32 %v11_9b48 to i8*
  store i8 %v9_9b48, i8* %v12_9b48, align 1
  br label %dec_label_pc_9978

dec_label_pc_9b54:                                ; preds = %dec_label_pc_8f64
  %v0_9b54 = load i32, i32* @r4, align 4
  %v1_9b54 = trunc i32 %v0_9b54 to i8
  %v2_9b54 = load i32, i32* @sl, align 4
  %v3_9b54 = add i32 %v2_9b54, -1448
  %v4_9b54 = inttoptr i32 %v3_9b54 to i8*
  store i8 %v1_9b54, i8* %v4_9b54, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_99a0
  %v0_9b5c = load i32, i32* @r6, align 4
  store i32 %v0_9b5c, i32* %r0.global-to-local, align 4
  %v1_9b60 = inttoptr i32 %v0_9b5c to i8*
  %v2_9b60 = call i32 @function_12dec(i8* %v1_9b60)
  store i32 %v2_9b60, i32* %r0.global-to-local, align 4
  %v2_9b64 = icmp ugt i32 %v2_9b60, 126
  store i1 %v2_9b64, i1* %cpsr_c.global-to-local, align 1
  %v7_9b64 = icmp eq i32 %v2_9b60, 127
  store i1 %v7_9b64, i1* %cpsr_z.global-to-local, align 1
  %v8_9b68 = icmp sgt i32 %v2_9b60, 127
  br i1 %v8_9b68, label %dec_label_pc_9a00, label %dec_label_pc_9b6c

dec_label_pc_9b6c:                                ; preds = %dec_label_pc_9b5c
  %v0_9b6c = load i32, i32* @sl, align 4
  %v1_9b6c = add i32 %v0_9b6c, 16
  %v2_9b6c = inttoptr i32 %v1_9b6c to i32*
  %v3_9b6c = load i32, i32* %v2_9b6c, align 4
  %v1_9b70 = and i32 %v3_9b6c, 33554432
  %v2_9b70 = icmp ne i32 %v1_9b70, 0
  store i1 %v2_9b70, i1* %cpsr_c.global-to-local, align 1
  %v3_9b70 = mul i32 %v3_9b6c, 128
  %v1_9b74 = add i32 %v3_9b70, 1472
  %v0_9b78 = load i32, i32* @r6, align 4
  store i32 %v0_9b78, i32* %r1.global-to-local, align 4
  %v0_9b7c = load i32, i32* @sb, align 4
  %v2_9b7c = add i32 %v1_9b74, %v0_9b7c
  store i32 %v2_9b7c, i32* @r0, align 4
  %v2_9b80 = inttoptr i32 %v2_9b7c to i8*
  %v3_9b80 = call i32 @function_12e14(i8* %v2_9b80, i32 %v0_9b78)
  store i32 %v3_9b80, i32* %r0.global-to-local, align 4
  %v0_9b84 = load i32, i32* @sl, align 4
  %v1_9b84 = add i32 %v0_9b84, 16
  %v2_9b84 = inttoptr i32 %v1_9b84 to i32*
  %v3_9b84 = load i32, i32* %v2_9b84, align 4
  %v1_9b88 = and i32 %v3_9b84, 33554432
  %v2_9b88 = icmp ne i32 %v1_9b88, 0
  store i1 %v2_9b88, i1* %cpsr_c.global-to-local, align 1
  %v3_9b88 = mul i32 %v3_9b84, 128
  %v1_9b8c = add i32 %v3_9b88, 1472
  %v0_9b90 = load i32, i32* @sb, align 4
  %v2_9b90 = add i32 %v1_9b8c, %v0_9b90
  store i32 %v2_9b90, i32* @r4, align 4
  store i32 %v2_9b90, i32* %r0.global-to-local, align 4
  %v1_9b98 = inttoptr i32 %v2_9b90 to i8*
  %v2_9b98 = call i32 @function_12dec(i8* %v1_9b98)
  store i32 ptrtoint (i32* @global_var_1a288.52 to i32), i32* %r1.global-to-local, align 4
  %v0_9ba0 = load i32, i32* @r4, align 4
  %v2_9ba0 = add i32 %v0_9ba0, %v2_9b98
  store i32 %v2_9ba0, i32* @r0, align 4
  %v2_9ba4 = inttoptr i32 %v2_9ba0 to i8*
  %v3_9ba4 = call i32 @function_12e14(i8* %v2_9ba4, i32 ptrtoint (i32* @global_var_1a288.52 to i32))
  store i32 %v3_9ba4, i32* %r0.global-to-local, align 4
  %v0_9ba8 = load i32, i32* @r5, align 4
  %v1_9ba8 = add i32 %v0_9ba8, 3
  store i32 %v1_9ba8, i32* @r5, align 4
  %v0_9bac = load i32, i32* @sl, align 4
  %v1_9bac = add i32 %v0_9bac, 660
  %v2_9bac = inttoptr i32 %v1_9bac to i32*
  %v3_9bac = load i32, i32* %v2_9bac, align 4
  %v0_9bb0 = load i32, i32* @r7, align 4
  %v2_9bb0 = add i32 %v0_9bb0, %v1_9ba8
  store i32 %v2_9bb0, i32* @r6, align 4
  %v2_9bb4 = sub i32 %v3_9bac, %v1_9ba8
  store i32 %v2_9bb4, i32* %r1.global-to-local, align 4
  %v0_9bb8 = load i32, i32* @r8, align 4
  store i32 %v0_9bb8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a284.49 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9bb0, i32* %r0.global-to-local, align 4
  %v4_9bc4 = call i32 @function_12ea4(i32 %v2_9bb0, i32 %v2_9bb4, i32 ptrtoint (i32* @global_var_1a284.49 to i32), i32 %v0_9bb8)
  store i32 %v4_9bc4, i32* %r0.global-to-local, align 4
  %v0_9bc8 = load i32, i32* @sl, align 4
  %v1_9bc8 = add i32 %v0_9bc8, 16
  %v2_9bc8 = inttoptr i32 %v1_9bc8 to i32*
  %v3_9bc8 = load i32, i32* %v2_9bc8, align 4
  %v1_9bcc = and i32 %v3_9bc8, 33554432
  %v2_9bcc = icmp ne i32 %v1_9bcc, 0
  store i1 %v2_9bcc, i1* %cpsr_c.global-to-local, align 1
  %v3_9bcc = mul i32 %v3_9bc8, 128
  %v0_9bd0 = load i32, i32* @r5, align 4
  %v2_9bd0 = add i32 %v0_9bd0, %v4_9bc4
  %v1_9bd4 = add i32 %v3_9bcc, 1472
  %v0_9bd8 = load i32, i32* @sb, align 4
  %v2_9bd8 = add i32 %v1_9bd4, %v0_9bd8
  store i32 %v2_9bd8, i32* @r4, align 4
  %v2_9bdc = add i32 %v2_9bd0, %v0_9bd8
  store i32 %v2_9bdc, i32* @r5, align 4
  store i32 %v2_9bd8, i32* %r0.global-to-local, align 4
  %v0_9be4 = load i32, i32* @fp, align 4
  %v1_9be4 = trunc i32 %v0_9be4 to i8
  %v3_9be4 = add i32 %v2_9bdc, 2115
  %v4_9be4 = inttoptr i32 %v3_9be4 to i8*
  store i8 %v1_9be4, i8* %v4_9be4, align 1
  %v1_9be8 = inttoptr i32 %v2_9bd8 to i8*
  %v2_9be8 = call i32 @function_12dec(i8* %v1_9be8)
  %v0_9bec = load i32, i32* @r6, align 4
  store i32 %v0_9bec, i32* %r1.global-to-local, align 4
  %v0_9bf0 = load i32, i32* @r4, align 4
  %v2_9bf0 = add i32 %v0_9bf0, %v2_9be8
  store i32 %v2_9bf0, i32* @r0, align 4
  %v2_9bf4 = inttoptr i32 %v2_9bf0 to i8*
  %v3_9bf4 = call i32 @function_12e14(i8* %v2_9bf4, i32 %v0_9bec)
  store i32 %v3_9bf4, i32* %r0.global-to-local, align 4
  %v0_9bf8 = load i32, i32* @sl, align 4
  %v1_9bf8 = add i32 %v0_9bf8, 16
  %v2_9bf8 = inttoptr i32 %v1_9bf8 to i32*
  %v3_9bf8 = load i32, i32* %v2_9bf8, align 4
  %v1_9bfc = add i32 %v3_9bf8, 1
  store i32 %v1_9bfc, i32* %r3.global-to-local, align 4
  store i32 %v1_9bfc, i32* %v2_9bf8, align 4
  br label %dec_label_pc_9a00

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9a74, %bb196
  %v2_9c0c = phi i32 [ %v1_9a64, %bb196 ], [ %v2_9a88, %dec_label_pc_9a74 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9c0c = inttoptr i32 %v2_9c0c to i8*
  store i8 0, i8* %v3_9c0c, align 1
  br label %dec_label_pc_9a9c

dec_label_pc_9c14:                                ; preds = %dec_label_pc_98e4
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9c20 = load i32, i32* @r6, align 4
  %v1_9c20 = add i32 %v0_9c20, 4
  %v2_9c20 = inttoptr i32 %v1_9c20 to i8*
  %v3_9c20 = load i8, i8* %v2_9c20, align 1
  %v4_9c20 = zext i8 %v3_9c20 to i32
  store i32 %v4_9c20, i32* %r3.global-to-local, align 4
  %v2_9c24 = icmp ugt i8 %v3_9c20, 114
  store i1 %v2_9c24, i1* %cpsr_c.global-to-local, align 1
  %v7_9c24 = icmp eq i8 %v3_9c20, 115
  store i1 %v7_9c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c24, label %bb201, label %.thread44

bb201:                                            ; preds = %dec_label_pc_9c14
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_9c14, %bb201
  %v3_9c34 = phi i32 [ 7, %dec_label_pc_9c14 ], [ 8, %bb201 ]
  %v1_9c38 = sub nsw i32 1, %v3_9c34
  %v1_9c3c = load i32, i32* @r7, align 4
  %v2_9c3c = add i32 %v1_9c3c, %v1_9c38
  store i32 %v2_9c3c, i32* %r2.global-to-local, align 4
  %v2_9c40 = add i32 %v3_9c34, %v0_9c20
  store i32 %v2_9c40, i32* %r1.global-to-local, align 4
  store i32 %v0_9c20, i32* %r0.global-to-local, align 4
  %v3_9c48 = inttoptr i32 %v0_9c20 to i8*
  %v4_9c48 = call i32 @function_15ec4(i8* %v3_9c48, i32 %v2_9c40, i32 %v2_9c3c)
  store i32 %v4_9c48, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_9c58 = load i32, i32* @r5, align 4
  %v1_9c58 = load i32, i32* @r4, align 4
  %v2_9c58 = add i32 %v1_9c58, %v0_9c58
  %v3_9c58 = inttoptr i32 %v2_9c58 to i8*
  %v4_9c58 = load i8, i8* %v3_9c58, align 1
  %v6_9c58 = zext i8 %v4_9c58 to i32
  store i32 %v6_9c58, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_9c5c = icmp eq i8 %v4_9c58, 0
  store i1 %v9_9c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c5c, label %dec_label_pc_9c9c, label %dec_label_pc_9c64

dec_label_pc_9c64:                                ; preds = %.thread44
  %v2_9c64 = icmp ugt i8 %v4_9c58, 46
  store i1 %v2_9c64, i1* %cpsr_c.global-to-local, align 1
  %v7_9c64 = icmp eq i8 %v4_9c58, 47
  store i1 %v7_9c64, i1* %cpsr_z.global-to-local, align 1
  %v1_9c68 = load i32, i32* @r6, align 4
  br i1 %v7_9c64, label %bb202, label %dec_label_pc_9c70

bb202:                                            ; preds = %dec_label_pc_9c64
  store i32 %v1_9c68, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9d1c

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9c64
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9c80

dec_label_pc_9c78:                                ; preds = %dec_label_pc_9c80
  %v2_9c78 = icmp ugt i8 %v4_9c8c, 46
  store i1 %v2_9c78, i1* %cpsr_c.global-to-local, align 1
  %v7_9c78 = icmp eq i8 %v4_9c8c, 47
  store i1 %v7_9c78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c78, label %dec_label_pc_9d1c, label %dec_label_pc_9c80

dec_label_pc_9c80:                                ; preds = %dec_label_pc_9c78, %dec_label_pc_9c70
  %v0_9c80 = phi i32 [ %v1_9c80, %dec_label_pc_9c78 ], [ 0, %dec_label_pc_9c70 ]
  %v1_9c80 = add i32 %v0_9c80, 1
  store i32 %v1_9c80, i32* %r1.global-to-local, align 4
  store i32 %v10_82f0, i32* @ip, align 4
  store i32 %v1_9c80, i32* %stack_var_-44, align 4
  %v2_9c8c = add i32 %v1_9c80, %v1_9c68
  %v3_9c8c = inttoptr i32 %v2_9c8c to i8*
  %v4_9c8c = load i8, i8* %v3_9c8c, align 1
  %v6_9c8c = zext i8 %v4_9c8c to i32
  store i32 %v6_9c8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c90 = icmp eq i8 %v4_9c8c, 0
  store i1 %v2_9c90, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9c8c, i32* %r2.global-to-local, align 4
  br i1 %v2_9c90, label %dec_label_pc_9c9c, label %dec_label_pc_9c78

dec_label_pc_9c9c:                                ; preds = %dec_label_pc_9c80, %.thread44, %dec_label_pc_9d1c
  %v0_9c9c = load i32, i32* @r6, align 4
  store i32 %v0_9c9c, i32* %r0.global-to-local, align 4
  %v1_9ca0 = inttoptr i32 %v0_9c9c to i8*
  %v2_9ca0 = call i32 @function_12dec(i8* %v1_9ca0)
  store i32 %v2_9ca0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9ca4 = icmp eq i32 %v2_9ca0, 0
  store i1 %v2_9ca4, i1* %cpsr_z.global-to-local, align 1
  %tmp203 = icmp slt i32 %v2_9ca0, 1
  br i1 %tmp203, label %dec_label_pc_9cbc, label %dec_label_pc_9cac

dec_label_pc_9cac:                                ; preds = %dec_label_pc_9c9c
  %v0_9cac = load i32, i32* @r6, align 4
  store i32 %v0_9cac, i32* %r0.global-to-local, align 4
  %v1_9cb0 = inttoptr i32 %v0_9cac to i8*
  %v2_9cb0 = call i32 @function_12dec(i8* %v1_9cb0)
  store i32 %v2_9cb0, i32* %r0.global-to-local, align 4
  %v2_9cb4 = icmp ugt i32 %v2_9cb0, 126
  store i1 %v2_9cb4, i1* %cpsr_c.global-to-local, align 1
  %v7_9cb4 = icmp eq i32 %v2_9cb0, 127
  store i1 %v7_9cb4, i1* %cpsr_z.global-to-local, align 1
  %v7_9cb8 = icmp slt i32 %v2_9cb0, 128
  br i1 %v7_9cb8, label %dec_label_pc_9e6c, label %dec_label_pc_9cbc

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9cac, %dec_label_pc_9c9c, %dec_label_pc_9e6c
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9cc0 = load i32, i32* %stack_var_-44, align 4
  %v0_9cc4 = load i32, i32* @r6, align 4
  %v1_9cc4 = add i32 %v0_9cc4, 1
  store i32 %v1_9cc4, i32* @r5, align 4
  %v2_9cc8 = add i32 %v1_9cc4, %v3_9cc0
  store i32 %v2_9cc8, i32* %r0.global-to-local, align 4
  %v1_9ccc = inttoptr i32 %v2_9cc8 to i8*
  %v2_9ccc = call i32 @function_12dec(i8* %v1_9ccc)
  store i32 %v2_9ccc, i32* %r0.global-to-local, align 4
  %v2_9cd0 = icmp ugt i32 %v2_9ccc, 254
  store i1 %v2_9cd0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cd0 = icmp eq i32 %v2_9ccc, 255
  store i1 %v7_9cd0, i1* %cpsr_z.global-to-local, align 1
  %v8_9cd4 = icmp sgt i32 %v2_9ccc, 255
  br i1 %v8_9cd4, label %dec_label_pc_991c, label %dec_label_pc_9cd8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9cbc
  %v0_9cd8 = load i32, i32* @sb, align 4
  %v1_9cdc = add i32 %v0_9cd8, 533
  store i32 %v1_9cdc, i32* @r4, align 4
  store i32 %v1_9cdc, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9ce8 = call i32 @function_12e80(i32 %v1_9cdc, i32 255)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9cf0 = load i32, i32* %stack_var_-44, align 4
  %v0_9cf4 = load i32, i32* @r5, align 4
  %v2_9cf4 = add i32 %v0_9cf4, %v3_9cf0
  store i32 %v2_9cf4, i32* %r0.global-to-local, align 4
  %v1_9cf8 = inttoptr i32 %v2_9cf4 to i8*
  %v2_9cf8 = call i32 @function_12dec(i8* %v1_9cf8)
  store i32 %v2_9cf8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cfc = icmp eq i32 %v2_9cf8, 0
  store i1 %v2_9cfc, i1* %cpsr_z.global-to-local, align 1
  %tmp204 = icmp slt i32 %v2_9cf8, 1
  br i1 %tmp204, label %dec_label_pc_991c, label %dec_label_pc_9d04

dec_label_pc_9d04:                                ; preds = %dec_label_pc_9cd8
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d08 = load i32, i32* %stack_var_-44, align 4
  %v0_9d0c = load i32, i32* @r4, align 4
  store i32 %v0_9d0c, i32* @r0, align 4
  %v0_9d10 = load i32, i32* @r5, align 4
  %v2_9d10 = add i32 %v0_9d10, %v3_9d08
  store i32 %v2_9d10, i32* %r1.global-to-local, align 4
  %v2_9d14 = inttoptr i32 %v0_9d0c to i8*
  %v3_9d14 = call i32 @function_12e14(i8* %v2_9d14, i32 %v2_9d10)
  store i32 %v3_9d14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_991c

dec_label_pc_9d1c:                                ; preds = %dec_label_pc_9c78, %bb202
  %v2_9d20 = phi i32 [ %v1_9c68, %bb202 ], [ %v2_9c8c, %dec_label_pc_9c78 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9d20 = inttoptr i32 %v2_9d20 to i8*
  store i8 0, i8* %v3_9d20, align 1
  br label %dec_label_pc_9c9c

dec_label_pc_9d28:                                ; preds = %dec_label_pc_989c
  %v1_9d28 = add i32 %v0_9d28, 1
  store i32 %v1_9d28, i32* %ip.global-to-local, align 4
  %v2_9d2c = add i32 %v0_989c, %v1_9d28
  store i32 %v2_9d2c, i32* %r4.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 %v2_9d2c, i32* %r0.global-to-local, align 4
  store i32 %v1_9d28, i32* %stack_var_-44, align 4
  %v1_9d3c = inttoptr i32 %v2_9d2c to i8*
  %v2_9d3c = call i32 @function_12dec(i8* %v1_9d3c)
  store i32 %v2_9d3c, i32* %r0.global-to-local, align 4
  %v0_9d40 = load i32, i32* %r4.global-to-local, align 4
  %v2_9d40 = add i32 %v0_9d40, %v2_9d3c
  store i32 %v2_9d40, i32* @r4, align 4
  %v1_9d44 = add i32 %v2_9d40, -1
  %v2_9d44 = inttoptr i32 %v1_9d44 to i8*
  %v3_9d44 = load i8, i8* %v2_9d44, align 1
  %v4_9d44 = zext i8 %v3_9d44 to i32
  store i32 %v4_9d44, i32* %r3.global-to-local, align 4
  %v2_9d48 = icmp ugt i8 %v3_9d44, 33
  store i1 %v2_9d48, i1* %cpsr_c.global-to-local, align 1
  %v7_9d48 = icmp eq i8 %v3_9d44, 34
  store i1 %v7_9d48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d48, label %dec_label_pc_9d50, label %dec_label_pc_98a8

dec_label_pc_9d50:                                ; preds = %dec_label_pc_9d28
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d54 = load i32, i32* %stack_var_-44, align 4
  %v0_9d58 = load i32, i32* @r5, align 4
  %v2_9d58 = add i32 %v0_9d58, %v3_9d54
  store i32 %v2_9d58, i32* %r4.global-to-local, align 4
  store i32 %v2_9d58, i32* %r0.global-to-local, align 4
  %v1_9d60 = inttoptr i32 %v2_9d58 to i8*
  %v2_9d60 = call i32 @function_12dec(i8* %v1_9d60)
  store i32 %v2_9d60, i32* %r0.global-to-local, align 4
  %v2_9d64 = add i32 %v2_9d58, %v2_9d60
  store i32 %v2_9d64, i32* @r4, align 4
  %v0_9d68 = load i32, i32* @r6, align 4
  %v1_9d68 = trunc i32 %v0_9d68 to i8
  %v3_9d68 = add i32 %v2_9d64, -1
  %v4_9d68 = inttoptr i32 %v3_9d68 to i8*
  store i8 %v1_9d68, i8* %v4_9d68, align 1
  br label %dec_label_pc_98a8

dec_label_pc_9d70:                                ; preds = %dec_label_pc_9910
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9d74 = load i32, i32* %stack_var_-44, align 4
  %v0_9d78 = load i32, i32* @r6, align 4
  %v1_9d78 = add i32 %v0_9d78, 1
  store i32 %v1_9d78, i32* @r5, align 4
  %v2_9d7c = add i32 %v1_9d78, %v3_9d74
  store i32 %v2_9d7c, i32* %r0.global-to-local, align 4
  %v1_9d80 = inttoptr i32 %v2_9d7c to i8*
  %v2_9d80 = call i32 @function_12dec(i8* %v1_9d80)
  store i32 %v2_9d80, i32* %r0.global-to-local, align 4
  %v2_9d84 = icmp ugt i32 %v2_9d80, 254
  store i1 %v2_9d84, i1* %cpsr_c.global-to-local, align 1
  %v7_9d84 = icmp eq i32 %v2_9d80, 255
  store i1 %v7_9d84, i1* %cpsr_z.global-to-local, align 1
  %v8_9d88 = icmp sgt i32 %v2_9d80, 255
  br i1 %v8_9d88, label %dec_label_pc_991c, label %dec_label_pc_9d8c

dec_label_pc_9d8c:                                ; preds = %dec_label_pc_9d70
  %v0_9d8c = load i32, i32* @sb, align 4
  %v1_9d90 = add i32 %v0_9d8c, 533
  store i32 %v1_9d90, i32* @r4, align 4
  store i32 %v1_9d90, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9d9c = call i32 @function_12e80(i32 %v1_9d90, i32 255)
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_9da4 = load i32, i32* %stack_var_-44, align 4
  %v0_9da8 = load i32, i32* @r5, align 4
  %v2_9da8 = add i32 %v0_9da8, %v3_9da4
  store i32 %v2_9da8, i32* %r0.global-to-local, align 4
  %v1_9dac = inttoptr i32 %v2_9da8 to i8*
  %v2_9dac = call i32 @function_12dec(i8* %v1_9dac)
  store i32 %v2_9dac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9db0 = icmp eq i32 %v2_9dac, 0
  store i1 %v2_9db0, i1* %cpsr_z.global-to-local, align 1
  %tmp205 = icmp slt i32 %v2_9dac, 1
  br i1 %tmp205, label %dec_label_pc_991c, label %dec_label_pc_9db8

dec_label_pc_9db8:                                ; preds = %dec_label_pc_9d8c
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9dbc = load i32, i32* %stack_var_-44, align 4
  %v0_9dc0 = load i32, i32* @r4, align 4
  store i32 %v0_9dc0, i32* @r0, align 4
  %v0_9dc4 = load i32, i32* @r5, align 4
  %v2_9dc4 = add i32 %v0_9dc4, %v3_9dbc
  store i32 %v2_9dc4, i32* %r1.global-to-local, align 4
  %v2_9dc8 = inttoptr i32 %v0_9dc0 to i8*
  %v3_9dc8 = call i32 @function_12e14(i8* %v2_9dc8, i32 %v2_9dc4)
  store i32 %v3_9dc8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_991c

dec_label_pc_9dd0:                                ; preds = %dec_label_pc_8498
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9dd4 = call i32 @function_1255c(i32 50)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v3_9de0 = call i32 @function_12498(i32 50, i32* null)
  store i32 %v3_9de0, i32* %r1.global-to-local, align 4
  %v0_9de8 = load i32, i32* @r5, align 4
  %v1_9de8 = add i32 %v0_9de8, 20
  store i32 %v1_9de8, i32* @r0, align 4
  %v2_9dec = inttoptr i32 %v1_9de8 to i8*
  %v3_9dec = call i32 @function_12e14(i8* %v2_9dec, i32 %v3_9de0)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9df4 = call i32 @function_124bc(i32 50)
  store i32 %v1_9df4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9df8:                                ; preds = %dec_label_pc_8498, %dec_label_pc_9ed8, %dec_label_pc_9eac, %dec_label_pc_9e80, %dec_label_pc_9e40, %dec_label_pc_9dd0
  %v0_9df8 = load i32, i32* @r7, align 4
  store i32 %v0_9df8, i32* %r1.global-to-local, align 4
  %v0_9dfc = load i32, i32* @fp, align 4
  store i32 %v0_9dfc, i32* @r0, align 4
  %v2_9e00 = inttoptr i32 %v0_9dfc to i8*
  %v3_9e00 = call i32 @function_12e14(i8* %v2_9e00, i32 %v0_9df8)
  store i32 %v3_9e00, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r1.global-to-local, align 4
  %v0_9e08 = load i32, i32* @sb, align 4
  %v1_9e08 = add i32 %v0_9e08, 1
  store i32 %v1_9e08, i32* @sb, align 4
  %v0_9e0c = load i32, i32* @r5, align 4
  %v3_9e10 = icmp uge i32 %v1_9e08, %v0_839c
  store i1 %v3_9e10, i1* %cpsr_c.global-to-local, align 1
  %v9_9e10 = icmp eq i32 %v1_9e08, %v0_839c
  store i1 %v9_9e10, i1* %cpsr_z.global-to-local, align 1
  %v1_9e14 = add i32 %v0_9e0c, 3140
  store i32 %v1_9e14, i32* @r5, align 4
  br i1 %v9_9e10, label %dec_label_pc_9e1c, label %dec_label_pc_83cc

dec_label_pc_9e1c:                                ; preds = %dec_label_pc_9df8
  %v1_9e2c = add i32 %v2_83b0, 1452
  store i32 %v1_9e2c, i32* %r2.global-to-local, align 4
  %v2_9e30 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_9e30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_84f4.preheader

dec_label_pc_9e40:                                ; preds = %dec_label_pc_8498
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9e44 = call i32 @function_1255c(i32 51)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v3_9e50 = call i32 @function_12498(i32 51, i32* null)
  store i32 %v3_9e50, i32* %r1.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r5, align 4
  %v1_9e58 = add i32 %v0_9e58, 20
  store i32 %v1_9e58, i32* @r0, align 4
  %v2_9e5c = inttoptr i32 %v1_9e58 to i8*
  %v3_9e5c = call i32 @function_12e14(i8* %v2_9e5c, i32 %v3_9e50)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9e64 = call i32 @function_124bc(i32 51)
  store i32 %v1_9e64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9e6c:                                ; preds = %dec_label_pc_9cac
  %v0_9e6c = load i32, i32* @sb, align 4
  %v0_9e70 = load i32, i32* @r6, align 4
  store i32 %v0_9e70, i32* %r1.global-to-local, align 4
  %v1_9e74 = add i32 %v0_9e6c, 789
  store i32 %v1_9e74, i32* @r0, align 4
  %v2_9e78 = inttoptr i32 %v1_9e74 to i8*
  %v3_9e78 = call i32 @function_12e14(i8* %v2_9e78, i32 %v0_9e70)
  store i32 %v3_9e78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9cbc

dec_label_pc_9e80:                                ; preds = %dec_label_pc_8498
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9e84 = call i32 @function_1255c(i32 48)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v3_9e90 = call i32 @function_12498(i32 48, i32* null)
  store i32 %v3_9e90, i32* %r1.global-to-local, align 4
  %v0_9e98 = load i32, i32* @r5, align 4
  %v1_9e98 = add i32 %v0_9e98, 20
  store i32 %v1_9e98, i32* @r0, align 4
  %v2_9e9c = inttoptr i32 %v1_9e98 to i8*
  %v3_9e9c = call i32 @function_12e14(i8* %v2_9e9c, i32 %v3_9e90)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9ea4 = call i32 @function_124bc(i32 48)
  store i32 %v1_9ea4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9eac:                                ; preds = %dec_label_pc_8498
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9eb0 = call i32 @function_1255c(i32 47)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_9ebc = call i32 @function_12498(i32 47, i32* null)
  store i32 %v3_9ebc, i32* %r1.global-to-local, align 4
  %v0_9ec4 = load i32, i32* @r5, align 4
  %v1_9ec4 = add i32 %v0_9ec4, 20
  store i32 %v1_9ec4, i32* @r0, align 4
  %v2_9ec8 = inttoptr i32 %v1_9ec4 to i8*
  %v3_9ec8 = call i32 @function_12e14(i8* %v2_9ec8, i32 %v3_9ebc)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9ed0 = call i32 @function_124bc(i32 47)
  store i32 %v1_9ed0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9ed8:                                ; preds = %dec_label_pc_8498
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9edc = call i32 @function_1255c(i32 49)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v3_9ee8 = call i32 @function_12498(i32 49, i32* null)
  store i32 %v3_9ee8, i32* %r1.global-to-local, align 4
  %v0_9ef0 = load i32, i32* @r5, align 4
  %v1_9ef0 = add i32 %v0_9ef0, 20
  store i32 %v1_9ef0, i32* @r0, align 4
  %v2_9ef4 = inttoptr i32 %v1_9ef0 to i8*
  %v3_9ef4 = call i32 @function_12e14(i8* %v2_9ef4, i32 %v3_9ee8)
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9efc = call i32 @function_124bc(i32 49)
  store i32 %v1_9efc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

; uselistorder directives
  uselistorder i32 %v2_9e30, { 1, 0 }
  uselistorder i32 %v1_9e2c, { 1, 0 }
  uselistorder i32 %v1_9e14, { 1, 0 }
  uselistorder i32 %v1_9d28, { 1, 0, 2 }
  uselistorder i8 %v4_9c8c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9c80, { 0, 2, 3, 1 }
  uselistorder i1 %v7_9c78, { 1, 0 }
  uselistorder i32 %v1_9c68, { 1, 0, 2 }
  uselistorder i1 %v7_9c64, { 1, 0 }
  uselistorder i1 %v9_9c5c, { 1, 0 }
  uselistorder i32 %v0_9c20, { 2, 1, 0, 3 }
  uselistorder i32 %v2_9bb0, { 1, 0, 2 }
  uselistorder i32 %v1_9ba8, { 1, 0, 2 }
  uselistorder i32 %v1_9b3c, { 0, 2, 1 }
  uselistorder i32 %v0_9b3c, { 0, 2, 1 }
  uselistorder i32 %v2_9ab0, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_9a90, { 1, 0 }
  uselistorder i8 %v4_9a88, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9a90, { 1, 0, 3, 2 }
  uselistorder i1 %v7_9a74, { 1, 0 }
  uselistorder i32 %v1_9a64, { 1, 0, 2 }
  uselistorder i1 %v7_9a60, { 1, 0 }
  uselistorder i32 %v0_9a20, { 2, 0, 1, 3 }
  uselistorder i32 %v3_99e4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_99c8, { 1, 0, 2 }
  uselistorder i32 %v4_99c0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_98d8, { 1, 0 }
  uselistorder i32 %v0_989c, { 1, 0 }
  uselistorder i32 %v0_9d28, { 1, 0 }
  uselistorder i1 %v7_9858, { 1, 0 }
  uselistorder i32 %v0_9840, { 1, 0 }
  uselistorder i32 %v2_9834, { 1, 0, 2 }
  uselistorder i32 %v1_9800, { 1, 0 }
  uselistorder i32 %v0_97e8, { 1, 0, 3, 2 }
  uselistorder i1 %v7_9798, { 1, 0 }
  uselistorder i32 %v5_9794, { 1, 5, 4, 2, 3, 6, 0, 7, 8 }
  uselistorder i32 %v2_977c.v4_9764, { 1, 0, 2 }
  uselistorder i1 %v7_9740, { 1, 0 }
  uselistorder i32 %v1_9668, { 1, 0, 2 }
  uselistorder i32 %v1_9660, { 1, 0 }
  uselistorder i1 %v7_9648, { 1, 0 }
  uselistorder i32 %v5_9644, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_962c.v4_9614, { 1, 0, 2 }
  uselistorder i1 %v7_95f4, { 1, 0 }
  uselistorder i32 %v0_9538, { 1, 0 }
  uselistorder i32 %v0_9520, { 1, 0 }
  uselistorder i32 %v0_9524, { 1, 0 }
  uselistorder i32 %v1_94fc, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_94c8, { 1, 0 }
  uselistorder i1 %v7_9490, { 0, 2, 1 }
  uselistorder i32 %v1_94b4, { 1, 0 }
  uselistorder i32 %v3_94ac, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v0_94a0, { 1, 0 }
  uselistorder i1 %v7_9414, { 1, 0 }
  uselistorder i32 %v5_9410, { 1, 5, 3, 4, 2, 0, 6, 7 }
  uselistorder i32 %v2_93f8, { 1, 0, 2 }
  uselistorder i32 %v2_93f4, { 1, 0, 2 }
  uselistorder i32 %v1_93e0, { 0, 2, 1 }
  uselistorder i32 %v4_93d8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_93a8, { 1, 0 }
  uselistorder i1 %v7_9340, { 1, 0 }
  uselistorder i32 %v5_933c, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9324.v4_930c, { 1, 0, 2 }
  uselistorder i1 %v7_92dc, { 1, 0 }
  uselistorder i1 %v7_9268, { 1, 0 }
  uselistorder i32 %v5_9264, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_924c.v4_9234, { 1, 0, 2 }
  uselistorder i1 %v7_9210, { 1, 0 }
  uselistorder i1 %v7_9190, { 1, 0 }
  uselistorder i32 %v5_918c, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9174.v4_915c, { 1, 0, 2 }
  uselistorder i1 %v7_913c, { 1, 0 }
  uselistorder i1 %v7_9110, { 1, 0 }
  uselistorder i1 %v7_90e8, { 1, 0 }
  uselistorder i32 %v0_90a4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9074, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_900c, { 1, 0 }
  uselistorder i32 %v2_9000, { 1, 0 }
  uselistorder i32 %v1_9000, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8ff4, { 1, 0 }
  uselistorder i32 %v3_8fd8, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_8fb8, { 1, 0 }
  uselistorder i32 %v2_8fac, { 1, 0 }
  uselistorder i32 %v1_8fac, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8fa0, { 1, 0 }
  uselistorder i32 %v3_8f84, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_8f40, { 1, 0 }
  uselistorder i32 %v5_8f1c, { 1, 2, 3, 0 }
  uselistorder i1 %v7_8f04, { 1, 0 }
  uselistorder i32 %v3_8ee8, { 1, 0 }
  uselistorder i32 %v0_8ea4, { 1, 0 }
  uselistorder i32 %v3_8e70, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_8e70, { 1, 0 }
  uselistorder i32 %v0_8e70, { 1, 0 }
  uselistorder i32 %v3_8e58, { 1, 0, 2 }
  uselistorder i32 %v0_8e4c, { 1, 2, 0 }
  uselistorder i32 %storemerge46, { 1, 0 }
  uselistorder i1 %v7_8dc8, { 1, 0 }
  uselistorder i32 %v4_8dbc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8d8c, { 1, 0 }
  uselistorder i32 %v2_8d80, { 1, 0 }
  uselistorder i32 %v2_8d74, { 1, 0 }
  uselistorder i32 %v1_8d74, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8d68, { 1, 0 }
  uselistorder i32 %v3_8d4c, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_8cc8, { 0, 2, 1 }
  uselistorder i32 %v2_8ca0, { 1, 0 }
  uselistorder i32 %v1_8ca0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8ca0, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_8c8c, { 1, 0 }
  uselistorder i32 %v3_8c6c, { 1, 0, 2 }
  uselistorder i32 %v1_8bd0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8a74, { 1, 0 }
  uselistorder i32 %v3_8854, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8800, { 2, 1, 0, 3 }
  uselistorder i32 %v3_87fc, { 1, 0 }
  uselistorder i32 %v3_87f0, { 2, 0, 1 }
  uselistorder i1 %v7_87dc, { 1, 0 }
  uselistorder i32 %v3_87d4, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_87ac, { 1, 0 }
  uselistorder i1 %v7_87a4, { 1, 0 }
  uselistorder i32 %v3_8788, { 1, 0 }
  uselistorder i32 %v1_8768, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8768, { 0, 2, 1 }
  uselistorder i32 %v2_8764, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8750, { 1, 0, 2 }
  uselistorder i32 %v1_8710, { 1, 0 }
  uselistorder i32 %v2_86f0, { 1, 0 }
  uselistorder i32 %v1_86f0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_86e4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_86f0, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_86d4, { 1, 0 }
  uselistorder i32 %v3_86c8, { 1, 0, 2 }
  uselistorder i1 %v7_8624, { 1, 0 }
  uselistorder i32 %v3_8620, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_85fc, { 1, 0 }
  uselistorder i32 %v4_85d4, { 2, 1, 0 }
  uselistorder i8 %v3_85d4, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_85d4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8878, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_859c, { 1, 0 }
  uselistorder i32 %v1_859c, { 1, 0 }
  uselistorder i1 %v7_8594, { 1, 0 }
  uselistorder i1 %v7_858c, { 1, 0 }
  uselistorder i1 %v7_8584, { 1, 0 }
  uselistorder i32 %v1_8584, { 1, 0 }
  uselistorder i1 %v7_857c, { 1, 0 }
  uselistorder i1 %v7_8574, { 1, 0 }
  uselistorder i32 %v1_8558, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_84f8, { 2, 1, 0, 3, 5, 4, 6 }
  uselistorder i8* %v1_88b8, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_86d8, { 0, 15, 1, 2, 16, 3, 17, 4, 18, 5, 19, 6, 20, 7, 21, 8, 22, 23, 9, 24, 10, 13, 11, 14, 12, 25 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %v2_84b0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_84a4, { 1, 0, 2 }
  uselistorder i32 %v0_8498, { 1, 0 }
  uselistorder i32 %v0_8484, { 1, 0, 2 }
  uselistorder i32 %v2_83f4, { 1, 0 }
  uselistorder i32 %v5_83f0, { 1, 0 }
  uselistorder i32 %v2_83b0, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_839c, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8390, { 0, 1, 3, 2 }
  uselistorder i1 %v2_8320, { 1, 0, 2 }
  uselistorder i32* %v11_82f4, { 1, 0, 2 }
  uselistorder i32 %v10_82f0, { 23, 22, 21, 13, 12, 19, 18, 17, 20, 16, 15, 30, 29, 28, 31, 27, 26, 14, 25, 24, 11, 10, 9, 34, 33, 32, 40, 39, 38, 36, 37, 35, 45, 44, 43, 42, 41, 8, 7, 6, 5, 4, 3, 2, 1, 0, 46, 47 }
  uselistorder i32 %v2_82e8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82d8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82c8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_82a0, { 1, 0, 2 }
  uselistorder i8* %v3_829c, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9, 10, 11, 12 }
  uselistorder i32 %v3_828c, { 1, 0, 2 }
  uselistorder i32 %v2_8278, { 0, 29, 37, 36, 39, 38, 1, 32, 2, 33, 3, 34, 35, 40, 4, 28, 5, 6, 30, 31, 41, 7, 26, 8, 27, 9, 42, 10, 11, 24, 25, 43, 12, 21, 13, 22, 23, 44, 14, 15, 19, 20, 45, 46, 47, 16, 48, 50, 49, 52, 51, 54, 53, 56, 55, 18, 17, 57 }
  uselistorder i32 %v6_81f8, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 43, 41, 42 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 11, 10, 12, 3, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 74, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 159, 160, 161, 162, 163, 164, 165, 166, 139, 140, 141, 142, 143, 144, 145, 146, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 106, 107, 108, 110, 111, 112, 116, 117, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 126, 127, 130, 129, 1, 132, 133, 131, 2, 134, 135, 136, 137, 138, 156, 157, 158, 147, 148, 149, 150, 151, 152, 153, 154, 155, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 91, 92, 93, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 73, 76, 77, 79, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 1, 89, 90, 103, 104, 105, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 62, 26, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 165, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 147, 148, 149, 150, 151, 152, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 1, 141, 142, 143, 144, 145, 146, 161, 162, 153, 154, 155, 156, 157, 158, 160, 159, 0 }
  uselistorder i32* %r0.global-to-local, { 21, 20, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 41, 33, 32, 34, 99, 42, 105, 35, 77, 52, 43, 45, 44, 46, 48, 47, 50, 49, 53, 51, 54, 56, 55, 57, 59, 58, 61, 60, 65, 62, 63, 64, 67, 66, 68, 69, 71, 70, 72, 73, 74, 76, 75, 79, 78, 80, 82, 81, 83, 86, 84, 85, 88, 87, 91, 89, 90, 93, 92, 95, 94, 97, 96, 98, 100, 101, 103, 102, 104, 107, 106, 109, 108, 110, 111, 112, 184, 114, 113, 116, 115, 117, 119, 118, 120, 121, 122, 124, 123, 126, 125, 127, 129, 128, 130, 131, 132, 134, 133, 136, 135, 137, 140, 138, 139, 142, 141, 144, 143, 145, 147, 146, 148, 149, 150, 151, 152, 153, 154, 156, 155, 36, 157, 159, 158, 161, 160, 163, 162, 166, 164, 165, 168, 167, 169, 171, 170, 172, 175, 173, 174, 177, 176, 179, 178, 180, 182, 181, 183, 319, 318, 320, 321, 322, 324, 323, 326, 325, 327, 329, 328, 330, 332, 331, 333, 334, 335, 17, 336, 338, 337, 339, 341, 340, 342, 344, 343, 345, 18, 346, 347, 283, 285, 284, 8, 7, 286, 287, 19, 288, 4, 185, 186, 187, 189, 188, 190, 192, 191, 194, 193, 195, 197, 196, 199, 198, 200, 202, 201, 203, 204, 205, 5, 206, 3, 207, 2, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 263, 265, 266, 1, 267, 6, 268, 16, 270, 269, 40, 272, 271, 275, 273, 274, 13, 14, 276, 277, 15, 278, 12, 11, 279, 280, 10, 281, 282, 9, 39, 315, 38, 316, 317, 37, 289, 291, 290, 292, 293, 294, 296, 295, 297, 298, 300, 299, 302, 301, 304, 303, 306, 305, 308, 307, 309, 310, 311, 312, 313, 314, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 59, 51, 52, 53, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0, 50, 58, 54, 55, 56, 57 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 129, 130, 131, 132, 133, 68, 69, 70, 71, 72, 73, 81, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 99, 101, 102, 107, 109, 108, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 123, 124, 116, 117, 118, 119, 120, 121, 122, 125, 0, 126, 127, 128, 142, 143, 134, 135, 136, 137, 138, 139, 140, 141 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 135, 136, 137, 138, 139, 73, 74, 75, 76, 77, 78, 85, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 113, 112, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 128, 129, 121, 122, 123, 124, 125, 126, 127, 130, 0, 131, 132, 133, 134, 149, 150, 151, 140, 141, 142, 143, 144, 145, 146, 147, 148 }
  uselistorder i32 49, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 51, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 50, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a284.49 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a274.45 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a26c.43 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a260.41 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1a268.39 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a240.27 to i32), { 0, 2, 1, 3 }
  uselistorder i32 10240, { 2, 5, 3, 6, 4, 7, 0, 8, 1, 9 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 2, 3, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 10241, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1a248.19 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_9df8, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_9cbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c9c, { 2, 0, 1 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %dec_label_pc_9ac8, { 1, 0 }
  uselistorder label %.thread41, { 1, 0 }
  uselistorder label %dec_label_pc_9a9c, { 2, 0, 1 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %dec_label_pc_9a00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_991c, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_98d0, { 1, 0 }
  uselistorder label %dec_label_pc_98a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_989c, { 1, 0 }
  uselistorder label %bb194, { 1, 0 }
  uselistorder label %bb192, { 1, 0 }
  uselistorder label %bb189, { 1, 0 }
  uselistorder label %dec_label_pc_95bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
  uselistorder label %dec_label_pc_94d0, { 1, 0 }
  uselistorder label %dec_label_pc_94c8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_94a0, { 1, 0 }
  uselistorder label %dec_label_pc_9464, { 1, 0 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %bb183, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_9378, { 2, 1, 0 }
  uselistorder label %bb179, { 1, 0 }
  uselistorder label %.thread25, { 3, 0, 1, 2 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %.thread24, { 3, 0, 1, 2 }
  uselistorder label %bb173, { 1, 0 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_90ac, { 1, 0 }
  uselistorder label %dec_label_pc_8f64, { 1, 0 }
  uselistorder label %dec_label_pc_8e34, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8e0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d9c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8d40, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8d14, { 1, 0 }
  uselistorder label %dec_label_pc_8ce4, { 1, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %dec_label_pc_8c4c, { 1, 0 }
  uselistorder label %dec_label_pc_8c34, { 1, 0 }
  uselistorder label %dec_label_pc_8bf8, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_8b4c, { 1, 0 }
  uselistorder label %dec_label_pc_8884, { 1, 0, 2 }
  uselistorder label %dec_label_pc_87b4, { 8, 9, 10, 11, 12, 13, 1, 2, 7, 15, 0, 14, 3, 6, 4, 5 }
  uselistorder label %dec_label_pc_877c, { 1, 0 }
  uselistorder label %dec_label_pc_8700, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_85bc, { 5, 3, 4, 0, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_8538.dec_label_pc_8538_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8510.dec_label_pc_8510_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_84f4, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_84f4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8498, { 1, 0 }
  uselistorder label %dec_label_pc_8440, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 1, 0 }
  uselistorder label %dec_label_pc_82b4, { 1, 3, 4, 0, 2 }
}

define i32 @function_9f04(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9f04:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f04 = icmp eq i32 %arg1, 0
  br i1 %v2_9f04, label %dec_label_pc_9f4c, label %dec_label_pc_9f14

dec_label_pc_9f14:                                ; preds = %dec_label_pc_9f04
  %v0_9f14 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f14 = add i32 %v0_9f14, 4
  %v2_9f14 = inttoptr i32 %v1_9f14 to i8*
  %v3_9f14 = load i8, i8* %v2_9f14, align 1
  %v4_9f14 = zext i8 %v3_9f14 to i32
  %v9_9f18 = icmp eq i32 %v4_9f14, %arg3
  br i1 %v9_9f18, label %dec_label_pc_9f58, label %dec_label_pc_9f3c.preheader

dec_label_pc_9f3c.preheader:                      ; preds = %dec_label_pc_9f14
  br label %dec_label_pc_9f3c

dec_label_pc_9f2c:                                ; preds = %dec_label_pc_9f3c
  %v1_9f2c = add i32 %v0_9f34.in, 12
  %v2_9f2c = inttoptr i32 %v1_9f2c to i8*
  %v3_9f2c = load i8, i8* %v2_9f2c, align 1
  %v4_9f2c = zext i8 %v3_9f2c to i32
  %v9_9f30 = icmp eq i32 %v4_9f2c, %arg3
  br i1 %v9_9f30, label %dec_label_pc_9f58, label %dec_label_pc_9f3c

dec_label_pc_9f3c:                                ; preds = %dec_label_pc_9f3c.preheader, %dec_label_pc_9f2c
  %v0_9f34.in = phi i32 [ %v0_9f14, %dec_label_pc_9f3c.preheader ], [ %v0_9f34, %dec_label_pc_9f2c ]
  %v0_9f3c = phi i32 [ 0, %dec_label_pc_9f3c.preheader ], [ %v1_9f3c, %dec_label_pc_9f2c ]
  %v0_9f34 = add i32 %v0_9f34.in, 8
  %v1_9f3c = add i32 %v0_9f3c, 1
  %v9_9f40 = icmp eq i32 %v1_9f3c, %arg1
  store i32 %v0_9f34, i32* %r1.global-to-local, align 4
  br i1 %v9_9f40, label %dec_label_pc_9f4c, label %dec_label_pc_9f2c

dec_label_pc_9f4c:                                ; preds = %dec_label_pc_9f3c, %dec_label_pc_9f04, %dec_label_pc_9f58
  %v0_9f4c = phi i32 [ %arg4, %dec_label_pc_9f04 ], [ %v2_9f58, %dec_label_pc_9f58 ], [ %arg4, %dec_label_pc_9f3c ]
  ret i32 %v0_9f4c

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9f2c, %dec_label_pc_9f14
  %v0_9f58 = phi i32 [ %v0_9f14, %dec_label_pc_9f14 ], [ %v0_9f34, %dec_label_pc_9f2c ]
  %v1_9f58 = inttoptr i32 %v0_9f58 to i32*
  %v2_9f58 = load i32, i32* %v1_9f58, align 4
  br label %dec_label_pc_9f4c

; uselistorder directives
  uselistorder i32 %v1_9f3c, { 1, 0 }
  uselistorder i32 %v0_9f34, { 1, 0, 2 }
  uselistorder i32 %v0_9f34.in, { 1, 0 }
  uselistorder i32 %v0_9f14, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f3c, { 1, 0 }
}

define i32 @function_9f60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_9f60:
  %stack_var_-32 = alloca i32, align 4
  %v3_9f60 = load i32, i32* @r4, align 4
  store i32 %v3_9f60, i32* %stack_var_-32, align 4
  %v6_9f60 = load i32, i32* @r5, align 4
  %v9_9f60 = load i32, i32* @r6, align 4
  %v12_9f60 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  %v0_9f78 = call i32 @function_15714()
  %v7_9f7c = icmp eq i32 %v0_9f78, -1
  %tmp23 = icmp slt i32 %v0_9f78, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_9f60
  br label %dec_label_pc_9f9c

bb24:                                             ; preds = %dec_label_pc_9f60
  %. = zext i1 %v7_9f7c to i32
  store i32 %., i32* @r5, align 4
  %v2_9f94 = icmp eq i1 %v7_9f7c, false
  br i1 %v2_9f94, label %dec_label_pc_9fa4, label %dec_label_pc_9f9c

dec_label_pc_9f9c:                                ; preds = %.thread2, %bb24
  %v2_9f9c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_9f9c, i32* @r4, align 4
  store i32 %v6_9f60, i32* @r5, align 4
  store i32 %v9_9f60, i32* @r6, align 4
  store i32 %v12_9f60, i32* @r7, align 4
  ret i32 %v0_9f78

dec_label_pc_9fa4:                                ; preds = %bb24
  %v0_9fa4 = call i32 @function_15714()
  %v7_9fa8 = icmp eq i32 %v0_9fa4, -1
  store i32 %v0_9fa4, i32* @r4, align 4
  br i1 %v7_9fa8, label %dec_label_pc_9fd8, label %dec_label_pc_9fb4

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9fa4
  %v2_9fb4 = icmp eq i32 %v0_9fa4, 0
  br i1 %v2_9fb4, label %dec_label_pc_9fbc, label %dec_label_pc_9fe0

dec_label_pc_9fbc:                                ; preds = %dec_label_pc_9fb4
  %v0_9fbc = load i32, i32* @r6, align 4
  %v1_9fc0 = call i32 @function_166d4(i32 %v0_9fbc)
  store i32 %v1_9fc0, i32* @r0, align 4
  %v0_9fc4 = call i32 @function_16650()
  store i32 %v0_9fc4, i32* @r0, align 4
  %v2_9fcc = call i32 @function_158a0(i32 %v0_9fc4, i32 9)
  %v0_9fd0 = load i32, i32* @r4, align 4
  %v1_9fd4 = call i32 @function_139ac(i32 %v0_9fd0)
  br label %dec_label_pc_9fd8

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9fbc
  %v0_9fd8 = load i32, i32* @r5, align 4
  %v1_9fdc = call i32 @function_139ac(i32 %v0_9fd8)
  br label %dec_label_pc_9fe0

dec_label_pc_9fe0:                                ; preds = %dec_label_pc_9fb4, %dec_label_pc_9fd8
  %v2_9fe4 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_9fe4 = zext i8 %v2_9fe4 to i32
  %v2_9fe8 = icmp eq i8 %v2_9fe4, 0
  br i1 %v2_9fe8, label %dec_label_pc_a02c, label %dec_label_pc_9ff0

dec_label_pc_9ff0:                                ; preds = %dec_label_pc_9fe0
  %v2_9ff4 = load i32, i32* @global_var_23078.56, align 4
  %v1_9ff8 = inttoptr i32 %v2_9ff4 to i32*
  %v2_9ff8 = load i32, i32* %v1_9ff8, align 4
  %v1_9ffc = add i32 %v2_9ff8, 4
  %v2_9ffc = inttoptr i32 %v1_9ffc to i8*
  %v3_9ffc = load i8, i8* %v2_9ffc, align 1
  %v4_9ffc = zext i8 %v3_9ffc to i32
  %v1_a000 = load i32, i32* @r7, align 4
  %v9_a000 = icmp eq i32 %v4_9ffc, %v1_a000
  br i1 %v9_a000, label %dec_label_pc_a034, label %dec_label_pc_a020.preheader

dec_label_pc_a020.preheader:                      ; preds = %dec_label_pc_9ff0
  %v1_a004 = load i32, i32* @r5, align 4
  br label %dec_label_pc_a020

dec_label_pc_a010:                                ; preds = %dec_label_pc_a020
  %v4_a010 = mul i32 %v1_a020, 4
  %v5_a010 = add i32 %v4_a010, %v2_9ff4
  %v6_a010 = inttoptr i32 %v5_a010 to i32*
  %v7_a010 = load i32, i32* %v6_a010, align 4
  %v1_a014 = add i32 %v7_a010, 4
  %v2_a014 = inttoptr i32 %v1_a014 to i8*
  %v3_a014 = load i8, i8* %v2_a014, align 1
  %v4_a014 = zext i8 %v3_a014 to i32
  %v9_a018 = icmp eq i32 %v4_a014, %v1_a000
  br i1 %v9_a018, label %dec_label_pc_a034, label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_a020.preheader, %dec_label_pc_a010
  %v0_a020 = phi i32 [ %v1_a004, %dec_label_pc_a020.preheader ], [ %v1_a020, %dec_label_pc_a010 ]
  %v1_a020 = add i32 %v0_a020, 1
  %v9_a024 = icmp eq i32 %v1_a020, %v3_9fe4
  br i1 %v9_a024, label %dec_label_pc_a02c, label %dec_label_pc_a010

dec_label_pc_a02c:                                ; preds = %dec_label_pc_a020, %dec_label_pc_9fe0, %dec_label_pc_a034
  %v1_a030 = call i32 @function_139ac(i32 0)
  %v0_a044.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_a034

dec_label_pc_a034:                                ; preds = %dec_label_pc_a010, %dec_label_pc_9ff0, %dec_label_pc_a02c
  %v0_a044 = phi i32 [ %v2_9ff8, %dec_label_pc_9ff0 ], [ %v0_a044.pre, %dec_label_pc_a02c ], [ %v7_a010, %dec_label_pc_a010 ]
  %v1_a044 = inttoptr i32 %v0_a044 to i32*
  %v2_a044 = load i32, i32* %v1_a044, align 4
  call void @__pseudo_branch(i32 %v2_a044)
  br label %dec_label_pc_a02c

; uselistorder directives
  uselistorder i32 %v1_a020, { 2, 0, 1 }
  uselistorder i32 %v0_9fa4, { 1, 2, 0 }
  uselistorder i1 %v7_9f7c, { 1, 0 }
  uselistorder i32 %v0_9f78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a034, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a02c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a020, { 1, 0 }
  uselistorder label %dec_label_pc_9fe0, { 1, 0 }
  uselistorder label %dec_label_pc_9fd8, { 1, 0 }
  uselistorder label %dec_label_pc_9f9c, { 1, 0 }
}

define i32 @function_a05c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a05c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_a060 = icmp ugt i32 %arg2, 2
  %v7_a060 = icmp eq i32 %arg2, 3
  store i1 %v7_a060, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_a06c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a06c, i32* @r5, align 4
  %v2_a070 = xor i1 %v7_a060, true
  %v3_a070 = and i1 %v2_a060, %v2_a070
  br i1 %v3_a070, label %dec_label_pc_a080, label %dec_label_pc_a074

dec_label_pc_a074:                                ; preds = %dec_label_pc_a0b0, %.dec_label_pc_a074_crit_edge, %dec_label_pc_a0a4, %dec_label_pc_a094, %dec_label_pc_a080, %dec_label_pc_a05c, %dec_label_pc_a25c
  %v1_a07c = phi i32 [ %v1_a07c.pre, %.dec_label_pc_a074_crit_edge ], [ %v1_a084, %dec_label_pc_a0b0 ], [ %v1_a084, %dec_label_pc_a0a4 ], [ %v1_a084, %dec_label_pc_a094 ], [ %v1_a084, %dec_label_pc_a080 ], [ %v0_a06c, %dec_label_pc_a05c ], [ %v1_a260, %dec_label_pc_a25c ]
  ret i32 %v1_a07c

dec_label_pc_a080:                                ; preds = %dec_label_pc_a05c
  %v1_a080 = inttoptr i32 %v0_a06c to i32*
  %v2_a080 = load i32, i32* %v1_a080, align 4
  store i32 %v2_a080, i32* %r0.global-to-local, align 4
  %v1_a084 = call i32 @function_15498(i32 %v2_a080)
  store i32 %v1_a084, i32* %r0.global-to-local, align 4
  %v0_a088 = load i32, i32* @r4, align 4
  %v7_a088 = icmp eq i32 %v0_a088, 4
  store i1 %v7_a088, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a084, i32* @fp, align 4
  br i1 %v7_a088, label %dec_label_pc_a074, label %dec_label_pc_a094

dec_label_pc_a094:                                ; preds = %dec_label_pc_a080
  %v0_a094 = load i32, i32* @r5, align 4
  %v1_a094 = add i32 %v0_a094, 4
  %v2_a094 = inttoptr i32 %v1_a094 to i8*
  %v3_a094 = load i8, i8* %v2_a094, align 1
  %v4_a094 = zext i8 %v3_a094 to i32
  %v7_a098 = icmp eq i32 %v0_a088, 5
  store i1 %v7_a098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a098, label %dec_label_pc_a074, label %dec_label_pc_a0a4

dec_label_pc_a0a4:                                ; preds = %dec_label_pc_a094
  %v1_a0a4 = add i32 %v0_a094, 5
  %v2_a0a4 = inttoptr i32 %v1_a0a4 to i8*
  %v3_a0a4 = load i8, i8* %v2_a0a4, align 1
  %v4_a0a4 = zext i8 %v3_a0a4 to i32
  store i32 %v4_a0a4, i32* @sb, align 4
  %v2_a0a8 = icmp eq i8 %v3_a0a4, 0
  store i1 %v2_a0a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a0a8, label %dec_label_pc_a074, label %dec_label_pc_a0b0

dec_label_pc_a0b0:                                ; preds = %dec_label_pc_a0a4
  %v2_a0b4 = mul nuw nsw i32 %v4_a0a4, 5
  store i32 %v2_a0b4, i32* @r7, align 4
  %v1_a0b8 = add i32 %v0_a088, -6
  store i32 %v1_a0b8, i32* %r3.global-to-local, align 4
  %v3_a0bc = icmp ult i32 %v1_a0b8, %v2_a0b4
  %v9_a0bc = icmp eq i32 %v1_a0b8, %v2_a0b4
  store i1 %v9_a0bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a0bc, label %dec_label_pc_a074, label %dec_label_pc_a0c4

dec_label_pc_a0c4:                                ; preds = %dec_label_pc_a0b0
  store i32 %v4_a0a4, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_a0b8, i32* @r6, align 4
  %v2_a0d0 = call i32 @function_13cd4(i32 %v4_a0a4, i32 24)
  store i32 %v2_a0d0, i32* %ip.global-to-local, align 4
  %v0_a0dc = load i32, i32* @r7, align 4
  %v1_a0dc = load i32, i32* @r4, align 4
  %v2_a0dc = sub i32 %v1_a0dc, %v0_a0dc
  store i32 %v2_a0dc, i32* @r7, align 4
  %v0_a0e0 = load i32, i32* @r5, align 4
  %v1_a0e0 = add i32 %v0_a0e0, 11
  store i32 %v1_a0e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0e4

dec_label_pc_a0e4:                                ; preds = %dec_label_pc_a0e4, %dec_label_pc_a0c4
  %v1_a0e8 = phi i32 [ %v1_a114, %dec_label_pc_a0e4 ], [ %v2_a0d0, %dec_label_pc_a0c4 ]
  %v0_a0e4 = phi i32 [ %v1_a110, %dec_label_pc_a0e4 ], [ %v1_a0e0, %dec_label_pc_a0c4 ]
  %v1_a0e4 = add i32 %v0_a0e4, -5
  %v2_a0e4 = inttoptr i32 %v1_a0e4 to i32*
  %v3_a0e4 = load i32, i32* %v2_a0e4, align 4
  store i32 %v3_a0e4, i32* %r1.global-to-local, align 4
  %v2_a0e8 = add i32 %v1_a0e8, 16
  %v3_a0e8 = inttoptr i32 %v2_a0e8 to i32*
  store i32 %v3_a0e4, i32* %v3_a0e8, align 4
  %v0_a0ec = load i32, i32* @r7, align 4
  %v1_a0ec = add i32 %v0_a0ec, -6
  store i32 %v1_a0ec, i32* %r3.global-to-local, align 4
  %v0_a0f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_a0f0 = add i32 %v0_a0f0, -1
  %v2_a0f0 = inttoptr i32 %v1_a0f0 to i8*
  %v3_a0f0 = load i8, i8* %v2_a0f0, align 1
  %v4_a0f0 = zext i8 %v3_a0f0 to i32
  store i32 %v4_a0f0, i32* @r2, align 4
  %v0_a0f4 = load i32, i32* @r6, align 4
  %v1_a0f4 = add i32 %v0_a0f4, -5
  store i32 %v1_a0f4, i32* @r6, align 4
  %v9_a0f8 = icmp eq i32 %v1_a0f4, %v1_a0ec
  store i1 %v9_a0f8, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_a0f0, i32* @r4, align 4
  %v2_a104 = load i32, i32* %ip.global-to-local, align 4
  %v3_a104 = add i32 %v2_a104, 20
  %v4_a104 = inttoptr i32 %v3_a104 to i8*
  store i8 %v3_a0f0, i8* %v4_a104, align 1
  %v0_a108 = load i32, i32* %r1.global-to-local, align 4
  %v1_a108 = load i32, i32* %ip.global-to-local, align 4
  %v2_a108 = add i32 %v1_a108, 4
  %v3_a108 = inttoptr i32 %v2_a108 to i32*
  store i32 %v0_a108, i32* %v3_a108, align 4
  %v0_a10c = load i32, i32* %r3.global-to-local, align 4
  %v1_a10c = trunc i32 %v0_a10c to i16
  %v2_a10c = load i32, i32* %ip.global-to-local, align 4
  %v3_a10c = inttoptr i32 %v2_a10c to i16*
  store i16 %v1_a10c, i16* %v3_a10c, align 2
  %v0_a110 = load i32, i32* %r0.global-to-local, align 4
  %v1_a110 = add i32 %v0_a110, 5
  store i32 %v1_a110, i32* %r0.global-to-local, align 4
  %v0_a114 = load i32, i32* %ip.global-to-local, align 4
  %v1_a114 = add i32 %v0_a114, 24
  store i32 %v1_a114, i32* %ip.global-to-local, align 4
  %v0_a118 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a118, label %dec_label_pc_a11c, label %dec_label_pc_a0e4

dec_label_pc_a11c:                                ; preds = %dec_label_pc_a0e4
  %v0_a11c = load i32, i32* @r6, align 4
  %v2_a11c = icmp eq i32 %v0_a11c, 0
  store i1 %v2_a11c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a11c, label %dec_label_pc_a220, label %dec_label_pc_a124

dec_label_pc_a124:                                ; preds = %dec_label_pc_a11c
  %v0_a124 = load i32, i32* @r4, align 4
  %v1_a124 = inttoptr i32 %v0_a124 to i8*
  %v2_a124 = load i8, i8* %v1_a124, align 1
  %v3_a124 = zext i8 %v2_a124 to i32
  store i32 %v3_a124, i32* @r5, align 4
  %v2_a128 = icmp eq i8 %v2_a124, 0
  store i1 %v2_a128, i1* %cpsr_z.global-to-local, align 1
  %v0_a12c = load i32, i32* @r7, align 4
  %v1_a12c = add i32 %v0_a12c, -7
  store i32 %v1_a12c, i32* @r8, align 4
  br i1 %v2_a128, label %bb, label %dec_label_pc_a138

bb:                                               ; preds = %dec_label_pc_a124
  store i32 %v3_a124, i32* @r6, align 4
  br label %dec_label_pc_a1fc

dec_label_pc_a138:                                ; preds = %dec_label_pc_a124
  store i32 %v3_a124, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a140 = call i32 @function_13cd4(i32 %v3_a124, i32 8)
  store i32 %v2_a140, i32* %r0.global-to-local, align 4
  %v0_a144 = load i32, i32* @r8, align 4
  %v2_a144 = icmp eq i32 %v0_a144, 0
  store i1 %v2_a144, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a140, i32* @r6, align 4
  br i1 %v2_a144, label %dec_label_pc_a220, label %dec_label_pc_a150

dec_label_pc_a150:                                ; preds = %dec_label_pc_a138
  %v0_a150 = load i32, i32* @r4, align 4
  %v1_a150 = add i32 %v0_a150, 1
  %v2_a150 = inttoptr i32 %v1_a150 to i8*
  %v3_a150 = load i8, i8* %v2_a150, align 1
  %v0_a154 = load i32, i32* @r7, align 4
  %v7_a154 = icmp eq i32 %v0_a154, 8
  store i1 %v7_a154, i1* %cpsr_z.global-to-local, align 1
  %v3_a158 = add i32 %v2_a140, 4
  %v4_a158 = inttoptr i32 %v3_a158 to i8*
  store i8 %v3_a150, i8* %v4_a158, align 1
  %v0_a15c = load i32, i32* @r4, align 4
  %v1_a15c = add i32 %v0_a15c, 1
  store i32 %v1_a15c, i32* %r3.global-to-local, align 4
  %v0_a160 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a160, label %dec_label_pc_a220, label %dec_label_pc_a164

dec_label_pc_a164:                                ; preds = %dec_label_pc_a150
  %v1_a164 = add i32 %v0_a15c, 2
  %v2_a164 = inttoptr i32 %v1_a164 to i8*
  %v3_a164 = load i8, i8* %v2_a164, align 1
  %v4_a164 = zext i8 %v3_a164 to i32
  store i32 %v4_a164, i32* @r4, align 4
  %v0_a168 = load i32, i32* @r7, align 4
  %v1_a168 = add i32 %v0_a168, -9
  store i32 %v1_a168, i32* @r8, align 4
  %v9_a16c = icmp eq i32 %v1_a168, %v4_a164
  store i1 %v9_a16c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a164, i32* %r1.global-to-local, align 4
  %v5_a174 = icmp slt i32 %v1_a168, %v4_a164
  br i1 %v5_a174, label %dec_label_pc_a220, label %bb35

bb35:                                             ; preds = %dec_label_pc_a164
  %v7_a1787 = add i32 %v0_a15c, 3
  store i32 %v7_a1787, i32* @r7, align 4
  %v6_a17c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_a17c, i32* @sl, align 4
  br label %dec_label_pc_a1c0

dec_label_pc_a18c:                                ; preds = %dec_label_pc_a1c0
  %v0_a18c = load i32, i32* @r8, align 4
  %v1_a18c = load i32, i32* @r4, align 4
  %v2_a18c = sub i32 %v0_a18c, %v1_a18c
  store i32 %v2_a18c, i32* @r2, align 4
  %v9_a18c = icmp eq i32 %v0_a18c, %v1_a18c
  store i1 %v9_a18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a18c, label %dec_label_pc_a220, label %dec_label_pc_a194

dec_label_pc_a194:                                ; preds = %dec_label_pc_a18c
  %v1_a194 = load i32, i32* @r7, align 4
  %v2_a194 = add i32 %v1_a194, %v1_a18c
  %v3_a194 = inttoptr i32 %v2_a194 to i8*
  %v4_a194 = load i8, i8* %v3_a194, align 1
  store i32 %v2_a194, i32* %r0.global-to-local, align 4
  %v1_a19c = add i32 %v2_a18c, -1
  store i32 %v1_a19c, i32* @r2, align 4
  %v7_a19c = icmp eq i32 %v2_a18c, 1
  store i1 %v7_a19c, i1* %cpsr_z.global-to-local, align 1
  %v3_a1a0 = add i32 %v2_a1f4, 4
  %v4_a1a0 = inttoptr i32 %v3_a1a0 to i8*
  store i8 %v4_a194, i8* %v4_a1a0, align 1
  %v0_a1a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_a1a4 = add i32 %v0_a1a4, 1
  store i32 %v1_a1a4, i32* %r3.global-to-local, align 4
  %v0_a1a8 = load i32, i32* @r2, align 4
  %v1_a1a8 = add i32 %v0_a1a8, -1
  store i32 %v1_a1a8, i32* @r8, align 4
  %v1_a1ac = add i32 %v0_a1a4, 2
  store i32 %v1_a1ac, i32* @r7, align 4
  %v0_a1b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1b0, label %dec_label_pc_a220, label %dec_label_pc_a1b4

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a194
  %v2_a1b4 = inttoptr i32 %v1_a1a4 to i8*
  %v3_a1b4 = load i8, i8* %v2_a1b4, align 1
  %v4_a1b4 = zext i8 %v3_a1b4 to i32
  store i32 %v4_a1b4, i32* @r4, align 4
  %v2_a1b8 = sub i32 %v1_a1a8, %v4_a1b4
  %tmp36 = sub i32 0, %v2_a1b8
  %v6_a1b8 = and i32 %v1_a1a8, %tmp36
  %v7_a1b8 = icmp slt i32 %v6_a1b8, 0
  %v8_a1b8 = icmp slt i32 %v2_a1b8, 0
  %v9_a1b8 = icmp eq i32 %v1_a1a8, %v4_a1b4
  store i1 %v9_a1b8, i1* %cpsr_z.global-to-local, align 1
  %v2_a1bc = xor i1 %v8_a1b8, %v7_a1b8
  br i1 %v2_a1bc, label %dec_label_pc_a220, label %dec_label_pc_a1c0

dec_label_pc_a1c0:                                ; preds = %bb35, %dec_label_pc_a1b4
  %v0_a1c4 = phi i32 [ %v4_a164, %bb35 ], [ %v4_a1b4, %dec_label_pc_a1b4 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_a1d4, %dec_label_pc_a1b4 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_a1c4 = add nuw nsw i32 %v0_a1c4, 1
  store i32 %v1_a1c4, i32* %r0.global-to-local, align 4
  %v2_a1c8 = call i32 @function_13cd4(i32 %v1_a1c4, i32 1)
  store i32 %v2_a1c8, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_a1d0 = load i32, i32* @sl, align 4
  %v2_a1d0 = inttoptr i32 %v1_a1d0 to i32*
  store i32 %v2_a1c8, i32* %v2_a1d0, align 4
  %v0_a1d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1d4 = add i32 %v0_a1d4, 1
  store i32 %v1_a1d4, i32* %r3.global-to-local, align 4
  %v0_a1d8 = load i32, i32* @r4, align 4
  %v0_a1dc = load i32, i32* @r7, align 4
  store i32 %v0_a1dc, i32* %r1.global-to-local, align 4
  %v3_a1e4 = call i32 @function_12e5c(i32 %v2_a1c8, i32 %v0_a1dc, i32 %v0_a1d8)
  store i32 %v3_a1e4, i32* %r0.global-to-local, align 4
  %v3_a1ec = mul i32 %v1_a1d4, 8
  store i32 %v3_a1ec, i32* %r3.global-to-local, align 4
  %v1_a1f0 = load i32, i32* @r5, align 4
  %v9_a1f0 = icmp eq i32 %v1_a1d4, %v1_a1f0
  store i1 %v9_a1f0, i1* %cpsr_z.global-to-local, align 1
  %v0_a1f4 = load i32, i32* @r6, align 4
  %v2_a1f4 = add i32 %v0_a1f4, %v3_a1ec
  store i32 %v2_a1f4, i32* @sl, align 4
  br i1 %v9_a1f0, label %dec_label_pc_a1fc, label %dec_label_pc_a18c

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1c0, %bb
  %v0_a1fc = call i32 @function_13994()
  %v2_a204 = inttoptr i32 %v0_a1fc to i32*
  store i32 0, i32* %v2_a204, align 4
  store i32 %v4_a094, i32* %r1.global-to-local, align 4
  %v0_a20c = load i32, i32* @fp, align 4
  store i32 %v0_a20c, i32* %r0.global-to-local, align 4
  %v0_a210 = load i32, i32* @sb, align 4
  store i32 %v2_a0d0, i32* %r3.global-to-local, align 4
  %v2_a218 = load i32, i32* @r5, align 4
  %v5_a218 = load i32, i32* @r6, align 4
  %v6_a21c = trunc i32 %v2_a218 to i8
  %v7_a21c = call i32 @function_9f60(i32 %v0_a20c, i32 %v4_a094, i32 %v0_a210, i32 %v2_a0d0, i8 %v6_a21c, i32 %v5_a218)
  store i32 %v7_a21c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a220

dec_label_pc_a220:                                ; preds = %dec_label_pc_a1b4, %dec_label_pc_a194, %dec_label_pc_a18c, %dec_label_pc_a164, %dec_label_pc_a150, %dec_label_pc_a138, %dec_label_pc_a11c, %dec_label_pc_a1fc
  store i32 %v2_a0d0, i32* %r3.global-to-local, align 4
  %v2_a224 = icmp eq i32 %v2_a0d0, 0
  store i1 %v2_a224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a224, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_a220
  store i32 %v2_a0d0, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_a220, %bb37
  store i32 41520, i32* @lr, align 4
  %v1_a22c = xor i1 %v2_a224, true
  call void @__pseudo_cond_branch(i1 %v1_a22c, i32 ptrtoint (i32* @global_var_14248.58 to i32))
  %v0_a230 = load i32, i32* @r6, align 4
  %v2_a230 = icmp eq i32 %v0_a230, 0
  store i1 %v2_a230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a230, label %.dec_label_pc_a074_crit_edge, label %dec_label_pc_a238

.dec_label_pc_a074_crit_edge:                     ; preds = %bb38
  %v1_a07c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a074

dec_label_pc_a238:                                ; preds = %bb38
  %v0_a238 = load i32, i32* @r5, align 4
  %v2_a238 = icmp eq i32 %v0_a238, 0
  store i1 %v2_a238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a238, label %dec_label_pc_a25c, label %dec_label_pc_a240

dec_label_pc_a240:                                ; preds = %dec_label_pc_a238
  br label %dec_label_pc_a244

dec_label_pc_a244:                                ; preds = %dec_label_pc_a244, %dec_label_pc_a240
  %v0_a24c = phi i32 [ 0, %dec_label_pc_a240 ], [ %v1_a254, %dec_label_pc_a244 ]
  %v0_a244 = phi i32 [ %v0_a230, %dec_label_pc_a240 ], [ %v0_a25c.pre, %dec_label_pc_a244 ]
  %v4_a244 = mul i32 %v0_a24c, 8
  %v5_a244 = add i32 %v4_a244, %v0_a244
  %v6_a244 = inttoptr i32 %v5_a244 to i32*
  %v7_a244 = load i32, i32* %v6_a244, align 4
  store i32 %v7_a244, i32* %r0.global-to-local, align 4
  %v2_a248 = icmp eq i32 %v7_a244, 0
  store i1 %v2_a248, i1* %cpsr_z.global-to-local, align 1
  %v1_a24c = add i32 %v0_a24c, 1
  store i32 %v1_a24c, i32* @r4, align 4
  store i32 41556, i32* @lr, align 4
  %v1_a250 = xor i1 %v2_a248, true
  call void @__pseudo_cond_branch(i1 %v1_a250, i32 ptrtoint (i32* @global_var_14248.58 to i32))
  %v0_a254 = load i32, i32* @r5, align 4
  %v1_a254 = load i32, i32* @r4, align 4
  %v9_a254 = icmp eq i32 %v0_a254, %v1_a254
  store i1 %v9_a254, i1* %cpsr_z.global-to-local, align 1
  %v0_a25c.pre = load i32, i32* @r6, align 4
  br i1 %v9_a254, label %dec_label_pc_a25c, label %dec_label_pc_a244

dec_label_pc_a25c:                                ; preds = %dec_label_pc_a244, %dec_label_pc_a238
  %v0_a25c = phi i32 [ %v0_a230, %dec_label_pc_a238 ], [ %v0_a25c.pre, %dec_label_pc_a244 ]
  store i32 %v0_a25c, i32* %r0.global-to-local, align 4
  %v1_a260 = call i32 @function_14248(i32 %v0_a25c)
  store i32 %v1_a260, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a074

; uselistorder directives
  uselistorder i32 %v1_a260, { 1, 0 }
  uselistorder i32 %v0_a25c, { 1, 0 }
  uselistorder i32 %v1_a254, { 1, 0 }
  uselistorder i1 %v2_a224, { 0, 2, 1 }
  uselistorder i32 %v2_a1f4, { 1, 0 }
  uselistorder i32 %v3_a1ec, { 1, 0 }
  uselistorder i32 %v1_a1d4, { 2, 0, 3, 1 }
  uselistorder i32 %v2_a1b8, { 1, 0 }
  uselistorder i32 %v4_a1b4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_a1a8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_a124, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a114, { 1, 0 }
  uselistorder i32 %v1_a110, { 1, 0 }
  uselistorder i32 %v2_a0d0, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_a0a4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a084, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_a06c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 22, 4, 23, 6, 21, 10, 9, 7, 8, 16, 17, 11, 12, 13, 14, 15, 18, 20, 19, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_a220, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_a1c0, { 1, 0 }
  uselistorder label %dec_label_pc_a074, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @function_a268(i32 %arg1) local_unnamed_addr {
dec_label_pc_a268:
  store i32 ptrtoint (i32* @global_var_2307c.60 to i32), i32* @r4, align 4
  %v2_a270 = load i32, i32* @global_var_2307c.60, align 4
  store i32 %v2_a270, i32* @r0, align 4
  %v2_a274 = icmp eq i32 %v2_a270, 0
  br i1 %v2_a274, label %dec_label_pc_a280, label %dec_label_pc_a308

dec_label_pc_a280:                                ; preds = %dec_label_pc_a268
  %v3_a280 = load i32, i32* @global_var_23080.61, align 4
  store i32 %v3_a280, i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  %v2_a288 = icmp eq i32 %v3_a280, 0
  store i32 0, i32* @global_var_2307c.60, align 4
  br i1 %v2_a288, label %dec_label_pc_a294, label %dec_label_pc_a324

dec_label_pc_a294:                                ; preds = %dec_label_pc_a308.dec_label_pc_a294_crit_edge, %dec_label_pc_a280
  %v0_a29c = phi i32 [ %v0_a29c.pre, %dec_label_pc_a308.dec_label_pc_a294_crit_edge ], [ 0, %dec_label_pc_a280 ]
  %v3_a294 = load i32, i32* @global_var_23084.62, align 4
  store i32 %v3_a294, i32* @r0, align 4
  %v2_a298 = icmp eq i32 %v3_a294, 0
  store i32 %v0_a29c, i32* @global_var_23080.61, align 4
  br i1 %v2_a298, label %dec_label_pc_a2a4, label %dec_label_pc_a33c

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a324
  %v0_a2ac = phi i32 [ %v0_a29c, %dec_label_pc_a294 ], [ %v0_a334, %dec_label_pc_a324 ]
  %v3_a2a4 = load i32, i32* @global_var_23088.63, align 4
  store i32 %v3_a2a4, i32* @r0, align 4
  %v2_a2a8 = icmp eq i32 %v3_a2a4, 0
  store i32 %v0_a2ac, i32* @global_var_23084.62, align 4
  br i1 %v2_a2a8, label %dec_label_pc_a2b4, label %dec_label_pc_a354

dec_label_pc_a2b4:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a33c
  %v0_a2bc = phi i32 [ %v0_a2ac, %dec_label_pc_a2a4 ], [ %v0_a34c, %dec_label_pc_a33c ]
  %v3_a2b4 = load i32, i32* @global_var_2308c.64, align 4
  store i32 %v3_a2b4, i32* @r0, align 4
  %v2_a2b8 = icmp eq i32 %v3_a2b4, 0
  store i32 %v0_a2bc, i32* @global_var_23088.63, align 4
  br i1 %v2_a2b8, label %dec_label_pc_a2c4, label %dec_label_pc_a36c

dec_label_pc_a2c4:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a354
  %v0_a2cc = phi i32 [ %v0_a2bc, %dec_label_pc_a2b4 ], [ %v0_a364, %dec_label_pc_a354 ]
  %v3_a2c4 = load i32, i32* @global_var_23090.65, align 4
  store i32 %v3_a2c4, i32* @r0, align 4
  %v2_a2c8 = icmp eq i32 %v3_a2c4, 0
  store i32 %v0_a2cc, i32* @global_var_2308c.64, align 4
  br i1 %v2_a2c8, label %dec_label_pc_a2d4, label %dec_label_pc_a384

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a36c
  %v0_a2dc = phi i32 [ %v0_a2cc, %dec_label_pc_a2c4 ], [ %v0_a37c, %dec_label_pc_a36c ]
  %v3_a2d4 = load i32, i32* @global_var_23094.66, align 4
  store i32 %v3_a2d4, i32* @r0, align 4
  %v2_a2d8 = icmp eq i32 %v3_a2d4, 0
  store i32 %v0_a2dc, i32* @global_var_23090.65, align 4
  br i1 %v2_a2d8, label %dec_label_pc_a2e4, label %dec_label_pc_a39c

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a384
  %v0_a2ec = phi i32 [ %v0_a2dc, %dec_label_pc_a2d4 ], [ %v0_a394, %dec_label_pc_a384 ]
  %v3_a2e4 = load i32, i32* @global_var_23098.67, align 4
  store i32 %v3_a2e4, i32* @r0, align 4
  %v2_a2e8 = icmp eq i32 %v3_a2e4, 0
  store i32 %v0_a2ec, i32* @global_var_23094.66, align 4
  br i1 %v2_a2e8, label %dec_label_pc_a2f4, label %dec_label_pc_a3b4

dec_label_pc_a2f4:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a39c, %dec_label_pc_a3b4
  %v0_a2f4 = phi i32 [ %v0_a2ec, %dec_label_pc_a2e4 ], [ %v0_a3ac, %dec_label_pc_a39c ], [ %v0_a2f4.pre, %dec_label_pc_a3b4 ]
  store i32 %v0_a2f4, i32* @global_var_23098.67, align 4
  %v0_a2f8 = call i32 @function_10ab0()
  ret i32 %v0_a2f8

dec_label_pc_a308:                                ; preds = %dec_label_pc_a268
  %v2_a30c = call i32 @function_158a0(i32 %v2_a270, i32 9)
  %v3_a310 = load i32, i32* @global_var_23080.61, align 4
  store i32 %v3_a310, i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  %v2_a318 = icmp eq i32 %v3_a310, 0
  %v1_a31c = load i32, i32* @r4, align 4
  %v2_a31c = inttoptr i32 %v1_a31c to i32*
  store i32 0, i32* %v2_a31c, align 4
  br i1 %v2_a318, label %dec_label_pc_a308.dec_label_pc_a294_crit_edge, label %dec_label_pc_a308.dec_label_pc_a324_crit_edge

dec_label_pc_a308.dec_label_pc_a294_crit_edge:    ; preds = %dec_label_pc_a308
  %v0_a29c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a294

dec_label_pc_a308.dec_label_pc_a324_crit_edge:    ; preds = %dec_label_pc_a308
  %v0_a328.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_a324

dec_label_pc_a324:                                ; preds = %dec_label_pc_a308.dec_label_pc_a324_crit_edge, %dec_label_pc_a280
  %v0_a328 = phi i32 [ %v0_a328.pre, %dec_label_pc_a308.dec_label_pc_a324_crit_edge ], [ %v3_a280, %dec_label_pc_a280 ]
  %v2_a328 = call i32 @function_158a0(i32 %v0_a328, i32 9)
  %v3_a32c = load i32, i32* @global_var_23084.62, align 4
  store i32 %v3_a32c, i32* @r0, align 4
  %v2_a330 = icmp eq i32 %v3_a32c, 0
  %v0_a334 = load i32, i32* @r5, align 4
  store i32 %v0_a334, i32* @global_var_23080.61, align 4
  br i1 %v2_a330, label %dec_label_pc_a2a4, label %dec_label_pc_a33c

dec_label_pc_a33c:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a324
  %v0_a340 = phi i32 [ %v3_a294, %dec_label_pc_a294 ], [ %v3_a32c, %dec_label_pc_a324 ]
  %v2_a340 = call i32 @function_158a0(i32 %v0_a340, i32 9)
  %v3_a344 = load i32, i32* @global_var_23088.63, align 4
  store i32 %v3_a344, i32* @r0, align 4
  %v2_a348 = icmp eq i32 %v3_a344, 0
  %v0_a34c = load i32, i32* @r5, align 4
  store i32 %v0_a34c, i32* @global_var_23084.62, align 4
  br i1 %v2_a348, label %dec_label_pc_a2b4, label %dec_label_pc_a354

dec_label_pc_a354:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a33c
  %v0_a358 = phi i32 [ %v3_a2a4, %dec_label_pc_a2a4 ], [ %v3_a344, %dec_label_pc_a33c ]
  %v2_a358 = call i32 @function_158a0(i32 %v0_a358, i32 9)
  %v3_a35c = load i32, i32* @global_var_2308c.64, align 4
  store i32 %v3_a35c, i32* @r0, align 4
  %v2_a360 = icmp eq i32 %v3_a35c, 0
  %v0_a364 = load i32, i32* @r5, align 4
  store i32 %v0_a364, i32* @global_var_23088.63, align 4
  br i1 %v2_a360, label %dec_label_pc_a2c4, label %dec_label_pc_a36c

dec_label_pc_a36c:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a354
  %v0_a370 = phi i32 [ %v3_a2b4, %dec_label_pc_a2b4 ], [ %v3_a35c, %dec_label_pc_a354 ]
  %v2_a370 = call i32 @function_158a0(i32 %v0_a370, i32 9)
  %v3_a374 = load i32, i32* @global_var_23090.65, align 4
  store i32 %v3_a374, i32* @r0, align 4
  %v2_a378 = icmp eq i32 %v3_a374, 0
  %v0_a37c = load i32, i32* @r5, align 4
  store i32 %v0_a37c, i32* @global_var_2308c.64, align 4
  br i1 %v2_a378, label %dec_label_pc_a2d4, label %dec_label_pc_a384

dec_label_pc_a384:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a36c
  %v0_a388 = phi i32 [ %v3_a2c4, %dec_label_pc_a2c4 ], [ %v3_a374, %dec_label_pc_a36c ]
  %v2_a388 = call i32 @function_158a0(i32 %v0_a388, i32 9)
  %v3_a38c = load i32, i32* @global_var_23094.66, align 4
  store i32 %v3_a38c, i32* @r0, align 4
  %v2_a390 = icmp eq i32 %v3_a38c, 0
  %v0_a394 = load i32, i32* @r5, align 4
  store i32 %v0_a394, i32* @global_var_23090.65, align 4
  br i1 %v2_a390, label %dec_label_pc_a2e4, label %dec_label_pc_a39c

dec_label_pc_a39c:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a384
  %v0_a3a0 = phi i32 [ %v3_a2d4, %dec_label_pc_a2d4 ], [ %v3_a38c, %dec_label_pc_a384 ]
  %v2_a3a0 = call i32 @function_158a0(i32 %v0_a3a0, i32 9)
  %v3_a3a4 = load i32, i32* @global_var_23098.67, align 4
  store i32 %v3_a3a4, i32* @r0, align 4
  %v2_a3a8 = icmp eq i32 %v3_a3a4, 0
  %v0_a3ac = load i32, i32* @r5, align 4
  store i32 %v0_a3ac, i32* @global_var_23094.66, align 4
  br i1 %v2_a3a8, label %dec_label_pc_a2f4, label %dec_label_pc_a3b4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a39c
  %v0_a3b8 = phi i32 [ %v3_a2e4, %dec_label_pc_a2e4 ], [ %v3_a3a4, %dec_label_pc_a39c ]
  %v2_a3b8 = call i32 @function_158a0(i32 %v0_a3b8, i32 9)
  %v0_a2f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a2f4

; uselistorder directives
  uselistorder i32 %v0_a3ac, { 1, 0 }
  uselistorder i32 %v0_a394, { 1, 0 }
  uselistorder i32 %v0_a37c, { 1, 0 }
  uselistorder i32 %v0_a364, { 1, 0 }
  uselistorder i32 %v0_a34c, { 1, 0 }
  uselistorder i32 %v0_a334, { 1, 0 }
  uselistorder label %dec_label_pc_a3b4, { 1, 0 }
  uselistorder label %dec_label_pc_a39c, { 1, 0 }
  uselistorder label %dec_label_pc_a384, { 1, 0 }
  uselistorder label %dec_label_pc_a36c, { 1, 0 }
  uselistorder label %dec_label_pc_a354, { 1, 0 }
  uselistorder label %dec_label_pc_a33c, { 1, 0 }
  uselistorder label %dec_label_pc_a2f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a2e4, { 1, 0 }
  uselistorder label %dec_label_pc_a2d4, { 1, 0 }
  uselistorder label %dec_label_pc_a2c4, { 1, 0 }
  uselistorder label %dec_label_pc_a2b4, { 1, 0 }
  uselistorder label %dec_label_pc_a2a4, { 1, 0 }
}

define i32 @function_a3c4(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a3c4:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a3c4 = icmp eq i32 %arg1, 0
  %v3_a3c8 = load i32, i32* @r4, align 4
  store i32 %v3_a3c8, i32* %stack_var_-8, align 4
  %v6_a3c8 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a3c4, label %dec_label_pc_a40c, label %dec_label_pc_a3d4

dec_label_pc_a3d4:                                ; preds = %dec_label_pc_a3c4
  %v0_a3d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a3d4 = add i32 %v0_a3d4, 4
  %v2_a3d4 = inttoptr i32 %v1_a3d4 to i8*
  %v3_a3d4 = load i8, i8* %v2_a3d4, align 1
  %v4_a3d4 = zext i8 %v3_a3d4 to i32
  %v9_a3d8 = icmp eq i32 %v4_a3d4, %arg3
  br i1 %v9_a3d8, label %dec_label_pc_a418, label %dec_label_pc_a3fc.preheader

dec_label_pc_a3fc.preheader:                      ; preds = %dec_label_pc_a3d4
  br label %dec_label_pc_a3fc

dec_label_pc_a3ec:                                ; preds = %dec_label_pc_a3fc
  %v1_a3ec = add i32 %v0_a3f4.in, 12
  %v2_a3ec = inttoptr i32 %v1_a3ec to i8*
  %v3_a3ec = load i8, i8* %v2_a3ec, align 1
  %v4_a3ec = zext i8 %v3_a3ec to i32
  %v9_a3f0 = icmp eq i32 %v4_a3ec, %arg3
  br i1 %v9_a3f0, label %dec_label_pc_a418, label %dec_label_pc_a3fc

dec_label_pc_a3fc:                                ; preds = %dec_label_pc_a3fc.preheader, %dec_label_pc_a3ec
  %v0_a3f4.in = phi i32 [ %v0_a3d4, %dec_label_pc_a3fc.preheader ], [ %v0_a3f4, %dec_label_pc_a3ec ]
  %v0_a3fc = phi i32 [ 0, %dec_label_pc_a3fc.preheader ], [ %v1_a3fc, %dec_label_pc_a3ec ]
  %v0_a3f4 = add i32 %v0_a3f4.in, 8
  %v1_a3fc = add i32 %v0_a3fc, 1
  store i32 %v1_a3fc, i32* @lr, align 4
  %v9_a400 = icmp eq i32 %v1_a3fc, %arg1
  store i32 %v0_a3f4, i32* %r1.global-to-local, align 4
  br i1 %v9_a400, label %dec_label_pc_a40c, label %dec_label_pc_a3ec

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3fc, %dec_label_pc_a418, %dec_label_pc_a3c4, %dec_label_pc_a424
  %v2_a410 = phi i32 [ %v3_a3c8, %dec_label_pc_a418 ], [ %v3_a3c8, %dec_label_pc_a3c4 ], [ %v2_a410.pre, %dec_label_pc_a424 ], [ %v3_a3c8, %dec_label_pc_a3fc ]
  %v0_a40c = phi i32 [ %arg4, %dec_label_pc_a418 ], [ %arg4, %dec_label_pc_a3c4 ], [ %v1_a424, %dec_label_pc_a424 ], [ %arg4, %dec_label_pc_a3fc ]
  store i32 %v2_a410, i32* @r4, align 4
  store i32 %v6_a3c8, i32* @lr, align 4
  ret i32 %v0_a40c

dec_label_pc_a418:                                ; preds = %dec_label_pc_a3ec, %dec_label_pc_a3d4
  %v0_a418 = phi i32 [ %v0_a3d4, %dec_label_pc_a3d4 ], [ %v0_a3f4, %dec_label_pc_a3ec ]
  %v1_a418 = inttoptr i32 %v0_a418 to i32*
  %v2_a418 = load i32, i32* %v1_a418, align 4
  store i32 %v2_a418, i32* @r0, align 4
  %v2_a41c = icmp eq i32 %v2_a418, 0
  br i1 %v2_a41c, label %dec_label_pc_a40c, label %dec_label_pc_a424

dec_label_pc_a424:                                ; preds = %dec_label_pc_a418
  %v1_a424 = call i32 @function_15328(i32 %v2_a418)
  %v2_a410.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a40c

; uselistorder directives
  uselistorder i32 %v1_a3fc, { 1, 2, 0 }
  uselistorder i32 %v0_a3f4, { 1, 0, 2 }
  uselistorder i32 %v0_a3f4.in, { 1, 0 }
  uselistorder i32 %v0_a3d4, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a40c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a3fc, { 1, 0 }
}

define i32 @function_a430(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a430:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a430 = icmp eq i32 %arg1, 0
  %v3_a434 = load i32, i32* @r4, align 4
  store i32 %v3_a434, i32* %stack_var_-8, align 4
  %v6_a434 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a430, label %dec_label_pc_a478, label %dec_label_pc_a440

dec_label_pc_a440:                                ; preds = %dec_label_pc_a430
  %v0_a440 = load i32, i32* %r1.global-to-local, align 4
  %v1_a440 = add i32 %v0_a440, 4
  %v2_a440 = inttoptr i32 %v1_a440 to i8*
  %v3_a440 = load i8, i8* %v2_a440, align 1
  %v4_a440 = zext i8 %v3_a440 to i32
  %v9_a444 = icmp eq i32 %v4_a440, %arg3
  br i1 %v9_a444, label %dec_label_pc_a484, label %dec_label_pc_a468.preheader

dec_label_pc_a468.preheader:                      ; preds = %dec_label_pc_a440
  br label %dec_label_pc_a468

dec_label_pc_a458:                                ; preds = %dec_label_pc_a468
  %v1_a458 = add i32 %v0_a460.in, 12
  %v2_a458 = inttoptr i32 %v1_a458 to i8*
  %v3_a458 = load i8, i8* %v2_a458, align 1
  %v4_a458 = zext i8 %v3_a458 to i32
  %v9_a45c = icmp eq i32 %v4_a458, %arg3
  br i1 %v9_a45c, label %dec_label_pc_a484, label %dec_label_pc_a468

dec_label_pc_a468:                                ; preds = %dec_label_pc_a468.preheader, %dec_label_pc_a458
  %v0_a460.in = phi i32 [ %v0_a440, %dec_label_pc_a468.preheader ], [ %v0_a460, %dec_label_pc_a458 ]
  %v0_a468 = phi i32 [ 0, %dec_label_pc_a468.preheader ], [ %v1_a468, %dec_label_pc_a458 ]
  %v0_a460 = add i32 %v0_a460.in, 8
  %v1_a468 = add i32 %v0_a468, 1
  store i32 %v1_a468, i32* @lr, align 4
  %v9_a46c = icmp eq i32 %v1_a468, %arg1
  store i32 %v0_a460, i32* %r1.global-to-local, align 4
  br i1 %v9_a46c, label %dec_label_pc_a478, label %dec_label_pc_a458

dec_label_pc_a478:                                ; preds = %dec_label_pc_a468, %dec_label_pc_a484, %dec_label_pc_a430, %dec_label_pc_a490
  %v2_a47c = phi i32 [ %v3_a434, %dec_label_pc_a484 ], [ %v3_a434, %dec_label_pc_a430 ], [ %v2_a47c.pre, %dec_label_pc_a490 ], [ %v3_a434, %dec_label_pc_a468 ]
  %v0_a478 = phi i32 [ %arg4, %dec_label_pc_a484 ], [ %arg4, %dec_label_pc_a430 ], [ %v3_a494, %dec_label_pc_a490 ], [ %arg4, %dec_label_pc_a468 ]
  store i32 %v2_a47c, i32* @r4, align 4
  store i32 %v6_a434, i32* @lr, align 4
  ret i32 %v0_a478

dec_label_pc_a484:                                ; preds = %dec_label_pc_a458, %dec_label_pc_a440
  %v0_a484 = phi i32 [ %v0_a440, %dec_label_pc_a440 ], [ %v0_a460, %dec_label_pc_a458 ]
  %v1_a484 = inttoptr i32 %v0_a484 to i32*
  %v2_a484 = load i32, i32* %v1_a484, align 4
  %v2_a488 = icmp eq i32 %v2_a484, 0
  br i1 %v2_a488, label %dec_label_pc_a478, label %dec_label_pc_a490

dec_label_pc_a490:                                ; preds = %dec_label_pc_a484
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a494 = inttoptr i32 %v2_a484 to i8*
  %v3_a494 = call i32 @function_12f10(i8* %v2_a494, i32 10)
  %v2_a47c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a478

; uselistorder directives
  uselistorder i32 %v1_a468, { 1, 2, 0 }
  uselistorder i32 %v0_a460, { 1, 0, 2 }
  uselistorder i32 %v0_a460.in, { 1, 0 }
  uselistorder i32 %v0_a440, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a478, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a468, { 1, 0 }
}

define i32 @function_a4a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_a4a0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a4b0 = call i32 @function_13cd4(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_23074.54 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23078.56 to i32), i32* @r6, align 4
  store i32 54852, i32* %r2.global-to-local, align 4
  store i32 %v2_a4b0, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_23075.71 to i32), i32* %r1.global-to-local, align 4
  %v2_a4d0 = load i32, i32* @global_var_23078.56, align 4
  %v2_a4d4 = inttoptr i32 %v2_a4b0 to i32*
  store i32 54852, i32* %v2_a4d4, align 4
  %v3_a4d8 = load i32, i32* @r5, align 4
  %v4_a4d8 = add i32 %v3_a4d8, 4
  %v5_a4d8 = inttoptr i32 %v4_a4d8 to i8*
  store i8 0, i8* %v5_a4d8, align 1
  %v0_a4dc = load i32, i32* %r1.global-to-local, align 4
  %v3_a4dc = mul i32 %v0_a4dc, 4
  store i32 %v3_a4dc, i32* %r1.global-to-local, align 4
  %v5_a4e0 = call i32 @function_14e90(i32 %v2_a4d0, i32 %v3_a4dc, i32 54852, i32 0)
  %v2_a4e4 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a4e4 = zext i8 %v2_a4e4 to i32
  store i32 %v5_a4e0, i32* %r2.global-to-local, align 4
  %v0_a4ec = load i32, i32* @r5, align 4
  %v5_a4ec = mul nuw nsw i32 %v3_a4e4, 4
  %v6_a4ec = add i32 %v5_a4ec, %v5_a4e0
  %v7_a4ec = inttoptr i32 %v6_a4ec to i32*
  store i32 %v0_a4ec, i32* %v7_a4ec, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_23075.71 to i32), i32* %r3.global-to-local, align 4
  %v1_a4fc = load i32, i32* @r6, align 4
  %v2_a4fc = inttoptr i32 %v1_a4fc to i32*
  store i32 %v5_a4e0, i32* %v2_a4fc, align 4
  %v0_a500 = load i32, i32* %r3.global-to-local, align 4
  %v1_a500 = trunc i32 %v0_a500 to i8
  %v2_a500 = load i32, i32* @r4, align 4
  %v3_a500 = inttoptr i32 %v2_a500 to i8*
  store i8 %v1_a500, i8* %v3_a500, align 1
  %v2_a504 = call i32 @function_13cd4(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_daec.73 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_a504, i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_23075.71 to i32), i32* %r1.global-to-local, align 4
  %v2_a51c = load i32, i32* @global_var_23078.56, align 4
  %v2_a520 = inttoptr i32 %v2_a504 to i32*
  store i32 ptrtoint (i32* @global_var_daec.73 to i32), i32* %v2_a520, align 4
  %v0_a524 = load i32, i32* @r7, align 4
  %v1_a524 = trunc i32 %v0_a524 to i8
  %v2_a524 = load i32, i32* @r5, align 4
  %v3_a524 = add i32 %v2_a524, 4
  %v4_a524 = inttoptr i32 %v3_a524 to i8*
  store i8 %v1_a524, i8* %v4_a524, align 1
  %v0_a528 = load i32, i32* %r1.global-to-local, align 4
  %v3_a528 = mul i32 %v0_a528, 4
  store i32 %v3_a528, i32* %r1.global-to-local, align 4
  %v4_a52c = call i32 @function_14e90(i32 %v2_a51c, i32 %v3_a528, i32 %v5_a4e0, i32 ptrtoint (i32* @global_var_daec.73 to i32))
  %v2_a530 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a530 = zext i8 %v2_a530 to i32
  store i32 %v3_a530, i32* %r3.global-to-local, align 4
  store i32 %v4_a52c, i32* %r2.global-to-local, align 4
  %v0_a538 = load i32, i32* @r5, align 4
  %v5_a538 = mul nuw nsw i32 %v3_a530, 4
  %v6_a538 = add i32 %v5_a538, %v4_a52c
  %v7_a538 = inttoptr i32 %v6_a538 to i32*
  store i32 %v0_a538, i32* %v7_a538, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a540 = load i32, i32* %r3.global-to-local, align 4
  %v1_a540 = load i32, i32* @r7, align 4
  %v2_a540 = add i32 %v1_a540, %v0_a540
  store i32 %v2_a540, i32* %r3.global-to-local, align 4
  %v1_a548 = trunc i32 %v2_a540 to i8
  %v2_a548 = load i32, i32* @r4, align 4
  %v3_a548 = inttoptr i32 %v2_a548 to i8*
  store i8 %v1_a548, i8* %v3_a548, align 1
  %v0_a54c = load i32, i32* %r2.global-to-local, align 4
  %v1_a54c = load i32, i32* @r6, align 4
  %v2_a54c = inttoptr i32 %v1_a54c to i32*
  store i32 %v0_a54c, i32* %v2_a54c, align 4
  %v2_a550 = call i32 @function_13cd4(i32 %v1_a540, i32 8)
  %v2_a554 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a554 = zext i8 %v2_a554 to i32
  store i32 ptrtoint (i32* @global_var_def8.75 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a550, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_a564 = load i32, i32* @r7, align 4
  %v2_a564 = add i32 %v1_a564, %v3_a554
  store i32 %v2_a564, i32* %r1.global-to-local, align 4
  %v2_a568 = load i32, i32* @global_var_23078.56, align 4
  %v2_a56c = inttoptr i32 %v2_a550 to i32*
  store i32 ptrtoint (i32* @global_var_def8.75 to i32), i32* %v2_a56c, align 4
  %v3_a570 = load i32, i32* @r5, align 4
  %v4_a570 = add i32 %v3_a570, 4
  %v5_a570 = inttoptr i32 %v4_a570 to i8*
  store i8 2, i8* %v5_a570, align 1
  %v0_a574 = load i32, i32* %r1.global-to-local, align 4
  %v3_a574 = mul i32 %v0_a574, 4
  store i32 %v3_a574, i32* %r1.global-to-local, align 4
  %v5_a578 = call i32 @function_14e90(i32 %v2_a568, i32 %v3_a574, i32 ptrtoint (i32* @global_var_def8.75 to i32), i32 2)
  %v2_a57c = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a57c = zext i8 %v2_a57c to i32
  store i32 %v3_a57c, i32* %r3.global-to-local, align 4
  store i32 %v5_a578, i32* %r2.global-to-local, align 4
  %v0_a584 = load i32, i32* @r5, align 4
  %v5_a584 = mul nuw nsw i32 %v3_a57c, 4
  %v6_a584 = add i32 %v5_a584, %v5_a578
  %v7_a584 = inttoptr i32 %v6_a584 to i32*
  store i32 %v0_a584, i32* %v7_a584, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a58c = load i32, i32* %r3.global-to-local, align 4
  %v1_a58c = load i32, i32* @r7, align 4
  %v2_a58c = add i32 %v1_a58c, %v0_a58c
  store i32 %v2_a58c, i32* %r3.global-to-local, align 4
  %v1_a594 = trunc i32 %v2_a58c to i8
  %v2_a594 = load i32, i32* @r4, align 4
  %v3_a594 = inttoptr i32 %v2_a594 to i8*
  store i8 %v1_a594, i8* %v3_a594, align 1
  %v0_a598 = load i32, i32* %r2.global-to-local, align 4
  %v1_a598 = load i32, i32* @r6, align 4
  %v2_a598 = inttoptr i32 %v1_a598 to i32*
  store i32 %v0_a598, i32* %v2_a598, align 4
  %v2_a59c = call i32 @function_13cd4(i32 %v1_a58c, i32 8)
  %v2_a5a0 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a5a0 = zext i8 %v2_a5a0 to i32
  store i32 ptrtoint (i32* @global_var_d124.77 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a59c, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_a5b0 = load i32, i32* @r7, align 4
  %v2_a5b0 = add i32 %v1_a5b0, %v3_a5a0
  store i32 %v2_a5b0, i32* %r1.global-to-local, align 4
  %v2_a5b4 = load i32, i32* @global_var_23078.56, align 4
  %v2_a5b8 = inttoptr i32 %v2_a59c to i32*
  store i32 ptrtoint (i32* @global_var_d124.77 to i32), i32* %v2_a5b8, align 4
  %v3_a5bc = load i32, i32* @r5, align 4
  %v4_a5bc = add i32 %v3_a5bc, 4
  %v5_a5bc = inttoptr i32 %v4_a5bc to i8*
  store i8 9, i8* %v5_a5bc, align 1
  %v0_a5c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5c0 = mul i32 %v0_a5c0, 4
  store i32 %v3_a5c0, i32* %r1.global-to-local, align 4
  %v5_a5c4 = call i32 @function_14e90(i32 %v2_a5b4, i32 %v3_a5c0, i32 ptrtoint (i32* @global_var_d124.77 to i32), i32 9)
  %v2_a5c8 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a5c8 = zext i8 %v2_a5c8 to i32
  store i32 %v3_a5c8, i32* %r3.global-to-local, align 4
  store i32 %v5_a5c4, i32* %r2.global-to-local, align 4
  %v0_a5d0 = load i32, i32* @r5, align 4
  %v5_a5d0 = mul nuw nsw i32 %v3_a5c8, 4
  %v6_a5d0 = add i32 %v5_a5d0, %v5_a5c4
  %v7_a5d0 = inttoptr i32 %v6_a5d0 to i32*
  store i32 %v0_a5d0, i32* %v7_a5d0, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a5d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5d8 = load i32, i32* @r7, align 4
  %v2_a5d8 = add i32 %v1_a5d8, %v0_a5d8
  store i32 %v2_a5d8, i32* %r3.global-to-local, align 4
  %v1_a5e0 = trunc i32 %v2_a5d8 to i8
  %v2_a5e0 = load i32, i32* @r4, align 4
  %v3_a5e0 = inttoptr i32 %v2_a5e0 to i8*
  store i8 %v1_a5e0, i8* %v3_a5e0, align 1
  %v0_a5e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a5e4 = load i32, i32* @r6, align 4
  %v2_a5e4 = inttoptr i32 %v1_a5e4 to i32*
  store i32 %v0_a5e4, i32* %v2_a5e4, align 4
  %v2_a5e8 = call i32 @function_13cd4(i32 %v1_a5d8, i32 8)
  %v2_a5ec = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a5ec = zext i8 %v2_a5ec to i32
  store i32 54196, i32* %r2.global-to-local, align 4
  store i32 %v2_a5e8, i32* @r5, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v1_a5fc = load i32, i32* @r7, align 4
  %v2_a5fc = add i32 %v1_a5fc, %v3_a5ec
  store i32 %v2_a5fc, i32* %r1.global-to-local, align 4
  %v2_a600 = load i32, i32* @global_var_23078.56, align 4
  %v2_a604 = inttoptr i32 %v2_a5e8 to i32*
  store i32 54196, i32* %v2_a604, align 4
  %v3_a608 = load i32, i32* @r5, align 4
  %v4_a608 = add i32 %v3_a608, 4
  %v5_a608 = inttoptr i32 %v4_a608 to i8*
  store i8 12, i8* %v5_a608, align 1
  %v0_a60c = load i32, i32* %r1.global-to-local, align 4
  %v3_a60c = mul i32 %v0_a60c, 4
  store i32 %v3_a60c, i32* %r1.global-to-local, align 4
  %v5_a610 = call i32 @function_14e90(i32 %v2_a600, i32 %v3_a60c, i32 54196, i32 12)
  %v2_a614 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a614 = zext i8 %v2_a614 to i32
  store i32 %v3_a614, i32* %r3.global-to-local, align 4
  store i32 %v5_a610, i32* %r2.global-to-local, align 4
  %v0_a61c = load i32, i32* @r5, align 4
  %v5_a61c = mul nuw nsw i32 %v3_a614, 4
  %v6_a61c = add i32 %v5_a61c, %v5_a610
  %v7_a61c = inttoptr i32 %v6_a61c to i32*
  store i32 %v0_a61c, i32* %v7_a61c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a624 = load i32, i32* %r3.global-to-local, align 4
  %v1_a624 = load i32, i32* @r7, align 4
  %v2_a624 = add i32 %v1_a624, %v0_a624
  store i32 %v2_a624, i32* %r3.global-to-local, align 4
  %v1_a62c = trunc i32 %v2_a624 to i8
  %v2_a62c = load i32, i32* @r4, align 4
  %v3_a62c = inttoptr i32 %v2_a62c to i8*
  store i8 %v1_a62c, i8* %v3_a62c, align 1
  %v0_a630 = load i32, i32* %r2.global-to-local, align 4
  %v1_a630 = load i32, i32* @r6, align 4
  %v2_a630 = inttoptr i32 %v1_a630 to i32*
  store i32 %v0_a630, i32* %v2_a630, align 4
  %v2_a634 = call i32 @function_13cd4(i32 %v1_a624, i32 8)
  %v2_a638 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a638 = zext i8 %v2_a638 to i32
  store i32 ptrtoint (i32* @global_var_caa8.80 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a634, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_a648 = load i32, i32* @r7, align 4
  %v2_a648 = add i32 %v1_a648, %v3_a638
  store i32 %v2_a648, i32* %r1.global-to-local, align 4
  %v2_a64c = load i32, i32* @global_var_23078.56, align 4
  %v2_a650 = inttoptr i32 %v2_a634 to i32*
  store i32 ptrtoint (i32* @global_var_caa8.80 to i32), i32* %v2_a650, align 4
  %v3_a654 = load i32, i32* @r5, align 4
  %v4_a654 = add i32 %v3_a654, 4
  %v5_a654 = inttoptr i32 %v4_a654 to i8*
  store i8 3, i8* %v5_a654, align 1
  %v0_a658 = load i32, i32* %r1.global-to-local, align 4
  %v3_a658 = mul i32 %v0_a658, 4
  store i32 %v3_a658, i32* %r1.global-to-local, align 4
  %v5_a65c = call i32 @function_14e90(i32 %v2_a64c, i32 %v3_a658, i32 ptrtoint (i32* @global_var_caa8.80 to i32), i32 3)
  %v2_a660 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a660 = zext i8 %v2_a660 to i32
  store i32 %v3_a660, i32* %r3.global-to-local, align 4
  store i32 %v5_a65c, i32* %r2.global-to-local, align 4
  %v0_a668 = load i32, i32* @r5, align 4
  %v5_a668 = mul nuw nsw i32 %v3_a660, 4
  %v6_a668 = add i32 %v5_a668, %v5_a65c
  %v7_a668 = inttoptr i32 %v6_a668 to i32*
  store i32 %v0_a668, i32* %v7_a668, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a670 = load i32, i32* %r3.global-to-local, align 4
  %v1_a670 = load i32, i32* @r7, align 4
  %v2_a670 = add i32 %v1_a670, %v0_a670
  store i32 %v2_a670, i32* %r3.global-to-local, align 4
  %v1_a678 = trunc i32 %v2_a670 to i8
  %v2_a678 = load i32, i32* @r4, align 4
  %v3_a678 = inttoptr i32 %v2_a678 to i8*
  store i8 %v1_a678, i8* %v3_a678, align 1
  %v0_a67c = load i32, i32* %r2.global-to-local, align 4
  %v1_a67c = load i32, i32* @r6, align 4
  %v2_a67c = inttoptr i32 %v1_a67c to i32*
  store i32 %v0_a67c, i32* %v2_a67c, align 4
  %v2_a680 = call i32 @function_13cd4(i32 %v1_a670, i32 8)
  %v2_a684 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a684 = zext i8 %v2_a684 to i32
  store i32 ptrtoint (i32* @global_var_c3f0.82 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a680, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_a694 = load i32, i32* @r7, align 4
  %v2_a694 = add i32 %v1_a694, %v3_a684
  store i32 %v2_a694, i32* %r1.global-to-local, align 4
  %v2_a698 = load i32, i32* @global_var_23078.56, align 4
  %v2_a69c = inttoptr i32 %v2_a680 to i32*
  store i32 ptrtoint (i32* @global_var_c3f0.82 to i32), i32* %v2_a69c, align 4
  %v3_a6a0 = load i32, i32* @r5, align 4
  %v4_a6a0 = add i32 %v3_a6a0, 4
  %v5_a6a0 = inttoptr i32 %v4_a6a0 to i8*
  store i8 4, i8* %v5_a6a0, align 1
  %v0_a6a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6a4 = mul i32 %v0_a6a4, 4
  store i32 %v3_a6a4, i32* %r1.global-to-local, align 4
  %v5_a6a8 = call i32 @function_14e90(i32 %v2_a698, i32 %v3_a6a4, i32 ptrtoint (i32* @global_var_c3f0.82 to i32), i32 4)
  %v2_a6ac = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a6ac = zext i8 %v2_a6ac to i32
  store i32 %v3_a6ac, i32* %r3.global-to-local, align 4
  store i32 %v5_a6a8, i32* %r2.global-to-local, align 4
  %v0_a6b4 = load i32, i32* @r5, align 4
  %v5_a6b4 = mul nuw nsw i32 %v3_a6ac, 4
  %v6_a6b4 = add i32 %v5_a6b4, %v5_a6a8
  %v7_a6b4 = inttoptr i32 %v6_a6b4 to i32*
  store i32 %v0_a6b4, i32* %v7_a6b4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a6bc = load i32, i32* %r3.global-to-local, align 4
  %v1_a6bc = load i32, i32* @r7, align 4
  %v2_a6bc = add i32 %v1_a6bc, %v0_a6bc
  store i32 %v2_a6bc, i32* %r3.global-to-local, align 4
  %v1_a6c4 = trunc i32 %v2_a6bc to i8
  %v2_a6c4 = load i32, i32* @r4, align 4
  %v3_a6c4 = inttoptr i32 %v2_a6c4 to i8*
  store i8 %v1_a6c4, i8* %v3_a6c4, align 1
  %v0_a6c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6c8 = load i32, i32* @r6, align 4
  %v2_a6c8 = inttoptr i32 %v1_a6c8 to i32*
  store i32 %v0_a6c8, i32* %v2_a6c8, align 4
  %v2_a6cc = call i32 @function_13cd4(i32 %v1_a6bc, i32 8)
  %v2_a6d0 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a6d0 = zext i8 %v2_a6d0 to i32
  store i32 ptrtoint (i32* @global_var_b4c0.84 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a6cc, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_a6e0 = load i32, i32* @r7, align 4
  %v2_a6e0 = add i32 %v1_a6e0, %v3_a6d0
  store i32 %v2_a6e0, i32* %r1.global-to-local, align 4
  %v2_a6e4 = load i32, i32* @global_var_23078.56, align 4
  %v2_a6e8 = inttoptr i32 %v2_a6cc to i32*
  store i32 ptrtoint (i32* @global_var_b4c0.84 to i32), i32* %v2_a6e8, align 4
  %v3_a6ec = load i32, i32* @r5, align 4
  %v4_a6ec = add i32 %v3_a6ec, 4
  %v5_a6ec = inttoptr i32 %v4_a6ec to i8*
  store i8 5, i8* %v5_a6ec, align 1
  %v0_a6f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6f0 = mul i32 %v0_a6f0, 4
  store i32 %v3_a6f0, i32* %r1.global-to-local, align 4
  %v5_a6f4 = call i32 @function_14e90(i32 %v2_a6e4, i32 %v3_a6f0, i32 ptrtoint (i32* @global_var_b4c0.84 to i32), i32 5)
  %v2_a6f8 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a6f8 = zext i8 %v2_a6f8 to i32
  store i32 %v3_a6f8, i32* %r3.global-to-local, align 4
  store i32 %v5_a6f4, i32* %r2.global-to-local, align 4
  %v0_a700 = load i32, i32* @r5, align 4
  %v5_a700 = mul nuw nsw i32 %v3_a6f8, 4
  %v6_a700 = add i32 %v5_a700, %v5_a6f4
  %v7_a700 = inttoptr i32 %v6_a700 to i32*
  store i32 %v0_a700, i32* %v7_a700, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a708 = load i32, i32* %r3.global-to-local, align 4
  %v1_a708 = load i32, i32* @r7, align 4
  %v2_a708 = add i32 %v1_a708, %v0_a708
  store i32 %v2_a708, i32* %r3.global-to-local, align 4
  %v1_a710 = trunc i32 %v2_a708 to i8
  %v2_a710 = load i32, i32* @r4, align 4
  %v3_a710 = inttoptr i32 %v2_a710 to i8*
  store i8 %v1_a710, i8* %v3_a710, align 1
  %v0_a714 = load i32, i32* %r2.global-to-local, align 4
  %v1_a714 = load i32, i32* @r6, align 4
  %v2_a714 = inttoptr i32 %v1_a714 to i32*
  store i32 %v0_a714, i32* %v2_a714, align 4
  %v2_a718 = call i32 @function_13cd4(i32 %v1_a708, i32 8)
  %v2_a71c = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a71c = zext i8 %v2_a71c to i32
  store i32 ptrtoint (i32* @global_var_bc58.86 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a718, i32* @r5, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v1_a72c = load i32, i32* @r7, align 4
  %v2_a72c = add i32 %v1_a72c, %v3_a71c
  store i32 %v2_a72c, i32* %r1.global-to-local, align 4
  %v2_a730 = load i32, i32* @global_var_23078.56, align 4
  %v2_a734 = inttoptr i32 %v2_a718 to i32*
  store i32 ptrtoint (i32* @global_var_bc58.86 to i32), i32* %v2_a734, align 4
  %v3_a738 = load i32, i32* @r5, align 4
  %v4_a738 = add i32 %v3_a738, 4
  %v5_a738 = inttoptr i32 %v4_a738 to i8*
  store i8 11, i8* %v5_a738, align 1
  %v0_a73c = load i32, i32* %r1.global-to-local, align 4
  %v3_a73c = mul i32 %v0_a73c, 4
  store i32 %v3_a73c, i32* %r1.global-to-local, align 4
  %v5_a740 = call i32 @function_14e90(i32 %v2_a730, i32 %v3_a73c, i32 ptrtoint (i32* @global_var_bc58.86 to i32), i32 11)
  %v2_a744 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a744 = zext i8 %v2_a744 to i32
  store i32 %v3_a744, i32* %r3.global-to-local, align 4
  store i32 %v5_a740, i32* %r2.global-to-local, align 4
  %v0_a74c = load i32, i32* @r5, align 4
  %v5_a74c = mul nuw nsw i32 %v3_a744, 4
  %v6_a74c = add i32 %v5_a74c, %v5_a740
  %v7_a74c = inttoptr i32 %v6_a74c to i32*
  store i32 %v0_a74c, i32* %v7_a74c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a754 = load i32, i32* %r3.global-to-local, align 4
  %v1_a754 = load i32, i32* @r7, align 4
  %v2_a754 = add i32 %v1_a754, %v0_a754
  store i32 %v2_a754, i32* %r3.global-to-local, align 4
  %v1_a75c = trunc i32 %v2_a754 to i8
  %v2_a75c = load i32, i32* @r4, align 4
  %v3_a75c = inttoptr i32 %v2_a75c to i8*
  store i8 %v1_a75c, i8* %v3_a75c, align 1
  %v0_a760 = load i32, i32* %r2.global-to-local, align 4
  %v1_a760 = load i32, i32* @r6, align 4
  %v2_a760 = inttoptr i32 %v1_a760 to i32*
  store i32 %v0_a760, i32* %v2_a760, align 4
  %v2_a764 = call i32 @function_13cd4(i32 %v1_a754, i32 8)
  %v2_a768 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a768 = zext i8 %v2_a768 to i32
  store i32 ptrtoint (i32* @global_var_aee0.88 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a764, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_a778 = load i32, i32* @r7, align 4
  %v2_a778 = add i32 %v1_a778, %v3_a768
  store i32 %v2_a778, i32* %r1.global-to-local, align 4
  %v2_a77c = load i32, i32* @global_var_23078.56, align 4
  %v2_a780 = inttoptr i32 %v2_a764 to i32*
  store i32 ptrtoint (i32* @global_var_aee0.88 to i32), i32* %v2_a780, align 4
  %v3_a784 = load i32, i32* @r5, align 4
  %v4_a784 = add i32 %v3_a784, 4
  %v5_a784 = inttoptr i32 %v4_a784 to i8*
  store i8 6, i8* %v5_a784, align 1
  %v0_a788 = load i32, i32* %r1.global-to-local, align 4
  %v3_a788 = mul i32 %v0_a788, 4
  store i32 %v3_a788, i32* %r1.global-to-local, align 4
  %v5_a78c = call i32 @function_14e90(i32 %v2_a77c, i32 %v3_a788, i32 ptrtoint (i32* @global_var_aee0.88 to i32), i32 6)
  %v2_a790 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a790 = zext i8 %v2_a790 to i32
  store i32 %v3_a790, i32* %r3.global-to-local, align 4
  store i32 %v5_a78c, i32* %r2.global-to-local, align 4
  %v0_a798 = load i32, i32* @r5, align 4
  %v5_a798 = mul nuw nsw i32 %v3_a790, 4
  %v6_a798 = add i32 %v5_a798, %v5_a78c
  %v7_a798 = inttoptr i32 %v6_a798 to i32*
  store i32 %v0_a798, i32* %v7_a798, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a7a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a7a0 = load i32, i32* @r7, align 4
  %v2_a7a0 = add i32 %v1_a7a0, %v0_a7a0
  store i32 %v2_a7a0, i32* %r3.global-to-local, align 4
  %v1_a7a8 = trunc i32 %v2_a7a0 to i8
  %v2_a7a8 = load i32, i32* @r4, align 4
  %v3_a7a8 = inttoptr i32 %v2_a7a8 to i8*
  store i8 %v1_a7a8, i8* %v3_a7a8, align 1
  %v0_a7ac = load i32, i32* %r2.global-to-local, align 4
  %v1_a7ac = load i32, i32* @r6, align 4
  %v2_a7ac = inttoptr i32 %v1_a7ac to i32*
  store i32 %v0_a7ac, i32* %v2_a7ac, align 4
  %v2_a7b0 = call i32 @function_13cd4(i32 %v1_a7a0, i32 8)
  %v2_a7b4 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a7b4 = zext i8 %v2_a7b4 to i32
  store i32 ptrtoint (i32* @global_var_a884.90 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a7b0, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_a7c4 = load i32, i32* @r7, align 4
  %v2_a7c4 = add i32 %v1_a7c4, %v3_a7b4
  store i32 %v2_a7c4, i32* %r1.global-to-local, align 4
  %v2_a7c8 = load i32, i32* @global_var_23078.56, align 4
  %v2_a7cc = inttoptr i32 %v2_a7b0 to i32*
  store i32 ptrtoint (i32* @global_var_a884.90 to i32), i32* %v2_a7cc, align 4
  %v3_a7d0 = load i32, i32* @r5, align 4
  %v4_a7d0 = add i32 %v3_a7d0, 4
  %v5_a7d0 = inttoptr i32 %v4_a7d0 to i8*
  store i8 7, i8* %v5_a7d0, align 1
  %v0_a7d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a7d4 = mul i32 %v0_a7d4, 4
  store i32 %v3_a7d4, i32* %r1.global-to-local, align 4
  %v5_a7d8 = call i32 @function_14e90(i32 %v2_a7c8, i32 %v3_a7d4, i32 ptrtoint (i32* @global_var_a884.90 to i32), i32 7)
  %v2_a7dc = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a7dc = zext i8 %v2_a7dc to i32
  store i32 %v3_a7dc, i32* %r3.global-to-local, align 4
  store i32 %v5_a7d8, i32* %r2.global-to-local, align 4
  %v0_a7e4 = load i32, i32* @r5, align 4
  %v5_a7e4 = mul nuw nsw i32 %v3_a7dc, 4
  %v6_a7e4 = add i32 %v5_a7e4, %v5_a7d8
  %v7_a7e4 = inttoptr i32 %v6_a7e4 to i32*
  store i32 %v0_a7e4, i32* %v7_a7e4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a7ec = load i32, i32* %r3.global-to-local, align 4
  %v1_a7ec = load i32, i32* @r7, align 4
  %v2_a7ec = add i32 %v1_a7ec, %v0_a7ec
  store i32 %v2_a7ec, i32* %r3.global-to-local, align 4
  %v1_a7f4 = trunc i32 %v2_a7ec to i8
  %v2_a7f4 = load i32, i32* @r4, align 4
  %v3_a7f4 = inttoptr i32 %v2_a7f4 to i8*
  store i8 %v1_a7f4, i8* %v3_a7f4, align 1
  %v0_a7f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a7f8 = load i32, i32* @r6, align 4
  %v2_a7f8 = inttoptr i32 %v1_a7f8 to i32*
  store i32 %v0_a7f8, i32* %v2_a7f8, align 4
  %v2_a7fc = call i32 @function_13cd4(i32 %v1_a7ec, i32 8)
  %v2_a800 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a800 = zext i8 %v2_a800 to i32
  store i32 ptrtoint (i32* @global_var_81cc.92 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a7fc, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_a810 = load i32, i32* @r7, align 4
  %v2_a810 = add i32 %v1_a810, %v3_a800
  store i32 %v2_a810, i32* %r1.global-to-local, align 4
  %v2_a814 = load i32, i32* @global_var_23078.56, align 4
  %v2_a818 = inttoptr i32 %v2_a7fc to i32*
  store i32 ptrtoint (i32* @global_var_81cc.92 to i32), i32* %v2_a818, align 4
  %v3_a81c = load i32, i32* @r5, align 4
  %v4_a81c = add i32 %v3_a81c, 4
  %v5_a81c = inttoptr i32 %v4_a81c to i8*
  store i8 10, i8* %v5_a81c, align 1
  %v0_a820 = load i32, i32* %r1.global-to-local, align 4
  %v3_a820 = mul i32 %v0_a820, 4
  store i32 %v3_a820, i32* %r1.global-to-local, align 4
  %v5_a824 = call i32 @function_14e90(i32 %v2_a814, i32 %v3_a820, i32 ptrtoint (i32* @global_var_81cc.92 to i32), i32 10)
  %v2_a828 = load i8, i8* bitcast (i8** @global_var_23074.54 to i8*), align 4
  %v3_a828 = zext i8 %v2_a828 to i32
  store i32 %v3_a828, i32* %r3.global-to-local, align 4
  %v1_a82c = load i32, i32* @r6, align 4
  %v2_a82c = inttoptr i32 %v1_a82c to i32*
  store i32 %v5_a824, i32* %v2_a82c, align 4
  %v0_a830 = load i32, i32* @r5, align 4
  %v2_a830 = load i32, i32* %r3.global-to-local, align 4
  %v5_a830 = mul i32 %v2_a830, 4
  %v6_a830 = add i32 %v5_a830, %v5_a824
  %v7_a830 = inttoptr i32 %v6_a830 to i32*
  store i32 %v0_a830, i32* %v7_a830, align 4
  %v0_a834 = load i32, i32* %r3.global-to-local, align 4
  %v1_a834 = load i32, i32* @r7, align 4
  %v2_a834 = add i32 %v1_a834, %v0_a834
  store i32 %v2_a834, i32* %r2.global-to-local, align 4
  %v1_a83c = trunc i32 %v2_a834 to i8
  %v2_a83c = load i32, i32* @r4, align 4
  %v3_a83c = inttoptr i32 %v2_a83c to i8*
  store i8 %v1_a83c, i8* %v3_a83c, align 1
  ret i32 %v1_a834

; uselistorder directives
  uselistorder i32 %v1_a834, { 1, 0 }
  uselistorder i32 %v3_a820, { 1, 0 }
  uselistorder i32 %v1_a7ec, { 1, 0 }
  uselistorder i32 %v3_a7d4, { 1, 0 }
  uselistorder i32 %v1_a7a0, { 1, 0 }
  uselistorder i32 %v3_a788, { 1, 0 }
  uselistorder i32 %v1_a754, { 1, 0 }
  uselistorder i32 %v3_a73c, { 1, 0 }
  uselistorder i32 %v1_a708, { 1, 0 }
  uselistorder i32 %v3_a6f0, { 1, 0 }
  uselistorder i32 %v1_a6bc, { 1, 0 }
  uselistorder i32 %v3_a6a4, { 1, 0 }
  uselistorder i32 %v1_a670, { 1, 0 }
  uselistorder i32 %v3_a658, { 1, 0 }
  uselistorder i32 %v1_a624, { 1, 0 }
  uselistorder i32 %v3_a60c, { 1, 0 }
  uselistorder i32 %v1_a5d8, { 1, 0 }
  uselistorder i32 %v3_a5c0, { 1, 0 }
  uselistorder i32 %v1_a58c, { 1, 0 }
  uselistorder i32 %v3_a574, { 1, 0 }
  uselistorder i32 %v1_a540, { 1, 0 }
  uselistorder i32 %v3_a528, { 1, 0 }
  uselistorder i32 %v2_a504, { 1, 0 }
  uselistorder i32 %v5_a4e0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a4dc, { 1, 0 }
  uselistorder i8 7, { 2, 3, 4, 0, 1 }
  uselistorder i8 11, { 1, 0 }
  uselistorder i8 4, { 2, 1, 0 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_23074.54 to i8*), { 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_23075.71 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_23078.56, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
}

define i32 @function_a884(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a884:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a884 = load i32, i32* @r4, align 4
  %v24_a884 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_a8a0 = call i32 @function_13cd4(i32 %arg1, i32 4)
  %v0_a8a4 = load i32, i32* @r5, align 4
  store i32 %v0_a8a4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a8b4 = load i32, i32* @r4, align 4
  store i32 %v0_a8b4, i32* %r0.global-to-local, align 4
  %v5_a8b8 = inttoptr i32 %v0_a8a4 to i32*
  %v6_a8b8 = call i32 @function_a430(i32 %v0_a8b4, i32* %v5_a8b8, i32 2, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a8d0 = load i32, i32* @r5, align 4
  store i32 %v0_a8d0, i32* %r1.global-to-local, align 4
  %v0_a8d4 = load i32, i32* @r4, align 4
  store i32 %v0_a8d4, i32* %r0.global-to-local, align 4
  %v5_a8d8 = trunc i32 %v6_a8b8 to i8
  %v6_a8dc = inttoptr i32 %v0_a8d0 to i32*
  %v7_a8dc = call i32 @function_a430(i32 %v0_a8d4, i32* %v6_a8dc, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_a8e0 = load i32, i32* @r5, align 4
  store i32 %v0_a8e0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a8dc, i32* %fp.global-to-local, align 4
  %v0_a8f0 = load i32, i32* @r4, align 4
  store i32 %v0_a8f0, i32* %r0.global-to-local, align 4
  %v4_a8f4 = inttoptr i32 %v0_a8e0 to i32*
  %v5_a8f4 = call i32 @function_a430(i32 %v0_a8f0, i32* %v4_a8f4, i32 4, i32 64)
  %v0_a900 = load i32, i32* @r5, align 4
  store i32 %v0_a900, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a90c = load i32, i32* @r4, align 4
  store i32 %v0_a90c, i32* %r0.global-to-local, align 4
  %v6_a914 = inttoptr i32 %v0_a900 to i32*
  %v7_a914 = call i32 @function_a430(i32 %v0_a90c, i32* %v6_a914, i32 5, i32 1)
  %v1_a920 = urem i32 %v7_a914, 256
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a92c = load i32, i32* @r5, align 4
  store i32 %v0_a92c, i32* %r1.global-to-local, align 4
  %v0_a930 = load i32, i32* @r4, align 4
  store i32 %v0_a930, i32* %r0.global-to-local, align 4
  %v5_a938 = inttoptr i32 %v0_a92c to i32*
  %v6_a938 = call i32 @function_a430(i32 %v0_a930, i32* %v5_a938, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_a940 = load i32, i32* @r5, align 4
  store i32 %v0_a940, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a938, i32* @r8, align 4
  %v0_a950 = load i32, i32* @r4, align 4
  store i32 %v0_a950, i32* %r0.global-to-local, align 4
  %v4_a954 = inttoptr i32 %v0_a940 to i32*
  %v5_a954 = call i32 @function_a430(i32 %v0_a950, i32* %v4_a954, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_a958 = load i32, i32* @r5, align 4
  store i32 %v0_a958, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_a954, i32* @r7, align 4
  %v0_a968 = load i32, i32* @r4, align 4
  store i32 %v0_a968, i32* %r0.global-to-local, align 4
  %v4_a96c = inttoptr i32 %v0_a958 to i32*
  %v5_a96c = call i32 @function_a430(i32 %v0_a968, i32* %v4_a96c, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a97c = load i32, i32* @r5, align 4
  store i32 %v0_a97c, i32* %r1.global-to-local, align 4
  %v0_a980 = load i32, i32* @r4, align 4
  store i32 %v0_a980, i32* %r0.global-to-local, align 4
  %v4_a984 = inttoptr i32 %v0_a97c to i32*
  %v5_a984 = call i32 @function_a430(i32 %v0_a980, i32* %v4_a984, i32 1, i32 1)
  %v1_a98c = urem i32 %v5_a984, 256
  %v0_a990 = load i32, i32* @r5, align 4
  store i32 %v0_a990, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a99c = load i32, i32* @r4, align 4
  store i32 %v0_a99c, i32* %r0.global-to-local, align 4
  %v5_a9a4 = inttoptr i32 %v0_a990 to i32*
  %v6_a9a4 = call i32 @function_a430(i32 %v0_a99c, i32* %v5_a9a4, i32 19, i32 0)
  %v0_a9ac = load i32, i32* @r5, align 4
  store i32 %v0_a9ac, i32* %r1.global-to-local, align 4
  %v2_a9b0 = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_a9b0, i32* %r3.global-to-local, align 4
  store i32 %v6_a9a4, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_a9bc = load i32, i32* @r4, align 4
  store i32 %v0_a9bc, i32* %r0.global-to-local, align 4
  %v4_a9c0 = inttoptr i32 %v0_a9ac to i32*
  %v5_a9c0 = call i32 @function_a430(i32 %v0_a9bc, i32* %v4_a9c0, i32 25, i32 %v2_a9b0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_a9d4 = call i32 @function_1561c(i32 2, i32 3, i32 6)
  store i32 %v3_a9d4, i32* @r0, align 4
  %v7_a9d8 = icmp eq i32 %v3_a9d4, -1
  store i1 %v7_a9d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a9d8, label %dec_label_pc_ac38, label %dec_label_pc_a9e4

dec_label_pc_a9e4:                                ; preds = %dec_label_pc_a884
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a9ec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a9ec, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_aa00 = call i32 @function_155ac(i32 %v3_a9d4, i32 0, i32 3, i32 %v6_a9ec, i32 4)
  store i32 %v5_aa00, i32* %r0.global-to-local, align 4
  %v7_aa04 = icmp eq i32 %v5_aa00, -1
  store i1 %v7_aa04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa04, label %dec_label_pc_ac30, label %dec_label_pc_aa0c

dec_label_pc_aa0c:                                ; preds = %dec_label_pc_a9e4
  %v0_aa0c = load i32, i32* @r8, align 4
  %v0_aa10 = load i32, i32* @r7, align 4
  %v0_aa14 = load i32, i32* %fp.global-to-local, align 4
  %v3_aa14 = mul i32 %v0_aa14, 65536
  store i32 %v3_aa14, i32* %r3.global-to-local, align 4
  %v3_aa1c = urem i32 %v0_aa0c, 65536
  store i32 %v3_aa1c, i32* %r2.global-to-local, align 4
  %v3_aa20 = urem i32 %v0_aa10, 65536
  store i32 %v3_aa20, i32* %r1.global-to-local, align 4
  %v0_aa24 = load i32, i32* @r6, align 4
  %v1_aa24 = urem i32 %v0_aa24, 256
  store i32 %v1_aa24, i32* @r6, align 4
  %v0_aa28 = load i32, i32* @sl, align 4
  %v2_aa28 = icmp eq i32 %v0_aa28, 0
  store i1 %v2_aa28, i1* %cpsr_z.global-to-local, align 1
  %v3_aa2c = urem i32 %v0_aa14, 65536
  store i32 %v3_aa2c, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_aa28, label %dec_label_pc_aec0, label %dec_label_pc_aa44

dec_label_pc_aa44:                                ; preds = %dec_label_pc_aa0c
  %v3_aa4c = mul i32 %v5_a96c, 65536
  %v1_aa50 = add i32 %v3_aa4c, 524288
  %v1_aa54 = add i32 %v3_aa4c, 4325376
  %v1_aa5c = add i32 %v3_aa4c, 1835008
  %v3_aa60 = udiv i32 %v1_aa54, 65536
  store i32 %v3_aa60, i32* %r1.global-to-local, align 4
  %v3_aa64 = udiv i32 %v1_aa5c, 65536
  store i32 %v3_aa64, i32* %r3.global-to-local, align 4
  %v3_aa68 = xor i32 %v3_aa2c, 65535
  store i32 %v3_aa68, i32* %r2.global-to-local, align 4
  %v3_aa6c = udiv i32 %v1_aa50, 65536
  store i32 %v3_aa6c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_abcc = sext i8 %v5_a8d8 to i32
  %v2_abf0 = icmp eq i32 %v1_a920, 0
  %v2_ab3c = icmp eq i32 %v1_aa24, 0
  %sext = mul i32 %v5_a8f4, 16777216
  %v4_abec = sdiv i32 %sext, 16777216
  br label %dec_label_pc_ab8c

dec_label_pc_aa88:                                ; preds = %dec_label_pc_ab8c, %dec_label_pc_ac10
  %v2_aa8c = phi i32 [ %v0_abfc, %dec_label_pc_ab8c ], [ %v2_aa8c.pre, %dec_label_pc_ac10 ]
  %v3_aa8c = add i32 %v2_aa8c, 9
  %v4_aa8c = inttoptr i32 %v3_aa8c to i8*
  store i8 47, i8* %v4_aa8c, align 1
  %v3_aa90 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa90, i32* %r2.global-to-local, align 4
  store i32 %v5_a9c0, i32* %r1.global-to-local, align 4
  %v3_aa98 = mul i32 %v3_aa90, 32
  store i32 %v3_aa98, i32* %r3.global-to-local, align 4
  %v1_aa9c = load i32, i32* %r4.global-to-local, align 4
  %v2_aa9c = add i32 %v1_aa9c, 12
  %v3_aa9c = inttoptr i32 %v2_aa9c to i32*
  store i32 %v5_a9c0, i32* %v3_aa9c, align 4
  %v0_aaa0 = load i32, i32* %r3.global-to-local, align 4
  %v1_aaa0 = load i32, i32* %r2.global-to-local, align 4
  %tmp = mul i32 %v1_aaa0, -8
  %v5_aaa0 = add i32 %v0_aaa0, %tmp
  %v1_aaa4 = load i32, i32* @sb, align 4
  %v2_aaa4 = add i32 %v1_aaa4, %v5_aaa0
  store i32 %v2_aaa4, i32* %r3.global-to-local, align 4
  %v1_aaa8 = add i32 %v2_aaa4, 16
  %v2_aaa8 = inttoptr i32 %v1_aaa8 to i32*
  %v3_aaa8 = load i32, i32* %v2_aaa8, align 4
  store i32 %v3_aaa8, i32* %r2.global-to-local, align 4
  store i32 25856, i32* %r0.global-to-local, align 4
  %v1_aab0 = load i32, i32* %r4.global-to-local, align 4
  %v2_aab0 = add i32 %v1_aab0, 16
  %v3_aab0 = inttoptr i32 %v2_aab0 to i32*
  store i32 %v3_aaa8, i32* %v3_aab0, align 4
  %v0_aab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_aab4 = add i32 %v0_aab4, 88
  store i32 %v1_aab4, i32* %r0.global-to-local, align 4
  %v1_aab8 = call i32 @function_15314(i32 %v1_aab4)
  %v2_aab8 = trunc i32 %v1_aab8 to i16
  %v3_aabc = load i32, i32* @r8, align 4
  %v4_aabc = add i32 %v3_aabc, 2
  %v5_aabc = inttoptr i32 %v4_aabc to i16*
  store i16 %v2_aab8, i16* %v5_aabc, align 2
  store i32 2048, i32* %r0.global-to-local, align 4
  %v1_aac4 = call i32 @function_15314(i32 2048)
  %v2_aac4 = trunc i32 %v1_aac4 to i8
  store i32 %v1_aac4, i32* %r0.global-to-local, align 4
  %v4_aac8 = udiv i32 %v1_aac4, 256
  store i32 %v4_aac8, i32* %r3.global-to-local, align 4
  %v1_aacc = trunc i32 %v4_aac8 to i8
  %v2_aacc = load i32, i32* @r7, align 4
  %v3_aacc = add i32 %v2_aacc, 13
  %v4_aacc = inttoptr i32 %v3_aacc to i8*
  store i8 %v1_aacc, i8* %v4_aacc, align 1
  %v3_aad0 = load i32, i32* @r7, align 4
  %v4_aad0 = add i32 %v3_aad0, 12
  %v5_aad0 = inttoptr i32 %v4_aad0 to i8*
  store i8 %v2_aac4, i8* %v5_aad0, align 1
  %v0_aad4 = load i32, i32* %r4.global-to-local, align 4
  %v1_aad4 = add i32 %v0_aad4, 38
  %v2_aad4 = inttoptr i32 %v1_aad4 to i8*
  %v3_aad4 = load i8, i8* %v2_aad4, align 1
  %tmp57 = urem i8 %v3_aad4, 16
  %v1_aad8 = zext i8 %tmp57 to i32
  %v1_aadc = or i32 %v1_aad8, 64
  store i32 %v1_aadc, i32* %r3.global-to-local, align 4
  %v1_aae0 = trunc i32 %v1_aadc to i8
  store i8 %v1_aae0, i8* %v2_aad4, align 1
  %v0_aae4 = load i32, i32* %r4.global-to-local, align 4
  %v1_aae4 = add i32 %v0_aae4, 38
  %v2_aae4 = inttoptr i32 %v1_aae4 to i8*
  %v3_aae4 = load i8, i8* %v2_aae4, align 1
  %v1_aae8 = and i8 %v3_aae4, -16
  %v1_aaec = or i8 %v1_aae8, 5
  store i8 %v1_aaec, i8* %v2_aae4, align 1
  store i32 %v4_abcc, i32* %r2.global-to-local, align 4
  %v2_aaf8 = load i32, i32* @r5, align 4
  %v3_aaf8 = add i32 %v2_aaf8, 1
  %v4_aaf8 = inttoptr i32 %v3_aaf8 to i8*
  store i8 %v5_a8d8, i8* %v4_aaf8, align 1
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v1_ab00 = call i32 @function_15314(i32 %v3_aa64)
  %v2_ab00 = trunc i32 %v1_ab00 to i16
  %v3_ab04 = load i32, i32* @r5, align 4
  %v4_ab04 = add i32 %v3_ab04, 2
  %v5_ab04 = inttoptr i32 %v4_ab04 to i16*
  store i16 %v2_ab00, i16* %v5_ab04, align 2
  store i32 %v3_aa68, i32* %r0.global-to-local, align 4
  %v1_ab0c = call i32 @function_15314(i32 %v3_aa68)
  %v2_ab0c = trunc i32 %v1_ab0c to i16
  store i32 %v1_ab0c, i32* %r0.global-to-local, align 4
  store i32 %v4_abec, i32* %r1.global-to-local, align 4
  store i32 %v1_a920, i32* %r3.global-to-local, align 4
  store i1 %v2_abf0, i1* %cpsr_z.global-to-local, align 1
  %v3_ab1c = load i32, i32* @r5, align 4
  %v4_ab1c = add i32 %v3_ab1c, 4
  %v5_ab1c = inttoptr i32 %v4_ab1c to i16*
  store i16 %v2_ab0c, i16* %v5_ab1c, align 2
  %v0_ab20 = load i32, i32* %r1.global-to-local, align 4
  %v1_ab20 = trunc i32 %v0_ab20 to i8
  %v2_ab20 = load i32, i32* @r5, align 4
  %v3_ab20 = add i32 %v2_ab20, 8
  %v4_ab20 = inttoptr i32 %v3_ab20 to i8*
  store i8 %v1_ab20, i8* %v4_ab20, align 1
  %v0_ab24 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ab24, label %dec_label_pc_ab28, label %dec_label_pc_ac20

dec_label_pc_ab28:                                ; preds = %dec_label_pc_aa88, %dec_label_pc_ac20
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_ab2c = load i32, i32* @r5, align 4
  %v3_ab2c = add i32 %v2_ab2c, 9
  %v4_ab2c = inttoptr i32 %v3_ab2c to i8*
  store i8 17, i8* %v4_ab2c, align 1
  %v0_ab30 = call i32 @function_10038()
  store i32 %v0_ab30, i32* %r0.global-to-local, align 4
  store i32 %v1_aa24, i32* %r2.global-to-local, align 4
  store i1 %v2_ab3c, i1* %cpsr_z.global-to-local, align 1
  %v1_ab40 = sub i32 1023, %v0_ab30
  store i32 %v1_ab40, i32* %r3.global-to-local, align 4
  br i1 %v2_ab3c, label %.thread, label %.thread3

.thread:                                          ; preds = %dec_label_pc_ab28
  %v2_ab48 = load i32, i32* @r5, align 4
  %v3_ab48 = add i32 %v2_ab48, 16
  %v4_ab48 = inttoptr i32 %v3_ab48 to i32*
  store i32 %v1_ab40, i32* %v4_ab48, align 4
  br label %bb

.thread3:                                         ; preds = %dec_label_pc_ab28
  %v1_ab44 = load i32, i32* %r4.global-to-local, align 4
  %v2_ab44 = add i32 %v1_ab44, 16
  %v3_ab44 = inttoptr i32 %v2_ab44 to i32*
  %v4_ab44 = load i32, i32* %v3_ab44, align 4
  store i32 %v4_ab44, i32* %r3.global-to-local, align 4
  %v2_ab4c = load i32, i32* @r5, align 4
  %v3_ab4c = add i32 %v2_ab4c, 16
  %v4_ab4c = inttoptr i32 %v3_ab4c to i32*
  store i32 %v4_ab44, i32* %v4_ab4c, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread3
  %v1_ab50 = load i32, i32* @r5, align 4
  %v2_ab50 = add i32 %v1_ab50, 12
  %v3_ab50 = inttoptr i32 %v2_ab50 to i32*
  store i32 %v0_ab30, i32* %v3_ab50, align 4
  store i32 %v3_aa1c, i32* %r0.global-to-local, align 4
  %v1_ab58 = call i32 @function_15314(i32 %v3_aa1c)
  %v2_ab58 = trunc i32 %v1_ab58 to i16
  %v3_ab5c = load i32, i32* @r6, align 4
  %v4_ab5c = inttoptr i32 %v3_ab5c to i16*
  store i16 %v2_ab58, i16* %v4_ab5c, align 2
  store i32 %v3_aa20, i32* %r0.global-to-local, align 4
  %v1_ab64 = call i32 @function_15314(i32 %v3_aa20)
  %v2_ab64 = trunc i32 %v1_ab64 to i16
  %v3_ab68 = load i32, i32* @r6, align 4
  %v4_ab68 = add i32 %v3_ab68, 2
  %v5_ab68 = inttoptr i32 %v4_ab68 to i16*
  store i16 %v2_ab64, i16* %v5_ab68, align 2
  store i32 %v3_aa6c, i32* %r0.global-to-local, align 4
  %v1_ab70 = call i32 @function_15314(i32 %v3_aa6c)
  %v2_ab70 = trunc i32 %v1_ab70 to i16
  store i32 %v1_ab70, i32* %r0.global-to-local, align 4
  %v3_ab74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab74, i32* %r3.global-to-local, align 4
  %v1_ab78 = add i32 %v3_ab74, 1
  store i32 %v1_ab78, i32* @r4, align 4
  %v1_ab7c = load i32, i32* @sl, align 4
  %v9_ab7c = icmp eq i32 %v1_ab78, %v1_ab7c
  store i1 %v9_ab7c, i1* %cpsr_z.global-to-local, align 1
  %v3_ab80 = load i32, i32* @r6, align 4
  %v4_ab80 = add i32 %v3_ab80, 4
  %v5_ab80 = inttoptr i32 %v4_ab80 to i16*
  store i16 %v2_ab70, i16* %v5_ab80, align 2
  %v0_ab84 = load i32, i32* @r4, align 4
  store i32 %v0_ab84, i32* %stack_var_-44, align 4
  %v6_ab88 = icmp slt i32 %v1_ab78, %v1_ab7c
  br i1 %v6_ab88, label %dec_label_pc_ab8c, label %dec_label_pc_ac44

dec_label_pc_ab8c:                                ; preds = %bb, %dec_label_pc_aa44
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ab98 = call i32 @function_13cd4(i32 1510, i32 4)
  store i32 %v2_ab98, i32* %r0.global-to-local, align 4
  store i32 %v2_a8a0, i32* %r2.global-to-local, align 4
  %v3_aba0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aba0, i32* %r3.global-to-local, align 4
  %v2_aba4 = load i32, i32* @r4, align 4
  %v5_aba4 = mul i32 %v2_aba4, 4
  %v6_aba4 = add i32 %v5_aba4, %v2_a8a0
  %v7_aba4 = inttoptr i32 %v6_aba4 to i32*
  store i32 %v2_ab98, i32* %v7_aba4, align 4
  %v0_aba8 = load i32, i32* %r2.global-to-local, align 4
  %v1_aba8 = load i32, i32* %r3.global-to-local, align 4
  %v4_aba8 = mul i32 %v1_aba8, 4
  %v5_aba8 = add i32 %v4_aba8, %v0_aba8
  %v6_aba8 = inttoptr i32 %v5_aba8 to i32*
  %v7_aba8 = load i32, i32* %v6_aba8, align 4
  store i32 %v7_aba8, i32* %r4.global-to-local, align 4
  %v1_abac = inttoptr i32 %v7_aba8 to i8*
  %v2_abac = load i8, i8* %v1_abac, align 1
  %tmp58 = urem i8 %v2_abac, 16
  %v1_abb0 = zext i8 %tmp58 to i32
  %v1_abb4 = or i32 %v1_abb0, 64
  store i32 %v1_abb4, i32* %r2.global-to-local, align 4
  %v1_abb8 = trunc i32 %v1_abb4 to i8
  store i8 %v1_abb8, i8* %v1_abac, align 1
  %v0_abbc = load i32, i32* %r4.global-to-local, align 4
  %v1_abbc = inttoptr i32 %v0_abbc to i8*
  %v2_abbc = load i8, i8* %v1_abbc, align 1
  %v1_abc0 = and i8 %v2_abbc, -16
  %v1_abc4 = or i8 %v1_abc0, 5
  store i8 %v1_abc4, i8* %v1_abbc, align 1
  store i32 %v4_abcc, i32* %r3.global-to-local, align 4
  %v2_abd0 = load i32, i32* %r4.global-to-local, align 4
  %v3_abd0 = add i32 %v2_abd0, 1
  %v4_abd0 = inttoptr i32 %v3_abd0 to i8*
  store i8 %v5_a8d8, i8* %v4_abd0, align 1
  store i32 %v3_aa60, i32* %r0.global-to-local, align 4
  %v1_abd8 = call i32 @function_15314(i32 %v3_aa60)
  %v2_abd8 = trunc i32 %v1_abd8 to i16
  %v3_abdc = load i32, i32* %r4.global-to-local, align 4
  %v4_abdc = add i32 %v3_abdc, 2
  %v5_abdc = inttoptr i32 %v4_abdc to i16*
  store i16 %v2_abd8, i16* %v5_abdc, align 2
  %v0_abe0 = load i32, i32* @fp, align 4
  store i32 %v0_abe0, i32* %r0.global-to-local, align 4
  %v1_abe4 = call i32 @function_15314(i32 %v0_abe0)
  %v2_abe4 = trunc i32 %v1_abe4 to i16
  store i32 %v1_abe4, i32* %r0.global-to-local, align 4
  store i32 %v1_a920, i32* %r1.global-to-local, align 4
  store i32 %v4_abec, i32* %r2.global-to-local, align 4
  store i1 %v2_abf0, i1* %cpsr_z.global-to-local, align 1
  %v3_abf4 = load i32, i32* %r4.global-to-local, align 4
  %v4_abf4 = add i32 %v3_abf4, 4
  %v5_abf4 = inttoptr i32 %v4_abf4 to i16*
  store i16 %v2_abe4, i16* %v5_abf4, align 2
  %v0_abf8 = load i32, i32* %r2.global-to-local, align 4
  %v1_abf8 = trunc i32 %v0_abf8 to i8
  %v2_abf8 = load i32, i32* %r4.global-to-local, align 4
  %v3_abf8 = add i32 %v2_abf8, 8
  %v4_abf8 = inttoptr i32 %v3_abf8 to i8*
  store i8 %v1_abf8, i8* %v4_abf8, align 1
  %v0_abfc = load i32, i32* %r4.global-to-local, align 4
  %v1_abfc = add i32 %v0_abfc, 38
  store i32 %v1_abfc, i32* @r5, align 4
  %v1_ac00 = add i32 %v0_abfc, 58
  store i32 %v1_ac00, i32* @r6, align 4
  %v1_ac04 = add i32 %v0_abfc, 24
  store i32 %v1_ac04, i32* @r7, align 4
  %v1_ac08 = add i32 %v0_abfc, 20
  store i32 %v1_ac08, i32* @r8, align 4
  %v0_ac0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ac0c, label %dec_label_pc_aa88, label %dec_label_pc_ac10

dec_label_pc_ac10:                                ; preds = %dec_label_pc_ab8c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_ac14 = call i32 @function_15314(i32 16384)
  %v2_ac14 = trunc i32 %v1_ac14 to i16
  store i32 %v1_ac14, i32* %r0.global-to-local, align 4
  %v3_ac18 = load i32, i32* %r4.global-to-local, align 4
  %v4_ac18 = add i32 %v3_ac18, 6
  %v5_ac18 = inttoptr i32 %v4_ac18 to i16*
  store i16 %v2_ac14, i16* %v5_ac18, align 2
  %v2_aa8c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_aa88

dec_label_pc_ac20:                                ; preds = %dec_label_pc_aa88
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_ac24 = call i32 @function_15314(i32 16384)
  %v2_ac24 = trunc i32 %v1_ac24 to i16
  store i32 %v1_ac24, i32* %r0.global-to-local, align 4
  %v3_ac28 = load i32, i32* @r5, align 4
  %v4_ac28 = add i32 %v3_ac28, 6
  %v5_ac28 = inttoptr i32 %v4_ac28 to i16*
  store i16 %v2_ac24, i16* %v5_ac28, align 2
  br label %dec_label_pc_ab28

dec_label_pc_ac30:                                ; preds = %dec_label_pc_a9e4
  store i32 %v3_a9d4, i32* @r0, align 4
  %v1_ac34 = call i32 @function_165e8(i32 %v3_a9d4)
  store i32 %v1_ac34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ac38

dec_label_pc_ac38:                                ; preds = %dec_label_pc_a884, %dec_label_pc_ac30
  %v1_ac40 = phi i32 [ %v3_a9d4, %dec_label_pc_a884 ], [ %v1_ac34, %dec_label_pc_ac30 ]
  store i32 %v3_a884, i32* %r4.global-to-local, align 4
  store i32 %v24_a884, i32* %fp.global-to-local, align 4
  ret i32 %v1_ac40

dec_label_pc_ac44:                                ; preds = %bb
  %v1_ac4c = add i32 %v5_a96c, 8
  store i32 %v1_ac4c, i32* %r3.global-to-local, align 4
  %v1_ac50 = add i32 %v5_a96c, 66
  store i32 %v1_ac50, i32* %r1.global-to-local, align 4
  %v0_ac60.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_ac5c.preheader

dec_label_pc_ac5c.preheader:                      ; preds = %dec_label_pc_ac44, %dec_label_pc_aec0
  %v0_ac60.pre = phi i32 [ %v0_ac60.pre.pre, %dec_label_pc_ac44 ], [ 0, %dec_label_pc_aec0 ]
  %stack_var_-120.0.ph = phi i32 [ %v1_ac50, %dec_label_pc_ac44 ], [ %v1_aecc, %dec_label_pc_aec0 ]
  %stack_var_-124.0.ph = phi i32 [ %v1_ac4c, %dec_label_pc_ac44 ], [ %v1_aec8, %dec_label_pc_aec0 ]
  %v3_ae28 = icmp eq i32 %v5_a9c0, -1
  %v8_ae28 = icmp eq i32 %v5_a9c0, -1
  %v2_ae90 = icmp eq i32 %v1_aa24, 0
  %v2_acf8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_ad10 = ptrtoint i32* %stack_var_-52 to i32
  %v2_ad20 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ad30 = ptrtoint i32* %stack_var_-54 to i32
  %v2_ad40 = icmp eq i32 %v1_a98c, 0
  br label %dec_label_pc_ac5c

dec_label_pc_ac5c:                                ; preds = %dec_label_pc_ac5c, %dec_label_pc_ad48, %dec_label_pc_ac5c.preheader
  %v0_ac60 = phi i32 [ %v0_ac60.pre, %dec_label_pc_ac5c.preheader ], [ 0, %dec_label_pc_ac5c ], [ %v1_ade8, %dec_label_pc_ad48 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ac60 = icmp eq i32 %v0_ac60, 0
  store i1 %v2_ac60, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ac60, label %dec_label_pc_ac5c, label %dec_label_pc_ac6c

dec_label_pc_ac6c:                                ; preds = %dec_label_pc_ac5c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ac70

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ad48, %dec_label_pc_ac6c
  %v1_ac84 = phi i32 [ %v1_ade4, %dec_label_pc_ad48 ], [ 0, %dec_label_pc_ac6c ]
  %v5_ac74 = mul i32 %v1_ac84, 24
  %v1_ac78 = load i32, i32* @sb, align 4
  %v2_ac78 = add i32 %v1_ac78, %v5_ac74
  store i32 %v2_ac78, i32* %r3.global-to-local, align 4
  store i32 %v2_a8a0, i32* %r1.global-to-local, align 4
  %v1_ac80 = add i32 %v2_ac78, 20
  %v2_ac80 = inttoptr i32 %v1_ac80 to i8*
  %v3_ac80 = load i8, i8* %v2_ac80, align 1
  %v4_ac80 = zext i8 %v3_ac80 to i32
  store i32 %v4_ac80, i32* %r2.global-to-local, align 4
  %v4_ac84 = mul i32 %v1_ac84, 4
  %v5_ac84 = add i32 %v4_ac84, %v2_a8a0
  %v6_ac84 = inttoptr i32 %v5_ac84 to i32*
  %v7_ac84 = load i32, i32* %v6_ac84, align 4
  store i32 %v7_ac84, i32* @r5, align 4
  %v7_ac88 = icmp eq i8 %v3_ac80, 31
  store i1 %v7_ac88, i1* %cpsr_z.global-to-local, align 1
  %v1_ac8c = add i32 %v7_ac84, 24
  store i32 %v1_ac8c, i32* @r7, align 4
  %v1_ac90 = add i32 %v7_ac84, 38
  store i32 %v1_ac90, i32* @r6, align 4
  %v1_ac94 = add i32 %v7_ac84, 58
  store i32 %v1_ac94, i32* @r8, align 4
  %tmp59 = icmp ult i8 %v3_ac80, 32
  br i1 %tmp59, label %dec_label_pc_adf8, label %dec_label_pc_ac9c

dec_label_pc_ac9c:                                ; preds = %dec_label_pc_ac70
  store i32 %v5_a9c0, i32* %r2.global-to-local, align 4
  store i1 %v8_ae28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ae28, label %dec_label_pc_ae34, label %dec_label_pc_aca8

dec_label_pc_aca8:                                ; preds = %dec_label_pc_adf8, %dec_label_pc_ac9c
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  %v0_acb0 = load i32, i32* @fp, align 4
  %v9_acb0 = icmp eq i32 %v0_acb0, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  store i1 %v9_acb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_acb0, label %dec_label_pc_ae4c, label %dec_label_pc_acb8

dec_label_pc_acb8:                                ; preds = %dec_label_pc_ae34.dec_label_pc_acb8_crit_edge, %dec_label_pc_aca8
  %v1_acbc = phi i32 [ %v1_acbc.pre, %dec_label_pc_ae34.dec_label_pc_acb8_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), %dec_label_pc_aca8 ]
  store i32 %v3_aa1c, i32* %r3.global-to-local, align 4
  %v9_acbc = icmp eq i32 %v3_aa1c, %v1_acbc
  store i1 %v9_acbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_acbc, label %dec_label_pc_ae74, label %dec_label_pc_acc4

dec_label_pc_acc4:                                ; preds = %dec_label_pc_ae4c, %dec_label_pc_acb8
  %v1_acc8 = phi i32 [ %v1_ae6c, %dec_label_pc_ae4c ], [ %v1_acbc, %dec_label_pc_acb8 ]
  store i32 %v3_aa20, i32* %r1.global-to-local, align 4
  %v9_acc8 = icmp eq i32 %v3_aa20, %v1_acc8
  store i1 %v9_acc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_acc8, label %dec_label_pc_ae88, label %dec_label_pc_acd0

dec_label_pc_acd0:                                ; preds = %dec_label_pc_ae74, %dec_label_pc_acc4
  store i32 %v1_aa24, i32* %r2.global-to-local, align 4
  store i1 %v2_ae90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ae90, label %dec_label_pc_aea4, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_acd0
  %v1_acd8 = load i32, i32* @r5, align 4
  %v2_acd8 = add i32 %v1_acd8, 16
  %v3_acd8 = inttoptr i32 %v2_acd8 to i32*
  %v4_acd8 = load i32, i32* %v3_acd8, align 4
  store i32 %v4_acd8, i32* %r3.global-to-local, align 4
  %v2_acdc = load i32, i32* @r6, align 4
  %v3_acdc = add i32 %v2_acdc, 16
  %v4_acdc = inttoptr i32 %v3_acdc to i32*
  store i32 %v4_acd8, i32* %v4_acdc, align 4
  br label %dec_label_pc_ace4

dec_label_pc_ace4:                                ; preds = %bb56, %.thread4, %dec_label_pc_aea4
  %v0_ace4 = call i32 @function_10038()
  store i32 %v0_ace4, i32* %r0.global-to-local, align 4
  store i32 %v0_ace4, i32* %stack_var_-48, align 4
  %v0_acec = call i32 @function_10038()
  store i32 %v0_acec, i32* %r0.global-to-local, align 4
  store i32 %v0_acec, i32* %stack_var_-52, align 4
  %v0_acf4 = call i32 @function_10038()
  store i32 %v2_acf8, i32* %r1.global-to-local, align 4
  store i32 %v0_acf4, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_ad04 = load i32, i32* @r7, align 4
  store i32 %v0_ad04, i32* %r0.global-to-local, align 4
  %v3_ad08 = call i32 @function_12e5c(i32 %v0_ad04, i32 %v2_acf8, i32 4)
  %v0_ad0c = load i32, i32* @r7, align 4
  %v1_ad0c = add i32 %v0_ad0c, 6
  store i32 %v1_ad0c, i32* %r0.global-to-local, align 4
  store i32 %v2_ad10, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_ad18 = call i32 @function_12e5c(i32 %v1_ad0c, i32 %v2_ad10, i32 4)
  %v0_ad1c = load i32, i32* @r7, align 4
  %v1_ad1c = add i32 %v0_ad1c, 4
  store i32 %v1_ad1c, i32* %r0.global-to-local, align 4
  store i32 %v2_ad20, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ad28 = call i32 @function_12e5c(i32 %v1_ad1c, i32 %v2_ad20, i32 2)
  %v0_ad2c = load i32, i32* @r7, align 4
  %v1_ad2c = add i32 %v0_ad2c, 10
  store i32 %v1_ad2c, i32* %r0.global-to-local, align 4
  store i32 %v2_ad30, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ad38 = call i32 @function_12e5c(i32 %v1_ad2c, i32 %v2_ad30, i32 2)
  store i32 %v3_ad38, i32* %r0.global-to-local, align 4
  store i32 %v1_a98c, i32* %r3.global-to-local, align 4
  store i1 %v2_ad40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ad40, label %dec_label_pc_ad48, label %dec_label_pc_aeb0

dec_label_pc_ad48:                                ; preds = %dec_label_pc_ace4, %dec_label_pc_aeb0
  %v2_ad4c = load i32, i32* @r5, align 4
  %v3_ad4c = add i32 %v2_ad4c, 10
  %v4_ad4c = inttoptr i32 %v3_ad4c to i16*
  store i16 0, i16* %v4_ad4c, align 2
  %v0_ad50 = load i32, i32* @r5, align 4
  store i32 %v0_ad50, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_ad58 = call i32 @function_e5a4(i32 %v0_ad50, i32 20)
  %v3_ad58 = trunc i32 %v2_ad58 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_ad60 = load i32, i32* @r5, align 4
  %v4_ad60 = add i32 %v3_ad60, 10
  %v5_ad60 = inttoptr i32 %v4_ad60 to i16*
  store i16 %v3_ad58, i16* %v5_ad60, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ad68 = load i32, i32* %r2.global-to-local, align 4
  %v1_ad68 = trunc i32 %v0_ad68 to i16
  %v2_ad68 = load i32, i32* @r6, align 4
  %v3_ad68 = add i32 %v2_ad68, 10
  %v4_ad68 = inttoptr i32 %v3_ad68 to i16*
  store i16 %v1_ad68, i16* %v4_ad68, align 2
  %v0_ad6c = load i32, i32* @r6, align 4
  store i32 %v0_ad6c, i32* @r0, align 4
  %v2_ad70 = call i32 @function_e5a4(i32 %v0_ad6c, i32 20)
  %v3_ad70 = trunc i32 %v2_ad70 to i16
  store i32 %v2_ad70, i32* %r0.global-to-local, align 4
  %v3_ad74 = load i32, i32* @r6, align 4
  %v4_ad74 = add i32 %v3_ad74, 10
  %v5_ad74 = inttoptr i32 %v4_ad74 to i16*
  store i16 %v3_ad70, i16* %v5_ad74, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ad7c = load i32, i32* @r8, align 4
  %v3_ad7c = add i32 %v2_ad7c, 6
  %v4_ad7c = inttoptr i32 %v3_ad7c to i16*
  store i16 0, i16* %v4_ad7c, align 2
  %v0_ad80 = load i32, i32* @r8, align 4
  store i32 %v0_ad80, i32* @r1, align 4
  %v1_ad84 = add i32 %v0_ad80, 4
  %v2_ad84 = inttoptr i32 %v1_ad84 to i16*
  %v3_ad84 = load i16, i16* %v2_ad84, align 2
  %v4_ad84 = zext i16 %v3_ad84 to i32
  store i32 %v4_ad84, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v0_ad8c = load i32, i32* @r6, align 4
  store i32 %v0_ad8c, i32* %r0.global-to-local, align 4
  %v4_ad90 = call i32 @function_e5f4(i32 %v0_ad8c, i32 %v0_ad80, i32 %v4_ad84, i32 %stack_var_-124.0.ph)
  %v5_ad90 = trunc i32 %v4_ad90 to i16
  store i32 %v4_ad90, i32* %r0.global-to-local, align 4
  %v3_ad94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ad94, i32* %r2.global-to-local, align 4
  %v3_ad98 = mul i32 %v3_ad94, 32
  store i32 %v3_ad98, i32* %r3.global-to-local, align 4
  %v0_ad9c = load i32, i32* @r5, align 4
  %v1_ad9c = add i32 %v0_ad9c, 16
  %v2_ad9c = inttoptr i32 %v1_ad9c to i32*
  %v3_ad9c = load i32, i32* %v2_ad9c, align 4
  %v5_ada0 = mul i32 %v3_ad94, 24
  store i32 %v5_ada0, i32* %r3.global-to-local, align 4
  %v1_ada4 = load i32, i32* @sb, align 4
  %v2_ada4 = add i32 %v1_ada4, %v5_ada0
  store i32 %v2_ada4, i32* @lr, align 4
  %v2_ada8 = add i32 %v2_ada4, 4
  %v3_ada8 = inttoptr i32 %v2_ada8 to i32*
  store i32 %v3_ad9c, i32* %v3_ada8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_adb4 = load i32, i32* @r8, align 4
  %v4_adb4 = add i32 %v3_adb4, 6
  %v5_adb4 = inttoptr i32 %v4_adb4 to i16*
  store i16 %v5_ad90, i16* %v5_adb4, align 2
  %v0_adbc = load i32, i32* %r1.global-to-local, align 4
  %v1_adbc = trunc i32 %v0_adbc to i16
  %v2_adbc = load i32, i32* %r3.global-to-local, align 4
  %v3_adbc = load i32, i32* @sb, align 4
  %v4_adbc = add i32 %v3_adbc, %v2_adbc
  %v5_adbc = inttoptr i32 %v4_adbc to i16*
  store i16 %v1_adbc, i16* %v5_adbc, align 2
  %v0_adc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_adc0 = trunc i32 %v0_adc0 to i16
  %v2_adc0 = load i32, i32* @lr, align 4
  %v3_adc0 = add i32 %v2_adc0, 2
  %v4_adc0 = inttoptr i32 %v3_adc0 to i16*
  store i16 %v1_adc0, i16* %v4_adc0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_adc8 = load i32, i32* @r5, align 4
  store i32 %v0_adc8, i32* @r1, align 4
  store i32 %v3_a9d4, i32* @r0, align 4
  store i32 %stack_var_-120.0.ph, i32* @r2, align 4
  %v0_addc = call i32 @function_15560()
  %v3_ade0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ade0, i32* %r3.global-to-local, align 4
  %v1_ade4 = add i32 %v3_ade0, 1
  store i32 %v1_ade4, i32* %r0.global-to-local, align 4
  %v1_ade8 = load i32, i32* @sl, align 4
  %v9_ade8 = icmp eq i32 %v1_ade4, %v1_ade8
  store i1 %v9_ade8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ade4, i32* %stack_var_-44, align 4
  %v6_adf0 = icmp slt i32 %v1_ade4, %v1_ade8
  br i1 %v6_adf0, label %dec_label_pc_ac70, label %dec_label_pc_ac5c

dec_label_pc_adf8:                                ; preds = %dec_label_pc_ac70
  %v1_adf8 = add i32 %v2_ac78, 16
  %v2_adf8 = inttoptr i32 %v1_adf8 to i32*
  %v3_adf8 = load i32, i32* %v2_adf8, align 4
  store i32 %v3_adf8, i32* %r0.global-to-local, align 4
  %v1_adfc = call i32 @function_15498(i32 %v3_adf8)
  store i32 %v1_adfc, i32* %r0.global-to-local, align 4
  store i32 %v1_adfc, i32* %r4.global-to-local, align 4
  %v0_ae04 = call i32 @function_10038()
  store i32 %v0_ae04, i32* %r0.global-to-local, align 4
  %v3_ae08 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ae08, i32* %r2.global-to-local, align 4
  %v5_ae10 = mul i32 %v3_ae08, 24
  %v1_ae14 = load i32, i32* @sb, align 4
  %v2_ae14 = add i32 %v1_ae14, %v5_ae10
  store i32 %v2_ae14, i32* %r3.global-to-local, align 4
  %v1_ae18 = add i32 %v2_ae14, 20
  %v2_ae18 = inttoptr i32 %v1_ae18 to i8*
  %v3_ae18 = load i8, i8* %v2_ae18, align 1
  %v4_ae18 = zext i8 %v3_ae18 to i32
  store i32 %v4_ae18, i32* %r2.global-to-local, align 4
  %v0_ae1c = load i32, i32* %r4.global-to-local, align 4
  %v7_ae1c = lshr i32 %v0_ae04, %v4_ae18
  %v8_ae1c = add i32 %v7_ae1c, %v0_ae1c
  store i32 %v8_ae1c, i32* %r0.global-to-local, align 4
  %v1_ae20 = call i32 @function_152f0(i32 %v8_ae1c)
  store i32 %v1_ae20, i32* %r0.global-to-local, align 4
  store i32 %v5_a9c0, i32* %r2.global-to-local, align 4
  store i1 %v8_ae28, i1* %cpsr_z.global-to-local, align 1
  %v1_ae2c = load i32, i32* @r5, align 4
  %v2_ae2c = add i32 %v1_ae2c, 16
  %v3_ae2c = inttoptr i32 %v2_ae2c to i32*
  store i32 %v1_ae20, i32* %v3_ae2c, align 4
  br i1 %v3_ae28, label %dec_label_pc_ae34, label %dec_label_pc_aca8

dec_label_pc_ae34:                                ; preds = %dec_label_pc_adf8, %dec_label_pc_ac9c
  %v0_ae34 = call i32 @function_10038()
  store i32 %v0_ae34, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  %v0_ae40 = load i32, i32* @fp, align 4
  %v9_ae40 = icmp eq i32 %v0_ae40, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  store i1 %v9_ae40, i1* %cpsr_z.global-to-local, align 1
  %v1_ae44 = load i32, i32* @r5, align 4
  %v2_ae44 = add i32 %v1_ae44, 12
  %v3_ae44 = inttoptr i32 %v2_ae44 to i32*
  store i32 %v0_ae34, i32* %v3_ae44, align 4
  br i1 %v9_ae40, label %dec_label_pc_ae4c, label %dec_label_pc_ae34.dec_label_pc_acb8_crit_edge

dec_label_pc_ae34.dec_label_pc_acb8_crit_edge:    ; preds = %dec_label_pc_ae34
  %v1_acbc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_acb8

dec_label_pc_ae4c:                                ; preds = %dec_label_pc_ae34, %dec_label_pc_aca8
  %v0_ae4c = call i32 @function_10038()
  %v3_ae54 = urem i32 %v0_ae4c, 65536
  store i32 %v3_ae54, i32* %r0.global-to-local, align 4
  %v1_ae5c = sub nsw i32 999, %v3_ae54
  store i32 %v1_ae5c, i32* %r3.global-to-local, align 4
  %v1_ae60 = trunc i32 %v0_ae4c to i16
  %v2_ae60 = load i32, i32* @r5, align 4
  %v3_ae60 = add i32 %v2_ae60, 4
  %v4_ae60 = inttoptr i32 %v3_ae60 to i16*
  store i16 %v1_ae60, i16* %v4_ae60, align 2
  %v0_ae64 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae64 = trunc i32 %v0_ae64 to i16
  %v2_ae64 = load i32, i32* @r6, align 4
  %v3_ae64 = add i32 %v2_ae64, 4
  %v4_ae64 = inttoptr i32 %v3_ae64 to i16*
  store i16 %v1_ae64, i16* %v4_ae64, align 2
  store i32 %v3_aa1c, i32* %r3.global-to-local, align 4
  %v1_ae6c = load i32, i32* @r4, align 4
  %v9_ae6c = icmp eq i32 %v3_aa1c, %v1_ae6c
  store i1 %v9_ae6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ae6c, label %dec_label_pc_ae74, label %dec_label_pc_acc4

dec_label_pc_ae74:                                ; preds = %dec_label_pc_ae4c, %dec_label_pc_acb8
  %v0_ae74 = call i32 @function_10038()
  %v1_ae74 = trunc i32 %v0_ae74 to i16
  store i32 %v0_ae74, i32* %r0.global-to-local, align 4
  store i32 %v3_aa20, i32* %r1.global-to-local, align 4
  %v1_ae7c = load i32, i32* @r4, align 4
  %v9_ae7c = icmp eq i32 %v3_aa20, %v1_ae7c
  store i1 %v9_ae7c, i1* %cpsr_z.global-to-local, align 1
  %v3_ae80 = load i32, i32* @r5, align 4
  %v4_ae80 = add i32 %v3_ae80, 58
  %v5_ae80 = inttoptr i32 %v4_ae80 to i16*
  store i16 %v1_ae74, i16* %v5_ae80, align 2
  br i1 %v9_ae7c, label %dec_label_pc_ae88, label %dec_label_pc_acd0

dec_label_pc_ae88:                                ; preds = %dec_label_pc_ae74, %dec_label_pc_acc4
  %v0_ae88 = call i32 @function_10038()
  %v1_ae88 = trunc i32 %v0_ae88 to i16
  store i32 %v0_ae88, i32* %r0.global-to-local, align 4
  store i32 %v1_aa24, i32* %r2.global-to-local, align 4
  store i1 %v2_ae90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ae90, label %.thread18, label %bb56

.thread18:                                        ; preds = %dec_label_pc_ae88
  %v3_ae9819 = load i32, i32* @r8, align 4
  %v4_ae9820 = add i32 %v3_ae9819, 2
  %v5_ae9821 = inttoptr i32 %v4_ae9820 to i16*
  store i16 %v1_ae88, i16* %v5_ae9821, align 2
  br label %dec_label_pc_aea4

bb56:                                             ; preds = %dec_label_pc_ae88
  %v1_ae94 = load i32, i32* @r5, align 4
  %v2_ae94 = add i32 %v1_ae94, 16
  %v3_ae94 = inttoptr i32 %v2_ae94 to i32*
  %v4_ae94 = load i32, i32* %v3_ae94, align 4
  store i32 %v4_ae94, i32* %r3.global-to-local, align 4
  %v3_ae98 = load i32, i32* @r8, align 4
  %v4_ae98 = add i32 %v3_ae98, 2
  %v5_ae98 = inttoptr i32 %v4_ae98 to i16*
  store i16 %v1_ae88, i16* %v5_ae98, align 2
  %v1_ae9c = load i32, i32* %r3.global-to-local, align 4
  %v2_ae9c = load i32, i32* @r6, align 4
  %v3_ae9c = add i32 %v2_ae9c, 16
  %v4_ae9c = inttoptr i32 %v3_ae9c to i32*
  store i32 %v1_ae9c, i32* %v4_ae9c, align 4
  br label %dec_label_pc_ace4

dec_label_pc_aea4:                                ; preds = %.thread18, %dec_label_pc_acd0
  %v0_aea4 = call i32 @function_10038()
  store i32 %v0_aea4, i32* %r0.global-to-local, align 4
  %v1_aea8 = load i32, i32* @r6, align 4
  %v2_aea8 = add i32 %v1_aea8, 16
  %v3_aea8 = inttoptr i32 %v2_aea8 to i32*
  store i32 %v0_aea4, i32* %v3_aea8, align 4
  br label %dec_label_pc_ace4

dec_label_pc_aeb0:                                ; preds = %dec_label_pc_ace4
  %v0_aeb0 = load i32, i32* @r8, align 4
  %v1_aeb0 = add i32 %v0_aeb0, 8
  store i32 %v1_aeb0, i32* %r0.global-to-local, align 4
  store i32 %v5_a96c, i32* %r1.global-to-local, align 4
  %v2_aeb8 = inttoptr i32 %v1_aeb0 to i16*
  %v3_aeb8 = call i32 @function_10238(i16* %v2_aeb8, i32 %v5_a96c)
  store i32 %v3_aeb8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ad48

dec_label_pc_aec0:                                ; preds = %dec_label_pc_aa0c
  %v1_aec8 = add i32 %v5_a96c, 8
  store i32 %v1_aec8, i32* %r2.global-to-local, align 4
  %v1_aecc = add i32 %v5_a96c, 66
  store i32 %v1_aecc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ac5c.preheader

; uselistorder directives
  uselistorder i32 %v1_aecc, { 1, 0 }
  uselistorder i32 %v1_aec8, { 1, 0 }
  uselistorder i16 %v1_ae88, { 1, 0 }
  uselistorder i32 %v0_ae88, { 1, 0 }
  uselistorder i32 %v0_ae74, { 1, 0 }
  uselistorder i32 %v1_ae6c, { 1, 0 }
  uselistorder i32 %v3_ae54, { 1, 0 }
  uselistorder i32 %v0_ae4c, { 1, 0 }
  uselistorder i32 %v1_ade8, { 1, 2, 0 }
  uselistorder i32 %v1_ade4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_ad94, { 1, 0, 2 }
  uselistorder i32 %v4_ad90, { 1, 0 }
  uselistorder i32 %v2_ad70, { 1, 0 }
  uselistorder i32 %v7_ac84, { 2, 1, 0, 3 }
  uselistorder i1 %v2_ae90, { 2, 3, 1, 0 }
  uselistorder i32 %v1_ac24, { 1, 0 }
  uselistorder i32 %v1_ac14, { 1, 0 }
  uselistorder i32 %v0_abfc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_abe4, { 1, 0 }
  uselistorder i32 %v1_ab70, { 1, 0 }
  uselistorder i32 %v0_ab30, { 1, 0, 2 }
  uselistorder i32 %v1_ab0c, { 1, 0 }
  uselistorder i32 %v4_aac8, { 1, 0 }
  uselistorder i32 %v1_aac4, { 0, 2, 1 }
  uselistorder i32 %v4_abec, { 1, 0 }
  uselistorder i1 %v2_abf0, { 1, 0 }
  uselistorder i32 %v4_abcc, { 1, 0 }
  uselistorder i32 %v3_aa6c, { 2, 1, 0 }
  uselistorder i32 %v3_aa64, { 2, 1, 0 }
  uselistorder i32 %v3_aa60, { 2, 1, 0 }
  uselistorder i32 %v3_aa4c, { 2, 1, 0 }
  uselistorder i32 %v3_aa2c, { 1, 0 }
  uselistorder i32 %v1_aa24, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_aa14, { 1, 0 }
  uselistorder i1 %v7_aa04, { 1, 0 }
  uselistorder i1 %v7_a9d8, { 1, 0 }
  uselistorder i32 %v3_a9d4, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v5_a9c0, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v5_a96c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_a920, { 1, 0, 2 }
  uselistorder i8 %v5_a8d8, { 2, 0, 1 }
  uselistorder i32 %v2_a8a0, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 14, 15, 16, 19, 20, 21, 23, 22, 24, 25, 27, 26, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 5, 6, 4, 7, 9, 8, 10, 13, 11, 12, 15, 14, 16, 18, 17, 19, 20, 21, 22, 24, 23, 25, 27, 26, 29, 28, 44, 43, 45, 48, 46, 31, 30, 32, 33, 34, 36, 35, 37, 39, 38, 40, 41, 42, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 14, 15, 16, 17, 20, 21, 22 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ad48, { 1, 0 }
  uselistorder label %dec_label_pc_ace4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ac5c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ac5c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_ac38, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
  uselistorder label %dec_label_pc_aa88, { 1, 0 }
}

define i32 @function_aee0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_aee0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_aee0 = load i32, i32* @r4, align 4
  %v18_aee0 = load i32, i32* @sb, align 4
  %v24_aee0 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_aefc = call i32 @function_13cd4(i32 %arg1, i32 4)
  %v0_af00 = load i32, i32* @r5, align 4
  store i32 %v0_af00, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_af10 = load i32, i32* @r4, align 4
  %v5_af14 = inttoptr i32 %v0_af00 to i32*
  %v6_af14 = call i32 @function_a430(i32 %v0_af10, i32* %v5_af14, i32 2, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_af2c = load i32, i32* @r5, align 4
  store i32 %v0_af2c, i32* %r1.global-to-local, align 4
  %v0_af30 = load i32, i32* @r4, align 4
  %v5_af34 = trunc i32 %v6_af14 to i8
  %v6_af38 = inttoptr i32 %v0_af2c to i32*
  %v7_af38 = call i32 @function_a430(i32 %v0_af30, i32* %v6_af38, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_af3c = load i32, i32* @r5, align 4
  store i32 %v0_af3c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_af38, i32* %fp.global-to-local, align 4
  %v0_af4c = load i32, i32* @r4, align 4
  %v4_af50 = inttoptr i32 %v0_af3c to i32*
  %v5_af50 = call i32 @function_a430(i32 %v0_af4c, i32* %v4_af50, i32 4, i32 64)
  %v0_af5c = load i32, i32* @r5, align 4
  store i32 %v0_af5c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_af68 = load i32, i32* @r4, align 4
  %v6_af70 = inttoptr i32 %v0_af5c to i32*
  %v7_af70 = call i32 @function_a430(i32 %v0_af68, i32* %v6_af70, i32 5, i32 1)
  %v1_af7c = urem i32 %v7_af70, 256
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_af88 = load i32, i32* @r5, align 4
  store i32 %v0_af88, i32* %r1.global-to-local, align 4
  %v0_af8c = load i32, i32* @r4, align 4
  %v5_af94 = inttoptr i32 %v0_af88 to i32*
  %v6_af94 = call i32 @function_a430(i32 %v0_af8c, i32* %v5_af94, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_af9c = load i32, i32* @r5, align 4
  store i32 %v0_af9c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_af94, i32* %sb.global-to-local, align 4
  %v0_afac = load i32, i32* @r4, align 4
  %v4_afb0 = inttoptr i32 %v0_af9c to i32*
  %v5_afb0 = call i32 @function_a430(i32 %v0_afac, i32* %v4_afb0, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_afb4 = load i32, i32* @r5, align 4
  store i32 %v0_afb4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_afb0, i32* @r7, align 4
  %v0_afc4 = load i32, i32* @r4, align 4
  %v4_afc8 = inttoptr i32 %v0_afb4 to i32*
  %v5_afc8 = call i32 @function_a430(i32 %v0_afc4, i32* %v4_afc8, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_afd8 = load i32, i32* @r5, align 4
  store i32 %v0_afd8, i32* %r1.global-to-local, align 4
  %v0_afdc = load i32, i32* @r4, align 4
  %v4_afe0 = inttoptr i32 %v0_afd8 to i32*
  %v5_afe0 = call i32 @function_a430(i32 %v0_afdc, i32* %v4_afe0, i32 1, i32 1)
  %v1_afe8 = urem i32 %v5_afe0, 256
  %v0_afec = load i32, i32* @r5, align 4
  store i32 %v0_afec, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_aff8 = load i32, i32* @r4, align 4
  %v5_b000 = inttoptr i32 %v0_afec to i32*
  %v6_b000 = call i32 @function_a430(i32 %v0_aff8, i32* %v5_b000, i32 19, i32 0)
  %v0_b008 = load i32, i32* @r5, align 4
  store i32 %v0_b008, i32* %r1.global-to-local, align 4
  %v2_b00c = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_b00c, i32* %r3.global-to-local, align 4
  store i32 %v6_b000, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b018 = load i32, i32* @r4, align 4
  %v4_b01c = inttoptr i32 %v0_b008 to i32*
  %v5_b01c = call i32 @function_a430(i32 %v0_b018, i32* %v4_b01c, i32 25, i32 %v2_b00c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b030 = call i32 @function_1561c(i32 2, i32 3, i32 6)
  store i32 %v3_b030, i32* @r0, align 4
  %v7_b034 = icmp eq i32 %v3_b030, -1
  store i1 %v7_b034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b034, label %dec_label_pc_b274, label %dec_label_pc_b040

dec_label_pc_b040:                                ; preds = %dec_label_pc_aee0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b048 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b048, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_b05c = call i32 @function_155ac(i32 %v3_b030, i32 0, i32 3, i32 %v6_b048, i32 4)
  %v7_b060 = icmp eq i32 %v5_b05c, -1
  store i1 %v7_b060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b060, label %dec_label_pc_b26c, label %dec_label_pc_b068

dec_label_pc_b068:                                ; preds = %dec_label_pc_b040
  %v0_b068 = load i32, i32* %sb.global-to-local, align 4
  %v0_b06c = load i32, i32* @r7, align 4
  %v0_b070 = load i32, i32* %fp.global-to-local, align 4
  %v3_b070 = mul i32 %v0_b070, 65536
  store i32 %v3_b070, i32* %r3.global-to-local, align 4
  %v3_b078 = urem i32 %v0_b068, 65536
  store i32 %v3_b078, i32* %r2.global-to-local, align 4
  %v3_b07c = urem i32 %v0_b06c, 65536
  store i32 %v3_b07c, i32* %r1.global-to-local, align 4
  %v0_b080 = load i32, i32* @r6, align 4
  %v1_b080 = urem i32 %v0_b080, 256
  store i32 %v1_b080, i32* @r6, align 4
  %v0_b084 = load i32, i32* @r8, align 4
  %v2_b084 = icmp eq i32 %v0_b084, 0
  store i1 %v2_b084, i1* %cpsr_z.global-to-local, align 1
  %v3_b088 = urem i32 %v0_b070, 65536
  store i32 %v3_b088, i32* @sb, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b084, label %dec_label_pc_b4a4, label %dec_label_pc_b0a0

dec_label_pc_b0a0:                                ; preds = %dec_label_pc_b068
  %v3_b0a8 = mul i32 %v5_afc8, 65536
  %v1_b0ac = add i32 %v3_b0a8, 524288
  %v1_b0b0 = add i32 %v3_b0a8, 3407872
  %v1_b0b8 = add i32 %v3_b0a8, 1835008
  %v3_b0bc = udiv i32 %v1_b0b0, 65536
  store i32 %v3_b0bc, i32* %r1.global-to-local, align 4
  %v3_b0c0 = udiv i32 %v1_b0b8, 65536
  store i32 %v3_b0c0, i32* %r3.global-to-local, align 4
  %v3_b0c4 = xor i32 %v3_b088, 65535
  store i32 %v3_b0c4, i32* %r2.global-to-local, align 4
  %v3_b0c8 = udiv i32 %v1_b0ac, 65536
  store i32 %v3_b0c8, i32* @fp, align 4
  store i32 0, i32* @r4, align 4
  %v4_b20c = sext i8 %v5_af34 to i32
  %v2_b230 = icmp eq i32 %v1_af7c, 0
  %v2_b17c = icmp eq i32 %v1_b080, 0
  %sext = mul i32 %v5_af50, 16777216
  %v4_b22c = sdiv i32 %sext, 16777216
  br label %dec_label_pc_b1cc

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_b1cc, %dec_label_pc_b24c
  %v2_b0e4 = phi i32 [ %v0_b23c, %dec_label_pc_b1cc ], [ %v2_b0e4.pre, %dec_label_pc_b24c ]
  %v3_b0e4 = add i32 %v2_b0e4, 9
  %v4_b0e4 = inttoptr i32 %v3_b0e4 to i8*
  store i8 47, i8* %v4_b0e4, align 1
  %v3_b0e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b0e8, i32* %r2.global-to-local, align 4
  store i32 %v5_b01c, i32* %r1.global-to-local, align 4
  %v3_b0f0 = mul i32 %v3_b0e8, 32
  store i32 %v3_b0f0, i32* %r3.global-to-local, align 4
  %v1_b0f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_b0f4 = add i32 %v1_b0f4, 12
  %v3_b0f4 = inttoptr i32 %v2_b0f4 to i32*
  store i32 %v5_b01c, i32* %v3_b0f4, align 4
  %v0_b0f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0f8 = load i32, i32* %r2.global-to-local, align 4
  %tmp = mul i32 %v1_b0f8, -8
  %v5_b0f8 = add i32 %v0_b0f8, %tmp
  %v1_b0fc = load i32, i32* @sl, align 4
  %v2_b0fc = add i32 %v1_b0fc, %v5_b0f8
  store i32 %v2_b0fc, i32* %r3.global-to-local, align 4
  %v1_b100 = add i32 %v2_b0fc, 16
  %v2_b100 = inttoptr i32 %v1_b100 to i32*
  %v3_b100 = load i32, i32* %v2_b100, align 4
  store i32 %v3_b100, i32* %r2.global-to-local, align 4
  %v1_b108 = load i32, i32* %r4.global-to-local, align 4
  %v2_b108 = add i32 %v1_b108, 16
  %v3_b108 = inttoptr i32 %v2_b108 to i32*
  store i32 %v3_b100, i32* %v3_b108, align 4
  %v1_b10c = call i32 @function_15314(i32 2048)
  %v2_b10c = trunc i32 %v1_b10c to i16
  %v3_b110 = load i32, i32* @r7, align 4
  %v4_b110 = add i32 %v3_b110, 2
  %v5_b110 = inttoptr i32 %v4_b110 to i16*
  store i16 %v2_b10c, i16* %v5_b110, align 2
  %v0_b114 = load i32, i32* %r4.global-to-local, align 4
  %v1_b114 = add i32 %v0_b114, 24
  %v2_b114 = inttoptr i32 %v1_b114 to i8*
  %v3_b114 = load i8, i8* %v2_b114, align 1
  %tmp51 = urem i8 %v3_b114, 16
  %v1_b118 = zext i8 %tmp51 to i32
  %v1_b11c = or i32 %v1_b118, 64
  store i32 %v1_b11c, i32* %r3.global-to-local, align 4
  %v1_b120 = trunc i32 %v1_b11c to i8
  store i8 %v1_b120, i8* %v2_b114, align 1
  %v0_b124 = load i32, i32* %r4.global-to-local, align 4
  %v1_b124 = add i32 %v0_b124, 24
  %v2_b124 = inttoptr i32 %v1_b124 to i8*
  %v3_b124 = load i8, i8* %v2_b124, align 1
  %v1_b128 = and i8 %v3_b124, -16
  %v1_b12c = or i8 %v1_b128, 5
  store i8 %v1_b12c, i8* %v2_b124, align 1
  store i32 %v4_b20c, i32* %r2.global-to-local, align 4
  %v2_b138 = load i32, i32* @r5, align 4
  %v3_b138 = add i32 %v2_b138, 1
  %v4_b138 = inttoptr i32 %v3_b138 to i8*
  store i8 %v5_af34, i8* %v4_b138, align 1
  %v1_b140 = call i32 @function_15314(i32 %v3_b0c0)
  %v2_b140 = trunc i32 %v1_b140 to i16
  %v3_b144 = load i32, i32* @r5, align 4
  %v4_b144 = add i32 %v3_b144, 2
  %v5_b144 = inttoptr i32 %v4_b144 to i16*
  store i16 %v2_b140, i16* %v5_b144, align 2
  %v1_b14c = call i32 @function_15314(i32 %v3_b0c4)
  %v2_b14c = trunc i32 %v1_b14c to i16
  store i32 %v4_b22c, i32* %r1.global-to-local, align 4
  store i32 %v1_af7c, i32* %r3.global-to-local, align 4
  store i1 %v2_b230, i1* %cpsr_z.global-to-local, align 1
  %v3_b15c = load i32, i32* @r5, align 4
  %v4_b15c = add i32 %v3_b15c, 4
  %v5_b15c = inttoptr i32 %v4_b15c to i16*
  store i16 %v2_b14c, i16* %v5_b15c, align 2
  %v0_b160 = load i32, i32* %r1.global-to-local, align 4
  %v1_b160 = trunc i32 %v0_b160 to i8
  %v2_b160 = load i32, i32* @r5, align 4
  %v3_b160 = add i32 %v2_b160, 8
  %v4_b160 = inttoptr i32 %v3_b160 to i8*
  store i8 %v1_b160, i8* %v4_b160, align 1
  %v0_b164 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b164, label %dec_label_pc_b168, label %dec_label_pc_b25c

dec_label_pc_b168:                                ; preds = %dec_label_pc_b0e0, %dec_label_pc_b25c
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_b16c = load i32, i32* @r5, align 4
  %v3_b16c = add i32 %v2_b16c, 9
  %v4_b16c = inttoptr i32 %v3_b16c to i8*
  store i8 17, i8* %v4_b16c, align 1
  %v0_b170 = call i32 @function_10038()
  store i32 %v1_b080, i32* %r2.global-to-local, align 4
  store i1 %v2_b17c, i1* %cpsr_z.global-to-local, align 1
  %v1_b180 = sub i32 1023, %v0_b170
  store i32 %v1_b180, i32* %r3.global-to-local, align 4
  br i1 %v2_b17c, label %.thread, label %.thread3

.thread:                                          ; preds = %dec_label_pc_b168
  %v2_b188 = load i32, i32* @r5, align 4
  %v3_b188 = add i32 %v2_b188, 16
  %v4_b188 = inttoptr i32 %v3_b188 to i32*
  store i32 %v1_b180, i32* %v4_b188, align 4
  br label %bb

.thread3:                                         ; preds = %dec_label_pc_b168
  %v1_b184 = load i32, i32* %r4.global-to-local, align 4
  %v2_b184 = add i32 %v1_b184, 16
  %v3_b184 = inttoptr i32 %v2_b184 to i32*
  %v4_b184 = load i32, i32* %v3_b184, align 4
  store i32 %v4_b184, i32* %r3.global-to-local, align 4
  %v2_b18c = load i32, i32* @r5, align 4
  %v3_b18c = add i32 %v2_b18c, 16
  %v4_b18c = inttoptr i32 %v3_b18c to i32*
  store i32 %v4_b184, i32* %v4_b18c, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread3
  %v1_b190 = load i32, i32* @r5, align 4
  %v2_b190 = add i32 %v1_b190, 12
  %v3_b190 = inttoptr i32 %v2_b190 to i32*
  store i32 %v0_b170, i32* %v3_b190, align 4
  %v1_b198 = call i32 @function_15314(i32 %v3_b078)
  %v2_b198 = trunc i32 %v1_b198 to i16
  %v3_b19c = load i32, i32* @r6, align 4
  %v4_b19c = inttoptr i32 %v3_b19c to i16*
  store i16 %v2_b198, i16* %v4_b19c, align 2
  %v1_b1a4 = call i32 @function_15314(i32 %v3_b07c)
  %v2_b1a4 = trunc i32 %v1_b1a4 to i16
  %v3_b1a8 = load i32, i32* @r6, align 4
  %v4_b1a8 = add i32 %v3_b1a8, 2
  %v5_b1a8 = inttoptr i32 %v4_b1a8 to i16*
  store i16 %v2_b1a4, i16* %v5_b1a8, align 2
  %v0_b1ac = load i32, i32* @fp, align 4
  %v1_b1b0 = call i32 @function_15314(i32 %v0_b1ac)
  %v2_b1b0 = trunc i32 %v1_b1b0 to i16
  %v3_b1b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b1b4, i32* %r3.global-to-local, align 4
  %v1_b1b8 = add i32 %v3_b1b4, 1
  store i32 %v1_b1b8, i32* @r4, align 4
  %v1_b1bc = load i32, i32* @r8, align 4
  %v9_b1bc = icmp eq i32 %v1_b1b8, %v1_b1bc
  store i1 %v9_b1bc, i1* %cpsr_z.global-to-local, align 1
  %v3_b1c0 = load i32, i32* @r6, align 4
  %v4_b1c0 = add i32 %v3_b1c0, 4
  %v5_b1c0 = inttoptr i32 %v4_b1c0 to i16*
  store i16 %v2_b1b0, i16* %v5_b1c0, align 2
  %v0_b1c4 = load i32, i32* @r4, align 4
  store i32 %v0_b1c4, i32* %stack_var_-44, align 4
  %v6_b1c8 = icmp slt i32 %v1_b1b8, %v1_b1bc
  br i1 %v6_b1c8, label %dec_label_pc_b1cc, label %dec_label_pc_b280

dec_label_pc_b1cc:                                ; preds = %bb, %dec_label_pc_b0a0
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_b1d8 = call i32 @function_13cd4(i32 1510, i32 4)
  store i32 %v2_aefc, i32* %r2.global-to-local, align 4
  %v3_b1e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b1e0, i32* %r3.global-to-local, align 4
  %v2_b1e4 = load i32, i32* @r4, align 4
  %v5_b1e4 = mul i32 %v2_b1e4, 4
  %v6_b1e4 = add i32 %v5_b1e4, %v2_aefc
  %v7_b1e4 = inttoptr i32 %v6_b1e4 to i32*
  store i32 %v2_b1d8, i32* %v7_b1e4, align 4
  %v0_b1e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b1e8 = load i32, i32* %r3.global-to-local, align 4
  %v4_b1e8 = mul i32 %v1_b1e8, 4
  %v5_b1e8 = add i32 %v4_b1e8, %v0_b1e8
  %v6_b1e8 = inttoptr i32 %v5_b1e8 to i32*
  %v7_b1e8 = load i32, i32* %v6_b1e8, align 4
  store i32 %v7_b1e8, i32* %r4.global-to-local, align 4
  %v1_b1ec = inttoptr i32 %v7_b1e8 to i8*
  %v2_b1ec = load i8, i8* %v1_b1ec, align 1
  %tmp52 = urem i8 %v2_b1ec, 16
  %v1_b1f0 = zext i8 %tmp52 to i32
  %v1_b1f4 = or i32 %v1_b1f0, 64
  store i32 %v1_b1f4, i32* %r2.global-to-local, align 4
  %v1_b1f8 = trunc i32 %v1_b1f4 to i8
  store i8 %v1_b1f8, i8* %v1_b1ec, align 1
  %v0_b1fc = load i32, i32* %r4.global-to-local, align 4
  %v1_b1fc = inttoptr i32 %v0_b1fc to i8*
  %v2_b1fc = load i8, i8* %v1_b1fc, align 1
  %v1_b200 = and i8 %v2_b1fc, -16
  %v1_b204 = or i8 %v1_b200, 5
  store i8 %v1_b204, i8* %v1_b1fc, align 1
  store i32 %v4_b20c, i32* %r3.global-to-local, align 4
  %v2_b210 = load i32, i32* %r4.global-to-local, align 4
  %v3_b210 = add i32 %v2_b210, 1
  %v4_b210 = inttoptr i32 %v3_b210 to i8*
  store i8 %v5_af34, i8* %v4_b210, align 1
  %v1_b218 = call i32 @function_15314(i32 %v3_b0bc)
  %v2_b218 = trunc i32 %v1_b218 to i16
  %v3_b21c = load i32, i32* %r4.global-to-local, align 4
  %v4_b21c = add i32 %v3_b21c, 2
  %v5_b21c = inttoptr i32 %v4_b21c to i16*
  store i16 %v2_b218, i16* %v5_b21c, align 2
  %v0_b220 = load i32, i32* @sb, align 4
  %v1_b224 = call i32 @function_15314(i32 %v0_b220)
  %v2_b224 = trunc i32 %v1_b224 to i16
  store i32 %v1_af7c, i32* %r1.global-to-local, align 4
  store i32 %v4_b22c, i32* %r2.global-to-local, align 4
  store i1 %v2_b230, i1* %cpsr_z.global-to-local, align 1
  %v3_b234 = load i32, i32* %r4.global-to-local, align 4
  %v4_b234 = add i32 %v3_b234, 4
  %v5_b234 = inttoptr i32 %v4_b234 to i16*
  store i16 %v2_b224, i16* %v5_b234, align 2
  %v0_b238 = load i32, i32* %r2.global-to-local, align 4
  %v1_b238 = trunc i32 %v0_b238 to i8
  %v2_b238 = load i32, i32* %r4.global-to-local, align 4
  %v3_b238 = add i32 %v2_b238, 8
  %v4_b238 = inttoptr i32 %v3_b238 to i8*
  store i8 %v1_b238, i8* %v4_b238, align 1
  %v0_b23c = load i32, i32* %r4.global-to-local, align 4
  %v1_b23c = add i32 %v0_b23c, 24
  store i32 %v1_b23c, i32* @r5, align 4
  %v1_b240 = add i32 %v0_b23c, 44
  store i32 %v1_b240, i32* @r6, align 4
  %v1_b244 = add i32 %v0_b23c, 20
  store i32 %v1_b244, i32* @r7, align 4
  %v0_b248 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b248, label %dec_label_pc_b0e0, label %dec_label_pc_b24c

dec_label_pc_b24c:                                ; preds = %dec_label_pc_b1cc
  %v1_b250 = call i32 @function_15314(i32 16384)
  %v2_b250 = trunc i32 %v1_b250 to i16
  %v3_b254 = load i32, i32* %r4.global-to-local, align 4
  %v4_b254 = add i32 %v3_b254, 6
  %v5_b254 = inttoptr i32 %v4_b254 to i16*
  store i16 %v2_b250, i16* %v5_b254, align 2
  %v2_b0e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b0e0

dec_label_pc_b25c:                                ; preds = %dec_label_pc_b0e0
  %v1_b260 = call i32 @function_15314(i32 16384)
  %v2_b260 = trunc i32 %v1_b260 to i16
  %v3_b264 = load i32, i32* @r5, align 4
  %v4_b264 = add i32 %v3_b264, 6
  %v5_b264 = inttoptr i32 %v4_b264 to i16*
  store i16 %v2_b260, i16* %v5_b264, align 2
  br label %dec_label_pc_b168

dec_label_pc_b26c:                                ; preds = %dec_label_pc_b040
  store i32 %v3_b030, i32* @r0, align 4
  %v1_b270 = call i32 @function_165e8(i32 %v3_b030)
  br label %dec_label_pc_b274

dec_label_pc_b274:                                ; preds = %dec_label_pc_aee0, %dec_label_pc_b26c
  %v1_b27c = phi i32 [ %v3_b030, %dec_label_pc_aee0 ], [ %v1_b270, %dec_label_pc_b26c ]
  store i32 %v3_aee0, i32* %r4.global-to-local, align 4
  store i32 %v18_aee0, i32* %sb.global-to-local, align 4
  store i32 %v24_aee0, i32* %fp.global-to-local, align 4
  ret i32 %v1_b27c

dec_label_pc_b280:                                ; preds = %bb
  store i32 %v5_afc8, i32* %r1.global-to-local, align 4
  %v1_b288 = add i32 %v5_afc8, 8
  store i32 %v1_b288, i32* %r3.global-to-local, align 4
  %v0_b298.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_b294.preheader

dec_label_pc_b294.preheader:                      ; preds = %dec_label_pc_b280, %dec_label_pc_b4a4
  %v0_b298.pre = phi i32 [ %v0_b298.pre.pre, %dec_label_pc_b280 ], [ 0, %dec_label_pc_b4a4 ]
  %stack_var_-108.0.ph = phi i32 [ %v1_b288, %dec_label_pc_b280 ], [ %v1_b4ac, %dec_label_pc_b4a4 ]
  %storemerge = add i32 %v5_afc8, 52
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  %v3_b404 = icmp eq i32 %v5_b01c, -1
  %v8_b404 = icmp eq i32 %v5_b01c, -1
  %v2_b46c = icmp eq i32 %v1_b080, 0
  %v2_b488 = icmp eq i32 %v1_afe8, 0
  br label %dec_label_pc_b294

dec_label_pc_b294:                                ; preds = %dec_label_pc_b294, %dec_label_pc_b324, %dec_label_pc_b294.preheader
  %v0_b298 = phi i32 [ %v0_b298.pre, %dec_label_pc_b294.preheader ], [ 0, %dec_label_pc_b294 ], [ %v1_b3c4, %dec_label_pc_b324 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b298 = icmp eq i32 %v0_b298, 0
  store i1 %v2_b298, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b298, label %dec_label_pc_b294, label %dec_label_pc_b2a4

dec_label_pc_b2a4:                                ; preds = %dec_label_pc_b294
  br label %dec_label_pc_b2a8

dec_label_pc_b2a8:                                ; preds = %dec_label_pc_b324, %dec_label_pc_b2a4
  %v1_b2bc = phi i32 [ %v1_b3c0, %dec_label_pc_b324 ], [ 0, %dec_label_pc_b2a4 ]
  %v5_b2ac = mul i32 %v1_b2bc, 24
  %v1_b2b0 = load i32, i32* @sl, align 4
  %v2_b2b0 = add i32 %v1_b2b0, %v5_b2ac
  store i32 %v2_b2b0, i32* %r3.global-to-local, align 4
  store i32 %v2_aefc, i32* %r1.global-to-local, align 4
  %v1_b2b8 = add i32 %v2_b2b0, 20
  %v2_b2b8 = inttoptr i32 %v1_b2b8 to i8*
  %v3_b2b8 = load i8, i8* %v2_b2b8, align 1
  %v4_b2b8 = zext i8 %v3_b2b8 to i32
  store i32 %v4_b2b8, i32* %r2.global-to-local, align 4
  %v4_b2bc = mul i32 %v1_b2bc, 4
  %v5_b2bc = add i32 %v4_b2bc, %v2_aefc
  %v6_b2bc = inttoptr i32 %v5_b2bc to i32*
  %v7_b2bc = load i32, i32* %v6_b2bc, align 4
  store i32 %v7_b2bc, i32* @r5, align 4
  %v7_b2c0 = icmp eq i8 %v3_b2b8, 31
  store i1 %v7_b2c0, i1* %cpsr_z.global-to-local, align 1
  %v1_b2c4 = add i32 %v7_b2bc, 24
  store i32 %v1_b2c4, i32* @r6, align 4
  %v1_b2c8 = add i32 %v7_b2bc, 44
  store i32 %v1_b2c8, i32* @r7, align 4
  %tmp53 = icmp ult i8 %v3_b2b8, 32
  br i1 %tmp53, label %dec_label_pc_b3d4, label %dec_label_pc_b2d0

dec_label_pc_b2d0:                                ; preds = %dec_label_pc_b2a8
  store i32 %v5_b01c, i32* %r2.global-to-local, align 4
  store i1 %v8_b404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_b404, label %dec_label_pc_b410, label %dec_label_pc_b2dc

dec_label_pc_b2dc:                                ; preds = %dec_label_pc_b3d4, %dec_label_pc_b2d0
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  %v0_b2e4 = load i32, i32* @sb, align 4
  %v9_b2e4 = icmp eq i32 %v0_b2e4, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  store i1 %v9_b2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2e4, label %dec_label_pc_b428, label %dec_label_pc_b2ec

dec_label_pc_b2ec:                                ; preds = %dec_label_pc_b410.dec_label_pc_b2ec_crit_edge, %dec_label_pc_b2dc
  %v1_b2f0 = phi i32 [ %v1_b2f0.pre, %dec_label_pc_b410.dec_label_pc_b2ec_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), %dec_label_pc_b2dc ]
  store i32 %v3_b078, i32* %r3.global-to-local, align 4
  %v9_b2f0 = icmp eq i32 %v3_b078, %v1_b2f0
  store i1 %v9_b2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2f0, label %dec_label_pc_b450, label %dec_label_pc_b2f8

dec_label_pc_b2f8:                                ; preds = %dec_label_pc_b428, %dec_label_pc_b2ec
  %v1_b2fc = phi i32 [ %v1_b448, %dec_label_pc_b428 ], [ %v1_b2f0, %dec_label_pc_b2ec ]
  store i32 %v3_b07c, i32* %r1.global-to-local, align 4
  %v9_b2fc = icmp eq i32 %v3_b07c, %v1_b2fc
  store i1 %v9_b2fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2fc, label %dec_label_pc_b464, label %dec_label_pc_b304

dec_label_pc_b304:                                ; preds = %dec_label_pc_b450, %dec_label_pc_b2f8
  store i32 %v1_b080, i32* %r2.global-to-local, align 4
  store i1 %v2_b46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b46c, label %dec_label_pc_b480, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_b304
  %v1_b30c = load i32, i32* @r5, align 4
  %v2_b30c = add i32 %v1_b30c, 16
  %v3_b30c = inttoptr i32 %v2_b30c to i32*
  %v4_b30c = load i32, i32* %v3_b30c, align 4
  store i32 %v4_b30c, i32* %r3.global-to-local, align 4
  %v2_b310 = load i32, i32* @r6, align 4
  %v3_b310 = add i32 %v2_b310, 16
  %v4_b310 = inttoptr i32 %v3_b310 to i32*
  store i32 %v4_b30c, i32* %v4_b310, align 4
  br label %dec_label_pc_b318

dec_label_pc_b318:                                ; preds = %bb50, %.thread4
  store i32 %v1_afe8, i32* %r3.global-to-local, align 4
  store i1 %v2_b488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b488, label %dec_label_pc_b324, label %dec_label_pc_b494

dec_label_pc_b324:                                ; preds = %dec_label_pc_b318, %dec_label_pc_b480, %dec_label_pc_b494
  %v2_b328 = load i32, i32* @r5, align 4
  %v3_b328 = add i32 %v2_b328, 10
  %v4_b328 = inttoptr i32 %v3_b328 to i16*
  store i16 0, i16* %v4_b328, align 2
  %v0_b32c = load i32, i32* @r5, align 4
  store i32 %v0_b32c, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_b334 = call i32 @function_e5a4(i32 %v0_b32c, i32 20)
  %v3_b334 = trunc i32 %v2_b334 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b33c = load i32, i32* @r5, align 4
  %v4_b33c = add i32 %v3_b33c, 10
  %v5_b33c = inttoptr i32 %v4_b33c to i16*
  store i16 %v3_b334, i16* %v5_b33c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b344 = load i32, i32* %r2.global-to-local, align 4
  %v1_b344 = trunc i32 %v0_b344 to i16
  %v2_b344 = load i32, i32* @r6, align 4
  %v3_b344 = add i32 %v2_b344, 10
  %v4_b344 = inttoptr i32 %v3_b344 to i16*
  store i16 %v1_b344, i16* %v4_b344, align 2
  %v0_b348 = load i32, i32* @r6, align 4
  store i32 %v0_b348, i32* @r0, align 4
  %v2_b34c = call i32 @function_e5a4(i32 %v0_b348, i32 20)
  %v3_b34c = trunc i32 %v2_b34c to i16
  %v3_b350 = load i32, i32* @r6, align 4
  %v4_b350 = add i32 %v3_b350, 10
  %v5_b350 = inttoptr i32 %v4_b350 to i16*
  store i16 %v3_b34c, i16* %v5_b350, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b358 = load i32, i32* @r7, align 4
  %v3_b358 = add i32 %v2_b358, 6
  %v4_b358 = inttoptr i32 %v3_b358 to i16*
  store i16 0, i16* %v4_b358, align 2
  %v0_b35c = load i32, i32* @r7, align 4
  store i32 %v0_b35c, i32* @r1, align 4
  %v1_b360 = add i32 %v0_b35c, 4
  %v2_b360 = inttoptr i32 %v1_b360 to i16*
  %v3_b360 = load i16, i16* %v2_b360, align 2
  %v4_b360 = zext i16 %v3_b360 to i32
  store i32 %v4_b360, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r3.global-to-local, align 4
  %v0_b368 = load i32, i32* @r6, align 4
  %v4_b36c = call i32 @function_e5f4(i32 %v0_b368, i32 %v0_b35c, i32 %v4_b360, i32 %stack_var_-108.0.ph)
  %v5_b36c = trunc i32 %v4_b36c to i16
  %v3_b370 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b370, i32* %r2.global-to-local, align 4
  %v3_b374 = mul i32 %v3_b370, 32
  store i32 %v3_b374, i32* %r3.global-to-local, align 4
  %v0_b378 = load i32, i32* @r5, align 4
  %v1_b378 = add i32 %v0_b378, 16
  %v2_b378 = inttoptr i32 %v1_b378 to i32*
  %v3_b378 = load i32, i32* %v2_b378, align 4
  %v5_b37c = mul i32 %v3_b370, 24
  store i32 %v5_b37c, i32* %r3.global-to-local, align 4
  %v1_b380 = load i32, i32* @sl, align 4
  %v2_b380 = add i32 %v1_b380, %v5_b37c
  store i32 %v2_b380, i32* @lr, align 4
  %v2_b384 = add i32 %v2_b380, 4
  %v3_b384 = inttoptr i32 %v2_b384 to i32*
  store i32 %v3_b378, i32* %v3_b384, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b390 = load i32, i32* @r7, align 4
  %v4_b390 = add i32 %v3_b390, 6
  %v5_b390 = inttoptr i32 %v4_b390 to i16*
  store i16 %v5_b36c, i16* %v5_b390, align 2
  %v0_b398 = load i32, i32* %r1.global-to-local, align 4
  %v1_b398 = trunc i32 %v0_b398 to i16
  %v2_b398 = load i32, i32* %r3.global-to-local, align 4
  %v3_b398 = load i32, i32* @sl, align 4
  %v4_b398 = add i32 %v3_b398, %v2_b398
  %v5_b398 = inttoptr i32 %v4_b398 to i16*
  store i16 %v1_b398, i16* %v5_b398, align 2
  %v0_b39c = load i32, i32* %r2.global-to-local, align 4
  %v1_b39c = trunc i32 %v0_b39c to i16
  %v2_b39c = load i32, i32* @lr, align 4
  %v3_b39c = add i32 %v2_b39c, 2
  %v4_b39c = inttoptr i32 %v3_b39c to i16*
  store i16 %v1_b39c, i16* %v4_b39c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b3a4 = load i32, i32* @r5, align 4
  store i32 %v0_b3a4, i32* @r1, align 4
  store i32 %v3_b030, i32* @r0, align 4
  %v0_b3ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_b3ac, i32* @r2, align 4
  %v0_b3b8 = call i32 @function_15560()
  %v3_b3bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b3bc, i32* %r3.global-to-local, align 4
  %v1_b3c0 = add i32 %v3_b3bc, 1
  %v1_b3c4 = load i32, i32* @r8, align 4
  %v9_b3c4 = icmp eq i32 %v1_b3c0, %v1_b3c4
  store i1 %v9_b3c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b3c0, i32* %stack_var_-44, align 4
  %v6_b3cc = icmp slt i32 %v1_b3c0, %v1_b3c4
  br i1 %v6_b3cc, label %dec_label_pc_b2a8, label %dec_label_pc_b294

dec_label_pc_b3d4:                                ; preds = %dec_label_pc_b2a8
  %v1_b3d4 = add i32 %v2_b2b0, 16
  %v2_b3d4 = inttoptr i32 %v1_b3d4 to i32*
  %v3_b3d4 = load i32, i32* %v2_b3d4, align 4
  %v1_b3d8 = call i32 @function_15498(i32 %v3_b3d4)
  store i32 %v1_b3d8, i32* %r4.global-to-local, align 4
  %v0_b3e0 = call i32 @function_10038()
  %v3_b3e4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b3e4, i32* %r2.global-to-local, align 4
  %v5_b3ec = mul i32 %v3_b3e4, 24
  %v1_b3f0 = load i32, i32* @sl, align 4
  %v2_b3f0 = add i32 %v1_b3f0, %v5_b3ec
  store i32 %v2_b3f0, i32* %r3.global-to-local, align 4
  %v1_b3f4 = add i32 %v2_b3f0, 20
  %v2_b3f4 = inttoptr i32 %v1_b3f4 to i8*
  %v3_b3f4 = load i8, i8* %v2_b3f4, align 1
  %v4_b3f4 = zext i8 %v3_b3f4 to i32
  store i32 %v4_b3f4, i32* %r2.global-to-local, align 4
  %v0_b3f8 = load i32, i32* %r4.global-to-local, align 4
  %v7_b3f8 = lshr i32 %v0_b3e0, %v4_b3f4
  %v8_b3f8 = add i32 %v7_b3f8, %v0_b3f8
  %v1_b3fc = call i32 @function_152f0(i32 %v8_b3f8)
  store i32 %v5_b01c, i32* %r2.global-to-local, align 4
  store i1 %v8_b404, i1* %cpsr_z.global-to-local, align 1
  %v1_b408 = load i32, i32* @r5, align 4
  %v2_b408 = add i32 %v1_b408, 16
  %v3_b408 = inttoptr i32 %v2_b408 to i32*
  store i32 %v1_b3fc, i32* %v3_b408, align 4
  br i1 %v3_b404, label %dec_label_pc_b410, label %dec_label_pc_b2dc

dec_label_pc_b410:                                ; preds = %dec_label_pc_b3d4, %dec_label_pc_b2d0
  %v0_b410 = call i32 @function_10038()
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  %v0_b41c = load i32, i32* @sb, align 4
  %v9_b41c = icmp eq i32 %v0_b41c, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  store i1 %v9_b41c, i1* %cpsr_z.global-to-local, align 1
  %v1_b420 = load i32, i32* @r5, align 4
  %v2_b420 = add i32 %v1_b420, 12
  %v3_b420 = inttoptr i32 %v2_b420 to i32*
  store i32 %v0_b410, i32* %v3_b420, align 4
  br i1 %v9_b41c, label %dec_label_pc_b428, label %dec_label_pc_b410.dec_label_pc_b2ec_crit_edge

dec_label_pc_b410.dec_label_pc_b2ec_crit_edge:    ; preds = %dec_label_pc_b410
  %v1_b2f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b2ec

dec_label_pc_b428:                                ; preds = %dec_label_pc_b410, %dec_label_pc_b2dc
  %v0_b428 = call i32 @function_10038()
  %v3_b430 = urem i32 %v0_b428, 65536
  %v1_b438 = sub nsw i32 999, %v3_b430
  store i32 %v1_b438, i32* %r3.global-to-local, align 4
  %v1_b43c = trunc i32 %v0_b428 to i16
  %v2_b43c = load i32, i32* @r5, align 4
  %v3_b43c = add i32 %v2_b43c, 4
  %v4_b43c = inttoptr i32 %v3_b43c to i16*
  store i16 %v1_b43c, i16* %v4_b43c, align 2
  %v0_b440 = load i32, i32* %r3.global-to-local, align 4
  %v1_b440 = trunc i32 %v0_b440 to i16
  %v2_b440 = load i32, i32* @r6, align 4
  %v3_b440 = add i32 %v2_b440, 4
  %v4_b440 = inttoptr i32 %v3_b440 to i16*
  store i16 %v1_b440, i16* %v4_b440, align 2
  store i32 %v3_b078, i32* %r3.global-to-local, align 4
  %v1_b448 = load i32, i32* @r4, align 4
  %v9_b448 = icmp eq i32 %v3_b078, %v1_b448
  store i1 %v9_b448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b448, label %dec_label_pc_b450, label %dec_label_pc_b2f8

dec_label_pc_b450:                                ; preds = %dec_label_pc_b428, %dec_label_pc_b2ec
  %v0_b450 = call i32 @function_10038()
  %v1_b450 = trunc i32 %v0_b450 to i16
  store i32 %v3_b07c, i32* %r1.global-to-local, align 4
  %v1_b458 = load i32, i32* @r4, align 4
  %v9_b458 = icmp eq i32 %v3_b07c, %v1_b458
  store i1 %v9_b458, i1* %cpsr_z.global-to-local, align 1
  %v3_b45c = load i32, i32* @r5, align 4
  %v4_b45c = add i32 %v3_b45c, 44
  %v5_b45c = inttoptr i32 %v4_b45c to i16*
  store i16 %v1_b450, i16* %v5_b45c, align 2
  br i1 %v9_b458, label %dec_label_pc_b464, label %dec_label_pc_b304

dec_label_pc_b464:                                ; preds = %dec_label_pc_b450, %dec_label_pc_b2f8
  %v0_b464 = call i32 @function_10038()
  %v1_b464 = trunc i32 %v0_b464 to i16
  store i32 %v1_b080, i32* %r2.global-to-local, align 4
  store i1 %v2_b46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b46c, label %.thread18, label %bb50

.thread18:                                        ; preds = %dec_label_pc_b464
  %v3_b47419 = load i32, i32* @r7, align 4
  %v4_b47420 = add i32 %v3_b47419, 2
  %v5_b47421 = inttoptr i32 %v4_b47420 to i16*
  store i16 %v1_b464, i16* %v5_b47421, align 2
  br label %dec_label_pc_b480

bb50:                                             ; preds = %dec_label_pc_b464
  %v1_b470 = load i32, i32* @r5, align 4
  %v2_b470 = add i32 %v1_b470, 16
  %v3_b470 = inttoptr i32 %v2_b470 to i32*
  %v4_b470 = load i32, i32* %v3_b470, align 4
  store i32 %v4_b470, i32* %r3.global-to-local, align 4
  %v3_b474 = load i32, i32* @r7, align 4
  %v4_b474 = add i32 %v3_b474, 2
  %v5_b474 = inttoptr i32 %v4_b474 to i16*
  store i16 %v1_b464, i16* %v5_b474, align 2
  %v1_b478 = load i32, i32* %r3.global-to-local, align 4
  %v2_b478 = load i32, i32* @r6, align 4
  %v3_b478 = add i32 %v2_b478, 16
  %v4_b478 = inttoptr i32 %v3_b478 to i32*
  store i32 %v1_b478, i32* %v4_b478, align 4
  br label %dec_label_pc_b318

dec_label_pc_b480:                                ; preds = %.thread18, %dec_label_pc_b304
  %v0_b480 = call i32 @function_10038()
  store i32 %v1_afe8, i32* %r3.global-to-local, align 4
  store i1 %v2_b488, i1* %cpsr_z.global-to-local, align 1
  %v1_b48c = load i32, i32* @r6, align 4
  %v2_b48c = add i32 %v1_b48c, 16
  %v3_b48c = inttoptr i32 %v2_b48c to i32*
  store i32 %v0_b480, i32* %v3_b48c, align 4
  br i1 %v2_b488, label %dec_label_pc_b324, label %dec_label_pc_b494

dec_label_pc_b494:                                ; preds = %dec_label_pc_b318, %dec_label_pc_b480
  %v0_b494 = load i32, i32* @r7, align 4
  %v1_b494 = add i32 %v0_b494, 8
  store i32 %v5_afc8, i32* %r1.global-to-local, align 4
  %v2_b49c = inttoptr i32 %v1_b494 to i16*
  %v3_b49c = call i32 @function_10238(i16* %v2_b49c, i32 %v5_afc8)
  br label %dec_label_pc_b324

dec_label_pc_b4a4:                                ; preds = %dec_label_pc_b068
  store i32 %v5_afc8, i32* %r3.global-to-local, align 4
  %v1_b4ac = add i32 %v5_afc8, 8
  store i32 %v1_b4ac, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b294.preheader

; uselistorder directives
  uselistorder i32 %v1_b4ac, { 1, 0 }
  uselistorder i16 %v1_b464, { 1, 0 }
  uselistorder i32 %v1_b448, { 1, 0 }
  uselistorder i32 %v0_b428, { 1, 0 }
  uselistorder i32 %v1_b3c4, { 1, 2, 0 }
  uselistorder i32 %v1_b3c0, { 2, 0, 3, 1 }
  uselistorder i32 %v3_b370, { 1, 0, 2 }
  uselistorder i32 %v7_b2bc, { 1, 0, 2 }
  uselistorder i1 %v2_b488, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b46c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b23c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_b170, { 1, 0 }
  uselistorder i32 %v4_b22c, { 1, 0 }
  uselistorder i1 %v2_b230, { 1, 0 }
  uselistorder i32 %v4_b20c, { 1, 0 }
  uselistorder i32 %v3_b0c0, { 1, 0 }
  uselistorder i32 %v3_b0bc, { 1, 0 }
  uselistorder i32 %v3_b0a8, { 2, 1, 0 }
  uselistorder i32 %v3_b088, { 1, 0 }
  uselistorder i32 %v1_b080, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_b070, { 1, 0 }
  uselistorder i1 %v7_b060, { 1, 0 }
  uselistorder i1 %v7_b034, { 1, 0 }
  uselistorder i32 %v3_b030, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v5_b01c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_afe8, { 1, 0, 2 }
  uselistorder i32 %v5_afc8, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_af7c, { 1, 0, 2 }
  uselistorder i8 %v5_af34, { 2, 0, 1 }
  uselistorder i32 %v2_aefc, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 22, 23, 24, 26, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 15, 16, 17, 18, 19, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 10, 11, 12, 15, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 29, 28, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 15, 16, 17, 18, 21, 22, 23 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_b494, { 1, 0 }
  uselistorder label %dec_label_pc_b324, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b294, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b294.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b274, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_b168, { 1, 0 }
  uselistorder label %dec_label_pc_b0e0, { 1, 0 }
}

define i32 @function_b4c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b4c0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b4c0 = load i32, i32* @r4, align 4
  %v6_b4c0 = load i32, i32* @r5, align 4
  %v18_b4c0 = load i32, i32* @sb, align 4
  %v27_b4c0 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_b4dc = call i32 @function_13cd4(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_b4dc, i32* @r8, align 4
  %v0_b4e8 = load i32, i32* @r6, align 4
  store i32 %v0_b4e8, i32* %r0.global-to-local, align 4
  %v2_b4ec = call i32 @function_13cd4(i32 %v0_b4e8, i32 4)
  %v0_b4f0 = load i32, i32* @r5, align 4
  store i32 %v0_b4f0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b500 = load i32, i32* @r4, align 4
  store i32 %v0_b500, i32* %r0.global-to-local, align 4
  %v5_b504 = inttoptr i32 %v0_b4f0 to i32*
  %v6_b504 = call i32 @function_a430(i32 %v0_b500, i32* %v5_b504, i32 2, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b51c = load i32, i32* @r5, align 4
  store i32 %v0_b51c, i32* %r1.global-to-local, align 4
  %v0_b520 = load i32, i32* @r4, align 4
  store i32 %v0_b520, i32* %r0.global-to-local, align 4
  %v6_b528 = inttoptr i32 %v0_b51c to i32*
  %v7_b528 = call i32 @function_a430(i32 %v0_b520, i32* %v6_b528, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_b52c = load i32, i32* @r5, align 4
  store i32 %v0_b52c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b528, i32* @r7, align 4
  %v0_b53c = load i32, i32* @r4, align 4
  store i32 %v0_b53c, i32* %r0.global-to-local, align 4
  %v4_b540 = inttoptr i32 %v0_b52c to i32*
  %v5_b540 = call i32 @function_a430(i32 %v0_b53c, i32* %v4_b540, i32 4, i32 64)
  %v0_b54c = load i32, i32* @r5, align 4
  store i32 %v0_b54c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b558 = load i32, i32* @r4, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v6_b560 = inttoptr i32 %v0_b54c to i32*
  %v7_b560 = call i32 @function_a430(i32 %v0_b558, i32* %v6_b560, i32 5, i32 1)
  %v1_b56c = urem i32 %v7_b560, 256
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_b574 = load i32, i32* @r5, align 4
  store i32 %v0_b574, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b57c = load i32, i32* @r4, align 4
  store i32 %v0_b57c, i32* %r0.global-to-local, align 4
  %v5_b584 = inttoptr i32 %v0_b574 to i32*
  %v6_b584 = call i32 @function_a430(i32 %v0_b57c, i32* %v5_b584, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v3_b58c = urem i32 %v6_b584, 65536
  %v0_b590 = load i32, i32* @r5, align 4
  store i32 %v0_b590, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b59c = load i32, i32* @r4, align 4
  store i32 %v0_b59c, i32* %r0.global-to-local, align 4
  %v5_b5a4 = inttoptr i32 %v0_b590 to i32*
  %v6_b5a4 = call i32 @function_a430(i32 %v0_b59c, i32* %v5_b5a4, i32 11, i32 0)
  %v1_b5ac = urem i32 %v6_b5a4, 256
  %v0_b5b0 = load i32, i32* @r5, align 4
  store i32 %v0_b5b0, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b5bc = load i32, i32* @r4, align 4
  store i32 %v0_b5bc, i32* %r0.global-to-local, align 4
  %v5_b5c4 = inttoptr i32 %v0_b5b0 to i32*
  %v6_b5c4 = call i32 @function_a430(i32 %v0_b5bc, i32* %v5_b5c4, i32 12, i32 1)
  %v0_b5d0 = load i32, i32* @r5, align 4
  store i32 %v0_b5d0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b5dc = load i32, i32* @r4, align 4
  store i32 %v0_b5dc, i32* %r0.global-to-local, align 4
  %v5_b5e4 = inttoptr i32 %v0_b5d0 to i32*
  %v6_b5e4 = call i32 @function_a430(i32 %v0_b5dc, i32* %v5_b5e4, i32 13, i32 1)
  %v1_b5ec = urem i32 %v6_b5e4, 256
  %v0_b5f0 = load i32, i32* @r5, align 4
  store i32 %v0_b5f0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b5fc = load i32, i32* @r4, align 4
  store i32 %v0_b5fc, i32* %r0.global-to-local, align 4
  %v5_b604 = inttoptr i32 %v0_b5f0 to i32*
  %v6_b604 = call i32 @function_a430(i32 %v0_b5fc, i32* %v5_b604, i32 14, i32 0)
  %v0_b610 = load i32, i32* @r5, align 4
  store i32 %v0_b610, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b61c = load i32, i32* @r4, align 4
  store i32 %v0_b61c, i32* %r0.global-to-local, align 4
  %v5_b624 = inttoptr i32 %v0_b610 to i32*
  %v6_b624 = call i32 @function_a430(i32 %v0_b61c, i32* %v5_b624, i32 15, i32 0)
  %v1_b62c = urem i32 %v6_b624, 256
  %v0_b630 = load i32, i32* @r5, align 4
  store i32 %v0_b630, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b63c = load i32, i32* @r4, align 4
  store i32 %v0_b63c, i32* %r0.global-to-local, align 4
  %v5_b644 = inttoptr i32 %v0_b630 to i32*
  %v6_b644 = call i32 @function_a430(i32 %v0_b63c, i32* %v5_b644, i32 16, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b658 = load i32, i32* @r5, align 4
  store i32 %v0_b658, i32* %r1.global-to-local, align 4
  %v0_b65c = load i32, i32* @r4, align 4
  store i32 %v0_b65c, i32* %r0.global-to-local, align 4
  %v5_b664 = inttoptr i32 %v0_b658 to i32*
  %v6_b664 = call i32 @function_a430(i32 %v0_b65c, i32* %v5_b664, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b674 = load i32, i32* @r5, align 4
  store i32 %v0_b674, i32* %r1.global-to-local, align 4
  %v0_b678 = load i32, i32* @r4, align 4
  store i32 %v0_b678, i32* %r0.global-to-local, align 4
  %v4_b67c = inttoptr i32 %v0_b674 to i32*
  %v5_b67c = call i32 @function_a430(i32 %v0_b678, i32* %v4_b67c, i32 1, i32 1)
  %v1_b684 = urem i32 %v5_b67c, 256
  store i32 %v1_b684, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b698 = call i32 @function_1561c(i32 2, i32 3, i32 6)
  store i32 %v3_b698, i32* @r0, align 4
  %v7_b69c = icmp eq i32 %v3_b698, -1
  store i1 %v7_b69c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b698, i32* @fp, align 4
  br i1 %v7_b69c, label %dec_label_pc_b894, label %dec_label_pc_b6a8

dec_label_pc_b6a8:                                ; preds = %dec_label_pc_b4c0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b6b0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b6b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_b6c4 = call i32 @function_155ac(i32 %v3_b698, i32 0, i32 3, i32 %v6_b6b0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b6c4, i32* %r0.global-to-local, align 4
  %v7_b6c8 = icmp eq i32 %v5_b6c4, -1
  store i1 %v7_b6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b6c8, label %dec_label_pc_b88c, label %dec_label_pc_b6d0

dec_label_pc_b6d0:                                ; preds = %dec_label_pc_b6a8
  %v0_b6d0 = load i32, i32* @r7, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b6d8 = urem i32 %v0_b6d0, 65536
  store i32 %v3_b6d8, i32* %r2.global-to-local, align 4
  %v0_b6dc = load i32, i32* @r6, align 4
  %v2_b6dc = icmp eq i32 %v0_b6dc, 0
  store i1 %v2_b6dc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b6dc, label %dec_label_pc_baec, label %dec_label_pc_b6ec

dec_label_pc_b6ec:                                ; preds = %dec_label_pc_b6d0
  %v2_b6ec = ptrtoint i32* %stack_var_-336 to i32
  store i32 %v2_b6ec, i32* @sb, align 4
  %v2_b734 = ptrtoint i32* %stack_var_-152 to i32
  %v9_b8dc = icmp eq i32 %v3_b58c, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  %v2_b780 = ptrtoint i32* %stack_var_-64 to i32
  %v4_b828 = zext i8 %tmp to i32
  %v1_b82c = and i32 %v4_b828, 18
  %v2_b830 = icmp eq i32 %v1_b82c, 18
  %sext = mul i32 %v6_b504, 16777216
  %v4_b98c = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v5_b540, 16777216
  %v4_b9b0 = sdiv i32 %sext8, 16777216
  %v2_b9b4 = icmp eq i32 %v1_b56c, 0
  %v3_b814 = sext i16 %tmp60 to i32
  %v1_b838 = and i32 %v4_b828, 5
  %v2_b838 = icmp eq i32 %v1_b838, 0
  %v1_b944 = add i32 %v6_b664, 40
  %v1_b994 = trunc i32 %v4_b98c to i8
  %v1_ba50 = urem i32 %v6_b5a4, 2
  %tmp87 = sub nsw i32 0, %v1_ba50
  %v4_ba58 = and i32 %tmp87, 32
  %v1_ba68 = urem i32 %v6_b5c4, 2
  %tmp88 = sub nsw i32 0, %v1_ba68
  %v4_ba70 = and i32 %tmp88, 16
  %v1_ba80 = urem i32 %v6_b5e4, 2
  %tmp89 = sub nsw i32 0, %v1_ba80
  %v4_ba88 = and i32 %tmp89, 8
  %v1_ba98 = urem i32 %v6_b604, 2
  %tmp90 = sub nsw i32 0, %v1_ba98
  %v4_baa0 = and i32 %tmp90, 4
  %v1_bab0 = urem i32 %v6_b624, 2
  %tmp91 = sub nsw i32 0, %v1_bab0
  %v3_bab8 = and i32 %tmp91, 2
  %v1_bac8 = urem i32 %v6_b644, 2
  br label %dec_label_pc_b6f0

dec_label_pc_b6f0:                                ; preds = %dec_label_pc_b864, %dec_label_pc_b6ec
  %stack_var_-60.0 = phi i32 [ %tmp35, %dec_label_pc_b6ec ], [ %stack_var_-60.5, %dec_label_pc_b864 ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b6fc = call i32 @function_1561c(i32 2, i32 1, i32 0)
  store i32 %v3_b6fc, i32* %r0.global-to-local, align 4
  %v7_b700 = icmp eq i32 %v3_b6fc, -1
  store i1 %v7_b700, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b6fc, i32* @r5, align 4
  br i1 %v7_b700, label %dec_label_pc_b864, label %dec_label_pc_b70c

dec_label_pc_b70c:                                ; preds = %dec_label_pc_b6f0, %dec_label_pc_b840
  %v0_b714 = phi i32 [ %v3_b854, %dec_label_pc_b840 ], [ %v3_b6fc, %dec_label_pc_b6f0 ]
  %stack_var_-60.1 = phi i32 [ %v0_b8fc, %dec_label_pc_b840 ], [ %stack_var_-60.0, %dec_label_pc_b6f0 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b714 = call i32 @function_13a30(i32 %v0_b714, i32 3, i32 0)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b71c = or i32 %v3_b714, 2048
  store i32 %v1_b71c, i32* %r2.global-to-local, align 4
  %v0_b720 = load i32, i32* @r5, align 4
  store i32 %v0_b720, i32* %r0.global-to-local, align 4
  %v3_b724 = call i32 @function_13a30(i32 %v0_b720, i32 4, i32 %v1_b71c)
  store i32 %v3_b724, i32* %r0.global-to-local, align 4
  %v3_b728 = load i32, i32* %stack_var_-44, align 4
  %v5_b730 = mul i32 %v3_b728, 24
  store i32 %v2_b734, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_b744 = add i32 %v5_b730, %arg2
  store i32 %v2_b744, i32* %r3.global-to-local, align 4
  %v1_b748 = add i32 %v2_b744, 20
  %v2_b748 = inttoptr i32 %v1_b748 to i8*
  %v3_b748 = load i8, i8* %v2_b748, align 1
  %v4_b748 = zext i8 %v3_b748 to i32
  store i32 %v4_b748, i32* %r2.global-to-local, align 4
  %v2_b74c = icmp ugt i8 %v3_b748, 30
  %v7_b74c = icmp eq i8 %v3_b748, 31
  store i1 %v7_b74c, i1* %cpsr_z.global-to-local, align 1
  %v2_b750 = xor i1 %v7_b74c, true
  %v3_b750 = and i1 %v2_b74c, %v2_b750
  br i1 %v3_b750, label %bb, label %bb70

bb:                                               ; preds = %dec_label_pc_b70c
  %v5_b750 = add i32 %v2_b744, 16
  %v6_b750 = inttoptr i32 %v5_b750 to i32*
  %v7_b750 = load i32, i32* %v6_b750, align 4
  store i32 %v7_b750, i32* %r3.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_b70c, %bb
  %v4_b754 = phi i32 [ %v2_b744, %dec_label_pc_b70c ], [ %v7_b750, %bb ]
  %v4_b754.stack_var_-60.1 = select i1 %v3_b750, i32 %v4_b754, i32 %stack_var_-60.1
  %v2_b758 = xor i1 %v2_b74c, true
  %v3_b758 = or i1 %v7_b74c, %v2_b758
  br i1 %v3_b758, label %dec_label_pc_b8a0, label %dec_label_pc_b75c

dec_label_pc_b75c:                                ; preds = %bb70
  store i32 %v3_b58c, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i1 %v9_b8dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b8dc, label %dec_label_pc_b8e8, label %dec_label_pc_b770

dec_label_pc_b770:                                ; preds = %dec_label_pc_b8a0, %dec_label_pc_b75c
  %stack_var_-60.3 = phi i32 [ %v1_b8cc, %dec_label_pc_b8a0 ], [ %v4_b754.stack_var_-60.1, %dec_label_pc_b75c ]
  store i32 %v3_b58c, i32* %r0.global-to-local, align 4
  %v1_b774 = call i32 @function_15314(i32 %v3_b58c)
  %v2_b774 = trunc i32 %v1_b774 to i16
  store i32 %v1_b774, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b780

dec_label_pc_b780:                                ; preds = %dec_label_pc_b8e8, %dec_label_pc_b770
  %v0_b8fc = phi i32 [ %stack_var_-60.6, %dec_label_pc_b8e8 ], [ %stack_var_-60.3, %dec_label_pc_b770 ]
  %storemerge4 = phi i16 [ %v1_b8e8, %dec_label_pc_b8e8 ], [ %v2_b774, %dec_label_pc_b770 ]
  store i32 %v2_b780, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b788 = load i32, i32* @r5, align 4
  store i32 %v0_b788, i32* %r0.global-to-local, align 4
  %v3_b78c = call i32 @function_15260(i32 %v0_b788, i32 %v2_b780, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b794 = call i32 @function_16598(i32* null)
  store i32 %v2_b794, i32* %r0.global-to-local, align 4
  store i32 %v2_b794, i32* @r4, align 4
  %v9_b7f4 = icmp eq i32 %tmp32, %v0_b8fc
  %v4_b81c = zext i16 %storemerge4 to i32
  %. = zext i1 %v9_b7f4 to i32
  %v9_b808 = icmp eq i1 %v9_b7f4, false
  %v9_b820 = icmp eq i32 %v3_b814, %v4_b81c
  br label %dec_label_pc_b7b0

dec_label_pc_b7a0:                                ; preds = %.thread29, %dec_label_pc_b810, %dec_label_pc_b838, %bb73
  %v2_b7a0 = call i32 @function_16598(i32* null)
  %v0_b7a4 = load i32, i32* @r4, align 4
  %v2_b7a4 = sub i32 %v2_b7a0, %v0_b7a4
  store i32 %v2_b7a4, i32* %r0.global-to-local, align 4
  %v7_b7a8 = icmp eq i32 %v2_b7a4, 10
  store i1 %v7_b7a8, i1* %cpsr_z.global-to-local, align 1
  %v8_b7ac = icmp sgt i32 %v2_b7a4, 10
  br i1 %v8_b7ac, label %dec_label_pc_b840, label %dec_label_pc_b7b0

dec_label_pc_b7b0:                                ; preds = %dec_label_pc_b7a0, %dec_label_pc_b780
  store i32 256, i32* @r2, align 4
  store i32 %v2_b6ec, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b7d0 = load i32, i32* @fp, align 4
  store i32 %v0_b7d0, i32* @r0, align 4
  %v0_b7d8 = call i32 @function_154f4()
  store i32 %v0_b7d8, i32* %r2.global-to-local, align 4
  %v7_b7e0 = icmp eq i32 %v0_b7d8, -1
  store i1 %v7_b7e0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b7e0, label %dec_label_pc_b894, label %dec_label_pc_b7ec

dec_label_pc_b7ec:                                ; preds = %dec_label_pc_b7b0
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_b800 = icmp eq i32 %v0_b7d8, 40
  store i1 %v7_b800, i1* %cpsr_z.global-to-local, align 1
  %tmp92 = icmp ult i32 %v0_b7d8, 41
  br i1 %tmp92, label %.thread29, label %bb73

.thread29:                                        ; preds = %dec_label_pc_b7ec
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b7a0

bb73:                                             ; preds = %dec_label_pc_b7ec
  store i1 %v9_b808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b808, label %dec_label_pc_b7a0, label %dec_label_pc_b810

dec_label_pc_b810:                                ; preds = %bb73
  store i32 %v3_b814, i32* %r1.global-to-local, align 4
  store i32 %v2_b734, i32* %r3.global-to-local, align 4
  store i32 %v4_b81c, i32* %r2.global-to-local, align 4
  store i1 %v9_b820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b820, label %dec_label_pc_b828, label %dec_label_pc_b7a0

dec_label_pc_b828:                                ; preds = %dec_label_pc_b810
  store i32 %v4_b828, i32* %r2.global-to-local, align 4
  store i32 %v1_b82c, i32* %r3.global-to-local, align 4
  store i1 %v2_b830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b830, label %dec_label_pc_b8f8, label %dec_label_pc_b838

dec_label_pc_b838:                                ; preds = %dec_label_pc_b828
  store i1 %v2_b838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b838, label %dec_label_pc_b7a0, label %dec_label_pc_b840

dec_label_pc_b840:                                ; preds = %dec_label_pc_b838, %dec_label_pc_b7a0
  %v0_b840 = load i32, i32* @r5, align 4
  store i32 %v0_b840, i32* @r0, align 4
  %v1_b844 = call i32 @function_165e8(i32 %v0_b840)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b854 = call i32 @function_1561c(i32 2, i32 1, i32 0)
  store i32 %v3_b854, i32* %r0.global-to-local, align 4
  %v3_b858 = icmp eq i32 %v3_b854, -1
  %v8_b858 = icmp eq i32 %v3_b854, -1
  store i1 %v8_b858, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b854, i32* @r5, align 4
  br i1 %v3_b858, label %dec_label_pc_b864, label %dec_label_pc_b70c

dec_label_pc_b864:                                ; preds = %dec_label_pc_b840, %dec_label_pc_b6f0, %dec_label_pc_b9d4
  %stack_var_-60.5 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b6f0 ], [ %v0_b8fc, %dec_label_pc_b9d4 ], [ %v0_b8fc, %dec_label_pc_b840 ]
  %v3_b864 = load i32, i32* %stack_var_-44, align 4
  %v1_b868 = add i32 %v3_b864, 1
  store i32 %v1_b868, i32* %r3.global-to-local, align 4
  %v0_b86c = load i32, i32* @r6, align 4
  %v9_b86c = icmp eq i32 %v0_b86c, %v1_b868
  store i1 %v9_b86c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b868, i32* %stack_var_-44, align 4
  %v8_b874 = icmp sgt i32 %v0_b86c, %v1_b868
  br i1 %v8_b874, label %dec_label_pc_b6f0, label %dec_label_pc_b878

dec_label_pc_b878:                                ; preds = %dec_label_pc_b864
  store i32 %v6_b664, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bafc

dec_label_pc_b88c:                                ; preds = %dec_label_pc_b6a8
  %v0_b88c = load i32, i32* @fp, align 4
  store i32 %v0_b88c, i32* @r0, align 4
  %v1_b890 = call i32 @function_165e8(i32 %v0_b88c)
  store i32 %v1_b890, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b894

dec_label_pc_b894:                                ; preds = %dec_label_pc_b7b0, %dec_label_pc_b4c0, %dec_label_pc_b88c
  %v1_b89c = phi i32 [ %v3_b698, %dec_label_pc_b4c0 ], [ %v1_b890, %dec_label_pc_b88c ], [ 0, %dec_label_pc_b7b0 ]
  store i32 %v3_b4c0, i32* %r4.global-to-local, align 4
  store i32 %v6_b4c0, i32* %r5.global-to-local, align 4
  store i32 %v18_b4c0, i32* %sb.global-to-local, align 4
  store i32 %v27_b4c0, i32* %lr.global-to-local, align 4
  ret i32 %v1_b89c

dec_label_pc_b8a0:                                ; preds = %bb70
  %v1_b8a0 = add i32 %v4_b754, 16
  %v2_b8a0 = inttoptr i32 %v1_b8a0 to i32*
  %v3_b8a0 = load i32, i32* %v2_b8a0, align 4
  store i32 %v3_b8a0, i32* %r0.global-to-local, align 4
  %v1_b8a4 = call i32 @function_15498(i32 %v3_b8a0)
  store i32 %v1_b8a4, i32* %r0.global-to-local, align 4
  store i32 %v1_b8a4, i32* @r4, align 4
  %v0_b8ac = call i32 @function_10038()
  store i32 %v0_b8ac, i32* %r0.global-to-local, align 4
  %v3_b8b0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b8b0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v5_b8bc = mul i32 %v3_b8b0, 24
  %v2_b8c0 = add i32 %v5_b8bc, %arg2
  store i32 %v2_b8c0, i32* %r3.global-to-local, align 4
  %v1_b8c4 = add i32 %v2_b8c0, 20
  %v2_b8c4 = inttoptr i32 %v1_b8c4 to i8*
  %v3_b8c4 = load i8, i8* %v2_b8c4, align 1
  %v4_b8c4 = zext i8 %v3_b8c4 to i32
  store i32 %v4_b8c4, i32* %r2.global-to-local, align 4
  %v0_b8c8 = load i32, i32* @r4, align 4
  %v7_b8c8 = lshr i32 %v0_b8ac, %v4_b8c4
  %v8_b8c8 = add i32 %v7_b8c8, %v0_b8c8
  store i32 %v8_b8c8, i32* %r0.global-to-local, align 4
  %v1_b8cc = call i32 @function_152f0(i32 %v8_b8c8)
  store i32 %v1_b8cc, i32* %r0.global-to-local, align 4
  store i32 %v3_b58c, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i1 %v9_b8dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b8dc, label %dec_label_pc_b8e8, label %dec_label_pc_b770

dec_label_pc_b8e8:                                ; preds = %dec_label_pc_b8a0, %dec_label_pc_b75c
  %stack_var_-60.6 = phi i32 [ %v1_b8cc, %dec_label_pc_b8a0 ], [ %v4_b754.stack_var_-60.1, %dec_label_pc_b75c ]
  %v0_b8e8 = call i32 @function_10038()
  %v1_b8e8 = trunc i32 %v0_b8e8 to i16
  store i32 %v0_b8e8, i32* %r0.global-to-local, align 4
  store i32 %v2_b734, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b780

dec_label_pc_b8f8:                                ; preds = %dec_label_pc_b828
  %v3_b8f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b8f8, i32* %r4.global-to-local, align 4
  %v1_b8fc = load i32, i32* @r8, align 4
  %v5_b8fc = mul i32 %v3_b8f8, 16
  %v6_b8fc = add i32 %v1_b8fc, %v5_b8fc
  %v7_b8fc = inttoptr i32 %v6_b8fc to i32*
  store i32 %v0_b8fc, i32* %v7_b8fc, align 4
  %v0_b900 = load i32, i32* @sl, align 4
  %v1_b900 = add i32 %v0_b900, 4
  %v2_b900 = inttoptr i32 %v1_b900 to i32*
  %v3_b900 = load i32, i32* %v2_b900, align 4
  store i32 %v3_b900, i32* %r0.global-to-local, align 4
  %v1_b904 = call i32 @function_15498(i32 %v3_b900)
  store i32 %v1_b904, i32* %r0.global-to-local, align 4
  %v0_b908 = load i32, i32* %r4.global-to-local, align 4
  %v3_b908 = mul i32 %v0_b908, 16
  %v1_b90c = load i32, i32* @r8, align 4
  %v2_b90c = add i32 %v1_b90c, %v3_b908
  store i32 %v2_b90c, i32* %r4.global-to-local, align 4
  %v2_b910 = add i32 %v2_b90c, 4
  %v3_b910 = inttoptr i32 %v2_b910 to i32*
  store i32 %v1_b904, i32* %v3_b910, align 4
  %v0_b914 = load i32, i32* @sl, align 4
  %v1_b914 = add i32 %v0_b914, 8
  %v2_b914 = inttoptr i32 %v1_b914 to i32*
  %v3_b914 = load i32, i32* %v2_b914, align 4
  store i32 %v3_b914, i32* %r0.global-to-local, align 4
  %v3_b918 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b918, i32* %r5.global-to-local, align 4
  %v1_b91c = call i32 @function_15498(i32 %v3_b914)
  store i32 %v1_b91c, i32* %r0.global-to-local, align 4
  %v3_b920 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b920, i32* @r4, align 4
  %v0_b924 = load i32, i32* @sl, align 4
  %v1_b924 = add i32 %v0_b924, 2
  %v2_b924 = inttoptr i32 %v1_b924 to i16*
  %v3_b924 = load i16, i16* %v2_b924, align 2
  %v4_b924 = zext i16 %v3_b924 to i32
  store i32 %v4_b924, i32* %r1.global-to-local, align 4
  %v3_b928 = mul i32 %v3_b920, 16
  %v1_b92c = load i32, i32* @r8, align 4
  %v2_b92c = add i32 %v1_b92c, %v3_b928
  store i32 %v2_b92c, i32* %r3.global-to-local, align 4
  %v3_b930 = add i32 %v2_b92c, 12
  %v4_b930 = inttoptr i32 %v3_b930 to i16*
  store i16 %v3_b924, i16* %v4_b930, align 2
  store i32 %v3_b814, i32* %r2.global-to-local, align 4
  %v0_b940 = load i32, i32* %r5.global-to-local, align 4
  %v3_b940 = mul i32 %v0_b940, 16
  store i32 %v1_b944, i32* @r7, align 4
  %v1_b948 = load i32, i32* @r8, align 4
  %v2_b948 = add i32 %v1_b948, %v3_b940
  store i32 %v2_b948, i32* @r5, align 4
  %v2_b94c = load i32, i32* %r3.global-to-local, align 4
  %v3_b94c = add i32 %v2_b94c, 14
  %v4_b94c = inttoptr i32 %v3_b94c to i16*
  store i16 %storemerge4, i16* %v4_b94c, align 2
  %v1_b950 = load i32, i32* @r5, align 4
  %v2_b950 = add i32 %v1_b950, 8
  %v3_b950 = inttoptr i32 %v2_b950 to i32*
  store i32 %v1_b91c, i32* %v3_b950, align 4
  %v0_b954 = load i32, i32* @r7, align 4
  store i32 %v0_b954, i32* @r0, align 4
  %v0_b958 = call i32 @function_14744()
  store i32 %v0_b958, i32* %r0.global-to-local, align 4
  store i32 %v2_b4ec, i32* %r3.global-to-local, align 4
  %v3_b960 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b960, i32* %r2.global-to-local, align 4
  %v2_b964 = load i32, i32* @r4, align 4
  %v5_b964 = mul i32 %v2_b964, 4
  %v6_b964 = add i32 %v5_b964, %v2_b4ec
  %v7_b964 = inttoptr i32 %v6_b964 to i32*
  store i32 %v0_b958, i32* %v7_b964, align 4
  %v0_b968 = load i32, i32* %r3.global-to-local, align 4
  %v1_b968 = load i32, i32* %r2.global-to-local, align 4
  %v4_b968 = mul i32 %v1_b968, 4
  %v5_b968 = add i32 %v4_b968, %v0_b968
  %v6_b968 = inttoptr i32 %v5_b968 to i32*
  %v7_b968 = load i32, i32* %v6_b968, align 4
  store i32 %v7_b968, i32* @r4, align 4
  %v1_b96c = inttoptr i32 %v7_b968 to i8*
  %v2_b96c = load i8, i8* %v1_b96c, align 1
  %tmp93 = urem i8 %v2_b96c, 16
  %v1_b970 = zext i8 %tmp93 to i32
  %v1_b974 = or i32 %v1_b970, 64
  store i32 %v1_b974, i32* %r3.global-to-local, align 4
  %v1_b978 = trunc i32 %v1_b974 to i8
  store i8 %v1_b978, i8* %v1_b96c, align 1
  %v0_b97c = load i32, i32* @r4, align 4
  %v1_b97c = inttoptr i32 %v0_b97c to i8*
  %v2_b97c = load i8, i8* %v1_b97c, align 1
  %v3_b97c = zext i8 %v2_b97c to i32
  %v1_b980 = and i32 %v3_b97c, 240
  %v1_b984 = or i32 %v1_b980, 5
  store i32 %v1_b984, i32* %r2.global-to-local, align 4
  %v1_b988 = trunc i32 %v1_b984 to i8
  store i8 %v1_b988, i8* %v1_b97c, align 1
  %v0_b990 = load i32, i32* @r7, align 4
  %v3_b990 = mul i32 %v0_b990, 65536
  store i32 %v3_b990, i32* %r0.global-to-local, align 4
  %v2_b994 = load i32, i32* @r4, align 4
  %v3_b994 = add i32 %v2_b994, 1
  %v4_b994 = inttoptr i32 %v3_b994 to i8*
  store i8 %v1_b994, i8* %v4_b994, align 1
  %v0_b998 = load i32, i32* %r0.global-to-local, align 4
  %v3_b998 = udiv i32 %v0_b998, 65536
  store i32 %v3_b998, i32* %r0.global-to-local, align 4
  %v1_b99c = call i32 @function_15314(i32 %v3_b998)
  %v2_b99c = trunc i32 %v1_b99c to i16
  %v3_b9a0 = load i32, i32* @r4, align 4
  %v4_b9a0 = add i32 %v3_b9a0, 2
  %v5_b9a0 = inttoptr i32 %v4_b9a0 to i16*
  store i16 %v2_b99c, i16* %v5_b9a0, align 2
  store i32 %v3_b6d8, i32* %r0.global-to-local, align 4
  %v1_b9a8 = call i32 @function_15314(i32 %v3_b6d8)
  %v2_b9a8 = trunc i32 %v1_b9a8 to i16
  store i32 %v1_b9a8, i32* %r0.global-to-local, align 4
  store i32 %v1_b56c, i32* %r1.global-to-local, align 4
  store i32 %v4_b9b0, i32* %r2.global-to-local, align 4
  store i1 %v2_b9b4, i1* %cpsr_z.global-to-local, align 1
  %v3_b9b8 = load i32, i32* @r4, align 4
  %v4_b9b8 = add i32 %v3_b9b8, 4
  %v5_b9b8 = inttoptr i32 %v4_b9b8 to i16*
  store i16 %v2_b9a8, i16* %v5_b9b8, align 2
  %v0_b9bc = load i32, i32* %r2.global-to-local, align 4
  %v1_b9bc = trunc i32 %v0_b9bc to i8
  %v2_b9bc = load i32, i32* @r4, align 4
  %v3_b9bc = add i32 %v2_b9bc, 8
  %v4_b9bc = inttoptr i32 %v3_b9bc to i8*
  store i8 %v1_b9bc, i8* %v4_b9bc, align 1
  %v0_b9c0 = load i32, i32* @r4, align 4
  %v1_b9c0 = add i32 %v0_b9c0, 20
  store i32 %v1_b9c0, i32* @sl, align 4
  %v0_b9c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b9c4, label %dec_label_pc_b9d4, label %dec_label_pc_b9c8

dec_label_pc_b9c8:                                ; preds = %dec_label_pc_b8f8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_b9cc = call i32 @function_15314(i32 16384)
  %v2_b9cc = trunc i32 %v1_b9cc to i16
  store i32 %v1_b9cc, i32* %r0.global-to-local, align 4
  %v3_b9d0 = load i32, i32* @r4, align 4
  %v4_b9d0 = add i32 %v3_b9d0, 6
  %v5_b9d0 = inttoptr i32 %v4_b9d0 to i16*
  store i16 %v2_b9cc, i16* %v5_b9d0, align 2
  %v2_b9d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b9d4

dec_label_pc_b9d4:                                ; preds = %dec_label_pc_b8f8, %dec_label_pc_b9c8
  %v2_b9d8 = phi i32 [ %v0_b9c0, %dec_label_pc_b8f8 ], [ %v2_b9d8.pre, %dec_label_pc_b9c8 ]
  %v3_b9d8 = add i32 %v2_b9d8, 9
  %v4_b9d8 = inttoptr i32 %v3_b9d8 to i8*
  store i8 6, i8* %v4_b9d8, align 1
  store i32 ptrtoint (i32* @global_var_2365c.94 to i32), i32* %r2.global-to-local, align 4
  %v2_b9e0 = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_b9e0, i32* %r1.global-to-local, align 4
  %v1_b9e4 = load i32, i32* @r4, align 4
  %v2_b9e4 = add i32 %v1_b9e4, 12
  %v3_b9e4 = inttoptr i32 %v2_b9e4 to i32*
  store i32 %v2_b9e0, i32* %v3_b9e4, align 4
  %v3_b9e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b9e8, i32* %r3.global-to-local, align 4
  %v0_b9ec = load i32, i32* @r8, align 4
  %v4_b9ec = mul i32 %v3_b9e8, 16
  %v5_b9ec = add i32 %v0_b9ec, %v4_b9ec
  %v6_b9ec = inttoptr i32 %v5_b9ec to i32*
  %v7_b9ec = load i32, i32* %v6_b9ec, align 4
  store i32 %v7_b9ec, i32* %r2.global-to-local, align 4
  store i32 %v5_b9ec, i32* %r3.global-to-local, align 4
  %v1_b9f8 = load i32, i32* @r4, align 4
  %v2_b9f8 = add i32 %v1_b9f8, 16
  %v3_b9f8 = inttoptr i32 %v2_b9f8 to i32*
  store i32 %v7_b9ec, i32* %v3_b9f8, align 4
  %v0_b9fc = load i32, i32* %r3.global-to-local, align 4
  %v1_b9fc = add i32 %v0_b9fc, 12
  %v2_b9fc = inttoptr i32 %v1_b9fc to i16*
  %v3_b9fc = load i16, i16* %v2_b9fc, align 2
  %v1_ba00 = add i32 %v0_b9fc, 8
  %v2_ba00 = inttoptr i32 %v1_ba00 to i32*
  %v3_ba00 = load i32, i32* %v2_ba00, align 4
  store i32 %v3_ba00, i32* %r1.global-to-local, align 4
  %v2_ba04 = load i32, i32* @r4, align 4
  %v3_ba04 = add i32 %v2_ba04, 20
  %v4_ba04 = inttoptr i32 %v3_ba04 to i16*
  store i16 %v3_b9fc, i16* %v4_ba04, align 2
  %v0_ba08 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba08 = load i32, i32* @sl, align 4
  %v2_ba08 = add i32 %v1_ba08, 4
  %v3_ba08 = inttoptr i32 %v2_ba08 to i32*
  store i32 %v0_ba08, i32* %v3_ba08, align 4
  %v0_ba0c = load i32, i32* @sl, align 4
  %v1_ba0c = add i32 %v0_ba0c, 13
  %v2_ba0c = inttoptr i32 %v1_ba0c to i8*
  %v3_ba0c = load i8, i8* %v2_ba0c, align 1
  %v4_ba0c = zext i8 %v3_ba0c to i32
  store i32 %v4_ba0c, i32* %r2.global-to-local, align 4
  %v0_ba10 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba10 = add i32 %v0_ba10, 4
  %v2_ba10 = inttoptr i32 %v1_ba10 to i32*
  %v3_ba10 = load i32, i32* %v2_ba10, align 4
  store i32 %v3_ba10, i32* %r1.global-to-local, align 4
  %v1_ba14 = or i32 %v4_ba0c, 1
  store i32 %v1_ba14, i32* %r2.global-to-local, align 4
  %v1_ba18 = add i32 %v0_ba10, 14
  %v2_ba18 = inttoptr i32 %v1_ba18 to i16*
  %v3_ba18 = load i16, i16* %v2_ba18, align 2
  %v4_ba18 = zext i16 %v3_ba18 to i32
  store i32 %v4_ba18, i32* %r3.global-to-local, align 4
  %v1_ba1c = trunc i32 %v1_ba14 to i8
  store i8 %v1_ba1c, i8* %v2_ba0c, align 1
  %v0_ba20 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba20 = trunc i32 %v0_ba20 to i16
  %v2_ba20 = load i32, i32* @sl, align 4
  %v3_ba20 = add i32 %v2_ba20, 2
  %v4_ba20 = inttoptr i32 %v3_ba20 to i16*
  store i16 %v1_ba20, i16* %v4_ba20, align 2
  %v0_ba24 = load i32, i32* @sl, align 4
  %v1_ba24 = add i32 %v0_ba24, 12
  %v2_ba24 = inttoptr i32 %v1_ba24 to i8*
  %v3_ba24 = load i8, i8* %v2_ba24, align 1
  %v4_ba24 = zext i8 %v3_ba24 to i32
  store i32 %v4_ba24, i32* %r3.global-to-local, align 4
  %v1_ba28 = add i32 %v0_ba24, 13
  %v2_ba28 = inttoptr i32 %v1_ba28 to i8*
  %v3_ba28 = load i8, i8* %v2_ba28, align 1
  %v4_ba28 = zext i8 %v3_ba28 to i32
  %tmp94 = urem i8 %v3_ba24, 16
  %v1_ba2c = zext i8 %tmp94 to i32
  %v1_ba30 = or i32 %v1_ba2c, 128
  store i32 %v1_ba30, i32* %r3.global-to-local, align 4
  %v1_ba34 = or i32 %v4_ba28, 16
  store i32 %v1_ba34, i32* %r2.global-to-local, align 4
  %v0_ba38 = load i32, i32* %r1.global-to-local, align 4
  %v2_ba38 = add i32 %v0_ba24, 8
  %v3_ba38 = inttoptr i32 %v2_ba38 to i32*
  store i32 %v0_ba38, i32* %v3_ba38, align 4
  %v0_ba3c = load i32, i32* %r3.global-to-local, align 4
  %v1_ba3c = trunc i32 %v0_ba3c to i8
  %v2_ba3c = load i32, i32* @sl, align 4
  %v3_ba3c = add i32 %v2_ba3c, 12
  %v4_ba3c = inttoptr i32 %v3_ba3c to i8*
  store i8 %v1_ba3c, i8* %v4_ba3c, align 1
  %v0_ba40 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba40 = trunc i32 %v0_ba40 to i8
  %v2_ba40 = load i32, i32* @sl, align 4
  %v3_ba40 = add i32 %v2_ba40, 13
  %v4_ba40 = inttoptr i32 %v3_ba40 to i8*
  store i8 %v1_ba40, i8* %v4_ba40, align 1
  %v0_ba44 = call i32 @function_10038()
  %v1_ba44 = trunc i32 %v0_ba44 to i16
  store i32 %v0_ba44, i32* %r0.global-to-local, align 4
  store i32 %v1_b5ac, i32* %r1.global-to-local, align 4
  %v0_ba4c = load i32, i32* @sl, align 4
  %v1_ba4c = add i32 %v0_ba4c, 13
  %v2_ba4c = inttoptr i32 %v1_ba4c to i8*
  %v3_ba4c = load i8, i8* %v2_ba4c, align 1
  %v4_ba4c = zext i8 %v3_ba4c to i32
  store i32 %v1_ba50, i32* %r2.global-to-local, align 4
  %v1_ba54 = and i32 %v4_ba4c, 223
  %v5_ba58 = or i32 %v1_ba54, %v4_ba58
  store i32 %v5_ba58, i32* %r3.global-to-local, align 4
  %v1_ba5c = trunc i32 %v5_ba58 to i8
  store i8 %v1_ba5c, i8* %v2_ba4c, align 1
  %v0_ba64 = load i32, i32* @sl, align 4
  %v1_ba64 = add i32 %v0_ba64, 13
  %v2_ba64 = inttoptr i32 %v1_ba64 to i8*
  %v3_ba64 = load i8, i8* %v2_ba64, align 1
  %v4_ba64 = zext i8 %v3_ba64 to i32
  store i32 %v1_ba68, i32* %r3.global-to-local, align 4
  %v1_ba6c = and i32 %v4_ba64, 239
  %v5_ba70 = or i32 %v1_ba6c, %v4_ba70
  store i32 %v5_ba70, i32* %r2.global-to-local, align 4
  %v1_ba74 = trunc i32 %v5_ba70 to i8
  store i8 %v1_ba74, i8* %v2_ba64, align 1
  store i32 %v1_b5ec, i32* %r1.global-to-local, align 4
  %v0_ba7c = load i32, i32* @sl, align 4
  %v1_ba7c = add i32 %v0_ba7c, 13
  %v2_ba7c = inttoptr i32 %v1_ba7c to i8*
  %v3_ba7c = load i8, i8* %v2_ba7c, align 1
  %v4_ba7c = zext i8 %v3_ba7c to i32
  store i32 %v1_ba80, i32* %r2.global-to-local, align 4
  %v1_ba84 = and i32 %v4_ba7c, 247
  %v5_ba88 = or i32 %v1_ba84, %v4_ba88
  store i32 %v5_ba88, i32* %r3.global-to-local, align 4
  %v1_ba8c = trunc i32 %v5_ba88 to i8
  store i8 %v1_ba8c, i8* %v2_ba7c, align 1
  %v0_ba94 = load i32, i32* @sl, align 4
  %v1_ba94 = add i32 %v0_ba94, 13
  %v2_ba94 = inttoptr i32 %v1_ba94 to i8*
  %v3_ba94 = load i8, i8* %v2_ba94, align 1
  %v4_ba94 = zext i8 %v3_ba94 to i32
  store i32 %v1_ba98, i32* %r3.global-to-local, align 4
  %v1_ba9c = and i32 %v4_ba94, 251
  %v5_baa0 = or i32 %v1_ba9c, %v4_baa0
  store i32 %v5_baa0, i32* %r2.global-to-local, align 4
  %v1_baa4 = trunc i32 %v5_baa0 to i8
  store i8 %v1_baa4, i8* %v2_ba94, align 1
  store i32 %v1_b62c, i32* %r1.global-to-local, align 4
  %v0_baac = load i32, i32* @sl, align 4
  %v1_baac = add i32 %v0_baac, 13
  %v2_baac = inttoptr i32 %v1_baac to i8*
  %v3_baac = load i8, i8* %v2_baac, align 1
  %v4_baac = zext i8 %v3_baac to i32
  store i32 %v1_bab0, i32* %r2.global-to-local, align 4
  %v1_bab4 = and i32 %v4_baac, 253
  %v4_bab8 = or i32 %v1_bab4, %v3_bab8
  store i32 %v4_bab8, i32* %r3.global-to-local, align 4
  %v1_babc = trunc i32 %v4_bab8 to i8
  store i8 %v1_babc, i8* %v2_baac, align 1
  %v0_bac4 = load i32, i32* @sl, align 4
  %v1_bac4 = add i32 %v0_bac4, 13
  %v2_bac4 = inttoptr i32 %v1_bac4 to i8*
  %v3_bac4 = load i8, i8* %v2_bac4, align 1
  %v4_bac4 = zext i8 %v3_bac4 to i32
  %v1_bacc = and i32 %v4_bac4, 254
  store i32 %v1_bacc, i32* %r2.global-to-local, align 4
  %v2_bad0 = or i32 %v1_bacc, %v1_bac8
  store i32 %v2_bad0, i32* %r3.global-to-local, align 4
  %v1_bad4 = trunc i32 %v2_bad0 to i8
  store i8 %v1_bad4, i8* %v2_bac4, align 1
  %v3_bad8 = load i32, i32* @sl, align 4
  %v4_bad8 = add i32 %v3_bad8, 14
  %v5_bad8 = inttoptr i32 %v4_bad8 to i16*
  store i16 %v1_ba44, i16* %v5_bad8, align 2
  store i32 %v6_b664, i32* %r1.global-to-local, align 4
  %v0_bae0 = load i32, i32* @r4, align 4
  %v1_bae0 = add i32 %v0_bae0, 40
  store i32 %v1_bae0, i32* %r0.global-to-local, align 4
  %v2_bae4 = inttoptr i32 %v1_bae0 to i16*
  %v3_bae4 = call i32 @function_10238(i16* %v2_bae4, i32 %v6_b664)
  store i32 %v3_bae4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b864

dec_label_pc_baec:                                ; preds = %dec_label_pc_b6d0
  store i32 %v6_b664, i32* %r2.global-to-local, align 4
  %.pre = add i32 %v6_b664, 40
  br label %dec_label_pc_bafc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_b878, %dec_label_pc_baec
  %storemerge7.pre-phi = phi i32 [ %v1_b944, %dec_label_pc_b878 ], [ %.pre, %dec_label_pc_baec ]
  %v0_bb0823 = phi i32 [ %v0_b86c, %dec_label_pc_b878 ], [ 0, %dec_label_pc_baec ]
  store i32 %storemerge7.pre-phi, i32* @r7, align 4
  %storemerge5 = mul i32 %v6_b664, 65536
  %storemerge = add i32 %v6_b664, 20
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v1_bafc = add i32 %storemerge5, 1310720
  store i32 %v1_bafc, i32* %r3.global-to-local, align 4
  %v3_bb00 = udiv i32 %v1_bafc, 65536
  store i32 %v3_bb00, i32* @sl, align 4
  %v2_bc38 = icmp eq i32 %v1_b684, 0
  %v9_bb2c = icmp eq i32 %v3_b6d8, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  br label %dec_label_pc_bb04

dec_label_pc_bb04:                                ; preds = %dec_label_pc_bb04, %dec_label_pc_bc1c, %dec_label_pc_bafc
  %v0_bb08 = phi i32 [ %v0_bb0823, %dec_label_pc_bafc ], [ 0, %dec_label_pc_bc1c ], [ 0, %dec_label_pc_bb04 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bb08 = icmp eq i32 %v0_bb08, 0
  store i1 %v2_bb08, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bb08, label %dec_label_pc_bb04, label %dec_label_pc_bb14

dec_label_pc_bb14:                                ; preds = %dec_label_pc_bb04, %dec_label_pc_bc1c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb18

dec_label_pc_bb18:                                ; preds = %dec_label_pc_bb44, %dec_label_pc_bb14
  %v1_bb24 = phi i32 [ %v1_bc0c, %dec_label_pc_bb44 ], [ 0, %dec_label_pc_bb14 ]
  store i32 ptrtoint (i32* @global_var_10000.25 to i32), i32* %r3.global-to-local, align 4
  store i32 %v3_b6d8, i32* %r1.global-to-local, align 4
  %v4_bb24 = mul i32 %v1_bb24, 4
  %v5_bb24 = add i32 %v4_bb24, %v2_b4ec
  %v6_bb24 = inttoptr i32 %v5_bb24 to i32*
  %v7_bb24 = load i32, i32* %v6_bb24, align 4
  store i32 %v7_bb24, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i1 %v9_bb2c, i1* %cpsr_z.global-to-local, align 1
  %v1_bb30 = add i32 %v7_bb24, 20
  store i32 %v1_bb30, i32* @r5, align 4
  br i1 %v9_bb2c, label %dec_label_pc_bc30, label %dec_label_pc_bb38

dec_label_pc_bb38:                                ; preds = %dec_label_pc_bb18
  store i32 %v1_b684, i32* %r2.global-to-local, align 4
  store i1 %v2_bc38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bc38, label %dec_label_pc_bb44, label %dec_label_pc_bc44

dec_label_pc_bb44:                                ; preds = %dec_label_pc_bb38, %dec_label_pc_bc30, %dec_label_pc_bc44
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bb48 = load i32, i32* @r4, align 4
  %v3_bb48 = add i32 %v2_bb48, 10
  %v4_bb48 = inttoptr i32 %v3_bb48 to i16*
  store i16 0, i16* %v4_bb48, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bb50 = load i32, i32* @r4, align 4
  store i32 %v0_bb50, i32* @r0, align 4
  %v2_bb54 = call i32 @function_e5a4(i32 %v0_bb50, i32 20)
  %v3_bb54 = trunc i32 %v2_bb54 to i16
  store i32 %v2_bb54, i32* %r0.global-to-local, align 4
  %v3_bb58 = load i32, i32* %stack_var_-44, align 4
  %v3_bb5c = mul i32 %v3_bb58, 16
  %v1_bb60 = load i32, i32* @r8, align 4
  %v2_bb60 = add i32 %v1_bb60, %v3_bb5c
  store i32 %v2_bb60, i32* %r2.global-to-local, align 4
  %v1_bb64 = add i32 %v2_bb60, 4
  %v2_bb64 = inttoptr i32 %v1_bb64 to i32*
  %v3_bb64 = load i32, i32* %v2_bb64, align 4
  %v3_bb68 = mul i32 %v3_bb64, 65536
  store i32 %v3_bb68, i32* %r1.global-to-local, align 4
  %v1_bb6c = add i32 %v3_bb64, 1
  store i32 %v1_bb6c, i32* %r3.global-to-local, align 4
  store i32 %v1_bb6c, i32* %v2_bb64, align 4
  %v3_bb74 = load i32, i32* @r4, align 4
  %v4_bb74 = add i32 %v3_bb74, 10
  %v5_bb74 = inttoptr i32 %v4_bb74 to i16*
  store i16 %v3_bb54, i16* %v5_bb74, align 2
  %v0_bb78 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb78 = udiv i32 %v0_bb78, 65536
  store i32 %v3_bb78, i32* %r0.global-to-local, align 4
  %v1_bb7c = call i32 @function_15314(i32 %v3_bb78)
  store i32 %v1_bb7c, i32* %r0.global-to-local, align 4
  %v1_bb80 = load i32, i32* @r5, align 4
  %v2_bb80 = add i32 %v1_bb80, 4
  %v3_bb80 = inttoptr i32 %v2_bb80 to i32*
  store i32 %v1_bb7c, i32* %v3_bb80, align 4
  %v3_bb84 = load i32, i32* %stack_var_-44, align 4
  %v3_bb88 = mul i32 %v3_bb84, 16
  %v1_bb8c = load i32, i32* @r8, align 4
  %v2_bb8c = add i32 %v1_bb8c, %v3_bb88
  store i32 %v2_bb8c, i32* %r3.global-to-local, align 4
  %v1_bb90 = add i32 %v2_bb8c, 8
  %v2_bb90 = inttoptr i32 %v1_bb90 to i32*
  %v3_bb90 = load i32, i32* %v2_bb90, align 4
  %v3_bb98 = urem i32 %v3_bb90, 65536
  store i32 %v3_bb98, i32* %r0.global-to-local, align 4
  %v1_bb9c = call i32 @function_15314(i32 %v3_bb98)
  %v2_bba4 = load i32, i32* @r5, align 4
  %v3_bba4 = add i32 %v2_bba4, 16
  %v4_bba4 = inttoptr i32 %v3_bba4 to i16*
  store i16 0, i16* %v4_bba4, align 2
  %v1_bba8 = load i32, i32* @r5, align 4
  %v2_bba8 = add i32 %v1_bba8, 8
  %v3_bba8 = inttoptr i32 %v2_bba8 to i32*
  store i32 %v1_bb9c, i32* %v3_bba8, align 4
  %v0_bbac = load i32, i32* @sl, align 4
  store i32 %v0_bbac, i32* %r0.global-to-local, align 4
  %v1_bbb0 = call i32 @function_15314(i32 %v0_bbac)
  %v0_bbb4 = load i32, i32* @r5, align 4
  store i32 %v0_bbb4, i32* @r1, align 4
  store i32 %v1_bbb0, i32* %r2.global-to-local, align 4
  %v0_bbbc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_bbbc, i32* %r3.global-to-local, align 4
  %v0_bbc0 = load i32, i32* @r4, align 4
  store i32 %v0_bbc0, i32* %r0.global-to-local, align 4
  %v4_bbc4 = call i32 @function_e5f4(i32 %v0_bbc0, i32 %v0_bbb4, i32 %v1_bbb0, i32 %v0_bbbc)
  %v5_bbc4 = trunc i32 %v4_bbc4 to i16
  store i32 %v4_bbc4, i32* %r0.global-to-local, align 4
  %v3_bbc8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bbc8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v3_bbd0 = mul i32 %v3_bbc8, 32
  store i32 %v3_bbd0, i32* %lr.global-to-local, align 4
  %v3_bbd4 = load i32, i32* @r5, align 4
  %v4_bbd4 = add i32 %v3_bbd4, 16
  %v5_bbd4 = inttoptr i32 %v4_bbd4 to i16*
  store i16 %v5_bbc4, i16* %v5_bbd4, align 2
  %v0_bbd8 = load i32, i32* %lr.global-to-local, align 4
  %v1_bbd8 = load i32, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_bbd8, -8
  %v5_bbd8 = add i32 %v0_bbd8, %tmp95
  store i32 %v5_bbd8, i32* %lr.global-to-local, align 4
  %v0_bbdc = load i32, i32* @r5, align 4
  %v1_bbdc = add i32 %v0_bbdc, 2
  %v2_bbdc = inttoptr i32 %v1_bbdc to i16*
  %v3_bbdc = load i16, i16* %v2_bbdc, align 2
  %v4_bbdc = zext i16 %v3_bbdc to i32
  store i32 %v4_bbdc, i32* %r5.global-to-local, align 4
  %v1_bbe0 = load i32, i32* %r1.global-to-local, align 4
  %v2_bbe0 = add i32 %v1_bbe0, %v5_bbd8
  store i32 %v2_bbe0, i32* @lr, align 4
  %v3_bbe4 = add i32 %v2_bbe0, 2
  %v4_bbe4 = inttoptr i32 %v3_bbe4 to i16*
  store i16 %v3_bbdc, i16* %v4_bbe4, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_bbf0 = load i32, i32* @r4, align 4
  store i32 %v0_bbf0, i32* @r1, align 4
  %v0_bbf4 = load i32, i32* @fp, align 4
  store i32 %v0_bbf4, i32* @r0, align 4
  %v0_bbf8 = load i32, i32* @r7, align 4
  store i32 %v0_bbf8, i32* @r2, align 4
  %v0_bc04 = call i32 @function_15560()
  %v3_bc08 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc08, i32* %r3.global-to-local, align 4
  %v1_bc0c = add i32 %v3_bc08, 1
  store i32 %v1_bc0c, i32* %r0.global-to-local, align 4
  %v0_bc10 = load i32, i32* @r6, align 4
  %v9_bc10 = icmp eq i32 %v0_bc10, %v1_bc0c
  store i1 %v9_bc10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bc0c, i32* %stack_var_-44, align 4
  %v8_bc18 = icmp sgt i32 %v0_bc10, %v1_bc0c
  br i1 %v8_bc18, label %dec_label_pc_bb18, label %dec_label_pc_bc1c

dec_label_pc_bc1c:                                ; preds = %dec_label_pc_bb44
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bc20 = icmp eq i32 %v0_bc10, 0
  store i1 %v2_bc20, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bc20, label %dec_label_pc_bb04, label %dec_label_pc_bb14

dec_label_pc_bc30:                                ; preds = %dec_label_pc_bb18
  %v0_bc30 = call i32 @function_10038()
  %v1_bc30 = trunc i32 %v0_bc30 to i16
  store i32 %v0_bc30, i32* %r0.global-to-local, align 4
  store i32 %v1_b684, i32* %r2.global-to-local, align 4
  store i1 %v2_bc38, i1* %cpsr_z.global-to-local, align 1
  %v3_bc3c = load i32, i32* @r4, align 4
  %v4_bc3c = add i32 %v3_bc3c, 4
  %v5_bc3c = inttoptr i32 %v4_bc3c to i16*
  store i16 %v1_bc30, i16* %v5_bc3c, align 2
  br i1 %v2_bc38, label %dec_label_pc_bb44, label %dec_label_pc_bc30.dec_label_pc_bc44_crit_edge

dec_label_pc_bc30.dec_label_pc_bc44_crit_edge:    ; preds = %dec_label_pc_bc30
  %v0_bc44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bc44

dec_label_pc_bc44:                                ; preds = %dec_label_pc_bc30.dec_label_pc_bc44_crit_edge, %dec_label_pc_bb38
  %v0_bc44 = phi i32 [ %v0_bc44.pre, %dec_label_pc_bc30.dec_label_pc_bc44_crit_edge ], [ %v7_bb24, %dec_label_pc_bb38 ]
  %v1_bc44 = add i32 %v0_bc44, 40
  store i32 %v1_bc44, i32* %r0.global-to-local, align 4
  store i32 %v6_b664, i32* %r1.global-to-local, align 4
  %v2_bc4c = inttoptr i32 %v1_bc44 to i16*
  %v3_bc4c = call i32 @function_10238(i16* %v2_bc4c, i32 %v6_b664)
  store i32 %v3_bc4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb44

; uselistorder directives
  uselistorder i32 %v0_bc30, { 1, 0 }
  uselistorder i32 %v1_bc0c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_bbd8, { 1, 0 }
  uselistorder i32 %v4_bbc4, { 1, 0 }
  uselistorder i32 %v3_bb98, { 1, 0 }
  uselistorder i32 %v3_bb78, { 1, 0 }
  uselistorder i32 %v3_bb64, { 1, 0 }
  uselistorder i32 %v2_bb54, { 1, 0 }
  uselistorder i1 %v2_bc38, { 2, 3, 1, 0 }
  uselistorder i32 %v0_ba44, { 1, 0 }
  uselistorder i32 %v1_b9cc, { 1, 0 }
  uselistorder i32 %v1_b9a8, { 1, 0 }
  uselistorder i32 %v3_b998, { 1, 0 }
  uselistorder i32 %v0_b8e8, { 1, 0 }
  uselistorder i32 %v1_b8cc, { 1, 2, 0 }
  uselistorder i32 %v1_b868, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b854, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_b7e0, { 1, 0 }
  uselistorder i32 %v0_b7d8, { 0, 2, 1, 3 }
  uselistorder i1 %v9_b808, { 1, 0 }
  uselistorder i32 %v4_b81c, { 1, 0 }
  uselistorder i32 %v0_b8fc, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v1_b774, { 1, 0 }
  uselistorder i32 %v4_b754, { 1, 0 }
  uselistorder i1 %v7_b74c, { 1, 0, 2 }
  uselistorder i1 %v7_b700, { 1, 0 }
  uselistorder i32 %v3_b6fc, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i32 %v1_bab0, { 1, 0 }
  uselistorder i32 %v1_ba98, { 1, 0 }
  uselistorder i32 %v1_ba80, { 1, 0 }
  uselistorder i32 %v1_ba68, { 1, 0 }
  uselistorder i32 %v1_ba50, { 1, 0 }
  uselistorder i32 %v3_b814, { 0, 2, 1 }
  uselistorder i1 %v2_b830, { 1, 0 }
  uselistorder i32 %v1_b82c, { 1, 0 }
  uselistorder i32 %v4_b828, { 2, 0, 1 }
  uselistorder i1 %v9_b8dc, { 2, 3, 1, 0 }
  uselistorder i32 %v2_b734, { 1, 0, 2 }
  uselistorder i32 %v3_b6d8, { 3, 4, 2, 1, 0 }
  uselistorder i1 %v7_b6c8, { 1, 0 }
  uselistorder i1 %v7_b69c, { 1, 0 }
  uselistorder i32 %v3_b698, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_b684, { 2, 3, 1, 0 }
  uselistorder i32 %v6_b664, { 8, 7, 2, 0, 1, 9, 5, 4, 6, 3 }
  uselistorder i32 %v3_b58c, { 1, 4, 3, 0, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 45, 44, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20, 21, 22, 23, 25, 24, 27, 26, 28, 30, 29, 31, 33, 32, 34, 35, 36, 38, 37, 39, 41, 40, 43, 42, 45, 44, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 24, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 2, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bb44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bb14, { 1, 0 }
  uselistorder label %dec_label_pc_bb04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bafc, { 1, 0 }
  uselistorder label %dec_label_pc_b9d4, { 1, 0 }
  uselistorder label %dec_label_pc_b894, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b864, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b7a0, { 2, 1, 3, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_b70c, { 1, 0 }
}

define i32 @function_bc58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_bc58:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_bc58 = load i32, i32* @r4, align 4
  %v6_bc58 = load i32, i32* @r5, align 4
  %v18_bc58 = load i32, i32* @sb, align 4
  %v27_bc58 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_bc74 = call i32 @function_13cd4(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_bc74, i32* @r8, align 4
  %v0_bc80 = load i32, i32* @r6, align 4
  store i32 %v0_bc80, i32* %r0.global-to-local, align 4
  %v2_bc84 = call i32 @function_13cd4(i32 %v0_bc80, i32 4)
  %v0_bc88 = load i32, i32* @r5, align 4
  store i32 %v0_bc88, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc98 = load i32, i32* @r4, align 4
  store i32 %v0_bc98, i32* %r0.global-to-local, align 4
  %v5_bc9c = inttoptr i32 %v0_bc88 to i32*
  %v6_bc9c = call i32 @function_a430(i32 %v0_bc98, i32* %v5_bc9c, i32 2, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bcb4 = load i32, i32* @r5, align 4
  store i32 %v0_bcb4, i32* %r1.global-to-local, align 4
  %v0_bcb8 = load i32, i32* @r4, align 4
  store i32 %v0_bcb8, i32* %r0.global-to-local, align 4
  %v6_bcc0 = inttoptr i32 %v0_bcb4 to i32*
  %v7_bcc0 = call i32 @function_a430(i32 %v0_bcb8, i32* %v6_bcc0, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_bcc4 = load i32, i32* @r5, align 4
  store i32 %v0_bcc4, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bcc0, i32* @r7, align 4
  %v0_bcd4 = load i32, i32* @r4, align 4
  store i32 %v0_bcd4, i32* %r0.global-to-local, align 4
  %v4_bcd8 = inttoptr i32 %v0_bcc4 to i32*
  %v5_bcd8 = call i32 @function_a430(i32 %v0_bcd4, i32* %v4_bcd8, i32 4, i32 64)
  %v0_bce4 = load i32, i32* @r5, align 4
  store i32 %v0_bce4, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bcf0 = load i32, i32* @r4, align 4
  store i32 %v0_bcf0, i32* %r0.global-to-local, align 4
  %v6_bcf8 = inttoptr i32 %v0_bce4 to i32*
  %v7_bcf8 = call i32 @function_a430(i32 %v0_bcf0, i32* %v6_bcf8, i32 5, i32 1)
  %v1_bd04 = urem i32 %v7_bcf8, 256
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_bd0c = load i32, i32* @r5, align 4
  store i32 %v0_bd0c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_bd14 = load i32, i32* @r4, align 4
  store i32 %v0_bd14, i32* %r0.global-to-local, align 4
  %v5_bd1c = inttoptr i32 %v0_bd0c to i32*
  %v6_bd1c = call i32 @function_a430(i32 %v0_bd14, i32* %v5_bd1c, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v3_bd24 = urem i32 %v6_bd1c, 65536
  %v0_bd28 = load i32, i32* @r5, align 4
  store i32 %v0_bd28, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd34 = load i32, i32* @r4, align 4
  store i32 %v0_bd34, i32* %r0.global-to-local, align 4
  %v5_bd3c = inttoptr i32 %v0_bd28 to i32*
  %v6_bd3c = call i32 @function_a430(i32 %v0_bd34, i32* %v5_bd3c, i32 11, i32 1)
  %v1_bd44 = urem i32 %v6_bd3c, 256
  %v0_bd48 = load i32, i32* @r5, align 4
  store i32 %v0_bd48, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd54 = load i32, i32* @r4, align 4
  store i32 %v0_bd54, i32* %r0.global-to-local, align 4
  %v5_bd5c = inttoptr i32 %v0_bd48 to i32*
  %v6_bd5c = call i32 @function_a430(i32 %v0_bd54, i32* %v5_bd5c, i32 12, i32 1)
  %v0_bd68 = load i32, i32* @r5, align 4
  store i32 %v0_bd68, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd74 = load i32, i32* @r4, align 4
  store i32 %v0_bd74, i32* %r0.global-to-local, align 4
  %v5_bd7c = inttoptr i32 %v0_bd68 to i32*
  %v6_bd7c = call i32 @function_a430(i32 %v0_bd74, i32* %v5_bd7c, i32 13, i32 1)
  %v1_bd84 = urem i32 %v6_bd7c, 256
  %v0_bd88 = load i32, i32* @r5, align 4
  store i32 %v0_bd88, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd94 = load i32, i32* @r4, align 4
  store i32 %v0_bd94, i32* %r0.global-to-local, align 4
  %v5_bd9c = inttoptr i32 %v0_bd88 to i32*
  %v6_bd9c = call i32 @function_a430(i32 %v0_bd94, i32* %v5_bd9c, i32 14, i32 1)
  %v0_bda8 = load i32, i32* @r5, align 4
  store i32 %v0_bda8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bdb4 = load i32, i32* @r4, align 4
  store i32 %v0_bdb4, i32* %r0.global-to-local, align 4
  %v5_bdbc = inttoptr i32 %v0_bda8 to i32*
  %v6_bdbc = call i32 @function_a430(i32 %v0_bdb4, i32* %v5_bdbc, i32 15, i32 1)
  %v1_bdc4 = urem i32 %v6_bdbc, 256
  %v0_bdc8 = load i32, i32* @r5, align 4
  store i32 %v0_bdc8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bdd4 = load i32, i32* @r4, align 4
  store i32 %v0_bdd4, i32* %r0.global-to-local, align 4
  %v5_bddc = inttoptr i32 %v0_bdc8 to i32*
  %v6_bddc = call i32 @function_a430(i32 %v0_bdd4, i32* %v5_bddc, i32 16, i32 1)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_bdf0 = load i32, i32* @r5, align 4
  store i32 %v0_bdf0, i32* %r1.global-to-local, align 4
  %v0_bdf4 = load i32, i32* @r4, align 4
  store i32 %v0_bdf4, i32* %r0.global-to-local, align 4
  %v5_bdfc = inttoptr i32 %v0_bdf0 to i32*
  %v6_bdfc = call i32 @function_a430(i32 %v0_bdf4, i32* %v5_bdfc, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_be0c = load i32, i32* @r5, align 4
  store i32 %v0_be0c, i32* %r1.global-to-local, align 4
  %v0_be10 = load i32, i32* @r4, align 4
  store i32 %v0_be10, i32* %r0.global-to-local, align 4
  %v4_be14 = inttoptr i32 %v0_be0c to i32*
  %v5_be14 = call i32 @function_a430(i32 %v0_be10, i32* %v4_be14, i32 1, i32 1)
  %v1_be1c = urem i32 %v5_be14, 256
  store i32 %v1_be1c, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_be30 = call i32 @function_1561c(i32 2, i32 3, i32 6)
  store i32 %v3_be30, i32* @r0, align 4
  %v7_be34 = icmp eq i32 %v3_be30, -1
  store i1 %v7_be34, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_be30, i32* @fp, align 4
  br i1 %v7_be34, label %dec_label_pc_c02c, label %dec_label_pc_be40

dec_label_pc_be40:                                ; preds = %dec_label_pc_bc58
  store i32 1, i32* %stack_var_-44, align 4
  %v6_be48 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_be48, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_be5c = call i32 @function_155ac(i32 %v3_be30, i32 0, i32 3, i32 %v6_be48, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_be5c, i32* %r0.global-to-local, align 4
  %v7_be60 = icmp eq i32 %v5_be5c, -1
  store i1 %v7_be60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_be60, label %dec_label_pc_c024, label %dec_label_pc_be68

dec_label_pc_be68:                                ; preds = %dec_label_pc_be40
  %v0_be68 = load i32, i32* @r7, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_be70 = urem i32 %v0_be68, 65536
  store i32 %v3_be70, i32* %r2.global-to-local, align 4
  %v0_be74 = load i32, i32* @r6, align 4
  %v2_be74 = icmp eq i32 %v0_be74, 0
  store i1 %v2_be74, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_be74, label %dec_label_pc_c284, label %dec_label_pc_be84

dec_label_pc_be84:                                ; preds = %dec_label_pc_be68
  %v2_be84 = ptrtoint i32* %stack_var_-336 to i32
  store i32 %v2_be84, i32* @sb, align 4
  %v2_becc = ptrtoint i32* %stack_var_-152 to i32
  %v9_c074 = icmp eq i32 %v3_bd24, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  %v2_bf18 = ptrtoint i32* %stack_var_-64 to i32
  %v4_bfc0 = zext i8 %tmp to i32
  %v1_bfc4 = and i32 %v4_bfc0, 18
  %v2_bfc8 = icmp eq i32 %v1_bfc4, 18
  %sext = mul i32 %v6_bc9c, 16777216
  %v4_c124 = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v5_bcd8, 16777216
  %v4_c148 = sdiv i32 %sext8, 16777216
  %v2_c14c = icmp eq i32 %v1_bd04, 0
  %v3_bfac = sext i16 %tmp60 to i32
  %v1_bfd0 = and i32 %v4_bfc0, 5
  %v2_bfd0 = icmp eq i32 %v1_bfd0, 0
  %v1_c0dc = add i32 %v6_bdfc, 40
  %v1_c12c = trunc i32 %v4_c124 to i8
  %v1_c1e8 = urem i32 %v6_bd3c, 2
  %tmp87 = sub nsw i32 0, %v1_c1e8
  %v4_c1f0 = and i32 %tmp87, 32
  %v1_c200 = urem i32 %v6_bd5c, 2
  %tmp88 = sub nsw i32 0, %v1_c200
  %v4_c208 = and i32 %tmp88, 16
  %v1_c218 = urem i32 %v6_bd7c, 2
  %tmp89 = sub nsw i32 0, %v1_c218
  %v4_c220 = and i32 %tmp89, 8
  %v1_c230 = urem i32 %v6_bd9c, 2
  %tmp90 = sub nsw i32 0, %v1_c230
  %v4_c238 = and i32 %tmp90, 4
  %v1_c248 = urem i32 %v6_bdbc, 2
  %tmp91 = sub nsw i32 0, %v1_c248
  %v3_c250 = and i32 %tmp91, 2
  %v1_c260 = urem i32 %v6_bddc, 2
  br label %dec_label_pc_be88

dec_label_pc_be88:                                ; preds = %dec_label_pc_bffc, %dec_label_pc_be84
  %stack_var_-60.0 = phi i32 [ %tmp35, %dec_label_pc_be84 ], [ %stack_var_-60.5, %dec_label_pc_bffc ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_be94 = call i32 @function_1561c(i32 2, i32 1, i32 0)
  store i32 %v3_be94, i32* %r0.global-to-local, align 4
  %v7_be98 = icmp eq i32 %v3_be94, -1
  store i1 %v7_be98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_be94, i32* @r5, align 4
  br i1 %v7_be98, label %dec_label_pc_bffc, label %dec_label_pc_bea4

dec_label_pc_bea4:                                ; preds = %dec_label_pc_be88, %dec_label_pc_bfd8
  %v0_beac = phi i32 [ %v3_bfec, %dec_label_pc_bfd8 ], [ %v3_be94, %dec_label_pc_be88 ]
  %stack_var_-60.1 = phi i32 [ %v0_c094, %dec_label_pc_bfd8 ], [ %stack_var_-60.0, %dec_label_pc_be88 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_beac = call i32 @function_13a30(i32 %v0_beac, i32 3, i32 0)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_beb4 = or i32 %v3_beac, 2048
  store i32 %v1_beb4, i32* %r2.global-to-local, align 4
  %v0_beb8 = load i32, i32* @r5, align 4
  store i32 %v0_beb8, i32* %r0.global-to-local, align 4
  %v3_bebc = call i32 @function_13a30(i32 %v0_beb8, i32 4, i32 %v1_beb4)
  store i32 %v3_bebc, i32* %r0.global-to-local, align 4
  %v3_bec0 = load i32, i32* %stack_var_-44, align 4
  %v5_bec8 = mul i32 %v3_bec0, 24
  store i32 %v2_becc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_bedc = add i32 %v5_bec8, %arg2
  store i32 %v2_bedc, i32* %r3.global-to-local, align 4
  %v1_bee0 = add i32 %v2_bedc, 20
  %v2_bee0 = inttoptr i32 %v1_bee0 to i8*
  %v3_bee0 = load i8, i8* %v2_bee0, align 1
  %v4_bee0 = zext i8 %v3_bee0 to i32
  store i32 %v4_bee0, i32* %r2.global-to-local, align 4
  %v2_bee4 = icmp ugt i8 %v3_bee0, 30
  %v7_bee4 = icmp eq i8 %v3_bee0, 31
  store i1 %v7_bee4, i1* %cpsr_z.global-to-local, align 1
  %v2_bee8 = xor i1 %v7_bee4, true
  %v3_bee8 = and i1 %v2_bee4, %v2_bee8
  br i1 %v3_bee8, label %bb, label %bb70

bb:                                               ; preds = %dec_label_pc_bea4
  %v5_bee8 = add i32 %v2_bedc, 16
  %v6_bee8 = inttoptr i32 %v5_bee8 to i32*
  %v7_bee8 = load i32, i32* %v6_bee8, align 4
  store i32 %v7_bee8, i32* %r3.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_bea4, %bb
  %v4_beec = phi i32 [ %v2_bedc, %dec_label_pc_bea4 ], [ %v7_bee8, %bb ]
  %v4_beec.stack_var_-60.1 = select i1 %v3_bee8, i32 %v4_beec, i32 %stack_var_-60.1
  %v2_bef0 = xor i1 %v2_bee4, true
  %v3_bef0 = or i1 %v7_bee4, %v2_bef0
  br i1 %v3_bef0, label %dec_label_pc_c038, label %dec_label_pc_bef4

dec_label_pc_bef4:                                ; preds = %bb70
  store i32 %v3_bd24, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i1 %v9_c074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c074, label %dec_label_pc_c080, label %dec_label_pc_bf08

dec_label_pc_bf08:                                ; preds = %dec_label_pc_c038, %dec_label_pc_bef4
  %stack_var_-60.3 = phi i32 [ %v1_c064, %dec_label_pc_c038 ], [ %v4_beec.stack_var_-60.1, %dec_label_pc_bef4 ]
  store i32 %v3_bd24, i32* %r0.global-to-local, align 4
  %v1_bf0c = call i32 @function_15314(i32 %v3_bd24)
  %v2_bf0c = trunc i32 %v1_bf0c to i16
  store i32 %v1_bf0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bf18

dec_label_pc_bf18:                                ; preds = %dec_label_pc_c080, %dec_label_pc_bf08
  %v0_c094 = phi i32 [ %stack_var_-60.6, %dec_label_pc_c080 ], [ %stack_var_-60.3, %dec_label_pc_bf08 ]
  %storemerge4 = phi i16 [ %v1_c080, %dec_label_pc_c080 ], [ %v2_bf0c, %dec_label_pc_bf08 ]
  store i32 %v2_bf18, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_bf20 = load i32, i32* @r5, align 4
  store i32 %v0_bf20, i32* %r0.global-to-local, align 4
  %v3_bf24 = call i32 @function_15260(i32 %v0_bf20, i32 %v2_bf18, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bf2c = call i32 @function_16598(i32* null)
  store i32 %v2_bf2c, i32* %r0.global-to-local, align 4
  store i32 %v2_bf2c, i32* @r4, align 4
  %v9_bf8c = icmp eq i32 %tmp32, %v0_c094
  %v4_bfb4 = zext i16 %storemerge4 to i32
  %. = zext i1 %v9_bf8c to i32
  %v9_bfa0 = icmp eq i1 %v9_bf8c, false
  %v9_bfb8 = icmp eq i32 %v3_bfac, %v4_bfb4
  br label %dec_label_pc_bf48

dec_label_pc_bf38:                                ; preds = %.thread29, %dec_label_pc_bfa8, %dec_label_pc_bfd0, %bb73
  %v2_bf38 = call i32 @function_16598(i32* null)
  %v0_bf3c = load i32, i32* @r4, align 4
  %v2_bf3c = sub i32 %v2_bf38, %v0_bf3c
  store i32 %v2_bf3c, i32* %r0.global-to-local, align 4
  %v7_bf40 = icmp eq i32 %v2_bf3c, 10
  store i1 %v7_bf40, i1* %cpsr_z.global-to-local, align 1
  %v8_bf44 = icmp sgt i32 %v2_bf3c, 10
  br i1 %v8_bf44, label %dec_label_pc_bfd8, label %dec_label_pc_bf48

dec_label_pc_bf48:                                ; preds = %dec_label_pc_bf38, %dec_label_pc_bf18
  store i32 256, i32* @r2, align 4
  store i32 %v2_be84, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_bf68 = load i32, i32* @fp, align 4
  store i32 %v0_bf68, i32* @r0, align 4
  %v0_bf70 = call i32 @function_154f4()
  store i32 %v0_bf70, i32* %r2.global-to-local, align 4
  %v7_bf78 = icmp eq i32 %v0_bf70, -1
  store i1 %v7_bf78, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_bf78, label %dec_label_pc_c02c, label %dec_label_pc_bf84

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf48
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_bf98 = icmp eq i32 %v0_bf70, 40
  store i1 %v7_bf98, i1* %cpsr_z.global-to-local, align 1
  %tmp92 = icmp ult i32 %v0_bf70, 41
  br i1 %tmp92, label %.thread29, label %bb73

.thread29:                                        ; preds = %dec_label_pc_bf84
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_bf38

bb73:                                             ; preds = %dec_label_pc_bf84
  store i1 %v9_bfa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfa0, label %dec_label_pc_bf38, label %dec_label_pc_bfa8

dec_label_pc_bfa8:                                ; preds = %bb73
  store i32 %v3_bfac, i32* %r1.global-to-local, align 4
  store i32 %v2_becc, i32* %r3.global-to-local, align 4
  store i32 %v4_bfb4, i32* %r2.global-to-local, align 4
  store i1 %v9_bfb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfb8, label %dec_label_pc_bfc0, label %dec_label_pc_bf38

dec_label_pc_bfc0:                                ; preds = %dec_label_pc_bfa8
  store i32 %v4_bfc0, i32* %r2.global-to-local, align 4
  store i32 %v1_bfc4, i32* %r3.global-to-local, align 4
  store i1 %v2_bfc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bfc8, label %dec_label_pc_c090, label %dec_label_pc_bfd0

dec_label_pc_bfd0:                                ; preds = %dec_label_pc_bfc0
  store i1 %v2_bfd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bfd0, label %dec_label_pc_bf38, label %dec_label_pc_bfd8

dec_label_pc_bfd8:                                ; preds = %dec_label_pc_bfd0, %dec_label_pc_bf38
  %v0_bfd8 = load i32, i32* @r5, align 4
  store i32 %v0_bfd8, i32* @r0, align 4
  %v1_bfdc = call i32 @function_165e8(i32 %v0_bfd8)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_bfec = call i32 @function_1561c(i32 2, i32 1, i32 0)
  store i32 %v3_bfec, i32* %r0.global-to-local, align 4
  %v3_bff0 = icmp eq i32 %v3_bfec, -1
  %v8_bff0 = icmp eq i32 %v3_bfec, -1
  store i1 %v8_bff0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_bfec, i32* @r5, align 4
  br i1 %v3_bff0, label %dec_label_pc_bffc, label %dec_label_pc_bea4

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bfd8, %dec_label_pc_be88, %dec_label_pc_c16c
  %stack_var_-60.5 = phi i32 [ %stack_var_-60.0, %dec_label_pc_be88 ], [ %v0_c094, %dec_label_pc_c16c ], [ %v0_c094, %dec_label_pc_bfd8 ]
  %v3_bffc = load i32, i32* %stack_var_-44, align 4
  %v1_c000 = add i32 %v3_bffc, 1
  store i32 %v1_c000, i32* %r3.global-to-local, align 4
  %v0_c004 = load i32, i32* @r6, align 4
  %v9_c004 = icmp eq i32 %v0_c004, %v1_c000
  store i1 %v9_c004, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c000, i32* %stack_var_-44, align 4
  %v8_c00c = icmp sgt i32 %v0_c004, %v1_c000
  br i1 %v8_c00c, label %dec_label_pc_be88, label %dec_label_pc_c010

dec_label_pc_c010:                                ; preds = %dec_label_pc_bffc
  store i32 %v6_bdfc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c294

dec_label_pc_c024:                                ; preds = %dec_label_pc_be40
  %v0_c024 = load i32, i32* @fp, align 4
  store i32 %v0_c024, i32* @r0, align 4
  %v1_c028 = call i32 @function_165e8(i32 %v0_c024)
  store i32 %v1_c028, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c02c

dec_label_pc_c02c:                                ; preds = %dec_label_pc_bf48, %dec_label_pc_bc58, %dec_label_pc_c024
  %v1_c034 = phi i32 [ %v3_be30, %dec_label_pc_bc58 ], [ %v1_c028, %dec_label_pc_c024 ], [ 0, %dec_label_pc_bf48 ]
  store i32 %v3_bc58, i32* %r4.global-to-local, align 4
  store i32 %v6_bc58, i32* %r5.global-to-local, align 4
  store i32 %v18_bc58, i32* %sb.global-to-local, align 4
  store i32 %v27_bc58, i32* %lr.global-to-local, align 4
  ret i32 %v1_c034

dec_label_pc_c038:                                ; preds = %bb70
  %v1_c038 = add i32 %v4_beec, 16
  %v2_c038 = inttoptr i32 %v1_c038 to i32*
  %v3_c038 = load i32, i32* %v2_c038, align 4
  store i32 %v3_c038, i32* %r0.global-to-local, align 4
  %v1_c03c = call i32 @function_15498(i32 %v3_c038)
  store i32 %v1_c03c, i32* %r0.global-to-local, align 4
  store i32 %v1_c03c, i32* @r4, align 4
  %v0_c044 = call i32 @function_10038()
  store i32 %v0_c044, i32* %r0.global-to-local, align 4
  %v3_c048 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c048, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v5_c054 = mul i32 %v3_c048, 24
  %v2_c058 = add i32 %v5_c054, %arg2
  store i32 %v2_c058, i32* %r3.global-to-local, align 4
  %v1_c05c = add i32 %v2_c058, 20
  %v2_c05c = inttoptr i32 %v1_c05c to i8*
  %v3_c05c = load i8, i8* %v2_c05c, align 1
  %v4_c05c = zext i8 %v3_c05c to i32
  store i32 %v4_c05c, i32* %r2.global-to-local, align 4
  %v0_c060 = load i32, i32* @r4, align 4
  %v7_c060 = lshr i32 %v0_c044, %v4_c05c
  %v8_c060 = add i32 %v7_c060, %v0_c060
  store i32 %v8_c060, i32* %r0.global-to-local, align 4
  %v1_c064 = call i32 @function_152f0(i32 %v8_c060)
  store i32 %v1_c064, i32* %r0.global-to-local, align 4
  store i32 %v3_bd24, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i1 %v9_c074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c074, label %dec_label_pc_c080, label %dec_label_pc_bf08

dec_label_pc_c080:                                ; preds = %dec_label_pc_c038, %dec_label_pc_bef4
  %stack_var_-60.6 = phi i32 [ %v1_c064, %dec_label_pc_c038 ], [ %v4_beec.stack_var_-60.1, %dec_label_pc_bef4 ]
  %v0_c080 = call i32 @function_10038()
  %v1_c080 = trunc i32 %v0_c080 to i16
  store i32 %v0_c080, i32* %r0.global-to-local, align 4
  store i32 %v2_becc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_bf18

dec_label_pc_c090:                                ; preds = %dec_label_pc_bfc0
  %v3_c090 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c090, i32* %r4.global-to-local, align 4
  %v1_c094 = load i32, i32* @r8, align 4
  %v5_c094 = mul i32 %v3_c090, 16
  %v6_c094 = add i32 %v1_c094, %v5_c094
  %v7_c094 = inttoptr i32 %v6_c094 to i32*
  store i32 %v0_c094, i32* %v7_c094, align 4
  %v0_c098 = load i32, i32* @sl, align 4
  %v1_c098 = add i32 %v0_c098, 4
  %v2_c098 = inttoptr i32 %v1_c098 to i32*
  %v3_c098 = load i32, i32* %v2_c098, align 4
  store i32 %v3_c098, i32* %r0.global-to-local, align 4
  %v1_c09c = call i32 @function_15498(i32 %v3_c098)
  store i32 %v1_c09c, i32* %r0.global-to-local, align 4
  %v0_c0a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c0a0 = mul i32 %v0_c0a0, 16
  %v1_c0a4 = load i32, i32* @r8, align 4
  %v2_c0a4 = add i32 %v1_c0a4, %v3_c0a0
  store i32 %v2_c0a4, i32* %r4.global-to-local, align 4
  %v2_c0a8 = add i32 %v2_c0a4, 4
  %v3_c0a8 = inttoptr i32 %v2_c0a8 to i32*
  store i32 %v1_c09c, i32* %v3_c0a8, align 4
  %v0_c0ac = load i32, i32* @sl, align 4
  %v1_c0ac = add i32 %v0_c0ac, 8
  %v2_c0ac = inttoptr i32 %v1_c0ac to i32*
  %v3_c0ac = load i32, i32* %v2_c0ac, align 4
  store i32 %v3_c0ac, i32* %r0.global-to-local, align 4
  %v3_c0b0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0b0, i32* %r5.global-to-local, align 4
  %v1_c0b4 = call i32 @function_15498(i32 %v3_c0ac)
  store i32 %v1_c0b4, i32* %r0.global-to-local, align 4
  %v3_c0b8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0b8, i32* @r4, align 4
  %v0_c0bc = load i32, i32* @sl, align 4
  %v1_c0bc = add i32 %v0_c0bc, 2
  %v2_c0bc = inttoptr i32 %v1_c0bc to i16*
  %v3_c0bc = load i16, i16* %v2_c0bc, align 2
  %v4_c0bc = zext i16 %v3_c0bc to i32
  store i32 %v4_c0bc, i32* %r1.global-to-local, align 4
  %v3_c0c0 = mul i32 %v3_c0b8, 16
  %v1_c0c4 = load i32, i32* @r8, align 4
  %v2_c0c4 = add i32 %v1_c0c4, %v3_c0c0
  store i32 %v2_c0c4, i32* %r3.global-to-local, align 4
  %v3_c0c8 = add i32 %v2_c0c4, 12
  %v4_c0c8 = inttoptr i32 %v3_c0c8 to i16*
  store i16 %v3_c0bc, i16* %v4_c0c8, align 2
  store i32 %v3_bfac, i32* %r2.global-to-local, align 4
  %v0_c0d8 = load i32, i32* %r5.global-to-local, align 4
  %v3_c0d8 = mul i32 %v0_c0d8, 16
  store i32 %v1_c0dc, i32* @r7, align 4
  %v1_c0e0 = load i32, i32* @r8, align 4
  %v2_c0e0 = add i32 %v1_c0e0, %v3_c0d8
  store i32 %v2_c0e0, i32* @r5, align 4
  %v2_c0e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_c0e4 = add i32 %v2_c0e4, 14
  %v4_c0e4 = inttoptr i32 %v3_c0e4 to i16*
  store i16 %storemerge4, i16* %v4_c0e4, align 2
  %v1_c0e8 = load i32, i32* @r5, align 4
  %v2_c0e8 = add i32 %v1_c0e8, 8
  %v3_c0e8 = inttoptr i32 %v2_c0e8 to i32*
  store i32 %v1_c0b4, i32* %v3_c0e8, align 4
  %v0_c0ec = load i32, i32* @r7, align 4
  store i32 %v0_c0ec, i32* @r0, align 4
  %v0_c0f0 = call i32 @function_14744()
  store i32 %v0_c0f0, i32* %r0.global-to-local, align 4
  store i32 %v2_bc84, i32* %r3.global-to-local, align 4
  %v3_c0f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0f8, i32* %r2.global-to-local, align 4
  %v2_c0fc = load i32, i32* @r4, align 4
  %v5_c0fc = mul i32 %v2_c0fc, 4
  %v6_c0fc = add i32 %v5_c0fc, %v2_bc84
  %v7_c0fc = inttoptr i32 %v6_c0fc to i32*
  store i32 %v0_c0f0, i32* %v7_c0fc, align 4
  %v0_c100 = load i32, i32* %r3.global-to-local, align 4
  %v1_c100 = load i32, i32* %r2.global-to-local, align 4
  %v4_c100 = mul i32 %v1_c100, 4
  %v5_c100 = add i32 %v4_c100, %v0_c100
  %v6_c100 = inttoptr i32 %v5_c100 to i32*
  %v7_c100 = load i32, i32* %v6_c100, align 4
  store i32 %v7_c100, i32* @r4, align 4
  %v1_c104 = inttoptr i32 %v7_c100 to i8*
  %v2_c104 = load i8, i8* %v1_c104, align 1
  %tmp93 = urem i8 %v2_c104, 16
  %v1_c108 = zext i8 %tmp93 to i32
  %v1_c10c = or i32 %v1_c108, 64
  store i32 %v1_c10c, i32* %r3.global-to-local, align 4
  %v1_c110 = trunc i32 %v1_c10c to i8
  store i8 %v1_c110, i8* %v1_c104, align 1
  %v0_c114 = load i32, i32* @r4, align 4
  %v1_c114 = inttoptr i32 %v0_c114 to i8*
  %v2_c114 = load i8, i8* %v1_c114, align 1
  %v3_c114 = zext i8 %v2_c114 to i32
  %v1_c118 = and i32 %v3_c114, 240
  %v1_c11c = or i32 %v1_c118, 5
  store i32 %v1_c11c, i32* %r2.global-to-local, align 4
  %v1_c120 = trunc i32 %v1_c11c to i8
  store i8 %v1_c120, i8* %v1_c114, align 1
  %v0_c128 = load i32, i32* @r7, align 4
  %v3_c128 = mul i32 %v0_c128, 65536
  store i32 %v3_c128, i32* %r0.global-to-local, align 4
  %v2_c12c = load i32, i32* @r4, align 4
  %v3_c12c = add i32 %v2_c12c, 1
  %v4_c12c = inttoptr i32 %v3_c12c to i8*
  store i8 %v1_c12c, i8* %v4_c12c, align 1
  %v0_c130 = load i32, i32* %r0.global-to-local, align 4
  %v3_c130 = udiv i32 %v0_c130, 65536
  store i32 %v3_c130, i32* %r0.global-to-local, align 4
  %v1_c134 = call i32 @function_15314(i32 %v3_c130)
  %v2_c134 = trunc i32 %v1_c134 to i16
  %v3_c138 = load i32, i32* @r4, align 4
  %v4_c138 = add i32 %v3_c138, 2
  %v5_c138 = inttoptr i32 %v4_c138 to i16*
  store i16 %v2_c134, i16* %v5_c138, align 2
  store i32 %v3_be70, i32* %r0.global-to-local, align 4
  %v1_c140 = call i32 @function_15314(i32 %v3_be70)
  %v2_c140 = trunc i32 %v1_c140 to i16
  store i32 %v1_c140, i32* %r0.global-to-local, align 4
  store i32 %v1_bd04, i32* %r1.global-to-local, align 4
  store i32 %v4_c148, i32* %r2.global-to-local, align 4
  store i1 %v2_c14c, i1* %cpsr_z.global-to-local, align 1
  %v3_c150 = load i32, i32* @r4, align 4
  %v4_c150 = add i32 %v3_c150, 4
  %v5_c150 = inttoptr i32 %v4_c150 to i16*
  store i16 %v2_c140, i16* %v5_c150, align 2
  %v0_c154 = load i32, i32* %r2.global-to-local, align 4
  %v1_c154 = trunc i32 %v0_c154 to i8
  %v2_c154 = load i32, i32* @r4, align 4
  %v3_c154 = add i32 %v2_c154, 8
  %v4_c154 = inttoptr i32 %v3_c154 to i8*
  store i8 %v1_c154, i8* %v4_c154, align 1
  %v0_c158 = load i32, i32* @r4, align 4
  %v1_c158 = add i32 %v0_c158, 20
  store i32 %v1_c158, i32* @sl, align 4
  %v0_c15c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c15c, label %dec_label_pc_c16c, label %dec_label_pc_c160

dec_label_pc_c160:                                ; preds = %dec_label_pc_c090
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_c164 = call i32 @function_15314(i32 16384)
  %v2_c164 = trunc i32 %v1_c164 to i16
  store i32 %v1_c164, i32* %r0.global-to-local, align 4
  %v3_c168 = load i32, i32* @r4, align 4
  %v4_c168 = add i32 %v3_c168, 6
  %v5_c168 = inttoptr i32 %v4_c168 to i16*
  store i16 %v2_c164, i16* %v5_c168, align 2
  %v2_c170.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c16c

dec_label_pc_c16c:                                ; preds = %dec_label_pc_c090, %dec_label_pc_c160
  %v2_c170 = phi i32 [ %v0_c158, %dec_label_pc_c090 ], [ %v2_c170.pre, %dec_label_pc_c160 ]
  %v3_c170 = add i32 %v2_c170, 9
  %v4_c170 = inttoptr i32 %v3_c170 to i8*
  store i8 6, i8* %v4_c170, align 1
  store i32 ptrtoint (i32* @global_var_2365c.94 to i32), i32* %r2.global-to-local, align 4
  %v2_c178 = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_c178, i32* %r1.global-to-local, align 4
  %v1_c17c = load i32, i32* @r4, align 4
  %v2_c17c = add i32 %v1_c17c, 12
  %v3_c17c = inttoptr i32 %v2_c17c to i32*
  store i32 %v2_c178, i32* %v3_c17c, align 4
  %v3_c180 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c180, i32* %r3.global-to-local, align 4
  %v0_c184 = load i32, i32* @r8, align 4
  %v4_c184 = mul i32 %v3_c180, 16
  %v5_c184 = add i32 %v0_c184, %v4_c184
  %v6_c184 = inttoptr i32 %v5_c184 to i32*
  %v7_c184 = load i32, i32* %v6_c184, align 4
  store i32 %v7_c184, i32* %r2.global-to-local, align 4
  store i32 %v5_c184, i32* %r3.global-to-local, align 4
  %v1_c190 = load i32, i32* @r4, align 4
  %v2_c190 = add i32 %v1_c190, 16
  %v3_c190 = inttoptr i32 %v2_c190 to i32*
  store i32 %v7_c184, i32* %v3_c190, align 4
  %v0_c194 = load i32, i32* %r3.global-to-local, align 4
  %v1_c194 = add i32 %v0_c194, 12
  %v2_c194 = inttoptr i32 %v1_c194 to i16*
  %v3_c194 = load i16, i16* %v2_c194, align 2
  %v1_c198 = add i32 %v0_c194, 8
  %v2_c198 = inttoptr i32 %v1_c198 to i32*
  %v3_c198 = load i32, i32* %v2_c198, align 4
  store i32 %v3_c198, i32* %r1.global-to-local, align 4
  %v2_c19c = load i32, i32* @r4, align 4
  %v3_c19c = add i32 %v2_c19c, 20
  %v4_c19c = inttoptr i32 %v3_c19c to i16*
  store i16 %v3_c194, i16* %v4_c19c, align 2
  %v0_c1a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c1a0 = load i32, i32* @sl, align 4
  %v2_c1a0 = add i32 %v1_c1a0, 4
  %v3_c1a0 = inttoptr i32 %v2_c1a0 to i32*
  store i32 %v0_c1a0, i32* %v3_c1a0, align 4
  %v0_c1a4 = load i32, i32* @sl, align 4
  %v1_c1a4 = add i32 %v0_c1a4, 13
  %v2_c1a4 = inttoptr i32 %v1_c1a4 to i8*
  %v3_c1a4 = load i8, i8* %v2_c1a4, align 1
  %v4_c1a4 = zext i8 %v3_c1a4 to i32
  store i32 %v4_c1a4, i32* %r2.global-to-local, align 4
  %v0_c1a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c1a8 = add i32 %v0_c1a8, 4
  %v2_c1a8 = inttoptr i32 %v1_c1a8 to i32*
  %v3_c1a8 = load i32, i32* %v2_c1a8, align 4
  store i32 %v3_c1a8, i32* %r1.global-to-local, align 4
  %v1_c1ac = or i32 %v4_c1a4, 1
  store i32 %v1_c1ac, i32* %r2.global-to-local, align 4
  %v1_c1b0 = add i32 %v0_c1a8, 14
  %v2_c1b0 = inttoptr i32 %v1_c1b0 to i16*
  %v3_c1b0 = load i16, i16* %v2_c1b0, align 2
  %v4_c1b0 = zext i16 %v3_c1b0 to i32
  store i32 %v4_c1b0, i32* %r3.global-to-local, align 4
  %v1_c1b4 = trunc i32 %v1_c1ac to i8
  store i8 %v1_c1b4, i8* %v2_c1a4, align 1
  %v0_c1b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c1b8 = trunc i32 %v0_c1b8 to i16
  %v2_c1b8 = load i32, i32* @sl, align 4
  %v3_c1b8 = add i32 %v2_c1b8, 2
  %v4_c1b8 = inttoptr i32 %v3_c1b8 to i16*
  store i16 %v1_c1b8, i16* %v4_c1b8, align 2
  %v0_c1bc = load i32, i32* @sl, align 4
  %v1_c1bc = add i32 %v0_c1bc, 12
  %v2_c1bc = inttoptr i32 %v1_c1bc to i8*
  %v3_c1bc = load i8, i8* %v2_c1bc, align 1
  %v4_c1bc = zext i8 %v3_c1bc to i32
  store i32 %v4_c1bc, i32* %r3.global-to-local, align 4
  %v1_c1c0 = add i32 %v0_c1bc, 13
  %v2_c1c0 = inttoptr i32 %v1_c1c0 to i8*
  %v3_c1c0 = load i8, i8* %v2_c1c0, align 1
  %v4_c1c0 = zext i8 %v3_c1c0 to i32
  %tmp94 = urem i8 %v3_c1bc, 16
  %v1_c1c4 = zext i8 %tmp94 to i32
  %v1_c1c8 = or i32 %v1_c1c4, 128
  store i32 %v1_c1c8, i32* %r3.global-to-local, align 4
  %v1_c1cc = or i32 %v4_c1c0, 16
  store i32 %v1_c1cc, i32* %r2.global-to-local, align 4
  %v0_c1d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_c1d0 = add i32 %v0_c1bc, 8
  %v3_c1d0 = inttoptr i32 %v2_c1d0 to i32*
  store i32 %v0_c1d0, i32* %v3_c1d0, align 4
  %v0_c1d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c1d4 = trunc i32 %v0_c1d4 to i8
  %v2_c1d4 = load i32, i32* @sl, align 4
  %v3_c1d4 = add i32 %v2_c1d4, 12
  %v4_c1d4 = inttoptr i32 %v3_c1d4 to i8*
  store i8 %v1_c1d4, i8* %v4_c1d4, align 1
  %v0_c1d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c1d8 = trunc i32 %v0_c1d8 to i8
  %v2_c1d8 = load i32, i32* @sl, align 4
  %v3_c1d8 = add i32 %v2_c1d8, 13
  %v4_c1d8 = inttoptr i32 %v3_c1d8 to i8*
  store i8 %v1_c1d8, i8* %v4_c1d8, align 1
  %v0_c1dc = call i32 @function_10038()
  %v1_c1dc = trunc i32 %v0_c1dc to i16
  store i32 %v0_c1dc, i32* %r0.global-to-local, align 4
  store i32 %v1_bd44, i32* %r1.global-to-local, align 4
  %v0_c1e4 = load i32, i32* @sl, align 4
  %v1_c1e4 = add i32 %v0_c1e4, 13
  %v2_c1e4 = inttoptr i32 %v1_c1e4 to i8*
  %v3_c1e4 = load i8, i8* %v2_c1e4, align 1
  %v4_c1e4 = zext i8 %v3_c1e4 to i32
  store i32 %v1_c1e8, i32* %r2.global-to-local, align 4
  %v1_c1ec = and i32 %v4_c1e4, 223
  %v5_c1f0 = or i32 %v1_c1ec, %v4_c1f0
  store i32 %v5_c1f0, i32* %r3.global-to-local, align 4
  %v1_c1f4 = trunc i32 %v5_c1f0 to i8
  store i8 %v1_c1f4, i8* %v2_c1e4, align 1
  %v0_c1fc = load i32, i32* @sl, align 4
  %v1_c1fc = add i32 %v0_c1fc, 13
  %v2_c1fc = inttoptr i32 %v1_c1fc to i8*
  %v3_c1fc = load i8, i8* %v2_c1fc, align 1
  %v4_c1fc = zext i8 %v3_c1fc to i32
  store i32 %v1_c200, i32* %r3.global-to-local, align 4
  %v1_c204 = and i32 %v4_c1fc, 239
  %v5_c208 = or i32 %v1_c204, %v4_c208
  store i32 %v5_c208, i32* %r2.global-to-local, align 4
  %v1_c20c = trunc i32 %v5_c208 to i8
  store i8 %v1_c20c, i8* %v2_c1fc, align 1
  store i32 %v1_bd84, i32* %r1.global-to-local, align 4
  %v0_c214 = load i32, i32* @sl, align 4
  %v1_c214 = add i32 %v0_c214, 13
  %v2_c214 = inttoptr i32 %v1_c214 to i8*
  %v3_c214 = load i8, i8* %v2_c214, align 1
  %v4_c214 = zext i8 %v3_c214 to i32
  store i32 %v1_c218, i32* %r2.global-to-local, align 4
  %v1_c21c = and i32 %v4_c214, 247
  %v5_c220 = or i32 %v1_c21c, %v4_c220
  store i32 %v5_c220, i32* %r3.global-to-local, align 4
  %v1_c224 = trunc i32 %v5_c220 to i8
  store i8 %v1_c224, i8* %v2_c214, align 1
  %v0_c22c = load i32, i32* @sl, align 4
  %v1_c22c = add i32 %v0_c22c, 13
  %v2_c22c = inttoptr i32 %v1_c22c to i8*
  %v3_c22c = load i8, i8* %v2_c22c, align 1
  %v4_c22c = zext i8 %v3_c22c to i32
  store i32 %v1_c230, i32* %r3.global-to-local, align 4
  %v1_c234 = and i32 %v4_c22c, 251
  %v5_c238 = or i32 %v1_c234, %v4_c238
  store i32 %v5_c238, i32* %r2.global-to-local, align 4
  %v1_c23c = trunc i32 %v5_c238 to i8
  store i8 %v1_c23c, i8* %v2_c22c, align 1
  store i32 %v1_bdc4, i32* %r1.global-to-local, align 4
  %v0_c244 = load i32, i32* @sl, align 4
  %v1_c244 = add i32 %v0_c244, 13
  %v2_c244 = inttoptr i32 %v1_c244 to i8*
  %v3_c244 = load i8, i8* %v2_c244, align 1
  %v4_c244 = zext i8 %v3_c244 to i32
  store i32 %v1_c248, i32* %r2.global-to-local, align 4
  %v1_c24c = and i32 %v4_c244, 253
  %v4_c250 = or i32 %v1_c24c, %v3_c250
  store i32 %v4_c250, i32* %r3.global-to-local, align 4
  %v1_c254 = trunc i32 %v4_c250 to i8
  store i8 %v1_c254, i8* %v2_c244, align 1
  %v0_c25c = load i32, i32* @sl, align 4
  %v1_c25c = add i32 %v0_c25c, 13
  %v2_c25c = inttoptr i32 %v1_c25c to i8*
  %v3_c25c = load i8, i8* %v2_c25c, align 1
  %v4_c25c = zext i8 %v3_c25c to i32
  %v1_c264 = and i32 %v4_c25c, 254
  store i32 %v1_c264, i32* %r2.global-to-local, align 4
  %v2_c268 = or i32 %v1_c264, %v1_c260
  store i32 %v2_c268, i32* %r3.global-to-local, align 4
  %v1_c26c = trunc i32 %v2_c268 to i8
  store i8 %v1_c26c, i8* %v2_c25c, align 1
  %v3_c270 = load i32, i32* @sl, align 4
  %v4_c270 = add i32 %v3_c270, 14
  %v5_c270 = inttoptr i32 %v4_c270 to i16*
  store i16 %v1_c1dc, i16* %v5_c270, align 2
  store i32 %v6_bdfc, i32* %r1.global-to-local, align 4
  %v0_c278 = load i32, i32* @r4, align 4
  %v1_c278 = add i32 %v0_c278, 40
  store i32 %v1_c278, i32* %r0.global-to-local, align 4
  %v2_c27c = inttoptr i32 %v1_c278 to i16*
  %v3_c27c = call i32 @function_10238(i16* %v2_c27c, i32 %v6_bdfc)
  store i32 %v3_c27c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bffc

dec_label_pc_c284:                                ; preds = %dec_label_pc_be68
  store i32 %v6_bdfc, i32* %r2.global-to-local, align 4
  %.pre = add i32 %v6_bdfc, 40
  br label %dec_label_pc_c294

dec_label_pc_c294:                                ; preds = %dec_label_pc_c010, %dec_label_pc_c284
  %storemerge7.pre-phi = phi i32 [ %v1_c0dc, %dec_label_pc_c010 ], [ %.pre, %dec_label_pc_c284 ]
  %v0_c2a023 = phi i32 [ %v0_c004, %dec_label_pc_c010 ], [ 0, %dec_label_pc_c284 ]
  store i32 %storemerge7.pre-phi, i32* @r7, align 4
  %storemerge5 = mul i32 %v6_bdfc, 65536
  %storemerge = add i32 %v6_bdfc, 20
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v1_c294 = add i32 %storemerge5, 1310720
  store i32 %v1_c294, i32* %r3.global-to-local, align 4
  %v3_c298 = udiv i32 %v1_c294, 65536
  store i32 %v3_c298, i32* @sl, align 4
  %v2_c3d0 = icmp eq i32 %v1_be1c, 0
  %v9_c2c4 = icmp eq i32 %v3_be70, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  br label %dec_label_pc_c29c

dec_label_pc_c29c:                                ; preds = %dec_label_pc_c29c, %dec_label_pc_c3b4, %dec_label_pc_c294
  %v0_c2a0 = phi i32 [ %v0_c2a023, %dec_label_pc_c294 ], [ 0, %dec_label_pc_c3b4 ], [ 0, %dec_label_pc_c29c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c2a0 = icmp eq i32 %v0_c2a0, 0
  store i1 %v2_c2a0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c2a0, label %dec_label_pc_c29c, label %dec_label_pc_c2ac

dec_label_pc_c2ac:                                ; preds = %dec_label_pc_c29c, %dec_label_pc_c3b4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c2b0

dec_label_pc_c2b0:                                ; preds = %dec_label_pc_c2dc, %dec_label_pc_c2ac
  %v1_c2bc = phi i32 [ %v1_c3a4, %dec_label_pc_c2dc ], [ 0, %dec_label_pc_c2ac ]
  store i32 ptrtoint (i32* @global_var_10000.25 to i32), i32* %r3.global-to-local, align 4
  store i32 %v3_be70, i32* %r1.global-to-local, align 4
  %v4_c2bc = mul i32 %v1_c2bc, 4
  %v5_c2bc = add i32 %v4_c2bc, %v2_bc84
  %v6_c2bc = inttoptr i32 %v5_c2bc to i32*
  %v7_c2bc = load i32, i32* %v6_c2bc, align 4
  store i32 %v7_c2bc, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i1 %v9_c2c4, i1* %cpsr_z.global-to-local, align 1
  %v1_c2c8 = add i32 %v7_c2bc, 20
  store i32 %v1_c2c8, i32* @r5, align 4
  br i1 %v9_c2c4, label %dec_label_pc_c3c8, label %dec_label_pc_c2d0

dec_label_pc_c2d0:                                ; preds = %dec_label_pc_c2b0
  store i32 %v1_be1c, i32* %r2.global-to-local, align 4
  store i1 %v2_c3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c3d0, label %dec_label_pc_c2dc, label %dec_label_pc_c3dc

dec_label_pc_c2dc:                                ; preds = %dec_label_pc_c2d0, %dec_label_pc_c3c8, %dec_label_pc_c3dc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c2e0 = load i32, i32* @r4, align 4
  %v3_c2e0 = add i32 %v2_c2e0, 10
  %v4_c2e0 = inttoptr i32 %v3_c2e0 to i16*
  store i16 0, i16* %v4_c2e0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c2e8 = load i32, i32* @r4, align 4
  store i32 %v0_c2e8, i32* @r0, align 4
  %v2_c2ec = call i32 @function_e5a4(i32 %v0_c2e8, i32 20)
  %v3_c2ec = trunc i32 %v2_c2ec to i16
  store i32 %v2_c2ec, i32* %r0.global-to-local, align 4
  %v3_c2f0 = load i32, i32* %stack_var_-44, align 4
  %v3_c2f4 = mul i32 %v3_c2f0, 16
  %v1_c2f8 = load i32, i32* @r8, align 4
  %v2_c2f8 = add i32 %v1_c2f8, %v3_c2f4
  store i32 %v2_c2f8, i32* %r2.global-to-local, align 4
  %v1_c2fc = add i32 %v2_c2f8, 4
  %v2_c2fc = inttoptr i32 %v1_c2fc to i32*
  %v3_c2fc = load i32, i32* %v2_c2fc, align 4
  %v3_c300 = mul i32 %v3_c2fc, 65536
  store i32 %v3_c300, i32* %r1.global-to-local, align 4
  %v1_c304 = add i32 %v3_c2fc, 1
  store i32 %v1_c304, i32* %r3.global-to-local, align 4
  store i32 %v1_c304, i32* %v2_c2fc, align 4
  %v3_c30c = load i32, i32* @r4, align 4
  %v4_c30c = add i32 %v3_c30c, 10
  %v5_c30c = inttoptr i32 %v4_c30c to i16*
  store i16 %v3_c2ec, i16* %v5_c30c, align 2
  %v0_c310 = load i32, i32* %r1.global-to-local, align 4
  %v3_c310 = udiv i32 %v0_c310, 65536
  store i32 %v3_c310, i32* %r0.global-to-local, align 4
  %v1_c314 = call i32 @function_15314(i32 %v3_c310)
  store i32 %v1_c314, i32* %r0.global-to-local, align 4
  %v1_c318 = load i32, i32* @r5, align 4
  %v2_c318 = add i32 %v1_c318, 4
  %v3_c318 = inttoptr i32 %v2_c318 to i32*
  store i32 %v1_c314, i32* %v3_c318, align 4
  %v3_c31c = load i32, i32* %stack_var_-44, align 4
  %v3_c320 = mul i32 %v3_c31c, 16
  %v1_c324 = load i32, i32* @r8, align 4
  %v2_c324 = add i32 %v1_c324, %v3_c320
  store i32 %v2_c324, i32* %r3.global-to-local, align 4
  %v1_c328 = add i32 %v2_c324, 8
  %v2_c328 = inttoptr i32 %v1_c328 to i32*
  %v3_c328 = load i32, i32* %v2_c328, align 4
  %v3_c330 = urem i32 %v3_c328, 65536
  store i32 %v3_c330, i32* %r0.global-to-local, align 4
  %v1_c334 = call i32 @function_15314(i32 %v3_c330)
  %v2_c33c = load i32, i32* @r5, align 4
  %v3_c33c = add i32 %v2_c33c, 16
  %v4_c33c = inttoptr i32 %v3_c33c to i16*
  store i16 0, i16* %v4_c33c, align 2
  %v1_c340 = load i32, i32* @r5, align 4
  %v2_c340 = add i32 %v1_c340, 8
  %v3_c340 = inttoptr i32 %v2_c340 to i32*
  store i32 %v1_c334, i32* %v3_c340, align 4
  %v0_c344 = load i32, i32* @sl, align 4
  store i32 %v0_c344, i32* %r0.global-to-local, align 4
  %v1_c348 = call i32 @function_15314(i32 %v0_c344)
  %v0_c34c = load i32, i32* @r5, align 4
  store i32 %v0_c34c, i32* @r1, align 4
  store i32 %v1_c348, i32* %r2.global-to-local, align 4
  %v0_c354 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_c354, i32* %r3.global-to-local, align 4
  %v0_c358 = load i32, i32* @r4, align 4
  store i32 %v0_c358, i32* %r0.global-to-local, align 4
  %v4_c35c = call i32 @function_e5f4(i32 %v0_c358, i32 %v0_c34c, i32 %v1_c348, i32 %v0_c354)
  %v5_c35c = trunc i32 %v4_c35c to i16
  store i32 %v4_c35c, i32* %r0.global-to-local, align 4
  %v3_c360 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c360, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v3_c368 = mul i32 %v3_c360, 32
  store i32 %v3_c368, i32* %lr.global-to-local, align 4
  %v3_c36c = load i32, i32* @r5, align 4
  %v4_c36c = add i32 %v3_c36c, 16
  %v5_c36c = inttoptr i32 %v4_c36c to i16*
  store i16 %v5_c35c, i16* %v5_c36c, align 2
  %v0_c370 = load i32, i32* %lr.global-to-local, align 4
  %v1_c370 = load i32, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_c370, -8
  %v5_c370 = add i32 %v0_c370, %tmp95
  store i32 %v5_c370, i32* %lr.global-to-local, align 4
  %v0_c374 = load i32, i32* @r5, align 4
  %v1_c374 = add i32 %v0_c374, 2
  %v2_c374 = inttoptr i32 %v1_c374 to i16*
  %v3_c374 = load i16, i16* %v2_c374, align 2
  %v4_c374 = zext i16 %v3_c374 to i32
  store i32 %v4_c374, i32* %r5.global-to-local, align 4
  %v1_c378 = load i32, i32* %r1.global-to-local, align 4
  %v2_c378 = add i32 %v1_c378, %v5_c370
  store i32 %v2_c378, i32* @lr, align 4
  %v3_c37c = add i32 %v2_c378, 2
  %v4_c37c = inttoptr i32 %v3_c37c to i16*
  store i16 %v3_c374, i16* %v4_c37c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c388 = load i32, i32* @r4, align 4
  store i32 %v0_c388, i32* @r1, align 4
  %v0_c38c = load i32, i32* @fp, align 4
  store i32 %v0_c38c, i32* @r0, align 4
  %v0_c390 = load i32, i32* @r7, align 4
  store i32 %v0_c390, i32* @r2, align 4
  %v0_c39c = call i32 @function_15560()
  %v3_c3a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c3a0, i32* %r3.global-to-local, align 4
  %v1_c3a4 = add i32 %v3_c3a0, 1
  store i32 %v1_c3a4, i32* %r0.global-to-local, align 4
  %v0_c3a8 = load i32, i32* @r6, align 4
  %v9_c3a8 = icmp eq i32 %v0_c3a8, %v1_c3a4
  store i1 %v9_c3a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c3a4, i32* %stack_var_-44, align 4
  %v8_c3b0 = icmp sgt i32 %v0_c3a8, %v1_c3a4
  br i1 %v8_c3b0, label %dec_label_pc_c2b0, label %dec_label_pc_c3b4

dec_label_pc_c3b4:                                ; preds = %dec_label_pc_c2dc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c3b8 = icmp eq i32 %v0_c3a8, 0
  store i1 %v2_c3b8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c3b8, label %dec_label_pc_c29c, label %dec_label_pc_c2ac

dec_label_pc_c3c8:                                ; preds = %dec_label_pc_c2b0
  %v0_c3c8 = call i32 @function_10038()
  %v1_c3c8 = trunc i32 %v0_c3c8 to i16
  store i32 %v0_c3c8, i32* %r0.global-to-local, align 4
  store i32 %v1_be1c, i32* %r2.global-to-local, align 4
  store i1 %v2_c3d0, i1* %cpsr_z.global-to-local, align 1
  %v3_c3d4 = load i32, i32* @r4, align 4
  %v4_c3d4 = add i32 %v3_c3d4, 4
  %v5_c3d4 = inttoptr i32 %v4_c3d4 to i16*
  store i16 %v1_c3c8, i16* %v5_c3d4, align 2
  br i1 %v2_c3d0, label %dec_label_pc_c2dc, label %dec_label_pc_c3c8.dec_label_pc_c3dc_crit_edge

dec_label_pc_c3c8.dec_label_pc_c3dc_crit_edge:    ; preds = %dec_label_pc_c3c8
  %v0_c3dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c3dc

dec_label_pc_c3dc:                                ; preds = %dec_label_pc_c3c8.dec_label_pc_c3dc_crit_edge, %dec_label_pc_c2d0
  %v0_c3dc = phi i32 [ %v0_c3dc.pre, %dec_label_pc_c3c8.dec_label_pc_c3dc_crit_edge ], [ %v7_c2bc, %dec_label_pc_c2d0 ]
  %v1_c3dc = add i32 %v0_c3dc, 40
  store i32 %v1_c3dc, i32* %r0.global-to-local, align 4
  store i32 %v6_bdfc, i32* %r1.global-to-local, align 4
  %v2_c3e4 = inttoptr i32 %v1_c3dc to i16*
  %v3_c3e4 = call i32 @function_10238(i16* %v2_c3e4, i32 %v6_bdfc)
  store i32 %v3_c3e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c2dc

; uselistorder directives
  uselistorder i32 %v0_c3c8, { 1, 0 }
  uselistorder i32 %v1_c3a4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c370, { 1, 0 }
  uselistorder i32 %v4_c35c, { 1, 0 }
  uselistorder i32 %v3_c330, { 1, 0 }
  uselistorder i32 %v3_c310, { 1, 0 }
  uselistorder i32 %v3_c2fc, { 1, 0 }
  uselistorder i32 %v2_c2ec, { 1, 0 }
  uselistorder i1 %v2_c3d0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_c1dc, { 1, 0 }
  uselistorder i32 %v1_c164, { 1, 0 }
  uselistorder i32 %v1_c140, { 1, 0 }
  uselistorder i32 %v3_c130, { 1, 0 }
  uselistorder i32 %v0_c080, { 1, 0 }
  uselistorder i32 %v1_c064, { 1, 2, 0 }
  uselistorder i32 %v1_c000, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bfec, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_bf78, { 1, 0 }
  uselistorder i32 %v0_bf70, { 0, 2, 1, 3 }
  uselistorder i1 %v9_bfa0, { 1, 0 }
  uselistorder i32 %v4_bfb4, { 1, 0 }
  uselistorder i32 %v0_c094, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v1_bf0c, { 1, 0 }
  uselistorder i32 %v4_beec, { 1, 0 }
  uselistorder i1 %v7_bee4, { 1, 0, 2 }
  uselistorder i1 %v7_be98, { 1, 0 }
  uselistorder i32 %v3_be94, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i32 %v1_c248, { 1, 0 }
  uselistorder i32 %v1_c230, { 1, 0 }
  uselistorder i32 %v1_c218, { 1, 0 }
  uselistorder i32 %v1_c200, { 1, 0 }
  uselistorder i32 %v1_c1e8, { 1, 0 }
  uselistorder i32 %v3_bfac, { 0, 2, 1 }
  uselistorder i1 %v2_bfc8, { 1, 0 }
  uselistorder i32 %v1_bfc4, { 1, 0 }
  uselistorder i32 %v4_bfc0, { 2, 0, 1 }
  uselistorder i1 %v9_c074, { 2, 3, 1, 0 }
  uselistorder i32 %v2_becc, { 1, 0, 2 }
  uselistorder i32 %v3_be70, { 3, 4, 2, 1, 0 }
  uselistorder i1 %v7_be60, { 1, 0 }
  uselistorder i1 %v7_be34, { 1, 0 }
  uselistorder i32 %v3_be30, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_be1c, { 2, 3, 1, 0 }
  uselistorder i32 %v6_bdfc, { 8, 7, 2, 0, 1, 9, 5, 4, 6, 3 }
  uselistorder i32 %v3_bd24, { 1, 4, 3, 0, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 45, 44, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20, 21, 22, 23, 25, 24, 27, 26, 28, 30, 29, 31, 33, 32, 34, 35, 36, 38, 37, 39, 41, 40, 43, 42, 45, 44, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 24, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 768, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 3, 0, 2, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c2dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c2ac, { 1, 0 }
  uselistorder label %dec_label_pc_c29c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c294, { 1, 0 }
  uselistorder label %dec_label_pc_c16c, { 1, 0 }
  uselistorder label %dec_label_pc_c02c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bffc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bf38, { 2, 1, 3, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_bea4, { 1, 0 }
}

define i32 @function_c3f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c3f0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c3f0 = load i32, i32* @r4, align 4
  %v18_c3f0 = load i32, i32* @sb, align 4
  %v24_c3f0 = load i32, i32* @fp, align 4
  %v27_c3f0 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c40c = call i32 @function_13cd4(i32 %arg1, i32 4)
  %v0_c410 = load i32, i32* @r5, align 4
  store i32 %v0_c410, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c420 = load i32, i32* @r4, align 4
  %v5_c424 = inttoptr i32 %v0_c410 to i32*
  %v6_c424 = call i32 @function_a430(i32 %v0_c420, i32* %v5_c424, i32 2, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c43c = load i32, i32* @r5, align 4
  store i32 %v0_c43c, i32* %r1.global-to-local, align 4
  %v0_c440 = load i32, i32* @r4, align 4
  %v5_c444 = trunc i32 %v6_c424 to i8
  %v6_c448 = inttoptr i32 %v0_c43c to i32*
  %v7_c448 = call i32 @function_a430(i32 %v0_c440, i32* %v6_c448, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_c44c = load i32, i32* @r5, align 4
  store i32 %v0_c44c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c45c = load i32, i32* @r4, align 4
  %v5_c460 = inttoptr i32 %v0_c44c to i32*
  %v6_c460 = call i32 @function_a430(i32 %v0_c45c, i32* %v5_c460, i32 4, i32 64)
  %v0_c46c = load i32, i32* @r5, align 4
  store i32 %v0_c46c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c478 = load i32, i32* @r4, align 4
  %v6_c480 = inttoptr i32 %v0_c46c to i32*
  %v7_c480 = call i32 @function_a430(i32 %v0_c478, i32* %v6_c480, i32 5, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c494 = load i32, i32* @r5, align 4
  store i32 %v0_c494, i32* %r1.global-to-local, align 4
  %v0_c498 = load i32, i32* @r4, align 4
  %v1_c49c = urem i32 %v7_c480, 256
  store i32 %v1_c49c, i32* @fp, align 4
  %v4_c4a0 = inttoptr i32 %v0_c494 to i32*
  %v5_c4a0 = call i32 @function_a430(i32 %v0_c498, i32* %v4_c4a0, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_c4a8 = load i32, i32* @r5, align 4
  store i32 %v0_c4a8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v5_c4a0, i32* @sl, align 4
  %v0_c4b8 = load i32, i32* @r4, align 4
  %v4_c4bc = inttoptr i32 %v0_c4a8 to i32*
  %v5_c4bc = call i32 @function_a430(i32 %v0_c4b8, i32* %v4_c4bc, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_c4c4 = load i32, i32* @r5, align 4
  store i32 %v0_c4c4, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_c4bc, i32* @r6, align 4
  %v0_c4d4 = load i32, i32* @r4, align 4
  %v4_c4d8 = inttoptr i32 %v0_c4c4 to i32*
  %v5_c4d8 = call i32 @function_a430(i32 %v0_c4d4, i32* %v4_c4d8, i32 17, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_c4e4 = load i32, i32* @r5, align 4
  store i32 %v0_c4e4, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_c4f0 = load i32, i32* @r4, align 4
  %v5_c4f4 = inttoptr i32 %v0_c4e4 to i32*
  %v6_c4f4 = call i32 @function_a430(i32 %v0_c4f0, i32* %v5_c4f4, i32 18, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_c4f8 = load i32, i32* @r5, align 4
  store i32 %v0_c4f8, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c508 = load i32, i32* @r4, align 4
  %v5_c50c = inttoptr i32 %v0_c4f8 to i32*
  %v6_c50c = call i32 @function_a430(i32 %v0_c508, i32* %v5_c50c, i32 11, i32 0)
  %v0_c510 = load i32, i32* @r5, align 4
  store i32 %v0_c510, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c520 = load i32, i32* @r4, align 4
  %v5_c524 = inttoptr i32 %v0_c510 to i32*
  %v6_c524 = call i32 @function_a430(i32 %v0_c520, i32* %v5_c524, i32 12, i32 1)
  %v0_c528 = load i32, i32* @r5, align 4
  store i32 %v0_c528, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c538 = load i32, i32* @r4, align 4
  %v5_c53c = inttoptr i32 %v0_c528 to i32*
  %v6_c53c = call i32 @function_a430(i32 %v0_c538, i32* %v5_c53c, i32 13, i32 0)
  %v0_c540 = load i32, i32* @r5, align 4
  store i32 %v0_c540, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c550 = load i32, i32* @r4, align 4
  %v5_c554 = inttoptr i32 %v0_c540 to i32*
  %v6_c554 = call i32 @function_a430(i32 %v0_c550, i32* %v5_c554, i32 14, i32 0)
  %v0_c558 = load i32, i32* @r5, align 4
  store i32 %v0_c558, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c568 = load i32, i32* @r4, align 4
  %v5_c56c = inttoptr i32 %v0_c558 to i32*
  %v6_c56c = call i32 @function_a430(i32 %v0_c568, i32* %v5_c56c, i32 15, i32 0)
  %v0_c570 = load i32, i32* @r5, align 4
  store i32 %v0_c570, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c580 = load i32, i32* @r4, align 4
  %v5_c584 = inttoptr i32 %v0_c570 to i32*
  %v6_c584 = call i32 @function_a430(i32 %v0_c580, i32* %v5_c584, i32 16, i32 0)
  %v0_c588 = load i32, i32* @r5, align 4
  store i32 %v0_c588, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_c584, i32* @sb, align 4
  %v0_c598 = load i32, i32* @r4, align 4
  %v4_c59c = inttoptr i32 %v0_c588 to i32*
  %v5_c59c = call i32 @function_a430(i32 %v0_c598, i32* %v4_c59c, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c5ac = load i32, i32* @r5, align 4
  store i32 %v0_c5ac, i32* %r1.global-to-local, align 4
  %v0_c5b0 = load i32, i32* @r4, align 4
  %v4_c5b4 = inttoptr i32 %v0_c5ac to i32*
  %v5_c5b4 = call i32 @function_a430(i32 %v0_c5b0, i32* %v4_c5b4, i32 1, i32 1)
  %v2_c5c0 = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_c5c0, i32* %r3.global-to-local, align 4
  %v1_c5c4 = urem i32 %v5_c5b4, 256
  %v0_c5c8 = load i32, i32* @r5, align 4
  store i32 %v0_c5c8, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c5d0 = load i32, i32* @r4, align 4
  %v5_c5d8 = inttoptr i32 %v0_c5c8 to i32*
  %v6_c5d8 = call i32 @function_a3c4(i32 %v0_c5d0, i32* %v5_c5d8, i32 25, i32 %v2_c5c0, i32 %v1_c5c4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c5ec = call i32 @function_1561c(i32 2, i32 3, i32 6)
  store i32 %v3_c5ec, i32* @r0, align 4
  %v7_c5f0 = icmp eq i32 %v3_c5ec, -1
  store i1 %v7_c5f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c5f0, label %dec_label_pc_c864, label %dec_label_pc_c5fc

dec_label_pc_c5fc:                                ; preds = %dec_label_pc_c3f0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c604 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c604, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_c618 = call i32 @function_155ac(i32 %v3_c5ec, i32 0, i32 3, i32 %v6_c604, i32 4)
  %v7_c61c = icmp eq i32 %v5_c618, -1
  store i1 %v7_c61c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c61c, label %dec_label_pc_c85c, label %dec_label_pc_c624

dec_label_pc_c624:                                ; preds = %dec_label_pc_c5fc
  %v0_c628 = load i32, i32* @sl, align 4
  %v0_c630 = load i32, i32* @r6, align 4
  %v3_c638 = urem i32 %v7_c448, 65536
  store i32 %v3_c638, i32* %r3.global-to-local, align 4
  %v3_c63c = urem i32 %v0_c628, 65536
  store i32 %v3_c63c, i32* %r2.global-to-local, align 4
  %v3_c640 = urem i32 %v0_c630, 65536
  store i32 %v3_c640, i32* %r1.global-to-local, align 4
  %v0_c644 = load i32, i32* @r7, align 4
  %v2_c644 = icmp eq i32 %v0_c644, 0
  store i1 %v2_c644, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c644, label %dec_label_pc_ca88, label %dec_label_pc_c65c

dec_label_pc_c65c:                                ; preds = %dec_label_pc_c624
  %v3_c664 = mul i32 %v5_c59c, 65536
  %v1_c668 = add i32 %v3_c664, 2621440
  %v3_c674 = udiv i32 %v1_c668, 65536
  store i32 %v3_c674, i32* @sl, align 4
  %v3_c678 = urem i32 %v5_c4d8, 65536
  store i32 %v3_c678, i32* @r6, align 4
  %v1_c688 = urem i32 %v6_c50c, 2
  %v1_c68c = urem i32 %v6_c524, 2
  %v1_c690 = urem i32 %v6_c53c, 2
  store i32 %v6_c53c, i32* %r1.global-to-local, align 4
  %v0_c6a8 = load i32, i32* @sb, align 4
  %v1_c6a8 = urem i32 %v0_c6a8, 2
  %v1_c6ac = urem i32 %v6_c554, 2
  store i32 %v1_c6ac, i32* %r2.global-to-local, align 4
  %v1_c6b0 = urem i32 %v6_c56c, 2
  store i32 %v1_c6b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_c6bc = urem i32 %v6_c53c, 256
  store i32 %v1_c6bc, i32* @sb, align 4
  %v4_c818 = sext i8 %v5_c444 to i32
  %sext = mul i32 %v6_c460, 16777216
  %v4_c834 = sdiv i32 %sext, 16777216
  %tmp = sub nsw i32 0, %v1_c688
  %v4_c720 = and i32 %tmp, 32
  %tmp55 = sub nsw i32 0, %v1_c68c
  %v4_c734 = and i32 %tmp55, 16
  %tmp56 = sub nsw i32 0, %v1_c690
  %v4_c748 = and i32 %tmp56, 8
  %tmp57 = sub nsw i32 0, %v1_c6ac
  %v4_c75c = and i32 %tmp57, 4
  %tmp58 = sub nsw i32 0, %v1_c6b0
  %v3_c770 = and i32 %tmp58, 2
  br label %dec_label_pc_c7d8

dec_label_pc_c6cc:                                ; preds = %dec_label_pc_c7d8, %dec_label_pc_c84c
  %v2_c6d0 = phi i32 [ %v0_c844, %dec_label_pc_c7d8 ], [ %v2_c6d0.pre, %dec_label_pc_c84c ]
  %v3_c6d0 = add i32 %v2_c6d0, 9
  %v4_c6d0 = inttoptr i32 %v3_c6d0 to i8*
  store i8 6, i8* %v4_c6d0, align 1
  %v3_c6d4 = load i32, i32* %stack_var_-44, align 4
  %v5_c6dc = mul i32 %v3_c6d4, 24
  store i32 %v5_c6dc, i32* %r3.global-to-local, align 4
  store i32 %v6_c5d8, i32* %r2.global-to-local, align 4
  %v1_c6e4 = load i32, i32* @r5, align 4
  %v2_c6e4 = add i32 %v1_c6e4, 12
  %v3_c6e4 = inttoptr i32 %v2_c6e4 to i32*
  store i32 %v6_c5d8, i32* %v3_c6e4, align 4
  %v0_c6e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6e8 = load i32, i32* @r8, align 4
  %v2_c6e8 = add i32 %v1_c6e8, %v0_c6e8
  store i32 %v2_c6e8, i32* %r3.global-to-local, align 4
  %v1_c6ec = add i32 %v2_c6e8, 16
  %v2_c6ec = inttoptr i32 %v1_c6ec to i32*
  %v3_c6ec = load i32, i32* %v2_c6ec, align 4
  store i32 %v3_c6ec, i32* %r2.global-to-local, align 4
  %v1_c6f4 = load i32, i32* @r5, align 4
  %v2_c6f4 = add i32 %v1_c6f4, 16
  %v3_c6f4 = inttoptr i32 %v2_c6f4 to i32*
  store i32 %v3_c6ec, i32* %v3_c6f4, align 4
  %v1_c6f8 = call i32 @function_15314(i32 %v3_c63c)
  %v2_c6f8 = trunc i32 %v1_c6f8 to i16
  %v3_c6fc = load i32, i32* @r5, align 4
  %v4_c6fc = add i32 %v3_c6fc, 20
  %v5_c6fc = inttoptr i32 %v4_c6fc to i16*
  store i16 %v2_c6f8, i16* %v5_c6fc, align 2
  %v1_c704 = call i32 @function_15314(i32 %v3_c640)
  %v2_c704 = trunc i32 %v1_c704 to i16
  %v3_c708 = load i32, i32* @r4, align 4
  %v4_c708 = add i32 %v3_c708, 2
  %v5_c708 = inttoptr i32 %v4_c708 to i16*
  store i16 %v2_c704, i16* %v5_c708, align 2
  %v0_c70c = load i32, i32* @r6, align 4
  %v1_c710 = call i32 @function_15314(i32 %v0_c70c)
  %v0_c714 = load i32, i32* @r4, align 4
  %v1_c714 = add i32 %v0_c714, 13
  %v2_c714 = inttoptr i32 %v1_c714 to i8*
  %v3_c714 = load i8, i8* %v2_c714, align 1
  %v4_c714 = zext i8 %v3_c714 to i32
  store i32 %v1_c688, i32* %r1.global-to-local, align 4
  %v1_c71c = and i32 %v4_c714, 223
  %v5_c720 = or i32 %v1_c71c, %v4_c720
  store i32 %v5_c720, i32* %r3.global-to-local, align 4
  %v1_c724 = trunc i32 %v5_c720 to i8
  store i8 %v1_c724, i8* %v2_c714, align 1
  %v0_c728 = load i32, i32* @r4, align 4
  %v1_c728 = add i32 %v0_c728, 13
  %v2_c728 = inttoptr i32 %v1_c728 to i8*
  %v3_c728 = load i8, i8* %v2_c728, align 1
  %v4_c728 = zext i8 %v3_c728 to i32
  store i32 %v1_c68c, i32* %r3.global-to-local, align 4
  %v1_c730 = and i32 %v4_c728, 239
  %v5_c734 = or i32 %v1_c730, %v4_c734
  store i32 %v5_c734, i32* %r2.global-to-local, align 4
  %v1_c738 = trunc i32 %v5_c734 to i8
  store i8 %v1_c738, i8* %v2_c728, align 1
  %v0_c73c = load i32, i32* @r4, align 4
  %v1_c73c = add i32 %v0_c73c, 13
  %v2_c73c = inttoptr i32 %v1_c73c to i8*
  %v3_c73c = load i8, i8* %v2_c73c, align 1
  %v4_c73c = zext i8 %v3_c73c to i32
  store i32 %v1_c690, i32* %r1.global-to-local, align 4
  %v1_c744 = and i32 %v4_c73c, 247
  %v5_c748 = or i32 %v1_c744, %v4_c748
  store i32 %v5_c748, i32* %r3.global-to-local, align 4
  %v1_c74c = trunc i32 %v5_c748 to i8
  store i8 %v1_c74c, i8* %v2_c73c, align 1
  %v0_c750 = load i32, i32* @r4, align 4
  %v1_c750 = add i32 %v0_c750, 13
  %v2_c750 = inttoptr i32 %v1_c750 to i8*
  %v3_c750 = load i8, i8* %v2_c750, align 1
  %v4_c750 = zext i8 %v3_c750 to i32
  store i32 %v1_c6ac, i32* %r3.global-to-local, align 4
  %v1_c758 = and i32 %v4_c750, 251
  %v5_c75c = or i32 %v1_c758, %v4_c75c
  store i32 %v5_c75c, i32* %r2.global-to-local, align 4
  %v1_c760 = trunc i32 %v5_c75c to i8
  store i8 %v1_c760, i8* %v2_c750, align 1
  %v0_c764 = load i32, i32* @r4, align 4
  %v1_c764 = add i32 %v0_c764, 13
  %v2_c764 = inttoptr i32 %v1_c764 to i8*
  %v3_c764 = load i8, i8* %v2_c764, align 1
  %v4_c764 = zext i8 %v3_c764 to i32
  store i32 %v1_c6b0, i32* %r1.global-to-local, align 4
  %v1_c76c = and i32 %v4_c764, 253
  %v4_c770 = or i32 %v1_c76c, %v3_c770
  store i32 %v4_c770, i32* %r3.global-to-local, align 4
  %v1_c774 = trunc i32 %v4_c770 to i8
  store i8 %v1_c774, i8* %v2_c764, align 1
  %v0_c778 = load i32, i32* @r4, align 4
  %v1_c778 = add i32 %v0_c778, 12
  %v2_c778 = inttoptr i32 %v1_c778 to i8*
  %v3_c778 = load i8, i8* %v2_c778, align 1
  %v4_c778 = zext i8 %v3_c778 to i32
  store i32 %v4_c778, i32* %r2.global-to-local, align 4
  %v1_c77c = add i32 %v0_c778, 13
  %v2_c77c = inttoptr i32 %v1_c77c to i8*
  %v3_c77c = load i8, i8* %v2_c77c, align 1
  %v4_c77c = zext i8 %v3_c77c to i32
  store i32 %v1_c6a8, i32* %r1.global-to-local, align 4
  %tmp59 = urem i8 %v3_c778, 16
  %v1_c784 = zext i8 %tmp59 to i32
  %v1_c788 = and i32 %v4_c77c, 254
  %v2_c78c = or i32 %v1_c788, %v1_c6a8
  store i32 %v2_c78c, i32* %r3.global-to-local, align 4
  %v1_c790 = or i32 %v1_c784, 80
  store i32 %v1_c790, i32* %r2.global-to-local, align 4
  %v1_c794 = trunc i32 %v2_c78c to i8
  store i8 %v1_c794, i8* %v2_c77c, align 1
  %v0_c798 = load i32, i32* %r2.global-to-local, align 4
  %v1_c798 = trunc i32 %v0_c798 to i8
  %v2_c798 = load i32, i32* @r4, align 4
  %v3_c798 = add i32 %v2_c798, 12
  %v4_c798 = inttoptr i32 %v3_c798 to i8*
  store i8 %v1_c798, i8* %v4_c798, align 1
  %v1_c79c = load i32, i32* @r4, align 4
  %v2_c79c = add i32 %v1_c79c, 4
  %v3_c79c = inttoptr i32 %v2_c79c to i32*
  store i32 %v1_c710, i32* %v3_c79c, align 4
  %v0_c7a0 = call i32 @function_10038()
  %v1_c7a0 = trunc i32 %v0_c7a0 to i16
  %v0_c7a4 = load i32, i32* @sb, align 4
  %v2_c7a4 = icmp eq i32 %v0_c7a4, 0
  store i1 %v2_c7a4, i1* %cpsr_z.global-to-local, align 1
  %v3_c7b0.pre = load i32, i32* @r4, align 4
  br i1 %v2_c7a4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c6cc
  %v2_c7a8 = add i32 %v3_c7b0.pre, 13
  %v3_c7a8 = inttoptr i32 %v2_c7a8 to i8*
  %v4_c7a8 = load i8, i8* %v3_c7a8, align 1
  %v5_c7a8 = zext i8 %v4_c7a8 to i32
  %v2_c7ac = or i32 %v5_c7a8, 8
  store i32 %v2_c7ac, i32* @r3, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c6cc, %bb
  %v4_c7b0 = add i32 %v3_c7b0.pre, 14
  %v5_c7b0 = inttoptr i32 %v4_c7b0 to i16*
  store i16 %v1_c7a0, i16* %v5_c7b0, align 2
  store i32 %v5_c59c, i32* %r1.global-to-local, align 4
  %v0_c7b8 = load i32, i32* @r5, align 4
  %v1_c7b8 = add i32 %v0_c7b8, 40
  br i1 %v2_c7a4, label %bb54, label %bb53

bb53:                                             ; preds = %.thread
  %v1_c7bc = load i32, i32* @r3, align 4
  %v2_c7bc = trunc i32 %v1_c7bc to i8
  %v3_c7bc = load i32, i32* @r4, align 4
  %v4_c7bc = add i32 %v3_c7bc, 13
  %v5_c7bc = inttoptr i32 %v4_c7bc to i8*
  store i8 %v2_c7bc, i8* %v5_c7bc, align 1
  br label %bb54

bb54:                                             ; preds = %.thread, %bb53
  %v2_c7c0 = inttoptr i32 %v1_c7b8 to i16*
  %v3_c7c0 = call i32 @function_10238(i16* %v2_c7c0, i32 %v5_c59c)
  %v3_c7c4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7c4, i32* %r3.global-to-local, align 4
  %v1_c7c8 = add i32 %v3_c7c4, 1
  store i32 %v1_c7c8, i32* @r4, align 4
  %v1_c7cc = load i32, i32* @r7, align 4
  %v9_c7cc = icmp eq i32 %v1_c7c8, %v1_c7cc
  store i1 %v9_c7cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c7c8, i32* %stack_var_-44, align 4
  %v6_c7d4 = icmp slt i32 %v1_c7c8, %v1_c7cc
  br i1 %v6_c7d4, label %dec_label_pc_c7d8, label %dec_label_pc_c870

dec_label_pc_c7d8:                                ; preds = %bb54, %dec_label_pc_c65c
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_c7e4 = call i32 @function_13cd4(i32 1510, i32 1)
  store i32 %v2_c40c, i32* %r2.global-to-local, align 4
  %v3_c7ec = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7ec, i32* %r3.global-to-local, align 4
  %v2_c7f0 = load i32, i32* @r4, align 4
  %v5_c7f0 = mul i32 %v2_c7f0, 4
  %v6_c7f0 = add i32 %v5_c7f0, %v2_c40c
  %v7_c7f0 = inttoptr i32 %v6_c7f0 to i32*
  store i32 %v2_c7e4, i32* %v7_c7f0, align 4
  %v0_c7f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c7f4 = load i32, i32* %r3.global-to-local, align 4
  %v4_c7f4 = mul i32 %v1_c7f4, 4
  %v5_c7f4 = add i32 %v4_c7f4, %v0_c7f4
  %v6_c7f4 = inttoptr i32 %v5_c7f4 to i32*
  %v7_c7f4 = load i32, i32* %v6_c7f4, align 4
  store i32 %v7_c7f4, i32* @r5, align 4
  %v1_c7f8 = inttoptr i32 %v7_c7f4 to i8*
  %v2_c7f8 = load i8, i8* %v1_c7f8, align 1
  %tmp60 = urem i8 %v2_c7f8, 16
  %v1_c7fc = zext i8 %tmp60 to i32
  %v1_c800 = or i32 %v1_c7fc, 64
  store i32 %v1_c800, i32* %r2.global-to-local, align 4
  %v1_c804 = trunc i32 %v1_c800 to i8
  store i8 %v1_c804, i8* %v1_c7f8, align 1
  %v0_c808 = load i32, i32* @r5, align 4
  %v1_c808 = inttoptr i32 %v0_c808 to i8*
  %v2_c808 = load i8, i8* %v1_c808, align 1
  %v1_c80c = and i8 %v2_c808, -16
  %v1_c810 = or i8 %v1_c80c, 5
  store i8 %v1_c810, i8* %v1_c808, align 1
  store i32 %v4_c818, i32* %r3.global-to-local, align 4
  %v0_c81c = load i32, i32* @sl, align 4
  %v2_c820 = load i32, i32* @r5, align 4
  %v3_c820 = add i32 %v2_c820, 1
  %v4_c820 = inttoptr i32 %v3_c820 to i8*
  store i8 %v5_c444, i8* %v4_c820, align 1
  %v1_c824 = call i32 @function_15314(i32 %v0_c81c)
  %v2_c824 = trunc i32 %v1_c824 to i16
  %v3_c828 = load i32, i32* @r5, align 4
  %v4_c828 = add i32 %v3_c828, 2
  %v5_c828 = inttoptr i32 %v4_c828 to i16*
  store i16 %v2_c824, i16* %v5_c828, align 2
  %v1_c830 = call i32 @function_15314(i32 %v3_c638)
  %v2_c830 = trunc i32 %v1_c830 to i16
  store i32 %v4_c834, i32* %r1.global-to-local, align 4
  %v0_c838 = load i32, i32* @fp, align 4
  %v2_c838 = icmp eq i32 %v0_c838, 0
  store i1 %v2_c838, i1* %cpsr_z.global-to-local, align 1
  %v3_c83c = load i32, i32* @r5, align 4
  %v4_c83c = add i32 %v3_c83c, 4
  %v5_c83c = inttoptr i32 %v4_c83c to i16*
  store i16 %v2_c830, i16* %v5_c83c, align 2
  %v0_c840 = load i32, i32* %r1.global-to-local, align 4
  %v1_c840 = trunc i32 %v0_c840 to i8
  %v2_c840 = load i32, i32* @r5, align 4
  %v3_c840 = add i32 %v2_c840, 8
  %v4_c840 = inttoptr i32 %v3_c840 to i8*
  store i8 %v1_c840, i8* %v4_c840, align 1
  %v0_c844 = load i32, i32* @r5, align 4
  %v1_c844 = add i32 %v0_c844, 20
  store i32 %v1_c844, i32* @r4, align 4
  %v0_c848 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c848, label %dec_label_pc_c6cc, label %dec_label_pc_c84c

dec_label_pc_c84c:                                ; preds = %dec_label_pc_c7d8
  %v1_c850 = call i32 @function_15314(i32 16384)
  %v2_c850 = trunc i32 %v1_c850 to i16
  %v3_c854 = load i32, i32* @r5, align 4
  %v4_c854 = add i32 %v3_c854, 6
  %v5_c854 = inttoptr i32 %v4_c854 to i16*
  store i16 %v2_c850, i16* %v5_c854, align 2
  %v2_c6d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c6cc

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c5fc
  store i32 %v3_c5ec, i32* @r0, align 4
  %v1_c860 = call i32 @function_165e8(i32 %v3_c5ec)
  br label %dec_label_pc_c864

dec_label_pc_c864:                                ; preds = %dec_label_pc_c3f0, %dec_label_pc_c85c
  %v1_c86c = phi i32 [ %v3_c5ec, %dec_label_pc_c3f0 ], [ %v1_c860, %dec_label_pc_c85c ]
  store i32 %v3_c3f0, i32* %r4.global-to-local, align 4
  store i32 %v18_c3f0, i32* %sb.global-to-local, align 4
  store i32 %v24_c3f0, i32* %fp.global-to-local, align 4
  store i32 %v27_c3f0, i32* %lr.global-to-local, align 4
  ret i32 %v1_c86c

dec_label_pc_c870:                                ; preds = %bb54
  store i32 %v5_c59c, i32* %r2.global-to-local, align 4
  %v1_c874 = add i32 %v5_c59c, 20
  store i32 %v1_c874, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_c87c

dec_label_pc_c87c:                                ; preds = %dec_label_pc_ca88, %dec_label_pc_c870
  %v0_c88c6 = phi i32 [ %v1_c7cc, %dec_label_pc_c870 ], [ 0, %dec_label_pc_ca88 ]
  %stack_var_-148.0 = phi i32 [ %v3_c664, %dec_label_pc_c870 ], [ %v3_ca94, %dec_label_pc_ca88 ]
  %storemerge = add i32 %v5_c59c, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-148.0, i32* %r2.global-to-local, align 4
  %v1_c880 = add i32 %stack_var_-148.0, 1310720
  store i32 %v1_c880, i32* %r3.global-to-local, align 4
  %v3_c884 = udiv i32 %v1_c880, 65536
  store i32 %v3_c884, i32* @sl, align 4
  %v3_c9ec = icmp eq i32 %v6_c5d8, -1
  %v8_c9ec = icmp eq i32 %v6_c5d8, -1
  %v9_ca08 = icmp eq i32 %v3_c638, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  %v2_ca6c = icmp eq i32 %v1_c5c4, 0
  br label %dec_label_pc_c888

dec_label_pc_c888:                                ; preds = %dec_label_pc_c888, %dec_label_pc_c9a8, %dec_label_pc_c87c
  %v0_c88c = phi i32 [ %v0_c88c6, %dec_label_pc_c87c ], [ 0, %dec_label_pc_c9a8 ], [ 0, %dec_label_pc_c888 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c88c = icmp eq i32 %v0_c88c, 0
  store i1 %v2_c88c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c88c, label %dec_label_pc_c888, label %dec_label_pc_c898

dec_label_pc_c898:                                ; preds = %dec_label_pc_c888, %dec_label_pc_c9a8
  br label %dec_label_pc_c89c

dec_label_pc_c89c:                                ; preds = %dec_label_pc_c91c, %dec_label_pc_c898
  %v1_c8b0 = phi i32 [ %v1_c998, %dec_label_pc_c91c ], [ 0, %dec_label_pc_c898 ]
  %v5_c8a0 = mul i32 %v1_c8b0, 24
  %v1_c8a4 = load i32, i32* @r8, align 4
  %v2_c8a4 = add i32 %v1_c8a4, %v5_c8a0
  store i32 %v2_c8a4, i32* %r3.global-to-local, align 4
  store i32 %v2_c40c, i32* %r1.global-to-local, align 4
  %v1_c8ac = add i32 %v2_c8a4, 20
  %v2_c8ac = inttoptr i32 %v1_c8ac to i8*
  %v3_c8ac = load i8, i8* %v2_c8ac, align 1
  %v4_c8ac = zext i8 %v3_c8ac to i32
  store i32 %v4_c8ac, i32* %r2.global-to-local, align 4
  %v4_c8b0 = mul i32 %v1_c8b0, 4
  %v5_c8b0 = add i32 %v4_c8b0, %v2_c40c
  %v6_c8b0 = inttoptr i32 %v5_c8b0 to i32*
  %v7_c8b0 = load i32, i32* %v6_c8b0, align 4
  store i32 %v7_c8b0, i32* @r5, align 4
  %v7_c8b4 = icmp eq i8 %v3_c8ac, 31
  store i1 %v7_c8b4, i1* %cpsr_z.global-to-local, align 1
  %v1_c8b8 = add i32 %v7_c8b0, 20
  store i32 %v1_c8b8, i32* @r6, align 4
  %tmp61 = icmp ult i8 %v3_c8ac, 32
  br i1 %tmp61, label %dec_label_pc_c9bc, label %dec_label_pc_c8c0

dec_label_pc_c8c0:                                ; preds = %dec_label_pc_c89c
  store i32 %v6_c5d8, i32* %r2.global-to-local, align 4
  store i1 %v8_c9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c9ec, label %dec_label_pc_c9f8, label %dec_label_pc_c8cc

dec_label_pc_c8cc:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c8c0
  store i32 %v3_c638, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_ca08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ca08, label %dec_label_pc_ca14, label %dec_label_pc_c8e0

dec_label_pc_c8e0:                                ; preds = %dec_label_pc_c9f8.dec_label_pc_c8e0_crit_edge, %dec_label_pc_c8cc
  %v1_c8e4 = phi i32 [ %v1_c8e4.pre, %dec_label_pc_c9f8.dec_label_pc_c8e0_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), %dec_label_pc_c8cc ]
  store i32 %v3_c63c, i32* %r1.global-to-local, align 4
  %v9_c8e4 = icmp eq i32 %v3_c63c, %v1_c8e4
  store i1 %v9_c8e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c8e4, label %dec_label_pc_ca28, label %dec_label_pc_c8ec

dec_label_pc_c8ec:                                ; preds = %dec_label_pc_ca14.dec_label_pc_c8ec_crit_edge, %dec_label_pc_c8e0
  %v1_c8f0 = phi i32 [ %v1_c8f0.pre, %dec_label_pc_ca14.dec_label_pc_c8ec_crit_edge ], [ %v1_c8e4, %dec_label_pc_c8e0 ]
  store i32 %v3_c640, i32* %r2.global-to-local, align 4
  %v9_c8f0 = icmp eq i32 %v3_c640, %v1_c8f0
  store i1 %v9_c8f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c8f0, label %dec_label_pc_ca3c, label %dec_label_pc_c8f8

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_ca28.dec_label_pc_c8f8_crit_edge, %dec_label_pc_c8ec
  %v1_c8fc = phi i32 [ %v1_c8fc.pre, %dec_label_pc_ca28.dec_label_pc_c8f8_crit_edge ], [ %v1_c8f0, %dec_label_pc_c8ec ]
  store i32 %v5_c4d8, i32* %r3.global-to-local, align 4
  %v9_c8fc = icmp eq i32 %v5_c4d8, %v1_c8fc
  store i1 %v9_c8fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c8fc, label %dec_label_pc_ca50, label %dec_label_pc_c904

dec_label_pc_c904:                                ; preds = %dec_label_pc_ca3c.dec_label_pc_c904_crit_edge, %dec_label_pc_c8f8
  %v1_c908 = phi i32 [ %v1_c908.pre, %dec_label_pc_ca3c.dec_label_pc_c904_crit_edge ], [ %v1_c8fc, %dec_label_pc_c8f8 ]
  store i32 %v6_c4f4, i32* %r1.global-to-local, align 4
  %v9_c908 = icmp eq i32 %v6_c4f4, %v1_c908
  store i1 %v9_c908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c908, label %dec_label_pc_ca64, label %dec_label_pc_c910

dec_label_pc_c910:                                ; preds = %dec_label_pc_ca50, %dec_label_pc_c904
  store i32 %v1_c5c4, i32* %r2.global-to-local, align 4
  store i1 %v2_ca6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ca6c, label %dec_label_pc_c91c, label %dec_label_pc_ca78

dec_label_pc_c91c:                                ; preds = %dec_label_pc_c910, %dec_label_pc_ca64, %dec_label_pc_ca78
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c920 = load i32, i32* @r5, align 4
  %v3_c920 = add i32 %v2_c920, 10
  %v4_c920 = inttoptr i32 %v3_c920 to i16*
  store i16 0, i16* %v4_c920, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c928 = load i32, i32* @r5, align 4
  store i32 %v0_c928, i32* @r0, align 4
  %v2_c92c = call i32 @function_e5a4(i32 %v0_c928, i32 20)
  %v3_c92c = trunc i32 %v2_c92c to i16
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c934 = load i32, i32* @r5, align 4
  %v4_c934 = add i32 %v3_c934, 10
  %v5_c934 = inttoptr i32 %v4_c934 to i16*
  store i16 %v3_c92c, i16* %v5_c934, align 2
  %v0_c938 = load i32, i32* %r1.global-to-local, align 4
  %v1_c938 = trunc i32 %v0_c938 to i16
  %v2_c938 = load i32, i32* @r6, align 4
  %v3_c938 = add i32 %v2_c938, 16
  %v4_c938 = inttoptr i32 %v3_c938 to i16*
  store i16 %v1_c938, i16* %v4_c938, align 2
  %v0_c93c = load i32, i32* @sl, align 4
  %v1_c940 = call i32 @function_15314(i32 %v0_c93c)
  %v0_c944 = load i32, i32* @r6, align 4
  store i32 %v0_c944, i32* @r1, align 4
  store i32 %v1_c940, i32* %r2.global-to-local, align 4
  %v0_c94c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_c94c, i32* %r3.global-to-local, align 4
  %v0_c950 = load i32, i32* @r5, align 4
  %v4_c954 = call i32 @function_e5f4(i32 %v0_c950, i32 %v0_c944, i32 %v1_c940, i32 %v0_c94c)
  %v5_c954 = trunc i32 %v4_c954 to i16
  %v3_c958 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c958, i32* %r3.global-to-local, align 4
  %v3_c95c = mul i32 %v3_c958, 32
  store i32 %v3_c95c, i32* %lr.global-to-local, align 4
  %v3_c960 = load i32, i32* @r6, align 4
  %v4_c960 = add i32 %v3_c960, 16
  %v5_c960 = inttoptr i32 %v4_c960 to i16*
  store i16 %v5_c954, i16* %v5_c960, align 2
  %v0_c964 = load i32, i32* %lr.global-to-local, align 4
  %v1_c964 = load i32, i32* %r3.global-to-local, align 4
  %tmp62 = mul i32 %v1_c964, -8
  %v5_c964 = add i32 %v0_c964, %tmp62
  store i32 %v5_c964, i32* %lr.global-to-local, align 4
  %v0_c968 = load i32, i32* @r6, align 4
  %v1_c968 = add i32 %v0_c968, 2
  %v2_c968 = inttoptr i32 %v1_c968 to i16*
  %v3_c968 = load i16, i16* %v2_c968, align 2
  %v1_c96c = load i32, i32* @r8, align 4
  %v2_c96c = add i32 %v1_c96c, %v5_c964
  store i32 %v2_c96c, i32* @lr, align 4
  %v3_c970 = add i32 %v2_c96c, 2
  %v4_c970 = inttoptr i32 %v3_c970 to i16*
  store i16 %v3_c968, i16* %v4_c970, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c97c = load i32, i32* @r5, align 4
  store i32 %v0_c97c, i32* @r1, align 4
  store i32 %v3_c5ec, i32* @r0, align 4
  %v0_c984 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c984, i32* @r2, align 4
  %v0_c990 = call i32 @function_15560()
  %v3_c994 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c994, i32* %r3.global-to-local, align 4
  %v1_c998 = add i32 %v3_c994, 1
  %v1_c99c = load i32, i32* @r7, align 4
  %v9_c99c = icmp eq i32 %v1_c998, %v1_c99c
  store i1 %v9_c99c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c998, i32* %stack_var_-44, align 4
  %v5_c9a4 = icmp slt i32 %v1_c998, %v1_c99c
  br i1 %v5_c9a4, label %dec_label_pc_c89c, label %dec_label_pc_c9a8

dec_label_pc_c9a8:                                ; preds = %dec_label_pc_c91c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c9ac = icmp eq i32 %v1_c99c, 0
  store i1 %v2_c9ac, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c9ac, label %dec_label_pc_c888, label %dec_label_pc_c898

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c89c
  %v1_c9bc = add i32 %v2_c8a4, 16
  %v2_c9bc = inttoptr i32 %v1_c9bc to i32*
  %v3_c9bc = load i32, i32* %v2_c9bc, align 4
  %v1_c9c0 = call i32 @function_15498(i32 %v3_c9bc)
  store i32 %v1_c9c0, i32* %r4.global-to-local, align 4
  %v0_c9c8 = call i32 @function_10038()
  %v3_c9cc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c9cc, i32* %r2.global-to-local, align 4
  %v5_c9d4 = mul i32 %v3_c9cc, 24
  %v1_c9d8 = load i32, i32* @r8, align 4
  %v2_c9d8 = add i32 %v1_c9d8, %v5_c9d4
  store i32 %v2_c9d8, i32* %r3.global-to-local, align 4
  %v1_c9dc = add i32 %v2_c9d8, 20
  %v2_c9dc = inttoptr i32 %v1_c9dc to i8*
  %v3_c9dc = load i8, i8* %v2_c9dc, align 1
  %v4_c9dc = zext i8 %v3_c9dc to i32
  store i32 %v4_c9dc, i32* %r2.global-to-local, align 4
  %v0_c9e0 = load i32, i32* %r4.global-to-local, align 4
  %v7_c9e0 = lshr i32 %v0_c9c8, %v4_c9dc
  %v8_c9e0 = add i32 %v7_c9e0, %v0_c9e0
  %v1_c9e4 = call i32 @function_152f0(i32 %v8_c9e0)
  store i32 %v6_c5d8, i32* %r2.global-to-local, align 4
  store i1 %v8_c9ec, i1* %cpsr_z.global-to-local, align 1
  %v1_c9f0 = load i32, i32* @r5, align 4
  %v2_c9f0 = add i32 %v1_c9f0, 16
  %v3_c9f0 = inttoptr i32 %v2_c9f0 to i32*
  store i32 %v1_c9e4, i32* %v3_c9f0, align 4
  br i1 %v3_c9ec, label %dec_label_pc_c9f8, label %dec_label_pc_c8cc

dec_label_pc_c9f8:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c8c0
  %v0_c9f8 = call i32 @function_10038()
  store i32 %v3_c638, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_ca08, i1* %cpsr_z.global-to-local, align 1
  %v1_ca0c = load i32, i32* @r5, align 4
  %v2_ca0c = add i32 %v1_ca0c, 12
  %v3_ca0c = inttoptr i32 %v2_ca0c to i32*
  store i32 %v0_c9f8, i32* %v3_ca0c, align 4
  br i1 %v9_ca08, label %dec_label_pc_ca14, label %dec_label_pc_c9f8.dec_label_pc_c8e0_crit_edge

dec_label_pc_c9f8.dec_label_pc_c8e0_crit_edge:    ; preds = %dec_label_pc_c9f8
  %v1_c8e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c8e0

dec_label_pc_ca14:                                ; preds = %dec_label_pc_c9f8, %dec_label_pc_c8cc
  %v0_ca14 = call i32 @function_10038()
  %v1_ca14 = trunc i32 %v0_ca14 to i16
  store i32 %v3_c63c, i32* %r1.global-to-local, align 4
  %v1_ca1c = load i32, i32* @r4, align 4
  %v9_ca1c = icmp eq i32 %v3_c63c, %v1_ca1c
  store i1 %v9_ca1c, i1* %cpsr_z.global-to-local, align 1
  %v3_ca20 = load i32, i32* @r5, align 4
  %v4_ca20 = add i32 %v3_ca20, 4
  %v5_ca20 = inttoptr i32 %v4_ca20 to i16*
  store i16 %v1_ca14, i16* %v5_ca20, align 2
  br i1 %v9_ca1c, label %dec_label_pc_ca28, label %dec_label_pc_ca14.dec_label_pc_c8ec_crit_edge

dec_label_pc_ca14.dec_label_pc_c8ec_crit_edge:    ; preds = %dec_label_pc_ca14
  %v1_c8f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c8ec

dec_label_pc_ca28:                                ; preds = %dec_label_pc_ca14, %dec_label_pc_c8e0
  %v0_ca28 = call i32 @function_10038()
  %v1_ca28 = trunc i32 %v0_ca28 to i16
  store i32 %v3_c640, i32* %r2.global-to-local, align 4
  %v1_ca30 = load i32, i32* @r4, align 4
  %v9_ca30 = icmp eq i32 %v3_c640, %v1_ca30
  store i1 %v9_ca30, i1* %cpsr_z.global-to-local, align 1
  %v3_ca34 = load i32, i32* @r5, align 4
  %v4_ca34 = add i32 %v3_ca34, 20
  %v5_ca34 = inttoptr i32 %v4_ca34 to i16*
  store i16 %v1_ca28, i16* %v5_ca34, align 2
  br i1 %v9_ca30, label %dec_label_pc_ca3c, label %dec_label_pc_ca28.dec_label_pc_c8f8_crit_edge

dec_label_pc_ca28.dec_label_pc_c8f8_crit_edge:    ; preds = %dec_label_pc_ca28
  %v1_c8fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c8f8

dec_label_pc_ca3c:                                ; preds = %dec_label_pc_ca28, %dec_label_pc_c8ec
  %v0_ca3c = call i32 @function_10038()
  %v1_ca3c = trunc i32 %v0_ca3c to i16
  store i32 %v5_c4d8, i32* %r3.global-to-local, align 4
  %v1_ca44 = load i32, i32* @r4, align 4
  %v9_ca44 = icmp eq i32 %v5_c4d8, %v1_ca44
  store i1 %v9_ca44, i1* %cpsr_z.global-to-local, align 1
  %v3_ca48 = load i32, i32* @r6, align 4
  %v4_ca48 = add i32 %v3_ca48, 2
  %v5_ca48 = inttoptr i32 %v4_ca48 to i16*
  store i16 %v1_ca3c, i16* %v5_ca48, align 2
  br i1 %v9_ca44, label %dec_label_pc_ca50, label %dec_label_pc_ca3c.dec_label_pc_c904_crit_edge

dec_label_pc_ca3c.dec_label_pc_c904_crit_edge:    ; preds = %dec_label_pc_ca3c
  %v1_c908.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c904

dec_label_pc_ca50:                                ; preds = %dec_label_pc_ca3c, %dec_label_pc_c8f8
  %v0_ca50 = call i32 @function_10038()
  store i32 %v6_c4f4, i32* %r1.global-to-local, align 4
  %v1_ca58 = load i32, i32* @r4, align 4
  %v9_ca58 = icmp eq i32 %v6_c4f4, %v1_ca58
  store i1 %v9_ca58, i1* %cpsr_z.global-to-local, align 1
  %v1_ca5c = load i32, i32* @r6, align 4
  %v2_ca5c = add i32 %v1_ca5c, 4
  %v3_ca5c = inttoptr i32 %v2_ca5c to i32*
  store i32 %v0_ca50, i32* %v3_ca5c, align 4
  br i1 %v9_ca58, label %dec_label_pc_ca64, label %dec_label_pc_c910

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca50, %dec_label_pc_c904
  %v0_ca64 = call i32 @function_10038()
  store i32 %v1_c5c4, i32* %r2.global-to-local, align 4
  store i1 %v2_ca6c, i1* %cpsr_z.global-to-local, align 1
  %v1_ca70 = load i32, i32* @r6, align 4
  %v2_ca70 = add i32 %v1_ca70, 8
  %v3_ca70 = inttoptr i32 %v2_ca70 to i32*
  store i32 %v0_ca64, i32* %v3_ca70, align 4
  br i1 %v2_ca6c, label %dec_label_pc_c91c, label %dec_label_pc_ca78

dec_label_pc_ca78:                                ; preds = %dec_label_pc_c910, %dec_label_pc_ca64
  %v0_ca78 = load i32, i32* @r5, align 4
  %v1_ca78 = add i32 %v0_ca78, 40
  store i32 %v5_c59c, i32* %r1.global-to-local, align 4
  %v2_ca80 = inttoptr i32 %v1_ca78 to i16*
  %v3_ca80 = call i32 @function_10238(i16* %v2_ca80, i32 %v5_c59c)
  br label %dec_label_pc_c91c

dec_label_pc_ca88:                                ; preds = %dec_label_pc_c624
  store i32 %v5_c59c, i32* %r1.global-to-local, align 4
  %v1_ca90 = add i32 %v5_c59c, 20
  store i32 %v1_ca90, i32* %sb.global-to-local, align 4
  %v3_ca94 = mul i32 %v5_c59c, 65536
  store i32 %v3_ca94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c87c

; uselistorder directives
  uselistorder i32 %v1_c998, { 2, 0, 3, 1 }
  uselistorder i32 %v5_c964, { 1, 0 }
  uselistorder i1 %v2_ca6c, { 2, 3, 1, 0 }
  uselistorder i1 %v9_ca08, { 2, 3, 1, 0 }
  uselistorder i32 %stack_var_-148.0, { 1, 0 }
  uselistorder i32 %v0_c844, { 1, 0 }
  uselistorder i32 %v1_c7c8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c6b0, { 2, 0, 1 }
  uselistorder i32 %v1_c6ac, { 2, 0, 1 }
  uselistorder i32 %v1_c6a8, { 1, 0 }
  uselistorder i32 %v1_c690, { 1, 0 }
  uselistorder i32 %v1_c68c, { 1, 0 }
  uselistorder i32 %v1_c688, { 1, 0 }
  uselistorder i32 %v3_c664, { 1, 0 }
  uselistorder i32 %v3_c638, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v7_c61c, { 1, 0 }
  uselistorder i1 %v7_c5f0, { 1, 0 }
  uselistorder i32 %v3_c5ec, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v6_c5d8, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_c5c4, { 1, 0, 2, 3 }
  uselistorder i32 %v5_c59c, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_c53c, { 0, 2, 1 }
  uselistorder i32 %v6_c4f4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c4d8, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v5_c444, { 1, 0 }
  uselistorder i32 %v2_c40c, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 16, 17, 18, 11, 12, 13, 14, 15, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 38, 37, 40, 39, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 18, 19, 22, 23, 24 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ca78, { 1, 0 }
  uselistorder label %dec_label_pc_c91c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c898, { 1, 0 }
  uselistorder label %dec_label_pc_c888, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c864, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_c6cc, { 1, 0 }
}

define i32 @function_caa8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_caa8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_caa8 = load i32, i32* @r4, align 4
  %v27_caa8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_cac4 = call i32 @function_13cd4(i32 %arg1, i32 4)
  %v0_cac8 = load i32, i32* @r5, align 4
  store i32 %v0_cac8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cad8 = load i32, i32* @r4, align 4
  %v5_cadc = inttoptr i32 %v0_cac8 to i32*
  %v6_cadc = call i32 @function_a430(i32 %v0_cad8, i32* %v5_cadc, i32 2, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_caf4 = load i32, i32* @r5, align 4
  store i32 %v0_caf4, i32* %r1.global-to-local, align 4
  %v0_caf8 = load i32, i32* @r4, align 4
  %v5_cafc = trunc i32 %v6_cadc to i8
  %v6_cb00 = inttoptr i32 %v0_caf4 to i32*
  %v7_cb00 = call i32 @function_a430(i32 %v0_caf8, i32* %v6_cb00, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_cb04 = load i32, i32* @r5, align 4
  store i32 %v0_cb04, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_cb14 = load i32, i32* @r4, align 4
  %v5_cb18 = inttoptr i32 %v0_cb04 to i32*
  %v6_cb18 = call i32 @function_a430(i32 %v0_cb14, i32* %v5_cb18, i32 4, i32 64)
  %v0_cb24 = load i32, i32* @r5, align 4
  store i32 %v0_cb24, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cb30 = load i32, i32* @r4, align 4
  %v6_cb38 = inttoptr i32 %v0_cb24 to i32*
  %v7_cb38 = call i32 @function_a430(i32 %v0_cb30, i32* %v6_cb38, i32 5, i32 1)
  %v1_cb44 = urem i32 %v7_cb38, 256
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cb50 = load i32, i32* @r5, align 4
  store i32 %v0_cb50, i32* %r1.global-to-local, align 4
  %v0_cb54 = load i32, i32* @r4, align 4
  %v5_cb5c = inttoptr i32 %v0_cb50 to i32*
  %v6_cb5c = call i32 @function_a430(i32 %v0_cb54, i32* %v5_cb5c, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_cb68 = load i32, i32* @r5, align 4
  store i32 %v0_cb68, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_cb74 = load i32, i32* @r4, align 4
  %v5_cb78 = inttoptr i32 %v0_cb68 to i32*
  %v6_cb78 = call i32 @function_a430(i32 %v0_cb74, i32* %v5_cb78, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_cb84 = load i32, i32* @r5, align 4
  store i32 %v0_cb84, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_cb90 = load i32, i32* @r4, align 4
  %v5_cb94 = inttoptr i32 %v0_cb84 to i32*
  %v6_cb94 = call i32 @function_a430(i32 %v0_cb90, i32* %v5_cb94, i32 17, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_cb98 = load i32, i32* @r5, align 4
  store i32 %v0_cb98, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cba8 = load i32, i32* @r4, align 4
  %v5_cbac = inttoptr i32 %v0_cb98 to i32*
  %v6_cbac = call i32 @function_a430(i32 %v0_cba8, i32* %v5_cbac, i32 18, i32 0)
  %v0_cbb0 = load i32, i32* @r5, align 4
  store i32 %v0_cbb0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cbc0 = load i32, i32* @r4, align 4
  %v5_cbc4 = inttoptr i32 %v0_cbb0 to i32*
  %v6_cbc4 = call i32 @function_a430(i32 %v0_cbc0, i32* %v5_cbc4, i32 11, i32 0)
  %v0_cbc8 = load i32, i32* @r5, align 4
  store i32 %v0_cbc8, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cbd8 = load i32, i32* @r4, align 4
  %v5_cbdc = inttoptr i32 %v0_cbc8 to i32*
  %v6_cbdc = call i32 @function_a430(i32 %v0_cbd8, i32* %v5_cbdc, i32 12, i32 0)
  %v0_cbe0 = load i32, i32* @r5, align 4
  store i32 %v0_cbe0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cbf0 = load i32, i32* @r4, align 4
  %v5_cbf4 = inttoptr i32 %v0_cbe0 to i32*
  %v6_cbf4 = call i32 @function_a430(i32 %v0_cbf0, i32* %v5_cbf4, i32 13, i32 0)
  %v0_cbf8 = load i32, i32* @r5, align 4
  store i32 %v0_cbf8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cc08 = load i32, i32* @r4, align 4
  %v5_cc0c = inttoptr i32 %v0_cbf8 to i32*
  %v6_cc0c = call i32 @function_a430(i32 %v0_cc08, i32* %v5_cc0c, i32 14, i32 0)
  %v0_cc10 = load i32, i32* @r5, align 4
  store i32 %v0_cc10, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v6_cc0c, i32* @sb, align 4
  %v0_cc20 = load i32, i32* @r4, align 4
  %v4_cc24 = inttoptr i32 %v0_cc10 to i32*
  %v5_cc24 = call i32 @function_a430(i32 %v0_cc20, i32* %v4_cc24, i32 15, i32 1)
  %v0_cc28 = load i32, i32* @r5, align 4
  store i32 %v0_cc28, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v5_cc24, i32* @sl, align 4
  %v0_cc38 = load i32, i32* @r4, align 4
  %v4_cc3c = inttoptr i32 %v0_cc28 to i32*
  %v5_cc3c = call i32 @function_a430(i32 %v0_cc38, i32* %v4_cc3c, i32 16, i32 0)
  %v0_cc44 = load i32, i32* @r5, align 4
  store i32 %v0_cc44, i32* %r1.global-to-local, align 4
  %v2_cc48 = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_cc48, i32* %r3.global-to-local, align 4
  store i32 %v5_cc3c, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_cc54 = load i32, i32* @r4, align 4
  %v5_cc58 = inttoptr i32 %v0_cc44 to i32*
  %v6_cc58 = call i32 @function_a3c4(i32 %v0_cc54, i32* %v5_cc58, i32 25, i32 %v2_cc48, i32 ptrtoint (i32* @0 to i32))
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_cc6c = call i32 @function_1561c(i32 2, i32 3, i32 6)
  store i32 %v3_cc6c, i32* @r0, align 4
  %v7_cc70 = icmp eq i32 %v3_cc6c, -1
  store i1 %v7_cc70, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_cc6c, i32* @fp, align 4
  br i1 %v7_cc70, label %dec_label_pc_d114, label %dec_label_pc_cc7c

dec_label_pc_cc7c:                                ; preds = %dec_label_pc_caa8
  store i32 1, i32* %stack_var_-44, align 4
  %v6_cc84 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_cc84, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_cc98 = call i32 @function_155ac(i32 %v3_cc6c, i32 0, i32 3, i32 %v6_cc84, i32 ptrtoint (i32* @0 to i32))
  %v7_cc9c = icmp eq i32 %v5_cc98, -1
  store i1 %v7_cc9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cc9c, label %dec_label_pc_d10c, label %dec_label_pc_cca4

dec_label_pc_cca4:                                ; preds = %dec_label_pc_cc7c
  %v3_ccbc = urem i32 %v6_cb78, 65536
  %v3_cccc = urem i32 %v7_cb00, 65536
  store i32 %v3_cccc, i32* %r3.global-to-local, align 4
  %v3_ccd0 = urem i32 %v6_cb5c, 65536
  store i32 %v3_ccd0, i32* %r2.global-to-local, align 4
  %v1_ccd4 = urem i32 %v6_cbc4, 256
  store i32 %v1_ccd4, i32* %r1.global-to-local, align 4
  %v0_ccd8 = load i32, i32* @r7, align 4
  %v2_ccd8 = icmp eq i32 %v0_ccd8, 0
  store i1 %v2_ccd8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ccd8, label %dec_label_pc_d028.preheader, label %dec_label_pc_ccf0

dec_label_pc_ccf0:                                ; preds = %dec_label_pc_cca4
  store i32 %v6_cb94, i32* %r2.global-to-local, align 4
  %v3_ccf8 = urem i32 %v6_cb94, 65536
  store i32 0, i32* @r4, align 4
  %v1_cd10 = urem i32 %v6_cbc4, 2
  store i32 %v1_cd10, i32* %r3.global-to-local, align 4
  %v1_cd14 = urem i32 %v6_cbdc, 2
  %v1_cd18 = urem i32 %v6_cbf4, 2
  store i32 %v1_cd18, i32* %r1.global-to-local, align 4
  %v0_cd1c = load i32, i32* @sb, align 4
  %v1_cd1c = urem i32 %v0_cd1c, 2
  store i32 %v1_cd1c, i32* @sb, align 4
  %v0_cd20 = load i32, i32* @sl, align 4
  %v1_cd20 = urem i32 %v0_cd20, 2
  store i32 %v1_cd20, i32* @sl, align 4
  %v0_cd24 = load i32, i32* @r6, align 4
  %v1_cd24 = urem i32 %v0_cd24, 2
  store i32 %v1_cd24, i32* @r6, align 4
  %v4_ced0 = sext i8 %v5_cafc to i32
  %sext = mul i32 %v6_cb18, 16777216
  %v4_cef0 = sdiv i32 %sext, 16777216
  %v2_cef4 = icmp eq i32 %v1_cb44, 0
  %tmp = sub nsw i32 0, %v1_cd10
  %v4_cd98 = and i32 %tmp, 32
  %tmp51 = sub nsw i32 0, %v1_cd14
  %v4_cdac = and i32 %tmp51, 16
  %tmp52 = sub nsw i32 0, %v1_cd18
  %v4_cdc0 = and i32 %tmp52, 8
  %tmp53 = sub nsw i32 0, %v1_cd1c
  %v4_cdd4 = and i32 %tmp53, 4
  %tmp54 = sub nsw i32 0, %v1_cd20
  %v3_cde8 = and i32 %tmp54, 2
  br label %dec_label_pc_ce94

dec_label_pc_cd44:                                ; preds = %dec_label_pc_ce94, %dec_label_pc_cf08
  %v2_cd48 = phi i32 [ %v0_cf00, %dec_label_pc_ce94 ], [ %v2_cd48.pre, %dec_label_pc_cf08 ]
  store i32 6, i32* @r6, align 4
  %v3_cd48 = add i32 %v2_cd48, 9
  %v4_cd48 = inttoptr i32 %v3_cd48 to i8*
  store i8 6, i8* %v4_cd48, align 1
  %v3_cd4c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cd4c, i32* %r2.global-to-local, align 4
  %v3_cd54 = mul i32 %v3_cd4c, 32
  store i32 %v3_cd54, i32* %r3.global-to-local, align 4
  %v1_cd58 = load i32, i32* @sb, align 4
  %v2_cd58 = add i32 %v1_cd58, 12
  %v3_cd58 = inttoptr i32 %v2_cd58 to i32*
  store i32 %v6_cc58, i32* %v3_cd58, align 4
  %v0_cd5c = load i32, i32* %r3.global-to-local, align 4
  %v1_cd5c = load i32, i32* %r2.global-to-local, align 4
  %tmp55 = mul i32 %v1_cd5c, -8
  %v5_cd5c = add i32 %v0_cd5c, %tmp55
  %v1_cd60 = load i32, i32* @r8, align 4
  %v2_cd60 = add i32 %v1_cd60, %v5_cd5c
  store i32 %v2_cd60, i32* %r3.global-to-local, align 4
  %v1_cd64 = add i32 %v2_cd60, 16
  %v2_cd64 = inttoptr i32 %v1_cd64 to i32*
  %v3_cd64 = load i32, i32* %v2_cd64, align 4
  store i32 %v3_cd64, i32* %r2.global-to-local, align 4
  %v1_cd6c = load i32, i32* @sb, align 4
  %v2_cd6c = add i32 %v1_cd6c, 16
  %v3_cd6c = inttoptr i32 %v2_cd6c to i32*
  store i32 %v3_cd64, i32* %v3_cd6c, align 4
  %v1_cd70 = call i32 @function_15314(i32 %v3_ccd0)
  %v2_cd70 = trunc i32 %v1_cd70 to i16
  %v3_cd74 = load i32, i32* @sb, align 4
  %v4_cd74 = add i32 %v3_cd74, 20
  %v5_cd74 = inttoptr i32 %v4_cd74 to i16*
  store i16 %v2_cd70, i16* %v5_cd74, align 2
  %v1_cd7c = call i32 @function_15314(i32 %v3_ccbc)
  %v2_cd7c = trunc i32 %v1_cd7c to i16
  %v3_cd80 = load i32, i32* @sl, align 4
  %v4_cd80 = add i32 %v3_cd80, 2
  %v5_cd80 = inttoptr i32 %v4_cd80 to i16*
  store i16 %v2_cd7c, i16* %v5_cd80, align 2
  %v1_cd88 = call i32 @function_15314(i32 %v3_ccf8)
  %v0_cd8c = load i32, i32* @sl, align 4
  %v1_cd8c = add i32 %v0_cd8c, 13
  %v2_cd8c = inttoptr i32 %v1_cd8c to i8*
  %v3_cd8c = load i8, i8* %v2_cd8c, align 1
  %v4_cd8c = zext i8 %v3_cd8c to i32
  store i32 %v1_cd10, i32* %r1.global-to-local, align 4
  %v1_cd94 = and i32 %v4_cd8c, 223
  %v5_cd98 = or i32 %v1_cd94, %v4_cd98
  store i32 %v5_cd98, i32* %r3.global-to-local, align 4
  %v1_cd9c = trunc i32 %v5_cd98 to i8
  store i8 %v1_cd9c, i8* %v2_cd8c, align 1
  %v0_cda0 = load i32, i32* @sl, align 4
  %v1_cda0 = add i32 %v0_cda0, 13
  %v2_cda0 = inttoptr i32 %v1_cda0 to i8*
  %v3_cda0 = load i8, i8* %v2_cda0, align 1
  %v4_cda0 = zext i8 %v3_cda0 to i32
  store i32 %v1_cd14, i32* %r3.global-to-local, align 4
  %v1_cda8 = and i32 %v4_cda0, 239
  %v5_cdac = or i32 %v1_cda8, %v4_cdac
  store i32 %v5_cdac, i32* %r2.global-to-local, align 4
  %v1_cdb0 = trunc i32 %v5_cdac to i8
  store i8 %v1_cdb0, i8* %v2_cda0, align 1
  %v0_cdb4 = load i32, i32* @sl, align 4
  %v1_cdb4 = add i32 %v0_cdb4, 13
  %v2_cdb4 = inttoptr i32 %v1_cdb4 to i8*
  %v3_cdb4 = load i8, i8* %v2_cdb4, align 1
  %v4_cdb4 = zext i8 %v3_cdb4 to i32
  store i32 %v1_cd18, i32* %r1.global-to-local, align 4
  %v1_cdbc = and i32 %v4_cdb4, 247
  %v5_cdc0 = or i32 %v1_cdbc, %v4_cdc0
  store i32 %v5_cdc0, i32* %r3.global-to-local, align 4
  %v1_cdc4 = trunc i32 %v5_cdc0 to i8
  store i8 %v1_cdc4, i8* %v2_cdb4, align 1
  %v0_cdc8 = load i32, i32* @sl, align 4
  %v1_cdc8 = add i32 %v0_cdc8, 13
  %v2_cdc8 = inttoptr i32 %v1_cdc8 to i8*
  %v3_cdc8 = load i8, i8* %v2_cdc8, align 1
  %v4_cdc8 = zext i8 %v3_cdc8 to i32
  store i32 %v1_cd1c, i32* %r3.global-to-local, align 4
  %v1_cdd0 = and i32 %v4_cdc8, 251
  %v5_cdd4 = or i32 %v1_cdd0, %v4_cdd4
  store i32 %v5_cdd4, i32* %r2.global-to-local, align 4
  %v1_cdd8 = trunc i32 %v5_cdd4 to i8
  store i8 %v1_cdd8, i8* %v2_cdc8, align 1
  %v0_cddc = load i32, i32* @sl, align 4
  %v1_cddc = add i32 %v0_cddc, 13
  %v2_cddc = inttoptr i32 %v1_cddc to i8*
  %v3_cddc = load i8, i8* %v2_cddc, align 1
  %v4_cddc = zext i8 %v3_cddc to i32
  store i32 %v1_cd20, i32* %r1.global-to-local, align 4
  %v1_cde4 = and i32 %v4_cddc, 253
  %v4_cde8 = or i32 %v1_cde4, %v3_cde8
  store i32 %v4_cde8, i32* %r3.global-to-local, align 4
  %v1_cdec = trunc i32 %v4_cde8 to i8
  store i8 %v1_cdec, i8* %v2_cddc, align 1
  %v0_cdf0 = load i32, i32* @sl, align 4
  %v1_cdf0 = add i32 %v0_cdf0, 12
  %v2_cdf0 = inttoptr i32 %v1_cdf0 to i8*
  %v3_cdf0 = load i8, i8* %v2_cdf0, align 1
  %v4_cdf0 = zext i8 %v3_cdf0 to i32
  store i32 %v4_cdf0, i32* %r2.global-to-local, align 4
  %v1_cdf4 = add i32 %v0_cdf0, 13
  %v2_cdf4 = inttoptr i32 %v1_cdf4 to i8*
  %v3_cdf4 = load i8, i8* %v2_cdf4, align 1
  %v4_cdf4 = zext i8 %v3_cdf4 to i32
  store i32 %v1_cd24, i32* %r1.global-to-local, align 4
  %tmp56 = urem i8 %v3_cdf0, 16
  %v1_cdfc = zext i8 %tmp56 to i32
  %v1_ce00 = and i32 %v4_cdf4, 254
  %v2_ce04 = or i32 %v1_ce00, %v1_cd24
  store i32 %v2_ce04, i32* %r3.global-to-local, align 4
  %v1_ce08 = or i32 %v1_cdfc, 160
  store i32 %v1_ce08, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r4.global-to-local, align 4
  store i32 4, i32* @r5, align 4
  %v1_ce14 = trunc i32 %v2_ce04 to i8
  store i8 %v1_ce14, i8* %v2_cdf4, align 1
  %v0_ce18 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce18 = trunc i32 %v0_ce18 to i8
  %v2_ce18 = load i32, i32* @sl, align 4
  %v3_ce18 = add i32 %v2_ce18, 12
  %v4_ce18 = inttoptr i32 %v3_ce18 to i8*
  store i8 %v1_ce18, i8* %v4_ce18, align 1
  %v1_ce1c = load i32, i32* @sl, align 4
  %v2_ce1c = add i32 %v1_ce1c, 4
  %v3_ce1c = inttoptr i32 %v2_ce1c to i32*
  store i32 %v1_cd88, i32* %v3_ce1c, align 4
  %v0_ce20 = load i32, i32* %r4.global-to-local, align 4
  %v1_ce20 = trunc i32 %v0_ce20 to i8
  %v2_ce20 = load i32, i32* @sb, align 4
  %v3_ce20 = add i32 %v2_ce20, 40
  %v4_ce20 = inttoptr i32 %v3_ce20 to i8*
  store i8 %v1_ce20, i8* %v4_ce20, align 1
  %v0_ce24 = load i32, i32* @r5, align 4
  %v1_ce24 = trunc i32 %v0_ce24 to i8
  %v2_ce24 = load i32, i32* @sb, align 4
  %v3_ce24 = add i32 %v2_ce24, 41
  %v4_ce24 = inttoptr i32 %v3_ce24 to i8*
  store i8 %v1_ce24, i8* %v4_ce24, align 1
  %v0_ce28 = call i32 @function_10038()
  %v1_ce2c = urem i32 %v0_ce28, 16
  %v1_ce30 = or i32 %v1_ce2c, 1392
  %v1_ce34 = add nuw nsw i32 %v1_ce30, 8
  %v1_ce38 = call i32 @function_15314(i32 %v1_ce34)
  %v2_ce38 = trunc i32 %v1_ce38 to i16
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_ce44 = load i32, i32* %r4.global-to-local, align 4
  %v1_ce44 = trunc i32 %v0_ce44 to i8
  %v2_ce44 = load i32, i32* @sb, align 4
  %v3_ce44 = add i32 %v2_ce44, 45
  %v4_ce44 = inttoptr i32 %v3_ce44 to i8*
  store i8 %v1_ce44, i8* %v4_ce44, align 1
  %v0_ce48 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce48 = trunc i32 %v0_ce48 to i8
  %v2_ce48 = load i32, i32* @sb, align 4
  %v3_ce48 = add i32 %v2_ce48, 46
  %v4_ce48 = inttoptr i32 %v3_ce48 to i8*
  store i8 %v1_ce48, i8* %v4_ce48, align 1
  %v0_ce4c = load i32, i32* %r2.global-to-local, align 4
  %v1_ce4c = trunc i32 %v0_ce4c to i8
  %v2_ce4c = load i32, i32* @sb, align 4
  %v3_ce4c = add i32 %v2_ce4c, 47
  %v4_ce4c = inttoptr i32 %v3_ce4c to i8*
  store i8 %v1_ce4c, i8* %v4_ce4c, align 1
  %v3_ce50 = load i32, i32* @sb, align 4
  %v4_ce50 = add i32 %v3_ce50, 42
  %v5_ce50 = inttoptr i32 %v4_ce50 to i16*
  store i16 %v2_ce38, i16* %v5_ce50, align 2
  %v0_ce54 = load i32, i32* @r5, align 4
  %v1_ce54 = trunc i32 %v0_ce54 to i8
  %v2_ce54 = load i32, i32* @sb, align 4
  %v3_ce54 = add i32 %v2_ce54, 44
  %v4_ce54 = inttoptr i32 %v3_ce54 to i8*
  store i8 %v1_ce54, i8* %v4_ce54, align 1
  %v0_ce58 = call i32 @function_10038()
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_ce68 = load i32, i32* @r6, align 4
  %v1_ce68 = trunc i32 %v0_ce68 to i8
  %v2_ce68 = load i32, i32* @sb, align 4
  %v3_ce68 = add i32 %v2_ce68, 59
  %v4_ce68 = inttoptr i32 %v3_ce68 to i8*
  store i8 %v1_ce68, i8* %v4_ce68, align 1
  %v1_ce6c = load i32, i32* @sb, align 4
  %v2_ce6c = add i32 %v1_ce6c, 48
  %v3_ce6c = inttoptr i32 %v2_ce6c to i32*
  store i32 %v0_ce58, i32* %v3_ce6c, align 4
  %v0_ce70 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce70 = load i32, i32* @sb, align 4
  %v2_ce70 = add i32 %v1_ce70, 52
  %v3_ce70 = inttoptr i32 %v2_ce70 to i32*
  store i32 %v0_ce70, i32* %v3_ce70, align 4
  %v0_ce74 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce74 = trunc i32 %v0_ce74 to i8
  %v2_ce74 = load i32, i32* @sb, align 4
  %v3_ce74 = add i32 %v2_ce74, 56
  %v4_ce74 = inttoptr i32 %v3_ce74 to i8*
  store i8 %v1_ce74, i8* %v4_ce74, align 1
  %v0_ce78 = load i32, i32* %r1.global-to-local, align 4
  %v1_ce78 = trunc i32 %v0_ce78 to i8
  %v2_ce78 = load i32, i32* @sb, align 4
  %v3_ce78 = add i32 %v2_ce78, 58
  %v4_ce78 = inttoptr i32 %v3_ce78 to i8*
  store i8 %v1_ce78, i8* %v4_ce78, align 1
  %v0_ce7c = load i32, i32* %r1.global-to-local, align 4
  %v1_ce7c = trunc i32 %v0_ce7c to i8
  %v2_ce7c = load i32, i32* @sb, align 4
  %v3_ce7c = add i32 %v2_ce7c, 57
  %v4_ce7c = inttoptr i32 %v3_ce7c to i8*
  store i8 %v1_ce7c, i8* %v4_ce7c, align 1
  %v3_ce80 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ce80, i32* %r3.global-to-local, align 4
  %v1_ce84 = load i32, i32* %r2.global-to-local, align 4
  %v2_ce84 = add i32 %v1_ce84, %v3_ce80
  store i32 %v2_ce84, i32* @r4, align 4
  %v1_ce88 = load i32, i32* @r7, align 4
  %v9_ce88 = icmp eq i32 %v2_ce84, %v1_ce88
  store i1 %v9_ce88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_ce84, i32* %stack_var_-44, align 4
  %v6_ce90 = icmp slt i32 %v2_ce84, %v1_ce88
  br i1 %v6_ce90, label %dec_label_pc_ce94, label %dec_label_pc_d028.preheader

dec_label_pc_d028.preheader:                      ; preds = %dec_label_pc_cd44, %dec_label_pc_cca4
  %v0_d02c5 = phi i32 [ 0, %dec_label_pc_cca4 ], [ %v1_ce88, %dec_label_pc_cd44 ]
  %v3_d088 = icmp eq i32 %v6_cc58, -1
  %v8_d088 = icmp eq i32 %v6_cc58, -1
  %v9_d0a4 = icmp eq i32 %v3_cccc, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  %v2_cf94 = icmp eq i32 %v1_ccd4, 0
  br label %dec_label_pc_d028

dec_label_pc_ce94:                                ; preds = %dec_label_pc_cd44, %dec_label_pc_ccf0
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_ce9c = call i32 @function_13cd4(i32 128, i32 1)
  store i32 %v2_cac4, i32* %r2.global-to-local, align 4
  %v3_cea4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cea4, i32* %r3.global-to-local, align 4
  %v2_cea8 = load i32, i32* @r4, align 4
  %v5_cea8 = mul i32 %v2_cea8, 4
  %v6_cea8 = add i32 %v5_cea8, %v2_cac4
  %v7_cea8 = inttoptr i32 %v6_cea8 to i32*
  store i32 %v2_ce9c, i32* %v7_cea8, align 4
  %v0_ceac = load i32, i32* %r2.global-to-local, align 4
  %v1_ceac = load i32, i32* %r3.global-to-local, align 4
  %v4_ceac = mul i32 %v1_ceac, 4
  %v5_ceac = add i32 %v4_ceac, %v0_ceac
  %v6_ceac = inttoptr i32 %v5_ceac to i32*
  %v7_ceac = load i32, i32* %v6_ceac, align 4
  store i32 %v7_ceac, i32* @sb, align 4
  %v1_ceb0 = inttoptr i32 %v7_ceac to i8*
  %v2_ceb0 = load i8, i8* %v1_ceb0, align 1
  %tmp57 = urem i8 %v2_ceb0, 16
  %v1_ceb4 = zext i8 %tmp57 to i32
  %v1_ceb8 = or i32 %v1_ceb4, 64
  store i32 %v1_ceb8, i32* %r2.global-to-local, align 4
  %v1_cebc = trunc i32 %v1_ceb8 to i8
  store i8 %v1_cebc, i8* %v1_ceb0, align 1
  %v0_cec0 = load i32, i32* @sb, align 4
  %v1_cec0 = inttoptr i32 %v0_cec0 to i8*
  %v2_cec0 = load i8, i8* %v1_cec0, align 1
  %v1_cec4 = and i8 %v2_cec0, -16
  %v1_cec8 = or i8 %v1_cec4, 5
  store i8 %v1_cec8, i8* %v1_cec0, align 1
  store i32 %v4_ced0, i32* %r3.global-to-local, align 4
  %v2_ced8 = load i32, i32* @sb, align 4
  %v3_ced8 = add i32 %v2_ced8, 1
  %v4_ced8 = inttoptr i32 %v3_ced8 to i8*
  store i8 %v5_cafc, i8* %v4_ced8, align 1
  %v1_cedc = call i32 @function_15314(i32 60)
  %v2_cedc = trunc i32 %v1_cedc to i16
  %v3_cee0 = load i32, i32* @sb, align 4
  %v4_cee0 = add i32 %v3_cee0, 2
  %v5_cee0 = inttoptr i32 %v4_cee0 to i16*
  store i16 %v2_cedc, i16* %v5_cee0, align 2
  %v1_cee8 = call i32 @function_15314(i32 %v3_cccc)
  %v2_cee8 = trunc i32 %v1_cee8 to i16
  store i32 %v1_cb44, i32* %r1.global-to-local, align 4
  store i32 %v4_cef0, i32* %r2.global-to-local, align 4
  store i1 %v2_cef4, i1* %cpsr_z.global-to-local, align 1
  %v3_cef8 = load i32, i32* @sb, align 4
  %v4_cef8 = add i32 %v3_cef8, 4
  %v5_cef8 = inttoptr i32 %v4_cef8 to i16*
  store i16 %v2_cee8, i16* %v5_cef8, align 2
  %v0_cefc = load i32, i32* %r2.global-to-local, align 4
  %v1_cefc = trunc i32 %v0_cefc to i8
  %v2_cefc = load i32, i32* @sb, align 4
  %v3_cefc = add i32 %v2_cefc, 8
  %v4_cefc = inttoptr i32 %v3_cefc to i8*
  store i8 %v1_cefc, i8* %v4_cefc, align 1
  %v0_cf00 = load i32, i32* @sb, align 4
  %v1_cf00 = add i32 %v0_cf00, 20
  store i32 %v1_cf00, i32* @sl, align 4
  %v0_cf04 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cf04, label %dec_label_pc_cd44, label %dec_label_pc_cf08

dec_label_pc_cf08:                                ; preds = %dec_label_pc_ce94
  %v1_cf0c = call i32 @function_15314(i32 16384)
  %v2_cf0c = trunc i32 %v1_cf0c to i16
  %v3_cf10 = load i32, i32* @sb, align 4
  %v4_cf10 = add i32 %v3_cf10, 6
  %v5_cf10 = inttoptr i32 %v4_cf10 to i16*
  store i16 %v2_cf0c, i16* %v5_cf10, align 2
  %v2_cd48.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_cd44

dec_label_pc_cf18:                                ; preds = %dec_label_pc_d028
  br label %dec_label_pc_cf1c

dec_label_pc_cf1c:                                ; preds = %dec_label_pc_cf9c, %dec_label_pc_cf18
  %v1_cf30 = phi i32 [ %v1_d018, %dec_label_pc_cf9c ], [ 0, %dec_label_pc_cf18 ]
  %v5_cf20 = mul i32 %v1_cf30, 24
  %v1_cf24 = load i32, i32* @r8, align 4
  %v2_cf24 = add i32 %v1_cf24, %v5_cf20
  store i32 %v2_cf24, i32* %r3.global-to-local, align 4
  store i32 %v2_cac4, i32* %r1.global-to-local, align 4
  %v1_cf2c = add i32 %v2_cf24, 20
  %v2_cf2c = inttoptr i32 %v1_cf2c to i8*
  %v3_cf2c = load i8, i8* %v2_cf2c, align 1
  %v4_cf2c = zext i8 %v3_cf2c to i32
  store i32 %v4_cf2c, i32* %r2.global-to-local, align 4
  %v4_cf30 = mul i32 %v1_cf30, 4
  %v5_cf30 = add i32 %v4_cf30, %v2_cac4
  %v6_cf30 = inttoptr i32 %v5_cf30 to i32*
  %v7_cf30 = load i32, i32* %v6_cf30, align 4
  store i32 %v7_cf30, i32* @r5, align 4
  %v7_cf34 = icmp eq i8 %v3_cf2c, 31
  store i1 %v7_cf34, i1* %cpsr_z.global-to-local, align 1
  %v1_cf38 = add i32 %v7_cf30, 20
  store i32 %v1_cf38, i32* @r6, align 4
  %tmp58 = icmp ult i8 %v3_cf2c, 32
  br i1 %tmp58, label %dec_label_pc_d058, label %dec_label_pc_cf40

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cf1c
  store i32 %v6_cc58, i32* %r2.global-to-local, align 4
  store i1 %v8_d088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d088, label %dec_label_pc_d094, label %dec_label_pc_cf4c

dec_label_pc_cf4c:                                ; preds = %dec_label_pc_d058, %dec_label_pc_cf40
  store i32 %v3_cccc, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_d0a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d0a4, label %dec_label_pc_d0b0, label %dec_label_pc_cf60

dec_label_pc_cf60:                                ; preds = %dec_label_pc_d094.dec_label_pc_cf60_crit_edge, %dec_label_pc_cf4c
  %v1_cf64 = phi i32 [ %v1_cf64.pre, %dec_label_pc_d094.dec_label_pc_cf60_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), %dec_label_pc_cf4c ]
  %v9_cf64 = icmp eq i32 %v3_ccd0, %v1_cf64
  store i1 %v9_cf64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cf64, label %dec_label_pc_d0c4, label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_d0b0, %dec_label_pc_cf60
  %v1_cf70 = phi i32 [ %v1_d0bc, %dec_label_pc_d0b0 ], [ %v1_cf64, %dec_label_pc_cf60 ]
  store i32 %v3_ccbc, i32* %r1.global-to-local, align 4
  %v9_cf70 = icmp eq i32 %v3_ccbc, %v1_cf70
  store i1 %v9_cf70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cf70, label %dec_label_pc_d0d8, label %dec_label_pc_cf78

dec_label_pc_cf78:                                ; preds = %dec_label_pc_d0c4.dec_label_pc_cf78_crit_edge, %dec_label_pc_cf6c
  %v1_cf7c = phi i32 [ %v1_cf7c.pre, %dec_label_pc_d0c4.dec_label_pc_cf78_crit_edge ], [ %v1_cf70, %dec_label_pc_cf6c ]
  store i32 %v6_cb94, i32* %r2.global-to-local, align 4
  %v9_cf7c = icmp eq i32 %v6_cb94, %v1_cf7c
  store i1 %v9_cf7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cf7c, label %dec_label_pc_d0ec, label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_d0d8.dec_label_pc_cf84_crit_edge, %dec_label_pc_cf78
  %v1_cf88 = phi i32 [ %v1_cf88.pre, %dec_label_pc_d0d8.dec_label_pc_cf84_crit_edge ], [ %v1_cf7c, %dec_label_pc_cf78 ]
  store i32 %v6_cbac, i32* %r3.global-to-local, align 4
  %v9_cf88 = icmp eq i32 %v6_cbac, %v1_cf88
  store i1 %v9_cf88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cf88, label %dec_label_pc_d100, label %dec_label_pc_cf90

dec_label_pc_cf90:                                ; preds = %dec_label_pc_d0ec, %dec_label_pc_cf84, %dec_label_pc_d100
  store i1 %v2_cf94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cf94, label %dec_label_pc_cf9c, label %dec_label_pc_d04c

dec_label_pc_cf9c:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_d04c
  %v2_cfa0 = load i32, i32* @r5, align 4
  %v3_cfa0 = add i32 %v2_cfa0, 10
  %v4_cfa0 = inttoptr i32 %v3_cfa0 to i16*
  store i16 0, i16* %v4_cfa0, align 2
  %v0_cfa4 = load i32, i32* @r5, align 4
  store i32 %v0_cfa4, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_cfac = call i32 @function_e5a4(i32 %v0_cfa4, i32 20)
  %v3_cfac = trunc i32 %v2_cfac to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_cfb4 = load i32, i32* @r5, align 4
  %v4_cfb4 = add i32 %v3_cfb4, 10
  %v5_cfb4 = inttoptr i32 %v4_cfb4 to i16*
  store i16 %v3_cfac, i16* %v5_cfb4, align 2
  %v0_cfb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_cfb8 = trunc i32 %v0_cfb8 to i16
  %v2_cfb8 = load i32, i32* @r6, align 4
  %v3_cfb8 = add i32 %v2_cfb8, 16
  %v4_cfb8 = inttoptr i32 %v3_cfb8 to i16*
  store i16 %v1_cfb8, i16* %v4_cfb8, align 2
  %v1_cfc0 = call i32 @function_15314(i32 40)
  %v0_cfc4 = load i32, i32* @r6, align 4
  store i32 %v0_cfc4, i32* @r1, align 4
  store i32 %v1_cfc0, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_cfd0 = load i32, i32* @r5, align 4
  %v4_cfd4 = call i32 @function_e5f4(i32 %v0_cfd0, i32 %v0_cfc4, i32 %v1_cfc0, i32 40)
  %v5_cfd4 = trunc i32 %v4_cfd4 to i16
  %v3_cfd8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cfd8, i32* %r3.global-to-local, align 4
  %v3_cfdc = mul i32 %v3_cfd8, 32
  store i32 %v3_cfdc, i32* %lr.global-to-local, align 4
  %v3_cfe0 = load i32, i32* @r6, align 4
  %v4_cfe0 = add i32 %v3_cfe0, 16
  %v5_cfe0 = inttoptr i32 %v4_cfe0 to i16*
  store i16 %v5_cfd4, i16* %v5_cfe0, align 2
  %v0_cfe4 = load i32, i32* %lr.global-to-local, align 4
  %v1_cfe4 = load i32, i32* %r3.global-to-local, align 4
  %tmp59 = mul i32 %v1_cfe4, -8
  %v5_cfe4 = add i32 %v0_cfe4, %tmp59
  store i32 %v5_cfe4, i32* %lr.global-to-local, align 4
  %v0_cfe8 = load i32, i32* @r6, align 4
  %v1_cfe8 = add i32 %v0_cfe8, 2
  %v2_cfe8 = inttoptr i32 %v1_cfe8 to i16*
  %v3_cfe8 = load i16, i16* %v2_cfe8, align 2
  %v1_cfec = load i32, i32* @r8, align 4
  %v2_cfec = add i32 %v1_cfec, %v5_cfe4
  store i32 %v2_cfec, i32* @lr, align 4
  %v3_cff0 = add i32 %v2_cfec, 2
  %v4_cff0 = inttoptr i32 %v3_cff0 to i16*
  store i16 %v3_cfe8, i16* %v4_cff0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cffc = load i32, i32* @r5, align 4
  store i32 %v0_cffc, i32* @r1, align 4
  %v0_d000 = load i32, i32* @fp, align 4
  store i32 %v0_d000, i32* @r0, align 4
  store i32 60, i32* @r2, align 4
  %v0_d010 = call i32 @function_15560()
  %v3_d014 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d014, i32* %r3.global-to-local, align 4
  %v1_d018 = add i32 %v3_d014, 1
  %v1_d01c = load i32, i32* @r7, align 4
  %v9_d01c = icmp eq i32 %v1_d018, %v1_d01c
  store i1 %v9_d01c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d018, i32* %stack_var_-44, align 4
  %v5_d024 = icmp slt i32 %v1_d018, %v1_d01c
  br i1 %v5_d024, label %dec_label_pc_cf1c, label %dec_label_pc_d028

dec_label_pc_d028:                                ; preds = %dec_label_pc_d038, %dec_label_pc_cf9c, %dec_label_pc_d028.preheader
  %v0_d03c = phi i32 [ %v0_d02c5, %dec_label_pc_d028.preheader ], [ 0, %dec_label_pc_d038 ], [ %v1_d01c, %dec_label_pc_cf9c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d02c = icmp eq i32 %v0_d03c, 0
  store i1 %v2_d02c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d02c, label %dec_label_pc_d038, label %dec_label_pc_cf18

dec_label_pc_d038:                                ; preds = %dec_label_pc_d028
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_d028

dec_label_pc_d04c:                                ; preds = %dec_label_pc_cf90
  %v0_d04c = call i32 @function_10038()
  %v1_d04c = trunc i32 %v0_d04c to i16
  %v3_d050 = load i32, i32* @r6, align 4
  %v4_d050 = add i32 %v3_d050, 18
  %v5_d050 = inttoptr i32 %v4_d050 to i16*
  store i16 %v1_d04c, i16* %v5_d050, align 2
  br label %dec_label_pc_cf9c

dec_label_pc_d058:                                ; preds = %dec_label_pc_cf1c
  %v1_d058 = add i32 %v2_cf24, 16
  %v2_d058 = inttoptr i32 %v1_d058 to i32*
  %v3_d058 = load i32, i32* %v2_d058, align 4
  %v1_d05c = call i32 @function_15498(i32 %v3_d058)
  store i32 %v1_d05c, i32* %r4.global-to-local, align 4
  %v0_d064 = call i32 @function_10038()
  %v3_d068 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d068, i32* %r2.global-to-local, align 4
  %v5_d070 = mul i32 %v3_d068, 24
  %v1_d074 = load i32, i32* @r8, align 4
  %v2_d074 = add i32 %v1_d074, %v5_d070
  store i32 %v2_d074, i32* %r3.global-to-local, align 4
  %v1_d078 = add i32 %v2_d074, 20
  %v2_d078 = inttoptr i32 %v1_d078 to i8*
  %v3_d078 = load i8, i8* %v2_d078, align 1
  %v4_d078 = zext i8 %v3_d078 to i32
  store i32 %v4_d078, i32* %r2.global-to-local, align 4
  %v0_d07c = load i32, i32* %r4.global-to-local, align 4
  %v7_d07c = lshr i32 %v0_d064, %v4_d078
  %v8_d07c = add i32 %v7_d07c, %v0_d07c
  %v1_d080 = call i32 @function_152f0(i32 %v8_d07c)
  store i32 %v6_cc58, i32* %r2.global-to-local, align 4
  store i1 %v8_d088, i1* %cpsr_z.global-to-local, align 1
  %v1_d08c = load i32, i32* @r5, align 4
  %v2_d08c = add i32 %v1_d08c, 16
  %v3_d08c = inttoptr i32 %v2_d08c to i32*
  store i32 %v1_d080, i32* %v3_d08c, align 4
  br i1 %v3_d088, label %dec_label_pc_d094, label %dec_label_pc_cf4c

dec_label_pc_d094:                                ; preds = %dec_label_pc_d058, %dec_label_pc_cf40
  %v0_d094 = call i32 @function_10038()
  store i32 %v3_cccc, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_d0a4, i1* %cpsr_z.global-to-local, align 1
  %v1_d0a8 = load i32, i32* @r5, align 4
  %v2_d0a8 = add i32 %v1_d0a8, 12
  %v3_d0a8 = inttoptr i32 %v2_d0a8 to i32*
  store i32 %v0_d094, i32* %v3_d0a8, align 4
  br i1 %v9_d0a4, label %dec_label_pc_d0b0, label %dec_label_pc_d094.dec_label_pc_cf60_crit_edge

dec_label_pc_d094.dec_label_pc_cf60_crit_edge:    ; preds = %dec_label_pc_d094
  %v1_cf64.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf60

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d094, %dec_label_pc_cf4c
  %v0_d0b0 = call i32 @function_10038()
  %v1_d0b0 = trunc i32 %v0_d0b0 to i16
  %v3_d0b4 = load i32, i32* @r5, align 4
  %v4_d0b4 = add i32 %v3_d0b4, 4
  %v5_d0b4 = inttoptr i32 %v4_d0b4 to i16*
  store i16 %v1_d0b0, i16* %v5_d0b4, align 2
  %v1_d0bc = load i32, i32* @r4, align 4
  %v9_d0bc = icmp eq i32 %v3_ccd0, %v1_d0bc
  store i1 %v9_d0bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d0bc, label %dec_label_pc_d0c4, label %dec_label_pc_cf6c

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d0b0, %dec_label_pc_cf60
  %v0_d0c4 = call i32 @function_10038()
  %v1_d0c4 = trunc i32 %v0_d0c4 to i16
  store i32 %v3_ccbc, i32* %r1.global-to-local, align 4
  %v1_d0cc = load i32, i32* @r4, align 4
  %v9_d0cc = icmp eq i32 %v3_ccbc, %v1_d0cc
  store i1 %v9_d0cc, i1* %cpsr_z.global-to-local, align 1
  %v3_d0d0 = load i32, i32* @r5, align 4
  %v4_d0d0 = add i32 %v3_d0d0, 20
  %v5_d0d0 = inttoptr i32 %v4_d0d0 to i16*
  store i16 %v1_d0c4, i16* %v5_d0d0, align 2
  br i1 %v9_d0cc, label %dec_label_pc_d0d8, label %dec_label_pc_d0c4.dec_label_pc_cf78_crit_edge

dec_label_pc_d0c4.dec_label_pc_cf78_crit_edge:    ; preds = %dec_label_pc_d0c4
  %v1_cf7c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf78

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0c4, %dec_label_pc_cf6c
  %v0_d0d8 = call i32 @function_10038()
  %v1_d0d8 = trunc i32 %v0_d0d8 to i16
  store i32 %v6_cb94, i32* %r2.global-to-local, align 4
  %v1_d0e0 = load i32, i32* @r4, align 4
  %v9_d0e0 = icmp eq i32 %v6_cb94, %v1_d0e0
  store i1 %v9_d0e0, i1* %cpsr_z.global-to-local, align 1
  %v3_d0e4 = load i32, i32* @r6, align 4
  %v4_d0e4 = add i32 %v3_d0e4, 2
  %v5_d0e4 = inttoptr i32 %v4_d0e4 to i16*
  store i16 %v1_d0d8, i16* %v5_d0e4, align 2
  br i1 %v9_d0e0, label %dec_label_pc_d0ec, label %dec_label_pc_d0d8.dec_label_pc_cf84_crit_edge

dec_label_pc_d0d8.dec_label_pc_cf84_crit_edge:    ; preds = %dec_label_pc_d0d8
  %v1_cf88.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf84

dec_label_pc_d0ec:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_cf78
  %v0_d0ec = call i32 @function_10038()
  store i32 %v6_cbac, i32* %r3.global-to-local, align 4
  %v1_d0f4 = load i32, i32* @r4, align 4
  %v9_d0f4 = icmp eq i32 %v6_cbac, %v1_d0f4
  store i1 %v9_d0f4, i1* %cpsr_z.global-to-local, align 1
  %v1_d0f8 = load i32, i32* @r6, align 4
  %v2_d0f8 = add i32 %v1_d0f8, 4
  %v3_d0f8 = inttoptr i32 %v2_d0f8 to i32*
  store i32 %v0_d0ec, i32* %v3_d0f8, align 4
  br i1 %v9_d0f4, label %dec_label_pc_d100, label %dec_label_pc_cf90

dec_label_pc_d100:                                ; preds = %dec_label_pc_d0ec, %dec_label_pc_cf84
  %v0_d100 = call i32 @function_10038()
  %v1_d104 = load i32, i32* @r6, align 4
  %v2_d104 = add i32 %v1_d104, 8
  %v3_d104 = inttoptr i32 %v2_d104 to i32*
  store i32 %v0_d100, i32* %v3_d104, align 4
  br label %dec_label_pc_cf90

dec_label_pc_d10c:                                ; preds = %dec_label_pc_cc7c
  %v0_d10c = load i32, i32* @fp, align 4
  store i32 %v0_d10c, i32* @r0, align 4
  %v1_d110 = call i32 @function_165e8(i32 %v0_d10c)
  br label %dec_label_pc_d114

dec_label_pc_d114:                                ; preds = %dec_label_pc_caa8, %dec_label_pc_d10c
  %v1_d11c = phi i32 [ %v3_cc6c, %dec_label_pc_caa8 ], [ %v1_d110, %dec_label_pc_d10c ]
  store i32 %v3_caa8, i32* %r4.global-to-local, align 4
  store i32 %v27_caa8, i32* %lr.global-to-local, align 4
  ret i32 %v1_d11c

; uselistorder directives
  uselistorder i32 %v1_d0bc, { 1, 0 }
  uselistorder i32 %v1_d018, { 2, 0, 3, 1 }
  uselistorder i32 %v5_cfe4, { 1, 0 }
  uselistorder i32 %v0_cf00, { 1, 0 }
  uselistorder i1 %v9_d0a4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_ce84, { 1, 0, 2, 3 }
  uselistorder i32 %v1_cd24, { 2, 1, 0 }
  uselistorder i32 %v1_cd20, { 2, 0, 1 }
  uselistorder i32 %v1_cd1c, { 2, 0, 1 }
  uselistorder i32 %v1_cd18, { 2, 0, 1 }
  uselistorder i32 %v1_cd14, { 1, 0 }
  uselistorder i32 %v1_cd10, { 2, 0, 1 }
  uselistorder i32 %v1_ccd4, { 1, 0 }
  uselistorder i32 %v3_cccc, { 1, 2, 3, 0, 4 }
  uselistorder i1 %v7_cc9c, { 1, 0 }
  uselistorder i1 %v7_cc70, { 1, 0 }
  uselistorder i32 %v3_cc6c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_cc58, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v6_cbac, { 3, 2, 1, 0 }
  uselistorder i32 %v6_cb94, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 %v5_cafc, { 1, 0 }
  uselistorder i32 %v2_cac4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 28, 29, 30, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 24, 25, 26, 27, 28, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 17, 20, 21, 22 }
  uselistorder i32 60, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d114, { 1, 0 }
  uselistorder label %dec_label_pc_cf9c, { 1, 0 }
  uselistorder label %dec_label_pc_cf90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cd44, { 1, 0 }
}

define i32 @function_d124(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d124:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_d124 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_d140 = call i32 @function_13cd4(i32 %arg1, i32 4)
  store i32 %v2_d140, i32* @sl, align 4
  %v0_d14c = load i32, i32* @r7, align 4
  %v2_d150 = call i32 @function_13cd4(i32 %v0_d14c, i32 4)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  %v0_d15c = load i32, i32* @r6, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 %v2_d150, i32* @r8, align 4
  %v0_d16c = load i32, i32* @r5, align 4
  %v4_d170 = inttoptr i32 %v0_d15c to i32*
  %v5_d170 = call i32 @function_a430(i32 %v0_d16c, i32* %v4_d170, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v3_d178 = urem i32 %v5_d170, 65536
  %v0_d17c = load i32, i32* @r6, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d184 = load i32, i32* @r4, align 4
  store i32 %v0_d184, i32* %r3.global-to-local, align 4
  %v0_d188 = load i32, i32* @r5, align 4
  %v5_d190 = inttoptr i32 %v0_d17c to i32*
  %v6_d190 = call i32 @function_a430(i32 %v0_d188, i32* %v5_d190, i32 6, i32 %v0_d184)
  %v0_d194 = load i32, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_d1a4 = load i32, i32* @r5, align 4
  %v3_d1a8 = urem i32 %v6_d190, 65536
  store i32 %v3_d1a8, i32* %sb.global-to-local, align 4
  %v4_d1ac = inttoptr i32 %v0_d194 to i32*
  %v5_d1ac = call i32 @function_a430(i32 %v0_d1a4, i32* %v4_d1ac, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d1bc = load i32, i32* @r5, align 4
  %v0_d1c0 = load i32, i32* @r6, align 4
  %v3_d1c4 = urem i32 %v5_d1ac, 65536
  store i32 %v3_d1c4, i32* @r5, align 4
  %v4_d1c8 = inttoptr i32 %v0_d1c0 to i32*
  %v5_d1c8 = call i32 @function_a430(i32 %v0_d1bc, i32* %v4_d1c8, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_d1d0 = urem i32 %v5_d1c8, 256
  %v0_d1d4 = load i32, i32* %sb.global-to-local, align 4
  %v1_d1d4 = load i32, i32* @r4, align 4
  %v9_d1d4 = icmp eq i32 %v0_d1d4, %v1_d1d4
  store i32 0, i32* %stack_var_-56, align 4
  br i1 %v9_d1d4, label %dec_label_pc_d35c, label %dec_label_pc_d1f0

dec_label_pc_d1f0:                                ; preds = %dec_label_pc_d124
  %v1_d1f4 = call i32 @function_15314(i32 %v0_d1d4)
  %v2_d1f4 = trunc i32 %v1_d1f4 to i16
  br label %dec_label_pc_d1fc

dec_label_pc_d1fc:                                ; preds = %dec_label_pc_d35c, %dec_label_pc_d1f0
  %storemerge2 = phi i16 [ %v5_d368, %dec_label_pc_d35c ], [ %v2_d1f4, %dec_label_pc_d1f0 ]
  %v0_d1fc = load i32, i32* @r7, align 4
  %v2_d1fc = icmp eq i32 %v0_d1fc, 0
  br i1 %v2_d1fc, label %dec_label_pc_d320, label %dec_label_pc_d204

dec_label_pc_d204:                                ; preds = %dec_label_pc_d1fc
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v2_d240 = ptrtoint i32* %stack_var_-56 to i32
  %v4_d260 = sext i16 %storemerge2 to i32
  br label %dec_label_pc_d294

dec_label_pc_d214:                                ; preds = %dec_label_pc_d294
  %v1_d214 = call i32 @function_15314(i32 %v3_d178)
  %v2_d214 = trunc i32 %v1_d214 to i16
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v3_d21c = load i32, i32* @r6, align 4
  %v4_d21c = add i32 %v3_d21c, 2
  %v5_d21c = inttoptr i32 %v4_d21c to i16*
  store i16 %v2_d214, i16* %v5_d21c, align 2
  br label %dec_label_pc_d220

dec_label_pc_d220:                                ; preds = %dec_label_pc_d2c8, %dec_label_pc_d214
  %v0_d224 = load i32, i32* %r3.global-to-local, align 4
  %v1_d224 = add i32 %v0_d224, 24
  store i32 %v1_d224, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d234 = call i32 @function_1561c(i32 2, i32 2, i32 17)
  %v7_d238 = icmp eq i32 %v3_d234, -1
  %v0_d23c = load i32, i32* @sb, align 4
  %v1_d23c = add i32 %v0_d23c, 1
  store i32 %v1_d23c, i32* @sb, align 4
  store i32 16, i32* @r2, align 4
  %v1_d248 = load i32, i32* @fp, align 4
  %v2_d248 = load i32, i32* @r8, align 4
  %v3_d248 = add i32 %v2_d248, %v1_d248
  %v4_d248 = inttoptr i32 %v3_d248 to i32*
  store i32 %v3_d234, i32* %v4_d248, align 4
  br i1 %v7_d238, label %dec_label_pc_d370, label %dec_label_pc_d250

dec_label_pc_d250:                                ; preds = %dec_label_pc_d220
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_d260, i32* %r3.global-to-local, align 4
  %v3_d268 = call i32 @function_15238(i32 %v3_d234, i32 %v2_d240, i32 16)
  %v0_d26c = load i32, i32* @r6, align 4
  %v1_d26c = add i32 %v0_d26c, 20
  %v2_d26c = inttoptr i32 %v1_d26c to i8*
  %v3_d26c = load i8, i8* %v2_d26c, align 1
  %v4_d26c = zext i8 %v3_d26c to i32
  store i32 %v4_d26c, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_d26c, 32
  br i1 %tmp, label %dec_label_pc_d2e4, label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d250
  %v0_d278 = load i32, i32* @fp, align 4
  %v1_d278 = load i32, i32* @r8, align 4
  %v2_d278 = add i32 %v1_d278, %v0_d278
  %v3_d278 = inttoptr i32 %v2_d278 to i32*
  %v4_d278 = load i32, i32* %v3_d278, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d284 = call i32 @function_15260(i32 %v4_d278, i32 %v0_d26c, i32 16)
  %v0_d288 = load i32, i32* @sb, align 4
  %v1_d288 = load i32, i32* @r7, align 4
  %v9_d288 = icmp eq i32 %v0_d288, %v1_d288
  %v0_d28c = load i32, i32* @fp, align 4
  %v1_d28c = add i32 %v0_d28c, 4
  store i32 %v1_d28c, i32* @fp, align 4
  br i1 %v9_d288, label %dec_label_pc_d320, label %dec_label_pc_d294

dec_label_pc_d294:                                ; preds = %dec_label_pc_d2e4, %dec_label_pc_d278, %dec_label_pc_d204
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_d204 ], [ %v1_d224, %dec_label_pc_d278 ], [ %v1_d224, %dec_label_pc_d2e4 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  %v2_d2a4 = call i32 @function_13cd4(i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32 1)
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_d2b0 = load i32, i32* @r4, align 4
  %v9_d2b0 = icmp eq i32 %v3_d178, %v1_d2b0
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v1_d2b8 = load i32, i32* @fp, align 4
  %v2_d2b8 = load i32, i32* @sl, align 4
  %v3_d2b8 = add i32 %v2_d2b8, %v1_d2b8
  %v4_d2b8 = inttoptr i32 %v3_d2b8 to i32*
  store i32 %v2_d2a4, i32* %v4_d2b8, align 4
  %v0_d2bc = load i32, i32* %r3.global-to-local, align 4
  %v1_d2bc = load i32, i32* %r2.global-to-local, align 4
  %v2_d2bc = add i32 %v1_d2bc, %v0_d2bc
  store i32 %v2_d2bc, i32* @r6, align 4
  br i1 %v9_d2b0, label %dec_label_pc_d2c8, label %dec_label_pc_d214

dec_label_pc_d2c8:                                ; preds = %dec_label_pc_d294
  %v0_d2c8 = call i32 @function_10038()
  %v1_d2c8 = trunc i32 %v0_d2c8 to i16
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v2_d2d4 = add i32 %stack_var_-60.0, %arg2
  store i32 %v2_d2d4, i32* @r6, align 4
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v4_d2dc = add i32 %v2_d2d4, 2
  %v5_d2dc = inttoptr i32 %v4_d2dc to i16*
  store i16 %v1_d2c8, i16* %v5_d2dc, align 2
  br label %dec_label_pc_d220

dec_label_pc_d2e4:                                ; preds = %dec_label_pc_d250
  %v1_d2e4 = add i32 %v0_d26c, 16
  %v2_d2e4 = inttoptr i32 %v1_d2e4 to i32*
  %v3_d2e4 = load i32, i32* %v2_d2e4, align 4
  %v1_d2e8 = call i32 @function_15498(i32 %v3_d2e4)
  store i32 %v1_d2e8, i32* @r4, align 4
  %v0_d2f0 = call i32 @function_10038()
  %v0_d2f4 = load i32, i32* @r6, align 4
  %v1_d2f4 = add i32 %v0_d2f4, 20
  %v2_d2f4 = inttoptr i32 %v1_d2f4 to i8*
  %v3_d2f4 = load i8, i8* %v2_d2f4, align 1
  %v4_d2f4 = zext i8 %v3_d2f4 to i32
  store i32 %v4_d2f4, i32* %r3.global-to-local, align 4
  %v0_d2f8 = load i32, i32* @r4, align 4
  %v7_d2f8 = lshr i32 %v0_d2f0, %v4_d2f4
  %v8_d2f8 = add i32 %v7_d2f8, %v0_d2f8
  %v1_d2fc = call i32 @function_152f0(i32 %v8_d2f8)
  %v1_d300 = load i32, i32* @r6, align 4
  %v2_d300 = add i32 %v1_d300, 4
  %v3_d300 = inttoptr i32 %v2_d300 to i32*
  store i32 %v1_d2fc, i32* %v3_d300, align 4
  %v0_d304 = load i32, i32* @fp, align 4
  %v1_d304 = load i32, i32* @r8, align 4
  %v2_d304 = add i32 %v1_d304, %v0_d304
  %v3_d304 = inttoptr i32 %v2_d304 to i32*
  %v4_d304 = load i32, i32* %v3_d304, align 4
  %v0_d308 = load i32, i32* @r6, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d310 = call i32 @function_15260(i32 %v4_d304, i32 %v0_d308, i32 16)
  %v0_d314 = load i32, i32* @sb, align 4
  %v1_d314 = load i32, i32* @r7, align 4
  %v9_d314 = icmp eq i32 %v0_d314, %v1_d314
  %v0_d318 = load i32, i32* @fp, align 4
  %v1_d318 = add i32 %v0_d318, 4
  store i32 %v1_d318, i32* @fp, align 4
  br i1 %v9_d314, label %dec_label_pc_d320, label %dec_label_pc_d294

dec_label_pc_d320:                                ; preds = %dec_label_pc_d2e4, %dec_label_pc_d278, %dec_label_pc_d1fc
  %v1_d3808 = phi i32 [ 0, %dec_label_pc_d1fc ], [ %v0_d314, %dec_label_pc_d2e4 ], [ %v0_d288, %dec_label_pc_d278 ]
  store i32 %v1_d1d0, i32* %r2.global-to-local, align 4
  %v2_d324 = icmp eq i32 %v1_d1d0, 0
  br i1 %v2_d324, label %dec_label_pc_d344.outer, label %dec_label_pc_d37c

dec_label_pc_d334:                                ; preds = %dec_label_pc_d344
  store i32 %v1_d338, i32* @r4, align 4
  store i32 %v0_d348, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d334 = load i32, i32* @r8, align 4
  %v4_d334 = mul i32 %v1_d338, 4
  %v5_d334 = add i32 %v0_d334, %v4_d334
  %v6_d334 = inttoptr i32 %v5_d334 to i32*
  %v7_d334 = load i32, i32* %v6_d334, align 4
  store i32 %v7_d334, i32* @r0, align 4
  %v0_d338 = load i32, i32* @sl, align 4
  %v5_d338 = add i32 %v0_d338, %v4_d334
  %v6_d338 = inttoptr i32 %v5_d338 to i32*
  %v7_d338 = load i32, i32* %v6_d338, align 4
  store i32 %v7_d338, i32* @r1, align 4
  %v4_d33c = call i32 @function_1553c(i32 %v7_d334, i32 %v7_d338, i32 %v0_d348, i32 16384)
  %v0_d340 = load i32, i32* @r4, align 4
  %v1_d340 = add i32 %v0_d340, 1
  %v0_d344.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d344.outer

dec_label_pc_d344.outer:                          ; preds = %dec_label_pc_d320, %dec_label_pc_d334
  %v0_d344.ph = phi i32 [ %v0_d344.pre.pre, %dec_label_pc_d334 ], [ %v1_d3808, %dec_label_pc_d320 ]
  %v1_d338.ph = phi i32 [ %v1_d340, %dec_label_pc_d334 ], [ 0, %dec_label_pc_d320 ]
  %v0_d348 = load i32, i32* @r5, align 4
  br label %dec_label_pc_d344

dec_label_pc_d344:                                ; preds = %dec_label_pc_d344.outer, %dec_label_pc_d344
  %v1_d338 = phi i32 [ 0, %dec_label_pc_d344 ], [ %v1_d338.ph, %dec_label_pc_d344.outer ]
  %v8_d350 = icmp sgt i32 %v0_d344.ph, %v1_d338
  br i1 %v8_d350, label %dec_label_pc_d334, label %dec_label_pc_d344

dec_label_pc_d35c:                                ; preds = %dec_label_pc_d124
  %v0_d35c = call i32 @function_10038()
  %v5_d368 = trunc i32 %v0_d35c to i16
  br label %dec_label_pc_d1fc

dec_label_pc_d370:                                ; preds = %dec_label_pc_d220
  store i32 %v18_d124, i32* %sb.global-to-local, align 4
  ret i32 %v3_d234

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d380, %dec_label_pc_d320
  %v1_d3807 = phi i32 [ %v1_d3808, %dec_label_pc_d320 ], [ %v1_d380, %dec_label_pc_d380 ]
  br label %dec_label_pc_d380

dec_label_pc_d380:                                ; preds = %dec_label_pc_d38c, %dec_label_pc_d37c
  %v1_d380 = phi i32 [ %v1_d3807, %dec_label_pc_d37c ], [ %v1_d380.pre, %dec_label_pc_d38c ]
  %v1_d38c = phi i32 [ 0, %dec_label_pc_d37c ], [ %v1_d3ac, %dec_label_pc_d38c ]
  store i32 %v1_d38c, i32* @r6, align 4
  %v6_d388 = icmp slt i32 %v1_d38c, %v1_d380
  br i1 %v6_d388, label %dec_label_pc_d38c, label %dec_label_pc_d37c

dec_label_pc_d38c:                                ; preds = %dec_label_pc_d380
  %v0_d384 = load i32, i32* @r5, align 4
  %v0_d38c = load i32, i32* @sl, align 4
  %v4_d38c = mul i32 %v1_d38c, 4
  %v5_d38c = add i32 %v0_d38c, %v4_d38c
  %v6_d38c = inttoptr i32 %v5_d38c to i32*
  %v7_d38c = load i32, i32* %v6_d38c, align 4
  store i32 %v7_d38c, i32* @r4, align 4
  %v2_d394 = inttoptr i32 %v7_d38c to i16*
  %v3_d394 = call i32 @function_10238(i16* %v2_d394, i32 %v0_d384)
  %v0_d398 = load i32, i32* @r8, align 4
  %v1_d398 = load i32, i32* @r6, align 4
  %v4_d398 = mul i32 %v1_d398, 4
  %v5_d398 = add i32 %v4_d398, %v0_d398
  %v6_d398 = inttoptr i32 %v5_d398 to i32*
  %v7_d398 = load i32, i32* %v6_d398, align 4
  store i32 %v7_d398, i32* @r0, align 4
  %v0_d39c = load i32, i32* @r4, align 4
  store i32 %v0_d39c, i32* @r1, align 4
  %v0_d3a0 = load i32, i32* @r5, align 4
  store i32 %v0_d3a0, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_d3a8 = call i32 @function_1553c(i32 %v7_d398, i32 %v0_d39c, i32 %v0_d3a0, i32 16384)
  %v0_d3ac = load i32, i32* @r6, align 4
  %v1_d3ac = add i32 %v0_d3ac, 1
  %v1_d380.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d380

; uselistorder directives
  uselistorder i32 %v1_d380, { 1, 0 }
  uselistorder i32 %v1_d338, { 2, 1, 0 }
  uselistorder i32 %v0_d348, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v3_d234, { 1, 3, 2, 0 }
  uselistorder i32 %v1_d1d0, { 1, 0 }
  uselistorder i32 %v3_d178, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 16, 2, 3, 9, 10, 4, 5, 6, 7, 8, 12, 11, 13, 14, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 9, 8, 10, 11, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d344, { 1, 0 }
  uselistorder label %dec_label_pc_d344.outer, { 1, 0 }
}

define i32 @function_d3b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d3b4:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_d3b4 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_d3d0 = call i32 @function_13cd4(i32 %arg1, i32 4)
  store i32 %v2_d3d0, i32* @sl, align 4
  %v0_d3dc = load i32, i32* @r7, align 4
  %v2_d3e0 = call i32 @function_13cd4(i32 %v0_d3dc, i32 4)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  %v0_d3ec = load i32, i32* @r6, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 %v2_d3e0, i32* @r8, align 4
  %v0_d3fc = load i32, i32* @r5, align 4
  %v4_d400 = inttoptr i32 %v0_d3ec to i32*
  %v5_d400 = call i32 @function_a430(i32 %v0_d3fc, i32* %v4_d400, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v3_d408 = urem i32 %v5_d400, 65536
  %v0_d40c = load i32, i32* @r6, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d414 = load i32, i32* @r4, align 4
  store i32 %v0_d414, i32* %r3.global-to-local, align 4
  %v0_d418 = load i32, i32* @r5, align 4
  %v5_d420 = inttoptr i32 %v0_d40c to i32*
  %v6_d420 = call i32 @function_a430(i32 %v0_d418, i32* %v5_d420, i32 6, i32 %v0_d414)
  %v0_d424 = load i32, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v0_d434 = load i32, i32* @r5, align 4
  %v3_d438 = urem i32 %v6_d420, 65536
  store i32 %v3_d438, i32* %sb.global-to-local, align 4
  %v4_d43c = inttoptr i32 %v0_d424 to i32*
  %v5_d43c = call i32 @function_a430(i32 %v0_d434, i32* %v4_d43c, i32 0, i32 1024)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d44c = load i32, i32* @r5, align 4
  %v0_d450 = load i32, i32* @r6, align 4
  %v3_d454 = urem i32 %v5_d43c, 65536
  store i32 %v3_d454, i32* @r5, align 4
  %v4_d458 = inttoptr i32 %v0_d450 to i32*
  %v5_d458 = call i32 @function_a430(i32 %v0_d44c, i32* %v4_d458, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_d460 = urem i32 %v5_d458, 256
  %v0_d464 = load i32, i32* %sb.global-to-local, align 4
  %v1_d464 = load i32, i32* @r4, align 4
  %v9_d464 = icmp eq i32 %v0_d464, %v1_d464
  store i32 0, i32* %stack_var_-56, align 4
  br i1 %v9_d464, label %dec_label_pc_d5ec, label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d3b4
  %v1_d484 = call i32 @function_15314(i32 %v0_d464)
  %v2_d484 = trunc i32 %v1_d484 to i16
  br label %dec_label_pc_d48c

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d5ec, %dec_label_pc_d480
  %storemerge2 = phi i16 [ %v5_d5f8, %dec_label_pc_d5ec ], [ %v2_d484, %dec_label_pc_d480 ]
  %v0_d48c = load i32, i32* @r7, align 4
  %v2_d48c = icmp eq i32 %v0_d48c, 0
  br i1 %v2_d48c, label %dec_label_pc_d5b0, label %dec_label_pc_d494

dec_label_pc_d494:                                ; preds = %dec_label_pc_d48c
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v2_d4d0 = ptrtoint i32* %stack_var_-56 to i32
  %v4_d4f0 = sext i16 %storemerge2 to i32
  br label %dec_label_pc_d524

dec_label_pc_d4a4:                                ; preds = %dec_label_pc_d524
  %v1_d4a4 = call i32 @function_15314(i32 %v3_d408)
  %v2_d4a4 = trunc i32 %v1_d4a4 to i16
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v3_d4ac = load i32, i32* @r6, align 4
  %v4_d4ac = add i32 %v3_d4ac, 2
  %v5_d4ac = inttoptr i32 %v4_d4ac to i16*
  store i16 %v2_d4a4, i16* %v5_d4ac, align 2
  br label %dec_label_pc_d4b0

dec_label_pc_d4b0:                                ; preds = %dec_label_pc_d558, %dec_label_pc_d4a4
  %v0_d4b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d4b4 = add i32 %v0_d4b4, 24
  store i32 %v1_d4b4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d4c4 = call i32 @function_1561c(i32 2, i32 2, i32 0)
  %v7_d4c8 = icmp eq i32 %v3_d4c4, -1
  %v0_d4cc = load i32, i32* @sb, align 4
  %v1_d4cc = add i32 %v0_d4cc, 1
  store i32 %v1_d4cc, i32* @sb, align 4
  store i32 16, i32* @r2, align 4
  %v1_d4d8 = load i32, i32* @fp, align 4
  %v2_d4d8 = load i32, i32* @r8, align 4
  %v3_d4d8 = add i32 %v2_d4d8, %v1_d4d8
  %v4_d4d8 = inttoptr i32 %v3_d4d8 to i32*
  store i32 %v3_d4c4, i32* %v4_d4d8, align 4
  br i1 %v7_d4c8, label %dec_label_pc_d600, label %dec_label_pc_d4e0

dec_label_pc_d4e0:                                ; preds = %dec_label_pc_d4b0
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_d4f0, i32* %r3.global-to-local, align 4
  %v3_d4f8 = call i32 @function_15238(i32 %v3_d4c4, i32 %v2_d4d0, i32 16)
  %v0_d4fc = load i32, i32* @r6, align 4
  %v1_d4fc = add i32 %v0_d4fc, 20
  %v2_d4fc = inttoptr i32 %v1_d4fc to i8*
  %v3_d4fc = load i8, i8* %v2_d4fc, align 1
  %v4_d4fc = zext i8 %v3_d4fc to i32
  store i32 %v4_d4fc, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_d4fc, 32
  br i1 %tmp, label %dec_label_pc_d574, label %dec_label_pc_d508

dec_label_pc_d508:                                ; preds = %dec_label_pc_d4e0
  %v0_d508 = load i32, i32* @fp, align 4
  %v1_d508 = load i32, i32* @r8, align 4
  %v2_d508 = add i32 %v1_d508, %v0_d508
  %v3_d508 = inttoptr i32 %v2_d508 to i32*
  %v4_d508 = load i32, i32* %v3_d508, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d514 = call i32 @function_15260(i32 %v4_d508, i32 %v0_d4fc, i32 16)
  %v0_d518 = load i32, i32* @sb, align 4
  %v1_d518 = load i32, i32* @r7, align 4
  %v9_d518 = icmp eq i32 %v0_d518, %v1_d518
  %v0_d51c = load i32, i32* @fp, align 4
  %v1_d51c = add i32 %v0_d51c, 4
  store i32 %v1_d51c, i32* @fp, align 4
  br i1 %v9_d518, label %dec_label_pc_d5b0, label %dec_label_pc_d524

dec_label_pc_d524:                                ; preds = %dec_label_pc_d574, %dec_label_pc_d508, %dec_label_pc_d494
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_d494 ], [ %v1_d4b4, %dec_label_pc_d508 ], [ %v1_d4b4, %dec_label_pc_d574 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  %v2_d534 = call i32 @function_13cd4(i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32 1)
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_d540 = load i32, i32* @r4, align 4
  %v9_d540 = icmp eq i32 %v3_d408, %v1_d540
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v1_d548 = load i32, i32* @fp, align 4
  %v2_d548 = load i32, i32* @sl, align 4
  %v3_d548 = add i32 %v2_d548, %v1_d548
  %v4_d548 = inttoptr i32 %v3_d548 to i32*
  store i32 %v2_d534, i32* %v4_d548, align 4
  %v0_d54c = load i32, i32* %r3.global-to-local, align 4
  %v1_d54c = load i32, i32* %r2.global-to-local, align 4
  %v2_d54c = add i32 %v1_d54c, %v0_d54c
  store i32 %v2_d54c, i32* @r6, align 4
  br i1 %v9_d540, label %dec_label_pc_d558, label %dec_label_pc_d4a4

dec_label_pc_d558:                                ; preds = %dec_label_pc_d524
  %v0_d558 = call i32 @function_10038()
  %v1_d558 = trunc i32 %v0_d558 to i16
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v2_d564 = add i32 %stack_var_-60.0, %arg2
  store i32 %v2_d564, i32* @r6, align 4
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v4_d56c = add i32 %v2_d564, 2
  %v5_d56c = inttoptr i32 %v4_d56c to i16*
  store i16 %v1_d558, i16* %v5_d56c, align 2
  br label %dec_label_pc_d4b0

dec_label_pc_d574:                                ; preds = %dec_label_pc_d4e0
  %v1_d574 = add i32 %v0_d4fc, 16
  %v2_d574 = inttoptr i32 %v1_d574 to i32*
  %v3_d574 = load i32, i32* %v2_d574, align 4
  %v1_d578 = call i32 @function_15498(i32 %v3_d574)
  store i32 %v1_d578, i32* @r4, align 4
  %v0_d580 = call i32 @function_10038()
  %v0_d584 = load i32, i32* @r6, align 4
  %v1_d584 = add i32 %v0_d584, 20
  %v2_d584 = inttoptr i32 %v1_d584 to i8*
  %v3_d584 = load i8, i8* %v2_d584, align 1
  %v4_d584 = zext i8 %v3_d584 to i32
  store i32 %v4_d584, i32* %r3.global-to-local, align 4
  %v0_d588 = load i32, i32* @r4, align 4
  %v7_d588 = lshr i32 %v0_d580, %v4_d584
  %v8_d588 = add i32 %v7_d588, %v0_d588
  %v1_d58c = call i32 @function_152f0(i32 %v8_d588)
  %v1_d590 = load i32, i32* @r6, align 4
  %v2_d590 = add i32 %v1_d590, 4
  %v3_d590 = inttoptr i32 %v2_d590 to i32*
  store i32 %v1_d58c, i32* %v3_d590, align 4
  %v0_d594 = load i32, i32* @fp, align 4
  %v1_d594 = load i32, i32* @r8, align 4
  %v2_d594 = add i32 %v1_d594, %v0_d594
  %v3_d594 = inttoptr i32 %v2_d594 to i32*
  %v4_d594 = load i32, i32* %v3_d594, align 4
  %v0_d598 = load i32, i32* @r6, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d5a0 = call i32 @function_15260(i32 %v4_d594, i32 %v0_d598, i32 16)
  %v0_d5a4 = load i32, i32* @sb, align 4
  %v1_d5a4 = load i32, i32* @r7, align 4
  %v9_d5a4 = icmp eq i32 %v0_d5a4, %v1_d5a4
  %v0_d5a8 = load i32, i32* @fp, align 4
  %v1_d5a8 = add i32 %v0_d5a8, 4
  store i32 %v1_d5a8, i32* @fp, align 4
  br i1 %v9_d5a4, label %dec_label_pc_d5b0, label %dec_label_pc_d524

dec_label_pc_d5b0:                                ; preds = %dec_label_pc_d574, %dec_label_pc_d508, %dec_label_pc_d48c
  %v1_d6108 = phi i32 [ 0, %dec_label_pc_d48c ], [ %v0_d5a4, %dec_label_pc_d574 ], [ %v0_d518, %dec_label_pc_d508 ]
  store i32 %v1_d460, i32* %r2.global-to-local, align 4
  %v2_d5b4 = icmp eq i32 %v1_d460, 0
  br i1 %v2_d5b4, label %dec_label_pc_d5d4.outer, label %dec_label_pc_d60c

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d5d4
  store i32 %v1_d5c8, i32* @r4, align 4
  store i32 %v0_d5d8, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d5c4 = load i32, i32* @r8, align 4
  %v4_d5c4 = mul i32 %v1_d5c8, 4
  %v5_d5c4 = add i32 %v0_d5c4, %v4_d5c4
  %v6_d5c4 = inttoptr i32 %v5_d5c4 to i32*
  %v7_d5c4 = load i32, i32* %v6_d5c4, align 4
  store i32 %v7_d5c4, i32* @r0, align 4
  %v0_d5c8 = load i32, i32* @sl, align 4
  %v5_d5c8 = add i32 %v0_d5c8, %v4_d5c4
  %v6_d5c8 = inttoptr i32 %v5_d5c8 to i32*
  %v7_d5c8 = load i32, i32* %v6_d5c8, align 4
  store i32 %v7_d5c8, i32* @r1, align 4
  %v4_d5cc = call i32 @function_1553c(i32 %v7_d5c4, i32 %v7_d5c8, i32 %v0_d5d8, i32 16384)
  %v0_d5d0 = load i32, i32* @r4, align 4
  %v1_d5d0 = add i32 %v0_d5d0, 1
  %v0_d5d4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d5d4.outer

dec_label_pc_d5d4.outer:                          ; preds = %dec_label_pc_d5b0, %dec_label_pc_d5c4
  %v0_d5d4.ph = phi i32 [ %v0_d5d4.pre.pre, %dec_label_pc_d5c4 ], [ %v1_d6108, %dec_label_pc_d5b0 ]
  %v1_d5c8.ph = phi i32 [ %v1_d5d0, %dec_label_pc_d5c4 ], [ 0, %dec_label_pc_d5b0 ]
  %v0_d5d8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_d5d4

dec_label_pc_d5d4:                                ; preds = %dec_label_pc_d5d4.outer, %dec_label_pc_d5d4
  %v1_d5c8 = phi i32 [ 0, %dec_label_pc_d5d4 ], [ %v1_d5c8.ph, %dec_label_pc_d5d4.outer ]
  %v8_d5e0 = icmp sgt i32 %v0_d5d4.ph, %v1_d5c8
  br i1 %v8_d5e0, label %dec_label_pc_d5c4, label %dec_label_pc_d5d4

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d3b4
  %v0_d5ec = call i32 @function_10038()
  %v5_d5f8 = trunc i32 %v0_d5ec to i16
  br label %dec_label_pc_d48c

dec_label_pc_d600:                                ; preds = %dec_label_pc_d4b0
  store i32 %v18_d3b4, i32* %sb.global-to-local, align 4
  ret i32 %v3_d4c4

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d610, %dec_label_pc_d5b0
  %v1_d6107 = phi i32 [ %v1_d6108, %dec_label_pc_d5b0 ], [ %v1_d610, %dec_label_pc_d610 ]
  br label %dec_label_pc_d610

dec_label_pc_d610:                                ; preds = %dec_label_pc_d61c, %dec_label_pc_d60c
  %v1_d610 = phi i32 [ %v1_d6107, %dec_label_pc_d60c ], [ %v1_d610.pre, %dec_label_pc_d61c ]
  %v1_d61c = phi i32 [ 0, %dec_label_pc_d60c ], [ %v1_d63c, %dec_label_pc_d61c ]
  store i32 %v1_d61c, i32* @r6, align 4
  %v6_d618 = icmp slt i32 %v1_d61c, %v1_d610
  br i1 %v6_d618, label %dec_label_pc_d61c, label %dec_label_pc_d60c

dec_label_pc_d61c:                                ; preds = %dec_label_pc_d610
  %v0_d614 = load i32, i32* @r5, align 4
  %v0_d61c = load i32, i32* @sl, align 4
  %v4_d61c = mul i32 %v1_d61c, 4
  %v5_d61c = add i32 %v0_d61c, %v4_d61c
  %v6_d61c = inttoptr i32 %v5_d61c to i32*
  %v7_d61c = load i32, i32* %v6_d61c, align 4
  store i32 %v7_d61c, i32* @r4, align 4
  %v2_d624 = inttoptr i32 %v7_d61c to i16*
  %v3_d624 = call i32 @function_10238(i16* %v2_d624, i32 %v0_d614)
  %v0_d628 = load i32, i32* @r8, align 4
  %v1_d628 = load i32, i32* @r6, align 4
  %v4_d628 = mul i32 %v1_d628, 4
  %v5_d628 = add i32 %v4_d628, %v0_d628
  %v6_d628 = inttoptr i32 %v5_d628 to i32*
  %v7_d628 = load i32, i32* %v6_d628, align 4
  store i32 %v7_d628, i32* @r0, align 4
  %v0_d62c = load i32, i32* @r4, align 4
  store i32 %v0_d62c, i32* @r1, align 4
  %v0_d630 = load i32, i32* @r5, align 4
  store i32 %v0_d630, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_d638 = call i32 @function_1553c(i32 %v7_d628, i32 %v0_d62c, i32 %v0_d630, i32 16384)
  %v0_d63c = load i32, i32* @r6, align 4
  %v1_d63c = add i32 %v0_d63c, 1
  %v1_d610.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d610

; uselistorder directives
  uselistorder i32 %v1_d610, { 1, 0 }
  uselistorder i32 %v1_d5c8, { 2, 1, 0 }
  uselistorder i32 %v0_d5d8, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v3_d4c4, { 1, 3, 2, 0 }
  uselistorder i32 %v1_d460, { 1, 0 }
  uselistorder i32 %v3_d408, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 16, 2, 3, 9, 10, 4, 5, 6, 7, 8, 12, 11, 13, 14, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 9, 8, 10, 11, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d5d4, { 1, 0 }
  uselistorder label %dec_label_pc_d5d4.outer, { 1, 0 }
}

define i32 @function_d644(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d644:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_d644 = load i32, i32* @r4, align 4
  %v18_d644 = load i32, i32* @sb, align 4
  %v27_d644 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_d660 = call i32 @function_13cd4(i32 %arg1, i32 4)
  %v0_d664 = load i32, i32* @r5, align 4
  store i32 %v0_d664, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d674 = load i32, i32* @r4, align 4
  %v5_d678 = inttoptr i32 %v0_d664 to i32*
  %v6_d678 = call i32 @function_a430(i32 %v0_d674, i32* %v5_d678, i32 2, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_d690 = load i32, i32* @r5, align 4
  store i32 %v0_d690, i32* %r1.global-to-local, align 4
  %v0_d694 = load i32, i32* @r4, align 4
  %v5_d698 = trunc i32 %v6_d678 to i8
  %v6_d69c = inttoptr i32 %v0_d690 to i32*
  %v7_d69c = call i32 @function_a430(i32 %v0_d694, i32* %v6_d69c, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_d6a0 = load i32, i32* @r5, align 4
  store i32 %v0_d6a0, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d6b0 = load i32, i32* @r4, align 4
  %v5_d6b4 = inttoptr i32 %v0_d6a0 to i32*
  %v6_d6b4 = call i32 @function_a430(i32 %v0_d6b0, i32* %v5_d6b4, i32 4, i32 64)
  %v0_d6c0 = load i32, i32* @r5, align 4
  store i32 %v0_d6c0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d6cc = load i32, i32* @r4, align 4
  %v6_d6d4 = inttoptr i32 %v0_d6c0 to i32*
  %v7_d6d4 = call i32 @function_a430(i32 %v0_d6cc, i32* %v6_d6d4, i32 5, i32 0)
  %v1_d6e0 = urem i32 %v7_d6d4, 256
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_d6ec = load i32, i32* @r5, align 4
  store i32 %v0_d6ec, i32* %r1.global-to-local, align 4
  %v0_d6f0 = load i32, i32* @r4, align 4
  %v5_d6f8 = inttoptr i32 %v0_d6ec to i32*
  %v6_d6f8 = call i32 @function_a430(i32 %v0_d6f0, i32* %v5_d6f8, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_d700 = load i32, i32* @r5, align 4
  store i32 %v0_d700, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 %v6_d6f8, i32* %sb.global-to-local, align 4
  %v0_d710 = load i32, i32* @r4, align 4
  %v4_d714 = inttoptr i32 %v0_d700 to i32*
  %v5_d714 = call i32 @function_a430(i32 %v0_d710, i32* %v4_d714, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_d718 = load i32, i32* @r5, align 4
  store i32 %v0_d718, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_d714, i32* @sl, align 4
  %v0_d728 = load i32, i32* @r4, align 4
  %v4_d72c = inttoptr i32 %v0_d718 to i32*
  %v5_d72c = call i32 @function_a430(i32 %v0_d728, i32* %v4_d72c, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d738 = load i32, i32* @r5, align 4
  store i32 %v0_d738, i32* %r1.global-to-local, align 4
  store i32 %v5_d72c, i32* @r6, align 4
  %v0_d740 = load i32, i32* @r4, align 4
  %v4_d744 = inttoptr i32 %v0_d738 to i32*
  %v5_d744 = call i32 @function_a430(i32 %v0_d740, i32* %v4_d744, i32 1, i32 1)
  %v2_d750 = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_d750, i32* %r3.global-to-local, align 4
  %v1_d754 = urem i32 %v5_d744, 256
  %v0_d758 = load i32, i32* @r5, align 4
  store i32 %v0_d758, i32* %r1.global-to-local, align 4
  %v0_d760 = load i32, i32* @r4, align 4
  %v5_d768 = inttoptr i32 %v0_d758 to i32*
  %v6_d768 = call i32 @function_a430(i32 %v0_d760, i32* %v5_d768, i32 25, i32 %v2_d750)
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_d77c = call i32 @function_1561c(i32 2, i32 3, i32 17)
  store i32 %v3_d77c, i32* @r0, align 4
  %v7_d780 = icmp eq i32 %v3_d77c, -1
  store i1 %v7_d780, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d77c, i32* @fp, align 4
  br i1 %v7_d780, label %dec_label_pc_dadc, label %dec_label_pc_d78c

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d644
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d794 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d794, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_d7a8 = call i32 @function_155ac(i32 %v3_d77c, i32 0, i32 3, i32 %v6_d794, i32 ptrtoint (i32* @0 to i32))
  %v7_d7ac = icmp eq i32 %v5_d7a8, -1
  store i1 %v7_d7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d7ac, label %dec_label_pc_dad4, label %dec_label_pc_d7b4

dec_label_pc_d7b4:                                ; preds = %dec_label_pc_d78c
  %v0_d7b4 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_d7c0 = urem i32 %v0_d7b4, 65536
  %v3_d7c4 = icmp ugt i32 %v3_d7c0, 1459
  %v9_d7c4 = icmp eq i32 %v3_d7c0, 1460
  store i1 %v9_d7c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d7c4, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_d7b4
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_d7b4, %bb
  %v0_d7cc = phi i32 [ %v3_d7c0, %dec_label_pc_d7b4 ], [ 1460, %bb ]
  %v0_d7d0 = load i32, i32* %sb.global-to-local, align 4
  %v3_d7d8 = urem i32 %v0_d7d0, 65536
  store i32 %v3_d7d8, i32* %r3.global-to-local, align 4
  %v0_d7dc = load i32, i32* @r7, align 4
  %v2_d7dc = icmp eq i32 %v0_d7dc, 0
  store i1 %v2_d7dc, i1* %cpsr_z.global-to-local, align 1
  %v3_d7e0 = mul i32 %v7_d69c, 65536
  store i32 %v3_d7e0, i32* %r1.global-to-local, align 4
  %v0_d7e8 = load i32, i32* @sl, align 4
  br i1 %v2_d7dc, label %bb41, label %bb42

bb41:                                             ; preds = %bb40
  store i32 %v0_d7cc, i32* %r3.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %bb40, %bb41
  %v1_d80c = phi i32 [ %v3_d7d8, %bb40 ], [ %v0_d7cc, %bb41 ]
  %v3_d7f4 = urem i32 %v7_d69c, 65536
  store i32 %v3_d7f4, i32* %r1.global-to-local, align 4
  %v3_d7f8 = urem i32 %v0_d7e8, 65536
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d7dc, label %.thread, label %dec_label_pc_d814

.thread:                                          ; preds = %bb42
  %v2_d808 = add nsw i32 %v1_d80c, 28
  store i32 %v2_d808, i32* @sb, align 4
  %v2_d80c = add nsw i32 %v1_d80c, 8
  store i32 %v2_d80c, i32* @sl, align 4
  br label %dec_label_pc_da14.preheader

dec_label_pc_d814:                                ; preds = %bb42
  %v1_d818 = add nuw nsw i32 %v0_d7cc, 8
  store i32 %v1_d818, i32* @sl, align 4
  %v1_d81c = add nuw nsw i32 %v0_d7cc, 28
  store i32 %v1_d81c, i32* @sb, align 4
  %v3_d828 = urem i32 %v1_d81c, 65536
  store i32 %v3_d828, i32* %r3.global-to-local, align 4
  %v3_d82c = urem i32 %v1_d818, 65536
  store i32 %v3_d82c, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v2_d900 = icmp eq i32 %v1_d6e0, 0
  %sext = mul i32 %v6_d6b4, 16777216
  %v3_d8fc = sdiv i32 %sext, 16777216
  br label %dec_label_pc_d89c

dec_label_pc_d83c:                                ; preds = %dec_label_pc_d89c, %dec_label_pc_d914
  %v2_d840 = phi i32 [ %v0_d90c, %dec_label_pc_d89c ], [ %v2_d840.pre, %dec_label_pc_d914 ]
  %v3_d840 = add i32 %v2_d840, 9
  %v4_d840 = inttoptr i32 %v3_d840 to i8*
  store i8 17, i8* %v4_d840, align 1
  %v3_d844 = load i32, i32* %stack_var_-44, align 4
  %v5_d84c = mul i32 %v3_d844, 24
  store i32 %v5_d84c, i32* %r3.global-to-local, align 4
  %v1_d854 = load i32, i32* %r4.global-to-local, align 4
  %v2_d854 = add i32 %v1_d854, 12
  %v3_d854 = inttoptr i32 %v2_d854 to i32*
  store i32 %v6_d768, i32* %v3_d854, align 4
  %v0_d858 = load i32, i32* %r3.global-to-local, align 4
  %v1_d858 = load i32, i32* @r8, align 4
  %v2_d858 = add i32 %v1_d858, %v0_d858
  store i32 %v2_d858, i32* %r3.global-to-local, align 4
  %v1_d85c = add i32 %v2_d858, 16
  %v2_d85c = inttoptr i32 %v1_d85c to i32*
  %v3_d85c = load i32, i32* %v2_d85c, align 4
  %v1_d864 = load i32, i32* %r4.global-to-local, align 4
  %v2_d864 = add i32 %v1_d864, 16
  %v3_d864 = inttoptr i32 %v2_d864 to i32*
  store i32 %v3_d85c, i32* %v3_d864, align 4
  %v1_d868 = call i32 @function_15314(i32 %v3_d7d8)
  %v2_d868 = trunc i32 %v1_d868 to i16
  %v3_d86c = load i32, i32* %r4.global-to-local, align 4
  %v4_d86c = add i32 %v3_d86c, 20
  %v5_d86c = inttoptr i32 %v4_d86c to i16*
  store i16 %v2_d868, i16* %v5_d86c, align 2
  %v1_d874 = call i32 @function_15314(i32 %v3_d7f8)
  %v2_d874 = trunc i32 %v1_d874 to i16
  %v3_d878 = load i32, i32* @r5, align 4
  %v4_d878 = add i32 %v3_d878, 2
  %v5_d878 = inttoptr i32 %v4_d878 to i16*
  store i16 %v2_d874, i16* %v5_d878, align 2
  %v0_d87c = load i32, i32* @r6, align 4
  %v1_d880 = call i32 @function_15314(i32 %v0_d87c)
  %v2_d880 = trunc i32 %v1_d880 to i16
  %v3_d884 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d884, i32* %r3.global-to-local, align 4
  %v1_d888 = add i32 %v3_d884, 1
  store i32 %v1_d888, i32* @r4, align 4
  %v1_d88c = load i32, i32* @r7, align 4
  %v9_d88c = icmp eq i32 %v1_d888, %v1_d88c
  store i1 %v9_d88c, i1* %cpsr_z.global-to-local, align 1
  %v3_d890 = load i32, i32* @r5, align 4
  %v4_d890 = add i32 %v3_d890, 4
  %v5_d890 = inttoptr i32 %v4_d890 to i16*
  store i16 %v2_d880, i16* %v5_d890, align 2
  %v0_d894 = load i32, i32* @r4, align 4
  store i32 %v0_d894, i32* %stack_var_-44, align 4
  %v6_d898 = icmp slt i32 %v1_d888, %v1_d88c
  br i1 %v6_d898, label %dec_label_pc_d89c, label %dec_label_pc_da14.preheader.loopexit

dec_label_pc_da14.preheader.loopexit:             ; preds = %dec_label_pc_d83c
  %v0_da18.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_da14.preheader

dec_label_pc_da14.preheader:                      ; preds = %.thread, %dec_label_pc_da14.preheader.loopexit
  %v0_da18.pre = phi i32 [ %v0_da18.pre.pre, %dec_label_pc_da14.preheader.loopexit ], [ 0, %.thread ]
  %v3_da78 = icmp eq i32 %v6_d768, -1
  %v8_da78 = icmp eq i32 %v6_d768, -1
  %v9_da94 = icmp eq i32 %v3_d7f4, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  %v2_d988 = icmp eq i32 %v1_d754, 0
  br label %dec_label_pc_da14

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d83c, %dec_label_pc_d814
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d8a8 = call i32 @function_13cd4(i32 1510, i32 1)
  store i32 %v2_d660, i32* %r1.global-to-local, align 4
  %v3_d8b0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d8b0, i32* %r3.global-to-local, align 4
  %v2_d8b4 = load i32, i32* @r4, align 4
  %v5_d8b4 = mul i32 %v2_d8b4, 4
  %v6_d8b4 = add i32 %v5_d8b4, %v2_d660
  %v7_d8b4 = inttoptr i32 %v6_d8b4 to i32*
  store i32 %v2_d8a8, i32* %v7_d8b4, align 4
  %v0_d8b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_d8b8 = load i32, i32* %r3.global-to-local, align 4
  %v4_d8b8 = mul i32 %v1_d8b8, 4
  %v5_d8b8 = add i32 %v4_d8b8, %v0_d8b8
  %v6_d8b8 = inttoptr i32 %v5_d8b8 to i32*
  %v7_d8b8 = load i32, i32* %v6_d8b8, align 4
  store i32 %v7_d8b8, i32* %r4.global-to-local, align 4
  %v1_d8bc = inttoptr i32 %v7_d8b8 to i8*
  %v2_d8bc = load i8, i8* %v1_d8bc, align 1
  %tmp = urem i8 %v2_d8bc, 16
  %v1_d8c4 = or i8 %tmp, 64
  store i8 %v1_d8c4, i8* %v1_d8bc, align 1
  %v0_d8cc = load i32, i32* %r4.global-to-local, align 4
  %v1_d8cc = inttoptr i32 %v0_d8cc to i8*
  %v2_d8cc = load i8, i8* %v1_d8cc, align 1
  %v3_d8cc = zext i8 %v2_d8cc to i32
  %v1_d8d0 = and i32 %v3_d8cc, 240
  %v1_d8d4 = or i32 %v1_d8d0, 5
  store i32 %v1_d8d4, i32* %r3.global-to-local, align 4
  %v1_d8d8 = trunc i32 %v1_d8d4 to i8
  store i8 %v1_d8d8, i8* %v1_d8cc, align 1
  %v2_d8e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_d8e0 = add i32 %v2_d8e0, 1
  %v4_d8e0 = inttoptr i32 %v3_d8e0 to i8*
  store i8 %v5_d698, i8* %v4_d8e0, align 1
  %v1_d8e8 = call i32 @function_15314(i32 %v3_d828)
  %v2_d8e8 = trunc i32 %v1_d8e8 to i16
  %v3_d8ec = load i32, i32* %r4.global-to-local, align 4
  %v4_d8ec = add i32 %v3_d8ec, 2
  %v5_d8ec = inttoptr i32 %v4_d8ec to i16*
  store i16 %v2_d8e8, i16* %v5_d8ec, align 2
  %v1_d8f4 = call i32 @function_15314(i32 %v3_d7f4)
  %v2_d8f4 = trunc i32 %v1_d8f4 to i16
  store i32 %v3_d8fc, i32* %r1.global-to-local, align 4
  store i32 %v1_d6e0, i32* %r3.global-to-local, align 4
  store i1 %v2_d900, i1* %cpsr_z.global-to-local, align 1
  %v3_d904 = load i32, i32* %r4.global-to-local, align 4
  %v4_d904 = add i32 %v3_d904, 4
  %v5_d904 = inttoptr i32 %v4_d904 to i16*
  store i16 %v2_d8f4, i16* %v5_d904, align 2
  %v0_d908 = load i32, i32* %r1.global-to-local, align 4
  %v1_d908 = trunc i32 %v0_d908 to i8
  %v2_d908 = load i32, i32* %r4.global-to-local, align 4
  %v3_d908 = add i32 %v2_d908, 8
  %v4_d908 = inttoptr i32 %v3_d908 to i8*
  store i8 %v1_d908, i8* %v4_d908, align 1
  %v0_d90c = load i32, i32* %r4.global-to-local, align 4
  %v1_d90c = add i32 %v0_d90c, 20
  store i32 %v1_d90c, i32* @r5, align 4
  %v0_d910 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d910, label %dec_label_pc_d83c, label %dec_label_pc_d914

dec_label_pc_d914:                                ; preds = %dec_label_pc_d89c
  %v1_d918 = call i32 @function_15314(i32 16384)
  %v2_d918 = trunc i32 %v1_d918 to i16
  %v3_d91c = load i32, i32* %r4.global-to-local, align 4
  %v4_d91c = add i32 %v3_d91c, 6
  %v5_d91c = inttoptr i32 %v4_d91c to i16*
  store i16 %v2_d918, i16* %v5_d91c, align 2
  %v2_d840.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d83c

dec_label_pc_d924:                                ; preds = %dec_label_pc_da14
  br label %dec_label_pc_d928

dec_label_pc_d928:                                ; preds = %dec_label_pc_d990, %dec_label_pc_d924
  %v1_d93c = phi i32 [ %v1_da04, %dec_label_pc_d990 ], [ 0, %dec_label_pc_d924 ]
  %v5_d92c = mul i32 %v1_d93c, 24
  %v1_d930 = load i32, i32* @r8, align 4
  %v2_d930 = add i32 %v1_d930, %v5_d92c
  store i32 %v2_d930, i32* %r3.global-to-local, align 4
  store i32 %v2_d660, i32* %r1.global-to-local, align 4
  %v1_d938 = add i32 %v2_d930, 20
  %v2_d938 = inttoptr i32 %v1_d938 to i8*
  %v3_d938 = load i8, i8* %v2_d938, align 1
  %v4_d93c = mul i32 %v1_d93c, 4
  %v5_d93c = add i32 %v4_d93c, %v2_d660
  %v6_d93c = inttoptr i32 %v5_d93c to i32*
  %v7_d93c = load i32, i32* %v6_d93c, align 4
  store i32 %v7_d93c, i32* @r5, align 4
  %v7_d940 = icmp eq i8 %v3_d938, 31
  store i1 %v7_d940, i1* %cpsr_z.global-to-local, align 1
  %v1_d944 = add i32 %v7_d93c, 20
  store i32 %v1_d944, i32* @r6, align 4
  %tmp43 = icmp ult i8 %v3_d938, 32
  br i1 %tmp43, label %dec_label_pc_da48, label %dec_label_pc_d94c

dec_label_pc_d94c:                                ; preds = %dec_label_pc_d928
  store i1 %v8_da78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_da78, label %dec_label_pc_da84, label %dec_label_pc_d958

dec_label_pc_d958:                                ; preds = %dec_label_pc_da48, %dec_label_pc_d94c
  store i32 %v3_d7f4, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_da94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_da94, label %dec_label_pc_daa0, label %dec_label_pc_d96c

dec_label_pc_d96c:                                ; preds = %dec_label_pc_da84.dec_label_pc_d96c_crit_edge, %dec_label_pc_d958
  %v1_d970 = phi i32 [ %v1_d970.pre, %dec_label_pc_da84.dec_label_pc_d96c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), %dec_label_pc_d958 ]
  store i32 %v3_d7d8, i32* %r1.global-to-local, align 4
  %v9_d970 = icmp eq i32 %v3_d7d8, %v1_d970
  store i1 %v9_d970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d970, label %dec_label_pc_dab4, label %dec_label_pc_d978

dec_label_pc_d978:                                ; preds = %dec_label_pc_daa0.dec_label_pc_d978_crit_edge, %dec_label_pc_d96c
  %v1_d97c = phi i32 [ %v1_d97c.pre, %dec_label_pc_daa0.dec_label_pc_d978_crit_edge ], [ %v1_d970, %dec_label_pc_d96c ]
  %v9_d97c = icmp eq i32 %v3_d7f8, %v1_d97c
  store i1 %v9_d97c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d97c, label %dec_label_pc_dac8, label %dec_label_pc_d984

dec_label_pc_d984:                                ; preds = %dec_label_pc_dab4, %dec_label_pc_d978, %dec_label_pc_dac8
  store i32 %v1_d754, i32* %r3.global-to-local, align 4
  store i1 %v2_d988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d988, label %dec_label_pc_d990, label %dec_label_pc_da38

dec_label_pc_d990:                                ; preds = %dec_label_pc_d984, %dec_label_pc_da38
  %v2_d994 = load i32, i32* @r5, align 4
  %v3_d994 = add i32 %v2_d994, 10
  %v4_d994 = inttoptr i32 %v3_d994 to i16*
  store i16 0, i16* %v4_d994, align 2
  %v0_d998 = load i32, i32* @r5, align 4
  store i32 %v0_d998, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_d9a0 = call i32 @function_e5a4(i32 %v0_d998, i32 20)
  %v3_d9a0 = trunc i32 %v2_d9a0 to i16
  %v3_d9a4 = load i32, i32* @r5, align 4
  %v4_d9a4 = add i32 %v3_d9a4, 10
  %v5_d9a4 = inttoptr i32 %v4_d9a4 to i16*
  store i16 %v3_d9a0, i16* %v5_d9a4, align 2
  %v2_d9ac = load i32, i32* @r6, align 4
  %v3_d9ac = add i32 %v2_d9ac, 6
  %v4_d9ac = inttoptr i32 %v3_d9ac to i16*
  store i16 0, i16* %v4_d9ac, align 2
  %v0_d9b0 = load i32, i32* @r6, align 4
  store i32 %v0_d9b0, i32* @r1, align 4
  %v1_d9b4 = add i32 %v0_d9b0, 4
  %v2_d9b4 = inttoptr i32 %v1_d9b4 to i16*
  %v3_d9b4 = load i16, i16* %v2_d9b4, align 2
  %v4_d9b4 = zext i16 %v3_d9b4 to i32
  %v0_d9b8 = load i32, i32* @sl, align 4
  store i32 %v0_d9b8, i32* %r3.global-to-local, align 4
  %v0_d9bc = load i32, i32* @r5, align 4
  %v4_d9c0 = call i32 @function_e5f4(i32 %v0_d9bc, i32 %v0_d9b0, i32 %v4_d9b4, i32 %v0_d9b8)
  %v5_d9c0 = trunc i32 %v4_d9c0 to i16
  %v3_d9c4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d9c4, i32* %r3.global-to-local, align 4
  %v3_d9c8 = mul i32 %v3_d9c4, 32
  store i32 %v3_d9c8, i32* %lr.global-to-local, align 4
  %v3_d9cc = load i32, i32* @r6, align 4
  %v4_d9cc = add i32 %v3_d9cc, 6
  %v5_d9cc = inttoptr i32 %v4_d9cc to i16*
  store i16 %v5_d9c0, i16* %v5_d9cc, align 2
  %v0_d9d0 = load i32, i32* %lr.global-to-local, align 4
  %v1_d9d0 = load i32, i32* %r3.global-to-local, align 4
  %tmp44 = mul i32 %v1_d9d0, -8
  %v5_d9d0 = add i32 %v0_d9d0, %tmp44
  store i32 %v5_d9d0, i32* %lr.global-to-local, align 4
  %v0_d9d4 = load i32, i32* @r6, align 4
  %v1_d9d4 = add i32 %v0_d9d4, 2
  %v2_d9d4 = inttoptr i32 %v1_d9d4 to i16*
  %v3_d9d4 = load i16, i16* %v2_d9d4, align 2
  %v1_d9d8 = load i32, i32* @r8, align 4
  %v2_d9d8 = add i32 %v1_d9d8, %v5_d9d0
  store i32 %v2_d9d8, i32* @lr, align 4
  %v3_d9dc = add i32 %v2_d9d8, 2
  %v4_d9dc = inttoptr i32 %v3_d9dc to i16*
  store i16 %v3_d9d4, i16* %v4_d9dc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d9e8 = load i32, i32* @r5, align 4
  store i32 %v0_d9e8, i32* @r1, align 4
  %v0_d9ec = load i32, i32* @fp, align 4
  store i32 %v0_d9ec, i32* @r0, align 4
  %v0_d9f0 = load i32, i32* @sb, align 4
  store i32 %v0_d9f0, i32* @r2, align 4
  %v0_d9fc = call i32 @function_15560()
  %v3_da00 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_da00, i32* %r3.global-to-local, align 4
  %v1_da04 = add i32 %v3_da00, 1
  %v1_da08 = load i32, i32* @r7, align 4
  %v9_da08 = icmp eq i32 %v1_da04, %v1_da08
  store i1 %v9_da08, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_da04, i32* %stack_var_-44, align 4
  %v5_da10 = icmp slt i32 %v1_da04, %v1_da08
  br i1 %v5_da10, label %dec_label_pc_d928, label %dec_label_pc_da14

dec_label_pc_da14:                                ; preds = %dec_label_pc_da24, %dec_label_pc_d990, %dec_label_pc_da14.preheader
  %v0_da28 = phi i32 [ %v0_da18.pre, %dec_label_pc_da14.preheader ], [ 0, %dec_label_pc_da24 ], [ %v1_da08, %dec_label_pc_d990 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_da18 = icmp eq i32 %v0_da28, 0
  store i1 %v2_da18, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_da18, label %dec_label_pc_da24, label %dec_label_pc_d924

dec_label_pc_da24:                                ; preds = %dec_label_pc_da14
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_da14

dec_label_pc_da38:                                ; preds = %dec_label_pc_d984
  %v0_da38 = load i32, i32* @r5, align 4
  %v1_da38 = add i32 %v0_da38, 28
  store i32 %v0_d7cc, i32* %r1.global-to-local, align 4
  %v2_da40 = inttoptr i32 %v1_da38 to i16*
  %v3_da40 = call i32 @function_10238(i16* %v2_da40, i32 %v0_d7cc)
  br label %dec_label_pc_d990

dec_label_pc_da48:                                ; preds = %dec_label_pc_d928
  %v1_da48 = add i32 %v2_d930, 16
  %v2_da48 = inttoptr i32 %v1_da48 to i32*
  %v3_da48 = load i32, i32* %v2_da48, align 4
  %v1_da4c = call i32 @function_15498(i32 %v3_da48)
  store i32 %v1_da4c, i32* %r4.global-to-local, align 4
  %v0_da54 = call i32 @function_10038()
  %v3_da58 = load i32, i32* %stack_var_-44, align 4
  %v5_da60 = mul i32 %v3_da58, 24
  %v1_da64 = load i32, i32* @r8, align 4
  %v2_da64 = add i32 %v1_da64, %v5_da60
  store i32 %v2_da64, i32* %r3.global-to-local, align 4
  %v1_da68 = add i32 %v2_da64, 20
  %v2_da68 = inttoptr i32 %v1_da68 to i8*
  %v3_da68 = load i8, i8* %v2_da68, align 1
  %v4_da68 = zext i8 %v3_da68 to i32
  %v0_da6c = load i32, i32* %r4.global-to-local, align 4
  %v7_da6c = lshr i32 %v0_da54, %v4_da68
  %v8_da6c = add i32 %v7_da6c, %v0_da6c
  %v1_da70 = call i32 @function_152f0(i32 %v8_da6c)
  store i1 %v8_da78, i1* %cpsr_z.global-to-local, align 1
  %v1_da7c = load i32, i32* @r5, align 4
  %v2_da7c = add i32 %v1_da7c, 16
  %v3_da7c = inttoptr i32 %v2_da7c to i32*
  store i32 %v1_da70, i32* %v3_da7c, align 4
  br i1 %v3_da78, label %dec_label_pc_da84, label %dec_label_pc_d958

dec_label_pc_da84:                                ; preds = %dec_label_pc_da48, %dec_label_pc_d94c
  %v0_da84 = call i32 @function_10038()
  store i32 %v3_d7f4, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_da94, i1* %cpsr_z.global-to-local, align 1
  %v1_da98 = load i32, i32* @r5, align 4
  %v2_da98 = add i32 %v1_da98, 12
  %v3_da98 = inttoptr i32 %v2_da98 to i32*
  store i32 %v0_da84, i32* %v3_da98, align 4
  br i1 %v9_da94, label %dec_label_pc_daa0, label %dec_label_pc_da84.dec_label_pc_d96c_crit_edge

dec_label_pc_da84.dec_label_pc_d96c_crit_edge:    ; preds = %dec_label_pc_da84
  %v1_d970.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d96c

dec_label_pc_daa0:                                ; preds = %dec_label_pc_da84, %dec_label_pc_d958
  %v0_daa0 = call i32 @function_10038()
  %v1_daa0 = trunc i32 %v0_daa0 to i16
  store i32 %v3_d7d8, i32* %r1.global-to-local, align 4
  %v1_daa8 = load i32, i32* @r4, align 4
  %v9_daa8 = icmp eq i32 %v3_d7d8, %v1_daa8
  store i1 %v9_daa8, i1* %cpsr_z.global-to-local, align 1
  %v3_daac = load i32, i32* @r5, align 4
  %v4_daac = add i32 %v3_daac, 4
  %v5_daac = inttoptr i32 %v4_daac to i16*
  store i16 %v1_daa0, i16* %v5_daac, align 2
  br i1 %v9_daa8, label %dec_label_pc_dab4, label %dec_label_pc_daa0.dec_label_pc_d978_crit_edge

dec_label_pc_daa0.dec_label_pc_d978_crit_edge:    ; preds = %dec_label_pc_daa0
  %v1_d97c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d978

dec_label_pc_dab4:                                ; preds = %dec_label_pc_daa0, %dec_label_pc_d96c
  %v0_dab4 = call i32 @function_10038()
  %v1_dab4 = trunc i32 %v0_dab4 to i16
  %v1_dabc = load i32, i32* @r4, align 4
  %v9_dabc = icmp eq i32 %v3_d7f8, %v1_dabc
  store i1 %v9_dabc, i1* %cpsr_z.global-to-local, align 1
  %v3_dac0 = load i32, i32* @r5, align 4
  %v4_dac0 = add i32 %v3_dac0, 20
  %v5_dac0 = inttoptr i32 %v4_dac0 to i16*
  store i16 %v1_dab4, i16* %v5_dac0, align 2
  br i1 %v9_dabc, label %dec_label_pc_dac8, label %dec_label_pc_d984

dec_label_pc_dac8:                                ; preds = %dec_label_pc_dab4, %dec_label_pc_d978
  %v0_dac8 = call i32 @function_10038()
  %v1_dac8 = trunc i32 %v0_dac8 to i16
  %v3_dacc = load i32, i32* @r6, align 4
  %v4_dacc = add i32 %v3_dacc, 2
  %v5_dacc = inttoptr i32 %v4_dacc to i16*
  store i16 %v1_dac8, i16* %v5_dacc, align 2
  br label %dec_label_pc_d984

dec_label_pc_dad4:                                ; preds = %dec_label_pc_d78c
  %v0_dad4 = load i32, i32* @fp, align 4
  store i32 %v0_dad4, i32* @r0, align 4
  %v1_dad8 = call i32 @function_165e8(i32 %v0_dad4)
  br label %dec_label_pc_dadc

dec_label_pc_dadc:                                ; preds = %dec_label_pc_d644, %dec_label_pc_dad4
  %v1_dae4 = phi i32 [ %v3_d77c, %dec_label_pc_d644 ], [ %v1_dad8, %dec_label_pc_dad4 ]
  store i32 %v3_d644, i32* %r4.global-to-local, align 4
  store i32 %v18_d644, i32* %sb.global-to-local, align 4
  store i32 %v27_d644, i32* %lr.global-to-local, align 4
  ret i32 %v1_dae4

; uselistorder directives
  uselistorder i32 %v1_da04, { 2, 0, 3, 1 }
  uselistorder i32 %v5_d9d0, { 1, 0 }
  uselistorder i32 %v0_d90c, { 1, 0 }
  uselistorder i1 %v9_da94, { 2, 3, 1, 0 }
  uselistorder i32 %v3_d7f8, { 2, 1, 0 }
  uselistorder i32 %v3_d7f4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_d7d8, { 5, 4, 3, 2, 1, 6, 0 }
  uselistorder i32 %v0_d7cc, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v3_d7c0, { 2, 0, 1 }
  uselistorder i1 %v7_d7ac, { 1, 0 }
  uselistorder i1 %v7_d780, { 1, 0 }
  uselistorder i32 %v3_d77c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_d768, { 0, 2, 1 }
  uselistorder i32 %v2_d660, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 19, 20, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 18, 17, 19, 20, 22, 21, 24, 23, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 14, 15, 13, 16, 17, 18, 19 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_dadc, { 1, 0 }
  uselistorder label %dec_label_pc_d990, { 1, 0 }
  uselistorder label %dec_label_pc_d984, { 2, 0, 1 }
  uselistorder label %dec_label_pc_da14.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d83c, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
}

define i32 @function_daec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_daec:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_daec = load i32, i32* @r4, align 4
  %v27_daec = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_db08 = call i32 @function_13cd4(i32 %arg1, i32 4)
  %v0_db0c = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_db08, i32* @fp, align 4
  %v0_db1c = load i32, i32* @r4, align 4
  %v4_db20 = inttoptr i32 %v0_db0c to i32*
  %v5_db20 = call i32 @function_a430(i32 %v0_db1c, i32* %v4_db20, i32 2, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_db38 = load i32, i32* @r4, align 4
  %v0_db3c = load i32, i32* @r5, align 4
  %v5_db40 = trunc i32 %v5_db20 to i8
  %v6_db44 = inttoptr i32 %v0_db3c to i32*
  %v7_db44 = call i32 @function_a430(i32 %v0_db38, i32* %v6_db44, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_db48 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_db54 = load i32, i32* @r4, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_db5c = inttoptr i32 %v0_db48 to i32*
  %v6_db5c = call i32 @function_a430(i32 %v0_db54, i32* %v5_db5c, i32 4, i32 64)
  %v0_db68 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_db74 = load i32, i32* @r4, align 4
  %v6_db7c = inttoptr i32 %v0_db68 to i32*
  %v7_db7c = call i32 @function_a430(i32 %v0_db74, i32* %v6_db7c, i32 5, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_db90 = load i32, i32* @r4, align 4
  %v0_db94 = load i32, i32* @r5, align 4
  %v1_db98 = urem i32 %v7_db7c, 256
  store i32 %v1_db98, i32* @r7, align 4
  %v4_db9c = inttoptr i32 %v0_db94 to i32*
  %v5_db9c = call i32 @function_a430(i32 %v0_db90, i32* %v4_db9c, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_dbac = load i32, i32* @r5, align 4
  %v0_dbb4 = load i32, i32* @r4, align 4
  %v5_dbb8 = inttoptr i32 %v0_dbac to i32*
  %v6_dbb8 = call i32 @function_a430(i32 %v0_dbb4, i32* %v5_dbb8, i32 7, i32 27015)
  store i32 %v6_dbb8, i32* @r4, align 4
  %v1_dbc4 = call i32 @function_1255c(i32 29)
  %v3_dbd0 = call i32 @function_12498(i32 29, i32* nonnull %stack_var_-48)
  store i32 %v3_dbd0, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_dbe4 = call i32 @function_1561c(i32 2, i32 3, i32 17)
  store i32 %v3_dbe4, i32* @r0, align 4
  %v7_dbe8 = icmp eq i32 %v3_dbe4, -1
  store i1 %v7_dbe8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_dbe4, i32* @sb, align 4
  br i1 %v7_dbe8, label %dec_label_pc_dee8, label %dec_label_pc_dbf4

dec_label_pc_dbf4:                                ; preds = %dec_label_pc_daec
  store i32 1, i32* %stack_var_-44, align 4
  %v6_dbfc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_dbfc, i32* %r3.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_dc10 = call i32 @function_155ac(i32 %v3_dbe4, i32 0, i32 3, i32 %v6_dbfc, i32 ptrtoint (i32* @0 to i32))
  %v7_dc14 = icmp eq i32 %v5_dc10, -1
  store i1 %v7_dc14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_dc14, label %dec_label_pc_dee0, label %dec_label_pc_dc1c

dec_label_pc_dc1c:                                ; preds = %dec_label_pc_dbf4
  %v0_dc2c = load i32, i32* @r4, align 4
  %v3_dc34 = urem i32 %v7_db44, 65536
  store i32 %v3_dc34, i32* %r3.global-to-local, align 4
  %v3_dc38 = urem i32 %v5_db9c, 65536
  store i32 %v3_dc38, i32* %r2.global-to-local, align 4
  %v3_dc3c = urem i32 %v0_dc2c, 65536
  %v0_dc40 = load i32, i32* @r8, align 4
  %v2_dc40 = icmp eq i32 %v0_dc40, 0
  store i1 %v2_dc40, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_dc40, label %dec_label_pc_de4c.preheader, label %dec_label_pc_dc58

dec_label_pc_de4c.preheader:                      ; preds = %dec_label_pc_dc60, %dec_label_pc_dc1c
  %v0_de60.ph = phi i32 [ 0, %dec_label_pc_dc1c ], [ %v1_dcdc, %dec_label_pc_dc60 ]
  %v9_dda0 = icmp eq i32 %v3_dc34, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  br label %dec_label_pc_de4c

dec_label_pc_dc58:                                ; preds = %dec_label_pc_dc1c
  store i32 0, i32* @r4, align 4
  %v4_dd20 = sext i8 %v5_db40 to i32
  %sext = mul i32 %v6_db5c, 16777216
  %v4_dd48 = sdiv i32 %sext, 16777216
  br label %dec_label_pc_dce8

dec_label_pc_dc60:                                ; preds = %dec_label_pc_dce8, %dec_label_pc_dd60
  %v2_dc64 = phi i32 [ %v0_dd58, %dec_label_pc_dce8 ], [ %v2_dc64.pre, %dec_label_pc_dd60 ]
  %v3_dc64 = add i32 %v2_dc64, 9
  %v4_dc64 = inttoptr i32 %v3_dc64 to i8*
  store i8 17, i8* %v4_dc64, align 1
  %v3_dc6c = load i32, i32* %stack_var_-44, align 4
  %v2_dc70 = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_dc70, i32* %r2.global-to-local, align 4
  %v5_dc78 = mul i32 %v3_dc6c, 24
  store i32 %v5_dc78, i32* %r3.global-to-local, align 4
  %v1_dc7c = load i32, i32* %r4.global-to-local, align 4
  %v2_dc7c = add i32 %v1_dc7c, 12
  %v3_dc7c = inttoptr i32 %v2_dc7c to i32*
  store i32 %v2_dc70, i32* %v3_dc7c, align 4
  %v0_dc80 = load i32, i32* %r3.global-to-local, align 4
  %v1_dc80 = load i32, i32* @sl, align 4
  %v2_dc80 = add i32 %v1_dc80, %v0_dc80
  store i32 %v2_dc80, i32* %r3.global-to-local, align 4
  %v1_dc84 = add i32 %v2_dc80, 16
  %v2_dc84 = inttoptr i32 %v1_dc84 to i32*
  %v3_dc84 = load i32, i32* %v2_dc84, align 4
  store i32 %v3_dc84, i32* %r2.global-to-local, align 4
  %v1_dc8c = load i32, i32* %r4.global-to-local, align 4
  %v2_dc8c = add i32 %v1_dc8c, 16
  %v3_dc8c = inttoptr i32 %v2_dc8c to i32*
  store i32 %v3_dc84, i32* %v3_dc8c, align 4
  %v1_dc90 = call i32 @function_15314(i32 %v3_dc38)
  %v2_dc90 = trunc i32 %v1_dc90 to i16
  %v3_dc94 = load i32, i32* %r4.global-to-local, align 4
  %v4_dc94 = add i32 %v3_dc94, 20
  %v5_dc94 = inttoptr i32 %v4_dc94 to i16*
  store i16 %v2_dc90, i16* %v5_dc94, align 2
  %v1_dc9c = call i32 @function_15314(i32 %v3_dc3c)
  %v2_dc9c = trunc i32 %v1_dc9c to i16
  %v3_dca0 = load i32, i32* %stack_var_-48, align 4
  %v1_dca4 = mul i32 %v3_dca0, 65536
  %v3_dca8 = add i32 %v1_dca4, 786432
  store i32 %v3_dca8, i32* %r3.global-to-local, align 4
  %v3_dcac = load i32, i32* @r5, align 4
  %v4_dcac = add i32 %v3_dcac, 2
  %v5_dcac = inttoptr i32 %v4_dcac to i16*
  store i16 %v2_dc9c, i16* %v5_dcac, align 2
  %v0_dcb0 = load i32, i32* %r3.global-to-local, align 4
  %v3_dcb0 = udiv i32 %v0_dcb0, 65536
  %v1_dcb4 = call i32 @function_15314(i32 %v3_dcb0)
  %v2_dcb4 = trunc i32 %v1_dcb4 to i16
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_dcbc = load i32, i32* %r4.global-to-local, align 4
  %v2_dcbc = add i32 %v1_dcbc, 28
  %v3_dcbc = inttoptr i32 %v2_dcbc to i32*
  store i32 -1, i32* %v3_dcbc, align 4
  %v3_dcc0 = load i32, i32* @r5, align 4
  %v4_dcc0 = add i32 %v3_dcc0, 4
  %v5_dcc0 = inttoptr i32 %v4_dcc0 to i16*
  store i16 %v2_dcb4, i16* %v5_dcc0, align 2
  %v0_dcc4 = load i32, i32* @r6, align 4
  %v0_dcc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_dcc8 = add i32 %v0_dcc8, 32
  %v3_dccc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_dccc, i32* %r2.global-to-local, align 4
  %v3_dcd0 = call i32 @function_12e5c(i32 %v1_dcc8, i32 %v0_dcc4, i32 %v3_dccc)
  %v3_dcd4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dcd4, i32* %r3.global-to-local, align 4
  %v1_dcd8 = add i32 %v3_dcd4, 1
  store i32 %v1_dcd8, i32* @r4, align 4
  %v1_dcdc = load i32, i32* @r8, align 4
  %v9_dcdc = icmp eq i32 %v1_dcd8, %v1_dcdc
  store i1 %v9_dcdc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dcd8, i32* %stack_var_-44, align 4
  %v6_dce4 = icmp slt i32 %v1_dcd8, %v1_dcdc
  br i1 %v6_dce4, label %dec_label_pc_dce8, label %dec_label_pc_de4c.preheader

dec_label_pc_dce8:                                ; preds = %dec_label_pc_dc60, %dec_label_pc_dc58
  %v2_dcf0 = call i32 @function_13cd4(i32 128, i32 1)
  %v3_dcf4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dcf4, i32* %r2.global-to-local, align 4
  %v1_dcf8 = load i32, i32* @fp, align 4
  %v2_dcf8 = load i32, i32* @r4, align 4
  %v5_dcf8 = mul i32 %v2_dcf8, 4
  %v6_dcf8 = add i32 %v5_dcf8, %v1_dcf8
  %v7_dcf8 = inttoptr i32 %v6_dcf8 to i32*
  store i32 %v2_dcf0, i32* %v7_dcf8, align 4
  %v0_dcfc = load i32, i32* @fp, align 4
  %v1_dcfc = load i32, i32* %r2.global-to-local, align 4
  %v4_dcfc = mul i32 %v1_dcfc, 4
  %v5_dcfc = add i32 %v4_dcfc, %v0_dcfc
  %v6_dcfc = inttoptr i32 %v5_dcfc to i32*
  %v7_dcfc = load i32, i32* %v6_dcfc, align 4
  store i32 %v7_dcfc, i32* %r4.global-to-local, align 4
  %v1_dd00 = inttoptr i32 %v7_dcfc to i8*
  %v2_dd00 = load i8, i8* %v1_dd00, align 1
  %tmp = urem i8 %v2_dd00, 16
  %v1_dd04 = zext i8 %tmp to i32
  %v1_dd08 = or i32 %v1_dd04, 64
  store i32 %v1_dd08, i32* %r3.global-to-local, align 4
  %v1_dd0c = trunc i32 %v1_dd08 to i8
  store i8 %v1_dd0c, i8* %v1_dd00, align 1
  %v0_dd10 = load i32, i32* %r4.global-to-local, align 4
  %v1_dd10 = inttoptr i32 %v0_dd10 to i8*
  %v2_dd10 = load i8, i8* %v1_dd10, align 1
  %v1_dd14 = and i8 %v2_dd10, -16
  %v1_dd18 = or i8 %v1_dd14, 5
  store i8 %v1_dd18, i8* %v1_dd10, align 1
  store i32 %v4_dd20, i32* %r2.global-to-local, align 4
  %v2_dd24 = load i32, i32* %r4.global-to-local, align 4
  %v3_dd24 = add i32 %v2_dd24, 1
  %v4_dd24 = inttoptr i32 %v3_dd24 to i8*
  store i8 %v5_db40, i8* %v4_dd24, align 1
  %v3_dd28 = load i32, i32* %stack_var_-48, align 4
  %v1_dd2c = add i32 %v3_dd28, 32
  %v3_dd34 = urem i32 %v1_dd2c, 65536
  %v1_dd38 = call i32 @function_15314(i32 %v3_dd34)
  %v2_dd38 = trunc i32 %v1_dd38 to i16
  %v3_dd3c = load i32, i32* %r4.global-to-local, align 4
  %v4_dd3c = add i32 %v3_dd3c, 2
  %v5_dd3c = inttoptr i32 %v4_dd3c to i16*
  store i16 %v2_dd38, i16* %v5_dd3c, align 2
  %v1_dd44 = call i32 @function_15314(i32 %v3_dc34)
  %v2_dd44 = trunc i32 %v1_dd44 to i16
  store i32 %v4_dd48, i32* %r3.global-to-local, align 4
  %v0_dd4c = load i32, i32* @r7, align 4
  %v2_dd4c = icmp eq i32 %v0_dd4c, 0
  store i1 %v2_dd4c, i1* %cpsr_z.global-to-local, align 1
  %v3_dd50 = load i32, i32* %r4.global-to-local, align 4
  %v4_dd50 = add i32 %v3_dd50, 4
  %v5_dd50 = inttoptr i32 %v4_dd50 to i16*
  store i16 %v2_dd44, i16* %v5_dd50, align 2
  %v0_dd54 = load i32, i32* %r3.global-to-local, align 4
  %v1_dd54 = trunc i32 %v0_dd54 to i8
  %v2_dd54 = load i32, i32* %r4.global-to-local, align 4
  %v3_dd54 = add i32 %v2_dd54, 8
  %v4_dd54 = inttoptr i32 %v3_dd54 to i8*
  store i8 %v1_dd54, i8* %v4_dd54, align 1
  %v0_dd58 = load i32, i32* %r4.global-to-local, align 4
  %v1_dd58 = add i32 %v0_dd58, 20
  store i32 %v1_dd58, i32* @r5, align 4
  %v0_dd5c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dd5c, label %dec_label_pc_dc60, label %dec_label_pc_dd60

dec_label_pc_dd60:                                ; preds = %dec_label_pc_dce8
  %v1_dd64 = call i32 @function_15314(i32 16384)
  %v2_dd64 = trunc i32 %v1_dd64 to i16
  %v3_dd68 = load i32, i32* %r4.global-to-local, align 4
  %v4_dd68 = add i32 %v3_dd68, 6
  %v5_dd68 = inttoptr i32 %v4_dd68 to i16*
  store i16 %v2_dd64, i16* %v5_dd68, align 2
  %v2_dc64.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_dc60

dec_label_pc_dd70:                                ; preds = %dec_label_pc_de4c
  br label %dec_label_pc_dd74

dec_label_pc_dd74:                                ; preds = %dec_label_pc_ddc0, %dec_label_pc_dd70
  %v1_dd84 = phi i32 [ %v1_de3c, %dec_label_pc_ddc0 ], [ 0, %dec_label_pc_dd70 ]
  %v5_dd78 = mul i32 %v1_dd84, 24
  %v1_dd7c = load i32, i32* @sl, align 4
  %v2_dd7c = add i32 %v1_dd7c, %v5_dd78
  store i32 %v2_dd7c, i32* %r3.global-to-local, align 4
  %v1_dd80 = add i32 %v2_dd7c, 20
  %v2_dd80 = inttoptr i32 %v1_dd80 to i8*
  %v3_dd80 = load i8, i8* %v2_dd80, align 1
  %v4_dd80 = zext i8 %v3_dd80 to i32
  store i32 %v4_dd80, i32* %r2.global-to-local, align 4
  %v0_dd84 = load i32, i32* @fp, align 4
  %v4_dd84 = mul i32 %v1_dd84, 4
  %v5_dd84 = add i32 %v0_dd84, %v4_dd84
  %v6_dd84 = inttoptr i32 %v5_dd84 to i32*
  %v7_dd84 = load i32, i32* %v6_dd84, align 4
  store i32 %v7_dd84, i32* @r5, align 4
  %v7_dd8c = icmp eq i8 %v3_dd80, 31
  store i1 %v7_dd8c, i1* %cpsr_z.global-to-local, align 1
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r7, align 4
  %v1_dd94 = add i32 %v7_dd84, 20
  store i32 %v1_dd94, i32* @r6, align 4
  %tmp33 = icmp ult i8 %v3_dd80, 32
  br i1 %tmp33, label %dec_label_pc_de70, label %dec_label_pc_dd9c

dec_label_pc_dd9c:                                ; preds = %dec_label_pc_dd74
  store i1 %v9_dda0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dda0, label %dec_label_pc_deac, label %dec_label_pc_dda8

dec_label_pc_dda8:                                ; preds = %dec_label_pc_de70.dec_label_pc_dda8_crit_edge, %dec_label_pc_dd9c
  %v1_ddac = phi i32 [ %v1_ddac.pre, %dec_label_pc_de70.dec_label_pc_dda8_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), %dec_label_pc_dd9c ]
  store i32 %v3_dc38, i32* %r2.global-to-local, align 4
  %v9_ddac = icmp eq i32 %v3_dc38, %v1_ddac
  store i1 %v9_ddac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ddac, label %dec_label_pc_dec0, label %dec_label_pc_ddb4

dec_label_pc_ddb4:                                ; preds = %dec_label_pc_deac.dec_label_pc_ddb4_crit_edge, %dec_label_pc_dda8
  %v1_ddb8 = phi i32 [ %v1_ddb8.pre, %dec_label_pc_deac.dec_label_pc_ddb4_crit_edge ], [ %v1_ddac, %dec_label_pc_dda8 ]
  store i32 %v3_dc3c, i32* %r3.global-to-local, align 4
  %v9_ddb8 = icmp eq i32 %v3_dc3c, %v1_ddb8
  store i1 %v9_ddb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ddb8, label %dec_label_pc_ded4, label %dec_label_pc_ddc0

dec_label_pc_ddc0:                                ; preds = %dec_label_pc_dec0, %dec_label_pc_ddb4, %dec_label_pc_ded4
  %v2_ddc4 = load i32, i32* @r5, align 4
  %v3_ddc4 = add i32 %v2_ddc4, 10
  %v4_ddc4 = inttoptr i32 %v3_ddc4 to i16*
  store i16 0, i16* %v4_ddc4, align 2
  %v0_ddc8 = load i32, i32* @r5, align 4
  store i32 %v0_ddc8, i32* @r0, align 4
  %v2_ddd0 = call i32 @function_e5a4(i32 %v0_ddc8, i32 20)
  %v3_ddd0 = trunc i32 %v2_ddd0 to i16
  %v3_ddd4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_ddd4, i32* %r3.global-to-local, align 4
  %v3_ddd8 = load i32, i32* @r5, align 4
  %v4_ddd8 = add i32 %v3_ddd8, 10
  %v5_ddd8 = inttoptr i32 %v4_ddd8 to i16*
  store i16 %v3_ddd0, i16* %v5_ddd8, align 2
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_dde0 = load i32, i32* @r6, align 4
  %v3_dde0 = add i32 %v2_dde0, 6
  %v4_dde0 = inttoptr i32 %v3_dde0 to i16*
  store i16 0, i16* %v4_dde0, align 2
  %v0_dde4 = load i32, i32* @r6, align 4
  store i32 %v0_dde4, i32* @r1, align 4
  %v1_dde8 = add i32 %v0_dde4, 4
  %v2_dde8 = inttoptr i32 %v1_dde8 to i16*
  %v3_dde8 = load i16, i16* %v2_dde8, align 2
  %v4_dde8 = zext i16 %v3_dde8 to i32
  store i32 %v4_dde8, i32* %r2.global-to-local, align 4
  %v0_ddec = load i32, i32* %r3.global-to-local, align 4
  %v1_ddec = add i32 %v0_ddec, 12
  store i32 %v1_ddec, i32* %r3.global-to-local, align 4
  %v0_ddf0 = load i32, i32* @r5, align 4
  %v4_ddf4 = call i32 @function_e5f4(i32 %v0_ddf0, i32 %v0_dde4, i32 %v4_dde8, i32 %v1_ddec)
  %v5_ddf4 = trunc i32 %v4_ddf4 to i16
  %v3_ddf8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ddf8, i32* %r3.global-to-local, align 4
  %v3_ddfc = mul i32 %v3_ddf8, 32
  store i32 %v3_ddfc, i32* %lr.global-to-local, align 4
  %v3_de00 = load i32, i32* @r6, align 4
  %v4_de00 = add i32 %v3_de00, 6
  %v5_de00 = inttoptr i32 %v4_de00 to i16*
  store i16 %v5_ddf4, i16* %v5_de00, align 2
  %v0_de04 = load i32, i32* %lr.global-to-local, align 4
  %v1_de04 = load i32, i32* %r3.global-to-local, align 4
  %tmp34 = mul i32 %v1_de04, -8
  %v5_de04 = add i32 %v0_de04, %tmp34
  store i32 %v5_de04, i32* %lr.global-to-local, align 4
  %v0_de08 = load i32, i32* @r6, align 4
  %v1_de08 = add i32 %v0_de08, 2
  %v2_de08 = inttoptr i32 %v1_de08 to i16*
  %v3_de08 = load i16, i16* %v2_de08, align 2
  %v3_de0c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_de0c, i32* %r2.global-to-local, align 4
  %v1_de10 = load i32, i32* @sl, align 4
  %v2_de10 = add i32 %v1_de10, %v5_de04
  store i32 %v2_de10, i32* @lr, align 4
  %v3_de14 = add i32 %v2_de10, 2
  %v4_de14 = inttoptr i32 %v3_de14 to i16*
  store i16 %v3_de08, i16* %v4_de14, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_de20 = load i32, i32* @r5, align 4
  store i32 %v0_de20, i32* @r1, align 4
  %v0_de24 = load i32, i32* %r2.global-to-local, align 4
  %v1_de24 = add i32 %v0_de24, 32
  store i32 %v1_de24, i32* @r2, align 4
  %v0_de28 = load i32, i32* @sb, align 4
  store i32 %v0_de28, i32* @r0, align 4
  %v0_de34 = call i32 @function_15560()
  %v3_de38 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_de38, i32* %r3.global-to-local, align 4
  %v1_de3c = add i32 %v3_de38, 1
  %v1_de40 = load i32, i32* @r8, align 4
  %v9_de40 = icmp eq i32 %v1_de3c, %v1_de40
  store i1 %v9_de40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_de3c, i32* %stack_var_-44, align 4
  %v5_de48 = icmp slt i32 %v1_de3c, %v1_de40
  br i1 %v5_de48, label %dec_label_pc_dd74, label %dec_label_pc_de4c

dec_label_pc_de4c:                                ; preds = %dec_label_pc_de5c, %dec_label_pc_ddc0, %dec_label_pc_de4c.preheader
  %v0_de60 = phi i32 [ %v0_de60.ph, %dec_label_pc_de4c.preheader ], [ 0, %dec_label_pc_de5c ], [ %v1_de40, %dec_label_pc_ddc0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_de50 = icmp eq i32 %v0_de60, 0
  store i1 %v2_de50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_de50, label %dec_label_pc_de5c, label %dec_label_pc_dd70

dec_label_pc_de5c:                                ; preds = %dec_label_pc_de4c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_de4c

dec_label_pc_de70:                                ; preds = %dec_label_pc_dd74
  %v1_de70 = add i32 %v2_dd7c, 16
  %v2_de70 = inttoptr i32 %v1_de70 to i32*
  %v3_de70 = load i32, i32* %v2_de70, align 4
  %v1_de74 = call i32 @function_15498(i32 %v3_de70)
  store i32 %v1_de74, i32* @r4, align 4
  %v0_de7c = call i32 @function_10038()
  %v3_de80 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_de80, i32* %r2.global-to-local, align 4
  %v5_de88 = mul i32 %v3_de80, 24
  %v1_de8c = load i32, i32* @sl, align 4
  %v2_de8c = add i32 %v1_de8c, %v5_de88
  store i32 %v2_de8c, i32* %r3.global-to-local, align 4
  %v1_de90 = add i32 %v2_de8c, 20
  %v2_de90 = inttoptr i32 %v1_de90 to i8*
  %v3_de90 = load i8, i8* %v2_de90, align 1
  %v4_de90 = zext i8 %v3_de90 to i32
  store i32 %v4_de90, i32* %r2.global-to-local, align 4
  %v0_de94 = load i32, i32* @r4, align 4
  %v7_de94 = lshr i32 %v0_de7c, %v4_de90
  %v8_de94 = add i32 %v7_de94, %v0_de94
  %v1_de98 = call i32 @function_152f0(i32 %v8_de94)
  %v1_dea0 = load i32, i32* @r7, align 4
  %v9_dea0 = icmp eq i32 %v3_dc34, %v1_dea0
  store i1 %v9_dea0, i1* %cpsr_z.global-to-local, align 1
  %v1_dea4 = load i32, i32* @r5, align 4
  %v2_dea4 = add i32 %v1_dea4, 16
  %v3_dea4 = inttoptr i32 %v2_dea4 to i32*
  store i32 %v1_de98, i32* %v3_dea4, align 4
  br i1 %v9_dea0, label %dec_label_pc_deac, label %dec_label_pc_de70.dec_label_pc_dda8_crit_edge

dec_label_pc_de70.dec_label_pc_dda8_crit_edge:    ; preds = %dec_label_pc_de70
  %v1_ddac.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_dda8

dec_label_pc_deac:                                ; preds = %dec_label_pc_de70, %dec_label_pc_dd9c
  %v0_deac = call i32 @function_10038()
  %v1_deac = trunc i32 %v0_deac to i16
  store i32 %v3_dc38, i32* %r2.global-to-local, align 4
  %v1_deb4 = load i32, i32* @r7, align 4
  %v9_deb4 = icmp eq i32 %v3_dc38, %v1_deb4
  store i1 %v9_deb4, i1* %cpsr_z.global-to-local, align 1
  %v3_deb8 = load i32, i32* @r5, align 4
  %v4_deb8 = add i32 %v3_deb8, 4
  %v5_deb8 = inttoptr i32 %v4_deb8 to i16*
  store i16 %v1_deac, i16* %v5_deb8, align 2
  br i1 %v9_deb4, label %dec_label_pc_dec0, label %dec_label_pc_deac.dec_label_pc_ddb4_crit_edge

dec_label_pc_deac.dec_label_pc_ddb4_crit_edge:    ; preds = %dec_label_pc_deac
  %v1_ddb8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_ddb4

dec_label_pc_dec0:                                ; preds = %dec_label_pc_deac, %dec_label_pc_dda8
  %v0_dec0 = call i32 @function_10038()
  %v1_dec0 = trunc i32 %v0_dec0 to i16
  store i32 %v3_dc3c, i32* %r3.global-to-local, align 4
  %v1_dec8 = load i32, i32* @r7, align 4
  %v9_dec8 = icmp eq i32 %v3_dc3c, %v1_dec8
  store i1 %v9_dec8, i1* %cpsr_z.global-to-local, align 1
  %v3_decc = load i32, i32* @r5, align 4
  %v4_decc = add i32 %v3_decc, 20
  %v5_decc = inttoptr i32 %v4_decc to i16*
  store i16 %v1_dec0, i16* %v5_decc, align 2
  br i1 %v9_dec8, label %dec_label_pc_ded4, label %dec_label_pc_ddc0

dec_label_pc_ded4:                                ; preds = %dec_label_pc_dec0, %dec_label_pc_ddb4
  %v0_ded4 = call i32 @function_10038()
  %v1_ded4 = trunc i32 %v0_ded4 to i16
  %v3_ded8 = load i32, i32* @r6, align 4
  %v4_ded8 = add i32 %v3_ded8, 2
  %v5_ded8 = inttoptr i32 %v4_ded8 to i16*
  store i16 %v1_ded4, i16* %v5_ded8, align 2
  br label %dec_label_pc_ddc0

dec_label_pc_dee0:                                ; preds = %dec_label_pc_dbf4
  %v0_dee0 = load i32, i32* @sb, align 4
  store i32 %v0_dee0, i32* @r0, align 4
  %v1_dee4 = call i32 @function_165e8(i32 %v0_dee0)
  br label %dec_label_pc_dee8

dec_label_pc_dee8:                                ; preds = %dec_label_pc_daec, %dec_label_pc_dee0
  %v1_def0 = phi i32 [ %v3_dbe4, %dec_label_pc_daec ], [ %v1_dee4, %dec_label_pc_dee0 ]
  store i32 %v3_daec, i32* %r4.global-to-local, align 4
  store i32 %v27_daec, i32* %lr.global-to-local, align 4
  ret i32 %v1_def0

; uselistorder directives
  uselistorder i32 %v1_de3c, { 2, 0, 3, 1 }
  uselistorder i32 %v5_de04, { 1, 0 }
  uselistorder i32 %v0_dd58, { 1, 0 }
  uselistorder i32 %v1_dcdc, { 1, 2, 0 }
  uselistorder i32 %v1_dcd8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_dc34, { 0, 2, 1, 3 }
  uselistorder i1 %v7_dc14, { 1, 0 }
  uselistorder i1 %v7_dbe8, { 1, 0 }
  uselistorder i32 %v3_dbe4, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v5_db40, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 13, 1, 7, 8, 9, 10, 11, 12, 14, 2, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 11, 12, 10, 13, 14, 15 }
  uselistorder i8 -16, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_dee8, { 1, 0 }
  uselistorder label %dec_label_pc_ddc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dc60, { 1, 0 }
}

define i32 @function_def8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_def8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v3_def8 = load i32, i32* @r4, align 4
  %v6_def8 = load i32, i32* @r5, align 4
  %v9_def8 = load i32, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_df18 = call i32 @function_13cd4(i32 %arg1, i32 4)
  %v0_df1c = load i32, i32* @r5, align 4
  store i32 %v0_df1c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_df28 = load i32, i32* @r4, align 4
  store i32 %v0_df28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_df30 = inttoptr i32 %v0_df1c to i32*
  %v6_df30 = call i32 @function_a430(i32 %v0_df28, i32* %v5_df30, i32 2, i32 0)
  %v1_df3c = urem i32 %v6_df30, 256
  store i32 %v1_df3c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_df48 = load i32, i32* @r4, align 4
  store i32 %v0_df48, i32* %r0.global-to-local, align 4
  %v0_df4c = load i32, i32* @r5, align 4
  store i32 %v0_df4c, i32* %r1.global-to-local, align 4
  %v5_df50 = trunc i32 %v6_df30 to i8
  %v6_df54 = inttoptr i32 %v0_df4c to i32*
  %v7_df54 = call i32 @function_a430(i32 %v0_df48, i32* %v6_df54, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_df58 = load i32, i32* @r5, align 4
  store i32 %v0_df58, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_df64 = load i32, i32* @r4, align 4
  store i32 %v0_df64, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_df6c = inttoptr i32 %v0_df58 to i32*
  %v6_df6c = call i32 @function_a430(i32 %v0_df64, i32* %v5_df6c, i32 4, i32 64)
  %v1_df74 = urem i32 %v6_df6c, 256
  store i32 %v1_df74, i32* %ip.global-to-local, align 4
  %v0_df78 = load i32, i32* @r5, align 4
  store i32 %v0_df78, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_df84 = load i32, i32* @r4, align 4
  store i32 %v0_df84, i32* %r0.global-to-local, align 4
  %v6_df8c = inttoptr i32 %v0_df78 to i32*
  %v7_df8c = call i32 @function_a430(i32 %v0_df84, i32* %v6_df8c, i32 5, i32 0)
  %v1_df98 = urem i32 %v7_df8c, 256
  store i32 %v1_df98, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_dfa4 = load i32, i32* @r4, align 4
  store i32 %v0_dfa4, i32* %r0.global-to-local, align 4
  %v0_dfa8 = load i32, i32* @r5, align 4
  store i32 %v0_dfa8, i32* %r1.global-to-local, align 4
  %v5_dfb0 = inttoptr i32 %v0_dfa8 to i32*
  %v6_dfb0 = call i32 @function_a430(i32 %v0_dfa4, i32* %v5_dfb0, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_dfb4 = load i32, i32* @r5, align 4
  store i32 %v0_dfb4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_dfc0 = load i32, i32* @r4, align 4
  store i32 %v0_dfc0, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_dfc8 = inttoptr i32 %v0_dfb4 to i32*
  %v6_dfc8 = call i32 @function_a430(i32 %v0_dfc0, i32* %v5_dfc8, i32 7, i32 53)
  %v0_dfd0 = load i32, i32* @r5, align 4
  store i32 %v0_dfd0, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v6_dfc8, i32* @fp, align 4
  %v0_dfe0 = load i32, i32* @r4, align 4
  store i32 %v0_dfe0, i32* %r0.global-to-local, align 4
  %v4_dfe4 = inttoptr i32 %v0_dfd0 to i32*
  %v5_dfe4 = call i32 @function_a430(i32 %v0_dfe0, i32* %v4_dfe4, i32 9, i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1))
  %v0_dfe8 = load i32, i32* @r5, align 4
  store i32 %v0_dfe8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 %v5_dfe4, i32* @sb, align 4
  %v0_dff8 = load i32, i32* @r4, align 4
  store i32 %v0_dff8, i32* %r0.global-to-local, align 4
  %v4_dffc = inttoptr i32 %v0_dfe8 to i32*
  %v5_dffc = call i32 @function_a430(i32 %v0_dff8, i32* %v4_dffc, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_e008 = load i32, i32* @r5, align 4
  store i32 %v0_e008, i32* %r1.global-to-local, align 4
  store i32 %v5_dffc, i32* @sl, align 4
  %v0_e010 = load i32, i32* @r4, align 4
  store i32 %v0_e010, i32* %r0.global-to-local, align 4
  %v5_e014 = inttoptr i32 %v0_e008 to i32*
  %v6_e014 = call i32 @function_9f04(i32 %v0_e010, i32* %v5_e014, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_e020 = call i32 @function_1255c(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_e02c = call i32 @function_12498(i32 30, i32* null)
  store i32 %v3_e02c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e034 = call i32 @function_13ba8(i32 %v3_e02c, i32 0)
  store i32 %v2_e034, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_e040 = call i32 @function_124bc(i32 30)
  store i32 %v1_e040, i32* %r0.global-to-local, align 4
  %v0_e044 = load i32, i32* @r4, align 4
  %v1_e044 = icmp slt i32 %v0_e044, 0
  %v2_e044 = icmp eq i32 %v0_e044, 0
  store i1 %v2_e044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_e044, label %dec_label_pc_e4f8, label %dec_label_pc_e04c

dec_label_pc_e04c:                                ; preds = %dec_label_pc_def8
  %v2_e050 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_e050, i32* @r7, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_e050, i32* %r1.global-to-local, align 4
  store i32 %v0_e044, i32* %r0.global-to-local, align 4
  %v3_e060 = call i32 @function_16664(i32 %v0_e044, i32 %v2_e050, i32 2048)
  store i32 %v3_e060, i32* @r5, align 4
  %v0_e068 = load i32, i32* @r4, align 4
  store i32 %v0_e068, i32* @r0, align 4
  %v1_e06c = call i32 @function_165e8(i32 %v0_e068)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_e074 = call i32 @function_1255c(i32 31)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_e080 = call i32 @function_12498(i32 31, i32* null)
  %v0_e084 = load i32, i32* @r5, align 4
  store i32 %v0_e084, i32* @r1, align 4
  store i32 %v3_e080, i32* %r2.global-to-local, align 4
  store i32 %v2_e050, i32* %r0.global-to-local, align 4
  %v3_e090 = bitcast i32* %stack_var_-2124 to i8*
  %v4_e090 = call i32 @function_13148(i8* %v3_e090, i32 %v0_e084, i32 %v3_e080)
  store i32 %v4_e090, i32* @r6, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_e09c = call i32 @function_124bc(i32 31)
  store i32 %v1_e09c, i32* %r0.global-to-local, align 4
  %v0_e0a0 = load i32, i32* @r6, align 4
  %v7_e0a0 = icmp eq i32 %v0_e0a0, -1
  store i1 %v7_e0a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e0a0, label %dec_label_pc_e4f8, label %dec_label_pc_e0a8

dec_label_pc_e0a8:                                ; preds = %dec_label_pc_e04c
  %v0_e0a8 = load i32, i32* @r5, align 4
  %v9_e0a8 = icmp eq i32 %v0_e0a8, %v0_e0a0
  store i1 %v9_e0a8, i1* %cpsr_z.global-to-local, align 1
  %v7_e0ac = icmp sgt i32 %v0_e0a8, %v0_e0a0
  br i1 %v7_e0ac, label %dec_label_pc_e0b0, label %dec_label_pc_e4f8

dec_label_pc_e0b0:                                ; preds = %dec_label_pc_e0a8
  %v0_e0b0 = load i32, i32* @r7, align 4
  %v2_e0b0 = add i32 %v0_e0b0, %v0_e0a0
  store i32 %v2_e0b0, i32* %r1.global-to-local, align 4
  store i32 %v0_e0a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_e0dc = add i32 %v0_e0a8, -1
  br label %dec_label_pc_e0d4

dec_label_pc_e0c0:                                ; preds = %dec_label_pc_e0fc, %bb79
  %v9_e0c0 = icmp eq i32 %v1_e0dc, %v0_e0c8
  store i1 %v9_e0c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0c0, label %dec_label_pc_e10c, label %dec_label_pc_e0c8

dec_label_pc_e0c8:                                ; preds = %dec_label_pc_e0ec, %dec_label_pc_e0c0, %bb
  %v0_e0f819 = phi i32 [ %v0_e0f8, %dec_label_pc_e0ec ], [ %v0_e0f820, %dec_label_pc_e0c0 ], [ %v0_e0f8, %bb ]
  %v0_e0d815 = phi i32 [ 0, %dec_label_pc_e0ec ], [ %v0_e0d816, %dec_label_pc_e0c0 ], [ 0, %bb ]
  %v1_e0c8 = add i32 %v0_e0c8, 1
  store i32 %v1_e0c8, i32* %r2.global-to-local, align 4
  %v9_e0cc = icmp eq i32 %v1_e0c8, %v0_e0a8
  store i1 %v9_e0cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0cc, label %dec_label_pc_e4f8, label %dec_label_pc_e0d4

dec_label_pc_e0d4:                                ; preds = %dec_label_pc_e0c8, %dec_label_pc_e0b0
  %v0_e0c8 = phi i32 [ %v1_e0c8, %dec_label_pc_e0c8 ], [ %v0_e0a0, %dec_label_pc_e0b0 ]
  %v0_e0f8 = phi i32 [ %v0_e0f819, %dec_label_pc_e0c8 ], [ 0, %dec_label_pc_e0b0 ]
  %v0_e0d8 = phi i32 [ %v0_e0d815, %dec_label_pc_e0c8 ], [ 0, %dec_label_pc_e0b0 ]
  %v0_e0e0 = phi i32 [ %v1_e0e0, %dec_label_pc_e0c8 ], [ %v2_e0b0, %dec_label_pc_e0b0 ]
  %v1_e0d4 = inttoptr i32 %v0_e0e0 to i8*
  %v2_e0d4 = load i8, i8* %v1_e0d4, align 1
  %v3_e0d4 = zext i8 %v2_e0d4 to i32
  store i32 %v3_e0d4, i32* %r3.global-to-local, align 4
  %v2_e0d8 = icmp eq i32 %v0_e0d8, 0
  store i1 %v2_e0d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e0dc, i32* @r4, align 4
  %v1_e0e0 = add i32 %v0_e0e0, 1
  store i32 %v1_e0e0, i32* %r1.global-to-local, align 4
  %v1_e0e4 = add nsw i32 %v3_e0d4, -48
  store i32 %v1_e0e4, i32* %r0.global-to-local, align 4
  br i1 %v2_e0d8, label %dec_label_pc_e0ec, label %dec_label_pc_e0fc

dec_label_pc_e0ec:                                ; preds = %dec_label_pc_e0d4
  %v7_e0ec = icmp eq i8 %v2_e0d4, 9
  store i1 %v7_e0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e0ec, label %dec_label_pc_e0c8, label %bb

bb:                                               ; preds = %dec_label_pc_e0ec
  %v8_e0f0 = icmp eq i8 %v2_e0d4, 32
  store i1 %v8_e0f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e0f0, label %dec_label_pc_e0c8, label %dec_label_pc_e0f8

dec_label_pc_e0f8:                                ; preds = %bb
  %v1_e0f8 = add i32 %v0_e0f8, 1
  store i32 %v1_e0f8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e0fc

dec_label_pc_e0fc:                                ; preds = %dec_label_pc_e0d4, %dec_label_pc_e0f8
  %v0_e0f820 = phi i32 [ %v0_e0f8, %dec_label_pc_e0d4 ], [ %v1_e0f8, %dec_label_pc_e0f8 ]
  %v0_e0d816 = phi i32 [ %v0_e0d8, %dec_label_pc_e0d4 ], [ %v1_e0f8, %dec_label_pc_e0f8 ]
  %v7_e0fc = icmp eq i8 %v2_e0d4, 46
  store i1 %v7_e0fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e0fc, label %dec_label_pc_e0c0, label %bb79

bb79:                                             ; preds = %dec_label_pc_e0fc
  %v8_e100 = icmp eq i32 %v1_e0e4, 9
  store i1 %v8_e100, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_e0e4, 10
  br i1 %tmp, label %dec_label_pc_e0c0, label %dec_label_pc_e108

dec_label_pc_e108:                                ; preds = %bb79
  store i32 %v0_e0c8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e10c

dec_label_pc_e10c:                                ; preds = %dec_label_pc_e0c0, %dec_label_pc_e108
  %v0_e0c890 = phi i32 [ %v0_e0c8, %dec_label_pc_e108 ], [ %v1_e0dc, %dec_label_pc_e0c0 ]
  %v2_e110 = sub i32 %v0_e0c890, %v0_e0a0
  store i32 %v2_e110, i32* @r4, align 4
  %v2_e114 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_e114, i32* @r5, align 4
  store i32 %v2_e0b0, i32* %r1.global-to-local, align 4
  store i32 %v2_e114, i32* %r0.global-to-local, align 4
  store i32 %v2_e110, i32* %r2.global-to-local, align 4
  %v3_e124 = call i32 @function_12e5c(i32 %v2_e114, i32 %v2_e0b0, i32 %v2_e110)
  %v2_e128 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_e128, i32* %r1.global-to-local, align 4
  %v1_e12c = load i32, i32* @r4, align 4
  %v2_e12c = add i32 %v1_e12c, %v2_e128
  store i32 %v2_e12c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_e114, i32* @r0, align 4
  %v3_e138 = add i32 %v2_e12c, -36
  %v4_e138 = inttoptr i32 %v3_e138 to i8*
  store i8 0, i8* %v4_e138, align 1
  %v1_e13c = call i32 @function_15328(i32 %v2_e114)
  store i32 %v1_e13c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e144

dec_label_pc_e1443:                               ; preds = %dec_label_pc_e4f8
  unreachable

dec_label_pc_e144:                                ; preds = %dec_label_pc_e584, %dec_label_pc_e574, %dec_label_pc_e55c, %dec_label_pc_e544, %dec_label_pc_e10c
  %stack_var_-2172.0 = phi i32 [ %v1_e550, %dec_label_pc_e544 ], [ %v1_e568, %dec_label_pc_e55c ], [ %v1_e578, %dec_label_pc_e574 ], [ %v1_e590, %dec_label_pc_e584 ], [ %v1_e13c, %dec_label_pc_e10c ]
  store i32 %v6_e014, i32* %r2.global-to-local, align 4
  %v2_e148 = icmp eq i32 %v6_e014, 0
  store i1 %v2_e148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e148, label %dec_label_pc_e534, label %dec_label_pc_e150

dec_label_pc_e150:                                ; preds = %dec_label_pc_e144
  store i32 %v6_e014, i32* %r0.global-to-local, align 4
  %v1_e154 = inttoptr i32 %v6_e014 to i8*
  %v2_e154 = call i32 @function_12dec(i8* %v1_e154)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_e154, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_e168 = call i32 @function_1561c(i32 2, i32 3, i32 17)
  store i32 %v3_e168, i32* @r0, align 4
  %v7_e16c = icmp eq i32 %v3_e168, -1
  store i1 %v7_e16c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e16c, label %dec_label_pc_e534, label %dec_label_pc_e178

dec_label_pc_e178:                                ; preds = %dec_label_pc_e150
  store i32 1, i32* %stack_var_-44, align 4
  %v6_e180 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_e180, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_e194 = call i32 @function_155ac(i32 %v3_e168, i32 0, i32 3, i32 %v6_e180, i32 4)
  store i32 %v5_e194, i32* %r0.global-to-local, align 4
  %v7_e198 = icmp eq i32 %v5_e194, -1
  store i1 %v7_e198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e198, label %dec_label_pc_e52c, label %dec_label_pc_e1a0

dec_label_pc_e1a0:                                ; preds = %dec_label_pc_e178
  %v0_e1ac = load i32, i32* @sb, align 4
  %v0_e1b4 = load i32, i32* @fp, align 4
  store i32 0, i32* @ip, align 4
  %v3_e1bc = urem i32 %v7_df54, 65536
  store i32 %v3_e1bc, i32* %r3.global-to-local, align 4
  %v3_e1c0 = urem i32 %v6_dfb0, 65536
  store i32 %v3_e1c0, i32* %r2.global-to-local, align 4
  %v3_e1c4 = urem i32 %v0_e1b4, 65536
  store i32 %v3_e1c4, i32* %r1.global-to-local, align 4
  %v3_e1c8 = urem i32 %v0_e1ac, 65536
  store i32 %v3_e1c8, i32* %r0.global-to-local, align 4
  %v0_e1cc = load i32, i32* @r8, align 4
  %v2_e1cc = icmp eq i32 %v0_e1cc, 0
  store i1 %v2_e1cc, i1* %cpsr_z.global-to-local, align 1
  %v0_e1e0 = load i32, i32* @sl, align 4
  %v1_e1e0 = urem i32 %v0_e1e0, 256
  store i32 %v1_e1e0, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_e1cc, label %dec_label_pc_e390, label %dec_label_pc_e1ec

dec_label_pc_e1ec:                                ; preds = %dec_label_pc_e1a0
  %v0_e1ec = load i32, i32* @r6, align 4
  %v2_e1ec = add i32 %v0_e1ec, %v1_e1e0
  %v3_e1f0 = mul i32 %v2_e1ec, 65536
  %v1_e1f4 = add i32 %v3_e1f0, 1769472
  %v3_e1f8 = udiv i32 %v1_e1f4, 65536
  store i32 %v3_e1f8, i32* @sl, align 4
  %v1_e1fc = add i32 %v0_e1ec, 1
  store i32 %v1_e1fc, i32* %r2.global-to-local, align 4
  %v1_e200 = add i32 %v3_e1f0, 3080192
  store i32 %v1_e200, i32* %r3.global-to-local, align 4
  %v3_e208 = udiv i32 %v1_e200, 65536
  store i32 %v3_e208, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v4_e250 = sext i8 %v5_df50 to i32
  %v2_e274 = icmp eq i32 %v1_df98, 0
  %sext = mul i32 %v6_df6c, 16777216
  %v3_e270 = sdiv i32 %sext, 16777216
  br label %dec_label_pc_e210

dec_label_pc_e210:                                ; preds = %dec_label_pc_e358, %dec_label_pc_e1ec
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_e218 = call i32 @function_13cd4(i32 600, i32 1)
  store i32 %v2_e218, i32* %r0.global-to-local, align 4
  store i32 %v2_df18, i32* %r1.global-to-local, align 4
  %v2_e224 = load i32, i32* @r5, align 4
  %v5_e224 = mul i32 %v2_e224, 4
  %v6_e224 = add i32 %v5_e224, %v2_df18
  %v7_e224 = inttoptr i32 %v6_e224 to i32*
  store i32 %v2_e218, i32* %v7_e224, align 4
  %v3_e228 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e228, i32* %r3.global-to-local, align 4
  %v0_e22c = load i32, i32* %r1.global-to-local, align 4
  %v4_e22c = mul i32 %v3_e228, 4
  %v5_e22c = add i32 %v0_e22c, %v4_e22c
  %v6_e22c = inttoptr i32 %v5_e22c to i32*
  %v7_e22c = load i32, i32* %v6_e22c, align 4
  store i32 %v7_e22c, i32* %r5.global-to-local, align 4
  %v1_e230 = inttoptr i32 %v7_e22c to i8*
  %v2_e230 = load i8, i8* %v1_e230, align 1
  %tmp94 = urem i8 %v2_e230, 16
  %v1_e234 = zext i8 %tmp94 to i32
  %v1_e238 = or i32 %v1_e234, 64
  store i32 %v1_e238, i32* %r2.global-to-local, align 4
  %v1_e23c = trunc i32 %v1_e238 to i8
  store i8 %v1_e23c, i8* %v1_e230, align 1
  %v0_e240 = load i32, i32* %r5.global-to-local, align 4
  %v1_e240 = inttoptr i32 %v0_e240 to i8*
  %v2_e240 = load i8, i8* %v1_e240, align 1
  %v3_e240 = zext i8 %v2_e240 to i32
  %v1_e244 = and i32 %v3_e240, 240
  %v1_e248 = or i32 %v1_e244, 5
  store i32 %v1_e248, i32* %r3.global-to-local, align 4
  %v1_e24c = trunc i32 %v1_e248 to i8
  store i8 %v1_e24c, i8* %v1_e240, align 1
  store i32 %v4_e250, i32* %r2.global-to-local, align 4
  %v0_e254 = load i32, i32* @sb, align 4
  store i32 %v0_e254, i32* %r0.global-to-local, align 4
  %v2_e258 = load i32, i32* %r5.global-to-local, align 4
  %v3_e258 = add i32 %v2_e258, 1
  %v4_e258 = inttoptr i32 %v3_e258 to i8*
  store i8 %v5_df50, i8* %v4_e258, align 1
  %v1_e25c = call i32 @function_15314(i32 %v0_e254)
  %v2_e25c = trunc i32 %v1_e25c to i16
  %v3_e260 = load i32, i32* %r5.global-to-local, align 4
  %v4_e260 = add i32 %v3_e260, 2
  %v5_e260 = inttoptr i32 %v4_e260 to i16*
  store i16 %v2_e25c, i16* %v5_e260, align 2
  store i32 %v3_e1bc, i32* %r0.global-to-local, align 4
  %v1_e268 = call i32 @function_15314(i32 %v3_e1bc)
  %v2_e268 = trunc i32 %v1_e268 to i16
  store i32 %v1_e268, i32* %r0.global-to-local, align 4
  store i32 %v3_e270, i32* %r1.global-to-local, align 4
  store i32 %v1_df98, i32* %r3.global-to-local, align 4
  store i1 %v2_e274, i1* %cpsr_z.global-to-local, align 1
  %v3_e278 = load i32, i32* %r5.global-to-local, align 4
  %v4_e278 = add i32 %v3_e278, 4
  %v5_e278 = inttoptr i32 %v4_e278 to i16*
  store i16 %v2_e268, i16* %v5_e278, align 2
  %v0_e27c = load i32, i32* %r1.global-to-local, align 4
  %v1_e27c = trunc i32 %v0_e27c to i8
  %v2_e27c = load i32, i32* %r5.global-to-local, align 4
  %v3_e27c = add i32 %v2_e27c, 8
  %v4_e27c = inttoptr i32 %v3_e27c to i8*
  store i8 %v1_e27c, i8* %v4_e27c, align 1
  %v0_e280 = load i32, i32* %r5.global-to-local, align 4
  %v1_e280 = add i32 %v0_e280, 20
  store i32 %v1_e280, i32* %r4.global-to-local, align 4
  %v1_e284 = add i32 %v0_e280, 28
  store i32 %v1_e284, i32* @r7, align 4
  %v0_e288 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e288, label %dec_label_pc_e28c, label %dec_label_pc_e51c

dec_label_pc_e28c:                                ; preds = %dec_label_pc_e210, %dec_label_pc_e51c
  %v2_e290 = phi i32 [ %v0_e280, %dec_label_pc_e210 ], [ %v2_e290.pre, %dec_label_pc_e51c ]
  %v3_e290 = add i32 %v2_e290, 9
  %v4_e290 = inttoptr i32 %v3_e290 to i8*
  store i8 17, i8* %v4_e290, align 1
  store i32 ptrtoint (i32* @global_var_2365c.94 to i32), i32* %r3.global-to-local, align 4
  store i32 %stack_var_-2172.0, i32* %r1.global-to-local, align 4
  %v2_e29c = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_e29c, i32* %r2.global-to-local, align 4
  store i32 %v3_e1c0, i32* %r0.global-to-local, align 4
  %v1_e2a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_e2a4 = add i32 %v1_e2a4, 12
  %v3_e2a4 = inttoptr i32 %v2_e2a4 to i32*
  store i32 %v2_e29c, i32* %v3_e2a4, align 4
  %v0_e2a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e2a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_e2a8 = add i32 %v1_e2a8, 16
  %v3_e2a8 = inttoptr i32 %v2_e2a8 to i32*
  store i32 %v0_e2a8, i32* %v3_e2a8, align 4
  %v1_e2ac = call i32 @function_15314(i32 %v3_e1c0)
  %v2_e2ac = trunc i32 %v1_e2ac to i16
  %v3_e2b0 = load i32, i32* %r5.global-to-local, align 4
  %v4_e2b0 = add i32 %v3_e2b0, 20
  %v5_e2b0 = inttoptr i32 %v4_e2b0 to i16*
  store i16 %v2_e2ac, i16* %v5_e2b0, align 2
  store i32 %v3_e1c4, i32* %r0.global-to-local, align 4
  %v1_e2b8 = call i32 @function_15314(i32 %v3_e1c4)
  %v2_e2b8 = trunc i32 %v1_e2b8 to i16
  %v3_e2bc = load i32, i32* %r4.global-to-local, align 4
  %v4_e2bc = add i32 %v3_e2bc, 2
  %v5_e2bc = inttoptr i32 %v4_e2bc to i16*
  store i16 %v2_e2b8, i16* %v5_e2bc, align 2
  %v0_e2c0 = load i32, i32* @sl, align 4
  store i32 %v0_e2c0, i32* %r0.global-to-local, align 4
  %v1_e2c4 = call i32 @function_15314(i32 %v0_e2c0)
  %v2_e2c4 = trunc i32 %v1_e2c4 to i16
  %v3_e2c8 = load i32, i32* %r4.global-to-local, align 4
  %v4_e2c8 = add i32 %v3_e2c8, 4
  %v5_e2c8 = inttoptr i32 %v4_e2c8 to i16*
  store i16 %v2_e2c4, i16* %v5_e2c8, align 2
  store i32 %v3_e1c8, i32* %r0.global-to-local, align 4
  %v1_e2d0 = call i32 @function_15314(i32 %v3_e1c8)
  %v2_e2d0 = trunc i32 %v1_e2d0 to i16
  %v3_e2d4 = load i32, i32* %r5.global-to-local, align 4
  %v4_e2d4 = add i32 %v3_e2d4, 28
  %v5_e2d4 = inttoptr i32 %v4_e2d4 to i16*
  store i16 %v2_e2d0, i16* %v5_e2d4, align 2
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_e2dc = call i32 @function_15314(i32 256)
  %v2_e2dc = trunc i32 %v1_e2dc to i16
  %v3_e2e0 = load i32, i32* @r7, align 4
  %v4_e2e0 = add i32 %v3_e2e0, 2
  %v5_e2e0 = inttoptr i32 %v4_e2e0 to i16*
  store i16 %v2_e2dc, i16* %v5_e2e0, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e2e8 = call i32 @function_15314(i32 1)
  %v2_e2e8 = trunc i32 %v1_e2e8 to i16
  %v0_e2ec = load i32, i32* %r5.global-to-local, align 4
  %v1_e2ec = add i32 %v0_e2ec, 41
  store i32 %v1_e2ec, i32* %r3.global-to-local, align 4
  %v1_e2f0 = load i32, i32* @fp, align 4
  %v2_e2f0 = add i32 %v1_e2f0, %v1_e2ec
  store i32 %v2_e2f0, i32* %r4.global-to-local, align 4
  %v3_e2f4 = load i32, i32* @r7, align 4
  %v4_e2f4 = add i32 %v3_e2f4, 4
  %v5_e2f4 = inttoptr i32 %v4_e2f4 to i16*
  store i16 %v2_e2e8, i16* %v5_e2f4, align 2
  %v0_e2f8 = load i32, i32* @fp, align 4
  %v1_e2f8 = trunc i32 %v0_e2f8 to i8
  %v2_e2f8 = load i32, i32* %r5.global-to-local, align 4
  %v3_e2f8 = add i32 %v2_e2f8, 40
  %v4_e2f8 = inttoptr i32 %v3_e2f8 to i8*
  store i8 %v1_e2f8, i8* %v4_e2f8, align 1
  %v0_e2fc = load i32, i32* %r4.global-to-local, align 4
  %v1_e2fc = add i32 %v0_e2fc, 1
  store i32 %v1_e2fc, i32* %r0.global-to-local, align 4
  store i32 %v6_e014, i32* %r1.global-to-local, align 4
  store i32 %v1_e1fc, i32* %r2.global-to-local, align 4
  %v3_e308 = call i32 @function_12e5c(i32 %v1_e2fc, i32 %v6_e014, i32 %v1_e1fc)
  store i32 %v3_e308, i32* %r0.global-to-local, align 4
  %v0_e30c = load i32, i32* @r6, align 4
  %v2_e30c = icmp eq i32 %v0_e30c, 0
  store i1 %v2_e30c, i1* %cpsr_z.global-to-local, align 1
  %tmp80 = icmp slt i32 %v0_e30c, 1
  br i1 %tmp80, label %bb81, label %dec_label_pc_e31c

bb81:                                             ; preds = %dec_label_pc_e28c
  %v5_e310 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_e310, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_e358

dec_label_pc_e31c:                                ; preds = %dec_label_pc_e28c
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_e320 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e320, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e328

dec_label_pc_e328:                                ; preds = %.thread10, %dec_label_pc_e31c
  %v0_e338 = phi i32 [ %storemerge, %.thread10 ], [ 0, %dec_label_pc_e31c ]
  %v0_e33c = phi i32 [ %v0_e350, %.thread10 ], [ 0, %dec_label_pc_e31c ]
  store i32 %v6_e014, i32* %r2.global-to-local, align 4
  %v2_e32c = add i32 %v0_e33c, %v6_e014
  %v3_e32c = inttoptr i32 %v2_e32c to i8*
  %v4_e32c = load i8, i8* %v3_e32c, align 1
  %v6_e32c = zext i8 %v4_e32c to i32
  store i32 %v6_e32c, i32* %r3.global-to-local, align 4
  %v7_e330 = icmp eq i8 %v4_e32c, 46
  store i1 %v7_e330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e330, label %bb82, label %.thread45

.thread45:                                        ; preds = %dec_label_pc_e328
  %v1_e3386 = add nsw i32 %v0_e338, 1
  store i32 %v1_e3386, i32* %r2.global-to-local, align 4
  %v1_e33c8 = add i32 %v0_e33c, 1
  store i32 %v1_e33c8, i32* %r1.global-to-local, align 4
  br label %bb83

bb82:                                             ; preds = %dec_label_pc_e328
  %v1_e334 = load i32, i32* %r4.global-to-local, align 4
  %v3_e334 = add i32 %v1_e334, %v0_e33c
  store i32 %v3_e334, i32* %r3.global-to-local, align 4
  %v1_e338 = add nsw i32 %v0_e338, 1
  store i32 %v1_e338, i32* %r2.global-to-local, align 4
  %v1_e33c = add i32 %v0_e33c, 1
  store i32 %v1_e33c, i32* %r1.global-to-local, align 4
  %v2_e340 = trunc i32 %v0_e338 to i8
  %v3_e340 = load i32, i32* %r0.global-to-local, align 4
  %v4_e340 = inttoptr i32 %v3_e340 to i8*
  store i8 %v2_e340, i8* %v4_e340, align 1
  %v0_e344.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e344.pre, label %bb84, label %bb82.bb83_crit_edge

bb82.bb83_crit_edge:                              ; preds = %bb82
  %v1_e344.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb83

bb83:                                             ; preds = %bb82.bb83_crit_edge, %.thread45
  %v1_e344 = phi i32 [ %v1_e344.pre, %bb82.bb83_crit_edge ], [ %v1_e3386, %.thread45 ]
  %v2_e344 = urem i32 %v1_e344, 256
  br label %.thread10

bb84:                                             ; preds = %bb82
  %v1_e348 = load i32, i32* %r3.global-to-local, align 4
  %v2_e348 = add i32 %v1_e348, 1
  store i32 %v2_e348, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %bb83, %bb84
  %storemerge = phi i32 [ %v2_e344, %bb83 ], [ 0, %bb84 ]
  store i32 %storemerge, i32* @ip, align 4
  %v0_e350 = load i32, i32* %r1.global-to-local, align 4
  %v1_e350 = load i32, i32* @r6, align 4
  %v9_e350 = icmp eq i32 %v0_e350, %v1_e350
  store i1 %v9_e350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e350, label %dec_label_pc_e358.loopexit, label %dec_label_pc_e328

dec_label_pc_e358.loopexit:                       ; preds = %.thread10
  %v2_e358.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_e358

dec_label_pc_e358:                                ; preds = %bb81, %dec_label_pc_e358.loopexit
  %v0_e358.off0 = phi i8 [ %extract.t, %dec_label_pc_e358.loopexit ], [ 0, %bb81 ]
  %v2_e358 = phi i32 [ %v2_e358.pre, %dec_label_pc_e358.loopexit ], [ %v5_e310, %bb81 ]
  %v3_e358 = inttoptr i32 %v2_e358 to i8*
  store i8 %v0_e358.off0, i8* %v3_e358, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e360 = call i32 @function_15314(i32 1)
  %v2_e360 = trunc i32 %v1_e360 to i16
  %v0_e364 = load i32, i32* %r4.global-to-local, align 4
  %v1_e364 = load i32, i32* @r6, align 4
  %v2_e364 = add i32 %v1_e364, %v0_e364
  store i32 %v2_e364, i32* %r4.global-to-local, align 4
  %v4_e368 = add i32 %v2_e364, 2
  %v5_e368 = inttoptr i32 %v4_e368 to i16*
  store i16 %v2_e360, i16* %v5_e368, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e370 = call i32 @function_15314(i32 1)
  %v2_e370 = trunc i32 %v1_e370 to i16
  store i32 %v1_e370, i32* %r0.global-to-local, align 4
  %v3_e374 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e374, i32* %r3.global-to-local, align 4
  %v1_e378 = add i32 %v3_e374, 1
  store i32 %v1_e378, i32* @r5, align 4
  %v0_e37c = load i32, i32* %r4.global-to-local, align 4
  %v1_e37c = add i32 %v0_e37c, 2
  store i32 %v1_e37c, i32* @r4, align 4
  %v1_e380 = load i32, i32* @r8, align 4
  %v9_e380 = icmp eq i32 %v1_e378, %v1_e380
  store i1 %v9_e380, i1* %cpsr_z.global-to-local, align 1
  %v4_e384 = add i32 %v0_e37c, 4
  %v5_e384 = inttoptr i32 %v4_e384 to i16*
  store i16 %v2_e370, i16* %v5_e384, align 2
  %v0_e388 = load i32, i32* @r5, align 4
  store i32 %v0_e388, i32* %stack_var_-44, align 4
  %v5_e38c = icmp slt i32 %v1_e378, %v1_e380
  br i1 %v5_e38c, label %dec_label_pc_e210, label %dec_label_pc_e390.loopexit

dec_label_pc_e390.loopexit:                       ; preds = %dec_label_pc_e358
  %v1_e390.pre = load i32, i32* @fp, align 4
  %v0_e398.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_e390

dec_label_pc_e390:                                ; preds = %dec_label_pc_e390.loopexit, %dec_label_pc_e1a0
  %v0_e398.pre = phi i32 [ %v0_e398.pre.pre, %dec_label_pc_e390.loopexit ], [ 0, %dec_label_pc_e1a0 ]
  %v1_e390 = phi i32 [ %v1_e390.pre, %dec_label_pc_e390.loopexit ], [ %v1_e1e0, %dec_label_pc_e1a0 ]
  %v0_e390 = load i32, i32* @r6, align 4
  %v2_e390 = add i32 %v0_e390, %v1_e390
  store i32 %v2_e390, i32* @r7, align 4
  %v6_e3b4 = inttoptr i32 %v2_df18 to i32*
  %v9_e3bc = icmp eq i32 %v3_e1bc, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  %v9_e3d4 = icmp eq i32 %v3_e1c0, add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1)
  br label %dec_label_pc_e394

dec_label_pc_e394:                                ; preds = %dec_label_pc_e3f4, %dec_label_pc_e394, %dec_label_pc_e390
  %v0_e398 = phi i32 [ %v0_e398.pre, %dec_label_pc_e390 ], [ 0, %dec_label_pc_e394 ], [ %v1_e484, %dec_label_pc_e3f4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e398 = icmp eq i32 %v0_e398, 0
  store i1 %v2_e398, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_e398, label %dec_label_pc_e394, label %dec_label_pc_e3a4

dec_label_pc_e3a4:                                ; preds = %dec_label_pc_e394
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_df18, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.25 to i32), i32* %r5.global-to-local, align 4
  store i32 %v3_e1bc, i32* %r1.global-to-local, align 4
  %v7_e3b4 = load i32, i32* %v6_e3b4, align 4
  store i32 %v7_e3b4, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r5, align 4
  store i1 %v9_e3bc, i1* %cpsr_z.global-to-local, align 1
  %v0_e3c0 = load i32, i32* @r7, align 4
  %v1_e3c0 = add i32 %v0_e3c0, 27
  store i32 %v1_e3c0, i32* @sb, align 4
  %v1_e3c4 = add i32 %v0_e3c0, 47
  store i32 %v1_e3c4, i32* @sl, align 4
  %v1_e3c8 = add i32 %v7_e3b4, 20
  store i32 %v1_e3c8, i32* @r6, align 4
  br i1 %v9_e3bc, label %dec_label_pc_e4b0, label %dec_label_pc_e3d0

dec_label_pc_e3d0:                                ; preds = %dec_label_pc_e490, %dec_label_pc_e3a4
  store i32 %v3_e1c0, i32* %r2.global-to-local, align 4
  store i1 %v9_e3d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e3d4, label %dec_label_pc_e4c4, label %dec_label_pc_e3dc

dec_label_pc_e3dc:                                ; preds = %dec_label_pc_e4b0.dec_label_pc_e3dc_crit_edge, %dec_label_pc_e3d0
  %v1_e3e0 = phi i32 [ %v1_e3e0.pre, %dec_label_pc_e4b0.dec_label_pc_e3dc_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), %dec_label_pc_e3d0 ]
  store i32 %v3_e1c4, i32* @r3, align 4
  %v9_e3e0 = icmp eq i32 %v3_e1c4, %v1_e3e0
  store i1 %v9_e3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e3e0, label %dec_label_pc_e4d8, label %dec_label_pc_e3e8

dec_label_pc_e3e8:                                ; preds = %dec_label_pc_e4c4.dec_label_pc_e3e8_crit_edge, %dec_label_pc_e3dc
  %v1_e3ec = phi i32 [ %v1_e3ec.pre, %dec_label_pc_e4c4.dec_label_pc_e3e8_crit_edge ], [ %v1_e3e0, %dec_label_pc_e3dc ]
  store i32 %v3_e1c8, i32* %r1.global-to-local, align 4
  %v9_e3ec = icmp eq i32 %v3_e1c8, %v1_e3ec
  store i1 %v9_e3ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e3ec, label %dec_label_pc_e4ec, label %dec_label_pc_e3f4

dec_label_pc_e3f4:                                ; preds = %dec_label_pc_e4d8, %dec_label_pc_e3e8, %dec_label_pc_e4ec
  %v0_e3f4 = load i32, i32* @r4, align 4
  %v1_e3f4 = add i32 %v0_e3f4, 41
  store i32 %v1_e3f4, i32* %r0.global-to-local, align 4
  %v0_e3f8 = load i32, i32* @fp, align 4
  store i32 %v0_e3f8, i32* %r1.global-to-local, align 4
  %v2_e3fc = inttoptr i32 %v1_e3f4 to i8*
  %v3_e3fc = call i32 @function_100fc(i8* %v2_e3fc, i32 %v0_e3f8)
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e404 = load i32, i32* @r4, align 4
  %v3_e404 = add i32 %v2_e404, 10
  %v4_e404 = inttoptr i32 %v3_e404 to i16*
  store i16 0, i16* %v4_e404, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_e40c = load i32, i32* @r4, align 4
  store i32 %v0_e40c, i32* @r0, align 4
  %v2_e410 = call i32 @function_e5a4(i32 %v0_e40c, i32 20)
  %v3_e410 = trunc i32 %v2_e410 to i16
  store i32 %v2_e410, i32* %r0.global-to-local, align 4
  %v3_e414 = load i32, i32* @r4, align 4
  %v4_e414 = add i32 %v3_e414, 10
  %v5_e414 = inttoptr i32 %v4_e414 to i16*
  store i16 %v3_e410, i16* %v5_e414, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e41c = load i32, i32* @r6, align 4
  %v3_e41c = add i32 %v2_e41c, 6
  %v4_e41c = inttoptr i32 %v3_e41c to i16*
  store i16 0, i16* %v4_e41c, align 2
  %v0_e420 = load i32, i32* @r6, align 4
  store i32 %v0_e420, i32* @r1, align 4
  %v1_e424 = add i32 %v0_e420, 4
  %v2_e424 = inttoptr i32 %v1_e424 to i16*
  %v3_e424 = load i16, i16* %v2_e424, align 2
  %v4_e424 = zext i16 %v3_e424 to i32
  store i32 %v4_e424, i32* %r2.global-to-local, align 4
  %v0_e428 = load i32, i32* @sb, align 4
  store i32 %v0_e428, i32* %r3.global-to-local, align 4
  %v0_e42c = load i32, i32* @r4, align 4
  store i32 %v0_e42c, i32* %r0.global-to-local, align 4
  %v4_e430 = call i32 @function_e5f4(i32 %v0_e42c, i32 %v0_e420, i32 %v4_e424, i32 %v0_e428)
  %v5_e430 = trunc i32 %v4_e430 to i16
  store i32 %v4_e430, i32* %r0.global-to-local, align 4
  %v3_e434 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e434, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v3_e43c = mul i32 %v3_e434, 32
  store i32 %v3_e43c, i32* %ip.global-to-local, align 4
  %v3_e440 = load i32, i32* @r6, align 4
  %v4_e440 = add i32 %v3_e440, 6
  %v5_e440 = inttoptr i32 %v4_e440 to i16*
  store i16 %v5_e430, i16* %v5_e440, align 2
  store i32 %stack_var_-2172.0, i32* %r2.global-to-local, align 4
  %v0_e448 = load i32, i32* @r6, align 4
  %v1_e448 = add i32 %v0_e448, 2
  %v2_e448 = inttoptr i32 %v1_e448 to i16*
  %v3_e448 = load i16, i16* %v2_e448, align 2
  %v4_e448 = zext i16 %v3_e448 to i32
  store i32 %v4_e448, i32* %r6.global-to-local, align 4
  %v0_e44c = load i32, i32* %ip.global-to-local, align 4
  %v1_e44c = load i32, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_e44c, -8
  %v5_e44c = add i32 %v0_e44c, %tmp95
  %v1_e450 = load i32, i32* %r1.global-to-local, align 4
  %v2_e450 = add i32 %v1_e450, %v5_e44c
  store i32 %v2_e450, i32* %ip.global-to-local, align 4
  %v2_e454 = add i32 %v2_e450, 4
  %v3_e454 = inttoptr i32 %v2_e454 to i32*
  store i32 %stack_var_-2172.0, i32* %v3_e454, align 4
  %v0_e458 = load i32, i32* %r6.global-to-local, align 4
  %v1_e458 = trunc i32 %v0_e458 to i16
  %v2_e458 = load i32, i32* %ip.global-to-local, align 4
  %v3_e458 = add i32 %v2_e458, 2
  %v4_e458 = inttoptr i32 %v3_e458 to i16*
  store i16 %v1_e458, i16* %v4_e458, align 2
  %v0_e45c = load i32, i32* @r4, align 4
  store i32 %v0_e45c, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_e168, i32* @r0, align 4
  %v0_e468 = load i32, i32* @sl, align 4
  store i32 %v0_e468, i32* @r2, align 4
  store i32 16, i32* @r4, align 4
  %v0_e478 = call i32 @function_15560()
  %v3_e47c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e47c, i32* %r3.global-to-local, align 4
  %v1_e480 = add i32 %v3_e47c, 1
  store i32 %v1_e480, i32* %r0.global-to-local, align 4
  %v1_e484 = load i32, i32* @r8, align 4
  %v9_e484 = icmp eq i32 %v1_e480, %v1_e484
  store i1 %v9_e484, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e480, i32* %stack_var_-44, align 4
  %v6_e48c = icmp slt i32 %v1_e480, %v1_e484
  br i1 %v6_e48c, label %dec_label_pc_e490, label %dec_label_pc_e394

dec_label_pc_e490:                                ; preds = %dec_label_pc_e3f4
  store i32 %v2_df18, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.25 to i32), i32* %r5.global-to-local, align 4
  store i32 %v3_e1bc, i32* %r1.global-to-local, align 4
  %v4_e49c = mul i32 %v1_e480, 4
  %v5_e49c = add i32 %v4_e49c, %v2_df18
  %v6_e49c = inttoptr i32 %v5_e49c to i32*
  %v7_e49c = load i32, i32* %v6_e49c, align 4
  store i32 %v7_e49c, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), i32* @r5, align 4
  store i1 %v9_e3bc, i1* %cpsr_z.global-to-local, align 1
  %v1_e4a8 = add i32 %v7_e49c, 20
  store i32 %v1_e4a8, i32* @r6, align 4
  br i1 %v9_e3bc, label %dec_label_pc_e4b0, label %dec_label_pc_e3d0

dec_label_pc_e4b0:                                ; preds = %dec_label_pc_e490, %dec_label_pc_e3a4
  %v0_e4b0 = call i32 @function_10038()
  %v1_e4b0 = trunc i32 %v0_e4b0 to i16
  store i32 %v0_e4b0, i32* %r0.global-to-local, align 4
  store i32 %v3_e1c0, i32* %r2.global-to-local, align 4
  %v1_e4b8 = load i32, i32* @r5, align 4
  %v9_e4b8 = icmp eq i32 %v3_e1c0, %v1_e4b8
  store i1 %v9_e4b8, i1* %cpsr_z.global-to-local, align 1
  %v3_e4bc = load i32, i32* @r4, align 4
  %v4_e4bc = add i32 %v3_e4bc, 4
  %v5_e4bc = inttoptr i32 %v4_e4bc to i16*
  store i16 %v1_e4b0, i16* %v5_e4bc, align 2
  br i1 %v9_e4b8, label %dec_label_pc_e4c4, label %dec_label_pc_e4b0.dec_label_pc_e3dc_crit_edge

dec_label_pc_e4b0.dec_label_pc_e3dc_crit_edge:    ; preds = %dec_label_pc_e4b0
  %v1_e3e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e3dc

dec_label_pc_e4c4:                                ; preds = %dec_label_pc_e4b0, %dec_label_pc_e3d0
  %v0_e4c4 = call i32 @function_10038()
  %v1_e4c4 = trunc i32 %v0_e4c4 to i16
  store i32 %v0_e4c4, i32* %r0.global-to-local, align 4
  store i32 %v3_e1c4, i32* @r3, align 4
  %v1_e4cc = load i32, i32* @r5, align 4
  %v9_e4cc = icmp eq i32 %v3_e1c4, %v1_e4cc
  store i1 %v9_e4cc, i1* %cpsr_z.global-to-local, align 1
  %v3_e4d0 = load i32, i32* @r4, align 4
  %v4_e4d0 = add i32 %v3_e4d0, 20
  %v5_e4d0 = inttoptr i32 %v4_e4d0 to i16*
  store i16 %v1_e4c4, i16* %v5_e4d0, align 2
  br i1 %v9_e4cc, label %dec_label_pc_e4d8, label %dec_label_pc_e4c4.dec_label_pc_e3e8_crit_edge

dec_label_pc_e4c4.dec_label_pc_e3e8_crit_edge:    ; preds = %dec_label_pc_e4c4
  %v1_e3ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e3e8

dec_label_pc_e4d8:                                ; preds = %dec_label_pc_e4c4, %dec_label_pc_e3dc
  %v0_e4d8 = call i32 @function_10038()
  %v1_e4d8 = trunc i32 %v0_e4d8 to i16
  store i32 %v0_e4d8, i32* %r0.global-to-local, align 4
  store i32 %v3_e1c8, i32* %r1.global-to-local, align 4
  %v1_e4e0 = load i32, i32* @r5, align 4
  %v9_e4e0 = icmp eq i32 %v3_e1c8, %v1_e4e0
  store i1 %v9_e4e0, i1* %cpsr_z.global-to-local, align 1
  %v3_e4e4 = load i32, i32* @r6, align 4
  %v4_e4e4 = add i32 %v3_e4e4, 2
  %v5_e4e4 = inttoptr i32 %v4_e4e4 to i16*
  store i16 %v1_e4d8, i16* %v5_e4e4, align 2
  br i1 %v9_e4e0, label %dec_label_pc_e4ec, label %dec_label_pc_e3f4

dec_label_pc_e4ec:                                ; preds = %dec_label_pc_e4d8, %dec_label_pc_e3e8
  %v0_e4ec = call i32 @function_10038()
  %v1_e4ec = trunc i32 %v0_e4ec to i16
  store i32 %v0_e4ec, i32* %r0.global-to-local, align 4
  %v3_e4f0 = load i32, i32* @r4, align 4
  %v4_e4f0 = add i32 %v3_e4f0, 28
  %v5_e4f0 = inttoptr i32 %v4_e4f0 to i16*
  store i16 %v1_e4ec, i16* %v5_e4f0, align 2
  br label %dec_label_pc_e3f4

dec_label_pc_e4f8:                                ; preds = %dec_label_pc_e0c8, %dec_label_pc_e0a8, %dec_label_pc_e04c, %dec_label_pc_def8
  %v0_e4f8 = call i32 @function_10038()
  %v1_e4fc = urem i32 %v0_e4f8, 4
  store i32 %v1_e4fc, i32* %r0.global-to-local, align 4
  %v2_e500 = icmp eq i32 %v1_e4fc, 3
  store i1 %v2_e500, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_e4f8 to i2
  switch i2 %trunc, label %dec_label_pc_e1443 [
    i2 0, label %dec_label_pc_e584
    i2 1, label %dec_label_pc_e574
    i2 -2, label %dec_label_pc_e55c
    i2 -1, label %dec_label_pc_e544
  ]

dec_label_pc_e51c:                                ; preds = %dec_label_pc_e210
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_e520 = call i32 @function_15314(i32 16384)
  %v2_e520 = trunc i32 %v1_e520 to i16
  store i32 %v1_e520, i32* %r0.global-to-local, align 4
  %v3_e524 = load i32, i32* %r5.global-to-local, align 4
  %v4_e524 = add i32 %v3_e524, 6
  %v5_e524 = inttoptr i32 %v4_e524 to i16*
  store i16 %v2_e520, i16* %v5_e524, align 2
  %v2_e290.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e28c

dec_label_pc_e52c:                                ; preds = %dec_label_pc_e178
  store i32 %v3_e168, i32* @r0, align 4
  %v1_e530 = call i32 @function_165e8(i32 %v3_e168)
  store i32 %v1_e530, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e150, %dec_label_pc_e144, %dec_label_pc_e52c
  %v1_e540 = phi i32 [ %v3_e168, %dec_label_pc_e150 ], [ %stack_var_-2172.0, %dec_label_pc_e144 ], [ %v1_e530, %dec_label_pc_e52c ]
  store i32 %v3_def8, i32* %r4.global-to-local, align 4
  store i32 %v6_def8, i32* %r5.global-to-local, align 4
  store i32 %v9_def8, i32* %r6.global-to-local, align 4
  ret i32 %v1_e540

dec_label_pc_e544:                                ; preds = %dec_label_pc_e4f8
  store i32 67240450, i32* %r0.global-to-local, align 4
  %v1_e550 = call i32 @function_152f0(i32 67240450)
  store i32 %v1_e550, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e144

dec_label_pc_e55c:                                ; preds = %dec_label_pc_e4f8
  store i32 1074151430, i32* %r0.global-to-local, align 4
  %v1_e568 = call i32 @function_152f0(i32 1074151430)
  store i32 %v1_e568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e144

dec_label_pc_e574:                                ; preds = %dec_label_pc_e4f8
  store i32 1246898730, i32* %r0.global-to-local, align 4
  %v1_e578 = call i32 @function_152f0(i32 1246898730)
  store i32 %v1_e578, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e144

dec_label_pc_e584:                                ; preds = %dec_label_pc_e4f8
  store i32 134744072, i32* %r0.global-to-local, align 4
  %v1_e590 = call i32 @function_152f0(i32 134744072)
  store i32 %v1_e590, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e144

; uselistorder directives
  uselistorder i32 %v1_e590, { 1, 0 }
  uselistorder i32 %v1_e578, { 1, 0 }
  uselistorder i32 %v1_e568, { 1, 0 }
  uselistorder i32 %v1_e550, { 1, 0 }
  uselistorder i32 %v1_e520, { 1, 0 }
  uselistorder i32 %v1_e4fc, { 1, 0 }
  uselistorder i32 %v0_e4f8, { 1, 0 }
  uselistorder i32 %v0_e4ec, { 1, 0 }
  uselistorder i32 %v0_e4d8, { 1, 0 }
  uselistorder i32 %v0_e4c4, { 1, 0 }
  uselistorder i32 %v0_e4b0, { 1, 0 }
  uselistorder i32 %v1_e484, { 1, 2, 0 }
  uselistorder i32 %v1_e480, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_e430, { 1, 0 }
  uselistorder i32 %v2_e410, { 1, 0 }
  uselistorder i1 %v9_e3bc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_e370, { 1, 0 }
  uselistorder i32 %v0_e350, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_e33c, { 2, 0, 3, 1 }
  uselistorder i32 %v0_e338, { 1, 0, 2 }
  uselistorder i32 %v1_e268, { 1, 0 }
  uselistorder i32 %v1_e1fc, { 1, 0, 2 }
  uselistorder i32 %v3_e1f0, { 1, 0 }
  uselistorder i32 %v0_e1ec, { 1, 0 }
  uselistorder i32 %v1_e1e0, { 1, 2, 0 }
  uselistorder i32 %v3_e1c0, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v3_e1bc, { 2, 1, 0, 3, 4, 5 }
  uselistorder i1 %v7_e198, { 1, 0 }
  uselistorder i1 %v7_e16c, { 1, 0 }
  uselistorder i32 %v3_e168, { 1, 3, 4, 5, 2, 0, 6 }
  uselistorder i32 %stack_var_-2172.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_e114, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_e110, { 1, 0, 2 }
  uselistorder i1 %v7_e0fc, { 1, 0 }
  uselistorder i32 %v1_e0f8, { 1, 0, 2 }
  uselistorder i1 %v8_e0f0, { 1, 0 }
  uselistorder i1 %v7_e0ec, { 1, 0 }
  uselistorder i32 %v1_e0e0, { 1, 0 }
  uselistorder i8 %v2_e0d4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_e0d8, { 1, 0 }
  uselistorder i32 %v0_e0f8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_e0c8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_e0dc, { 0, 2, 1 }
  uselistorder i32 %v2_e0b0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_e0a8, { 1, 0, 2, 3 }
  uselistorder i1 %v7_e0a0, { 1, 0 }
  uselistorder i32 %v0_e0a0, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 %v2_e050, { 0, 2, 1, 3 }
  uselistorder i32 %v0_e044, { 1, 0, 3, 2 }
  uselistorder i32 %v6_e014, { 0, 1, 3, 2, 6, 7, 5, 4 }
  uselistorder i32 %v1_df98, { 1, 2, 0 }
  uselistorder i8 %v5_df50, { 1, 0 }
  uselistorder i32 %v6_df30, { 1, 0 }
  uselistorder i32 %v2_df18, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 17, 15, 14, 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16 }
  uselistorder i32* %r4.global-to-local, { 12, 0, 1, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r1.global-to-local, { 41, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 35, 34, 36, 38, 37, 40, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 58, 57, 60, 59, 62, 61, 64, 63, 65, 68, 66, 67, 69, 1, 70, 3, 2, 5, 4, 6, 7, 8, 10, 9, 11, 13, 12, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 30, 28, 29, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 44, 43, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 29, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 22, 19, 26, 27, 28 }
  uselistorder i32 41, { 5, 6, 7, 0, 1, 3, 8, 2, 9, 4, 10 }
  uselistorder i32 (i32)* @function_15328, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10000.25 to i32), { 1, 2, 3, 4, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_10000.25 to i32), i32 -1), { 2, 1, 3, 0, 4, 18, 44, 19, 45, 20, 46, 5, 7, 6, 21, 47, 22, 48, 50, 8, 51, 49, 23, 52, 24, 53, 25, 54, 55, 56, 26, 57, 58, 59, 60, 27, 61, 62, 64, 9, 65, 63, 66, 67, 68, 69, 28, 70, 29, 71, 73, 10, 74, 72, 75, 76, 30, 77, 31, 78, 32, 79, 33, 80, 11, 12, 82, 83, 81, 34, 84, 35, 85, 13, 14, 87, 88, 86, 36, 89, 37, 90, 91, 92, 15, 93, 94, 38, 95, 39, 96, 40, 97, 98, 99, 16, 100, 101, 41, 102, 42, 103, 43, 104, 17, 105 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e534, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e3f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e358, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_e28c, { 1, 0 }
  uselistorder label %dec_label_pc_e10c, { 1, 0 }
  uselistorder label %dec_label_pc_e0fc, { 1, 0 }
  uselistorder label %dec_label_pc_e0c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e0c0, { 1, 0 }
}

define i32 @function_e5a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e5a4:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_e5c8, label %dec_label_pc_e5b0

dec_label_pc_e5b0:                                ; preds = %dec_label_pc_e5a4
  %v0_e5b8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e5b4

dec_label_pc_e5b4:                                ; preds = %dec_label_pc_e5b4, %dec_label_pc_e5b0
  %v0_e5c0 = phi i32 [ %v2_e5c0, %dec_label_pc_e5b4 ], [ 0, %dec_label_pc_e5b0 ]
  %v0_e5b8 = phi i32 [ %v5_e5b8, %dec_label_pc_e5b4 ], [ %v0_e5b8.pre, %dec_label_pc_e5b0 ]
  %v0_e5b4 = phi i32 [ %v1_e5b4, %dec_label_pc_e5b4 ], [ %arg1, %dec_label_pc_e5b0 ]
  %v1_e5b4 = add i32 %v0_e5b4, -2
  %v1_e5b8 = inttoptr i32 %v0_e5b8 to i16*
  %v2_e5b8 = load i16, i16* %v1_e5b8, align 2
  %v3_e5b8 = zext i16 %v2_e5b8 to i32
  %v5_e5b8 = add i32 %v0_e5b8, -2
  store i32 %v5_e5b8, i32* @r0, align 4
  %v2_e5c0 = add i32 %v3_e5b8, %v0_e5c0
  %v1_e5b4.cmp = icmp ugt i32 %v1_e5b4, 1
  br i1 %v1_e5b4.cmp, label %dec_label_pc_e5b4, label %dec_label_pc_e5c8.loopexit

dec_label_pc_e5c8.loopexit:                       ; preds = %dec_label_pc_e5b4
  br label %dec_label_pc_e5c8

dec_label_pc_e5c8:                                ; preds = %dec_label_pc_e5a4, %dec_label_pc_e5c8.loopexit
  %v1_e5d0 = phi i32 [ %v2_e5c0, %dec_label_pc_e5c8.loopexit ], [ 0, %dec_label_pc_e5a4 ]
  %v0_e5c8 = phi i32 [ %v1_e5b4, %dec_label_pc_e5c8.loopexit ], [ %arg1, %dec_label_pc_e5a4 ]
  %v7_e5c8 = icmp eq i32 %v0_e5c8, 1
  br i1 %v7_e5c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e5c8
  %v1_e5cc = load i32, i32* @r0, align 4
  %v2_e5cc = inttoptr i32 %v1_e5cc to i8*
  %v3_e5cc = load i8, i8* %v2_e5cc, align 1
  %v4_e5cc = zext i8 %v3_e5cc to i32
  %v3_e5d0 = add i32 %v1_e5d0, %v4_e5cc
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e5c8, %bb
  %v0_e5d4 = phi i32 [ %v1_e5d0, %dec_label_pc_e5c8 ], [ %v3_e5d0, %bb ]
  %v3_e5d8 = urem i32 %v0_e5d4, 65536
  %v4_e5dc = udiv i32 %v0_e5d4, 65536
  %v5_e5dc = add nuw nsw i32 %v4_e5dc, %v3_e5d8
  %v4_e5e0 = udiv i32 %v5_e5dc, 65536
  %v5_e5e0 = add nuw nsw i32 %v4_e5e0, %v5_e5dc
  %v1_e5e4 = urem i32 %v5_e5e0, 65536
  %v3_e5ec = xor i32 %v1_e5e4, 65535
  ret i32 %v3_e5ec

; uselistorder directives
  uselistorder i32 %v5_e5dc, { 1, 0 }
  uselistorder i32 %v5_e5b8, { 1, 0 }
  uselistorder i32 %v1_e5b4, { 1, 0, 2 }
  uselistorder i32 %v0_e5b8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_e5c8, { 1, 0 }
}

define i32 @function_e5f4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e5f4:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v0_e5f8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v1_e608 = add i32 %arg1, 12
  %v2_e608 = inttoptr i32 %v1_e608 to i32*
  %v3_e608 = load i32, i32* %v2_e608, align 4
  store i32 %v3_e608, i32* %r6.global-to-local, align 4
  %v1_e60c = add i32 %arg1, 16
  %v2_e60c = inttoptr i32 %v1_e60c to i32*
  %v3_e60c = load i32, i32* %v2_e60c, align 4
  store i32 %v3_e60c, i32* %r5.global-to-local, align 4
  %v7_e610 = icmp sgt i32 %v0_e5f8, 1
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v7_e610, label %dec_label_pc_e61c.preheader, label %dec_label_pc_e630

dec_label_pc_e61c.preheader:                      ; preds = %dec_label_pc_e5f4
  %v0_e620.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_e61c

dec_label_pc_e61c:                                ; preds = %dec_label_pc_e61c.preheader, %dec_label_pc_e61c
  %v0_e628 = phi i32 [ 0, %dec_label_pc_e61c.preheader ], [ %v2_e628, %dec_label_pc_e61c ]
  %v0_e620 = phi i32 [ %v0_e620.pre, %dec_label_pc_e61c.preheader ], [ %v5_e620, %dec_label_pc_e61c ]
  %v0_e61c = phi i32 [ %v0_e5f8, %dec_label_pc_e61c.preheader ], [ %v1_e61c, %dec_label_pc_e61c ]
  %v1_e61c = add nsw i32 %v0_e61c, -2
  %v1_e620 = inttoptr i32 %v0_e620 to i16*
  %v2_e620 = load i16, i16* %v1_e620, align 2
  %v3_e620 = zext i16 %v2_e620 to i32
  store i32 %v3_e620, i32* %r3.global-to-local, align 4
  %v5_e620 = add i32 %v0_e620, -2
  store i32 %v5_e620, i32* @r1, align 4
  %v2_e628 = add i32 %v3_e620, %v0_e628
  store i32 %v2_e628, i32* %r4.global-to-local, align 4
  %v8_e62c = icmp sgt i32 %v1_e61c, 1
  br i1 %v8_e62c, label %dec_label_pc_e61c, label %dec_label_pc_e630.loopexit

dec_label_pc_e630.loopexit:                       ; preds = %dec_label_pc_e61c
  br label %dec_label_pc_e630

dec_label_pc_e630:                                ; preds = %dec_label_pc_e630.loopexit, %dec_label_pc_e5f4
  %v1_e63c = phi i32 [ %v2_e628, %dec_label_pc_e630.loopexit ], [ 0, %dec_label_pc_e5f4 ]
  %v0_e630 = phi i32 [ %v1_e61c, %dec_label_pc_e630.loopexit ], [ %v0_e5f8, %dec_label_pc_e5f4 ]
  %v7_e630 = icmp eq i32 %v0_e630, 1
  br i1 %v7_e630, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_e630
  %v1_e6381 = add i32 %arg1, 9
  %v2_e6382 = inttoptr i32 %v1_e6381 to i8*
  %v3_e6383 = load i8, i8* %v2_e6382, align 1
  br label %bb20

bb:                                               ; preds = %dec_label_pc_e630
  %v1_e634 = load i32, i32* @r1, align 4
  %v2_e634 = inttoptr i32 %v1_e634 to i8*
  %v3_e634 = load i8, i8* %v2_e634, align 1
  %v4_e634 = zext i8 %v3_e634 to i32
  store i32 %v4_e634, i32* %r3.global-to-local, align 4
  %v1_e638 = add i32 %arg1, 9
  %v2_e638 = inttoptr i32 %v1_e638 to i8*
  %v3_e638 = load i8, i8* %v2_e638, align 1
  %v3_e63c = add i32 %v4_e634, %v1_e63c
  store i32 %v3_e63c, i32* %r4.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %.thread, %bb
  %v4_e6385.in = phi i8 [ %v3_e6383, %.thread ], [ %v3_e638, %bb ]
  %v4_e6385 = zext i8 %v4_e6385.in to i32
  %v1_e640 = call i32 @function_15314(i32 %v4_e6385)
  %v0_e644 = load i32, i32* %r5.global-to-local, align 4
  %v0_e648 = load i32, i32* %r6.global-to-local, align 4
  %v3_e64c = urem i32 %v0_e648, 65536
  %v3_e650 = urem i32 %v0_e644, 65536
  %v4_e658 = udiv i32 %v0_e648, 65536
  %v4_e65c = udiv i32 %v0_e644, 65536
  %v1_e660 = load i32, i32* %r7.global-to-local, align 4
  %v1_e664 = load i32, i32* %r4.global-to-local, align 4
  %v2_e654 = add nuw nsw i32 %v4_e65c, %v3_e650
  %v5_e658 = add nuw nsw i32 %v2_e654, %v3_e64c
  %v5_e65c = add nuw nsw i32 %v5_e658, %v4_e658
  %v2_e660 = add i32 %v5_e65c, %v1_e660
  %v2_e664 = add i32 %v2_e660, %v1_e664
  store i32 %v2_e664, i32* %r3.global-to-local, align 4
  %v2_e668 = add i32 %v2_e664, %v1_e640
  %tmp = icmp ult i32 %v2_e668, 65536
  br i1 %tmp, label %dec_label_pc_e688, label %dec_label_pc_e674

dec_label_pc_e674:                                ; preds = %bb20, %dec_label_pc_e674
  %v2_e67c6 = phi i32 [ %v2_e67c, %dec_label_pc_e674 ], [ %v2_e668, %bb20 ]
  %v3_e6807.in = phi i32 [ %v2_e67c, %dec_label_pc_e674 ], [ %v2_e668, %bb20 ]
  %v3_e6807 = udiv i32 %v3_e6807.in, 65536
  %v3_e678 = urem i32 %v2_e67c6, 65536
  %v2_e67c = add nuw nsw i32 %v3_e678, %v3_e6807
  %tmp21 = icmp ult i32 %v2_e67c, 65536
  br i1 %tmp21, label %dec_label_pc_e688.loopexit, label %dec_label_pc_e674

dec_label_pc_e688.loopexit:                       ; preds = %dec_label_pc_e674
  store i32 %v3_e678, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e688

dec_label_pc_e688:                                ; preds = %dec_label_pc_e688.loopexit, %bb20
  %v0_e688 = phi i32 [ %v2_e67c, %dec_label_pc_e688.loopexit ], [ %v2_e668, %bb20 ]
  %v1_e688 = urem i32 %v0_e688, 65536
  %v3_e690 = xor i32 %v1_e688, 65535
  ret i32 %v3_e690

; uselistorder directives
  uselistorder i32 %v2_e67c, { 2, 1, 3, 0 }
  uselistorder i32 %v3_e678, { 1, 0 }
  uselistorder i32 %v2_e668, { 3, 0, 2, 1 }
  uselistorder i32 %v2_e628, { 0, 2, 1 }
  uselistorder i32 %v5_e620, { 1, 0 }
  uselistorder i32 %v0_e620, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_e674, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_e61c, { 1, 0 }
}

define i32 @function_e6a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_e6a0:
  store i32 %arg1, i32* @r2, align 4
  %v2_e6ac = load i32, i32* @global_var_23664.106, align 4
  store i32 %v2_e6ac, i32* @r0, align 4
  %v2_e6b4 = call i32 @function_158a0(i32 %v2_e6ac, i32 9)
  ret i32 %v2_e6b4
}

define i32 @function_e6c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_e6c8:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-585 = alloca i8, align 1
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-4681 = alloca i32, align 4
  %v3_e6c8 = load i32, i32* @r4, align 4
  %v6_e6c8 = load i32, i32* @r5, align 4
  %v9_e6c8 = load i32, i32* @r6, align 4
  %v12_e6c8 = load i32, i32* @r7, align 4
  %v15_e6c8 = load i32, i32* @r8, align 4
  %v18_e6c8 = load i32, i32* @sb, align 4
  %v21_e6c8 = load i32, i32* @sl, align 4
  %v24_e6c8 = load i32, i32* @fp, align 4
  %v27_e6c8 = load i32, i32* @lr, align 4
  %v2_e6dc = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_e6dc, i32* @sl, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_e6f0 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_e6f0, i32* @fp, align 4
  %v3_e6fc = bitcast i32* %stack_var_-4681 to i8*
  %v4_e6fc = call i32 @function_16010(i8* %v3_e6fc, i32 0, i32 4096)
  %v3_e710 = bitcast i32* %stack_var_-8777 to i8*
  %v4_e710 = call i32 @function_16010(i8* %v3_e710, i32 0, i32 4096)
  %v2_e714 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_e714, i32* @r6, align 4
  %v4_e728 = call i32 @function_16010(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v0_e734 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v2_e73c = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_e73c, i32* @sb, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v1_e750 = call i32 @function_154bc(i32 %v0_e734)
  %v3_e75c = trunc i32 %v1_e750 to i8
  %v4_e75c = call i32 @function_132ec(i8 %v3_e75c, i32 16, i32 %v2_e73c)
  %v2_e764 = call i32 @function_12dec(i8* nonnull %stack_var_-72)
  %v7_e768 = icmp eq i32 %v2_e764, 2
  br i1 %v7_e768, label %dec_label_pc_ebf8, label %dec_label_pc_e770

dec_label_pc_e770:                                ; preds = %dec_label_pc_e6c8, %dec_label_pc_ebf8
  %v1_e774 = call i32 @function_1255c(i32 6)
  %v1_e77c = call i32 @function_1255c(i32 7)
  %v1_e784 = call i32 @function_1255c(i32 9)
  %v0_e78c = load i32, i32* @r4, align 4
  %v3_e790 = call i32 @function_13ba8(i32 ptrtoint ([14 x i8]* @global_var_1a28c.108 to i32), i32 %v0_e78c)
  %v7_e794 = icmp eq i32 %v3_e790, -1
  store i32 %v3_e790, i32* @r8, align 4
  br i1 %v7_e794, label %dec_label_pc_ebb8, label %dec_label_pc_e7a0.preheader

dec_label_pc_e7a0.preheader:                      ; preds = %dec_label_pc_e770
  %v4_e7ac54 = call i32 @function_1304c(i8* nonnull %stack_var_-585, i32 512, i32 %v3_e790)
  %v2_e7b056 = icmp eq i32 %v4_e7ac54, 0
  br i1 %v2_e7b056, label %dec_label_pc_e938.loopexit, label %dec_label_pc_e7b8.lr.ph

dec_label_pc_e7b8.lr.ph:                          ; preds = %dec_label_pc_e7a0.preheader
  %v2_e800 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e7b8

dec_label_pc_e7b8:                                ; preds = %dec_label_pc_e7b8.lr.ph, %dec_label_pc_e7a0.backedge
  %v3_e7bc = load i8, i8* %stack_var_-585, align 1
  %v4_e7bc = sext i8 %v3_e7bc to i32
  %v2_e7c0 = icmp eq i8 %v3_e7bc, 0
  br i1 %v2_e7c0, label %bb128, label %bb

bb:                                               ; preds = %dec_label_pc_e7b8
  %v8_e7c4 = icmp eq i8 %v3_e7bc, 58
  br i1 %v8_e7c4, label %.thread6, label %dec_label_pc_e7d8

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_e7f0

bb128:                                            ; preds = %dec_label_pc_e7b8
  br label %dec_label_pc_e7f0

dec_label_pc_e7d8:                                ; preds = %bb
  %v1_e7e0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e7dc

dec_label_pc_e7dc:                                ; preds = %bb129, %dec_label_pc_e7d8
  %v0_e7dc = phi i32 [ %v1_e7dc, %bb129 ], [ 0, %dec_label_pc_e7d8 ]
  %v1_e7dc = add i32 %v0_e7dc, 1
  %v2_e7e0 = add i32 %v1_e7dc, %v1_e7e0.pre
  %v3_e7e0 = inttoptr i32 %v2_e7e0 to i8*
  %v4_e7e0 = load i8, i8* %v3_e7e0, align 1
  %v6_e7e0 = zext i8 %v4_e7e0 to i32
  %v2_e7e4 = icmp eq i8 %v4_e7e0, 0
  br i1 %v2_e7e4, label %dec_label_pc_e7f0, label %bb129

bb129:                                            ; preds = %dec_label_pc_e7dc
  %v8_e7e8 = icmp eq i8 %v4_e7e0, 58
  br i1 %v8_e7e8, label %dec_label_pc_e7f0, label %dec_label_pc_e7dc

dec_label_pc_e7f0:                                ; preds = %dec_label_pc_e7dc, %bb129, %bb128, %.thread6
  %v1_e81c = phi i32 [ 0, %.thread6 ], [ 0, %bb128 ], [ %v1_e7dc, %bb129 ], [ %v1_e7dc, %dec_label_pc_e7dc ]
  %v0_e7f0 = phi i32 [ %v4_e7bc, %.thread6 ], [ %v4_e7bc, %bb128 ], [ %v6_e7e0, %bb129 ], [ %v6_e7e0, %dec_label_pc_e7dc ]
  %v2_e7f0 = icmp eq i32 %v0_e7f0, 0
  br i1 %v2_e7f0, label %dec_label_pc_e7a0.backedge, label %dec_label_pc_e7f8

dec_label_pc_e7a0.backedge:                       ; preds = %dec_label_pc_e7f0, %dec_label_pc_e8c0, %dec_label_pc_e900, %dec_label_pc_e83c
  %v0_e7a8 = load i32, i32* @r8, align 4
  %v4_e7ac = call i32 @function_1304c(i8* nonnull %stack_var_-585, i32 512, i32 %v0_e7a8)
  %v2_e7b0 = icmp eq i32 %v4_e7ac, 0
  br i1 %v2_e7b0, label %dec_label_pc_e938.loopexit, label %dec_label_pc_e7b8

dec_label_pc_e7f8:                                ; preds = %dec_label_pc_e7f0
  %v1_e7fc = add i32 %v1_e81c, 2
  %v2_e804 = add i32 %v1_e7fc, %v2_e800
  %v1_e808 = add i32 %v2_e804, -545
  %v2_e808 = inttoptr i32 %v1_e808 to i8*
  %v3_e808 = load i8, i8* %v2_e808, align 1
  %v2_e80c = icmp eq i8 %v3_e808, 0
  br i1 %v2_e80c, label %bb131, label %bb130

bb130:                                            ; preds = %dec_label_pc_e7f8
  %v8_e810 = icmp eq i8 %v3_e808, 32
  br i1 %v8_e810, label %.thread10, label %dec_label_pc_e81c

.thread10:                                        ; preds = %bb130
  store i32 %v1_e7fc, i32* @r5, align 4
  br label %dec_label_pc_e83c

bb131:                                            ; preds = %dec_label_pc_e7f8
  store i32 %v1_e7fc, i32* @r5, align 4
  br label %dec_label_pc_e83c

dec_label_pc_e81c:                                ; preds = %bb130
  %v0_e81c = load i32, i32* @r6, align 4
  %v2_e81c = add i32 %v0_e81c, %v1_e81c
  br label %dec_label_pc_e824

dec_label_pc_e824:                                ; preds = %bb132, %dec_label_pc_e81c
  %v0_e83013 = phi i32 [ %v1_e830, %bb132 ], [ %v1_e7fc, %dec_label_pc_e81c ]
  %v0_e83415 = phi i32 [ %v1_e834, %bb132 ], [ %v2_e81c, %dec_label_pc_e81c ]
  %v1_e824 = add i32 %v0_e83415, 3
  %v2_e824 = inttoptr i32 %v1_e824 to i8*
  %v3_e824 = load i8, i8* %v2_e824, align 1
  %v2_e828 = icmp eq i8 %v3_e824, 0
  br i1 %v2_e828, label %.thread12, label %bb132

.thread12:                                        ; preds = %dec_label_pc_e824
  %v1_e83014 = add i32 %v0_e83013, 1
  store i32 %v1_e83014, i32* @r5, align 4
  br label %dec_label_pc_e83c

bb132:                                            ; preds = %dec_label_pc_e824
  %v8_e82c = icmp eq i8 %v3_e824, 32
  %v1_e830 = add i32 %v0_e83013, 1
  store i32 %v1_e830, i32* @r5, align 4
  %v1_e834 = add i32 %v0_e83415, 1
  br i1 %v8_e82c, label %dec_label_pc_e83c, label %dec_label_pc_e824

dec_label_pc_e83c:                                ; preds = %bb132, %bb131, %.thread12, %.thread10
  %v1_e848 = phi i32 [ %v1_e83014, %.thread12 ], [ %v1_e7fc, %.thread10 ], [ %v1_e7fc, %bb131 ], [ %v1_e830, %bb132 ]
  %v0_e83c = load i32, i32* @r6, align 4
  %v2_e83c = add i32 %v0_e83c, %v1_e7fc
  store i32 %v2_e83c, i32* @r4, align 4
  %v2_e848 = add i32 %v1_e848, %v2_e800
  store i32 0, i32* @r7, align 4
  %v3_e850 = add i32 %v2_e848, -545
  %v4_e850 = inttoptr i32 %v3_e850 to i8*
  store i8 0, i8* %v4_e850, align 1
  %v0_e854 = load i32, i32* @r4, align 4
  %v1_e858 = inttoptr i32 %v0_e854 to i8*
  %v2_e858 = call i32 @function_12dec(i8* %v1_e858)
  store i32 %v2_e858, i32* @r1, align 4
  %v0_e864 = load i32, i32* @r4, align 4
  %v3_e868 = inttoptr i32 %v0_e864 to i8*
  %v4_e868 = call i32 @function_13148(i8* %v3_e868, i32 %v2_e858, i32 %v2_e73c)
  %v7_e86c = icmp eq i32 %v4_e868, -1
  br i1 %v7_e86c, label %dec_label_pc_e7a0.backedge, label %dec_label_pc_e888.preheader

dec_label_pc_e888.preheader:                      ; preds = %dec_label_pc_e83c
  %v1_e870 = load i32, i32* @r7, align 4
  %v1_e874 = load i32, i32* @r6, align 4
  %v2_e874 = load i32, i32* @r5, align 4
  %v3_e874 = add i32 %v2_e874, %v1_e874
  store i32 %v1_e870, i32* @lr, align 4
  %v1_e88846 = add i32 %v3_e874, 2
  %v2_e88847 = inttoptr i32 %v1_e88846 to i8*
  %v3_e88848 = load i8, i8* %v2_e88847, align 1
  %v2_e88c50 = icmp eq i8 %v3_e88848, 0
  %v1_e89052 = add i32 %v2_e874, 2
  br i1 %v2_e88c50, label %dec_label_pc_e8c0, label %dec_label_pc_e898

dec_label_pc_e898:                                ; preds = %dec_label_pc_e888.preheader, %dec_label_pc_e888.backedge
  %v0_e8c081 = phi i32 [ %v0_e8c079, %dec_label_pc_e888.backedge ], [ %v1_e870, %dec_label_pc_e888.preheader ]
  %v0_e8a8.pr = phi i32 [ %v0_e8a8.pr68, %dec_label_pc_e888.backedge ], [ %v1_e870, %dec_label_pc_e888.preheader ]
  %v0_ebcc = phi i32 [ %v0_ebcc71, %dec_label_pc_e888.backedge ], [ %v1_e870, %dec_label_pc_e888.preheader ]
  %v0_e89076 = phi i32 [ %v1_e890, %dec_label_pc_e888.backedge ], [ %v1_e89052, %dec_label_pc_e888.preheader ]
  %v0_e8b8 = phi i32 [ %v0_e888, %dec_label_pc_e888.backedge ], [ %v3_e874, %dec_label_pc_e888.preheader ]
  %v1_e89c.in = phi i8 [ %v3_e888, %dec_label_pc_e888.backedge ], [ %v3_e88848, %dec_label_pc_e888.preheader ]
  %v7_e898 = icmp eq i8 %v1_e89c.in, 9
  br i1 %v7_e898, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_e898
  %v8_e89c = icmp eq i8 %v1_e89c.in, 32
  br i1 %v8_e89c, label %.thread24, label %dec_label_pc_e8a8

.thread24:                                        ; preds = %bb133
  br label %dec_label_pc_e8b4

bb134:                                            ; preds = %dec_label_pc_e898
  br label %dec_label_pc_e8b4

dec_label_pc_e8a8:                                ; preds = %bb133
  %v7_e8a8 = icmp eq i32 %v0_e8a8.pr, 1
  br i1 %v7_e8a8, label %dec_label_pc_ebcc, label %dec_label_pc_e8b0

dec_label_pc_e8b0:                                ; preds = %dec_label_pc_ebcc, %dec_label_pc_e8a8
  %v0_e8b473 = phi i32 [ %v1_ebcc, %dec_label_pc_ebcc ], [ %v0_ebcc, %dec_label_pc_e8a8 ]
  br label %dec_label_pc_e8b4

dec_label_pc_e8b4:                                ; preds = %bb134, %.thread24, %dec_label_pc_e8b0
  %v0_e8b4 = phi i32 [ %v0_ebcc, %.thread24 ], [ %v0_ebcc, %bb134 ], [ %v0_e8b473, %dec_label_pc_e8b0 ]
  %v0_e8a8.pr69 = phi i32 [ 1, %.thread24 ], [ 1, %bb134 ], [ 0, %dec_label_pc_e8b0 ]
  %v7_e8bc = icmp sgt i32 %v0_e8b4, 6
  br i1 %v7_e8bc, label %dec_label_pc_e8c0, label %dec_label_pc_e888.backedge

dec_label_pc_e8c0:                                ; preds = %dec_label_pc_e888.backedge, %dec_label_pc_e8b4, %dec_label_pc_e888.preheader
  %v1_e90c = phi i32 [ %v1_e89052, %dec_label_pc_e888.preheader ], [ %v1_e890, %dec_label_pc_e888.backedge ], [ %v0_e89076, %dec_label_pc_e8b4 ]
  %v0_e8c0 = phi i32 [ %v1_e870, %dec_label_pc_e888.preheader ], [ %v0_e8c079, %dec_label_pc_e888.backedge ], [ %v0_e8c081, %dec_label_pc_e8b4 ]
  %v2_e8c0 = icmp eq i32 %v0_e8c0, 0
  br i1 %v2_e8c0, label %dec_label_pc_e7a0.backedge, label %dec_label_pc_e8cc

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e8c0
  %v2_e8d4 = add i32 %v1_e90c, %v2_e800
  %v1_e8d8 = add i32 %v2_e8d4, -545
  %v2_e8d8 = inttoptr i32 %v1_e8d8 to i8*
  %v3_e8d8 = load i8, i8* %v2_e8d8, align 1
  %v2_e8dc = icmp eq i8 %v3_e8d8, 0
  br i1 %v2_e8dc, label %dec_label_pc_e900, label %bb135

bb135:                                            ; preds = %dec_label_pc_e8cc
  %v8_e8e0 = icmp eq i8 %v3_e8d8, 32
  br i1 %v8_e8e0, label %dec_label_pc_e900, label %dec_label_pc_e8e8

dec_label_pc_e8e8:                                ; preds = %bb135
  %v2_e8e8 = add i32 %v1_e90c, %v1_e874
  br label %dec_label_pc_e8ec

dec_label_pc_e8ec:                                ; preds = %bb136, %dec_label_pc_e8e8
  %v0_e8f827 = phi i32 [ %v1_e8f8, %bb136 ], [ %v1_e90c, %dec_label_pc_e8e8 ]
  %v0_e8ec = phi i32 [ %v1_e8ec, %bb136 ], [ %v2_e8e8, %dec_label_pc_e8e8 ]
  %v1_e8ec = add i32 %v0_e8ec, 1
  %v2_e8ec = inttoptr i32 %v1_e8ec to i8*
  %v3_e8ec = load i8, i8* %v2_e8ec, align 1
  %v2_e8f0 = icmp eq i8 %v3_e8ec, 0
  br i1 %v2_e8f0, label %.thread26, label %bb136

.thread26:                                        ; preds = %dec_label_pc_e8ec
  %v1_e8f828 = add i32 %v0_e8f827, 1
  br label %dec_label_pc_e900

bb136:                                            ; preds = %dec_label_pc_e8ec
  %v8_e8f4 = icmp eq i8 %v3_e8ec, 32
  %v1_e8f8 = add i32 %v0_e8f827, 1
  br i1 %v8_e8f4, label %dec_label_pc_e900, label %dec_label_pc_e8ec

dec_label_pc_e900:                                ; preds = %bb136, %dec_label_pc_e8cc, %.thread26, %bb135
  %v1_e908 = phi i32 [ %v1_e90c, %dec_label_pc_e8cc ], [ %v1_e8f828, %.thread26 ], [ %v1_e90c, %bb135 ], [ %v1_e8f8, %bb136 ]
  %v2_e908 = add i32 %v1_e908, %v2_e800
  %v2_e90c = add i32 %v1_e90c, %v1_e874
  store i32 %v2_e90c, i32* @r4, align 4
  %v3_e918 = add i32 %v2_e908, -545
  %v4_e918 = inttoptr i32 %v3_e918 to i8*
  store i8 0, i8* %v4_e918, align 1
  %v1_e91c = inttoptr i32 %v2_e90c to i8*
  %v2_e91c = call i32 @function_12dec(i8* %v1_e91c)
  %v8_e924 = icmp sgt i32 %v2_e91c, 15
  br i1 %v8_e924, label %dec_label_pc_e7a0.backedge, label %dec_label_pc_e928

dec_label_pc_e928:                                ; preds = %dec_label_pc_e900
  %v0_e92c = load i32, i32* @r4, align 4
  %v2_e930 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e930, i32* @r0, align 4
  %v2_e934 = bitcast i32* %stack_var_-56 to i8*
  %v3_e934 = call i32 @function_12e14(i8* %v2_e934, i32 %v0_e92c)
  br label %dec_label_pc_e938

dec_label_pc_e938.loopexit:                       ; preds = %dec_label_pc_e7a0.backedge, %dec_label_pc_e7a0.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre95 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_e938

dec_label_pc_e938:                                ; preds = %dec_label_pc_e938.loopexit, %dec_label_pc_e928
  %v1_e948.pre-phi = phi i8* [ %.pre95, %dec_label_pc_e938.loopexit ], [ %v2_e934, %dec_label_pc_e928 ]
  %v2_e944.pre-phi = phi i32 [ %.pre, %dec_label_pc_e938.loopexit ], [ %v2_e930, %dec_label_pc_e928 ]
  %v0_e938 = load i32, i32* @r8, align 4
  store i32 %v0_e938, i32* @r0, align 4
  %v1_e93c = call i32 @function_165e8(i32 %v0_e938)
  %v2_e948 = call i32 @function_12dec(i8* %v1_e948.pre-phi)
  store i32 %v2_e948, i32* @r4, align 4
  %v2_e94c = icmp eq i32 %v2_e948, 0
  br i1 %v2_e94c, label %dec_label_pc_eba4, label %dec_label_pc_e958

dec_label_pc_e958:                                ; preds = %dec_label_pc_e938
  %v3_e960 = call i32 @function_12498(i32 6, i32* null)
  store i32 %v3_e960, i32* @r0, align 4
  %v1_e964 = call i32 @function_13684(i32 %v3_e960)
  store i32 %v1_e964, i32* @sb, align 4
  %v2_e968 = icmp eq i32 %v1_e964, 0
  br i1 %v2_e968, label %dec_label_pc_eb98, label %dec_label_pc_e978.preheader

dec_label_pc_e978.preheader:                      ; preds = %dec_label_pc_e958
  store i32 0, i32* @r5, align 4
  %v1_e97c41 = inttoptr i32 %v1_e964 to i32*
  %v2_e97c42 = call i32 @function_136d0(i32* %v1_e97c41)
  %v2_e98044 = icmp eq i32 %v2_e97c42, 0
  br i1 %v2_e98044, label %dec_label_pc_eb8c, label %dec_label_pc_e988.preheader

dec_label_pc_e978.loopexit:                       ; preds = %dec_label_pc_e990, %dec_label_pc_e9a0, %dec_label_pc_ea0c
  %v0_e978 = load i32, i32* @sb, align 4
  %v1_e97c = inttoptr i32 %v0_e978 to i32*
  %v2_e97c = call i32 @function_136d0(i32* %v1_e97c)
  %v2_e980 = icmp eq i32 %v2_e97c, 0
  br i1 %v2_e980, label %dec_label_pc_eb8c, label %dec_label_pc_e988.preheader

dec_label_pc_e988.preheader:                      ; preds = %dec_label_pc_e978.preheader, %dec_label_pc_e978.loopexit
  %v0_e99088 = phi i32 [ %v2_e97c, %dec_label_pc_e978.loopexit ], [ %v2_e97c42, %dec_label_pc_e978.preheader ]
  br label %dec_label_pc_e988

dec_label_pc_e988:                                ; preds = %dec_label_pc_e988.preheader, %dec_label_pc_eb74
  %v0_e9a8 = phi i32 [ %v0_e99088, %dec_label_pc_e988.preheader ], [ %v2_eb80, %dec_label_pc_eb74 ]
  %v0_e988 = load i32, i32* @r5, align 4
  %v2_e988 = icmp eq i32 %v0_e988, 0
  br i1 %v2_e988, label %dec_label_pc_e990, label %dec_label_pc_eb8c

dec_label_pc_e990:                                ; preds = %dec_label_pc_e988
  %v1_e990 = add i32 %v0_e9a8, 19
  %v2_e990 = inttoptr i32 %v1_e990 to i8*
  %v3_e990 = load i8, i8* %v2_e990, align 1
  %v4_e990 = zext i8 %v3_e990 to i32
  %v1_e994 = add nsw i32 %v4_e990, -48
  %tmp = icmp ugt i32 %v1_e994, 9
  br i1 %tmp, label %dec_label_pc_e978.loopexit, label %dec_label_pc_e9a0

dec_label_pc_e9a0:                                ; preds = %dec_label_pc_e990
  store i32 %v1_e990, i32* @r7, align 4
  %v3_e9ac = call i32 @function_12498(i32 6, i32* null)
  store i32 %v2_e6dc, i32* @r0, align 4
  %v3_e9b8 = call i32 @function_12e14(i8* %v3_e6fc, i32 %v3_e9ac)
  %v2_e9c0 = call i32 @function_12dec(i8* %v3_e6fc)
  %v0_e9c4 = load i32, i32* @r7, align 4
  %v1_e9c8 = load i32, i32* @sl, align 4
  %v2_e9c8 = add i32 %v1_e9c8, %v2_e9c0
  store i32 %v2_e9c8, i32* @r0, align 4
  %v2_e9cc = inttoptr i32 %v2_e9c8 to i8*
  %v3_e9cc = call i32 @function_12e14(i8* %v2_e9cc, i32 %v0_e9c4)
  %v2_e9d4 = call i32 @function_12dec(i8* %v3_e6fc)
  %v0_e9d8 = load i32, i32* @r5, align 4
  store i32 %v2_e9d4, i32* @r4, align 4
  %v2_e9e4 = inttoptr i32 %v0_e9d8 to i32*
  %v3_e9e4 = call i32 @function_12498(i32 7, i32* %v2_e9e4)
  %v0_e9ec = load i32, i32* @r4, align 4
  %v1_e9ec = load i32, i32* @sl, align 4
  %v2_e9ec = add i32 %v1_e9ec, %v0_e9ec
  store i32 %v2_e9ec, i32* @r0, align 4
  %v2_e9f0 = inttoptr i32 %v2_e9ec to i8*
  %v3_e9f0 = call i32 @function_12e14(i8* %v2_e9f0, i32 %v3_e9e4)
  store i32 %v2_e6dc, i32* @r0, align 4
  store i32 4096, i32* @r2, align 4
  %v3_ea00 = call i32 @function_166a4(i32 %v2_e6dc, i32 %v2_e6f0, i32 4096)
  %v7_ea04 = icmp eq i32 %v3_ea00, -1
  br i1 %v7_ea04, label %dec_label_pc_e978.loopexit, label %dec_label_pc_ea0c

dec_label_pc_ea0c:                                ; preds = %dec_label_pc_e9a0
  %v0_ea0c = load i32, i32* @r5, align 4
  %v2_ea14 = inttoptr i32 %v0_ea0c to i32*
  %v3_ea14 = call i32 @function_12498(i32 6, i32* %v2_ea14)
  store i32 %v2_e6dc, i32* @r0, align 4
  %v3_ea20 = call i32 @function_12e14(i8* %v3_e6fc, i32 %v3_ea14)
  %v2_ea28 = call i32 @function_12dec(i8* %v3_e6fc)
  %v0_ea2c = load i32, i32* @r7, align 4
  %v1_ea30 = load i32, i32* @sl, align 4
  %v2_ea30 = add i32 %v1_ea30, %v2_ea28
  store i32 %v2_ea30, i32* @r0, align 4
  %v2_ea34 = inttoptr i32 %v2_ea30 to i8*
  %v3_ea34 = call i32 @function_12e14(i8* %v2_ea34, i32 %v0_ea2c)
  %v2_ea3c = call i32 @function_12dec(i8* %v3_e6fc)
  %v0_ea40 = load i32, i32* @r5, align 4
  store i32 %v2_ea3c, i32* @r4, align 4
  %v2_ea4c = inttoptr i32 %v0_ea40 to i32*
  %v3_ea4c = call i32 @function_12498(i32 9, i32* %v2_ea4c)
  %v0_ea54 = load i32, i32* @r4, align 4
  %v1_ea54 = load i32, i32* @sl, align 4
  %v2_ea54 = add i32 %v1_ea54, %v0_ea54
  store i32 %v2_ea54, i32* @r0, align 4
  %v2_ea58 = inttoptr i32 %v2_ea54 to i8*
  %v3_ea58 = call i32 @function_12e14(i8* %v2_ea58, i32 %v3_ea4c)
  store i32 %v2_e6dc, i32* @r0, align 4
  %v1_ea60 = call i32 @function_13684(i32 %v2_e6dc)
  store i32 %v1_ea60, i32* @r8, align 4
  %v2_ea64 = icmp eq i32 %v1_ea60, 0
  br i1 %v2_ea64, label %dec_label_pc_e978.loopexit, label %dec_label_pc_ea6c.preheader

dec_label_pc_ea6c.preheader:                      ; preds = %dec_label_pc_ea0c
  %v1_ea7036 = inttoptr i32 %v1_ea60 to i32*
  %v2_ea7037 = call i32 @function_136d0(i32* %v1_ea7036)
  store i32 %v2_ea7037, i32* @r6, align 4
  %v2_ea7439 = icmp eq i32 %v2_ea7037, 0
  br i1 %v2_ea7439, label %dec_label_pc_eb74, label %dec_label_pc_ea84thread-pre-split

dec_label_pc_ea6c.loopexit:                       ; preds = %dec_label_pc_ea8c, %dec_label_pc_eb24
  %v0_ea6c = load i32, i32* @r8, align 4
  %v1_ea70 = inttoptr i32 %v0_ea6c to i32*
  %v2_ea70 = call i32 @function_136d0(i32* %v1_ea70)
  store i32 %v2_ea70, i32* @r6, align 4
  %v2_ea74 = icmp eq i32 %v2_ea70, 0
  br i1 %v2_ea74, label %dec_label_pc_eb74, label %dec_label_pc_ea84thread-pre-split

dec_label_pc_ea84thread-pre-split:                ; preds = %dec_label_pc_ea6c.preheader, %dec_label_pc_ea6c.loopexit
  %v0_ea84.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_ea84

dec_label_pc_ea84:                                ; preds = %dec_label_pc_ea84thread-pre-split, %dec_label_pc_eb4c
  %v0_ea84 = phi i32 [ %v0_ea84.pr, %dec_label_pc_ea84thread-pre-split ], [ 1, %dec_label_pc_eb4c ]
  %v2_ea84 = icmp eq i32 %v0_ea84, 0
  br i1 %v2_ea84, label %dec_label_pc_ea8c, label %dec_label_pc_eb74

dec_label_pc_ea8c:                                ; preds = %dec_label_pc_ea84
  %v2_ea8c = call i32 @function_12e80(i32 %v2_e6f0, i32 4096)
  %v0_ea90 = load i32, i32* @r5, align 4
  %v2_ea98 = inttoptr i32 %v0_ea90 to i32*
  %v3_ea98 = call i32 @function_12498(i32 6, i32* %v2_ea98)
  store i32 %v2_e6dc, i32* @r0, align 4
  %v3_eaa4 = call i32 @function_12e14(i8* %v3_e6fc, i32 %v3_ea98)
  %v2_eaac = call i32 @function_12dec(i8* %v3_e6fc)
  %v0_eab0 = load i32, i32* @r7, align 4
  %v1_eab4 = load i32, i32* @sl, align 4
  %v2_eab4 = add i32 %v1_eab4, %v2_eaac
  store i32 %v2_eab4, i32* @r0, align 4
  %v2_eab8 = inttoptr i32 %v2_eab4 to i8*
  %v3_eab8 = call i32 @function_12e14(i8* %v2_eab8, i32 %v0_eab0)
  %v2_eac0 = call i32 @function_12dec(i8* %v3_e6fc)
  %v0_eac4 = load i32, i32* @r5, align 4
  store i32 %v2_eac0, i32* @r4, align 4
  %v2_ead0 = inttoptr i32 %v0_eac4 to i32*
  %v3_ead0 = call i32 @function_12498(i32 9, i32* %v2_ead0)
  %v0_ead8 = load i32, i32* @r4, align 4
  %v1_ead8 = load i32, i32* @sl, align 4
  %v2_ead8 = add i32 %v1_ead8, %v0_ead8
  store i32 %v2_ead8, i32* @r0, align 4
  %v2_eadc = inttoptr i32 %v2_ead8 to i8*
  %v3_eadc = call i32 @function_12e14(i8* %v2_eadc, i32 %v3_ead0)
  %v2_eae4 = call i32 @function_12dec(i8* %v3_e6fc)
  %v1_eaec = load i32, i32* @sl, align 4
  %v2_eaec = add i32 %v1_eaec, %v2_eae4
  store i32 %v2_eaec, i32* @r0, align 4
  %v2_eaf0 = inttoptr i32 %v2_eaec to i8*
  %v3_eaf0 = call i32 @function_12e14(i8* %v2_eaf0, i32 ptrtoint (i32* @global_var_1a24c.21 to i32))
  %v2_eaf8 = call i32 @function_12dec(i8* %v3_e6fc)
  %v0_eafc = load i32, i32* @r6, align 4
  %v1_eafc = add i32 %v0_eafc, 19
  %v1_eb00 = load i32, i32* @sl, align 4
  %v2_eb00 = add i32 %v1_eb00, %v2_eaf8
  store i32 %v2_eb00, i32* @r0, align 4
  %v2_eb04 = inttoptr i32 %v2_eb00 to i8*
  %v3_eb04 = call i32 @function_12e14(i8* %v2_eb04, i32 %v1_eafc)
  store i32 %v2_e6dc, i32* @r0, align 4
  store i32 4096, i32* @r2, align 4
  %v3_eb14 = call i32 @function_166a4(i32 %v2_e6dc, i32 %v2_e6f0, i32 4096)
  %v7_eb18 = icmp eq i32 %v3_eb14, -1
  br i1 %v7_eb18, label %dec_label_pc_ea6c.loopexit, label %dec_label_pc_eb24

dec_label_pc_eb24:                                ; preds = %dec_label_pc_ea8c
  %v2_eb24 = call i32 @function_12dec(i8* %v3_e710)
  store i32 %v2_eb24, i32* @r1, align 4
  %v4_eb38 = call i32 @function_13148(i8* %v3_e710, i32 %v2_eb24, i32 %v2_e944.pre-phi)
  %v7_eb3c = icmp eq i32 %v4_eb38, -1
  br i1 %v7_eb3c, label %dec_label_pc_ea6c.loopexit, label %dec_label_pc_eb4c

dec_label_pc_eb4c:                                ; preds = %dec_label_pc_eb24
  %v0_eb44 = load i32, i32* @r7, align 4
  %v2_eb4c = inttoptr i32 %v0_eb44 to i8*
  %v3_eb4c = call i32 @function_12f10(i8* %v2_eb4c, i32 10)
  store i32 %v3_eb4c, i32* @r0, align 4
  %v2_eb54 = call i32 @function_158a0(i32 %v3_eb4c, i32 9)
  %v0_eb58 = load i32, i32* @r8, align 4
  %v1_eb5c = inttoptr i32 %v0_eb58 to i32*
  %v2_eb5c = call i32 @function_136d0(i32* %v1_eb5c)
  store i32 %v2_eb5c, i32* @r6, align 4
  %v2_eb60 = icmp eq i32 %v2_eb5c, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_eb60, label %dec_label_pc_eb74, label %dec_label_pc_ea84

dec_label_pc_eb74:                                ; preds = %dec_label_pc_ea6c.loopexit, %dec_label_pc_eb4c, %dec_label_pc_ea84, %dec_label_pc_ea6c.preheader
  %v0_eb74 = load i32, i32* @r8, align 4
  %v1_eb78 = inttoptr i32 %v0_eb74 to i32*
  %v2_eb78 = call i32 @function_13654(i32* %v1_eb78)
  %v0_eb7c = load i32, i32* @sb, align 4
  %v1_eb80 = inttoptr i32 %v0_eb7c to i32*
  %v2_eb80 = call i32 @function_136d0(i32* %v1_eb80)
  %v2_eb84 = icmp eq i32 %v2_eb80, 0
  br i1 %v2_eb84, label %dec_label_pc_eb8c, label %dec_label_pc_e988

dec_label_pc_eb8c:                                ; preds = %dec_label_pc_e978.loopexit, %dec_label_pc_eb74, %dec_label_pc_e988, %dec_label_pc_e978.preheader
  %v0_eb8c = load i32, i32* @sb, align 4
  %v1_eb90 = inttoptr i32 %v0_eb8c to i32*
  %v2_eb90 = call i32 @function_13654(i32* %v1_eb90)
  %v0_eb94 = load i32, i32* @r5, align 4
  %v1_eb94 = urem i32 %v0_eb94, 256
  br label %dec_label_pc_eb98

dec_label_pc_eb98:                                ; preds = %dec_label_pc_e958, %dec_label_pc_eb8c
  %storemerge = phi i32 [ %v1_eb94, %dec_label_pc_eb8c ], [ 0, %dec_label_pc_e958 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_eb9c = call i32 @function_166d4(i32 1)
  br label %dec_label_pc_eba4

dec_label_pc_eba4:                                ; preds = %dec_label_pc_e938, %dec_label_pc_eb98
  %v1_eba4 = call i32 @function_124bc(i32 6)
  %v1_ebac = call i32 @function_124bc(i32 7)
  %v1_ebb4 = call i32 @function_124bc(i32 9)
  br label %dec_label_pc_ebb8

dec_label_pc_ebb8:                                ; preds = %dec_label_pc_e770, %dec_label_pc_eba4
  %v0_ebb8 = load i32, i32* @r4, align 4
  store i32 %v3_e6c8, i32* @r4, align 4
  store i32 %v6_e6c8, i32* @r5, align 4
  store i32 %v9_e6c8, i32* @r6, align 4
  store i32 %v12_e6c8, i32* @r7, align 4
  store i32 %v15_e6c8, i32* @r8, align 4
  store i32 %v18_e6c8, i32* @sb, align 4
  store i32 %v21_e6c8, i32* @sl, align 4
  store i32 %v24_e6c8, i32* @fp, align 4
  store i32 %v27_e6c8, i32* @lr, align 4
  ret i32 %v0_ebb8

dec_label_pc_ebcc:                                ; preds = %dec_label_pc_e8a8
  %v1_ebcc = add i32 %v0_ebcc, 1
  %v7_ebd0 = icmp eq i32 %v0_ebcc, 0
  br i1 %v7_ebd0, label %dec_label_pc_ebd8, label %dec_label_pc_e8b0

dec_label_pc_ebd8:                                ; preds = %dec_label_pc_ebcc
  %v1_ebd8 = add i32 %v0_e8b8, 3
  %v2_ebd8 = inttoptr i32 %v1_ebd8 to i8*
  %v3_ebd8 = load i8, i8* %v2_ebd8, align 1
  %v7_ebdc = icmp eq i8 %v3_ebd8, 65
  br i1 %v7_ebdc, label %dec_label_pc_ebf0, label %dec_label_pc_ebe4

dec_label_pc_ebe4:                                ; preds = %dec_label_pc_ebd8, %dec_label_pc_ebf0
  %v0_e8c080 = phi i32 [ %v0_e8c081, %dec_label_pc_ebd8 ], [ 1, %dec_label_pc_ebf0 ]
  br label %dec_label_pc_e888.backedge

dec_label_pc_e888.backedge:                       ; preds = %dec_label_pc_ebe4, %dec_label_pc_e8b4
  %v0_e8c079 = phi i32 [ %v0_e8c080, %dec_label_pc_ebe4 ], [ %v0_e8c081, %dec_label_pc_e8b4 ]
  %v0_ebcc71 = phi i32 [ %v1_ebcc, %dec_label_pc_ebe4 ], [ %v0_e8b4, %dec_label_pc_e8b4 ]
  %v0_e8a8.pr68 = phi i32 [ 0, %dec_label_pc_ebe4 ], [ %v0_e8a8.pr69, %dec_label_pc_e8b4 ]
  %v0_e888 = add i32 %v0_e8b8, 1
  %v1_e888 = add i32 %v0_e8b8, 3
  %v2_e888 = inttoptr i32 %v1_e888 to i8*
  %v3_e888 = load i8, i8* %v2_e888, align 1
  %v2_e88c = icmp eq i8 %v3_e888, 0
  %v1_e890 = add i32 %v0_e89076, 1
  br i1 %v2_e88c, label %dec_label_pc_e8c0, label %dec_label_pc_e898

dec_label_pc_ebf0:                                ; preds = %dec_label_pc_ebd8
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_ebe4

dec_label_pc_ebf8:                                ; preds = %dec_label_pc_e6c8
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_e770

; uselistorder directives
  uselistorder i32 %v1_e890, { 1, 0 }
  uselistorder i8 %v3_e888, { 1, 0 }
  uselistorder i32 %v0_e8c079, { 1, 0 }
  uselistorder i32 %v1_ebcc, { 1, 0 }
  uselistorder i32 %v2_eb80, { 1, 0 }
  uselistorder i32 %v1_e8ec, { 1, 0 }
  uselistorder i32 %v0_e8f827, { 1, 0 }
  uselistorder i32 %v1_e90c, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32 %v0_e8b4, { 1, 0 }
  uselistorder i32 %v0_e89076, { 1, 0 }
  uselistorder i32 %v0_ebcc, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_e8c081, { 1, 2, 0 }
  uselistorder i32 %v1_e89052, { 1, 0 }
  uselistorder i32 %v2_e874, { 1, 0 }
  uselistorder i32 %v1_e870, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_e830, { 0, 2, 1 }
  uselistorder i32 %v0_e83013, { 1, 0 }
  uselistorder i32 %v1_e7fc, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v3_e790, { 1, 2, 0 }
  uselistorder i8* %v3_e710, { 1, 0, 2 }
  uselistorder i32 %v2_e6f0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e6dc, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 9 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @function_1304c, { 1, 0 }
  uselistorder label %dec_label_pc_ebe4, { 1, 0 }
  uselistorder label %dec_label_pc_ebb8, { 1, 0 }
  uselistorder label %dec_label_pc_eba4, { 1, 0 }
  uselistorder label %dec_label_pc_eb98, { 1, 0 }
  uselistorder label %dec_label_pc_eb8c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_eb74, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ea84, { 1, 0 }
  uselistorder label %dec_label_pc_ea84thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_ea6c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e988, { 1, 0 }
  uselistorder label %dec_label_pc_e988.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e978.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e900, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_e8b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e898, { 1, 0 }
  uselistorder label %dec_label_pc_e83c, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_e7a0.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_e7f0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_e7b8, { 1, 0 }
  uselistorder label %dec_label_pc_e770, { 1, 0 }
}

define i32 @function_ec2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_ec2c:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-8412 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4264 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %v2_ec3c = call i32 @function_16598(i32* null)
  store i32 %v2_ec3c, i32* @r7, align 4
  %v0_ec44 = call i32 @function_15714()
  %v7_ec48 = icmp eq i32 %v0_ec44, -1
  %. = zext i1 %v7_ec48 to i32
  %tmp220 = icmp slt i32 %v0_ec44, 1
  %storemerge184 = select i1 %tmp220, i32 %., i32 1
  store i32 %storemerge184, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23664.106 to i32), i32* %r3.global-to-local, align 4
  %v2_ec64 = icmp eq i32 %storemerge184, 0
  store i32 %v0_ec44, i32* @global_var_23664.106, align 4
  br i1 %v2_ec64, label %dec_label_pc_ec80, label %dec_label_pc_ec70

dec_label_pc_ec70:                                ; preds = %dec_label_pc_ee58, %dec_label_pc_ed38, %dec_label_pc_ec2c
  %v1_ec7c = phi i32 [ %v2_edf0, %dec_label_pc_ed38 ], [ %v0_ec44, %dec_label_pc_ec2c ], [ 0, %dec_label_pc_ee58 ]
  ret i32 %v1_ec7c

dec_label_pc_ec80:                                ; preds = %dec_label_pc_ec2c
  %v2_ec80 = ptrtoint i32* %stack_var_-248 to i32
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v1_ec94 = call i32 @function_15314(i32 23)
  %v1_ec98 = call i32 @function_e6c8(i32 %v1_ec94)
  %v1_eca0 = call i32 @function_15314(i32 23)
  store i32 %v2_ec80, i32* %r3.global-to-local, align 4
  %v0_ecb4 = load i32, i32* @r5, align 4
  store i32 %v0_ecb4, i32* %r2.global-to-local, align 4
  %v3_ecb8 = call i32 @function_1561c(i32 2, i32 1, i32 %v0_ecb4)
  %v7_ecbc = icmp eq i32 %v3_ecb8, -1
  store i32 %v3_ecb8, i32* @r4, align 4
  br i1 %v7_ecbc, label %dec_label_pc_ece4, label %dec_label_pc_ecc8

dec_label_pc_ecc8:                                ; preds = %dec_label_pc_ec80
  %v2_eccc = ptrtoint i32* %stack_var_-76 to i32
  store i32 16, i32* @r2, align 4
  %v3_ecd4 = call i32 @function_15238(i32 %v3_ecb8, i32 %v2_eccc, i32 16)
  %v0_ecd8 = load i32, i32* @r4, align 4
  store i32 %v0_ecd8, i32* @r0, align 4
  %v2_ece0 = call i32 @function_15470(i32 %v0_ecd8, i32 1)
  br label %dec_label_pc_ece4

dec_label_pc_ece4:                                ; preds = %dec_label_pc_ec80, %dec_label_pc_ecc8
  %v1_ece8 = call i32 @function_15314(i32 22)
  %v1_ecec = call i32 @function_e6c8(i32 %v1_ece8)
  %v1_ecf4 = call i32 @function_15314(i32 22)
  %v0_ed00 = load i32, i32* @r5, align 4
  store i32 %v0_ed00, i32* %r2.global-to-local, align 4
  %v3_ed0c = call i32 @function_1561c(i32 2, i32 1, i32 %v0_ed00)
  %v7_ed10 = icmp eq i32 %v3_ed0c, -1
  store i32 %v3_ed0c, i32* @r4, align 4
  br i1 %v7_ed10, label %dec_label_pc_ed38, label %dec_label_pc_ed1c

dec_label_pc_ed1c:                                ; preds = %dec_label_pc_ece4
  %v2_ed20 = ptrtoint i32* %stack_var_-76 to i32
  store i32 16, i32* @r2, align 4
  %v3_ed28 = call i32 @function_15238(i32 %v3_ed0c, i32 %v2_ed20, i32 16)
  %v0_ed2c = load i32, i32* @r4, align 4
  store i32 %v0_ed2c, i32* @r0, align 4
  %v2_ed34 = call i32 @function_15470(i32 %v0_ed2c, i32 1)
  br label %dec_label_pc_ed38

dec_label_pc_ed38:                                ; preds = %dec_label_pc_ece4, %dec_label_pc_ed1c
  %v1_ed3c = call i32 @function_166d4(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_ed44 = call i32 @function_14744()
  store i32 ptrtoint (i32* @global_var_2309c.112 to i32), i32* %r3.global-to-local, align 4
  store i32 %v0_ed44, i32* %r2.global-to-local, align 4
  %v0_ed50 = load i32, i32* @r5, align 4
  %v1_ed50 = trunc i32 %v0_ed50 to i8
  %v3_ed50 = inttoptr i32 %v0_ed44 to i8*
  store i8 %v1_ed50, i8* %v3_ed50, align 1
  %v0_ed54 = load i32, i32* @r5, align 4
  %v1_ed54 = load i32, i32* %r3.global-to-local, align 4
  %v2_ed54 = inttoptr i32 %v1_ed54 to i32*
  store i32 %v0_ed54, i32* %v2_ed54, align 4
  store i32 ptrtoint (i32* @global_var_23660.114 to i32), i32* %r3.global-to-local, align 4
  %v0_ed60 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ed60, i32* @global_var_23660.114, align 4
  %v1_ed64 = call i32 @function_1255c(i32 6)
  %v1_ed6c = call i32 @function_1255c(i32 7)
  %v2_ed74 = ptrtoint i32* %stack_var_-4264 to i32
  %v0_ed7c = load i32, i32* @r5, align 4
  %v2_ed84 = inttoptr i32 %v0_ed7c to i32*
  %v3_ed84 = call i32 @function_12498(i32 6, i32* %v2_ed84)
  %v1_ed8c = add i32 %v2_ed74, -52
  store i32 %v1_ed8c, i32* %r2.global-to-local, align 4
  store i32 %v1_ed8c, i32* @r0, align 4
  %v2_ed9c = inttoptr i32 %v1_ed8c to i8*
  %v3_ed9c = call i32 @function_12e14(i8* %v2_ed9c, i32 %v3_ed84)
  store i32 %v3_ed9c, i32* @r0, align 4
  store i32 %v1_ed8c, i32* %r3.global-to-local, align 4
  %v2_eda4 = add i32 %v3_ed9c, %v1_ed8c
  store i32 %v2_eda4, i32* @r4, align 4
  %v1_eda8 = call i32 @function_1663c(i32 %v3_ed9c)
  %v2_edb0 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_edb0, i32* %r2.global-to-local, align 4
  %v3_edb8 = trunc i32 %v1_eda8 to i8
  %v4_edb8 = call i32 @function_132ec(i8 %v3_edb8, i32 10, i32 %v2_edb0)
  %v0_edc0 = load i32, i32* @r4, align 4
  store i32 %v0_edc0, i32* @r0, align 4
  %v2_edc4 = inttoptr i32 %v0_edc0 to i8*
  %v3_edc4 = call i32 @function_12e14(i8* %v2_edc4, i32 %v4_edb8)
  %v0_edc8 = load i32, i32* @r5, align 4
  %v1_edcc = load i32, i32* @r4, align 4
  %v2_edcc = add i32 %v1_edcc, %v3_edc4
  store i32 %v2_edcc, i32* @r4, align 4
  %v2_edd4 = inttoptr i32 %v0_edc8 to i32*
  %v3_edd4 = call i32 @function_12498(i32 7, i32* %v2_edd4)
  %v0_eddc = load i32, i32* @r4, align 4
  store i32 %v0_eddc, i32* @r0, align 4
  %v2_ede0 = inttoptr i32 %v0_eddc to i8*
  %v3_ede0 = call i32 @function_12e14(i8* %v2_ede0, i32 %v3_edd4)
  %v0_ede4 = load i32, i32* @r5, align 4
  store i32 %v3_ede0, i32* @r6, align 4
  %v2_edf0 = call i32 @function_13ba8(i32 %v1_ed8c, i32 %v0_ede4)
  store i32 %v2_edf0, i32* @r0, align 4
  %v7_edf4 = icmp eq i32 %v2_edf0, -1
  br i1 %v7_edf4, label %dec_label_pc_ec70, label %dec_label_pc_edfc

dec_label_pc_edfc:                                ; preds = %dec_label_pc_ed38
  %v1_edfc = call i32 @function_165e8(i32 %v2_edf0)
  %v1_ee04 = call i32 @function_124bc(i32 6)
  %v1_ee0c = call i32 @function_124bc(i32 7)
  store i32 ptrtoint (i32* @global_var_23660.114 to i32), i32* %r3.global-to-local, align 4
  %v2_ee18 = load i32, i32* @global_var_23660.114, align 4
  store i32 4095, i32* @r2, align 4
  store i32 %v1_ed8c, i32* @r0, align 4
  %v3_ee24 = call i32 @function_166a4(i32 %v1_ed8c, i32 %v2_ee18, i32 4095)
  %v7_ee28 = icmp eq i32 %v3_ee24, -1
  br i1 %v7_ee28, label %.thread9, label %bb223

bb223:                                            ; preds = %dec_label_pc_edfc
  %v3_ee30 = load i32, i32* @global_var_23660.114, align 4
  store i32 %v3_ee30, i32* %r3.global-to-local, align 4
  %v1_ee34 = load i32, i32* @r5, align 4
  %v2_ee34 = trunc i32 %v1_ee34 to i8
  %v5_ee34 = add i32 %v3_ee30, %v3_ee24
  %v6_ee34 = inttoptr i32 %v5_ee34 to i8*
  store i8 %v2_ee34, i8* %v6_ee34, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_edfc, %bb223
  store i32 %v1_ed8c, i32* %r2.global-to-local, align 4
  %v0_ee3c = load i32, i32* @r6, align 4
  %v1_ee3c = load i32, i32* @r4, align 4
  %v1_ed8c.neg = sub i32 52, %v2_ed74
  %v2_ee3c = add i32 %v1_ed8c.neg, %v0_ee3c
  %v2_ee40 = add i32 %v2_ee3c, %v1_ee3c
  %v2_ee48 = call i32 @function_12e80(i32 %v1_ed8c, i32 %v2_ee40)
  %v0_ee4c = load i32, i32* @r7, align 4
  store i32 %v0_ee4c, i32* @r4, align 4
  %v0_ee50 = load i32, i32* @r5, align 4
  store i32 400, i32* @r5, align 4
  %v2_ef5c = ptrtoint i32* %stack_var_-156 to i32
  %v2_ef60 = bitcast i32* %stack_var_-156 to i8*
  %v2_efac = ptrtoint i32* %stack_var_-220 to i32
  %v2_efb0 = bitcast i32* %stack_var_-220 to i8*
  %v2_f17c = ptrtoint i32* %stack_var_-8412 to i32
  br label %dec_label_pc_ee58

dec_label_pc_ee58:                                ; preds = %dec_label_pc_ef20, %.thread9
  %stack_var_-8428.0 = phi i32 [ %v0_ee50, %.thread9 ], [ %stack_var_-8428.3, %dec_label_pc_ef20 ]
  %v1_ee5c = call i32 @function_1255c(i32 6)
  %v3_ee68 = call i32 @function_12498(i32 6, i32* null)
  store i32 %v3_ee68, i32* @r0, align 4
  %v1_ee6c = call i32 @function_13684(i32 %v3_ee68)
  store i32 %v1_ee6c, i32* @r8, align 4
  %v2_ee70 = icmp eq i32 %v1_ee6c, 0
  br i1 %v2_ee70, label %dec_label_pc_ec70, label %dec_label_pc_ee78

dec_label_pc_ee78:                                ; preds = %dec_label_pc_ee58
  %v1_ee7c = call i32 @function_124bc(i32 6)
  %v0_ee80119 = load i32, i32* @r8, align 4
  %v1_ee84120 = inttoptr i32 %v0_ee80119 to i32*
  %v2_ee84121 = call i32 @function_136d0(i32* %v1_ee84120)
  %v2_ee88123 = icmp eq i32 %v2_ee84121, 0
  br i1 %v2_ee88123, label %dec_label_pc_ef20, label %dec_label_pc_ee90.preheader

dec_label_pc_ee90.preheader:                      ; preds = %dec_label_pc_ee78, %dec_label_pc_ee80.backedge
  %v0_ee90134 = phi i32 [ %v2_ee84, %dec_label_pc_ee80.backedge ], [ %v2_ee84121, %dec_label_pc_ee78 ]
  %stack_var_-8428.1124 = phi i32 [ %stack_var_-8428.1.be, %dec_label_pc_ee80.backedge ], [ %stack_var_-8428.0, %dec_label_pc_ee78 ]
  br label %dec_label_pc_ee90

dec_label_pc_ee90:                                ; preds = %dec_label_pc_ee90.preheader, %dec_label_pc_ef08
  %v0_eea0 = phi i32 [ %v2_ef14, %dec_label_pc_ef08 ], [ %v0_ee90134, %dec_label_pc_ee90.preheader ]
  %stack_var_-8428.2 = phi i32 [ %v1_eeb4, %dec_label_pc_ef08 ], [ %stack_var_-8428.1124, %dec_label_pc_ee90.preheader ]
  %v1_ee90 = add i32 %v0_eea0, 19
  %v2_ee90 = inttoptr i32 %v1_ee90 to i8*
  %v3_ee90 = load i8, i8* %v2_ee90, align 1
  %v4_ee90 = zext i8 %v3_ee90 to i32
  %v1_ee94 = add nsw i32 %v4_ee90, -48
  store i32 %v1_ee94, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_ee94, 9
  br i1 %tmp, label %dec_label_pc_ee80.backedge, label %dec_label_pc_eea0

dec_label_pc_eea0:                                ; preds = %dec_label_pc_ee90
  store i32 %v1_ee90, i32* @r6, align 4
  store i32 %v1_ee90, i32* @r0, align 4
  %v1_eea8 = call i32 @function_15a00(i32 %v1_ee90)
  %v0_eeb0 = load i32, i32* @r5, align 4
  %v1_eeb4 = add i32 %stack_var_-8428.2, 1
  store i32 %v1_eeb4, i32* %r3.global-to-local, align 4
  store i32 %v1_eea8, i32* @r7, align 4
  %v5_eec0 = icmp slt i32 %v0_eeb0, %v1_eea8
  %v2_ef30 = call i32 @function_16598(i32* null)
  br i1 %v5_eec0, label %dec_label_pc_ef2c, label %dec_label_pc_eec4

dec_label_pc_eec4:                                ; preds = %dec_label_pc_eea0
  %v0_eecc = load i32, i32* @r4, align 4
  %v2_eecc = sub i32 %v2_ef30, %v0_eecc
  %v7_eed4 = icmp slt i32 %v2_eecc, 601
  br i1 %v7_eed4, label %dec_label_pc_eedc, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_eec4
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_ee80.backedge

dec_label_pc_eedc:                                ; preds = %dec_label_pc_eec4
  %v0_eedc = load i32, i32* @r7, align 4
  %v7_eee0 = icmp slt i32 %v0_eedc, 401
  br i1 %v7_eee0, label %dec_label_pc_ee80.backedge, label %dec_label_pc_eee4

dec_label_pc_eee4:                                ; preds = %dec_label_pc_eedc
  %v3_eeec = zext i32 %v1_eeb4 to i64
  %v4_eeec = mul nuw i64 %v3_eeec, 3435973837
  %v3_eef01 = udiv i64 %v4_eeec, 34359738368
  %v3_eef43 = mul nuw nsw i64 %v3_eef01, 8
  %v3_eef4 = trunc i64 %v3_eef43 to i32
  store i32 %v3_eef4, i32* %r3.global-to-local, align 4
  %v2_eef85 = mul nuw nsw i64 %v3_eef01, 2
  %v2_eef8 = trunc i64 %v2_eef85 to i32
  %v2_eefc = add i32 %v3_eef4, %v2_eef8
  store i32 %v2_eefc, i32* %r2.global-to-local, align 4
  %v9_ef00 = icmp eq i32 %v1_eeb4, %v2_eefc
  br i1 %v9_ef00, label %dec_label_pc_ef08, label %dec_label_pc_ee80.backedge

dec_label_pc_ef08:                                ; preds = %dec_label_pc_eee4
  %v1_ef0c = call i32 @function_166d4(i32 1)
  %v0_ef10 = load i32, i32* @r8, align 4
  %v1_ef14 = inttoptr i32 %v0_ef10 to i32*
  %v2_ef14 = call i32 @function_136d0(i32* %v1_ef14)
  %v2_ef18 = icmp eq i32 %v2_ef14, 0
  br i1 %v2_ef18, label %dec_label_pc_ef20, label %dec_label_pc_ee90

dec_label_pc_ef20:                                ; preds = %dec_label_pc_ee80.backedge, %dec_label_pc_ef08, %dec_label_pc_ee78
  %stack_var_-8428.3 = phi i32 [ %stack_var_-8428.0, %dec_label_pc_ee78 ], [ %v1_eeb4, %dec_label_pc_ef08 ], [ %stack_var_-8428.1.be, %dec_label_pc_ee80.backedge ]
  %v0_ef20 = load i32, i32* @r8, align 4
  %v1_ef24 = inttoptr i32 %v0_ef20 to i32*
  %v2_ef24 = call i32 @function_13654(i32* %v1_ef24)
  br label %dec_label_pc_ee58

dec_label_pc_ef2c:                                ; preds = %dec_label_pc_eea0
  %v1_ef3c = call i32 @function_1255c(i32 6)
  %v1_ef44 = call i32 @function_1255c(i32 7)
  %v3_ef50 = call i32 @function_12498(i32 6, i32* null)
  store i32 %v2_ef5c, i32* @r0, align 4
  %v3_ef60 = call i32 @function_12e14(i8* %v2_ef60, i32 %v3_ef50)
  store i32 %v2_ef5c, i32* %r2.global-to-local, align 4
  %v2_ef6c = add i32 %v3_ef60, %v2_ef5c
  %v0_ef70 = load i32, i32* @r6, align 4
  store i32 %v2_ef6c, i32* @r0, align 4
  %v2_ef78 = inttoptr i32 %v2_ef6c to i8*
  %v3_ef78 = call i32 @function_12e14(i8* %v2_ef78, i32 %v0_ef70)
  %v3_ef88 = call i32 @function_12498(i32 7, i32* null)
  %v2_ef90 = add i32 %v2_ef6c, %v3_ef78
  store i32 %v2_ef90, i32* @r0, align 4
  %v2_ef94 = inttoptr i32 %v2_ef90 to i8*
  %v3_ef94 = call i32 @function_12e14(i8* %v2_ef94, i32 %v3_ef88)
  %v3_efa0 = call i32 @function_12498(i32 6, i32* null)
  store i32 %v2_efac, i32* @r0, align 4
  %v3_efb0 = call i32 @function_12e14(i8* %v2_efb0, i32 %v3_efa0)
  store i32 %v2_efac, i32* %r3.global-to-local, align 4
  %v2_efbc = add i32 %v3_efb0, %v2_efac
  store i32 %v2_efbc, i32* @r5, align 4
  %v0_efc0 = load i32, i32* @r6, align 4
  store i32 %v2_efbc, i32* @r0, align 4
  %v2_efc8 = inttoptr i32 %v2_efbc to i8*
  %v3_efc8 = call i32 @function_12e14(i8* %v2_efc8, i32 %v0_efc0)
  store i32 %v3_efc8, i32* @r4, align 4
  %v3_efd8 = call i32 @function_12498(i32 11, i32* null)
  %v0_efe0 = load i32, i32* @r4, align 4
  %v1_efe0 = load i32, i32* @r5, align 4
  %v2_efe0 = add i32 %v1_efe0, %v0_efe0
  store i32 %v2_efe0, i32* @r0, align 4
  %v2_efe4 = inttoptr i32 %v2_efe0 to i8*
  %v3_efe4 = call i32 @function_12e14(i8* %v2_efe4, i32 %v3_efd8)
  %v1_efec = call i32 @function_124bc(i32 6)
  %v1_eff4 = call i32 @function_124bc(i32 7)
  store i32 %v2_ef5c, i32* @r0, align 4
  store i32 4095, i32* @r2, align 4
  %v3_f00c = call i32 @function_166a4(i32 %v2_ef5c, i32 %v1_ed8c, i32 4095)
  %v7_f010 = icmp eq i32 %v3_f00c, -1
  store i32 %v3_f00c, i32* @r5, align 4
  br i1 %v7_f010, label %dec_label_pc_f0d4, label %dec_label_pc_f01c

dec_label_pc_f01c:                                ; preds = %dec_label_pc_ef2c
  store i32 0, i32* @r4, align 4
  %v4_f028 = add i32 %v3_f00c, %v1_ed8c
  %v5_f028 = inttoptr i32 %v4_f028 to i8*
  store i8 0, i8* %v5_f028, align 1
  %v1_f02c = call i32 @function_1255c(i32 10)
  %v0_f030 = load i32, i32* @r4, align 4
  %v2_f038 = inttoptr i32 %v0_f030 to i32*
  %v3_f038 = call i32 @function_12498(i32 10, i32* %v2_f038)
  %v0_f03c = load i32, i32* @r5, align 4
  %v1_f03c = add i32 %v0_f03c, -1
  store i32 %v1_f03c, i32* @r1, align 4
  store i32 %v3_f038, i32* %r2.global-to-local, align 4
  %v4_f048 = call i32 @function_13148(i8* %v2_ed9c, i32 %v1_f03c, i32 %v3_f038)
  %v7_f04c = icmp eq i32 %v4_f048, -1
  br i1 %v7_f04c, label %dec_label_pc_f068, label %dec_label_pc_f054

dec_label_pc_f054:                                ; preds = %dec_label_pc_f01c
  store i32 %v1_ed8c, i32* @r0, align 4
  %v1_f058 = call i32 @function_16708(i32 %v1_ed8c)
  %v0_f05c = load i32, i32* @r7, align 4
  store i32 %v0_f05c, i32* @r0, align 4
  %v2_f064 = call i32 @function_158a0(i32 %v0_f05c, i32 9)
  br label %dec_label_pc_f068

dec_label_pc_f068:                                ; preds = %dec_label_pc_f01c, %dec_label_pc_f054
  %v1_f06c = call i32 @function_124bc(i32 10)
  store i32 %v1_f06c, i32* @r0, align 4
  %v1_f070 = call i32 @function_1663c(i32 %v1_f06c)
  store i32 %v1_f070, i32* @r0, align 4
  %v0_f074 = load i32, i32* @r7, align 4
  %v9_f074 = icmp eq i32 %v0_f074, %v1_f070
  br i1 %v9_f074, label %dec_label_pc_f0a0, label %dec_label_pc_f07c

dec_label_pc_f07c:                                ; preds = %dec_label_pc_f068
  %v0_f07c = call i32 @function_16650()
  %v0_f080 = load i32, i32* @r7, align 4
  %v9_f080 = icmp eq i32 %v0_f080, %v0_f07c
  br i1 %v9_f080, label %dec_label_pc_f0a0, label %dec_label_pc_f088

dec_label_pc_f088:                                ; preds = %dec_label_pc_f07c
  store i32 ptrtoint (i32* @global_var_23660.114 to i32), i32* %r2.global-to-local, align 4
  %v2_f090 = load i32, i32* @global_var_23660.114, align 4
  %v3_f094 = call i32 @function_131d8(i8* %v2_ed9c, i32 %v2_f090)
  %v2_f098 = icmp eq i32 %v3_f094, 0
  br i1 %v2_f098, label %dec_label_pc_f0ac, label %dec_label_pc_f088.dec_label_pc_f0a0_crit_edge

dec_label_pc_f088.dec_label_pc_f0a0_crit_edge:    ; preds = %dec_label_pc_f088
  %v0_f0a4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_f0a0

dec_label_pc_f0a0:                                ; preds = %dec_label_pc_f088.dec_label_pc_f0a0_crit_edge, %dec_label_pc_f07c, %dec_label_pc_f068
  %v0_f0a4 = phi i32 [ %v0_f0a4.pre, %dec_label_pc_f088.dec_label_pc_f0a0_crit_edge ], [ %v0_f07c, %dec_label_pc_f07c ], [ %v1_f070, %dec_label_pc_f068 ]
  store i32 %v2_ef30, i32* @r4, align 4
  store i32 %v0_f0a4, i32* @r5, align 4
  br label %dec_label_pc_ee80.backedge

dec_label_pc_ee80.backedge:                       ; preds = %dec_label_pc_eee4, %dec_label_pc_eedc, %dec_label_pc_ee90, %dec_label_pc_f0a0, %dec_label_pc_f360, %.thread10
  %stack_var_-8428.1.be = phi i32 [ %v1_eeb4, %dec_label_pc_f360 ], [ %v1_eeb4, %dec_label_pc_f0a0 ], [ %v1_eeb4, %.thread10 ], [ %stack_var_-8428.2, %dec_label_pc_ee90 ], [ %v1_eeb4, %dec_label_pc_eedc ], [ %v1_eeb4, %dec_label_pc_eee4 ]
  %v0_ee80 = load i32, i32* @r8, align 4
  %v1_ee84 = inttoptr i32 %v0_ee80 to i32*
  %v2_ee84 = call i32 @function_136d0(i32* %v1_ee84)
  %v2_ee88 = icmp eq i32 %v2_ee84, 0
  br i1 %v2_ee88, label %dec_label_pc_ef20, label %dec_label_pc_ee90.preheader

dec_label_pc_f0ac:                                ; preds = %dec_label_pc_f088
  %v2_f0b4 = call i32 @function_13ba8(i32 %v1_ed8c, i32 0)
  %v7_f0b8 = icmp eq i32 %v2_f0b4, -1
  store i32 %v2_f0b4, i32* @r4, align 4
  br i1 %v7_f0b8, label %bb224, label %.thread12

bb224:                                            ; preds = %dec_label_pc_f0ac
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_f0ac, %bb224
  store i32 ptrtoint (i32* @global_var_f0cc.117 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_f0b8, i32 ptrtoint (i32* @global_var_158a0.116 to i32))
  %v0_f0cc = load i32, i32* @r4, align 4
  store i32 %v0_f0cc, i32* @r0, align 4
  %v1_f0d0 = call i32 @function_165e8(i32 %v0_f0cc)
  br label %dec_label_pc_f0d4

dec_label_pc_f0d4:                                ; preds = %dec_label_pc_ef2c, %.thread12
  %v2_f0e0 = call i32 @function_13ba8(i32 %v2_ef5c, i32 0)
  %v7_f0e4 = icmp eq i32 %v2_f0e0, -1
  br i1 %v7_f0e4, label %dec_label_pc_f360, label %dec_label_pc_f0f0

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f0d4
  %v1_f0f4 = call i32 @function_1255c(i32 12)
  %v1_f0fc = call i32 @function_1255c(i32 13)
  %v1_f104 = call i32 @function_1255c(i32 14)
  %v1_f10c = call i32 @function_1255c(i32 15)
  %v1_f114 = call i32 @function_1255c(i32 16)
  %v3_f124 = call i32 @function_12498(i32 12, i32* nonnull %stack_var_-44)
  store i32 %v3_f124, i32* @r6, align 4
  %v3_f138 = call i32 @function_12498(i32 13, i32* nonnull %stack_var_-48)
  store i32 %v3_f138, i32* @sl, align 4
  %v3_f14c = call i32 @function_12498(i32 14, i32* nonnull %stack_var_-52)
  store i32 %v3_f14c, i32* @sb, align 4
  %v3_f15c = call i32 @function_12498(i32 15, i32* nonnull %stack_var_-56)
  store i32 %v3_f15c, i32* @fp, align 4
  %v3_f170 = call i32 @function_12498(i32 16, i32* nonnull %stack_var_-60)
  store i32 %v2_f17c, i32* @r4, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v3_f18c116 = call i32 @function_16664(i32 %v2_f0e0, i32 %v2_f17c, i32 4096)
  %tmp225 = icmp slt i32 %v3_f18c116, 1
  br i1 %tmp225, label %dec_label_pc_f394, label %dec_label_pc_f198

dec_label_pc_f198:                                ; preds = %dec_label_pc_f0f0, %dec_label_pc_f180.backedge
  %v0_f220107 = phi i32 [ %v3_f18c, %dec_label_pc_f180.backedge ], [ %v3_f18c116, %dec_label_pc_f0f0 ]
  store i32 %v2_ec80, i32* %r3.global-to-local, align 4
  %v3_f19c = load i32, i32* %stack_var_-44, align 4
  %v5_f1a4 = icmp slt i32 %v0_f220107, %v3_f19c
  br i1 %v5_f1a4, label %dec_label_pc_f1b4, label %dec_label_pc_f260.lr.ph

dec_label_pc_f260.lr.ph:                          ; preds = %dec_label_pc_f198
  %v0_f260.pre = load i32, i32* @r6, align 4
  %v1_f264.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f260

dec_label_pc_f1b4:                                ; preds = %dec_label_pc_f258.backedge, %dec_label_pc_f198
  %v3_f1b8 = load i32, i32* %stack_var_-48, align 4
  %v5_f1c0 = icmp slt i32 %v0_f220107, %v3_f1b8
  br i1 %v5_f1c0, label %dec_label_pc_f1d0, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_f1b4
  %v2_f28c82 = icmp eq i32 %v0_f220107, 0
  br i1 %v2_f28c82, label %dec_label_pc_f1d0, label %dec_label_pc_f294.lr.ph

dec_label_pc_f294.lr.ph:                          ; preds = %.thread28
  %v0_f294.pre = load i32, i32* @sl, align 4
  %v1_f298.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f294

dec_label_pc_f1d0:                                ; preds = %dec_label_pc_f28c.backedge, %.thread28, %dec_label_pc_f1b4
  store i32 %v2_ec80, i32* %r2.global-to-local, align 4
  %v3_f1d4 = load i32, i32* %stack_var_-52, align 4
  %v5_f1dc = icmp slt i32 %v0_f220107, %v3_f1d4
  br i1 %v5_f1dc, label %dec_label_pc_f1ec, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_f1d0
  %v2_f2c091 = icmp eq i32 %v0_f220107, 0
  br i1 %v2_f2c091, label %dec_label_pc_f1ec, label %dec_label_pc_f2c8.lr.ph

dec_label_pc_f2c8.lr.ph:                          ; preds = %.thread37
  %v0_f2c8.pre = load i32, i32* @sb, align 4
  %v1_f2cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f2c8

dec_label_pc_f1ec:                                ; preds = %dec_label_pc_f2c0.backedge, %.thread37, %dec_label_pc_f1d0
  store i32 %v2_ec80, i32* %r3.global-to-local, align 4
  %v3_f1f0 = load i32, i32* %stack_var_-56, align 4
  %v5_f1f8 = icmp slt i32 %v0_f220107, %v3_f1f0
  br i1 %v5_f1f8, label %dec_label_pc_f208, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_f1ec
  %v2_f2f4100 = icmp eq i32 %v0_f220107, 0
  br i1 %v2_f2f4100, label %dec_label_pc_f208, label %dec_label_pc_f2fc.lr.ph

dec_label_pc_f2fc.lr.ph:                          ; preds = %.thread46
  %v0_f2fc.pre = load i32, i32* @fp, align 4
  %v1_f300.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f2fc

dec_label_pc_f208:                                ; preds = %dec_label_pc_f2f4.backedge, %.thread46, %dec_label_pc_f1ec
  %v3_f20c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_f20c, i32* @lr, align 4
  %v5_f214 = icmp slt i32 %v0_f220107, %v3_f20c
  br i1 %v5_f214, label %dec_label_pc_f180.backedge, label %.thread52

dec_label_pc_f180.backedge:                       ; preds = %dec_label_pc_f240, %.thread52, %dec_label_pc_f208
  store i32 4096, i32* %r2.global-to-local, align 4
  %v3_f18c = call i32 @function_16664(i32 %v2_f0e0, i32 %v2_f17c, i32 4096)
  %tmp226 = icmp slt i32 %v3_f18c, 1
  br i1 %tmp226, label %dec_label_pc_f394, label %dec_label_pc_f198

.thread52:                                        ; preds = %dec_label_pc_f208
  %v2_f220109 = icmp eq i32 %v0_f220107, 0
  br i1 %v2_f220109, label %dec_label_pc_f180.backedge, label %dec_label_pc_f228.lr.ph

dec_label_pc_f228.lr.ph:                          ; preds = %.thread52
  %v1_f230.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f228

dec_label_pc_f228:                                ; preds = %dec_label_pc_f240, %dec_label_pc_f228.lr.ph
  %v0_f220.in = phi i32 [ %v0_f220107, %dec_label_pc_f228.lr.ph ], [ %v0_f220, %dec_label_pc_f240 ]
  %v0_f240 = phi i32 [ 0, %dec_label_pc_f228.lr.ph ], [ %v1_f240, %dec_label_pc_f240 ]
  %v1_f22c = phi i32 [ 0, %dec_label_pc_f228.lr.ph ], [ %v1_f22c174, %dec_label_pc_f240 ]
  %v0_f220 = add i32 %v0_f220.in, -1
  store i32 %v3_f170, i32* %r3.global-to-local, align 4
  %v2_f22c = add i32 %v1_f22c, %v3_f170
  %v3_f22c = inttoptr i32 %v2_f22c to i8*
  %v4_f22c = load i8, i8* %v3_f22c, align 1
  %v6_f22c = zext i8 %v4_f22c to i32
  store i32 %v6_f22c, i32* %r2.global-to-local, align 4
  %v2_f230 = add i32 %v0_f240, %v1_f230.pre
  %v3_f230 = inttoptr i32 %v2_f230 to i8*
  %v4_f230 = load i8, i8* %v3_f230, align 1
  %v6_f230 = zext i8 %v4_f230 to i32
  store i32 %v6_f230, i32* %r3.global-to-local, align 4
  %v9_f234 = icmp eq i8 %v4_f230, %v4_f22c
  br i1 %v9_f234, label %dec_label_pc_f318, label %bb227

bb227:                                            ; preds = %dec_label_pc_f228
  br label %dec_label_pc_f240

dec_label_pc_f240:                                ; preds = %bb227, %dec_label_pc_f318
  %v1_f22c174 = phi i32 [ %v1_f318, %dec_label_pc_f318 ], [ 0, %bb227 ]
  %v1_f240 = add i32 %v0_f240, 1
  %v2_f220 = icmp eq i32 %v0_f220, 0
  br i1 %v2_f220, label %dec_label_pc_f180.backedge, label %dec_label_pc_f228

dec_label_pc_f248:                                ; preds = %dec_label_pc_f260
  %v1_f248 = add i32 %v1_f260, 1
  store i32 %v1_f248, i32* @lr, align 4
  %v9_f24c = icmp eq i32 %v3_f19c, %v1_f248
  br i1 %v9_f24c, label %dec_label_pc_f324, label %dec_label_pc_f258.backedge

dec_label_pc_f258.backedge:                       ; preds = %dec_label_pc_f248, %dec_label_pc_f274
  %v1_f260139 = phi i32 [ 0, %dec_label_pc_f274 ], [ %v1_f248, %dec_label_pc_f248 ]
  %storemerge127 = add i32 %storemerge127.in, 1
  %v2_f258 = icmp eq i32 %v0_f258, 0
  br i1 %v2_f258, label %dec_label_pc_f1b4, label %dec_label_pc_f260

dec_label_pc_f260:                                ; preds = %dec_label_pc_f258.backedge, %dec_label_pc_f260.lr.ph
  %v0_f258.in = phi i32 [ %v0_f220107, %dec_label_pc_f260.lr.ph ], [ %v0_f258, %dec_label_pc_f258.backedge ]
  %storemerge127.in = phi i32 [ 0, %dec_label_pc_f260.lr.ph ], [ %storemerge127, %dec_label_pc_f258.backedge ]
  %v1_f260 = phi i32 [ 0, %dec_label_pc_f260.lr.ph ], [ %v1_f260139, %dec_label_pc_f258.backedge ]
  %v0_f258 = add i32 %v0_f258.in, -1
  %v2_f260 = add i32 %v1_f260, %v0_f260.pre
  %v3_f260 = inttoptr i32 %v2_f260 to i8*
  %v4_f260 = load i8, i8* %v3_f260, align 1
  %v6_f260 = zext i8 %v4_f260 to i32
  store i32 %v6_f260, i32* %r2.global-to-local, align 4
  %v2_f264 = add i32 %storemerge127.in, %v1_f264.pre
  %v3_f264 = inttoptr i32 %v2_f264 to i8*
  %v4_f264 = load i8, i8* %v3_f264, align 1
  %v6_f264 = zext i8 %v4_f264 to i32
  store i32 %v6_f264, i32* %r3.global-to-local, align 4
  %v9_f268 = icmp eq i8 %v4_f264, %v4_f260
  br i1 %v9_f268, label %dec_label_pc_f248, label %dec_label_pc_f274

dec_label_pc_f274:                                ; preds = %dec_label_pc_f260
  br label %dec_label_pc_f258.backedge

dec_label_pc_f27c:                                ; preds = %dec_label_pc_f294
  %v1_f27c = add i32 %v1_f294, 1
  store i32 %v1_f27c, i32* @lr, align 4
  %v9_f280 = icmp eq i32 %v3_f1b8, %v1_f27c
  br i1 %v9_f280, label %dec_label_pc_f324, label %dec_label_pc_f28c.backedge

dec_label_pc_f28c.backedge:                       ; preds = %dec_label_pc_f27c, %dec_label_pc_f2a8
  %v1_f294148 = phi i32 [ 0, %dec_label_pc_f2a8 ], [ %v1_f27c, %dec_label_pc_f27c ]
  %storemerge126 = add i32 %storemerge126.in, 1
  %v2_f28c = icmp eq i32 %v0_f28c, 0
  br i1 %v2_f28c, label %dec_label_pc_f1d0, label %dec_label_pc_f294

dec_label_pc_f294:                                ; preds = %dec_label_pc_f28c.backedge, %dec_label_pc_f294.lr.ph
  %v0_f28c.in = phi i32 [ %v0_f220107, %dec_label_pc_f294.lr.ph ], [ %v0_f28c, %dec_label_pc_f28c.backedge ]
  %storemerge126.in = phi i32 [ 0, %dec_label_pc_f294.lr.ph ], [ %storemerge126, %dec_label_pc_f28c.backedge ]
  %v1_f294 = phi i32 [ 0, %dec_label_pc_f294.lr.ph ], [ %v1_f294148, %dec_label_pc_f28c.backedge ]
  %v0_f28c = add i32 %v0_f28c.in, -1
  %v2_f294 = add i32 %v1_f294, %v0_f294.pre
  %v3_f294 = inttoptr i32 %v2_f294 to i8*
  %v4_f294 = load i8, i8* %v3_f294, align 1
  %v6_f294 = zext i8 %v4_f294 to i32
  store i32 %v6_f294, i32* %r2.global-to-local, align 4
  %v2_f298 = add i32 %storemerge126.in, %v1_f298.pre
  %v3_f298 = inttoptr i32 %v2_f298 to i8*
  %v4_f298 = load i8, i8* %v3_f298, align 1
  %v6_f298 = zext i8 %v4_f298 to i32
  store i32 %v6_f298, i32* %r3.global-to-local, align 4
  %v9_f29c = icmp eq i8 %v4_f298, %v4_f294
  br i1 %v9_f29c, label %dec_label_pc_f27c, label %dec_label_pc_f2a8

dec_label_pc_f2a8:                                ; preds = %dec_label_pc_f294
  br label %dec_label_pc_f28c.backedge

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f2c8
  %v1_f2b0 = add i32 %v1_f2c8, 1
  store i32 %v1_f2b0, i32* @lr, align 4
  %v9_f2b4 = icmp eq i32 %v3_f1d4, %v1_f2b0
  br i1 %v9_f2b4, label %dec_label_pc_f324, label %dec_label_pc_f2c0.backedge

dec_label_pc_f2c0.backedge:                       ; preds = %dec_label_pc_f2b0, %dec_label_pc_f2dc
  %v1_f2c8157 = phi i32 [ 0, %dec_label_pc_f2dc ], [ %v1_f2b0, %dec_label_pc_f2b0 ]
  %storemerge125 = add i32 %storemerge125.in, 1
  %v2_f2c0 = icmp eq i32 %v0_f2c0, 0
  br i1 %v2_f2c0, label %dec_label_pc_f1ec, label %dec_label_pc_f2c8

dec_label_pc_f2c8:                                ; preds = %dec_label_pc_f2c0.backedge, %dec_label_pc_f2c8.lr.ph
  %v0_f2c0.in = phi i32 [ %v0_f220107, %dec_label_pc_f2c8.lr.ph ], [ %v0_f2c0, %dec_label_pc_f2c0.backedge ]
  %storemerge125.in = phi i32 [ 0, %dec_label_pc_f2c8.lr.ph ], [ %storemerge125, %dec_label_pc_f2c0.backedge ]
  %v1_f2c8 = phi i32 [ 0, %dec_label_pc_f2c8.lr.ph ], [ %v1_f2c8157, %dec_label_pc_f2c0.backedge ]
  %v0_f2c0 = add i32 %v0_f2c0.in, -1
  %v2_f2c8 = add i32 %v1_f2c8, %v0_f2c8.pre
  %v3_f2c8 = inttoptr i32 %v2_f2c8 to i8*
  %v4_f2c8 = load i8, i8* %v3_f2c8, align 1
  %v6_f2c8 = zext i8 %v4_f2c8 to i32
  store i32 %v6_f2c8, i32* %r2.global-to-local, align 4
  %v2_f2cc = add i32 %storemerge125.in, %v1_f2cc.pre
  %v3_f2cc = inttoptr i32 %v2_f2cc to i8*
  %v4_f2cc = load i8, i8* %v3_f2cc, align 1
  %v6_f2cc = zext i8 %v4_f2cc to i32
  store i32 %v6_f2cc, i32* %r3.global-to-local, align 4
  %v9_f2d0 = icmp eq i8 %v4_f2cc, %v4_f2c8
  br i1 %v9_f2d0, label %dec_label_pc_f2b0, label %dec_label_pc_f2dc

dec_label_pc_f2dc:                                ; preds = %dec_label_pc_f2c8
  br label %dec_label_pc_f2c0.backedge

dec_label_pc_f2e4:                                ; preds = %dec_label_pc_f2fc
  %v1_f2e4 = add i32 %v1_f2fc, 1
  store i32 %v1_f2e4, i32* @lr, align 4
  %v9_f2e8 = icmp eq i32 %v3_f1f0, %v1_f2e4
  br i1 %v9_f2e8, label %dec_label_pc_f324, label %dec_label_pc_f2f4.backedge

dec_label_pc_f2f4.backedge:                       ; preds = %dec_label_pc_f2e4, %dec_label_pc_f310
  %v1_f2fc166 = phi i32 [ 0, %dec_label_pc_f310 ], [ %v1_f2e4, %dec_label_pc_f2e4 ]
  %storemerge = add i32 %storemerge.in, 1
  %v2_f2f4 = icmp eq i32 %v0_f2f4, 0
  br i1 %v2_f2f4, label %dec_label_pc_f208, label %dec_label_pc_f2fc

dec_label_pc_f2fc:                                ; preds = %dec_label_pc_f2f4.backedge, %dec_label_pc_f2fc.lr.ph
  %v0_f2f4.in = phi i32 [ %v0_f220107, %dec_label_pc_f2fc.lr.ph ], [ %v0_f2f4, %dec_label_pc_f2f4.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_f2fc.lr.ph ], [ %storemerge, %dec_label_pc_f2f4.backedge ]
  %v1_f2fc = phi i32 [ 0, %dec_label_pc_f2fc.lr.ph ], [ %v1_f2fc166, %dec_label_pc_f2f4.backedge ]
  %v0_f2f4 = add i32 %v0_f2f4.in, -1
  %v2_f2fc = add i32 %v1_f2fc, %v0_f2fc.pre
  %v3_f2fc = inttoptr i32 %v2_f2fc to i8*
  %v4_f2fc = load i8, i8* %v3_f2fc, align 1
  %v6_f2fc = zext i8 %v4_f2fc to i32
  store i32 %v6_f2fc, i32* %r2.global-to-local, align 4
  %v2_f300 = add i32 %storemerge.in, %v1_f300.pre
  %v3_f300 = inttoptr i32 %v2_f300 to i8*
  %v4_f300 = load i8, i8* %v3_f300, align 1
  %v6_f300 = zext i8 %v4_f300 to i32
  store i32 %v6_f300, i32* %r3.global-to-local, align 4
  %v9_f304 = icmp eq i8 %v4_f300, %v4_f2fc
  br i1 %v9_f304, label %dec_label_pc_f2e4, label %dec_label_pc_f310

dec_label_pc_f310:                                ; preds = %dec_label_pc_f2fc
  br label %dec_label_pc_f2f4.backedge

dec_label_pc_f318:                                ; preds = %dec_label_pc_f228
  %v1_f318 = add i32 %v1_f22c, 1
  %v9_f31c = icmp eq i32 %v3_f20c, %v1_f318
  br i1 %v9_f31c, label %dec_label_pc_f324, label %dec_label_pc_f240

dec_label_pc_f324:                                ; preds = %dec_label_pc_f248, %dec_label_pc_f27c, %dec_label_pc_f2b0, %dec_label_pc_f2e4, %dec_label_pc_f318
  %v1_f328 = call i32 @function_124bc(i32 12)
  %v1_f330 = call i32 @function_124bc(i32 13)
  %v1_f338 = call i32 @function_124bc(i32 14)
  %v1_f340 = call i32 @function_124bc(i32 15)
  %v1_f348 = call i32 @function_124bc(i32 16)
  store i32 %v2_f0e0, i32* @r0, align 4
  %v1_f350 = call i32 @function_165e8(i32 %v2_f0e0)
  %v0_f354 = load i32, i32* @r7, align 4
  store i32 %v0_f354, i32* @r0, align 4
  %v2_f35c = call i32 @function_158a0(i32 %v0_f354, i32 9)
  br label %dec_label_pc_f360

dec_label_pc_f360:                                ; preds = %dec_label_pc_f0d4, %dec_label_pc_f394, %dec_label_pc_f324
  %v2_f36c = call i32 @function_12e80(i32 %v2_ef5c, i32 64)
  %v2_f37c = call i32 @function_12e80(i32 %v2_efac, i32 64)
  %v1_f384 = call i32 @function_166d4(i32 1)
  store i32 %v2_ef30, i32* @r4, align 4
  %v0_f38c = load i32, i32* @r7, align 4
  store i32 %v0_f38c, i32* @r5, align 4
  br label %dec_label_pc_ee80.backedge

dec_label_pc_f394:                                ; preds = %dec_label_pc_f180.backedge, %dec_label_pc_f0f0
  %v1_f398 = call i32 @function_124bc(i32 12)
  %v1_f3a0 = call i32 @function_124bc(i32 13)
  %v1_f3a8 = call i32 @function_124bc(i32 14)
  %v1_f3b0 = call i32 @function_124bc(i32 15)
  %v1_f3b8 = call i32 @function_124bc(i32 16)
  store i32 %v2_f0e0, i32* @r0, align 4
  %v1_f3c0 = call i32 @function_165e8(i32 %v2_f0e0)
  br label %dec_label_pc_f360

; uselistorder directives
  uselistorder i32 %v1_f318, { 1, 0 }
  uselistorder i32 %v1_f22c, { 1, 0 }
  uselistorder i32 %v0_f240, { 1, 0 }
  uselistorder i32 %v3_f18c, { 1, 0 }
  uselistorder i32 %v0_f220107, { 2, 1, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %v2_f0e0, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i1 %v7_f0b8, { 1, 0 }
  uselistorder i32 %v2_f0b4, { 1, 0 }
  uselistorder i32 %v2_ee84, { 1, 0 }
  uselistorder i32 %stack_var_-8428.1.be, { 1, 0 }
  uselistorder i32 %v3_f00c, { 1, 2, 0 }
  uselistorder i32 %v2_ef14, { 1, 0 }
  uselistorder i32 %v1_eeb4, { 0, 1, 5, 4, 3, 2, 6, 8, 9, 7 }
  uselistorder i32 %v1_ee90, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-8428.0, { 1, 0 }
  uselistorder i32 %v2_f17c, { 1, 0, 2 }
  uselistorder i32 %v2_efac, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ef5c, { 1, 2, 4, 3, 0, 5, 6 }
  uselistorder i32 %v3_ee24, { 1, 0 }
  uselistorder i32 %v2_edf0, { 2, 0, 3, 1 }
  uselistorder i32 %v3_ed9c, { 1, 0, 2 }
  uselistorder i32 %v1_ed8c, { 4, 3, 2, 0, 5, 7, 6, 9, 8, 10, 1, 11, 12, 13, 14 }
  uselistorder i32 %v3_ed0c, { 1, 2, 0 }
  uselistorder i32 %v3_ecb8, { 1, 2, 0 }
  uselistorder i32 %storemerge184, { 1, 0 }
  uselistorder i32 %v0_ec44, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 19, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i8*, i32, i32)* @function_13148, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 (i32*)* @function_136d0, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @function_13684, { 2, 1, 0 }
  uselistorder i32 52, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_166a4, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_23660.114, { 2, 0, 3, 1, 4 }
  uselistorder i32* @global_var_23664.106, { 0, 2, 1 }
  uselistorder label %dec_label_pc_f360, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f324, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f2f4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_f2c0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_f28c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_f258.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_f240, { 1, 0 }
  uselistorder label %dec_label_pc_f198, { 1, 0 }
  uselistorder label %dec_label_pc_f0d4, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_ee80.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_f068, { 1, 0 }
  uselistorder label %dec_label_pc_ee90, { 1, 0 }
  uselistorder label %dec_label_pc_ee90.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_ed38, { 1, 0 }
  uselistorder label %dec_label_pc_ece4, { 1, 0 }
}

define i32 @function_f3d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f3d8:
  store i32 ptrtoint (i32* @global_var_f570.119 to i32), i32* @global_var_23040.121, align 4
  ret i32 %arg1
}

define i32 @function_f3f0() local_unnamed_addr {
dec_label_pc_f3f0:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_f3f0 = load i32, i32* @r4, align 4
  %v6_f3f0 = load i32, i32* @r5, align 4
  %v9_f3f0 = load i32, i32* @r6, align 4
  %v12_f3f0 = load i32, i32* @r7, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_f40c = call i32 @function_1561c(i32 2, i32 1, i32 0)
  store i32 %v3_f40c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23038.123 to i32), i32* @r6, align 4
  %v7_f414 = icmp eq i32 %v3_f40c, -1
  store i32 %v3_f40c, i32* @global_var_23038.123, align 4
  br i1 %v7_f414, label %dec_label_pc_f4c8, label %dec_label_pc_f420

dec_label_pc_f420:                                ; preds = %dec_label_pc_f3f0
  %v2_f420 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_f420, i32* @r3, align 4
  %v0_f424 = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  store i32 2, i32* @r2, align 4
  %v5_f434 = call i32 @function_155ac(i32 %v3_f40c, i32 %v0_f424, i32 2, i32 %v2_f420, i32 4)
  %v2_f438 = load i32, i32* @global_var_23038.123, align 4
  store i32 %v2_f438, i32* @r4, align 4
  %v3_f448 = call i32 @function_13a30(i32 %v2_f438, i32 3, i32 0)
  store i32 ptrtoint (i8** @global_var_23044.125 to i32), i32* @r7, align 4
  %v1_f450 = or i32 %v3_f448, 2048
  %v0_f454 = load i32, i32* @r5, align 4
  %v0_f458 = load i32, i32* @r4, align 4
  %v3_f45c = call i32 @function_13a30(i32 %v0_f458, i32 %v0_f454, i32 %v1_f450)
  %v2_f460 = load i8, i8* bitcast (i8** @global_var_23044.125 to i8*), align 4
  %v2_f464 = icmp eq i8 %v2_f460, 0
  store i32 2, i32* %stack_var_-44, align 4
  br i1 %v2_f464, label %dec_label_pc_f474, label %dec_label_pc_f4d4

dec_label_pc_f474:                                ; preds = %dec_label_pc_f420
  br label %dec_label_pc_f47c

dec_label_pc_f47c:                                ; preds = %dec_label_pc_f4d4, %dec_label_pc_f474
  %v1_f488 = call i32 @function_15314(i32 48101)
  %v0_f490 = call i32 @function_13994()
  store i32 0, i32* @r4, align 4
  %v2_f498 = inttoptr i32 %v0_f490 to i32*
  store i32 0, i32* %v2_f498, align 4
  %v2_f49c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_f49c, i32* @r5, align 4
  %v2_f4a0 = load i32, i32* @global_var_23038.123, align 4
  store i32 16, i32* @r2, align 4
  %v3_f4ac = call i32 @function_15238(i32 %v2_f4a0, i32 %v2_f49c, i32 16)
  %v7_f4b0 = icmp eq i32 %v3_f4ac, -1
  br i1 %v7_f4b0, label %dec_label_pc_f4e8, label %dec_label_pc_f4b8

dec_label_pc_f4b8:                                ; preds = %dec_label_pc_f47c
  %v2_f4c0 = load i32, i32* @global_var_23038.123, align 4
  store i32 %v2_f4c0, i32* @r0, align 4
  %v2_f4c4 = call i32 @function_15470(i32 %v2_f4c0, i32 1)
  br label %dec_label_pc_f4c8

dec_label_pc_f4c8:                                ; preds = %dec_label_pc_f3f0, %dec_label_pc_f4f8, %dec_label_pc_f4b8
  %v1_f4d0 = phi i32 [ %v3_f40c, %dec_label_pc_f3f0 ], [ %v0_f548, %dec_label_pc_f4f8 ], [ %v2_f4c4, %dec_label_pc_f4b8 ]
  store i32 %v3_f3f0, i32* @r4, align 4
  store i32 %v6_f3f0, i32* @r5, align 4
  store i32 %v9_f3f0, i32* @r6, align 4
  store i32 %v12_f3f0, i32* @r7, align 4
  ret i32 %v1_f4d0

dec_label_pc_f4d4:                                ; preds = %dec_label_pc_f420
  %v1_f4dc = call i32 @function_152f0(i32 2130706433)
  br label %dec_label_pc_f47c

dec_label_pc_f4e8:                                ; preds = %dec_label_pc_f47c
  %v0_f4e8 = call i32 @function_13994()
  %v1_f4ec = inttoptr i32 %v0_f4e8 to i32*
  %v2_f4ec = load i32, i32* %v1_f4ec, align 4
  %v7_f4f0 = icmp eq i32 %v2_f4ec, 99
  br i1 %v7_f4f0, label %dec_label_pc_f550, label %dec_label_pc_f4f8

dec_label_pc_f4f8:                                ; preds = %dec_label_pc_f550, %bb, %dec_label_pc_f4e8
  store i32 2, i32* %stack_var_-44, align 4
  %v1_f510 = call i32 @function_15314(i32 48101)
  %v2_f520 = load i32, i32* @global_var_23038.123, align 4
  %v3_f524 = call i32 @function_15260(i32 %v2_f520, i32 %v2_f49c, i32 16)
  %v1_f52c = call i32 @function_166d4(i32 5)
  %v2_f530 = load i32, i32* @global_var_23038.123, align 4
  store i32 %v2_f530, i32* @r0, align 4
  %v1_f534 = call i32 @function_165e8(i32 %v2_f530)
  %v1_f540 = call i32 @function_15314(i32 48101)
  %v1_f544 = call i32 @function_e6c8(i32 %v1_f540)
  %v0_f548 = call i32 @function_f3f0()
  br label %dec_label_pc_f4c8

dec_label_pc_f550:                                ; preds = %dec_label_pc_f4e8
  %v2_f550 = load i8, i8* bitcast (i8** @global_var_23044.125 to i8*), align 4
  %v3_f550 = zext i8 %v2_f550 to i32
  %v1_f554 = load i32, i32* @r4, align 4
  %v9_f554 = icmp eq i32 %v3_f550, %v1_f554
  br i1 %v9_f554, label %dec_label_pc_f4f8, label %bb

bb:                                               ; preds = %dec_label_pc_f550
  %v2_f55c = trunc i32 %v1_f554 to i8
  store i8 %v2_f55c, i8* bitcast (i8** @global_var_23044.125 to i8*), align 4
  br label %dec_label_pc_f4f8

; uselistorder directives
  uselistorder i32 %v3_f40c, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_e6c8, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_15470, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_15238, { 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_23044.125 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_23044.125, { 1, 0 }
  uselistorder i32* @global_var_23038.123, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_f4f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f4c8, { 1, 2, 0 }
}

define i32 @function_f570(i32 %arg1) local_unnamed_addr {
dec_label_pc_f570:
  %v1_f578 = call i32 @function_1255c(i32 3)
  %v3_f584 = call i32 @function_12498(i32 3, i32* null)
  %v1_f588 = call i32 @function_1033c(i32 %v3_f584)
  store i32 %v1_f588, i32* @r6, align 4
  %v1_f594 = call i32 @function_124bc(i32 3)
  %v0_f598 = load i32, i32* @r6, align 4
  %v2_f598 = icmp eq i32 %v0_f598, 0
  br i1 %v2_f598, label %dec_label_pc_f5e8, label %dec_label_pc_f5a0

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f570
  %v1_f5a0 = add i32 %v0_f598, 4
  %v2_f5a0 = inttoptr i32 %v1_f5a0 to i32*
  %v3_f5a0 = load i32, i32* %v2_f5a0, align 4
  store i32 %v3_f5a0, i32* @r4, align 4
  %v0_f5a4 = call i32 @function_10038()
  %v0_f5a8 = load i32, i32* @r6, align 4
  %v1_f5a8 = inttoptr i32 %v0_f5a8 to i8*
  %v2_f5a8 = load i8, i8* %v1_f5a8, align 1
  %v3_f5a8 = zext i8 %v2_f5a8 to i32
  %v2_f5ac = call i32 @function_134e4(i32 %v0_f5a4, i32 %v3_f5a8)
  store i32 ptrtoint (i16** @global_var_23668.128 to i32), i32* @r5, align 4
  %v0_f5b4 = load i32, i32* @r4, align 4
  %v4_f5b4 = mul nuw nsw i32 %v3_f5a8, 4
  %v5_f5b4 = add i32 %v0_f5b4, %v4_f5b4
  %v6_f5b4 = inttoptr i32 %v5_f5b4 to i32*
  %v7_f5b4 = load i32, i32* %v6_f5b4, align 4
  %v0_f5b8 = load i32, i32* @r6, align 4
  store i32 %v7_f5b4, i32* @global_var_2366c.129, align 4
  %v1_f5c0 = call i32 @function_10314(i32 %v0_f5b8)
  %v1_f5c8 = call i32 @function_1255c(i32 4)
  %v3_f5d4 = call i32 @function_12498(i32 4, i32* null)
  %v4_f5d4 = inttoptr i32 %v3_f5d4 to i16*
  %v3_f5d8 = load i16, i16* %v4_f5d4, align 2
  store i16 %v3_f5d8, i16* bitcast (i32* @global_var_2366a.130 to i16*), align 4
  %v1_f5e4 = call i32 @function_124bc(i32 4)
  br label %dec_label_pc_f5e8

dec_label_pc_f5e8:                                ; preds = %dec_label_pc_f570, %dec_label_pc_f5a0
  %v1_f5ec = phi i32 [ %v1_f594, %dec_label_pc_f570 ], [ %v1_f5e4, %dec_label_pc_f5a0 ]
  ret i32 %v1_f5ec

; uselistorder directives
  uselistorder label %dec_label_pc_f5e8, { 1, 0 }
}

define i32 @function_f5f4(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_f5f4:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-76 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-142 = alloca i32, align 4
  %stack_var_-174 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-110 = alloca i8, align 1
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %v9_f5f4 = load i32, i32* @r6, align 4
  %v2_f604 = ptrtoint i32* %stack_var_-340 to i32
  store i32 %v2_f604, i32* @r4, align 4
  store i32 %arg1, i32* @sb, align 4
  %v2_f60c = load i32, i32* %arg2, align 4
  store i32 %v2_f60c, i32* @r0, align 4
  store i32 %tmp, i32* @sl, align 4
  %v1_f614 = call i32 @function_16708(i32 %v2_f60c)
  %v2_f61c = call i32 @function_1596c(i32* nonnull %stack_var_-340)
  %v2_f628 = call i32 @function_15904(i32 %v2_f604, i32 2)
  store i32 0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v0_f638 = call i32 @function_159d8()
  %v2_f644 = call i32 @function_15980(i32 17, i32 1)
  %v2_f650 = call i32 @function_15980(i32 5, i32 62424)
  %v3_f65c = call i32 @function_13ba8(i32 ptrtoint ([14 x i8]* @global_var_1a29c.133 to i32), i32 2)
  %v7_f660 = icmp eq i32 %v3_f65c, -1
  store i32 %v3_f65c, i32* @r4, align 4
  br i1 %v7_f660, label %dec_label_pc_fa10, label %dec_label_pc_f66c

dec_label_pc_f66c:                                ; preds = %dec_label_pc_fa10, %dec_label_pc_f5f4
  %v0_f680 = phi i32 [ %v3_fa18, %dec_label_pc_fa10 ], [ %v3_f65c, %dec_label_pc_f5f4 ]
  store i32 %v0_f680, i32* @r0, align 4
  %v2_f684 = ptrtoint i32* %stack_var_-52 to i32
  store i32 1, i32* %stack_var_-52, align 4
  %v5_f68c = call i32 @function_1506c(i32 %v0_f680, i32 -2147199228, i32 %v2_f684, i32 1, i32 1)
  %v0_f690 = load i32, i32* @r4, align 4
  store i32 %v0_f690, i32* @r0, align 4
  %v1_f694 = call i32 @function_165e8(i32 %v0_f690)
  br label %dec_label_pc_f698

dec_label_pc_f698:                                ; preds = %dec_label_pc_fa10, %dec_label_pc_f66c
  store i32 ptrtoint (i32* @global_var_1a24c.21 to i32), i32* @r0, align 4
  %v1_f69c = call i32 @function_165cc(i32 ptrtoint (i32* @global_var_1a24c.21 to i32))
  %v0_f6a0 = call i32 @function_130a8()
  store i32 ptrtoint (i16** @global_var_23668.128 to i32), i32* @r4, align 4
  store i32 %v0_f6a0, i32* @global_var_2365c.94, align 4
  store i16 2, i16* bitcast (i16** @global_var_23668.128 to i16*), align 4
  %v1_f6bc = call i32 @function_152f0(i32 1105119797)
  store i32 %v1_f6bc, i32* @global_var_2366c.129, align 4
  %v1_f6c8 = call i32 @function_15314(i32 80)
  %v2_f6c8 = trunc i32 %v1_f6c8 to i16
  %v2_f6d0 = ptrtoint i8* %stack_var_-110 to i32
  store i32 %v2_f6d0, i32* @fp, align 4
  store i16 %v2_f6c8, i16* bitcast (i32* @global_var_2366a.130 to i16*), align 4
  %v0_f6e4 = load i32, i32* @sl, align 4
  %v1_f6e4 = inttoptr i32 %v0_f6e4 to i32*
  %v2_f6e4 = load i32, i32* %v1_f6e4, align 4
  store i32 %v2_f6e4, i32* @r8, align 4
  %v4_f6e8 = bitcast i8* %stack_var_-110 to i16*
  %v5_f6e8 = call i32 @function_15bb8(i16* %v4_f6e8, i32 ptrtoint ([3 x i8]* @global_var_1a2f0.138 to i32), i32 18)
  store i32 ptrtoint (i32* @global_var_1a2ec.153 to i32), i32* @r4, align 4
  %v13_f708 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v13_f708, i32* @lr, align 4
  store i32 62424, i32* %stack_var_-180, align 4
  br i1 icmp eq (i32 add (i32 add (i32 ptrtoint (i32* @global_var_124bc.148 to i32), i32 add (i32 add (i32 add (i32 ptrtoint (i32* @global_var_f3f0.141 to i32), i32 ptrtoint (i32* @global_var_1255c.143 to i32)), i32 74904), i32 ptrtoint (i32* @global_var_125fc.146 to i32))), i32 155700), i32 0), label %dec_label_pc_f750, label %dec_label_pc_f85c

dec_label_pc_f750:                                ; preds = %dec_label_pc_f698, %dec_label_pc_f85c, %dec_label_pc_fa04
  %v2_f754 = ptrtoint i32* %stack_var_-174 to i32
  store i32 %v2_f754, i32* @fp, align 4
  %v0_f758 = call i32 @function_f3f0()
  %v1_f75c = call i32 @function_10094(i32 %v0_f758)
  %v2_f768 = call i32 @function_12e80(i32 %v2_f754, i32 32)
  %v0_f76c = load i32, i32* @sb, align 4
  %v7_f76c = icmp eq i32 %v0_f76c, 2
  br i1 %v7_f76c, label %dec_label_pc_fa2c, label %dec_label_pc_f774

dec_label_pc_f774:                                ; preds = %dec_label_pc_fa2c, %dec_label_pc_f750, %dec_label_pc_fa3c
  %v0_f774 = call i32 @function_10038()
  %v1_f778 = mul i32 %v0_f774, 4
  %v3_f77c = and i32 %v1_f778, 12
  %v2_f784 = ptrtoint i32* %stack_var_-142 to i32
  store i32 %v2_f784, i32* @r5, align 4
  %v1_f788 = add nuw nsw i32 %v3_f77c, 12
  store i32 %v1_f788, i32* @r4, align 4
  %v2_f794 = bitcast i32* %stack_var_-142 to i8*
  %v3_f794 = call i32 @function_100fc(i8* %v2_f794, i32 %v1_f788)
  %v2_f798 = ptrtoint i32* %stack_var_-40 to i32
  %v1_f79c = load i32, i32* @r4, align 4
  %v2_f79c = add i32 %v1_f79c, %v2_f798
  store i32 0, i32* @r6, align 4
  %v0_f7a8 = load i32, i32* @sl, align 4
  %v1_f7a8 = inttoptr i32 %v0_f7a8 to i32*
  %v2_f7a8 = load i32, i32* %v1_f7a8, align 4
  store i32 %v2_f7a8, i32* @r0, align 4
  %v3_f7ac = add i32 %v2_f79c, -102
  %v4_f7ac = inttoptr i32 %v3_f7ac to i8*
  store i8 0, i8* %v4_f7ac, align 1
  %v2_f7b0 = inttoptr i32 %v2_f7a8 to i8*
  %v3_f7b0 = call i32 @function_12e14(i8* %v2_f7b0, i32 %v2_f784)
  %v0_f7b4 = call i32 @function_10038()
  store i32 0, i32* @r3, align 4
  %v3_f7d0 = mul i32 %v0_f7b4, 4
  %v1_f7d4 = add i32 %v3_f7d0, 12
  store i32 %v1_f7d4, i32* @r4, align 4
  %v3_f7e0 = call i32 @function_100fc(i8* %v2_f794, i32 %v1_f7d4)
  store i32 %v2_f798, i32* @lr, align 4
  %v1_f7e8 = load i32, i32* @r4, align 4
  %v2_f7e8 = add i32 %v1_f7e8, %v2_f798
  %v0_f7ec = load i32, i32* @r6, align 4
  %v1_f7ec = trunc i32 %v0_f7ec to i8
  %v3_f7ec = add i32 %v2_f7e8, -102
  %v4_f7ec = inttoptr i32 %v3_f7ec to i8*
  store i8 %v1_f7ec, i8* %v4_f7ec, align 1
  %v2_f7f8 = call i32 @function_13c74(i32 15, i32 %v2_f784)
  %v1_f800 = call i32 @function_1255c(i32 2)
  %v3_f810 = call i32 @function_12498(i32 2, i32* nonnull %stack_var_-48)
  %v3_f814 = load i32, i32* %stack_var_-48, align 4
  %v3_f820 = call i32 @function_16720(i32 1, i32 %v3_f810, i32 %v3_f814)
  %v3_f830 = call i32 @function_16720(i32 1, i32 ptrtoint (i32* @global_var_1a2c0.156 to i32), i32 1)
  %v1_f838 = call i32 @function_124bc(i32 2)
  %v0_f83c = call i32 @function_15714()
  %v1_f840 = load i32, i32* @r6, align 4
  store i32 %v9_f5f4, i32* %r6.global-to-local, align 4
  ret i32 %v1_f840

dec_label_pc_f85c:                                ; preds = %dec_label_pc_f698
  %v0_f864 = load i32, i32* @r8, align 4
  %v1_f870 = inttoptr i32 %v0_f864 to i8*
  %v2_f870 = call i32 @function_12dec(i8* %v1_f870)
  %v2_f87c = call i32 @function_13628(i32 2, i32 %v2_f870)
  %v0_f888 = load i32, i32* @r8, align 4
  %v2_f88c = add i32 %v0_f888, %v2_f870
  %v3_f88c = inttoptr i32 %v2_f88c to i8*
  %v4_f88c = load i8, i8* %v3_f88c, align 1
  %v6_f88c = zext i8 %v4_f88c to i32
  store i32 %v6_f88c, i32* @r4, align 4
  %v1_f898 = inttoptr i32 %v0_f888 to i8*
  %v2_f898 = call i32 @function_12dec(i8* %v1_f898)
  %v2_f8a4 = call i32 @function_13628(i32 4, i32 %v2_f898)
  %v0_f8b0 = load i32, i32* @r8, align 4
  %v2_f8b4 = add i32 %v0_f8b0, %v2_f898
  %v3_f8b4 = inttoptr i32 %v2_f8b4 to i8*
  %v4_f8b4 = load i8, i8* %v3_f8b4, align 1
  %v6_f8b4 = zext i8 %v4_f8b4 to i32
  store i32 %v6_f8b4, i32* @r7, align 4
  %v1_f8c0 = inttoptr i32 %v0_f8b0 to i8*
  %v2_f8c0 = call i32 @function_12dec(i8* %v1_f8c0)
  %v2_f8cc = call i32 @function_13628(i32 6, i32 %v2_f8c0)
  %v0_f8d8 = load i32, i32* @r8, align 4
  %v2_f8dc = add i32 %v0_f8d8, %v2_f8c0
  %v3_f8dc = inttoptr i32 %v2_f8dc to i8*
  %v4_f8dc = load i8, i8* %v3_f8dc, align 1
  %v6_f8dc = zext i8 %v4_f8dc to i32
  store i32 %v6_f8dc, i32* %r6.global-to-local, align 4
  %v1_f8e8 = inttoptr i32 %v0_f8d8 to i8*
  %v2_f8e8 = call i32 @function_12dec(i8* %v1_f8e8)
  %v2_f8f4 = call i32 @function_13628(i32 8, i32 %v2_f8e8)
  %v0_f900 = load i32, i32* @r8, align 4
  %v2_f904 = add i32 %v0_f900, %v2_f8e8
  %v3_f904 = inttoptr i32 %v2_f904 to i8*
  %v4_f904 = load i8, i8* %v3_f904, align 1
  %v6_f904 = zext i8 %v4_f904 to i32
  store i32 %v6_f904, i32* @r5, align 4
  %v1_f910 = inttoptr i32 %v0_f900 to i8*
  %v2_f910 = call i32 @function_12dec(i8* %v1_f910)
  %v2_f91c = call i32 @function_13628(i32 10, i32 %v2_f910)
  %v0_f920 = load i32, i32* @r4, align 4
  %v1_f920 = urem i32 %v0_f920, 256
  %v0_f928 = load i32, i32* @r7, align 4
  %v1_f928 = urem i32 %v0_f928, 256
  %v1_f92c = xor i32 %v1_f928, 255
  store i32 %v1_f92c, i32* @r7, align 4
  %v0_f930 = load i32, i32* %r6.global-to-local, align 4
  %v1_f934 = sub nsw i32 174, %v1_f920
  %v1_f930 = urem i32 %v0_f930, 256
  %v1_f938 = xor i32 %v1_f930, 255
  store i32 %v1_f938, i32* @r6, align 4
  %v0_f93c = load i32, i32* @r5, align 4
  %v1_f93c = sub i32 -1, %v0_f93c
  %v2_f940 = add nsw i32 %v1_f92c, %v1_f934
  %v0_f944 = load i32, i32* @r8, align 4
  %v2_f944 = add i32 %v0_f944, %v2_f910
  %v3_f944 = inttoptr i32 %v2_f944 to i8*
  %v4_f944 = load i8, i8* %v3_f944, align 1
  %v6_f944 = zext i8 %v4_f944 to i32
  %v2_f94c = add nsw i32 %v1_f938, %v2_f940
  %v1_f95c = sub nuw nsw i32 -1, %v6_f944
  %fold15 = add i32 %v2_f94c, %v1_f93c
  %v1_f960 = urem i32 %fold15, 256
  %v2_f968 = add nsw i32 %v1_f960, %v1_f95c
  store i32 %v2_f968, i32* @r4, align 4
  %v1_f974 = inttoptr i32 %v0_f944 to i8*
  %v2_f974 = call i32 @function_12dec(i8* %v1_f974)
  %v2_f980 = call i32 @function_13628(i32 12, i32 %v2_f974)
  %v0_f984 = load i32, i32* @r8, align 4
  %v2_f984 = add i32 %v0_f984, %v2_f974
  %v3_f984 = inttoptr i32 %v2_f984 to i8*
  %v4_f984 = load i8, i8* %v3_f984, align 1
  %v6_f984 = zext i8 %v4_f984 to i32
  %v0_f988 = load i32, i32* @r4, align 4
  %v1_f98c = sub nuw nsw i32 -1, %v6_f984
  %fold = add i32 %v0_f988, %v1_f98c
  %v1_f998 = urem i32 %fold, 256
  %v3_f9a0 = udiv i32 %v1_f998, 9
  %v2_f9ac = sub i32 %fold, %v3_f9a0
  %v2_f9b4 = ptrtoint i32* %stack_var_-40 to i32
  %v1_f9b0 = mul i32 %v2_f9ac, 4
  %v3_f9b8 = and i32 %v1_f9b0, 1020
  %v2_f9c0 = add i32 %v3_f9b8, %v2_f9b4
  %v2_f9c4 = ptrtoint i8* %stack_var_-76 to i32
  store i32 %v2_f9c4, i32* @r5, align 4
  %v1_f9c8 = add i32 %v2_f9c0, -172
  %v2_f9c8 = inttoptr i32 %v1_f9c8 to i32*
  %v3_f9c8 = load i32, i32* %v2_f9c8, align 4
  store i32 63956, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_f9c8)
  %v0_f9d8 = load i32, i32* @r8, align 4
  %v2_f9dc = inttoptr i32 %v0_f9d8 to i8*
  %v3_f9dc = call i32 @function_131d8(i8* %v2_f9dc, i32 %v2_f9c4)
  store i32 %v3_f9dc, i32* @r4, align 4
  %v2_f9ec = call i32 @function_12e80(i32 %v2_f6d0, i32 18)
  %v2_f9f8 = call i32 @function_12e80(i32 %v2_f9c4, i32 12)
  %v0_f9fc = load i32, i32* @r4, align 4
  %v2_f9fc = icmp eq i32 %v0_f9fc, 0
  br i1 %v2_f9fc, label %dec_label_pc_f750, label %dec_label_pc_fa04

dec_label_pc_fa04:                                ; preds = %dec_label_pc_f85c
  %v1_fa08 = call i32 @function_158b8(i32 5)
  br label %dec_label_pc_f750

dec_label_pc_fa10:                                ; preds = %dec_label_pc_f5f4
  %v3_fa18 = call i32 @function_13ba8(i32 ptrtoint ([19 x i8]* @global_var_1a2ac.159 to i32), i32 2)
  %v3_fa1c = icmp eq i32 %v3_fa18, -1
  store i32 %v3_fa18, i32* @r4, align 4
  br i1 %v3_fa1c, label %dec_label_pc_f698, label %dec_label_pc_f66c

dec_label_pc_fa2c:                                ; preds = %dec_label_pc_f750
  %v0_fa2c = load i32, i32* @sl, align 4
  %v1_fa2c = add i32 %v0_fa2c, 4
  %v2_fa2c = inttoptr i32 %v1_fa2c to i32*
  %v3_fa2c = load i32, i32* %v2_fa2c, align 4
  %v1_fa30 = inttoptr i32 %v3_fa2c to i8*
  %v2_fa30 = call i32 @function_12dec(i8* %v1_fa30)
  %v8_fa38 = icmp sgt i32 %v2_fa30, 31
  br i1 %v8_fa38, label %dec_label_pc_f774, label %dec_label_pc_fa3c

dec_label_pc_fa3c:                                ; preds = %dec_label_pc_fa2c
  %v0_fa3c = load i32, i32* @sl, align 4
  %v1_fa3c = add i32 %v0_fa3c, 4
  %v2_fa3c = inttoptr i32 %v1_fa3c to i32*
  %v3_fa3c = load i32, i32* %v2_fa3c, align 4
  store i32 %v2_f754, i32* @r0, align 4
  %v2_fa44 = bitcast i32* %stack_var_-174 to i8*
  %v3_fa44 = call i32 @function_12e14(i8* %v2_fa44, i32 %v3_fa3c)
  %v0_fa48 = load i32, i32* @sl, align 4
  %v1_fa48 = add i32 %v0_fa48, 4
  %v2_fa48 = inttoptr i32 %v1_fa48 to i32*
  %v3_fa48 = load i32, i32* %v2_fa48, align 4
  %v1_fa50 = inttoptr i32 %v3_fa48 to i8*
  %v2_fa50 = call i32 @function_12dec(i8* %v1_fa50)
  %v2_fa5c = call i32 @function_12e80(i32 %v3_fa48, i32 %v2_fa50)
  br label %dec_label_pc_f774

; uselistorder directives
  uselistorder i32 %v3_fa18, { 1, 2, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %v0_f944, { 1, 0 }
  uselistorder i32 %v0_f900, { 1, 0 }
  uselistorder i32 %v0_f8d8, { 1, 0 }
  uselistorder i32 %v0_f8b0, { 1, 0 }
  uselistorder i32 %v0_f888, { 1, 0 }
  uselistorder i32 %v2_f798, { 0, 2, 1 }
  uselistorder i32 %v2_f784, { 1, 0, 2 }
  uselistorder i32 %v0_f680, { 1, 0 }
  uselistorder i32 %v3_f65c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_13628, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_16720, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_12e14, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 26, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 ()* @function_f3f0, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_23668.128 to i32), { 1, 0 }
  uselistorder i32 47, { 4, 5, 0, 6, 1, 7, 2, 8, 9, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a24c.21 to i32), { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32)* @function_15980, { 1, 0 }
  uselistorder i32 (i32)* @function_16708, { 1, 0 }
  uselistorder label %dec_label_pc_f774, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f750, { 2, 1, 0 }
}

define i32 @function_10038() local_unnamed_addr {
dec_label_pc_10038:
  %v2_10044 = load i32, i32* @global_var_230a4.172, align 4
  %v2_10048 = load i32, i32* @global_var_230b0.174, align 4
  %v4_10054 = mul i32 %v2_10044, 2048
  %v5_10054 = xor i32 %v4_10054, %v2_10044
  store i32 %v5_10054, i32* @r3, align 4
  %v4_10058 = udiv i32 %v2_10048, 524288
  %v5_10058 = xor i32 %v4_10058, %v2_10048
  %v2_1005c = load i32, i32* @global_var_230a8.176, align 4
  %v2_10060 = load i32, i32* @global_var_230ac.178, align 4
  store i32 %v2_10060, i32* @ip, align 4
  %v2_10064 = xor i32 %v5_10058, %v5_10054
  %v4_10068 = udiv i32 %v5_10054, 256
  %v5_10068 = xor i32 %v2_10064, %v4_10068
  store i32 %v2_1005c, i32* @global_var_230a4.172, align 4
  store i32 %v2_10060, i32* @global_var_230a8.176, align 4
  store i32 %v2_10048, i32* @global_var_230ac.178, align 4
  store i32 %v5_10068, i32* @global_var_230b0.174, align 4
  ret i32 %v5_10068

; uselistorder directives
  uselistorder i32 %v2_10048, { 2, 1, 0 }
  uselistorder i32 %v2_10044, { 1, 0 }
}

define i32 @function_10094(i32 %arg1) local_unnamed_addr {
dec_label_pc_10094:
  %v3_10094 = load i32, i32* @r4, align 4
  %v6_10094 = load i32, i32* @r5, align 4
  %v2_100a0 = call i32 @function_16598(i32* null)
  store i32 %v2_100a0, i32* @r0, align 4
  store i32 %v2_100a0, i32* @global_var_230a4.172, align 4
  %v1_100ac = call i32 @function_1663c(i32 %v2_100a0)
  store i32 %v1_100ac, i32* @r0, align 4
  store i32 %v1_100ac, i32* @r4, align 4
  %v0_100b4 = call i32 @function_16650()
  store i32 ptrtoint (i32* @global_var_230a8.176 to i32), i32* @r5, align 4
  %v1_100bc = load i32, i32* @r4, align 4
  %v2_100bc = xor i32 %v1_100bc, %v0_100b4
  store i32 %v2_100bc, i32* @global_var_230a8.176, align 4
  %v1_100c4 = call i32 @function_1641c(i32 %v2_100bc)
  %v2_100c8 = load i32, i32* @global_var_230a8.176, align 4
  %v2_100d4 = xor i32 %v2_100c8, %v1_100c4
  store i32 %v2_100d4, i32* @global_var_230b0.174, align 4
  store i32 %v1_100c4, i32* @global_var_230ac.178, align 4
  store i32 %v3_10094, i32* @r4, align 4
  store i32 %v6_10094, i32* @r5, align 4
  ret i32 %v1_100c4

; uselistorder directives
  uselistorder i32 %v1_100c4, { 1, 2, 0 }
  uselistorder i32 ()* @function_16650, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_1663c, { 0, 2, 1 }
}

define i32 @function_100fc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100fc:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %v12_100fc = load i32, i32* @r7, align 4
  %v15_100fc = load i32, i32* @r8, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_1a304.184 to i32), i32* %r1.global-to-local, align 4
  %v2_10110 = ptrtoint i32* %stack_var_-73 to i32
  store i32 %v2_10110, i32* %r0.global-to-local, align 4
  store i32 33, i32* %r2.global-to-local, align 4
  %v4_10118 = bitcast i32* %stack_var_-73 to i16*
  %v5_10118 = call i32 @function_15bb8(i16* %v4_10118, i32 ptrtoint ([33 x i8]* @global_var_1a304.184 to i32), i32 33)
  store i32 %v5_10118, i32* %r0.global-to-local, align 4
  %v0_1011c = load i32, i32* @r7, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1011c = icmp slt i32 %v0_1011c, 0
  store i1 %v1_1011c, i1* %cpsr_n.global-to-local, align 1
  %v2_1011c = icmp eq i32 %v0_1011c, 0
  store i1 %v2_1011c, i1* %cpsr_z.global-to-local, align 1
  %tmp24 = icmp slt i32 %v0_1011c, 1
  br i1 %tmp24, label %dec_label_pc_10214, label %dec_label_pc_10124

dec_label_pc_10124:                               ; preds = %dec_label_pc_100fc
  store i32 ptrtoint (i32* @global_var_230b0.174 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230ac.178 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a8.176 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a4.172 to i32), i32* %r3.global-to-local, align 4
  %v2_10134 = load i32, i32* @global_var_230b0.174, align 4
  store i32 %v2_10134, i32* %r5.global-to-local, align 4
  %v2_10138 = load i32, i32* @global_var_230ac.178, align 4
  store i32 %v2_10138, i32* %sb.global-to-local, align 4
  %v2_1013c = load i32, i32* @global_var_230a8.176, align 4
  store i32 %v2_1013c, i32* %sl.global-to-local, align 4
  %v2_10140 = load i32, i32* @global_var_230a4.172, align 4
  store i32 %v2_10140, i32* %r0.global-to-local, align 4
  %v2_1014c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_101b0

dec_label_pc_10148:                               ; preds = %dec_label_pc_101b0
  %v1_10148 = urem i32 %v5_101c0, 256
  store i32 %v1_10148, i32* %r3.global-to-local, align 4
  store i32 %v2_1014c, i32* %r1.global-to-local, align 4
  %v4_10150 = udiv i32 %v1_10148, 8
  %v5_10150 = add i32 %v4_10150, %v2_1014c
  store i32 %v5_10150, i32* %r2.global-to-local, align 4
  %v1_10154 = add i32 %v5_10150, -33
  %v2_10154 = inttoptr i32 %v1_10154 to i8*
  %v3_10154 = load i8, i8* %v2_10154, align 1
  %v4_10154 = zext i8 %v3_10154 to i32
  store i32 %v4_10154, i32* %r0.global-to-local, align 4
  %v3_10158 = mul i32 %v5_101c0, 65536
  store i32 %v3_10158, i32* %r1.global-to-local, align 4
  store i32 %v2_1014c, i32* %r2.global-to-local, align 4
  %tmp25 = udiv i32 %v5_101c0, 2048
  %v4_10160 = urem i32 %tmp25, 32
  %v5_10160 = add i32 %v4_10160, %v2_1014c
  store i32 %v5_10160, i32* %r3.global-to-local, align 4
  %v1_10164 = add i32 %v5_10160, -33
  %v2_10164 = inttoptr i32 %v1_10164 to i8*
  %v3_10164 = load i8, i8* %v2_10164, align 1
  %v4_10164 = zext i8 %v3_10164 to i32
  store i32 %v4_10164, i32* %ip.global-to-local, align 4
  %v3_10168 = mul i32 %v5_101c0, 256
  store i32 %v3_10168, i32* %r2.global-to-local, align 4
  %v3_1016c = inttoptr i32 %v0_101c4 to i8*
  store i8 %v3_10154, i8* %v3_1016c, align 1
  %v4_1016c = load i32, i32* %r6.global-to-local, align 4
  %v5_1016c = add i32 %v4_1016c, 1
  store i32 %v5_1016c, i32* %r6.global-to-local, align 4
  %v1_10174 = load i32, i32* %r2.global-to-local, align 4
  %v4_10174 = udiv i32 %v1_10174, 134217728
  %v5_10174 = add i32 %v4_10174, %v2_1014c
  store i32 %v5_10174, i32* %r1.global-to-local, align 4
  %v1_10178 = load i32, i32* %r4.global-to-local, align 4
  %v4_10178 = udiv i32 %v1_10178, 134217728
  %v5_10178 = add i32 %v4_10178, %v2_1014c
  store i32 %v5_10178, i32* %r3.global-to-local, align 4
  %v1_1017c = add i32 %v5_10174, -33
  %v2_1017c = inttoptr i32 %v1_1017c to i8*
  %v3_1017c = load i8, i8* %v2_1017c, align 1
  %v4_1017c = zext i8 %v3_1017c to i32
  store i32 %v4_1017c, i32* %lr.global-to-local, align 4
  %v1_10180 = add i32 %v5_10178, -33
  %v2_10180 = inttoptr i32 %v1_10180 to i8*
  %v3_10180 = load i8, i8* %v2_10180, align 1
  %v4_10180 = zext i8 %v3_10180 to i32
  store i32 %v4_10180, i32* %r2.global-to-local, align 4
  %v0_10184 = load i32, i32* @r7, align 4
  %v1_10184 = add i32 %v0_10184, -4
  store i32 %v1_10184, i32* @r7, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_10188 = icmp slt i32 %v1_10184, 0
  store i1 %v1_10188, i1* %cpsr_n.global-to-local, align 1
  %v2_10188 = icmp eq i32 %v1_10184, 0
  store i1 %v2_10188, i1* %cpsr_z.global-to-local, align 1
  %v0_1018c = load i32, i32* %ip.global-to-local, align 4
  %v1_1018c = trunc i32 %v0_1018c to i8
  %v2_1018c = load i32, i32* @r8, align 4
  %v3_1018c = add i32 %v2_1018c, 1
  %v4_1018c = inttoptr i32 %v3_1018c to i8*
  store i8 %v1_1018c, i8* %v4_1018c, align 1
  %v0_10190 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_10190, i32* %r0.global-to-local, align 4
  %v0_10194 = load i32, i32* @r8, align 4
  %v1_10194 = add i32 %v0_10194, 4
  store i32 %v1_10194, i32* @r8, align 4
  %v0_10198 = load i32, i32* %r2.global-to-local, align 4
  %v1_10198 = trunc i32 %v0_10198 to i8
  %v2_10198 = load i32, i32* %r6.global-to-local, align 4
  %v3_10198 = add i32 %v2_10198, 2
  %v4_10198 = inttoptr i32 %v3_10198 to i8*
  store i8 %v1_10198, i8* %v4_10198, align 1
  %v0_1019c = load i32, i32* %lr.global-to-local, align 4
  %v1_1019c = trunc i32 %v0_1019c to i8
  %v2_1019c = load i32, i32* %r6.global-to-local, align 4
  %v3_1019c = add i32 %v2_1019c, 1
  %v4_1019c = inttoptr i32 %v3_1019c to i8*
  store i8 %v1_1019c, i8* %v4_1019c, align 1
  %v0_101a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_101a0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_101a0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_101a0 = xor i1 %v1_101a0, %v2_101a0
  %v4_101a0 = or i1 %v0_101a0, %v3_101a0
  br i1 %v4_101a0, label %dec_label_pc_101f8, label %dec_label_pc_10148.dec_label_pc_101a4_crit_edge

dec_label_pc_10148.dec_label_pc_101a4_crit_edge:  ; preds = %dec_label_pc_10148
  %v0_101b0.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_101a4

dec_label_pc_101a4:                               ; preds = %dec_label_pc_10148.dec_label_pc_101a4_crit_edge, %dec_label_pc_101cc
  %v0_101b0.pre = phi i32 [ %v0_101b0.pre.pre, %dec_label_pc_10148.dec_label_pc_101a4_crit_edge ], [ %v0_101f0, %dec_label_pc_101cc ]
  %v0_101a4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_101a4, i32* %sl.global-to-local, align 4
  %v0_101a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_101a8, i32* %sb.global-to-local, align 4
  %v0_101ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_101ac, i32* %r5.global-to-local, align 4
  %v0_101bc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_101b0

dec_label_pc_101b0:                               ; preds = %dec_label_pc_10124, %dec_label_pc_101a4
  %v0_101e0 = phi i32 [ %v0_1011c, %dec_label_pc_10124 ], [ %v0_101bc.pre, %dec_label_pc_101a4 ]
  %v0_101b4 = phi i32 [ %v2_10134, %dec_label_pc_10124 ], [ %v0_101ac, %dec_label_pc_101a4 ]
  %v0_101b0 = phi i32 [ %v2_10140, %dec_label_pc_10124 ], [ %v0_101b0.pre, %dec_label_pc_101a4 ]
  %v4_101b0 = mul i32 %v0_101b0, 2048
  %v5_101b0 = xor i32 %v4_101b0, %v0_101b0
  store i32 %v5_101b0, i32* %r3.global-to-local, align 4
  %v4_101b4 = udiv i32 %v0_101b4, 524288
  %v5_101b4 = xor i32 %v4_101b4, %v0_101b4
  %v2_101b8 = xor i32 %v5_101b4, %v5_101b0
  store i32 %v2_101b8, i32* %r2.global-to-local, align 4
  %v1_101bc = add i32 %v0_101e0, -3
  %v3_101bc = sub i32 2, %v0_101e0
  %v4_101bc = and i32 %v3_101bc, %v0_101e0
  %v5_101bc = icmp slt i32 %v4_101bc, 0
  store i1 %v5_101bc, i1* %cpsr_v.global-to-local, align 1
  %v6_101bc = icmp slt i32 %v1_101bc, 0
  store i1 %v6_101bc, i1* %cpsr_n.global-to-local, align 1
  %v7_101bc = icmp eq i32 %v0_101e0, 3
  store i1 %v7_101bc, i1* %cpsr_z.global-to-local, align 1
  %v2_101c0 = and i32 %v0_101b0, 128
  %v3_101c0 = icmp ne i32 %v2_101c0, 0
  %v4_101c0 = udiv i32 %v5_101b0, 256
  %v5_101c0 = xor i32 %v4_101c0, %v2_101b8
  store i32 %v5_101c0, i32* %r4.global-to-local, align 4
  %v0_101c4 = load i32, i32* @r8, align 4
  store i32 %v0_101c4, i32* %r6.global-to-local, align 4
  %v2_101c8 = xor i1 %v7_101bc, true
  %v3_101c8 = and i1 %v3_101c0, %v2_101c8
  br i1 %v3_101c8, label %dec_label_pc_10148, label %dec_label_pc_101cc

dec_label_pc_101cc:                               ; preds = %dec_label_pc_101b0
  %v1_101e0 = add i32 %v0_101e0, -1
  store i32 %v1_101e0, i32* @r7, align 4
  %v2_101dc.neg = urem i32 %v5_101c0, 33
  store i32 %v2_101dc.neg, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_101e8 = icmp slt i32 %v1_101e0, 0
  store i1 %v1_101e8, i1* %cpsr_n.global-to-local, align 1
  %v2_101e8 = icmp eq i32 %v1_101e0, 0
  store i1 %v2_101e8, i1* %cpsr_z.global-to-local, align 1
  %v1_101ec = trunc i32 %v2_101dc.neg to i8
  %v3_101ec = inttoptr i32 %v0_101c4 to i8*
  store i8 %v1_101ec, i8* %v3_101ec, align 1
  %v4_101ec = load i32, i32* @r8, align 4
  %v5_101ec = add i32 %v4_101ec, 1
  store i32 %v5_101ec, i32* @r8, align 4
  %v0_101f0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_101f0, i32* %r0.global-to-local, align 4
  %v0_101f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_101f4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_101f4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_101f4 = xor i1 %v1_101f4, %v2_101f4
  %v4_101f4 = or i1 %v0_101f4, %v3_101f4
  br i1 %v4_101f4, label %dec_label_pc_101f8, label %dec_label_pc_101a4

dec_label_pc_101f8:                               ; preds = %dec_label_pc_101cc, %dec_label_pc_10148
  store i32 ptrtoint (i32* @global_var_230ac.178 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a8.176 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a4.172 to i32), i32* %r1.global-to-local, align 4
  %v0_10204 = load i32, i32* %r4.global-to-local, align 4
  %v1_10204 = load i32, i32* %fp.global-to-local, align 4
  %v2_10204 = inttoptr i32 %v1_10204 to i32*
  store i32 %v0_10204, i32* %v2_10204, align 4
  %v0_10208 = load i32, i32* %r5.global-to-local, align 4
  %v1_10208 = load i32, i32* %r2.global-to-local, align 4
  %v2_10208 = inttoptr i32 %v1_10208 to i32*
  store i32 %v0_10208, i32* %v2_10208, align 4
  %v0_1020c = load i32, i32* %sb.global-to-local, align 4
  %v1_1020c = load i32, i32* %r3.global-to-local, align 4
  %v2_1020c = inttoptr i32 %v1_1020c to i32*
  store i32 %v0_1020c, i32* %v2_1020c, align 4
  %v0_10210 = load i32, i32* %sl.global-to-local, align 4
  %v1_10210 = load i32, i32* %r1.global-to-local, align 4
  %v2_10210 = inttoptr i32 %v1_10210 to i32*
  store i32 %v0_10210, i32* %v2_10210, align 4
  %v1_1021c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10214

dec_label_pc_10214:                               ; preds = %dec_label_pc_100fc, %dec_label_pc_101f8
  %v1_1021c = phi i32 [ %v5_10118, %dec_label_pc_100fc ], [ %v1_1021c.pre, %dec_label_pc_101f8 ]
  store i32 %v12_100fc, i32* @r7, align 4
  store i32 %v15_100fc, i32* @r8, align 4
  ret i32 %v1_1021c

; uselistorder directives
  uselistorder i32 %v0_101f0, { 1, 0 }
  uselistorder i32 %v2_101dc.neg, { 1, 0 }
  uselistorder i32 %v0_101c4, { 1, 2, 0 }
  uselistorder i32 %v5_101c0, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 %v0_101b0, { 2, 1, 0 }
  uselistorder i32 %v0_101b4, { 1, 0 }
  uselistorder i32 %v0_101e0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v2_1014c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1011c, { 0, 1, 3, 2 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_10214, { 1, 0 }
  uselistorder label %dec_label_pc_101b0, { 1, 0 }
  uselistorder label %dec_label_pc_101a4, { 1, 0 }
}

define i32 @function_10238(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10238:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_10238 = load i32, i32* %r1.global-to-local, align 4
  %v3_1023c = load i32, i32* @r4, align 4
  store i32 %v3_1023c, i32* %stack_var_-28, align 4
  %v0_10240 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10240, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_10238, 1
  br i1 %tmp16, label %dec_label_pc_102e8, label %dec_label_pc_10248

dec_label_pc_10248:                               ; preds = %dec_label_pc_10238
  store i32 ptrtoint (i32* @global_var_230b0.174 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230ac.178 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a8.176 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230a4.172 to i32), i32* %r6.global-to-local, align 4
  %v2_10258 = load i32, i32* @global_var_230b0.174, align 4
  store i32 %v2_10258, i32* %lr.global-to-local, align 4
  %v2_1025c = load i32, i32* @global_var_230ac.178, align 4
  store i32 %v2_1025c, i32* %r4.global-to-local, align 4
  %v2_10260 = load i32, i32* @global_var_230a8.176, align 4
  store i32 %v2_10260, i32* %r0.global-to-local, align 4
  %v2_10264 = load i32, i32* @global_var_230a4.172, align 4
  br label %dec_label_pc_10288

dec_label_pc_1026c:                               ; preds = %dec_label_pc_102a8
  %v1_1026c = trunc i32 %v5_10298 to i16
  %v3_1026c = inttoptr i32 %v9_1029c to i16*
  store i16 %v1_1026c, i16* %v3_1026c, align 2
  %v4_1026c = load i32, i32* %r5.global-to-local, align 4
  %v5_1026c = add i32 %v4_1026c, -2
  store i32 %v5_1026c, i32* %r5.global-to-local, align 4
  %v0_10270.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10270

dec_label_pc_10270:                               ; preds = %.thread, %dec_label_pc_1026c
  %v0_10270 = phi i32 [ %v9_102a0, %.thread ], [ %v0_10270.pre, %dec_label_pc_1026c ]
  %v2_1026c5 = phi i32 [ %v12_1029c, %.thread ], [ %v5_1026c, %dec_label_pc_1026c ]
  %tmp17 = icmp slt i32 %v0_10270, 1
  br i1 %tmp17, label %dec_label_pc_102f0, label %dec_label_pc_1027c

dec_label_pc_1027c:                               ; preds = %dec_label_pc_10270
  %v0_10274 = load i32, i32* %r0.global-to-local, align 4
  %v0_1027c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1027c, i32* %r0.global-to-local, align 4
  %v0_10280 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_10280, i32* %r4.global-to-local, align 4
  %v0_10284 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10284, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10288

dec_label_pc_10288:                               ; preds = %dec_label_pc_10248, %dec_label_pc_1027c
  %v0_102d4 = phi i32 [ %v2_10260, %dec_label_pc_10248 ], [ %v0_1027c, %dec_label_pc_1027c ]
  %v9_1029c = phi i32 [ %v0_10240, %dec_label_pc_10248 ], [ %v2_1026c5, %dec_label_pc_1027c ]
  %v0_102b4 = phi i32 [ %v0_10238, %dec_label_pc_10248 ], [ %v0_10270, %dec_label_pc_1027c ]
  %v0_102c8 = phi i32 [ %v2_10258, %dec_label_pc_10248 ], [ %v0_10284, %dec_label_pc_1027c ]
  %v0_102c4 = phi i32 [ %v2_10264, %dec_label_pc_10248 ], [ %v0_10274, %dec_label_pc_1027c ]
  %v4_10288 = mul i32 %v0_102c4, 2048
  %v5_10288 = xor i32 %v4_10288, %v0_102c4
  %v4_1028c = udiv i32 %v0_102c8, 524288
  %v5_1028c = xor i32 %v4_1028c, %v0_102c8
  %v2_10290 = xor i32 %v5_1028c, %v5_10288
  %v4_10298 = udiv i32 %v5_10288, 256
  %v5_10298 = xor i32 %v2_10290, %v4_10298
  store i32 %v5_10298, i32* %r3.global-to-local, align 4
  %v7_1029c = icmp sgt i32 %v0_102b4, 3
  br i1 %v7_1029c, label %.thread, label %dec_label_pc_102a8

.thread:                                          ; preds = %dec_label_pc_10288
  %v10_1029c = inttoptr i32 %v9_1029c to i32*
  store i32 %v5_10298, i32* %v10_1029c, align 4
  %v11_1029c = load i32, i32* %r5.global-to-local, align 4
  %v12_1029c = add i32 %v11_1029c, 4
  store i32 %v12_1029c, i32* %r5.global-to-local, align 4
  %v8_102a0 = load i32, i32* %r1.global-to-local, align 4
  %v9_102a0 = add i32 %v8_102a0, -4
  store i32 %v9_102a0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10270

dec_label_pc_102a8:                               ; preds = %dec_label_pc_10288
  %v7_102b4 = icmp eq i32 %v0_102b4, 1
  store i32 %v5_10298, i32* %r3.global-to-local, align 4
  %v1_102bc = add i32 %v0_102b4, -2
  store i32 %v1_102bc, i32* %r1.global-to-local, align 4
  br i1 %v7_102b4, label %dec_label_pc_102c4, label %dec_label_pc_1026c

dec_label_pc_102c4:                               ; preds = %dec_label_pc_102a8
  store i32 %v5_10298, i32* %r3.global-to-local, align 4
  %v1_102d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_102d4 = inttoptr i32 %v1_102d4 to i32*
  store i32 %v0_102d4, i32* %v2_102d4, align 4
  %v0_102d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_102d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_102d8 = inttoptr i32 %v1_102d8 to i32*
  store i32 %v0_102d8, i32* %v2_102d8, align 4
  %v0_102dc = load i32, i32* %lr.global-to-local, align 4
  %v1_102dc = load i32, i32* %r8.global-to-local, align 4
  %v2_102dc = inttoptr i32 %v1_102dc to i32*
  store i32 %v0_102dc, i32* %v2_102dc, align 4
  %v0_102e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_102e0 = load i32, i32* %sl.global-to-local, align 4
  %v2_102e0 = inttoptr i32 %v1_102e0 to i32*
  store i32 %v0_102e0, i32* %v2_102e0, align 4
  %v0_102e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_102e4 = trunc i32 %v0_102e4 to i8
  %v2_102e4 = load i32, i32* %r5.global-to-local, align 4
  %v3_102e4 = inttoptr i32 %v2_102e4 to i8*
  store i8 %v1_102e4, i8* %v3_102e4, align 1
  br label %dec_label_pc_102e8

dec_label_pc_102e8:                               ; preds = %dec_label_pc_10238, %dec_label_pc_102f0, %dec_label_pc_102c4
  %v2_102e8 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_102e8, i32* @r4, align 4
  %v1_102ec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_102ec

dec_label_pc_102f0:                               ; preds = %dec_label_pc_10270
  %v0_102f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_102f0 = load i32, i32* %sl.global-to-local, align 4
  %v2_102f0 = inttoptr i32 %v1_102f0 to i32*
  store i32 %v0_102f0, i32* %v2_102f0, align 4
  %v0_102f4 = load i32, i32* %lr.global-to-local, align 4
  %v1_102f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_102f4 = inttoptr i32 %v1_102f4 to i32*
  store i32 %v0_102f4, i32* %v2_102f4, align 4
  %v0_102f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_102f8 = load i32, i32* %r7.global-to-local, align 4
  %v2_102f8 = inttoptr i32 %v1_102f8 to i32*
  store i32 %v0_102f8, i32* %v2_102f8, align 4
  %v0_102fc = load i32, i32* %r0.global-to-local, align 4
  %v1_102fc = load i32, i32* %r6.global-to-local, align 4
  %v2_102fc = inttoptr i32 %v1_102fc to i32*
  store i32 %v0_102fc, i32* %v2_102fc, align 4
  br label %dec_label_pc_102e8

; uselistorder directives
  uselistorder i32 %v9_102a0, { 1, 0 }
  uselistorder i32 %v12_1029c, { 1, 0 }
  uselistorder i32 %v5_10298, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_102c4, { 1, 0 }
  uselistorder i32 %v0_102c8, { 1, 0 }
  uselistorder i32 %v0_102b4, { 1, 0, 2 }
  uselistorder i32 %v0_10270, { 1, 0 }
  uselistorder i32 %v0_10238, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_230a4.172, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_230a8.176, { 2, 3, 4, 1, 6, 0, 5 }
  uselistorder i32* @global_var_230ac.178, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_230b0.174, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_102e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10288, { 1, 0 }
}

define i32 @function_10314(i32 %arg1) local_unnamed_addr {
dec_label_pc_10314:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10314 = load i32, i32* @r4, align 4
  store i32 %v3_10314, i32* %stack_var_-8, align 4
  %v6_10314 = load i32, i32* @lr, align 4
  %v0_10318 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10318, i32* @r4, align 4
  %v2_10318 = icmp eq i32 %v0_10318, 0
  br i1 %v2_10318, label %dec_label_pc_10334, label %dec_label_pc_10320

dec_label_pc_10320:                               ; preds = %dec_label_pc_10314
  %v1_10320 = add i32 %v0_10318, 4
  %v2_10320 = inttoptr i32 %v1_10320 to i32*
  %v3_10320 = load i32, i32* %v2_10320, align 4
  store i32 %v3_10320, i32* %r0.global-to-local, align 4
  store i32 66348, i32* @lr, align 4
  %v1_10328 = icmp ne i32 %v3_10320, 0
  call void @__pseudo_cond_branch(i1 %v1_10328, i32 ptrtoint (i32* @global_var_14248.58 to i32))
  %v0_1032c = load i32, i32* @r4, align 4
  store i32 %v0_1032c, i32* %r0.global-to-local, align 4
  %v1_10330 = call i32 @function_14248(i32 %v0_1032c)
  store i32 %v1_10330, i32* %r0.global-to-local, align 4
  %v2_10334.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10334

dec_label_pc_10334:                               ; preds = %dec_label_pc_10314, %dec_label_pc_10320
  %v1_10338 = phi i32 [ 0, %dec_label_pc_10314 ], [ %v1_10330, %dec_label_pc_10320 ]
  %v2_10334 = phi i32 [ %v3_10314, %dec_label_pc_10314 ], [ %v2_10334.pre, %dec_label_pc_10320 ]
  store i32 %v2_10334, i32* @r4, align 4
  store i32 %v6_10314, i32* @lr, align 4
  ret i32 %v1_10338

; uselistorder directives
  uselistorder i32 %v0_10318, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10334, { 1, 0 }
}

define i32 @function_1033c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1033c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp78 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_1033c = load i32, i32* @r4, align 4
  %v9_1033c = load i32, i32* @r6, align 4
  %v12_1033c = load i32, i32* @r7, align 4
  %v15_1033c = load i32, i32* @r8, align 4
  %v18_1033c = load i32, i32* @sb, align 4
  %v21_1033c = load i32, i32* @sl, align 4
  %v24_1033c = load i32, i32* @fp, align 4
  %v27_1033c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10354 = call i32 @function_13cd4(i32 1, i32 8)
  store i32 %v2_10354, i32* @fp, align 4
  %v0_1035c = load i32, i32* @r5, align 4
  store i32 %v0_1035c, i32* %r0.global-to-local, align 4
  %v1_10360 = inttoptr i32 %v0_1035c to i8*
  %v2_10360 = call i32 @function_12dec(i8* %v1_10360)
  %v2_10368 = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_10368, i32* @sl, align 4
  %v2_1036c = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_1036c, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_10374 = add i32 %v2_10360, 1
  store i32 %v1_10374, i32* %r0.global-to-local, align 4
  %v2_10378 = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_10378, i32* %r2.global-to-local, align 4
  store i32 %v2_1036c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_10374, i32* %r3.global-to-local, align 4
  %v2_103b4143 = icmp eq i32 %v1_10374, 0
  store i1 %v2_103b4143, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_103bc144 = add i32 %v2_10378, -1
  store i32 %v1_103bc144, i32* %r1.global-to-local, align 4
  %tmp115145 = icmp slt i32 %v1_10374, 1
  br i1 %tmp115145, label %dec_label_pc_103c4, label %dec_label_pc_10388

dec_label_pc_10388:                               ; preds = %dec_label_pc_1033c, %bb114
  %v0_10388148 = phi i32 [ %v1_103a8, %bb114 ], [ 0, %dec_label_pc_1033c ]
  %v1_10394147.off0 = phi i8 [ %extract.t149, %bb114 ], [ 0, %dec_label_pc_1033c ]
  %v2_103c8146 = phi i32 [ %v1_103ac, %bb114 ], [ %v2_10378, %dec_label_pc_1033c ]
  %v1_10388 = load i32, i32* @r5, align 4
  %v2_10388 = add i32 %v1_10388, %v0_10388148
  %v3_10388 = inttoptr i32 %v2_10388 to i8*
  %v4_10388 = load i8, i8* %v3_10388, align 1
  %v6_10388 = zext i8 %v4_10388 to i32
  store i32 %v6_10388, i32* %r3.global-to-local, align 4
  %v2_1038c = icmp eq i8 %v4_10388, 0
  store i1 %v2_1038c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1038c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_10388
  %v8_10390 = icmp eq i8 %v4_10388, 46
  store i1 %v8_10390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10390, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_10388, %bb
  %v3_10394 = load i32, i32* %r6.global-to-local, align 4
  %v4_10394 = inttoptr i32 %v3_10394 to i8*
  store i8 %v1_10394147.off0, i8* %v4_10394, align 1
  %v0_10398.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10398.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_10398.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_10398.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_10398.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_10398 = phi i32 [ %v3_10398.pre, %.thread..thread7_crit_edge ], [ %v2_103c8146, %bb ]
  %v1_10398.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_10388, %bb ]
  %v4_10398 = add i32 %v3_10398, -1
  %v5_10398 = inttoptr i32 %v4_10398 to i8*
  store i8 %v1_10398.off0, i8* %v5_10398, align 1
  %v0_1039c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1039c.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_1039c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_1039c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb114

.thread9:                                         ; preds = %.thread7
  %v1_1039c11 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_1039c11, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb114

.thread12:                                        ; preds = %.thread7
  %v1_103a4 = load i32, i32* @lr, align 4
  %v2_103a4 = urem i32 %v1_103a4, 256
  store i32 %v2_103a4, i32* %r4.global-to-local, align 4
  br label %bb114

bb114:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_103b833 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_103a4, %.thread12 ]
  %v0_103a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_103a8 = add i32 %v0_103a8, 1
  store i32 %v1_103a8, i32* %ip.global-to-local, align 4
  %v0_103ac = load i32, i32* %r2.global-to-local, align 4
  %v1_103ac = add i32 %v0_103ac, 1
  store i32 %v1_103ac, i32* %r2.global-to-local, align 4
  %v1_103b0.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_103b0 = sub i32 %v1_103b0.pre, %v1_103a8
  store i32 %v2_103b0, i32* %r3.global-to-local, align 4
  %v2_103b4 = icmp eq i32 %v2_103b0, 0
  store i1 %v2_103b4, i1* %cpsr_z.global-to-local, align 1
  %v1_103b8 = add nuw nsw i32 %v0_103b833, 1
  store i32 %v1_103b8, i32* @lr, align 4
  store i32 %v0_103ac, i32* %r1.global-to-local, align 4
  %tmp115 = icmp slt i32 %v2_103b0, 1
  %extract.t149 = trunc i32 %v0_103b833 to i8
  br i1 %tmp115, label %dec_label_pc_103c4, label %dec_label_pc_10388

dec_label_pc_103c4:                               ; preds = %bb114, %dec_label_pc_1033c
  %v1_103bc.lcssa = phi i32 [ %v1_103bc144, %dec_label_pc_1033c ], [ %v0_103ac, %bb114 ]
  store i32 0, i32* @r4, align 4
  %v4_103c8 = inttoptr i32 %v1_103bc.lcssa to i8*
  store i8 0, i8* %v4_103c8, align 1
  store i32 %v2_1036c, i32* %r0.global-to-local, align 4
  %v1_103d0 = bitcast i32* %stack_var_-2232 to i8*
  %v2_103d0 = call i32 @function_12dec(i8* %v1_103d0)
  %v2_103d4 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_103d4, i32* %r1.global-to-local, align 4
  %v1_103d8 = load i32, i32* @sb, align 4
  %v2_103d8 = add i32 %v1_103d8, %v2_103d0
  store i32 %v2_103d8, i32* %r5.global-to-local, align 4
  %v0_103e0 = load i32, i32* @r4, align 4
  store i32 %v0_103e0, i32* %stack_var_-68, align 4
  store i32 %v2_1036c, i32* %r0.global-to-local, align 4
  %v2_103f0 = call i32 @function_12dec(i8* %v1_103d0)
  %v1_103f4 = add i32 %v2_103f0, 17
  store i32 %v1_103f4, i32* %r0.global-to-local, align 4
  %v0_103fc = call i32 @function_10038()
  %v1_103fc = sext i32 %v0_103fc to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_10408 = mul nuw nsw i64 %v1_103fc, 2147516417
  %v6_10408 = udiv i64 %v5_10408, 4294967296
  %v7_10408 = trunc i64 %v6_10408 to i32
  %v8_10408 = trunc i64 %v5_10408 to i32
  store i32 %v8_10408, i32* @lr, align 4
  store i32 %v7_10408, i32* %r2.global-to-local, align 4
  %v5_1040c4 = udiv i64 %v5_10408, 140737488355328
  %v5_1040c = trunc i64 %v5_1040c4 to i32
  %v6_1040c = add i32 %v5_1040c, %v0_103fc
  store i32 16, i32* %r1.global-to-local, align 4
  %v6_10418 = urem i32 %v6_1040c, 65536
  store i32 %v6_10418, i32* %ip.global-to-local, align 4
  %v2_10420 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10420, i32* %r0.global-to-local, align 4
  %v5_10424 = trunc i32 %v6_1040c to i16
  %v2_10428 = call i32 @function_12e80(i32 %v2_10420, i32 16)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 %v2_103d4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 134744072, i32* %r0.global-to-local, align 4
  %v1_10444 = call i32 @function_152f0(i32 134744072)
  store i32 %v2_103d4, i32* %r3.global-to-local, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_10454 = call i32 @function_15314(i32 53)
  store i32 %v2_103d4, i32* %ip.global-to-local, align 4
  store i16 %v5_10424, i16* %stack_var_-2244, align 2
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_1046c = call i32 @function_15314(i32 256)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10478 = call i32 @function_15314(i32 1)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10484 = call i32 @function_15314(i32 1)
  %v2_10484 = trunc i32 %v1_10484 to i16
  %v3_10488 = load i32, i32* %r5.global-to-local, align 4
  %v4_10488 = add i32 %v3_10488, 1
  %v5_10488 = inttoptr i32 %v4_10488 to i16*
  store i16 %v2_10484, i16* %v5_10488, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10490 = call i32 @function_15314(i32 1)
  %v2_10490 = trunc i32 %v1_10490 to i16
  store i32 %v1_10490, i32* %r0.global-to-local, align 4
  %v0_10494 = load i32, i32* %r5.global-to-local, align 4
  %v1_10494 = add i32 %v0_10494, 1
  store i32 %v1_10494, i32* @r5, align 4
  %v4_10498 = add i32 %v0_10494, 3
  %v5_10498 = inttoptr i32 %v4_10498 to i16*
  store i16 %v2_10490, i16* %v5_10498, align 2
  %v2_10534 = ptrtoint i32* %stack_var_-196 to i32
  %v2_10558 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10584 = ptrtoint i32* %stack_var_-52 to i32
  %v2_105c8 = ptrtoint i16* %stack_var_-4292 to i32
  %v2_1065c = ptrtoint i32* %stack_var_-4280 to i32
  %v1_10664 = bitcast i32* %stack_var_-4280 to i8*
  %v4_10688 = zext i16 %tmp78 to i32
  %v2_1068c = icmp eq i16 %tmp78, 0
  br label %dec_label_pc_104a4

dec_label_pc_104a4:                               ; preds = %dec_label_pc_10610, %dec_label_pc_103c4
  %v1_104a8 = phi i32 [ -1, %dec_label_pc_103c4 ], [ %v0_104a4.pre, %dec_label_pc_10610 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_103c4 ], [ %v1_10610, %dec_label_pc_10610 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_104a4 = icmp eq i32 %v1_104a8, -1
  store i1 %v7_104a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104a4, label %bb117, label %bb116

bb116:                                            ; preds = %dec_label_pc_104a4
  store i32 %v1_104a8, i32* %r0.global-to-local, align 4
  br label %bb117

bb117:                                            ; preds = %dec_label_pc_104a4, %bb116
  store i32 66736, i32* @lr, align 4
  %v1_104ac = xor i1 %v7_104a4, true
  call void @__pseudo_cond_branch(i1 %v1_104ac, i32 ptrtoint (i32* @global_var_165e8.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_104bc = call i32 @function_1561c(i32 2, i32 2, i32 0)
  store i32 %v3_104bc, i32* %r0.global-to-local, align 4
  %v7_104c0 = icmp eq i32 %v3_104bc, -1
  store i1 %v7_104c0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_104bc, i32* @r6, align 4
  br i1 %v7_104c0, label %dec_label_pc_10650, label %dec_label_pc_104cc

dec_label_pc_104cc:                               ; preds = %bb117
  store i32 %v2_10420, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_104d8 = call i32 @function_15260(i32 %v3_104bc, i32 %v2_10420, i32 16)
  store i32 %v3_104d8, i32* %r0.global-to-local, align 4
  %v7_104dc = icmp eq i32 %v3_104d8, -1
  store i1 %v7_104dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104dc, label %dec_label_pc_10618, label %dec_label_pc_104e4

dec_label_pc_104e4:                               ; preds = %dec_label_pc_104cc
  %v0_104e4 = load i32, i32* @r6, align 4
  store i32 %v0_104e4, i32* @r0, align 4
  store i32 %v2_10368, i32* @r1, align 4
  store i32 %v1_103f4, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_104f4 = call i32 @function_1553c(i32 %v0_104e4, i32 %v2_10368, i32 %v1_103f4, i32 16384)
  store i32 %v4_104f4, i32* %r0.global-to-local, align 4
  %v7_104f8 = icmp eq i32 %v4_104f4, -1
  store i1 %v7_104f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104f8, label %dec_label_pc_10618, label %dec_label_pc_10500

dec_label_pc_10500:                               ; preds = %dec_label_pc_104e4
  %v0_10500 = load i32, i32* @r6, align 4
  store i32 %v0_10500, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_1050c = call i32 @function_13a30(i32 3, i32 %v0_10500, i32 0)
  %v0_10510 = load i32, i32* @r6, align 4
  store i32 %v0_10510, i32* %r1.global-to-local, align 4
  %v1_10514 = or i32 %v3_1050c, 2048
  store i32 %v1_10514, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_1051c = call i32 @function_13a30(i32 4, i32 %v0_10510, i32 %v1_10514)
  store i32 %v3_1051c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_10534, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10538

dec_label_pc_10538:                               ; preds = %dec_label_pc_10538, %dec_label_pc_10500
  %v1_1053c = phi i32 [ %v1_10540, %dec_label_pc_10538 ], [ 4, %dec_label_pc_10500 ]
  store i32 0, i32* @r4, align 4
  %v3_1053c = add i32 %v1_1053c, %v2_10534
  %v4_1053c = inttoptr i32 %v3_1053c to i32*
  store i32 0, i32* %v4_1053c, align 4
  %v0_10540 = load i32, i32* %r3.global-to-local, align 4
  %v1_10540 = add i32 %v0_10540, 4
  store i32 %v1_10540, i32* %r3.global-to-local, align 4
  %v7_10544 = icmp eq i32 %v1_10540, 128
  br i1 %v7_10544, label %dec_label_pc_1054c, label %dec_label_pc_10538

dec_label_pc_1054c:                               ; preds = %dec_label_pc_10538
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_1054c = load i32, i32* @r6, align 4
  %v3_1054c = udiv i32 %v0_1054c, 32
  %v3_10554 = mul nuw nsw i32 %v3_1054c, 4
  store i32 %v3_10554, i32* %r3.global-to-local, align 4
  store i32 %v2_10558, i32* %r2.global-to-local, align 4
  %v2_1055c = add i32 %v3_10554, %v2_10558
  store i32 %v2_1055c, i32* @r5, align 4
  %v1_10560 = add i32 %v2_1055c, -156
  %v2_10560 = inttoptr i32 %v1_10560 to i32*
  %v3_10560 = load i32, i32* %v2_10560, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10568 = urem i32 %v0_1054c, 32
  store i32 %v1_10568, i32* @r7, align 4
  %v7_1056c = shl i32 1, %v1_10568
  %v8_1056c = or i32 %v3_10560, %v7_1056c
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_1056c, i32* %v2_10560, align 4
  %v0_1057c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_1057c, i32* %stack_var_-52, align 4
  store i32 %v2_10584, i32* @lr, align 4
  store i32 %v2_103d4, i32* %ip.global-to-local, align 4
  %v0_1058c = load i32, i32* @r6, align 4
  %v1_1058c = load i32, i32* %r3.global-to-local, align 4
  %v2_1058c = add i32 %v1_1058c, %v0_1058c
  store i32 %v2_1058c, i32* %r0.global-to-local, align 4
  %v0_10594 = load i32, i32* @r4, align 4
  store i32 %v0_10594, i32* %r2.global-to-local, align 4
  store i32 %v0_10594, i32* %r3.global-to-local, align 4
  %v5_105a0 = call i32 @function_157a0(i32 %v2_1058c, i32 %v2_10534, i32 %v0_10594, i32 %v0_10594, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_105a0, i32* %r0.global-to-local, align 4
  %v7_105a4 = icmp eq i32 %v5_105a0, -1
  store i1 %v7_105a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105a4, label %dec_label_pc_10628, label %dec_label_pc_105ac

dec_label_pc_105ac:                               ; preds = %dec_label_pc_1054c
  %v1_105ac = load i32, i32* @r4, align 4
  %v9_105ac = icmp eq i32 %v5_105a0, %v1_105ac
  store i1 %v9_105ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_105ac, label %dec_label_pc_10608, label %dec_label_pc_105b4

dec_label_pc_105b4:                               ; preds = %dec_label_pc_105ac
  %v0_105b4 = load i32, i32* @r5, align 4
  %v1_105b4 = add i32 %v0_105b4, -156
  %v2_105b4 = inttoptr i32 %v1_105b4 to i32*
  %v3_105b4 = load i32, i32* %v2_105b4, align 4
  %v1_105b8 = load i32, i32* @r7, align 4
  %v6_105b8 = lshr i32 %v3_105b4, %v1_105b8
  store i32 %v6_105b8, i32* %r3.global-to-local, align 4
  %v1_105bc = urem i32 %v6_105b8, 2
  %v2_105bc = icmp eq i32 %v1_105bc, 0
  store i1 %v2_105bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105bc, label %dec_label_pc_10628, label %dec_label_pc_105c4

dec_label_pc_105c4:                               ; preds = %dec_label_pc_105b4
  store i32 %v2_105c8, i32* @r5, align 4
  store i32 %v2_105c8, i32* @r1, align 4
  store i32 2048, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_105d8 = load i32, i32* @r6, align 4
  store i32 %v0_105d8, i32* @r0, align 4
  %v0_105e4 = call i32 @function_154f4()
  store i32 %v0_105e4, i32* %r4.global-to-local, align 4
  %v0_105ec = load i32, i32* @sb, align 4
  store i32 %v0_105ec, i32* %r0.global-to-local, align 4
  %v1_105f0 = inttoptr i32 %v0_105ec to i8*
  %v2_105f0 = call i32 @function_12dec(i8* %v1_105f0)
  %v1_105f4 = add i32 %v2_105f0, 17
  store i32 %v1_105f4, i32* %r0.global-to-local, align 4
  %v0_105f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_105f8 = icmp ult i32 %v0_105f8, %v1_105f4
  %v9_105f8 = icmp eq i32 %v0_105f8, %v1_105f4
  store i1 %v9_105f8, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_105f8, label %dec_label_pc_10608, label %dec_label_pc_1065c

dec_label_pc_10608:                               ; preds = %dec_label_pc_105c4, %dec_label_pc_1065c, %dec_label_pc_10688, %dec_label_pc_105ac, %dec_label_pc_10650
  %v0_10608 = load i32, i32* @r8, align 4
  %v7_10608 = icmp eq i32 %v0_10608, 5
  store i1 %v7_10608, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10608, label %dec_label_pc_10628, label %dec_label_pc_10610

dec_label_pc_10610:                               ; preds = %dec_label_pc_10618, %dec_label_pc_10608
  %v0_10610 = phi i32 [ %v0_10620, %dec_label_pc_10618 ], [ %v0_10608, %dec_label_pc_10608 ]
  %v1_10610 = add i32 %v0_10610, 1
  %v0_104a4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_104a4

dec_label_pc_10618:                               ; preds = %dec_label_pc_104e4, %dec_label_pc_104cc
  %v0_10618 = phi i32 [ %v4_104f4, %dec_label_pc_104e4 ], [ %v3_104d8, %dec_label_pc_104cc ]
  %v1_10618 = add i32 %v0_10618, 2
  store i32 %v1_10618, i32* %r0.global-to-local, align 4
  %v1_1061c = call i32 @function_166d4(i32 %v1_10618)
  store i32 %v1_1061c, i32* %r0.global-to-local, align 4
  %v0_10620 = load i32, i32* @r8, align 4
  %v7_10620 = icmp eq i32 %v0_10620, 5
  store i1 %v7_10620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10620, label %dec_label_pc_10628, label %dec_label_pc_10610

dec_label_pc_10628:                               ; preds = %dec_label_pc_10618, %dec_label_pc_10608, %dec_label_pc_105b4, %dec_label_pc_1054c, %dec_label_pc_10694, %dec_label_pc_1069c.backedge
  %v0_10628 = load i32, i32* @r6, align 4
  store i32 %v0_10628, i32* @r0, align 4
  %v1_1062c = call i32 @function_165e8(i32 %v0_10628)
  store i32 %v1_1062c, i32* %r0.global-to-local, align 4
  %v0_10630 = load i32, i32* @fp, align 4
  %v1_10630 = inttoptr i32 %v0_10630 to i8*
  %v2_10630 = load i8, i8* %v1_10630, align 1
  %v3_10630 = zext i8 %v2_10630 to i32
  store i32 %v3_10630, i32* @r4, align 4
  %v2_10634 = icmp eq i8 %v2_10630, 0
  store i1 %v2_10634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10634, label %dec_label_pc_1077c, label %dec_label_pc_1063c

dec_label_pc_1063c:                               ; preds = %dec_label_pc_10628, %dec_label_pc_1077c
  %v0_1063c = phi i32 [ %v0_10630, %dec_label_pc_10628 ], [ %v0_10790, %dec_label_pc_1077c ]
  store i32 %v0_1063c, i32* %r0.global-to-local, align 4
  store i32 %v3_1033c, i32* @r4, align 4
  store i32 %v9_1033c, i32* @r6, align 4
  store i32 %v12_1033c, i32* @r7, align 4
  store i32 %v15_1033c, i32* @r8, align 4
  store i32 %v18_1033c, i32* @sb, align 4
  store i32 %v21_1033c, i32* @sl, align 4
  store i32 %v24_1033c, i32* @fp, align 4
  store i32 %v27_1033c, i32* @lr, align 4
  ret i32 %v0_1063c

dec_label_pc_10650:                               ; preds = %bb117
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10654 = call i32 @function_166d4(i32 1)
  store i32 %v1_10654, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10608

dec_label_pc_1065c:                               ; preds = %dec_label_pc_105c4
  store i32 %v2_1065c, i32* @sb, align 4
  store i32 %v2_1065c, i32* %r0.global-to-local, align 4
  %v2_10664 = call i32 @function_12dec(i8* %v1_10664)
  store i32 %v2_10558, i32* @lr, align 4
  %v4_10670 = load i16, i16* %stack_var_-4292, align 2
  %v5_10670 = sext i16 %v4_10670 to i32
  store i32 %v5_10670, i32* %r3.global-to-local, align 4
  store i32 %v6_1040c, i32* %r1.global-to-local, align 4
  %v1_10678 = load i32, i32* @sb, align 4
  %v2_10678 = add i32 %v1_10678, %v2_10664
  store i32 %v2_10678, i32* %r0.global-to-local, align 4
  %v9_1067c = icmp eq i16 %v4_10670, %v5_10424
  store i1 %v9_1067c, i1* %cpsr_z.global-to-local, align 1
  %v1_10680 = add i32 %v2_10678, 5
  store i32 %v1_10680, i32* @r4, align 4
  br i1 %v9_1067c, label %dec_label_pc_10688, label %dec_label_pc_10608

dec_label_pc_10688:                               ; preds = %dec_label_pc_1065c
  store i32 %v4_10688, i32* %r0.global-to-local, align 4
  store i1 %v2_1068c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1068c, label %dec_label_pc_10608, label %dec_label_pc_10694

dec_label_pc_10694:                               ; preds = %dec_label_pc_10688
  %v1_10694 = call i32 @function_154bc(i32 %v4_10688)
  store i32 %v1_10694, i32* %r0.global-to-local, align 4
  %v1_1069c133 = add i32 %v1_10694, -1
  %v3_106a0134 = mul i32 %v1_1069c133, 65536
  store i32 %v3_106a0134, i32* %r3.global-to-local, align 4
  %v7_106a4140 = icmp eq i32 %v3_106a0134, -65536
  store i1 %v7_106a4140, i1* %cpsr_z.global-to-local, align 1
  %v3_106a8141 = urem i32 %v1_1069c133, 65536
  store i32 %v3_106a8141, i32* @sl, align 4
  br i1 %v7_106a4140, label %dec_label_pc_10628, label %dec_label_pc_106b0.lr.ph

dec_label_pc_106b0.lr.ph:                         ; preds = %dec_label_pc_10694
  %v0_106b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_106b0

dec_label_pc_106b0:                               ; preds = %dec_label_pc_106b0.lr.ph, %dec_label_pc_1069c.backedge
  %v0_106b0 = phi i32 [ %v0_106b0.pre, %dec_label_pc_106b0.lr.ph ], [ %storemerge29, %dec_label_pc_1069c.backedge ]
  store i32 %v0_106b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_106bc18 = inttoptr i32 %v0_106b0 to i8*
  %v2_106bc19 = load i8, i8* %v1_106bc18, align 1
  %v3_106bc20 = zext i8 %v2_106bc19 to i32
  store i32 %v3_106bc20, i32* %r2.global-to-local, align 4
  %v2_106c021 = icmp eq i8 %v2_106bc19, 0
  store i1 %v2_106c021, i1* %cpsr_z.global-to-local, align 1
  %v3_106c422 = mul nuw nsw i32 %v3_106bc20, 256
  store i32 %v3_106c422, i32* %r1.global-to-local, align 4
  br i1 %v2_106c021, label %dec_label_pc_106f8, label %dec_label_pc_106cc.preheader

dec_label_pc_106cc.preheader:                     ; preds = %dec_label_pc_106b0, %dec_label_pc_106bc.backedge
  %v1_107a0 = phi i32 [ %v1_107a049, %dec_label_pc_106bc.backedge ], [ 1, %dec_label_pc_106b0 ]
  %v0_1079847 = phi i32 [ %v0_10798, %dec_label_pc_106bc.backedge ], [ 0, %dec_label_pc_106b0 ]
  %v0_106d845 = phi i32 [ %v3_106c4, %dec_label_pc_106bc.backedge ], [ %v3_106c422, %dec_label_pc_106b0 ]
  %v0_106d443 = phi i32 [ %v1_1079c, %dec_label_pc_106bc.backedge ], [ %v0_106b0, %dec_label_pc_106b0 ]
  %v0_106cc41 = phi i32 [ %v3_106bc, %dec_label_pc_106bc.backedge ], [ %v3_106bc20, %dec_label_pc_106b0 ]
  br label %dec_label_pc_106cc

dec_label_pc_106cc:                               ; preds = %dec_label_pc_106cc.preheader, %dec_label_pc_106d4
  %v0_10798 = phi i32 [ %v0_1079847, %dec_label_pc_106cc.preheader ], [ 1, %dec_label_pc_106d4 ]
  %v0_106d8 = phi i32 [ %v0_106d845, %dec_label_pc_106cc.preheader ], [ %v3_106f0, %dec_label_pc_106d4 ]
  %v0_1079c = phi i32 [ %v0_106d443, %dec_label_pc_106cc.preheader ], [ %v2_106e0, %dec_label_pc_106d4 ]
  %v0_106cc = phi i32 [ %v0_106cc41, %dec_label_pc_106cc.preheader ], [ %v3_106e4, %dec_label_pc_106d4 ]
  %v7_106cc = icmp eq i32 %v0_106cc, 191
  store i1 %v7_106cc, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_106cc, 192
  br i1 %tmp, label %dec_label_pc_10798, label %dec_label_pc_106d4

dec_label_pc_106d4:                               ; preds = %dec_label_pc_106cc
  %v1_106d4 = add i32 %v0_1079c, 1
  %v2_106d4 = inttoptr i32 %v1_106d4 to i8*
  %v3_106d4 = load i8, i8* %v2_106d4, align 1
  %v4_106d4 = zext i8 %v3_106d4 to i32
  %v2_106d8 = or i32 %v4_106d4, -49152
  %v0_106e0 = load i32, i32* @r5, align 4
  %v1_106dc = add i32 %v0_106e0, %v0_106d8
  %v2_106e0 = add i32 %v1_106dc, %v2_106d8
  store i32 %v2_106e0, i32* %r3.global-to-local, align 4
  %v1_106e4 = inttoptr i32 %v2_106e0 to i8*
  %v2_106e4 = load i8, i8* %v1_106e4, align 1
  %v3_106e4 = zext i8 %v2_106e4 to i32
  store i32 %v3_106e4, i32* %r2.global-to-local, align 4
  %v2_106e8 = icmp eq i8 %v2_106e4, 0
  store i1 %v2_106e8, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_106f0 = mul nuw nsw i32 %v3_106e4, 256
  store i32 %v3_106f0, i32* %r1.global-to-local, align 4
  br i1 %v2_106e8, label %dec_label_pc_106f8, label %dec_label_pc_106cc

dec_label_pc_106f8:                               ; preds = %dec_label_pc_106bc.backedge, %dec_label_pc_106d4, %dec_label_pc_106b0
  %v1_106fc = phi i32 [ 1, %dec_label_pc_106b0 ], [ %v1_107a0, %dec_label_pc_106d4 ], [ %v1_107a049, %dec_label_pc_106bc.backedge ]
  %v0_106f8 = phi i32 [ 0, %dec_label_pc_106b0 ], [ 1, %dec_label_pc_106d4 ], [ %v0_10798, %dec_label_pc_106bc.backedge ]
  %v7_106f8 = icmp eq i32 %v0_106f8, 1
  store i1 %v7_106f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106f8, label %bb118, label %bb119

bb118:                                            ; preds = %dec_label_pc_106f8
  %v2_106fc = add i32 %v1_106fc, 1
  store i32 %v2_106fc, i32* %r0.global-to-local, align 4
  br label %bb119

bb119:                                            ; preds = %dec_label_pc_106f8, %bb118
  %v1_10708 = phi i32 [ %v1_106fc, %dec_label_pc_106f8 ], [ %v2_106fc, %bb118 ]
  %v2_10700 = add i32 %v1_10708, %v0_106b0
  store i32 %v2_10700, i32* @r7, align 4
  %v1_10704 = add i32 %v2_10700, 1
  %v2_10704 = inttoptr i32 %v1_10704 to i8*
  %v3_10704 = load i8, i8* %v2_10704, align 1
  %v4_10704 = zext i8 %v3_10704 to i32
  store i32 %v4_10704, i32* %r3.global-to-local, align 4
  %v3_10708 = inttoptr i32 %v2_10700 to i8*
  %v4_10708 = load i8, i8* %v3_10708, align 1
  %v6_10708 = zext i8 %v4_10708 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v4_10710 = mul nuw nsw i32 %v4_10704, 256
  %v5_10710 = or i32 %v6_10708, %v4_10710
  store i32 %v5_10710, i32* %r4.global-to-local, align 4
  %v1_10714 = call i32 @function_15314(i32 1)
  store i32 %v1_10714, i32* %r0.global-to-local, align 4
  %v9_10718 = icmp eq i32 %v5_10710, %v1_10714
  store i1 %v9_10718, i1* %cpsr_z.global-to-local, align 1
  %v0_1071c = load i32, i32* @r7, align 4
  %v1_1071c = add i32 %v0_1071c, 10
  store i32 %v1_1071c, i32* @r8, align 4
  br i1 %v9_10718, label %dec_label_pc_107b8, label %dec_label_pc_10724

dec_label_pc_10724:                               ; preds = %dec_label_pc_107b8.dec_label_pc_10724_crit_edge, %bb119
  %v0_10774 = phi i32 [ %v0_10724.pre, %dec_label_pc_107b8.dec_label_pc_10724_crit_edge ], [ %v1_1071c, %bb119 ]
  store i32 %v0_10774, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1073024 = inttoptr i32 %v0_10774 to i8*
  %v2_1073025 = load i8, i8* %v1_1073024, align 1
  %v3_1073026 = zext i8 %v2_1073025 to i32
  store i32 %v3_1073026, i32* %r2.global-to-local, align 4
  %v2_1073427 = icmp eq i8 %v2_1073025, 0
  store i1 %v2_1073427, i1* %cpsr_z.global-to-local, align 1
  %v3_1073828 = mul nuw nsw i32 %v3_1073026, 256
  store i32 %v3_1073828, i32* %r1.global-to-local, align 4
  br i1 %v2_1073427, label %dec_label_pc_1076c, label %dec_label_pc_10740.preheader

dec_label_pc_10740.preheader:                     ; preds = %dec_label_pc_10724, %dec_label_pc_10730.backedge
  %v1_107b0 = phi i32 [ %v1_107b065, %dec_label_pc_10730.backedge ], [ 1, %dec_label_pc_10724 ]
  %v0_107a863 = phi i32 [ %v0_107a8, %dec_label_pc_10730.backedge ], [ 0, %dec_label_pc_10724 ]
  %v0_1074c61 = phi i32 [ %v3_10738, %dec_label_pc_10730.backedge ], [ %v3_1073828, %dec_label_pc_10724 ]
  %v0_1074859 = phi i32 [ %v1_107ac, %dec_label_pc_10730.backedge ], [ %v0_10774, %dec_label_pc_10724 ]
  %v0_1074057 = phi i32 [ %v3_10730, %dec_label_pc_10730.backedge ], [ %v3_1073026, %dec_label_pc_10724 ]
  br label %dec_label_pc_10740

dec_label_pc_10740:                               ; preds = %dec_label_pc_10740.preheader, %dec_label_pc_10748
  %v0_107a8 = phi i32 [ %v0_107a863, %dec_label_pc_10740.preheader ], [ 1, %dec_label_pc_10748 ]
  %v0_1074c = phi i32 [ %v0_1074c61, %dec_label_pc_10740.preheader ], [ %v3_10764, %dec_label_pc_10748 ]
  %v0_107ac = phi i32 [ %v0_1074859, %dec_label_pc_10740.preheader ], [ %v2_10754, %dec_label_pc_10748 ]
  %v0_10740 = phi i32 [ %v0_1074057, %dec_label_pc_10740.preheader ], [ %v3_10758, %dec_label_pc_10748 ]
  %v7_10740 = icmp eq i32 %v0_10740, 191
  store i1 %v7_10740, i1* %cpsr_z.global-to-local, align 1
  %tmp157 = icmp ult i32 %v0_10740, 192
  br i1 %tmp157, label %dec_label_pc_107a8, label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %dec_label_pc_10740
  %v1_10748 = add i32 %v0_107ac, 1
  %v2_10748 = inttoptr i32 %v1_10748 to i8*
  %v3_10748 = load i8, i8* %v2_10748, align 1
  %v4_10748 = zext i8 %v3_10748 to i32
  %v2_1074c = or i32 %v4_10748, -49152
  %v0_10754 = load i32, i32* @r5, align 4
  %v1_10750 = add i32 %v0_10754, %v0_1074c
  %v2_10754 = add i32 %v1_10750, %v2_1074c
  store i32 %v2_10754, i32* %r3.global-to-local, align 4
  %v1_10758 = inttoptr i32 %v2_10754 to i8*
  %v2_10758 = load i8, i8* %v1_10758, align 1
  %v3_10758 = zext i8 %v2_10758 to i32
  store i32 %v3_10758, i32* %r2.global-to-local, align 4
  %v2_1075c = icmp eq i8 %v2_10758, 0
  store i1 %v2_1075c, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_10764 = mul nuw nsw i32 %v3_10758, 256
  store i32 %v3_10764, i32* %r1.global-to-local, align 4
  br i1 %v2_1075c, label %dec_label_pc_1076c, label %dec_label_pc_10740

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10730.backedge, %dec_label_pc_10748, %dec_label_pc_10724
  %v1_10770 = phi i32 [ 1, %dec_label_pc_10724 ], [ %v1_107b0, %dec_label_pc_10748 ], [ %v1_107b065, %dec_label_pc_10730.backedge ]
  %v0_1076c = phi i32 [ 0, %dec_label_pc_10724 ], [ 1, %dec_label_pc_10748 ], [ %v0_107a8, %dec_label_pc_10730.backedge ]
  %v7_1076c = icmp eq i32 %v0_1076c, 1
  store i1 %v7_1076c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1076c, label %bb120, label %bb121

bb120:                                            ; preds = %dec_label_pc_1076c
  %v2_10770 = add i32 %v1_10770, 1
  store i32 %v2_10770, i32* %r0.global-to-local, align 4
  br label %bb121

bb121:                                            ; preds = %dec_label_pc_1076c, %bb120
  %v1_10774 = phi i32 [ %v1_10770, %dec_label_pc_1076c ], [ %v2_10770, %bb120 ]
  %v2_10774 = add i32 %v1_10774, %v0_10774
  br label %dec_label_pc_1069c.backedge

dec_label_pc_1069c.backedge:                      ; preds = %bb121, %dec_label_pc_10848
  %storemerge29 = phi i32 [ %v2_10774, %bb121 ], [ %v2_10858, %dec_label_pc_10848 ]
  store i32 %storemerge29, i32* @r4, align 4
  %v0_1069c.pre = load i32, i32* @sl, align 4
  %v1_1069c = add i32 %v0_1069c.pre, -1
  %v3_106a0 = mul i32 %v1_1069c, 65536
  store i32 %v3_106a0, i32* %r3.global-to-local, align 4
  %v7_106a4 = icmp eq i32 %v3_106a0, -65536
  store i1 %v7_106a4, i1* %cpsr_z.global-to-local, align 1
  %v3_106a8 = urem i32 %v1_1069c, 65536
  store i32 %v3_106a8, i32* @sl, align 4
  br i1 %v7_106a4, label %dec_label_pc_10628, label %dec_label_pc_106b0

dec_label_pc_1077c:                               ; preds = %dec_label_pc_10628
  %v1_1077c = add i32 %v0_10630, 4
  %v2_1077c = inttoptr i32 %v1_1077c to i32*
  %v3_1077c = load i32, i32* %v2_1077c, align 4
  store i32 %v3_1077c, i32* %r0.global-to-local, align 4
  %v2_10780 = icmp eq i32 %v3_1077c, 0
  store i1 %v2_10780, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_10788.194 to i32), i32* @lr, align 4
  %v1_10784 = xor i1 %v2_10780, true
  call void @__pseudo_cond_branch(i1 %v1_10784, i32 ptrtoint (i32* @global_var_14248.58 to i32))
  %v0_10788 = load i32, i32* @fp, align 4
  store i32 %v0_10788, i32* %r0.global-to-local, align 4
  %v1_1078c = call i32 @function_14248(i32 %v0_10788)
  store i32 %v1_1078c, i32* %r0.global-to-local, align 4
  %v0_10790 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1063c

dec_label_pc_10798:                               ; preds = %dec_label_pc_106cc
  %v2_10798 = icmp eq i32 %v0_10798, 0
  store i1 %v2_10798, i1* %cpsr_z.global-to-local, align 1
  %v1_1079c = add i32 %v0_1079c, 1
  store i32 %v1_1079c, i32* %r3.global-to-local, align 4
  br i1 %v2_10798, label %bb122, label %dec_label_pc_106bc.backedge

dec_label_pc_106bc.backedge:                      ; preds = %dec_label_pc_10798, %bb122
  %v1_107a049 = phi i32 [ %v1_107a0, %dec_label_pc_10798 ], [ %v2_107a0, %bb122 ]
  %v1_106bc = inttoptr i32 %v1_1079c to i8*
  %v2_106bc = load i8, i8* %v1_106bc, align 1
  %v3_106bc = zext i8 %v2_106bc to i32
  store i32 %v3_106bc, i32* %r2.global-to-local, align 4
  %v2_106c0 = icmp eq i8 %v2_106bc, 0
  store i1 %v2_106c0, i1* %cpsr_z.global-to-local, align 1
  %v3_106c4 = mul nuw nsw i32 %v3_106bc, 256
  store i32 %v3_106c4, i32* %r1.global-to-local, align 4
  br i1 %v2_106c0, label %dec_label_pc_106f8, label %dec_label_pc_106cc.preheader

bb122:                                            ; preds = %dec_label_pc_10798
  %v2_107a0 = add i32 %v1_107a0, 1
  store i32 %v2_107a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_106bc.backedge

dec_label_pc_107a8:                               ; preds = %dec_label_pc_10740
  %v2_107a8 = icmp eq i32 %v0_107a8, 0
  store i1 %v2_107a8, i1* %cpsr_z.global-to-local, align 1
  %v1_107ac = add i32 %v0_107ac, 1
  store i32 %v1_107ac, i32* %r3.global-to-local, align 4
  br i1 %v2_107a8, label %bb123, label %dec_label_pc_10730.backedge

dec_label_pc_10730.backedge:                      ; preds = %dec_label_pc_107a8, %bb123
  %v1_107b065 = phi i32 [ %v1_107b0, %dec_label_pc_107a8 ], [ %v2_107b0, %bb123 ]
  %v1_10730 = inttoptr i32 %v1_107ac to i8*
  %v2_10730 = load i8, i8* %v1_10730, align 1
  %v3_10730 = zext i8 %v2_10730 to i32
  store i32 %v3_10730, i32* %r2.global-to-local, align 4
  %v2_10734 = icmp eq i8 %v2_10730, 0
  store i1 %v2_10734, i1* %cpsr_z.global-to-local, align 1
  %v3_10738 = mul nuw nsw i32 %v3_10730, 256
  store i32 %v3_10738, i32* %r1.global-to-local, align 4
  br i1 %v2_10734, label %dec_label_pc_1076c, label %dec_label_pc_10740.preheader

bb123:                                            ; preds = %dec_label_pc_107a8
  %v2_107b0 = add i32 %v1_107b0, 1
  store i32 %v2_107b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10730.backedge

dec_label_pc_107b8:                               ; preds = %bb119
  %v1_107b8 = add i32 %v0_1071c, 2
  %v2_107b8 = inttoptr i32 %v1_107b8 to i8*
  %v3_107b8 = load i8, i8* %v2_107b8, align 1
  %v4_107b8 = zext i8 %v3_107b8 to i32
  store i32 %v4_107b8, i32* %r4.global-to-local, align 4
  %v1_107bc = add i32 %v0_1071c, 3
  %v2_107bc = inttoptr i32 %v1_107bc to i8*
  %v3_107bc = load i8, i8* %v2_107bc, align 1
  %v4_107bc = zext i8 %v3_107bc to i32
  store i32 %v4_107bc, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v4_107c4 = mul nuw nsw i32 %v4_107bc, 256
  %v5_107c4 = or i32 %v4_107c4, %v4_107b8
  store i32 %v5_107c4, i32* @r4, align 4
  %v1_107c8 = call i32 @function_15314(i32 1)
  store i32 %v1_107c8, i32* %r0.global-to-local, align 4
  %v0_107cc = load i32, i32* @r4, align 4
  %v9_107cc = icmp eq i32 %v0_107cc, %v1_107c8
  store i1 %v9_107cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_107cc, label %dec_label_pc_107d4, label %dec_label_pc_107b8.dec_label_pc_10724_crit_edge

dec_label_pc_107b8.dec_label_pc_10724_crit_edge:  ; preds = %dec_label_pc_107b8
  %v0_10724.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10724

dec_label_pc_107d4:                               ; preds = %dec_label_pc_107b8
  %v0_107d4 = load i32, i32* @r7, align 4
  %v1_107d4 = add i32 %v0_107d4, 8
  %v2_107d4 = inttoptr i32 %v1_107d4 to i8*
  %v3_107d4 = load i8, i8* %v2_107d4, align 1
  %v4_107d4 = zext i8 %v3_107d4 to i32
  store i32 %v4_107d4, i32* %r3.global-to-local, align 4
  %v1_107d8 = add i32 %v0_107d4, 9
  %v2_107d8 = inttoptr i32 %v1_107d8 to i8*
  %v3_107d8 = load i8, i8* %v2_107d8, align 1
  %v4_107d8 = zext i8 %v3_107d8 to i32
  %v4_107dc = mul nuw nsw i32 %v4_107d8, 256
  %v5_107dc = or i32 %v4_107dc, %v4_107d4
  store i32 %v5_107dc, i32* %r0.global-to-local, align 4
  %v1_107e0 = call i32 @function_154bc(i32 %v5_107dc)
  store i32 %v1_107e0, i32* %r0.global-to-local, align 4
  %v7_107e4 = icmp eq i32 %v1_107e0, 4
  store i1 %v7_107e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107e4, label %dec_label_pc_107ec, label %dec_label_pc_10848

dec_label_pc_107ec:                               ; preds = %dec_label_pc_107d4
  %v0_107ec = load i32, i32* @r7, align 4
  %v1_107ec = add i32 %v0_107ec, 10
  %v2_107ec = inttoptr i32 %v1_107ec to i8*
  %v3_107ec = load i8, i8* %v2_107ec, align 1
  %v4_107ec = zext i8 %v3_107ec to i32
  store i32 %v4_107ec, i32* %r3.global-to-local, align 4
  store i32 %v2_103d4, i32* %r2.global-to-local, align 4
  %v0_107f8 = load i32, i32* @r8, align 4
  %v1_107f8 = add i32 %v0_107f8, 1
  %v2_107f8 = inttoptr i32 %v1_107f8 to i8*
  %v3_107f8 = load i8, i8* %v2_107f8, align 1
  %v4_107f8 = zext i8 %v3_107f8 to i32
  store i32 %v4_107f8, i32* %r2.global-to-local, align 4
  store i32 %v2_103d4, i32* %r3.global-to-local, align 4
  %v1_10804 = add i32 %v0_107f8, 2
  %v2_10804 = inttoptr i32 %v1_10804 to i8*
  %v3_10804 = load i8, i8* %v2_10804, align 1
  %v4_10804 = zext i8 %v3_10804 to i32
  store i32 %v4_10804, i32* %r3.global-to-local, align 4
  store i32 %v2_103d4, i32* %ip.global-to-local, align 4
  %v1_10810 = add i32 %v0_107f8, 3
  %v2_10810 = inttoptr i32 %v1_10810 to i8*
  %v3_10810 = load i8, i8* %v2_10810, align 1
  %v4_10810 = zext i8 %v3_10810 to i32
  store i32 %v4_10810, i32* %r2.global-to-local, align 4
  %v0_10818 = load i32, i32* @fp, align 4
  %v1_10818 = inttoptr i32 %v0_10818 to i8*
  %v2_10818 = load i8, i8* %v1_10818, align 1
  %v3_10818 = zext i8 %v2_10818 to i32
  %v1_1081c = mul nuw nsw i32 %v3_10818, 4
  %v3_10820 = add nuw nsw i32 %v1_1081c, 4
  store i32 %v3_10820, i32* %r1.global-to-local, align 4
  %v1_10824 = add i32 %v0_10818, 4
  %v2_10824 = inttoptr i32 %v1_10824 to i32*
  %v3_10824 = load i32, i32* %v2_10824, align 4
  store i32 %v3_10824, i32* %r0.global-to-local, align 4
  %v3_10828 = sext i8 %v3_10810 to i32
  %v5_10828 = sext i8 %v3_10804 to i32
  %v10_10828 = call i32 @function_14e90(i32 %v3_10824, i32 %v3_10820, i32 %v3_10828, i32 %v5_10828)
  store i32 %v10_10828, i32* %r0.global-to-local, align 4
  %v0_1082c = load i32, i32* @fp, align 4
  %v1_1082c = inttoptr i32 %v0_1082c to i8*
  %v2_1082c = load i8, i8* %v1_1082c, align 1
  %v3_1082c = zext i8 %v2_1082c to i32
  store i32 %v3_1082c, i32* %r2.global-to-local, align 4
  store i32 %v2_103d4, i32* @lr, align 4
  %v4_10834 = sext i8 %v3_107ec to i32
  store i32 %v4_10834, i32* %r3.global-to-local, align 4
  %v1_10838 = add nuw nsw i32 %v3_1082c, 1
  store i32 %v1_10838, i32* %r1.global-to-local, align 4
  %v5_1083c = mul nuw nsw i32 %v3_1082c, 4
  %v6_1083c = add i32 %v5_1083c, %v10_10828
  %v7_1083c = inttoptr i32 %v6_1083c to i32*
  store i32 %v4_10834, i32* %v7_1083c, align 4
  %v1_10840 = load i32, i32* @fp, align 4
  %v2_10840 = add i32 %v1_10840, 4
  %v3_10840 = inttoptr i32 %v2_10840 to i32*
  store i32 %v10_10828, i32* %v3_10840, align 4
  %v0_10844 = load i32, i32* %r1.global-to-local, align 4
  %v1_10844 = trunc i32 %v0_10844 to i8
  %v2_10844 = load i32, i32* @fp, align 4
  %v3_10844 = inttoptr i32 %v2_10844 to i8*
  store i8 %v1_10844, i8* %v3_10844, align 1
  br label %dec_label_pc_10848

dec_label_pc_10848:                               ; preds = %dec_label_pc_107d4, %dec_label_pc_107ec
  %v0_10848 = load i32, i32* @r7, align 4
  %v1_10848 = add i32 %v0_10848, 9
  %v2_10848 = inttoptr i32 %v1_10848 to i8*
  %v3_10848 = load i8, i8* %v2_10848, align 1
  %v4_10848 = zext i8 %v3_10848 to i32
  store i32 %v4_10848, i32* %r3.global-to-local, align 4
  %v1_1084c = add i32 %v0_10848, 8
  %v2_1084c = inttoptr i32 %v1_1084c to i8*
  %v3_1084c = load i8, i8* %v2_1084c, align 1
  %v4_1084c = zext i8 %v3_1084c to i32
  %v4_10850 = mul nuw nsw i32 %v4_10848, 256
  %v5_10850 = or i32 %v4_1084c, %v4_10850
  store i32 %v5_10850, i32* %r0.global-to-local, align 4
  %v1_10854 = call i32 @function_154bc(i32 %v5_10850)
  store i32 %v1_10854, i32* %r0.global-to-local, align 4
  %v1_10858 = load i32, i32* @r8, align 4
  %v2_10858 = add i32 %v1_10858, %v1_10854
  br label %dec_label_pc_1069c.backedge

; uselistorder directives
  uselistorder i32 %v10_10828, { 1, 0, 2 }
  uselistorder i32 %v3_10820, { 1, 0 }
  uselistorder i32 %v2_107b0, { 1, 0 }
  uselistorder i32 %v3_10730, { 0, 2, 1 }
  uselistorder i32 %v1_107b065, { 1, 0 }
  uselistorder i32 %v1_107ac, { 1, 2, 0 }
  uselistorder i32 %v2_107a0, { 1, 0 }
  uselistorder i32 %v3_106bc, { 0, 2, 1 }
  uselistorder i32 %v1_107a049, { 1, 0 }
  uselistorder i32 %v1_1079c, { 1, 2, 0 }
  uselistorder i1 %v7_106a4, { 1, 0 }
  uselistorder i32 %v1_1069c, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_10758, { 0, 2, 1 }
  uselistorder i32 %v2_10754, { 1, 2, 0 }
  uselistorder i32 %v0_107a8, { 2, 0, 1 }
  uselistorder i32 %v1_107b0, { 1, 2, 0 }
  uselistorder i32 %v3_1073828, { 1, 0 }
  uselistorder i32 %v3_1073026, { 1, 0, 2 }
  uselistorder i32 %v0_10774, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1071c, { 1, 0, 2 }
  uselistorder i32 %v3_106e4, { 0, 2, 1 }
  uselistorder i32 %v2_106e0, { 1, 2, 0 }
  uselistorder i32 %v0_10798, { 2, 0, 1 }
  uselistorder i32 %v1_107a0, { 1, 2, 0 }
  uselistorder i32 %v3_106c422, { 1, 0 }
  uselistorder i32 %v3_106bc20, { 1, 0, 2 }
  uselistorder i32 %v0_106b0, { 3, 0, 2, 1 }
  uselistorder i1 %v7_106a4140, { 1, 0 }
  uselistorder i32 %v1_1069c133, { 1, 0 }
  uselistorder i1 %v9_1067c, { 1, 0 }
  uselistorder i32 %v0_1063c, { 1, 0 }
  uselistorder i32 %v0_10630, { 1, 0, 2 }
  uselistorder i32 %v0_10620, { 1, 0 }
  uselistorder i32 %v0_105f8, { 1, 0 }
  uselistorder i1 %v7_105a4, { 1, 0 }
  uselistorder i32 %v5_105a0, { 1, 0, 2 }
  uselistorder i32 %v1_10568, { 1, 0 }
  uselistorder i32 %v3_10554, { 1, 0 }
  uselistorder i32 %v0_1054c, { 1, 0 }
  uselistorder i32 %v1_10540, { 1, 2, 0 }
  uselistorder i1 %v7_104f8, { 1, 0 }
  uselistorder i32 %v4_104f4, { 1, 0, 2 }
  uselistorder i1 %v7_104dc, { 1, 0 }
  uselistorder i32 %v3_104d8, { 1, 0, 2 }
  uselistorder i1 %v7_104c0, { 1, 0 }
  uselistorder i32 %v3_104bc, { 2, 1, 0, 3 }
  uselistorder i1 %v7_104a4, { 2, 1, 0 }
  uselistorder i32 %v1_104a8, { 1, 0 }
  uselistorder i32 %v2_10558, { 1, 0, 2 }
  uselistorder i32 %v2_10534, { 1, 0, 2 }
  uselistorder i32 %v1_10490, { 1, 0 }
  uselistorder i32 %v2_10420, { 1, 0, 2, 3 }
  uselistorder i32 %v6_1040c, { 1, 2, 0 }
  uselistorder i64 %v5_10408, { 0, 2, 1 }
  uselistorder i32 %v1_103f4, { 1, 0, 2 }
  uselistorder i32 %v1_103ac, { 1, 0 }
  uselistorder i32 %v1_103a8, { 1, 2, 0 }
  uselistorder i32 %v2_103a4, { 1, 0 }
  uselistorder i1 %v8_10390, { 1, 0 }
  uselistorder i32 %v2_10368, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp78, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 31, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 32 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 7, 9, 6, 1, 8, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 8, 5, 1, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 20, 22, 19 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 10, 7, 8, 9, 15, 12, 11, 13, 14, 19, 16, 17, 18, 22, 20, 21, 23, 26, 24, 25, 27, 30, 28, 29, 31, 33, 32, 35, 34, 36, 37, 38, 41, 40, 39, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 10, 4, 15, 5, 6, 16, 7, 8, 9, 1, 11, 12, 13, 14, 37, 35, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 34, 31, 32, 30, 33, 36 }
  uselistorder i32 (i32)* @function_166d4, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10848, { 1, 0 }
  uselistorder label %dec_label_pc_10730.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_106bc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1069c.backedge, { 1, 0 }
  uselistorder label %bb121, { 1, 0 }
  uselistorder label %dec_label_pc_10740, { 1, 0 }
  uselistorder label %dec_label_pc_10740.preheader, { 1, 0 }
  uselistorder label %bb119, { 1, 0 }
  uselistorder label %dec_label_pc_106cc, { 1, 0 }
  uselistorder label %dec_label_pc_106cc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_106b0, { 1, 0 }
  uselistorder label %dec_label_pc_1063c, { 1, 0 }
  uselistorder label %dec_label_pc_10628, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10608, { 2, 1, 4, 0, 3 }
  uselistorder label %bb117, { 1, 0 }
  uselistorder label %bb114, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_10388, { 1, 0 }
}

define i32 @function_10860(i32 %arg1) local_unnamed_addr {
dec_label_pc_10860:
  %v2_1086c = load i32, i32* @global_var_23680.196, align 4
  store i32 %v2_1086c, i32* @r0, align 4
  %v2_10874 = call i32 @function_158a0(i32 %v2_1086c, i32 9)
  ret i32 %v2_10874

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_158a0, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10888() local_unnamed_addr {
dec_label_pc_10888:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10888 = load i32, i32* @r4, align 4
  store i32 %v3_10888, i32* %stack_var_-16, align 4
  %v6_10888 = load i32, i32* @r5, align 4
  %v9_10888 = load i32, i32* @r6, align 4
  %v12_10888 = load i32, i32* @lr, align 4
  %v0_1088c = load i32, i32* @r0, align 4
  store i32 %v0_1088c, i32* @r5, align 4
  %v1_10890 = add i32 %v0_1088c, 4
  %v2_10890 = inttoptr i32 %v1_10890 to i32*
  %v3_10890 = load i32, i32* %v2_10890, align 4
  store i32 %v3_10890, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 67764, i32* @lr, align 4
  %v1_108b0 = icmp ne i32 %v3_10890, -1
  call void @__pseudo_cond_branch(i1 %v1_108b0, i32 ptrtoint (i32* @global_var_165e8.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_108bc = load i32, i32* @r6, align 4
  store i32 %v0_108bc, i32* %r2.global-to-local, align 4
  %v3_108c0 = call i32 @function_1561c(i32 2, i32 1, i32 %v0_108bc)
  store i32 %v3_108c0, i32* %r0.global-to-local, align 4
  %v7_108c4 = icmp eq i32 %v3_108c0, -1
  %v1_108c8 = load i32, i32* @r5, align 4
  %v2_108c8 = add i32 %v1_108c8, 4
  %v3_108c8 = inttoptr i32 %v2_108c8 to i32*
  store i32 %v3_108c0, i32* %v3_108c8, align 4
  br i1 %v7_108c4, label %dec_label_pc_10888.dec_label_pc_10940_crit_edge, label %dec_label_pc_108d0

dec_label_pc_10888.dec_label_pc_10940_crit_edge:  ; preds = %dec_label_pc_10888
  %v1_10948.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10940

dec_label_pc_108d0:                               ; preds = %dec_label_pc_10888
  %v2_10894 = ptrtoint i32* %stack_var_-32 to i32
  %v0_108d0 = load i32, i32* @r5, align 4
  %v1_108d0 = add i32 %v0_108d0, 28
  store i32 %v1_108d0, i32* %r0.global-to-local, align 4
  %v0_108d4 = load i32, i32* @r6, align 4
  %v2_108d4 = add i32 %v0_108d0, 24
  %v3_108d4 = inttoptr i32 %v2_108d4 to i32*
  store i32 %v0_108d4, i32* %v3_108d4, align 4
  %v2_108dc = call i32 @function_12e80(i32 %v1_108d0, i32 256)
  store i32 %v2_108dc, i32* %r0.global-to-local, align 4
  %v0_108e0 = load i32, i32* @r5, align 4
  %v1_108e0 = add i32 %v0_108e0, 4
  %v2_108e0 = inttoptr i32 %v1_108e0 to i32*
  %v3_108e0 = load i32, i32* %v2_108e0, align 4
  store i32 %v3_108e0, i32* @r4, align 4
  %v0_108e4 = load i32, i32* @r6, align 4
  store i32 %v0_108e4, i32* %r2.global-to-local, align 4
  store i32 %v3_108e0, i32* %r0.global-to-local, align 4
  %v3_108f0 = call i32 @function_13a30(i32 %v3_108e0, i32 3, i32 %v0_108e4)
  %v1_108f8 = or i32 %v3_108f0, 2048
  store i32 %v1_108f8, i32* %r2.global-to-local, align 4
  %v0_108fc = load i32, i32* @r4, align 4
  store i32 %v0_108fc, i32* %r0.global-to-local, align 4
  %v3_10900 = call i32 @function_13a30(i32 %v0_108fc, i32 4, i32 %v1_108f8)
  store i32 %v3_10900, i32* %r0.global-to-local, align 4
  %v2_10908 = load i32, i32* @global_var_230e8.198, align 4
  store i32 %v2_10908, i32* %r2.global-to-local, align 4
  %v1_10910 = load i32, i32* @r5, align 4
  %v2_10910 = add i32 %v1_10910, 12
  %v3_10910 = inttoptr i32 %v2_10910 to i32*
  store i32 1, i32* %v3_10910, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_1091c = load i32, i32* %r2.global-to-local, align 4
  %v1_1091c = load i32, i32* @r5, align 4
  %v2_1091c = add i32 %v1_1091c, 8
  %v3_1091c = inttoptr i32 %v2_1091c to i32*
  store i32 %v0_1091c, i32* %v3_1091c, align 4
  %v0_10920 = load i32, i32* @r5, align 4
  %v1_10924 = add i32 %v0_10920, 4
  %v2_10924 = inttoptr i32 %v1_10924 to i32*
  %v3_10924 = load i32, i32* %v2_10924, align 4
  store i32 %v3_10924, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_1093c = call i32 @function_15260(i32 %v3_10924, i32 %v2_10894, i32 16)
  store i32 %v3_1093c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10940

dec_label_pc_10940:                               ; preds = %dec_label_pc_10888.dec_label_pc_10940_crit_edge, %dec_label_pc_108d0
  %v1_10948 = phi i32 [ %v1_10948.pre, %dec_label_pc_10888.dec_label_pc_10940_crit_edge ], [ %v3_1093c, %dec_label_pc_108d0 ]
  %v2_10944 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10944, i32* @r4, align 4
  store i32 %v6_10888, i32* @r5, align 4
  store i32 %v9_10888, i32* @r6, align 4
  store i32 %v12_10888, i32* @lr, align 4
  ret i32 %v1_10948

; uselistorder directives
  uselistorder i32 %v3_108c0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @function_12e80, { 8, 12, 16, 15, 14, 13, 11, 10, 9, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10940, { 1, 0 }
}

define i32 @function_10950(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10950:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_10950 = load i32, i32* @r4, align 4
  %v6_10950 = load i32, i32* @r5, align 4
  %v9_10950 = load i32, i32* @r6, align 4
  %v12_10950 = load i32, i32* @r7, align 4
  %v15_10950 = load i32, i32* @r8, align 4
  %v18_10950 = load i32, i32* @sb, align 4
  %v21_10950 = load i32, i32* @sl, align 4
  %v24_10950 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_230b4.200 to i32), i32* @fp, align 4
  %v2_10958 = load i32, i32* @global_var_230b4.200, align 4
  store i32 ptrtoint (i32* @global_var_230e0.202 to i32), i32* @sl, align 4
  %v1_10964 = add i32 %v2_10958, 1
  store i32 %v1_10964, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10970 = load i32, i32* @global_var_230e0.202, align 4
  store i32 %v2_10970, i32* %r0.global-to-local, align 4
  %v3_10974 = mul i32 %v1_10964, 16
  store i32 %v3_10974, i32* %r1.global-to-local, align 4
  %v4_1097c = call i32 @function_14e90(i32 %v2_10970, i32 %v3_10974, i32 %arg3, i32 %v1_10964)
  %v2_10980 = load i32, i32* @global_var_230b4.200, align 4
  store i32 %v2_10980, i32* %r2.global-to-local, align 4
  store i32 %v4_1097c, i32* @r8, align 4
  %v0_10988 = load i32, i32* @r5, align 4
  store i32 %v0_10988, i32* %r0.global-to-local, align 4
  %v1_10990 = load i32, i32* @sl, align 4
  %v2_10990 = inttoptr i32 %v1_10990 to i32*
  store i32 %v4_1097c, i32* %v2_10990, align 4
  %v1_10994 = inttoptr i32 %v0_10988 to i8*
  %v2_10994 = call i32 @function_12dec(i8* %v1_10994)
  %sext = mul i32 %v2_10994, 16777216
  %v1_10998 = sdiv i32 %sext, 16777216
  %v2_10998 = add nsw i32 %v1_10998, 1
  store i32 %v2_10998, i32* @r4, align 4
  store i32 %v1_10998, i32* @r7, align 4
  store i32 %v2_10998, i32* @r0, align 4
  %v0_109a4 = call i32 @function_14744()
  store i32 %v0_109a4, i32* %r0.global-to-local, align 4
  %v0_109a8 = load i32, i32* @r5, align 4
  store i32 %v0_109a8, i32* %r1.global-to-local, align 4
  %v0_109ac = load i32, i32* @r4, align 4
  store i32 %v0_109ac, i32* %r2.global-to-local, align 4
  store i32 %v0_109a4, i32* %r6.global-to-local, align 4
  %v3_109b4 = call i32 @function_12e5c(i32 %v0_109a4, i32 %v0_109a8, i32 %v0_109ac)
  store i32 %v3_109b4, i32* %r0.global-to-local, align 4
  %v0_109b8 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_109b8, 1
  %extract.t6 = trunc i32 %v0_109b8 to i8
  br i1 %tmp22, label %dec_label_pc_109dc, label %dec_label_pc_109c0

dec_label_pc_109c0:                               ; preds = %dec_label_pc_10950
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_109c4

dec_label_pc_109c4:                               ; preds = %dec_label_pc_109c4, %dec_label_pc_109c0
  %v2_109cc = phi i32 [ %v1_109d0, %dec_label_pc_109c4 ], [ 0, %dec_label_pc_109c0 ]
  %v1_109c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_109c4 = add i32 %v1_109c4, %v2_109cc
  %v3_109c4 = inttoptr i32 %v2_109c4 to i8*
  %v4_109c4 = load i8, i8* %v3_109c4, align 1
  %v6_109c4 = zext i8 %v4_109c4 to i32
  %v1_109c8 = xor i32 %v6_109c4, 34
  store i32 %v1_109c8, i32* %r3.global-to-local, align 4
  %v1_109cc = trunc i32 %v1_109c8 to i8
  store i8 %v1_109cc, i8* %v3_109c4, align 1
  %v0_109d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_109d0 = add i32 %v0_109d0, 1
  store i32 %v1_109d0, i32* %r2.global-to-local, align 4
  %v1_109d4 = load i32, i32* @r7, align 4
  %v9_109d4 = icmp eq i32 %v1_109d0, %v1_109d4
  br i1 %v9_109d4, label %dec_label_pc_109dc.loopexit, label %dec_label_pc_109c4

dec_label_pc_109dc.loopexit:                      ; preds = %dec_label_pc_109c4
  %extract.t = trunc i32 %v1_109d0 to i8
  br label %dec_label_pc_109dc

dec_label_pc_109dc:                               ; preds = %dec_label_pc_109dc.loopexit, %dec_label_pc_10950
  %v0_109ec.off0 = phi i8 [ %extract.t, %dec_label_pc_109dc.loopexit ], [ %extract.t6, %dec_label_pc_10950 ]
  %v2_109dc = load i32, i32* @global_var_230b4.200, align 4
  %v2_109e0 = load i32, i32* @global_var_230e0.202, align 4
  %v3_109e4 = mul i32 %v2_109dc, 16
  store i32 %v3_109e4, i32* @sb, align 4
  %v2_109e8 = add i32 %v2_109e0, %v3_109e4
  store i32 %v2_109e8, i32* %r2.global-to-local, align 4
  %v3_109ec = add i32 %v2_109e8, 12
  %v4_109ec = inttoptr i32 %v3_109ec to i8*
  store i8 %v0_109ec.off0, i8* %v4_109ec, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_10980, i32* %r3.global-to-local, align 4
  %v0_109f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_109f8 = load i32, i32* @r8, align 4
  %v5_109f8 = mul i32 %v2_10980, 16
  %v6_109f8 = add i32 %v1_109f8, %v5_109f8
  %v7_109f8 = inttoptr i32 %v6_109f8 to i32*
  store i32 %v0_109f8, i32* %v7_109f8, align 4
  %v2_109fc = load i32, i32* @global_var_230e0.202, align 4
  store i32 %v2_109fc, i32* @r7, align 4
  %v1_10a00 = inttoptr i32 %arg2 to i8*
  %v2_10a00 = call i32 @function_12dec(i8* %v1_10a00)
  %sext1 = mul i32 %v2_10a00, 16777216
  %v1_10a04 = sdiv i32 %sext1, 16777216
  %v2_10a04 = add nsw i32 %v1_10a04, 1
  store i32 %v2_10a04, i32* @r4, align 4
  store i32 %v1_10a04, i32* @r6, align 4
  store i32 %v2_10a04, i32* @r0, align 4
  %v0_10a10 = call i32 @function_14744()
  store i32 %v0_10a10, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_10a18 = load i32, i32* @r4, align 4
  store i32 %v0_10a18, i32* %r2.global-to-local, align 4
  store i32 %v0_10a10, i32* %r5.global-to-local, align 4
  %v3_10a20 = call i32 @function_12e5c(i32 %v0_10a10, i32 %arg2, i32 %v0_10a18)
  store i32 %v3_10a20, i32* %r0.global-to-local, align 4
  %v0_10a24 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_10a24, 1
  %extract.t8 = trunc i32 %v0_10a24 to i8
  br i1 %tmp23, label %dec_label_pc_10a48, label %dec_label_pc_10a2c

dec_label_pc_10a2c:                               ; preds = %dec_label_pc_109dc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10a30

dec_label_pc_10a30:                               ; preds = %dec_label_pc_10a30, %dec_label_pc_10a2c
  %v2_10a38 = phi i32 [ %v1_10a3c, %dec_label_pc_10a30 ], [ 0, %dec_label_pc_10a2c ]
  %v1_10a30 = load i32, i32* %r5.global-to-local, align 4
  %v2_10a30 = add i32 %v1_10a30, %v2_10a38
  %v3_10a30 = inttoptr i32 %v2_10a30 to i8*
  %v4_10a30 = load i8, i8* %v3_10a30, align 1
  %v6_10a30 = zext i8 %v4_10a30 to i32
  %v1_10a34 = xor i32 %v6_10a30, 34
  store i32 %v1_10a34, i32* %r3.global-to-local, align 4
  %v1_10a38 = trunc i32 %v1_10a34 to i8
  store i8 %v1_10a38, i8* %v3_10a30, align 1
  %v0_10a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_10a3c = add i32 %v0_10a3c, 1
  store i32 %v1_10a3c, i32* %r2.global-to-local, align 4
  %v1_10a40 = load i32, i32* @r6, align 4
  %v9_10a40 = icmp eq i32 %v1_10a3c, %v1_10a40
  br i1 %v9_10a40, label %dec_label_pc_10a48.loopexit, label %dec_label_pc_10a30

dec_label_pc_10a48.loopexit:                      ; preds = %dec_label_pc_10a30
  %extract.t7 = trunc i32 %v1_10a3c to i8
  br label %dec_label_pc_10a48

dec_label_pc_10a48:                               ; preds = %dec_label_pc_10a48.loopexit, %dec_label_pc_109dc
  %v0_10a58.off0 = phi i8 [ %extract.t7, %dec_label_pc_10a48.loopexit ], [ %extract.t8, %dec_label_pc_109dc ]
  %v2_10a48 = load i32, i32* @global_var_230b4.200, align 4
  store i32 %v2_10a48, i32* %r0.global-to-local, align 4
  %v2_10a4c = load i32, i32* @global_var_230e0.202, align 4
  %v3_10a50 = mul i32 %v2_10a48, 16
  store i32 %v3_10a50, i32* %r1.global-to-local, align 4
  %v2_10a54 = or i32 %v3_10a50, 13
  %v3_10a58 = add i32 %v2_10a54, %v2_10a4c
  %v4_10a58 = inttoptr i32 %v3_10a58 to i8*
  store i8 %v0_10a58.off0, i8* %v4_10a58, align 1
  store i32 ptrtoint (i16** @global_var_230e4.204 to i32), i32* %r4.global-to-local, align 4
  %v2_10a64 = load i16, i16* bitcast (i16** @global_var_230e4.204 to i16*), align 4
  %v3_10a64 = zext i16 %v2_10a64 to i32
  store i32 %v3_10a64, i32* %lr.global-to-local, align 4
  %v2_10a6c = load i32, i32* @global_var_230e0.202, align 4
  store i32 %v2_10a6c, i32* %r2.global-to-local, align 4
  %v0_10a74 = load i32, i32* %r1.global-to-local, align 4
  %v2_10a74 = add i32 %v0_10a74, %v2_10a6c
  store i32 %v2_10a74, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_230e4.204 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_10a7c = load i32, i32* @sb, align 4
  %v1_10a7c = load i32, i32* @r7, align 4
  %v2_10a7c = add i32 %v1_10a7c, %v0_10a7c
  store i32 %v2_10a7c, i32* %ip.global-to-local, align 4
  %v0_10a80 = load i32, i32* %r0.global-to-local, align 4
  %v1_10a80 = add i32 %v0_10a80, 1
  store i32 %v1_10a80, i32* %r0.global-to-local, align 4
  %v3_10a84 = add i32 %v2_10a74, 10
  %v4_10a84 = inttoptr i32 %v3_10a84 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_230e4.204 to i32), i32 16), i32 16) to i16), i16* %v4_10a84, align 2
  %v0_10a88 = load i32, i32* %lr.global-to-local, align 4
  %v1_10a88 = trunc i32 %v0_10a88 to i16
  %v2_10a88 = load i32, i32* %r1.global-to-local, align 4
  %v3_10a88 = add i32 %v2_10a88, 8
  %v4_10a88 = inttoptr i32 %v3_10a88 to i16*
  store i16 %v1_10a88, i16* %v4_10a88, align 2
  %v0_10a8c = load i32, i32* %r5.global-to-local, align 4
  %v1_10a8c = load i32, i32* %ip.global-to-local, align 4
  %v2_10a8c = add i32 %v1_10a8c, 4
  %v3_10a8c = inttoptr i32 %v2_10a8c to i32*
  store i32 %v0_10a8c, i32* %v3_10a8c, align 4
  %v1_10a90 = load i32, i32* @fp, align 4
  %v2_10a90 = inttoptr i32 %v1_10a90 to i32*
  store i32 %v1_10a80, i32* %v2_10a90, align 4
  %v0_10a94 = load i32, i32* %r3.global-to-local, align 4
  %v1_10a94 = trunc i32 %v0_10a94 to i16
  %v2_10a94 = load i32, i32* %r4.global-to-local, align 4
  %v3_10a94 = inttoptr i32 %v2_10a94 to i16*
  store i16 %v1_10a94, i16* %v3_10a94, align 2
  store i32 %v3_10950, i32* @r4, align 4
  store i32 %v6_10950, i32* @r5, align 4
  store i32 %v9_10950, i32* @r6, align 4
  store i32 %v12_10950, i32* @r7, align 4
  store i32 %v15_10950, i32* @r8, align 4
  store i32 %v18_10950, i32* @sb, align 4
  store i32 %v21_10950, i32* @sl, align 4
  store i32 %v24_10950, i32* @fp, align 4
  ret i32 %v1_10a80

; uselistorder directives
  uselistorder i32 %v3_10a50, { 1, 0 }
  uselistorder i32 %v1_10a3c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10a10, { 1, 0, 2 }
  uselistorder i32 %v3_109e4, { 1, 0 }
  uselistorder i32 %v1_109d0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_109a4, { 1, 0, 2 }
  uselistorder i32 %v2_10980, { 1, 0, 2 }
  uselistorder i32 %v3_10974, { 1, 0 }
  uselistorder i32 %v1_10964, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @function_12dec, { 27, 28, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 14, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 84, 85, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14e90, { 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @function_10ab0() local_unnamed_addr {
dec_label_pc_10ab0:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp273 = call i32 @__decompiler_undefined_function_0()
  %tmp274 = call i32 @__decompiler_undefined_function_0()
  %tmp275 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10abc = call i32 @function_15714()
  store i32 %v0_10abc, i32* %r0.global-to-local, align 4
  %v7_10ac0 = icmp eq i32 %v0_10abc, -1
  %. = zext i1 %v7_10ac0 to i32
  %tmp308 = icmp slt i32 %v0_10abc, 1
  %storemerge268 = select i1 %tmp308, i32 %., i32 1
  store i32 %storemerge268, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23680.196 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10adc = icmp eq i32 %storemerge268, 0
  store i1 %v2_10adc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_10abc, i32* @global_var_23680.196, align 4
  br i1 %v2_10adc, label %dec_label_pc_10af8, label %dec_label_pc_10ae8

dec_label_pc_10ae8:                               ; preds = %dec_label_pc_10ab0
  ret i32 %v0_10abc

dec_label_pc_10af8:                               ; preds = %dec_label_pc_10ab0
  %v0_10af8 = call i32 @function_130a8()
  store i32 %v0_10af8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2365c.94 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_10af8, i32* @global_var_2365c.94, align 4
  %v1_10b04 = call i32 @function_10094(i32 %v0_10af8)
  %v0_10b08 = load i32, i32* @r4, align 4
  store i32 %v0_10b08, i32* %r0.global-to-local, align 4
  %v1_10b0c = inttoptr i32 %v0_10b08 to i32*
  %v2_10b0c = call i32 @function_16598(i32* %v1_10b0c)
  store i32 ptrtoint (i32* @global_var_230e8.198 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_10b0c, i32* @global_var_230e8.198, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_10b20 = call i32 @function_13cd4(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_23678.209 to i32), i32* %r3.global-to-local, align 4
  %v0_10b28 = load i32, i32* @r4, align 4
  store i32 %v0_10b28, i32* %stack_var_-52, align 4
  store i32 %v2_10b20, i32* @global_var_23678.209, align 4
  store i32 %v0_10b28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b34

dec_label_pc_10b34:                               ; preds = %dec_label_pc_10b34.dec_label_pc_10b34_crit_edge, %dec_label_pc_10af8
  %v2_10b40 = phi i32 [ %v2_10b40.pre, %dec_label_pc_10b34.dec_label_pc_10b34_crit_edge ], [ %v2_10b20, %dec_label_pc_10af8 ]
  %v0_10b48 = phi i32 [ %v0_10b78, %dec_label_pc_10b34.dec_label_pc_10b34_crit_edge ], [ %v0_10b28, %dec_label_pc_10af8 ]
  %v3_10b3c = mul i32 %v0_10b48, 256
  store i32 %v3_10b3c, i32* %ip.global-to-local, align 4
  store i32 %v2_10b40, i32* @lr, align 4
  %v2_10b50 = mul i32 %v0_10b48, 288
  %v1_10b58 = add i32 %v0_10b48, 1
  store i32 %v1_10b58, i32* %r0.global-to-local, align 4
  %v2_10b5c = add i32 %v2_10b50, %v2_10b40
  store i32 %v2_10b5c, i32* %r2.global-to-local, align 4
  store i32 %v2_10b5c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10b70 = add i32 %v2_10b5c, 4
  %v3_10b70 = inttoptr i32 %v2_10b70 to i32*
  store i32 -1, i32* %v3_10b70, align 4
  %v0_10b74 = load i32, i32* @r5, align 4
  %v1_10b74 = load i32, i32* %r1.global-to-local, align 4
  %v2_10b74 = add i32 %v1_10b74, 12
  %v3_10b74 = inttoptr i32 %v2_10b74 to i32*
  store i32 %v0_10b74, i32* %v3_10b74, align 4
  %v0_10b78 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10b78, i32* %stack_var_-52, align 4
  %v7_10b7c = icmp sgt i32 %v1_10b58, 255
  br i1 %v7_10b7c, label %dec_label_pc_10b80, label %dec_label_pc_10b34.dec_label_pc_10b34_crit_edge

dec_label_pc_10b34.dec_label_pc_10b34_crit_edge:  ; preds = %dec_label_pc_10b34
  %v2_10b40.pre = load i32, i32* @global_var_23678.209, align 4
  br label %dec_label_pc_10b34

dec_label_pc_10b80:                               ; preds = %dec_label_pc_10b34
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_10b8c = call i32 @function_1561c(i32 2, i32 3, i32 6)
  store i32 %v3_10b8c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2367c.211 to i32), i32* %r2.global-to-local, align 4
  %v2_10b94 = icmp eq i32 %v3_10b8c, -1
  store i1 %v2_10b94, i1* %cpsr_c.global-to-local, align 1
  %v7_10b94 = icmp eq i32 %v3_10b8c, -1
  store i1 %v7_10b94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_10b8c, i32* @r4, align 4
  store i32 %v3_10b8c, i32* @global_var_2367c.211, align 4
  br i1 %v7_10b94, label %dec_label_pc_114c4, label %dec_label_pc_10ba4

dec_label_pc_10ba4:                               ; preds = %dec_label_pc_10b80
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_10ba8 = load i32, i32* @r5, align 4
  store i32 %v0_10ba8, i32* %r2.global-to-local, align 4
  %v3_10bac = call i32 @function_13a30(i32 %v3_10b8c, i32 3, i32 %v0_10ba8)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_10bb4 = or i32 %v3_10bac, 2048
  store i32 %v1_10bb4, i32* %r2.global-to-local, align 4
  %v0_10bb8 = load i32, i32* @r4, align 4
  store i32 %v0_10bb8, i32* %r0.global-to-local, align 4
  %v3_10bbc = call i32 @function_13a30(i32 %v0_10bb8, i32 4, i32 %v1_10bb4)
  %v2_10bc4 = load i32, i32* @global_var_2367c.211, align 4
  store i32 %v2_10bc4, i32* @r0, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_10bd0 = load i32, i32* @r5, align 4
  store i32 %v0_10bd0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v2_10bd8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10bd8, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_10be8 = call i32 @function_155ac(i32 %v2_10bc4, i32 %v0_10bd0, i32 3, i32 %v2_10bd8, i32 4)
  store i32 %v5_10be8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bec = icmp eq i32 %v5_10be8, 0
  store i1 %v2_10bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bec, label %dec_label_pc_10bf4, label %dec_label_pc_114b8

dec_label_pc_10bf4:                               ; preds = %dec_label_pc_10ba4, %dec_label_pc_10bf4
  %v0_10bf4 = call i32 @function_10038()
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_10bfc = urem i32 %v0_10bf4, 65536
  %v4_10bfc = trunc i32 %v0_10bf4 to i16
  store i32 %v3_10bfc, i32* %r0.global-to-local, align 4
  %v2_10c04 = call i32 @function_154bc(i32 %v0_10bf4)
  store i32 %v2_10c04, i32* %r0.global-to-local, align 4
  %v2_10c08 = icmp ugt i32 %v2_10c04, 1023
  store i1 %v2_10c08, i1* %cpsr_c.global-to-local, align 1
  %v7_10c08 = icmp eq i32 %v2_10c04, 1024
  store i1 %v7_10c08, i1* %cpsr_z.global-to-local, align 1
  %v3_10c0c = icmp ult i32 %v2_10c04, 1022
  br i1 %v3_10c0c, label %dec_label_pc_10bf4, label %dec_label_pc_10c10

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10bf4
  %v2_10c14 = load i8, i8* bitcast (i8** @global_var_230b8.213 to i8*), align 4
  %v3_10c14 = zext i8 %v2_10c14 to i32
  %v1_10c18 = and i32 %v3_10c14, 240
  %v1_10c1c = or i32 %v1_10c18, 5
  store i32 %v1_10c1c, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_230b8.213 to i8*), align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_10c38 = call i32 @function_15314(i32 40)
  %v2_10c38 = trunc i32 %v1_10c38 to i16
  store i32 %v1_10c38, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %r1.global-to-local, align 4
  store i16 %v2_10c38, i16* bitcast (i32* @global_var_230ba.214 to i16*), align 4
  %v0_10c44 = call i32 @function_10038()
  %v1_10c44 = trunc i32 %v0_10c44 to i16
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r4, align 4
  store i16 %v1_10c44, i16* bitcast (i32* @global_var_230bc.215 to i16*), align 4
  store i8 64, i8* bitcast (i32* @global_var_230c0.216 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_230c1.217 to i8*), align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_10c64 = call i32 @function_15314(i32 23)
  %v2_10c64 = trunc i32 %v1_10c64 to i16
  store i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32* %ip.global-to-local, align 4
  %v3_10c6c = load i8, i8* @global_var_230d8.220, align 1
  %tmp = urem i8 %v3_10c6c, 16
  %v1_10c70 = zext i8 %tmp to i32
  %v1_10c74 = or i32 %v1_10c70, 80
  store i32 %v1_10c74, i32* %r3.global-to-local, align 4
  %v1_10c78 = trunc i32 %v1_10c74 to i8
  store i8 %v1_10c78, i8* @global_var_230d8.220, align 1
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* @lr, align 4
  store i16 %v2_10c64, i16* @global_var_230ce.221, align 2
  store i32 %v0_10bf4, i32* %r0.global-to-local, align 4
  store i16 %v4_10bfc, i16* bitcast (i32* @global_var_230cc.219 to i16*), align 4
  %v0_10c8c = call i32 @function_10038()
  %v1_10c8c = trunc i32 %v0_10c8c to i16
  %v3_10c94 = load i8, i8* @global_var_230d9.222, align 1
  %v4_10c94 = zext i8 %v3_10c94 to i32
  store i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32* %ip.global-to-local, align 4
  %v1_10c9c = or i32 %v4_10c94, 2
  store i32 %v1_10c9c, i32* %r3.global-to-local, align 4
  store i16 %v1_10c8c, i16* bitcast (i32* @global_var_230da.223 to i16*), align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_10ca8 = trunc i32 %v1_10c9c to i8
  store i8 %v1_10ca8, i8* @global_var_230d9.222, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a330.227 to i32), i32* %r1.global-to-local, align 4
  %v4_10cb4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a330.227 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a338.229 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_10cc4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a338.229 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10cd4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r1.global-to-local, align 4
  %v5_10ce4 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 7)
  %v0_10ce8 = load i32, i32* @r4, align 4
  store i32 %v0_10ce8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a348.233 to i32), i32* %r1.global-to-local, align 4
  %v4_10cf4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a348.233 to i32), i32 %v0_10ce8)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a350.235 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10d04 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a350.235 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a358.237 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10d14 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a358.237 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a360.239 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10d24 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a360.239 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a36c.241 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10d34 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a36c.241 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a374.243 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10d44 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a374.243 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1a37c.245 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a37c.245 to i32), i32* %r1.global-to-local, align 4
  %v5_10d54 = call i32 @function_10950(i32 ptrtoint ([8 x i8]* @global_var_1a37c.245 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a37c.245 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a264.247 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_10d64 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a264.247 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a384.249 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10d74 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a384.249 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r1.global-to-local, align 4
  %v5_10d84 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a390.251 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_10d94 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a390.251 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a398.253 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a398.253 to i32), i32* %r1.global-to-local, align 4
  %v5_10da4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a398.253 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a398.253 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a264.247 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10db4 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint (i32* @global_var_1a264.247 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a3a0.255 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_10dc4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a3a0.255 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3a8.257 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10dd4 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint (i32* @global_var_1a3a8.257 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3b4.259 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10de4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a3b4.259 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a3bc.261 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_10df4 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a3bc.261 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3b4.259 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10e04 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint (i32* @global_var_1a3b4.259 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3c8.263 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10e14 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a3c8.263 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a384.249 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_10e24 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a384.249 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3d0.265 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10e34 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a3d0.265 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3d8.267 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10e44 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a3d8.267 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1a3e0.269 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a3f0.271 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10e54 = call i32 @function_10950(i32 ptrtoint ([14 x i8]* @global_var_1a3e0.269 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a3f0.271 to i32), i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_1a3f8.273 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a3f8.273 to i32), i32* %r1.global-to-local, align 4
  %v5_10e64 = call i32 @function_10950(i32 ptrtoint ([8 x i8]* @global_var_1a3f8.273 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a3f8.273 to i32), i32 1)
  store i32 ptrtoint ([11 x i8]* @global_var_1a400.275 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1a400.275 to i32), i32* %r1.global-to-local, align 4
  %v5_10e74 = call i32 @function_10950(i32 ptrtoint ([11 x i8]* @global_var_1a400.275 to i32), i32 ptrtoint ([11 x i8]* @global_var_1a400.275 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a40c.277 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a40c.277 to i32), i32* %r1.global-to-local, align 4
  %v5_10e84 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a40c.277 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a40c.277 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a40c.277 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a390.251 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10e94 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a40c.277 to i32), i32 ptrtoint (i32* @global_var_1a390.251 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a40c.277 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a390.251 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10ea4 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a40c.277 to i32), i32 ptrtoint (i32* @global_var_1a390.251 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1a414.279 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a384.249 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10eb4 = call i32 @function_10950(i32 ptrtoint (i32* @global_var_1a414.279 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a384.249 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1a41c.281 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3d0.265 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10ec4 = call i32 @function_10950(i32 ptrtoint ([14 x i8]* @global_var_1a41c.281 to i32), i32 ptrtoint (i32* @global_var_1a3d0.265 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1a3c8.263 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3c8.263 to i32), i32* %r1.global-to-local, align 4
  %v3_10ed4 = call i32 @function_10950(i32 ptrtoint (i32* @global_var_1a3c8.263 to i32), i32 ptrtoint (i32* @global_var_1a3c8.263 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1a348.233 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a348.233 to i32), i32* %r1.global-to-local, align 4
  %v3_10ee4 = call i32 @function_10950(i32 ptrtoint (i32* @global_var_1a348.233 to i32), i32 ptrtoint (i32* @global_var_1a348.233 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a42c.283 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a42c.283 to i32), i32* %r1.global-to-local, align 4
  %v5_10ef4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a42c.283 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a42c.283 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a434.285 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10f04 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a434.285 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a43c.287 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10f14 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a43c.287 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a444.289 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10f24 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a444.289 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a44c.291 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10f34 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a44c.291 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a454.293 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10f44 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a454.293 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a45c.295 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10f54 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a45c.295 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a464.297 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10f64 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a464.297 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a474.299 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10f74 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a474.299 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a484.301 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10f84 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a484.301 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a48c.303 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10f94 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a48c.303 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a494.305 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10fa4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a494.305 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a398.253 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10fb4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a398.253 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a4a0.307 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10fc4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a4a0.307 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a4a8.309 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10fd4 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), i32 ptrtoint (i32* @global_var_1a4a8.309 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a4b4.311 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10fe4 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint (i32* @global_var_1a4b4.311 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a3d0.265 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10ff4 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint (i32* @global_var_1a3d0.265 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a390.251 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11004 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint (i32* @global_var_1a390.251 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a374.243 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11014 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint (i32* @global_var_1a374.243 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a36c.241 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11024 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint (i32* @global_var_1a36c.241 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a474.299 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11034 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint (i32* @global_var_1a474.299 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a4bc.313 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11044 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint (i32* @global_var_1a4bc.313 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a3a0.255 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11054 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a3a0.255 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a3f0.271 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11064 = call i32 @function_10950(i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a3f0.271 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1a364.315 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a364.315 to i32), i32* %r1.global-to-local, align 4
  %v5_11074 = call i32 @function_10950(i32 ptrtoint ([5 x i8]* @global_var_1a364.315 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a364.315 to i32), i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1a4c4.317 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a4cc.319 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11084 = call i32 @function_10950(i32 ptrtoint ([7 x i8]* @global_var_1a4c4.317 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a4cc.319 to i32), i32 1)
  store i32 %v5_11084, i32* %r0.global-to-local, align 4
  %v2_1108c = ptrtoint i32* %stack_var_-1866 to i32
  br label %dec_label_pc_11094

dec_label_pc_11094:                               ; preds = %dec_label_pc_11804, %dec_label_pc_10c10
  %stack_var_-1876.0 = phi i32 [ %tmp273, %dec_label_pc_10c10 ], [ %stack_var_-1876.2, %dec_label_pc_11804 ]
  %stack_var_-1884.0 = phi i32 [ %v2_1108c, %dec_label_pc_10c10 ], [ %stack_var_-1884.1, %dec_label_pc_11804 ]
  %stack_var_-1880.0 = phi i16 [ %v4_10bfc, %dec_label_pc_10c10 ], [ %stack_var_-1880.1, %dec_label_pc_11804 ]
  store i32 ptrtoint (i32* @global_var_230e8.198 to i32), i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1876.0, i32* %r1.global-to-local, align 4
  %v2_1109c = load i32, i32* @global_var_230e8.198, align 4
  store i32 %v2_1109c, i32* @r5, align 4
  %v3_110a0 = icmp uge i32 %stack_var_-1876.0, %v2_1109c
  store i1 %v3_110a0, i1* %cpsr_c.global-to-local, align 1
  %v9_110a0 = icmp eq i32 %stack_var_-1876.0, %v2_1109c
  store i1 %v9_110a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_110a0, label %dec_label_pc_11320, label %dec_label_pc_110a8

dec_label_pc_110a8:                               ; preds = %dec_label_pc_11094
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_110ac = ptrtoint i32* %stack_var_-104 to i32
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_110b8

dec_label_pc_110b8:                               ; preds = %dec_label_pc_1127c, %dec_label_pc_110a8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_110cc = call i32 @function_10038()
  %v1_110cc = trunc i32 %v0_110cc to i16
  store i32 %v0_110cc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2365c.94 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %ip.global-to-local, align 4
  %v2_110d8 = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_110d8, i32* %r3.global-to-local, align 4
  store i16 %v1_110cc, i16* bitcast (i32* @global_var_230bc.215 to i16*), align 4
  store i32 %v2_110d8, i32* @global_var_230c4.320, align 4
  br label %dec_label_pc_110e4

dec_label_pc_110e4:                               ; preds = %dec_label_pc_111b8, %dec_label_pc_11114, %dec_label_pc_111ec, %dec_label_pc_111e0, %dec_label_pc_111d4, %dec_label_pc_111c8, %.thread29, %bb314, %dec_label_pc_11124, %bb313, %dec_label_pc_1110c, %bb312, %bb329, %bb328, %bb327, %bb326, %bb325, %dec_label_pc_111b0, %dec_label_pc_111a8, %bb321, %dec_label_pc_11178, %dec_label_pc_11154, %bb331, %dec_label_pc_110b8
  %v0_110e4 = call i32 @function_10038()
  store i32 %v0_110e4, i32* %r0.global-to-local, align 4
  %v1_110e8 = urem i32 %v0_110e4, 256
  store i32 %v1_110e8, i32* %r1.global-to-local, align 4
  %v3_110ec = udiv i32 %v0_110e4, 256
  store i32 %v3_110ec, i32* %r3.global-to-local, align 4
  %v3_110f0 = udiv i32 %v0_110e4, 65536
  store i32 %v3_110f0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110f4 = icmp eq i32 %v1_110e8, 0
  store i1 %v2_110f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110f4, label %bb312, label %bb311

bb311:                                            ; preds = %dec_label_pc_110e4
  %v3_110f8 = icmp ugt i32 %v1_110e8, 126
  store i1 %v3_110f8, i1* %cpsr_c.global-to-local, align 1
  %v8_110f8 = icmp eq i32 %v1_110e8, 127
  store i1 %v8_110f8, i1* %cpsr_z.global-to-local, align 1
  br label %bb312

bb312:                                            ; preds = %dec_label_pc_110e4, %bb311
  %v0_11108 = phi i1 [ true, %dec_label_pc_110e4 ], [ %v8_110f8, %bb311 ]
  %v1_110fc = urem i32 %v3_110ec, 256
  store i32 %v1_110fc, i32* %ip.global-to-local, align 4
  %v1_11100 = urem i32 %v3_110f0, 256
  store i32 %v1_11100, i32* %r2.global-to-local, align 4
  %v1_11104 = and i32 %v0_110e4, 8388608
  %v2_11104 = icmp ne i32 %v1_11104, 0
  store i1 %v2_11104, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_11108, label %dec_label_pc_110e4, label %dec_label_pc_1110c

dec_label_pc_1110c:                               ; preds = %bb312
  %v2_1110c = icmp ugt i32 %v1_110e8, 2
  store i1 %v2_1110c, i1* %cpsr_c.global-to-local, align 1
  %v7_1110c = icmp eq i32 %v1_110e8, 3
  store i1 %v7_1110c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1110c, label %dec_label_pc_110e4, label %dec_label_pc_11114

dec_label_pc_11114:                               ; preds = %dec_label_pc_1110c
  %v1_11114 = add nsw i32 %v1_110e8, -15
  store i32 %v1_11114, i32* %r3.global-to-local, align 4
  %v2_11118 = icmp ugt i32 %v1_110e8, 55
  store i1 %v2_11118, i1* %cpsr_c.global-to-local, align 1
  %v7_11118 = icmp eq i32 %v1_110e8, 56
  store i1 %v7_11118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11118, label %dec_label_pc_110e4, label %bb313

bb313:                                            ; preds = %dec_label_pc_11114
  %v3_1111c = icmp ne i32 %v1_11114, 0
  store i1 %v3_1111c, i1* %cpsr_c.global-to-local, align 1
  %v8_1111c = icmp eq i32 %v1_11114, 1
  store i1 %v8_1111c, i1* %cpsr_z.global-to-local, align 1
  %v2_11120 = xor i1 %v3_1111c, true
  %v3_11120 = or i1 %v8_1111c, %v2_11120
  br i1 %v3_11120, label %dec_label_pc_110e4, label %dec_label_pc_11124

dec_label_pc_11124:                               ; preds = %bb313
  %v2_11124 = icmp ugt i32 %v1_110e8, 9
  store i1 %v2_11124, i1* %cpsr_c.global-to-local, align 1
  %v7_11124 = icmp eq i32 %v1_110e8, 10
  store i1 %v7_11124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11124, label %dec_label_pc_110e4, label %dec_label_pc_1112c

dec_label_pc_1112c:                               ; preds = %dec_label_pc_11124
  %v2_1112c = icmp ugt i32 %v1_110e8, 191
  store i1 %v2_1112c, i1* %cpsr_c.global-to-local, align 1
  %v7_1112c = icmp eq i32 %v1_110e8, 192
  store i1 %v7_1112c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1112c, label %bb314, label %dec_label_pc_11138

bb314:                                            ; preds = %dec_label_pc_1112c
  %v3_11130 = icmp ugt i32 %v1_110fc, 167
  store i1 %v3_11130, i1* %cpsr_c.global-to-local, align 1
  %v8_11130 = icmp eq i32 %v1_110fc, 168
  store i1 %v8_11130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11130, label %dec_label_pc_110e4, label %dec_label_pc_11138

dec_label_pc_11138:                               ; preds = %dec_label_pc_1112c, %bb314
  %v7_11138 = icmp eq i32 %v1_110e8, 172
  %.384 = zext i1 %v7_11138 to i32
  store i32 %.384, i32* %r3.global-to-local, align 4
  %v2_11144 = icmp ugt i32 %v1_110fc, 14
  store i1 %v2_11144, i1* %cpsr_c.global-to-local, align 1
  %v7_11144 = icmp eq i32 %v1_110fc, 15
  store i1 %v7_11144, i1* %cpsr_z.global-to-local, align 1
  %v2_11148 = xor i1 %v2_11144, true
  %v3_11148 = or i1 %v7_11144, %v2_11148
  br i1 %v3_11148, label %.thread7, label %bb317

.thread7:                                         ; preds = %dec_label_pc_11138
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1115c

bb317:                                            ; preds = %dec_label_pc_11138
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1114c = icmp eq i1 %v7_11138, false
  store i1 %v2_1114c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1114c, label %dec_label_pc_1115c, label %dec_label_pc_11154

dec_label_pc_11154:                               ; preds = %bb317
  %v2_11154 = icmp ugt i32 %v1_110fc, 30
  store i1 %v2_11154, i1* %cpsr_c.global-to-local, align 1
  %v7_11154 = icmp eq i32 %v1_110fc, 31
  store i1 %v7_11154, i1* %cpsr_z.global-to-local, align 1
  %v2_11158 = xor i1 %v2_11154, true
  %v3_11158 = or i1 %v7_11154, %v2_11158
  br i1 %v3_11158, label %dec_label_pc_110e4, label %dec_label_pc_1115c

dec_label_pc_1115c:                               ; preds = %.thread7, %dec_label_pc_11154, %bb317
  %v7_1115c = icmp eq i32 %v1_110e8, 100
  %.385 = zext i1 %v7_1115c to i32
  store i32 %.385, i32* %r3.global-to-local, align 4
  %v2_11168 = icmp ugt i32 %v1_110fc, 62
  store i1 %v2_11168, i1* %cpsr_c.global-to-local, align 1
  %v7_11168 = icmp eq i32 %v1_110fc, 63
  store i1 %v7_11168, i1* %cpsr_z.global-to-local, align 1
  %v2_1116c = xor i1 %v2_11168, true
  %v3_1116c = or i1 %v7_11168, %v2_1116c
  br i1 %v3_1116c, label %.thread12, label %bb320

.thread12:                                        ; preds = %dec_label_pc_1115c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11180

bb320:                                            ; preds = %dec_label_pc_1115c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11170 = icmp eq i1 %v7_1115c, false
  store i1 %v2_11170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11170, label %dec_label_pc_11180, label %dec_label_pc_11178

dec_label_pc_11178:                               ; preds = %bb320
  %v2_11178 = icmp ugt i32 %v1_110fc, 125
  store i1 %v2_11178, i1* %cpsr_c.global-to-local, align 1
  %v7_11178 = icmp eq i32 %v1_110fc, 126
  store i1 %v7_11178, i1* %cpsr_z.global-to-local, align 1
  %v2_1117c = xor i1 %v2_11178, true
  %v3_1117c = or i1 %v7_11178, %v2_1117c
  br i1 %v3_1117c, label %dec_label_pc_110e4, label %dec_label_pc_11180

dec_label_pc_11180:                               ; preds = %.thread12, %dec_label_pc_11178, %bb320
  %v2_11180 = icmp ugt i32 %v1_110e8, 168
  store i1 %v2_11180, i1* %cpsr_c.global-to-local, align 1
  %v7_11180 = icmp eq i32 %v1_110e8, 169
  store i1 %v7_11180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11180, label %bb321, label %dec_label_pc_1118c

bb321:                                            ; preds = %dec_label_pc_11180
  %v3_11184 = icmp eq i32 %v1_110fc, 255
  store i1 %v3_11184, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_11184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11184, label %dec_label_pc_110e4, label %dec_label_pc_1118c

dec_label_pc_1118c:                               ; preds = %dec_label_pc_11180, %bb321
  %v7_1118c = icmp eq i32 %v1_110e8, 198
  %.386 = zext i1 %v7_1118c to i32
  store i32 %.386, i32* %r3.global-to-local, align 4
  %v2_11198 = icmp ugt i32 %v1_110fc, 16
  store i1 %v2_11198, i1* %cpsr_c.global-to-local, align 1
  %v7_11198 = icmp eq i32 %v1_110fc, 17
  store i1 %v7_11198, i1* %cpsr_z.global-to-local, align 1
  %v2_1119c = xor i1 %v2_11198, true
  %v3_1119c = or i1 %v7_11198, %v2_1119c
  br i1 %v3_1119c, label %.thread18, label %bb324

.thread18:                                        ; preds = %dec_label_pc_1118c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_111b0

bb324:                                            ; preds = %dec_label_pc_1118c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111a0 = icmp eq i1 %v7_1118c, false
  store i1 %v2_111a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111a0, label %dec_label_pc_111b0, label %dec_label_pc_111a8

dec_label_pc_111a8:                               ; preds = %bb324
  %v2_111a8 = icmp ugt i32 %v1_110fc, 18
  store i1 %v2_111a8, i1* %cpsr_c.global-to-local, align 1
  %v7_111a8 = icmp eq i32 %v1_110fc, 19
  store i1 %v7_111a8, i1* %cpsr_z.global-to-local, align 1
  %v2_111ac = xor i1 %v2_111a8, true
  %v3_111ac = or i1 %v7_111a8, %v2_111ac
  br i1 %v3_111ac, label %dec_label_pc_110e4, label %dec_label_pc_111b0

dec_label_pc_111b0:                               ; preds = %.thread18, %dec_label_pc_111a8, %bb324
  %v2_111b0 = icmp ugt i32 %v1_110e8, 222
  store i1 %v2_111b0, i1* %cpsr_c.global-to-local, align 1
  %v7_111b0 = icmp eq i32 %v1_110e8, 223
  store i1 %v7_111b0, i1* %cpsr_z.global-to-local, align 1
  %v2_111b4 = xor i1 %v7_111b0, true
  %v3_111b4 = and i1 %v2_111b0, %v2_111b4
  br i1 %v3_111b4, label %dec_label_pc_110e4, label %dec_label_pc_111b8

dec_label_pc_111b8:                               ; preds = %dec_label_pc_111b0
  %v1_111b8 = add nsw i32 %v1_110e8, -6
  store i32 %v1_111b8, i32* %r3.global-to-local, align 4
  %v2_111bc = icmp ugt i32 %v1_110e8, 10
  store i1 %v2_111bc, i1* %cpsr_c.global-to-local, align 1
  %v7_111bc = icmp eq i32 %v1_110e8, 11
  store i1 %v7_111bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111bc, label %dec_label_pc_110e4, label %bb325

bb325:                                            ; preds = %dec_label_pc_111b8
  %v3_111c0 = icmp ne i32 %v1_111b8, 0
  store i1 %v3_111c0, i1* %cpsr_c.global-to-local, align 1
  %v8_111c0 = icmp eq i32 %v1_111b8, 1
  store i1 %v8_111c0, i1* %cpsr_z.global-to-local, align 1
  %v2_111c4 = xor i1 %v3_111c0, true
  %v3_111c4 = or i1 %v8_111c0, %v2_111c4
  br i1 %v3_111c4, label %dec_label_pc_110e4, label %dec_label_pc_111c8

dec_label_pc_111c8:                               ; preds = %bb325
  %v2_111c8 = icmp ugt i32 %v1_110e8, 21
  store i1 %v2_111c8, i1* %cpsr_c.global-to-local, align 1
  %v7_111c8 = icmp eq i32 %v1_110e8, 22
  store i1 %v7_111c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111c8, label %dec_label_pc_110e4, label %bb326

bb326:                                            ; preds = %dec_label_pc_111c8
  %v3_111cc = icmp ugt i32 %v1_110e8, 20
  store i1 %v3_111cc, i1* %cpsr_c.global-to-local, align 1
  %v8_111cc = icmp eq i32 %v1_110e8, 21
  store i1 %v8_111cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_111cc, label %dec_label_pc_110e4, label %dec_label_pc_111d4

dec_label_pc_111d4:                               ; preds = %bb326
  %v2_111d4 = icmp ugt i32 %v1_110e8, 27
  store i1 %v2_111d4, i1* %cpsr_c.global-to-local, align 1
  %v7_111d4 = icmp eq i32 %v1_110e8, 28
  store i1 %v7_111d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111d4, label %dec_label_pc_110e4, label %bb327

bb327:                                            ; preds = %dec_label_pc_111d4
  %v3_111d8 = icmp ugt i32 %v1_110e8, 25
  store i1 %v3_111d8, i1* %cpsr_c.global-to-local, align 1
  %v8_111d8 = icmp eq i32 %v1_110e8, 26
  store i1 %v8_111d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_111d8, label %dec_label_pc_110e4, label %dec_label_pc_111e0

dec_label_pc_111e0:                               ; preds = %bb327
  %v2_111e0 = icmp ugt i32 %v1_110e8, 29
  store i1 %v2_111e0, i1* %cpsr_c.global-to-local, align 1
  %v7_111e0 = icmp eq i32 %v1_110e8, 30
  store i1 %v7_111e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111e0, label %dec_label_pc_110e4, label %bb328

bb328:                                            ; preds = %dec_label_pc_111e0
  %v3_111e4 = icmp ugt i32 %v1_110e8, 28
  store i1 %v3_111e4, i1* %cpsr_c.global-to-local, align 1
  %v8_111e4 = icmp eq i32 %v1_110e8, 29
  store i1 %v8_111e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_111e4, label %dec_label_pc_110e4, label %dec_label_pc_111ec

dec_label_pc_111ec:                               ; preds = %bb328
  %v2_111ec = icmp ugt i32 %v1_110e8, 54
  store i1 %v2_111ec, i1* %cpsr_c.global-to-local, align 1
  %v7_111ec = icmp eq i32 %v1_110e8, 55
  store i1 %v7_111ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111ec, label %dec_label_pc_110e4, label %bb329

bb329:                                            ; preds = %dec_label_pc_111ec
  %v3_111f0 = icmp ugt i32 %v1_110e8, 32
  store i1 %v3_111f0, i1* %cpsr_c.global-to-local, align 1
  %v8_111f0 = icmp eq i32 %v1_110e8, 33
  store i1 %v8_111f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_111f0, label %dec_label_pc_110e4, label %dec_label_pc_111f8

dec_label_pc_111f8:                               ; preds = %bb329
  %v2_111f8 = icmp ugt i32 %v1_110e8, 214
  store i1 %v2_111f8, i1* %cpsr_c.global-to-local, align 1
  %v7_111f8 = icmp eq i32 %v1_110e8, 215
  store i1 %v7_111f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111f8, label %.thread29, label %bb330

bb330:                                            ; preds = %dec_label_pc_111f8
  %v3_111fc = icmp ugt i32 %v1_110e8, 213
  store i1 %v3_111fc, i1* %cpsr_c.global-to-local, align 1
  %v8_111fc = icmp eq i32 %v1_110e8, 214
  store i1 %v8_111fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_111fc, label %bb331, label %dec_label_pc_1120c

.thread29:                                        ; preds = %dec_label_pc_111f8
  br label %dec_label_pc_110e4

bb331:                                            ; preds = %bb330
  br label %dec_label_pc_110e4

dec_label_pc_1120c:                               ; preds = %bb330
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v5_11218 = call i32 @llvm.bswap.i32(i32 %v0_110e4)
  store i32 %v5_11218, i32* %r0.global-to-local, align 4
  %v1_1121c = call i32 @function_152f0(i32 %v5_11218)
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v1_1121c, i32* @global_var_230c8.321, align 4
  %v0_1122c = load i32, i32* @r4, align 4
  %v1_1122c = trunc i32 %v0_1122c to i16
  store i16 %v1_1122c, i16* bitcast (i32* @global_var_230c2.322 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* @r0, align 4
  %v3_11234 = call i32 @function_e5a4(i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32 20)
  %v4_11234 = trunc i32 %v3_11234 to i16
  store i32 %v3_11234, i32* %r0.global-to-local, align 4
  %v3_11238 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_11238, i32* %r1.global-to-local, align 4
  %v5_11248 = sdiv i32 %v3_11238, 10
  %v3_1124c = mul i32 %v5_11248, 8
  store i32 %v3_1124c, i32* %r2.global-to-local, align 4
  %v2_11254 = mul i32 %v5_11248, 10
  store i32 %v2_11254, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %ip.global-to-local, align 4
  %v3_1125c = icmp uge i32 %v3_11238, %v2_11254
  store i1 %v3_1125c, i1* %cpsr_c.global-to-local, align 1
  %v9_1125c = icmp eq i32 %v3_11238, %v2_11254
  store i1 %v9_1125c, i1* %cpsr_z.global-to-local, align 1
  store i16 %v4_11234, i16* bitcast (i32* @global_var_230c2.322 to i16*), align 4
  br i1 %v9_1125c, label %dec_label_pc_11268, label %dec_label_pc_11614

dec_label_pc_11268:                               ; preds = %dec_label_pc_1120c
  store i32 2323, i32* %r0.global-to-local, align 4
  %v1_11270 = call i32 @function_15314(i32 2323)
  %v2_11270 = trunc i32 %v1_11270 to i16
  store i32 %v1_11270, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1127c

dec_label_pc_1127c:                               ; preds = %dec_label_pc_11614, %dec_label_pc_11268
  %storemerge = phi i16 [ %v2_11270, %dec_label_pc_11268 ], [ %v2_11618, %dec_label_pc_11614 ]
  store i16 %storemerge, i16* @global_var_230ce.221, align 2
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32* %ip.global-to-local, align 4
  %v3_11284 = load i32, i32* @global_var_230c8.321, align 4
  store i32 %v3_11284, i32* %r3.global-to-local, align 4
  store i32 %v3_11284, i32* @global_var_230d0.324, align 4
  store i16 0, i16* bitcast (i32* @global_var_230dc.325 to i16*), align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_11298 = call i32 @function_15314(i32 20)
  store i32 %v1_11298, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32* @r1, align 4
  %v5_112ac = call i32 @function_e5f4(i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32 %v1_11298, i32 20)
  %v6_112ac = trunc i32 %v5_112ac to i16
  store i16 %v6_112ac, i16* bitcast (i32* @global_var_230dc.325 to i16*), align 4
  %v2_112c8 = load i32, i32* @global_var_2367c.211, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_112e4 = load i16, i16* @global_var_230ce.221, align 2
  %v4_112e4 = zext i16 %v3_112e4 to i32
  store i32 %v4_112e4, i32* %ip.global-to-local, align 4
  store i32 %v2_110ac, i32* @lr, align 4
  store i32 %v2_112c8, i32* @r0, align 4
  store i32 ptrtoint (i8** @global_var_230b8.213 to i32), i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v0_11304 = call i32 @function_15560()
  store i32 %v0_11304, i32* %r0.global-to-local, align 4
  %v3_11308 = load i32, i32* %stack_var_-52, align 4
  %v1_1130c = add i32 %v3_11308, 1
  store i32 %v1_1130c, i32* %r3.global-to-local, align 4
  %v3_11310 = icmp ugt i32 %v1_1130c, 383
  store i1 %v3_11310, i1* %cpsr_c.global-to-local, align 1
  %v8_11310 = icmp eq i32 %v1_1130c, 384
  store i1 %v8_11310, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_1130c, i32* %stack_var_-52, align 4
  %v5_11318 = icmp slt i32 %v1_1130c, 384
  br i1 %v5_11318, label %dec_label_pc_110b8, label %dec_label_pc_1131c

dec_label_pc_1131c:                               ; preds = %dec_label_pc_1127c
  %v0_1131c = load i32, i32* @r5, align 4
  br label %dec_label_pc_11320

dec_label_pc_11320:                               ; preds = %dec_label_pc_11094, %dec_label_pc_1131c
  %stack_var_-1876.1 = phi i32 [ %stack_var_-1876.0, %dec_label_pc_11094 ], [ %v0_1131c, %dec_label_pc_1131c ]
  store i32 %stack_var_-1884.0, i32* @lr, align 4
  store i32 0, i32* @r6, align 4
  %v1_11328 = add i32 %stack_var_-1884.0, 20
  store i32 %v1_11328, i32* @r5, align 4
  %v1_11394 = add i32 %stack_var_-1884.0, 16
  %v2_11394 = inttoptr i32 %v1_11394 to i32*
  %v1_113a8 = add i32 %stack_var_-1884.0, 9
  %v2_113a8 = inttoptr i32 %v1_113a8 to i8*
  %v4_113e4 = sext i16 %stack_var_-1880.0 to i32
  %v1_11428 = add i32 %stack_var_-1884.0, 12
  %v2_11428 = inttoptr i32 %v1_11428 to i32*
  br label %dec_label_pc_1132c

dec_label_pc_1132c:                               ; preds = %dec_label_pc_11414, %dec_label_pc_1140c, %dec_label_pc_11404, %dec_label_pc_113e0, %dec_label_pc_113c8, %dec_label_pc_113a4, %dec_label_pc_1138c, %dec_label_pc_113fc, %dec_label_pc_113f0, %dec_label_pc_11384, %dec_label_pc_114a4, %dec_label_pc_11320
  %v0_1132c = call i32 @function_13994()
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_11334 = inttoptr i32 %v0_1132c to i32*
  store i32 0, i32* %v2_11334, align 4
  %v2_11340 = load i32, i32* @global_var_2367c.211, align 4
  store i32 %v2_11340, i32* @r0, align 4
  store i32 1514, i32* @r2, align 4
  store i32 %stack_var_-1884.0, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11358 = call i32 @function_154f4()
  store i32 %v0_11358, i32* %r0.global-to-local, align 4
  store i32 %v0_11358, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1135c = icmp eq i32 %v0_11358, 0
  store i1 %v2_1135c, i1* %cpsr_z.global-to-local, align 1
  %tmp332 = icmp slt i32 %v0_11358, 1
  br i1 %tmp332, label %dec_label_pc_114cc, label %dec_label_pc_11364

dec_label_pc_11364:                               ; preds = %dec_label_pc_1132c
  %v0_11364 = call i32 @function_13994()
  store i32 %v0_11364, i32* %r0.global-to-local, align 4
  %v1_11368 = inttoptr i32 %v0_11364 to i32*
  %v2_11368 = load i32, i32* %v1_11368, align 4
  store i32 %v2_11368, i32* %r3.global-to-local, align 4
  %v2_1136c = icmp ugt i32 %v2_11368, 10
  store i1 %v2_1136c, i1* %cpsr_c.global-to-local, align 1
  %v7_1136c = icmp eq i32 %v2_11368, 11
  store i1 %v7_1136c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1136c, label %dec_label_pc_114cc, label %dec_label_pc_11374

dec_label_pc_11374:                               ; preds = %dec_label_pc_11364
  %v0_11374 = call i32 @function_13994()
  store i32 %v0_11374, i32* %r0.global-to-local, align 4
  %v1_11378 = inttoptr i32 %v0_11374 to i32*
  %v2_11378 = load i32, i32* %v1_11378, align 4
  store i32 %v2_11378, i32* %r3.global-to-local, align 4
  %v2_1137c = icmp ugt i32 %v2_11378, 10
  store i1 %v2_1137c, i1* %cpsr_c.global-to-local, align 1
  %v7_1137c = icmp eq i32 %v2_11378, 11
  store i1 %v7_1137c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1137c, label %dec_label_pc_114cc, label %dec_label_pc_11384

dec_label_pc_11384:                               ; preds = %dec_label_pc_11374
  %v0_11384 = load i32, i32* @r4, align 4
  %v2_11384 = icmp ugt i32 %v0_11384, 38
  store i1 %v2_11384, i1* %cpsr_c.global-to-local, align 1
  %v7_11384 = icmp eq i32 %v0_11384, 39
  store i1 %v7_11384, i1* %cpsr_z.global-to-local, align 1
  %v2_11388 = xor i1 %v2_11384, true
  %v3_11388 = or i1 %v7_11384, %v2_11388
  br i1 %v3_11388, label %dec_label_pc_1132c, label %dec_label_pc_1138c

dec_label_pc_1138c:                               ; preds = %dec_label_pc_11384
  store i32 %stack_var_-1884.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2365c.94 to i32), i32* %ip.global-to-local, align 4
  %v3_11394 = load i32, i32* %v2_11394, align 4
  store i32 %v3_11394, i32* %r2.global-to-local, align 4
  %v2_11398 = load i32, i32* @global_var_2365c.94, align 4
  store i32 %v2_11398, i32* %r3.global-to-local, align 4
  %v3_1139c = icmp uge i32 %v3_11394, %v2_11398
  store i1 %v3_1139c, i1* %cpsr_c.global-to-local, align 1
  %v9_1139c = icmp eq i32 %v3_11394, %v2_11398
  store i1 %v9_1139c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1139c, label %dec_label_pc_113a4, label %dec_label_pc_1132c

dec_label_pc_113a4:                               ; preds = %dec_label_pc_1138c
  store i32 %stack_var_-1884.0, i32* @lr, align 4
  %v3_113a8 = load i8, i8* %v2_113a8, align 1
  %v4_113a8 = zext i8 %v3_113a8 to i32
  store i32 %v4_113a8, i32* %r3.global-to-local, align 4
  %v2_113ac = icmp ugt i8 %v3_113a8, 5
  store i1 %v2_113ac, i1* %cpsr_c.global-to-local, align 1
  %v7_113ac = icmp eq i8 %v3_113a8, 6
  store i1 %v7_113ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113ac, label %dec_label_pc_113b4, label %dec_label_pc_1132c

dec_label_pc_113b4:                               ; preds = %dec_label_pc_113a4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_113b8 = load i32, i32* @r5, align 4
  %v1_113b8 = inttoptr i32 %v0_113b8 to i16*
  %v2_113b8 = load i16, i16* %v1_113b8, align 2
  %v3_113b8 = zext i16 %v2_113b8 to i32
  store i32 %v3_113b8, i32* @r4, align 4
  %v1_113bc = call i32 @function_15314(i32 23)
  store i32 %v1_113bc, i32* %r0.global-to-local, align 4
  %v0_113c0 = load i32, i32* @r4, align 4
  %v3_113c0 = icmp uge i32 %v0_113c0, %v1_113bc
  store i1 %v3_113c0, i1* %cpsr_c.global-to-local, align 1
  %v9_113c0 = icmp eq i32 %v0_113c0, %v1_113bc
  store i1 %v9_113c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_113c0, label %dec_label_pc_113e0, label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113b4
  store i32 2323, i32* %r0.global-to-local, align 4
  %v0_113d0 = load i32, i32* @r5, align 4
  %v1_113d0 = inttoptr i32 %v0_113d0 to i16*
  %v2_113d0 = load i16, i16* %v1_113d0, align 2
  %v3_113d0 = zext i16 %v2_113d0 to i32
  store i32 %v3_113d0, i32* @r4, align 4
  %v1_113d4 = call i32 @function_15314(i32 2323)
  store i32 %v1_113d4, i32* %r0.global-to-local, align 4
  %v0_113d8 = load i32, i32* @r4, align 4
  %v3_113d8 = icmp uge i32 %v0_113d8, %v1_113d4
  store i1 %v3_113d8, i1* %cpsr_c.global-to-local, align 1
  %v9_113d8 = icmp eq i32 %v0_113d8, %v1_113d4
  store i1 %v9_113d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_113d8, label %dec_label_pc_113e0, label %dec_label_pc_1132c

dec_label_pc_113e0:                               ; preds = %dec_label_pc_113c8, %dec_label_pc_113b4
  %v0_113e0 = load i32, i32* @r5, align 4
  %v1_113e0 = add i32 %v0_113e0, 2
  %v2_113e0 = inttoptr i32 %v1_113e0 to i16*
  %v3_113e0 = load i16, i16* %v2_113e0, align 2
  %v4_113e0 = zext i16 %v3_113e0 to i32
  store i32 %v4_113e0, i32* %r3.global-to-local, align 4
  store i32 %v4_113e4, i32* %r0.global-to-local, align 4
  %v3_113e8 = icmp uge i32 %v4_113e0, %v4_113e4
  store i1 %v3_113e8, i1* %cpsr_c.global-to-local, align 1
  %v9_113e8 = icmp eq i32 %v4_113e0, %v4_113e4
  store i1 %v9_113e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_113e8, label %dec_label_pc_113f0, label %dec_label_pc_1132c

dec_label_pc_113f0:                               ; preds = %dec_label_pc_113e0
  %v1_113f0 = add i32 %v0_113e0, 13
  %v2_113f0 = inttoptr i32 %v1_113f0 to i8*
  %v3_113f0 = load i8, i8* %v2_113f0, align 1
  %v4_113f0 = zext i8 %v3_113f0 to i32
  store i32 %v4_113f0, i32* %r3.global-to-local, align 4
  %v1_113f4 = and i32 %v4_113f0, 2
  %v2_113f4 = icmp eq i32 %v1_113f4, 0
  store i1 %v2_113f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113f4, label %dec_label_pc_1132c, label %dec_label_pc_113fc

dec_label_pc_113fc:                               ; preds = %dec_label_pc_113f0
  %v1_113fc = and i32 %v4_113f0, 16
  %v2_113fc = icmp eq i32 %v1_113fc, 0
  store i1 %v2_113fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113fc, label %dec_label_pc_1132c, label %dec_label_pc_11404

dec_label_pc_11404:                               ; preds = %dec_label_pc_113fc
  %v1_11404 = and i32 %v4_113f0, 4
  %v2_11404 = icmp eq i32 %v1_11404, 0
  store i1 %v2_11404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11404, label %dec_label_pc_1140c, label %dec_label_pc_1132c

dec_label_pc_1140c:                               ; preds = %dec_label_pc_11404
  %tmp480 = urem i8 %v3_113f0, 2
  %v2_1140c = icmp eq i8 %tmp480, 0
  store i1 %v2_1140c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1140c, label %dec_label_pc_11414, label %dec_label_pc_1132c

dec_label_pc_11414:                               ; preds = %dec_label_pc_1140c
  %v1_11414 = add i32 %v0_113e0, 8
  %v2_11414 = inttoptr i32 %v1_11414 to i32*
  %v3_11414 = load i32, i32* %v2_11414, align 4
  store i32 %v3_11414, i32* %r0.global-to-local, align 4
  %v1_11418 = call i32 @function_15498(i32 %v3_11414)
  %v1_1141c = add i32 %v1_11418, -1
  store i32 %v1_1141c, i32* %r0.global-to-local, align 4
  %v1_11420 = call i32 @function_152f0(i32 %v1_1141c)
  store i32 %v1_11420, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1884.0, i32* %r1.global-to-local, align 4
  %v3_11428 = load i32, i32* %v2_11428, align 4
  store i32 %v3_11428, i32* %ip.global-to-local, align 4
  %v3_1142c = icmp uge i32 %v1_11420, %v3_11428
  store i1 %v3_1142c, i1* %cpsr_c.global-to-local, align 1
  %v9_1142c = icmp eq i32 %v1_11420, %v3_11428
  store i1 %v9_1142c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1142c, label %dec_label_pc_11434, label %dec_label_pc_1132c

dec_label_pc_11434:                               ; preds = %dec_label_pc_11414
  %v0_11434 = load i32, i32* @r6, align 4
  %v2_11434 = icmp ugt i32 %v0_11434, 254
  store i1 %v2_11434, i1* %cpsr_c.global-to-local, align 1
  %v7_11434 = icmp eq i32 %v0_11434, 255
  store i1 %v7_11434, i1* %cpsr_z.global-to-local, align 1
  %v8_11438 = icmp sgt i32 %v0_11434, 255
  br i1 %v8_11438, label %dec_label_pc_114cc, label %dec_label_pc_1143c

dec_label_pc_1143c:                               ; preds = %dec_label_pc_11434
  %v2_11444 = load i32, i32* @global_var_23678.209, align 4
  store i32 %v2_11444, i32* %r1.global-to-local, align 4
  %v3_11448 = mul i32 %v0_11434, 256
  store i32 %v3_11448, i32* %r2.global-to-local, align 4
  %v2_1144c = mul i32 %v0_11434, 288
  store i32 %v2_1144c, i32* %r3.global-to-local, align 4
  %v2_11450 = add i32 %v2_11444, %v2_1144c
  store i32 %v2_11450, i32* @r0, align 4
  %v1_11454 = add i32 %v2_11450, 12
  %v2_11454 = inttoptr i32 %v1_11454 to i32*
  %v3_11454 = load i32, i32* %v2_11454, align 4
  store i32 %v3_11454, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11458 = icmp eq i32 %v3_11454, 0
  store i1 %v2_11458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11458, label %dec_label_pc_1149c, label %dec_label_pc_11478.preheader

dec_label_pc_11478.preheader:                     ; preds = %dec_label_pc_1143c
  %v2_1145c = add i32 %v0_11434, 1
  %v2_11464 = and i32 %v2_1145c, 134217728
  %v3_11464 = icmp ne i32 %v2_11464, 0
  store i1 %v3_11464, i1* %cpsr_c.global-to-local, align 1
  %v3_11468 = mul i32 %v2_1145c, 288
  %v3_1146c = add i32 %v2_11444, %v3_11468
  store i32 %v3_1146c, i32* %r3.global-to-local, align 4
  store i32 %v0_11434, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11478

dec_label_pc_11478:                               ; preds = %dec_label_pc_11478.preheader, %dec_label_pc_11484
  %v0_11484 = phi i32 [ %v3_1146c, %dec_label_pc_11478.preheader ], [ %v1_11490, %dec_label_pc_11484 ]
  %v0_11478 = phi i32 [ %v0_11434, %dec_label_pc_11478.preheader ], [ %v1_11478, %dec_label_pc_11484 ]
  %v1_11478 = add i32 %v0_11478, 1
  store i32 %v1_11478, i32* %r2.global-to-local, align 4
  %v7_1147c = icmp eq i32 %v1_11478, 256
  br i1 %v7_1147c, label %dec_label_pc_114cc.loopexit, label %dec_label_pc_11484

dec_label_pc_11484:                               ; preds = %dec_label_pc_11478
  store i32 %v0_11484, i32* @r0, align 4
  %v1_11488 = add i32 %v0_11484, 12
  %v2_11488 = inttoptr i32 %v1_11488 to i32*
  %v3_11488 = load i32, i32* %v2_11488, align 4
  %v2_1148c = icmp eq i32 %v3_11488, 0
  %v1_11490 = add i32 %v0_11484, 288
  store i32 %v1_11490, i32* %r3.global-to-local, align 4
  br i1 %v2_1148c, label %dec_label_pc_11498, label %dec_label_pc_11478

dec_label_pc_11498:                               ; preds = %dec_label_pc_11484
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_11478, i32* @r6, align 4
  br label %dec_label_pc_1149c

dec_label_pc_1149c:                               ; preds = %dec_label_pc_1143c, %dec_label_pc_11498
  %v1_114a8 = phi i32 [ %v2_11450, %dec_label_pc_1143c ], [ %v0_11484, %dec_label_pc_11498 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1149c = icmp eq i32 %v1_114a8, 0
  store i1 %v2_1149c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1149c, label %dec_label_pc_114cc, label %dec_label_pc_114a4

dec_label_pc_114a4:                               ; preds = %dec_label_pc_1149c
  %v0_114a4 = load i32, i32* @r5, align 4
  %v1_114a4 = inttoptr i32 %v0_114a4 to i16*
  %v2_114a4 = load i16, i16* %v1_114a4, align 2
  %v3_114a4 = zext i16 %v2_114a4 to i32
  store i32 %v3_114a4, i32* %r3.global-to-local, align 4
  %v2_114a8 = add i32 %v1_114a8, 16
  %v3_114a8 = inttoptr i32 %v2_114a8 to i32*
  store i32 %v1_11420, i32* %v3_114a8, align 4
  %v0_114ac = load i32, i32* %r3.global-to-local, align 4
  %v1_114ac = trunc i32 %v0_114ac to i16
  %v2_114ac = load i32, i32* @r0, align 4
  %v3_114ac = add i32 %v2_114ac, 20
  %v4_114ac = inttoptr i32 %v3_114ac to i16*
  store i16 %v1_114ac, i16* %v4_114ac, align 2
  %v0_114b0 = call i32 @function_10888()
  store i32 %v0_114b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1132c

dec_label_pc_114b8:                               ; preds = %dec_label_pc_10ba4
  store i32 ptrtoint (i32* @global_var_2367c.211 to i32), i32* %ip.global-to-local, align 4
  %v2_114bc = load i32, i32* @global_var_2367c.211, align 4
  store i32 %v2_114bc, i32* @r0, align 4
  %v1_114c0 = call i32 @function_165e8(i32 %v2_114bc)
  store i32 %v1_114c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_114c4

dec_label_pc_114c4:                               ; preds = %dec_label_pc_10b80, %dec_label_pc_114b8
  %v0_114c4 = load i32, i32* @r5, align 4
  store i32 %v0_114c4, i32* %r0.global-to-local, align 4
  %v1_114c8 = call i32 @function_139ac(i32 %v0_114c4)
  store i32 %v1_114c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_114cc

dec_label_pc_114cc.loopexit:                      ; preds = %dec_label_pc_11478
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_114cc

dec_label_pc_114cc:                               ; preds = %dec_label_pc_1149c, %dec_label_pc_11434, %dec_label_pc_11374, %dec_label_pc_11364, %dec_label_pc_1132c, %dec_label_pc_114cc.loopexit, %dec_label_pc_114c4
  %stack_var_-1876.2 = phi i32 [ %tmp273, %dec_label_pc_114c4 ], [ %stack_var_-1876.1, %dec_label_pc_114cc.loopexit ], [ %stack_var_-1876.1, %dec_label_pc_1132c ], [ %stack_var_-1876.1, %dec_label_pc_11364 ], [ %stack_var_-1876.1, %dec_label_pc_11374 ], [ %stack_var_-1876.1, %dec_label_pc_11434 ], [ %stack_var_-1876.1, %dec_label_pc_1149c ]
  %stack_var_-1884.1 = phi i32 [ %tmp274, %dec_label_pc_114c4 ], [ %stack_var_-1884.0, %dec_label_pc_114cc.loopexit ], [ %stack_var_-1884.0, %dec_label_pc_1132c ], [ %stack_var_-1884.0, %dec_label_pc_11364 ], [ %stack_var_-1884.0, %dec_label_pc_11374 ], [ %stack_var_-1884.0, %dec_label_pc_11434 ], [ %stack_var_-1884.0, %dec_label_pc_1149c ]
  %stack_var_-1880.1 = phi i16 [ %tmp275, %dec_label_pc_114c4 ], [ %stack_var_-1880.0, %dec_label_pc_114cc.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_1132c ], [ %stack_var_-1880.0, %dec_label_pc_11364 ], [ %stack_var_-1880.0, %dec_label_pc_11374 ], [ %stack_var_-1880.0, %dec_label_pc_11434 ], [ %stack_var_-1880.0, %dec_label_pc_1149c ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_114ec438 = load i32, i32* @sp, align 4
  %v3_114ec439 = add i32 %v2_114ec438, 1676
  %v4_114ec440 = inttoptr i32 %v3_114ec439 to i32*
  store i32 0, i32* %v4_114ec440, align 4
  br label %dec_label_pc_114d8.dec_label_pc_114d8_crit_edge

dec_label_pc_114d8.dec_label_pc_114d8_crit_edge:  ; preds = %dec_label_pc_114cc, %dec_label_pc_114d8.dec_label_pc_114d8_crit_edge
  %v0_114d8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_114dc = add i32 %v0_114d8.pre, 4
  store i32 %v1_114dc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_114e4 = add i32 %v0_114d8.pre, 1672
  store i32 %v1_114e4, i32* %ip.global-to-local, align 4
  %v7_114e8 = icmp eq i32 %v1_114dc, 128
  %v2_114ec = load i32, i32* @sp, align 4
  %v3_114ec = add i32 %v2_114ec, %v1_114e4
  %v4_114ec = inttoptr i32 %v3_114ec to i32*
  store i32 0, i32* %v4_114ec, align 4
  br i1 %v7_114e8, label %dec_label_pc_114f4, label %dec_label_pc_114d8.dec_label_pc_114d8_crit_edge

dec_label_pc_114f4:                               ; preds = %dec_label_pc_114d8.dec_label_pc_114d8_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_114f4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_114f4, i32* %stack_var_-352, align 4
  %v1_11500432 = add i32 %v0_114f4, 8
  store i32 %v1_11500432, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_11508433 = add i32 %v0_114f4, 1548
  store i32 %v1_11508433, i32* @lr, align 4
  %v7_1150c434 = icmp eq i32 %v1_11500432, 128
  %v2_11510435 = load i32, i32* @sp, align 4
  %v3_11510436 = add i32 %v2_11510435, %v1_11508433
  %v4_11510437 = inttoptr i32 %v3_11510436 to i32*
  store i32 0, i32* %v4_11510437, align 4
  br i1 %v7_1150c434, label %dec_label_pc_11518, label %dec_label_pc_114fc.dec_label_pc_114fc_crit_edge

dec_label_pc_114fc.dec_label_pc_114fc_crit_edge:  ; preds = %dec_label_pc_114f4, %dec_label_pc_114fc.dec_label_pc_114fc_crit_edge
  %v0_114fc.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_11500 = add i32 %v0_114fc.pre, 4
  store i32 %v1_11500, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_11508 = add i32 %v0_114fc.pre, 1544
  store i32 %v1_11508, i32* @lr, align 4
  %v7_1150c = icmp eq i32 %v1_11500, 128
  %v2_11510 = load i32, i32* @sp, align 4
  %v3_11510 = add i32 %v2_11510, %v1_11508
  %v4_11510 = inttoptr i32 %v3_11510 to i32*
  store i32 0, i32* %v4_11510, align 4
  br i1 %v7_1150c, label %dec_label_pc_11518, label %dec_label_pc_114fc.dec_label_pc_114fc_crit_edge

dec_label_pc_11518:                               ; preds = %dec_label_pc_114fc.dec_label_pc_114fc_crit_edge, %dec_label_pc_114f4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_11518 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_11518, i32* @r6, align 4
  store i32 %v0_11518, i32* @r5, align 4
  store i32 %v0_11518, i32* %stack_var_-52, align 4
  %v2_12474 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_11574

dec_label_pc_11528:                               ; preds = %dec_label_pc_115a4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_11590, i1* %cpsr_z.global-to-local, align 1
  %v1_12468 = add i32 %v2_11588, 4
  %v2_12468 = inttoptr i32 %v1_12468 to i32*
  %v3_12468 = load i32, i32* %v2_12468, align 4
  br i1 %v7_11590, label %dec_label_pc_12468, label %dec_label_pc_11530

dec_label_pc_11530:                               ; preds = %dec_label_pc_11528
  store i32 %v3_12468, i32* %ip.global-to-local, align 4
  %v3_11534 = udiv i32 %v3_12468, 32
  store i32 %v2_12474, i32* %r0.global-to-local, align 4
  %v3_1153c = mul nuw nsw i32 %v3_11534, 4
  %v2_11540 = add i32 %v3_1153c, %v2_12474
  store i32 %v2_11540, i32* %r3.global-to-local, align 4
  %v1_11544 = add i32 %v2_11540, -184
  %v2_11544 = inttoptr i32 %v1_11544 to i32*
  %v3_11544 = load i32, i32* %v2_11544, align 4
  %v1_11548 = urem i32 %v3_12468, 32
  store i32 %v1_11548, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_11550 = shl i32 1, %v1_11548
  %v8_11550 = or i32 %v3_11544, %v7_11550
  store i32 %v8_11550, i32* %r2.global-to-local, align 4
  store i32 %v8_11550, i32* %v2_11544, align 4
  %v0_11558 = load i32, i32* @r6, align 4
  %v1_11558 = load i32, i32* %ip.global-to-local, align 4
  %v3_11558 = icmp uge i32 %v0_11558, %v1_11558
  store i1 %v3_11558, i1* %cpsr_c.global-to-local, align 1
  %v9_11558 = icmp eq i32 %v0_11558, %v1_11558
  store i1 %v9_11558, i1* %cpsr_z.global-to-local, align 1
  %v5_1155c = icmp slt i32 %v0_11558, %v1_11558
  br i1 %v5_1155c, label %bb333, label %bb334

bb333:                                            ; preds = %dec_label_pc_11530
  store i32 %v1_11558, i32* @r6, align 4
  br label %bb334

bb334:                                            ; preds = %.thread43, %bb340, %bb338, %bb383, %dec_label_pc_11608, %dec_label_pc_11530, %bb333
  %v3_11560 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_11560, i32* %r3.global-to-local, align 4
  %v1_11564 = add i32 %v3_11560, 1
  store i32 %v1_11564, i32* %r2.global-to-local, align 4
  %v2_11568 = icmp ugt i32 %v1_11564, 254
  store i1 %v2_11568, i1* %cpsr_c.global-to-local, align 1
  %v7_11568 = icmp eq i32 %v1_11564, 255
  store i1 %v7_11568, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_11564, i32* %stack_var_-52, align 4
  %v8_11570 = icmp sgt i32 %v1_11564, 255
  br i1 %v8_11570, label %dec_label_pc_11628, label %dec_label_pc_11574

dec_label_pc_11574:                               ; preds = %bb334, %dec_label_pc_11518
  %v0_11580 = phi i32 [ %v1_11564, %bb334 ], [ %v0_11518, %dec_label_pc_11518 ]
  store i32 ptrtoint (i32* @global_var_23678.209 to i32), i32* %r0.global-to-local, align 4
  %v3_11578 = mul i32 %v0_11580, 256
  store i32 %v3_11578, i32* %r3.global-to-local, align 4
  %v2_1157c = load i32, i32* @global_var_23678.209, align 4
  store i32 %v2_1157c, i32* %r1.global-to-local, align 4
  %v2_11584 = mul i32 %v0_11580, 288
  store i32 %v2_11584, i32* %r2.global-to-local, align 4
  %v2_11588 = add i32 %v2_1157c, %v2_11584
  store i32 %v2_11588, i32* @r4, align 4
  %v1_1158c = add i32 %v2_11588, 12
  %v2_1158c = inttoptr i32 %v1_1158c to i32*
  %v3_1158c = load i32, i32* %v2_1158c, align 4
  store i32 %v3_1158c, i32* %ip.global-to-local, align 4
  %v2_11590 = icmp ne i32 %v3_1158c, 0
  store i1 %v2_11590, i1* %cpsr_c.global-to-local, align 1
  %v7_11590 = icmp eq i32 %v3_1158c, 1
  store i1 %v7_11590, i1* %cpsr_z.global-to-local, align 1
  %v2_11594 = xor i1 %v2_11590, true
  %v3_11594 = or i1 %v7_11590, %v2_11594
  br i1 %v3_11594, label %bb335, label %bb336

bb335:                                            ; preds = %dec_label_pc_11574
  store i32 5, i32* %r1.global-to-local, align 4
  br label %bb336

bb336:                                            ; preds = %dec_label_pc_11574, %bb335
  %v1_115b4143 = phi i32 [ %v2_1157c, %dec_label_pc_11574 ], [ 5, %bb335 ]
  %v2_11598 = xor i1 %v7_11590, true
  %v3_11598 = and i1 %v2_11590, %v2_11598
  br i1 %v3_11598, label %bb337, label %bb338

bb337:                                            ; preds = %bb336
  store i32 30, i32* %r1.global-to-local, align 4
  br label %bb338

bb338:                                            ; preds = %bb336, %bb337
  %v1_115b4 = phi i32 [ %v1_115b4143, %bb336 ], [ 30, %bb337 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1159c = icmp eq i32 %v3_1158c, 0
  store i1 %v2_1159c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1159c, label %bb334, label %dec_label_pc_115a4

dec_label_pc_115a4:                               ; preds = %bb338
  store i32 ptrtoint (i32* @global_var_230e8.198 to i32), i32* %r2.global-to-local, align 4
  %v2_115a8 = load i32, i32* @global_var_230e8.198, align 4
  store i32 %v2_115a8, i32* %r3.global-to-local, align 4
  %v1_115ac = add i32 %v2_11588, 8
  %v2_115ac = inttoptr i32 %v1_115ac to i32*
  %v3_115ac = load i32, i32* %v2_115ac, align 4
  store i32 %v3_115ac, i32* %r2.global-to-local, align 4
  %v2_115b0 = sub i32 %v2_115a8, %v3_115ac
  store i32 %v2_115b0, i32* %r3.global-to-local, align 4
  %v3_115b4 = icmp uge i32 %v2_115b0, %v1_115b4
  store i1 %v3_115b4, i1* %cpsr_c.global-to-local, align 1
  %v9_115b4 = icmp eq i32 %v2_115b0, %v1_115b4
  store i1 %v9_115b4, i1* %cpsr_z.global-to-local, align 1
  %v2_115b8 = xor i1 %v3_115b4, true
  %v3_115b8 = or i1 %v9_115b4, %v2_115b8
  br i1 %v3_115b8, label %dec_label_pc_11528, label %dec_label_pc_115bc

dec_label_pc_115bc:                               ; preds = %dec_label_pc_115a4
  %v1_115bc = add i32 %v2_11588, 4
  %v2_115bc = inttoptr i32 %v1_115bc to i32*
  %v3_115bc = load i32, i32* %v2_115bc, align 4
  store i32 %v3_115bc, i32* @r0, align 4
  %v1_115c0 = call i32 @function_165e8(i32 %v3_115bc)
  store i32 %v1_115c0, i32* %r0.global-to-local, align 4
  %v0_115c4 = load i32, i32* @r4, align 4
  %v1_115c4 = add i32 %v0_115c4, 12
  %v2_115c4 = inttoptr i32 %v1_115c4 to i32*
  %v3_115c4 = load i32, i32* %v2_115c4, align 4
  store i32 %v3_115c4, i32* %r3.global-to-local, align 4
  %v2_115c8 = icmp ugt i32 %v3_115c4, 1
  store i1 %v2_115c8, i1* %cpsr_c.global-to-local, align 1
  %v7_115c8 = icmp eq i32 %v3_115c4, 2
  store i1 %v7_115c8, i1* %cpsr_z.global-to-local, align 1
  %v2_115cc = xor i1 %v2_115c8, true
  %v3_115cc = or i1 %v7_115c8, %v2_115cc
  br i1 %v3_115cc, label %bb339, label %.thread239

.thread239:                                       ; preds = %dec_label_pc_115bc
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_115d4236240 = add i32 %v0_115c4, 4
  %v3_115d4237241 = inttoptr i32 %v2_115d4236240 to i32*
  store i32 -1, i32* %v3_115d4237241, align 4
  br label %bb340

bb339:                                            ; preds = %dec_label_pc_115bc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_115d4233 = add i32 %v0_115c4, 4
  %v3_115d4234 = inttoptr i32 %v2_115d4233 to i32*
  store i32 -1, i32* %v3_115d4234, align 4
  %v4_115d8 = load i32, i32* %r3.global-to-local, align 4
  %v5_115d8 = load i32, i32* @r4, align 4
  %v6_115d8 = add i32 %v5_115d8, 12
  %v7_115d8 = inttoptr i32 %v6_115d8 to i32*
  store i32 %v4_115d8, i32* %v7_115d8, align 4
  %v4_115dc = load i32, i32* %r3.global-to-local, align 4
  %v5_115dc = trunc i32 %v4_115dc to i8
  %v6_115dc = load i32, i32* @r4, align 4
  %v7_115dc = add i32 %v6_115dc, 284
  %v8_115dc = inttoptr i32 %v7_115dc to i8*
  store i8 %v5_115dc, i8* %v8_115dc, align 1
  %v0_115e0.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_115e0.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb340

bb340:                                            ; preds = %.thread239, %bb339
  %v1_115e0 = phi i1 [ %v1_115e0.pre, %bb339 ], [ %v2_115c8, %.thread239 ]
  %v0_115e0 = phi i1 [ %v0_115e0.pre, %bb339 ], [ false, %.thread239 ]
  %v2_115e0 = xor i1 %v1_115e0, true
  %v3_115e0 = or i1 %v0_115e0, %v2_115e0
  br i1 %v3_115e0, label %bb334, label %dec_label_pc_115e4

dec_label_pc_115e4:                               ; preds = %bb340
  %v0_115e4 = load i32, i32* @r4, align 4
  %v1_115e4 = add i32 %v0_115e4, 284
  %v2_115e4 = inttoptr i32 %v1_115e4 to i8*
  %v3_115e4 = load i8, i8* %v2_115e4, align 1
  %v4_115e4 = zext i8 %v3_115e4 to i32
  %v1_115e8 = add nuw nsw i32 %v4_115e4, 1
  %v1_115ec = urem i32 %v1_115e8, 256
  store i32 %v1_115ec, i32* %r3.global-to-local, align 4
  %v2_115f0 = icmp ugt i32 %v1_115ec, 9
  store i1 %v2_115f0, i1* %cpsr_c.global-to-local, align 1
  %v7_115f0 = icmp eq i32 %v1_115ec, 10
  store i1 %v7_115f0, i1* %cpsr_z.global-to-local, align 1
  %v1_115f4 = trunc i32 %v1_115e8 to i8
  store i8 %v1_115f4, i8* %v2_115e4, align 1
  %v0_115f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_115f8, label %.thread43, label %dec_label_pc_11608

.thread43:                                        ; preds = %dec_label_pc_115e4
  %v1_115f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_115f8 = add i32 %v1_115f8, -10
  store i32 %v2_115f8, i32* %r3.global-to-local, align 4
  %v2_115fc = load i32, i32* @r4, align 4
  %v3_115fc = add i32 %v2_115fc, 12
  %v4_115fc = inttoptr i32 %v3_115fc to i32*
  store i32 %v2_115f8, i32* %v4_115fc, align 4
  %v1_11600 = load i32, i32* %r3.global-to-local, align 4
  %v2_11600 = trunc i32 %v1_11600 to i8
  %v3_11600 = load i32, i32* @r4, align 4
  %v4_11600 = add i32 %v3_11600, 284
  %v5_11600 = inttoptr i32 %v4_11600 to i8*
  store i8 %v2_11600, i8* %v5_11600, align 1
  %v0_11604.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11604.pr.pr, label %bb334, label %dec_label_pc_11608

dec_label_pc_11608:                               ; preds = %dec_label_pc_115e4, %.thread43
  %v0_11608 = load i32, i32* @r4, align 4
  store i32 %v0_11608, i32* @r0, align 4
  %v0_1160c = call i32 @function_10888()
  store i32 %v0_1160c, i32* %r0.global-to-local, align 4
  br label %bb334

dec_label_pc_11614:                               ; preds = %dec_label_pc_1120c
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11618 = call i32 @function_15314(i32 23)
  %v2_11618 = trunc i32 %v1_11618 to i16
  store i32 %v1_11618, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230cc.219 to i32), i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1127c

dec_label_pc_11628:                               ; preds = %bb334
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_11634 = load i32, i32* @r6, align 4
  %v1_11634 = load i32, i32* @r5, align 4
  %v3_11634 = icmp uge i32 %v0_11634, %v1_11634
  store i1 %v3_11634, i1* %cpsr_c.global-to-local, align 1
  %v9_11634 = icmp eq i32 %v0_11634, %v1_11634
  store i1 %v9_11634, i1* %cpsr_z.global-to-local, align 1
  %v5_11638 = icmp slt i32 %v0_11634, %v1_11634
  %storemerge106 = select i1 %v5_11638, i32 %v1_11634, i32 %v0_11634
  %v2_1164c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_1164c, i32* %ip.global-to-local, align 4
  %v2_11650 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_11650, i32* %r1.global-to-local, align 4
  %v2_11654 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_11654, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1165c = add i32 %storemerge106, 1
  store i32 %v1_1165c, i32* %r0.global-to-local, align 4
  %v5_11668 = call i32 @function_157a0(i32 %v1_1165c, i32 %v2_11650, i32 %v2_11654, i32 0, i32 %v2_1164c)
  %v0_1166c = load i32, i32* @r4, align 4
  store i32 %v0_1166c, i32* %r0.global-to-local, align 4
  %v1_11670 = inttoptr i32 %v0_1166c to i32*
  %v2_11670 = call i32 @function_16598(i32* %v1_11670)
  store i32 %v2_11670, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230e8.198 to i32), i32* @lr, align 4
  %v0_11678 = load i32, i32* @r4, align 4
  store i32 %v0_11678, i32* %stack_var_-52, align 4
  store i32 %v2_11670, i32* @global_var_230e8.198, align 4
  %v2_11ff8 = ptrtoint i32* %stack_var_-45 to i32
  %v2_1200c = ptrtoint i32* %stack_var_-77 to i32
  %v3_12010 = bitcast i32* %stack_var_-45 to i16*
  %v3_12020 = bitcast i32* %stack_var_-77 to i16*
  %v2_11d9c = ptrtoint i32* %stack_var_-60 to i32
  %v2_1213c = ptrtoint i32* %stack_var_-104 to i32
  %v2_12378 = ptrtoint i32* %stack_var_-96 to i32
  %v2_123a4 = ptrtoint i32* %stack_var_-56 to i32
  %v2_123d0 = ptrtoint i32* %stack_var_-42 to i32
  br label %dec_label_pc_11680

dec_label_pc_11680:                               ; preds = %dec_label_pc_11804, %dec_label_pc_11628
  %v0_1168c = phi i32 [ %v1_11808, %dec_label_pc_11804 ], [ %v0_11678, %dec_label_pc_11628 ]
  store i32 ptrtoint (i32* @global_var_23678.209 to i32), i32* %r0.global-to-local, align 4
  %v3_11684 = mul i32 %v0_1168c, 256
  store i32 %v3_11684, i32* %r3.global-to-local, align 4
  %v2_11688 = load i32, i32* @global_var_23678.209, align 4
  store i32 %v2_11688, i32* %r1.global-to-local, align 4
  %v2_11690 = mul i32 %v0_1168c, 288
  store i32 %v2_11690, i32* %r2.global-to-local, align 4
  %v2_11694 = add i32 %v2_11688, %v2_11690
  store i32 %v2_11694, i32* @r6, align 4
  %v1_11698 = add i32 %v2_11694, 4
  %v2_11698 = inttoptr i32 %v1_11698 to i32*
  %v3_11698 = load i32, i32* %v2_11698, align 4
  store i32 %v3_11698, i32* %r0.global-to-local, align 4
  %v2_1169c = icmp eq i32 %v3_11698, -1
  store i1 %v2_1169c, i1* %cpsr_c.global-to-local, align 1
  %v7_1169c = icmp eq i32 %v3_11698, -1
  store i1 %v7_1169c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1169c, label %dec_label_pc_11804, label %dec_label_pc_116a4

dec_label_pc_116a4:                               ; preds = %dec_label_pc_11680
  %v3_116a4 = udiv i32 %v3_11698, 32
  store i32 %v2_12474, i32* %r1.global-to-local, align 4
  %v3_116ac = mul nuw nsw i32 %v3_116a4, 4
  store i32 %v3_116ac, i32* %ip.global-to-local, align 4
  %v2_116b0 = add i32 %v3_116ac, %v2_12474
  store i32 %v2_116b0, i32* %r2.global-to-local, align 4
  %v1_116b4 = add i32 %v2_116b0, -312
  %v2_116b4 = inttoptr i32 %v1_116b4 to i32*
  %v3_116b4 = load i32, i32* %v2_116b4, align 4
  %v1_116b8 = urem i32 %v3_11698, 32
  store i32 %v1_116b8, i32* %r1.global-to-local, align 4
  %v2_116bc = add nsw i32 %v1_116b8, -1
  %v3_116bc = shl i32 1, %v2_116bc
  %v4_116bc = and i32 %v3_116b4, %v3_116bc
  %v5_116bc = icmp ne i32 %v4_116bc, 0
  store i1 %v5_116bc, i1* %cpsr_c.global-to-local, align 1
  %v6_116bc = lshr i32 %v3_116b4, %v1_116b8
  store i32 %v6_116bc, i32* %r3.global-to-local, align 4
  %v1_116c0 = urem i32 %v6_116bc, 2
  %v2_116c0 = icmp eq i32 %v1_116c0, 0
  store i1 %v2_116c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116c0, label %dec_label_pc_116c8, label %dec_label_pc_12234

dec_label_pc_116c8:                               ; preds = %dec_label_pc_116a4, %dec_label_pc_122e0
  %v1_116d4 = phi i32 [ %v1_116b8, %dec_label_pc_116a4 ], [ %v1_116d4.pre, %dec_label_pc_122e0 ]
  %v0_116cc = phi i32 [ %v3_116ac, %dec_label_pc_116a4 ], [ %v0_116cc.pre, %dec_label_pc_122e0 ]
  store i32 %v2_12474, i32* @lr, align 4
  %v2_116cc = add i32 %v0_116cc, %v2_12474
  store i32 %v2_116cc, i32* %r2.global-to-local, align 4
  %v1_116d0 = add i32 %v2_116cc, -184
  %v2_116d0 = inttoptr i32 %v1_116d0 to i32*
  %v3_116d0 = load i32, i32* %v2_116d0, align 4
  %v2_116d4 = add i32 %v1_116d4, -1
  %v3_116d4 = shl i32 1, %v2_116d4
  %v4_116d4 = and i32 %v3_116d0, %v3_116d4
  %v5_116d4 = icmp ne i32 %v4_116d4, 0
  store i1 %v5_116d4, i1* %cpsr_c.global-to-local, align 1
  %v6_116d4 = lshr i32 %v3_116d0, %v1_116d4
  store i32 %v6_116d4, i32* %r3.global-to-local, align 4
  %v1_116d8 = urem i32 %v6_116d4, 2
  %v2_116d8 = icmp eq i32 %v1_116d8, 0
  store i1 %v2_116d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116d8, label %dec_label_pc_11804, label %dec_label_pc_116e0.preheader

dec_label_pc_116e0.preheader:                     ; preds = %dec_label_pc_116c8
  %v0_116e0127 = load i32, i32* @r6, align 4
  %v1_116e0128 = add i32 %v0_116e0127, 12
  %v2_116e0129 = inttoptr i32 %v1_116e0128 to i32*
  %v3_116e0130 = load i32, i32* %v2_116e0129, align 4
  store i32 %v3_116e0130, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116e4126132 = icmp eq i32 %v3_116e0130, 0
  store i1 %v2_116e4126132, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116e4126132, label %dec_label_pc_11804, label %dec_label_pc_116ec.lr.ph

dec_label_pc_116e0.loopexit:                      ; preds = %dec_label_pc_120e0, %dec_label_pc_11efc, %dec_label_pc_11e84, %dec_label_pc_12444
  %v0_116e0 = load i32, i32* @r6, align 4
  %v1_116e0 = add i32 %v0_116e0, 12
  %v2_116e0 = inttoptr i32 %v1_116e0 to i32*
  %v3_116e0 = load i32, i32* %v2_116e0, align 4
  store i32 %v3_116e0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116e4126 = icmp eq i32 %v3_116e0, 0
  store i1 %v2_116e4126, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116e4126, label %dec_label_pc_11804, label %dec_label_pc_116ec.lr.ph

dec_label_pc_116ec.lr.ph:                         ; preds = %dec_label_pc_116e0.preheader, %dec_label_pc_116e0.loopexit
  %v0_116ec158 = phi i32 [ %v0_116e0, %dec_label_pc_116e0.loopexit ], [ %v0_116e0127, %dec_label_pc_116e0.preheader ]
  br label %dec_label_pc_116ec

dec_label_pc_116e4thread-pre-split.thread:        ; preds = %dec_label_pc_118bc, %dec_label_pc_11990, %dec_label_pc_11a64, %dec_label_pc_11c3c, %dec_label_pc_11d10
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116ec

dec_label_pc_116e4thread-pre-split.thread477:     ; preds = %dec_label_pc_11d74, %dec_label_pc_11bcc, %dec_label_pc_119f4, %dec_label_pc_11ca0, %dec_label_pc_11920
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116ec

dec_label_pc_116e4thread-pre-split:               ; preds = %dec_label_pc_11764
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116e4 = icmp eq i32 %v3_11764, 0
  store i1 %v2_116e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116e4, label %dec_label_pc_11804, label %dec_label_pc_116ec

dec_label_pc_116ec:                               ; preds = %dec_label_pc_116e4thread-pre-split.thread, %dec_label_pc_116e4thread-pre-split, %dec_label_pc_116e4thread-pre-split.thread477, %dec_label_pc_116ec.lr.ph
  %v0_121e0 = phi i32 [ %v0_116ec158, %dec_label_pc_116ec.lr.ph ], [ %v0_11764, %dec_label_pc_116e4thread-pre-split.thread477 ], [ %v0_11764, %dec_label_pc_116e4thread-pre-split ], [ %v0_11764, %dec_label_pc_116e4thread-pre-split.thread ]
  %v1_116ec = add i32 %v0_121e0, 24
  %v2_116ec = inttoptr i32 %v1_116ec to i32*
  %v3_116ec = load i32, i32* %v2_116ec, align 4
  store i32 %v3_116ec, i32* %r3.global-to-local, align 4
  %v2_116f0 = icmp ugt i32 %v3_116ec, 255
  store i1 %v2_116f0, i1* %cpsr_c.global-to-local, align 1
  %v7_116f0 = icmp eq i32 %v3_116ec, 256
  store i1 %v7_116f0, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_121e0, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_116f0, label %dec_label_pc_121e0, label %dec_label_pc_116fc

dec_label_pc_116fc:                               ; preds = %dec_label_pc_116ec, %dec_label_pc_121e0
  %v0_116fc = call i32 @function_13994()
  store i32 %v0_116fc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v2_11704 = inttoptr i32 %v0_116fc to i32*
  store i32 0, i32* %v2_11704, align 4
  %v0_11708 = load i32, i32* @r6, align 4
  %v1_11708 = add i32 %v0_11708, 24
  %v2_11708 = inttoptr i32 %v1_11708 to i32*
  %v3_11708 = load i32, i32* %v2_11708, align 4
  store i32 %v3_11708, i32* %r2.global-to-local, align 4
  %v0_1170c = load i32, i32* @fp, align 4
  %v2_1170c = add i32 %v0_1170c, %v3_11708
  store i32 %v2_1170c, i32* @r4, align 4
  %v1_11710 = add i32 %v0_11708, 4
  %v2_11710 = inttoptr i32 %v1_11710 to i32*
  %v3_11710 = load i32, i32* %v2_11710, align 4
  store i32 %v3_11710, i32* @r0, align 4
  %v1_11714 = sub i32 256, %v3_11708
  store i32 %v1_11714, i32* @r2, align 4
  store i32 %v2_1170c, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11720 = call i32 @function_154d0(i32 %v3_11710, i32 %v2_1170c, i32 %v1_11714, i32 16384)
  store i32 %v4_11720, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11724 = icmp eq i32 %v4_11720, 0
  store i1 %v2_11724, i1* %cpsr_z.global-to-local, align 1
  %tmp341 = icmp slt i32 %v4_11720, 1
  br i1 %tmp341, label %dec_label_pc_121d0, label %dec_label_pc_1172c

dec_label_pc_1172c:                               ; preds = %dec_label_pc_116fc
  %v0_1172c = load i32, i32* @r5, align 4
  store i32 %v0_1172c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11730

dec_label_pc_11730:                               ; preds = %.thread50, %dec_label_pc_1172c
  %v3_1173c = phi i32 [ %v1_11740, %.thread50 ], [ %v0_1172c, %dec_label_pc_1172c ]
  %v1_11730 = load i32, i32* @r4, align 4
  %v2_11730 = add i32 %v1_11730, %v3_1173c
  %v3_11730 = inttoptr i32 %v2_11730 to i8*
  %v4_11730 = load i8, i8* %v3_11730, align 1
  %v6_11730 = zext i8 %v4_11730 to i32
  store i32 %v6_11730, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11734 = icmp eq i8 %v4_11730, 0
  store i1 %v2_11734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11734, label %bb342, label %.thread50

bb342:                                            ; preds = %dec_label_pc_11730
  %v2_11738 = add nuw nsw i32 %v6_11730, 65
  store i32 %v2_11738, i32* %r3.global-to-local, align 4
  %v2_1173c = trunc i32 %v2_11738 to i8
  store i8 %v2_1173c, i8* %v3_11730, align 1
  %v0_11740.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread50

.thread50:                                        ; preds = %dec_label_pc_11730, %bb342
  %v0_11740 = phi i32 [ %v3_1173c, %dec_label_pc_11730 ], [ %v0_11740.pre, %bb342 ]
  %v1_11740 = add i32 %v0_11740, 1
  store i32 %v1_11740, i32* %r2.global-to-local, align 4
  %v3_11744 = icmp uge i32 %v1_11740, %v4_11720
  store i1 %v3_11744, i1* %cpsr_c.global-to-local, align 1
  %v9_11744 = icmp eq i32 %v1_11740, %v4_11720
  store i1 %v9_11744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11744, label %dec_label_pc_1174c, label %dec_label_pc_11730

dec_label_pc_1174c:                               ; preds = %.thread50, %dec_label_pc_121d4
  store i32 ptrtoint (i32* @global_var_230e8.198 to i32), i32* %r1.global-to-local, align 4
  %v0_11750 = load i32, i32* @r6, align 4
  %v1_11750 = add i32 %v0_11750, 24
  %v2_11750 = inttoptr i32 %v1_11750 to i32*
  %v3_11750 = load i32, i32* %v2_11750, align 4
  %v2_11754 = load i32, i32* @global_var_230e8.198, align 4
  store i32 %v2_11754, i32* %r2.global-to-local, align 4
  %v2_11758 = add i32 %v3_11750, %v4_11720
  store i32 %v2_11758, i32* %r3.global-to-local, align 4
  store i32 %v2_11758, i32* %v2_11750, align 4
  %v0_11760 = load i32, i32* %r2.global-to-local, align 4
  %v1_11760 = load i32, i32* @r6, align 4
  %v2_11760 = add i32 %v1_11760, 8
  %v3_11760 = inttoptr i32 %v2_11760 to i32*
  store i32 %v0_11760, i32* %v3_11760, align 4
  br label %dec_label_pc_11764

dec_label_pc_11764:                               ; preds = %dec_label_pc_11894, %dec_label_pc_1174c
  %v0_11764 = load i32, i32* @r6, align 4
  %v1_11764 = add i32 %v0_11764, 12
  %v2_11764 = inttoptr i32 %v1_11764 to i32*
  %v3_11764 = load i32, i32* %v2_11764, align 4
  store i32 %v3_11764, i32* %r0.global-to-local, align 4
  %v1_11768 = add i32 %v3_11764, -2
  store i32 %v1_11768, i32* %r3.global-to-local, align 4
  %v7_1176c = icmp eq i32 %v1_11768, 8
  store i1 %v7_1176c, i1* %cpsr_z.global-to-local, align 1
  %v5_11770 = and i32 %v1_11768, 1073741824
  %v6_11770 = icmp ne i32 %v5_11770, 0
  store i1 %v6_11770, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_11764, label %dec_label_pc_116e4thread-pre-split [
    i32 2, label %dec_label_pc_11f24
    i32 3, label %dec_label_pc_11de4
    i32 4, label %dec_label_pc_11e90
    i32 5, label %dec_label_pc_11d10
    i32 6, label %dec_label_pc_11a64
    i32 7, label %dec_label_pc_11990
    i32 8, label %dec_label_pc_11c3c
    i32 9, label %dec_label_pc_118bc
    i32 10, label %dec_label_pc_1181c
  ]

dec_label_pc_1179c:                               ; preds = %dec_label_pc_121d0
  %v0_1179c = call i32 @function_13994()
  store i32 %v0_1179c, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_117a4 = inttoptr i32 %v0_1179c to i32*
  store i32 104, i32* %v2_117a4, align 4
  br label %dec_label_pc_117a8

dec_label_pc_117a8:                               ; preds = %dec_label_pc_121d4, %dec_label_pc_1179c
  %v0_117a8 = call i32 @function_13994()
  store i32 %v0_117a8, i32* %r0.global-to-local, align 4
  %v1_117ac = inttoptr i32 %v0_117a8 to i32*
  %v2_117ac = load i32, i32* %v1_117ac, align 4
  store i32 %v2_117ac, i32* %r3.global-to-local, align 4
  %v2_117b0 = icmp ugt i32 %v2_117ac, 10
  store i1 %v2_117b0, i1* %cpsr_c.global-to-local, align 1
  %v7_117b0 = icmp eq i32 %v2_117ac, 11
  store i1 %v7_117b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117b0, label %dec_label_pc_11804, label %dec_label_pc_117b8

dec_label_pc_117b8:                               ; preds = %dec_label_pc_117a8
  %v0_117b8 = call i32 @function_13994()
  store i32 %v0_117b8, i32* %r0.global-to-local, align 4
  %v1_117bc = inttoptr i32 %v0_117b8 to i32*
  %v2_117bc = load i32, i32* %v1_117bc, align 4
  store i32 %v2_117bc, i32* %r3.global-to-local, align 4
  %v2_117c0 = icmp ugt i32 %v2_117bc, 10
  store i1 %v2_117c0, i1* %cpsr_c.global-to-local, align 1
  %v7_117c0 = icmp eq i32 %v2_117bc, 11
  store i1 %v7_117c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117c0, label %dec_label_pc_11804, label %dec_label_pc_117c8

dec_label_pc_117c8:                               ; preds = %dec_label_pc_117b8
  %v0_117c8 = load i32, i32* @r6, align 4
  %v1_117c8 = add i32 %v0_117c8, 4
  %v2_117c8 = inttoptr i32 %v1_117c8 to i32*
  %v3_117c8 = load i32, i32* %v2_117c8, align 4
  store i32 %v3_117c8, i32* @r0, align 4
  %v1_117cc = call i32 @function_165e8(i32 %v3_117c8)
  store i32 %v1_117cc, i32* %r0.global-to-local, align 4
  %v0_117d0 = load i32, i32* @r6, align 4
  %v1_117d0 = add i32 %v0_117d0, 284
  %v2_117d0 = inttoptr i32 %v1_117d0 to i8*
  %v3_117d0 = load i8, i8* %v2_117d0, align 1
  %v4_117d0 = zext i8 %v3_117d0 to i32
  %v1_117d4 = add nuw nsw i32 %v4_117d0, 1
  %v1_117d8 = urem i32 %v1_117d4, 256
  store i32 %v1_117d8, i32* %r3.global-to-local, align 4
  %v2_117dc = icmp ugt i32 %v1_117d8, 8
  store i1 %v2_117dc, i1* %cpsr_c.global-to-local, align 1
  %v7_117dc = icmp eq i32 %v1_117d8, 9
  store i1 %v7_117dc, i1* %cpsr_z.global-to-local, align 1
  %v1_117e0 = trunc i32 %v1_117d4 to i8
  store i8 %v1_117e0, i8* %v2_117d0, align 1
  %v0_117e4 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_117e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_117e4 = xor i1 %v1_117e4, true
  %v3_117e4 = and i1 %v0_117e4, %v2_117e4
  br i1 %v3_117e4, label %bb343, label %.thread255

.thread255:                                       ; preds = %dec_label_pc_117c8
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_117f0251256 = load i32, i32* @r6, align 4
  %v2_117f0252257 = add i32 %v1_117f0251256, 4
  %v3_117f0253258 = inttoptr i32 %v2_117f0252257 to i32*
  store i32 -1, i32* %v3_117f0253258, align 4
  br label %bb344

bb343:                                            ; preds = %dec_label_pc_117c8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_117f0247 = load i32, i32* @r6, align 4
  %v2_117f0248 = add i32 %v1_117f0247, 4
  %v3_117f0249 = inttoptr i32 %v2_117f0248 to i32*
  store i32 -1, i32* %v3_117f0249, align 4
  %v4_117f4 = load i32, i32* %r0.global-to-local, align 4
  %v5_117f4 = load i32, i32* @r6, align 4
  %v6_117f4 = add i32 %v5_117f4, 12
  %v7_117f4 = inttoptr i32 %v6_117f4 to i32*
  store i32 %v4_117f4, i32* %v7_117f4, align 4
  %v4_117f8 = load i32, i32* %r3.global-to-local, align 4
  %v5_117f8 = trunc i32 %v4_117f8 to i8
  %v6_117f8 = load i32, i32* @r6, align 4
  %v7_117f8 = add i32 %v6_117f8, 284
  %v8_117f8 = inttoptr i32 %v7_117f8 to i8*
  store i8 %v5_117f8, i8* %v8_117f8, align 1
  %v0_117fc.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_117fc.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb344

bb344:                                            ; preds = %.thread255, %bb343
  %v1_11800 = phi i1 [ %v1_117fc.pre, %bb343 ], [ %v0_117e4, %.thread255 ]
  %v0_11800 = phi i1 [ %v0_117fc.pre, %bb343 ], [ %v1_117e4, %.thread255 ]
  %v2_117fc = xor i1 %v1_11800, true
  %v3_117fc = or i1 %v0_11800, %v2_117fc
  br i1 %v3_117fc, label %bb345, label %bb346

bb345:                                            ; preds = %bb344
  %v4_117fc = load i32, i32* @r6, align 4
  store i32 %v4_117fc, i32* %r0.global-to-local, align 4
  br label %bb346

bb346:                                            ; preds = %bb344, %bb345
  store i32 71684, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_117fc, i32 ptrtoint (i32* @global_var_10888.327 to i32))
  br label %dec_label_pc_11804

dec_label_pc_11804:                               ; preds = %dec_label_pc_116e0.loopexit, %dec_label_pc_116e4thread-pre-split, %dec_label_pc_116e0.preheader, %dec_label_pc_117b8, %dec_label_pc_117a8, %dec_label_pc_116c8, %dec_label_pc_11680, %dec_label_pc_12300, %bb346
  %v3_11804 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_11804, i32* %r3.global-to-local, align 4
  %v1_11808 = add i32 %v3_11804, 1
  store i32 %v1_11808, i32* @r4, align 4
  %v2_1180c = icmp ugt i32 %v1_11808, 254
  store i1 %v2_1180c, i1* %cpsr_c.global-to-local, align 1
  %v7_1180c = icmp eq i32 %v1_11808, 255
  store i1 %v7_1180c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_11808, i32* %stack_var_-52, align 4
  %v7_11814 = icmp slt i32 %v1_11808, 256
  br i1 %v7_11814, label %dec_label_pc_11680, label %dec_label_pc_11094

dec_label_pc_1181c:                               ; preds = %dec_label_pc_11764
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11820 = call i32 @function_1255c(i32 26)
  store i32 %v2_11d9c, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_11830 = call i32 @function_12498(i32 26, i32* nonnull %stack_var_-60)
  %v3_11834 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11830, i32* %r2.global-to-local, align 4
  %v1_1183c = add i32 %v3_11834, -1
  store i32 %v1_1183c, i32* %r3.global-to-local, align 4
  %v0_11840 = load i32, i32* @fp, align 4
  store i32 %v0_11840, i32* %r0.global-to-local, align 4
  %v0_11844 = load i32, i32* @r6, align 4
  %v1_11844 = add i32 %v0_11844, 24
  %v2_11844 = inttoptr i32 %v1_11844 to i32*
  %v3_11844 = load i32, i32* %v2_11844, align 4
  store i32 %v3_11844, i32* %r1.global-to-local, align 4
  %v4_11848 = call i32 @function_12ea4(i32 %v0_11840, i32 %v3_11844, i32 %v3_11830, i32 %v1_1183c)
  %v2_1184c = icmp eq i32 %v4_11848, -1
  store i1 %v2_1184c, i1* %cpsr_c.global-to-local, align 1
  %v7_1184c = icmp eq i32 %v4_11848, -1
  store i1 %v7_1184c, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_120e4 = call i32 @function_124bc(i32 26)
  br i1 %v7_1184c, label %dec_label_pc_120e0, label %dec_label_pc_11854

dec_label_pc_11854:                               ; preds = %dec_label_pc_1181c
  store i32 %v1_120e4, i32* %r0.global-to-local, align 4
  %v0_1185c = load i32, i32* @r6, align 4
  %v1_1185c = add i32 %v0_1185c, 4
  %v2_1185c = inttoptr i32 %v1_1185c to i32*
  %v3_1185c = load i32, i32* %v2_1185c, align 4
  store i32 %v3_1185c, i32* @r0, align 4
  %v1_11860 = call i32 @function_165e8(i32 %v3_1185c)
  store i32 %v1_11860, i32* %r0.global-to-local, align 4
  %v0_11864 = load i32, i32* @r6, align 4
  %v1_11864 = add i32 %v0_11864, 284
  %v2_11864 = inttoptr i32 %v1_11864 to i8*
  %v3_11864 = load i8, i8* %v2_11864, align 1
  %v4_11864 = zext i8 %v3_11864 to i32
  %v1_11868 = add nuw nsw i32 %v4_11864, 1
  %v1_1186c = urem i32 %v1_11868, 256
  store i32 %v1_1186c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_11874 = icmp ugt i32 %v1_1186c, 9
  store i1 %v2_11874, i1* %cpsr_c.global-to-local, align 1
  %v7_11874 = icmp eq i32 %v1_1186c, 10
  store i1 %v7_11874, i1* %cpsr_z.global-to-local, align 1
  %v2_11878 = add i32 %v0_11864, 4
  %v3_11878 = inttoptr i32 %v2_11878 to i32*
  store i32 -1, i32* %v3_11878, align 4
  %v0_1187c = load i32, i32* %r3.global-to-local, align 4
  %v1_1187c = trunc i32 %v0_1187c to i8
  %v2_1187c = load i32, i32* @r6, align 4
  %v3_1187c = add i32 %v2_1187c, 284
  %v4_1187c = inttoptr i32 %v3_1187c to i8*
  store i8 %v1_1187c, i8* %v4_1187c, align 1
  %v0_11880 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11880, label %dec_label_pc_11884, label %dec_label_pc_12228

dec_label_pc_11884:                               ; preds = %dec_label_pc_11854
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_11888 = load i32, i32* @r6, align 4
  %v2_11888 = add i32 %v1_11888, 12
  %v3_11888 = inttoptr i32 %v2_11888 to i32*
  store i32 0, i32* %v3_11888, align 4
  %v0_1188c = load i32, i32* %r3.global-to-local, align 4
  %v1_1188c = trunc i32 %v0_1188c to i8
  %v2_1188c = load i32, i32* @r6, align 4
  %v3_1188c = add i32 %v2_1188c, 284
  %v4_1188c = inttoptr i32 %v3_1188c to i8*
  store i8 %v1_1188c, i8* %v4_1188c, align 1
  br label %dec_label_pc_11890

dec_label_pc_11890:                               ; preds = %dec_label_pc_12228, %dec_label_pc_11884
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_11894

dec_label_pc_11894:                               ; preds = %dec_label_pc_11e84, %dec_label_pc_11d8c, %dec_label_pc_11cb8, %dec_label_pc_11be4, %dec_label_pc_11a0c, %dec_label_pc_11938, %dec_label_pc_11890
  %v0_11894 = load i32, i32* @r6, align 4
  %v1_11894 = add i32 %v0_11894, 24
  %v2_11894 = inttoptr i32 %v1_11894 to i32*
  %v3_11894 = load i32, i32* %v2_11894, align 4
  %v0_11898 = load i32, i32* @r7, align 4
  %v2_11898 = sub i32 %v0_11898, %v3_11894
  %v3_11898 = icmp uge i32 %v0_11898, %v3_11894
  store i1 %v3_11898, i1* %cpsr_c.global-to-local, align 1
  %v4_11898 = xor i32 %v0_11898, %v3_11894
  %v5_11898 = xor i32 %v2_11898, %v0_11898
  %v6_11898 = and i32 %v5_11898, %v4_11898
  %v7_11898 = icmp slt i32 %v6_11898, 0
  %v8_11898 = icmp slt i32 %v2_11898, 0
  %v9_11898 = icmp eq i32 %v0_11898, %v3_11894
  store i1 %v9_11898, i1* %cpsr_z.global-to-local, align 1
  %v2_1189c = xor i1 %v8_11898, %v7_11898
  %v0_11898.v3_11894 = select i1 %v2_1189c, i32 %v0_11898, i32 %v3_11894
  store i32 %v0_11898.v3_11894, i32* %r1.global-to-local, align 4
  %v2_118a4 = sub i32 %v3_11894, %v0_11898.v3_11894
  store i32 %v2_118a4, i32* %r2.global-to-local, align 4
  store i32 %v2_118a4, i32* %v2_11894, align 4
  %v0_118ac = load i32, i32* @fp, align 4
  %v1_118ac = load i32, i32* %r1.global-to-local, align 4
  %v2_118ac = add i32 %v1_118ac, %v0_118ac
  store i32 %v2_118ac, i32* %r1.global-to-local, align 4
  store i32 %v0_118ac, i32* %r0.global-to-local, align 4
  %v3_118b4 = inttoptr i32 %v0_118ac to i8*
  %v4_118b4 = call i32 @function_15ec4(i8* %v3_118b4, i32 %v2_118ac, i32 %v2_118a4)
  store i32 %v4_118b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11764

dec_label_pc_118bc:                               ; preds = %dec_label_pc_11764
  %v1_118bc = add i32 %v0_11764, 24
  %v2_118bc = inttoptr i32 %v1_118bc to i32*
  %v3_118bc = load i32, i32* %v2_118bc, align 4
  store i32 %v3_118bc, i32* %r2.global-to-local, align 4
  %v1_118c0 = add i32 %v3_118bc, -1
  store i32 %v1_118c0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_118c4 = icmp eq i32 %v1_118c0, 0
  store i1 %v2_118c4, i1* %cpsr_z.global-to-local, align 1
  %tmp349 = icmp slt i32 %v1_118c0, 1
  br i1 %tmp349, label %dec_label_pc_116e4thread-pre-split.thread, label %dec_label_pc_118cc

dec_label_pc_118cc:                               ; preds = %dec_label_pc_118bc
  %v2_118cc = add i32 %v1_118c0, %v0_11764
  store i32 %v2_118cc, i32* %r3.global-to-local, align 4
  %v1_118d0 = add i32 %v2_118cc, 28
  %v2_118d0 = inttoptr i32 %v1_118d0 to i8*
  %v3_118d0 = load i8, i8* %v2_118d0, align 1
  %v4_118d0 = zext i8 %v3_118d0 to i32
  store i32 %v4_118d0, i32* %r3.global-to-local, align 4
  %v2_118d4 = icmp ugt i8 %v3_118d0, 61
  store i1 %v2_118d4, i1* %cpsr_c.global-to-local, align 1
  %v7_118d4 = icmp eq i8 %v3_118d0, 62
  store i1 %v7_118d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118d4, label %dec_label_pc_11938, label %bb350

bb350:                                            ; preds = %dec_label_pc_118cc
  %v3_118d8 = icmp ugt i8 %v3_118d0, 57
  store i1 %v3_118d8, i1* %cpsr_c.global-to-local, align 1
  %v8_118d8 = icmp eq i8 %v3_118d0, 58
  store i1 %v8_118d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_118d8, label %dec_label_pc_11938, label %dec_label_pc_118e0

dec_label_pc_118e0:                               ; preds = %bb350
  %v2_118e0 = icmp ugt i8 %v3_118d0, 35
  store i1 %v2_118e0, i1* %cpsr_c.global-to-local, align 1
  %v7_118e0 = icmp eq i8 %v3_118d0, 36
  store i1 %v7_118e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118e0, label %dec_label_pc_11938, label %dec_label_pc_118e8

dec_label_pc_118e8:                               ; preds = %dec_label_pc_118e0
  %v2_118e8 = icmp ugt i8 %v3_118d0, 34
  store i1 %v2_118e8, i1* %cpsr_c.global-to-local, align 1
  %v7_118e8 = icmp eq i8 %v3_118d0, 35
  store i1 %v7_118e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118e8, label %dec_label_pc_11938, label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118e8
  %v2_118f0 = icmp ugt i8 %v3_118d0, 36
  store i1 %v2_118f0, i1* %cpsr_c.global-to-local, align 1
  %v7_118f0 = icmp eq i8 %v3_118d0, 37
  store i1 %v7_118f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118f0, label %dec_label_pc_11938, label %dec_label_pc_11920.preheader

dec_label_pc_11920.preheader:                     ; preds = %dec_label_pc_118f0
  %v3_118f4 = add i32 %v0_11764, 28
  %v2_118f8 = add i32 %v3_118f4, %v3_118bc
  store i32 %v2_118f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11920

dec_label_pc_11904:                               ; preds = %bb351
  %v2_11904 = icmp ugt i8 %v3_11928, 35
  store i1 %v2_11904, i1* %cpsr_c.global-to-local, align 1
  %v7_11904 = icmp eq i8 %v3_11928, 36
  store i1 %v7_11904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11904, label %dec_label_pc_11938, label %dec_label_pc_1190c

dec_label_pc_1190c:                               ; preds = %dec_label_pc_11904
  %v2_1190c = icmp ugt i8 %v3_11928, 34
  store i1 %v2_1190c, i1* %cpsr_c.global-to-local, align 1
  %v7_1190c = icmp eq i8 %v3_11928, 35
  store i1 %v7_1190c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1190c, label %dec_label_pc_11938, label %dec_label_pc_11914

dec_label_pc_11914:                               ; preds = %dec_label_pc_1190c
  %v2_11914 = icmp ugt i8 %v3_11928, 36
  store i1 %v2_11914, i1* %cpsr_c.global-to-local, align 1
  %v7_11914 = icmp eq i8 %v3_11928, 37
  store i1 %v7_11914, i1* %cpsr_z.global-to-local, align 1
  %v1_11918 = add i32 %v0_11918, -1
  store i32 %v1_11918, i32* %r3.global-to-local, align 4
  br i1 %v7_11914, label %dec_label_pc_11938, label %dec_label_pc_11920

dec_label_pc_11920:                               ; preds = %dec_label_pc_11920.preheader, %dec_label_pc_11914
  %v0_11918 = phi i32 [ %v2_118f8, %dec_label_pc_11920.preheader ], [ %v1_11918, %dec_label_pc_11914 ]
  %v0_11920 = phi i32 [ %v1_118c0, %dec_label_pc_11920.preheader ], [ %v1_11920, %dec_label_pc_11914 ]
  %v1_11920 = add i32 %v0_11920, -1
  store i32 %v1_11920, i32* %r1.global-to-local, align 4
  %v2_11920 = icmp ne i32 %v0_11920, 0
  store i1 %v2_11920, i1* %cpsr_c.global-to-local, align 1
  %v7_11920 = icmp eq i32 %v0_11920, 1
  store i1 %v7_11920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11920, label %dec_label_pc_116e4thread-pre-split.thread477, label %dec_label_pc_11928

dec_label_pc_11928:                               ; preds = %dec_label_pc_11920
  %v1_11928 = add i32 %v0_11918, -2
  %v2_11928 = inttoptr i32 %v1_11928 to i8*
  %v3_11928 = load i8, i8* %v2_11928, align 1
  %v4_11928 = zext i8 %v3_11928 to i32
  store i32 %v4_11928, i32* %r2.global-to-local, align 4
  %v2_1192c = icmp ugt i8 %v3_11928, 61
  store i1 %v2_1192c, i1* %cpsr_c.global-to-local, align 1
  %v7_1192c = icmp eq i8 %v3_11928, 62
  store i1 %v7_1192c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1192c, label %dec_label_pc_11938, label %bb351

bb351:                                            ; preds = %dec_label_pc_11928
  %v3_11930 = icmp ugt i8 %v3_11928, 57
  store i1 %v3_11930, i1* %cpsr_c.global-to-local, align 1
  %v8_11930 = icmp eq i8 %v3_11928, 58
  store i1 %v8_11930, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11930, label %dec_label_pc_11938, label %dec_label_pc_11904

dec_label_pc_11938:                               ; preds = %dec_label_pc_11928, %bb351, %dec_label_pc_11914, %dec_label_pc_1190c, %dec_label_pc_11904, %dec_label_pc_118f0, %dec_label_pc_118cc, %dec_label_pc_118e8, %dec_label_pc_118e0, %bb350
  %v0_1193c = phi i32 [ %v1_118c0, %dec_label_pc_118f0 ], [ %v1_118c0, %dec_label_pc_118cc ], [ %v1_118c0, %dec_label_pc_118e8 ], [ %v1_118c0, %dec_label_pc_118e0 ], [ %v1_118c0, %bb350 ], [ %v1_11920, %dec_label_pc_11904 ], [ %v1_11920, %dec_label_pc_1190c ], [ %v1_11920, %dec_label_pc_11914 ], [ %v1_11920, %bb351 ], [ %v1_11920, %dec_label_pc_11928 ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_1193c = add i32 %v0_1193c, 1
  store i32 %v1_1193c, i32* @r7, align 4
  %v1_11940 = call i32 @function_1255c(i32 24)
  store i32 %v2_11d9c, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_11950 = call i32 @function_12498(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_11950, i32* %r0.global-to-local, align 4
  %v3_11954 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11954, i32* @r2, align 4
  store i32 %v3_11950, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11960 = load i32, i32* @r6, align 4
  %v1_11960 = add i32 %v0_11960, 4
  %v2_11960 = inttoptr i32 %v1_11960 to i32*
  %v3_11960 = load i32, i32* %v2_11960, align 4
  store i32 %v3_11960, i32* @r0, align 4
  %v4_11964 = call i32 @function_1553c(i32 %v3_11960, i32 %v3_11950, i32 %v3_11954, i32 16384)
  store i32 %v4_11964, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11974 = load i32, i32* @r6, align 4
  %v1_11974 = add i32 %v0_11974, 4
  %v2_11974 = inttoptr i32 %v1_11974 to i32*
  %v3_11974 = load i32, i32* %v2_11974, align 4
  store i32 %v3_11974, i32* @r0, align 4
  %v4_11978 = call i32 @function_1553c(i32 %v3_11974, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_11980 = call i32 @function_124bc(i32 24)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_11988 = load i32, i32* @r6, align 4
  %v2_11988 = add i32 %v1_11988, 12
  %v3_11988 = inttoptr i32 %v2_11988 to i32*
  store i32 10, i32* %v3_11988, align 4
  br label %dec_label_pc_11894

dec_label_pc_11990:                               ; preds = %dec_label_pc_11764
  %v1_11990 = add i32 %v0_11764, 24
  %v2_11990 = inttoptr i32 %v1_11990 to i32*
  %v3_11990 = load i32, i32* %v2_11990, align 4
  store i32 %v3_11990, i32* %r2.global-to-local, align 4
  %v1_11994 = add i32 %v3_11990, -1
  store i32 %v1_11994, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11998 = icmp eq i32 %v1_11994, 0
  store i1 %v2_11998, i1* %cpsr_z.global-to-local, align 1
  %tmp352 = icmp slt i32 %v1_11994, 1
  br i1 %tmp352, label %dec_label_pc_116e4thread-pre-split.thread, label %dec_label_pc_119a0

dec_label_pc_119a0:                               ; preds = %dec_label_pc_11990
  %v2_119a0 = add i32 %v1_11994, %v0_11764
  store i32 %v2_119a0, i32* %r3.global-to-local, align 4
  %v1_119a4 = add i32 %v2_119a0, 28
  %v2_119a4 = inttoptr i32 %v1_119a4 to i8*
  %v3_119a4 = load i8, i8* %v2_119a4, align 1
  %v4_119a4 = zext i8 %v3_119a4 to i32
  store i32 %v4_119a4, i32* %r3.global-to-local, align 4
  %v2_119a8 = icmp ugt i8 %v3_119a4, 61
  store i1 %v2_119a8, i1* %cpsr_c.global-to-local, align 1
  %v7_119a8 = icmp eq i8 %v3_119a4, 62
  store i1 %v7_119a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119a8, label %dec_label_pc_11a0c, label %bb353

bb353:                                            ; preds = %dec_label_pc_119a0
  %v3_119ac = icmp ugt i8 %v3_119a4, 57
  store i1 %v3_119ac, i1* %cpsr_c.global-to-local, align 1
  %v8_119ac = icmp eq i8 %v3_119a4, 58
  store i1 %v8_119ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_119ac, label %dec_label_pc_11a0c, label %dec_label_pc_119b4

dec_label_pc_119b4:                               ; preds = %bb353
  %v2_119b4 = icmp ugt i8 %v3_119a4, 35
  store i1 %v2_119b4, i1* %cpsr_c.global-to-local, align 1
  %v7_119b4 = icmp eq i8 %v3_119a4, 36
  store i1 %v7_119b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119b4, label %dec_label_pc_11a0c, label %dec_label_pc_119bc

dec_label_pc_119bc:                               ; preds = %dec_label_pc_119b4
  %v2_119bc = icmp ugt i8 %v3_119a4, 34
  store i1 %v2_119bc, i1* %cpsr_c.global-to-local, align 1
  %v7_119bc = icmp eq i8 %v3_119a4, 35
  store i1 %v7_119bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119bc, label %dec_label_pc_11a0c, label %dec_label_pc_119c4

dec_label_pc_119c4:                               ; preds = %dec_label_pc_119bc
  %v2_119c4 = icmp ugt i8 %v3_119a4, 36
  store i1 %v2_119c4, i1* %cpsr_c.global-to-local, align 1
  %v7_119c4 = icmp eq i8 %v3_119a4, 37
  store i1 %v7_119c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119c4, label %dec_label_pc_11a0c, label %dec_label_pc_119f4.preheader

dec_label_pc_119f4.preheader:                     ; preds = %dec_label_pc_119c4
  %v3_119c8 = add i32 %v0_11764, 28
  %v2_119cc = add i32 %v3_119c8, %v3_11990
  store i32 %v2_119cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_119f4

dec_label_pc_119d8:                               ; preds = %bb354
  %v2_119d8 = icmp ugt i8 %v3_119fc, 35
  store i1 %v2_119d8, i1* %cpsr_c.global-to-local, align 1
  %v7_119d8 = icmp eq i8 %v3_119fc, 36
  store i1 %v7_119d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119d8, label %dec_label_pc_11a0c, label %dec_label_pc_119e0

dec_label_pc_119e0:                               ; preds = %dec_label_pc_119d8
  %v2_119e0 = icmp ugt i8 %v3_119fc, 34
  store i1 %v2_119e0, i1* %cpsr_c.global-to-local, align 1
  %v7_119e0 = icmp eq i8 %v3_119fc, 35
  store i1 %v7_119e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119e0, label %dec_label_pc_11a0c, label %dec_label_pc_119e8

dec_label_pc_119e8:                               ; preds = %dec_label_pc_119e0
  %v2_119e8 = icmp ugt i8 %v3_119fc, 36
  store i1 %v2_119e8, i1* %cpsr_c.global-to-local, align 1
  %v7_119e8 = icmp eq i8 %v3_119fc, 37
  store i1 %v7_119e8, i1* %cpsr_z.global-to-local, align 1
  %v1_119ec = add i32 %v0_119ec, -1
  store i32 %v1_119ec, i32* %r3.global-to-local, align 4
  br i1 %v7_119e8, label %dec_label_pc_11a0c, label %dec_label_pc_119f4

dec_label_pc_119f4:                               ; preds = %dec_label_pc_119f4.preheader, %dec_label_pc_119e8
  %v0_119ec = phi i32 [ %v2_119cc, %dec_label_pc_119f4.preheader ], [ %v1_119ec, %dec_label_pc_119e8 ]
  %v0_119f4 = phi i32 [ %v1_11994, %dec_label_pc_119f4.preheader ], [ %v1_119f4, %dec_label_pc_119e8 ]
  %v1_119f4 = add i32 %v0_119f4, -1
  store i32 %v1_119f4, i32* %r1.global-to-local, align 4
  %v2_119f4 = icmp ne i32 %v0_119f4, 0
  store i1 %v2_119f4, i1* %cpsr_c.global-to-local, align 1
  %v7_119f4 = icmp eq i32 %v0_119f4, 1
  store i1 %v7_119f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119f4, label %dec_label_pc_116e4thread-pre-split.thread477, label %dec_label_pc_119fc

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119f4
  %v1_119fc = add i32 %v0_119ec, -2
  %v2_119fc = inttoptr i32 %v1_119fc to i8*
  %v3_119fc = load i8, i8* %v2_119fc, align 1
  %v4_119fc = zext i8 %v3_119fc to i32
  store i32 %v4_119fc, i32* %r2.global-to-local, align 4
  %v2_11a00 = icmp ugt i8 %v3_119fc, 61
  store i1 %v2_11a00, i1* %cpsr_c.global-to-local, align 1
  %v7_11a00 = icmp eq i8 %v3_119fc, 62
  store i1 %v7_11a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a00, label %dec_label_pc_11a0c, label %bb354

bb354:                                            ; preds = %dec_label_pc_119fc
  %v3_11a04 = icmp ugt i8 %v3_119fc, 57
  store i1 %v3_11a04, i1* %cpsr_c.global-to-local, align 1
  %v8_11a04 = icmp eq i8 %v3_119fc, 58
  store i1 %v8_11a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11a04, label %dec_label_pc_11a0c, label %dec_label_pc_119d8

dec_label_pc_11a0c:                               ; preds = %dec_label_pc_119fc, %bb354, %dec_label_pc_119e8, %dec_label_pc_119e0, %dec_label_pc_119d8, %dec_label_pc_119c4, %dec_label_pc_119a0, %dec_label_pc_119bc, %dec_label_pc_119b4, %bb353
  %v0_11a10 = phi i32 [ %v1_11994, %dec_label_pc_119c4 ], [ %v1_11994, %dec_label_pc_119a0 ], [ %v1_11994, %dec_label_pc_119bc ], [ %v1_11994, %dec_label_pc_119b4 ], [ %v1_11994, %bb353 ], [ %v1_119f4, %dec_label_pc_119d8 ], [ %v1_119f4, %dec_label_pc_119e0 ], [ %v1_119f4, %dec_label_pc_119e8 ], [ %v1_119f4, %bb354 ], [ %v1_119f4, %dec_label_pc_119fc ]
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_11a10 = add i32 %v0_11a10, 1
  store i32 %v1_11a10, i32* @r7, align 4
  %v1_11a14 = call i32 @function_1255c(i32 20)
  store i32 %v2_11d9c, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_11a24 = call i32 @function_12498(i32 20, i32* nonnull %stack_var_-60)
  store i32 %v3_11a24, i32* %r0.global-to-local, align 4
  %v3_11a28 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11a28, i32* @r2, align 4
  store i32 %v3_11a24, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11a34 = load i32, i32* @r6, align 4
  %v1_11a34 = add i32 %v0_11a34, 4
  %v2_11a34 = inttoptr i32 %v1_11a34 to i32*
  %v3_11a34 = load i32, i32* %v2_11a34, align 4
  store i32 %v3_11a34, i32* @r0, align 4
  %v4_11a38 = call i32 @function_1553c(i32 %v3_11a34, i32 %v3_11a24, i32 %v3_11a28, i32 16384)
  store i32 %v4_11a38, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11a48 = load i32, i32* @r6, align 4
  %v1_11a48 = add i32 %v0_11a48, 4
  %v2_11a48 = inttoptr i32 %v1_11a48 to i32*
  %v3_11a48 = load i32, i32* %v2_11a48, align 4
  store i32 %v3_11a48, i32* @r0, align 4
  %v4_11a4c = call i32 @function_1553c(i32 %v3_11a48, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_11a54 = call i32 @function_124bc(i32 20)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_11a5c = load i32, i32* @r6, align 4
  %v2_11a5c = add i32 %v1_11a5c, 12
  %v3_11a5c = inttoptr i32 %v2_11a5c to i32*
  store i32 8, i32* %v3_11a5c, align 4
  br label %dec_label_pc_11894

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11764
  %v1_11a64 = add i32 %v0_11764, 24
  %v2_11a64 = inttoptr i32 %v1_11a64 to i32*
  %v3_11a64 = load i32, i32* %v2_11a64, align 4
  store i32 %v3_11a64, i32* %r2.global-to-local, align 4
  %v1_11a68 = add i32 %v3_11a64, -1
  store i32 %v1_11a68, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11a6c = icmp eq i32 %v1_11a68, 0
  store i1 %v2_11a6c, i1* %cpsr_z.global-to-local, align 1
  %tmp355 = icmp slt i32 %v1_11a68, 1
  br i1 %tmp355, label %dec_label_pc_116e4thread-pre-split.thread, label %dec_label_pc_11a74

dec_label_pc_11a74:                               ; preds = %dec_label_pc_11a64
  %v2_11a74 = add i32 %v1_11a68, %v0_11764
  store i32 %v2_11a74, i32* %r3.global-to-local, align 4
  %v1_11a78 = add i32 %v2_11a74, 28
  %v2_11a78 = inttoptr i32 %v1_11a78 to i8*
  %v3_11a78 = load i8, i8* %v2_11a78, align 1
  %v4_11a78 = zext i8 %v3_11a78 to i32
  store i32 %v4_11a78, i32* %r3.global-to-local, align 4
  %v2_11a7c = icmp ugt i8 %v3_11a78, 61
  store i1 %v2_11a7c, i1* %cpsr_c.global-to-local, align 1
  %v7_11a7c = icmp eq i8 %v3_11a78, 62
  store i1 %v7_11a7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a7c, label %dec_label_pc_11be4, label %bb356

bb356:                                            ; preds = %dec_label_pc_11a74
  %v3_11a80 = icmp ugt i8 %v3_11a78, 57
  store i1 %v3_11a80, i1* %cpsr_c.global-to-local, align 1
  %v8_11a80 = icmp eq i8 %v3_11a78, 58
  store i1 %v8_11a80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11a80, label %dec_label_pc_11be4, label %dec_label_pc_11a88

dec_label_pc_11a88:                               ; preds = %bb356
  %v2_11a88 = icmp ugt i8 %v3_11a78, 35
  store i1 %v2_11a88, i1* %cpsr_c.global-to-local, align 1
  %v7_11a88 = icmp eq i8 %v3_11a78, 36
  store i1 %v7_11a88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a88, label %dec_label_pc_11be4, label %dec_label_pc_11a90

dec_label_pc_11a90:                               ; preds = %dec_label_pc_11a88
  %v2_11a90 = icmp ugt i8 %v3_11a78, 34
  store i1 %v2_11a90, i1* %cpsr_c.global-to-local, align 1
  %v7_11a90 = icmp eq i8 %v3_11a78, 35
  store i1 %v7_11a90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a90, label %dec_label_pc_11be4, label %dec_label_pc_11a98

dec_label_pc_11a98:                               ; preds = %dec_label_pc_11a90
  %v2_11a98 = icmp ugt i8 %v3_11a78, 36
  store i1 %v2_11a98, i1* %cpsr_c.global-to-local, align 1
  %v7_11a98 = icmp eq i8 %v3_11a78, 37
  store i1 %v7_11a98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a98, label %dec_label_pc_11be4, label %dec_label_pc_11bcc.preheader

dec_label_pc_11bcc.preheader:                     ; preds = %dec_label_pc_11a98
  %v3_11a9c = add i32 %v0_11764, 28
  %v2_11aa0 = add i32 %v3_11a9c, %v3_11a64
  store i32 %v2_11aa0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11bcc

dec_label_pc_11bb0:                               ; preds = %bb357
  %v2_11bb0 = icmp ugt i8 %v3_11bd4, 35
  store i1 %v2_11bb0, i1* %cpsr_c.global-to-local, align 1
  %v7_11bb0 = icmp eq i8 %v3_11bd4, 36
  store i1 %v7_11bb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11bb0, label %dec_label_pc_11be4, label %dec_label_pc_11bb8

dec_label_pc_11bb8:                               ; preds = %dec_label_pc_11bb0
  %v2_11bb8 = icmp ugt i8 %v3_11bd4, 34
  store i1 %v2_11bb8, i1* %cpsr_c.global-to-local, align 1
  %v7_11bb8 = icmp eq i8 %v3_11bd4, 35
  store i1 %v7_11bb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11bb8, label %dec_label_pc_11be4, label %dec_label_pc_11bc0

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_11bb8
  %v2_11bc0 = icmp ugt i8 %v3_11bd4, 36
  store i1 %v2_11bc0, i1* %cpsr_c.global-to-local, align 1
  %v7_11bc0 = icmp eq i8 %v3_11bd4, 37
  store i1 %v7_11bc0, i1* %cpsr_z.global-to-local, align 1
  %v1_11bc4 = add i32 %v0_11bc4, -1
  store i32 %v1_11bc4, i32* %r3.global-to-local, align 4
  br i1 %v7_11bc0, label %dec_label_pc_11be4, label %dec_label_pc_11bcc

dec_label_pc_11bcc:                               ; preds = %dec_label_pc_11bcc.preheader, %dec_label_pc_11bc0
  %v0_11bc4 = phi i32 [ %v2_11aa0, %dec_label_pc_11bcc.preheader ], [ %v1_11bc4, %dec_label_pc_11bc0 ]
  %v0_11bcc = phi i32 [ %v1_11a68, %dec_label_pc_11bcc.preheader ], [ %v1_11bcc, %dec_label_pc_11bc0 ]
  %v1_11bcc = add i32 %v0_11bcc, -1
  store i32 %v1_11bcc, i32* %r1.global-to-local, align 4
  %v2_11bcc = icmp ne i32 %v0_11bcc, 0
  store i1 %v2_11bcc, i1* %cpsr_c.global-to-local, align 1
  %v7_11bcc = icmp eq i32 %v0_11bcc, 1
  store i1 %v7_11bcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11bcc, label %dec_label_pc_116e4thread-pre-split.thread477, label %dec_label_pc_11bd4

dec_label_pc_11bd4:                               ; preds = %dec_label_pc_11bcc
  %v1_11bd4 = add i32 %v0_11bc4, -2
  %v2_11bd4 = inttoptr i32 %v1_11bd4 to i8*
  %v3_11bd4 = load i8, i8* %v2_11bd4, align 1
  %v4_11bd4 = zext i8 %v3_11bd4 to i32
  store i32 %v4_11bd4, i32* %r2.global-to-local, align 4
  %v2_11bd8 = icmp ugt i8 %v3_11bd4, 61
  store i1 %v2_11bd8, i1* %cpsr_c.global-to-local, align 1
  %v7_11bd8 = icmp eq i8 %v3_11bd4, 62
  store i1 %v7_11bd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11bd8, label %dec_label_pc_11be4, label %bb357

bb357:                                            ; preds = %dec_label_pc_11bd4
  %v3_11bdc = icmp ugt i8 %v3_11bd4, 57
  store i1 %v3_11bdc, i1* %cpsr_c.global-to-local, align 1
  %v8_11bdc = icmp eq i8 %v3_11bd4, 58
  store i1 %v8_11bdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11bdc, label %dec_label_pc_11be4, label %dec_label_pc_11bb0

dec_label_pc_11be4:                               ; preds = %dec_label_pc_11bd4, %bb357, %dec_label_pc_11bc0, %dec_label_pc_11bb8, %dec_label_pc_11bb0, %dec_label_pc_11a98, %dec_label_pc_11a74, %dec_label_pc_11a90, %dec_label_pc_11a88, %bb356
  %v0_11be8 = phi i32 [ %v1_11a68, %dec_label_pc_11a98 ], [ %v1_11a68, %dec_label_pc_11a74 ], [ %v1_11a68, %dec_label_pc_11a90 ], [ %v1_11a68, %dec_label_pc_11a88 ], [ %v1_11a68, %bb356 ], [ %v1_11bcc, %dec_label_pc_11bb0 ], [ %v1_11bcc, %dec_label_pc_11bb8 ], [ %v1_11bcc, %dec_label_pc_11bc0 ], [ %v1_11bcc, %bb357 ], [ %v1_11bcc, %dec_label_pc_11bd4 ]
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11be8 = add i32 %v0_11be8, 1
  store i32 %v1_11be8, i32* @r7, align 4
  %v1_11bec = call i32 @function_1255c(i32 22)
  store i32 %v2_11d9c, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_11bfc = call i32 @function_12498(i32 22, i32* nonnull %stack_var_-60)
  store i32 %v3_11bfc, i32* %r0.global-to-local, align 4
  %v3_11c00 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11c00, i32* @r2, align 4
  store i32 %v3_11bfc, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11c0c = load i32, i32* @r6, align 4
  %v1_11c0c = add i32 %v0_11c0c, 4
  %v2_11c0c = inttoptr i32 %v1_11c0c to i32*
  %v3_11c0c = load i32, i32* %v2_11c0c, align 4
  store i32 %v3_11c0c, i32* @r0, align 4
  %v4_11c10 = call i32 @function_1553c(i32 %v3_11c0c, i32 %v3_11bfc, i32 %v3_11c00, i32 16384)
  store i32 %v4_11c10, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11c20 = load i32, i32* @r6, align 4
  %v1_11c20 = add i32 %v0_11c20, 4
  %v2_11c20 = inttoptr i32 %v1_11c20 to i32*
  %v3_11c20 = load i32, i32* %v2_11c20, align 4
  store i32 %v3_11c20, i32* @r0, align 4
  %v4_11c24 = call i32 @function_1553c(i32 %v3_11c20, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11c2c = call i32 @function_124bc(i32 22)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_11c34 = load i32, i32* @r6, align 4
  %v2_11c34 = add i32 %v1_11c34, 12
  %v3_11c34 = inttoptr i32 %v2_11c34 to i32*
  store i32 7, i32* %v3_11c34, align 4
  br label %dec_label_pc_11894

dec_label_pc_11c3c:                               ; preds = %dec_label_pc_11764
  %v1_11c3c = add i32 %v0_11764, 24
  %v2_11c3c = inttoptr i32 %v1_11c3c to i32*
  %v3_11c3c = load i32, i32* %v2_11c3c, align 4
  store i32 %v3_11c3c, i32* %r2.global-to-local, align 4
  %v1_11c40 = add i32 %v3_11c3c, -1
  store i32 %v1_11c40, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11c44 = icmp eq i32 %v1_11c40, 0
  store i1 %v2_11c44, i1* %cpsr_z.global-to-local, align 1
  %tmp358 = icmp slt i32 %v1_11c40, 1
  br i1 %tmp358, label %dec_label_pc_116e4thread-pre-split.thread, label %dec_label_pc_11c4c

dec_label_pc_11c4c:                               ; preds = %dec_label_pc_11c3c
  %v2_11c4c = add i32 %v1_11c40, %v0_11764
  store i32 %v2_11c4c, i32* %r3.global-to-local, align 4
  %v1_11c50 = add i32 %v2_11c4c, 28
  %v2_11c50 = inttoptr i32 %v1_11c50 to i8*
  %v3_11c50 = load i8, i8* %v2_11c50, align 1
  %v4_11c50 = zext i8 %v3_11c50 to i32
  store i32 %v4_11c50, i32* %r3.global-to-local, align 4
  %v2_11c54 = icmp ugt i8 %v3_11c50, 61
  store i1 %v2_11c54, i1* %cpsr_c.global-to-local, align 1
  %v7_11c54 = icmp eq i8 %v3_11c50, 62
  store i1 %v7_11c54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c54, label %dec_label_pc_11cb8, label %bb359

bb359:                                            ; preds = %dec_label_pc_11c4c
  %v3_11c58 = icmp ugt i8 %v3_11c50, 57
  store i1 %v3_11c58, i1* %cpsr_c.global-to-local, align 1
  %v8_11c58 = icmp eq i8 %v3_11c50, 58
  store i1 %v8_11c58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11c58, label %dec_label_pc_11cb8, label %dec_label_pc_11c60

dec_label_pc_11c60:                               ; preds = %bb359
  %v2_11c60 = icmp ugt i8 %v3_11c50, 35
  store i1 %v2_11c60, i1* %cpsr_c.global-to-local, align 1
  %v7_11c60 = icmp eq i8 %v3_11c50, 36
  store i1 %v7_11c60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c60, label %dec_label_pc_11cb8, label %dec_label_pc_11c68

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11c60
  %v2_11c68 = icmp ugt i8 %v3_11c50, 34
  store i1 %v2_11c68, i1* %cpsr_c.global-to-local, align 1
  %v7_11c68 = icmp eq i8 %v3_11c50, 35
  store i1 %v7_11c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c68, label %dec_label_pc_11cb8, label %dec_label_pc_11c70

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11c68
  %v2_11c70 = icmp ugt i8 %v3_11c50, 36
  store i1 %v2_11c70, i1* %cpsr_c.global-to-local, align 1
  %v7_11c70 = icmp eq i8 %v3_11c50, 37
  store i1 %v7_11c70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c70, label %dec_label_pc_11cb8, label %dec_label_pc_11ca0.preheader

dec_label_pc_11ca0.preheader:                     ; preds = %dec_label_pc_11c70
  %v3_11c74 = add i32 %v0_11764, 28
  %v2_11c78 = add i32 %v3_11c74, %v3_11c3c
  store i32 %v2_11c78, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11ca0

dec_label_pc_11c84:                               ; preds = %bb360
  %v2_11c84 = icmp ugt i8 %v3_11ca8, 35
  store i1 %v2_11c84, i1* %cpsr_c.global-to-local, align 1
  %v7_11c84 = icmp eq i8 %v3_11ca8, 36
  store i1 %v7_11c84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c84, label %dec_label_pc_11cb8, label %dec_label_pc_11c8c

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11c84
  %v2_11c8c = icmp ugt i8 %v3_11ca8, 34
  store i1 %v2_11c8c, i1* %cpsr_c.global-to-local, align 1
  %v7_11c8c = icmp eq i8 %v3_11ca8, 35
  store i1 %v7_11c8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c8c, label %dec_label_pc_11cb8, label %dec_label_pc_11c94

dec_label_pc_11c94:                               ; preds = %dec_label_pc_11c8c
  %v2_11c94 = icmp ugt i8 %v3_11ca8, 36
  store i1 %v2_11c94, i1* %cpsr_c.global-to-local, align 1
  %v7_11c94 = icmp eq i8 %v3_11ca8, 37
  store i1 %v7_11c94, i1* %cpsr_z.global-to-local, align 1
  %v1_11c98 = add i32 %v0_11c98, -1
  store i32 %v1_11c98, i32* %r3.global-to-local, align 4
  br i1 %v7_11c94, label %dec_label_pc_11cb8, label %dec_label_pc_11ca0

dec_label_pc_11ca0:                               ; preds = %dec_label_pc_11ca0.preheader, %dec_label_pc_11c94
  %v0_11c98 = phi i32 [ %v2_11c78, %dec_label_pc_11ca0.preheader ], [ %v1_11c98, %dec_label_pc_11c94 ]
  %v0_11ca0 = phi i32 [ %v1_11c40, %dec_label_pc_11ca0.preheader ], [ %v1_11ca0, %dec_label_pc_11c94 ]
  %v1_11ca0 = add i32 %v0_11ca0, -1
  store i32 %v1_11ca0, i32* %r1.global-to-local, align 4
  %v2_11ca0 = icmp ne i32 %v0_11ca0, 0
  store i1 %v2_11ca0, i1* %cpsr_c.global-to-local, align 1
  %v7_11ca0 = icmp eq i32 %v0_11ca0, 1
  store i1 %v7_11ca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ca0, label %dec_label_pc_116e4thread-pre-split.thread477, label %dec_label_pc_11ca8

dec_label_pc_11ca8:                               ; preds = %dec_label_pc_11ca0
  %v1_11ca8 = add i32 %v0_11c98, -2
  %v2_11ca8 = inttoptr i32 %v1_11ca8 to i8*
  %v3_11ca8 = load i8, i8* %v2_11ca8, align 1
  %v4_11ca8 = zext i8 %v3_11ca8 to i32
  store i32 %v4_11ca8, i32* %r2.global-to-local, align 4
  %v2_11cac = icmp ugt i8 %v3_11ca8, 61
  store i1 %v2_11cac, i1* %cpsr_c.global-to-local, align 1
  %v7_11cac = icmp eq i8 %v3_11ca8, 62
  store i1 %v7_11cac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11cac, label %dec_label_pc_11cb8, label %bb360

bb360:                                            ; preds = %dec_label_pc_11ca8
  %v3_11cb0 = icmp ugt i8 %v3_11ca8, 57
  store i1 %v3_11cb0, i1* %cpsr_c.global-to-local, align 1
  %v8_11cb0 = icmp eq i8 %v3_11ca8, 58
  store i1 %v8_11cb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11cb0, label %dec_label_pc_11cb8, label %dec_label_pc_11c84

dec_label_pc_11cb8:                               ; preds = %dec_label_pc_11ca8, %bb360, %dec_label_pc_11c94, %dec_label_pc_11c8c, %dec_label_pc_11c84, %dec_label_pc_11c70, %dec_label_pc_11c4c, %dec_label_pc_11c68, %dec_label_pc_11c60, %bb359
  %v0_11cbc = phi i32 [ %v1_11c40, %dec_label_pc_11c70 ], [ %v1_11c40, %dec_label_pc_11c4c ], [ %v1_11c40, %dec_label_pc_11c68 ], [ %v1_11c40, %dec_label_pc_11c60 ], [ %v1_11c40, %bb359 ], [ %v1_11ca0, %dec_label_pc_11c84 ], [ %v1_11ca0, %dec_label_pc_11c8c ], [ %v1_11ca0, %dec_label_pc_11c94 ], [ %v1_11ca0, %bb360 ], [ %v1_11ca0, %dec_label_pc_11ca8 ]
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11cbc = add i32 %v0_11cbc, 1
  store i32 %v1_11cbc, i32* @r7, align 4
  %v1_11cc0 = call i32 @function_1255c(i32 23)
  store i32 %v2_11d9c, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_11cd0 = call i32 @function_12498(i32 23, i32* nonnull %stack_var_-60)
  store i32 %v3_11cd0, i32* %r0.global-to-local, align 4
  %v3_11cd4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11cd4, i32* @r2, align 4
  store i32 %v3_11cd0, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11ce0 = load i32, i32* @r6, align 4
  %v1_11ce0 = add i32 %v0_11ce0, 4
  %v2_11ce0 = inttoptr i32 %v1_11ce0 to i32*
  %v3_11ce0 = load i32, i32* %v2_11ce0, align 4
  store i32 %v3_11ce0, i32* @r0, align 4
  %v4_11ce4 = call i32 @function_1553c(i32 %v3_11ce0, i32 %v3_11cd0, i32 %v3_11cd4, i32 16384)
  store i32 %v4_11ce4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11cf4 = load i32, i32* @r6, align 4
  %v1_11cf4 = add i32 %v0_11cf4, 4
  %v2_11cf4 = inttoptr i32 %v1_11cf4 to i32*
  %v3_11cf4 = load i32, i32* %v2_11cf4, align 4
  store i32 %v3_11cf4, i32* @r0, align 4
  %v4_11cf8 = call i32 @function_1553c(i32 %v3_11cf4, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11d00 = call i32 @function_124bc(i32 23)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_11d08 = load i32, i32* @r6, align 4
  %v2_11d08 = add i32 %v1_11d08, 12
  %v3_11d08 = inttoptr i32 %v2_11d08 to i32*
  store i32 9, i32* %v3_11d08, align 4
  br label %dec_label_pc_11894

dec_label_pc_11d10:                               ; preds = %dec_label_pc_11764
  %v1_11d10 = add i32 %v0_11764, 24
  %v2_11d10 = inttoptr i32 %v1_11d10 to i32*
  %v3_11d10 = load i32, i32* %v2_11d10, align 4
  store i32 %v3_11d10, i32* %r2.global-to-local, align 4
  %v1_11d14 = add i32 %v3_11d10, -1
  store i32 %v1_11d14, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11d18 = icmp eq i32 %v1_11d14, 0
  store i1 %v2_11d18, i1* %cpsr_z.global-to-local, align 1
  %tmp361 = icmp slt i32 %v1_11d14, 1
  br i1 %tmp361, label %dec_label_pc_116e4thread-pre-split.thread, label %dec_label_pc_11d20

dec_label_pc_11d20:                               ; preds = %dec_label_pc_11d10
  %v2_11d20 = add i32 %v1_11d14, %v0_11764
  store i32 %v2_11d20, i32* %r3.global-to-local, align 4
  %v1_11d24 = add i32 %v2_11d20, 28
  %v2_11d24 = inttoptr i32 %v1_11d24 to i8*
  %v3_11d24 = load i8, i8* %v2_11d24, align 1
  %v4_11d24 = zext i8 %v3_11d24 to i32
  store i32 %v4_11d24, i32* %r3.global-to-local, align 4
  %v2_11d28 = icmp ugt i8 %v3_11d24, 61
  store i1 %v2_11d28, i1* %cpsr_c.global-to-local, align 1
  %v7_11d28 = icmp eq i8 %v3_11d24, 62
  store i1 %v7_11d28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d28, label %dec_label_pc_11d8c, label %bb362

bb362:                                            ; preds = %dec_label_pc_11d20
  %v3_11d2c = icmp ugt i8 %v3_11d24, 57
  store i1 %v3_11d2c, i1* %cpsr_c.global-to-local, align 1
  %v8_11d2c = icmp eq i8 %v3_11d24, 58
  store i1 %v8_11d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11d2c, label %dec_label_pc_11d8c, label %dec_label_pc_11d34

dec_label_pc_11d34:                               ; preds = %bb362
  %v2_11d34 = icmp ugt i8 %v3_11d24, 35
  store i1 %v2_11d34, i1* %cpsr_c.global-to-local, align 1
  %v7_11d34 = icmp eq i8 %v3_11d24, 36
  store i1 %v7_11d34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d34, label %dec_label_pc_11d8c, label %dec_label_pc_11d3c

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11d34
  %v2_11d3c = icmp ugt i8 %v3_11d24, 34
  store i1 %v2_11d3c, i1* %cpsr_c.global-to-local, align 1
  %v7_11d3c = icmp eq i8 %v3_11d24, 35
  store i1 %v7_11d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d3c, label %dec_label_pc_11d8c, label %dec_label_pc_11d44

dec_label_pc_11d44:                               ; preds = %dec_label_pc_11d3c
  %v2_11d44 = icmp ugt i8 %v3_11d24, 36
  store i1 %v2_11d44, i1* %cpsr_c.global-to-local, align 1
  %v7_11d44 = icmp eq i8 %v3_11d24, 37
  store i1 %v7_11d44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d44, label %dec_label_pc_11d8c, label %dec_label_pc_11d74.preheader

dec_label_pc_11d74.preheader:                     ; preds = %dec_label_pc_11d44
  %v3_11d48 = add i32 %v0_11764, 28
  %v2_11d4c = add i32 %v3_11d48, %v3_11d10
  store i32 %v2_11d4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11d74

dec_label_pc_11d58:                               ; preds = %bb363
  %v2_11d58 = icmp ugt i8 %v3_11d7c, 35
  store i1 %v2_11d58, i1* %cpsr_c.global-to-local, align 1
  %v7_11d58 = icmp eq i8 %v3_11d7c, 36
  store i1 %v7_11d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d58, label %dec_label_pc_11d8c, label %dec_label_pc_11d60

dec_label_pc_11d60:                               ; preds = %dec_label_pc_11d58
  %v2_11d60 = icmp ugt i8 %v3_11d7c, 34
  store i1 %v2_11d60, i1* %cpsr_c.global-to-local, align 1
  %v7_11d60 = icmp eq i8 %v3_11d7c, 35
  store i1 %v7_11d60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d60, label %dec_label_pc_11d8c, label %dec_label_pc_11d68

dec_label_pc_11d68:                               ; preds = %dec_label_pc_11d60
  %v2_11d68 = icmp ugt i8 %v3_11d7c, 36
  store i1 %v2_11d68, i1* %cpsr_c.global-to-local, align 1
  %v7_11d68 = icmp eq i8 %v3_11d7c, 37
  store i1 %v7_11d68, i1* %cpsr_z.global-to-local, align 1
  %v1_11d6c = add i32 %v0_11d6c, -1
  store i32 %v1_11d6c, i32* %r3.global-to-local, align 4
  br i1 %v7_11d68, label %dec_label_pc_11d8c, label %dec_label_pc_11d74

dec_label_pc_11d74:                               ; preds = %dec_label_pc_11d74.preheader, %dec_label_pc_11d68
  %v0_11d6c = phi i32 [ %v2_11d4c, %dec_label_pc_11d74.preheader ], [ %v1_11d6c, %dec_label_pc_11d68 ]
  %v0_11d74 = phi i32 [ %v1_11d14, %dec_label_pc_11d74.preheader ], [ %v1_11d74, %dec_label_pc_11d68 ]
  %v1_11d74 = add i32 %v0_11d74, -1
  store i32 %v1_11d74, i32* %r1.global-to-local, align 4
  %v2_11d74 = icmp ne i32 %v0_11d74, 0
  store i1 %v2_11d74, i1* %cpsr_c.global-to-local, align 1
  %v7_11d74 = icmp eq i32 %v0_11d74, 1
  store i1 %v7_11d74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d74, label %dec_label_pc_116e4thread-pre-split.thread477, label %dec_label_pc_11d7c

dec_label_pc_11d7c:                               ; preds = %dec_label_pc_11d74
  %v1_11d7c = add i32 %v0_11d6c, -2
  %v2_11d7c = inttoptr i32 %v1_11d7c to i8*
  %v3_11d7c = load i8, i8* %v2_11d7c, align 1
  %v4_11d7c = zext i8 %v3_11d7c to i32
  store i32 %v4_11d7c, i32* %r2.global-to-local, align 4
  %v2_11d80 = icmp ugt i8 %v3_11d7c, 61
  store i1 %v2_11d80, i1* %cpsr_c.global-to-local, align 1
  %v7_11d80 = icmp eq i8 %v3_11d7c, 62
  store i1 %v7_11d80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d80, label %dec_label_pc_11d8c, label %bb363

bb363:                                            ; preds = %dec_label_pc_11d7c
  %v3_11d84 = icmp ugt i8 %v3_11d7c, 57
  store i1 %v3_11d84, i1* %cpsr_c.global-to-local, align 1
  %v8_11d84 = icmp eq i8 %v3_11d7c, 58
  store i1 %v8_11d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11d84, label %dec_label_pc_11d8c, label %dec_label_pc_11d58

dec_label_pc_11d8c:                               ; preds = %dec_label_pc_11d7c, %bb363, %dec_label_pc_11d68, %dec_label_pc_11d60, %dec_label_pc_11d58, %dec_label_pc_11d44, %dec_label_pc_11d20, %dec_label_pc_11d3c, %dec_label_pc_11d34, %bb362
  %v0_11d90 = phi i32 [ %v1_11d14, %dec_label_pc_11d44 ], [ %v1_11d14, %dec_label_pc_11d20 ], [ %v1_11d14, %dec_label_pc_11d3c ], [ %v1_11d14, %dec_label_pc_11d34 ], [ %v1_11d14, %bb362 ], [ %v1_11d74, %dec_label_pc_11d58 ], [ %v1_11d74, %dec_label_pc_11d60 ], [ %v1_11d74, %dec_label_pc_11d68 ], [ %v1_11d74, %bb363 ], [ %v1_11d74, %dec_label_pc_11d7c ]
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_11d90 = add i32 %v0_11d90, 1
  store i32 %v1_11d90, i32* @r7, align 4
  %v1_11d94 = call i32 @function_1255c(i32 21)
  store i32 %v2_11d9c, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_11da4 = call i32 @function_12498(i32 21, i32* nonnull %stack_var_-60)
  store i32 %v3_11da4, i32* %r0.global-to-local, align 4
  %v3_11da8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11da8, i32* @r2, align 4
  store i32 %v3_11da4, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11db4 = load i32, i32* @r6, align 4
  %v1_11db4 = add i32 %v0_11db4, 4
  %v2_11db4 = inttoptr i32 %v1_11db4 to i32*
  %v3_11db4 = load i32, i32* %v2_11db4, align 4
  store i32 %v3_11db4, i32* @r0, align 4
  %v4_11db8 = call i32 @function_1553c(i32 %v3_11db4, i32 %v3_11da4, i32 %v3_11da8, i32 16384)
  store i32 %v4_11db8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11dc8 = load i32, i32* @r6, align 4
  %v1_11dc8 = add i32 %v0_11dc8, 4
  %v2_11dc8 = inttoptr i32 %v1_11dc8 to i32*
  %v3_11dc8 = load i32, i32* %v2_11dc8, align 4
  store i32 %v3_11dc8, i32* @r0, align 4
  %v4_11dcc = call i32 @function_1553c(i32 %v3_11dc8, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2, i32 16384)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_11dd4 = call i32 @function_124bc(i32 21)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_11ddc = load i32, i32* @r6, align 4
  %v2_11ddc = add i32 %v1_11ddc, 12
  %v3_11ddc = inttoptr i32 %v2_11ddc to i32*
  store i32 6, i32* %v3_11ddc, align 4
  br label %dec_label_pc_11894

dec_label_pc_11de4:                               ; preds = %dec_label_pc_11764
  %v1_11de4 = add i32 %v0_11764, 24
  %v2_11de4 = inttoptr i32 %v1_11de4 to i32*
  %v3_11de4 = load i32, i32* %v2_11de4, align 4
  store i32 %v3_11de4, i32* %r1.global-to-local, align 4
  %v1_11de8 = add i32 %v3_11de4, -1
  store i32 %v1_11de8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11dec = icmp eq i32 %v1_11de8, 0
  store i1 %v2_11dec, i1* %cpsr_z.global-to-local, align 1
  %tmp364 = icmp slt i32 %v1_11de8, 1
  br i1 %tmp364, label %dec_label_pc_11e60, label %dec_label_pc_11df4

dec_label_pc_11df4:                               ; preds = %dec_label_pc_11de4
  %v2_11df4 = add i32 %v1_11de8, %v0_11764
  store i32 %v2_11df4, i32* %r3.global-to-local, align 4
  %v1_11df8 = add i32 %v2_11df4, 28
  %v2_11df8 = inttoptr i32 %v1_11df8 to i8*
  %v3_11df8 = load i8, i8* %v2_11df8, align 1
  %v4_11df8 = zext i8 %v3_11df8 to i32
  store i32 %v4_11df8, i32* %r3.global-to-local, align 4
  %v2_11dfc = icmp ugt i8 %v3_11df8, 61
  store i1 %v2_11dfc, i1* %cpsr_c.global-to-local, align 1
  %v7_11dfc = icmp eq i8 %v3_11df8, 62
  store i1 %v7_11dfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11dfc, label %dec_label_pc_12068, label %bb365

bb365:                                            ; preds = %dec_label_pc_11df4
  %v3_11e00 = icmp ugt i8 %v3_11df8, 57
  store i1 %v3_11e00, i1* %cpsr_c.global-to-local, align 1
  %v8_11e00 = icmp eq i8 %v3_11df8, 58
  store i1 %v8_11e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11e00, label %dec_label_pc_12068, label %dec_label_pc_11e08

dec_label_pc_11e08:                               ; preds = %bb365
  %v2_11e08 = icmp ugt i8 %v3_11df8, 35
  store i1 %v2_11e08, i1* %cpsr_c.global-to-local, align 1
  %v7_11e08 = icmp eq i8 %v3_11df8, 36
  store i1 %v7_11e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e08, label %dec_label_pc_12068, label %dec_label_pc_11e10

dec_label_pc_11e10:                               ; preds = %dec_label_pc_11e08
  %v2_11e10 = icmp ugt i8 %v3_11df8, 34
  store i1 %v2_11e10, i1* %cpsr_c.global-to-local, align 1
  %v7_11e10 = icmp eq i8 %v3_11df8, 35
  store i1 %v7_11e10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e10, label %dec_label_pc_12068, label %dec_label_pc_11e18

dec_label_pc_11e18:                               ; preds = %dec_label_pc_11e10
  %v2_11e18 = icmp ugt i8 %v3_11df8, 36
  store i1 %v2_11e18, i1* %cpsr_c.global-to-local, align 1
  %v7_11e18 = icmp eq i8 %v3_11df8, 37
  store i1 %v7_11e18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e18, label %dec_label_pc_12068, label %dec_label_pc_11e58.preheader

dec_label_pc_11e58.preheader:                     ; preds = %dec_label_pc_11e18
  %v3_11e1c = add i32 %v0_11764, 28
  %v2_11e20 = add i32 %v3_11e1c, %v3_11de4
  store i32 %v2_11e20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11e58

dec_label_pc_11e2c:                               ; preds = %dec_label_pc_11e58
  %v1_11e2c = add i32 %v0_11e50, -2
  %v2_11e2c = inttoptr i32 %v1_11e2c to i8*
  %v3_11e2c = load i8, i8* %v2_11e2c, align 1
  %v4_11e2c = zext i8 %v3_11e2c to i32
  store i32 %v4_11e2c, i32* %r2.global-to-local, align 4
  %v2_11e30 = icmp ugt i8 %v3_11e2c, 61
  store i1 %v2_11e30, i1* %cpsr_c.global-to-local, align 1
  %v7_11e30 = icmp eq i8 %v3_11e2c, 62
  store i1 %v7_11e30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e30, label %dec_label_pc_12068, label %bb366

bb366:                                            ; preds = %dec_label_pc_11e2c
  %v3_11e34 = icmp ugt i8 %v3_11e2c, 57
  store i1 %v3_11e34, i1* %cpsr_c.global-to-local, align 1
  %v8_11e34 = icmp eq i8 %v3_11e2c, 58
  store i1 %v8_11e34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11e34, label %dec_label_pc_12068, label %dec_label_pc_11e3c

dec_label_pc_11e3c:                               ; preds = %bb366
  %v2_11e3c = icmp ugt i8 %v3_11e2c, 35
  store i1 %v2_11e3c, i1* %cpsr_c.global-to-local, align 1
  %v7_11e3c = icmp eq i8 %v3_11e2c, 36
  store i1 %v7_11e3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e3c, label %dec_label_pc_12068, label %dec_label_pc_11e44

dec_label_pc_11e44:                               ; preds = %dec_label_pc_11e3c
  %v2_11e44 = icmp ugt i8 %v3_11e2c, 34
  store i1 %v2_11e44, i1* %cpsr_c.global-to-local, align 1
  %v7_11e44 = icmp eq i8 %v3_11e2c, 35
  store i1 %v7_11e44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e44, label %dec_label_pc_12068, label %dec_label_pc_11e4c

dec_label_pc_11e4c:                               ; preds = %dec_label_pc_11e44
  %v2_11e4c = icmp ugt i8 %v3_11e2c, 36
  store i1 %v2_11e4c, i1* %cpsr_c.global-to-local, align 1
  %v7_11e4c = icmp eq i8 %v3_11e2c, 37
  store i1 %v7_11e4c, i1* %cpsr_z.global-to-local, align 1
  %v1_11e50 = add i32 %v0_11e50, -1
  store i32 %v1_11e50, i32* %r3.global-to-local, align 4
  br i1 %v7_11e4c, label %dec_label_pc_12068, label %dec_label_pc_11e58

dec_label_pc_11e58:                               ; preds = %dec_label_pc_11e58.preheader, %dec_label_pc_11e4c
  %v0_11e50 = phi i32 [ %v2_11e20, %dec_label_pc_11e58.preheader ], [ %v1_11e50, %dec_label_pc_11e4c ]
  %v0_11e58 = phi i32 [ %v1_11de8, %dec_label_pc_11e58.preheader ], [ %v1_11e58, %dec_label_pc_11e4c ]
  %v1_11e58 = add i32 %v0_11e58, -1
  store i32 %v1_11e58, i32* %r0.global-to-local, align 4
  %v2_11e58 = icmp ne i32 %v0_11e58, 0
  store i1 %v2_11e58, i1* %cpsr_c.global-to-local, align 1
  %v7_11e58 = icmp eq i32 %v0_11e58, 1
  store i1 %v7_11e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e58, label %dec_label_pc_11e60, label %dec_label_pc_11e2c

dec_label_pc_11e60:                               ; preds = %dec_label_pc_11e58, %dec_label_pc_11de4
  %v0_11e60 = load i32, i32* @fp, align 4
  store i32 %v0_11e60, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a4dc.330 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_11e6c = call i32 @function_12ea4(i32 %v0_11e60, i32 %v3_11de4, i32 ptrtoint ([5 x i8]* @global_var_1a4dc.330 to i32), i32 4)
  store i32 %v5_11e6c, i32* %r0.global-to-local, align 4
  %v2_11e70 = icmp eq i32 %v5_11e6c, -1
  store i1 %v2_11e70, i1* %cpsr_c.global-to-local, align 1
  %v7_11e70 = icmp eq i32 %v5_11e6c, -1
  store i1 %v7_11e70, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_11e6c, i32* @r7, align 4
  br i1 %v7_11e70, label %dec_label_pc_12444, label %dec_label_pc_11e7c

dec_label_pc_11e7c:                               ; preds = %dec_label_pc_12444, %dec_label_pc_11e60
  %v0_11e7c = phi i32 [ %v5_12454, %dec_label_pc_12444 ], [ %v5_11e6c, %dec_label_pc_11e60 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11e7c = icmp eq i32 %v0_11e7c, 0
  store i1 %v2_11e7c, i1* %cpsr_z.global-to-local, align 1
  %v5_11e80 = icmp sgt i32 %v0_11e7c, 0
  br i1 %v5_11e80, label %dec_label_pc_11e7c.dec_label_pc_1206c_crit_edge, label %dec_label_pc_11e84

dec_label_pc_11e7c.dec_label_pc_1206c_crit_edge:  ; preds = %dec_label_pc_11e7c
  %v0_1206c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1206c

dec_label_pc_11e84:                               ; preds = %dec_label_pc_11fe4, %bb374, %dec_label_pc_11f18, %dec_label_pc_11e7c, %dec_label_pc_1212c, %dec_label_pc_120a8, %dec_label_pc_1206c, %dec_label_pc_121b4
  %v0_11e84 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11e84 = icmp eq i32 %v0_11e84, 0
  store i1 %v2_11e84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e84, label %dec_label_pc_116e0.loopexit, label %dec_label_pc_11894

dec_label_pc_11e90:                               ; preds = %dec_label_pc_11764
  %v1_11e90 = add i32 %v0_11764, 24
  %v2_11e90 = inttoptr i32 %v1_11e90 to i32*
  %v3_11e90 = load i32, i32* %v2_11e90, align 4
  store i32 %v3_11e90, i32* %r1.global-to-local, align 4
  %v1_11e94 = add i32 %v3_11e90, -1
  store i32 %v1_11e94, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11e98 = icmp eq i32 %v1_11e94, 0
  store i1 %v2_11e98, i1* %cpsr_z.global-to-local, align 1
  %tmp367 = icmp slt i32 %v1_11e94, 1
  br i1 %tmp367, label %dec_label_pc_11efc, label %dec_label_pc_11ea0

dec_label_pc_11ea0:                               ; preds = %dec_label_pc_11e90
  %v2_11ea0 = add i32 %v1_11e94, %v0_11764
  store i32 %v2_11ea0, i32* %r3.global-to-local, align 4
  %v1_11ea4 = add i32 %v2_11ea0, 28
  %v2_11ea4 = inttoptr i32 %v1_11ea4 to i8*
  %v3_11ea4 = load i8, i8* %v2_11ea4, align 1
  %v4_11ea4 = zext i8 %v3_11ea4 to i32
  store i32 %v4_11ea4, i32* %r3.global-to-local, align 4
  %v2_11ea8 = icmp ugt i8 %v3_11ea4, 61
  store i1 %v2_11ea8, i1* %cpsr_c.global-to-local, align 1
  %v7_11ea8 = icmp eq i8 %v3_11ea4, 62
  store i1 %v7_11ea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ea8, label %dec_label_pc_120a4, label %bb368

bb368:                                            ; preds = %dec_label_pc_11ea0
  %v3_11eac = icmp ugt i8 %v3_11ea4, 57
  store i1 %v3_11eac, i1* %cpsr_c.global-to-local, align 1
  %v8_11eac = icmp eq i8 %v3_11ea4, 58
  store i1 %v8_11eac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11eac, label %dec_label_pc_120a4, label %dec_label_pc_11eb4

dec_label_pc_11eb4:                               ; preds = %bb368
  %v2_11eb4 = icmp ugt i8 %v3_11ea4, 35
  store i1 %v2_11eb4, i1* %cpsr_c.global-to-local, align 1
  %v7_11eb4 = icmp eq i8 %v3_11ea4, 36
  store i1 %v7_11eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11eb4, label %dec_label_pc_120a4, label %dec_label_pc_11ebc

dec_label_pc_11ebc:                               ; preds = %dec_label_pc_11eb4
  %v2_11ebc = icmp ugt i8 %v3_11ea4, 34
  store i1 %v2_11ebc, i1* %cpsr_c.global-to-local, align 1
  %v7_11ebc = icmp eq i8 %v3_11ea4, 35
  store i1 %v7_11ebc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ebc, label %dec_label_pc_120a4, label %dec_label_pc_11ef4.preheader

dec_label_pc_11ef4.preheader:                     ; preds = %dec_label_pc_11ebc
  %v3_11ec0 = add i32 %v0_11764, 28
  %v2_11ec4 = add i32 %v3_11ec0, %v3_11e90
  store i32 %v2_11ec4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11ef4

dec_label_pc_11ed0:                               ; preds = %dec_label_pc_11ef4
  %v1_11ed0 = add i32 %v0_11eec, -2
  %v2_11ed0 = inttoptr i32 %v1_11ed0 to i8*
  %v3_11ed0 = load i8, i8* %v2_11ed0, align 1
  %v4_11ed0 = zext i8 %v3_11ed0 to i32
  store i32 %v4_11ed0, i32* %r2.global-to-local, align 4
  %v2_11ed4 = icmp ugt i8 %v3_11ed0, 61
  store i1 %v2_11ed4, i1* %cpsr_c.global-to-local, align 1
  %v7_11ed4 = icmp eq i8 %v3_11ed0, 62
  store i1 %v7_11ed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ed4, label %dec_label_pc_120a4, label %bb369

bb369:                                            ; preds = %dec_label_pc_11ed0
  %v3_11ed8 = icmp ugt i8 %v3_11ed0, 57
  store i1 %v3_11ed8, i1* %cpsr_c.global-to-local, align 1
  %v8_11ed8 = icmp eq i8 %v3_11ed0, 58
  store i1 %v8_11ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11ed8, label %dec_label_pc_120a4, label %dec_label_pc_11ee0

dec_label_pc_11ee0:                               ; preds = %bb369
  %v2_11ee0 = icmp ugt i8 %v3_11ed0, 35
  store i1 %v2_11ee0, i1* %cpsr_c.global-to-local, align 1
  %v7_11ee0 = icmp eq i8 %v3_11ed0, 36
  store i1 %v7_11ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ee0, label %dec_label_pc_120a4, label %dec_label_pc_11ee8

dec_label_pc_11ee8:                               ; preds = %dec_label_pc_11ee0
  %v2_11ee8 = icmp ugt i8 %v3_11ed0, 34
  store i1 %v2_11ee8, i1* %cpsr_c.global-to-local, align 1
  %v7_11ee8 = icmp eq i8 %v3_11ed0, 35
  store i1 %v7_11ee8, i1* %cpsr_z.global-to-local, align 1
  %v1_11eec = add i32 %v0_11eec, -1
  store i32 %v1_11eec, i32* %r3.global-to-local, align 4
  br i1 %v7_11ee8, label %dec_label_pc_120a4, label %dec_label_pc_11ef4

dec_label_pc_11ef4:                               ; preds = %dec_label_pc_11ef4.preheader, %dec_label_pc_11ee8
  %v0_11eec = phi i32 [ %v2_11ec4, %dec_label_pc_11ef4.preheader ], [ %v1_11eec, %dec_label_pc_11ee8 ]
  %v0_11ef4 = phi i32 [ %v1_11e94, %dec_label_pc_11ef4.preheader ], [ %v1_11ef4, %dec_label_pc_11ee8 ]
  %v1_11ef4 = add i32 %v0_11ef4, -1
  store i32 %v1_11ef4, i32* %r0.global-to-local, align 4
  %v2_11ef4 = icmp ne i32 %v0_11ef4, 0
  store i1 %v2_11ef4, i1* %cpsr_c.global-to-local, align 1
  %v7_11ef4 = icmp eq i32 %v0_11ef4, 1
  store i1 %v7_11ef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ef4, label %dec_label_pc_11efc, label %dec_label_pc_11ed0

dec_label_pc_11efc:                               ; preds = %dec_label_pc_11ef4, %dec_label_pc_11e90
  %v0_11efc = load i32, i32* @fp, align 4
  store i32 %v0_11efc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a4e4.332 to i32), i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v5_11f08 = call i32 @function_12ea4(i32 %v0_11efc, i32 %v3_11e90, i32 ptrtoint ([8 x i8]* @global_var_1a4e4.332 to i32), i32 7)
  store i32 %v5_11f08, i32* %r0.global-to-local, align 4
  %v2_11f0c = icmp eq i32 %v5_11f08, -1
  store i1 %v2_11f0c, i1* %cpsr_c.global-to-local, align 1
  %v7_11f0c = icmp eq i32 %v5_11f08, -1
  store i1 %v7_11f0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_11f08, i32* @r7, align 4
  br i1 %v7_11f0c, label %dec_label_pc_116e0.loopexit, label %dec_label_pc_11f18

dec_label_pc_11f18:                               ; preds = %dec_label_pc_11efc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11f18 = icmp eq i32 %v5_11f08, 0
  store i1 %v2_11f18, i1* %cpsr_z.global-to-local, align 1
  %tmp370 = icmp slt i32 %v5_11f08, 1
  br i1 %tmp370, label %dec_label_pc_11e84, label %dec_label_pc_11f18.dec_label_pc_120a8_crit_edge

dec_label_pc_11f18.dec_label_pc_120a8_crit_edge:  ; preds = %dec_label_pc_11f18
  %v0_120a8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_120a8

dec_label_pc_11f24:                               ; preds = %dec_label_pc_11764
  %v1_11f24 = add i32 %v0_11764, 24
  %v2_11f24 = inttoptr i32 %v1_11f24 to i32*
  %v3_11f24 = load i32, i32* %v2_11f24, align 4
  store i32 %v3_11f24, i32* %r2.global-to-local, align 4
  %v0_11f28 = load i32, i32* @fp, align 4
  store i32 %v0_11f28, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_11f30123 = icmp eq i32 %v3_11f24, 0
  store i1 %v9_11f30123, i1* %cpsr_z.global-to-local, align 1
  %v7_11f34124 = icmp sgt i32 %v3_11f24, 0
  br i1 %v7_11f34124, label %dec_label_pc_11f38.preheader, label %dec_label_pc_11fe4

dec_label_pc_11f30.loopexit:                      ; preds = %dec_label_pc_11f54
  %v2_11f5c = add i32 %v1_11f5c, 2
  store i32 %v2_11f5c, i32* @r4, align 4
  %v2_11f60 = add i32 %v1_11f60, 2
  store i32 %v2_11f60, i32* @r7, align 4
  %v3_11f30 = icmp uge i32 %v0_11f30, %v2_11f60
  store i1 %v3_11f30, i1* %cpsr_c.global-to-local, align 1
  %v9_11f30 = icmp eq i32 %v0_11f30, %v2_11f60
  store i1 %v9_11f30, i1* %cpsr_z.global-to-local, align 1
  %v7_11f34 = icmp sgt i32 %v0_11f30, %v2_11f60
  br i1 %v7_11f34, label %dec_label_pc_11f38.preheader, label %dec_label_pc_11fe4

dec_label_pc_11f38.preheader:                     ; preds = %dec_label_pc_11f24, %dec_label_pc_11f30.loopexit
  %v6_11fec207 = phi i32 [ %v6_11fec208, %dec_label_pc_11f30.loopexit ], [ %v0_11764, %dec_label_pc_11f24 ]
  %v1_11f60190 = phi i32 [ %v2_11f60, %dec_label_pc_11f30.loopexit ], [ 0, %dec_label_pc_11f24 ]
  %v1_11f44188 = phi i32 [ %v0_11f30, %dec_label_pc_11f30.loopexit ], [ %v3_11f24, %dec_label_pc_11f24 ]
  %v0_11f38186 = phi i32 [ %v2_11f5c, %dec_label_pc_11f30.loopexit ], [ %v0_11f28, %dec_label_pc_11f24 ]
  br label %dec_label_pc_11f38

dec_label_pc_11f38:                               ; preds = %dec_label_pc_11f38.preheader, %dec_label_pc_11fc8
  %v6_11fec208 = phi i32 [ %v6_11fec207, %dec_label_pc_11f38.preheader ], [ %v0_11fd0, %dec_label_pc_11fc8 ]
  %v1_11f60 = phi i32 [ %v1_11f60190, %dec_label_pc_11f38.preheader ], [ %v1_11fd4, %dec_label_pc_11fc8 ]
  %v0_11f30 = phi i32 [ %v1_11f44188, %dec_label_pc_11f38.preheader ], [ %v3_11fd0, %dec_label_pc_11fc8 ]
  %v1_11f5c = phi i32 [ %v0_11f38186, %dec_label_pc_11f38.preheader ], [ %v1_11fdc, %dec_label_pc_11fc8 ]
  %v1_11f38 = inttoptr i32 %v1_11f5c to i8*
  %v2_11f38 = load i8, i8* %v1_11f38, align 1
  %v3_11f38 = zext i8 %v2_11f38 to i32
  store i32 %v3_11f38, i32* %r3.global-to-local, align 4
  %v2_11f3c = icmp eq i8 %v2_11f38, -1
  store i1 %v2_11f3c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11f3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11f3c, label %dec_label_pc_11f44, label %dec_label_pc_11fe4

dec_label_pc_11f44:                               ; preds = %dec_label_pc_11f38
  %v0_11f44 = load i32, i32* @fp, align 4
  %v2_11f44 = add i32 %v0_11f44, %v0_11f30
  store i32 %v2_11f44, i32* %r1.global-to-local, align 4
  %v1_11f48 = add i32 %v1_11f5c, 1
  store i32 %v1_11f48, i32* @r5, align 4
  %v3_11f4c = icmp uge i32 %v2_11f44, %v1_11f48
  store i1 %v3_11f4c, i1* %cpsr_c.global-to-local, align 1
  %v9_11f4c = icmp eq i32 %v2_11f44, %v1_11f48
  store i1 %v9_11f4c, i1* %cpsr_z.global-to-local, align 1
  %v2_11f50 = xor i1 %v3_11f4c, true
  %v3_11f50 = or i1 %v9_11f4c, %v2_11f50
  br i1 %v3_11f50, label %dec_label_pc_11fe4, label %dec_label_pc_11f54

dec_label_pc_11f54:                               ; preds = %dec_label_pc_11f44
  %v2_11f54 = inttoptr i32 %v1_11f48 to i8*
  %v3_11f54 = load i8, i8* %v2_11f54, align 1
  %v4_11f54 = zext i8 %v3_11f54 to i32
  store i32 %v4_11f54, i32* @r3, align 4
  %v2_11f58 = icmp eq i8 %v3_11f54, -1
  store i1 %v2_11f58, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11f58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11f58, label %dec_label_pc_11f30.loopexit, label %dec_label_pc_11f68

dec_label_pc_11f68:                               ; preds = %dec_label_pc_11f54
  %v2_11f68 = icmp ugt i8 %v3_11f54, -4
  store i1 %v2_11f68, i1* %cpsr_c.global-to-local, align 1
  %v7_11f68 = icmp eq i8 %v3_11f54, -3
  store i1 %v7_11f68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f68, label %dec_label_pc_11ff4, label %dec_label_pc_11f70

dec_label_pc_11f70:                               ; preds = %dec_label_pc_11f68
  %v1_11f70 = add i32 %v1_11f5c, 2
  store i32 %v1_11f70, i32* %r3.global-to-local, align 4
  %v3_11f74 = icmp uge i32 %v2_11f44, %v1_11f70
  store i1 %v3_11f74, i1* %cpsr_c.global-to-local, align 1
  %v9_11f74 = icmp eq i32 %v2_11f44, %v1_11f70
  store i1 %v9_11f74, i1* %cpsr_z.global-to-local, align 1
  %v2_11f78 = xor i1 %v3_11f74, true
  %v3_11f78 = or i1 %v9_11f74, %v2_11f78
  br i1 %v3_11f78, label %dec_label_pc_11fe4, label %dec_label_pc_11f7c

dec_label_pc_11f7c:                               ; preds = %dec_label_pc_12058, %bb375, %.thread97, %dec_label_pc_11f70
  %v0_11f7c = load i32, i32* @r5, align 4
  %v1_11f7c = inttoptr i32 %v0_11f7c to i8*
  %v2_11f7c = load i8, i8* %v1_11f7c, align 1
  %v3_11f7c = zext i8 %v2_11f7c to i32
  store i32 %v3_11f7c, i32* %r3.global-to-local, align 4
  %v2_11f80 = icmp ugt i8 %v2_11f7c, -4
  store i1 %v2_11f80, i1* %cpsr_c.global-to-local, align 1
  %v7_11f80 = icmp eq i8 %v2_11f7c, -3
  store i1 %v7_11f80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f80, label %.thread89, label %dec_label_pc_11f90

.thread89:                                        ; preds = %dec_label_pc_11f7c
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_11f7c, align 1
  %v0_11f8c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11f8c.pr.pr, label %.thread92, label %.thread89.dec_label_pc_11f90thread-pre-split_crit_edge

.thread89.dec_label_pc_11f90thread-pre-split_crit_edge: ; preds = %.thread89
  %v0_11f90.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11f90

dec_label_pc_11f90:                               ; preds = %dec_label_pc_11f7c, %.thread89.dec_label_pc_11f90thread-pre-split_crit_edge
  %v0_11f90.pr = phi i32 [ %v0_11f90.pr.pre, %.thread89.dec_label_pc_11f90thread-pre-split_crit_edge ], [ %v3_11f7c, %dec_label_pc_11f7c ]
  %v2_11f90 = icmp ugt i32 %v0_11f90.pr, 250
  store i1 %v2_11f90, i1* %cpsr_c.global-to-local, align 1
  %v7_11f90 = icmp eq i32 %v0_11f90.pr, 251
  store i1 %v7_11f90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f90, label %bb371, label %.thread92

bb371:                                            ; preds = %dec_label_pc_11f90
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11f98 = load i32, i32* @r5, align 4
  %v4_11f98 = inttoptr i32 %v3_11f98 to i8*
  store i8 -3, i8* %v4_11f98, align 1
  br label %.thread92

.thread92:                                        ; preds = %dec_label_pc_11f90, %.thread89, %bb371
  %v0_11f9c = load i32, i32* @r4, align 4
  %v1_11f9c = add i32 %v0_11f9c, 2
  %v2_11f9c = inttoptr i32 %v1_11f9c to i8*
  %v3_11f9c = load i8, i8* %v2_11f9c, align 1
  %v4_11f9c = zext i8 %v3_11f9c to i32
  store i32 %v4_11f9c, i32* %r3.global-to-local, align 4
  %v2_11fa0 = icmp ugt i8 %v3_11f9c, -4
  store i1 %v2_11fa0, i1* %cpsr_c.global-to-local, align 1
  %v7_11fa0 = icmp eq i8 %v3_11f9c, -3
  store i1 %v7_11fa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11fa0, label %.thread93, label %dec_label_pc_11fb0

.thread93:                                        ; preds = %.thread92
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_11f9c, align 1
  %v0_11fac.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11fac.pr.pr, label %.thread96, label %.thread93.dec_label_pc_11fb0thread-pre-split_crit_edge

.thread93.dec_label_pc_11fb0thread-pre-split_crit_edge: ; preds = %.thread93
  %v0_11fb0.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11fb0

dec_label_pc_11fb0:                               ; preds = %.thread92, %.thread93.dec_label_pc_11fb0thread-pre-split_crit_edge
  %v0_11fb0.pr = phi i32 [ %v0_11fb0.pr.pre, %.thread93.dec_label_pc_11fb0thread-pre-split_crit_edge ], [ %v4_11f9c, %.thread92 ]
  %v2_11fb0 = icmp ugt i32 %v0_11fb0.pr, 250
  store i1 %v2_11fb0, i1* %cpsr_c.global-to-local, align 1
  %v7_11fb0 = icmp eq i32 %v0_11fb0.pr, 251
  store i1 %v7_11fb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11fb0, label %bb372, label %.thread96

bb372:                                            ; preds = %dec_label_pc_11fb0
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11fb8 = load i32, i32* @r4, align 4
  %v4_11fb8 = add i32 %v3_11fb8, 2
  %v5_11fb8 = inttoptr i32 %v4_11fb8 to i8*
  store i8 -3, i8* %v5_11fb8, align 1
  br label %.thread96

.thread96:                                        ; preds = %dec_label_pc_11fb0, %.thread93, %bb372
  %v0_11fbc = load i32, i32* @r6, align 4
  %v1_11fbc = add i32 %v0_11fbc, 4
  %v2_11fbc = inttoptr i32 %v1_11fbc to i32*
  %v3_11fbc = load i32, i32* %v2_11fbc, align 4
  store i32 %v3_11fbc, i32* @r0, align 4
  %v0_11fc0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_11fc8

dec_label_pc_11fc8:                               ; preds = %dec_label_pc_12204, %.thread96
  %v0_11fcc = phi i32 [ %v3_12218, %dec_label_pc_12204 ], [ %v3_11fbc, %.thread96 ]
  %storemerge3 = phi i32 [ %v2_1200c, %dec_label_pc_12204 ], [ %v0_11fc0, %.thread96 ]
  %storemerge2 = phi i32 [ 9, %dec_label_pc_12204 ], [ 3, %.thread96 ]
  store i32 %storemerge3, i32* @r1, align 4
  store i32 %storemerge2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11fcc = call i32 @function_1553c(i32 %v0_11fcc, i32 %storemerge3, i32 %storemerge2, i32 16384)
  store i32 %v4_11fcc, i32* %r0.global-to-local, align 4
  %v0_11fd0 = load i32, i32* @r6, align 4
  %v1_11fd0 = add i32 %v0_11fd0, 24
  %v2_11fd0 = inttoptr i32 %v1_11fd0 to i32*
  %v3_11fd0 = load i32, i32* %v2_11fd0, align 4
  store i32 %v3_11fd0, i32* %r2.global-to-local, align 4
  %v0_11fd4 = load i32, i32* @r7, align 4
  %v1_11fd4 = add i32 %v0_11fd4, 3
  store i32 %v1_11fd4, i32* @r7, align 4
  %v3_11fd8 = icmp uge i32 %v3_11fd0, %v1_11fd4
  store i1 %v3_11fd8, i1* %cpsr_c.global-to-local, align 1
  %v9_11fd8 = icmp eq i32 %v3_11fd0, %v1_11fd4
  store i1 %v9_11fd8, i1* %cpsr_z.global-to-local, align 1
  %v0_11fdc = load i32, i32* @r4, align 4
  %v1_11fdc = add i32 %v0_11fdc, 3
  store i32 %v1_11fdc, i32* @r4, align 4
  %v8_11fe0 = icmp sgt i32 %v3_11fd0, %v1_11fd4
  br i1 %v8_11fe0, label %dec_label_pc_11f38, label %dec_label_pc_11fe4

dec_label_pc_11fe4:                               ; preds = %dec_label_pc_11f30.loopexit, %dec_label_pc_11f38, %dec_label_pc_11fc8, %dec_label_pc_11f70, %dec_label_pc_11f44, %dec_label_pc_11f24, %dec_label_pc_11ff4.dec_label_pc_11fe4.loopexit_crit_edge
  %v6_11fec = phi i32 [ %v0_12024, %dec_label_pc_11ff4.dec_label_pc_11fe4.loopexit_crit_edge ], [ %v0_11764, %dec_label_pc_11f24 ], [ %v6_11fec208, %dec_label_pc_11f38 ], [ %v0_11fd0, %dec_label_pc_11fc8 ], [ %v6_11fec208, %dec_label_pc_11f70 ], [ %v6_11fec208, %dec_label_pc_11f44 ], [ %v6_11fec208, %dec_label_pc_11f30.loopexit ]
  %v0_11fe4 = phi i32 [ %v0_11fe4.pre.pre, %dec_label_pc_11ff4.dec_label_pc_11fe4.loopexit_crit_edge ], [ 0, %dec_label_pc_11f24 ], [ %v1_11f60, %dec_label_pc_11f38 ], [ %v1_11fd4, %dec_label_pc_11fc8 ], [ %v1_11f60, %dec_label_pc_11f70 ], [ %v1_11f60, %dec_label_pc_11f44 ], [ %v2_11f60, %dec_label_pc_11f30.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11fe4 = icmp eq i32 %v0_11fe4, 0
  store i1 %v2_11fe4, i1* %cpsr_z.global-to-local, align 1
  %tmp373 = icmp slt i32 %v0_11fe4, 1
  br i1 %tmp373, label %dec_label_pc_11e84, label %bb374

bb374:                                            ; preds = %dec_label_pc_11fe4
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_11fec = add i32 %v6_11fec, 12
  %v8_11fec = inttoptr i32 %v7_11fec to i32*
  store i32 3, i32* %v8_11fec, align 4
  br label %dec_label_pc_11e84

dec_label_pc_11ff4:                               ; preds = %dec_label_pc_11f68
  store i32 %v2_11ff8, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1a4f5.334 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_11ff8, i32* %r0.global-to-local, align 4
  store i32 %v2_1200c, i32* @sl, align 4
  %v4_12010 = call i32 @function_15bb8(i16* %v3_12010, i32 ptrtoint (i32* @global_var_1a4f5.334 to i32), i32 3)
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v2_1200c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a4ec.336 to i32), i32* %r1.global-to-local, align 4
  %v4_12020 = call i32 @function_15bb8(i16* %v3_12020, i32 ptrtoint (i32* @global_var_1a4ec.336 to i32), i32 9)
  store i32 %v4_12020, i32* %r0.global-to-local, align 4
  %v0_12024 = load i32, i32* @r6, align 4
  %v1_12024 = add i32 %v0_12024, 24
  %v2_12024 = inttoptr i32 %v1_12024 to i32*
  %v3_12024 = load i32, i32* %v2_12024, align 4
  %v0_12028 = load i32, i32* @r4, align 4
  %v1_12028 = add i32 %v0_12028, 2
  store i32 %v1_12028, i32* %r2.global-to-local, align 4
  %v0_1202c = load i32, i32* @fp, align 4
  %v2_1202c = add i32 %v0_1202c, %v3_12024
  store i32 %v2_1202c, i32* %r3.global-to-local, align 4
  %v3_12030 = icmp uge i32 %v2_1202c, %v1_12028
  store i1 %v3_12030, i1* %cpsr_c.global-to-local, align 1
  %v9_12030 = icmp eq i32 %v2_1202c, %v1_12028
  store i1 %v9_12030, i1* %cpsr_z.global-to-local, align 1
  %v2_12034 = xor i1 %v3_12030, true
  %v3_12034 = or i1 %v9_12030, %v2_12034
  br i1 %v3_12034, label %dec_label_pc_11ff4.dec_label_pc_11fe4.loopexit_crit_edge, label %dec_label_pc_12038

dec_label_pc_11ff4.dec_label_pc_11fe4.loopexit_crit_edge: ; preds = %dec_label_pc_11ff4
  %v0_11fe4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11fe4

dec_label_pc_12038:                               ; preds = %dec_label_pc_11ff4
  %v2_12038 = inttoptr i32 %v1_12028 to i8*
  %v3_12038 = load i8, i8* %v2_12038, align 1
  %v4_12038 = zext i8 %v3_12038 to i32
  store i32 %v4_12038, i32* %r3.global-to-local, align 4
  %v2_1203c = icmp ugt i8 %v3_12038, 30
  store i1 %v2_1203c, i1* %cpsr_c.global-to-local, align 1
  %v7_1203c = icmp eq i8 %v3_12038, 31
  store i1 %v7_1203c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1203c, label %dec_label_pc_12204, label %dec_label_pc_12044

dec_label_pc_12044:                               ; preds = %dec_label_pc_12038
  %v1_12044 = inttoptr i32 %v0_12028 to i8*
  %v2_12044 = load i8, i8* %v1_12044, align 1
  %v3_12044 = zext i8 %v2_12044 to i32
  store i32 %v3_12044, i32* %r3.global-to-local, align 4
  %v2_12048 = icmp ugt i8 %v2_12044, -4
  store i1 %v2_12048, i1* %cpsr_c.global-to-local, align 1
  %v7_12048 = icmp eq i8 %v2_12044, -3
  store i1 %v7_12048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12048, label %.thread97, label %dec_label_pc_12058

.thread97:                                        ; preds = %dec_label_pc_12044
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_12044, align 1
  %v0_12054.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12054.pr.pr, label %dec_label_pc_11f7c, label %.thread97.dec_label_pc_12058thread-pre-split_crit_edge

.thread97.dec_label_pc_12058thread-pre-split_crit_edge: ; preds = %.thread97
  %v0_12058.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12058

dec_label_pc_12058:                               ; preds = %dec_label_pc_12044, %.thread97.dec_label_pc_12058thread-pre-split_crit_edge
  %v0_12058.pr = phi i32 [ %v0_12058.pr.pre, %.thread97.dec_label_pc_12058thread-pre-split_crit_edge ], [ %v3_12044, %dec_label_pc_12044 ]
  %v2_12058 = icmp ugt i32 %v0_12058.pr, 250
  store i1 %v2_12058, i1* %cpsr_c.global-to-local, align 1
  %v7_12058 = icmp eq i32 %v0_12058.pr, 251
  store i1 %v7_12058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12058, label %bb375, label %dec_label_pc_11f7c

bb375:                                            ; preds = %dec_label_pc_12058
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_12060 = load i32, i32* @r4, align 4
  %v4_12060 = inttoptr i32 %v3_12060 to i8*
  store i8 -3, i8* %v4_12060, align 1
  br label %dec_label_pc_11f7c

dec_label_pc_12068:                               ; preds = %dec_label_pc_11e2c, %dec_label_pc_11e4c, %dec_label_pc_11e44, %dec_label_pc_11e3c, %bb366, %dec_label_pc_11e18, %dec_label_pc_11df4, %dec_label_pc_11e10, %dec_label_pc_11e08, %bb365
  %v0_12068 = phi i32 [ %v1_11de8, %dec_label_pc_11e18 ], [ %v1_11de8, %dec_label_pc_11df4 ], [ %v1_11de8, %dec_label_pc_11e10 ], [ %v1_11de8, %dec_label_pc_11e08 ], [ %v1_11de8, %bb365 ], [ %v1_11e58, %bb366 ], [ %v1_11e58, %dec_label_pc_11e3c ], [ %v1_11e58, %dec_label_pc_11e44 ], [ %v1_11e58, %dec_label_pc_11e4c ], [ %v1_11e58, %dec_label_pc_11e2c ]
  %v1_12068 = add i32 %v0_12068, 1
  store i32 %v1_12068, i32* @r7, align 4
  br label %dec_label_pc_1206c

dec_label_pc_1206c:                               ; preds = %dec_label_pc_11e7c.dec_label_pc_1206c_crit_edge, %dec_label_pc_12068
  %v0_1206c = phi i32 [ %v0_1206c.pre, %dec_label_pc_11e7c.dec_label_pc_1206c_crit_edge ], [ %v0_11764, %dec_label_pc_12068 ]
  %v1_1206c = inttoptr i32 %v0_1206c to i32*
  %v2_1206c = load i32, i32* %v1_1206c, align 4
  store i32 %v2_1206c, i32* %r3.global-to-local, align 4
  %v1_12070 = add i32 %v0_1206c, 4
  %v2_12070 = inttoptr i32 %v1_12070 to i32*
  %v3_12070 = load i32, i32* %v2_12070, align 4
  store i32 %v3_12070, i32* @r0, align 4
  %v1_12074 = add i32 %v2_1206c, 12
  %v2_12074 = inttoptr i32 %v1_12074 to i8*
  %v3_12074 = load i8, i8* %v2_12074, align 1
  %v4_12074 = zext i8 %v3_12074 to i32
  store i32 %v4_12074, i32* @r2, align 4
  %v1_12078 = inttoptr i32 %v2_1206c to i32*
  %v2_12078 = load i32, i32* %v1_12078, align 4
  store i32 %v2_12078, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12080 = call i32 @function_1553c(i32 %v3_12070, i32 %v2_12078, i32 %v4_12074, i32 16384)
  store i32 %v4_12080, i32* %r0.global-to-local, align 4
  %v0_12084 = load i32, i32* @r6, align 4
  %v1_12084 = add i32 %v0_12084, 4
  %v2_12084 = inttoptr i32 %v1_12084 to i32*
  %v3_12084 = load i32, i32* %v2_12084, align 4
  store i32 %v3_12084, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12094 = call i32 @function_1553c(i32 %v3_12084, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1209c = load i32, i32* @r6, align 4
  %v2_1209c = add i32 %v1_1209c, 12
  %v3_1209c = inttoptr i32 %v2_1209c to i32*
  store i32 4, i32* %v3_1209c, align 4
  br label %dec_label_pc_11e84

dec_label_pc_120a4:                               ; preds = %dec_label_pc_11ed0, %dec_label_pc_11ee8, %dec_label_pc_11ee0, %bb369, %dec_label_pc_11ebc, %dec_label_pc_11ea0, %dec_label_pc_11eb4, %bb368
  %v0_120a4 = phi i32 [ %v1_11e94, %dec_label_pc_11ebc ], [ %v1_11e94, %dec_label_pc_11ea0 ], [ %v1_11e94, %dec_label_pc_11eb4 ], [ %v1_11e94, %bb368 ], [ %v1_11ef4, %bb369 ], [ %v1_11ef4, %dec_label_pc_11ee0 ], [ %v1_11ef4, %dec_label_pc_11ee8 ], [ %v1_11ef4, %dec_label_pc_11ed0 ]
  %v1_120a4 = add i32 %v0_120a4, 1
  store i32 %v1_120a4, i32* @r7, align 4
  br label %dec_label_pc_120a8

dec_label_pc_120a8:                               ; preds = %dec_label_pc_11f18.dec_label_pc_120a8_crit_edge, %dec_label_pc_120a4
  %v0_120a8 = phi i32 [ %v0_120a8.pre, %dec_label_pc_11f18.dec_label_pc_120a8_crit_edge ], [ %v0_11764, %dec_label_pc_120a4 ]
  %v1_120a8 = inttoptr i32 %v0_120a8 to i32*
  %v2_120a8 = load i32, i32* %v1_120a8, align 4
  store i32 %v2_120a8, i32* %r3.global-to-local, align 4
  %v1_120ac = add i32 %v0_120a8, 4
  %v2_120ac = inttoptr i32 %v1_120ac to i32*
  %v3_120ac = load i32, i32* %v2_120ac, align 4
  store i32 %v3_120ac, i32* @r0, align 4
  %v1_120b0 = add i32 %v2_120a8, 13
  %v2_120b0 = inttoptr i32 %v1_120b0 to i8*
  %v3_120b0 = load i8, i8* %v2_120b0, align 1
  %v4_120b0 = zext i8 %v3_120b0 to i32
  store i32 %v4_120b0, i32* @r2, align 4
  %v1_120b4 = add i32 %v2_120a8, 4
  %v2_120b4 = inttoptr i32 %v1_120b4 to i32*
  %v3_120b4 = load i32, i32* %v2_120b4, align 4
  store i32 %v3_120b4, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_120bc = call i32 @function_1553c(i32 %v3_120ac, i32 %v3_120b4, i32 %v4_120b0, i32 16384)
  store i32 %v4_120bc, i32* %r0.global-to-local, align 4
  %v0_120c0 = load i32, i32* @r6, align 4
  %v1_120c0 = add i32 %v0_120c0, 4
  %v2_120c0 = inttoptr i32 %v1_120c0 to i32*
  %v3_120c0 = load i32, i32* %v2_120c0, align 4
  store i32 %v3_120c0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_120d0 = call i32 @function_1553c(i32 %v3_120c0, i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_120d8 = load i32, i32* @r6, align 4
  %v2_120d8 = add i32 %v1_120d8, 12
  %v3_120d8 = inttoptr i32 %v2_120d8 to i32*
  store i32 5, i32* %v3_120d8, align 4
  br label %dec_label_pc_11e84

dec_label_pc_120e0:                               ; preds = %dec_label_pc_1181c
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_120ec = call i32 @function_1255c(i32 25)
  store i32 %v2_11d9c, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_120fc = call i32 @function_12498(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_120fc, i32* %r0.global-to-local, align 4
  %v3_12100 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_120fc, i32* %r2.global-to-local, align 4
  %v1_12108 = add i32 %v3_12100, -1
  store i32 %v1_12108, i32* %r3.global-to-local, align 4
  %v0_1210c = load i32, i32* @r6, align 4
  %v1_1210c = add i32 %v0_1210c, 24
  %v2_1210c = inttoptr i32 %v1_1210c to i32*
  %v3_1210c = load i32, i32* %v2_1210c, align 4
  store i32 %v3_1210c, i32* %r1.global-to-local, align 4
  %v0_12110 = load i32, i32* @fp, align 4
  store i32 %v0_12110, i32* %r0.global-to-local, align 4
  %v4_12114 = call i32 @function_12ea4(i32 %v0_12110, i32 %v3_1210c, i32 %v3_120fc, i32 %v1_12108)
  store i32 %v4_12114, i32* @r7, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_12120 = call i32 @function_124bc(i32 25)
  store i32 %v1_12120, i32* %r0.global-to-local, align 4
  %v0_12124 = load i32, i32* @r7, align 4
  %v2_12124 = icmp eq i32 %v0_12124, -1
  store i1 %v2_12124, i1* %cpsr_c.global-to-local, align 1
  %v7_12124 = icmp eq i32 %v0_12124, -1
  store i1 %v7_12124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12124, label %dec_label_pc_116e0.loopexit, label %dec_label_pc_1212c

dec_label_pc_1212c:                               ; preds = %dec_label_pc_120e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1212c = icmp eq i32 %v0_12124, 0
  store i1 %v2_1212c, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v0_12124, 1
  br i1 %tmp376, label %dec_label_pc_11e84, label %dec_label_pc_12134

dec_label_pc_12134:                               ; preds = %dec_label_pc_1212c
  %v0_12134 = load i32, i32* @r6, align 4
  %v1_12134 = add i32 %v0_12134, 20
  %v2_12134 = inttoptr i32 %v1_12134 to i16*
  %v3_12134 = load i16, i16* %v2_12134, align 2
  %v4_12134 = zext i16 %v3_12134 to i32
  store i32 %v4_12134, i32* %r3.global-to-local, align 4
  %v1_12138 = add i32 %v0_12134, 16
  %v2_12138 = inttoptr i32 %v1_12138 to i32*
  %v3_12138 = load i32, i32* %v2_12138, align 4
  store i32 %v3_12138, i32* %r2.global-to-local, align 4
  store i32 %v2_1213c, i32* %ip.global-to-local, align 4
  store i32 %v4_12134, i32* %stack_var_-42, align 4
  store i32 %v3_12138, i32* %stack_var_-60, align 4
  %v1_12148 = inttoptr i32 %v0_12134 to i32*
  %v2_12148 = load i32, i32* %v1_12148, align 4
  store i32 %v2_12148, i32* @sb, align 4
  %v0_1214c = call i32 @function_15714()
  store i32 %v0_1214c, i32* %r0.global-to-local, align 4
  %v7_12150 = icmp eq i32 %v0_1214c, -1
  %.387 = zext i1 %v7_12150 to i32
  store i32 %.387, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1215c = icmp eq i32 %v0_1214c, 0
  store i1 %v2_1215c, i1* %cpsr_z.global-to-local, align 1
  %tmp379 = icmp slt i32 %v0_1214c, 1
  br i1 %tmp379, label %bb380, label %.thread103

.thread103:                                       ; preds = %dec_label_pc_12134
  store i32 1, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_121b4

bb380:                                            ; preds = %dec_label_pc_12134
  store i32 %.387, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12168 = icmp eq i1 %v7_12150, false
  store i1 %v2_12168, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12168, label %dec_label_pc_12170, label %dec_label_pc_121b4

dec_label_pc_12170:                               ; preds = %bb380
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1217c = call i32 @function_1561c(i32 2, i32 1, i32 0)
  store i32 %v3_1217c, i32* %r0.global-to-local, align 4
  %v2_12180 = icmp eq i32 %v3_1217c, -1
  store i1 %v2_12180, i1* %cpsr_c.global-to-local, align 1
  %v7_12180 = icmp eq i32 %v3_1217c, -1
  store i1 %v7_12180, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_1217c, i32* @r8, align 4
  br i1 %v7_12180, label %dec_label_pc_1243c, label %dec_label_pc_1218c

dec_label_pc_1218c:                               ; preds = %dec_label_pc_12170
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_12190 = call i32 @function_1255c(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_12198 = call i32 @function_1255c(i32 19)
  %v0_1219c = load i32, i32* @sl, align 4
  store i32 %v0_1219c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v2_121a4 = inttoptr i32 %v0_1219c to i32*
  %v3_121a4 = call i32 @function_12498(i32 18, i32* %v2_121a4)
  store i32 %v3_121a4, i32* %r0.global-to-local, align 4
  %v1_121a8 = call i32 @function_1033c(i32 %v3_121a4)
  store i32 %v1_121a8, i32* %r0.global-to-local, align 4
  store i32 %v1_121a8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_121ac = icmp eq i32 %v1_121a8, 0
  store i1 %v3_121ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_121ac, label %dec_label_pc_121b4, label %dec_label_pc_1231c

dec_label_pc_121b4:                               ; preds = %.thread103, %dec_label_pc_1218c, %bb380
  %v0_121b4 = load i32, i32* @r6, align 4
  %v1_121b4 = add i32 %v0_121b4, 4
  %v2_121b4 = inttoptr i32 %v1_121b4 to i32*
  %v3_121b4 = load i32, i32* %v2_121b4, align 4
  store i32 %v3_121b4, i32* @r0, align 4
  %v1_121b8 = call i32 @function_165e8(i32 %v3_121b4)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_121c4 = load i32, i32* @r6, align 4
  %v2_121c4 = add i32 %v1_121c4, 4
  %v3_121c4 = inttoptr i32 %v2_121c4 to i32*
  store i32 -1, i32* %v3_121c4, align 4
  %v0_121c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_121c8 = load i32, i32* @r6, align 4
  %v2_121c8 = add i32 %v1_121c8, 12
  %v3_121c8 = inttoptr i32 %v2_121c8 to i32*
  store i32 %v0_121c8, i32* %v3_121c8, align 4
  br label %dec_label_pc_11e84

dec_label_pc_121d0:                               ; preds = %dec_label_pc_116fc
  br i1 %v2_11724, label %dec_label_pc_1179c, label %dec_label_pc_121d4

dec_label_pc_121d4:                               ; preds = %dec_label_pc_121d0
  %v3_121d4 = icmp eq i32 %v4_11720, -1
  store i1 %v3_121d4, i1* %cpsr_c.global-to-local, align 1
  %v8_121d4 = icmp eq i32 %v4_11720, -1
  store i1 %v8_121d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_121d4, label %dec_label_pc_117a8, label %dec_label_pc_1174c

dec_label_pc_121e0:                               ; preds = %dec_label_pc_116ec
  store i32 %.pre, i32* %r0.global-to-local, align 4
  %v1_121e8 = add i32 %v0_121e0, 92
  store i32 %v1_121e8, i32* %r1.global-to-local, align 4
  store i32 192, i32* %r2.global-to-local, align 4
  %v3_121f0 = inttoptr i32 %.pre to i8*
  %v4_121f0 = call i32 @function_15ec4(i8* %v3_121f0, i32 %v1_121e8, i32 192)
  store i32 %v4_121f0, i32* %r0.global-to-local, align 4
  %v0_121f4 = load i32, i32* @r6, align 4
  %v1_121f4 = add i32 %v0_121f4, 24
  %v2_121f4 = inttoptr i32 %v1_121f4 to i32*
  %v3_121f4 = load i32, i32* %v2_121f4, align 4
  %v1_121f8 = add i32 %v3_121f4, -64
  store i32 %v1_121f8, i32* %r3.global-to-local, align 4
  store i32 %v1_121f8, i32* %v2_121f4, align 4
  br label %dec_label_pc_116fc

dec_label_pc_12204:                               ; preds = %dec_label_pc_12038
  store i32 %v2_11ff8, i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_12210 = add i32 %v0_12024, 4
  %v2_12210 = inttoptr i32 %v1_12210 to i32*
  %v3_12210 = load i32, i32* %v2_12210, align 4
  store i32 %v3_12210, i32* @r0, align 4
  %v4_12214 = call i32 @function_1553c(i32 %v3_12210, i32 %v2_11ff8, i32 3, i32 16384)
  store i32 %v4_12214, i32* %r0.global-to-local, align 4
  %v0_12218 = load i32, i32* @r6, align 4
  %v1_12218 = add i32 %v0_12218, 4
  %v2_12218 = inttoptr i32 %v1_12218 to i32*
  %v3_12218 = load i32, i32* %v2_12218, align 4
  store i32 %v3_12218, i32* @r0, align 4
  br label %dec_label_pc_11fc8

dec_label_pc_12228:                               ; preds = %dec_label_pc_11854
  %v0_12228 = load i32, i32* @r6, align 4
  store i32 %v0_12228, i32* @r0, align 4
  %v0_1222c = call i32 @function_10888()
  store i32 %v0_1222c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11890

dec_label_pc_12234:                               ; preds = %dec_label_pc_116a4
  store i32 4, i32* @r2, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_123a4, i32* %r3.global-to-local, align 4
  store i32 %v2_11d9c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_1225c = call i32 @function_152cc(i32 %v3_11698, i32 1, i32 4, i32 %v2_123a4, i32 %v2_11d9c)
  %v3_12260 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_12260, i32* %r3.global-to-local, align 4
  %v2_12264 = or i32 %v3_12260, %v5_1225c
  store i32 %v2_12264, i32* %r0.global-to-local, align 4
  %v4_12264 = icmp eq i32 %v2_12264, 0
  store i1 %v4_12264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_12264, label %dec_label_pc_1226c, label %dec_label_pc_12300

dec_label_pc_1226c:                               ; preds = %dec_label_pc_12234
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_12270 = load i32, i32* @r6, align 4
  %v2_12270 = add i32 %v1_12270, 12
  %v3_12270 = inttoptr i32 %v2_12270 to i32*
  store i32 2, i32* %v3_12270, align 4
  %v0_12274 = call i32 @function_10038()
  store i32 %v0_12274, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_230e4.204 to i32), i32* %r3.global-to-local, align 4
  %v2_1227c = load i16, i16* bitcast (i16** @global_var_230e4.204 to i16*), align 4
  %v3_1227c = zext i16 %v2_1227c to i32
  store i32 %v3_1227c, i32* %r1.global-to-local, align 4
  %v3_12280 = call i32 @function_134e4(i32 %v0_12274, i32 %v3_1227c)
  store i32 %v3_12280, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230b4.200 to i32), i32* %r3.global-to-local, align 4
  %v2_12288 = load i32, i32* @global_var_230b4.200, align 4
  store i32 %v2_12288, i32* %ip.global-to-local, align 4
  %v1_12290 = load i32, i32* @r4, align 4
  %v9_12290 = icmp eq i32 %v2_12288, %v1_12290
  store i1 %v9_12290, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_1227c, i32* %r1.global-to-local, align 4
  %v7_12298 = icmp sgt i32 %v2_12288, %v1_12290
  br i1 %v7_12298, label %dec_label_pc_1229c, label %dec_label_pc_122dc

dec_label_pc_1229c:                               ; preds = %dec_label_pc_1226c
  %v2_122a0 = load i32, i32* @global_var_230e0.202, align 4
  store i32 %v2_122a0, i32* %r3.global-to-local, align 4
  store i32 %v1_12290, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_122bc

dec_label_pc_122ac:                               ; preds = %dec_label_pc_122cc, %dec_label_pc_122bc
  %v1_122ac = add i32 %v0_122ac, 1
  store i32 %v1_122ac, i32* %r2.global-to-local, align 4
  %v9_122b0 = icmp eq i32 %v1_122ac, %v2_12288
  %v1_122b4 = add i32 %v0_122b4, 16
  store i32 %v1_122b4, i32* %r3.global-to-local, align 4
  br i1 %v9_122b0, label %dec_label_pc_122dc.loopexit, label %dec_label_pc_122bc

dec_label_pc_122bc:                               ; preds = %dec_label_pc_122ac, %dec_label_pc_1229c
  %v0_122ac = phi i32 [ %v1_122ac, %dec_label_pc_122ac ], [ %v1_12290, %dec_label_pc_1229c ]
  %v0_122b4 = phi i32 [ %v1_122b4, %dec_label_pc_122ac ], [ %v2_122a0, %dec_label_pc_1229c ]
  store i32 %v0_122b4, i32* %r0.global-to-local, align 4
  %v1_122c0 = add i32 %v0_122b4, 8
  %v2_122c0 = inttoptr i32 %v1_122c0 to i16*
  %v3_122c0 = load i16, i16* %v2_122c0, align 2
  %v4_122c0 = zext i16 %v3_122c0 to i32
  store i32 %v4_122c0, i32* %r3.global-to-local, align 4
  %tmp381 = icmp ugt i16 %v3_122c0, %v2_1227c
  br i1 %tmp381, label %dec_label_pc_122ac, label %dec_label_pc_122cc

dec_label_pc_122cc:                               ; preds = %dec_label_pc_122bc
  %v1_122cc = add i32 %v0_122b4, 10
  %v2_122cc = inttoptr i32 %v1_122cc to i16*
  %v3_122cc = load i16, i16* %v2_122cc, align 2
  %v4_122cc = zext i16 %v3_122cc to i32
  store i32 %v4_122cc, i32* %r3.global-to-local, align 4
  %v3_122d0 = icmp uge i16 %v3_122cc, %v2_1227c
  %v9_122d0 = icmp eq i16 %v3_122cc, %v2_1227c
  %v2_122d4 = xor i1 %v3_122d0, true
  %v3_122d4 = or i1 %v9_122d0, %v2_122d4
  br i1 %v3_122d4, label %dec_label_pc_122ac, label %dec_label_pc_122e0.loopexit

dec_label_pc_122dc.loopexit:                      ; preds = %dec_label_pc_122ac
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_122dc

dec_label_pc_122dc:                               ; preds = %dec_label_pc_122dc.loopexit, %dec_label_pc_1226c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_122e0

dec_label_pc_122e0.loopexit:                      ; preds = %dec_label_pc_122cc
  store i1 %v3_122d0, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_122e0

dec_label_pc_122e0:                               ; preds = %dec_label_pc_122e0.loopexit, %dec_label_pc_122dc
  %v0_122f4 = phi i32 [ %v0_122b4, %dec_label_pc_122e0.loopexit ], [ 0, %dec_label_pc_122dc ]
  %v0_122e0 = load i32, i32* @r6, align 4
  %v1_122e0 = add i32 %v0_122e0, 4
  %v2_122e0 = inttoptr i32 %v1_122e0 to i32*
  %v3_122e0 = load i32, i32* %v2_122e0, align 4
  %v3_122e4 = udiv i32 %v3_122e0, 32
  store i32 %v3_122e4, i32* %r2.global-to-local, align 4
  %v1_122e8 = urem i32 %v3_122e0, 32
  store i32 %v1_122e8, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_122ec = mul nuw nsw i32 %v3_122e4, 4
  store i32 %v3_122ec, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_122f4 = inttoptr i32 %v0_122e0 to i32*
  store i32 %v0_122f4, i32* %v2_122f4, align 4
  %v0_122f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_122f8 = load i32, i32* @r6, align 4
  %v2_122f8 = add i32 %v1_122f8, 24
  %v3_122f8 = inttoptr i32 %v2_122f8 to i32*
  store i32 %v0_122f8, i32* %v3_122f8, align 4
  %v0_116cc.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_116d4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_116c8

dec_label_pc_12300:                               ; preds = %dec_label_pc_12234
  %v0_12300 = load i32, i32* @r6, align 4
  %v1_12300 = add i32 %v0_12300, 4
  %v2_12300 = inttoptr i32 %v1_12300 to i32*
  %v3_12300 = load i32, i32* %v2_12300, align 4
  store i32 %v3_12300, i32* @r0, align 4
  %v1_12304 = call i32 @function_165e8(i32 %v3_12300)
  store i32 %v1_12304, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1230c = load i32, i32* @r4, align 4
  %v1_1230c = load i32, i32* @r6, align 4
  %v2_1230c = add i32 %v1_1230c, 12
  %v3_1230c = inttoptr i32 %v2_1230c to i32*
  store i32 %v0_1230c, i32* %v3_1230c, align 4
  %v0_12310 = load i32, i32* %r3.global-to-local, align 4
  %v1_12310 = load i32, i32* @r6, align 4
  %v2_12310 = add i32 %v1_12310, 4
  %v3_12310 = inttoptr i32 %v2_12310 to i32*
  store i32 %v0_12310, i32* %v3_12310, align 4
  %v0_12314 = load i32, i32* @r4, align 4
  %v1_12314 = trunc i32 %v0_12314 to i8
  %v2_12314 = load i32, i32* @r6, align 4
  %v3_12314 = add i32 %v2_12314, 284
  %v4_12314 = inttoptr i32 %v3_12314 to i8*
  store i8 %v1_12314, i8* %v4_12314, align 1
  br label %dec_label_pc_11804

dec_label_pc_1231c:                               ; preds = %dec_label_pc_1218c
  store i32 %v2_1213c, i32* @lr, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_12328 = add i32 %v1_121a8, 4
  %v2_12328 = inttoptr i32 %v1_12328 to i32*
  %v3_12328 = load i32, i32* %v2_12328, align 4
  store i32 %v3_12328, i32* @r4, align 4
  %v0_1232c = call i32 @function_10038()
  store i32 %v0_1232c, i32* %r0.global-to-local, align 4
  %v0_12330 = load i32, i32* @r5, align 4
  %v1_12330 = inttoptr i32 %v0_12330 to i8*
  %v2_12330 = load i8, i8* %v1_12330, align 1
  %v3_12330 = zext i8 %v2_12330 to i32
  store i32 %v3_12330, i32* %r1.global-to-local, align 4
  %v2_12334 = call i32 @function_134e4(i32 %v0_1232c, i32 %v3_12330)
  store i32 %v2_12334, i32* %r0.global-to-local, align 4
  %v0_12338 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_12338 = mul nuw nsw i32 %v3_12330, 4
  %v5_12338 = add i32 %v0_12338, %v4_12338
  %v6_12338 = inttoptr i32 %v5_12338 to i32*
  %v7_12338 = load i32, i32* %v6_12338, align 4
  store i32 %v7_12338, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v0_12340 = load i32, i32* @sl, align 4
  store i32 %v0_12340, i32* %r1.global-to-local, align 4
  %v2_12348 = inttoptr i32 %v0_12340 to i32*
  %v3_12348 = call i32 @function_12498(i32 19, i32* %v2_12348)
  store i32 %v2_1213c, i32* %r1.global-to-local, align 4
  %v0_12358 = load i32, i32* @r5, align 4
  store i32 %v0_12358, i32* %r0.global-to-local, align 4
  %v1_1235c = call i32 @function_10314(i32 %v0_12358)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_12364 = call i32 @function_124bc(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_1236c = call i32 @function_124bc(i32 19)
  %v0_12374 = load i32, i32* @r8, align 4
  store i32 %v0_12374, i32* %r0.global-to-local, align 4
  store i32 %v2_12378, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_12380 = call i32 @function_15260(i32 %v0_12374, i32 %v2_12378, i32 16)
  store i32 %v3_12380, i32* %r0.global-to-local, align 4
  %v3_12384 = icmp eq i32 %v3_12380, -1
  store i1 %v3_12384, i1* %cpsr_c.global-to-local, align 1
  %v8_12384 = icmp eq i32 %v3_12380, -1
  store i1 %v8_12384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12384, label %dec_label_pc_1238c, label %dec_label_pc_1239c

dec_label_pc_1238c:                               ; preds = %dec_label_pc_1231c
  %v0_1238c = load i32, i32* @r8, align 4
  store i32 %v0_1238c, i32* @r0, align 4
  %v1_12390 = call i32 @function_165e8(i32 %v0_1238c)
  %v0_12394 = load i32, i32* @sl, align 4
  store i32 %v0_12394, i32* %r0.global-to-local, align 4
  %v1_12398 = call i32 @function_139ac(i32 %v0_12394)
  store i32 %v1_12398, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1239c

dec_label_pc_1239c:                               ; preds = %dec_label_pc_1231c, %dec_label_pc_1238c
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_123a4, i32* @r1, align 4
  %v0_123a8 = load i32, i32* @r8, align 4
  store i32 %v0_123a8, i32* @r0, align 4
  %v0_123ac = load i32, i32* @sl, align 4
  store i32 %v0_123ac, i32* %stack_var_-56, align 4
  %v5_123b0 = call i32 @function_1553c(i32 %v0_123a8, i32 %v2_123a4, i32 1, i32 16384)
  store i32 %v2_11d9c, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_123c4 = load i32, i32* @r8, align 4
  store i32 %v0_123c4, i32* @r0, align 4
  %v4_123c8 = call i32 @function_1553c(i32 %v0_123c4, i32 %v2_11d9c, i32 4, i32 16384)
  store i32 %v2_123d0, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_123dc = load i32, i32* @r8, align 4
  store i32 %v0_123dc, i32* @r0, align 4
  %v4_123e0 = call i32 @function_1553c(i32 %v0_123dc, i32 %v2_123d0, i32 2, i32 16384)
  %v0_123e4 = load i32, i32* @sb, align 4
  %v1_123e4 = add i32 %v0_123e4, 12
  store i32 %v1_123e4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_123f0 = load i32, i32* @r8, align 4
  store i32 %v0_123f0, i32* @r0, align 4
  %v4_123f4 = call i32 @function_1553c(i32 %v0_123f0, i32 %v1_123e4, i32 1, i32 16384)
  store i32 %v4_123f4, i32* %r0.global-to-local, align 4
  %v0_123f8 = load i32, i32* @sb, align 4
  %v1_123f8 = inttoptr i32 %v0_123f8 to i32*
  %v2_123f8 = load i32, i32* %v1_123f8, align 4
  store i32 %v2_123f8, i32* @r1, align 4
  %v1_123fc = add i32 %v0_123f8, 12
  %v2_123fc = inttoptr i32 %v1_123fc to i8*
  %v3_123fc = load i8, i8* %v2_123fc, align 1
  %v4_123fc = zext i8 %v3_123fc to i32
  store i32 %v4_123fc, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12404 = load i32, i32* @r8, align 4
  store i32 %v0_12404, i32* @r0, align 4
  %v4_12408 = call i32 @function_1553c(i32 %v0_12404, i32 %v2_123f8, i32 %v4_123fc, i32 16384)
  %v0_1240c = load i32, i32* @sb, align 4
  %v1_1240c = add i32 %v0_1240c, 13
  store i32 %v1_1240c, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12418 = load i32, i32* @r8, align 4
  store i32 %v0_12418, i32* @r0, align 4
  %v4_1241c = call i32 @function_1553c(i32 %v0_12418, i32 %v1_1240c, i32 1, i32 16384)
  %v0_12420 = load i32, i32* @r8, align 4
  store i32 %v0_12420, i32* @r0, align 4
  %v0_12424 = load i32, i32* @sb, align 4
  %v1_12424 = add i32 %v0_12424, 13
  %v2_12424 = inttoptr i32 %v1_12424 to i8*
  %v3_12424 = load i8, i8* %v2_12424, align 1
  %v4_12424 = zext i8 %v3_12424 to i32
  store i32 %v4_12424, i32* @r2, align 4
  %v1_12428 = add i32 %v0_12424, 4
  %v2_12428 = inttoptr i32 %v1_12428 to i32*
  %v3_12428 = load i32, i32* %v2_12428, align 4
  store i32 %v3_12428, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12430 = call i32 @function_1553c(i32 %v0_12420, i32 %v3_12428, i32 %v4_12424, i32 16384)
  %v0_12434 = load i32, i32* @r8, align 4
  store i32 %v0_12434, i32* @r0, align 4
  %v1_12438 = call i32 @function_165e8(i32 %v0_12434)
  store i32 %v1_12438, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1243c

dec_label_pc_1243c:                               ; preds = %dec_label_pc_12170, %dec_label_pc_1239c
  %v0_1243c = load i32, i32* @sl, align 4
  store i32 %v0_1243c, i32* %r0.global-to-local, align 4
  %v1_12440 = call i32 @function_139ac(i32 %v0_1243c)
  store i32 %v1_12440, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12444

dec_label_pc_12444:                               ; preds = %dec_label_pc_11e60, %dec_label_pc_1243c
  %v0_12444 = load i32, i32* @fp, align 4
  store i32 %v0_12444, i32* %r0.global-to-local, align 4
  %v0_12448 = load i32, i32* @r6, align 4
  %v1_12448 = add i32 %v0_12448, 24
  %v2_12448 = inttoptr i32 %v1_12448 to i32*
  %v3_12448 = load i32, i32* %v2_12448, align 4
  store i32 %v3_12448, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a4d4.341 to i32), i32* %r2.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v5_12454 = call i32 @function_12ea4(i32 %v0_12444, i32 %v3_12448, i32 ptrtoint ([6 x i8]* @global_var_1a4d4.341 to i32), i32 5)
  store i32 %v5_12454, i32* %r0.global-to-local, align 4
  %v3_12458 = icmp eq i32 %v5_12454, -1
  store i1 %v3_12458, i1* %cpsr_c.global-to-local, align 1
  %v8_12458 = icmp eq i32 %v5_12454, -1
  store i1 %v8_12458, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_12454, i32* @r7, align 4
  br i1 %v3_12458, label %dec_label_pc_116e0.loopexit, label %dec_label_pc_11e7c

dec_label_pc_12468:                               ; preds = %dec_label_pc_11528
  store i32 %v3_12468, i32* %r0.global-to-local, align 4
  %v3_1246c = udiv i32 %v3_12468, 32
  %v3_12470 = mul nuw nsw i32 %v3_1246c, 4
  store i32 %v2_12474, i32* @lr, align 4
  %v2_12478 = add i32 %v3_12470, %v2_12474
  store i32 %v2_12478, i32* %r3.global-to-local, align 4
  %v1_1247c = add i32 %v2_12478, -312
  %v2_1247c = inttoptr i32 %v1_1247c to i32*
  %v3_1247c = load i32, i32* %v2_1247c, align 4
  %v1_12480 = urem i32 %v3_12468, 32
  store i32 %v1_12480, i32* %r1.global-to-local, align 4
  %v7_12484 = shl i32 1, %v1_12480
  %v8_12484 = or i32 %v3_1247c, %v7_12484
  store i32 %v8_12484, i32* %r2.global-to-local, align 4
  %v1_12488 = load i32, i32* @r5, align 4
  %v3_12488 = icmp uge i32 %v3_12468, %v1_12488
  store i1 %v3_12488, i1* %cpsr_c.global-to-local, align 1
  %v9_12488 = icmp eq i32 %v3_12468, %v1_12488
  store i1 %v9_12488, i1* %cpsr_z.global-to-local, align 1
  %v7_1248c = icmp sgt i32 %v3_12468, %v1_12488
  br i1 %v7_1248c, label %bb382, label %bb383

bb382:                                            ; preds = %dec_label_pc_12468
  store i32 %v3_12468, i32* @r5, align 4
  br label %bb383

bb383:                                            ; preds = %dec_label_pc_12468, %bb382
  store i32 %v8_12484, i32* %v2_1247c, align 4
  br label %bb334

; uselistorder directives
  uselistorder i32 %v1_12488, { 0, 2, 1 }
  uselistorder i32 %v1_12480, { 1, 0 }
  uselistorder i32 %v5_12454, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_122e0, { 1, 0 }
  uselistorder i1 %v3_122d0, { 1, 0 }
  uselistorder i32 %v0_122b4, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_12288, { 0, 2, 1, 3 }
  uselistorder i32 %v3_12218, { 1, 0 }
  uselistorder i1 %v7_12180, { 1, 0 }
  uselistorder i32 %v3_1217c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_12168, { 1, 0 }
  uselistorder i32 %.387, { 1, 0 }
  uselistorder i1 %v7_12150, { 1, 0 }
  uselistorder i32 %v0_1214c, { 2, 1, 0, 3 }
  uselistorder i1 %v7_12124, { 1, 0 }
  uselistorder i32 %v0_12124, { 2, 1, 0, 3 }
  uselistorder i32 %v0_120a8, { 1, 0 }
  uselistorder i32 %v0_1206c, { 1, 0 }
  uselistorder i32 %v0_12058.pr, { 1, 0 }
  uselistorder i32 %v0_12024, { 1, 2, 0 }
  uselistorder i32 %v0_11fe4, { 1, 0 }
  uselistorder i32 %v1_11fdc, { 1, 0 }
  uselistorder i32 %v1_11fd4, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_11fd0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_11fd0, { 0, 2, 1 }
  uselistorder i32 %v0_11fb0.pr, { 1, 0 }
  uselistorder i32 %v0_11f90.pr, { 1, 0 }
  uselistorder i1 %v7_11f68, { 1, 0 }
  uselistorder i1 %v2_11f58, { 1, 0, 2 }
  uselistorder i1 %v2_11f3c, { 1, 0, 2 }
  uselistorder i32 %v1_11f5c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11f30, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_11f60, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v3_11f24, { 0, 2, 1, 3 }
  uselistorder i1 %v7_11f0c, { 1, 0 }
  uselistorder i32 %v5_11f08, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 %v1_11ef4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11ef4, { 0, 2, 1 }
  uselistorder i32 %v0_11eec, { 1, 0 }
  uselistorder i1 %v7_11ee8, { 1, 0 }
  uselistorder i1 %v7_11ee0, { 1, 0 }
  uselistorder i1 %v8_11ed8, { 1, 0 }
  uselistorder i1 %v7_11ebc, { 1, 0 }
  uselistorder i1 %v7_11eb4, { 1, 0 }
  uselistorder i1 %v8_11eac, { 1, 0 }
  uselistorder i32 %v1_11e94, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_11e90, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11e7c, { 1, 0 }
  uselistorder i1 %v7_11e70, { 1, 0 }
  uselistorder i32 %v5_11e6c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11e58, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11e58, { 0, 2, 1 }
  uselistorder i32 %v0_11e50, { 1, 0 }
  uselistorder i1 %v7_11e4c, { 1, 0 }
  uselistorder i1 %v7_11e44, { 1, 0 }
  uselistorder i1 %v7_11e3c, { 1, 0 }
  uselistorder i1 %v8_11e34, { 1, 0 }
  uselistorder i1 %v7_11e18, { 1, 0 }
  uselistorder i1 %v7_11e10, { 1, 0 }
  uselistorder i1 %v7_11e08, { 1, 0 }
  uselistorder i1 %v8_11e00, { 1, 0 }
  uselistorder i32 %v1_11de8, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v3_11de4, { 1, 0, 2, 3 }
  uselistorder i1 %v8_11d84, { 1, 0 }
  uselistorder i8 %v3_11d7c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11d74, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11d74, { 0, 2, 1 }
  uselistorder i32 %v0_11d6c, { 1, 0 }
  uselistorder i1 %v7_11d68, { 1, 0 }
  uselistorder i1 %v7_11d60, { 1, 0 }
  uselistorder i1 %v7_11d58, { 1, 0 }
  uselistorder i1 %v7_11d44, { 1, 0 }
  uselistorder i1 %v7_11d3c, { 1, 0 }
  uselistorder i1 %v7_11d34, { 1, 0 }
  uselistorder i1 %v8_11d2c, { 1, 0 }
  uselistorder i32 %v1_11d14, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11cb0, { 1, 0 }
  uselistorder i8 %v3_11ca8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11ca0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11ca0, { 0, 2, 1 }
  uselistorder i32 %v0_11c98, { 1, 0 }
  uselistorder i1 %v7_11c94, { 1, 0 }
  uselistorder i1 %v7_11c8c, { 1, 0 }
  uselistorder i1 %v7_11c84, { 1, 0 }
  uselistorder i1 %v7_11c70, { 1, 0 }
  uselistorder i1 %v7_11c68, { 1, 0 }
  uselistorder i1 %v7_11c60, { 1, 0 }
  uselistorder i1 %v8_11c58, { 1, 0 }
  uselistorder i32 %v1_11c40, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11bdc, { 1, 0 }
  uselistorder i8 %v3_11bd4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11bcc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11bcc, { 0, 2, 1 }
  uselistorder i32 %v0_11bc4, { 1, 0 }
  uselistorder i1 %v7_11bc0, { 1, 0 }
  uselistorder i1 %v7_11bb8, { 1, 0 }
  uselistorder i1 %v7_11bb0, { 1, 0 }
  uselistorder i1 %v7_11a98, { 1, 0 }
  uselistorder i1 %v7_11a90, { 1, 0 }
  uselistorder i1 %v7_11a88, { 1, 0 }
  uselistorder i1 %v8_11a80, { 1, 0 }
  uselistorder i32 %v1_11a68, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11a04, { 1, 0 }
  uselistorder i8 %v3_119fc, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_119f4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_119f4, { 0, 2, 1 }
  uselistorder i32 %v0_119ec, { 1, 0 }
  uselistorder i1 %v7_119e8, { 1, 0 }
  uselistorder i1 %v7_119e0, { 1, 0 }
  uselistorder i1 %v7_119d8, { 1, 0 }
  uselistorder i1 %v7_119c4, { 1, 0 }
  uselistorder i1 %v7_119bc, { 1, 0 }
  uselistorder i1 %v7_119b4, { 1, 0 }
  uselistorder i1 %v8_119ac, { 1, 0 }
  uselistorder i32 %v1_11994, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11930, { 1, 0 }
  uselistorder i8 %v3_11928, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11920, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11920, { 0, 2, 1 }
  uselistorder i32 %v0_11918, { 1, 0 }
  uselistorder i1 %v7_11914, { 1, 0 }
  uselistorder i1 %v7_1190c, { 1, 0 }
  uselistorder i1 %v7_11904, { 1, 0 }
  uselistorder i1 %v7_118f0, { 1, 0 }
  uselistorder i1 %v7_118e8, { 1, 0 }
  uselistorder i1 %v7_118e0, { 1, 0 }
  uselistorder i1 %v8_118d8, { 1, 0 }
  uselistorder i32 %v1_118c0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_118ac, { 1, 2, 0 }
  uselistorder i32 %v2_11898, { 1, 0 }
  uselistorder i32 %v0_11898, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_11894, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_1186c, { 2, 1, 0 }
  uselistorder i1 %v7_1184c, { 1, 0 }
  uselistorder i32 %v1_11808, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_117e4, { 1, 0 }
  uselistorder i32 %v1_117d8, { 2, 1, 0 }
  uselistorder i32 %v1_117d4, { 1, 0 }
  uselistorder i32 %v3_11764, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11764, { 22, 20, 4, 0, 19, 5, 6, 23, 7, 8, 21, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 3, 2, 1 }
  uselistorder i32 %v1_11740, { 1, 2, 3, 0 }
  uselistorder i32 %v3_1173c, { 1, 0 }
  uselistorder i32 %v4_11720, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_1170c, { 1, 0, 2 }
  uselistorder i32 %v3_11708, { 1, 0, 2 }
  uselistorder i32 %v0_121e0, { 1, 0, 2 }
  uselistorder i32 %v3_116d0, { 1, 0 }
  uselistorder i32 %v1_116b8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_116b4, { 1, 0 }
  uselistorder i32 %v3_116ac, { 1, 2, 0 }
  uselistorder i1 %v7_1169c, { 1, 0 }
  uselistorder i32 %v3_11698, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_1168c, { 1, 0 }
  uselistorder i32 %v2_123a4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_11d9c, { 4, 5, 1, 0, 3, 10, 7, 9, 8, 6, 2 }
  uselistorder i32 %v2_1200c, { 1, 2, 0 }
  uselistorder i32 %v1_11634, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11634, { 0, 1, 3, 2 }
  uselistorder i32 %v1_11618, { 1, 0 }
  uselistorder i32 %v1_115ec, { 2, 1, 0 }
  uselistorder i32 %v1_115e8, { 1, 0 }
  uselistorder i1 %v2_115c8, { 1, 0, 2 }
  uselistorder i32 %v0_115c4, { 1, 0, 2 }
  uselistorder i1 %v7_11590, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_11590, { 1, 0, 2 }
  uselistorder i32 %v2_11588, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1157c, { 1, 0, 2 }
  uselistorder i32 %v0_11580, { 1, 0 }
  uselistorder i32 %v1_11564, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_11558, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11558, { 0, 2, 1 }
  uselistorder i32 %v1_11548, { 1, 0 }
  uselistorder i32 %v3_12468, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_12474, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_11490, { 1, 0 }
  uselistorder i32 %v1_11478, { 0, 2, 3, 1 }
  uselistorder i32 %v0_11484, { 0, 3, 2, 1 }
  uselistorder i32 %v0_11434, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i1 %v2_1140c, { 1, 0 }
  uselistorder i32 %v0_113d8, { 1, 0 }
  uselistorder i32 %v0_113c0, { 1, 0 }
  uselistorder i32 %v0_11384, { 1, 0 }
  uselistorder i32 %v1_1130c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_11270, { 1, 0 }
  uselistorder i32 %v5_11248, { 1, 0 }
  uselistorder i32 %v3_11238, { 1, 2, 0, 3 }
  uselistorder i32 %v3_11234, { 1, 0 }
  uselistorder i32 %v5_11218, { 1, 0 }
  uselistorder i1 %v2_111a0, { 1, 0 }
  uselistorder i1 %v3_11184, { 1, 0, 2 }
  uselistorder i1 %v2_11170, { 1, 0 }
  uselistorder i1 %v2_1114c, { 1, 0 }
  uselistorder i32 %v1_110fc, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_110e8, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_110e4, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_110cc, { 1, 0 }
  uselistorder i32 %stack_var_-1884.0, { 0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 7, 9, 11, 14, 13 }
  uselistorder i32 %stack_var_-1876.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10c38, { 1, 0 }
  uselistorder i32 %v0_10bf4, { 2, 1, 3, 0 }
  uselistorder i1 %v7_10b94, { 1, 0 }
  uselistorder i32 %v3_10b8c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_10b78, { 1, 0 }
  uselistorder i32 %v2_10b5c, { 1, 0, 2 }
  uselistorder i32 %v0_10b48, { 1, 2, 0 }
  uselistorder i32 %storemerge268, { 1, 0 }
  uselistorder i32 %v0_10abc, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-96, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 7, 8, 9, 5, 10, 0, 11, 3, 12, 1, 13, 2, 14, 4, 15, 6, 16 }
  uselistorder i32 %tmp273, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 83, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 85, 86, 87, 88, 90, 89, 91, 92, 93, 94, 95, 0, 96, 73, 165, 74, 75, 18, 19, 20, 61, 62, 63, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 79, 76, 77, 80, 103, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 125, 122, 128, 127, 81, 129, 130, 82, 131, 132, 133, 134, 135, 136, 137, 138, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 166, 169, 168, 152, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151 }
  uselistorder i32* %r2.global-to-local, { 29, 19, 20, 30, 31, 32, 33, 21, 22, 23, 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 55, 56, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 54, 45, 46, 48, 47, 44, 49, 50, 27, 52, 51, 28, 57, 58, 59, 60, 134, 136, 135, 137, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133 }
  uselistorder i32* %r1.global-to-local, { 32, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 25, 26, 27, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 124, 125, 30, 31, 39, 40, 41, 42, 43, 44, 46, 47, 48, 45, 49, 50, 126, 127, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123 }
  uselistorder i32* %r0.global-to-local, { 92, 51, 50, 53, 52, 54, 55, 56, 57, 59, 58, 60, 62, 61, 63, 64, 66, 65, 95, 93, 94, 96, 99, 98, 97, 69, 2, 104, 100, 67, 68, 70, 72, 71, 73, 74, 76, 75, 77, 79, 78, 81, 83, 82, 84, 7, 9, 48, 49, 4, 3, 5, 6, 8, 13, 10, 11, 12, 17, 14, 15, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 46, 45, 47, 87, 86, 88, 89, 85, 90, 91, 118, 101, 102, 103, 105, 106, 107, 109, 108, 110, 114, 111, 80, 112, 113, 115, 117, 116, 120, 119, 122, 126, 125, 123, 124, 127, 128, 129, 121, 131, 130, 132, 133, 135, 134, 137, 136, 221, 222, 0, 1, 223, 224, 226, 225, 220, 227, 138, 140, 139, 142, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 206, 228, 208, 209, 210, 215, 211, 212, 213, 214, 216, 217, 219, 218 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 0, 6, 7, 10, 8, 9, 11, 1, 12, 13, 20, 21, 22, 23, 24, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 133, 116, 117, 62, 63, 134, 135, 136, 118, 119, 120, 3, 121, 124, 125, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 122, 23, 24, 29, 25, 26, 27, 28, 30, 31, 32, 33, 34, 123, 115, 35, 41, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 52, 53, 48, 49, 50, 54, 55, 56, 57, 59, 61, 70, 71, 72, 66, 67, 68, 73, 74, 75, 76, 77, 78, 82, 83, 84, 79, 80, 81, 85, 86, 87, 88, 89, 90, 94, 95, 96, 91, 92, 93, 97, 98, 99, 100, 101, 102, 106, 107, 108, 103, 104, 105, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 142, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 132, 164, 126, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 161, 158, 159, 64, 69, 58, 165, 60, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 2, 212, 213, 214, 215, 216, 1, 217, 218, 219, 0, 220, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 65, 190 }
  uselistorder i1* %cpsr_c.global-to-local, { 130, 113, 114, 115, 131, 58, 60, 132, 133, 116, 118, 119, 3, 120, 123, 124, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 117, 20, 21, 26, 22, 23, 24, 25, 27, 28, 29, 30, 31, 122, 112, 32, 38, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 49, 50, 45, 46, 47, 53, 54, 55, 56, 57, 59, 66, 68, 69, 63, 64, 65, 70, 71, 72, 73, 74, 75, 79, 80, 81, 76, 77, 78, 82, 83, 84, 85, 86, 87, 91, 92, 93, 88, 89, 90, 94, 95, 96, 97, 98, 99, 103, 104, 105, 100, 101, 102, 106, 107, 108, 109, 110, 111, 126, 127, 128, 139, 135, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 129, 159, 121, 125, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 156, 153, 154, 61, 62, 51, 160, 52, 161, 162, 163, 164, 165, 166, 167, 168, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 2, 207, 208, 209, 210, 211, 1, 212, 213, 214, 0, 215, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 67, 183 }
  uselistorder i32 (i32)* @function_10314, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_230e4.204 to i16*), { 1, 0 }
  uselistorder i16** @global_var_230e4.204, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_230e4.204 to i32), { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_152cc, { 1, 0 }
  uselistorder i32 (i32)* @function_1033c, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 8, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 251, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1a23c.33 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1553c, { 12, 11, 10, 9, 8, 7, 6, 28, 26, 25, 14, 13, 27, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i8*, i32, i32)* @function_15ec4, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_124bc, { 36, 35, 34, 41, 40, 39, 38, 37, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12ea4, { 22, 21, 24, 23, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 1, 0, 3, 2, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32*)* @function_12498, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 49, 50, 51, 52, 53, 54 }
  uselistorder i32 (i32)* @function_1255c, { 43, 42, 41, 48, 47, 46, 45, 44, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 22, 21, 20, 25, 24, 23, 19, 18, 17, 16, 15, 14, 13, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @function_154d0, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_157a0, { 1, 2, 0 }
  uselistorder i32* @sp, { 4, 1, 5, 0, 6, 2, 7, 3 }
  uselistorder i32 ()* @function_10888, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_15498, { 2, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i8 5, { 9, 0, 1, 2, 4, 3, 6, 5, 8, 10, 7 }
  uselistorder i32 16384, { 21, 60, 22, 61, 23, 62, 24, 63, 25, 64, 26, 65, 13, 66, 2, 44, 17, 46, 18, 47, 19, 58, 20, 59, 16, 45, 3, 48, 4, 49, 5, 50, 6, 51, 7, 52, 8, 53, 9, 54, 10, 55, 11, 56, 12, 57, 27, 87, 88, 89, 67, 28, 68, 29, 69, 70, 71, 30, 72, 31, 32, 73, 14, 0, 33, 74, 15, 1, 75, 34, 76, 35, 77, 36, 78, 79, 80, 37, 81, 82, 83, 38, 39, 84, 40, 85, 41, 86, 43, 90, 91, 92, 42, 93 }
  uselistorder i32 (i32, i32, i32, i32)* @function_e5f4, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_e5a4, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 127, { 4, 5, 2, 6, 0, 7, 1, 8, 3, 9 }
  uselistorder i32 126, { 7, 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_1a474.299 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1a40c.277 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1a3f0.271 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a3d0.265 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a3c8.263 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a3b4.259 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a3a0.255 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a398.253 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a390.251 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1a384.249 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a264.247 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a374.243 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a36c.241 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a348.233 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1a340.231 to i32), { 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 7, 25, 8, 26, 9, 27, 10, 28, 11, 29, 12, 30, 13, 31, 14, 15, 16, 32, 17, 33 }
  uselistorder i32 (i32, i32, i32)* @function_10950, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a328.225 to i32), { 0, 34, 1, 35, 2, 36, 3, 37, 4, 38, 5, 39, 6, 40, 7, 41, 8, 42, 9, 43, 10, 44, 11, 45, 12, 46, 13, 47, 14, 48, 15, 49, 16, 50, 17, 51, 18, 52, 19, 53, 20, 54, 21, 22, 23, 55, 24, 56, 25, 57, 26, 58, 27, 59, 28, 60, 29, 61, 30, 62, 31, 63, 32, 64, 33, 65 }
  uselistorder i8* @global_var_230d9.222, { 1, 0 }
  uselistorder i16* @global_var_230ce.221, { 2, 0, 1 }
  uselistorder i8* @global_var_230d8.220, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_230cc.219 to i32), { 1, 0, 2, 3, 4, 5 }
  uselistorder i8 6, { 4, 5, 6, 7, 8, 9, 3, 10, 0, 11, 1, 2 }
  uselistorder i8 64, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_230b8.213 to i32), { 0, 3, 10, 9, 8, 2, 1, 7, 6, 5, 4 }
  uselistorder i32 1024, { 3, 0, 2, 4, 5, 6, 1, 7 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32)* @function_154bc, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_10038, { 75, 11, 6, 5, 4, 3, 2, 72, 74, 73, 71, 10, 9, 8, 7, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_155ac, { 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_13a30, { 3, 2, 5, 4, 13, 12, 11, 10, 9, 8, 7, 6, 1, 0 }
  uselistorder i32* @global_var_2367c.211, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_23678.209, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 6, 0, 1, 4, 5, 7 }
  uselistorder i32* @global_var_230e8.198, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @function_16598, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11 }
  uselistorder i32* @global_var_2365c.94, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* @global_var_23680.196, { 0, 2, 1 }
  uselistorder i32 ()* @function_15714, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %bb383, { 1, 0 }
  uselistorder label %dec_label_pc_12444, { 1, 0 }
  uselistorder label %dec_label_pc_1243c, { 1, 0 }
  uselistorder label %dec_label_pc_1239c, { 1, 0 }
  uselistorder label %dec_label_pc_121b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_120a8, { 1, 0 }
  uselistorder label %dec_label_pc_120a4, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_1206c, { 1, 0 }
  uselistorder label %dec_label_pc_12068, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_12058, { 1, 0 }
  uselistorder label %dec_label_pc_11fe4, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread96, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11fb0, { 1, 0 }
  uselistorder label %.thread92, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f90, { 1, 0 }
  uselistorder label %dec_label_pc_11f7c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11f38, { 1, 0 }
  uselistorder label %dec_label_pc_11f38.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11ef4, { 1, 0 }
  uselistorder label %dec_label_pc_11e84, { 7, 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11e58, { 1, 0 }
  uselistorder label %dec_label_pc_11d8c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11d74, { 1, 0 }
  uselistorder label %dec_label_pc_11cb8, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11ca0, { 1, 0 }
  uselistorder label %dec_label_pc_11be4, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11bcc, { 1, 0 }
  uselistorder label %dec_label_pc_11a0c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_119f4, { 1, 0 }
  uselistorder label %dec_label_pc_11938, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11920, { 1, 0 }
  uselistorder label %dec_label_pc_11804, { 7, 8, 3, 4, 1, 0, 2, 5, 6 }
  uselistorder label %bb346, { 1, 0 }
  uselistorder label %bb344, { 1, 0 }
  uselistorder label %dec_label_pc_1174c, { 1, 0 }
  uselistorder label %.thread50, { 1, 0 }
  uselistorder label %dec_label_pc_116fc, { 1, 0 }
  uselistorder label %dec_label_pc_116ec, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_116e4thread-pre-split.thread477, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_116e4thread-pre-split.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_116ec.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_116e0.loopexit, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_116c8, { 1, 0 }
  uselistorder label %dec_label_pc_11608, { 1, 0 }
  uselistorder label %bb340, { 1, 0 }
  uselistorder label %bb338, { 1, 0 }
  uselistorder label %bb336, { 1, 0 }
  uselistorder label %bb334, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_114fc.dec_label_pc_114fc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_114d8.dec_label_pc_114d8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_114cc, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_114c4, { 1, 0 }
  uselistorder label %dec_label_pc_1149c, { 1, 0 }
  uselistorder label %dec_label_pc_11478, { 1, 0 }
  uselistorder label %dec_label_pc_1132c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_11320, { 1, 0 }
  uselistorder label %dec_label_pc_111b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1118c, { 1, 0 }
  uselistorder label %dec_label_pc_11180, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1115c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11138, { 1, 0 }
  uselistorder label %bb312, { 1, 0 }
  uselistorder label %dec_label_pc_110e4, { 22, 6, 12, 2, 13, 3, 14, 4, 15, 5, 16, 0, 17, 18, 19, 20, 21, 7, 8, 9, 1, 10, 11, 23 }
  uselistorder label %dec_label_pc_10bf4, { 1, 0 }
}

define i32 @function_12498(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_12498:
  store i32 ptrtoint (i32* @global_var_23688.343 to i32), i32* @r2, align 4
  %v3_1249c = mul i32 %arg1, 8
  %v2_124a0 = add i32 %v3_1249c, ptrtoint (i32* @global_var_23688.343 to i32)
  %v2_124a4 = icmp eq i32* %arg2, null
  br i1 %v2_124a4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12498
  %v3_124ac4 = inttoptr i32 %v2_124a0 to i32*
  %v4_124ac5 = load i32, i32* %v3_124ac4, align 4
  br label %bb7

bb:                                               ; preds = %dec_label_pc_12498
  %v2_124a8 = add i32 %v3_1249c, add (i32 ptrtoint (i32* @global_var_23688.343 to i32), i32 4)
  %v3_124a8 = inttoptr i32 %v2_124a8 to i16*
  %v4_124a8 = load i16, i16* %v3_124a8, align 4
  %v5_124a8 = zext i16 %v4_124a8 to i32
  %v3_124ac = inttoptr i32 %v2_124a0 to i32*
  %v4_124ac = load i32, i32* %v3_124ac, align 4
  store i32 %v5_124a8, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_124ac6 = phi i32 [ %v4_124ac5, %.thread ], [ %v4_124ac, %bb ]
  ret i32 %v4_124ac6

; uselistorder directives
  uselistorder i32 %v2_124a0, { 1, 0 }
  uselistorder i32 %v3_1249c, { 1, 0 }
  uselistorder i32* null, { 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 1, 19, 2, 20, 23, 21, 22, 36, 24, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 4, 34, 35 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_124bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_124bc:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_124c4 = mul i32 %arg1, 8
  %v2_124c8 = add i32 %v3_124c4, ptrtoint (i32* @global_var_23688.343 to i32)
  %v2_124cc = load i32, i32* @global_var_23048.346, align 4
  %v1_124d0 = add i32 %v3_124c4, add (i32 ptrtoint (i32* @global_var_23688.343 to i32), i32 4)
  %v2_124d0 = inttoptr i32 %v1_124d0 to i16*
  %v3_124d0 = load i16, i16* %v2_124d0, align 4
  %v3_124d4 = udiv i32 %v2_124cc, 256
  %v2_124d8 = icmp eq i16 %v3_124d0, 0
  %v3_124dc = udiv i32 %v2_124cc, 65536
  %v3_124e0 = load i32, i32* @r4, align 4
  store i32 %v3_124e0, i32* %stack_var_-16, align 4
  %v1_124e4 = urem i32 %v3_124d4, 256
  store i32 %v1_124e4, i32* %r6.global-to-local, align 4
  %v1_124e8 = urem i32 %v3_124dc, 256
  store i32 %v1_124e8, i32* %r5.global-to-local, align 4
  %v3_124ec = udiv i32 %v2_124cc, 16777216
  store i32 %v3_124ec, i32* %r4.global-to-local, align 4
  %v1_124f0 = urem i32 %v2_124cc, 256
  store i32 %v1_124f0, i32* %lr.global-to-local, align 4
  br i1 %v2_124d8, label %dec_label_pc_1254c, label %dec_label_pc_124f8

dec_label_pc_124f8:                               ; preds = %dec_label_pc_124bc
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_124fc = inttoptr i32 %v2_124c8 to i32*
  br label %dec_label_pc_124fc

dec_label_pc_124fc:                               ; preds = %dec_label_pc_124fc.dec_label_pc_124fc_crit_edge, %dec_label_pc_124f8
  %v0_12504 = phi i32 [ %v0_12504.pre, %dec_label_pc_124fc.dec_label_pc_124fc_crit_edge ], [ %v1_124f0, %dec_label_pc_124f8 ]
  %v2_12508 = phi i32 [ %v1_12540, %dec_label_pc_124fc.dec_label_pc_124fc_crit_edge ], [ 0, %dec_label_pc_124f8 ]
  %v2_124fc = load i32, i32* %v1_124fc, align 4
  %v2_12500 = add i32 %v2_124fc, %v2_12508
  %v3_12500 = inttoptr i32 %v2_12500 to i8*
  %v4_12500 = load i8, i8* %v3_12500, align 1
  %v6_12500 = zext i8 %v4_12500 to i32
  %v2_12504 = xor i32 %v6_12500, %v0_12504
  %v1_12508 = trunc i32 %v2_12504 to i8
  store i8 %v1_12508, i8* %v3_12500, align 1
  %v2_1250c = load i32, i32* %v1_124fc, align 4
  %v0_12510 = load i32, i32* %ip.global-to-local, align 4
  %v2_12510 = add i32 %v0_12510, %v2_1250c
  %v3_12510 = inttoptr i32 %v2_12510 to i8*
  %v4_12510 = load i8, i8* %v3_12510, align 1
  %v6_12510 = zext i8 %v4_12510 to i32
  %v0_12514 = load i32, i32* %r6.global-to-local, align 4
  %v2_12514 = xor i32 %v0_12514, %v6_12510
  %v1_12518 = trunc i32 %v2_12514 to i8
  store i8 %v1_12518, i8* %v3_12510, align 1
  %v2_1251c = load i32, i32* %v1_124fc, align 4
  %v0_12520 = load i32, i32* %ip.global-to-local, align 4
  %v2_12520 = add i32 %v0_12520, %v2_1251c
  %v3_12520 = inttoptr i32 %v2_12520 to i8*
  %v4_12520 = load i8, i8* %v3_12520, align 1
  %v6_12520 = zext i8 %v4_12520 to i32
  %v0_12524 = load i32, i32* %r5.global-to-local, align 4
  %v2_12524 = xor i32 %v0_12524, %v6_12520
  %v1_12528 = trunc i32 %v2_12524 to i8
  store i8 %v1_12528, i8* %v3_12520, align 1
  %v2_1252c = load i32, i32* %v1_124fc, align 4
  %v0_12530 = load i32, i32* %ip.global-to-local, align 4
  %v2_12530 = add i32 %v0_12530, %v2_1252c
  %v3_12530 = inttoptr i32 %v2_12530 to i8*
  %v4_12530 = load i8, i8* %v3_12530, align 1
  %v6_12530 = zext i8 %v4_12530 to i32
  %v0_12534 = load i32, i32* %r4.global-to-local, align 4
  %v2_12534 = xor i32 %v0_12534, %v6_12530
  %v1_12538 = trunc i32 %v2_12534 to i8
  store i8 %v1_12538, i8* %v3_12530, align 1
  %v3_1253c = load i16, i16* %v2_124d0, align 4
  %v4_1253c = zext i16 %v3_1253c to i32
  %v0_12540 = load i32, i32* %ip.global-to-local, align 4
  %v1_12540 = add i32 %v0_12540, 1
  store i32 %v1_12540, i32* %ip.global-to-local, align 4
  %v8_12548 = icmp sgt i32 %v4_1253c, %v1_12540
  br i1 %v8_12548, label %dec_label_pc_124fc.dec_label_pc_124fc_crit_edge, label %dec_label_pc_1254c.loopexit

dec_label_pc_124fc.dec_label_pc_124fc_crit_edge:  ; preds = %dec_label_pc_124fc
  %v0_12504.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_124fc

dec_label_pc_1254c.loopexit:                      ; preds = %dec_label_pc_124fc
  %v2_1254c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1254c

dec_label_pc_1254c:                               ; preds = %dec_label_pc_1254c.loopexit, %dec_label_pc_124bc
  %v2_1254c = phi i32 [ %v2_1254c.pre, %dec_label_pc_1254c.loopexit ], [ %v3_124e0, %dec_label_pc_124bc ]
  store i32 %v2_1254c, i32* @r4, align 4
  ret i32 %v2_124c8

; uselistorder directives
  uselistorder i32 %v1_12540, { 1, 2, 0 }
  uselistorder i32 %v1_124f0, { 1, 0 }
  uselistorder i32 %v2_124cc, { 3, 0, 1, 2 }
  uselistorder i32 %v2_124c8, { 1, 0 }
  uselistorder i32 %v3_124c4, { 1, 0 }
}

define i32 @function_1255c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1255c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12564 = mul i32 %arg1, 8
  %v2_12568 = add i32 %v3_12564, ptrtoint (i32* @global_var_23688.343 to i32)
  %v2_1256c = load i32, i32* @global_var_23048.346, align 4
  %v1_12570 = add i32 %v3_12564, add (i32 ptrtoint (i32* @global_var_23688.343 to i32), i32 4)
  %v2_12570 = inttoptr i32 %v1_12570 to i16*
  %v3_12570 = load i16, i16* %v2_12570, align 4
  %v3_12574 = udiv i32 %v2_1256c, 256
  store i32 %v3_12574, i32* @r2, align 4
  %v2_12578 = icmp eq i16 %v3_12570, 0
  %v3_1257c = udiv i32 %v2_1256c, 65536
  %v3_12580 = load i32, i32* @r4, align 4
  store i32 %v3_12580, i32* %stack_var_-16, align 4
  %v1_12584 = urem i32 %v3_12574, 256
  store i32 %v1_12584, i32* %r6.global-to-local, align 4
  %v1_12588 = urem i32 %v3_1257c, 256
  store i32 %v1_12588, i32* %r5.global-to-local, align 4
  %v3_1258c = udiv i32 %v2_1256c, 16777216
  store i32 %v3_1258c, i32* %r4.global-to-local, align 4
  %v1_12590 = urem i32 %v2_1256c, 256
  store i32 %v1_12590, i32* %lr.global-to-local, align 4
  br i1 %v2_12578, label %dec_label_pc_125ec, label %dec_label_pc_12598

dec_label_pc_12598:                               ; preds = %dec_label_pc_1255c
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_1259c = inttoptr i32 %v2_12568 to i32*
  br label %dec_label_pc_1259c

dec_label_pc_1259c:                               ; preds = %dec_label_pc_1259c.dec_label_pc_1259c_crit_edge, %dec_label_pc_12598
  %v0_125a4 = phi i32 [ %v0_125a4.pre, %dec_label_pc_1259c.dec_label_pc_1259c_crit_edge ], [ %v1_12590, %dec_label_pc_12598 ]
  %v2_125a8 = phi i32 [ %v1_125e0, %dec_label_pc_1259c.dec_label_pc_1259c_crit_edge ], [ 0, %dec_label_pc_12598 ]
  %v2_1259c = load i32, i32* %v1_1259c, align 4
  %v2_125a0 = add i32 %v2_1259c, %v2_125a8
  %v3_125a0 = inttoptr i32 %v2_125a0 to i8*
  %v4_125a0 = load i8, i8* %v3_125a0, align 1
  %v6_125a0 = zext i8 %v4_125a0 to i32
  %v2_125a4 = xor i32 %v6_125a0, %v0_125a4
  %v1_125a8 = trunc i32 %v2_125a4 to i8
  store i8 %v1_125a8, i8* %v3_125a0, align 1
  %v2_125ac = load i32, i32* %v1_1259c, align 4
  %v0_125b0 = load i32, i32* %ip.global-to-local, align 4
  %v2_125b0 = add i32 %v0_125b0, %v2_125ac
  %v3_125b0 = inttoptr i32 %v2_125b0 to i8*
  %v4_125b0 = load i8, i8* %v3_125b0, align 1
  %v6_125b0 = zext i8 %v4_125b0 to i32
  %v0_125b4 = load i32, i32* %r6.global-to-local, align 4
  %v2_125b4 = xor i32 %v0_125b4, %v6_125b0
  %v1_125b8 = trunc i32 %v2_125b4 to i8
  store i8 %v1_125b8, i8* %v3_125b0, align 1
  %v2_125bc = load i32, i32* %v1_1259c, align 4
  %v0_125c0 = load i32, i32* %ip.global-to-local, align 4
  %v2_125c0 = add i32 %v0_125c0, %v2_125bc
  %v3_125c0 = inttoptr i32 %v2_125c0 to i8*
  %v4_125c0 = load i8, i8* %v3_125c0, align 1
  %v6_125c0 = zext i8 %v4_125c0 to i32
  %v0_125c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_125c4 = xor i32 %v0_125c4, %v6_125c0
  %v1_125c8 = trunc i32 %v2_125c4 to i8
  store i8 %v1_125c8, i8* %v3_125c0, align 1
  %v2_125cc = load i32, i32* %v1_1259c, align 4
  %v0_125d0 = load i32, i32* %ip.global-to-local, align 4
  %v2_125d0 = add i32 %v0_125d0, %v2_125cc
  %v3_125d0 = inttoptr i32 %v2_125d0 to i8*
  %v4_125d0 = load i8, i8* %v3_125d0, align 1
  %v6_125d0 = zext i8 %v4_125d0 to i32
  %v0_125d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_125d4 = xor i32 %v0_125d4, %v6_125d0
  %v1_125d8 = trunc i32 %v2_125d4 to i8
  store i8 %v1_125d8, i8* %v3_125d0, align 1
  %v3_125dc = load i16, i16* %v2_12570, align 4
  %v4_125dc = zext i16 %v3_125dc to i32
  store i32 %v4_125dc, i32* @r2, align 4
  %v0_125e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_125e0 = add i32 %v0_125e0, 1
  store i32 %v1_125e0, i32* %ip.global-to-local, align 4
  %v8_125e8 = icmp sgt i32 %v4_125dc, %v1_125e0
  br i1 %v8_125e8, label %dec_label_pc_1259c.dec_label_pc_1259c_crit_edge, label %dec_label_pc_125ec.loopexit

dec_label_pc_1259c.dec_label_pc_1259c_crit_edge:  ; preds = %dec_label_pc_1259c
  %v0_125a4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1259c

dec_label_pc_125ec.loopexit:                      ; preds = %dec_label_pc_1259c
  %v2_125ec.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_125ec

dec_label_pc_125ec:                               ; preds = %dec_label_pc_125ec.loopexit, %dec_label_pc_1255c
  %v2_125ec = phi i32 [ %v2_125ec.pre, %dec_label_pc_125ec.loopexit ], [ %v3_12580, %dec_label_pc_1255c ]
  store i32 %v2_125ec, i32* @r4, align 4
  ret i32 %v2_12568

; uselistorder directives
  uselistorder i32 %v1_125e0, { 1, 2, 0 }
  uselistorder i32 %v1_12590, { 1, 0 }
  uselistorder i32 %v3_12574, { 1, 0 }
  uselistorder i32 %v2_1256c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_12568, { 1, 0 }
  uselistorder i32 %v3_12564, { 1, 0 }
}

define i32 @function_125fc() local_unnamed_addr {
dec_label_pc_125fc:
  %r5.global-to-local = alloca i32, align 4
  %v6_125fc = load i32, i32* @r5, align 4
  store i32 12, i32* @r0, align 4
  %v0_12608 = call i32 @function_14744()
  store i32 ptrtoint ([13 x i8]* @global_var_1a4f8.350 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_23688.343 to i32), i32* @r4, align 4
  store i32 12, i32* @r7, align 4
  store i32 %v0_12608, i32* @r5, align 4
  %v4_12624 = call i32 @function_12e5c(i32 %v0_12608, i32 ptrtoint ([13 x i8]* @global_var_1a4f8.350 to i32), i32 12)
  store i32 2, i32* @r0, align 4
  %v0_1262c = load i32, i32* @r5, align 4
  store i32 %v0_1262c, i32* @global_var_236a0.352, align 4
  %v0_12630 = load i32, i32* @r7, align 4
  %v1_12630 = trunc i32 %v0_12630 to i16
  store i16 %v1_12630, i16* bitcast (i32* @global_var_236a4.353 to i16*), align 4
  %v0_12634 = call i32 @function_14744()
  store i32 2, i32* @r5, align 4
  store i32 %v0_12634, i32* @r6, align 4
  %v3_12648 = call i32 @function_12e5c(i32 %v0_12634, i32 ptrtoint (i32* @global_var_1a508.355 to i32), i32 2)
  %v0_1264c = load i32, i32* @r7, align 4
  store i32 %v0_1264c, i32* @r0, align 4
  %v0_12650 = load i32, i32* @r6, align 4
  store i32 %v0_12650, i32* @global_var_236a8.356, align 4
  %v0_12654 = load i32, i32* @r5, align 4
  %v1_12654 = trunc i32 %v0_12654 to i16
  store i16 %v1_12654, i16* bitcast (i32* @global_var_236ac.357 to i16*), align 4
  %v0_12658 = call i32 @function_14744()
  %v0_1265c = load i32, i32* @r8, align 4
  %v0_12660 = load i32, i32* @r7, align 4
  store i32 %v0_12658, i32* @r6, align 4
  %v4_12668 = call i32 @function_12e5c(i32 %v0_12658, i32 %v0_1265c, i32 %v0_12660)
  %v0_1266c = load i32, i32* @r5, align 4
  store i32 %v0_1266c, i32* @r0, align 4
  %v0_12670 = load i32, i32* @r6, align 4
  store i32 %v0_12670, i32* @global_var_23718.358, align 4
  %v0_12674 = load i32, i32* @r7, align 4
  %v1_12674 = trunc i32 %v0_12674 to i16
  store i16 %v1_12674, i16* bitcast (i32* @global_var_2371c.359 to i16*), align 4
  %v0_12678 = call i32 @function_14744()
  %v0_1267c = load i32, i32* @r5, align 4
  store i32 %v0_12678, i32* @r6, align 4
  %v3_12688 = call i32 @function_12e5c(i32 %v0_12678, i32 ptrtoint (i32* @global_var_1a50c.361 to i32), i32 %v0_1267c)
  store i32 15, i32* @r0, align 4
  %v0_12690 = load i32, i32* @r6, align 4
  store i32 %v0_12690, i32* @global_var_23720.362, align 4
  %v0_12694 = load i32, i32* @r5, align 4
  %v1_12694 = trunc i32 %v0_12694 to i16
  store i16 %v1_12694, i16* bitcast (i32* @global_var_23724.363 to i16*), align 4
  %v0_12698 = call i32 @function_14744()
  store i32 %v0_12698, i32* @r5, align 4
  %v3_126a8 = call i32 @function_12e5c(i32 %v0_12698, i32 ptrtoint (i32* @global_var_1a510.365 to i32), i32 15)
  store i32 29, i32* @r0, align 4
  %v0_126b4 = load i32, i32* @r5, align 4
  store i32 %v0_126b4, i32* @global_var_23698.366, align 4
  store i16 15, i16* bitcast (i32* @global_var_2369c.367 to i16*), align 4
  %v0_126bc = call i32 @function_14744()
  store i32 %v0_126bc, i32* @r5, align 4
  %v3_126cc = call i32 @function_12e5c(i32 %v0_126bc, i32 ptrtoint (i32* @global_var_1a520.369 to i32), i32 29)
  store i32 7, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_236b4.370 to i16*), align 4
  %v0_126dc = load i32, i32* @r5, align 4
  store i32 %v0_126dc, i32* @global_var_236b0.371, align 4
  %v0_126e0 = call i32 @function_14744()
  store i32 7, i32* @r6, align 4
  store i32 %v0_126e0, i32* @r5, align 4
  %v4_126f4 = call i32 @function_12e5c(i32 %v0_126e0, i32 ptrtoint ([8 x i8]* @global_var_1a540.373 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_126fc = load i32, i32* @r5, align 4
  store i32 %v0_126fc, i32* @global_var_236b8.374, align 4
  %v0_12700 = load i32, i32* @r6, align 4
  %v1_12700 = trunc i32 %v0_12700 to i16
  store i16 %v1_12700, i16* bitcast (i32* @global_var_236bc.375 to i16*), align 4
  %v0_12704 = call i32 @function_14744()
  store i32 %v0_12704, i32* @r5, align 4
  %v4_12714 = call i32 @function_12e5c(i32 %v0_12704, i32 ptrtoint ([6 x i8]* @global_var_1a548.377 to i32), i32 5)
  store i32 11, i32* @r0, align 4
  %v0_12720 = load i32, i32* @r5, align 4
  store i32 %v0_12720, i32* @global_var_236c0.378, align 4
  store i16 5, i16* bitcast (i32* @global_var_236c4.379 to i16*), align 4
  %v0_12728 = call i32 @function_14744()
  store i32 11, i32* @fp, align 4
  store i32 %v0_12728, i32* @r5, align 4
  %v3_1273c = call i32 @function_12e5c(i32 %v0_12728, i32 ptrtoint (i32* @global_var_1a550.381 to i32), i32 11)
  store i32 4, i32* @r0, align 4
  %v0_12744 = load i32, i32* @r5, align 4
  store i32 %v0_12744, i32* @global_var_236c8.382, align 4
  %v0_12748 = load i32, i32* @fp, align 4
  %v1_12748 = trunc i32 %v0_12748 to i16
  store i16 %v1_12748, i16* bitcast (i32* @global_var_236cc.383 to i16*), align 4
  %v0_1274c = call i32 @function_14744()
  store i32 %v0_1274c, i32* @r5, align 4
  %v4_1275c = call i32 @function_12e5c(i32 %v0_1274c, i32 ptrtoint ([5 x i8]* @global_var_1a55c.385 to i32), i32 4)
  %v0_12764 = load i32, i32* @r6, align 4
  store i32 %v0_12764, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_236d4.386 to i16*), align 4
  %v0_1276c = load i32, i32* @r5, align 4
  store i32 %v0_1276c, i32* @global_var_236d0.387, align 4
  %v0_12770 = call i32 @function_14744()
  %v0_12774 = load i32, i32* @r6, align 4
  store i32 %v0_12770, i32* @r5, align 4
  %v4_12780 = call i32 @function_12e5c(i32 %v0_12770, i32 ptrtoint ([8 x i8]* @global_var_1a564.389 to i32), i32 %v0_12774)
  store i32 8, i32* @r0, align 4
  %v0_12788 = load i32, i32* @r5, align 4
  store i32 %v0_12788, i32* @global_var_236d8.390, align 4
  %v0_1278c = load i32, i32* @r6, align 4
  %v1_1278c = trunc i32 %v0_1278c to i16
  store i16 %v1_1278c, i16* bitcast (i32* @global_var_236dc.391 to i16*), align 4
  %v0_12790 = call i32 @function_14744()
  store i32 8, i32* @sl, align 4
  store i32 %v0_12790, i32* @r5, align 4
  %v4_127a4 = call i32 @function_12e5c(i32 %v0_12790, i32 ptrtoint ([9 x i8]* @global_var_1a56c.393 to i32), i32 8)
  store i32 13, i32* @r0, align 4
  %v0_127ac = load i32, i32* @r5, align 4
  store i32 %v0_127ac, i32* @global_var_236e0.394, align 4
  %v0_127b0 = load i32, i32* @sl, align 4
  %v1_127b0 = trunc i32 %v0_127b0 to i16
  store i16 %v1_127b0, i16* bitcast (i32* @global_var_236e4.395 to i16*), align 4
  %v0_127b4 = call i32 @function_14744()
  store i32 %v0_127b4, i32* @r5, align 4
  %v3_127c4 = call i32 @function_12e5c(i32 %v0_127b4, i32 ptrtoint (i32* @global_var_1a578.397 to i32), i32 13)
  store i32 10, i32* @r0, align 4
  store i32 10, i32* @r8, align 4
  %v0_127d4 = load i32, i32* @r5, align 4
  store i32 %v0_127d4, i32* @global_var_236e8.398, align 4
  store i16 13, i16* bitcast (i32* @global_var_236ec.399 to i16*), align 4
  %v0_127dc = call i32 @function_14744()
  %v0_127e4 = load i32, i32* @r8, align 4
  store i32 %v0_127dc, i32* @r5, align 4
  %v4_127ec = call i32 @function_12e5c(i32 %v0_127dc, i32 ptrtoint ([11 x i8]* @global_var_1a588.401 to i32), i32 %v0_127e4)
  %v0_127f0 = load i32, i32* @r8, align 4
  store i32 %v0_127f0, i32* @r0, align 4
  %v0_127f4 = load i32, i32* @r5, align 4
  store i32 %v0_127f4, i32* @global_var_236f0.402, align 4
  %v1_127f8 = trunc i32 %v0_127f0 to i16
  store i16 %v1_127f8, i16* bitcast (i32* @global_var_236f4.403 to i16*), align 4
  %v0_127fc = call i32 @function_14744()
  %v0_12804 = load i32, i32* @r8, align 4
  store i32 %v0_127fc, i32* @r5, align 4
  %v4_1280c = call i32 @function_12e5c(i32 %v0_127fc, i32 ptrtoint ([11 x i8]* @global_var_1a594.405 to i32), i32 %v0_12804)
  store i32 33, i32* @r0, align 4
  %v0_12814 = load i32, i32* @r5, align 4
  store i32 %v0_12814, i32* @global_var_236f8.406, align 4
  %v0_12818 = load i32, i32* @r8, align 4
  %v1_12818 = trunc i32 %v0_12818 to i16
  store i16 %v1_12818, i16* bitcast (i32* @global_var_236fc.407 to i16*), align 4
  %v0_1281c = call i32 @function_14744()
  store i32 %v0_1281c, i32* @r5, align 4
  %v3_1282c = call i32 @function_12e5c(i32 %v0_1281c, i32 ptrtoint (i32* @global_var_1a5a0.409 to i32), i32 33)
  %v0_12834 = load i32, i32* @sl, align 4
  store i32 %v0_12834, i32* @r0, align 4
  store i16 33, i16* bitcast (i32* @global_var_23704.410 to i16*), align 4
  %v0_1283c = load i32, i32* @r5, align 4
  store i32 %v0_1283c, i32* @global_var_23700.411, align 4
  %v0_12840 = call i32 @function_14744()
  %v0_12848 = load i32, i32* @sl, align 4
  store i32 %v0_12840, i32* @r5, align 4
  %v4_12850 = call i32 @function_12e5c(i32 %v0_12840, i32 ptrtoint ([9 x i8]* @global_var_1a5c4.413 to i32), i32 %v0_12848)
  %v0_12854 = load i32, i32* @fp, align 4
  store i32 %v0_12854, i32* @r0, align 4
  %v0_12858 = load i32, i32* @r5, align 4
  store i32 %v0_12858, i32* @global_var_23708.414, align 4
  %v0_1285c = load i32, i32* @sl, align 4
  %v1_1285c = trunc i32 %v0_1285c to i16
  store i16 %v1_1285c, i16* bitcast (i32* @global_var_2370c.415 to i16*), align 4
  %v0_12860 = call i32 @function_14744()
  %v0_12868 = load i32, i32* @fp, align 4
  store i32 %v0_12860, i32* @r5, align 4
  %v4_12870 = call i32 @function_12e5c(i32 %v0_12860, i32 ptrtoint ([12 x i8]* @global_var_1a5d0.417 to i32), i32 %v0_12868)
  store i32 6, i32* @r0, align 4
  %v0_12878 = load i32, i32* @r5, align 4
  store i32 %v0_12878, i32* @global_var_23710.418, align 4
  %v0_1287c = load i32, i32* @fp, align 4
  %v1_1287c = trunc i32 %v0_1287c to i16
  store i16 %v1_1287c, i16* bitcast (i32* @global_var_23714.419 to i16*), align 4
  %v0_12880 = call i32 @function_14744()
  store i32 %v0_12880, i32* @r5, align 4
  %v4_12890 = call i32 @function_12e5c(i32 %v0_12880, i32 ptrtoint ([7 x i8]* @global_var_1a5dc.421 to i32), i32 6)
  %v0_12898 = load i32, i32* @r6, align 4
  store i32 %v0_12898, i32* @r0, align 4
  %v0_1289c = load i32, i32* @r5, align 4
  store i32 %v0_1289c, i32* @global_var_23728.422, align 4
  store i16 6, i16* bitcast (i32* @global_var_2372c.423 to i16*), align 4
  %v0_128a4 = call i32 @function_14744()
  %v0_128a8 = load i32, i32* @r6, align 4
  store i32 %v0_128a4, i32* @r5, align 4
  %v4_128b4 = call i32 @function_12e5c(i32 %v0_128a4, i32 ptrtoint ([8 x i8]* @global_var_1a5e4.425 to i32), i32 %v0_128a8)
  %v0_128b8 = load i32, i32* @r6, align 4
  store i32 %v0_128b8, i32* @r0, align 4
  %v0_128bc = load i32, i32* @r5, align 4
  store i32 %v0_128bc, i32* @global_var_23730.426, align 4
  %v1_128c0 = trunc i32 %v0_128b8 to i16
  store i16 %v1_128c0, i16* bitcast (i32* @global_var_23734.427 to i16*), align 4
  %v0_128c4 = call i32 @function_14744()
  %v0_128c8 = load i32, i32* @r6, align 4
  store i32 %v0_128c4, i32* @r5, align 4
  %v4_128d4 = call i32 @function_12e5c(i32 %v0_128c4, i32 ptrtoint ([8 x i8]* @global_var_1a5ec.429 to i32), i32 %v0_128c8)
  store i32 3, i32* @r0, align 4
  %v0_128dc = load i32, i32* @r5, align 4
  store i32 %v0_128dc, i32* @global_var_23738.430, align 4
  %v0_128e0 = load i32, i32* @r6, align 4
  %v1_128e0 = trunc i32 %v0_128e0 to i16
  store i16 %v1_128e0, i16* bitcast (i32* @global_var_2373c.431 to i16*), align 4
  %v0_128e4 = call i32 @function_14744()
  store i32 %v0_128e4, i32* @r5, align 4
  %v4_128f4 = call i32 @function_12e5c(i32 %v0_128e4, i32 ptrtoint ([4 x i8]* @global_var_1a5f4.433 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_23744.434 to i16*), align 4
  %v0_12904 = load i32, i32* @r5, align 4
  store i32 %v0_12904, i32* @global_var_23740.435, align 4
  %v0_12908 = call i32 @function_14744()
  store i32 %v0_12908, i32* @r5, align 4
  %v3_12918 = call i32 @function_12e5c(i32 %v0_12908, i32 ptrtoint (i32* @global_var_1a5f8.437 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  %v0_12924 = load i32, i32* @r5, align 4
  store i32 %v0_12924, i32* @global_var_23748.438, align 4
  store i16 19, i16* bitcast (i32* @global_var_2374c.439 to i16*), align 4
  %v0_1292c = call i32 @function_14744()
  store i32 %v0_1292c, i32* @r5, align 4
  %v3_1293c = call i32 @function_12e5c(i32 %v0_1292c, i32 ptrtoint (i32* @global_var_1a60c.441 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_23754.442 to i16*), align 4
  %v0_1294c = load i32, i32* @r5, align 4
  store i32 %v0_1294c, i32* @global_var_23750.443, align 4
  %v0_12950 = call i32 @function_14744()
  %v0_1295c = load i32, i32* @r6, align 4
  %v1_1295c = add i32 %v0_1295c, 2
  store i32 %v1_1295c, i32* @r6, align 4
  store i32 %v0_12950, i32* @r5, align 4
  %v4_12964 = call i32 @function_12e5c(i32 %v0_12950, i32 ptrtoint ([10 x i8]* @global_var_1a628.445 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  %v0_1296c = load i32, i32* @r5, align 4
  store i32 %v0_1296c, i32* @global_var_23758.446, align 4
  %v0_12970 = load i32, i32* @r6, align 4
  %v1_12970 = trunc i32 %v0_12970 to i16
  store i16 %v1_12970, i16* bitcast (i32* @global_var_2375c.447 to i16*), align 4
  %v0_12974 = call i32 @function_14744()
  store i32 %v0_12974, i32* @r5, align 4
  store i32 16, i32* @sb, align 4
  %v3_12988 = call i32 @function_12e5c(i32 %v0_12974, i32 ptrtoint (i32* @global_var_1a634.449 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_12990 = load i32, i32* @r5, align 4
  store i32 %v0_12990, i32* @global_var_23760.450, align 4
  %v0_12994 = load i32, i32* @sb, align 4
  %v1_12994 = trunc i32 %v0_12994 to i16
  store i16 %v1_12994, i16* bitcast (i32* @global_var_23764.451 to i16*), align 4
  %v0_12998 = call i32 @function_14744()
  store i32 %v0_12998, i32* @r5, align 4
  %v3_129a8 = call i32 @function_12e5c(i32 %v0_12998, i32 ptrtoint (i32* @global_var_1a648.453 to i32), i32 22)
  store i32 21, i32* @r0, align 4
  %v0_129b4 = load i32, i32* @r5, align 4
  store i32 %v0_129b4, i32* @global_var_23768.454, align 4
  store i16 22, i16* bitcast (i32* @global_var_2376c.455 to i16*), align 4
  %v0_129bc = call i32 @function_14744()
  store i32 %v0_129bc, i32* @r5, align 4
  %v3_129cc = call i32 @function_12e5c(i32 %v0_129bc, i32 ptrtoint (i32* @global_var_1a660.457 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_23774.458 to i16*), align 4
  %v0_129dc = load i32, i32* @r5, align 4
  store i32 %v0_129dc, i32* @global_var_23770.459, align 4
  %v0_129e0 = call i32 @function_14744()
  store i32 %v0_129e0, i32* @r5, align 4
  %v4_129f0 = call i32 @function_12e5c(i32 %v0_129e0, i32 ptrtoint ([18 x i8]* @global_var_1a678.461 to i32), i32 17)
  %v0_129f8 = load i32, i32* @r7, align 4
  store i32 %v0_129f8, i32* @r0, align 4
  %v0_129fc = load i32, i32* @r5, align 4
  store i32 %v0_129fc, i32* @global_var_23778.462, align 4
  store i16 17, i16* bitcast (i32* @global_var_2377c.463 to i16*), align 4
  %v0_12a04 = call i32 @function_14744()
  %v0_12a0c = load i32, i32* @r7, align 4
  store i32 %v0_12a04, i32* @r5, align 4
  %v3_12a14 = call i32 @function_12e5c(i32 %v0_12a04, i32 ptrtoint (i32* @global_var_1a68c.465 to i32), i32 %v0_12a0c)
  store i32 23, i32* @r0, align 4
  %v0_12a1c = load i32, i32* @r5, align 4
  store i32 %v0_12a1c, i32* @global_var_23780.466, align 4
  %v0_12a20 = load i32, i32* @r7, align 4
  %v1_12a20 = trunc i32 %v0_12a20 to i16
  store i16 %v1_12a20, i16* bitcast (i32* @global_var_23784.467 to i16*), align 4
  %v0_12a24 = call i32 @function_14744()
  store i32 %v0_12a24, i32* @r5, align 4
  %v3_12a34 = call i32 @function_12e5c(i32 %v0_12a24, i32 ptrtoint (i32* @global_var_1a69c.469 to i32), i32 23)
  store i32 83, i32* @r0, align 4
  %v2_12a44 = load i32, i32* @r4, align 4
  %v4_12a44 = add i32 %v2_12a44, 260
  %v5_12a44 = inttoptr i32 %v4_12a44 to i16*
  store i16 23, i16* %v5_12a44, align 2
  %v0_12a48 = load i32, i32* @r5, align 4
  store i32 %v0_12a48, i32* @global_var_23788.470, align 4
  %v0_12a4c = call i32 @function_14744()
  store i32 %v0_12a4c, i32* @r5, align 4
  %v3_12a5c = call i32 @function_12e5c(i32 %v0_12a4c, i32 ptrtoint (i32* @global_var_1a6b4.472 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_12a6c = load i32, i32* @r4, align 4
  %v4_12a6c = add i32 %v2_12a6c, 268
  %v5_12a6c = inttoptr i32 %v4_12a6c to i16*
  store i16 83, i16* %v5_12a6c, align 2
  %v0_12a70 = load i32, i32* @r5, align 4
  store i32 %v0_12a70, i32* @global_var_23790.473, align 4
  %v0_12a74 = call i32 @function_14744()
  store i32 %v0_12a74, i32* @r5, align 4
  %v3_12a84 = call i32 @function_12e5c(i32 %v0_12a74, i32 ptrtoint (i32* @global_var_1a708.475 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_12a94 = load i32, i32* @r4, align 4
  %v4_12a94 = add i32 %v2_12a94, 276
  %v5_12a94 = inttoptr i32 %v4_12a94 to i16*
  store i16 32, i16* %v5_12a94, align 2
  %v0_12a98 = load i32, i32* @r5, align 4
  store i32 %v0_12a98, i32* @global_var_23798.476, align 4
  %v0_12a9c = call i32 @function_14744()
  store i32 %v0_12a9c, i32* @r5, align 4
  %v3_12aac = call i32 @function_12e5c(i32 %v0_12a9c, i32 ptrtoint (i32* @global_var_1a72c.478 to i32), i32 48)
  %v0_12ab8 = load i32, i32* @r7, align 4
  store i32 %v0_12ab8, i32* @r0, align 4
  %v2_12abc = load i32, i32* @r4, align 4
  %v4_12abc = add i32 %v2_12abc, 284
  %v5_12abc = inttoptr i32 %v4_12abc to i16*
  store i16 48, i16* %v5_12abc, align 2
  %v0_12ac0 = load i32, i32* @r5, align 4
  store i32 %v0_12ac0, i32* @global_var_237a0.479, align 4
  %v0_12ac4 = call i32 @function_14744()
  %v0_12acc = load i32, i32* @r7, align 4
  store i32 %v0_12ac4, i32* @r5, align 4
  %v3_12ad4 = call i32 @function_12e5c(i32 %v0_12ac4, i32 ptrtoint (i32* @global_var_1a760.481 to i32), i32 %v0_12acc)
  %v0_12adc = load i32, i32* @r6, align 4
  store i32 %v0_12adc, i32* @r0, align 4
  %v0_12ae0 = load i32, i32* @r7, align 4
  %v1_12ae0 = trunc i32 %v0_12ae0 to i16
  %v2_12ae0 = load i32, i32* @r4, align 4
  %v4_12ae0 = add i32 %v2_12ae0, 292
  %v5_12ae0 = inttoptr i32 %v4_12ae0 to i16*
  store i16 %v1_12ae0, i16* %v5_12ae0, align 2
  %v0_12ae4 = load i32, i32* @r5, align 4
  store i32 %v0_12ae4, i32* @global_var_237a8.482, align 4
  %v0_12ae8 = call i32 @function_14744()
  %v0_12aec = load i32, i32* @r6, align 4
  store i32 %v0_12ae8, i32* @r5, align 4
  %v3_12af8 = call i32 @function_12e5c(i32 %v0_12ae8, i32 ptrtoint (i32* @global_var_1a770.484 to i32), i32 %v0_12aec)
  %v0_12b00 = load i32, i32* @r8, align 4
  store i32 %v0_12b00, i32* @r0, align 4
  %v0_12b04 = load i32, i32* @r6, align 4
  %v1_12b04 = trunc i32 %v0_12b04 to i16
  %v2_12b04 = load i32, i32* @r4, align 4
  %v4_12b04 = add i32 %v2_12b04, 300
  %v5_12b04 = inttoptr i32 %v4_12b04 to i16*
  store i16 %v1_12b04, i16* %v5_12b04, align 2
  %v0_12b08 = load i32, i32* @r5, align 4
  store i32 %v0_12b08, i32* @global_var_237b0.485, align 4
  %v0_12b0c = call i32 @function_14744()
  %v0_12b14 = load i32, i32* @r8, align 4
  store i32 %v0_12b0c, i32* @r5, align 4
  %v3_12b1c = call i32 @function_12e5c(i32 %v0_12b0c, i32 ptrtoint (i32* @global_var_1a77c.487 to i32), i32 %v0_12b14)
  %v0_12b24 = load i32, i32* @r7, align 4
  store i32 %v0_12b24, i32* @r0, align 4
  %v0_12b28 = load i32, i32* @r8, align 4
  %v1_12b28 = trunc i32 %v0_12b28 to i16
  %v2_12b28 = load i32, i32* @r4, align 4
  %v4_12b28 = add i32 %v2_12b28, 308
  %v5_12b28 = inttoptr i32 %v4_12b28 to i16*
  store i16 %v1_12b28, i16* %v5_12b28, align 2
  %v0_12b2c = load i32, i32* @r5, align 4
  store i32 %v0_12b2c, i32* @global_var_237b8.488, align 4
  %v0_12b30 = call i32 @function_14744()
  %v0_12b38 = load i32, i32* @r7, align 4
  store i32 %v0_12b30, i32* @r5, align 4
  %v3_12b40 = call i32 @function_12e5c(i32 %v0_12b30, i32 ptrtoint (i32* @global_var_1a788.490 to i32), i32 %v0_12b38)
  %v0_12b48 = load i32, i32* @sb, align 4
  store i32 %v0_12b48, i32* @r0, align 4
  %v0_12b4c = load i32, i32* @r7, align 4
  %v1_12b4c = trunc i32 %v0_12b4c to i16
  %v2_12b4c = load i32, i32* @r4, align 4
  %v4_12b4c = add i32 %v2_12b4c, 316
  %v5_12b4c = inttoptr i32 %v4_12b4c to i16*
  store i16 %v1_12b4c, i16* %v5_12b4c, align 2
  %v0_12b50 = load i32, i32* @r5, align 4
  store i32 %v0_12b50, i32* @global_var_237c0.491, align 4
  %v0_12b54 = call i32 @function_14744()
  %v0_12b5c = load i32, i32* @sb, align 4
  store i32 %v0_12b54, i32* @r5, align 4
  %v3_12b64 = call i32 @function_12e5c(i32 %v0_12b54, i32 ptrtoint (i32* @global_var_1a798.493 to i32), i32 %v0_12b5c)
  store i32 19, i32* @r0, align 4
  %v0_12b70 = load i32, i32* @sb, align 4
  %v1_12b70 = trunc i32 %v0_12b70 to i16
  %v2_12b70 = load i32, i32* @r4, align 4
  %v4_12b70 = add i32 %v2_12b70, 324
  %v5_12b70 = inttoptr i32 %v4_12b70 to i16*
  store i16 %v1_12b70, i16* %v5_12b70, align 2
  %v0_12b74 = load i32, i32* @r5, align 4
  store i32 %v0_12b74, i32* @global_var_237c8.494, align 4
  %v0_12b78 = call i32 @function_14744()
  store i32 %v0_12b78, i32* @r5, align 4
  %v3_12b88 = call i32 @function_12e5c(i32 %v0_12b78, i32 ptrtoint (i32* @global_var_1a7ac.496 to i32), i32 19)
  %v0_12b94 = load i32, i32* @sl, align 4
  store i32 %v0_12b94, i32* @r0, align 4
  %v2_12b98 = load i32, i32* @r4, align 4
  %v4_12b98 = add i32 %v2_12b98, 332
  %v5_12b98 = inttoptr i32 %v4_12b98 to i16*
  store i16 19, i16* %v5_12b98, align 2
  %v0_12b9c = load i32, i32* @r5, align 4
  store i32 %v0_12b9c, i32* @global_var_237d0.497, align 4
  %v0_12ba0 = call i32 @function_14744()
  %v0_12ba8 = load i32, i32* @sl, align 4
  store i32 %v0_12ba0, i32* @r5, align 4
  %v4_12bb0 = call i32 @function_12e5c(i32 %v0_12ba0, i32 ptrtoint ([9 x i8]* @global_var_1a7c0.499 to i32), i32 %v0_12ba8)
  %v0_12bb8 = load i32, i32* @fp, align 4
  store i32 %v0_12bb8, i32* @r0, align 4
  %v0_12bbc = load i32, i32* @sl, align 4
  %v1_12bbc = trunc i32 %v0_12bbc to i16
  %v2_12bbc = load i32, i32* @r4, align 4
  %v4_12bbc = add i32 %v2_12bbc, 340
  %v5_12bbc = inttoptr i32 %v4_12bbc to i16*
  store i16 %v1_12bbc, i16* %v5_12bbc, align 2
  %v0_12bc0 = load i32, i32* @r5, align 4
  store i32 %v0_12bc0, i32* @global_var_237d8.500, align 4
  %v0_12bc4 = call i32 @function_14744()
  %v0_12bcc = load i32, i32* @fp, align 4
  store i32 %v0_12bc4, i32* @r5, align 4
  %v3_12bd4 = call i32 @function_12e5c(i32 %v0_12bc4, i32 ptrtoint (i32* @global_var_1a6a8.502 to i32), i32 %v0_12bcc)
  %v0_12bdc = load i32, i32* @r7, align 4
  store i32 %v0_12bdc, i32* @r0, align 4
  %v0_12be0 = load i32, i32* @fp, align 4
  %v1_12be0 = trunc i32 %v0_12be0 to i16
  %v2_12be0 = load i32, i32* @r4, align 4
  %v4_12be0 = add i32 %v2_12be0, 348
  %v5_12be0 = inttoptr i32 %v4_12be0 to i16*
  store i16 %v1_12be0, i16* %v5_12be0, align 2
  %v0_12be4 = load i32, i32* @r5, align 4
  store i32 %v0_12be4, i32* @global_var_237e0.503, align 4
  %v0_12be8 = call i32 @function_14744()
  %v0_12bf0 = load i32, i32* @r7, align 4
  store i32 %v0_12be8, i32* @r5, align 4
  %v3_12bf8 = call i32 @function_12e5c(i32 %v0_12be8, i32 ptrtoint (i32* @global_var_1a7cc.505 to i32), i32 %v0_12bf0)
  store i32 18, i32* @r0, align 4
  %v0_12c04 = load i32, i32* @r7, align 4
  %v1_12c04 = trunc i32 %v0_12c04 to i16
  %v2_12c04 = load i32, i32* @r4, align 4
  %v4_12c04 = add i32 %v2_12c04, 356
  %v5_12c04 = inttoptr i32 %v4_12c04 to i16*
  store i16 %v1_12c04, i16* %v5_12c04, align 2
  %v0_12c08 = load i32, i32* @r5, align 4
  store i32 %v0_12c08, i32* @global_var_237e8.506, align 4
  %v0_12c0c = call i32 @function_14744()
  store i32 %v0_12c0c, i32* @r5, align 4
  %v3_12c1c = call i32 @function_12e5c(i32 %v0_12c0c, i32 ptrtoint (i32* @global_var_1a7dc.508 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_12c2c = load i32, i32* @r4, align 4
  %v4_12c2c = add i32 %v2_12c2c, 364
  %v5_12c2c = inttoptr i32 %v4_12c2c to i16*
  store i16 18, i16* %v5_12c2c, align 2
  %v0_12c30 = load i32, i32* @r5, align 4
  store i32 %v0_12c30, i32* @global_var_237f0.509, align 4
  %v0_12c34 = call i32 @function_14744()
  store i32 %v0_12c34, i32* %r5.global-to-local, align 4
  %v3_12c44 = call i32 @function_12e5c(i32 %v0_12c34, i32 ptrtoint (i32* @global_var_1a7f0.511 to i32), i32 25)
  store i32 111, i32* @r0, align 4
  %v2_12c54 = load i32, i32* @r4, align 4
  %v4_12c54 = add i32 %v2_12c54, 372
  %v5_12c54 = inttoptr i32 %v4_12c54 to i16*
  store i16 25, i16* %v5_12c54, align 2
  %v0_12c58 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12c58, i32* @global_var_237f8.512, align 4
  %v0_12c5c = load i32, i32* @r0, align 4
  store i32 %v0_12c5c, i32* @r5, align 4
  %v0_12c60 = call i32 @function_14744()
  %v0_12c64 = load i32, i32* @r5, align 4
  store i32 %v0_12c60, i32* @r6, align 4
  %v3_12c70 = call i32 @function_12e5c(i32 %v0_12c60, i32 ptrtoint (i32* @global_var_1a80c.514 to i32), i32 %v0_12c64)
  %v0_12c78 = load i32, i32* @r5, align 4
  store i32 %v0_12c78, i32* @r0, align 4
  %v1_12c7c = trunc i32 %v0_12c78 to i16
  %v2_12c7c = load i32, i32* @r4, align 4
  %v4_12c7c = add i32 %v2_12c7c, 380
  %v5_12c7c = inttoptr i32 %v4_12c7c to i16*
  store i16 %v1_12c7c, i16* %v5_12c7c, align 2
  %v0_12c80 = load i32, i32* @r6, align 4
  store i32 %v0_12c80, i32* @global_var_23800.515, align 4
  %v0_12c84 = call i32 @function_14744()
  %v0_12c88 = load i32, i32* @r5, align 4
  store i32 %v0_12c84, i32* @r6, align 4
  %v3_12c94 = call i32 @function_12e5c(i32 %v0_12c84, i32 ptrtoint (i32* @global_var_1a87c.517 to i32), i32 %v0_12c88)
  store i32 110, i32* @r0, align 4
  %v0_12ca0 = load i32, i32* @r5, align 4
  %v1_12ca0 = trunc i32 %v0_12ca0 to i16
  %v2_12ca0 = load i32, i32* @r4, align 4
  %v4_12ca0 = add i32 %v2_12ca0, 388
  %v5_12ca0 = inttoptr i32 %v4_12ca0 to i16*
  store i16 %v1_12ca0, i16* %v5_12ca0, align 2
  %v0_12ca4 = load i32, i32* @r6, align 4
  store i32 %v0_12ca4, i32* @global_var_23808.518, align 4
  %v0_12ca8 = load i32, i32* @r0, align 4
  store i32 %v0_12ca8, i32* @r5, align 4
  %v0_12cac = call i32 @function_14744()
  %v0_12cb0 = load i32, i32* @r5, align 4
  store i32 %v0_12cac, i32* @r6, align 4
  %v3_12cbc = call i32 @function_12e5c(i32 %v0_12cac, i32 ptrtoint (i32* @global_var_1a8ec.520 to i32), i32 %v0_12cb0)
  %v0_12cc4 = load i32, i32* @r5, align 4
  store i32 %v0_12cc4, i32* @r0, align 4
  %v1_12cc8 = trunc i32 %v0_12cc4 to i16
  %v2_12cc8 = load i32, i32* @r4, align 4
  %v4_12cc8 = add i32 %v2_12cc8, 396
  %v5_12cc8 = inttoptr i32 %v4_12cc8 to i16*
  store i16 %v1_12cc8, i16* %v5_12cc8, align 2
  %v0_12ccc = load i32, i32* @r6, align 4
  store i32 %v0_12ccc, i32* @global_var_23810.521, align 4
  %v0_12cd0 = call i32 @function_14744()
  %v0_12cd4 = load i32, i32* @r5, align 4
  store i32 %v0_12cd0, i32* @r6, align 4
  %v3_12ce0 = call i32 @function_12e5c(i32 %v0_12cd0, i32 ptrtoint (i32* @global_var_1a95c.523 to i32), i32 %v0_12cd4)
  store i32 117, i32* @r0, align 4
  %v0_12cec = load i32, i32* @r5, align 4
  %v1_12cec = trunc i32 %v0_12cec to i16
  %v2_12cec = load i32, i32* @r4, align 4
  %v4_12cec = add i32 %v2_12cec, 404
  %v5_12cec = inttoptr i32 %v4_12cec to i16*
  store i16 %v1_12cec, i16* %v5_12cec, align 2
  %v0_12cf0 = load i32, i32* @r6, align 4
  store i32 %v0_12cf0, i32* @global_var_23818.524, align 4
  %v0_12cf4 = call i32 @function_14744()
  store i32 %v0_12cf4, i32* %r5.global-to-local, align 4
  %v3_12d04 = call i32 @function_12e5c(i32 %v0_12cf4, i32 ptrtoint (i32* @global_var_1a9cc.526 to i32), i32 117)
  store i32 %v0_12cf4, i32* @global_var_23820.527, align 4
  %v2_12d14 = load i32, i32* @r4, align 4
  %v4_12d14 = add i32 %v2_12d14, 412
  %v5_12d14 = inttoptr i32 %v4_12d14 to i16*
  store i16 117, i16* %v5_12d14, align 2
  store i32 %v6_125fc, i32* %r5.global-to-local, align 4
  ret i32 %v3_12d04

; uselistorder directives
  uselistorder i32 %v0_12cd0, { 1, 0 }
  uselistorder i32 %v0_12cac, { 1, 0 }
  uselistorder i32 %v0_12c84, { 1, 0 }
  uselistorder i32 %v0_12c60, { 1, 0 }
  uselistorder i32 %v0_12be8, { 1, 0 }
  uselistorder i32 %v0_12bc4, { 1, 0 }
  uselistorder i32 %v0_12ba0, { 1, 0 }
  uselistorder i32 %v0_12b54, { 1, 0 }
  uselistorder i32 %v0_12b30, { 1, 0 }
  uselistorder i32 %v0_12b0c, { 1, 0 }
  uselistorder i32 %v0_12ae8, { 1, 0 }
  uselistorder i32 %v0_12ac4, { 1, 0 }
  uselistorder i32 %v0_12a04, { 1, 0 }
  uselistorder i32 %v0_12950, { 1, 0 }
  uselistorder i32 %v0_128c4, { 1, 0 }
  uselistorder i32 %v0_128a4, { 1, 0 }
  uselistorder i32 %v0_12860, { 1, 0 }
  uselistorder i32 %v0_12840, { 1, 0 }
  uselistorder i32 %v0_127fc, { 1, 0 }
  uselistorder i32 %v0_127dc, { 1, 0 }
  uselistorder i32 %v0_12790, { 1, 0 }
  uselistorder i32 %v0_12770, { 1, 0 }
  uselistorder i32 %v0_12728, { 1, 0 }
  uselistorder i32 %v0_126e0, { 1, 0 }
  uselistorder i32 %v0_12678, { 1, 0 }
  uselistorder i32 %v0_12658, { 1, 0 }
  uselistorder i32 %v0_12634, { 1, 0 }
  uselistorder i32 %v0_12608, { 1, 0 }
  uselistorder i32 18, { 1, 11, 2, 12, 3, 13, 4, 14, 10, 5, 0, 15, 6, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 17, { 1, 8, 18, 9, 10, 2, 3, 11, 4, 12, 5, 6, 13, 7, 14, 0, 15, 16, 17 }
  uselistorder i32 21, { 1, 6, 2, 7, 3, 8, 4, 9, 10, 5, 0, 11 }
  uselistorder i32 19, { 2, 7, 3, 8, 4, 9, 5, 10, 6, 11, 17, 12, 13, 14, 0, 15, 1, 16 }
  uselistorder i32 13, { 3, 10, 12, 13, 11, 51, 0, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 9, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 2, 49, 50 }
  uselistorder i32 11, { 3, 9, 10, 16, 17, 18, 19, 20, 4, 5, 11, 6, 12, 1, 13, 2, 14, 0, 15, 21, 7, 22, 23, 24, 8, 25, 26, 27 }
  uselistorder i32 29, { 0, 5, 6, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32, i32)* @function_12e5c, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 2, 1, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23688.343 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @function_12dec(i8* %arg1) local_unnamed_addr {
dec_label_pc_12dec:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12df0 = load i8, i8* %arg1, align 1
  %v2_12df4 = icmp eq i8 %v3_12df0, 0
  %v0_12df8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12df4, i32 %v0_12df8)
  br label %dec_label_pc_12e00

dec_label_pc_12e00:                               ; preds = %dec_label_pc_12e00, %dec_label_pc_12dec
  %v0_12e00 = phi i32 [ %v1_12e00, %dec_label_pc_12e00 ], [ 0, %dec_label_pc_12dec ]
  %v1_12e00 = add i32 %v0_12e00, 1
  %v2_12e04 = add i32 %v1_12e00, %tmp
  %v3_12e04 = inttoptr i32 %v2_12e04 to i8*
  %v4_12e04 = load i8, i8* %v3_12e04, align 1
  %v6_12e04 = zext i8 %v4_12e04 to i32
  store i32 %v6_12e04, i32* @r3, align 4
  %v2_12e08 = icmp eq i8 %v4_12e04, 0
  br i1 %v2_12e08, label %dec_label_pc_12e10, label %dec_label_pc_12e00

dec_label_pc_12e10:                               ; preds = %dec_label_pc_12e00
  ret i32 %v1_12e00
}

define i32 @function_12e14(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12e14:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12e14 = load i8, i8* %arg1, align 1
  %v3_12e14 = zext i8 %v2_12e14 to i32
  store i32 %v3_12e14, i32* @r2, align 4
  %v2_12e18 = icmp eq i8 %v2_12e14, 0
  br i1 %v2_12e18, label %bb, label %dec_label_pc_12e24

bb:                                               ; preds = %dec_label_pc_12e14
  store i32 %v3_12e14, i32* @ip, align 4
  br label %dec_label_pc_12e38

dec_label_pc_12e24:                               ; preds = %dec_label_pc_12e14
  br label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %dec_label_pc_12e28, %dec_label_pc_12e24
  %v0_12e28 = phi i32 [ %v1_12e28, %dec_label_pc_12e28 ], [ 0, %dec_label_pc_12e24 ]
  %v1_12e28 = add i32 %v0_12e28, 1
  store i32 %v1_12e28, i32* @ip, align 4
  %v2_12e2c = add i32 %v1_12e28, %tmp
  %v3_12e2c = inttoptr i32 %v2_12e2c to i8*
  %v4_12e2c = load i8, i8* %v3_12e2c, align 1
  %v2_12e30 = icmp eq i8 %v4_12e2c, 0
  br i1 %v2_12e30, label %dec_label_pc_12e38, label %dec_label_pc_12e28

dec_label_pc_12e38:                               ; preds = %dec_label_pc_12e28, %bb
  %v0_12e38 = phi i32 [ %v3_12e14, %bb ], [ %v1_12e28, %dec_label_pc_12e28 ]
  br label %dec_label_pc_12e44

dec_label_pc_12e40:                               ; preds = %dec_label_pc_12e44
  %v0_12e40 = load i32, i32* %r1.global-to-local, align 4
  %v1_12e40 = add i32 %v0_12e40, 1
  %v2_12e40 = inttoptr i32 %v1_12e40 to i8*
  %v3_12e40 = load i8, i8* %v2_12e40, align 1
  %v4_12e40 = zext i8 %v3_12e40 to i32
  store i32 %v4_12e40, i32* @r2, align 4
  store i32 %v1_12e40, i32* %r1.global-to-local, align 4
  %v0_12e44.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_12e44

dec_label_pc_12e44:                               ; preds = %dec_label_pc_12e38, %dec_label_pc_12e40
  %v0_12e4c.off0 = phi i8 [ %v2_12e14, %dec_label_pc_12e38 ], [ %v3_12e40, %dec_label_pc_12e40 ]
  %v0_12e44 = phi i32 [ %v0_12e38, %dec_label_pc_12e38 ], [ %v0_12e44.pr, %dec_label_pc_12e40 ]
  %v1_12e44 = add i32 %v0_12e44, -1
  store i32 %v1_12e44, i32* @r3, align 4
  %v3_12e48 = icmp eq i32 %v0_12e44, 0
  %v2_12e4c = load i32, i32* @r0, align 4
  %v3_12e4c = inttoptr i32 %v2_12e4c to i8*
  store i8 %v0_12e4c.off0, i8* %v3_12e4c, align 1
  %v4_12e4c = load i32, i32* @r0, align 4
  %v5_12e4c = add i32 %v4_12e4c, 1
  store i32 %v5_12e4c, i32* @r0, align 4
  br i1 %v3_12e48, label %dec_label_pc_12e54, label %dec_label_pc_12e40

dec_label_pc_12e54:                               ; preds = %dec_label_pc_12e44
  %v0_12e54 = load i32, i32* @ip, align 4
  ret i32 %v0_12e54

; uselistorder directives
  uselistorder i32 %v0_12e44, { 1, 0 }
  uselistorder i32 %v1_12e28, { 0, 1, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12e44, { 1, 0 }
}

define i32 @function_12e5c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e5c:
  %ip.global-to-local = alloca i32, align 4
  %v2_12e5c = icmp eq i32 %arg3, 0
  %v0_12e60 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12e5c, i32 %v0_12e60)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12e68

dec_label_pc_12e68:                               ; preds = %dec_label_pc_12e68, %dec_label_pc_12e5c
  %v0_12e68 = phi i32 [ %v1_12e70, %dec_label_pc_12e68 ], [ 0, %dec_label_pc_12e5c ]
  %v2_12e68 = add i32 %v0_12e68, %arg2
  %v3_12e68 = inttoptr i32 %v2_12e68 to i8*
  %v4_12e68 = load i8, i8* %v3_12e68, align 1
  %v4_12e6c = add i32 %v0_12e68, %arg1
  %v5_12e6c = inttoptr i32 %v4_12e6c to i8*
  store i8 %v4_12e68, i8* %v5_12e6c, align 1
  %v0_12e70 = load i32, i32* %ip.global-to-local, align 4
  %v1_12e70 = add i32 %v0_12e70, 1
  store i32 %v1_12e70, i32* %ip.global-to-local, align 4
  %v9_12e74 = icmp eq i32 %v1_12e70, %arg3
  br i1 %v9_12e74, label %dec_label_pc_12e7c, label %dec_label_pc_12e68

dec_label_pc_12e7c:                               ; preds = %dec_label_pc_12e68
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12e70, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12e80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12e80:
  %r2.global-to-local = alloca i32, align 4
  %v2_12e80 = icmp eq i32 %arg2, 0
  %v0_12e84 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12e80, i32 %v0_12e84)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12e8c

dec_label_pc_12e8c:                               ; preds = %dec_label_pc_12e8c, %dec_label_pc_12e80
  %v2_12e90 = phi i32 [ %v1_12e94, %dec_label_pc_12e8c ], [ 0, %dec_label_pc_12e80 ]
  store i32 0, i32* @r3, align 4
  %v4_12e90 = add i32 %v2_12e90, %arg1
  %v5_12e90 = inttoptr i32 %v4_12e90 to i8*
  store i8 0, i8* %v5_12e90, align 1
  %v0_12e94 = load i32, i32* %r2.global-to-local, align 4
  %v1_12e94 = add i32 %v0_12e94, 1
  store i32 %v1_12e94, i32* %r2.global-to-local, align 4
  %v9_12e98 = icmp eq i32 %v1_12e94, %arg2
  br i1 %v9_12e98, label %dec_label_pc_12ea0, label %dec_label_pc_12e8c

dec_label_pc_12ea0:                               ; preds = %dec_label_pc_12e8c
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12e94, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12ea4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12ea4:
  %v7_12eb8 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_12eb8, label %dec_label_pc_12ec0, label %dec_label_pc_12ec8

dec_label_pc_12ec0:                               ; preds = %dec_label_pc_12edc, %dec_label_pc_12ec8, %dec_label_pc_12ea4, %dec_label_pc_12f08
  %storemerge = phi i32 [ %v1_12f08, %dec_label_pc_12f08 ], [ -1, %dec_label_pc_12ea4 ], [ -1, %dec_label_pc_12ec8 ], [ -1, %dec_label_pc_12edc ]
  ret i32 %storemerge

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12ea4
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_12ec0, label %dec_label_pc_12ed0

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12ec8
  br label %dec_label_pc_12ee8

dec_label_pc_12edc:                               ; preds = %bb, %dec_label_pc_12efc
  %v1_12ee83 = phi i32 [ %v1_12efc, %dec_label_pc_12efc ], [ 0, %bb ]
  %v1_12edc = add i32 %v0_12f08, 1
  %v9_12ee0 = icmp eq i32 %v1_12edc, %arg2
  br i1 %v9_12ee0, label %dec_label_pc_12ec0, label %dec_label_pc_12ee8

dec_label_pc_12ee8:                               ; preds = %dec_label_pc_12edc, %dec_label_pc_12ed0
  %v0_12f08 = phi i32 [ %v1_12edc, %dec_label_pc_12edc ], [ 0, %dec_label_pc_12ed0 ]
  %v1_12ee8 = phi i32 [ %v1_12ee83, %dec_label_pc_12edc ], [ 0, %dec_label_pc_12ed0 ]
  %v2_12ee8 = add i32 %v1_12ee8, %arg3
  %v3_12ee8 = inttoptr i32 %v2_12ee8 to i8*
  %v4_12ee8 = load i8, i8* %v3_12ee8, align 1
  %v2_12eec = add i32 %v0_12f08, %arg1
  %v3_12eec = inttoptr i32 %v2_12eec to i8*
  %v4_12eec = load i8, i8* %v3_12eec, align 1
  %v9_12ef0 = icmp eq i8 %v4_12eec, %v4_12ee8
  br i1 %v9_12ef0, label %dec_label_pc_12efc, label %bb

bb:                                               ; preds = %dec_label_pc_12ee8
  br label %dec_label_pc_12edc

dec_label_pc_12efc:                               ; preds = %dec_label_pc_12ee8
  %v1_12efc = add i32 %v1_12ee8, 1
  %v9_12f00 = icmp eq i32 %v1_12efc, %arg4
  br i1 %v9_12f00, label %dec_label_pc_12f08, label %dec_label_pc_12edc

dec_label_pc_12f08:                               ; preds = %dec_label_pc_12efc
  %v1_12f08 = add i32 %v0_12f08, 1
  br label %dec_label_pc_12ec0

; uselistorder directives
  uselistorder i32 %v1_12efc, { 1, 0 }
  uselistorder i32 %v1_12ee8, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12edc, { 1, 0 }
  uselistorder label %dec_label_pc_12ec0, { 3, 0, 1, 2 }
}

define i32 @function_12f10(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12f10:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12f10 = load i32, i32* @r4, align 4
  %v6_12f10 = load i32, i32* @r5, align 4
  %v12_12f10 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12f20

dec_label_pc_12f20:                               ; preds = %.thread, %dec_label_pc_12f34, %bb, %dec_label_pc_12f10
  %v0_12f20 = phi i32 [ %tmp, %dec_label_pc_12f10 ], [ %v5_12f20, %bb ], [ %v5_12f20, %dec_label_pc_12f34 ], [ %v5_12f20, %.thread ]
  %v1_12f20 = inttoptr i32 %v0_12f20 to i8*
  %v2_12f20 = load i8, i8* %v1_12f20, align 1
  %v5_12f20 = add i32 %v0_12f20, 1
  store i32 %v5_12f20, i32* @r5, align 4
  %v7_12f24 = icmp eq i8 %v2_12f20, 9
  br i1 %v7_12f24, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12f20
  br label %dec_label_pc_12f20

bb:                                               ; preds = %dec_label_pc_12f20
  %v3_12f20 = zext i8 %v2_12f20 to i32
  %v8_12f28 = icmp eq i8 %v2_12f20, 32
  store i32 %v3_12f20, i32* @r4, align 4
  br i1 %v8_12f28, label %dec_label_pc_12f20, label %dec_label_pc_12f34

dec_label_pc_12f34:                               ; preds = %bb
  %v7_12f34 = icmp eq i8 %v2_12f20, 10
  br i1 %v7_12f34, label %dec_label_pc_12f20, label %dec_label_pc_12f3c

dec_label_pc_12f3c:                               ; preds = %dec_label_pc_12f34
  %v7_12f3c = icmp eq i8 %v2_12f20, 45
  br i1 %v7_12f3c, label %dec_label_pc_1302c, label %dec_label_pc_12f44

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12f3c
  %v7_12f44 = icmp eq i8 %v2_12f20, 43
  br i1 %v7_12f44, label %bb44, label %dec_label_pc_12f54

bb44:                                             ; preds = %dec_label_pc_12f44
  %v2_12f48 = inttoptr i32 %v5_12f20 to i8*
  %v3_12f48 = load i8, i8* %v2_12f48, align 1
  %v4_12f48 = zext i8 %v3_12f48 to i32
  store i32 %v4_12f48, i32* @r4, align 4
  %v6_12f48 = add i32 %v0_12f20, 2
  store i32 %v6_12f48, i32* @r5, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12f54:                               ; preds = %bb44, %dec_label_pc_12f44, %dec_label_pc_1302c
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_1302c ], [ 2147483647, %dec_label_pc_12f44 ], [ 2147483647, %bb44 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1302c ], [ 0, %dec_label_pc_12f44 ], [ 0, %bb44 ]
  store i32 %storemerge1, i32* @r7, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_12f5c = call i32 @function_134e4(i32 %storemerge1, i32 %arg2)
  %v0_12f60 = load i32, i32* @r7, align 4
  store i32 %v0_12f60, i32* @r0, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  %v0_12f68 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12f68, i32* @r1, align 4
  %v0_12f6c = call i32 @function_133e8()
  %v0_12f7c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12f7c.outer

dec_label_pc_12f7c.outer:                         ; preds = %.thread5, %dec_label_pc_12f54
  %v2_12ff8.ph = phi i32 [ %v5_12ff8, %.thread5 ], [ 0, %dec_label_pc_12f54 ]
  %v1_12fbc.ph = phi i32 [ %v4_12ffc, %.thread5 ], [ %v0_12f7c.pre, %dec_label_pc_12f54 ]
  %v1_12fd4.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_12f54 ]
  %v3_12fc8 = icmp uge i32 %v2_12ff8.ph, %v0_12f6c
  %v9_12fc8 = icmp eq i32 %v2_12ff8.ph, %v0_12f6c
  %v2_12fcc = xor i1 %v3_12fc8, true
  %v3_12fcc = or i1 %v9_12fc8, %v2_12fcc
  %v2_12fd0 = xor i1 %v9_12fc8, true
  %v3_12fd0 = and i1 %v3_12fc8, %v2_12fd0
  %v2_12ff0 = icmp eq i1 %v9_12fc8, false
  br label %dec_label_pc_12f7c

dec_label_pc_12f7c:                               ; preds = %dec_label_pc_12f7c.outer, %dec_label_pc_13004
  %v1_12fd4 = phi i32 [ -1, %dec_label_pc_13004 ], [ %v1_12fd4.ph, %dec_label_pc_12f7c.outer ]
  %v1_12fbc = phi i32 [ %v3_13004, %dec_label_pc_13004 ], [ %v1_12fbc.ph, %dec_label_pc_12f7c.outer ]
  %v1_12f7c = urem i32 %v1_12fbc, 256
  %v1_12f80 = add nsw i32 %v1_12f7c, -48
  %v1_12f88 = add nsw i32 %v1_12f7c, -97
  %v1_12f8c = add i32 %v1_12fbc, -48
  store i32 %v1_12f8c, i32* @r2, align 4
  %v1_12f90 = add nsw i32 %v1_12f7c, -65
  %tmp75 = icmp ult i32 %v1_12f80, 10
  br i1 %tmp75, label %dec_label_pc_12fc0, label %dec_label_pc_12f98

dec_label_pc_12f98:                               ; preds = %dec_label_pc_12f7c
  %v2_12f98 = icmp ugt i32 %v1_12f90, 24
  %v7_12f98 = icmp eq i32 %v1_12f90, 25
  %v2_12f9c = xor i1 %v7_12f98, true
  %v3_12f9c = and i1 %v2_12f98, %v2_12f9c
  br i1 %v3_12f9c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_12f98
  store i32 0, i32* @r2, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_12f98, %bb45
  %v0_12fb014 = phi i32 [ %v1_12f8c, %dec_label_pc_12f98 ], [ 0, %bb45 ]
  %v2_12fa0 = xor i1 %v2_12f98, true
  %v3_12fa0 = or i1 %v7_12f98, %v2_12fa0
  br i1 %v3_12fa0, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  store i32 1, i32* @r2, align 4
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_12fb0 = phi i32 [ %v0_12fb014, %bb46 ], [ 1, %bb47 ]
  br i1 %v3_12f9c, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  %v6_12fa8 = icmp ugt i32 %v1_12f88, 24
  %v11_12fa8 = icmp eq i32 %v1_12f88, 25
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_12fac = phi i1 [ %v7_12f98, %bb48 ], [ %v11_12fa8, %bb49 ]
  %v0_12fac = phi i1 [ %v2_12f98, %bb48 ], [ %v6_12fa8, %bb49 ]
  %v2_12fac = xor i1 %v1_12fac, true
  %v3_12fac = and i1 %v0_12fac, %v2_12fac
  br i1 %v3_12fac, label %dec_label_pc_13010, label %dec_label_pc_12fb0

dec_label_pc_12fb0:                               ; preds = %bb50
  %v2_12fb0 = icmp eq i32 %v0_12fb0, 0
  %. = select i1 %v2_12fb0, i32 87, i32 55
  %v2_12fbc = sub i32 %v1_12fbc, %.
  store i32 %v2_12fbc, i32* @r2, align 4
  br label %dec_label_pc_12fc0

dec_label_pc_12fc0:                               ; preds = %dec_label_pc_12f7c, %dec_label_pc_12fb0
  %v0_12fd429 = phi i32 [ %v1_12f90, %dec_label_pc_12f7c ], [ %., %dec_label_pc_12fb0 ]
  %v3_12ff8 = phi i32 [ %v1_12f8c, %dec_label_pc_12f7c ], [ %v2_12fbc, %dec_label_pc_12fb0 ]
  %v1_12fc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_12fc0 = sub i32 %v3_12ff8, %v1_12fc0
  %v4_12fc0 = xor i32 %v1_12fc0, %v3_12ff8
  %v5_12fc0 = xor i32 %v2_12fc0, %v3_12ff8
  %v6_12fc0 = and i32 %v5_12fc0, %v4_12fc0
  %v7_12fc0 = icmp slt i32 %v6_12fc0, 0
  %v8_12fc0 = icmp slt i32 %v2_12fc0, 0
  %v2_12fc4 = xor i1 %v8_12fc0, %v7_12fc0
  br i1 %v2_12fc4, label %dec_label_pc_12fc8, label %dec_label_pc_13010

dec_label_pc_12fc8:                               ; preds = %dec_label_pc_12fc0
  br i1 %v3_12fcc, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_12fc8
  br label %bb54

bb54:                                             ; preds = %dec_label_pc_12fc8, %bb53
  %v0_12fd428 = phi i32 [ %v0_12fd429, %dec_label_pc_12fc8 ], [ 0, %bb53 ]
  br i1 %v3_12fd0, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  br label %bb56

bb56:                                             ; preds = %bb54, %bb55
  %v0_12fd4 = phi i32 [ %v0_12fd428, %bb54 ], [ 1, %bb55 ]
  %tmp76 = icmp slt i32 %v1_12fd4, 0
  %v4_12fd4 = zext i1 %tmp76 to i32
  %v5_12fd4 = or i32 %v0_12fd4, %v4_12fd4
  %v7_12fd4 = icmp eq i32 %v5_12fd4, 0
  br i1 %v7_12fd4, label %dec_label_pc_12fdc, label %dec_label_pc_13004

dec_label_pc_12fdc:                               ; preds = %bb56
  %v1_12fe8 = load i32, i32* %r8.global-to-local, align 4
  %v2_12fe8 = sub i32 %v3_12ff8, %v1_12fe8
  %v4_12fe8 = xor i32 %v1_12fe8, %v3_12ff8
  %v5_12fe8 = xor i32 %v2_12fe8, %v3_12ff8
  %v6_12fe8 = and i32 %v5_12fe8, %v4_12fe8
  %v7_12fe8 = icmp slt i32 %v6_12fe8, 0
  %v8_12fe8 = icmp slt i32 %v2_12fe8, 0
  %v9_12fe8 = icmp eq i32 %v3_12ff8, %v1_12fe8
  %v3_12fec = xor i1 %v8_12fe8, %v7_12fe8
  %v4_12fec = or i1 %v9_12fe8, %v3_12fec
  br i1 %v4_12fec, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_12fdc
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_12fdc
  br i1 %v2_12ff0, label %.thread5, label %dec_label_pc_13004

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_12ff8 = mul i32 %v1_12fc0, %v2_12ff8.ph
  %v5_12ff8 = add i32 %v4_12ff8, %v3_12ff8
  %v1_12ffc = load i32, i32* @r5, align 4
  %v2_12ffc = inttoptr i32 %v1_12ffc to i8*
  %v3_12ffc = load i8, i8* %v2_12ffc, align 1
  %v4_12ffc = zext i8 %v3_12ffc to i32
  %v6_12ffc = add i32 %v1_12ffc, 1
  store i32 %v6_12ffc, i32* @r5, align 4
  br label %dec_label_pc_12f7c.outer

dec_label_pc_13004:                               ; preds = %thread-pre-split, %bb56
  %v0_13004 = load i32, i32* @r5, align 4
  %v1_13004 = inttoptr i32 %v0_13004 to i8*
  %v2_13004 = load i8, i8* %v1_13004, align 1
  %v3_13004 = zext i8 %v2_13004 to i32
  %v5_13004 = add i32 %v0_13004, 1
  store i32 %v5_13004, i32* @r5, align 4
  br label %dec_label_pc_12f7c

dec_label_pc_13010:                               ; preds = %dec_label_pc_12fc0, %bb50
  %v1_13010 = icmp slt i32 %v1_12fd4, 0
  %v0_1303c = load i32, i32* %sl.global-to-local, align 4
  %v2_1303c = icmp eq i32 %v0_1303c, 0
  br i1 %v1_13010, label %dec_label_pc_1303c, label %dec_label_pc_13018

dec_label_pc_13018:                               ; preds = %dec_label_pc_13010
  br i1 %v2_1303c, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_13018
  %v2_1301c = sub i32 0, %v2_12ff8.ph
  br label %bb60

bb60:                                             ; preds = %.thread32, %bb61, %dec_label_pc_13018, %bb59
  %v1_13028 = phi i32 [ -2147483648, %bb61 ], [ %v2_12ff8.ph, %dec_label_pc_13018 ], [ %v2_1301c, %bb59 ], [ 2147483647, %.thread32 ]
  store i32 %v3_12f10, i32* @r4, align 4
  store i32 %v6_12f10, i32* @r5, align 4
  store i32 %v12_12f10, i32* @r7, align 4
  ret i32 %v1_13028

dec_label_pc_1302c:                               ; preds = %dec_label_pc_12f3c
  %v1_1302c = inttoptr i32 %v5_12f20 to i8*
  %v2_1302c = load i8, i8* %v1_1302c, align 1
  %v3_1302c = zext i8 %v2_1302c to i32
  store i32 %v3_1302c, i32* @r4, align 4
  %v5_1302c = add i32 %v0_12f20, 2
  store i32 %v5_1302c, i32* @r5, align 4
  br label %dec_label_pc_12f54

dec_label_pc_1303c:                               ; preds = %dec_label_pc_13010
  br i1 %v2_1303c, label %.thread32, label %bb61

.thread32:                                        ; preds = %dec_label_pc_1303c
  br label %bb60

bb61:                                             ; preds = %dec_label_pc_1303c
  br label %bb60

; uselistorder directives
  uselistorder i1 %v2_1303c, { 1, 0 }
  uselistorder i32 %v2_12fe8, { 1, 0 }
  uselistorder i32 %v1_12fe8, { 1, 0, 2 }
  uselistorder i32 %v2_12fc0, { 1, 0 }
  uselistorder i32 %v3_12ff8, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_12f98, { 1, 2, 0 }
  uselistorder i1 %v2_12f98, { 1, 0, 2 }
  uselistorder i32 %v1_12f7c, { 1, 2, 0 }
  uselistorder i32 %v1_12fbc, { 1, 2, 0 }
  uselistorder i32 %v1_12fd4, { 1, 0 }
  uselistorder i1 %v9_12fc8, { 1, 0, 2 }
  uselistorder i1 %v3_12fc8, { 1, 0 }
  uselistorder i32 %v2_12ff8.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_12f6c, { 1, 0 }
  uselistorder i32 %v5_12f20, { 3, 4, 5, 2, 1, 0 }
  uselistorder i8 %v2_12f20, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_12f20, { 0, 1, 3, 2 }
  uselistorder i8 9, { 5, 0, 1, 4, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %bb60, { 1, 0, 3, 2 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %dec_label_pc_12fc0, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_12f7c, { 1, 0 }
  uselistorder label %dec_label_pc_12f54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12f20, { 1, 2, 0, 3 }
}

define i32 @function_1304c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1304c:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1304c = load i32, i32* @r4, align 4
  store i32 %v3_1304c, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13064

dec_label_pc_13064:                               ; preds = %dec_label_pc_13088.dec_label_pc_13064_crit_edge, %dec_label_pc_1304c
  %v0_13068 = phi i32 [ %v0_13068.pre, %dec_label_pc_13088.dec_label_pc_13064_crit_edge ], [ %arg3, %dec_label_pc_1304c ]
  %v0_13064 = phi i32 [ %v5_13088, %dec_label_pc_13088.dec_label_pc_13064_crit_edge ], [ %tmp, %dec_label_pc_1304c ]
  %v4_13070 = call i32 @function_16664(i32 %v0_13068, i32 %v0_13064, i32 1)
  %v7_13074 = icmp eq i32 %v4_13070, 1
  %v0_1307c = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_13074, label %dec_label_pc_1307c, label %dec_label_pc_13094

dec_label_pc_1307c:                               ; preds = %dec_label_pc_13064
  %v1_1307c = add i32 %v0_1307c, 1
  store i32 %v1_1307c, i32* %r5.global-to-local, align 4
  %v1_13080 = load i32, i32* %r8.global-to-local, align 4
  %v6_13084 = icmp slt i32 %v1_1307c, %v1_13080
  br i1 %v6_13084, label %dec_label_pc_13088, label %.loopexit

dec_label_pc_13088:                               ; preds = %dec_label_pc_1307c
  %v0_13088 = load i32, i32* @r4, align 4
  %v1_13088 = inttoptr i32 %v0_13088 to i8*
  %v2_13088 = load i8, i8* %v1_13088, align 1
  %v5_13088 = add i32 %v0_13088, 1
  store i32 %v5_13088, i32* @r4, align 4
  %v7_1308c = icmp eq i8 %v2_13088, 10
  br i1 %v7_1308c, label %dec_label_pc_13094, label %dec_label_pc_13088.dec_label_pc_13064_crit_edge

dec_label_pc_13088.dec_label_pc_13064_crit_edge:  ; preds = %dec_label_pc_13088
  %v0_13068.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13064

dec_label_pc_13094:                               ; preds = %dec_label_pc_13064, %dec_label_pc_13088
  %v0_13094 = phi i32 [ %v1_1307c, %dec_label_pc_13088 ], [ %v0_1307c, %dec_label_pc_13064 ]
  %v2_13094 = icmp eq i32 %v0_13094, 0
  br i1 %v2_13094, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_13094
  store i32 0, i32* %r7.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_1307c, %dec_label_pc_13094, %bb
  %v0_1309c = load i32, i32* %r7.global-to-local, align 4
  %v2_130a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_130a0, i32* @r4, align 4
  ret i32 %v0_1309c

; uselistorder directives
  uselistorder i32 %v5_13088, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_16664, { 2, 3, 0, 1 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13094, { 1, 0 }
}

define i32 @function_130a8() local_unnamed_addr {
dec_label_pc_130a8:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_130a8 = load i32, i32* @r4, align 4
  %v6_130a8 = load i32, i32* @r5, align 4
  %v9_130a8 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_130b8 = call i32 @function_13994()
  store i32 0, i32* @r4, align 4
  %v2_130c0 = inttoptr i32 %v0_130b8 to i32*
  store i32 0, i32* %v2_130c0, align 4
  %v0_130cc = load i32, i32* @r4, align 4
  %v3_130d0 = call i32 @function_1561c(i32 2, i32 2, i32 %v0_130cc)
  %v7_130d4 = icmp eq i32 %v3_130d0, -1
  store i32 %v3_130d0, i32* @r5, align 4
  br i1 %v7_130d4, label %bb, label %dec_label_pc_130e4

bb:                                               ; preds = %dec_label_pc_130a8
  %v1_130dc = load i32, i32* @r4, align 4
  br label %dec_label_pc_1313c

dec_label_pc_130e4:                               ; preds = %dec_label_pc_130a8
  store i32 2, i32* %stack_var_-36, align 4
  %v1_130f8 = call i32 @function_152f0(i32 134744072)
  %v1_13104 = call i32 @function_15314(i32 53)
  %v2_13108 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13108, i32* @r4, align 4
  %v0_13110 = load i32, i32* @r6, align 4
  %v0_13118 = load i32, i32* @r5, align 4
  %v3_1311c = call i32 @function_15260(i32 %v0_13118, i32 %v2_13108, i32 %v0_13110)
  %v2_13124 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_13124, i32* @r2, align 4
  %v0_13128 = load i32, i32* @r5, align 4
  %v3_1312c = call i32 @function_152a4(i32 %v0_13128, i32 %v2_13108, i32 %v2_13124)
  %v0_13130 = load i32, i32* @r5, align 4
  store i32 %v0_13130, i32* @r0, align 4
  %v1_13134 = call i32 @function_165e8(i32 %v0_13130)
  br label %dec_label_pc_1313c

dec_label_pc_1313c:                               ; preds = %bb, %dec_label_pc_130e4
  %storemerge = phi i32 [ %v1_130f8, %dec_label_pc_130e4 ], [ %v1_130dc, %bb ]
  store i32 %v3_130a8, i32* @r4, align 4
  store i32 %v6_130a8, i32* @r5, align 4
  store i32 %v9_130a8, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_130d0, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_15260, { 2, 11, 1, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32)* @function_15314, { 10, 9, 8, 7, 2, 1, 5, 4, 100, 99, 98, 97, 96, 95, 94, 101, 93, 92, 91, 90, 89, 88, 87, 3, 6, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 72, 71, 75, 74, 73, 70, 66, 65, 69, 68, 67, 64, 63, 62, 61, 60, 59, 54, 53, 58, 57, 56, 55, 52, 51, 47, 46, 50, 49, 48, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 23, 22, 29, 28, 27, 26, 25, 24, 21, 20, 12, 11, 19, 18, 17, 16, 15, 14, 13, 0 }
  uselistorder i32 53, { 0, 1, 3, 2, 4 }
  uselistorder i32 (i32)* @function_152f0, { 7, 6, 1, 19, 20, 18, 5, 4, 3, 2, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1561c, { 3, 23, 1, 2, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder label %dec_label_pc_1313c, { 1, 0 }
}

define i32 @function_13148(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13148:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_1314c = load i8, i8* %tmp, align 1
  %v2_13150 = icmp eq i8 %v3_1314c, 0
  br i1 %v2_13150, label %bb, label %dec_label_pc_13164

bb:                                               ; preds = %dec_label_pc_13148
  %v4_1314c = zext i8 %v3_1314c to i32
  br label %dec_label_pc_13178

dec_label_pc_13164:                               ; preds = %dec_label_pc_13148
  br label %dec_label_pc_13168

dec_label_pc_13168:                               ; preds = %dec_label_pc_13168, %dec_label_pc_13164
  %v0_13168 = phi i32 [ %v1_13168, %dec_label_pc_13168 ], [ 0, %dec_label_pc_13164 ]
  %v1_13168 = add i32 %v0_13168, 1
  %v2_1316c = add i32 %v1_13168, %arg2
  %v3_1316c = inttoptr i32 %v2_1316c to i8*
  %v4_1316c = load i8, i8* %v3_1316c, align 1
  %v2_13170 = icmp eq i8 %v4_1316c, 0
  br i1 %v2_13170, label %dec_label_pc_13178, label %dec_label_pc_13168

dec_label_pc_13178:                               ; preds = %dec_label_pc_13168, %bb
  %v0_131bc21 = phi i32 [ %v4_1314c, %bb ], [ %v1_13168, %dec_label_pc_13168 ]
  store i32 0, i32* @r2, align 4
  %v0_131802 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_131802, 1
  br i1 %tmp29, label %dec_label_pc_131d0, label %dec_label_pc_1318c

dec_label_pc_1318c:                               ; preds = %dec_label_pc_13178, %dec_label_pc_13180.backedge
  %v0_13184.in = phi i32 [ %v0_13184, %dec_label_pc_13180.backedge ], [ %v0_131802, %dec_label_pc_13178 ]
  %v1_13198 = phi i32 [ %v1_1319815, %dec_label_pc_13180.backedge ], [ 0, %dec_label_pc_13178 ]
  %v0_1318c = phi i32 [ %v5_1318c, %dec_label_pc_13180.backedge ], [ %tmp23, %dec_label_pc_13178 ]
  %v0_13184 = add i32 %v0_13184.in, -1
  %v1_1318c = inttoptr i32 %v0_1318c to i8*
  %v2_1318c = load i8, i8* %v1_1318c, align 1
  %v3_1318c = zext i8 %v2_1318c to i32
  store i32 %v3_1318c, i32* @ip, align 4
  %v5_1318c = add i32 %v0_1318c, 1
  %v1_13190 = add nsw i32 %v3_1318c, -65
  %v2_13198 = add i32 %v1_13198, %arg2
  %v3_13198 = inttoptr i32 %v2_13198 to i8*
  %v4_13198 = load i8, i8* %v3_13198, align 1
  %v6_13198 = zext i8 %v4_13198 to i32
  %v1_1319c = add nsw i32 %v6_13198, -65
  %tmp38 = icmp ult i32 %v1_13190, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_1318c
  %v5_131a0 = or i32 %v3_1318c, 96
  store i32 %v5_131a0, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_1318c, %bb30
  %v0_131ac = phi i32 [ %v3_1318c, %dec_label_pc_1318c ], [ %v5_131a0, %bb30 ]
  %tmp39 = icmp ult i32 %v1_1319c, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_131a8 = or i32 %v6_13198, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_131ac = phi i32 [ %v6_13198, %bb31 ], [ %v5_131a8, %bb32 ]
  %v9_131ac = icmp eq i32 %v0_131ac, %v1_131ac
  br i1 %v9_131ac, label %dec_label_pc_131b8, label %bb34

bb34:                                             ; preds = %bb33
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_13180.backedge

dec_label_pc_13180.backedge:                      ; preds = %bb34, %dec_label_pc_131b8
  %v1_1319815 = phi i32 [ 0, %bb34 ], [ %v1_131b8, %dec_label_pc_131b8 ]
  %tmp35 = icmp slt i32 %v0_13184, 1
  br i1 %tmp35, label %dec_label_pc_131d0, label %dec_label_pc_1318c

dec_label_pc_131b8:                               ; preds = %bb33
  %v1_131b8 = add i32 %v1_13198, 1
  store i32 %v1_131b8, i32* @r2, align 4
  %v9_131bc = icmp eq i32 %v0_131bc21, %v1_131b8
  br i1 %v9_131bc, label %dec_label_pc_131c4, label %dec_label_pc_13180.backedge

dec_label_pc_131c4:                               ; preds = %dec_label_pc_131b8
  %v2_131c4 = sub i32 %v5_1318c, %tmp23
  br label %dec_label_pc_131d0

dec_label_pc_131d0:                               ; preds = %dec_label_pc_13180.backedge, %dec_label_pc_13178, %dec_label_pc_131c4
  %storemerge = phi i32 [ %v2_131c4, %dec_label_pc_131c4 ], [ -1, %dec_label_pc_13178 ], [ -1, %dec_label_pc_13180.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_131b8, { 1, 2, 0 }
  uselistorder i32 %v0_1318c, { 1, 0 }
  uselistorder i32 %v1_13198, { 1, 0 }
  uselistorder i8 %v3_1314c, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_131d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13180.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_1318c, { 1, 0 }
}

define i32 @function_131d8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_131d8:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_131d8 = load i8, i8* %arg1, align 1
  %v2_131dc = icmp eq i8 %v2_131d8, 0
  br i1 %v2_131dc, label %bb, label %dec_label_pc_131e8

bb:                                               ; preds = %dec_label_pc_131d8
  %v3_131d8 = zext i8 %v2_131d8 to i32
  br label %dec_label_pc_131fc

dec_label_pc_131e8:                               ; preds = %dec_label_pc_131d8
  br label %dec_label_pc_131ec

dec_label_pc_131ec:                               ; preds = %dec_label_pc_131ec, %dec_label_pc_131e8
  %v0_131ec = phi i32 [ %v1_131ec, %dec_label_pc_131ec ], [ 0, %dec_label_pc_131e8 ]
  %v1_131ec = add i32 %v0_131ec, 1
  %v2_131f0 = add i32 %v1_131ec, %tmp
  %v3_131f0 = inttoptr i32 %v2_131f0 to i8*
  %v4_131f0 = load i8, i8* %v3_131f0, align 1
  %v2_131f4 = icmp eq i8 %v4_131f0, 0
  br i1 %v2_131f4, label %dec_label_pc_131fc, label %dec_label_pc_131ec

dec_label_pc_131fc:                               ; preds = %dec_label_pc_131ec, %bb
  %v0_132483 = phi i32 [ %v3_131d8, %bb ], [ %v1_131ec, %dec_label_pc_131ec ]
  %v1_131fc = inttoptr i32 %arg2 to i8*
  %v2_131fc = load i8, i8* %v1_131fc, align 1
  %v3_131fc = zext i8 %v2_131fc to i32
  %v2_13200 = icmp eq i8 %v2_131fc, 0
  br i1 %v2_13200, label %bb21, label %dec_label_pc_1320c

bb21:                                             ; preds = %dec_label_pc_131fc
  store i32 %v3_131fc, i32* @r2, align 4
  br label %dec_label_pc_13220

dec_label_pc_1320c:                               ; preds = %dec_label_pc_131fc
  br label %dec_label_pc_13210

dec_label_pc_13210:                               ; preds = %dec_label_pc_13210, %dec_label_pc_1320c
  %v0_13210 = phi i32 [ %v1_13210, %dec_label_pc_13210 ], [ 0, %dec_label_pc_1320c ]
  %v1_13210 = add i32 %v0_13210, 1
  store i32 %v1_13210, i32* @r2, align 4
  %v2_13214 = add i32 %v1_13210, %arg2
  %v3_13214 = inttoptr i32 %v2_13214 to i8*
  %v4_13214 = load i8, i8* %v3_13214, align 1
  %v2_13218 = icmp eq i8 %v4_13214, 0
  br i1 %v2_13218, label %dec_label_pc_13220, label %dec_label_pc_13210

dec_label_pc_13220:                               ; preds = %dec_label_pc_13210, %bb21
  %v1_13220 = phi i32 [ %v3_131fc, %bb21 ], [ %v1_13210, %dec_label_pc_13210 ]
  %v9_13220 = icmp eq i32 %v0_132483, %v1_13220
  br i1 %v9_13220, label %dec_label_pc_13248.preheader, label %dec_label_pc_13228

dec_label_pc_13248.preheader:                     ; preds = %dec_label_pc_13220
  %v2_132485 = icmp eq i32 %v0_132483, 0
  br i1 %v2_132485, label %dec_label_pc_13250, label %dec_label_pc_13230

dec_label_pc_13228:                               ; preds = %dec_label_pc_13230, %dec_label_pc_13220
  ret i32 0

dec_label_pc_13230:                               ; preds = %dec_label_pc_13240, %dec_label_pc_13248.preheader
  %v0_13248.in = phi i32 [ %v0_13248, %dec_label_pc_13240 ], [ %v0_132483, %dec_label_pc_13248.preheader ]
  %v0_13244 = phi i32 [ %v1_13244, %dec_label_pc_13240 ], [ %arg2, %dec_label_pc_13248.preheader ]
  %v0_13240 = phi i32 [ %v1_13240, %dec_label_pc_13240 ], [ %tmp, %dec_label_pc_13248.preheader ]
  %v0_13248 = add i32 %v0_13248.in, -1
  %v1_13230 = inttoptr i32 %v0_13240 to i8*
  %v2_13230 = load i8, i8* %v1_13230, align 1
  %v3_13230 = zext i8 %v2_13230 to i32
  store i32 %v3_13230, i32* @r2, align 4
  %v1_13234 = inttoptr i32 %v0_13244 to i8*
  %v2_13234 = load i8, i8* %v1_13234, align 1
  %v9_13238 = icmp eq i8 %v2_13230, %v2_13234
  br i1 %v9_13238, label %dec_label_pc_13240, label %dec_label_pc_13228

dec_label_pc_13240:                               ; preds = %dec_label_pc_13230
  %v1_13240 = add i32 %v0_13240, 1
  %v1_13244 = add i32 %v0_13244, 1
  %v2_13248 = icmp eq i32 %v0_13248, 0
  br i1 %v2_13248, label %dec_label_pc_13250, label %dec_label_pc_13230

dec_label_pc_13250:                               ; preds = %dec_label_pc_13240, %dec_label_pc_13248.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_13210, { 0, 1, 3, 2 }
  uselistorder i8 %v2_131d8, { 1, 0 }
}

define i32 @function_13258(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13258:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1325c = load i8, i8* %arg1, align 1
  %v2_13260 = icmp eq i8 %v2_1325c, 0
  %v0_13264 = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_13260, label %bb, label %dec_label_pc_13270

bb:                                               ; preds = %dec_label_pc_13258
  %v3_1325c = zext i8 %v2_1325c to i32
  br label %dec_label_pc_13284

dec_label_pc_13270:                               ; preds = %dec_label_pc_13258
  br label %dec_label_pc_13274

dec_label_pc_13274:                               ; preds = %dec_label_pc_13274, %dec_label_pc_13270
  %v0_13274 = phi i32 [ %v1_13274, %dec_label_pc_13274 ], [ 0, %dec_label_pc_13270 ]
  %v1_13274 = add i32 %v0_13274, 1
  %v2_13278 = add i32 %v1_13274, %tmp
  %v3_13278 = inttoptr i32 %v2_13278 to i8*
  %v4_13278 = load i8, i8* %v3_13278, align 1
  %v2_1327c = icmp eq i8 %v4_13278, 0
  br i1 %v2_1327c, label %dec_label_pc_13284, label %dec_label_pc_13274

dec_label_pc_13284:                               ; preds = %dec_label_pc_13274, %bb
  %v6_132ac = phi i32 [ %v3_1325c, %bb ], [ %v1_13274, %dec_label_pc_13274 ]
  %v0_13284 = load i32, i32* %r1.global-to-local, align 4
  %v1_13284 = inttoptr i32 %v0_13284 to i8*
  %v2_13284 = load i8, i8* %v1_13284, align 1
  %v3_13284 = zext i8 %v2_13284 to i32
  %v2_13288 = icmp eq i8 %v2_13284, 0
  br i1 %v2_13288, label %bb26, label %dec_label_pc_13294

bb26:                                             ; preds = %dec_label_pc_13284
  store i32 %v3_13284, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_132a8

dec_label_pc_13294:                               ; preds = %dec_label_pc_13284
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13298

dec_label_pc_13298:                               ; preds = %dec_label_pc_13298, %dec_label_pc_13294
  %v0_13298 = phi i32 [ %v1_13298, %dec_label_pc_13298 ], [ 0, %dec_label_pc_13294 ]
  %v1_13298 = add i32 %v0_13298, 1
  store i32 %v1_13298, i32* %r2.global-to-local, align 4
  %v2_1329c = add i32 %v1_13298, %v0_13284
  %v3_1329c = inttoptr i32 %v2_1329c to i8*
  %v4_1329c = load i8, i8* %v3_1329c, align 1
  %v2_132a0 = icmp eq i8 %v4_1329c, 0
  br i1 %v2_132a0, label %dec_label_pc_132a8, label %dec_label_pc_13298

dec_label_pc_132a8:                               ; preds = %dec_label_pc_13298, %bb26
  %v0_132a8 = phi i32 [ %v3_13284, %bb26 ], [ %v1_13298, %dec_label_pc_13298 ]
  %v2_132a8 = sub i32 %v0_132a8, %v0_13264
  %v4_132a8 = xor i32 %v0_132a8, %v0_13264
  %v5_132a8 = xor i32 %v2_132a8, %v0_132a8
  %v6_132a8 = and i32 %v5_132a8, %v4_132a8
  %v5_132ac = icmp slt i32 %v0_132a8, %v0_13264
  br i1 %v5_132ac, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_132a8
  %v8_132ac = sub i32 %v6_132ac, %v0_13264
  %v10_132ac = xor i32 %v6_132ac, %v0_13264
  %v11_132ac = xor i32 %v8_132ac, %v6_132ac
  %v12_132ac = and i32 %v11_132ac, %v10_132ac
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_132a8, %bb27
  %v1_132b0.in = phi i32 [ %v6_132a8, %dec_label_pc_132a8 ], [ %v12_132ac, %bb27 ]
  %v0_132b0.in = phi i32 [ %v2_132a8, %dec_label_pc_132a8 ], [ %v8_132ac, %bb27 ]
  %v0_132b0 = icmp slt i32 %v0_132b0.in, 0
  %v1_132b0 = icmp slt i32 %v1_132b0.in, 0
  %v2_132b0 = xor i1 %v1_132b0, %v0_132b0
  br i1 %v2_132b0, label %dec_label_pc_132dc, label %dec_label_pc_132c0.preheader

dec_label_pc_132c0.preheader:                     ; preds = %bb28
  %v2_132c05 = icmp eq i32 %v0_13264, 0
  br i1 %v2_132c05, label %dec_label_pc_132dc, label %dec_label_pc_132c8

dec_label_pc_132b8:                               ; preds = %dec_label_pc_132c8
  %v1_132b8 = add i32 %v0_132b8, 1
  %v1_132bc = add i32 %v0_132bc, 1
  store i32 %v1_132bc, i32* %r1.global-to-local, align 4
  %v2_132c0 = icmp eq i32 %v0_132c0, 0
  br i1 %v2_132c0, label %dec_label_pc_132dc, label %dec_label_pc_132c8

dec_label_pc_132c8:                               ; preds = %dec_label_pc_132b8, %dec_label_pc_132c0.preheader
  %v0_132c0.in = phi i32 [ %v0_132c0, %dec_label_pc_132b8 ], [ %v0_13264, %dec_label_pc_132c0.preheader ]
  %v0_132bc = phi i32 [ %v1_132bc, %dec_label_pc_132b8 ], [ %v0_13284, %dec_label_pc_132c0.preheader ]
  %v0_132b8 = phi i32 [ %v1_132b8, %dec_label_pc_132b8 ], [ %tmp, %dec_label_pc_132c0.preheader ]
  %v0_132c0 = add i32 %v0_132c0.in, -1
  %v1_132c8 = inttoptr i32 %v0_132b8 to i8*
  %v2_132c8 = load i8, i8* %v1_132c8, align 1
  %v3_132c8 = zext i8 %v2_132c8 to i32
  store i32 %v3_132c8, i32* %r2.global-to-local, align 4
  %v1_132cc = inttoptr i32 %v0_132bc to i8*
  %v2_132cc = load i8, i8* %v1_132cc, align 1
  %v9_132d0 = icmp eq i8 %v2_132c8, %v2_132cc
  br i1 %v9_132d0, label %dec_label_pc_132b8, label %dec_label_pc_132dc

dec_label_pc_132dc:                               ; preds = %dec_label_pc_132b8, %dec_label_pc_132c0.preheader, %dec_label_pc_132c8, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_132c0.preheader ], [ 1, %dec_label_pc_132b8 ], [ 0, %dec_label_pc_132c8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_132b8, { 1, 0 }
  uselistorder i32 %v0_132bc, { 1, 0 }
  uselistorder i32 %v0_132a8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_13298, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13264, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_1325c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_132dc, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_132ec(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_132ec:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v3_132ec = load i32, i32* @r4, align 4
  %v6_132ec = load i32, i32* @r5, align 4
  %v12_132ec = load i32, i32* @r7, align 4
  %v0_132f0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_132f0, i32* %r8.global-to-local, align 4
  %v2_132f0 = icmp eq i32 %v0_132f0, 0
  store i1 %v2_132f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_132f0, label %dec_label_pc_133d0, label %dec_label_pc_13300

dec_label_pc_13300:                               ; preds = %dec_label_pc_132ec
  %v3_13300 = icmp eq i8 %arg1, 0
  store i1 %v3_13300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13300, label %.thread, label %dec_label_pc_13314

.thread:                                          ; preds = %dec_label_pc_13300
  %v4_13308 = inttoptr i32 %v0_132f0 to i8*
  store i8 48, i8* %v4_13308, align 1
  %v0_1330c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1330c.pr.pr, label %.thread1, label %dec_label_pc_13314

.thread1:                                         ; preds = %.thread
  %v4_1330c = load i32, i32* %r8.global-to-local, align 4
  %v5_1330c = add i32 %v4_1330c, 1
  %v6_1330c = inttoptr i32 %v5_1330c to i8*
  store i8 0, i8* %v6_1330c, align 1
  %v0_13310.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13310.pr.pr, label %dec_label_pc_133d0, label %dec_label_pc_13314

dec_label_pc_13314:                               ; preds = %dec_label_pc_13300, %.thread, %.thread1
  %tmp47 = icmp slt i8 %arg1, 0
  %v7_13318 = icmp eq i32 %arg2, 10
  store i1 %v7_13318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13318, label %bb, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_13314
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_13314
  %v4_13314 = zext i1 %tmp47 to i32
  store i32 %v4_13314, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp47, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_133388 = sub nsw i32 0, %tmp
  %tmp.v3_133388 = select i1 %phitmp, i32 %tmp, i32 %v3_133388
  %tmp46 = zext i1 %phitmp to i32
  %. = xor i32 %tmp46, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread28
  %storemerge30 = phi i32 [ %tmp, %.thread28 ], [ %tmp.v3_133388, %bb ]
  %storemerge = phi i32 [ 0, %.thread28 ], [ %., %bb ]
  store i32 %storemerge30, i32* @r4, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* @r5, align 4
  %v2_13344 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_13344, i32* @r7, align 4
  br label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %bb45, %.thread6
  %v0_13348 = phi i32 [ %v0_1336c, %bb45 ], [ %storemerge30, %.thread6 ]
  store i32 %v0_13348, i32* %r0.global-to-local, align 4
  %v0_1334c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1334c, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_13348, 16777216
  %v1_13350 = sdiv i32 %sext, 16777216
  %v3_13350 = call i32 @function_134e4(i32 %v1_13350, i32 %v0_1334c)
  %v7_13354 = icmp eq i32 %v0_1334c, 9
  store i1 %v7_13354, i1* %cpsr_z.global-to-local, align 1
  %v1_13358 = add i32 %v0_1334c, 48
  %v0_1335c = load i32, i32* @r4, align 4
  store i32 %v0_1335c, i32* @r0, align 4
  %v7_13360 = icmp sgt i32 %v0_1334c, 9
  %extract.t = trunc i32 %v1_13358 to i8
  br i1 %v7_13360, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_13348
  %v9_13360 = add i32 %v0_1334c, 55
  %extract.t27 = trunc i32 %v9_13360 to i8
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_13348, %bb44
  %v0_13368.off0 = phi i8 [ %extract.t, %dec_label_pc_13348 ], [ %extract.t27, %bb44 ]
  %v0_13364 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13364, i32* @r1, align 4
  %v2_13368 = load i32, i32* @r5, align 4
  %v3_13368 = load i32, i32* @r7, align 4
  %v4_13368 = add i32 %v3_13368, %v2_13368
  %v5_13368 = inttoptr i32 %v4_13368 to i8*
  store i8 %v0_13368.off0, i8* %v5_13368, align 1
  %v0_1336c = call i32 @function_133e8()
  store i32 %v0_1336c, i32* %r0.global-to-local, align 4
  store i32 %v0_1336c, i32* @r4, align 4
  %v2_13370 = icmp eq i32 %v0_1336c, 0
  store i1 %v2_13370, i1* %cpsr_z.global-to-local, align 1
  %v0_13374 = load i32, i32* @r5, align 4
  %v1_13374 = add i32 %v0_13374, -1
  store i32 %v1_13374, i32* @r5, align 4
  br i1 %v2_13370, label %dec_label_pc_1337c, label %dec_label_pc_13348

dec_label_pc_1337c:                               ; preds = %bb45
  %v0_1337c = load i32, i32* %sl.global-to-local, align 4
  %v2_1337c = icmp eq i32 %v0_1337c, 0
  store i1 %v2_1337c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1337c, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_1337c
  %v3_13380 = ptrtoint i32* %stack_var_-32 to i32
  %v3_13384 = add i32 %v1_13374, %v3_13380
  store i32 %v3_13384, i32* %r2.global-to-local, align 4
  %v4_1338c = add i32 %v3_13384, -34
  %v5_1338c = inttoptr i32 %v4_1338c to i8*
  store i8 45, i8* %v5_1338c, align 1
  %v0_13390.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_13390.pre = load i32, i32* @r5, align 4
  br i1 %v0_13390.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_1337c
  %v1_13390 = phi i32 [ %v1_13374, %dec_label_pc_1337c ], [ %v1_13390.pre, %.thread11 ]
  %v2_13390 = add i32 %v1_13390, 1
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_1339c = phi i32 [ %v2_13390, %.thread12 ], [ %v1_13390.pre, %.thread11 ]
  %v0_13394 = load i32, i32* @r7, align 4
  %v2_13394 = add i32 %v0_13394, %v1_1339c
  %v3_13394 = inttoptr i32 %v2_13394 to i8*
  %v4_13394 = load i8, i8* %v3_13394, align 1
  %v6_13394 = zext i8 %v4_13394 to i32
  %v2_13398 = icmp eq i8 %v4_13394, 0
  store i1 %v2_13398, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_13394, i32* %r2.global-to-local, align 4
  br i1 %v2_13398, label %dec_label_pc_133e0, label %dec_label_pc_133a8.preheader

dec_label_pc_133a8.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_133a8

dec_label_pc_133a8:                               ; preds = %dec_label_pc_133a8.preheader, %dec_label_pc_133a8
  %v0_133a8 = phi i32 [ 0, %dec_label_pc_133a8.preheader ], [ %v1_133a8, %dec_label_pc_133a8 ]
  %v1_133a8 = add i32 %v0_133a8, 1
  store i32 %v1_133a8, i32* %r1.global-to-local, align 4
  %v2_133ac = add i32 %v1_133a8, %v2_13394
  %v3_133ac = inttoptr i32 %v2_133ac to i8*
  %v4_133ac = load i8, i8* %v3_133ac, align 1
  %v2_133b0 = icmp eq i8 %v4_133ac, 0
  store i1 %v2_133b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_133b0, label %dec_label_pc_133b8, label %dec_label_pc_133a8

dec_label_pc_133b8:                               ; preds = %dec_label_pc_133a8, %dec_label_pc_133e0
  %v0_133bc24 = phi i32 [ %v6_13394, %dec_label_pc_133e0 ], [ %v1_133a8, %dec_label_pc_133a8 ]
  %v0_133b8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_133b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_133bc

dec_label_pc_133bc:                               ; preds = %dec_label_pc_133bc.dec_label_pc_133bc_crit_edge, %dec_label_pc_133b8
  %v2_133c8 = phi i32 [ %v5_133c8, %dec_label_pc_133bc.dec_label_pc_133bc_crit_edge ], [ %v0_133b8, %dec_label_pc_133b8 ]
  %v0_133c0 = phi i32 [ %v0_133c0.pre, %dec_label_pc_133bc.dec_label_pc_133bc_crit_edge ], [ %v2_13394, %dec_label_pc_133b8 ]
  %v0_133bc = phi i32 [ %v0_133bc.pre, %dec_label_pc_133bc.dec_label_pc_133bc_crit_edge ], [ %v0_133bc24, %dec_label_pc_133b8 ]
  %v1_133bc = add i32 %v0_133bc, -1
  store i32 %v1_133bc, i32* %r1.global-to-local, align 4
  %v1_133c0 = inttoptr i32 %v0_133c0 to i8*
  %v2_133c0 = load i8, i8* %v1_133c0, align 1
  %v5_133c0 = add i32 %v0_133c0, 1
  store i32 %v5_133c0, i32* %r2.global-to-local, align 4
  %v3_133c4 = icmp eq i32 %v0_133bc, 0
  store i1 %v3_133c4, i1* %cpsr_z.global-to-local, align 1
  %v3_133c8 = inttoptr i32 %v2_133c8 to i8*
  store i8 %v2_133c0, i8* %v3_133c8, align 1
  %v4_133c8 = load i32, i32* %r0.global-to-local, align 4
  %v5_133c8 = add i32 %v4_133c8, 1
  store i32 %v5_133c8, i32* %r0.global-to-local, align 4
  br i1 %v3_133c4, label %dec_label_pc_133d0, label %dec_label_pc_133bc.dec_label_pc_133bc_crit_edge

dec_label_pc_133bc.dec_label_pc_133bc_crit_edge:  ; preds = %dec_label_pc_133bc
  %v0_133bc.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_133c0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_133bc

dec_label_pc_133d0:                               ; preds = %dec_label_pc_133bc, %.thread1, %dec_label_pc_132ec
  %v0_133d0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_133d0, i32* %r0.global-to-local, align 4
  store i32 %v3_132ec, i32* @r4, align 4
  store i32 %v6_132ec, i32* @r5, align 4
  store i32 %v12_132ec, i32* @r7, align 4
  ret i32 %v0_133d0

dec_label_pc_133e0:                               ; preds = %.thread11._crit_edge
  store i32 %v6_13394, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_133b8

; uselistorder directives
  uselistorder i32 %v5_133c8, { 1, 0 }
  uselistorder i1 %v3_133c4, { 1, 0 }
  uselistorder i32 %v0_133c0, { 1, 0 }
  uselistorder i32 %v1_133a8, { 0, 1, 3, 2 }
  uselistorder i32 %v6_13394, { 1, 0 }
  uselistorder i32 %v2_13394, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13390.pre, { 1, 0 }
  uselistorder i32 %v1_13374, { 1, 0, 2 }
  uselistorder i32 %v0_1336c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1334c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_132f0, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_133b8, { 1, 0 }
  uselistorder label %dec_label_pc_133a8, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_13314, { 2, 1, 0 }
}

define i32 @function_133e8() local_unnamed_addr {
dec_label_pc_133e8:
  %r2.global-to-local = alloca i32, align 4
  %v0_133e8 = load i32, i32* @r1, align 4
  %v1_133e8 = add i32 %v0_133e8, -1
  store i32 %v1_133e8, i32* %r2.global-to-local, align 4
  %v2_133e8 = icmp eq i32 %v0_133e8, 0
  %v7_133e8 = icmp eq i32 %v0_133e8, 1
  %v0_133ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_133e8, i32 %v0_133ec)
  br i1 %v2_133e8, label %dec_label_pc_134d0, label %dec_label_pc_133f4

dec_label_pc_133f4:                               ; preds = %dec_label_pc_133e8
  %v0_133f4 = load i32, i32* @r0, align 4
  %v1_133f4 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_133f4, %v1_133f4
  br i1 %tmp, label %dec_label_pc_133fc, label %dec_label_pc_13488

dec_label_pc_133fc:                               ; preds = %dec_label_pc_133f4
  %v1_133fc = load i32, i32* %r2.global-to-local, align 4
  %v2_133fc = and i32 %v1_133fc, %v1_133f4
  %v4_133fc = icmp eq i32 %v2_133fc, 0
  br i1 %v4_133fc, label %dec_label_pc_13494, label %dec_label_pc_13404

dec_label_pc_13404:                               ; preds = %dec_label_pc_133fc
  %v3_13404 = icmp ult i32 %v1_133f4, 536870912
  br i1 %v3_13404, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13404
  %v4_13408 = mul i32 %v1_133f4, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13404, %.thread
  %v0_13428.pr36.ph = phi i32 [ %v4_13408, %.thread ], [ %v1_133f4, %dec_label_pc_13404 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13404 ]
  store i32 %storemerge133, i32* @r3, align 4
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_13428.pr36 = phi i32 [ %v4_1341c, %bb81 ], [ %v0_13428.pr36.ph, %.preheader.preheader ]
  %v1_13420 = phi i32 [ %v4_13420, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_13414 = icmp ugt i32 %v0_13428.pr36, 268435455
  br i1 %v2_13414, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_13428thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_13418 = icmp ult i32 %v0_13428.pr36, %v0_133f4
  br i1 %v4_13418, label %bb80, label %dec_label_pc_13428thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_1341c = and i32 %v0_13428.pr36, 268435456
  %v3_1341c = icmp eq i32 %v2_1341c, 0
  %v4_1341c = mul i32 %v0_13428.pr36, 16
  br i1 %v3_1341c, label %bb81, label %dec_label_pc_13428.loopexit

bb81:                                             ; preds = %bb80
  %v2_13420 = and i32 %v1_13420, 268435456
  %v3_13420 = icmp eq i32 %v2_13420, 0
  %v4_13420 = mul i32 %v1_13420, 16
  store i32 %v4_13420, i32* @r3, align 4
  br i1 %v3_13420, label %.preheader, label %dec_label_pc_13428thread-pre-split.loopexit.loopexit

dec_label_pc_13428thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1343448.ph = phi i32 [ %v1_13420, %bb ], [ %v4_13420, %bb81 ]
  %v0_13428.pr38.ph = phi i32 [ %v0_13428.pr36, %bb ], [ %v4_1341c, %bb81 ]
  br label %dec_label_pc_13428thread-pre-split.loopexit

dec_label_pc_13428thread-pre-split.loopexit:      ; preds = %dec_label_pc_13428thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1343448 = phi i32 [ %v1_13420, %.thread2 ], [ %v1_1343448.ph, %dec_label_pc_13428thread-pre-split.loopexit.loopexit ]
  %v0_13428.pr38 = phi i32 [ %v0_13428.pr36, %.thread2 ], [ %v0_13428.pr38.ph, %dec_label_pc_13428thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13428thread-pre-split

dec_label_pc_13428thread-pre-split:               ; preds = %dec_label_pc_13428thread-pre-split.loopexit, %bb83
  %v1_1343446 = phi i32 [ %v1_1343448, %dec_label_pc_13428thread-pre-split.loopexit ], [ %v3_13434, %bb83 ]
  %v0_13428.pr = phi i32 [ %v0_13428.pr38, %dec_label_pc_13428thread-pre-split.loopexit ], [ %v3_13430, %bb83 ]
  br label %dec_label_pc_13428

dec_label_pc_13428.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_13428

dec_label_pc_13428:                               ; preds = %dec_label_pc_13428.loopexit, %dec_label_pc_13428thread-pre-split
  %v1_13434 = phi i32 [ %v1_1343446, %dec_label_pc_13428thread-pre-split ], [ %v1_13420, %dec_label_pc_13428.loopexit ]
  %v1_13430 = phi i32 [ %v0_13428.pr, %dec_label_pc_13428thread-pre-split ], [ %v4_1341c, %dec_label_pc_13428.loopexit ]
  %v2_13428 = icmp slt i32 %v1_13430, 0
  br i1 %v2_13428, label %dec_label_pc_1343c, label %bb82

bb82:                                             ; preds = %dec_label_pc_13428
  %v4_1342c = icmp ult i32 %v1_13430, %v0_133f4
  br i1 %v4_1342c, label %bb83, label %dec_label_pc_1343c

bb83:                                             ; preds = %bb82
  %v3_13430 = mul i32 %v1_13430, 2
  %v2_13434 = icmp slt i32 %v1_13434, 0
  %v3_13434 = mul i32 %v1_13434, 2
  store i32 %v3_13434, i32* @r3, align 4
  br i1 %v2_13434, label %dec_label_pc_1343c, label %dec_label_pc_13428thread-pre-split

dec_label_pc_1343c:                               ; preds = %bb82, %dec_label_pc_13428, %bb83
  %v2_1344859 = phi i32 [ %v3_13434, %bb83 ], [ %v1_13434, %bb82 ], [ %v1_13434, %dec_label_pc_13428 ]
  %v1_1344051 = phi i32 [ %v3_13430, %bb83 ], [ %v1_13430, %bb82 ], [ %v1_13430, %dec_label_pc_13428 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13440

dec_label_pc_13440:                               ; preds = %.thread11, %dec_label_pc_1343c
  %v1_13474 = phi i32 [ %v4_13474, %.thread11 ], [ %v2_1344859, %dec_label_pc_1343c ]
  %v1_13448 = phi i32 [ %v0_13480, %.thread11 ], [ 0, %dec_label_pc_1343c ]
  %v1_13478 = phi i32 [ %v4_13478, %.thread11 ], [ %v1_1344051, %dec_label_pc_1343c ]
  %v1_13444 = phi i32 [ %v0_13470, %.thread11 ], [ %v0_133f4, %dec_label_pc_1343c ]
  %v3_13440 = icmp ult i32 %v1_13444, %v1_13478
  br i1 %v3_13440, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_13440
  %v3_13444 = sub i32 %v1_13444, %v1_13478
  %v3_13448 = or i32 %v1_13448, %v1_13474
  store i32 %v3_13448, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13440, %bb84
  %v1_13450 = phi i32 [ %v1_13444, %dec_label_pc_13440 ], [ %v3_13444, %bb84 ]
  %v1_13454 = phi i32 [ %v1_13448, %dec_label_pc_13440 ], [ %v3_13448, %bb84 ]
  %v4_1344c = udiv i32 %v1_13478, 2
  %v6_1344c = icmp ult i32 %v1_13450, %v4_1344c
  br i1 %v6_1344c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_13450 = urem i32 %v1_13478, 2
  %v4_13450 = icmp eq i32 %v3_13450, 0
  %v6_13450 = sub i32 %v1_13450, %v4_1344c
  br i1 %v4_13450, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_13454 = udiv i32 %v1_13474, 2
  %v6_13454 = or i32 %v1_13454, %v5_13454
  store i32 %v6_13454, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_1345c = phi i32 [ %v6_13450, %bb85 ], [ %v1_13450, %.thread7 ], [ %v6_13450, %bb86 ]
  %v1_13460 = phi i32 [ %v1_13454, %bb85 ], [ %v1_13454, %.thread7 ], [ %v6_13454, %bb86 ]
  %v4_13458 = udiv i32 %v1_13478, 4
  %v6_13458 = icmp ult i32 %v1_1345c, %v4_13458
  br i1 %v6_13458, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_1345c = and i32 %v1_13478, 2
  %v4_1345c = icmp eq i32 %v3_1345c, 0
  %v6_1345c = sub i32 %v1_1345c, %v4_13458
  br i1 %v4_1345c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_13460 = udiv i32 %v1_13474, 4
  %v6_13460 = or i32 %v1_13460, %v5_13460
  store i32 %v6_13460, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_13468 = phi i32 [ %v6_1345c, %bb87 ], [ %v1_1345c, %.thread8 ], [ %v6_1345c, %bb88 ]
  %v1_1346c = phi i32 [ %v1_13460, %bb87 ], [ %v1_13460, %.thread8 ], [ %v6_13460, %bb88 ]
  %v4_13464 = udiv i32 %v1_13478, 8
  %v6_13464 = icmp ult i32 %v1_13468, %v4_13464
  br i1 %v6_13464, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_13468 = and i32 %v1_13478, 4
  %v4_13468 = icmp eq i32 %v3_13468, 0
  %v6_13468 = sub i32 %v1_13468, %v4_13464
  br i1 %v4_13468, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_1346c = udiv i32 %v1_13474, 8
  %v6_1346c = or i32 %v1_1346c, %v5_1346c
  store i32 %v6_1346c, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_13480 = phi i32 [ %v1_1346c, %bb89 ], [ %v1_1346c, %.thread9 ], [ %v6_1346c, %bb90 ]
  %v0_13470 = phi i32 [ %v6_13468, %bb89 ], [ %v1_13468, %.thread9 ], [ %v6_13468, %bb90 ]
  %v2_13470 = icmp eq i32 %v0_13470, 0
  br i1 %v2_13470, label %dec_label_pc_13480, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %v4_13474 = udiv i32 %v1_13474, 16
  store i32 %v4_13474, i32* @r3, align 4
  %tmp138 = icmp ult i32 %v1_13474, 16
  br i1 %tmp138, label %dec_label_pc_13480, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_13478 = udiv i32 %v1_13478, 16
  br label %dec_label_pc_13440

dec_label_pc_13480:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_13480

dec_label_pc_13488:                               ; preds = %dec_label_pc_133f4
  %v9_133f4 = icmp eq i32 %v0_133f4, %v1_133f4
  %. = zext i1 %v9_133f4 to i32
  ret i32 %.

dec_label_pc_13494:                               ; preds = %dec_label_pc_133fc
  %v2_13494 = icmp ugt i32 %v1_133f4, 65535
  br i1 %v2_13494, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_13494
  %v2_13498 = and i32 %v1_133f4, 32768
  %v3_13498 = icmp eq i32 %v2_13498, 0
  %v4_13498 = udiv i32 %v1_133f4, 65536
  br i1 %v3_13498, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_13494
  %v0_134a465 = phi i32 [ %v1_133f4, %dec_label_pc_13494 ], [ %v4_13498, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_134a8 = phi i32 [ %v0_134a465, %.thread16 ], [ %v4_13498, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_134a4 = icmp ugt i32 %v1_134a8, 255
  br i1 %v2_134a4, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_134a8 = and i32 %v1_134a8, 128
  %v3_134a8 = icmp eq i32 %v2_134a8, 0
  %v4_134a8 = udiv i32 %v1_134a8, 256
  br i1 %v3_134a8, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_134ac = or i32 %storemerge, 8
  store i32 %v2_134ac, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_134b8 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_134ac, %bb98 ]
  %v1_134b4 = phi i32 [ %v1_134a8, %bb96 ], [ %v4_134a8, %bb97 ], [ %v4_134a8, %bb98 ]
  %v2_134b0 = icmp ugt i32 %v1_134b4, 15
  br i1 %v2_134b0, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_134b4 = and i32 %v1_134b4, 8
  %v3_134b4 = icmp eq i32 %v2_134b4, 0
  %v4_134b4 = udiv i32 %v1_134b4, 16
  br i1 %v3_134b4, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_134b8 = add nsw i32 %v1_134b8, 4
  store i32 %v2_134b8, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_134c0 = phi i32 [ %v1_134b8, %.thread17 ], [ %v1_134b8, %bb99 ], [ %v2_134b8, %bb100 ]
  %v5_134c4 = phi i32 [ %v1_134b4, %.thread17 ], [ %v4_134b4, %bb99 ], [ %v4_134b4, %bb100 ]
  %v2_134bc = icmp ugt i32 %v5_134c4, 3
  %v7_134bc = icmp eq i32 %v5_134c4, 4
  %v2_134c0 = xor i1 %v7_134bc, true
  %v3_134c0 = and i1 %v2_134bc, %v2_134c0
  br i1 %v3_134c0, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_134c0 = add nsw i32 %v4_134c0, 3
  store i32 %v5_134c0, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_134c4 = phi i32 [ %v4_134c0, %.thread18 ], [ %v5_134c0, %bb101 ]
  %v2_134c4 = xor i1 %v2_134bc, true
  %v3_134c4 = or i1 %v7_134bc, %v2_134c4
  br i1 %v3_134c4, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_134c4 = udiv i32 %v5_134c4, 2
  %v9_134c4 = add i32 %v4_134c4, %v8_134c4
  store i32 %v9_134c4, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_134c8 = phi i32 [ %v4_134c4, %bb102 ], [ %v9_134c4, %bb103 ]
  %v6_134c8 = lshr i32 %v0_133f4, %v1_134c8
  ret i32 %v6_134c8

dec_label_pc_134d0:                               ; preds = %dec_label_pc_133e8
  %v0_134d0 = load i32, i32* @lr, align 4
  %v0_134d4 = call i32 @function_13640()
  store i32 %v0_134d0, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_134c4, { 1, 0 }
  uselistorder i1 %v7_134bc, { 1, 0 }
  uselistorder i32 %v4_134b4, { 1, 0 }
  uselistorder i32 %v1_134b4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_134ac, { 1, 0 }
  uselistorder i32 %v4_134a8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_134a8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13498, { 1, 0 }
  uselistorder i32 %v0_13470, { 1, 0 }
  uselistorder i32 %v4_13464, { 1, 0 }
  uselistorder i32 %v1_1346c, { 1, 2, 0 }
  uselistorder i32 %v4_13458, { 1, 0 }
  uselistorder i32 %v1_13460, { 1, 2, 0 }
  uselistorder i32 %v4_1344c, { 1, 0 }
  uselistorder i32 %v1_13454, { 1, 2, 0 }
  uselistorder i32 %v1_13478, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_13448, { 1, 0 }
  uselistorder i32 %v3_13434, { 2, 0, 1 }
  uselistorder i32 %v3_13430, { 1, 0 }
  uselistorder i32 %v1_13430, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_13434, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13420, { 2, 0, 1 }
  uselistorder i32 %v4_1341c, { 2, 1, 0 }
  uselistorder i32 %v1_13420, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13428.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_133f4, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_133f4, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_133e8, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_13480, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1343c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13428thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_134e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_134e4:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_134e8 = call i32 @function_133e8()
  store i32 %arg2, i32* @r2, align 4
  ret i32 %v0_134e8
}

define i32 @function_134fc() local_unnamed_addr {
dec_label_pc_134fc:
  %v0_134fc = load i32, i32* @r1, align 4
  %v1_134fc = icmp slt i32 %v0_134fc, 0
  %v2_134fc = icmp eq i32 %v0_134fc, 0
  %v0_13500 = load i32, i32* @r0, align 4
  %v2_13500 = xor i32 %v0_13500, %v0_134fc
  br i1 %v2_134fc, label %dec_label_pc_13614, label %dec_label_pc_13508

dec_label_pc_13508:                               ; preds = %dec_label_pc_134fc
  br i1 %v1_134fc, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_13508
  %v2_13508 = sub i32 0, %v0_134fc
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_13508, %bb
  %v1_135d4 = phi i32 [ %v2_13508, %bb ], [ %v0_134fc, %dec_label_pc_13508 ]
  %v1_1350c = add i32 %v1_135d4, -1
  %v7_1350c = icmp eq i32 %v1_135d4, 1
  br i1 %v7_1350c, label %dec_label_pc_135b4, label %dec_label_pc_13514

dec_label_pc_13514:                               ; preds = %thread-pre-split
  %v1_13514 = icmp slt i32 %v0_13500, 0
  br i1 %v1_13514, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_13514
  %v2_13518 = sub i32 0, %v0_13500
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_13514, %bb84
  %v0_13608 = phi i32 [ %v0_13500, %dec_label_pc_13514 ], [ %v2_13518, %bb84 ]
  %v3_1351c = icmp uge i32 %v0_13608, %v1_135d4
  %v9_1351c = icmp eq i32 %v0_13608, %v1_135d4
  %v2_13520 = xor i1 %v3_1351c, true
  %v3_13520 = or i1 %v9_1351c, %v2_13520
  br i1 %v3_13520, label %dec_label_pc_135c0, label %dec_label_pc_13524

dec_label_pc_13524:                               ; preds = %bb85
  %v2_13524 = and i32 %v1_1350c, %v1_135d4
  %v4_13524 = icmp eq i32 %v2_13524, 0
  br i1 %v4_13524, label %dec_label_pc_135d0, label %dec_label_pc_1352c

dec_label_pc_1352c:                               ; preds = %dec_label_pc_13524
  %v3_1352c = icmp ult i32 %v1_135d4, 536870912
  br i1 %v3_1352c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1352c
  %v4_13530 = mul i32 %v1_135d4, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1352c, %.thread
  %v0_13550.pr40.ph = phi i32 [ %v4_13530, %.thread ], [ %v1_135d4, %dec_label_pc_1352c ]
  %storemerge142 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1352c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb88
  %v0_13550.pr40 = phi i32 [ %v4_13544, %bb88 ], [ %v0_13550.pr40.ph, %.preheader.preheader ]
  %v1_13548 = phi i32 [ %v4_13548, %bb88 ], [ %storemerge142, %.preheader.preheader ]
  %v2_1353c = icmp ugt i32 %v0_13550.pr40, 268435455
  br i1 %v2_1353c, label %.thread3, label %bb86

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_13550thread-pre-split.loopexit

bb86:                                             ; preds = %.preheader
  %v4_13540 = icmp ult i32 %v0_13550.pr40, %v0_13608
  br i1 %v4_13540, label %bb87, label %dec_label_pc_13550thread-pre-split.loopexit.loopexit

bb87:                                             ; preds = %bb86
  %v2_13544 = and i32 %v0_13550.pr40, 268435456
  %v3_13544 = icmp eq i32 %v2_13544, 0
  %v4_13544 = mul i32 %v0_13550.pr40, 16
  br i1 %v3_13544, label %bb88, label %dec_label_pc_13550.loopexit

bb88:                                             ; preds = %bb87
  %v2_13548 = and i32 %v1_13548, 268435456
  %v3_13548 = icmp eq i32 %v2_13548, 0
  %v4_13548 = mul i32 %v1_13548, 16
  br i1 %v3_13548, label %.preheader, label %dec_label_pc_13550thread-pre-split.loopexit.loopexit

dec_label_pc_13550thread-pre-split.loopexit.loopexit: ; preds = %bb88, %bb86
  %v1_1355c52.ph = phi i32 [ %v1_13548, %bb86 ], [ %v4_13548, %bb88 ]
  %v0_13550.pr42.ph = phi i32 [ %v0_13550.pr40, %bb86 ], [ %v4_13544, %bb88 ]
  br label %dec_label_pc_13550thread-pre-split.loopexit

dec_label_pc_13550thread-pre-split.loopexit:      ; preds = %dec_label_pc_13550thread-pre-split.loopexit.loopexit, %.thread3
  %v1_1355c52 = phi i32 [ %v1_13548, %.thread3 ], [ %v1_1355c52.ph, %dec_label_pc_13550thread-pre-split.loopexit.loopexit ]
  %v0_13550.pr42 = phi i32 [ %v0_13550.pr40, %.thread3 ], [ %v0_13550.pr42.ph, %dec_label_pc_13550thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13550thread-pre-split

dec_label_pc_13550thread-pre-split:               ; preds = %dec_label_pc_13550thread-pre-split.loopexit, %bb90
  %v1_1355c50 = phi i32 [ %v1_1355c52, %dec_label_pc_13550thread-pre-split.loopexit ], [ %v3_1355c, %bb90 ]
  %v2_1355448 = phi i32 [ %v0_13608, %dec_label_pc_13550thread-pre-split.loopexit ], [ %v2_13554, %bb90 ]
  %v0_13550.pr = phi i32 [ %v0_13550.pr42, %dec_label_pc_13550thread-pre-split.loopexit ], [ %v3_13558, %bb90 ]
  br label %dec_label_pc_13550

dec_label_pc_13550.loopexit:                      ; preds = %bb87
  br label %dec_label_pc_13550

dec_label_pc_13550:                               ; preds = %dec_label_pc_13550.loopexit, %dec_label_pc_13550thread-pre-split
  %v1_1355c = phi i32 [ %v1_1355c50, %dec_label_pc_13550thread-pre-split ], [ %v1_13548, %dec_label_pc_13550.loopexit ]
  %v2_13554 = phi i32 [ %v2_1355448, %dec_label_pc_13550thread-pre-split ], [ %v0_13608, %dec_label_pc_13550.loopexit ]
  %v1_13558 = phi i32 [ %v0_13550.pr, %dec_label_pc_13550thread-pre-split ], [ %v4_13544, %dec_label_pc_13550.loopexit ]
  %v2_13550 = icmp slt i32 %v1_13558, 0
  br i1 %v2_13550, label %dec_label_pc_13564, label %bb89

bb89:                                             ; preds = %dec_label_pc_13550
  %v4_13554 = icmp ult i32 %v1_13558, %v2_13554
  br i1 %v4_13554, label %bb90, label %dec_label_pc_13564

bb90:                                             ; preds = %bb89
  %v3_13558 = mul i32 %v1_13558, 2
  %v2_1355c = icmp slt i32 %v1_1355c, 0
  %v3_1355c = mul i32 %v1_1355c, 2
  br i1 %v2_1355c, label %dec_label_pc_13564, label %dec_label_pc_13550thread-pre-split

dec_label_pc_13564:                               ; preds = %bb89, %dec_label_pc_13550, %bb90
  %v2_1357063 = phi i32 [ %v3_1355c, %bb90 ], [ %v1_1355c, %bb89 ], [ %v1_1355c, %dec_label_pc_13550 ]
  %v1_1356855 = phi i32 [ %v3_13558, %bb90 ], [ %v1_13558, %bb89 ], [ %v1_13558, %dec_label_pc_13550 ]
  br label %dec_label_pc_13568

dec_label_pc_13568:                               ; preds = %.thread13, %dec_label_pc_13564
  %v1_1359c = phi i32 [ %v4_1359c, %.thread13 ], [ %v2_1357063, %dec_label_pc_13564 ]
  %v1_13570 = phi i32 [ %v1_135ac, %.thread13 ], [ 0, %dec_label_pc_13564 ]
  %v1_135a0 = phi i32 [ %v4_135a0, %.thread13 ], [ %v1_1356855, %dec_label_pc_13564 ]
  %v1_1356c = phi i32 [ %v0_13598, %.thread13 ], [ %v0_13608, %dec_label_pc_13564 ]
  %v3_13568 = icmp ult i32 %v1_1356c, %v1_135a0
  br i1 %v3_13568, label %.thread8, label %bb91

bb91:                                             ; preds = %dec_label_pc_13568
  %v3_1356c = sub i32 %v1_1356c, %v1_135a0
  %v3_13570 = or i32 %v1_13570, %v1_1359c
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_13568, %bb91
  %v1_13578 = phi i32 [ %v1_1356c, %dec_label_pc_13568 ], [ %v3_1356c, %bb91 ]
  %v1_1357c = phi i32 [ %v1_13570, %dec_label_pc_13568 ], [ %v3_13570, %bb91 ]
  %v4_13574 = udiv i32 %v1_135a0, 2
  %v6_13574 = icmp ult i32 %v1_13578, %v4_13574
  br i1 %v6_13574, label %.thread9, label %bb92

bb92:                                             ; preds = %.thread8
  %v3_13578 = urem i32 %v1_135a0, 2
  %v4_13578 = icmp eq i32 %v3_13578, 0
  %v6_13578 = sub i32 %v1_13578, %v4_13574
  br i1 %v4_13578, label %.thread9, label %bb93

bb93:                                             ; preds = %bb92
  %v5_1357c = udiv i32 %v1_1359c, 2
  %v6_1357c = or i32 %v1_1357c, %v5_1357c
  br label %.thread9

.thread9:                                         ; preds = %bb92, %.thread8, %bb93
  %v1_13584 = phi i32 [ %v6_13578, %bb92 ], [ %v1_13578, %.thread8 ], [ %v6_13578, %bb93 ]
  %v1_13588 = phi i32 [ %v1_1357c, %bb92 ], [ %v1_1357c, %.thread8 ], [ %v6_1357c, %bb93 ]
  %v4_13580 = udiv i32 %v1_135a0, 4
  %v6_13580 = icmp ult i32 %v1_13584, %v4_13580
  br i1 %v6_13580, label %.thread10, label %bb94

bb94:                                             ; preds = %.thread9
  %v3_13584 = and i32 %v1_135a0, 2
  %v4_13584 = icmp eq i32 %v3_13584, 0
  %v6_13584 = sub i32 %v1_13584, %v4_13580
  br i1 %v4_13584, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  %v5_13588 = udiv i32 %v1_1359c, 4
  %v6_13588 = or i32 %v1_13588, %v5_13588
  br label %.thread10

.thread10:                                        ; preds = %bb94, %.thread9, %bb95
  %v1_13590 = phi i32 [ %v6_13584, %bb94 ], [ %v1_13584, %.thread9 ], [ %v6_13584, %bb95 ]
  %v1_13594 = phi i32 [ %v1_13588, %bb94 ], [ %v1_13588, %.thread9 ], [ %v6_13588, %bb95 ]
  %v4_1358c = udiv i32 %v1_135a0, 8
  %v6_1358c = icmp ult i32 %v1_13590, %v4_1358c
  br i1 %v6_1358c, label %thread-pre-split12, label %bb96

bb96:                                             ; preds = %.thread10
  %v3_13590 = and i32 %v1_135a0, 4
  %v4_13590 = icmp eq i32 %v3_13590, 0
  %v6_13590 = sub i32 %v1_13590, %v4_1358c
  br i1 %v4_13590, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %bb96
  %v5_13594 = udiv i32 %v1_1359c, 8
  %v6_13594 = or i32 %v1_13594, %v5_13594
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb97, %.thread10, %bb96
  %v1_135ac = phi i32 [ %v1_13594, %bb96 ], [ %v1_13594, %.thread10 ], [ %v6_13594, %bb97 ]
  %v0_13598 = phi i32 [ %v6_13590, %bb96 ], [ %v1_13590, %.thread10 ], [ %v6_13590, %bb97 ]
  %v2_13598 = icmp eq i32 %v0_13598, 0
  br i1 %v2_13598, label %dec_label_pc_135a8, label %bb98

bb98:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1359c, 16
  br i1 %tmp, label %dec_label_pc_135a8, label %.thread13

.thread13:                                        ; preds = %bb98
  %v4_1359c = udiv i32 %v1_1359c, 16
  %v4_135a0 = udiv i32 %v1_135a0, 16
  br label %dec_label_pc_13568

dec_label_pc_135a8:                               ; preds = %thread-pre-split12, %bb98
  %v1_135a8 = icmp slt i32 %v2_13500, 0
  br i1 %v1_135a8, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_135a8
  %v2_135ac = sub i32 0, %v1_135ac
  br label %.thread16

.thread16:                                        ; preds = %bb103, %bb102, %bb100, %dec_label_pc_135b4, %dec_label_pc_135a8, %bb99
  %v1_135b0 = phi i32 [ %v1_135ac, %dec_label_pc_135a8 ], [ %v2_135ac, %bb99 ], [ %v2_135b8, %bb100 ], [ undef, %dec_label_pc_135b4 ], [ %v1_135cc80, %bb102 ], [ %v2_135c8, %bb103 ]
  ret i32 %v1_135b0

dec_label_pc_135b4:                               ; preds = %thread-pre-split
  br i1 %v1_134fc, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_135b4
  %v2_135b8 = sub i32 0, %v0_13500
  br label %.thread16

dec_label_pc_135c0:                               ; preds = %bb85
  br i1 %v3_1351c, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_135c0
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_135c0, %bb101
  %v1_135cc80 = phi i32 [ %v0_13500, %dec_label_pc_135c0 ], [ 0, %bb101 ]
  br i1 %v9_1351c, label %bb103, label %.thread16

bb103:                                            ; preds = %bb102
  %v4_135c4 = ashr i32 %v2_13500, 31
  %v2_135c8 = or i32 %v4_135c4, 1
  br label %.thread16

dec_label_pc_135d0:                               ; preds = %dec_label_pc_13524
  %v2_135d0 = icmp ugt i32 %v1_135d4, 65535
  br i1 %v2_135d0, label %bb104, label %.thread19

bb104:                                            ; preds = %dec_label_pc_135d0
  %v2_135d4 = and i32 %v1_135d4, 32768
  %v3_135d4 = icmp eq i32 %v2_135d4, 0
  %v4_135d4 = udiv i32 %v1_135d4, 65536
  br i1 %v3_135d4, label %.thread19, label %bb105

.thread19:                                        ; preds = %bb104, %dec_label_pc_135d0
  %v0_135e070 = phi i32 [ %v1_135d4, %dec_label_pc_135d0 ], [ %v4_135d4, %bb104 ]
  br label %bb105

bb105:                                            ; preds = %bb104, %.thread19
  %v1_135e4 = phi i32 [ %v0_135e070, %.thread19 ], [ %v4_135d4, %bb104 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb104 ]
  %v2_135e0 = icmp ugt i32 %v1_135e4, 255
  br i1 %v2_135e0, label %bb106, label %.thread20

bb106:                                            ; preds = %bb105
  %v2_135e4 = and i32 %v1_135e4, 128
  %v3_135e4 = icmp eq i32 %v2_135e4, 0
  %v4_135e4 = udiv i32 %v1_135e4, 256
  br i1 %v3_135e4, label %.thread20, label %bb107

bb107:                                            ; preds = %bb106
  %v2_135e8 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb106, %bb105, %bb107
  %v1_135f4 = phi i32 [ %storemerge, %bb105 ], [ %storemerge, %bb106 ], [ %v2_135e8, %bb107 ]
  %v1_135f0 = phi i32 [ %v1_135e4, %bb105 ], [ %v4_135e4, %bb106 ], [ %v4_135e4, %bb107 ]
  %v2_135ec = icmp ugt i32 %v1_135f0, 15
  br i1 %v2_135ec, label %bb108, label %.thread21

bb108:                                            ; preds = %.thread20
  %v2_135f0 = and i32 %v1_135f0, 8
  %v3_135f0 = icmp eq i32 %v2_135f0, 0
  %v4_135f0 = udiv i32 %v1_135f0, 16
  br i1 %v3_135f0, label %.thread21, label %bb109

bb109:                                            ; preds = %bb108
  %v2_135f4 = add nsw i32 %v1_135f4, 4
  br label %.thread21

.thread21:                                        ; preds = %bb108, %.thread20, %bb109
  %v4_135fc = phi i32 [ %v1_135f4, %.thread20 ], [ %v1_135f4, %bb108 ], [ %v2_135f4, %bb109 ]
  %v5_13600 = phi i32 [ %v1_135f0, %.thread20 ], [ %v4_135f0, %bb108 ], [ %v4_135f0, %bb109 ]
  %v2_135f8 = icmp ugt i32 %v5_13600, 3
  %v7_135f8 = icmp eq i32 %v5_13600, 4
  %v2_135fc = xor i1 %v7_135f8, true
  %v3_135fc = and i1 %v2_135f8, %v2_135fc
  br i1 %v3_135fc, label %bb110, label %bb111

bb110:                                            ; preds = %.thread21
  %v5_135fc = add nsw i32 %v4_135fc, 3
  br label %bb111

bb111:                                            ; preds = %.thread21, %bb110
  %v4_13600 = phi i32 [ %v4_135fc, %.thread21 ], [ %v5_135fc, %bb110 ]
  %v2_13600 = xor i1 %v2_135f8, true
  %v3_13600 = or i1 %v7_135f8, %v2_13600
  br i1 %v3_13600, label %bb112, label %bb113

bb112:                                            ; preds = %bb111
  %v8_13600 = udiv i32 %v5_13600, 2
  %v9_13600 = add i32 %v4_13600, %v8_13600
  br label %bb113

bb113:                                            ; preds = %bb111, %bb112
  %v1_13608 = phi i32 [ %v4_13600, %bb111 ], [ %v9_13600, %bb112 ]
  %v1_13604 = icmp slt i32 %v2_13500, 0
  %v6_13608 = lshr i32 %v0_13608, %v1_13608
  %v2_1360c = sub i32 0, %v6_13608
  %v2_1360c.v6_13608 = select i1 %v1_13604, i32 %v2_1360c, i32 %v6_13608
  ret i32 %v2_1360c.v6_13608

dec_label_pc_13614:                               ; preds = %dec_label_pc_134fc
  %v0_13618 = call i32 @function_13640()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13600, { 1, 0 }
  uselistorder i1 %v7_135f8, { 1, 0 }
  uselistorder i32 %v4_135f0, { 1, 0 }
  uselistorder i32 %v1_135f0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_135e4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_135e4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_135d4, { 1, 0 }
  uselistorder i32 %v0_13598, { 1, 0 }
  uselistorder i32 %v4_1358c, { 1, 0 }
  uselistorder i32 %v1_13594, { 1, 2, 0 }
  uselistorder i32 %v4_13580, { 1, 0 }
  uselistorder i32 %v1_13588, { 1, 2, 0 }
  uselistorder i32 %v4_13574, { 1, 0 }
  uselistorder i32 %v1_1357c, { 1, 2, 0 }
  uselistorder i32 %v1_135a0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_13570, { 1, 0 }
  uselistorder i32 %v1_1359c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1355c, { 1, 0 }
  uselistorder i32 %v3_13558, { 1, 0 }
  uselistorder i32 %v1_13558, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_13554, { 1, 0 }
  uselistorder i32 %v1_1355c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13548, { 1, 0 }
  uselistorder i32 %v4_13544, { 2, 1, 0 }
  uselistorder i32 %v1_13548, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13550.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1351c, { 1, 0 }
  uselistorder i32 %v1_135d4, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_13500, { 1, 0, 2 }
  uselistorder i32 %v0_13500, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_134fc, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_13640, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_135a8, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_13564, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13550thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_13628(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13628:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_1362c = call i32 @function_134fc()
  ret i32 %v0_1362c
}

define i32 @function_13640() local_unnamed_addr {
dec_label_pc_13640:
  %v1_13648 = call i32 @function_158b8(i32 8)
  ret i32 %v1_13648
}

define i32 @function_13654(i32* %arg1) local_unnamed_addr {
dec_label_pc_13654:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_13654 = load i32, i32* @r4, align 4
  %v6_13654 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_13660 = load i32, i32* %arg1, align 4
  store i32 %v2_13660, i32* @r0, align 4
  %v1_13664 = call i32 @function_165e8(i32 %v2_13660)
  store i32 %v1_13664, i32* @r5, align 4
  %v0_1366c = load i32, i32* @r4, align 4
  %v1_13670 = call i32 @function_14248(i32 %v0_1366c)
  %v0_13674 = load i32, i32* @r5, align 4
  store i32 %v3_13654, i32* @r4, align 4
  store i32 %v6_13654, i32* @r5, align 4
  ret i32 %v0_13674

; uselistorder directives
  uselistorder i32 (i32)* @function_165e8, { 22, 10, 33, 32, 9, 31, 30, 8, 7, 6, 28, 29, 27, 26, 25, 24, 23, 5, 4, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 3, 2, 0, 1 }
}

define i32 @function_13684(i32 %arg1) local_unnamed_addr {
dec_label_pc_13684:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13684 = load i32, i32* @r7, align 4
  store i32 %v3_13684, i32* %stack_var_-8, align 4
  %v0_1368c = load i32, i32* @r0, align 4
  %v2_1368c = call i32 @function_13ba8(i32 %v0_1368c, i32 540672)
  store i32 %v2_1368c, i32* %r0.global-to-local, align 4
  store i32 %v2_1368c, i32* @r7, align 4
  %v1_13690 = icmp slt i32 %v2_1368c, 0
  br i1 %v1_13690, label %.thread5, label %dec_label_pc_1369c

.thread5:                                         ; preds = %dec_label_pc_13684
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136c8

dec_label_pc_1369c:                               ; preds = %dec_label_pc_13684
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_136a4 = call i32 @function_13cd4(i32 1, i32 2080)
  store i32 %v2_136a4, i32* %r0.global-to-local, align 4
  %v2_136a8 = icmp eq i32 %v2_136a4, 0
  br i1 %v2_136a8, label %dec_label_pc_136b8, label %.thread.dec_label_pc_136c8_crit_edge

.thread.dec_label_pc_136c8_crit_edge:             ; preds = %dec_label_pc_1369c
  store i32 %v2_136a4, i32* %r0.global-to-local, align 4
  %v1_136b0 = load i32, i32* @r7, align 4
  %v3_136b0 = inttoptr i32 %v2_136a4 to i32*
  store i32 %v1_136b0, i32* %v3_136b0, align 4
  %v1_136cc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136c8

dec_label_pc_136b8:                               ; preds = %dec_label_pc_1369c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136c8

dec_label_pc_136c8:                               ; preds = %.thread5, %.thread.dec_label_pc_136c8_crit_edge, %dec_label_pc_136b8
  %v1_136cc = phi i32 [ %v1_136cc.pre, %.thread.dec_label_pc_136c8_crit_edge ], [ 0, %dec_label_pc_136b8 ], [ 0, %.thread5 ]
  %v2_136c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_136c8, i32* @r7, align 4
  ret i32 %v1_136cc

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 (i32, i32)* @function_13cd4, { 41, 4, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_13ba8, { 2, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_136c8, { 2, 1, 0 }
}

define i32 @function_136d0(i32* %arg1) local_unnamed_addr {
dec_label_pc_136d0:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_136d0 = load i32, i32* @r4, align 4
  store i32 %v3_136d0, i32* %stack_var_-12, align 4
  %v1_136d4 = add i32 %tmp, 16
  store i32 %v1_136d4, i32* %r2.global-to-local, align 4
  %v1_136d8 = inttoptr i32 %v1_136d4 to i32*
  %v2_136d8 = load i32, i32* %v1_136d8, align 4
  store i32 %v2_136d8, i32* %r2.global-to-local, align 4
  %v3_136d8 = add i32 %tmp, 20
  %v4_136d8 = inttoptr i32 %v3_136d8 to i32*
  %v5_136d8 = load i32, i32* %v4_136d8, align 4
  store i32 %v5_136d8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %v5_136e8 = icmp slt i32 %v2_136d8, %v5_136d8
  br i1 %v5_136e8, label %dec_label_pc_1373c, label %dec_label_pc_136ec

dec_label_pc_136ec:                               ; preds = %dec_label_pc_136d0
  store i32 217, i32* %r7.global-to-local, align 4
  %v2_136f0 = load i32, i32* %arg1, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_136f0, i32* %r7.global-to-local, align 4
  %tmp9 = icmp slt i32 %v2_136f0, 1
  br i1 %tmp9, label %dec_label_pc_13714, label %.dec_label_pc_1373c_crit_edge

.dec_label_pc_1373c_crit_edge:                    ; preds = %dec_label_pc_136ec
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_136f0, i32* %v4_136d8, align 4
  %v5_1370c = load i32, i32* %r3.global-to-local, align 4
  %v6_1370c = load i32, i32* %ip.global-to-local, align 4
  %v7_1370c = add i32 %v6_1370c, 16
  %v8_1370c = inttoptr i32 %v7_1370c to i32*
  store i32 %v5_1370c, i32* %v8_1370c, align 4
  %v0_1373c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1373c

dec_label_pc_13714:                               ; preds = %dec_label_pc_136ec
  %v1_13714 = add i32 %v2_136f0, 2
  %v7_13714 = icmp eq i32 %v1_13714, 0
  br i1 %v7_13714, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_13714
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_13714, %bb
  %storemerge = phi i32 [ 1, %bb ], [ %v1_13714, %dec_label_pc_13714 ]
  %v0_1371c = phi i32 [ 1, %bb ], [ 0, %dec_label_pc_13714 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %tmp12 = icmp slt i32 %v2_136f0, 0
  %v4_1371c = zext i1 %tmp12 to i32
  %v5_1371c = and i32 %v0_1371c, %v4_1371c
  %v6_1371c = icmp eq i32 %v5_1371c, 0
  br i1 %v6_1371c, label %bb11, label %dec_label_pc_13728

bb11:                                             ; preds = %bb10
  store i32 0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13764

dec_label_pc_13728:                               ; preds = %bb10
  %v0_13728 = call i32 @function_13994()
  %v0_1372c = load i32, i32* %r7.global-to-local, align 4
  %v1_1372c = sub i32 0, %v0_1372c
  store i32 %v1_1372c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_13734 = inttoptr i32 %v0_13728 to i32*
  store i32 %v1_1372c, i32* %v2_13734, align 4
  br label %dec_label_pc_13764

dec_label_pc_1373c:                               ; preds = %.dec_label_pc_1373c_crit_edge, %dec_label_pc_136d0
  %v1_13758 = phi i32 [ %v0_1373c.pre, %.dec_label_pc_1373c_crit_edge ], [ %tmp, %dec_label_pc_136d0 ]
  %v1_1373c = add i32 %v1_13758, 16
  %v2_1373c = inttoptr i32 %v1_1373c to i32*
  %v3_1373c = load i32, i32* %v2_1373c, align 4
  %v1_13740 = add i32 %v1_13758, 32
  store i32 %v1_13740, i32* %r3.global-to-local, align 4
  %v2_13744 = add i32 %v3_1373c, %v1_13740
  store i32 %v2_13744, i32* %lr.global-to-local, align 4
  %v1_13748 = add i32 %v2_13744, 16
  %v2_13748 = inttoptr i32 %v1_13748 to i16*
  %v3_13748 = load i16, i16* %v2_13748, align 2
  %v4_13748 = zext i16 %v3_13748 to i32
  store i32 %v4_13748, i32* %r2.global-to-local, align 4
  %v1_1374c = add i32 %v2_13744, 8
  store i32 %v1_1374c, i32* %r3.global-to-local, align 4
  %v1_13750 = inttoptr i32 %v1_1374c to i32*
  %v2_13750 = load i32, i32* %v1_13750, align 4
  store i32 %v2_13750, i32* %r3.global-to-local, align 4
  %v3_13750 = add i32 %v2_13744, 12
  %v4_13750 = inttoptr i32 %v3_13750 to i32*
  %v5_13750 = load i32, i32* %v4_13750, align 4
  store i32 %v5_13750, i32* %r4.global-to-local, align 4
  %v2_13754 = add i32 %v4_13748, %v3_1373c
  store i32 %v2_13754, i32* %r2.global-to-local, align 4
  %v2_13758 = add i32 %v1_13758, 8
  %v3_13758 = inttoptr i32 %v2_13758 to i32*
  store i32 %v2_13750, i32* %v3_13758, align 4
  %v0_1375c = load i32, i32* %r4.global-to-local, align 4
  %v1_1375c = load i32, i32* %ip.global-to-local, align 4
  %v2_1375c = add i32 %v1_1375c, 12
  %v3_1375c = inttoptr i32 %v2_1375c to i32*
  store i32 %v0_1375c, i32* %v3_1375c, align 4
  %v0_13760 = load i32, i32* %r2.global-to-local, align 4
  %v1_13760 = load i32, i32* %ip.global-to-local, align 4
  %v2_13760 = add i32 %v1_13760, 16
  %v3_13760 = inttoptr i32 %v2_13760 to i32*
  store i32 %v0_13760, i32* %v3_13760, align 4
  br label %dec_label_pc_13764

dec_label_pc_13764:                               ; preds = %bb11, %dec_label_pc_13728, %dec_label_pc_1373c
  %v0_13764 = load i32, i32* %lr.global-to-local, align 4
  %v2_1376c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1376c, i32* @r4, align 4
  ret i32 %v0_13764

; uselistorder directives
  uselistorder i32 %v1_13758, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %lr.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_13764, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_13778(i32 %arg1) local_unnamed_addr {
dec_label_pc_13778:
  %v1_13778 = load i32, i32* @r0, align 4
  ret i32 %v1_13778
}

define i32 @function_1377c(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1377c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %tmp43 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = call i32 @__decompiler_undefined_function_0()
  %tmp45 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v4_13780 = mul i32 %arg2, 4
  %v5_13780 = add i32 %v4_13780, 4
  %v1_13784 = add i32 %v5_13780, %tmp
  store i32 %v1_13784, i32* @r5, align 4
  %v2_1378c = load i32, i32* %arg3, align 4
  store i32 %v2_1378c, i32* @r7, align 4
  store i32 %v1_13784, i32* @global_var_2351c.529, align 4
  %v2_13794 = ptrtoint i32* %stack_var_-208 to i32
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg1, i32* @sl, align 4
  br label %dec_label_pc_137a8

dec_label_pc_137a8:                               ; preds = %dec_label_pc_137a8, %dec_label_pc_1377c
  %v0_137a8 = phi i32 [ %v4_137ac, %dec_label_pc_137a8 ], [ %v1_13784, %dec_label_pc_1377c ]
  store i32 %v0_137a8, i32* @r4, align 4
  %v1_137ac = inttoptr i32 %v0_137a8 to i32*
  %v2_137ac = load i32, i32* %v1_137ac, align 4
  store i32 %v2_137ac, i32* %r1.global-to-local, align 4
  %v4_137ac = add i32 %v0_137a8, 4
  %v2_137b0 = icmp eq i32 %v2_137ac, 0
  br i1 %v2_137b0, label %dec_label_pc_137b8, label %dec_label_pc_137a8

dec_label_pc_137b8:                               ; preds = %dec_label_pc_137a8
  store i32 152, i32* %r2.global-to-local, align 4
  store i32 %v2_13794, i32* %r0.global-to-local, align 4
  %v3_137c0 = bitcast i32* %stack_var_-208 to i8*
  %v4_137c0 = call i32 @function_16010(i8* %v3_137c0, i32 0, i32 152)
  store i32 %v4_137c0, i32* %r0.global-to-local, align 4
  %v0_137c8 = load i32, i32* @r4, align 4
  %v1_137c8 = add i32 %v0_137c8, 4
  store i32 %v1_137c8, i32* %r2.global-to-local, align 4
  store i32 %v0_137c8, i32* %r1.global-to-local, align 4
  store i32 %v1_137c8, i32* @global_var_2383c.532, align 4
  %v2_137f019 = inttoptr i32 %v1_137c8 to i32*
  %v3_137f020 = load i32, i32* %v2_137f019, align 4
  %v2_137f422 = icmp eq i32 %v3_137f020, 0
  br i1 %v2_137f422, label %dec_label_pc_137fc, label %dec_label_pc_137d8.lr.ph

dec_label_pc_137d8.lr.ph:                         ; preds = %dec_label_pc_137b8
  %v6_137e0 = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_137d8

dec_label_pc_137d8:                               ; preds = %dec_label_pc_137d8.lr.ph, %dec_label_pc_137f0
  %v4_137dc = phi i32 [ %v0_137c8, %dec_label_pc_137d8.lr.ph ], [ %v1_137ec, %dec_label_pc_137f0 ]
  %v5_137e4 = phi i32 [ %v3_137f020, %dec_label_pc_137d8.lr.ph ], [ %v3_137f0, %dec_label_pc_137f0 ]
  %v2_137d8 = icmp ugt i32 %v5_137e4, 36
  %v7_137d8 = icmp eq i32 %v5_137e4, 37
  %v2_137dc = xor i1 %v2_137d8, true
  %v3_137dc = or i1 %v7_137d8, %v2_137dc
  br i1 %v3_137dc, label %bb, label %.thread38

bb:                                               ; preds = %dec_label_pc_137d8
  %v5_137dc = add i32 %v4_137dc, 8
  %v6_137dc = inttoptr i32 %v5_137dc to i32*
  %v7_137dc = load i32, i32* %v6_137dc, align 4
  store i32 %v7_137dc, i32* %r2.global-to-local, align 4
  store i32 %v6_137e0, i32* %r0.global-to-local, align 4
  %v6_137e4 = and i32 %v5_137e4, 1073741824
  %v7_137e4 = icmp ne i32 %v6_137e4, 0
  %v8_137e4 = mul i32 %v5_137e4, 4
  %v9_137e4 = add i32 %v8_137e4, %v6_137e0
  br label %.thread38

.thread38:                                        ; preds = %dec_label_pc_137d8, %bb
  %v5_137e8 = phi i32 [ %v9_137e4, %bb ], [ %v5_137e4, %dec_label_pc_137d8 ]
  %v1_137e823 = phi i1 [ %v7_137e4, %bb ], [ %v2_137d8, %dec_label_pc_137d8 ]
  %v2_137e8 = xor i1 %v1_137e823, true
  %v3_137e8 = or i1 %v7_137d8, %v2_137e8
  br i1 %v3_137e8, label %bb60, label %dec_label_pc_137f0

bb60:                                             ; preds = %.thread38
  %v4_137e8 = load i32, i32* %r2.global-to-local, align 4
  %v6_137e8 = add i32 %v5_137e8, -176
  %v7_137e8 = inttoptr i32 %v6_137e8 to i32*
  store i32 %v4_137e8, i32* %v7_137e8, align 4
  %v0_137ec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_137f0

dec_label_pc_137f0:                               ; preds = %.thread38, %bb60
  %v0_137ec = phi i32 [ %v4_137dc, %.thread38 ], [ %v0_137ec.pre, %bb60 ]
  %v1_137ec = add i32 %v0_137ec, 8
  store i32 %v1_137ec, i32* %r1.global-to-local, align 4
  %v1_137f0 = add i32 %v0_137ec, 12
  %v2_137f0 = inttoptr i32 %v1_137f0 to i32*
  %v3_137f0 = load i32, i32* %v2_137f0, align 4
  %v2_137f4 = icmp eq i32 %v3_137f0, 0
  br i1 %v2_137f4, label %dec_label_pc_137f0.dec_label_pc_137fc_crit_edge, label %dec_label_pc_137d8

dec_label_pc_137f0.dec_label_pc_137fc_crit_edge:  ; preds = %dec_label_pc_137f0
  br label %dec_label_pc_137fc

dec_label_pc_137fc:                               ; preds = %dec_label_pc_137f0.dec_label_pc_137fc_crit_edge, %dec_label_pc_137b8
  store i32 %tmp45, i32* %r2.global-to-local, align 4
  %v0_1381c = load i32, i32* @r7, align 4
  %v2_1381c = icmp eq i32 %v0_1381c, 0
  store i32 %tmp45, i32* @global_var_23844.537, align 4
  br i1 %v2_1381c, label %dec_label_pc_13860, label %dec_label_pc_13828

dec_label_pc_13828:                               ; preds = %dec_label_pc_137fc
  store i32 ptrtoint (i32* @global_var_230ec.539 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_1381c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230ec.539 to i32), i32* %r0.global-to-local, align 4
  store i32 %v0_1381c, i32* @global_var_230f0.541, align 4
  store i32 %v0_1381c, i32* @global_var_230ec.539, align 4
  %v1_1385413 = inttoptr i32 %v0_1381c to i8*
  %v2_1385414 = load i8, i8* %v1_1385413, align 1
  %v2_1385816 = icmp eq i8 %v2_1385414, 0
  br i1 %v2_1385816, label %dec_label_pc_13860, label %dec_label_pc_13844

dec_label_pc_13844:                               ; preds = %dec_label_pc_13828, %.thread
  %v1_13848 = phi i32 [ %v1_13850, %.thread ], [ %v0_1381c, %dec_label_pc_13828 ]
  %v0_13844.in = phi i8 [ %v2_13854, %.thread ], [ %v2_1385414, %dec_label_pc_13828 ]
  %v7_13844 = icmp eq i8 %v0_13844.in, 47
  br i1 %v7_13844, label %bb61, label %.thread

bb61:                                             ; preds = %dec_label_pc_13844
  %v2_13848 = add i32 %v1_13848, 1
  %v2_1384c = load i32, i32* %r0.global-to-local, align 4
  %v3_1384c = inttoptr i32 %v2_1384c to i32*
  store i32 %v2_13848, i32* %v3_1384c, align 4
  %v0_13850.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13844, %bb61
  %v0_13850 = phi i32 [ %v1_13848, %dec_label_pc_13844 ], [ %v0_13850.pre, %bb61 ]
  %v1_13850 = add i32 %v0_13850, 1
  store i32 %v1_13850, i32* %r1.global-to-local, align 4
  %v1_13854 = inttoptr i32 %v1_13850 to i8*
  %v2_13854 = load i8, i8* %v1_13854, align 1
  %v2_13858 = icmp eq i8 %v2_13854, 0
  br i1 %v2_13858, label %dec_label_pc_13860, label %dec_label_pc_13844

dec_label_pc_13860:                               ; preds = %.thread, %dec_label_pc_13828, %dec_label_pc_137fc
  store i32 %v2_13794, i32* %r0.global-to-local, align 4
  %v1_13864 = call i32 @function_168b0(i32 %v2_13794)
  store i32 %tmp44, i32* @r0, align 4
  %v2_13874 = call i32 @function_13778(i32 %tmp44)
  store i32 %v2_13874, i32* @r0, align 4
  store i32 %tmp56, i32* %r2.global-to-local, align 4
  %v9_13880 = icmp eq i32 %tmp56, %tmp43
  br i1 %v9_13880, label %dec_label_pc_13888, label %dec_label_pc_138a4

dec_label_pc_13888:                               ; preds = %dec_label_pc_13860
  store i32 %tmp55, i32* %r2.global-to-local, align 4
  %v9_13890 = icmp eq i32 %tmp55, %tmp42
  br i1 %v9_13890, label %dec_label_pc_13898, label %dec_label_pc_138a4

dec_label_pc_13898:                               ; preds = %dec_label_pc_13888
  %v2_1389c = icmp eq i32 %tmp41, 0
  br i1 %v2_1389c, label %dec_label_pc_13920, label %dec_label_pc_138a4

dec_label_pc_138a4:                               ; preds = %dec_label_pc_13888, %dec_label_pc_13860, %dec_label_pc_13898
  %v2_138a4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_138a4, i32* @r4, align 4
  store i32 %v2_138a4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v3_138b4 = bitcast i32* %stack_var_-56 to i8*
  %v4_138b4 = call i32 @function_16010(i8* %v3_138b4, i32 0, i32 24)
  store i32 168, i32* %r7.global-to-local, align 4
  store i32 %v2_138a4, i32* @r0, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_138e0

dec_label_pc_138e0:                               ; preds = %bb63, %dec_label_pc_138a4
  %v1_138e0 = phi i32 [ %v1_13908, %bb63 ], [ 0, %dec_label_pc_138a4 ]
  %v0_138e0 = load i32, i32* @r4, align 4
  %v2_138e0 = add i32 %v0_138e0, %v1_138e0
  %v1_138e4 = add i32 %v2_138e0, 6
  %v2_138e4 = inttoptr i32 %v1_138e4 to i16*
  %v3_138e4 = load i16, i16* %v2_138e4, align 2
  %v1_138e8 = and i16 %v3_138e4, 32
  %v2_138e8 = icmp eq i16 %v1_138e8, 0
  br i1 %v2_138e8, label %bb63, label %dec_label_pc_138f0

dec_label_pc_138f0:                               ; preds = %dec_label_pc_138e0
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1aa44.544 to i32), i32* @r0, align 4
  store i32 131074, i32* %r1.global-to-local, align 4
  br i1 icmp slt ([10 x i8]* @global_var_1aa44.544, [10 x i8]* null), label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_138f0
  %v3_13904 = load i32, i32* %ip.global-to-local, align 4
  %v4_13904 = trunc i32 %v3_13904 to i8
  %v6_13904 = inttoptr i32 %v3_13904 to i8*
  store i8 %v4_13904, i8* %v6_13904, align 1
  %v0_13908.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_138e0, %dec_label_pc_138f0, %bb62
  %v0_13908 = phi i32 [ %v1_138e0, %dec_label_pc_138e0 ], [ %v1_138e0, %dec_label_pc_138f0 ], [ %v0_13908.pre, %bb62 ]
  %v1_13908 = add i32 %v0_13908, 8
  store i32 %v1_13908, i32* %r2.global-to-local, align 4
  %v7_1390c = icmp eq i32 %v1_13908, 24
  br i1 %v7_1390c, label %dec_label_pc_13914, label %dec_label_pc_138e0

dec_label_pc_13914:                               ; preds = %bb63
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_23834.546, align 4
  br label %dec_label_pc_13920

dec_label_pc_13920:                               ; preds = %dec_label_pc_13898, %dec_label_pc_13914
  store i32 80172, i32* @lr, align 4
  %v1_13928 = call i32 @function_80b4()
  store i32 %v1_13928, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23008.551 to i32), i32* %r7.global-to-local, align 4
  br i1 icmp uge (i32* @global_var_23004.549, i32* @global_var_23008.551), label %dec_label_pc_1394c, label %dec_label_pc_13938

dec_label_pc_13938:                               ; preds = %dec_label_pc_13938, %dec_label_pc_13920
  %v0_13938 = phi i32 [ %v4_13938, %dec_label_pc_13938 ], [ ptrtoint (i32* @global_var_23004.549 to i32), %dec_label_pc_13920 ]
  %v1_13938 = inttoptr i32 %v0_13938 to i32*
  %v2_13938 = load i32, i32* %v1_13938, align 4
  %v4_13938 = add i32 %v0_13938, 4
  call void @__pseudo_branch(i32 %v2_13938)
  %v1_13944 = load i32, i32* %r7.global-to-local, align 4
  %v3_13944 = icmp ult i32 %v4_13938, %v1_13944
  br i1 %v3_13944, label %dec_label_pc_13938, label %dec_label_pc_1394c

dec_label_pc_1394c:                               ; preds = %dec_label_pc_13938, %dec_label_pc_13920
  %v0_1394c = load i32, i32* @r6, align 4
  store i32 %v0_1394c, i32* %r1.global-to-local, align 4
  %v0_13950 = load i32, i32* @r5, align 4
  store i32 %v0_13950, i32* %r2.global-to-local, align 4
  %v0_13954 = load i32, i32* @r8, align 4
  store i32 %v0_13954, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_13960 = call i32 @function_139ac(i32 %v0_13954)
  store i32 %v1_13960, i32* %r0.global-to-local, align 4
  ret i32 %v1_13960

; uselistorder directives
  uselistorder i32 %v0_13938, { 1, 0 }
  uselistorder i32 %v1_13908, { 1, 2, 0 }
  uselistorder i32 %v1_138e0, { 1, 2, 0 }
  uselistorder i8 %v2_13854, { 1, 0 }
  uselistorder i32 %v1_13850, { 1, 2, 0 }
  uselistorder i32 %v0_1381c, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32 %v3_137f0, { 1, 0 }
  uselistorder i32 %v1_137ec, { 1, 0 }
  uselistorder i32 %v0_137ec, { 1, 0 }
  uselistorder i1 %v2_137d8, { 1, 0 }
  uselistorder i32 %v5_137e4, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_137a8, { 2, 1, 0 }
  uselistorder i32 %v2_13794, { 1, 0, 2 }
  uselistorder i32 %tmp56, { 1, 0 }
  uselistorder i32 %tmp55, { 1, 0 }
  uselistorder i32 %tmp44, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 10, 6, 7, 8, 9, 13, 14, 11, 12, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 1, 9, 5, 6, 7, 8, 2, 10, 0 }
  uselistorder i32 (i32)* @function_139ac, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* @global_var_23004.549, { 1, 0 }
  uselistorder i32 168, { 2, 0, 1 }
  uselistorder i8 47, { 0, 5, 6, 1, 2, 3, 4, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13920, { 1, 0 }
  uselistorder label %bb63, { 2, 1, 0 }
  uselistorder label %dec_label_pc_138a4, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_13844, { 1, 0 }
  uselistorder label %dec_label_pc_137f0, { 1, 0 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %dec_label_pc_137d8, { 1, 0 }
}

define i32 @function_13994() local_unnamed_addr {
dec_label_pc_13994:
  %v0_13998 = call i32 @function_16828()
  %v1_1399c = add i32 %v0_13998, -164
  ret i32 %v1_1399c
}

define i32 @function_139a8() local_unnamed_addr {
dec_label_pc_139a8:
  %v1_139a8 = load i32, i32* @r0, align 4
  ret i32 %v1_139a8
}

define i32 @function_139ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_139ac:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v1_139b8 = call i32 @function_139a8()
  store i32 %v1_139b8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23008.551 to i32), i32* %r5.global-to-local, align 4
  br i1 and (i1 icmp ule (i32 ptrtoint (i32* @global_var_23008.551 to i32), i32 143372), i1 icmp ne (i32 ptrtoint (i32* @global_var_23008.551 to i32), i32 143372)), label %dec_label_pc_139c8, label %dec_label_pc_139dc

dec_label_pc_139c8:                               ; preds = %dec_label_pc_139ac, %dec_label_pc_139c8
  %v0_139c83 = phi i32 [ %v1_139c8, %dec_label_pc_139c8 ], [ 143372, %dec_label_pc_139ac ]
  %v1_139c8 = add i32 %v0_139c83, -4
  %v2_139c8 = inttoptr i32 %v1_139c8 to i32*
  %v3_139c8 = load i32, i32* %v2_139c8, align 4
  call void @__pseudo_branch(i32 %v3_139c8)
  %v1_139d4.pre = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_139c8, %v1_139d4.pre
  br i1 %tmp, label %dec_label_pc_139c8, label %dec_label_pc_139dc

dec_label_pc_139dc:                               ; preds = %dec_label_pc_139c8, %dec_label_pc_139ac
  store i32 80360, i32* @lr, align 4
  %v1_139e4 = call i32 @function_1a1f4()
  store i32 %v1_139e4, i32* @r0, align 4
  %v1_139f0 = call i32 @function_17cf0()
  %v0_139f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_139f8 = call i32 @function_16a08(i32 %v0_139f4)
  ret i32 %v1_139f8

; uselistorder directives
  uselistorder i32 %v1_139c8, { 0, 2, 1 }
  uselistorder i32 143372, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_139c8, { 1, 0 }
}

define i32 @function_13a10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13a10:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg4, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @function_13a30(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13a30:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %v3_13a34 = load i32, i32* @r4, align 4
  %v15_13a34 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v7_13a44 = icmp eq i32 %arg2, 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  br i1 %v7_13a44, label %bb, label %dec_label_pc_13a5c

bb:                                               ; preds = %dec_label_pc_13a30
  %v2_13a54 = or i32 %arg3, 131072
  store i32 %v2_13a54, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13b7c

dec_label_pc_13a5c:                               ; preds = %dec_label_pc_13a30
  %v7_13a5c = icmp eq i32 %arg2, 14
  br i1 %v7_13a5c, label %dec_label_pc_13a64, label %dec_label_pc_13a8c

dec_label_pc_13a64:                               ; preds = %dec_label_pc_13a5c
  store i32 %arg3, i32* @r3, align 4
  %v3_13a84 = call i32 @function_1621c(i32 221, i32 %arg1, i32 14)
  store i32 %v3_13a84, i32* @r0, align 4
  br label %dec_label_pc_13b90

dec_label_pc_13a8c:                               ; preds = %dec_label_pc_13a5c
  %v7_13a8c = icmp eq i32 %arg2, 9
  br i1 %v7_13a8c, label %dec_label_pc_13a94, label %dec_label_pc_13ae4

dec_label_pc_13a94:                               ; preds = %dec_label_pc_13a8c
  %v2_13aa0 = ptrtoint i32* %stack_var_-44 to i32
  %v4_13aa4 = call i32 @function_13a10(i32 221, i32 %arg1, i32 16, i32 %v2_13aa0)
  store i32 %v4_13aa4, i32* @r0, align 4
  %v4_13aac = icmp eq i32 %v4_13aa4, -22
  br i1 %v4_13aac, label %dec_label_pc_13ab0, label %dec_label_pc_13ac8

dec_label_pc_13ab0:                               ; preds = %dec_label_pc_13a94
  %v0_13ab0 = load i32, i32* %r7.global-to-local, align 4
  %v0_13ab4 = load i32, i32* %r6.global-to-local, align 4
  %v0_13ab8 = load i32, i32* %r5.global-to-local, align 4
  %v4_13ac0 = call i32 @function_13a10(i32 221, i32 %v0_13ab0, i32 %v0_13ab4, i32 %v0_13ab8)
  br label %dec_label_pc_13b94

dec_label_pc_13ac8:                               ; preds = %dec_label_pc_13a94
  %v2_13ac8 = icmp eq i32 %v4_13aa4, 0
  br i1 %v2_13ac8, label %dec_label_pc_13ad0, label %dec_label_pc_13b90

dec_label_pc_13ad0:                               ; preds = %dec_label_pc_13ac8
  %v3_13ad0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_13ad0, i32* @r3, align 4
  %v7_13ad8 = icmp eq i32 %v3_13ad0, 2
  br i1 %v7_13ad8, label %bb21, label %dec_label_pc_13b94

bb21:                                             ; preds = %dec_label_pc_13ad0
  %v2_13adc = sub i32 0, %tmp
  br label %dec_label_pc_13b94

dec_label_pc_13ae4:                               ; preds = %dec_label_pc_13a8c
  %v9_13ae8 = icmp eq i32 %arg2, 1030
  br i1 %v9_13ae8, label %dec_label_pc_13af0, label %dec_label_pc_13b7c

dec_label_pc_13af0:                               ; preds = %dec_label_pc_13ae4
  %v4_13b00 = call i32 @function_13a10(i32 221, i32 %arg1, i32 1030, i32 %arg3)
  %v7_13b04 = icmp eq i32 %v4_13b00, -22
  store i32 %v4_13b00, i32* @r4, align 4
  br i1 %v7_13b04, label %dec_label_pc_13b18, label %dec_label_pc_13b60

dec_label_pc_13b18:                               ; preds = %dec_label_pc_13af0
  %v0_13b18 = load i32, i32* %r6.global-to-local, align 4
  %v0_13b20 = load i32, i32* %r7.global-to-local, align 4
  %v4_13b28 = call i32 @function_13a10(i32 221, i32 %v0_13b20, i32 %v0_13b18, i32 0)
  %v7_13b2c = icmp eq i32 %v4_13b28, -22
  br i1 %v7_13b2c, label %dec_label_pc_13b48, label %dec_label_pc_13b34

dec_label_pc_13b34:                               ; preds = %dec_label_pc_13b18
  %v1_13b34 = icmp slt i32 %v4_13b28, 0
  br i1 %v1_13b34, label %dec_label_pc_13b74, label %dec_label_pc_13b3c

dec_label_pc_13b3c:                               ; preds = %dec_label_pc_13b34
  store i32 6, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13b74

dec_label_pc_13b48:                               ; preds = %dec_label_pc_13b18
  %v0_13b48 = load i32, i32* %r7.global-to-local, align 4
  %v0_13b4c = load i32, i32* %r5.global-to-local, align 4
  %v4_13b58 = call i32 @function_13a10(i32 221, i32 %v0_13b48, i32 0, i32 %v0_13b4c)
  store i32 %v4_13b58, i32* @r4, align 4
  br label %dec_label_pc_13b60

dec_label_pc_13b60:                               ; preds = %dec_label_pc_13af0, %dec_label_pc_13b48
  %v3_13b64 = phi i32 [ %v4_13b58, %dec_label_pc_13b48 ], [ %v4_13b00, %dec_label_pc_13af0 ]
  %storemerge1 = icmp slt i32 %v3_13b64, 0
  br i1 %storemerge1, label %.thread6, label %bb23

bb23:                                             ; preds = %dec_label_pc_13b60
  store i32 2, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13b60, %bb23
  %v3_13b70 = xor i1 %storemerge1, true
  call void @__pseudo_cond_branch(i1 %v3_13b70, i32 ptrtoint (i32* @global_var_13a10.559 to i32))
  br label %dec_label_pc_13b74

dec_label_pc_13b74:                               ; preds = %dec_label_pc_13b34, %dec_label_pc_13b3c, %.thread6
  %v0_13b74 = load i32, i32* @r4, align 4
  store i32 %v0_13b74, i32* @r0, align 4
  br label %dec_label_pc_13b90

dec_label_pc_13b7c:                               ; preds = %bb, %dec_label_pc_13ae4
  %v0_13b84 = phi i32 [ %arg3, %dec_label_pc_13ae4 ], [ %v2_13a54, %bb ]
  %v4_13b8c = call i32 @function_13a10(i32 221, i32 %arg1, i32 %arg2, i32 %v0_13b84)
  store i32 %v4_13b8c, i32* @r0, align 4
  br label %dec_label_pc_13b90

dec_label_pc_13b90:                               ; preds = %dec_label_pc_13ac8, %dec_label_pc_13b74, %dec_label_pc_13a64, %dec_label_pc_13b7c
  %v0_13b90 = call i32 @function_13c40()
  br label %dec_label_pc_13b94

dec_label_pc_13b94:                               ; preds = %bb21, %dec_label_pc_13ad0, %dec_label_pc_13ab0, %dec_label_pc_13b90
  %v1_13ba0 = phi i32 [ %v2_13adc, %bb21 ], [ %tmp, %dec_label_pc_13ad0 ], [ %v4_13ac0, %dec_label_pc_13ab0 ], [ %v0_13b90, %dec_label_pc_13b90 ]
  store i32 %v3_13a34, i32* @r4, align 4
  store i32 %v15_13a34, i32* @lr, align 4
  ret i32 %v1_13ba0

; uselistorder directives
  uselistorder i32 %v4_13b28, { 1, 0 }
  uselistorder i32 %v4_13b00, { 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_13a10, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_13b94, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13b90, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13b7c, { 1, 0 }
  uselistorder label %dec_label_pc_13b74, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_13b60, { 1, 0 }
}

define i32 @function_13ba8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ba8:
  %r7.global-to-local = alloca i32, align 4
  %v6_13ba8 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v1_13bb8 = and i32 %arg2, 64
  %v2_13bb8 = icmp eq i32 %v1_13bb8, 0
  br i1 %v2_13bb8, label %dec_label_pc_13bc0, label %dec_label_pc_13bd8

dec_label_pc_13bc0:                               ; preds = %dec_label_pc_13ba8
  %v2_13bc8 = and i32 %arg2, 4210688
  %v3_13bcc = icmp eq i32 %v2_13bc8, 4210688
  br i1 %v3_13bcc, label %dec_label_pc_13bd8, label %dec_label_pc_13be4

dec_label_pc_13bd8:                               ; preds = %dec_label_pc_13bc0, %dec_label_pc_13ba8
  br label %dec_label_pc_13be4

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bc0, %dec_label_pc_13bd8
  %storemerge = phi i32 [ %v6_13ba8, %dec_label_pc_13bd8 ], [ 0, %dec_label_pc_13bc0 ]
  store i32 %storemerge, i32* @r3, align 4
  %v1_13bec = or i32 %arg2, 131072
  %v3_13c00 = call i32 @function_1621c(i32 5, i32 %arg1, i32 %v1_13bec)
  %v1_13c04 = icmp slt i32 %v3_13c00, 0
  br i1 %v1_13c04, label %dec_label_pc_13c24, label %dec_label_pc_13c0c

dec_label_pc_13c0c:                               ; preds = %dec_label_pc_13be4
  %v0_13c0c = load i32, i32* %r7.global-to-local, align 4
  %v1_13c0c = and i32 %v0_13c0c, 524288
  %v2_13c0c = icmp eq i32 %v1_13c0c, 0
  br i1 %v2_13c0c, label %dec_label_pc_13c24, label %dec_label_pc_13c14

dec_label_pc_13c14:                               ; preds = %dec_label_pc_13c0c
  store i32 221, i32* %r7.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  br label %dec_label_pc_13c24

dec_label_pc_13c24:                               ; preds = %dec_label_pc_13c14, %dec_label_pc_13c0c, %dec_label_pc_13be4
  store i32 %v3_13c00, i32* @r0, align 4
  %v0_13c28 = call i32 @function_13c40()
  ret i32 %v0_13c28

; uselistorder directives
  uselistorder i32 221, { 7, 3, 4, 2, 1, 5, 0, 6 }
  uselistorder i32 64, { 11, 31, 4, 5, 12, 6, 13, 14, 7, 15, 8, 16, 17, 9, 18, 19, 10, 20, 21, 0, 22, 23, 1, 24, 26, 25, 2, 27, 29, 28, 3, 30 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_13be4, { 1, 0 }
}

define i32 @function_13c40() local_unnamed_addr {
dec_label_pc_13c40:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_13c40 = load i32, i32* @r0, align 4
  %v2_13c40 = icmp ugt i32 %v0_13c40, -4097
  %v7_13c40 = icmp eq i32 %v0_13c40, -4096
  %v3_13c44 = load i32, i32* @r4, align 4
  store i32 %v3_13c44, i32* %stack_var_-8, align 4
  %v2_13c48 = xor i1 %v2_13c40, true
  %v3_13c48 = or i1 %v7_13c40, %v2_13c48
  br i1 %v3_13c48, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_13c40
  store i32 %v0_13c40, i32* @r2, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_13c40, %bb
  store i32 %v0_13c40, i32* %r4.global-to-local, align 4
  %v2_13c50 = xor i1 %v7_13c40, true
  %v3_13c50 = and i1 %v2_13c40, %v2_13c50
  br i1 %v3_13c50, label %dec_label_pc_13c60, label %dec_label_pc_13c54

dec_label_pc_13c54:                               ; preds = %bb4, %dec_label_pc_13c60
  %v2_13c58 = phi i32 [ %v3_13c44, %bb4 ], [ %v2_13c58.pre, %dec_label_pc_13c60 ]
  %v0_13c54 = load i32, i32* @r2, align 4
  store i32 %v2_13c58, i32* @r4, align 4
  ret i32 %v0_13c54

dec_label_pc_13c60:                               ; preds = %bb4
  %v0_13c60 = call i32 @function_13994()
  %v0_13c64 = load i32, i32* %r4.global-to-local, align 4
  %v1_13c64 = sub i32 0, %v0_13c64
  store i32 %v1_13c64, i32* @r3, align 4
  store i32 -1, i32* @r2, align 4
  %v2_13c6c = inttoptr i32 %v0_13c60 to i32*
  store i32 %v1_13c64, i32* %v2_13c6c, align 4
  %v2_13c58.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13c54

; uselistorder directives
  uselistorder i1 %v7_13c40, { 1, 0 }
  uselistorder i1 %v2_13c40, { 1, 0 }
  uselistorder i32 %v0_13c40, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13c54, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_13c74(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  %v3_13c78 = load i32, i32* @r4, align 4
  %v2_13c80 = ptrtoint i32* %stack_var_-12 to i32
  %v2_13c90 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_13c90, i32* %ip.global-to-local, align 4
  %v4_13c9420 = add i32 %v2_13c80, 4
  store i32 %v4_13c9420, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge

dec_label_pc_13c94.dec_label_pc_13c94_crit_edge:  ; preds = %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.dec_label_pc_13c94.dec_label_pc_13c94_crit_edge_crit_edge, %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.lr.ph
  %v2_13c98.pre = phi i32 [ %v2_13c90, %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.lr.ph ], [ %v2_13c98.pre.pre, %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.dec_label_pc_13c94.dec_label_pc_13c94_crit_edge_crit_edge ]
  %v0_13c94.pre = phi i32 [ %v4_13c9420, %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.lr.ph ], [ %v0_13c94.pre.pre, %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.dec_label_pc_13c94.dec_label_pc_13c94_crit_edge_crit_edge ]
  %v1_13c9c25 = phi i32 [ 4, %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.lr.ph ], [ %v1_13c9c, %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.dec_label_pc_13c94.dec_label_pc_13c94_crit_edge_crit_edge ]
  %v1_13c94 = inttoptr i32 %v0_13c94.pre to i32*
  %v2_13c94 = load i32, i32* %v1_13c94, align 4
  %v4_13c94 = add i32 %v0_13c94.pre, 4
  store i32 %v4_13c94, i32* %r0.global-to-local, align 4
  %v3_13c98 = add i32 %v1_13c9c25, %v2_13c98.pre
  %v4_13c98 = inttoptr i32 %v3_13c98 to i32*
  store i32 %v2_13c94, i32* %v4_13c98, align 4
  %v0_13c9c = load i32, i32* %r2.global-to-local, align 4
  %v1_13c9c = add i32 %v0_13c9c, 4
  store i32 %v1_13c9c, i32* %r2.global-to-local, align 4
  %v7_13ca0 = icmp eq i32 %v1_13c9c, 16
  br i1 %v7_13ca0, label %dec_label_pc_13ca8, label %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.dec_label_pc_13c94.dec_label_pc_13c94_crit_edge_crit_edge

dec_label_pc_13c94.dec_label_pc_13c94_crit_edge.dec_label_pc_13c94.dec_label_pc_13c94_crit_edge_crit_edge: ; preds = %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge
  %v0_13c94.pre.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_13c98.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge

dec_label_pc_13ca8:                               ; preds = %dec_label_pc_13c94.dec_label_pc_13c94_crit_edge
  store i32 %arg1, i32* @r0, align 4
  %v0_13cc0 = call i32 @function_13c40()
  store i32 %v0_13cc0, i32* %r0.global-to-local, align 4
  store i32 %v3_13c78, i32* @r4, align 4
  ret i32 %v0_13cc0

; uselistorder directives
  uselistorder i32 %v1_13c9c, { 1, 2, 0 }
  uselistorder i32 %v0_13c94.pre, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 0 }
}

define i32 @function_13cd4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13cd4:
  store i32 %arg2, i32* @r1, align 4
  %v3_13cd4 = load i32, i32* @r4, align 4
  %v6_13cd4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_13cd8 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  br i1 %v2_13cd8, label %dec_label_pc_13cf8, label %dec_label_pc_13ce8

dec_label_pc_13ce8:                               ; preds = %dec_label_pc_13cd4
  store i32 -1, i32* @r0, align 4
  %v0_13cec = call i32 @function_133e8()
  %v1_13cf0 = load i32, i32* @r4, align 4
  %v3_13cf0 = icmp ult i32 %v0_13cec, %v1_13cf0
  br i1 %v3_13cf0, label %dec_label_pc_13d14, label %dec_label_pc_13ce8.dec_label_pc_13cf8_crit_edge

dec_label_pc_13ce8.dec_label_pc_13cf8_crit_edge:  ; preds = %dec_label_pc_13ce8
  %v1_13cf8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13cf8

dec_label_pc_13cf8:                               ; preds = %dec_label_pc_13ce8.dec_label_pc_13cf8_crit_edge, %dec_label_pc_13cd4
  %v1_13cf8 = phi i32 [ %v1_13cf8.pre, %dec_label_pc_13ce8.dec_label_pc_13cf8_crit_edge ], [ 0, %dec_label_pc_13cd4 ]
  %v0_13cf8 = phi i32 [ %v1_13cf0, %dec_label_pc_13ce8.dec_label_pc_13cf8_crit_edge ], [ %arg1, %dec_label_pc_13cd4 ]
  %v2_13cf8 = mul i32 %v0_13cf8, %v1_13cf8
  %v1_13cfc = call i32 @function_14e3c(i32 %v2_13cf8)
  store i32 %v1_13cfc, i32* @r2, align 4
  br label %dec_label_pc_13d04

dec_label_pc_13d04:                               ; preds = %dec_label_pc_13d14, %dec_label_pc_13cf8
  %v0_13d04 = phi i32 [ %v0_13d04.pre, %dec_label_pc_13d14 ], [ %v1_13cfc, %dec_label_pc_13cf8 ]
  store i32 %v3_13cd4, i32* @r4, align 4
  store i32 %v6_13cd4, i32* @r5, align 4
  ret i32 %v0_13d04

dec_label_pc_13d14:                               ; preds = %dec_label_pc_13ce8
  %v0_13d14 = call i32 @function_13994()
  store i32 0, i32* @r2, align 4
  %v2_13d20 = inttoptr i32 %v0_13d14 to i32*
  store i32 12, i32* %v2_13d20, align 4
  %v0_13d04.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13d04
}

define i32 @function_13d28(i32* %arg1) local_unnamed_addr {
dec_label_pc_13d28:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_13d28 = load i32, i32* @r4, align 4
  store i32 %v3_13d28, i32* %stack_var_-36, align 4
  %v6_13d28 = load i32, i32* @r5, align 4
  %v9_13d28 = load i32, i32* @r6, align 4
  %v12_13d28 = load i32, i32* @r7, align 4
  %v15_13d28 = load i32, i32* @r8, align 4
  %v21_13d28 = load i32, i32* @sl, align 4
  %v2_13d2c = load i32, i32* %arg1, align 4
  store i32 %v2_13d2c, i32* @sl, align 4
  %v1_13d30 = urem i32 %v2_13d2c, 2
  %v2_13d30 = icmp eq i32 %v1_13d30, 0
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v2_13d30, label %dec_label_pc_13d40, label %dec_label_pc_13e1c

dec_label_pc_13d40:                               ; preds = %dec_label_pc_13d28, %dec_label_pc_13e10
  %v0_13d40 = phi i32 [ %v0_13e10, %dec_label_pc_13e10 ], [ %v2_13d2c, %dec_label_pc_13d28 ]
  %v3_13d40 = udiv i32 %v0_13d40, 16
  store i32 %v3_13d40, i32* %r3.global-to-local, align 4
  %v1_13d44 = add nsw i32 %v3_13d40, -1
  store i32 %v1_13d44, i32* @r0, align 4
  %tmp39 = icmp ult i32 %v1_13d44, 33
  br i1 %tmp39, label %.thread, label %dec_label_pc_13d54

.thread:                                          ; preds = %dec_label_pc_13d40
  store i32 %v1_13d44, i32* @r8, align 4
  br label %dec_label_pc_13d6c

dec_label_pc_13d54:                               ; preds = %dec_label_pc_13d40
  %tmp40 = icmp ugt i32 %v1_13d44, 7168
  br i1 %tmp40, label %.thread18, label %dec_label_pc_13d60

.thread18:                                        ; preds = %dec_label_pc_13d54
  store i32 63, i32* @r8, align 4
  br label %dec_label_pc_13d6c

dec_label_pc_13d60:                               ; preds = %dec_label_pc_13d54
  %v0_13d60 = call i32 @function_18038()
  %v3_13d64 = udiv i32 %v0_13d60, 2097152
  %v1_13d68 = add nsw i32 %v3_13d64, -496
  store i32 %v1_13d68, i32* @r8, align 4
  br label %dec_label_pc_13d6c

dec_label_pc_13d6c:                               ; preds = %.thread18, %.thread, %dec_label_pc_13d60
  %v0_13d74 = phi i32 [ 63, %.thread18 ], [ %v1_13d44, %.thread ], [ %v1_13d68, %dec_label_pc_13d60 ]
  %v3_13d70 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_13d70, i32* %r2.global-to-local, align 4
  %v3_13d74 = mul i32 %v0_13d74, 16
  store i32 %v3_13d74, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %sb.global-to-local, align 4
  %v2_13d7c = icmp eq i32 %v3_13d70, 0
  store i1 %v2_13d7c, i1* @cpsr_z, align 1
  %v1_13d80 = or i32 %v3_13d74, 8
  store i32 %v1_13d80, i32* %r3.global-to-local, align 4
  %v2_13d84 = add i32 %v1_13d80, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v2_13d84, i32* @r6, align 4
  br i1 %v2_13d7c, label %bb, label %dec_label_pc_13e4c

bb:                                               ; preds = %dec_label_pc_13d6c
  %v1_13d88 = load i32, i32* @sl, align 4
  store i32 %v1_13d88, i32* @r0, align 4
  br label %dec_label_pc_13d90

dec_label_pc_13d90:                               ; preds = %bb, %dec_label_pc_13e88
  %v0_13db438 = phi i32 [ %v1_13d88, %bb ], [ %v2_13e88, %dec_label_pc_13e88 ]
  %v0_13d94 = phi i32 [ ptrtoint (i32* @global_var_23108.564 to i32), %bb ], [ %v0_13d94.pre, %dec_label_pc_13e88 ]
  %v0_13d90 = phi i32 [ %v0_13d74, %bb ], [ %v0_13d90.pre, %dec_label_pc_13e88 ]
  %v1_13d90 = add i32 %v0_13d90, 1
  store i32 %v1_13d90, i32* %r1.global-to-local, align 4
  %v4_13d94 = mul i32 %v1_13d90, 16
  %v5_13d94 = add i32 %v4_13d94, %v0_13d94
  %v6_13d94 = inttoptr i32 %v5_13d94 to i32*
  %v7_13d94 = load i32, i32* %v6_13d94, align 4
  store i32 %v7_13d94, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r6.global-to-local, align 4
  %v2_13d9c = icmp eq i32 %v7_13d94, 0
  br i1 %v2_13d9c, label %bb31, label %.thread4

bb31:                                             ; preds = %dec_label_pc_13d90
  %v4_13da0 = mul i32 %v1_13d90, 16
  %v3_13da4 = add i32 %v4_13da0, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v3_13da4, i32* %r3.global-to-local, align 4
  %v2_13da8 = add i32 %v4_13da0, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v2_13da8, i32* %r2.global-to-local, align 4
  %v7_13dac = add i32 %v4_13d94, ptrtoint (i32* @global_var_23108.564 to i32)
  %v8_13dac = inttoptr i32 %v7_13dac to i32*
  store i32 %v2_13da8, i32* %v8_13dac, align 4
  %v1_13db0 = load i32, i32* %r2.global-to-local, align 4
  %v2_13db0 = load i32, i32* %r3.global-to-local, align 4
  %v3_13db0 = add i32 %v2_13db0, 4
  %v4_13db0 = inttoptr i32 %v3_13db0 to i32*
  store i32 %v1_13db0, i32* %v4_13db0, align 4
  %v0_13db4.pre = load i32, i32* @r0, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13d90, %bb31
  %v0_13db4 = phi i32 [ %v0_13db438, %dec_label_pc_13d90 ], [ %v0_13db4.pre, %bb31 ]
  %v1_13db4 = load i32, i32* @sl, align 4
  %v9_13db4 = icmp eq i32 %v0_13db4, %v1_13db4
  br i1 %v9_13db4, label %dec_label_pc_13e90, label %dec_label_pc_13dbc

dec_label_pc_13dbc:                               ; preds = %.thread4
  %v0_13dbc = load i32, i32* @r5, align 4
  %v1_13dbc = add i32 %v0_13dbc, 8
  store i32 %v1_13dbc, i32* %r2.global-to-local, align 4
  %v1_13dc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_13dc0 = add i32 %v1_13dc0, %v1_13dbc
  %v3_13dc0 = inttoptr i32 %v2_13dc0 to i32*
  %v4_13dc0 = load i32, i32* %v3_13dc0, align 4
  store i32 %v4_13dc0, i32* %r3.global-to-local, align 4
  %v2_13dc4 = icmp eq i32 %v4_13dc0, 0
  store i1 %v2_13dc4, i1* @cpsr_z, align 1
  store i32 %v2_13dc0, i32* %r4.global-to-local, align 4
  br i1 %v2_13dc4, label %dec_label_pc_13e10, label %dec_label_pc_13dd0

dec_label_pc_13dd0:                               ; preds = %dec_label_pc_13dbc
  %v0_13dd0 = call i32 @function_16760()
  store i32 %v0_13dd0, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13dd8 = load i32, i32* %r2.global-to-local, align 4
  %v2_13dd8 = load i32, i32* %r6.global-to-local, align 4
  %v3_13dd8 = add i32 %v2_13dd8, %v1_13dd8
  %v4_13dd8 = inttoptr i32 %v3_13dd8 to i32*
  store i32 0, i32* %v4_13dd8, align 4
  %v0_13ddc = call i32 @function_16760()
  %v0_13de0 = load i32, i32* @r5, align 4
  %v1_13de0 = add i32 %v0_13de0, 12
  store i32 %v1_13de0, i32* %r3.global-to-local, align 4
  %v1_13de4 = load i32, i32* %r6.global-to-local, align 4
  %v2_13de4 = add i32 %v1_13de4, %v1_13de0
  %v3_13de4 = inttoptr i32 %v2_13de4 to i32*
  %v4_13de4 = load i32, i32* %v3_13de4, align 4
  store i32 %v4_13de4, i32* %r2.global-to-local, align 4
  %v2_13de8 = icmp eq i32 %v4_13de4, 0
  br i1 %v2_13de8, label %dec_label_pc_13e0c, label %dec_label_pc_13df0

dec_label_pc_13df0:                               ; preds = %dec_label_pc_13dd0
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_13df4 = load i32, i32* %r4.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_13e04 = icmp eq i32 %v0_13df4, -38
  br i1 %v7_13e04, label %dec_label_pc_13e74, label %dec_label_pc_13e0c

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13df0, %dec_label_pc_13dd0
  %v0_13e0c = load i32, i32* %fp.global-to-local, align 4
  %v1_13e0c = inttoptr i32 %v0_13e0c to i32*
  %v2_13e0c = load i32, i32* %v1_13e0c, align 4
  br label %dec_label_pc_13e10

dec_label_pc_13e10:                               ; preds = %dec_label_pc_13dbc, %dec_label_pc_13e74, %dec_label_pc_13e0c
  %v0_13e10 = phi i32 [ %v0_13db4, %dec_label_pc_13dbc ], [ %v2_13e80, %dec_label_pc_13e74 ], [ %v2_13e0c, %dec_label_pc_13e0c ]
  store i32 %v0_13e10, i32* @sl, align 4
  %v1_13e14 = urem i32 %v0_13e10, 2
  %v2_13e14 = icmp eq i32 %v1_13e14, 0
  br i1 %v2_13e14, label %dec_label_pc_13d40, label %dec_label_pc_13e1c

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13e10, %dec_label_pc_13d28
  br label %dec_label_pc_13e20

dec_label_pc_13e20:                               ; preds = %dec_label_pc_13f2c, %dec_label_pc_13f24, %dec_label_pc_13e1c
  %v1_13e28 = phi i32 [ 1, %dec_label_pc_13f2c ], [ 1, %dec_label_pc_13f24 ], [ 0, %dec_label_pc_13e1c ]
  %v2_13e24 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13e24, i32* @r4, align 4
  store i32 %v6_13d28, i32* @r5, align 4
  store i32 %v9_13d28, i32* @r6, align 4
  store i32 %v12_13d28, i32* @r7, align 4
  store i32 %v15_13d28, i32* @r8, align 4
  store i32 %v21_13d28, i32* @sl, align 4
  ret i32 %v1_13e28

dec_label_pc_13e34:                               ; preds = %dec_label_pc_13e70
  %v0_13e34 = load i32, i32* @r5, align 4
  %v1_13e34 = add i32 %v0_13e34, 12
  store i32 1, i32* @r2, align 4
  %v1_13e3c = load i32, i32* %sb.global-to-local, align 4
  %v2_13e3c = add i32 %v1_13e34, %v1_13e3c
  store i32 %v2_13e3c, i32* %r1.global-to-local, align 4
  %v0_13e40 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v2_13e48 = inttoptr i32 %v0_13e40 to i32*
  %v3_13e48 = call i32 @function_162e0(i32* %v2_13e48, i32 %v2_13e3c)
  %v0_13e4c.pre = load i32, i32* @r5, align 4
  %v1_13e50.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13e4c

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13d6c, %dec_label_pc_13e34
  %v1_13e50 = phi i32 [ %v1_13e50.pre, %dec_label_pc_13e34 ], [ ptrtoint (i32* @global_var_23108.564 to i32), %dec_label_pc_13d6c ]
  %v0_13e4c = phi i32 [ %v0_13e4c.pre, %dec_label_pc_13e34 ], [ %v3_13d74, %dec_label_pc_13d6c ]
  %v1_13e4c = add i32 %v0_13e4c, 8
  store i32 %v1_13e4c, i32* %r3.global-to-local, align 4
  %v2_13e50 = add i32 %v1_13e4c, %v1_13e50
  store i32 %v2_13e50, i32* @r7, align 4
  br label %dec_label_pc_13e54

dec_label_pc_13e54:                               ; preds = %dec_label_pc_13e54.dec_label_pc_13e54_crit_edge, %dec_label_pc_13e4c
  %v0_13e54 = phi i32 [ %v0_13e54.pre, %dec_label_pc_13e54.dec_label_pc_13e54_crit_edge ], [ %v2_13e50, %dec_label_pc_13e4c ]
  %v1_13e54 = inttoptr i32 %v0_13e54 to i32*
  %v2_13e54 = load i32, i32* %v1_13e54, align 4
  store i32 %v2_13e54, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v0_13e54, i32* %r2.global-to-local, align 4
  %v4_13e64 = call i32 @function_167b4(i32 %v2_13e54, i32 1, i32* %v1_13e54)
  %v2_13e68 = icmp eq i32 %v4_13e64, 0
  store i1 %v2_13e68, i1* @cpsr_z, align 1
  br i1 %v2_13e68, label %dec_label_pc_13e70, label %dec_label_pc_13e54.dec_label_pc_13e54_crit_edge

dec_label_pc_13e54.dec_label_pc_13e54_crit_edge:  ; preds = %dec_label_pc_13e54
  %v0_13e54.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13e54

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e54
  %v0_13e2c = load i32, i32* @r4, align 4
  %v2_13e2c = icmp eq i32 %v0_13e2c, 0
  br i1 %v2_13e2c, label %dec_label_pc_13e88, label %dec_label_pc_13e34

dec_label_pc_13e74:                               ; preds = %dec_label_pc_13df0
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_13e80 = load i32, i32* %fp.global-to-local, align 4
  %v1_13e80 = inttoptr i32 %v0_13e80 to i32*
  %v2_13e80 = load i32, i32* %v1_13e80, align 4
  br label %dec_label_pc_13e10

dec_label_pc_13e88:                               ; preds = %dec_label_pc_13e70
  %v0_13e88 = load i32, i32* %fp.global-to-local, align 4
  %v1_13e88 = inttoptr i32 %v0_13e88 to i32*
  %v2_13e88 = load i32, i32* %v1_13e88, align 4
  store i32 %v2_13e88, i32* @r0, align 4
  %v0_13d90.pre = load i32, i32* @r8, align 4
  %v0_13d94.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13d90

dec_label_pc_13e90:                               ; preds = %.thread4
  %v1_13e90 = and i32 %v0_13db4, -2
  store i32 %v1_13e90, i32* %r3.global-to-local, align 4
  %v1_13e94 = load i32, i32* %fp.global-to-local, align 4
  %v2_13e94 = sub i32 %v1_13e94, %v1_13e90
  store i32 %v2_13e94, i32* %r7.global-to-local, align 4
  %v1_13e98 = add i32 %v2_13e94, 8
  %v1_13e9c = inttoptr i32 %v1_13e98 to i32*
  %v2_13e9c = load i32, i32* %v1_13e9c, align 4
  store i32 %v2_13e9c, i32* @r0, align 4
  %v3_13e9c = add i32 %v2_13e94, 12
  %v4_13e9c = inttoptr i32 %v3_13e9c to i32*
  %v5_13e9c = load i32, i32* %v4_13e9c, align 4
  store i32 %v5_13e9c, i32* %ip.global-to-local, align 4
  %v9_13ea0 = icmp eq i32 %v5_13e9c, %v2_13e9c
  br i1 %v9_13ea0, label %dec_label_pc_13f40, label %dec_label_pc_13ea8

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13e90, %dec_label_pc_13fa0
  %v0_13eb4 = phi i32 [ %v2_13e94, %dec_label_pc_13e90 ], [ %v0_13fa0, %dec_label_pc_13fa0 ]
  %v1_13ea8 = add i32 %v0_13eb4, 4
  %v2_13ea8 = inttoptr i32 %v1_13ea8 to i32*
  %v3_13ea8 = load i32, i32* %v2_13ea8, align 4
  %v1_13eac = or i32 %v3_13ea8, 1
  store i32 %v1_13eac, i32* %r2.global-to-local, align 4
  %v1_13eb0 = and i32 %v3_13ea8, -2
  store i32 %v1_13eb0, i32* %r1.global-to-local, align 4
  %v2_13eb4 = add i32 %v1_13eb0, %v0_13eb4
  %v3_13eb4 = inttoptr i32 %v2_13eb4 to i32*
  %v4_13eb4 = load i32, i32* %v3_13eb4, align 4
  %v1_13eb8 = or i32 %v4_13eb4, 1
  store i32 %v1_13eb8, i32* %r3.global-to-local, align 4
  store i32 %v1_13eb8, i32* %v3_13eb4, align 4
  %v0_13ec0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ec0 = load i32, i32* %r7.global-to-local, align 4
  %v2_13ec0 = add i32 %v1_13ec0, 4
  %v3_13ec0 = inttoptr i32 %v2_13ec0 to i32*
  store i32 %v0_13ec0, i32* %v3_13ec0, align 4
  %v0_13ec4 = load i32, i32* @r5, align 4
  %v1_13ec4 = add i32 %v0_13ec4, 8
  store i32 %v1_13ec4, i32* %r4.global-to-local, align 4
  %v0_13ec8 = load i32, i32* @r0, align 4
  %v1_13ec8 = load i32, i32* %ip.global-to-local, align 4
  %v2_13ec8 = add i32 %v1_13ec8, 8
  %v3_13ec8 = inttoptr i32 %v2_13ec8 to i32*
  store i32 %v0_13ec8, i32* %v3_13ec8, align 4
  %v0_13ecc = load i32, i32* %r4.global-to-local, align 4
  %v1_13ecc = load i32, i32* %sb.global-to-local, align 4
  %v2_13ecc = add i32 %v1_13ecc, %v0_13ecc
  %v3_13ecc = inttoptr i32 %v2_13ecc to i32*
  %v4_13ecc = load i32, i32* %v3_13ecc, align 4
  store i32 %v4_13ecc, i32* %r3.global-to-local, align 4
  %v0_13ed0 = load i32, i32* %r7.global-to-local, align 4
  %v1_13ed0 = add i32 %v0_13ed0, 8
  %v2_13ed0 = inttoptr i32 %v1_13ed0 to i32*
  %v3_13ed0 = load i32, i32* %v2_13ed0, align 4
  store i32 %v3_13ed0, i32* %r2.global-to-local, align 4
  %v2_13ed4 = icmp eq i32 %v4_13ecc, 0
  store i1 %v2_13ed4, i1* @cpsr_z, align 1
  %v0_13ed8 = load i32, i32* %ip.global-to-local, align 4
  %v2_13ed8 = add i32 %v3_13ed0, 12
  %v3_13ed8 = inttoptr i32 %v2_13ed8 to i32*
  store i32 %v0_13ed8, i32* %v3_13ed8, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  %v0_13ee0 = load i32, i32* %r4.global-to-local, align 4
  %v1_13ee0 = load i32, i32* %sb.global-to-local, align 4
  %v2_13ee0 = add i32 %v1_13ee0, %v0_13ee0
  store i32 %v2_13ee0, i32* %r6.global-to-local, align 4
  br i1 %v2_13ed4, label %dec_label_pc_13f24, label %dec_label_pc_13ee8

dec_label_pc_13ee8:                               ; preds = %dec_label_pc_13ea8
  %v0_13ee8 = call i32 @function_16760()
  store i32 %v0_13ee8, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13ef0 = load i32, i32* %r4.global-to-local, align 4
  %v2_13ef0 = load i32, i32* %r1.global-to-local, align 4
  %v3_13ef0 = add i32 %v2_13ef0, %v1_13ef0
  %v4_13ef0 = inttoptr i32 %v3_13ef0 to i32*
  store i32 0, i32* %v4_13ef0, align 4
  %v0_13ef4 = call i32 @function_16760()
  %v0_13ef8 = load i32, i32* @r5, align 4
  %v1_13ef8 = add i32 %v0_13ef8, 12
  store i32 %v1_13ef8, i32* %r3.global-to-local, align 4
  %v1_13efc = load i32, i32* %r1.global-to-local, align 4
  %v2_13efc = add i32 %v1_13efc, %v1_13ef8
  %v3_13efc = inttoptr i32 %v2_13efc to i32*
  %v4_13efc = load i32, i32* %v3_13efc, align 4
  store i32 %v4_13efc, i32* %r2.global-to-local, align 4
  %v2_13f00 = icmp eq i32 %v4_13efc, 0
  br i1 %v2_13f00, label %dec_label_pc_13f24, label %dec_label_pc_13f08

dec_label_pc_13f08:                               ; preds = %dec_label_pc_13ee8
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_13f0c = load i32, i32* %r6.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_13f1c = icmp eq i32 %v0_13f0c, -38
  br i1 %v7_13f1c, label %dec_label_pc_13f2c, label %dec_label_pc_13f24

dec_label_pc_13f24:                               ; preds = %dec_label_pc_13f08, %dec_label_pc_13ee8, %dec_label_pc_13ea8
  br label %dec_label_pc_13e20

dec_label_pc_13f2c:                               ; preds = %dec_label_pc_13f08
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e20

dec_label_pc_13f40:                               ; preds = %dec_label_pc_13e90
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_13f44 = load i32, i32* @r8, align 4
  %v1_13f44 = sub i32 32, %v0_13f44
  store i32 %v1_13f44, i32* %r1.global-to-local, align 4
  %v7_13f4c = lshr i32 1, %v1_13f44
  store i32 %v7_13f4c, i32* %r4.global-to-local, align 4
  %v1_13f50 = add i32 %v0_13f44, -32
  %v6_13f50 = icmp slt i32 %v1_13f50, 0
  %v7_13f50 = icmp eq i32 %v0_13f44, 32
  store i1 %v7_13f50, i1* @cpsr_z, align 1
  %v6_13f54 = shl i32 1, %v0_13f44
  store i32 %v6_13f54, i32* %r3.global-to-local, align 4
  br i1 %v6_13f50, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_13f40
  %v7_13f58 = shl i32 1, %v1_13f50
  store i32 %v7_13f58, i32* %r4.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_13f40, %bb32
  %v0_13f60 = phi i32 [ %v7_13f4c, %dec_label_pc_13f40 ], [ %v7_13f58, %bb32 ]
  %v1_13f5c = sub i32 -1, %v6_13f54
  %v1_13f60 = sub i32 -1, %v0_13f60
  store i32 %v1_13f60, i32* %fp.global-to-local, align 4
  store i32 %v1_13f5c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13f68

dec_label_pc_13f68:                               ; preds = %dec_label_pc_13f68.dec_label_pc_13f68_crit_edge, %bb33
  %v1_13f70 = phi i32 [ %v1_13f70.pre, %dec_label_pc_13f68.dec_label_pc_13f68_crit_edge ], [ %v1_13f5c, %bb33 ]
  %v2_13f68 = load i32, i32* @global_var_23108.564, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_13f70 = and i32 %v2_13f68, %v1_13f70
  store i32 %v2_13f70, i32* %r1.global-to-local, align 4
  %v4_13f74 = call i32 @function_167b4(i32 %v2_13f68, i32 %v2_13f70, i32* nonnull @global_var_23108.564)
  %v2_13f78 = icmp eq i32 %v4_13f74, 0
  store i1 %v2_13f78, i1* @cpsr_z, align 1
  br i1 %v2_13f78, label %dec_label_pc_13f80, label %dec_label_pc_13f68.dec_label_pc_13f68_crit_edge

dec_label_pc_13f68.dec_label_pc_13f68_crit_edge:  ; preds = %dec_label_pc_13f68
  %v1_13f70.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13f68

dec_label_pc_13f80:                               ; preds = %dec_label_pc_13f68
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r6.global-to-local, align 4
  %v0_13f84 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13f84, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13f88

dec_label_pc_13f88:                               ; preds = %dec_label_pc_13f88.dec_label_pc_13f88_crit_edge, %dec_label_pc_13f80
  %v1_13f90 = phi i32 [ %v1_13f90.pre, %dec_label_pc_13f88.dec_label_pc_13f88_crit_edge ], [ %v0_13f84, %dec_label_pc_13f80 ]
  %v2_13f88 = load i32, i32* @global_var_2310c.566, align 4
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r2.global-to-local, align 4
  %v2_13f90 = and i32 %v2_13f88, %v1_13f90
  store i32 %v2_13f90, i32* %r1.global-to-local, align 4
  %v4_13f94 = call i32 @function_167b4(i32 %v2_13f88, i32 %v2_13f90, i32* nonnull @global_var_2310c.566)
  %v2_13f98 = icmp eq i32 %v4_13f94, 0
  store i1 %v2_13f98, i1* @cpsr_z, align 1
  br i1 %v2_13f98, label %dec_label_pc_13fa0, label %dec_label_pc_13f88.dec_label_pc_13f88_crit_edge

dec_label_pc_13f88.dec_label_pc_13f88_crit_edge:  ; preds = %dec_label_pc_13f88
  %v1_13f90.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13f88

dec_label_pc_13fa0:                               ; preds = %dec_label_pc_13f88
  %v0_13fa0 = load i32, i32* %r7.global-to-local, align 4
  %v1_13fa0 = add i32 %v0_13fa0, 8
  %v1_13fa4 = inttoptr i32 %v1_13fa0 to i32*
  %v2_13fa4 = load i32, i32* %v1_13fa4, align 4
  store i32 %v2_13fa4, i32* @r0, align 4
  %v3_13fa4 = add i32 %v0_13fa0, 12
  %v4_13fa4 = inttoptr i32 %v3_13fa4 to i32*
  %v5_13fa4 = load i32, i32* %v4_13fa4, align 4
  store i32 %v5_13fa4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13ea8

; uselistorder directives
  uselistorder i32 %v0_13fa0, { 1, 2, 0 }
  uselistorder i32 %v2_13f88, { 1, 0 }
  uselistorder i32 %v2_13f68, { 1, 0 }
  uselistorder i32 %v1_13f5c, { 1, 0 }
  uselistorder i32 %v2_13e88, { 1, 0 }
  uselistorder i32 %v0_13e54, { 1, 0 }
  uselistorder i32 %v0_13e10, { 0, 2, 1 }
  uselistorder i32 %v0_13db4, { 0, 2, 1 }
  uselistorder i32 %v4_13da0, { 1, 0 }
  uselistorder i32 %v4_13d94, { 1, 0 }
  uselistorder i32 %v3_13d74, { 2, 1, 0 }
  uselistorder i32 %v0_13d74, { 1, 0 }
  uselistorder i32 %v1_13d44, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v3_13d40, { 1, 0 }
  uselistorder i32 %v2_13d2c, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_13ea8, { 1, 0 }
  uselistorder label %dec_label_pc_13e4c, { 1, 0 }
  uselistorder label %dec_label_pc_13e10, { 1, 2, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_13d90, { 1, 0 }
  uselistorder label %dec_label_pc_13d6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d40, { 1, 0 }
}

define i32 @function_13fb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13fb8:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13fb8 = load i32, i32* @r4, align 4
  store i32 %v3_13fb8, i32* %stack_var_-36, align 4
  %v6_13fb8 = load i32, i32* @r5, align 4
  %v9_13fb8 = load i32, i32* @r6, align 4
  %v12_13fb8 = load i32, i32* @r7, align 4
  %v15_13fb8 = load i32, i32* @r8, align 4
  %v21_13fb8 = load i32, i32* @sl, align 4
  %v1_13fbc = add i32 %arg1, 4
  %v2_13fbc = inttoptr i32 %v1_13fbc to i32*
  %v3_13fbc = load i32, i32* %v2_13fbc, align 4
  store i32 %v3_13fbc, i32* @sl, align 4
  %v1_13fc0 = urem i32 %v3_13fbc, 2
  %v2_13fc0 = icmp eq i32 %v1_13fc0, 0
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %v3_13fbc, i32* %r7.global-to-local, align 4
  br i1 %v2_13fc0, label %dec_label_pc_13fd4, label %dec_label_pc_140b4

dec_label_pc_13fd4:                               ; preds = %dec_label_pc_13fb8, %dec_label_pc_140a8
  %v0_13fd4 = phi i32 [ %v0_140a8, %dec_label_pc_140a8 ], [ %v3_13fbc, %dec_label_pc_13fb8 ]
  %v3_13fd4 = udiv i32 %v0_13fd4, 16
  store i32 %v3_13fd4, i32* %r3.global-to-local, align 4
  %v1_13fd8 = add nsw i32 %v3_13fd4, -1
  store i32 %v1_13fd8, i32* @r0, align 4
  %tmp = icmp ult i32 %v1_13fd8, 33
  br i1 %tmp, label %.thread, label %dec_label_pc_13fe8

.thread:                                          ; preds = %dec_label_pc_13fd4
  store i32 %v1_13fd8, i32* @r8, align 4
  br label %dec_label_pc_14000

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_13fd4
  %tmp37 = icmp ugt i32 %v1_13fd8, 7168
  br i1 %tmp37, label %.thread19, label %dec_label_pc_13ff4

.thread19:                                        ; preds = %dec_label_pc_13fe8
  store i32 63, i32* @r8, align 4
  br label %dec_label_pc_14000

dec_label_pc_13ff4:                               ; preds = %dec_label_pc_13fe8
  %v0_13ff4 = call i32 @function_18038()
  %v3_13ff8 = udiv i32 %v0_13ff4, 2097152
  %v1_13ffc = add nsw i32 %v3_13ff8, -496
  store i32 %v1_13ffc, i32* @r8, align 4
  br label %dec_label_pc_14000

dec_label_pc_14000:                               ; preds = %.thread19, %.thread, %dec_label_pc_13ff4
  %v0_14008 = phi i32 [ 63, %.thread19 ], [ %v1_13fd8, %.thread ], [ %v1_13ffc, %dec_label_pc_13ff4 ]
  %v3_14004 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_14004, i32* %r2.global-to-local, align 4
  %v3_14008 = mul i32 %v0_14008, 16
  store i32 %v3_14008, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %sb.global-to-local, align 4
  %v2_14010 = icmp eq i32 %v3_14004, 0
  store i1 %v2_14010, i1* @cpsr_z, align 1
  %v1_14014 = or i32 %v3_14008, 8
  store i32 %v1_14014, i32* %r3.global-to-local, align 4
  %v2_14018 = add i32 %v1_14014, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v2_14018, i32* @r6, align 4
  br i1 %v2_14010, label %bb, label %dec_label_pc_140e4

bb:                                               ; preds = %dec_label_pc_14000
  %v1_1401c = load i32, i32* @sl, align 4
  store i32 %v1_1401c, i32* @r0, align 4
  br label %dec_label_pc_14024

dec_label_pc_14024:                               ; preds = %bb, %dec_label_pc_1410c
  %v0_1404836 = phi i32 [ %v1_1401c, %bb ], [ %v3_1410c, %dec_label_pc_1410c ]
  %v0_14028 = phi i32 [ ptrtoint (i32* @global_var_23108.564 to i32), %bb ], [ %v0_14028.pre, %dec_label_pc_1410c ]
  %v0_14024 = phi i32 [ %v0_14008, %bb ], [ %v0_14024.pre, %dec_label_pc_1410c ]
  %v1_14024 = add i32 %v0_14024, 1
  store i32 %v1_14024, i32* %r1.global-to-local, align 4
  %v4_14028 = mul i32 %v1_14024, 16
  %v5_14028 = add i32 %v4_14028, %v0_14028
  %v6_14028 = inttoptr i32 %v5_14028 to i32*
  %v7_14028 = load i32, i32* %v6_14028, align 4
  store i32 %v7_14028, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r6.global-to-local, align 4
  %v2_14030 = icmp eq i32 %v7_14028, 0
  br i1 %v2_14030, label %bb31, label %.thread4

bb31:                                             ; preds = %dec_label_pc_14024
  %v4_14034 = mul i32 %v1_14024, 16
  %v3_14038 = add i32 %v4_14034, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v3_14038, i32* %r3.global-to-local, align 4
  %v2_1403c = add i32 %v4_14034, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v2_1403c, i32* %r2.global-to-local, align 4
  %v7_14040 = add i32 %v4_14028, ptrtoint (i32* @global_var_23108.564 to i32)
  %v8_14040 = inttoptr i32 %v7_14040 to i32*
  store i32 %v2_1403c, i32* %v8_14040, align 4
  %v1_14044 = load i32, i32* %r2.global-to-local, align 4
  %v2_14044 = load i32, i32* %r3.global-to-local, align 4
  %v3_14044 = add i32 %v2_14044, 4
  %v4_14044 = inttoptr i32 %v3_14044 to i32*
  store i32 %v1_14044, i32* %v4_14044, align 4
  %v0_14048.pre = load i32, i32* @r0, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14024, %bb31
  %v0_14048 = phi i32 [ %v0_1404836, %dec_label_pc_14024 ], [ %v0_14048.pre, %bb31 ]
  %v1_14048 = load i32, i32* @sl, align 4
  %v9_14048 = icmp eq i32 %v0_14048, %v1_14048
  br i1 %v9_14048, label %dec_label_pc_14128, label %dec_label_pc_14050

dec_label_pc_14050:                               ; preds = %.thread4
  %v0_14050 = load i32, i32* @r5, align 4
  %v1_14050 = add i32 %v0_14050, 8
  store i32 %v1_14050, i32* %r2.global-to-local, align 4
  %v1_14054 = load i32, i32* %r6.global-to-local, align 4
  %v2_14054 = add i32 %v1_14054, %v1_14050
  %v3_14054 = inttoptr i32 %v2_14054 to i32*
  %v4_14054 = load i32, i32* %v3_14054, align 4
  store i32 %v4_14054, i32* %r3.global-to-local, align 4
  %v2_14058 = icmp eq i32 %v4_14054, 0
  store i1 %v2_14058, i1* @cpsr_z, align 1
  store i32 %v2_14054, i32* %r4.global-to-local, align 4
  br i1 %v2_14058, label %dec_label_pc_140a8, label %dec_label_pc_14064

dec_label_pc_14064:                               ; preds = %dec_label_pc_14050
  %v0_14064 = call i32 @function_16760()
  store i32 %v0_14064, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1406c = load i32, i32* %r2.global-to-local, align 4
  %v2_1406c = load i32, i32* %r6.global-to-local, align 4
  %v3_1406c = add i32 %v2_1406c, %v1_1406c
  %v4_1406c = inttoptr i32 %v3_1406c to i32*
  store i32 0, i32* %v4_1406c, align 4
  %v0_14070 = call i32 @function_16760()
  %v0_14074 = load i32, i32* @r5, align 4
  %v1_14074 = add i32 %v0_14074, 12
  store i32 %v1_14074, i32* %r3.global-to-local, align 4
  %v1_14078 = load i32, i32* %r6.global-to-local, align 4
  %v2_14078 = add i32 %v1_14078, %v1_14074
  %v3_14078 = inttoptr i32 %v2_14078 to i32*
  %v4_14078 = load i32, i32* %v3_14078, align 4
  store i32 %v4_14078, i32* %r2.global-to-local, align 4
  %v2_1407c = icmp eq i32 %v4_14078, 0
  br i1 %v2_1407c, label %dec_label_pc_140a0, label %dec_label_pc_14084

dec_label_pc_14084:                               ; preds = %dec_label_pc_14064
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_14088 = load i32, i32* %r4.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_14098 = icmp eq i32 %v0_14088, -38
  br i1 %v7_14098, label %dec_label_pc_14118, label %dec_label_pc_140a0

dec_label_pc_140a0:                               ; preds = %dec_label_pc_14084, %dec_label_pc_14064, %dec_label_pc_14118
  %v0_140a0 = load i32, i32* %fp.global-to-local, align 4
  %v1_140a0 = add i32 %v0_140a0, 4
  %v2_140a0 = inttoptr i32 %v1_140a0 to i32*
  %v3_140a0 = load i32, i32* %v2_140a0, align 4
  store i32 %v3_140a0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_140a8

dec_label_pc_140a8:                               ; preds = %dec_label_pc_14050, %dec_label_pc_140a0
  %v0_140a8 = phi i32 [ %v0_14048, %dec_label_pc_14050 ], [ %v3_140a0, %dec_label_pc_140a0 ]
  store i32 %v0_140a8, i32* @sl, align 4
  %v1_140ac = urem i32 %v0_140a8, 2
  %v2_140ac = icmp eq i32 %v1_140ac, 0
  br i1 %v2_140ac, label %dec_label_pc_13fd4, label %dec_label_pc_140b4

dec_label_pc_140b4:                               ; preds = %dec_label_pc_140a8, %dec_label_pc_13fb8
  br label %dec_label_pc_140b8

dec_label_pc_140b8:                               ; preds = %dec_label_pc_141b8, %dec_label_pc_141b0, %dec_label_pc_140b4
  %v1_140c0 = phi i32 [ 1, %dec_label_pc_141b8 ], [ 1, %dec_label_pc_141b0 ], [ 0, %dec_label_pc_140b4 ]
  %v2_140bc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_140bc, i32* @r4, align 4
  store i32 %v6_13fb8, i32* @r5, align 4
  store i32 %v9_13fb8, i32* @r6, align 4
  store i32 %v12_13fb8, i32* @r7, align 4
  store i32 %v15_13fb8, i32* @r8, align 4
  store i32 %v21_13fb8, i32* @sl, align 4
  ret i32 %v1_140c0

dec_label_pc_140cc:                               ; preds = %dec_label_pc_14108
  %v0_140cc = load i32, i32* @r5, align 4
  %v1_140cc = add i32 %v0_140cc, 12
  store i32 1, i32* @r2, align 4
  %v1_140d4 = load i32, i32* %sb.global-to-local, align 4
  %v2_140d4 = add i32 %v1_140cc, %v1_140d4
  store i32 %v2_140d4, i32* %r1.global-to-local, align 4
  %v0_140d8 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v2_140e0 = inttoptr i32 %v0_140d8 to i32*
  %v3_140e0 = call i32 @function_162e0(i32* %v2_140e0, i32 %v2_140d4)
  %v0_140e4.pre = load i32, i32* @r5, align 4
  %v1_140e8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_140e4

dec_label_pc_140e4:                               ; preds = %dec_label_pc_14000, %dec_label_pc_140cc
  %v1_140e8 = phi i32 [ %v1_140e8.pre, %dec_label_pc_140cc ], [ ptrtoint (i32* @global_var_23108.564 to i32), %dec_label_pc_14000 ]
  %v0_140e4 = phi i32 [ %v0_140e4.pre, %dec_label_pc_140cc ], [ %v3_14008, %dec_label_pc_14000 ]
  %v1_140e4 = add i32 %v0_140e4, 8
  store i32 %v1_140e4, i32* %r3.global-to-local, align 4
  %v2_140e8 = add i32 %v1_140e4, %v1_140e8
  store i32 %v2_140e8, i32* @r7, align 4
  br label %dec_label_pc_140ec

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140ec.dec_label_pc_140ec_crit_edge, %dec_label_pc_140e4
  %v0_140ec = phi i32 [ %v0_140ec.pre, %dec_label_pc_140ec.dec_label_pc_140ec_crit_edge ], [ %v2_140e8, %dec_label_pc_140e4 ]
  %v1_140ec = inttoptr i32 %v0_140ec to i32*
  %v2_140ec = load i32, i32* %v1_140ec, align 4
  store i32 %v2_140ec, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v0_140ec, i32* %r2.global-to-local, align 4
  %v4_140fc = call i32 @function_167b4(i32 %v2_140ec, i32 1, i32* %v1_140ec)
  %v2_14100 = icmp eq i32 %v4_140fc, 0
  store i1 %v2_14100, i1* @cpsr_z, align 1
  br i1 %v2_14100, label %dec_label_pc_14108, label %dec_label_pc_140ec.dec_label_pc_140ec_crit_edge

dec_label_pc_140ec.dec_label_pc_140ec_crit_edge:  ; preds = %dec_label_pc_140ec
  %v0_140ec.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_140ec

dec_label_pc_14108:                               ; preds = %dec_label_pc_140ec
  %v0_140c4 = load i32, i32* @r4, align 4
  %v2_140c4 = icmp eq i32 %v0_140c4, 0
  br i1 %v2_140c4, label %dec_label_pc_1410c, label %dec_label_pc_140cc

dec_label_pc_1410c:                               ; preds = %dec_label_pc_14108
  %v0_1410c = load i32, i32* %fp.global-to-local, align 4
  %v1_1410c = add i32 %v0_1410c, 4
  %v2_1410c = inttoptr i32 %v1_1410c to i32*
  %v3_1410c = load i32, i32* %v2_1410c, align 4
  store i32 %v3_1410c, i32* @r0, align 4
  store i32 %v3_1410c, i32* %r7.global-to-local, align 4
  %v0_14024.pre = load i32, i32* @r8, align 4
  %v0_14028.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14024

dec_label_pc_14118:                               ; preds = %dec_label_pc_14084
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_140a0

dec_label_pc_14128:                               ; preds = %.thread4
  %v0_14128 = load i32, i32* %fp.global-to-local, align 4
  %v1_14128 = add i32 %v0_14128, 12
  %v2_14128 = inttoptr i32 %v1_14128 to i32*
  %v3_14128 = load i32, i32* %v2_14128, align 4
  store i32 %v3_14128, i32* @r0, align 4
  %v1_1412c = add i32 %v0_14128, 8
  %v2_1412c = inttoptr i32 %v1_1412c to i32*
  %v3_1412c = load i32, i32* %v2_1412c, align 4
  store i32 %v3_1412c, i32* %r1.global-to-local, align 4
  %v9_14130 = icmp eq i32 %v3_14128, %v3_1412c
  br i1 %v9_14130, label %dec_label_pc_141cc, label %dec_label_pc_14128.dec_label_pc_14138_crit_edge

dec_label_pc_14128.dec_label_pc_14138_crit_edge:  ; preds = %dec_label_pc_14128
  %v0_14138.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14138

dec_label_pc_14138:                               ; preds = %dec_label_pc_14128.dec_label_pc_14138_crit_edge, %dec_label_pc_1422c
  %v2_14148 = phi i32 [ %v0_14128, %dec_label_pc_14128.dec_label_pc_14138_crit_edge ], [ %v0_1422c, %dec_label_pc_1422c ]
  %v0_14138 = phi i32 [ %v0_14138.pre, %dec_label_pc_14128.dec_label_pc_14138_crit_edge ], [ %v3_1422c, %dec_label_pc_1422c ]
  %v1_14138 = or i32 %v0_14138, 1
  store i32 %v1_14138, i32* %r7.global-to-local, align 4
  %v1_1413c = and i32 %v0_14138, -2
  store i32 %v1_1413c, i32* %r2.global-to-local, align 4
  %v2_14140 = add i32 %v1_1413c, %v2_14148
  %v3_14140 = inttoptr i32 %v2_14140 to i32*
  %v4_14140 = load i32, i32* %v3_14140, align 4
  %v1_14144 = or i32 %v4_14140, 1
  store i32 %v1_14144, i32* %r3.global-to-local, align 4
  store i32 %v1_14144, i32* %v3_14140, align 4
  %v0_1414c = load i32, i32* %r7.global-to-local, align 4
  %v1_1414c = load i32, i32* %fp.global-to-local, align 4
  %v2_1414c = add i32 %v1_1414c, 4
  %v3_1414c = inttoptr i32 %v2_1414c to i32*
  store i32 %v0_1414c, i32* %v3_1414c, align 4
  %v0_14150 = load i32, i32* @r5, align 4
  %v1_14150 = add i32 %v0_14150, 8
  store i32 %v1_14150, i32* %r4.global-to-local, align 4
  %v0_14154 = load i32, i32* %r1.global-to-local, align 4
  %v1_14154 = load i32, i32* @r0, align 4
  %v2_14154 = add i32 %v1_14154, 8
  %v3_14154 = inttoptr i32 %v2_14154 to i32*
  store i32 %v0_14154, i32* %v3_14154, align 4
  %v0_14158 = load i32, i32* %r4.global-to-local, align 4
  %v1_14158 = load i32, i32* %sb.global-to-local, align 4
  %v2_14158 = add i32 %v1_14158, %v0_14158
  %v3_14158 = inttoptr i32 %v2_14158 to i32*
  %v4_14158 = load i32, i32* %v3_14158, align 4
  store i32 %v4_14158, i32* %r3.global-to-local, align 4
  %v0_1415c = load i32, i32* %fp.global-to-local, align 4
  %v1_1415c = add i32 %v0_1415c, 8
  %v2_1415c = inttoptr i32 %v1_1415c to i32*
  %v3_1415c = load i32, i32* %v2_1415c, align 4
  store i32 %v3_1415c, i32* %r2.global-to-local, align 4
  %v2_14160 = icmp eq i32 %v4_14158, 0
  store i1 %v2_14160, i1* @cpsr_z, align 1
  %v0_14164 = load i32, i32* @r0, align 4
  %v2_14164 = add i32 %v3_1415c, 12
  %v3_14164 = inttoptr i32 %v2_14164 to i32*
  store i32 %v0_14164, i32* %v3_14164, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  %v0_1416c = load i32, i32* %r4.global-to-local, align 4
  %v1_1416c = load i32, i32* %sb.global-to-local, align 4
  %v2_1416c = add i32 %v1_1416c, %v0_1416c
  store i32 %v2_1416c, i32* %r6.global-to-local, align 4
  br i1 %v2_14160, label %dec_label_pc_141b0, label %dec_label_pc_14174

dec_label_pc_14174:                               ; preds = %dec_label_pc_14138
  %v0_14174 = call i32 @function_16760()
  store i32 %v0_14174, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1417c = load i32, i32* %r4.global-to-local, align 4
  %v2_1417c = load i32, i32* %r1.global-to-local, align 4
  %v3_1417c = add i32 %v2_1417c, %v1_1417c
  %v4_1417c = inttoptr i32 %v3_1417c to i32*
  store i32 0, i32* %v4_1417c, align 4
  %v0_14180 = call i32 @function_16760()
  %v0_14184 = load i32, i32* @r5, align 4
  %v1_14184 = add i32 %v0_14184, 12
  store i32 %v1_14184, i32* %r3.global-to-local, align 4
  %v1_14188 = load i32, i32* %r1.global-to-local, align 4
  %v2_14188 = add i32 %v1_14188, %v1_14184
  %v3_14188 = inttoptr i32 %v2_14188 to i32*
  %v4_14188 = load i32, i32* %v3_14188, align 4
  store i32 %v4_14188, i32* %r2.global-to-local, align 4
  %v2_1418c = icmp eq i32 %v4_14188, 0
  br i1 %v2_1418c, label %dec_label_pc_141b0, label %dec_label_pc_14194

dec_label_pc_14194:                               ; preds = %dec_label_pc_14174
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_14198 = load i32, i32* %r6.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_141a8 = icmp eq i32 %v0_14198, -38
  br i1 %v7_141a8, label %dec_label_pc_141b8, label %dec_label_pc_141b0

dec_label_pc_141b0:                               ; preds = %dec_label_pc_14194, %dec_label_pc_14174, %dec_label_pc_14138
  br label %dec_label_pc_140b8

dec_label_pc_141b8:                               ; preds = %dec_label_pc_14194
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_140b8

dec_label_pc_141cc:                               ; preds = %dec_label_pc_14128
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_141d0 = load i32, i32* @r8, align 4
  %v1_141d0 = sub i32 32, %v0_141d0
  store i32 %v1_141d0, i32* %r1.global-to-local, align 4
  %v7_141d8 = lshr i32 1, %v1_141d0
  store i32 %v7_141d8, i32* %r4.global-to-local, align 4
  %v1_141dc = add i32 %v0_141d0, -32
  %v6_141dc = icmp slt i32 %v1_141dc, 0
  %v7_141dc = icmp eq i32 %v0_141d0, 32
  store i1 %v7_141dc, i1* @cpsr_z, align 1
  %v6_141e0 = shl i32 1, %v0_141d0
  store i32 %v6_141e0, i32* %r3.global-to-local, align 4
  br i1 %v6_141dc, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_141cc
  %v7_141e4 = shl i32 1, %v1_141dc
  store i32 %v7_141e4, i32* %r4.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_141cc, %bb32
  %v0_141ec = phi i32 [ %v7_141d8, %dec_label_pc_141cc ], [ %v7_141e4, %bb32 ]
  %v1_141e8 = sub i32 -1, %v6_141e0
  store i32 %v1_141e8, i32* %r7.global-to-local, align 4
  %v1_141ec = sub i32 -1, %v0_141ec
  store i32 %v1_141ec, i32* @r8, align 4
  store i32 %v1_141e8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_141f4

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141f4.dec_label_pc_141f4_crit_edge, %bb33
  %v1_141fc = phi i32 [ %v1_141fc.pre, %dec_label_pc_141f4.dec_label_pc_141f4_crit_edge ], [ %v1_141e8, %bb33 ]
  %v2_141f4 = load i32, i32* @global_var_23108.564, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_141fc = and i32 %v2_141f4, %v1_141fc
  store i32 %v2_141fc, i32* %r1.global-to-local, align 4
  %v4_14200 = call i32 @function_167b4(i32 %v2_141f4, i32 %v2_141fc, i32* nonnull @global_var_23108.564)
  %v2_14204 = icmp eq i32 %v4_14200, 0
  store i1 %v2_14204, i1* @cpsr_z, align 1
  br i1 %v2_14204, label %dec_label_pc_1420c, label %dec_label_pc_141f4.dec_label_pc_141f4_crit_edge

dec_label_pc_141f4.dec_label_pc_141f4_crit_edge:  ; preds = %dec_label_pc_141f4
  %v1_141fc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_141f4

dec_label_pc_1420c:                               ; preds = %dec_label_pc_141f4
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r6.global-to-local, align 4
  %v0_14210 = load i32, i32* @r8, align 4
  store i32 %v0_14210, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14214

dec_label_pc_14214:                               ; preds = %dec_label_pc_14214.dec_label_pc_14214_crit_edge, %dec_label_pc_1420c
  %v1_1421c = phi i32 [ %v1_1421c.pre, %dec_label_pc_14214.dec_label_pc_14214_crit_edge ], [ %v0_14210, %dec_label_pc_1420c ]
  %v2_14214 = load i32, i32* @global_var_2310c.566, align 4
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r2.global-to-local, align 4
  %v2_1421c = and i32 %v2_14214, %v1_1421c
  store i32 %v2_1421c, i32* %r1.global-to-local, align 4
  %v4_14220 = call i32 @function_167b4(i32 %v2_14214, i32 %v2_1421c, i32* nonnull @global_var_2310c.566)
  %v2_14224 = icmp eq i32 %v4_14220, 0
  store i1 %v2_14224, i1* @cpsr_z, align 1
  br i1 %v2_14224, label %dec_label_pc_1422c, label %dec_label_pc_14214.dec_label_pc_14214_crit_edge

dec_label_pc_14214.dec_label_pc_14214_crit_edge:  ; preds = %dec_label_pc_14214
  %v1_1421c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14214

dec_label_pc_1422c:                               ; preds = %dec_label_pc_14214
  %v0_1422c = load i32, i32* %fp.global-to-local, align 4
  %v1_1422c = add i32 %v0_1422c, 4
  %v2_1422c = inttoptr i32 %v1_1422c to i32*
  %v3_1422c = load i32, i32* %v2_1422c, align 4
  store i32 %v3_1422c, i32* %r7.global-to-local, align 4
  %v1_14230 = add i32 %v0_1422c, 12
  %v2_14230 = inttoptr i32 %v1_14230 to i32*
  %v3_14230 = load i32, i32* %v2_14230, align 4
  store i32 %v3_14230, i32* @r0, align 4
  %v1_14234 = add i32 %v0_1422c, 8
  %v2_14234 = inttoptr i32 %v1_14234 to i32*
  %v3_14234 = load i32, i32* %v2_14234, align 4
  store i32 %v3_14234, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14138

; uselistorder directives
  uselistorder i32 %v3_1422c, { 1, 0 }
  uselistorder i32 %v0_1422c, { 1, 2, 3, 0 }
  uselistorder i32 %v2_14214, { 1, 0 }
  uselistorder i32 %v2_141f4, { 1, 0 }
  uselistorder i32 %v1_141e8, { 2, 1, 0 }
  uselistorder i32 %v0_14138, { 1, 0 }
  uselistorder i32 %v3_1410c, { 1, 2, 0 }
  uselistorder i32 %v0_140ec, { 1, 0 }
  uselistorder i32 %v0_140a8, { 0, 2, 1 }
  uselistorder i32 %v0_14048, { 1, 0 }
  uselistorder i32 %v4_14034, { 1, 0 }
  uselistorder i32 %v4_14028, { 1, 0 }
  uselistorder i32 %v3_14008, { 2, 1, 0 }
  uselistorder i32 %v0_14008, { 1, 0 }
  uselistorder i32 %v1_13fd8, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v3_13fd4, { 1, 0 }
  uselistorder i32 %v3_13fbc, { 1, 2, 0, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_14138, { 1, 0 }
  uselistorder label %dec_label_pc_140e4, { 1, 0 }
  uselistorder label %dec_label_pc_140a8, { 1, 0 }
  uselistorder label %dec_label_pc_140a0, { 2, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_14024, { 1, 0 }
  uselistorder label %dec_label_pc_14000, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13fd4, { 1, 0 }
}

define i32 @function_14248(i32 %arg1) local_unnamed_addr {
dec_label_pc_14248:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_14248 = load i32, i32* @r4, align 4
  %v6_14248 = load i32, i32* @r5, align 4
  %v9_14248 = load i32, i32* @r6, align 4
  %v12_14248 = load i32, i32* @r7, align 4
  %v15_14248 = load i32, i32* @r8, align 4
  %v18_14248 = load i32, i32* @sb, align 4
  %v21_14248 = load i32, i32* @sl, align 4
  %v24_14248 = load i32, i32* @fp, align 4
  %v0_1424c = load i32, i32* %r0.global-to-local, align 4
  %v2_1424c = icmp eq i32 %v0_1424c, 0
  br i1 %v2_1424c, label %dec_label_pc_1460c, label %dec_label_pc_14258

dec_label_pc_14258:                               ; preds = %dec_label_pc_14248
  %v1_14258 = add i32 %v0_1424c, -8
  store i32 %v1_14258, i32* @r8, align 4
  %v1_1425c = add i32 %v0_1424c, -4
  %v2_1425c = inttoptr i32 %v1_1425c to i32*
  %v3_1425c = load i32, i32* %v2_1425c, align 4
  store i32 %v3_1425c, i32* %r1.global-to-local, align 4
  %v1_14260 = urem i32 %v3_1425c, 2
  store i32 %v1_14260, i32* @r3, align 4
  %v2_14260 = icmp eq i32 %v1_14260, 0
  br i1 %v2_14260, label %dec_label_pc_146a8, label %dec_label_pc_14268

dec_label_pc_14268:                               ; preds = %dec_label_pc_14258
  %v1_14268 = and i32 %v3_1425c, -2
  store i32 %v1_14268, i32* %r0.global-to-local, align 4
  %v2_1426c = add i32 %v1_14268, %v1_14258
  %v3_1426c = inttoptr i32 %v2_1426c to i32*
  %v4_1426c = load i32, i32* %v3_1426c, align 4
  store i32 %v4_1426c, i32* %r3.global-to-local, align 4
  %v9_14270 = icmp eq i32 %v3_1425c, %v4_1426c
  br i1 %v9_14270, label %.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_14268
  store i32 0, i32* @r3, align 4
  call void @llvm.trap()
  unreachable

.preheader:                                       ; preds = %dec_label_pc_14268
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_1426c, i32* @sb, align 4
  store i32 %v1_14268, i32* @fp, align 4
  br label %bb62

.loopexit:                                        ; preds = %dec_label_pc_14430
  %v0_1429c.pre = load i32, i32* @r8, align 4
  br label %bb62

bb62:                                             ; preds = %.preheader, %.loopexit
  %v0_1429c = phi i32 [ %v0_1429c.pre, %.loopexit ], [ %v1_14258, %.preheader ]
  %v0_14298 = phi i32 [ %v0_14298.pre, %.loopexit ], [ %v2_1426c, %.preheader ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.5, %.loopexit ], [ 0, %.preheader ]
  %v1_14298 = add i32 %v0_14298, 4
  %v2_14298 = inttoptr i32 %v1_14298 to i32*
  %v3_14298 = load i32, i32* %v2_14298, align 4
  store i32 %v3_14298, i32* %r3.global-to-local, align 4
  %v1_1429c = inttoptr i32 %v0_1429c to i32*
  %v2_1429c = load i32, i32* %v1_1429c, align 4
  store i32 %v2_1429c, i32* %r2.global-to-local, align 4
  %v2_142a0 = and i32 %v2_1429c, %v3_14298
  store i32 %v2_142a0, i32* %r3.global-to-local, align 4
  %v1_142a4 = urem i32 %v2_142a0, 2
  %v2_142a4 = icmp eq i32 %v1_142a4, 0
  br i1 %v2_142a4, label %dec_label_pc_143e4.preheader, label %.dec_label_pc_142ac_crit_edge

.dec_label_pc_142ac_crit_edge:                    ; preds = %bb62
  %v0_142ac.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_142ac

dec_label_pc_142ac:                               ; preds = %dec_label_pc_1446c, %.dec_label_pc_142ac_crit_edge
  %v1_142bc = phi i32 [ %v0_14298, %.dec_label_pc_142ac_crit_edge ], [ %v2_1446c, %dec_label_pc_1446c ]
  %v0_142b8 = phi i32 [ %v0_142ac.pre, %.dec_label_pc_142ac_crit_edge ], [ %v2_14470, %dec_label_pc_1446c ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %.dec_label_pc_142ac_crit_edge ], [ %stack_var_-44.6, %dec_label_pc_1446c ]
  %v3_142ac = udiv i32 %v0_142b8, 16
  %v1_142b0 = add nsw i32 %v3_142ac, -1
  store i32 %v1_142b0, i32* @r0, align 4
  %v1_142b8 = or i32 %v0_142b8, 1
  store i32 %v1_142b8, i32* %r3.global-to-local, align 4
  %v2_142bc = inttoptr i32 %v1_142bc to i32*
  store i32 %v1_142b8, i32* %v2_142bc, align 4
  %v0_142c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_142c0 = load i32, i32* @r8, align 4
  %v2_142c0 = add i32 %v1_142c0, 4
  %v3_142c0 = inttoptr i32 %v2_142c0 to i32*
  store i32 %v0_142c0, i32* %v3_142c0, align 4
  %tmp = icmp ult i32 %v1_142b0, 33
  %v4_142c4 = load i32, i32* @r0, align 4
  br i1 %tmp, label %.thread, label %dec_label_pc_142cc

.thread:                                          ; preds = %dec_label_pc_142ac
  store i32 %v4_142c4, i32* @sl, align 4
  br label %dec_label_pc_142e4

dec_label_pc_142cc:                               ; preds = %dec_label_pc_142ac
  %tmp80 = icmp ugt i32 %v4_142c4, 7168
  br i1 %tmp80, label %.thread45, label %dec_label_pc_142d8

.thread45:                                        ; preds = %dec_label_pc_142cc
  store i32 63, i32* @sl, align 4
  br label %dec_label_pc_142e4

dec_label_pc_142d8:                               ; preds = %dec_label_pc_142cc
  %v0_142d8 = call i32 @function_18038()
  %v3_142dc = udiv i32 %v0_142d8, 2097152
  store i32 %v3_142dc, i32* %r0.global-to-local, align 4
  %v1_142e0 = add nsw i32 %v3_142dc, -496
  store i32 %v1_142e0, i32* @sl, align 4
  br label %dec_label_pc_142e4

dec_label_pc_142e4:                               ; preds = %.thread45, %.thread, %dec_label_pc_142d8
  %v0_142ec = phi i32 [ 63, %.thread45 ], [ %v4_142c4, %.thread ], [ %v1_142e0, %dec_label_pc_142d8 ]
  %v3_142e8 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_142e8, i32* %r2.global-to-local, align 4
  %v3_142ec = mul i32 %v0_142ec, 16
  store i32 %v3_142ec, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r0.global-to-local, align 4
  %v1_142f4 = or i32 %v3_142ec, 8
  store i32 %v1_142f4, i32* %r3.global-to-local, align 4
  %v2_142f8 = icmp eq i32 %v3_142e8, 0
  store i1 %v2_142f8, i1* @cpsr_z, align 1
  %v2_142fc = add i32 %v1_142f4, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v2_142fc, i32* @r5, align 4
  br i1 %v2_142f8, label %dec_label_pc_14304, label %dec_label_pc_1463c

dec_label_pc_14304.loopexit:                      ; preds = %dec_label_pc_14664
  %v0_14308.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_14304

dec_label_pc_14304:                               ; preds = %dec_label_pc_14304.loopexit, %dec_label_pc_142e4
  %v0_14308 = phi i32 [ %v0_14308.pre, %dec_label_pc_14304.loopexit ], [ %v0_142ec, %dec_label_pc_142e4 ]
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v1_14308 = add i32 %v0_14308, 1
  store i32 %v1_14308, i32* %r1.global-to-local, align 4
  %v4_1430c = mul i32 %v1_14308, 16
  %v5_1430c = add i32 %v4_1430c, ptrtoint (i32* @global_var_23108.564 to i32)
  %v6_1430c = inttoptr i32 %v5_1430c to i32*
  %v7_1430c = load i32, i32* %v6_1430c, align 4
  store i32 %v7_1430c, i32* %r3.global-to-local, align 4
  %v2_14310 = icmp eq i32 %v7_1430c, 0
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  br i1 %v2_14310, label %dec_label_pc_146c8, label %dec_label_pc_14320

dec_label_pc_14320:                               ; preds = %dec_label_pc_14304, %dec_label_pc_146c8
  store i32 ptrtoint (i8** @global_var_2382c.531 to i32), i32* %r1.global-to-local, align 4
  %v3_14324 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_14324, i32* %r3.global-to-local, align 4
  %v2_14328 = icmp eq i32 %v3_14324, 0
  store i1 %v2_14328, i1* @cpsr_z, align 1
  br i1 %v2_14328, label %dec_label_pc_14330, label %dec_label_pc_14668

dec_label_pc_14330:                               ; preds = %dec_label_pc_14698, %dec_label_pc_14320
  %v0_14330 = load i32, i32* @r8, align 4
  %v1_14330 = inttoptr i32 %v0_14330 to i32*
  %v2_14330 = load i32, i32* %v1_14330, align 4
  store i32 %v2_14330, i32* %r2.global-to-local, align 4
  %v0_14334 = load i32, i32* @sb, align 4
  %v1_14334 = add i32 %v0_14334, 4
  %v2_14334 = inttoptr i32 %v1_14334 to i32*
  %v3_14334 = load i32, i32* %v2_14334, align 4
  %v2_14338 = and i32 %v3_14334, %v2_14330
  store i32 %v2_14338, i32* %r3.global-to-local, align 4
  %v1_1433c = urem i32 %v2_14338, 2
  store i32 %v1_1433c, i32* %r2.global-to-local, align 4
  %v2_1433c = icmp eq i32 %v1_1433c, 0
  br i1 %v2_1433c, label %dec_label_pc_14344, label %dec_label_pc_1448c

dec_label_pc_14344:                               ; preds = %dec_label_pc_14330
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* @r0, align 4
  %v3_14348 = load i32, i32* @global_var_23510.572, align 4
  store i32 %v3_14348, i32* %r3.global-to-local, align 4
  %v2_1434c = icmp eq i32 %v3_14348, 0
  store i1 %v2_1434c, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r4.global-to-local, align 4
  br i1 %v2_1434c, label %dec_label_pc_14390, label %dec_label_pc_14358

dec_label_pc_14358:                               ; preds = %dec_label_pc_14344
  %v0_14358 = call i32 @function_16760()
  store i32 %v0_14358, i32* @r0, align 4
  %v0_1435c = load i32, i32* %r2.global-to-local, align 4
  %v2_1435c = add i32 %v0_14358, 1032
  %v3_1435c = inttoptr i32 %v2_1435c to i32*
  store i32 %v0_1435c, i32* %v3_1435c, align 4
  %v0_14360 = call i32 @function_16760()
  store i32 %v0_14360, i32* @r0, align 4
  %v1_14364 = add i32 %v0_14360, 1036
  %v2_14364 = inttoptr i32 %v1_14364 to i32*
  %v3_14364 = load i32, i32* %v2_14364, align 4
  store i32 %v3_14364, i32* %r3.global-to-local, align 4
  %v2_14368 = icmp eq i32 %v3_14364, 0
  br i1 %v2_14368, label %dec_label_pc_14390, label %dec_label_pc_14370

dec_label_pc_14370:                               ; preds = %dec_label_pc_14358
  %v1_14374 = add i32 %v0_14360, 1032
  store i32 %v1_14374, i32* @r0, align 4
  store i32 240, i32* @r7, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_14388 = icmp eq i32 %v0_14360, -1070
  br i1 %v7_14388, label %dec_label_pc_146e4, label %dec_label_pc_14390

dec_label_pc_14390:                               ; preds = %dec_label_pc_14370, %dec_label_pc_14358, %dec_label_pc_14344, %dec_label_pc_146e4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  %v0_14394 = load i32, i32* @r6, align 4
  %v1_14394 = add i32 %v0_14394, 8
  store i32 %v1_14394, i32* %r2.global-to-local, align 4
  %v2_14398 = add i32 %v0_14394, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 8)
  %v3_14398 = inttoptr i32 %v2_14398 to i32*
  %v4_14398 = load i32, i32* %v3_14398, align 4
  store i32 %v4_14398, i32* %r3.global-to-local, align 4
  %v2_1439c = icmp eq i32 %v4_14398, 0
  store i1 %v2_1439c, i1* @cpsr_z, align 1
  store i32 %v2_14398, i32* @r4, align 4
  br i1 %v2_1439c, label %dec_label_pc_143e4.preheader, label %dec_label_pc_143a8

dec_label_pc_143a8:                               ; preds = %dec_label_pc_14390
  %v0_143a8 = call i32 @function_16760()
  store i32 %v0_143a8, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_143b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_143b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_143b0 = add i32 %v2_143b0, %v1_143b0
  %v4_143b0 = inttoptr i32 %v3_143b0 to i32*
  store i32 0, i32* %v4_143b0, align 4
  %v0_143b4 = call i32 @function_16760()
  store i32 %v0_143b4, i32* %r0.global-to-local, align 4
  %v0_143b8 = load i32, i32* @r6, align 4
  %v1_143b8 = add i32 %v0_143b8, 12
  store i32 %v1_143b8, i32* %r3.global-to-local, align 4
  %v1_143bc = load i32, i32* %r1.global-to-local, align 4
  %v2_143bc = add i32 %v1_143bc, %v1_143b8
  %v3_143bc = inttoptr i32 %v2_143bc to i32*
  %v4_143bc = load i32, i32* %v3_143bc, align 4
  store i32 %v4_143bc, i32* %r2.global-to-local, align 4
  %v2_143c0 = icmp eq i32 %v4_143bc, 0
  br i1 %v2_143c0, label %dec_label_pc_143e4.preheader, label %dec_label_pc_143c8

dec_label_pc_143c8:                               ; preds = %dec_label_pc_143a8
  store i32 240, i32* @r7, align 4
  %v0_143cc = load i32, i32* @r4, align 4
  store i32 %v0_143cc, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_143dc = icmp eq i32 %v0_143cc, -38
  br i1 %v7_143dc, label %dec_label_pc_146f8, label %dec_label_pc_143e4.preheader

dec_label_pc_143e4.preheader:                     ; preds = %dec_label_pc_146f8, %bb62, %dec_label_pc_14390, %dec_label_pc_143a8, %dec_label_pc_143c8
  %stack_var_-44.4.ph = phi i32 [ %stack_var_-44.3, %dec_label_pc_143c8 ], [ %stack_var_-44.3, %dec_label_pc_146f8 ], [ %stack_var_-44.3, %dec_label_pc_143a8 ], [ %stack_var_-44.3, %dec_label_pc_14390 ], [ %stack_var_-44.2, %bb62 ]
  %v0_143e4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_143e4

dec_label_pc_143e4:                               ; preds = %dec_label_pc_143e4.preheader, %dec_label_pc_1446c
  %v0_143e4 = phi i32 [ %v0_14478, %dec_label_pc_1446c ], [ %v0_143e4.pre, %dec_label_pc_143e4.preheader ]
  %stack_var_-44.4 = phi i32 [ %stack_var_-44.6, %dec_label_pc_1446c ], [ %stack_var_-44.4.ph, %dec_label_pc_143e4.preheader ]
  store i32 %v0_143e4, i32* %r0.global-to-local, align 4
  %v1_143e8 = inttoptr i32 %v0_143e4 to i32*
  %v2_143e8 = call i32 @function_13d28(i32* %v1_143e8)
  store i32 %v2_143e8, i32* %r0.global-to-local, align 4
  %v2_143ec = icmp eq i32 %v2_143e8, 0
  br i1 %v2_143ec, label %dec_label_pc_14430, label %dec_label_pc_143f4

dec_label_pc_143f4:                               ; preds = %dec_label_pc_143e4
  %v0_143f4 = load i32, i32* @r8, align 4
  %v1_143f4 = inttoptr i32 %v0_143f4 to i32*
  %v2_143f4 = load i32, i32* %v1_143f4, align 4
  %v1_143f8 = and i32 %v2_143f4, -2
  store i32 %v1_143f8, i32* %r3.global-to-local, align 4
  %v2_143fc = sub i32 %v0_143f4, %v1_143f8
  store i32 %v2_143fc, i32* @r8, align 4
  %v1_14400 = add i32 %v2_143fc, 4
  %v2_14400 = inttoptr i32 %v1_14400 to i32*
  %v3_14400 = load i32, i32* %v2_14400, align 4
  store i32 %v1_14268, i32* %r0.global-to-local, align 4
  %v1_14408 = and i32 %v3_14400, -2
  store i32 %v1_14408, i32* %r2.global-to-local, align 4
  %v2_1440c = add i32 %v1_14408, %v1_14268
  store i32 %v2_1440c, i32* %r3.global-to-local, align 4
  %v0_14414 = load i32, i32* @fp, align 4
  %v2_14414 = add i32 %v0_14414, %v1_14408
  store i32 %v2_14414, i32* @fp, align 4
  %tmp81 = icmp ult i32 %v2_1440c, 163841
  br i1 %tmp81, label %dec_label_pc_14430, label %dec_label_pc_1441c

dec_label_pc_1441c:                               ; preds = %dec_label_pc_143f4
  %v2_1441c = xor i32 %v2_1440c, %v1_14408
  store i32 %v2_1441c, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-44.4, i32* %r1.global-to-local, align 4
  %v3_14424 = icmp ult i32 %v1_14408, %v2_1441c
  br i1 %v3_14424, label %bb63, label %dec_label_pc_14430

bb63:                                             ; preds = %dec_label_pc_1441c
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14430

dec_label_pc_14430:                               ; preds = %dec_label_pc_1441c, %bb63, %dec_label_pc_143f4, %dec_label_pc_143e4
  %stack_var_-44.5 = phi i32 [ %stack_var_-44.4, %dec_label_pc_143e4 ], [ %stack_var_-44.4, %dec_label_pc_143f4 ], [ %stack_var_-44.4, %dec_label_pc_1441c ], [ 1, %bb63 ]
  %v0_14430 = load i32, i32* @sb, align 4
  store i32 %v0_14430, i32* %r0.global-to-local, align 4
  %v1_14434 = call i32 @function_13fb8(i32 %v0_14430)
  store i32 %v1_14434, i32* %r0.global-to-local, align 4
  %v2_14438 = icmp eq i32 %v1_14434, 0
  %v0_14298.pre = load i32, i32* @sb, align 4
  br i1 %v2_14438, label %.loopexit, label %dec_label_pc_14440

dec_label_pc_14440:                               ; preds = %dec_label_pc_14430
  %v1_14440 = add i32 %v0_14298.pre, 4
  %v2_14440 = inttoptr i32 %v1_14440 to i32*
  %v3_14440 = load i32, i32* %v2_14440, align 4
  store i32 %v1_14268, i32* %r0.global-to-local, align 4
  %v1_14448 = and i32 %v3_14440, -2
  store i32 %v1_14448, i32* %r2.global-to-local, align 4
  %v2_1444c = add i32 %v1_14448, %v1_14268
  store i32 %v2_1444c, i32* %r3.global-to-local, align 4
  %tmp82 = icmp ult i32 %v2_1444c, 163841
  br i1 %tmp82, label %dec_label_pc_1446c, label %dec_label_pc_14458

dec_label_pc_14458:                               ; preds = %dec_label_pc_14440
  %v2_14458 = xor i32 %v2_1444c, %v1_14448
  store i32 %v2_14458, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-44.5, i32* %r1.global-to-local, align 4
  %v3_14460 = icmp ult i32 %v1_14448, %v2_14458
  br i1 %v3_14460, label %bb64, label %dec_label_pc_1446c

bb64:                                             ; preds = %dec_label_pc_14458
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1446c

dec_label_pc_1446c:                               ; preds = %dec_label_pc_14458, %bb64, %dec_label_pc_14440
  %stack_var_-44.6 = phi i32 [ %stack_var_-44.5, %dec_label_pc_14440 ], [ %stack_var_-44.5, %dec_label_pc_14458 ], [ 1, %bb64 ]
  %v2_1446c = add i32 %v1_14448, %v0_14298.pre
  store i32 %v2_1446c, i32* @sb, align 4
  %v0_14470 = load i32, i32* @fp, align 4
  %v2_14470 = add i32 %v0_14470, %v1_14448
  store i32 %v2_14470, i32* @fp, align 4
  %v1_14474 = add i32 %v2_1446c, 4
  %v2_14474 = inttoptr i32 %v1_14474 to i32*
  %v3_14474 = load i32, i32* %v2_14474, align 4
  store i32 %v3_14474, i32* %r3.global-to-local, align 4
  %v0_14478 = load i32, i32* @r8, align 4
  %v1_14478 = inttoptr i32 %v0_14478 to i32*
  %v2_14478 = load i32, i32* %v1_14478, align 4
  store i32 %v2_14478, i32* %r2.global-to-local, align 4
  %v2_1447c = and i32 %v2_14478, %v3_14474
  store i32 %v2_1447c, i32* %r3.global-to-local, align 4
  %v1_14480 = urem i32 %v2_1447c, 2
  %v2_14480 = icmp eq i32 %v1_14480, 0
  br i1 %v2_14480, label %dec_label_pc_143e4, label %dec_label_pc_142ac

dec_label_pc_1448c:                               ; preds = %dec_label_pc_14330
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_14490 = load i32, i32* @global_var_23108.564, align 4
  %v5_14490 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v5_14490, i32* %r4.global-to-local, align 4
  %v1_14494 = load i32, i32* @sl, align 4
  %v6_14494 = lshr i32 %v2_14490, %v1_14494
  %v1_14498 = sub i32 32, %v1_14494
  %v7_1449c = shl i32 %v5_14490, %v1_14498
  %v8_1449c = or i32 %v7_1449c, %v6_14494
  store i32 %v8_1449c, i32* %r3.global-to-local, align 4
  %v1_144a0 = add i32 %v1_14494, -32
  store i32 %v1_144a0, i32* %r1.global-to-local, align 4
  %v6_144a0 = icmp slt i32 %v1_144a0, 0
  br i1 %v6_144a0, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_1448c
  %v7_144a4 = lshr i32 %v5_14490, %v1_144a0
  store i32 %v7_144a4, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_1448c, %bb65
  %v0_144a8 = phi i32 [ %v8_1449c, %dec_label_pc_1448c ], [ %v7_144a4, %bb65 ]
  %v1_144a8 = urem i32 %v0_144a8, 2
  store i32 %v1_144a8, i32* %r0.global-to-local, align 4
  %v2_144a8 = icmp eq i32 %v1_144a8, 0
  br i1 %v2_144a8, label %dec_label_pc_144b0, label %dec_label_pc_1450c

dec_label_pc_144b0:                               ; preds = %bb66
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_144b4 = icmp eq i32 %v1_144a0, 0
  store i1 %v2_144b4, i1* @cpsr_z, align 1
  %v7_144b8 = lshr i32 1, %v1_14498
  store i32 %v7_144b8, i32* %r4.global-to-local, align 4
  %v6_144bc = shl i32 1, %v1_14494
  store i32 %v6_144bc, i32* %r3.global-to-local, align 4
  br i1 %v6_144a0, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_144b0
  %v9_144c0 = shl i32 1, %v1_144a0
  store i32 %v9_144c0, i32* %r4.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_144b0, %bb67
  %v0_144c8 = phi i32 [ %v7_144b8, %dec_label_pc_144b0 ], [ %v9_144c0, %bb67 ]
  store i32 %v6_144bc, i32* %r5.global-to-local, align 4
  store i32 %v2_14490, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_144dc73 = or i32 %v2_14490, %v6_144bc
  store i32 %v2_144dc73, i32* %r1.global-to-local, align 4
  %v4_144e074 = call i32 @function_167b4(i32 %v2_14490, i32 %v2_144dc73, i32* nonnull @global_var_23108.564)
  store i32 %v4_144e074, i32* %r0.global-to-local, align 4
  %v2_144e476 = icmp eq i32 %v4_144e074, 0
  store i1 %v2_144e476, i1* @cpsr_z, align 1
  br i1 %v2_144e476, label %dec_label_pc_144ec, label %dec_label_pc_144d4.dec_label_pc_144d4_crit_edge

dec_label_pc_144d4.dec_label_pc_144d4_crit_edge:  ; preds = %bb68, %dec_label_pc_144d4.dec_label_pc_144d4_crit_edge
  %v2_144d4.pre = load i32, i32* @global_var_23108.564, align 4
  %v1_144dc.pre = load i32, i32* %r5.global-to-local, align 4
  store i32 %v2_144d4.pre, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_144dc = or i32 %v2_144d4.pre, %v1_144dc.pre
  store i32 %v2_144dc, i32* %r1.global-to-local, align 4
  %v4_144e0 = call i32 @function_167b4(i32 %v2_144d4.pre, i32 %v2_144dc, i32* nonnull @global_var_23108.564)
  store i32 %v4_144e0, i32* %r0.global-to-local, align 4
  %v2_144e4 = icmp eq i32 %v4_144e0, 0
  store i1 %v2_144e4, i1* @cpsr_z, align 1
  br i1 %v2_144e4, label %dec_label_pc_144ec, label %dec_label_pc_144d4.dec_label_pc_144d4_crit_edge

dec_label_pc_144ec:                               ; preds = %dec_label_pc_144d4.dec_label_pc_144d4_crit_edge, %bb68
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r5.global-to-local, align 4
  store i32 %v0_144c8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_144f4

dec_label_pc_144f4:                               ; preds = %dec_label_pc_144f4.dec_label_pc_144f4_crit_edge, %dec_label_pc_144ec
  %v1_144fc = phi i32 [ %v1_144fc.pre, %dec_label_pc_144f4.dec_label_pc_144f4_crit_edge ], [ %v0_144c8, %dec_label_pc_144ec ]
  %v2_144f4 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v2_144f4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r2.global-to-local, align 4
  %v2_144fc = or i32 %v2_144f4, %v1_144fc
  store i32 %v2_144fc, i32* %r1.global-to-local, align 4
  %v4_14500 = call i32 @function_167b4(i32 %v2_144f4, i32 %v2_144fc, i32* nonnull @global_var_2310c.566)
  store i32 %v4_14500, i32* %r0.global-to-local, align 4
  %v2_14504 = icmp eq i32 %v4_14500, 0
  store i1 %v2_14504, i1* @cpsr_z, align 1
  br i1 %v2_14504, label %dec_label_pc_1450c.loopexit, label %dec_label_pc_144f4.dec_label_pc_144f4_crit_edge

dec_label_pc_144f4.dec_label_pc_144f4_crit_edge:  ; preds = %dec_label_pc_144f4
  %v1_144fc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_144f4

dec_label_pc_1450c.loopexit:                      ; preds = %dec_label_pc_144f4
  %v1_14510.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_1450c

dec_label_pc_1450c:                               ; preds = %dec_label_pc_1450c.loopexit, %bb66
  %v1_14510 = phi i32 [ %v1_14510.pre, %dec_label_pc_1450c.loopexit ], [ %v0_14334, %bb66 ]
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* @r0, align 4
  %v0_14510 = load i32, i32* @fp, align 4
  %v2_14510 = inttoptr i32 %v1_14510 to i32*
  store i32 %v0_14510, i32* %v2_14510, align 4
  %v0_14514 = load i32, i32* @fp, align 4
  %v1_14514 = load i32, i32* @r8, align 4
  %v2_14514 = add i32 %v1_14514, 4
  %v3_14514 = inttoptr i32 %v2_14514 to i32*
  store i32 %v0_14514, i32* %v3_14514, align 4
  %v3_14518 = load i32, i32* @global_var_23510.572, align 4
  store i32 %v3_14518, i32* %r3.global-to-local, align 4
  %v2_1451c = icmp eq i32 %v3_14518, 0
  store i1 %v2_1451c, i1* @cpsr_z, align 1
  %v0_14520 = load i32, i32* @r0, align 4
  store i32 %v0_14520, i32* %r4.global-to-local, align 4
  br i1 %v2_1451c, label %dec_label_pc_14574, label %dec_label_pc_14528

dec_label_pc_14528:                               ; preds = %dec_label_pc_1450c
  %v0_14528 = call i32 @function_16760()
  store i32 %v0_14528, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_14530 = add i32 %v0_14528, 1032
  %v3_14530 = inttoptr i32 %v2_14530 to i32*
  store i32 0, i32* %v3_14530, align 4
  %v0_14534 = call i32 @function_16760()
  store i32 %v0_14534, i32* %r0.global-to-local, align 4
  %v1_14538 = add i32 %v0_14534, 1036
  %v2_14538 = inttoptr i32 %v1_14538 to i32*
  %v3_14538 = load i32, i32* %v2_14538, align 4
  store i32 %v3_14538, i32* %r3.global-to-local, align 4
  %v2_1453c = icmp eq i32 %v3_14538, 0
  br i1 %v2_1453c, label %dec_label_pc_14574, label %dec_label_pc_14544

dec_label_pc_14544:                               ; preds = %dec_label_pc_14528
  %v1_14548 = add i32 %v0_14534, 1032
  store i32 %v1_14548, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_14560 = icmp eq i32 %v1_14548, -38
  br i1 %v4_14560, label %dec_label_pc_14564, label %dec_label_pc_14574

dec_label_pc_14564:                               ; preds = %dec_label_pc_14544
  store i32 ptrtoint (i32* @global_var_23510.572 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14574

dec_label_pc_14574:                               ; preds = %dec_label_pc_14544, %dec_label_pc_14564, %dec_label_pc_14528, %dec_label_pc_1450c
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v3_1457c = mul i32 %v1_14308, 16
  %v2_14580 = add i32 %v3_1457c, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v2_14580, i32* %r3.global-to-local, align 4
  %v1_14584 = add i32 %v3_1457c, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v1_14584, i32* %r1.global-to-local, align 4
  %v1_14588 = load i32, i32* @r8, align 4
  %v2_14588 = add i32 %v1_14588, 8
  %v3_14588 = inttoptr i32 %v2_14588 to i32*
  store i32 %v1_14584, i32* %v3_14588, align 4
  %v0_1458c = load i32, i32* %r3.global-to-local, align 4
  %v1_1458c = add i32 %v0_1458c, 4
  %v2_1458c = inttoptr i32 %v1_1458c to i32*
  %v3_1458c = load i32, i32* %v2_1458c, align 4
  store i32 %v3_1458c, i32* %r2.global-to-local, align 4
  %v1_14590 = load i32, i32* @r8, align 4
  %v2_14590 = add i32 %v1_14590, 12
  %v3_14590 = inttoptr i32 %v2_14590 to i32*
  store i32 %v3_1458c, i32* %v3_14590, align 4
  %v0_14594 = load i32, i32* @r8, align 4
  %v1_14594 = load i32, i32* %r1.global-to-local, align 4
  %v2_14594 = add i32 %v1_14594, 12
  %v3_14594 = inttoptr i32 %v2_14594 to i32*
  store i32 %v0_14594, i32* %v3_14594, align 4
  store i32 %stack_var_-44.3, i32* @r0, align 4
  %v0_1459c = load i32, i32* @r8, align 4
  %v1_1459c = add i32 %v0_1459c, 12
  %v2_1459c = inttoptr i32 %v1_1459c to i32*
  %v3_1459c = load i32, i32* %v2_1459c, align 4
  store i32 %v3_1459c, i32* %r3.global-to-local, align 4
  %v2_145a0 = icmp eq i32 %stack_var_-44.3, 0
  %v2_145a4 = add i32 %v3_1459c, 8
  %v3_145a4 = inttoptr i32 %v2_145a4 to i32*
  store i32 %v0_1459c, i32* %v3_145a4, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* @r4, align 4
  br i1 %v2_145a0, label %dec_label_pc_145b0, label %dec_label_pc_14708

dec_label_pc_145b0:                               ; preds = %dec_label_pc_14574, %dec_label_pc_14708
  %v1_145bc = phi i32 [ ptrtoint (i32* @global_var_23108.564 to i32), %dec_label_pc_14574 ], [ %v1_145b4.pre, %dec_label_pc_14708 ]
  %v0_145b0 = load i32, i32* @r6, align 4
  %v1_145b0 = add i32 %v0_145b0, 8
  store i32 %v1_145b0, i32* %r2.global-to-local, align 4
  %v2_145b4 = add i32 %v1_145b0, %v1_145bc
  %v3_145b4 = inttoptr i32 %v2_145b4 to i32*
  %v4_145b4 = load i32, i32* %v3_145b4, align 4
  store i32 %v4_145b4, i32* @r3, align 4
  %v2_145b8 = icmp eq i32 %v4_145b4, 0
  store i1 %v2_145b8, i1* @cpsr_z, align 1
  store i32 %v2_145b4, i32* %r5.global-to-local, align 4
  br i1 %v2_145b8, label %dec_label_pc_145b0.dec_label_pc_1460c_crit_edge, label %dec_label_pc_145c4

dec_label_pc_145b0.dec_label_pc_1460c_crit_edge:  ; preds = %dec_label_pc_145b0
  %v1_14614.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1460c

dec_label_pc_145c4:                               ; preds = %dec_label_pc_145b0
  %v0_145c4 = call i32 @function_16760()
  store i32 %v0_145c4, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_145cc = load i32, i32* %r2.global-to-local, align 4
  %v2_145cc = load i32, i32* @r4, align 4
  %v3_145cc = add i32 %v2_145cc, %v1_145cc
  %v4_145cc = inttoptr i32 %v3_145cc to i32*
  store i32 0, i32* %v4_145cc, align 4
  %v0_145d0 = call i32 @function_16760()
  store i32 %v0_145d0, i32* %r0.global-to-local, align 4
  %v0_145d4 = load i32, i32* @r6, align 4
  %v1_145d4 = add i32 %v0_145d4, 12
  store i32 %v1_145d4, i32* @r3, align 4
  %v1_145d8 = load i32, i32* @r4, align 4
  %v2_145d8 = add i32 %v1_145d8, %v1_145d4
  %v3_145d8 = inttoptr i32 %v2_145d8 to i32*
  %v4_145d8 = load i32, i32* %v3_145d8, align 4
  store i32 %v4_145d8, i32* %r2.global-to-local, align 4
  %v2_145dc = icmp eq i32 %v4_145d8, 0
  br i1 %v2_145dc, label %dec_label_pc_1460c, label %dec_label_pc_145e4

dec_label_pc_145e4:                               ; preds = %dec_label_pc_145c4
  %v0_145e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_145e8, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_145fc = icmp eq i32 %v0_145e8, -38
  br i1 %v4_145fc, label %dec_label_pc_14600, label %dec_label_pc_1460c

dec_label_pc_14600:                               ; preds = %dec_label_pc_145e4
  store i32 -38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1460c

dec_label_pc_1460c:                               ; preds = %dec_label_pc_145b0.dec_label_pc_1460c_crit_edge, %dec_label_pc_145e4, %dec_label_pc_14600, %dec_label_pc_145c4, %dec_label_pc_14248, %bb70
  %v1_14614 = phi i32 [ %v1_14614.pre, %dec_label_pc_145b0.dec_label_pc_1460c_crit_edge ], [ %v0_145e8, %dec_label_pc_145e4 ], [ -38, %dec_label_pc_14600 ], [ %v0_145d0, %dec_label_pc_145c4 ], [ 0, %dec_label_pc_14248 ], [ %v1_146c0, %bb70 ]
  store i32 %v3_14248, i32* @r4, align 4
  store i32 %v6_14248, i32* @r5, align 4
  store i32 %v9_14248, i32* @r6, align 4
  store i32 %v12_14248, i32* @r7, align 4
  store i32 %v15_14248, i32* @r8, align 4
  store i32 %v18_14248, i32* @sb, align 4
  store i32 %v21_14248, i32* @sl, align 4
  store i32 %v24_14248, i32* @fp, align 4
  ret i32 %v1_14614

dec_label_pc_14620:                               ; preds = %dec_label_pc_14664
  %v0_14624 = load i32, i32* @r6, align 4
  store i32 1, i32* @r2, align 4
  %v2_1462c = add i32 %v0_14624, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 12)
  store i32 %v2_1462c, i32* %r1.global-to-local, align 4
  %v0_14630 = load i32, i32* @r5, align 4
  store i32 %v0_14630, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v2_14638 = inttoptr i32 %v0_14630 to i32*
  %v3_14638 = call i32 @function_162e0(i32* %v2_14638, i32 %v2_1462c)
  store i32 %v3_14638, i32* %r0.global-to-local, align 4
  %v0_14640.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1463c

dec_label_pc_1463c:                               ; preds = %dec_label_pc_142e4, %dec_label_pc_14620
  %v0_14640 = phi i32 [ %v0_14640.pre, %dec_label_pc_14620 ], [ %v3_142ec, %dec_label_pc_142e4 ]
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r0.global-to-local, align 4
  %v1_14640 = add i32 %v0_14640, 8
  store i32 %v1_14640, i32* %r3.global-to-local, align 4
  %v2_14644 = add i32 %v0_14640, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 8)
  store i32 %v2_14644, i32* @r7, align 4
  br label %dec_label_pc_14648

dec_label_pc_14648:                               ; preds = %dec_label_pc_14648.dec_label_pc_14648_crit_edge, %dec_label_pc_1463c
  %v0_14648 = phi i32 [ %v0_14648.pre, %dec_label_pc_14648.dec_label_pc_14648_crit_edge ], [ %v2_14644, %dec_label_pc_1463c ]
  %v1_14648 = inttoptr i32 %v0_14648 to i32*
  %v2_14648 = load i32, i32* %v1_14648, align 4
  store i32 %v2_14648, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_14648, i32* %r0.global-to-local, align 4
  store i32 %v0_14648, i32* %r2.global-to-local, align 4
  %v4_14658 = call i32 @function_167b4(i32 %v2_14648, i32 1, i32* %v1_14648)
  store i32 %v4_14658, i32* %r0.global-to-local, align 4
  %v2_1465c = icmp eq i32 %v4_14658, 0
  store i1 %v2_1465c, i1* @cpsr_z, align 1
  br i1 %v2_1465c, label %dec_label_pc_14664, label %dec_label_pc_14648.dec_label_pc_14648_crit_edge

dec_label_pc_14648.dec_label_pc_14648_crit_edge:  ; preds = %dec_label_pc_14648
  %v0_14648.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14648

dec_label_pc_14664:                               ; preds = %dec_label_pc_14648
  %v0_14618 = load i32, i32* @r4, align 4
  %v2_14618 = icmp eq i32 %v0_14618, 0
  br i1 %v2_14618, label %dec_label_pc_14304.loopexit, label %dec_label_pc_14620

dec_label_pc_14668:                               ; preds = %dec_label_pc_14668, %dec_label_pc_146a0, %dec_label_pc_14320
  %v3_1466c = load i32, i32* @global_var_23510.572, align 4
  store i32 %v3_1466c, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23510.572 to i32), i32* %r2.global-to-local, align 4
  store i32 %v3_1466c, i32* %r0.global-to-local, align 4
  %v4_1467c = call i32 @function_167b4(i32 %v3_1466c, i32 1, i32* nonnull @global_var_23510.572)
  %v2_14680 = icmp eq i32 %v4_1467c, 0
  store i1 %v2_14680, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_23510.572 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_23514.576 to i32), i32* %r1.global-to-local, align 4
  br i1 %v2_14680, label %dec_label_pc_14698, label %dec_label_pc_14668

dec_label_pc_14698:                               ; preds = %dec_label_pc_14668
  %v0_14698 = load i32, i32* @r4, align 4
  %v2_14698 = icmp eq i32 %v0_14698, 0
  br i1 %v2_14698, label %dec_label_pc_14330, label %dec_label_pc_146a0

dec_label_pc_146a0:                               ; preds = %dec_label_pc_14698
  %v3_146a0 = call i32 @function_162e0(i32* nonnull @global_var_23510.572, i32 ptrtoint (i32* @global_var_23514.576 to i32))
  store i32 %v3_146a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14668

dec_label_pc_146a8:                               ; preds = %dec_label_pc_14258
  %v2_146a8 = inttoptr i32 %v1_14258 to i32*
  %v3_146a8 = load i32, i32* %v2_146a8, align 4
  store i32 %v3_146a8, i32* %r0.global-to-local, align 4
  %v1_146ac = and i32 %v3_1425c, -2
  %v1_146b0 = urem i32 %v3_146a8, 2
  %v2_146b0 = icmp eq i32 %v1_146b0, 0
  %v2_146b4 = add i32 %v3_146a8, %v1_146ac
  store i32 %v2_146b4, i32* @r1, align 4
  br i1 %v2_146b0, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_146a8
  call void @llvm.trap()
  unreachable

bb70:                                             ; preds = %dec_label_pc_146a8
  %v2_146bc = sub i32 %v1_14258, %v3_146a8
  store i32 %v2_146bc, i32* %r0.global-to-local, align 4
  %v1_146c0 = call i32 @function_151bc(i32 %v2_146bc)
  store i32 %v1_146c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1460c

dec_label_pc_146c8:                               ; preds = %dec_label_pc_14304
  store i32 %v1_14308, i32* %r0.global-to-local, align 4
  %v3_146cc = mul i32 %v1_14308, 16
  %v2_146d0 = add i32 %v3_146cc, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v2_146d0, i32* %r3.global-to-local, align 4
  %v1_146d4 = add i32 %v3_146cc, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v1_146d4, i32* %r2.global-to-local, align 4
  store i32 %v1_146d4, i32* %v6_1430c, align 4
  %v0_146dc = load i32, i32* %r2.global-to-local, align 4
  %v1_146dc = load i32, i32* %r3.global-to-local, align 4
  %v2_146dc = add i32 %v1_146dc, 4
  %v3_146dc = inttoptr i32 %v2_146dc to i32*
  store i32 %v0_146dc, i32* %v3_146dc, align 4
  br label %dec_label_pc_14320

dec_label_pc_146e4:                               ; preds = %dec_label_pc_14370
  store i32 ptrtoint (i32* @global_var_23510.572 to i32), i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14390

dec_label_pc_146f8:                               ; preds = %dec_label_pc_143c8
  store i32 %v0_143cc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_143e4.preheader

dec_label_pc_14708:                               ; preds = %dec_label_pc_14574
  %v0_14708 = load i32, i32* @r8, align 4
  %v0_1470c = load i32, i32* @sb, align 4
  %v1_1470c = add i32 %v0_1470c, -16
  %v1_14710 = add i32 %v0_14708, 4111
  %v1_1471c = and i32 %v1_14710, -4096
  store i32 %v1_1471c, i32* @r0, align 4
  %v1_14720 = and i32 %v1_1470c, -4096
  %v2_14724 = sub i32 %v1_14720, %v1_1471c
  store i32 %v2_14724, i32* %r1.global-to-local, align 4
  store i32 4, i32* @r2, align 4
  %v4_1472c = call i32 @function_150a4(i32 %v1_1471c, i32 %v2_14724, i32 4, i32 %v3_1459c)
  store i32 %v4_1472c, i32* @r0, align 4
  %v1_145b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_145b0

; uselistorder directives
  uselistorder i32 %v3_146cc, { 1, 0 }
  uselistorder i32 %v1_146c0, { 1, 0 }
  uselistorder i32 %v3_146a8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_14648, { 1, 0 }
  uselistorder i32 %v0_14640, { 1, 0 }
  uselistorder i32 %v3_1457c, { 1, 0 }
  uselistorder i32 %v2_144f4, { 1, 0, 2 }
  uselistorder i32 %v2_144d4.pre, { 0, 2, 1 }
  uselistorder i32 %v7_144b8, { 1, 0 }
  uselistorder i32 %v1_144a8, { 1, 0 }
  uselistorder i32 %v1_144a0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14478, { 1, 0 }
  uselistorder i32 %v2_14470, { 1, 0 }
  uselistorder i32 %v2_1446c, { 1, 2, 0 }
  uselistorder i32 %v2_1444c, { 1, 0, 2 }
  uselistorder i32 %v1_14448, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_14298.pre, { 1, 2, 0 }
  uselistorder i32 %stack_var_-44.5, { 1, 2, 3, 0 }
  uselistorder i32 %v2_1440c, { 1, 0, 2 }
  uselistorder i32 %v1_14408, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_143e4, { 1, 0 }
  uselistorder i32 %v0_143cc, { 1, 0, 2 }
  uselistorder i32 %v1_1433c, { 1, 0 }
  uselistorder i32 %v1_14308, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_142ec, { 2, 1, 0 }
  uselistorder i32 %v0_142ec, { 1, 0 }
  uselistorder i32 %v3_142dc, { 1, 0 }
  uselistorder i32 %v4_142c4, { 1, 0, 2 }
  uselistorder i32 %v0_142b8, { 1, 0 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_1426c, { 1, 0, 2 }
  uselistorder i32 %v1_14268, { 0, 4, 1, 5, 3, 2, 6 }
  uselistorder i32 %v1_14260, { 1, 0 }
  uselistorder i32 %v3_1425c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_14258, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_1424c, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21, 23, 24, 25, 22, 26, 27, 28, 29, 30 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 3, 8, 9, 11, 10, 12, 19, 15, 16, 14, 13, 18, 17, 20, 21, 22, 23, 25, 24, 29, 26, 5, 4, 27, 28, 2, 30, 31, 34, 33, 32, 35, 36, 37, 38, 0, 1 }
  uselistorder i32 1032, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14668, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1463c, { 1, 0 }
  uselistorder label %dec_label_pc_1460c, { 5, 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_145b0, { 1, 0 }
  uselistorder label %dec_label_pc_14574, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_144d4.dec_label_pc_144d4_crit_edge, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_1446c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14430, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_143e4, { 1, 0 }
  uselistorder label %dec_label_pc_143e4.preheader, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_14390, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14320, { 1, 0 }
  uselistorder label %dec_label_pc_142e4, { 2, 0, 1 }
  uselistorder label %bb62, { 1, 0 }
}

define i32 @function_14744() local_unnamed_addr {
dec_label_pc_14744:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_14744 = load i32, i32* @r4, align 4
  %v6_14744 = load i32, i32* @r5, align 4
  %v9_14744 = load i32, i32* @r6, align 4
  %v12_14744 = load i32, i32* @r7, align 4
  %v15_14744 = load i32, i32* @r8, align 4
  %v18_14744 = load i32, i32* @sb, align 4
  %v21_14744 = load i32, i32* @sl, align 4
  %v24_14744 = load i32, i32* @fp, align 4
  store i32 2147479535, i32* %r3.global-to-local, align 4
  %v0_14750 = load i32, i32* @r0, align 4
  %v1_14750 = add i32 %v0_14750, -1
  store i32 %v1_14750, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v1_14750, 2147479536
  br i1 %tmp, label %dec_label_pc_14af0, label %dec_label_pc_14760

dec_label_pc_14760:                               ; preds = %dec_label_pc_14744
  %v2_14760 = icmp eq i32 %v0_14750, 0
  br i1 %v2_14760, label %.thread, label %dec_label_pc_14dc8

.thread:                                          ; preds = %dec_label_pc_14760
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_14774

dec_label_pc_14774:                               ; preds = %.thread43, %.thread, %dec_label_pc_14b18
  %v1_1478c = phi i32 [ %v1_14b28, %dec_label_pc_14b18 ], [ 0, %.thread ], [ %v1_14b08, %.thread43 ]
  %v0_14b34 = phi i32 [ %v1_14af4, %dec_label_pc_14b18 ], [ 16, %.thread ], [ %v1_14af4, %.thread43 ]
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_14778 = sub nsw i32 32, %v1_1478c
  store i32 %v1_14778, i32* %r1.global-to-local, align 4
  %v7_14780 = lshr i32 1, %v1_14778
  store i32 %v7_14780, i32* %r4.global-to-local, align 4
  %v1_14784 = add nsw i32 %v1_1478c, -32
  store i32 %v1_14784, i32* %r0.global-to-local, align 4
  %v6_14784 = icmp slt i32 %v1_1478c, 32
  br i1 %v6_14784, label %bb64, label %bb

bb:                                               ; preds = %dec_label_pc_14774
  %v7_14788 = shl i32 1, %v1_14784
  store i32 %v7_14788, i32* %r4.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_14774, %bb
  %v0_14794 = phi i32 [ %v7_14780, %dec_label_pc_14774 ], [ %v7_14788, %bb ]
  %v1_14790 = shl i32 -1, %v1_1478c
  %v6_14794 = sub i32 -1, %v0_14794
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* @sl, align 4
  store i32 ptrtoint (i8** @global_var_2382c.531 to i32), i32* @fp, align 4
  %v2_147a870 = load i32, i32* @global_var_23108.564, align 4
  %v5_147a871 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v5_147a871, i32* @r4, align 4
  %v2_147b472 = and i32 %v2_147a870, %v1_14790
  store i32 %v2_147b472, i32* %r1.global-to-local, align 4
  %v2_147b873 = and i32 %v5_147a871, %v6_14794
  store i32 %v2_147b873, i32* %r2.global-to-local, align 4
  %v2_147bc74 = or i32 %v2_147b873, %v2_147b472
  store i32 %v2_147bc74, i32* %r3.global-to-local, align 4
  %v4_147bc76 = icmp eq i32 %v2_147bc74, 0
  br i1 %v4_147bc76, label %dec_label_pc_148f0, label %dec_label_pc_147c4.preheader

dec_label_pc_147a8.loopexit:                      ; preds = %dec_label_pc_14874, %dec_label_pc_1488c, %dec_label_pc_148ac
  %v2_147a8 = load i32, i32* @global_var_23108.564, align 4
  %v5_147a8 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v5_147a8, i32* @r4, align 4
  %v2_147b4 = and i32 %v2_147a8, %v1_14790
  store i32 %v2_147b4, i32* %r1.global-to-local, align 4
  %v2_147b8 = and i32 %v5_147a8, %v6_14794
  store i32 %v2_147b8, i32* %r2.global-to-local, align 4
  %v2_147bc = or i32 %v2_147b8, %v2_147b4
  store i32 %v2_147bc, i32* %r3.global-to-local, align 4
  %v4_147bc = icmp eq i32 %v2_147bc, 0
  br i1 %v4_147bc, label %dec_label_pc_148f0, label %dec_label_pc_147c4.preheader

dec_label_pc_147c4.preheader:                     ; preds = %bb64, %dec_label_pc_147a8.loopexit
  %v2_147b878 = phi i32 [ %v2_147b8, %dec_label_pc_147a8.loopexit ], [ %v2_147b873, %bb64 ]
  %v2_147b477 = phi i32 [ %v2_147b4, %dec_label_pc_147a8.loopexit ], [ %v2_147b472, %bb64 ]
  br label %dec_label_pc_147c4

dec_label_pc_147c4:                               ; preds = %dec_label_pc_147c4.preheader, %dec_label_pc_148c8
  %v0_147cc = phi i32 [ %v2_148e4, %dec_label_pc_148c8 ], [ %v2_147b878, %dec_label_pc_147c4.preheader ]
  %v0_14a44 = phi i32 [ %v2_148e0, %dec_label_pc_148c8 ], [ %v2_147b477, %dec_label_pc_147c4.preheader ]
  store i32 %v0_14a44, i32* %r3.global-to-local, align 4
  %v2_147c4 = icmp eq i32 %v0_14a44, 0
  br i1 %v2_147c4, label %dec_label_pc_147cc, label %dec_label_pc_14a44

dec_label_pc_147cc:                               ; preds = %dec_label_pc_147c4
  %v1_147cc = sub i32 0, %v0_147cc
  %v2_147d0 = and i32 %v0_147cc, %v1_147cc
  store i32 %v2_147d0, i32* %r0.global-to-local, align 4
  %v3_147e0 = mul i32 %v2_147d0, 1088
  store i32 %v3_147e0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1aa4e.580 to i32), i32* %r2.global-to-local, align 4
  %v2_14814 = mul i32 %v2_147d0, 124511785
  store i32 %v2_14814, i32* %r3.global-to-local, align 4
  %v4_14818 = udiv i32 %v2_14814, 134217728
  %v5_14818 = add i32 %v4_14818, ptrtoint (i32* @global_var_1aa4e.580 to i32)
  %v6_14818 = inttoptr i32 %v5_14818 to i8*
  %v7_14818 = load i8, i8* %v6_14818, align 1
  %v9_14818 = zext i8 %v7_14818 to i32
  store i32 %v9_14818, i32* %r1.global-to-local, align 4
  %v1_1481c = add nuw nsw i32 %v9_14818, 32
  br label %dec_label_pc_14820

dec_label_pc_14820:                               ; preds = %dec_label_pc_14a44, %dec_label_pc_147cc
  %storemerge = phi i32 [ %v1_1481c, %dec_label_pc_147cc ], [ %v9_14a90, %dec_label_pc_14a44 ]
  store i32 %storemerge, i32* @r8, align 4
  %v3_14820 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_14820, i32* %r2.global-to-local, align 4
  %v3_14824 = mul nsw i32 %storemerge, 16
  store i32 %v3_14824, i32* @r6, align 4
  %v1_14828 = or i32 %v3_14824, 8
  store i32 %v1_14828, i32* %r3.global-to-local, align 4
  %v2_1482c = icmp eq i32 %v3_14820, 0
  store i1 %v2_1482c, i1* @cpsr_z, align 1
  %v1_14830 = load i32, i32* @sl, align 4
  %v2_14830 = add i32 %v1_14830, %v1_14828
  store i32 %v2_14830, i32* @r5, align 4
  br i1 %v2_1482c, label %dec_label_pc_14838, label %dec_label_pc_14a1c

dec_label_pc_14838.loopexit:                      ; preds = %dec_label_pc_14a40
  %v0_14838.pre = load i32, i32* @r8, align 4
  %v0_1483c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_14838

dec_label_pc_14838:                               ; preds = %dec_label_pc_14838.loopexit, %dec_label_pc_14820
  %v0_1483c = phi i32 [ %v0_1483c.pre, %dec_label_pc_14838.loopexit ], [ %v1_14830, %dec_label_pc_14820 ]
  %v0_14b60 = phi i32 [ %v0_14838.pre, %dec_label_pc_14838.loopexit ], [ %storemerge, %dec_label_pc_14820 ]
  %v1_14838 = add i32 %v0_14b60, 1
  store i32 %v1_14838, i32* %r1.global-to-local, align 4
  %v4_1483c = mul i32 %v1_14838, 16
  %v5_1483c = add i32 %v4_1483c, %v0_1483c
  %v6_1483c = inttoptr i32 %v5_1483c to i32*
  %v7_1483c = load i32, i32* %v6_1483c, align 4
  store i32 %v7_1483c, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* @r0, align 4
  %v2_14844 = icmp eq i32 %v7_1483c, 0
  br i1 %v2_14844, label %.thread7, label %dec_label_pc_14860

.thread7:                                         ; preds = %dec_label_pc_14838
  %v4_14848 = mul i32 %v1_14838, 16
  %v3_1484c = add i32 %v4_14848, ptrtoint (i32* @global_var_23108.564 to i32)
  store i32 %v3_1484c, i32* %r3.global-to-local, align 4
  %v2_14850 = add i32 %v4_14848, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v2_14850, i32* %r2.global-to-local, align 4
  %v7_14854 = add i32 %v4_1483c, ptrtoint (i32* @global_var_23108.564 to i32)
  %v8_14854 = inttoptr i32 %v7_14854 to i32*
  store i32 %v2_14850, i32* %v8_14854, align 4
  %v1_14858 = load i32, i32* %r2.global-to-local, align 4
  %v2_14858 = load i32, i32* %r3.global-to-local, align 4
  %v3_14858 = add i32 %v2_14858, 4
  %v4_14858 = inttoptr i32 %v3_14858 to i32*
  store i32 %v1_14858, i32* %v4_14858, align 4
  %v1_14878.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_14874

dec_label_pc_14860:                               ; preds = %dec_label_pc_14838
  %v1_14868 = add i32 %v4_1483c, add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8)
  store i32 %v1_14868, i32* %r3.global-to-local, align 4
  %v9_1486c = icmp eq i32 %v7_1483c, %v1_14868
  br i1 %v9_1486c, label %dec_label_pc_14874, label %dec_label_pc_14b60

dec_label_pc_14874:                               ; preds = %.thread7, %dec_label_pc_14860
  %v1_14878 = phi i32 [ %v1_14878.pre, %.thread7 ], [ %v0_1483c, %dec_label_pc_14860 ]
  %v0_14874 = load i32, i32* @r6, align 4
  %v1_14874 = add i32 %v0_14874, 8
  store i32 %v1_14874, i32* %r2.global-to-local, align 4
  %v2_14878 = add i32 %v1_14878, %v1_14874
  %v3_14878 = inttoptr i32 %v2_14878 to i32*
  %v4_14878 = load i32, i32* %v3_14878, align 4
  store i32 %v4_14878, i32* %r3.global-to-local, align 4
  %v2_1487c = icmp eq i32 %v4_14878, 0
  store i1 %v2_1487c, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_14878, i32* %r4.global-to-local, align 4
  br i1 %v2_1487c, label %dec_label_pc_147a8.loopexit, label %dec_label_pc_1488c

dec_label_pc_1488c:                               ; preds = %dec_label_pc_14874
  %v0_1488c = call i32 @function_16760()
  store i32 %v0_1488c, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14894 = load i32, i32* %r2.global-to-local, align 4
  %v2_14894 = load i32, i32* %r1.global-to-local, align 4
  %v3_14894 = add i32 %v2_14894, %v1_14894
  %v4_14894 = inttoptr i32 %v3_14894 to i32*
  store i32 0, i32* %v4_14894, align 4
  %v0_14898 = call i32 @function_16760()
  store i32 %v0_14898, i32* %r0.global-to-local, align 4
  %v0_1489c = load i32, i32* @r6, align 4
  %v1_1489c = add i32 %v0_1489c, 12
  store i32 %v1_1489c, i32* %r3.global-to-local, align 4
  %v1_148a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_148a0 = add i32 %v1_148a0, %v1_1489c
  %v3_148a0 = inttoptr i32 %v2_148a0 to i32*
  %v4_148a0 = load i32, i32* %v3_148a0, align 4
  store i32 %v4_148a0, i32* %r2.global-to-local, align 4
  %v2_148a4 = icmp eq i32 %v4_148a0, 0
  br i1 %v2_148a4, label %dec_label_pc_147a8.loopexit, label %dec_label_pc_148ac

dec_label_pc_148ac:                               ; preds = %dec_label_pc_1488c
  store i32 240, i32* @r7, align 4
  %v0_148b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_148b0, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_148c4 = icmp eq i32 %v0_148b0, -38
  br i1 %v4_148c4, label %dec_label_pc_148c8, label %dec_label_pc_147a8.loopexit

dec_label_pc_148c8:                               ; preds = %dec_label_pc_148ac
  store i32 -38, i32* %r0.global-to-local, align 4
  %v2_148d4 = load i32, i32* @global_var_23108.564, align 4
  %v5_148d4 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v5_148d4, i32* @r4, align 4
  %v2_148e0 = and i32 %v2_148d4, %v1_14790
  store i32 %v2_148e0, i32* %r1.global-to-local, align 4
  %v2_148e4 = and i32 %v5_148d4, %v6_14794
  store i32 %v2_148e4, i32* %r2.global-to-local, align 4
  %v2_148e8 = or i32 %v2_148e4, %v2_148e0
  store i32 %v2_148e8, i32* %r3.global-to-local, align 4
  %v4_148e8 = icmp eq i32 %v2_148e8, 0
  br i1 %v4_148e8, label %dec_label_pc_148f0, label %dec_label_pc_147c4

dec_label_pc_148f0:                               ; preds = %bb64, %dec_label_pc_147a8.loopexit, %dec_label_pc_148c8
  %v3_148f0 = load i32, i32* @global_var_23838.562, align 4
  store i32 %v3_148f0, i32* %r3.global-to-local, align 4
  store i32 %v0_14b34, i32* %ip.global-to-local, align 4
  %v2_148f8 = icmp eq i32 %v3_148f0, 0
  store i1 %v2_148f8, i1* @cpsr_z, align 1
  %v1_148fc = add i32 %v0_14b34, 16
  store i32 %v1_148fc, i32* %r2.global-to-local, align 4
  store i32 %v1_148fc, i32* %stack_var_-44, align 4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* @r6, align 4
  br i1 %v2_148f8, label %dec_label_pc_1490c, label %dec_label_pc_14ab4

dec_label_pc_1490c:                               ; preds = %dec_label_pc_14a98, %dec_label_pc_148f0
  %v2_1490c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1490c, i32* %r0.global-to-local, align 4
  %v2_14910 = call i32 @function_1760c(i32* nonnull %stack_var_-44)
  store i32 %v2_14910, i32* @r0, align 4
  store i32 %v2_14910, i32* %r4.global-to-local, align 4
  %v2_14914 = icmp eq i32 %v2_14910, 0
  br i1 %v2_14914, label %dec_label_pc_14ca4, label %dec_label_pc_1491c

dec_label_pc_1491c:                               ; preds = %dec_label_pc_1490c
  store i32 ptrtoint (i32* @global_var_230f8.584 to i32), i32* @r0, align 4
  %v2_14920 = load i32, i32* @global_var_230f8.584, align 4
  store i32 %v2_14920, i32* %r3.global-to-local, align 4
  %v9_14924 = icmp eq i32 %v2_14910, %v2_14920
  br i1 %v9_14924, label %dec_label_pc_14944, label %dec_label_pc_1492c

dec_label_pc_1492c:                               ; preds = %dec_label_pc_1491c
  %v3_1492c = load i32, i32* %stack_var_-44, align 4
  %v1_14930 = add i32 %v2_14910, 16
  store i32 %v1_14930, i32* %r4.global-to-local, align 4
  %v1_14934 = add i32 %v3_1492c, -16
  store i32 %v1_14934, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 %v1_14934, i32* %stack_var_-44, align 4
  %v2_14940 = add i32 %v2_14910, 8
  %v3_14940 = inttoptr i32 %v2_14940 to i32*
  store i32 1, i32* %v3_14940, align 4
  %v0_14948.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14944

dec_label_pc_14944:                               ; preds = %dec_label_pc_1491c, %dec_label_pc_1492c
  %v0_14948 = phi i32 [ %v2_14910, %dec_label_pc_1491c ], [ %v0_14948.pre, %dec_label_pc_1492c ]
  %v3_14944 = load i32, i32* %stack_var_-44, align 4
  %v1_14948 = add i32 %v0_14948, -8
  store i32 %v1_14948, i32* @r5, align 4
  %v1_1494c = or i32 %v3_14944, 1
  store i32 %v1_1494c, i32* %r1.global-to-local, align 4
  %v2_14950 = add i32 %v3_14944, %v0_14948
  store i32 %v2_14950, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  %v1_14958 = add i32 %v2_14950, -8
  %v2_14958 = inttoptr i32 %v1_14958 to i32*
  store i32 %v1_1494c, i32* %v2_14958, align 4
  %v4_14958 = add i32 %v2_14950, -4
  %v5_14958 = inttoptr i32 %v4_14958 to i32*
  %v6_14958 = load i32, i32* @r4, align 4
  store i32 %v6_14958, i32* %v5_14958, align 4
  %v0_1495c = load i32, i32* %r1.global-to-local, align 4
  %v1_1495c = load i32, i32* @r5, align 4
  %v2_1495c = add i32 %v1_1495c, 4
  %v3_1495c = inttoptr i32 %v2_1495c to i32*
  store i32 %v0_1495c, i32* %v3_1495c, align 4
  %v2_14960 = load i32, i32* @global_var_230fc.582, align 4
  store i32 %v2_14960, i32* %r2.global-to-local, align 4
  %v2_14964 = icmp eq i32 %v2_14960, 0
  store i1 %v2_14964, i1* @cpsr_z, align 1
  %v0_14968 = load i32, i32* %r3.global-to-local, align 4
  %v1_14968 = load i32, i32* @r0, align 4
  %v2_14968 = inttoptr i32 %v1_14968 to i32*
  store i32 %v0_14968, i32* %v2_14968, align 4
  br i1 %v2_14964, label %dec_label_pc_1498c, label %dec_label_pc_14970

dec_label_pc_14970:                               ; preds = %dec_label_pc_14944
  %v0_14970 = call i32 @function_16760()
  store i32 %v0_14970, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14978 = load i32, i32* @r6, align 4
  %v2_14978 = inttoptr i32 %v1_14978 to i32*
  store i32 0, i32* %v2_14978, align 4
  %v0_1497c = call i32 @function_16760()
  store i32 %v0_1497c, i32* %r0.global-to-local, align 4
  %v3_14980 = load i32, i32* @global_var_23100.585, align 4
  store i32 %v3_14980, i32* %r3.global-to-local, align 4
  %v2_14984 = icmp eq i32 %v3_14980, 0
  br i1 %v2_14984, label %dec_label_pc_1498c, label %dec_label_pc_14c54

dec_label_pc_1498c:                               ; preds = %dec_label_pc_14970, %dec_label_pc_14c54, %dec_label_pc_14944, %dec_label_pc_14c70
  %v0_1498c = load i32, i32* @r5, align 4
  store i32 %v0_1498c, i32* %r0.global-to-local, align 4
  %v1_14990 = inttoptr i32 %v0_1498c to i32*
  %v2_14990 = call i32 @function_13d28(i32* %v1_14990)
  store i32 %v2_14990, i32* %r0.global-to-local, align 4
  %v2_14994 = icmp eq i32 %v2_14990, 0
  %v1_14998 = load i32, i32* @r5, align 4
  br i1 %v2_14994, label %bb65, label %dec_label_pc_149a0

bb65:                                             ; preds = %dec_label_pc_1498c
  store i32 %v1_14998, i32* @r8, align 4
  br label %dec_label_pc_149d0

dec_label_pc_149a0:                               ; preds = %dec_label_pc_1498c
  %v1_149a0 = inttoptr i32 %v1_14998 to i32*
  %v2_149a0 = load i32, i32* %v1_149a0, align 4
  %v1_149a4 = and i32 %v2_149a0, -2
  %v2_149a8 = sub i32 %v1_14998, %v1_149a4
  store i32 %v2_149a8, i32* %r3.global-to-local, align 4
  %v1_149ac = add i32 %v2_149a8, 4
  %v2_149ac = inttoptr i32 %v1_149ac to i32*
  %v3_149ac = load i32, i32* %v2_149ac, align 4
  store i32 %v3_149ac, i32* %r1.global-to-local, align 4
  %v1_149b0 = add i32 %v1_14998, 4
  %v2_149b0 = inttoptr i32 %v1_149b0 to i32*
  %v3_149b0 = load i32, i32* %v2_149b0, align 4
  store i32 %v3_149b0, i32* %r2.global-to-local, align 4
  %v1_149b4 = and i32 %v3_149ac, -2
  %v2_149b8 = add i32 %v3_149b0, %v1_149b4
  store i32 %v2_149b8, i32* %r1.global-to-local, align 4
  store i32 %v2_149b8, i32* %v2_149ac, align 4
  %v0_149c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_149c0 = and i32 %v0_149c0, -2
  store i32 %v1_149c0, i32* %r2.global-to-local, align 4
  %v0_149c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_149c4 = load i32, i32* @r5, align 4
  %v3_149c4 = add i32 %v1_149c4, %v1_149c0
  %v4_149c4 = inttoptr i32 %v3_149c4 to i32*
  store i32 %v0_149c4, i32* %v4_149c4, align 4
  %v0_149c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_149c8, i32* @r8, align 4
  store i32 %v0_149c8, i32* @r5, align 4
  br label %dec_label_pc_149d0

dec_label_pc_149d0:                               ; preds = %bb65, %dec_label_pc_14c28, %dec_label_pc_14c08, %dec_label_pc_14bf0, %dec_label_pc_14c44, %dec_label_pc_149a0
  %v0_149d0 = load i32, i32* @r5, align 4
  %v1_149d0 = add i32 %v0_149d0, 4
  %v2_149d0 = inttoptr i32 %v1_149d0 to i32*
  %v3_149d0 = load i32, i32* %v2_149d0, align 4
  %v1_149d4 = and i32 %v3_149d0, -2
  store i32 %v1_149d4, i32* %r1.global-to-local, align 4
  store i32 %v0_14b34, i32* @r3, align 4
  %v1_149dc = add i32 %v1_149d4, -16
  store i32 %v1_149dc, i32* %r2.global-to-local, align 4
  %v3_149e0 = icmp ult i32 %v0_14b34, %v1_149dc
  br i1 %v3_149e0, label %dec_label_pc_14b30, label %dec_label_pc_149e8

dec_label_pc_149e8:                               ; preds = %dec_label_pc_149d0, %dec_label_pc_14b30
  %v0_149e8 = load i32, i32* @r8, align 4
  %v1_149e8 = add i32 %v0_149e8, 8
  store i32 %v1_149e8, i32* @ip, align 4
  br label %dec_label_pc_149ec

dec_label_pc_149ec:                               ; preds = %.thread14, %dec_label_pc_14e10, %dec_label_pc_14dc8, %dec_label_pc_14cb0, %dec_label_pc_149e8
  %v0_149ec = load i32, i32* @ip, align 4
  store i32 %v0_149ec, i32* %r0.global-to-local, align 4
  store i32 %v3_14744, i32* @r4, align 4
  store i32 %v6_14744, i32* @r5, align 4
  store i32 %v9_14744, i32* @r6, align 4
  store i32 %v12_14744, i32* @r7, align 4
  store i32 %v15_14744, i32* @r8, align 4
  store i32 %v18_14744, i32* @sb, align 4
  store i32 %v21_14744, i32* @sl, align 4
  store i32 %v24_14744, i32* @fp, align 4
  ret i32 %v0_149ec

dec_label_pc_14a04:                               ; preds = %dec_label_pc_14a40
  %v0_14a04 = load i32, i32* @r6, align 4
  %v1_14a04 = add i32 %v0_14a04, 12
  store i32 1, i32* @r2, align 4
  %v1_14a0c = load i32, i32* @sl, align 4
  %v2_14a0c = add i32 %v1_14a04, %v1_14a0c
  store i32 %v2_14a0c, i32* %r1.global-to-local, align 4
  %v0_14a10 = load i32, i32* @r5, align 4
  store i32 %v0_14a10, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v2_14a18 = inttoptr i32 %v0_14a10 to i32*
  %v3_14a18 = call i32 @function_162e0(i32* %v2_14a18, i32 %v2_14a0c)
  store i32 %v3_14a18, i32* %r0.global-to-local, align 4
  %v0_14a1c.pre = load i32, i32* @r6, align 4
  %v1_14a20.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_14a1c

dec_label_pc_14a1c:                               ; preds = %dec_label_pc_14820, %dec_label_pc_14a04
  %v1_14a20 = phi i32 [ %v1_14a20.pre, %dec_label_pc_14a04 ], [ %v1_14830, %dec_label_pc_14820 ]
  %v0_14a1c = phi i32 [ %v0_14a1c.pre, %dec_label_pc_14a04 ], [ %v3_14824, %dec_label_pc_14820 ]
  %v1_14a1c = add i32 %v0_14a1c, 8
  store i32 %v1_14a1c, i32* %r3.global-to-local, align 4
  %v2_14a20 = add i32 %v1_14a1c, %v1_14a20
  store i32 %v2_14a20, i32* @r4, align 4
  br label %dec_label_pc_14a24

dec_label_pc_14a24:                               ; preds = %dec_label_pc_14a24.dec_label_pc_14a24_crit_edge, %dec_label_pc_14a1c
  %v0_14a24 = phi i32 [ %v0_14a24.pre, %dec_label_pc_14a24.dec_label_pc_14a24_crit_edge ], [ %v2_14a20, %dec_label_pc_14a1c ]
  %v1_14a24 = inttoptr i32 %v0_14a24 to i32*
  %v2_14a24 = load i32, i32* %v1_14a24, align 4
  store i32 %v2_14a24, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_14a24, i32* %r0.global-to-local, align 4
  store i32 %v0_14a24, i32* %r2.global-to-local, align 4
  %v4_14a34 = call i32 @function_167b4(i32 %v2_14a24, i32 1, i32* %v1_14a24)
  store i32 %v4_14a34, i32* %r0.global-to-local, align 4
  %v2_14a38 = icmp eq i32 %v4_14a34, 0
  store i1 %v2_14a38, i1* @cpsr_z, align 1
  br i1 %v2_14a38, label %dec_label_pc_14a40, label %dec_label_pc_14a24.dec_label_pc_14a24_crit_edge

dec_label_pc_14a24.dec_label_pc_14a24_crit_edge:  ; preds = %dec_label_pc_14a24
  %v0_14a24.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14a24

dec_label_pc_14a40:                               ; preds = %dec_label_pc_14a24
  %v0_149fc = load i32, i32* @r7, align 4
  %v2_149fc = icmp eq i32 %v0_149fc, 0
  br i1 %v2_149fc, label %dec_label_pc_14838.loopexit, label %dec_label_pc_14a04

dec_label_pc_14a44:                               ; preds = %dec_label_pc_147c4
  %v1_14a44 = sub i32 0, %v0_14a44
  %v2_14a48 = and i32 %v0_14a44, %v1_14a44
  store i32 %v2_14a48, i32* %r0.global-to-local, align 4
  %v3_14a58 = mul i32 %v2_14a48, 1088
  store i32 %v3_14a58, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1aa4e.580 to i32), i32* %r3.global-to-local, align 4
  %v2_14a8c = mul i32 %v2_14a48, 124511785
  store i32 %v2_14a8c, i32* %r2.global-to-local, align 4
  %v4_14a90 = udiv i32 %v2_14a8c, 134217728
  %v5_14a90 = add i32 %v4_14a90, ptrtoint (i32* @global_var_1aa4e.580 to i32)
  %v6_14a90 = inttoptr i32 %v5_14a90 to i8*
  %v7_14a90 = load i8, i8* %v6_14a90, align 1
  %v9_14a90 = zext i8 %v7_14a90 to i32
  br label %dec_label_pc_14820

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14ad0, %dec_label_pc_14ab4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v0_14aa0 = load i32, i32* @r4, align 4
  %v2_14aa0 = icmp eq i32 %v0_14aa0, 0
  store i32 ptrtoint (i32* @global_var_23100.585 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  br i1 %v2_14aa0, label %dec_label_pc_1490c, label %dec_label_pc_14ab0

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14a98
  %v3_14ab0 = call i32 @function_162e0(i32* nonnull @global_var_230fc.582, i32 ptrtoint (i32* @global_var_23100.585 to i32))
  store i32 %v3_14ab0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14ab4

dec_label_pc_14ab4:                               ; preds = %dec_label_pc_14ad0, %dec_label_pc_14ab0, %dec_label_pc_148f0
  %v2_14ab4 = load i32, i32* @global_var_230fc.582, align 4
  store i32 %v2_14ab4, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_14ab4, i32* %r0.global-to-local, align 4
  %v4_14ac4 = call i32 @function_167b4(i32 %v2_14ab4, i32 1, i32* nonnull @global_var_230fc.582)
  store i32 %v4_14ac4, i32* %r0.global-to-local, align 4
  %v2_14ac8 = icmp eq i32 %v4_14ac4, 0
  store i1 %v2_14ac8, i1* @cpsr_z, align 1
  br i1 %v2_14ac8, label %dec_label_pc_14a98, label %dec_label_pc_14ad0

dec_label_pc_14ad0:                               ; preds = %dec_label_pc_14ab4
  %v2_14ad0 = load i32, i32* @global_var_230fc.582, align 4
  store i32 %v2_14ad0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_14ad0, i32* %r0.global-to-local, align 4
  %v4_14ae0 = call i32 @function_167b4(i32 %v2_14ad0, i32 1, i32* nonnull @global_var_230fc.582)
  store i32 %v4_14ae0, i32* %r0.global-to-local, align 4
  %v2_14ae4 = icmp eq i32 %v4_14ae0, 0
  store i1 %v2_14ae4, i1* @cpsr_z, align 1
  br i1 %v2_14ae4, label %dec_label_pc_14a98, label %dec_label_pc_14ab4

dec_label_pc_14af0:                               ; preds = %dec_label_pc_14744
  %v1_14af0 = add i32 %v0_14750, 23
  %v1_14af4 = and i32 %v1_14af0, -16
  store i32 %v1_14af4, i32* %r3.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_14af4, 114688
  br i1 %tmp80, label %dec_label_pc_14d68, label %dec_label_pc_14b04

dec_label_pc_14b04:                               ; preds = %dec_label_pc_14af0
  %v3_14b04 = udiv i32 %v1_14af0, 16
  store i32 %v3_14b04, i32* %r3.global-to-local, align 4
  %v1_14b08 = add nsw i32 %v3_14b04, -1
  store i32 %v1_14b08, i32* @r0, align 4
  %tmp81 = icmp ult i32 %v1_14b08, 33
  br i1 %tmp81, label %.thread43, label %dec_label_pc_14b18

.thread43:                                        ; preds = %dec_label_pc_14b04
  store i32 %v1_14b08, i32* @sb, align 4
  br label %dec_label_pc_14774

dec_label_pc_14b18:                               ; preds = %dec_label_pc_14b04
  %v0_14b18 = call i32 @function_18038()
  %v1_14b20 = add i32 %v0_14b18, 2097151
  %v3_14b24 = udiv i32 %v1_14b20, 2097152
  store i32 %v3_14b24, i32* %r0.global-to-local, align 4
  %v1_14b28 = add nsw i32 %v3_14b24, -496
  store i32 %v1_14b28, i32* @sb, align 4
  br label %dec_label_pc_14774

dec_label_pc_14b30:                               ; preds = %dec_label_pc_149d0
  store i32 %v0_14b34, i32* %ip.global-to-local, align 4
  %v2_14b34 = sub i32 %v1_149d4, %v0_14b34
  %v1_14b38 = or i32 %v2_14b34, 1
  store i32 %v1_14b38, i32* @r3, align 4
  %v1_14b3c = load i32, i32* @r8, align 4
  %v2_14b3c = add i32 %v1_14b3c, %v0_14b34
  store i32 %v2_14b3c, i32* %r0.global-to-local, align 4
  %v1_14b40 = or i32 %v0_14b34, 1
  store i32 %v1_14b40, i32* @r2, align 4
  %v2_14b44 = add i32 %v2_14b3c, 4
  %v3_14b44 = inttoptr i32 %v2_14b44 to i32*
  store i32 %v1_14b38, i32* %v3_14b44, align 4
  %v0_14b48 = load i32, i32* @r2, align 4
  %v1_14b48 = load i32, i32* %ip.global-to-local, align 4
  %v2_14b48 = load i32, i32* @r8, align 4
  %v3_14b48 = add i32 %v2_14b48, %v1_14b48
  %v4_14b48 = inttoptr i32 %v3_14b48 to i32*
  store i32 %v0_14b48, i32* %v4_14b48, align 4
  %v0_14b4c = load i32, i32* @r2, align 4
  %v1_14b4c = load i32, i32* @r5, align 4
  %v2_14b4c = add i32 %v1_14b4c, 4
  %v3_14b4c = inttoptr i32 %v2_14b4c to i32*
  store i32 %v0_14b4c, i32* %v3_14b4c, align 4
  %v0_14b50 = load i32, i32* @r3, align 4
  %v1_14b50 = load i32, i32* %r1.global-to-local, align 4
  %v2_14b50 = load i32, i32* @r8, align 4
  %v3_14b50 = add i32 %v2_14b50, %v1_14b50
  %v4_14b50 = inttoptr i32 %v3_14b50 to i32*
  store i32 %v0_14b50, i32* %v4_14b50, align 4
  %v0_14b54 = load i32, i32* %r0.global-to-local, align 4
  %v1_14b54 = add i32 %v0_14b54, 8
  store i32 %v1_14b54, i32* %r0.global-to-local, align 4
  %v1_14b58 = call i32 @function_14248(i32 %v1_14b54)
  store i32 %v1_14b58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149e8

dec_label_pc_14b60:                               ; preds = %dec_label_pc_14860
  %v1_14b60 = add i32 %v0_14b60, -39
  %v3_14b60 = sub i32 38, %v0_14b60
  %v4_14b60 = and i32 %v3_14b60, %v0_14b60
  %v5_14b60 = icmp slt i32 %v4_14b60, 0
  %v6_14b60 = icmp slt i32 %v1_14b60, 0
  %v7_14b60 = icmp eq i32 %v0_14b60, 39
  %v3_14b64 = xor i1 %v6_14b60, %v5_14b60
  %v4_14b64 = or i1 %v7_14b60, %v3_14b64
  br i1 %v4_14b64, label %dec_label_pc_14bb4, label %dec_label_pc_14b68

dec_label_pc_14b68:                               ; preds = %dec_label_pc_14b60
  %v0_14b68 = load i32, i32* @sb, align 4
  %v1_14b68 = add i32 %v0_14b68, 3
  store i32 %v1_14b68, i32* %r3.global-to-local, align 4
  %v2_14b6c = sub i32 %v1_14b68, %v0_14b60
  %v4_14b6c = xor i32 %v1_14b68, %v0_14b60
  %v5_14b6c = xor i32 %v2_14b6c, %v1_14b68
  %v6_14b6c = and i32 %v5_14b6c, %v4_14b6c
  %v7_14b6c = icmp slt i32 %v6_14b6c, 0
  %v8_14b6c = icmp slt i32 %v2_14b6c, 0
  %v9_14b6c = icmp eq i32 %v1_14b68, %v0_14b60
  %v3_14b70 = xor i1 %v8_14b6c, %v7_14b6c
  %v4_14b70 = or i1 %v9_14b6c, %v3_14b70
  br i1 %v4_14b70, label %dec_label_pc_14b74, label %dec_label_pc_14c80

dec_label_pc_14b74:                               ; preds = %dec_label_pc_14b68
  %v1_14b74 = add i32 %v7_1483c, 4
  %v2_14b74 = inttoptr i32 %v1_14b74 to i32*
  %v3_14b74 = load i32, i32* %v2_14b74, align 4
  store i32 %v3_14b74, i32* %r3.global-to-local, align 4
  store i32 %v0_14b34, i32* %r2.global-to-local, align 4
  %v1_14b7c = and i32 %v3_14b74, -2
  store i32 %v1_14b7c, i32* @r7, align 4
  %v2_14b80 = sub i32 %v1_14b7c, %v0_14b34
  store i32 %v2_14b80, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14b84

dec_label_pc_14b84:                               ; preds = %dec_label_pc_14c88, %dec_label_pc_14b74
  %v0_14b84 = phi i32 [ %v2_14c94, %dec_label_pc_14c88 ], [ %v2_14b80, %dec_label_pc_14b74 ]
  %v3_14b84 = udiv i32 %v0_14b84, 16
  store i32 %v3_14b84, i32* %r3.global-to-local, align 4
  %v1_14b88 = add nsw i32 %v3_14b84, -1
  store i32 %v1_14b88, i32* @r0, align 4
  %tmp82 = icmp ult i32 %v1_14b88, 33
  br i1 %tmp82, label %dec_label_pc_14bb4, label %dec_label_pc_14b94

dec_label_pc_14b94:                               ; preds = %dec_label_pc_14b84
  %tmp83 = icmp ugt i32 %v1_14b88, 7168
  br i1 %tmp83, label %.thread45, label %dec_label_pc_14ba0

.thread45:                                        ; preds = %dec_label_pc_14b94
  store i32 63, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14bac

dec_label_pc_14ba0:                               ; preds = %dec_label_pc_14b94
  %v0_14ba0 = call i32 @function_18038()
  %v3_14ba4 = udiv i32 %v0_14ba0, 2097152
  %v1_14ba8 = add nsw i32 %v3_14ba4, -496
  store i32 %v1_14ba8, i32* %r0.global-to-local, align 4
  %v0_14bac.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_14bac

dec_label_pc_14bac:                               ; preds = %.thread45, %dec_label_pc_14ba0
  %v1_14bac = phi i32 [ %v1_14ba8, %dec_label_pc_14ba0 ], [ 63, %.thread45 ]
  %v0_14bac = phi i32 [ %v0_14bac.pre, %dec_label_pc_14ba0 ], [ %v0_14b60, %.thread45 ]
  %v9_14bac = icmp eq i32 %v0_14bac, %v1_14bac
  br i1 %v9_14bac, label %dec_label_pc_14d28, label %dec_label_pc_14bac.dec_label_pc_14bb4_crit_edge

dec_label_pc_14bac.dec_label_pc_14bb4_crit_edge:  ; preds = %dec_label_pc_14bac
  %v0_14bb4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14bb4

dec_label_pc_14bb4:                               ; preds = %dec_label_pc_14bac.dec_label_pc_14bb4_crit_edge, %dec_label_pc_14c80, %dec_label_pc_14c88, %dec_label_pc_14b84, %dec_label_pc_14b60
  %v1_14ccc = phi i32 [ %v0_14bac, %dec_label_pc_14bac.dec_label_pc_14bb4_crit_edge ], [ %v0_14b60, %dec_label_pc_14c80 ], [ 63, %dec_label_pc_14c88 ], [ %v0_14b60, %dec_label_pc_14b84 ], [ %v0_14b60, %dec_label_pc_14b60 ]
  %v0_14bb4 = phi i32 [ %v0_14bb4.pre, %dec_label_pc_14bac.dec_label_pc_14bb4_crit_edge ], [ %v7_1483c, %dec_label_pc_14c80 ], [ %v7_1483c, %dec_label_pc_14c88 ], [ %v7_1483c, %dec_label_pc_14b84 ], [ %v7_1483c, %dec_label_pc_14b60 ]
  %v1_14bb4 = add i32 %v0_14bb4, 8
  store i32 %v1_14bb4, i32* %r3.global-to-local, align 4
  %v1_14bb8 = inttoptr i32 %v1_14bb4 to i32*
  %v2_14bb8 = load i32, i32* %v1_14bb8, align 4
  store i32 %v2_14bb8, i32* %r3.global-to-local, align 4
  %v3_14bb8 = add i32 %v0_14bb4, 12
  %v4_14bb8 = inttoptr i32 %v3_14bb8 to i32*
  %v5_14bb8 = load i32, i32* %v4_14bb8, align 4
  store i32 %v5_14bb8, i32* %ip.global-to-local, align 4
  %v9_14bbc = icmp eq i32 %v5_14bb8, %v2_14bb8
  br i1 %v9_14bbc, label %dec_label_pc_14cb8, label %dec_label_pc_14bc4

dec_label_pc_14bc4:                               ; preds = %dec_label_pc_14bb4, %dec_label_pc_14d1c
  %v1_14bcc = phi i32 [ %v5_14bb8, %dec_label_pc_14bb4 ], [ %v5_14d20, %dec_label_pc_14d1c ]
  %v0_14bcc = phi i32 [ %v2_14bb8, %dec_label_pc_14bb4 ], [ %v2_14d20, %dec_label_pc_14d1c ]
  %v0_14bc4 = phi i32 [ %v0_14bb4, %dec_label_pc_14bb4 ], [ %v0_14d1c, %dec_label_pc_14d1c ]
  %v1_14bc4 = add i32 %v0_14bc4, 4
  %v2_14bc4 = inttoptr i32 %v1_14bc4 to i32*
  %v3_14bc4 = load i32, i32* %v2_14bc4, align 4
  %v1_14bc8 = or i32 %v3_14bc4, 1
  store i32 %v1_14bc8, i32* %r2.global-to-local, align 4
  %v2_14bcc = add i32 %v1_14bcc, 8
  %v3_14bcc = inttoptr i32 %v2_14bcc to i32*
  store i32 %v0_14bcc, i32* %v3_14bcc, align 4
  %v0_14bd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14bd0 = and i32 %v0_14bd0, -2
  store i32 %v1_14bd0, i32* @r0, align 4
  %v1_14bd4 = load i32, i32* @r5, align 4
  %v2_14bd4 = add i32 %v1_14bd4, %v1_14bd0
  %v3_14bd4 = inttoptr i32 %v2_14bd4 to i32*
  %v4_14bd4 = load i32, i32* %v3_14bd4, align 4
  store i32 %v4_14bd4, i32* %r3.global-to-local, align 4
  %v1_14bd8 = add i32 %v1_14bd4, 8
  %v2_14bd8 = inttoptr i32 %v1_14bd8 to i32*
  %v3_14bd8 = load i32, i32* %v2_14bd8, align 4
  store i32 %v3_14bd8, i32* %r1.global-to-local, align 4
  %v1_14bdc = or i32 %v4_14bd4, 1
  store i32 %v1_14bdc, i32* %r3.global-to-local, align 4
  %v0_14be0 = load i32, i32* %ip.global-to-local, align 4
  %v2_14be0 = add i32 %v3_14bd8, 12
  %v3_14be0 = inttoptr i32 %v2_14be0 to i32*
  store i32 %v0_14be0, i32* %v3_14be0, align 4
  %v0_14be4 = load i32, i32* %r3.global-to-local, align 4
  %v1_14be4 = load i32, i32* @r0, align 4
  %v2_14be4 = load i32, i32* @r5, align 4
  %v3_14be4 = add i32 %v2_14be4, %v1_14be4
  %v4_14be4 = inttoptr i32 %v3_14be4 to i32*
  store i32 %v0_14be4, i32* %v4_14be4, align 4
  %v0_14be8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14be8 = load i32, i32* @r5, align 4
  %v2_14be8 = add i32 %v1_14be8, 4
  %v3_14be8 = inttoptr i32 %v2_14be8 to i32*
  store i32 %v0_14be8, i32* %v3_14be8, align 4
  %v0_14bec = load i32, i32* @r5, align 4
  store i32 %v0_14bec, i32* @r8, align 4
  br label %dec_label_pc_14bf0

dec_label_pc_14bf0:                               ; preds = %dec_label_pc_14d28, %dec_label_pc_14bc4
  %v0_14bf0 = load i32, i32* @r6, align 4
  %v1_14bf0 = add i32 %v0_14bf0, 8
  store i32 %v1_14bf0, i32* %r2.global-to-local, align 4
  %v1_14bf4 = load i32, i32* @sl, align 4
  %v2_14bf4 = add i32 %v1_14bf4, %v1_14bf0
  %v3_14bf4 = inttoptr i32 %v2_14bf4 to i32*
  %v4_14bf4 = load i32, i32* %v3_14bf4, align 4
  store i32 %v4_14bf4, i32* %r3.global-to-local, align 4
  %v2_14bf8 = icmp eq i32 %v4_14bf4, 0
  store i1 %v2_14bf8, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_14bf4, i32* @r4, align 4
  br i1 %v2_14bf8, label %dec_label_pc_149d0, label %dec_label_pc_14c08

dec_label_pc_14c08:                               ; preds = %dec_label_pc_14bf0
  %v0_14c08 = call i32 @function_16760()
  store i32 %v0_14c08, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14c10 = load i32, i32* %r2.global-to-local, align 4
  %v2_14c10 = load i32, i32* %r1.global-to-local, align 4
  %v3_14c10 = add i32 %v2_14c10, %v1_14c10
  %v4_14c10 = inttoptr i32 %v3_14c10 to i32*
  store i32 0, i32* %v4_14c10, align 4
  %v0_14c14 = call i32 @function_16760()
  store i32 %v0_14c14, i32* %r0.global-to-local, align 4
  %v0_14c18 = load i32, i32* @r6, align 4
  %v1_14c18 = add i32 %v0_14c18, 12
  store i32 %v1_14c18, i32* %r3.global-to-local, align 4
  %v1_14c1c = load i32, i32* %r1.global-to-local, align 4
  %v2_14c1c = add i32 %v1_14c1c, %v1_14c18
  %v3_14c1c = inttoptr i32 %v2_14c1c to i32*
  %v4_14c1c = load i32, i32* %v3_14c1c, align 4
  store i32 %v4_14c1c, i32* %r2.global-to-local, align 4
  %v2_14c20 = icmp eq i32 %v4_14c1c, 0
  br i1 %v2_14c20, label %dec_label_pc_149d0, label %dec_label_pc_14c28

dec_label_pc_14c28:                               ; preds = %dec_label_pc_14c08
  store i32 240, i32* @r7, align 4
  %v0_14c2c = load i32, i32* @r4, align 4
  store i32 %v0_14c2c, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_14c40 = icmp eq i32 %v0_14c2c, -38
  br i1 %v4_14c40, label %dec_label_pc_14c44, label %dec_label_pc_149d0

dec_label_pc_14c44:                               ; preds = %dec_label_pc_14c28
  store i32 -38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_149d0

dec_label_pc_14c54:                               ; preds = %dec_label_pc_14970
  store i32 240, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  %v0_14c60 = load i32, i32* @r4, align 4
  store i32 %v0_14c60, i32* %r2.global-to-local, align 4
  br i1 icmp ne (i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32 -38), label %dec_label_pc_1498c, label %dec_label_pc_14c70

dec_label_pc_14c70:                               ; preds = %dec_label_pc_14c54
  store i32 %v0_14c60, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1498c

dec_label_pc_14c80:                               ; preds = %dec_label_pc_14b68
  %v7_14c80 = icmp eq i32 %v0_14b60, 63
  br i1 %v7_14c80, label %dec_label_pc_14c88, label %dec_label_pc_14bb4

dec_label_pc_14c88:                               ; preds = %dec_label_pc_14c80
  %v1_14c88 = add i32 %v7_1483c, 4
  %v2_14c88 = inttoptr i32 %v1_14c88 to i32*
  %v3_14c88 = load i32, i32* %v2_14c88, align 4
  store i32 %v3_14c88, i32* %r3.global-to-local, align 4
  store i32 %v0_14b34, i32* %r1.global-to-local, align 4
  %v1_14c90 = and i32 %v3_14c88, -2
  store i32 %v1_14c90, i32* @r7, align 4
  %v2_14c94 = sub i32 %v1_14c90, %v0_14b34
  store i32 %v2_14c94, i32* %r4.global-to-local, align 4
  %tmp84 = icmp ult i32 %v2_14c94, 114689
  br i1 %tmp84, label %dec_label_pc_14bb4, label %dec_label_pc_14b84

dec_label_pc_14ca4:                               ; preds = %dec_label_pc_1490c
  %v2_14ca4 = load i32, i32* @global_var_230fc.582, align 4
  store i32 %v2_14ca4, i32* @r3, align 4
  %v2_14ca8 = icmp eq i32 %v2_14ca4, 0
  store i1 %v2_14ca8, i1* @cpsr_z, align 1
  br i1 %v2_14ca8, label %dec_label_pc_14cb0, label %dec_label_pc_14ddc

dec_label_pc_14cb0:                               ; preds = %.thread14, %dec_label_pc_14ca4, %dec_label_pc_14df4, %dec_label_pc_14ddc
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_149ec

dec_label_pc_14cb8:                               ; preds = %dec_label_pc_14bb4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_14cbc = sub i32 32, %v1_14ccc
  store i32 %v1_14cbc, i32* %r1.global-to-local, align 4
  %v7_14cc4 = lshr i32 1, %v1_14cbc
  store i32 %v7_14cc4, i32* %r4.global-to-local, align 4
  %v1_14cc8 = add i32 %v1_14ccc, -32
  store i32 %v1_14cc8, i32* %r0.global-to-local, align 4
  %v6_14cc8 = icmp slt i32 %v1_14cc8, 0
  %v7_14cc8 = icmp eq i32 %v1_14ccc, 32
  store i1 %v7_14cc8, i1* @cpsr_z, align 1
  %v6_14ccc = shl i32 1, %v1_14ccc
  store i32 %v6_14ccc, i32* %r3.global-to-local, align 4
  br i1 %v6_14cc8, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_14cb8
  %v7_14cd0 = shl i32 1, %v1_14cc8
  store i32 %v7_14cd0, i32* %r4.global-to-local, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_14cb8, %bb66
  %v0_14cdc = phi i32 [ %v7_14cc4, %dec_label_pc_14cb8 ], [ %v7_14cd0, %bb66 ]
  %v1_14cd4 = sub i32 -1, %v6_14ccc
  store i32 %v1_14cd4, i32* @r7, align 4
  %v1_14cdc = sub i32 -1, %v0_14cdc
  store i32 %v1_14cdc, i32* @r8, align 4
  store i32 %v1_14cd4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14ce4

dec_label_pc_14ce4:                               ; preds = %dec_label_pc_14ce4.dec_label_pc_14ce4_crit_edge, %bb67
  %v1_14cec = phi i32 [ %v1_14cec.pre, %dec_label_pc_14ce4.dec_label_pc_14ce4_crit_edge ], [ %v1_14cd4, %bb67 ]
  %v2_14ce4 = load i32, i32* @global_var_23108.564, align 4
  store i32 %v2_14ce4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23108.564 to i32), i32* %r2.global-to-local, align 4
  %v2_14cec = and i32 %v2_14ce4, %v1_14cec
  store i32 %v2_14cec, i32* %r1.global-to-local, align 4
  %v4_14cf0 = call i32 @function_167b4(i32 %v2_14ce4, i32 %v2_14cec, i32* nonnull @global_var_23108.564)
  store i32 %v4_14cf0, i32* %r0.global-to-local, align 4
  %v2_14cf4 = icmp eq i32 %v4_14cf0, 0
  store i1 %v2_14cf4, i1* @cpsr_z, align 1
  br i1 %v2_14cf4, label %dec_label_pc_14cfc, label %dec_label_pc_14ce4.dec_label_pc_14ce4_crit_edge

dec_label_pc_14ce4.dec_label_pc_14ce4_crit_edge:  ; preds = %dec_label_pc_14ce4
  %v1_14cec.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14ce4

dec_label_pc_14cfc:                               ; preds = %dec_label_pc_14ce4
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* @sb, align 4
  %v0_14d00 = load i32, i32* @r8, align 4
  store i32 %v0_14d00, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14d04

dec_label_pc_14d04:                               ; preds = %dec_label_pc_14d04.dec_label_pc_14d04_crit_edge, %dec_label_pc_14cfc
  %v1_14d0c = phi i32 [ %v1_14d0c.pre, %dec_label_pc_14d04.dec_label_pc_14d04_crit_edge ], [ %v0_14d00, %dec_label_pc_14cfc ]
  %v2_14d04 = load i32, i32* @global_var_2310c.566, align 4
  store i32 %v2_14d04, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2310c.566 to i32), i32* %r2.global-to-local, align 4
  %v2_14d0c = and i32 %v2_14d04, %v1_14d0c
  store i32 %v2_14d0c, i32* %r1.global-to-local, align 4
  %v4_14d10 = call i32 @function_167b4(i32 %v2_14d04, i32 %v2_14d0c, i32* nonnull @global_var_2310c.566)
  store i32 %v4_14d10, i32* %r0.global-to-local, align 4
  %v2_14d14 = icmp eq i32 %v4_14d10, 0
  store i1 %v2_14d14, i1* @cpsr_z, align 1
  br i1 %v2_14d14, label %dec_label_pc_14d1c, label %dec_label_pc_14d04.dec_label_pc_14d04_crit_edge

dec_label_pc_14d04.dec_label_pc_14d04_crit_edge:  ; preds = %dec_label_pc_14d04
  %v1_14d0c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14d04

dec_label_pc_14d1c:                               ; preds = %dec_label_pc_14d04
  %v0_14d1c = load i32, i32* @r5, align 4
  %v1_14d1c = add i32 %v0_14d1c, 8
  store i32 %v1_14d1c, i32* %r3.global-to-local, align 4
  %v1_14d20 = inttoptr i32 %v1_14d1c to i32*
  %v2_14d20 = load i32, i32* %v1_14d20, align 4
  store i32 %v2_14d20, i32* %r3.global-to-local, align 4
  %v3_14d20 = add i32 %v0_14d1c, 12
  %v4_14d20 = inttoptr i32 %v3_14d20 to i32*
  %v5_14d20 = load i32, i32* %v4_14d20, align 4
  store i32 %v5_14d20, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14bc4

dec_label_pc_14d28:                               ; preds = %dec_label_pc_14bac
  store i32 %v0_14b34, i32* %ip.global-to-local, align 4
  %v0_14d2c = load i32, i32* @r5, align 4
  %v1_14d2c = add i32 %v0_14d2c, 12
  %v2_14d2c = inttoptr i32 %v1_14d2c to i32*
  %v3_14d2c = load i32, i32* %v2_14d2c, align 4
  store i32 %v3_14d2c, i32* @r0, align 4
  %v1_14d30 = add i32 %v0_14d2c, 8
  %v2_14d30 = inttoptr i32 %v1_14d30 to i32*
  %v3_14d30 = load i32, i32* %v2_14d30, align 4
  store i32 %v3_14d30, i32* %r2.global-to-local, align 4
  %v2_14d34 = add i32 %v0_14d2c, %v0_14b34
  store i32 %v2_14d34, i32* %r3.global-to-local, align 4
  %v2_14d38 = add i32 %v2_14d34, 8
  %v3_14d38 = inttoptr i32 %v2_14d38 to i32*
  store i32 %v3_14d30, i32* %v3_14d38, align 4
  %v0_14d3c = load i32, i32* %r3.global-to-local, align 4
  %v1_14d3c = load i32, i32* @r0, align 4
  %v2_14d3c = add i32 %v1_14d3c, 8
  %v3_14d3c = inttoptr i32 %v2_14d3c to i32*
  store i32 %v0_14d3c, i32* %v3_14d3c, align 4
  %v0_14d40 = load i32, i32* %r3.global-to-local, align 4
  %v1_14d40 = add i32 %v0_14d40, 8
  %v2_14d40 = inttoptr i32 %v1_14d40 to i32*
  %v3_14d40 = load i32, i32* %v2_14d40, align 4
  store i32 %v3_14d40, i32* %r1.global-to-local, align 4
  %v0_14d44 = load i32, i32* %ip.global-to-local, align 4
  %v1_14d44 = or i32 %v0_14d44, 1
  store i32 %v1_14d44, i32* %r2.global-to-local, align 4
  %v0_14d48 = load i32, i32* @r5, align 4
  store i32 %v0_14d48, i32* @r8, align 4
  %v0_14d4c = load i32, i32* %r4.global-to-local, align 4
  %v2_14d4c = add i32 %v0_14d40, 4
  %v3_14d4c = inttoptr i32 %v2_14d4c to i32*
  store i32 %v0_14d4c, i32* %v3_14d4c, align 4
  %v0_14d50 = load i32, i32* @r0, align 4
  %v1_14d50 = load i32, i32* %r3.global-to-local, align 4
  %v2_14d50 = add i32 %v1_14d50, 12
  %v3_14d50 = inttoptr i32 %v2_14d50 to i32*
  store i32 %v0_14d50, i32* %v3_14d50, align 4
  %v0_14d54 = load i32, i32* %r2.global-to-local, align 4
  %v1_14d54 = load i32, i32* @r5, align 4
  %v2_14d54 = load i32, i32* %ip.global-to-local, align 4
  %v3_14d54 = add i32 %v2_14d54, %v1_14d54
  %v4_14d54 = inttoptr i32 %v3_14d54 to i32*
  store i32 %v0_14d54, i32* %v4_14d54, align 4
  %v0_14d58 = load i32, i32* %r2.global-to-local, align 4
  %v1_14d58 = load i32, i32* @r5, align 4
  %v2_14d58 = add i32 %v1_14d58, 4
  %v3_14d58 = inttoptr i32 %v2_14d58 to i32*
  store i32 %v0_14d58, i32* %v3_14d58, align 4
  %v0_14d5c = load i32, i32* %r3.global-to-local, align 4
  %v1_14d5c = load i32, i32* %r1.global-to-local, align 4
  %v2_14d5c = add i32 %v1_14d5c, 12
  %v3_14d5c = inttoptr i32 %v2_14d5c to i32*
  store i32 %v0_14d5c, i32* %v3_14d5c, align 4
  %v0_14d60 = load i32, i32* %r4.global-to-local, align 4
  %v1_14d60 = load i32, i32* @r7, align 4
  %v2_14d60 = load i32, i32* @r5, align 4
  %v3_14d60 = add i32 %v2_14d60, %v1_14d60
  %v4_14d60 = inttoptr i32 %v3_14d60 to i32*
  store i32 %v0_14d60, i32* %v4_14d60, align 4
  br label %dec_label_pc_14bf0

dec_label_pc_14d68:                               ; preds = %dec_label_pc_14af0
  %v1_14d6c = add i32 %v1_14af4, 4103
  %v1_14d74 = and i32 %v1_14d6c, -4096
  store i32 %v1_14d74, i32* @r6, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 %v1_14d74, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v7_14da0 = call i32 @function_150c0(i32 0, i32 %v1_14d74, i32 3, i32 34, i32 -1, i32 0, i32 0)
  store i32 %v7_14da0, i32* %r0.global-to-local, align 4
  %v3_14da4 = icmp eq i32 %v7_14da0, -1
  %v8_14da4 = icmp eq i32 %v7_14da0, -1
  br i1 %v8_14da4, label %.thread14, label %bb68

bb68:                                             ; preds = %dec_label_pc_14d68
  %v2_14da8 = add i32 %v7_14da0, 8
  store i32 %v2_14da8, i32* @r3, align 4
  %v1_14dac = load i32, i32* @r6, align 4
  %v2_14dac = add i32 %v1_14dac, -8
  store i32 %v2_14dac, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_14db4 = add i32 %v7_14da0, 16
  store i32 %v2_14db4, i32* @ip, align 4
  %v4_14db8 = inttoptr i32 %v2_14da8 to i32*
  store i32 8, i32* %v4_14db8, align 4
  %v1_14dbc = load i32, i32* %r1.global-to-local, align 4
  %v2_14dbc = load i32, i32* @r3, align 4
  %v3_14dbc = add i32 %v2_14dbc, 4
  %v4_14dbc = inttoptr i32 %v3_14dbc to i32*
  store i32 %v1_14dbc, i32* %v4_14dbc, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_14d68, %bb68
  br i1 %v3_14da4, label %dec_label_pc_14cb0, label %dec_label_pc_149ec

dec_label_pc_14dc8:                               ; preds = %dec_label_pc_14760
  %v0_14dc8 = call i32 @function_13994()
  store i32 %v0_14dc8, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* @ip, align 4
  %v2_14dd4 = inttoptr i32 %v0_14dc8 to i32*
  store i32 12, i32* %v2_14dd4, align 4
  br label %dec_label_pc_149ec

dec_label_pc_14ddc:                               ; preds = %dec_label_pc_14ca4
  %v0_14ddc = call i32 @function_16760()
  store i32 %v0_14ddc, i32* @r0, align 4
  %v0_14de0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14de0 = load i32, i32* @r6, align 4
  %v2_14de0 = inttoptr i32 %v1_14de0 to i32*
  store i32 %v0_14de0, i32* %v2_14de0, align 4
  %v0_14de4 = call i32 @function_16760()
  store i32 %v0_14de4, i32* %r0.global-to-local, align 4
  %v3_14de8 = load i32, i32* @global_var_23100.585, align 4
  store i32 %v3_14de8, i32* @r3, align 4
  %v2_14dec = icmp eq i32 %v3_14de8, 0
  br i1 %v2_14dec, label %dec_label_pc_14cb0, label %dec_label_pc_14df4

dec_label_pc_14df4:                               ; preds = %dec_label_pc_14ddc
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 icmp ne (i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32 -38), label %dec_label_pc_14cb0, label %dec_label_pc_14e10

dec_label_pc_14e10:                               ; preds = %dec_label_pc_14df4
  store i32 ptrtoint (i32* @global_var_230fc.582 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_14e1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14e1c, i32* @ip, align 4
  br label %dec_label_pc_149ec

; uselistorder directives
  uselistorder i32 %v7_14da0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_14d20, { 1, 0 }
  uselistorder i32 %v2_14d20, { 1, 0 }
  uselistorder i32 %v0_14d1c, { 1, 2, 0 }
  uselistorder i32 %v2_14d04, { 1, 0, 2 }
  uselistorder i32 %v2_14ce4, { 1, 0, 2 }
  uselistorder i32 %v1_14cd4, { 2, 1, 0 }
  uselistorder i32 %v1_14cc8, { 0, 2, 1 }
  uselistorder i32 %v2_14c94, { 0, 2, 1 }
  uselistorder i32 %v1_14bd4, { 1, 0 }
  uselistorder i32 %v0_14bb4, { 0, 2, 1 }
  uselistorder i32 %v3_14b84, { 1, 0 }
  uselistorder i32 %v2_14b6c, { 1, 0 }
  uselistorder i32 %v1_14b68, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_14b28, { 1, 0 }
  uselistorder i32 %v3_14b24, { 1, 0 }
  uselistorder i32 %v1_14b08, { 2, 0, 3, 1 }
  uselistorder i32 %v3_14b04, { 1, 0 }
  uselistorder i32 %v1_14af4, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_14a24, { 1, 0 }
  uselistorder i32 %v1_14998, { 0, 2, 1, 3 }
  uselistorder i32 %v2_14950, { 1, 0, 2 }
  uselistorder i32 %v2_14910, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32 %v2_148e4, { 0, 2, 1 }
  uselistorder i32 %v2_148e0, { 0, 2, 1 }
  uselistorder i32 %v4_14848, { 1, 0 }
  uselistorder i32 %v7_1483c, { 5, 0, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i32 %v4_1483c, { 0, 2, 1 }
  uselistorder i32 %v0_14b60, { 5, 8, 7, 6, 9, 3, 11, 4, 0, 10, 2, 1, 12 }
  uselistorder i32 %v1_14830, { 0, 2, 1 }
  uselistorder i32 %v3_14824, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v0_14a44, { 1, 0, 2, 3 }
  uselistorder i32 %v0_147cc, { 1, 0 }
  uselistorder i32 %v6_14794, { 1, 2, 0 }
  uselistorder i32 %v1_14790, { 1, 2, 0 }
  uselistorder i32 %v0_14b34, { 0, 7, 6, 5, 9, 8, 2, 1, 3, 10, 12, 11, 4, 13 }
  uselistorder i32 %v1_1478c, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 12, 13, 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 15, 16, 17, 18 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 46 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 26, 20, 22, 21, 23, 25, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 8, 7, 15, 9, 10, 11, 12, 14, 13, 16, 17, 18, 23, 19, 20, 21, 22, 25, 24, 30, 28, 27, 26, 29, 35, 33, 32, 31, 34, 0, 36, 37, 38, 40, 39, 41, 42, 43 }
  uselistorder i32 38, { 3, 4, 5, 8, 6, 7, 0, 9, 1, 10, 2, 11 }
  uselistorder i32 ()* @function_18038, { 4, 1, 2, 3, 0 }
  uselistorder i32 (i32*)* @function_13d28, { 1, 0 }
  uselistorder i32* @global_var_230fc.582, { 3, 1, 4, 2, 5, 0, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_230fc.582 to i32), { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23108.564 to i32), i32 -8), { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 134217728, { 0, 1, 4, 2, 3 }
  uselistorder i32 124511785, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1aa4e.580 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_2310c.566, { 1, 5, 6, 7, 0, 2, 8, 9, 3, 10, 4, 11, 12 }
  uselistorder i32* @global_var_23108.564, { 3, 7, 8, 9, 0, 4, 2, 1, 10, 5, 11, 6, 12, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_23108.564 to i32), { 23, 24, 25, 10, 3, 26, 27, 4, 28, 18, 12, 29, 20, 30, 31, 32, 2, 33, 21, 34, 11, 35, 13, 22, 36, 5, 37, 38, 39, 0, 14, 6, 40, 15, 7, 41, 42, 43, 1, 16, 19, 8, 44, 17, 9, 45 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_14cb0, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14bc4, { 1, 0 }
  uselistorder label %dec_label_pc_14bb4, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_14bac, { 1, 0 }
  uselistorder label %dec_label_pc_14a1c, { 1, 0 }
  uselistorder label %dec_label_pc_149ec, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_149e8, { 1, 0 }
  uselistorder label %dec_label_pc_149d0, { 4, 1, 2, 3, 5, 0 }
  uselistorder label %dec_label_pc_1498c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_14944, { 1, 0 }
  uselistorder label %dec_label_pc_148f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14874, { 1, 0 }
  uselistorder label %dec_label_pc_147c4, { 1, 0 }
  uselistorder label %dec_label_pc_147c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_147a8.loopexit, { 2, 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_14774, { 2, 0, 1 }
}

define i32 @function_14e3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e3c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14e44 = call i32 @function_14744()
  %v2_14e48 = icmp eq i32 %v0_14e44, 0
  br i1 %v2_14e48, label %dec_label_pc_14e88, label %dec_label_pc_14e50

dec_label_pc_14e50:                               ; preds = %dec_label_pc_14e3c
  %v1_14e50 = add i32 %v0_14e44, -4
  %v2_14e50 = inttoptr i32 %v1_14e50 to i32*
  %v3_14e50 = load i32, i32* %v2_14e50, align 4
  %v1_14e54 = urem i32 %v3_14e50, 2
  %v2_14e54 = icmp eq i32 %v1_14e54, 0
  br i1 %v2_14e54, label %dec_label_pc_14e88, label %dec_label_pc_14e5c

dec_label_pc_14e5c:                               ; preds = %dec_label_pc_14e50
  %v0_14e5c = load i32, i32* @r4, align 4
  %v1_14e5c = add i32 %v0_14e5c, 3
  %v3_14e60 = udiv i32 %v1_14e5c, 4
  store i32 %v3_14e60, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v1_14e5c, 4
  br i1 %tmp, label %dec_label_pc_14e88, label %dec_label_pc_14e68

dec_label_pc_14e68:                               ; preds = %dec_label_pc_14e5c
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14e6c

dec_label_pc_14e6c:                               ; preds = %.thread, %dec_label_pc_14e68
  %v0_14e7c2 = phi i32 [ %v1_14e7c, %.thread ], [ %v3_14e60, %dec_label_pc_14e68 ]
  %v2_14e78 = phi i32 [ %v1_14e80, %.thread ], [ 0, %dec_label_pc_14e68 ]
  %v2_14e6c = add i32 %v2_14e78, %v0_14e44
  %v3_14e6c = inttoptr i32 %v2_14e6c to i32*
  %v4_14e6c = load i32, i32* %v3_14e6c, align 4
  %v2_14e70 = icmp eq i32 %v4_14e6c, 0
  br i1 %v2_14e70, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14e6c
  store i32 0, i32* %v3_14e6c, align 4
  %v0_14e7c.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_14e80.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14e6c, %bb
  %v0_14e80 = phi i32 [ %v2_14e78, %dec_label_pc_14e6c ], [ %v0_14e80.pre, %bb ]
  %v0_14e7c = phi i32 [ %v0_14e7c2, %dec_label_pc_14e6c ], [ %v0_14e7c.pre, %bb ]
  %v1_14e7c = add i32 %v0_14e7c, -1
  store i32 %v1_14e7c, i32* %r2.global-to-local, align 4
  %v7_14e7c = icmp eq i32 %v0_14e7c, 1
  %v1_14e80 = add i32 %v0_14e80, 4
  store i32 %v1_14e80, i32* %r1.global-to-local, align 4
  br i1 %v7_14e7c, label %dec_label_pc_14e88.loopexit, label %dec_label_pc_14e6c

dec_label_pc_14e88.loopexit:                      ; preds = %.thread
  br label %dec_label_pc_14e88

dec_label_pc_14e88:                               ; preds = %dec_label_pc_14e88.loopexit, %dec_label_pc_14e5c, %dec_label_pc_14e50, %dec_label_pc_14e3c
  ret i32 %v0_14e44

; uselistorder directives
  uselistorder i32 %v1_14e80, { 1, 0 }
  uselistorder i32 %v1_14e7c, { 1, 0 }
  uselistorder i32 %v2_14e78, { 1, 0 }
  uselistorder i32 %v3_14e60, { 1, 0 }
  uselistorder i32 %v0_14e44, { 2, 0, 1, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14e90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14e90:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_14e90 = load i32, i32* @r4, align 4
  store i32 %v3_14e90, i32* %stack_var_-32, align 4
  %v6_14e90 = load i32, i32* @r5, align 4
  %v9_14e90 = load i32, i32* @r6, align 4
  %v12_14e90 = load i32, i32* @r7, align 4
  %v15_14e90 = load i32, i32* @r8, align 4
  %v18_14e90 = load i32, i32* @sb, align 4
  %v21_14e90 = load i32, i32* @sl, align 4
  %v24_14e90 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_14e94 = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @r0, align 4
  br i1 %v2_14e94, label %dec_label_pc_1502c, label %dec_label_pc_14ea0

dec_label_pc_14ea0:                               ; preds = %dec_label_pc_14e90
  store i32 2147479535, i32* %r3.global-to-local, align 4
  %v1_14ea8 = add i32 %arg2, -1
  %tmp = icmp ult i32 %v1_14ea8, 2147479536
  br i1 %tmp, label %.thread, label %dec_label_pc_14ebc

.thread:                                          ; preds = %dec_label_pc_14ea0
  %v5_14eb0 = add i32 %arg2, 23
  store i32 %v5_14eb0, i32* %r3.global-to-local, align 4
  %v5_14eb4 = and i32 %v5_14eb0, -16
  br label %dec_label_pc_14ec8

dec_label_pc_14ebc:                               ; preds = %dec_label_pc_14ea0
  %v2_14ebc = icmp eq i32 %arg2, 0
  br i1 %v2_14ebc, label %dec_label_pc_14ec8, label %dec_label_pc_15058

dec_label_pc_14ec8:                               ; preds = %dec_label_pc_14ebc, %.thread
  %v0_14fc0 = phi i32 [ %v5_14eb4, %.thread ], [ 16, %dec_label_pc_14ebc ]
  store i32 %v0_14fc0, i32* @r5, align 4
  %v1_14ec8 = add i32 %arg1, -8
  store i32 %v1_14ec8, i32* @r4, align 4
  %v1_14ecc = add i32 %arg1, -4
  %v2_14ecc = inttoptr i32 %v1_14ecc to i32*
  %v3_14ecc = load i32, i32* %v2_14ecc, align 4
  %v1_14ed0 = urem i32 %v3_14ecc, 2
  store i32 %v1_14ed0, i32* %r3.global-to-local, align 4
  %v2_14ed0 = icmp eq i32 %v1_14ed0, 0
  %v1_14ed4 = and i32 %v3_14ecc, -2
  store i32 %v1_14ed4, i32* @r6, align 4
  br i1 %v2_14ed0, label %dec_label_pc_14edc, label %dec_label_pc_14f4c

dec_label_pc_14edc:                               ; preds = %dec_label_pc_14ec8
  %v2_14edc = inttoptr i32 %v1_14ec8 to i32*
  %v3_14edc = load i32, i32* %v2_14edc, align 4
  store i32 %v3_14edc, i32* @r7, align 4
  %v1_14ee0 = urem i32 %v3_14edc, 2
  %v2_14ee0 = icmp eq i32 %v1_14ee0, 0
  %v2_14ee4 = add i32 %v3_14edc, %v0_14fc0
  store i32 %v2_14ee4, i32* @r8, align 4
  br i1 %v2_14ee0, label %bb34, label %bb33

bb33:                                             ; preds = %dec_label_pc_14edc
  call void @llvm.trap()
  unreachable

bb34:                                             ; preds = %dec_label_pc_14edc
  %v3_14ef0 = icmp ult i32 %v2_14ee4, 4094
  br i1 %v3_14ef0, label %dec_label_pc_14fc0, label %dec_label_pc_14ef4

dec_label_pc_14ef4:                               ; preds = %dec_label_pc_14fc0.dec_label_pc_14ef4_crit_edge, %bb34
  %v1_14f00 = phi i32 [ %v1_14f00.pre, %dec_label_pc_14fc0.dec_label_pc_14ef4_crit_edge ], [ %v3_14edc, %bb34 ]
  %v0_14f00 = phi i32 [ %v0_14f00.pre, %dec_label_pc_14fc0.dec_label_pc_14ef4_crit_edge ], [ %v1_14ed4, %bb34 ]
  %v0_14ef4 = phi i32 [ %v0_14ef4.pre, %dec_label_pc_14fc0.dec_label_pc_14ef4_crit_edge ], [ %v2_14ee4, %bb34 ]
  %v1_14ef8 = add i32 %v0_14ef4, 4095
  store i32 %v1_14ef8, i32* %r3.global-to-local, align 4
  %v2_14f00 = add i32 %v1_14f00, %v0_14f00
  store i32 %v2_14f00, i32* %r6.global-to-local, align 4
  %v1_14f04 = and i32 %v1_14ef8, -4096
  store i32 %v1_14f04, i32* %r5.global-to-local, align 4
  %v9_14f08 = icmp eq i32 %v2_14f00, %v1_14f04
  br i1 %v9_14f08, label %bb37, label %dec_label_pc_14f10

dec_label_pc_14f10:                               ; preds = %dec_label_pc_14ef4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v1_14f04, i32* @r2, align 4
  %v1_14f18 = load i32, i32* @r4, align 4
  %v2_14f18 = sub i32 %v1_14f18, %v1_14f00
  store i32 %v2_14f18, i32* @r0, align 4
  store i32 %v2_14f00, i32* %r1.global-to-local, align 4
  %v4_14f20 = call i32 @function_15180(i32 %v2_14f18, i32 %v2_14f00, i32 %v1_14f04, i32 1)
  store i32 %v4_14f20, i32* %r0.global-to-local, align 4
  %v3_14f24 = icmp eq i32 %v4_14f20, -1
  %v8_14f24 = icmp eq i32 %v4_14f20, -1
  br i1 %v8_14f24, label %.thread3, label %bb35

bb35:                                             ; preds = %dec_label_pc_14f10
  %v1_14f28 = load i32, i32* @r7, align 4
  %v3_14f28 = add i32 %v1_14f28, %v4_14f20
  store i32 %v3_14f28, i32* %r3.global-to-local, align 4
  %v2_14f2c = load i32, i32* %r5.global-to-local, align 4
  %v3_14f2c = sub i32 %v2_14f2c, %v1_14f28
  %v2_14f30 = add i32 %v3_14f28, 8
  store i32 %v2_14f30, i32* @sb, align 4
  %v3_14f34 = add i32 %v3_14f28, 4
  %v4_14f34 = inttoptr i32 %v3_14f34 to i32*
  store i32 %v3_14f2c, i32* %v4_14f34, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14f10, %bb35
  br i1 %v3_14f24, label %dec_label_pc_14f3c, label %dec_label_pc_14f88

dec_label_pc_14f3c:                               ; preds = %.thread3
  %v0_14f3c = load i32, i32* %r6.global-to-local, align 4
  %v1_14f3c = load i32, i32* %r5.global-to-local, align 4
  %tmp41 = icmp ugt i32 %v0_14f3c, %v1_14f3c
  br i1 %tmp41, label %bb37, label %bb36

bb36:                                             ; preds = %dec_label_pc_14f3c
  store i32 0, i32* @sl, align 4
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_14f3c, %dec_label_pc_14ef4, %bb36
  %v0_14f44 = load i32, i32* @sl, align 4
  store i32 %v0_14f44, i32* @sb, align 4
  br label %dec_label_pc_14f88

dec_label_pc_14f4c:                               ; preds = %dec_label_pc_14ec8
  %v2_14f4c = add i32 %v1_14ed4, %v1_14ec8
  %v3_14f4c = inttoptr i32 %v2_14f4c to i32*
  %v4_14f4c = load i32, i32* %v3_14f4c, align 4
  store i32 %v4_14f4c, i32* %r3.global-to-local, align 4
  %v9_14f50 = icmp eq i32 %v3_14ecc, %v4_14f4c
  br i1 %v9_14f50, label %.thread4, label %bb38

bb38:                                             ; preds = %dec_label_pc_14f4c
  store i32 0, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_14f4c
  %v3_14f5c = icmp ult i32 %v1_14ed4, %v0_14fc0
  br i1 %v3_14f5c, label %dec_label_pc_14fe8, label %.thread9

.thread9:                                         ; preds = %.thread4
  %v2_14f60 = or i32 %v3_14ecc, 1
  store i32 %v2_14f60, i32* %r3.global-to-local, align 4
  store i32 %v2_14f4c, i32* @r7, align 4
  store i32 %v2_14f60, i32* %v3_14f4c, align 4
  %v1_14f6c = load i32, i32* %r3.global-to-local, align 4
  %v2_14f6c = load i32, i32* @r4, align 4
  %v3_14f6c = add i32 %v2_14f6c, 4
  %v4_14f6c = inttoptr i32 %v3_14f6c to i32*
  store i32 %v1_14f6c, i32* %v4_14f6c, align 4
  br label %dec_label_pc_14f74

dec_label_pc_14f74:                               ; preds = %dec_label_pc_15034, %.thread9
  %v0_14f74 = load i32, i32* %r3.global-to-local, align 4
  %v1_14f74 = and i32 %v0_14f74, -2
  store i32 %v1_14f74, i32* %r1.global-to-local, align 4
  %v1_14f78 = add i32 %v1_14f74, -16
  %v1_14f7c = load i32, i32* @r5, align 4
  %tmp42 = icmp ugt i32 %v1_14f78, %v1_14f7c
  br i1 %tmp42, label %dec_label_pc_14f94, label %dec_label_pc_14f84

dec_label_pc_14f84:                               ; preds = %dec_label_pc_14f74, %dec_label_pc_14f94
  %v0_14f84 = load i32, i32* @r4, align 4
  %v1_14f84 = add i32 %v0_14f84, 8
  store i32 %v1_14f84, i32* @sb, align 4
  br label %dec_label_pc_14f88

dec_label_pc_14f88:                               ; preds = %.thread3, %dec_label_pc_15004, %dec_label_pc_14fd0, %bb37, %dec_label_pc_15058, %dec_label_pc_15014, %dec_label_pc_14f84
  %v0_14f88 = load i32, i32* @sb, align 4
  store i32 %v0_14f88, i32* %r0.global-to-local, align 4
  %v2_14f8c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_14f8c, i32* @r4, align 4
  store i32 %v6_14e90, i32* @r5, align 4
  store i32 %v9_14e90, i32* @r6, align 4
  store i32 %v12_14e90, i32* @r7, align 4
  store i32 %v15_14e90, i32* @r8, align 4
  store i32 %v18_14e90, i32* @sb, align 4
  store i32 %v21_14e90, i32* @sl, align 4
  store i32 %v24_14e90, i32* @lr, align 4
  ret i32 %v0_14f88

dec_label_pc_14f94:                               ; preds = %dec_label_pc_14f74
  %v2_14f94 = sub i32 %v1_14f74, %v1_14f7c
  %v1_14f98 = or i32 %v2_14f94, 1
  store i32 %v1_14f98, i32* %r3.global-to-local, align 4
  %v0_14f9c = load i32, i32* @r4, align 4
  %v2_14f9c = add i32 %v0_14f9c, %v1_14f7c
  store i32 %v2_14f9c, i32* %r0.global-to-local, align 4
  %v1_14fa0 = or i32 %v1_14f7c, 1
  store i32 %v1_14fa0, i32* @r2, align 4
  %v2_14fa4 = add i32 %v2_14f9c, 4
  %v3_14fa4 = inttoptr i32 %v2_14fa4 to i32*
  store i32 %v1_14f98, i32* %v3_14fa4, align 4
  %v0_14fa8 = load i32, i32* @r2, align 4
  %v1_14fa8 = load i32, i32* @r4, align 4
  %v2_14fa8 = load i32, i32* @r5, align 4
  %v3_14fa8 = add i32 %v2_14fa8, %v1_14fa8
  %v4_14fa8 = inttoptr i32 %v3_14fa8 to i32*
  store i32 %v0_14fa8, i32* %v4_14fa8, align 4
  %v0_14fac = load i32, i32* @r2, align 4
  %v1_14fac = load i32, i32* @r4, align 4
  %v2_14fac = add i32 %v1_14fac, 4
  %v3_14fac = inttoptr i32 %v2_14fac to i32*
  store i32 %v0_14fac, i32* %v3_14fac, align 4
  %v0_14fb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_14fb0 = load i32, i32* @r4, align 4
  %v2_14fb0 = load i32, i32* %r1.global-to-local, align 4
  %v3_14fb0 = add i32 %v2_14fb0, %v1_14fb0
  %v4_14fb0 = inttoptr i32 %v3_14fb0 to i32*
  store i32 %v0_14fb0, i32* %v4_14fb0, align 4
  %v0_14fb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_14fb4 = add i32 %v0_14fb4, 8
  store i32 %v1_14fb4, i32* %r0.global-to-local, align 4
  %v1_14fb8 = call i32 @function_14248(i32 %v1_14fb4)
  store i32 %v1_14fb8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14f84

dec_label_pc_14fc0:                               ; preds = %bb34
  store i32 %v0_14fc0, i32* @r0, align 4
  %v0_14fc4 = call i32 @function_14744()
  store i32 %v0_14fc4, i32* %r0.global-to-local, align 4
  store i32 %v0_14fc4, i32* @sb, align 4
  %v2_14fc8 = icmp eq i32 %v0_14fc4, 0
  br i1 %v2_14fc8, label %dec_label_pc_14fc0.dec_label_pc_14ef4_crit_edge, label %dec_label_pc_14fd0

dec_label_pc_14fc0.dec_label_pc_14ef4_crit_edge:  ; preds = %dec_label_pc_14fc0
  %v0_14ef4.pre = load i32, i32* @r8, align 4
  %v0_14f00.pre = load i32, i32* @r6, align 4
  %v1_14f00.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14ef4

dec_label_pc_14fd0:                               ; preds = %dec_label_pc_14fc0
  %v0_14fd0 = load i32, i32* @r5, align 4
  %v1_14fd0 = add i32 %v0_14fd0, -8
  %v0_14fd4 = load i32, i32* @sl, align 4
  store i32 %v0_14fd4, i32* %r1.global-to-local, align 4
  %v3_14fd8 = inttoptr i32 %v0_14fc4 to i16*
  %v4_14fd8 = call i32 @function_15bb8(i16* %v3_14fd8, i32 %v0_14fd4, i32 %v1_14fd0)
  %v0_14fdc = load i32, i32* @sl, align 4
  store i32 %v0_14fdc, i32* %r0.global-to-local, align 4
  %v1_14fe0 = call i32 @function_14248(i32 %v0_14fdc)
  store i32 %v1_14fe0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14f88

dec_label_pc_14fe8:                               ; preds = %.thread4
  store i32 %v2_14f4c, i32* @r7, align 4
  store i32 %v2_14f4c, i32* %r0.global-to-local, align 4
  %v1_14fec = call i32 @function_13fb8(i32 %v2_14f4c)
  store i32 %v1_14fec, i32* %r0.global-to-local, align 4
  %v2_14ff0 = icmp eq i32 %v1_14fec, 0
  br i1 %v2_14ff0, label %.thread12, label %dec_label_pc_15034

.thread12:                                        ; preds = %dec_label_pc_14fe8
  %v1_14ff4 = load i32, i32* @r6, align 4
  %v2_14ff4 = or i32 %v1_14ff4, 1
  store i32 %v2_14ff4, i32* %r3.global-to-local, align 4
  %v2_14ff8 = load i32, i32* @r4, align 4
  %v4_14ff8 = add i32 %v2_14ff8, %v1_14ff4
  %v5_14ff8 = inttoptr i32 %v4_14ff8 to i32*
  store i32 %v2_14ff4, i32* %v5_14ff8, align 4
  %v1_14ffc = load i32, i32* %r3.global-to-local, align 4
  %v2_14ffc = load i32, i32* @r4, align 4
  %v3_14ffc = add i32 %v2_14ffc, 4
  %v4_14ffc = inttoptr i32 %v3_14ffc to i32*
  store i32 %v1_14ffc, i32* %v4_14ffc, align 4
  br label %dec_label_pc_15004

dec_label_pc_15004:                               ; preds = %dec_label_pc_15034, %.thread12
  %v0_15004 = load i32, i32* @r5, align 4
  %v1_15004 = add i32 %v0_15004, -8
  store i32 %v1_15004, i32* @r0, align 4
  %v0_15008 = call i32 @function_14744()
  store i32 %v0_15008, i32* %r0.global-to-local, align 4
  store i32 %v0_15008, i32* @sb, align 4
  %v2_1500c = icmp eq i32 %v0_15008, 0
  br i1 %v2_1500c, label %dec_label_pc_14f88, label %dec_label_pc_15014

dec_label_pc_15014:                               ; preds = %dec_label_pc_15004
  %v0_15014 = load i32, i32* @sl, align 4
  store i32 %v0_15014, i32* %r1.global-to-local, align 4
  %v0_15018 = load i32, i32* @r6, align 4
  %v1_15018 = add i32 %v0_15018, -8
  %v3_1501c = inttoptr i32 %v0_15008 to i16*
  %v4_1501c = call i32 @function_15bb8(i16* %v3_1501c, i32 %v0_15014, i32 %v1_15018)
  %v0_15020 = load i32, i32* @r4, align 4
  %v1_15020 = add i32 %v0_15020, 8
  store i32 %v1_15020, i32* %r0.global-to-local, align 4
  %v1_15024 = call i32 @function_14248(i32 %v1_15020)
  store i32 %v1_15024, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14f88

dec_label_pc_1502c:                               ; preds = %dec_label_pc_14e90
  store i32 %v21_14e90, i32* @sl, align 4
  %v0_15030 = call i32 @function_14744()
  store i32 %v0_15030, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15034

dec_label_pc_15034:                               ; preds = %dec_label_pc_14fe8, %dec_label_pc_1502c
  %v0_15034 = load i32, i32* @r7, align 4
  %v1_15034 = add i32 %v0_15034, 4
  %v2_15034 = inttoptr i32 %v1_15034 to i32*
  %v3_15034 = load i32, i32* %v2_15034, align 4
  %v1_15038 = and i32 %v3_15034, -2
  %v1_1503c = load i32, i32* @r6, align 4
  %v2_1503c = add i32 %v1_1503c, %v1_15038
  %v1_15040 = load i32, i32* @r5, align 4
  %v3_15040 = icmp ult i32 %v2_1503c, %v1_15040
  %v1_15044 = or i32 %v2_1503c, 1
  store i32 %v1_15044, i32* %r3.global-to-local, align 4
  %v3_15048 = add i32 %v1_15038, %v0_15034
  %v4_15048 = inttoptr i32 %v3_15048 to i32*
  store i32 %v1_15044, i32* %v4_15048, align 4
  %v0_1504c = load i32, i32* %r3.global-to-local, align 4
  %v1_1504c = load i32, i32* @r4, align 4
  %v2_1504c = add i32 %v1_1504c, 4
  %v3_1504c = inttoptr i32 %v2_1504c to i32*
  store i32 %v0_1504c, i32* %v3_1504c, align 4
  br i1 %v3_15040, label %dec_label_pc_15004, label %dec_label_pc_14f74

dec_label_pc_15058:                               ; preds = %dec_label_pc_14ebc
  %v0_15058 = call i32 @function_13994()
  store i32 %v0_15058, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_15064 = inttoptr i32 %v0_15058 to i32*
  store i32 12, i32* %v2_15064, align 4
  br label %dec_label_pc_14f88

; uselistorder directives
  uselistorder i32 %v1_14f7c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_14f4c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_14f28, { 1, 0 }
  uselistorder i32 %v4_14f20, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14f00, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14ee4, { 1, 0, 2 }
  uselistorder i32 %v3_14edc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_14ed4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_14ed0, { 1, 0 }
  uselistorder i32 %v3_14ecc, { 1, 2, 3, 0 }
  uselistorder i32 %v0_14fc0, { 0, 2, 1, 3 }
  uselistorder i32 %v21_14e90, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 14, 16, 17, 0, 1, 2, 3, 15, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 15, 13, 14, 16, 2, 4, 3, 5, 6, 7, 12, 8, 9, 10, 11, 1, 0 }
  uselistorder i32 (i32)* @function_13fb8, { 1, 0 }
  uselistorder i32 ()* @function_14744, { 58, 4, 3, 0, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 2, 1, 7, 6, 5 }
  uselistorder i32 (i32)* @function_14248, { 0, 4, 3, 1, 5, 7, 6, 2 }
  uselistorder i32 4095, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_15034, { 1, 0 }
  uselistorder label %dec_label_pc_14f88, { 4, 5, 1, 2, 6, 3, 0 }
  uselistorder label %dec_label_pc_14f84, { 1, 0 }
  uselistorder label %bb37, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_1506c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1506c:
  store i32 %arg2, i32* @r2, align 4
  %v0_15090 = call i32 @function_13c40()
  ret i32 %v0_15090
}

define i32 @function_150a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_150a4:
  %v0_150b0 = call i32 @function_13c40()
  ret i32 %v0_150b0
}

define i32 @function_150bc() local_unnamed_addr {
dec_label_pc_150bc:
  %v1_150bc = load i32, i32* @r0, align 4
  ret i32 %v1_150bc
}

define i32 @function_150c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_150c0:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v2_150d8 = urem i32 %arg6, 4096
  %v2_150dc = and i32 %arg7, -4096
  %v2_150e0 = or i32 %v2_150dc, %v2_150d8
  %v4_150e0 = icmp eq i32 %v2_150e0, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg3, i32* %fp.global-to-local, align 4
  %v0_150f0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_150f0, i32* %sl.global-to-local, align 4
  br i1 %v4_150e0, label %dec_label_pc_15108, label %dec_label_pc_150f8

dec_label_pc_150f8:                               ; preds = %dec_label_pc_150c0
  %v0_150f8 = call i32 @function_13994()
  br label %dec_label_pc_1511c

dec_label_pc_15108:                               ; preds = %dec_label_pc_150c0
  %tmp = icmp ult i32 %arg2, 2147483647
  br i1 %tmp, label %dec_label_pc_15124, label %dec_label_pc_15110

dec_label_pc_15110:                               ; preds = %dec_label_pc_15108
  %v0_15110 = call i32 @function_13994()
  br label %dec_label_pc_1511c

dec_label_pc_1511c:                               ; preds = %dec_label_pc_150f8, %dec_label_pc_15110
  %storemerge1 = phi i32 [ %v0_150f8, %dec_label_pc_150f8 ], [ %v0_15110, %dec_label_pc_15110 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_150f8 ], [ 12, %dec_label_pc_15110 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %storemerge, i32* @r3, align 4
  %v2_1511c = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_1511c, align 4
  %v0_15164.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15164

dec_label_pc_15124:                               ; preds = %dec_label_pc_15108
  %v1_15124 = and i32 %v0_150f0, 16
  %v2_15124 = icmp eq i32 %v1_15124, 0
  br i1 %v2_15124, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15124
  store i32 86204, i32* %r3.global-to-local, align 4
  store i32 86324, i32* @lr, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15124, %bb
  %v2_15130 = xor i1 %v2_15124, true
  call void @__pseudo_cond_branch(i1 %v2_15130, i32 ptrtoint (i32* @global_var_150bc.590 to i32))
  %v0_15144 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15144, i32* @r0, align 4
  %v0_15148 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_15148, i32* @r2, align 4
  %v0_1514c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1514c, i32* @r3, align 4
  %v3_15150 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_15150, i32* @r4, align 4
  %v0_1515c = call i32 @function_13c40()
  store i32 %v0_1515c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15164

dec_label_pc_15164:                               ; preds = %dec_label_pc_1511c, %.thread
  %v0_15164 = phi i32 [ %v0_15164.pre, %dec_label_pc_1511c ], [ %v0_1515c, %.thread ]
  ret i32 %v0_15164

; uselistorder directives
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32 -4096, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_15164, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1511c, { 1, 0 }
}

define i32 @function_15180(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15180:
  store i32 %arg2, i32* @r4, align 4
  %v0_151a4 = call i32 @function_13c40()
  ret i32 %v0_151a4
}

define i32 @function_151bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_151bc:
  store i32 %arg1, i32* @r0, align 4
  store i32 86204, i32* @r3, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 86488, i32* @lr, align 4
  %v1_151d4 = call i32 @function_150bc()
  %v0_151d8 = load i32, i32* @r4, align 4
  store i32 %v0_151d8, i32* @r0, align 4
  %v0_151e4 = call i32 @function_13c40()
  ret i32 %v0_151e4
}

define i32 @function_151f4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_151f4:
  store i32 %arg3, i32* @r3, align 4
  %v3_15220 = call i32 @function_1621c(i32 285, i32 %arg1, i32 %arg2)
  store i32 %v3_15220, i32* @r0, align 4
  %v0_15224 = call i32 @function_13c40()
  ret i32 %v0_15224
}

define i32 @function_15238(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15238:
  store i32 %arg1, i32* @r0, align 4
  %v3_1523c = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_15250 = call i32 @function_13c40()
  store i32 %v3_1523c, i32* @r4, align 4
  ret i32 %v0_15250
}

define i32 @function_15260(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15260:
  store i32 %arg3, i32* @r3, align 4
  %v3_1528c = call i32 @function_1621c(i32 283, i32 %arg1, i32 %arg2)
  store i32 %v3_1528c, i32* @r0, align 4
  %v0_15290 = call i32 @function_13c40()
  ret i32 %v0_15290
}

define i32 @function_152a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_152a4:
  store i32 %arg1, i32* @r0, align 4
  %v3_152a8 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_152bc = call i32 @function_13c40()
  store i32 %v3_152a8, i32* @r4, align 4
  ret i32 %v0_152bc
}

define i32 @function_152cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_152cc:
  store i32 %arg1, i32* @r0, align 4
  %v3_152cc = load i32, i32* @r4, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_152e0 = call i32 @function_13c40()
  store i32 %v3_152cc, i32* @r4, align 4
  ret i32 %v0_152e0
}

define i32 @function_152f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_152f0:
  %v2_1530c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_1530c
}

define i32 @function_15314(i32 %arg1) local_unnamed_addr {
dec_label_pc_15314:
  %v3_15314 = udiv i32 %arg1, 256
  %v4_15318 = mul i32 %arg1, 256
  %v5_15318 = or i32 %v4_15318, %v3_15314
  %v3_1531c = mul i32 %v5_15318, 65536
  store i32 %v3_1531c, i32* @r3, align 4
  %v3_15320 = urem i32 %v5_15318, 65536
  ret i32 %v3_15320

; uselistorder directives
  uselistorder i32 %v5_15318, { 1, 0 }
}

define i32 @function_15328(i32 %arg1) local_unnamed_addr {
dec_label_pc_15328:
  %stack_var_-12 = alloca i32, align 4
  %v2_15330 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_15330, i32* @r1, align 4
  %v0_15334 = call i32 @function_15350()
  %v2_15338 = icmp eq i32 %v0_15334, 0
  %v4_1533c = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_15338, i32 -1, i32 %v4_1533c
  ret i32 %storemerge
}

define i32 @function_15350() local_unnamed_addr {
dec_label_pc_15350:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_15350 = load i32, i32* @r4, align 4
  %v6_15350 = load i32, i32* @r5, align 4
  %v9_15350 = load i32, i32* @r6, align 4
  %v12_15350 = load i32, i32* @r7, align 4
  %v15_15350 = load i32, i32* @r8, align 4
  %v2_15358 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_15358, i32* @r4, align 4
  %v0_1535c = load i32, i32* @r0, align 4
  store i32 %v0_1535c, i32* @r5, align 4
  %v0_15360 = load i32, i32* @r1, align 4
  store i32 %v0_15360, i32* @r8, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_15370 = bitcast i32* %stack_var_-44 to i8*
  %v4_15370 = call i32 @function_16010(i8* %v3_15370, i32 0, i32 16)
  store i32 %v2_15358, i32* @r7, align 4
  %v2_15378 = ptrtoint i8** %stack_var_-28 to i32
  store i32 %v2_15378, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_15380

dec_label_pc_15380:                               ; preds = %dec_label_pc_153e8, %dec_label_pc_15350
  store i32 %v2_15378, i32* @r1, align 4
  %v0_15384 = load i32, i32* @r5, align 4
  store i32 %v0_15384, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v3_1538c = call i32 @function_15b44(i32 %v0_15384, i32 %v2_15378, i32 0)
  %v3_15390 = load i8*, i8** %stack_var_-28, align 4
  %v4_15390 = ptrtoint i8* %v3_15390 to i32
  store i32 %v4_15390, i32* %r1.global-to-local, align 4
  %v1_15394 = load i32, i32* @r5, align 4
  %v9_15394 = icmp eq i32 %v4_15390, %v1_15394
  br i1 %v9_15394, label %dec_label_pc_15464, label %dec_label_pc_1539c

dec_label_pc_1539c:                               ; preds = %dec_label_pc_15380
  %v2_1539c = load i8, i8* %v3_15390, align 1
  %v3_1539c = zext i8 %v2_1539c to i32
  store i32 %v3_1539c, i32* %r2.global-to-local, align 4
  %v2_153a0 = icmp eq i8 %v2_1539c, 0
  br i1 %v2_153a0, label %dec_label_pc_153ac, label %bb

bb:                                               ; preds = %dec_label_pc_1539c
  %v8_153a4 = icmp eq i8 %v2_1539c, 46
  br i1 %v8_153a4, label %dec_label_pc_153ac, label %dec_label_pc_15464

dec_label_pc_153ac:                               ; preds = %dec_label_pc_1539c, %bb
  %v1_153ac = inttoptr i32 %v1_15394 to i8*
  %v2_153ac = load i8, i8* %v1_153ac, align 1
  %v3_153ac = zext i8 %v2_153ac to i32
  %v1_153b0 = add nsw i32 %v3_153ac, -48
  %v1_153b8 = add i32 %v4_15390, 1
  store i32 %v1_153b8, i32* @r5, align 4
  %tmp = icmp ugt i32 %v1_153b0, 9
  br i1 %tmp, label %dec_label_pc_15464, label %dec_label_pc_153c0

dec_label_pc_153c0:                               ; preds = %dec_label_pc_153ac
  %v1_153c4 = load i32, i32* @r7, align 4
  %v2_153c4 = load i32, i32* @r4, align 4
  %v5_153c4 = mul i32 %v2_153c4, 4
  %v6_153c4 = add i32 %v5_153c4, %v1_153c4
  %v7_153c4 = inttoptr i32 %v6_153c4 to i32*
  store i32 %v3_1538c, i32* %v7_153c4, align 4
  %v0_153cc = load i32, i32* @r4, align 4
  br i1 %v2_153a0, label %dec_label_pc_153cc, label %dec_label_pc_153e8

dec_label_pc_153cc:                               ; preds = %dec_label_pc_153c0
  %v7_153cc = icmp eq i32 %v0_153cc, 1
  br i1 %v7_153cc, label %dec_label_pc_15408, label %dec_label_pc_153d4

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153cc
  %v7_153d4 = icmp eq i32 %v0_153cc, 2
  br i1 %v7_153d4, label %dec_label_pc_15420, label %dec_label_pc_153dc

dec_label_pc_153dc:                               ; preds = %dec_label_pc_153d4
  %v2_153dc = icmp eq i32 %v0_153cc, 0
  br i1 %v2_153dc, label %dec_label_pc_153f8, label %dec_label_pc_15434

dec_label_pc_153e8:                               ; preds = %dec_label_pc_153c0
  %v1_153e8 = add i32 %v0_153cc, 1
  store i32 %v1_153e8, i32* @r4, align 4
  %v7_153ec = icmp eq i32 %v1_153e8, 4
  br i1 %v7_153ec, label %dec_label_pc_15464, label %dec_label_pc_15380

dec_label_pc_153f8:                               ; preds = %dec_label_pc_153dc
  %v3_153f8 = load i32, i32* %stack_var_-44, align 4
  %v3_153fc = udiv i32 %v3_153f8, 16777216
  store i32 %v3_153fc, i32* %r2.global-to-local, align 4
  %v1_15400 = urem i32 %v3_153f8, 16777216
  store i32 %v3_153fc, i32* %stack_var_-44, align 4
  br label %dec_label_pc_15408

dec_label_pc_15408:                               ; preds = %dec_label_pc_153cc, %dec_label_pc_153f8
  %stack_var_-40.0 = phi i32 [ %tmp6, %dec_label_pc_153cc ], [ %v1_15400, %dec_label_pc_153f8 ]
  %v3_15410 = urem i32 %stack_var_-40.0, 65536
  %v3_15414 = udiv i32 %stack_var_-40.0, 65536
  store i32 %v3_15414, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15420

dec_label_pc_15420:                               ; preds = %dec_label_pc_153d4, %dec_label_pc_15408
  %stack_var_-36.0 = phi i32 [ %v3_15410, %dec_label_pc_15408 ], [ %tmp5, %dec_label_pc_153d4 ]
  %v3_15424 = udiv i32 %stack_var_-36.0, 256
  store i32 %v3_15424, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15434

dec_label_pc_15434:                               ; preds = %dec_label_pc_153dc, %dec_label_pc_15420
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v2_15358, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1543c

dec_label_pc_1543c:                               ; preds = %dec_label_pc_15448.dec_label_pc_1543c_crit_edge, %dec_label_pc_15434
  %v2_15448 = phi i32 [ %v1_1544c, %dec_label_pc_15448.dec_label_pc_1543c_crit_edge ], [ 0, %dec_label_pc_15434 ]
  %v0_1543c = phi i32 [ %v0_1543c.pre, %dec_label_pc_15448.dec_label_pc_1543c_crit_edge ], [ %v2_15358, %dec_label_pc_15434 ]
  %v4_1543c = mul i32 %v2_15448, 4
  %v5_1543c = add i32 %v4_1543c, %v0_1543c
  %v6_1543c = inttoptr i32 %v5_1543c to i32*
  %v7_1543c = load i32, i32* %v6_1543c, align 4
  %tmp18 = icmp ugt i32 %v7_1543c, 255
  br i1 %tmp18, label %dec_label_pc_15464, label %dec_label_pc_15448

dec_label_pc_15448:                               ; preds = %dec_label_pc_1543c
  %v1_15448 = trunc i32 %v7_1543c to i8
  %v3_15448 = load i32, i32* @r8, align 4
  %v4_15448 = add i32 %v3_15448, %v2_15448
  %v5_15448 = inttoptr i32 %v4_15448 to i8*
  store i8 %v1_15448, i8* %v5_15448, align 1
  %v0_1544c = load i32, i32* %r2.global-to-local, align 4
  %v1_1544c = add i32 %v0_1544c, 1
  store i32 %v1_1544c, i32* %r2.global-to-local, align 4
  %v7_15450 = icmp eq i32 %v1_1544c, 4
  br i1 %v7_15450, label %dec_label_pc_15464, label %dec_label_pc_15448.dec_label_pc_1543c_crit_edge

dec_label_pc_15448.dec_label_pc_1543c_crit_edge:  ; preds = %dec_label_pc_15448
  %v0_1543c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1543c

dec_label_pc_15464:                               ; preds = %dec_label_pc_15380, %dec_label_pc_153ac, %dec_label_pc_153e8, %bb, %dec_label_pc_1543c, %dec_label_pc_15448
  %storemerge = phi i32 [ 1, %dec_label_pc_15448 ], [ 0, %dec_label_pc_1543c ], [ 0, %bb ], [ 0, %dec_label_pc_153e8 ], [ 0, %dec_label_pc_153ac ], [ 0, %dec_label_pc_15380 ]
  store i32 %v3_15350, i32* @r4, align 4
  store i32 %v6_15350, i32* @r5, align 4
  store i32 %v9_15350, i32* @r6, align 4
  store i32 %v12_15350, i32* @r7, align 4
  store i32 %v15_15350, i32* @r8, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_1544c, { 1, 2, 0 }
  uselistorder i32 %v7_1543c, { 1, 0 }
  uselistorder i32 %v3_153fc, { 1, 0 }
  uselistorder i32 %v3_153f8, { 1, 0 }
  uselistorder i32 %v0_153cc, { 3, 0, 1, 2 }
  uselistorder i32 %v2_15378, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-28, { 1, 0 }
  uselistorder i8 46, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_15464, { 5, 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_15434, { 1, 0 }
  uselistorder label %dec_label_pc_15420, { 1, 0 }
  uselistorder label %dec_label_pc_15408, { 1, 0 }
  uselistorder label %dec_label_pc_153ac, { 1, 0 }
}

define i32 @function_15470(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15470:
  store i32 0, i32* @r2, align 4
  %v3_15474 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_1548c = call i32 @function_13c40()
  store i32 %v3_15474, i32* @r4, align 4
  ret i32 %v0_1548c
}

define i32 @function_15498(i32 %arg1) local_unnamed_addr {
dec_label_pc_15498:
  %v2_154b4 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_154b4
}

define i32 @function_154bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_154bc:
  %v3_154bc = udiv i32 %arg1, 256
  %v4_154c0 = mul i32 %arg1, 256
  %v5_154c0 = or i32 %v4_154c0, %v3_154bc
  %v3_154c8 = urem i32 %v5_154c0, 65536
  ret i32 %v3_154c8
}

define i32 @function_154d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_154d0:
  %v0_154e4 = call i32 @function_154f4()
  ret i32 %v0_154e4

; uselistorder directives
  uselistorder i32 ()* @function_154f4, { 1, 0, 4, 3, 2 }
}

define i32 @function_154f4() local_unnamed_addr {
dec_label_pc_154f4:
  %v0_154f4 = load i32, i32* @lr, align 4
  %v0_154f8 = load i32, i32* @r1, align 4
  %v0_15500 = load i32, i32* @r2, align 4
  store i32 %v0_15500, i32* @lr, align 4
  %v0_15514 = load i32, i32* @r0, align 4
  store i32 %v0_15500, i32* @r3, align 4
  %v3_15528 = call i32 @function_1621c(i32 292, i32 %v0_15514, i32 %v0_154f8)
  store i32 %v3_15528, i32* @r0, align 4
  %v0_1552c = call i32 @function_13c40()
  store i32 %v0_154f4, i32* @lr, align 4
  ret i32 %v0_1552c
}

define i32 @function_1553c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1553c:
  %v0_15550 = call i32 @function_15560()
  ret i32 %v0_15550

; uselistorder directives
  uselistorder i32 ()* @function_15560, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
}

define i32 @function_15560() local_unnamed_addr {
dec_label_pc_15560:
  %v0_15560 = load i32, i32* @lr, align 4
  %v0_15564 = load i32, i32* @r1, align 4
  %v0_1556c = load i32, i32* @r2, align 4
  store i32 %v0_1556c, i32* @lr, align 4
  %v0_15580 = load i32, i32* @r0, align 4
  store i32 %v0_1556c, i32* @r3, align 4
  %v3_15594 = call i32 @function_1621c(i32 290, i32 %v0_15580, i32 %v0_15564)
  store i32 %v3_15594, i32* @r0, align 4
  %v0_15598 = call i32 @function_13c40()
  store i32 %v0_15560, i32* @lr, align 4
  ret i32 %v0_15598
}

define i32 @function_155ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_155ac:
  %v3_155ac = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_155c0 = call i32 @function_13c40()
  store i32 %v3_155ac, i32* @r4, align 4
  ret i32 %v0_155c0
}

define i32 @function_155cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_155cc:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_155cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_155cc, label %bb, label %dec_label_pc_155cc._crit_edge

bb:                                               ; preds = %dec_label_pc_155cc
  %v1_155cc = load i32, i32* %r0.global-to-local, align 4
  %v2_155cc = load i32, i32* @r6, align 4
  %v5_155cc = udiv i32 %v2_155cc, 4
  %v6_155cc = and i32 %v5_155cc, %v1_155cc
  store i32 %v6_155cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155cc._crit_edge

dec_label_pc_155cc._crit_edge:                    ; preds = %dec_label_pc_155cc, %bb
  store i32 %arg2, i32* %r0.global-to-local, align 4
  ret i32 %arg2

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_155cc._crit_edge, { 1, 0 }
}

define i32 @function_155f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_155f0:
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  ret i32 %arg2
}

define i32 @function_1561c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1561c:
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v3_1561c = load i32, i32* @r4, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v7_15650 = call i32 @function_155f0(i32 281, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_15650, i32* @r0, align 4
  %v0_15654 = call i32 @function_13c40()
  %v1_15658 = icmp slt i32 %v0_15654, 0
  br i1 %v1_15658, label %dec_label_pc_15660, label %dec_label_pc_156fc

dec_label_pc_15660:                               ; preds = %dec_label_pc_1561c
  %v0_15660 = call i32 @function_13994()
  %v1_15664 = inttoptr i32 %v0_15660 to i32*
  %v2_15664 = load i32, i32* %v1_15664, align 4
  %v7_15668 = icmp eq i32 %v2_15664, 22
  br i1 %v7_15668, label %dec_label_pc_15680, label %dec_label_pc_15670

dec_label_pc_15670:                               ; preds = %dec_label_pc_15660
  %v0_15670 = call i32 @function_13994()
  %v1_15674 = inttoptr i32 %v0_15670 to i32*
  %v2_15674 = load i32, i32* %v1_15674, align 4
  store i32 %v2_15674, i32* @r3, align 4
  %v7_15678 = icmp eq i32 %v2_15674, 93
  br i1 %v7_15678, label %dec_label_pc_15680, label %dec_label_pc_156fc

dec_label_pc_15680:                               ; preds = %dec_label_pc_15670, %dec_label_pc_15660
  %v0_15684 = load i32, i32* %r5.global-to-local, align 4
  %v2_15684 = and i32 %v0_15684, 526336
  store i32 %v2_15684, i32* @r3, align 4
  %v2_15688 = icmp eq i32 %v2_15684, 0
  br i1 %v2_15688, label %dec_label_pc_156fc, label %dec_label_pc_15690

dec_label_pc_15690:                               ; preds = %dec_label_pc_15680
  %v0_15694 = load i32, i32* %r7.global-to-local, align 4
  %v1_15698 = and i32 %v0_15684, -526337
  %v0_1569c = load i32, i32* %r8.global-to-local, align 4
  %v0_156a4 = load i32, i32* @r4, align 4
  %v7_156b0 = call i32 @function_155f0(i32 281, i32 %v0_15694, i32 %v1_15698, i32 %v0_1569c, i32 %v0_156a4, i32 %v0_156a4, i32 %v0_156a4)
  store i32 %v7_156b0, i32* @r0, align 4
  %v0_156b4 = call i32 @function_13c40()
  %v1_156b8 = icmp slt i32 %v0_156b4, 0
  br i1 %v1_156b8, label %dec_label_pc_156fc, label %dec_label_pc_156c0

dec_label_pc_156c0:                               ; preds = %dec_label_pc_15690
  %v0_156c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_156c0 = and i32 %v0_156c0, 524288
  %v2_156c0 = icmp eq i32 %v1_156c0, 0
  br i1 %v2_156c0, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_156c0
  store i32 1, i32* @r3, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_156c0, %bb
  %v1_156d4 = xor i1 %v2_156c0, true
  call void @__pseudo_cond_branch(i1 %v1_156d4, i32 ptrtoint (i32* @global_var_155d0.601 to i32))
  %v0_156d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_156d8 = and i32 %v0_156d8, 2048
  %v2_156d8 = icmp eq i32 %v1_156d8, 0
  br i1 %v2_156d8, label %.thread5, label %bb15

bb15:                                             ; preds = %.thread2
  store i32 2048, i32* @r3, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread2, %bb15
  %v1_156ec = xor i1 %v2_156d8, true
  call void @__pseudo_cond_branch(i1 %v1_156ec, i32 ptrtoint (i32* @global_var_155d0.601 to i32))
  br label %dec_label_pc_156fc

dec_label_pc_156fc:                               ; preds = %dec_label_pc_15680, %dec_label_pc_1561c, %dec_label_pc_15670, %.thread5, %dec_label_pc_15690
  %storemerge.in = phi i32* [ @r4, %dec_label_pc_15690 ], [ @r4, %.thread5 ], [ @r6, %dec_label_pc_15670 ], [ @r6, %dec_label_pc_1561c ], [ @r6, %dec_label_pc_15680 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %v3_1561c, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 524288, { 6, 3, 0, 1, 2, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_155f0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_156fc, { 3, 4, 0, 2, 1 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_15708(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15708:
  %v0_15708 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15708, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15708
  %v2_15708 = load i32, i32* @sb, align 4
  %v8_15708 = shl i32 %v2_15708, %arg2
  %v9_15708 = and i32 %v8_15708, %arg1
  %v1_1570c = load i32, i32* @r8, align 4
  %v5_1570c = mul i32 %v9_15708, 65536
  %v6_1570c = and i32 %v5_1570c, %v1_1570c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15708, %bb
  %v7_1570c = phi i32 [ %arg1, %dec_label_pc_15708 ], [ %v6_1570c, %bb ]
  ret i32 %v7_1570c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15710() local_unnamed_addr {
dec_label_pc_15710:
  %v1_15710 = load i32, i32* @r0, align 4
  ret i32 %v1_15710
}

define i32 @function_15714() local_unnamed_addr {
dec_label_pc_15714:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %v15_15714 = load i32, i32* @lr, align 4
  store i32 -1, i32* @r0, align 4
  %v2_1571c = ptrtoint i32* %stack_var_-152 to i32
  %v1_15728 = call i32 @function_15710()
  %v1_15734 = call i32 @function_15808(i32 %v2_1571c)
  store i32 %v1_15734, i32* @r0, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v0_15740 = call i32 @function_13c40()
  store i32 %v0_15740, i32* %r4.global-to-local, align 4
  %v2_15744 = icmp eq i32 %v0_15740, 0
  br i1 %v2_15744, label %dec_label_pc_1574c, label %dec_label_pc_15770

dec_label_pc_1574c:                               ; preds = %dec_label_pc_15714
  %v0_1574c = call i32 @function_16828()
  store i32 %v0_1574c, i32* %r2.global-to-local, align 4
  %v0_15754 = load i32, i32* %r7.global-to-local, align 4
  %v1_15754 = add i32 %v0_15754, 222
  store i32 %v1_15754, i32* %r7.global-to-local, align 4
  %v2_15760 = add i32 %v0_1574c, -176
  %v3_15760 = inttoptr i32 %v2_15760 to i32*
  store i32 %v0_1574c, i32* %v3_15760, align 4
  %v0_15764 = load i32, i32* %r4.global-to-local, align 4
  %v1_15764 = load i32, i32* %r2.global-to-local, align 4
  %v2_15764 = add i32 %v1_15764, -60
  %v3_15764 = inttoptr i32 %v2_15764 to i32*
  store i32 %v0_15764, i32* %v3_15764, align 4
  %v0_15768 = load i32, i32* %r4.global-to-local, align 4
  %v1_15768 = load i32, i32* %r2.global-to-local, align 4
  %v2_15768 = add i32 %v1_15768, -64
  %v3_15768 = inttoptr i32 %v2_15768 to i32*
  store i32 %v0_15768, i32* %v3_15768, align 4
  %v0_1576c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1576c, i32* @global_var_23838.562, align 4
  br label %dec_label_pc_15770

dec_label_pc_15770:                               ; preds = %dec_label_pc_15714, %dec_label_pc_1574c
  %v1_15774 = call i32 @function_15870(i32 %v2_1571c)
  %v0_15778 = load i32, i32* %r4.global-to-local, align 4
  %v1_15778 = sub i32 1, %v0_15778
  %v2_15778 = icmp ult i32 %v0_15778, 2
  br i1 %v2_15778, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_15770
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_15770, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_15778, %dec_label_pc_15770 ]
  store i32 %storemerge, i32* @r0, align 4
  %v1_15784 = call i32 @function_15710()
  %v0_15788 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v15_15714, i32* @lr, align 4
  ret i32 %v0_15788

; uselistorder directives
  uselistorder i32 -64, { 2, 0, 1 }
  uselistorder i32 222, { 1, 0 }
  uselistorder i32 ()* @function_15710, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_15770, { 1, 0 }
}

define i32 @function_157a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_157a0:
  %v0_157a0 = load i32, i32* @lr, align 4
  store i32 %arg3, i32* @lr, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_157d0 = call i32 @function_1621c(i32 142, i32 %arg1, i32 %arg2)
  store i32 %v3_157d0, i32* @r0, align 4
  %v0_157d4 = call i32 @function_13c40()
  store i32 %v0_157a0, i32* @lr, align 4
  ret i32 %v0_157d4
}

define i32 @function_157e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_157e4:
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  ret i32 %arg2
}

define i32 @function_15808(i32 %arg1) local_unnamed_addr {
dec_label_pc_15808:
  %v5_15828 = call i32 @function_157e4(i32 175, i32 0, i32 ptrtoint (i32* @global_var_1aa78.606 to i32), i32 %arg1, i32 8)
  ret i32 %v5_15828
}

define i32 @function_1583c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1583c:
  %v5_1585c = call i32 @function_157e4(i32 175, i32 0, i32 ptrtoint (i32* @global_var_1aa70.608 to i32), i32 %arg1, i32 8)
  ret i32 %v5_1585c
}

define i32 @function_15870(i32 %arg1) local_unnamed_addr {
dec_label_pc_15870:
  store i32 8, i32* @ip, align 4
  %v5_15890 = call i32 @function_157e4(i32 175, i32 2, i32 %arg1, i32 0, i32 8)
  ret i32 %v5_15890

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_157e4, { 1, 0, 2 }
}

define i32 @function_158a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_158a0:
  %v0_158ac = call i32 @function_13c40()
  ret i32 %v0_158ac
}

define i32 @function_158b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_158b8:
  %stack_var_-144 = alloca i32, align 4
  %v3_158b8 = load i32, i32* @r4, align 4
  %v2_158bc = ptrtoint i32* %stack_var_-144 to i32
  store i32 %arg1, i32* @r4, align 4
  %v1_158cc = call i32 @function_1583c(i32 %v2_158bc)
  store i32 %v1_158cc, i32* @r0, align 4
  %v0_158e4 = call i32 @function_13c40()
  %v1_158f0 = call i32 @function_15870(i32 %v2_158bc)
  store i32 %v3_158b8, i32* @r4, align 4
  ret i32 %v0_158e4
}

define i32 @function_15904(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15904:
  %r2.global-to-local = alloca i32, align 4
  %v1_1590c = add i32 %arg2, -1
  %tmp = icmp ugt i32 %v1_1590c, 63
  br i1 %tmp, label %dec_label_pc_1592c, label %dec_label_pc_15920

dec_label_pc_15920:                               ; preds = %dec_label_pc_15904
  %v1_15920 = add i32 %arg2, -32
  %tmp4 = icmp ugt i32 %v1_15920, 2
  br i1 %tmp4, label %dec_label_pc_15940, label %dec_label_pc_1592c

dec_label_pc_1592c:                               ; preds = %dec_label_pc_15920, %dec_label_pc_15904
  %v0_1592c = call i32 @function_13994()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15938 = inttoptr i32 %v0_1592c to i32*
  store i32 22, i32* %v2_15938, align 4
  %v0_1595c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1595c

dec_label_pc_15940:                               ; preds = %dec_label_pc_15920
  %v3_15940 = udiv i32 %v1_1590c, 32
  %v4_15944 = mul nuw nsw i32 %v3_15940, 4
  %v5_15944 = add i32 %v4_15944, %arg1
  %v6_15944 = inttoptr i32 %v5_15944 to i32*
  %v7_15944 = load i32, i32* %v6_15944, align 4
  %v1_1594c = urem i32 %v1_1590c, 32
  %v7_15950 = shl i32 1, %v1_1594c
  %v8_15950 = or i32 %v7_15944, %v7_15950
  store i32 %v8_15950, i32* %v6_15944, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1595c

dec_label_pc_1595c:                               ; preds = %dec_label_pc_1592c, %dec_label_pc_15940
  %v0_1595c = phi i32 [ %v0_1595c.pre, %dec_label_pc_1592c ], [ 0, %dec_label_pc_15940 ]
  ret i32 %v0_1595c

; uselistorder directives
  uselistorder i32 %v1_1590c, { 2, 1, 0 }
  uselistorder i32 63, { 0, 7, 5, 4, 8, 1, 10, 2, 9, 3, 11, 6 }
  uselistorder label %dec_label_pc_1595c, { 1, 0 }
}

define i32 @function_1596c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1596c:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_15974 = add i32 %tmp, 4
  %v3_15974 = inttoptr i32 %v2_15974 to i32*
  store i32 0, i32* %v3_15974, align 4
  %v1_15978 = load i32, i32* %r3.global-to-local, align 4
  %v2_15978 = inttoptr i32 %v1_15978 to i32*
  store i32 0, i32* %v2_15978, align 4
  ret i32 0
}

define i32 @function_15980(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15980:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v6_15980 = load i32, i32* @r5, align 4
  %v9_15980 = load i32, i32* @r6, align 4
  %v2_15984 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  %v3_1599c = bitcast i32* %stack_var_-296 to i8*
  %v4_1599c = call i32 @function_16010(i8* %v3_1599c, i32 0, i32 140)
  %v0_159a4 = load i32, i32* @r5, align 4
  store i32 %v2_15984, i32* @r1, align 4
  %v2_159ac = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_159ac, i32* @r2, align 4
  %v0_159b0 = load i32, i32* @r6, align 4
  store i32 %v0_159b0, i32* %stack_var_-296, align 4
  %v5_159b8 = call i32 @function_17968(i32 %v0_159a4, i32 %v2_15984, i32 %v2_159ac, i32 268435456, i32 %v0_159b0)
  %v1_159bc = icmp slt i32 %v5_159b8, 0
  br i1 %v1_159bc, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_15980
  %v6_159c0 = load i32, i32* %stack_var_-156, align 4
  br label %bb11

bb10:                                             ; preds = %dec_label_pc_15980
  br label %bb11

bb11:                                             ; preds = %bb, %bb10
  %v1_159d4 = phi i32 [ %v6_159c0, %bb ], [ -1, %bb10 ]
  store i32 %v6_15980, i32* @r5, align 4
  store i32 %v9_15980, i32* @r6, align 4
  ret i32 %v1_159d4

; uselistorder directives
  uselistorder i32* %stack_var_-296, { 1, 0, 2 }
  uselistorder i32 (i8*, i32, i32)* @function_16010, { 0, 4, 6, 7, 1, 2, 3, 5 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_159d8() local_unnamed_addr {
dec_label_pc_159d8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_159d8 = load i32, i32* @r4, align 4
  store i32 %v3_159d8, i32* %stack_var_-8, align 4
  %v0_159dc = call i32 @function_163c4()
  store i32 %v0_159dc, i32* %r4.global-to-local, align 4
  %v2_159e0 = icmp eq i32 %v0_159dc, 0
  br i1 %v2_159e0, label %dec_label_pc_159f4, label %dec_label_pc_159e8

dec_label_pc_159e8:                               ; preds = %dec_label_pc_159d8
  %v0_159e8 = call i32 @function_13994()
  %v0_159ec = load i32, i32* %r4.global-to-local, align 4
  %v2_159ec = inttoptr i32 %v0_159e8 to i32*
  store i32 %v0_159ec, i32* %v2_159ec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_159f4

dec_label_pc_159f4:                               ; preds = %dec_label_pc_159d8, %dec_label_pc_159e8
  %v0_159f4 = phi i32 [ 0, %dec_label_pc_159d8 ], [ -1, %dec_label_pc_159e8 ]
  %v2_159f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_159f8, i32* @r4, align 4
  ret i32 %v0_159f4

; uselistorder directives
  uselistorder label %dec_label_pc_159f4, { 1, 0 }
}

define i32 @function_15a00(i32 %arg1) local_unnamed_addr {
dec_label_pc_15a00:
  %v0_15a0c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15a0c

dec_label_pc_15a08:                               ; preds = %dec_label_pc_15a0c, %bb29
  %v1_15a08 = add i32 %v0_15a08, 1
  br label %dec_label_pc_15a0c

dec_label_pc_15a0c:                               ; preds = %dec_label_pc_15a00, %dec_label_pc_15a08
  %v0_15a08 = phi i32 [ %v0_15a0c.pre, %dec_label_pc_15a00 ], [ %v1_15a08, %dec_label_pc_15a08 ]
  %v1_15a0c = inttoptr i32 %v0_15a08 to i8*
  %v2_15a0c = load i8, i8* %v1_15a0c, align 1
  %v3_15a0c = zext i8 %v2_15a0c to i32
  %v1_15a10 = add nsw i32 %v3_15a0c, -9
  %v7_15a14 = icmp eq i8 %v2_15a0c, 32
  br i1 %v7_15a14, label %dec_label_pc_15a08, label %bb

bb:                                               ; preds = %dec_label_pc_15a0c
  %v3_15a18 = icmp ugt i32 %v1_15a10, 3
  %v8_15a18 = icmp eq i32 %v1_15a10, 4
  %v2_15a1c = xor i1 %v8_15a18, true
  %v3_15a1c = and i1 %v3_15a18, %v2_15a1c
  br i1 %v3_15a1c, label %bb28, label %bb29

bb28:                                             ; preds = %bb
  br label %bb29

bb29:                                             ; preds = %bb, %bb28
  %v1_15a347 = phi i32 [ %v1_15a10, %bb ], [ 0, %bb28 ]
  %v2_15a20 = xor i1 %v3_15a18, true
  %v3_15a20 = or i1 %v8_15a18, %v2_15a20
  br i1 %v3_15a20, label %dec_label_pc_15a08, label %dec_label_pc_15a28

dec_label_pc_15a28:                               ; preds = %bb29
  %v7_15a28 = icmp eq i8 %v2_15a0c, 43
  br i1 %v7_15a28, label %dec_label_pc_15a48, label %dec_label_pc_15a30

dec_label_pc_15a30:                               ; preds = %dec_label_pc_15a28
  %v7_15a30 = icmp eq i8 %v2_15a0c, 45
  br i1 %v7_15a30, label %dec_label_pc_15a48, label %bb30

bb30:                                             ; preds = %dec_label_pc_15a30
  br label %dec_label_pc_15a4c

dec_label_pc_15a48:                               ; preds = %dec_label_pc_15a28, %dec_label_pc_15a30
  %storemerge = phi i32 [ 1, %dec_label_pc_15a30 ], [ %v1_15a347, %dec_label_pc_15a28 ]
  %v1_15a48 = add i32 %v0_15a08, 1
  br label %dec_label_pc_15a4c

dec_label_pc_15a4c:                               ; preds = %bb30, %dec_label_pc_15a48
  %v0_15a74 = phi i32 [ %v1_15a347, %bb30 ], [ %storemerge, %dec_label_pc_15a48 ]
  %v0_15a649 = phi i32 [ %v0_15a08, %bb30 ], [ %v1_15a48, %dec_label_pc_15a48 ]
  br label %dec_label_pc_15a64

dec_label_pc_15a58:                               ; preds = %dec_label_pc_15a64
  %v2_15a58 = mul i32 %v0_15a58, 10
  %v1_15a5c = add i32 %v0_15a5c, 1
  %v2_15a60 = sub i32 %v2_15a58, %v1_15a68
  br label %dec_label_pc_15a64

dec_label_pc_15a64:                               ; preds = %dec_label_pc_15a4c, %dec_label_pc_15a58
  %v0_15a58 = phi i32 [ 0, %dec_label_pc_15a4c ], [ %v2_15a60, %dec_label_pc_15a58 ]
  %v0_15a5c = phi i32 [ %v0_15a649, %dec_label_pc_15a4c ], [ %v1_15a5c, %dec_label_pc_15a58 ]
  %v1_15a64 = inttoptr i32 %v0_15a5c to i8*
  %v2_15a64 = load i8, i8* %v1_15a64, align 1
  %v3_15a64 = zext i8 %v2_15a64 to i32
  %v1_15a68 = add nsw i32 %v3_15a64, -48
  %tmp = icmp ult i32 %v1_15a68, 10
  br i1 %tmp, label %dec_label_pc_15a58, label %dec_label_pc_15a74

dec_label_pc_15a74:                               ; preds = %dec_label_pc_15a64
  %v2_15a74 = icmp eq i32 %v0_15a74, 0
  br i1 %v2_15a74, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15a74
  %v2_15a78 = sub i32 0, %v0_15a58
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_15a74, %bb32
  %v0_15a7c = phi i32 [ %v0_15a58, %dec_label_pc_15a74 ], [ %v2_15a78, %bb32 ]
  ret i32 %v0_15a7c

; uselistorder directives
  uselistorder i32 %v0_15a5c, { 1, 0 }
  uselistorder i32 %v1_15a347, { 1, 0 }
  uselistorder i1 %v8_15a18, { 1, 0 }
  uselistorder i32 %v0_15a08, { 0, 1, 3, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder i8 32, { 15, 9, 10, 11, 0, 12, 13, 14, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_15a64, { 1, 0 }
  uselistorder label %dec_label_pc_15a4c, { 1, 0 }
  uselistorder label %dec_label_pc_15a48, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_15a0c, { 1, 0 }
  uselistorder label %dec_label_pc_15a08, { 1, 0 }
}

define i32 @function_15a88() local_unnamed_addr {
dec_label_pc_15a88:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %v6_15a88 = load i32, i32* @r5, align 4
  %v9_15a88 = load i32, i32* @r6, align 4
  %v12_15a88 = load i32, i32* @r7, align 4
  %v0_15a8c = load i32, i32* @r0, align 4
  store i32 %v0_15a8c, i32* @r5, align 4
  %v1_15a8c = icmp slt i32 %v0_15a8c, 0
  %v4_15a98 = add i32 %v0_15a8c, 2147483647
  %storemerge = select i1 %v1_15a8c, i32 -1, i32 %v4_15a98
  %v2_15a9c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_15a9c, i32* @r4, align 4
  %v0_15aa0 = load i32, i32* @r1, align 4
  store i32 %v0_15aa0, i32* @r7, align 4
  %v0_15aac = load i32, i32* @r2, align 4
  store i32 %v0_15aac, i32* @r6, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v7_15ad0 = call i32 @function_171e0(i32 %v2_15a9c, i32 0, i32 0, i32 0, i32 0, i32 %v0_15a8c, i32 %storemerge)
  store i32 %tmp3, i32* @r4, align 4
  %v0_15ae0 = load i32, i32* @r6, align 4
  %v6_15aec = sext i32 %v0_15ae0 to i64
  %v7_15aec = call i32 @function_16a20(i32 %v2_15a9c, i64 %v6_15aec, i32 1, i32 %tmp12, i32 %tmp12, i32 %tmp3)
  %v0_15af0 = load i32, i32* @r7, align 4
  %v2_15af0 = icmp eq i32 %v0_15af0, 0
  br i1 %v2_15af0, label %dec_label_pc_15b14, label %dec_label_pc_15af8

dec_label_pc_15af8:                               ; preds = %dec_label_pc_15a88
  %v0_15b0c = load i32, i32* @r5, align 4
  %v2_15b00 = add i32 %v0_15a8c, %tmp
  %v2_15b08 = sub i32 %v2_15b00, %storemerge
  %v2_15b0c = add i32 %v2_15b08, %v0_15b0c
  %v2_15b10 = inttoptr i32 %v0_15af0 to i32*
  store i32 %v2_15b0c, i32* %v2_15b10, align 4
  br label %dec_label_pc_15b14

dec_label_pc_15b14:                               ; preds = %dec_label_pc_15a88, %dec_label_pc_15af8
  store i32 %v6_15a88, i32* @r5, align 4
  store i32 %v9_15a88, i32* @r6, align 4
  store i32 %v12_15a88, i32* @r7, align 4
  ret i32 %v7_15aec

; uselistorder directives
  uselistorder i32 %v2_15a9c, { 1, 0, 2 }
  uselistorder i32 %v0_15a8c, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_15b14, { 1, 0 }
}

define i32 @function_15b20() local_unnamed_addr {
dec_label_pc_15b20:
  store i32 0, i32* @r4, align 4
  %v0_15b34 = call i32 @function_15a88()
  ret i32 %v0_15b34
}

define i32 @function_15b44(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15b44:
  %v3_15b44 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_15b58 = call i32 @function_15a88()
  store i32 %v3_15b44, i32* @r4, align 4
  ret i32 %v0_15b58
}

define i32 @function_15b68() local_unnamed_addr {
dec_label_pc_15b68:
  store i32 -2147483648, i32* @r4, align 4
  %v0_15b7c = call i32 @function_15a88()
  ret i32 %v0_15b7c
}

define i32 @function_15b90() local_unnamed_addr {
dec_label_pc_15b90:
  store i32 -1, i32* @r4, align 4
  %v0_15ba4 = call i32 @function_15a88()
  ret i32 %v0_15ba4

; uselistorder directives
  uselistorder i32 ()* @function_15a88, { 3, 2, 0, 1 }
}

define i32 @function_15bb8(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15bb8:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_n.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_15bb8 = load i32, i32* %r0.global-to-local, align 4
  %v8_15bb8 = load i32, i32* @r4, align 4
  %v11_15bb8 = load i32, i32* @lr, align 4
  %v0_15bc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_15bc0 = add i32 %v0_15bc0, -4
  %v2_15bc0 = icmp ugt i32 %v0_15bc0, 3
  store i1 %v2_15bc0, i1* %cpsr_c.global-to-local, align 1
  %v6_15bc0 = icmp slt i32 %v1_15bc0, 0
  store i1 %v6_15bc0, i1* %cpsr_n.global-to-local, align 1
  %v3_15bc4 = icmp ult i32 %v0_15bc0, 2
  br i1 %v3_15bc4, label %dec_label_pc_15e94, label %dec_label_pc_15bc8

dec_label_pc_15bc8:                               ; preds = %dec_label_pc_15bb8
  %v0_15bc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15bc8 = sub i32 0, %v0_15bc8
  %v1_15bcc = urem i32 %v1_15bc8, 4
  store i32 %v1_15bcc, i32* @r3, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15bcc = icmp eq i32 %v1_15bcc, 0
  br i1 %v2_15bcc, label %.thread2, label %dec_label_pc_15bd4

dec_label_pc_15bd4:                               ; preds = %dec_label_pc_15bc8
  %v1_15bd4 = and i32 %v1_15bc8, 2
  %v2_15bd4 = icmp ne i32 %v1_15bd4, 0
  store i1 %v2_15bd4, i1* %cpsr_c.global-to-local, align 1
  %v3_15bd4 = shl i32 %v1_15bc8, 31
  store i32 %v3_15bd4, i32* %ip.global-to-local, align 4
  %v4_15bd4 = icmp ne i32 %v3_15bd4, 0
  store i1 %v4_15bd4, i1* %cpsr_n.global-to-local, align 1
  %v2_15bd8 = sub i32 %v0_15bc0, %v1_15bcc
  store i32 %v2_15bd8, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_15bcc to i8
  br i1 %v4_15bd4, label %bb, label %bb128

bb:                                               ; preds = %dec_label_pc_15bd4
  %v2_15bdc = inttoptr i32 %v0_15bc8 to i8*
  %v3_15bdc = load i8, i8* %v2_15bdc, align 1
  %v4_15bdc = zext i8 %v3_15bdc to i32
  store i32 %v4_15bdc, i32* @r3, align 4
  %v6_15bdc = add i32 %v0_15bc8, 1
  store i32 %v6_15bdc, i32* %r1.global-to-local, align 4
  br label %bb128

bb128:                                            ; preds = %dec_label_pc_15bd4, %bb
  %v1_15be8.off0 = phi i8 [ %extract.t, %dec_label_pc_15bd4 ], [ %v3_15bdc, %bb ]
  %v1_15be0 = phi i32 [ %v0_15bc8, %dec_label_pc_15bd4 ], [ %v6_15bdc, %bb ]
  %extract.t191 = trunc i32 %v8_15bb8 to i8
  br i1 %v2_15bd4, label %bb129, label %.thread

bb129:                                            ; preds = %bb128
  %v2_15be0 = inttoptr i32 %v1_15be0 to i8*
  %v3_15be0 = load i8, i8* %v2_15be0, align 1
  %v4_15be0 = zext i8 %v3_15be0 to i32
  store i32 %v4_15be0, i32* @r4, align 4
  %v6_15be0 = add i32 %v1_15be0, 1
  store i32 %v6_15be0, i32* %r1.global-to-local, align 4
  %v2_15be4 = inttoptr i32 %v6_15be0 to i8*
  %v3_15be4 = load i8, i8* %v2_15be4, align 1
  %v4_15be4 = zext i8 %v3_15be4 to i32
  store i32 %v4_15be4, i32* %ip.global-to-local, align 4
  %v6_15be4 = add i32 %v1_15be0, 2
  store i32 %v6_15be4, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb128, %bb129
  %v1_15bec182.off0 = phi i8 [ %extract.t191, %bb128 ], [ %v3_15be0, %bb129 ]
  br i1 %v4_15bd4, label %bb130, label %bb131

bb130:                                            ; preds = %.thread
  %v4_15be8 = inttoptr i32 %v3_15bb8 to i8*
  store i8 %v1_15be8.off0, i8* %v4_15be8, align 1
  %v5_15be8 = load i32, i32* %r0.global-to-local, align 4
  %v6_15be8 = add i32 %v5_15be8, 1
  store i32 %v6_15be8, i32* %r0.global-to-local, align 4
  %v0_15bec.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15bec.pre, label %bb130.bb132_crit_edge, label %.thread2

bb130.bb132_crit_edge:                            ; preds = %bb130
  %v1_15bec.pre = load i32, i32* @r4, align 4
  %extract.t189 = trunc i32 %v1_15bec.pre to i8
  br label %bb132

bb131:                                            ; preds = %.thread
  br i1 %v2_15bd4, label %bb132, label %.thread2

bb132:                                            ; preds = %bb130.bb132_crit_edge, %bb131
  %v1_15bec.off0 = phi i8 [ %extract.t189, %bb130.bb132_crit_edge ], [ %v1_15bec182.off0, %bb131 ]
  %v3_15bec88 = phi i32 [ %v6_15be8, %bb130.bb132_crit_edge ], [ %v3_15bb8, %bb131 ]
  %v4_15bec = inttoptr i32 %v3_15bec88 to i8*
  store i8 %v1_15bec.off0, i8* %v4_15bec, align 1
  %v5_15bec = load i32, i32* %r0.global-to-local, align 4
  %v6_15bec = add i32 %v5_15bec, 1
  store i32 %v6_15bec, i32* %r0.global-to-local, align 4
  %v0_15bf0.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15bf0.pr, label %bb133, label %.thread2

bb133:                                            ; preds = %bb132
  %v1_15bf0 = load i32, i32* %ip.global-to-local, align 4
  %v2_15bf0 = trunc i32 %v1_15bf0 to i8
  %v4_15bf0 = inttoptr i32 %v6_15bec to i8*
  store i8 %v2_15bf0, i8* %v4_15bf0, align 1
  %v5_15bf0 = load i32, i32* %r0.global-to-local, align 4
  %v6_15bf0 = add i32 %v5_15bf0, 1
  store i32 %v6_15bf0, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %bb130, %bb131, %dec_label_pc_15bc8, %bb132, %bb133
  %v1_15c24 = phi i32 [ %v3_15bb8, %bb131 ], [ %v3_15bb8, %dec_label_pc_15bc8 ], [ %v6_15bec, %bb132 ], [ %v6_15bf0, %bb133 ], [ %v6_15be8, %bb130 ]
  %v1_15bf4 = load i32, i32* %r1.global-to-local, align 4
  %v2_15bf4 = xor i32 %v1_15bf4, %v1_15c24
  store i32 %v2_15bf4, i32* @ip, align 4
  %v1_15bf8 = urem i32 %v2_15bf4, 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15bf8 = icmp eq i32 %v1_15bf8, 0
  br i1 %v2_15bf8, label %dec_label_pc_15c00, label %dec_label_pc_15ca8

dec_label_pc_15c00:                               ; preds = %.thread2
  %v2_15c00 = load i32, i32* @r5, align 4
  store i32 %v2_15c00, i32* %stack_var_-40, align 4
  %v5_15c00 = load i32, i32* @r6, align 4
  %v8_15c00 = load i32, i32* @r7, align 4
  %v11_15c00 = load i32, i32* @r8, align 4
  %v14_15c00 = load i32, i32* @sb, align 4
  %v17_15c00 = load i32, i32* @sl, align 4
  %v20_15c00 = load i32, i32* @fp, align 4
  %v1_15c04 = sub i32 0, %v1_15c24
  %v1_15c08 = and i32 %v1_15c04, 28
  store i32 %v1_15c08, i32* @r3, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15c08 = icmp eq i32 %v1_15c08, 0
  %v0_15c3c.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_15c08, label %dec_label_pc_15c3c, label %dec_label_pc_15c10

dec_label_pc_15c10:                               ; preds = %dec_label_pc_15c00
  %v2_15c10 = sub i32 %v1_15c08, %v0_15c3c.pre
  %v3_15c10 = icmp uge i32 %v1_15c08, %v0_15c3c.pre
  store i1 %v3_15c10, i1* %cpsr_c.global-to-local, align 1
  %v8_15c10 = icmp slt i32 %v2_15c10, 0
  store i1 %v8_15c10, i1* %cpsr_n.global-to-local, align 1
  %tmp197 = icmp ugt i32 %v1_15c08, %v0_15c3c.pre
  br i1 %tmp197, label %bb134, label %bb135

bb134:                                            ; preds = %dec_label_pc_15c10
  %v5_15c14 = and i32 %v0_15c3c.pre, 28
  store i32 %v5_15c14, i32* @r3, align 4
  br label %bb135

bb135:                                            ; preds = %dec_label_pc_15c10, %bb134
  %v0_15c18 = phi i32 [ %v1_15c08, %dec_label_pc_15c10 ], [ %v5_15c14, %bb134 ]
  %v1_15c18 = and i32 %v0_15c18, 16
  %v2_15c18 = icmp ne i32 %v1_15c18, 0
  store i1 %v2_15c18, i1* %cpsr_c.global-to-local, align 1
  %v3_15c18 = mul i32 %v0_15c18, 268435456
  store i32 %v3_15c18, i32* @ip, align 4
  %v4_15c18 = icmp slt i32 %v3_15c18, 0
  store i1 %v4_15c18, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_15c18, label %bb136, label %bb137

bb136:                                            ; preds = %bb135
  %v2_15c1c = inttoptr i32 %v1_15bf4 to i32*
  %v3_15c1c = load i32, i32* %v2_15c1c, align 4
  store i32 %v3_15c1c, i32* @r4, align 4
  %v4_15c1c = add i32 %v1_15bf4, 4
  %v5_15c1c = inttoptr i32 %v4_15c1c to i32*
  %v6_15c1c = load i32, i32* %v5_15c1c, align 4
  store i32 %v6_15c1c, i32* @r5, align 4
  %v7_15c1c = add i32 %v1_15bf4, 8
  %v8_15c1c = inttoptr i32 %v7_15c1c to i32*
  %v9_15c1c = load i32, i32* %v8_15c1c, align 4
  store i32 %v9_15c1c, i32* @r6, align 4
  %v10_15c1c = add i32 %v1_15bf4, 12
  %v11_15c1c = inttoptr i32 %v10_15c1c to i32*
  %v12_15c1c = load i32, i32* %v11_15c1c, align 4
  store i32 %v12_15c1c, i32* @r7, align 4
  %v13_15c1c = add i32 %v1_15bf4, 16
  store i32 %v13_15c1c, i32* %r1.global-to-local, align 4
  br i1 %v4_15c18, label %bb138, label %.thread89

bb137:                                            ; preds = %bb135
  br i1 %v4_15c18, label %bb138, label %.thread93

bb138:                                            ; preds = %bb137, %bb136
  %v1_15c20 = phi i32 [ %v13_15c1c, %bb136 ], [ %v1_15bf4, %bb137 ]
  %v2_15c20 = inttoptr i32 %v1_15c20 to i32*
  %v3_15c20 = load i32, i32* %v2_15c20, align 4
  store i32 %v3_15c20, i32* @r8, align 4
  %v4_15c20 = add i32 %v1_15c20, 4
  %v5_15c20 = inttoptr i32 %v4_15c20 to i32*
  %v6_15c20 = load i32, i32* %v5_15c20, align 4
  store i32 %v6_15c20, i32* @sb, align 4
  %v7_15c20 = add i32 %v1_15c20, 8
  store i32 %v7_15c20, i32* %r1.global-to-local, align 4
  br i1 %v2_15c18, label %bb138..thread89_crit_edge, label %.thread91

bb138..thread89_crit_edge:                        ; preds = %bb138
  %v3_15c24.pre = load i32, i32* @r4, align 4
  br label %.thread89

.thread89:                                        ; preds = %bb138..thread89_crit_edge, %bb136
  %v3_15c24 = phi i32 [ %v3_15c24.pre, %bb138..thread89_crit_edge ], [ %v3_15c1c, %bb136 ]
  %v2_15c24 = inttoptr i32 %v1_15c24 to i32*
  store i32 %v3_15c24, i32* %v2_15c24, align 4
  %v4_15c24 = add i32 %v1_15c24, 4
  %v5_15c24 = inttoptr i32 %v4_15c24 to i32*
  %v6_15c24 = load i32, i32* @r5, align 4
  store i32 %v6_15c24, i32* %v5_15c24, align 4
  %v7_15c24 = add i32 %v1_15c24, 8
  %v8_15c24 = inttoptr i32 %v7_15c24 to i32*
  %v9_15c24 = load i32, i32* @r6, align 4
  store i32 %v9_15c24, i32* %v8_15c24, align 4
  %v10_15c24 = add i32 %v1_15c24, 12
  %v11_15c24 = inttoptr i32 %v10_15c24 to i32*
  %v12_15c24 = load i32, i32* @r7, align 4
  store i32 %v12_15c24, i32* %v11_15c24, align 4
  %v13_15c24 = add i32 %v1_15c24, 16
  store i32 %v13_15c24, i32* %r0.global-to-local, align 4
  br i1 %v4_15c18, label %.thread89..thread91_crit_edge, label %.thread93

.thread89..thread91_crit_edge:                    ; preds = %.thread89
  %v3_15c28.pre = load i32, i32* @r8, align 4
  br label %.thread91

.thread91:                                        ; preds = %.thread89..thread91_crit_edge, %bb138
  %v3_15c28 = phi i32 [ %v3_15c28.pre, %.thread89..thread91_crit_edge ], [ %v3_15c20, %bb138 ]
  %v1_15c2892 = phi i32 [ %v13_15c24, %.thread89..thread91_crit_edge ], [ %v1_15c24, %bb138 ]
  %v2_15c28 = inttoptr i32 %v1_15c2892 to i32*
  store i32 %v3_15c28, i32* %v2_15c28, align 4
  %v4_15c28 = add i32 %v1_15c2892, 4
  %v5_15c28 = inttoptr i32 %v4_15c28 to i32*
  %v6_15c28 = load i32, i32* @sb, align 4
  store i32 %v6_15c28, i32* %v5_15c28, align 4
  %v7_15c28 = add i32 %v1_15c2892, 8
  store i32 %v7_15c28, i32* %r0.global-to-local, align 4
  br label %.thread93

.thread93:                                        ; preds = %bb137, %.thread89, %.thread91
  %v2_15c34 = phi i32 [ %v13_15c24, %.thread89 ], [ %v7_15c28, %.thread91 ], [ %v1_15c24, %bb137 ]
  %v0_15c2c = load i32, i32* @r3, align 4
  %v1_15c2c = and i32 %v0_15c2c, 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15c2c = icmp eq i32 %v1_15c2c, 0
  br i1 %v2_15c2c, label %.thread3, label %bb139

bb139:                                            ; preds = %.thread93
  %v1_15c30 = load i32, i32* %r1.global-to-local, align 4
  %v2_15c30 = inttoptr i32 %v1_15c30 to i32*
  %v3_15c30 = load i32, i32* %v2_15c30, align 4
  store i32 %v3_15c30, i32* %sl.global-to-local, align 4
  %v5_15c30 = add i32 %v1_15c30, 4
  store i32 %v5_15c30, i32* %r1.global-to-local, align 4
  %v3_15c34 = inttoptr i32 %v2_15c34 to i32*
  store i32 %v3_15c30, i32* %v3_15c34, align 4
  %v4_15c34 = load i32, i32* %r0.global-to-local, align 4
  %v5_15c34 = add i32 %v4_15c34, 4
  store i32 %v5_15c34, i32* %r0.global-to-local, align 4
  %v1_15c38.pre = load i32, i32* @r3, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread93, %bb139
  %v0_15c4c65 = phi i32 [ %v2_15c34, %.thread93 ], [ %v5_15c34, %bb139 ]
  %v1_15c38 = phi i32 [ %v0_15c2c, %.thread93 ], [ %v1_15c38.pre, %bb139 ]
  %v0_15c38 = load i32, i32* %r2.global-to-local, align 4
  %v2_15c38 = sub i32 %v0_15c38, %v1_15c38
  store i32 %v2_15c38, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %dec_label_pc_15c00, %.thread3
  %v0_15c4c64 = phi i32 [ %v0_15c4c65, %.thread3 ], [ %v1_15c24, %dec_label_pc_15c00 ]
  %v0_15c3c = phi i32 [ %v2_15c38, %.thread3 ], [ %v0_15c3c.pre, %dec_label_pc_15c00 ]
  %v1_15c3c = add i32 %v0_15c3c, -32
  store i32 %v1_15c3c, i32* @r2, align 4
  %v2_15c3c = icmp ugt i32 %v0_15c3c, 31
  store i1 %v2_15c3c, i1* %cpsr_c.global-to-local, align 1
  %v6_15c3c = icmp slt i32 %v1_15c3c, 0
  store i1 %v6_15c3c, i1* %cpsr_n.global-to-local, align 1
  %v3_15c40 = icmp ult i32 %v1_15c3c, 30
  br i1 %v3_15c40, label %dec_label_pc_15c58, label %dec_label_pc_15c44

dec_label_pc_15c44:                               ; preds = %dec_label_pc_15c3c, %dec_label_pc_15c44.dec_label_pc_15c44_crit_edge
  %v0_15c4c = phi i32 [ %v24_15c4c, %dec_label_pc_15c44.dec_label_pc_15c44_crit_edge ], [ %v0_15c4c64, %dec_label_pc_15c3c ]
  %v0_15c48 = phi i32 [ %v0_15c48.pre, %dec_label_pc_15c44.dec_label_pc_15c44_crit_edge ], [ %v1_15c3c, %dec_label_pc_15c3c ]
  %v0_15c44 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c44 = inttoptr i32 %v0_15c44 to i32*
  %v2_15c44 = load i32, i32* %v1_15c44, align 4
  store i32 %v2_15c44, i32* @r4, align 4
  %v3_15c44 = add i32 %v0_15c44, 4
  %v4_15c44 = inttoptr i32 %v3_15c44 to i32*
  %v5_15c44 = load i32, i32* %v4_15c44, align 4
  store i32 %v5_15c44, i32* @r5, align 4
  %v6_15c44 = add i32 %v0_15c44, 8
  %v7_15c44 = inttoptr i32 %v6_15c44 to i32*
  %v8_15c44 = load i32, i32* %v7_15c44, align 4
  store i32 %v8_15c44, i32* @r6, align 4
  %v9_15c44 = add i32 %v0_15c44, 12
  %v10_15c44 = inttoptr i32 %v9_15c44 to i32*
  %v11_15c44 = load i32, i32* %v10_15c44, align 4
  store i32 %v11_15c44, i32* @r7, align 4
  %v12_15c44 = add i32 %v0_15c44, 16
  %v13_15c44 = inttoptr i32 %v12_15c44 to i32*
  %v14_15c44 = load i32, i32* %v13_15c44, align 4
  store i32 %v14_15c44, i32* @r8, align 4
  %v15_15c44 = add i32 %v0_15c44, 20
  %v16_15c44 = inttoptr i32 %v15_15c44 to i32*
  %v17_15c44 = load i32, i32* %v16_15c44, align 4
  store i32 %v17_15c44, i32* @sb, align 4
  %v18_15c44 = add i32 %v0_15c44, 24
  %v19_15c44 = inttoptr i32 %v18_15c44 to i32*
  %v20_15c44 = load i32, i32* %v19_15c44, align 4
  store i32 %v20_15c44, i32* %sl.global-to-local, align 4
  %v21_15c44 = add i32 %v0_15c44, 28
  %v22_15c44 = inttoptr i32 %v21_15c44 to i32*
  %v23_15c44 = load i32, i32* %v22_15c44, align 4
  store i32 %v23_15c44, i32* %fp.global-to-local, align 4
  %v24_15c44 = add i32 %v0_15c44, 32
  store i32 %v24_15c44, i32* %r1.global-to-local, align 4
  %v1_15c48 = add i32 %v0_15c48, -32
  store i32 %v1_15c48, i32* %r2.global-to-local, align 4
  %v2_15c48 = icmp ugt i32 %v0_15c48, 31
  %v1_15c4c = inttoptr i32 %v0_15c4c to i32*
  store i32 %v2_15c44, i32* %v1_15c4c, align 4
  %v3_15c4c = add i32 %v0_15c4c, 4
  %v4_15c4c = inttoptr i32 %v3_15c4c to i32*
  %v5_15c4c = load i32, i32* @r5, align 4
  store i32 %v5_15c4c, i32* %v4_15c4c, align 4
  %v6_15c4c = add i32 %v0_15c4c, 8
  %v7_15c4c = inttoptr i32 %v6_15c4c to i32*
  %v8_15c4c = load i32, i32* @r6, align 4
  store i32 %v8_15c4c, i32* %v7_15c4c, align 4
  %v9_15c4c = add i32 %v0_15c4c, 12
  %v10_15c4c = inttoptr i32 %v9_15c4c to i32*
  %v11_15c4c = load i32, i32* @r7, align 4
  store i32 %v11_15c4c, i32* %v10_15c4c, align 4
  %v12_15c4c = add i32 %v0_15c4c, 16
  %v13_15c4c = inttoptr i32 %v12_15c4c to i32*
  %v14_15c4c = load i32, i32* @r8, align 4
  store i32 %v14_15c4c, i32* %v13_15c4c, align 4
  %v15_15c4c = add i32 %v0_15c4c, 20
  %v16_15c4c = inttoptr i32 %v15_15c4c to i32*
  %v17_15c4c = load i32, i32* @sb, align 4
  store i32 %v17_15c4c, i32* %v16_15c4c, align 4
  %v18_15c4c = add i32 %v0_15c4c, 24
  %v19_15c4c = inttoptr i32 %v18_15c4c to i32*
  %v20_15c4c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v20_15c4c, i32* %v19_15c4c, align 4
  %v21_15c4c = add i32 %v0_15c4c, 28
  %v22_15c4c = inttoptr i32 %v21_15c4c to i32*
  %v23_15c4c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v23_15c4c, i32* %v22_15c4c, align 4
  %v24_15c4c = add i32 %v0_15c4c, 32
  store i32 %v24_15c4c, i32* %r0.global-to-local, align 4
  br i1 %v2_15c48, label %dec_label_pc_15c44.dec_label_pc_15c44_crit_edge, label %dec_label_pc_15c54

dec_label_pc_15c44.dec_label_pc_15c44_crit_edge:  ; preds = %dec_label_pc_15c44
  %v0_15c48.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c44

dec_label_pc_15c54:                               ; preds = %dec_label_pc_15c44
  %v6_15c48 = icmp slt i32 %v1_15c48, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15c48, i1* %cpsr_n.global-to-local, align 1
  %v0_15c54 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c54 = add i32 %v0_15c54, 32
  store i32 %v1_15c54, i32* @r2, align 4
  br label %dec_label_pc_15c58

dec_label_pc_15c58:                               ; preds = %dec_label_pc_15c3c, %dec_label_pc_15c54
  %v1_15c6c = phi i32 [ %v0_15c4c64, %dec_label_pc_15c3c ], [ %v24_15c4c, %dec_label_pc_15c54 ]
  %v0_15c60 = phi i32 [ %v1_15c3c, %dec_label_pc_15c3c ], [ %v1_15c54, %dec_label_pc_15c54 ]
  %v1_15c58 = urem i32 %v0_15c60, 32
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15c58 = icmp eq i32 %v1_15c58, 0
  br i1 %v2_15c58, label %.thread4, label %dec_label_pc_15c60

dec_label_pc_15c60:                               ; preds = %dec_label_pc_15c58
  %v1_15c60 = and i32 %v0_15c60, 16
  %v2_15c60 = icmp ne i32 %v1_15c60, 0
  store i1 %v2_15c60, i1* %cpsr_c.global-to-local, align 1
  %v3_15c60 = mul i32 %v0_15c60, 268435456
  store i32 %v3_15c60, i32* %ip.global-to-local, align 4
  %v4_15c60 = icmp slt i32 %v3_15c60, 0
  store i1 %v4_15c60, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_15c60, label %bb140, label %bb141

bb140:                                            ; preds = %dec_label_pc_15c60
  %v1_15c64 = load i32, i32* %r1.global-to-local, align 4
  %v2_15c64 = inttoptr i32 %v1_15c64 to i32*
  %v3_15c64 = load i32, i32* %v2_15c64, align 4
  store i32 %v3_15c64, i32* @r4, align 4
  %v4_15c64 = add i32 %v1_15c64, 4
  %v5_15c64 = inttoptr i32 %v4_15c64 to i32*
  %v6_15c64 = load i32, i32* %v5_15c64, align 4
  store i32 %v6_15c64, i32* @r5, align 4
  %v7_15c64 = add i32 %v1_15c64, 8
  %v8_15c64 = inttoptr i32 %v7_15c64 to i32*
  %v9_15c64 = load i32, i32* %v8_15c64, align 4
  store i32 %v9_15c64, i32* @r6, align 4
  %v10_15c64 = add i32 %v1_15c64, 12
  %v11_15c64 = inttoptr i32 %v10_15c64 to i32*
  %v12_15c64 = load i32, i32* %v11_15c64, align 4
  store i32 %v12_15c64, i32* @r7, align 4
  %v13_15c64 = add i32 %v1_15c64, 16
  store i32 %v13_15c64, i32* %r1.global-to-local, align 4
  br i1 %v4_15c60, label %bb142, label %.thread94

bb141:                                            ; preds = %dec_label_pc_15c60
  br i1 %v4_15c60, label %._crit_edge, label %.thread98

._crit_edge:                                      ; preds = %bb141
  %v1_15c68.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140, %._crit_edge
  %v1_15c68 = phi i32 [ %v1_15c68.pre, %._crit_edge ], [ %v13_15c64, %bb140 ]
  %v2_15c68 = inttoptr i32 %v1_15c68 to i32*
  %v3_15c68 = load i32, i32* %v2_15c68, align 4
  store i32 %v3_15c68, i32* @r8, align 4
  %v4_15c68 = add i32 %v1_15c68, 4
  %v5_15c68 = inttoptr i32 %v4_15c68 to i32*
  %v6_15c68 = load i32, i32* %v5_15c68, align 4
  store i32 %v6_15c68, i32* @sb, align 4
  %v7_15c68 = add i32 %v1_15c68, 8
  store i32 %v7_15c68, i32* %r1.global-to-local, align 4
  br i1 %v2_15c60, label %bb142..thread94_crit_edge, label %.thread96

bb142..thread94_crit_edge:                        ; preds = %bb142
  %v3_15c6c.pre = load i32, i32* @r4, align 4
  br label %.thread94

.thread94:                                        ; preds = %bb142..thread94_crit_edge, %bb140
  %v3_15c6c = phi i32 [ %v3_15c6c.pre, %bb142..thread94_crit_edge ], [ %v3_15c64, %bb140 ]
  %v2_15c6c = inttoptr i32 %v1_15c6c to i32*
  store i32 %v3_15c6c, i32* %v2_15c6c, align 4
  %v4_15c6c = add i32 %v1_15c6c, 4
  %v5_15c6c = inttoptr i32 %v4_15c6c to i32*
  %v6_15c6c = load i32, i32* @r5, align 4
  store i32 %v6_15c6c, i32* %v5_15c6c, align 4
  %v7_15c6c = add i32 %v1_15c6c, 8
  %v8_15c6c = inttoptr i32 %v7_15c6c to i32*
  %v9_15c6c = load i32, i32* @r6, align 4
  store i32 %v9_15c6c, i32* %v8_15c6c, align 4
  %v10_15c6c = add i32 %v1_15c6c, 12
  %v11_15c6c = inttoptr i32 %v10_15c6c to i32*
  %v12_15c6c = load i32, i32* @r7, align 4
  store i32 %v12_15c6c, i32* %v11_15c6c, align 4
  %v13_15c6c = add i32 %v1_15c6c, 16
  store i32 %v13_15c6c, i32* %r0.global-to-local, align 4
  br i1 %v4_15c60, label %.thread94..thread96_crit_edge, label %.thread98

.thread94..thread96_crit_edge:                    ; preds = %.thread94
  %v3_15c70.pre = load i32, i32* @r8, align 4
  br label %.thread96

.thread96:                                        ; preds = %.thread94..thread96_crit_edge, %bb142
  %v3_15c70 = phi i32 [ %v3_15c70.pre, %.thread94..thread96_crit_edge ], [ %v3_15c68, %bb142 ]
  %v1_15c7097 = phi i32 [ %v13_15c6c, %.thread94..thread96_crit_edge ], [ %v1_15c6c, %bb142 ]
  %v2_15c70 = inttoptr i32 %v1_15c7097 to i32*
  store i32 %v3_15c70, i32* %v2_15c70, align 4
  %v4_15c70 = add i32 %v1_15c7097, 4
  %v5_15c70 = inttoptr i32 %v4_15c70 to i32*
  %v6_15c70 = load i32, i32* @sb, align 4
  store i32 %v6_15c70, i32* %v5_15c70, align 4
  %v7_15c70 = add i32 %v1_15c7097, 8
  store i32 %v7_15c70, i32* %r0.global-to-local, align 4
  br label %.thread98

.thread98:                                        ; preds = %bb141, %.thread94, %.thread96
  %v2_15c80 = phi i32 [ %v13_15c6c, %.thread94 ], [ %v7_15c70, %.thread96 ], [ %v1_15c6c, %bb141 ]
  %v0_15c74 = load i32, i32* @r2, align 4
  %v1_15c74 = and i32 %v0_15c74, 4
  %v2_15c74 = icmp ne i32 %v1_15c74, 0
  store i1 %v2_15c74, i1* %cpsr_c.global-to-local, align 1
  %v3_15c74 = mul i32 %v0_15c74, 1073741824
  store i32 %v3_15c74, i32* @ip, align 4
  %v4_15c74 = icmp slt i32 %v3_15c74, 0
  store i1 %v4_15c74, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_15c74, label %bb143, label %bb144

bb143:                                            ; preds = %.thread98
  %v1_15c78 = load i32, i32* %r1.global-to-local, align 4
  %v2_15c78 = inttoptr i32 %v1_15c78 to i32*
  %v3_15c78 = load i32, i32* %v2_15c78, align 4
  store i32 %v3_15c78, i32* @r3, align 4
  %v5_15c78 = add i32 %v1_15c78, 4
  store i32 %v5_15c78, i32* %r1.global-to-local, align 4
  br i1 %v4_15c74, label %.thread109, label %bb145

.thread109:                                       ; preds = %bb143
  %v2_15c7c102 = inttoptr i32 %v5_15c78 to i16*
  %v3_15c7c103 = load i16, i16* %v2_15c7c102, align 2
  %v4_15c7c104 = zext i16 %v3_15c7c103 to i32
  store i32 %v4_15c7c104, i32* %r4.global-to-local, align 4
  %v6_15c7c105 = add i32 %v1_15c78, 2
  store i32 %v6_15c7c105, i32* %r1.global-to-local, align 4
  %v3_15c80111 = inttoptr i32 %v2_15c80 to i32*
  store i32 %v3_15c78, i32* %v3_15c80111, align 4
  %v4_15c80112 = load i32, i32* %r0.global-to-local, align 4
  %v5_15c80113 = add i32 %v4_15c80112, 4
  store i32 %v5_15c80113, i32* %r0.global-to-local, align 4
  %v1_15c84.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t196 = trunc i32 %v1_15c84.pre to i16
  br label %bb146

bb144:                                            ; preds = %.thread98
  br i1 %v4_15c74, label %.thread106, label %.thread108

.thread106:                                       ; preds = %bb144
  %v1_15c7c.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_15c7c = inttoptr i32 %v1_15c7c.pre to i16*
  %v3_15c7c = load i16, i16* %v2_15c7c, align 2
  %v4_15c7c = zext i16 %v3_15c7c to i32
  store i32 %v4_15c7c, i32* %r4.global-to-local, align 4
  %v6_15c7c = add i32 %v1_15c7c.pre, -2
  store i32 %v6_15c7c, i32* %r1.global-to-local, align 4
  br label %bb146

bb145:                                            ; preds = %bb143
  %v3_15c80 = inttoptr i32 %v2_15c80 to i32*
  store i32 %v3_15c78, i32* %v3_15c80, align 4
  %v4_15c80 = load i32, i32* %r0.global-to-local, align 4
  %v5_15c80 = add i32 %v4_15c80, 4
  store i32 %v5_15c80, i32* %r0.global-to-local, align 4
  br label %.thread108

bb146:                                            ; preds = %.thread109, %.thread106
  %v1_15c84.off0 = phi i16 [ %v3_15c7c, %.thread106 ], [ %extract.t196, %.thread109 ]
  %v3_15c84107 = phi i32 [ %v2_15c80, %.thread106 ], [ %v5_15c80113, %.thread109 ]
  %v4_15c84 = inttoptr i32 %v3_15c84107 to i16*
  store i16 %v1_15c84.off0, i16* %v4_15c84, align 2
  %v5_15c84 = load i32, i32* %r0.global-to-local, align 4
  %v6_15c84 = add i32 %v5_15c84, -2
  store i32 %v6_15c84, i32* %r0.global-to-local, align 4
  br label %.thread108

.thread108:                                       ; preds = %bb144, %bb145, %bb146
  %v3_15c90 = phi i32 [ %v5_15c80, %bb145 ], [ %v6_15c84, %bb146 ], [ %v2_15c80, %bb144 ]
  %v0_15c88 = load i32, i32* @r2, align 4
  %v1_15c88 = urem i32 %v0_15c88, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15c88 = icmp eq i32 %v1_15c88, 0
  br i1 %v2_15c88, label %.thread4, label %bb147

bb147:                                            ; preds = %.thread108
  %v1_15c8c = load i32, i32* %r1.global-to-local, align 4
  %v2_15c8c = inttoptr i32 %v1_15c8c to i8*
  %v3_15c8c = load i8, i8* %v2_15c8c, align 1
  %v4_15c8c = zext i8 %v3_15c8c to i32
  store i32 %v4_15c8c, i32* @r3, align 4
  %v4_15c90 = inttoptr i32 %v3_15c90 to i8*
  store i8 %v3_15c8c, i8* %v4_15c90, align 1
  br label %.thread4

.thread4:                                         ; preds = %.thread108, %dec_label_pc_15c58, %bb147
  %v2_15c94 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_15c94, i32* @r5, align 4
  store i32 %v5_15c00, i32* @r6, align 4
  store i32 %v8_15c00, i32* @r7, align 4
  store i32 %v11_15c00, i32* @r8, align 4
  store i32 %v14_15c00, i32* @sb, align 4
  store i32 %v17_15c00, i32* @sl, align 4
  store i32 %v20_15c00, i32* @fp, align 4
  store i32 %v3_15bb8, i32* %r0.global-to-local, align 4
  store i32 %v8_15bb8, i32* @r4, align 4
  store i32 %v11_15bb8, i32* @lr, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  ret i32 %v3_15bb8

dec_label_pc_15ca8:                               ; preds = %.thread2
  %v0_15ca8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ca8 = add i32 %v0_15ca8, -4
  %v2_15ca8 = icmp ugt i32 %v0_15ca8, 3
  store i1 %v2_15ca8, i1* %cpsr_c.global-to-local, align 1
  %v6_15ca8 = icmp slt i32 %v1_15ca8, 0
  store i1 %v6_15ca8, i1* %cpsr_n.global-to-local, align 1
  %v3_15cac = icmp ult i32 %v0_15ca8, 2
  br i1 %v3_15cac, label %dec_label_pc_15e94, label %dec_label_pc_15cb0

dec_label_pc_15cb0:                               ; preds = %dec_label_pc_15ca8
  %v2_15cb0 = load i32, i32* @r5, align 4
  store i32 %v2_15cb0, i32* %stack_var_-40, align 4
  %v5_15cb0 = load i32, i32* @r6, align 4
  %v8_15cb0 = load i32, i32* @r7, align 4
  %v11_15cb0 = load i32, i32* @r8, align 4
  %v14_15cb0 = load i32, i32* @sb, align 4
  %v17_15cb0 = load i32, i32* @sl, align 4
  %v20_15cb0 = load i32, i32* @fp, align 4
  %v1_15cb4 = sub i32 0, %v1_15c24
  %v1_15cb8 = urem i32 %v1_15cb4, 4
  store i32 %v1_15cb8, i32* %r5.global-to-local, align 4
  %v3_15cbc = mul nuw nsw i32 %v1_15cb8, 8
  store i32 %v3_15cbc, i32* @ip, align 4
  %v1_15cc0 = sub nsw i32 32, %v3_15cbc
  store i32 %v1_15cc0, i32* %lr.global-to-local, align 4
  %v1_15cc4 = inttoptr i32 %v1_15bf4 to i32*
  %v2_15cc4 = load i32, i32* %v1_15cc4, align 4
  store i32 %v2_15cc4, i32* @r3, align 4
  %v4_15cc4 = add i32 %v1_15bf4, 4
  store i32 %v4_15cc4, i32* %r1.global-to-local, align 4
  store i32 %v1_15ca8, i32* %r2.global-to-local, align 4
  %v1_15ccc = and i32 %v1_15cb4, 2
  %v2_15ccc = icmp ne i32 %v1_15ccc, 0
  store i1 %v2_15ccc, i1* %cpsr_c.global-to-local, align 1
  %v3_15ccc = shl i32 %v1_15cb4, 31
  store i32 %v3_15ccc, i32* %r5.global-to-local, align 4
  %v4_15ccc = icmp ne i32 %v3_15ccc, 0
  store i1 %v4_15ccc, i1* %cpsr_n.global-to-local, align 1
  %v2_15cd0 = trunc i32 %v2_15cc4 to i8
  br i1 %v4_15ccc, label %bb148, label %thread-pre-split

bb148:                                            ; preds = %dec_label_pc_15cb0
  %v4_15cd0 = inttoptr i32 %v1_15c24 to i8*
  store i8 %v2_15cd0, i8* %v4_15cd0, align 1
  %v5_15cd0 = load i32, i32* %r0.global-to-local, align 4
  %v6_15cd0 = add i32 %v5_15cd0, 1
  store i32 %v6_15cd0, i32* %r0.global-to-local, align 4
  %v0_15cd4.pr = load i1, i1* %cpsr_n.global-to-local, align 1
  br i1 %v0_15cd4.pr, label %bb149, label %.thread-pre-split_crit_edge

.thread-pre-split_crit_edge:                      ; preds = %bb148
  %v0_15cd8.pr.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15cd8.pr.pre, label %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge, label %.thread10

.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge: ; preds = %.thread-pre-split_crit_edge
  %v1_15cd8.pre.pre = load i32, i32* @r3, align 4
  %extract.t193 = trunc i32 %v1_15cd8.pre.pre to i8
  br label %bb150

thread-pre-split:                                 ; preds = %dec_label_pc_15cb0
  br i1 %v2_15ccc, label %bb150, label %.thread10

bb149:                                            ; preds = %bb148
  %v1_15cd4 = load i32, i32* @r3, align 4
  %v2_15cd4 = and i32 %v1_15cd4, 128
  %v3_15cd4 = icmp ne i32 %v2_15cd4, 0
  store i1 %v3_15cd4, i1* %cpsr_c.global-to-local, align 1
  %v4_15cd4 = udiv i32 %v1_15cd4, 256
  store i32 %v4_15cd4, i32* @r3, align 4
  %extract.t87 = trunc i32 %v4_15cd4 to i8
  br i1 %v3_15cd4, label %bb150, label %.thread10

bb150:                                            ; preds = %thread-pre-split, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge, %bb149
  %v3_15cd8 = phi i32 [ %v6_15cd0, %bb149 ], [ %v6_15cd0, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge ], [ %v1_15c24, %thread-pre-split ]
  %v1_15cd8.off0 = phi i8 [ %extract.t87, %bb149 ], [ %extract.t193, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge ], [ %v2_15cd0, %thread-pre-split ]
  %v4_15cd8 = inttoptr i32 %v3_15cd8 to i8*
  store i8 %v1_15cd8.off0, i8* %v4_15cd8, align 1
  %v5_15cd8 = load i32, i32* %r0.global-to-local, align 4
  %v6_15cd8 = add i32 %v5_15cd8, 1
  store i32 %v6_15cd8, i32* %r0.global-to-local, align 4
  %v0_15cdc.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15cdc.pr, label %bb151, label %.thread10

bb151:                                            ; preds = %bb150
  %v1_15cdc = load i32, i32* @r3, align 4
  %v2_15cdc = and i32 %v1_15cdc, 128
  %v3_15cdc = icmp ne i32 %v2_15cdc, 0
  store i1 %v3_15cdc, i1* %cpsr_c.global-to-local, align 1
  %v4_15cdc = udiv i32 %v1_15cdc, 256
  store i32 %v4_15cdc, i32* @r3, align 4
  br i1 %v3_15cdc, label %.thread7, label %.thread10

.thread7:                                         ; preds = %bb151
  %v2_15ce0 = trunc i32 %v4_15cdc to i8
  %v4_15ce0 = inttoptr i32 %v6_15cd8 to i8*
  store i8 %v2_15ce0, i8* %v4_15ce0, align 1
  %v5_15ce0 = load i32, i32* %r0.global-to-local, align 4
  %v6_15ce0 = add i32 %v5_15ce0, 1
  store i32 %v6_15ce0, i32* %r0.global-to-local, align 4
  %v0_15ce4.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15ce4.pr.pr, label %bb152, label %.thread10

bb152:                                            ; preds = %.thread7
  %v1_15ce4 = load i32, i32* @r3, align 4
  %v2_15ce4 = and i32 %v1_15ce4, 128
  %v3_15ce4 = icmp ne i32 %v2_15ce4, 0
  store i1 %v3_15ce4, i1* %cpsr_c.global-to-local, align 1
  %v4_15ce4 = udiv i32 %v1_15ce4, 256
  store i32 %v4_15ce4, i32* @r3, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread-pre-split_crit_edge, %bb150, %bb149, %thread-pre-split, %bb151, %.thread7, %bb152
  %v0_15cf031 = phi i32 [ %v6_15cd8, %bb150 ], [ %v6_15cd0, %bb149 ], [ %v1_15c24, %thread-pre-split ], [ %v6_15cd8, %bb151 ], [ %v6_15ce0, %.thread7 ], [ %v6_15ce0, %bb152 ], [ %v6_15cd0, %.thread-pre-split_crit_edge ]
  %v0_15ce8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ce8 = add i32 %v0_15ce8, -4
  %v2_15ce8 = icmp ugt i32 %v0_15ce8, 3
  store i1 %v2_15ce8, i1* %cpsr_c.global-to-local, align 1
  %v6_15ce8 = icmp slt i32 %v1_15ce8, 0
  store i1 %v6_15ce8, i1* %cpsr_n.global-to-local, align 1
  %v3_15cec = icmp ult i32 %v0_15ce8, 2
  br i1 %v3_15cec, label %dec_label_pc_15e78, label %dec_label_pc_15cf0

dec_label_pc_15cf0:                               ; preds = %.thread10, %dec_label_pc_15cf8
  %v0_15cfc = phi i32 [ %v0_15d0c, %dec_label_pc_15cf8 ], [ %v0_15ce8, %.thread10 ]
  %v1_15d08 = phi i32 [ %v4_15d08, %dec_label_pc_15cf8 ], [ %v0_15cf031, %.thread10 ]
  %v1_15cf0 = and i32 %v1_15d08, 28
  %v2_15cf0 = icmp eq i32 %v1_15cf0, 0
  br i1 %v2_15cf0, label %dec_label_pc_15d18.loopexit, label %dec_label_pc_15cf8

dec_label_pc_15cf8:                               ; preds = %dec_label_pc_15cf0
  %v0_15cf8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15cf8 = inttoptr i32 %v0_15cf8 to i32*
  %v2_15cf8 = load i32, i32* %v1_15cf8, align 4
  store i32 %v2_15cf8, i32* %r5.global-to-local, align 4
  %v4_15cf8 = add i32 %v0_15cf8, 4
  store i32 %v4_15cf8, i32* %r1.global-to-local, align 4
  %v1_15cfc = add i32 %v0_15cfc, -4
  store i32 %v1_15cfc, i32* %r2.global-to-local, align 4
  %v0_15d00 = load i32, i32* @r3, align 4
  %v2_15d00 = load i32, i32* %lr.global-to-local, align 4
  %v7_15d00 = shl i32 %v2_15cf8, %v2_15d00
  %v8_15d00 = or i32 %v7_15d00, %v0_15d00
  store i32 %v8_15d00, i32* %r4.global-to-local, align 4
  %v1_15d04 = load i32, i32* @ip, align 4
  %v6_15d04 = lshr i32 %v2_15cf8, %v1_15d04
  store i32 %v6_15d04, i32* @r3, align 4
  %v2_15d08 = inttoptr i32 %v1_15d08 to i32*
  store i32 %v8_15d00, i32* %v2_15d08, align 4
  %v3_15d08 = load i32, i32* %r0.global-to-local, align 4
  %v4_15d08 = add i32 %v3_15d08, 4
  store i32 %v4_15d08, i32* %r0.global-to-local, align 4
  %v0_15d0c = load i32, i32* %r2.global-to-local, align 4
  %v2_15d0c = icmp ugt i32 %v0_15d0c, 3
  store i1 %v2_15d0c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_15d0c, label %dec_label_pc_15cf0, label %dec_label_pc_15d14

dec_label_pc_15d14:                               ; preds = %dec_label_pc_15cf8
  %v1_15d0c = add i32 %v0_15d0c, -4
  %v6_15d0c = icmp slt i32 %v1_15d0c, 0
  store i1 %v6_15d0c, i1* %cpsr_n.global-to-local, align 1
  %v3_15d14 = icmp ult i32 %v0_15d0c, 2
  br i1 %v3_15d14, label %dec_label_pc_15e78, label %dec_label_pc_15d18

dec_label_pc_15d18.loopexit:                      ; preds = %dec_label_pc_15cf0
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15d18

dec_label_pc_15d18:                               ; preds = %dec_label_pc_15d18.loopexit, %dec_label_pc_15d14
  %v0_15d8038 = phi i32 [ %v1_15d08, %dec_label_pc_15d18.loopexit ], [ %v4_15d08, %dec_label_pc_15d14 ]
  %v0_15d18 = phi i32 [ %v0_15cfc, %dec_label_pc_15d18.loopexit ], [ %v0_15d0c, %dec_label_pc_15d14 ]
  %v1_15d18 = add i32 %v0_15d18, -32
  store i32 %v1_15d18, i32* %r2.global-to-local, align 4
  %v2_15d18 = icmp ugt i32 %v0_15d18, 31
  store i1 %v2_15d18, i1* %cpsr_c.global-to-local, align 1
  %v6_15d18 = icmp slt i32 %v1_15d18, 0
  store i1 %v6_15d18, i1* %cpsr_n.global-to-local, align 1
  %v3_15d1c = icmp ult i32 %v1_15d18, 30
  br i1 %v3_15d1c, label %dec_label_pc_15e4c, label %dec_label_pc_15d20

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15d18
  %v0_15d20 = load i32, i32* @ip, align 4
  %v1_15d20 = add i32 %v0_15d20, -24
  %v2_15d20 = icmp ugt i32 %v0_15d20, 23
  store i1 %v2_15d20, i1* %cpsr_c.global-to-local, align 1
  %v6_15d20 = icmp slt i32 %v1_15d20, 0
  store i1 %v6_15d20, i1* %cpsr_n.global-to-local, align 1
  %v7_15d20 = icmp eq i32 %v0_15d20, 24
  br i1 %v7_15d20, label %dec_label_pc_15df0, label %dec_label_pc_15d28

dec_label_pc_15d28:                               ; preds = %dec_label_pc_15d20
  %v1_15d28 = add i32 %v0_15d20, -8
  %v2_15d28 = icmp ugt i32 %v0_15d20, 7
  store i1 %v2_15d28, i1* %cpsr_c.global-to-local, align 1
  %v6_15d28 = icmp slt i32 %v1_15d28, 0
  store i1 %v6_15d28, i1* %cpsr_n.global-to-local, align 1
  %v7_15d28 = icmp eq i32 %v0_15d20, 8
  %v0_15d90 = load i32, i32* %r1.global-to-local, align 4
  %v1_15d90 = inttoptr i32 %v0_15d90 to i32*
  %v2_15d90 = load i32, i32* %v1_15d90, align 4
  store i32 %v2_15d90, i32* %ip.global-to-local, align 4
  %v4_15d90 = add i32 %v0_15d90, 4
  store i32 %v4_15d90, i32* %r1.global-to-local, align 4
  br i1 %v7_15d28, label %dec_label_pc_15d94, label %dec_label_pc_15d34

dec_label_pc_15d34:                               ; preds = %dec_label_pc_15d28, %.dec_label_pc_15d34_crit_edge
  %v0_15d80 = phi i32 [ %v24_15d80, %.dec_label_pc_15d34_crit_edge ], [ %v0_15d8038, %dec_label_pc_15d28 ]
  %v0_15d3c = phi i32 [ %v0_15d3c.pre, %.dec_label_pc_15d34_crit_edge ], [ %v1_15d18, %dec_label_pc_15d28 ]
  %v0_15d38 = phi i32 [ %v0_15d38.pre, %.dec_label_pc_15d34_crit_edge ], [ %v4_15d90, %dec_label_pc_15d28 ]
  %v1_15d44 = phi i32 [ %v0_15d34.pre, %.dec_label_pc_15d34_crit_edge ], [ %v2_15d90, %dec_label_pc_15d28 ]
  store i32 %v1_15d44, i32* %r4.global-to-local, align 4
  %v1_15d38 = inttoptr i32 %v0_15d38 to i32*
  %v2_15d38 = load i32, i32* %v1_15d38, align 4
  store i32 %v2_15d38, i32* %r5.global-to-local, align 4
  %v3_15d38 = add i32 %v0_15d38, 4
  %v4_15d38 = inttoptr i32 %v3_15d38 to i32*
  %v5_15d38 = load i32, i32* %v4_15d38, align 4
  store i32 %v5_15d38, i32* %r6.global-to-local, align 4
  %v6_15d38 = add i32 %v0_15d38, 8
  %v7_15d38 = inttoptr i32 %v6_15d38 to i32*
  %v8_15d38 = load i32, i32* %v7_15d38, align 4
  store i32 %v8_15d38, i32* %r7.global-to-local, align 4
  %v9_15d38 = add i32 %v0_15d38, 12
  %v10_15d38 = inttoptr i32 %v9_15d38 to i32*
  %v11_15d38 = load i32, i32* %v10_15d38, align 4
  store i32 %v11_15d38, i32* %r8.global-to-local, align 4
  %v12_15d38 = add i32 %v0_15d38, 16
  %v13_15d38 = inttoptr i32 %v12_15d38 to i32*
  %v14_15d38 = load i32, i32* %v13_15d38, align 4
  store i32 %v14_15d38, i32* %sb.global-to-local, align 4
  %v15_15d38 = add i32 %v0_15d38, 20
  %v16_15d38 = inttoptr i32 %v15_15d38 to i32*
  %v17_15d38 = load i32, i32* %v16_15d38, align 4
  store i32 %v17_15d38, i32* %sl.global-to-local, align 4
  %v18_15d38 = add i32 %v0_15d38, 24
  %v19_15d38 = inttoptr i32 %v18_15d38 to i32*
  %v20_15d38 = load i32, i32* %v19_15d38, align 4
  store i32 %v20_15d38, i32* %fp.global-to-local, align 4
  %v21_15d38 = add i32 %v0_15d38, 28
  store i32 %v21_15d38, i32* %r1.global-to-local, align 4
  %v1_15d3c = add i32 %v0_15d3c, -32
  store i32 %v1_15d3c, i32* %r2.global-to-local, align 4
  %v2_15d3c = icmp ugt i32 %v0_15d3c, 31
  br i1 %v2_15d3c, label %bb153, label %bb154

bb153:                                            ; preds = %dec_label_pc_15d34
  %v2_15d40 = inttoptr i32 %v21_15d38 to i32*
  %v3_15d40 = load i32, i32* %v2_15d40, align 4
  store i32 %v3_15d40, i32* %ip.global-to-local, align 4
  %v5_15d40 = add i32 %v0_15d38, 32
  store i32 %v5_15d40, i32* %r1.global-to-local, align 4
  br label %bb154

bb154:                                            ; preds = %dec_label_pc_15d34, %bb153
  %v0_15d44 = load i32, i32* @r3, align 4
  %v4_15d44 = mul i32 %v1_15d44, 65536
  %v5_15d44 = or i32 %v0_15d44, %v4_15d44
  %v3_15d48 = udiv i32 %v1_15d44, 65536
  %v4_15d4c = mul i32 %v2_15d38, 65536
  %v5_15d4c = or i32 %v4_15d4c, %v3_15d48
  store i32 %v5_15d4c, i32* %r4.global-to-local, align 4
  %v3_15d50 = udiv i32 %v2_15d38, 65536
  %v4_15d54 = mul i32 %v5_15d38, 65536
  %v5_15d54 = or i32 %v4_15d54, %v3_15d50
  store i32 %v5_15d54, i32* %r5.global-to-local, align 4
  %v3_15d58 = udiv i32 %v5_15d38, 65536
  %v4_15d5c = mul i32 %v8_15d38, 65536
  %v5_15d5c = or i32 %v4_15d5c, %v3_15d58
  store i32 %v5_15d5c, i32* %r6.global-to-local, align 4
  %v3_15d60 = udiv i32 %v8_15d38, 65536
  %v4_15d64 = mul i32 %v11_15d38, 65536
  %v5_15d64 = or i32 %v4_15d64, %v3_15d60
  store i32 %v5_15d64, i32* %r7.global-to-local, align 4
  %v3_15d68 = udiv i32 %v11_15d38, 65536
  %v4_15d6c = mul i32 %v14_15d38, 65536
  %v5_15d6c = or i32 %v4_15d6c, %v3_15d68
  store i32 %v5_15d6c, i32* %r8.global-to-local, align 4
  %v3_15d70 = udiv i32 %v14_15d38, 65536
  %v4_15d74 = mul i32 %v17_15d38, 65536
  %v5_15d74 = or i32 %v4_15d74, %v3_15d70
  store i32 %v5_15d74, i32* %sb.global-to-local, align 4
  %v3_15d78 = udiv i32 %v17_15d38, 65536
  %v4_15d7c = mul i32 %v20_15d38, 65536
  %v5_15d7c = or i32 %v4_15d7c, %v3_15d78
  store i32 %v5_15d7c, i32* %sl.global-to-local, align 4
  %v1_15d80 = inttoptr i32 %v0_15d80 to i32*
  store i32 %v5_15d44, i32* %v1_15d80, align 4
  %v3_15d80 = add i32 %v0_15d80, 4
  %v4_15d80 = inttoptr i32 %v3_15d80 to i32*
  %v5_15d80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15d80, i32* %v4_15d80, align 4
  %v6_15d80 = add i32 %v0_15d80, 8
  %v7_15d80 = inttoptr i32 %v6_15d80 to i32*
  %v8_15d80 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15d80, i32* %v7_15d80, align 4
  %v9_15d80 = add i32 %v0_15d80, 12
  %v10_15d80 = inttoptr i32 %v9_15d80 to i32*
  %v11_15d80 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_15d80, i32* %v10_15d80, align 4
  %v12_15d80 = add i32 %v0_15d80, 16
  %v13_15d80 = inttoptr i32 %v12_15d80 to i32*
  %v14_15d80 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_15d80, i32* %v13_15d80, align 4
  %v15_15d80 = add i32 %v0_15d80, 20
  %v16_15d80 = inttoptr i32 %v15_15d80 to i32*
  %v17_15d80 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_15d80, i32* %v16_15d80, align 4
  %v18_15d80 = add i32 %v0_15d80, 24
  %v19_15d80 = inttoptr i32 %v18_15d80 to i32*
  %v20_15d80 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_15d80, i32* %v19_15d80, align 4
  %v21_15d80 = add i32 %v0_15d80, 28
  %v22_15d80 = inttoptr i32 %v21_15d80 to i32*
  %v23_15d80 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_15d80, i32* %v22_15d80, align 4
  %v24_15d80 = add i32 %v0_15d80, 32
  store i32 %v24_15d80, i32* %r0.global-to-local, align 4
  %v0_15d84 = load i32, i32* %fp.global-to-local, align 4
  %v1_15d84 = and i32 %v0_15d84, 32768
  %v2_15d84 = icmp eq i32 %v1_15d84, 0
  %v3_15d84 = udiv i32 %v0_15d84, 65536
  store i32 %v3_15d84, i32* @r3, align 4
  br i1 %v2_15d84, label %dec_label_pc_15e4c.loopexit19, label %.dec_label_pc_15d34_crit_edge

.dec_label_pc_15d34_crit_edge:                    ; preds = %bb154
  %v0_15d34.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_15d38.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15d3c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d34

dec_label_pc_15d94:                               ; preds = %dec_label_pc_15d28, %.dec_label_pc_15d94_crit_edge
  %v0_15de0 = phi i32 [ %v24_15de0, %.dec_label_pc_15d94_crit_edge ], [ %v0_15d8038, %dec_label_pc_15d28 ]
  %v0_15d9c = phi i32 [ %v0_15d9c.pre, %.dec_label_pc_15d94_crit_edge ], [ %v1_15d18, %dec_label_pc_15d28 ]
  %v0_15d98 = phi i32 [ %v0_15d98.pre, %.dec_label_pc_15d94_crit_edge ], [ %v4_15d90, %dec_label_pc_15d28 ]
  %v1_15da4 = phi i32 [ %v0_15d94.pre, %.dec_label_pc_15d94_crit_edge ], [ %v2_15d90, %dec_label_pc_15d28 ]
  store i32 %v1_15da4, i32* %r4.global-to-local, align 4
  %v1_15d98 = inttoptr i32 %v0_15d98 to i32*
  %v2_15d98 = load i32, i32* %v1_15d98, align 4
  store i32 %v2_15d98, i32* %r5.global-to-local, align 4
  %v3_15d98 = add i32 %v0_15d98, 4
  %v4_15d98 = inttoptr i32 %v3_15d98 to i32*
  %v5_15d98 = load i32, i32* %v4_15d98, align 4
  store i32 %v5_15d98, i32* %r6.global-to-local, align 4
  %v6_15d98 = add i32 %v0_15d98, 8
  %v7_15d98 = inttoptr i32 %v6_15d98 to i32*
  %v8_15d98 = load i32, i32* %v7_15d98, align 4
  store i32 %v8_15d98, i32* %r7.global-to-local, align 4
  %v9_15d98 = add i32 %v0_15d98, 12
  %v10_15d98 = inttoptr i32 %v9_15d98 to i32*
  %v11_15d98 = load i32, i32* %v10_15d98, align 4
  store i32 %v11_15d98, i32* %r8.global-to-local, align 4
  %v12_15d98 = add i32 %v0_15d98, 16
  %v13_15d98 = inttoptr i32 %v12_15d98 to i32*
  %v14_15d98 = load i32, i32* %v13_15d98, align 4
  store i32 %v14_15d98, i32* %sb.global-to-local, align 4
  %v15_15d98 = add i32 %v0_15d98, 20
  %v16_15d98 = inttoptr i32 %v15_15d98 to i32*
  %v17_15d98 = load i32, i32* %v16_15d98, align 4
  store i32 %v17_15d98, i32* %sl.global-to-local, align 4
  %v18_15d98 = add i32 %v0_15d98, 24
  %v19_15d98 = inttoptr i32 %v18_15d98 to i32*
  %v20_15d98 = load i32, i32* %v19_15d98, align 4
  store i32 %v20_15d98, i32* %fp.global-to-local, align 4
  %v21_15d98 = add i32 %v0_15d98, 28
  store i32 %v21_15d98, i32* %r1.global-to-local, align 4
  %v1_15d9c = add i32 %v0_15d9c, -32
  store i32 %v1_15d9c, i32* %r2.global-to-local, align 4
  %v2_15d9c = icmp ugt i32 %v0_15d9c, 31
  br i1 %v2_15d9c, label %bb155, label %bb156

bb155:                                            ; preds = %dec_label_pc_15d94
  %v2_15da0 = inttoptr i32 %v21_15d98 to i32*
  %v3_15da0 = load i32, i32* %v2_15da0, align 4
  store i32 %v3_15da0, i32* %ip.global-to-local, align 4
  %v5_15da0 = add i32 %v0_15d98, 32
  store i32 %v5_15da0, i32* %r1.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_15d94, %bb155
  %v0_15da4 = load i32, i32* @r3, align 4
  %v4_15da4 = mul i32 %v1_15da4, 16777216
  %v5_15da4 = or i32 %v0_15da4, %v4_15da4
  %v3_15da8 = udiv i32 %v1_15da4, 256
  %v4_15dac = mul i32 %v2_15d98, 16777216
  %v5_15dac = or i32 %v4_15dac, %v3_15da8
  store i32 %v5_15dac, i32* %r4.global-to-local, align 4
  %v3_15db0 = udiv i32 %v2_15d98, 256
  %v4_15db4 = mul i32 %v5_15d98, 16777216
  %v5_15db4 = or i32 %v4_15db4, %v3_15db0
  store i32 %v5_15db4, i32* %r5.global-to-local, align 4
  %v3_15db8 = udiv i32 %v5_15d98, 256
  %v4_15dbc = mul i32 %v8_15d98, 16777216
  %v5_15dbc = or i32 %v4_15dbc, %v3_15db8
  store i32 %v5_15dbc, i32* %r6.global-to-local, align 4
  %v3_15dc0 = udiv i32 %v8_15d98, 256
  %v4_15dc4 = mul i32 %v11_15d98, 16777216
  %v5_15dc4 = or i32 %v4_15dc4, %v3_15dc0
  store i32 %v5_15dc4, i32* %r7.global-to-local, align 4
  %v3_15dc8 = udiv i32 %v11_15d98, 256
  %v4_15dcc = mul i32 %v14_15d98, 16777216
  %v5_15dcc = or i32 %v4_15dcc, %v3_15dc8
  store i32 %v5_15dcc, i32* %r8.global-to-local, align 4
  %v3_15dd0 = udiv i32 %v14_15d98, 256
  %v4_15dd4 = mul i32 %v17_15d98, 16777216
  %v5_15dd4 = or i32 %v4_15dd4, %v3_15dd0
  store i32 %v5_15dd4, i32* %sb.global-to-local, align 4
  %v3_15dd8 = udiv i32 %v17_15d98, 256
  %v4_15ddc = mul i32 %v20_15d98, 16777216
  %v5_15ddc = or i32 %v4_15ddc, %v3_15dd8
  store i32 %v5_15ddc, i32* %sl.global-to-local, align 4
  %v1_15de0 = inttoptr i32 %v0_15de0 to i32*
  store i32 %v5_15da4, i32* %v1_15de0, align 4
  %v3_15de0 = add i32 %v0_15de0, 4
  %v4_15de0 = inttoptr i32 %v3_15de0 to i32*
  %v5_15de0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15de0, i32* %v4_15de0, align 4
  %v6_15de0 = add i32 %v0_15de0, 8
  %v7_15de0 = inttoptr i32 %v6_15de0 to i32*
  %v8_15de0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15de0, i32* %v7_15de0, align 4
  %v9_15de0 = add i32 %v0_15de0, 12
  %v10_15de0 = inttoptr i32 %v9_15de0 to i32*
  %v11_15de0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_15de0, i32* %v10_15de0, align 4
  %v12_15de0 = add i32 %v0_15de0, 16
  %v13_15de0 = inttoptr i32 %v12_15de0 to i32*
  %v14_15de0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_15de0, i32* %v13_15de0, align 4
  %v15_15de0 = add i32 %v0_15de0, 20
  %v16_15de0 = inttoptr i32 %v15_15de0 to i32*
  %v17_15de0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_15de0, i32* %v16_15de0, align 4
  %v18_15de0 = add i32 %v0_15de0, 24
  %v19_15de0 = inttoptr i32 %v18_15de0 to i32*
  %v20_15de0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_15de0, i32* %v19_15de0, align 4
  %v21_15de0 = add i32 %v0_15de0, 28
  %v22_15de0 = inttoptr i32 %v21_15de0 to i32*
  %v23_15de0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_15de0, i32* %v22_15de0, align 4
  %v24_15de0 = add i32 %v0_15de0, 32
  store i32 %v24_15de0, i32* %r0.global-to-local, align 4
  %v0_15de4 = load i32, i32* %fp.global-to-local, align 4
  %v1_15de4 = and i32 %v0_15de4, 128
  %v2_15de4 = icmp eq i32 %v1_15de4, 0
  %v3_15de4 = udiv i32 %v0_15de4, 256
  store i32 %v3_15de4, i32* @r3, align 4
  br i1 %v2_15de4, label %dec_label_pc_15e4c.loopexit18, label %.dec_label_pc_15d94_crit_edge

.dec_label_pc_15d94_crit_edge:                    ; preds = %bb156
  %v0_15d94.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_15d98.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15d9c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d94

dec_label_pc_15df0:                               ; preds = %dec_label_pc_15d20
  %v0_15df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15df0 = inttoptr i32 %v0_15df0 to i32*
  %v2_15df0 = load i32, i32* %v1_15df0, align 4
  store i32 %v2_15df0, i32* %ip.global-to-local, align 4
  %v4_15df0 = add i32 %v0_15df0, 4
  store i32 %v4_15df0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15df4

dec_label_pc_15df4:                               ; preds = %.dec_label_pc_15df4_crit_edge, %dec_label_pc_15df0
  %v0_15e40 = phi i32 [ %v24_15e40, %.dec_label_pc_15df4_crit_edge ], [ %v0_15d8038, %dec_label_pc_15df0 ]
  %v0_15dfc = phi i32 [ %v0_15dfc.pre, %.dec_label_pc_15df4_crit_edge ], [ %v1_15d18, %dec_label_pc_15df0 ]
  %v0_15df8 = phi i32 [ %v0_15df8.pre, %.dec_label_pc_15df4_crit_edge ], [ %v4_15df0, %dec_label_pc_15df0 ]
  %v1_15e04 = phi i32 [ %v0_15df4.pre, %.dec_label_pc_15df4_crit_edge ], [ %v2_15df0, %dec_label_pc_15df0 ]
  store i32 %v1_15e04, i32* %r4.global-to-local, align 4
  %v1_15df8 = inttoptr i32 %v0_15df8 to i32*
  %v2_15df8 = load i32, i32* %v1_15df8, align 4
  store i32 %v2_15df8, i32* %r5.global-to-local, align 4
  %v3_15df8 = add i32 %v0_15df8, 4
  %v4_15df8 = inttoptr i32 %v3_15df8 to i32*
  %v5_15df8 = load i32, i32* %v4_15df8, align 4
  store i32 %v5_15df8, i32* %r6.global-to-local, align 4
  %v6_15df8 = add i32 %v0_15df8, 8
  %v7_15df8 = inttoptr i32 %v6_15df8 to i32*
  %v8_15df8 = load i32, i32* %v7_15df8, align 4
  store i32 %v8_15df8, i32* %r7.global-to-local, align 4
  %v9_15df8 = add i32 %v0_15df8, 12
  %v10_15df8 = inttoptr i32 %v9_15df8 to i32*
  %v11_15df8 = load i32, i32* %v10_15df8, align 4
  store i32 %v11_15df8, i32* %r8.global-to-local, align 4
  %v12_15df8 = add i32 %v0_15df8, 16
  %v13_15df8 = inttoptr i32 %v12_15df8 to i32*
  %v14_15df8 = load i32, i32* %v13_15df8, align 4
  store i32 %v14_15df8, i32* %sb.global-to-local, align 4
  %v15_15df8 = add i32 %v0_15df8, 20
  %v16_15df8 = inttoptr i32 %v15_15df8 to i32*
  %v17_15df8 = load i32, i32* %v16_15df8, align 4
  store i32 %v17_15df8, i32* %sl.global-to-local, align 4
  %v18_15df8 = add i32 %v0_15df8, 24
  %v19_15df8 = inttoptr i32 %v18_15df8 to i32*
  %v20_15df8 = load i32, i32* %v19_15df8, align 4
  store i32 %v20_15df8, i32* %fp.global-to-local, align 4
  %v21_15df8 = add i32 %v0_15df8, 28
  store i32 %v21_15df8, i32* %r1.global-to-local, align 4
  %v1_15dfc = add i32 %v0_15dfc, -32
  store i32 %v1_15dfc, i32* %r2.global-to-local, align 4
  %v2_15dfc = icmp ugt i32 %v0_15dfc, 31
  br i1 %v2_15dfc, label %bb157, label %bb158

bb157:                                            ; preds = %dec_label_pc_15df4
  %v2_15e00 = inttoptr i32 %v21_15df8 to i32*
  %v3_15e00 = load i32, i32* %v2_15e00, align 4
  store i32 %v3_15e00, i32* %ip.global-to-local, align 4
  %v5_15e00 = add i32 %v0_15df8, 32
  store i32 %v5_15e00, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %dec_label_pc_15df4, %bb157
  %v0_15e04 = load i32, i32* @r3, align 4
  %v4_15e04 = mul i32 %v1_15e04, 256
  %v5_15e04 = or i32 %v0_15e04, %v4_15e04
  %v3_15e08 = udiv i32 %v1_15e04, 16777216
  %v4_15e0c = mul i32 %v2_15df8, 256
  %v5_15e0c = or i32 %v4_15e0c, %v3_15e08
  store i32 %v5_15e0c, i32* %r4.global-to-local, align 4
  %v3_15e10 = udiv i32 %v2_15df8, 16777216
  %v4_15e14 = mul i32 %v5_15df8, 256
  %v5_15e14 = or i32 %v4_15e14, %v3_15e10
  store i32 %v5_15e14, i32* %r5.global-to-local, align 4
  %v3_15e18 = udiv i32 %v5_15df8, 16777216
  %v4_15e1c = mul i32 %v8_15df8, 256
  %v5_15e1c = or i32 %v4_15e1c, %v3_15e18
  store i32 %v5_15e1c, i32* %r6.global-to-local, align 4
  %v3_15e20 = udiv i32 %v8_15df8, 16777216
  %v4_15e24 = mul i32 %v11_15df8, 256
  %v5_15e24 = or i32 %v4_15e24, %v3_15e20
  store i32 %v5_15e24, i32* %r7.global-to-local, align 4
  %v3_15e28 = udiv i32 %v11_15df8, 16777216
  %v4_15e2c = mul i32 %v14_15df8, 256
  %v5_15e2c = or i32 %v4_15e2c, %v3_15e28
  store i32 %v5_15e2c, i32* %r8.global-to-local, align 4
  %v3_15e30 = udiv i32 %v14_15df8, 16777216
  %v4_15e34 = mul i32 %v17_15df8, 256
  %v5_15e34 = or i32 %v4_15e34, %v3_15e30
  store i32 %v5_15e34, i32* %sb.global-to-local, align 4
  %v3_15e38 = udiv i32 %v17_15df8, 16777216
  %v4_15e3c = mul i32 %v20_15df8, 256
  %v5_15e3c = or i32 %v4_15e3c, %v3_15e38
  store i32 %v5_15e3c, i32* %sl.global-to-local, align 4
  %v1_15e40 = inttoptr i32 %v0_15e40 to i32*
  store i32 %v5_15e04, i32* %v1_15e40, align 4
  %v3_15e40 = add i32 %v0_15e40, 4
  %v4_15e40 = inttoptr i32 %v3_15e40 to i32*
  %v5_15e40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15e40, i32* %v4_15e40, align 4
  %v6_15e40 = add i32 %v0_15e40, 8
  %v7_15e40 = inttoptr i32 %v6_15e40 to i32*
  %v8_15e40 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15e40, i32* %v7_15e40, align 4
  %v9_15e40 = add i32 %v0_15e40, 12
  %v10_15e40 = inttoptr i32 %v9_15e40 to i32*
  %v11_15e40 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_15e40, i32* %v10_15e40, align 4
  %v12_15e40 = add i32 %v0_15e40, 16
  %v13_15e40 = inttoptr i32 %v12_15e40 to i32*
  %v14_15e40 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_15e40, i32* %v13_15e40, align 4
  %v15_15e40 = add i32 %v0_15e40, 20
  %v16_15e40 = inttoptr i32 %v15_15e40 to i32*
  %v17_15e40 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_15e40, i32* %v16_15e40, align 4
  %v18_15e40 = add i32 %v0_15e40, 24
  %v19_15e40 = inttoptr i32 %v18_15e40 to i32*
  %v20_15e40 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_15e40, i32* %v19_15e40, align 4
  %v21_15e40 = add i32 %v0_15e40, 28
  %v22_15e40 = inttoptr i32 %v21_15e40 to i32*
  %v23_15e40 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_15e40, i32* %v22_15e40, align 4
  %v24_15e40 = add i32 %v0_15e40, 32
  store i32 %v24_15e40, i32* %r0.global-to-local, align 4
  %v0_15e44 = load i32, i32* %fp.global-to-local, align 4
  %v1_15e44 = and i32 %v0_15e44, 8388608
  %v2_15e44 = icmp eq i32 %v1_15e44, 0
  %v3_15e44 = udiv i32 %v0_15e44, 16777216
  store i32 %v3_15e44, i32* @r3, align 4
  br i1 %v2_15e44, label %dec_label_pc_15e4c.loopexit, label %.dec_label_pc_15df4_crit_edge

.dec_label_pc_15df4_crit_edge:                    ; preds = %bb158
  %v0_15df4.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_15df8.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15dfc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15df4

dec_label_pc_15e4c.loopexit:                      ; preds = %bb158
  %v6_15dfc.le = icmp slt i32 %v1_15dfc, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15dfc.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15e4c

dec_label_pc_15e4c.loopexit18:                    ; preds = %bb156
  %v6_15d9c.le = icmp slt i32 %v1_15d9c, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15d9c.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15e4c

dec_label_pc_15e4c.loopexit19:                    ; preds = %bb154
  %v6_15d3c.le = icmp slt i32 %v1_15d3c, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15d3c.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15e4c

dec_label_pc_15e4c:                               ; preds = %dec_label_pc_15e4c.loopexit19, %dec_label_pc_15e4c.loopexit18, %dec_label_pc_15e4c.loopexit, %dec_label_pc_15d18
  %v1_15e6c50 = phi i32 [ %v24_15d80, %dec_label_pc_15e4c.loopexit19 ], [ %v24_15de0, %dec_label_pc_15e4c.loopexit18 ], [ %v24_15e40, %dec_label_pc_15e4c.loopexit ], [ %v0_15d8038, %dec_label_pc_15d18 ]
  %v0_15e4c = load i32, i32* %lr.global-to-local, align 4
  %v1_15e4c = sub i32 32, %v0_15e4c
  store i32 %v1_15e4c, i32* @ip, align 4
  %v0_15e50 = load i32, i32* %r2.global-to-local, align 4
  %v1_15e50 = add i32 %v0_15e50, 32
  store i32 %v1_15e50, i32* %r2.global-to-local, align 4
  %v1_15e54 = add i32 %v0_15e50, 28
  %v2_15e54 = icmp ugt i32 %v1_15e50, 3
  store i1 %v2_15e54, i1* %cpsr_c.global-to-local, align 1
  %v6_15e54 = icmp slt i32 %v1_15e54, 0
  store i1 %v6_15e54, i1* %cpsr_n.global-to-local, align 1
  %v3_15e58 = icmp ult i32 %v1_15e50, 2
  br i1 %v3_15e58, label %dec_label_pc_15e78, label %dec_label_pc_15e5c

dec_label_pc_15e5c:                               ; preds = %dec_label_pc_15e4c, %dec_label_pc_15e5c.dec_label_pc_15e5c_crit_edge
  %v1_15e6c = phi i32 [ %v4_15e6c, %dec_label_pc_15e5c.dec_label_pc_15e5c_crit_edge ], [ %v1_15e6c50, %dec_label_pc_15e4c ]
  %v1_15e68 = phi i32 [ %v1_15e68.pre, %dec_label_pc_15e5c.dec_label_pc_15e5c_crit_edge ], [ %v1_15e4c, %dec_label_pc_15e4c ]
  %v2_15e64 = phi i32 [ %v2_15e64.pre, %dec_label_pc_15e5c.dec_label_pc_15e5c_crit_edge ], [ %v0_15e4c, %dec_label_pc_15e4c ]
  %v0_15e60 = phi i32 [ %v0_15e70, %dec_label_pc_15e5c.dec_label_pc_15e5c_crit_edge ], [ %v1_15e50, %dec_label_pc_15e4c ]
  %v0_15e5c = load i32, i32* %r1.global-to-local, align 4
  %v1_15e5c = inttoptr i32 %v0_15e5c to i32*
  %v2_15e5c = load i32, i32* %v1_15e5c, align 4
  store i32 %v2_15e5c, i32* %r5.global-to-local, align 4
  %v4_15e5c = add i32 %v0_15e5c, 4
  store i32 %v4_15e5c, i32* %r1.global-to-local, align 4
  %v1_15e60 = add i32 %v0_15e60, -4
  store i32 %v1_15e60, i32* %r2.global-to-local, align 4
  %v0_15e64 = load i32, i32* @r3, align 4
  %v7_15e64 = shl i32 %v2_15e5c, %v2_15e64
  %v8_15e64 = or i32 %v0_15e64, %v7_15e64
  store i32 %v8_15e64, i32* %r4.global-to-local, align 4
  %v6_15e68 = lshr i32 %v2_15e5c, %v1_15e68
  store i32 %v6_15e68, i32* @r3, align 4
  %v2_15e6c = inttoptr i32 %v1_15e6c to i32*
  store i32 %v8_15e64, i32* %v2_15e6c, align 4
  %v3_15e6c = load i32, i32* %r0.global-to-local, align 4
  %v4_15e6c = add i32 %v3_15e6c, 4
  store i32 %v4_15e6c, i32* %r0.global-to-local, align 4
  %v0_15e70 = load i32, i32* %r2.global-to-local, align 4
  %v2_15e70 = icmp ugt i32 %v0_15e70, 3
  br i1 %v2_15e70, label %dec_label_pc_15e5c.dec_label_pc_15e5c_crit_edge, label %dec_label_pc_15e78.loopexit

dec_label_pc_15e5c.dec_label_pc_15e5c_crit_edge:  ; preds = %dec_label_pc_15e5c
  %v2_15e64.pre = load i32, i32* %lr.global-to-local, align 4
  %v1_15e68.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15e5c

dec_label_pc_15e78.loopexit:                      ; preds = %dec_label_pc_15e5c
  %v1_15e70 = add i32 %v0_15e70, -4
  %v6_15e70 = icmp slt i32 %v1_15e70, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15e70, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15e78

dec_label_pc_15e78:                               ; preds = %dec_label_pc_15e78.loopexit, %dec_label_pc_15e4c, %dec_label_pc_15d14, %.thread10
  %v3_15e7c = phi i32 [ %v4_15e6c, %dec_label_pc_15e78.loopexit ], [ %v1_15e6c50, %dec_label_pc_15e4c ], [ %v4_15d08, %dec_label_pc_15d14 ], [ %v0_15cf031, %.thread10 ]
  %v0_15e78 = load i32, i32* %lr.global-to-local, align 4
  %v1_15e78 = and i32 %v0_15e78, 16
  %v2_15e78 = icmp ne i32 %v1_15e78, 0
  store i1 %v2_15e78, i1* %cpsr_c.global-to-local, align 1
  %v3_15e78 = mul i32 %v0_15e78, 268435456
  store i32 %v3_15e78, i32* %r5.global-to-local, align 4
  %v4_15e78 = icmp slt i32 %v3_15e78, 0
  store i1 %v4_15e78, i1* %cpsr_n.global-to-local, align 1
  br i1 %v4_15e78, label %bb159, label %thread-pre-split12

bb159:                                            ; preds = %dec_label_pc_15e78
  %v1_15e7c = load i32, i32* @r3, align 4
  %v2_15e7c = trunc i32 %v1_15e7c to i8
  %v4_15e7c = inttoptr i32 %v3_15e7c to i8*
  store i8 %v2_15e7c, i8* %v4_15e7c, align 1
  %v5_15e7c = load i32, i32* %r0.global-to-local, align 4
  %v6_15e7c = add i32 %v5_15e7c, 1
  store i32 %v6_15e7c, i32* %r0.global-to-local, align 4
  %v0_15e80.pr = load i1, i1* %cpsr_n.global-to-local, align 1
  br i1 %v0_15e80.pr, label %bb160, label %.thread-pre-split12_crit_edge

.thread-pre-split12_crit_edge:                    ; preds = %bb159
  %v0_15e84.pr.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15e84.pr.pre, label %thread-pre-split12._crit_edge, label %.thread15

thread-pre-split12:                               ; preds = %dec_label_pc_15e78
  br i1 %v2_15e78, label %thread-pre-split12._crit_edge, label %.thread15

thread-pre-split12._crit_edge:                    ; preds = %.thread-pre-split12_crit_edge, %thread-pre-split12
  %v3_15e8456115 = phi i32 [ %v6_15e7c, %.thread-pre-split12_crit_edge ], [ %v3_15e7c, %thread-pre-split12 ]
  %v1_15e84.pre = load i32, i32* @r3, align 4
  %extract.t84 = trunc i32 %v1_15e84.pre to i8
  br label %bb161

bb160:                                            ; preds = %bb159
  %v1_15e80 = load i32, i32* @r3, align 4
  %v2_15e80 = and i32 %v1_15e80, 128
  %v3_15e80 = icmp ne i32 %v2_15e80, 0
  store i1 %v3_15e80, i1* %cpsr_c.global-to-local, align 1
  %v4_15e80 = udiv i32 %v1_15e80, 256
  store i32 %v4_15e80, i32* @r3, align 4
  %extract.t85 = trunc i32 %v4_15e80 to i8
  br i1 %v3_15e80, label %bb161, label %.thread15

bb161:                                            ; preds = %thread-pre-split12._crit_edge, %bb160
  %v3_15e84 = phi i32 [ %v3_15e8456115, %thread-pre-split12._crit_edge ], [ %v6_15e7c, %bb160 ]
  %v1_15e84.off0 = phi i8 [ %extract.t84, %thread-pre-split12._crit_edge ], [ %extract.t85, %bb160 ]
  %v4_15e84 = inttoptr i32 %v3_15e84 to i8*
  store i8 %v1_15e84.off0, i8* %v4_15e84, align 1
  %v5_15e84 = load i32, i32* %r0.global-to-local, align 4
  %v6_15e84 = add i32 %v5_15e84, 1
  store i32 %v6_15e84, i32* %r0.global-to-local, align 4
  %v0_15e88.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15e88.pr, label %bb162, label %.thread15

bb162:                                            ; preds = %bb161
  %v1_15e88 = load i32, i32* @r3, align 4
  %v2_15e88 = and i32 %v1_15e88, 128
  %v3_15e88 = icmp ne i32 %v2_15e88, 0
  store i1 %v3_15e88, i1* %cpsr_c.global-to-local, align 1
  %v4_15e88 = udiv i32 %v1_15e88, 256
  store i32 %v4_15e88, i32* @r3, align 4
  br i1 %v3_15e88, label %bb163, label %.thread15

bb163:                                            ; preds = %bb162
  %v2_15e8c = trunc i32 %v4_15e88 to i8
  %v4_15e8c = inttoptr i32 %v6_15e84 to i8*
  store i8 %v2_15e8c, i8* %v4_15e8c, align 1
  %v5_15e8c = load i32, i32* %r0.global-to-local, align 4
  %v6_15e8c = add i32 %v5_15e8c, 1
  store i32 %v6_15e8c, i32* %r0.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread-pre-split12_crit_edge, %bb160, %thread-pre-split12, %bb161, %bb162, %bb163
  %v3_15ea478 = phi i32 [ %v6_15e7c, %bb160 ], [ %v3_15e7c, %thread-pre-split12 ], [ %v6_15e84, %bb161 ], [ %v6_15e84, %bb162 ], [ %v6_15e8c, %bb163 ], [ %v6_15e7c, %.thread-pre-split12_crit_edge ]
  %v2_15e90 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_15e90, i32* @r5, align 4
  store i32 %v5_15cb0, i32* @r6, align 4
  store i32 %v8_15cb0, i32* @r7, align 4
  store i32 %v11_15cb0, i32* @r8, align 4
  store i32 %v14_15cb0, i32* @sb, align 4
  store i32 %v17_15cb0, i32* @sl, align 4
  store i32 %v20_15cb0, i32* @fp, align 4
  %v0_15e94.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15e94

dec_label_pc_15e94:                               ; preds = %dec_label_pc_15ca8, %dec_label_pc_15bb8, %.thread15
  %v3_15ea4 = phi i32 [ %v1_15c24, %dec_label_pc_15ca8 ], [ %v3_15bb8, %dec_label_pc_15bb8 ], [ %v3_15ea478, %.thread15 ]
  %v0_15e94 = phi i32 [ %v0_15ca8, %dec_label_pc_15ca8 ], [ %v0_15bc0, %dec_label_pc_15bb8 ], [ %v0_15e94.pre, %.thread15 ]
  %v1_15e94 = and i32 %v0_15e94, 2
  %v2_15e94 = icmp ne i32 %v1_15e94, 0
  store i1 %v2_15e94, i1* %cpsr_c.global-to-local, align 1
  %v3_15e94 = shl i32 %v0_15e94, 31
  store i32 %v3_15e94, i32* @r2, align 4
  %v4_15e94 = icmp ne i32 %v3_15e94, 0
  store i1 %v4_15e94, i1* %cpsr_n.global-to-local, align 1
  br i1 %v4_15e94, label %bb164, label %bb165

bb164:                                            ; preds = %dec_label_pc_15e94
  %v1_15e98 = load i32, i32* %r1.global-to-local, align 4
  %v2_15e98 = inttoptr i32 %v1_15e98 to i8*
  %v3_15e98 = load i8, i8* %v2_15e98, align 1
  %v4_15e98 = zext i8 %v3_15e98 to i32
  store i32 %v4_15e98, i32* @r2, align 4
  %v6_15e98 = add i32 %v1_15e98, 1
  store i32 %v6_15e98, i32* %r1.global-to-local, align 4
  br label %bb165

bb165:                                            ; preds = %dec_label_pc_15e94, %bb164
  %v1_15ea4.off0 = phi i8 [ 0, %dec_label_pc_15e94 ], [ %v3_15e98, %bb164 ]
  br i1 %v2_15e94, label %bb166, label %.thread16

bb166:                                            ; preds = %bb165
  %v1_15e9c = load i32, i32* %r1.global-to-local, align 4
  %v2_15e9c = inttoptr i32 %v1_15e9c to i8*
  %v3_15e9c = load i8, i8* %v2_15e9c, align 1
  %v4_15e9c = zext i8 %v3_15e9c to i32
  store i32 %v4_15e9c, i32* @r3, align 4
  %v6_15e9c = add i32 %v1_15e9c, 1
  store i32 %v6_15e9c, i32* %r1.global-to-local, align 4
  %v2_15ea0 = inttoptr i32 %v6_15e9c to i8*
  %v3_15ea0 = load i8, i8* %v2_15ea0, align 1
  %v4_15ea0 = zext i8 %v3_15ea0 to i32
  store i32 %v4_15ea0, i32* @ip, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb165, %bb166
  br i1 %v4_15e94, label %bb167, label %bb168

bb167:                                            ; preds = %.thread16
  %v4_15ea4 = inttoptr i32 %v3_15ea4 to i8*
  store i8 %v1_15ea4.off0, i8* %v4_15ea4, align 1
  %v5_15ea4 = load i32, i32* %r0.global-to-local, align 4
  %v6_15ea4 = add i32 %v5_15ea4, 1
  store i32 %v6_15ea4, i32* %r0.global-to-local, align 4
  %v0_15ea8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15ea8.pre, label %bb169, label %.thread17

bb168:                                            ; preds = %.thread16
  br i1 %v2_15e94, label %bb169, label %.thread17

bb169:                                            ; preds = %bb167, %bb168
  %v3_15ea8116 = phi i32 [ %v6_15ea4, %bb167 ], [ %v3_15ea4, %bb168 ]
  %v1_15ea8 = load i32, i32* @r3, align 4
  %v2_15ea8 = trunc i32 %v1_15ea8 to i8
  %v4_15ea8 = inttoptr i32 %v3_15ea8116 to i8*
  store i8 %v2_15ea8, i8* %v4_15ea8, align 1
  %v5_15ea8 = load i32, i32* %r0.global-to-local, align 4
  %v6_15ea8 = add i32 %v5_15ea8, 1
  store i32 %v6_15ea8, i32* %r0.global-to-local, align 4
  %v0_15eac.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15eac.pr, label %bb170, label %.thread17

bb170:                                            ; preds = %bb169
  %v1_15eac = load i32, i32* @ip, align 4
  %v2_15eac = trunc i32 %v1_15eac to i8
  %v4_15eac = inttoptr i32 %v6_15ea8 to i8*
  store i8 %v2_15eac, i8* %v4_15eac, align 1
  br label %.thread17

.thread17:                                        ; preds = %bb167, %bb168, %bb169, %bb170
  store i32 %v3_15bb8, i32* %r0.global-to-local, align 4
  store i32 %v8_15bb8, i32* @r4, align 4
  store i32 %v11_15bb8, i32* @lr, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  ret i32 %v3_15bb8

; uselistorder directives
  uselistorder i32 %v4_15e88, { 1, 0 }
  uselistorder i32 %v4_15e80, { 1, 0 }
  uselistorder i32 %v6_15e7c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_15e78, { 1, 0 }
  uselistorder i32 %v0_15e70, { 0, 2, 1 }
  uselistorder i32 %v4_15e6c, { 0, 2, 1 }
  uselistorder i32 %v2_15e5c, { 1, 0, 2 }
  uselistorder i32 %v1_15e6c50, { 1, 0 }
  uselistorder i32 %v24_15e40, { 0, 2, 1 }
  uselistorder i32 %v17_15df8, { 1, 0, 2 }
  uselistorder i32 %v14_15df8, { 1, 0, 2 }
  uselistorder i32 %v11_15df8, { 1, 0, 2 }
  uselistorder i32 %v8_15df8, { 1, 0, 2 }
  uselistorder i32 %v5_15df8, { 1, 0, 2 }
  uselistorder i32 %v2_15df8, { 1, 0, 2 }
  uselistorder i32 %v1_15e04, { 1, 0, 2 }
  uselistorder i32 %v0_15df8, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_15dfc, { 1, 0 }
  uselistorder i32 %v0_15e40, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v24_15de0, { 0, 2, 1 }
  uselistorder i32 %v17_15d98, { 1, 0, 2 }
  uselistorder i32 %v14_15d98, { 1, 0, 2 }
  uselistorder i32 %v11_15d98, { 1, 0, 2 }
  uselistorder i32 %v8_15d98, { 1, 0, 2 }
  uselistorder i32 %v5_15d98, { 1, 0, 2 }
  uselistorder i32 %v2_15d98, { 1, 0, 2 }
  uselistorder i32 %v1_15da4, { 1, 0, 2 }
  uselistorder i32 %v0_15d98, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_15d9c, { 1, 0 }
  uselistorder i32 %v0_15de0, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v24_15d80, { 0, 2, 1 }
  uselistorder i32 %v17_15d38, { 1, 0, 2 }
  uselistorder i32 %v14_15d38, { 1, 0, 2 }
  uselistorder i32 %v11_15d38, { 1, 0, 2 }
  uselistorder i32 %v8_15d38, { 1, 0, 2 }
  uselistorder i32 %v5_15d38, { 1, 0, 2 }
  uselistorder i32 %v2_15d38, { 1, 0, 2 }
  uselistorder i32 %v1_15d44, { 1, 0, 2 }
  uselistorder i32 %v0_15d38, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_15d3c, { 1, 0 }
  uselistorder i32 %v0_15d80, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15d20, { 0, 2, 1, 5, 3, 4 }
  uselistorder i32 %v1_15d18, { 2, 0, 1, 3, 5, 4 }
  uselistorder i32 %v0_15d18, { 1, 0 }
  uselistorder i32 %v0_15d8038, { 2, 3, 0, 1 }
  uselistorder i32 %v0_15d0c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_15d08, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15cf031, { 1, 0 }
  uselistorder i32 %v4_15cdc, { 1, 0 }
  uselistorder i32 %v4_15cd4, { 1, 0 }
  uselistorder i32 %v6_15cd0, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_15cbc, { 1, 0 }
  uselistorder i32 %v1_15cb4, { 1, 2, 0 }
  uselistorder i32 %v3_15c78, { 1, 0, 2 }
  uselistorder i1 %v4_15c74, { 1, 0, 2 }
  uselistorder i32 %v3_15c74, { 1, 0 }
  uselistorder i32 %v2_15c80, { 0, 1, 3, 2 }
  uselistorder i32 %v1_15c7097, { 2, 1, 0 }
  uselistorder i32 %v13_15c6c, { 1, 0, 2 }
  uselistorder i32 %v1_15c68, { 2, 1, 0 }
  uselistorder i1 %v4_15c60, { 0, 2, 1, 3 }
  uselistorder i32 %v3_15c60, { 1, 0 }
  uselistorder i32 %v0_15c60, { 0, 2, 1 }
  uselistorder i32 %v1_15c6c, { 1, 0, 6, 5, 4, 3, 2 }
  uselistorder i32 %v24_15c4c, { 0, 2, 1 }
  uselistorder i32 %v0_15c48, { 1, 0 }
  uselistorder i32 %v0_15c4c, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_15c3c, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_15c3c, { 1, 0 }
  uselistorder i32 %v0_15c4c64, { 1, 0 }
  uselistorder i32 %v1_15c2892, { 2, 1, 0 }
  uselistorder i32 %v13_15c24, { 1, 0, 2 }
  uselistorder i32 %v1_15c20, { 2, 1, 0 }
  uselistorder i1 %v4_15c18, { 0, 2, 1, 3 }
  uselistorder i32 %v3_15c18, { 1, 0 }
  uselistorder i32 %v0_15c3c.pre, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v1_15c08, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v1_15bf4, { 8, 7, 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 %v1_15c24, { 6, 3, 0, 13, 14, 2, 5, 4, 11, 10, 9, 8, 7, 12, 1 }
  uselistorder i32 %v6_15be8, { 1, 0, 2 }
  uselistorder i32 %v1_15be0, { 0, 2, 1 }
  uselistorder i32 %v1_15bcc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_15bc8, { 1, 2, 0 }
  uselistorder i32 %v0_15bc8, { 0, 2, 1, 3 }
  uselistorder i32 %v11_15bb8, { 1, 0 }
  uselistorder i32 %v8_15bb8, { 2, 1, 0 }
  uselistorder i32 %v3_15bb8, { 2, 3, 7, 0, 1, 6, 4, 5, 8 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 23, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 24, 25, 21, 16, 15, 17, 18, 20, 19, 22, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 3, 37, 4, 38, 5, 39, 7, 6, 8, 9, 41, 11, 10, 12, 15, 14, 16, 13, 40, 17, 42, 43, 30, 18, 29, 2, 19, 31, 20, 28, 21, 32, 22, 34, 23, 33, 24, 25, 35, 26, 27, 36, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 38, 6, 39, 7, 8, 9, 40, 10, 41, 11, 42, 12, 13, 14, 15, 43, 35, 36, 37, 44, 45, 33, 16, 17, 29, 18, 30, 3, 28, 19, 20, 21, 22, 31, 23, 24, 25, 26, 27, 32, 34, 0, 1, 2 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 4, 3, 6, 7, 5, 8, 10, 9, 11 }
  uselistorder i1* %cpsr_n.global-to-local, { 7, 8, 9, 10, 1, 11, 3, 6, 2, 12, 13, 14, 5, 4, 30, 31, 32, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cpsr_c.global-to-local, { 6, 5, 7, 8, 11, 9, 10, 12, 1, 13, 4, 3, 2, 14, 15, 16, 17, 28, 29, 30, 31, 34, 32, 33, 35, 18, 19, 20, 0, 21, 22, 23, 25, 24, 26, 27 }
  uselistorder i8 0, { 4, 17, 18, 11, 19, 20, 0, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 40, 42, 39, 12, 41, 13, 43, 44, 38, 2, 15, 45, 46, 50, 47, 48, 49, 14, 51, 52, 53, 54, 55, 3, 56, 16, 57, 58, 59, 61, 62, 6, 65, 66, 67, 10, 63, 64, 8, 68, 69, 70, 9, 71, 5, 72, 73, 60, 74, 75, 76, 77 }
  uselistorder label %.thread17, { 3, 2, 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %dec_label_pc_15e94, { 2, 0, 1 }
  uselistorder label %.thread15, { 5, 4, 3, 1, 2, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %thread-pre-split12._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15e5c, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_15d94, { 1, 0 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %dec_label_pc_15d34, { 1, 0 }
  uselistorder label %dec_label_pc_15cf0, { 1, 0 }
  uselistorder label %.thread10, { 6, 5, 4, 1, 2, 3, 0 }
  uselistorder label %bb150, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread108, { 2, 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %.thread98, { 2, 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_15c58, { 1, 0 }
  uselistorder label %dec_label_pc_15c44, { 1, 0 }
  uselistorder label %dec_label_pc_15c3c, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread93, { 2, 1, 0 }
  uselistorder label %bb135, { 1, 0 }
  uselistorder label %.thread2, { 4, 3, 1, 0, 2 }
  uselistorder label %bb132, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb128, { 1, 0 }
}

define i32 @function_15ec4(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15ec4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp21 = ptrtoint i8* %arg1 to i32
  %v3_15ec4 = load i32, i32* @r4, align 4
  %v6_15ec4 = load i32, i32* @r5, align 4
  %v9_15ec4 = load i32, i32* @r6, align 4
  %v12_15ec4 = load i32, i32* @r7, align 4
  %v15_15ec4 = load i32, i32* @lr, align 4
  %v5_15ec8 = icmp ugt i8* %tmp, %arg1
  %v11_15ec8 = icmp eq i8* %tmp, %arg1
  store i1 %v11_15ec8, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp21, i32* @r5, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg3, i32* @ip, align 4
  store i32 %tmp21, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v11_15ec8, label %dec_label_pc_15f08, label %dec_label_pc_15ee8

dec_label_pc_15ee8:                               ; preds = %dec_label_pc_15ec4
  %v3_15ee8 = add i32 %arg3, %arg2
  store i32 %v3_15ee8, i32* @r3, align 4
  %v4_15eec = icmp ult i32 %tmp21, %v3_15ee8
  %v10_15eec = icmp eq i32 %tmp21, %v3_15ee8
  store i1 %v10_15eec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_15eec, label %dec_label_pc_15ef4, label %dec_label_pc_15f00

dec_label_pc_15ef4:                               ; preds = %dec_label_pc_15ee8
  %v3_15ef4 = add i32 %tmp21, %arg3
  store i32 %v3_15ef4, i32* @r7, align 4
  %v4_15ef8 = icmp ugt i32 %v3_15ef4, %arg2
  %v10_15ef8 = icmp eq i32 %v3_15ef4, %arg2
  store i1 %v10_15ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_15ef8, label %dec_label_pc_15f18, label %dec_label_pc_15f00

dec_label_pc_15f00:                               ; preds = %dec_label_pc_15ef4, %dec_label_pc_15ee8
  %tmp29 = bitcast i8* %arg1 to i16*
  %v6_15f00 = call i32 @function_15bb8(i16* %tmp29, i32 %arg2, i32 %arg3)
  store i32 %v6_15f00, i32* @r5, align 4
  br label %dec_label_pc_15f08

dec_label_pc_15f08:                               ; preds = %dec_label_pc_15f94, %dec_label_pc_15f84, %dec_label_pc_15fd8, %dec_label_pc_15f38, %dec_label_pc_15f64, %dec_label_pc_15f5c, %dec_label_pc_15f30, %dec_label_pc_15ec4, %dec_label_pc_15f00
  %v0_15f08 = load i32, i32* @r5, align 4
  store i32 %v3_15ec4, i32* @r4, align 4
  store i32 %v6_15ec4, i32* @r5, align 4
  store i32 %v9_15ec4, i32* @r6, align 4
  store i32 %v12_15ec4, i32* @r7, align 4
  store i32 %v15_15ec4, i32* @lr, align 4
  ret i32 %v0_15f08

dec_label_pc_15f18:                               ; preds = %dec_label_pc_15ef4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  %v2_15f4c = urem i32 %arg2, 4
  br i1 %v5_15ec8, label %dec_label_pc_15f20, label %dec_label_pc_15f4c

dec_label_pc_15f20:                               ; preds = %dec_label_pc_15f18
  %v2_15f24 = urem i32 %tmp21, 4
  %v9_15f28 = icmp eq i32 %v2_15f4c, %v2_15f24
  store i1 %v9_15f28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f28, label %dec_label_pc_15fd0, label %dec_label_pc_15f30

dec_label_pc_15f30.loopexit:                      ; preds = %dec_label_pc_15ff8
  store i1 %v7_16000, i1* %cpsr_z.global-to-local, align 1
  %v0_15f30.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15f30

dec_label_pc_15f30:                               ; preds = %dec_label_pc_15f30.loopexit, %dec_label_pc_15ff0, %dec_label_pc_15f20
  %v2_15f4012 = phi i32 [ %v4_16004, %dec_label_pc_15f30.loopexit ], [ %v1_160048, %dec_label_pc_15ff0 ], [ %tmp21, %dec_label_pc_15f20 ]
  %v0_15f30 = phi i32 [ %v0_15f30.pre, %dec_label_pc_15f30.loopexit ], [ %v0_15ff0, %dec_label_pc_15ff0 ], [ %arg3, %dec_label_pc_15f20 ]
  %v2_15f30 = icmp eq i32 %v0_15f30, 0
  store i1 %v2_15f30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f30, label %dec_label_pc_15f08, label %dec_label_pc_15f38

dec_label_pc_15f38:                               ; preds = %dec_label_pc_15f30, %dec_label_pc_15f38.dec_label_pc_15f38_crit_edge
  %v2_15f40 = phi i32 [ %v5_15f40, %dec_label_pc_15f38.dec_label_pc_15f38_crit_edge ], [ %v2_15f4012, %dec_label_pc_15f30 ]
  %v0_15f3c = phi i32 [ %v0_15f3c.pre, %dec_label_pc_15f38.dec_label_pc_15f38_crit_edge ], [ %v0_15f30, %dec_label_pc_15f30 ]
  %v0_15f38 = load i32, i32* @r6, align 4
  %v1_15f38 = inttoptr i32 %v0_15f38 to i8*
  %v2_15f38 = load i8, i8* %v1_15f38, align 1
  %v5_15f38 = add i32 %v0_15f38, 1
  store i32 %v5_15f38, i32* @r6, align 4
  %v1_15f3c = add i32 %v0_15f3c, -1
  store i32 %v1_15f3c, i32* @ip, align 4
  %v7_15f3c = icmp eq i32 %v0_15f3c, 1
  store i1 %v7_15f3c, i1* %cpsr_z.global-to-local, align 1
  %v3_15f40 = inttoptr i32 %v2_15f40 to i8*
  store i8 %v2_15f38, i8* %v3_15f40, align 1
  %v4_15f40 = load i32, i32* @r4, align 4
  %v5_15f40 = add i32 %v4_15f40, 1
  store i32 %v5_15f40, i32* @r4, align 4
  %v0_15f44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15f44, label %dec_label_pc_15f08, label %dec_label_pc_15f38.dec_label_pc_15f38_crit_edge

dec_label_pc_15f38.dec_label_pc_15f38_crit_edge:  ; preds = %dec_label_pc_15f38
  %v0_15f3c.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15f38

dec_label_pc_15f4c:                               ; preds = %dec_label_pc_15f18
  store i32 %v2_15f4c, i32* %r2.global-to-local, align 4
  %v2_15f50 = urem i32 %tmp21, 4
  %v9_15f54 = icmp eq i32 %v2_15f4c, %v2_15f50
  store i1 %v9_15f54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f54, label %dec_label_pc_15f7c, label %dec_label_pc_15f5c

dec_label_pc_15f5c.loopexit:                      ; preds = %dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge, %dec_label_pc_15fb8.preheader
  %v7_15fc0.lcssa = phi i1 [ %v7_15fc040, %dec_label_pc_15fb8.preheader ], [ %v7_15fc0, %dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge ]
  store i1 %v7_15fc0.lcssa, i1* %cpsr_z.global-to-local, align 1
  %v0_15f5c.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15f5c

dec_label_pc_15f5c:                               ; preds = %dec_label_pc_15f5c.loopexit, %dec_label_pc_15fb0, %dec_label_pc_15f4c
  %v0_15f5c = phi i32 [ %v0_15f5c.pre, %dec_label_pc_15f5c.loopexit ], [ %v0_15fb0, %dec_label_pc_15fb0 ], [ %arg3, %dec_label_pc_15f4c ]
  %v2_15f5c = icmp eq i32 %v0_15f5c, 0
  store i1 %v2_15f5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f5c, label %dec_label_pc_15f08, label %dec_label_pc_15f64

dec_label_pc_15f64:                               ; preds = %dec_label_pc_15f5c, %dec_label_pc_15f64.dec_label_pc_15f64_crit_edge
  %v0_15f64 = phi i32 [ %v0_15f64.pre, %dec_label_pc_15f64.dec_label_pc_15f64_crit_edge ], [ %v0_15f5c, %dec_label_pc_15f5c ]
  %v1_15f64 = add i32 %v0_15f64, -1
  store i32 %v1_15f64, i32* @ip, align 4
  %v1_15f68 = load i32, i32* @lr, align 4
  %v2_15f68 = add i32 %v1_15f68, %v1_15f64
  %v3_15f68 = inttoptr i32 %v2_15f68 to i8*
  %v4_15f68 = load i8, i8* %v3_15f68, align 1
  %v2_15f6c = icmp eq i32 %v1_15f64, 0
  store i1 %v2_15f6c, i1* %cpsr_z.global-to-local, align 1
  %v3_15f70 = load i32, i32* @r5, align 4
  %v4_15f70 = add i32 %v3_15f70, %v1_15f64
  %v5_15f70 = inttoptr i32 %v4_15f70 to i8*
  store i8 %v4_15f68, i8* %v5_15f70, align 1
  %v0_15f74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15f74, label %dec_label_pc_15f08, label %dec_label_pc_15f64.dec_label_pc_15f64_crit_edge

dec_label_pc_15f64.dec_label_pc_15f64_crit_edge:  ; preds = %dec_label_pc_15f64
  %v0_15f64.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15f64

dec_label_pc_15f7c:                               ; preds = %dec_label_pc_15f4c
  %v1_15f7c = urem i32 %v3_15ef4, 4
  %v2_15f7c = icmp eq i32 %v1_15f7c, 0
  store i1 %v2_15f7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f7c, label %dec_label_pc_15fb0, label %dec_label_pc_15f84

dec_label_pc_15f84:                               ; preds = %dec_label_pc_15f7c
  %v1_15f84 = add i32 %arg3, -1
  store i32 %v1_15f84, i32* @ip, align 4
  %v2_15f84 = icmp eq i32 %arg3, 0
  %v7_15f84 = icmp eq i32 %arg3, 1
  store i1 %v7_15f84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f84, label %dec_label_pc_15f08, label %dec_label_pc_15f9c.preheader

dec_label_pc_15f9c.preheader:                     ; preds = %dec_label_pc_15f84
  %v4_15f88 = add i32 %v1_15f84, %tmp21
  store i32 %v4_15f88, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15f9c

dec_label_pc_15f94:                               ; preds = %dec_label_pc_15f9c
  %v1_15f94 = add i32 %v0_15fb0.pre, -1
  store i32 %v1_15f94, i32* @ip, align 4
  %v2_15f94 = icmp eq i32 %v0_15fb0.pre, 0
  %v7_15f94 = icmp eq i32 %v0_15fb0.pre, 1
  store i1 %v7_15f94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f94, label %dec_label_pc_15f08, label %dec_label_pc_15f94.dec_label_pc_15f9c_crit_edge

dec_label_pc_15f94.dec_label_pc_15f9c_crit_edge:  ; preds = %dec_label_pc_15f94
  %v1_15f9c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_15f9c

dec_label_pc_15f9c:                               ; preds = %dec_label_pc_15f94.dec_label_pc_15f9c_crit_edge, %dec_label_pc_15f9c.preheader
  %v0_15fa0 = phi i32 [ %v4_15f88, %dec_label_pc_15f9c.preheader ], [ %v1_15fa8, %dec_label_pc_15f94.dec_label_pc_15f9c_crit_edge ]
  %v1_15f9c = phi i32 [ %arg2, %dec_label_pc_15f9c.preheader ], [ %v1_15f9c.pre, %dec_label_pc_15f94.dec_label_pc_15f9c_crit_edge ]
  %v0_15f9c = phi i32 [ %v1_15f84, %dec_label_pc_15f9c.preheader ], [ %v1_15f94, %dec_label_pc_15f94.dec_label_pc_15f9c_crit_edge ]
  %v2_15f9c = add i32 %v0_15f9c, %v1_15f9c
  %v3_15f9c = inttoptr i32 %v2_15f9c to i8*
  %v4_15f9c = load i8, i8* %v3_15f9c, align 1
  %v1_15fa0 = urem i32 %v0_15fa0, 4
  %v2_15fa0 = icmp eq i32 %v1_15fa0, 0
  store i1 %v2_15fa0, i1* %cpsr_z.global-to-local, align 1
  %v3_15fa4 = inttoptr i32 %v0_15fa0 to i8*
  store i8 %v4_15f9c, i8* %v3_15fa4, align 1
  %v0_15fa8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15fa8 = add i32 %v0_15fa8, -1
  store i32 %v1_15fa8, i32* %r2.global-to-local, align 4
  %v0_15fac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15fb0.pre = load i32, i32* @ip, align 4
  br i1 %v0_15fac, label %dec_label_pc_15fb0, label %dec_label_pc_15f94

dec_label_pc_15fb0:                               ; preds = %dec_label_pc_15f9c, %dec_label_pc_15f7c
  %v0_15fb0 = phi i32 [ %arg3, %dec_label_pc_15f7c ], [ %v0_15fb0.pre, %dec_label_pc_15f9c ]
  %v7_15fb0 = icmp eq i32 %v0_15fb0, 3
  store i1 %v7_15fb0, i1* %cpsr_z.global-to-local, align 1
  %tmp53 = icmp ult i32 %v0_15fb0, 4
  br i1 %tmp53, label %dec_label_pc_15f5c, label %dec_label_pc_15fb8.preheader

dec_label_pc_15fb8.preheader:                     ; preds = %dec_label_pc_15fb0
  %v1_15fb834 = add i32 %v0_15fb0, -4
  store i32 %v1_15fb834, i32* @ip, align 4
  %v1_15fbc35 = load i32, i32* @lr, align 4
  %v2_15fbc36 = add i32 %v1_15fbc35, %v1_15fb834
  %v3_15fbc37 = inttoptr i32 %v2_15fbc36 to i32*
  %v4_15fbc38 = load i32, i32* %v3_15fbc37, align 4
  %v2_15fc039 = icmp ugt i32 %v1_15fb834, 2
  %v7_15fc040 = icmp eq i32 %v1_15fb834, 3
  %v2_15fc441 = load i32, i32* @r5, align 4
  %v3_15fc442 = add i32 %v2_15fc441, %v1_15fb834
  %v4_15fc443 = inttoptr i32 %v3_15fc442 to i32*
  store i32 %v4_15fbc38, i32* %v4_15fc443, align 4
  %v2_15fc844 = xor i1 %v7_15fc040, true
  %v3_15fc845 = and i1 %v2_15fc039, %v2_15fc844
  br i1 %v3_15fc845, label %dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge, label %dec_label_pc_15f5c.loopexit

dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge:  ; preds = %dec_label_pc_15fb8.preheader, %dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge
  %v0_15fb8.pre = load i32, i32* @ip, align 4
  %v1_15fb8 = add i32 %v0_15fb8.pre, -4
  store i32 %v1_15fb8, i32* @ip, align 4
  %v1_15fbc = load i32, i32* @lr, align 4
  %v2_15fbc = add i32 %v1_15fbc, %v1_15fb8
  %v3_15fbc = inttoptr i32 %v2_15fbc to i32*
  %v4_15fbc = load i32, i32* %v3_15fbc, align 4
  %v2_15fc0 = icmp ugt i32 %v1_15fb8, 2
  %v7_15fc0 = icmp eq i32 %v1_15fb8, 3
  %v2_15fc4 = load i32, i32* @r5, align 4
  %v3_15fc4 = add i32 %v2_15fc4, %v1_15fb8
  %v4_15fc4 = inttoptr i32 %v3_15fc4 to i32*
  store i32 %v4_15fbc, i32* %v4_15fc4, align 4
  %v2_15fc8 = xor i1 %v7_15fc0, true
  %v3_15fc8 = and i1 %v2_15fc0, %v2_15fc8
  br i1 %v3_15fc8, label %dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge, label %dec_label_pc_15f5c.loopexit

dec_label_pc_15fd0:                               ; preds = %dec_label_pc_15f20
  %v2_15fd0 = icmp eq i32 %v2_15f4c, 0
  store i1 %v2_15fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15fd0, label %dec_label_pc_15ff0, label %dec_label_pc_15fd8

dec_label_pc_15fd8:                               ; preds = %dec_label_pc_15fd0, %dec_label_pc_15fe0
  %v2_15fe4 = phi i32 [ %v5_15fe4, %dec_label_pc_15fe0 ], [ %tmp21, %dec_label_pc_15fd0 ]
  %v0_15fd8 = phi i32 [ %v0_15ff0.pre, %dec_label_pc_15fe0 ], [ %arg3, %dec_label_pc_15fd0 ]
  %v1_15fd8 = add i32 %v0_15fd8, -1
  store i32 %v1_15fd8, i32* @ip, align 4
  %v2_15fd8 = icmp eq i32 %v0_15fd8, 0
  %v7_15fd8 = icmp eq i32 %v0_15fd8, 1
  store i1 %v7_15fd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15fd8, label %dec_label_pc_15f08, label %dec_label_pc_15fe0

dec_label_pc_15fe0:                               ; preds = %dec_label_pc_15fd8
  %v0_15fe0 = load i32, i32* @r6, align 4
  %v1_15fe0 = inttoptr i32 %v0_15fe0 to i8*
  %v2_15fe0 = load i8, i8* %v1_15fe0, align 1
  %v5_15fe0 = add i32 %v0_15fe0, 1
  store i32 %v5_15fe0, i32* @r6, align 4
  %v3_15fe4 = inttoptr i32 %v2_15fe4 to i8*
  store i8 %v2_15fe0, i8* %v3_15fe4, align 1
  %v4_15fe4 = load i32, i32* @r4, align 4
  %v5_15fe4 = add i32 %v4_15fe4, 1
  store i32 %v5_15fe4, i32* @r4, align 4
  %v1_15fe8 = urem i32 %v5_15fe4, 4
  %v2_15fe8 = icmp eq i32 %v1_15fe8, 0
  store i1 %v2_15fe8, i1* %cpsr_z.global-to-local, align 1
  %v0_15ff0.pre = load i32, i32* @ip, align 4
  br i1 %v2_15fe8, label %dec_label_pc_15ff0, label %dec_label_pc_15fd8

dec_label_pc_15ff0:                               ; preds = %dec_label_pc_15fe0, %dec_label_pc_15fd0
  %v1_160048 = phi i32 [ %tmp21, %dec_label_pc_15fd0 ], [ %v5_15fe4, %dec_label_pc_15fe0 ]
  %v0_15ff0 = phi i32 [ %arg3, %dec_label_pc_15fd0 ], [ %v0_15ff0.pre, %dec_label_pc_15fe0 ]
  %v7_15ff0 = icmp eq i32 %v0_15ff0, 3
  store i1 %v7_15ff0, i1* %cpsr_z.global-to-local, align 1
  %tmp54 = icmp ult i32 %v0_15ff0, 4
  br i1 %tmp54, label %dec_label_pc_15f30, label %dec_label_pc_15ff8

dec_label_pc_15ff8:                               ; preds = %dec_label_pc_15ff0, %dec_label_pc_15ff8.dec_label_pc_15ff8_crit_edge
  %v1_16004 = phi i32 [ %v4_16004, %dec_label_pc_15ff8.dec_label_pc_15ff8_crit_edge ], [ %v1_160048, %dec_label_pc_15ff0 ]
  %v0_15ff8 = phi i32 [ %v0_15ff8.pre, %dec_label_pc_15ff8.dec_label_pc_15ff8_crit_edge ], [ %v0_15ff0, %dec_label_pc_15ff0 ]
  %v1_15ff8 = add i32 %v0_15ff8, -4
  store i32 %v1_15ff8, i32* @ip, align 4
  %v0_15ffc = load i32, i32* @r6, align 4
  %v1_15ffc = inttoptr i32 %v0_15ffc to i32*
  %v2_15ffc = load i32, i32* %v1_15ffc, align 4
  %v4_15ffc = add i32 %v0_15ffc, 4
  store i32 %v4_15ffc, i32* @r6, align 4
  %v2_16000 = icmp ugt i32 %v1_15ff8, 2
  %v7_16000 = icmp eq i32 %v1_15ff8, 3
  %v2_16004 = inttoptr i32 %v1_16004 to i32*
  store i32 %v2_15ffc, i32* %v2_16004, align 4
  %v3_16004 = load i32, i32* @r4, align 4
  %v4_16004 = add i32 %v3_16004, 4
  store i32 %v4_16004, i32* @r4, align 4
  %v2_16008 = xor i1 %v7_16000, true
  %v3_16008 = and i1 %v2_16000, %v2_16008
  br i1 %v3_16008, label %dec_label_pc_15ff8.dec_label_pc_15ff8_crit_edge, label %dec_label_pc_15f30.loopexit

dec_label_pc_15ff8.dec_label_pc_15ff8_crit_edge:  ; preds = %dec_label_pc_15ff8
  %v0_15ff8.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15ff8

; uselistorder directives
  uselistorder i32 %v4_16004, { 2, 0, 1 }
  uselistorder i32 %v0_15ff0, { 1, 0, 3, 2 }
  uselistorder i32 %v5_15fe4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_15fd8, { 0, 2, 1 }
  uselistorder i32 %v1_15fb8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_15fb0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_15fb0.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15fa8, { 1, 0 }
  uselistorder i32 %v0_15fa0, { 1, 0 }
  uselistorder i32 %v1_15f84, { 1, 0, 2 }
  uselistorder i32 %v1_15f64, { 0, 2, 1, 3 }
  uselistorder i32 %v5_15f40, { 1, 0 }
  uselistorder i32 %v2_15f4c, { 3, 1, 0, 2 }
  uselistorder i32 %tmp21, { 5, 2, 4, 0, 6, 1, 3, 8, 7, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 4, 5, 6, 8, 9, 7, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg3, { 3, 0, 4, 6, 8, 7, 5, 9, 10, 1, 2, 11, 12 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_15ff8, { 1, 0 }
  uselistorder label %dec_label_pc_15fd8, { 1, 0 }
  uselistorder label %dec_label_pc_15fb8.dec_label_pc_15fb8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15f64, { 1, 0 }
  uselistorder label %dec_label_pc_15f5c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f38, { 1, 0 }
  uselistorder label %dec_label_pc_15f30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f08, { 2, 0, 1, 4, 5, 3, 6, 8, 7 }
}

define i32 @function_16010(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16010:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16010 = icmp eq i32 %arg3, 0
  store i1 %v2_16010, i1* %cpsr_z.global-to-local, align 1
  %v3_16014 = load i32, i32* @r4, align 4
  store i32 %v3_16014, i32* %stack_var_-20, align 4
  br i1 %v2_16010, label %dec_label_pc_16124, label %dec_label_pc_1601c

dec_label_pc_1601c:                               ; preds = %dec_label_pc_16010
  %v1_1601c = urem i32 %arg2, 256
  store i32 %v1_1601c, i32* @ip, align 4
  %v3_16020 = add i32 %tmp, %arg3
  store i32 %v3_16020, i32* %r2.global-to-local, align 4
  %v2_16024 = icmp ne i32 %arg3, 1
  store i1 %v2_16024, i1* %cpsr_c.global-to-local, align 1
  %v7_16024 = icmp eq i32 %arg3, 2
  store i1 %v7_16024, i1* %cpsr_z.global-to-local, align 1
  %v1_16028 = trunc i32 %arg2 to i8
  %v3_16028 = add i32 %v3_16020, -1
  %v4_16028 = inttoptr i32 %v3_16028 to i8*
  store i8 %v1_16028, i8* %v4_16028, align 1
  %v0_1602c = load i32, i32* @ip, align 4
  %v1_1602c = trunc i32 %v0_1602c to i8
  store i8 %v1_1602c, i8* %arg1, align 1
  %v0_16030 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_16030 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_16030 = xor i1 %v1_16030, true
  %v3_16030 = or i1 %v0_16030, %v2_16030
  br i1 %v3_16030, label %dec_label_pc_16124, label %dec_label_pc_16034

dec_label_pc_16034:                               ; preds = %dec_label_pc_1601c
  %v0_16034 = load i32, i32* %r3.global-to-local, align 4
  %v2_16034 = icmp ugt i32 %v0_16034, 5
  store i1 %v2_16034, i1* %cpsr_c.global-to-local, align 1
  %v7_16034 = icmp eq i32 %v0_16034, 6
  store i1 %v7_16034, i1* %cpsr_z.global-to-local, align 1
  %v0_16038 = load i32, i32* @ip, align 4
  %v1_16038 = trunc i32 %v0_16038 to i8
  %v2_16038 = load i32, i32* %r2.global-to-local, align 4
  %v3_16038 = add i32 %v2_16038, -2
  %v4_16038 = inttoptr i32 %v3_16038 to i8*
  store i8 %v1_16038, i8* %v4_16038, align 1
  %v0_1603c = load i32, i32* @ip, align 4
  %v1_1603c = trunc i32 %v0_1603c to i8
  %v4_1603c = add i32 %tmp, 1
  %v5_1603c = inttoptr i32 %v4_1603c to i8*
  store i8 %v1_1603c, i8* %v5_1603c, align 1
  %v0_16040 = load i32, i32* @ip, align 4
  %v1_16040 = trunc i32 %v0_16040 to i8
  %v2_16040 = load i32, i32* %r2.global-to-local, align 4
  %v3_16040 = add i32 %v2_16040, -3
  %v4_16040 = inttoptr i32 %v3_16040 to i8*
  store i8 %v1_16040, i8* %v4_16040, align 1
  %v0_16044 = load i32, i32* @ip, align 4
  %v1_16044 = trunc i32 %v0_16044 to i8
  %v4_16044 = add i32 %tmp, 2
  %v5_16044 = inttoptr i32 %v4_16044 to i8*
  store i8 %v1_16044, i8* %v5_16044, align 1
  %v0_16048 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_16048 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_16048 = xor i1 %v1_16048, true
  %v3_16048 = or i1 %v0_16048, %v2_16048
  br i1 %v3_16048, label %dec_label_pc_16124, label %dec_label_pc_1604c

dec_label_pc_1604c:                               ; preds = %dec_label_pc_16034
  %v0_1604c = load i32, i32* %r3.global-to-local, align 4
  %v2_1604c = icmp ugt i32 %v0_1604c, 7
  store i1 %v2_1604c, i1* %cpsr_c.global-to-local, align 1
  %v7_1604c = icmp eq i32 %v0_1604c, 8
  store i1 %v7_1604c, i1* %cpsr_z.global-to-local, align 1
  %v0_16050 = load i32, i32* @ip, align 4
  %v1_16050 = trunc i32 %v0_16050 to i8
  %v2_16050 = load i32, i32* %r2.global-to-local, align 4
  %v3_16050 = add i32 %v2_16050, -4
  %v4_16050 = inttoptr i32 %v3_16050 to i8*
  store i8 %v1_16050, i8* %v4_16050, align 1
  %v0_16054 = load i32, i32* @ip, align 4
  %v1_16054 = trunc i32 %v0_16054 to i8
  %v4_16054 = add i32 %tmp, 3
  %v5_16054 = inttoptr i32 %v4_16054 to i8*
  store i8 %v1_16054, i8* %v5_16054, align 1
  %v0_16058 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_16058 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_16058 = xor i1 %v1_16058, true
  %v3_16058 = or i1 %v0_16058, %v2_16058
  br i1 %v3_16058, label %dec_label_pc_16124, label %dec_label_pc_1605c

dec_label_pc_1605c:                               ; preds = %dec_label_pc_1604c
  %v2_1605c = sub i32 0, %tmp
  %v1_16060 = urem i32 %v2_1605c, 4
  store i32 %v1_16060, i32* %r1.global-to-local, align 4
  %v0_16064 = load i32, i32* @ip, align 4
  %v2_16068 = mul i32 %v0_16064, 257
  store i32 %v2_16068, i32* %r2.global-to-local, align 4
  %v1_1606c = load i32, i32* %r3.global-to-local, align 4
  %v2_1606c = sub i32 %v1_1606c, %v1_16060
  %v1_16070 = and i32 %v2_1606c, -4
  store i32 %v1_16070, i32* %lr.global-to-local, align 4
  %v3_16074 = add i32 %v1_16060, %tmp
  store i32 %v3_16074, i32* %r6.global-to-local, align 4
  %v3_16078 = mul i32 %v0_16064, 16842752
  store i32 %v3_16078, i32* %r3.global-to-local, align 4
  %v2_1607c = mul i32 %v0_16064, 16843009
  store i32 %v2_1607c, i32* @ip, align 4
  %v2_16080 = add i32 %v1_16070, %v3_16074
  store i32 %v2_16080, i32* %r5.global-to-local, align 4
  %v2_16084 = icmp ugt i32 %v1_16070, 7
  store i1 %v2_16084, i1* %cpsr_c.global-to-local, align 1
  %v7_16084 = icmp eq i32 %v1_16070, 8
  store i1 %v7_16084, i1* %cpsr_z.global-to-local, align 1
  %v5_16088 = inttoptr i32 %v3_16074 to i32*
  store i32 %v2_1607c, i32* %v5_16088, align 4
  %v0_1608c = load i32, i32* @ip, align 4
  %v1_1608c = load i32, i32* %r5.global-to-local, align 4
  %v2_1608c = add i32 %v1_1608c, -4
  %v3_1608c = inttoptr i32 %v2_1608c to i32*
  store i32 %v0_1608c, i32* %v3_1608c, align 4
  %v2_16090 = xor i1 %v2_16084, true
  %v3_16090 = or i1 %v7_16084, %v2_16090
  br i1 %v3_16090, label %dec_label_pc_16124, label %dec_label_pc_16094

dec_label_pc_16094:                               ; preds = %dec_label_pc_1605c
  %v0_16094 = load i32, i32* %lr.global-to-local, align 4
  %v2_16094 = icmp ugt i32 %v0_16094, 23
  store i1 %v2_16094, i1* %cpsr_c.global-to-local, align 1
  %v7_16094 = icmp eq i32 %v0_16094, 24
  store i1 %v7_16094, i1* %cpsr_z.global-to-local, align 1
  %v0_16098 = load i32, i32* @ip, align 4
  %v1_16098 = load i32, i32* %r6.global-to-local, align 4
  %v2_16098 = add i32 %v1_16098, 4
  %v3_16098 = inttoptr i32 %v2_16098 to i32*
  store i32 %v0_16098, i32* %v3_16098, align 4
  %v0_1609c = load i32, i32* @ip, align 4
  %v1_1609c = load i32, i32* %r6.global-to-local, align 4
  %v2_1609c = add i32 %v1_1609c, 8
  %v3_1609c = inttoptr i32 %v2_1609c to i32*
  store i32 %v0_1609c, i32* %v3_1609c, align 4
  %v0_160a0 = load i32, i32* @ip, align 4
  %v1_160a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_160a0 = add i32 %v1_160a0, -12
  %v3_160a0 = inttoptr i32 %v2_160a0 to i32*
  store i32 %v0_160a0, i32* %v3_160a0, align 4
  %v0_160a4 = load i32, i32* @ip, align 4
  %v1_160a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_160a4 = add i32 %v1_160a4, -8
  %v3_160a4 = inttoptr i32 %v2_160a4 to i32*
  store i32 %v0_160a4, i32* %v3_160a4, align 4
  %v2_160a8 = xor i1 %v2_16094, true
  %v3_160a8 = or i1 %v7_16094, %v2_160a8
  br i1 %v3_160a8, label %dec_label_pc_16124, label %dec_label_pc_160ac

dec_label_pc_160ac:                               ; preds = %dec_label_pc_16094
  %v0_160ac = load i32, i32* %r6.global-to-local, align 4
  %v1_160ac = and i32 %v0_160ac, 4
  %v1_160b0 = or i32 %v1_160ac, 24
  store i32 %v1_160b0, i32* %r7.global-to-local, align 4
  %v1_160b4 = load i32, i32* %lr.global-to-local, align 4
  %v2_160b4 = sub i32 %v1_160b4, %v1_160b0
  store i32 %v2_160b4, i32* %lr.global-to-local, align 4
  %v0_160b8 = load i32, i32* @ip, align 4
  store i32 %v0_160b8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_160c4 = icmp ugt i32 %v2_160b4, 30
  store i1 %v2_160c4, i1* %cpsr_c.global-to-local, align 1
  %v7_160c4 = icmp eq i32 %v2_160b4, 31
  store i1 %v7_160c4, i1* %cpsr_z.global-to-local, align 1
  %v2_160c8 = add i32 %v0_160ac, 12
  %v3_160c8 = inttoptr i32 %v2_160c8 to i32*
  store i32 %v0_160b8, i32* %v3_160c8, align 4
  %v0_160cc = load i32, i32* @ip, align 4
  %v1_160cc = load i32, i32* %r6.global-to-local, align 4
  %v2_160cc = add i32 %v1_160cc, 16
  %v3_160cc = inttoptr i32 %v2_160cc to i32*
  store i32 %v0_160cc, i32* %v3_160cc, align 4
  %v0_160d0 = load i32, i32* @ip, align 4
  %v1_160d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_160d0 = add i32 %v1_160d0, 20
  %v3_160d0 = inttoptr i32 %v2_160d0 to i32*
  store i32 %v0_160d0, i32* %v3_160d0, align 4
  %v0_160d4 = load i32, i32* @ip, align 4
  %v1_160d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_160d4 = add i32 %v1_160d4, 24
  %v3_160d4 = inttoptr i32 %v2_160d4 to i32*
  store i32 %v0_160d4, i32* %v3_160d4, align 4
  %v0_160d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_160d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_160d8 = or i32 %v1_160d8, %v0_160d8
  store i32 %v2_160d8, i32* %r3.global-to-local, align 4
  %v1_160dc = load i32, i32* %r2.global-to-local, align 4
  %v2_160dc = or i32 %v1_160dc, %v1_160d8
  store i32 %v2_160dc, i32* %r4.global-to-local, align 4
  %v0_160e0 = load i32, i32* @ip, align 4
  %v1_160e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_160e0 = add i32 %v1_160e0, -16
  %v3_160e0 = inttoptr i32 %v2_160e0 to i32*
  store i32 %v0_160e0, i32* %v3_160e0, align 4
  %v0_160e4 = load i32, i32* @ip, align 4
  %v1_160e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_160e4 = add i32 %v1_160e4, -28
  %v3_160e4 = inttoptr i32 %v2_160e4 to i32*
  store i32 %v0_160e4, i32* %v3_160e4, align 4
  %v0_160e8 = load i32, i32* @ip, align 4
  %v1_160e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_160e8 = add i32 %v1_160e8, -24
  %v3_160e8 = inttoptr i32 %v2_160e8 to i32*
  store i32 %v0_160e8, i32* %v3_160e8, align 4
  %v0_160ec = load i32, i32* @ip, align 4
  %v1_160ec = load i32, i32* %r5.global-to-local, align 4
  %v2_160ec = add i32 %v1_160ec, -20
  %v3_160ec = inttoptr i32 %v2_160ec to i32*
  store i32 %v0_160ec, i32* %v3_160ec, align 4
  %v2_160f0 = xor i1 %v2_160c4, true
  %v3_160f0 = or i1 %v7_160c4, %v2_160f0
  br i1 %v3_160f0, label %dec_label_pc_16124, label %dec_label_pc_160f4

dec_label_pc_160f4:                               ; preds = %dec_label_pc_160ac
  %v0_160f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_160f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_160f4 = add i32 %v1_160f4, %v0_160f4
  store i32 %v2_160f4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_160f8

dec_label_pc_160f8:                               ; preds = %dec_label_pc_160f8, %dec_label_pc_160f4
  %v0_16100 = phi i32 [ %v1_1611c, %dec_label_pc_160f8 ], [ %v2_160f4, %dec_label_pc_160f4 ]
  %v0_160f8 = load i32, i32* %lr.global-to-local, align 4
  %v1_160f8 = add i32 %v0_160f8, -32
  store i32 %v1_160f8, i32* %lr.global-to-local, align 4
  %v2_160fc = icmp ugt i32 %v1_160f8, 30
  %v7_160fc = icmp eq i32 %v1_160f8, 31
  %v1_16100 = inttoptr i32 %v0_16100 to i32*
  %v2_16100 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_16100, i32* %v1_16100, align 4
  %v3_16100 = add i32 %v0_16100, 4
  %v4_16100 = inttoptr i32 %v3_16100 to i32*
  %v5_16100 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16100, i32* %v4_16100, align 4
  %v0_16104 = load i32, i32* %r3.global-to-local, align 4
  %v1_16104 = load i32, i32* %r2.global-to-local, align 4
  %v2_16104 = add i32 %v1_16104, 8
  %v3_16104 = inttoptr i32 %v2_16104 to i32*
  store i32 %v0_16104, i32* %v3_16104, align 4
  %v0_16108 = load i32, i32* %r4.global-to-local, align 4
  %v1_16108 = load i32, i32* %r2.global-to-local, align 4
  %v2_16108 = add i32 %v1_16108, 12
  %v3_16108 = inttoptr i32 %v2_16108 to i32*
  store i32 %v0_16108, i32* %v3_16108, align 4
  %v0_1610c = load i32, i32* %r3.global-to-local, align 4
  %v1_1610c = load i32, i32* %r2.global-to-local, align 4
  %v2_1610c = add i32 %v1_1610c, 16
  %v3_1610c = inttoptr i32 %v2_1610c to i32*
  store i32 %v0_1610c, i32* %v3_1610c, align 4
  %v0_16110 = load i32, i32* %r4.global-to-local, align 4
  %v1_16110 = load i32, i32* %r2.global-to-local, align 4
  %v2_16110 = add i32 %v1_16110, 20
  %v3_16110 = inttoptr i32 %v2_16110 to i32*
  store i32 %v0_16110, i32* %v3_16110, align 4
  %v0_16114 = load i32, i32* %r3.global-to-local, align 4
  %v1_16114 = load i32, i32* %r2.global-to-local, align 4
  %v2_16114 = add i32 %v1_16114, 24
  %v3_16114 = inttoptr i32 %v2_16114 to i32*
  store i32 %v0_16114, i32* %v3_16114, align 4
  %v0_16118 = load i32, i32* %r4.global-to-local, align 4
  %v1_16118 = load i32, i32* %r2.global-to-local, align 4
  %v2_16118 = add i32 %v1_16118, 28
  %v3_16118 = inttoptr i32 %v2_16118 to i32*
  store i32 %v0_16118, i32* %v3_16118, align 4
  %v0_1611c = load i32, i32* %r2.global-to-local, align 4
  %v1_1611c = add i32 %v0_1611c, 32
  store i32 %v1_1611c, i32* %r2.global-to-local, align 4
  %v2_16120 = xor i1 %v7_160fc, true
  %v3_16120 = and i1 %v2_160fc, %v2_16120
  br i1 %v3_16120, label %dec_label_pc_160f8, label %dec_label_pc_16124.loopexit

dec_label_pc_16124.loopexit:                      ; preds = %dec_label_pc_160f8
  store i1 %v2_160fc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_160fc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16124

dec_label_pc_16124:                               ; preds = %dec_label_pc_16124.loopexit, %dec_label_pc_160ac, %dec_label_pc_16094, %dec_label_pc_1604c, %dec_label_pc_16034, %dec_label_pc_1601c, %dec_label_pc_16010, %dec_label_pc_1605c
  %v2_16124 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16124, i32* @r4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_1611c, { 1, 0 }
  uselistorder i1 %v7_160fc, { 1, 0 }
  uselistorder i32 %v0_16100, { 1, 0 }
  uselistorder i32 %v0_16094, { 1, 0 }
  uselistorder i32 %v3_16074, { 1, 0, 2 }
  uselistorder i32 %v1_16070, { 2, 1, 0, 3 }
  uselistorder i32 %v1_16060, { 2, 1, 0 }
  uselistorder i32 %v0_1604c, { 1, 0 }
  uselistorder i32 %v0_16034, { 1, 0 }
  uselistorder i32 %tmp, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 1, 2, 4, 3, 5, 7 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 -16, { 6, 0, 4, 5, 1, 2, 3 }
  uselistorder i32 30, { 6, 7, 4, 5, 0, 12, 13, 8, 1, 9, 2, 10, 3, 11, 14 }
  uselistorder i32 -3, { 4, 2, 0, 1, 3 }
  uselistorder i32 %arg3, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16124, { 0, 1, 2, 7, 3, 4, 5, 6 }
}

define i32 @function_1612c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1612c:
  ret i32 %arg2
}

define i32 @function_1614c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1614c:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_1614c = load i32, i32* @r0, align 4
  %v1_1614c = inttoptr i32 %v0_1614c to i32*
  %v2_1614c = load i32, i32* %v1_1614c, align 4
  %v2_16150 = icmp eq i32 %v2_1614c, 0
  store i1 %v2_16150, i1* @cpsr_z, align 1
  %v3_16154 = load i32, i32* @r4, align 4
  store i32 %v3_16154, i32* %stack_var_-8, align 4
  store i32 %v0_1614c, i32* %r4.global-to-local, align 4
  br i1 %v2_16150, label %dec_label_pc_161b0, label %dec_label_pc_16160

dec_label_pc_16160:                               ; preds = %dec_label_pc_1614c
  %v0_16160 = call i32 @function_16760()
  store i32 %v0_16160, i32* @r0, align 4
  %v2_16168 = inttoptr i32 %v0_16160 to i32*
  store i32 0, i32* %v2_16168, align 4
  %v0_1616c = call i32 @function_16760()
  %v1_16170 = add i32 %v0_1616c, 4
  %v2_16170 = inttoptr i32 %v1_16170 to i32*
  %v3_16170 = load i32, i32* %v2_16170, align 4
  %v2_16174 = icmp eq i32 %v3_16170, 0
  br i1 %v2_16174, label %dec_label_pc_161b0, label %dec_label_pc_1617c

dec_label_pc_1617c:                               ; preds = %dec_label_pc_16160
  %v0_16180 = load i32, i32* %r4.global-to-local, align 4
  %v4_1618c = call i32 @function_1612c(i32 240, i32 %v0_16180, i32 129, i32 1)
  %v4_16194 = icmp eq i32 %v4_1618c, -38
  br i1 %v4_16194, label %dec_label_pc_16198, label %dec_label_pc_161b0

dec_label_pc_16198:                               ; preds = %dec_label_pc_1617c
  %v0_1619c = load i32, i32* %r4.global-to-local, align 4
  %v2_161a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_161a8, i32* %r4.global-to-local, align 4
  %v4_161ac = call i32 @function_1612c(i32 240, i32 %v0_1619c, i32 1, i32 1)
  br label %dec_label_pc_161b0

dec_label_pc_161b0:                               ; preds = %dec_label_pc_1617c, %dec_label_pc_16160, %dec_label_pc_1614c, %dec_label_pc_16198
  %v1_161b4 = phi i32 [ %v4_1618c, %dec_label_pc_1617c ], [ %v0_1616c, %dec_label_pc_16160 ], [ %v0_1614c, %dec_label_pc_1614c ], [ %v4_161ac, %dec_label_pc_16198 ]
  %v2_161b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_161b0, i32* %r4.global-to-local, align 4
  ret i32 %v1_161b4

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1612c, { 1, 0 }
  uselistorder label %dec_label_pc_161b0, { 3, 0, 1, 2 }
}

define i32 @function_161b8(i32* %arg1) local_unnamed_addr {
dec_label_pc_161b8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_161bc = load i32, i32* @global_var_23838.562, align 4
  %v2_161c0 = icmp eq i32 %v3_161bc, 0
  store i1 %v2_161c0, i1* @cpsr_z, align 1
  %v0_161c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_161c8, i32* @r4, align 4
  br i1 %v2_161c0, label %dec_label_pc_16210, label %dec_label_pc_161dc.preheader

dec_label_pc_161dc.preheader:                     ; preds = %dec_label_pc_161b8
  %v2_161cc = add i32 %v0_161c8, 4
  store i32 %v2_161cc, i32* @r6, align 4
  br label %dec_label_pc_161dc

dec_label_pc_161d8:                               ; preds = %dec_label_pc_161f8
  %v2_161d8 = inttoptr i32 %v0_16200 to i32*
  %v3_161d8 = call i32 @function_162e0(i32* %v2_161d8, i32 %v0_16204)
  store i32 %v3_161d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_161dc.backedge

dec_label_pc_161dc.backedge:                      ; preds = %dec_label_pc_161d8, %dec_label_pc_161dc
  %v0_161dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_161dc

dec_label_pc_161dc:                               ; preds = %dec_label_pc_161dc.backedge, %dec_label_pc_161dc.preheader
  %v0_161dc = phi i32 [ %v0_161dc.pre, %dec_label_pc_161dc.backedge ], [ %v0_161c8, %dec_label_pc_161dc.preheader ]
  %v1_161dc = inttoptr i32 %v0_161dc to i32*
  %v2_161dc = load i32, i32* %v1_161dc, align 4
  store i32 %v2_161dc, i32* @r5, align 4
  store i32 %v2_161dc, i32* %r0.global-to-local, align 4
  %v4_161ec = call i32 @function_167b4(i32 %v2_161dc, i32 1, i32* %v1_161dc)
  store i32 %v4_161ec, i32* %r0.global-to-local, align 4
  %v2_161f0 = icmp eq i32 %v4_161ec, 0
  store i1 %v2_161f0, i1* @cpsr_z, align 1
  br i1 %v2_161f0, label %dec_label_pc_161f8, label %dec_label_pc_161dc.backedge

dec_label_pc_161f8:                               ; preds = %dec_label_pc_161dc
  store i32 1, i32* @r2, align 4
  %v0_161fc = load i32, i32* @r5, align 4
  %v2_161fc = icmp eq i32 %v0_161fc, 0
  %v0_16200 = load i32, i32* @r4, align 4
  store i32 %v0_16200, i32* %r0.global-to-local, align 4
  %v0_16204 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  br i1 %v2_161fc, label %dec_label_pc_16210.loopexit, label %dec_label_pc_161d8

dec_label_pc_16210.loopexit:                      ; preds = %dec_label_pc_161f8
  br label %dec_label_pc_16210

dec_label_pc_16210:                               ; preds = %dec_label_pc_16210.loopexit, %dec_label_pc_161b8
  %v1_16214 = phi i32 [ %v0_16200, %dec_label_pc_16210.loopexit ], [ %v0_161c8, %dec_label_pc_161b8 ]
  ret i32 %v1_16214

; uselistorder directives
  uselistorder i32 %v0_16200, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_161dc.backedge, { 1, 0 }
}

define i32 @function_1621c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1621c:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1621c = load i32, i32* @lr, align 4
  store i32 90696, i32* @lr, align 4
  %v1_16244 = call i32 @function_16258()
  store i32 %v0_1621c, i32* @lr, align 4
  ret i32 %v1_16244
}

define i32 @function_16258() local_unnamed_addr {
dec_label_pc_16258:
  %v0_16278 = call i32 @function_17350()
  ret i32 %v0_16278
}

define i32 @function_16288(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_16288:
  ret i32 %arg2
}

define i32 @function_162ac(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_162ac:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_162ac = load i32, i32* @r4, align 4
  store i32 %v3_162ac, i32* %stack_var_-16, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_162b8

dec_label_pc_162b8:                               ; preds = %dec_label_pc_162b8.dec_label_pc_162b8_crit_edge, %dec_label_pc_162ac
  %v0_162c4 = phi i32 [ %v0_162c4.pre, %dec_label_pc_162b8.dec_label_pc_162b8_crit_edge ], [ %arg2, %dec_label_pc_162ac ]
  %v0_162b8 = phi i32 [ %v0_162b8.pre, %dec_label_pc_162b8.dec_label_pc_162b8_crit_edge ], [ %tmp, %dec_label_pc_162ac ]
  %v1_162b8 = inttoptr i32 %v0_162b8 to i32*
  %v2_162b8 = load i32, i32* %v1_162b8, align 4
  store i32 %v2_162b8, i32* %r4.global-to-local, align 4
  %v2_162c4 = add i32 %v2_162b8, %v0_162c4
  %v4_162c8 = call i32 @function_167b4(i32 %v2_162b8, i32 %v2_162c4, i32* %v1_162b8)
  %v2_162cc = icmp eq i32 %v4_162c8, 0
  store i1 %v2_162cc, i1* @cpsr_z, align 1
  br i1 %v2_162cc, label %dec_label_pc_162d4, label %dec_label_pc_162b8.dec_label_pc_162b8_crit_edge

dec_label_pc_162b8.dec_label_pc_162b8_crit_edge:  ; preds = %dec_label_pc_162b8
  %v0_162b8.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_162c4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_162b8

dec_label_pc_162d4:                               ; preds = %dec_label_pc_162b8
  %v0_162d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_162d8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_162d8, i32* %r4.global-to-local, align 4
  ret i32 %v0_162d4

; uselistorder directives
  uselistorder i32 %v2_162b8, { 1, 0, 2 }
}

define i32 @function_162e0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_162e0:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v3_162e0 = load i32, i32* @r4, align 4
  %v6_162e0 = load i32, i32* @r5, align 4
  %v9_162e0 = load i32, i32* @r6, align 4
  %v12_162e0 = load i32, i32* @r7, align 4
  %v15_162e0 = load i32, i32* @r8, align 4
  %v18_162e0 = load i32, i32* @sl, align 4
  %v21_162e0 = load i32, i32* @lr, align 4
  %v0_162e4 = load i32, i32* @r3, align 4
  %v2_162e4 = icmp eq i32 %v0_162e4, 0
  %v0_162e8 = load i32, i32* @r2, align 4
  store i32 %v0_162e8, i32* @r8, align 4
  %. = select i1 %v2_162e4, i32 0, i32 128
  store i32 %., i32* %sl.global-to-local, align 4
  %v0_162f8 = load i32, i32* @r0, align 4
  store i32 %v0_162f8, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 99, i32* %r2.global-to-local, align 4
  %v2_1632027 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_16320

dec_label_pc_16308:                               ; preds = %dec_label_pc_16328, %dec_label_pc_16320
  %v0_16308 = load i32, i32* @r6, align 4
  %v1_16308 = inttoptr i32 %v0_16308 to i32*
  %v2_16308 = load i32, i32* %v1_16308, align 4
  %v1_1630c = load i32, i32* @r8, align 4
  %v9_1630c = icmp eq i32 %v2_16308, %v1_1630c
  store i1 %v9_1630c, i1* @cpsr_z, align 1
  br i1 %v9_1630c, label %dec_label_pc_16314, label %dec_label_pc_163b8

dec_label_pc_16314:                               ; preds = %dec_label_pc_16308
  %v0_16314 = call i32 @function_16760()
  store i32 %v0_16314, i32* @r0, align 4
  %v0_16318.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_16320.pre = load i32, i32* @r5, align 4
  %v1_16318 = add i32 %v0_16318.pre, -1
  store i32 %v1_16318, i32* %r2.global-to-local, align 4
  %v2_16318 = icmp eq i32 %v0_16318.pre, 0
  %v2_16320 = icmp eq i32 %v0_16320.pre, 0
  store i1 %v2_16320, i1* @cpsr_z, align 1
  br i1 %v2_16318, label %dec_label_pc_16338, label %dec_label_pc_16320

dec_label_pc_16320:                               ; preds = %dec_label_pc_162e0, %dec_label_pc_16314
  %v2_1632030 = phi i1 [ %v2_1632027, %dec_label_pc_162e0 ], [ %v2_16320, %dec_label_pc_16314 ]
  %v0_1634029 = phi i32 [ %arg2, %dec_label_pc_162e0 ], [ %v0_16320.pre, %dec_label_pc_16314 ]
  %v1_163c0828 = phi i32 [ %v0_162f8, %dec_label_pc_162e0 ], [ %v0_16314, %dec_label_pc_16314 ]
  br i1 %v2_1632030, label %dec_label_pc_16308, label %dec_label_pc_16328

dec_label_pc_16328:                               ; preds = %dec_label_pc_16320
  %v1_16328 = inttoptr i32 %v0_1634029 to i32*
  %v2_16328 = load i32, i32* %v1_16328, align 4
  %v2_1632c = icmp eq i32 %v2_16328, 0
  store i1 %v2_1632c, i1* @cpsr_z, align 1
  br i1 %v2_1632c, label %dec_label_pc_16308, label %dec_label_pc_16340

dec_label_pc_16338:                               ; preds = %dec_label_pc_16314
  br i1 %v2_16320, label %dec_label_pc_1637c, label %dec_label_pc_16338.dec_label_pc_16340_crit_edge

dec_label_pc_16338.dec_label_pc_16340_crit_edge:  ; preds = %dec_label_pc_16338
  %.pre = inttoptr i32 %v0_16320.pre to i32*
  br label %dec_label_pc_16340

dec_label_pc_16340:                               ; preds = %dec_label_pc_16328, %dec_label_pc_16338.dec_label_pc_16340_crit_edge
  %v2_16348.pre-phi = phi i32* [ %.pre, %dec_label_pc_16338.dec_label_pc_16340_crit_edge ], [ %v1_16328, %dec_label_pc_16328 ]
  %v3_16348 = call i32 @function_162ac(i32* %v2_16348.pre-phi, i32 1)
  br label %dec_label_pc_1637c

dec_label_pc_16350:                               ; preds = %dec_label_pc_16380
  %v0_16350 = load i32, i32* %r7.global-to-local, align 4
  %v5_16354 = call i32 @function_16288(i32 240, i32 %v0_16380, i32 %v0_1638c, i32 %v2_16380, i32 %v0_16350)
  %v4_1635c = icmp eq i32 %v5_16354, -38
  br i1 %v4_1635c, label %dec_label_pc_16360, label %dec_label_pc_16380

dec_label_pc_16360:                               ; preds = %dec_label_pc_16350
  %v0_16360 = load i32, i32* %r4.global-to-local, align 4
  %v0_16364 = load i32, i32* @r6, align 4
  %v0_16368 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16368, i32* %r2.global-to-local, align 4
  %v5_16374 = call i32 @function_16288(i32 240, i32 %v0_16364, i32 %v0_16368, i32 %v0_16360, i32 %v0_16368)
  br label %dec_label_pc_16380

dec_label_pc_1637c:                               ; preds = %dec_label_pc_16338, %dec_label_pc_16340
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16380

dec_label_pc_16380:                               ; preds = %dec_label_pc_16350, %dec_label_pc_16360, %dec_label_pc_1637c
  %v0_16380 = load i32, i32* @r6, align 4
  %v1_16380 = inttoptr i32 %v0_16380 to i32*
  %v2_16380 = load i32, i32* %v1_16380, align 4
  store i32 %v2_16380, i32* %r4.global-to-local, align 4
  %v1_16384 = load i32, i32* @r8, align 4
  %v9_16384 = icmp eq i32 %v2_16380, %v1_16384
  %v0_1638c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1638c, i32* %r2.global-to-local, align 4
  br i1 %v9_16384, label %dec_label_pc_16350, label %dec_label_pc_1639c

dec_label_pc_1639c:                               ; preds = %dec_label_pc_16380
  %v0_1639c = load i32, i32* @r5, align 4
  %v2_1639c = icmp eq i32 %v0_1639c, 0
  store i1 %v2_1639c, i1* @cpsr_z, align 1
  br i1 %v2_1639c, label %dec_label_pc_163b8, label %dec_label_pc_163a4

dec_label_pc_163a4:                               ; preds = %dec_label_pc_1639c
  store i32 %v3_162e0, i32* @r4, align 4
  store i32 %v12_162e0, i32* %r7.global-to-local, align 4
  store i32 %v15_162e0, i32* @r8, align 4
  store i32 %v18_162e0, i32* %sl.global-to-local, align 4
  store i32 %v21_162e0, i32* @lr, align 4
  %v2_163b4 = inttoptr i32 %v0_1639c to i32*
  %v3_163b4 = call i32 @function_162ac(i32* %v2_163b4, i32 -1)
  br label %dec_label_pc_163b8

dec_label_pc_163b8:                               ; preds = %dec_label_pc_16308, %dec_label_pc_1639c, %dec_label_pc_163a4
  %v1_163c0 = phi i32 [ 240, %dec_label_pc_1639c ], [ %v3_163b4, %dec_label_pc_163a4 ], [ %v1_163c0828, %dec_label_pc_16308 ]
  store i32 %v3_162e0, i32* @r4, align 4
  store i32 %v6_162e0, i32* @r5, align 4
  store i32 %v9_162e0, i32* @r6, align 4
  store i32 %v12_162e0, i32* @r7, align 4
  store i32 %v15_162e0, i32* @r8, align 4
  store i32 %v18_162e0, i32* @sl, align 4
  store i32 %v21_162e0, i32* @lr, align 4
  ret i32 %v1_163c0

; uselistorder directives
  uselistorder i32 %v0_1638c, { 1, 0 }
  uselistorder i32 %v2_16380, { 1, 2, 0 }
  uselistorder i32 %v0_16380, { 1, 0 }
  uselistorder i32 %v0_16320.pre, { 0, 2, 1 }
  uselistorder i32 %v21_162e0, { 1, 0 }
  uselistorder i32 %v18_162e0, { 1, 0 }
  uselistorder i32 %v15_162e0, { 1, 0 }
  uselistorder i32 %v12_162e0, { 1, 0 }
  uselistorder i32 %v3_162e0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 4, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_16288, { 1, 0 }
  uselistorder label %dec_label_pc_163b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16380, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1637c, { 1, 0 }
  uselistorder label %dec_label_pc_16340, { 1, 0 }
  uselistorder label %dec_label_pc_16320, { 1, 0 }
}

define i32 @function_163c4() local_unnamed_addr {
dec_label_pc_163c4:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_163c4 = load i32, i32* @r0, align 4
  %v0_163c8 = load i32, i32* @r7, align 4
  store i32 %v0_163c8, i32* %stack_var_-4, align 4
  %v0_163cc = load i32, i32* @r2, align 4
  store i32 %v0_163cc, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_163c4, 2
  br i1 %tmp, label %.thread7, label %dec_label_pc_163d8

.thread7:                                         ; preds = %dec_label_pc_163c4
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16414

dec_label_pc_163d8:                               ; preds = %dec_label_pc_163c4
  %v1_163e4 = sub i32 0, %v0_163c4
  store i32 %v1_163e4, i32* %r0.global-to-local, align 4
  %v1_163e8 = add i32 %v0_163c4, 1
  %v2_163e8 = icmp ult i32 %v1_163e4, 2
  br i1 %v2_163e8, label %bb11, label %bb

bb:                                               ; preds = %dec_label_pc_163d8
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_163d8, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_163e8, %dec_label_pc_163d8 ]
  %v0_163f8.pr = phi i32 [ 0, %bb ], [ %v1_163e8, %dec_label_pc_163d8 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_163f0 = icmp eq i32 %v0_163cc, 0
  br i1 %v2_163f0, label %.thread, label %bb12

.thread:                                          ; preds = %bb11
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16414

bb12:                                             ; preds = %bb11
  %v2_163f8 = icmp eq i32 %v0_163f8.pr, 0
  br i1 %v2_163f8, label %dec_label_pc_16414, label %dec_label_pc_16400

dec_label_pc_16400:                               ; preds = %bb12
  %v1_16400 = inttoptr i32 %v0_163cc to i32*
  %v2_16400 = load i32, i32* %v1_16400, align 4
  %v1_16404 = add i32 %v0_163cc, 4
  %v2_16404 = inttoptr i32 %v1_16404 to i32*
  %v3_16404 = load i32, i32* %v2_16404, align 4
  %tmp13 = bitcast i32 %v2_16400 to float
  %tmp14 = call float @fabsf(float %tmp13)
  %v1_16408 = bitcast float %tmp14 to i32
  %v1_1640c = and i32 %v3_16404, -4
  store i32 %v1_1640c, i32* %r3.global-to-local, align 4
  store i32 %v1_16408, i32* %v1_16400, align 4
  %v5_16410 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_16410, i32* %v2_16404, align 4
  %v2_16414.pre = load i32, i32* %stack_var_-4, align 4
  %v1_16418.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16414

dec_label_pc_16414:                               ; preds = %.thread7, %.thread, %bb12, %dec_label_pc_16400
  %v1_16418 = phi i32 [ %v1_163e4, %.thread ], [ %v1_163e4, %bb12 ], [ %v1_16418.pre, %dec_label_pc_16400 ], [ 22, %.thread7 ]
  %v2_16414 = phi i32 [ %v0_163c8, %.thread ], [ %v0_163c8, %bb12 ], [ %v2_16414.pre, %dec_label_pc_16400 ], [ %v0_163c8, %.thread7 ]
  store i32 %v2_16414, i32* @r7, align 4
  ret i32 %v1_16418

; uselistorder directives
  uselistorder i32 %v0_163c4, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16414, { 3, 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_1641c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1641c:
  %stack_var_-16 = alloca i32, align 4
  %v2_16420 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1642c = call i32 @function_1648c(i32 2, i32 %v2_16420)
  %v2_16430 = icmp eq i32 %v2_1642c, 0
  br i1 %v2_16430, label %dec_label_pc_16438, label %dec_label_pc_16478

dec_label_pc_16438:                               ; preds = %dec_label_pc_1641c
  %v2_16438 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16438, i32* @r4, align 4
  %v10_16444 = icmp sgt i32 %v2_16438, 2147
  br i1 %v10_16444, label %dec_label_pc_16478, label %dec_label_pc_16448

dec_label_pc_16448:                               ; preds = %dec_label_pc_16438
  store i32 1000, i32* @r1, align 4
  %v0_16450 = call i32 @function_134fc()
  %v0_1645c = load i32, i32* @r4, align 4
  %v2_1645c = mul i32 %v0_1645c, 1000000
  %v2_16464 = sub i32 2147483647, %v2_1645c
  %v7_1646c = icmp sgt i32 %v0_16450, %v2_16464
  %v10_1646c4 = add i32 %v2_1645c, %v0_16450
  %.v10_1646c4 = select i1 %v7_1646c, i32 -1, i32 %v10_1646c4
  br label %dec_label_pc_16478

dec_label_pc_16478:                               ; preds = %dec_label_pc_16448, %dec_label_pc_16438, %dec_label_pc_1641c
  %storemerge = phi i32 [ -1, %dec_label_pc_1641c ], [ -1, %dec_label_pc_16438 ], [ %.v10_1646c4, %dec_label_pc_16448 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 2147483647, { 4, 6, 0, 1, 2, 3, 5 }
}

define i32 @function_16484(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16484:
  %v0_16484 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16484, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16484
  %v3_16484 = udiv i32 %arg2, 65536
  %v4_16484 = mul i32 %arg2, 65536
  %v5_16484 = or i32 %v3_16484, %v4_16484
  %v8_16484 = and i32 %v5_16484, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16484, %bb
  %v6_16488 = phi i32 [ %arg1, %dec_label_pc_16484 ], [ %v8_16484, %bb ]
  ret i32 %v6_16488

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1648c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1648c:
  %r4.global-to-local = alloca i32, align 4
  %v6_1648c = load i32, i32* @r5, align 4
  %v9_1648c = load i32, i32* @r6, align 4
  %v12_1648c = load i32, i32* @r7, align 4
  %v2_16494 = load i32, i32* @global_var_23518.615, align 4
  %v2_16498 = icmp eq i32 %v2_16494, 0
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_16498, label %dec_label_pc_164ac, label %dec_label_pc_164ec

dec_label_pc_164ac:                               ; preds = %dec_label_pc_1648c
  %v4_164b4 = call i32 @function_17380(i32 ptrtoint ([10 x i8]* @global_var_1aa80.617 to i32), i32 ptrtoint ([21 x i8]* @global_var_1aa8c.619 to i32))
  %v2_164bc = icmp eq i32 %v4_164b4, 0
  store i1 %v2_164bc, i1* @cpsr_z, align 1
  %storemerge = select i1 %v2_164bc, i32 ptrtoint (i32* @global_var_16520.621 to i32), i32 %v4_164b4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v4_164d413 = call i32 @function_167b4(i32 0, i32 %storemerge, i32* nonnull @global_var_23518.615)
  %v2_164d815 = icmp eq i32 %v4_164d413, 0
  %v2_164f4.pre.pre16 = load i32, i32* @global_var_23518.615, align 4
  br i1 %v2_164d815, label %dec_label_pc_164ec.loopexit, label %dec_label_pc_164e0

dec_label_pc_164e0:                               ; preds = %dec_label_pc_164ac, %dec_label_pc_164e0._crit_edge
  %v2_164f4.pre.pre17 = phi i32 [ %v2_164f4.pre.pre, %dec_label_pc_164e0._crit_edge ], [ %v2_164f4.pre.pre16, %dec_label_pc_164ac ]
  %v2_164e4 = icmp eq i32 %v2_164f4.pre.pre17, 0
  store i1 %v2_164e4, i1* @cpsr_z, align 1
  br i1 %v2_164e4, label %dec_label_pc_164e0._crit_edge, label %dec_label_pc_164ec.loopexit

dec_label_pc_164e0._crit_edge:                    ; preds = %dec_label_pc_164e0
  %v0_164cc.pre = load i32, i32* %r4.global-to-local, align 4
  %v4_164d4 = call i32 @function_167b4(i32 0, i32 %v0_164cc.pre, i32* nonnull @global_var_23518.615)
  %v2_164d8 = icmp eq i32 %v4_164d4, 0
  %v2_164f4.pre.pre = load i32, i32* @global_var_23518.615, align 4
  br i1 %v2_164d8, label %dec_label_pc_164ec.loopexit, label %dec_label_pc_164e0

dec_label_pc_164ec.loopexit:                      ; preds = %dec_label_pc_164e0, %dec_label_pc_164e0._crit_edge, %dec_label_pc_164ac
  %v2_164f4.pre.pre.lcssa = phi i32 [ %v2_164f4.pre.pre16, %dec_label_pc_164ac ], [ %v2_164f4.pre.pre, %dec_label_pc_164e0._crit_edge ], [ %v2_164f4.pre.pre17, %dec_label_pc_164e0 ]
  %v0_164f0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_164ec

dec_label_pc_164ec:                               ; preds = %dec_label_pc_164ec.loopexit, %dec_label_pc_1648c
  %v2_164f4 = phi i32 [ %v2_164f4.pre.pre.lcssa, %dec_label_pc_164ec.loopexit ], [ %v2_16494, %dec_label_pc_1648c ]
  %v0_164f0 = phi i32 [ %v0_164f0.pre, %dec_label_pc_164ec.loopexit ], [ %arg1, %dec_label_pc_1648c ]
  call void @__pseudo_branch(i32 %v2_164f4)
  store i32 %v6_1648c, i32* @r5, align 4
  store i32 %v9_1648c, i32* @r6, align 4
  store i32 %v12_1648c, i32* @r7, align 4
  ret i32 %v0_164f0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32* @global_var_23518.615, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_164ec.loopexit, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164e0, { 1, 0 }
}

define i32 @function_16520(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16520:
  %v2_16534 = icmp eq i32 %arg1, 0
  br i1 %v2_16534, label %dec_label_pc_1658c, label %dec_label_pc_1653c

dec_label_pc_1653c:                               ; preds = %dec_label_pc_16520
  %v4_16540 = icmp eq i32 %arg1, -38
  br i1 %v4_16540, label %bb, label %dec_label_pc_1657c

bb:                                               ; preds = %dec_label_pc_1653c
  br label %dec_label_pc_1657c

dec_label_pc_1657c:                               ; preds = %dec_label_pc_1653c, %bb
  %storemerge = phi i32 [ -22, %bb ], [ %arg1, %dec_label_pc_1653c ]
  %v0_1657c = call i32 @function_13994()
  %v1_16580 = sub i32 0, %storemerge
  %v2_16584 = inttoptr i32 %v0_1657c to i32*
  store i32 %v1_16580, i32* %v2_16584, align 4
  br label %dec_label_pc_1658c

dec_label_pc_1658c:                               ; preds = %dec_label_pc_16520, %dec_label_pc_1657c
  %v1_16590 = phi i32 [ 0, %dec_label_pc_16520 ], [ -1, %dec_label_pc_1657c ]
  ret i32 %v1_16590

; uselistorder directives
  uselistorder i32 -22, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1658c, { 1, 0 }
  uselistorder label %dec_label_pc_1657c, { 1, 0 }
}

define i32 @function_16598(i32* %arg1) local_unnamed_addr {
dec_label_pc_16598:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_16598 = load i32, i32* @r4, align 4
  %v2_1659c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_165ac = call i32 @function_1648c(i32 0, i32 %v2_1659c)
  %v0_165b0 = load i32, i32* @r4, align 4
  %v2_165b0 = icmp eq i32 %v0_165b0, 0
  br i1 %v2_165b0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16598
  %v3_165b4 = load i32, i32* %stack_var_-16, align 4
  %v3_165b8 = inttoptr i32 %v0_165b0 to i32*
  store i32 %v3_165b4, i32* %v3_165b8, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16598, %bb
  %v2_165bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_16598, i32* @r4, align 4
  ret i32 %v2_165bc

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1648c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_165cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_165cc:
  %v0_165d8 = call i32 @function_13c40()
  ret i32 %v0_165d8
}

define i32 @function_165e4() local_unnamed_addr {
dec_label_pc_165e4:
  %v1_165e4 = load i32, i32* @r0, align 4
  ret i32 %v1_165e4
}

define i32 @function_165e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_165e8:
  %v0_165e8 = load i32, i32* @lr, align 4
  store i32 91644, i32* @lr, align 4
  %v1_165f8 = call i32 @function_165e4()
  store i32 0, i32* @r3, align 4
  %v3_1661c = call i32 @function_1621c(i32 6, i32 %v1_165f8, i32 0)
  %v7_16620 = icmp eq i32 %v3_1661c, -4
  br i1 %v7_16620, label %bb, label %bb5

bb:                                               ; preds = %dec_label_pc_165e8
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_165e8, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v3_1661c, %dec_label_pc_165e8 ]
  store i32 %storemerge, i32* @r0, align 4
  %v0_16628 = call i32 @function_13c40()
  store i32 %v0_165e8, i32* @lr, align 4
  ret i32 %v0_16628

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_1663c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1663c:
  %v1_1664c = load i32, i32* @r0, align 4
  ret i32 %v1_1664c
}

define i32 @function_16650() local_unnamed_addr {
dec_label_pc_16650:
  %v1_16660 = load i32, i32* @r0, align 4
  ret i32 %v1_16660
}

define i32 @function_16664(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16664:
  store i32 %arg3, i32* @r3, align 4
  %v3_16690 = call i32 @function_1621c(i32 3, i32 %arg1, i32 %arg2)
  store i32 %v3_16690, i32* @r0, align 4
  %v0_16694 = call i32 @function_13c40()
  ret i32 %v0_16694
}

define i32 @function_166a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_166a4:
  %v0_166b0 = call i32 @function_13c40()
  ret i32 %v0_166b0
}

define i32 @function_166bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_166bc:
  %v0_166c8 = call i32 @function_13c40()
  ret i32 %v0_166c8
}

define i32 @function_166d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_166d4:
  %stack_var_-16 = alloca i32, align 4
  %v2_166d8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_166f0 = call i32 @function_17a28(i32 %v2_166d8, i32 %v2_166d8)
  %v2_166f4 = icmp eq i32 %v2_166f0, 0
  br i1 %v2_166f4, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_166d4
  %v3_166f8 = load i32, i32* %stack_var_-16, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_166d4, %bb
  %v1_16704 = phi i32 [ 0, %dec_label_pc_166d4 ], [ %v3_166f8, %bb ]
  ret i32 %v1_16704

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_16708(i32 %arg1) local_unnamed_addr {
dec_label_pc_16708:
  %v0_16714 = call i32 @function_13c40()
  ret i32 %v0_16714
}

define i32 @function_16720(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16720:
  store i32 %arg3, i32* @r3, align 4
  %v3_1674c = call i32 @function_1621c(i32 4, i32 %arg1, i32 %arg2)
  store i32 %v3_1674c, i32* @r0, align 4
  %v0_16750 = call i32 @function_13c40()
  ret i32 %v0_16750
}

define i32 @function_16760() local_unnamed_addr {
dec_label_pc_16760:
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_16770.626 to i32))
  %v0_1676c = load i1, i1* @cpsr_z, align 1
  %v1_1676c = load i32, i32* @r0, align 4
  br i1 %v0_1676c, label %bb, label %dec_label_pc_16760._crit_edge

bb:                                               ; preds = %dec_label_pc_16760
  br label %dec_label_pc_16760._crit_edge

dec_label_pc_16760._crit_edge:                    ; preds = %dec_label_pc_16760, %bb
  %v0_16770 = load i32, i32* @lr, align 4
  %v1_16770 = urem i32 %v0_16770, 2
  %v2_16770 = icmp eq i32 %v1_16770, 0
  store i1 %v2_16770, i1* @cpsr_z, align 1
  ret i32 %v1_1676c

; uselistorder directives
  uselistorder label %dec_label_pc_16760._crit_edge, { 1, 0 }
}

define i32 @function_1677c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1677c:
  %v1_16790 = call i32 @unknown_ffff0fc0()
  ret i32 %arg1
}

define i32 @function_167b4(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_167b4:
  %v3_167b8 = load i32, i32* @global_var_23050.629, align 4
  store i32 %v3_167b8, i32* @ip, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_167c4.630 to i32))
  %v0_167c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_167c0, label %bb, label %dec_label_pc_167b4._crit_edge

bb:                                               ; preds = %dec_label_pc_167b4
  %v2_167c0 = load i32, i32* @r8, align 4
  %v3_167c0 = mul i32 %v2_167c0, %arg1
  br label %dec_label_pc_167b4._crit_edge

dec_label_pc_167b4._crit_edge:                    ; preds = %dec_label_pc_167b4, %bb
  %v0_167c4 = phi i32 [ %v3_167c0, %bb ], [ %arg1, %dec_label_pc_167b4 ]
  %v2_167c8 = load i32, i32* %arg3, align 4
  %v2_167cc = sub i32 %v0_167c4, %v2_167c8
  %v9_167cc = icmp eq i32 %v0_167c4, %v2_167c8
  br i1 %v9_167cc, label %bb2, label %bb3

bb2:                                              ; preds = %dec_label_pc_167b4._crit_edge
  store i32 %arg2, i32* %arg3, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_167b4._crit_edge, %bb2
  ret i32 %v2_167cc

; uselistorder directives
  uselistorder i32 %v2_167c8, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %dec_label_pc_167b4._crit_edge, { 1, 0 }
}

define i32 @function_167e0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_167e0:
  br label %dec_label_pc_167e8

dec_label_pc_167e8:                               ; preds = %bb, %dec_label_pc_167e0
  %v2_167e8 = load i32, i32* %arg2, align 4
  %v2_167ec = sub i32 %arg1, %v2_167e8
  %v9_167ec = icmp eq i32 %v2_167e8, %arg1
  br i1 %v9_167ec, label %bb, label %dec_label_pc_167fc

bb:                                               ; preds = %dec_label_pc_167e8
  %v4_167f4 = icmp eq i32 %v2_167ec, 1
  br i1 %v4_167f4, label %dec_label_pc_167e8, label %dec_label_pc_167fc

dec_label_pc_167fc:                               ; preds = %dec_label_pc_167e8, %bb
  ret i32 %v2_167ec

; uselistorder directives
  uselistorder i32 %v2_167ec, { 1, 0 }
  uselistorder label %dec_label_pc_167fc, { 1, 0 }
}

define i32 @function_16804(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_16804:
  br label %dec_label_pc_1680c

dec_label_pc_1680c:                               ; preds = %bb, %dec_label_pc_16804
  %v2_1680c = load i32, i32* %arg2, align 4
  %v2_16810 = sub i32 %arg1, %v2_1680c
  %v9_16810 = icmp eq i32 %v2_1680c, %arg1
  br i1 %v9_16810, label %bb, label %dec_label_pc_16820

bb:                                               ; preds = %dec_label_pc_1680c
  %v4_16818 = icmp eq i32 %v2_16810, 1
  br i1 %v4_16818, label %dec_label_pc_1680c, label %dec_label_pc_16820

dec_label_pc_16820:                               ; preds = %dec_label_pc_1680c, %bb
  ret i32 %v2_16810

; uselistorder directives
  uselistorder i32 %v2_16810, { 1, 0 }
  uselistorder label %dec_label_pc_16820, { 1, 0 }
}

define i32 @function_16828() local_unnamed_addr {
dec_label_pc_16828:
  %v3_1682c = load i32, i32* @global_var_23054.632, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_16838.633 to i32))
  ret i32 %v3_1682c
}

define i32 @function_16844() local_unnamed_addr {
dec_label_pc_16844:
  %v2_16848 = load i32, i32* @global_var_23864.635, align 4
  %v2_1684c = icmp eq i32 %v2_16848, 0
  %v0_16850 = load i32, i32* @r0, align 4
  store i32 %v0_16850, i32* @ip, align 4
  br i1 %v2_1684c, label %dec_label_pc_168a4, label %dec_label_pc_16860

dec_label_pc_16860:                               ; preds = %dec_label_pc_16844
  %v3_16860 = load i32, i32* @global_var_23870.636, align 4
  %v1_16864 = add i32 %v0_16850, 8
  %v2_1686c = sub i32 -220, %v0_16850
  %v1_16870 = add i32 %v3_16860, -1
  %v2_16874 = and i32 %v1_16870, %v2_1686c
  %v2_16878 = add i32 %v1_16864, %v2_16874
  store i32 %v2_16878, i32* @r4, align 4
  %v1_1687c = add i32 %v2_16878, 212
  store i32 1, i32* @r3, align 4
  %v2_16884 = inttoptr i32 %v0_16850 to i32*
  store i32 1, i32* %v2_16884, align 4
  %v1_16888 = load i32, i32* @ip, align 4
  %v2_16888 = add i32 %v1_16888, 4
  %v3_16888 = inttoptr i32 %v2_16888 to i32*
  store i32 %v1_1687c, i32* %v3_16888, align 4
  %v3_1688c = load i32, i32* @global_var_23868.637, align 4
  %v0_16890 = load i32, i32* @ip, align 4
  %v1_16890 = load i32, i32* @r4, align 4
  %v2_16890 = add i32 %v1_16890, 208
  %v3_16890 = inttoptr i32 %v2_16890 to i32*
  store i32 %v0_16890, i32* %v3_16890, align 4
  %v0_16894 = load i32, i32* @ip, align 4
  %v1_16894 = load i32, i32* @r4, align 4
  %v2_16894 = add i32 %v1_16894, 4
  %v3_16894 = inttoptr i32 %v2_16894 to i32*
  store i32 %v0_16894, i32* %v3_16894, align 4
  %v2_16898 = load i32, i32* @global_var_23864.635, align 4
  %v3_1689c = inttoptr i32 %v1_1687c to i16*
  %v4_1689c = call i32 @function_15bb8(i16* %v3_1689c, i32 %v2_16898, i32 %v3_1688c)
  %v0_168a0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_168a4

dec_label_pc_168a4:                               ; preds = %dec_label_pc_16844, %dec_label_pc_16860
  %v1_168a8 = phi i32 [ %v0_16850, %dec_label_pc_16844 ], [ %v0_168a0, %dec_label_pc_16860 ]
  ret i32 %v1_168a8

; uselistorder directives
  uselistorder i32 %v0_16850, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_168a4, { 1, 0 }
}

define i32 @function_168b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_168b0:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v6_168b0 = load i32, i32* @r5, align 4
  %v1_168b4 = add i32 %arg1, 12
  %v2_168b4 = inttoptr i32 %v1_168b4 to i32*
  %v3_168b4 = load i32, i32* %v2_168b4, align 4
  %v1_168bc = add i32 %arg1, 20
  %v2_168bc = inttoptr i32 %v1_168bc to i32*
  %v3_168bc = load i32, i32* %v2_168bc, align 4
  store i32 %v3_168bc, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  %v2_168f45 = icmp eq i32 %v3_168bc, 0
  br i1 %v2_168f45, label %dec_label_pc_168fc.thread, label %dec_label_pc_168cc.lr.ph

dec_label_pc_168fc.thread:                        ; preds = %dec_label_pc_168b0
  br label %dec_label_pc_168fc.dec_label_pc_1692c_crit_edge

dec_label_pc_168cc.lr.ph:                         ; preds = %dec_label_pc_168b0
  %v1_168e8 = add i32 %arg1, 16
  %v2_168e8 = inttoptr i32 %v1_168e8 to i32*
  br label %dec_label_pc_168cc

dec_label_pc_168cc:                               ; preds = %dec_label_pc_168cc.lr.ph, %dec_label_pc_168f4
  %v0_1692016 = phi i32 [ 0, %dec_label_pc_168cc.lr.ph ], [ %v0_1692014, %dec_label_pc_168f4 ]
  %v0_168fc12 = phi i32 [ 0, %dec_label_pc_168cc.lr.ph ], [ %v0_168fc11, %dec_label_pc_168f4 ]
  %v0_168ec = phi i32 [ %v3_168bc, %dec_label_pc_168cc.lr.ph ], [ %v1_168ec, %dec_label_pc_168f4 ]
  %v0_168f0 = phi i32 [ %v3_168b4, %dec_label_pc_168cc.lr.ph ], [ %v2_168f0, %dec_label_pc_168f4 ]
  %v1_168cc = inttoptr i32 %v0_168f0 to i32*
  %v2_168cc = load i32, i32* %v1_168cc, align 4
  store i32 %v2_168cc, i32* %r3.global-to-local, align 4
  switch i32 %v2_168cc, label %dec_label_pc_168f4 [
    i32 6, label %.thread
    i32 7, label %bb
  ]

.thread:                                          ; preds = %dec_label_pc_168cc
  %v2_168d4 = add i32 %v0_168f0, 8
  %v3_168d4 = inttoptr i32 %v2_168d4 to i32*
  %v4_168d4 = load i32, i32* %v3_168d4, align 4
  store i32 %v4_168d4, i32* %r3.global-to-local, align 4
  %v3_168d8 = sub i32 %v3_168b4, %v4_168d4
  store i32 %v3_168d8, i32* @r4, align 4
  br label %dec_label_pc_168f4

bb:                                               ; preds = %dec_label_pc_168cc
  br label %dec_label_pc_168f4

dec_label_pc_168f4:                               ; preds = %dec_label_pc_168cc, %.thread, %bb
  %v0_1692014 = phi i32 [ %v3_168d8, %.thread ], [ %v0_1692016, %bb ], [ %v0_1692016, %dec_label_pc_168cc ]
  %v0_168fc11 = phi i32 [ %v0_168fc12, %.thread ], [ %v0_168f0, %bb ], [ %v0_168fc12, %dec_label_pc_168cc ]
  %v3_168e8 = load i32, i32* %v2_168e8, align 4
  store i32 %v3_168e8, i32* %r3.global-to-local, align 4
  %v1_168ec = add i32 %v0_168ec, -1
  store i32 %v1_168ec, i32* @lr, align 4
  %v2_168f0 = add i32 %v3_168e8, %v0_168f0
  %v2_168f4 = icmp eq i32 %v1_168ec, 0
  br i1 %v2_168f4, label %dec_label_pc_168fc, label %dec_label_pc_168cc

dec_label_pc_168fc:                               ; preds = %dec_label_pc_168f4
  %v2_168fc = icmp eq i32 %v0_168fc11, 0
  br i1 %v2_168fc, label %dec_label_pc_168fc.dec_label_pc_1692c_crit_edge, label %dec_label_pc_16904

dec_label_pc_168fc.dec_label_pc_1692c_crit_edge:  ; preds = %dec_label_pc_168fc.thread, %dec_label_pc_168fc
  %v3_16930.pre = load i32, i32* @global_var_2386c.639, align 4
  %v3_16934.pre = load i32, i32* @global_var_23870.636, align 4
  %v2_16938.pre = load i32, i32* @global_var_23864.635, align 4
  br label %dec_label_pc_1692c

dec_label_pc_16904:                               ; preds = %dec_label_pc_168fc
  %v1_16908 = add i32 %v0_168fc11, 16
  %v2_16908 = inttoptr i32 %v1_16908 to i32*
  %v3_16908 = load i32, i32* %v2_16908, align 4
  store i32 %v3_16908, i32* %r3.global-to-local, align 4
  %v1_1690c = add i32 %v0_168fc11, 8
  %v2_1690c = inttoptr i32 %v1_1690c to i32*
  %v3_1690c = load i32, i32* %v2_1690c, align 4
  store i32 %v3_16908, i32* @global_var_23868.637, align 4
  %v1_16914 = add i32 %v0_168fc11, 20
  %v2_16914 = inttoptr i32 %v1_16914 to i32*
  %v3_16914 = load i32, i32* %v2_16914, align 4
  store i32 %v3_16914, i32* %r3.global-to-local, align 4
  store i32 %v3_16914, i32* @global_var_2386c.639, align 4
  %v1_1691c = add i32 %v0_168fc11, 28
  %v2_1691c = inttoptr i32 %v1_1691c to i32*
  %v3_1691c = load i32, i32* %v2_1691c, align 4
  store i32 %v3_1691c, i32* %r3.global-to-local, align 4
  %v2_16920 = add i32 %v3_1690c, %v0_1692014
  store i32 %v3_1691c, i32* @global_var_23870.636, align 4
  store i32 %v2_16920, i32* @global_var_23864.635, align 4
  br label %dec_label_pc_1692c

dec_label_pc_1692c:                               ; preds = %dec_label_pc_168fc.dec_label_pc_1692c_crit_edge, %dec_label_pc_16904
  %v2_16938 = phi i32 [ %v2_16938.pre, %dec_label_pc_168fc.dec_label_pc_1692c_crit_edge ], [ %v2_16920, %dec_label_pc_16904 ]
  %v3_16934 = phi i32 [ %v3_16934.pre, %dec_label_pc_168fc.dec_label_pc_1692c_crit_edge ], [ %v3_1691c, %dec_label_pc_16904 ]
  %v3_16930 = phi i32 [ %v3_16930.pre, %dec_label_pc_168fc.dec_label_pc_1692c_crit_edge ], [ %v3_16914, %dec_label_pc_16904 ]
  store i32 %v3_16934, i32* %r0.global-to-local, align 4
  %sum = add i32 %v2_16938, %v3_16930
  %v2_16940 = sub i32 0, %sum
  %v1_16944 = add i32 %v3_16934, -1
  %v2_16948 = and i32 %v1_16944, %v2_16940
  store i32 %v2_16948, i32* %r3.global-to-local, align 4
  %v2_16950 = add i32 %v2_16948, %v3_16930
  %tmp = icmp ult i32 %v3_16934, 4
  br i1 %tmp, label %bb38, label %.thread30

bb38:                                             ; preds = %dec_label_pc_1692c
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 4, i32* @global_var_23870.636, align 4
  br label %.thread30

.thread30:                                        ; preds = %dec_label_pc_1692c, %bb38
  %v3_1695c = phi i32 [ 4, %bb38 ], [ %v3_16934, %dec_label_pc_1692c ]
  %v1_16960 = add i32 %v2_16950, 223
  %v2_16964 = add i32 %v1_16960, %v3_1695c
  %v1_16968 = and i32 %v2_16964, -4
  store i32 ptrtoint (i8** @global_var_2382c.531 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_16950, i32* @global_var_2386c.639, align 4
  store i32 %v1_16968, i32* @global_var_23840.641, align 4
  %tmp41 = icmp ult i32 %v1_16968, 281
  br i1 %tmp41, label %.thread31, label %dec_label_pc_16984

.thread31:                                        ; preds = %.thread30
  store i32 ptrtoint (i32* @global_var_23520.643 to i32), i32* @r0, align 4
  br label %dec_label_pc_169a0

dec_label_pc_16984:                               ; preds = %.thread30
  store i32 0, i32* @r0, align 4
  store i32 192, i32* @r7, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_169a0

dec_label_pc_169a0:                               ; preds = %.thread31, %dec_label_pc_16984
  %v0_169a0 = call i32 @function_16844()
  store i32 %v0_169a0, i32* @r4, align 4
  %v2_169a8 = inttoptr i32 %v0_169a0 to i32*
  store i32 %v0_169a0, i32* %v2_169a8, align 4
  %v1_169ac = add i32 %v0_169a0, 204
  store i32 %v1_169ac, i32* %r0.global-to-local, align 4
  %v1_169b0 = call i32 @function_17a64(i32 %v1_169ac)
  store i32 %v1_169b0, i32* %r0.global-to-local, align 4
  %v1_169b4 = icmp slt i32 %v1_169b0, 0
  br i1 %v1_169b4, label %bb39, label %dec_label_pc_169c4

bb39:                                             ; preds = %dec_label_pc_169a0
  store i32 0, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

dec_label_pc_169c4:                               ; preds = %dec_label_pc_169a0
  %v2_169b4 = icmp eq i32 %v1_169b0, 0
  br i1 %v2_169b4, label %bb40, label %.thread3

bb40:                                             ; preds = %dec_label_pc_169c4
  store i32 ptrtoint (i8** @global_var_2382c.531 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* bitcast (i8** @global_var_2382c.531 to i32*), align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_169c4, %bb40
  %v0_169d4 = load i32, i32* @r4, align 4
  %v1_169d4 = add i32 %v0_169d4, 28
  store i32 %v1_169d4, i32* %r0.global-to-local, align 4
  %v1_169dc = add i32 %v0_169d4, 136
  %v3_169e0 = inttoptr i32 %v1_169dc to i32*
  store i32 %v1_169dc, i32* %v3_169e0, align 4
  store i32 ptrtoint (i32* @global_var_23848.645 to i32), i32* %r3.global-to-local, align 4
  %v0_169e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_169e8 = load i32, i32* @r4, align 4
  %v2_169e8 = add i32 %v1_169e8, 28
  %v3_169e8 = inttoptr i32 %v2_169e8 to i32*
  store i32 %v0_169e8, i32* %v3_169e8, align 4
  %v0_169ec = load i32, i32* %r3.global-to-local, align 4
  %v1_169ec = load i32, i32* @r4, align 4
  %v2_169ec = add i32 %v1_169ec, 156
  %v3_169ec = inttoptr i32 %v2_169ec to i32*
  store i32 %v0_169ec, i32* %v3_169ec, align 4
  store i32 %v6_168b0, i32* @r5, align 4
  %v1_169f4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_169f4

; uselistorder directives
  uselistorder i32 %v1_169dc, { 1, 0 }
  uselistorder i32 %v0_169a0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_16950, { 1, 0 }
  uselistorder i32 %v3_16934, { 1, 0, 3, 2 }
  uselistorder i32 %v1_168ec, { 1, 2, 0 }
  uselistorder i32 %v0_168fc11, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 1, 5, 6, 0 }
  uselistorder i32 192, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_2382c.531 to i32), { 3, 2, 1, 0 }
  uselistorder i32 223, { 5, 4, 0, 1, 2, 3 }
  uselistorder i32* @global_var_23864.635, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_23870.636, { 1, 2, 0, 3 }
  uselistorder i32* @global_var_2386c.639, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_169a0, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_1692c, { 1, 0 }
  uselistorder label %dec_label_pc_168fc.dec_label_pc_1692c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_168f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_168cc, { 1, 0 }
}

define i32 @function_16a08(i32 %arg1) local_unnamed_addr {
dec_label_pc_16a08:
  br label %dec_label_pc_16a10

dec_label_pc_16a10:                               ; preds = %dec_label_pc_16a10, %dec_label_pc_16a08
  br label %dec_label_pc_16a10
}

define i32 @function_16a20(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_16a20:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_16a20 = load i32, i32* @r5, align 4
  %v12_16a20 = load i32, i32* @r7, align 4
  %v15_16a20 = load i32, i32* @r8, align 4
  %v18_16a20 = load i32, i32* @sb, align 4
  %v21_16a20 = load i32, i32* @sl, align 4
  %v24_16a20 = load i32, i32* @fp, align 4
  %v0_16a30 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16a30, i32* @sl, align 4
  store i32 %arg3, i32* @r6, align 4
  %tmp234 = icmp ult i32 %tmp, 37
  br i1 %tmp234, label %dec_label_pc_16a50, label %dec_label_pc_16cec

dec_label_pc_16a40:                               ; preds = %dec_label_pc_16a50
  %v2_16a5c = inttoptr i32 %v3_16a50 to i8*
  %v3_16a5c = load i8, i8* %v2_16a5c, align 1
  %v4_16a5c = zext i8 %v3_16a5c to i32
  store i32 %v4_16a5c, i32* @r5, align 4
  %v6_16a5c = add i32 %v3_16a50, 1
  store i32 %v6_16a5c, i32* %r2.global-to-local, align 4
  store i32 %v6_16a5c, i32* %v2_16a50, align 4
  %v0_16a40 = load i32, i32* @r5, align 4
  %v7_16a44 = icmp eq i32 %v0_16a40, 32
  br i1 %v7_16a44, label %dec_label_pc_16a50.backedge, label %bb

bb:                                               ; preds = %dec_label_pc_16a40
  %v1_16a40 = add i32 %v0_16a40, -9
  %tmp235 = icmp ugt i32 %v1_16a40, 4
  br i1 %tmp235, label %dec_label_pc_16a84, label %dec_label_pc_16a50.backedge

dec_label_pc_16a50.backedge:                      ; preds = %dec_label_pc_16a68, %dec_label_pc_16a40, %bb, %bb176
  %v0_16a50.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16a50

dec_label_pc_16a50:                               ; preds = %dec_label_pc_16a20, %dec_label_pc_16a50.backedge
  %v2_16a60 = phi i32 [ %v0_16a50.pre, %dec_label_pc_16a50.backedge ], [ %v0_16a30, %dec_label_pc_16a20 ]
  %v1_16a50 = add i32 %v2_16a60, 4
  %v2_16a50 = inttoptr i32 %v1_16a50 to i32*
  %v3_16a50 = load i32, i32* %v2_16a50, align 4
  store i32 %v3_16a50, i32* %r2.global-to-local, align 4
  %v1_16a54 = add i32 %v2_16a60, 104
  %v2_16a54 = inttoptr i32 %v1_16a54 to i32*
  %v3_16a54 = load i32, i32* %v2_16a54, align 4
  %v3_16a58 = icmp ult i32 %v3_16a50, %v3_16a54
  br i1 %v3_16a58, label %dec_label_pc_16a40, label %dec_label_pc_16a68

dec_label_pc_16a68:                               ; preds = %dec_label_pc_16a50
  store i32 %v2_16a60, i32* %r0.global-to-local, align 4
  %v1_16a6c = call i32 @function_17244(i32 %v2_16a60)
  store i32 %v1_16a6c, i32* %r0.global-to-local, align 4
  store i32 %v1_16a6c, i32* @r5, align 4
  %v7_16a78 = icmp eq i32 %v1_16a6c, 32
  br i1 %v7_16a78, label %dec_label_pc_16a50.backedge, label %bb176

bb176:                                            ; preds = %dec_label_pc_16a68
  %v1_16a74 = add i32 %v1_16a6c, -9
  %tmp236 = icmp ult i32 %v1_16a74, 5
  br i1 %tmp236, label %dec_label_pc_16a50.backedge, label %dec_label_pc_16a84

dec_label_pc_16a84:                               ; preds = %bb176, %bb
  %v0_16a9423 = phi i32 [ %v1_16a6c, %bb176 ], [ %v0_16a40, %bb ]
  %v7_16a84 = icmp eq i32 %v0_16a9423, 45
  br i1 %v7_16a84, label %dec_label_pc_16aa0, label %bb177

bb177:                                            ; preds = %dec_label_pc_16a84
  %v8_16a88 = icmp eq i32 %v0_16a9423, 43
  br i1 %v8_16a88, label %dec_label_pc_16aa0, label %.thread18

.thread18:                                        ; preds = %bb177
  br label %dec_label_pc_16ac8

dec_label_pc_16aa0:                               ; preds = %bb177, %dec_label_pc_16a84
  %storemerge159 = phi i32 [ 45, %dec_label_pc_16a84 ], [ 43, %bb177 ]
  store i32 %storemerge159, i32* @r4, align 4
  %v0_16aa0 = load i32, i32* @sl, align 4
  %v1_16aa0 = add i32 %v0_16aa0, 4
  %v2_16aa0 = inttoptr i32 %v1_16aa0 to i32*
  %v3_16aa0 = load i32, i32* %v2_16aa0, align 4
  store i32 %v3_16aa0, i32* %r2.global-to-local, align 4
  %v1_16aa4 = add i32 %v0_16aa0, 104
  %v2_16aa4 = inttoptr i32 %v1_16aa4 to i32*
  %v3_16aa4 = load i32, i32* %v2_16aa4, align 4
  %v3_16aa8 = icmp ult i32 %v3_16aa0, %v3_16aa4
  br i1 %v3_16aa8, label %.thread26, label %dec_label_pc_16f70

.thread26:                                        ; preds = %dec_label_pc_16aa0
  %v2_16aac = inttoptr i32 %v3_16aa0 to i8*
  %v3_16aac = load i8, i8* %v2_16aac, align 1
  %v4_16aac = zext i8 %v3_16aac to i32
  store i32 %v4_16aac, i32* @r5, align 4
  %v6_16aac = add i32 %v3_16aa0, 1
  store i32 %v6_16aac, i32* %r2.global-to-local, align 4
  store i32 %v6_16aac, i32* %v2_16aa0, align 4
  br label %dec_label_pc_16ab8

dec_label_pc_16ab8:                               ; preds = %.thread26, %dec_label_pc_16f70
  %v0_16ab8 = load i32, i32* @r4, align 4
  %v7_16ab8 = icmp eq i32 %v0_16ab8, 45
  br i1 %v7_16ab8, label %.thread28, label %bb179

bb179:                                            ; preds = %dec_label_pc_16ab8
  br label %dec_label_pc_16ac8

.thread28:                                        ; preds = %dec_label_pc_16ab8
  br label %dec_label_pc_16ac8

dec_label_pc_16ac8:                               ; preds = %bb179, %.thread28, %.thread18
  %stack_var_-44.1 = phi i32 [ 0, %.thread18 ], [ 0, %bb179 ], [ -1, %.thread28 ]
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v1_16acc = sub i32 1, %tmp
  store i32 %v1_16acc, i32* @r4, align 4
  %v2_16acc = icmp ult i32 %tmp, 2
  br i1 %v2_16acc, label %bb180, label %.thread138

.thread138:                                       ; preds = %dec_label_pc_16ac8
  store i32 0, i32* @r4, align 4
  br label %bb181

bb180:                                            ; preds = %dec_label_pc_16ac8
  %v2_16ad4 = icmp eq i32 %tmp, 0
  br i1 %v2_16ad4, label %dec_label_pc_16ba0, label %bb181

bb181:                                            ; preds = %.thread138, %bb180
  %v0_16aec142 = phi i32 [ 0, %.thread138 ], [ %v1_16acc, %bb180 ]
  %v8_16ad8 = icmp eq i32 %tmp, 16
  br i1 %v8_16ad8, label %dec_label_pc_16ba0, label %.dec_label_pc_16ae0_crit_edge

.dec_label_pc_16ae0_crit_edge:                    ; preds = %bb181
  %v0_16ae8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16ae0

dec_label_pc_16ae0:                               ; preds = %.dec_label_pc_16ae0_crit_edge, %dec_label_pc_16ba0
  %v0_16aec141 = phi i32 [ %v0_16aec142, %.dec_label_pc_16ae0_crit_edge ], [ %v0_16aec143, %dec_label_pc_16ba0 ]
  %v0_16ae8 = phi i32 [ %v0_16ae8.pre, %.dec_label_pc_16ae0_crit_edge ], [ %v0_16ba0, %dec_label_pc_16ba0 ]
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_16ae8 = add i32 %v0_16ae8, ptrtoint (i32* @global_var_1aaae.647 to i32)
  %v3_16ae8 = inttoptr i32 %v2_16ae8 to i8*
  %v4_16ae8 = load i8, i8* %v3_16ae8, align 1
  %v6_16ae8 = zext i8 %v4_16ae8 to i32
  store i32 %v6_16ae8, i32* @r2, align 4
  %v2_16aec = icmp eq i32 %v0_16aec141, 0
  br i1 %v2_16aec, label %bb183, label %bb182

bb182:                                            ; preds = %dec_label_pc_16ae0
  store i32 10, i32* %r1.global-to-local, align 4
  br label %bb183

bb183:                                            ; preds = %dec_label_pc_16ae0, %bb182
  %v0_16af8 = phi i32 [ %tmp, %dec_label_pc_16ae0 ], [ 10, %bb182 ]
  %tmp237 = icmp ugt i32 %v0_16af8, %v6_16ae8
  br i1 %tmp237, label %dec_label_pc_16b00, label %dec_label_pc_16c98

dec_label_pc_16b00:                               ; preds = %bb183, %dec_label_pc_16bcc
  %v0_16b18 = phi i32 [ %v0_16bd8, %dec_label_pc_16bcc ], [ %v0_16ae8, %bb183 ]
  %v0_16b10 = phi i32 [ %tmp, %dec_label_pc_16bcc ], [ %v0_16af8, %bb183 ]
  %v7_16b04 = icmp eq i32 %v0_16b10, 10
  br i1 %v7_16b04, label %dec_label_pc_16c68.preheader, label %dec_label_pc_16b10

dec_label_pc_16c68.preheader:                     ; preds = %dec_label_pc_16b00
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16c68

dec_label_pc_16b10:                               ; preds = %dec_label_pc_16b00
  %v1_16b1c = add i32 %v0_16b18, add (i32 ptrtoint (i32* @global_var_1aaad.649 to i32), i32 1)
  %v2_16b1c = inttoptr i32 %v1_16b1c to i8*
  %v3_16b1c = load i8, i8* %v2_16b1c, align 1
  %v4_16b1c = zext i8 %v3_16b1c to i32
  store i32 %v4_16b1c, i32* @fp, align 4
  store i32 %v0_16b10, i32* %r2.global-to-local, align 4
  %v1_16b24 = add i32 %v0_16b10, -1
  br label %dec_label_pc_16b28

dec_label_pc_16b28:                               ; preds = %.thread155, %dec_label_pc_16bd4, %dec_label_pc_16b10
  %v4_16c24106 = phi i32 [ %v4_16b1c, %dec_label_pc_16b10 ], [ %v4_16bdc, %dec_label_pc_16bd4 ], [ %v6_17114, %.thread155 ]
  %v1_16b28 = phi i32 [ %v0_16b10, %dec_label_pc_16b10 ], [ 8, %dec_label_pc_16bd4 ], [ 16, %.thread155 ]
  %v0_16b28 = phi i32 [ %v1_16b24, %dec_label_pc_16b10 ], [ 7, %dec_label_pc_16bd4 ], [ 15, %.thread155 ]
  %v2_16b28 = and i32 %v0_16b28, %v1_16b28
  store i32 %v2_16b28, i32* %r1.global-to-local, align 4
  %v4_16b28 = icmp eq i32 %v2_16b28, 0
  br i1 %v4_16b28, label %dec_label_pc_16b38, label %dec_label_pc_16c14.preheader

dec_label_pc_16c14.preheader:                     ; preds = %dec_label_pc_16b28
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16c14

dec_label_pc_16b38:                               ; preds = %dec_label_pc_16b28
  %v2_16b40 = mul i32 %v1_16b28, 23
  %v3_16b44 = udiv i32 %v2_16b40, 32
  store i32 ptrtoint (i32* @global_var_1aaa4.651 to i32), i32* %r2.global-to-local, align 4
  %v1_16b4c = urem i32 %v3_16b44, 8
  %v2_16b50 = add i32 %v1_16b4c, ptrtoint (i32* @global_var_1aaa4.651 to i32)
  %v3_16b50 = inttoptr i32 %v2_16b50 to i8*
  %v4_16b50 = load i8, i8* %v3_16b50, align 1
  %v6_16b50 = zext i8 %v4_16b50 to i32
  store i32 %v6_16b50, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16b6c

dec_label_pc_16b5c:                               ; preds = %.thread33.dec_label_pc_16b5c_crit_edge, %dec_label_pc_16b94
  %v0_16b60 = phi i32 [ %v0_16b60.pre, %.thread33.dec_label_pc_16b5c_crit_edge ], [ %v1_16b98, %dec_label_pc_16b94 ]
  %v0_16b64 = load i32, i32* @fp, align 4
  %v1_16b64 = load i32, i32* @r4, align 4
  %v2_16b64 = load i32, i32* @r5, align 4
  %v7_16b64 = shl i32 %v1_16b64, %v2_16b64
  %v8_16b64 = or i32 %v7_16b64, %v0_16b64
  store i32 %v8_16b64, i32* @r4, align 4
  %v1_16b68 = add i32 %v0_16b60, add (i32 ptrtoint (i32* @global_var_1aaad.649 to i32), i32 1)
  %v2_16b68 = inttoptr i32 %v1_16b68 to i8*
  %v3_16b68 = load i8, i8* %v2_16b68, align 1
  %v4_16b68 = zext i8 %v3_16b68 to i32
  store i32 %v4_16b68, i32* @fp, align 4
  br label %dec_label_pc_16b6c

dec_label_pc_16b6c:                               ; preds = %dec_label_pc_16b38, %dec_label_pc_16b5c
  %v0_16d74121 = phi i32 [ %v6_16b50, %dec_label_pc_16b38 ], [ %v2_16b64, %dec_label_pc_16b5c ]
  %v4_16b74 = phi i32 [ %v4_16c24106, %dec_label_pc_16b38 ], [ %v4_16b68, %dec_label_pc_16b5c ]
  %v0_16d14 = phi i32 [ 0, %dec_label_pc_16b38 ], [ %v8_16b64, %dec_label_pc_16b5c ]
  store i32 %v1_16b28, i32* %r1.global-to-local, align 4
  %v2_16b70 = icmp ugt i32 %v0_16d14, 134217726
  %v8_16b70 = icmp eq i32 %v0_16d14, 134217727
  %v2_16b74 = xor i1 %v2_16b70, true
  %v3_16b74 = or i1 %v8_16b70, %v2_16b74
  br i1 %v3_16b74, label %bb185, label %bb186

bb185:                                            ; preds = %dec_label_pc_16b6c
  %v7_16b74 = icmp ult i32 %v4_16b74, %v1_16b28
  br i1 %v7_16b74, label %dec_label_pc_16b7c, label %dec_label_pc_16d6c

bb186:                                            ; preds = %dec_label_pc_16b6c
  br i1 %v2_16b70, label %dec_label_pc_16d6c, label %dec_label_pc_16b7c

dec_label_pc_16b7c:                               ; preds = %bb185, %bb186
  %v0_16b7c = load i32, i32* @sl, align 4
  %v1_16b7c = add i32 %v0_16b7c, 4
  %v2_16b7c = inttoptr i32 %v1_16b7c to i32*
  %v3_16b7c = load i32, i32* %v2_16b7c, align 4
  store i32 %v3_16b7c, i32* %r2.global-to-local, align 4
  %v1_16b80 = add i32 %v0_16b7c, 104
  %v2_16b80 = inttoptr i32 %v1_16b80 to i32*
  %v3_16b80 = load i32, i32* %v2_16b80, align 4
  %v3_16b84 = icmp ult i32 %v3_16b7c, %v3_16b80
  br i1 %v3_16b84, label %.thread33.dec_label_pc_16b5c_crit_edge, label %dec_label_pc_16b94

.thread33.dec_label_pc_16b5c_crit_edge:           ; preds = %dec_label_pc_16b7c
  %v2_16b88 = inttoptr i32 %v3_16b7c to i8*
  %v3_16b88 = load i8, i8* %v2_16b88, align 1
  %v4_16b88 = zext i8 %v3_16b88 to i32
  store i32 %v4_16b88, i32* %r0.global-to-local, align 4
  %v6_16b88 = add i32 %v3_16b7c, 1
  store i32 %v6_16b88, i32* %r2.global-to-local, align 4
  store i32 %v6_16b88, i32* %v2_16b7c, align 4
  %v0_16b60.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b5c

dec_label_pc_16b94:                               ; preds = %dec_label_pc_16b7c
  store i32 %v0_16b7c, i32* %r0.global-to-local, align 4
  %v1_16b98 = call i32 @function_17244(i32 %v0_16b7c)
  store i32 %v1_16b98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b5c

dec_label_pc_16ba0:                               ; preds = %bb180, %bb181
  %v0_16aec143 = phi i32 [ %v1_16acc, %bb180 ], [ %v0_16aec142, %bb181 ]
  %v0_16ba0 = load i32, i32* @r5, align 4
  %v7_16ba0 = icmp eq i32 %v0_16ba0, 48
  br i1 %v7_16ba0, label %dec_label_pc_16ba8, label %dec_label_pc_16ae0

dec_label_pc_16ba8:                               ; preds = %dec_label_pc_16ba0
  %v0_16ba8 = load i32, i32* @sl, align 4
  %v1_16ba8 = add i32 %v0_16ba8, 4
  %v2_16ba8 = inttoptr i32 %v1_16ba8 to i32*
  %v3_16ba8 = load i32, i32* %v2_16ba8, align 4
  store i32 %v3_16ba8, i32* %r2.global-to-local, align 4
  %v1_16bac = add i32 %v0_16ba8, 104
  %v2_16bac = inttoptr i32 %v1_16bac to i32*
  %v3_16bac = load i32, i32* %v2_16bac, align 4
  %v3_16bb0 = icmp ult i32 %v3_16ba8, %v3_16bac
  br i1 %v3_16bb0, label %.thread35.dec_label_pc_16bc0_crit_edge, label %dec_label_pc_170e8

.thread35.dec_label_pc_16bc0_crit_edge:           ; preds = %dec_label_pc_16ba8
  %v2_16bb4 = inttoptr i32 %v3_16ba8 to i8*
  %v3_16bb4 = load i8, i8* %v2_16bb4, align 1
  %v4_16bb4 = zext i8 %v3_16bb4 to i32
  store i32 %v4_16bb4, i32* @r5, align 4
  %v6_16bb4 = add i32 %v3_16ba8, 1
  store i32 %v6_16bb4, i32* @r2, align 4
  store i32 %v6_16bb4, i32* %v2_16ba8, align 4
  %v0_16bc0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16bc0

dec_label_pc_16bc0:                               ; preds = %.thread35.dec_label_pc_16bc0_crit_edge, %dec_label_pc_170e8
  %v0_16bd8 = phi i32 [ %v0_16bc0.pre, %.thread35.dec_label_pc_16bc0_crit_edge ], [ %v1_170ec, %dec_label_pc_170e8 ]
  %v1_16bc0 = or i32 %v0_16bd8, 32
  %v7_16bc4 = icmp eq i32 %v1_16bc0, 120
  br i1 %v7_16bc4, label %dec_label_pc_170f8, label %dec_label_pc_16bcc

dec_label_pc_16bcc:                               ; preds = %dec_label_pc_16bc0
  %v0_16bcc = load i32, i32* @r4, align 4
  %v2_16bcc = icmp eq i32 %v0_16bcc, 0
  br i1 %v2_16bcc, label %dec_label_pc_16b00, label %dec_label_pc_16bd4

dec_label_pc_16bd4:                               ; preds = %dec_label_pc_16bcc
  %v1_16bdc = add i32 %v0_16bd8, add (i32 ptrtoint (i32* @global_var_1aaad.649 to i32), i32 1)
  %v2_16bdc = inttoptr i32 %v1_16bdc to i8*
  %v3_16bdc = load i8, i8* %v2_16bdc, align 1
  %v4_16bdc = zext i8 %v3_16bdc to i32
  store i32 %v4_16bdc, i32* @fp, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16b28

dec_label_pc_16bfc:                               ; preds = %.thread37.dec_label_pc_16bfc_crit_edge, %dec_label_pc_16c44
  %v0_16c04 = phi i32 [ %v0_16c04.pre, %.thread37.dec_label_pc_16bfc_crit_edge ], [ %v1_16bf8, %dec_label_pc_16c44 ]
  store i32 %v1_16b28, i32* %r1.global-to-local, align 4
  %v1_16c08 = load i32, i32* @r4, align 4
  %v2_16c08 = load i32, i32* @fp, align 4
  %v3_16c08 = mul i32 %v1_16c08, %v1_16b28
  %v4_16c08 = add i32 %v2_16c08, %v3_16c08
  store i32 %v4_16c08, i32* @r4, align 4
  %v1_16c0c = add i32 %v0_16c04, add (i32 ptrtoint (i32* @global_var_1aaad.649 to i32), i32 1)
  %v2_16c0c = inttoptr i32 %v1_16c0c to i8*
  %v3_16c0c = load i8, i8* %v2_16c0c, align 1
  %v4_16c0c = zext i8 %v3_16c0c to i32
  store i32 %v4_16c0c, i32* @fp, align 4
  br label %dec_label_pc_16c14

dec_label_pc_16c14:                               ; preds = %dec_label_pc_16c14.preheader, %dec_label_pc_16bfc
  %v0_16ee059 = phi i32 [ %v4_16c24106, %dec_label_pc_16c14.preheader ], [ %v4_16c0c, %dec_label_pc_16bfc ]
  %v0_16ebc = phi i32 [ 0, %dec_label_pc_16c14.preheader ], [ %v4_16c08, %dec_label_pc_16bfc ]
  store i32 %v1_16b28, i32* %r2.global-to-local, align 4
  %v3_16c20 = icmp ugt i32 %v0_16ebc, 119304645
  %v9_16c20 = icmp eq i32 %v0_16ebc, 119304646
  %v2_16c24 = xor i1 %v3_16c20, true
  %v3_16c24 = or i1 %v9_16c20, %v2_16c24
  br i1 %v3_16c24, label %bb188, label %bb189

bb188:                                            ; preds = %dec_label_pc_16c14
  %v7_16c24 = icmp ult i32 %v0_16ee059, %v1_16b28
  br i1 %v7_16c24, label %dec_label_pc_16c2c, label %dec_label_pc_16ebc

bb189:                                            ; preds = %dec_label_pc_16c14
  br i1 %v3_16c20, label %.dec_label_pc_16ebc_crit_edge, label %dec_label_pc_16c2c

.dec_label_pc_16ebc_crit_edge:                    ; preds = %bb189
  br label %dec_label_pc_16ebc

dec_label_pc_16c2c:                               ; preds = %bb188, %bb189
  %v0_16c2c = load i32, i32* @sl, align 4
  %v1_16c2c = add i32 %v0_16c2c, 4
  %v2_16c2c = inttoptr i32 %v1_16c2c to i32*
  %v3_16c2c = load i32, i32* %v2_16c2c, align 4
  store i32 %v3_16c2c, i32* %r2.global-to-local, align 4
  %v1_16c30 = add i32 %v0_16c2c, 104
  %v2_16c30 = inttoptr i32 %v1_16c30 to i32*
  %v3_16c30 = load i32, i32* %v2_16c30, align 4
  %v3_16c34 = icmp ult i32 %v3_16c2c, %v3_16c30
  br i1 %v3_16c34, label %.thread37.dec_label_pc_16bfc_crit_edge, label %dec_label_pc_16c44

.thread37.dec_label_pc_16bfc_crit_edge:           ; preds = %dec_label_pc_16c2c
  %v2_16c38 = inttoptr i32 %v3_16c2c to i8*
  %v3_16c38 = load i8, i8* %v2_16c38, align 1
  %v4_16c38 = zext i8 %v3_16c38 to i32
  store i32 %v4_16c38, i32* %r0.global-to-local, align 4
  %v6_16c38 = add i32 %v3_16c2c, 1
  store i32 %v6_16c38, i32* %r2.global-to-local, align 4
  store i32 %v6_16c38, i32* %v2_16c2c, align 4
  %v0_16c04.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16bfc

dec_label_pc_16c44:                               ; preds = %dec_label_pc_16c2c
  store i32 %v0_16c2c, i32* %r0.global-to-local, align 4
  %v1_16bf8 = call i32 @function_17244(i32 %v0_16c2c)
  store i32 %v1_16bf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16bfc

dec_label_pc_16c50:                               ; preds = %.thread39.dec_label_pc_16c50_crit_edge, %dec_label_pc_16c94
  %v0_16c64 = phi i32 [ %v0_16c64.pre, %.thread39.dec_label_pc_16c50_crit_edge ], [ %v1_16c4c, %dec_label_pc_16c94 ]
  %v0_16c50 = load i32, i32* @r4, align 4
  %v3_16c50 = mul i32 %v0_16c50, 8
  store i32 %v3_16c50, i32* @r2, align 4
  %v2_16c58 = mul i32 %v0_16c50, 10
  %v1_16c5c = load i32, i32* @r5, align 4
  %v2_16c5c = add i32 %v1_16c5c, %v2_16c58
  %v1_16c60 = add i32 %v2_16c5c, -48
  store i32 %v1_16c60, i32* @r4, align 4
  store i32 %v0_16c64, i32* @r5, align 4
  br label %dec_label_pc_16c68

dec_label_pc_16c68:                               ; preds = %dec_label_pc_16c68.preheader, %dec_label_pc_16c50
  %v0_16f80 = phi i32 [ 0, %dec_label_pc_16c68.preheader ], [ %v1_16c60, %dec_label_pc_16c50 ]
  %v0_16c6c = phi i32 [ %v0_16b18, %dec_label_pc_16c68.preheader ], [ %v0_16c64, %dec_label_pc_16c50 ]
  %v1_16c6c = add i32 %v0_16c6c, -48
  store i32 %v1_16c6c, i32* %r0.global-to-local, align 4
  %v2_16c70 = icmp ugt i32 %v1_16c6c, 8
  %v7_16c70 = icmp eq i32 %v1_16c6c, 9
  %v2_16c74 = xor i1 %v2_16c70, true
  %v3_16c74 = or i1 %v7_16c70, %v2_16c74
  br i1 %v3_16c74, label %bb190, label %bb192

bb190:                                            ; preds = %dec_label_pc_16c68
  %v7_16c74 = icmp ugt i32 %v0_16f80, 429496727
  %v13_16c74 = icmp eq i32 %v0_16f80, 429496728
  br label %bb192

bb192:                                            ; preds = %dec_label_pc_16c68, %bb190
  %v1_16c78 = phi i1 [ false, %dec_label_pc_16c68 ], [ %v13_16c74, %bb190 ]
  %v0_16c78 = phi i1 [ %v2_16c70, %dec_label_pc_16c68 ], [ %v7_16c74, %bb190 ]
  %v2_16c78 = xor i1 %v1_16c78, true
  %v3_16c78 = and i1 %v0_16c78, %v2_16c78
  br i1 %v3_16c78, label %dec_label_pc_16f80, label %dec_label_pc_16c7c

dec_label_pc_16c7c:                               ; preds = %bb192
  %v0_16c7c = load i32, i32* @sl, align 4
  %v1_16c7c = add i32 %v0_16c7c, 4
  %v2_16c7c = inttoptr i32 %v1_16c7c to i32*
  %v3_16c7c = load i32, i32* %v2_16c7c, align 4
  store i32 %v3_16c7c, i32* %r2.global-to-local, align 4
  %v1_16c80 = add i32 %v0_16c7c, 104
  %v2_16c80 = inttoptr i32 %v1_16c80 to i32*
  %v3_16c80 = load i32, i32* %v2_16c80, align 4
  %v3_16c84 = icmp ult i32 %v3_16c7c, %v3_16c80
  br i1 %v3_16c84, label %.thread39.dec_label_pc_16c50_crit_edge, label %dec_label_pc_16c94

.thread39.dec_label_pc_16c50_crit_edge:           ; preds = %dec_label_pc_16c7c
  %v2_16c88 = inttoptr i32 %v3_16c7c to i8*
  %v3_16c88 = load i8, i8* %v2_16c88, align 1
  %v4_16c88 = zext i8 %v3_16c88 to i32
  store i32 %v4_16c88, i32* %r0.global-to-local, align 4
  %v6_16c88 = add i32 %v3_16c7c, 1
  store i32 %v6_16c88, i32* %r2.global-to-local, align 4
  store i32 %v6_16c88, i32* %v2_16c7c, align 4
  %v0_16c64.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c50

dec_label_pc_16c94:                               ; preds = %dec_label_pc_16c7c
  store i32 %v0_16c7c, i32* %r0.global-to-local, align 4
  %v1_16c4c = call i32 @function_17244(i32 %v0_16c7c)
  store i32 %v1_16c4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c50

dec_label_pc_16c98:                               ; preds = %bb183
  %v0_16c98 = load i32, i32* @sl, align 4
  %v1_16c98 = add i32 %v0_16c98, 104
  %v2_16c98 = inttoptr i32 %v1_16c98 to i32*
  %v3_16c98 = load i32, i32* %v2_16c98, align 4
  %v2_16c9c = icmp eq i32 %v3_16c98, 0
  br i1 %v2_16c9c, label %.thread42, label %bb193

bb193:                                            ; preds = %dec_label_pc_16c98
  %v2_16ca0 = add i32 %v0_16c98, 4
  %v3_16ca0 = inttoptr i32 %v2_16ca0 to i32*
  %v4_16ca0 = load i32, i32* %v3_16ca0, align 4
  %v2_16ca4 = add i32 %v4_16ca0, -1
  store i32 %v2_16ca4, i32* %v3_16ca0, align 4
  %v0_16cb4.pre = load i32, i32* @sl, align 4
  %v1_16cb8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_16c98, %bb193
  %v1_16cb8 = phi i32 [ %v0_16af8, %dec_label_pc_16c98 ], [ %v1_16cb8.pre, %bb193 ]
  %v0_16cb4 = phi i32 [ %v0_16c98, %dec_label_pc_16c98 ], [ %v0_16cb4.pre, %bb193 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v0_16cb4, i32* %r0.global-to-local, align 4
  %v7_16cb8 = call i32 @function_171e0(i32 %v0_16cb4, i32 %v1_16cb8, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_16cb8, i32* %r0.global-to-local, align 4
  %v0_16cbc = call i32 @function_13994()
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  %v2_16cd4 = inttoptr i32 %v0_16cbc to i32*
  store i32 22, i32* %v2_16cd4, align 4
  %v2_16cdc = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16cdc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_171b0, %dec_label_pc_17184, %dec_label_pc_17150, %dec_label_pc_17090, %dec_label_pc_16e80, %dec_label_pc_16e1c, %dec_label_pc_16cec, %.thread42
  %v1_16ce8 = phi i32 [ 0, %dec_label_pc_171b0 ], [ 0, %dec_label_pc_17184 ], [ %v1_16ce8.pre, %dec_label_pc_17150 ], [ %v2_170c0, %dec_label_pc_17090 ], [ %v2_16e94, %dec_label_pc_16e80 ], [ %v2_16e2c, %dec_label_pc_16e1c ], [ %v0_16d08, %dec_label_pc_16cec ], [ %v2_16cdc, %.thread42 ]
  store i32 %v6_16a20, i32* @r5, align 4
  store i32 %v12_16a20, i32* @r7, align 4
  store i32 %v15_16a20, i32* @r8, align 4
  store i32 %v18_16a20, i32* @sb, align 4
  store i32 %v21_16a20, i32* @sl, align 4
  store i32 %v24_16a20, i32* @fp, align 4
  ret i32 %v1_16ce8

dec_label_pc_16cec:                               ; preds = %dec_label_pc_16a20
  %v0_16cec = call i32 @function_13994()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  %v2_16d04 = inttoptr i32 %v0_16cec to i32*
  store i32 22, i32* %v2_16d04, align 4
  %v0_16d08 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16d08, i32* %r0.global-to-local, align 4
  %v0_16d0c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16d0c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16ce0

dec_label_pc_16d20:                               ; preds = %bb197
  %v9_16d98 = icmp eq i32 %v0_16d98, %v6_16d84
  br i1 %v9_16d98, label %dec_label_pc_16eb0, label %dec_label_pc_16d24

dec_label_pc_16d24:                               ; preds = %dec_label_pc_16eb0, %dec_label_pc_16d20
  %v0_16d24 = load i32, i32* @sl, align 4
  %v1_16d24 = add i32 %v0_16d24, 4
  %v2_16d24 = inttoptr i32 %v1_16d24 to i32*
  %v3_16d24 = load i32, i32* %v2_16d24, align 4
  store i32 %v3_16d24, i32* %r2.global-to-local, align 4
  %v1_16d28 = add i32 %v0_16d24, 104
  %v2_16d28 = inttoptr i32 %v1_16d28 to i32*
  %v3_16d28 = load i32, i32* %v2_16d28, align 4
  %v3_16d2c = icmp ult i32 %v3_16d24, %v3_16d28
  br i1 %v3_16d2c, label %.thread43, label %dec_label_pc_16e70

.thread43:                                        ; preds = %dec_label_pc_16d24
  %v2_16d30 = inttoptr i32 %v3_16d24 to i8*
  %v3_16d30 = load i8, i8* %v2_16d30, align 1
  %v4_16d30 = zext i8 %v3_16d30 to i32
  store i32 %v4_16d30, i32* %r0.global-to-local, align 4
  %v6_16d30 = add i32 %v3_16d24, 1
  store i32 %v6_16d30, i32* %r2.global-to-local, align 4
  store i32 %v6_16d30, i32* %v2_16d24, align 4
  br label %dec_label_pc_16d3c

dec_label_pc_16d3c:                               ; preds = %.thread43, %dec_label_pc_16e70
  %v0_16d3c = load i32, i32* @r7, align 4
  %v1_16d3c = load i32, i32* @r5, align 4
  %v6_16d3c = shl i32 %v0_16d3c, %v1_16d3c
  %v0_16d40 = load i32, i32* @r8, align 4
  %v1_16d40 = icmp slt i32 %v0_16d40, 0
  %v1_16d44 = load i32, i32* @r6, align 4
  %v2_16d44 = load i32, i32* @sb, align 4
  %v7_16d44 = lshr i32 %v1_16d44, %v2_16d44
  %v8_16d44 = or i32 %v7_16d44, %v6_16d3c
  %v6_16d48 = shl i32 %v1_16d44, %v1_16d3c
  br i1 %v1_16d40, label %bb195, label %bb194

bb194:                                            ; preds = %dec_label_pc_16d3c
  %v9_16d4c = shl i32 %v1_16d44, %v0_16d40
  br label %bb195

bb195:                                            ; preds = %dec_label_pc_16d3c, %bb194
  %storemerge233 = phi i32 [ %v9_16d4c, %bb194 ], [ %v8_16d44, %dec_label_pc_16d3c ]
  %v1_16d68 = phi i32 [ %v9_16d4c, %bb194 ], [ %v8_16d44, %dec_label_pc_16d3c ]
  store i32 %storemerge233, i32* @r4, align 4
  %v0_16d54 = load i32, i32* %r0.global-to-local, align 4
  %v2_16d54 = add i32 %v0_16d54, ptrtoint (i32* @global_var_1aaad.649 to i32)
  store i32 %v2_16d54, i32* %r2.global-to-local, align 4
  %v0_16d58 = load i32, i32* @fp, align 4
  %v1_16d58 = urem i32 %v0_16d58, 256
  store i32 %v1_16d58, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_16d60 = add i32 %v0_16d54, add (i32 ptrtoint (i32* @global_var_1aaad.649 to i32), i32 1)
  %v2_16d60 = inttoptr i32 %v1_16d60 to i8*
  %v3_16d60 = load i8, i8* %v2_16d60, align 1
  %v4_16d60 = zext i8 %v3_16d60 to i32
  store i32 %v4_16d60, i32* @fp, align 4
  %v2_16d64 = or i32 %v1_16d58, %v6_16d48
  br label %dec_label_pc_16d6c

dec_label_pc_16d6c:                               ; preds = %bb185, %bb186, %bb195
  %storemerge = phi i32 [ %v2_16d64, %bb195 ], [ %v0_16d14, %bb185 ], [ %v0_16d14, %bb186 ]
  %v0_16d90 = phi i32 [ %v1_16d3c, %bb195 ], [ %v0_16d74121, %bb185 ], [ %v0_16d74121, %bb186 ]
  %v0_16da4 = phi i32 [ %v4_16d60, %bb195 ], [ %v4_16b74, %bb185 ], [ %v4_16b74, %bb186 ]
  %v0_16d98 = phi i32 [ %v1_16d68, %bb195 ], [ 0, %bb185 ], [ 0, %bb186 ]
  store i32 %storemerge, i32* @r6, align 4
  store i32 %v0_16d98, i32* @r7, align 4
  store i32 %v1_16b28, i32* %r2.global-to-local, align 4
  %v3_16d70 = icmp ult i32 %v0_16da4, %v1_16b28
  %v1_16d74 = sub i32 32, %v0_16d90
  store i32 %v1_16d74, i32* @sb, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  br i1 %v3_16d70, label %dec_label_pc_16d84, label %dec_label_pc_16dd8

dec_label_pc_16d84:                               ; preds = %dec_label_pc_16d6c
  %v6_16d84 = lshr i32 -1, %v0_16d90
  %v7_16d8c = shl i32 -1, %v1_16d74
  %v8_16d8c = or i32 %v7_16d8c, %v6_16d84
  store i32 %v8_16d8c, i32* %r2.global-to-local, align 4
  %v1_16d90 = add i32 %v0_16d90, -32
  store i32 %v1_16d90, i32* @r8, align 4
  %v6_16d90 = icmp slt i32 %v1_16d90, 0
  br i1 %v6_16d90, label %bb197, label %bb196

bb196:                                            ; preds = %dec_label_pc_16d84
  %v7_16d94 = lshr i32 -1, %v1_16d90
  store i32 %v7_16d94, i32* %r2.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_16d84, %bb196
  %v1_16eb0 = phi i32 [ %v8_16d8c, %dec_label_pc_16d84 ], [ %v7_16d94, %bb196 ]
  %tmp238 = icmp ugt i32 %v0_16d98, %v6_16d84
  br i1 %tmp238, label %dec_label_pc_16da0, label %dec_label_pc_16d20

dec_label_pc_16da0:                               ; preds = %bb197
  store i32 %v1_16b28, i32* @r4, align 4
  br label %dec_label_pc_16e54

dec_label_pc_16dac:                               ; preds = %dec_label_pc_16e48
  %v0_16dac = call i32 @function_13994()
  store i32 %v0_16dac, i32* %r0.global-to-local, align 4
  %v3_16db0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16db0, i32* %r1.global-to-local, align 4
  %v1_16db4 = urem i32 %v3_16db0, 2
  store i32 34, i32* %r2.global-to-local, align 4
  %v2_16dbc = icmp eq i32 %v1_16db4, 0
  %v2_16dc0 = inttoptr i32 %v0_16dac to i32*
  store i32 34, i32* %v2_16dc0, align 4
  br i1 %v2_16dbc, label %dec_label_pc_17084, label %dec_label_pc_16dc8

dec_label_pc_16dc8:                               ; preds = %dec_label_pc_16dac
  %v0_16dc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16dc8 = add i32 %v0_16dc8, -34
  store i32 %v1_16dc8, i32* %r2.global-to-local, align 4
  %v2_16dd0 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16dd0, i32* @r6, align 4
  store i32 %arg5, i32* @r7, align 4
  br label %dec_label_pc_16dd8

dec_label_pc_16dd8:                               ; preds = %dec_label_pc_16d6c, %dec_label_pc_16ec8, %dec_label_pc_16ebc, %dec_label_pc_16fc0, %dec_label_pc_16fb8, %dec_label_pc_17084, %dec_label_pc_16dc8
  %v1_16df0231 = phi i32 [ %arg5, %dec_label_pc_17084 ], [ %arg5, %dec_label_pc_16dc8 ], [ %v0_16ff4, %dec_label_pc_16fb8 ], [ 0, %dec_label_pc_16ebc ], [ %v0_16ff4, %dec_label_pc_16fc0 ], [ %v0_16d98, %dec_label_pc_16d6c ], [ %v5_16ed8, %dec_label_pc_16ec8 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_17084 ], [ %v1_16dc8, %dec_label_pc_16dc8 ], [ %stack_var_-44.1, %dec_label_pc_16fb8 ], [ %stack_var_-44.1, %dec_label_pc_16ebc ], [ %stack_var_-44.1, %dec_label_pc_16fc0 ], [ %stack_var_-44.1, %dec_label_pc_16d6c ], [ %stack_var_-44.1, %dec_label_pc_16ec8 ]
  %v0_16dd8 = load i32, i32* @sl, align 4
  %v1_16dd8 = add i32 %v0_16dd8, 104
  %v2_16dd8 = inttoptr i32 %v1_16dd8 to i32*
  %v3_16dd8 = load i32, i32* %v2_16dd8, align 4
  %v2_16ddc = icmp eq i32 %v3_16dd8, 0
  br i1 %v2_16ddc, label %.thread46, label %bb198

bb198:                                            ; preds = %dec_label_pc_16dd8
  %v2_16de0 = add i32 %v0_16dd8, 4
  %v3_16de0 = inttoptr i32 %v2_16de0 to i32*
  %v4_16de0 = load i32, i32* %v3_16de0, align 4
  %v2_16de4 = add i32 %v4_16de0, -1
  store i32 %v2_16de4, i32* %v3_16de0, align 4
  %v1_16df0.pre = load i32, i32* @r7, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_16dd8, %bb198
  %v1_16df0 = phi i32 [ %v1_16df0231, %dec_label_pc_16dd8 ], [ %v1_16df0.pre, %bb198 ]
  %v3_16df0 = icmp ule i32 %v1_16df0, %arg5
  %v9_16df0 = icmp eq i32 %v1_16df0, %arg5
  %v2_16df4 = xor i1 %v9_16df0, true
  %v3_16df4 = and i1 %v3_16df0, %v2_16df4
  br i1 %v3_16df4, label %dec_label_pc_16e80, label %dec_label_pc_16df8

dec_label_pc_16df8:                               ; preds = %.thread46
  %v3_170c8 = load i32, i32* %stack_var_0, align 4
  br i1 %v9_16df0, label %dec_label_pc_170c8, label %dec_label_pc_16dfc

dec_label_pc_16dfc:                               ; preds = %dec_label_pc_16df8, %dec_label_pc_170c8
  store i32 %v3_170c8, i32* %r1.global-to-local, align 4
  %v1_16e04 = urem i32 %v3_170c8, 2
  %v2_16e08 = or i32 %v1_16e04, %stack_var_-44.2
  store i32 %v2_16e08, i32* %r2.global-to-local, align 4
  %v4_16e08 = icmp eq i32 %v2_16e08, 0
  br i1 %v4_16e08, label %dec_label_pc_17090, label %dec_label_pc_16e10

dec_label_pc_16e10:                               ; preds = %dec_label_pc_16dfc
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %tmp239 = icmp ugt i32 %v1_16df0, %arg5
  br i1 %tmp239, label %dec_label_pc_16e1c, label %dec_label_pc_16e7c

dec_label_pc_16e1c:                               ; preds = %dec_label_pc_170d8, %dec_label_pc_16e10
  %v0_16e1c = call i32 @function_13994()
  %v2_16e24 = inttoptr i32 %v0_16e1c to i32*
  store i32 34, i32* %v2_16e24, align 4
  %v2_16e2c = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16e2c, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16ce0

dec_label_pc_16e3c:                               ; preds = %.thread47.dec_label_pc_16e3c_crit_edge, %dec_label_pc_16e6c
  %v0_16e40 = phi i32 [ %v0_16e40.pre, %.thread47.dec_label_pc_16e3c_crit_edge ], [ %v1_16e38, %dec_label_pc_16e6c ]
  %v1_16e44 = add i32 %v0_16e40, add (i32 ptrtoint (i32* @global_var_1aaad.649 to i32), i32 1)
  %v2_16e44 = inttoptr i32 %v1_16e44 to i8*
  %v3_16e44 = load i8, i8* %v2_16e44, align 1
  %v4_16e44 = zext i8 %v3_16e44 to i32
  br label %dec_label_pc_16e48

dec_label_pc_16e48:                               ; preds = %dec_label_pc_16f64, %dec_label_pc_16f58.dec_label_pc_16e48.loopexit206_crit_edge, %dec_label_pc_16eb0, %.thread144, %dec_label_pc_16e3c
  %v0_16e4c = phi i32 [ %v4_16e44, %dec_label_pc_16e3c ], [ %v6_16fc4, %.thread144 ], [ %v0_16da4, %dec_label_pc_16eb0 ], [ %v0_16e4c.pre.pre, %dec_label_pc_16f58.dec_label_pc_16e48.loopexit206_crit_edge ], [ %v0_16f18, %dec_label_pc_16f64 ]
  %stack_var_-60.2.off0 = phi i32 [ %stack_var_-60.3.off0, %dec_label_pc_16e3c ], [ 10, %.thread144 ], [ %v1_16b28, %dec_label_pc_16eb0 ], [ %v1_16b28, %dec_label_pc_16f58.dec_label_pc_16e48.loopexit206_crit_edge ], [ %v1_16b28, %dec_label_pc_16f64 ]
  store i32 %stack_var_-60.2.off0, i32* @r4, align 4
  %v3_16e4c = icmp ult i32 %v0_16e4c, %stack_var_-60.2.off0
  br i1 %v3_16e4c, label %dec_label_pc_16e54, label %dec_label_pc_16dac

dec_label_pc_16e54:                               ; preds = %dec_label_pc_16e48, %dec_label_pc_16da0
  %stack_var_-60.3.off0 = phi i32 [ %stack_var_-60.2.off0, %dec_label_pc_16e48 ], [ %v1_16b28, %dec_label_pc_16da0 ]
  %v0_16e54 = load i32, i32* @sl, align 4
  %v1_16e54 = add i32 %v0_16e54, 4
  %v2_16e54 = inttoptr i32 %v1_16e54 to i32*
  %v3_16e54 = load i32, i32* %v2_16e54, align 4
  store i32 %v3_16e54, i32* %r2.global-to-local, align 4
  %v1_16e58 = add i32 %v0_16e54, 104
  %v2_16e58 = inttoptr i32 %v1_16e58 to i32*
  %v3_16e58 = load i32, i32* %v2_16e58, align 4
  %v3_16e5c = icmp ult i32 %v3_16e54, %v3_16e58
  br i1 %v3_16e5c, label %.thread47.dec_label_pc_16e3c_crit_edge, label %dec_label_pc_16e6c

.thread47.dec_label_pc_16e3c_crit_edge:           ; preds = %dec_label_pc_16e54
  %v2_16e60 = inttoptr i32 %v3_16e54 to i8*
  %v3_16e60 = load i8, i8* %v2_16e60, align 1
  %v4_16e60 = zext i8 %v3_16e60 to i32
  store i32 %v4_16e60, i32* %r0.global-to-local, align 4
  %v6_16e60 = add i32 %v3_16e54, 1
  store i32 %v6_16e60, i32* %r2.global-to-local, align 4
  store i32 %v6_16e60, i32* %v2_16e54, align 4
  %v0_16e40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16e3c

dec_label_pc_16e6c:                               ; preds = %dec_label_pc_16e54
  store i32 %v0_16e54, i32* %r0.global-to-local, align 4
  %v1_16e38 = call i32 @function_17244(i32 %v0_16e54)
  store i32 %v1_16e38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16e3c

dec_label_pc_16e70:                               ; preds = %dec_label_pc_16d24
  store i32 %v0_16d24, i32* %r0.global-to-local, align 4
  %v1_16e74 = call i32 @function_17244(i32 %v0_16d24)
  store i32 %v1_16e74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16d3c

dec_label_pc_16e7c:                               ; preds = %dec_label_pc_16e10
  br i1 %v9_16df0, label %dec_label_pc_170d8, label %dec_label_pc_16e80

dec_label_pc_16e80:                               ; preds = %dec_label_pc_170d8, %dec_label_pc_170c8, %dec_label_pc_16e7c, %.thread46
  %v3_16e88 = ashr i32 %stack_var_-44.2, 31
  %v1_16e8c = load i32, i32* @r6, align 4
  %v2_16e8c = xor i32 %v1_16e8c, %stack_var_-44.2
  %v2_16e90 = xor i32 %v1_16df0, %v3_16e88
  %v2_16e94 = sub i32 %v2_16e8c, %stack_var_-44.2
  %v3_16e94 = icmp uge i32 %v2_16e8c, %stack_var_-44.2
  %v3_16e98 = icmp eq i1 %v3_16e94, false
  %v4_16e98 = sub i32 %v2_16e90, %v3_16e88
  %v6_16e98 = sext i1 %v3_16e98 to i32
  %v7_16e98 = add i32 %v6_16e98, %v4_16e98
  store i32 %v7_16e98, i32* %r2.global-to-local, align 4
  store i32 %v2_16e94, i32* %stack_var_0, align 4
  store i32 %v2_16e94, i32* %r0.global-to-local, align 4
  store i32 %v7_16e98, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16ce0

dec_label_pc_16eb0:                               ; preds = %dec_label_pc_16d20
  %tmp240 = icmp ugt i32 %storemerge, %v1_16eb0
  br i1 %tmp240, label %dec_label_pc_16e48, label %dec_label_pc_16d24

dec_label_pc_16ebc:                               ; preds = %bb188, %.dec_label_pc_16ebc_crit_edge
  store i32 %v0_16ebc, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v3_16ee061 = icmp ult i32 %v0_16ee059, %v1_16b28
  br i1 %v3_16ee061, label %dec_label_pc_16f0c, label %dec_label_pc_16dd8

dec_label_pc_16ec8:                               ; preds = %.thread49.dec_label_pc_16ec8_crit_edge, %dec_label_pc_16f4c
  %v0_16ecc = phi i32 [ %v0_16ecc.pre, %.thread49.dec_label_pc_16ec8_crit_edge ], [ %v1_16f50, %dec_label_pc_16f4c ]
  %v0_16ed0 = load i32, i32* @r4, align 4
  %v1_16ed0 = load i32, i32* @r8, align 4
  %v2_16ed0 = add i32 %v1_16ed0, %v0_16ed0
  store i32 %v2_16ed0, i32* @r6, align 4
  %v3_16ed0 = icmp ult i32 %v2_16ed0, %v0_16ed0
  %v1_16ed4 = add i32 %v0_16ecc, add (i32 ptrtoint (i32* @global_var_1aaad.649 to i32), i32 1)
  %v2_16ed4 = inttoptr i32 %v1_16ed4 to i8*
  %v3_16ed4 = load i8, i8* %v2_16ed4, align 1
  %v4_16ed4 = zext i8 %v3_16ed4 to i32
  store i32 %v4_16ed4, i32* @fp, align 4
  %v0_16ed8 = load i32, i32* @r5, align 4
  %v1_16ed8 = load i32, i32* @sb, align 4
  %v4_16ed8 = zext i1 %v3_16ed0 to i32
  %v3_16ed8 = add i32 %v0_16ed8, %v4_16ed8
  %v5_16ed8 = add i32 %v3_16ed8, %v1_16ed8
  store i32 %v5_16ed8, i32* @r7, align 4
  %v3_16ee0 = icmp ult i32 %v4_16ed4, %v1_16b28
  br i1 %v3_16ee0, label %dec_label_pc_16f0c, label %dec_label_pc_16dd8

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_16ec8, %dec_label_pc_16ebc
  store i32 %v1_16b28, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r0, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %v1_16b28, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v5_16f00 = call i32 @function_18114(i32 -1, i32 -1, i32 %v1_16b28, i32 0)
  store i32 %v5_16f00, i32* %r0.global-to-local, align 4
  %v0_16f04 = load i32, i32* @r7, align 4
  %v3_16f04 = icmp eq i32 %v0_16f04, -1
  %v0_16f58 = load i32, i32* @r6, align 4
  br i1 %v3_16f04, label %dec_label_pc_16f58, label %dec_label_pc_16f30

dec_label_pc_16f30:                               ; preds = %dec_label_pc_16f0c, %dec_label_pc_16f58
  %v1_16f10 = zext i32 %v0_16f58 to i64
  %v2_16f10 = load i32, i32* @r4, align 4
  %v3_16f10 = zext i32 %v2_16f10 to i64
  %v4_16f10 = mul nuw i64 %v3_16f10, %v1_16f10
  %v5_16f10 = udiv i64 %v4_16f10, 4294967296
  %v6_16f10 = trunc i64 %v5_16f10 to i32
  %v7_16f10 = trunc i64 %v4_16f10 to i32
  store i32 %v7_16f10, i32* @r8, align 4
  %v3_16f14 = mul i32 %v2_16f10, %v0_16f04
  %v4_16f14 = add i32 %v6_16f10, %v3_16f14
  store i32 %v4_16f14, i32* @sb, align 4
  %v0_16f18 = load i32, i32* @fp, align 4
  %v1_16f18 = urem i32 %v0_16f18, 256
  store i32 %v1_16f18, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  %v3_16f24 = icmp eq i32 %v4_16f14, -1
  %v0_16f18.not = or i32 %v0_16f18, -256
  %v1_16f28 = xor i32 %v0_16f18.not, 255
  store i32 %v1_16f28, i32* %r2.global-to-local, align 4
  br i1 %v3_16f24, label %dec_label_pc_16f64, label %dec_label_pc_16f34

dec_label_pc_16f34:                               ; preds = %dec_label_pc_16f64, %dec_label_pc_16f30
  %v0_16f34 = load i32, i32* @sl, align 4
  %v1_16f34 = add i32 %v0_16f34, 4
  %v2_16f34 = inttoptr i32 %v1_16f34 to i32*
  %v3_16f34 = load i32, i32* %v2_16f34, align 4
  store i32 %v3_16f34, i32* %r2.global-to-local, align 4
  %v1_16f38 = add i32 %v0_16f34, 104
  %v2_16f38 = inttoptr i32 %v1_16f38 to i32*
  %v3_16f38 = load i32, i32* %v2_16f38, align 4
  %v3_16f3c = icmp ult i32 %v3_16f34, %v3_16f38
  br i1 %v3_16f3c, label %.thread49.dec_label_pc_16ec8_crit_edge, label %dec_label_pc_16f4c

.thread49.dec_label_pc_16ec8_crit_edge:           ; preds = %dec_label_pc_16f34
  %v2_16f40 = inttoptr i32 %v3_16f34 to i8*
  %v3_16f40 = load i8, i8* %v2_16f40, align 1
  %v4_16f40 = zext i8 %v3_16f40 to i32
  store i32 %v4_16f40, i32* %r0.global-to-local, align 4
  %v6_16f40 = add i32 %v3_16f34, 1
  store i32 %v6_16f40, i32* %r2.global-to-local, align 4
  store i32 %v6_16f40, i32* %v2_16f34, align 4
  %v0_16ecc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16f4c:                               ; preds = %dec_label_pc_16f34
  store i32 %v0_16f34, i32* %r0.global-to-local, align 4
  %v1_16f50 = call i32 @function_17244(i32 %v0_16f34)
  store i32 %v1_16f50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16f58:                               ; preds = %dec_label_pc_16f0c
  %tmp241 = icmp ugt i32 %v0_16f58, %v5_16f00
  br i1 %tmp241, label %dec_label_pc_16f58.dec_label_pc_16e48.loopexit206_crit_edge, label %dec_label_pc_16f30

dec_label_pc_16f58.dec_label_pc_16e48.loopexit206_crit_edge: ; preds = %dec_label_pc_16f58
  %v0_16e4c.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_16e48

dec_label_pc_16f64:                               ; preds = %dec_label_pc_16f30
  %tmp242 = icmp ugt i32 %v7_16f10, %v1_16f28
  br i1 %tmp242, label %dec_label_pc_16e48, label %dec_label_pc_16f34

dec_label_pc_16f70:                               ; preds = %dec_label_pc_16aa0
  store i32 %v0_16aa0, i32* %r0.global-to-local, align 4
  %v1_16f74 = call i32 @function_17244(i32 %v0_16aa0)
  store i32 %v1_16f74, i32* %r0.global-to-local, align 4
  store i32 %v1_16f74, i32* @r5, align 4
  br label %dec_label_pc_16ab8

dec_label_pc_16f80:                               ; preds = %bb192
  store i32 %v0_16f80, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_16f88

dec_label_pc_16f88:                               ; preds = %dec_label_pc_17050, %dec_label_pc_16f80
  %v0_16fc4 = phi i32 [ %v0_17060, %dec_label_pc_17050 ], [ %v0_16c6c, %dec_label_pc_16f80 ]
  %v0_16ff0 = phi i32 [ %v2_17058, %dec_label_pc_17050 ], [ %v0_16f80, %dec_label_pc_16f80 ]
  %v0_16ff4 = phi i32 [ %v5_1705c, %dec_label_pc_17050 ], [ 0, %dec_label_pc_16f80 ]
  %v0_16fb8 = phi i32 [ %v1_17060, %dec_label_pc_17050 ], [ %v1_16c6c, %dec_label_pc_16f80 ]
  %v2_16f8c = icmp ugt i32 %v0_16fb8, 8
  %v7_16f8c = icmp eq i32 %v0_16fb8, 9
  %v2_16f90 = xor i1 %v7_16f8c, true
  %v3_16f90 = and i1 %v2_16f8c, %v2_16f90
  br i1 %v3_16f90, label %bb199, label %bb200

bb199:                                            ; preds = %dec_label_pc_16f88
  store i32 0, i32* @r2, align 4
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_16f88, %bb199
  %v2_16f94 = xor i1 %v2_16f8c, true
  %v3_16f94 = or i1 %v7_16f8c, %v2_16f94
  br i1 %v3_16f94, label %bb201, label %bb202

bb201:                                            ; preds = %bb200
  store i32 1, i32* @r2, align 4
  br label %bb202

bb202:                                            ; preds = %bb200, %bb201
  %v3_16f98 = icmp ugt i32 %v0_16ff4, 429496728
  %v9_16f98 = icmp eq i32 %v0_16ff4, 429496729
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_16fa0 = xor i1 %v9_16f98, true
  %v3_16fa0 = and i1 %v3_16f98, %v2_16fa0
  br i1 %v3_16fa0, label %dec_label_pc_16fac, label %dec_label_pc_16fa4

dec_label_pc_16fa4:                               ; preds = %bb202
  br i1 %v9_16f98, label %dec_label_pc_16fd8, label %dec_label_pc_16fa8

dec_label_pc_16fa8:                               ; preds = %dec_label_pc_16fd8, %dec_label_pc_16fa4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16fac

dec_label_pc_16fac:                               ; preds = %dec_label_pc_16fd8, %bb202, %dec_label_pc_16fa8
  %v1_16fac = phi i32 [ 0, %dec_label_pc_16fd8 ], [ 0, %bb202 ], [ 1, %dec_label_pc_16fa8 ]
  %v0_16fac = load i32, i32* @r2, align 4
  %v2_16fac = and i32 %v0_16fac, %v1_16fac
  %v2_16fb0 = icmp eq i32 %v2_16fac, 0
  br i1 %v2_16fb0, label %dec_label_pc_16fb8, label %dec_label_pc_16ff0

dec_label_pc_16fb8:                               ; preds = %dec_label_pc_17078, %dec_label_pc_16fac, %dec_label_pc_16ff0
  br i1 %v3_16f90, label %dec_label_pc_16dd8, label %dec_label_pc_16fc0

dec_label_pc_16fc0:                               ; preds = %dec_label_pc_16fb8
  store i32 ptrtoint (i32* @global_var_1aaae.647 to i32), i32* %r0.global-to-local, align 4
  %v2_16fc4 = add i32 %v0_16fc4, ptrtoint (i32* @global_var_1aaae.647 to i32)
  %v3_16fc4 = inttoptr i32 %v2_16fc4 to i8*
  %v4_16fc4 = load i8, i8* %v3_16fc4, align 1
  %tmp243 = icmp ult i8 %v4_16fc4, 10
  br i1 %tmp243, label %.thread144, label %dec_label_pc_16dd8

.thread144:                                       ; preds = %dec_label_pc_16fc0
  %v6_16fc4 = zext i8 %v4_16fc4 to i32
  br label %dec_label_pc_16e48

dec_label_pc_16fd8:                               ; preds = %dec_label_pc_16fa4
  %tmp244 = icmp ugt i32 %v0_16ff0, -1717986919
  br i1 %tmp244, label %dec_label_pc_16fac, label %dec_label_pc_16fa8

dec_label_pc_16ff0:                               ; preds = %dec_label_pc_16fac
  %v2_16ff0 = mul i32 %v0_16ff0, 2
  store i32 %v2_16ff0, i32* %r1.global-to-local, align 4
  %v3_16ff0 = icmp ult i32 %v2_16ff0, %v0_16ff0
  %v3_16ff4 = mul i32 %v0_16ff4, 2
  %v4_16ff4 = zext i1 %v3_16ff0 to i32
  %v5_16ff4 = or i32 %v4_16ff4, %v3_16ff4
  store i32 %v5_16ff4, i32* %r2.global-to-local, align 4
  %v3_16ffc = mul i32 %v5_16ff4, 4
  %tmp204 = udiv i32 %v0_16ff0, 536870912
  %v4_17000 = urem i32 %tmp204, 4
  %v5_17000 = or i32 %v3_16ffc, %v4_17000
  %v2_1700c = mul i32 %v0_16ff0, 10
  store i32 %v2_1700c, i32* @r8, align 4
  %v1_17014 = and i32 %v0_16fb8, 1073741824
  %v2_17014 = icmp ne i32 %v1_17014, 0
  %v3_17014 = ashr i32 %v0_16fb8, 31
  %v4_17020 = zext i1 %v2_17014 to i32
  %v3_17020 = add i32 %v4_17020, %v5_16ff4
  %v5_17020 = add i32 %v3_17020, %v5_17000
  store i32 %v5_17020, i32* @sb, align 4
  %tmp245 = lshr i32 %v0_16fb8, 31
  %v1_17024 = add nsw i32 %tmp245, -1
  store i32 %v1_17024, i32* @r4, align 4
  %v3_17028 = icmp uge i32 %v5_17020, %v1_17024
  %v9_17028 = icmp eq i32 %v5_17020, %v1_17024
  %v1_1702c = sub i32 -1, %v0_16fb8
  %v2_17030 = xor i1 %v9_17028, true
  %v3_17030 = and i1 %v3_17028, %v2_17030
  br i1 %v3_17030, label %dec_label_pc_16fb8, label %dec_label_pc_17034

dec_label_pc_17034:                               ; preds = %dec_label_pc_16ff0
  br i1 %v9_17028, label %dec_label_pc_17078, label %dec_label_pc_17038

dec_label_pc_17038:                               ; preds = %dec_label_pc_17078, %dec_label_pc_17034
  %v0_17038 = load i32, i32* @sl, align 4
  %v1_17038 = add i32 %v0_17038, 4
  %v2_17038 = inttoptr i32 %v1_17038 to i32*
  %v3_17038 = load i32, i32* %v2_17038, align 4
  store i32 %v3_17038, i32* %r2.global-to-local, align 4
  %v1_1703c = add i32 %v0_17038, 104
  %v2_1703c = inttoptr i32 %v1_1703c to i32*
  %v3_1703c = load i32, i32* %v2_1703c, align 4
  %v3_17040 = icmp ult i32 %v3_17038, %v3_1703c
  br i1 %v3_17040, label %.thread51.dec_label_pc_17050_crit_edge, label %dec_label_pc_17068

.thread51.dec_label_pc_17050_crit_edge:           ; preds = %dec_label_pc_17038
  %v2_17044 = inttoptr i32 %v3_17038 to i8*
  %v3_17044 = load i8, i8* %v2_17044, align 1
  %v4_17044 = zext i8 %v3_17044 to i32
  store i32 %v4_17044, i32* @r5, align 4
  %v6_17044 = add i32 %v3_17038, 1
  store i32 %v6_17044, i32* %r2.global-to-local, align 4
  store i32 %v6_17044, i32* %v2_17038, align 4
  %v0_17060.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17050

dec_label_pc_17050:                               ; preds = %.thread51.dec_label_pc_17050_crit_edge, %dec_label_pc_17068
  %v0_17060 = phi i32 [ %v0_17060.pre, %.thread51.dec_label_pc_17050_crit_edge ], [ %v1_1706c, %dec_label_pc_17068 ]
  store i32 %v0_16fb8, i32* %r1.global-to-local, align 4
  store i32 %v3_17014, i32* @r2, align 4
  %v0_17058 = load i32, i32* @r8, align 4
  %v2_17058 = add i32 %v0_17058, %v0_16fb8
  store i32 %v2_17058, i32* @r6, align 4
  %v3_17058 = icmp ult i32 %v2_17058, %v0_17058
  %v0_1705c = load i32, i32* @sb, align 4
  %v3_1705c = add i32 %v0_1705c, %v3_17014
  %v4_1705c = zext i1 %v3_17058 to i32
  %v5_1705c = add i32 %v4_1705c, %v3_1705c
  store i32 %v5_1705c, i32* @r7, align 4
  %v1_17060 = add i32 %v0_17060, -48
  store i32 %v1_17060, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f88

dec_label_pc_17068:                               ; preds = %dec_label_pc_17038
  store i32 %v0_17038, i32* %r0.global-to-local, align 4
  %v1_1706c = call i32 @function_17244(i32 %v0_17038)
  store i32 %v1_1706c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17050

dec_label_pc_17078:                               ; preds = %dec_label_pc_17034
  %tmp246 = icmp ugt i32 %v2_1700c, %v1_1702c
  br i1 %tmp246, label %dec_label_pc_16fb8, label %dec_label_pc_17038

dec_label_pc_17084:                               ; preds = %dec_label_pc_16dac
  %v2_17088 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_17088, i32* @r6, align 4
  store i32 %arg5, i32* @r7, align 4
  br label %dec_label_pc_16dd8

dec_label_pc_17090:                               ; preds = %dec_label_pc_16dfc
  %v0_17090 = call i32 @function_13994()
  %v2_17098 = load i32, i32* %stack_var_0, align 4
  %v2_170a0 = add i32 %v2_17098, -1
  %v3_170a0 = icmp ne i32 %v2_17098, 0
  %v3_170a8 = add i32 %arg5, -1
  %v4_170a8 = zext i1 %v3_170a0 to i32
  %v5_170a8 = add i32 %v3_170a8, %v4_170a8
  store i32 %v2_170a0, i32* %stack_var_0, align 4
  store i32 34, i32* %r2.global-to-local, align 4
  %v2_170b8 = inttoptr i32 %v0_17090 to i32*
  store i32 34, i32* %v2_170b8, align 4
  %v2_170c0 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_170c0, i32* %r0.global-to-local, align 4
  store i32 %v5_170a8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16ce0

dec_label_pc_170c8:                               ; preds = %dec_label_pc_16df8
  %v1_170cc = load i32, i32* @r6, align 4
  %tmp247 = icmp ugt i32 %v3_170c8, %v1_170cc
  br i1 %tmp247, label %dec_label_pc_16e80, label %dec_label_pc_16dfc

dec_label_pc_170d8:                               ; preds = %dec_label_pc_16e7c
  %v0_170dc = load i32, i32* @r6, align 4
  %tmp248 = icmp ugt i32 %v0_170dc, %v3_170c8
  br i1 %tmp248, label %dec_label_pc_16e1c, label %dec_label_pc_16e80

dec_label_pc_170e8:                               ; preds = %dec_label_pc_16ba8
  store i32 %v0_16ba8, i32* %r0.global-to-local, align 4
  %v1_170ec = call i32 @function_17244(i32 %v0_16ba8)
  store i32 %v1_170ec, i32* %r0.global-to-local, align 4
  store i32 %v1_170ec, i32* @r5, align 4
  br label %dec_label_pc_16bc0

dec_label_pc_170f8:                               ; preds = %dec_label_pc_16bc0
  %v0_170f8 = load i32, i32* @sl, align 4
  %v1_170f8 = add i32 %v0_170f8, 4
  %v2_170f8 = inttoptr i32 %v1_170f8 to i32*
  %v3_170f8 = load i32, i32* %v2_170f8, align 4
  store i32 %v3_170f8, i32* %r2.global-to-local, align 4
  %v1_170fc = add i32 %v0_170f8, 104
  %v2_170fc = inttoptr i32 %v1_170fc to i32*
  %v3_170fc = load i32, i32* %v2_170fc, align 4
  %v3_17100 = icmp ult i32 %v3_170f8, %v3_170fc
  br i1 %v3_17100, label %.thread53.dec_label_pc_17110_crit_edge, label %dec_label_pc_17178

.thread53.dec_label_pc_17110_crit_edge:           ; preds = %dec_label_pc_170f8
  %v2_17104 = inttoptr i32 %v3_170f8 to i8*
  %v3_17104 = load i8, i8* %v2_17104, align 1
  %v4_17104 = zext i8 %v3_17104 to i32
  store i32 %v4_17104, i32* %r0.global-to-local, align 4
  %v6_17104 = add i32 %v3_170f8, 1
  store i32 %v6_17104, i32* %r2.global-to-local, align 4
  store i32 %v6_17104, i32* %v2_170f8, align 4
  %v0_17114.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17110

dec_label_pc_17110:                               ; preds = %.thread53.dec_label_pc_17110_crit_edge, %dec_label_pc_17178
  %v0_17114 = phi i32 [ %v0_17114.pre, %.thread53.dec_label_pc_17110_crit_edge ], [ %v1_1717c, %dec_label_pc_17178 ]
  %v2_17114 = add i32 %v0_17114, ptrtoint (i32* @global_var_1aaae.647 to i32)
  %v3_17114 = inttoptr i32 %v2_17114 to i8*
  %v4_17114 = load i8, i8* %v3_17114, align 1
  %v6_17114 = zext i8 %v4_17114 to i32
  store i32 %v6_17114, i32* @fp, align 4
  %tmp249 = icmp ult i8 %v4_17114, 16
  br i1 %tmp249, label %.thread155, label %dec_label_pc_1712c

.thread155:                                       ; preds = %dec_label_pc_17110
  store i32 16, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16b28

dec_label_pc_1712c:                               ; preds = %dec_label_pc_17110
  %v0_1712c = load i32, i32* @sl, align 4
  %v1_1712c = add i32 %v0_1712c, 104
  %v2_1712c = inttoptr i32 %v1_1712c to i32*
  %v3_1712c = load i32, i32* %v2_1712c, align 4
  store i32 %v3_1712c, i32* %r2.global-to-local, align 4
  %v2_17130 = icmp eq i32 %v3_1712c, 0
  br i1 %v2_17130, label %.thread56, label %bb205

bb205:                                            ; preds = %dec_label_pc_1712c
  %v2_17134 = add i32 %v0_1712c, 4
  %v3_17134 = inttoptr i32 %v2_17134 to i32*
  %v4_17134 = load i32, i32* %v3_17134, align 4
  %v2_17138 = add i32 %v4_17134, -1
  store i32 %v2_17138, i32* %v3_17134, align 4
  br label %.thread56

.thread56:                                        ; preds = %dec_label_pc_1712c, %bb205
  %v0_17140 = load i32, i32* @r6, align 4
  %v2_17140 = icmp eq i32 %v0_17140, 0
  br i1 %v2_17140, label %dec_label_pc_17184, label %dec_label_pc_17148

dec_label_pc_17148:                               ; preds = %.thread56
  %v0_17148 = load i32, i32* %r2.global-to-local, align 4
  %v2_17148 = icmp eq i32 %v0_17148, 0
  br i1 %v2_17148, label %dec_label_pc_171b0, label %dec_label_pc_17150

dec_label_pc_17150:                               ; preds = %dec_label_pc_17148
  %v0_17150 = load i32, i32* @sl, align 4
  %v1_17150 = add i32 %v0_17150, 4
  %v2_17150 = inttoptr i32 %v1_17150 to i32*
  %v3_17150 = load i32, i32* %v2_17150, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1715c = add i32 %v3_17150, -1
  store i32 0, i32* %stack_var_0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v1_1715c, i32* %v2_17150, align 4
  %v1_16ce8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ce0

dec_label_pc_17178:                               ; preds = %dec_label_pc_170f8
  store i32 %v0_170f8, i32* %r0.global-to-local, align 4
  %v1_1717c = call i32 @function_17244(i32 %v0_170f8)
  store i32 %v1_1717c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17110

dec_label_pc_17184:                               ; preds = %.thread56
  %v0_17184 = load i32, i32* @sl, align 4
  store i32 %v0_17184, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v8_17190 = call i32 @function_171e0(i32 %v0_17184, i32 %tmp, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  br label %dec_label_pc_16ce0

dec_label_pc_171b0:                               ; preds = %dec_label_pc_17148
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  br label %dec_label_pc_16ce0

; uselistorder directives
  uselistorder i32 %v1_1717c, { 1, 0 }
  uselistorder i32 %v6_17114, { 1, 0 }
  uselistorder i32 %v3_170f8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_170ec, { 1, 2, 0 }
  uselistorder i32 %v2_170c0, { 1, 0 }
  uselistorder i32 %v1_1706c, { 1, 0 }
  uselistorder i32 %v1_17060, { 1, 0 }
  uselistorder i32 %v5_1705c, { 1, 0 }
  uselistorder i32 %v2_17058, { 1, 2, 0 }
  uselistorder i32 %v0_17058, { 1, 0 }
  uselistorder i32 %v0_17060, { 1, 0 }
  uselistorder i32 %v3_17038, { 1, 0, 2, 3 }
  uselistorder i1 %v9_17028, { 1, 0 }
  uselistorder i32 %v5_16ff4, { 1, 0, 2 }
  uselistorder i8 %v4_16fc4, { 1, 0 }
  uselistorder i1 %v9_16f98, { 1, 0 }
  uselistorder i1 %v7_16f8c, { 1, 0 }
  uselistorder i32 %v0_16fb8, { 2, 3, 0, 1, 5, 4, 6, 7 }
  uselistorder i32 %v0_16ff4, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_16ff0, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v1_16f50, { 1, 0 }
  uselistorder i32 %v3_16f34, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16f18, { 2, 0, 1 }
  uselistorder i64 %v4_16f10, { 1, 0 }
  uselistorder i32 %v5_16ed8, { 1, 0 }
  uselistorder i32 %v0_16ed0, { 1, 0 }
  uselistorder i32 %v2_16e94, { 2, 1, 0 }
  uselistorder i32 %v2_16e8c, { 1, 0 }
  uselistorder i32 %v3_16e88, { 1, 0 }
  uselistorder i32 %v1_16e38, { 1, 0 }
  uselistorder i32 %v3_16e54, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-60.2.off0, { 0, 2, 1 }
  uselistorder i32 %v2_16e2c, { 1, 0 }
  uselistorder i32 %v3_170c8, { 1, 0, 2, 3 }
  uselistorder i1 %v9_16df0, { 1, 2, 0 }
  uselistorder i32 %v1_16df0, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-44.2, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v1_16d90, { 0, 2, 1 }
  uselistorder i32 %v0_16d98, { 1, 0, 3, 2 }
  uselistorder i32 %v1_16d58, { 1, 0 }
  uselistorder i32 %v3_16d24, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16d08, { 1, 0 }
  uselistorder i32 %v0_16cb4, { 1, 0 }
  uselistorder i32 %v1_16c4c, { 1, 0 }
  uselistorder i32 %v3_16c7c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_16c70, { 1, 0 }
  uselistorder i32 %v0_16f80, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16c50, { 1, 0 }
  uselistorder i32 %v0_16c64, { 1, 0 }
  uselistorder i32 %v1_16bf8, { 1, 0 }
  uselistorder i32 %v3_16c2c, { 1, 0, 2, 3 }
  uselistorder i1 %v3_16c20, { 1, 0 }
  uselistorder i32 %v4_16bdc, { 1, 0 }
  uselistorder i32 %v0_16bd8, { 1, 2, 0 }
  uselistorder i32 %v3_16ba8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16ba0, { 1, 0 }
  uselistorder i32 %v1_16b98, { 1, 0 }
  uselistorder i32 %v3_16b7c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_16b70, { 1, 0 }
  uselistorder i32 %v0_16d14, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16b28, { 18, 17, 16, 7, 13, 12, 0, 1, 2, 8, 9, 10, 15, 5, 3, 6, 14, 11, 19, 4 }
  uselistorder i32 %v4_16c24106, { 1, 0 }
  uselistorder i32 %v0_16b10, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16af8, { 1, 2, 0 }
  uselistorder i32 %v0_16aec142, { 1, 0 }
  uselistorder i32 %v3_16aa0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16a6c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_16a50, { 2, 3, 0, 1 }
  uselistorder i32* %v2_16a50, { 1, 0 }
  uselistorder i32 %v2_16a60, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16a40, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 5, 6, 7, 8, 9, 10, 4, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %tmp, { 6, 5, 1, 4, 2, 3, 8, 9, 7, 0, 10 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 23, 19, 20, 21, 22, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 11, 8, 6, 7, 9, 10, 14, 12, 13, 18, 16, 15, 17, 20, 19, 24, 21, 22, 23, 56, 25, 27, 26, 32, 28, 29, 30, 31, 39, 36, 33, 34, 35, 37, 38, 41, 40, 46, 42, 43, 44, 45, 50, 47, 48, 49, 54, 51, 52, 53, 2, 55, 0, 1 }
  uselistorder i32 536870912, { 2, 0, 1, 3 }
  uselistorder i8 10, { 0, 6, 1, 5, 7, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_171e0, { 2, 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1aaad.649 to i32), i32 1), { 1, 5, 4, 3, 2, 0, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_1aaae.647 to i32), { 0, 1, 3, 2 }
  uselistorder i32 43, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 45, { 4, 0, 5, 3, 1, 6, 2, 7 }
  uselistorder i32 (i32)* @function_17244, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 37, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* @fp, { 89, 0, 91, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 155, 156, 157, 158, 119, 120, 121, 110, 111, 112, 113, 114, 115, 116, 1, 117, 118, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 12, 13, 14, 15, 16, 19, 20, 103, 102, 104, 105, 106, 107, 23, 24, 25, 26, 27, 28, 29, 30, 31, 21, 22, 2, 32, 33, 34, 35, 36, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 52, 53, 54, 55, 57, 58, 59, 60, 65, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 108, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154 }
  uselistorder i32 %arg5, { 3, 7, 8, 0, 9, 4, 5, 1, 2, 6 }
  uselistorder label %.thread56, { 1, 0 }
  uselistorder label %dec_label_pc_17110, { 1, 0 }
  uselistorder label %dec_label_pc_17050, { 1, 0 }
  uselistorder label %dec_label_pc_16fb8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16fac, { 0, 2, 1 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb200, { 1, 0 }
  uselistorder label %dec_label_pc_16f30, { 1, 0 }
  uselistorder label %dec_label_pc_16ec8, { 1, 0 }
  uselistorder label %dec_label_pc_16ebc, { 1, 0 }
  uselistorder label %dec_label_pc_16e48, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_16e3c, { 1, 0 }
  uselistorder label %dec_label_pc_16dfc, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_16dd8, { 5, 3, 4, 1, 2, 6, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %dec_label_pc_16d6c, { 2, 1, 0 }
  uselistorder label %bb195, { 1, 0 }
  uselistorder label %dec_label_pc_16d3c, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %bb192, { 1, 0 }
  uselistorder label %dec_label_pc_16c68, { 1, 0 }
  uselistorder label %dec_label_pc_16c50, { 1, 0 }
  uselistorder label %dec_label_pc_16c2c, { 1, 0 }
  uselistorder label %dec_label_pc_16c14, { 1, 0 }
  uselistorder label %dec_label_pc_16bfc, { 1, 0 }
  uselistorder label %dec_label_pc_16bc0, { 1, 0 }
  uselistorder label %dec_label_pc_16ba0, { 1, 0 }
  uselistorder label %dec_label_pc_16b7c, { 1, 0 }
  uselistorder label %dec_label_pc_16b6c, { 1, 0 }
  uselistorder label %dec_label_pc_16b5c, { 1, 0 }
  uselistorder label %dec_label_pc_16b00, { 1, 0 }
  uselistorder label %bb183, { 1, 0 }
  uselistorder label %dec_label_pc_16ae0, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_16ac8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16ab8, { 1, 0 }
  uselistorder label %dec_label_pc_16a50, { 1, 0 }
  uselistorder label %dec_label_pc_16a50.backedge, { 3, 0, 2, 1 }
}

define i32 @function_171d8() local_unnamed_addr {
dec_label_pc_171d8:
  %v0_171d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_171d8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_171d8
  %v1_171d8 = load i32, i32* @sb, align 4
  %v20_171d8 = add i32 %v1_171d8, 28
  %v21_171d8 = inttoptr i32 %v20_171d8 to i32*
  %v22_171d8 = load i32, i32* %v21_171d8, align 4
  call void @__pseudo_branch(i32 %v22_171d8)
  %v0_171dc.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_171dc.pr, label %.thread, label %bb1

bb1:                                              ; preds = %bb
  %v1_171dc = load i32, i32* @sb, align 4
  %v2_171dc = add i32 %v1_171dc, 4
  %v3_171dc = inttoptr i32 %v2_171dc to i32*
  %v4_171dc = load i32, i32* %v3_171dc, align 4
  %v23_171dc = add i32 %v1_171dc, 32
  %v24_171dc = inttoptr i32 %v23_171dc to i32*
  %v25_171dc = load i32, i32* %v24_171dc, align 4
  call void @__pseudo_branch(i32 %v25_171dc)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_171d8, %bb, %bb1
  %.0 = phi i32 [ undef, %bb ], [ %v4_171dc, %bb1 ], [ undef, %dec_label_pc_171d8 ]
  ret i32 %.0

; uselistorder directives
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @function_171e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_171e0:
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_171e0 = load i32, i32* @r4, align 4
  store i32 %v3_171e0, i32* %stack_var_-8, align 4
  %v1_171e4 = add i32 %arg1, 8
  %v2_171e4 = inttoptr i32 %v1_171e4 to i32*
  %v3_171e4 = load i32, i32* %v2_171e4, align 4
  store i32 %v3_171e4, i32* @ip, align 4
  %v1_171e8 = add i32 %arg1, 4
  %v2_171e8 = inttoptr i32 %v1_171e8 to i32*
  %v3_171e8 = load i32, i32* %v2_171e8, align 4
  store i32 %v3_171e8, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v2_171f4 = sub i32 %v3_171e4, %v3_171e8
  store i32 %v2_171f4, i32* %r3.global-to-local, align 4
  %v2_171f8 = or i32 %arg3, %arg2
  %v4_171f8 = icmp eq i32 %v2_171f8, 0
  %v3_171fc = ashr i32 %v2_171f4, 31
  store i32 %v3_171fc, i32* %r4.global-to-local, align 4
  %v2_17200 = add i32 %arg1, 112
  %v3_17200 = inttoptr i32 %v2_17200 to i32*
  store i32 %arg2, i32* %v3_17200, align 4
  %v0_17204 = load i32, i32* %r2.global-to-local, align 4
  %v2_17204 = add i32 %arg1, 116
  %v3_17204 = inttoptr i32 %v2_17204 to i32*
  store i32 %v0_17204, i32* %v3_17204, align 4
  %v0_17208 = load i32, i32* %r3.global-to-local, align 4
  %v2_17208 = add i32 %arg1, 120
  %v3_17208 = inttoptr i32 %v2_17208 to i32*
  store i32 %v0_17208, i32* %v3_17208, align 4
  %v0_1720c = load i32, i32* %r4.global-to-local, align 4
  %v2_1720c = add i32 %arg1, 124
  %v3_1720c = inttoptr i32 %v2_1720c to i32*
  store i32 %v0_1720c, i32* %v3_1720c, align 4
  br i1 %v4_171f8, label %dec_label_pc_1722c, label %dec_label_pc_17214

dec_label_pc_17214:                               ; preds = %dec_label_pc_171e0
  %v0_17214 = load i32, i32* %r4.global-to-local, align 4
  %v1_17214 = load i32, i32* %r2.global-to-local, align 4
  %v7_17218 = icmp sgt i32 %v0_17214, %v1_17214
  br i1 %v7_17218, label %dec_label_pc_17214.dec_label_pc_1721c_crit_edge, label %dec_label_pc_17228

dec_label_pc_17214.dec_label_pc_1721c_crit_edge:  ; preds = %dec_label_pc_17214
  %v1_1721c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1721c

dec_label_pc_1721c:                               ; preds = %dec_label_pc_17238, %dec_label_pc_17214.dec_label_pc_1721c_crit_edge
  %v1_1721c = phi i32 [ %v1_1721c.pre, %dec_label_pc_17214.dec_label_pc_1721c_crit_edge ], [ %v1_17238, %dec_label_pc_17238 ]
  %v0_1721c = load i32, i32* %lr.global-to-local, align 4
  %v2_1721c = add i32 %v0_1721c, %v1_1721c
  store i32 %v2_1721c, i32* %r3.global-to-local, align 4
  %v2_17220 = add i32 %arg1, 104
  %v3_17220 = inttoptr i32 %v2_17220 to i32*
  store i32 %v2_1721c, i32* %v3_17220, align 4
  br label %dec_label_pc_17230

dec_label_pc_17228:                               ; preds = %dec_label_pc_17214
  %v9_17214 = icmp eq i32 %v0_17214, %v1_17214
  br i1 %v9_17214, label %dec_label_pc_17238, label %dec_label_pc_1722c

dec_label_pc_1722c:                               ; preds = %dec_label_pc_17238, %dec_label_pc_17228, %dec_label_pc_171e0
  %v0_1722c = load i32, i32* @ip, align 4
  %v2_1722c = add i32 %arg1, 104
  %v3_1722c = inttoptr i32 %v2_1722c to i32*
  store i32 %v0_1722c, i32* %v3_1722c, align 4
  br label %dec_label_pc_17230

dec_label_pc_17230:                               ; preds = %dec_label_pc_1721c, %dec_label_pc_1722c
  %v2_17230 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17230, i32* %r4.global-to-local, align 4
  ret i32 %arg1

dec_label_pc_17238:                               ; preds = %dec_label_pc_17228
  %v0_17238 = load i32, i32* %r3.global-to-local, align 4
  %v1_17238 = load i32, i32* %r1.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_17238, %v1_17238
  br i1 %tmp, label %dec_label_pc_1721c, label %dec_label_pc_1722c

; uselistorder directives
  uselistorder i32 %v1_17214, { 1, 0 }
  uselistorder i32 %v0_17214, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 4, 0, 8, 5, 7, 6, 3, 2 }
  uselistorder label %dec_label_pc_17230, { 1, 0 }
}

define i32 @function_17244(i32 %arg1) local_unnamed_addr {
dec_label_pc_17244:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17244 = load i32, i32* @r4, align 4
  store i32 %v3_17244, i32* %stack_var_-28, align 4
  %v1_17248 = add i32 %arg1, 112
  %v1_1724c = inttoptr i32 %v1_17248 to i32*
  %v2_1724c = load i32, i32* %v1_1724c, align 4
  %v3_1724c = add i32 %arg1, 116
  %v4_1724c = inttoptr i32 %v3_1724c to i32*
  %v5_1724c = load i32, i32* %v4_1724c, align 4
  store i32 %v5_1724c, i32* @r2, align 4
  %v2_17250 = or i32 %v5_1724c, %v2_1724c
  %v4_17250 = icmp eq i32 %v2_17250, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v4_17250, label %dec_label_pc_17294, label %dec_label_pc_17260

dec_label_pc_17260:                               ; preds = %dec_label_pc_17244
  %v1_17260 = add i32 %arg1, 124
  %v2_17260 = inttoptr i32 %v1_17260 to i32*
  %v3_17260 = load i32, i32* %v2_17260, align 4
  %v5_17268 = icmp slt i32 %v3_17260, %v5_1724c
  br i1 %v5_17268, label %dec_label_pc_17294, label %dec_label_pc_1726c

dec_label_pc_1726c:                               ; preds = %dec_label_pc_17260
  %v9_17264 = icmp eq i32 %v3_17260, %v5_1724c
  br i1 %v9_17264, label %dec_label_pc_17288, label %dec_label_pc_17270

dec_label_pc_17270:                               ; preds = %dec_label_pc_17288, %dec_label_pc_17294, %dec_label_pc_1726c
  %v1_17274 = phi i32 [ %arg1, %dec_label_pc_17288 ], [ %arg1, %dec_label_pc_1726c ], [ %v1_17274.pre, %dec_label_pc_17294 ]
  %v2_17274 = add i32 %v1_17274, 104
  %v3_17274 = inttoptr i32 %v2_17274 to i32*
  store i32 0, i32* %v3_17274, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1727c

dec_label_pc_1727c:                               ; preds = %bb, %dec_label_pc_172ec, %dec_label_pc_17270
  %v1_17284 = phi i32 [ %v1_17284.pre, %bb ], [ %v4_172ec, %dec_label_pc_172ec ], [ -1, %dec_label_pc_17270 ]
  %v2_17280 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_17280, i32* @r4, align 4
  ret i32 %v1_17284

dec_label_pc_17288:                               ; preds = %dec_label_pc_1726c
  %v1_17288 = add i32 %arg1, 120
  %v2_17288 = inttoptr i32 %v1_17288 to i32*
  %v3_17288 = load i32, i32* %v2_17288, align 4
  %v3_1728c = icmp ult i32 %v3_17288, %v2_1724c
  br i1 %v3_1728c, label %dec_label_pc_17294, label %dec_label_pc_17270

dec_label_pc_17294:                               ; preds = %dec_label_pc_17288, %dec_label_pc_17260, %dec_label_pc_17244
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_17298 = call i32 @function_179a4(i32 %arg1)
  store i32 %v1_17298, i32* %r0.global-to-local, align 4
  %v1_1729c = icmp slt i32 %v1_17298, 0
  %v1_17274.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v1_1729c, label %dec_label_pc_17270, label %dec_label_pc_172a4

dec_label_pc_172a4:                               ; preds = %dec_label_pc_17294
  %v1_172a4 = add i32 %v1_17274.pre, 112
  %v1_172a8 = inttoptr i32 %v1_172a4 to i32*
  %v2_172a8 = load i32, i32* %v1_172a8, align 4
  %v3_172a8 = add i32 %v1_17274.pre, 116
  %v4_172a8 = inttoptr i32 %v3_172a8 to i32*
  %v5_172a8 = load i32, i32* %v4_172a8, align 4
  store i32 %v5_172a8, i32* @r2, align 4
  %v2_172ac = or i32 %v5_172a8, %v2_172a8
  %v4_172ac = icmp eq i32 %v2_172ac, 0
  br i1 %v4_172ac, label %dec_label_pc_172b4, label %dec_label_pc_172fc

dec_label_pc_172b4:                               ; preds = %dec_label_pc_172a4
  %v1_172b4 = add i32 %v1_17274.pre, 4
  %v2_172b4 = inttoptr i32 %v1_172b4 to i32*
  %v3_172b4 = load i32, i32* %v2_172b4, align 4
  store i32 %v3_172b4, i32* %lr.global-to-local, align 4
  %v1_172b8 = add i32 %v1_17274.pre, 8
  %v2_172b8 = inttoptr i32 %v1_172b8 to i32*
  %v3_172b8 = load i32, i32* %v2_172b8, align 4
  store i32 %v3_172b8, i32* @ip, align 4
  br label %dec_label_pc_172bc

dec_label_pc_172bc:                               ; preds = %dec_label_pc_17344, %dec_label_pc_17340, %dec_label_pc_172b4
  %v0_172bc = phi i32 [ %v3_17308, %dec_label_pc_17340 ], [ %v3_17308, %dec_label_pc_17344 ], [ %v3_172b8, %dec_label_pc_172b4 ]
  %v2_172bc = add i32 %v1_17274.pre, 104
  %v3_172bc = inttoptr i32 %v2_172bc to i32*
  store i32 %v0_172bc, i32* %v3_172bc, align 4
  br label %dec_label_pc_172c0

dec_label_pc_172c0:                               ; preds = %dec_label_pc_1732c, %dec_label_pc_172bc
  %v0_172c0 = load i32, i32* @ip, align 4
  %v2_172c0 = icmp eq i32 %v0_172c0, 0
  br i1 %v2_172c0, label %dec_label_pc_172ec, label %dec_label_pc_172c8

dec_label_pc_172c8:                               ; preds = %dec_label_pc_172c0
  %v1_172c8 = add i32 %v0_172c0, 1
  %v0_172cc = load i32, i32* %r5.global-to-local, align 4
  %v1_172cc = add i32 %v0_172cc, 120
  %v1_172d0 = inttoptr i32 %v1_172cc to i32*
  %v2_172d0 = load i32, i32* %v1_172d0, align 4
  %v3_172d0 = add i32 %v0_172cc, 124
  %v4_172d0 = inttoptr i32 %v3_172d0 to i32*
  %v5_172d0 = load i32, i32* %v4_172d0, align 4
  %v0_172d4 = load i32, i32* %lr.global-to-local, align 4
  %v2_172d4 = sub i32 %v1_172c8, %v0_172d4
  %v3_172d8 = ashr i32 %v2_172d4, 31
  %v2_172dc = add i32 %v2_172d4, %v2_172d0
  %v3_172dc = icmp ult i32 %v2_172dc, %v2_172d0
  %v3_172e0 = add i32 %v3_172d8, %v5_172d0
  %v4_172e0 = zext i1 %v3_172dc to i32
  %v5_172e0 = add i32 %v4_172e0, %v3_172e0
  store i32 %v5_172e0, i32* @r2, align 4
  store i32 %v2_172dc, i32* %v1_172d0, align 4
  %v0_172e8 = load i32, i32* @r2, align 4
  %v1_172e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_172e8 = add i32 %v1_172e8, 124
  %v3_172e8 = inttoptr i32 %v2_172e8 to i32*
  store i32 %v0_172e8, i32* %v3_172e8, align 4
  br label %dec_label_pc_172ec

dec_label_pc_172ec:                               ; preds = %dec_label_pc_172c0, %dec_label_pc_172c8
  %v0_172ec = load i32, i32* %lr.global-to-local, align 4
  %v1_172ec = add i32 %v0_172ec, -1
  %v2_172ec = inttoptr i32 %v1_172ec to i8*
  %v3_172ec = load i8, i8* %v2_172ec, align 1
  %v4_172ec = zext i8 %v3_172ec to i32
  %v0_172f0 = load i32, i32* %r0.global-to-local, align 4
  %v9_172f0 = icmp eq i32 %v0_172f0, %v4_172ec
  br i1 %v9_172f0, label %dec_label_pc_1727c, label %bb

bb:                                               ; preds = %dec_label_pc_172ec
  %v2_172f4 = trunc i32 %v0_172f0 to i8
  store i8 %v2_172f4, i8* %v2_172ec, align 1
  %v1_17284.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1727c

dec_label_pc_172fc:                               ; preds = %dec_label_pc_172a4
  %v1_172fc = add i32 %v1_17274.pre, 120
  %v1_17300 = inttoptr i32 %v1_172fc to i32*
  %v2_17300 = load i32, i32* %v1_17300, align 4
  %v3_17300 = add i32 %v1_17274.pre, 124
  %v4_17300 = inttoptr i32 %v3_17300 to i32*
  %v5_17300 = load i32, i32* %v4_17300, align 4
  %v1_17304 = add i32 %v1_17274.pre, 4
  %v2_17304 = inttoptr i32 %v1_17304 to i32*
  %v3_17304 = load i32, i32* %v2_17304, align 4
  store i32 %v3_17304, i32* %lr.global-to-local, align 4
  %v1_17308 = add i32 %v1_17274.pre, 8
  %v2_17308 = inttoptr i32 %v1_17308 to i32*
  %v3_17308 = load i32, i32* %v2_17308, align 4
  store i32 %v3_17308, i32* @ip, align 4
  %v1_1730c = sub i32 -1, %v2_17300
  %v2_17310 = add i32 %v2_172a8, %v1_1730c
  %v3_17310 = icmp ult i32 %v2_17310, %v1_1730c
  %v1_17314 = sub i32 -1, %v5_17300
  %v2_17318 = sub i32 %v3_17308, %v3_17304
  %v3_1731c = add i32 %v5_172a8, %v1_17314
  %v4_1731c = zext i1 %v3_17310 to i32
  %v5_1731c = add i32 %v3_1731c, %v4_1731c
  %v3_17320 = ashr i32 %v2_17318, 31
  %v7_17328 = icmp sgt i32 %v3_17320, %v5_1731c
  br i1 %v7_17328, label %dec_label_pc_1732c, label %dec_label_pc_17340

dec_label_pc_1732c:                               ; preds = %dec_label_pc_17344, %dec_label_pc_172fc
  %v2_1732c = sub i32 %v2_172a8, %v2_17300
  store i32 %v2_1732c, i32* @r2, align 4
  %v1_17330 = add i32 %v2_1732c, -1
  %v2_17334 = add i32 %v1_17330, %v3_17304
  %v2_17338 = add i32 %v1_17274.pre, 104
  %v3_17338 = inttoptr i32 %v2_17338 to i32*
  store i32 %v2_17334, i32* %v3_17338, align 4
  br label %dec_label_pc_172c0

dec_label_pc_17340:                               ; preds = %dec_label_pc_172fc
  %v9_17324 = icmp eq i32 %v3_17320, %v5_1731c
  br i1 %v9_17324, label %dec_label_pc_17344, label %dec_label_pc_172bc

dec_label_pc_17344:                               ; preds = %dec_label_pc_17340
  %tmp = icmp ugt i32 %v2_17318, %v2_17310
  br i1 %tmp, label %dec_label_pc_1732c, label %dec_label_pc_172bc

; uselistorder directives
  uselistorder i32 %v3_17320, { 1, 0 }
  uselistorder i32 %v3_17308, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17300, { 1, 0 }
  uselistorder i32 %v4_172ec, { 1, 0 }
  uselistorder i32 %v2_172d0, { 1, 0 }
  uselistorder i32 %v2_172a8, { 2, 0, 1 }
  uselistorder i32 %v1_17274.pre, { 9, 7, 8, 4, 3, 10, 5, 6, 2, 1, 0 }
  uselistorder i32 %v3_17260, { 1, 0 }
  uselistorder i32 %v5_1724c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1724c, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 31, { 14, 15, 16, 0, 17, 18, 24, 25, 21, 5, 6, 7, 8, 22, 9, 10, 23, 20, 19, 1, 2, 11, 3, 12, 4, 13 }
  uselistorder i32 104, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 2, 23, 1, 24 }
  uselistorder i32 124, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1, 5, 8, 7, 6, 9 }
  uselistorder label %dec_label_pc_172ec, { 1, 0 }
  uselistorder label %dec_label_pc_17270, { 1, 0, 2 }
}

define i32 @function_17350() local_unnamed_addr {
dec_label_pc_17350:
  %stack_var_0 = alloca i32, align 4
  %v1_17350 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_17350, i32* @ip, align 4
  %v0_1735c = load i32, i32* @r1, align 4
  %v0_17364 = load i32, i32* @r3, align 4
  store i32 %v0_17364, i32* @r2, align 4
  ret i32 %v0_1735c
}

define i32 @function_17380(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17380:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17384 = load i32, i32* @r4, align 4
  store i32 %v3_17384, i32* %stack_var_-36, align 4
  %v3_17388 = load i32, i32* @global_var_2383c.532, align 4
  %v1_1738c = inttoptr i32 %v3_17388 to i32*
  %v2_1738c = load i32, i32* %v1_1738c, align 4
  %v7_17390 = icmp eq i32 %v2_1738c, 33
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v0_1739c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1739c, i32* %r8.global-to-local, align 4
  br i1 %v7_17390, label %.thread, label %dec_label_pc_173a8

.thread:                                          ; preds = %dec_label_pc_17380
  %v1_17390 = add i32 %v2_1738c, -33
  br label %dec_label_pc_173d4

dec_label_pc_173a8:                               ; preds = %dec_label_pc_17380
  %v2_173a8 = icmp eq i32 %v2_1738c, 0
  br i1 %v2_173a8, label %dec_label_pc_1744c, label %dec_label_pc_173c0.preheader

dec_label_pc_173c0.preheader:                     ; preds = %dec_label_pc_173a8
  store i32 8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_173c0

dec_label_pc_173c0:                               ; preds = %dec_label_pc_173c0, %dec_label_pc_173c0.preheader
  %v0_173cc = phi i32 [ 8, %dec_label_pc_173c0.preheader ], [ %v1_173cc, %dec_label_pc_173c0 ]
  %v2_173c4 = add i32 %v0_173cc, %v3_17388
  %v3_173c4 = inttoptr i32 %v2_173c4 to i32*
  %v4_173c4 = load i32, i32* %v3_173c4, align 4
  %v1_173cc = add i32 %v0_173cc, 8
  store i32 %v1_173cc, i32* %r1.global-to-local, align 4
  switch i32 %v4_173c4, label %dec_label_pc_173c0 [
    i32 33, label %dec_label_pc_173d4.loopexit
    i32 0, label %dec_label_pc_1744c.loopexit17
  ]

dec_label_pc_173d4.loopexit:                      ; preds = %dec_label_pc_173c0
  br label %dec_label_pc_173d4

dec_label_pc_173d4:                               ; preds = %.thread, %dec_label_pc_173d4.loopexit
  %v0_173d4 = phi i32 [ %v0_173cc, %dec_label_pc_173d4.loopexit ], [ %v1_17390, %.thread ]
  %v2_173d4 = add i32 %v0_173d4, %v3_17388
  %v1_173d8 = add i32 %v2_173d4, 4
  %v2_173d8 = inttoptr i32 %v1_173d8 to i32*
  %v3_173d8 = load i32, i32* %v2_173d8, align 4
  %v1_173dc = add i32 %v3_173d8, 44
  %v2_173dc = inttoptr i32 %v1_173dc to i16*
  %v3_173dc = load i16, i16* %v2_173dc, align 2
  %v4_173dc = zext i16 %v3_173dc to i32
  %v2_173e0 = icmp eq i16 %v3_173dc, 0
  br i1 %v2_173e0, label %dec_label_pc_1744c, label %dec_label_pc_173ec

dec_label_pc_173ec:                               ; preds = %dec_label_pc_173d4
  %v1_173e4 = add i32 %v3_173d8, 28
  %v2_173e4 = inttoptr i32 %v1_173e4 to i32*
  %v3_173e4 = load i32, i32* %v2_173e4, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_173f0 = add i32 %v3_173d8, 42
  %v2_173f0 = inttoptr i32 %v1_173f0 to i16*
  %v3_173f0 = load i16, i16* %v2_173f0, align 2
  %v4_173f0 = zext i16 %v3_173f0 to i32
  %v2_173f4 = add i32 %v3_173e4, %v3_173d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17400

dec_label_pc_17400:                               ; preds = %.thread4, %dec_label_pc_173ec
  %v1_1743838 = phi i32 [ %v0_17468, %.thread4 ], [ 0, %dec_label_pc_173ec ]
  %v0_1743436 = phi i32 [ %v0_17434, %.thread4 ], [ -1, %dec_label_pc_173ec ]
  %v0_17424 = phi i32 [ %v1_17424, %.thread4 ], [ 0, %dec_label_pc_173ec ]
  %v0_1742c = phi i32 [ %v2_1742c, %.thread4 ], [ %v2_173f4, %dec_label_pc_173ec ]
  %v1_17400 = inttoptr i32 %v0_1742c to i32*
  %v2_17400 = load i32, i32* %v1_17400, align 4
  switch i32 %v2_17400, label %.thread4 [
    i32 1, label %.thread2
    i32 2, label %bb
  ]

.thread2:                                         ; preds = %dec_label_pc_17400
  %v2_17408 = add i32 %v0_1742c, 4
  %v3_17408 = inttoptr i32 %v2_17408 to i32*
  %v4_17408 = load i32, i32* %v3_17408, align 4
  %v5_17408 = add i32 %v0_1742c, 8
  %v6_17408 = inttoptr i32 %v5_17408 to i32*
  %v7_17408 = load i32, i32* %v6_17408, align 4
  %v3_1740c = sub i32 %v4_17408, %v7_17408
  %v3_17410 = add i32 %v3_1740c, %v3_173d8
  store i32 %v3_17410, i32* %r5.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_17400
  %v2_1741c = add i32 %v0_1742c, 4
  %v3_1741c = inttoptr i32 %v2_1741c to i32*
  %v4_1741c = load i32, i32* %v3_1741c, align 4
  %v3_17420 = add i32 %v4_1741c, %v3_173d8
  store i32 %v3_17420, i32* %r4.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17400, %.thread2, %bb
  %v0_17468 = phi i32 [ %v1_1743838, %.thread2 ], [ %v3_17420, %bb ], [ %v1_1743838, %dec_label_pc_17400 ]
  %v0_17434 = phi i32 [ %v3_17410, %.thread2 ], [ %v0_1743436, %bb ], [ %v0_1743436, %dec_label_pc_17400 ]
  %v1_17424 = add i32 %v0_17424, 1
  store i32 %v1_17424, i32* %r1.global-to-local, align 4
  %v9_17428 = icmp eq i32 %v1_17424, %v4_173dc
  %v2_1742c = add i32 %v0_1742c, %v4_173f0
  br i1 %v9_17428, label %dec_label_pc_17434, label %dec_label_pc_17400

dec_label_pc_17434:                               ; preds = %.thread4
  %v7_17434 = icmp eq i32 %v0_17434, -1
  br i1 %v7_17434, label %.thread8, label %bb71

bb71:                                             ; preds = %dec_label_pc_17434
  %v3_17438 = icmp eq i32 %v0_17468, 0
  br i1 %v3_17438, label %bb72, label %dec_label_pc_17458

.thread8:                                         ; preds = %dec_label_pc_17434
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1744c

bb72:                                             ; preds = %bb71
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1744c

dec_label_pc_1744c.loopexit17:                    ; preds = %dec_label_pc_173c0
  br label %dec_label_pc_1744c

dec_label_pc_1744c:                               ; preds = %dec_label_pc_17524, %bb72, %bb80, %dec_label_pc_1744c.loopexit17, %dec_label_pc_173a8, %.thread16, %.thread8, %dec_label_pc_173d4, %dec_label_pc_17458, %dec_label_pc_174f4, %bb82, %dec_label_pc_175fc
  %storemerge = phi i32 [ %v2_17600, %dec_label_pc_175fc ], [ 0, %bb72 ], [ 0, %bb82 ], [ 0, %dec_label_pc_174f4 ], [ 0, %bb80 ], [ 0, %dec_label_pc_17458 ], [ 0, %dec_label_pc_173d4 ], [ 0, %.thread8 ], [ 0, %.thread16 ], [ 0, %dec_label_pc_173a8 ], [ 0, %dec_label_pc_1744c.loopexit17 ], [ 0, %dec_label_pc_17524 ]
  %v2_17450 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17450, i32* %r4.global-to-local, align 4
  ret i32 %storemerge

dec_label_pc_17458:                               ; preds = %bb71
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_17458 = inttoptr i32 %v0_17468 to i32*
  %v2_17458 = load i32, i32* %v1_17458, align 4
  %v2_1745c = icmp eq i32 %v2_17458, 0
  br i1 %v2_1745c, label %dec_label_pc_1744c, label %dec_label_pc_17464

dec_label_pc_17464:                               ; preds = %dec_label_pc_17458
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_17468 = add i32 %v0_17468, 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_174ac

dec_label_pc_17484:                               ; preds = %dec_label_pc_174c0
  switch i32 %v0_174d4, label %bb75 [
    i32 4, label %bb73
    i32 5, label %bb74
  ]

bb73:                                             ; preds = %dec_label_pc_17484
  store i32 %v2_174b4, i32* %sl.global-to-local, align 4
  br label %bb75

bb74:                                             ; preds = %dec_label_pc_17484
  store i32 %v2_174b4, i32* %r6.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %dec_label_pc_174c4, %dec_label_pc_17484, %bb76, %bb77, %bb73, %bb78, %bb74
  %v0_17500 = phi i32 [ %v2_174b4, %bb78 ], [ %v0_1750055, %bb77 ], [ %v0_1750055, %bb73 ], [ %v0_1750055, %bb76 ], [ %v0_1750055, %bb74 ], [ %v0_1750055, %dec_label_pc_17484 ], [ %v0_1750055, %dec_label_pc_174c4 ]
  %v0_17508 = phi i32 [ %v0_174f453, %bb78 ], [ %v0_174f453, %bb77 ], [ %v2_174b4, %bb73 ], [ %v0_174f453, %bb76 ], [ %v0_174f453, %bb74 ], [ %v0_174f453, %dec_label_pc_17484 ], [ %v0_174f453, %dec_label_pc_174c4 ]
  %v0_17518 = phi i32 [ %v0_174e048, %bb78 ], [ %v0_174e048, %bb77 ], [ %v0_174e048, %bb73 ], [ %v2_174b4, %bb76 ], [ %v0_174e048, %bb74 ], [ %v0_174e048, %dec_label_pc_17484 ], [ %v0_174e048, %dec_label_pc_174c4 ]
  %v1_174e4 = phi i32 [ %v1_174e450, %bb78 ], [ %v1_174e450, %bb77 ], [ %v1_174e450, %bb73 ], [ %v1_174e450, %bb76 ], [ %v2_174b4, %bb74 ], [ %v1_174e450, %dec_label_pc_17484 ], [ %v1_174e450, %dec_label_pc_174c4 ]
  %v2_17498 = add i32 %v0_174a0, %v0_17468
  %v3_17498 = inttoptr i32 %v2_17498 to i32*
  %v4_17498 = load i32, i32* %v3_17498, align 4
  %v2_1749c = icmp eq i32 %v4_17498, 0
  %v1_174a4 = add i32 %v0_174a0, 8
  br i1 %v2_1749c, label %dec_label_pc_174e0, label %dec_label_pc_174ac

dec_label_pc_174ac:                               ; preds = %bb75, %dec_label_pc_17464
  %v0_1750055 = phi i32 [ %v0_17500, %bb75 ], [ 0, %dec_label_pc_17464 ]
  %v0_174f453 = phi i32 [ %v0_17508, %bb75 ], [ 0, %dec_label_pc_17464 ]
  %v1_174e450 = phi i32 [ %v1_174e4, %bb75 ], [ 0, %dec_label_pc_17464 ]
  %v0_174e048 = phi i32 [ %v0_17518, %bb75 ], [ 0, %dec_label_pc_17464 ]
  %v0_174ac = phi i32 [ %v0_174a0, %bb75 ], [ 0, %dec_label_pc_17464 ]
  %v0_174a0 = phi i32 [ %v1_174a4, %bb75 ], [ 8, %dec_label_pc_17464 ]
  %v0_174d4 = phi i32 [ %v4_17498, %bb75 ], [ %v2_17458, %dec_label_pc_17464 ]
  %v2_174ac = add i32 %v0_174ac, %v1_17468
  %v3_174ac = inttoptr i32 %v2_174ac to i32*
  %v4_174ac = load i32, i32* %v3_174ac, align 4
  %v7_174b0 = icmp eq i32 %v0_174d4, 6
  %v2_174b4 = add i32 %v4_174ac, %v0_17434
  br i1 %v7_174b0, label %bb76, label %dec_label_pc_174c0

bb76:                                             ; preds = %dec_label_pc_174ac
  store i32 %v2_174b4, i32* %r1.global-to-local, align 4
  br label %bb75

dec_label_pc_174c0:                               ; preds = %dec_label_pc_174ac
  %v2_174b0 = icmp ugt i32 %v0_174d4, 5
  br i1 %v2_174b0, label %dec_label_pc_174c4, label %dec_label_pc_17484

dec_label_pc_174c4:                               ; preds = %dec_label_pc_174c0
  switch i32 %v0_174d4, label %bb75 [
    i32 1879048176, label %bb77
    i32 1879048188, label %bb78
  ]

bb77:                                             ; preds = %dec_label_pc_174c4
  store i32 %v2_174b4, i32* %fp.global-to-local, align 4
  br label %bb75

bb78:                                             ; preds = %dec_label_pc_174c4
  store i32 %v2_174b4, i32* %sb.global-to-local, align 4
  br label %bb75

dec_label_pc_174e0:                               ; preds = %bb75
  %v2_174e0 = icmp eq i32 %v0_17518, 0
  br i1 %v2_174e0, label %.thread16, label %bb79

bb79:                                             ; preds = %dec_label_pc_174e0
  %v3_174e4 = icmp eq i32 %v1_174e4, 0
  br i1 %v3_174e4, label %bb80, label %dec_label_pc_174f4

.thread16:                                        ; preds = %dec_label_pc_174e0
  br label %dec_label_pc_1744c

bb80:                                             ; preds = %bb79
  br label %dec_label_pc_1744c

dec_label_pc_174f4:                               ; preds = %bb79
  %v2_174f4 = icmp eq i32 %v0_17508, 0
  br i1 %v2_174f4, label %dec_label_pc_1744c, label %dec_label_pc_174fc

dec_label_pc_174fc:                               ; preds = %dec_label_pc_174f4
  %v1_174fc = add i32 %v0_17508, 4
  %v2_174fc = inttoptr i32 %v1_174fc to i32*
  %v3_174fc = load i32, i32* %v2_174fc, align 4
  %v2_17500 = icmp eq i32 %v0_17500, 0
  br i1 %v2_17500, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_174fc
  store i32 0, i32* %fp.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_174fc, %bb81
  store i32 %v1_174fc, i32* %sl.global-to-local, align 4
  %v2_1750c = icmp eq i32 %v3_174fc, 0
  br i1 %v2_1750c, label %dec_label_pc_1744c, label %dec_label_pc_17518

dec_label_pc_17518:                               ; preds = %bb82
  store i32 %v0_17518, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1753c

dec_label_pc_17524.loopexit:                      ; preds = %dec_label_pc_175b0
  br label %dec_label_pc_17524

dec_label_pc_17524:                               ; preds = %dec_label_pc_17524.loopexit, %dec_label_pc_175e0, %dec_label_pc_17578, %dec_label_pc_1756c, %dec_label_pc_17554, %dec_label_pc_1753c
  %v2_17528 = load i32, i32* %v2_174fc, align 4
  %v0_1752c = load i32, i32* %sl.global-to-local, align 4
  %v1_1752c = add i32 %v0_1752c, 1
  store i32 %v1_1752c, i32* %sl.global-to-local, align 4
  %v0_17534 = load i32, i32* %r4.global-to-local, align 4
  %v1_17534 = add i32 %v0_17534, 16
  store i32 %v1_17534, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v2_17528, %v1_1752c
  br i1 %tmp, label %dec_label_pc_1753c, label %dec_label_pc_1744c

dec_label_pc_1753c:                               ; preds = %dec_label_pc_17524, %dec_label_pc_17518
  %v0_17578 = phi i32 [ %v1_17534, %dec_label_pc_17524 ], [ %v0_17518, %dec_label_pc_17518 ]
  %v1_1753c = add i32 %v0_17578, 12
  %v2_1753c = inttoptr i32 %v1_1753c to i8*
  %v3_1753c = load i8, i8* %v2_1753c, align 1
  %v4_1753c = zext i8 %v3_1753c to i32
  store i32 %v4_1753c, i32* %r1.global-to-local, align 4
  %tmp87 = urem i8 %v3_1753c, 16
  %v1_17544 = zext i8 %tmp87 to i32
  %v6_17548 = lshr i32 39, %v1_17544
  %v1_1754c = urem i32 %v6_17548, 2
  %v2_1754c = icmp eq i32 %v1_1754c, 0
  br i1 %v2_1754c, label %dec_label_pc_17524, label %dec_label_pc_17554

dec_label_pc_17554:                               ; preds = %dec_label_pc_1753c
  %div = udiv i8 %v3_1753c, 16
  %v3_17558 = zext i8 %div to i32
  %v6_17560 = lshr i32 1030, %v3_17558
  %v1_17564 = urem i32 %v6_17560, 2
  %v2_17564 = icmp eq i32 %v1_17564, 0
  br i1 %v2_17564, label %dec_label_pc_17524, label %dec_label_pc_1756c

dec_label_pc_1756c:                               ; preds = %dec_label_pc_17554
  %v1_1756c = add i32 %v0_17578, 14
  %v2_1756c = inttoptr i32 %v1_1756c to i16*
  %v3_1756c = load i16, i16* %v2_1756c, align 2
  %v2_17570 = icmp eq i16 %v3_1756c, 0
  br i1 %v2_17570, label %dec_label_pc_17524, label %dec_label_pc_17578

dec_label_pc_17578:                               ; preds = %dec_label_pc_1756c
  %v4_1756c = zext i16 %v3_1756c to i32
  %v1_17578 = inttoptr i32 %v0_17578 to i32*
  %v2_17578 = load i32, i32* %v1_17578, align 4
  %v0_1757c = load i32, i32* %r8.global-to-local, align 4
  %v0_17580 = load i32, i32* %r6.global-to-local, align 4
  %v2_17580 = add i32 %v0_17580, %v2_17578
  store i32 %v2_17580, i32* %r1.global-to-local, align 4
  %v4_17584 = inttoptr i32 %v0_1757c to i8*
  %v5_17584 = call i32 @function_179f0(i8* %v4_17584, i32 %v2_17580, i32 %v3_17558, i32 %v4_1756c)
  %v2_17588 = icmp eq i32 %v5_17584, 0
  br i1 %v2_17588, label %dec_label_pc_17590, label %dec_label_pc_17524

dec_label_pc_17590:                               ; preds = %dec_label_pc_17578
  %v0_17590 = load i32, i32* %fp.global-to-local, align 4
  %v2_17590 = icmp eq i32 %v0_17590, 0
  br i1 %v2_17590, label %dec_label_pc_175fc, label %dec_label_pc_17598

dec_label_pc_17598:                               ; preds = %dec_label_pc_17590
  %v0_17598 = load i32, i32* %sl.global-to-local, align 4
  %v2_17598 = mul i32 %v0_17598, 2
  %v2_1759c = add i32 %v2_17598, %v0_17590
  %v3_1759c = inttoptr i32 %v2_1759c to i16*
  %v4_1759c = load i16, i16* %v3_1759c, align 2
  %tmp88 = urem i16 %v4_1759c, -32768
  %v3_175a4 = zext i16 %tmp88 to i32
  %v0_175a8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_175a8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_175c0

dec_label_pc_175b0:                               ; preds = %dec_label_pc_175cc, %dec_label_pc_175c0
  %v1_175b0 = add i32 %v0_175e0, 16
  %v2_175b0 = inttoptr i32 %v1_175b0 to i32*
  %v3_175b0 = load i32, i32* %v2_175b0, align 4
  %v2_175b4 = icmp eq i32 %v3_175b0, 0
  %v2_175b8 = add i32 %v3_175b0, %v0_175e0
  store i32 %v2_175b8, i32* %r1.global-to-local, align 4
  br i1 %v2_175b4, label %dec_label_pc_17524.loopexit, label %dec_label_pc_175c0

dec_label_pc_175c0:                               ; preds = %dec_label_pc_175b0, %dec_label_pc_17598
  %v0_175e0 = phi i32 [ %v2_175b8, %dec_label_pc_175b0 ], [ %v0_175a8, %dec_label_pc_17598 ]
  %v1_175c0 = add i32 %v0_175e0, 2
  %v2_175c0 = inttoptr i32 %v1_175c0 to i16*
  %v3_175c0 = load i16, i16* %v2_175c0, align 2
  %tmp89 = urem i16 %v3_175c0, 2
  %v2_175c4 = icmp eq i16 %tmp89, 0
  br i1 %v2_175c4, label %dec_label_pc_175cc, label %dec_label_pc_175b0

dec_label_pc_175cc:                               ; preds = %dec_label_pc_175c0
  %v1_175cc = add i32 %v0_175e0, 4
  %v2_175cc = inttoptr i32 %v1_175cc to i16*
  %v3_175cc = load i16, i16* %v2_175cc, align 2
  %tmp90 = urem i16 %v3_175cc, -32768
  %v9_175d8 = icmp eq i16 %tmp90, %tmp88
  br i1 %v9_175d8, label %dec_label_pc_175e0, label %dec_label_pc_175b0

dec_label_pc_175e0:                               ; preds = %dec_label_pc_175cc
  %v1_175e0 = add i32 %v0_175e0, 12
  %v2_175e0 = inttoptr i32 %v1_175e0 to i32*
  %v3_175e0 = load i32, i32* %v2_175e0, align 4
  %v2_175e4 = add i32 %v3_175e0, %v0_175e0
  %v3_175e4 = inttoptr i32 %v2_175e4 to i32*
  %v4_175e4 = load i32, i32* %v3_175e4, align 4
  %v0_175e8 = load i32, i32* %r7.global-to-local, align 4
  %v0_175ec = load i32, i32* %r6.global-to-local, align 4
  %v2_175ec = add i32 %v0_175ec, %v4_175e4
  store i32 %v2_175ec, i32* %r1.global-to-local, align 4
  %v4_175f0 = inttoptr i32 %v0_175e8 to i8*
  %v5_175f0 = call i32 @function_179f0(i8* %v4_175f0, i32 %v2_175ec, i32 %v3_175a4, i32 %v3_175e0)
  %v2_175f4 = icmp eq i32 %v5_175f0, 0
  br i1 %v2_175f4, label %dec_label_pc_175fc, label %dec_label_pc_17524

dec_label_pc_175fc:                               ; preds = %dec_label_pc_175e0, %dec_label_pc_17590
  %v0_175fc = load i32, i32* %r4.global-to-local, align 4
  %v1_175fc = add i32 %v0_175fc, 4
  %v2_175fc = inttoptr i32 %v1_175fc to i32*
  %v3_175fc = load i32, i32* %v2_175fc, align 4
  %v0_17600 = load i32, i32* %r5.global-to-local, align 4
  %v2_17600 = add i32 %v0_17600, %v3_175fc
  br label %dec_label_pc_1744c

; uselistorder directives
  uselistorder i32 %v3_175e0, { 1, 0 }
  uselistorder i32 %v0_175e0, { 0, 1, 4, 5, 3, 2 }
  uselistorder i16 %v3_1756c, { 1, 0 }
  uselistorder i32 %v3_17558, { 1, 0 }
  uselistorder i32 %v2_174b4, { 4, 5, 8, 7, 6, 3, 2, 0, 1 }
  uselistorder i32 %v0_174d4, { 0, 3, 2, 1 }
  uselistorder i32 %v0_174e048, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_174e450, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_174f453, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1750055, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17424, { 1, 2, 0 }
  uselistorder i32 %v0_17434, { 1, 0, 2 }
  uselistorder i32 %v0_1742c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_173cc, { 1, 0 }
  uselistorder i32 %v0_173cc, { 0, 2, 1 }
  uselistorder i32 %v2_1738c, { 0, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 10, 9, 2, 11, 12, 13, 14, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 14, { 21, 0, 22, 9, 3, 4, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 1, 16, 17, 18, 19, 2, 20 }
  uselistorder i32 39, { 0, 6, 5, 1, 7, 2, 8, 3, 9, 4 }
  uselistorder i8 16, { 1, 2, 0, 3, 4, 5, 6, 8, 7, 10, 9, 11, 12, 13, 14, 16, 15, 18, 17 }
  uselistorder i32 42, { 3, 2, 0, 4, 1, 5 }
  uselistorder i16 0, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder label %dec_label_pc_17524, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb75, { 5, 3, 0, 2, 6, 4, 1 }
  uselistorder label %dec_label_pc_1744c, { 11, 0, 10, 9, 2, 5, 8, 3, 1, 6, 7, 4 }
  uselistorder label %.thread4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_173d4, { 1, 0 }
}

define i32 @function_1760c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1760c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8388636 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_1760c = load i32, i32* @r6, align 4
  %v12_1760c = load i32, i32* @r7, align 4
  %v15_1760c = load i32, i32* @r8, align 4
  %v18_1760c = load i32, i32* @lr, align 4
  %v2_17610 = load i32, i32* %arg1, align 4
  store i32 %v2_17610, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r8, align 4
  %tmp42 = icmp ugt i32 %v2_17610, 2147479551
  br i1 %tmp42, label %dec_label_pc_17770, label %dec_label_pc_1762c

dec_label_pc_1762c:                               ; preds = %dec_label_pc_1760c
  store i32 ptrtoint (i32* @global_var_2363c.656 to i32), i32* @lr, align 4
  %v1_17630 = sub i32 0, %v2_17610
  %v2_17634 = load i32, i32* @global_var_2363c.656, align 4
  store i32 %v2_17634, i32* %r0.global-to-local, align 4
  %v3_1763c = urem i32 %v1_17630, 4096
  %v2_17640 = icmp eq i32 %v2_17634, 0
  %v2_17644 = add i32 %v3_1763c, %v2_17610
  br i1 %v2_17640, label %dec_label_pc_17704, label %dec_label_pc_1764c

dec_label_pc_1764c:                               ; preds = %dec_label_pc_1762c, %dec_label_pc_17704
  %v2_1774c = phi i32 [ %v2_17634, %dec_label_pc_1762c ], [ 0, %dec_label_pc_17704 ]
  %v1_17650 = sub i32 -1, %v2_1774c
  %v3_17654 = icmp ult i32 %v2_17644, %v1_17650
  br i1 %v3_17654, label %dec_label_pc_1765c, label %dec_label_pc_1768c

dec_label_pc_1765c:                               ; preds = %dec_label_pc_1764c
  %v3_17660 = load i32, i32* @global_var_2383c.532, align 4
  %v1_17664 = add i32 %v3_17660, -8388608
  %v2_17664 = icmp ugt i32 %v3_17660, 8388607
  %v7_17664 = icmp eq i32 %v3_17660, 8388608
  %v2_17668 = xor i1 %v2_17664, true
  %v3_17668 = or i1 %v7_17664, %v2_17668
  br i1 %v3_17668, label %bb, label %bb31

bb:                                               ; preds = %dec_label_pc_1765c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_1765c, %bb
  %v0_1767412 = phi i32 [ %v2_17610, %dec_label_pc_1765c ], [ 0, %bb ]
  %v2_1766c = xor i1 %v7_17664, true
  %v3_1766c = and i1 %v2_17664, %v2_1766c
  br i1 %v3_1766c, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  store i32 %v1_17664, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v0_17674 = phi i32 [ %v0_1767412, %bb31 ], [ %v1_17664, %bb32 ]
  %v2_17670 = add i32 %v2_1774c, %v2_17644
  store i32 %v2_17670, i32* %r0.global-to-local, align 4
  %v3_17674 = icmp ult i32 %v0_17674, %v2_17670
  br i1 %v3_17674, label %bb34, label %bb35

bb34:                                             ; preds = %bb33
  %v4_17678 = icmp ult i32 %v2_1774c, %v3_17660
  store i32 %v3_17660, i32* %stack_var_-28, align 4
  br i1 %v4_17678, label %.thread3, label %dec_label_pc_17724

bb35:                                             ; preds = %bb33
  store i32 %v3_17660, i32* %stack_var_-28, align 4
  br label %dec_label_pc_17724

.thread3:                                         ; preds = %bb34
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1768c

dec_label_pc_1768c:                               ; preds = %dec_label_pc_1773c, %dec_label_pc_1764c, %.thread3
  store i32 ptrtoint (i32* @global_var_23638.659 to i32), i32* @r6, align 4
  %v2_17690 = load i32, i32* @global_var_23638.659, align 4
  %v3_17698 = udiv i32 %v2_17690, 2
  %v6_1769c = shl i32 4096, %v3_17698
  %v3_176a0 = icmp uge i32 %v2_17644, %v6_1769c
  %v2_17644.v6_1769c = select i1 %v3_176a0, i32 %v2_17644, i32 %v6_1769c
  store i32 %v2_17644.v6_1769c, i32* @r7, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v7_176d4 = call i32 @function_150c0(i32 0, i32 %v2_17644.v6_1769c, i32 3, i32 34, i32 -1, i32 0, i32 0)
  store i32 %v7_176d4, i32* %r0.global-to-local, align 4
  %v7_176d8 = icmp eq i32 %v7_176d4, -1
  br i1 %v7_176d8, label %bb38, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1768c
  %v1_176dc = load i32, i32* @r7, align 4
  %v2_176dc = load i32, i32* @r8, align 4
  %v3_176dc = inttoptr i32 %v2_176dc to i32*
  store i32 %v1_176dc, i32* %v3_176dc, align 4
  %v3_176e0 = load i32, i32* @global_var_23638.659, align 4
  %v2_176e4 = add i32 %v3_176e0, 1
  %v2_176e8 = load i32, i32* @r6, align 4
  %v3_176e8 = inttoptr i32 %v2_176e8 to i32*
  store i32 %v2_176e4, i32* %v3_176e8, align 4
  store i32 %v7_176d4, i32* %r2.global-to-local, align 4
  br label %bb39

bb38:                                             ; preds = %dec_label_pc_1768c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb39

bb39:                                             ; preds = %.thread7, %dec_label_pc_17770, %dec_label_pc_1775c, %bb38
  %v0_176f4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_176f4, i32* %r0.global-to-local, align 4
  store i32 %v9_1760c, i32* @r6, align 4
  store i32 %v12_1760c, i32* @r7, align 4
  store i32 %v15_1760c, i32* @r8, align 4
  store i32 %v18_1760c, i32* @lr, align 4
  ret i32 %v0_176f4

dec_label_pc_17704:                               ; preds = %dec_label_pc_1762c
  store i32 0, i32* @global_var_2363c.656, align 4
  br label %dec_label_pc_1764c

dec_label_pc_17724:                               ; preds = %bb34, %bb35
  %v2_17724 = ptrtoint i32* %stack_var_-28 to i32
  %v2_17728 = icmp ugt i32* %stack_var_-28, inttoptr (i32 8388607 to i32*)
  %v2_1772c = icmp ne i32* %stack_var_-28, inttoptr (i32 8388608 to i32*)
  %v3_1772c = and i1 %v2_17728, %v2_1772c
  br i1 %v3_1772c, label %bb40, label %bb41

bb40:                                             ; preds = %dec_label_pc_17724
  %v6_1772c = ptrtoint i32* %stack_var_-8388636 to i32
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_17724, %bb40
  %storemerge = phi i32 [ %v6_1772c, %bb40 ], [ 0, %dec_label_pc_17724 ]
  %v0_17730 = phi i32 [ %v6_1772c, %bb40 ], [ 0, %dec_label_pc_17724 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_17730 = icmp ult i32 %v0_17730, %v2_17670
  store i32 %v2_17724, i32* %stack_var_-28, align 4
  br i1 %v3_17730, label %dec_label_pc_1773c, label %dec_label_pc_1775c

dec_label_pc_1773c:                               ; preds = %bb41
  %v3_1773c = icmp ult i32 %v2_1774c, %v2_17724
  br i1 %v3_1773c, label %dec_label_pc_1768c, label %dec_label_pc_1775c

dec_label_pc_1775c:                               ; preds = %dec_label_pc_1773c, %bb41
  store i32 %v2_1774c, i32* %r2.global-to-local, align 4
  store i32 %v2_17644, i32* %arg1, align 4
  %v0_17768 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17768, i32* @global_var_2363c.656, align 4
  br label %bb39

dec_label_pc_17770:                               ; preds = %dec_label_pc_1760c
  %v0_17770 = call i32 @function_13994()
  store i32 %v0_17770, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1777c = inttoptr i32 %v0_17770 to i32*
  store i32 12, i32* %v2_1777c, align 4
  br label %bb39

; uselistorder directives
  uselistorder i32 %v7_176d4, { 1, 0, 2 }
  uselistorder i1 %v2_17664, { 1, 0 }
  uselistorder i32 %v3_17660, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v2_1774c, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_17644, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v2_17610, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-28, { 3, 0, 2, 5, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 5, 4, 6, 7, 1, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 1, 7, 3, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_150c0, { 1, 0 }
  uselistorder i32 34, { 0, 2, 8, 3, 4, 9, 16, 1, 12, 10, 11, 5, 13, 6, 14, 7, 15 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_17724, { 1, 0 }
  uselistorder label %bb39, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1768c, { 0, 2, 1 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_1764c, { 1, 0 }
}

define i32 @function_17790(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17790:
  %v0_177a0 = load i32, i32* @r3, align 4
  store i32 %v0_177a0, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @function_177b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_177b4:
  %v0_177c4 = load i32, i32* @r0, align 4
  %v3_177c4 = inttoptr i32 %v0_177c4 to i16*
  %v4_177c4 = call i32 @function_15bb8(i16* %v3_177c4, i32 ptrtoint (i32* @global_var_23644.661 to i32), i32 8)
  ret i32 %v4_177c4
}

define i32 @function_177d8() local_unnamed_addr {
dec_label_pc_177d8:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_177d8 = load i32, i32* @r4, align 4
  %v6_177d8 = load i32, i32* @r5, align 4
  %v12_177d8 = load i32, i32* @r7, align 4
  %v15_177d8 = load i32, i32* @r8, align 4
  %v18_177d8 = load i32, i32* @lr, align 4
  %v0_177dc = load i32, i32* @r0, align 4
  store i32 %v0_177dc, i32* @r8, align 4
  %v0_177e8 = load i32, i32* @r1, align 4
  store i32 %v0_177e8, i32* @r7, align 4
  %v0_177ec = load i32, i32* @r2, align 4
  store i32 %v0_177ec, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_177dc, 65
  br i1 %tmp, label %dec_label_pc_17808, label %dec_label_pc_177f4

dec_label_pc_177f4:                               ; preds = %dec_label_pc_177d8
  %v0_177f4 = call i32 @function_13994()
  store i32 -1, i32* @r2, align 4
  %v2_17800 = inttoptr i32 %v0_177f4 to i32*
  store i32 22, i32* %v2_17800, align 4
  %v0_17944.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_17944

dec_label_pc_17808:                               ; preds = %dec_label_pc_177d8
  %v2_17808 = icmp eq i32 %v0_177e8, 0
  br i1 %v2_17808, label %bb, label %dec_label_pc_17814

bb:                                               ; preds = %dec_label_pc_17808
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_178e4

dec_label_pc_17814:                               ; preds = %dec_label_pc_17808
  %v1_17814 = inttoptr i32 %v0_177e8 to i32*
  %v2_17814 = load i32, i32* %v1_17814, align 4
  %v7_17818 = icmp eq i32 %v2_17814, 1
  store i1 %v7_17818, i1* @cpsr_z, align 1
  %tmp31 = or i32 %v2_17814, 1
  %tmp32 = icmp eq i32 %tmp31, 1
  br i1 %tmp32, label %dec_label_pc_178a4, label %dec_label_pc_17820

dec_label_pc_17820:                               ; preds = %dec_label_pc_17814
  %v1_17820 = add i32 %v0_177dc, -1
  %v1_17824 = urem i32 %v1_17820, 32
  %v6_1782c = shl i32 1, %v1_17824
  store i32 %v6_1782c, i32* %r5.global-to-local, align 4
  %v3_17834 = udiv i32 %v1_17820, 32
  %v4_17838 = mul nuw nsw i32 %v3_17834, 4
  %v5_17838 = add i32 %v4_17838, ptrtoint (i32* @global_var_23644.661 to i32)
  store i32 %v5_17838, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1783c

dec_label_pc_1783c:                               ; preds = %dec_label_pc_1783c.dec_label_pc_1783c_crit_edge, %dec_label_pc_17820
  %v1_17844 = phi i32 [ %v1_17844.pre, %dec_label_pc_1783c.dec_label_pc_1783c_crit_edge ], [ %v6_1782c, %dec_label_pc_17820 ]
  %v0_1783c = phi i32 [ %v0_1783c.pre, %dec_label_pc_1783c.dec_label_pc_1783c_crit_edge ], [ %v5_17838, %dec_label_pc_17820 ]
  %v1_1783c = inttoptr i32 %v0_1783c to i32*
  %v2_1783c = load i32, i32* %v1_1783c, align 4
  %v2_17844 = or i32 %v2_1783c, %v1_17844
  %v4_17848 = call i32 @function_167b4(i32 %v2_1783c, i32 %v2_17844, i32* %v1_1783c)
  %v2_1784c = icmp eq i32 %v4_17848, 0
  store i1 %v2_1784c, i1* @cpsr_z, align 1
  br i1 %v2_1784c, label %dec_label_pc_17854, label %dec_label_pc_1783c.dec_label_pc_1783c_crit_edge

dec_label_pc_1783c.dec_label_pc_1783c_crit_edge:  ; preds = %dec_label_pc_1783c
  %v0_1783c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17844.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1783c

dec_label_pc_17854:                               ; preds = %dec_label_pc_1783c
  %v3_17858 = load i32, i32* @global_var_23830.664, align 4
  %v2_1785c = icmp eq i32 %v3_17858, 0
  br i1 %v2_1785c, label %dec_label_pc_17864, label %dec_label_pc_178a4

dec_label_pc_17864:                               ; preds = %dec_label_pc_17854
  store i32 ptrtoint (i32* @global_var_23640.666 to i32), i32* %r4.global-to-local, align 4
  %v2_17868 = load i32, i32* @global_var_23640.666, align 4
  %v2_1786c = icmp eq i32 %v2_17868, 0
  br i1 %v2_1786c, label %dec_label_pc_17874, label %dec_label_pc_178a4

dec_label_pc_17874:                               ; preds = %dec_label_pc_17864
  store i32 0, i32* @r3, align 4
  %v2_1788c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1788c, i32* @r2, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v2_17898 = call i32 @function_17790(i32 175, i32 1)
  %v1_178a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_178a0 = inttoptr i32 %v1_178a0 to i32*
  store i32 1, i32* %v2_178a0, align 4
  br label %dec_label_pc_178a4

dec_label_pc_178a4:                               ; preds = %dec_label_pc_17864, %dec_label_pc_17854, %dec_label_pc_17814, %dec_label_pc_17874
  %v0_178a4 = load i32, i32* @r7, align 4
  %v1_178a4 = add i32 %v0_178a4, 132
  %v2_178a4 = inttoptr i32 %v1_178a4 to i32*
  %v3_178a4 = load i32, i32* %v2_178a4, align 4
  store i32 97232, i32* @r3, align 4
  store i32 97224, i32* @ip, align 4
  %v1_178b0 = inttoptr i32 %v0_178a4 to i32*
  %v2_178b0 = load i32, i32* %v1_178b0, align 4
  store i32 %v2_178b0, i32* @r5, align 4
  %v1_178b4 = and i32 %v3_178a4, 4
  %v2_178b4 = icmp eq i32 %v1_178b4, 0
  %v2_178b8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_178b8, i32* @r4, align 4
  br i1 %v2_178b4, label %bb25, label %bb24

bb24:                                             ; preds = %dec_label_pc_178a4
  store i32 97232, i32* @ip, align 4
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_178a4, %bb24
  %v1_178c0 = or i32 %v3_178a4, 67108864
  store i32 %v1_178c0, i32* @lr, align 4
  %v1_178c8 = add i32 %v0_178a4, 4
  store i32 %v2_178b0, i32* %stack_var_-52, align 4
  %v3_178dc = bitcast i32* %stack_var_-40 to i16*
  %v4_178dc = call i32 @function_15bb8(i16* %v3_178dc, i32 %v1_178c8, i32 8)
  store i32 %v2_178b8, i32* @r2, align 4
  %v0_178e4.pre = load i32, i32* @r6, align 4
  %v0_178f0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_178e4

dec_label_pc_178e4:                               ; preds = %bb, %bb25
  %v0_178f0 = phi i32 [ %v0_177dc, %bb ], [ %v0_178f0.pre, %bb25 ]
  %v1_178e8 = phi i32 [ %v0_177ec, %bb ], [ %v0_178e4.pre, %bb25 ]
  %v2_178e4 = icmp eq i32 %v1_178e8, 0
  %v3_178ec = ptrtoint i32* %stack_var_-72 to i32
  %storemerge = select i1 %v2_178e4, i32 0, i32 %v3_178ec
  store i32 %storemerge, i32* @r3, align 4
  store i32 8, i32* @r5, align 4
  %v2_17900 = call i32 @function_17790(i32 174, i32 %v0_178f0)
  store i32 %v2_17900, i32* @r0, align 4
  %v0_17904 = call i32 @function_13c40()
  store i32 %v0_17904, i32* @r4, align 4
  %v2_17908 = icmp eq i32 %v0_17904, 0
  br i1 %v2_17908, label %dec_label_pc_17914, label %bb28

bb28:                                             ; preds = %dec_label_pc_178e4
  store i32 -1, i32* @r2, align 4
  br label %dec_label_pc_17944

dec_label_pc_17914:                               ; preds = %dec_label_pc_178e4
  %v0_17914 = load i32, i32* @r6, align 4
  %v2_17914 = icmp eq i32 %v0_17914, 0
  br i1 %v2_17914, label %bb29, label %dec_label_pc_17920

bb29:                                             ; preds = %dec_label_pc_17914
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_17944

dec_label_pc_17920:                               ; preds = %dec_label_pc_17914
  %v3_17924 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_17924, i32* @r3, align 4
  %v1_17928 = add i32 %v0_17914, 4
  %v2_1792c = add i32 %v0_17914, 132
  %v3_1792c = inttoptr i32 %v2_1792c to i32*
  %v0_17930 = load i32, i32* @r3, align 4
  %v1_17930 = load i32, i32* @r6, align 4
  %v2_17930 = inttoptr i32 %v1_17930 to i32*
  store i32 %v0_17930, i32* %v2_17930, align 4
  %v0_17934 = load i32, i32* @r5, align 4
  %v2_17938 = ptrtoint i32* %stack_var_-60 to i32
  %v3_1793c = inttoptr i32 %v1_17928 to i16*
  %v4_1793c = call i32 @function_15bb8(i16* %v3_1793c, i32 %v2_17938, i32 %v0_17934)
  %v0_17940 = load i32, i32* @r4, align 4
  store i32 %v0_17940, i32* @r2, align 4
  br label %dec_label_pc_17944

dec_label_pc_17944:                               ; preds = %bb29, %bb28, %dec_label_pc_177f4, %dec_label_pc_17920
  %v0_17944 = phi i32 [ -1, %bb28 ], [ 0, %bb29 ], [ %v0_17944.pre, %dec_label_pc_177f4 ], [ %v0_17940, %dec_label_pc_17920 ]
  store i32 %v3_177d8, i32* %r4.global-to-local, align 4
  store i32 %v6_177d8, i32* %r5.global-to-local, align 4
  store i32 %v12_177d8, i32* @r7, align 4
  store i32 %v15_177d8, i32* @r8, align 4
  store i32 %v18_177d8, i32* @lr, align 4
  ret i32 %v0_17944

; uselistorder directives
  uselistorder i32 %v0_17914, { 1, 0, 2 }
  uselistorder i32 %v2_1783c, { 1, 0 }
  uselistorder i32 %v0_177dc, { 1, 2, 0, 3 }
  uselistorder i32 174, { 1, 0 }
  uselistorder i32 (i16*, i32, i32)* @function_15bb8, { 3, 4, 0, 11, 8, 10, 6, 1, 2, 7, 5, 9 }
  uselistorder i32 (i32, i32)* @function_17790, { 1, 0 }
  uselistorder label %dec_label_pc_17944, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_178e4, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_178a4, { 3, 0, 1, 2 }
}

define i32 @function_17968(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_17968:
  store i32 %arg1, i32* @r0, align 4
  %v1_1796c = add i32 %arg1, -32
  %tmp = icmp ult i32 %v1_1796c, 3
  br i1 %tmp, label %dec_label_pc_17988, label %dec_label_pc_1797c

dec_label_pc_1797c:                               ; preds = %dec_label_pc_17968
  %v0_17984 = call i32 @function_177d8()
  br label %dec_label_pc_17988

dec_label_pc_17988:                               ; preds = %dec_label_pc_17968, %dec_label_pc_1797c
  %v0_17988 = call i32 @function_13994()
  %v2_17990 = inttoptr i32 %v0_17988 to i32*
  store i32 22, i32* %v2_17990, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 22, { 1, 2, 4, 3, 0, 18, 5, 20, 6, 7, 14, 8, 15, 9, 16, 10, 17, 19, 11, 12, 13, 21 }
  uselistorder i32 ()* @function_13994, { 37, 36, 19, 30, 29, 28, 27, 26, 38, 35, 34, 18, 17, 16, 15, 5, 14, 13, 4, 31, 25, 24, 23, 22, 21, 12, 11, 10, 33, 32, 20, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_17988, { 1, 0 }
}

define i32 @function_179a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_179a4:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  store i32 %arg1, i32* @r4, align 4
  %v0_179b0 = call i32 @function_17bd8()
  store i32 %v0_179b0, i32* %r0.global-to-local, align 4
  %v2_179b4 = icmp eq i32 %v0_179b0, 0
  br i1 %v2_179b4, label %dec_label_pc_179bc, label %dec_label_pc_179e4

dec_label_pc_179bc:                               ; preds = %dec_label_pc_179a4
  %v0_179bc = load i32, i32* @r4, align 4
  store i32 %v0_179bc, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v1_179c8 = add i32 %v0_179bc, 32
  %v2_179c8 = inttoptr i32 %v1_179c8 to i32*
  %v3_179c8 = load i32, i32* %v2_179c8, align 4
  store i32 %v3_179c8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_179c8)
  %v0_179d4 = load i32, i32* %r0.global-to-local, align 4
  %v7_179d4 = icmp eq i32 %v0_179d4, 1
  br i1 %v7_179d4, label %bb, label %dec_label_pc_179e4

bb:                                               ; preds = %dec_label_pc_179bc
  %v4_179d8 = load i8, i8* %stack_var_-9, align 1
  %v5_179d8 = sext i8 %v4_179d8 to i32
  br label %dec_label_pc_179e4

dec_label_pc_179e4:                               ; preds = %dec_label_pc_179a4, %dec_label_pc_179bc, %bb
  %storemerge = phi i32 [ %v5_179d8, %bb ], [ -1, %dec_label_pc_179bc ], [ -1, %dec_label_pc_179a4 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_179e4, { 2, 1, 0 }
}

define i32 @function_179f0(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_179f0:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_179f4 = inttoptr i32 %arg2 to i8*
  %v2_179f4 = load i8, i8* %v1_179f4, align 1
  %v3_179f4 = zext i8 %v2_179f4 to i32
  %v3_179f8 = load i8, i8* %arg1, align 1
  %v4_179f8 = zext i8 %v3_179f8 to i32
  %v9_179fc = icmp eq i8 %v2_179f4, %v3_179f8
  br i1 %v9_179fc, label %dec_label_pc_17a18, label %dec_label_pc_17a20

dec_label_pc_17a08:                               ; preds = %dec_label_pc_17a18
  %v1_17a08 = add i32 %v0_17a08, 1
  %v2_17a08 = inttoptr i32 %v1_17a08 to i8*
  %v3_17a08 = load i8, i8* %v2_17a08, align 1
  %v4_17a08 = zext i8 %v3_17a08 to i32
  %v1_17a0c = add i32 %v0_17a0c, 1
  %v2_17a0c = inttoptr i32 %v1_17a0c to i8*
  %v3_17a0c = load i8, i8* %v2_17a0c, align 1
  %v4_17a0c = zext i8 %v3_17a0c to i32
  %v9_17a10 = icmp eq i8 %v3_17a08, %v3_17a0c
  br i1 %v9_17a10, label %dec_label_pc_17a18, label %dec_label_pc_17a20

dec_label_pc_17a18:                               ; preds = %dec_label_pc_179f0, %dec_label_pc_17a08
  %v0_17a18 = phi i32 [ %v4_17a08, %dec_label_pc_17a08 ], [ %v3_179f4, %dec_label_pc_179f0 ]
  %v1_17a209 = phi i32 [ %v4_17a08, %dec_label_pc_17a08 ], [ %v4_179f8, %dec_label_pc_179f0 ]
  %v0_17a0c = phi i32 [ %v1_17a0c, %dec_label_pc_17a08 ], [ %tmp, %dec_label_pc_179f0 ]
  %v0_17a08 = phi i32 [ %v1_17a08, %dec_label_pc_17a08 ], [ %arg2, %dec_label_pc_179f0 ]
  %v2_17a18 = icmp eq i32 %v0_17a18, 0
  br i1 %v2_17a18, label %dec_label_pc_17a20, label %dec_label_pc_17a08

dec_label_pc_17a20:                               ; preds = %dec_label_pc_17a08, %dec_label_pc_17a18, %dec_label_pc_179f0
  %v1_17a20 = phi i32 [ %v4_179f8, %dec_label_pc_179f0 ], [ %v4_17a0c, %dec_label_pc_17a08 ], [ %v1_17a209, %dec_label_pc_17a18 ]
  %v0_17a20 = phi i32 [ %v3_179f4, %dec_label_pc_179f0 ], [ %v4_17a08, %dec_label_pc_17a08 ], [ 0, %dec_label_pc_17a18 ]
  %v2_17a20 = sub nsw i32 %v1_17a20, %v0_17a20
  ret i32 %v2_17a20

; uselistorder directives
  uselistorder i32 %v4_17a08, { 0, 2, 1 }
  uselistorder i32 %v4_179f8, { 1, 0 }
  uselistorder i32 %v3_179f4, { 1, 0 }
  uselistorder label %dec_label_pc_17a20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17a18, { 1, 0 }
}

define i32 @function_17a28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17a28:
  store i32 0, i32* @r3, align 4
  %v3_17a50 = call i32 @function_1621c(i32 162, i32 %arg1, i32 %arg2)
  store i32 %v3_17a50, i32* @r0, align 4
  %v0_17a54 = call i32 @function_13c40()
  ret i32 %v0_17a54

; uselistorder directives
  uselistorder i32 ()* @function_13c40, { 16, 31, 30, 24, 29, 22, 20, 15, 28, 14, 18, 13, 17, 12, 11, 10, 9, 8, 23, 7, 2, 6, 21, 27, 5, 1, 4, 3, 26, 25, 19, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1621c, { 6, 10, 8, 5, 4, 3, 2, 1, 9, 7, 0 }
}

define i32 @function_17a64(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a64:
  %v2_17a68 = load i32, i32* @global_var_23828.534, align 4
  %v3_17a6c = load i32, i32* @r4, align 4
  %v6_17a6c = load i32, i32* @r5, align 4
  %v9_17a6c = load i32, i32* @r6, align 4
  %v15_17a6c = load i32, i32* @r8, align 4
  %v1_17a70 = and i32 %v2_17a68, 32768
  %v2_17a70 = icmp eq i32 %v1_17a70, 0
  store i32 %arg1, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_167c4.630 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23050.629 to i32), i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2304c.625 to i32), i32* @r4, align 4
  br i1 %v2_17a70, label %dec_label_pc_17b24, label %dec_label_pc_17a8c

dec_label_pc_17a8c:                               ; preds = %dec_label_pc_17a64
  %v3_17a94 = load i32, i32* @global_var_2383c.532, align 4
  store i32 sub (i32 92164, i32 ptrtoint (i32* @global_var_167c4.630 to i32)), i32* @global_var_23050.629, align 4
  store i32 sub (i32 92076, i32 ptrtoint (i32* @global_var_16770.626 to i32)), i32* @global_var_2304c.625, align 4
  %v1_17b143 = inttoptr i32 %v3_17a94 to i32*
  %v2_17b144 = load i32, i32* %v1_17b143, align 4
  %v2_17b186 = icmp eq i32 %v2_17b144, 0
  br i1 %v2_17b186, label %dec_label_pc_17b20, label %dec_label_pc_17ab8

dec_label_pc_17ab8:                               ; preds = %dec_label_pc_17a8c, %dec_label_pc_17b10
  %v0_17ac0 = phi i32 [ %v1_17b10, %dec_label_pc_17b10 ], [ %v3_17a94, %dec_label_pc_17a8c ]
  %v0_17ab8 = phi i32 [ %v2_17b14, %dec_label_pc_17b10 ], [ %v2_17b144, %dec_label_pc_17a8c ]
  %v7_17ab8 = icmp eq i32 %v0_17ab8, 15
  br i1 %v7_17ab8, label %dec_label_pc_17ac0, label %dec_label_pc_17b10

dec_label_pc_17ac0:                               ; preds = %dec_label_pc_17ab8
  %v1_17ac0 = add i32 %v0_17ac0, 4
  %v2_17ac0 = inttoptr i32 %v1_17ac0 to i32*
  %v3_17ac0 = load i32, i32* %v2_17ac0, align 4
  %v1_17ac4 = inttoptr i32 %v3_17ac0 to i8*
  %v2_17ac4 = load i8, i8* %v1_17ac4, align 1
  %v7_17ac8 = icmp eq i8 %v2_17ac4, 118
  br i1 %v7_17ac8, label %dec_label_pc_17ad0, label %dec_label_pc_17b20

dec_label_pc_17ad0:                               ; preds = %dec_label_pc_17ac0
  %v1_17ad0 = add i32 %v3_17ac0, 1
  %v2_17ad0 = inttoptr i32 %v1_17ad0 to i8*
  %v3_17ad0 = load i8, i8* %v2_17ad0, align 1
  %v7_17ad4 = icmp eq i8 %v3_17ad0, 54
  br i1 %v7_17ad4, label %dec_label_pc_17adc, label %dec_label_pc_17b20

dec_label_pc_17adc:                               ; preds = %dec_label_pc_17ad0
  %v1_17adc = add i32 %v3_17ac0, 2
  %v2_17adc = inttoptr i32 %v1_17adc to i8*
  %v3_17adc = load i8, i8* %v2_17adc, align 1
  %v4_17adc = zext i8 %v3_17adc to i32
  %v1_17ae0 = add nsw i32 %v4_17adc, -48
  %tmp = icmp ult i32 %v1_17ae0, 10
  br i1 %tmp, label %dec_label_pc_17b20, label %dec_label_pc_17aec

dec_label_pc_17aec:                               ; preds = %dec_label_pc_17adc
  store i32 sub (i32 92128, i32 ptrtoint (i32* @global_var_167c4.630 to i32)), i32* @global_var_23050.629, align 4
  store i32 sub (i32 92068, i32 ptrtoint (i32* @global_var_16770.626 to i32)), i32* @global_var_2304c.625, align 4
  br label %dec_label_pc_17b20

dec_label_pc_17b10:                               ; preds = %dec_label_pc_17ab8
  %v1_17b10 = add i32 %v0_17ac0, 8
  %v1_17b14 = inttoptr i32 %v1_17b10 to i32*
  %v2_17b14 = load i32, i32* %v1_17b14, align 4
  %v2_17b18 = icmp eq i32 %v2_17b14, 0
  br i1 %v2_17b18, label %dec_label_pc_17b14.dec_label_pc_17b20.loopexit_crit_edge, label %dec_label_pc_17ab8

dec_label_pc_17b24:                               ; preds = %dec_label_pc_17a64
  %v3_17b28 = load i32, i32* inttoptr (i32 -61444 to i32*), align 4
  store i32 sub (i32 -61472, i32 ptrtoint (i32* @global_var_16838.633 to i32)), i32* @global_var_23054.632, align 4
  store i32 sub (i32 -61536, i32 ptrtoint (i32* @global_var_16770.626 to i32)), i32* @global_var_2304c.625, align 4
  store i32 sub (i32 -61504, i32 ptrtoint (i32* @global_var_167c4.630 to i32)), i32* @global_var_23050.629, align 4
  %v7_17b5c = icmp sgt i32 %v3_17b28, 1
  br i1 %v7_17b5c, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_17b24
  call void @llvm.trap()
  unreachable

bb19:                                             ; preds = %dec_label_pc_17b24
  %v7_17b60 = icmp eq i32 %v3_17b28, 2
  br i1 %v7_17b60, label %bb20, label %dec_label_pc_17b20

bb20:                                             ; preds = %bb19
  store i32 sub (i32 92028, i32 ptrtoint (i32* @global_var_16770.626 to i32)), i32* @global_var_2304c.625, align 4
  br label %dec_label_pc_17b20

dec_label_pc_17b14.dec_label_pc_17b20.loopexit_crit_edge: ; preds = %dec_label_pc_17b10
  br label %dec_label_pc_17b20

dec_label_pc_17b20:                               ; preds = %bb19, %dec_label_pc_17a8c, %dec_label_pc_17b14.dec_label_pc_17b20.loopexit_crit_edge, %dec_label_pc_17ad0, %dec_label_pc_17ac0, %dec_label_pc_17adc, %dec_label_pc_17aec, %bb20
  store i32 %v3_17a6c, i32* @r4, align 4
  store i32 %v6_17a6c, i32* @r5, align 4
  store i32 %v9_17a6c, i32* @r6, align 4
  store i32 %v15_17a6c, i32* @r8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_17b14, { 1, 0 }
  uselistorder i32 %v1_17b10, { 1, 0 }
  uselistorder i32 %v0_17ac0, { 1, 0 }
  uselistorder void ()* @llvm.trap, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 10, { 0, 6, 5, 15, 71, 8, 72, 1, 7, 78, 2, 16, 39, 73, 17, 40, 41, 30, 31, 10, 74, 32, 33, 18, 4, 34, 75, 19, 77, 76, 42, 43, 20, 21, 22, 12, 23, 13, 44, 45, 3, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 24, 57, 58, 59, 25, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 11, 70, 26, 79, 9, 80, 81, 28, 82, 35, 36, 14, 83, 37, 38, 27, 84, 29 }
  uselistorder i32* @global_var_2304c.625, { 0, 1, 3, 2, 4 }
  uselistorder i32* @global_var_23050.629, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_17b20, { 2, 7, 0, 6, 5, 3, 4, 1 }
  uselistorder label %dec_label_pc_17ab8, { 1, 0 }
}

define i32 @function_17bc8() local_unnamed_addr {
dec_label_pc_17bc8:
  %v0_17bd4 = load i32, i32* @r0, align 4
  ret i32 %v0_17bd4
}

define i32 @function_17bd8() local_unnamed_addr {
dec_label_pc_17bd8:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17bd8 = load i32, i32* @r4, align 4
  store i32 %v3_17bd8, i32* %stack_var_-8, align 4
  %v0_17bdc = load i32, i32* @r0, align 4
  %v1_17bdc = add i32 %v0_17bdc, 74
  %v2_17bdc = inttoptr i32 %v1_17bdc to i8*
  %v3_17bdc = load i8, i8* %v2_17bdc, align 1
  %v4_17bdc = zext i8 %v3_17bdc to i32
  store i32 %v4_17bdc, i32* @ip, align 4
  %v1_17be0 = add i32 %v0_17bdc, 20
  %v2_17be0 = inttoptr i32 %v1_17be0 to i32*
  %v3_17be0 = load i32, i32* %v2_17be0, align 4
  %v1_17be4 = add i32 %v0_17bdc, 44
  %v2_17be4 = inttoptr i32 %v1_17be4 to i32*
  %v3_17be4 = load i32, i32* %v2_17be4, align 4
  %v1_17be8 = add nsw i32 %v4_17bdc, -1
  %v2_17bec = or i32 %v1_17be8, %v4_17bdc
  store i32 %v2_17bec, i32* %r3.global-to-local, align 4
  %v3_17bf0 = icmp uge i32 %v3_17be0, %v3_17be4
  store i1 %v3_17bf0, i1* %cpsr_c.global-to-local, align 1
  %v9_17bf0 = icmp eq i32 %v3_17be0, %v3_17be4
  store i1 %v9_17bf0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17bdc, i32* %r4.global-to-local, align 4
  %v1_17bf8 = trunc i32 %v2_17bec to i8
  store i8 %v1_17bf8, i8* %v2_17bdc, align 1
  %v0_17bfc = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_17bfc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_17bfc = xor i1 %v1_17bfc, true
  %v3_17bfc = and i1 %v0_17bfc, %v2_17bfc
  br i1 %v3_17bfc, label %bb, label %dec_label_pc_17bd8..thread8_crit_edge

dec_label_pc_17bd8..thread8_crit_edge:            ; preds = %dec_label_pc_17bd8
  %v0_17c0c.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_17bd8
  %v4_17c04 = load i32, i32* @r0, align 4
  %v5_17c04 = add i32 %v4_17c04, 36
  %v6_17c04 = inttoptr i32 %v5_17c04 to i32*
  %v7_17c04 = load i32, i32* %v6_17c04, align 4
  store i32 %v7_17c04, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17bd8..thread8_crit_edge, %bb
  %v0_17c0c = phi i32 [ %v0_17c0c.pre, %dec_label_pc_17bd8..thread8_crit_edge ], [ %v7_17c04, %bb ]
  call void @__pseudo_cond_branch(i1 %v3_17bfc, i32 %v0_17c0c)
  %v0_17c10 = load i32, i32* %r4.global-to-local, align 4
  %v1_17c10 = inttoptr i32 %v0_17c10 to i32*
  %v2_17c10 = load i32, i32* %v1_17c10, align 4
  store i32 %v2_17c10, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_17c18 = and i32 %v2_17c10, 4
  %v2_17c18 = icmp eq i32 %v1_17c18, 0
  store i1 %v2_17c18, i1* %cpsr_z.global-to-local, align 1
  %v2_17c1c = add i32 %v0_17c10, 20
  %v3_17c1c = inttoptr i32 %v2_17c1c to i32*
  store i32 0, i32* %v3_17c1c, align 4
  %v0_17c20 = load i32, i32* %r3.global-to-local, align 4
  %v1_17c20 = load i32, i32* %r4.global-to-local, align 4
  %v2_17c20 = add i32 %v1_17c20, 16
  %v3_17c20 = inttoptr i32 %v2_17c20 to i32*
  store i32 %v0_17c20, i32* %v3_17c20, align 4
  %v0_17c24 = load i32, i32* %r3.global-to-local, align 4
  %v1_17c24 = load i32, i32* %r4.global-to-local, align 4
  %v2_17c24 = add i32 %v1_17c24, 28
  %v3_17c24 = inttoptr i32 %v2_17c24 to i32*
  store i32 %v0_17c24, i32* %v3_17c24, align 4
  br i1 %v2_17c18, label %dec_label_pc_17c38, label %.thread1

.thread1:                                         ; preds = %.thread8
  %v1_17c28 = load i32, i32* @r2, align 4
  %v2_17c28 = or i32 %v1_17c28, 32
  store i32 %v2_17c28, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17c30 = load i32, i32* %r4.global-to-local, align 4
  %v3_17c30 = inttoptr i32 %v2_17c30 to i32*
  store i32 %v2_17c28, i32* %v3_17c30, align 4
  br label %bb12

dec_label_pc_17c38:                               ; preds = %.thread8
  %v0_17c38 = load i32, i32* %r4.global-to-local, align 4
  %v1_17c38 = add i32 %v0_17c38, 44
  %v1_17c3c = inttoptr i32 %v1_17c38 to i32*
  %v2_17c3c = load i32, i32* %v1_17c3c, align 4
  %v3_17c3c = add i32 %v0_17c38, 48
  %v4_17c3c = inttoptr i32 %v3_17c3c to i32*
  %v5_17c3c = load i32, i32* %v4_17c3c, align 4
  %v2_17c40 = add i32 %v5_17c3c, %v2_17c3c
  store i32 %v2_17c40, i32* %r3.global-to-local, align 4
  %v0_17c44 = load i32, i32* @r2, align 4
  %v1_17c44 = and i32 %v0_17c44, 16
  store i32 %v1_17c44, i32* %r0.global-to-local, align 4
  %v2_17c44 = icmp eq i32 %v1_17c44, 0
  store i1 %v2_17c44, i1* %cpsr_z.global-to-local, align 1
  %v2_17c48 = add i32 %v0_17c38, 4
  %v3_17c48 = inttoptr i32 %v2_17c48 to i32*
  store i32 %v2_17c40, i32* %v3_17c48, align 4
  %v0_17c4c = load i32, i32* %r3.global-to-local, align 4
  %v1_17c4c = load i32, i32* %r4.global-to-local, align 4
  %v2_17c4c = add i32 %v1_17c4c, 8
  %v3_17c4c = inttoptr i32 %v2_17c4c to i32*
  store i32 %v0_17c4c, i32* %v3_17c4c, align 4
  br i1 %v2_17c44, label %bb12, label %bb11

bb11:                                             ; preds = %dec_label_pc_17c38
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %.thread1, %dec_label_pc_17c38, %bb11
  %v2_17c54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17c54, i32* @r4, align 4
  %v1_17c58 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17c58

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 48, { 0, 7, 11, 1, 5, 6, 2, 8, 3, 9, 4, 10 }
  uselistorder i32 44, { 7, 8, 9, 3, 4, 5, 6, 1, 10, 0, 11, 2, 12 }
  uselistorder label %bb12, { 2, 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_17c5c() local_unnamed_addr {
dec_label_pc_17c5c:
  %v0_17c64 = call i32 @function_17cf0()
  ret i32 %v0_17c64
}

define i32 @function_17c74(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c74:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_17c78 = icmp eq i32 %arg1, 0
  store i1 %v2_17c78, i1* @cpsr_z, align 1
  br i1 %v2_17c78, label %dec_label_pc_17ce4, label %dec_label_pc_17c84

dec_label_pc_17c84:                               ; preds = %dec_label_pc_17c74
  %v1_17c84 = add i32 %arg1, 76
  %v2_17c84 = inttoptr i32 %v1_17c84 to i32*
  %v3_17c84 = load i32, i32* %v2_17c84, align 4
  %v3_17c8c = icmp sgt i32 %v3_17c84, -1
  call void @__pseudo_cond_branch(i1 %v3_17c8c, i32 ptrtoint (i32* @global_var_17dfc.686 to i32))
  %v0_17c90 = load i32, i32* %r4.global-to-local, align 4
  %v1_17c90 = add i32 %v0_17c90, 20
  %v2_17c90 = inttoptr i32 %v1_17c90 to i32*
  %v3_17c90 = load i32, i32* %v2_17c90, align 4
  %v1_17c94 = add i32 %v0_17c90, 28
  %v2_17c94 = inttoptr i32 %v1_17c94 to i32*
  %v3_17c94 = load i32, i32* %v2_17c94, align 4
  %tmp = icmp ugt i32 %v3_17c90, %v3_17c94
  br i1 %tmp, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_17c84
  store i32 %v0_17c90, i32* %r0.global-to-local, align 4
  %v5_17ca8 = add i32 %v0_17c90, 36
  %v6_17ca8 = inttoptr i32 %v5_17ca8 to i32*
  %v7_17ca8 = load i32, i32* %v6_17ca8, align 4
  store i32 %v7_17ca8, i32* @ip, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17c84, %bb
  %.04 = phi i32 [ %v7_17ca8, %bb ], [ undef, %dec_label_pc_17c84 ]
  call void @__pseudo_cond_branch(i1 %tmp, i32 %.04)
  %v0_17cb4 = load i32, i32* %r4.global-to-local, align 4
  %v1_17cb4 = add i32 %v0_17cb4, 4
  %v2_17cb4 = inttoptr i32 %v1_17cb4 to i32*
  %v3_17cb4 = load i32, i32* %v2_17cb4, align 4
  %v1_17cb8 = add i32 %v0_17cb4, 8
  %v2_17cb8 = inttoptr i32 %v1_17cb8 to i32*
  %v3_17cb8 = load i32, i32* %v2_17cb8, align 4
  %v3_17cbc = icmp ult i32 %v3_17cb4, %v3_17cb8
  %v9_17cbc = icmp eq i32 %v3_17cb4, %v3_17cb8
  store i1 %v9_17cbc, i1* @cpsr_z, align 1
  br i1 %v3_17cbc, label %dec_label_pc_17cc4, label %dec_label_pc_17ce4

dec_label_pc_17cc4:                               ; preds = %.thread6
  store i32 %v0_17cb4, i32* %r0.global-to-local, align 4
  %v1_17cd8 = add i32 %v0_17cb4, 40
  %v2_17cd8 = inttoptr i32 %v1_17cd8 to i32*
  %v3_17cd8 = load i32, i32* %v2_17cd8, align 4
  store i32 %v3_17cd8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_17cd8)
  br label %dec_label_pc_17ce4

dec_label_pc_17ce4:                               ; preds = %.thread6, %dec_label_pc_17c74, %dec_label_pc_17cc4
  %v1_17cec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17cec

; uselistorder directives
  uselistorder i1 %tmp, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 40, { 10, 24, 3, 25, 11, 4, 12, 5, 13, 14, 2, 15, 16, 0, 17, 19, 18, 20, 1, 21, 23, 22, 7, 26, 8, 27, 6, 28, 9, 29 }
  uselistorder i32 28, { 10, 26, 29, 11, 30, 31, 43, 44, 8, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0, 12, 1, 13, 2, 14, 3, 15, 4, 16, 5, 17, 6, 18, 7, 9, 28, 27, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 20, { 22, 88, 89, 113, 114, 115, 116, 105, 106, 107, 108, 109, 110, 111, 112, 3, 26, 4, 23, 5, 24, 6, 25, 90, 91, 7, 92, 8, 93, 0, 94, 21, 27, 28, 9, 29, 30, 31, 32, 33, 34, 10, 35, 36, 38, 37, 39, 40, 11, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 12, 52, 53, 54, 56, 55, 57, 58, 59, 13, 60, 61, 62, 63, 65, 64, 14, 66, 67, 15, 68, 69, 70, 71, 16, 72, 73, 17, 74, 75, 76, 77, 78, 1, 79, 18, 80, 81, 82, 83, 2, 84, 19, 85, 86, 87, 95, 96, 97, 98, 99, 100, 101, 102, 103, 20, 104 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17ce4, { 2, 0, 1 }
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_17cf0() local_unnamed_addr {
dec_label_pc_17cf0:
  %tmp = load i32, i32* @r0, align 4
  ret i32 %tmp
}

define i32 @function_17cf0.1(i32 %arg1) local_unnamed_addr {
dec_label_pc_17cf0:
  %stack_var_-8 = alloca i32, align 4
  %v3_17cf0 = load i32, i32* @r4, align 4
  store i32 %v3_17cf0, i32* %stack_var_-8, align 4
  %v6_17cf0 = load i32, i32* @lr, align 4
  %v0_17cf4 = call i32 @function_17d54()
  %storemerge.in1 = inttoptr i32 %v0_17cf4 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* @r4, align 4
  %v2_17d084 = icmp eq i32 %storemerge2, 0
  br i1 %v2_17d084, label %dec_label_pc_17d10, label %dec_label_pc_17d00

dec_label_pc_17d00:                               ; preds = %dec_label_pc_17cf0, %dec_label_pc_17d00
  %storemerge5 = phi i32 [ %storemerge, %dec_label_pc_17d00 ], [ %storemerge2, %dec_label_pc_17cf0 ]
  %v1_17d00 = call i32 @function_17c74(i32 %storemerge5)
  %v0_17d04 = load i32, i32* @r4, align 4
  %v1_17d04 = add i32 %v0_17d04, 56
  %storemerge.in = inttoptr i32 %v1_17d04 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_17d08 = icmp eq i32 %storemerge, 0
  br i1 %v2_17d08, label %dec_label_pc_17d10, label %dec_label_pc_17d00

dec_label_pc_17d10:                               ; preds = %dec_label_pc_17d00, %dec_label_pc_17cf0
  %v2_17d14 = load i32, i32* @global_var_2364c.688, align 4
  %v1_17d18 = call i32 @function_17c74(i32 %v2_17d14)
  %v2_17d20 = load i32, i32* @global_var_2364c.688, align 4
  %v2_17d24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17d24, i32* @r4, align 4
  store i32 %v6_17cf0, i32* @lr, align 4
  %v1_17d28 = call i32 @function_17c74(i32 %v2_17d20)
  %v0_17d2c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17d2c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17d10
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17d10, %bb
  %v2_17d40 = call i32 @function_1614c(i32* nonnull @global_var_23654.691)
  ret i32 %v2_17d40

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 56, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_17c74, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_17d00, { 1, 0 }
}

define i32 @function_17d54() local_unnamed_addr {
dec_label_pc_17d54:
  %v2_17d60 = call i32 @function_161b8(i32* nonnull @global_var_23654.691)
  ret i32 ptrtoint (i32* @global_var_23650.694 to i32)
}

define i32 @function_17d7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17d7c:
  ret i32 %arg2
}

define i32 @function_17d9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_17d9c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17d9c = load i32, i32* @r4, align 4
  store i32 %v3_17d9c, i32* %stack_var_-8, align 4
  %v1_17da0 = add i32 %arg1, 76
  store i32 %v1_17da0, i32* %r4.global-to-local, align 4
  %v0_17da4 = call i32 @function_16760()
  store i32 %v0_17da4, i32* @r0, align 4
  %v2_17dac = add i32 %v0_17da4, 76
  %v3_17dac = inttoptr i32 %v2_17dac to i32*
  store i32 0, i32* %v3_17dac, align 4
  %v0_17db0 = call i32 @function_16760()
  %v1_17db4 = add i32 %v0_17db0, 80
  %v2_17db4 = inttoptr i32 %v1_17db4 to i32*
  %v3_17db4 = load i32, i32* %v2_17db4, align 4
  %v2_17db8 = icmp eq i32 %v3_17db4, 0
  br i1 %v2_17db8, label %dec_label_pc_17df4, label %dec_label_pc_17dc0

dec_label_pc_17dc0:                               ; preds = %dec_label_pc_17d9c
  %v0_17dc4 = load i32, i32* %r4.global-to-local, align 4
  %v4_17dd0 = call i32 @function_17d7c(i32 240, i32 %v0_17dc4, i32 129, i32 1)
  %v4_17dd8 = icmp eq i32 %v4_17dd0, -38
  br i1 %v4_17dd8, label %dec_label_pc_17ddc, label %dec_label_pc_17df4

dec_label_pc_17ddc:                               ; preds = %dec_label_pc_17dc0
  %v0_17de0 = load i32, i32* %r4.global-to-local, align 4
  %v2_17dec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17dec, i32* %r4.global-to-local, align 4
  %v4_17df0 = call i32 @function_17d7c(i32 240, i32 %v0_17de0, i32 1, i32 1)
  br label %dec_label_pc_17df4

dec_label_pc_17df4:                               ; preds = %dec_label_pc_17dc0, %dec_label_pc_17d9c, %dec_label_pc_17ddc
  %v1_17df8 = phi i32 [ %v4_17dd0, %dec_label_pc_17dc0 ], [ %v0_17db0, %dec_label_pc_17d9c ], [ %v4_17df0, %dec_label_pc_17ddc ]
  %v2_17df4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17df4, i32* %r4.global-to-local, align 4
  ret i32 %v1_17df8

; uselistorder directives
  uselistorder i32 -38, { 9, 10, 11, 12, 17, 6, 14, 5, 13, 8, 7, 16, 15, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @function_17d7c, { 1, 0 }
  uselistorder i32 129, { 0, 1, 2, 3, 4, 13, 5, 6, 9, 10, 7, 8, 11, 12 }
  uselistorder i32 240, { 2, 4, 0, 5, 1, 3, 6, 12, 13, 20, 16, 17, 14, 15, 18, 19, 7, 8, 9, 10, 11 }
  uselistorder i32 ()* @function_16760, { 28, 27, 24, 26, 25, 23, 22, 21, 20, 3, 2, 1, 0, 19, 18, 17, 16, 11, 10, 9, 8, 15, 14, 13, 12, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_17df4, { 2, 0, 1 }
}

define i32 @function_17dfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_17dfc:
  %v0_17e04 = call i32 @function_16828()
  %v1_17e08 = add i32 %v0_17e04, -176
  %v2_17e08 = inttoptr i32 %v1_17e08 to i32*
  %v3_17e08 = load i32, i32* %v2_17e08, align 4
  store i32 %v3_17e08, i32* @r5, align 4
  %v1_17e0c = add i32 %arg1, 76
  %v2_17e0c = inttoptr i32 %v1_17e0c to i32*
  %v3_17e0c = load i32, i32* %v2_17e0c, align 4
  %v9_17e10 = icmp eq i32 %v3_17e0c, %v3_17e08
  store i1 %v9_17e10, i1* @cpsr_z, align 1
  br i1 %v9_17e10, label %dec_label_pc_17e60, label %dec_label_pc_17e1c

dec_label_pc_17e1c:                               ; preds = %dec_label_pc_17dfc
  %v1_17e1c = add i32 %arg1, 80
  store i32 %v1_17e1c, i32* @r6, align 4
  store i32 %v1_17e0c, i32* @r4, align 4
  %v4_17e3011 = call i32 @function_167b4(i32 0, i32 %v3_17e08, i32* %v2_17e0c)
  %v2_17e3413 = icmp eq i32 %v4_17e3011, 0
  br i1 %v2_17e3413, label %dec_label_pc_17e60, label %dec_label_pc_17e40

dec_label_pc_17e40:                               ; preds = %dec_label_pc_17e1c, %dec_label_pc_17e24.backedge
  %v0_17e40 = load i32, i32* @r4, align 4
  %v1_17e40 = inttoptr i32 %v0_17e40 to i32*
  %v2_17e40 = load i32, i32* %v1_17e40, align 4
  store i32 %v2_17e40, i32* @r2, align 4
  %v2_17e44 = icmp eq i32 %v2_17e40, 0
  store i1 %v2_17e44, i1* @cpsr_z, align 1
  br i1 %v2_17e44, label %dec_label_pc_17e24.backedge, label %dec_label_pc_17e4c

dec_label_pc_17e4c:                               ; preds = %dec_label_pc_17e40
  %v0_17e50 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v5_17e58 = call i32 @function_162e0(i32* %v1_17e40, i32 %v0_17e50)
  %v0_17e28.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17e24.backedge

dec_label_pc_17e24.backedge:                      ; preds = %dec_label_pc_17e4c, %dec_label_pc_17e40
  %v0_17e28.pre = phi i32 [ %v0_17e28.pre.pre, %dec_label_pc_17e4c ], [ %v0_17e40, %dec_label_pc_17e40 ]
  %v0_17e24.pre = load i32, i32* @r5, align 4
  %v3_17e30 = inttoptr i32 %v0_17e28.pre to i32*
  %v4_17e30 = call i32 @function_167b4(i32 0, i32 %v0_17e24.pre, i32* %v3_17e30)
  %v2_17e34 = icmp eq i32 %v4_17e30, 0
  br i1 %v2_17e34, label %dec_label_pc_17e60, label %dec_label_pc_17e40

dec_label_pc_17e60:                               ; preds = %dec_label_pc_17e1c, %dec_label_pc_17e24.backedge, %dec_label_pc_17dfc
  %storemerge = phi i32 [ 0, %dec_label_pc_17dfc ], [ 1, %dec_label_pc_17e24.backedge ], [ 1, %dec_label_pc_17e1c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32*, i32)* @function_162e0, { 0, 1, 5, 6, 2, 3, 4, 7 }
  uselistorder i32 (i32, i32, i32*)* @function_167b4, { 3, 0, 5, 6, 1, 7, 4, 8, 9, 17, 18, 19, 10, 11, 12, 13, 2, 14, 15, 16, 20, 21, 22 }
  uselistorder i32 ()* @function_16828, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_17e60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17e40, { 1, 0 }
}

define i32 @function_17e68(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17e68:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_17e68 = sub i32 0, %arg1
  store i32 %v1_17e68, i32* %r0.global-to-local, align 4
  %v2_17e74 = mul i32 %arg1, 2
  store i32 %v2_17e74, i32* %r2.global-to-local, align 4
  %v4_17e74 = icmp eq i32 %v2_17e74, 0
  br i1 %v4_17e74, label %dec_label_pc_17e68.dec_label_pc_17fac_crit_edge, label %bb

dec_label_pc_17e68.dec_label_pc_17fac_crit_edge:  ; preds = %dec_label_pc_17e68
  %.pre = mul i32 %arg2, 2
  br label %dec_label_pc_17fac

bb:                                               ; preds = %dec_label_pc_17e68
  %v3_17e78 = mul i32 %arg2, 2
  store i32 %v3_17e78, i32* %r3.global-to-local, align 4
  %v5_17e78 = icmp eq i32 %v3_17e78, 0
  br i1 %v5_17e78, label %dec_label_pc_17fac, label %bb78

bb78:                                             ; preds = %bb
  %v5_17e7c = icmp eq i32 %v3_17e78, %v2_17e74
  br i1 %v5_17e7c, label %dec_label_pc_17fac, label %bb79

bb79:                                             ; preds = %bb78
  %v2_17e74.off = add i32 %v2_17e74, 33554431
  %tmp110 = icmp ult i32 %v2_17e74.off, 16777216
  br i1 %tmp110, label %dec_label_pc_17fac, label %bb80

bb80:                                             ; preds = %bb79
  %v3_17e78.off = add i32 %v3_17e78, 33554431
  %tmp111 = icmp ult i32 %v3_17e78.off, 16777216
  br i1 %tmp111, label %dec_label_pc_17fac, label %dec_label_pc_17e8c

dec_label_pc_17e8c:                               ; preds = %bb80
  %tmp = udiv i32 %arg1, 8388608
  %v3_17e8c = urem i32 %tmp, 256
  store i32 %v3_17e8c, i32* %r2.global-to-local, align 4
  %tmp106 = udiv i32 %arg2, 8388608
  %v4_17e90 = urem i32 %tmp106, 256
  %v5_17e90 = sub nsw i32 %v4_17e90, %v3_17e8c
  store i32 %v5_17e90, i32* %r3.global-to-local, align 4
  %v7_17e94 = icmp ugt i32 %v4_17e90, %v3_17e8c
  br i1 %v7_17e94, label %bb81, label %.thread11

bb81:                                             ; preds = %dec_label_pc_17e8c
  store i32 %v4_17e90, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v1_17e68, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_17e8c, %bb81
  %v5_17ea4 = icmp ult i32 %v4_17e90, %v3_17e8c
  br i1 %v5_17ea4, label %bb82, label %bb83

bb82:                                             ; preds = %.thread11
  %v7_17ea4 = sub nsw i32 0, %v5_17e90
  store i32 %v7_17ea4, i32* %r3.global-to-local, align 4
  br label %bb83

bb83:                                             ; preds = %.thread11, %bb82
  %v0_17ea8 = phi i32 [ %v5_17e90, %.thread11 ], [ %v7_17ea4, %bb82 ]
  %v0_17eac = load i32, i32* @lr, align 4
  %tmp112 = icmp ugt i32 %v0_17ea8, 25
  call void @__pseudo_cond_branch(i1 %tmp112, i32 %v0_17eac)
  %v0_17eb0 = load i32, i32* %r0.global-to-local, align 4
  %v3_17eb0 = icmp sgt i32 %v0_17eb0, -1
  %v1_17eb4 = urem i32 %v0_17eb0, 8388608
  %v1_17eb8 = or i32 %v1_17eb4, 8388608
  %v2_17ebc = sub nsw i32 0, %v1_17eb8
  %v1_17eb8.v2_17ebc = select i1 %v3_17eb0, i32 %v1_17eb8, i32 %v2_17ebc
  store i32 %v1_17eb8.v2_17ebc, i32* %r0.global-to-local, align 4
  %v0_17ec0 = load i32, i32* %r1.global-to-local, align 4
  %v3_17ec0 = icmp sgt i32 %v0_17ec0, -1
  %v1_17ec4 = urem i32 %v0_17ec0, 8388608
  %v1_17ec8 = or i32 %v1_17ec4, 8388608
  %v2_17ecc = sub nsw i32 0, %v1_17ec8
  %storemerge1 = select i1 %v3_17ec0, i32 %v1_17ec8, i32 %v2_17ecc
  store i32 %storemerge1, i32* %r1.global-to-local, align 4
  %v0_17ed0 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ed0 = load i32, i32* %r3.global-to-local, align 4
  %v4_17ed0 = icmp eq i32 %v1_17ed0, %v0_17ed0
  br i1 %v4_17ed0, label %dec_label_pc_17f94, label %dec_label_pc_17ed8

dec_label_pc_17ed8:                               ; preds = %.thread16, %.thread17, %bb83
  %v0_17ee0 = phi i32 [ %v2_17fa4, %.thread17 ], [ %v1_17ed0, %.thread16 ], [ %v1_17ed0, %bb83 ]
  %v0_17ee4 = phi i32 [ %v1_17f98, %.thread17 ], [ %v1_17f98, %.thread16 ], [ %storemerge1, %bb83 ]
  %v0_17edc = phi i32 [ %v1_17eb8.v2_17ebc, %.thread17 ], [ %v2_17f9c, %.thread16 ], [ %v1_17eb8.v2_17ebc, %bb83 ]
  %v0_17ed8 = phi i32 [ %v0_17ed0, %.thread17 ], [ 1, %.thread16 ], [ %v0_17ed0, %bb83 ]
  %v1_17ed8 = add i32 %v0_17ed8, -1
  store i32 %v1_17ed8, i32* %r2.global-to-local, align 4
  %v7_17edc = ashr i32 %v0_17ee4, %v0_17ee0
  %v8_17edc = add i32 %v7_17edc, %v0_17edc
  store i32 %v8_17edc, i32* %r0.global-to-local, align 4
  %v14_17edc = icmp slt i32 %v8_17edc, 0
  %v1_17ee0 = sub i32 32, %v0_17ee0
  %v6_17ee4 = shl i32 %v0_17ee4, %v1_17ee0
  store i32 %v6_17ee4, i32* %r1.global-to-local, align 4
  %v1_17ee8 = and i32 %v8_17edc, -2147483648
  store i32 %v1_17ee8, i32* %r3.global-to-local, align 4
  br i1 %v14_17edc, label %dec_label_pc_17ef0, label %dec_label_pc_17ef8

dec_label_pc_17ef0:                               ; preds = %dec_label_pc_17ed8
  %v1_17ef0 = sub i32 0, %v6_17ee4
  store i32 %v1_17ef0, i32* %r1.global-to-local, align 4
  %v2_17ef0 = icmp eq i32 %v6_17ee4, 0
  %v2_17ef4 = icmp eq i1 %v2_17ef0, false
  %v5_17ef4 = sext i1 %v2_17ef4 to i32
  %v6_17ef4 = sub i32 %v5_17ef4, %v8_17edc
  store i32 %v6_17ef4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ef8

dec_label_pc_17ef8:                               ; preds = %dec_label_pc_17ed8, %dec_label_pc_17ef0
  %v0_17f30 = phi i32 [ %v6_17ee4, %dec_label_pc_17ed8 ], [ %v1_17ef0, %dec_label_pc_17ef0 ]
  %v0_17f34 = phi i32 [ %v8_17edc, %dec_label_pc_17ed8 ], [ %v6_17ef4, %dec_label_pc_17ef0 ]
  %v3_17efc = icmp ult i32 %v0_17f34, 8388606
  br i1 %v3_17efc, label %dec_label_pc_17f30, label %dec_label_pc_17f00

dec_label_pc_17f00:                               ; preds = %dec_label_pc_17ef8
  %v3_17f04 = icmp ult i32 %v0_17f34, 16777214
  br i1 %v3_17f04, label %dec_label_pc_17f1c, label %dec_label_pc_17f08

dec_label_pc_17f08:                               ; preds = %dec_label_pc_17f00
  %v1_17f08 = urem i32 %v0_17f34, 2
  %v2_17f08 = icmp ne i32 %v1_17f08, 0
  %v3_17f08 = udiv i32 %v0_17f34, 2
  store i32 %v3_17f08, i32* %r0.global-to-local, align 4
  %v3_17f0c = zext i1 %v2_17f08 to i32
  %v6_17f0c = zext i32 %v0_17f30 to i64
  %v7_17f0c = sub i32 33, %v0_17f30
  %v8_17f0c = zext i32 %v7_17f0c to i64
  %v9_17f0c = shl i64 %v6_17f0c, %v8_17f0c
  %v10_17f0c = sub i32 32, %v0_17f30
  %v11_17f0c = shl i32 %v3_17f0c, %v10_17f0c
  %v12_17f0c = zext i32 %v11_17f0c to i64
  %v14_17f0c = or i64 %v12_17f0c, %v9_17f0c
  %v15_17f0c = trunc i64 %v14_17f0c to i32
  store i32 %v15_17f0c, i32* %r1.global-to-local, align 4
  store i32 %v0_17ed8, i32* %r2.global-to-local, align 4
  %v2_17f14 = icmp ugt i32 %v0_17ed8, 253
  br i1 %v2_17f14, label %dec_label_pc_18000, label %dec_label_pc_17f1c

dec_label_pc_17f1c:                               ; preds = %dec_label_pc_17f30, %dec_label_pc_17f08, %dec_label_pc_17f00
  %v1_17f20 = phi i32 [ %v1_17f3c, %dec_label_pc_17f30 ], [ %v0_17ed8, %dec_label_pc_17f08 ], [ %v1_17ed8, %dec_label_pc_17f00 ]
  %v0_17f20 = phi i32 [ %v5_17f34, %dec_label_pc_17f30 ], [ %v3_17f08, %dec_label_pc_17f08 ], [ %v0_17f34, %dec_label_pc_17f00 ]
  %v2_17f20 = and i32 %v1_17f20, 512
  %v3_17f20 = icmp ne i32 %v2_17f20, 0
  %v4_17f20 = mul i32 %v1_17f20, 8388608
  %v6_17f20 = add i32 %v4_17f20, %v0_17f20
  %v7_17f20 = zext i1 %v3_17f20 to i32
  %v8_17f20 = add i32 %v7_17f20, %v6_17f20
  %v22_17f20 = icmp eq i32 %v8_17f20, 0
  br i1 %v22_17f20, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_17f1c
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_17f1c, %bb84
  %v0_17f28 = phi i32 [ 0, %bb84 ], [ %v8_17f20, %dec_label_pc_17f1c ]
  %v2_17f28 = or i32 %v0_17f28, %v1_17ee8
  store i32 %v2_17f28, i32* %r0.global-to-local, align 4
  ret i32 %v2_17f28

dec_label_pc_17f30:                               ; preds = %dec_label_pc_17ef8
  %v1_17f30 = icmp slt i32 %v0_17f30, 0
  %v2_17f30 = mul i32 %v0_17f30, 2
  store i32 %v2_17f30, i32* %r1.global-to-local, align 4
  %v3_17f34 = mul i32 %v0_17f34, 2
  %v4_17f34 = zext i1 %v1_17f30 to i32
  %v5_17f34 = or i32 %v4_17f34, %v3_17f34
  store i32 %v5_17f34, i32* %r0.global-to-local, align 4
  %v1_17f38 = and i32 %v3_17f34, 8388608
  %v2_17f38 = icmp eq i32 %v1_17f38, 0
  %v1_17f3c = add i32 %v0_17ed8, -2
  store i32 %v1_17f3c, i32* %r2.global-to-local, align 4
  br i1 %v2_17f38, label %dec_label_pc_17f44, label %dec_label_pc_17f1c

dec_label_pc_17f44:                               ; preds = %dec_label_pc_17f30
  %tmp86 = udiv i32 %v0_17f34, 2048
  %v3_17f44 = urem i32 %tmp86, 1048576
  %v4_17f44 = icmp eq i32 %v3_17f44, 0
  br i1 %v4_17f44, label %bb87, label %.thread12

bb87:                                             ; preds = %dec_label_pc_17f44
  %v4_17f48 = mul i32 %v5_17f34, 4096
  store i32 %v4_17f48, i32* %r0.global-to-local, align 4
  %v2_17f4c = add i32 %v0_17ed8, -14
  store i32 %v2_17f4c, i32* %r2.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_17f44, %bb87
  %v1_17f58 = phi i32 [ %v1_17f3c, %dec_label_pc_17f44 ], [ %v2_17f4c, %bb87 ]
  %v1_17f54 = phi i32 [ %v5_17f34, %dec_label_pc_17f44 ], [ %v4_17f48, %bb87 ]
  %v1_17f50 = and i32 %v1_17f54, 16711680
  %v2_17f50 = icmp eq i32 %v1_17f50, 0
  br i1 %v2_17f50, label %bb88, label %.thread13

bb88:                                             ; preds = %.thread12
  %v4_17f54 = mul i32 %v1_17f54, 256
  store i32 %v4_17f54, i32* %r0.global-to-local, align 4
  %v2_17f58 = add i32 %v1_17f58, -8
  store i32 %v2_17f58, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread12, %bb88
  %v1_17f64 = phi i32 [ %v1_17f58, %.thread12 ], [ %v2_17f58, %bb88 ]
  %v1_17f60 = phi i32 [ %v1_17f54, %.thread12 ], [ %v4_17f54, %bb88 ]
  %v1_17f5c = and i32 %v1_17f60, 15728640
  %v2_17f5c = icmp eq i32 %v1_17f5c, 0
  br i1 %v2_17f5c, label %bb89, label %.thread14

bb89:                                             ; preds = %.thread13
  %v4_17f60 = mul i32 %v1_17f60, 16
  store i32 %v4_17f60, i32* %r0.global-to-local, align 4
  %v2_17f64 = add i32 %v1_17f64, -4
  store i32 %v2_17f64, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %.thread13, %bb89
  %v1_17f70 = phi i32 [ %v1_17f64, %.thread13 ], [ %v2_17f64, %bb89 ]
  %v1_17f6c = phi i32 [ %v1_17f60, %.thread13 ], [ %v4_17f60, %bb89 ]
  %v1_17f68 = and i32 %v1_17f6c, 12582912
  %v2_17f68 = icmp eq i32 %v1_17f68, 0
  br i1 %v2_17f68, label %bb90, label %.thread15

bb90:                                             ; preds = %.thread14
  %v4_17f6c = mul i32 %v1_17f6c, 4
  store i32 %v4_17f6c, i32* %r0.global-to-local, align 4
  %v2_17f70 = add i32 %v1_17f70, -2
  store i32 %v2_17f70, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread14, %bb90
  %v0_17f7c = phi i32 [ %v1_17f70, %.thread14 ], [ %v2_17f70, %bb90 ]
  %v1_17f78 = phi i32 [ %v1_17f6c, %.thread14 ], [ %v4_17f6c, %bb90 ]
  %v2_17f74 = icmp ugt i32 %v1_17f78, 8388607
  br i1 %v2_17f74, label %bb92, label %bb91

bb91:                                             ; preds = %.thread15
  %v3_17f78 = mul i32 %v1_17f78, 2
  store i32 %v3_17f78, i32* %r0.global-to-local, align 4
  br label %bb92

bb92:                                             ; preds = %.thread15, %bb91
  %v3_17f80 = phi i32 [ %v1_17f78, %.thread15 ], [ %v3_17f78, %bb91 ]
  %v1_17f7c = phi i32 [ 0, %.thread15 ], [ 1, %bb91 ]
  %v4_17f7c = sub i32 %v0_17f7c, %v1_17f7c
  store i32 %v4_17f7c, i32* %r2.global-to-local, align 4
  %v7_17f7c107 = sub i32 %v1_17f7c, %v4_17f7c
  %v9_17f7c = and i32 %v7_17f7c107, %v0_17f7c
  %v10_17f7c = icmp slt i32 %v9_17f7c, 0
  %v11_17f7c = icmp slt i32 %v4_17f7c, 0
  %v2_17f80 = xor i1 %v11_17f7c, %v10_17f7c
  br i1 %v2_17f80, label %.thread75, label %bb93

.thread75:                                        ; preds = %bb92
  %v4_17f84 = sub i32 0, %v4_17f7c
  store i32 %v4_17f84, i32* %r2.global-to-local, align 4
  %v10_17f8c = lshr i32 %v3_17f80, %v4_17f84
  %v11_17f8c = or i32 %v10_17f8c, %v1_17ee8
  store i32 %v11_17f8c, i32* %r0.global-to-local, align 4
  br label %bb94

bb93:                                             ; preds = %bb92
  %v7_17f806672 = mul i32 %v4_17f7c, 8388608
  %v8_17f806773 = add i32 %v7_17f806672, %v3_17f80
  %v5_17f88 = or i32 %v8_17f806773, %v1_17ee8
  store i32 %v5_17f88, i32* %r0.global-to-local, align 4
  br label %bb94

bb94:                                             ; preds = %.thread24, %bb105, %bb99, %dec_label_pc_17fe4, %bb96, %dec_label_pc_17fc4, %bb93, %.thread75
  %v1_17f90 = phi i32 [ %v5_17f88, %bb93 ], [ %v11_17f8c, %.thread75 ], [ %v1_17e68, %dec_label_pc_17fc4 ], [ %arg2, %bb96 ], [ %v2_17fe4, %dec_label_pc_17fe4 ], [ %v2_17fe8, %bb99 ], [ %v1_18028, %bb105 ], [ %v2_18028, %.thread24 ]
  ret i32 %v1_17f90

dec_label_pc_17f94:                               ; preds = %bb83
  %v2_17f94 = icmp eq i32 %v0_17ed0, 0
  %v1_17f98 = xor i32 %storemerge1, 8388608
  store i32 %v1_17f98, i32* %r1.global-to-local, align 4
  br i1 %v2_17f94, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_17f94
  %v2_17f9c = xor i32 %v1_17eb8.v2_17ebc, 8388608
  store i32 %v2_17f9c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17ed8

.thread17:                                        ; preds = %dec_label_pc_17f94
  %v2_17fa4 = add i32 %v1_17ed0, -1
  store i32 %v2_17fa4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17ed8

dec_label_pc_17fac:                               ; preds = %dec_label_pc_17e68.dec_label_pc_17fac_crit_edge, %bb, %bb78, %bb79, %bb80
  %v2_17fac.pre-phi = phi i32 [ %.pre, %dec_label_pc_17e68.dec_label_pc_17fac_crit_edge ], [ 0, %bb ], [ %v3_17e78, %bb78 ], [ %v3_17e78, %bb79 ], [ %v3_17e78, %bb80 ]
  store i32 %v2_17fac.pre-phi, i32* %r3.global-to-local, align 4
  %v3_17fb0 = sdiv i32 %v2_17e74, 16777216
  %v4_17fb0 = sub nsw i32 -1, %v3_17fb0
  %v2_17e74.off108 = add i32 %v2_17e74, 33554431
  %tmp113 = icmp ult i32 %v2_17e74.off108, 16777216
  br i1 %tmp113, label %.thread21, label %bb95

bb95:                                             ; preds = %dec_label_pc_17fac
  %v2_17fac.pre-phi.off = add i32 %v2_17fac.pre-phi, 33554431
  %tmp114 = icmp ult i32 %v2_17fac.pre-phi.off, 16777216
  br i1 %tmp114, label %bb102, label %dec_label_pc_17fbc

dec_label_pc_17fbc:                               ; preds = %bb95
  %v4_17fbc = icmp eq i32 %v2_17fac.pre-phi, %v2_17e74
  br i1 %v4_17fbc, label %dec_label_pc_17fd0, label %dec_label_pc_17fc4

dec_label_pc_17fc4:                               ; preds = %dec_label_pc_17fbc
  br i1 %v4_17e74, label %bb96, label %bb94

bb96:                                             ; preds = %dec_label_pc_17fc4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  br label %bb94

dec_label_pc_17fd0:                               ; preds = %dec_label_pc_17fbc
  %v4_17fd0 = icmp eq i32 %v1_17e68, %arg2
  br i1 %v4_17fd0, label %bb98, label %bb97

bb97:                                             ; preds = %dec_label_pc_17fd0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb98

bb98:                                             ; preds = %dec_label_pc_17fd0, %bb97
  %v0_17fd8 = load i32, i32* @lr, align 4
  %v2_17fd8 = xor i1 %v4_17fd0, true
  call void @__pseudo_cond_branch(i1 %v2_17fd8, i32 %v0_17fd8)
  %v0_17fdc = load i32, i32* %r2.global-to-local, align 4
  %v3_17fdc = icmp ult i32 %v0_17fdc, 16777216
  br i1 %v3_17fdc, label %dec_label_pc_17fe4, label %dec_label_pc_17ff0

dec_label_pc_17fe4:                               ; preds = %bb98
  %v0_17fe4 = load i32, i32* %r0.global-to-local, align 4
  %v1_17fe4 = icmp slt i32 %v0_17fe4, 0
  %v2_17fe4 = mul i32 %v0_17fe4, 2
  store i32 %v2_17fe4, i32* %r0.global-to-local, align 4
  br i1 %v1_17fe4, label %bb99, label %bb94

bb99:                                             ; preds = %dec_label_pc_17fe4
  %v2_17fe8 = or i32 %v2_17fe4, -2147483648
  store i32 %v2_17fe8, i32* %r0.global-to-local, align 4
  br label %bb94

dec_label_pc_17ff0:                               ; preds = %bb98
  %v1_17ff0 = add i32 %v0_17fdc, 33554432
  store i32 %v1_17ff0, i32* %r2.global-to-local, align 4
  %v2_17ff0 = icmp ugt i32 %v0_17fdc, -33554433
  br i1 %v2_17ff0, label %bb101, label %bb100

bb100:                                            ; preds = %dec_label_pc_17ff0
  %v1_17ff4 = load i32, i32* %r0.global-to-local, align 4
  %v2_17ff4 = add i32 %v1_17ff4, 8388608
  store i32 %v2_17ff4, i32* %r0.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_17ff0, %bb100
  %v0_17ff8 = load i32, i32* @lr, align 4
  %v2_17ff8 = xor i1 %v2_17ff0, true
  call void @__pseudo_cond_branch(i1 %v2_17ff8, i32 %v0_17ff8)
  %v0_17ffc = load i32, i32* %r0.global-to-local, align 4
  %v1_17ffc = and i32 %v0_17ffc, -2147483648
  store i32 %v1_17ffc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18000

dec_label_pc_18000:                               ; preds = %dec_label_pc_17f08, %bb101
  %v0_18000 = phi i32 [ %v1_17ee8, %dec_label_pc_17f08 ], [ %v1_17ffc, %bb101 ]
  %v1_18004 = or i32 %v0_18000, 2139095040
  store i32 %v1_18004, i32* %r0.global-to-local, align 4
  ret i32 %v1_18004

bb102:                                            ; preds = %bb95
  store i32 %v4_17fb0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread21:                                        ; preds = %dec_label_pc_17fac
  store i32 %v4_17fb0, i32* %r2.global-to-local, align 4
  %v4_18014 = sdiv i32 %v2_17fac.pre-phi, 16777216
  %v5_18014 = sub nsw i32 -1, %v4_18014
  store i32 %v5_18014, i32* %r3.global-to-local, align 4
  %v2_17fac.pre-phi.off109 = add i32 %v2_17fac.pre-phi, 33554431
  %tmp115 = icmp ult i32 %v2_17fac.pre-phi.off109, 16777216
  br i1 %tmp115, label %bb103, label %.thread22

.thread22:                                        ; preds = %bb102, %.thread21
  %v1_18018 = phi i32 [ %arg2, %bb102 ], [ %v1_17e68, %.thread21 ]
  store i32 %v1_18018, i32* %r1.global-to-local, align 4
  br label %bb103

bb103:                                            ; preds = %.thread21, %.thread22
  %v2_18024 = phi i32 [ %arg2, %.thread21 ], [ %v1_18018, %.thread22 ]
  %v1_18028 = phi i32 [ %v1_17e68, %.thread21 ], [ %v1_18018, %.thread22 ]
  %v3_1801c = mul i32 %v1_18028, 512
  store i32 %v3_1801c, i32* %r2.global-to-local, align 4
  %v5_1801c = icmp eq i32 %v3_1801c, 0
  br i1 %v5_1801c, label %bb104, label %.thread24

bb104:                                            ; preds = %bb103
  %v4_18020 = mul i32 %v2_18024, 512
  store i32 %v4_18020, i32* %r3.global-to-local, align 4
  %v6_18020 = icmp eq i32 %v4_18020, 0
  br i1 %v6_18020, label %bb105, label %.thread24

bb105:                                            ; preds = %bb104
  %v5_18024 = icmp eq i32 %v1_18028, %v2_18024
  br i1 %v5_18024, label %bb94, label %.thread24

.thread24:                                        ; preds = %bb103, %bb104, %bb105
  %v2_18028 = or i32 %v1_18028, 4194304
  store i32 %v2_18028, i32* %r0.global-to-local, align 4
  br label %bb94

; uselistorder directives
  uselistorder i32 %v2_18028, { 1, 0 }
  uselistorder i32 %v4_18020, { 1, 0 }
  uselistorder i32 %v3_1801c, { 1, 0 }
  uselistorder i32 %v1_18028, { 3, 0, 1, 2 }
  uselistorder i32 %v1_18018, { 1, 0, 2 }
  uselistorder i32 %v2_17fe8, { 1, 0 }
  uselistorder i32 %v2_17fe4, { 1, 0, 2 }
  uselistorder i32 %v0_17fdc, { 2, 1, 0 }
  uselistorder i1 %v4_17fd0, { 1, 0 }
  uselistorder i32 %v4_17fb0, { 1, 0 }
  uselistorder i32 %v2_17fac.pre-phi, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v2_17fa4, { 1, 0 }
  uselistorder i32 %v2_17f9c, { 1, 0 }
  uselistorder i32 %v1_17f98, { 2, 1, 0 }
  uselistorder i32 %v4_17f7c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_17f7c, { 1, 0 }
  uselistorder i32 %v3_17f78, { 1, 0 }
  uselistorder i32 %v1_17f78, { 1, 0, 2 }
  uselistorder i32 %v4_17f6c, { 1, 0 }
  uselistorder i32 %v1_17f6c, { 1, 0, 2 }
  uselistorder i32 %v4_17f60, { 1, 0 }
  uselistorder i32 %v1_17f60, { 1, 0, 2 }
  uselistorder i32 %v4_17f54, { 1, 0 }
  uselistorder i32 %v1_17f54, { 1, 0, 2 }
  uselistorder i32 %v4_17f48, { 1, 0 }
  uselistorder i32 %v1_17f3c, { 0, 2, 1 }
  uselistorder i32 %v5_17f34, { 1, 0, 3, 2 }
  uselistorder i32 %v3_17f34, { 1, 0 }
  uselistorder i32 %v3_17f08, { 1, 0 }
  uselistorder i32 %v0_17f34, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v0_17f30, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_17ee8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_17ee4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17ed8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_17ed0, { 3, 1, 2, 0 }
  uselistorder i32 %v0_17ed0, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v1_17eb8.v2_17ebc, { 2, 1, 0, 3 }
  uselistorder i32 %v4_17e90, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17e78, { 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v2_17e74, { 0, 2, 4, 3, 1, 6, 5 }
  uselistorder i32 %v1_17e68, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 0, 18, 1, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 23, 4, 24, 5, 6, 25, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 26, 22, 27 }
  uselistorder i32 33554432, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 8388607, { 1, 0, 2 }
  uselistorder i32 4096, { 0, 7, 1, 2, 8, 12, 4, 5, 13, 9, 14, 3, 10, 15, 11, 6 }
  uselistorder i32 2048, { 0, 18, 19, 11, 17, 16, 8, 9, 1, 2, 3, 4, 10, 6, 12, 13, 14, 5, 7, 15, 20 }
  uselistorder i32 512, { 0, 1, 9, 8, 2, 3, 10, 4, 11, 5, 12, 6, 13, 7, 14 }
  uselistorder i32 253, { 4, 0, 1, 2, 3 }
  uselistorder i32 33, { 12, 6, 16, 1, 0, 2, 3, 4, 7, 13, 15, 5, 8, 14, 9, 17, 10, 18, 11, 19 }
  uselistorder i32 25, { 0, 19, 20, 3, 11, 4, 12, 5, 13, 6, 14, 10, 1, 7, 15, 2, 16, 8, 17, 9, 18, 21 }
  uselistorder i32 8388608, { 11, 12, 13, 5, 14, 0, 6, 1, 7, 2, 3, 4, 8, 15, 9, 10 }
  uselistorder i32 %arg2, { 5, 6, 7, 0, 8, 4, 9, 1, 2, 3, 10 }
  uselistorder label %.thread24, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_18000, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_17fac, { 4, 3, 2, 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %dec_label_pc_17ef8, { 1, 0 }
  uselistorder label %dec_label_pc_17ed8, { 1, 0, 2 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
}

define i32 @function_18030() local_unnamed_addr {
dec_label_pc_18030:
  store i32 0, i32* @r3, align 4
  %v0_18034 = call i32 @function_18040()
  ret i32 %v0_18034
}

define i32 @function_18038() local_unnamed_addr {
dec_label_pc_18038:
  %v0_18038 = load i32, i32* @r0, align 4
  %v2_18038 = icmp slt i32 %v0_18038, 0
  br i1 %v2_18038, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_18038
  %v2_1803c = sub i32 0, %v0_18038
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_18038, %bb
  %.0 = phi i32 [ %v2_1803c, %bb ], [ undef, %dec_label_pc_18038 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_18038, { 1, 0 }
  uselistorder i32 undef, { 4, 1, 2, 3, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_18040() local_unnamed_addr {
dec_label_pc_18040:
  %ip.global-to-local = alloca i32, align 4
  %v0_18040 = load i32, i32* @r0, align 4
  store i32 %v0_18040, i32* %ip.global-to-local, align 4
  %v2_18040 = icmp eq i32 %v0_18040, 0
  %v0_18044 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_18040, i32 %v0_18044)
  %v0_18048 = load i32, i32* @r3, align 4
  %v1_18048 = or i32 %v0_18048, 1258291200
  %v0_1804c = load i32, i32* @r0, align 4
  %v1_18098 = add i32 %v1_18048, -8388608
  %v0_180a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_180a0 = icmp ugt i32 %v0_180a0, 65535
  br i1 %v2_180a0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18040
  %v2_180a4 = and i32 %v0_180a0, 32768
  %v3_180a4 = icmp eq i32 %v2_180a4, 0
  %v4_180a4 = udiv i32 %v0_180a0, 65536
  store i32 %v4_180a4, i32* %ip.global-to-local, align 4
  br i1 %v3_180a4, label %.thread, label %bb14

bb14:                                             ; preds = %bb
  br label %.thread

.thread:                                          ; preds = %bb, %dec_label_pc_18040, %bb14
  %v1_180b0 = phi i32 [ %v0_180a0, %dec_label_pc_18040 ], [ %v4_180a4, %bb ], [ %v4_180a4, %bb14 ]
  %v1_180b4 = phi i32 [ 23, %dec_label_pc_18040 ], [ 23, %bb ], [ 7, %bb14 ]
  %v2_180ac = icmp ugt i32 %v1_180b0, 255
  br i1 %v2_180ac, label %bb15, label %.thread1

bb15:                                             ; preds = %.thread
  %v2_180b0 = and i32 %v1_180b0, 128
  %v3_180b0 = icmp eq i32 %v2_180b0, 0
  %v4_180b0 = udiv i32 %v1_180b0, 256
  store i32 %v4_180b0, i32* %ip.global-to-local, align 4
  br i1 %v3_180b0, label %.thread1, label %bb16

bb16:                                             ; preds = %bb15
  %v2_180b4 = add nsw i32 %v1_180b4, -8
  br label %.thread1

.thread1:                                         ; preds = %bb15, %.thread, %bb16
  %v1_180c0 = phi i32 [ %v1_180b4, %.thread ], [ %v1_180b4, %bb15 ], [ %v2_180b4, %bb16 ]
  %v1_180bc = phi i32 [ %v1_180b0, %.thread ], [ %v4_180b0, %bb15 ], [ %v4_180b0, %bb16 ]
  %v2_180b8 = icmp ugt i32 %v1_180bc, 15
  br i1 %v2_180b8, label %bb17, label %.thread2

bb17:                                             ; preds = %.thread1
  %v2_180bc = and i32 %v1_180bc, 8
  %v3_180bc = icmp eq i32 %v2_180bc, 0
  %v4_180bc = udiv i32 %v1_180bc, 16
  store i32 %v4_180bc, i32* %ip.global-to-local, align 4
  br i1 %v3_180bc, label %.thread2, label %bb18

bb18:                                             ; preds = %bb17
  %v2_180c0 = add nsw i32 %v1_180c0, -4
  br label %.thread2

.thread2:                                         ; preds = %bb17, %.thread1, %bb18
  %v1_180c8 = phi i32 [ %v1_180c0, %.thread1 ], [ %v1_180c0, %bb17 ], [ %v2_180c0, %bb18 ]
  %v1_180d0 = phi i32 [ %v1_180bc, %.thread1 ], [ %v4_180bc, %bb17 ], [ %v4_180bc, %bb18 ]
  %v2_180c4 = icmp ugt i32 %v1_180d0, 3
  br i1 %v2_180c4, label %bb19, label %.thread3

bb19:                                             ; preds = %.thread2
  %v2_180c8 = add nsw i32 %v1_180c8, -2
  br label %bb20

.thread3:                                         ; preds = %.thread2
  %v5_180cc = udiv i32 %v1_180d0, 2
  %v6_180cc = sub i32 %v1_180c8, %v5_180cc
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread3
  %v0_180d0 = phi i32 [ %v6_180cc, %.thread3 ], [ %v2_180c8, %bb19 ]
  %v4_180d0 = udiv i32 %v1_180d0, 8
  %v5_180d0 = sub i32 %v0_180d0, %v4_180d0
  %tmp = mul i32 %v5_180d0, -8388608
  %v5_180d4 = add i32 %v1_18098, %tmp
  %v5_180d8 = icmp slt i32 %v0_180d0, %v4_180d0
  br i1 %v5_180d8, label %dec_label_pc_180f8, label %dec_label_pc_180dc

dec_label_pc_180dc:                               ; preds = %bb20
  %v7_180dc = shl i32 %v0_1804c, %v5_180d0
  %v8_180dc = add i32 %v5_180d4, %v7_180dc
  store i32 0, i32* %ip.global-to-local, align 4
  %v25_180ec = icmp eq i32 %v8_180dc, 0
  br i1 %v25_180ec, label %bb21, label %bb22

bb21:                                             ; preds = %dec_label_pc_180dc
  br label %bb22

bb22:                                             ; preds = %bb23, %dec_label_pc_180f8, %dec_label_pc_180dc, %bb21
  %v1_180f4 = phi i32 [ %v8_180dc, %dec_label_pc_180dc ], [ 0, %bb21 ], [ %v11_18108, %dec_label_pc_180f8 ], [ 0, %bb23 ]
  ret i32 %v1_180f4

dec_label_pc_180f8:                               ; preds = %bb20
  %v1_180f8 = add i32 %v5_180d0, 32
  %v6_180fc = shl i32 %v0_1804c, %v1_180f8
  store i32 %v6_180fc, i32* %ip.global-to-local, align 4
  %v1_18100 = sub i32 0, %v5_180d0
  %v3_18108 = sub i32 -1, %v5_180d0
  %v4_18108 = shl i32 1, %v3_18108
  %v5_18108 = and i32 %v4_18108, %v0_1804c
  %v6_18108 = icmp ne i32 %v5_18108, 0
  %v7_18108 = lshr i32 %v0_1804c, %v1_18100
  %v9_18108 = add i32 %v5_180d4, %v7_18108
  %v10_18108 = zext i1 %v6_18108 to i32
  %v11_18108 = add i32 %v10_18108, %v9_18108
  %v25_18108 = icmp eq i32 %v11_18108, 0
  br i1 %v25_18108, label %bb23, label %bb22

bb23:                                             ; preds = %dec_label_pc_180f8
  br label %bb22

; uselistorder directives
  uselistorder i32 %v11_18108, { 1, 0 }
  uselistorder i32 %v5_180d4, { 1, 0 }
  uselistorder i32 %v5_180d0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_180d0, { 1, 0 }
  uselistorder i32 %v0_180d0, { 1, 0 }
  uselistorder i32 %v4_180bc, { 2, 1, 0 }
  uselistorder i32 %v1_180bc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_180b0, { 2, 1, 0 }
  uselistorder i32 %v1_180b0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_180a4, { 2, 1, 0 }
  uselistorder i32 %v0_180a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1804c, { 1, 0, 2, 3 }
  uselistorder i32 3, { 73, 0, 26, 129, 40, 141, 130, 131, 132, 2, 133, 74, 75, 76, 77, 78, 79, 72, 134, 5, 135, 136, 142, 137, 80, 138, 81, 41, 86, 27, 87, 28, 88, 3, 89, 90, 91, 42, 6, 118, 43, 119, 44, 120, 45, 121, 46, 122, 47, 123, 48, 124, 29, 125, 49, 126, 50, 127, 51, 92, 93, 52, 94, 53, 30, 97, 54, 55, 56, 57, 1, 95, 96, 58, 8, 7, 59, 98, 31, 99, 10, 9, 60, 32, 100, 12, 11, 61, 101, 33, 102, 14, 13, 62, 103, 34, 104, 16, 15, 63, 105, 35, 106, 65, 107, 18, 17, 64, 108, 36, 109, 67, 110, 20, 19, 66, 111, 37, 112, 22, 21, 68, 113, 38, 114, 24, 23, 69, 115, 39, 116, 25, 117, 4, 128, 139, 82, 83, 84, 85, 70, 140, 71 }
  uselistorder i32 -4, { 6, 5, 23, 0, 21, 24, 25, 26, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 2, 22, 16, 3, 27, 18, 19, 20, 4, 17 }
  uselistorder i32 15, { 12, 21, 0, 13, 14, 4, 15, 20, 5, 6, 7, 8, 9, 10, 1, 16, 11, 17, 2, 18, 3, 19 }
  uselistorder i32 -8, { 13, 12, 22, 14, 15, 16, 17, 18, 11, 19, 20, 21, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 36, 41, 42, 43, 40, 44, 111, 45, 120, 121, 46, 47, 48, 122, 49, 50, 51, 52, 53, 54, 112, 123, 113, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 114, 116, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 115, 117, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 118, 92, 93, 94, 95, 96, 119, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 124, 110, 125 }
  uselistorder i32 128, { 19, 8, 18, 17, 20, 16, 15, 14, 13, 12, 25, 0, 26, 22, 21, 9, 10, 23, 24, 11, 2, 3, 4, 5, 6, 7, 27, 1, 28 }
  uselistorder i32 7, { 2, 1, 0, 34, 35, 36, 7, 38, 39, 18, 40, 19, 41, 5, 20, 53, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 8, 43, 9, 10, 44, 11, 45, 31, 46, 12, 47, 13, 48, 14, 49, 15, 50, 16, 51, 6, 52, 3, 32, 54, 4, 33, 55, 56, 37, 17, 57 }
  uselistorder i32 23, { 1, 2, 0, 12, 13, 18, 22, 4, 14, 6, 15, 7, 16, 8, 17, 5, 19, 3, 20, 9, 21, 10, 11 }
  uselistorder label %bb22, { 0, 1, 3, 2 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %.thread1, { 2, 0, 1 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_18114(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18114:
  %v0_1811c = call i32 @function_18130()
  ret i32 %v0_1811c
}

define i32 @function_18130() local_unnamed_addr {
dec_label_pc_18130:
  %sl.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_18130 = load i32, i32* @r4, align 4
  store i32 %v3_18130, i32* %stack_var_-32, align 4
  %v12_18130 = load i32, i32* @r7, align 4
  %v21_18130 = load i32, i32* @sl, align 4
  %v0_18134 = load i32, i32* @r2, align 4
  store i32 %v0_18134, i32* @r7, align 4
  %v0_18138 = load i32, i32* @r3, align 4
  store i32 %v0_18138, i32* @r8, align 4
  %v0_1813c = load i32, i32* @r0, align 4
  store i32 %v0_1813c, i32* @sb, align 4
  %v0_18140 = load i32, i32* @r1, align 4
  store i32 %v0_18140, i32* @sl, align 4
  %v0_18144 = call i32 @function_18760()
  %v1_18144 = sext i32 %v0_18144 to i64
  %v2_18148 = load i32, i32* @r8, align 4
  %v3_18148 = mul i32 %v2_18148, %v0_18144
  store i32 %v3_18148, i32* @ip, align 4
  %v3_1814c = load i32, i32* @r7, align 4
  %v4_1814c = zext i32 %v3_1814c to i64
  %v5_1814c = mul nuw nsw i64 %v4_1814c, %v1_18144
  %v6_1814c = udiv i64 %v5_1814c, 4294967296
  %v7_1814c = trunc i64 %v6_1814c to i32
  %v8_1814c = trunc i64 %v5_1814c to i32
  %v1_18150 = load i32, i32* @r1, align 4
  %v3_18150 = mul i32 %v1_18150, %v3_1814c
  %v4_18150 = add i32 %v3_18150, %v3_18148
  %v2_18154 = add i32 %v4_18150, %v7_1814c
  %v0_1815c = load i32, i32* @sb, align 4
  %v2_1815c = sub i32 %v0_1815c, %v8_1814c
  %v3_1815c = icmp uge i32 %v0_1815c, %v8_1814c
  %v0_18160 = load i32, i32* @sl, align 4
  %v3_18160 = icmp eq i1 %v3_1815c, false
  %v4_18160 = sub i32 %v0_18160, %v2_18154
  %v6_18160 = sext i1 %v3_18160 to i32
  %v7_18160 = add i32 %v6_18160, %v4_18160
  store i32 %v7_18160, i32* %sl.global-to-local, align 4
  %v1_1816c = inttoptr i32 %tmp7 to i32*
  store i32 %v2_1815c, i32* %v1_1816c, align 4
  %v3_1816c = add i32 %tmp7, 4
  %v4_1816c = inttoptr i32 %v3_1816c to i32*
  %v5_1816c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v5_1816c, i32* %v4_1816c, align 4
  %v2_18170 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_18170, i32* @r4, align 4
  store i32 %v12_18130, i32* @r7, align 4
  store i32 %v21_18130, i32* @sl, align 4
  ret i32 %v0_18144

; uselistorder directives
  uselistorder i32 %v8_1814c, { 1, 0 }
  uselistorder i64 %v5_1814c, { 1, 0 }
  uselistorder i32 %v0_18144, { 1, 0, 2 }
  uselistorder i32 %tmp7, { 1, 0 }
}

define i32 @function_18178(i32 %arg1, i32 %arg2, i64 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_18178:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r3, align 4
  %tmp = trunc i64 %arg3 to i32
  store i32 %tmp, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v21_18178 = load i32, i32* @sl, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg2, i32* @sl, align 4
  %v0_1818c = call i32 @function_181c0()
  %v1_18190 = load i32, i32* @r8, align 4
  %v2_18190 = mul i32 %v1_18190, %v0_1818c
  %v1_18194 = zext i32 %v0_1818c to i64
  %v2_18194 = load i32, i32* @r7, align 4
  %v3_18194 = zext i32 %v2_18194 to i64
  %v4_18194 = mul nuw i64 %v3_18194, %v1_18194
  %v5_18194 = udiv i64 %v4_18194, 4294967296
  %v6_18194 = trunc i64 %v5_18194 to i32
  %v7_18194 = trunc i64 %v4_18194 to i32
  %v3_18198 = mul i32 %v2_18194, %arg2
  %v4_18198 = add i32 %v3_18198, %v2_18190
  %v2_1819c = add i32 %v4_18198, %v6_18194
  %v0_181a4 = load i32, i32* @sb, align 4
  %v2_181a4 = sub i32 %v0_181a4, %v7_18194
  %v3_181a4 = icmp uge i32 %v0_181a4, %v7_18194
  %v0_181a8 = load i32, i32* @sl, align 4
  %v3_181a8 = icmp eq i1 %v3_181a4, false
  %v4_181a8 = sub i32 %v0_181a8, %v2_1819c
  %v6_181a8 = sext i1 %v3_181a8 to i32
  %v7_181a8 = add i32 %v6_181a8, %v4_181a8
  store i32 %v7_181a8, i32* %sl.global-to-local, align 4
  %v1_181b4 = inttoptr i32 %arg5 to i32*
  store i32 %v2_181a4, i32* %v1_181b4, align 4
  %v3_181b4 = add i32 %arg5, 4
  %v4_181b4 = inttoptr i32 %v3_181b4 to i32*
  %v5_181b4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v5_181b4, i32* %v4_181b4, align 4
  store i32 %v21_18178, i32* %sl.global-to-local, align 4
  ret i32 %v0_1818c

; uselistorder directives
  uselistorder i32 %v7_18194, { 1, 0 }
  uselistorder i64 %v4_18194, { 1, 0 }
  uselistorder i32 %v0_1818c, { 1, 2, 0 }
  uselistorder i32* @sb, { 6, 7, 110, 111, 8, 9, 112, 113, 115, 114, 117, 116, 118, 119, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 10, 120, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 143, 144, 145, 146, 147, 137, 138, 1, 139, 2, 140, 141, 0, 142, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 129, 130, 131, 132, 23, 24, 25, 26, 27, 28, 29, 21, 22, 3, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 4, 63, 80, 81, 82, 83, 84, 85, 86, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 133, 134, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 5, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180 }
  uselistorder i32* @r8, { 18, 19, 150, 151, 250, 251, 252, 44, 0, 45, 46, 176, 177, 178, 179, 152, 153, 155, 154, 157, 156, 158, 159, 20, 180, 181, 182, 183, 184, 185, 253, 254, 255, 1, 256, 257, 258, 2, 259, 260, 21, 160, 161, 162, 163, 4, 164, 165, 166, 186, 187, 188, 189, 5, 212, 213, 214, 215, 216, 217, 218, 6, 16, 225, 190, 191, 192, 193, 194, 195, 196, 197, 206, 207, 7, 208, 209, 8, 210, 211, 198, 199, 200, 9, 201, 202, 203, 204, 205, 219, 10, 220, 221, 222, 223, 224, 261, 262, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 32, 167, 168, 169, 170, 56, 57, 11, 58, 59, 60, 61, 17, 62, 76, 77, 78, 82, 79, 80, 81, 83, 84, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 63, 64, 15, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 12, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 13, 137, 138, 139, 140, 141, 3, 142, 143, 144, 145, 147, 146, 148, 149, 171, 172, 173, 174, 175, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 14, 245, 246, 247, 248, 249 }
  uselistorder i32* @sl, { 11, 12, 13, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 2, 157, 158, 159, 160, 161, 162, 3, 163, 164, 181, 182, 268, 269, 270, 271, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 5, 196, 197, 0, 4, 204, 205, 206, 184, 185, 6, 192, 193, 194, 195, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 203, 272, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 28, 22, 174, 175, 176, 177, 36, 7, 1, 37, 38, 39, 30, 31, 32, 33, 34, 35, 8, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 9, 140, 141, 142, 178, 179, 180, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 258, 10, 261, 262, 263, 264, 265, 266, 267 }
  uselistorder i32 %arg5, { 1, 0 }
}

define i32 @function_181c0() local_unnamed_addr {
dec_label_pc_181c0:
  %fp.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v12_181c0 = load i32, i32* @r7, align 4
  %v27_181c0 = load i32, i32* @lr, align 4
  store i32 44584, i32* %r8.global-to-local, align 4
  %v0_181cc = load i32, i32* @r1, align 4
  %v1_181cc = icmp slt i32 %v0_181cc, 0
  br i1 %v1_181cc, label %dec_label_pc_18554, label %dec_label_pc_181f4

dec_label_pc_181f4:                               ; preds = %dec_label_pc_181c0
  store i32 0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_23010.696 to i32), i32* %r8.global-to-local, align 4
  %v0_181e4 = load i32, i32* @r2, align 4
  store i32 %v0_181e4, i32* @r4, align 4
  %v0_181e8 = load i32, i32* @r3, align 4
  %v1_181f4 = icmp slt i32 %v0_181e8, 0
  br i1 %v1_181f4, label %dec_label_pc_1856c, label %dec_label_pc_181fc

dec_label_pc_181fc:                               ; preds = %dec_label_pc_18554, %dec_label_pc_181f4, %dec_label_pc_1856c
  %v0_181e890 = phi i32 [ %v0_181e889, %dec_label_pc_1856c ], [ %v0_181e885, %dec_label_pc_18554 ], [ %v0_181e8, %dec_label_pc_181f4 ]
  %v1_1853c = phi i32 [ %v6_18570, %dec_label_pc_1856c ], [ %v0_181e885, %dec_label_pc_18554 ], [ %v0_181e8, %dec_label_pc_181f4 ]
  %v0_1824460 = phi i32 [ %stack_var_-56.2, %dec_label_pc_1856c ], [ -1, %dec_label_pc_18554 ], [ 0, %dec_label_pc_181f4 ]
  %v0_18350 = phi i32 [ %v1_1856c, %dec_label_pc_1856c ], [ %v0_181e484, %dec_label_pc_18554 ], [ %v0_181e4, %dec_label_pc_181f4 ]
  %v1_18248 = phi i32 [ %v0_1820028, %dec_label_pc_1856c ], [ %v6_18558, %dec_label_pc_18554 ], [ %v0_181cc, %dec_label_pc_181f4 ]
  %stack_var_-56.1 = phi i32 [ %v1_18578, %dec_label_pc_1856c ], [ -1, %dec_label_pc_18554 ], [ 0, %dec_label_pc_181f4 ]
  %v2_181fc = icmp eq i32 %v1_1853c, 0
  store i32 %v1_18248, i32* @r7, align 4
  store i32 %v0_18350, i32* %r6.global-to-local, align 4
  %v0_18208 = load i32, i32* @r0, align 4
  store i32 %v0_18208, i32* %sb.global-to-local, align 4
  br i1 %v2_181fc, label %dec_label_pc_18210, label %dec_label_pc_18308

dec_label_pc_18210:                               ; preds = %dec_label_pc_181fc
  %tmp = icmp ugt i32 %v0_18350, %v1_18248
  br i1 %tmp, label %dec_label_pc_18218, label %dec_label_pc_18348

dec_label_pc_18218:                               ; preds = %dec_label_pc_18210
  %v2_18218 = icmp ugt i32 %v0_18350, 65535
  br i1 %v2_18218, label %dec_label_pc_186f8, label %dec_label_pc_18220

dec_label_pc_18220:                               ; preds = %dec_label_pc_18218
  %v2_18220 = icmp ugt i32 %v0_18350, 254
  %v7_18220 = icmp eq i32 %v0_18350, 255
  %v2_18224 = xor i1 %v7_18220, true
  %v3_18224 = and i1 %v2_18220, %v2_18224
  br i1 %v3_18224, label %bb, label %bb123

bb:                                               ; preds = %dec_label_pc_18220
  br label %bb123

bb123:                                            ; preds = %dec_label_pc_18220, %bb
  %v0_1824458 = phi i32 [ %v0_1824460, %dec_label_pc_18220 ], [ 24, %bb ]
  %v2_18228 = xor i1 %v2_18220, true
  %v3_18228 = or i1 %v7_18220, %v2_18228
  br i1 %v3_18228, label %bb124, label %.thread94

bb124:                                            ; preds = %bb123
  br label %.thread94

.thread94:                                        ; preds = %bb123, %bb124
  %v0_182445792 = phi i32 [ 32, %bb124 ], [ %v0_1824458, %bb123 ]
  %v1_1823453 = phi i32 [ 0, %bb124 ], [ %v0_181e890, %bb123 ]
  br i1 %v3_18224, label %bb125, label %bb126

bb125:                                            ; preds = %.thread94
  br label %bb126

bb126:                                            ; preds = %bb186, %bb185, %.thread94, %bb125
  %v0_18244 = phi i32 [ 16, %bb186 ], [ %v0_1824459, %bb185 ], [ %v0_182445792, %.thread94 ], [ %v0_182445792, %bb125 ]
  %v1_18234 = phi i32 [ %v1_1823454, %bb186 ], [ %v1_1823454, %bb185 ], [ %v1_1823453, %.thread94 ], [ 8, %bb125 ]
  %v6_18234 = lshr i32 %v0_18350, %v1_18234
  %v4_1823c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_18240 = add i32 %v4_1823c, %v6_18234
  %v3_18240 = inttoptr i32 %v2_18240 to i8*
  %v4_18240 = load i8, i8* %v3_18240, align 1
  %v6_18240 = zext i8 %v4_18240 to i32
  %v2_18244 = sub nsw i32 %v0_18244, %v6_18240
  %v9_18244 = icmp eq i32 %v0_18244, %v6_18240
  br i1 %v9_18244, label %.thread2.thread20, label %bb128

.thread2.thread20:                                ; preds = %bb126
  %v3_1825824 = udiv i32 %v0_18350, 65536
  store i32 %v3_1825824, i32* %r8.global-to-local, align 4
  br label %bb129

bb128:                                            ; preds = %bb126
  %v7_18248 = shl i32 %v1_18248, %v2_18244
  %v2_1824c = sub i32 32, %v2_18244
  %v7_18250 = shl i32 %v0_18350, %v2_18244
  store i32 %v7_18250, i32* %r6.global-to-local, align 4
  %v8_18254 = lshr i32 %v0_18208, %v2_1824c
  %v9_18254 = or i32 %v8_18254, %v7_18248
  store i32 %v9_18254, i32* @r7, align 4
  %v3_18258 = udiv i32 %v7_18250, 65536
  store i32 %v3_18258, i32* %r8.global-to-local, align 4
  %v7_1825c = shl i32 %v0_18208, %v2_18244
  store i32 %v7_1825c, i32* %sb.global-to-local, align 4
  br label %bb129

bb129:                                            ; preds = %.thread2.thread20, %bb128
  %v0_18264 = phi i32 [ %v3_1825824, %.thread2.thread20 ], [ %v3_18258, %bb128 ]
  %v0_18260 = phi i32 [ %v1_18248, %.thread2.thread20 ], [ %v9_18254, %bb128 ]
  store i32 %v0_18260, i32* @r0, align 4
  store i32 %v0_18264, i32* @r1, align 4
  %v0_18268 = call i32 @function_133e8()
  %v0_1826c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18268, i32* %sl.global-to-local, align 4
  %v0_18274 = load i32, i32* @r7, align 4
  %v2_18278 = call i32 @function_134e4(i32 %v0_18274, i32 %v0_1826c)
  %v0_1827c = load i32, i32* %r6.global-to-local, align 4
  %v3_18280 = urem i32 %v0_1827c, 65536
  store i32 %v3_18280, i32* @r7, align 4
  %v2_18284 = mul i32 %v0_18268, %v3_18280
  %v0_18288 = load i32, i32* %sb.global-to-local, align 4
  %v3_18288 = udiv i32 %v0_18288, 65536
  %v4_1828c = mul i32 %v0_1826c, 65536
  %v5_1828c = or i32 %v3_18288, %v4_1828c
  %tmp191 = icmp ugt i32 %v2_18284, %v5_1828c
  br i1 %tmp191, label %dec_label_pc_18298, label %.thread95

dec_label_pc_18298:                               ; preds = %bb129
  %v2_18298 = add i32 %v5_1828c, %v0_1827c
  %v3_18298 = icmp ult i32 %v2_18298, %v5_1828c
  %v1_1829c = add i32 %v0_18268, -1
  store i32 %v1_1829c, i32* %sl.global-to-local, align 4
  br i1 %v3_18298, label %.thread95, label %dec_label_pc_182a4

dec_label_pc_182a4:                               ; preds = %dec_label_pc_18298
  %tmp192 = icmp ugt i32 %v2_18284, %v2_18298
  br i1 %tmp192, label %bb130, label %.thread95

bb130:                                            ; preds = %dec_label_pc_182a4
  %v5_182a8 = add i32 %v0_18268, -2
  store i32 %v5_182a8, i32* %sl.global-to-local, align 4
  %v6_182ac = add i32 %v2_18298, %v0_1827c
  br label %.thread95

.thread95:                                        ; preds = %bb129, %dec_label_pc_182a4, %dec_label_pc_18298, %bb130
  %v1_182b0 = phi i32 [ %v2_18298, %dec_label_pc_18298 ], [ %v5_1828c, %bb129 ], [ %v6_182ac, %bb130 ], [ %v2_18298, %dec_label_pc_182a4 ]
  %v2_182b0 = sub i32 %v1_182b0, %v2_18284
  store i32 %v2_182b0, i32* @r4, align 4
  %v0_182b4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_182b4, i32* @r1, align 4
  store i32 %v2_182b0, i32* @r0, align 4
  %v0_182bc = call i32 @function_133e8()
  store i32 %v0_182bc, i32* @r5, align 4
  %v0_182c8 = load i32, i32* @r4, align 4
  %v2_182cc = call i32 @function_134e4(i32 %v0_182c8, i32 %v0_182b4)
  %v0_182d0 = load i32, i32* @r7, align 4
  %v1_182d0 = load i32, i32* @r5, align 4
  %v2_182d0 = mul i32 %v1_182d0, %v0_182d0
  %v0_182d4 = load i32, i32* %sb.global-to-local, align 4
  %v3_182d8 = urem i32 %v0_182d4, 65536
  %v4_182dc = mul i32 %v0_182b4, 65536
  %v5_182dc = or i32 %v3_182d8, %v4_182dc
  %tmp193 = icmp ugt i32 %v2_182d0, %v5_182dc
  br i1 %tmp193, label %dec_label_pc_182e8, label %bb132

dec_label_pc_182e8:                               ; preds = %.thread95
  %v1_182e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_182e8 = add i32 %v1_182e8, %v5_182dc
  %v3_182e8 = icmp ult i32 %v2_182e8, %v5_182dc
  %v1_182ec = add i32 %v1_182d0, -1
  br i1 %v3_182e8, label %bb132, label %dec_label_pc_182f4

dec_label_pc_182f4:                               ; preds = %dec_label_pc_182e8
  %tmp194 = icmp ugt i32 %v2_182d0, %v2_182e8
  br i1 %tmp194, label %bb131, label %bb132

bb131:                                            ; preds = %dec_label_pc_182f4
  %v5_182f8 = add i32 %v1_182d0, -2
  br label %bb132

bb132:                                            ; preds = %.thread95, %dec_label_pc_182e8, %dec_label_pc_182f4, %bb131
  %v0_182fc = phi i32 [ %v1_182ec, %dec_label_pc_182e8 ], [ %v1_182d0, %.thread95 ], [ %v1_182ec, %dec_label_pc_182f4 ], [ %v5_182f8, %bb131 ]
  %v1_182fc = load i32, i32* %sl.global-to-local, align 4
  %v4_182fc = mul i32 %v1_182fc, 65536
  %v5_182fc = or i32 %v4_182fc, %v0_182fc
  br label %dec_label_pc_1831c

dec_label_pc_18308:                               ; preds = %dec_label_pc_181fc
  %v9_18308 = icmp eq i32 %v1_18248, %v1_1853c
  %tmp195 = icmp ult i32 %v1_18248, %v1_1853c
  br i1 %tmp195, label %dec_label_pc_18314, label %dec_label_pc_18504

dec_label_pc_18314:                               ; preds = %bb156, %dec_label_pc_18308, %bb157
  br label %dec_label_pc_1831c

dec_label_pc_1831c:                               ; preds = %.thread13, %bb178, %dec_label_pc_186ec, %bb145, %bb132, %dec_label_pc_18314
  %v0_18334 = phi i32 [ %v5_18690, %bb178 ], [ 1, %.thread13 ], [ %v1_186ec, %dec_label_pc_186ec ], [ %v5_184f8, %bb145 ], [ %v5_182fc, %bb132 ], [ 0, %dec_label_pc_18314 ]
  %v2_18328 = icmp eq i32 %stack_var_-56.1, 0
  br i1 %v2_18328, label %dec_label_pc_1833c, label %dec_label_pc_18334

dec_label_pc_18334:                               ; preds = %dec_label_pc_1831c
  %v1_18334 = sub i32 0, %v0_18334
  br label %dec_label_pc_1833c

dec_label_pc_1833c:                               ; preds = %dec_label_pc_1831c, %dec_label_pc_18334
  %v1_18344 = phi i32 [ %v0_18334, %dec_label_pc_1831c ], [ %v1_18334, %dec_label_pc_18334 ]
  store i32 %v12_181c0, i32* @r7, align 4
  ret i32 %v1_18344

dec_label_pc_18348:                               ; preds = %dec_label_pc_18210
  %v2_18348 = icmp eq i32 %v0_18350, 0
  br i1 %v2_18348, label %dec_label_pc_18350, label %dec_label_pc_18360

dec_label_pc_18350:                               ; preds = %dec_label_pc_18348
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r0, align 4
  %v0_18358 = call i32 @function_133e8()
  store i32 %v0_18358, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18360

dec_label_pc_18360:                               ; preds = %dec_label_pc_18348, %dec_label_pc_18350
  %v0_183b0 = phi i32 [ %v0_18350, %dec_label_pc_18348 ], [ %v0_18358, %dec_label_pc_18350 ]
  %v3_18364 = icmp ult i32 %v0_183b0, 65534
  br i1 %v3_18364, label %dec_label_pc_18584, label %dec_label_pc_18368

dec_label_pc_18368:                               ; preds = %dec_label_pc_18360
  %v3_1836c = icmp ugt i32 %v0_183b0, 16777214
  %v9_1836c = icmp eq i32 %v0_183b0, 16777215
  %v2_18370 = xor i1 %v9_1836c, true
  %v3_18370 = and i1 %v3_1836c, %v2_18370
  br i1 %v3_18370, label %bb134, label %bb135

bb134:                                            ; preds = %dec_label_pc_18368
  br label %bb135

bb135:                                            ; preds = %dec_label_pc_18368, %bb134
  %v1_1838069 = phi i32 [ 16777215, %dec_label_pc_18368 ], [ 24, %bb134 ]
  %v2_18374 = xor i1 %v3_1836c, true
  %v3_18374 = or i1 %v9_1836c, %v2_18374
  br i1 %v3_18374, label %bb136, label %bb137

bb136:                                            ; preds = %bb135
  br label %bb137

bb137:                                            ; preds = %bb135, %bb136
  %v1_1838068 = phi i32 [ %v1_1838069, %bb135 ], [ 16, %bb136 ]
  br i1 %v3_18370, label %bb138, label %bb139

bb138:                                            ; preds = %bb137
  store i32 8, i32* @ip, align 4
  br label %bb139

bb139:                                            ; preds = %bb137, %bb138
  br i1 %v3_18374, label %bb140, label %bb141

bb140:                                            ; preds = %bb139
  store i32 16, i32* @ip, align 4
  br label %bb141

bb141:                                            ; preds = %._crit_edge, %bb161, %bb139, %bb140
  %v1_18380 = phi i32 [ %v1_18380.pre, %._crit_edge ], [ 8, %bb161 ], [ %v1_1838068, %bb139 ], [ %v1_1838068, %bb140 ]
  %v6_18380 = lshr i32 %v0_183b0, %v1_18380
  %v0_18388 = load i32, i32* %r8.global-to-local, align 4
  %v2_18388 = add i32 %v0_18388, 36
  %v3_18388 = inttoptr i32 %v2_18388 to i32*
  %v4_18388 = load i32, i32* %v3_18388, align 4
  %v2_1838c = add i32 %v4_18388, %v6_18380
  %v3_1838c = inttoptr i32 %v2_1838c to i8*
  %v4_1838c = load i8, i8* %v3_1838c, align 1
  %v6_1838c = zext i8 %v4_1838c to i32
  %v0_18390 = load i32, i32* @ip, align 4
  %v2_18390 = sub i32 %v0_18390, %v6_1838c
  store i32 %v2_18390, i32* %sl.global-to-local, align 4
  %v9_18390 = icmp eq i32 %v0_18390, %v6_1838c
  %v2_18398 = load i32, i32* @r7, align 4
  br i1 %v9_18390, label %.thread11, label %dec_label_pc_183ac

.thread11:                                        ; preds = %bb141
  %v3_18398 = sub i32 %v2_18398, %v0_183b0
  store i32 %v3_18398, i32* @r4, align 4
  %v4_1839c = urem i32 %v0_183b0, 65536
  store i32 %v4_1839c, i32* %r8.global-to-local, align 4
  %v4_183a0 = udiv i32 %v0_183b0, 65536
  store i32 %v4_183a0, i32* @r7, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18464

dec_label_pc_183ac:                               ; preds = %bb141
  %v6_183ac = shl i32 %v2_18398, %v2_18390
  %v6_183b0 = shl i32 %v0_183b0, %v2_18390
  store i32 %v6_183b0, i32* %r6.global-to-local, align 4
  %v1_183b4 = sub i32 32, %v2_18390
  %v6_183b8 = lshr i32 %v2_18398, %v1_183b4
  store i32 %v6_183b8, i32* @r4, align 4
  %v1_183bc = load i32, i32* %sb.global-to-local, align 4
  %v7_183bc = lshr i32 %v1_183bc, %v1_183b4
  %v8_183bc = or i32 %v7_183bc, %v6_183ac
  %v3_183c0 = udiv i32 %v6_183b0, 65536
  store i32 %v3_183c0, i32* @r7, align 4
  store i32 %v3_183c0, i32* @r1, align 4
  store i32 %v6_183b8, i32* @r0, align 4
  %v0_183d0 = call i32 @function_133e8()
  %v0_183d4 = load i32, i32* @r7, align 4
  store i32 %v0_183d0, i32* %fp.global-to-local, align 4
  %v0_183dc = load i32, i32* @r4, align 4
  %v2_183e0 = call i32 @function_134e4(i32 %v0_183dc, i32 %v0_183d4)
  %v0_183e4 = load i32, i32* %r6.global-to-local, align 4
  %v3_183e8 = urem i32 %v0_183e4, 65536
  store i32 %v3_183e8, i32* %r8.global-to-local, align 4
  %v2_183ec = mul i32 %v0_183d0, %v3_183e8
  %v3_183f4 = udiv i32 %v8_183bc, 65536
  %v4_183f8 = mul i32 %v0_183d4, 65536
  %v5_183f8 = or i32 %v4_183f8, %v3_183f4
  %tmp196 = icmp ugt i32 %v2_183ec, %v5_183f8
  br i1 %tmp196, label %dec_label_pc_18404, label %dec_label_pc_18410

dec_label_pc_18404:                               ; preds = %dec_label_pc_183ac
  %v2_18404 = add i32 %v0_183e4, %v5_183f8
  %v3_18404 = icmp ult i32 %v2_18404, %v5_183f8
  %v1_18408 = add i32 %v0_183d0, -1
  store i32 %v1_18408, i32* %fp.global-to-local, align 4
  br i1 %v3_18404, label %dec_label_pc_18410, label %dec_label_pc_18748

dec_label_pc_18410:                               ; preds = %dec_label_pc_183ac, %dec_label_pc_18748, %bb190, %dec_label_pc_18404
  %v1_18410 = phi i32 [ %v6_18750, %bb190 ], [ %v2_18404, %dec_label_pc_18404 ], [ %v5_183f8, %dec_label_pc_183ac ], [ %v2_18404, %dec_label_pc_18748 ]
  %v2_18410 = sub i32 %v1_18410, %v2_183ec
  store i32 %v2_18410, i32* @r4, align 4
  %v0_18414 = load i32, i32* @r7, align 4
  store i32 %v0_18414, i32* @r1, align 4
  store i32 %v2_18410, i32* @r0, align 4
  %v0_1841c = call i32 @function_133e8()
  %v0_18420 = load i32, i32* @r7, align 4
  store i32 %v0_1841c, i32* @r5, align 4
  %v0_18428 = load i32, i32* @r4, align 4
  %v2_1842c = call i32 @function_134e4(i32 %v0_18428, i32 %v0_18420)
  %v0_18430 = load i32, i32* %r8.global-to-local, align 4
  %v1_18430 = load i32, i32* @r5, align 4
  %v2_18430 = mul i32 %v1_18430, %v0_18430
  %v3_1843c = urem i32 %v8_183bc, 65536
  %v4_18440 = mul i32 %v0_18420, 65536
  %v5_18440 = or i32 %v4_18440, %v3_1843c
  %tmp197 = icmp ugt i32 %v2_18430, %v5_18440
  br i1 %tmp197, label %dec_label_pc_1844c, label %dec_label_pc_18458

dec_label_pc_1844c:                               ; preds = %dec_label_pc_18410
  %v1_1844c = load i32, i32* %r6.global-to-local, align 4
  %v2_1844c = add i32 %v1_1844c, %v5_18440
  %v3_1844c = icmp ult i32 %v2_1844c, %v5_18440
  %v1_18450 = add i32 %v1_18430, -1
  br i1 %v3_1844c, label %dec_label_pc_18458, label %dec_label_pc_18738

dec_label_pc_18458:                               ; preds = %dec_label_pc_18410, %dec_label_pc_18738, %bb189, %dec_label_pc_1844c
  %v0_18460 = phi i32 [ %v5_1873c, %bb189 ], [ %v1_18450, %dec_label_pc_1844c ], [ %v1_18430, %dec_label_pc_18410 ], [ %v1_18450, %dec_label_pc_18738 ]
  %v1_1845c = phi i32 [ %v6_18740, %bb189 ], [ %v2_1844c, %dec_label_pc_1844c ], [ %v5_18440, %dec_label_pc_18410 ], [ %v2_1844c, %dec_label_pc_18738 ]
  %v0_18458 = load i32, i32* %sb.global-to-local, align 4
  %v1_18458 = load i32, i32* %sl.global-to-local, align 4
  %v6_18458 = shl i32 %v0_18458, %v1_18458
  store i32 %v6_18458, i32* %sb.global-to-local, align 4
  %v2_1845c = sub i32 %v1_1845c, %v2_18430
  store i32 %v2_1845c, i32* @r4, align 4
  %v1_18460 = load i32, i32* %fp.global-to-local, align 4
  %v4_18460 = mul i32 %v1_18460, 65536
  %v5_18460 = or i32 %v4_18460, %v0_18460
  store i32 %v5_18460, i32* %fp.global-to-local, align 4
  %v0_18464.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18464

dec_label_pc_18464:                               ; preds = %.thread11, %dec_label_pc_18458
  %v0_18468 = phi i32 [ %v3_18398, %.thread11 ], [ %v2_1845c, %dec_label_pc_18458 ]
  %v0_18464 = phi i32 [ %v4_183a0, %.thread11 ], [ %v0_18464.pre, %dec_label_pc_18458 ]
  store i32 %v0_18464, i32* @r1, align 4
  store i32 %v0_18468, i32* @r0, align 4
  %v0_1846c = call i32 @function_133e8()
  %v0_18470 = load i32, i32* @r7, align 4
  store i32 %v0_1846c, i32* %sl.global-to-local, align 4
  %v0_18478 = load i32, i32* @r4, align 4
  %v2_1847c = call i32 @function_134e4(i32 %v0_18478, i32 %v0_18470)
  %v0_18480 = load i32, i32* %r8.global-to-local, align 4
  %v2_18480 = mul i32 %v0_1846c, %v0_18480
  %v0_18484 = load i32, i32* %sb.global-to-local, align 4
  %v3_18484 = udiv i32 %v0_18484, 65536
  %v4_18488 = mul i32 %v0_18470, 65536
  %v5_18488 = or i32 %v3_18484, %v4_18488
  %tmp198 = icmp ugt i32 %v2_18480, %v5_18488
  br i1 %tmp198, label %dec_label_pc_18494, label %.thread96

dec_label_pc_18494:                               ; preds = %dec_label_pc_18464
  %v1_18494 = load i32, i32* %r6.global-to-local, align 4
  %v2_18494 = add i32 %v1_18494, %v5_18488
  %v3_18494 = icmp ult i32 %v2_18494, %v5_18488
  %v1_18498 = add i32 %v0_1846c, -1
  store i32 %v1_18498, i32* %sl.global-to-local, align 4
  br i1 %v3_18494, label %.thread96, label %dec_label_pc_184a0

dec_label_pc_184a0:                               ; preds = %dec_label_pc_18494
  %tmp199 = icmp ugt i32 %v2_18480, %v2_18494
  br i1 %tmp199, label %bb143, label %.thread96

bb143:                                            ; preds = %dec_label_pc_184a0
  %v5_184a4 = add i32 %v0_1846c, -2
  store i32 %v5_184a4, i32* %sl.global-to-local, align 4
  %v6_184a8 = add i32 %v2_18494, %v1_18494
  br label %.thread96

.thread96:                                        ; preds = %dec_label_pc_18464, %dec_label_pc_184a0, %dec_label_pc_18494, %bb143
  %v1_184ac = phi i32 [ %v2_18494, %dec_label_pc_18494 ], [ %v5_18488, %dec_label_pc_18464 ], [ %v6_184a8, %bb143 ], [ %v2_18494, %dec_label_pc_184a0 ]
  %v2_184ac = sub i32 %v1_184ac, %v2_18480
  store i32 %v2_184ac, i32* @r4, align 4
  %v0_184b0 = load i32, i32* @r7, align 4
  store i32 %v0_184b0, i32* @r1, align 4
  store i32 %v2_184ac, i32* @r0, align 4
  %v0_184b8 = call i32 @function_133e8()
  %v0_184bc = load i32, i32* @r7, align 4
  store i32 %v0_184b8, i32* @r5, align 4
  %v0_184c4 = load i32, i32* @r4, align 4
  %v2_184c8 = call i32 @function_134e4(i32 %v0_184c4, i32 %v0_184bc)
  %v0_184cc = load i32, i32* %r8.global-to-local, align 4
  %v1_184cc = load i32, i32* @r5, align 4
  %v2_184cc = mul i32 %v1_184cc, %v0_184cc
  %v0_184d0 = load i32, i32* %sb.global-to-local, align 4
  %v3_184d4 = urem i32 %v0_184d0, 65536
  %v4_184d8 = mul i32 %v0_184bc, 65536
  %v5_184d8 = or i32 %v3_184d4, %v4_184d8
  %tmp200 = icmp ugt i32 %v2_184cc, %v5_184d8
  br i1 %tmp200, label %dec_label_pc_184e4, label %bb145

dec_label_pc_184e4:                               ; preds = %.thread96
  %v1_184e4 = load i32, i32* %r6.global-to-local, align 4
  %v2_184e4 = add i32 %v1_184e4, %v5_184d8
  %v3_184e4 = icmp ult i32 %v2_184e4, %v5_184d8
  %v1_184e8 = add i32 %v1_184cc, -1
  br i1 %v3_184e4, label %bb145, label %dec_label_pc_184f0

dec_label_pc_184f0:                               ; preds = %dec_label_pc_184e4
  %tmp201 = icmp ugt i32 %v2_184cc, %v2_184e4
  br i1 %tmp201, label %bb144, label %bb145

bb144:                                            ; preds = %dec_label_pc_184f0
  %v5_184f4 = add i32 %v1_184cc, -2
  br label %bb145

bb145:                                            ; preds = %.thread96, %dec_label_pc_184e4, %dec_label_pc_184f0, %bb144
  %v0_184f8 = phi i32 [ %v1_184e8, %dec_label_pc_184e4 ], [ %v1_184cc, %.thread96 ], [ %v1_184e8, %dec_label_pc_184f0 ], [ %v5_184f4, %bb144 ]
  %v1_184f8 = load i32, i32* %sl.global-to-local, align 4
  %v4_184f8 = mul i32 %v1_184f8, 65536
  %v5_184f8 = or i32 %v4_184f8, %v0_184f8
  br label %dec_label_pc_1831c

dec_label_pc_18504:                               ; preds = %dec_label_pc_18308
  %v3_18508 = icmp ult i32 %v1_1853c, 65534
  br i1 %v3_18508, label %dec_label_pc_1859c, label %dec_label_pc_1850c

dec_label_pc_1850c:                               ; preds = %dec_label_pc_18504
  %v3_18510 = icmp ugt i32 %v1_1853c, 16777214
  %v9_18510 = icmp eq i32 %v1_1853c, 16777215
  %v2_18514 = xor i1 %v9_18510, true
  %v3_18514 = and i1 %v3_18510, %v2_18514
  br i1 %v3_18514, label %bb147, label %bb148

bb147:                                            ; preds = %dec_label_pc_1850c
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1850c, %bb147
  %v1_1851c31 = phi i32 [ 16777215, %dec_label_pc_1850c ], [ 24, %bb147 ]
  %v2_18518 = xor i1 %v3_18510, true
  %v3_18518 = or i1 %v9_18510, %v2_18518
  br i1 %v3_18518, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_1851c = phi i32 [ %v1_1851c31, %bb148 ], [ 16, %bb149 ]
  %v2_1851c = add nsw i32 %v1_1851c, -1
  %v3_1851c = shl i32 1, %v2_1851c
  %v4_1851c = and i32 %v3_1851c, %v1_1853c
  %v5_1851c = icmp ne i32 %v4_1851c, 0
  %v6_1851c = lshr i32 %v1_1853c, %v1_1851c
  %v4_18524 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_18528 = add i32 %v4_18524, %v6_1851c
  %v3_18528 = inttoptr i32 %v2_18528 to i8*
  %v4_18528 = load i8, i8* %v3_18528, align 1
  %v6_18528 = zext i8 %v4_18528 to i32
  %v3_1852c = and i1 %v5_1851c, %v2_18514
  br i1 %v3_1852c, label %bb151, label %bb152

bb151:                                            ; preds = %bb150
  store i32 8, i32* @lr, align 4
  br label %bb152

bb152:                                            ; preds = %bb150, %bb151
  %v0_1853433 = phi i32 [ %v27_181c0, %bb150 ], [ 8, %bb151 ]
  %v2_18530 = xor i1 %v5_1851c, true
  %v3_18530 = or i1 %v9_18510, %v2_18530
  br i1 %v3_18530, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 16, i32* @lr, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %v0_18534 = phi i32 [ %v0_1853433, %bb152 ], [ 16, %bb153 ]
  %v2_18534 = sub i32 %v0_18534, %v6_18528
  store i32 %v2_18534, i32* %fp.global-to-local, align 4
  %v9_18534 = icmp eq i32 %v0_18534, %v6_18528
  br i1 %v9_18534, label %dec_label_pc_1853c, label %dec_label_pc_185c8

dec_label_pc_1853c:                               ; preds = %bb154, %bb169
  %v3_1853c = icmp uge i32 %v1_18248, %v1_1853c
  %v2_18540 = xor i1 %v3_1853c, true
  %v3_18540 = or i1 %v9_18308, %v2_18540
  br i1 %v3_18540, label %bb156, label %bb157

bb156:                                            ; preds = %dec_label_pc_1853c
  %v7_18540 = icmp ult i32 %v0_18208, %v0_18350
  br i1 %v7_18540, label %dec_label_pc_18314, label %.thread13

bb157:                                            ; preds = %dec_label_pc_1853c
  br i1 %v3_1853c, label %.thread13, label %dec_label_pc_18314

.thread13:                                        ; preds = %bb156, %bb157
  br label %dec_label_pc_1831c

dec_label_pc_18554:                               ; preds = %dec_label_pc_181c0
  store i32 ptrtoint (i32* @global_var_23010.696 to i32), i32* %r8.global-to-local, align 4
  %v0_181e484 = load i32, i32* @r2, align 4
  store i32 %v0_181e484, i32* @r4, align 4
  %v0_181e885 = load i32, i32* @r3, align 4
  %v0_18554 = load i32, i32* @r0, align 4
  %v1_18554 = sub i32 0, %v0_18554
  store i32 %v1_18554, i32* @r0, align 4
  %v2_18554 = icmp eq i32 %v0_18554, 0
  %v2_18558 = icmp eq i1 %v2_18554, false
  %v5_18558 = sext i1 %v2_18558 to i32
  %v6_18558 = sub i32 %v5_18558, %v0_181cc
  store i32 -1, i32* @ip, align 4
  %v1_18560 = icmp slt i32 %v0_181e885, 0
  br i1 %v1_18560, label %dec_label_pc_1856c, label %dec_label_pc_181fc

dec_label_pc_1856c:                               ; preds = %dec_label_pc_18554, %dec_label_pc_181f4
  %v0_181e889 = phi i32 [ %v0_181e885, %dec_label_pc_18554 ], [ %v0_181e8, %dec_label_pc_181f4 ]
  %v0_181e486 = phi i32 [ %v0_181e484, %dec_label_pc_18554 ], [ %v0_181e4, %dec_label_pc_181f4 ]
  %v0_1820028 = phi i32 [ %v6_18558, %dec_label_pc_18554 ], [ %v0_181cc, %dec_label_pc_181f4 ]
  %stack_var_-56.2 = phi i32 [ -1, %dec_label_pc_18554 ], [ 0, %dec_label_pc_181f4 ]
  %v1_1856c = sub i32 0, %v0_181e486
  store i32 %v1_1856c, i32* @r4, align 4
  %v2_1856c = icmp eq i32 %v0_181e486, 0
  %v2_18570 = icmp eq i1 %v2_1856c, false
  %v5_18570 = sext i1 %v2_18570 to i32
  %v6_18570 = sub i32 %v5_18570, %v0_181e889
  %v1_18578 = sub nsw i32 -1, %stack_var_-56.2
  br label %dec_label_pc_181fc

dec_label_pc_18584:                               ; preds = %dec_label_pc_18360
  %v2_18584 = icmp ugt i32 %v0_183b0, 254
  %v7_18584 = icmp eq i32 %v0_183b0, 255
  %v2_18588 = xor i1 %v7_18584, true
  %v3_18588 = and i1 %v2_18584, %v2_18588
  br i1 %v3_18588, label %bb158, label %bb159

bb158:                                            ; preds = %dec_label_pc_18584
  store i32 24, i32* @ip, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_18584, %bb158
  %v2_1858c = xor i1 %v2_18584, true
  %v3_1858c = or i1 %v7_18584, %v2_1858c
  br i1 %v3_1858c, label %bb160, label %.thread98

bb160:                                            ; preds = %bb159
  store i32 32, i32* @ip, align 4
  store i32 0, i32* @r3, align 4
  br label %.thread98

.thread98:                                        ; preds = %bb159, %bb160
  br i1 %v3_18588, label %bb161, label %._crit_edge

._crit_edge:                                      ; preds = %.thread98
  %v1_18380.pre = load i32, i32* @r3, align 4
  br label %bb141

bb161:                                            ; preds = %.thread98
  br label %bb141

dec_label_pc_1859c:                               ; preds = %dec_label_pc_18504
  %v2_1859c = icmp ugt i32 %v1_1853c, 254
  %v7_1859c = icmp eq i32 %v1_1853c, 255
  %v2_185a0 = xor i1 %v7_1859c, true
  %v3_185a0 = and i1 %v2_1859c, %v2_185a0
  br i1 %v3_185a0, label %bb162, label %bb163

bb162:                                            ; preds = %dec_label_pc_1859c
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_1859c, %bb162
  %v1_185a835 = phi i32 [ %v0_181e890, %dec_label_pc_1859c ], [ 8, %bb162 ]
  %v2_185a4 = xor i1 %v2_1859c, true
  %v3_185a4 = or i1 %v7_1859c, %v2_185a4
  br i1 %v3_185a4, label %bb164, label %bb165

bb164:                                            ; preds = %bb163
  br label %bb165

bb165:                                            ; preds = %bb163, %bb164
  %v1_185a8 = phi i32 [ %v1_185a835, %bb163 ], [ 0, %bb164 ]
  %v2_185a8 = add i32 %v1_185a8, -1
  %v3_185a8 = shl i32 1, %v2_185a8
  %v4_185a8 = and i32 %v3_185a8, %v1_1853c
  %v5_185a8 = icmp ne i32 %v4_185a8, 0
  %v6_185a8 = lshr i32 %v1_1853c, %v1_185a8
  %v4_185b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_185b4 = add i32 %v4_185b0, %v6_185a8
  %v3_185b4 = inttoptr i32 %v2_185b4 to i8*
  %v4_185b4 = load i8, i8* %v3_185b4, align 1
  %v6_185b4 = zext i8 %v4_185b4 to i32
  %v3_185b8 = and i1 %v5_185a8, %v2_185a0
  br i1 %v3_185b8, label %bb166, label %bb167

bb166:                                            ; preds = %bb165
  store i32 24, i32* @lr, align 4
  br label %bb167

bb167:                                            ; preds = %bb165, %bb166
  %v0_185c037 = phi i32 [ %v27_181c0, %bb165 ], [ 24, %bb166 ]
  %v2_185bc = xor i1 %v5_185a8, true
  %v3_185bc = or i1 %v7_1859c, %v2_185bc
  br i1 %v3_185bc, label %bb168, label %bb169

bb168:                                            ; preds = %bb167
  store i32 32, i32* @lr, align 4
  br label %bb169

bb169:                                            ; preds = %bb167, %bb168
  %v0_185c0 = phi i32 [ %v0_185c037, %bb167 ], [ 32, %bb168 ]
  %v2_185c0 = sub i32 %v0_185c0, %v6_185b4
  store i32 %v2_185c0, i32* %fp.global-to-local, align 4
  %v9_185c0 = icmp eq i32 %v0_185c0, %v6_185b4
  br i1 %v9_185c0, label %dec_label_pc_1853c, label %dec_label_pc_185c8

dec_label_pc_185c8:                               ; preds = %bb154, %bb169
  %v1_185d4 = phi i32 [ %v2_18534, %bb154 ], [ %v2_185c0, %bb169 ]
  %v6_185c8 = shl i32 %v1_1853c, %v1_185d4
  %v1_185cc = sub i32 32, %v1_185d4
  %v7_185d0 = lshr i32 %v0_18350, %v1_185cc
  %v8_185d0 = or i32 %v7_185d0, %v6_185c8
  store i32 %v8_185d0, i32* %r8.global-to-local, align 4
  %v6_185d4 = shl i32 %v1_18248, %v1_185d4
  %v6_185d8 = lshr i32 %v1_18248, %v1_185cc
  store i32 %v6_185d8, i32* @r4, align 4
  %v7_185dc = lshr i32 %v0_18208, %v1_185cc
  %v8_185dc = or i32 %v7_185dc, %v6_185d4
  %v3_185e0 = udiv i32 %v8_185d0, 65536
  store i32 %v3_185e0, i32* %sl.global-to-local, align 4
  store i32 %v3_185e0, i32* @r1, align 4
  store i32 %v6_185d8, i32* @r0, align 4
  %v0_185f0 = call i32 @function_133e8()
  %v0_185fc = load i32, i32* @r4, align 4
  %v2_18600 = call i32 @function_134e4(i32 %v0_185fc, i32 %v3_185e0)
  %v0_18604 = load i32, i32* %r8.global-to-local, align 4
  %v3_1860c = urem i32 %v0_18604, 65536
  store i32 %v3_1860c, i32* @r7, align 4
  %v2_18610 = mul i32 %v3_1860c, %v0_185f0
  %v3_18618 = udiv i32 %v8_185dc, 65536
  %v4_1861c = mul nuw i32 %v3_185e0, 65536
  %v5_1861c = or i32 %v4_1861c, %v3_18618
  %v9_18620 = icmp eq i32 %v2_18610, %v5_1861c
  %v0_18624 = load i32, i32* %r6.global-to-local, align 4
  %v1_18624 = load i32, i32* %fp.global-to-local, align 4
  %v2_18624 = add i32 %v1_18624, -1
  %v3_18624 = lshr i32 -2147483648, %v2_18624
  %v4_18624 = and i32 %v3_18624, %v0_18624
  %v6_18624 = shl i32 %v0_18624, %v1_18624
  store i32 %v6_18624, i32* @r5, align 4
  %v2_18628 = icmp eq i32 %v4_18624, 0
  %v3_18628 = or i1 %v9_18620, %v2_18628
  br i1 %v3_18628, label %dec_label_pc_18640, label %dec_label_pc_1862c

dec_label_pc_1862c:                               ; preds = %dec_label_pc_185c8
  %v2_18630 = add i32 %v0_18604, %v5_1861c
  %v3_18630 = icmp ult i32 %v2_18630, %v5_1861c
  %v1_18634 = add i32 %v0_185f0, -1
  br i1 %v3_18630, label %dec_label_pc_18640, label %dec_label_pc_18724

dec_label_pc_18640:                               ; preds = %.thread104, %dec_label_pc_1862c, %dec_label_pc_185c8
  %v1_18640 = phi i32 [ %v5_1861c, %dec_label_pc_185c8 ], [ %v2_18630, %dec_label_pc_1862c ], [ %v1_1864041, %.thread104 ]
  %stack_var_-52.0 = phi i32 [ %v0_185f0, %dec_label_pc_185c8 ], [ %v1_18634, %dec_label_pc_1862c ], [ %v4_18730.v1_18634, %.thread104 ]
  %v2_18640 = sub i32 %v1_18640, %v2_18610
  store i32 %v2_18640, i32* @r4, align 4
  %v0_18644 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_18644, i32* @r1, align 4
  store i32 %v2_18640, i32* @r0, align 4
  %v0_1864c = call i32 @function_133e8()
  store i32 %v0_1864c, i32* %r6.global-to-local, align 4
  %v0_18658 = load i32, i32* @r4, align 4
  %v2_1865c = call i32 @function_134e4(i32 %v0_18658, i32 %v0_18644)
  %v0_18660 = load i32, i32* @r7, align 4
  %v2_18660 = mul i32 %v0_1864c, %v0_18660
  %v3_1866c = urem i32 %v8_185dc, 65536
  %v4_18670 = mul i32 %v0_18644, 65536
  %v5_18670 = or i32 %v4_18670, %v3_1866c
  %tmp202 = icmp ugt i32 %v2_18660, %v5_18670
  br i1 %tmp202, label %dec_label_pc_1867c, label %dec_label_pc_18688

dec_label_pc_1867c:                               ; preds = %dec_label_pc_18640
  %v1_1867c = load i32, i32* %r8.global-to-local, align 4
  %v2_1867c = add i32 %v1_1867c, %v5_18670
  %v3_1867c = icmp ult i32 %v2_1867c, %v5_18670
  %v1_18680 = add i32 %v0_1864c, -1
  store i32 %v1_18680, i32* %r6.global-to-local, align 4
  br i1 %v3_1867c, label %dec_label_pc_18688, label %dec_label_pc_18714

dec_label_pc_18688:                               ; preds = %dec_label_pc_18640, %dec_label_pc_18714, %bb187, %dec_label_pc_1867c
  %v0_18690 = phi i32 [ %v5_1871c, %bb187 ], [ %v1_18680, %dec_label_pc_1867c ], [ %v0_1864c, %dec_label_pc_18640 ], [ %v1_18680, %dec_label_pc_18714 ]
  %v1_1868c = phi i32 [ %v6_18718, %bb187 ], [ %v2_1867c, %dec_label_pc_1867c ], [ %v5_18670, %dec_label_pc_18640 ], [ %v2_1867c, %dec_label_pc_18714 ]
  %v2_1868c = sub i32 %v1_1868c, %v2_18660
  %v4_18690 = mul i32 %stack_var_-52.0, 65536
  %v5_18690 = or i32 %v0_18690, %v4_18690
  %v3_18694 = udiv i32 %v5_18690, 65536
  %v0_18698 = load i32, i32* @r5, align 4
  %v3_18698 = udiv i32 %v0_18698, 65536
  %tmp203 = mul i32 %v3_18694, -65536
  %v5_1869c = add i32 %tmp203, -1
  %v6_1869c = and i32 %v5_18690, %v5_1869c
  %tmp204 = mul i32 %v3_18698, -65536
  %v5_186a0 = add i32 %tmp204, -1
  %v6_186a0 = and i32 %v0_18698, %v5_186a0
  %v2_186a4 = mul i32 %v6_186a0, %v6_1869c
  %v2_186a8 = mul i32 %v6_186a0, %v3_18694
  %v2_186ac = mul i32 %v3_18698, %v6_1869c
  %v2_186b0 = mul nuw i32 %v3_18698, %v3_18694
  %v2_186b4 = add i32 %v2_186a8, %v2_186ac
  %v3_186b4 = icmp ult i32 %v2_186b4, %v2_186a8
  br i1 %v3_186b4, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_18688
  %v2_186b8 = add i32 %v2_186b0, 65536
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_18688, %bb171
  %v0_186c0 = phi i32 [ %v2_186b0, %dec_label_pc_18688 ], [ %v2_186b8, %bb171 ]
  %v4_186bc = mul i32 %v2_186b4, 65536
  %v5_186bc = add i32 %v4_186bc, %v2_186a4
  %v2_186c0 = and i32 %v2_186b4, 32768
  %v3_186c0 = icmp ne i32 %v2_186c0, 0
  %v4_186c0 = udiv i32 %v2_186b4, 65536
  %v7_186c0 = zext i1 %v3_186c0 to i32
  %v6_186c0 = add nuw nsw i32 %v7_186c0, %v4_186c0
  %v8_186c0 = add i32 %v6_186c0, %v0_186c0
  %v3_186c4 = icmp ult i32 %v2_1868c, %v8_186c0
  br i1 %v3_186c4, label %dec_label_pc_186ec, label %dec_label_pc_186cc

dec_label_pc_186cc:                               ; preds = %bb172
  %v9_186c4 = icmp eq i32 %v2_1868c, %v8_186c0
  %. = zext i1 %v9_186c4 to i32
  %v1_186d4 = load i32, i32* %sb.global-to-local, align 4
  %v2_186d4 = load i32, i32* %fp.global-to-local, align 4
  %v7_186d4 = shl i32 %v1_186d4, %v2_186d4
  %v9_186d4 = icmp uge i32 %v5_186bc, %v7_186d4
  %v15_186d4 = icmp eq i32 %v5_186bc, %v7_186d4
  %v2_186d8 = xor i1 %v9_186d4, true
  %v3_186d8 = or i1 %v15_186d4, %v2_186d8
  br i1 %v3_186d8, label %bb175, label %bb176

bb175:                                            ; preds = %dec_label_pc_186cc
  br label %bb176

bb176:                                            ; preds = %dec_label_pc_186cc, %bb175
  %v4_186dc = phi i32 [ %., %dec_label_pc_186cc ], [ 0, %bb175 ]
  %v2_186dc = xor i1 %v15_186d4, true
  %v3_186dc = and i1 %v9_186d4, %v2_186dc
  br i1 %v3_186dc, label %bb177, label %thread-pre-split

bb177:                                            ; preds = %bb176
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb176, %bb177
  %v2_186e0 = icmp eq i32 %v4_186dc, 0
  br i1 %v2_186e0, label %bb178, label %dec_label_pc_186ec

bb178:                                            ; preds = %thread-pre-split
  br label %dec_label_pc_1831c

dec_label_pc_186ec:                               ; preds = %bb172, %thread-pre-split
  %v1_186ec = add i32 %v5_18690, -1
  br label %dec_label_pc_1831c

dec_label_pc_186f8:                               ; preds = %dec_label_pc_18218
  %v3_186fc = icmp ugt i32 %v0_18350, 16777214
  %v9_186fc = icmp eq i32 %v0_18350, 16777215
  %v2_18700 = xor i1 %v9_186fc, true
  %v3_18700 = and i1 %v3_186fc, %v2_18700
  br i1 %v3_18700, label %bb180, label %bb181

bb180:                                            ; preds = %dec_label_pc_186f8
  br label %bb181

bb181:                                            ; preds = %dec_label_pc_186f8, %bb180
  %v1_1823455 = phi i32 [ 16777215, %dec_label_pc_186f8 ], [ 24, %bb180 ]
  %v2_18704 = xor i1 %v3_186fc, true
  %v3_18704 = or i1 %v9_186fc, %v2_18704
  br i1 %v3_18704, label %bb182, label %bb183

bb182:                                            ; preds = %bb181
  br label %bb183

bb183:                                            ; preds = %bb181, %bb182
  %v1_1823454 = phi i32 [ %v1_1823455, %bb181 ], [ 16, %bb182 ]
  br i1 %v3_18700, label %bb184, label %bb185

bb184:                                            ; preds = %bb183
  br label %bb185

bb185:                                            ; preds = %bb183, %bb184
  %v0_1824459 = phi i32 [ %v0_1824460, %bb183 ], [ 8, %bb184 ]
  br i1 %v3_18704, label %bb186, label %bb126

bb186:                                            ; preds = %bb185
  br label %bb126

dec_label_pc_18714:                               ; preds = %dec_label_pc_1867c
  %tmp205 = icmp ugt i32 %v2_18660, %v2_1867c
  br i1 %tmp205, label %bb187, label %dec_label_pc_18688

bb187:                                            ; preds = %dec_label_pc_18714
  %v6_18718 = add i32 %v2_1867c, %v1_1867c
  %v5_1871c = add i32 %v0_1864c, -2
  store i32 %v5_1871c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18688

dec_label_pc_18724:                               ; preds = %dec_label_pc_1862c
  %tmp206 = icmp ugt i32 %v2_18610, %v2_18630
  br i1 %tmp206, label %bb188, label %.thread104

bb188:                                            ; preds = %dec_label_pc_18724
  %v5_18728 = add i32 %v0_185f0, -2
  %v6_1872c = add i32 %v2_18630, %v0_18604
  br label %.thread104

.thread104:                                       ; preds = %dec_label_pc_18724, %bb188
  %v4_18730102 = phi i32 [ %v5_18728, %bb188 ], [ %v1_18634, %dec_label_pc_18724 ]
  %v1_1864041 = phi i32 [ %v6_1872c, %bb188 ], [ %v2_18630, %dec_label_pc_18724 ]
  %v4_18730.v1_18634 = select i1 %tmp206, i32 %v4_18730102, i32 %v1_18634
  br label %dec_label_pc_18640

dec_label_pc_18738:                               ; preds = %dec_label_pc_1844c
  %tmp207 = icmp ugt i32 %v2_18430, %v2_1844c
  br i1 %tmp207, label %bb189, label %dec_label_pc_18458

bb189:                                            ; preds = %dec_label_pc_18738
  %v5_1873c = add i32 %v1_18430, -2
  %v6_18740 = add i32 %v2_1844c, %v1_1844c
  br label %dec_label_pc_18458

dec_label_pc_18748:                               ; preds = %dec_label_pc_18404
  %tmp208 = icmp ugt i32 %v2_183ec, %v2_18404
  br i1 %tmp208, label %bb190, label %dec_label_pc_18410

bb190:                                            ; preds = %dec_label_pc_18748
  %v5_1874c = add i32 %v0_183d0, -2
  store i32 %v5_1874c, i32* %fp.global-to-local, align 4
  %v6_18750 = add i32 %v2_18404, %v0_183e4
  br label %dec_label_pc_18410

; uselistorder directives
  uselistorder i1 %tmp206, { 1, 0 }
  uselistorder i32 %v5_1871c, { 1, 0 }
  uselistorder i32 %v1_1823454, { 1, 0 }
  uselistorder i1 %v9_186fc, { 1, 0 }
  uselistorder i1 %v9_186d4, { 1, 0 }
  uselistorder i32 %v7_186d4, { 1, 0 }
  uselistorder i32 %v2_186b4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_186a8, { 1, 0 }
  uselistorder i32 %v3_18698, { 2, 1, 0 }
  uselistorder i32 %v0_18698, { 1, 0 }
  uselistorder i32 %v3_18694, { 2, 1, 0 }
  uselistorder i32 %v5_18690, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1867c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_18670, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18660, { 0, 2, 1 }
  uselistorder i32 %v0_1864c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_18644, { 1, 0, 2 }
  uselistorder i32 %v1_18634, { 1, 0, 2 }
  uselistorder i32 %v2_18630, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_18624, { 1, 0 }
  uselistorder i32 %v0_18624, { 1, 0 }
  uselistorder i32 %v5_1861c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1860c, { 1, 0 }
  uselistorder i32 %v0_18604, { 1, 2, 0 }
  uselistorder i32 %v0_185f0, { 1, 3, 2, 0 }
  uselistorder i32 %v3_185e0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_185c0, { 1, 0 }
  uselistorder i32 %v6_185b4, { 1, 0 }
  uselistorder i1 %v2_185a0, { 1, 0 }
  uselistorder i1 %v7_1859c, { 1, 2, 0 }
  uselistorder i1 %v7_18584, { 1, 0 }
  uselistorder i32 %v1_1856c, { 1, 0 }
  uselistorder i32 %v0_181e486, { 1, 0 }
  uselistorder i32 %v0_181e889, { 1, 0 }
  uselistorder i32 %v6_18558, { 1, 0 }
  uselistorder i32 %v0_181e885, { 1, 0, 3, 2 }
  uselistorder i32 %v0_181e484, { 0, 2, 1 }
  uselistorder i1 %v3_1853c, { 1, 0 }
  uselistorder i32 %v0_18534, { 1, 0 }
  uselistorder i32 %v6_18528, { 1, 0 }
  uselistorder i1 %v2_18514, { 1, 0 }
  uselistorder i1 %v9_18510, { 1, 2, 0 }
  uselistorder i32 %v5_184d8, { 2, 1, 0 }
  uselistorder i32 %v1_184cc, { 2, 1, 3, 0 }
  uselistorder i32 %v2_18494, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_18488, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18480, { 2, 0, 1 }
  uselistorder i32 %v0_1846c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1844c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_18440, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18430, { 0, 2, 1 }
  uselistorder i32 %v1_18430, { 2, 1, 3, 0 }
  uselistorder i32 %v2_18404, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_183f8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_183ec, { 0, 2, 1 }
  uselistorder i32 %v3_183e8, { 1, 0 }
  uselistorder i32 %v0_183e4, { 1, 2, 0 }
  uselistorder i32 %v0_183d0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_183c0, { 1, 0 }
  uselistorder i32 %v4_183a0, { 1, 0 }
  uselistorder i32 %v2_18398, { 1, 0, 2 }
  uselistorder i32 %v6_1838c, { 1, 0 }
  uselistorder i1 %v9_1836c, { 1, 0 }
  uselistorder i32 %v0_183b0, { 9, 8, 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v5_182dc, { 2, 1, 0 }
  uselistorder i32 %v1_182d0, { 2, 1, 3, 0 }
  uselistorder i32 %v0_182b4, { 1, 0, 2 }
  uselistorder i32 %v2_18298, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_1828c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18284, { 2, 0, 1 }
  uselistorder i32 %v3_18280, { 1, 0 }
  uselistorder i32 %v0_1827c, { 1, 2, 0 }
  uselistorder i32 %v0_18268, { 1, 0, 2, 3 }
  uselistorder i32 %v3_18258, { 1, 0 }
  uselistorder i32 %v3_1825824, { 1, 0 }
  uselistorder i32 %v6_18240, { 1, 0 }
  uselistorder i32 %v0_18244, { 1, 0 }
  uselistorder i1 %v7_18220, { 1, 0 }
  uselistorder i32 %v0_18208, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_18248, { 6, 7, 5, 1, 2, 3, 4, 0, 8 }
  uselistorder i32 %v0_18350, { 5, 6, 12, 11, 2, 9, 3, 1, 4, 7, 8, 10, 0, 13 }
  uselistorder i32 %v0_1824460, { 1, 0 }
  uselistorder i32 %v1_1853c, { 5, 6, 2, 12, 11, 4, 7, 3, 8, 9, 10, 0, 1, 13 }
  uselistorder i32 %v0_181e890, { 1, 0 }
  uselistorder i32 %v0_181e8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_181e4, { 1, 0, 2 }
  uselistorder i32 %v0_181cc, { 1, 2, 0, 3 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 10, 8, 9, 11 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 0, 5, 6, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 15, 5, 6, 3, 4, 7, 14, 11, 12, 8, 13, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 9, 10, 3, 4, 5, 6, 11, 12, 7, 13 }
  uselistorder i32* %fp.global-to-local, { 0, 2, 3, 1, 4, 5, 7, 6, 8, 9 }
  uselistorder i32 65535, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder label %.thread104, { 1, 0 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %bb183, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_186ec, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_18688, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_185c8, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %.thread98, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_1853c, { 1, 0 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %bb145, { 3, 2, 1, 0 }
  uselistorder label %.thread96, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_18464, { 1, 0 }
  uselistorder label %dec_label_pc_18458, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18410, { 2, 1, 3, 0 }
  uselistorder label %bb141, { 1, 0, 3, 2 }
  uselistorder label %bb139, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %bb135, { 1, 0 }
  uselistorder label %dec_label_pc_18360, { 1, 0 }
  uselistorder label %dec_label_pc_1833c, { 1, 0 }
  uselistorder label %dec_label_pc_1831c, { 2, 1, 0, 3, 5, 4 }
  uselistorder label %dec_label_pc_18314, { 2, 0, 1 }
  uselistorder label %bb132, { 3, 2, 1, 0 }
  uselistorder label %.thread95, { 3, 1, 2, 0 }
  uselistorder label %bb129, { 1, 0 }
  uselistorder label %bb126, { 0, 1, 3, 2 }
  uselistorder label %.thread94, { 1, 0 }
  uselistorder label %bb123, { 1, 0 }
  uselistorder label %dec_label_pc_181fc, { 2, 0, 1 }
}

define i32 @function_18760() local_unnamed_addr {
dec_label_pc_18760:
  %fp.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v12_18760 = load i32, i32* @r7, align 4
  %v27_18760 = load i32, i32* @lr, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_18774 = load i32, i32* @r3, align 4
  %v2_18774 = icmp eq i32 %v0_18774, 0
  store i32 ptrtoint (i32* @global_var_23010.696 to i32), i32* @r4, align 4
  %v0_1877c = load i32, i32* @r1, align 4
  store i32 %v0_1877c, i32* %r6.global-to-local, align 4
  %v0_18784 = load i32, i32* @r2, align 4
  store i32 %v0_18784, i32* @r5, align 4
  %v0_18788 = load i32, i32* @r0, align 4
  store i32 %v0_18788, i32* %sb.global-to-local, align 4
  br i1 %v2_18774, label %dec_label_pc_18790, label %dec_label_pc_1888c

dec_label_pc_18790:                               ; preds = %dec_label_pc_18760
  %tmp = icmp ugt i32 %v0_18784, %v0_1877c
  br i1 %tmp, label %dec_label_pc_18798, label %dec_label_pc_18900

dec_label_pc_18798:                               ; preds = %dec_label_pc_18790
  %v3_1879c = icmp ult i32 %v0_18784, 65534
  br i1 %v3_1879c, label %dec_label_pc_18c30, label %dec_label_pc_187a0

dec_label_pc_187a0:                               ; preds = %dec_label_pc_18798
  %v3_187a4 = icmp ugt i32 %v0_18784, 16777214
  %v9_187a4 = icmp eq i32 %v0_18784, 16777215
  %v2_187a8 = xor i1 %v9_187a4, true
  %v3_187a8 = and i1 %v3_187a4, %v2_187a8
  br i1 %v3_187a8, label %bb, label %bb86

bb:                                               ; preds = %dec_label_pc_187a0
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_187a0, %bb
  %v1_187b835 = phi i32 [ 16777215, %dec_label_pc_187a0 ], [ 24, %bb ]
  %v2_187ac = xor i1 %v3_187a4, true
  %v3_187ac = or i1 %v9_187a4, %v2_187ac
  br i1 %v3_187ac, label %bb87, label %bb88

bb87:                                             ; preds = %bb86
  br label %bb88

bb88:                                             ; preds = %bb86, %bb87
  %v1_187b834 = phi i32 [ %v1_187b835, %bb86 ], [ 16, %bb87 ]
  br i1 %v3_187a8, label %bb89, label %bb90

bb89:                                             ; preds = %bb88
  store i32 8, i32* @ip, align 4
  br label %bb90

bb90:                                             ; preds = %bb88, %bb89
  br i1 %v3_187ac, label %bb91, label %bb92

bb91:                                             ; preds = %bb90
  store i32 16, i32* @ip, align 4
  br label %bb92

bb92:                                             ; preds = %bb147, %.thread62, %bb90, %bb91
  %v1_187b8 = phi i32 [ 8, %bb147 ], [ 0, %.thread62 ], [ %v1_187b834, %bb90 ], [ %v1_187b834, %bb91 ]
  %v6_187b8 = lshr i32 %v0_18784, %v1_187b8
  %v4_187c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_187c4 = add i32 %v4_187c0, %v6_187b8
  %v3_187c4 = inttoptr i32 %v2_187c4 to i8*
  %v4_187c4 = load i8, i8* %v3_187c4, align 1
  %v6_187c4 = zext i8 %v4_187c4 to i32
  %v0_187c8 = load i32, i32* @ip, align 4
  %v2_187c8 = sub i32 %v0_187c8, %v6_187c4
  %v9_187c8 = icmp eq i32 %v0_187c8, %v6_187c4
  br i1 %v9_187c8, label %.critedge, label %.thread2

.thread2:                                         ; preds = %bb92
  %v7_187cc = shl i32 %v0_1877c, %v2_187c8
  %v2_187d0 = sub i32 32, %v2_187c8
  %v7_187d4 = shl i32 %v0_18784, %v2_187c8
  store i32 %v7_187d4, i32* @r5, align 4
  %v8_187d8 = lshr i32 %v0_18788, %v2_187d0
  %v9_187d8 = or i32 %v8_187d8, %v7_187cc
  store i32 %v9_187d8, i32* %r6.global-to-local, align 4
  %v3_187dc = udiv i32 %v7_187d4, 65536
  store i32 %v3_187dc, i32* %r8.global-to-local, align 4
  store i32 %v3_187dc, i32* @r1, align 4
  store i32 %v9_187d8, i32* @r0, align 4
  %v7_187e8 = shl i32 %v0_18788, %v2_187c8
  store i32 %v7_187e8, i32* %sb.global-to-local, align 4
  br label %bb94

.critedge:                                        ; preds = %bb92
  %v3_187dc.c = udiv i32 %v0_18784, 65536
  store i32 %v3_187dc.c, i32* %r8.global-to-local, align 4
  store i32 %v3_187dc.c, i32* @r1, align 4
  store i32 %v0_1877c, i32* @r0, align 4
  br label %bb94

bb94:                                             ; preds = %.critedge, %.thread2
  %v0_187ec = call i32 @function_133e8()
  %v0_187f0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_187ec, i32* %sl.global-to-local, align 4
  %v0_187f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_187fc = call i32 @function_134e4(i32 %v0_187f8, i32 %v0_187f0)
  %v0_18800 = load i32, i32* @r5, align 4
  %v3_18804 = urem i32 %v0_18800, 65536
  store i32 %v3_18804, i32* @r7, align 4
  %v2_18808 = mul i32 %v0_187ec, %v3_18804
  %v0_1880c = load i32, i32* %sb.global-to-local, align 4
  %v3_1880c = udiv i32 %v0_1880c, 65536
  %v4_18810 = mul i32 %v0_187f0, 65536
  %v5_18810 = or i32 %v3_1880c, %v4_18810
  %tmp152 = icmp ugt i32 %v2_18808, %v5_18810
  br i1 %tmp152, label %dec_label_pc_1881c, label %.thread57

dec_label_pc_1881c:                               ; preds = %bb94
  %v2_1881c = add i32 %v5_18810, %v0_18800
  %v3_1881c = icmp ult i32 %v2_1881c, %v5_18810
  %v1_18820 = add i32 %v0_187ec, -1
  store i32 %v1_18820, i32* %sl.global-to-local, align 4
  br i1 %v3_1881c, label %.thread57, label %dec_label_pc_18828

dec_label_pc_18828:                               ; preds = %dec_label_pc_1881c
  %tmp153 = icmp ugt i32 %v2_18808, %v2_1881c
  br i1 %tmp153, label %bb95, label %.thread57

bb95:                                             ; preds = %dec_label_pc_18828
  %v5_1882c = add i32 %v0_187ec, -2
  store i32 %v5_1882c, i32* %sl.global-to-local, align 4
  %v6_18830 = add i32 %v2_1881c, %v0_18800
  br label %.thread57

.thread57:                                        ; preds = %bb94, %dec_label_pc_18828, %dec_label_pc_1881c, %bb95
  %v1_18834 = phi i32 [ %v2_1881c, %dec_label_pc_1881c ], [ %v5_18810, %bb94 ], [ %v6_18830, %bb95 ], [ %v2_1881c, %dec_label_pc_18828 ]
  %v2_18834 = sub i32 %v1_18834, %v2_18808
  store i32 %v2_18834, i32* @r4, align 4
  %v0_18838 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18838, i32* @r1, align 4
  store i32 %v2_18834, i32* @r0, align 4
  %v0_18840 = call i32 @function_133e8()
  store i32 %v0_18840, i32* %r6.global-to-local, align 4
  %v0_1884c = load i32, i32* @r4, align 4
  %v2_18850 = call i32 @function_134e4(i32 %v0_1884c, i32 %v0_18838)
  %v0_18854 = load i32, i32* @r7, align 4
  %v2_18854 = mul i32 %v0_18840, %v0_18854
  %v0_18858 = load i32, i32* %sb.global-to-local, align 4
  %v3_1885c = urem i32 %v0_18858, 65536
  %v4_18860 = mul i32 %v0_18838, 65536
  %v5_18860 = or i32 %v3_1885c, %v4_18860
  %tmp154 = icmp ugt i32 %v2_18854, %v5_18860
  br i1 %tmp154, label %dec_label_pc_1886c, label %bb97

dec_label_pc_1886c:                               ; preds = %.thread57
  %v1_1886c = load i32, i32* @r5, align 4
  %v2_1886c = add i32 %v1_1886c, %v5_18860
  %v3_1886c = icmp ult i32 %v2_1886c, %v5_18860
  %v1_18870 = add i32 %v0_18840, -1
  store i32 %v1_18870, i32* %r6.global-to-local, align 4
  br i1 %v3_1886c, label %bb97, label %dec_label_pc_18878

dec_label_pc_18878:                               ; preds = %dec_label_pc_1886c
  %tmp155 = icmp ugt i32 %v2_18854, %v2_1886c
  br i1 %tmp155, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_18878
  %v5_1887c = add i32 %v0_18840, -2
  store i32 %v5_1887c, i32* %r6.global-to-local, align 4
  br label %bb97

bb97:                                             ; preds = %.thread57, %dec_label_pc_1886c, %dec_label_pc_18878, %bb96
  %v0_18880 = phi i32 [ %v1_18870, %dec_label_pc_1886c ], [ %v0_18840, %.thread57 ], [ %v1_18870, %dec_label_pc_18878 ], [ %v5_1887c, %bb96 ]
  %v1_18880 = load i32, i32* %sl.global-to-local, align 4
  %v4_18880 = mul i32 %v1_18880, 65536
  %v5_18880 = or i32 %v4_18880, %v0_18880
  br label %dec_label_pc_188ec

dec_label_pc_1888c:                               ; preds = %dec_label_pc_18760
  %v3_1888c = icmp uge i32 %v0_18774, %v0_1877c
  %v9_1888c = icmp eq i32 %v0_1877c, %v0_18774
  %v2_18894 = xor i1 %v9_1888c, true
  %v3_18894 = and i1 %v3_1888c, %v2_18894
  br i1 %v3_18894, label %dec_label_pc_188e4, label %dec_label_pc_18898

dec_label_pc_18898:                               ; preds = %dec_label_pc_1888c
  %v3_1889c = icmp ult i32 %v0_18774, 65534
  br i1 %v3_1889c, label %dec_label_pc_18abc, label %dec_label_pc_188a0

dec_label_pc_188a0:                               ; preds = %dec_label_pc_18898
  %v3_188a4 = icmp ugt i32 %v0_18774, 16777214
  %v9_188a4 = icmp eq i32 %v0_18774, 16777215
  %v2_188a8 = xor i1 %v9_188a4, true
  %v3_188a8 = and i1 %v3_188a4, %v2_188a8
  br i1 %v3_188a8, label %bb99, label %bb100

bb99:                                             ; preds = %dec_label_pc_188a0
  br label %bb100

bb100:                                            ; preds = %dec_label_pc_188a0, %bb99
  %v1_188b012 = phi i32 [ 16777215, %dec_label_pc_188a0 ], [ 24, %bb99 ]
  %v2_188ac = xor i1 %v3_188a4, true
  %v3_188ac = or i1 %v9_188a4, %v2_188ac
  br i1 %v3_188ac, label %bb101, label %bb102

bb101:                                            ; preds = %bb100
  br label %bb102

bb102:                                            ; preds = %bb100, %bb101
  %v1_188b0 = phi i32 [ %v1_188b012, %bb100 ], [ 16, %bb101 ]
  %v2_188b0 = add nsw i32 %v1_188b0, -1
  %v3_188b0 = shl i32 1, %v2_188b0
  %v4_188b0 = and i32 %v3_188b0, %v0_18774
  %v5_188b0 = icmp ne i32 %v4_188b0, 0
  %v6_188b0 = lshr i32 %v0_18774, %v1_188b0
  %v4_188b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_188bc = add i32 %v4_188b8, %v6_188b0
  %v3_188bc = inttoptr i32 %v2_188bc to i8*
  %v4_188bc = load i8, i8* %v3_188bc, align 1
  %v6_188bc = zext i8 %v4_188bc to i32
  %v3_188c0 = and i1 %v5_188b0, %v2_188a8
  br i1 %v3_188c0, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  store i32 8, i32* @lr, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v0_188c814 = phi i32 [ %v27_18760, %bb102 ], [ 8, %bb103 ]
  %v2_188c4 = xor i1 %v5_188b0, true
  %v3_188c4 = or i1 %v9_188a4, %v2_188c4
  br i1 %v3_188c4, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  store i32 16, i32* @lr, align 4
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v0_188c8 = phi i32 [ %v0_188c814, %bb104 ], [ 16, %bb105 ]
  %v2_188c8 = sub i32 %v0_188c8, %v6_188bc
  store i32 %v2_188c8, i32* %fp.global-to-local, align 4
  %v9_188c8 = icmp eq i32 %v0_188c8, %v6_188bc
  br i1 %v9_188c8, label %dec_label_pc_188d0, label %dec_label_pc_18ae8

dec_label_pc_188d0:                               ; preds = %bb106, %bb130
  %v1_188d8 = phi i32 [ %v2_188c8, %bb106 ], [ %v2_18ae0, %bb130 ]
  %v3_188d0 = icmp uge i32 %v0_1877c, %v0_18774
  %v2_188d4 = xor i1 %v3_188d0, true
  %v3_188d4 = or i1 %v9_1888c, %v2_188d4
  br i1 %v3_188d4, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_188d0
  %v7_188d4 = icmp ult i32 %v0_18788, %v0_18784
  br i1 %v7_188d4, label %dec_label_pc_188e4, label %.thread3

bb109:                                            ; preds = %dec_label_pc_188d0
  br i1 %v3_188d0, label %.thread3, label %dec_label_pc_188e4

.thread3:                                         ; preds = %bb108, %bb109
  br label %dec_label_pc_188ec

dec_label_pc_188e4:                               ; preds = %bb108, %bb109, %dec_label_pc_1888c
  br label %dec_label_pc_188ec

dec_label_pc_188ec:                               ; preds = %.thread3, %bb139, %dec_label_pc_18c0c, %bb122, %bb97, %dec_label_pc_188e4
  %v5_188ec = phi i32 [ 0, %bb139 ], [ %v1_188d8, %.thread3 ], [ 0, %dec_label_pc_18c0c ], [ %v0_18ab4, %bb122 ], [ 0, %bb97 ], [ 0, %dec_label_pc_188e4 ]
  %v2_188ec = phi i32 [ %v5_18bb0, %bb139 ], [ 1, %.thread3 ], [ %v1_18c0c, %dec_label_pc_18c0c ], [ %v5_18ab0, %bb122 ], [ %v5_18880, %bb97 ], [ 0, %dec_label_pc_188e4 ]
  store i32 %v5_188ec, i32* @r1, align 4
  store i32 %v12_18760, i32* @r7, align 4
  ret i32 %v2_188ec

dec_label_pc_18900:                               ; preds = %dec_label_pc_18790
  %v2_18900 = icmp eq i32 %v0_18784, 0
  br i1 %v2_18900, label %dec_label_pc_18908, label %dec_label_pc_18918

dec_label_pc_18908:                               ; preds = %dec_label_pc_18900
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r0, align 4
  %v0_18910 = call i32 @function_133e8()
  store i32 %v0_18910, i32* @r5, align 4
  br label %dec_label_pc_18918

dec_label_pc_18918:                               ; preds = %dec_label_pc_18900, %dec_label_pc_18908
  %v0_18968 = phi i32 [ %v0_18784, %dec_label_pc_18900 ], [ %v0_18910, %dec_label_pc_18908 ]
  %v3_1891c = icmp ult i32 %v0_18968, 65534
  br i1 %v3_1891c, label %dec_label_pc_18c18, label %dec_label_pc_18920

dec_label_pc_18920:                               ; preds = %dec_label_pc_18918
  %v3_18924 = icmp ugt i32 %v0_18968, 16777214
  %v9_18924 = icmp eq i32 %v0_18968, 16777215
  %v2_18928 = xor i1 %v9_18924, true
  %v3_18928 = and i1 %v3_18924, %v2_18928
  br i1 %v3_18928, label %bb111, label %bb112

bb111:                                            ; preds = %dec_label_pc_18920
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_18920, %bb111
  %v1_1893844 = phi i32 [ 16777215, %dec_label_pc_18920 ], [ 24, %bb111 ]
  %v2_1892c = xor i1 %v3_18924, true
  %v3_1892c = or i1 %v9_18924, %v2_1892c
  br i1 %v3_1892c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1893843 = phi i32 [ %v1_1893844, %bb112 ], [ 16, %bb113 ]
  br i1 %v3_18928, label %bb115, label %bb116

bb115:                                            ; preds = %bb114
  store i32 8, i32* @ip, align 4
  br label %bb116

bb116:                                            ; preds = %bb114, %bb115
  br i1 %v3_1892c, label %bb117, label %bb118

bb117:                                            ; preds = %bb116
  store i32 16, i32* @ip, align 4
  br label %bb118

bb118:                                            ; preds = %._crit_edge, %bb143, %bb116, %bb117
  %v1_18938 = phi i32 [ %v1_18938.pre, %._crit_edge ], [ 8, %bb143 ], [ %v1_1893843, %bb116 ], [ %v1_1893843, %bb117 ]
  %v6_18938 = lshr i32 %v0_18968, %v1_18938
  %v0_18940 = load i32, i32* @r4, align 4
  %v2_18940 = add i32 %v0_18940, 36
  %v3_18940 = inttoptr i32 %v2_18940 to i32*
  %v4_18940 = load i32, i32* %v3_18940, align 4
  %v2_18944 = add i32 %v4_18940, %v6_18938
  %v3_18944 = inttoptr i32 %v2_18944 to i8*
  %v4_18944 = load i8, i8* %v3_18944, align 1
  %v6_18944 = zext i8 %v4_18944 to i32
  %v0_18948 = load i32, i32* @ip, align 4
  %v2_18948 = sub i32 %v0_18948, %v6_18944
  store i32 %v2_18948, i32* %sl.global-to-local, align 4
  %v9_18948 = icmp eq i32 %v0_18948, %v6_18944
  %v2_18950 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v9_18948, label %.thread8, label %dec_label_pc_18964

.thread8:                                         ; preds = %bb118
  %v3_18950 = sub i32 %v2_18950, %v0_18968
  store i32 %v3_18950, i32* @r4, align 4
  %v4_18954 = urem i32 %v0_18968, 65536
  store i32 %v4_18954, i32* %r8.global-to-local, align 4
  %v4_18958 = udiv i32 %v0_18968, 65536
  store i32 %v4_18958, i32* @r7, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18a1c

dec_label_pc_18964:                               ; preds = %bb118
  %v6_18964 = shl i32 %v2_18950, %v2_18948
  %v6_18968 = shl i32 %v0_18968, %v2_18948
  store i32 %v6_18968, i32* @r5, align 4
  %v1_1896c = sub i32 32, %v2_18948
  %v6_18970 = lshr i32 %v2_18950, %v1_1896c
  store i32 %v6_18970, i32* @r4, align 4
  %v1_18974 = load i32, i32* %sb.global-to-local, align 4
  %v7_18974 = lshr i32 %v1_18974, %v1_1896c
  %v8_18974 = or i32 %v7_18974, %v6_18964
  %v3_18978 = udiv i32 %v6_18968, 65536
  store i32 %v3_18978, i32* @r7, align 4
  store i32 %v3_18978, i32* @r1, align 4
  store i32 %v6_18970, i32* @r0, align 4
  %v0_18988 = call i32 @function_133e8()
  %v0_1898c = load i32, i32* @r7, align 4
  store i32 %v0_18988, i32* %fp.global-to-local, align 4
  %v0_18994 = load i32, i32* @r4, align 4
  %v2_18998 = call i32 @function_134e4(i32 %v0_18994, i32 %v0_1898c)
  %v0_1899c = load i32, i32* @r5, align 4
  %v3_189a0 = urem i32 %v0_1899c, 65536
  store i32 %v3_189a0, i32* %r8.global-to-local, align 4
  %v2_189a4 = mul i32 %v0_18988, %v3_189a0
  %v3_189ac = udiv i32 %v8_18974, 65536
  %v4_189b0 = mul i32 %v0_1898c, 65536
  %v5_189b0 = or i32 %v4_189b0, %v3_189ac
  %tmp156 = icmp ugt i32 %v2_189a4, %v5_189b0
  br i1 %tmp156, label %dec_label_pc_189bc, label %dec_label_pc_189c8

dec_label_pc_189bc:                               ; preds = %dec_label_pc_18964
  %v2_189bc = add i32 %v0_1899c, %v5_189b0
  %v3_189bc = icmp ult i32 %v2_189bc, %v5_189b0
  %v1_189c0 = add i32 %v0_18988, -1
  store i32 %v1_189c0, i32* %fp.global-to-local, align 4
  br i1 %v3_189bc, label %dec_label_pc_189c8, label %dec_label_pc_18c7c

dec_label_pc_189c8:                               ; preds = %dec_label_pc_18964, %dec_label_pc_18c7c, %bb151, %dec_label_pc_189bc
  %v1_189c8 = phi i32 [ %v6_18c84, %bb151 ], [ %v2_189bc, %dec_label_pc_189bc ], [ %v5_189b0, %dec_label_pc_18964 ], [ %v2_189bc, %dec_label_pc_18c7c ]
  %v2_189c8 = sub i32 %v1_189c8, %v2_189a4
  store i32 %v2_189c8, i32* @r4, align 4
  %v0_189cc = load i32, i32* @r7, align 4
  store i32 %v0_189cc, i32* @r1, align 4
  store i32 %v2_189c8, i32* @r0, align 4
  %v0_189d4 = call i32 @function_133e8()
  %v0_189d8 = load i32, i32* @r7, align 4
  store i32 %v0_189d4, i32* %r6.global-to-local, align 4
  %v0_189e0 = load i32, i32* @r4, align 4
  %v2_189e4 = call i32 @function_134e4(i32 %v0_189e0, i32 %v0_189d8)
  %v0_189e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_189e8 = mul i32 %v0_189d4, %v0_189e8
  %v3_189f4 = urem i32 %v8_18974, 65536
  %v4_189f8 = mul i32 %v0_189d8, 65536
  %v5_189f8 = or i32 %v4_189f8, %v3_189f4
  %tmp157 = icmp ugt i32 %v2_189e8, %v5_189f8
  br i1 %tmp157, label %dec_label_pc_18a04, label %dec_label_pc_18a10

dec_label_pc_18a04:                               ; preds = %dec_label_pc_189c8
  %v1_18a04 = load i32, i32* @r5, align 4
  %v2_18a04 = add i32 %v1_18a04, %v5_189f8
  %v3_18a04 = icmp ult i32 %v2_18a04, %v5_189f8
  %v1_18a08 = add i32 %v0_189d4, -1
  store i32 %v1_18a08, i32* %r6.global-to-local, align 4
  br i1 %v3_18a04, label %dec_label_pc_18a10, label %dec_label_pc_18c6c

dec_label_pc_18a10:                               ; preds = %dec_label_pc_189c8, %dec_label_pc_18c6c, %bb150, %dec_label_pc_18a04
  %v0_18a18 = phi i32 [ %v5_18c70, %bb150 ], [ %v1_18a08, %dec_label_pc_18a04 ], [ %v0_189d4, %dec_label_pc_189c8 ], [ %v1_18a08, %dec_label_pc_18c6c ]
  %v1_18a14 = phi i32 [ %v6_18c74, %bb150 ], [ %v2_18a04, %dec_label_pc_18a04 ], [ %v5_189f8, %dec_label_pc_189c8 ], [ %v2_18a04, %dec_label_pc_18c6c ]
  %v0_18a10 = load i32, i32* %sb.global-to-local, align 4
  %v1_18a10 = load i32, i32* %sl.global-to-local, align 4
  %v6_18a10 = shl i32 %v0_18a10, %v1_18a10
  store i32 %v6_18a10, i32* %sb.global-to-local, align 4
  %v2_18a14 = sub i32 %v1_18a14, %v2_189e8
  store i32 %v2_18a14, i32* @r4, align 4
  %v1_18a18 = load i32, i32* %fp.global-to-local, align 4
  %v4_18a18 = mul i32 %v1_18a18, 65536
  %v5_18a18 = or i32 %v4_18a18, %v0_18a18
  store i32 %v5_18a18, i32* %fp.global-to-local, align 4
  %v0_18a1c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18a1c

dec_label_pc_18a1c:                               ; preds = %.thread8, %dec_label_pc_18a10
  %v0_18a20 = phi i32 [ %v3_18950, %.thread8 ], [ %v2_18a14, %dec_label_pc_18a10 ]
  %v0_18a1c = phi i32 [ %v4_18958, %.thread8 ], [ %v0_18a1c.pre, %dec_label_pc_18a10 ]
  store i32 %v0_18a1c, i32* @r1, align 4
  store i32 %v0_18a20, i32* @r0, align 4
  %v0_18a24 = call i32 @function_133e8()
  %v0_18a28 = load i32, i32* @r7, align 4
  store i32 %v0_18a24, i32* %sl.global-to-local, align 4
  %v0_18a30 = load i32, i32* @r4, align 4
  %v2_18a34 = call i32 @function_134e4(i32 %v0_18a30, i32 %v0_18a28)
  %v0_18a38 = load i32, i32* %r8.global-to-local, align 4
  %v2_18a38 = mul i32 %v0_18a24, %v0_18a38
  %v0_18a3c = load i32, i32* %sb.global-to-local, align 4
  %v3_18a3c = udiv i32 %v0_18a3c, 65536
  %v4_18a40 = mul i32 %v0_18a28, 65536
  %v5_18a40 = or i32 %v3_18a3c, %v4_18a40
  %tmp158 = icmp ugt i32 %v2_18a38, %v5_18a40
  br i1 %tmp158, label %dec_label_pc_18a4c, label %.thread59

dec_label_pc_18a4c:                               ; preds = %dec_label_pc_18a1c
  %v1_18a4c = load i32, i32* @r5, align 4
  %v2_18a4c = add i32 %v1_18a4c, %v5_18a40
  %v3_18a4c = icmp ult i32 %v2_18a4c, %v5_18a40
  %v1_18a50 = add i32 %v0_18a24, -1
  store i32 %v1_18a50, i32* %sl.global-to-local, align 4
  br i1 %v3_18a4c, label %.thread59, label %dec_label_pc_18a58

dec_label_pc_18a58:                               ; preds = %dec_label_pc_18a4c
  %tmp159 = icmp ugt i32 %v2_18a38, %v2_18a4c
  br i1 %tmp159, label %bb120, label %.thread59

bb120:                                            ; preds = %dec_label_pc_18a58
  %v5_18a5c = add i32 %v0_18a24, -2
  store i32 %v5_18a5c, i32* %sl.global-to-local, align 4
  %v6_18a60 = add i32 %v2_18a4c, %v1_18a4c
  br label %.thread59

.thread59:                                        ; preds = %dec_label_pc_18a1c, %dec_label_pc_18a58, %dec_label_pc_18a4c, %bb120
  %v1_18a64 = phi i32 [ %v2_18a4c, %dec_label_pc_18a4c ], [ %v5_18a40, %dec_label_pc_18a1c ], [ %v6_18a60, %bb120 ], [ %v2_18a4c, %dec_label_pc_18a58 ]
  %v2_18a64 = sub i32 %v1_18a64, %v2_18a38
  store i32 %v2_18a64, i32* @r4, align 4
  %v0_18a68 = load i32, i32* @r7, align 4
  store i32 %v0_18a68, i32* @r1, align 4
  store i32 %v2_18a64, i32* @r0, align 4
  %v0_18a70 = call i32 @function_133e8()
  %v0_18a74 = load i32, i32* @r7, align 4
  store i32 %v0_18a70, i32* %r6.global-to-local, align 4
  %v0_18a7c = load i32, i32* @r4, align 4
  %v2_18a80 = call i32 @function_134e4(i32 %v0_18a7c, i32 %v0_18a74)
  %v0_18a84 = load i32, i32* %r8.global-to-local, align 4
  %v2_18a84 = mul i32 %v0_18a70, %v0_18a84
  %v0_18a88 = load i32, i32* %sb.global-to-local, align 4
  %v3_18a8c = urem i32 %v0_18a88, 65536
  %v4_18a90 = mul i32 %v0_18a74, 65536
  %v5_18a90 = or i32 %v3_18a8c, %v4_18a90
  %tmp160 = icmp ugt i32 %v2_18a84, %v5_18a90
  br i1 %tmp160, label %dec_label_pc_18a9c, label %bb122

dec_label_pc_18a9c:                               ; preds = %.thread59
  %v1_18a9c = load i32, i32* @r5, align 4
  %v2_18a9c = add i32 %v1_18a9c, %v5_18a90
  %v3_18a9c = icmp ult i32 %v2_18a9c, %v5_18a90
  %v1_18aa0 = add i32 %v0_18a70, -1
  store i32 %v1_18aa0, i32* %r6.global-to-local, align 4
  br i1 %v3_18a9c, label %bb122, label %dec_label_pc_18aa8

dec_label_pc_18aa8:                               ; preds = %dec_label_pc_18a9c
  %tmp161 = icmp ugt i32 %v2_18a84, %v2_18a9c
  br i1 %tmp161, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_18aa8
  %v5_18aac = add i32 %v0_18a70, -2
  store i32 %v5_18aac, i32* %r6.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %.thread59, %dec_label_pc_18a9c, %dec_label_pc_18aa8, %bb121
  %v0_18ab0 = phi i32 [ %v1_18aa0, %dec_label_pc_18a9c ], [ %v0_18a70, %.thread59 ], [ %v1_18aa0, %dec_label_pc_18aa8 ], [ %v5_18aac, %bb121 ]
  %v1_18ab0 = load i32, i32* %sl.global-to-local, align 4
  %v4_18ab0 = mul i32 %v1_18ab0, 65536
  %v5_18ab0 = or i32 %v4_18ab0, %v0_18ab0
  %v0_18ab4 = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_188ec

dec_label_pc_18abc:                               ; preds = %dec_label_pc_18898
  %v2_18abc = icmp ugt i32 %v0_18774, 254
  %v7_18abc = icmp eq i32 %v0_18774, 255
  %v2_18ac0 = xor i1 %v7_18abc, true
  %v3_18ac0 = and i1 %v2_18abc, %v2_18ac0
  br i1 %v3_18ac0, label %bb123, label %bb124

bb123:                                            ; preds = %dec_label_pc_18abc
  br label %bb124

bb124:                                            ; preds = %dec_label_pc_18abc, %bb123
  %v1_18ac816 = phi i32 [ %v0_18774, %dec_label_pc_18abc ], [ 8, %bb123 ]
  %v2_18ac4 = xor i1 %v2_18abc, true
  %v3_18ac4 = or i1 %v7_18abc, %v2_18ac4
  br i1 %v3_18ac4, label %bb125, label %bb126

bb125:                                            ; preds = %bb124
  br label %bb126

bb126:                                            ; preds = %bb124, %bb125
  %v1_18ac8 = phi i32 [ %v1_18ac816, %bb124 ], [ 0, %bb125 ]
  %v2_18ac8 = add i32 %v1_18ac8, -1
  %v3_18ac8 = shl i32 1, %v2_18ac8
  %v4_18ac8 = and i32 %v3_18ac8, %v0_18774
  %v5_18ac8 = icmp ne i32 %v4_18ac8, 0
  %v6_18ac8 = lshr i32 %v0_18774, %v1_18ac8
  %v4_18ad0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), align 4
  %v2_18ad4 = add i32 %v4_18ad0, %v6_18ac8
  %v3_18ad4 = inttoptr i32 %v2_18ad4 to i8*
  %v4_18ad4 = load i8, i8* %v3_18ad4, align 1
  %v6_18ad4 = zext i8 %v4_18ad4 to i32
  %v3_18ad8 = and i1 %v5_18ac8, %v2_18ac0
  br i1 %v3_18ad8, label %bb127, label %bb128

bb127:                                            ; preds = %bb126
  store i32 24, i32* @lr, align 4
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  %v0_18ae018 = phi i32 [ %v27_18760, %bb126 ], [ 24, %bb127 ]
  %v2_18adc = xor i1 %v5_18ac8, true
  %v3_18adc = or i1 %v7_18abc, %v2_18adc
  br i1 %v3_18adc, label %bb129, label %bb130

bb129:                                            ; preds = %bb128
  store i32 32, i32* @lr, align 4
  br label %bb130

bb130:                                            ; preds = %bb128, %bb129
  %v0_18ae0 = phi i32 [ %v0_18ae018, %bb128 ], [ 32, %bb129 ]
  %v2_18ae0 = sub i32 %v0_18ae0, %v6_18ad4
  store i32 %v2_18ae0, i32* %fp.global-to-local, align 4
  %v9_18ae0 = icmp eq i32 %v0_18ae0, %v6_18ad4
  br i1 %v9_18ae0, label %dec_label_pc_188d0, label %dec_label_pc_18ae8

dec_label_pc_18ae8:                               ; preds = %bb106, %bb130
  %v1_18af4 = phi i32 [ %v2_188c8, %bb106 ], [ %v2_18ae0, %bb130 ]
  %v6_18ae8 = shl i32 %v0_18774, %v1_18af4
  %v1_18aec = sub i32 32, %v1_18af4
  %v7_18af0 = lshr i32 %v0_18784, %v1_18aec
  %v8_18af0 = or i32 %v7_18af0, %v6_18ae8
  store i32 %v8_18af0, i32* %r8.global-to-local, align 4
  %v6_18af4 = shl i32 %v0_1877c, %v1_18af4
  %v6_18af8 = lshr i32 %v0_1877c, %v1_18aec
  store i32 %v6_18af8, i32* @r4, align 4
  %v7_18afc = lshr i32 %v0_18788, %v1_18aec
  %v8_18afc = or i32 %v7_18afc, %v6_18af4
  %v3_18b00 = udiv i32 %v8_18af0, 65536
  store i32 %v3_18b00, i32* %sl.global-to-local, align 4
  store i32 %v3_18b00, i32* @r1, align 4
  store i32 %v6_18af8, i32* @r0, align 4
  %v0_18b10 = call i32 @function_133e8()
  %v0_18b1c = load i32, i32* @r4, align 4
  %v2_18b20 = call i32 @function_134e4(i32 %v0_18b1c, i32 %v3_18b00)
  %v0_18b24 = load i32, i32* %r8.global-to-local, align 4
  %v3_18b2c = urem i32 %v0_18b24, 65536
  store i32 %v3_18b2c, i32* @r7, align 4
  %v2_18b30 = mul i32 %v3_18b2c, %v0_18b10
  %v3_18b38 = udiv i32 %v8_18afc, 65536
  %v4_18b3c = mul nuw i32 %v3_18b00, 65536
  %v5_18b3c = or i32 %v4_18b3c, %v3_18b38
  %v9_18b40 = icmp eq i32 %v2_18b30, %v5_18b3c
  %v0_18b44 = load i32, i32* @r5, align 4
  %v1_18b44 = load i32, i32* %fp.global-to-local, align 4
  %v2_18b44 = add i32 %v1_18b44, -1
  %v3_18b44 = lshr i32 -2147483648, %v2_18b44
  %v4_18b44 = and i32 %v3_18b44, %v0_18b44
  %v6_18b44 = shl i32 %v0_18b44, %v1_18b44
  store i32 %v6_18b44, i32* @r5, align 4
  %v2_18b48 = icmp eq i32 %v4_18b44, 0
  %v3_18b48 = or i1 %v9_18b40, %v2_18b48
  br i1 %v3_18b48, label %dec_label_pc_18b60, label %dec_label_pc_18b4c

dec_label_pc_18b4c:                               ; preds = %dec_label_pc_18ae8
  %v2_18b50 = add i32 %v0_18b24, %v5_18b3c
  %v3_18b50 = icmp ult i32 %v2_18b50, %v5_18b3c
  %v1_18b54 = add i32 %v0_18b10, -1
  br i1 %v3_18b50, label %dec_label_pc_18b60, label %dec_label_pc_18c58

dec_label_pc_18b60:                               ; preds = %.thread67, %dec_label_pc_18b4c, %dec_label_pc_18ae8
  %v1_18b60 = phi i32 [ %v5_18b3c, %dec_label_pc_18ae8 ], [ %v2_18b50, %dec_label_pc_18b4c ], [ %v1_18b6022, %.thread67 ]
  %stack_var_-52.0 = phi i32 [ %v0_18b10, %dec_label_pc_18ae8 ], [ %v1_18b54, %dec_label_pc_18b4c ], [ %v4_18c64.v1_18b54, %.thread67 ]
  %v2_18b60 = sub i32 %v1_18b60, %v2_18b30
  store i32 %v2_18b60, i32* @r4, align 4
  %v0_18b64 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_18b64, i32* @r1, align 4
  store i32 %v2_18b60, i32* @r0, align 4
  %v0_18b6c = call i32 @function_133e8()
  store i32 %v0_18b6c, i32* %r6.global-to-local, align 4
  %v0_18b78 = load i32, i32* @r4, align 4
  %v2_18b7c = call i32 @function_134e4(i32 %v0_18b78, i32 %v0_18b64)
  %v0_18b80 = load i32, i32* @r7, align 4
  %v2_18b80 = mul i32 %v0_18b6c, %v0_18b80
  %v3_18b8c = urem i32 %v8_18afc, 65536
  %v4_18b90 = mul i32 %v0_18b64, 65536
  %v5_18b90 = or i32 %v4_18b90, %v3_18b8c
  %tmp162 = icmp ugt i32 %v2_18b80, %v5_18b90
  br i1 %tmp162, label %dec_label_pc_18b9c, label %dec_label_pc_18ba8

dec_label_pc_18b9c:                               ; preds = %dec_label_pc_18b60
  %v1_18b9c = load i32, i32* %r8.global-to-local, align 4
  %v2_18b9c = add i32 %v1_18b9c, %v5_18b90
  %v3_18b9c = icmp ult i32 %v2_18b9c, %v5_18b90
  %v1_18ba0 = add i32 %v0_18b6c, -1
  store i32 %v1_18ba0, i32* %r6.global-to-local, align 4
  br i1 %v3_18b9c, label %dec_label_pc_18ba8, label %dec_label_pc_18c48

dec_label_pc_18ba8:                               ; preds = %dec_label_pc_18b60, %dec_label_pc_18c48, %bb148, %dec_label_pc_18b9c
  %v0_18bb0 = phi i32 [ %v5_18c50, %bb148 ], [ %v1_18ba0, %dec_label_pc_18b9c ], [ %v0_18b6c, %dec_label_pc_18b60 ], [ %v1_18ba0, %dec_label_pc_18c48 ]
  %v1_18bac = phi i32 [ %v6_18c4c, %bb148 ], [ %v2_18b9c, %dec_label_pc_18b9c ], [ %v5_18b90, %dec_label_pc_18b60 ], [ %v2_18b9c, %dec_label_pc_18c48 ]
  store i32 %stack_var_-52.0, i32* %r8.global-to-local, align 4
  %v2_18bac = sub i32 %v1_18bac, %v2_18b80
  %v4_18bb0 = mul i32 %stack_var_-52.0, 65536
  %v5_18bb0 = or i32 %v0_18bb0, %v4_18bb0
  %v3_18bb4 = udiv i32 %v5_18bb0, 65536
  %v0_18bb8 = load i32, i32* @r5, align 4
  %v3_18bb8 = udiv i32 %v0_18bb8, 65536
  %tmp163 = mul i32 %v3_18bb4, -65536
  %v5_18bbc = add i32 %tmp163, -1
  %v6_18bbc = and i32 %v5_18bb0, %v5_18bbc
  %tmp164 = mul i32 %v3_18bb8, -65536
  %v5_18bc0 = add i32 %tmp164, -1
  %v6_18bc0 = and i32 %v0_18bb8, %v5_18bc0
  %v2_18bc4 = mul i32 %v6_18bc0, %v6_18bbc
  %v2_18bc8 = mul i32 %v6_18bc0, %v3_18bb4
  %v2_18bcc = mul i32 %v3_18bb8, %v6_18bbc
  %v2_18bd0 = mul nuw i32 %v3_18bb8, %v3_18bb4
  %v2_18bd4 = add i32 %v2_18bc8, %v2_18bcc
  %v3_18bd4 = icmp ult i32 %v2_18bd4, %v2_18bc8
  br i1 %v3_18bd4, label %bb132, label %bb133

bb132:                                            ; preds = %dec_label_pc_18ba8
  %v2_18bd8 = add i32 %v2_18bd0, 65536
  br label %bb133

bb133:                                            ; preds = %dec_label_pc_18ba8, %bb132
  %v0_18be0 = phi i32 [ %v2_18bd0, %dec_label_pc_18ba8 ], [ %v2_18bd8, %bb132 ]
  %v4_18bdc = mul i32 %v2_18bd4, 65536
  %v5_18bdc = add i32 %v4_18bdc, %v2_18bc4
  %v2_18be0 = and i32 %v2_18bd4, 32768
  %v3_18be0 = icmp ne i32 %v2_18be0, 0
  %v4_18be0 = udiv i32 %v2_18bd4, 65536
  %v7_18be0 = zext i1 %v3_18be0 to i32
  %v6_18be0 = add nuw nsw i32 %v7_18be0, %v4_18be0
  %v8_18be0 = add i32 %v6_18be0, %v0_18be0
  %v3_18be4 = icmp ult i32 %v2_18bac, %v8_18be0
  br i1 %v3_18be4, label %dec_label_pc_18c0c, label %dec_label_pc_18bec

dec_label_pc_18bec:                               ; preds = %bb133
  %v9_18be4 = icmp eq i32 %v2_18bac, %v8_18be0
  %. = zext i1 %v9_18be4 to i32
  %v1_18bf4 = load i32, i32* %sb.global-to-local, align 4
  %v2_18bf4 = load i32, i32* %fp.global-to-local, align 4
  %v7_18bf4 = shl i32 %v1_18bf4, %v2_18bf4
  %v9_18bf4 = icmp uge i32 %v5_18bdc, %v7_18bf4
  %v15_18bf4 = icmp eq i32 %v5_18bdc, %v7_18bf4
  %v2_18bf8 = xor i1 %v9_18bf4, true
  %v3_18bf8 = or i1 %v15_18bf4, %v2_18bf8
  br i1 %v3_18bf8, label %bb136, label %bb137

bb136:                                            ; preds = %dec_label_pc_18bec
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_18bec, %bb136
  %v4_18bfc = phi i32 [ %., %dec_label_pc_18bec ], [ 0, %bb136 ]
  %v2_18bfc = xor i1 %v15_18bf4, true
  %v3_18bfc = and i1 %v9_18bf4, %v2_18bfc
  br i1 %v3_18bfc, label %bb138, label %thread-pre-split

bb138:                                            ; preds = %bb137
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb137, %bb138
  %v2_18c00 = icmp eq i32 %v4_18bfc, 0
  br i1 %v2_18c00, label %bb139, label %dec_label_pc_18c0c

bb139:                                            ; preds = %thread-pre-split
  br label %dec_label_pc_188ec

dec_label_pc_18c0c:                               ; preds = %bb133, %thread-pre-split
  %v1_18c0c = add i32 %v5_18bb0, -1
  br label %dec_label_pc_188ec

dec_label_pc_18c18:                               ; preds = %dec_label_pc_18918
  %v2_18c18 = icmp ugt i32 %v0_18968, 254
  %v7_18c18 = icmp eq i32 %v0_18968, 255
  %v2_18c1c = xor i1 %v7_18c18, true
  %v3_18c1c = and i1 %v2_18c18, %v2_18c1c
  br i1 %v3_18c1c, label %bb140, label %bb141

bb140:                                            ; preds = %dec_label_pc_18c18
  store i32 24, i32* @ip, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_18c18, %bb140
  %v2_18c20 = xor i1 %v2_18c18, true
  %v3_18c20 = or i1 %v7_18c18, %v2_18c20
  br i1 %v3_18c20, label %bb142, label %.thread61

bb142:                                            ; preds = %bb141
  store i32 32, i32* @ip, align 4
  store i32 0, i32* @r3, align 4
  br label %.thread61

.thread61:                                        ; preds = %bb141, %bb142
  br i1 %v3_18c1c, label %bb143, label %._crit_edge

._crit_edge:                                      ; preds = %.thread61
  %v1_18938.pre = load i32, i32* @r3, align 4
  br label %bb118

bb143:                                            ; preds = %.thread61
  br label %bb118

dec_label_pc_18c30:                               ; preds = %dec_label_pc_18798
  %v2_18c30 = icmp ugt i32 %v0_18784, 254
  %v7_18c30 = icmp eq i32 %v0_18784, 255
  %v2_18c34 = xor i1 %v7_18c30, true
  %v3_18c34 = and i1 %v2_18c30, %v2_18c34
  br i1 %v3_18c34, label %bb144, label %bb145

bb144:                                            ; preds = %dec_label_pc_18c30
  store i32 24, i32* @ip, align 4
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_18c30, %bb144
  %v2_18c38 = xor i1 %v2_18c30, true
  %v3_18c38 = or i1 %v7_18c30, %v2_18c38
  br i1 %v3_18c38, label %bb146, label %.thread62

bb146:                                            ; preds = %bb145
  store i32 32, i32* @ip, align 4
  br label %.thread62

.thread62:                                        ; preds = %bb145, %bb146
  br i1 %v3_18c34, label %bb147, label %bb92

bb147:                                            ; preds = %.thread62
  br label %bb92

dec_label_pc_18c48:                               ; preds = %dec_label_pc_18b9c
  %tmp165 = icmp ugt i32 %v2_18b80, %v2_18b9c
  br i1 %tmp165, label %bb148, label %dec_label_pc_18ba8

bb148:                                            ; preds = %dec_label_pc_18c48
  %v6_18c4c = add i32 %v2_18b9c, %v1_18b9c
  %v5_18c50 = add i32 %v0_18b6c, -2
  store i32 %v5_18c50, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18ba8

dec_label_pc_18c58:                               ; preds = %dec_label_pc_18b4c
  %tmp166 = icmp ugt i32 %v2_18b30, %v2_18b50
  br i1 %tmp166, label %bb149, label %.thread67

bb149:                                            ; preds = %dec_label_pc_18c58
  %v5_18c5c = add i32 %v0_18b10, -2
  %v6_18c60 = add i32 %v2_18b50, %v0_18b24
  br label %.thread67

.thread67:                                        ; preds = %dec_label_pc_18c58, %bb149
  %v4_18c6465 = phi i32 [ %v5_18c5c, %bb149 ], [ %v1_18b54, %dec_label_pc_18c58 ]
  %v1_18b6022 = phi i32 [ %v6_18c60, %bb149 ], [ %v2_18b50, %dec_label_pc_18c58 ]
  %v4_18c64.v1_18b54 = select i1 %tmp166, i32 %v4_18c6465, i32 %v1_18b54
  br label %dec_label_pc_18b60

dec_label_pc_18c6c:                               ; preds = %dec_label_pc_18a04
  %tmp167 = icmp ugt i32 %v2_189e8, %v2_18a04
  br i1 %tmp167, label %bb150, label %dec_label_pc_18a10

bb150:                                            ; preds = %dec_label_pc_18c6c
  %v5_18c70 = add i32 %v0_189d4, -2
  store i32 %v5_18c70, i32* %r6.global-to-local, align 4
  %v6_18c74 = add i32 %v2_18a04, %v1_18a04
  br label %dec_label_pc_18a10

dec_label_pc_18c7c:                               ; preds = %dec_label_pc_189bc
  %tmp168 = icmp ugt i32 %v2_189a4, %v2_189bc
  br i1 %tmp168, label %bb151, label %dec_label_pc_189c8

bb151:                                            ; preds = %dec_label_pc_18c7c
  %v5_18c80 = add i32 %v0_18988, -2
  store i32 %v5_18c80, i32* %fp.global-to-local, align 4
  %v6_18c84 = add i32 %v2_189bc, %v0_1899c
  br label %dec_label_pc_189c8

; uselistorder directives
  uselistorder i32 %v5_18c70, { 1, 0 }
  uselistorder i1 %tmp166, { 1, 0 }
  uselistorder i32 %v5_18c50, { 1, 0 }
  uselistorder i1 %v7_18c30, { 1, 0 }
  uselistorder i1 %v7_18c18, { 1, 0 }
  uselistorder i1 %v9_18bf4, { 1, 0 }
  uselistorder i32 %v7_18bf4, { 1, 0 }
  uselistorder i32 %v2_18bd4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18bc8, { 1, 0 }
  uselistorder i32 %v3_18bb8, { 2, 1, 0 }
  uselistorder i32 %v0_18bb8, { 1, 0 }
  uselistorder i32 %v3_18bb4, { 2, 1, 0 }
  uselistorder i32 %v5_18bb0, { 3, 1, 0, 2 }
  uselistorder i32 %v2_18b9c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_18b90, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18b80, { 0, 2, 1 }
  uselistorder i32 %v0_18b6c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_18b64, { 1, 0, 2 }
  uselistorder i32 %v1_18b54, { 1, 0, 2 }
  uselistorder i32 %v2_18b50, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_18b44, { 1, 0 }
  uselistorder i32 %v0_18b44, { 1, 0 }
  uselistorder i32 %v5_18b3c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_18b2c, { 1, 0 }
  uselistorder i32 %v0_18b24, { 1, 2, 0 }
  uselistorder i32 %v0_18b10, { 1, 3, 2, 0 }
  uselistorder i32 %v3_18b00, { 1, 0, 3, 2 }
  uselistorder i32 %v2_18ae0, { 1, 2, 0 }
  uselistorder i32 %v0_18ae0, { 1, 0 }
  uselistorder i32 %v6_18ad4, { 1, 0 }
  uselistorder i1 %v2_18ac0, { 1, 0 }
  uselistorder i1 %v7_18abc, { 1, 2, 0 }
  uselistorder i32 %v5_18a90, { 2, 1, 0 }
  uselistorder i32 %v0_18a70, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_18a4c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_18a40, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18a38, { 2, 0, 1 }
  uselistorder i32 %v0_18a24, { 1, 0, 2, 3 }
  uselistorder i32 %v2_18a04, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_189f8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_189e8, { 0, 2, 1 }
  uselistorder i32 %v0_189d4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_189bc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_189b0, { 2, 3, 1, 0 }
  uselistorder i32 %v2_189a4, { 0, 2, 1 }
  uselistorder i32 %v3_189a0, { 1, 0 }
  uselistorder i32 %v0_1899c, { 1, 2, 0 }
  uselistorder i32 %v0_18988, { 1, 0, 2, 3 }
  uselistorder i32 %v3_18978, { 1, 0 }
  uselistorder i32 %v4_18958, { 1, 0 }
  uselistorder i32 %v2_18950, { 1, 0, 2 }
  uselistorder i32 %v6_18944, { 1, 0 }
  uselistorder i1 %v9_18924, { 1, 0 }
  uselistorder i32 %v0_18968, { 9, 8, 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i1 %v3_188d0, { 1, 0 }
  uselistorder i32 %v2_188c8, { 1, 0, 2 }
  uselistorder i32 %v0_188c8, { 1, 0 }
  uselistorder i32 %v6_188bc, { 1, 0 }
  uselistorder i1 %v2_188a8, { 1, 0 }
  uselistorder i1 %v9_188a4, { 1, 2, 0 }
  uselistorder i1 %v9_1888c, { 1, 0 }
  uselistorder i32 %v5_18860, { 2, 1, 0 }
  uselistorder i32 %v0_18840, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_18838, { 1, 0, 2 }
  uselistorder i32 %v2_1881c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_18810, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18808, { 2, 0, 1 }
  uselistorder i32 %v3_18804, { 1, 0 }
  uselistorder i32 %v0_18800, { 1, 2, 0 }
  uselistorder i32 %v0_187ec, { 1, 0, 2, 3 }
  uselistorder i32 %v3_187dc.c, { 1, 0 }
  uselistorder i32 %v3_187dc, { 1, 0 }
  uselistorder i32 %v6_187c4, { 1, 0 }
  uselistorder i1 %v9_187a4, { 1, 0 }
  uselistorder i32 %v0_18788, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_18784, { 9, 8, 12, 2, 10, 11, 1, 3, 4, 5, 6, 7, 0, 13 }
  uselistorder i32 %v0_1877c, { 5, 6, 4, 1, 7, 2, 3, 0, 8 }
  uselistorder i32 %v0_18774, { 4, 6, 1, 5, 12, 11, 3, 7, 2, 8, 9, 10, 0, 13, 14 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 10, 8, 9, 11 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 0, 5, 6, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 3, 4, 7, 8, 5, 6, 9, 10, 11, 0, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 14, 12, 15 }
  uselistorder i32* %fp.global-to-local, { 0, 8, 9, 1, 6, 2, 4, 3, 5, 7, 10 }
  uselistorder i32 32768, { 3, 4, 2, 6, 5, 1, 0 }
  uselistorder i32 -65536, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 255, { 25, 26, 27, 22, 23, 24, 17, 2, 0, 18, 19, 28, 20, 5, 29, 6, 30, 3, 4, 1, 7, 10, 31, 11, 32, 8, 33, 9, 34, 12, 35, 13, 36, 14, 37, 15, 38, 21, 16, 39 }
  uselistorder i32 254, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32, i32)* @function_134e4, { 10, 9, 8, 7, 6, 5, 4, 3, 20, 19, 18, 17, 16, 15, 14, 13, 1, 0, 12, 2, 11 }
  uselistorder i32 ()* @function_133e8, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19, 18, 17, 16, 15, 14, 13, 3, 2, 1, 0 }
  uselistorder i32 65536, { 4, 3, 192, 6, 7, 5, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 191, 39, 40, 38, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 80, 72, 81, 73, 82, 74, 83, 75, 84, 76, 85, 77, 86, 78, 87, 79, 88, 89, 90, 91, 93, 92, 94, 95, 96, 97, 98, 99, 101, 100, 103, 102, 104, 105, 106, 1, 107, 0, 2, 108, 109, 110, 111, 114, 112, 113, 115, 117, 118, 116, 119, 120, 121, 122, 123, 124, 190, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 148, 147, 150, 151, 152, 155, 154, 153, 157, 156, 159, 158, 160, 161, 164, 163, 162, 166, 165, 168, 167, 169, 170, 171, 173, 174, 175, 172, 177, 178, 179, 176, 180, 182, 183, 184, 181, 186, 187, 188, 185, 189 }
  uselistorder i32 36, { 2, 3, 0, 7, 8, 6, 1, 9, 4, 10, 5, 11 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 36) to i32*), { 1, 2, 0, 4, 5, 3 }
  uselistorder i32* @ip, { 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 13, 14, 15, 16, 17, 18, 19, 38, 20, 21, 39, 0, 40, 41, 23, 24, 22, 42, 43, 44, 45, 46, 83, 84, 85, 86, 47, 25, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 9, 48, 10, 49, 50, 5, 1, 6, 51, 52, 3, 53, 4, 7, 54, 8, 55, 74, 75, 11, 76, 77, 78, 79, 80, 81, 82, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 2, 26, 27, 12, 70, 71, 72, 73 }
  uselistorder i32 16777215, { 0, 7, 2, 6, 1, 8, 4, 11, 5, 9, 3, 10 }
  uselistorder i32 16777214, { 1, 0, 2, 5, 3, 4, 6 }
  uselistorder i32* @r2, { 86, 2, 10, 6, 87, 11, 88, 89, 90, 91, 36, 37, 38, 39, 41, 42, 3, 43, 44, 40, 12, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 45, 121, 7, 13, 167, 168, 169, 170, 171, 172, 105, 46, 122, 123, 124, 125, 53, 106, 126, 47, 107, 108, 109, 110, 131, 132, 133, 134, 135, 127, 128, 129, 130, 136, 4, 137, 138, 139, 140, 141, 60, 61, 142, 143, 144, 145, 146, 147, 148, 149, 150, 111, 151, 152, 153, 154, 155, 156, 157, 158, 159, 29, 30, 31, 32, 33, 34, 35, 112, 14, 15, 16, 27, 28, 5, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 113, 114, 115, 116, 49, 50, 48, 51, 52, 54, 55, 56, 57, 58, 59, 8, 62, 63, 64, 65, 66, 67, 68, 0, 69, 70, 1, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 117, 118, 119, 120, 160, 161, 162, 163, 164, 165, 166, 9 }
  uselistorder i32* @r1, { 74, 75, 76, 77, 78, 79, 80, 81, 82, 0, 83, 84, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 4, 85, 86, 42, 19, 87, 92, 8, 88, 43, 99, 100, 89, 90, 91, 101, 6, 7, 102, 5, 103, 104, 105, 2, 106, 35, 36, 37, 38, 39, 40, 41, 20, 21, 22, 33, 34, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 93, 94, 95, 98, 44, 45, 46, 47, 48, 96, 97, 1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130 }
  uselistorder i32* @r3, { 5, 34, 35, 6, 13, 4, 14, 11, 36, 38, 15, 16, 39, 20, 21, 2, 22, 24, 23, 17, 37, 117, 25, 29, 40, 41, 18, 42, 86, 87, 88, 89, 90, 91, 8, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 0, 109, 110, 111, 7, 112, 113, 114, 115, 116, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 26, 54, 55, 10, 56, 57, 58, 59, 60, 68, 69, 70, 71, 72, 61, 62, 63, 64, 66, 67, 65, 73, 74, 3, 75, 76, 77, 12, 78, 79, 80, 1, 81, 82, 9, 83, 19, 84, 27, 28, 30, 31, 32, 33, 85 }
  uselistorder label %.thread67, { 1, 0 }
  uselistorder label %.thread62, { 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %.thread61, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
  uselistorder label %dec_label_pc_18c0c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %bb133, { 1, 0 }
  uselistorder label %dec_label_pc_18ba8, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18ae8, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %bb124, { 1, 0 }
  uselistorder label %bb122, { 3, 2, 1, 0 }
  uselistorder label %.thread59, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_18a1c, { 1, 0 }
  uselistorder label %dec_label_pc_18a10, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_189c8, { 2, 1, 3, 0 }
  uselistorder label %bb118, { 1, 0, 3, 2 }
  uselistorder label %bb116, { 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_18918, { 1, 0 }
  uselistorder label %dec_label_pc_188ec, { 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_188e4, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_188d0, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %bb97, { 3, 2, 1, 0 }
  uselistorder label %.thread57, { 3, 1, 2, 0 }
  uselistorder label %bb92, { 0, 1, 3, 2 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
}

define i32 @function_18c90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5) local_unnamed_addr {
dec_label_pc_18c90:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_18c90 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18c90, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_18c90
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_18c90, %bb
  %v0_18c94 = load i32, i32* %r1.global-to-local, align 4
  %v2_18c94 = icmp eq i32 %v0_18c94, 0
  br i1 %v2_18c94, label %dec_label_pc_18c9c, label %dec_label_pc_18ccc

dec_label_pc_18c9c:                               ; preds = %bb8
  %tmp = icmp ult i32 %arg3, 16
  br i1 %tmp, label %bb9, label %.thread2

bb9:                                              ; preds = %dec_label_pc_18c9c
  %v6_18ca0 = icmp eq i32 %arg4, 0
  br i1 %v6_18ca0, label %dec_label_pc_18cb0, label %bb10

.thread2:                                         ; preds = %dec_label_pc_18c9c
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18cd8

bb10:                                             ; preds = %bb9
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18cd8

dec_label_pc_18cb0:                               ; preds = %bb9
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18cb0 = mul i32 %arg3, 4
  %v1_18cb4 = load i32, i32* %r0.global-to-local, align 4
  %v2_18cb4 = add i32 %v1_18cb4, %v3_18cb0
  %v1_18cb8 = add i32 %v2_18cb4, 4
  %v2_18cb8 = inttoptr i32 %v1_18cb8 to i32*
  %v3_18cb8 = load i32, i32* %v2_18cb8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_18cb8, i32* %arg5, align 4
  ret i32 0

dec_label_pc_18ccc:                               ; preds = %bb8
  %tmp13 = icmp ult i32 %v0_18c94, 5
  br i1 %tmp13, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_18ccc
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_18ccc, %bb11
  %v0_18cd4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp13, i32 %v0_18cd4)
  br label %dec_label_pc_18cd8

dec_label_pc_18cd8:                               ; preds = %bb10, %.thread2, %bb12
  store i32 2, i32* %r0.global-to-local, align 4
  ret i32 2

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_18cd8, { 2, 0, 1 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_18ce0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5) local_unnamed_addr {
dec_label_pc_18ce0:
  %v2_18ce0 = icmp eq i32 %arg2, 0
  br i1 %v2_18ce0, label %dec_label_pc_18ce8, label %dec_label_pc_18d18

dec_label_pc_18ce8:                               ; preds = %dec_label_pc_18ce0
  %tmp = icmp ult i32 %arg3, 16
  br i1 %tmp, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_18ce8
  %v6_18cec = icmp eq i32 %arg4, 0
  br i1 %v6_18cec, label %dec_label_pc_18cfc, label %bb8

.thread2:                                         ; preds = %dec_label_pc_18ce8
  br label %dec_label_pc_18d24

bb8:                                              ; preds = %bb
  br label %dec_label_pc_18d24

dec_label_pc_18cfc:                               ; preds = %bb
  %v3_18d00 = mul i32 %arg3, 4
  %v2_18d04 = load i32, i32* %arg5, align 4
  %v2_18d08 = add i32 %v3_18d00, %arg1
  %v2_18d10 = add i32 %v2_18d08, 4
  %v3_18d10 = inttoptr i32 %v2_18d10 to i32*
  store i32 %v2_18d04, i32* %v3_18d10, align 4
  ret i32 0

dec_label_pc_18d18:                               ; preds = %dec_label_pc_18ce0
  %tmp11 = icmp ult i32 %arg2, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_18d18
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_18d18, %bb9
  %v0_18d20 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_18d20)
  br label %dec_label_pc_18d24

dec_label_pc_18d24:                               ; preds = %bb8, %.thread2, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32* @lr, { 4, 5, 63, 64, 65, 66, 67, 6, 7, 8, 9, 10, 91, 11, 12, 13, 14, 15, 18, 19, 20, 92, 93, 94, 166, 167, 16, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 0, 3, 105, 106, 107, 108, 163, 164, 165, 109, 110, 111, 89, 90, 112, 113, 114, 115, 116, 117, 118, 119, 71, 72, 120, 121, 168, 169, 122, 123, 124, 125, 86, 126, 73, 17, 74, 75, 76, 77, 1, 81, 82, 83, 84, 85, 78, 79, 80, 24, 25, 26, 27, 28, 29, 30, 32, 31, 2, 33, 34, 35, 36, 21, 22, 23, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 127, 128, 129, 68, 69, 70, 87, 88, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 170 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_18d24, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_18d2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d2c:
  %v1_18d2c = add i32 %arg1, 68
  %v2_18d2c = inttoptr i32 %v1_18d2c to i32*
  %v3_18d2c = load i32, i32* %v2_18d2c, align 4
  ret i32 %v3_18d2c
}

define i32 @function_18d38(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d38:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_18d3c = add i32 %arg1, 8
  %v2_18d3c = inttoptr i32 %v1_18d3c to i32*
  %v3_18d3c = load i32, i32* %v2_18d3c, align 4
  %v2_18d40 = icmp eq i32 %v3_18d3c, 0
  br i1 %v2_18d40, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_18d38
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18d38, %bb
  %v2_18d54 = xor i1 %v2_18d40, true
  call void @__pseudo_cond_branch(i1 %v2_18d54, i32 %v3_18d3c)
  %v1_18d60 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18d60

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 0, 1, 2, 18, 3, 4, 5, 6, 7, 12, 19, 20, 21, 22, 23, 24, 15, 25, 13, 14, 8, 9, 10, 11, 16, 17, 26, 27, 28, 29 }
  uselistorder i1 true, { 0, 5, 6, 1, 2, 13, 14, 9, 10, 11, 3, 4, 12, 15, 16, 17, 18, 7, 8, 23, 24, 31, 32, 27, 28, 29, 19, 20, 30, 33, 34, 35, 21, 22, 25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 45, 46, 49, 47, 50, 51, 52, 53, 54, 55, 56, 158, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 122, 75, 76, 77, 78, 79, 130, 129, 80, 159, 160, 149, 161, 162, 83, 163, 84, 85, 140, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 81, 82, 174, 175, 176, 120, 123, 148, 147, 96, 97, 98, 177, 99, 100, 131, 132, 142, 133, 143, 127, 141, 178, 128, 146, 179, 86, 180, 87, 88, 89, 181, 150, 151, 90, 91, 182, 152, 153, 92, 93, 183, 154, 155, 94, 95, 126, 184, 185, 144, 186, 101, 134, 102, 103, 135, 136, 137, 124, 104, 105, 125, 106, 107, 108, 109, 110, 187, 188, 189, 190, 138, 191, 192, 193, 194, 195, 196, 115, 116, 197, 117, 118, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 114, 214, 215, 216, 217, 218, 219, 113, 220, 121, 139, 145, 119, 221, 111, 112, 157, 222, 156 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_18d64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18d64:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_18d6c = call i32 @function_1a1e0()
  %v0_18d78 = call i32 @function_1a1e0()
  %v3_18d7c = load i32, i32* @r4, align 4
  store i32 %v3_18d7c, i32* %stack_var_-48, align 4
  %v6_18d7c = load i32, i32* @r5, align 4
  %v9_18d7c = load i32, i32* @r6, align 4
  %v12_18d7c = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_23010.696 to i32), i32* %r5.global-to-local, align 4
  %v4_18d8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 32) to i32*), align 4
  %v2_18d90 = icmp eq i32 %v4_18d8c, 0
  store i32 %v0_18d78, i32* %r6.global-to-local, align 4
  %v1_18d9c = add i32 %arg2, -2
  store i32 %v1_18d9c, i32* %r4.global-to-local, align 4
  br i1 %v2_18d90, label %dec_label_pc_18dd4, label %dec_label_pc_18da4

dec_label_pc_18da4:                               ; preds = %dec_label_pc_18d64
  call void @__pseudo_branch(i32 %v4_18d8c)
  %v2_18db4 = icmp eq i32 %v1_18d9c, 0
  br i1 %v2_18db4, label %.thread, label %dec_label_pc_18df4thread-pre-split

.thread:                                          ; preds = %dec_label_pc_18da4
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_18dbc = load i32, i32* %r6.global-to-local, align 4
  %v3_18dbc = add i32 %v2_18dbc, 16
  %v4_18dbc = inttoptr i32 %v3_18dbc to i32*
  store i32 0, i32* %v4_18dbc, align 4
  br label %dec_label_pc_18dc4

dec_label_pc_18dc4:                               ; preds = %.thread, %.thread10, %dec_label_pc_18f6c, %dec_label_pc_18f58, %dec_label_pc_18f34, %dec_label_pc_18f0c, %dec_label_pc_18e0c
  %v0_18dc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_18dcc = load i32, i32* %stack_var_-48, align 4
  store i32 %v2_18dcc, i32* %r4.global-to-local, align 4
  store i32 %v6_18d7c, i32* %r5.global-to-local, align 4
  store i32 %v9_18d7c, i32* %r6.global-to-local, align 4
  store i32 %v12_18d7c, i32* %r7.global-to-local, align 4
  ret i32 %v0_18dc4

dec_label_pc_18dd4:                               ; preds = %dec_label_pc_18d64
  store i32 12, i32* %r2.global-to-local, align 4
  %v4_18ddc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 12) to i32*), align 4
  %v4_18de0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.696 to i32), i32 24) to i32*), align 4
  store i32 %v4_18de0, i32* %r2.global-to-local, align 4
  %v2_18de4 = sub i32 %v4_18ddc, %v4_18de0
  %v3_18de8 = sdiv i32 %v2_18de4, 8
  store i32 %v3_18de8, i32* %stack_var_-52, align 4
  br label %dec_label_pc_18df4

dec_label_pc_18df4thread-pre-split:               ; preds = %dec_label_pc_18da4
  %v3_18df4.pr = load i32, i32* %stack_var_-52, align 4
  br label %dec_label_pc_18df4

dec_label_pc_18df4:                               ; preds = %dec_label_pc_18df4thread-pre-split, %dec_label_pc_18dd4
  %v0_18e38.pre = phi i32 [ %v1_18d9c, %dec_label_pc_18df4thread-pre-split ], [ %v4_18de0, %dec_label_pc_18dd4 ]
  %v1_18dfc = phi i32 [ %v3_18df4.pr, %dec_label_pc_18df4thread-pre-split ], [ %v3_18de8, %dec_label_pc_18dd4 ]
  %v2_18df8 = icmp eq i32 %v1_18dfc, 0
  br i1 %v2_18df8, label %dec_label_pc_18e0c, label %dec_label_pc_18e28.preheader

dec_label_pc_18e28.preheader:                     ; preds = %dec_label_pc_18df4
  %v2_18dfc = add i32 %v1_18dfc, -1
  %v1_18e58 = add i32 %v0_18e38.pre, 8
  br label %dec_label_pc_18e28.outer

dec_label_pc_18e0c.loopexit:                      ; preds = %dec_label_pc_18e84
  br label %dec_label_pc_18e0c

dec_label_pc_18e0c:                               ; preds = %dec_label_pc_18e0c.loopexit, %dec_label_pc_18df4, %dec_label_pc_18f50
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_18e14 = load i32, i32* %r6.global-to-local, align 4
  %v2_18e14 = add i32 %v1_18e14, 16
  %v3_18e14 = inttoptr i32 %v2_18e14 to i32*
  store i32 0, i32* %v3_18e14, align 4
  br label %dec_label_pc_18dc4

dec_label_pc_18e1c:                               ; preds = %dec_label_pc_18e78
  %v3_18e1c = icmp ult i32 %storemerge40, %v0_18e7c
  br i1 %v3_18e1c, label %dec_label_pc_18e24, label %dec_label_pc_18e94

dec_label_pc_18e24:                               ; preds = %dec_label_pc_18e1c
  %v1_18e24 = add nsw i32 %v3_18e30, 1
  br label %dec_label_pc_18e28.outer

dec_label_pc_18e28.outer:                         ; preds = %dec_label_pc_18e24, %dec_label_pc_18e28.preheader
  %v1_18e84.ph = phi i32 [ %v1_18e24, %dec_label_pc_18e24 ], [ 0, %dec_label_pc_18e28.preheader ]
  %v0_18e28.ph = phi i32 [ %v0_18e28, %dec_label_pc_18e24 ], [ %v2_18dfc, %dec_label_pc_18e28.preheader ]
  br label %dec_label_pc_18e28

dec_label_pc_18e28:                               ; preds = %dec_label_pc_18e28.outer, %dec_label_pc_18e8c
  %v0_18e28 = phi i32 [ %v1_18e8c, %dec_label_pc_18e8c ], [ %v0_18e28.ph, %dec_label_pc_18e28.outer ]
  %v2_18e28 = add i32 %v0_18e28, %v1_18e84.ph
  %tmp = icmp slt i32 %v2_18e28, 0
  %v4_18e2c = zext i1 %tmp to i32
  %v5_18e2c = add i32 %v4_18e2c, %v2_18e28
  %v3_18e30 = sdiv i32 %v5_18e2c, 2
  %v3_18e34 = mul i32 %v3_18e30, 8
  %v2_18e38 = add i32 %v3_18e34, %v0_18e38.pre
  %v3_18e38 = inttoptr i32 %v2_18e38 to i32*
  %v4_18e38 = load i32, i32* %v3_18e38, align 4
  %v1_18e3c = and i32 %v4_18e38, 1073741824
  %v2_18e3c = icmp eq i32 %v1_18e3c, 0
  %v2_18e40 = or i32 %v4_18e38, -2147483648
  %tmp82 = bitcast i32 %v4_18e38 to float
  %tmp83 = call float @fabsf(float %tmp82)
  %v2_18e44 = bitcast float %tmp83 to i32
  %storemerge = select i1 %v2_18e3c, i32 %v2_18e44, i32 %v2_18e40
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_18e48 = icmp eq i32 %v2_18dfc, %v3_18e30
  store i32 %v2_18e38, i32* %r7.global-to-local, align 4
  br i1 %v9_18e48, label %dec_label_pc_18e78, label %dec_label_pc_18e58

dec_label_pc_18e58:                               ; preds = %dec_label_pc_18e28
  %v2_18e5c = add i32 %v3_18e34, %v1_18e58
  %v3_18e5c = inttoptr i32 %v2_18e5c to i32*
  %v4_18e5c = load i32, i32* %v3_18e5c, align 4
  %v1_18e64 = and i32 %v4_18e5c, 1073741824
  %v2_18e64 = icmp eq i32 %v1_18e64, 0
  %v2_18e68 = or i32 %v4_18e5c, -2147483648
  %tmp84 = bitcast i32 %v4_18e5c to float
  %tmp85 = call float @fabsf(float %tmp84)
  %v2_18e6c = bitcast float %tmp85 to i32
  %storemerge39 = select i1 %v2_18e64, i32 %v2_18e6c, i32 %v2_18e68
  %v1_18e70 = add i32 %v2_18e5c, -1
  %v2_18e74 = add i32 %storemerge39, %v1_18e70
  br label %dec_label_pc_18e78

dec_label_pc_18e78:                               ; preds = %dec_label_pc_18e28, %dec_label_pc_18e58
  %storemerge40 = phi i32 [ %v2_18e74, %dec_label_pc_18e58 ], [ -1, %dec_label_pc_18e28 ]
  %v2_18e78 = add i32 %storemerge, %v2_18e38
  %v0_18e7c = load i32, i32* %r4.global-to-local, align 4
  %v3_18e7c = icmp ult i32 %v0_18e7c, %v2_18e78
  br i1 %v3_18e7c, label %dec_label_pc_18e84, label %dec_label_pc_18e1c

dec_label_pc_18e84:                               ; preds = %dec_label_pc_18e78
  %v9_18e84 = icmp eq i32 %v3_18e30, %v1_18e84.ph
  br i1 %v9_18e84, label %dec_label_pc_18e0c.loopexit, label %dec_label_pc_18e8c

dec_label_pc_18e8c:                               ; preds = %dec_label_pc_18e84
  %v1_18e8c = add nsw i32 %v3_18e30, -1
  br label %dec_label_pc_18e28

dec_label_pc_18e94:                               ; preds = %dec_label_pc_18e1c
  %v2_18e94 = load i32, i32* %v3_18e38, align 4
  %v1_18e98 = and i32 %v2_18e94, 1073741824
  %v2_18e98 = icmp eq i32 %v1_18e98, 0
  %v2_18e9c = or i32 %v2_18e94, -2147483648
  %tmp86 = bitcast i32 %v2_18e94 to float
  %tmp87 = call float @fabsf(float %tmp86)
  %v2_18ea0 = bitcast float %tmp87 to i32
  %v0_18ea4 = select i1 %v2_18e98, i32 %v2_18ea0, i32 %v2_18e9c
  %v2_18ea4 = add i32 %v0_18ea4, %v2_18e38
  %v1_18ea8 = load i32, i32* %r6.global-to-local, align 4
  %v2_18ea8 = add i32 %v1_18ea8, 72
  %v3_18ea8 = inttoptr i32 %v2_18ea8 to i32*
  store i32 %v2_18ea4, i32* %v3_18ea8, align 4
  %v0_18eac = load i32, i32* %r7.global-to-local, align 4
  %v1_18eac = add i32 %v0_18eac, 4
  %v2_18eac = inttoptr i32 %v1_18eac to i32*
  %v3_18eac = load i32, i32* %v2_18eac, align 4
  %v7_18eb0 = icmp eq i32 %v3_18eac, 1
  br i1 %v7_18eb0, label %.thread10, label %dec_label_pc_18ec4

.thread10:                                        ; preds = %dec_label_pc_18e94
  %v1_18eb0 = add i32 %v3_18eac, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_18ebc = load i32, i32* %r6.global-to-local, align 4
  %v3_18ebc = add i32 %v2_18ebc, 16
  %v4_18ebc = inttoptr i32 %v3_18ebc to i32*
  store i32 %v1_18eb0, i32* %v4_18ebc, align 4
  br label %dec_label_pc_18dc4

dec_label_pc_18ec4:                               ; preds = %dec_label_pc_18e94
  %v1_18ec4 = icmp slt i32 %v3_18eac, 0
  br i1 %v1_18ec4, label %.thread38, label %dec_label_pc_18edc

.thread38:                                        ; preds = %dec_label_pc_18ec4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_18ed0 = load i32, i32* %r6.global-to-local, align 4
  %v5_18ed0 = add i32 %v4_18ed0, 76
  %v6_18ed0 = inttoptr i32 %v5_18ed0 to i32*
  store i32 %v1_18eac, i32* %v6_18ed0, align 4
  %v3_18ed4 = load i32, i32* %r2.global-to-local, align 4
  %v4_18ed4 = load i32, i32* %r6.global-to-local, align 4
  %v5_18ed4 = add i32 %v4_18ed4, 80
  %v6_18ed4 = inttoptr i32 %v5_18ed4 to i32*
  store i32 %v3_18ed4, i32* %v6_18ed4, align 4
  br label %dec_label_pc_18efc

dec_label_pc_18edc:                               ; preds = %dec_label_pc_18ec4
  %v1_18edc = and i32 %v3_18eac, 1073741824
  %v2_18edc = icmp eq i32 %v1_18edc, 0
  %v2_18ee0 = or i32 %v3_18eac, -2147483648
  %tmp88 = bitcast i32 %v3_18eac to float
  %tmp89 = call float @fabsf(float %tmp88)
  %v2_18ee4 = bitcast float %tmp89 to i32
  %storemerge42 = select i1 %v2_18edc, i32 %v2_18ee4, i32 %v2_18ee0
  %v1_18ee8 = add i32 %storemerge42, 4
  %v2_18eec = add i32 %v1_18ee8, %v0_18eac
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_18ef4 = load i32, i32* %r6.global-to-local, align 4
  %v2_18ef4 = add i32 %v1_18ef4, 76
  %v3_18ef4 = inttoptr i32 %v2_18ef4 to i32*
  store i32 %v2_18eec, i32* %v3_18ef4, align 4
  %v0_18ef8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18ef8 = load i32, i32* %r6.global-to-local, align 4
  %v2_18ef8 = add i32 %v1_18ef8, 80
  %v3_18ef8 = inttoptr i32 %v2_18ef8 to i32*
  store i32 %v0_18ef8, i32* %v3_18ef8, align 4
  br label %dec_label_pc_18efc

dec_label_pc_18efc:                               ; preds = %.thread38, %dec_label_pc_18edc
  %v0_18efc = load i32, i32* %r6.global-to-local, align 4
  %v1_18efc = add i32 %v0_18efc, 76
  %v2_18efc = inttoptr i32 %v1_18efc to i32*
  %v3_18efc = load i32, i32* %v2_18efc, align 4
  store i32 %v3_18efc, i32* %r2.global-to-local, align 4
  %v1_18f00 = inttoptr i32 %v3_18efc to i32*
  %v2_18f00 = load i32, i32* %v1_18f00, align 4
  %v1_18f04 = icmp slt i32 %v2_18f00, 0
  br i1 %v1_18f04, label %dec_label_pc_18f28, label %dec_label_pc_18f0c

dec_label_pc_18f0c:                               ; preds = %dec_label_pc_18efc
  %v1_18f0c = and i32 %v2_18f00, 1073741824
  %v2_18f0c = icmp eq i32 %v1_18f0c, 0
  %v2_18f10 = or i32 %v2_18f00, -2147483648
  %tmp90 = bitcast i32 %v2_18f00 to float
  %tmp91 = call float @fabsf(float %tmp90)
  %v2_18f14 = bitcast float %tmp91 to i32
  %v0_18f18 = select i1 %v2_18f0c, i32 %v2_18f14, i32 %v2_18f10
  %v2_18f18 = add i32 %v0_18f18, %v3_18efc
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_18f20 = add i32 %v0_18efc, 16
  %v3_18f20 = inttoptr i32 %v2_18f20 to i32*
  store i32 %v2_18f18, i32* %v3_18f20, align 4
  br label %dec_label_pc_18dc4

dec_label_pc_18f28:                               ; preds = %dec_label_pc_18efc
  %v3_18f28 = udiv i32 %v2_18f00, 16777216
  %v1_18f2c = urem i32 %v3_18f28, 16
  %v2_18f2c = icmp eq i32 %v1_18f2c, 0
  br i1 %v2_18f2c, label %dec_label_pc_18f34, label %dec_label_pc_18f48

dec_label_pc_18f34:                               ; preds = %dec_label_pc_18f28
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18f3c = load i32, i32* %r5.global-to-local, align 4
  %v2_18f3c = add i32 %v0_18f3c, -38600
  %v2_18f40 = add i32 %v0_18efc, 16
  %v3_18f40 = inttoptr i32 %v2_18f40 to i32*
  store i32 %v2_18f3c, i32* %v3_18f40, align 4
  br label %dec_label_pc_18dc4

dec_label_pc_18f48:                               ; preds = %dec_label_pc_18f28
  %v7_18f48 = icmp eq i32 %v1_18f2c, 1
  br i1 %v7_18f48, label %dec_label_pc_18f6c, label %dec_label_pc_18f50

dec_label_pc_18f50:                               ; preds = %dec_label_pc_18f48
  %v7_18f50 = icmp eq i32 %v1_18f2c, 2
  br i1 %v7_18f50, label %dec_label_pc_18f58, label %dec_label_pc_18e0c

dec_label_pc_18f58:                               ; preds = %dec_label_pc_18f50
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18f60 = load i32, i32* %r5.global-to-local, align 4
  %v2_18f60 = add i32 %v0_18f60, -38616
  %v2_18f64 = add i32 %v0_18efc, 16
  %v3_18f64 = inttoptr i32 %v2_18f64 to i32*
  store i32 %v2_18f60, i32* %v3_18f64, align 4
  br label %dec_label_pc_18dc4

dec_label_pc_18f6c:                               ; preds = %dec_label_pc_18f48
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18f74 = load i32, i32* %r5.global-to-local, align 4
  %v2_18f74 = add i32 %v0_18f74, -38608
  %v2_18f78 = add i32 %v0_18efc, 16
  %v3_18f78 = inttoptr i32 %v2_18f78 to i32*
  store i32 %v2_18f74, i32* %v3_18f78, align 4
  br label %dec_label_pc_18dc4

; uselistorder directives
  uselistorder i32 %v1_18f2c, { 2, 1, 0 }
  uselistorder i32 %v0_18efc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_18eac, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18e7c, { 1, 0 }
  uselistorder i32 %v3_18e34, { 1, 0 }
  uselistorder i32 %v3_18e30, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_18e28, { 1, 0 }
  uselistorder i32 %v0_18e28, { 1, 0 }
  uselistorder i32 %v2_18dfc, { 1, 0 }
  uselistorder i32 %v0_18e38.pre, { 1, 0 }
  uselistorder i32 %v3_18de8, { 1, 0 }
  uselistorder i32 %v1_18d9c, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 11, 12, 13, 14 }
  uselistorder i32 16777216, { 6, 1, 7, 0, 2, 3, 8, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 47, 45, 48, 46, 51, 49, 52, 50, 54, 53, 56, 55 }
  uselistorder i32 80, { 2, 3, 5, 4, 7, 1, 6, 0, 8 }
  uselistorder i32 76, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 5, { 34, 0, 1, 32, 4, 2, 33, 17, 68, 18, 35, 20, 37, 19, 36, 6, 5, 57, 21, 58, 22, 59, 23, 60, 24, 61, 25, 62, 26, 63, 64, 38, 39, 40, 41, 27, 28, 29, 30, 42, 8, 43, 9, 44, 45, 10, 11, 46, 12, 47, 48, 49, 13, 50, 51, 52, 14, 53, 15, 54, 16, 55, 7, 56, 65, 31, 66, 67, 3 }
  uselistorder i32 4, { 205, 206, 207, 9, 208, 10, 209, 360, 11, 210, 361, 362, 495, 242, 243, 244, 147, 422, 423, 424, 65, 425, 426, 427, 428, 363, 364, 365, 211, 366, 367, 368, 369, 13, 12, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 0, 66, 67, 526, 1, 524, 525, 97, 245, 212, 213, 527, 528, 529, 14, 429, 430, 3, 15, 2, 16, 17, 18, 19, 20, 496, 497, 498, 499, 500, 501, 502, 504, 505, 503, 506, 507, 508, 21, 509, 68, 510, 202, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 22, 23, 261, 246, 148, 24, 381, 149, 382, 150, 384, 385, 386, 387, 388, 389, 390, 431, 4, 25, 432, 433, 434, 435, 436, 437, 438, 455, 456, 457, 458, 459, 463, 464, 98, 439, 440, 441, 442, 443, 444, 451, 452, 453, 454, 445, 446, 447, 448, 449, 450, 460, 461, 462, 247, 248, 61, 60, 62, 465, 530, 151, 531, 532, 63, 152, 466, 467, 204, 26, 27, 468, 469, 203, 28, 29, 99, 214, 74, 30, 235, 100, 236, 153, 237, 392, 393, 31, 394, 81, 102, 103, 215, 216, 238, 239, 218, 219, 220, 105, 232, 233, 234, 217, 104, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 240, 241, 70, 69, 395, 79, 396, 32, 397, 72, 71, 398, 33, 391, 399, 400, 405, 106, 406, 107, 407, 108, 408, 109, 409, 110, 410, 111, 412, 101, 413, 414, 411, 401, 112, 402, 403, 404, 252, 154, 253, 64, 34, 254, 255, 35, 256, 75, 113, 114, 257, 258, 333, 262, 249, 250, 251, 36, 115, 37, 38, 116, 117, 118, 155, 259, 119, 260, 39, 263, 156, 264, 265, 73, 266, 267, 268, 157, 158, 120, 269, 121, 270, 82, 271, 272, 273, 159, 275, 160, 161, 274, 122, 276, 83, 277, 278, 162, 280, 163, 164, 279, 123, 84, 281, 165, 166, 167, 282, 283, 284, 124, 85, 168, 169, 170, 285, 286, 287, 125, 86, 288, 289, 171, 292, 172, 173, 290, 291, 5, 126, 293, 87, 294, 295, 296, 174, 298, 175, 176, 297, 6, 127, 128, 299, 88, 300, 301, 302, 303, 177, 304, 305, 306, 178, 179, 307, 308, 129, 309, 7, 89, 310, 130, 311, 312, 313, 314, 180, 315, 316, 317, 181, 182, 318, 319, 131, 320, 8, 90, 321, 132, 322, 323, 324, 325, 326, 183, 329, 184, 185, 134, 330, 327, 328, 133, 91, 331, 92, 332, 334, 335, 336, 337, 338, 136, 339, 137, 340, 186, 343, 187, 188, 138, 344, 341, 342, 135, 93, 345, 94, 346, 189, 40, 347, 190, 41, 348, 191, 42, 349, 192, 43, 350, 193, 44, 351, 194, 80, 45, 352, 353, 195, 46, 354, 196, 47, 355, 197, 48, 356, 198, 49, 357, 199, 50, 358, 200, 51, 359, 470, 383, 415, 416, 417, 418, 419, 420, 201, 421, 471, 472, 473, 95, 474, 140, 475, 141, 476, 477, 478, 96, 479, 142, 480, 481, 482, 143, 483, 144, 484, 52, 53, 54, 55, 56, 485, 486, 487, 57, 78, 77, 76, 488, 58, 59, 145, 489, 139, 490, 491, 492, 146, 493, 494, 533 }
  uselistorder i32 -2147483648, { 4, 5, 6, 7, 8, 2, 3, 9, 10, 11, 12, 0, 1 }
  uselistorder i32 1073741824, { 5, 6, 7, 8, 9, 4, 0, 3, 2, 1 }
  uselistorder i32 2, { 209, 8, 0, 1, 210, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 349, 350, 19, 334, 20, 21, 22, 85, 23, 24, 25, 26, 202, 27, 109, 203, 2, 351, 352, 204, 205, 83, 198, 192, 193, 194, 89, 195, 28, 84, 88, 90, 196, 3, 110, 206, 333, 320, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 335, 336, 238, 42, 201, 43, 44, 45, 46, 47, 48, 200, 49, 50, 51, 52, 53, 112, 113, 111, 91, 92, 211, 114, 212, 213, 115, 227, 120, 228, 117, 321, 116, 229, 118, 220, 119, 226, 214, 215, 216, 217, 218, 219, 100, 221, 101, 222, 102, 223, 103, 224, 104, 225, 97, 54, 55, 322, 324, 325, 121, 207, 122, 326, 123, 327, 124, 328, 125, 329, 330, 126, 331, 128, 127, 323, 231, 232, 233, 56, 129, 130, 131, 234, 132, 235, 199, 241, 133, 134, 135, 136, 137, 230, 138, 139, 141, 142, 143, 236, 140, 144, 145, 146, 237, 93, 96, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 148, 250, 147, 251, 252, 253, 254, 256, 255, 149, 105, 257, 258, 259, 260, 262, 261, 151, 150, 263, 152, 153, 106, 264, 265, 154, 155, 107, 266, 267, 268, 269, 272, 270, 271, 4, 57, 58, 59, 60, 61, 62, 157, 156, 273, 274, 275, 276, 278, 277, 5, 63, 64, 65, 66, 67, 68, 159, 158, 279, 280, 281, 282, 283, 284, 161, 285, 162, 286, 163, 287, 69, 6, 70, 71, 72, 73, 74, 164, 288, 160, 289, 290, 291, 292, 293, 294, 166, 295, 167, 296, 168, 297, 75, 7, 76, 77, 78, 79, 80, 169, 298, 165, 299, 300, 86, 301, 302, 306, 303, 304, 305, 171, 170, 307, 308, 87, 309, 310, 173, 311, 174, 312, 316, 313, 314, 315, 175, 317, 172, 318, 98, 319, 176, 99, 332, 208, 94, 178, 179, 337, 180, 181, 338, 182, 183, 339, 184, 185, 340, 186, 187, 341, 188, 189, 342, 95, 343, 344, 108, 345, 190, 346, 81, 82, 191, 347, 177, 348, 197 }
  uselistorder i32 -1, { 204, 205, 137, 206, 203, 207, 106, 107, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 109, 110, 220, 221, 222, 223, 108, 160, 342, 224, 225, 226, 227, 228, 229, 230, 0, 159, 157, 111, 112, 202, 231, 142, 143, 1, 353, 354, 232, 138, 139, 2, 161, 347, 233, 348, 3, 174, 113, 4, 162, 365, 234, 114, 115, 355, 163, 356, 235, 201, 182, 183, 116, 117, 181, 178, 179, 180, 357, 358, 200, 164, 165, 166, 359, 360, 199, 236, 147, 378, 237, 238, 239, 148, 144, 145, 146, 176, 240, 379, 241, 242, 243, 244, 245, 246, 343, 140, 167, 349, 168, 350, 247, 364, 141, 184, 5, 248, 249, 250, 6, 251, 175, 366, 118, 119, 252, 253, 169, 158, 254, 255, 120, 121, 256, 122, 123, 257, 367, 368, 258, 259, 260, 261, 7, 8, 131, 135, 9, 10, 136, 132, 173, 177, 262, 14, 263, 15, 264, 361, 11, 265, 185, 344, 16, 266, 127, 17, 267, 268, 13, 269, 270, 271, 272, 12, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 345, 170, 346, 18, 292, 293, 151, 152, 149, 150, 294, 295, 19, 296, 155, 156, 153, 154, 297, 20, 298, 172, 362, 128, 21, 22, 299, 134, 23, 24, 25, 26, 27, 171, 351, 133, 300, 301, 124, 125, 126, 28, 29, 30, 33, 32, 31, 35, 34, 36, 37, 38, 302, 39, 40, 41, 42, 43, 129, 44, 45, 46, 47, 48, 49, 50, 303, 51, 186, 352, 52, 53, 54, 304, 55, 56, 57, 58, 59, 305, 60, 61, 62, 306, 63, 64, 65, 307, 66, 67, 68, 69, 70, 308, 71, 72, 73, 74, 75, 309, 76, 77, 78, 310, 79, 80, 311, 312, 363, 81, 130, 369, 370, 191, 371, 313, 84, 314, 85, 315, 86, 316, 87, 317, 88, 318, 192, 372, 188, 373, 319, 89, 320, 90, 321, 91, 322, 92, 323, 93, 324, 94, 325, 95, 326, 96, 327, 97, 328, 98, 329, 99, 330, 190, 374, 101, 331, 102, 332, 100, 333, 103, 334, 104, 335, 187, 375, 336, 105, 337, 338, 193, 82, 339, 83, 340, 189, 376, 341, 194, 377, 195, 196, 197, 198 }
  uselistorder i32 8, { 7, 96, 8, 97, 40, 38, 159, 41, 160, 39, 161, 43, 45, 46, 98, 42, 99, 44, 9, 89, 100, 162, 225, 104, 54, 70, 47, 180, 181, 182, 30, 183, 163, 164, 165, 90, 91, 10, 71, 11, 31, 244, 245, 243, 246, 247, 248, 249, 226, 227, 228, 229, 230, 231, 232, 12, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 72, 184, 73, 74, 166, 167, 168, 169, 48, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 210, 75, 218, 76, 196, 197, 198, 199, 77, 207, 78, 200, 201, 202, 203, 204, 205, 206, 34, 211, 212, 213, 214, 215, 216, 217, 35, 250, 251, 252, 108, 109, 79, 88, 36, 13, 14, 25, 15, 87, 37, 16, 17, 26, 18, 55, 101, 102, 19, 20, 21, 170, 80, 103, 92, 53, 171, 172, 173, 27, 28, 175, 22, 81, 176, 177, 174, 105, 106, 82, 107, 23, 83, 110, 56, 111, 112, 113, 114, 115, 116, 119, 117, 118, 3, 120, 122, 121, 4, 123, 124, 125, 126, 127, 128, 129, 5, 130, 131, 132, 133, 134, 135, 136, 6, 137, 138, 139, 141, 140, 142, 143, 144, 146, 145, 57, 147, 58, 148, 59, 149, 60, 150, 61, 151, 62, 152, 63, 153, 64, 154, 65, 155, 66, 156, 67, 157, 84, 158, 0, 1, 86, 24, 178, 85, 179, 2, 32, 49, 50, 33, 51, 52, 219, 93, 94, 220, 221, 222, 68, 223, 29, 95, 69, 224 }
  uselistorder i32 24, { 5, 71, 72, 8, 73, 6, 9, 7, 12, 13, 43, 44, 14, 10, 11, 92, 93, 16, 94, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 17, 96, 40, 41, 18, 45, 59, 74, 75, 60, 46, 47, 48, 49, 50, 51, 52, 53, 54, 19, 55, 20, 56, 21, 57, 58, 61, 62, 76, 77, 78, 79, 22, 23, 0, 24, 25, 26, 63, 64, 27, 28, 29, 30, 31, 1, 32, 2, 33, 34, 3, 65, 35, 68, 66, 67, 36, 4, 69, 37, 70, 80, 38, 81, 15, 42, 39, 82 }
  uselistorder i32 12, { 4, 12, 13, 103, 104, 148, 149, 150, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 14, 15, 86, 16, 105, 106, 107, 108, 17, 109, 110, 18, 122, 127, 19, 111, 112, 113, 114, 121, 115, 116, 117, 118, 119, 120, 20, 123, 124, 21, 125, 126, 22, 5, 49, 23, 8, 32, 33, 43, 44, 87, 88, 45, 35, 41, 42, 34, 36, 37, 38, 39, 40, 46, 89, 90, 91, 6, 92, 93, 94, 95, 97, 98, 99, 102, 101, 96, 24, 25, 47, 48, 3, 26, 27, 28, 29, 100, 50, 9, 51, 52, 53, 54, 55, 56, 57, 58, 59, 30, 60, 61, 62, 63, 64, 31, 65, 66, 67, 68, 69, 70, 10, 71, 72, 73, 74, 75, 76, 11, 77, 78, 79, 80, 81, 82, 83, 84, 7, 85, 0, 1, 2, 128, 129, 130, 131, 132, 134, 133, 135 }
  uselistorder i32 16, { 112, 113, 114, 8, 115, 116, 117, 118, 0, 1, 212, 55, 57, 213, 58, 214, 56, 61, 62, 119, 63, 120, 59, 60, 9, 10, 215, 216, 228, 229, 217, 52, 218, 265, 266, 267, 268, 108, 253, 254, 255, 256, 257, 258, 259, 260, 109, 261, 262, 263, 264, 110, 73, 219, 230, 49, 54, 11, 12, 231, 232, 13, 99, 14, 53, 233, 15, 16, 100, 17, 18, 19, 101, 20, 21, 22, 102, 23, 24, 125, 74, 131, 132, 133, 134, 135, 25, 50, 26, 27, 2, 28, 29, 30, 51, 31, 3, 32, 33, 34, 75, 220, 76, 121, 122, 77, 123, 221, 124, 223, 224, 225, 111, 78, 79, 35, 103, 36, 37, 80, 222, 81, 126, 64, 127, 82, 83, 128, 84, 85, 86, 87, 88, 129, 89, 130, 90, 226, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 91, 146, 147, 92, 148, 65, 149, 93, 150, 151, 94, 152, 66, 153, 154, 155, 156, 157, 38, 158, 159, 4, 67, 160, 161, 162, 163, 164, 165, 166, 5, 95, 167, 168, 169, 39, 40, 170, 171, 104, 47, 41, 42, 105, 172, 96, 173, 174, 6, 69, 175, 68, 176, 177, 178, 43, 44, 179, 180, 106, 48, 45, 46, 107, 181, 97, 182, 183, 7, 71, 184, 70, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 208, 210, 211, 227, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 98, 244, 245, 246, 247, 72, 248, 249, 250, 251, 252 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 1, 5, 2, 3, 7, 8, 9, 10, 11, 12, 13, 4, 6 }
  uselistorder i32 -2, { 27, 0, 1, 6, 7, 3, 2, 5, 4, 8, 9, 14, 15, 11, 10, 13, 12, 26, 25, 16, 60, 24, 23, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 48, 49, 51, 52, 53, 50, 58, 59, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 22, 21, 20, 19, 18, 17 }
  uselistorder i32 32, { 55, 76, 77, 78, 53, 79, 80, 81, 63, 54, 64, 65, 66, 67, 49, 88, 68, 69, 82, 83, 4, 5, 70, 84, 85, 6, 86, 87, 111, 102, 103, 104, 50, 105, 51, 106, 52, 107, 7, 108, 109, 110, 9, 8, 89, 90, 96, 48, 97, 91, 92, 93, 94, 95, 72, 98, 56, 71, 11, 10, 13, 12, 15, 14, 17, 16, 62, 19, 18, 20, 57, 21, 73, 22, 75, 74, 23, 24, 25, 0, 26, 1, 27, 2, 28, 3, 29, 30, 31, 32, 34, 33, 36, 35, 38, 37, 39, 41, 40, 58, 99, 59, 100, 60, 101, 43, 42, 45, 44, 46, 47, 61 }
  uselistorder i32 ptrtoint (i32* @global_var_23010.696 to i32), { 1, 2, 4, 5, 6, 0, 3, 7 }
  uselistorder i32* @r7, { 26, 223, 224, 225, 226, 227, 5, 228, 229, 230, 231, 232, 233, 234, 235, 236, 27, 28, 29, 30, 31, 6, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 237, 238, 239, 240, 83, 84, 85, 86, 286, 287, 2, 288, 241, 242, 243, 245, 244, 246, 0, 247, 22, 248, 249, 250, 372, 289, 290, 291, 87, 88, 292, 293, 294, 295, 296, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 251, 252, 253, 254, 255, 256, 257, 258, 259, 3, 1, 260, 261, 262, 263, 264, 297, 298, 299, 300, 301, 302, 311, 312, 313, 317, 318, 7, 303, 304, 308, 309, 310, 8, 305, 306, 307, 9, 314, 315, 316, 373, 374, 113, 114, 115, 116, 319, 320, 321, 322, 323, 324, 325, 23, 326, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 77, 79, 80, 68, 70, 10, 64, 65, 66, 67, 69, 78, 71, 72, 73, 74, 75, 76, 81, 82, 265, 266, 267, 268, 269, 270, 271, 92, 93, 94, 95, 96, 97, 98, 99, 100, 126, 127, 11, 128, 129, 130, 131, 132, 89, 90, 91, 101, 102, 103, 104, 105, 12, 106, 107, 108, 109, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 13, 141, 14, 142, 143, 144, 145, 146, 15, 147, 148, 149, 17, 16, 150, 151, 152, 153, 154, 19, 18, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 24, 169, 170, 171, 172, 173, 174, 25, 175, 176, 177, 178, 179, 180, 181, 4, 182, 183, 184, 185, 187, 186, 188, 189, 190, 191, 192, 193, 194, 197, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 274, 272, 273, 21, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 20, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361 }
  uselistorder i32* @r6, { 25, 26, 27, 483, 484, 485, 98, 99, 4, 100, 365, 366, 367, 368, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 3, 296, 297, 369, 5, 370, 371, 372, 374, 373, 375, 376, 377, 28, 29, 378, 379, 380, 381, 382, 383, 384, 385, 386, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 298, 299, 300, 301, 101, 102, 103, 104, 20, 21, 22, 30, 302, 303, 304, 305, 306, 307, 0, 308, 309, 310, 387, 388, 389, 390, 391, 6, 404, 405, 410, 411, 412, 413, 414, 415, 7, 392, 393, 394, 395, 400, 401, 402, 403, 396, 397, 398, 399, 406, 407, 408, 409, 496, 497, 311, 312, 313, 314, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 84, 315, 316, 317, 318, 319, 320, 321, 85, 61, 322, 86, 87, 88, 89, 90, 65, 66, 82, 83, 62, 63, 64, 9, 8, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 95, 96, 97, 323, 324, 325, 2, 1, 326, 327, 328, 329, 330, 331, 332, 16, 333, 334, 335, 336, 337, 344, 345, 346, 347, 348, 349, 350, 351, 338, 339, 340, 341, 342, 343, 110, 111, 10, 112, 113, 114, 115, 116, 117, 118, 119, 105, 106, 107, 108, 109, 120, 121, 122, 123, 124, 125, 126, 11, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 17, 137, 138, 139, 12, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 23, 178, 179, 180, 181, 184, 182, 183, 185, 186, 187, 188, 189, 190, 191, 24, 192, 193, 194, 195, 198, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 13, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 19, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 18, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 14, 15, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482 }
  uselistorder i32* @r5, { 26, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 27, 28, 29, 30, 31, 32, 33, 34, 3, 35, 807, 808, 809, 142, 143, 144, 145, 533, 4, 534, 535, 537, 538, 536, 539, 540, 541, 542, 5, 543, 544, 545, 546, 6, 547, 548, 549, 550, 551, 810, 821, 822, 636, 637, 638, 639, 7, 640, 641, 36, 37, 642, 0, 643, 644, 645, 646, 647, 648, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 552, 553, 554, 555, 146, 147, 148, 149, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 1, 568, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 8, 671, 672, 673, 674, 675, 676, 677, 686, 687, 688, 689, 690, 691, 659, 660, 669, 670, 661, 662, 9, 663, 664, 665, 666, 667, 668, 678, 679, 10, 680, 681, 682, 683, 684, 685, 692, 11, 693, 694, 823, 824, 187, 188, 189, 190, 695, 12, 696, 697, 698, 699, 700, 569, 570, 571, 572, 573, 574, 701, 702, 703, 704, 705, 706, 707, 708, 709, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 575, 576, 139, 140, 141, 136, 137, 138, 577, 578, 579, 580, 581, 591, 592, 593, 594, 595, 596, 597, 603, 604, 605, 606, 598, 599, 600, 601, 602, 582, 583, 584, 585, 586, 587, 588, 589, 590, 154, 155, 156, 157, 158, 159, 160, 161, 162, 607, 608, 609, 150, 151, 152, 153, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 2, 191, 192, 193, 194, 195, 23, 196, 197, 198, 199, 200, 201, 202, 24, 203, 25, 204, 205, 13, 206, 14, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 15, 330, 335, 336, 337, 338, 339, 340, 341, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 439, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 472, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 16, 610, 611, 612, 613, 614, 615, 17, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 710, 711, 635, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 18, 743, 744, 745, 746, 747, 748, 749, 750, 19, 751, 752, 20, 753, 754, 21, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 22, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806 }
  uselistorder i32* @r4, { 51, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 52, 53, 54, 55, 56, 12, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 522, 523, 13, 70, 71, 69, 72, 50, 73, 41, 74, 524, 525, 844, 845, 846, 526, 527, 113, 114, 115, 116, 658, 659, 528, 529, 530, 531, 533, 534, 535, 532, 536, 537, 0, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 8, 847, 848, 849, 850, 862, 863, 864, 851, 859, 860, 861, 660, 661, 662, 663, 566, 567, 664, 665, 667, 666, 75, 14, 76, 77, 865, 866, 668, 669, 670, 671, 672, 673, 674, 675, 676, 852, 853, 1, 854, 855, 2, 856, 3, 857, 858, 78, 79, 551, 554, 555, 80, 552, 553, 117, 118, 677, 678, 679, 680, 48, 49, 681, 682, 683, 684, 685, 686, 164, 165, 166, 556, 557, 558, 559, 560, 561, 562, 687, 688, 689, 568, 569, 570, 292, 293, 294, 690, 691, 571, 692, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 693, 727, 694, 695, 696, 697, 713, 715, 714, 15, 716, 717, 722, 723, 724, 725, 7, 726, 16, 698, 699, 700, 701, 702, 703, 704, 705, 710, 711, 712, 706, 707, 708, 709, 718, 719, 720, 721, 728, 729, 730, 731, 119, 120, 732, 733, 734, 735, 736, 737, 738, 867, 868, 869, 870, 188, 189, 190, 191, 192, 193, 739, 740, 741, 9, 742, 586, 587, 588, 589, 590, 591, 194, 195, 196, 197, 198, 743, 744, 17, 745, 746, 747, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 748, 749, 750, 751, 111, 112, 592, 593, 594, 595, 102, 103, 104, 105, 106, 107, 108, 109, 110, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 614, 615, 616, 617, 618, 619, 620, 621, 622, 629, 630, 631, 632, 633, 634, 10, 623, 624, 625, 626, 627, 628, 610, 611, 612, 613, 137, 138, 139, 40, 4, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 470, 471, 635, 636, 637, 638, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 18, 19, 20, 21, 22, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 199, 200, 11, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 23, 264, 24, 265, 266, 269, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 5, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 6, 298, 299, 300, 301, 302, 303, 304, 305, 25, 306, 26, 307, 308, 27, 309, 310, 312, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 28, 332, 29, 333, 30, 334, 31, 335, 336, 348, 349, 337, 338, 32, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 33, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 34, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 35, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 36, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 37, 452, 453, 456, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 38, 474, 475, 478, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 752, 753, 754, 563, 564, 565, 639, 640, 641, 642, 645, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 42, 784, 785, 47, 786, 787, 788, 789, 46, 39, 790, 791, 792, 793, 794, 795, 796, 45, 797, 798, 799, 44, 800, 801, 802, 43, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843 }
  uselistorder i32 ()* @function_1a1e0, { 1, 0 }
  uselistorder i32 1, { 844, 845, 846, 847, 694, 693, 158, 160, 161, 159, 162, 848, 221, 849, 850, 459, 215, 214, 1022, 1023, 1024, 404, 1025, 337, 338, 340, 339, 336, 851, 852, 853, 854, 405, 366, 367, 369, 368, 365, 255, 695, 335, 1128, 357, 406, 0, 407, 173, 175, 172, 174, 372, 373, 855, 469, 468, 519, 696, 260, 697, 199, 198, 698, 331, 334, 330, 332, 333, 470, 1278, 1129, 1130, 1026, 1027, 685, 222, 520, 471, 521, 1, 2, 877, 703, 702, 701, 700, 699, 363, 362, 1131, 392, 705, 704, 256, 257, 1132, 1133, 460, 1134, 391, 706, 310, 308, 315, 316, 311, 312, 313, 314, 309, 707, 1028, 708, 276, 275, 274, 709, 289, 290, 291, 292, 293, 1029, 1030, 408, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 522, 1040, 1041, 1042, 710, 15, 14, 16, 409, 259, 258, 523, 1294, 3, 4, 711, 712, 118, 713, 524, 714, 341, 342, 525, 79, 81, 80, 82, 715, 84, 85, 83, 410, 856, 526, 78, 473, 472, 527, 716, 317, 1295, 396, 717, 61, 62, 69, 60, 66, 65, 64, 63, 67, 68, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 42, 43, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 718, 50, 44, 45, 46, 47, 54, 48, 56, 57, 52, 58, 51, 49, 53, 55, 474, 719, 911, 912, 388, 913, 720, 361, 722, 721, 59, 528, 273, 723, 1126, 724, 360, 359, 358, 1143, 287, 286, 288, 266, 374, 1043, 1044, 1045, 1046, 725, 686, 327, 328, 726, 727, 248, 250, 251, 247, 249, 1048, 1049, 1050, 1051, 1052, 411, 1053, 728, 168, 167, 169, 166, 170, 1144, 107, 108, 412, 1145, 1146, 415, 416, 531, 1147, 414, 1148, 1149, 1150, 1172, 1173, 532, 1174, 533, 1176, 413, 1175, 530, 1178, 529, 1177, 1187, 1188, 534, 1189, 1190, 1191, 417, 535, 1192, 729, 345, 348, 347, 346, 344, 343, 418, 419, 538, 1151, 539, 1152, 537, 1154, 536, 1153, 420, 1155, 421, 1156, 422, 423, 424, 1157, 393, 1158, 394, 1167, 1168, 1169, 1170, 1171, 176, 177, 179, 178, 181, 180, 428, 429, 542, 1159, 427, 1160, 1161, 1162, 430, 541, 1164, 540, 1163, 425, 426, 1165, 1166, 730, 122, 125, 120, 119, 124, 123, 121, 126, 434, 435, 545, 1179, 433, 1180, 1181, 1182, 436, 544, 1184, 543, 1183, 431, 432, 1185, 1186, 731, 132, 128, 130, 129, 134, 133, 131, 127, 135, 733, 732, 225, 224, 223, 734, 364, 935, 294, 1193, 735, 163, 165, 164, 151, 150, 546, 1296, 1297, 1298, 738, 737, 736, 94, 97, 96, 95, 93, 5, 6, 547, 739, 228, 226, 230, 231, 227, 229, 548, 921, 740, 278, 1194, 375, 1195, 376, 1196, 329, 1197, 1198, 1199, 1200, 387, 1201, 742, 741, 318, 324, 322, 321, 319, 320, 323, 377, 395, 1202, 1203, 1204, 1205, 371, 370, 7, 1206, 1207, 1208, 1209, 1210, 397, 1211, 398, 1212, 744, 743, 922, 923, 924, 549, 745, 72, 73, 71, 70, 1213, 1214, 437, 8, 1215, 384, 518, 1216, 76, 75, 77, 1217, 1218, 1219, 550, 1220, 220, 1117, 171, 1222, 1221, 1223, 152, 1224, 349, 1225, 746, 204, 203, 202, 201, 205, 1226, 747, 156, 155, 154, 153, 157, 438, 551, 872, 552, 873, 475, 874, 1054, 554, 1055, 564, 875, 439, 565, 566, 858, 860, 555, 857, 557, 859, 558, 861, 556, 862, 863, 559, 864, 865, 562, 866, 867, 560, 868, 869, 561, 870, 871, 563, 876, 1057, 1056, 1058, 567, 1059, 1060, 1061, 568, 1062, 843, 1065, 1064, 553, 1063, 1066, 1067, 569, 1068, 1071, 1072, 570, 1073, 571, 1074, 572, 1075, 573, 1076, 574, 1077, 575, 1078, 576, 1079, 577, 1080, 578, 1081, 579, 1082, 580, 1083, 581, 1084, 582, 1085, 583, 1086, 584, 1087, 585, 1088, 586, 1089, 587, 1090, 588, 1091, 589, 1092, 590, 1093, 591, 1094, 592, 1095, 593, 1096, 594, 1097, 595, 1098, 596, 1099, 597, 1100, 598, 1101, 599, 1102, 600, 1103, 601, 1104, 602, 1105, 603, 1106, 604, 1107, 605, 1108, 440, 1115, 1116, 389, 606, 760, 759, 758, 757, 756, 755, 754, 753, 752, 751, 750, 749, 748, 355, 351, 352, 356, 350, 353, 354, 1109, 1110, 607, 1111, 1112, 608, 1113, 1114, 102, 101, 100, 106, 103, 104, 105, 99, 98, 609, 610, 762, 761, 325, 326, 878, 879, 477, 880, 881, 882, 883, 884, 885, 886, 378, 386, 887, 888, 441, 379, 889, 476, 890, 891, 892, 893, 380, 385, 894, 895, 442, 381, 896, 611, 897, 898, 612, 899, 613, 900, 614, 901, 902, 615, 903, 616, 904, 399, 907, 905, 906, 382, 383, 908, 617, 909, 770, 688, 769, 768, 767, 766, 765, 764, 687, 763, 240, 238, 239, 244, 241, 245, 243, 242, 246, 771, 277, 1014, 453, 400, 772, 40, 39, 38, 37, 41, 35, 33, 32, 34, 36, 936, 937, 938, 939, 618, 774, 773, 21, 22, 19, 23, 20, 24, 29, 30, 31, 17, 18, 25, 26, 28, 27, 619, 620, 621, 480, 479, 478, 622, 781, 780, 689, 779, 778, 777, 776, 775, 690, 219, 625, 624, 623, 910, 783, 782, 626, 914, 457, 915, 456, 916, 455, 917, 454, 918, 919, 627, 458, 628, 920, 629, 630, 631, 632, 390, 633, 795, 794, 793, 792, 791, 790, 789, 788, 787, 786, 785, 784, 295, 296, 925, 931, 10, 443, 926, 634, 927, 9, 928, 461, 929, 444, 445, 930, 932, 933, 462, 934, 799, 798, 691, 692, 797, 796, 1069, 481, 482, 264, 263, 262, 265, 261, 1070, 11, 12, 13, 940, 941, 635, 942, 636, 943, 944, 945, 946, 463, 464, 637, 947, 638, 948, 949, 639, 950, 951, 640, 952, 954, 953, 803, 802, 801, 800, 112, 113, 114, 110, 111, 115, 117, 109, 116, 955, 957, 641, 956, 642, 805, 804, 146, 148, 149, 145, 147, 958, 960, 643, 961, 959, 644, 484, 483, 645, 806, 270, 268, 271, 272, 267, 269, 962, 963, 646, 964, 487, 485, 486, 965, 807, 252, 254, 253, 966, 967, 647, 968, 490, 488, 489, 969, 808, 216, 218, 217, 970, 972, 648, 973, 971, 649, 492, 974, 491, 975, 809, 233, 235, 236, 237, 232, 234, 976, 978, 650, 979, 977, 651, 494, 493, 652, 980, 653, 981, 810, 208, 209, 211, 212, 213, 206, 207, 210, 982, 983, 984, 985, 986, 654, 987, 655, 988, 656, 503, 502, 657, 989, 501, 990, 500, 991, 499, 992, 495, 993, 496, 994, 497, 995, 498, 996, 814, 813, 812, 811, 139, 137, 138, 140, 141, 143, 142, 136, 144, 997, 998, 999, 1000, 1001, 658, 1002, 659, 1003, 660, 508, 507, 661, 1004, 504, 1005, 505, 1006, 506, 1007, 818, 817, 816, 815, 192, 190, 191, 193, 194, 196, 195, 189, 197, 1008, 1011, 1009, 1010, 662, 509, 510, 663, 1012, 511, 1013, 819, 281, 279, 283, 284, 285, 282, 280, 1015, 1018, 1016, 1017, 664, 514, 513, 665, 1019, 512, 1020, 824, 823, 822, 821, 820, 182, 186, 187, 188, 185, 184, 183, 1021, 515, 666, 297, 298, 299, 1227, 825, 91, 1047, 826, 92, 1118, 1121, 667, 1122, 1123, 1119, 1120, 1124, 1125, 88, 87, 90, 86, 89, 1127, 668, 827, 1228, 74, 1229, 674, 1230, 1231, 672, 1232, 673, 1233, 1234, 1235, 466, 675, 1236, 676, 1237, 449, 1238, 1239, 517, 1240, 1241, 448, 1242, 1243, 677, 1244, 1245, 1246, 1247, 1248, 402, 1249, 678, 1250, 679, 680, 1251, 1252, 1253, 1254, 450, 1255, 1256, 451, 1257, 1258, 452, 1259, 403, 447, 446, 1260, 1261, 671, 1262, 1263, 1264, 669, 1265, 401, 670, 516, 1266, 1268, 1269, 1267, 681, 1270, 682, 1271, 683, 1272, 1273, 842, 1274, 467, 1275, 1276, 465, 684, 1277, 839, 838, 837, 836, 835, 834, 833, 832, 831, 830, 829, 828, 300, 302, 305, 307, 306, 301, 303, 304, 840, 841, 200 }
  uselistorder label %dec_label_pc_18efc, { 1, 0 }
  uselistorder label %dec_label_pc_18e78, { 1, 0 }
  uselistorder label %dec_label_pc_18e28, { 1, 0 }
  uselistorder label %dec_label_pc_18e0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18dc4, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_18f84(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f84:
  %v0_18f84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18f84, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18f84
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18f84, %bb
  %v10_18f8c = phi i32 [ %arg1, %dec_label_pc_18f84 ], [ 0, %bb ]
  ret i32 %v10_18f8c

; uselistorder directives
  uselistorder i1 false, { 46, 47, 48, 50, 49, 51, 12, 13, 35, 15, 18, 17, 16, 24, 36, 37, 38, 14, 39, 40, 41, 42, 0, 2, 30, 29, 20, 21, 3, 26, 1, 10, 11, 19, 4, 5, 6, 31, 23, 43, 44, 45, 7, 8, 9, 32, 33, 34, 22, 27, 28, 25, 52 }
  uselistorder i1* @cpsr_z, { 2, 3, 5, 6, 4, 7, 8, 19, 20, 1, 9, 10, 11, 12, 21, 22, 13, 23, 25, 27, 26, 24, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 51, 52, 53, 61, 62, 63, 64, 33, 34, 35, 36, 37, 38, 0, 39, 47, 48, 49, 50, 40, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 65, 66 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1a1e0() local_unnamed_addr {
dec_label_pc_1a1e0:
  %v1_1a1e4 = call i32 @function_158b8(i32 6)
  %v1_1a1ec = call i32 @function_158b8(i32 9)
  br label %dec_label_pc_1a1f0

dec_label_pc_1a1f0:                               ; preds = %dec_label_pc_1a1f0, %dec_label_pc_1a1e0
  br label %dec_label_pc_1a1f0

; uselistorder directives
  uselistorder i32 9, { 11, 37, 38, 58, 59, 0, 64, 7, 65, 8, 39, 13, 40, 12, 14, 41, 34, 60, 5, 35, 61, 36, 15, 63, 16, 42, 43, 3, 17, 18, 1, 19, 20, 21, 22, 2, 23, 24, 62, 4, 44, 45, 9, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 6, 57, 32, 31, 30, 29, 28, 27, 26, 25, 33, 66, 67, 10, 68 }
  uselistorder i32 (i32)* @function_158b8, { 3, 2, 0, 1 }
  uselistorder i32 6, { 15, 84, 0, 16, 86, 85, 87, 17, 42, 18, 43, 3, 82, 19, 83, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1, 31, 32, 33, 34, 5, 35, 44, 45, 46, 6, 47, 48, 49, 50, 7, 51, 52, 53, 54, 8, 9, 55, 10, 56, 57, 58, 36, 59, 11, 60, 61, 37, 62, 12, 63, 64, 38, 65, 66, 39, 67, 68, 69, 70, 71, 40, 72, 13, 73, 74, 75, 76, 77, 78, 41, 79, 14, 80, 4, 81, 2 }
}

define i32 @function_1a1f4() local_unnamed_addr {
entry:
  %v3_1a1f4 = load i32, i32* @r0, align 4
  ret i32 %v3_1a1f4

; uselistorder directives
  uselistorder i32 0, { 128, 784, 785, 165, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 42, 105, 445, 796, 166, 797, 798, 799, 0, 800, 801, 1, 167, 802, 803, 804, 747, 1114, 1115, 175, 1116, 2, 1117, 176, 168, 1118, 174, 171, 172, 173, 170, 1119, 169, 1120, 1121, 805, 179, 806, 3, 807, 180, 808, 748, 809, 130, 810, 749, 811, 812, 177, 813, 814, 815, 178, 129, 816, 131, 132, 817, 818, 819, 1260, 1261, 163, 123, 124, 1262, 181, 1263, 1264, 1265, 1266, 1267, 4, 820, 821, 822, 721, 823, 47, 824, 825, 826, 827, 5, 828, 829, 830, 831, 832, 722, 6, 833, 723, 834, 750, 835, 836, 837, 838, 839, 840, 841, 43, 48, 844, 446, 843, 89, 90, 842, 447, 846, 367, 845, 1122, 448, 1123, 1124, 1579, 368, 1580, 449, 49, 1268, 1125, 183, 182, 875, 876, 114, 877, 878, 185, 184, 879, 880, 881, 186, 882, 1269, 7, 8, 187, 81, 441, 393, 394, 1270, 1271, 189, 1272, 188, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 190, 1281, 1282, 1283, 1284, 1285, 1286, 195, 196, 197, 198, 199, 1287, 194, 191, 192, 193, 1288, 1289, 50, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 1290, 201, 200, 202, 1291, 125, 1292, 1126, 1127, 1128, 450, 1129, 1130, 459, 460, 461, 454, 455, 456, 1131, 457, 458, 1132, 462, 463, 464, 1133, 1134, 1135, 1136, 467, 1137, 1138, 206, 207, 1139, 1140, 208, 1141, 1142, 452, 451, 1143, 1144, 1145, 1146, 82, 1147, 1150, 51, 52, 1148, 1149, 468, 1151, 1152, 203, 204, 395, 465, 1153, 466, 453, 1154, 1155, 209, 205, 1156, 127, 83, 1157, 1158, 1159, 1160, 143, 1161, 1162, 144, 145, 1582, 1581, 1583, 210, 211, 360, 1619, 1620, 213, 212, 369, 469, 1618, 847, 214, 1293, 9, 396, 470, 1294, 471, 215, 848, 849, 1296, 472, 1295, 91, 92, 1297, 1298, 1174, 883, 884, 885, 10, 11, 886, 1299, 1300, 1302, 1303, 751, 93, 115, 1304, 1301, 850, 851, 852, 853, 473, 854, 1621, 1622, 1623, 1624, 1305, 752, 1306, 1307, 753, 754, 1308, 1309, 1310, 1311, 755, 724, 1584, 1585, 1586, 725, 1587, 1588, 86, 87, 88, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 756, 726, 1601, 1602, 1603, 1604, 727, 1605, 728, 1606, 1607, 1608, 1609, 1610, 729, 1611, 1612, 1613, 1614, 757, 730, 1615, 1616, 1617, 1165, 855, 1163, 218, 398, 397, 217, 216, 1164, 909, 910, 219, 146, 220, 887, 888, 474, 12, 399, 475, 221, 889, 476, 477, 478, 13, 1253, 1312, 1313, 1314, 1315, 1316, 388, 387, 386, 1317, 222, 911, 53, 54, 55, 56, 57, 223, 1166, 1167, 479, 1168, 1169, 480, 1170, 1171, 224, 225, 1318, 1319, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 226, 1320, 227, 1321, 1322, 1323, 1324, 1325, 442, 400, 401, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 481, 1334, 1335, 1336, 1337, 1338, 1339, 1388, 1390, 1389, 1391, 1392, 1393, 1394, 1410, 482, 1411, 1412, 1413, 1414, 1415, 1416, 483, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 94, 147, 228, 1424, 1340, 1341, 1342, 1343, 1344, 229, 1345, 484, 1346, 1347, 1348, 1349, 485, 1350, 1351, 1352, 1353, 95, 1354, 1355, 1356, 1357, 1358, 1374, 1375, 486, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 149, 148, 1385, 1386, 1387, 1359, 1360, 1361, 1362, 487, 1363, 1364, 1365, 1366, 230, 1367, 1368, 488, 1369, 1370, 1371, 1372, 1373, 1395, 1396, 1397, 1398, 489, 1399, 1400, 1401, 1402, 231, 1403, 1404, 490, 1405, 1406, 1407, 1408, 1409, 1425, 232, 1426, 1427, 944, 945, 116, 946, 491, 492, 1428, 493, 1429, 1430, 233, 494, 1625, 495, 1626, 1627, 1628, 1629, 720, 370, 234, 1630, 918, 919, 235, 920, 44, 14, 921, 922, 150, 151, 236, 923, 924, 925, 15, 1431, 1432, 1433, 1434, 119, 1435, 237, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 238, 731, 758, 732, 733, 1443, 1444, 1445, 1446, 1447, 1448, 16, 1449, 1450, 120, 1451, 1452, 1453, 1454, 1455, 239, 1456, 734, 759, 735, 736, 1457, 760, 164, 240, 1458, 1459, 1460, 117, 384, 1461, 1462, 58, 152, 761, 371, 18, 17, 241, 1463, 242, 762, 19, 372, 243, 244, 245, 1464, 59, 1465, 246, 496, 1185, 926, 927, 928, 1467, 1466, 1468, 1469, 1470, 1471, 45, 247, 1472, 1473, 1474, 248, 1475, 106, 107, 443, 444, 250, 249, 251, 1476, 252, 1477, 1478, 253, 1244, 1245, 497, 254, 255, 256, 1479, 257, 1480, 1186, 260, 1187, 1188, 498, 1189, 867, 868, 258, 259, 869, 871, 856, 108, 60, 364, 363, 857, 858, 763, 859, 870, 499, 866, 764, 860, 765, 861, 766, 862, 767, 863, 768, 864, 769, 865, 872, 873, 500, 874, 121, 1190, 719, 1191, 501, 1192, 1193, 374, 373, 1194, 1195, 1196, 1197, 262, 261, 1198, 1199, 1200, 770, 361, 1201, 98, 99, 362, 1202, 96, 97, 502, 1204, 1205, 737, 1206, 1207, 1208, 1209, 1210, 503, 1211, 1212, 1214, 746, 1215, 1216, 1217, 745, 1218, 1219, 504, 1220, 505, 1221, 1224, 1225, 1226, 263, 1222, 264, 1223, 265, 1203, 893, 894, 895, 110, 61, 896, 109, 62, 897, 898, 506, 899, 507, 508, 900, 509, 901, 902, 904, 266, 267, 903, 385, 63, 100, 389, 905, 268, 20, 906, 947, 948, 951, 952, 953, 949, 950, 954, 955, 890, 21, 891, 269, 510, 892, 907, 511, 908, 512, 513, 274, 273, 771, 153, 276, 275, 772, 154, 278, 277, 773, 155, 280, 279, 774, 156, 775, 272, 271, 270, 376, 377, 378, 379, 514, 281, 915, 912, 913, 914, 375, 916, 64, 917, 282, 515, 118, 929, 930, 931, 932, 382, 933, 934, 935, 381, 936, 937, 938, 939, 283, 940, 942, 941, 157, 158, 284, 380, 516, 943, 517, 518, 402, 285, 286, 1213, 84, 287, 956, 957, 289, 290, 958, 959, 65, 288, 122, 291, 85, 519, 960, 961, 962, 963, 292, 293, 964, 965, 406, 966, 967, 968, 969, 297, 294, 295, 296, 970, 971, 972, 973, 520, 974, 975, 405, 976, 404, 977, 403, 978, 521, 979, 299, 980, 300, 982, 983, 66, 981, 298, 984, 301, 111, 302, 985, 409, 407, 986, 408, 987, 305, 988, 306, 990, 991, 67, 304, 989, 303, 992, 307, 308, 993, 412, 994, 410, 411, 995, 522, 996, 523, 112, 68, 997, 159, 413, 524, 998, 525, 999, 1000, 309, 1001, 414, 1002, 526, 113, 69, 1003, 160, 415, 527, 1004, 1005, 310, 1006, 416, 1007, 312, 1008, 313, 1011, 1012, 70, 1009, 311, 1010, 161, 1013, 22, 23, 24, 25, 26, 1014, 314, 315, 1015, 418, 1016, 417, 1017, 528, 1018, 529, 1019, 530, 1020, 531, 1021, 532, 1022, 533, 1023, 318, 1025, 1026, 1027, 1028, 316, 319, 1029, 1030, 71, 72, 1024, 317, 1032, 1031, 27, 28, 29, 30, 31, 320, 321, 1033, 421, 1034, 420, 1035, 534, 1036, 535, 1037, 536, 1038, 537, 1039, 538, 1040, 419, 1041, 539, 1042, 325, 1044, 1045, 1046, 323, 322, 326, 1047, 1048, 73, 74, 1043, 324, 75, 540, 1050, 1052, 1053, 1054, 541, 1055, 542, 1056, 32, 33, 34, 35, 36, 1051, 1049, 327, 1057, 1058, 423, 1059, 422, 1060, 543, 1061, 331, 1063, 1064, 1065, 329, 328, 332, 1066, 1067, 76, 77, 1062, 330, 78, 544, 1069, 1071, 1072, 1073, 545, 1074, 546, 1075, 37, 38, 39, 40, 41, 1070, 1068, 333, 1076, 1077, 429, 1078, 428, 1079, 427, 1080, 426, 1081, 425, 1082, 424, 1083, 547, 1084, 1087, 1088, 1089, 335, 336, 1090, 1091, 79, 1085, 1086, 334, 1092, 1093, 337, 338, 1094, 432, 1095, 431, 1096, 430, 1097, 548, 1098, 1100, 1101, 1102, 340, 341, 342, 1104, 1105, 80, 1103, 1099, 339, 1106, 1107, 343, 344, 1108, 435, 1109, 434, 1110, 433, 1111, 549, 1112, 390, 1113, 1481, 345, 1482, 1172, 346, 1173, 1227, 1228, 1229, 1230, 1231, 1232, 349, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 347, 348, 1241, 1242, 1243, 1246, 126, 1247, 1248, 391, 550, 383, 1249, 1250, 46, 1251, 1252, 551, 1254, 350, 1483, 1255, 1256, 1257, 1258, 1259, 1484, 1485, 1486, 1487, 351, 352, 552, 1488, 1489, 738, 739, 740, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 776, 1502, 1503, 1504, 1505, 777, 1506, 1507, 1508, 741, 1509, 742, 353, 354, 355, 1510, 1511, 1512, 1513, 778, 1514, 1515, 162, 1516, 1517, 779, 1518, 356, 1519, 1520, 1521, 780, 553, 554, 1522, 1523, 781, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 555, 1538, 1533, 1534, 1535, 1536, 782, 1537, 783, 1539, 556, 1540, 1541, 1542, 1543, 557, 1544, 1545, 1546, 1547, 743, 1549, 1550, 1551, 1552, 1553, 392, 1554, 1557, 1558, 1555, 1556, 358, 357, 1559, 1560, 1561, 1562, 359, 1563, 1564, 365, 1565, 101, 102, 366, 1566, 103, 104, 558, 1567, 1548, 717, 718, 1568, 1569, 744, 1570, 1571, 1572, 1573, 1574, 559, 1575, 436, 1576, 437, 1577, 560, 438, 439, 1578, 440, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645 }
  uselistorder i32* @r0, { 95, 288, 289, 290, 291, 292, 293, 294, 295, 4, 296, 297, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 16, 298, 350, 351, 352, 40, 15, 23, 299, 300, 14, 68, 27, 20, 42, 191, 28, 301, 453, 454, 452, 108, 43, 62, 33, 19, 0, 12, 192, 69, 353, 29, 41, 109, 30, 302, 5, 70, 71, 1, 65, 344, 13, 72, 73, 74, 354, 75, 355, 303, 304, 26, 32, 76, 22, 44, 356, 17, 357, 11, 306, 307, 308, 309, 21, 77, 358, 359, 360, 78, 361, 362, 363, 380, 89, 387, 388, 90, 91, 389, 390, 79, 364, 365, 80, 6, 366, 81, 367, 368, 84, 376, 85, 86, 377, 378, 379, 369, 82, 370, 371, 372, 373, 83, 2, 374, 375, 381, 87, 382, 383, 384, 88, 3, 385, 386, 391, 193, 392, 246, 92, 393, 93, 94, 37, 38, 24, 10, 455, 456, 39, 457, 9, 31, 228, 25, 394, 18, 395, 396, 310, 397, 398, 399, 400, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 179, 180, 181, 182, 183, 184, 185, 186, 187, 311, 188, 162, 163, 189, 165, 166, 177, 178, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 190, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 328, 326, 327, 317, 194, 202, 203, 204, 63, 64, 195, 196, 197, 198, 199, 200, 201, 205, 206, 45, 207, 208, 209, 210, 46, 47, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 48, 221, 49, 222, 223, 50, 224, 225, 226, 227, 51, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 61, 243, 244, 245, 323, 324, 7, 247, 248, 249, 52, 250, 251, 252, 253, 254, 53, 255, 256, 257, 54, 258, 259, 260, 261, 262, 263, 264, 55, 265, 266, 267, 56, 268, 269, 270, 271, 272, 273, 57, 274, 275, 276, 277, 278, 279, 58, 280, 281, 282, 283, 59, 284, 285, 286, 287, 60, 305, 329, 330, 331, 332, 333, 334, 8, 335, 336, 337, 338, 339, 340, 341, 342, 343, 66, 67, 345, 346, 347, 401, 348, 402, 349, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 35, 36, 34, 451 }
}

declare i32 @unknown_ffff0fc0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

declare float @fabsf(float)

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
