source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r14 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208004429
@global_var_1001b5a0.3 = global i32 0
@global_var_1001b5ac.4 = local_unnamed_addr global i32* @global_var_1001b5a0.3
@global_var_1001b788.6 = global i32 0
@global_var_10000314.7 = constant i32 1207993413
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001b714.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_10000bdc.14 = constant i32 939524096
@global_var_10000f14.15 = constant i32 939524096
@global_var_1001b718.16 = local_unnamed_addr global i32 0
@global_var_10001aa0.17 = constant [3 x i8] c"8~\00"
@global_var_10001ab0.18 = constant [3 x i8] c"8~\00"
@global_var_10001ac0.19 = constant [3 x i8] c"8~\00"
@global_var_100026fc.20 = constant [3 x i8] c"8`\00"
@global_var_100027ec.21 = constant [3 x i8] c"9!\00"
@global_var_10002e78.22 = constant [3 x i8] c"8`\00"
@global_var_100034c0.23 = constant [3 x i8] c"8`\00"
@global_var_10004174.24 = constant i32 939524104
@global_var_100041a4.25 = constant i32 939524096
@global_var_1000459c.26 = constant [3 x i8] c"8`\00"
@global_var_100045a4.27 = constant [3 x i8] c"8`\00"
@global_var_100045ac.28 = constant [3 x i8] c"8`\00"
@global_var_100046ac.29 = constant [3 x i8] c"9@\00"
@global_var_1000b07c.30 = constant i32 788529152
@global_var_100049f4.31 = constant [3 x i8] c"8`\00"
@global_var_100049fc.32 = constant [3 x i8] c"8`\00"
@global_var_10004a04.33 = constant [3 x i8] c"8`\00"
@global_var_10004a0c.34 = constant [3 x i8] c"8`\00"
@global_var_10004a78.35 = constant [3 x i8] c"8`\00"
@global_var_10004a80.36 = constant [3 x i8] c"8`\00"
@global_var_10004a88.37 = constant [3 x i8] c"8`\00"
@global_var_1001b724.38 = local_unnamed_addr global i32 0
@global_var_10004ba4.39 = constant i32 939524096
@global_var_1001b720.40 = local_unnamed_addr global i32 0
@global_var_1001b71c.41 = local_unnamed_addr global i32 0
@global_var_10004bc8.42 = constant [3 x i8] c"8`\00"
@global_var_10004c48.43 = constant [3 x i8] c"8`\00"
@global_var_10004c50.44 = constant [3 x i8] c"8`\00"
@global_var_10004cb4.45 = constant i32 1207975705
@global_var_10004cc8.46 = constant [3 x i8] c"8`\00"
@global_var_10004ce4.47 = constant [3 x i8] c"8`\00"
@global_var_10004d0c.48 = constant [3 x i8] c"8`\00"
@global_var_10004d14.49 = constant i32 939524118
@global_var_10004d78.50 = constant [3 x i8] c"8`\00"
@global_var_10004dbc.51 = constant [3 x i8] c"8`\00"
@global_var_10004df0.52 = constant [3 x i8] c"8`\00"
@global_var_10004e24.53 = constant [3 x i8] c"8`\00"
@global_var_10004e58.54 = constant [3 x i8] c"8`\00"
@global_var_10004f14.55 = constant [3 x i8] c"8`\00"
@global_var_10004fa4.56 = constant [3 x i8] c"8`\00"
@global_var_10004fac.57 = constant [3 x i8] c"8`\00"
@global_var_1000501c.58 = constant [3 x i8] c"8`\00"
@global_var_10005024.59 = constant i32 1207973613
@global_var_100050d4.60 = constant [3 x i8] c"8`\00"
@global_var_100051a8.61 = constant [3 x i8] c"8`\00"
@global_var_100051e0.62 = constant [3 x i8] c"8`\00"
@global_var_10005240.63 = constant [3 x i8] c"8`\00"
@global_var_1001b6f8.64 = local_unnamed_addr global i32 268468676
@global_var_1001b6f0.65 = local_unnamed_addr global i32 -1
@global_var_10005408.67 = constant [3 x i8] c"8`\00"
@global_var_1001b7f0.68 = global i32 0
@global_var_1000b080.69 = constant [15 x i8] c"178.62.235.153\00"
@global_var_1001b7f4.70 = local_unnamed_addr global i32 0
@global_var_1001b7f2.71 = local_unnamed_addr global i32 0
@global_var_1001b728.72 = local_unnamed_addr global i32 0
@global_var_10005510.73 = constant [3 x i8] c"8`\00"
@global_var_1000556c.74 = constant [3 x i8] c"8`\00"
@global_var_100055a4.75 = constant [3 x i8] c"8`\00"
@global_var_100055ac.76 = constant [3 x i8] c"8`\00"
@global_var_1000566c.77 = constant i32 1207970649
@global_var_100056a8.78 = constant i32 1207961245
@global_var_100056c4.79 = constant [3 x i8] c";a\00"
@global_var_10005728.80 = constant i32 1207961037
@global_var_1000577c.81 = constant [3 x i8] c"8`\00"
@global_var_1000b090.82 = constant i32 167772160
@global_var_100057b4.83 = constant [3 x i8] c"8`\00"
@global_var_100057c8.84 = constant i32 1207971585
@global_var_1000586c.85 = constant [3 x i8] c"8`\00"
@global_var_10005874.86 = constant [3 x i8] c"8`\00"
@global_var_1000587c.87 = constant [3 x i8] c"8`\00"
@global_var_10005884.88 = constant i32 989855744
@global_var_10005894.89 = constant [3 x i8] c";a\00"
@global_var_1001b6f4.90 = local_unnamed_addr global i32 -1
@global_var_10005a20.92 = constant i32 939589631
@global_var_10005b04.93 = constant i32 939589631
@global_var_10005be4.94 = constant i32 939589631
@global_var_10005bf0.95 = constant i32 1006685388
@global_var_1000b094.96 = constant i32 1
@global_var_10005ca8.97 = constant i32 939589631
@global_var_1001b7ac.98 = local_unnamed_addr global i32 0
@global_var_1001b7a0.99 = local_unnamed_addr global i32 0
@global_var_1001b7a8.100 = local_unnamed_addr global i32 0
@global_var_1001b7a4.101 = local_unnamed_addr global i32 0
@global_var_1001b73c.102 = local_unnamed_addr global i32 0
@global_var_1001b730.103 = local_unnamed_addr global i32 0
@global_var_1001b734.104 = local_unnamed_addr global i32 0
@global_var_1001b748.106 = local_unnamed_addr global i32 0
@global_var_10006354.107 = constant [3 x i8] c"8`\00"
@global_var_10006370.108 = constant i32 939524096
@global_var_1001b740.109 = local_unnamed_addr global i32 0
@global_var_1001b744.110 = local_unnamed_addr global i32 0
@global_var_1001b7b0.111 = global i32 0
@global_var_1001b7c4.112 = global i32 0
@global_var_1000b124.113 = constant i32 0
@global_var_1001b7b2.114 = local_unnamed_addr global i32 0
@global_var_1001b7d0.115 = local_unnamed_addr global i32 0
@global_var_1001b7b8.116 = local_unnamed_addr global i32 0
@global_var_1001b7b9.117 = local_unnamed_addr global i32 0
@global_var_1001b7b4.118 = local_unnamed_addr global i32 0
@global_var_1000b120.119 = constant [5 x i8] c"&;; \00"
@global_var_1000b0b8.121 = constant [8 x i8] c"0125!8 \00"
@global_var_1001b7d2.122 = local_unnamed_addr global i32 0
@global_var_1000b09c.123 = constant [5 x i8] c"5:?;\00"
@global_var_1000b0a4.124 = constant [9 x i8] c"<!: acam\00"
@global_var_1000b0b0.125 = constant [7 x i8] c" 18:1 \00"
@global_var_1000b0c0.126 = constant [9 x i8] c"$5''#;&0\00"
@global_var_1000b0cc.127 = constant [6 x i8] c"509=:\00"
@global_var_1000b0f4.128 = constant [6 x i8] c"efg`a\00"
@global_var_1000b0d4.129 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000b0dc.130 = constant [8 x i8] c"'!$$;& \00"
@global_var_1000b0e4.131 = constant i32 1663122969
@global_var_1000b0fc.132 = constant [5 x i8] c"!'1&\00"
@global_var_1000b104.133 = constant i32 455883832
@global_var_1000b110.134 = constant i32 124138003
@global_var_1001b7bc.135 = local_unnamed_addr global i32 0
@global_var_1001b7c0.136 = local_unnamed_addr global i32 0
@global_var_1001b7ba.137 = local_unnamed_addr global i32 0
@global_var_1001b7d4.138 = local_unnamed_addr global i32 0
@global_var_1001b7c8.139 = local_unnamed_addr global i32 0
@global_var_10006c48.141 = constant [3 x i8] c"8`\00"
@global_var_10006c50.142 = constant i32 939524096
@global_var_1000b128.143 = constant i32 -17496
@global_var_1001b800.163 = global i32 0
@global_var_1001b6fc.164 = local_unnamed_addr global i32 -555811921
@global_var_1000b164.165 = constant [3 x i8] c"Qm\00"
@global_var_10007b98.166 = constant [3 x i8] c"8`\00"
@global_var_1001b808.167 = local_unnamed_addr global i32 0
@global_var_1001b80c.168 = local_unnamed_addr global i32 0
@global_var_1000b168.169 = constant i32 1407844352
@global_var_10007bbc.170 = constant [3 x i8] c"8`\00"
@global_var_1001b810.171 = local_unnamed_addr global i32 0
@global_var_1001b814.172 = local_unnamed_addr global i32 0
@global_var_1000b24c.173 = constant i32 271921200
@global_var_10007be0.174 = constant i32 939524125
@global_var_1001b81c.175 = local_unnamed_addr global i32 0
@global_var_1001b818.176 = local_unnamed_addr global i32 0
@global_var_1000b16c.177 = constant [8 x i8] c"{$&;7{T\00"
@global_var_10007c08.178 = constant [3 x i8] c"8`\00"
@global_var_1001b868.179 = local_unnamed_addr global i32 0
@global_var_1001b86c.180 = local_unnamed_addr global i32 0
@global_var_1000b174.181 = constant [6 x i8] c"{1,1T\00"
@global_var_10007c30.182 = constant [3 x i8] c"8`\00"
@global_var_1001b870.183 = local_unnamed_addr global i32 0
@global_var_1001b874.184 = local_unnamed_addr global i32 0
@global_var_1000b17c.185 = constant [5 x i8] c"{20T\00"
@global_var_10007c54.186 = constant i32 939524100
@global_var_1001b87c.187 = local_unnamed_addr global i32 0
@global_var_1001b878.188 = local_unnamed_addr global i32 0
@global_var_1000b184.189 = constant [7 x i8] c"{95$'T\00"
@global_var_10007c7c.190 = constant [3 x i8] c"8`\00"
@global_var_1001b880.191 = local_unnamed_addr global i32 0
@global_var_1001b884.192 = local_unnamed_addr global i32 0
@global_var_1000b18c.193 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10007ca0.194 = constant [3 x i8] c"8`\00"
@global_var_1001b888.195 = local_unnamed_addr global i32 0
@global_var_1001b88c.196 = local_unnamed_addr global i32 0
@global_var_1000b19c.197 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_10007cc4.198 = constant [3 x i8] c"8`\00"
@global_var_1001b8e8.199 = local_unnamed_addr global i32 0
@global_var_1001b8ec.200 = local_unnamed_addr global i32 0
@global_var_1000b1a8.201 = constant [8 x i8] c"z5:=91T\00"
@global_var_10007ce8.202 = constant [3 x i8] c"8`\00"
@global_var_1001b8f0.203 = local_unnamed_addr global i32 0
@global_var_1001b8f4.204 = local_unnamed_addr global i32 0
@global_var_1000b1b0.205 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_10007d0c.206 = constant i32 939524112
@global_var_1001b894.207 = local_unnamed_addr global i32 0
@global_var_1001b890.208 = local_unnamed_addr global i32 0
@global_var_1000b1c4.209 = constant [9 x i8] c"5''#;&0T\00"
@global_var_10007d34.210 = constant [3 x i8] c"8`\00"
@global_var_1001b898.211 = local_unnamed_addr global i32 0
@global_var_1001b89c.212 = local_unnamed_addr global i32 0
@global_var_1000b26c.213 = constant i32 473889
@global_var_10007d58.214 = constant i32 939524117
@global_var_1001b8a4.215 = local_unnamed_addr global i32 0
@global_var_1001b8a0.216 = local_unnamed_addr global i32 0
@global_var_1000b1d0.217 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_10007d80.218 = constant i32 939524113
@global_var_1001b8ac.219 = local_unnamed_addr global i32 0
@global_var_1001b8a8.220 = local_unnamed_addr global i32 0
@global_var_1000b1e4.221 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_10007da8.222 = constant i32 939524108
@global_var_1001b8b4.223 = local_unnamed_addr global i32 0
@global_var_1001b8b0.224 = local_unnamed_addr global i32 0
@global_var_1000b1f4.225 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_10007dd0.226 = constant [3 x i8] c"8`\00"
@global_var_1001b8b8.227 = local_unnamed_addr global i32 0
@global_var_1001b8bc.228 = local_unnamed_addr global i32 0
@global_var_1000b204.229 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_10007df4.230 = constant i32 939524115
@global_var_1001b8c4.231 = local_unnamed_addr global i32 0
@global_var_1001b8c0.232 = local_unnamed_addr global i32 0
@global_var_1000b218.233 = constant [9 x i8] c"$662*7!E\00"
@global_var_10007e1c.234 = constant [3 x i8] c"8`\00"
@global_var_1001b8c8.235 = local_unnamed_addr global i32 0
@global_var_1001b8cc.236 = local_unnamed_addr global i32 0
@global_var_1000b224.237 = constant [6 x i8] c";3=:T\00"
@global_var_10007e40.238 = constant [3 x i8] c"8`\00"
@global_var_1001b8d0.239 = local_unnamed_addr global i32 0
@global_var_1001b8d4.240 = local_unnamed_addr global i32 0
@global_var_1000b22c.241 = constant [7 x i8] c"1: 1&T\00"
@global_var_10007e64.242 = constant [3 x i8] c"8`\00"
@global_var_1001b8d8.243 = local_unnamed_addr global i32 0
@global_var_1001b8dc.244 = local_unnamed_addr global i32 0
@global_var_1000b234.245 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_10007e88.246 = constant i32 939524119
@global_var_1001b8e4.247 = local_unnamed_addr global i32 0
@global_var_1001b8e0.248 = local_unnamed_addr global i32 0
@global_var_100081e8.249 = constant i32 939524096
@global_var_10008530.250 = constant i32 1207959564
@global_var_10008a0c.251 = constant i32 939524118
@global_var_1000a0fc.252 = constant [3 x i8] c"8`\00"
@global_var_10008b64.253 = constant i32 939524105
@global_var_10008b80.254 = constant i32 939589631
@global_var_10008ca8.255 = constant i32 1207959797
@global_var_10008cac.256 = constant i32 939524108
@global_var_1001b76c.257 = global i32 0
@global_var_100093f0.258 = constant i32 939524118
@global_var_10009478.259 = constant i32 939524118
@global_var_1001b8f8.260 = global i32 0
@global_var_1001b7d8.261 = global i32 0
@global_var_1001b700 = external global i32
@global_var_1000b390.263 = constant i32 33554944
@global_var_1001b75c.264 = local_unnamed_addr global i32 0
@global_var_1001b978.265 = global i32 0
@global_var_100096d4.266 = constant i32 939524108
@global_var_10009728.267 = constant i32 939524108
@global_var_100097dc.268 = constant [3 x i8] c"8`\00"
@global_var_10009888.269 = constant [3 x i8] c"8`\00"
@global_var_10009bb0.270 = constant i32 1207959640
@global_var_10009bec.271 = constant i32 1207959580
@global_var_1001b70c.272 = local_unnamed_addr global i32* @global_var_1000b390.263
@global_var_10009de0.273 = constant i32 939524130
@global_var_1001b6c0.274 = global i32 0
@global_var_1001b750.275 = local_unnamed_addr global i32 0
@global_var_10009e74.276 = constant i32 1207960053
@global_var_10009e78.277 = constant [3 x i8] c"= \00"
@global_var_1001b594.278 = global i32 -1
@global_var_1001b760.279 = local_unnamed_addr global i32 0
@global_var_1001b764.280 = local_unnamed_addr global i32 0
@global_var_1000b284.281 = constant [10 x i8] c"/dev/null\00"
@global_var_1001b768.282 = local_unnamed_addr global i32 0
@global_var_1001b754.284 = local_unnamed_addr global i32 0
@global_var_1001b758.285 = local_unnamed_addr global i32 0
@global_var_1000a414.286 = constant i32 939524096
@global_var_1000a6a0.288 = constant i32 939524118
@global_var_1000a89c.289 = constant i32 939589631
@global_var_1001b780.290 = local_unnamed_addr global i32 0
@global_var_1001b6d8.291 = global i32 0
@global_var_1000adc0.292 = constant i32 939524129
@global_var_1001b774.293 = local_unnamed_addr global i32 0
@global_var_1000ae34.294 = constant [3 x i8] c"8`\00"
@global_var_1000ae6c.295 = constant i32 939524129
@global_var_1001b778.296 = local_unnamed_addr global i32 0
@global_var_1001b77c.297 = local_unnamed_addr global i32 0
@global_var_1001b598.298 = global i32 0
@global_var_1001b784.2 = local_unnamed_addr global i8 0
@global_var_1001b710.9 = local_unnamed_addr global i8 0
@global_var_1001b711.13 = global i8 0
@global_var_1001b5b0.66 = local_unnamed_addr global i8 1
@global_var_1001b72c.91 = local_unnamed_addr global i16 0
@global_var_1001b738.105 = global i16 0
@global_var_1001b7c6.120 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000aff0(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001b784.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001b5ac.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001b5ac.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001b5ac.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001b784.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001b784.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268547492 to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268547492
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000a1e8(i32 268457396, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268480604, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_100086c8()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_100086c8()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_10009e94(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_10008758()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_100087a0(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_10009e10()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001b710.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001b714.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003ac = load i32, i32* @r31, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003d0 = load i32, i32* @r27, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003d0, i32* @r27, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  store i32 %v0_100003ac, i32* @r31, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_100096f8(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_100096f8(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_100096f8(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_10007f44(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_10008d9c()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_10009768()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_10009768()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_10009768()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 2, 6, 7, 3, 10, 11, 8, 9, 12, 13, 14, 16, 17, 15, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_10009134(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10007fe8(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_100096f8(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001b714.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268439924, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_10009868(i32 %v3_1000076c, i32 %v1_1000077c, i32 268439924)
  %v3_10000784 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001b714.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001b710.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_100096f8(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001b710.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001b714.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268444004, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_10009868(i32 %v3_100007c0, i32 %v1_100007d0, i32 268444004)
  %v3_100007d8 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001b714.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001b710.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_100096f8(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001b714.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268444996, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_10009868(i32 %v3_10000814, i32 %v1_10000824, i32 268444996)
  %v3_1000082c = load i8, i8* @global_var_1001b710.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001b714.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001b710.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_100096f8(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001b714.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268438276, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_10009868(i32 %v3_10000868, i32 %v1_10000878, i32 268438276)
  %v3_10000880 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001b714.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001b710.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_100096f8(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001b714.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268451368, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_10009868(i32 %v3_100008bc, i32 %v1_100008cc, i32 268451368)
  %v3_100008d4 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001b714.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001b710.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_100096f8(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001b710.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001b714.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268449860, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_10009868(i32 %v3_10000910, i32 %v1_10000920, i32 268449860)
  %v3_10000928 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001b714.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001b710.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_100096f8(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001b714.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268448252, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_10009868(i32 %v3_10000964, i32 %v1_10000974, i32 268448252)
  %v3_1000097c = load i8, i8* @global_var_1001b710.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001b714.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001b710.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_100096f8(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001b714.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268446644, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_10009868(i32 %v3_100009b8, i32 %v1_100009c8, i32 268446644)
  %v3_100009d0 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001b714.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001b710.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_100096f8(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001b714.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268442640, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_10009868(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268442640)
  %v3_10000a24 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001b714.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001b710.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_100096f8(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001b714.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268441168, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_10009868(i32 %v3_10000a60, i32 %v1_10000a70, i32 268441168)
  %v3_10000a78 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001b710.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001b714.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_100096f8(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001b714.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268439100, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_10009868(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268439100)
  %v3_10000acc = load i8, i8* @global_var_1001b710.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001b714.10, align 4
  store i32 ptrtoint (i8* @global_var_1001b711.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001b710.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001b711.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b710.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b38 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b40 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268438372, i32* @lr, align 4
  %v2_10000b60 = call i32 @function_100096f8(i32 4, i32 4)
  store i32 %v2_10000b60, i32* %r27.global-to-local, align 4
  %v0_10000b6c = load i32, i32* @r30, align 4
  store i32 %v0_10000b6c, i32* %r3.global-to-local, align 4
  store i32 268438388, i32* @lr, align 4
  %v2_10000b70 = call i32 @function_100096f8(i32 %v0_10000b6c, i32 4)
  %v0_10000b78 = load i32, i32* @r28, align 4
  store i32 %v2_10000b70, i32* %r26.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b78 to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 7, i32 65535)
  %v0_10000b98 = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 65536
  store i32 %v1_10000ba0, i32* %r21.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b98 to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 6, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  %v1_10000bb0 = urem i32 %v5_10000ba8, 65536
  store i32 %v1_10000bb0, i32* %r22.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 0, i32 512)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bc8 = urem i32 %v5_10000bc0, 65536
  store i32 %v1_10000bc8, i32* @r31, align 4
  %v0_10000bd0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000bdc.14 to i32), i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd0, i32* %v4_10000bd8, i32 1, i32 1)
  store i32 %v5_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000be8 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000be8 = icmp eq i32 %v0_10000be8, 65535
  %v1_10000bf0 = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bf0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000be8, label %dec_label_pc_10000dec, label %dec_label_pc_10000c04

dec_label_pc_10000c04:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000dec
  %v0_10000c04 = load i32, i32* @r30, align 4
  %v1_10000c04 = icmp slt i32 %v0_10000c04, 0
  %v3_10000c04 = icmp eq i32 %v0_10000c04, 0
  store i1 %v1_10000c04, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000c04, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000c04, 1
  br i1 %tmp38, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c0c

dec_label_pc_10000c0c:                            ; preds = %dec_label_pc_10000c04
  %v0_10000c10 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000c10, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000c1c = load i32, i32* %r21.global-to-local, align 4
  %v4_10000c1c = icmp eq i32 %v0_10000c1c, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10000d6c = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000c1c, label %dec_label_pc_10000d3c, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000ca4
  %v0_10000c3c = phi i32 [ %v0_10000cb8, %dec_label_pc_10000ca4 ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000c3c = add i32 %v0_10000c3c, 1
  store i32 %v1_10000c3c, i32* %r24.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v2_10000c40 = call i32 @function_100096f8(i32 65535, i32 1)
  %v0_10000c44 = load i32, i32* %r21.global-to-local, align 4
  %v1_10000c44 = trunc i32 %v0_10000c44 to i16
  %v2_10000c44 = load i32, i32* @r28, align 4
  %v3_10000c44 = add i32 %v2_10000c44, 2
  %v4_10000c44 = inttoptr i32 %v3_10000c44 to i16*
  store i16 %v1_10000c44, i16* %v4_10000c44, align 2
  %v1_10000c48 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c48 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000c48 = add i32 %v2_10000c48, %v1_10000c48
  %v4_10000c48 = inttoptr i32 %v3_10000c48 to i32*
  store i32 %v2_10000c40, i32* %v4_10000c48, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v3_10000c58 = call i32 @function_1000939c(i32 2, i32 2, i32 17)
  store i32 %v3_10000c58, i32* %r3.global-to-local, align 4
  %v3_10000c60 = icmp eq i32 %v3_10000c58, -1
  %v1_10000c68 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c68 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000c68 = add i32 %v2_10000c68, %v1_10000c68
  %v4_10000c68 = inttoptr i32 %v3_10000c68 to i32*
  store i32 %v3_10000c58, i32* %v4_10000c68, align 4
  br i1 %v3_10000c60, label %dec_label_pc_10000da0, label %dec_label_pc_10000c70

dec_label_pc_10000c70:                            ; preds = %dec_label_pc_10000c30
  %v0_10000c70 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000c70, i32* %stack_var_-72, align 4
  store i32 268438656, i32* @lr, align 4
  %v0_10000c7c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000c7c = call i32 @function_10009168(i32 %v0_10000c7c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000c7c, i32* %r3.global-to-local, align 4
  %v0_10000c80 = load i32, i32* @r28, align 4
  %v1_10000c80 = add i32 %v0_10000c80, 20
  %v2_10000c80 = inttoptr i32 %v1_10000c80 to i8*
  %v3_10000c80 = load i8, i8* %v2_10000c80, align 1
  %v2_10000c84 = icmp ugt i8 %v3_10000c80, 31
  br i1 %v2_10000c84, label %dec_label_pc_10000ca4, label %dec_label_pc_10000c8c

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_10000c70
  %v1_10000c8c = add i32 %v0_10000c80, 16
  %v2_10000c8c = inttoptr i32 %v1_10000c8c to i32*
  %v3_10000c8c = load i32, i32* %v2_10000c8c, align 4
  store i32 %v3_10000c8c, i32* %r29.global-to-local, align 4
  %v0_10000c90 = call i32 @function_10005cf4()
  store i32 %v0_10000c90, i32* %r3.global-to-local, align 4
  %v0_10000c94 = load i32, i32* @r28, align 4
  %v1_10000c94 = add i32 %v0_10000c94, 20
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i8*
  %v3_10000c94 = load i8, i8* %v2_10000c94, align 1
  %tmp = urem i8 %v3_10000c94, 64
  %v2_10000c98 = zext i8 %tmp to i32
  %v3_10000c98 = lshr i32 %v0_10000c90, %v2_10000c98
  %v0_10000c9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10000c9c = add i32 %v3_10000c98, %v0_10000c9c
  store i32 %v2_10000c9c, i32* %r3.global-to-local, align 4
  %v2_10000ca0 = add i32 %v0_10000c94, 4
  %v3_10000ca0 = inttoptr i32 %v2_10000ca0 to i32*
  store i32 %v2_10000c9c, i32* %v3_10000ca0, align 4
  br label %dec_label_pc_10000ca4

dec_label_pc_10000ca4:                            ; preds = %dec_label_pc_10000c70, %dec_label_pc_10000c8c
  %v0_10000ca4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000ca4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000ca4 = add i32 %v1_10000ca4, %v0_10000ca4
  %v3_10000ca4 = inttoptr i32 %v2_10000ca4 to i32*
  %v4_10000ca4 = load i32, i32* %v3_10000ca4, align 4
  store i32 %v4_10000ca4, i32* @r3, align 4
  %v1_10000cb0 = add i32 %v0_10000ca4, 4
  store i32 %v1_10000cb0, i32* %r25.global-to-local, align 4
  store i32 268438712, i32* @lr, align 4
  %v0_10000cb4 = call i32 @function_1000919c()
  store i32 %v0_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cb8 = load i32, i32* @r30, align 4
  %v4_10000cb8 = icmp eq i32 %v0_10000cb8, %v1_10000cb8
  %v0_10000cbc = load i32, i32* @r28, align 4
  %v1_10000cbc = add i32 %v0_10000cbc, 24
  store i32 %v1_10000cbc, i32* @r28, align 4
  br i1 %v4_10000cb8, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c30

dec_label_pc_10000cc4:                            ; preds = %dec_label_pc_10000ca4, %dec_label_pc_10000d1c, %dec_label_pc_10000c04
  %v0_10000cc4 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000cc4 = icmp eq i32 %v0_10000cc4, 0
  store i1 %v3_10000cc4, i1* %cr3_eq.global-to-local, align 1
  %v0_10000cc8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cc8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000cc8.outer

dec_label_pc_10000cc8.outer:                      ; preds = %dec_label_pc_10000cfc, %dec_label_pc_10000e34, %dec_label_pc_10000cc4
  %v1_10000cc8.ph39 = phi i1 [ %v1_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v1_10000e34, %dec_label_pc_10000e34 ], [ %v1_10000cfc, %dec_label_pc_10000cfc ]
  %v0_10000cc8.ph40 = phi i1 [ %v0_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v0_10000e34, %dec_label_pc_10000e34 ], [ %v0_10000cfc, %dec_label_pc_10000cfc ]
  %v2_10000cc8 = or i1 %v1_10000cc8.ph39, %v0_10000cc8.ph40
  br label %dec_label_pc_10000cc8

dec_label_pc_10000cc8:                            ; preds = %dec_label_pc_10000cc8.outer, %dec_label_pc_10000cc8
  br i1 %v2_10000cc8, label %dec_label_pc_10000cc8, label %dec_label_pc_10000ccc

dec_label_pc_10000ccc:                            ; preds = %dec_label_pc_10000e34, %dec_label_pc_10000cfc, %dec_label_pc_10000cc8
  %v0_10000ccc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000ccc, label %dec_label_pc_10000cd0, label %dec_label_pc_10000df8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cd8:                            ; preds = %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge, %dec_label_pc_10000cd0
  %v0_10000cdc = phi i32 [ %v0_10000cf4, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v0_10000cec = phi i32 [ %v0_10000cd8.pre, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v1_10000cd8 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000cd8 = add i32 %v1_10000cd8, %v0_10000cec
  %v3_10000cd8 = inttoptr i32 %v2_10000cd8 to i32*
  %v4_10000cd8 = load i32, i32* %v3_10000cd8, align 4
  store i32 %v4_10000cd8, i32* %r3.global-to-local, align 4
  %v1_10000cdc = add i32 %v0_10000cdc, 1
  store i32 %v1_10000cdc, i32* %r28.global-to-local, align 4
  %v1_10000ce0 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000ce0 = add i32 %v1_10000ce0, %v0_10000cec
  %v3_10000ce0 = inttoptr i32 %v2_10000ce0 to i32*
  %v4_10000ce0 = load i32, i32* %v3_10000ce0, align 4
  %v0_10000ce4 = load i32, i32* @r31, align 4
  %v1_10000cec = add i32 %v0_10000cec, 4
  store i32 %v1_10000cec, i32* %r29.global-to-local, align 4
  store i32 268438772, i32* @lr, align 4
  %v4_10000cf0 = call i32 @function_100092e8(i32 %v4_10000cd8, i32 %v4_10000ce0, i32 %v0_10000ce4, i32 16384)
  store i32 %v4_10000cf0, i32* %r3.global-to-local, align 4
  %v0_10000cf4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000cf4 = load i32, i32* @r30, align 4
  %v4_10000cf4 = icmp eq i32 %v0_10000cf4, %v1_10000cf4
  br i1 %v4_10000cf4, label %dec_label_pc_10000cfc, label %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge

dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge: ; preds = %dec_label_pc_10000cd8
  %v0_10000cd8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cfc:                            ; preds = %dec_label_pc_10000cd8
  %v0_10000cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000cfc = or i1 %v0_10000cfc, %v1_10000cfc
  br i1 %v2_10000cfc, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000d80, %dec_label_pc_10000d9c
  %v0_10000d1c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000d1c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000d1c = add i32 %v1_10000d1c, %v0_10000d1c
  %v3_10000d1c = inttoptr i32 %v2_10000d1c to i32*
  %v4_10000d1c = load i32, i32* %v3_10000d1c, align 4
  store i32 %v4_10000d1c, i32* @r3, align 4
  %v1_10000d28 = add i32 %v0_10000d1c, 4
  store i32 %v1_10000d28, i32* %r25.global-to-local, align 4
  store i32 268438832, i32* @lr, align 4
  %v0_10000d2c = call i32 @function_1000919c()
  store i32 %v0_10000d2c, i32* %r3.global-to-local, align 4
  %v0_10000d30 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d30 = load i32, i32* @r30, align 4
  %v4_10000d30 = icmp eq i32 %v0_10000d30, %v1_10000d30
  %v0_10000d34 = load i32, i32* @r28, align 4
  %v1_10000d34 = add i32 %v0_10000d34, 24
  store i32 %v1_10000d34, i32* @r28, align 4
  br i1 %v4_10000d30, label %dec_label_pc_10000cc4, label %dec_label_pc_10000d3c

dec_label_pc_10000d3c:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000d1c
  %v0_10000d48 = phi i32 [ %v0_10000d30, %dec_label_pc_10000d1c ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000d48 = add i32 %v0_10000d48, 1
  store i32 %v1_10000d48, i32* %r24.global-to-local, align 4
  store i32 268438864, i32* @lr, align 4
  %v2_10000d4c = call i32 @function_100096f8(i32 65535, i32 1)
  store i32 %v2_10000d4c, i32* %r3.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d50 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000d50 = add i32 %v2_10000d50, %v1_10000d50
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d4c, i32* %v4_10000d50, align 4
  %v0_10000d54 = call i32 @function_10005cf4()
  %v1_10000d54 = trunc i32 %v0_10000d54 to i16
  %v3_10000d58 = load i32, i32* @r28, align 4
  %v4_10000d58 = add i32 %v3_10000d58, 2
  %v5_10000d58 = inttoptr i32 %v4_10000d58 to i16*
  store i16 %v1_10000d54, i16* %v5_10000d58, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438892, i32* @lr, align 4
  %v3_10000d68 = call i32 @function_1000939c(i32 2, i32 2, i32 17)
  store i32 %v3_10000d68, i32* %r3.global-to-local, align 4
  %v3_10000d70 = icmp eq i32 %v3_10000d68, -1
  %v1_10000d78 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d78 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000d78 = add i32 %v2_10000d78, %v1_10000d78
  %v4_10000d78 = inttoptr i32 %v3_10000d78 to i32*
  store i32 %v3_10000d68, i32* %v4_10000d78, align 4
  br i1 %v3_10000d70, label %dec_label_pc_10000da0, label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000d3c
  %v0_10000d80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d80, i32* %stack_var_-72, align 4
  store i32 268438928, i32* @lr, align 4
  %v0_10000d8c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000d8c = call i32 @function_10009168(i32 %v0_10000d8c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000d8c, i32* %r3.global-to-local, align 4
  %v0_10000d90 = load i32, i32* @r28, align 4
  %v1_10000d90 = add i32 %v0_10000d90, 20
  %v2_10000d90 = inttoptr i32 %v1_10000d90 to i8*
  %v3_10000d90 = load i8, i8* %v2_10000d90, align 1
  %v2_10000d94 = icmp ugt i8 %v3_10000d90, 31
  br i1 %v2_10000d94, label %dec_label_pc_10000d1c, label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d80
  %v1_10000d04 = add i32 %v0_10000d90, 16
  %v2_10000d04 = inttoptr i32 %v1_10000d04 to i32*
  %v3_10000d04 = load i32, i32* %v2_10000d04, align 4
  store i32 %v3_10000d04, i32* %r29.global-to-local, align 4
  %v0_10000d08 = call i32 @function_10005cf4()
  store i32 %v0_10000d08, i32* %r3.global-to-local, align 4
  %v0_10000d0c = load i32, i32* @r28, align 4
  %v1_10000d0c = add i32 %v0_10000d0c, 20
  %v2_10000d0c = inttoptr i32 %v1_10000d0c to i8*
  %v3_10000d0c = load i8, i8* %v2_10000d0c, align 1
  %tmp43 = urem i8 %v3_10000d0c, 64
  %v2_10000d10 = zext i8 %tmp43 to i32
  %v3_10000d10 = lshr i32 %v0_10000d08, %v2_10000d10
  %v0_10000d14 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000d14 = add i32 %v3_10000d10, %v0_10000d14
  store i32 %v2_10000d14, i32* %r3.global-to-local, align 4
  %v2_10000d18 = add i32 %v0_10000d0c, 4
  %v3_10000d18 = inttoptr i32 %v2_10000d18 to i32*
  store i32 %v2_10000d14, i32* %v3_10000d18, align 4
  br label %dec_label_pc_10000d1c

dec_label_pc_10000da0:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000d3c
  %v1_10000db4 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000b0c)
  store i32 %v0_10000b38, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b40, i32* %r29.global-to-local, align 4
  %v0_10000de8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000de8

dec_label_pc_10000dec:                            ; preds = %dec_label_pc_10000b04
  %v0_10000dec = call i32 @function_10005cf4()
  store i32 %v0_10000dec, i32* %r3.global-to-local, align 4
  %v1_10000df0 = urem i32 %v0_10000dec, 65536
  store i32 %v1_10000df0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000c04

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e00:                            ; preds = %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge, %dec_label_pc_10000df8
  %v0_10000e08 = phi i32 [ %v0_10000e2c, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v0_10000e00 = phi i32 [ %v0_10000e00.pre, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v1_10000e00 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000e00 = add i32 %v1_10000e00, %v0_10000e00
  %v3_10000e00 = inttoptr i32 %v2_10000e00 to i32*
  %v4_10000e00 = load i32, i32* %v3_10000e00, align 4
  store i32 %v4_10000e00, i32* @r29, align 4
  %v0_10000e04 = load i32, i32* @r31, align 4
  store i32 %v0_10000e04, i32* @r4, align 4
  %v1_10000e08 = add i32 %v0_10000e08, 1
  store i32 %v1_10000e08, i32* %r25.global-to-local, align 4
  store i32 %v4_10000e00, i32* @r3, align 4
  %v0_10000e10 = call i32 @function_10005ec8()
  store i32 %v0_10000e10, i32* %r3.global-to-local, align 4
  %v0_10000e14 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, %v0_10000e14
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  %v4_10000e14 = load i32, i32* %v3_10000e14, align 4
  store i32 %v4_10000e14, i32* %r3.global-to-local, align 4
  %v0_10000e18 = load i32, i32* @r29, align 4
  %v0_10000e1c = load i32, i32* @r31, align 4
  %v1_10000e24 = add i32 %v0_10000e14, 4
  store i32 %v1_10000e24, i32* %r28.global-to-local, align 4
  store i32 268439084, i32* @lr, align 4
  %v4_10000e28 = call i32 @function_100092e8(i32 %v4_10000e14, i32 %v0_10000e18, i32 %v0_10000e1c, i32 16384)
  store i32 %v4_10000e28, i32* %r3.global-to-local, align 4
  %v0_10000e2c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000e2c = load i32, i32* @r30, align 4
  %v4_10000e2c = icmp eq i32 %v0_10000e2c, %v1_10000e2c
  br i1 %v4_10000e2c, label %dec_label_pc_10000e34, label %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge

dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge: ; preds = %dec_label_pc_10000e00
  %v0_10000e00.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e34:                            ; preds = %dec_label_pc_10000e00
  %v0_10000e34 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000e34 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000e34 = or i1 %v0_10000e34, %v1_10000e34
  br i1 %v2_10000e34, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

; uselistorder directives
  uselistorder i1 %v1_10000e34, { 1, 0 }
  uselistorder i1 %v0_10000e34, { 1, 0 }
  uselistorder i32 %v0_10000e2c, { 1, 0 }
  uselistorder i32 %v0_10000e14, { 1, 0 }
  uselistorder i32 %v0_10000d1c, { 1, 0 }
  uselistorder i1 %v1_10000cfc, { 1, 0 }
  uselistorder i1 %v0_10000cfc, { 1, 0 }
  uselistorder i32 %v0_10000cf4, { 1, 0 }
  uselistorder i32 %v0_10000cec, { 2, 0, 1 }
  uselistorder i32 %v0_10000cb8, { 1, 0 }
  uselistorder i32 %v0_10000ca4, { 1, 0 }
  uselistorder i32 %v2_10000d6c, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 22, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10000da0, { 1, 0 }
  uselistorder label %dec_label_pc_10000d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000cc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c30, { 1, 0 }
  uselistorder label %dec_label_pc_10000c04, { 1, 0 }
}

define i32 @function_10000e3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000e3c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000e44 = call i32 @__asm_mfcr()
  store i32 %v0_10000e44, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000e70 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000e78 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268439196, i32* @lr, align 4
  %v2_10000e98 = call i32 @function_100096f8(i32 4, i32 4)
  store i32 %v2_10000e98, i32* %r27.global-to-local, align 4
  %v0_10000ea4 = load i32, i32* @r30, align 4
  store i32 %v0_10000ea4, i32* %r3.global-to-local, align 4
  store i32 268439212, i32* @lr, align 4
  %v2_10000ea8 = call i32 @function_100096f8(i32 %v0_10000ea4, i32 4)
  %v0_10000eb0 = load i32, i32* @r28, align 4
  store i32 %v2_10000ea8, i32* %r26.global-to-local, align 4
  %v0_10000ec0 = load i32, i32* @r29, align 4
  store i32 %v0_10000ec0, i32* %r3.global-to-local, align 4
  store i32 268439240, i32* @lr, align 4
  %v4_10000ec4 = inttoptr i32 %v0_10000eb0 to i32*
  %v5_10000ec4 = call i32 @function_100006a8(i32 %v0_10000ec0, i32* %v4_10000ec4, i32 7, i32 65535)
  %v0_10000ed0 = load i32, i32* @r28, align 4
  %v1_10000ed8 = urem i32 %v5_10000ec4, 65536
  store i32 %v1_10000ed8, i32* %r21.global-to-local, align 4
  %v0_10000edc = load i32, i32* @r29, align 4
  store i32 %v0_10000edc, i32* %r3.global-to-local, align 4
  store i32 268439268, i32* @lr, align 4
  %v4_10000ee0 = inttoptr i32 %v0_10000ed0 to i32*
  %v5_10000ee0 = call i32 @function_100006a8(i32 %v0_10000edc, i32* %v4_10000ee0, i32 6, i32 65535)
  %v0_10000ee4 = load i32, i32* @r28, align 4
  %v1_10000ee8 = urem i32 %v5_10000ee0, 65536
  store i32 %v1_10000ee8, i32* %r22.global-to-local, align 4
  %v0_10000ef4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ef4, i32* %r3.global-to-local, align 4
  store i32 268439292, i32* @lr, align 4
  %v4_10000ef8 = inttoptr i32 %v0_10000ee4 to i32*
  %v5_10000ef8 = call i32 @function_100006a8(i32 %v0_10000ef4, i32* %v4_10000ef8, i32 0, i32 1024)
  %v0_10000efc = load i32, i32* @r28, align 4
  %v1_10000f00 = urem i32 %v5_10000ef8, 65536
  store i32 %v1_10000f00, i32* @r31, align 4
  %v0_10000f08 = load i32, i32* @r29, align 4
  store i32 %v0_10000f08, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000f14.15 to i32), i32* @lr, align 4
  %v4_10000f10 = inttoptr i32 %v0_10000efc to i32*
  %v5_10000f10 = call i32 @function_100006a8(i32 %v0_10000f08, i32* %v4_10000f10, i32 1, i32 1)
  store i32 %v5_10000f10, i32* %r3.global-to-local, align 4
  %v0_10000f20 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000f20 = icmp eq i32 %v0_10000f20, 65535
  %v1_10000f28 = urem i32 %v5_10000f10, 256
  store i32 %v1_10000f28, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000f20, label %dec_label_pc_10001124, label %dec_label_pc_10000f3c

dec_label_pc_10000f3c:                            ; preds = %dec_label_pc_10000e3c, %dec_label_pc_10001124
  %v0_10000f3c = load i32, i32* @r30, align 4
  %v1_10000f3c = icmp slt i32 %v0_10000f3c, 0
  %v3_10000f3c = icmp eq i32 %v0_10000f3c, 0
  store i1 %v1_10000f3c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000f3c, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000f3c, 1
  br i1 %tmp38, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f44

dec_label_pc_10000f44:                            ; preds = %dec_label_pc_10000f3c
  %v0_10000f48 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000f48, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000f54 = load i32, i32* %r21.global-to-local, align 4
  %v4_10000f54 = icmp eq i32 %v0_10000f54, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100010a4 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000f54, label %dec_label_pc_10001074, label %dec_label_pc_10000f68

dec_label_pc_10000f68:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10000fdc
  %v0_10000f74 = phi i32 [ %v0_10000ff0, %dec_label_pc_10000fdc ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 1
  store i32 %v1_10000f74, i32* %r24.global-to-local, align 4
  store i32 268439420, i32* @lr, align 4
  %v2_10000f78 = call i32 @function_100096f8(i32 65535, i32 1)
  %v0_10000f7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10000f7c = trunc i32 %v0_10000f7c to i16
  %v2_10000f7c = load i32, i32* @r28, align 4
  %v3_10000f7c = add i32 %v2_10000f7c, 2
  %v4_10000f7c = inttoptr i32 %v3_10000f7c to i16*
  store i16 %v1_10000f7c, i16* %v4_10000f7c, align 2
  %v1_10000f80 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000f80 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000f80 = add i32 %v2_10000f80, %v1_10000f80
  %v4_10000f80 = inttoptr i32 %v3_10000f80 to i32*
  store i32 %v2_10000f78, i32* %v4_10000f80, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439444, i32* @lr, align 4
  %v3_10000f90 = call i32 @function_1000939c(i32 2, i32 2, i32 0)
  store i32 %v3_10000f90, i32* %r3.global-to-local, align 4
  %v3_10000f98 = icmp eq i32 %v3_10000f90, -1
  %v1_10000fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fa0 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000fa0 = add i32 %v2_10000fa0, %v1_10000fa0
  %v4_10000fa0 = inttoptr i32 %v3_10000fa0 to i32*
  store i32 %v3_10000f90, i32* %v4_10000fa0, align 4
  br i1 %v3_10000f98, label %dec_label_pc_100010d8, label %dec_label_pc_10000fa8

dec_label_pc_10000fa8:                            ; preds = %dec_label_pc_10000f68
  %v0_10000fa8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fa8, i32* %stack_var_-72, align 4
  store i32 268439480, i32* @lr, align 4
  %v0_10000fb4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10000fb4 = call i32 @function_10009168(i32 %v0_10000fb4, i32 %v2_100010a4, i32 16)
  store i32 %v3_10000fb4, i32* %r3.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* @r28, align 4
  %v1_10000fb8 = add i32 %v0_10000fb8, 20
  %v2_10000fb8 = inttoptr i32 %v1_10000fb8 to i8*
  %v3_10000fb8 = load i8, i8* %v2_10000fb8, align 1
  %v2_10000fbc = icmp ugt i8 %v3_10000fb8, 31
  br i1 %v2_10000fbc, label %dec_label_pc_10000fdc, label %dec_label_pc_10000fc4

dec_label_pc_10000fc4:                            ; preds = %dec_label_pc_10000fa8
  %v1_10000fc4 = add i32 %v0_10000fb8, 16
  %v2_10000fc4 = inttoptr i32 %v1_10000fc4 to i32*
  %v3_10000fc4 = load i32, i32* %v2_10000fc4, align 4
  store i32 %v3_10000fc4, i32* %r29.global-to-local, align 4
  %v0_10000fc8 = call i32 @function_10005cf4()
  store i32 %v0_10000fc8, i32* %r3.global-to-local, align 4
  %v0_10000fcc = load i32, i32* @r28, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 20
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i8*
  %v3_10000fcc = load i8, i8* %v2_10000fcc, align 1
  %tmp = urem i8 %v3_10000fcc, 64
  %v2_10000fd0 = zext i8 %tmp to i32
  %v3_10000fd0 = lshr i32 %v0_10000fc8, %v2_10000fd0
  %v0_10000fd4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000fd4 = add i32 %v3_10000fd0, %v0_10000fd4
  store i32 %v2_10000fd4, i32* %r3.global-to-local, align 4
  %v2_10000fd8 = add i32 %v0_10000fcc, 4
  %v3_10000fd8 = inttoptr i32 %v2_10000fd8 to i32*
  store i32 %v2_10000fd4, i32* %v3_10000fd8, align 4
  br label %dec_label_pc_10000fdc

dec_label_pc_10000fdc:                            ; preds = %dec_label_pc_10000fa8, %dec_label_pc_10000fc4
  %v0_10000fdc = load i32, i32* %r25.global-to-local, align 4
  %v1_10000fdc = load i32, i32* %r26.global-to-local, align 4
  %v2_10000fdc = add i32 %v1_10000fdc, %v0_10000fdc
  %v3_10000fdc = inttoptr i32 %v2_10000fdc to i32*
  %v4_10000fdc = load i32, i32* %v3_10000fdc, align 4
  store i32 %v4_10000fdc, i32* @r3, align 4
  %v1_10000fe8 = add i32 %v0_10000fdc, 4
  store i32 %v1_10000fe8, i32* %r25.global-to-local, align 4
  store i32 268439536, i32* @lr, align 4
  %v0_10000fec = call i32 @function_1000919c()
  store i32 %v0_10000fec, i32* %r3.global-to-local, align 4
  %v0_10000ff0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000ff0 = load i32, i32* @r30, align 4
  %v4_10000ff0 = icmp eq i32 %v0_10000ff0, %v1_10000ff0
  %v0_10000ff4 = load i32, i32* @r28, align 4
  %v1_10000ff4 = add i32 %v0_10000ff4, 24
  store i32 %v1_10000ff4, i32* @r28, align 4
  br i1 %v4_10000ff0, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f68

dec_label_pc_10000ffc:                            ; preds = %dec_label_pc_10000fdc, %dec_label_pc_10001054, %dec_label_pc_10000f3c
  %v0_10000ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10000ffc = icmp eq i32 %v0_10000ffc, 0
  store i1 %v3_10000ffc, i1* %cr3_eq.global-to-local, align 1
  %v0_10001000.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001000.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001000.outer

dec_label_pc_10001000.outer:                      ; preds = %dec_label_pc_10001034, %dec_label_pc_1000116c, %dec_label_pc_10000ffc
  %v1_10001000.ph39 = phi i1 [ %v1_10001000.pre, %dec_label_pc_10000ffc ], [ %v1_1000116c, %dec_label_pc_1000116c ], [ %v1_10001034, %dec_label_pc_10001034 ]
  %v0_10001000.ph40 = phi i1 [ %v0_10001000.pre, %dec_label_pc_10000ffc ], [ %v0_1000116c, %dec_label_pc_1000116c ], [ %v0_10001034, %dec_label_pc_10001034 ]
  %v2_10001000 = or i1 %v1_10001000.ph39, %v0_10001000.ph40
  br label %dec_label_pc_10001000

dec_label_pc_10001000:                            ; preds = %dec_label_pc_10001000.outer, %dec_label_pc_10001000
  br i1 %v2_10001000, label %dec_label_pc_10001000, label %dec_label_pc_10001004

dec_label_pc_10001004:                            ; preds = %dec_label_pc_1000116c, %dec_label_pc_10001034, %dec_label_pc_10001000
  %v0_10001004 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001004, label %dec_label_pc_10001008, label %dec_label_pc_10001130

dec_label_pc_10001008:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001010:                            ; preds = %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge, %dec_label_pc_10001008
  %v0_10001014 = phi i32 [ %v0_1000102c, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v0_10001024 = phi i32 [ %v0_10001010.pre, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v1_10001010 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001010 = add i32 %v1_10001010, %v0_10001024
  %v3_10001010 = inttoptr i32 %v2_10001010 to i32*
  %v4_10001010 = load i32, i32* %v3_10001010, align 4
  store i32 %v4_10001010, i32* %r3.global-to-local, align 4
  %v1_10001014 = add i32 %v0_10001014, 1
  store i32 %v1_10001014, i32* %r28.global-to-local, align 4
  %v1_10001018 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001018 = add i32 %v1_10001018, %v0_10001024
  %v3_10001018 = inttoptr i32 %v2_10001018 to i32*
  %v4_10001018 = load i32, i32* %v3_10001018, align 4
  %v0_1000101c = load i32, i32* @r31, align 4
  %v1_10001024 = add i32 %v0_10001024, 4
  store i32 %v1_10001024, i32* %r29.global-to-local, align 4
  store i32 268439596, i32* @lr, align 4
  %v4_10001028 = call i32 @function_100092e8(i32 %v4_10001010, i32 %v4_10001018, i32 %v0_1000101c, i32 16384)
  store i32 %v4_10001028, i32* %r3.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000102c = load i32, i32* @r30, align 4
  %v4_1000102c = icmp eq i32 %v0_1000102c, %v1_1000102c
  br i1 %v4_1000102c, label %dec_label_pc_10001034, label %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge

dec_label_pc_10001010.dec_label_pc_10001010_crit_edge: ; preds = %dec_label_pc_10001010
  %v0_10001010.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001034:                            ; preds = %dec_label_pc_10001010
  %v0_10001034 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001034 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001034 = or i1 %v0_10001034, %v1_10001034
  br i1 %v2_10001034, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

dec_label_pc_10001054:                            ; preds = %dec_label_pc_100010b8, %dec_label_pc_100010d4
  %v0_10001054 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001054 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001054 = add i32 %v1_10001054, %v0_10001054
  %v3_10001054 = inttoptr i32 %v2_10001054 to i32*
  %v4_10001054 = load i32, i32* %v3_10001054, align 4
  store i32 %v4_10001054, i32* @r3, align 4
  %v1_10001060 = add i32 %v0_10001054, 4
  store i32 %v1_10001060, i32* %r25.global-to-local, align 4
  store i32 268439656, i32* @lr, align 4
  %v0_10001064 = call i32 @function_1000919c()
  store i32 %v0_10001064, i32* %r3.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001068 = load i32, i32* @r30, align 4
  %v4_10001068 = icmp eq i32 %v0_10001068, %v1_10001068
  %v0_1000106c = load i32, i32* @r28, align 4
  %v1_1000106c = add i32 %v0_1000106c, 24
  store i32 %v1_1000106c, i32* @r28, align 4
  br i1 %v4_10001068, label %dec_label_pc_10000ffc, label %dec_label_pc_10001074

dec_label_pc_10001074:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10001054
  %v0_10001080 = phi i32 [ %v0_10001068, %dec_label_pc_10001054 ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001080 = add i32 %v0_10001080, 1
  store i32 %v1_10001080, i32* %r24.global-to-local, align 4
  store i32 268439688, i32* @lr, align 4
  %v2_10001084 = call i32 @function_100096f8(i32 65535, i32 1)
  store i32 %v2_10001084, i32* %r3.global-to-local, align 4
  %v1_10001088 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001088 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001088 = add i32 %v2_10001088, %v1_10001088
  %v4_10001088 = inttoptr i32 %v3_10001088 to i32*
  store i32 %v2_10001084, i32* %v4_10001088, align 4
  %v0_1000108c = call i32 @function_10005cf4()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  %v3_10001090 = load i32, i32* @r28, align 4
  %v4_10001090 = add i32 %v3_10001090, 2
  %v5_10001090 = inttoptr i32 %v4_10001090 to i16*
  store i16 %v1_1000108c, i16* %v5_10001090, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439716, i32* @lr, align 4
  %v3_100010a0 = call i32 @function_1000939c(i32 2, i32 2, i32 0)
  store i32 %v3_100010a0, i32* %r3.global-to-local, align 4
  %v3_100010a8 = icmp eq i32 %v3_100010a0, -1
  %v1_100010b0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100010b0 = load i32, i32* %r26.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010b0, %v1_100010b0
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i32*
  store i32 %v3_100010a0, i32* %v4_100010b0, align 4
  br i1 %v3_100010a8, label %dec_label_pc_100010d8, label %dec_label_pc_100010b8

dec_label_pc_100010b8:                            ; preds = %dec_label_pc_10001074
  %v0_100010b8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100010b8, i32* %stack_var_-72, align 4
  store i32 268439752, i32* @lr, align 4
  %v0_100010c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100010c4 = call i32 @function_10009168(i32 %v0_100010c4, i32 %v2_100010a4, i32 16)
  store i32 %v3_100010c4, i32* %r3.global-to-local, align 4
  %v0_100010c8 = load i32, i32* @r28, align 4
  %v1_100010c8 = add i32 %v0_100010c8, 20
  %v2_100010c8 = inttoptr i32 %v1_100010c8 to i8*
  %v3_100010c8 = load i8, i8* %v2_100010c8, align 1
  %v2_100010cc = icmp ugt i8 %v3_100010c8, 31
  br i1 %v2_100010cc, label %dec_label_pc_10001054, label %dec_label_pc_100010d4

dec_label_pc_100010d4:                            ; preds = %dec_label_pc_100010b8
  %v1_1000103c = add i32 %v0_100010c8, 16
  %v2_1000103c = inttoptr i32 %v1_1000103c to i32*
  %v3_1000103c = load i32, i32* %v2_1000103c, align 4
  store i32 %v3_1000103c, i32* %r29.global-to-local, align 4
  %v0_10001040 = call i32 @function_10005cf4()
  store i32 %v0_10001040, i32* %r3.global-to-local, align 4
  %v0_10001044 = load i32, i32* @r28, align 4
  %v1_10001044 = add i32 %v0_10001044, 20
  %v2_10001044 = inttoptr i32 %v1_10001044 to i8*
  %v3_10001044 = load i8, i8* %v2_10001044, align 1
  %tmp43 = urem i8 %v3_10001044, 64
  %v2_10001048 = zext i8 %tmp43 to i32
  %v3_10001048 = lshr i32 %v0_10001040, %v2_10001048
  %v0_1000104c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000104c = add i32 %v3_10001048, %v0_1000104c
  store i32 %v2_1000104c, i32* %r3.global-to-local, align 4
  %v2_10001050 = add i32 %v0_10001044, 4
  %v3_10001050 = inttoptr i32 %v2_10001050 to i32*
  store i32 %v2_1000104c, i32* %v3_10001050, align 4
  br label %dec_label_pc_10001054

dec_label_pc_100010d8:                            ; preds = %dec_label_pc_10000f68, %dec_label_pc_10001074
  %v1_100010ec = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000e44)
  store i32 %v0_10000e70, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r29.global-to-local, align 4
  %v0_10001120 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001120

dec_label_pc_10001124:                            ; preds = %dec_label_pc_10000e3c
  %v0_10001124 = call i32 @function_10005cf4()
  store i32 %v0_10001124, i32* %r3.global-to-local, align 4
  %v1_10001128 = urem i32 %v0_10001124, 65536
  store i32 %v1_10001128, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000f3c

dec_label_pc_10001130:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_10001138:                            ; preds = %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge, %dec_label_pc_10001130
  %v0_10001140 = phi i32 [ %v0_10001164, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v0_10001138 = phi i32 [ %v0_10001138.pre, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v1_10001138 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001138 = add i32 %v1_10001138, %v0_10001138
  %v3_10001138 = inttoptr i32 %v2_10001138 to i32*
  %v4_10001138 = load i32, i32* %v3_10001138, align 4
  store i32 %v4_10001138, i32* @r29, align 4
  %v0_1000113c = load i32, i32* @r31, align 4
  store i32 %v0_1000113c, i32* @r4, align 4
  %v1_10001140 = add i32 %v0_10001140, 1
  store i32 %v1_10001140, i32* %r25.global-to-local, align 4
  store i32 %v4_10001138, i32* @r3, align 4
  %v0_10001148 = call i32 @function_10005ec8()
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  %v0_1000114c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000114c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000114c = add i32 %v1_1000114c, %v0_1000114c
  %v3_1000114c = inttoptr i32 %v2_1000114c to i32*
  %v4_1000114c = load i32, i32* %v3_1000114c, align 4
  store i32 %v4_1000114c, i32* %r3.global-to-local, align 4
  %v0_10001150 = load i32, i32* @r29, align 4
  %v0_10001154 = load i32, i32* @r31, align 4
  %v1_1000115c = add i32 %v0_1000114c, 4
  store i32 %v1_1000115c, i32* %r28.global-to-local, align 4
  store i32 268439908, i32* @lr, align 4
  %v4_10001160 = call i32 @function_100092e8(i32 %v4_1000114c, i32 %v0_10001150, i32 %v0_10001154, i32 16384)
  store i32 %v4_10001160, i32* %r3.global-to-local, align 4
  %v0_10001164 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001164 = load i32, i32* @r30, align 4
  %v4_10001164 = icmp eq i32 %v0_10001164, %v1_10001164
  br i1 %v4_10001164, label %dec_label_pc_1000116c, label %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge

dec_label_pc_10001138.dec_label_pc_10001138_crit_edge: ; preds = %dec_label_pc_10001138
  %v0_10001138.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_1000116c:                            ; preds = %dec_label_pc_10001138
  %v0_1000116c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000116c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000116c = or i1 %v0_1000116c, %v1_1000116c
  br i1 %v2_1000116c, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

; uselistorder directives
  uselistorder i1 %v1_1000116c, { 1, 0 }
  uselistorder i1 %v0_1000116c, { 1, 0 }
  uselistorder i32 %v0_10001164, { 1, 0 }
  uselistorder i32 %v0_1000114c, { 1, 0 }
  uselistorder i32 %v0_10001054, { 1, 0 }
  uselistorder i1 %v1_10001034, { 1, 0 }
  uselistorder i1 %v0_10001034, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 1, 0 }
  uselistorder i32 %v0_10001024, { 2, 0, 1 }
  uselistorder i32 %v0_10000ff0, { 1, 0 }
  uselistorder i32 %v0_10000fdc, { 1, 0 }
  uselistorder i32 %v2_100010a4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 2, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100010d8, { 1, 0 }
  uselistorder label %dec_label_pc_10001074, { 1, 0 }
  uselistorder label %dec_label_pc_10001054, { 1, 0 }
  uselistorder label %dec_label_pc_10001000, { 1, 0 }
  uselistorder label %dec_label_pc_10001000.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ffc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000f68, { 1, 0 }
  uselistorder label %dec_label_pc_10000f3c, { 1, 0 }
}

define i32 @function_10001174(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001174:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001178 = load i32, i32* @lr, align 4
  store i32 %v0_10001178, i32* %r0.global-to-local, align 4
  %v0_1000117c = call i32 @__asm_mfcr()
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_1000118c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000117c, i32* %r19.global-to-local, align 4
  %v0_100011c0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100011c8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100011d0 = load i32, i32* @r30, align 4
  %v0_100011d4 = load i32, i32* @r31, align 4
  store i32 268440040, i32* @lr, align 4
  %v2_100011e4 = call i32 @function_100096f8(i32 4, i32 4)
  store i32 %v2_100011e4, i32* %r20.global-to-local, align 4
  %v0_100011ec = load i32, i32* @r28, align 4
  %v0_100011f8 = load i32, i32* @r29, align 4
  store i32 %v0_100011f8, i32* %r3.global-to-local, align 4
  store i32 268440064, i32* @lr, align 4
  %v4_100011fc = inttoptr i32 %v0_100011ec to i32*
  %v5_100011fc = call i32 @function_100006a8(i32 %v0_100011f8, i32* %v4_100011fc, i32 2, i32 0)
  %v0_1000120c = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_100011fc, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_1000120c to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 3, i32 65535)
  %v0_1000121c = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r23.global-to-local, align 4
  %v0_1000122c = load i32, i32* @r29, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = inttoptr i32 %v0_1000121c to i32*
  %v5_10001230 = call i32 @function_100006a8(i32 %v0_1000122c, i32* %v4_10001230, i32 4, i32 64)
  %v0_10001234 = load i32, i32* @r28, align 4
  %v1_10001240 = urem i32 %v5_10001230, 256
  store i32 %v1_10001240, i32* %r16.global-to-local, align 4
  %v0_10001244 = load i32, i32* @r29, align 4
  store i32 %v0_10001244, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v4_10001248 = inttoptr i32 %v0_10001234 to i32*
  %v5_10001248 = call i32 @function_100006a8(i32 %v0_10001244, i32* %v4_10001248, i32 5, i32 0)
  %v0_10001258 = load i32, i32* @r28, align 4
  %v1_1000125c = urem i32 %v5_10001248, 256
  store i32 %v1_1000125c, i32* @r31, align 4
  %v0_10001260 = load i32, i32* @r29, align 4
  store i32 %v0_10001260, i32* %r3.global-to-local, align 4
  store i32 268440168, i32* @lr, align 4
  %v4_10001264 = inttoptr i32 %v0_10001258 to i32*
  %v5_10001264 = call i32 @function_100006a8(i32 %v0_10001260, i32* %v4_10001264, i32 6, i32 65535)
  %v0_1000126c = load i32, i32* @r28, align 4
  store i32 %v5_10001264, i32* %r24.global-to-local, align 4
  %v0_1000127c = load i32, i32* @r29, align 4
  store i32 %v0_1000127c, i32* %r3.global-to-local, align 4
  store i32 268440196, i32* @lr, align 4
  %v4_10001280 = inttoptr i32 %v0_1000126c to i32*
  %v5_10001280 = call i32 @function_100006a8(i32 %v0_1000127c, i32* %v4_10001280, i32 7, i32 65535)
  %v0_10001284 = load i32, i32* @r28, align 4
  store i32 %v5_10001280, i32* %r25.global-to-local, align 4
  %v0_10001294 = load i32, i32* @r29, align 4
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  store i32 268440220, i32* @lr, align 4
  %v4_10001298 = inttoptr i32 %v0_10001284 to i32*
  %v5_10001298 = call i32 @function_100006a8(i32 %v0_10001294, i32* %v4_10001298, i32 0, i32 512)
  %v0_1000129c = load i32, i32* @r28, align 4
  store i32 %v5_10001298, i32* %r26.global-to-local, align 4
  %v0_100012ac = load i32, i32* @r29, align 4
  store i32 %v0_100012ac, i32* %r3.global-to-local, align 4
  store i32 268440244, i32* @lr, align 4
  %v4_100012b0 = inttoptr i32 %v0_1000129c to i32*
  %v5_100012b0 = call i32 @function_100006a8(i32 %v0_100012ac, i32* %v4_100012b0, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100012b8 = load i32, i32* @global_var_1001b718.16, align 4
  %v0_100012bc = load i32, i32* @r28, align 4
  %v1_100012c4 = urem i32 %v5_100012b0, 256
  store i32 %v1_100012c4, i32* %r17.global-to-local, align 4
  %v0_100012c8 = load i32, i32* @r29, align 4
  store i32 %v0_100012c8, i32* %r3.global-to-local, align 4
  store i32 268440272, i32* @lr, align 4
  %v4_100012cc = inttoptr i32 %v0_100012bc to i32*
  %v5_100012cc = call i32 @function_100006a8(i32 %v0_100012c8, i32* %v4_100012cc, i32 25, i32 %v3_100012b8)
  store i32 %v5_100012cc, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440292, i32* @lr, align 4
  %v3_100012e0 = call i32 @function_1000939c(i32 2, i32 3, i32 17)
  store i32 %v3_100012e0, i32* %r3.global-to-local, align 4
  %v3_100012e4 = icmp eq i32 %v3_100012e0, -1
  store i32 %v3_100012e0, i32* %r21.global-to-local, align 4
  br i1 %v3_100012e4, label %dec_label_pc_10001540, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_10001174
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100012fc = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440332, i32* @lr, align 4
  %v4_10001308 = call i32 @function_10009360(i32 0, i32 3, i32 %v2_100012fc, i32 4)
  store i32 %v4_10001308, i32* %r3.global-to-local, align 4
  %v3_1000130c = icmp eq i32 %v4_10001308, -1
  br i1 %v3_1000130c, label %dec_label_pc_10001538, label %dec_label_pc_10001314

dec_label_pc_10001314:                            ; preds = %dec_label_pc_100012f0
  %v0_10001314 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001314 = urem i32 %v0_10001314, 65536
  store i32 %v1_10001314, i32* %r18.global-to-local, align 4
  %v0_10001318 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001318 = urem i32 %v0_10001318, 65536
  store i32 %v1_10001318, i32* %r22.global-to-local, align 4
  %v0_10001320 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001320 = urem i32 %v0_10001320, 65536
  store i32 %v1_10001320, i32* %r23.global-to-local, align 4
  %v0_10001324 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001324 = urem i32 %v0_10001324, 65536
  store i32 %v1_10001324, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10001314, 1461
  br i1 %tmp30, label %dec_label_pc_10001330, label %dec_label_pc_1000132c

dec_label_pc_1000132c:                            ; preds = %dec_label_pc_10001314
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10001330

dec_label_pc_10001330:                            ; preds = %dec_label_pc_10001314, %dec_label_pc_1000132c
  %v0_10001640 = phi i32 [ %v1_10001314, %dec_label_pc_10001314 ], [ 1460, %dec_label_pc_1000132c ]
  %v0_10001330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001330 = icmp slt i32 %v0_10001330, 0
  %v3_10001330 = icmp eq i32 %v0_10001330, 0
  store i1 %v1_10001330, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001330, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_10001330, 1
  br i1 %tmp31, label %dec_label_pc_10001638, label %dec_label_pc_10001340

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  %v0_10001340 = load i32, i32* @r31, align 4
  %v3_10001340 = icmp eq i32 %v0_10001340, 0
  %v1_10001344 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001344, i32* %r25.global-to-local, align 4
  %v1_10001348 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001348, i32* %r26.global-to-local, align 4
  %v1_1000134c = urem i32 %v1_10001344, 65536
  store i32 %v1_1000134c, i32* @r28, align 4
  %v1_10001350 = urem i32 %v1_10001348, 65536
  store i32 %v1_10001350, i32* @r29, align 4
  br i1 %v3_10001340, label %dec_label_pc_10001358, label %dec_label_pc_100015a0

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_1000135c

dec_label_pc_1000135c:                            ; preds = %dec_label_pc_1000135c, %dec_label_pc_10001358
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440424, i32* @lr, align 4
  %v2_10001364 = call i32 @function_100096f8(i32 1510, i32 1)
  store i32 %v2_10001364, i32* %r3.global-to-local, align 4
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001368, i32* %r9.global-to-local, align 4
  %v0_1000136c = load i32, i32* @r31, align 4
  %v1_1000136c = mul i32 %v0_1000136c, 4
  store i32 %v1_1000136c, i32* %r0.global-to-local, align 4
  %v1_10001370 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001370 = add i32 %v1_10001370, %v1_1000136c
  %v4_10001370 = inttoptr i32 %v3_10001370 to i32*
  store i32 %v2_10001364, i32* %v4_10001370, align 4
  %v0_10001374 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001374 = mul i32 %v0_10001374, 4
  store i32 %v1_10001374, i32* %r9.global-to-local, align 4
  %v1_10001378 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001378 = add i32 %v1_10001378, %v1_10001374
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  %v4_10001378 = load i32, i32* %v3_10001378, align 4
  store i32 %v4_10001378, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001380 = inttoptr i32 %v4_10001378 to i32*
  %v2_10001380 = load i32, i32* %v1_10001380, align 4
  store i32 %v2_10001380, i32* %r0.global-to-local, align 4
  %v1_10001384 = add i32 %v4_10001378, 20
  store i32 %v1_10001384, i32* %r10.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001388 = trunc i32 %v0_10001388 to i8
  %v3_10001388 = add i32 %v4_10001378, 8
  %v4_10001388 = inttoptr i32 %v3_10001388 to i8*
  store i8 %v1_10001388, i8* %v4_10001388, align 1
  %v1_1000138c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000138c, i32* %r0.global-to-local, align 4
  %v0_10001390 = load i32, i32* @r30, align 4
  %v1_10001390 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, 12
  %v3_10001390 = inttoptr i32 %v2_10001390 to i32*
  store i32 %v0_10001390, i32* %v3_10001390, align 4
  %v1_10001394 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001398 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001398 = trunc i32 %v0_10001398 to i16
  %v2_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001398 = add i32 %v2_10001398, 4
  %v4_10001398 = inttoptr i32 %v3_10001398 to i16*
  store i16 %v1_10001398, i16* %v4_10001398, align 2
  %v1_1000139c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  store i32 %v1_10001394, i32* %v2_1000139c, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013a4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 9
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i8*
  store i8 17, i8* %v4_100013a4, align 1
  %v0_100013a8 = load i32, i32* %r15.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 1
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i32, i32* @r28, align 4
  %v1_100013ac = trunc i32 %v0_100013ac to i16
  %v2_100013ac = load i32, i32* %r11.global-to-local, align 4
  %v3_100013ac = add i32 %v2_100013ac, 2
  %v4_100013ac = inttoptr i32 %v3_100013ac to i16*
  store i16 %v1_100013ac, i16* %v4_100013ac, align 2
  %v3_100013b0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100013b0, i32* %r9.global-to-local, align 4
  %v0_100013b4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100013b4 = trunc i32 %v0_100013b4 to i16
  %v2_100013b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 20
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 %v1_100013b4, i16* %v4_100013b4, align 2
  %v0_100013b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013b8 = add i32 %v0_100013b8, 1
  store i32 %v1_100013b8, i32* %r31.global-to-local, align 4
  %v1_100013bc = mul i32 %v0_100013b8, 24
  store i32 %v1_100013bc, i32* %r9.global-to-local, align 4
  %v1_100013c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100013c0 = icmp slt i32 %v1_100013b8, %v1_100013c0
  %v0_100013c4 = load i32, i32* @r29, align 4
  %v1_100013c4 = trunc i32 %v0_100013c4 to i16
  %v2_100013c4 = load i32, i32* %r10.global-to-local, align 4
  %v3_100013c4 = add i32 %v2_100013c4, 4
  %v4_100013c4 = inttoptr i32 %v3_100013c4 to i16*
  store i16 %v1_100013c4, i16* %v4_100013c4, align 2
  %v0_100013c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, %v0_100013c8
  store i32 %v2_100013c8, i32* %r9.global-to-local, align 4
  %v0_100013cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100013cc = trunc i32 %v0_100013cc to i16
  %v2_100013cc = load i32, i32* %r10.global-to-local, align 4
  %v3_100013cc = add i32 %v2_100013cc, 2
  %v4_100013cc = inttoptr i32 %v3_100013cc to i16*
  store i16 %v1_100013cc, i16* %v4_100013cc, align 2
  %v0_100013d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013d0 = add i32 %v0_100013d0, 16
  %v2_100013d0 = inttoptr i32 %v1_100013d0 to i32*
  %v3_100013d0 = load i32, i32* %v2_100013d0, align 4
  store i32 %v3_100013d0, i32* %r0.global-to-local, align 4
  %v1_100013d4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v3_100013d0, i32* %v3_100013d4, align 4
  %v0_100013d8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100013d8, i32* %stack_var_-104, align 4
  br i1 %v2_100013c0, label %dec_label_pc_1000135c, label %dec_label_pc_100013e0

dec_label_pc_100013e0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_1000135c
  %v0_100013e0 = load i32, i32* @r30, align 4
  %v3_100013e0 = icmp eq i32 %v0_100013e0, -1
  store i1 %v3_100013e0, i1* %cr2_eq.global-to-local, align 1
  %v0_100013e4 = load i32, i32* %r17.global-to-local, align 4
  %v3_100013e4 = icmp eq i32 %v0_100013e4, 0
  store i1 %v3_100013e4, i1* %cr3_eq.global-to-local, align 1
  %v0_100013e8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100013e8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100013e8.preheader

dec_label_pc_100013e8.preheader:                  ; preds = %dec_label_pc_100014b4, %dec_label_pc_10001638, %dec_label_pc_100013e0
  %v1_100013e8 = phi i1 [ %v1_10001330, %dec_label_pc_10001638 ], [ %v1_100013e8.pre, %dec_label_pc_100013e0 ], [ %v1_100014b4, %dec_label_pc_100014b4 ]
  %v0_100013e8 = phi i1 [ %v3_10001330, %dec_label_pc_10001638 ], [ %v0_100013e8.pre, %dec_label_pc_100013e0 ], [ %v0_100014b4, %dec_label_pc_100014b4 ]
  %v2_100013e8 = or i1 %v1_100013e8, %v0_100013e8
  br label %dec_label_pc_100013e8

dec_label_pc_100013e8:                            ; preds = %dec_label_pc_100013e8.preheader, %dec_label_pc_100013e8
  br i1 %v2_100013e8, label %dec_label_pc_100013e8, label %dec_label_pc_100013ec

dec_label_pc_100013ec:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_100014b4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_10001444, %dec_label_pc_100013ec
  %v0_100013fc = phi i32 [ %v1_100014a4, %dec_label_pc_10001444 ], [ 0, %dec_label_pc_100013ec ]
  %v1_100013fc = mul i32 %v0_100013fc, 24
  store i32 %v1_100013fc, i32* %r0.global-to-local, align 4
  %v1_10001400 = mul i32 %v0_100013fc, 4
  store i32 %v1_10001400, i32* %r11.global-to-local, align 4
  %v1_10001404 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001404 = add i32 %v1_10001404, %v1_10001400
  %v3_10001404 = inttoptr i32 %v2_10001404 to i32*
  %v4_10001404 = load i32, i32* %v3_10001404, align 4
  store i32 %v4_10001404, i32* %r28.global-to-local, align 4
  %v1_10001408 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001408 = add i32 %v1_10001408, %v1_100013fc
  store i32 %v2_10001408, i32* %r10.global-to-local, align 4
  %v1_1000140c = add i32 %v2_10001408, 20
  %v2_1000140c = inttoptr i32 %v1_1000140c to i8*
  %v3_1000140c = load i8, i8* %v2_1000140c, align 1
  %v4_1000140c = zext i8 %v3_1000140c to i32
  store i32 %v4_1000140c, i32* %r9.global-to-local, align 4
  %v1_10001410 = add i32 %v4_10001404, 20
  store i32 %v1_10001410, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_1000140c, 32
  br i1 %tmp32, label %dec_label_pc_100014bc, label %dec_label_pc_1000141c

dec_label_pc_1000141c:                            ; preds = %dec_label_pc_100013fc
  %v0_1000141c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000141c, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_10001420:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 65535, i32* @r29, align 4
  %v0_10001428 = load i32, i32* %r22.global-to-local, align 4
  %v4_10001428 = icmp eq i32 %v0_10001428, 65535
  br i1 %v4_10001428, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_10001430:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v1_10001430 = phi i32 [ %v1_100014f4, %dec_label_pc_100014e4 ], [ 65535, %dec_label_pc_10001420 ]
  %v0_10001430 = load i32, i32* %r23.global-to-local, align 4
  %v4_10001430 = icmp eq i32 %v0_10001430, %v1_10001430
  br i1 %v4_10001430, label %dec_label_pc_1000150c, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge, %dec_label_pc_10001430
  %v1_10001438 = phi i32 [ %v1_10001438.pre, %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge ], [ %v1_10001430, %dec_label_pc_10001430 ]
  %v0_10001438 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001438 = icmp eq i32 %v0_10001438, %v1_10001438
  br i1 %v4_10001438, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_10001440 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001440, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001444:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c, %dec_label_pc_10001528
  %v0_10001444 = load i32, i32* @r30, align 4
  %v1_10001444 = trunc i32 %v0_10001444 to i16
  %v2_10001444 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001444 = add i32 %v2_10001444, 10
  %v4_10001444 = inttoptr i32 %v3_10001444 to i16*
  store i16 %v1_10001444, i16* %v4_10001444, align 2
  %v0_1000144c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000144c, i32* @r3, align 4
  %v2_10001450 = call i32 @function_100043cc(i32 %v0_1000144c, i32 20)
  %v3_10001450 = trunc i32 %v2_10001450 to i16
  %v0_10001454 = load i32, i32* @r31, align 4
  store i32 %v0_10001454, i32* @r4, align 4
  %v4_10001458 = add i32 %v0_1000144c, 10
  %v5_10001458 = inttoptr i32 %v4_10001458 to i16*
  store i16 %v3_10001450, i16* %v5_10001458, align 2
  %v0_1000145c = load i32, i32* %r26.global-to-local, align 4
  %v0_10001460 = load i32, i32* @r30, align 4
  %v1_10001460 = trunc i32 %v0_10001460 to i16
  %v2_10001460 = load i32, i32* @r31, align 4
  %v3_10001460 = add i32 %v2_10001460, 6
  %v4_10001460 = inttoptr i32 %v3_10001460 to i16*
  store i16 %v1_10001460, i16* %v4_10001460, align 2
  %v0_10001464 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001464, i32* %r3.global-to-local, align 4
  %v0_10001468 = load i32, i32* @r31, align 4
  %v1_10001468 = add i32 %v0_10001468, 4
  %v2_10001468 = inttoptr i32 %v1_10001468 to i16*
  %v3_10001468 = load i16, i16* %v2_10001468, align 2
  %v4_10001468 = zext i16 %v3_10001468 to i32
  %v4_1000146c = call i32 @function_10004430(i32 %v0_10001464, i32 %v0_10001454, i32 %v4_10001468, i32 %v0_1000145c)
  %v5_1000146c = trunc i32 %v4_1000146c to i16
  store i32 %v4_1000146c, i32* %r3.global-to-local, align 4
  %v3_10001470 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001470, i32* %r7.global-to-local, align 4
  %v0_10001474 = load i32, i32* @r31, align 4
  %v1_10001474 = add i32 %v0_10001474, 2
  %v2_10001474 = inttoptr i32 %v1_10001474 to i16*
  %v3_10001474 = load i16, i16* %v2_10001474, align 2
  %v4_10001474 = zext i16 %v3_10001474 to i32
  store i32 %v4_10001474, i32* %r0.global-to-local, align 4
  %v0_10001478 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000147c = mul i32 %v3_10001470, 24
  store i32 %v1_1000147c, i32* %r7.global-to-local, align 4
  %v4_10001480 = add i32 %v0_10001474, 6
  %v5_10001480 = inttoptr i32 %v4_10001480 to i16*
  store i16 %v5_1000146c, i16* %v5_10001480, align 2
  %v0_10001484 = load i32, i32* %r25.global-to-local, align 4
  %v0_10001488 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001488, i32* %r3.global-to-local, align 4
  %v0_1000148c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000148c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000148c = add i32 %v1_1000148c, %v0_1000148c
  store i32 %v2_1000148c, i32* %r7.global-to-local, align 4
  %v0_10001494 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001494 = trunc i32 %v0_10001494 to i16
  %v3_10001494 = add i32 %v2_1000148c, 2
  %v4_10001494 = inttoptr i32 %v3_10001494 to i16*
  store i16 %v1_10001494, i16* %v4_10001494, align 2
  store i32 268440736, i32* @lr, align 4
  %v6_1000149c = call i32 @function_10009320(i32 %v0_10001488, i32 %v0_10001478, i32 %v0_10001484, i32 16384, i32 %v2_1000148c, i32 16)
  store i32 %v6_1000149c, i32* %r3.global-to-local, align 4
  %v3_100014a0 = load i32, i32* %stack_var_-104, align 4
  %v1_100014a4 = add i32 %v3_100014a0, 1
  store i32 %v1_100014a4, i32* %r9.global-to-local, align 4
  %v1_100014a8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100014a8 = icmp slt i32 %v1_100014a4, %v1_100014a8
  store i32 %v1_100014a4, i32* %stack_var_-104, align 4
  br i1 %v2_100014a8, label %dec_label_pc_100013fc, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001444
  %v0_100014b4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100014b4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100014b4 = or i1 %v0_100014b4, %v1_100014b4
  br i1 %v2_100014b4, label %dec_label_pc_100013e8.preheader, label %dec_label_pc_100013ec

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100013fc
  %v1_100014bc = add i32 %v2_10001408, 16
  %v2_100014bc = inttoptr i32 %v1_100014bc to i32*
  %v3_100014bc = load i32, i32* %v2_100014bc, align 4
  store i32 %v3_100014bc, i32* %r29.global-to-local, align 4
  %v0_100014c0 = call i32 @function_10005cf4()
  store i32 %v0_100014c0, i32* %r3.global-to-local, align 4
  %v3_100014c4 = load i32, i32* %stack_var_-104, align 4
  %v1_100014c8 = mul i32 %v3_100014c4, 24
  %v1_100014cc = load i32, i32* %r27.global-to-local, align 4
  %v2_100014cc = add i32 %v1_100014cc, %v1_100014c8
  store i32 %v2_100014cc, i32* %r9.global-to-local, align 4
  %v1_100014d0 = add i32 %v2_100014cc, 20
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i8*
  %v3_100014d0 = load i8, i8* %v2_100014d0, align 1
  %v4_100014d0 = zext i8 %v3_100014d0 to i32
  store i32 %v4_100014d0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100014d0, 64
  %v2_100014d4 = zext i8 %tmp to i32
  %v3_100014d4 = lshr i32 %v0_100014c0, %v2_100014d4
  store i32 %v3_100014d4, i32* %r3.global-to-local, align 4
  %v0_100014d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100014d8 = add i32 %v3_100014d4, %v0_100014d8
  store i32 %v2_100014d8, i32* %r29.global-to-local, align 4
  %v1_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v2_100014dc = add i32 %v1_100014dc, 16
  %v3_100014dc = inttoptr i32 %v2_100014dc to i32*
  store i32 %v2_100014d8, i32* %v3_100014dc, align 4
  %v0_100014e0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014e0, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100014e8 = call i32 @function_10005cf4()
  store i32 %v0_100014e8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100014f0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100014f0 = add i32 %v1_100014f0, 12
  %v3_100014f0 = inttoptr i32 %v2_100014f0 to i32*
  store i32 %v0_100014e8, i32* %v3_100014f0, align 4
  %v0_100014f4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100014f4 = load i32, i32* @r29, align 4
  %v4_100014f4 = icmp eq i32 %v0_100014f4, %v1_100014f4
  br i1 %v4_100014f4, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_100014fc:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v0_100014fc = call i32 @function_10005cf4()
  %v1_100014fc = trunc i32 %v0_100014fc to i16
  store i32 %v0_100014fc, i32* %r3.global-to-local, align 4
  %v0_10001500 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r29, align 4
  %v4_10001500 = icmp eq i32 %v0_10001500, %v1_10001500
  %v3_10001504 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001504 = add i32 %v3_10001504, 4
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v1_100014fc, i16* %v5_10001504, align 2
  br i1 %v4_10001500, label %dec_label_pc_1000150c, label %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge

dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge: ; preds = %dec_label_pc_100014fc
  %v1_10001438.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001438

dec_label_pc_1000150c:                            ; preds = %dec_label_pc_100014fc, %dec_label_pc_10001430
  %v0_1000150c = call i32 @function_10005cf4()
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  store i32 %v0_1000150c, i32* %r3.global-to-local, align 4
  %v0_10001510 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001510 = load i32, i32* @r29, align 4
  %v4_10001510 = icmp eq i32 %v0_10001510, %v1_10001510
  %v3_10001514 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001514 = add i32 %v3_10001514, 20
  %v5_10001514 = inttoptr i32 %v4_10001514 to i16*
  store i16 %v1_1000150c, i16* %v5_10001514, align 2
  br i1 %v4_10001510, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_1000151c:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_1000151c = call i32 @function_10005cf4()
  %v1_1000151c = trunc i32 %v0_1000151c to i16
  store i32 %v0_1000151c, i32* %r3.global-to-local, align 4
  %v3_10001520 = load i32, i32* @r31, align 4
  %v4_10001520 = add i32 %v3_10001520, 2
  %v5_10001520 = inttoptr i32 %v4_10001520 to i16*
  store i16 %v1_1000151c, i16* %v5_10001520, align 2
  %v0_10001524 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001524, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001528:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c
  %v0_10001528 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001528 = add i32 %v0_10001528, 28
  store i32 %v1_10001528, i32* @r3, align 4
  %v0_1000152c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_1000152c, i32* @r4, align 4
  %v0_10001530 = call i32 @function_10005ec8()
  store i32 %v0_10001530, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001444

dec_label_pc_10001538:                            ; preds = %dec_label_pc_100012f0
  %v0_10001538 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001538, i32* %r3.global-to-local, align 4
  store i32 268440896, i32* @lr, align 4
  %v0_1000153c = call i32 @function_10008680()
  store i32 %v0_1000153c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001540

dec_label_pc_10001540:                            ; preds = %dec_label_pc_10001174, %dec_label_pc_10001538
  store i32 %v0_1000118c, i32* %r0.global-to-local, align 4
  %v1_10001554 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000117c)
  store i32 %v0_100011c0, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c8, i32* %r29.global-to-local, align 4
  store i32 %v0_100011d0, i32* %r30.global-to-local, align 4
  store i32 %v0_100011d4, i32* %r31.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000159c

dec_label_pc_100015a0:                            ; preds = %dec_label_pc_10001340
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100015a8

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100015a0
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* @lr, align 4
  %v2_100015b0 = call i32 @function_100096f8(i32 1510, i32 1)
  store i32 %v2_100015b0, i32* %r3.global-to-local, align 4
  %v3_100015b4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015b4, i32* %r9.global-to-local, align 4
  %v0_100015b8 = load i32, i32* @r31, align 4
  %v1_100015b8 = mul i32 %v0_100015b8, 4
  store i32 %v1_100015b8, i32* %r0.global-to-local, align 4
  %v1_100015bc = load i32, i32* %r20.global-to-local, align 4
  %v3_100015bc = add i32 %v1_100015bc, %v1_100015b8
  %v4_100015bc = inttoptr i32 %v3_100015bc to i32*
  store i32 %v2_100015b0, i32* %v4_100015bc, align 4
  %v0_100015c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100015c0 = mul i32 %v0_100015c0, 4
  store i32 %v1_100015c0, i32* %r9.global-to-local, align 4
  %v1_100015c4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015c4 = add i32 %v1_100015c4, %v1_100015c0
  %v3_100015c4 = inttoptr i32 %v2_100015c4 to i32*
  %v4_100015c4 = load i32, i32* %v3_100015c4, align 4
  store i32 %v4_100015c4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100015cc = inttoptr i32 %v4_100015c4 to i32*
  %v2_100015cc = load i32, i32* %v1_100015cc, align 4
  store i32 %v2_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = add i32 %v4_100015c4, 20
  store i32 %v1_100015d0, i32* %r10.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100015d4 = trunc i32 %v0_100015d4 to i8
  %v3_100015d4 = add i32 %v4_100015c4, 8
  %v4_100015d4 = inttoptr i32 %v3_100015d4 to i8*
  store i8 %v1_100015d4, i8* %v4_100015d4, align 1
  %v1_100015d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100015d8, i32* %r0.global-to-local, align 4
  %v0_100015dc = load i32, i32* @r30, align 4
  %v1_100015dc = load i32, i32* %r11.global-to-local, align 4
  %v2_100015dc = add i32 %v1_100015dc, 12
  %v3_100015dc = inttoptr i32 %v2_100015dc to i32*
  store i32 %v0_100015dc, i32* %v3_100015dc, align 4
  %v1_100015e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100015e4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100015e4 = trunc i32 %v0_100015e4 to i16
  %v2_100015e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015e4 = add i32 %v2_100015e4, 4
  %v4_100015e4 = inttoptr i32 %v3_100015e4 to i16*
  store i16 %v1_100015e4, i16* %v4_100015e4, align 2
  %v1_100015e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100015e8 = inttoptr i32 %v1_100015e8 to i32*
  store i32 %v1_100015e0, i32* %v2_100015e8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100015f0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f0 = add i32 %v2_100015f0, 9
  %v4_100015f0 = inttoptr i32 %v3_100015f0 to i8*
  store i8 17, i8* %v4_100015f0, align 1
  %v0_100015f4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100015f4 = trunc i32 %v0_100015f4 to i8
  %v2_100015f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f4 = add i32 %v2_100015f4, 1
  %v4_100015f4 = inttoptr i32 %v3_100015f4 to i8*
  store i8 %v1_100015f4, i8* %v4_100015f4, align 1
  %v0_100015f8 = load i32, i32* @r28, align 4
  %v1_100015f8 = trunc i32 %v0_100015f8 to i16
  %v2_100015f8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f8 = add i32 %v2_100015f8, 2
  %v4_100015f8 = inttoptr i32 %v3_100015f8 to i16*
  store i16 %v1_100015f8, i16* %v4_100015f8, align 2
  %v3_100015fc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015fc, i32* %r9.global-to-local, align 4
  %v0_10001600 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001600 = trunc i32 %v0_10001600 to i16
  %v2_10001600 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001600 = add i32 %v2_10001600, 20
  %v4_10001600 = inttoptr i32 %v3_10001600 to i16*
  store i16 %v1_10001600, i16* %v4_10001600, align 2
  %v0_10001604 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001604 = add i32 %v0_10001604, 1
  store i32 %v1_10001604, i32* %r31.global-to-local, align 4
  %v1_10001608 = mul i32 %v0_10001604, 24
  %v1_1000160c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000160c = icmp slt i32 %v1_10001604, %v1_1000160c
  %v1_10001610 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001610 = add i32 %v1_10001610, %v1_10001608
  store i32 %v2_10001610, i32* %r9.global-to-local, align 4
  %v1_10001614 = add i32 %v2_10001610, 16
  %v2_10001614 = inttoptr i32 %v1_10001614 to i32*
  %v3_10001614 = load i32, i32* %v2_10001614, align 4
  store i32 %v3_10001614, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_1000161c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000161c = add i32 %v2_1000161c, 6
  %v4_1000161c = inttoptr i32 %v3_1000161c to i16*
  store i16 16384, i16* %v4_1000161c, align 2
  %v0_10001620 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001620 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001620 = add i32 %v1_10001620, 16
  %v3_10001620 = inttoptr i32 %v2_10001620 to i32*
  store i32 %v0_10001620, i32* %v3_10001620, align 4
  %v0_10001624 = load i32, i32* @r29, align 4
  %v1_10001624 = trunc i32 %v0_10001624 to i16
  %v2_10001624 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001624 = add i32 %v2_10001624, 4
  %v4_10001624 = inttoptr i32 %v3_10001624 to i16*
  store i16 %v1_10001624, i16* %v4_10001624, align 2
  %v0_10001628 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001628 = trunc i32 %v0_10001628 to i16
  %v2_10001628 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001628 = add i32 %v2_10001628, 2
  %v4_10001628 = inttoptr i32 %v3_10001628 to i16*
  store i16 %v1_10001628, i16* %v4_10001628, align 2
  %v0_1000162c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000162c, i32* %stack_var_-104, align 4
  br i1 %v2_1000160c, label %dec_label_pc_100015a8, label %dec_label_pc_100013e0

dec_label_pc_10001638:                            ; preds = %dec_label_pc_10001330
  %v0_10001638 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001638 = icmp eq i32 %v0_10001638, -1
  store i1 %v3_10001638, i1* %cr2_eq.global-to-local, align 1
  %v0_1000163c = load i32, i32* %r17.global-to-local, align 4
  %v3_1000163c = icmp eq i32 %v0_1000163c, 0
  store i1 %v3_1000163c, i1* %cr3_eq.global-to-local, align 1
  %v1_10001640 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001640, i32* %r25.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001644, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100013e8.preheader

; uselistorder directives
  uselistorder i32 %v1_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_1000151c, { 1, 0 }
  uselistorder i32 %v0_1000150c, { 1, 0 }
  uselistorder i32 %v0_100014fc, { 1, 0 }
  uselistorder i32 %v1_100014f4, { 1, 0 }
  uselistorder i1 %v1_100014b4, { 1, 0 }
  uselistorder i1 %v0_100014b4, { 1, 0 }
  uselistorder i32 %v1_100014a4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000146c, { 1, 0 }
  uselistorder i32 %v1_10001400, { 1, 0 }
  uselistorder i32 %v1_10001374, { 1, 0 }
  uselistorder i32 %v1_1000136c, { 1, 0 }
  uselistorder i32 %v0_10001640, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10001314, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 20, 5, 6, 7, 8, 9, 10, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001540, { 1, 0 }
  uselistorder label %dec_label_pc_10001528, { 1, 0 }
  uselistorder label %dec_label_pc_10001444, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100013ec, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001330, { 1, 0 }
}

define i32 @function_10001650(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001650:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001654 = load i32, i32* @lr, align 4
  store i32 %v0_10001654, i32* %r0.global-to-local, align 4
  %v0_10001658 = call i32 @__asm_mfcr()
  store i32 %v0_10001658, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10001668 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001658, i32* %r18.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100016a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100016ac = load i32, i32* @r30, align 4
  %v0_100016b0 = load i32, i32* @r31, align 4
  store i32 268441284, i32* @lr, align 4
  %v2_100016c0 = call i32 @function_100096f8(i32 4, i32 4)
  store i32 %v2_100016c0, i32* %r19.global-to-local, align 4
  %v0_100016c8 = load i32, i32* @r28, align 4
  %v0_100016d4 = load i32, i32* @r29, align 4
  store i32 %v0_100016d4, i32* %r3.global-to-local, align 4
  store i32 268441308, i32* @lr, align 4
  %v4_100016d8 = inttoptr i32 %v0_100016c8 to i32*
  %v5_100016d8 = call i32 @function_100006a8(i32 %v0_100016d4, i32* %v4_100016d8, i32 2, i32 0)
  %v0_100016e8 = load i32, i32* @r28, align 4
  %v1_100016ec = urem i32 %v5_100016d8, 256
  store i32 %v1_100016ec, i32* %r14.global-to-local, align 4
  %v0_100016f0 = load i32, i32* @r29, align 4
  store i32 %v0_100016f0, i32* %r3.global-to-local, align 4
  store i32 268441336, i32* @lr, align 4
  %v4_100016f4 = inttoptr i32 %v0_100016e8 to i32*
  %v5_100016f4 = call i32 @function_100006a8(i32 %v0_100016f0, i32* %v4_100016f4, i32 3, i32 65535)
  %v0_100016f8 = load i32, i32* @r28, align 4
  store i32 %v5_100016f4, i32* %r24.global-to-local, align 4
  %v0_10001708 = load i32, i32* @r29, align 4
  store i32 %v0_10001708, i32* %r3.global-to-local, align 4
  store i32 268441360, i32* @lr, align 4
  %v4_1000170c = inttoptr i32 %v0_100016f8 to i32*
  %v5_1000170c = call i32 @function_100006a8(i32 %v0_10001708, i32* %v4_1000170c, i32 4, i32 64)
  %v0_10001710 = load i32, i32* @r28, align 4
  %v1_1000171c = urem i32 %v5_1000170c, 256
  store i32 %v1_1000171c, i32* %r20.global-to-local, align 4
  %v0_10001720 = load i32, i32* @r29, align 4
  store i32 %v0_10001720, i32* %r3.global-to-local, align 4
  store i32 268441384, i32* @lr, align 4
  %v4_10001724 = inttoptr i32 %v0_10001710 to i32*
  %v5_10001724 = call i32 @function_100006a8(i32 %v0_10001720, i32* %v4_10001724, i32 5, i32 1)
  %v0_10001734 = load i32, i32* @r28, align 4
  %v1_10001738 = urem i32 %v5_10001724, 256
  store i32 %v1_10001738, i32* @r31, align 4
  %v0_1000173c = load i32, i32* @r29, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* @lr, align 4
  %v4_10001740 = inttoptr i32 %v0_10001734 to i32*
  %v5_10001740 = call i32 @function_100006a8(i32 %v0_1000173c, i32* %v4_10001740, i32 6, i32 65535)
  %v0_10001748 = load i32, i32* @r28, align 4
  store i32 %v5_10001740, i32* %r26.global-to-local, align 4
  %v0_10001758 = load i32, i32* @r29, align 4
  store i32 %v0_10001758, i32* %r3.global-to-local, align 4
  store i32 268441440, i32* @lr, align 4
  %v4_1000175c = inttoptr i32 %v0_10001748 to i32*
  %v5_1000175c = call i32 @function_100006a8(i32 %v0_10001758, i32* %v4_1000175c, i32 7, i32 65535)
  %v0_10001760 = load i32, i32* @r28, align 4
  store i32 %v5_1000175c, i32* %r27.global-to-local, align 4
  %v0_10001770 = load i32, i32* @r29, align 4
  store i32 %v0_10001770, i32* %r3.global-to-local, align 4
  store i32 268441464, i32* @lr, align 4
  %v4_10001774 = inttoptr i32 %v0_10001760 to i32*
  %v5_10001774 = call i32 @function_100006a8(i32 %v0_10001770, i32* %v4_10001774, i32 0, i32 512)
  %v0_10001778 = load i32, i32* @r28, align 4
  store i32 %v5_10001774, i32* %r15.global-to-local, align 4
  %v0_10001788 = load i32, i32* @r29, align 4
  store i32 %v0_10001788, i32* %r3.global-to-local, align 4
  store i32 268441488, i32* @lr, align 4
  %v4_1000178c = inttoptr i32 %v0_10001778 to i32*
  %v5_1000178c = call i32 @function_100006a8(i32 %v0_10001788, i32* %v4_1000178c, i32 1, i32 1)
  %v0_10001790 = load i32, i32* @r28, align 4
  %v1_1000179c = urem i32 %v5_1000178c, 256
  store i32 %v1_1000179c, i32* %r21.global-to-local, align 4
  %v0_100017a0 = load i32, i32* @r29, align 4
  store i32 %v0_100017a0, i32* %r3.global-to-local, align 4
  store i32 268441512, i32* @lr, align 4
  %v4_100017a4 = inttoptr i32 %v0_10001790 to i32*
  %v5_100017a4 = call i32 @function_100006a8(i32 %v0_100017a0, i32* %v4_100017a4, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100017ac = load i32, i32* @global_var_1001b718.16, align 4
  %v0_100017b0 = load i32, i32* @r28, align 4
  store i32 %v5_100017a4, i32* %r30.global-to-local, align 4
  %v0_100017bc = load i32, i32* @r29, align 4
  store i32 %v0_100017bc, i32* %r3.global-to-local, align 4
  store i32 268441540, i32* @lr, align 4
  %v4_100017c0 = inttoptr i32 %v0_100017b0 to i32*
  %v5_100017c0 = call i32 @function_100006a8(i32 %v0_100017bc, i32* %v4_100017c0, i32 25, i32 %v3_100017ac)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441560, i32* @lr, align 4
  %v3_100017d4 = call i32 @function_1000939c(i32 2, i32 3, i32 6)
  store i32 %v3_100017d4, i32* %r3.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v3_100017d4, -1
  store i1 %v3_100017d8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100017d4, i32* %r23.global-to-local, align 4
  br i1 %v3_100017d8, label %dec_label_pc_1000197c, label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_10001650
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100017f0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268441600, i32* @lr, align 4
  %v4_100017fc = call i32 @function_10009360(i32 0, i32 3, i32 %v2_100017f0, i32 4)
  store i32 %v4_100017fc, i32* %r3.global-to-local, align 4
  %v3_10001800 = icmp eq i32 %v4_100017fc, -1
  store i1 %v3_10001800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001800, label %dec_label_pc_10001974, label %dec_label_pc_10001808

dec_label_pc_10001808:                            ; preds = %dec_label_pc_100017e4
  %v0_10001808 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001808 = icmp slt i32 %v0_10001808, 0
  %v3_10001808 = icmp eq i32 %v0_10001808, 0
  store i1 %v1_10001808, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001814 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001814 = urem i32 %v0_10001814, 65536
  store i32 %v1_10001814, i32* %r24.global-to-local, align 4
  %v0_10001818 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001818 = urem i32 %v0_10001818, 65536
  store i32 %v1_10001818, i32* %r16.global-to-local, align 4
  %v0_1000181c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000181c = urem i32 %v0_1000181c, 65536
  store i32 %v1_1000181c, i32* %r17.global-to-local, align 4
  %v0_10001820 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001820 = urem i32 %v0_10001820, 256
  store i32 %v1_10001820, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10001808, 1
  br i1 %tmp37, label %dec_label_pc_100019dc, label %dec_label_pc_10001828

dec_label_pc_10001828:                            ; preds = %dec_label_pc_10001808
  %v0_10001828 = load i32, i32* @r31, align 4
  %v3_10001828 = icmp eq i32 %v0_10001828, 0
  store i1 %v3_10001828, i1* %cr2_eq.global-to-local, align 1
  %v3_1000182c = icmp eq i32 %v1_10001820, 0
  store i1 %v3_1000182c, i1* %cr3_eq.global-to-local, align 1
  %v0_10001830 = load i32, i32* %r15.global-to-local, align 4
  %v1_10001830 = urem i32 %v0_10001830, 65536
  %v0_10001814.not = or i32 %v0_10001814, -65536
  %v1_10001834 = xor i32 %v0_10001814.not, 65535
  store i32 %v1_10001834, i32* %r11.global-to-local, align 4
  %v1_1000183c = add nuw nsw i32 %v1_10001830, 66
  store i32 %v1_1000183c, i32* %r0.global-to-local, align 4
  %v1_10001840 = add nuw nsw i32 %v1_10001830, 28
  store i32 %v1_10001840, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001830, 66
  %v1_10001844 = urem i32 %fold, 65536
  store i32 %v1_10001844, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001830, 28
  %v1_10001848 = urem i32 %fold8, 65536
  store i32 %v1_10001848, i32* %r26.global-to-local, align 4
  %v1_1000184c = urem i32 %v1_10001834, 65536
  store i32 %v1_1000184c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001830, 8
  %v1_10001850 = urem i32 %fold9, 65536
  store i32 %v1_10001850, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001884

dec_label_pc_1000185c:                            ; preds = %dec_label_pc_10001950
  %v0_1000185c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 16
  %v2_1000185c = inttoptr i32 %v1_1000185c to i32*
  %v3_1000185c = load i32, i32* %v2_1000185c, align 4
  store i32 %v3_1000185c, i32* %r0.global-to-local, align 4
  %v1_10001860 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001860 = add i32 %v1_10001860, 16
  %v3_10001860 = inttoptr i32 %v2_10001860 to i32*
  store i32 %v3_1000185c, i32* %v3_10001860, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001864:                            ; preds = %dec_label_pc_1000196c, %dec_label_pc_1000185c
  %v3_10001864 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001864, i32* %r9.global-to-local, align 4
  %v0_10001868 = load i32, i32* @r28, align 4
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v2_10001868 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001868 = add i32 %v2_10001868, 4
  %v4_10001868 = inttoptr i32 %v3_10001868 to i16*
  store i16 %v1_10001868, i16* %v4_10001868, align 2
  %v0_1000186c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000186c = add i32 %v0_1000186c, 1
  store i32 %v1_1000186c, i32* %r31.global-to-local, align 4
  %v0_10001870 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001870 = trunc i32 %v0_10001870 to i16
  %v2_10001870 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001870 = inttoptr i32 %v2_10001870 to i16*
  store i16 %v1_10001870, i16* %v3_10001870, align 2
  %v0_10001874 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001874 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001874 = icmp slt i32 %v0_10001874, %v1_10001874
  %v4_10001874 = icmp eq i32 %v0_10001874, %v1_10001874
  store i1 %v4_10001874, i1* %cr7_eq.global-to-local, align 1
  %v0_10001878 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001878 = trunc i32 %v0_10001878 to i16
  %v2_10001878 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001878 = add i32 %v2_10001878, 2
  %v4_10001878 = inttoptr i32 %v3_10001878 to i16*
  store i16 %v1_10001878, i16* %v4_10001878, align 2
  %v0_1000187c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000187c, i32* %stack_var_-104, align 4
  br i1 %v2_10001874, label %dec_label_pc_10001884, label %dec_label_pc_100019e0

dec_label_pc_10001884:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_10001828
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441744, i32* @lr, align 4
  %v2_1000188c = call i32 @function_100096f8(i32 1510, i32 4)
  store i32 %v2_1000188c, i32* %r3.global-to-local, align 4
  %v3_10001890 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001890, i32* %r9.global-to-local, align 4
  %v0_10001894 = load i32, i32* @r31, align 4
  %v1_10001894 = mul i32 %v0_10001894, 4
  store i32 %v1_10001894, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_1000189c = load i32, i32* %r19.global-to-local, align 4
  %v3_1000189c = add i32 %v1_1000189c, %v1_10001894
  %v4_1000189c = inttoptr i32 %v3_1000189c to i32*
  store i32 %v2_1000188c, i32* %v4_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100018a0 = mul i32 %v0_100018a0, 4
  store i32 %v1_100018a0, i32* %r9.global-to-local, align 4
  %v1_100018a4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100018a4 = add i32 %v1_100018a4, %v1_100018a0
  %v3_100018a4 = inttoptr i32 %v2_100018a4 to i32*
  %v4_100018a4 = load i32, i32* %v3_100018a4, align 4
  store i32 %v4_100018a4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100018ac = inttoptr i32 %v4_100018a4 to i32*
  %v2_100018ac = load i32, i32* %v1_100018ac, align 4
  store i32 %v2_100018ac, i32* %r0.global-to-local, align 4
  %v1_100018b0 = add i32 %v4_100018a4, 38
  store i32 %v1_100018b0, i32* %r30.global-to-local, align 4
  %v0_100018b4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100018b4 = trunc i32 %v0_100018b4 to i8
  %v3_100018b4 = add i32 %v4_100018a4, 8
  %v4_100018b4 = inttoptr i32 %v3_100018b4 to i8*
  store i8 %v1_100018b4, i8* %v4_100018b4, align 1
  %v0_100018b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018b8 = add i32 %v0_100018b8, 58
  store i32 %v1_100018b8, i32* %r29.global-to-local, align 4
  %v1_100018bc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100018bc, i32* %r0.global-to-local, align 4
  %v0_100018c0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100018c0 = trunc i32 %v0_100018c0 to i16
  %v2_100018c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018c0 = add i32 %v2_100018c0, 4
  %v4_100018c0 = inttoptr i32 %v3_100018c0 to i16*
  store i16 %v1_100018c0, i16* %v4_100018c0, align 2
  %v1_100018c4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100018c4, i32* %r0.global-to-local, align 4
  %v0_100018c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018c8 = add i32 %v0_100018c8, 20
  store i32 %v1_100018c8, i32* %r9.global-to-local, align 4
  %v2_100018cc = inttoptr i32 %v0_100018c8 to i32*
  store i32 %v1_100018c4, i32* %v2_100018cc, align 4
  %v0_100018d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018d0 = add i32 %v0_100018d0, 24
  store i32 %v1_100018d0, i32* %r11.global-to-local, align 4
  %v0_100018d4 = load i32, i32* %r14.global-to-local, align 4
  %v1_100018d4 = trunc i32 %v0_100018d4 to i8
  %v3_100018d4 = add i32 %v0_100018d0, 1
  %v4_100018d4 = inttoptr i32 %v3_100018d4 to i8*
  store i8 %v1_100018d4, i8* %v4_100018d4, align 1
  %v0_100018d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100018d8 = trunc i32 %v0_100018d8 to i16
  %v2_100018d8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018d8 = add i32 %v2_100018d8, 2
  %v4_100018d8 = inttoptr i32 %v3_100018d8 to i16*
  store i16 %v1_100018d8, i16* %v4_100018d8, align 2
  %v0_100018dc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100018dc, label %dec_label_pc_100018e8, label %dec_label_pc_100018e0

dec_label_pc_100018e0:                            ; preds = %dec_label_pc_10001884
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100018e4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018e4 = add i32 %v2_100018e4, 6
  %v4_100018e4 = inttoptr i32 %v3_100018e4 to i16*
  store i16 16384, i16* %v4_100018e4, align 2
  br label %dec_label_pc_100018e8

dec_label_pc_100018e8:                            ; preds = %dec_label_pc_10001884, %dec_label_pc_100018e0
  %v2_100018ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100018ec = add i32 %v2_100018ec, 9
  %v4_100018ec = inttoptr i32 %v3_100018ec to i8*
  store i8 47, i8* %v4_100018ec, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_100018f4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100018f4 = add i32 %v2_100018f4, 2
  %v4_100018f4 = inttoptr i32 %v3_100018f4 to i16*
  store i16 25944, i16* %v4_100018f4, align 2
  %v2_100018fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100018fc = add i32 %v2_100018fc, 12
  %v4_100018fc = inttoptr i32 %v3_100018fc to i16*
  store i16 2048, i16* %v4_100018fc, align 2
  %v3_10001900 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_100017c0, i32* %r11.global-to-local, align 4
  %v1_10001908 = mul i32 %v3_10001900, 24
  store i32 %v1_10001908, i32* %r9.global-to-local, align 4
  %v0_1000190c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000190c = add i32 %v0_1000190c, 38
  %v2_1000190c = inttoptr i32 %v1_1000190c to i32*
  %v3_1000190c = load i32, i32* %v2_1000190c, align 4
  store i32 %v3_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = add i32 %v0_1000190c, 12
  %v3_10001910 = inttoptr i32 %v2_10001910 to i32*
  store i32 %v5_100017c0, i32* %v3_10001910, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001918 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001918 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001918 = add i32 %v1_10001918, %v0_10001918
  store i32 %v2_10001918, i32* %r9.global-to-local, align 4
  %v1_1000191c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000191c, i32* %r0.global-to-local, align 4
  %v0_10001920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001920 = add i32 %v0_10001920, 16
  %v2_10001920 = inttoptr i32 %v1_10001920 to i32*
  %v3_10001920 = load i32, i32* %v2_10001920, align 4
  store i32 %v3_10001920, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001928 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001928, i32* %r0.global-to-local, align 4
  %v1_1000192c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000192c = add i32 %v1_1000192c, 38
  %v3_1000192c = inttoptr i32 %v2_1000192c to i32*
  store i32 %v1_10001928, i32* %v3_1000192c, align 4
  %v0_10001930 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001930 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001930 = add i32 %v1_10001930, 16
  %v3_10001930 = inttoptr i32 %v2_10001930 to i32*
  store i32 %v0_10001930, i32* %v3_10001930, align 4
  %v0_10001934 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001934 = trunc i32 %v0_10001934 to i8
  %v2_10001934 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001934 = add i32 %v2_10001934, 1
  %v4_10001934 = inttoptr i32 %v3_10001934 to i8*
  store i8 %v1_10001934, i8* %v4_10001934, align 1
  %v0_10001938 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001938 = trunc i32 %v0_10001938 to i16
  %v2_10001938 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001938 = add i32 %v2_10001938, 2
  %v4_10001938 = inttoptr i32 %v3_10001938 to i16*
  store i16 %v1_10001938, i16* %v4_10001938, align 2
  %v0_1000193c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000193c = trunc i32 %v0_1000193c to i16
  %v2_1000193c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000193c = add i32 %v2_1000193c, 4
  %v4_1000193c = inttoptr i32 %v3_1000193c to i16*
  store i16 %v1_1000193c, i16* %v4_1000193c, align 2
  %v0_10001940 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001940 = trunc i32 %v0_10001940 to i8
  %v2_10001940 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001940 = add i32 %v2_10001940, 8
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 %v1_10001940, i8* %v4_10001940, align 1
  %v0_10001944 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001944, label %dec_label_pc_10001950, label %dec_label_pc_10001948

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018e8
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_1000194c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000194c = add i32 %v2_1000194c, 6
  %v4_1000194c = inttoptr i32 %v3_1000194c to i16*
  store i16 16384, i16* %v4_1000194c, align 2
  br label %dec_label_pc_10001950

dec_label_pc_10001950:                            ; preds = %dec_label_pc_100018e8, %dec_label_pc_10001948
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001954 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001954 = add i32 %v2_10001954, 9
  %v4_10001954 = inttoptr i32 %v3_10001954 to i8*
  store i8 17, i8* %v4_10001954, align 1
  %v0_10001958 = call i32 @function_10005cf4()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  %v1_1000195c = add i32 %v0_10001958, -1024
  store i32 %v1_1000195c, i32* %r0.global-to-local, align 4
  %v1_10001960 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001960 = add i32 %v1_10001960, 12
  %v3_10001960 = inttoptr i32 %v2_10001960 to i32*
  store i32 %v0_10001958, i32* %v3_10001960, align 4
  %v0_10001964 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001964 = sub i32 -1, %v0_10001964
  store i32 %v1_10001964, i32* %r0.global-to-local, align 4
  %v0_10001968 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001968, label %dec_label_pc_1000196c, label %dec_label_pc_1000185c

dec_label_pc_1000196c:                            ; preds = %dec_label_pc_10001950
  %v1_1000196c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000196c = add i32 %v1_1000196c, 16
  %v3_1000196c = inttoptr i32 %v2_1000196c to i32*
  store i32 %v1_10001964, i32* %v3_1000196c, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001974:                            ; preds = %dec_label_pc_100017e4
  %v0_10001974 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001974, i32* %r3.global-to-local, align 4
  store i32 268441980, i32* @lr, align 4
  %v0_10001978 = call i32 @function_10008680()
  store i32 %v0_10001978, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000197c

dec_label_pc_1000197c:                            ; preds = %dec_label_pc_10001650, %dec_label_pc_10001974
  store i32 %v0_10001668, i32* %r0.global-to-local, align 4
  %v1_10001990 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001658)
  store i32 %v0_1000169c, i32* %r28.global-to-local, align 4
  store i32 %v0_100016a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100016ac, i32* %r30.global-to-local, align 4
  store i32 %v0_100016b0, i32* %r31.global-to-local, align 4
  %v0_100019d8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100019d8

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_10001808
  %v3_100019dc = icmp eq i32 %v1_10001820, 0
  store i1 %v3_100019dc, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100019e0

dec_label_pc_100019e0:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_100019dc
  store i32 %v5_100017c0, i32* %r0.global-to-local, align 4
  %v0_100019e4 = load i32, i32* %r21.global-to-local, align 4
  %v3_100019e4 = icmp eq i32 %v0_100019e4, 0
  store i1 %v3_100019e4, i1* %cr2_eq.global-to-local, align 1
  %v2_100019e8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100019e8, i32* %r14.global-to-local, align 4
  %v0_100019ec = load i32, i32* %r15.global-to-local, align 4
  %v1_100019ec = add i32 %v0_100019ec, 8
  store i32 %v1_100019ec, i32* %r21.global-to-local, align 4
  %v3_100019f0 = icmp eq i32 %v5_100017c0, -1
  store i1 %v3_100019f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100019f4 = add i32 %v0_100019ec, 66
  store i32 %v1_100019f4, i32* %r22.global-to-local, align 4
  %v0_100019f8 = call i32 @__asm_mfcr()
  store i32 %v0_100019f8, i32* %r3.global-to-local, align 4
  %v1_100019fc = mul i32 %v0_100019f8, 268435456
  store i32 %v1_100019fc, i32* %r20.global-to-local, align 4
  %v2_10001a90 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10001ab4 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10001ac4 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10001a00.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001a00.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001a00.outer

dec_label_pc_10001a00.outer:                      ; preds = %dec_label_pc_10001b64, %dec_label_pc_100019e0
  %v1_10001a00.ph = phi i1 [ %v1_10001a00.pre, %dec_label_pc_100019e0 ], [ %v1_10001b64, %dec_label_pc_10001b64 ]
  %v0_10001a00.ph = phi i1 [ %v0_10001a00.pre, %dec_label_pc_100019e0 ], [ %v0_10001b64, %dec_label_pc_10001b64 ]
  %v2_10001a00 = or i1 %v1_10001a00.ph, %v0_10001a00.ph
  br label %dec_label_pc_10001a00

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_10001a00.outer, %dec_label_pc_10001a00
  br i1 %v2_10001a00, label %dec_label_pc_10001a00, label %dec_label_pc_10001a04

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_10001a00, %dec_label_pc_10001b64
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001a14

dec_label_pc_10001a14:                            ; preds = %dec_label_pc_10001ad4, %dec_label_pc_10001a04
  %v0_10001a14 = phi i32 [ %v1_10001b54, %dec_label_pc_10001ad4 ], [ 0, %dec_label_pc_10001a04 ]
  %v1_10001a14 = mul i32 %v0_10001a14, 24
  store i32 %v1_10001a14, i32* %r0.global-to-local, align 4
  %v1_10001a18 = mul i32 %v0_10001a14, 4
  store i32 %v1_10001a18, i32* %r11.global-to-local, align 4
  %v1_10001a1c = load i32, i32* %r19.global-to-local, align 4
  %v2_10001a1c = add i32 %v1_10001a1c, %v1_10001a18
  %v3_10001a1c = inttoptr i32 %v2_10001a1c to i32*
  %v4_10001a1c = load i32, i32* %v3_10001a1c, align 4
  store i32 %v4_10001a1c, i32* %r28.global-to-local, align 4
  %v1_10001a20 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001a20 = add i32 %v1_10001a20, %v1_10001a14
  %v1_10001a24 = add i32 %v2_10001a20, 20
  %v2_10001a24 = inttoptr i32 %v1_10001a24 to i8*
  %v3_10001a24 = load i8, i8* %v2_10001a24, align 1
  %v4_10001a24 = zext i8 %v3_10001a24 to i32
  store i32 %v4_10001a24, i32* %r9.global-to-local, align 4
  %v1_10001a28 = add i32 %v4_10001a1c, 24
  store i32 %v1_10001a28, i32* @r30, align 4
  %v1_10001a2c = add i32 %v4_10001a1c, 38
  store i32 %v1_10001a2c, i32* @r31, align 4
  %v1_10001a30 = add i32 %v4_10001a1c, 58
  store i32 %v1_10001a30, i32* %r27.global-to-local, align 4
  %v3_10001a34 = icmp eq i8 %v3_10001a24, 31
  store i1 %v3_10001a34, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10001a24, 32
  br i1 %tmp39, label %dec_label_pc_10001b6c, label %dec_label_pc_10001a3c

dec_label_pc_10001a3c:                            ; preds = %dec_label_pc_10001a14
  %v0_10001a3c = load i32, i32* %r20.global-to-local, align 4
  %v1_10001a3c = mul i32 %v0_10001a3c, 16
  %v2_10001a3c = udiv i32 %v0_10001a3c, 268435456
  %v3_10001a3c = or i32 %v2_10001a3c, %v1_10001a3c
  store i32 %v3_10001a3c, i32* %r20.global-to-local, align 4
  %v1_10001a40 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001a3c)
  %v1_10001a44 = mul nuw i32 %v2_10001a3c, 268435456
  %v2_10001a44 = urem i32 %v0_10001a3c, 268435456
  %v3_10001a44 = or i32 %v1_10001a44, %v2_10001a44
  store i32 %v3_10001a44, i32* %r20.global-to-local, align 4
  %v0_10001a48 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001a48, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001a4c:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 65535, i32* @r29, align 4
  %v0_10001a54 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001a54 = icmp eq i32 %v0_10001a54, 65535
  store i1 %v4_10001a54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a54, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v1_10001a5c = phi i32 [ %v1_10001bb0, %dec_label_pc_10001ba0 ], [ 65535, %dec_label_pc_10001a4c ]
  %v0_10001a5c = load i32, i32* %r16.global-to-local, align 4
  %v4_10001a5c = icmp eq i32 %v0_10001a5c, %v1_10001a5c
  store i1 %v4_10001a5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a5c, label %dec_label_pc_10001bd8, label %dec_label_pc_10001a64

dec_label_pc_10001a64:                            ; preds = %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge, %dec_label_pc_10001a5c
  %v1_10001a64 = phi i32 [ %v1_10001a64.pre, %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge ], [ %v1_10001a5c, %dec_label_pc_10001a5c ]
  %v0_10001a64 = load i32, i32* %r17.global-to-local, align 4
  %v4_10001a64 = icmp eq i32 %v0_10001a64, %v1_10001a64
  store i1 %v4_10001a64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a64, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001a6c:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001a6c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001a6c, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001a70 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001a70 = add i32 %v0_10001a70, 16
  %v2_10001a70 = inttoptr i32 %v1_10001a70 to i32*
  %v3_10001a70 = load i32, i32* %v2_10001a70, align 4
  store i32 %v3_10001a70, i32* %r0.global-to-local, align 4
  %v1_10001a74 = load i32, i32* @r31, align 4
  %v2_10001a74 = add i32 %v1_10001a74, 16
  %v3_10001a74 = inttoptr i32 %v2_10001a74 to i32*
  store i32 %v3_10001a70, i32* %v3_10001a74, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001a78:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001a70
  %v0_10001a78 = call i32 @function_10005cf4()
  store i32 %v0_10001a78, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a78, i32* %stack_var_-100, align 4
  %v0_10001a80 = call i32 @function_10005cf4()
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a80, i32* %stack_var_-96, align 4
  %v0_10001a88 = call i32 @function_10005cf4()
  store i32 %v0_10001a88, i32* %stack_var_-92, align 4
  %v0_10001a94 = load i32, i32* @r30, align 4
  store i32 %v0_10001a94, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001aa0.17 to i32), i32* @lr, align 4
  %v3_10001a9c = call i32 @function_10007f44(i32 %v0_10001a94, i32 %v2_10001a90, i32 4)
  %v0_10001aa0 = load i32, i32* @r30, align 4
  %v1_10001aa0 = add i32 %v0_10001aa0, 6
  store i32 %v1_10001aa0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ab0.18 to i32), i32* @lr, align 4
  %v3_10001aac = call i32 @function_10007f44(i32 %v1_10001aa0, i32 %v2_100019e8, i32 4)
  %v0_10001ab0 = load i32, i32* @r30, align 4
  %v1_10001ab0 = add i32 %v0_10001ab0, 4
  store i32 %v1_10001ab0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ac0.19 to i32), i32* @lr, align 4
  %v3_10001abc = call i32 @function_10007f44(i32 %v1_10001ab0, i32 %v2_10001ab4, i32 2)
  %v0_10001ac0 = load i32, i32* @r30, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 10
  store i32 %v1_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v3_10001acc = call i32 @function_10007f44(i32 %v1_10001ac0, i32 %v2_10001ac4, i32 2)
  store i32 %v3_10001acc, i32* %r3.global-to-local, align 4
  %v0_10001ad0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ad0, label %dec_label_pc_10001ad4, label %dec_label_pc_10001c00

dec_label_pc_10001ad4:                            ; preds = %dec_label_pc_10001a78, %dec_label_pc_10001c00
  %v0_10001ad4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001ad4 = trunc i32 %v0_10001ad4 to i16
  %v2_10001ad4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001ad4 = add i32 %v2_10001ad4, 10
  %v4_10001ad4 = inttoptr i32 %v3_10001ad4 to i16*
  store i16 %v1_10001ad4, i16* %v4_10001ad4, align 2
  %v0_10001adc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v2_10001ae0 = call i32 @function_100043cc(i32 %v0_10001adc, i32 20)
  %v3_10001ae0 = trunc i32 %v2_10001ae0 to i16
  %v4_10001ae8 = add i32 %v0_10001adc, 10
  %v5_10001ae8 = inttoptr i32 %v4_10001ae8 to i16*
  store i16 %v3_10001ae0, i16* %v5_10001ae8, align 2
  %v0_10001aec = load i32, i32* @r31, align 4
  store i32 %v0_10001aec, i32* @r3, align 4
  %v0_10001af0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001af0 = trunc i32 %v0_10001af0 to i16
  %v3_10001af0 = add i32 %v0_10001aec, 10
  %v4_10001af0 = inttoptr i32 %v3_10001af0 to i16*
  store i16 %v1_10001af0, i16* %v4_10001af0, align 2
  %v2_10001af4 = call i32 @function_100043cc(i32 %v0_10001aec, i32 20)
  %v3_10001af4 = trunc i32 %v2_10001af4 to i16
  %v0_10001af8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001af8, i32* @r4, align 4
  %v3_10001afc = load i32, i32* @r31, align 4
  %v4_10001afc = add i32 %v3_10001afc, 10
  %v5_10001afc = inttoptr i32 %v4_10001afc to i16*
  store i16 %v3_10001af4, i16* %v5_10001afc, align 2
  %v0_10001b00 = load i32, i32* %r21.global-to-local, align 4
  %v0_10001b04 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b04 = trunc i32 %v0_10001b04 to i16
  %v2_10001b04 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001b04 = add i32 %v2_10001b04, 6
  %v4_10001b04 = inttoptr i32 %v3_10001b04 to i16*
  store i16 %v1_10001b04, i16* %v4_10001b04, align 2
  %v0_10001b08 = load i32, i32* @r31, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  %v0_10001b0c = load i32, i32* %r27.global-to-local, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 4
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i16*
  %v3_10001b0c = load i16, i16* %v2_10001b0c, align 2
  %v4_10001b0c = zext i16 %v3_10001b0c to i32
  %v4_10001b10 = call i32 @function_10004430(i32 %v0_10001b08, i32 %v0_10001af8, i32 %v4_10001b0c, i32 %v0_10001b00)
  %v5_10001b10 = trunc i32 %v4_10001b10 to i16
  store i32 %v4_10001b10, i32* %r3.global-to-local, align 4
  %v3_10001b14 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b14, i32* %r0.global-to-local, align 4
  %v0_10001b18 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001b18 = add i32 %v0_10001b18, 16
  %v2_10001b18 = inttoptr i32 %v1_10001b18 to i32*
  %v3_10001b18 = load i32, i32* %v2_10001b18, align 4
  store i32 %v3_10001b18, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001b20 = mul i32 %v3_10001b14, 24
  store i32 %v1_10001b20, i32* %r0.global-to-local, align 4
  %v3_10001b24 = load i32, i32* %r27.global-to-local, align 4
  %v4_10001b24 = add i32 %v3_10001b24, 6
  %v5_10001b24 = inttoptr i32 %v4_10001b24 to i16*
  store i16 %v5_10001b10, i16* %v5_10001b24, align 2
  %v0_10001b28 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001b2c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001b2c, i32* %r3.global-to-local, align 4
  %v0_10001b30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b30 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b30 = add i32 %v1_10001b30, %v0_10001b30
  %v0_10001b34 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001b34 = trunc i32 %v0_10001b34 to i16
  %v5_10001b34 = inttoptr i32 %v2_10001b30 to i16*
  store i16 %v3_10001b34, i16* %v5_10001b34, align 2
  %v0_10001b38 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001b38 = add i32 %v2_10001b30, 4
  %v3_10001b38 = inttoptr i32 %v2_10001b38 to i32*
  store i32 %v0_10001b38, i32* %v3_10001b38, align 4
  %v0_10001b3c = load i32, i32* %r22.global-to-local, align 4
  %v0_10001b40 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b40 = trunc i32 %v0_10001b40 to i16
  %v3_10001b40 = add i32 %v2_10001b30, 2
  %v4_10001b40 = inttoptr i32 %v3_10001b40 to i16*
  store i16 %v1_10001b40, i16* %v4_10001b40, align 2
  store i32 268442448, i32* @lr, align 4
  %v6_10001b4c = call i32 @function_10009320(i32 %v0_10001b2c, i32 %v0_10001b28, i32 %v0_10001b3c, i32 16384, i32 %v2_10001b30, i32 16)
  store i32 %v6_10001b4c, i32* %r3.global-to-local, align 4
  %v3_10001b50 = load i32, i32* %stack_var_-104, align 4
  %v1_10001b54 = add i32 %v3_10001b50, 1
  store i32 %v1_10001b54, i32* %r9.global-to-local, align 4
  %v1_10001b58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001b58 = icmp slt i32 %v1_10001b54, %v1_10001b58
  %v4_10001b58 = icmp eq i32 %v1_10001b54, %v1_10001b58
  store i1 %v4_10001b58, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001b54, i32* %stack_var_-104, align 4
  br i1 %v2_10001b58, label %dec_label_pc_10001a14, label %dec_label_pc_10001b64

dec_label_pc_10001b64:                            ; preds = %dec_label_pc_10001ad4
  %v0_10001b64 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001b64 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001b64 = or i1 %v0_10001b64, %v1_10001b64
  br i1 %v2_10001b64, label %dec_label_pc_10001a00.outer, label %dec_label_pc_10001a04

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001a14
  %v1_10001b6c = add i32 %v2_10001a20, 16
  %v2_10001b6c = inttoptr i32 %v1_10001b6c to i32*
  %v3_10001b6c = load i32, i32* %v2_10001b6c, align 4
  store i32 %v3_10001b6c, i32* %r29.global-to-local, align 4
  %v0_10001b70 = call i32 @function_10005cf4()
  store i32 %v0_10001b70, i32* %r3.global-to-local, align 4
  %v3_10001b74 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b74, i32* %r9.global-to-local, align 4
  %v0_10001b78 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001b78 = mul i32 %v0_10001b78, 16
  %v2_10001b78 = udiv i32 %v0_10001b78, 268435456
  %v3_10001b78 = or i32 %v2_10001b78, %v1_10001b78
  store i32 %v3_10001b78, i32* %r20.global-to-local, align 4
  %v1_10001b7c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001b78)
  %v1_10001b80 = mul nuw i32 %v2_10001b78, 268435456
  %v2_10001b80 = urem i32 %v0_10001b78, 268435456
  %v3_10001b80 = or i32 %v1_10001b80, %v2_10001b80
  store i32 %v3_10001b80, i32* %r20.global-to-local, align 4
  %v0_10001b84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001b84 = mul i32 %v0_10001b84, 24
  %v1_10001b88 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b88 = add i32 %v1_10001b88, %v1_10001b84
  store i32 %v2_10001b88, i32* %r9.global-to-local, align 4
  %v1_10001b8c = add i32 %v2_10001b88, 20
  %v2_10001b8c = inttoptr i32 %v1_10001b8c to i8*
  %v3_10001b8c = load i8, i8* %v2_10001b8c, align 1
  %v4_10001b8c = zext i8 %v3_10001b8c to i32
  store i32 %v4_10001b8c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001b8c, 64
  %v2_10001b90 = zext i8 %tmp to i32
  %v3_10001b90 = lshr i32 %v0_10001b70, %v2_10001b90
  store i32 %v3_10001b90, i32* %r3.global-to-local, align 4
  %v0_10001b94 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b94 = add i32 %v3_10001b90, %v0_10001b94
  store i32 %v2_10001b94, i32* %r29.global-to-local, align 4
  %v1_10001b98 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001b98 = add i32 %v1_10001b98, 16
  %v3_10001b98 = inttoptr i32 %v2_10001b98 to i32*
  store i32 %v2_10001b94, i32* %v3_10001b98, align 4
  %v0_10001b9c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001b9c, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001ba4 = call i32 @function_10005cf4()
  store i32 %v0_10001ba4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bac = add i32 %v1_10001bac, 12
  %v3_10001bac = inttoptr i32 %v2_10001bac to i32*
  store i32 %v0_10001ba4, i32* %v3_10001bac, align 4
  %v0_10001bb0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001bb0 = load i32, i32* @r29, align 4
  %v4_10001bb0 = icmp eq i32 %v0_10001bb0, %v1_10001bb0
  store i1 %v4_10001bb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001bb0, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001bb8:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v0_10001bb8 = call i32 @function_10005cf4()
  %v0_10001bbc = load i32, i32* %r16.global-to-local, align 4
  %v1_10001bbc = load i32, i32* @r29, align 4
  %v4_10001bbc = icmp eq i32 %v0_10001bbc, %v1_10001bbc
  store i1 %v4_10001bbc, i1* %cr7_eq.global-to-local, align 1
  %v1_10001bc0 = urem i32 %v0_10001bb8, 65536
  store i32 %v1_10001bc0, i32* %r3.global-to-local, align 4
  %v1_10001bc4 = add nsw i32 %v1_10001bc0, -1000
  store i32 %v1_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = trunc i32 %v0_10001bb8 to i16
  %v2_10001bc8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001bc8 = add i32 %v2_10001bc8, 4
  %v4_10001bc8 = inttoptr i32 %v3_10001bc8 to i16*
  store i16 %v1_10001bc8, i16* %v4_10001bc8, align 2
  %v0_10001bcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10001bcc = sub i32 -1, %v0_10001bcc
  store i32 %v1_10001bcc, i32* %r0.global-to-local, align 4
  %v1_10001bd0 = trunc i32 %v1_10001bcc to i16
  %v2_10001bd0 = load i32, i32* @r31, align 4
  %v3_10001bd0 = add i32 %v2_10001bd0, 4
  %v4_10001bd0 = inttoptr i32 %v3_10001bd0 to i16*
  store i16 %v1_10001bd0, i16* %v4_10001bd0, align 2
  br i1 %v4_10001bbc, label %dec_label_pc_10001bd8, label %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge

dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge: ; preds = %dec_label_pc_10001bb8
  %v1_10001a64.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001a64

dec_label_pc_10001bd8:                            ; preds = %dec_label_pc_10001bb8, %dec_label_pc_10001a5c
  %v0_10001bd8 = call i32 @function_10005cf4()
  %v1_10001bd8 = trunc i32 %v0_10001bd8 to i16
  store i32 %v0_10001bd8, i32* %r3.global-to-local, align 4
  %v0_10001bdc = load i32, i32* %r17.global-to-local, align 4
  %v1_10001bdc = load i32, i32* @r29, align 4
  %v4_10001bdc = icmp eq i32 %v0_10001bdc, %v1_10001bdc
  store i1 %v4_10001bdc, i1* %cr7_eq.global-to-local, align 1
  %v3_10001be0 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001be0 = add i32 %v3_10001be0, 58
  %v5_10001be0 = inttoptr i32 %v4_10001be0 to i16*
  store i16 %v1_10001bd8, i16* %v5_10001be0, align 2
  br i1 %v4_10001bdc, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001be8:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001be8 = call i32 @function_10005cf4()
  %v1_10001be8 = trunc i32 %v0_10001be8 to i16
  store i32 %v0_10001be8, i32* %r3.global-to-local, align 4
  %v3_10001bec = load i32, i32* %r27.global-to-local, align 4
  %v4_10001bec = add i32 %v3_10001bec, 2
  %v5_10001bec = inttoptr i32 %v4_10001bec to i16*
  store i16 %v1_10001be8, i16* %v5_10001bec, align 2
  %v0_10001bf0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001bf0, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001bf4 = call i32 @function_10005cf4()
  store i32 %v0_10001bf4, i32* %r3.global-to-local, align 4
  %v1_10001bf8 = load i32, i32* @r31, align 4
  %v2_10001bf8 = add i32 %v1_10001bf8, 16
  %v3_10001bf8 = inttoptr i32 %v2_10001bf8 to i32*
  store i32 %v0_10001bf4, i32* %v3_10001bf8, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001c00:                            ; preds = %dec_label_pc_10001a78
  %v0_10001c00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001c00 = add i32 %v0_10001c00, 8
  store i32 %v1_10001c00, i32* @r3, align 4
  %v0_10001c04 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10001c04, i32* @r4, align 4
  %v0_10001c08 = call i32 @function_10005ec8()
  store i32 %v0_10001c08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ad4

; uselistorder directives
  uselistorder i32 %v0_10001be8, { 1, 0 }
  uselistorder i32 %v0_10001bd8, { 1, 0 }
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %v1_10001bc0, { 1, 0 }
  uselistorder i32 %v0_10001bb8, { 1, 0 }
  uselistorder i32 %v1_10001bb0, { 1, 0 }
  uselistorder i32 %v0_10001b78, { 2, 1, 0 }
  uselistorder i1 %v1_10001b64, { 1, 0 }
  uselistorder i1 %v0_10001b64, { 1, 0 }
  uselistorder i32 %v1_10001b54, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001b30, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001b10, { 1, 0 }
  uselistorder i32 %v0_10001a3c, { 2, 1, 0 }
  uselistorder i32 %v4_10001a1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001a18, { 1, 0 }
  uselistorder i32 %v1_10001964, { 1, 0 }
  uselistorder i32 %v1_100018a0, { 1, 0 }
  uselistorder i32 %v1_10001894, { 1, 0 }
  uselistorder i32 %v1_10001830, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001820, { 1, 2, 0 }
  uselistorder i32 %v0_10001814, { 1, 0 }
  uselistorder i32 %v5_100017c0, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 34, 22, 23, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 24, 25, 26, 27, 28, 1, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r24.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 27, 23, 24, 25, 26, 14, 28, 29, 30, 12, 13 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001ad4, { 1, 0 }
  uselistorder label %dec_label_pc_10001a04, { 1, 0 }
  uselistorder label %dec_label_pc_10001a00, { 1, 0 }
  uselistorder label %dec_label_pc_100019e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000197c, { 1, 0 }
  uselistorder label %dec_label_pc_10001950, { 1, 0 }
  uselistorder label %dec_label_pc_100018e8, { 1, 0 }
}

define i32 @function_10001c10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001c10:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001c14 = load i32, i32* @lr, align 4
  store i32 %v0_10001c14, i32* %r0.global-to-local, align 4
  %v0_10001c18 = call i32 @__asm_mfcr()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_10001c28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001c18, i32* %r19.global-to-local, align 4
  %v0_10001c5c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001c64 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001c6c = load i32, i32* @r30, align 4
  %v0_10001c70 = load i32, i32* @r31, align 4
  store i32 268442756, i32* @lr, align 4
  %v2_10001c80 = call i32 @function_100096f8(i32 4, i32 4)
  store i32 %v2_10001c80, i32* %r20.global-to-local, align 4
  %v0_10001c88 = load i32, i32* @r28, align 4
  %v0_10001c94 = load i32, i32* @r29, align 4
  store i32 %v0_10001c94, i32* %r3.global-to-local, align 4
  store i32 268442780, i32* @lr, align 4
  %v4_10001c98 = inttoptr i32 %v0_10001c88 to i32*
  %v5_10001c98 = call i32 @function_100006a8(i32 %v0_10001c94, i32* %v4_10001c98, i32 2, i32 0)
  %v0_10001ca8 = load i32, i32* @r28, align 4
  %v1_10001cac = urem i32 %v5_10001c98, 256
  store i32 %v1_10001cac, i32* %r14.global-to-local, align 4
  %v0_10001cb0 = load i32, i32* @r29, align 4
  store i32 %v0_10001cb0, i32* %r3.global-to-local, align 4
  store i32 268442808, i32* @lr, align 4
  %v4_10001cb4 = inttoptr i32 %v0_10001ca8 to i32*
  %v5_10001cb4 = call i32 @function_100006a8(i32 %v0_10001cb0, i32* %v4_10001cb4, i32 3, i32 65535)
  %v0_10001cb8 = load i32, i32* @r28, align 4
  store i32 %v5_10001cb4, i32* %r25.global-to-local, align 4
  %v0_10001cc8 = load i32, i32* @r29, align 4
  store i32 %v0_10001cc8, i32* %r3.global-to-local, align 4
  store i32 268442832, i32* @lr, align 4
  %v4_10001ccc = inttoptr i32 %v0_10001cb8 to i32*
  %v5_10001ccc = call i32 @function_100006a8(i32 %v0_10001cc8, i32* %v4_10001ccc, i32 4, i32 64)
  %v0_10001cd0 = load i32, i32* @r28, align 4
  %v1_10001cdc = urem i32 %v5_10001ccc, 256
  store i32 %v1_10001cdc, i32* %r21.global-to-local, align 4
  %v0_10001ce0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ce0, i32* %r3.global-to-local, align 4
  store i32 268442856, i32* @lr, align 4
  %v4_10001ce4 = inttoptr i32 %v0_10001cd0 to i32*
  %v5_10001ce4 = call i32 @function_100006a8(i32 %v0_10001ce0, i32* %v4_10001ce4, i32 5, i32 1)
  %v0_10001cf4 = load i32, i32* @r28, align 4
  %v1_10001cf8 = urem i32 %v5_10001ce4, 256
  store i32 %v1_10001cf8, i32* @r31, align 4
  %v0_10001cfc = load i32, i32* @r29, align 4
  store i32 %v0_10001cfc, i32* %r3.global-to-local, align 4
  store i32 268442884, i32* @lr, align 4
  %v4_10001d00 = inttoptr i32 %v0_10001cf4 to i32*
  %v5_10001d00 = call i32 @function_100006a8(i32 %v0_10001cfc, i32* %v4_10001d00, i32 6, i32 65535)
  %v0_10001d08 = load i32, i32* @r28, align 4
  store i32 %v5_10001d00, i32* %r24.global-to-local, align 4
  %v0_10001d18 = load i32, i32* @r29, align 4
  store i32 %v0_10001d18, i32* %r3.global-to-local, align 4
  store i32 268442912, i32* @lr, align 4
  %v4_10001d1c = inttoptr i32 %v0_10001d08 to i32*
  %v5_10001d1c = call i32 @function_100006a8(i32 %v0_10001d18, i32* %v4_10001d1c, i32 7, i32 65535)
  %v0_10001d20 = load i32, i32* @r28, align 4
  store i32 %v5_10001d1c, i32* %r27.global-to-local, align 4
  %v0_10001d30 = load i32, i32* @r29, align 4
  store i32 %v0_10001d30, i32* %r3.global-to-local, align 4
  store i32 268442936, i32* @lr, align 4
  %v4_10001d34 = inttoptr i32 %v0_10001d20 to i32*
  %v5_10001d34 = call i32 @function_100006a8(i32 %v0_10001d30, i32* %v4_10001d34, i32 0, i32 512)
  %v0_10001d38 = load i32, i32* @r28, align 4
  store i32 %v5_10001d34, i32* %r16.global-to-local, align 4
  %v0_10001d48 = load i32, i32* @r29, align 4
  store i32 %v0_10001d48, i32* %r3.global-to-local, align 4
  store i32 268442960, i32* @lr, align 4
  %v4_10001d4c = inttoptr i32 %v0_10001d38 to i32*
  %v5_10001d4c = call i32 @function_100006a8(i32 %v0_10001d48, i32* %v4_10001d4c, i32 1, i32 1)
  %v0_10001d50 = load i32, i32* @r28, align 4
  %v1_10001d5c = urem i32 %v5_10001d4c, 256
  store i32 %v1_10001d5c, i32* %r15.global-to-local, align 4
  %v0_10001d60 = load i32, i32* @r29, align 4
  store i32 %v0_10001d60, i32* %r3.global-to-local, align 4
  store i32 268442984, i32* @lr, align 4
  %v4_10001d64 = inttoptr i32 %v0_10001d50 to i32*
  %v5_10001d64 = call i32 @function_100006a8(i32 %v0_10001d60, i32* %v4_10001d64, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001d6c = load i32, i32* @global_var_1001b718.16, align 4
  %v0_10001d70 = load i32, i32* @r28, align 4
  store i32 %v5_10001d64, i32* %r30.global-to-local, align 4
  %v0_10001d7c = load i32, i32* @r29, align 4
  store i32 %v0_10001d7c, i32* %r3.global-to-local, align 4
  store i32 268443012, i32* @lr, align 4
  %v4_10001d80 = inttoptr i32 %v0_10001d70 to i32*
  %v5_10001d80 = call i32 @function_100006a8(i32 %v0_10001d7c, i32* %v4_10001d80, i32 25, i32 %v3_10001d6c)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268443032, i32* @lr, align 4
  %v3_10001d94 = call i32 @function_1000939c(i32 2, i32 3, i32 6)
  store i32 %v3_10001d94, i32* %r3.global-to-local, align 4
  %v3_10001d98 = icmp eq i32 %v3_10001d94, -1
  store i1 %v3_10001d98, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001d94, i32* %r23.global-to-local, align 4
  br i1 %v3_10001d98, label %dec_label_pc_10001f30, label %dec_label_pc_10001da4

dec_label_pc_10001da4:                            ; preds = %dec_label_pc_10001c10
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001db0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268443072, i32* @lr, align 4
  %v4_10001dbc = call i32 @function_10009360(i32 0, i32 3, i32 %v2_10001db0, i32 4)
  store i32 %v4_10001dbc, i32* %r3.global-to-local, align 4
  %v3_10001dc0 = icmp eq i32 %v4_10001dbc, -1
  store i1 %v3_10001dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001dc0, label %dec_label_pc_10001f28, label %dec_label_pc_10001dc8

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001da4
  %v0_10001dc8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc8 = icmp slt i32 %v0_10001dc8, 0
  %v3_10001dc8 = icmp eq i32 %v0_10001dc8, 0
  store i1 %v1_10001dc8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001dc8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001dd4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001dd4 = urem i32 %v0_10001dd4, 65536
  store i32 %v1_10001dd4, i32* %r25.global-to-local, align 4
  %v0_10001dd8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001dd8 = urem i32 %v0_10001dd8, 65536
  store i32 %v1_10001dd8, i32* %r17.global-to-local, align 4
  %v0_10001ddc = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ddc = urem i32 %v0_10001ddc, 65536
  store i32 %v1_10001ddc, i32* %r18.global-to-local, align 4
  %v0_10001de0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001de0 = urem i32 %v0_10001de0, 256
  store i32 %v1_10001de0, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_10001dc8, 1
  br i1 %tmp33, label %dec_label_pc_10001f90, label %dec_label_pc_10001de8

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001dc8
  %v0_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = icmp eq i32 %v0_10001de8, 0
  store i1 %v3_10001de8, i1* %cr2_eq.global-to-local, align 1
  %v3_10001dec = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001dec, i1* %cr3_eq.global-to-local, align 1
  %v0_10001df0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001df0 = urem i32 %v0_10001df0, 65536
  %v0_10001dd4.not = or i32 %v0_10001dd4, -65536
  %v1_10001df4 = xor i32 %v0_10001dd4.not, 65535
  store i32 %v1_10001df4, i32* %r11.global-to-local, align 4
  %v1_10001dfc = add nuw nsw i32 %v1_10001df0, 52
  store i32 %v1_10001dfc, i32* %r0.global-to-local, align 4
  %v1_10001e00 = add nuw nsw i32 %v1_10001df0, 28
  store i32 %v1_10001e00, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001df0, 52
  %v1_10001e04 = urem i32 %fold, 65536
  store i32 %v1_10001e04, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001df0, 28
  %v1_10001e08 = urem i32 %fold8, 65536
  store i32 %v1_10001e08, i32* %r24.global-to-local, align 4
  %v1_10001e0c = urem i32 %v1_10001df4, 65536
  store i32 %v1_10001e0c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001df0, 8
  %v1_10001e10 = urem i32 %fold9, 65536
  store i32 %v1_10001e10, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001e44

dec_label_pc_10001e1c:                            ; preds = %dec_label_pc_10001f04
  %v0_10001e1c = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 16
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v1_10001e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001e20 = add i32 %v1_10001e20, 16
  %v3_10001e20 = inttoptr i32 %v2_10001e20 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001f20, %dec_label_pc_10001e1c
  %v3_10001e24 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e24, i32* %r9.global-to-local, align 4
  %v0_10001e28 = load i32, i32* @r28, align 4
  %v1_10001e28 = trunc i32 %v0_10001e28 to i16
  %v2_10001e28 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e28 = add i32 %v2_10001e28, 4
  %v4_10001e28 = inttoptr i32 %v3_10001e28 to i16*
  store i16 %v1_10001e28, i16* %v4_10001e28, align 2
  %v0_10001e2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e2c = add i32 %v0_10001e2c, 1
  store i32 %v1_10001e2c, i32* %r31.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001e30 = trunc i32 %v0_10001e30 to i16
  %v2_10001e30 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e30 = inttoptr i32 %v2_10001e30 to i16*
  store i16 %v1_10001e30, i16* %v3_10001e30, align 2
  %v0_10001e34 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e34 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001e34 = icmp slt i32 %v0_10001e34, %v1_10001e34
  %v4_10001e34 = icmp eq i32 %v0_10001e34, %v1_10001e34
  store i1 %v4_10001e34, i1* %cr7_eq.global-to-local, align 1
  %v0_10001e38 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001e38 = trunc i32 %v0_10001e38 to i16
  %v2_10001e38 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e38 = add i32 %v2_10001e38, 2
  %v4_10001e38 = inttoptr i32 %v3_10001e38 to i16*
  store i16 %v1_10001e38, i16* %v4_10001e38, align 2
  %v0_10001e3c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001e3c, i32* %stack_var_-104, align 4
  br i1 %v2_10001e34, label %dec_label_pc_10001e44, label %dec_label_pc_10001f94

dec_label_pc_10001e44:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001de8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268443216, i32* @lr, align 4
  %v2_10001e4c = call i32 @function_100096f8(i32 1510, i32 4)
  store i32 %v2_10001e4c, i32* %r3.global-to-local, align 4
  %v3_10001e50 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e50, i32* %r9.global-to-local, align 4
  %v0_10001e54 = load i32, i32* @r31, align 4
  %v1_10001e54 = mul i32 %v0_10001e54, 4
  store i32 %v1_10001e54, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001e5c = load i32, i32* %r20.global-to-local, align 4
  %v3_10001e5c = add i32 %v1_10001e5c, %v1_10001e54
  %v4_10001e5c = inttoptr i32 %v3_10001e5c to i32*
  store i32 %v2_10001e4c, i32* %v4_10001e5c, align 4
  %v0_10001e60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e60 = mul i32 %v0_10001e60, 4
  store i32 %v1_10001e60, i32* %r9.global-to-local, align 4
  %v1_10001e64 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001e64 = add i32 %v1_10001e64, %v1_10001e60
  %v3_10001e64 = inttoptr i32 %v2_10001e64 to i32*
  %v4_10001e64 = load i32, i32* %v3_10001e64, align 4
  store i32 %v4_10001e64, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001e6c = inttoptr i32 %v4_10001e64 to i32*
  %v2_10001e6c = load i32, i32* %v1_10001e6c, align 4
  store i32 %v2_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = add i32 %v4_10001e64, 24
  store i32 %v1_10001e70, i32* %r30.global-to-local, align 4
  %v0_10001e74 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001e74 = trunc i32 %v0_10001e74 to i8
  %v3_10001e74 = add i32 %v4_10001e64, 8
  %v4_10001e74 = inttoptr i32 %v3_10001e74 to i8*
  store i8 %v1_10001e74, i8* %v4_10001e74, align 1
  %v0_10001e78 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e78 = add i32 %v0_10001e78, 44
  store i32 %v1_10001e78, i32* %r29.global-to-local, align 4
  %v1_10001e7c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001e7c, i32* %r0.global-to-local, align 4
  %v0_10001e80 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e80 = trunc i32 %v0_10001e80 to i16
  %v2_10001e80 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e80 = add i32 %v2_10001e80, 4
  %v4_10001e80 = inttoptr i32 %v3_10001e80 to i16*
  store i16 %v1_10001e80, i16* %v4_10001e80, align 2
  %v1_10001e84 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001e84, i32* %r0.global-to-local, align 4
  %v0_10001e88 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e88 = add i32 %v0_10001e88, 20
  store i32 %v1_10001e88, i32* %r9.global-to-local, align 4
  %v2_10001e8c = inttoptr i32 %v0_10001e88 to i32*
  store i32 %v1_10001e84, i32* %v2_10001e8c, align 4
  %v0_10001e90 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001e90 = trunc i32 %v0_10001e90 to i8
  %v2_10001e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e90 = add i32 %v2_10001e90, 1
  %v4_10001e90 = inttoptr i32 %v3_10001e90 to i8*
  store i8 %v1_10001e90, i8* %v4_10001e90, align 1
  %v0_10001e94 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001e94 = trunc i32 %v0_10001e94 to i16
  %v2_10001e94 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e94 = add i32 %v2_10001e94, 2
  %v4_10001e94 = inttoptr i32 %v3_10001e94 to i16*
  store i16 %v1_10001e94, i16* %v4_10001e94, align 2
  %v0_10001e98 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001e98, label %dec_label_pc_10001ea4, label %dec_label_pc_10001e9c

dec_label_pc_10001e9c:                            ; preds = %dec_label_pc_10001e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001ea0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001ea0 = add i32 %v2_10001ea0, 6
  %v4_10001ea0 = inttoptr i32 %v3_10001ea0 to i16*
  store i16 16384, i16* %v4_10001ea0, align 2
  br label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001e44, %dec_label_pc_10001e9c
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001eac = load i32, i32* %r31.global-to-local, align 4
  %v3_10001eac = add i32 %v2_10001eac, 9
  %v4_10001eac = inttoptr i32 %v3_10001eac to i8*
  store i8 47, i8* %v4_10001eac, align 1
  %v0_10001eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001eb0 = trunc i32 %v0_10001eb0 to i16
  %v2_10001eb0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001eb0 = add i32 %v2_10001eb0, 2
  %v4_10001eb0 = inttoptr i32 %v3_10001eb0 to i16*
  store i16 %v1_10001eb0, i16* %v4_10001eb0, align 2
  %v3_10001eb4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001d80, i32* %r11.global-to-local, align 4
  %v1_10001ebc = mul i32 %v3_10001eb4, 24
  store i32 %v1_10001ebc, i32* %r9.global-to-local, align 4
  %v0_10001ec0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001ec0 = add i32 %v0_10001ec0, 24
  %v2_10001ec0 = inttoptr i32 %v1_10001ec0 to i32*
  %v3_10001ec0 = load i32, i32* %v2_10001ec0, align 4
  store i32 %v3_10001ec0, i32* %r0.global-to-local, align 4
  %v2_10001ec4 = add i32 %v0_10001ec0, 12
  %v3_10001ec4 = inttoptr i32 %v2_10001ec4 to i32*
  store i32 %v5_10001d80, i32* %v3_10001ec4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001ecc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ecc = load i32, i32* %r26.global-to-local, align 4
  %v2_10001ecc = add i32 %v1_10001ecc, %v0_10001ecc
  store i32 %v2_10001ecc, i32* %r9.global-to-local, align 4
  %v1_10001ed0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001ed0, i32* %r0.global-to-local, align 4
  %v0_10001ed4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ed4 = add i32 %v0_10001ed4, 16
  %v2_10001ed4 = inttoptr i32 %v1_10001ed4 to i32*
  %v3_10001ed4 = load i32, i32* %v2_10001ed4, align 4
  store i32 %v3_10001ed4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001edc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001edc, i32* %r0.global-to-local, align 4
  %v1_10001ee0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee0 = add i32 %v1_10001ee0, 24
  %v3_10001ee0 = inttoptr i32 %v2_10001ee0 to i32*
  store i32 %v1_10001edc, i32* %v3_10001ee0, align 4
  %v0_10001ee4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001ee4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee4 = add i32 %v1_10001ee4, 16
  %v3_10001ee4 = inttoptr i32 %v2_10001ee4 to i32*
  store i32 %v0_10001ee4, i32* %v3_10001ee4, align 4
  %v0_10001ee8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001ee8 = trunc i32 %v0_10001ee8 to i8
  %v2_10001ee8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ee8 = add i32 %v2_10001ee8, 1
  %v4_10001ee8 = inttoptr i32 %v3_10001ee8 to i8*
  store i8 %v1_10001ee8, i8* %v4_10001ee8, align 1
  %v0_10001eec = load i32, i32* %r24.global-to-local, align 4
  %v1_10001eec = trunc i32 %v0_10001eec to i16
  %v2_10001eec = load i32, i32* %r30.global-to-local, align 4
  %v3_10001eec = add i32 %v2_10001eec, 2
  %v4_10001eec = inttoptr i32 %v3_10001eec to i16*
  store i16 %v1_10001eec, i16* %v4_10001eec, align 2
  %v0_10001ef0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ef0 = trunc i32 %v0_10001ef0 to i16
  %v2_10001ef0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef0 = add i32 %v2_10001ef0, 4
  %v4_10001ef0 = inttoptr i32 %v3_10001ef0 to i16*
  store i16 %v1_10001ef0, i16* %v4_10001ef0, align 2
  %v0_10001ef4 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001ef4 = trunc i32 %v0_10001ef4 to i8
  %v2_10001ef4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef4 = add i32 %v2_10001ef4, 8
  %v4_10001ef4 = inttoptr i32 %v3_10001ef4 to i8*
  store i8 %v1_10001ef4, i8* %v4_10001ef4, align 1
  %v0_10001ef8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ef8, label %dec_label_pc_10001f04, label %dec_label_pc_10001efc

dec_label_pc_10001efc:                            ; preds = %dec_label_pc_10001ea4
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10001f00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f00 = add i32 %v2_10001f00, 6
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 16384, i16* %v4_10001f00, align 2
  br label %dec_label_pc_10001f04

dec_label_pc_10001f04:                            ; preds = %dec_label_pc_10001ea4, %dec_label_pc_10001efc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001f08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f08 = add i32 %v2_10001f08, 9
  %v4_10001f08 = inttoptr i32 %v3_10001f08 to i8*
  store i8 17, i8* %v4_10001f08, align 1
  %v0_10001f0c = call i32 @function_10005cf4()
  store i32 %v0_10001f0c, i32* %r3.global-to-local, align 4
  %v1_10001f10 = add i32 %v0_10001f0c, -1024
  store i32 %v1_10001f10, i32* %r0.global-to-local, align 4
  %v1_10001f14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f14 = add i32 %v1_10001f14, 12
  %v3_10001f14 = inttoptr i32 %v2_10001f14 to i32*
  store i32 %v0_10001f0c, i32* %v3_10001f14, align 4
  %v0_10001f18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f18 = sub i32 -1, %v0_10001f18
  store i32 %v1_10001f18, i32* %r0.global-to-local, align 4
  %v0_10001f1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001f1c, label %dec_label_pc_10001f20, label %dec_label_pc_10001e1c

dec_label_pc_10001f20:                            ; preds = %dec_label_pc_10001f04
  %v1_10001f20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 16
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f18, i32* %v3_10001f20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001f28:                            ; preds = %dec_label_pc_10001da4
  %v0_10001f28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001f28, i32* %r3.global-to-local, align 4
  store i32 268443440, i32* @lr, align 4
  %v0_10001f2c = call i32 @function_10008680()
  store i32 %v0_10001f2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001f30

dec_label_pc_10001f30:                            ; preds = %dec_label_pc_10001c10, %dec_label_pc_10001f28
  store i32 %v0_10001c28, i32* %r0.global-to-local, align 4
  %v1_10001f44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001c18)
  store i32 %v0_10001c5c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c64, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c6c, i32* %r30.global-to-local, align 4
  store i32 %v0_10001c70, i32* %r31.global-to-local, align 4
  %v0_10001f8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f8c

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001dc8
  %v3_10001f90 = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001f90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001f90
  store i32 %v5_10001d80, i32* %r0.global-to-local, align 4
  %v0_10001f98 = load i32, i32* %r15.global-to-local, align 4
  %v3_10001f98 = icmp eq i32 %v0_10001f98, 0
  store i1 %v3_10001f98, i1* %cr2_eq.global-to-local, align 1
  %v0_10001f9c = load i32, i32* %r16.global-to-local, align 4
  %v1_10001f9c = add i32 %v0_10001f9c, 8
  store i32 %v1_10001f9c, i32* %r22.global-to-local, align 4
  %v1_10001fa0 = add i32 %v0_10001f9c, 52
  store i32 %v1_10001fa0, i32* %r24.global-to-local, align 4
  %v3_10001fa4 = icmp eq i32 %v5_10001d80, -1
  store i1 %v3_10001fa4, i1* %cr7_eq.global-to-local, align 1
  %v0_10001fa8 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa8, i32* %r3.global-to-local, align 4
  %v1_10001fac = mul i32 %v0_10001fa8, 268435456
  store i32 %v1_10001fac, i32* %r21.global-to-local, align 4
  %v0_10001fb0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001fb0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001fb0.outer

dec_label_pc_10001fb0.outer:                      ; preds = %dec_label_pc_100020b8, %dec_label_pc_10001f94
  %v1_10001fb0.ph = phi i1 [ %v1_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v1_100020b8, %dec_label_pc_100020b8 ]
  %v0_10001fb0.ph = phi i1 [ %v0_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v0_100020b8, %dec_label_pc_100020b8 ]
  %v2_10001fb0 = or i1 %v1_10001fb0.ph, %v0_10001fb0.ph
  br label %dec_label_pc_10001fb0

dec_label_pc_10001fb0:                            ; preds = %dec_label_pc_10001fb0.outer, %dec_label_pc_10001fb0
  br i1 %v2_10001fb0, label %dec_label_pc_10001fb0, label %dec_label_pc_10001fb4

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001fb0, %dec_label_pc_100020b8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001fc4

dec_label_pc_10001fc4:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_10001fb4
  %v0_10001fc4 = phi i32 [ %v1_100020a8, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_10001fb4 ]
  %v1_10001fc4 = mul i32 %v0_10001fc4, 24
  store i32 %v1_10001fc4, i32* %r0.global-to-local, align 4
  %v1_10001fc8 = mul i32 %v0_10001fc4, 4
  store i32 %v1_10001fc8, i32* %r11.global-to-local, align 4
  %v1_10001fcc = load i32, i32* %r20.global-to-local, align 4
  %v2_10001fcc = add i32 %v1_10001fcc, %v1_10001fc8
  %v3_10001fcc = inttoptr i32 %v2_10001fcc to i32*
  %v4_10001fcc = load i32, i32* %v3_10001fcc, align 4
  store i32 %v4_10001fcc, i32* %r28.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, %v1_10001fc4
  %v1_10001fd4 = add i32 %v2_10001fd0, 20
  %v2_10001fd4 = inttoptr i32 %v1_10001fd4 to i8*
  %v3_10001fd4 = load i8, i8* %v2_10001fd4, align 1
  %v4_10001fd4 = zext i8 %v3_10001fd4 to i32
  store i32 %v4_10001fd4, i32* %r9.global-to-local, align 4
  %v1_10001fd8 = add i32 %v4_10001fcc, 24
  store i32 %v1_10001fd8, i32* @r31, align 4
  %v1_10001fdc = add i32 %v4_10001fcc, 44
  store i32 %v1_10001fdc, i32* @r30, align 4
  %v3_10001fe0 = icmp eq i8 %v3_10001fd4, 31
  store i1 %v3_10001fe0, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001fd4, 32
  br i1 %tmp35, label %dec_label_pc_100020c0, label %dec_label_pc_10001fe8

dec_label_pc_10001fe8:                            ; preds = %dec_label_pc_10001fc4
  %v0_10001fe8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001fe8 = mul i32 %v0_10001fe8, 16
  %v2_10001fe8 = udiv i32 %v0_10001fe8, 268435456
  %v3_10001fe8 = or i32 %v2_10001fe8, %v1_10001fe8
  store i32 %v3_10001fe8, i32* %r21.global-to-local, align 4
  %v1_10001fec = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001fe8)
  %v1_10001ff0 = mul nuw i32 %v2_10001fe8, 268435456
  %v2_10001ff0 = urem i32 %v0_10001fe8, 268435456
  %v3_10001ff0 = or i32 %v1_10001ff0, %v2_10001ff0
  store i32 %v3_10001ff0, i32* %r21.global-to-local, align 4
  %v0_10001ff4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001ff4, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_10001ff8:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 65535, i32* @r29, align 4
  %v0_10002000 = load i32, i32* %r25.global-to-local, align 4
  %v4_10002000 = icmp eq i32 %v0_10002000, 65535
  store i1 %v4_10002000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002000, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_10002008:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v1_10002008 = phi i32 [ %v1_10002104, %dec_label_pc_100020f4 ], [ 65535, %dec_label_pc_10001ff8 ]
  %v0_10002008 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002008 = icmp eq i32 %v0_10002008, %v1_10002008
  store i1 %v4_10002008, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002008, label %dec_label_pc_1000212c, label %dec_label_pc_10002010

dec_label_pc_10002010:                            ; preds = %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge, %dec_label_pc_10002008
  %v1_10002010 = phi i32 [ %v1_10002010.pre, %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge ], [ %v1_10002008, %dec_label_pc_10002008 ]
  %v0_10002010 = load i32, i32* %r18.global-to-local, align 4
  %v4_10002010 = icmp eq i32 %v0_10002010, %v1_10002010
  store i1 %v4_10002010, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002010, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_10002018:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_10002018 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002018, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_1000201c:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_1000201c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000201c = add i32 %v0_1000201c, 16
  %v2_1000201c = inttoptr i32 %v1_1000201c to i32*
  %v3_1000201c = load i32, i32* %v2_1000201c, align 4
  store i32 %v3_1000201c, i32* %r0.global-to-local, align 4
  %v1_10002020 = load i32, i32* @r31, align 4
  %v2_10002020 = add i32 %v1_10002020, 16
  %v3_10002020 = inttoptr i32 %v2_10002020 to i32*
  store i32 %v3_1000201c, i32* %v3_10002020, align 4
  %v0_10002024 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002024, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002028:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148, %dec_label_pc_10002154
  %v0_10002028 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002028 = trunc i32 %v0_10002028 to i16
  %v2_10002028 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002028 = add i32 %v2_10002028, 10
  %v4_10002028 = inttoptr i32 %v3_10002028 to i16*
  store i16 %v1_10002028, i16* %v4_10002028, align 2
  %v0_10002030 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002030, i32* @r3, align 4
  %v2_10002034 = call i32 @function_100043cc(i32 %v0_10002030, i32 20)
  %v3_10002034 = trunc i32 %v2_10002034 to i16
  %v4_1000203c = add i32 %v0_10002030, 10
  %v5_1000203c = inttoptr i32 %v4_1000203c to i16*
  store i16 %v3_10002034, i16* %v5_1000203c, align 2
  %v0_10002040 = load i32, i32* @r31, align 4
  store i32 %v0_10002040, i32* @r3, align 4
  %v0_10002044 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002044 = trunc i32 %v0_10002044 to i16
  %v3_10002044 = add i32 %v0_10002040, 10
  %v4_10002044 = inttoptr i32 %v3_10002044 to i16*
  store i16 %v1_10002044, i16* %v4_10002044, align 2
  %v2_10002048 = call i32 @function_100043cc(i32 %v0_10002040, i32 20)
  %v3_10002048 = trunc i32 %v2_10002048 to i16
  %v0_1000204c = load i32, i32* @r30, align 4
  store i32 %v0_1000204c, i32* @r4, align 4
  %v3_10002050 = load i32, i32* @r31, align 4
  %v4_10002050 = add i32 %v3_10002050, 10
  %v5_10002050 = inttoptr i32 %v4_10002050 to i16*
  store i16 %v3_10002048, i16* %v5_10002050, align 2
  %v0_10002054 = load i32, i32* %r22.global-to-local, align 4
  %v0_10002058 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002058 = trunc i32 %v0_10002058 to i16
  %v2_10002058 = load i32, i32* @r30, align 4
  %v3_10002058 = add i32 %v2_10002058, 6
  %v4_10002058 = inttoptr i32 %v3_10002058 to i16*
  store i16 %v1_10002058, i16* %v4_10002058, align 2
  %v0_1000205c = load i32, i32* @r31, align 4
  store i32 %v0_1000205c, i32* %r3.global-to-local, align 4
  %v0_10002060 = load i32, i32* @r30, align 4
  %v1_10002060 = add i32 %v0_10002060, 4
  %v2_10002060 = inttoptr i32 %v1_10002060 to i16*
  %v3_10002060 = load i16, i16* %v2_10002060, align 2
  %v4_10002060 = zext i16 %v3_10002060 to i32
  %v4_10002064 = call i32 @function_10004430(i32 %v0_1000205c, i32 %v0_1000204c, i32 %v4_10002060, i32 %v0_10002054)
  %v5_10002064 = trunc i32 %v4_10002064 to i16
  store i32 %v4_10002064, i32* %r3.global-to-local, align 4
  %v3_10002068 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002068, i32* %r0.global-to-local, align 4
  %v0_1000206c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000206c = add i32 %v0_1000206c, 16
  %v2_1000206c = inttoptr i32 %v1_1000206c to i32*
  %v3_1000206c = load i32, i32* %v2_1000206c, align 4
  store i32 %v3_1000206c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002074 = mul i32 %v3_10002068, 24
  store i32 %v1_10002074, i32* %r0.global-to-local, align 4
  %v3_10002078 = load i32, i32* @r30, align 4
  %v4_10002078 = add i32 %v3_10002078, 6
  %v5_10002078 = inttoptr i32 %v4_10002078 to i16*
  store i16 %v5_10002064, i16* %v5_10002078, align 2
  %v0_1000207c = load i32, i32* %r28.global-to-local, align 4
  %v0_10002080 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  %v0_10002084 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002084 = load i32, i32* %r26.global-to-local, align 4
  %v2_10002084 = add i32 %v1_10002084, %v0_10002084
  %v0_10002088 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002088 = trunc i32 %v0_10002088 to i16
  %v5_10002088 = inttoptr i32 %v2_10002084 to i16*
  store i16 %v3_10002088, i16* %v5_10002088, align 2
  %v0_1000208c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000208c = add i32 %v2_10002084, 4
  %v3_1000208c = inttoptr i32 %v2_1000208c to i32*
  store i32 %v0_1000208c, i32* %v3_1000208c, align 4
  %v0_10002090 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002094 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002094 = trunc i32 %v0_10002094 to i16
  %v3_10002094 = add i32 %v2_10002084, 2
  %v4_10002094 = inttoptr i32 %v3_10002094 to i16*
  store i16 %v1_10002094, i16* %v4_10002094, align 2
  store i32 268443812, i32* @lr, align 4
  %v6_100020a0 = call i32 @function_10009320(i32 %v0_10002080, i32 %v0_1000207c, i32 %v0_10002090, i32 16384, i32 %v2_10002084, i32 16)
  store i32 %v6_100020a0, i32* %r3.global-to-local, align 4
  %v3_100020a4 = load i32, i32* %stack_var_-104, align 4
  %v1_100020a8 = add i32 %v3_100020a4, 1
  store i32 %v1_100020a8, i32* %r9.global-to-local, align 4
  %v1_100020ac = load i32, i32* %r19.global-to-local, align 4
  %v2_100020ac = icmp slt i32 %v1_100020a8, %v1_100020ac
  %v4_100020ac = icmp eq i32 %v1_100020a8, %v1_100020ac
  store i1 %v4_100020ac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100020a8, i32* %stack_var_-104, align 4
  br i1 %v2_100020ac, label %dec_label_pc_10001fc4, label %dec_label_pc_100020b8

dec_label_pc_100020b8:                            ; preds = %dec_label_pc_10002028
  %v0_100020b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100020b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100020b8 = or i1 %v0_100020b8, %v1_100020b8
  br i1 %v2_100020b8, label %dec_label_pc_10001fb0.outer, label %dec_label_pc_10001fb4

dec_label_pc_100020c0:                            ; preds = %dec_label_pc_10001fc4
  %v1_100020c0 = add i32 %v2_10001fd0, 16
  %v2_100020c0 = inttoptr i32 %v1_100020c0 to i32*
  %v3_100020c0 = load i32, i32* %v2_100020c0, align 4
  store i32 %v3_100020c0, i32* %r29.global-to-local, align 4
  %v0_100020c4 = call i32 @function_10005cf4()
  store i32 %v0_100020c4, i32* %r3.global-to-local, align 4
  %v3_100020c8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100020c8, i32* %r9.global-to-local, align 4
  %v0_100020cc = load i32, i32* %r21.global-to-local, align 4
  %v1_100020cc = mul i32 %v0_100020cc, 16
  %v2_100020cc = udiv i32 %v0_100020cc, 268435456
  %v3_100020cc = or i32 %v2_100020cc, %v1_100020cc
  store i32 %v3_100020cc, i32* %r21.global-to-local, align 4
  %v1_100020d0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100020cc)
  %v1_100020d4 = mul nuw i32 %v2_100020cc, 268435456
  %v2_100020d4 = urem i32 %v0_100020cc, 268435456
  %v3_100020d4 = or i32 %v1_100020d4, %v2_100020d4
  store i32 %v3_100020d4, i32* %r21.global-to-local, align 4
  %v0_100020d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100020d8 = mul i32 %v0_100020d8, 24
  %v1_100020dc = load i32, i32* %r26.global-to-local, align 4
  %v2_100020dc = add i32 %v1_100020dc, %v1_100020d8
  store i32 %v2_100020dc, i32* %r9.global-to-local, align 4
  %v1_100020e0 = add i32 %v2_100020dc, 20
  %v2_100020e0 = inttoptr i32 %v1_100020e0 to i8*
  %v3_100020e0 = load i8, i8* %v2_100020e0, align 1
  %v4_100020e0 = zext i8 %v3_100020e0 to i32
  store i32 %v4_100020e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100020e0, 64
  %v2_100020e4 = zext i8 %tmp to i32
  %v3_100020e4 = lshr i32 %v0_100020c4, %v2_100020e4
  store i32 %v3_100020e4, i32* %r3.global-to-local, align 4
  %v0_100020e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100020e8 = add i32 %v3_100020e4, %v0_100020e8
  store i32 %v2_100020e8, i32* %r29.global-to-local, align 4
  %v1_100020ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100020ec = add i32 %v1_100020ec, 16
  %v3_100020ec = inttoptr i32 %v2_100020ec to i32*
  store i32 %v2_100020e8, i32* %v3_100020ec, align 4
  %v0_100020f0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100020f0, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_100020f4:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100020f8 = call i32 @function_10005cf4()
  store i32 %v0_100020f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002100 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002100 = add i32 %v1_10002100, 12
  %v3_10002100 = inttoptr i32 %v2_10002100 to i32*
  store i32 %v0_100020f8, i32* %v3_10002100, align 4
  %v0_10002104 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002104 = load i32, i32* @r29, align 4
  %v4_10002104 = icmp eq i32 %v0_10002104, %v1_10002104
  store i1 %v4_10002104, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002104, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_1000210c:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v0_1000210c = call i32 @function_10005cf4()
  %v0_10002110 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002110 = load i32, i32* @r29, align 4
  %v4_10002110 = icmp eq i32 %v0_10002110, %v1_10002110
  store i1 %v4_10002110, i1* %cr7_eq.global-to-local, align 1
  %v1_10002114 = urem i32 %v0_1000210c, 65536
  store i32 %v1_10002114, i32* %r3.global-to-local, align 4
  %v1_10002118 = add nsw i32 %v1_10002114, -1000
  store i32 %v1_10002118, i32* %r0.global-to-local, align 4
  %v1_1000211c = trunc i32 %v0_1000210c to i16
  %v2_1000211c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000211c = add i32 %v2_1000211c, 4
  %v4_1000211c = inttoptr i32 %v3_1000211c to i16*
  store i16 %v1_1000211c, i16* %v4_1000211c, align 2
  %v0_10002120 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002120 = sub i32 -1, %v0_10002120
  store i32 %v1_10002120, i32* %r0.global-to-local, align 4
  %v1_10002124 = trunc i32 %v1_10002120 to i16
  %v2_10002124 = load i32, i32* @r31, align 4
  %v3_10002124 = add i32 %v2_10002124, 4
  %v4_10002124 = inttoptr i32 %v3_10002124 to i16*
  store i16 %v1_10002124, i16* %v4_10002124, align 2
  br i1 %v4_10002110, label %dec_label_pc_1000212c, label %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge

dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge: ; preds = %dec_label_pc_1000210c
  %v1_10002010.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002010

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_1000210c, %dec_label_pc_10002008
  %v0_1000212c = call i32 @function_10005cf4()
  %v1_1000212c = trunc i32 %v0_1000212c to i16
  store i32 %v0_1000212c, i32* %r3.global-to-local, align 4
  %v0_10002130 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002130 = load i32, i32* @r29, align 4
  %v4_10002130 = icmp eq i32 %v0_10002130, %v1_10002130
  store i1 %v4_10002130, i1* %cr7_eq.global-to-local, align 1
  %v3_10002134 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002134 = add i32 %v3_10002134, 44
  %v5_10002134 = inttoptr i32 %v4_10002134 to i16*
  store i16 %v1_1000212c, i16* %v5_10002134, align 2
  br i1 %v4_10002130, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_1000213c:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_1000213c = call i32 @function_10005cf4()
  %v1_1000213c = trunc i32 %v0_1000213c to i16
  store i32 %v0_1000213c, i32* %r3.global-to-local, align 4
  %v3_10002140 = load i32, i32* @r30, align 4
  %v4_10002140 = add i32 %v3_10002140, 2
  %v5_10002140 = inttoptr i32 %v4_10002140 to i16*
  store i16 %v1_1000213c, i16* %v5_10002140, align 2
  %v0_10002144 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002144, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_10002148:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_10002148 = call i32 @function_10005cf4()
  store i32 %v0_10002148, i32* %r3.global-to-local, align 4
  %v1_1000214c = load i32, i32* @r31, align 4
  %v2_1000214c = add i32 %v1_1000214c, 16
  %v3_1000214c = inttoptr i32 %v2_1000214c to i32*
  store i32 %v0_10002148, i32* %v3_1000214c, align 4
  %v0_10002150 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002150, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002154:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148
  %v0_10002154 = load i32, i32* @r30, align 4
  %v1_10002154 = add i32 %v0_10002154, 8
  store i32 %v1_10002154, i32* @r3, align 4
  %v0_10002158 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002158, i32* @r4, align 4
  %v0_1000215c = call i32 @function_10005ec8()
  store i32 %v0_1000215c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002028

; uselistorder directives
  uselistorder i32 %v0_1000213c, { 1, 0 }
  uselistorder i32 %v0_1000212c, { 1, 0 }
  uselistorder i32 %v1_10002120, { 1, 0 }
  uselistorder i32 %v1_10002114, { 1, 0 }
  uselistorder i32 %v0_1000210c, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v0_100020cc, { 2, 1, 0 }
  uselistorder i1 %v1_100020b8, { 1, 0 }
  uselistorder i1 %v0_100020b8, { 1, 0 }
  uselistorder i32 %v1_100020a8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002084, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002064, { 1, 0 }
  uselistorder i32 %v0_10001fe8, { 2, 1, 0 }
  uselistorder i32 %v4_10001fcc, { 1, 0, 2 }
  uselistorder i32 %v1_10001fc8, { 1, 0 }
  uselistorder i32 %v1_10001f18, { 1, 0 }
  uselistorder i32 %v1_10001e60, { 1, 0 }
  uselistorder i32 %v1_10001e54, { 1, 0 }
  uselistorder i32 %v1_10001df0, { 1, 0 }
  uselistorder i32 %v0_10001df0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001de0, { 1, 2, 0 }
  uselistorder i32 %v0_10001dd4, { 1, 0 }
  uselistorder i32 %v5_10001d80, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 1, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10002154, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10001f94, { 1, 0 }
  uselistorder label %dec_label_pc_10001f30, { 1, 0 }
  uselistorder label %dec_label_pc_10001f04, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
}

define i32 @function_10002164(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002164:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10002168 = load i32, i32* @lr, align 4
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v0_1000216c = call i32 @__asm_mfcr()
  store i32 %v0_1000216c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_1000216c, i32* %r23.global-to-local, align 4
  %v0_100021a4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100021ac = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100021b4 = load i32, i32* @r30, align 4
  store i32 268444116, i32* @lr, align 4
  %v2_100021d0 = call i32 @function_100096f8(i32 4, i32 4)
  store i32 %v2_100021d0, i32* %r24.global-to-local, align 4
  %v0_100021d8 = load i32, i32* @r28, align 4
  %v0_100021dc = load i32, i32* @r29, align 4
  store i32 %v0_100021dc, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268444140, i32* @lr, align 4
  %v4_100021e8 = inttoptr i32 %v0_100021d8 to i32*
  %v5_100021e8 = call i32 @function_100006a8(i32 %v0_100021dc, i32* %v4_100021e8, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_100021f8 = load i32, i32* @r28, align 4
  %v1_100021fc = urem i32 %v5_100021e8, 256
  store i32 %v1_100021fc, i32* %r19.global-to-local, align 4
  %v0_10002200 = load i32, i32* @r29, align 4
  store i32 %v0_10002200, i32* %r3.global-to-local, align 4
  store i32 268444168, i32* @lr, align 4
  %v4_10002204 = inttoptr i32 %v0_100021f8 to i32*
  %v5_10002204 = call i32 @function_100006a8(i32 %v0_10002200, i32* %v4_10002204, i32 3, i32 65535)
  %v0_10002208 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10002204, i32* %r21.global-to-local, align 4
  %v0_10002218 = load i32, i32* @r29, align 4
  store i32 %v0_10002218, i32* %r3.global-to-local, align 4
  store i32 268444192, i32* @lr, align 4
  %v4_1000221c = inttoptr i32 %v0_10002208 to i32*
  %v5_1000221c = call i32 @function_100006a8(i32 %v0_10002218, i32* %v4_1000221c, i32 4, i32 64)
  %v0_10002220 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_1000222c = urem i32 %v5_1000221c, 256
  store i32 %v1_1000222c, i32* %r26.global-to-local, align 4
  %v0_10002230 = load i32, i32* @r29, align 4
  store i32 %v0_10002230, i32* %r3.global-to-local, align 4
  store i32 268444216, i32* @lr, align 4
  %v4_10002234 = inttoptr i32 %v0_10002220 to i32*
  %v5_10002234 = call i32 @function_100006a8(i32 %v0_10002230, i32* %v4_10002234, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10002244 = load i32, i32* @r28, align 4
  %v1_10002248 = urem i32 %v5_10002234, 256
  store i32 %v1_10002248, i32* @r31, align 4
  %v0_1000224c = load i32, i32* @r29, align 4
  store i32 %v0_1000224c, i32* %r3.global-to-local, align 4
  store i32 268444244, i32* @lr, align 4
  %v4_10002250 = inttoptr i32 %v0_10002244 to i32*
  %v5_10002250 = call i32 @function_100006a8(i32 %v0_1000224c, i32* %v4_10002250, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_1000225c = load i32, i32* @r28, align 4
  store i32 %v5_10002250, i32* %r22.global-to-local, align 4
  %v0_10002264 = load i32, i32* @r29, align 4
  store i32 %v0_10002264, i32* %r3.global-to-local, align 4
  store i32 268444268, i32* @lr, align 4
  %v4_10002268 = inttoptr i32 %v0_1000225c to i32*
  %v5_10002268 = call i32 @function_100006a8(i32 %v0_10002264, i32* %v4_10002268, i32 7, i32 27015)
  store i32 %v5_10002268, i32* %r29.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 268444280, i32* @lr, align 4
  %v1_10002274 = call i32 @function_10007aac(i32 20)
  store i32 20, i32* %r3.global-to-local, align 4
  %v3_10002280 = call i32 @function_100079f8(i32 20, i32* nonnull %stack_var_-84)
  store i32 %v3_10002280, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444312, i32* @lr, align 4
  %v3_10002294 = call i32 @function_1000939c(i32 2, i32 3, i32 17)
  store i32 %v3_10002294, i32* %r3.global-to-local, align 4
  %v3_10002298 = icmp eq i32 %v3_10002294, -1
  store i32 %v3_10002294, i32* %r25.global-to-local, align 4
  br i1 %v3_10002298, label %dec_label_pc_100024e8, label %dec_label_pc_100022a4

dec_label_pc_100022a4:                            ; preds = %dec_label_pc_10002164
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_100022b0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_100022b0, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268444352, i32* @lr, align 4
  %v4_100022bc = call i32 @function_10009360(i32 0, i32 3, i32 %v2_100022b0, i32 4)
  store i32 %v4_100022bc, i32* %r3.global-to-local, align 4
  %v3_100022c0 = icmp eq i32 %v4_100022bc, -1
  br i1 %v3_100022c0, label %dec_label_pc_100024e0, label %dec_label_pc_100022c8

dec_label_pc_100022c8:                            ; preds = %dec_label_pc_100022a4
  %v0_100022c8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100022c8 = icmp slt i32 %v0_100022c8, 0
  %v3_100022c8 = icmp eq i32 %v0_100022c8, 0
  store i1 %v1_100022c8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100022c8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100022d0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100022d0 = urem i32 %v0_100022d0, 65536
  store i32 %v1_100022d0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_100022d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100022d8 = urem i32 %v0_100022d8, 65536
  store i32 %v1_100022d8, i32* %r21.global-to-local, align 4
  %v0_100022dc = load i32, i32* %r29.global-to-local, align 4
  %v1_100022dc = urem i32 %v0_100022dc, 65536
  store i32 %v1_100022dc, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100022c8, 1
  br i1 %tmp32, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100022e4

dec_label_pc_100022e4:                            ; preds = %dec_label_pc_100022c8
  %v0_100022e4 = load i32, i32* @r31, align 4
  %v3_100022e4 = icmp eq i32 %v0_100022e4, 0
  store i1 %v3_100022e4, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10002304

dec_label_pc_10002304:                            ; preds = %dec_label_pc_10002360, %dec_label_pc_100022e4
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268444432, i32* @lr, align 4
  %v2_1000230c = call i32 @function_100096f8(i32 128, i32 1)
  store i32 %v2_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002310, i32* %r0.global-to-local, align 4
  %v0_10002314 = load i32, i32* @r31, align 4
  %v1_10002314 = mul i32 %v0_10002314, 4
  store i32 %v1_10002314, i32* %r9.global-to-local, align 4
  %v0_10002318 = load i32, i32* @r30, align 4
  %v2_1000231c = load i32, i32* %r24.global-to-local, align 4
  %v3_1000231c = add i32 %v2_1000231c, %v1_10002314
  %v4_1000231c = inttoptr i32 %v3_1000231c to i32*
  store i32 %v2_1000230c, i32* %v4_1000231c, align 4
  %v0_10002320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002320 = mul i32 %v0_10002320, 4
  store i32 %v1_10002320, i32* %r0.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002324 = add i32 %v0_10002324, %v1_10002320
  %v3_10002324 = inttoptr i32 %v2_10002324 to i32*
  %v4_10002324 = load i32, i32* %v3_10002324, align 4
  store i32 %v4_10002324, i32* %r10.global-to-local, align 4
  %v1_10002328 = inttoptr i32 %v4_10002324 to i32*
  %v2_10002328 = load i32, i32* %v1_10002328, align 4
  store i32 %v2_10002328, i32* %r0.global-to-local, align 4
  %v1_1000232c = add i32 %v4_10002324, 32
  store i32 %v1_1000232c, i32* %r3.global-to-local, align 4
  %v0_10002330 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  %v3_10002330 = add i32 %v4_10002324, 4
  %v4_10002330 = inttoptr i32 %v3_10002330 to i16*
  store i16 %v1_10002330, i16* %v4_10002330, align 2
  %v0_10002334 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002334 = add i32 %v0_10002334, 20
  store i32 %v1_10002334, i32* %r8.global-to-local, align 4
  %v1_10002338 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002338, i32* %r0.global-to-local, align 4
  %v1_1000233c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000233c, i32* %r0.global-to-local, align 4
  %v1_10002340 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002340 = inttoptr i32 %v1_10002340 to i32*
  store i32 %v1_1000233c, i32* %v2_10002340, align 4
  %v0_10002344 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002344 = trunc i32 %v0_10002344 to i8
  %v2_10002344 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002344 = add i32 %v2_10002344, 1
  %v4_10002344 = inttoptr i32 %v3_10002344 to i8*
  store i8 %v1_10002344, i8* %v4_10002344, align 1
  %v3_10002348 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002348, i32* %r9.global-to-local, align 4
  %v0_1000234c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000234c = trunc i32 %v0_1000234c to i8
  %v2_1000234c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000234c = add i32 %v2_1000234c, 8
  %v4_1000234c = inttoptr i32 %v3_1000234c to i8*
  store i8 %v1_1000234c, i8* %v4_1000234c, align 1
  %v0_10002350 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002350 = add i32 %v0_10002350, 32
  store i32 %v1_10002350, i32* %r9.global-to-local, align 4
  %v1_10002354 = trunc i32 %v1_10002350 to i16
  %v2_10002354 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002354 = add i32 %v2_10002354, 2
  %v4_10002354 = inttoptr i32 %v3_10002354 to i16*
  store i16 %v1_10002354, i16* %v4_10002354, align 2
  %v0_10002358 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002358, label %dec_label_pc_10002360, label %dec_label_pc_1000235c

dec_label_pc_1000235c:                            ; preds = %dec_label_pc_10002304
  %v0_1000235c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000235c = trunc i32 %v0_1000235c to i16
  %v2_1000235c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000235c = add i32 %v2_1000235c, 6
  %v4_1000235c = inttoptr i32 %v3_1000235c to i16*
  store i16 %v1_1000235c, i16* %v4_1000235c, align 2
  br label %dec_label_pc_10002360

dec_label_pc_10002360:                            ; preds = %dec_label_pc_10002304, %dec_label_pc_1000235c
  %v0_10002360 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002360 = trunc i32 %v0_10002360 to i8
  %v2_10002360 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002360 = add i32 %v2_10002360, 9
  %v4_10002360 = inttoptr i32 %v3_10002360 to i8*
  store i8 %v1_10002360, i8* %v4_10002360, align 1
  %v0_10002364 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002364 = trunc i32 %v0_10002364 to i16
  %v2_10002364 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002364 = add i32 %v2_10002364, 20
  %v4_10002364 = inttoptr i32 %v3_10002364 to i16*
  store i16 %v1_10002364, i16* %v4_10002364, align 2
  %v3_10002368 = load i32, i32* %stack_var_-88, align 4
  %v3_1000236c = load i32, i32* @global_var_1001b718.16, align 4
  store i32 %v3_1000236c, i32* %r0.global-to-local, align 4
  %v1_10002370 = mul i32 %v3_10002368, 24
  store i32 %v1_10002370, i32* %r9.global-to-local, align 4
  %v0_10002374 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002374 = trunc i32 %v0_10002374 to i16
  %v2_10002374 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002374 = add i32 %v2_10002374, 2
  %v4_10002374 = inttoptr i32 %v3_10002374 to i16*
  store i16 %v1_10002374, i16* %v4_10002374, align 2
  %v0_10002378 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002378 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002378 = add i32 %v1_10002378, 12
  %v3_10002378 = inttoptr i32 %v2_10002378 to i32*
  store i32 %v0_10002378, i32* %v3_10002378, align 4
  %v0_1000237c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000237c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000237c = add i32 %v1_1000237c, %v0_1000237c
  store i32 %v2_1000237c, i32* %r9.global-to-local, align 4
  %v1_10002380 = add i32 %v2_1000237c, 16
  %v2_10002380 = inttoptr i32 %v1_10002380 to i32*
  %v3_10002380 = load i32, i32* %v2_10002380, align 4
  store i32 %v3_10002380, i32* %r0.global-to-local, align 4
  %v3_10002384 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002384, i32* %r11.global-to-local, align 4
  %v0_10002388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002388 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002388 = add i32 %v1_10002388, 28
  %v3_10002388 = inttoptr i32 %v2_10002388 to i32*
  store i32 %v0_10002388, i32* %v3_10002388, align 4
  %v0_1000238c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000238c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000238c = add i32 %v1_1000238c, 16
  %v3_1000238c = inttoptr i32 %v2_1000238c to i32*
  store i32 %v0_1000238c, i32* %v3_1000238c, align 4
  %v0_10002390 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002390 = add i32 %v0_10002390, 12
  store i32 %v1_10002390, i32* %r11.global-to-local, align 4
  %v1_10002394 = trunc i32 %v1_10002390 to i16
  %v2_10002394 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002394 = add i32 %v2_10002394, 4
  %v4_10002394 = inttoptr i32 %v3_10002394 to i16*
  store i16 %v1_10002394, i16* %v4_10002394, align 2
  %v3_10002398 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002398, i32* %r5.global-to-local, align 4
  store i32 268444576, i32* @lr, align 4
  %v3_1000239c = call i32 @function_10007f44(i32 %v3_10002398, i32 %v0_10002318, i32 %v3_10002398)
  store i32 %v3_1000239c, i32* %r3.global-to-local, align 4
  %v3_100023a0 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_100023a0, i32* %r9.global-to-local, align 4
  %v1_100023a4 = add i32 %v3_100023a0, 1
  %v1_100023a8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023a8 = icmp slt i32 %v1_100023a4, %v1_100023a8
  store i32 %v1_100023a4, i32* %stack_var_-88, align 4
  br i1 %v2_100023a8, label %dec_label_pc_10002304, label %dec_label_pc_100023b4.preheader.loopexit

dec_label_pc_100023b4.preheader.loopexit:         ; preds = %dec_label_pc_10002360
  %v0_100023b4.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100023b4.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100023b4.outer

dec_label_pc_100023b4.outer:                      ; preds = %dec_label_pc_10002480, %dec_label_pc_100022c8, %dec_label_pc_100023b4.preheader.loopexit
  %v1_100023b4.ph34 = phi i1 [ %v1_100022c8, %dec_label_pc_100022c8 ], [ %v1_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v1_10002480, %dec_label_pc_10002480 ]
  %v0_100023b4.ph35 = phi i1 [ %v3_100022c8, %dec_label_pc_100022c8 ], [ %v0_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v0_10002480, %dec_label_pc_10002480 ]
  %v2_100023b4 = or i1 %v1_100023b4.ph34, %v0_100023b4.ph35
  br label %dec_label_pc_100023b4

dec_label_pc_100023b4:                            ; preds = %dec_label_pc_100023b4.outer, %dec_label_pc_100023b4
  br i1 %v2_100023b4, label %dec_label_pc_100023b4, label %dec_label_pc_100023b8

dec_label_pc_100023b8:                            ; preds = %dec_label_pc_100023b4, %dec_label_pc_10002480
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100023c8

dec_label_pc_100023c8:                            ; preds = %dec_label_pc_10002408, %dec_label_pc_100023b8
  %v0_100023d8 = phi i32 [ %v1_10002470, %dec_label_pc_10002408 ], [ 0, %dec_label_pc_100023b8 ]
  %v1_100023c8 = mul i32 %v0_100023d8, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, %v1_100023c8
  store i32 %v2_100023d4, i32* %r10.global-to-local, align 4
  %v1_100023d8 = mul i32 %v0_100023d8, 4
  store i32 %v1_100023d8, i32* %r0.global-to-local, align 4
  %v1_100023dc = add i32 %v2_100023d4, 20
  %v2_100023dc = inttoptr i32 %v1_100023dc to i8*
  %v3_100023dc = load i8, i8* %v2_100023dc, align 1
  %v4_100023dc = zext i8 %v3_100023dc to i32
  store i32 %v4_100023dc, i32* %r9.global-to-local, align 4
  %v0_100023e0 = load i32, i32* %r24.global-to-local, align 4
  %v2_100023e0 = add i32 %v0_100023e0, %v1_100023d8
  %v3_100023e0 = inttoptr i32 %v2_100023e0 to i32*
  %v4_100023e0 = load i32, i32* %v3_100023e0, align 4
  store i32 %v4_100023e0, i32* %r28.global-to-local, align 4
  %v1_100023e8 = add i32 %v4_100023e0, 20
  store i32 %v1_100023e8, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_100023dc, 32
  br i1 %tmp33, label %dec_label_pc_10002488, label %dec_label_pc_100023f0

dec_label_pc_100023f0:                            ; preds = %dec_label_pc_100023c8
  %v0_100023f0 = load i32, i32* %r20.global-to-local, align 4
  %v4_100023f0 = icmp eq i32 %v0_100023f0, 65535
  br i1 %v4_100023f0, label %dec_label_pc_100024b4, label %dec_label_pc_100023f8

dec_label_pc_100023f8:                            ; preds = %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge, %dec_label_pc_100023f0
  %v1_100023f8 = phi i32 [ %v1_100023f8.pre, %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge ], [ 65535, %dec_label_pc_100023f0 ]
  %v0_100023f8 = load i32, i32* %r21.global-to-local, align 4
  %v4_100023f8 = icmp eq i32 %v0_100023f8, %v1_100023f8
  br i1 %v4_100023f8, label %dec_label_pc_100024c4, label %dec_label_pc_10002400

dec_label_pc_10002400:                            ; preds = %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge, %dec_label_pc_100023f8
  %v1_10002400 = phi i32 [ %v1_10002400.pre, %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge ], [ %v1_100023f8, %dec_label_pc_100023f8 ]
  %v0_10002400 = load i32, i32* %r22.global-to-local, align 4
  %v4_10002400 = icmp eq i32 %v0_10002400, %v1_10002400
  br i1 %v4_10002400, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_10002408:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400, %dec_label_pc_100024d4
  %v0_10002408 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002408 = trunc i32 %v0_10002408 to i16
  %v2_10002408 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002408 = add i32 %v2_10002408, 10
  %v4_10002408 = inttoptr i32 %v3_10002408 to i16*
  store i16 %v1_10002408, i16* %v4_10002408, align 2
  %v0_10002410 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002410, i32* @r3, align 4
  %v2_10002414 = call i32 @function_100043cc(i32 %v0_10002410, i32 20)
  %v3_10002414 = trunc i32 %v2_10002414 to i16
  store i32 %v2_10002414, i32* %r3.global-to-local, align 4
  %v3_10002418 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002418, i32* %r6.global-to-local, align 4
  %v3_1000241c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000241c = add i32 %v3_1000241c, 10
  %v5_1000241c = inttoptr i32 %v4_1000241c to i16*
  store i16 %v3_10002414, i16* %v5_1000241c, align 2
  %v0_10002420 = load i32, i32* @r31, align 4
  store i32 %v0_10002420, i32* @r4, align 4
  %v0_10002424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002424 = trunc i32 %v0_10002424 to i16
  %v3_10002424 = add i32 %v0_10002420, 6
  %v4_10002424 = inttoptr i32 %v3_10002424 to i16*
  store i16 %v1_10002424, i16* %v4_10002424, align 2
  %v0_10002428 = load i32, i32* %r6.global-to-local, align 4
  %v1_10002428 = add i32 %v0_10002428, 12
  store i32 %v1_10002428, i32* %r6.global-to-local, align 4
  %v0_1000242c = load i32, i32* @r31, align 4
  %v1_1000242c = add i32 %v0_1000242c, 4
  %v2_1000242c = inttoptr i32 %v1_1000242c to i16*
  %v3_1000242c = load i16, i16* %v2_1000242c, align 2
  %v4_1000242c = zext i16 %v3_1000242c to i32
  store i32 %v4_1000242c, i32* %r5.global-to-local, align 4
  %v0_10002430 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002430, i32* %r3.global-to-local, align 4
  %v4_10002434 = call i32 @function_10004430(i32 %v0_10002430, i32 %v0_10002420, i32 %v4_1000242c, i32 %v1_10002428)
  %v5_10002434 = trunc i32 %v4_10002434 to i16
  store i32 %v4_10002434, i32* %r3.global-to-local, align 4
  %v3_10002438 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002438, i32* %r7.global-to-local, align 4
  %v0_1000243c = load i32, i32* @r31, align 4
  %v1_1000243c = add i32 %v0_1000243c, 2
  %v2_1000243c = inttoptr i32 %v1_1000243c to i16*
  %v3_1000243c = load i16, i16* %v2_1000243c, align 2
  %v4_1000243c = zext i16 %v3_1000243c to i32
  store i32 %v4_1000243c, i32* %r0.global-to-local, align 4
  %v0_10002440 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002444 = mul i32 %v3_10002438, 24
  store i32 %v1_10002444, i32* %r7.global-to-local, align 4
  %v3_10002448 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002448, i32* %r5.global-to-local, align 4
  %v4_1000244c = add i32 %v0_1000243c, 6
  %v5_1000244c = inttoptr i32 %v4_1000244c to i16*
  store i16 %v5_10002434, i16* %v5_1000244c, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10002454 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002454 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002454 = add i32 %v1_10002454, %v0_10002454
  store i32 %v2_10002454, i32* %r7.global-to-local, align 4
  %v0_10002458 = load i32, i32* %r5.global-to-local, align 4
  %v1_10002458 = add i32 %v0_10002458, 32
  store i32 %v1_10002458, i32* %r5.global-to-local, align 4
  %v0_1000245c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000245c = trunc i32 %v0_1000245c to i16
  %v3_1000245c = add i32 %v2_10002454, 2
  %v4_1000245c = inttoptr i32 %v3_1000245c to i16*
  store i16 %v1_1000245c, i16* %v4_1000245c, align 2
  %v0_10002460 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002460, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268444780, i32* @lr, align 4
  %v6_10002468 = call i32 @function_10009320(i32 %v0_10002460, i32 %v0_10002440, i32 %v1_10002458, i32 16384, i32 %v2_10002454, i32 16)
  store i32 %v6_10002468, i32* %r3.global-to-local, align 4
  %v3_1000246c = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_1000246c, i32* %r9.global-to-local, align 4
  %v1_10002470 = add i32 %v3_1000246c, 1
  store i32 %v1_10002470, i32* %r11.global-to-local, align 4
  %v1_10002474 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002474 = icmp slt i32 %v1_10002470, %v1_10002474
  store i32 %v1_10002470, i32* %stack_var_-88, align 4
  br i1 %v2_10002474, label %dec_label_pc_100023c8, label %dec_label_pc_10002480

dec_label_pc_10002480:                            ; preds = %dec_label_pc_10002408
  %v0_10002480 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002480 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002480 = or i1 %v0_10002480, %v1_10002480
  br i1 %v2_10002480, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100023b8

dec_label_pc_10002488:                            ; preds = %dec_label_pc_100023c8
  %v1_10002488 = add i32 %v2_100023d4, 16
  %v2_10002488 = inttoptr i32 %v1_10002488 to i32*
  %v3_10002488 = load i32, i32* %v2_10002488, align 4
  store i32 %v3_10002488, i32* %r29.global-to-local, align 4
  %v0_1000248c = call i32 @function_10005cf4()
  store i32 %v0_1000248c, i32* %r3.global-to-local, align 4
  %v3_10002490 = load i32, i32* %stack_var_-88, align 4
  %v0_10002494 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002494 = load i32, i32* %r30.global-to-local, align 4
  %v4_10002494 = icmp eq i32 %v0_10002494, %v1_10002494
  %v1_10002498 = mul i32 %v3_10002490, 24
  %v1_1000249c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000249c = add i32 %v1_1000249c, %v1_10002498
  store i32 %v2_1000249c, i32* %r9.global-to-local, align 4
  %v1_100024a0 = add i32 %v2_1000249c, 20
  %v2_100024a0 = inttoptr i32 %v1_100024a0 to i8*
  %v3_100024a0 = load i8, i8* %v2_100024a0, align 1
  %v4_100024a0 = zext i8 %v3_100024a0 to i32
  store i32 %v4_100024a0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100024a0, 64
  %v2_100024a4 = zext i8 %tmp to i32
  %v3_100024a4 = lshr i32 %v0_1000248c, %v2_100024a4
  store i32 %v3_100024a4, i32* %r3.global-to-local, align 4
  %v0_100024a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100024a8 = add i32 %v3_100024a4, %v0_100024a8
  store i32 %v2_100024a8, i32* %r29.global-to-local, align 4
  %v1_100024ac = load i32, i32* %r28.global-to-local, align 4
  %v2_100024ac = add i32 %v1_100024ac, 16
  %v3_100024ac = inttoptr i32 %v2_100024ac to i32*
  store i32 %v2_100024a8, i32* %v3_100024ac, align 4
  br i1 %v4_10002494, label %dec_label_pc_100024b4, label %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge

dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge: ; preds = %dec_label_pc_10002488
  %v1_100023f8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100023f8

dec_label_pc_100024b4:                            ; preds = %dec_label_pc_10002488, %dec_label_pc_100023f0
  %v0_100024b4 = call i32 @function_10005cf4()
  %v1_100024b4 = trunc i32 %v0_100024b4 to i16
  store i32 %v0_100024b4, i32* %r3.global-to-local, align 4
  %v0_100024b8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100024b8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024b8 = icmp eq i32 %v0_100024b8, %v1_100024b8
  %v3_100024bc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024bc = add i32 %v3_100024bc, 4
  %v5_100024bc = inttoptr i32 %v4_100024bc to i16*
  store i16 %v1_100024b4, i16* %v5_100024bc, align 2
  br i1 %v4_100024b8, label %dec_label_pc_100024c4, label %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge

dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge: ; preds = %dec_label_pc_100024b4
  %v1_10002400.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002400

dec_label_pc_100024c4:                            ; preds = %dec_label_pc_100024b4, %dec_label_pc_100023f8
  %v0_100024c4 = call i32 @function_10005cf4()
  %v1_100024c4 = trunc i32 %v0_100024c4 to i16
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  %v0_100024c8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100024c8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024c8 = icmp eq i32 %v0_100024c8, %v1_100024c8
  %v3_100024cc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024cc = add i32 %v3_100024cc, 20
  %v5_100024cc = inttoptr i32 %v4_100024cc to i16*
  store i16 %v1_100024c4, i16* %v5_100024cc, align 2
  br i1 %v4_100024c8, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_100024d4:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400
  %v0_100024d4 = call i32 @function_10005cf4()
  %v1_100024d4 = trunc i32 %v0_100024d4 to i16
  store i32 %v0_100024d4, i32* %r3.global-to-local, align 4
  %v3_100024d8 = load i32, i32* @r31, align 4
  %v4_100024d8 = add i32 %v3_100024d8, 2
  %v5_100024d8 = inttoptr i32 %v4_100024d8 to i16*
  store i16 %v1_100024d4, i16* %v5_100024d8, align 2
  br label %dec_label_pc_10002408

dec_label_pc_100024e0:                            ; preds = %dec_label_pc_100022a4
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100024e0, i32* %r3.global-to-local, align 4
  store i32 268444904, i32* @lr, align 4
  %v0_100024e4 = call i32 @function_10008680()
  store i32 %v0_100024e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_10002164, %dec_label_pc_100024e0
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v1_100024fc = call %0 @__asm_mtcrf(i32 24, i32 %v0_1000216c)
  store i32 %v0_100021a4, i32* %r28.global-to-local, align 4
  store i32 %v0_100021ac, i32* %r29.global-to-local, align 4
  store i32 %v0_100021b4, i32* %r30.global-to-local, align 4
  %v0_10002540 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002540

; uselistorder directives
  uselistorder i32 %v0_100024d4, { 1, 0 }
  uselistorder i32 %v0_100024c4, { 1, 0 }
  uselistorder i32 %v0_100024b4, { 1, 0 }
  uselistorder i1 %v1_10002480, { 1, 0 }
  uselistorder i1 %v0_10002480, { 1, 0 }
  uselistorder i32 %v1_10002470, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002434, { 1, 0 }
  uselistorder i32 %v2_10002414, { 1, 0 }
  uselistorder i32 %v1_100023d8, { 1, 0 }
  uselistorder i32 %v1_10002320, { 1, 0 }
  uselistorder i32 %v1_10002314, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 3, 2, 4, 1, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_10002408, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100023b8, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10002360, { 1, 0 }
}

define i32 @function_10002544(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002544:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10002548 = load i32, i32* @lr, align 4
  store i32 %v0_10002548, i32* %r0.global-to-local, align 4
  %v0_1000254c = call i32 @__asm_mfcr()
  store i32 %v0_1000254c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_1000255c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000254c, i32* %r15.global-to-local, align 4
  %v0_1000257c = load i32, i32* @r24, align 4
  %v0_10002580 = load i32, i32* @r25, align 4
  %v0_10002584 = load i32, i32* @r26, align 4
  %v0_10002588 = load i32, i32* @r27, align 4
  %v0_1000258c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_1000259c = load i32, i32* @r31, align 4
  %v0_100025b0 = load i32, i32* @r30, align 4
  store i32 268445112, i32* @lr, align 4
  %v2_100025b4 = call i32 @function_100096f8(i32 4, i32 4)
  store i32 %v2_100025b4, i32* %r16.global-to-local, align 4
  %v0_100025bc = load i32, i32* @r28, align 4
  %v0_100025c8 = load i32, i32* @r29, align 4
  store i32 %v0_100025c8, i32* %r3.global-to-local, align 4
  store i32 268445136, i32* @lr, align 4
  %v4_100025cc = inttoptr i32 %v0_100025bc to i32*
  %v5_100025cc = call i32 @function_100006a8(i32 %v0_100025c8, i32* %v4_100025cc, i32 2, i32 0)
  %v5_100025dc = trunc i32 %v5_100025cc to i8
  %v0_100025e4 = load i32, i32* @r28, align 4
  %v0_100025e8 = load i32, i32* @r29, align 4
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 268445168, i32* @lr, align 4
  %v4_100025ec = inttoptr i32 %v0_100025e4 to i32*
  %v5_100025ec = call i32 @function_100006a8(i32 %v0_100025e8, i32* %v4_100025ec, i32 3, i32 65535)
  %v0_100025f0 = load i32, i32* @r28, align 4
  store i32 %v5_100025ec, i32* %r19.global-to-local, align 4
  %v0_10002600 = load i32, i32* @r29, align 4
  store i32 %v0_10002600, i32* %r3.global-to-local, align 4
  store i32 268445192, i32* @lr, align 4
  %v4_10002604 = inttoptr i32 %v0_100025f0 to i32*
  %v5_10002604 = call i32 @function_100006a8(i32 %v0_10002600, i32* %v4_10002604, i32 4, i32 64)
  %v0_10002608 = load i32, i32* @r28, align 4
  %v5_10002614 = trunc i32 %v5_10002604 to i8
  %v0_1000261c = load i32, i32* @r29, align 4
  store i32 %v0_1000261c, i32* %r3.global-to-local, align 4
  store i32 268445220, i32* @lr, align 4
  %v4_10002620 = inttoptr i32 %v0_10002608 to i32*
  %v5_10002620 = call i32 @function_100006a8(i32 %v0_1000261c, i32* %v4_10002620, i32 5, i32 0)
  %v0_10002630 = load i32, i32* @r28, align 4
  %v1_10002634 = urem i32 %v5_10002620, 256
  store i32 %v1_10002634, i32* %r27.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r29, align 4
  store i32 %v0_10002638, i32* %r3.global-to-local, align 4
  store i32 268445248, i32* @lr, align 4
  %v4_1000263c = inttoptr i32 %v0_10002630 to i32*
  %v5_1000263c = call i32 @function_100006a8(i32 %v0_10002638, i32* %v4_1000263c, i32 6, i32 65535)
  %v0_10002640 = load i32, i32* @r28, align 4
  store i32 %v5_1000263c, i32* %r20.global-to-local, align 4
  %v0_10002650 = load i32, i32* @r29, align 4
  store i32 %v0_10002650, i32* %r3.global-to-local, align 4
  store i32 268445272, i32* @lr, align 4
  %v4_10002654 = inttoptr i32 %v0_10002640 to i32*
  %v5_10002654 = call i32 @function_100006a8(i32 %v0_10002650, i32* %v4_10002654, i32 7, i32 53)
  %v0_1000265c = load i32, i32* @r28, align 4
  store i32 %v5_10002654, i32* %r23.global-to-local, align 4
  %v0_1000266c = load i32, i32* @r29, align 4
  store i32 %v0_1000266c, i32* %r3.global-to-local, align 4
  store i32 268445300, i32* @lr, align 4
  %v4_10002670 = inttoptr i32 %v0_1000265c to i32*
  %v5_10002670 = call i32 @function_100006a8(i32 %v0_1000266c, i32* %v4_10002670, i32 9, i32 65535)
  %v0_10002674 = load i32, i32* @r28, align 4
  store i32 %v5_10002670, i32* %r24.global-to-local, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002674 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 0, i32 12)
  %v0_10002694 = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r26.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_10002694 to i32*
  %v5_100026a0 = call i32 @function_10000238(i32 %v0_1000269c, i32* %v4_100026a0, i32 8, i32 0)
  store i32 %v5_100026a0, i32* %r25.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445360, i32* @lr, align 4
  %v1_100026ac = call i32 @function_10007aac(i32 21)
  store i32 21, i32* %r3.global-to-local, align 4
  %v3_100026b8 = call i32 @function_100079f8(i32 21, i32* null)
  store i32 %v3_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445384, i32* @lr, align 4
  %v2_100026c4 = call i32 @function_100087e8(i32 %v3_100026b8, i32 0)
  store i32 %v2_100026c4, i32* @r31, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445396, i32* @lr, align 4
  %v1_100026d0 = call i32 @function_10007a20(i32 21)
  store i32 %v1_100026d0, i32* %r3.global-to-local, align 4
  %v0_100026d4 = load i32, i32* @r31, align 4
  %v1_100026d4 = icmp slt i32 %v0_100026d4, 0
  %v3_100026d4 = icmp eq i32 %v0_100026d4, 0
  store i1 %v3_100026d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100026d4, label %dec_label_pc_100027a4, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_10002544
  %v2_100026dc = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_100026dc, i32* %r28.global-to-local, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445424, i32* @lr, align 4
  %v3_100026ec = call i32 @function_100088b8(i32 %v0_100026d4, i32 %v2_100026dc, i32 2048)
  store i32 %v3_100026ec, i32* %r30.global-to-local, align 4
  %v0_100026f4 = load i32, i32* @r31, align 4
  store i32 %v0_100026f4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100026fc.20 to i32), i32* @lr, align 4
  %v0_100026f8 = call i32 @function_10008680()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445444, i32* @lr, align 4
  %v1_10002700 = call i32 @function_10007aac(i32 22)
  store i32 22, i32* %r3.global-to-local, align 4
  %v3_1000270c = call i32 @function_100079f8(i32 22, i32* null)
  %v0_10002710 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_100026dc, i32* %r3.global-to-local, align 4
  %v3_1000271c = bitcast i32* %stack_var_-2148 to i8*
  %v4_1000271c = call i32 @function_10008270(i8* %v3_1000271c, i32 %v0_10002710, i32 %v3_1000270c)
  store i32 %v4_1000271c, i32* @r31, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445484, i32* @lr, align 4
  %v1_10002728 = call i32 @function_10007a20(i32 22)
  store i32 %v1_10002728, i32* %r3.global-to-local, align 4
  %v0_1000272c = load i32, i32* @r31, align 4
  %v3_1000272c = icmp eq i32 %v0_1000272c, -1
  store i1 %v3_1000272c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000272c, label %dec_label_pc_100027a4, label %dec_label_pc_10002734

dec_label_pc_10002734:                            ; preds = %dec_label_pc_100026dc
  %v0_10002734 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002734 = icmp sgt i32 %v0_10002734, %v0_1000272c
  %v4_10002734 = icmp eq i32 %v0_10002734, %v0_1000272c
  store i1 %v4_10002734, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002734, label %dec_label_pc_1000273c, label %dec_label_pc_100027a4

dec_label_pc_1000273c:                            ; preds = %dec_label_pc_10002734
  %v2_1000273c = sub i32 %v0_10002734, %v0_1000272c
  store i32 %v2_1000273c, i32* %r0.global-to-local, align 4
  %v1_10002740 = add i32 %v0_10002734, -1
  store i32 %v1_10002740, i32* %r3.global-to-local, align 4
  store i32 %v2_1000273c, i32* %ctr.global-to-local, align 4
  %v0_1000274c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000274c = add i32 %v0_1000274c, %v0_1000272c
  store i32 %v2_1000274c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10002754 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10002754, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002758

dec_label_pc_10002758:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_1000273c
  %v0_100027a0 = phi i32 [ %v1_100027a0, %dec_label_pc_1000279c ], [ %v2_1000273c, %dec_label_pc_1000273c ]
  %v0_1000279c = phi i32 [ %v1_1000279c, %dec_label_pc_1000279c ], [ %v0_1000272c, %dec_label_pc_1000273c ]
  %v0_10002764 = phi i32 [ %v1_10002764, %dec_label_pc_1000279c ], [ %v2_1000274c, %dec_label_pc_1000273c ]
  %v0_10002758 = phi i32 [ %v0_100027584, %dec_label_pc_1000279c ], [ 0, %dec_label_pc_1000273c ]
  %v3_10002758 = icmp eq i32 %v0_10002758, 0
  store i1 %v3_10002758, i1* %cr7_eq.global-to-local, align 1
  %v1_1000275c = inttoptr i32 %v0_10002764 to i8*
  %v2_1000275c = load i8, i8* %v1_1000275c, align 1
  %v3_1000275c = zext i8 %v2_1000275c to i32
  store i32 %v3_1000275c, i32* %r9.global-to-local, align 4
  %v4_10002760 = icmp eq i32 %v1_10002740, %v0_1000279c
  %v1_10002764 = add i32 %v0_10002764, 1
  store i32 %v1_10002764, i32* %r11.global-to-local, align 4
  br i1 %v3_10002758, label %dec_label_pc_10002774, label %dec_label_pc_10002784

dec_label_pc_10002774:                            ; preds = %dec_label_pc_10002758
  %v3_10002774 = icmp eq i8 %v2_1000275c, 9
  store i1 %v3_10002774, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_1000275c, label %dec_label_pc_10002780 [
    i8 32, label %dec_label_pc_1000279c
    i8 9, label %dec_label_pc_1000279c
  ]

dec_label_pc_10002780:                            ; preds = %dec_label_pc_10002774
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10002784

dec_label_pc_10002784:                            ; preds = %dec_label_pc_10002758, %dec_label_pc_10002780
  %v0_100027585 = phi i32 [ %v0_10002758, %dec_label_pc_10002758 ], [ 1, %dec_label_pc_10002780 ]
  %v1_10002784 = add nuw nsw i32 %v3_1000275c, 208
  %v1_10002788 = urem i32 %v1_10002784, 256
  store i32 %v1_10002788, i32* %r0.global-to-local, align 4
  %v2_1000278c = icmp ugt i32 %v1_10002788, 9
  %v3_1000278c = icmp eq i32 %v1_10002788, 9
  store i1 %v3_1000278c, i1* %cr7_eq.global-to-local, align 1
  %v3_10002768.not = icmp ne i8 %v2_1000275c, 46
  %brmerge.not = and i1 %v3_10002768.not, %v2_1000278c
  %brmerge26 = or i1 %v4_10002760, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_100027d8, label %dec_label_pc_1000279c

dec_label_pc_1000279c:                            ; preds = %dec_label_pc_10002784, %dec_label_pc_10002774, %dec_label_pc_10002774
  %v0_100027584 = phi i32 [ 0, %dec_label_pc_10002774 ], [ 0, %dec_label_pc_10002774 ], [ %v0_100027585, %dec_label_pc_10002784 ]
  %v1_1000279c = add i32 %v0_1000279c, 1
  %v1_100027a0 = add i32 %v0_100027a0, -1
  store i32 %v1_100027a0, i32* %ctr.global-to-local, align 4
  %v2_100027a0 = icmp eq i32 %v1_100027a0, 0
  br i1 %v2_100027a0, label %dec_label_pc_100027a4, label %dec_label_pc_10002758

dec_label_pc_100027a4:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_10002734, %dec_label_pc_100026dc, %dec_label_pc_10002544
  %v0_100027a4 = call i32 @function_10005cf4()
  %v1_100027a8 = urem i32 %v0_100027a4, 4
  store i32 %v1_100027a8, i32* %r3.global-to-local, align 4
  %v3_100027ac = icmp eq i32 %v1_100027a8, 1
  store i1 %v3_100027ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027ac, label %dec_label_pc_10002b90, label %dec_label_pc_100027b4

dec_label_pc_100027b4:                            ; preds = %dec_label_pc_100027a4
  %v1_100027ac = icmp eq i32 %v1_100027a8, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100027ac, label %dec_label_pc_10002ba8, label %dec_label_pc_100027bc

dec_label_pc_100027bc:                            ; preds = %dec_label_pc_100027b4
  %v2_100027bc = icmp eq i32 %v1_100027a8, 3
  %v3_100027bc = icmp eq i32 %v1_100027a8, 2
  store i1 %v3_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027bc, label %dec_label_pc_10002b9c, label %dec_label_pc_100027c4

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_100027bc
  store i1 %v2_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100027bc, label %dec_label_pc_100027cc, label %dec_label_pc_10002808

dec_label_pc_100027cc:                            ; preds = %dec_label_pc_100027c4
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_100027d8:                            ; preds = %dec_label_pc_10002784
  %v2_100027d8 = sub i32 %v0_1000279c, %v0_1000272c
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100027ec.21 to i32), i32* @lr, align 4
  %v3_100027e8 = call i32 @function_10007f44(i32 %v2_10002754, i32 %v2_1000274c, i32 %v2_100027d8)
  %v2_100027ec = ptrtoint i32* %stack_var_-2184 to i32
  %v2_100027f0 = add i32 %v2_100027d8, %v2_100027ec
  store i32 %v2_100027f0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100027f8 = add i32 %v2_100027f0, 4
  %v4_100027f8 = inttoptr i32 %v3_100027f8 to i8*
  store i8 0, i8* %v4_100027f8, align 1
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 268445700, i32* @lr, align 4
  %v1_10002800 = call i32 @function_10009134(i32 %v2_10002754)
  store i32 %v1_10002800, i32* %r3.global-to-local, align 4
  store i32 %v1_10002800, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002808:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_10002ba8, %dec_label_pc_10002b9c, %dec_label_pc_10002b90, %dec_label_pc_100027cc, %dec_label_pc_100027d8
  %v0_10002808 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002808 = icmp eq i32 %v0_10002808, 0
  store i1 %v3_10002808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002808, label %dec_label_pc_10002b30, label %dec_label_pc_10002810

dec_label_pc_10002810:                            ; preds = %dec_label_pc_10002808
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445720, i32* @lr, align 4
  %v1_10002814 = inttoptr i32 %v0_10002808 to i8*
  %v2_10002814 = call i32 @function_10007ec0(i8* %v1_10002814)
  store i32 %v2_10002814, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445740, i32* @lr, align 4
  %v3_10002828 = call i32 @function_1000939c(i32 2, i32 3, i32 17)
  store i32 %v3_10002828, i32* %r3.global-to-local, align 4
  %v3_1000282c = icmp eq i32 %v3_10002828, -1
  store i1 %v3_1000282c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002828, i32* %r22.global-to-local, align 4
  br i1 %v3_1000282c, label %dec_label_pc_10002b30, label %dec_label_pc_10002838

dec_label_pc_10002838:                            ; preds = %dec_label_pc_10002810
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002844 = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268445780, i32* @lr, align 4
  %v4_10002850 = call i32 @function_10009360(i32 0, i32 3, i32 %v2_10002844, i32 4)
  store i32 %v4_10002850, i32* %r3.global-to-local, align 4
  %v3_10002854 = icmp eq i32 %v4_10002850, -1
  store i1 %v3_10002854, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002854, label %dec_label_pc_10002b28, label %dec_label_pc_1000285c

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_10002838
  %v0_1000285c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000285c = icmp slt i32 %v0_1000285c, 0
  %v3_1000285c = icmp eq i32 %v0_1000285c, 0
  store i1 %v1_1000285c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000285c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r17.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r18.global-to-local, align 4
  %v0_1000286c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000286c = urem i32 %v0_1000286c, 65536
  store i32 %v1_1000286c, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 65536
  store i32 %v1_10002874, i32* %r20.global-to-local, align 4
  %v0_10002878 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002878 = urem i32 %v0_10002878, 256
  store i32 %v1_10002878, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_1000285c, 1
  %v1_10002b1c = load i32, i32* @r29, align 4
  %v2_10002b1c = add i32 %v1_10002b1c, %v1_10002878
  store i32 %v2_10002b1c, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_10002880

dec_label_pc_10002880:                            ; preds = %dec_label_pc_1000285c
  %v1_10002884 = icmp slt i32 %v1_10002b1c, 0
  %v3_10002884 = icmp eq i32 %v1_10002b1c, 0
  store i1 %v1_10002884, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002884, i1* %cr3_eq.global-to-local, align 1
  %v1_10002888 = urem i32 %v2_10002b1c, 65536
  %v0_1000288c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000288c = icmp eq i32 %v0_1000288c, 0
  store i1 %v3_1000288c, i1* %cr2_eq.global-to-local, align 1
  %v1_10002890 = add nuw nsw i32 %v1_10002888, 27
  store i32 %v1_10002890, i32* %r0.global-to-local, align 4
  %v1_10002894 = add nuw nsw i32 %v1_10002888, 47
  store i32 %v1_10002894, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10002b1c, 47
  %v1_10002898 = urem i32 %fold, 65536
  store i32 %v1_10002898, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10002b1c, 27
  %v1_1000289c = urem i32 %fold3, 65536
  store i32 %v1_1000289c, i32* %r27.global-to-local, align 4
  %v1_100028a0 = add i32 %v1_10002b1c, 1
  store i32 %v1_100028a0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100028f0 = sext i8 %v5_100025dc to i32
  %v4_100028f8 = sext i8 %v5_10002614 to i32
  br label %dec_label_pc_100028a8

dec_label_pc_100028a8:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002880
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268445876, i32* @lr, align 4
  %v2_100028b0 = call i32 @function_100096f8(i32 600, i32 1)
  store i32 %v2_100028b0, i32* %r3.global-to-local, align 4
  %v3_100028b4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100028b4, i32* %r0.global-to-local, align 4
  %v0_100028b8 = load i32, i32* @r31, align 4
  %v1_100028b8 = mul i32 %v0_100028b8, 4
  store i32 %v1_100028b8, i32* %r9.global-to-local, align 4
  %v2_100028bc = load i32, i32* %r16.global-to-local, align 4
  %v3_100028bc = add i32 %v2_100028bc, %v1_100028b8
  %v4_100028bc = inttoptr i32 %v3_100028bc to i32*
  store i32 %v2_100028b0, i32* %v4_100028bc, align 4
  %v0_100028c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100028c0 = mul i32 %v0_100028c0, 4
  store i32 %v1_100028c0, i32* %r0.global-to-local, align 4
  %v0_100028c4 = load i32, i32* %r16.global-to-local, align 4
  %v2_100028c4 = add i32 %v0_100028c4, %v1_100028c0
  %v3_100028c4 = inttoptr i32 %v2_100028c4 to i32*
  %v4_100028c4 = load i32, i32* %v3_100028c4, align 4
  store i32 %v4_100028c4, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100028cc = inttoptr i32 %v4_100028c4 to i32*
  %v2_100028cc = load i32, i32* %v1_100028cc, align 4
  store i32 %v2_100028cc, i32* %r9.global-to-local, align 4
  %v1_100028d0 = add i32 %v4_100028c4, 20
  store i32 %v1_100028d0, i32* %r10.global-to-local, align 4
  %v0_100028d4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100028d4 = trunc i32 %v0_100028d4 to i16
  %v3_100028d4 = add i32 %v4_100028c4, 4
  %v4_100028d4 = inttoptr i32 %v3_100028d4 to i16*
  store i16 %v1_100028d4, i16* %v4_100028d4, align 2
  %v0_100028d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100028d8 = add i32 %v0_100028d8, 28
  store i32 %v1_100028d8, i32* %r8.global-to-local, align 4
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100028e4, i32* %r9.global-to-local, align 4
  %v1_100028e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v0_100028ec = load i32, i32* %r26.global-to-local, align 4
  %v1_100028ec = trunc i32 %v0_100028ec to i16
  %v2_100028ec = load i32, i32* %r11.global-to-local, align 4
  %v3_100028ec = add i32 %v2_100028ec, 2
  %v4_100028ec = inttoptr i32 %v3_100028ec to i16*
  store i16 %v1_100028ec, i16* %v4_100028ec, align 2
  store i32 %v4_100028f0, i32* %r0.global-to-local, align 4
  %v2_100028f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100028f4 = add i32 %v2_100028f4, 1
  %v4_100028f4 = inttoptr i32 %v3_100028f4 to i8*
  store i8 %v5_100025dc, i8* %v4_100028f4, align 1
  store i32 %v4_100028f8, i32* %r7.global-to-local, align 4
  %v2_100028fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100028fc = add i32 %v2_100028fc, 8
  %v4_100028fc = inttoptr i32 %v3_100028fc to i8*
  store i8 %v5_10002614, i8* %v4_100028fc, align 1
  %v0_10002900 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002900, label %dec_label_pc_1000290c, label %dec_label_pc_10002904

dec_label_pc_10002904:                            ; preds = %dec_label_pc_100028a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002908 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002908 = add i32 %v2_10002908, 6
  %v4_10002908 = inttoptr i32 %v3_10002908 to i16*
  store i16 16384, i16* %v4_10002908, align 2
  br label %dec_label_pc_1000290c

dec_label_pc_1000290c:                            ; preds = %dec_label_pc_100028a8, %dec_label_pc_10002904
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_10002914 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002914 = add i32 %v2_10002914, 9
  %v4_10002914 = inttoptr i32 %v3_10002914 to i8*
  store i8 17, i8* %v4_10002914, align 1
  %v0_10002918 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002918 = add i32 %v0_10002918, 41
  store i32 %v1_10002918, i32* %r9.global-to-local, align 4
  %v0_1000291c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000291c = add i32 %v2_1000291c, 4
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v0_10002920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002920 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002920 = add i32 %v1_10002920, %v0_10002920
  store i32 %v2_10002920, i32* %r30.global-to-local, align 4
  %v3_10002924 = load i32, i32* @global_var_1001b718.16, align 4
  store i32 %v3_10002924, i32* %r0.global-to-local, align 4
  %v1_10002928 = add i32 %v2_10002920, 1
  store i32 %v1_10002928, i32* %r31.global-to-local, align 4
  %v0_1000292c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000292c = trunc i32 %v0_1000292c to i16
  %v2_1000292c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000292c = add i32 %v2_1000292c, 2
  %v4_1000292c = inttoptr i32 %v3_1000292c to i16*
  store i16 %v1_1000292c, i16* %v4_1000292c, align 2
  %v0_10002930 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002930, i32* %r3.global-to-local, align 4
  %v0_10002934 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002934 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002934 = add i32 %v1_10002934, 12
  %v3_10002934 = inttoptr i32 %v2_10002934 to i32*
  store i32 %v0_10002934, i32* %v3_10002934, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_1000293c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000293c = trunc i32 %v0_1000293c to i16
  %v2_1000293c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000293c = add i32 %v2_1000293c, 20
  %v4_1000293c = inttoptr i32 %v3_1000293c to i16*
  store i16 %v1_1000293c, i16* %v4_1000293c, align 2
  %v0_10002940 = load i32, i32* %r25.global-to-local, align 4
  %v0_10002944 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002944 = trunc i32 %v0_10002944 to i16
  %v2_10002944 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002944 = add i32 %v2_10002944, 2
  %v4_10002944 = inttoptr i32 %v3_10002944 to i16*
  store i16 %v1_10002944, i16* %v4_10002944, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000294c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000294c = add i32 %v2_1000294c, 4
  %v4_1000294c = inttoptr i32 %v3_1000294c to i16*
  store i16 1, i16* %v4_1000294c, align 2
  %v0_10002950 = load i32, i32* @r28, align 4
  %v0_10002954 = load i32, i32* @r21, align 4
  %v1_10002954 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002954 = add i32 %v1_10002954, 16
  %v3_10002954 = inttoptr i32 %v2_10002954 to i32*
  store i32 %v0_10002954, i32* %v3_10002954, align 4
  %v0_10002958 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002958 = trunc i32 %v0_10002958 to i16
  %v2_10002958 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002958 = add i32 %v2_10002958, 28
  %v4_10002958 = inttoptr i32 %v3_10002958 to i16*
  store i16 %v1_10002958, i16* %v4_10002958, align 2
  %v0_1000295c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000295c = trunc i32 %v0_1000295c to i8
  %v2_1000295c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000295c = add i32 %v2_1000295c, 40
  %v4_1000295c = inttoptr i32 %v3_1000295c to i8*
  store i8 %v1_1000295c, i8* %v4_1000295c, align 1
  store i32 268446052, i32* @lr, align 4
  %v3_10002960 = call i32 @function_10007f44(i32 %v0_10002930, i32 %v0_10002940, i32 %v0_10002950)
  store i32 %v3_10002960, i32* %r3.global-to-local, align 4
  %v0_10002964 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10002964 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10002964 = or i1 %v0_10002964, %v1_10002964
  br i1 %v2_10002964, label %dec_label_pc_100029b0, label %dec_label_pc_10002968

dec_label_pc_10002968:                            ; preds = %dec_label_pc_1000290c
  %v0_10002968 = load i32, i32* @r29, align 4
  store i32 %v0_10002968, i32* %ctr.global-to-local, align 4
  %v0_1000296c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000296c, i32* %r3.global-to-local, align 4
  %v0_10002970 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10002970, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10002990

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002990
  %v1_10002980 = urem i32 %v1_10002994, 256
  br label %dec_label_pc_10002984

dec_label_pc_10002984:                            ; preds = %dec_label_pc_100029a0, %dec_label_pc_10002980
  %v0_1000298c = phi i32 [ %v0_1000298c.pre, %dec_label_pc_100029a0 ], [ %v0_1000298c18, %dec_label_pc_10002980 ]
  %v0_10002988 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v0_1000298816, %dec_label_pc_10002980 ]
  %v2_100029a013 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v2_100029a0, %dec_label_pc_10002980 ]
  %v0_10002984 = phi i32 [ %v0_10002984.pre, %dec_label_pc_100029a0 ], [ %v0_10002990, %dec_label_pc_10002980 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100029a0 ], [ %v1_10002980, %dec_label_pc_10002980 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_10002984 = add i32 %v0_10002984, 1
  store i32 %v1_10002984, i32* %r10.global-to-local, align 4
  %v1_10002988 = add i32 %v0_10002988, 1
  store i32 %v1_10002988, i32* %r3.global-to-local, align 4
  %v1_1000298c = add i32 %v0_1000298c, -1
  store i32 %v1_1000298c, i32* %ctr.global-to-local, align 4
  %v2_1000298c = icmp eq i32 %v1_1000298c, 0
  br i1 %v2_1000298c, label %dec_label_pc_100029b8.loopexit, label %dec_label_pc_10002990

dec_label_pc_10002990:                            ; preds = %dec_label_pc_10002984, %dec_label_pc_10002968
  %v0_1000298c18 = phi i32 [ %v1_1000298c, %dec_label_pc_10002984 ], [ %v0_10002968, %dec_label_pc_10002968 ]
  %v0_1000298816 = phi i32 [ %v1_10002988, %dec_label_pc_10002984 ], [ %v0_1000296c, %dec_label_pc_10002968 ]
  %v2_100029a0 = phi i32 [ %v2_100029a013, %dec_label_pc_10002984 ], [ %v0_10002970, %dec_label_pc_10002968 ]
  %v0_100029a0 = phi i32 [ %storemerge, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v0_10002990 = phi i32 [ %v1_10002984, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v1_10002990 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002990 = add i32 %v1_10002990, %v0_10002990
  %v3_10002990 = inttoptr i32 %v2_10002990 to i8*
  %v4_10002990 = load i8, i8* %v3_10002990, align 1
  %v5_10002990 = zext i8 %v4_10002990 to i32
  store i32 %v5_10002990, i32* %r0.global-to-local, align 4
  %v1_10002994 = add nsw i32 %v0_100029a0, 1
  store i32 %v1_10002994, i32* %r11.global-to-local, align 4
  %v3_10002998 = icmp eq i8 %v4_10002990, 46
  store i1 %v3_10002998, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002998, label %dec_label_pc_100029a0, label %dec_label_pc_10002980

dec_label_pc_100029a0:                            ; preds = %dec_label_pc_10002990
  %v1_100029a0 = trunc i32 %v0_100029a0 to i8
  %v3_100029a0 = inttoptr i32 %v2_100029a0 to i8*
  store i8 %v1_100029a0, i8* %v3_100029a0, align 1
  %v0_100029a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100029a4, i32* %r9.global-to-local, align 4
  %v0_10002984.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000298c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10002984

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_1000290c
  %v0_100029b0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100029b0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8.loopexit:                   ; preds = %dec_label_pc_10002984
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.loopexit, %dec_label_pc_100029b0
  %v2_100029b8 = phi i32 [ %v2_100029a013, %dec_label_pc_100029b8.loopexit ], [ %v0_100029b0, %dec_label_pc_100029b0 ]
  %v0_100029b8.off0 = phi i8 [ %extract.t, %dec_label_pc_100029b8.loopexit ], [ 0, %dec_label_pc_100029b0 ]
  %v3_100029b8 = inttoptr i32 %v2_100029b8 to i8*
  store i8 %v0_100029b8.off0, i8* %v3_100029b8, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100029c0 = load i32, i32* @r29, align 4
  %v2_100029c0 = add i32 %v1_100029c0, %v0_100029c0
  store i32 %v2_100029c0, i32* %r9.global-to-local, align 4
  %v3_100029c4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100029c4, i32* %r11.global-to-local, align 4
  %v3_100029c8 = add i32 %v2_100029c0, 4
  %v4_100029c8 = inttoptr i32 %v3_100029c8 to i16*
  store i16 1, i16* %v4_100029c8, align 2
  %v0_100029cc = load i32, i32* %r11.global-to-local, align 4
  %v1_100029cc = add i32 %v0_100029cc, 1
  store i32 %v1_100029cc, i32* %r31.global-to-local, align 4
  %v0_100029d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100029d0 = trunc i32 %v0_100029d0 to i16
  %v2_100029d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100029d0 = add i32 %v2_100029d0, 2
  %v4_100029d0 = inttoptr i32 %v3_100029d0 to i16*
  store i16 %v1_100029d0, i16* %v4_100029d0, align 2
  %v0_100029d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100029d4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100029d4 = icmp slt i32 %v0_100029d4, %v1_100029d4
  %v4_100029d4 = icmp eq i32 %v0_100029d4, %v1_100029d4
  store i1 %v4_100029d4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100029d4, i32* %stack_var_-2184, align 4
  br i1 %v2_100029d4, label %dec_label_pc_100028a8, label %dec_label_pc_100029e0.preheader.loopexit

dec_label_pc_100029e0.preheader.loopexit:         ; preds = %dec_label_pc_100029b8
  %v0_100029e0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029e0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029e0.preheader

dec_label_pc_100029e0.preheader:                  ; preds = %dec_label_pc_10002ad8, %dec_label_pc_1000285c, %dec_label_pc_100029e0.preheader.loopexit
  %v1_100029e0 = phi i1 [ %v1_1000285c, %dec_label_pc_1000285c ], [ %v1_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v1_10002ad8, %dec_label_pc_10002ad8 ]
  %v0_100029e0 = phi i1 [ %v3_1000285c, %dec_label_pc_1000285c ], [ %v0_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v0_10002ad8, %dec_label_pc_10002ad8 ]
  %v2_100029e0 = or i1 %v1_100029e0, %v0_100029e0
  br label %dec_label_pc_100029e0

dec_label_pc_100029e0:                            ; preds = %dec_label_pc_100029e0.preheader, %dec_label_pc_100029e0
  br i1 %v2_100029e0, label %dec_label_pc_100029e0, label %dec_label_pc_100029e4

dec_label_pc_100029e4:                            ; preds = %dec_label_pc_100029e0, %dec_label_pc_10002ad8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_100029f4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100029f4 = icmp eq i32 %v0_100029f4, 65535
  store i1 %v4_100029f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100029f8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100029f8 = icmp slt i32 %v0_100029f8, 65535
  %v4_100029f8 = icmp eq i32 %v0_100029f8, 65535
  store i1 %v2_100029f8, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_100029f8, i1* %cr3_eq.global-to-local, align 1
  %v0_100029fc = load i32, i32* %r20.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  store i1 %v4_100029fc, i1* %cr2_eq.global-to-local, align 1
  %v0_10002a00 = load i32, i32* @r24, align 4
  %v1_10002a00 = add i32 %v0_10002a00, 27
  store i32 %v1_10002a00, i32* @r30, align 4
  %v0_10002a04 = call i32 @__asm_mfcr()
  store i32 %v0_10002a04, i32* %r3.global-to-local, align 4
  %v1_10002a08 = mul i32 %v0_10002a04, 268435456
  store i32 %v1_10002a08, i32* @r26, align 4
  %v0_10002a0c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002a0c = load i32, i32* %r0.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  store i1 %v4_10002a0c, i1* %cr7_eq.global-to-local, align 1
  %v0_10002a10 = load i32, i32* @r24, align 4
  %v1_10002a10 = add i32 %v0_10002a10, 47
  store i32 %v1_10002a10, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002a18 = call i32 @__asm_mfcr()
  store i32 %v0_10002a18, i32* %r3.global-to-local, align 4
  %v1_10002a1c = mul i32 %v0_10002a18, 268435456
  store i32 %v1_10002a1c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_10002a24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, %dec_label_pc_100029e4
  %v0_10002a28 = phi i32 [ %v0_10002a28.pre, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v1_10002a1c, %dec_label_pc_100029e4 ]
  %v0_10002a24 = phi i32 [ %v1_10002ac8, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v0_10002a24.pre, %dec_label_pc_100029e4 ]
  %v1_10002a24 = mul i32 %v0_10002a24, 4
  store i32 %v1_10002a24, i32* %r0.global-to-local, align 4
  %v1_10002a28 = mul i32 %v0_10002a28, 16
  %v2_10002a28 = udiv i32 %v0_10002a28, 268435456
  %v3_10002a28 = or i32 %v2_10002a28, %v1_10002a28
  store i32 %v3_10002a28, i32* %r27.global-to-local, align 4
  %v1_10002a2c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a28)
  %v1_10002a30 = mul nuw i32 %v2_10002a28, 268435456
  %v2_10002a30 = urem i32 %v0_10002a28, 268435456
  %v3_10002a30 = or i32 %v1_10002a30, %v2_10002a30
  store i32 %v3_10002a30, i32* @r27, align 4
  %v0_10002a34 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002a34 = load i32, i32* %r0.global-to-local, align 4
  %v2_10002a34 = add i32 %v1_10002a34, %v0_10002a34
  %v3_10002a34 = inttoptr i32 %v2_10002a34 to i32*
  %v4_10002a34 = load i32, i32* %v3_10002a34, align 4
  store i32 %v4_10002a34, i32* @r29, align 4
  %v1_10002a38 = add i32 %v4_10002a34, 20
  store i32 %v1_10002a38, i32* @r28, align 4
  %v0_10002a3c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a3c, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a40

dec_label_pc_10002a40:                            ; preds = %dec_label_pc_10002a24
  %v0_10002a40 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a40, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002a44 = load i32, i32* @r26, align 4
  %v1_10002a44 = mul i32 %v0_10002a44, 16
  %v2_10002a44 = udiv i32 %v0_10002a44, 268435456
  %v3_10002a44 = or i32 %v2_10002a44, %v1_10002a44
  store i32 %v3_10002a44, i32* %r26.global-to-local, align 4
  %v1_10002a48 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a44)
  %v1_10002a4c = mul nuw i32 %v2_10002a44, 268435456
  %v2_10002a4c = urem i32 %v0_10002a44, 268435456
  %v3_10002a4c = or i32 %v1_10002a4c, %v2_10002a4c
  store i32 %v3_10002a4c, i32* @r26, align 4
  %v0_10002a50 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a50, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002a54:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002a54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002a54, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002a58:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54, %dec_label_pc_10002b10
  %v0_10002a58 = load i32, i32* @r29, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 41
  store i32 %v1_10002a58, i32* %r3.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r23.global-to-local, align 4
  store i32 268446308, i32* @lr, align 4
  %v2_10002a60 = inttoptr i32 %v1_10002a58 to i8*
  %v3_10002a60 = call i32 @function_10005db4(i8* %v2_10002a60, i32 %v0_10002a5c)
  %v0_10002a64 = load i32, i32* @r25, align 4
  %v1_10002a64 = trunc i32 %v0_10002a64 to i16
  %v2_10002a64 = load i32, i32* @r29, align 4
  %v3_10002a64 = add i32 %v2_10002a64, 10
  %v4_10002a64 = inttoptr i32 %v3_10002a64 to i16*
  store i16 %v1_10002a64, i16* %v4_10002a64, align 2
  %v0_10002a6c = load i32, i32* @r29, align 4
  store i32 %v0_10002a6c, i32* @r3, align 4
  %v2_10002a70 = call i32 @function_100043cc(i32 %v0_10002a6c, i32 20)
  %v3_10002a70 = trunc i32 %v2_10002a70 to i16
  %v0_10002a74 = load i32, i32* @r28, align 4
  store i32 %v0_10002a74, i32* @r4, align 4
  %v3_10002a78 = load i32, i32* @r29, align 4
  %v4_10002a78 = add i32 %v3_10002a78, 10
  %v5_10002a78 = inttoptr i32 %v4_10002a78 to i16*
  store i16 %v3_10002a70, i16* %v5_10002a78, align 2
  %v0_10002a7c = load i32, i32* @r30, align 4
  %v0_10002a80 = load i32, i32* @r25, align 4
  %v1_10002a80 = trunc i32 %v0_10002a80 to i16
  %v2_10002a80 = load i32, i32* @r28, align 4
  %v3_10002a80 = add i32 %v2_10002a80, 6
  %v4_10002a80 = inttoptr i32 %v3_10002a80 to i16*
  store i16 %v1_10002a80, i16* %v4_10002a80, align 2
  %v0_10002a84 = load i32, i32* @r29, align 4
  store i32 %v0_10002a84, i32* %r3.global-to-local, align 4
  %v0_10002a88 = load i32, i32* @r28, align 4
  %v1_10002a88 = add i32 %v0_10002a88, 4
  %v2_10002a88 = inttoptr i32 %v1_10002a88 to i16*
  %v3_10002a88 = load i16, i16* %v2_10002a88, align 2
  %v4_10002a88 = zext i16 %v3_10002a88 to i32
  %v4_10002a8c = call i32 @function_10004430(i32 %v0_10002a84, i32 %v0_10002a74, i32 %v4_10002a88, i32 %v0_10002a7c)
  %v5_10002a8c = trunc i32 %v4_10002a8c to i16
  store i32 %v4_10002a8c, i32* %r3.global-to-local, align 4
  %v3_10002a90 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002a90, i32* %r7.global-to-local, align 4
  %v0_10002a94 = load i32, i32* @r28, align 4
  %v1_10002a94 = add i32 %v0_10002a94, 2
  %v2_10002a94 = inttoptr i32 %v1_10002a94 to i16*
  %v3_10002a94 = load i16, i16* %v2_10002a94, align 2
  %v4_10002a94 = zext i16 %v3_10002a94 to i32
  store i32 %v4_10002a94, i32* %r0.global-to-local, align 4
  %v0_10002a98 = load i32, i32* @r29, align 4
  %v1_10002a9c = mul i32 %v3_10002a90, 24
  store i32 %v1_10002a9c, i32* %r7.global-to-local, align 4
  %v4_10002aa0 = add i32 %v0_10002a94, 6
  %v5_10002aa0 = inttoptr i32 %v4_10002aa0 to i16*
  store i16 %v5_10002a8c, i16* %v5_10002aa0, align 2
  %v0_10002aa4 = load i32, i32* @r31, align 4
  %v0_10002aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002aa8, i32* %r3.global-to-local, align 4
  %v0_10002aac = load i32, i32* %r7.global-to-local, align 4
  %v1_10002aac = load i32, i32* %r14.global-to-local, align 4
  %v2_10002aac = add i32 %v1_10002aac, %v0_10002aac
  store i32 %v2_10002aac, i32* %r7.global-to-local, align 4
  %v0_10002ab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002ab4 = trunc i32 %v0_10002ab4 to i16
  %v3_10002ab4 = add i32 %v2_10002aac, 2
  %v4_10002ab4 = inttoptr i32 %v3_10002ab4 to i16*
  store i16 %v1_10002ab4, i16* %v4_10002ab4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_10002abc = load i32, i32* @r21, align 4
  %v2_10002abc = add i32 %v2_10002aac, 4
  %v3_10002abc = inttoptr i32 %v2_10002abc to i32*
  store i32 %v0_10002abc, i32* %v3_10002abc, align 4
  store i32 268446404, i32* @lr, align 4
  %v6_10002ac0 = call i32 @function_10009320(i32 %v0_10002aa8, i32 %v0_10002a98, i32 %v0_10002aa4, i32 16384, i32 %v2_10002aac, i32 16)
  store i32 %v6_10002ac0, i32* %r3.global-to-local, align 4
  %v3_10002ac4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002ac4, i32* %r9.global-to-local, align 4
  %v1_10002ac8 = add i32 %v3_10002ac4, 1
  store i32 %v1_10002ac8, i32* %r0.global-to-local, align 4
  %v1_10002acc = load i32, i32* %r15.global-to-local, align 4
  %v2_10002acc = icmp slt i32 %v1_10002ac8, %v1_10002acc
  %v4_10002acc = icmp eq i32 %v1_10002ac8, %v1_10002acc
  store i1 %v4_10002acc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002ac8, i32* %stack_var_-2184, align 4
  br i1 %v2_10002acc, label %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, label %dec_label_pc_10002ad8

dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge: ; preds = %dec_label_pc_10002a58
  %v0_10002a28.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002ad8:                            ; preds = %dec_label_pc_10002a58
  %v0_10002ad8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002ad8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002ad8 = or i1 %v0_10002ad8, %v1_10002ad8
  br i1 %v2_10002ad8, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_100029e4

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002a24
  %v0_10002ae0 = call i32 @function_10005cf4()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v3_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = add i32 %v3_10002ae4, 4
  %v5_10002ae4 = inttoptr i32 %v4_10002ae4 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae4, align 2
  %v0_10002ae8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ae8, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002aec:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002aec = call i32 @function_10005cf4()
  %v1_10002aec = trunc i32 %v0_10002aec to i16
  store i32 %v0_10002aec, i32* %r3.global-to-local, align 4
  %v0_10002af0 = load i32, i32* @r26, align 4
  %v1_10002af0 = mul i32 %v0_10002af0, 16
  %v2_10002af0 = udiv i32 %v0_10002af0, 268435456
  %v3_10002af0 = or i32 %v2_10002af0, %v1_10002af0
  store i32 %v3_10002af0, i32* %r26.global-to-local, align 4
  %v1_10002af4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002af0)
  %v1_10002af8 = mul nuw i32 %v2_10002af0, 268435456
  %v2_10002af8 = urem i32 %v0_10002af0, 268435456
  %v3_10002af8 = or i32 %v1_10002af8, %v2_10002af8
  store i32 %v3_10002af8, i32* @r26, align 4
  %v3_10002afc = load i32, i32* @r29, align 4
  %v4_10002afc = add i32 %v3_10002afc, 20
  %v5_10002afc = inttoptr i32 %v4_10002afc to i16*
  store i16 %v1_10002aec, i16* %v5_10002afc, align 2
  %v0_10002b00 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002b00, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002b04 = call i32 @function_10005cf4()
  %v1_10002b04 = trunc i32 %v0_10002b04 to i16
  store i32 %v0_10002b04, i32* %r3.global-to-local, align 4
  %v3_10002b08 = load i32, i32* @r28, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b04, i16* %v5_10002b08, align 2
  %v0_10002b0c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002b0c, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54
  %v0_10002b10 = call i32 @function_10005cf4()
  %v1_10002b10 = trunc i32 %v0_10002b10 to i16
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v3_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = add i32 %v3_10002b14, 28
  %v5_10002b14 = inttoptr i32 %v4_10002b14 to i16*
  store i16 %v1_10002b10, i16* %v5_10002b14, align 2
  br label %dec_label_pc_10002a58

dec_label_pc_10002b28:                            ; preds = %dec_label_pc_10002838
  %v0_10002b28 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002b28, i32* %r3.global-to-local, align 4
  store i32 268446512, i32* @lr, align 4
  %v0_10002b2c = call i32 @function_10008680()
  store i32 %v0_10002b2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b30

dec_label_pc_10002b30:                            ; preds = %dec_label_pc_10002810, %dec_label_pc_10002808, %dec_label_pc_10002b28
  store i32 %v0_1000255c, i32* %r0.global-to-local, align 4
  %v1_10002b44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000254c)
  store i32 %v0_1000257c, i32* %r24.global-to-local, align 4
  store i32 %v0_10002580, i32* %r25.global-to-local, align 4
  store i32 %v0_10002584, i32* %r26.global-to-local, align 4
  store i32 %v0_10002588, i32* %r27.global-to-local, align 4
  store i32 %v0_1000258c, i32* %r28.global-to-local, align 4
  store i32 %v0_100025b0, i32* %r30.global-to-local, align 4
  store i32 %v0_1000259c, i32* %r31.global-to-local, align 4
  %v0_10002b8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002b8c

dec_label_pc_10002b90:                            ; preds = %dec_label_pc_100027a4
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002b9c:                            ; preds = %dec_label_pc_100027bc
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002ba8:                            ; preds = %dec_label_pc_100027b4
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10002808

; uselistorder directives
  uselistorder i32 %v0_10002b10, { 1, 0 }
  uselistorder i32 %v0_10002b04, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 2, 1, 0 }
  uselistorder i32 %v0_10002aec, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i1 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v0_10002ad8, { 1, 0 }
  uselistorder i32 %v1_10002ac8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002a8c, { 1, 0 }
  uselistorder i32 %v0_10002a44, { 2, 1, 0 }
  uselistorder i32 %v0_10002a28, { 2, 1, 0 }
  uselistorder i32 %v1_10002a1c, { 1, 0 }
  uselistorder i32 %v0_100029a4, { 2, 0, 1 }
  uselistorder i32 %v1_10002994, { 1, 0 }
  uselistorder i32 %v1_1000298c, { 0, 2, 1 }
  uselistorder i32 %v1_100028c0, { 1, 0 }
  uselistorder i32 %v1_100028b8, { 1, 0 }
  uselistorder i32 %v2_10002b1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10002b1c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002878, { 1, 0 }
  uselistorder i32 %v0_10002808, { 1, 0, 2 }
  uselistorder i1 %v2_100027bc, { 1, 0 }
  uselistorder i32 %v1_100027a8, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100027a0, { 2, 1, 0 }
  uselistorder i32 %v1_10002788, { 1, 2, 0 }
  uselistorder i32 %v1_10002764, { 1, 0 }
  uselistorder i32 %v0_10002758, { 1, 0 }
  uselistorder i32 %v2_10002754, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10002734, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000272c, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_100026d4, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10002614, { 1, 0 }
  uselistorder i8 %v5_100025dc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 0, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002b30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002a58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100029e4, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000290c, { 1, 0 }
  uselistorder label %dec_label_pc_10002808, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10002784, { 1, 0 }
}

define i32 @function_10002bb4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bb4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10002bb8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bb8, i32* %r0.global-to-local, align 4
  %v0_10002bbc = call i32 @__asm_mfcr()
  store i32 %v0_10002bbc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10002bcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bbc, i32* %r21.global-to-local, align 4
  %v0_10002c04 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c0c = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268446760, i32* @lr, align 4
  %v2_10002c24 = call i32 @function_100096f8(i32 16, i32 16)
  store i32 %v2_10002c24, i32* %r22.global-to-local, align 4
  %v0_10002c30 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r3.global-to-local, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_100096f8(i32 %v0_10002c30, i32 4)
  %v0_10002c38 = load i32, i32* @r28, align 4
  store i32 %v2_10002c34, i32* %r23.global-to-local, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c38 to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* @r31, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v1_10002ca8 = urem i32 %v5_10002ca0, 256
  %v0_10002cb4 = load i32, i32* @r28, align 4
  %v0_10002cbc = load i32, i32* @r29, align 4
  store i32 %v0_10002cbc, i32* %r3.global-to-local, align 4
  store i32 268446916, i32* @lr, align 4
  %v4_10002cc0 = inttoptr i32 %v0_10002cb4 to i32*
  %v5_10002cc0 = call i32 @function_100006a8(i32 %v0_10002cbc, i32* %v4_10002cc0, i32 7, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  %v5_10002cd0 = trunc i32 %v5_10002cc0 to i16
  %v0_10002cd8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd8, i32* %r3.global-to-local, align 4
  store i32 268446944, i32* @lr, align 4
  %v4_10002cdc = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cdc = call i32 @function_100006a8(i32 %v0_10002cd8, i32* %v4_10002cdc, i32 11, i32 1)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  %v1_10002ce4 = urem i32 %v5_10002cdc, 256
  %v0_10002cf4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf4, i32* %r3.global-to-local, align 4
  store i32 268446972, i32* @lr, align 4
  %v4_10002cf8 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf8 = call i32 @function_100006a8(i32 %v0_10002cf4, i32* %v4_10002cf8, i32 12, i32 1)
  %v0_10002cfc = load i32, i32* @r28, align 4
  %v1_10002d08 = urem i32 %v5_10002cf8, 256
  %v0_10002d0c = load i32, i32* @r29, align 4
  store i32 %v0_10002d0c, i32* %r3.global-to-local, align 4
  store i32 268446996, i32* @lr, align 4
  %v4_10002d10 = inttoptr i32 %v0_10002cfc to i32*
  %v5_10002d10 = call i32 @function_100006a8(i32 %v0_10002d0c, i32* %v4_10002d10, i32 13, i32 1)
  %v0_10002d14 = load i32, i32* @r28, align 4
  %v1_10002d20 = urem i32 %v5_10002d10, 256
  %v0_10002d24 = load i32, i32* @r29, align 4
  store i32 %v0_10002d24, i32* %r3.global-to-local, align 4
  store i32 268447020, i32* @lr, align 4
  %v4_10002d28 = inttoptr i32 %v0_10002d14 to i32*
  %v5_10002d28 = call i32 @function_100006a8(i32 %v0_10002d24, i32* %v4_10002d28, i32 14, i32 1)
  %v0_10002d2c = load i32, i32* @r28, align 4
  %v1_10002d38 = urem i32 %v5_10002d28, 256
  %v0_10002d3c = load i32, i32* @r29, align 4
  store i32 %v0_10002d3c, i32* %r3.global-to-local, align 4
  store i32 268447044, i32* @lr, align 4
  %v4_10002d40 = inttoptr i32 %v0_10002d2c to i32*
  %v5_10002d40 = call i32 @function_100006a8(i32 %v0_10002d3c, i32* %v4_10002d40, i32 15, i32 1)
  %v0_10002d44 = load i32, i32* @r28, align 4
  %v1_10002d50 = urem i32 %v5_10002d40, 256
  %v0_10002d54 = load i32, i32* @r29, align 4
  store i32 %v0_10002d54, i32* %r3.global-to-local, align 4
  store i32 268447068, i32* @lr, align 4
  %v4_10002d58 = inttoptr i32 %v0_10002d44 to i32*
  %v5_10002d58 = call i32 @function_100006a8(i32 %v0_10002d54, i32* %v4_10002d58, i32 16, i32 1)
  %v0_10002d64 = load i32, i32* @r28, align 4
  %v1_10002d68 = urem i32 %v5_10002d58, 256
  %v0_10002d6c = load i32, i32* @r29, align 4
  store i32 %v0_10002d6c, i32* %r3.global-to-local, align 4
  store i32 268447092, i32* @lr, align 4
  %v4_10002d70 = inttoptr i32 %v0_10002d64 to i32*
  %v5_10002d70 = call i32 @function_100006a8(i32 %v0_10002d6c, i32* %v4_10002d70, i32 0, i32 768)
  %v0_10002d74 = load i32, i32* @r28, align 4
  store i32 %v5_10002d70, i32* %r25.global-to-local, align 4
  %v0_10002d84 = load i32, i32* @r29, align 4
  store i32 %v0_10002d84, i32* %r3.global-to-local, align 4
  store i32 268447116, i32* @lr, align 4
  %v4_10002d88 = inttoptr i32 %v0_10002d74 to i32*
  %v5_10002d88 = call i32 @function_100006a8(i32 %v0_10002d84, i32* %v4_10002d88, i32 1, i32 1)
  %v1_10002d90 = urem i32 %v5_10002d88, 256
  store i32 %v1_10002d90, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v3_10002d9c = call i32 @function_1000939c(i32 2, i32 3, i32 6)
  store i32 %v3_10002d9c, i32* %r3.global-to-local, align 4
  %v3_10002da0 = icmp eq i32 %v3_10002d9c, -1
  store i1 %v3_10002da0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002d9c, i32* %r24.global-to-local, align 4
  br i1 %v3_10002da0, label %dec_label_pc_10002f60, label %dec_label_pc_10002dac

dec_label_pc_10002dac:                            ; preds = %dec_label_pc_10002bb4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002db8 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268447176, i32* @lr, align 4
  %v4_10002dc4 = call i32 @function_10009360(i32 0, i32 3, i32 %v2_10002db8, i32 4)
  store i32 %v4_10002dc4, i32* %r3.global-to-local, align 4
  %v3_10002dc8 = icmp eq i32 %v4_10002dc4, -1
  store i1 %v3_10002dc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002dc8, label %dec_label_pc_10002f58, label %dec_label_pc_10002dd0

dec_label_pc_10002dd0:                            ; preds = %dec_label_pc_10002dac
  %v0_10002dd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002dd0 = icmp slt i32 %v0_10002dd0, 0
  %v3_10002dd0 = icmp eq i32 %v0_10002dd0, 0
  store i1 %v1_10002dd0, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002dd0, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10002ddc = load i32, i32* @r31, align 4
  %v1_10002ddc = urem i32 %v0_10002ddc, 65536
  store i32 %v1_10002ddc, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10002dd0, 1
  br i1 %tmp49, label %dec_label_pc_100030f8, label %dec_label_pc_10002de4

dec_label_pc_10002de4:                            ; preds = %dec_label_pc_10002dd0
  %v4_10002de4 = sext i16 %v5_10002cd0 to i32
  store i32 %v4_10002de4, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10002e88 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002e94 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10002e98 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10002ed0 = zext i16 %tmp13 to i32
  %v1_10002f00 = and i32 %tmp, 1179648
  %v3_10003014 = icmp eq i32 %v1_10002ca8, 0
  %v4_10003034 = sext i8 %v5_10002c5c to i32
  %v4_1000303c = sext i8 %v5_10002c94 to i32
  %v1_10002f04 = and i32 %tmp, 327680
  %v3_10002f04 = icmp eq i32 %v1_10002f04, 0
  %v4_10002f0c = icmp eq i32 %v1_10002f00, 1179648
  br label %dec_label_pc_10002df0

dec_label_pc_10002df0:                            ; preds = %dec_label_pc_100030e4, %dec_label_pc_10002f18, %dec_label_pc_10002de4
  %v0_10002df0 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002df0 = add i32 %v0_10002df0, 40
  store i32 %v1_10002df0, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e0053 = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  store i32 %v3_10002e0053, i32* %r3.global-to-local, align 4
  %v3_10002e0455 = icmp eq i32 %v3_10002e0053, -1
  store i1 %v3_10002e0455, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e0053, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e0455, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002e10:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0
  store i32 3, i32* @r4, align 4
  store i32 268447264, i32* @lr, align 4
  %v1_10002e1c = call i32 @function_10008598(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10002e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e28, i32* %r3.global-to-local, align 4
  store i32 268447284, i32* @lr, align 4
  %v2_10002e30 = call i32 @function_10008598(i32 %v0_10002e28)
  store i32 %v2_10002e30, i32* %r3.global-to-local, align 4
  %v3_10002e34 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002e3c = mul i32 %v3_10002e34, 24
  store i32 %v1_10002e3c, i32* %r0.global-to-local, align 4
  %v0_10002e44 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002e44 = add i32 %v0_10002e44, %v1_10002e3c
  store i32 %v2_10002e44, i32* %r11.global-to-local, align 4
  %v1_10002e48 = add i32 %v2_10002e44, 20
  %v2_10002e48 = inttoptr i32 %v1_10002e48 to i8*
  %v3_10002e48 = load i8, i8* %v2_10002e48, align 1
  %v4_10002e48 = zext i8 %v3_10002e48 to i32
  store i32 %v4_10002e48, i32* %r9.global-to-local, align 4
  %v3_10002e4c = icmp eq i8 %v3_10002e48, 31
  store i1 %v3_10002e4c, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10002e48, 32
  %v1_10002f24 = add i32 %v2_10002e44, 16
  %v2_10002f24 = inttoptr i32 %v1_10002f24 to i32*
  %v3_10002f24 = load i32, i32* %v2_10002f24, align 4
  br i1 %tmp50, label %dec_label_pc_10002f24, label %dec_label_pc_10002e54

dec_label_pc_10002e54:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r0.global-to-local, align 4
  %v0_10002e5c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002e5c, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002e60:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.0 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  store i32 %v4_10002de4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002e68:                            ; preds = %dec_label_pc_10002f4c, %dec_label_pc_10002e60
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002f4c ], [ %stack_var_-396.0, %dec_label_pc_10002e60 ]
  %storemerge = phi i16 [ %v1_10002f4c, %dec_label_pc_10002f4c ], [ %v5_10002cd0, %dec_label_pc_10002e60 ]
  %v0_10002e70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e70, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002e78.22 to i32), i32* @lr, align 4
  %v0_10002e74 = call i32 @function_1000919c()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447360, i32* @lr, align 4
  %v0_10002e7c = call i32 @function_10008a50()
  store i32 %v0_10002e7c, i32* %r3.global-to-local, align 4
  store i32 %v0_10002e7c, i32* @r31, align 4
  %v4_10002ec4 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10002ed4 = zext i16 %storemerge to i32
  %v4_10002ed8 = icmp eq i16 %storemerge, %tmp13
  %v4_10002ec4.not = xor i1 %v4_10002ec4, true
  br label %dec_label_pc_10002e84

dec_label_pc_10002e84:                            ; preds = %dec_label_pc_10002ee0, %dec_label_pc_10002e68
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002e94, i32* %r7.global-to-local, align 4
  store i32 %v2_10002e98, i32* %r8.global-to-local, align 4
  %v0_10002e9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002e9c, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268447400, i32* @lr, align 4
  %v6_10002ea4 = call i32 @function_100092a8(i32 %v0_10002e9c, i32 %v2_10002e88, i32 256, i32 16384, i32 %v2_10002e94, i32 %v2_10002e98)
  store i32 %v6_10002ea4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002eb0 = icmp eq i32 %v6_10002ea4, -1
  store i1 %v3_10002eb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002eb0, label %dec_label_pc_10002f60, label %dec_label_pc_10002ebc

dec_label_pc_10002ebc:                            ; preds = %dec_label_pc_10002e84
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10002ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002ea4, 41
  %or.cond = or i1 %tmp51, %v4_10002ec4.not
  br i1 %or.cond, label %dec_label_pc_10002ee0, label %dec_label_pc_10002ed0

dec_label_pc_10002ed0:                            ; preds = %dec_label_pc_10002ebc
  store i32 %v4_10002ed0, i32* %r0.global-to-local, align 4
  store i32 %v4_10002ed4, i32* %r8.global-to-local, align 4
  store i1 %v4_10002ed8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002ed8, label %dec_label_pc_10002efc, label %dec_label_pc_10002ee0

dec_label_pc_10002ee0:                            ; preds = %dec_label_pc_10002ebc, %dec_label_pc_10002f14, %dec_label_pc_10002ed0
  store i32 268447460, i32* @lr, align 4
  %v0_10002ee0 = call i32 @function_10008a50()
  %v0_10002ee4 = load i32, i32* @r31, align 4
  %v2_10002ee4 = sub i32 %v0_10002ee0, %v0_10002ee4
  store i32 %v2_10002ee4, i32* %r3.global-to-local, align 4
  %v3_10002ee8 = icmp eq i32 %v2_10002ee4, 10
  store i1 %v3_10002ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10002ee4, 11
  br i1 %tmp52, label %dec_label_pc_10002e84, label %dec_label_pc_10002ef0

dec_label_pc_10002ef0:                            ; preds = %dec_label_pc_10002ee0
  %v0_10002ef0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ef0, i32* %r3.global-to-local, align 4
  store i32 268447480, i32* @lr, align 4
  %v0_10002ef4 = call i32 @function_10008680()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e00 = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  store i32 %v3_10002e00, i32* %r3.global-to-local, align 4
  %v3_10002e04 = icmp eq i32 %v3_10002e00, -1
  store i1 %v3_10002e04, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e00, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e04, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002efc:                            ; preds = %dec_label_pc_10002ed0
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10002f00, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10002f0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002f0c, label %dec_label_pc_10002fc0, label %dec_label_pc_10002f14

dec_label_pc_10002f14:                            ; preds = %dec_label_pc_10002efc
  br i1 %v3_10002f04, label %dec_label_pc_10002ee0, label %dec_label_pc_10002f18

dec_label_pc_10002f18:                            ; preds = %dec_label_pc_10002f14
  %v0_10002f18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002f18, i32* %r3.global-to-local, align 4
  store i32 268447520, i32* @lr, align 4
  %v0_10002f1c = call i32 @function_10008680()
  store i32 %v0_10002f1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002df0

dec_label_pc_10002f24:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r29.global-to-local, align 4
  %v0_10002f28 = call i32 @function_10005cf4()
  store i32 %v0_10002f28, i32* %r3.global-to-local, align 4
  %v3_10002f2c = load i32, i32* %stack_var_-408, align 4
  %v1_10002f30 = mul i32 %v3_10002f2c, 24
  %v1_10002f34 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002f34 = add i32 %v1_10002f34, %v1_10002f30
  store i32 %v2_10002f34, i32* %r9.global-to-local, align 4
  %v1_10002f38 = add i32 %v2_10002f34, 20
  %v2_10002f38 = inttoptr i32 %v1_10002f38 to i8*
  %v3_10002f38 = load i8, i8* %v2_10002f38, align 1
  %v4_10002f38 = zext i8 %v3_10002f38 to i32
  store i32 %v4_10002f38, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10002f38, 64
  %v2_10002f3c = zext i8 %tmp56 to i32
  %v3_10002f3c = lshr i32 %v0_10002f28, %v2_10002f3c
  store i32 %v3_10002f3c, i32* %r3.global-to-local, align 4
  %v0_10002f40 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002f40 = add i32 %v3_10002f3c, %v0_10002f40
  store i32 %v2_10002f40, i32* %r29.global-to-local, align 4
  %v0_10002f48 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002f48, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002f4c:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.2 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  %v0_10002f4c = call i32 @function_10005cf4()
  %v1_10002f4c = trunc i32 %v0_10002f4c to i16
  store i32 %v0_10002f4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002f58:                            ; preds = %dec_label_pc_10002dac
  %v0_10002f58 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002f58, i32* %r3.global-to-local, align 4
  store i32 268447584, i32* @lr, align 4
  %v0_10002f5c = call i32 @function_10008680()
  store i32 %v0_10002f5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002e84, %dec_label_pc_10002bb4, %dec_label_pc_10002f58
  store i32 %v0_10002bcc, i32* %r0.global-to-local, align 4
  %v1_10002f74 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bbc)
  store i32 %v0_10002c04, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c0c, i32* %r29.global-to-local, align 4
  %v0_10002fbc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002fbc

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10002efc
  %v3_10002fc0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002fc0, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10002fc4, i32* @r3, align 4
  %v0_10002fc8 = load i32, i32* @r30, align 4
  %v1_10002fc8 = add i32 %v0_10002fc8, 2
  %v2_10002fc8 = inttoptr i32 %v1_10002fc8 to i16*
  %v3_10002fc8 = load i16, i16* %v2_10002fc8, align 2
  %v4_10002fc8 = zext i16 %v3_10002fc8 to i32
  store i32 %v4_10002fc8, i32* %r11.global-to-local, align 4
  %v1_10002fcc = mul i32 %v3_10002fc0, 16
  store i32 %v1_10002fcc, i32* %r9.global-to-local, align 4
  %v1_10002fd0 = mul i32 %v3_10002fc0, 4
  store i32 %v1_10002fd0, i32* @r29, align 4
  %v1_10002fd4 = load i32, i32* %r22.global-to-local, align 4
  %v3_10002fd4 = add i32 %v1_10002fd4, %v1_10002fcc
  %v4_10002fd4 = inttoptr i32 %v3_10002fd4 to i32*
  store i32 %tmp14, i32* %v4_10002fd4, align 4
  %v0_10002fd8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002fd8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fd8 = add i32 %v1_10002fd8, %v0_10002fd8
  store i32 %v2_10002fd8, i32* %r9.global-to-local, align 4
  %v0_10002fdc = load i32, i32* %r8.global-to-local, align 4
  %v1_10002fdc = trunc i32 %v0_10002fdc to i16
  %v3_10002fdc = add i32 %v2_10002fd8, 14
  %v4_10002fdc = inttoptr i32 %v3_10002fdc to i16*
  store i16 %v1_10002fdc, i16* %v4_10002fdc, align 2
  %v0_10002fe0 = load i32, i32* @r30, align 4
  %v1_10002fe0 = add i32 %v0_10002fe0, 4
  %v2_10002fe0 = inttoptr i32 %v1_10002fe0 to i32*
  %v3_10002fe0 = load i32, i32* %v2_10002fe0, align 4
  store i32 %v3_10002fe0, i32* %r0.global-to-local, align 4
  %v0_10002fe4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002fe4 = trunc i32 %v0_10002fe4 to i16
  %v2_10002fe4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002fe4 = add i32 %v2_10002fe4, 12
  %v4_10002fe4 = inttoptr i32 %v3_10002fe4 to i16*
  store i16 %v1_10002fe4, i16* %v4_10002fe4, align 2
  %v0_10002fe8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002fe8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fe8 = add i32 %v1_10002fe8, 4
  %v3_10002fe8 = inttoptr i32 %v2_10002fe8 to i32*
  store i32 %v0_10002fe8, i32* %v3_10002fe8, align 4
  %v0_10002fec = load i32, i32* @r30, align 4
  %v1_10002fec = add i32 %v0_10002fec, 8
  %v2_10002fec = inttoptr i32 %v1_10002fec to i32*
  %v3_10002fec = load i32, i32* %v2_10002fec, align 4
  store i32 %v3_10002fec, i32* %r0.global-to-local, align 4
  %v1_10002ff0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002ff0 = add i32 %v1_10002ff0, 8
  %v3_10002ff0 = inttoptr i32 %v2_10002ff0 to i32*
  store i32 %v3_10002fec, i32* %v3_10002ff0, align 4
  store i32 268447736, i32* @lr, align 4
  %v0_10002ff4 = call i32 @function_100095a0()
  store i32 %v0_10002ff4, i32* %r3.global-to-local, align 4
  %v3_10002ff8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002ff8, i32* %r0.global-to-local, align 4
  %v1_10002ffc = load i32, i32* @r29, align 4
  %v2_10002ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10002ffc = add i32 %v2_10002ffc, %v1_10002ffc
  %v4_10002ffc = inttoptr i32 %v3_10002ffc to i32*
  store i32 %v0_10002ff4, i32* %v4_10002ffc, align 4
  %v0_10003000 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003000 = mul i32 %v0_10003000, 4
  store i32 %v1_10003000, i32* %r0.global-to-local, align 4
  %v0_10003004 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003004 = add i32 %v0_10003004, %v1_10003000
  %v3_10003004 = inttoptr i32 %v2_10003004 to i32*
  %v4_10003004 = load i32, i32* %v3_10003004, align 4
  store i32 %v4_10003004, i32* @r31, align 4
  store i32 %v1_10002ca8, i32* %r0.global-to-local, align 4
  %v1_1000300c = inttoptr i32 %v4_10003004 to i32*
  %v2_1000300c = load i32, i32* %v1_1000300c, align 4
  store i32 %v2_1000300c, i32* %r9.global-to-local, align 4
  %v1_10003010 = add i32 %v4_10003004, 20
  store i32 %v1_10003010, i32* @r30, align 4
  store i1 %v3_10003014, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000301c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000301c, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003024 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003028 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003028 = trunc i32 %v0_10003028 to i16
  %v2_10003028 = load i32, i32* @r31, align 4
  %v3_10003028 = add i32 %v2_10003028, 4
  %v4_10003028 = inttoptr i32 %v3_10003028 to i16*
  store i16 %v1_10003028, i16* %v4_10003028, align 2
  %v1_1000302c = load i32, i32* @r31, align 4
  %v2_1000302c = inttoptr i32 %v1_1000302c to i32*
  store i32 %v1_10003024, i32* %v2_1000302c, align 4
  %v0_10003030 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003030 = trunc i32 %v0_10003030 to i16
  %v2_10003030 = load i32, i32* @r31, align 4
  %v3_10003030 = add i32 %v2_10003030, 2
  %v4_10003030 = inttoptr i32 %v3_10003030 to i16*
  store i16 %v1_10003030, i16* %v4_10003030, align 2
  store i32 %v4_10003034, i32* %r9.global-to-local, align 4
  %v2_10003038 = load i32, i32* @r31, align 4
  %v3_10003038 = add i32 %v2_10003038, 1
  %v4_10003038 = inttoptr i32 %v3_10003038 to i8*
  store i8 %v5_10002c5c, i8* %v4_10003038, align 1
  store i32 %v4_1000303c, i32* %r0.global-to-local, align 4
  %v2_10003040 = load i32, i32* @r31, align 4
  %v3_10003040 = add i32 %v2_10003040, 8
  %v4_10003040 = inttoptr i32 %v3_10003040 to i8*
  store i8 %v5_10002c94, i8* %v4_10003040, align 1
  %v0_10003044 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003044, label %dec_label_pc_10003050, label %dec_label_pc_10003048

dec_label_pc_10003048:                            ; preds = %dec_label_pc_10002fc0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000304c = load i32, i32* @r31, align 4
  %v3_1000304c = add i32 %v2_1000304c, 6
  %v4_1000304c = inttoptr i32 %v3_1000304c to i16*
  store i16 16384, i16* %v4_1000304c, align 2
  br label %dec_label_pc_10003050

dec_label_pc_10003050:                            ; preds = %dec_label_pc_10002fc0, %dec_label_pc_10003048
  %v2_10003058 = load i32, i32* @r31, align 4
  %v3_10003058 = add i32 %v2_10003058, 9
  %v4_10003058 = inttoptr i32 %v3_10003058 to i8*
  store i8 6, i8* %v4_10003058, align 1
  %v3_1000305c = load i32, i32* @global_var_1001b718.16, align 4
  store i32 %v3_1000305c, i32* %r0.global-to-local, align 4
  %v1_10003060 = load i32, i32* @r31, align 4
  %v2_10003060 = add i32 %v1_10003060, 12
  %v3_10003060 = inttoptr i32 %v2_10003060 to i32*
  store i32 %v3_1000305c, i32* %v3_10003060, align 4
  %v3_10003064 = load i32, i32* %stack_var_-408, align 4
  %v1_10003068 = mul i32 %v3_10003064, 16
  store i32 %v1_10003068, i32* %r9.global-to-local, align 4
  %v1_1000306c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000306c = add i32 %v1_1000306c, %v1_10003068
  %v3_1000306c = inttoptr i32 %v2_1000306c to i32*
  %v4_1000306c = load i32, i32* %v3_1000306c, align 4
  store i32 %v4_1000306c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000306c, i32* %r9.global-to-local, align 4
  %v1_10003074 = add i32 %v2_1000306c, 12
  %v2_10003074 = inttoptr i32 %v1_10003074 to i16*
  %v3_10003074 = load i16, i16* %v2_10003074, align 2
  %v4_10003074 = zext i16 %v3_10003074 to i32
  store i32 %v4_10003074, i32* %r11.global-to-local, align 4
  %v1_10003078 = load i32, i32* @r31, align 4
  %v2_10003078 = add i32 %v1_10003078, 16
  %v3_10003078 = inttoptr i32 %v2_10003078 to i32*
  store i32 %v4_1000306c, i32* %v3_10003078, align 4
  %v0_1000307c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000307c = trunc i32 %v0_1000307c to i16
  %v2_1000307c = load i32, i32* @r31, align 4
  %v3_1000307c = add i32 %v2_1000307c, 20
  %v4_1000307c = inttoptr i32 %v3_1000307c to i16*
  store i16 %v1_1000307c, i16* %v4_1000307c, align 2
  %v0_10003080 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003080 = add i32 %v0_10003080, 8
  %v2_10003080 = inttoptr i32 %v1_10003080 to i32*
  %v3_10003080 = load i32, i32* %v2_10003080, align 4
  store i32 %v3_10003080, i32* %r0.global-to-local, align 4
  %v0_10003084 = load i32, i32* @r30, align 4
  %v1_10003084 = add i32 %v0_10003084, 12
  %v2_10003084 = inttoptr i32 %v1_10003084 to i32*
  %v3_10003084 = load i32, i32* %v2_10003084, align 4
  store i32 %v3_10003084, i32* %r11.global-to-local, align 4
  %v2_10003088 = add i32 %v0_10003084, 4
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v3_10003080, i32* %v3_10003088, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003090 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003090, i32* %r11.global-to-local, align 4
  %v0_10003094 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003094 = add i32 %v0_10003094, 14
  %v2_10003094 = inttoptr i32 %v1_10003094 to i16*
  %v3_10003094 = load i16, i16* %v2_10003094, align 2
  %v4_10003094 = zext i16 %v3_10003094 to i32
  store i32 %v4_10003094, i32* %r0.global-to-local, align 4
  %v1_10003098 = add i32 %v0_10003094, 4
  %v2_10003098 = inttoptr i32 %v1_10003098 to i32*
  %v3_10003098 = load i32, i32* %v2_10003098, align 4
  store i32 %v3_10003098, i32* %r10.global-to-local, align 4
  %v1_1000309c = or i32 %v1_10003090, 1114112
  store i32 %v1_1000309c, i32* %r11.global-to-local, align 4
  %v2_100030a0 = load i32, i32* @r30, align 4
  %v3_100030a0 = add i32 %v2_100030a0, 2
  %v4_100030a0 = inttoptr i32 %v3_100030a0 to i16*
  store i16 %v3_10003094, i16* %v4_100030a0, align 2
  %v0_100030a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100030a4 = load i32, i32* @r30, align 4
  %v2_100030a4 = add i32 %v1_100030a4, 8
  %v3_100030a4 = inttoptr i32 %v2_100030a4 to i32*
  store i32 %v0_100030a4, i32* %v3_100030a4, align 4
  %v0_100030a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100030a8 = load i32, i32* @r30, align 4
  %v2_100030a8 = add i32 %v1_100030a8, 12
  %v3_100030a8 = inttoptr i32 %v2_100030a8 to i32*
  store i32 %v0_100030a8, i32* %v3_100030a8, align 4
  %v0_100030ac = call i32 @function_10005cf4()
  %v1_100030ac = trunc i32 %v0_100030ac to i16
  store i32 %v1_10002ce4, i32* %r9.global-to-local, align 4
  %v3_100030b4 = load i32, i32* @r30, align 4
  %v4_100030b4 = add i32 %v3_100030b4, 14
  %v5_100030b4 = inttoptr i32 %v4_100030b4 to i16*
  store i16 %v1_100030ac, i16* %v5_100030b4, align 2
  %v0_100030b8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100030b8, i32* @r4, align 4
  %v0_100030bc = load i32, i32* @r31, align 4
  %v1_100030bc = add i32 %v0_100030bc, 40
  store i32 %v1_100030bc, i32* @r3, align 4
  %v0_100030c0 = load i32, i32* @r30, align 4
  %v1_100030c0 = add i32 %v0_100030c0, 12
  %v2_100030c0 = inttoptr i32 %v1_100030c0 to i32*
  %v3_100030c0 = load i32, i32* %v2_100030c0, align 4
  store i32 %v3_100030c0, i32* %r0.global-to-local, align 4
  %v1_100030c4 = call i32 @__asm_rlwimi(i32 %v1_10002ce4, i32 21, i32 10, i32 10)
  store i32 %v1_100030c4, i32* %r0.global-to-local, align 4
  %v1_100030c8 = call i32 @__asm_rlwimi(i32 %v1_10002d08, i32 20, i32 11, i32 11)
  store i32 %v1_100030c8, i32* %r0.global-to-local, align 4
  %v1_100030cc = call i32 @__asm_rlwimi(i32 %v1_10002d20, i32 19, i32 12, i32 12)
  store i32 %v1_100030cc, i32* %r0.global-to-local, align 4
  %v1_100030d0 = call i32 @__asm_rlwimi(i32 %v1_10002d38, i32 18, i32 13, i32 13)
  store i32 %v1_100030d0, i32* %r0.global-to-local, align 4
  %v1_100030d4 = call i32 @__asm_rlwimi(i32 %v1_10002d50, i32 17, i32 14, i32 14)
  store i32 %v1_100030d4, i32* %r0.global-to-local, align 4
  %v1_100030d8 = call i32 @__asm_rlwimi(i32 %v1_10002d68, i32 16, i32 15, i32 15)
  store i32 %v1_100030d8, i32* %r0.global-to-local, align 4
  %v1_100030dc = load i32, i32* @r30, align 4
  %v2_100030dc = add i32 %v1_100030dc, 12
  %v3_100030dc = inttoptr i32 %v2_100030dc to i32*
  store i32 %v1_100030d8, i32* %v3_100030dc, align 4
  %v0_100030e0 = call i32 @function_10005ec8()
  store i32 %v0_100030e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100030e4

dec_label_pc_100030e4:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0, %dec_label_pc_10003050
  %v3_100030e4 = load i32, i32* %stack_var_-408, align 4
  %v1_100030e8 = add i32 %v3_100030e4, 1
  store i32 %v1_100030e8, i32* %r9.global-to-local, align 4
  %v1_100030ec = load i32, i32* %r21.global-to-local, align 4
  %v2_100030ec = icmp slt i32 %v1_100030e8, %v1_100030ec
  %v4_100030ec = icmp eq i32 %v1_100030e8, %v1_100030ec
  store i1 %v4_100030ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100030e8, i32* %stack_var_-408, align 4
  br i1 %v2_100030ec, label %dec_label_pc_10002df0, label %dec_label_pc_100030f8.loopexit

dec_label_pc_100030f8.loopexit:                   ; preds = %dec_label_pc_100030e4
  %v0_10003104.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003104.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100030f8

dec_label_pc_100030f8:                            ; preds = %dec_label_pc_100030f8.loopexit, %dec_label_pc_10002dd0
  %v1_10003104.pre = phi i1 [ %v1_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v1_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_10003104.pre = phi i1 [ %v0_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v3_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_100030f8 = load i32, i32* %r27.global-to-local, align 4
  %v3_100030f8 = icmp eq i32 %v0_100030f8, 0
  store i1 %v3_100030f8, i1* %cr2_eq.global-to-local, align 1
  %v0_100030fc = load i32, i32* %r25.global-to-local, align 4
  %v1_100030fc = add i32 %v0_100030fc, 40
  store i32 %v1_100030fc, i32* %r26.global-to-local, align 4
  %v1_10003100 = add i32 %v0_100030fc, 20
  store i32 %v1_10003100, i32* @r31, align 4
  br label %dec_label_pc_10003104.outer

dec_label_pc_10003104.outer:                      ; preds = %dec_label_pc_100031d8, %dec_label_pc_100030f8
  %v1_10003104.ph = phi i1 [ %v1_10003104.pre, %dec_label_pc_100030f8 ], [ %v1_100031d8, %dec_label_pc_100031d8 ]
  %v0_10003104.ph = phi i1 [ %v0_10003104.pre, %dec_label_pc_100030f8 ], [ %v0_100031d8, %dec_label_pc_100031d8 ]
  %v2_10003104 = or i1 %v1_10003104.ph, %v0_10003104.ph
  br label %dec_label_pc_10003104

dec_label_pc_10003104:                            ; preds = %dec_label_pc_10003104.outer, %dec_label_pc_10003104
  br i1 %v2_10003104, label %dec_label_pc_10003104, label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10003104, %dec_label_pc_100031d8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003118 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003118 = icmp eq i32 %v0_10003118, 65535
  store i1 %v4_10003118, i1* %cr4_eq.global-to-local, align 1
  %v0_1000311c = load i32, i32* @r31, align 4
  %v1_1000311c = urem i32 %v0_1000311c, 65536
  store i32 %v1_1000311c, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003128

dec_label_pc_10003128:                            ; preds = %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, %dec_label_pc_10003108
  %v0_10003134 = phi i1 [ %v0_10003134.pre, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ %v4_10003118, %dec_label_pc_10003108 ]
  %v0_10003128 = phi i32 [ %v1_100031c8, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ 0, %dec_label_pc_10003108 ]
  %v1_10003128 = mul i32 %v0_10003128, 4
  store i32 %v1_10003128, i32* %r0.global-to-local, align 4
  %v0_1000312c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000312c = add i32 %v0_1000312c, %v1_10003128
  %v3_1000312c = inttoptr i32 %v2_1000312c to i32*
  %v4_1000312c = load i32, i32* %v3_1000312c, align 4
  store i32 %v4_1000312c, i32* @r29, align 4
  %v1_10003130 = add i32 %v4_1000312c, 20
  store i32 %v1_10003130, i32* %r28.global-to-local, align 4
  br i1 %v0_10003134, label %dec_label_pc_100031e0, label %dec_label_pc_10003138

dec_label_pc_10003138:                            ; preds = %dec_label_pc_10003128
  %v1_10003138 = add i32 %v4_1000312c, 40
  store i32 %v1_10003138, i32* @r3, align 4
  %v0_1000313c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000313c, i32* @r4, align 4
  %v0_10003140 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003140, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_10003144:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0, %dec_label_pc_100031f4
  %v2_10003144 = phi i32 [ %v4_1000312c, %dec_label_pc_10003138 ], [ %v0_100031ec, %dec_label_pc_100031e0 ], [ %v2_10003144.pre, %dec_label_pc_100031f4 ]
  %v0_10003144 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003144 = trunc i32 %v0_10003144 to i16
  %v3_10003144 = add i32 %v2_10003144, 10
  %v4_10003144 = inttoptr i32 %v3_10003144 to i16*
  store i16 %v1_10003144, i16* %v4_10003144, align 2
  %v0_1000314c = load i32, i32* @r29, align 4
  store i32 %v0_1000314c, i32* @r3, align 4
  %v2_10003150 = call i32 @function_100043cc(i32 %v0_1000314c, i32 20)
  %v3_10003150 = trunc i32 %v2_10003150 to i16
  store i32 %v2_10003150, i32* %r3.global-to-local, align 4
  %v3_10003154 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003154, i32* %r9.global-to-local, align 4
  %v3_10003158 = load i32, i32* @r29, align 4
  %v4_10003158 = add i32 %v3_10003158, 10
  %v5_10003158 = inttoptr i32 %v4_10003158 to i16*
  store i16 %v3_10003150, i16* %v5_10003158, align 2
  %v0_1000315c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000315c, i32* @r4, align 4
  %v0_10003160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003160 = mul i32 %v0_10003160, 16
  store i32 %v1_10003160, i32* %r9.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003164 = trunc i32 %v0_10003164 to i16
  %v3_10003164 = add i32 %v0_1000315c, 16
  %v4_10003164 = inttoptr i32 %v3_10003164 to i16*
  store i16 %v1_10003164, i16* %v4_10003164, align 2
  %v0_10003168 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003168 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003168 = add i32 %v1_10003168, %v0_10003168
  store i32 %v2_10003168, i32* %r9.global-to-local, align 4
  %v0_1000316c = load i32, i32* @r30, align 4
  %v1_10003170 = add i32 %v2_10003168, 4
  %v2_10003170 = inttoptr i32 %v1_10003170 to i32*
  %v3_10003170 = load i32, i32* %v2_10003170, align 4
  store i32 %v3_10003170, i32* %r11.global-to-local, align 4
  %v0_10003174 = load i32, i32* @r31, align 4
  %v0_10003178 = load i32, i32* @r29, align 4
  store i32 %v0_10003178, i32* %r3.global-to-local, align 4
  %v1_1000317c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000317c = add i32 %v1_1000317c, 4
  %v3_1000317c = inttoptr i32 %v2_1000317c to i32*
  store i32 %v3_10003170, i32* %v3_1000317c, align 4
  %v0_10003180 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003180 = add i32 %v0_10003180, 1
  store i32 %v1_10003180, i32* %r11.global-to-local, align 4
  %v1_10003184 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003184 = add i32 %v1_10003184, 4
  %v3_10003184 = inttoptr i32 %v2_10003184 to i32*
  store i32 %v1_10003180, i32* %v3_10003184, align 4
  %v0_10003188 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003188 = add i32 %v0_10003188, 8
  %v2_10003188 = inttoptr i32 %v1_10003188 to i32*
  %v3_10003188 = load i32, i32* %v2_10003188, align 4
  store i32 %v3_10003188, i32* %r0.global-to-local, align 4
  %v1_1000318c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000318c = add i32 %v1_1000318c, 8
  %v3_1000318c = inttoptr i32 %v2_1000318c to i32*
  store i32 %v3_10003188, i32* %v3_1000318c, align 4
  %v4_10003190 = call i32 @function_10004430(i32 %v0_10003178, i32 %v0_1000315c, i32 %v0_1000316c, i32 %v0_10003174)
  %v5_10003190 = trunc i32 %v4_10003190 to i16
  store i32 %v4_10003190, i32* %r3.global-to-local, align 4
  %v3_10003194 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003194, i32* %r7.global-to-local, align 4
  %v0_10003198 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003198 = add i32 %v0_10003198, 2
  %v2_10003198 = inttoptr i32 %v1_10003198 to i16*
  %v3_10003198 = load i16, i16* %v2_10003198, align 2
  %v4_10003198 = zext i16 %v3_10003198 to i32
  store i32 %v4_10003198, i32* %r0.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r29, align 4
  %v1_100031a0 = mul i32 %v3_10003194, 24
  store i32 %v1_100031a0, i32* %r7.global-to-local, align 4
  %v4_100031a4 = add i32 %v0_10003198, 16
  %v5_100031a4 = inttoptr i32 %v4_100031a4 to i16*
  store i16 %v5_10003190, i16* %v5_100031a4, align 2
  %v0_100031a8 = load i32, i32* %r26.global-to-local, align 4
  %v0_100031ac = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100031ac, i32* %r3.global-to-local, align 4
  %v0_100031b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100031b0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100031b0 = add i32 %v1_100031b0, %v0_100031b0
  store i32 %v2_100031b0, i32* %r7.global-to-local, align 4
  %v0_100031b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100031b8 = trunc i32 %v0_100031b8 to i16
  %v3_100031b8 = add i32 %v2_100031b0, 2
  %v4_100031b8 = inttoptr i32 %v3_100031b8 to i16*
  store i16 %v1_100031b8, i16* %v4_100031b8, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268448196, i32* @lr, align 4
  %v6_100031c0 = call i32 @function_10009320(i32 %v0_100031ac, i32 %v0_1000319c, i32 %v0_100031a8, i32 16384, i32 %v2_100031b0, i32 16)
  store i32 %v6_100031c0, i32* %r3.global-to-local, align 4
  %v3_100031c4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100031c4, i32* %r9.global-to-local, align 4
  %v1_100031c8 = add i32 %v3_100031c4, 1
  store i32 %v1_100031c8, i32* %r0.global-to-local, align 4
  %v1_100031cc = load i32, i32* %r21.global-to-local, align 4
  %v2_100031cc = icmp slt i32 %v1_100031c8, %v1_100031cc
  %v4_100031cc = icmp eq i32 %v1_100031c8, %v1_100031cc
  store i1 %v4_100031cc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100031c8, i32* %stack_var_-408, align 4
  br i1 %v2_100031cc, label %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, label %dec_label_pc_100031d8

dec_label_pc_10003144.dec_label_pc_10003128_crit_edge: ; preds = %dec_label_pc_10003144
  %v0_10003134.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003128

dec_label_pc_100031d8:                            ; preds = %dec_label_pc_10003144
  %v0_100031d8 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100031d8 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100031d8 = or i1 %v0_100031d8, %v1_100031d8
  br i1 %v2_100031d8, label %dec_label_pc_10003104.outer, label %dec_label_pc_10003108

dec_label_pc_100031e0:                            ; preds = %dec_label_pc_10003128
  %v0_100031e0 = call i32 @function_10005cf4()
  %v1_100031e0 = trunc i32 %v0_100031e0 to i16
  %v0_100031e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100031e4, i32* @r4, align 4
  %v3_100031e8 = load i32, i32* @r29, align 4
  %v4_100031e8 = add i32 %v3_100031e8, 4
  %v5_100031e8 = inttoptr i32 %v4_100031e8 to i16*
  store i16 %v1_100031e0, i16* %v5_100031e8, align 2
  %v0_100031ec = load i32, i32* @r29, align 4
  %v1_100031ec = add i32 %v0_100031ec, 40
  store i32 %v1_100031ec, i32* @r3, align 4
  %v0_100031f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100031f0, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_100031f4:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0
  %v0_100031f4 = call i32 @function_10005ec8()
  store i32 %v0_100031f4, i32* %r3.global-to-local, align 4
  %v2_10003144.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003144

; uselistorder directives
  uselistorder i32 %v0_100031ec, { 1, 0 }
  uselistorder i1 %v1_100031d8, { 1, 0 }
  uselistorder i1 %v0_100031d8, { 1, 0 }
  uselistorder i32 %v1_100031c8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003190, { 1, 0 }
  uselistorder i32 %v0_1000315c, { 1, 0, 2 }
  uselistorder i32 %v2_10003150, { 1, 0 }
  uselistorder i32 %v1_10003128, { 1, 0 }
  uselistorder i32 %v1_100030e8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000306c, { 1, 0, 2 }
  uselistorder i32 %v1_10003068, { 1, 0 }
  uselistorder i32 %v1_10003000, { 1, 0 }
  uselistorder i32 %v1_10002fcc, { 1, 0 }
  uselistorder i32 %v0_10002f4c, { 1, 0 }
  uselistorder i32 %v2_10002f40, { 1, 2, 0 }
  uselistorder i1 %v4_10002ec4, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002f24, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10002f00, { 1, 0 }
  uselistorder i32 %v1_10002ca8, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i32 268447236, { 1, 0 }
  uselistorder label %dec_label_pc_100031f4, { 1, 0 }
  uselistorder label %dec_label_pc_10003144, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_10003104, { 1, 0 }
  uselistorder label %dec_label_pc_100030e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003050, { 1, 0 }
  uselistorder label %dec_label_pc_10002f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002ee0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10002e10, { 1, 0 }
}

define i32 @function_100031fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100031fc:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10003200 = load i32, i32* @lr, align 4
  store i32 %v0_10003200, i32* %r0.global-to-local, align 4
  %v0_10003204 = call i32 @__asm_mfcr()
  store i32 %v0_10003204, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10003214 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003204, i32* %r21.global-to-local, align 4
  %v0_1000324c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003254 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448368, i32* @lr, align 4
  %v2_1000326c = call i32 @function_100096f8(i32 16, i32 16)
  store i32 %v2_1000326c, i32* %r22.global-to-local, align 4
  %v0_10003278 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003278, i32* %r3.global-to-local, align 4
  store i32 268448384, i32* @lr, align 4
  %v2_1000327c = call i32 @function_100096f8(i32 %v0_10003278, i32 4)
  %v0_10003280 = load i32, i32* @r28, align 4
  store i32 %v2_1000327c, i32* %r23.global-to-local, align 4
  %v0_10003290 = load i32, i32* @r29, align 4
  store i32 %v0_10003290, i32* %r3.global-to-local, align 4
  store i32 268448408, i32* @lr, align 4
  %v4_10003294 = inttoptr i32 %v0_10003280 to i32*
  %v5_10003294 = call i32 @function_100006a8(i32 %v0_10003290, i32* %v4_10003294, i32 2, i32 0)
  %v5_100032a4 = trunc i32 %v5_10003294 to i8
  %v0_100032ac = load i32, i32* @r28, align 4
  %v0_100032b0 = load i32, i32* @r29, align 4
  store i32 %v0_100032b0, i32* %r3.global-to-local, align 4
  store i32 268448440, i32* @lr, align 4
  %v4_100032b4 = inttoptr i32 %v0_100032ac to i32*
  %v5_100032b4 = call i32 @function_100006a8(i32 %v0_100032b0, i32* %v4_100032b4, i32 3, i32 65535)
  %v0_100032b8 = load i32, i32* @r28, align 4
  store i32 %v5_100032b4, i32* @r31, align 4
  %v0_100032c8 = load i32, i32* @r29, align 4
  store i32 %v0_100032c8, i32* %r3.global-to-local, align 4
  store i32 268448464, i32* @lr, align 4
  %v4_100032cc = inttoptr i32 %v0_100032b8 to i32*
  %v5_100032cc = call i32 @function_100006a8(i32 %v0_100032c8, i32* %v4_100032cc, i32 4, i32 64)
  %v0_100032d0 = load i32, i32* @r28, align 4
  %v5_100032dc = trunc i32 %v5_100032cc to i8
  %v0_100032e4 = load i32, i32* @r29, align 4
  store i32 %v0_100032e4, i32* %r3.global-to-local, align 4
  store i32 268448492, i32* @lr, align 4
  %v4_100032e8 = inttoptr i32 %v0_100032d0 to i32*
  %v5_100032e8 = call i32 @function_100006a8(i32 %v0_100032e4, i32* %v4_100032e8, i32 5, i32 1)
  %v1_100032f0 = urem i32 %v5_100032e8, 256
  %v0_100032fc = load i32, i32* @r28, align 4
  %v0_10003304 = load i32, i32* @r29, align 4
  store i32 %v0_10003304, i32* %r3.global-to-local, align 4
  store i32 268448524, i32* @lr, align 4
  %v4_10003308 = inttoptr i32 %v0_100032fc to i32*
  %v5_10003308 = call i32 @function_100006a8(i32 %v0_10003304, i32* %v4_10003308, i32 7, i32 65535)
  %v0_1000330c = load i32, i32* @r28, align 4
  %v5_10003318 = trunc i32 %v5_10003308 to i16
  %v0_10003320 = load i32, i32* @r29, align 4
  store i32 %v0_10003320, i32* %r3.global-to-local, align 4
  store i32 268448552, i32* @lr, align 4
  %v4_10003324 = inttoptr i32 %v0_1000330c to i32*
  %v5_10003324 = call i32 @function_100006a8(i32 %v0_10003320, i32* %v4_10003324, i32 11, i32 0)
  %v0_10003328 = load i32, i32* @r28, align 4
  %v1_1000332c = urem i32 %v5_10003324, 256
  %v0_1000333c = load i32, i32* @r29, align 4
  store i32 %v0_1000333c, i32* %r3.global-to-local, align 4
  store i32 268448580, i32* @lr, align 4
  %v4_10003340 = inttoptr i32 %v0_10003328 to i32*
  %v5_10003340 = call i32 @function_100006a8(i32 %v0_1000333c, i32* %v4_10003340, i32 12, i32 1)
  %v0_10003344 = load i32, i32* @r28, align 4
  %v1_10003350 = urem i32 %v5_10003340, 256
  %v0_10003354 = load i32, i32* @r29, align 4
  store i32 %v0_10003354, i32* %r3.global-to-local, align 4
  store i32 268448604, i32* @lr, align 4
  %v4_10003358 = inttoptr i32 %v0_10003344 to i32*
  %v5_10003358 = call i32 @function_100006a8(i32 %v0_10003354, i32* %v4_10003358, i32 13, i32 1)
  %v0_1000335c = load i32, i32* @r28, align 4
  %v1_10003368 = urem i32 %v5_10003358, 256
  %v0_1000336c = load i32, i32* @r29, align 4
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  store i32 268448628, i32* @lr, align 4
  %v4_10003370 = inttoptr i32 %v0_1000335c to i32*
  %v5_10003370 = call i32 @function_100006a8(i32 %v0_1000336c, i32* %v4_10003370, i32 14, i32 0)
  %v0_10003374 = load i32, i32* @r28, align 4
  %v1_10003380 = urem i32 %v5_10003370, 256
  %v0_10003384 = load i32, i32* @r29, align 4
  store i32 %v0_10003384, i32* %r3.global-to-local, align 4
  store i32 268448652, i32* @lr, align 4
  %v4_10003388 = inttoptr i32 %v0_10003374 to i32*
  %v5_10003388 = call i32 @function_100006a8(i32 %v0_10003384, i32* %v4_10003388, i32 15, i32 0)
  %v0_1000338c = load i32, i32* @r28, align 4
  %v1_10003398 = urem i32 %v5_10003388, 256
  %v0_1000339c = load i32, i32* @r29, align 4
  store i32 %v0_1000339c, i32* %r3.global-to-local, align 4
  store i32 268448676, i32* @lr, align 4
  %v4_100033a0 = inttoptr i32 %v0_1000338c to i32*
  %v5_100033a0 = call i32 @function_100006a8(i32 %v0_1000339c, i32* %v4_100033a0, i32 16, i32 0)
  %v0_100033ac = load i32, i32* @r28, align 4
  %v1_100033b0 = urem i32 %v5_100033a0, 256
  %v0_100033b4 = load i32, i32* @r29, align 4
  store i32 %v0_100033b4, i32* %r3.global-to-local, align 4
  store i32 268448700, i32* @lr, align 4
  %v4_100033b8 = inttoptr i32 %v0_100033ac to i32*
  %v5_100033b8 = call i32 @function_100006a8(i32 %v0_100033b4, i32* %v4_100033b8, i32 0, i32 768)
  %v0_100033bc = load i32, i32* @r28, align 4
  store i32 %v5_100033b8, i32* %r25.global-to-local, align 4
  %v0_100033cc = load i32, i32* @r29, align 4
  store i32 %v0_100033cc, i32* %r3.global-to-local, align 4
  store i32 268448724, i32* @lr, align 4
  %v4_100033d0 = inttoptr i32 %v0_100033bc to i32*
  %v5_100033d0 = call i32 @function_100006a8(i32 %v0_100033cc, i32* %v4_100033d0, i32 1, i32 1)
  %v1_100033d8 = urem i32 %v5_100033d0, 256
  store i32 %v1_100033d8, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448744, i32* @lr, align 4
  %v3_100033e4 = call i32 @function_1000939c(i32 2, i32 3, i32 6)
  store i32 %v3_100033e4, i32* %r3.global-to-local, align 4
  %v3_100033e8 = icmp eq i32 %v3_100033e4, -1
  store i1 %v3_100033e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100033e4, i32* %r24.global-to-local, align 4
  br i1 %v3_100033e8, label %dec_label_pc_100035a8, label %dec_label_pc_100033f4

dec_label_pc_100033f4:                            ; preds = %dec_label_pc_100031fc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003400 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268448784, i32* @lr, align 4
  %v4_1000340c = call i32 @function_10009360(i32 0, i32 3, i32 %v2_10003400, i32 4)
  store i32 %v4_1000340c, i32* %r3.global-to-local, align 4
  %v3_10003410 = icmp eq i32 %v4_1000340c, -1
  store i1 %v3_10003410, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003410, label %dec_label_pc_100035a0, label %dec_label_pc_10003418

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033f4
  %v0_10003418 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003418 = icmp slt i32 %v0_10003418, 0
  %v3_10003418 = icmp eq i32 %v0_10003418, 0
  store i1 %v1_10003418, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10003418, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003424 = load i32, i32* @r31, align 4
  %v1_10003424 = urem i32 %v0_10003424, 65536
  store i32 %v1_10003424, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10003418, 1
  br i1 %tmp49, label %dec_label_pc_10003740, label %dec_label_pc_1000342c

dec_label_pc_1000342c:                            ; preds = %dec_label_pc_10003418
  %v4_1000342c = sext i16 %v5_10003318 to i32
  store i32 %v4_1000342c, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_100034d0 = ptrtoint i32* %stack_var_-368 to i32
  %v2_100034dc = ptrtoint i32* %stack_var_-384 to i32
  %v2_100034e0 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10003518 = zext i16 %tmp13 to i32
  %v1_10003548 = and i32 %tmp, 1179648
  %v3_1000365c = icmp eq i32 %v1_100032f0, 0
  %v4_1000367c = sext i8 %v5_100032a4 to i32
  %v4_10003684 = sext i8 %v5_100032dc to i32
  %v1_1000354c = and i32 %tmp, 327680
  %v3_1000354c = icmp eq i32 %v1_1000354c, 0
  %v4_10003554 = icmp eq i32 %v1_10003548, 1179648
  br label %dec_label_pc_10003438

dec_label_pc_10003438:                            ; preds = %dec_label_pc_1000372c, %dec_label_pc_10003560, %dec_label_pc_1000342c
  %v0_10003438 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003438 = add i32 %v0_10003438, 40
  store i32 %v1_10003438, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_1000344853 = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  store i32 %v3_1000344853, i32* %r3.global-to-local, align 4
  %v3_1000344c55 = icmp eq i32 %v3_1000344853, -1
  store i1 %v3_1000344c55, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000344853, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c55, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003458:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538
  store i32 3, i32* @r4, align 4
  store i32 268448872, i32* @lr, align 4
  %v1_10003464 = call i32 @function_10008598(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10003470 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003470, i32* %r3.global-to-local, align 4
  store i32 268448892, i32* @lr, align 4
  %v2_10003478 = call i32 @function_10008598(i32 %v0_10003470)
  store i32 %v2_10003478, i32* %r3.global-to-local, align 4
  %v3_1000347c = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003484 = mul i32 %v3_1000347c, 24
  store i32 %v1_10003484, i32* %r0.global-to-local, align 4
  %v0_1000348c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000348c = add i32 %v0_1000348c, %v1_10003484
  store i32 %v2_1000348c, i32* %r11.global-to-local, align 4
  %v1_10003490 = add i32 %v2_1000348c, 20
  %v2_10003490 = inttoptr i32 %v1_10003490 to i8*
  %v3_10003490 = load i8, i8* %v2_10003490, align 1
  %v4_10003490 = zext i8 %v3_10003490 to i32
  store i32 %v4_10003490, i32* %r9.global-to-local, align 4
  %v3_10003494 = icmp eq i8 %v3_10003490, 31
  store i1 %v3_10003494, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10003490, 32
  %v1_1000356c = add i32 %v2_1000348c, 16
  %v2_1000356c = inttoptr i32 %v1_1000356c to i32*
  %v3_1000356c = load i32, i32* %v2_1000356c, align 4
  br i1 %tmp50, label %dec_label_pc_1000356c, label %dec_label_pc_1000349c

dec_label_pc_1000349c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r0.global-to-local, align 4
  %v0_100034a4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100034a4, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_100034a8:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.0 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  store i32 %v4_1000342c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100034b0:                            ; preds = %dec_label_pc_10003594, %dec_label_pc_100034a8
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10003594 ], [ %stack_var_-396.0, %dec_label_pc_100034a8 ]
  %storemerge = phi i16 [ %v1_10003594, %dec_label_pc_10003594 ], [ %v5_10003318, %dec_label_pc_100034a8 ]
  %v0_100034b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100034b8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100034c0.23 to i32), i32* @lr, align 4
  %v0_100034bc = call i32 @function_1000919c()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448968, i32* @lr, align 4
  %v0_100034c4 = call i32 @function_10008a50()
  store i32 %v0_100034c4, i32* %r3.global-to-local, align 4
  store i32 %v0_100034c4, i32* @r31, align 4
  %v4_1000350c = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_1000351c = zext i16 %storemerge to i32
  %v4_10003520 = icmp eq i16 %storemerge, %tmp13
  %v4_1000350c.not = xor i1 %v4_1000350c, true
  br label %dec_label_pc_100034cc

dec_label_pc_100034cc:                            ; preds = %dec_label_pc_10003528, %dec_label_pc_100034b0
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100034dc, i32* %r7.global-to-local, align 4
  store i32 %v2_100034e0, i32* %r8.global-to-local, align 4
  %v0_100034e4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100034e4, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268449008, i32* @lr, align 4
  %v6_100034ec = call i32 @function_100092a8(i32 %v0_100034e4, i32 %v2_100034d0, i32 256, i32 16384, i32 %v2_100034dc, i32 %v2_100034e0)
  store i32 %v6_100034ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100034f8 = icmp eq i32 %v6_100034ec, -1
  store i1 %v3_100034f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100034f8, label %dec_label_pc_100035a8, label %dec_label_pc_10003504

dec_label_pc_10003504:                            ; preds = %dec_label_pc_100034cc
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_1000350c, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_100034ec, 41
  %or.cond = or i1 %tmp51, %v4_1000350c.not
  br i1 %or.cond, label %dec_label_pc_10003528, label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_10003504
  store i32 %v4_10003518, i32* %r0.global-to-local, align 4
  store i32 %v4_1000351c, i32* %r8.global-to-local, align 4
  store i1 %v4_10003520, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003520, label %dec_label_pc_10003544, label %dec_label_pc_10003528

dec_label_pc_10003528:                            ; preds = %dec_label_pc_10003504, %dec_label_pc_1000355c, %dec_label_pc_10003518
  store i32 268449068, i32* @lr, align 4
  %v0_10003528 = call i32 @function_10008a50()
  %v0_1000352c = load i32, i32* @r31, align 4
  %v2_1000352c = sub i32 %v0_10003528, %v0_1000352c
  store i32 %v2_1000352c, i32* %r3.global-to-local, align 4
  %v3_10003530 = icmp eq i32 %v2_1000352c, 10
  store i1 %v3_10003530, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_1000352c, 11
  br i1 %tmp52, label %dec_label_pc_100034cc, label %dec_label_pc_10003538

dec_label_pc_10003538:                            ; preds = %dec_label_pc_10003528
  %v0_10003538 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003538, i32* %r3.global-to-local, align 4
  store i32 268449088, i32* @lr, align 4
  %v0_1000353c = call i32 @function_10008680()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_10003448 = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  store i32 %v3_10003448, i32* %r3.global-to-local, align 4
  %v3_1000344c = icmp eq i32 %v3_10003448, -1
  store i1 %v3_1000344c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003448, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003544:                            ; preds = %dec_label_pc_10003518
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10003548, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10003554, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003554, label %dec_label_pc_10003608, label %dec_label_pc_1000355c

dec_label_pc_1000355c:                            ; preds = %dec_label_pc_10003544
  br i1 %v3_1000354c, label %dec_label_pc_10003528, label %dec_label_pc_10003560

dec_label_pc_10003560:                            ; preds = %dec_label_pc_1000355c
  %v0_10003560 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003560, i32* %r3.global-to-local, align 4
  store i32 268449128, i32* @lr, align 4
  %v0_10003564 = call i32 @function_10008680()
  store i32 %v0_10003564, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003438

dec_label_pc_1000356c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r29.global-to-local, align 4
  %v0_10003570 = call i32 @function_10005cf4()
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  %v3_10003574 = load i32, i32* %stack_var_-408, align 4
  %v1_10003578 = mul i32 %v3_10003574, 24
  %v1_1000357c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000357c = add i32 %v1_1000357c, %v1_10003578
  store i32 %v2_1000357c, i32* %r9.global-to-local, align 4
  %v1_10003580 = add i32 %v2_1000357c, 20
  %v2_10003580 = inttoptr i32 %v1_10003580 to i8*
  %v3_10003580 = load i8, i8* %v2_10003580, align 1
  %v4_10003580 = zext i8 %v3_10003580 to i32
  store i32 %v4_10003580, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10003580, 64
  %v2_10003584 = zext i8 %tmp56 to i32
  %v3_10003584 = lshr i32 %v0_10003570, %v2_10003584
  store i32 %v3_10003584, i32* %r3.global-to-local, align 4
  %v0_10003588 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003588 = add i32 %v3_10003584, %v0_10003588
  store i32 %v2_10003588, i32* %r29.global-to-local, align 4
  %v0_10003590 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003590, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_10003594:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.2 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  %v0_10003594 = call i32 @function_10005cf4()
  %v1_10003594 = trunc i32 %v0_10003594 to i16
  store i32 %v0_10003594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100035a0:                            ; preds = %dec_label_pc_100033f4
  %v0_100035a0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100035a0, i32* %r3.global-to-local, align 4
  store i32 268449192, i32* @lr, align 4
  %v0_100035a4 = call i32 @function_10008680()
  store i32 %v0_100035a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100035a8

dec_label_pc_100035a8:                            ; preds = %dec_label_pc_100034cc, %dec_label_pc_100031fc, %dec_label_pc_100035a0
  store i32 %v0_10003214, i32* %r0.global-to-local, align 4
  %v1_100035bc = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003204)
  store i32 %v0_1000324c, i32* %r28.global-to-local, align 4
  store i32 %v0_10003254, i32* %r29.global-to-local, align 4
  %v0_10003604 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003604

dec_label_pc_10003608:                            ; preds = %dec_label_pc_10003544
  %v3_10003608 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003608, i32* %r29.global-to-local, align 4
  %v0_1000360c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000360c, i32* @r3, align 4
  %v0_10003610 = load i32, i32* @r30, align 4
  %v1_10003610 = add i32 %v0_10003610, 2
  %v2_10003610 = inttoptr i32 %v1_10003610 to i16*
  %v3_10003610 = load i16, i16* %v2_10003610, align 2
  %v4_10003610 = zext i16 %v3_10003610 to i32
  store i32 %v4_10003610, i32* %r11.global-to-local, align 4
  %v1_10003614 = mul i32 %v3_10003608, 16
  store i32 %v1_10003614, i32* %r9.global-to-local, align 4
  %v1_10003618 = mul i32 %v3_10003608, 4
  store i32 %v1_10003618, i32* @r29, align 4
  %v1_1000361c = load i32, i32* %r22.global-to-local, align 4
  %v3_1000361c = add i32 %v1_1000361c, %v1_10003614
  %v4_1000361c = inttoptr i32 %v3_1000361c to i32*
  store i32 %tmp14, i32* %v4_1000361c, align 4
  %v0_10003620 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003620 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003620 = add i32 %v1_10003620, %v0_10003620
  store i32 %v2_10003620, i32* %r9.global-to-local, align 4
  %v0_10003624 = load i32, i32* %r8.global-to-local, align 4
  %v1_10003624 = trunc i32 %v0_10003624 to i16
  %v3_10003624 = add i32 %v2_10003620, 14
  %v4_10003624 = inttoptr i32 %v3_10003624 to i16*
  store i16 %v1_10003624, i16* %v4_10003624, align 2
  %v0_10003628 = load i32, i32* @r30, align 4
  %v1_10003628 = add i32 %v0_10003628, 4
  %v2_10003628 = inttoptr i32 %v1_10003628 to i32*
  %v3_10003628 = load i32, i32* %v2_10003628, align 4
  store i32 %v3_10003628, i32* %r0.global-to-local, align 4
  %v0_1000362c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000362c = trunc i32 %v0_1000362c to i16
  %v2_1000362c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000362c = add i32 %v2_1000362c, 12
  %v4_1000362c = inttoptr i32 %v3_1000362c to i16*
  store i16 %v1_1000362c, i16* %v4_1000362c, align 2
  %v0_10003630 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003630 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003630 = add i32 %v1_10003630, 4
  %v3_10003630 = inttoptr i32 %v2_10003630 to i32*
  store i32 %v0_10003630, i32* %v3_10003630, align 4
  %v0_10003634 = load i32, i32* @r30, align 4
  %v1_10003634 = add i32 %v0_10003634, 8
  %v2_10003634 = inttoptr i32 %v1_10003634 to i32*
  %v3_10003634 = load i32, i32* %v2_10003634, align 4
  store i32 %v3_10003634, i32* %r0.global-to-local, align 4
  %v1_10003638 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003638 = add i32 %v1_10003638, 8
  %v3_10003638 = inttoptr i32 %v2_10003638 to i32*
  store i32 %v3_10003634, i32* %v3_10003638, align 4
  store i32 268449344, i32* @lr, align 4
  %v0_1000363c = call i32 @function_100095a0()
  store i32 %v0_1000363c, i32* %r3.global-to-local, align 4
  %v3_10003640 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003640, i32* %r0.global-to-local, align 4
  %v1_10003644 = load i32, i32* @r29, align 4
  %v2_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003644 = add i32 %v2_10003644, %v1_10003644
  %v4_10003644 = inttoptr i32 %v3_10003644 to i32*
  store i32 %v0_1000363c, i32* %v4_10003644, align 4
  %v0_10003648 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003648 = mul i32 %v0_10003648, 4
  store i32 %v1_10003648, i32* %r0.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000364c = add i32 %v0_1000364c, %v1_10003648
  %v3_1000364c = inttoptr i32 %v2_1000364c to i32*
  %v4_1000364c = load i32, i32* %v3_1000364c, align 4
  store i32 %v4_1000364c, i32* @r31, align 4
  store i32 %v1_100032f0, i32* %r0.global-to-local, align 4
  %v1_10003654 = inttoptr i32 %v4_1000364c to i32*
  %v2_10003654 = load i32, i32* %v1_10003654, align 4
  store i32 %v2_10003654, i32* %r9.global-to-local, align 4
  %v1_10003658 = add i32 %v4_1000364c, 20
  store i32 %v1_10003658, i32* @r30, align 4
  store i1 %v3_1000365c, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10003664 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003664, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1000366c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003670 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003670 = trunc i32 %v0_10003670 to i16
  %v2_10003670 = load i32, i32* @r31, align 4
  %v3_10003670 = add i32 %v2_10003670, 4
  %v4_10003670 = inttoptr i32 %v3_10003670 to i16*
  store i16 %v1_10003670, i16* %v4_10003670, align 2
  %v1_10003674 = load i32, i32* @r31, align 4
  %v2_10003674 = inttoptr i32 %v1_10003674 to i32*
  store i32 %v1_1000366c, i32* %v2_10003674, align 4
  %v0_10003678 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003678 = trunc i32 %v0_10003678 to i16
  %v2_10003678 = load i32, i32* @r31, align 4
  %v3_10003678 = add i32 %v2_10003678, 2
  %v4_10003678 = inttoptr i32 %v3_10003678 to i16*
  store i16 %v1_10003678, i16* %v4_10003678, align 2
  store i32 %v4_1000367c, i32* %r9.global-to-local, align 4
  %v2_10003680 = load i32, i32* @r31, align 4
  %v3_10003680 = add i32 %v2_10003680, 1
  %v4_10003680 = inttoptr i32 %v3_10003680 to i8*
  store i8 %v5_100032a4, i8* %v4_10003680, align 1
  store i32 %v4_10003684, i32* %r0.global-to-local, align 4
  %v2_10003688 = load i32, i32* @r31, align 4
  %v3_10003688 = add i32 %v2_10003688, 8
  %v4_10003688 = inttoptr i32 %v3_10003688 to i8*
  store i8 %v5_100032dc, i8* %v4_10003688, align 1
  %v0_1000368c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000368c, label %dec_label_pc_10003698, label %dec_label_pc_10003690

dec_label_pc_10003690:                            ; preds = %dec_label_pc_10003608
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003694 = load i32, i32* @r31, align 4
  %v3_10003694 = add i32 %v2_10003694, 6
  %v4_10003694 = inttoptr i32 %v3_10003694 to i16*
  store i16 16384, i16* %v4_10003694, align 2
  br label %dec_label_pc_10003698

dec_label_pc_10003698:                            ; preds = %dec_label_pc_10003608, %dec_label_pc_10003690
  %v2_100036a0 = load i32, i32* @r31, align 4
  %v3_100036a0 = add i32 %v2_100036a0, 9
  %v4_100036a0 = inttoptr i32 %v3_100036a0 to i8*
  store i8 6, i8* %v4_100036a0, align 1
  %v3_100036a4 = load i32, i32* @global_var_1001b718.16, align 4
  store i32 %v3_100036a4, i32* %r0.global-to-local, align 4
  %v1_100036a8 = load i32, i32* @r31, align 4
  %v2_100036a8 = add i32 %v1_100036a8, 12
  %v3_100036a8 = inttoptr i32 %v2_100036a8 to i32*
  store i32 %v3_100036a4, i32* %v3_100036a8, align 4
  %v3_100036ac = load i32, i32* %stack_var_-408, align 4
  %v1_100036b0 = mul i32 %v3_100036ac, 16
  store i32 %v1_100036b0, i32* %r9.global-to-local, align 4
  %v1_100036b4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100036b4 = add i32 %v1_100036b4, %v1_100036b0
  %v3_100036b4 = inttoptr i32 %v2_100036b4 to i32*
  %v4_100036b4 = load i32, i32* %v3_100036b4, align 4
  store i32 %v4_100036b4, i32* %r0.global-to-local, align 4
  store i32 %v2_100036b4, i32* %r9.global-to-local, align 4
  %v1_100036bc = add i32 %v2_100036b4, 12
  %v2_100036bc = inttoptr i32 %v1_100036bc to i16*
  %v3_100036bc = load i16, i16* %v2_100036bc, align 2
  %v4_100036bc = zext i16 %v3_100036bc to i32
  store i32 %v4_100036bc, i32* %r11.global-to-local, align 4
  %v1_100036c0 = load i32, i32* @r31, align 4
  %v2_100036c0 = add i32 %v1_100036c0, 16
  %v3_100036c0 = inttoptr i32 %v2_100036c0 to i32*
  store i32 %v4_100036b4, i32* %v3_100036c0, align 4
  %v0_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* @r31, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 20
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v0_100036c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036c8 = add i32 %v0_100036c8, 8
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  %v3_100036c8 = load i32, i32* %v2_100036c8, align 4
  store i32 %v3_100036c8, i32* %r0.global-to-local, align 4
  %v0_100036cc = load i32, i32* @r30, align 4
  %v1_100036cc = add i32 %v0_100036cc, 12
  %v2_100036cc = inttoptr i32 %v1_100036cc to i32*
  %v3_100036cc = load i32, i32* %v2_100036cc, align 4
  store i32 %v3_100036cc, i32* %r11.global-to-local, align 4
  %v2_100036d0 = add i32 %v0_100036cc, 4
  %v3_100036d0 = inttoptr i32 %v2_100036d0 to i32*
  store i32 %v3_100036c8, i32* %v3_100036d0, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_100036d8 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_100036d8, i32* %r11.global-to-local, align 4
  %v0_100036dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036dc = add i32 %v0_100036dc, 14
  %v2_100036dc = inttoptr i32 %v1_100036dc to i16*
  %v3_100036dc = load i16, i16* %v2_100036dc, align 2
  %v4_100036dc = zext i16 %v3_100036dc to i32
  store i32 %v4_100036dc, i32* %r0.global-to-local, align 4
  %v1_100036e0 = add i32 %v0_100036dc, 4
  %v2_100036e0 = inttoptr i32 %v1_100036e0 to i32*
  %v3_100036e0 = load i32, i32* %v2_100036e0, align 4
  store i32 %v3_100036e0, i32* %r10.global-to-local, align 4
  %v1_100036e4 = or i32 %v1_100036d8, 1114112
  store i32 %v1_100036e4, i32* %r11.global-to-local, align 4
  %v2_100036e8 = load i32, i32* @r30, align 4
  %v3_100036e8 = add i32 %v2_100036e8, 2
  %v4_100036e8 = inttoptr i32 %v3_100036e8 to i16*
  store i16 %v3_100036dc, i16* %v4_100036e8, align 2
  %v0_100036ec = load i32, i32* %r10.global-to-local, align 4
  %v1_100036ec = load i32, i32* @r30, align 4
  %v2_100036ec = add i32 %v1_100036ec, 8
  %v3_100036ec = inttoptr i32 %v2_100036ec to i32*
  store i32 %v0_100036ec, i32* %v3_100036ec, align 4
  %v0_100036f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036f0 = load i32, i32* @r30, align 4
  %v2_100036f0 = add i32 %v1_100036f0, 12
  %v3_100036f0 = inttoptr i32 %v2_100036f0 to i32*
  store i32 %v0_100036f0, i32* %v3_100036f0, align 4
  %v0_100036f4 = call i32 @function_10005cf4()
  %v1_100036f4 = trunc i32 %v0_100036f4 to i16
  store i32 %v1_1000332c, i32* %r9.global-to-local, align 4
  %v3_100036fc = load i32, i32* @r30, align 4
  %v4_100036fc = add i32 %v3_100036fc, 14
  %v5_100036fc = inttoptr i32 %v4_100036fc to i16*
  store i16 %v1_100036f4, i16* %v5_100036fc, align 2
  %v0_10003700 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003700, i32* @r4, align 4
  %v0_10003704 = load i32, i32* @r31, align 4
  %v1_10003704 = add i32 %v0_10003704, 40
  store i32 %v1_10003704, i32* @r3, align 4
  %v0_10003708 = load i32, i32* @r30, align 4
  %v1_10003708 = add i32 %v0_10003708, 12
  %v2_10003708 = inttoptr i32 %v1_10003708 to i32*
  %v3_10003708 = load i32, i32* %v2_10003708, align 4
  store i32 %v3_10003708, i32* %r0.global-to-local, align 4
  %v1_1000370c = call i32 @__asm_rlwimi(i32 %v1_1000332c, i32 21, i32 10, i32 10)
  store i32 %v1_1000370c, i32* %r0.global-to-local, align 4
  %v1_10003710 = call i32 @__asm_rlwimi(i32 %v1_10003350, i32 20, i32 11, i32 11)
  store i32 %v1_10003710, i32* %r0.global-to-local, align 4
  %v1_10003714 = call i32 @__asm_rlwimi(i32 %v1_10003368, i32 19, i32 12, i32 12)
  store i32 %v1_10003714, i32* %r0.global-to-local, align 4
  %v1_10003718 = call i32 @__asm_rlwimi(i32 %v1_10003380, i32 18, i32 13, i32 13)
  store i32 %v1_10003718, i32* %r0.global-to-local, align 4
  %v1_1000371c = call i32 @__asm_rlwimi(i32 %v1_10003398, i32 17, i32 14, i32 14)
  store i32 %v1_1000371c, i32* %r0.global-to-local, align 4
  %v1_10003720 = call i32 @__asm_rlwimi(i32 %v1_100033b0, i32 16, i32 15, i32 15)
  store i32 %v1_10003720, i32* %r0.global-to-local, align 4
  %v1_10003724 = load i32, i32* @r30, align 4
  %v2_10003724 = add i32 %v1_10003724, 12
  %v3_10003724 = inttoptr i32 %v2_10003724 to i32*
  store i32 %v1_10003720, i32* %v3_10003724, align 4
  %v0_10003728 = call i32 @function_10005ec8()
  store i32 %v0_10003728, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000372c

dec_label_pc_1000372c:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538, %dec_label_pc_10003698
  %v3_1000372c = load i32, i32* %stack_var_-408, align 4
  %v1_10003730 = add i32 %v3_1000372c, 1
  store i32 %v1_10003730, i32* %r9.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003734 = icmp slt i32 %v1_10003730, %v1_10003734
  %v4_10003734 = icmp eq i32 %v1_10003730, %v1_10003734
  store i1 %v4_10003734, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003730, i32* %stack_var_-408, align 4
  br i1 %v2_10003734, label %dec_label_pc_10003438, label %dec_label_pc_10003740.loopexit

dec_label_pc_10003740.loopexit:                   ; preds = %dec_label_pc_1000372c
  %v0_1000374c.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000374c.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10003740

dec_label_pc_10003740:                            ; preds = %dec_label_pc_10003740.loopexit, %dec_label_pc_10003418
  %v1_1000374c.pre = phi i1 [ %v1_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v1_10003418, %dec_label_pc_10003418 ]
  %v0_1000374c.pre = phi i1 [ %v0_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v3_10003418, %dec_label_pc_10003418 ]
  %v0_10003740 = load i32, i32* %r27.global-to-local, align 4
  %v3_10003740 = icmp eq i32 %v0_10003740, 0
  store i1 %v3_10003740, i1* %cr2_eq.global-to-local, align 1
  %v0_10003744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003744 = add i32 %v0_10003744, 40
  store i32 %v1_10003744, i32* %r26.global-to-local, align 4
  %v1_10003748 = add i32 %v0_10003744, 20
  store i32 %v1_10003748, i32* @r31, align 4
  br label %dec_label_pc_1000374c.outer

dec_label_pc_1000374c.outer:                      ; preds = %dec_label_pc_10003820, %dec_label_pc_10003740
  %v1_1000374c.ph = phi i1 [ %v1_1000374c.pre, %dec_label_pc_10003740 ], [ %v1_10003820, %dec_label_pc_10003820 ]
  %v0_1000374c.ph = phi i1 [ %v0_1000374c.pre, %dec_label_pc_10003740 ], [ %v0_10003820, %dec_label_pc_10003820 ]
  %v2_1000374c = or i1 %v1_1000374c.ph, %v0_1000374c.ph
  br label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_1000374c.outer, %dec_label_pc_1000374c
  br i1 %v2_1000374c, label %dec_label_pc_1000374c, label %dec_label_pc_10003750

dec_label_pc_10003750:                            ; preds = %dec_label_pc_1000374c, %dec_label_pc_10003820
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003760 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003760 = icmp eq i32 %v0_10003760, 65535
  store i1 %v4_10003760, i1* %cr4_eq.global-to-local, align 1
  %v0_10003764 = load i32, i32* @r31, align 4
  %v1_10003764 = urem i32 %v0_10003764, 65536
  store i32 %v1_10003764, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, %dec_label_pc_10003750
  %v0_1000377c = phi i1 [ %v0_1000377c.pre, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ %v4_10003760, %dec_label_pc_10003750 ]
  %v0_10003770 = phi i32 [ %v1_10003810, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ 0, %dec_label_pc_10003750 ]
  %v1_10003770 = mul i32 %v0_10003770, 4
  store i32 %v1_10003770, i32* %r0.global-to-local, align 4
  %v0_10003774 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003774 = add i32 %v0_10003774, %v1_10003770
  %v3_10003774 = inttoptr i32 %v2_10003774 to i32*
  %v4_10003774 = load i32, i32* %v3_10003774, align 4
  store i32 %v4_10003774, i32* @r29, align 4
  %v1_10003778 = add i32 %v4_10003774, 20
  store i32 %v1_10003778, i32* %r28.global-to-local, align 4
  br i1 %v0_1000377c, label %dec_label_pc_10003828, label %dec_label_pc_10003780

dec_label_pc_10003780:                            ; preds = %dec_label_pc_10003770
  %v1_10003780 = add i32 %v4_10003774, 40
  store i32 %v1_10003780, i32* @r3, align 4
  %v0_10003784 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003784, i32* @r4, align 4
  %v0_10003788 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003788, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000378c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828, %dec_label_pc_1000383c
  %v2_1000378c = phi i32 [ %v4_10003774, %dec_label_pc_10003780 ], [ %v0_10003834, %dec_label_pc_10003828 ], [ %v2_1000378c.pre, %dec_label_pc_1000383c ]
  %v0_1000378c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v3_1000378c = add i32 %v2_1000378c, 10
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003794 = load i32, i32* @r29, align 4
  store i32 %v0_10003794, i32* @r3, align 4
  %v2_10003798 = call i32 @function_100043cc(i32 %v0_10003794, i32 20)
  %v3_10003798 = trunc i32 %v2_10003798 to i16
  store i32 %v2_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000379c, i32* %r9.global-to-local, align 4
  %v3_100037a0 = load i32, i32* @r29, align 4
  %v4_100037a0 = add i32 %v3_100037a0, 10
  %v5_100037a0 = inttoptr i32 %v4_100037a0 to i16*
  store i16 %v3_10003798, i16* %v5_100037a0, align 2
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100037a4, i32* @r4, align 4
  %v0_100037a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037a8 = mul i32 %v0_100037a8, 16
  store i32 %v1_100037a8, i32* %r9.global-to-local, align 4
  %v0_100037ac = load i32, i32* %r27.global-to-local, align 4
  %v1_100037ac = trunc i32 %v0_100037ac to i16
  %v3_100037ac = add i32 %v0_100037a4, 16
  %v4_100037ac = inttoptr i32 %v3_100037ac to i16*
  store i16 %v1_100037ac, i16* %v4_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100037b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100037b0 = add i32 %v1_100037b0, %v0_100037b0
  store i32 %v2_100037b0, i32* %r9.global-to-local, align 4
  %v0_100037b4 = load i32, i32* @r30, align 4
  %v1_100037b8 = add i32 %v2_100037b0, 4
  %v2_100037b8 = inttoptr i32 %v1_100037b8 to i32*
  %v3_100037b8 = load i32, i32* %v2_100037b8, align 4
  store i32 %v3_100037b8, i32* %r11.global-to-local, align 4
  %v0_100037bc = load i32, i32* @r31, align 4
  %v0_100037c0 = load i32, i32* @r29, align 4
  store i32 %v0_100037c0, i32* %r3.global-to-local, align 4
  %v1_100037c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037c4 = add i32 %v1_100037c4, 4
  %v3_100037c4 = inttoptr i32 %v2_100037c4 to i32*
  store i32 %v3_100037b8, i32* %v3_100037c4, align 4
  %v0_100037c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100037c8 = add i32 %v0_100037c8, 1
  store i32 %v1_100037c8, i32* %r11.global-to-local, align 4
  %v1_100037cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100037cc = add i32 %v1_100037cc, 4
  %v3_100037cc = inttoptr i32 %v2_100037cc to i32*
  store i32 %v1_100037c8, i32* %v3_100037cc, align 4
  %v0_100037d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037d0 = add i32 %v0_100037d0, 8
  %v2_100037d0 = inttoptr i32 %v1_100037d0 to i32*
  %v3_100037d0 = load i32, i32* %v2_100037d0, align 4
  store i32 %v3_100037d0, i32* %r0.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037d4 = add i32 %v1_100037d4, 8
  %v3_100037d4 = inttoptr i32 %v2_100037d4 to i32*
  store i32 %v3_100037d0, i32* %v3_100037d4, align 4
  %v4_100037d8 = call i32 @function_10004430(i32 %v0_100037c0, i32 %v0_100037a4, i32 %v0_100037b4, i32 %v0_100037bc)
  %v5_100037d8 = trunc i32 %v4_100037d8 to i16
  store i32 %v4_100037d8, i32* %r3.global-to-local, align 4
  %v3_100037dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100037dc, i32* %r7.global-to-local, align 4
  %v0_100037e0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037e0 = add i32 %v0_100037e0, 2
  %v2_100037e0 = inttoptr i32 %v1_100037e0 to i16*
  %v3_100037e0 = load i16, i16* %v2_100037e0, align 2
  %v4_100037e0 = zext i16 %v3_100037e0 to i32
  store i32 %v4_100037e0, i32* %r0.global-to-local, align 4
  %v0_100037e4 = load i32, i32* @r29, align 4
  %v1_100037e8 = mul i32 %v3_100037dc, 24
  store i32 %v1_100037e8, i32* %r7.global-to-local, align 4
  %v4_100037ec = add i32 %v0_100037e0, 16
  %v5_100037ec = inttoptr i32 %v4_100037ec to i16*
  store i16 %v5_100037d8, i16* %v5_100037ec, align 2
  %v0_100037f0 = load i32, i32* %r26.global-to-local, align 4
  %v0_100037f4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100037f4, i32* %r3.global-to-local, align 4
  %v0_100037f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037f8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v0_100037f8
  store i32 %v2_100037f8, i32* %r7.global-to-local, align 4
  %v0_10003800 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003800 = trunc i32 %v0_10003800 to i16
  %v3_10003800 = add i32 %v2_100037f8, 2
  %v4_10003800 = inttoptr i32 %v3_10003800 to i16*
  store i16 %v1_10003800, i16* %v4_10003800, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449804, i32* @lr, align 4
  %v6_10003808 = call i32 @function_10009320(i32 %v0_100037f4, i32 %v0_100037e4, i32 %v0_100037f0, i32 16384, i32 %v2_100037f8, i32 16)
  store i32 %v6_10003808, i32* %r3.global-to-local, align 4
  %v3_1000380c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000380c, i32* %r9.global-to-local, align 4
  %v1_10003810 = add i32 %v3_1000380c, 1
  store i32 %v1_10003810, i32* %r0.global-to-local, align 4
  %v1_10003814 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003814 = icmp slt i32 %v1_10003810, %v1_10003814
  %v4_10003814 = icmp eq i32 %v1_10003810, %v1_10003814
  store i1 %v4_10003814, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003810, i32* %stack_var_-408, align 4
  br i1 %v2_10003814, label %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, label %dec_label_pc_10003820

dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge: ; preds = %dec_label_pc_1000378c
  %v0_1000377c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003770

dec_label_pc_10003820:                            ; preds = %dec_label_pc_1000378c
  %v0_10003820 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003820 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10003820 = or i1 %v0_10003820, %v1_10003820
  br i1 %v2_10003820, label %dec_label_pc_1000374c.outer, label %dec_label_pc_10003750

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003770
  %v0_10003828 = call i32 @function_10005cf4()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  %v0_1000382c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000382c, i32* @r4, align 4
  %v3_10003830 = load i32, i32* @r29, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  %v0_10003834 = load i32, i32* @r29, align 4
  %v1_10003834 = add i32 %v0_10003834, 40
  store i32 %v1_10003834, i32* @r3, align 4
  %v0_10003838 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003838, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000383c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828
  %v0_1000383c = call i32 @function_10005ec8()
  store i32 %v0_1000383c, i32* %r3.global-to-local, align 4
  %v2_1000378c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000378c

; uselistorder directives
  uselistorder i32 %v0_10003834, { 1, 0 }
  uselistorder i1 %v1_10003820, { 1, 0 }
  uselistorder i1 %v0_10003820, { 1, 0 }
  uselistorder i32 %v1_10003810, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100037d8, { 1, 0 }
  uselistorder i32 %v0_100037a4, { 1, 0, 2 }
  uselistorder i32 %v2_10003798, { 1, 0 }
  uselistorder i32 %v1_10003770, { 1, 0 }
  uselistorder i32 %v1_10003730, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100036b4, { 1, 0, 2 }
  uselistorder i32 %v1_100036b0, { 1, 0 }
  uselistorder i32 %v1_10003648, { 1, 0 }
  uselistorder i32 %v1_10003614, { 1, 0 }
  uselistorder i32 %v0_10003594, { 1, 0 }
  uselistorder i32 %v2_10003588, { 1, 2, 0 }
  uselistorder i1 %v4_1000350c, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_1000356c, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10003548, { 1, 0 }
  uselistorder i32 %v1_100032f0, { 1, 0 }
  uselistorder i8 %v5_100032dc, { 1, 0 }
  uselistorder i8 %v5_100032a4, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i8 31, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 268448844, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000383c, { 1, 0 }
  uselistorder label %dec_label_pc_1000378c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003750, { 1, 0 }
  uselistorder label %dec_label_pc_1000374c, { 1, 0 }
  uselistorder label %dec_label_pc_1000372c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003698, { 1, 0 }
  uselistorder label %dec_label_pc_100035a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003528, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003458, { 1, 0 }
}

define i32 @function_10003844(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003844:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003848 = load i32, i32* @lr, align 4
  store i32 %v0_10003848, i32* %r0.global-to-local, align 4
  %v0_1000384c = call i32 @__asm_mfcr()
  store i32 %v0_1000384c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000385c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000384c, i32* %r21.global-to-local, align 4
  %v0_1000389c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100038a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100038ac = load i32, i32* @r30, align 4
  store i32 268449976, i32* @lr, align 4
  %v2_100038b4 = call i32 @function_100096f8(i32 4, i32 4)
  store i32 %v2_100038b4, i32* %r22.global-to-local, align 4
  %v0_100038bc = load i32, i32* @r28, align 4
  %v0_100038c8 = load i32, i32* @r29, align 4
  store i32 %v0_100038c8, i32* %r3.global-to-local, align 4
  store i32 268450000, i32* @lr, align 4
  %v4_100038cc = inttoptr i32 %v0_100038bc to i32*
  %v5_100038cc = call i32 @function_100006a8(i32 %v0_100038c8, i32* %v4_100038cc, i32 2, i32 0)
  %v5_100038dc = trunc i32 %v5_100038cc to i8
  %v0_100038e4 = load i32, i32* @r28, align 4
  %v0_100038e8 = load i32, i32* @r29, align 4
  store i32 %v0_100038e8, i32* %r3.global-to-local, align 4
  store i32 268450032, i32* @lr, align 4
  %v4_100038ec = inttoptr i32 %v0_100038e4 to i32*
  %v5_100038ec = call i32 @function_100006a8(i32 %v0_100038e8, i32* %v4_100038ec, i32 3, i32 65535)
  %v0_100038f0 = load i32, i32* @r28, align 4
  store i32 %v5_100038ec, i32* %r18.global-to-local, align 4
  %v0_10003900 = load i32, i32* @r29, align 4
  store i32 %v0_10003900, i32* %r3.global-to-local, align 4
  store i32 268450056, i32* @lr, align 4
  %v4_10003904 = inttoptr i32 %v0_100038f0 to i32*
  %v5_10003904 = call i32 @function_100006a8(i32 %v0_10003900, i32* %v4_10003904, i32 4, i32 64)
  %v0_10003908 = load i32, i32* @r28, align 4
  %v5_10003914 = trunc i32 %v5_10003904 to i8
  %v0_1000391c = load i32, i32* @r29, align 4
  store i32 %v0_1000391c, i32* %r3.global-to-local, align 4
  store i32 268450084, i32* @lr, align 4
  %v4_10003920 = inttoptr i32 %v0_10003908 to i32*
  %v5_10003920 = call i32 @function_100006a8(i32 %v0_1000391c, i32* %v4_10003920, i32 5, i32 0)
  %v0_10003930 = load i32, i32* @r28, align 4
  %v1_10003934 = urem i32 %v5_10003920, 256
  store i32 %v1_10003934, i32* @r31, align 4
  %v0_10003938 = load i32, i32* @r29, align 4
  store i32 %v0_10003938, i32* %r3.global-to-local, align 4
  store i32 268450112, i32* @lr, align 4
  %v4_1000393c = inttoptr i32 %v0_10003930 to i32*
  %v5_1000393c = call i32 @function_100006a8(i32 %v0_10003938, i32* %v4_1000393c, i32 6, i32 65535)
  %v0_10003944 = load i32, i32* @r28, align 4
  store i32 %v5_1000393c, i32* %r19.global-to-local, align 4
  %v0_10003954 = load i32, i32* @r29, align 4
  store i32 %v0_10003954, i32* %r3.global-to-local, align 4
  store i32 268450140, i32* @lr, align 4
  %v4_10003958 = inttoptr i32 %v0_10003944 to i32*
  %v5_10003958 = call i32 @function_100006a8(i32 %v0_10003954, i32* %v4_10003958, i32 7, i32 65535)
  %v0_10003960 = load i32, i32* @r28, align 4
  store i32 %v5_10003958, i32* %r20.global-to-local, align 4
  %v0_10003970 = load i32, i32* @r29, align 4
  store i32 %v0_10003970, i32* %r3.global-to-local, align 4
  store i32 268450168, i32* @lr, align 4
  %v4_10003974 = inttoptr i32 %v0_10003960 to i32*
  %v5_10003974 = call i32 @function_100006a8(i32 %v0_10003970, i32* %v4_10003974, i32 17, i32 65535)
  %v0_1000397c = load i32, i32* @r28, align 4
  store i32 %v5_10003974, i32* %r15.global-to-local, align 4
  %v0_1000398c = load i32, i32* @r29, align 4
  store i32 %v0_1000398c, i32* %r3.global-to-local, align 4
  store i32 268450196, i32* @lr, align 4
  %v4_10003990 = inttoptr i32 %v0_1000397c to i32*
  %v5_10003990 = call i32 @function_100006a8(i32 %v0_1000398c, i32* %v4_10003990, i32 18, i32 65535)
  %v0_10003994 = load i32, i32* @r28, align 4
  store i32 %v5_10003990, i32* %r17.global-to-local, align 4
  %v0_100039a4 = load i32, i32* @r29, align 4
  store i32 %v0_100039a4, i32* %r3.global-to-local, align 4
  store i32 268450220, i32* @lr, align 4
  %v4_100039a8 = inttoptr i32 %v0_10003994 to i32*
  %v5_100039a8 = call i32 @function_100006a8(i32 %v0_100039a4, i32* %v4_100039a8, i32 11, i32 0)
  %v0_100039ac = load i32, i32* @r28, align 4
  %v0_100039bc = load i32, i32* @r29, align 4
  store i32 %v0_100039bc, i32* %r3.global-to-local, align 4
  store i32 268450244, i32* @lr, align 4
  %v4_100039c0 = inttoptr i32 %v0_100039ac to i32*
  %v5_100039c0 = call i32 @function_100006a8(i32 %v0_100039bc, i32* %v4_100039c0, i32 12, i32 1)
  %v0_100039c4 = load i32, i32* @r28, align 4
  store i32 %v5_100039c0, i32* %r14.global-to-local, align 4
  %v0_100039d4 = load i32, i32* @r29, align 4
  store i32 %v0_100039d4, i32* %r3.global-to-local, align 4
  store i32 268450268, i32* @lr, align 4
  %v4_100039d8 = inttoptr i32 %v0_100039c4 to i32*
  %v5_100039d8 = call i32 @function_100006a8(i32 %v0_100039d4, i32* %v4_100039d8, i32 13, i32 0)
  %v0_100039dc = load i32, i32* @r28, align 4
  store i32 %v5_100039d8, i32* %r24.global-to-local, align 4
  %v0_100039ec = load i32, i32* @r29, align 4
  store i32 %v0_100039ec, i32* %r3.global-to-local, align 4
  store i32 268450292, i32* @lr, align 4
  %v4_100039f0 = inttoptr i32 %v0_100039dc to i32*
  %v5_100039f0 = call i32 @function_100006a8(i32 %v0_100039ec, i32* %v4_100039f0, i32 14, i32 0)
  %v0_100039f4 = load i32, i32* @r28, align 4
  store i32 %v5_100039f0, i32* %r27.global-to-local, align 4
  %v0_10003a04 = load i32, i32* @r29, align 4
  store i32 %v0_10003a04, i32* %r3.global-to-local, align 4
  store i32 268450316, i32* @lr, align 4
  %v4_10003a08 = inttoptr i32 %v0_100039f4 to i32*
  %v5_10003a08 = call i32 @function_100006a8(i32 %v0_10003a04, i32* %v4_10003a08, i32 15, i32 0)
  %v0_10003a0c = load i32, i32* @r28, align 4
  store i32 %v5_10003a08, i32* %r26.global-to-local, align 4
  %v0_10003a1c = load i32, i32* @r29, align 4
  store i32 %v0_10003a1c, i32* %r3.global-to-local, align 4
  store i32 268450340, i32* @lr, align 4
  %v4_10003a20 = inttoptr i32 %v0_10003a0c to i32*
  %v5_10003a20 = call i32 @function_100006a8(i32 %v0_10003a1c, i32* %v4_10003a20, i32 16, i32 0)
  %v0_10003a24 = load i32, i32* @r28, align 4
  store i32 %v5_10003a20, i32* %r30.global-to-local, align 4
  %v0_10003a34 = load i32, i32* @r29, align 4
  store i32 %v0_10003a34, i32* %r3.global-to-local, align 4
  store i32 268450364, i32* @lr, align 4
  %v4_10003a38 = inttoptr i32 %v0_10003a24 to i32*
  %v5_10003a38 = call i32 @function_100006a8(i32 %v0_10003a34, i32* %v4_10003a38, i32 0, i32 512)
  %v0_10003a3c = load i32, i32* @r28, align 4
  store i32 %v5_10003a38, i32* %r16.global-to-local, align 4
  %v0_10003a4c = load i32, i32* @r29, align 4
  store i32 %v0_10003a4c, i32* %r3.global-to-local, align 4
  store i32 268450388, i32* @lr, align 4
  %v4_10003a50 = inttoptr i32 %v0_10003a3c to i32*
  %v5_10003a50 = call i32 @function_100006a8(i32 %v0_10003a4c, i32* %v4_10003a50, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003a58 = load i32, i32* @global_var_1001b718.16, align 4
  %v1_10003a5c = urem i32 %v5_10003a50, 256
  %v0_10003a60 = load i32, i32* @r28, align 4
  %v0_10003a6c = load i32, i32* @r29, align 4
  store i32 %v0_10003a6c, i32* %r3.global-to-local, align 4
  store i32 268450420, i32* @lr, align 4
  %v5_10003a70 = inttoptr i32 %v0_10003a60 to i32*
  %v6_10003a70 = call i32 @function_10000628(i32 %v0_10003a6c, i32* %v5_10003a70, i32 25, i32 %v3_10003a58, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450440, i32* @lr, align 4
  %v3_10003a84 = call i32 @function_1000939c(i32 2, i32 3, i32 6)
  store i32 %v3_10003a84, i32* %r3.global-to-local, align 4
  %v3_10003a88 = icmp eq i32 %v3_10003a84, -1
  store i32 %v3_10003a84, i32* %r23.global-to-local, align 4
  br i1 %v3_10003a88, label %dec_label_pc_10003dc8, label %dec_label_pc_10003a94

dec_label_pc_10003a94:                            ; preds = %dec_label_pc_10003844
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003aa0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450480, i32* @lr, align 4
  %v4_10003aac = call i32 @function_10009360(i32 0, i32 3, i32 %v2_10003aa0, i32 4)
  store i32 %v4_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v4_10003aac, -1
  br i1 %v3_10003ab0, label %dec_label_pc_10003dc0, label %dec_label_pc_10003ab8

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003a94
  %v0_10003ab8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ab8 = icmp slt i32 %v0_10003ab8, 0
  %v3_10003ab8 = icmp eq i32 %v0_10003ab8, 0
  store i1 %v1_10003ab8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ab8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003ac4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003ac4 = urem i32 %v0_10003ac4, 65536
  store i32 %v1_10003ac4, i32* %r18.global-to-local, align 4
  %v0_10003ac8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003ac8 = urem i32 %v0_10003ac8, 65536
  store i32 %v1_10003ac8, i32* %r19.global-to-local, align 4
  %v0_10003acc = load i32, i32* %r20.global-to-local, align 4
  %v1_10003acc = urem i32 %v0_10003acc, 65536
  store i32 %v1_10003acc, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10003ab8, 1
  br i1 %tmp40, label %dec_label_pc_10003da0, label %dec_label_pc_10003ad4

dec_label_pc_10003ad4:                            ; preds = %dec_label_pc_10003ab8
  %v0_10003ad8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003ad8 = urem i32 %v0_10003ad8, 256
  %v0_10003adc = load i32, i32* %r16.global-to-local, align 4
  %v1_10003adc = add i32 %v0_10003adc, 40
  store i32 %v1_10003adc, i32* %r24.global-to-local, align 4
  %v3_10003ae0 = icmp eq i32 %v1_10003ad8, 0
  store i1 %v3_10003ae0, i1* %cr3_eq.global-to-local, align 1
  %v1_10003ae4 = urem i32 %v5_100039a8, 2
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 2
  store i32 %v1_10003ae8, i32* %r28.global-to-local, align 4
  %v1_10003aec = urem i32 %v0_10003ad8, 2
  store i32 %v1_10003aec, i32* %r26.global-to-local, align 4
  %v1_10003af0 = urem i32 %v1_10003adc, 65536
  store i32 %v1_10003af0, i32* %r0.global-to-local, align 4
  %v0_10003af8 = load i32, i32* @r31, align 4
  %v3_10003af8 = icmp eq i32 %v0_10003af8, 0
  store i1 %v3_10003af8, i1* %cr2_eq.global-to-local, align 1
  %v5_10003afc = trunc i32 %v1_10003adc to i16
  %v0_10003b00 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003b00 = urem i32 %v0_10003b00, 2
  store i32 %v1_10003b00, i32* %r14.global-to-local, align 4
  %v0_10003b04 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003b04 = urem i32 %v0_10003b04, 2
  store i32 %v1_10003b04, i32* %r27.global-to-local, align 4
  %v0_10003b08 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003b08 = urem i32 %v0_10003b08, 2
  %v4_10003b58 = sext i8 %v5_100038dc to i32
  br label %dec_label_pc_10003b10

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450588, i32* @lr, align 4
  %v2_10003b18 = call i32 @function_100096f8(i32 1510, i32 1)
  store i32 %v2_10003b18, i32* %r3.global-to-local, align 4
  %v3_10003b1c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003b1c, i32* %r9.global-to-local, align 4
  %v0_10003b20 = load i32, i32* @r31, align 4
  %v1_10003b20 = mul i32 %v0_10003b20, 4
  store i32 %v1_10003b20, i32* %r0.global-to-local, align 4
  %v1_10003b24 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003b24 = add i32 %v1_10003b24, %v1_10003b20
  %v4_10003b24 = inttoptr i32 %v3_10003b24 to i32*
  store i32 %v2_10003b18, i32* %v4_10003b24, align 4
  %v0_10003b28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b28 = mul i32 %v0_10003b28, 4
  store i32 %v1_10003b28, i32* %r9.global-to-local, align 4
  %v1_10003b2c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003b2c = add i32 %v1_10003b2c, %v1_10003b28
  %v3_10003b2c = inttoptr i32 %v2_10003b2c to i32*
  %v4_10003b2c = load i32, i32* %v3_10003b2c, align 4
  store i32 %v4_10003b2c, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003b34 = inttoptr i32 %v4_10003b2c to i32*
  %v2_10003b34 = load i32, i32* %v1_10003b34, align 4
  store i32 %v2_10003b34, i32* %r0.global-to-local, align 4
  %v1_10003b38 = add i32 %v4_10003b2c, 20
  store i32 %v1_10003b38, i32* @r30, align 4
  %v0_10003b3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b3c = trunc i32 %v0_10003b3c to i16
  %v3_10003b3c = add i32 %v4_10003b2c, 4
  %v4_10003b3c = inttoptr i32 %v3_10003b3c to i16*
  store i16 %v1_10003b3c, i16* %v4_10003b3c, align 2
  %v1_10003b40 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b40, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003b48 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003b4c = load i32, i32* @r31, align 4
  %v2_10003b4c = inttoptr i32 %v1_10003b4c to i32*
  store i32 %v1_10003b48, i32* %v2_10003b4c, align 4
  %v2_10003b54 = load i32, i32* @r31, align 4
  %v3_10003b54 = add i32 %v2_10003b54, 8
  %v4_10003b54 = inttoptr i32 %v3_10003b54 to i8*
  store i8 %v5_10003914, i8* %v4_10003b54, align 1
  store i32 %v4_10003b58, i32* %r9.global-to-local, align 4
  %v2_10003b5c = load i32, i32* @r31, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v5_100038dc, i8* %v4_10003b5c, align 1
  store i32 %v1_10003adc, i32* %r0.global-to-local, align 4
  %v2_10003b64 = load i32, i32* @r31, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 2
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i16*
  store i16 %v5_10003afc, i16* %v4_10003b64, align 2
  %v0_10003b68 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003b68, label %dec_label_pc_10003b74, label %dec_label_pc_10003b6c

dec_label_pc_10003b6c:                            ; preds = %dec_label_pc_10003b10
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003b70 = load i32, i32* @r31, align 4
  %v3_10003b70 = add i32 %v2_10003b70, 6
  %v4_10003b70 = inttoptr i32 %v3_10003b70 to i16*
  store i16 16384, i16* %v4_10003b70, align 2
  br label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b6c
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003b78 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i16
  %v2_10003b78 = load i32, i32* @r31, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 20
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i16*
  store i16 %v1_10003b78, i16* %v4_10003b78, align 2
  %v0_10003b7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i8
  %v2_10003b7c = load i32, i32* @r31, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 9
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i8*
  store i8 %v1_10003b7c, i8* %v4_10003b7c, align 1
  %v0_10003b80 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b80 = trunc i32 %v0_10003b80 to i16
  %v2_10003b80 = load i32, i32* @r30, align 4
  %v3_10003b80 = add i32 %v2_10003b80, 2
  %v4_10003b80 = inttoptr i32 %v3_10003b80 to i16*
  store i16 %v1_10003b80, i16* %v4_10003b80, align 2
  %v1_10003b88 = load i32, i32* @r31, align 4
  %v2_10003b88 = add i32 %v1_10003b88, 12
  %v3_10003b88 = inttoptr i32 %v2_10003b88 to i32*
  store i32 %v6_10003a70, i32* %v3_10003b88, align 4
  %v3_10003b8c = load i32, i32* %stack_var_-136, align 4
  %v1_10003b90 = mul i32 %v3_10003b8c, 24
  %v1_10003b94 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v1_10003b90
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* @r31, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 16
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v3_10003b98, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* @r30, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 4
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* @r30, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  %v2_10003ba8 = inttoptr i32 %v1_10003ba8 to i32*
  %v3_10003ba8 = load i32, i32* %v2_10003ba8, align 4
  store i32 %v3_10003ba8, i32* %r0.global-to-local, align 4
  %v1_10003bac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10003bac, i32* %r0.global-to-local, align 4
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v1_10003bb4 = call i32 @__asm_rlwimi(i32 %v1_10003ae4, i32 21, i32 10, i32 10)
  store i32 %v1_10003bb4, i32* %r0.global-to-local, align 4
  %v1_10003bb8 = call i32 @__asm_rlwimi(i32 %v1_10003b00, i32 20, i32 11, i32 11)
  store i32 %v1_10003bb8, i32* %r0.global-to-local, align 4
  %v1_10003bbc = call i32 @__asm_rlwimi(i32 %v1_10003aec, i32 19, i32 12, i32 12)
  store i32 %v1_10003bbc, i32* %r0.global-to-local, align 4
  %v1_10003bc0 = call i32 @__asm_rlwimi(i32 %v1_10003b04, i32 18, i32 13, i32 13)
  store i32 %v1_10003bc0, i32* %r0.global-to-local, align 4
  %v1_10003bc4 = call i32 @__asm_rlwimi(i32 %v1_10003ae8, i32 17, i32 14, i32 14)
  store i32 %v1_10003bc4, i32* %r0.global-to-local, align 4
  %v1_10003bc8 = call i32 @__asm_rlwimi(i32 %v1_10003b08, i32 16, i32 15, i32 15)
  store i32 %v1_10003bc8, i32* %r0.global-to-local, align 4
  %v1_10003bcc = load i32, i32* @r30, align 4
  %v2_10003bcc = add i32 %v1_10003bcc, 12
  %v3_10003bcc = inttoptr i32 %v2_10003bcc to i32*
  store i32 %v1_10003bc8, i32* %v3_10003bcc, align 4
  %v0_10003bd0 = call i32 @function_10005cf4()
  %v1_10003bd0 = trunc i32 %v0_10003bd0 to i16
  %v0_10003bd4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003bd4, i32* @r4, align 4
  %v3_10003bd8 = load i32, i32* @r30, align 4
  %v4_10003bd8 = add i32 %v3_10003bd8, 14
  %v5_10003bd8 = inttoptr i32 %v4_10003bd8 to i16*
  store i16 %v1_10003bd0, i16* %v5_10003bd8, align 2
  %v0_10003bdc = load i32, i32* @r31, align 4
  %v1_10003bdc = add i32 %v0_10003bdc, 40
  store i32 %v1_10003bdc, i32* @r3, align 4
  %v0_10003be0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003be0, label %dec_label_pc_10003bf0, label %dec_label_pc_10003be4

dec_label_pc_10003be4:                            ; preds = %dec_label_pc_10003b74
  %v0_10003be4 = load i32, i32* @r30, align 4
  %v1_10003be4 = add i32 %v0_10003be4, 12
  %v2_10003be4 = inttoptr i32 %v1_10003be4 to i32*
  %v3_10003be4 = load i32, i32* %v2_10003be4, align 4
  %v1_10003be8 = or i32 %v3_10003be4, 524288
  store i32 %v1_10003be8, i32* %r0.global-to-local, align 4
  store i32 %v1_10003be8, i32* %v2_10003be4, align 4
  br label %dec_label_pc_10003bf0

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003b74, %dec_label_pc_10003be4
  %v0_10003bf0 = call i32 @function_10005ec8()
  store i32 %v0_10003bf0, i32* %r3.global-to-local, align 4
  %v3_10003bf4 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003bf4, i32* %r9.global-to-local, align 4
  %v1_10003bf8 = add i32 %v3_10003bf4, 1
  %v1_10003bfc = load i32, i32* %r21.global-to-local, align 4
  %v2_10003bfc = icmp slt i32 %v1_10003bf8, %v1_10003bfc
  store i32 %v1_10003bf8, i32* %stack_var_-136, align 4
  br i1 %v2_10003bfc, label %dec_label_pc_10003b10, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bf0
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003c0c = load i32, i32* %r16.global-to-local, align 4
  %v1_10003c0c = add i32 %v0_10003c0c, 20
  store i32 %v1_10003c0c, i32* @r30, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v3_10003c14 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003c14, i1* %cr2_eq.global-to-local, align 1
  %v3_10003c18 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003c18, i1* %cr3_eq.global-to-local, align 1
  %v0_10003c1c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c1c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003c1c.preheader:                  ; preds = %dec_label_pc_10003cfc, %dec_label_pc_10003da0, %dec_label_pc_10003c08
  %v1_10003c1c = phi i1 [ %v1_10003ab8, %dec_label_pc_10003da0 ], [ %v1_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v1_10003cfc, %dec_label_pc_10003cfc ]
  %v0_10003c1c = phi i1 [ %v3_10003ab8, %dec_label_pc_10003da0 ], [ %v0_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v0_10003cfc, %dec_label_pc_10003cfc ]
  %v2_10003c1c = or i1 %v1_10003c1c, %v0_10003c1c
  br label %dec_label_pc_10003c1c

dec_label_pc_10003c1c:                            ; preds = %dec_label_pc_10003c1c.preheader, %dec_label_pc_10003c1c
  br i1 %v2_10003c1c, label %dec_label_pc_10003c1c, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003c1c, %dec_label_pc_10003cfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003c24 = load i32, i32* @r30, align 4
  %v1_10003c24 = urem i32 %v0_10003c24, 65536
  store i32 %v1_10003c24, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003c34

dec_label_pc_10003c34:                            ; preds = %dec_label_pc_10003c8c, %dec_label_pc_10003c20
  %v0_10003c34 = phi i32 [ %v1_10003cec, %dec_label_pc_10003c8c ], [ 0, %dec_label_pc_10003c20 ]
  %v1_10003c34 = mul i32 %v0_10003c34, 24
  store i32 %v1_10003c34, i32* %r0.global-to-local, align 4
  %v1_10003c38 = mul i32 %v0_10003c34, 4
  %v1_10003c3c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003c3c = add i32 %v1_10003c3c, %v1_10003c38
  %v3_10003c3c = inttoptr i32 %v2_10003c3c to i32*
  %v4_10003c3c = load i32, i32* %v3_10003c3c, align 4
  store i32 %v4_10003c3c, i32* %r28.global-to-local, align 4
  %v1_10003c40 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003c40 = add i32 %v1_10003c40, %v1_10003c34
  %v1_10003c44 = add i32 %v2_10003c40, 20
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i8*
  %v3_10003c44 = load i8, i8* %v2_10003c44, align 1
  %v4_10003c44 = zext i8 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r9.global-to-local, align 4
  %v1_10003c48 = add i32 %v4_10003c3c, 20
  store i32 %v1_10003c48, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10003c44, 32
  br i1 %tmp41, label %dec_label_pc_10003d04, label %dec_label_pc_10003c54

dec_label_pc_10003c54:                            ; preds = %dec_label_pc_10003c34
  %v0_10003c54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003c54, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003c58:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 65535, i32* @r29, align 4
  %v0_10003c60 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003c60 = icmp eq i32 %v0_10003c60, 65535
  br i1 %v4_10003c60, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003c68:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v1_10003c68 = phi i32 [ %v1_10003d3c, %dec_label_pc_10003d2c ], [ 65535, %dec_label_pc_10003c58 ]
  %v0_10003c68 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003c68 = icmp eq i32 %v0_10003c68, %v1_10003c68
  br i1 %v4_10003c68, label %dec_label_pc_10003d54, label %dec_label_pc_10003c70

dec_label_pc_10003c70:                            ; preds = %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge, %dec_label_pc_10003c68
  %v1_10003c70 = phi i32 [ %v1_10003c70.pre, %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge ], [ %v1_10003c68, %dec_label_pc_10003c68 ]
  %v0_10003c70 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c70 = icmp eq i32 %v0_10003c70, %v1_10003c70
  br i1 %v4_10003c70, label %dec_label_pc_10003d64, label %dec_label_pc_10003c78

dec_label_pc_10003c78:                            ; preds = %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge, %dec_label_pc_10003c70
  %v1_10003c78 = phi i32 [ %v1_10003c78.pre, %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge ], [ %v1_10003c70, %dec_label_pc_10003c70 ]
  %v0_10003c78 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003c78 = icmp eq i32 %v0_10003c78, %v1_10003c78
  br i1 %v4_10003c78, label %dec_label_pc_10003d74, label %dec_label_pc_10003c80

dec_label_pc_10003c80:                            ; preds = %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge, %dec_label_pc_10003c78
  %v1_10003c80 = phi i32 [ %v1_10003c80.pre, %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge ], [ %v1_10003c78, %dec_label_pc_10003c78 ]
  %v0_10003c80 = load i32, i32* %r17.global-to-local, align 4
  %v4_10003c80 = icmp eq i32 %v0_10003c80, %v1_10003c80
  br i1 %v4_10003c80, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003c88:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003c88 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003c88, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003c8c:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84, %dec_label_pc_10003d90
  %v0_10003c8c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c8c = trunc i32 %v0_10003c8c to i16
  %v2_10003c8c = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c8c = add i32 %v2_10003c8c, 10
  %v4_10003c8c = inttoptr i32 %v3_10003c8c to i16*
  store i16 %v1_10003c8c, i16* %v4_10003c8c, align 2
  %v0_10003c94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c94, i32* @r3, align 4
  %v2_10003c98 = call i32 @function_100043cc(i32 %v0_10003c94, i32 20)
  %v3_10003c98 = trunc i32 %v2_10003c98 to i16
  %v0_10003c9c = load i32, i32* @r31, align 4
  store i32 %v0_10003c9c, i32* @r4, align 4
  %v4_10003ca0 = add i32 %v0_10003c94, 10
  %v5_10003ca0 = inttoptr i32 %v4_10003ca0 to i16*
  store i16 %v3_10003c98, i16* %v5_10003ca0, align 2
  %v0_10003ca4 = load i32, i32* %r27.global-to-local, align 4
  %v0_10003ca8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ca8 = trunc i32 %v0_10003ca8 to i16
  %v2_10003ca8 = load i32, i32* @r31, align 4
  %v3_10003ca8 = add i32 %v2_10003ca8, 16
  %v4_10003ca8 = inttoptr i32 %v3_10003ca8 to i16*
  store i16 %v1_10003ca8, i16* %v4_10003ca8, align 2
  %v0_10003cac = load i32, i32* @r30, align 4
  %v0_10003cb0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003cb0, i32* %r3.global-to-local, align 4
  %v4_10003cb4 = call i32 @function_10004430(i32 %v0_10003cb0, i32 %v0_10003c9c, i32 %v0_10003ca4, i32 %v0_10003cac)
  %v5_10003cb4 = trunc i32 %v4_10003cb4 to i16
  store i32 %v4_10003cb4, i32* %r3.global-to-local, align 4
  %v3_10003cb8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003cb8, i32* %r7.global-to-local, align 4
  %v0_10003cbc = load i32, i32* @r31, align 4
  %v1_10003cbc = add i32 %v0_10003cbc, 2
  %v2_10003cbc = inttoptr i32 %v1_10003cbc to i16*
  %v3_10003cbc = load i16, i16* %v2_10003cbc, align 2
  %v4_10003cbc = zext i16 %v3_10003cbc to i32
  store i32 %v4_10003cbc, i32* %r0.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003cc4 = mul i32 %v3_10003cb8, 24
  store i32 %v1_10003cc4, i32* %r7.global-to-local, align 4
  %v4_10003cc8 = add i32 %v0_10003cbc, 16
  %v5_10003cc8 = inttoptr i32 %v4_10003cc8 to i16*
  store i16 %v5_10003cb4, i16* %v5_10003cc8, align 2
  %v0_10003ccc = load i32, i32* %r24.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003cd0, i32* %r3.global-to-local, align 4
  %v0_10003cd4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003cd4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003cd4 = add i32 %v1_10003cd4, %v0_10003cd4
  store i32 %v2_10003cd4, i32* %r7.global-to-local, align 4
  %v0_10003cdc = load i32, i32* %r0.global-to-local, align 4
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  %v3_10003cdc = add i32 %v2_10003cd4, 2
  %v4_10003cdc = inttoptr i32 %v3_10003cdc to i16*
  store i16 %v1_10003cdc, i16* %v4_10003cdc, align 2
  store i32 268451048, i32* @lr, align 4
  %v6_10003ce4 = call i32 @function_10009320(i32 %v0_10003cd0, i32 %v0_10003cc0, i32 %v0_10003ccc, i32 16384, i32 %v2_10003cd4, i32 16)
  store i32 %v6_10003ce4, i32* %r3.global-to-local, align 4
  %v3_10003ce8 = load i32, i32* %stack_var_-136, align 4
  %v1_10003cec = add i32 %v3_10003ce8, 1
  store i32 %v1_10003cec, i32* %r9.global-to-local, align 4
  %v1_10003cf0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003cf0 = icmp slt i32 %v1_10003cec, %v1_10003cf0
  store i32 %v1_10003cec, i32* %stack_var_-136, align 4
  br i1 %v2_10003cf0, label %dec_label_pc_10003c34, label %dec_label_pc_10003cfc

dec_label_pc_10003cfc:                            ; preds = %dec_label_pc_10003c8c
  %v0_10003cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003cfc = or i1 %v0_10003cfc, %v1_10003cfc
  br i1 %v2_10003cfc, label %dec_label_pc_10003c1c.preheader, label %dec_label_pc_10003c20

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003c34
  %v1_10003d04 = add i32 %v2_10003c40, 16
  %v2_10003d04 = inttoptr i32 %v1_10003d04 to i32*
  %v3_10003d04 = load i32, i32* %v2_10003d04, align 4
  store i32 %v3_10003d04, i32* %r29.global-to-local, align 4
  %v0_10003d08 = call i32 @function_10005cf4()
  store i32 %v0_10003d08, i32* %r3.global-to-local, align 4
  %v3_10003d0c = load i32, i32* %stack_var_-136, align 4
  %v1_10003d10 = mul i32 %v3_10003d0c, 24
  %v1_10003d14 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003d14 = add i32 %v1_10003d14, %v1_10003d10
  store i32 %v2_10003d14, i32* %r9.global-to-local, align 4
  %v1_10003d18 = add i32 %v2_10003d14, 20
  %v2_10003d18 = inttoptr i32 %v1_10003d18 to i8*
  %v3_10003d18 = load i8, i8* %v2_10003d18, align 1
  %v4_10003d18 = zext i8 %v3_10003d18 to i32
  store i32 %v4_10003d18, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003d18, 64
  %v2_10003d1c = zext i8 %tmp to i32
  %v3_10003d1c = lshr i32 %v0_10003d08, %v2_10003d1c
  store i32 %v3_10003d1c, i32* %r3.global-to-local, align 4
  %v0_10003d20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003d20 = add i32 %v3_10003d1c, %v0_10003d20
  store i32 %v2_10003d20, i32* %r29.global-to-local, align 4
  %v1_10003d24 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d24 = add i32 %v1_10003d24, 16
  %v3_10003d24 = inttoptr i32 %v2_10003d24 to i32*
  store i32 %v2_10003d20, i32* %v3_10003d24, align 4
  %v0_10003d28 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003d28, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003d2c:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003d30 = call i32 @function_10005cf4()
  store i32 %v0_10003d30, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003d38 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d38 = add i32 %v1_10003d38, 12
  %v3_10003d38 = inttoptr i32 %v2_10003d38 to i32*
  store i32 %v0_10003d30, i32* %v3_10003d38, align 4
  %v0_10003d3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003d3c = load i32, i32* @r29, align 4
  %v4_10003d3c = icmp eq i32 %v0_10003d3c, %v1_10003d3c
  br i1 %v4_10003d3c, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003d44:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v0_10003d44 = call i32 @function_10005cf4()
  %v1_10003d44 = trunc i32 %v0_10003d44 to i16
  store i32 %v0_10003d44, i32* %r3.global-to-local, align 4
  %v0_10003d48 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003d48 = load i32, i32* @r29, align 4
  %v4_10003d48 = icmp eq i32 %v0_10003d48, %v1_10003d48
  %v3_10003d4c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d4c = add i32 %v3_10003d4c, 4
  %v5_10003d4c = inttoptr i32 %v4_10003d4c to i16*
  store i16 %v1_10003d44, i16* %v5_10003d4c, align 2
  br i1 %v4_10003d48, label %dec_label_pc_10003d54, label %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge

dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge: ; preds = %dec_label_pc_10003d44
  %v1_10003c70.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c70

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d44, %dec_label_pc_10003c68
  %v0_10003d54 = call i32 @function_10005cf4()
  %v1_10003d54 = trunc i32 %v0_10003d54 to i16
  store i32 %v0_10003d54, i32* %r3.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003d58 = load i32, i32* @r29, align 4
  %v4_10003d58 = icmp eq i32 %v0_10003d58, %v1_10003d58
  %v3_10003d5c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d5c = add i32 %v3_10003d5c, 20
  %v5_10003d5c = inttoptr i32 %v4_10003d5c to i16*
  store i16 %v1_10003d54, i16* %v5_10003d5c, align 2
  br i1 %v4_10003d58, label %dec_label_pc_10003d64, label %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge

dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge: ; preds = %dec_label_pc_10003d54
  %v1_10003c78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c78

dec_label_pc_10003d64:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003c70
  %v0_10003d64 = call i32 @function_10005cf4()
  %v1_10003d64 = trunc i32 %v0_10003d64 to i16
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  %v0_10003d68 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003d68 = load i32, i32* @r29, align 4
  %v4_10003d68 = icmp eq i32 %v0_10003d68, %v1_10003d68
  %v3_10003d6c = load i32, i32* @r31, align 4
  %v4_10003d6c = add i32 %v3_10003d6c, 2
  %v5_10003d6c = inttoptr i32 %v4_10003d6c to i16*
  store i16 %v1_10003d64, i16* %v5_10003d6c, align 2
  br i1 %v4_10003d68, label %dec_label_pc_10003d74, label %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge

dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge: ; preds = %dec_label_pc_10003d64
  %v1_10003c80.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c80

dec_label_pc_10003d74:                            ; preds = %dec_label_pc_10003d64, %dec_label_pc_10003c78
  %v0_10003d74 = call i32 @function_10005cf4()
  store i32 %v0_10003d74, i32* %r3.global-to-local, align 4
  %v0_10003d78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003d78 = load i32, i32* @r29, align 4
  %v4_10003d78 = icmp eq i32 %v0_10003d78, %v1_10003d78
  %v1_10003d7c = load i32, i32* @r31, align 4
  %v2_10003d7c = add i32 %v1_10003d7c, 4
  %v3_10003d7c = inttoptr i32 %v2_10003d7c to i32*
  store i32 %v0_10003d74, i32* %v3_10003d7c, align 4
  br i1 %v4_10003d78, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003d84:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003d84 = call i32 @function_10005cf4()
  store i32 %v0_10003d84, i32* %r3.global-to-local, align 4
  %v1_10003d88 = load i32, i32* @r31, align 4
  %v2_10003d88 = add i32 %v1_10003d88, 8
  %v3_10003d88 = inttoptr i32 %v2_10003d88 to i32*
  store i32 %v0_10003d84, i32* %v3_10003d88, align 4
  %v0_10003d8c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003d8c, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003d90:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84
  %v0_10003d90 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003d90 = add i32 %v0_10003d90, 40
  store i32 %v1_10003d90, i32* @r3, align 4
  %v0_10003d94 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003d94, i32* @r4, align 4
  %v0_10003d98 = call i32 @function_10005ec8()
  store i32 %v0_10003d98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c8c

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003ab8
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003da4 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003da4 = add i32 %v0_10003da4, 40
  store i32 %v1_10003da4, i32* %r24.global-to-local, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v1_10003dac = add i32 %v0_10003da4, 20
  store i32 %v1_10003dac, i32* @r30, align 4
  %v3_10003db0 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003db0, i1* %cr2_eq.global-to-local, align 1
  %v3_10003db4 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003db4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003dc0:                            ; preds = %dec_label_pc_10003a94
  %v0_10003dc0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003dc0, i32* %r3.global-to-local, align 4
  store i32 268451272, i32* @lr, align 4
  %v0_10003dc4 = call i32 @function_10008680()
  store i32 %v0_10003dc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003dc8

dec_label_pc_10003dc8:                            ; preds = %dec_label_pc_10003844, %dec_label_pc_10003dc0
  store i32 %v0_1000385c, i32* %r0.global-to-local, align 4
  %v1_10003ddc = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000384c)
  store i32 %v0_1000389c, i32* %r28.global-to-local, align 4
  store i32 %v0_100038a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100038ac, i32* %r30.global-to-local, align 4
  %v0_10003e24 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003e24

; uselistorder directives
  uselistorder i32 %v0_10003d64, { 1, 0 }
  uselistorder i32 %v0_10003d54, { 1, 0 }
  uselistorder i32 %v0_10003d44, { 1, 0 }
  uselistorder i32 %v1_10003d3c, { 1, 0 }
  uselistorder i1 %v1_10003cfc, { 1, 0 }
  uselistorder i1 %v0_10003cfc, { 1, 0 }
  uselistorder i32 %v1_10003cec, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003cb4, { 1, 0 }
  uselistorder i32 %v1_10003b28, { 1, 0 }
  uselistorder i32 %v1_10003b20, { 1, 0 }
  uselistorder i32 %v1_10003b04, { 1, 0 }
  uselistorder i32 %v1_10003b00, { 1, 0 }
  uselistorder i32 %v1_10003aec, { 1, 0 }
  uselistorder i32 %v1_10003ae8, { 1, 0 }
  uselistorder i32 %v1_10003ae4, { 2, 1, 0 }
  uselistorder i32 %v1_10003adc, { 1, 2, 0, 3 }
  uselistorder i32 %v6_10003a70, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_10003a5c, { 3, 0, 2, 1 }
  uselistorder i8 %v5_100038dc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10005ec8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_10003dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10003d90, { 1, 0 }
  uselistorder label %dec_label_pc_10003c8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10003b74, { 1, 0 }
}

define i32 @function_10003e28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003e28:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10003e2c = load i32, i32* @lr, align 4
  store i32 %v0_10003e2c, i32* %r0.global-to-local, align 4
  %v0_10003e30 = call i32 @__asm_mfcr()
  store i32 %v0_10003e30, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10003e40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003e30, i32* %r24.global-to-local, align 4
  %v0_10003e80 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003e88 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003e94 = load i32, i32* @r31, align 4
  store i32 268451484, i32* @lr, align 4
  %v2_10003e98 = call i32 @function_100096f8(i32 4, i32 4)
  store i32 %v2_10003e98, i32* %r25.global-to-local, align 4
  %v0_10003ea0 = load i32, i32* @r28, align 4
  %v0_10003eac = load i32, i32* @r29, align 4
  store i32 %v0_10003eac, i32* %r3.global-to-local, align 4
  store i32 268451508, i32* @lr, align 4
  %v4_10003eb0 = inttoptr i32 %v0_10003ea0 to i32*
  %v5_10003eb0 = call i32 @function_100006a8(i32 %v0_10003eac, i32* %v4_10003eb0, i32 2, i32 0)
  %v5_10003ec0 = trunc i32 %v5_10003eb0 to i8
  %v0_10003ec8 = load i32, i32* @r28, align 4
  %v0_10003ecc = load i32, i32* @r29, align 4
  store i32 %v0_10003ecc, i32* %r3.global-to-local, align 4
  store i32 268451540, i32* @lr, align 4
  %v4_10003ed0 = inttoptr i32 %v0_10003ec8 to i32*
  %v5_10003ed0 = call i32 @function_100006a8(i32 %v0_10003ecc, i32* %v4_10003ed0, i32 3, i32 65535)
  %v0_10003ed4 = load i32, i32* @r28, align 4
  store i32 %v5_10003ed0, i32* %r21.global-to-local, align 4
  %v0_10003ee4 = load i32, i32* @r29, align 4
  store i32 %v0_10003ee4, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v4_10003ee8 = inttoptr i32 %v0_10003ed4 to i32*
  %v5_10003ee8 = call i32 @function_100006a8(i32 %v0_10003ee4, i32* %v4_10003ee8, i32 4, i32 64)
  %v0_10003eec = load i32, i32* @r28, align 4
  %v5_10003ef8 = trunc i32 %v5_10003ee8 to i8
  %v0_10003f00 = load i32, i32* @r29, align 4
  store i32 %v0_10003f00, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v4_10003f04 = inttoptr i32 %v0_10003eec to i32*
  %v5_10003f04 = call i32 @function_100006a8(i32 %v0_10003f00, i32* %v4_10003f04, i32 5, i32 1)
  %v0_10003f14 = load i32, i32* @r28, align 4
  %v1_10003f18 = urem i32 %v5_10003f04, 256
  store i32 %v1_10003f18, i32* @r31, align 4
  %v0_10003f1c = load i32, i32* @r29, align 4
  store i32 %v0_10003f1c, i32* %r3.global-to-local, align 4
  store i32 268451620, i32* @lr, align 4
  %v4_10003f20 = inttoptr i32 %v0_10003f14 to i32*
  %v5_10003f20 = call i32 @function_100006a8(i32 %v0_10003f1c, i32* %v4_10003f20, i32 6, i32 65535)
  %v0_10003f28 = load i32, i32* @r28, align 4
  store i32 %v5_10003f20, i32* %r22.global-to-local, align 4
  %v0_10003f38 = load i32, i32* @r29, align 4
  store i32 %v0_10003f38, i32* %r3.global-to-local, align 4
  store i32 268451648, i32* @lr, align 4
  %v4_10003f3c = inttoptr i32 %v0_10003f28 to i32*
  %v5_10003f3c = call i32 @function_100006a8(i32 %v0_10003f38, i32* %v4_10003f3c, i32 7, i32 65535)
  %v0_10003f44 = load i32, i32* @r28, align 4
  store i32 %v5_10003f3c, i32* %r23.global-to-local, align 4
  %v0_10003f54 = load i32, i32* @r29, align 4
  store i32 %v0_10003f54, i32* %r3.global-to-local, align 4
  store i32 268451676, i32* @lr, align 4
  %v4_10003f58 = inttoptr i32 %v0_10003f44 to i32*
  %v5_10003f58 = call i32 @function_100006a8(i32 %v0_10003f54, i32* %v4_10003f58, i32 17, i32 65535)
  %v0_10003f5c = load i32, i32* @r28, align 4
  store i32 %v5_10003f58, i32* %r19.global-to-local, align 4
  %v0_10003f6c = load i32, i32* @r29, align 4
  store i32 %v0_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451700, i32* @lr, align 4
  %v4_10003f70 = inttoptr i32 %v0_10003f5c to i32*
  %v5_10003f70 = call i32 @function_100006a8(i32 %v0_10003f6c, i32* %v4_10003f70, i32 18, i32 0)
  %v0_10003f74 = load i32, i32* @r28, align 4
  store i32 %v5_10003f70, i32* %r20.global-to-local, align 4
  %v0_10003f84 = load i32, i32* @r29, align 4
  store i32 %v0_10003f84, i32* %r3.global-to-local, align 4
  store i32 268451724, i32* @lr, align 4
  %v4_10003f88 = inttoptr i32 %v0_10003f74 to i32*
  %v5_10003f88 = call i32 @function_100006a8(i32 %v0_10003f84, i32* %v4_10003f88, i32 11, i32 0)
  %v0_10003f8c = load i32, i32* @r28, align 4
  store i32 %v5_10003f88, i32* %r14.global-to-local, align 4
  %v0_10003f9c = load i32, i32* @r29, align 4
  store i32 %v0_10003f9c, i32* %r3.global-to-local, align 4
  store i32 268451748, i32* @lr, align 4
  %v4_10003fa0 = inttoptr i32 %v0_10003f8c to i32*
  %v5_10003fa0 = call i32 @function_100006a8(i32 %v0_10003f9c, i32* %v4_10003fa0, i32 12, i32 0)
  %v0_10003fa4 = load i32, i32* @r28, align 4
  store i32 %v5_10003fa0, i32* %r17.global-to-local, align 4
  %v0_10003fb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fb4, i32* %r3.global-to-local, align 4
  store i32 268451772, i32* @lr, align 4
  %v4_10003fb8 = inttoptr i32 %v0_10003fa4 to i32*
  %v5_10003fb8 = call i32 @function_100006a8(i32 %v0_10003fb4, i32* %v4_10003fb8, i32 13, i32 0)
  %v0_10003fbc = load i32, i32* @r28, align 4
  store i32 %v5_10003fb8, i32* %r18.global-to-local, align 4
  %v0_10003fcc = load i32, i32* @r29, align 4
  store i32 %v0_10003fcc, i32* %r3.global-to-local, align 4
  store i32 268451796, i32* @lr, align 4
  %v4_10003fd0 = inttoptr i32 %v0_10003fbc to i32*
  %v5_10003fd0 = call i32 @function_100006a8(i32 %v0_10003fcc, i32* %v4_10003fd0, i32 14, i32 0)
  %v0_10003fd4 = load i32, i32* @r28, align 4
  %v0_10003fe4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fe4, i32* %r3.global-to-local, align 4
  store i32 268451820, i32* @lr, align 4
  %v4_10003fe8 = inttoptr i32 %v0_10003fd4 to i32*
  %v5_10003fe8 = call i32 @function_100006a8(i32 %v0_10003fe4, i32* %v4_10003fe8, i32 15, i32 1)
  %v0_10003fec = load i32, i32* @r28, align 4
  store i32 %v5_10003fe8, i32* %r16.global-to-local, align 4
  %v0_10003ffc = load i32, i32* @r29, align 4
  store i32 %v0_10003ffc, i32* %r3.global-to-local, align 4
  store i32 268451844, i32* @lr, align 4
  %v4_10004000 = inttoptr i32 %v0_10003fec to i32*
  %v5_10004000 = call i32 @function_100006a8(i32 %v0_10003ffc, i32* %v4_10004000, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004008 = load i32, i32* @global_var_1001b718.16, align 4
  %v0_1000400c = load i32, i32* @r28, align 4
  store i32 %v5_10004000, i32* %r30.global-to-local, align 4
  %v0_10004018 = load i32, i32* @r29, align 4
  store i32 %v0_10004018, i32* %r3.global-to-local, align 4
  store i32 268451872, i32* @lr, align 4
  %v5_1000401c = inttoptr i32 %v0_1000400c to i32*
  %v6_1000401c = call i32 @function_10000628(i32 %v0_10004018, i32* %v5_1000401c, i32 25, i32 %v3_10004008, i32 268566528)
  store i32 %v6_1000401c, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451892, i32* @lr, align 4
  %v3_10004030 = call i32 @function_1000939c(i32 2, i32 3, i32 6)
  store i32 %v3_10004030, i32* %r3.global-to-local, align 4
  %v3_10004034 = icmp eq i32 %v3_10004030, -1
  store i32 %v3_10004030, i32* %r26.global-to-local, align 4
  br i1 %v3_10004034, label %dec_label_pc_1000436c, label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10003e28
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000404c = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268451932, i32* @lr, align 4
  %v4_10004058 = call i32 @function_10009360(i32 0, i32 3, i32 %v2_1000404c, i32 4)
  store i32 %v4_10004058, i32* %r3.global-to-local, align 4
  %v3_1000405c = icmp eq i32 %v4_10004058, -1
  br i1 %v3_1000405c, label %dec_label_pc_10004364, label %dec_label_pc_10004064

dec_label_pc_10004064:                            ; preds = %dec_label_pc_10004040
  %v0_10004064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004064 = icmp slt i32 %v0_10004064, 0
  %v3_10004064 = icmp eq i32 %v0_10004064, 0
  store i1 %v1_10004064, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004064, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10004070 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004070 = urem i32 %v0_10004070, 65536
  store i32 %v1_10004070, i32* %r21.global-to-local, align 4
  %v0_10004074 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004074 = urem i32 %v0_10004074, 65536
  store i32 %v1_10004074, i32* %r22.global-to-local, align 4
  %v0_10004078 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004078 = urem i32 %v0_10004078, 65536
  store i32 %v1_10004078, i32* %r23.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 256
  store i32 %v1_1000407c, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10004064, 1
  br i1 %tmp40, label %dec_label_pc_100041e0, label %dec_label_pc_10004084

dec_label_pc_10004084:                            ; preds = %dec_label_pc_10004064
  store i32 %v5_10003fd0, i32* %r0.global-to-local, align 4
  %v0_10004088 = load i32, i32* @r31, align 4
  %v3_10004088 = icmp eq i32 %v0_10004088, 0
  store i1 %v3_10004088, i1* %cr3_eq.global-to-local, align 1
  %v0_1000408c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 2
  store i32 %v1_1000408c, i32* %r29.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 2
  store i32 %v1_10004090, i32* %r17.global-to-local, align 4
  %v0_10004094 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004094 = urem i32 %v0_10004094, 2
  store i32 %v1_10004094, i32* %r18.global-to-local, align 4
  %v1_10004098 = urem i32 %v5_10003fd0, 2
  store i32 %v1_10004098, i32* %r28.global-to-local, align 4
  %v0_1000409c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000409c = urem i32 %v0_1000409c, 2
  store i32 %v1_1000409c, i32* %r30.global-to-local, align 4
  %v1_100040a0 = urem i32 %v0_1000407c, 2
  store i32 %v1_100040a0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100040f0 = sext i8 %v5_10003ec0 to i32
  %v4_100040f8 = sext i8 %v5_10003ef8 to i32
  br label %dec_label_pc_100040a8

dec_label_pc_100040a8:                            ; preds = %dec_label_pc_1000410c, %dec_label_pc_10004084
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268452020, i32* @lr, align 4
  %v2_100040b0 = call i32 @function_100096f8(i32 128, i32 1)
  store i32 %v2_100040b0, i32* %r3.global-to-local, align 4
  %v3_100040b4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100040b4, i32* %r9.global-to-local, align 4
  %v0_100040b8 = load i32, i32* @r31, align 4
  %v1_100040b8 = mul i32 %v0_100040b8, 4
  store i32 %v1_100040b8, i32* %r0.global-to-local, align 4
  %v1_100040bc = load i32, i32* %r25.global-to-local, align 4
  %v3_100040bc = add i32 %v1_100040bc, %v1_100040b8
  %v4_100040bc = inttoptr i32 %v3_100040bc to i32*
  store i32 %v2_100040b0, i32* %v4_100040bc, align 4
  %v0_100040c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100040c0 = mul i32 %v0_100040c0, 4
  store i32 %v1_100040c0, i32* %r9.global-to-local, align 4
  %v1_100040c4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100040c4 = add i32 %v1_100040c4, %v1_100040c0
  %v3_100040c4 = inttoptr i32 %v2_100040c4 to i32*
  %v4_100040c4 = load i32, i32* %v3_100040c4, align 4
  store i32 %v4_100040c4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100040cc = inttoptr i32 %v4_100040c4 to i32*
  %v2_100040cc = load i32, i32* %v1_100040cc, align 4
  store i32 %v2_100040cc, i32* %r0.global-to-local, align 4
  %v1_100040d0 = add i32 %v4_100040c4, 20
  store i32 %v1_100040d0, i32* %r11.global-to-local, align 4
  %v0_100040d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100040d4 = trunc i32 %v0_100040d4 to i16
  %v3_100040d4 = add i32 %v4_100040c4, 4
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i16*
  store i16 %v1_100040d4, i16* %v4_100040d4, align 2
  %v1_100040d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100040e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_100040e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100040e8 = inttoptr i32 %v1_100040e8 to i32*
  store i32 %v1_100040e0, i32* %v2_100040e8, align 4
  %v0_100040ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v2_100040ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100040ec = add i32 %v2_100040ec, 2
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  store i32 %v4_100040f0, i32* %r0.global-to-local, align 4
  %v2_100040f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100040f4 = add i32 %v2_100040f4, 1
  %v4_100040f4 = inttoptr i32 %v3_100040f4 to i8*
  store i8 %v5_10003ec0, i8* %v4_100040f4, align 1
  store i32 %v4_100040f8, i32* %r9.global-to-local, align 4
  %v2_100040fc = load i32, i32* %r31.global-to-local, align 4
  %v3_100040fc = add i32 %v2_100040fc, 8
  %v4_100040fc = inttoptr i32 %v3_100040fc to i8*
  store i8 %v5_10003ef8, i8* %v4_100040fc, align 1
  %v0_10004100 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004100, label %dec_label_pc_1000410c, label %dec_label_pc_10004104

dec_label_pc_10004104:                            ; preds = %dec_label_pc_100040a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004108 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004108 = add i32 %v2_10004108, 6
  %v4_10004108 = inttoptr i32 %v3_10004108 to i16*
  store i16 16384, i16* %v4_10004108, align 2
  br label %dec_label_pc_1000410c

dec_label_pc_1000410c:                            ; preds = %dec_label_pc_100040a8, %dec_label_pc_10004104
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10004110 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004110 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004110 = add i32 %v1_10004110, 12
  %v3_10004110 = inttoptr i32 %v2_10004110 to i32*
  store i32 %v0_10004110, i32* %v3_10004110, align 4
  %v0_10004114 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004114 = trunc i32 %v0_10004114 to i8
  %v2_10004114 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 9
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v1_10004114, i8* %v4_10004114, align 1
  %v0_10004118 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004118 = trunc i32 %v0_10004118 to i16
  %v2_10004118 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004118 = add i32 %v2_10004118, 20
  %v4_10004118 = inttoptr i32 %v3_10004118 to i16*
  store i16 %v1_10004118, i16* %v4_10004118, align 2
  %v3_1000411c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000411c, i32* %r9.global-to-local, align 4
  %v0_10004120 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004120 = trunc i32 %v0_10004120 to i16
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 2
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 %v1_10004120, i16* %v4_10004120, align 2
  %v0_10004124 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004124 = mul i32 %v0_10004124, 24
  %v1_10004128 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004128 = add i32 %v1_10004128, %v1_10004124
  store i32 %v2_10004128, i32* %r9.global-to-local, align 4
  %v1_1000412c = add i32 %v2_10004128, 16
  %v2_1000412c = inttoptr i32 %v1_1000412c to i32*
  %v3_1000412c = load i32, i32* %v2_1000412c, align 4
  store i32 %v3_1000412c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10004134 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004134 = add i32 %v1_10004134, 16
  %v3_10004134 = inttoptr i32 %v2_10004134 to i32*
  store i32 %v3_1000412c, i32* %v3_10004134, align 4
  %v0_10004138 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, 4
  %v3_10004138 = inttoptr i32 %v2_10004138 to i32*
  store i32 %v0_10004138, i32* %v3_10004138, align 4
  %v0_1000413c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000413c = add i32 %v0_1000413c, 12
  %v2_1000413c = inttoptr i32 %v1_1000413c to i32*
  %v3_1000413c = load i32, i32* %v2_1000413c, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10004140, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004148 = call i32 @__asm_rlwimi(i32 %v1_100040a0, i32 21, i32 10, i32 10)
  store i32 %v1_10004148, i32* %r0.global-to-local, align 4
  %v1_1000414c = call i32 @__asm_rlwimi(i32 %v1_10004090, i32 20, i32 11, i32 11)
  store i32 %v1_1000414c, i32* %r0.global-to-local, align 4
  %v1_10004150 = call i32 @__asm_rlwimi(i32 %v1_10004094, i32 19, i32 12, i32 12)
  store i32 %v1_10004150, i32* %r0.global-to-local, align 4
  %v1_10004154 = call i32 @__asm_rlwimi(i32 %v1_10004098, i32 18, i32 13, i32 13)
  store i32 %v1_10004154, i32* %r0.global-to-local, align 4
  %v1_10004158 = call i32 @__asm_rlwimi(i32 %v1_1000408c, i32 17, i32 14, i32 14)
  store i32 %v1_10004158, i32* %r0.global-to-local, align 4
  %v1_1000415c = call i32 @__asm_rlwimi(i32 %v1_1000409c, i32 16, i32 15, i32 15)
  %v1_10004160 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004160 = add i32 %v1_10004160, 12
  %v3_10004160 = inttoptr i32 %v2_10004160 to i32*
  store i32 %v1_1000415c, i32* %v3_10004160, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10004168 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004168 = add i32 %v2_10004168, 40
  %v4_10004168 = inttoptr i32 %v3_10004168 to i8*
  store i8 2, i8* %v4_10004168, align 1
  %v0_1000416c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000416c = trunc i32 %v0_1000416c to i8
  %v2_1000416c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000416c = add i32 %v2_1000416c, 41
  %v4_1000416c = inttoptr i32 %v3_1000416c to i8*
  store i8 %v1_1000416c, i8* %v4_1000416c, align 1
  %v0_10004170 = call i32 @function_10005cf4()
  %v2_10004178 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004178 = add i32 %v2_10004178, 46
  %v4_10004178 = inttoptr i32 %v3_10004178 to i8*
  store i8 8, i8* %v4_10004178, align 1
  %v1_1000417c = urem i32 %v0_10004170, 16
  store i32 %v1_1000417c, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10004188 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004188 = add i32 %v2_10004188, 44
  %v4_10004188 = inttoptr i32 %v3_10004188 to i8*
  store i8 4, i8* %v4_10004188, align 1
  %v0_1000418c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000418c = add i32 %v0_1000418c, 1400
  store i32 %v1_1000418c, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10004194 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004194 = trunc i32 %v0_10004194 to i8
  %v2_10004194 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004194 = add i32 %v2_10004194, 45
  %v4_10004194 = inttoptr i32 %v3_10004194 to i8*
  store i8 %v1_10004194, i8* %v4_10004194, align 1
  %v0_10004198 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004198 = trunc i32 %v0_10004198 to i8
  %v2_10004198 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004198 = add i32 %v2_10004198, 47
  %v4_10004198 = inttoptr i32 %v3_10004198 to i8*
  store i8 %v1_10004198, i8* %v4_10004198, align 1
  %v0_1000419c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000419c = trunc i32 %v0_1000419c to i16
  %v2_1000419c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000419c = add i32 %v2_1000419c, 42
  %v4_1000419c = inttoptr i32 %v3_1000419c to i16*
  store i16 %v1_1000419c, i16* %v4_1000419c, align 2
  %v0_100041a0 = call i32 @function_10005cf4()
  store i32 %v0_100041a0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_100041ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100041ac = add i32 %v1_100041ac, 52
  %v3_100041ac = inttoptr i32 %v2_100041ac to i32*
  store i32 0, i32* %v3_100041ac, align 4
  %v0_100041b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041b0 = trunc i32 %v0_100041b0 to i8
  %v2_100041b0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041b0 = add i32 %v2_100041b0, 56
  %v4_100041b0 = inttoptr i32 %v3_100041b0 to i8*
  store i8 %v1_100041b0, i8* %v4_100041b0, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_100041bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100041bc = add i32 %v1_100041bc, 48
  %v3_100041bc = inttoptr i32 %v2_100041bc to i32*
  store i32 %v0_100041a0, i32* %v3_100041bc, align 4
  %v0_100041c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041c0 = trunc i32 %v0_100041c0 to i8
  %v2_100041c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c0 = add i32 %v2_100041c0, 59
  %v4_100041c0 = inttoptr i32 %v3_100041c0 to i8*
  store i8 %v1_100041c0, i8* %v4_100041c0, align 1
  %v0_100041c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c4 = trunc i32 %v0_100041c4 to i8
  %v2_100041c4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c4 = add i32 %v2_100041c4, 57
  %v4_100041c4 = inttoptr i32 %v3_100041c4 to i8*
  store i8 %v1_100041c4, i8* %v4_100041c4, align 1
  %v0_100041c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c8 = trunc i32 %v0_100041c8 to i8
  %v2_100041c8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c8 = add i32 %v2_100041c8, 58
  %v4_100041c8 = inttoptr i32 %v3_100041c8 to i8*
  store i8 %v1_100041c8, i8* %v4_100041c8, align 1
  %v3_100041cc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100041cc, i32* %r9.global-to-local, align 4
  %v1_100041d0 = add i32 %v3_100041cc, 1
  store i32 %v1_100041d0, i32* %r31.global-to-local, align 4
  %v1_100041d4 = load i32, i32* %r24.global-to-local, align 4
  %v2_100041d4 = icmp slt i32 %v1_100041d0, %v1_100041d4
  store i32 %v1_100041d0, i32* %stack_var_-120, align 4
  br i1 %v2_100041d4, label %dec_label_pc_100040a8, label %dec_label_pc_100041e0.loopexit

dec_label_pc_100041e0.loopexit:                   ; preds = %dec_label_pc_1000410c
  %v0_100041e4.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_100041e8.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041e8.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041e0

dec_label_pc_100041e0:                            ; preds = %dec_label_pc_100041e0.loopexit, %dec_label_pc_10004064
  %v1_100041e8.pre = phi i1 [ %v1_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_10004064, %dec_label_pc_10004064 ]
  %v0_100041e8.pre = phi i1 [ %v0_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v3_10004064, %dec_label_pc_10004064 ]
  %v0_100041e4 = phi i32 [ %v0_100041e4.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_1000407c, %dec_label_pc_10004064 ]
  %v0_100041e0 = load i32, i32* %r15.global-to-local, align 4
  %v3_100041e0 = icmp eq i32 %v0_100041e0, -1
  store i1 %v3_100041e0, i1* %cr2_eq.global-to-local, align 1
  %v3_100041e4 = icmp eq i32 %v0_100041e4, 0
  store i1 %v3_100041e4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100041e8.outer

dec_label_pc_100041e8.outer:                      ; preds = %dec_label_pc_100042c4, %dec_label_pc_100041e0
  %v1_100041e8.ph = phi i1 [ %v1_100041e8.pre, %dec_label_pc_100041e0 ], [ %v1_100042c4, %dec_label_pc_100042c4 ]
  %v0_100041e8.ph = phi i1 [ %v0_100041e8.pre, %dec_label_pc_100041e0 ], [ %v0_100042c4, %dec_label_pc_100042c4 ]
  %v2_100041e8 = or i1 %v1_100041e8.ph, %v0_100041e8.ph
  br label %dec_label_pc_100041e8

dec_label_pc_100041e8:                            ; preds = %dec_label_pc_100041e8.outer, %dec_label_pc_100041e8
  br i1 %v2_100041e8, label %dec_label_pc_100041e8, label %dec_label_pc_100041ec

dec_label_pc_100041ec:                            ; preds = %dec_label_pc_100041e8, %dec_label_pc_100042c4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_10004254, %dec_label_pc_100041ec
  %v0_100041fc = phi i32 [ %v1_100042b4, %dec_label_pc_10004254 ], [ 0, %dec_label_pc_100041ec ]
  %v1_100041fc = mul i32 %v0_100041fc, 24
  store i32 %v1_100041fc, i32* %r0.global-to-local, align 4
  %v1_10004200 = mul i32 %v0_100041fc, 4
  store i32 %v1_10004200, i32* %r11.global-to-local, align 4
  %v1_10004204 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004204 = add i32 %v1_10004204, %v1_10004200
  %v3_10004204 = inttoptr i32 %v2_10004204 to i32*
  %v4_10004204 = load i32, i32* %v3_10004204, align 4
  store i32 %v4_10004204, i32* %r28.global-to-local, align 4
  %v1_10004208 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004208 = add i32 %v1_10004208, %v1_100041fc
  %v1_1000420c = add i32 %v2_10004208, 20
  %v2_1000420c = inttoptr i32 %v1_1000420c to i8*
  %v3_1000420c = load i8, i8* %v2_1000420c, align 1
  %v4_1000420c = zext i8 %v3_1000420c to i32
  store i32 %v4_1000420c, i32* %r9.global-to-local, align 4
  %v1_10004210 = add i32 %v4_10004204, 20
  store i32 %v1_10004210, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_1000420c, 32
  br i1 %tmp41, label %dec_label_pc_100042cc, label %dec_label_pc_1000421c

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_100041fc
  %v0_1000421c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000421c, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_10004220:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10004228 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004228 = icmp eq i32 %v0_10004228, 65535
  br i1 %v4_10004228, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v1_10004230 = phi i32 [ %v1_10004304, %dec_label_pc_100042f4 ], [ 65535, %dec_label_pc_10004220 ]
  %v0_10004230 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004230 = icmp eq i32 %v0_10004230, %v1_10004230
  br i1 %v4_10004230, label %dec_label_pc_1000431c, label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge, %dec_label_pc_10004230
  %v1_10004238 = phi i32 [ %v1_10004238.pre, %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge ], [ %v1_10004230, %dec_label_pc_10004230 ]
  %v0_10004238 = load i32, i32* %r23.global-to-local, align 4
  %v4_10004238 = icmp eq i32 %v0_10004238, %v1_10004238
  br i1 %v4_10004238, label %dec_label_pc_1000432c, label %dec_label_pc_10004240

dec_label_pc_10004240:                            ; preds = %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge, %dec_label_pc_10004238
  %v1_10004240 = phi i32 [ %v1_10004240.pre, %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge ], [ %v1_10004238, %dec_label_pc_10004238 ]
  %v0_10004240 = load i32, i32* %r19.global-to-local, align 4
  %v4_10004240 = icmp eq i32 %v0_10004240, %v1_10004240
  br i1 %v4_10004240, label %dec_label_pc_1000433c, label %dec_label_pc_10004248

dec_label_pc_10004248:                            ; preds = %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge, %dec_label_pc_10004240
  %v1_10004248 = phi i32 [ %v1_10004248.pre, %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge ], [ %v1_10004240, %dec_label_pc_10004240 ]
  %v0_10004248 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004248 = icmp eq i32 %v0_10004248, %v1_10004248
  br i1 %v4_10004248, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_10004250:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_10004250 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004250, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004254:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c, %dec_label_pc_10004358
  %v0_10004254 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004254 = trunc i32 %v0_10004254 to i16
  %v2_10004254 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004254 = add i32 %v2_10004254, 10
  %v4_10004254 = inttoptr i32 %v3_10004254 to i16*
  store i16 %v1_10004254, i16* %v4_10004254, align 2
  %v0_1000425c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000425c, i32* @r3, align 4
  %v2_10004260 = call i32 @function_100043cc(i32 %v0_1000425c, i32 20)
  %v3_10004260 = trunc i32 %v2_10004260 to i16
  %v0_10004264 = load i32, i32* @r31, align 4
  store i32 %v0_10004264, i32* @r4, align 4
  %v4_10004268 = add i32 %v0_1000425c, 10
  %v5_10004268 = inttoptr i32 %v4_10004268 to i16*
  store i16 %v3_10004260, i16* %v5_10004268, align 2
  %v0_10004270 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004270 = trunc i32 %v0_10004270 to i16
  %v2_10004270 = load i32, i32* @r31, align 4
  %v3_10004270 = add i32 %v2_10004270, 16
  %v4_10004270 = inttoptr i32 %v3_10004270 to i16*
  store i16 %v1_10004270, i16* %v4_10004270, align 2
  %v0_10004278 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004278, i32* %r3.global-to-local, align 4
  %v4_1000427c = call i32 @function_10004430(i32 %v0_10004278, i32 %v0_10004264, i32 40, i32 40)
  %v5_1000427c = trunc i32 %v4_1000427c to i16
  store i32 %v4_1000427c, i32* %r3.global-to-local, align 4
  %v3_10004280 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004280, i32* %r7.global-to-local, align 4
  %v0_10004284 = load i32, i32* @r31, align 4
  %v1_10004284 = add i32 %v0_10004284, 2
  %v2_10004284 = inttoptr i32 %v1_10004284 to i16*
  %v3_10004284 = load i16, i16* %v2_10004284, align 2
  %v4_10004284 = zext i16 %v3_10004284 to i32
  store i32 %v4_10004284, i32* %r0.global-to-local, align 4
  %v0_10004288 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000428c = mul i32 %v3_10004280, 24
  store i32 %v1_1000428c, i32* %r7.global-to-local, align 4
  %v4_10004290 = add i32 %v0_10004284, 16
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v5_1000427c, i16* %v5_10004290, align 2
  %v0_10004298 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004298, i32* %r3.global-to-local, align 4
  %v0_1000429c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000429c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000429c = add i32 %v1_1000429c, %v0_1000429c
  store i32 %v2_1000429c, i32* %r7.global-to-local, align 4
  %v0_100042a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100042a4 = trunc i32 %v0_100042a4 to i16
  %v3_100042a4 = add i32 %v2_1000429c, 2
  %v4_100042a4 = inttoptr i32 %v3_100042a4 to i16*
  store i16 %v1_100042a4, i16* %v4_100042a4, align 2
  store i32 268452528, i32* @lr, align 4
  %v6_100042ac = call i32 @function_10009320(i32 %v0_10004298, i32 %v0_10004288, i32 60, i32 16384, i32 %v2_1000429c, i32 16)
  store i32 %v6_100042ac, i32* %r3.global-to-local, align 4
  %v3_100042b0 = load i32, i32* %stack_var_-120, align 4
  %v1_100042b4 = add i32 %v3_100042b0, 1
  store i32 %v1_100042b4, i32* %r9.global-to-local, align 4
  %v1_100042b8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100042b8 = icmp slt i32 %v1_100042b4, %v1_100042b8
  store i32 %v1_100042b4, i32* %stack_var_-120, align 4
  br i1 %v2_100042b8, label %dec_label_pc_100041fc, label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_10004254
  %v0_100042c4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042c4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042c4 = or i1 %v0_100042c4, %v1_100042c4
  br i1 %v2_100042c4, label %dec_label_pc_100041e8.outer, label %dec_label_pc_100041ec

dec_label_pc_100042cc:                            ; preds = %dec_label_pc_100041fc
  %v1_100042cc = add i32 %v2_10004208, 16
  %v2_100042cc = inttoptr i32 %v1_100042cc to i32*
  %v3_100042cc = load i32, i32* %v2_100042cc, align 4
  store i32 %v3_100042cc, i32* %r29.global-to-local, align 4
  %v0_100042d0 = call i32 @function_10005cf4()
  store i32 %v0_100042d0, i32* %r3.global-to-local, align 4
  %v3_100042d4 = load i32, i32* %stack_var_-120, align 4
  %v1_100042d8 = mul i32 %v3_100042d4, 24
  %v1_100042dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100042dc = add i32 %v1_100042dc, %v1_100042d8
  store i32 %v2_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v2_100042dc, 20
  %v2_100042e0 = inttoptr i32 %v1_100042e0 to i8*
  %v3_100042e0 = load i8, i8* %v2_100042e0, align 1
  %v4_100042e0 = zext i8 %v3_100042e0 to i32
  store i32 %v4_100042e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100042e0, 64
  %v2_100042e4 = zext i8 %tmp to i32
  %v3_100042e4 = lshr i32 %v0_100042d0, %v2_100042e4
  store i32 %v3_100042e4, i32* %r3.global-to-local, align 4
  %v0_100042e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100042e8 = add i32 %v3_100042e4, %v0_100042e8
  store i32 %v2_100042e8, i32* %r29.global-to-local, align 4
  %v1_100042ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100042ec = add i32 %v1_100042ec, 16
  %v3_100042ec = inttoptr i32 %v2_100042ec to i32*
  store i32 %v2_100042e8, i32* %v3_100042ec, align 4
  %v0_100042f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100042f0, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_100042f4:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100042f8 = call i32 @function_10005cf4()
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10004300 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004300 = add i32 %v1_10004300, 12
  %v3_10004300 = inttoptr i32 %v2_10004300 to i32*
  store i32 %v0_100042f8, i32* %v3_10004300, align 4
  %v0_10004304 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004304 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004304 = icmp eq i32 %v0_10004304, %v1_10004304
  br i1 %v4_10004304, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_1000430c:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v0_1000430c = call i32 @function_10005cf4()
  %v1_1000430c = trunc i32 %v0_1000430c to i16
  store i32 %v0_1000430c, i32* %r3.global-to-local, align 4
  %v0_10004310 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004310 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004310 = icmp eq i32 %v0_10004310, %v1_10004310
  %v3_10004314 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004314 = add i32 %v3_10004314, 4
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_1000430c, i16* %v5_10004314, align 2
  br i1 %v4_10004310, label %dec_label_pc_1000431c, label %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge

dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge: ; preds = %dec_label_pc_1000430c
  %v1_10004238.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004238

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_1000430c, %dec_label_pc_10004230
  %v0_1000431c = call i32 @function_10005cf4()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v0_10004320 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004320 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004320 = icmp eq i32 %v0_10004320, %v1_10004320
  %v3_10004324 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004324 = add i32 %v3_10004324, 20
  %v5_10004324 = inttoptr i32 %v4_10004324 to i16*
  store i16 %v1_1000431c, i16* %v5_10004324, align 2
  br i1 %v4_10004320, label %dec_label_pc_1000432c, label %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge

dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge: ; preds = %dec_label_pc_1000431c
  %v1_10004240.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004240

dec_label_pc_1000432c:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_10004238
  %v0_1000432c = call i32 @function_10005cf4()
  %v1_1000432c = trunc i32 %v0_1000432c to i16
  store i32 %v0_1000432c, i32* %r3.global-to-local, align 4
  %v0_10004330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004330 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004330 = icmp eq i32 %v0_10004330, %v1_10004330
  %v3_10004334 = load i32, i32* @r31, align 4
  %v4_10004334 = add i32 %v3_10004334, 2
  %v5_10004334 = inttoptr i32 %v4_10004334 to i16*
  store i16 %v1_1000432c, i16* %v5_10004334, align 2
  br i1 %v4_10004330, label %dec_label_pc_1000433c, label %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge

dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge: ; preds = %dec_label_pc_1000432c
  %v1_10004248.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004248

dec_label_pc_1000433c:                            ; preds = %dec_label_pc_1000432c, %dec_label_pc_10004240
  %v0_1000433c = call i32 @function_10005cf4()
  store i32 %v0_1000433c, i32* %r3.global-to-local, align 4
  %v0_10004340 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004340 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004340 = icmp eq i32 %v0_10004340, %v1_10004340
  %v1_10004344 = load i32, i32* @r31, align 4
  %v2_10004344 = add i32 %v1_10004344, 4
  %v3_10004344 = inttoptr i32 %v2_10004344 to i32*
  store i32 %v0_1000433c, i32* %v3_10004344, align 4
  br i1 %v4_10004340, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_1000434c:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_1000434c = call i32 @function_10005cf4()
  store i32 %v0_1000434c, i32* %r3.global-to-local, align 4
  %v1_10004350 = load i32, i32* @r31, align 4
  %v2_10004350 = add i32 %v1_10004350, 8
  %v3_10004350 = inttoptr i32 %v2_10004350 to i32*
  store i32 %v0_1000434c, i32* %v3_10004350, align 4
  %v0_10004354 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004354, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004358:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c
  %v0_10004358 = call i32 @function_10005cf4()
  %v1_10004358 = trunc i32 %v0_10004358 to i16
  store i32 %v0_10004358, i32* %r3.global-to-local, align 4
  %v3_1000435c = load i32, i32* @r31, align 4
  %v4_1000435c = add i32 %v3_1000435c, 18
  %v5_1000435c = inttoptr i32 %v4_1000435c to i16*
  store i16 %v1_10004358, i16* %v5_1000435c, align 2
  br label %dec_label_pc_10004254

dec_label_pc_10004364:                            ; preds = %dec_label_pc_10004040
  %v0_10004364 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004364, i32* %r3.global-to-local, align 4
  store i32 268452716, i32* @lr, align 4
  %v0_10004368 = call i32 @function_10008680()
  store i32 %v0_10004368, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000436c

dec_label_pc_1000436c:                            ; preds = %dec_label_pc_10003e28, %dec_label_pc_10004364
  store i32 %v0_10003e40, i32* %r0.global-to-local, align 4
  %v1_10004380 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003e30)
  store i32 %v0_10003e80, i32* %r28.global-to-local, align 4
  store i32 %v0_10003e88, i32* %r29.global-to-local, align 4
  store i32 %v0_10003e94, i32* %r31.global-to-local, align 4
  %v0_100043c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043c8

; uselistorder directives
  uselistorder i32 %v0_10004358, { 1, 0 }
  uselistorder i32 %v0_1000432c, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_1000430c, { 1, 0 }
  uselistorder i32 %v1_10004304, { 1, 0 }
  uselistorder i1 %v1_100042c4, { 1, 0 }
  uselistorder i1 %v0_100042c4, { 1, 0 }
  uselistorder i32 %v1_100042b4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000427c, { 1, 0 }
  uselistorder i32 %v1_10004200, { 1, 0 }
  uselistorder i32 %v1_100040c0, { 1, 0 }
  uselistorder i32 %v1_100040b8, { 1, 0 }
  uselistorder i32 %v1_100040a0, { 1, 0 }
  uselistorder i32 %v1_1000409c, { 1, 0 }
  uselistorder i32 %v1_10004098, { 1, 0 }
  uselistorder i32 %v1_10004094, { 1, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v1_1000408c, { 1, 0 }
  uselistorder i32 %v1_1000407c, { 1, 0 }
  uselistorder i8 %v5_10003ef8, { 1, 0 }
  uselistorder i8 %v5_10003ec0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 11, 8, 12, 9, 13, 10, 14, 2, 3, 5, 4, 6, 7, 15, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 26, 27, 28, 29, 0, 1, 2, 3, 4 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 1, 2, 0, 3 }
  uselistorder i32 41, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100006a8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 102, 103, 104, 105, 106, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101 }
  uselistorder label %dec_label_pc_1000436c, { 1, 0 }
  uselistorder label %dec_label_pc_10004358, { 1, 0 }
  uselistorder label %dec_label_pc_10004254, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100041ec, { 1, 0 }
  uselistorder label %dec_label_pc_100041e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000410c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 65535, { 50, 51, 0, 7, 52, 53, 19, 20, 21, 22, 1, 8, 54, 55, 23, 24, 25, 26, 27, 56, 9, 28, 29, 57, 10, 30, 31, 13, 12, 11, 58, 59, 32, 33, 34, 14, 15, 60, 35, 61, 36, 62, 2, 16, 63, 64, 5, 37, 38, 39, 3, 17, 65, 66, 6, 40, 41, 42, 4, 18, 67, 68, 43, 44, 45, 69, 70, 71, 72, 73, 74, 46, 47, 75, 76, 77, 78, 79, 80, 48, 49 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_100044f8 = load i32, i32* @r27, align 4
  %v2_100044fc = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_100044fc, i32* @r27, align 4
  %v2_10004504 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004508 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004518 = load i32, i32* @r25, align 4
  %v2_1000451c = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10004520 = load i32, i32* @r30, align 4
  %v2_10004524 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004524, i32* @r30, align 4
  %v0_10004528 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10004530 = load i32, i32* @r23, align 4
  %v0_10004538 = load i32, i32* @r28, align 4
  store i32 268453184, i32* @lr, align 4
  %v3_1000453c = call i32 @function_10008e84(i32 %v2_100044fc, i32 0, i32 4096)
  store i32 268453200, i32* @lr, align 4
  %v3_1000454c = call i32 @function_10008e84(i32 %v2_10004504, i32 0, i32 4096)
  store i32 268453216, i32* @lr, align 4
  %v3_1000455c = call i32 @function_10008e84(i32 %v2_10004524, i32 0, i32 513)
  %v0_10004568 = load i32, i32* @r29, align 4
  %v0_1000456c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000456c, i32* %stack_var_-8792, align 4
  %v3_1000457c = trunc i32 %v0_10004568 to i8
  %v4_1000457c = call i32 @function_1000839c(i8 %v3_1000457c, i32 16, i32 %v2_1000451c)
  store i32 268453256, i32* @lr, align 4
  %v2_10004584 = call i32 @function_10007ec0(i8* nonnull %stack_var_-8776)
  %v3_10004588 = icmp eq i32 %v2_10004584, 2
  br i1 %v3_10004588, label %dec_label_pc_10004ac8, label %dec_label_pc_10004590

dec_label_pc_10004590:                            ; preds = %dec_label_pc_100044e8, %dec_label_pc_10004ac8
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000459c.26 to i32), i32* @lr, align 4
  %v1_10004598 = call i32 @function_10007aac(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100045a4.27 to i32), i32* @lr, align 4
  %v1_100045a0 = call i32 @function_10007aac(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100045ac.28 to i32), i32* @lr, align 4
  %v1_100045a8 = call i32 @function_10007aac(i32 15)
  store i32 268453300, i32* @lr, align 4
  %v1_100045b0 = call i32 @function_10007aac(i32 17)
  %v3_100045bc = call i32 @function_100079f8(i32 17, i32* null)
  store i32 268453324, i32* @lr, align 4
  %v2_100045c8 = call i32 @function_100087e8(i32 %v3_100045bc, i32 0)
  %v3_100045cc = icmp eq i32 %v2_100045c8, -1
  store i32 %v2_100045c8, i32* @r28, align 4
  br i1 %v3_100045cc, label %dec_label_pc_10004a14, label %dec_label_pc_100045d8

dec_label_pc_100045d8:                            ; preds = %dec_label_pc_10004590
  %v2_100045d8 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_100045d8, i32* %r26.global-to-local, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e888 = call i32 @function_10008120(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045c8)
  %v3_100045ec90 = icmp eq i32 %v4_100045e888, 0
  br i1 %v3_100045ec90, label %dec_label_pc_10004794.loopexit, label %dec_label_pc_100045f4

dec_label_pc_100045f4:                            ; preds = %dec_label_pc_100045d8, %dec_label_pc_100045dc.backedge
  %v3_100045f4 = load i8, i8* %stack_var_-8760, align 1
  %v3_100045f8 = icmp eq i8 %v3_100045f4, 0
  br i1 %v3_100045f8, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004600

dec_label_pc_100045dc.backedge:                   ; preds = %dec_label_pc_10004614, %dec_label_pc_100045f4, %dec_label_pc_10004684, %dec_label_pc_1000471c, %dec_label_pc_10004768
  %v0_100045e4.pre = load i32, i32* @r28, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e8 = call i32 @function_10008120(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_100045e4.pre)
  %v3_100045ec = icmp eq i32 %v4_100045e8, 0
  br i1 %v3_100045ec, label %dec_label_pc_10004794.loopexit, label %dec_label_pc_100045f4

dec_label_pc_10004600:                            ; preds = %dec_label_pc_100045f4
  %v3_10004600 = icmp eq i8 %v3_100045f4, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10004600, label %dec_label_pc_10004634, label %dec_label_pc_10004610

dec_label_pc_10004610:                            ; preds = %dec_label_pc_10004600
  %v1_10004618.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004614

dec_label_pc_10004614:                            ; preds = %dec_label_pc_10004628, %dec_label_pc_10004610
  %v0_10004614 = phi i32 [ %v1_10004614, %dec_label_pc_10004628 ], [ 0, %dec_label_pc_10004610 ]
  %v1_10004614 = add i32 %v0_10004614, 1
  %v2_10004618 = add i32 %v1_10004614, %v1_10004618.pre
  %v3_10004618 = inttoptr i32 %v2_10004618 to i8*
  %v4_10004618 = load i8, i8* %v3_10004618, align 1
  %v3_1000461c = icmp eq i8 %v4_10004618, 0
  br i1 %v3_1000461c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004628

dec_label_pc_10004628:                            ; preds = %dec_label_pc_10004614
  %v3_10004620 = icmp eq i8 %v4_10004618, 58
  br i1 %v3_10004620, label %dec_label_pc_1000462c, label %dec_label_pc_10004614

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004628
  %v1_1000462c = add i32 %v0_10004614, 4
  store i32 %v1_1000462c, i32* @r31, align 4
  %v1_10004630 = add i32 %v0_10004614, 3
  br label %dec_label_pc_10004634

dec_label_pc_10004634:                            ; preds = %dec_label_pc_10004600, %dec_label_pc_1000462c
  %v1_1000468c = phi i32 [ 2, %dec_label_pc_10004600 ], [ %v1_10004630, %dec_label_pc_1000462c ]
  %v0_10004634 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004634 = add i32 %v0_10004634, %v1_1000468c
  %v1_1000463c = add i32 %v2_10004634, 32
  %v2_1000463c = inttoptr i32 %v1_1000463c to i8*
  %v3_1000463c = load i8, i8* %v2_1000463c, align 1
  %v3_10004640 = icmp eq i8 %v3_1000463c, 0
  br i1 %v3_10004640, label %dec_label_pc_10004684, label %dec_label_pc_10004648

dec_label_pc_10004648:                            ; preds = %dec_label_pc_10004634
  %v3_10004648 = icmp eq i8 %v3_1000463c, 32
  %v1_1000464c = add i32 %v1_1000468c, 1
  store i32 %v1_1000464c, i32* @r31, align 4
  br i1 %v3_10004648, label %dec_label_pc_10004684, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004648
  %v0_1000465c = load i32, i32* @r30, align 4
  %v2_1000465c = add i32 %v0_1000465c, %v1_1000464c
  br label %dec_label_pc_10004668

dec_label_pc_10004668:                            ; preds = %dec_label_pc_10004668, %dec_label_pc_10004654
  %v0_1000466c = phi i32 [ %v1_1000466c, %dec_label_pc_10004668 ], [ %v1_1000468c, %dec_label_pc_10004654 ]
  %v0_10004670 = phi i32 [ %v1_10004670, %dec_label_pc_10004668 ], [ %v2_1000465c, %dec_label_pc_10004654 ]
  %v1_10004668 = inttoptr i32 %v0_10004670 to i8*
  %v2_10004668 = load i8, i8* %v1_10004668, align 1
  %v1_1000466c = add i32 %v0_1000466c, 1
  %v1_10004670 = add i32 %v0_10004670, 1
  %tmp60 = or i8 %v2_10004668, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_10004680, label %dec_label_pc_10004668

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004668
  %v1_10004680 = add i32 %v0_1000466c, 2
  store i32 %v1_10004680, i32* @r31, align 4
  br label %dec_label_pc_10004684

dec_label_pc_10004684:                            ; preds = %dec_label_pc_10004648, %dec_label_pc_10004634, %dec_label_pc_10004680
  %v1_10004684 = phi i32 [ %v1_1000468c, %dec_label_pc_10004648 ], [ %v1_1000468c, %dec_label_pc_10004634 ], [ %v1_1000466c, %dec_label_pc_10004680 ]
  %v2_10004684 = add i32 %v1_10004684, %v0_10004634
  %v0_1000468c = load i32, i32* @r30, align 4
  %v2_1000468c = add i32 %v0_1000468c, %v1_1000468c
  store i32 %v2_1000468c, i32* @r29, align 4
  %v3_10004690 = add i32 %v2_10004684, 32
  %v4_10004690 = inttoptr i32 %v3_10004690 to i8*
  store i8 0, i8* %v4_10004690, align 1
  %v0_10004694 = load i32, i32* @r29, align 4
  store i32 268453532, i32* @lr, align 4
  %v1_10004698 = inttoptr i32 %v0_10004694 to i8*
  %v2_10004698 = call i32 @function_10007ec0(i8* %v1_10004698)
  %v0_100046a4 = load i32, i32* @r29, align 4
  %v3_100046a8 = inttoptr i32 %v0_100046a4 to i8*
  %v4_100046a8 = call i32 @function_10008270(i8* %v3_100046a8, i32 %v2_10004698, i32 %v2_1000451c)
  %v3_100046b0 = icmp eq i32 %v4_100046a8, -1
  br i1 %v3_100046b0, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_100046bc.preheader

dec_label_pc_100046bc.preheader:                  ; preds = %dec_label_pc_10004684
  %v0_100046bc.pre = load i32, i32* @r31, align 4
  %v0_100046c4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046bc.outer

dec_label_pc_100046bc.outer:                      ; preds = %dec_label_pc_10004a64, %dec_label_pc_100046bc.preheader
  %v0_100046d828.ph = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_100046bc.preheader ]
  %v0_100046bc.ph = phi i32 [ %v1_1000477076, %dec_label_pc_10004a64 ], [ %v0_100046bc.pre, %dec_label_pc_100046bc.preheader ]
  %v0_1000471c.ph = phi i32 [ 1, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_100046bc.preheader ]
  br label %dec_label_pc_100046bc

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_100046bc.outer, %dec_label_pc_10004a54
  %v0_100046d828 = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a54 ], [ %v0_100046d828.ph, %dec_label_pc_100046bc.outer ]
  %v0_100046bc = phi i32 [ %v1_1000477076, %dec_label_pc_10004a54 ], [ %v0_100046bc.ph, %dec_label_pc_100046bc.outer ]
  %v1_100046bc = add i32 %v0_100046bc, 1
  %v2_100046c4 = add i32 %v1_100046bc, %v0_100046c4.pre
  %v1_100046f068 = inttoptr i32 %v2_100046c4 to i8*
  %v2_100046f069 = load i8, i8* %v1_100046f068, align 1
  store i32 %v1_100046bc, i32* @r31, align 4
  %v3_100046f871 = icmp eq i8 %v2_100046f069, 0
  br i1 %v3_100046f871, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_100046cc:                            ; preds = %dec_label_pc_10004708
  %v3_100046fc79 = icmp eq i8 %v3_100046fc79.in, 9
  br i1 %v3_100046fc79, label %dec_label_pc_1000470c, label %dec_label_pc_100046d8

dec_label_pc_100046d8:                            ; preds = %dec_label_pc_100046cc
  %v3_100046cc = icmp eq i32 %v0_100046cc75, 1
  br i1 %v3_100046cc, label %dec_label_pc_10004a4c, label %dec_label_pc_100046e0

dec_label_pc_100046e0:                            ; preds = %dec_label_pc_100046d8, %dec_label_pc_10004a4c
  %v0_100046e0 = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a4c ], [ %v0_1000470c74, %dec_label_pc_100046d8 ]
  %v2_100046e0 = icmp sgt i32 %v0_100046e0, 6
  br i1 %v2_100046e0, label %dec_label_pc_1000471c, label %dec_label_pc_100046ec

dec_label_pc_100046ec:                            ; preds = %dec_label_pc_1000470c, %dec_label_pc_100046e0
  %v0_100046d827 = phi i32 [ %v0_1000470c74, %dec_label_pc_1000470c ], [ %v0_100046e0, %dec_label_pc_100046e0 ]
  %v0_100046cc25 = phi i32 [ 1, %dec_label_pc_1000470c ], [ 0, %dec_label_pc_100046e0 ]
  %v0_100046f022 = add i32 %v0_1000471478, 1
  %v1_100046ec = add i32 %v1_1000477076, 1
  %v1_100046f0 = inttoptr i32 %v0_100046f022 to i8*
  %v2_100046f0 = load i8, i8* %v1_100046f0, align 1
  store i32 %v1_100046ec, i32* @r31, align 4
  %v3_100046f8 = icmp eq i8 %v2_100046f0, 0
  br i1 %v3_100046f8, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_10004708:                            ; preds = %dec_label_pc_100046bc, %dec_label_pc_100046ec
  %v3_100046fc79.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v3_1000470080.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v0_1000471478 = phi i32 [ %v0_100046f022, %dec_label_pc_100046ec ], [ %v2_100046c4, %dec_label_pc_100046bc ]
  %v1_1000477076 = phi i32 [ %v1_100046ec, %dec_label_pc_100046ec ], [ %v1_100046bc, %dec_label_pc_100046bc ]
  %v0_100046cc75 = phi i32 [ %v0_100046cc25, %dec_label_pc_100046ec ], [ 0, %dec_label_pc_100046bc ]
  %v0_1000470c74 = phi i32 [ %v0_100046d827, %dec_label_pc_100046ec ], [ %v0_100046d828, %dec_label_pc_100046bc ]
  %v3_1000470080 = icmp eq i8 %v3_1000470080.in, 32
  br i1 %v3_1000470080, label %dec_label_pc_1000470c, label %dec_label_pc_100046cc

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004708, %dec_label_pc_100046cc
  %tmp62 = icmp slt i32 %v0_1000470c74, 7
  br i1 %tmp62, label %dec_label_pc_100046ec, label %dec_label_pc_1000471c

dec_label_pc_1000471c:                            ; preds = %dec_label_pc_100046ec, %dec_label_pc_100046e0, %dec_label_pc_1000470c, %dec_label_pc_100046bc
  %v1_10004770.lcssa = phi i32 [ %v1_100046bc, %dec_label_pc_100046bc ], [ %v1_1000477076, %dec_label_pc_1000470c ], [ %v1_1000477076, %dec_label_pc_100046e0 ], [ %v1_100046ec, %dec_label_pc_100046ec ]
  %v3_1000471c = icmp eq i32 %v0_1000471c.ph, 0
  br i1 %v3_1000471c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004728

dec_label_pc_10004728:                            ; preds = %dec_label_pc_1000471c
  %v0_10004728 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004728 = add i32 %v0_10004728, %v1_10004770.lcssa
  %v1_1000472c = add i32 %v2_10004728, 32
  %v2_1000472c = inttoptr i32 %v1_1000472c to i8*
  %v3_1000472c = load i8, i8* %v2_1000472c, align 1
  %v3_10004730 = icmp eq i8 %v3_1000472c, 0
  br i1 %v3_10004730, label %dec_label_pc_10004768, label %dec_label_pc_10004738

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004728
  %v3_10004738 = icmp eq i8 %v3_1000472c, 32
  br i1 %v3_10004738, label %dec_label_pc_10004768, label %dec_label_pc_10004740

dec_label_pc_10004740:                            ; preds = %dec_label_pc_10004738
  %v1_10004740 = add i32 %v1_10004770.lcssa, 1
  %v2_10004744 = add i32 %v1_10004740, %v0_100046c4.pre
  br label %dec_label_pc_10004750

dec_label_pc_10004750:                            ; preds = %dec_label_pc_10004750, %dec_label_pc_10004740
  %v0_10004754 = phi i32 [ %v1_10004754, %dec_label_pc_10004750 ], [ %v1_10004770.lcssa, %dec_label_pc_10004740 ]
  %v0_10004758 = phi i32 [ %v1_10004758, %dec_label_pc_10004750 ], [ %v2_10004744, %dec_label_pc_10004740 ]
  %v1_10004750 = inttoptr i32 %v0_10004758 to i8*
  %v2_10004750 = load i8, i8* %v1_10004750, align 1
  %v1_10004754 = add i32 %v0_10004754, 1
  %v1_10004758 = add i32 %v0_10004758, 1
  %tmp63 = or i8 %v2_10004750, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004768, label %dec_label_pc_10004750

dec_label_pc_10004768:                            ; preds = %dec_label_pc_10004750, %dec_label_pc_10004738, %dec_label_pc_10004728
  %v1_10004768 = phi i32 [ %v1_10004770.lcssa, %dec_label_pc_10004738 ], [ %v1_10004770.lcssa, %dec_label_pc_10004728 ], [ %v1_10004754, %dec_label_pc_10004750 ]
  %v2_10004768 = add i32 %v1_10004768, %v0_10004728
  %v2_10004770 = add i32 %v1_10004770.lcssa, %v0_100046c4.pre
  store i32 %v2_10004770, i32* @r31, align 4
  %v3_10004774 = add i32 %v2_10004768, 32
  %v4_10004774 = inttoptr i32 %v3_10004774 to i8*
  store i8 0, i8* %v4_10004774, align 1
  %v0_10004778 = load i32, i32* @r31, align 4
  store i32 268453760, i32* @lr, align 4
  %v1_1000477c = inttoptr i32 %v0_10004778 to i8*
  %v2_1000477c = call i32 @function_10007ec0(i8* %v1_1000477c)
  %v2_10004780 = icmp sgt i32 %v2_1000477c, 15
  br i1 %v2_10004780, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004788

dec_label_pc_10004788:                            ; preds = %dec_label_pc_10004768
  %v0_10004788 = load i32, i32* @r31, align 4
  store i32 %v2_100045d8, i32* @r3, align 4
  %v2_10004790 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10004790 = call i32 @function_10007ee8(i8* %v2_10004790, i32 %v0_10004788)
  br label %dec_label_pc_10004794

dec_label_pc_10004794.loopexit:                   ; preds = %dec_label_pc_100045dc.backedge, %dec_label_pc_100045d8
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10004794

dec_label_pc_10004794:                            ; preds = %dec_label_pc_10004794.loopexit, %dec_label_pc_10004788
  %v1_100047a0.pre-phi = phi i8* [ %.pre, %dec_label_pc_10004794.loopexit ], [ %v2_10004790, %dec_label_pc_10004788 ]
  store i32 268453788, i32* @lr, align 4
  %v0_10004798 = call i32 @function_10008680()
  store i32 268453796, i32* @lr, align 4
  %v2_100047a0 = call i32 @function_10007ec0(i8* %v1_100047a0.pre-phi)
  %v3_100047a4 = icmp eq i32 %v2_100047a0, 0
  br i1 %v3_100047a4, label %dec_label_pc_10004a6c, label %dec_label_pc_100047ac

dec_label_pc_100047ac:                            ; preds = %dec_label_pc_10004794
  %v3_100047b4 = call i32 @function_100079f8(i32 13, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453824, i32* @lr, align 4
  %v1_100047bc = call i32 @function_10008bcc(i32 %v3_100047b4)
  store i32 %v1_100047bc, i32* @r23, align 4
  %v3_100047c0 = icmp eq i32 %v1_100047bc, 0
  br i1 %v3_100047c0, label %dec_label_pc_100049f4, label %dec_label_pc_100047c8

dec_label_pc_100047c8:                            ; preds = %dec_label_pc_100047ac
  store i32 0, i32* @r28, align 4
  store i32 268453844, i32* @lr, align 4
  %v1_100047d07 = inttoptr i32 %v1_100047bc to i32*
  %v2_100047d08 = call i32 @function_10008cdc(i32* %v1_100047d07)
  %v3_100047d411 = icmp eq i32 %v2_100047d08, 0
  br i1 %v3_100047d411, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc.preheader.lr.ph

dec_label_pc_100047dc.preheader.lr.ph:            ; preds = %dec_label_pc_100047c8
  %v2_10004810 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10004980 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_100047dc.preheader

dec_label_pc_100047cc.loopexit:                   ; preds = %dec_label_pc_100047e4, %dec_label_pc_100047fc, %dec_label_pc_10004864
  %v0_100047cc = load i32, i32* @r23, align 4
  store i32 268453844, i32* @lr, align 4
  %v1_100047d0 = inttoptr i32 %v0_100047cc to i32*
  %v2_100047d0 = call i32 @function_10008cdc(i32* %v1_100047d0)
  %v3_100047d4 = icmp eq i32 %v2_100047d0, 0
  br i1 %v3_100047d4, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc.preheader

dec_label_pc_100047dc.preheader:                  ; preds = %dec_label_pc_100047dc.preheader.lr.ph, %dec_label_pc_100047cc.loopexit
  %v0_100047e435 = phi i32 [ %v2_100047d08, %dec_label_pc_100047dc.preheader.lr.ph ], [ %v2_100047d0, %dec_label_pc_100047cc.loopexit ]
  br label %dec_label_pc_100047dc

dec_label_pc_100047dc:                            ; preds = %dec_label_pc_100047dc.preheader, %dec_label_pc_100049d0
  %v0_100047e4 = phi i32 [ %v0_100047e435, %dec_label_pc_100047dc.preheader ], [ %v2_100049dc, %dec_label_pc_100049d0 ]
  %v0_100047dc = load i32, i32* @r28, align 4
  %v3_100047dc = icmp eq i32 %v0_100047dc, 0
  br i1 %v3_100047dc, label %dec_label_pc_100047e4, label %dec_label_pc_100049e8

dec_label_pc_100047e4:                            ; preds = %dec_label_pc_100047dc
  %v1_100047e4 = add i32 %v0_100047e4, 11
  %v2_100047e4 = inttoptr i32 %v1_100047e4 to i8*
  %v3_100047e4 = load i8, i8* %v2_100047e4, align 1
  %v4_100047e4 = zext i8 %v3_100047e4 to i32
  store i32 %v1_100047e4, i32* @r30, align 4
  %v1_100047ec = add nuw nsw i32 %v4_100047e4, 208
  %v1_100047f0 = urem i32 %v1_100047ec, 256
  %v2_100047f4 = icmp ugt i32 %v1_100047f0, 9
  br i1 %v2_100047f4, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_100047fc

dec_label_pc_100047fc:                            ; preds = %dec_label_pc_100047e4
  %v3_10004804 = call i32 @function_100079f8(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004810 = call i32 @function_10007ee8(i8* %v2_10004810, i32 %v3_10004804)
  store i32 268453916, i32* @lr, align 4
  %v2_10004818 = call i32 @function_10007ec0(i8* %v2_10004810)
  %v0_1000481c = load i32, i32* @r30, align 4
  %v0_10004820 = load i32, i32* @r27, align 4
  %v2_10004820 = add i32 %v0_10004820, %v2_10004818
  store i32 %v2_10004820, i32* @r3, align 4
  %v2_10004824 = inttoptr i32 %v2_10004820 to i8*
  %v3_10004824 = call i32 @function_10007ee8(i8* %v2_10004824, i32 %v0_1000481c)
  store i32 268453936, i32* @lr, align 4
  %v2_1000482c = call i32 @function_10007ec0(i8* %v2_10004810)
  %v3_1000483c = call i32 @function_100079f8(i32 14, i32* null)
  %v0_10004844 = load i32, i32* @r27, align 4
  %v2_10004844 = add i32 %v2_1000482c, %v0_10004844
  store i32 %v2_10004844, i32* @r3, align 4
  %v2_10004848 = inttoptr i32 %v2_10004844 to i8*
  %v3_10004848 = call i32 @function_10007ee8(i8* %v2_10004848, i32 %v3_1000483c)
  store i32 4096, i32* @r5, align 4
  store i32 268453980, i32* @lr, align 4
  %v3_10004858 = call i32 @function_10008900(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_1000485c = icmp eq i32 %v3_10004858, -1
  br i1 %v3_1000485c, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_10004864

dec_label_pc_10004864:                            ; preds = %dec_label_pc_100047fc
  %v3_1000486c = call i32 @function_100079f8(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004878 = call i32 @function_10007ee8(i8* %v2_10004810, i32 %v3_1000486c)
  store i32 268454020, i32* @lr, align 4
  %v2_10004880 = call i32 @function_10007ec0(i8* %v2_10004810)
  %v0_10004884 = load i32, i32* @r30, align 4
  %v0_10004888 = load i32, i32* @r27, align 4
  %v2_10004888 = add i32 %v0_10004888, %v2_10004880
  store i32 %v2_10004888, i32* @r3, align 4
  %v2_1000488c = inttoptr i32 %v2_10004888 to i8*
  %v3_1000488c = call i32 @function_10007ee8(i8* %v2_1000488c, i32 %v0_10004884)
  store i32 268454040, i32* @lr, align 4
  %v2_10004894 = call i32 @function_10007ec0(i8* %v2_10004810)
  %v3_100048a4 = call i32 @function_100079f8(i32 15, i32* null)
  %v0_100048ac = load i32, i32* @r27, align 4
  %v2_100048ac = add i32 %v2_10004894, %v0_100048ac
  store i32 %v2_100048ac, i32* @r3, align 4
  %v2_100048b0 = inttoptr i32 %v2_100048ac to i8*
  %v3_100048b0 = call i32 @function_10007ee8(i8* %v2_100048b0, i32 %v3_100048a4)
  store i32 268454076, i32* @lr, align 4
  %v1_100048b8 = call i32 @function_10008bcc(i32 %v2_100044fc)
  store i32 %v1_100048b8, i32* @r25, align 4
  %v3_100048bc = icmp eq i32 %v1_100048b8, 0
  br i1 %v3_100048bc, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_100048c4

dec_label_pc_100048c4.loopexit:                   ; preds = %dec_label_pc_100048e4, %dec_label_pc_10004980
  %v0_100048c4.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048c4

dec_label_pc_100048c4:                            ; preds = %dec_label_pc_10004864, %dec_label_pc_100048c4.loopexit
  %v0_100048c4 = phi i32 [ %v0_100048c4.pre, %dec_label_pc_100048c4.loopexit ], [ %v1_100048b8, %dec_label_pc_10004864 ]
  store i32 268454092, i32* @lr, align 4
  %v1_100048c8 = inttoptr i32 %v0_100048c4 to i32*
  %v2_100048c8 = call i32 @function_10008cdc(i32* %v1_100048c8)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048c8, i32* @r31, align 4
  %v3_100048d0 = icmp eq i32 %v2_100048c8, 0
  %v0_100048d4 = load i32, i32* @r28, align 4
  store i32 %v2_10004504, i32* @r3, align 4
  %v3_100048d4.not = icmp ne i32 %v0_100048d4, 0
  %brmerge = or i1 %v3_100048d0, %v3_100048d4.not
  br i1 %brmerge, label %dec_label_pc_100049d0, label %dec_label_pc_100048e4

dec_label_pc_100048e4:                            ; preds = %dec_label_pc_100048c4
  store i32 268454120, i32* @lr, align 4
  %v0_100048e4 = call i32 @function_10007f68()
  %v3_100048f0 = call i32 @function_100079f8(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_100048fc = call i32 @function_10007ee8(i8* %v2_10004810, i32 %v3_100048f0)
  store i32 268454152, i32* @lr, align 4
  %v2_10004904 = call i32 @function_10007ec0(i8* %v2_10004810)
  %v0_10004908 = load i32, i32* @r30, align 4
  %v0_1000490c = load i32, i32* @r27, align 4
  %v2_1000490c = add i32 %v0_1000490c, %v2_10004904
  store i32 %v2_1000490c, i32* @r3, align 4
  %v2_10004910 = inttoptr i32 %v2_1000490c to i8*
  %v3_10004910 = call i32 @function_10007ee8(i8* %v2_10004910, i32 %v0_10004908)
  store i32 268454172, i32* @lr, align 4
  %v2_10004918 = call i32 @function_10007ec0(i8* %v2_10004810)
  %v3_10004928 = call i32 @function_100079f8(i32 15, i32* null)
  %v0_10004930 = load i32, i32* @r27, align 4
  %v2_10004930 = add i32 %v2_10004918, %v0_10004930
  store i32 %v2_10004930, i32* @r3, align 4
  %v2_10004934 = inttoptr i32 %v2_10004930 to i8*
  %v3_10004934 = call i32 @function_10007ee8(i8* %v2_10004934, i32 %v3_10004928)
  store i32 268454208, i32* @lr, align 4
  %v2_1000493c = call i32 @function_10007ec0(i8* %v2_10004810)
  %v0_10004948 = load i32, i32* @r27, align 4
  %v2_10004948 = add i32 %v0_10004948, %v2_1000493c
  store i32 %v2_10004948, i32* @r3, align 4
  %v2_1000494c = inttoptr i32 %v2_10004948 to i8*
  %v3_1000494c = call i32 @function_10007ee8(i8* %v2_1000494c, i32 ptrtoint (i32* @global_var_1000b07c.30 to i32))
  store i32 268454232, i32* @lr, align 4
  %v2_10004954 = call i32 @function_10007ec0(i8* %v2_10004810)
  %v0_10004958 = load i32, i32* @r31, align 4
  %v1_10004958 = add i32 %v0_10004958, 11
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v0_1000495c, %v2_10004954
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_10007ee8(i8* %v2_10004960, i32 %v1_10004958)
  store i32 268454260, i32* @lr, align 4
  %v3_10004970 = call i32 @function_10008900(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_10004974 = icmp eq i32 %v3_10004970, -1
  br i1 %v3_10004974, label %dec_label_pc_100048c4.loopexit, label %dec_label_pc_10004980

dec_label_pc_10004980:                            ; preds = %dec_label_pc_100048e4
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_10007ec0(i8* %v1_10004980)
  %v4_10004990 = call i32 @function_10008270(i8* %v1_10004980, i32 %v2_10004980, i32 %v2_100045d8)
  %v3_10004998 = icmp eq i32 %v4_10004990, -1
  %v0_1000499c = load i32, i32* @r30, align 4
  store i32 %v0_1000499c, i32* @r3, align 4
  br i1 %v3_10004998, label %dec_label_pc_100048c4.loopexit, label %dec_label_pc_100049a4

dec_label_pc_100049a4:                            ; preds = %dec_label_pc_10004980
  store i32 268454312, i32* @lr, align 4
  %v2_100049a4 = call i32 @function_10007fe8(i32 %v0_1000499c, i32 10)
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_100087a0(i32 %v2_100049a4, i32 9)
  %v0_100049b0 = load i32, i32* @r25, align 4
  store i32 268454328, i32* @lr, align 4
  %v1_100049b4 = inttoptr i32 %v0_100049b0 to i32*
  %v2_100049b4 = call i32 @function_10008cdc(i32* %v1_100049b4)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049b4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100048c4, %dec_label_pc_100049a4
  %v0_100049d0 = load i32, i32* @r25, align 4
  store i32 268454360, i32* @lr, align 4
  %v1_100049d4 = inttoptr i32 %v0_100049d0 to i32*
  %v2_100049d4 = call i32 @function_10008b28(i32* %v1_100049d4)
  %v0_100049d8 = load i32, i32* @r23, align 4
  store i32 268454368, i32* @lr, align 4
  %v1_100049dc = inttoptr i32 %v0_100049d8 to i32*
  %v2_100049dc = call i32 @function_10008cdc(i32* %v1_100049dc)
  %v3_100049e0 = icmp eq i32 %v2_100049dc, 0
  br i1 %v3_100049e0, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc

dec_label_pc_100049e8:                            ; preds = %dec_label_pc_100047cc.loopexit, %dec_label_pc_100049d0, %dec_label_pc_100047dc, %dec_label_pc_100047c8
  %v0_100049e8 = load i32, i32* @r23, align 4
  %v0_100049ec = load i32, i32* @r28, align 4
  %v1_100049ec = urem i32 %v0_100049ec, 256
  store i32 %v1_100049ec, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100049f4.31 to i32), i32* @lr, align 4
  %v1_100049f0 = inttoptr i32 %v0_100049e8 to i32*
  %v2_100049f0 = call i32 @function_10008b28(i32* %v1_100049f0)
  br label %dec_label_pc_100049f4

dec_label_pc_100049f4:                            ; preds = %dec_label_pc_100047ac, %dec_label_pc_100049e8
  store i32 ptrtoint ([3 x i8]* @global_var_100049fc.32 to i32), i32* @lr, align 4
  %v1_100049f8 = call i32 @function_10009e94(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a04.33 to i32), i32* @lr, align 4
  %v1_10004a00 = call i32 @function_10007a20(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a0c.34 to i32), i32* @lr, align 4
  %v1_10004a08 = call i32 @function_10007a20(i32 14)
  store i32 268454420, i32* @lr, align 4
  %v1_10004a10 = call i32 @function_10007a20(i32 15)
  br label %dec_label_pc_10004a14

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_10004590, %dec_label_pc_100049f4
  %v0_10004a18 = load i32, i32* @r31, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a18

dec_label_pc_10004a4c:                            ; preds = %dec_label_pc_100046d8
  %v3_100046d8 = icmp eq i32 %v0_1000470c74, 0
  %v1_10004a4c = add i32 %v0_1000470c74, 1
  br i1 %v3_100046d8, label %dec_label_pc_10004a54, label %dec_label_pc_100046e0

dec_label_pc_10004a54:                            ; preds = %dec_label_pc_10004a4c
  %v0_10004a54 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a54 = add i32 %v0_10004a54, %v1_1000477076
  %v1_10004a58 = add i32 %v2_10004a54, 33
  %v2_10004a58 = inttoptr i32 %v1_10004a58 to i8*
  %v3_10004a58 = load i8, i8* %v2_10004a58, align 1
  %v3_10004a5c = icmp eq i8 %v3_10004a58, 65
  br i1 %v3_10004a5c, label %dec_label_pc_10004a64, label %dec_label_pc_100046bc

dec_label_pc_10004a64:                            ; preds = %dec_label_pc_10004a54
  br label %dec_label_pc_100046bc.outer

dec_label_pc_10004a6c:                            ; preds = %dec_label_pc_10004794
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a78.35 to i32), i32* @lr, align 4
  %v1_10004a74 = call i32 @function_10007a20(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a80.36 to i32), i32* @lr, align 4
  %v1_10004a7c = call i32 @function_10007a20(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a88.37 to i32), i32* @lr, align 4
  %v1_10004a84 = call i32 @function_10007a20(i32 15)
  store i32 268454544, i32* @lr, align 4
  %v1_10004a8c = call i32 @function_10007a20(i32 17)
  %v0_10004a94 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a94

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_100044e8
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10004590

; uselistorder directives
  uselistorder i32 %v2_100049dc, { 1, 0 }
  uselistorder i32 %v1_10004770.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000470c74, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000477076, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_100046f022, { 1, 0 }
  uselistorder i32 %v1_1000468c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_100045d8, { 1, 0, 2 }
  uselistorder i32 %v2_1000451c, { 1, 0 }
  uselistorder i32 %v2_100044fc, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10007fe8, { 1, 0 }
  uselistorder i32 268453844, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10008120, { 1, 0 }
  uselistorder i32 268453356, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 0 }
  uselistorder label %dec_label_pc_100049f4, { 1, 0 }
  uselistorder label %dec_label_pc_100049e8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049d0, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100047dc, { 1, 0 }
  uselistorder label %dec_label_pc_100047dc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047cc.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000471c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004708, { 1, 0 }
  uselistorder label %dec_label_pc_100046e0, { 1, 0 }
  uselistorder label %dec_label_pc_100046bc, { 1, 0 }
  uselistorder label %dec_label_pc_10004684, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004634, { 1, 0 }
  uselistorder label %dec_label_pc_100045dc.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100045f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004590, { 1, 0 }
}

define i32 @function_10004aec(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004aec:
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8500 = alloca i32, align 4
  %stack_var_-8504 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8464 = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-8432 = alloca i32, align 4
  %stack_var_-8480 = alloca i32, align 4
  %stack_var_-8496 = alloca i32, align 4
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-8384 = alloca i32, align 4
  %stack_var_-8320 = alloca i32, align 4
  %stack_var_-8400 = alloca i32, align 4
  %stack_var_-8256 = alloca i32, align 4
  %v0_10004af8 = load i32, i32* @r30, align 4
  %v0_10004b08 = load i32, i32* @r22, align 4
  %v0_10004b0c = load i32, i32* @r23, align 4
  %v0_10004b10 = load i32, i32* @r24, align 4
  %v0_10004b14 = load i32, i32* @r25, align 4
  %v0_10004b18 = load i32, i32* @r26, align 4
  %v0_10004b1c = load i32, i32* @r27, align 4
  %v0_10004b20 = load i32, i32* @r28, align 4
  %v0_10004b24 = load i32, i32* @r29, align 4
  %v0_10004b28 = load i32, i32* @r31, align 4
  store i32 268454704, i32* @lr, align 4
  %v0_10004b2c = call i32 @function_10008a50()
  store i32 %v0_10004b2c, i32* @r30, align 4
  store i32 268454712, i32* @lr, align 4
  %v0_10004b34 = call i32 @function_100086c8()
  store i32 %v0_10004b34, i32* @global_var_1001b724.38, align 4
  %tmp64 = icmp slt i32 %v0_10004b34, 1
  br i1 %tmp64, label %dec_label_pc_10004b88, label %dec_label_pc_10004b48

dec_label_pc_10004b48:                            ; preds = %dec_label_pc_10004ca0, %dec_label_pc_10004b90, %dec_label_pc_10004b88, %dec_label_pc_10004aec
  %v0_10004b84 = phi i32 [ -1, %dec_label_pc_10004b90 ], [ -1, %dec_label_pc_10004b88 ], [ %v0_10004b34, %dec_label_pc_10004aec ], [ 0, %dec_label_pc_10004ca0 ]
  store i32 %v0_10004b08, i32* @r22, align 4
  store i32 %v0_10004b0c, i32* @r23, align 4
  store i32 %v0_10004b10, i32* @r24, align 4
  store i32 %v0_10004b14, i32* @r25, align 4
  store i32 %v0_10004b18, i32* @r26, align 4
  store i32 %v0_10004b1c, i32* @r27, align 4
  store i32 %v0_10004b20, i32* @r28, align 4
  store i32 %v0_10004b24, i32* @r29, align 4
  store i32 %v0_10004af8, i32* @r30, align 4
  store i32 %v0_10004b28, i32* @r31, align 4
  ret i32 %v0_10004b84

dec_label_pc_10004b88:                            ; preds = %dec_label_pc_10004aec
  %v3_10004b88 = icmp eq i32 %v0_10004b34, -1
  br i1 %v3_10004b88, label %dec_label_pc_10004b48, label %dec_label_pc_10004b90

dec_label_pc_10004b90:                            ; preds = %dec_label_pc_10004b88
  store i32 268454812, i32* @lr, align 4
  %v1_10004b98 = call i32 @function_10009e94(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004ba4.39 to i32), i32* @lr, align 4
  %v0_10004ba0 = call i32 @function_100095a0()
  store i32 %v0_10004ba0, i32* %r11.global-to-local, align 4
  %v3_10004bb0 = inttoptr i32 %v0_10004ba0 to i8*
  store i8 0, i8* %v3_10004bb0, align 1
  store i32 0, i32* %r28.global-to-local, align 4
  %v0_10004bbc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004bbc, i32* @global_var_1001b720.40, align 4
  store i32 0, i32* @global_var_1001b71c.41, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004bc8.42 to i32), i32* @lr, align 4
  %v1_10004bc4 = call i32 @function_10007aac(i32 13)
  %v2_10004bcc = ptrtoint i32* %stack_var_-8256 to i32
  store i32 %v2_10004bcc, i32* @r25, align 4
  store i32 268454868, i32* @lr, align 4
  %v1_10004bd0 = call i32 @function_10007aac(i32 14)
  %v3_10004bdc = call i32 @function_100079f8(i32 13, i32* null)
  store i32 %v2_10004bcc, i32* @r3, align 4
  %v2_10004be8 = bitcast i32* %stack_var_-8256 to i8*
  %v3_10004be8 = call i32 @function_10007ee8(i8* %v2_10004be8, i32 %v3_10004bdc)
  %v0_10004bec = load i32, i32* @r25, align 4
  %v2_10004bec = add i32 %v0_10004bec, %v3_10004be8
  store i32 %v2_10004bec, i32* %r29.global-to-local, align 4
  store i32 268454900, i32* @lr, align 4
  %v0_10004bf0 = call i32 @function_10008710()
  %v2_10004bf4 = ptrtoint i32* %stack_var_-8400 to i32
  %v3_10004bfc = trunc i32 %v0_10004bf0 to i8
  %v4_10004bfc = call i32 @function_1000839c(i8 %v3_10004bfc, i32 10, i32 %v2_10004bf4)
  store i32 %v2_10004bec, i32* @r3, align 4
  %v2_10004c08 = inttoptr i32 %v2_10004bec to i8*
  %v3_10004c08 = call i32 @function_10007ee8(i8* %v2_10004c08, i32 %v4_10004bfc)
  %v0_10004c10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004c10 = add i32 %v0_10004c10, %v3_10004c08
  store i32 %v2_10004c10, i32* %r29.global-to-local, align 4
  %v3_10004c18 = call i32 @function_100079f8(i32 14, i32* null)
  store i32 %v2_10004c10, i32* @r3, align 4
  %v2_10004c24 = inttoptr i32 %v2_10004c10 to i8*
  %v3_10004c24 = call i32 @function_10007ee8(i8* %v2_10004c24, i32 %v3_10004c18)
  store i32 %v3_10004c24, i32* @r31, align 4
  store i32 268454972, i32* @lr, align 4
  %v2_10004c38 = call i32 @function_100087e8(i32 %v2_10004bcc, i32 0)
  %v3_10004c3c = icmp eq i32 %v2_10004c38, -1
  br i1 %v3_10004c3c, label %dec_label_pc_10004b48, label %dec_label_pc_10004c44

dec_label_pc_10004c44:                            ; preds = %dec_label_pc_10004b90
  store i32 ptrtoint ([3 x i8]* @global_var_10004c48.43 to i32), i32* @lr, align 4
  %v0_10004c44 = call i32 @function_10008680()
  store i32 ptrtoint ([3 x i8]* @global_var_10004c50.44 to i32), i32* @lr, align 4
  %v1_10004c4c = call i32 @function_10007a20(i32 13)
  store i32 268455000, i32* @lr, align 4
  %v1_10004c54 = call i32 @function_10007a20(i32 14)
  %v3_10004c58 = load i32, i32* @global_var_1001b720.40, align 4
  store i32 268455016, i32* @lr, align 4
  %v3_10004c64 = call i32 @function_10008900(i32 %v2_10004bcc, i32 %v3_10004c58, i32 4095)
  %v3_10004c68 = icmp eq i32 %v3_10004c64, -1
  br i1 %v3_10004c68, label %dec_label_pc_10004c78, label %dec_label_pc_10004c70

dec_label_pc_10004c70:                            ; preds = %dec_label_pc_10004c44
  %v3_10004c70 = load i32, i32* @global_var_1001b720.40, align 4
  %v0_10004c74 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004c74 = trunc i32 %v0_10004c74 to i8
  %v4_10004c74 = add i32 %v3_10004c70, %v3_10004c64
  %v5_10004c74 = inttoptr i32 %v4_10004c74 to i8*
  store i8 %v3_10004c74, i8* %v5_10004c74, align 1
  br label %dec_label_pc_10004c78

dec_label_pc_10004c78:                            ; preds = %dec_label_pc_10004c44, %dec_label_pc_10004c70
  %v0_10004c78 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004c78 = load i32, i32* @r31, align 4
  %v2_10004c78 = add i32 %v1_10004c78, %v0_10004c78
  store i32 %v2_10004bcc, i32* @r3, align 4
  %v0_10004c80 = load i32, i32* @r25, align 4
  %v2_10004c80 = sub i32 %v2_10004c78, %v0_10004c80
  store i32 %v2_10004c80, i32* @r4, align 4
  %v0_10004c84 = load i32, i32* @r30, align 4
  store i32 %v0_10004c84, i32* %r29.global-to-local, align 4
  store i32 268455052, i32* @lr, align 4
  %v0_10004c88 = call i32 @function_10007f68()
  store i32 400, i32* @r28, align 4
  store i32 0, i32* @r26, align 4
  %v2_10004c94 = ptrtoint i32* %stack_var_-8320 to i32
  store i32 %v2_10004c94, i32* @r23, align 4
  %v2_10004c98 = ptrtoint i32* %stack_var_-8384 to i32
  store i32 %v2_10004c98, i32* @r22, align 4
  %v2_10004c9c = ptrtoint i32* %stack_var_-4160 to i32
  %v2_10004f30 = bitcast i32* %stack_var_-8320 to i8*
  %v2_10004f74 = bitcast i32* %stack_var_-8384 to i8*
  %v2_10004e74 = ptrtoint i32* %stack_var_-8448 to i32
  %v2_10004e40 = ptrtoint i32* %stack_var_-8464 to i32
  %v2_10004e0c = ptrtoint i32* %stack_var_-8416 to i32
  %v2_10004dd8 = ptrtoint i32* %stack_var_-8432 to i32
  %v2_10004da4 = ptrtoint i32* %stack_var_-8480 to i32
  %v2_10004d60 = ptrtoint i32* %stack_var_-8496 to i32
  br label %dec_label_pc_10004ca0

dec_label_pc_10004ca0:                            ; preds = %dec_label_pc_10004ef4, %dec_label_pc_10004c78
  store i32 268455080, i32* @lr, align 4
  %v1_10004ca4 = call i32 @function_10007aac(i32 13)
  %v3_10004cb0 = call i32 @function_100079f8(i32 13, i32* null)
  store i32 268455096, i32* @lr, align 4
  %v1_10004cb4 = call i32 @function_10008bcc(i32 %v3_10004cb0)
  store i32 %v1_10004cb4, i32* @r27, align 4
  %v3_10004cb8 = icmp eq i32 %v1_10004cb4, 0
  br i1 %v3_10004cb8, label %dec_label_pc_10004b48, label %dec_label_pc_10004cc0

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004ca0
  store i32 ptrtoint ([3 x i8]* @global_var_10004cc8.46 to i32), i32* @lr, align 4
  %v1_10004cc4 = call i32 @function_10007a20(i32 13)
  store i32 268455124, i32* @lr, align 4
  %v1_10004cd0 = call i32 @function_100044e8(i32 48101)
  store i32 268455132, i32* @lr, align 4
  %v1_10004cd8 = call i32 @function_100044e8(i32 1991)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ce4.47 to i32), i32* @lr, align 4
  %v1_10004ce0 = call i32 @function_100044e8(i32 1338)
  store i32 268455148, i32* @lr, align 4
  %v1_10004ce8 = call i32 @function_100044e8(i32 80)
  store i32 268455156, i32* @lr, align 4
  %v1_10004cf0 = call i32 @function_100044e8(i32 443)
  store i32 268455164, i32* @lr, align 4
  %v1_10004cf8 = call i32 @function_100044e8(i32 4321)
  store i32 268455172, i32* @lr, align 4
  %v1_10004d00 = call i32 @function_100044e8(i32 6667)
  store i32 ptrtoint ([3 x i8]* @global_var_10004d0c.48 to i32), i32* @lr, align 4
  %v1_10004d08 = call i32 @function_100044e8(i32 6697)
  store i32 ptrtoint (i32* @global_var_10004d14.49 to i32), i32* @lr, align 4
  %v1_10004d10 = call i32 @function_100044e8(i32 22)
  store i32 268455252, i32* @lr, align 4
  %v3_10004d50 = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  %v3_10004d54 = icmp eq i32 %v3_10004d50, -1
  store i32 %v3_10004d50, i32* @r31, align 4
  br i1 %v3_10004d54, label %dec_label_pc_10004d78, label %dec_label_pc_10004d60

dec_label_pc_10004d60:                            ; preds = %dec_label_pc_10004cc0
  store i32 268455276, i32* @lr, align 4
  %v3_10004d68 = call i32 @function_10009168(i32 %v2_10004d60, i32 16, i32 16)
  %v0_10004d6c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d78.50 to i32), i32* @lr, align 4
  %v2_10004d74 = call i32 @function_10009240(i32 %v0_10004d6c, i32 1)
  br label %dec_label_pc_10004d78

dec_label_pc_10004d78:                            ; preds = %dec_label_pc_10004cc0, %dec_label_pc_10004d60
  store i32 268455296, i32* @lr, align 4
  %v1_10004d7c = call i32 @function_100044e8(i32 23)
  %v3_10004d80 = icmp eq i32 %v1_10004d7c, 0
  br i1 %v3_10004d80, label %dec_label_pc_100051fc, label %dec_label_pc_10004d88

dec_label_pc_10004d88:                            ; preds = %dec_label_pc_1000521c, %dec_label_pc_1000520c, %dec_label_pc_100051fc, %dec_label_pc_10004d78, %dec_label_pc_1000522c
  store i32 268455320, i32* @lr, align 4
  %v3_10004d94 = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  %v3_10004d98 = icmp eq i32 %v3_10004d94, -1
  store i32 %v3_10004d94, i32* @r31, align 4
  br i1 %v3_10004d98, label %dec_label_pc_10004dbc, label %dec_label_pc_10004da4

dec_label_pc_10004da4:                            ; preds = %dec_label_pc_10004d88
  store i32 268455344, i32* @lr, align 4
  %v3_10004dac = call i32 @function_10009168(i32 %v2_10004da4, i32 16, i32 16)
  %v0_10004db0 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004dbc.51 to i32), i32* @lr, align 4
  %v2_10004db8 = call i32 @function_10009240(i32 %v0_10004db0, i32 1)
  br label %dec_label_pc_10004dbc

dec_label_pc_10004dbc:                            ; preds = %dec_label_pc_10004d88, %dec_label_pc_10004da4
  store i32 268455372, i32* @lr, align 4
  %v3_10004dc8 = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  %v3_10004dcc = icmp eq i32 %v3_10004dc8, -1
  store i32 %v3_10004dc8, i32* @r31, align 4
  br i1 %v3_10004dcc, label %dec_label_pc_10004df0, label %dec_label_pc_10004dd8

dec_label_pc_10004dd8:                            ; preds = %dec_label_pc_10004dbc
  store i32 268455396, i32* @lr, align 4
  %v3_10004de0 = call i32 @function_10009168(i32 %v2_10004dd8, i32 16, i32 16)
  %v0_10004de4 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004df0.52 to i32), i32* @lr, align 4
  %v2_10004dec = call i32 @function_10009240(i32 %v0_10004de4, i32 1)
  br label %dec_label_pc_10004df0

dec_label_pc_10004df0:                            ; preds = %dec_label_pc_10004dbc, %dec_label_pc_10004dd8
  store i32 268455424, i32* @lr, align 4
  %v3_10004dfc = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  %v3_10004e00 = icmp eq i32 %v3_10004dfc, -1
  store i32 %v3_10004dfc, i32* @r31, align 4
  br i1 %v3_10004e00, label %dec_label_pc_10004e24, label %dec_label_pc_10004e0c

dec_label_pc_10004e0c:                            ; preds = %dec_label_pc_10004df0
  store i32 268455448, i32* @lr, align 4
  %v3_10004e14 = call i32 @function_10009168(i32 %v2_10004e0c, i32 16, i32 16)
  %v0_10004e18 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e24.53 to i32), i32* @lr, align 4
  %v2_10004e20 = call i32 @function_10009240(i32 %v0_10004e18, i32 1)
  br label %dec_label_pc_10004e24

dec_label_pc_10004e24:                            ; preds = %dec_label_pc_10004df0, %dec_label_pc_10004e0c
  store i32 268455476, i32* @lr, align 4
  %v3_10004e30 = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  %v3_10004e34 = icmp eq i32 %v3_10004e30, -1
  store i32 %v3_10004e30, i32* @r31, align 4
  br i1 %v3_10004e34, label %dec_label_pc_10004e58, label %dec_label_pc_10004e40

dec_label_pc_10004e40:                            ; preds = %dec_label_pc_10004e24
  store i32 268455500, i32* @lr, align 4
  %v3_10004e48 = call i32 @function_10009168(i32 %v2_10004e40, i32 16, i32 16)
  %v0_10004e4c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e58.54 to i32), i32* @lr, align 4
  %v2_10004e54 = call i32 @function_10009240(i32 %v0_10004e4c, i32 1)
  br label %dec_label_pc_10004e58

dec_label_pc_10004e58:                            ; preds = %dec_label_pc_10004e24, %dec_label_pc_10004e40
  store i32 268455528, i32* @lr, align 4
  %v3_10004e64 = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  %v3_10004e68 = icmp eq i32 %v3_10004e64, -1
  store i32 %v3_10004e64, i32* @r31, align 4
  br i1 %v3_10004e68, label %dec_label_pc_10004e8c.preheader, label %dec_label_pc_10004e74

dec_label_pc_10004e74:                            ; preds = %dec_label_pc_10004e58
  store i32 268455552, i32* @lr, align 4
  %v3_10004e7c = call i32 @function_10009168(i32 %v2_10004e74, i32 16, i32 16)
  %v0_10004e80 = load i32, i32* @r31, align 4
  store i32 268455564, i32* @lr, align 4
  %v2_10004e88 = call i32 @function_10009240(i32 %v0_10004e80, i32 1)
  br label %dec_label_pc_10004e8c.preheader

dec_label_pc_10004e8c.preheader:                  ; preds = %dec_label_pc_10004e74, %dec_label_pc_10004e58
  %v0_10004e8c8 = load i32, i32* @r27, align 4
  store i32 268455572, i32* @lr, align 4
  %v1_10004e909 = inttoptr i32 %v0_10004e8c8 to i32*
  %v2_10004e9010 = call i32 @function_10008cdc(i32* %v1_10004e909)
  %v3_10004e9413 = icmp eq i32 %v2_10004e9010, 0
  br i1 %v3_10004e9413, label %dec_label_pc_10004ef4, label %dec_label_pc_10004e9c.preheader

dec_label_pc_10004e9c.preheader:                  ; preds = %dec_label_pc_10004e8c.preheader, %dec_label_pc_10004e8c.backedge
  %v0_10004e9c15 = phi i32 [ %v2_10004e90, %dec_label_pc_10004e8c.backedge ], [ %v2_10004e9010, %dec_label_pc_10004e8c.preheader ]
  br label %dec_label_pc_10004e9c

dec_label_pc_10004e9c:                            ; preds = %dec_label_pc_10004e9c.preheader, %dec_label_pc_10004ee0
  %v0_10004eb0 = phi i32 [ %v0_10004e9c15, %dec_label_pc_10004e9c.preheader ], [ %v2_10004ee8, %dec_label_pc_10004ee0 ]
  %v1_10004e9c = add i32 %v0_10004eb0, 11
  %v2_10004e9c = inttoptr i32 %v1_10004e9c to i8*
  %v3_10004e9c = load i8, i8* %v2_10004e9c, align 1
  %v4_10004e9c = zext i8 %v3_10004e9c to i32
  %v1_10004ea0 = add nuw nsw i32 %v4_10004e9c, 208
  %v1_10004ea4 = urem i32 %v1_10004ea0, 256
  %v2_10004ea8 = icmp ugt i32 %v1_10004ea4, 9
  br i1 %v2_10004ea8, label %dec_label_pc_10004e8c.backedge, label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004e9c
  store i32 268455616, i32* @lr, align 4
  %v3_10004ebc = call i32 @function_10009c48(i8* %v2_10004e9c, i32 %v1_10004ea4)
  %v0_10004ec0 = load i32, i32* @r28, align 4
  %v2_10004ec0 = icmp slt i32 %v0_10004ec0, %v3_10004ebc
  store i32 %v3_10004ebc, i32* %r30.global-to-local, align 4
  br i1 %v2_10004ec0, label %dec_label_pc_10004f00, label %dec_label_pc_10004ecc

dec_label_pc_10004ecc:                            ; preds = %dec_label_pc_10004eb0
  store i32 268455636, i32* @lr, align 4
  %v0_10004ed0 = call i32 @function_10008a50()
  %v0_10004ed4 = load i32, i32* @r29, align 4
  %v2_10004ed4 = sub i32 %v0_10004ed0, %v0_10004ed4
  %tmp65 = icmp slt i32 %v2_10004ed4, 601
  br i1 %tmp65, label %dec_label_pc_1000505c, label %dec_label_pc_10004ee0

dec_label_pc_10004ee0:                            ; preds = %dec_label_pc_10004ecc
  %v0_10004ee0 = load i32, i32* @r27, align 4
  store i32 400, i32* @r28, align 4
  store i32 268455660, i32* @lr, align 4
  %v1_10004ee8 = inttoptr i32 %v0_10004ee0 to i32*
  %v2_10004ee8 = call i32 @function_10008cdc(i32* %v1_10004ee8)
  %v3_10004eec = icmp eq i32 %v2_10004ee8, 0
  br i1 %v3_10004eec, label %dec_label_pc_10004ef4, label %dec_label_pc_10004e9c

dec_label_pc_10004ef4:                            ; preds = %dec_label_pc_10004e8c.backedge, %dec_label_pc_10004ee0, %dec_label_pc_10004e8c.preheader
  %v0_10004ef4 = load i32, i32* @r27, align 4
  store i32 268455676, i32* @lr, align 4
  %v1_10004ef8 = inttoptr i32 %v0_10004ef4 to i32*
  %v2_10004ef8 = call i32 @function_10008b28(i32* %v1_10004ef8)
  br label %dec_label_pc_10004ca0

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004eb0
  store i32 268455688, i32* @lr, align 4
  %v0_10004f04 = call i32 @function_10008a50()
  store i32 %v0_10004f04, i32* @r24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004f14.55 to i32), i32* @lr, align 4
  %v1_10004f10 = call i32 @function_10007aac(i32 13)
  store i32 268455708, i32* @lr, align 4
  %v1_10004f18 = call i32 @function_10007aac(i32 14)
  %v3_10004f24 = call i32 @function_100079f8(i32 13, i32* null)
  store i32 %v2_10004c94, i32* @r3, align 4
  %v3_10004f30 = call i32 @function_10007ee8(i8* %v2_10004f30, i32 %v3_10004f24)
  %v0_10004f34 = load i32, i32* @r31, align 4
  %v0_10004f38 = load i32, i32* @r23, align 4
  %v2_10004f38 = add i32 %v0_10004f38, %v3_10004f30
  store i32 %v2_10004f38, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f38, i32* @r3, align 4
  %v2_10004f40 = inttoptr i32 %v2_10004f38 to i8*
  %v3_10004f40 = call i32 @function_10007ee8(i8* %v2_10004f40, i32 %v0_10004f34)
  store i32 %v3_10004f40, i32* %r29.global-to-local, align 4
  %v3_10004f50 = call i32 @function_100079f8(i32 14, i32* null)
  %v2_10004f58 = add i32 %v3_10004f40, %v2_10004f38
  store i32 %v2_10004f58, i32* @r3, align 4
  %v2_10004f5c = inttoptr i32 %v2_10004f58 to i8*
  %v3_10004f5c = call i32 @function_10007ee8(i8* %v2_10004f5c, i32 %v3_10004f50)
  %v3_10004f68 = call i32 @function_100079f8(i32 13, i32* null)
  store i32 %v2_10004c98, i32* @r3, align 4
  %v3_10004f74 = call i32 @function_10007ee8(i8* %v2_10004f74, i32 %v3_10004f68)
  %v0_10004f78 = load i32, i32* @r31, align 4
  %v0_10004f7c = load i32, i32* @r22, align 4
  %v2_10004f7c = add i32 %v0_10004f7c, %v3_10004f74
  store i32 %v2_10004f7c, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f7c, i32* @r3, align 4
  %v2_10004f84 = inttoptr i32 %v2_10004f7c to i8*
  %v3_10004f84 = call i32 @function_10007ee8(i8* %v2_10004f84, i32 %v0_10004f78)
  store i32 %v3_10004f84, i32* %r29.global-to-local, align 4
  %v3_10004f94 = call i32 @function_100079f8(i32 29, i32* null)
  %v2_10004f9c = add i32 %v3_10004f84, %v2_10004f7c
  store i32 %v2_10004f9c, i32* @r3, align 4
  %v2_10004fa0 = inttoptr i32 %v2_10004f9c to i8*
  %v3_10004fa0 = call i32 @function_10007ee8(i8* %v2_10004fa0, i32 %v3_10004f94)
  store i32 ptrtoint ([3 x i8]* @global_var_10004fac.57 to i32), i32* @lr, align 4
  %v1_10004fa8 = call i32 @function_10007a20(i32 13)
  store i32 268455860, i32* @lr, align 4
  %v1_10004fb0 = call i32 @function_10007a20(i32 14)
  store i32 4095, i32* @r5, align 4
  store i32 268455876, i32* @lr, align 4
  %v3_10004fc0 = call i32 @function_10008900(i32 %v2_10004c94, i32 %v2_10004bcc, i32 4095)
  %v3_10004fc4 = icmp eq i32 %v3_10004fc0, -1
  store i32 %v3_10004fc0, i32* %r29.global-to-local, align 4
  br i1 %v3_10004fc4, label %dec_label_pc_100050b0, label %dec_label_pc_10004fd0

dec_label_pc_10004fd0:                            ; preds = %dec_label_pc_10004f00
  %v0_10004fd0 = load i32, i32* @r1, align 4
  %v2_10004fd0 = add i32 %v0_10004fd0, %v3_10004fc0
  %v3_10004fd8 = add i32 %v2_10004fd0, 256
  %v4_10004fd8 = inttoptr i32 %v3_10004fd8 to i8*
  store i8 0, i8* %v4_10004fd8, align 1
  store i32 268455908, i32* @lr, align 4
  %v1_10004fe0 = call i32 @function_10007aac(i32 30)
  %v3_10004fec = call i32 @function_100079f8(i32 30, i32* null)
  %v0_10004ff0 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004ff0 = add i32 %v0_10004ff0, -1
  %v4_10004ffc = call i32 @function_10008270(i8* %v2_10004be8, i32 %v1_10004ff0, i32 %v3_10004fec)
  %v3_10005000 = icmp eq i32 %v4_10004ffc, -1
  br i1 %v3_10005000, label %dec_label_pc_1000501c, label %dec_label_pc_10005008

dec_label_pc_10005008:                            ; preds = %dec_label_pc_10004fd0
  store i32 268455952, i32* @lr, align 4
  %v1_1000500c = call i32 @function_10008a98(i32 %v2_10004bcc)
  %v0_10005010 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000501c.58 to i32), i32* @lr, align 4
  %v2_10005018 = call i32 @function_100087a0(i32 %v0_10005010, i32 9)
  br label %dec_label_pc_1000501c

dec_label_pc_1000501c:                            ; preds = %dec_label_pc_10004fd0, %dec_label_pc_10005008
  store i32 ptrtoint (i32* @global_var_10005024.59 to i32), i32* @lr, align 4
  %v1_10005020 = call i32 @function_10007a20(i32 30)
  store i32 268455976, i32* @lr, align 4
  %v0_10005024 = call i32 @function_10008710()
  %v0_10005028 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005028 = icmp eq i32 %v0_10005028, %v0_10005024
  br i1 %v4_10005028, label %dec_label_pc_10005050, label %dec_label_pc_10005030

dec_label_pc_10005030:                            ; preds = %dec_label_pc_1000501c
  store i32 268455988, i32* @lr, align 4
  %v0_10005030 = call i32 @function_10008758()
  %v0_10005034 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005034 = icmp eq i32 %v0_10005034, %v0_10005030
  br i1 %v4_10005034, label %dec_label_pc_10005050, label %dec_label_pc_1000503c

dec_label_pc_1000503c:                            ; preds = %dec_label_pc_10005030
  %v3_1000503c = load i32, i32* @global_var_1001b720.40, align 4
  %v3_10005044 = call i32 @function_1000831c(i8* %v2_10004be8, i32 %v3_1000503c)
  %v3_10005048 = icmp eq i32 %v3_10005044, 0
  br i1 %v3_10005048, label %dec_label_pc_1000508c, label %dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge

dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge: ; preds = %dec_label_pc_1000503c
  %v0_10005050.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005050

dec_label_pc_10005050:                            ; preds = %dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge, %dec_label_pc_10005030, %dec_label_pc_1000501c
  %v0_10005050 = phi i32 [ %v0_10005050.pre, %dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge ], [ %v0_10005030, %dec_label_pc_10005030 ], [ %v0_10005024, %dec_label_pc_1000501c ]
  store i32 %v0_10005050, i32* @r28, align 4
  %v0_10005054 = load i32, i32* @r24, align 4
  store i32 %v0_10005054, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e8c.backedge

dec_label_pc_10004e8c.backedge:                   ; preds = %dec_label_pc_10004e9c, %dec_label_pc_10005050, %dec_label_pc_10005080, %dec_label_pc_100051c4, %dec_label_pc_1000505c, %dec_label_pc_10005064
  %v0_10004e8c = load i32, i32* @r27, align 4
  store i32 268455572, i32* @lr, align 4
  %v1_10004e90 = inttoptr i32 %v0_10004e8c to i32*
  %v2_10004e90 = call i32 @function_10008cdc(i32* %v1_10004e90)
  %v3_10004e94 = icmp eq i32 %v2_10004e90, 0
  br i1 %v3_10004e94, label %dec_label_pc_10004ef4, label %dec_label_pc_10004e9c.preheader

dec_label_pc_1000505c:                            ; preds = %dec_label_pc_10004ecc
  %v0_1000505c = load i32, i32* %r30.global-to-local, align 4
  %tmp66 = icmp slt i32 %v0_1000505c, 401
  br i1 %tmp66, label %dec_label_pc_10004e8c.backedge, label %dec_label_pc_10005064

dec_label_pc_10005064:                            ; preds = %dec_label_pc_1000505c
  %v0_1000506c = load i32, i32* @r26, align 4
  %v1_10005070 = urem i32 %v0_1000506c, 10
  %v4_10005078 = icmp eq i32 %v1_10005070, 0
  br i1 %v4_10005078, label %dec_label_pc_10005080, label %dec_label_pc_10004e8c.backedge

dec_label_pc_10005080:                            ; preds = %dec_label_pc_10005064
  store i32 268456072, i32* @lr, align 4
  %v1_10005084 = call i32 @function_10009e94(i32 1)
  br label %dec_label_pc_10004e8c.backedge

dec_label_pc_1000508c:                            ; preds = %dec_label_pc_1000503c
  store i32 268456092, i32* @lr, align 4
  %v2_10005098 = call i32 @function_100087e8(i32 %v2_10004bcc, i32 0)
  %v3_1000509c = icmp eq i32 %v2_10005098, -1
  store i32 %v2_10005098, i32* @r31, align 4
  br i1 %v3_1000509c, label %dec_label_pc_10005254, label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_1000508c, %dec_label_pc_10005254
  store i32 268456112, i32* @lr, align 4
  %v0_100050ac = call i32 @function_10008680()
  br label %dec_label_pc_100050b0

dec_label_pc_100050b0:                            ; preds = %dec_label_pc_10004f00, %dec_label_pc_100050a8
  store i32 268456128, i32* @lr, align 4
  %v2_100050bc = call i32 @function_100087e8(i32 %v2_10004c94, i32 0)
  %v3_100050c0 = icmp eq i32 %v2_100050bc, -1
  store i32 %v2_100050bc, i32* %r28.global-to-local, align 4
  br i1 %v3_100050c0, label %dec_label_pc_100051c4, label %dec_label_pc_100050cc

dec_label_pc_100050cc:                            ; preds = %dec_label_pc_100050b0
  store i32 ptrtoint ([3 x i8]* @global_var_100050d4.60 to i32), i32* @lr, align 4
  %v1_100050d0 = call i32 @function_10007aac(i32 18)
  store i32 268456156, i32* @lr, align 4
  %v1_100050d8 = call i32 @function_10007aac(i32 19)
  %v3_100050e4 = call i32 @function_100079f8(i32 18, i32* nonnull %stack_var_-8504)
  store i32 %v3_100050e4, i32* @r31, align 4
  %v3_100050f4 = call i32 @function_100079f8(i32 19, i32* nonnull %stack_var_-8500)
  store i32 %v3_100050f4, i32* %r29.global-to-local, align 4
  %v0_100050fc70 = load i32, i32* %r28.global-to-local, align 4
  store i32 268456204, i32* @lr, align 4
  %v3_1000510871 = call i32 @function_100088b8(i32 %v0_100050fc70, i32 %v2_10004c9c, i32 4096)
  %tmp6773 = icmp slt i32 %v3_1000510871, 1
  br i1 %tmp6773, label %dec_label_pc_10005238, label %dec_label_pc_10005114

dec_label_pc_10005114:                            ; preds = %dec_label_pc_100050cc, %dec_label_pc_100050fc.backedge
  %v3_1000510874 = phi i32 [ %v3_10005108, %dec_label_pc_100050fc.backedge ], [ %v3_1000510871, %dec_label_pc_100050cc ]
  %v3_1000510c75.in = phi i32 [ %v3_10005108, %dec_label_pc_100050fc.backedge ], [ %v3_1000510871, %dec_label_pc_100050cc ]
  %v3_1000510c75 = icmp eq i32 %v3_1000510c75.in, 0
  %v3_10005114 = load i32, i32* %stack_var_-8504, align 4
  %v2_10005118 = icmp slt i32 %v3_1000510874, %v3_10005114
  br i1 %v2_10005118, label %dec_label_pc_10005158, label %dec_label_pc_10005120

dec_label_pc_10005120:                            ; preds = %dec_label_pc_10005114
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10005134.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005134

dec_label_pc_10005134:                            ; preds = %dec_label_pc_10005120, %dec_label_pc_10005150
  %v0_10005154 = phi i32 [ %v3_1000510874, %dec_label_pc_10005120 ], [ %v1_10005154, %dec_label_pc_10005150 ]
  %v0_10005150 = phi i32 [ %v2_10004c9c, %dec_label_pc_10005120 ], [ %v1_10005150, %dec_label_pc_10005150 ]
  %v1_10005134 = phi i32 [ 0, %dec_label_pc_10005120 ], [ %v1_1000513419, %dec_label_pc_10005150 ]
  %v2_10005134 = add i32 %v1_10005134, %v0_10005134.pre
  %v3_10005134 = inttoptr i32 %v2_10005134 to i8*
  %v4_10005134 = load i8, i8* %v3_10005134, align 1
  %v1_10005138 = add i32 %v1_10005134, 1
  store i32 %v1_10005138, i32* %r11.global-to-local, align 4
  %v1_1000513c = inttoptr i32 %v0_10005150 to i8*
  %v2_1000513c = load i8, i8* %v1_1000513c, align 1
  %v4_10005144 = icmp eq i8 %v2_1000513c, %v4_10005134
  br i1 %v4_10005144, label %dec_label_pc_1000519c, label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_10005134
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005150

dec_label_pc_10005150:                            ; preds = %dec_label_pc_1000519c, %dec_label_pc_1000514c
  %v1_1000513419 = phi i32 [ %v1_10005138, %dec_label_pc_1000519c ], [ 0, %dec_label_pc_1000514c ]
  %v1_10005150 = add i32 %v0_10005150, 1
  %v1_10005154 = add i32 %v0_10005154, -1
  %v2_10005154 = icmp eq i32 %v1_10005154, 0
  br i1 %v2_10005154, label %dec_label_pc_10005158, label %dec_label_pc_10005134

dec_label_pc_10005158:                            ; preds = %dec_label_pc_10005150, %dec_label_pc_10005114
  %v3_10005158 = load i32, i32* %stack_var_-8500, align 4
  %v2_1000515c = icmp slt i32 %v3_1000510874, %v3_10005158
  br i1 %v2_1000515c, label %dec_label_pc_100050fc.backedge, label %dec_label_pc_10005164

dec_label_pc_10005164:                            ; preds = %dec_label_pc_10005158
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000510c75, label %dec_label_pc_100050fc.backedge, label %dec_label_pc_10005178.lr.ph

dec_label_pc_100050fc.backedge:                   ; preds = %dec_label_pc_10005174.backedge, %dec_label_pc_10005164, %dec_label_pc_10005158
  %v0_100050fc = load i32, i32* %r28.global-to-local, align 4
  store i32 268456204, i32* @lr, align 4
  %v3_10005108 = call i32 @function_100088b8(i32 %v0_100050fc, i32 %v2_10004c9c, i32 4096)
  %tmp67 = icmp slt i32 %v3_10005108, 1
  br i1 %tmp67, label %dec_label_pc_10005238, label %dec_label_pc_10005114

dec_label_pc_10005178.lr.ph:                      ; preds = %dec_label_pc_10005164
  %v0_10005178.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005178

dec_label_pc_10005178:                            ; preds = %dec_label_pc_10005178.lr.ph, %dec_label_pc_10005174.backedge
  %v0_10005174 = phi i32 [ %v3_1000510874, %dec_label_pc_10005178.lr.ph ], [ %v1_10005174, %dec_label_pc_10005174.backedge ]
  %storemerge.in = phi i32 [ %v2_10004c9c, %dec_label_pc_10005178.lr.ph ], [ %storemerge, %dec_label_pc_10005174.backedge ]
  %v1_10005178 = phi i32 [ 0, %dec_label_pc_10005178.lr.ph ], [ %v1_1000517825, %dec_label_pc_10005174.backedge ]
  %v2_10005178 = add i32 %v1_10005178, %v0_10005178.pre
  %v3_10005178 = inttoptr i32 %v2_10005178 to i8*
  %v4_10005178 = load i8, i8* %v3_10005178, align 1
  %v1_1000517c = add i32 %v1_10005178, 1
  store i32 %v1_1000517c, i32* %r11.global-to-local, align 4
  %v1_10005180 = inttoptr i32 %storemerge.in to i8*
  %v2_10005180 = load i8, i8* %v1_10005180, align 1
  %v4_10005188 = icmp eq i8 %v2_10005180, %v4_10005178
  br i1 %v4_10005188, label %dec_label_pc_100051f0, label %dec_label_pc_10005190

dec_label_pc_10005190:                            ; preds = %dec_label_pc_10005178
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005174.backedge

dec_label_pc_10005174.backedge:                   ; preds = %dec_label_pc_100051f0, %dec_label_pc_10005190
  %v1_1000517825 = phi i32 [ 0, %dec_label_pc_10005190 ], [ %v1_1000517c, %dec_label_pc_100051f0 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_10005174 = add i32 %v0_10005174, -1
  %v2_10005174 = icmp eq i32 %v1_10005174, 0
  br i1 %v2_10005174, label %dec_label_pc_100050fc.backedge, label %dec_label_pc_10005178

dec_label_pc_1000519c:                            ; preds = %dec_label_pc_10005134
  %v4_10005140 = icmp eq i32 %v3_10005114, %v1_10005138
  br i1 %v4_10005140, label %dec_label_pc_100051a0, label %dec_label_pc_10005150

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_1000519c, %dec_label_pc_100051f0
  store i32 ptrtoint ([3 x i8]* @global_var_100051a8.61 to i32), i32* @lr, align 4
  %v1_100051a4 = call i32 @function_10007a20(i32 18)
  store i32 268456368, i32* @lr, align 4
  %v1_100051ac = call i32 @function_10007a20(i32 19)
  store i32 268456376, i32* @lr, align 4
  %v0_100051b4 = call i32 @function_10008680()
  %v0_100051b8 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456388, i32* @lr, align 4
  %v2_100051c0 = call i32 @function_100087a0(i32 %v0_100051b8, i32 9)
  br label %dec_label_pc_100051c4

dec_label_pc_100051c4:                            ; preds = %dec_label_pc_100050b0, %dec_label_pc_10005238, %dec_label_pc_100051a0
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004c94, i32* @r3, align 4
  store i32 268456400, i32* @lr, align 4
  %v0_100051cc = call i32 @function_10007f68()
  store i32 %v2_10004c98, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_100051d8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100051d8, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100051e0.62 to i32), i32* @lr, align 4
  %v0_100051dc = call i32 @function_10007f68()
  store i32 268456424, i32* @lr, align 4
  %v1_100051e4 = call i32 @function_10009e94(i32 1)
  %v0_100051e8 = load i32, i32* @r24, align 4
  store i32 %v0_100051e8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e8c.backedge

dec_label_pc_100051f0:                            ; preds = %dec_label_pc_10005178
  %v4_10005184 = icmp eq i32 %v3_10005158, %v1_1000517c
  br i1 %v4_10005184, label %dec_label_pc_100051a0, label %dec_label_pc_10005174.backedge

dec_label_pc_100051fc:                            ; preds = %dec_label_pc_10004d78
  store i32 268456452, i32* @lr, align 4
  %v1_10005200 = call i32 @function_100044e8(i32 53413)
  %v3_10005204 = icmp eq i32 %v1_10005200, 0
  br i1 %v3_10005204, label %dec_label_pc_1000520c, label %dec_label_pc_10004d88

dec_label_pc_1000520c:                            ; preds = %dec_label_pc_100051fc
  store i32 268456468, i32* @lr, align 4
  %v1_10005210 = call i32 @function_100044e8(i32 80)
  %v3_10005214 = icmp eq i32 %v1_10005210, 0
  br i1 %v3_10005214, label %dec_label_pc_1000521c, label %dec_label_pc_10004d88

dec_label_pc_1000521c:                            ; preds = %dec_label_pc_1000520c
  store i32 268456484, i32* @lr, align 4
  %v1_10005220 = call i32 @function_100044e8(i32 52869)
  %v3_10005224 = icmp eq i32 %v1_10005220, 0
  br i1 %v3_10005224, label %dec_label_pc_1000522c, label %dec_label_pc_10004d88

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_1000521c
  store i32 268456500, i32* @lr, align 4
  %v1_10005230 = call i32 @function_100044e8(i32 37215)
  br label %dec_label_pc_10004d88

dec_label_pc_10005238:                            ; preds = %dec_label_pc_100050fc.backedge, %dec_label_pc_100050cc
  store i32 ptrtoint ([3 x i8]* @global_var_10005240.63 to i32), i32* @lr, align 4
  %v1_1000523c = call i32 @function_10007a20(i32 18)
  store i32 268456520, i32* @lr, align 4
  %v1_10005244 = call i32 @function_10007a20(i32 19)
  store i32 268456528, i32* @lr, align 4
  %v0_1000524c = call i32 @function_10008680()
  br label %dec_label_pc_100051c4

dec_label_pc_10005254:                            ; preds = %dec_label_pc_1000508c
  %v0_10005254 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456544, i32* @lr, align 4
  %v2_1000525c = call i32 @function_100087a0(i32 %v0_10005254, i32 9)
  br label %dec_label_pc_100050a8

; uselistorder directives
  uselistorder i32 %v1_10005174, { 1, 0 }
  uselistorder i32 %v1_1000517c, { 1, 0, 2 }
  uselistorder i32 %v1_10005178, { 1, 0 }
  uselistorder i32 %v3_10005108, { 2, 1, 0 }
  uselistorder i32 %v1_10005154, { 1, 0 }
  uselistorder i32 %v1_10005134, { 1, 0 }
  uselistorder i32 %v3_1000510874, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10004e90, { 1, 0 }
  uselistorder i32 %v2_10004ee8, { 1, 0 }
  uselistorder i32 %v1_10004ea4, { 1, 0 }
  uselistorder i32 %v2_10004c9c, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10004c10, { 1, 0, 2 }
  uselistorder i32 %v2_10004bec, { 1, 0, 2 }
  uselistorder i32 %v2_10004bcc, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b34, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8504, { 1, 0 }
  uselistorder i32* %stack_var_-8500, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 7 }
  uselistorder i32 268456204, { 1, 0 }
  uselistorder i32 (i32*)* @function_10008cdc, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455572, { 1, 0 }
  uselistorder i32 (i32)* @function_10008bcc, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008900, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100051c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100051a0, { 1, 0 }
  uselistorder label %dec_label_pc_10005178, { 1, 0 }
  uselistorder label %dec_label_pc_10005134, { 1, 0 }
  uselistorder label %dec_label_pc_10005114, { 1, 0 }
  uselistorder label %dec_label_pc_100050b0, { 1, 0 }
  uselistorder label %dec_label_pc_100050a8, { 1, 0 }
  uselistorder label %dec_label_pc_10004e8c.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_1000501c, { 1, 0 }
  uselistorder label %dec_label_pc_10004e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10004e9c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004e58, { 1, 0 }
  uselistorder label %dec_label_pc_10004e24, { 1, 0 }
  uselistorder label %dec_label_pc_10004df0, { 1, 0 }
  uselistorder label %dec_label_pc_10004dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10004d88, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10004d78, { 1, 0 }
  uselistorder label %dec_label_pc_10004c78, { 1, 0 }
}

define i32 @function_10005264() local_unnamed_addr {
dec_label_pc_10005264:
  store i32 268457056, i32* @global_var_1001b6f8.64, align 4
  %v0_10005274 = load i32, i32* @r3, align 4
  ret i32 %v0_10005274
}

define i32 @function_10005278(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005278:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_10005298 = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_100052a8 = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_100052b4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_100052b4, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268456640, i32* @lr, align 4
  %v3_100052bc = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  %v3_100052c0 = icmp eq i32 %v3_100052bc, -1
  store i32 %v3_100052bc, i32* @global_var_1001b6f0.65, align 4
  br i1 %v3_100052c0, label %dec_label_pc_10005370, label %dec_label_pc_100052dc

dec_label_pc_100052dc:                            ; preds = %dec_label_pc_10005278
  %v2_100052c4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268456672, i32* @lr, align 4
  %v5_100052dc = call i32 @function_10009360(i32 %v3_100052bc, i32 1, i32 2, i32 %v2_100052c4)
  %v3_100052e0 = load i32, i32* @global_var_1001b6f0.65, align 4
  store i32 3, i32* @r4, align 4
  store i32 268456696, i32* @lr, align 4
  %v2_100052f4 = call i32 @function_10008598(i32 %v3_100052e0)
  store i32 4, i32* @r4, align 4
  store i32 268456716, i32* @lr, align 4
  %v2_10005308 = call i32 @function_10008598(i32 %v3_100052e0)
  %v3_1000530c = load i8, i8* @global_var_1001b5b0.66, align 1
  %v3_10005314 = icmp eq i8 %v3_1000530c, 0
  br i1 %v3_10005314, label %dec_label_pc_10005394, label %dec_label_pc_10005320

dec_label_pc_10005320:                            ; preds = %dec_label_pc_100052dc
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10005334 = call i32 @function_10008d9c()
  %v0_10005338 = load i32, i32* @r27, align 4
  %v2_10005338 = inttoptr i32 %v0_10005334 to i32*
  store i32 %v0_10005338, i32* %v2_10005338, align 4
  store i32 %v0_10005334, i32* @r29, align 4
  %v3_10005348 = load i32, i32* @global_var_1001b6f0.65, align 4
  store i32 268456784, i32* @lr, align 4
  %v3_1000534c = call i32 @function_10009168(i32 %v3_10005348, i32 %v2_100052b4, i32 16)
  %v3_10005354 = icmp eq i32 %v3_1000534c, -1
  br i1 %v3_10005354, label %dec_label_pc_100053dc, label %dec_label_pc_10005360

dec_label_pc_10005360:                            ; preds = %dec_label_pc_10005394, %dec_label_pc_10005320
  %v3_10005368 = load i32, i32* @global_var_1001b6f0.65, align 4
  store i32 268456816, i32* @lr, align 4
  %v2_1000536c = call i32 @function_10009240(i32 %v3_10005368, i32 1)
  br label %dec_label_pc_10005370

dec_label_pc_10005370:                            ; preds = %dec_label_pc_10005278, %dec_label_pc_10005360
  %v0_10005390 = phi i32 [ -1, %dec_label_pc_10005278 ], [ %v2_1000536c, %dec_label_pc_10005360 ]
  store i32 %v0_10005298, i32* @r28, align 4
  store i32 %v0_100052a8, i32* @r31, align 4
  ret i32 %v0_10005390

dec_label_pc_10005394:                            ; preds = %dec_label_pc_100052dc
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100053b0 = call i32 @function_10008d9c()
  %v0_100053b4 = load i32, i32* @r27, align 4
  %v2_100053b4 = inttoptr i32 %v0_100053b0 to i32*
  store i32 %v0_100053b4, i32* %v2_100053b4, align 4
  store i32 %v0_100053b0, i32* @r29, align 4
  %v3_100053c4 = load i32, i32* @global_var_1001b6f0.65, align 4
  store i32 268456908, i32* @lr, align 4
  %v3_100053c8 = call i32 @function_10009168(i32 %v3_100053c4, i32 %v2_100052b4, i32 16)
  %v3_100053d0 = icmp eq i32 %v3_100053c8, -1
  br i1 %v3_100053d0, label %dec_label_pc_100053dc, label %dec_label_pc_10005360

dec_label_pc_100053dc:                            ; preds = %dec_label_pc_10005394, %dec_label_pc_10005320
  %v0_100053dc = load i32, i32* @r29, align 4
  %v1_100053dc = inttoptr i32 %v0_100053dc to i32*
  %v2_100053dc = load i32, i32* %v1_100053dc, align 4
  %v3_100053e0 = load i32, i32* @global_var_1001b6f0.65, align 4
  store i32 %v3_100053e0, i32* @r3, align 4
  %v3_100053e4 = icmp eq i32 %v2_100053dc, 99
  br i1 %v3_100053e4, label %dec_label_pc_10005448, label %dec_label_pc_100053ec

dec_label_pc_100053ec:                            ; preds = %dec_label_pc_10005448, %dec_label_pc_100053dc, %dec_label_pc_10005454
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005408.67 to i32), i32* @lr, align 4
  %v0_10005404 = call i32 @function_1000919c()
  store i32 268456976, i32* @lr, align 4
  %v1_1000540c = call i32 @function_10009e94(i32 5)
  store i32 268456984, i32* @lr, align 4
  %v0_10005414 = call i32 @function_10008680()
  store i32 268456992, i32* @lr, align 4
  %v1_1000541c = call i32 @function_100044e8(i32 9765)
  store i32 268456996, i32* @lr, align 4
  %v1_10005420 = call i32 @function_10005278(i32 %v1_1000541c)
  store i32 %v0_10005298, i32* @r28, align 4
  store i32 %v0_100052a8, i32* @r31, align 4
  ret i32 %v1_10005420

dec_label_pc_10005448:                            ; preds = %dec_label_pc_100053dc
  %v3_10005448 = load i8, i8* @global_var_1001b5b0.66, align 1
  %v3_1000544c = icmp eq i8 %v3_10005448, 0
  br i1 %v3_1000544c, label %dec_label_pc_100053ec, label %dec_label_pc_10005454

dec_label_pc_10005454:                            ; preds = %dec_label_pc_10005448
  %v0_10005458 = load i32, i32* @r27, align 4
  %v1_10005458 = trunc i32 %v0_10005458 to i8
  store i8 %v1_10005458, i8* @global_var_1001b5b0.66, align 1
  br label %dec_label_pc_100053ec

; uselistorder directives
  uselistorder i32 %v2_100052b4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_100044e8, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009240, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009168, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b5b0.66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100053ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005370, { 1, 0 }
}

define i32 @function_10005460() local_unnamed_addr {
dec_label_pc_10005460:
  store i32 268457084, i32* @lr, align 4
  %v1_10005478 = call i32 @function_10007aac(i32 1)
  store i32 268457100, i32* @lr, align 4
  %v2_10005488 = call i32 @function_10009134(i32 ptrtoint ([15 x i8]* @global_var_1000b080.69 to i32))
  store i32 %v2_10005488, i32* @global_var_1001b7f4.70, align 4
  %v3_10005498 = call i32 @function_100079f8(i32 1, i32* null)
  %v4_10005498 = inttoptr i32 %v3_10005498 to i16*
  %v3_1000549c = load i16, i16* %v4_10005498, align 2
  store i16 %v3_1000549c, i16* bitcast (i32* @global_var_1001b7f2.71 to i16*), align 4
  store i32 268457132, i32* @lr, align 4
  %v1_100054a8 = call i32 @function_10007a20(i32 1)
  ret i32 %v1_100054a8

; uselistorder directives
  uselistorder i32 (i32)* @function_10009134, { 2, 1, 0 }
}

define i32 @function_100054c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100054c0:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  %stack_var_-1592 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1604 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-1596 = alloca i32, align 4
  %stack_var_-1608 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100054c0 = load i32, i32* @lr, align 4
  store i32 %v0_100054c0, i32* %r0.global-to-local, align 4
  %v0_100054c8 = load i32, i32* @r31, align 4
  store i32 268457172, i32* @lr, align 4
  %v0_100054d0 = call i32 @function_100086c8()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100054d0, i32* @global_var_1001b728.72, align 4
  %tmp47 = icmp slt i32 %v0_100054d0, 1
  br i1 %tmp47, label %dec_label_pc_100054f8, label %dec_label_pc_100054e4

dec_label_pc_100054e4:                            ; preds = %dec_label_pc_100054f8, %dec_label_pc_100054c0
  store i32 %v0_100054c0, i32* %r0.global-to-local, align 4
  store i32 %v0_100054c8, i32* @r31, align 4
  ret i32 %v0_100054d0

dec_label_pc_100054f8:                            ; preds = %dec_label_pc_100054c0
  %v3_100054f8 = icmp eq i32 %v0_100054d0, -1
  br i1 %v3_100054f8, label %dec_label_pc_100054e4, label %dec_label_pc_10005500

dec_label_pc_10005500:                            ; preds = %dec_label_pc_100054f8
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005510.73 to i32), i32* @lr, align 4
  %v1_1000550c = call i32 @function_10007aac(i32 23)
  store i32 268457240, i32* @lr, align 4
  %v1_10005514 = call i32 @function_10007aac(i32 24)
  %v3_10005520 = call i32 @function_100079f8(i32 23, i32* null)
  store i32 268457264, i32* @lr, align 4
  %v2_1000552c = call i32 @function_100087e8(i32 %v3_10005520, i32 2)
  %v3_10005530 = icmp eq i32 %v2_1000552c, -1
  store i32 %v2_1000552c, i32* @r31, align 4
  br i1 %v3_10005530, label %dec_label_pc_10005578, label %dec_label_pc_1000553c

dec_label_pc_1000553c:                            ; preds = %dec_label_pc_10005578, %dec_label_pc_10005500
  %v0_10005540 = phi i32 [ %v2_1000558c, %dec_label_pc_10005578 ], [ %v2_1000552c, %dec_label_pc_10005500 ]
  %v2_10005548 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268457300, i32* @lr, align 4
  %v3_10005550 = call i32 @function_100084b0(i32 %v0_10005540, i32 -2147199228, i32 %v2_10005548)
  br label %dec_label_pc_10005554

dec_label_pc_10005554:                            ; preds = %dec_label_pc_10005554, %dec_label_pc_1000553c
  %v0_10005558 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000556c.74 to i32), i32* @lr, align 4
  %v3_10005568 = call i32 @function_100084b0(i32 %v0_10005558, i32 -2147199227, i32 0)
  store i32 268457332, i32* @lr, align 4
  %v1_10005570 = call i32 @function_10009e94(i32 10)
  br label %dec_label_pc_10005554

dec_label_pc_10005578:                            ; preds = %dec_label_pc_10005500
  %v3_10005580 = call i32 @function_100079f8(i32 24, i32* null)
  store i32 268457360, i32* @lr, align 4
  %v2_1000558c = call i32 @function_100087e8(i32 %v3_10005580, i32 2)
  %v3_10005590 = icmp eq i32 %v2_1000558c, -1
  store i32 %v2_1000558c, i32* @r31, align 4
  br i1 %v3_10005590, label %dec_label_pc_1000559c, label %dec_label_pc_1000553c

dec_label_pc_1000559c:                            ; preds = %dec_label_pc_10005578
  store i32 ptrtoint ([3 x i8]* @global_var_100055a4.75 to i32), i32* @lr, align 4
  %v1_100055a0 = call i32 @function_10007a20(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_100055ac.76 to i32), i32* @lr, align 4
  %v1_100055a8 = call i32 @function_10007a20(i32 24)
  %v0_100055b0 = call i32 @function_10009e10()
  %v0_100055b8 = load i32, i32* @lr, align 4
  %v0_100055bc = load i32, i32* @r29, align 4
  %v2_100055c0 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_100055c0, i32* @r29, align 4
  %v0_100055c4 = load i32, i32* @r28, align 4
  store i32 %v0_100055b0, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100055d8 = load i32, i32* %r17.global-to-local, align 4
  store i32 0, i32* %stack_var_-1596, align 4
  store i32 268566528, i32* %r17.global-to-local, align 4
  %v0_100055e4 = load i32, i32* %r18.global-to-local, align 4
  %v2_100055e8 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_100055e8, i32* %r18.global-to-local, align 4
  %v0_100055ec = load i32, i32* %r19.global-to-local, align 4
  store i32 268566528, i32* %r19.global-to-local, align 4
  %v0_100055f4 = load i32, i32* %r20.global-to-local, align 4
  store i32 268566528, i32* %r20.global-to-local, align 4
  %v0_100055fc = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_10005604 = load i32, i32* @r14, align 4
  %v0_10005608 = load i32, i32* %r15.global-to-local, align 4
  %v0_1000560c = load i32, i32* %r16.global-to-local, align 4
  %v0_10005614 = load i32, i32* @r22, align 4
  %v0_10005618 = load i32, i32* @r23, align 4
  %v0_1000561c = load i32, i32* @r24, align 4
  %v0_10005620 = load i32, i32* @r25, align 4
  %v0_10005624 = load i32, i32* @r26, align 4
  %v0_10005628 = load i32, i32* @r27, align 4
  %v0_1000562c = load i32, i32* @r30, align 4
  store i32 268457524, i32* @lr, align 4
  %v1_10005630 = call i32 @function_1000941c(i32 %v2_100055c0)
  store i32 %v2_100055c0, i32* @r3, align 4
  store i32 268457536, i32* @lr, align 4
  %v2_1000563c = call i32 @function_100093d0(i32 %v2_100055c0, i32 2)
  store i32 268457552, i32* @lr, align 4
  %v3_1000564c = call i32 @function_100089d8(i32 0, i32 %v2_100055c0, i32 0)
  store i32 268457564, i32* @lr, align 4
  %v2_10005658 = call i32 @function_10009448(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_1000566c.77 to i32), i32* @lr, align 4
  %v2_10005668 = call i32 @function_10009448(i32 5, i32 268456548)
  store i32 268457584, i32* @lr, align 4
  %v1_1000566c = call i32 @function_100081c4(i32 %v2_10005668)
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 -1334109607, i32* @global_var_1001b7f4.70, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001b7f2.71 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_1000566c, i32* @global_var_1001b718.16, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001b7f0.68 to i16*), align 4
  store i32 268457624, i32* @lr, align 4
  %v2_10005694 = call i32 @function_10007b38(i32 %v1_1000566c, i32 -1334109607)
  store i32 268457056, i32* %r9.global-to-local, align 4
  store i32 268457056, i32* @global_var_1001b6f8.64, align 4
  store i32 ptrtoint (i32* @global_var_100056a8.78 to i32), i32* @lr, align 4
  %v1_100056a4 = call i32 @function_10005278(i32 %v2_10005694)
  store i32 268457644, i32* @lr, align 4
  %v1_100056a8 = call i32 @function_10005d44(i32 %v1_100056a4)
  store i32 %v2_100055e8, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268457656, i32* @lr, align 4
  %v0_100056b4 = call i32 @function_10007f68()
  %v0_100056b8 = load i32, i32* @r28, align 4
  %v3_100056b8 = icmp eq i32 %v0_100056b8, 2
  br i1 %v3_100056b8, label %dec_label_pc_10005830, label %dec_label_pc_100056c0

dec_label_pc_100056c0:                            ; preds = %dec_label_pc_10005830, %dec_label_pc_1000559c, %dec_label_pc_10005840
  %v0_100056c0 = call i32 @function_10005cf4()
  %v2_100056c4 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_100056c4, i32* @r27, align 4
  store i32 %v0_100056c0, i32* %r29.global-to-local, align 4
  %v0_100056cc = load i32, i32* @r31, align 4
  %v1_100056cc = inttoptr i32 %v0_100056cc to i32*
  %v2_100056cc = load i32, i32* %v1_100056cc, align 4
  %v2_100056d0 = ptrtoint i16* %stack_var_-1608 to i32
  store i32 %v2_100056d0, i32* @r25, align 4
  store i32 0, i32* @r26, align 4
  store i32 268457692, i32* @lr, align 4
  %v1_100056d8 = inttoptr i32 %v2_100056cc to i8*
  %v2_100056d8 = call i32 @function_10007ec0(i8* %v1_100056d8)
  store i32 %v2_100056d8, i32* %r28.global-to-local, align 4
  %v0_100056e0 = load i32, i32* @r31, align 4
  %v1_100056e0 = inttoptr i32 %v0_100056e0 to i32*
  %v2_100056e0 = load i32, i32* %v1_100056e0, align 4
  %v1_100056e4 = sub i32 20, %v2_100056d8
  store i32 %v1_100056e4, i32* @r28, align 4
  store i32 268457708, i32* @lr, align 4
  %v1_100056e8 = inttoptr i32 %v2_100056e0 to i8*
  %v2_100056e8 = call i32 @function_10007ec0(i8* %v1_100056e8)
  %v0_100056ec = load i32, i32* %r29.global-to-local, align 4
  %v1_100056ec = load i32, i32* @r28, align 4
  %v2_100056ec = urem i32 %v0_100056ec, %v1_100056ec
  %v2_100056f0 = sub i32 %v0_100056ec, %v2_100056ec
  store i32 %v2_100056f0, i32* %r0.global-to-local, align 4
  %v2_100056f8 = add i32 %v2_100056ec, %v2_100056e8
  %v0_10005704 = load i32, i32* @r25, align 4
  %v2_10005704 = add i32 %v0_10005704, %v2_100056f8
  store i32 %v2_10005704, i32* @r29, align 4
  store i32 268457740, i32* @lr, align 4
  %v2_10005708 = bitcast i32* %stack_var_-1584 to i8*
  %v3_10005708 = call i32 @function_10005db4(i8* %v2_10005708, i32 %v2_100056f8)
  %v0_1000570c = load i32, i32* @r31, align 4
  %v1_1000570c = inttoptr i32 %v0_1000570c to i32*
  %v2_1000570c = load i32, i32* %v1_1000570c, align 4
  store i32 %v2_1000570c, i32* @r3, align 4
  %v0_10005710 = load i32, i32* @r26, align 4
  %v1_10005710 = trunc i32 %v0_10005710 to i8
  %v2_10005710 = load i32, i32* @r29, align 4
  %v3_10005710 = add i32 %v2_10005710, 24
  %v4_10005710 = inttoptr i32 %v3_10005710 to i8*
  store i8 %v1_10005710, i8* %v4_10005710, align 1
  %v2_10005718 = inttoptr i32 %v2_1000570c to i8*
  %v3_10005718 = call i32 @function_10007ee8(i8* %v2_10005718, i32 %v2_100056c4)
  store i32 32, i32* @r4, align 4
  store i32 %v2_100056c4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005728.80 to i32), i32* @lr, align 4
  %v0_10005724 = call i32 @function_10007f68()
  %v0_10005728 = call i32 @function_10005cf4()
  store i32 %v0_10005728, i32* %r28.global-to-local, align 4
  %v0_10005730 = load i32, i32* @r31, align 4
  %v1_10005730 = inttoptr i32 %v0_10005730 to i32*
  %v2_10005730 = load i32, i32* %v1_10005730, align 4
  store i32 268457784, i32* @lr, align 4
  %v1_10005734 = inttoptr i32 %v2_10005730 to i8*
  %v2_10005734 = call i32 @function_10007ec0(i8* %v1_10005734)
  store i32 %v2_10005734, i32* %r29.global-to-local, align 4
  %v0_1000573c = load i32, i32* @r31, align 4
  %v1_1000573c = inttoptr i32 %v0_1000573c to i32*
  %v2_1000573c = load i32, i32* %v1_1000573c, align 4
  %v1_10005740 = sub i32 20, %v2_10005734
  store i32 %v1_10005740, i32* @r29, align 4
  store i32 268457800, i32* @lr, align 4
  %v1_10005744 = inttoptr i32 %v2_1000573c to i8*
  %v2_10005744 = call i32 @function_10007ec0(i8* %v1_10005744)
  %v0_10005748 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005748 = load i32, i32* @r29, align 4
  %v2_10005748 = urem i32 %v0_10005748, %v1_10005748
  %v2_1000574c = sub i32 %v0_10005748, %v2_10005748
  store i32 %v2_1000574c, i32* %r0.global-to-local, align 4
  %v2_10005754 = add i32 %v2_10005748, %v2_10005744
  %v0_10005760 = load i32, i32* @r25, align 4
  %v2_10005760 = add i32 %v0_10005760, %v2_10005754
  store i32 %v2_10005760, i32* @r28, align 4
  store i32 268457832, i32* @lr, align 4
  %v3_10005764 = call i32 @function_10005db4(i8* %v2_10005708, i32 %v2_10005754)
  %v0_10005768 = load i32, i32* @r26, align 4
  %v1_10005768 = trunc i32 %v0_10005768 to i8
  %v2_10005768 = load i32, i32* @r28, align 4
  %v3_10005768 = add i32 %v2_10005768, 24
  %v4_10005768 = inttoptr i32 %v3_10005768 to i8*
  store i8 %v1_10005768, i8* %v4_10005768, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_1000577c.81 to i32), i32* @lr, align 4
  %v2_10005778 = call i32 @function_10008870(i32 15, i32 %v2_100056c4)
  store i32 268457860, i32* @lr, align 4
  %v1_10005780 = call i32 @function_10007aac(i32 3)
  %v3_1000578c = call i32 @function_100079f8(i32 3, i32* nonnull %stack_var_-1596)
  %v3_10005790 = load i32, i32* %stack_var_-1596, align 4
  store i32 268457888, i32* @lr, align 4
  %v3_1000579c = call i32 @function_10008ae0(i32 1, i32 %v3_1000578c, i32 %v3_10005790)
  store i32 ptrtoint ([3 x i8]* @global_var_100057b4.83 to i32), i32* @lr, align 4
  %v3_100057b0 = call i32 @function_10008ae0(i32 1, i32 ptrtoint (i32* @global_var_1000b090.82 to i32), i32 1)
  store i32 268457916, i32* @lr, align 4
  %v1_100057b8 = call i32 @function_10007a20(i32 3)
  store i32 268457920, i32* @lr, align 4
  %v1_100057bc = call i32 @function_1000072c(i32 %v1_100057b8)
  store i32 268457924, i32* @lr, align 4
  %v1_100057c0 = call i32 @function_10004aec(i32 %v1_100057bc)
  store i32 ptrtoint (i32* @global_var_100057c8.84 to i32), i32* @lr, align 4
  %v1_100057c4 = call i32 @function_100054c0(i32 %v1_100057c0)
  store i32 268457932, i32* @lr, align 4
  %v0_100057c8 = call i32 @function_100086c8()
  %tmp48 = icmp slt i32 %v0_100057c8, 1
  br i1 %tmp48, label %dec_label_pc_10005868, label %dec_label_pc_100057d4

dec_label_pc_100057d4:                            ; preds = %dec_label_pc_100056c0
  store i32 %v0_100055b8, i32* %r0.global-to-local, align 4
  store i32 %v0_10005604, i32* @r14, align 4
  store i32 %v0_10005608, i32* %r15.global-to-local, align 4
  store i32 %v0_1000560c, i32* %r16.global-to-local, align 4
  store i32 %v0_100055d8, i32* %r17.global-to-local, align 4
  store i32 %v0_100055e4, i32* %r18.global-to-local, align 4
  store i32 %v0_100055ec, i32* %r19.global-to-local, align 4
  store i32 %v0_100055f4, i32* %r20.global-to-local, align 4
  store i32 %v0_10005614, i32* @r22, align 4
  store i32 %v0_10005618, i32* @r23, align 4
  store i32 %v0_1000561c, i32* @r24, align 4
  store i32 %v0_10005620, i32* @r25, align 4
  store i32 %v0_10005624, i32* @r26, align 4
  store i32 %v0_10005628, i32* @r27, align 4
  store i32 %v0_100055c4, i32* @r28, align 4
  store i32 %v0_100055bc, i32* @r29, align 4
  store i32 %v0_1000562c, i32* @r30, align 4
  store i32 %v0_100055fc, i32* @r31, align 4
  ret i32 0

dec_label_pc_10005830:                            ; preds = %dec_label_pc_1000559c
  %v0_10005830 = load i32, i32* @r31, align 4
  %v1_10005830 = add i32 %v0_10005830, 4
  %v2_10005830 = inttoptr i32 %v1_10005830 to i32*
  %v3_10005830 = load i32, i32* %v2_10005830, align 4
  store i32 268458040, i32* @lr, align 4
  %v1_10005834 = inttoptr i32 %v3_10005830 to i8*
  %v2_10005834 = call i32 @function_10007ec0(i8* %v1_10005834)
  %v2_10005838 = icmp sgt i32 %v2_10005834, 31
  br i1 %v2_10005838, label %dec_label_pc_100056c0, label %dec_label_pc_10005840

dec_label_pc_10005840:                            ; preds = %dec_label_pc_10005830
  %v0_10005840 = load i32, i32* @r31, align 4
  %v1_10005840 = add i32 %v0_10005840, 4
  %v2_10005840 = inttoptr i32 %v1_10005840 to i32*
  %v3_10005840 = load i32, i32* %v2_10005840, align 4
  store i32 %v2_100055e8, i32* @r3, align 4
  %v2_10005848 = bitcast i32* %stack_var_-1552 to i8*
  %v3_10005848 = call i32 @function_10007ee8(i8* %v2_10005848, i32 %v3_10005840)
  %v0_1000584c = load i32, i32* @r31, align 4
  %v1_1000584c = add i32 %v0_1000584c, 4
  %v2_1000584c = inttoptr i32 %v1_1000584c to i32*
  %v3_1000584c = load i32, i32* %v2_1000584c, align 4
  store i32 %v3_1000584c, i32* %r29.global-to-local, align 4
  store i32 268458072, i32* @lr, align 4
  %v1_10005854 = inttoptr i32 %v3_1000584c to i8*
  %v2_10005854 = call i32 @function_10007ec0(i8* %v1_10005854)
  store i32 %v2_10005854, i32* @r4, align 4
  store i32 %v3_1000584c, i32* @r3, align 4
  store i32 268458084, i32* @lr, align 4
  %v0_10005860 = call i32 @function_10007f68()
  br label %dec_label_pc_100056c0

dec_label_pc_10005868:                            ; preds = %dec_label_pc_100056c0
  store i32 ptrtoint ([3 x i8]* @global_var_1000586c.85 to i32), i32* @lr, align 4
  %v1_10005868 = call i32 @function_10008990(i32 %v0_100057c8)
  store i32 ptrtoint ([3 x i8]* @global_var_10005874.86 to i32), i32* @lr, align 4
  %v0_10005870 = call i32 @function_10008680()
  store i32 ptrtoint ([3 x i8]* @global_var_1000587c.87 to i32), i32* @lr, align 4
  %v0_10005878 = call i32 @function_10008680()
  store i32 ptrtoint (i32* @global_var_10005884.88 to i32), i32* @lr, align 4
  %v0_10005880 = call i32 @function_10008680()
  store i32 0, i32* @r24, align 4
  store i32 268458124, i32* @lr, align 4
  %v1_10005888 = call i32 @function_1000072c(i32 %v0_10005880)
  %v2_1000588c = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_1000588c, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005894.89 to i32), i32* @lr, align 4
  %v1_10005890 = call i32 @function_10004aec(i32 %v1_10005888)
  %v2_10005894 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_10005894, i32* @r27, align 4
  store i32 268458140, i32* @lr, align 4
  %v1_10005898 = call i32 @function_100054c0(i32 %v1_10005890)
  store i32 268566528, i32* @r23, align 4
  store i32 268458148, i32* @lr, align 4
  %v1_100058a0 = call i32 @function_1000626c(i32 %v1_10005898)
  store i32 268566528, i32* @r30, align 4
  %v2_100058ac = ptrtoint i32* %stack_var_-1604 to i32
  store i32 %v2_100058ac, i32* %r15.global-to-local, align 4
  %v2_100058b0 = ptrtoint i32* %stack_var_-1600 to i32
  %v2_100058b8 = ptrtoint i32* %stack_var_-1136 to i32
  store i32 %v2_100058b8, i32* %r16.global-to-local, align 4
  %v2_1000598c = ptrtoint i32* %stack_var_-1592 to i32
  %v1_10005c18 = bitcast i32* %stack_var_-1552 to i8*
  br label %dec_label_pc_100058bc

dec_label_pc_100058bc:                            ; preds = %dec_label_pc_10005c7c, %dec_label_pc_10005cb4, %dec_label_pc_10005c70, %dec_label_pc_10005c14, %dec_label_pc_10005a6c, %dec_label_pc_10005a5c, %dec_label_pc_10005974, %dec_label_pc_10005ce8, %dec_label_pc_10005ca0, %dec_label_pc_10005c88, %dec_label_pc_10005c5c, %dec_label_pc_10005bdc, %dec_label_pc_10005b04, %dec_label_pc_10005a20, %dec_label_pc_10005868
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100058cc49 = load i32, i32* @r28, align 4
  %v4_100058cc51 = inttoptr i32 %v2_100058cc49 to i32*
  store i32 0, i32* %v4_100058cc51, align 4
  %v0_100058d052 = load i32, i32* %r9.global-to-local, align 4
  %v1_100058d053 = add i32 %v0_100058d052, 4
  store i32 %v1_100058d053, i32* %r9.global-to-local, align 4
  %v0_100058d454 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100058d455 = add i32 %v0_100058d454, -1
  store i32 %v1_100058d455, i32* %ctr.global-to-local, align 4
  %v2_100058d456 = icmp eq i32 %v1_100058d455, 0
  br i1 %v2_100058d456, label %dec_label_pc_100058d8, label %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge

dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge: ; preds = %dec_label_pc_100058bc, %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge
  %v1_100058d057 = phi i32 [ %v1_100058d0, %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge ], [ %v1_100058d053, %dec_label_pc_100058bc ]
  %v0_100058cc.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_100058cc = load i32, i32* @r28, align 4
  %v3_100058cc = add i32 %v2_100058cc, %v1_100058d057
  %v4_100058cc = inttoptr i32 %v3_100058cc to i32*
  store i32 %v0_100058cc.pre, i32* %v4_100058cc, align 4
  %v0_100058d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100058d0 = add i32 %v0_100058d0, 4
  store i32 %v1_100058d0, i32* %r9.global-to-local, align 4
  %v0_100058d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100058d4 = add i32 %v0_100058d4, -1
  store i32 %v1_100058d4, i32* %ctr.global-to-local, align 4
  %v2_100058d4 = icmp eq i32 %v1_100058d4, 0
  br i1 %v2_100058d4, label %dec_label_pc_100058d8, label %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge

dec_label_pc_100058d8:                            ; preds = %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge, %dec_label_pc_100058bc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100058e858 = load i32, i32* @r27, align 4
  %v4_100058e860 = inttoptr i32 %v2_100058e858 to i32*
  store i32 0, i32* %v4_100058e860, align 4
  %v0_100058ec61 = load i32, i32* %r9.global-to-local, align 4
  %v1_100058ec62 = add i32 %v0_100058ec61, 4
  store i32 %v1_100058ec62, i32* %r9.global-to-local, align 4
  %v0_100058f063 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100058f064 = add i32 %v0_100058f063, -1
  store i32 %v1_100058f064, i32* %ctr.global-to-local, align 4
  %v2_100058f065 = icmp eq i32 %v1_100058f064, 0
  br i1 %v2_100058f065, label %dec_label_pc_100058f4, label %dec_label_pc_100058e8.dec_label_pc_100058e8_crit_edge

dec_label_pc_100058e8.dec_label_pc_100058e8_crit_edge: ; preds = %dec_label_pc_100058d8, %dec_label_pc_100058e8.dec_label_pc_100058e8_crit_edge
  %v1_100058ec66 = phi i32 [ %v1_100058ec, %dec_label_pc_100058e8.dec_label_pc_100058e8_crit_edge ], [ %v1_100058ec62, %dec_label_pc_100058d8 ]
  %v0_100058e8.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_100058e8 = load i32, i32* @r27, align 4
  %v3_100058e8 = add i32 %v2_100058e8, %v1_100058ec66
  %v4_100058e8 = inttoptr i32 %v3_100058e8 to i32*
  store i32 %v0_100058e8.pre, i32* %v4_100058e8, align 4
  %v0_100058ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100058ec = add i32 %v0_100058ec, 4
  store i32 %v1_100058ec, i32* %r9.global-to-local, align 4
  %v0_100058f0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100058f0 = add i32 %v0_100058f0, -1
  store i32 %v1_100058f0, i32* %ctr.global-to-local, align 4
  %v2_100058f0 = icmp eq i32 %v1_100058f0, 0
  br i1 %v2_100058f0, label %dec_label_pc_100058f4, label %dec_label_pc_100058e8.dec_label_pc_100058e8_crit_edge

dec_label_pc_100058f4:                            ; preds = %dec_label_pc_100058e8.dec_label_pc_100058e8_crit_edge, %dec_label_pc_100058d8
  %v3_100058f4 = load i32, i32* @global_var_1001b6f0.65, align 4
  %v3_100058f8 = icmp eq i32 %v3_100058f4, -1
  br i1 %v3_100058f8, label %dec_label_pc_10005920, label %dec_label_pc_10005900

dec_label_pc_10005900:                            ; preds = %dec_label_pc_100058f4
  %v1_10005900 = call i32 @__asm_rlwinm(i32 %v3_100058f4, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005908 = load i32, i32* @r25, align 4
  %v2_10005908 = add i32 %v1_10005908, %v1_10005900
  %v1_1000590c = urem i32 %v3_100058f4, 32
  %v1_10005910 = add i32 %v2_10005908, 88
  %v2_10005910 = inttoptr i32 %v1_10005910 to i32*
  %v3_10005910 = load i32, i32* %v2_10005910, align 4
  %v3_10005914 = shl i32 1, %v1_1000590c
  store i32 %v3_10005914, i32* %r0.global-to-local, align 4
  %v2_10005918 = or i32 %v3_10005910, %v3_10005914
  store i32 %v2_10005918, i32* %r9.global-to-local, align 4
  store i32 %v2_10005918, i32* %v2_10005910, align 4
  br label %dec_label_pc_10005920

dec_label_pc_10005920:                            ; preds = %dec_label_pc_100058f4, %dec_label_pc_10005900
  %v3_10005920 = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 %v3_10005920, i32* %r0.global-to-local, align 4
  %v3_10005928 = icmp eq i32 %v3_10005920, -1
  br i1 %v3_10005928, label %dec_label_pc_10005b1c, label %dec_label_pc_10005930

dec_label_pc_10005930:                            ; preds = %dec_label_pc_10005b1c, %dec_label_pc_10005920, %dec_label_pc_10005b74
  %v3_10005a34 = phi i32 [ -1, %dec_label_pc_10005b1c ], [ %v3_10005920, %dec_label_pc_10005920 ], [ %v3_10005a34.pre, %dec_label_pc_10005b74 ]
  %v3_10005930 = load i8, i8* bitcast (i16* @global_var_1001b72c.91 to i8*), align 2
  %v3_10005934 = icmp eq i8 %v3_10005930, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005a3c = call i32 @__asm_rlwinm(i32 %v3_10005a34, i32 29, i32 3, i32 29)
  %v1_10005a40 = urem i32 %v3_10005a34, 32
  %v1_10005a44 = load i32, i32* @r25, align 4
  %v2_10005a44 = add i32 %v1_10005a44, %v1_10005a3c
  %v0_10005a48 = load i32, i32* %r0.global-to-local, align 4
  %v3_10005a48 = shl i32 %v0_10005a48, %v1_10005a40
  store i32 %v3_10005a48, i32* %r0.global-to-local, align 4
  br i1 %v3_10005934, label %dec_label_pc_10005a34, label %dec_label_pc_1000593c

dec_label_pc_1000593c:                            ; preds = %dec_label_pc_10005930
  %v1_10005954 = add i32 %v2_10005a44, 216
  %v2_10005954 = inttoptr i32 %v1_10005954 to i32*
  %v3_10005954 = load i32, i32* %v2_10005954, align 4
  %v2_10005958 = or i32 %v3_10005954, %v3_10005a48
  store i32 %v2_10005958, i32* %r9.global-to-local, align 4
  store i32 %v2_10005958, i32* %v2_10005954, align 4
  br label %dec_label_pc_10005960

dec_label_pc_10005960:                            ; preds = %dec_label_pc_10005a34, %dec_label_pc_1000593c
  %v3_10005960 = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 %v3_10005960, i32* %r0.global-to-local, align 4
  %v3_10005964 = load i32, i32* @global_var_1001b6f0.65, align 4
  %v2_10005968 = icmp slt i32 %v3_10005964, %v3_10005960
  br i1 %v2_10005968, label %dec_label_pc_10005970, label %dec_label_pc_10005974

dec_label_pc_10005970:                            ; preds = %dec_label_pc_10005960
  br label %dec_label_pc_10005974

dec_label_pc_10005974:                            ; preds = %dec_label_pc_10005960, %dec_label_pc_10005970
  %v0_1000597c = phi i32 [ %v3_10005964, %dec_label_pc_10005960 ], [ %v3_10005960, %dec_label_pc_10005970 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_1000597c = add i32 %v0_1000597c, 1
  store i32 10, i32* %stack_var_-1592, align 4
  store i32 268458396, i32* @lr, align 4
  %v5_10005998 = call i32 @function_10008948(i32 %v1_1000597c, i32 %v2_1000588c, i32 %v2_10005894, i32 0, i32 %v2_1000598c)
  %v6_10005998 = trunc i32 %v5_10005998 to i16
  %v4_1000599c = icmp eq i16 %v6_10005998, -1
  br i1 %v4_1000599c, label %dec_label_pc_100058bc, label %dec_label_pc_100059a4

dec_label_pc_100059a4:                            ; preds = %dec_label_pc_10005974
  %v4_100059a4 = icmp eq i16 %v6_10005998, 0
  br i1 %v4_100059a4, label %dec_label_pc_100059ac, label %dec_label_pc_100059d8

dec_label_pc_100059ac:                            ; preds = %dec_label_pc_100059a4
  %v0_100059b0 = load i32, i32* @r24, align 4
  store i16 0, i16* %stack_var_-1608, align 2
  %v2_100059c0 = srem i32 %v0_100059b0, 6
  %v1_100059c4 = sub i32 %v0_100059b0, %v2_100059c0
  store i32 %v1_100059c4, i32* %r9.global-to-local, align 4
  store i32 %v2_100059c0, i32* %r0.global-to-local, align 4
  %v1_100059cc = add i32 %v0_100059b0, 1
  store i32 %v1_100059cc, i32* @r24, align 4
  %v3_100059d0 = icmp eq i32 %v2_100059c0, 0
  br i1 %v3_100059d0, label %dec_label_pc_10005b90, label %dec_label_pc_100059d8

dec_label_pc_100059d8:                            ; preds = %dec_label_pc_100059a4, %dec_label_pc_100059ac, %dec_label_pc_10005b90
  %v3_100059d8 = load i8, i8* bitcast (i16* @global_var_1001b72c.91 to i8*), align 2
  %v4_100059d8 = zext i8 %v3_100059d8 to i32
  store i32 %v4_100059d8, i32* @r29, align 4
  %v3_100059dc = icmp eq i8 %v3_100059d8, 0
  %v3_10005a5c = load i32, i32* @global_var_1001b6f4.90, align 4
  br i1 %v3_100059dc, label %dec_label_pc_10005a5c, label %dec_label_pc_100059e4

dec_label_pc_100059e4:                            ; preds = %dec_label_pc_100059d8
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v1_100059ec = call i32 @__asm_rlwinm(i32 %v3_10005a5c, i32 29, i32 3, i32 29)
  %v1_100059f0 = urem i32 %v3_10005a5c, 32
  %v1_100059f4 = load i32, i32* @r25, align 4
  %v2_100059f4 = add i32 %v1_100059f4, %v1_100059ec
  store i32 %v2_100059f4, i32* %r9.global-to-local, align 4
  %v1_100059f8 = add i32 %v2_100059f4, 216
  %v2_100059f8 = inttoptr i32 %v1_100059f8 to i32*
  %v3_100059f8 = load i32, i32* %v2_100059f8, align 4
  %v3_100059fc = lshr i32 %v3_100059f8, %v1_100059f0
  store i32 %v3_100059fc, i32* %r0.global-to-local, align 4
  %v1_10005a04 = urem i32 %v3_100059fc, 2
  %v3_10005a04 = icmp eq i32 %v1_10005a04, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001b72c.91 to i8*), align 2
  br i1 %v3_10005a04, label %dec_label_pc_10005a14, label %dec_label_pc_10005bac

dec_label_pc_10005a14:                            ; preds = %dec_label_pc_100059e4
  %v3_10005a14 = icmp eq i32 %v3_10005a5c, -1
  br i1 %v3_10005a14, label %dec_label_pc_10005a20, label %dec_label_pc_10005a1c

dec_label_pc_10005a1c:                            ; preds = %dec_label_pc_10005a14
  store i32 ptrtoint (i32* @global_var_10005a20.92 to i32), i32* @lr, align 4
  %v0_10005a1c = call i32 @function_10008680()
  br label %dec_label_pc_10005a20

dec_label_pc_10005a20:                            ; preds = %dec_label_pc_10005a14, %dec_label_pc_10005a1c
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b6f4.90, align 4
  store i32 268458544, i32* @lr, align 4
  %v1_10005a2c = call i32 @function_10009e94(i32 1)
  br label %dec_label_pc_100058bc

dec_label_pc_10005a34:                            ; preds = %dec_label_pc_10005930
  %v1_10005a4c = add i32 %v2_10005a44, 88
  %v2_10005a4c = inttoptr i32 %v1_10005a4c to i32*
  %v3_10005a4c = load i32, i32* %v2_10005a4c, align 4
  %v2_10005a50 = or i32 %v3_10005a4c, %v3_10005a48
  store i32 %v2_10005a50, i32* %r9.global-to-local, align 4
  store i32 %v2_10005a50, i32* %v2_10005a4c, align 4
  br label %dec_label_pc_10005960

dec_label_pc_10005a5c:                            ; preds = %dec_label_pc_100059d8
  store i32 268566528, i32* @r31, align 4
  %v3_10005a64 = icmp eq i32 %v3_10005a5c, -1
  br i1 %v3_10005a64, label %dec_label_pc_100058bc, label %dec_label_pc_10005a6c

dec_label_pc_10005a6c:                            ; preds = %dec_label_pc_10005a5c
  %v1_10005a6c = call i32 @__asm_rlwinm(i32 %v3_10005a5c, i32 29, i32 3, i32 29)
  %v1_10005a70 = urem i32 %v3_10005a5c, 32
  %v1_10005a74 = load i32, i32* @r25, align 4
  %v2_10005a74 = add i32 %v1_10005a74, %v1_10005a6c
  store i32 %v2_10005a74, i32* %r9.global-to-local, align 4
  %v1_10005a78 = add i32 %v2_10005a74, 88
  %v2_10005a78 = inttoptr i32 %v1_10005a78 to i32*
  %v3_10005a78 = load i32, i32* %v2_10005a78, align 4
  %v3_10005a7c = lshr i32 %v3_10005a78, %v1_10005a70
  store i32 %v3_10005a7c, i32* %r0.global-to-local, align 4
  %v1_10005a80 = urem i32 %v3_10005a7c, 2
  store i32 %v1_10005a80, i32* %r9.global-to-local, align 4
  %v3_10005a80 = icmp eq i32 %v1_10005a80, 0
  br i1 %v3_10005a80, label %dec_label_pc_100058bc, label %dec_label_pc_10005a88

dec_label_pc_10005a88:                            ; preds = %dec_label_pc_10005a6c
  %v0_10005a88 = load i32, i32* @r29, align 4
  %v6_10005a88 = trunc i32 %v0_10005a88 to i16
  store i16 %v6_10005a88, i16* %stack_var_-1608, align 2
  %v0_10005a8c = call i32 @function_10008d9c()
  %v0_10005a90 = load i32, i32* @r29, align 4
  %v2_10005a90 = inttoptr i32 %v0_10005a8c to i32*
  store i32 %v0_10005a90, i32* %v2_10005a90, align 4
  store i32 %v0_10005a8c, i32* @r26, align 4
  %v3_10005aa0 = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 268458668, i32* @lr, align 4
  %v4_10005aa8 = call i32 @function_10009270(i32 %v3_10005aa0, i32 %v2_100056d0, i32 2, i32 16386)
  %v3_10005aac = icmp eq i32 %v4_10005aa8, -1
  br i1 %v3_10005aac, label %dec_label_pc_10005c70, label %dec_label_pc_10005ab4

dec_label_pc_10005ab4:                            ; preds = %dec_label_pc_10005a88
  %v3_10005ab4 = icmp eq i32 %v4_10005aa8, 0
  br i1 %v3_10005ab4, label %dec_label_pc_10005af4, label %dec_label_pc_10005abc

dec_label_pc_10005abc:                            ; preds = %dec_label_pc_10005ab4
  %v3_10005abc = load i16, i16* %stack_var_-1608, align 2
  %v4_10005abc = sext i16 %v3_10005abc to i32
  %v4_10005ac0 = icmp eq i16 %v3_10005abc, 0
  br i1 %v4_10005ac0, label %dec_label_pc_10005c88, label %dec_label_pc_10005ac8

dec_label_pc_10005ac8:                            ; preds = %dec_label_pc_10005abc
  %v3_10005ac8 = icmp ugt i16 %v3_10005abc, 1024
  br i1 %v3_10005ac8, label %dec_label_pc_10005ca0, label %dec_label_pc_10005ad0

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005ac8
  %v0_10005ad0 = load i32, i32* @r29, align 4
  %v1_10005ad0 = load i32, i32* @r26, align 4
  %v2_10005ad0 = inttoptr i32 %v1_10005ad0 to i32*
  store i32 %v0_10005ad0, i32* %v2_10005ad0, align 4
  %v3_10005adc = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 268458724, i32* @lr, align 4
  %v5_10005ae0 = call i32 @function_10009270(i32 %v3_10005adc, i32 %v2_100058b8, i32 %v4_10005abc, i32 16386)
  %v3_10005ae4 = icmp eq i32 %v5_10005ae0, -1
  br i1 %v3_10005ae4, label %dec_label_pc_10005c70, label %dec_label_pc_10005aec

dec_label_pc_10005aec:                            ; preds = %dec_label_pc_10005ad0
  %v3_10005aec = icmp eq i32 %v5_10005ae0, 0
  br i1 %v3_10005aec, label %dec_label_pc_10005af4, label %dec_label_pc_10005cb4

dec_label_pc_10005af4:                            ; preds = %dec_label_pc_10005c7c, %dec_label_pc_10005aec, %dec_label_pc_10005ab4
  %v3_10005af4 = load i32, i32* @global_var_1001b6f4.90, align 4
  %v3_10005af8 = icmp eq i32 %v3_10005af4, -1
  br i1 %v3_10005af8, label %dec_label_pc_10005b04, label %dec_label_pc_10005b00

dec_label_pc_10005b00:                            ; preds = %dec_label_pc_10005af4
  store i32 ptrtoint (i32* @global_var_10005b04.93 to i32), i32* @lr, align 4
  %v0_10005b00 = call i32 @function_10008680()
  br label %dec_label_pc_10005b04

dec_label_pc_10005b04:                            ; preds = %dec_label_pc_10005af4, %dec_label_pc_10005b00
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b6f4.90, align 4
  store i32 268458776, i32* @lr, align 4
  %v1_10005b14 = call i32 @function_10009e94(i32 1)
  br label %dec_label_pc_100058bc

dec_label_pc_10005b1c:                            ; preds = %dec_label_pc_10005920
  store i32 268458796, i32* @lr, align 4
  %v3_10005b28 = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  %v3_10005b2c = icmp eq i32 %v3_10005b28, -1
  store i32 %v3_10005b28, i32* %r29.global-to-local, align 4
  store i32 %v3_10005b28, i32* @global_var_1001b6f4.90, align 4
  br i1 %v3_10005b2c, label %dec_label_pc_10005930, label %dec_label_pc_10005b3c

dec_label_pc_10005b3c:                            ; preds = %dec_label_pc_10005b1c
  store i32 3, i32* @r4, align 4
  store i32 268458828, i32* @lr, align 4
  %v1_10005b48 = call i32 @function_10008598(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005b54 = load i32, i32* %r29.global-to-local, align 4
  store i32 268458848, i32* @lr, align 4
  %v2_10005b5c = call i32 @function_10008598(i32 %v0_10005b54)
  %v3_10005b60 = load i32, i32* @global_var_1001b6f8.64, align 4
  store i32 %v3_10005b60, i32* %r0.global-to-local, align 4
  %v3_10005b64 = icmp eq i32 %v3_10005b60, 0
  br i1 %v3_10005b64, label %dec_label_pc_10005b74, label %dec_label_pc_10005b6c

dec_label_pc_10005b6c:                            ; preds = %dec_label_pc_10005b3c
  store i32 %v3_10005b60, i32* %ctr.global-to-local, align 4
  store i32 268458868, i32* @lr, align 4
  %v2_10005b70 = call i32 @function_100081c4(i32 %v2_10005b5c)
  br label %dec_label_pc_10005b74

dec_label_pc_10005b74:                            ; preds = %dec_label_pc_10005b3c, %dec_label_pc_10005b6c
  %v3_10005b74 = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 %v3_10005b74, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001b72c.91 to i8*), align 2
  store i32 268458892, i32* @lr, align 4
  %v0_10005b88 = call i32 @function_1000919c()
  %v3_10005a34.pre = load i32, i32* @global_var_1001b6f4.90, align 4
  br label %dec_label_pc_10005930

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_100059ac
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005b98 = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 268458920, i32* @lr, align 4
  %v4_10005ba4 = call i32 @function_100092e8(i32 %v3_10005b98, i32 %v2_100056d0, i32 2, i32 16384)
  br label %dec_label_pc_100059d8

dec_label_pc_10005bac:                            ; preds = %dec_label_pc_100059e4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1604, align 4
  store i32 4, i32* %stack_var_-1600, align 4
  store i32 268458960, i32* @lr, align 4
  %v5_10005bcc = call i32 @function_10009204(i32 1, i32 4, i32 %v2_100058ac, i32 %v2_100058b0, i32 4)
  %v3_10005bd0 = load i32, i32* %stack_var_-1604, align 4
  store i32 %v3_10005bd0, i32* %r0.global-to-local, align 4
  %v3_10005bd4 = icmp eq i32 %v3_10005bd0, 0
  br i1 %v3_10005bd4, label %dec_label_pc_10005c14, label %dec_label_pc_10005bdc

dec_label_pc_10005bdc:                            ; preds = %dec_label_pc_10005bac
  store i32 ptrtoint (i32* @global_var_10005be4.94 to i32), i32* @lr, align 4
  %v0_10005be0 = call i32 @function_10008680()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b6f4.90, align 4
  %v0_10005bec = call i32 @function_10005cf4()
  %v1_10005bec = sext i32 %v0_10005bec to i64
  %v5_10005bf8 = mul nuw nsw i64 %v1_10005bec, 3435973837
  %v1_10005bfc2 = udiv i64 %v5_10005bf8, 34359738368
  %v1_10005bfc = trunc i64 %v1_10005bfc2 to i32
  %v1_10005c00 = mul i32 %v1_10005bfc, 10
  store i32 %v1_10005c00, i32* %r0.global-to-local, align 4
  %v3_10005c04 = sub i32 %v0_10005bec, %v1_10005c00
  %v1_10005c08 = add i32 %v3_10005c04, 1
  store i32 268459024, i32* @lr, align 4
  %v1_10005c0c = call i32 @function_10009e94(i32 %v1_10005c08)
  br label %dec_label_pc_100058bc

dec_label_pc_10005c14:                            ; preds = %dec_label_pc_10005bac
  store i32 268459036, i32* @lr, align 4
  %v2_10005c18 = call i32 @function_10007ec0(i8* %v1_10005c18)
  %v3_10005c18 = trunc i32 %v2_10005c18 to i8
  %v7_10005c1c = sext i8 %v3_10005c18 to i16
  store i16 %v7_10005c1c, i16* %stack_var_-1608, align 2
  store i32 268459044, i32* @lr, align 4
  %v2_10005c20 = call i32 @function_100081c4(i32 %v2_10005c18)
  store i32 %v2_10005c20, i32* @global_var_1001b718.16, align 4
  %v3_10005c2c = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 268459068, i32* @lr, align 4
  %v4_10005c38 = call i32 @function_100092e8(i32 %v3_10005c2c, i32 ptrtoint (i32* @global_var_1000b094.96 to i32), i32 4, i32 16384)
  %v3_10005c3c = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 268459088, i32* @lr, align 4
  %v4_10005c4c = call i32 @function_100092e8(i32 %v3_10005c3c, i32 %v2_100056d0, i32 1, i32 16384)
  %v3_10005c50 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005c54 = icmp eq i16 %v3_10005c50, 0
  br i1 %v4_10005c54, label %dec_label_pc_100058bc, label %dec_label_pc_10005c5c

dec_label_pc_10005c5c:                            ; preds = %dec_label_pc_10005c14
  %v4_10005c50 = sext i16 %v3_10005c50 to i32
  %v3_10005c5c = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 268459116, i32* @lr, align 4
  %v5_10005c68 = call i32 @function_100092e8(i32 %v3_10005c5c, i32 %v2_100055e8, i32 %v4_10005c50, i32 16384)
  br label %dec_label_pc_100058bc

dec_label_pc_10005c70:                            ; preds = %dec_label_pc_10005ad0, %dec_label_pc_10005a88
  %v0_10005c70 = load i32, i32* @r26, align 4
  %v1_10005c70 = inttoptr i32 %v0_10005c70 to i32*
  %v2_10005c70 = load i32, i32* %v1_10005c70, align 4
  %v3_10005c74 = icmp eq i32 %v2_10005c70, 11
  br i1 %v3_10005c74, label %dec_label_pc_100058bc, label %dec_label_pc_10005c7c

dec_label_pc_10005c7c:                            ; preds = %dec_label_pc_10005c70
  %v3_10005c7c = icmp eq i32 %v2_10005c70, 4
  br i1 %v3_10005c7c, label %dec_label_pc_100058bc, label %dec_label_pc_10005af4

dec_label_pc_10005c88:                            ; preds = %dec_label_pc_10005abc
  %v3_10005c88 = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 268459164, i32* @lr, align 4
  %v4_10005c98 = call i32 @function_10009270(i32 %v3_10005c88, i32 %v2_100056d0, i32 2, i32 16384)
  br label %dec_label_pc_100058bc

dec_label_pc_10005ca0:                            ; preds = %dec_label_pc_10005ac8
  store i32 ptrtoint (i32* @global_var_10005ca8.97 to i32), i32* @lr, align 4
  %v0_10005ca4 = call i32 @function_10008680()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b6f4.90, align 4
  br label %dec_label_pc_100058bc

dec_label_pc_10005cb4:                            ; preds = %dec_label_pc_10005aec
  %v3_10005cb4 = load i32, i32* @global_var_1001b6f4.90, align 4
  store i32 268459208, i32* @lr, align 4
  %v4_10005cc4 = call i32 @function_10009270(i32 %v3_10005cb4, i32 %v2_100056d0, i32 2, i32 16384)
  %v3_10005cc8 = load i32, i32* @global_var_1001b6f4.90, align 4
  %v3_10005ccc = load i16, i16* %stack_var_-1608, align 2
  %v4_10005ccc = sext i16 %v3_10005ccc to i32
  store i32 268459228, i32* @lr, align 4
  %v5_10005cd8 = call i32 @function_10009270(i32 %v3_10005cc8, i32 %v2_100058b8, i32 %v4_10005ccc, i32 16384)
  %v3_10005cdc = load i16, i16* %stack_var_-1608, align 2
  %v4_10005ce0 = icmp eq i16 %v3_10005cdc, 0
  br i1 %v4_10005ce0, label %dec_label_pc_100058bc, label %dec_label_pc_10005ce8

dec_label_pc_10005ce8:                            ; preds = %dec_label_pc_10005cb4
  %v4_10005cdc = sext i16 %v3_10005cdc to i32
  store i32 268459248, i32* @lr, align 4
  %v3_10005cec = call i32 @function_10000394(i32 %v2_100058b8, i32 %v4_10005cdc)
  br label %dec_label_pc_100058bc

; uselistorder directives
  uselistorder i16 %v3_10005cdc, { 1, 0 }
  uselistorder i16 %v3_10005c50, { 1, 0 }
  uselistorder i32 %v3_10005b28, { 1, 0, 2 }
  uselistorder i32 %v1_10005a80, { 1, 0 }
  uselistorder i32 %v3_10005a5c, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v2_100059c0, { 1, 0, 2 }
  uselistorder i32 %v0_100059b0, { 2, 0, 1 }
  uselistorder i32 %v2_10005a44, { 1, 0 }
  uselistorder i32 %v1_100058f0, { 1, 0 }
  uselistorder i32 %v1_100058ec, { 1, 0 }
  uselistorder i32 %v1_100058d4, { 1, 0 }
  uselistorder i32 %v1_100058d0, { 1, 0 }
  uselistorder i32 %v2_100058b8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005754, { 1, 0 }
  uselistorder i32 %v2_100056f8, { 1, 0 }
  uselistorder i32 %v2_100056d0, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v1_1000566c, { 1, 0 }
  uselistorder i32 %v2_100055c0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_1000558c, { 1, 2, 0 }
  uselistorder i32 %v0_100054d0, { 2, 3, 0, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1608, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1596, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 24, 13, 14, 15, 21, 22, 16, 17, 18, 19, 20 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r15.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 9, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_100092e8, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i16* @global_var_1001b72c.91 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001b6f4.90, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19 }
  uselistorder i32 (i32)* @function_100054c0, { 1, 0 }
  uselistorder i32 (i32)* @function_10004aec, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008ae0, { 1, 0 }
  uselistorder i32 (i32)* @function_10005278, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009448, { 1, 0 }
  uselistorder i32 (i32)* @function_10009e94, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10005b74, { 1, 0 }
  uselistorder label %dec_label_pc_10005b04, { 1, 0 }
  uselistorder label %dec_label_pc_10005a20, { 1, 0 }
  uselistorder label %dec_label_pc_100059d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005974, { 1, 0 }
  uselistorder label %dec_label_pc_10005930, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005920, { 1, 0 }
  uselistorder label %dec_label_pc_100058e8.dec_label_pc_100058e8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100058cc.dec_label_pc_100058cc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100058bc, { 7, 1, 8, 9, 0, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_100056c0, { 2, 0, 1 }
}

define i32 @function_10005cf4() local_unnamed_addr {
dec_label_pc_10005cf4:
  %v3_10005cfc = load i32, i32* @global_var_1001b7ac.98, align 4
  %v3_10005d04 = load i32, i32* @global_var_1001b7a0.99, align 4
  %v1_10005d0c = udiv i32 %v3_10005cfc, 524288
  %v3_10005d10 = load i32, i32* @global_var_1001b7a8.100, align 4
  %v1_10005d14 = mul i32 %v3_10005d04, 2048
  %v2_10005d18 = xor i32 %v1_10005d0c, %v3_10005cfc
  %v2_10005d1c = xor i32 %v1_10005d14, %v3_10005d04
  %v3_10005d20 = load i32, i32* @global_var_1001b7a4.101, align 4
  %v2_10005d24 = xor i32 %v2_10005d18, %v2_10005d1c
  %v1_10005d28 = udiv i32 %v2_10005d1c, 256
  %v2_10005d2c = xor i32 %v2_10005d24, %v1_10005d28
  store i32 %v3_10005d20, i32* @global_var_1001b7a0.99, align 4
  store i32 %v3_10005d10, i32* @global_var_1001b7a4.101, align 4
  store i32 %v3_10005cfc, i32* @global_var_1001b7a8.100, align 4
  store i32 %v2_10005d2c, i32* @global_var_1001b7ac.98, align 4
  ret i32 %v2_10005d2c

; uselistorder directives
  uselistorder i32 %v2_10005d2c, { 1, 0 }
  uselistorder i32 %v3_10005d04, { 1, 0 }
  uselistorder i32 %v3_10005cfc, { 2, 1, 0 }
}

define i32 @function_10005d44(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005d44:
  store i32 268459364, i32* @lr, align 4
  %v0_10005d60 = call i32 @function_10008a50()
  store i32 %v0_10005d60, i32* @global_var_1001b7a0.99, align 4
  store i32 268459376, i32* @lr, align 4
  %v0_10005d6c = call i32 @function_10008710()
  store i32 268459384, i32* @lr, align 4
  %v0_10005d74 = call i32 @function_10008758()
  %v2_10005d78 = xor i32 %v0_10005d6c, %v0_10005d74
  store i32 %v2_10005d78, i32* @global_var_1001b7a4.101, align 4
  store i32 268459396, i32* @lr, align 4
  %v1_10005d80 = call i32 @function_10008da8(i32 %v0_10005d74)
  %v3_10005d84 = load i32, i32* @global_var_1001b7a4.101, align 4
  %v2_10005d94 = xor i32 %v3_10005d84, %v1_10005d80
  store i32 %v2_10005d94, i32* @global_var_1001b7ac.98, align 4
  store i32 %v1_10005d80, i32* @global_var_1001b7a8.100, align 4
  ret i32 %v1_10005d80

; uselistorder directives
  uselistorder i32 %v1_10005d80, { 2, 1, 0 }
  uselistorder i32 %v0_10005d74, { 1, 0 }
  uselistorder i32 ()* @function_10008758, { 2, 1, 0 }
}

define i32 @function_10005db4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005db4:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10005dd0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268459508, i32* @lr, align 4
  %v1_10005df0 = call i32 @function_10007aac(i32 28)
  %v3_10005dfc = call i32 @function_100079f8(i32 28, i32* null)
  %v2_10005e08 = inttoptr i32 %v3_10005dfc to i8*
  %v3_10005e08 = call i32 @function_10008f14(i32 %v2_10005dd0, i8* %v2_10005e08)
  %v3_10005e0c = icmp eq i32 %arg2, 0
  br i1 %v3_10005e0c, label %dec_label_pc_10005e90, label %dec_label_pc_10005e14

dec_label_pc_10005e14:                            ; preds = %dec_label_pc_10005db4
  %v1_10005e14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005e14 = add i32 %v1_10005e14, %arg2
  store i32 %v2_10005e14, i32* %r26.global-to-local, align 4
  %v1_10005e68 = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10005e28

dec_label_pc_10005e28:                            ; preds = %dec_label_pc_10005e28, %dec_label_pc_10005e14
  %v3_10005e28 = load i32, i32* @global_var_1001b7ac.98, align 4
  %v3_10005e30 = load i32, i32* @global_var_1001b7a0.99, align 4
  %v1_10005e34 = udiv i32 %v3_10005e28, 524288
  %v3_10005e38 = load i32, i32* @global_var_1001b7a8.100, align 4
  %v1_10005e3c = mul i32 %v3_10005e30, 2048
  %v2_10005e40 = xor i32 %v1_10005e34, %v3_10005e28
  %v2_10005e44 = xor i32 %v1_10005e3c, %v3_10005e30
  %v3_10005e48 = load i32, i32* @global_var_1001b7a4.101, align 4
  %v2_10005e4c = xor i32 %v2_10005e40, %v2_10005e44
  %v1_10005e50 = udiv i32 %v2_10005e44, 256
  %v2_10005e54 = xor i32 %v2_10005e4c, %v1_10005e50
  store i32 %v2_10005e54, i32* %r29.global-to-local, align 4
  store i32 %v3_10005e48, i32* @global_var_1001b7a0.99, align 4
  store i32 %v2_10005e54, i32* @global_var_1001b7ac.98, align 4
  store i32 %v3_10005e38, i32* @global_var_1001b7a4.101, align 4
  store i32 %v3_10005e28, i32* @global_var_1001b7a8.100, align 4
  store i32 268459628, i32* @lr, align 4
  %v2_10005e68 = call i32 @function_10007ec0(i8* %v1_10005e68)
  %v0_10005e6c = load i32, i32* %r29.global-to-local, align 4
  %v2_10005e6c = urem i32 %v0_10005e6c, %v2_10005e68
  store i32 %v2_10005e6c, i32* %r29.global-to-local, align 4
  %v0_10005e78 = load i32, i32* @r1, align 4
  %v2_10005e78 = add i32 %v0_10005e78, %v2_10005e6c
  %v1_10005e7c = add i32 %v2_10005e78, 8
  %v2_10005e7c = inttoptr i32 %v1_10005e7c to i8*
  %v3_10005e7c = load i8, i8* %v2_10005e7c, align 1
  %v2_10005e80 = load i32, i32* %r31.global-to-local, align 4
  %v3_10005e80 = inttoptr i32 %v2_10005e80 to i8*
  store i8 %v3_10005e7c, i8* %v3_10005e80, align 1
  %v0_10005e84 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005e84 = add i32 %v0_10005e84, 1
  store i32 %v1_10005e84, i32* %r31.global-to-local, align 4
  %v1_10005e88 = load i32, i32* %r26.global-to-local, align 4
  %v4_10005e88 = icmp eq i32 %v1_10005e84, %v1_10005e88
  br i1 %v4_10005e88, label %dec_label_pc_10005e90, label %dec_label_pc_10005e28

dec_label_pc_10005e90:                            ; preds = %dec_label_pc_10005e28, %dec_label_pc_10005db4
  store i32 268459672, i32* @lr, align 4
  %v1_10005e94 = call i32 @function_10007a20(i32 28)
  ret i32 %v1_10005e94

; uselistorder directives
  uselistorder i32 %v3_10005e30, { 1, 0 }
  uselistorder i32 %v3_10005e28, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_10007a20, { 2, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_100079f8, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32 (i32)* @function_10007aac, { 3, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10005ec8() local_unnamed_addr {
dec_label_pc_10005ec8:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10005ec8 = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10005ec8, 1
  br i1 %tmp19, label %dec_label_pc_10005ec8.dec_label_pc_10005f7c_crit_edge, label %dec_label_pc_10005ee0

dec_label_pc_10005ec8.dec_label_pc_10005f7c_crit_edge: ; preds = %dec_label_pc_10005ec8
  %v0_10005f8c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005f7c

dec_label_pc_10005ee0:                            ; preds = %dec_label_pc_10005ec8
  %v3_10005ef0 = load i32, i32* @global_var_1001b7ac.98, align 4
  store i32 %v3_10005ef0, i32* %r7.global-to-local, align 4
  %v3_10005ef4 = load i32, i32* @global_var_1001b7a8.100, align 4
  store i32 %v3_10005ef4, i32* %r5.global-to-local, align 4
  %v3_10005ef8 = load i32, i32* @global_var_1001b7a4.101, align 4
  store i32 %v3_10005ef8, i32* %r6.global-to-local, align 4
  %v3_10005efc = load i32, i32* @global_var_1001b7a0.99, align 4
  br label %dec_label_pc_10005f28

dec_label_pc_10005f04:                            ; preds = %dec_label_pc_10005f28
  %v1_10005f04 = load i32, i32* @r3, align 4
  %v2_10005f04 = inttoptr i32 %v1_10005f04 to i32*
  store i32 %v2_10005f4c, i32* %v2_10005f04, align 4
  %v0_10005f08 = load i32, i32* @r4, align 4
  %v1_10005f08 = add i32 %v0_10005f08, -4
  store i32 %v1_10005f08, i32* @r4, align 4
  %v0_10005f0c = load i32, i32* @r3, align 4
  %v1_10005f0c = add i32 %v0_10005f0c, 4
  br label %dec_label_pc_10005f10

dec_label_pc_10005f10:                            ; preds = %dec_label_pc_10005f60, %dec_label_pc_10005f04
  %v0_10005f10 = phi i32 [ %v0_10005f10.pr, %dec_label_pc_10005f60 ], [ %v1_10005f08, %dec_label_pc_10005f04 ]
  %storemerge = phi i32 [ %v1_10005f64, %dec_label_pc_10005f60 ], [ %v1_10005f0c, %dec_label_pc_10005f04 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10005f14 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10005f10, 1
  br i1 %tmp20, label %dec_label_pc_10005f6c, label %dec_label_pc_10005f1c

dec_label_pc_10005f1c:                            ; preds = %dec_label_pc_10005f10
  %v0_10005f1c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005f1c, i32* %r6.global-to-local, align 4
  %v0_10005f20 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005f20, i32* %r5.global-to-local, align 4
  %v0_10005f24 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005f24, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10005f28

dec_label_pc_10005f28:                            ; preds = %dec_label_pc_10005ee0, %dec_label_pc_10005f1c
  %v0_10005fc8 = phi i32 [ %v3_10005ef8, %dec_label_pc_10005ee0 ], [ %v0_10005f1c, %dec_label_pc_10005f1c ]
  %v0_10005fac = phi i32 [ %v3_10005ef4, %dec_label_pc_10005ee0 ], [ %v0_10005f20, %dec_label_pc_10005f1c ]
  %v0_10005fb0 = phi i32 [ %v3_10005ef0, %dec_label_pc_10005ee0 ], [ %v0_10005f24, %dec_label_pc_10005f1c ]
  %v0_10005f90 = phi i32 [ %v3_10005efc, %dec_label_pc_10005ee0 ], [ %v0_10005f14, %dec_label_pc_10005f1c ]
  %v0_10005f58 = phi i32 [ %v0_10005ec8, %dec_label_pc_10005ee0 ], [ %v0_10005f10, %dec_label_pc_10005f1c ]
  %v2_10005f28 = icmp sgt i32 %v0_10005f58, 3
  %v1_10005f2c = mul i32 %v0_10005f90, 2048
  %v1_10005f30 = udiv i32 %v0_10005fb0, 524288
  %v2_10005f34 = xor i32 %v1_10005f2c, %v0_10005f90
  %v2_10005f38 = xor i32 %v1_10005f30, %v0_10005fb0
  %v2_10005f40 = xor i32 %v2_10005f38, %v2_10005f34
  %v1_10005f44 = udiv i32 %v2_10005f34, 256
  %v2_10005f4c = xor i32 %v2_10005f40, %v1_10005f44
  store i32 %v2_10005f4c, i32* %r0.global-to-local, align 4
  br i1 %v2_10005f28, label %dec_label_pc_10005f04, label %dec_label_pc_10005f54

dec_label_pc_10005f54:                            ; preds = %dec_label_pc_10005f28
  %v3_10005f3c = icmp eq i32 %v0_10005f58, 1
  store i32 %v2_10005f4c, i32* %r0.global-to-local, align 4
  %v1_10005f58 = add i32 %v0_10005f58, -2
  store i32 %v1_10005f58, i32* @r4, align 4
  br i1 %v3_10005f3c, label %dec_label_pc_10005f90, label %dec_label_pc_10005f60

dec_label_pc_10005f60:                            ; preds = %dec_label_pc_10005f54
  %v1_10005f60 = trunc i32 %v2_10005f4c to i16
  %v2_10005f60 = load i32, i32* @r3, align 4
  %v3_10005f60 = inttoptr i32 %v2_10005f60 to i16*
  store i16 %v1_10005f60, i16* %v3_10005f60, align 2
  %v0_10005f64 = load i32, i32* @r3, align 4
  %v1_10005f64 = add i32 %v0_10005f64, 2
  %v0_10005f10.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005f10

dec_label_pc_10005f6c:                            ; preds = %dec_label_pc_10005f10
  %v0_10005f6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005f6c, i32* @global_var_1001b7ac.98, align 4
  %v0_10005f70 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005f70, i32* @global_var_1001b7a8.100, align 4
  %v0_10005f74 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005f74, i32* @global_var_1001b7a4.101, align 4
  store i32 %v0_10005f14, i32* @global_var_1001b7a0.99, align 4
  br label %dec_label_pc_10005f7c

dec_label_pc_10005f7c:                            ; preds = %dec_label_pc_10005ec8.dec_label_pc_10005f7c_crit_edge, %dec_label_pc_10005f6c
  %v0_10005f8c = phi i32 [ %v0_10005f8c.pre, %dec_label_pc_10005ec8.dec_label_pc_10005f7c_crit_edge ], [ %storemerge, %dec_label_pc_10005f6c ]
  ret i32 %v0_10005f8c

dec_label_pc_10005f90:                            ; preds = %dec_label_pc_10005f54
  store i32 %v2_10005f4c, i32* %r0.global-to-local, align 4
  store i32 %v0_10005fac, i32* @global_var_1001b7a4.101, align 4
  store i32 %v0_10005fb0, i32* @global_var_1001b7a8.100, align 4
  store i32 %v2_10005f4c, i32* @global_var_1001b7ac.98, align 4
  store i32 %v0_10005fc8, i32* @global_var_1001b7a0.99, align 4
  %v1_10005fcc = trunc i32 %v2_10005f4c to i8
  %v2_10005fcc = load i32, i32* @r3, align 4
  %v3_10005fcc = inttoptr i32 %v2_10005fcc to i8*
  store i8 %v1_10005fcc, i8* %v3_10005fcc, align 1
  %v0_10005fd0 = load i32, i32* @r3, align 4
  ret i32 %v0_10005fd0

; uselistorder directives
  uselistorder i32 %v2_10005f4c, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10005f90, { 1, 0 }
  uselistorder i32 %v0_10005fb0, { 1, 2, 0 }
  uselistorder i32 %v0_10005ec8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10005f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005f28, { 1, 0 }
}

define i32 @function_10005fd4() local_unnamed_addr {
dec_label_pc_10005fd4:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10005fdc = load i32, i32* @r31, align 4
  %v0_10005fe0 = load i32, i32* @r3, align 4
  store i32 %v0_10005fe0, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10005ff0 = add i32 %v0_10005fe0, 4
  %v2_10005ff0 = inttoptr i32 %v1_10005ff0 to i32*
  %v3_10005ff0 = load i32, i32* %v2_10005ff0, align 4
  %v3_10005ff8 = icmp eq i32 %v3_10005ff0, -1
  br i1 %v3_10005ff8, label %dec_label_pc_10006010, label %dec_label_pc_1000600c

dec_label_pc_1000600c:                            ; preds = %dec_label_pc_10005fd4
  store i32 268460048, i32* @lr, align 4
  %v0_1000600c = call i32 @function_10008680()
  br label %dec_label_pc_10006010

dec_label_pc_10006010:                            ; preds = %dec_label_pc_10005fd4, %dec_label_pc_1000600c
  store i32 268460064, i32* @lr, align 4
  %v3_1000601c = call i32 @function_1000939c(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_10006028 = load i32, i32* @r31, align 4
  %v1_10006028 = add i32 %v0_10006028, 28
  store i32 %v1_10006028, i32* @r3, align 4
  %v3_1000602c = icmp eq i32 %v3_1000601c, -1
  %v2_10006030 = add i32 %v0_10006028, 4
  %v3_10006030 = inttoptr i32 %v2_10006030 to i32*
  store i32 %v3_1000601c, i32* %v3_10006030, align 4
  br i1 %v3_1000602c, label %dec_label_pc_10006010.dec_label_pc_100060a8_crit_edge, label %dec_label_pc_10006038

dec_label_pc_10006010.dec_label_pc_100060a8_crit_edge: ; preds = %dec_label_pc_10006010
  %v0_100060bc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100060a8

dec_label_pc_10006038:                            ; preds = %dec_label_pc_10006010
  %v0_10006038 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006038 = load i32, i32* @r31, align 4
  %v2_10006038 = add i32 %v1_10006038, 24
  %v3_10006038 = inttoptr i32 %v2_10006038 to i32*
  store i32 %v0_10006038, i32* %v3_10006038, align 4
  store i32 268460096, i32* @lr, align 4
  %v0_1000603c = call i32 @function_10007f68()
  %v0_10006040 = load i32, i32* @r31, align 4
  %v1_10006040 = add i32 %v0_10006040, 4
  %v2_10006040 = inttoptr i32 %v1_10006040 to i32*
  %v3_10006040 = load i32, i32* %v2_10006040, align 4
  store i32 %v3_10006040, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268460120, i32* @lr, align 4
  %v2_10006054 = call i32 @function_10008598(i32 %v3_10006040)
  store i32 4, i32* @r4, align 4
  store i32 268460140, i32* @lr, align 4
  %v2_10006068 = call i32 @function_10008598(i32 %v3_10006040)
  %v3_10006070 = load i32, i32* @global_var_1001b73c.102, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10006078 = load i32, i32* @r31, align 4
  %v2_10006080 = add i32 %v0_10006078, 8
  %v3_10006080 = inttoptr i32 %v2_10006080 to i32*
  store i32 %v3_10006070, i32* %v3_10006080, align 4
  %v0_10006088 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006088 = load i32, i32* @r31, align 4
  %v2_10006088 = add i32 %v1_10006088, 12
  %v3_10006088 = inttoptr i32 %v2_10006088 to i32*
  store i32 %v0_10006088, i32* %v3_10006088, align 4
  %v0_10006090 = load i32, i32* @r31, align 4
  %v1_10006090 = add i32 %v0_10006090, 4
  %v2_10006090 = inttoptr i32 %v1_10006090 to i32*
  %v3_10006090 = load i32, i32* %v2_10006090, align 4
  store i32 %v3_10006090, i32* @r3, align 4
  %v1_10006094 = add i32 %v0_10006090, 16
  %v2_10006094 = inttoptr i32 %v1_10006094 to i32*
  %v3_10006094 = load i32, i32* %v2_10006094, align 4
  store i32 %v3_10006094, i32* %r9.global-to-local, align 4
  store i32 268460200, i32* @lr, align 4
  %v0_100060a4 = call i32 @function_1000919c()
  br label %dec_label_pc_100060a8

dec_label_pc_100060a8:                            ; preds = %dec_label_pc_10006010.dec_label_pc_100060a8_crit_edge, %dec_label_pc_10006038
  %v0_100060bc = phi i32 [ %v0_100060bc.pre, %dec_label_pc_10006010.dec_label_pc_100060a8_crit_edge ], [ %v0_100060a4, %dec_label_pc_10006038 ]
  store i32 %v0_10005fdc, i32* @r31, align 4
  ret i32 %v0_100060bc

; uselistorder directives
  uselistorder i32 ()* @function_10007f68, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100060a8, { 1, 0 }
  uselistorder label %dec_label_pc_10006010, { 1, 0 }
}

define i32 @function_100060c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100060c0:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100060c4 = load i32, i32* @lr, align 4
  store i32 %v0_100060c4, i32* %r0.global-to-local, align 4
  %v3_100060d0 = load i32, i32* @global_var_1001b730.103, align 4
  %v1_100060dc = mul i32 %v3_100060d0, 16
  store i32 %v1_100060dc, i32* %r9.global-to-local, align 4
  %v0_100060e0 = load i32, i32* @r28, align 4
  %v3_100060e8 = load i32, i32* @global_var_1001b734.104, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_100060f4 = add i32 %v1_100060dc, 16
  %v0_1000610c = load i32, i32* @r29, align 4
  %v0_10006110 = load i32, i32* @r30, align 4
  store i32 268460316, i32* @lr, align 4
  %v3_10006118 = call i32 @function_10009868(i32 %v3_100060e8, i32 %v1_100060f4, i32 %v1_100060dc)
  store i32 %v3_10006118, i32* %r25.global-to-local, align 4
  %v0_10006120 = load i32, i32* @r28, align 4
  store i32 %v3_10006118, i32* @global_var_1001b734.104, align 4
  %v3_10006128 = load i32, i32* @global_var_1001b730.103, align 4
  store i32 %v3_10006128, i32* %r24.global-to-local, align 4
  store i32 268460336, i32* @lr, align 4
  %v1_1000612c = inttoptr i32 %v0_10006120 to i8*
  %v2_1000612c = call i32 @function_10007ec0(i8* %v1_1000612c)
  %sext = mul i32 %v2_1000612c, 16777216
  %v1_10006130 = sdiv i32 %sext, 16777216
  %v2_10006130 = add nsw i32 %v1_10006130, 1
  store i32 %v2_10006130, i32* @r29, align 4
  store i32 %v1_10006130, i32* @r30, align 4
  store i32 %v2_10006130, i32* @r3, align 4
  store i32 268460352, i32* @lr, align 4
  %v0_1000613c = call i32 @function_100095a0()
  %v0_10006140 = load i32, i32* @r28, align 4
  %v0_10006144 = load i32, i32* @r29, align 4
  store i32 %v0_1000613c, i32* %r31.global-to-local, align 4
  store i32 268460368, i32* @lr, align 4
  %v3_1000614c = call i32 @function_10007f44(i32 %v0_10006140, i32 %v0_10006144, i32 %v0_10006144)
  %v0_10006150 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10006150, 1
  %extract.t6 = trunc i32 %v0_10006150 to i8
  br i1 %tmp21, label %dec_label_pc_10006174, label %dec_label_pc_10006158

dec_label_pc_10006158:                            ; preds = %dec_label_pc_100060c0
  store i32 %v0_10006150, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006160

dec_label_pc_10006160:                            ; preds = %dec_label_pc_10006160, %dec_label_pc_10006158
  %v1_10006168 = phi i32 [ %v1_1000616c, %dec_label_pc_10006160 ], [ 0, %dec_label_pc_10006158 ]
  %v1_10006160 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006160 = add i32 %v1_10006160, %v1_10006168
  %v3_10006160 = inttoptr i32 %v2_10006160 to i8*
  %v4_10006160 = load i8, i8* %v3_10006160, align 1
  %v5_10006160 = zext i8 %v4_10006160 to i32
  %v1_10006164 = xor i32 %v5_10006160, 84
  store i32 %v1_10006164, i32* %r0.global-to-local, align 4
  %v3_10006168 = trunc i32 %v1_10006164 to i8
  store i8 %v3_10006168, i8* %v3_10006160, align 1
  %v0_1000616c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000616c = add i32 %v0_1000616c, 1
  store i32 %v1_1000616c, i32* %r9.global-to-local, align 4
  %v0_10006170 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006170 = add i32 %v0_10006170, -1
  store i32 %v1_10006170, i32* %ctr.global-to-local, align 4
  %v2_10006170 = icmp eq i32 %v1_10006170, 0
  br i1 %v2_10006170, label %dec_label_pc_10006174.loopexit, label %dec_label_pc_10006160

dec_label_pc_10006174.loopexit:                   ; preds = %dec_label_pc_10006160
  %v0_1000618c.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_1000618c.pre to i8
  br label %dec_label_pc_10006174

dec_label_pc_10006174:                            ; preds = %dec_label_pc_10006174.loopexit, %dec_label_pc_100060c0
  %v0_1000618c.off0 = phi i8 [ %extract.t, %dec_label_pc_10006174.loopexit ], [ %extract.t6, %dec_label_pc_100060c0 ]
  %v3_10006174 = load i32, i32* @global_var_1001b730.103, align 4
  %v0_10006178 = load i32, i32* %r23.global-to-local, align 4
  %v3_1000617c = load i32, i32* @global_var_1001b734.104, align 4
  %v1_10006180 = mul i32 %v3_10006174, 16
  %v2_10006184 = add i32 %v3_1000617c, %v1_10006180
  store i32 %v2_10006184, i32* %r9.global-to-local, align 4
  %v0_10006188 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006188 = mul i32 %v0_10006188, 16
  store i32 %v1_10006188, i32* %r0.global-to-local, align 4
  %v3_1000618c = add i32 %v2_10006184, 12
  %v4_1000618c = inttoptr i32 %v3_1000618c to i8*
  store i8 %v0_1000618c.off0, i8* %v4_1000618c, align 1
  %v0_10006190 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006190 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006190 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006190 = add i32 %v2_10006190, %v1_10006190
  %v4_10006190 = inttoptr i32 %v3_10006190 to i32*
  store i32 %v0_10006190, i32* %v4_10006190, align 4
  %v3_10006194 = load i32, i32* @global_var_1001b730.103, align 4
  store i32 %v3_10006194, i32* @r30, align 4
  %v3_10006198 = load i32, i32* @global_var_1001b734.104, align 4
  store i32 %v3_10006198, i32* %r25.global-to-local, align 4
  store i32 268460448, i32* @lr, align 4
  %v1_1000619c = inttoptr i32 %v0_10006178 to i8*
  %v2_1000619c = call i32 @function_10007ec0(i8* %v1_1000619c)
  %sext1 = mul i32 %v2_1000619c, 16777216
  %v1_100061a0 = sdiv i32 %sext1, 16777216
  %v2_100061a0 = add nsw i32 %v1_100061a0, 1
  store i32 %v2_100061a0, i32* @r29, align 4
  store i32 %v1_100061a0, i32* @r28, align 4
  store i32 %v2_100061a0, i32* @r3, align 4
  store i32 268460464, i32* @lr, align 4
  %v0_100061ac = call i32 @function_100095a0()
  %v0_100061b0 = load i32, i32* %r23.global-to-local, align 4
  %v0_100061b4 = load i32, i32* @r29, align 4
  store i32 %v0_100061ac, i32* %r31.global-to-local, align 4
  store i32 268460480, i32* @lr, align 4
  %v3_100061bc = call i32 @function_10007f44(i32 %v0_100061b0, i32 %v0_100061b4, i32 %v0_100061b4)
  %v0_100061c0 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_100061c0, 1
  %extract.t8 = trunc i32 %v0_100061c0 to i8
  br i1 %tmp22, label %dec_label_pc_100061e4, label %dec_label_pc_100061c8

dec_label_pc_100061c8:                            ; preds = %dec_label_pc_10006174
  store i32 %v0_100061c0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100061d0

dec_label_pc_100061d0:                            ; preds = %dec_label_pc_100061d0, %dec_label_pc_100061c8
  %v1_100061d8 = phi i32 [ %v1_100061dc, %dec_label_pc_100061d0 ], [ 0, %dec_label_pc_100061c8 ]
  %v1_100061d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100061d0 = add i32 %v1_100061d0, %v1_100061d8
  %v3_100061d0 = inttoptr i32 %v2_100061d0 to i8*
  %v4_100061d0 = load i8, i8* %v3_100061d0, align 1
  %v5_100061d0 = zext i8 %v4_100061d0 to i32
  %v1_100061d4 = xor i32 %v5_100061d0, 84
  store i32 %v1_100061d4, i32* %r0.global-to-local, align 4
  %v3_100061d8 = trunc i32 %v1_100061d4 to i8
  store i8 %v3_100061d8, i8* %v3_100061d0, align 1
  %v0_100061dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100061dc = add i32 %v0_100061dc, 1
  store i32 %v1_100061dc, i32* %r9.global-to-local, align 4
  %v0_100061e0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100061e0 = add i32 %v0_100061e0, -1
  store i32 %v1_100061e0, i32* %ctr.global-to-local, align 4
  %v2_100061e0 = icmp eq i32 %v1_100061e0, 0
  br i1 %v2_100061e0, label %dec_label_pc_100061e4.loopexit, label %dec_label_pc_100061d0

dec_label_pc_100061e4.loopexit:                   ; preds = %dec_label_pc_100061d0
  %v0_100061f8.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_100061f8.pre to i8
  br label %dec_label_pc_100061e4

dec_label_pc_100061e4:                            ; preds = %dec_label_pc_100061e4.loopexit, %dec_label_pc_10006174
  %v0_100061f8.off0 = phi i8 [ %extract.t7, %dec_label_pc_100061e4.loopexit ], [ %extract.t8, %dec_label_pc_10006174 ]
  %v3_100061e4 = load i32, i32* @global_var_1001b730.103, align 4
  %v3_100061ec = load i32, i32* @global_var_1001b734.104, align 4
  %v1_100061f0 = mul i32 %v3_100061e4, 16
  %v2_100061f4 = or i32 %v1_100061f0, 13
  %v3_100061f8 = add i32 %v2_100061f4, %v3_100061ec
  %v4_100061f8 = inttoptr i32 %v3_100061f8 to i8*
  store i8 %v0_100061f8.off0, i8* %v4_100061f8, align 1
  %v0_100061fc = load i32, i32* @r30, align 4
  %v1_100061fc = mul i32 %v0_100061fc, 16
  %v1_10006200 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006200 = add i32 %v1_10006200, %v1_100061fc
  store i32 %v2_10006200, i32* %r9.global-to-local, align 4
  %v3_10006204 = load i32, i32* @global_var_1001b730.103, align 4
  %v3_10006208 = load i32, i32* @global_var_1001b734.104, align 4
  %v1_1000620c = mul i32 %v3_10006204, 16
  %v3_10006210 = load i16, i16* @global_var_1001b738.105, align 2
  %v4_10006210 = zext i16 %v3_10006210 to i32
  store i32 %v4_10006210, i32* %r7.global-to-local, align 4
  %v2_10006214 = add i32 %v3_10006208, %v1_1000620c
  store i32 %v2_10006214, i32* %r11.global-to-local, align 4
  store i32 %v0_100060c4, i32* %r0.global-to-local, align 4
  %v1_1000621c = add i32 %v3_10006204, 1
  store i32 %v1_1000621c, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001b738.105 to i32), i32* %r8.global-to-local, align 4
  %v0_10006224 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006224 = add i32 %v2_10006200, 4
  %v3_10006224 = inttoptr i32 %v2_10006224 to i32*
  store i32 %v0_10006224, i32* %v3_10006224, align 4
  %v0_1000622c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000622c, i32* @global_var_1001b730.103, align 4
  store i32 %v0_100060e0, i32* @r28, align 4
  store i32 %v0_1000610c, i32* @r29, align 4
  store i32 %v0_10006110, i32* @r30, align 4
  %v0_1000625c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000625c = trunc i32 %v0_1000625c to i16
  %v2_1000625c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000625c = add i32 %v2_1000625c, 10
  %v4_1000625c = inttoptr i32 %v3_1000625c to i16*
  store i16 %v1_1000625c, i16* %v4_1000625c, align 2
  %v0_10006260 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006260 = trunc i32 %v0_10006260 to i16
  %v2_10006260 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006260 = add i32 %v2_10006260, 8
  %v4_10006260 = inttoptr i32 %v3_10006260 to i16*
  store i16 %v1_10006260, i16* %v4_10006260, align 2
  %v0_10006264 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006264 = trunc i32 %v0_10006264 to i16
  store i16 %v1_10006264, i16* @global_var_1001b738.105, align 2
  ret i32 %v3_100061bc

; uselistorder directives
  uselistorder i32 %v3_10006204, { 1, 0 }
  uselistorder i32 %v1_100061e0, { 1, 0 }
  uselistorder i32 %v1_100061dc, { 1, 0 }
  uselistorder i32 %v0_100061c0, { 1, 0, 2 }
  uselistorder i32 %v1_10006170, { 1, 0 }
  uselistorder i32 %v1_1000616c, { 1, 0 }
  uselistorder i32 %v0_10006150, { 1, 0, 2 }
  uselistorder i32 %v1_100060dc, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_10007ec0, { 22, 23, 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i32 (i32, i32, i32)* @function_10009868, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1000626c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000626c:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i16 @__decompiler_undefined_function_1()
  %tmp55 = call i16 @__decompiler_undefined_function_1()
  %tmp56 = call i8 @__decompiler_undefined_function_2()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_1000626c = load i32, i32* @lr, align 4
  store i32 %v0_1000626c, i32* %r0.global-to-local, align 4
  %v0_10006274 = call i32 @__asm_mfcr()
  store i32 %v0_10006274, i32* %r3.global-to-local, align 4
  %v0_100062a0 = load i32, i32* @r24, align 4
  %v0_100062a4 = load i32, i32* @r25, align 4
  %v0_100062ac = load i32, i32* @r27, align 4
  %v0_100062b0 = load i32, i32* @r28, align 4
  %v0_100062b4 = load i32, i32* @r29, align 4
  %v0_100062b8 = load i32, i32* @r30, align 4
  %v0_100062bc = load i32, i32* @r31, align 4
  %v0_100062c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 268460748, i32* @lr, align 4
  %v0_100062c8 = call i32 @function_100086c8()
  store i32 %v0_100062c8, i32* %r3.global-to-local, align 4
  %v1_100062cc = icmp slt i32 %v0_100062c8, 0
  %v3_100062cc = icmp eq i32 %v0_100062c8, 0
  store i1 %v1_100062cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100062cc, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100062c8, i32* @global_var_1001b748.106, align 4
  %tmp98 = icmp slt i32 %v0_100062c8, 1
  br i1 %tmp98, label %dec_label_pc_1000633c, label %dec_label_pc_100062dc

dec_label_pc_100062dc:                            ; preds = %dec_label_pc_1000633c, %dec_label_pc_1000626c
  store i32 %v0_100062c0, i32* %r0.global-to-local, align 4
  %v1_100062f0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006274)
  store i32 %v0_100062a0, i32* @r24, align 4
  store i32 %v0_100062a4, i32* @r25, align 4
  store i32 %v0_100062ac, i32* @r27, align 4
  store i32 %v0_100062b0, i32* @r28, align 4
  store i32 %v0_100062b4, i32* %r29.global-to-local, align 4
  store i32 %v0_100062b8, i32* %r30.global-to-local, align 4
  store i32 %v0_100062bc, i32* @r31, align 4
  ret i32 %v0_100062c8

dec_label_pc_1000633c:                            ; preds = %dec_label_pc_1000626c
  %v1_1000633c = icmp slt i32 %v0_100062c8, -1
  %v3_1000633c = icmp eq i32 %v0_100062c8, -1
  store i1 %v1_1000633c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000633c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000633c, label %dec_label_pc_100062dc, label %dec_label_pc_10006344

dec_label_pc_10006344:                            ; preds = %dec_label_pc_1000633c
  store i32 268460872, i32* @lr, align 4
  %v1_10006344 = call i32 @function_100081c4(i32 %v0_100062c8)
  store i32 %v1_10006344, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10006344, i32* @global_var_1001b718.16, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006354.107 to i32), i32* @lr, align 4
  %v1_10006350 = call i32 @function_10005d44(i32 %v1_10006344)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268460896, i32* @lr, align 4
  %v0_1000635c = call i32 @function_10008a50()
  store i32 %v0_1000635c, i32* @global_var_1001b73c.102, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006370.108 to i32), i32* @lr, align 4
  %v2_1000636c = call i32 @function_100096f8(i32 256, i32 288)
  store i32 %v2_1000636c, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_1000636c, i32* @global_var_1001b740.109, align 4
  store i32 %v2_1000636c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000639c = add i32 %v2_1000636c, 4
  store i32 %v1_1000639c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100063a0

dec_label_pc_100063a0:                            ; preds = %dec_label_pc_100063a0.dec_label_pc_100063a0_crit_edge, %dec_label_pc_10006344
  %v1_100063b4 = phi i32 [ %v1_100063bc, %dec_label_pc_100063a0.dec_label_pc_100063a0_crit_edge ], [ %v1_1000639c, %dec_label_pc_10006344 ]
  %v0_100063b4 = phi i32 [ %v0_100063b4.pre, %dec_label_pc_100063a0.dec_label_pc_100063a0_crit_edge ], [ -1, %dec_label_pc_10006344 ]
  %v1_100063b0 = phi i32 [ %v1_100063b0.pre, %dec_label_pc_100063a0.dec_label_pc_100063a0_crit_edge ], [ %v2_1000636c, %dec_label_pc_10006344 ]
  %v0_100063ac = phi i32 [ %v0_100063c0, %dec_label_pc_100063a0.dec_label_pc_100063a0_crit_edge ], [ 0, %dec_label_pc_10006344 ]
  %v1_100063a0 = mul i32 %v0_100063ac, 256
  store i32 %v1_100063a0, i32* %r0.global-to-local, align 4
  %v2_100063a8 = mul i32 %v0_100063ac, 288
  %v1_100063ac = add i32 %v0_100063ac, 1
  store i32 %v1_100063ac, i32* %r10.global-to-local, align 4
  %v2_100063b0 = add i32 %v2_100063a8, %v1_100063b0
  store i32 %v2_100063b0, i32* %r9.global-to-local, align 4
  %v2_100063b4 = inttoptr i32 %v1_100063b4 to i32*
  store i32 %v0_100063b4, i32* %v2_100063b4, align 4
  %v0_100063b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100063b8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100063b8 = add i32 %v1_100063b8, 12
  %v3_100063b8 = inttoptr i32 %v2_100063b8 to i32*
  store i32 %v0_100063b8, i32* %v3_100063b8, align 4
  %v0_100063bc = load i32, i32* %r11.global-to-local, align 4
  %v1_100063bc = add i32 %v0_100063bc, 288
  store i32 %v1_100063bc, i32* %r11.global-to-local, align 4
  %v0_100063c0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100063c0, i32* %r9.global-to-local, align 4
  %v0_100063c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100063c4 = add i32 %v0_100063c4, -1
  store i32 %v1_100063c4, i32* %ctr.global-to-local, align 4
  %v2_100063c4 = icmp eq i32 %v1_100063c4, 0
  br i1 %v2_100063c4, label %dec_label_pc_100063c8, label %dec_label_pc_100063a0.dec_label_pc_100063a0_crit_edge

dec_label_pc_100063a0.dec_label_pc_100063a0_crit_edge: ; preds = %dec_label_pc_100063a0
  %v1_100063b0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_100063b4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100063a0

dec_label_pc_100063c8:                            ; preds = %dec_label_pc_100063a0
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 256, i64* %stack_var_-1916, align 8
  store i32 268461024, i32* @lr, align 4
  %v3_100063dc = call i32 @function_1000939c(i32 2, i32 3, i32 6)
  %v4_100063dc = trunc i32 %v3_100063dc to i16
  store i32 %v3_100063dc, i32* %r3.global-to-local, align 4
  %v2_100063e0 = icmp slt i16 %v4_100063dc, -1
  %v4_100063e0 = icmp eq i16 %v4_100063dc, -1
  store i1 %v2_100063e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100063e0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100063dc, i32* %r29.global-to-local, align 4
  store i32 %v3_100063dc, i32* @global_var_1001b744.110, align 4
  br i1 %v4_100063e0, label %dec_label_pc_10006a00, label %dec_label_pc_100063f4

dec_label_pc_100063f4:                            ; preds = %dec_label_pc_100063c8
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268461060, i32* @lr, align 4
  %v1_10006400 = call i32 @function_10008598(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10006408 = or i32 %v1_10006400, 2048
  store i32 %v1_10006408, i32* %r5.global-to-local, align 4
  %v0_1000640c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000640c, i32* %r3.global-to-local, align 4
  store i32 268461080, i32* @lr, align 4
  %v2_10006414 = call i32 @function_10008598(i32 %v0_1000640c)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000641c = load i32, i32* @global_var_1001b744.110, align 4
  store i32 %v3_1000641c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_1000642c = ptrtoint i64* %stack_var_-1916 to i32
  store i32 %v2_1000642c, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268461116, i32* @lr, align 4
  %v5_10006438 = call i32 @function_10009360(i32 %v3_1000641c, i32 0, i32 3, i32 %v2_1000642c)
  store i32 %v5_10006438, i32* %r3.global-to-local, align 4
  %v1_1000643c = icmp slt i32 %v5_10006438, 0
  %v3_1000643c = icmp eq i32 %v5_10006438, 0
  store i1 %v1_1000643c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000643c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000643c, label %dec_label_pc_10006444, label %dec_label_pc_100079d0

dec_label_pc_10006444:                            ; preds = %dec_label_pc_100063f4, %dec_label_pc_10006444
  %v0_10006444 = call i32 @function_10005cf4()
  store i32 %v0_10006444, i32* %r3.global-to-local, align 4
  %v1_10006448 = urem i32 %v0_10006444, 65536
  store i32 %v1_10006448, i32* @r22, align 4
  %v1_1000644c = icmp ult i32 %v1_10006448, 1023
  %v3_1000644c = icmp eq i32 %v1_10006448, 1023
  store i1 %v1_1000644c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000644c, i1* %cr7_eq.global-to-local, align 1
  %tmp99 = icmp ult i32 %v1_10006448, 1024
  br i1 %tmp99, label %dec_label_pc_10006444, label %dec_label_pc_10006454

dec_label_pc_10006454:                            ; preds = %dec_label_pc_10006444
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_1000645c = load i32, i32* @global_var_1001b7b0.111, align 4
  store i32 %v3_1000645c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b7b0.111 to i32), i32* @r23, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b7c4.112 to i32), i32* @r24, align 4
  %v1_1000646c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000646c, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_10006474 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10006474, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10006474, i32* @global_var_1001b7b0.111, align 4
  store i32 ptrtoint (i32* @global_var_1000b124.113 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001b7b2.114 to i16*), align 4
  %v0_10006488 = call i32 @function_10005cf4()
  %v1_10006488 = trunc i32 %v0_10006488 to i16
  store i32 %v0_10006488, i32* %r3.global-to-local, align 4
  %v3_1000648c = load i32, i32* @global_var_1001b7d0.115, align 4
  store i32 %v3_1000648c, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001b7b8.116 to i8*), align 4
  %v1_1000649c = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_1000649c, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_100064a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100064a4 = trunc i32 %v0_100064a4 to i8
  store i8 %v1_100064a4, i8* bitcast (i32* @global_var_1001b7b9.117 to i8*), align 4
  store i16 %v1_10006488, i16* bitcast (i32* @global_var_1001b7b4.118 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000b120.119 to i32), i32* @r29, align 4
  store i32 %v1_1000649c, i32* @global_var_1001b7d0.115, align 4
  store i16 23, i16* @global_var_1001b7c6.120, align 2
  store i32 ptrtoint ([8 x i8]* @global_var_1000b0b8.121 to i32), i32* @r27, align 4
  %v0_100064c4 = load i32, i32* @r22, align 4
  %v1_100064c4 = trunc i32 %v0_100064c4 to i16
  store i16 %v1_100064c4, i16* bitcast (i32* @global_var_1001b7c4.112 to i16*), align 4
  %v2_100064c8 = ptrtoint i32* %stack_var_-1928 to i32
  store i32 %v2_100064c8, i32* @r14, align 4
  %v0_100064cc = call i32 @function_10005cf4()
  %v1_100064cc = trunc i32 %v0_100064cc to i16
  %v0_100064d0 = load i32, i32* @r28, align 4
  store i16 %v1_100064cc, i16* bitcast (i32* @global_var_1001b7d2.122 to i16*), align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_100064dc = load i32, i32* @r29, align 4
  store i32 %v0_100064dc, i32* %r3.global-to-local, align 4
  %v3_100064e0 = load i32, i32* @global_var_1001b7d0.115, align 4
  %v1_100064e4 = or i32 %v3_100064e0, 131072
  store i32 %v1_100064e4, i32* %r0.global-to-local, align 4
  store i32 %v1_100064e4, i32* @global_var_1001b7d0.115, align 4
  store i32 268461296, i32* @lr, align 4
  %v4_100064ec = call i32 @function_100060c0(i32 %v0_100064dc, i32 %v0_100064d0, i32 4)
  %v0_100064f4 = load i32, i32* @r29, align 4
  store i32 %v0_100064f4, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268461316, i32* @lr, align 4
  %v5_10006500 = call i32 @function_100060c0(i32 %v0_100064f4, i32 ptrtoint ([5 x i8]* @global_var_1000b09c.123 to i32), i32 8)
  %v0_10006508 = load i32, i32* @r29, align 4
  store i32 %v0_10006508, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268461336, i32* @lr, align 4
  %v5_10006514 = call i32 @function_100060c0(i32 %v0_10006508, i32 ptrtoint ([9 x i8]* @global_var_1000b0a4.124 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_1000b0b0.125 to i32), i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268461356, i32* @lr, align 4
  %v4_10006528 = call i32 @function_100060c0(i32 ptrtoint ([7 x i8]* @global_var_1000b0b0.125 to i32), i32 12, i32 12)
  %v0_1000652c = load i32, i32* @r28, align 4
  %v0_10006530 = load i32, i32* @r27, align 4
  store i32 %v0_10006530, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268461372, i32* @lr, align 4
  %v4_10006538 = call i32 @function_100060c0(i32 %v0_10006530, i32 %v0_1000652c, i32 7)
  %v0_10006540 = load i32, i32* @r29, align 4
  store i32 %v0_10006540, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r28, align 4
  store i32 268461396, i32* @lr, align 4
  %v5_10006550 = call i32 @function_100060c0(i32 %v0_10006540, i32 ptrtoint ([9 x i8]* @global_var_1000b0c0.126 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1000b0cc.127 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000b0f4.128 to i32), i32* @r28, align 4
  store i32 268461420, i32* @lr, align 4
  %v4_10006568 = call i32 @function_100060c0(i32 ptrtoint ([6 x i8]* @global_var_1000b0cc.127 to i32), i32 10, i32 10)
  %v0_10006570 = load i32, i32* @r29, align 4
  store i32 %v0_10006570, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461440, i32* @lr, align 4
  %v5_1000657c = call i32 @function_100060c0(i32 %v0_10006570, i32 ptrtoint ([6 x i8]* @global_var_1000b0d4.129 to i32), i32 9)
  store i32 ptrtoint ([8 x i8]* @global_var_1000b0dc.130 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268461460, i32* @lr, align 4
  %v4_10006590 = call i32 @function_100060c0(i32 ptrtoint ([8 x i8]* @global_var_1000b0dc.130 to i32), i32 14, i32 14)
  %v0_10006594 = load i32, i32* @r29, align 4
  store i32 %v0_10006594, i32* %r3.global-to-local, align 4
  %v0_10006598 = load i32, i32* @r27, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268461476, i32* @lr, align 4
  %v5_100065a0 = call i32 @function_100060c0(i32 %v0_10006594, i32 %v0_10006598, i32 11)
  %v0_100065a8 = load i32, i32* @r29, align 4
  store i32 %v0_100065a8, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268461496, i32* @lr, align 4
  %v4_100065b4 = call i32 @function_100060c0(i32 %v0_100065a8, i32 ptrtoint (i32* @global_var_1000b0e4.131 to i32), i32 17)
  %v0_100065b8 = load i32, i32* @r29, align 4
  store i32 %v0_100065b8, i32* %r3.global-to-local, align 4
  %v0_100065c0 = load i32, i32* @r28, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000b0fc.132 to i32), i32* @r29, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461520, i32* @lr, align 4
  %v5_100065cc = call i32 @function_100060c0(i32 %v0_100065b8, i32 %v0_100065c0, i32 9)
  store i32 8, i32* %r5.global-to-local, align 4
  %v0_100065d4 = load i32, i32* @r29, align 4
  store i32 %v0_100065d4, i32* %r3.global-to-local, align 4
  store i32 268461536, i32* @lr, align 4
  %v5_100065dc = call i32 @function_100060c0(i32 %v0_100065d4, i32 %v0_100065d4, i32 8)
  %v0_100065e0 = load i32, i32* @r29, align 4
  store i32 %v0_100065e0, i32* %r3.global-to-local, align 4
  %v0_100065e4 = load i32, i32* @r28, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461552, i32* @lr, align 4
  %v5_100065ec = call i32 @function_100060c0(i32 %v0_100065e0, i32 %v0_100065e4, i32 9)
  %v0_100065f8 = load i32, i32* @r27, align 4
  store i32 %v0_100065f8, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268461572, i32* @lr, align 4
  %v4_10006600 = call i32 @function_100060c0(i32 %v0_100065f8, i32 ptrtoint (i32* @global_var_1000b104.133 to i32), i32 15)
  %v0_10006608 = load i32, i32* @r27, align 4
  store i32 %v0_10006608, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268461592, i32* @lr, align 4
  %v4_10006614 = call i32 @function_100060c0(i32 %v0_10006608, i32 ptrtoint (i32* @global_var_1000b110.134 to i32), i32 15)
  store i32 %v4_10006614, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006618

dec_label_pc_10006618:                            ; preds = %dec_label_pc_10006c60, %dec_label_pc_10006454
  %v3_10006618 = load i32, i32* @global_var_1001b73c.102, align 4
  store i32 %v3_10006618, i32* @r31, align 4
  %v0_1000661c = load i32, i32* @r25, align 4
  %v2_1000661c = icmp slt i32 %v0_1000661c, %v3_10006618
  %v4_1000661c = icmp eq i32 %v0_1000661c, %v3_10006618
  store i1 %v2_1000661c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000661c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000661c, label %dec_label_pc_1000683c, label %dec_label_pc_10006624

dec_label_pc_10006624:                            ; preds = %dec_label_pc_10006618
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006628 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10006628, i32* %r28.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006638

dec_label_pc_10006638:                            ; preds = %dec_label_pc_10006768.dec_label_pc_10006638_crit_edge, %dec_label_pc_10006624
  %v0_10006638 = phi i32 [ %v0_10006638.pre, %dec_label_pc_10006768.dec_label_pc_10006638_crit_edge ], [ 0, %dec_label_pc_10006624 ]
  store i32 %v0_10006638, i32* %stack_var_-1888, align 4
  %v0_10006648 = call i32 @function_10005cf4()
  %v1_10006648 = trunc i32 %v0_10006648 to i16
  store i32 %v0_10006648, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_10006648, i16* bitcast (i32* @global_var_1001b7b4.118 to i16*), align 4
  %v3_10006654 = load i32, i32* @global_var_1001b718.16, align 4
  store i32 %v3_10006654, i32* %r0.global-to-local, align 4
  store i32 %v3_10006654, i32* @global_var_1001b7bc.135, align 4
  br label %dec_label_pc_1000665c.preheader

dec_label_pc_1000665c.preheader:                  ; preds = %dec_label_pc_10006638, %dec_label_pc_10006a08
  br label %dec_label_pc_1000665c

dec_label_pc_1000665c:                            ; preds = %dec_label_pc_10006aa4, %dec_label_pc_10006a98, %dec_label_pc_10006a8c, %dec_label_pc_10006a80, %dec_label_pc_10006a74, %dec_label_pc_10006a6c, %dec_label_pc_10006a64, %dec_label_pc_10006a5c, %dec_label_pc_10006a50, %dec_label_pc_10006a3c, %dec_label_pc_10006a30, %dec_label_pc_10006a1c, %dec_label_pc_10006760, %dec_label_pc_10006758, %dec_label_pc_10006750, %dec_label_pc_10006748, %dec_label_pc_10006740, %dec_label_pc_10006738, %dec_label_pc_10006730, %dec_label_pc_10006728, %dec_label_pc_10006720, %dec_label_pc_10006718, %dec_label_pc_10006710, %dec_label_pc_10006700, %dec_label_pc_100066d0, %dec_label_pc_100066a0, %dec_label_pc_10006698, %dec_label_pc_10006688, %dec_label_pc_10006680, %dec_label_pc_10006678, %dec_label_pc_1000665c, %dec_label_pc_1000665c.preheader
  %v0_1000665c = call i32 @function_10005cf4()
  store i32 %v0_1000665c, i32* %r3.global-to-local, align 4
  %v1_10006660 = urem i32 %v0_1000665c, 256
  store i32 %v1_10006660, i32* %r11.global-to-local, align 4
  %v1_10006664 = udiv i32 %v0_1000665c, 16777216
  store i32 %v1_10006664, i32* %r10.global-to-local, align 4
  %v1_10006668 = icmp ult i32 %v1_10006660, 127
  %v3_10006668 = icmp eq i32 %v1_10006660, 127
  store i1 %v1_10006668, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006668, i1* %cr7_eq.global-to-local, align 1
  %v1_1000666c = call i32 @__asm_rlwinm(i32 %v0_1000665c, i32 24, i32 24, i32 31)
  store i32 %v1_1000666c, i32* @r9, align 4
  %v1_10006670 = call i32 @__asm_rlwinm(i32 %v0_1000665c, i32 16, i32 24, i32 31)
  store i32 %v1_10006670, i32* %r3.global-to-local, align 4
  %v0_10006674 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006674, label %dec_label_pc_1000665c, label %dec_label_pc_10006678

dec_label_pc_10006678:                            ; preds = %dec_label_pc_1000665c
  %v0_10006678 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006678 = icmp slt i32 %v0_10006678, 0
  %v3_10006678 = icmp eq i32 %v0_10006678, 0
  store i1 %v1_10006678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006678, label %dec_label_pc_1000665c, label %dec_label_pc_10006680

dec_label_pc_10006680:                            ; preds = %dec_label_pc_10006678
  %v1_10006680 = icmp slt i32 %v0_10006678, 3
  %v3_10006680 = icmp eq i32 %v0_10006678, 3
  store i1 %v1_10006680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006680, label %dec_label_pc_1000665c, label %dec_label_pc_10006688

dec_label_pc_10006688:                            ; preds = %dec_label_pc_10006680
  %v1_10006688 = add i32 %v0_10006678, 241
  %v1_1000668c = urem i32 %v1_10006688, 256
  store i32 %v1_1000668c, i32* %r0.global-to-local, align 4
  %v1_10006690 = icmp eq i32 %v1_1000668c, 0
  %v3_10006690 = icmp eq i32 %v1_1000668c, 1
  store i1 %v1_10006690, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006690, i1* %cr7_eq.global-to-local, align 1
  %tmp100 = or i32 %v1_1000668c, 1
  %tmp101 = icmp eq i32 %tmp100, 1
  br i1 %tmp101, label %dec_label_pc_1000665c, label %dec_label_pc_10006698

dec_label_pc_10006698:                            ; preds = %dec_label_pc_10006688
  %v1_10006698 = icmp slt i32 %v0_10006678, 56
  %v3_10006698 = icmp eq i32 %v0_10006678, 56
  store i1 %v1_10006698, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006698, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006698, label %dec_label_pc_1000665c, label %dec_label_pc_100066a0

dec_label_pc_100066a0:                            ; preds = %dec_label_pc_10006698
  %v1_100066a0 = icmp slt i32 %v0_10006678, 10
  %v3_100066a0 = icmp eq i32 %v0_10006678, 10
  store i1 %v1_100066a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066a0, label %dec_label_pc_1000665c, label %dec_label_pc_100066a8

dec_label_pc_100066a8:                            ; preds = %dec_label_pc_100066a0
  %v1_100066a8 = icmp slt i32 %v0_10006678, 192
  %v3_100066a8 = icmp eq i32 %v0_10006678, 192
  store i1 %v1_100066a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066a8, label %dec_label_pc_10006a08, label %dec_label_pc_100066b0

dec_label_pc_100066b0:                            ; preds = %dec_label_pc_100066a8
  %v1_100066b0 = icmp slt i32 %v0_10006678, 172
  %v3_100066b0 = icmp eq i32 %v0_10006678, 172
  store i1 %v1_100066b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066b0, label %dec_label_pc_10006a14, label %dec_label_pc_100066b8

dec_label_pc_100066b8:                            ; preds = %dec_label_pc_100066b0
  %v1_100066b8 = icmp slt i32 %v0_10006678, 100
  %v3_100066b8 = icmp eq i32 %v0_10006678, 100
  store i1 %v1_100066b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066b8, label %dec_label_pc_10006a28, label %dec_label_pc_100066c0

dec_label_pc_100066c0:                            ; preds = %dec_label_pc_100066b8
  %v1_100066c0 = icmp slt i32 %v0_10006678, 169
  %v3_100066c0 = icmp eq i32 %v0_10006678, 169
  store i1 %v1_100066c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066c0, label %dec_label_pc_10006a3c, label %dec_label_pc_100066c8

dec_label_pc_100066c8:                            ; preds = %dec_label_pc_100066c0
  %v1_100066c8 = icmp slt i32 %v0_10006678, 198
  %v3_100066c8 = icmp eq i32 %v0_10006678, 198
  store i1 %v1_100066c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066c8, label %dec_label_pc_10006a48, label %dec_label_pc_100066d0

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066c8
  %v1_100066d0 = icmp ult i32 %v0_10006678, 223
  %v2_100066d0 = icmp ugt i32 %v0_10006678, 223
  %v3_100066d0 = icmp eq i32 %v0_10006678, 223
  store i1 %v1_100066d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100066d0, label %dec_label_pc_1000665c, label %dec_label_pc_100066d8

dec_label_pc_100066d8:                            ; preds = %dec_label_pc_100066d0
  %v1_100066d8 = icmp slt i32 %v0_10006678, 106
  %v3_100066d8 = icmp eq i32 %v0_10006678, 106
  store i1 %v1_100066d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066d8, label %dec_label_pc_10006a5c, label %dec_label_pc_100066e0

dec_label_pc_100066e0:                            ; preds = %dec_label_pc_100066d8
  %v1_100066e0 = icmp slt i32 %v0_10006678, 150
  %v3_100066e0 = icmp eq i32 %v0_10006678, 150
  store i1 %v1_100066e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066e0, label %dec_label_pc_10006a80, label %dec_label_pc_100066e8

dec_label_pc_100066e8:                            ; preds = %dec_label_pc_100066e0
  %v1_100066e8 = icmp slt i32 %v0_10006678, 49
  %v3_100066e8 = icmp eq i32 %v0_10006678, 49
  store i1 %v1_100066e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066e8, label %dec_label_pc_10006a8c, label %dec_label_pc_100066f0

dec_label_pc_100066f0:                            ; preds = %dec_label_pc_100066e8
  %v1_100066f0 = icmp slt i32 %v0_10006678, 178
  %v3_100066f0 = icmp eq i32 %v0_10006678, 178
  store i1 %v1_100066f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066f0, label %dec_label_pc_10006a98, label %dec_label_pc_100066f8

dec_label_pc_100066f8:                            ; preds = %dec_label_pc_100066f0
  %v1_100066f8 = icmp slt i32 %v0_10006678, 160
  %v3_100066f8 = icmp eq i32 %v0_10006678, 160
  store i1 %v1_100066f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066f8, label %dec_label_pc_10006aa4, label %dec_label_pc_10006700

dec_label_pc_10006700:                            ; preds = %dec_label_pc_100066f8
  %v1_10006700 = add i32 %v0_10006678, 250
  %v1_10006704 = urem i32 %v1_10006700, 256
  store i32 %v1_10006704, i32* %r0.global-to-local, align 4
  %v1_10006708 = icmp eq i32 %v1_10006704, 0
  %v3_10006708 = icmp eq i32 %v1_10006704, 1
  store i1 %v1_10006708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006708, i1* %cr7_eq.global-to-local, align 1
  %tmp102 = or i32 %v1_10006704, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  br i1 %tmp103, label %dec_label_pc_1000665c, label %dec_label_pc_10006710

dec_label_pc_10006710:                            ; preds = %dec_label_pc_10006700
  %v1_10006710 = icmp slt i32 %v0_10006678, 11
  %v3_10006710 = icmp eq i32 %v0_10006678, 11
  store i1 %v1_10006710, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006710, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006710, label %dec_label_pc_1000665c, label %dec_label_pc_10006718

dec_label_pc_10006718:                            ; preds = %dec_label_pc_10006710
  %v1_10006718 = icmp slt i32 %v0_10006678, 21
  %v3_10006718 = icmp eq i32 %v0_10006678, 21
  store i1 %v1_10006718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006718, label %dec_label_pc_1000665c, label %dec_label_pc_10006720

dec_label_pc_10006720:                            ; preds = %dec_label_pc_10006718
  %v1_10006720 = icmp slt i32 %v0_10006678, 22
  %v3_10006720 = icmp eq i32 %v0_10006678, 22
  store i1 %v1_10006720, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006720, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006720, label %dec_label_pc_1000665c, label %dec_label_pc_10006728

dec_label_pc_10006728:                            ; preds = %dec_label_pc_10006720
  %v1_10006728 = icmp slt i32 %v0_10006678, 26
  %v3_10006728 = icmp eq i32 %v0_10006678, 26
  store i1 %v1_10006728, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006728, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006728, label %dec_label_pc_1000665c, label %dec_label_pc_10006730

dec_label_pc_10006730:                            ; preds = %dec_label_pc_10006728
  %v1_10006730 = icmp slt i32 %v0_10006678, 28
  %v3_10006730 = icmp eq i32 %v0_10006678, 28
  store i1 %v1_10006730, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006730, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006730, label %dec_label_pc_1000665c, label %dec_label_pc_10006738

dec_label_pc_10006738:                            ; preds = %dec_label_pc_10006730
  %v1_10006738 = icmp slt i32 %v0_10006678, 29
  %v3_10006738 = icmp eq i32 %v0_10006678, 29
  store i1 %v1_10006738, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006738, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006738, label %dec_label_pc_1000665c, label %dec_label_pc_10006740

dec_label_pc_10006740:                            ; preds = %dec_label_pc_10006738
  %v1_10006740 = icmp slt i32 %v0_10006678, 30
  %v3_10006740 = icmp eq i32 %v0_10006678, 30
  store i1 %v1_10006740, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006740, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006740, label %dec_label_pc_1000665c, label %dec_label_pc_10006748

dec_label_pc_10006748:                            ; preds = %dec_label_pc_10006740
  %v1_10006748 = icmp slt i32 %v0_10006678, 33
  %v3_10006748 = icmp eq i32 %v0_10006678, 33
  store i1 %v1_10006748, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006748, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006748, label %dec_label_pc_1000665c, label %dec_label_pc_10006750

dec_label_pc_10006750:                            ; preds = %dec_label_pc_10006748
  %v1_10006750 = icmp slt i32 %v0_10006678, 55
  %v3_10006750 = icmp eq i32 %v0_10006678, 55
  store i1 %v1_10006750, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006750, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006750, label %dec_label_pc_1000665c, label %dec_label_pc_10006758

dec_label_pc_10006758:                            ; preds = %dec_label_pc_10006750
  %v1_10006758 = icmp slt i32 %v0_10006678, 214
  %v3_10006758 = icmp eq i32 %v0_10006678, 214
  store i1 %v1_10006758, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006758, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006758, label %dec_label_pc_1000665c, label %dec_label_pc_10006760

dec_label_pc_10006760:                            ; preds = %dec_label_pc_10006758
  %v1_10006760 = icmp slt i32 %v0_10006678, 215
  %v3_10006760 = icmp eq i32 %v0_10006678, 215
  store i1 %v1_10006760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006760, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006760, label %dec_label_pc_1000665c, label %dec_label_pc_10006760.dec_label_pc_10006768.loopexit_crit_edge

dec_label_pc_10006760.dec_label_pc_10006768.loopexit_crit_edge: ; preds = %dec_label_pc_10006760
  %v0_1000676c.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10006768

dec_label_pc_10006768:                            ; preds = %dec_label_pc_10006aa4, %dec_label_pc_10006a98, %dec_label_pc_10006a8c, %dec_label_pc_10006a80, %dec_label_pc_10006a74, %dec_label_pc_10006a50, %dec_label_pc_10006a3c, %dec_label_pc_10006a30, %dec_label_pc_10006a1c, %dec_label_pc_10006a48, %dec_label_pc_10006a28, %dec_label_pc_10006a14, %dec_label_pc_10006760.dec_label_pc_10006768.loopexit_crit_edge, %dec_label_pc_10006a08.dec_label_pc_10006768_crit_edge
  %v0_10006774 = phi i32 [ %v0_1000677415, %dec_label_pc_10006a08.dec_label_pc_10006768_crit_edge ], [ %v1_10006670, %dec_label_pc_10006760.dec_label_pc_10006768.loopexit_crit_edge ], [ %v1_10006670, %dec_label_pc_10006a14 ], [ %v1_10006670, %dec_label_pc_10006a28 ], [ %v1_10006670, %dec_label_pc_10006a48 ], [ %v1_10006670, %dec_label_pc_10006a1c ], [ %v1_10006670, %dec_label_pc_10006a30 ], [ %v1_10006670, %dec_label_pc_10006a3c ], [ %v1_10006670, %dec_label_pc_10006a50 ], [ %v1_10006670, %dec_label_pc_10006a74 ], [ %v1_10006670, %dec_label_pc_10006a80 ], [ %v1_10006670, %dec_label_pc_10006a8c ], [ %v1_10006670, %dec_label_pc_10006a98 ], [ %v1_10006670, %dec_label_pc_10006aa4 ]
  %v0_1000676c = phi i32 [ %v0_10006a08, %dec_label_pc_10006a08.dec_label_pc_10006768_crit_edge ], [ %v0_1000676c.pre.pre, %dec_label_pc_10006760.dec_label_pc_10006768.loopexit_crit_edge ], [ %v0_10006a14, %dec_label_pc_10006a14 ], [ %v0_10006a28, %dec_label_pc_10006a28 ], [ %v0_10006a48, %dec_label_pc_10006a48 ], [ %v0_10006a14, %dec_label_pc_10006a1c ], [ %v0_10006a28, %dec_label_pc_10006a30 ], [ %v0_10006a3c, %dec_label_pc_10006a3c ], [ %v0_10006a48, %dec_label_pc_10006a50 ], [ %v0_10006a5c, %dec_label_pc_10006a74 ], [ %v0_10006a80, %dec_label_pc_10006a80 ], [ %v0_10006a8c, %dec_label_pc_10006a8c ], [ %v0_10006a98, %dec_label_pc_10006a98 ], [ %v0_10006aa4, %dec_label_pc_10006aa4 ]
  %v0_10006768 = phi i32 [ %v0_10006768.pre, %dec_label_pc_10006a08.dec_label_pc_10006768_crit_edge ], [ %v0_10006678, %dec_label_pc_10006760.dec_label_pc_10006768.loopexit_crit_edge ], [ 172, %dec_label_pc_10006a14 ], [ 100, %dec_label_pc_10006a28 ], [ 198, %dec_label_pc_10006a48 ], [ 172, %dec_label_pc_10006a1c ], [ 100, %dec_label_pc_10006a30 ], [ 169, %dec_label_pc_10006a3c ], [ 198, %dec_label_pc_10006a50 ], [ 106, %dec_label_pc_10006a74 ], [ 150, %dec_label_pc_10006a80 ], [ 49, %dec_label_pc_10006a8c ], [ 178, %dec_label_pc_10006a98 ], [ 160, %dec_label_pc_10006aa4 ]
  %v1_10006768 = mul i32 %v0_10006768, 16777216
  %v1_1000676c = mul i32 %v0_1000676c, 65536
  %v2_10006770 = or i32 %v1_10006768, %v1_1000676c
  %v1_10006774 = mul i32 %v0_10006774, 256
  %v1_10006778 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006778 = or i32 %v2_10006770, %v1_10006778
  store i32 %v2_10006778, i32* %r0.global-to-local, align 4
  %v0_1000677c = load i32, i32* @r23, align 4
  store i32 %v0_1000677c, i32* @r3, align 4
  %v2_10006780 = or i32 %v2_10006778, %v1_10006774
  store i32 %v2_10006780, i32* %r9.global-to-local, align 4
  store i32 %v2_10006780, i32* @global_var_1001b7c0.136, align 4
  %v0_1000678c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000678c = trunc i32 %v0_1000678c to i16
  store i16 %v1_1000678c, i16* bitcast (i32* @global_var_1001b7ba.137 to i16*), align 4
  %v2_10006790 = call i32 @function_100043cc(i32 %v0_1000677c, i32 20)
  %v3_10006790 = trunc i32 %v2_10006790 to i16
  %v3_10006794 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006794 = trunc i64 %v3_10006794 to i32
  store i32 %v4_10006794, i32* %r9.global-to-local, align 4
  store i16 %v3_10006790, i16* bitcast (i32* @global_var_1001b7ba.137 to i16*), align 4
  %v4_100067a4 = mul nsw i64 %v3_10006794, 1717986919
  %v5_100067a4 = udiv i64 %v4_100067a4, 4294967296
  %v6_100067a4 = trunc i64 %v5_100067a4 to i32
  %tmp = icmp slt i32 %v4_10006794, 0
  %v1_100067a8 = zext i1 %tmp to i32
  %v2_100067a8 = ashr i32 %v4_10006794, 31
  %v3_100067a8 = and i32 %v2_100067a8, -2
  %v4_100067a8 = or i32 %v3_100067a8, %v1_100067a8
  store i32 %v4_100067a8, i32* %r11.global-to-local, align 4
  %v1_100067ac43 = udiv i64 %v4_100067a4, 17179869184
  %v1_100067ac = trunc i64 %v1_100067ac43 to i32
  %v2_100067ac = ashr i32 %v6_100067a4, 31
  %v3_100067ac = and i32 %v2_100067ac, -1073741824
  %v4_100067ac = or i32 %v3_100067ac, %v1_100067ac
  %v2_100067b0 = sub nsw i32 %v4_100067ac, %v4_100067a8
  %v1_100067b4 = mul i32 %v2_100067b0, 10
  %v2_100067b8 = icmp slt i32 %v4_10006794, %v1_100067b4
  %v4_100067b8 = icmp eq i32 %v4_10006794, %v1_100067b4
  store i1 %v2_100067b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100067b8, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_100067b8, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001b7c6.120, align 2
  %v3_100067c8 = load i32, i32* @global_var_1001b7c0.136, align 4
  store i32 %v3_100067c8, i32* %r0.global-to-local, align 4
  %v0_100067cc = load i32, i32* @r24, align 4
  store i32 %v0_100067cc, i32* @r4, align 4
  %v0_100067d0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100067d0 = trunc i32 %v0_100067d0 to i16
  store i16 %v1_100067d0, i16* bitcast (i32* @global_var_1001b7d4.138 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_100067c8, i32* @global_var_1001b7c8.139, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_100067e0 = load i32, i32* @r23, align 4
  store i32 %v0_100067e0, i32* %r3.global-to-local, align 4
  %v4_100067e4 = call i32 @function_10004430(i32 %v0_100067e0, i32 %v0_100067cc, i32 20, i32 20)
  %v5_100067e4 = trunc i32 %v4_100067e4 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_100067e4, i16* bitcast (i32* @global_var_1001b7d4.138 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_100067f4 = load i32, i32* @global_var_1001b7c0.136, align 4
  store i32 %v3_100067f4, i32* %r9.global-to-local, align 4
  %v0_100067f8 = load i32, i32* @r23, align 4
  %v3_100067fc = load i16, i16* @global_var_1001b7c6.120, align 2
  %v4_100067fc = zext i16 %v3_100067fc to i32
  store i32 %v4_100067fc, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006804 = load i32, i32* @global_var_1001b744.110, align 4
  store i32 %v3_10006804, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_1000680c = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v1_1000680c, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268462116, i32* @lr, align 4
  %v6_10006820 = call i32 @function_10009320(i32 %v3_10006804, i32 %v0_100067f8, i32 40, i32 16384, i32 %v1_1000680c, i32 16)
  store i32 %v6_10006820, i32* %r3.global-to-local, align 4
  %v3_10006824 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006824 = trunc i64 %v3_10006824 to i32
  %v1_10006828 = add i32 %v4_10006824, 1
  store i32 %v1_10006828, i32* %r9.global-to-local, align 4
  %v1_1000682c = icmp slt i32 %v1_10006828, 383
  %v3_1000682c = icmp eq i32 %v1_10006828, 383
  store i1 %v1_1000682c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000682c, i1* %cr7_eq.global-to-local, align 1
  %v5_10006830 = sext i32 %v1_10006828 to i64
  store i64 %v5_10006830, i64* %stack_var_-1916, align 8
  %tmp104 = icmp slt i32 %v1_10006828, 384
  br i1 %tmp104, label %dec_label_pc_10006768.dec_label_pc_10006638_crit_edge, label %dec_label_pc_10006838

dec_label_pc_10006768.dec_label_pc_10006638_crit_edge: ; preds = %dec_label_pc_10006768
  %v0_10006638.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006638

dec_label_pc_10006838:                            ; preds = %dec_label_pc_10006768
  %v0_10006838 = load i32, i32* @r31, align 4
  store i32 %v0_10006838, i32* @r25, align 4
  br label %dec_label_pc_1000683c

dec_label_pc_1000683c:                            ; preds = %dec_label_pc_10006618, %dec_label_pc_10006838
  %v0_1000683c = call i32 @function_10008d9c()
  store i32 %v0_1000683c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_1000683c, i32* %r26.global-to-local, align 4
  %v2_10006854 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_100068a0 = zext i8 %tmp56 to i32
  %v1_100068a4 = icmp ult i8 %tmp56, 6
  %v3_100068a4 = icmp eq i8 %tmp56, 6
  %v4_100068ac = zext i16 %tmp55 to i32
  %v1_100068b4 = icmp ult i16 %tmp55, 23
  %v3_100068b4 = icmp eq i16 %tmp55, 23
  %v4_100068c4 = zext i16 %tmp54 to i32
  %v1_100068d4 = and i32 %tmp53, 131072
  %v3_100068d4 = icmp eq i32 %v1_100068d4, 0
  %v1_100068fc = add i32 %tmp52, -1
  %v2_10006900 = icmp slt i32 %v1_100068fc, %tmp51
  %v4_10006900 = icmp eq i32 %v1_100068fc, %tmp51
  %v1_100068dc = and i32 %tmp53, 1048576
  %v3_100068dc = icmp eq i32 %v1_100068dc, 0
  %v1_100068e4 = and i32 %tmp53, 262144
  %v3_100068e4 = icmp eq i32 %v1_100068e4, 0
  %v1_100068ec = and i32 %tmp53, 65536
  %v3_100068ec = icmp eq i32 %v1_100068ec, 0
  %v1_100068bc = icmp ult i16 %tmp55, 2323
  %v3_100068bc = icmp eq i16 %tmp55, 2323
  br label %dec_label_pc_10006848

dec_label_pc_10006848:                            ; preds = %dec_label_pc_100068f4, %dec_label_pc_100068ec, %dec_label_pc_100068e4, %dec_label_pc_100068c4, %dec_label_pc_100068bc, %dec_label_pc_100068a0, %dec_label_pc_1000688c, %dec_label_pc_100068dc, %dec_label_pc_100068d0, %dec_label_pc_10006884, %dec_label_pc_100079e4, %dec_label_pc_1000683c
  %v1_10006850 = phi i32 [ %v0_1000683c, %dec_label_pc_1000683c ], [ %v1_10006850.pre.pre, %dec_label_pc_100079e4 ], [ %v0_10006878, %dec_label_pc_10006884 ], [ %v0_10006878, %dec_label_pc_100068d0 ], [ %v0_10006878, %dec_label_pc_100068dc ], [ %v0_10006878, %dec_label_pc_1000688c ], [ %v0_10006878, %dec_label_pc_100068a0 ], [ %v0_10006878, %dec_label_pc_100068bc ], [ %v0_10006878, %dec_label_pc_100068c4 ], [ %v0_10006878, %dec_label_pc_100068e4 ], [ %v0_10006878, %dec_label_pc_100068ec ], [ %v0_10006878, %dec_label_pc_100068f4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10006850 = inttoptr i32 %v1_10006850 to i32*
  store i32 0, i32* %v2_10006850, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_10006860 = load i32, i32* @global_var_1001b744.110, align 4
  store i32 %v3_10006860, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268462192, i32* @lr, align 4
  %v6_1000686c = call i32 @function_100092a8(i32 %v3_10006860, i32 %v2_10006854, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_1000686c, i32* %r3.global-to-local, align 4
  %tmp105 = icmp slt i32 %v6_1000686c, 1
  br i1 %tmp105, label %dec_label_pc_10006abc, label %dec_label_pc_10006878

dec_label_pc_10006878:                            ; preds = %dec_label_pc_10006848
  %v0_10006878 = load i32, i32* %r26.global-to-local, align 4
  %v1_10006878 = inttoptr i32 %v0_10006878 to i32*
  %v2_10006878 = load i32, i32* %v1_10006878, align 4
  store i32 %v2_10006878, i32* %r0.global-to-local, align 4
  %v1_1000687c = icmp slt i32 %v2_10006878, 11
  %v3_1000687c = icmp eq i32 %v2_10006878, 11
  store i1 %v1_1000687c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000687c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000687c, label %dec_label_pc_10006abc, label %dec_label_pc_10006884

dec_label_pc_10006884:                            ; preds = %dec_label_pc_10006878
  %v1_10006884 = icmp ult i32 %v6_1000686c, 39
  %v3_10006884 = icmp eq i32 %v6_1000686c, 39
  store i1 %v1_10006884, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006884, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v6_1000686c, 40
  br i1 %tmp106, label %dec_label_pc_10006848, label %dec_label_pc_1000688c

dec_label_pc_1000688c:                            ; preds = %dec_label_pc_10006884
  %v3_10006890 = load i32, i32* @global_var_1001b718.16, align 4
  store i32 %v3_10006890, i32* %r0.global-to-local, align 4
  store i32 %tmp57, i32* %r9.global-to-local, align 4
  %v2_10006898 = icmp slt i32 %tmp57, %v3_10006890
  %v4_10006898 = icmp eq i32 %tmp57, %v3_10006890
  store i1 %v2_10006898, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006898, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006898, label %dec_label_pc_100068a0, label %dec_label_pc_10006848

dec_label_pc_100068a0:                            ; preds = %dec_label_pc_1000688c
  store i32 %v4_100068a0, i32* %r0.global-to-local, align 4
  store i1 %v1_100068a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068a4, label %dec_label_pc_100068ac, label %dec_label_pc_10006848

dec_label_pc_100068ac:                            ; preds = %dec_label_pc_100068a0
  store i32 %v4_100068ac, i32* %r8.global-to-local, align 4
  store i32 %v4_100068ac, i32* %r0.global-to-local, align 4
  store i1 %v1_100068b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068b4, label %dec_label_pc_100068c4, label %dec_label_pc_100068bc

dec_label_pc_100068bc:                            ; preds = %dec_label_pc_100068ac
  store i1 %v1_100068bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068bc, label %dec_label_pc_100068c4, label %dec_label_pc_10006848

dec_label_pc_100068c4:                            ; preds = %dec_label_pc_100068bc, %dec_label_pc_100068ac
  store i32 %v4_100068c4, i32* %r0.global-to-local, align 4
  %v1_100068c8 = load i32, i32* @r22, align 4
  %v2_100068c8 = icmp slt i32 %v4_100068c4, %v1_100068c8
  %v4_100068c8 = icmp eq i32 %v4_100068c4, %v1_100068c8
  store i1 %v2_100068c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100068c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100068c8, label %dec_label_pc_100068d0, label %dec_label_pc_10006848

dec_label_pc_100068d0:                            ; preds = %dec_label_pc_100068c4
  store i32 %tmp53, i32* %r0.global-to-local, align 4
  store i32 %v1_100068d4, i32* %r10.global-to-local, align 4
  br i1 %v3_100068d4, label %dec_label_pc_10006848, label %dec_label_pc_100068dc

dec_label_pc_100068dc:                            ; preds = %dec_label_pc_100068d0
  store i32 %v1_100068dc, i32* %r11.global-to-local, align 4
  br i1 %v3_100068dc, label %dec_label_pc_10006848, label %dec_label_pc_100068e4

dec_label_pc_100068e4:                            ; preds = %dec_label_pc_100068dc
  store i32 %v1_100068e4, i32* %r9.global-to-local, align 4
  br i1 %v3_100068e4, label %dec_label_pc_100068ec, label %dec_label_pc_10006848

dec_label_pc_100068ec:                            ; preds = %dec_label_pc_100068e4
  store i32 %v1_100068ec, i32* %r10.global-to-local, align 4
  br i1 %v3_100068ec, label %dec_label_pc_100068f4, label %dec_label_pc_10006848

dec_label_pc_100068f4:                            ; preds = %dec_label_pc_100068ec
  store i32 %tmp52, i32* %r9.global-to-local, align 4
  store i32 %tmp51, i32* %r0.global-to-local, align 4
  store i32 %v1_100068fc, i32* %r10.global-to-local, align 4
  store i1 %v2_10006900, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006900, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006900, label %dec_label_pc_10006908, label %dec_label_pc_10006848

dec_label_pc_10006908:                            ; preds = %dec_label_pc_100068f4
  %v0_10006908 = load i32, i32* @r31, align 4
  %v1_10006908 = icmp slt i32 %v0_10006908, 255
  %v2_10006908 = icmp sgt i32 %v0_10006908, 255
  %v3_10006908 = icmp eq i32 %v0_10006908, 255
  store i1 %v1_10006908, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006908, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006908, label %dec_label_pc_10006abc, label %dec_label_pc_10006910

dec_label_pc_10006910:                            ; preds = %dec_label_pc_10006908
  %v3_10006918 = load i32, i32* @global_var_1001b740.109, align 4
  store i32 %v3_10006918, i32* %r11.global-to-local, align 4
  %v1_1000691c = mul i32 %v0_10006908, 256
  store i32 %v1_1000691c, i32* %r9.global-to-local, align 4
  %v2_10006920 = mul i32 %v0_10006908, 288
  store i32 %v2_10006920, i32* %r0.global-to-local, align 4
  %v2_10006924 = add i32 %v3_10006918, %v2_10006920
  store i32 %v2_10006924, i32* @r3, align 4
  %v1_10006928 = add i32 %v2_10006924, 12
  %v2_10006928 = inttoptr i32 %v1_10006928 to i32*
  %v3_10006928 = load i32, i32* %v2_10006928, align 4
  store i32 %v3_10006928, i32* %r9.global-to-local, align 4
  %v1_1000692c = icmp slt i32 %v3_10006928, 0
  %v3_1000692c = icmp eq i32 %v3_10006928, 0
  store i1 %v1_1000692c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000692c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000692c, label %dec_label_pc_100079e0, label %dec_label_pc_10006934

dec_label_pc_10006934:                            ; preds = %dec_label_pc_10006910
  %v1_10006934 = sub i32 256, %v0_10006908
  store i32 %v1_10006934, i32* %r11.global-to-local, align 4
  store i32 %v0_10006908, i32* %r29.global-to-local, align 4
  store i32 %v1_10006934, i32* %ctr.global-to-local, align 4
  %v1_10006940 = add i32 %v2_10006924, 288
  store i32 %v1_10006940, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006944

dec_label_pc_10006944:                            ; preds = %dec_label_pc_1000694c, %dec_label_pc_10006934
  %v0_1000694c = phi i32 [ %v1_10006954, %dec_label_pc_1000694c ], [ %v1_10006940, %dec_label_pc_10006934 ]
  %v0_10006948 = phi i32 [ %v1_10006948, %dec_label_pc_1000694c ], [ %v1_10006934, %dec_label_pc_10006934 ]
  %v0_10006944 = phi i32 [ %v1_10006944, %dec_label_pc_1000694c ], [ %v0_10006908, %dec_label_pc_10006934 ]
  %v1_10006944 = add i32 %v0_10006944, 1
  store i32 %v1_10006944, i32* @r29, align 4
  %v1_10006948 = add i32 %v0_10006948, -1
  store i32 %v1_10006948, i32* %ctr.global-to-local, align 4
  %v2_10006948 = icmp eq i32 %v1_10006948, 0
  br i1 %v2_10006948, label %dec_label_pc_10006abc, label %dec_label_pc_1000694c

dec_label_pc_1000694c:                            ; preds = %dec_label_pc_10006944
  %v1_1000694c = add i32 %v0_1000694c, 12
  %v2_1000694c = inttoptr i32 %v1_1000694c to i32*
  %v3_1000694c = load i32, i32* %v2_1000694c, align 4
  store i32 %v3_1000694c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000694c, i32* @r3, align 4
  %v1_10006954 = add i32 %v0_1000694c, 288
  store i32 %v1_10006954, i32* %r9.global-to-local, align 4
  %v1_10006958 = icmp slt i32 %v3_1000694c, 0
  %v3_10006958 = icmp eq i32 %v3_1000694c, 0
  store i1 %v1_10006958, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006958, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006958, label %dec_label_pc_100079e4, label %dec_label_pc_10006944

dec_label_pc_10006a00:                            ; preds = %dec_label_pc_100063c8, %dec_label_pc_100079d0
  %v0_10006a04 = call i32 @function_10009e10()
  store i32 %v0_10006a04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006a08

dec_label_pc_10006a08:                            ; preds = %dec_label_pc_100066a8, %dec_label_pc_10006a00
  %v0_1000677415 = phi i32 [ %v0_10006a04, %dec_label_pc_10006a00 ], [ %v1_10006670, %dec_label_pc_100066a8 ]
  %v0_10006a08 = load i32, i32* @r9, align 4
  %v1_10006a08 = icmp slt i32 %v0_10006a08, 168
  %v3_10006a08 = icmp eq i32 %v0_10006a08, 168
  store i1 %v1_10006a08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a08, label %dec_label_pc_1000665c.preheader, label %dec_label_pc_10006a08.dec_label_pc_10006768_crit_edge

dec_label_pc_10006a08.dec_label_pc_10006768_crit_edge: ; preds = %dec_label_pc_10006a08
  %v0_10006768.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006768

dec_label_pc_10006a14:                            ; preds = %dec_label_pc_100066b0
  %v0_10006a14 = load i32, i32* @r9, align 4
  %v1_10006a14 = icmp ult i32 %v0_10006a14, 15
  %v3_10006a14 = icmp eq i32 %v0_10006a14, 15
  store i1 %v1_10006a14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a14, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = icmp ult i32 %v0_10006a14, 16
  br i1 %tmp107, label %dec_label_pc_10006768, label %dec_label_pc_10006a1c

dec_label_pc_10006a1c:                            ; preds = %dec_label_pc_10006a14
  %v1_10006a1c = icmp ult i32 %v0_10006a14, 31
  %v3_10006a1c = icmp eq i32 %v0_10006a14, 31
  store i1 %v1_10006a1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a1c, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_10006a14, 32
  br i1 %tmp108, label %dec_label_pc_1000665c, label %dec_label_pc_10006768

dec_label_pc_10006a28:                            ; preds = %dec_label_pc_100066b8
  %v0_10006a28 = load i32, i32* @r9, align 4
  %v1_10006a28 = icmp ult i32 %v0_10006a28, 63
  %v3_10006a28 = icmp eq i32 %v0_10006a28, 63
  store i1 %v1_10006a28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a28, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = icmp ult i32 %v0_10006a28, 64
  br i1 %tmp109, label %dec_label_pc_10006768, label %dec_label_pc_10006a30

dec_label_pc_10006a30:                            ; preds = %dec_label_pc_10006a28
  %v1_10006a30 = icmp ult i32 %v0_10006a28, 126
  %v3_10006a30 = icmp eq i32 %v0_10006a28, 126
  store i1 %v1_10006a30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a30, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = icmp ult i32 %v0_10006a28, 127
  br i1 %tmp110, label %dec_label_pc_1000665c, label %dec_label_pc_10006768

dec_label_pc_10006a3c:                            ; preds = %dec_label_pc_100066c0
  %v0_10006a3c = load i32, i32* @r9, align 4
  %v1_10006a3c = icmp slt i32 %v0_10006a3c, 255
  %v3_10006a3c = icmp eq i32 %v0_10006a3c, 255
  store i1 %v1_10006a3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a3c, label %dec_label_pc_1000665c, label %dec_label_pc_10006768

dec_label_pc_10006a48:                            ; preds = %dec_label_pc_100066c8
  %v0_10006a48 = load i32, i32* @r9, align 4
  %v1_10006a48 = icmp ult i32 %v0_10006a48, 17
  %v3_10006a48 = icmp eq i32 %v0_10006a48, 17
  store i1 %v1_10006a48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a48, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp ult i32 %v0_10006a48, 18
  br i1 %tmp111, label %dec_label_pc_10006768, label %dec_label_pc_10006a50

dec_label_pc_10006a50:                            ; preds = %dec_label_pc_10006a48
  %v1_10006a50 = icmp eq i32 %v0_10006a48, 18
  %v3_10006a50 = icmp eq i32 %v0_10006a48, 19
  store i1 %v1_10006a50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a50, i1* %cr7_eq.global-to-local, align 1
  %tmp112 = icmp ult i32 %v0_10006a48, 20
  br i1 %tmp112, label %dec_label_pc_1000665c, label %dec_label_pc_10006768

dec_label_pc_10006a5c:                            ; preds = %dec_label_pc_100066d8
  %v0_10006a5c = load i32, i32* @r9, align 4
  %v1_10006a5c = icmp slt i32 %v0_10006a5c, 186
  %v3_10006a5c = icmp eq i32 %v0_10006a5c, 186
  store i1 %v1_10006a5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a5c, label %dec_label_pc_1000665c, label %dec_label_pc_10006a64

dec_label_pc_10006a64:                            ; preds = %dec_label_pc_10006a5c
  %v1_10006a64 = icmp slt i32 %v0_10006a5c, 187
  %v3_10006a64 = icmp eq i32 %v0_10006a5c, 187
  store i1 %v1_10006a64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a64, label %dec_label_pc_1000665c, label %dec_label_pc_10006a6c

dec_label_pc_10006a6c:                            ; preds = %dec_label_pc_10006a64
  %v1_10006a6c = icmp slt i32 %v0_10006a5c, 185
  %v3_10006a6c = icmp eq i32 %v0_10006a5c, 185
  store i1 %v1_10006a6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a6c, label %dec_label_pc_1000665c, label %dec_label_pc_10006a74

dec_label_pc_10006a74:                            ; preds = %dec_label_pc_10006a6c
  %v1_10006a74 = icmp slt i32 %v0_10006a5c, 184
  %v3_10006a74 = icmp eq i32 %v0_10006a5c, 184
  store i1 %v1_10006a74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a74, label %dec_label_pc_1000665c, label %dec_label_pc_10006768

dec_label_pc_10006a80:                            ; preds = %dec_label_pc_100066e0
  %v0_10006a80 = load i32, i32* @r9, align 4
  %v1_10006a80 = icmp slt i32 %v0_10006a80, 31
  %v3_10006a80 = icmp eq i32 %v0_10006a80, 31
  store i1 %v1_10006a80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a80, label %dec_label_pc_1000665c, label %dec_label_pc_10006768

dec_label_pc_10006a8c:                            ; preds = %dec_label_pc_100066e8
  %v0_10006a8c = load i32, i32* @r9, align 4
  %v1_10006a8c = icmp slt i32 %v0_10006a8c, 51
  %v3_10006a8c = icmp eq i32 %v0_10006a8c, 51
  store i1 %v1_10006a8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a8c, label %dec_label_pc_1000665c, label %dec_label_pc_10006768

dec_label_pc_10006a98:                            ; preds = %dec_label_pc_100066f0
  %v0_10006a98 = load i32, i32* @r9, align 4
  %v1_10006a98 = icmp slt i32 %v0_10006a98, 62
  %v3_10006a98 = icmp eq i32 %v0_10006a98, 62
  store i1 %v1_10006a98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a98, label %dec_label_pc_1000665c, label %dec_label_pc_10006768

dec_label_pc_10006aa4:                            ; preds = %dec_label_pc_100066f8
  %v0_10006aa4 = load i32, i32* @r9, align 4
  %v1_10006aa4 = icmp slt i32 %v0_10006aa4, 13
  %v3_10006aa4 = icmp eq i32 %v0_10006aa4, 13
  store i1 %v1_10006aa4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006aa4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006aa4, label %dec_label_pc_1000665c, label %dec_label_pc_10006768

dec_label_pc_10006abc:                            ; preds = %dec_label_pc_10006908, %dec_label_pc_10006878, %dec_label_pc_10006848, %dec_label_pc_10006944
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006ad4133 = load i32, i32* @r1, align 4
  %v3_10006ad4134 = add i32 %v2_10006ad4133, 64
  %v4_10006ad4135 = inttoptr i32 %v3_10006ad4134 to i32*
  store i32 0, i32* %v4_10006ad4135, align 4
  %v0_10006ad8136 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006ad8137 = add i32 %v0_10006ad8136, -1
  store i32 %v1_10006ad8137, i32* %ctr.global-to-local, align 4
  %v2_10006ad8138 = icmp eq i32 %v1_10006ad8137, 0
  br i1 %v2_10006ad8138, label %dec_label_pc_10006adc, label %dec_label_pc_10006acc.dec_label_pc_10006acc_crit_edge

dec_label_pc_10006acc.dec_label_pc_10006acc_crit_edge: ; preds = %dec_label_pc_10006abc, %dec_label_pc_10006acc.dec_label_pc_10006acc_crit_edge
  %v0_10006acc.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006ad4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006acc = add i32 %v0_10006acc.pre, 64
  store i32 %v1_10006acc, i32* %r11.global-to-local, align 4
  %v1_10006ad0 = add i32 %v0_10006acc.pre, 4
  store i32 %v1_10006ad0, i32* %r9.global-to-local, align 4
  %v2_10006ad4 = load i32, i32* @r1, align 4
  %v3_10006ad4 = add i32 %v2_10006ad4, %v1_10006acc
  %v4_10006ad4 = inttoptr i32 %v3_10006ad4 to i32*
  store i32 %v0_10006ad4.pre, i32* %v4_10006ad4, align 4
  %v0_10006ad8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006ad8 = add i32 %v0_10006ad8, -1
  store i32 %v1_10006ad8, i32* %ctr.global-to-local, align 4
  %v2_10006ad8 = icmp eq i32 %v1_10006ad8, 0
  br i1 %v2_10006ad8, label %dec_label_pc_10006adc, label %dec_label_pc_10006acc.dec_label_pc_10006acc_crit_edge

dec_label_pc_10006adc:                            ; preds = %dec_label_pc_10006acc.dec_label_pc_10006acc_crit_edge, %dec_label_pc_10006abc
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 192, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006af4127 = load i32, i32* @r1, align 4
  %v3_10006af4128 = add i32 %v2_10006af4127, 192
  %v4_10006af4129 = inttoptr i32 %v3_10006af4128 to i32*
  store i32 0, i32* %v4_10006af4129, align 4
  %v0_10006af8130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006af8131 = add i32 %v0_10006af8130, -1
  store i32 %v1_10006af8131, i32* %ctr.global-to-local, align 4
  %v2_10006af8132 = icmp eq i32 %v1_10006af8131, 0
  br i1 %v2_10006af8132, label %dec_label_pc_10006afc, label %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge

dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge: ; preds = %dec_label_pc_10006adc, %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge
  %v0_10006aec.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006af4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006aec = add i32 %v0_10006aec.pre, 192
  store i32 %v1_10006aec, i32* %r11.global-to-local, align 4
  %v1_10006af0 = add i32 %v0_10006aec.pre, 4
  store i32 %v1_10006af0, i32* %r9.global-to-local, align 4
  %v2_10006af4 = load i32, i32* @r1, align 4
  %v3_10006af4 = add i32 %v2_10006af4, %v1_10006aec
  %v4_10006af4 = inttoptr i32 %v3_10006af4 to i32*
  store i32 %v0_10006af4.pre, i32* %v4_10006af4, align 4
  %v0_10006af8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006af8 = add i32 %v0_10006af8, -1
  store i32 %v1_10006af8, i32* %ctr.global-to-local, align 4
  %v2_10006af8 = icmp eq i32 %v1_10006af8, 0
  br i1 %v2_10006af8, label %dec_label_pc_10006afc, label %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge

dec_label_pc_10006afc:                            ; preds = %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge, %dec_label_pc_10006adc
  %v0_10006afc = load i32, i32* %r0.global-to-local, align 4
  %v5_10006afc = sext i32 %v0_10006afc to i64
  store i64 %v5_10006afc, i64* %stack_var_-1916, align 8
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v2_10006c30 = ptrtoint i32* %stack_var_-1872 to i32
  %v2_10006c34 = ptrtoint i32* %stack_var_-1744 to i32
  %v2_10006c3c = ptrtoint i32* %stack_var_-1908 to i32
  %v2_10007828 = ptrtoint i32* %stack_var_-1920 to i32
  %v2_1000782c = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_10006b78

dec_label_pc_10006b18:                            ; preds = %dec_label_pc_10006b78
  %v3_10006b18 = load i32, i32* @global_var_1001b73c.102, align 4
  store i32 %v3_10006b18, i32* %r0.global-to-local, align 4
  %v1_10006b1c = add i32 %v2_10006b90, 8
  %v2_10006b1c = inttoptr i32 %v1_10006b1c to i32*
  %v3_10006b1c = load i32, i32* %v2_10006b1c, align 4
  store i32 %v3_10006b1c, i32* %r9.global-to-local, align 4
  %v2_10006b20 = sub i32 %v3_10006b18, %v3_10006b1c
  store i32 %v2_10006b20, i32* %r0.global-to-local, align 4
  %v2_10006b24 = icmp ult i32 %v2_10006b20, 30
  %v3_10006b24 = icmp ugt i32 %v2_10006b20, 30
  %v4_10006b24 = icmp eq i32 %v2_10006b20, 30
  store i1 %v2_10006b24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006b24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b24, label %dec_label_pc_10006bc0, label %dec_label_pc_10006b2c

dec_label_pc_10006b2c:                            ; preds = %dec_label_pc_10006ba8, %dec_label_pc_10006b18
  %v1_10006b2c = icmp slt i32 %v3_10006b94, 1
  store i1 %v1_10006b2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b98, i1* %cr7_eq.global-to-local, align 1
  %v1_10006d84 = add i32 %v2_10006b90, 4
  %v2_10006d84 = inttoptr i32 %v1_10006d84 to i32*
  %v3_10006d84 = load i32, i32* %v2_10006d84, align 4
  store i32 %v3_10006d84, i32* %r3.global-to-local, align 4
  br i1 %v3_10006b98, label %dec_label_pc_10006d84, label %dec_label_pc_10006b34

dec_label_pc_10006b34:                            ; preds = %dec_label_pc_10006b2c
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006b3c = call i32 @__asm_rlwinm(i32 %v3_10006d84, i32 29, i32 3, i32 29)
  %v0_10006b40 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006b40 = icmp slt i32 %v0_10006b40, %v3_10006d84
  %v4_10006b40 = icmp eq i32 %v0_10006b40, %v3_10006d84
  store i1 %v2_10006b40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006b40, i1* %cr7_eq.global-to-local, align 1
  %v1_10006b44 = load i32, i32* @r14, align 4
  %v2_10006b44 = add i32 %v1_10006b44, %v1_10006b3c
  store i32 %v2_10006b44, i32* %r11.global-to-local, align 4
  %v1_10006b48 = urem i32 %v3_10006d84, 32
  store i32 %v1_10006b48, i32* %r10.global-to-local, align 4
  %v1_10006b4c = add i32 %v2_10006b44, 56
  %v2_10006b4c = inttoptr i32 %v1_10006b4c to i32*
  %v3_10006b4c = load i32, i32* %v2_10006b4c, align 4
  %v0_10006b50 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006b50 = shl i32 %v0_10006b50, %v1_10006b48
  store i32 %v3_10006b50, i32* %r0.global-to-local, align 4
  %v2_10006b54 = or i32 %v3_10006b50, %v3_10006b4c
  store i32 %v2_10006b54, i32* %r9.global-to-local, align 4
  store i32 %v2_10006b54, i32* %v2_10006b4c, align 4
  br i1 %v2_10006b40, label %dec_label_pc_10006b60, label %dec_label_pc_10006b64

dec_label_pc_10006b60:                            ; preds = %dec_label_pc_10006b34
  store i32 %v3_10006d84, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006b64

dec_label_pc_10006b64:                            ; preds = %dec_label_pc_10006d84, %dec_label_pc_10006b34, %dec_label_pc_10006ba0, %dec_label_pc_10006dac, %dec_label_pc_10006d78, %dec_label_pc_10006b60
  %v3_10006b64 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006b64 = trunc i64 %v3_10006b64 to i32
  store i32 %v4_10006b64, i32* %r9.global-to-local, align 4
  %v1_10006b68 = add i32 %v4_10006b64, 1
  store i32 %v1_10006b68, i32* %r0.global-to-local, align 4
  %v1_10006b6c = icmp slt i32 %v1_10006b68, 255
  %v2_10006b6c = icmp sgt i32 %v1_10006b68, 255
  %v3_10006b6c = icmp eq i32 %v1_10006b68, 255
  store i1 %v1_10006b6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b6c, i1* %cr7_eq.global-to-local, align 1
  %v5_10006b70 = sext i32 %v1_10006b68 to i64
  store i64 %v5_10006b70, i64* %stack_var_-1916, align 8
  br i1 %v2_10006b6c, label %dec_label_pc_10006c10, label %dec_label_pc_10006b78

dec_label_pc_10006b78:                            ; preds = %dec_label_pc_10006bf4, %dec_label_pc_10006b64, %dec_label_pc_10006afc
  %v0_10006b7c = phi i32 [ 0, %dec_label_pc_10006afc ], [ %v1_10006b68, %dec_label_pc_10006b64 ], [ %v1_10006c00, %dec_label_pc_10006bf4 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10006b80 = load i32, i32* @global_var_1001b740.109, align 4
  store i32 %v3_10006b80, i32* %r9.global-to-local, align 4
  %v2_10006b88 = mul i32 %v0_10006b7c, 288
  store i32 %v2_10006b88, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10006b90 = add i32 %v3_10006b80, %v2_10006b88
  store i32 %v2_10006b90, i32* @r29, align 4
  %v1_10006b94 = add i32 %v2_10006b90, 12
  %v2_10006b94 = inttoptr i32 %v1_10006b94 to i32*
  %v3_10006b94 = load i32, i32* %v2_10006b94, align 4
  store i32 %v3_10006b94, i32* %r10.global-to-local, align 4
  %v1_10006b98 = icmp eq i32 %v3_10006b94, 0
  %v2_10006b98 = icmp ugt i32 %v3_10006b94, 1
  %v3_10006b98 = icmp eq i32 %v3_10006b94, 1
  store i1 %v1_10006b98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006b98, label %dec_label_pc_10006b18, label %dec_label_pc_10006ba0

dec_label_pc_10006ba0:                            ; preds = %dec_label_pc_10006b78
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10006b98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10006b98, label %dec_label_pc_10006b64, label %dec_label_pc_10006ba8

dec_label_pc_10006ba8:                            ; preds = %dec_label_pc_10006ba0
  %v3_10006ba8 = load i32, i32* @global_var_1001b73c.102, align 4
  store i32 %v3_10006ba8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10006bb0 = add i32 %v2_10006b90, 8
  %v2_10006bb0 = inttoptr i32 %v1_10006bb0 to i32*
  %v3_10006bb0 = load i32, i32* %v2_10006bb0, align 4
  store i32 %v3_10006bb0, i32* %r9.global-to-local, align 4
  %v2_10006bb4 = sub i32 %v3_10006ba8, %v3_10006bb0
  store i32 %v2_10006bb4, i32* %r0.global-to-local, align 4
  %v2_10006bb8 = icmp ult i32 %v2_10006bb4, 5
  %v3_10006bb8 = icmp ugt i32 %v2_10006bb4, 5
  %v4_10006bb8 = icmp eq i32 %v2_10006bb4, 5
  store i1 %v2_10006bb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006bb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006bb8, label %dec_label_pc_10006bc0, label %dec_label_pc_10006b2c

dec_label_pc_10006bc0:                            ; preds = %dec_label_pc_10006ba8, %dec_label_pc_10006b18
  %v1_10006bc0 = add i32 %v2_10006b90, 4
  %v2_10006bc0 = inttoptr i32 %v1_10006bc0 to i32*
  %v3_10006bc0 = load i32, i32* %v2_10006bc0, align 4
  store i32 %v3_10006bc0, i32* %r3.global-to-local, align 4
  store i32 268463048, i32* @lr, align 4
  %v0_10006bc4 = call i32 @function_10008680()
  store i32 %v0_10006bc4, i32* %r3.global-to-local, align 4
  %v0_10006bc8 = load i32, i32* @r29, align 4
  %v1_10006bc8 = add i32 %v0_10006bc8, 12
  %v2_10006bc8 = inttoptr i32 %v1_10006bc8 to i32*
  %v3_10006bc8 = load i32, i32* %v2_10006bc8, align 4
  store i32 %v3_10006bc8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10006bd0 = icmp ult i32 %v3_10006bc8, 2
  %v3_10006bd0 = icmp eq i32 %v3_10006bc8, 2
  store i1 %v1_10006bd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bd0, i1* %cr7_eq.global-to-local, align 1
  %v2_10006bd4 = add i32 %v0_10006bc8, 4
  %v3_10006bd4 = inttoptr i32 %v2_10006bd4 to i32*
  store i32 -1, i32* %v3_10006bd4, align 4
  %tmp114 = icmp ult i32 %v3_10006bc8, 3
  br i1 %tmp114, label %dec_label_pc_10006d78, label %dec_label_pc_10006bdc

dec_label_pc_10006bdc:                            ; preds = %dec_label_pc_10006bc0
  %v0_10006bdc = load i32, i32* @r29, align 4
  %v1_10006bdc = add i32 %v0_10006bdc, 284
  %v2_10006bdc = inttoptr i32 %v1_10006bdc to i8*
  %v3_10006bdc = load i8, i8* %v2_10006bdc, align 1
  %v4_10006bdc = zext i8 %v3_10006bdc to i32
  %v1_10006be0 = add nuw nsw i32 %v4_10006bdc, 1
  %v1_10006be4 = urem i32 %v1_10006be0, 256
  store i32 %v1_10006be4, i32* %r9.global-to-local, align 4
  %v1_10006be8 = icmp ult i32 %v1_10006be4, 10
  %v3_10006be8 = icmp eq i32 %v1_10006be4, 10
  store i1 %v1_10006be8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006be8, i1* %cr7_eq.global-to-local, align 1
  %v1_10006bec = trunc i32 %v1_10006be0 to i8
  store i8 %v1_10006bec, i8* %v2_10006bdc, align 1
  %v0_10006bf0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006bf0, label %dec_label_pc_10006d78, label %dec_label_pc_10006bf4

dec_label_pc_10006bf4:                            ; preds = %dec_label_pc_10006bdc
  %v0_10006bf4 = load i32, i32* @r29, align 4
  store i32 %v0_10006bf4, i32* @r3, align 4
  store i32 268463100, i32* @lr, align 4
  %v0_10006bf8 = call i32 @function_10005fd4()
  store i32 %v0_10006bf8, i32* %r3.global-to-local, align 4
  %v3_10006bfc = load i64, i64* %stack_var_-1916, align 8
  %v4_10006bfc = trunc i64 %v3_10006bfc to i32
  store i32 %v4_10006bfc, i32* %r9.global-to-local, align 4
  %v1_10006c00 = add i32 %v4_10006bfc, 1
  store i32 %v1_10006c00, i32* %r0.global-to-local, align 4
  %v1_10006c04 = icmp slt i32 %v1_10006c00, 255
  %v3_10006c04 = icmp eq i32 %v1_10006c00, 255
  store i1 %v1_10006c04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c04, i1* %cr7_eq.global-to-local, align 1
  %v5_10006c08 = sext i32 %v1_10006c00 to i64
  store i64 %v5_10006c08, i64* %stack_var_-1916, align 8
  %tmp115 = icmp slt i32 %v1_10006c00, 256
  br i1 %tmp115, label %dec_label_pc_10006b78, label %dec_label_pc_10006c10

dec_label_pc_10006c10:                            ; preds = %dec_label_pc_10006bf4, %dec_label_pc_10006b64
  %v0_10006c10 = load i32, i32* %r30.global-to-local, align 4
  %v1_10006c10 = load i32, i32* @r31, align 4
  %v2_10006c10 = icmp slt i32 %v0_10006c10, %v1_10006c10
  %v4_10006c10 = icmp eq i32 %v0_10006c10, %v1_10006c10
  store i1 %v2_10006c10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006c10, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10006c10, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_10006c10, label %dec_label_pc_10006c2c, label %dec_label_pc_10006c30

dec_label_pc_10006c2c:                            ; preds = %dec_label_pc_10006c10
  store i32 %v1_10006c10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c30

dec_label_pc_10006c30:                            ; preds = %dec_label_pc_10006c10, %dec_label_pc_10006c2c
  %v0_10006c40 = phi i32 [ %v0_10006c10, %dec_label_pc_10006c10 ], [ %v1_10006c10, %dec_label_pc_10006c2c ]
  store i32 %v2_10006c34, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_10006c3c, i32* %r7.global-to-local, align 4
  %v1_10006c40 = add i32 %v0_10006c40, 1
  store i32 %v1_10006c40, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006c48.141 to i32), i32* @lr, align 4
  %v5_10006c44 = call i32 @function_10008948(i32 %v1_10006c40, i32 %v2_10006c30, i32 %v2_10006c34, i32 0, i32 %v2_10006c3c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006c50.142 to i32), i32* @lr, align 4
  %v0_10006c4c = call i32 @function_10008a50()
  store i32 %v0_10006c4c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006c4c, i32* @global_var_1001b73c.102, align 4
  %v0_10006c58 = load i32, i32* %r30.global-to-local, align 4
  %v5_10006c58 = sext i32 %v0_10006c58 to i64
  store i64 %v5_10006c58, i64* %stack_var_-1916, align 8
  br label %dec_label_pc_10006c74

dec_label_pc_10006c60:                            ; preds = %dec_label_pc_10006cd0, %dec_label_pc_100076f0, %dec_label_pc_10006cb4, %dec_label_pc_10006c74, %dec_label_pc_100079a4, %dec_label_pc_100078d8, %dec_label_pc_10007724
  %v3_10006c60 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006c60 = trunc i64 %v3_10006c60 to i32
  store i32 %v4_10006c60, i32* %r9.global-to-local, align 4
  %v1_10006c64 = add i32 %v4_10006c60, 1
  store i32 %v1_10006c64, i32* %r0.global-to-local, align 4
  %v1_10006c68 = icmp slt i32 %v1_10006c64, 255
  %v2_10006c68 = icmp sgt i32 %v1_10006c64, 255
  %v3_10006c68 = icmp eq i32 %v1_10006c64, 255
  store i1 %v1_10006c68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c68, i1* %cr7_eq.global-to-local, align 1
  %v5_10006c6c = sext i32 %v1_10006c64 to i64
  store i64 %v5_10006c6c, i64* %stack_var_-1916, align 8
  br i1 %v2_10006c68, label %dec_label_pc_10006618, label %dec_label_pc_10006c74

dec_label_pc_10006c74:                            ; preds = %dec_label_pc_10006c60, %dec_label_pc_10006c30
  %v0_10006c78 = phi i32 [ %v1_10006c64, %dec_label_pc_10006c60 ], [ 0, %dec_label_pc_10006c30 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10006c78 = mul i32 %v0_10006c78, 256
  store i32 %v1_10006c78, i32* %r11.global-to-local, align 4
  %v3_10006c7c = load i32, i32* @global_var_1001b740.109, align 4
  store i32 %v3_10006c7c, i32* %r9.global-to-local, align 4
  %v2_10006c84 = mul i32 %v0_10006c78, 288
  store i32 %v2_10006c84, i32* %r0.global-to-local, align 4
  %v2_10006c88 = add i32 %v3_10006c7c, %v2_10006c84
  store i32 %v2_10006c88, i32* %r28.global-to-local, align 4
  %v1_10006c8c = add i32 %v2_10006c88, 4
  %v2_10006c8c = inttoptr i32 %v1_10006c8c to i32*
  %v3_10006c8c = load i32, i32* %v2_10006c8c, align 4
  store i32 %v3_10006c8c, i32* %r3.global-to-local, align 4
  %v1_10006c90 = icmp slt i32 %v3_10006c8c, -1
  %v3_10006c90 = icmp eq i32 %v3_10006c8c, -1
  store i1 %v1_10006c90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c90, label %dec_label_pc_10006c60, label %dec_label_pc_10006c98

dec_label_pc_10006c98:                            ; preds = %dec_label_pc_10006c74
  %v1_10006c98 = call i32 @__asm_rlwinm(i32 %v3_10006c8c, i32 29, i32 3, i32 29)
  %v0_10006c9c = load i32, i32* %r3.global-to-local, align 4
  %v1_10006c9c = urem i32 %v0_10006c9c, 32
  store i32 %v1_10006c9c, i32* %r11.global-to-local, align 4
  %v1_10006ca0 = load i32, i32* @r14, align 4
  %v2_10006ca0 = add i32 %v1_10006ca0, %v1_10006c98
  store i32 %v2_10006ca0, i32* %r9.global-to-local, align 4
  %v1_10006ca4 = add i32 %v2_10006ca0, 184
  %v2_10006ca4 = inttoptr i32 %v1_10006ca4 to i32*
  %v3_10006ca4 = load i32, i32* %v2_10006ca4, align 4
  %v3_10006ca8 = lshr i32 %v3_10006ca4, %v1_10006c9c
  store i32 %v3_10006ca8, i32* %r0.global-to-local, align 4
  %v1_10006cac = urem i32 %v3_10006ca8, 2
  store i32 %v1_10006cac, i32* %r11.global-to-local, align 4
  %v3_10006cac = icmp eq i32 %v1_10006cac, 0
  br i1 %v3_10006cac, label %dec_label_pc_10006cb4, label %dec_label_pc_10007818

dec_label_pc_10006cb4:                            ; preds = %dec_label_pc_10006c98, %dec_label_pc_100078b0
  %v0_10006cb4 = phi i32 [ %v0_10006c9c, %dec_label_pc_10006c98 ], [ %v0_10006cb4.pre, %dec_label_pc_100078b0 ]
  %v1_10006cb4 = call i32 @__asm_rlwinm(i32 %v0_10006cb4, i32 29, i32 3, i32 29)
  %v0_10006cb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006cb8 = urem i32 %v0_10006cb8, 32
  store i32 %v1_10006cb8, i32* %r11.global-to-local, align 4
  %v1_10006cbc = load i32, i32* @r14, align 4
  %v2_10006cbc = add i32 %v1_10006cbc, %v1_10006cb4
  store i32 %v2_10006cbc, i32* %r9.global-to-local, align 4
  %v1_10006cc0 = add i32 %v2_10006cbc, 56
  %v2_10006cc0 = inttoptr i32 %v1_10006cc0 to i32*
  %v3_10006cc0 = load i32, i32* %v2_10006cc0, align 4
  %v3_10006cc4 = lshr i32 %v3_10006cc0, %v1_10006cb8
  store i32 %v3_10006cc4, i32* %r0.global-to-local, align 4
  %v1_10006cc8 = urem i32 %v3_10006cc4, 2
  store i32 %v1_10006cc8, i32* %r9.global-to-local, align 4
  %v3_10006cc8 = icmp eq i32 %v1_10006cc8, 0
  br i1 %v3_10006cc8, label %dec_label_pc_10006c60, label %dec_label_pc_10006cd0.preheader

dec_label_pc_10006cd0.preheader:                  ; preds = %dec_label_pc_10006cb4
  %v0_10006cd0.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006cd0

dec_label_pc_10006cd0:                            ; preds = %dec_label_pc_10006cd0.preheader, %dec_label_pc_10006d3c
  %v0_10007740 = phi i32 [ %v0_10006cd0.pre, %dec_label_pc_10006cd0.preheader ], [ %v0_10006d50, %dec_label_pc_10006d3c ]
  %v1_10006cd0 = add i32 %v0_10007740, 12
  %v2_10006cd0 = inttoptr i32 %v1_10006cd0 to i32*
  %v3_10006cd0 = load i32, i32* %v2_10006cd0, align 4
  store i32 %v3_10006cd0, i32* %r10.global-to-local, align 4
  %v1_10006cd4 = icmp slt i32 %v3_10006cd0, 0
  %v3_10006cd4 = icmp eq i32 %v3_10006cd0, 0
  store i1 %v1_10006cd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cd4, label %dec_label_pc_10006c60, label %dec_label_pc_10006cdc

dec_label_pc_10006cdc:                            ; preds = %dec_label_pc_10006cd0
  %v1_10006cdc = add i32 %v0_10007740, 24
  %v2_10006cdc = inttoptr i32 %v1_10006cdc to i32*
  %v3_10006cdc = load i32, i32* %v2_10006cdc, align 4
  store i32 %v3_10006cdc, i32* %r0.global-to-local, align 4
  %v1_10006ce0 = add i32 %v0_10007740, 28
  store i32 %v1_10006ce0, i32* %r30.global-to-local, align 4
  %v1_10006ce4 = icmp slt i32 %v3_10006cdc, 256
  %v3_10006ce4 = icmp eq i32 %v3_10006cdc, 256
  store i1 %v1_10006ce4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ce4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ce4, label %dec_label_pc_10007738, label %dec_label_pc_10006cec

dec_label_pc_10006cec:                            ; preds = %dec_label_pc_10006cdc, %dec_label_pc_10007738
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10006cf4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006cf4 = inttoptr i32 %v1_10006cf4 to i32*
  store i32 0, i32* %v2_10006cf4, align 4
  %v0_10006cf8 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006cf8 = add i32 %v0_10006cf8, 24
  %v2_10006cf8 = inttoptr i32 %v1_10006cf8 to i32*
  %v3_10006cf8 = load i32, i32* %v2_10006cf8, align 4
  store i32 %v3_10006cf8, i32* %r5.global-to-local, align 4
  %v1_10006cfc = add i32 %v0_10006cf8, 4
  %v2_10006cfc = inttoptr i32 %v1_10006cfc to i32*
  %v3_10006cfc = load i32, i32* %v2_10006cfc, align 4
  store i32 %v3_10006cfc, i32* %r3.global-to-local, align 4
  %v0_10006d00 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006d00 = add i32 %v0_10006d00, %v3_10006cf8
  store i32 %v2_10006d00, i32* @r29, align 4
  %v1_10006d04 = sub i32 256, %v3_10006cf8
  store i32 %v1_10006d04, i32* %r5.global-to-local, align 4
  store i32 268463376, i32* @lr, align 4
  %v4_10006d0c = call i32 @function_10009270(i32 %v3_10006cfc, i32 %v2_10006d00, i32 %v1_10006d04, i32 16384)
  store i32 %v4_10006d0c, i32* %r3.global-to-local, align 4
  %tmp117 = icmp slt i32 %v4_10006d0c, 1
  br i1 %tmp117, label %dec_label_pc_100076e4, label %dec_label_pc_10006d18

dec_label_pc_10006d18:                            ; preds = %dec_label_pc_10006cec
  store i32 %v4_10006d0c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006d24

dec_label_pc_10006d24:                            ; preds = %dec_label_pc_10006d34, %dec_label_pc_10006d18
  %v0_10006d3839 = phi i32 [ %v1_10006d38, %dec_label_pc_10006d34 ], [ %v4_10006d0c, %dec_label_pc_10006d18 ]
  %v1_10006d30 = phi i32 [ %v1_10006d34, %dec_label_pc_10006d34 ], [ 0, %dec_label_pc_10006d18 ]
  %v1_10006d24 = load i32, i32* @r29, align 4
  %v2_10006d24 = add i32 %v1_10006d24, %v1_10006d30
  %v3_10006d24 = inttoptr i32 %v2_10006d24 to i8*
  %v4_10006d24 = load i8, i8* %v3_10006d24, align 1
  %v5_10006d24 = zext i8 %v4_10006d24 to i32
  store i32 %v5_10006d24, i32* %r0.global-to-local, align 4
  %v3_10006d28 = icmp eq i8 %v4_10006d24, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d28, label %dec_label_pc_10006d30, label %dec_label_pc_10006d34

dec_label_pc_10006d30:                            ; preds = %dec_label_pc_10006d24
  %v0_10006d30 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006d30 = trunc i32 %v0_10006d30 to i8
  store i8 %v3_10006d30, i8* %v3_10006d24, align 1
  %v0_10006d34.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006d38.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006d34

dec_label_pc_10006d34:                            ; preds = %dec_label_pc_10006d24, %dec_label_pc_10006d30
  %v0_10006d38 = phi i32 [ %v0_10006d3839, %dec_label_pc_10006d24 ], [ %v0_10006d38.pre, %dec_label_pc_10006d30 ]
  %v0_10006d34 = phi i32 [ %v1_10006d30, %dec_label_pc_10006d24 ], [ %v0_10006d34.pre, %dec_label_pc_10006d30 ]
  %v1_10006d34 = add i32 %v0_10006d34, 1
  store i32 %v1_10006d34, i32* %r9.global-to-local, align 4
  %v1_10006d38 = add i32 %v0_10006d38, -1
  store i32 %v1_10006d38, i32* %ctr.global-to-local, align 4
  %v2_10006d38 = icmp eq i32 %v1_10006d38, 0
  br i1 %v2_10006d38, label %dec_label_pc_10006d3c, label %dec_label_pc_10006d24

dec_label_pc_10006d3c:                            ; preds = %dec_label_pc_10006d34, %dec_label_pc_100076e8
  %v0_10006d3c = load i32, i32* %r28.global-to-local, align 4
  %v1_10006d3c = add i32 %v0_10006d3c, 24
  %v2_10006d3c = inttoptr i32 %v1_10006d3c to i32*
  %v3_10006d3c = load i32, i32* %v2_10006d3c, align 4
  %v3_10006d40 = load i32, i32* @global_var_1001b73c.102, align 4
  store i32 %v3_10006d40, i32* %r0.global-to-local, align 4
  %v2_10006d44 = add i32 %v3_10006d3c, %v4_10006d0c
  store i32 %v2_10006d44, i32* %r5.global-to-local, align 4
  store i32 %v2_10006d44, i32* %v2_10006d3c, align 4
  %v0_10006d4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10006d4c = load i32, i32* %r28.global-to-local, align 4
  %v2_10006d4c = add i32 %v1_10006d4c, 8
  %v3_10006d4c = inttoptr i32 %v2_10006d4c to i32*
  store i32 %v0_10006d4c, i32* %v3_10006d4c, align 4
  %v0_10006d50 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006d50 = add i32 %v0_10006d50, 12
  %v2_10006d50 = inttoptr i32 %v1_10006d50 to i32*
  %v3_10006d50 = load i32, i32* %v2_10006d50, align 4
  store i32 %v3_10006d50, i32* %r10.global-to-local, align 4
  %v1_10006d54 = icmp ult i32 %v3_10006d50, 10
  %v2_10006d54 = icmp ugt i32 %v3_10006d50, 10
  %v3_10006d54 = icmp eq i32 %v3_10006d50, 10
  store i1 %v1_10006d54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006d54, label %dec_label_pc_10006cd0, label %dec_label_pc_10006d5c

dec_label_pc_10006d5c:                            ; preds = %dec_label_pc_10006d3c
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10006d60 = mul i32 %v3_10006d50, 4
  store i32 %v1_10006d60, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b128.143 to i32), i32* %r11.global-to-local, align 4
  %v2_10006d68 = add i32 %v1_10006d60, ptrtoint (i32* @global_var_1000b128.143 to i32)
  %v3_10006d68 = inttoptr i32 %v2_10006d68 to i32*
  %v4_10006d68 = load i32, i32* %v3_10006d68, align 4
  %v2_10006d6c = add i32 %v4_10006d68, ptrtoint (i32* @global_var_1000b128.143 to i32)
  store i32 %v2_10006d6c, i32* %r9.global-to-local, align 4
  store i32 %v2_10006d6c, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10006d6c)
  br label %dec_label_pc_10006d78

dec_label_pc_10006d78:                            ; preds = %dec_label_pc_10006bdc, %dec_label_pc_10006bc0, %dec_label_pc_10006d5c
  %v0_10006d78 = load i32, i32* %r27.global-to-local, align 4
  %v1_10006d78 = load i32, i32* @r29, align 4
  %v2_10006d78 = add i32 %v1_10006d78, 12
  %v3_10006d78 = inttoptr i32 %v2_10006d78 to i32*
  store i32 %v0_10006d78, i32* %v3_10006d78, align 4
  %v0_10006d7c = load i32, i32* %r28.global-to-local, align 4
  %v1_10006d7c = trunc i32 %v0_10006d7c to i8
  %v2_10006d7c = load i32, i32* @r29, align 4
  %v3_10006d7c = add i32 %v2_10006d7c, 284
  %v4_10006d7c = inttoptr i32 %v3_10006d7c to i8*
  store i8 %v1_10006d7c, i8* %v4_10006d7c, align 1
  br label %dec_label_pc_10006b64

dec_label_pc_10006d84:                            ; preds = %dec_label_pc_10006b2c
  %v1_10006d88 = call i32 @__asm_rlwinm(i32 %v3_10006d84, i32 29, i32 3, i32 29)
  %v0_10006d8c = load i32, i32* @r31, align 4
  %v2_10006d8c = icmp slt i32 %v0_10006d8c, %v3_10006d84
  %v4_10006d8c = icmp eq i32 %v0_10006d8c, %v3_10006d84
  store i1 %v2_10006d8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006d8c, i1* %cr7_eq.global-to-local, align 1
  %v1_10006d90 = load i32, i32* @r14, align 4
  %v2_10006d90 = add i32 %v1_10006d90, %v1_10006d88
  store i32 %v2_10006d90, i32* %r11.global-to-local, align 4
  %v1_10006d94 = urem i32 %v3_10006d84, 32
  store i32 %v1_10006d94, i32* %r0.global-to-local, align 4
  %v1_10006d98 = add i32 %v2_10006d90, 184
  %v2_10006d98 = inttoptr i32 %v1_10006d98 to i32*
  %v3_10006d98 = load i32, i32* %v2_10006d98, align 4
  %v0_10006d9c = load i32, i32* %r10.global-to-local, align 4
  %v3_10006d9c = shl i32 %v0_10006d9c, %v1_10006d94
  store i32 %v3_10006d9c, i32* %r0.global-to-local, align 4
  %v2_10006da0 = or i32 %v3_10006d9c, %v3_10006d98
  store i32 %v2_10006da0, i32* %r9.global-to-local, align 4
  store i32 %v2_10006da0, i32* %v2_10006d98, align 4
  br i1 %v2_10006d8c, label %dec_label_pc_10006dac, label %dec_label_pc_10006b64

dec_label_pc_10006dac:                            ; preds = %dec_label_pc_10006d84
  store i32 %v3_10006d84, i32* @r31, align 4
  br label %dec_label_pc_10006b64

dec_label_pc_100076e4:                            ; preds = %dec_label_pc_10006cec
  %v3_10006d10 = icmp eq i32 %v4_10006d0c, 0
  br i1 %v3_10006d10, label %dec_label_pc_100078f8, label %dec_label_pc_100076e8

dec_label_pc_100076e8:                            ; preds = %dec_label_pc_100076e4
  %v1_100076e8 = icmp slt i32 %v4_10006d0c, -1
  %v3_100076e8 = icmp eq i32 %v4_10006d0c, -1
  store i1 %v1_100076e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100076e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100076e8, label %dec_label_pc_100076f0, label %dec_label_pc_10006d3c

dec_label_pc_100076f0:                            ; preds = %dec_label_pc_100076e8
  %v0_100076f0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100076f0 = inttoptr i32 %v0_100076f0 to i32*
  %v2_100076f0 = load i32, i32* %v1_100076f0, align 4
  store i32 %v2_100076f0, i32* %r0.global-to-local, align 4
  %v1_100076f4 = icmp slt i32 %v2_100076f0, 11
  %v3_100076f4 = icmp eq i32 %v2_100076f0, 11
  store i1 %v1_100076f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100076f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100076f4, label %dec_label_pc_10006c60, label %dec_label_pc_100076fc

dec_label_pc_100076fc:                            ; preds = %dec_label_pc_100076f0, %dec_label_pc_100078f8
  %v0_100076fc = load i32, i32* %r28.global-to-local, align 4
  %v1_100076fc = add i32 %v0_100076fc, 4
  %v2_100076fc = inttoptr i32 %v1_100076fc to i32*
  %v3_100076fc = load i32, i32* %v2_100076fc, align 4
  store i32 %v3_100076fc, i32* %r3.global-to-local, align 4
  store i32 268465924, i32* @lr, align 4
  %v0_10007700 = call i32 @function_10008680()
  store i32 %v0_10007700, i32* %r3.global-to-local, align 4
  %v0_10007704 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007704 = add i32 %v0_10007704, 284
  %v2_10007704 = inttoptr i32 %v1_10007704 to i8*
  %v3_10007704 = load i8, i8* %v2_10007704, align 1
  %v4_10007704 = zext i8 %v3_10007704 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000770c = add nuw nsw i32 %v4_10007704, 1
  store i32 %v1_1000770c, i32* %r9.global-to-local, align 4
  %v2_10007710 = add i32 %v0_10007704, 4
  %v3_10007710 = inttoptr i32 %v2_10007710 to i32*
  store i32 -1, i32* %v3_10007710, align 4
  %v0_10007714 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007714 = urem i32 %v0_10007714, 256
  store i32 %v1_10007714, i32* %r9.global-to-local, align 4
  %v1_10007718 = icmp ult i32 %v1_10007714, 9
  %v3_10007718 = icmp eq i32 %v1_10007714, 9
  store i1 %v1_10007718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007718, i1* %cr7_eq.global-to-local, align 1
  %v1_1000771c = trunc i32 %v0_10007714 to i8
  %v2_1000771c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000771c = add i32 %v2_1000771c, 284
  %v4_1000771c = inttoptr i32 %v3_1000771c to i8*
  store i8 %v1_1000771c, i8* %v4_1000771c, align 1
  %v0_10007720 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007720 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007720 = or i1 %v0_10007720, %v1_10007720
  br i1 %v2_10007720, label %dec_label_pc_100079a4, label %dec_label_pc_10007724

dec_label_pc_10007724:                            ; preds = %dec_label_pc_100076fc
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000772c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000772c = add i32 %v1_1000772c, 12
  %v3_1000772c = inttoptr i32 %v2_1000772c to i32*
  store i32 0, i32* %v3_1000772c, align 4
  %v0_10007730 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007730 = trunc i32 %v0_10007730 to i8
  %v2_10007730 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007730 = add i32 %v2_10007730, 284
  %v4_10007730 = inttoptr i32 %v3_10007730 to i8*
  store i8 %v1_10007730, i8* %v4_10007730, align 1
  br label %dec_label_pc_10006c60

dec_label_pc_10007738:                            ; preds = %dec_label_pc_10006cdc
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_10006ce0, i32* %r3.global-to-local, align 4
  %v1_10007740 = add i32 %v0_10007740, 92
  store i32 268465992, i32* @lr, align 4
  %v3_10007744 = call i32 @function_10008de0(i32 %v1_10006ce0, i32 %v1_10007740, i32 192)
  store i32 %v3_10007744, i32* %r3.global-to-local, align 4
  %v0_10007748 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007748 = add i32 %v0_10007748, 24
  %v2_10007748 = inttoptr i32 %v1_10007748 to i32*
  %v3_10007748 = load i32, i32* %v2_10007748, align 4
  store i32 %v3_10007748, i32* %r9.global-to-local, align 4
  %v1_1000774c = add i32 %v3_10007748, -64
  store i32 %v1_1000774c, i32* %r5.global-to-local, align 4
  store i32 %v1_1000774c, i32* %v2_10007748, align 4
  br label %dec_label_pc_10006cec

dec_label_pc_10007818:                            ; preds = %dec_label_pc_10006c98
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_10007828, i32* %r6.global-to-local, align 4
  store i32 %v2_1000782c, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268466236, i32* @lr, align 4
  %v5_10007838 = call i32 @function_10009204(i32 1, i32 4, i32 %v2_10007828, i32 %v2_1000782c, i32 %v2_10006ca0)
  store i32 %v5_10007838, i32* %r3.global-to-local, align 4
  %v3_1000783c = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_1000783c, i32* %r0.global-to-local, align 4
  %v2_10007840 = or i32 %v3_1000783c, %v5_10007838
  store i32 %v2_10007840, i32* %r9.global-to-local, align 4
  %v5_10007840 = icmp eq i32 %v2_10007840, 0
  br i1 %v5_10007840, label %dec_label_pc_10007848, label %dec_label_pc_100078d8

dec_label_pc_10007848:                            ; preds = %dec_label_pc_10007818
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_1000784c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000784c = add i32 %v1_1000784c, 12
  %v3_1000784c = inttoptr i32 %v2_1000784c to i32*
  store i32 2, i32* %v3_1000784c, align 4
  %v0_10007850 = call i32 @function_10005cf4()
  %v3_10007858 = load i16, i16* @global_var_1001b738.105, align 2
  %v4_10007858 = zext i16 %v3_10007858 to i32
  store i32 %v4_10007858, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007860 = load i32, i32* @global_var_1001b730.103, align 4
  store i32 %v3_10007860, i32* %r10.global-to-local, align 4
  %v1_10007868 = icmp slt i32 %v3_10007860, 0
  %v3_10007868 = icmp eq i32 %v3_10007860, 0
  store i1 %v1_10007868, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007868, i1* %cr7_eq.global-to-local, align 1
  %v2_10007864 = urem i32 %v0_10007850, %v4_10007858
  %v2_1000786c = sub i32 %v0_10007850, %v2_10007864
  store i32 %v2_1000786c, i32* %r0.global-to-local, align 4
  store i32 %v2_10007864, i32* %r3.global-to-local, align 4
  %tmp119 = icmp slt i32 %v3_10007860, 1
  br i1 %tmp119, label %dec_label_pc_100078ac, label %dec_label_pc_1000787c

dec_label_pc_1000787c:                            ; preds = %dec_label_pc_10007848
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10007860, i32* %ctr.global-to-local, align 4
  %v3_10007884 = load i32, i32* @global_var_1001b734.104, align 4
  store i32 %v3_10007884, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10007888

dec_label_pc_10007888:                            ; preds = %dec_label_pc_100078a4, %dec_label_pc_1000787c
  %v0_100078a8 = phi i32 [ %v1_100078a8, %dec_label_pc_100078a4 ], [ %v3_10007860, %dec_label_pc_1000787c ]
  %v0_100078a4 = phi i32 [ %v1_100078a4, %dec_label_pc_100078a4 ], [ %v3_10007884, %dec_label_pc_1000787c ]
  store i32 %v0_100078a4, i32* %r9.global-to-local, align 4
  %v1_1000788c = add i32 %v0_100078a4, 8
  %v2_1000788c = inttoptr i32 %v1_1000788c to i16*
  %v3_1000788c = load i16, i16* %v2_1000788c, align 2
  %v4_1000788c = zext i16 %v3_1000788c to i32
  store i32 %v4_1000788c, i32* %r0.global-to-local, align 4
  %v2_10007890 = icmp ult i32 %v4_1000788c, %v2_10007864
  %v3_10007890 = icmp ugt i32 %v4_1000788c, %v2_10007864
  %v4_10007890 = icmp eq i32 %v4_1000788c, %v2_10007864
  br i1 %v3_10007890, label %dec_label_pc_100078a4, label %dec_label_pc_10007898

dec_label_pc_10007898:                            ; preds = %dec_label_pc_10007888
  %v1_10007898 = add i32 %v0_100078a4, 10
  %v2_10007898 = inttoptr i32 %v1_10007898 to i16*
  %v3_10007898 = load i16, i16* %v2_10007898, align 2
  %v4_10007898 = zext i16 %v3_10007898 to i32
  store i32 %v4_10007898, i32* %r0.global-to-local, align 4
  %v2_1000789c = icmp ult i32 %v4_10007898, %v2_10007864
  %v3_1000789c = icmp ugt i32 %v4_10007898, %v2_10007864
  %v4_1000789c = icmp eq i32 %v4_10007898, %v2_10007864
  br i1 %v3_1000789c, label %dec_label_pc_100078b0.loopexit, label %dec_label_pc_100078a4

dec_label_pc_100078a4:                            ; preds = %dec_label_pc_10007898, %dec_label_pc_10007888
  %v4_1000789c7 = phi i1 [ %v4_1000789c, %dec_label_pc_10007898 ], [ %v4_10007890, %dec_label_pc_10007888 ]
  %v2_1000789c5 = phi i1 [ %v2_1000789c, %dec_label_pc_10007898 ], [ %v2_10007890, %dec_label_pc_10007888 ]
  %v1_100078a4 = add i32 %v0_100078a4, 16
  store i32 %v1_100078a4, i32* %r0.global-to-local, align 4
  %v1_100078a8 = add i32 %v0_100078a8, -1
  store i32 %v1_100078a8, i32* %ctr.global-to-local, align 4
  %v2_100078a8 = icmp eq i32 %v1_100078a8, 0
  br i1 %v2_100078a8, label %dec_label_pc_100078ac.loopexit, label %dec_label_pc_10007888

dec_label_pc_100078ac.loopexit:                   ; preds = %dec_label_pc_100078a4
  store i1 %v2_1000789c5, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000789c7, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100078ac

dec_label_pc_100078ac:                            ; preds = %dec_label_pc_100078ac.loopexit, %dec_label_pc_10007848
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100078b0

dec_label_pc_100078b0.loopexit:                   ; preds = %dec_label_pc_10007898
  store i1 %v2_1000789c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000789c, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100078b0

dec_label_pc_100078b0:                            ; preds = %dec_label_pc_100078b0.loopexit, %dec_label_pc_100078ac
  %v0_100078b8 = phi i32 [ %v0_100078a4, %dec_label_pc_100078b0.loopexit ], [ 0, %dec_label_pc_100078ac ]
  %v0_100078b0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100078b0 = add i32 %v0_100078b0, 4
  %v2_100078b0 = inttoptr i32 %v1_100078b0 to i32*
  %v3_100078b0 = load i32, i32* %v2_100078b0, align 4
  store i32 %v3_100078b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100078b8 = inttoptr i32 %v0_100078b0 to i32*
  store i32 %v0_100078b8, i32* %v2_100078b8, align 4
  %v0_100078bc = load i32, i32* %r5.global-to-local, align 4
  %v1_100078bc = load i32, i32* %r28.global-to-local, align 4
  %v2_100078bc = add i32 %v1_100078bc, 24
  %v3_100078bc = inttoptr i32 %v2_100078bc to i32*
  store i32 %v0_100078bc, i32* %v3_100078bc, align 4
  %v0_10006cb4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006cb4

dec_label_pc_100078d8:                            ; preds = %dec_label_pc_10007818
  %v0_100078d8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100078d8 = add i32 %v0_100078d8, 4
  %v2_100078d8 = inttoptr i32 %v1_100078d8 to i32*
  %v3_100078d8 = load i32, i32* %v2_100078d8, align 4
  store i32 %v3_100078d8, i32* %r3.global-to-local, align 4
  store i32 268466400, i32* @lr, align 4
  %v0_100078dc = call i32 @function_10008680()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100078e8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100078e8 = add i32 %v1_100078e8, 4
  %v3_100078e8 = inttoptr i32 %v2_100078e8 to i32*
  store i32 -1, i32* %v3_100078e8, align 4
  %v0_100078ec = load i32, i32* %r10.global-to-local, align 4
  %v1_100078ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100078ec = add i32 %v1_100078ec, 12
  %v3_100078ec = inttoptr i32 %v2_100078ec to i32*
  store i32 %v0_100078ec, i32* %v3_100078ec, align 4
  %v0_100078f0 = load i32, i32* @r31, align 4
  %v1_100078f0 = trunc i32 %v0_100078f0 to i8
  %v2_100078f0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100078f0 = add i32 %v2_100078f0, 284
  %v4_100078f0 = inttoptr i32 %v3_100078f0 to i8*
  store i8 %v1_100078f0, i8* %v4_100078f0, align 1
  br label %dec_label_pc_10006c60

dec_label_pc_100078f8:                            ; preds = %dec_label_pc_100076e4
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_100078fc = load i32, i32* %r26.global-to-local, align 4
  %v2_100078fc = inttoptr i32 %v1_100078fc to i32*
  store i32 104, i32* %v2_100078fc, align 4
  br label %dec_label_pc_100076fc

dec_label_pc_100079a4:                            ; preds = %dec_label_pc_100076fc
  %v0_100079a4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100079a4, i32* @r3, align 4
  store i32 268466604, i32* @lr, align 4
  %v0_100079a8 = call i32 @function_10005fd4()
  store i32 %v0_100079a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c60

dec_label_pc_100079d0:                            ; preds = %dec_label_pc_100063f4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100079d4 = load i32, i32* @global_var_1001b744.110, align 4
  store i32 %v3_100079d4, i32* %r3.global-to-local, align 4
  store i32 268466652, i32* @lr, align 4
  %v0_100079d8 = call i32 @function_10008680()
  store i32 %v0_100079d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006a00

dec_label_pc_100079e0:                            ; preds = %dec_label_pc_10006910
  store i32 %v0_10006908, i32* @r29, align 4
  br label %dec_label_pc_100079e4

dec_label_pc_100079e4:                            ; preds = %dec_label_pc_1000694c, %dec_label_pc_100079e0
  %v1_100079e4 = phi i32 [ %v2_10006924, %dec_label_pc_100079e0 ], [ %v0_1000694c, %dec_label_pc_1000694c ]
  %v2_100079e4 = add i32 %v1_100079e4, 16
  %v3_100079e4 = inttoptr i32 %v2_100079e4 to i32*
  store i32 %tmp51, i32* %v3_100079e4, align 4
  %v0_100079e8 = load i32, i32* @r29, align 4
  store i32 %v0_100079e8, i32* @r31, align 4
  %v0_100079ec = load i32, i32* %r8.global-to-local, align 4
  %v1_100079ec = trunc i32 %v0_100079ec to i16
  %v2_100079ec = load i32, i32* @r3, align 4
  %v3_100079ec = add i32 %v2_100079ec, 20
  %v4_100079ec = inttoptr i32 %v3_100079ec to i16*
  store i16 %v1_100079ec, i16* %v4_100079ec, align 2
  store i32 268466676, i32* @lr, align 4
  %v0_100079f0 = call i32 @function_10005fd4()
  store i32 %v0_100079f0, i32* %r3.global-to-local, align 4
  %v1_10006850.pre.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10006848

; uselistorder directives
  uselistorder i32 %v1_100078a8, { 2, 1, 0 }
  uselistorder i32 %v1_100078a4, { 1, 0 }
  uselistorder i32 %v4_10007898, { 2, 1, 0, 3 }
  uselistorder i32 %v4_1000788c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100078a4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10007864, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10007860, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10007714, { 1, 2, 0 }
  uselistorder i32 %v0_10007714, { 1, 0 }
  uselistorder i32 %v2_100076f0, { 1, 0, 2 }
  uselistorder i32 %v1_10006d94, { 1, 0 }
  uselistorder i32 %v1_10006d60, { 1, 0 }
  uselistorder i32 %v3_10006d50, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10006d50, { 1, 0 }
  uselistorder i32 %v1_10006d38, { 2, 1, 0 }
  uselistorder i32 %v1_10006d34, { 1, 0 }
  uselistorder i32 %v1_10006d30, { 1, 0 }
  uselistorder i32 %v4_10006d0c, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v3_10006cf8, { 1, 0, 2 }
  uselistorder i32 %v1_10006ce0, { 1, 0, 2 }
  uselistorder i32 %v3_10006cdc, { 1, 0, 2 }
  uselistorder i32 %v3_10006cd0, { 1, 0, 2 }
  uselistorder i32 %v0_10007740, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10006cc8, { 1, 0 }
  uselistorder i32 %v1_10006cb8, { 1, 0 }
  uselistorder i32 %v1_10006cac, { 1, 0 }
  uselistorder i32 %v1_10006c9c, { 1, 0 }
  uselistorder i32 %v0_10006c9c, { 1, 0 }
  uselistorder i32 %v3_10006c8c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10006c78, { 1, 0 }
  uselistorder i32 %v1_10006c64, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006c00, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10006be4, { 1, 2, 0 }
  uselistorder i32 %v1_10006be0, { 1, 0 }
  uselistorder i32 %v3_10006bc8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10006bb4, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10006b98, { 2, 0, 1 }
  uselistorder i1 %v1_10006b98, { 1, 0, 2 }
  uselistorder i32 %v3_10006b94, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_10006b90, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_10006b68, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006b48, { 1, 0 }
  uselistorder i32 %v3_10006d84, { 5, 0, 8, 7, 9, 4, 1, 3, 2, 6, 10 }
  uselistorder i32 %v2_10006b20, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10006af8, { 1, 0 }
  uselistorder i32 %v1_10006ad8, { 1, 0 }
  uselistorder i32 %v0_10006aa4, { 1, 2, 0 }
  uselistorder i32 %v0_10006a98, { 1, 2, 0 }
  uselistorder i32 %v0_10006a8c, { 1, 2, 0 }
  uselistorder i32 %v0_10006a80, { 1, 2, 0 }
  uselistorder i32 %v0_10006a5c, { 2, 1, 4, 3, 6, 5, 7, 8, 0 }
  uselistorder i32 %v0_10006a48, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006a3c, { 1, 2, 0 }
  uselistorder i32 %v0_10006a28, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006a14, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10006a08, { 1, 2, 0 }
  uselistorder i32 %v1_10006954, { 1, 0 }
  uselistorder i32 %v3_1000694c, { 1, 0, 2 }
  uselistorder i32 %v1_10006948, { 2, 1, 0 }
  uselistorder i32 %v1_10006944, { 1, 0 }
  uselistorder i32 %v0_1000694c, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10006928, { 1, 0, 2 }
  uselistorder i32 %v0_10006908, { 3, 1, 2, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_10006890, { 1, 0, 2 }
  uselistorder i32 %v2_10006878, { 1, 0, 2 }
  uselistorder i32 %v0_10006878, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_1000686c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_100068bc, { 1, 0 }
  uselistorder i32 %v1_100068ec, { 1, 0 }
  uselistorder i32 %v1_100068e4, { 1, 0 }
  uselistorder i32 %v1_100068dc, { 1, 0 }
  uselistorder i32 %v1_100068fc, { 2, 1, 0 }
  uselistorder i32 %v1_100068d4, { 1, 0 }
  uselistorder i32 %v4_100068c4, { 1, 0, 2 }
  uselistorder i32 %v1_10006828, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100067b4, { 1, 0 }
  uselistorder i32 %v4_10006794, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006704, { 3, 1, 2, 0 }
  uselistorder i32 %v1_1000668c, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10006678, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 35, 34, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51, 53, 52, 54, 55 }
  uselistorder i32 %v1_10006660, { 1, 2, 0 }
  uselistorder i32 %v0_1000665c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006648, { 1, 0 }
  uselistorder i32 %v3_10006618, { 1, 0, 2 }
  uselistorder i32 %v0_10006488, { 1, 0 }
  uselistorder i32 %v1_10006448, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10006438, { 1, 0, 2 }
  uselistorder i32 %v3_100063dc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100063c4, { 1, 0 }
  uselistorder i32 %v0_100063c0, { 1, 0 }
  uselistorder i32 %v1_100063bc, { 1, 0 }
  uselistorder i32 %v0_100063ac, { 1, 2, 0 }
  uselistorder i32 %v2_1000636c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_100062c8, { 2, 4, 3, 5, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1888, { 0, 2, 1, 3 }
  uselistorder i32 %tmp57, { 1, 2, 0 }
  uselistorder i8 %tmp56, { 2, 1, 0 }
  uselistorder i16 %tmp55, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp53, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 28, 25, 26, 27, 29, 49, 50, 30, 51, 52, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 46, 43, 44, 45, 47, 48 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 12 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 24, 27, 26, 28, 29, 30, 17, 31, 32, 33, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 52, 51, 54, 53, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 39, 40, 41, 42, 43, 44, 45, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 4, 5, 2, 3, 6, 7, 1 }
  uselistorder i32* %r28.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 20, 14, 15, 16, 17, 18, 19, 21, 22, 23 }
  uselistorder i32* %r26.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 22, 13, 23, 25, 14, 15, 16, 17, 18, 24, 26, 27, 28, 29, 19, 20, 21 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 35, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 63, 64, 65, 66, 67, 68, 69, 70, 71, 57, 58, 59, 60, 61, 62 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 18, 7, 8, 9, 19, 20, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 83, 84, 85 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 85, 86, 87 }
  uselistorder i16* @global_var_1001b738.105, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009204, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009270, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10008948, { 1, 0 }
  uselistorder i32 ()* @function_10005fd4, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_100092a8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009320, { 9, 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 16384, { 2, 25, 0, 26, 1, 27, 20, 21, 19, 22, 23, 24, 18, 3, 28, 4, 29, 6, 30, 5, 8, 31, 7, 9, 32, 10, 33, 34, 11, 35, 36, 12, 37, 38, 39, 13, 15, 14, 17, 16 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 11, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 192, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @function_100060c0, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001b7c6.120, { 2, 0, 1 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 66, 0, 1, 2, 3, 4, 6, 5, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 ()* @function_10005cf4, { 73, 28, 27, 26, 25, 24, 72, 71, 70, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009360, { 2, 10, 9, 8, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 2048, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_10008a50, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10005d44, { 1, 0 }
  uselistorder i32 (i32)* @function_100081c4, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_100086c8, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100079e4, { 1, 0 }
  uselistorder label %dec_label_pc_100076fc, { 1, 0 }
  uselistorder label %dec_label_pc_10006d78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d34, { 1, 0 }
  uselistorder label %dec_label_pc_10006cec, { 1, 0 }
  uselistorder label %dec_label_pc_10006cd0, { 1, 0 }
  uselistorder label %dec_label_pc_10006cb4, { 1, 0 }
  uselistorder label %dec_label_pc_10006c60, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10006c30, { 1, 0 }
  uselistorder label %dec_label_pc_10006b64, { 3, 0, 4, 2, 5, 1 }
  uselistorder label %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006acc.dec_label_pc_10006acc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006abc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006a08, { 1, 0 }
  uselistorder label %dec_label_pc_10006a00, { 1, 0 }
  uselistorder label %dec_label_pc_10006848, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_1000683c, { 1, 0 }
  uselistorder label %dec_label_pc_10006768, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 10, 8, 11, 13, 12 }
  uselistorder label %dec_label_pc_1000665c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006444, { 1, 0 }
}

define i32 @function_100079f8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100079f8:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100079f8 = icmp eq i32* %arg2, null
  %v1_10007a00 = mul i32 %arg1, 8
  store i32 %v1_10007a00, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b800.163 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_100079f8, label %dec_label_pc_10007a18, label %dec_label_pc_10007a10

dec_label_pc_10007a10:                            ; preds = %dec_label_pc_100079f8
  %v1_10007a10 = add i32 %v1_10007a00, add (i32 ptrtoint (i32* @global_var_1001b800.163 to i32), i32 4)
  %v2_10007a10 = inttoptr i32 %v1_10007a10 to i16*
  %v3_10007a10 = load i16, i16* %v2_10007a10, align 4
  %v4_10007a10 = zext i16 %v3_10007a10 to i32
  store i32 %v4_10007a10, i32* %arg2, align 4
  %v0_10007a18.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10007a18.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007a18

dec_label_pc_10007a18:                            ; preds = %dec_label_pc_100079f8, %dec_label_pc_10007a10
  %v1_10007a18 = phi i32 [ ptrtoint (i32* @global_var_1001b800.163 to i32), %dec_label_pc_100079f8 ], [ %v1_10007a18.pre, %dec_label_pc_10007a10 ]
  %v0_10007a18 = phi i32 [ %v1_10007a00, %dec_label_pc_100079f8 ], [ %v0_10007a18.pre, %dec_label_pc_10007a10 ]
  %v2_10007a18 = add i32 %v0_10007a18, %v1_10007a18
  %v3_10007a18 = inttoptr i32 %v2_10007a18 to i32*
  %v4_10007a18 = load i32, i32* %v3_10007a18, align 4
  store i32 %v4_10007a18, i32* %r3.global-to-local, align 4
  ret i32 %v4_10007a18

; uselistorder directives
  uselistorder i32 %v1_10007a00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007a18, { 1, 0 }
}

define i32 @function_10007a20(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007a20:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10007a24 = mul i32 %arg1, 8
  %v2_10007a2c = add i32 %v1_10007a24, ptrtoint (i32* @global_var_1001b800.163 to i32)
  %v1_10007a34 = add i32 %v1_10007a24, add (i32 ptrtoint (i32* @global_var_1001b800.163 to i32), i32 4)
  %v2_10007a34 = inttoptr i32 %v1_10007a34 to i16*
  %v3_10007a34 = load i16, i16* %v2_10007a34, align 4
  %v3_10007a38 = icmp eq i16 %v3_10007a34, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007a38, i1* %cr7_eq.global-to-local, align 1
  %v3_10007a3c = load i32, i32* @global_var_1001b6fc.164, align 4
  %v1_10007a40 = udiv i32 %v3_10007a3c, 16777216
  store i32 %v1_10007a40, i32* @r5, align 4
  %v1_10007a44 = urem i32 %v3_10007a3c, 256
  store i32 %v1_10007a44, i32* %r6.global-to-local, align 4
  %v1_10007a48 = call i32 @__asm_rlwinm(i32 %v3_10007a3c, i32 24, i32 24, i32 31)
  %v1_10007a4c = call i32 @__asm_rlwinm(i32 %v3_10007a3c, i32 16, i32 24, i32 31)
  %v0_10007a50 = load i32, i32* @lr, align 4
  %v1_10007a50 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007a50 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007a50 = or i1 %v1_10007a50, %v2_10007a50
  call void @__pseudo_cond_branch(i1 %v3_10007a50, i32 %v0_10007a50)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007a58 = inttoptr i32 %v2_10007a2c to i32*
  br label %dec_label_pc_10007a58

dec_label_pc_10007a58:                            ; preds = %dec_label_pc_10007a58, %dec_label_pc_10007a20
  %v1_10007a64 = phi i32 [ %v1_10007a98, %dec_label_pc_10007a58 ], [ 0, %dec_label_pc_10007a20 ]
  %v2_10007a58 = load i32, i32* %v1_10007a58, align 4
  %v2_10007a5c = add i32 %v2_10007a58, %v1_10007a64
  %v3_10007a5c = inttoptr i32 %v2_10007a5c to i8*
  %v4_10007a5c = load i8, i8* %v3_10007a5c, align 1
  %v5_10007a5c = zext i8 %v4_10007a5c to i32
  %v0_10007a60 = load i32, i32* %r6.global-to-local, align 4
  %v2_10007a60 = xor i32 %v0_10007a60, %v5_10007a5c
  %v3_10007a64 = trunc i32 %v2_10007a60 to i8
  store i8 %v3_10007a64, i8* %v3_10007a5c, align 1
  %v2_10007a68 = load i32, i32* %v1_10007a58, align 4
  %v0_10007a6c = load i32, i32* %r10.global-to-local, align 4
  %v2_10007a6c = add i32 %v0_10007a6c, %v2_10007a68
  %v3_10007a6c = inttoptr i32 %v2_10007a6c to i8*
  %v4_10007a6c = load i8, i8* %v3_10007a6c, align 1
  %v5_10007a6c = zext i8 %v4_10007a6c to i32
  %v2_10007a70 = xor i32 %v5_10007a6c, %v1_10007a48
  %v3_10007a74 = trunc i32 %v2_10007a70 to i8
  store i8 %v3_10007a74, i8* %v3_10007a6c, align 1
  %v2_10007a78 = load i32, i32* %v1_10007a58, align 4
  %v0_10007a7c = load i32, i32* %r10.global-to-local, align 4
  %v2_10007a7c = add i32 %v0_10007a7c, %v2_10007a78
  %v3_10007a7c = inttoptr i32 %v2_10007a7c to i8*
  %v4_10007a7c = load i8, i8* %v3_10007a7c, align 1
  %v5_10007a7c = zext i8 %v4_10007a7c to i32
  %v2_10007a80 = xor i32 %v5_10007a7c, %v1_10007a4c
  %v3_10007a84 = trunc i32 %v2_10007a80 to i8
  store i8 %v3_10007a84, i8* %v3_10007a7c, align 1
  %v2_10007a88 = load i32, i32* %v1_10007a58, align 4
  %v0_10007a8c = load i32, i32* %r10.global-to-local, align 4
  %v2_10007a8c = add i32 %v0_10007a8c, %v2_10007a88
  %v3_10007a8c = inttoptr i32 %v2_10007a8c to i8*
  %v4_10007a8c = load i8, i8* %v3_10007a8c, align 1
  %v5_10007a8c = zext i8 %v4_10007a8c to i32
  %v0_10007a90 = load i32, i32* @r5, align 4
  %v2_10007a90 = xor i32 %v0_10007a90, %v5_10007a8c
  %v3_10007a94 = trunc i32 %v2_10007a90 to i8
  store i8 %v3_10007a94, i8* %v3_10007a8c, align 1
  %v0_10007a98 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007a98 = add i32 %v0_10007a98, 1
  store i32 %v1_10007a98, i32* %r10.global-to-local, align 4
  %v3_10007a9c = load i16, i16* %v2_10007a34, align 4
  %v4_10007a9c = zext i16 %v3_10007a9c to i32
  %v2_10007aa0 = icmp slt i32 %v4_10007a9c, %v1_10007a98
  %v3_10007aa0 = icmp sgt i32 %v4_10007a9c, %v1_10007a98
  %v4_10007aa0 = icmp eq i32 %v4_10007a9c, %v1_10007a98
  store i1 %v2_10007aa0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007aa0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007aa0, label %dec_label_pc_10007a58, label %dec_label_pc_10007aa8

dec_label_pc_10007aa8:                            ; preds = %dec_label_pc_10007a58
  ret i32 %v2_10007a2c

; uselistorder directives
  uselistorder i32 %v4_10007a9c, { 2, 1, 0 }
  uselistorder i32 %v1_10007a98, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10007a3c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10007a24, { 1, 0 }
}

define i32 @function_10007aac(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007aac:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10007ab0 = mul i32 %arg1, 8
  %v2_10007ab8 = add i32 %v1_10007ab0, ptrtoint (i32* @global_var_1001b800.163 to i32)
  %v1_10007ac0 = add i32 %v1_10007ab0, add (i32 ptrtoint (i32* @global_var_1001b800.163 to i32), i32 4)
  %v2_10007ac0 = inttoptr i32 %v1_10007ac0 to i16*
  %v3_10007ac0 = load i16, i16* %v2_10007ac0, align 4
  %v3_10007ac4 = icmp eq i16 %v3_10007ac0, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ac4, i1* %cr7_eq.global-to-local, align 1
  %v3_10007ac8 = load i32, i32* @global_var_1001b6fc.164, align 4
  %v1_10007acc = udiv i32 %v3_10007ac8, 16777216
  store i32 %v1_10007acc, i32* @r5, align 4
  %v1_10007ad0 = urem i32 %v3_10007ac8, 256
  store i32 %v1_10007ad0, i32* %r6.global-to-local, align 4
  %v1_10007ad4 = call i32 @__asm_rlwinm(i32 %v3_10007ac8, i32 24, i32 24, i32 31)
  %v1_10007ad8 = call i32 @__asm_rlwinm(i32 %v3_10007ac8, i32 16, i32 24, i32 31)
  %v0_10007adc = load i32, i32* @lr, align 4
  %v1_10007adc = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007adc = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007adc = or i1 %v1_10007adc, %v2_10007adc
  call void @__pseudo_cond_branch(i1 %v3_10007adc, i32 %v0_10007adc)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007ae4 = inttoptr i32 %v2_10007ab8 to i32*
  br label %dec_label_pc_10007ae4

dec_label_pc_10007ae4:                            ; preds = %dec_label_pc_10007ae4, %dec_label_pc_10007aac
  %v1_10007af0 = phi i32 [ %v1_10007b24, %dec_label_pc_10007ae4 ], [ 0, %dec_label_pc_10007aac ]
  %v2_10007ae4 = load i32, i32* %v1_10007ae4, align 4
  %v2_10007ae8 = add i32 %v2_10007ae4, %v1_10007af0
  %v3_10007ae8 = inttoptr i32 %v2_10007ae8 to i8*
  %v4_10007ae8 = load i8, i8* %v3_10007ae8, align 1
  %v5_10007ae8 = zext i8 %v4_10007ae8 to i32
  %v0_10007aec = load i32, i32* %r6.global-to-local, align 4
  %v2_10007aec = xor i32 %v0_10007aec, %v5_10007ae8
  %v3_10007af0 = trunc i32 %v2_10007aec to i8
  store i8 %v3_10007af0, i8* %v3_10007ae8, align 1
  %v2_10007af4 = load i32, i32* %v1_10007ae4, align 4
  %v0_10007af8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007af8 = add i32 %v0_10007af8, %v2_10007af4
  %v3_10007af8 = inttoptr i32 %v2_10007af8 to i8*
  %v4_10007af8 = load i8, i8* %v3_10007af8, align 1
  %v5_10007af8 = zext i8 %v4_10007af8 to i32
  %v2_10007afc = xor i32 %v5_10007af8, %v1_10007ad4
  %v3_10007b00 = trunc i32 %v2_10007afc to i8
  store i8 %v3_10007b00, i8* %v3_10007af8, align 1
  %v2_10007b04 = load i32, i32* %v1_10007ae4, align 4
  %v0_10007b08 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007b08 = add i32 %v0_10007b08, %v2_10007b04
  %v3_10007b08 = inttoptr i32 %v2_10007b08 to i8*
  %v4_10007b08 = load i8, i8* %v3_10007b08, align 1
  %v5_10007b08 = zext i8 %v4_10007b08 to i32
  %v2_10007b0c = xor i32 %v5_10007b08, %v1_10007ad8
  %v3_10007b10 = trunc i32 %v2_10007b0c to i8
  store i8 %v3_10007b10, i8* %v3_10007b08, align 1
  %v2_10007b14 = load i32, i32* %v1_10007ae4, align 4
  %v0_10007b18 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007b18 = add i32 %v0_10007b18, %v2_10007b14
  %v3_10007b18 = inttoptr i32 %v2_10007b18 to i8*
  %v4_10007b18 = load i8, i8* %v3_10007b18, align 1
  %v5_10007b18 = zext i8 %v4_10007b18 to i32
  %v0_10007b1c = load i32, i32* @r5, align 4
  %v2_10007b1c = xor i32 %v0_10007b1c, %v5_10007b18
  %v3_10007b20 = trunc i32 %v2_10007b1c to i8
  store i8 %v3_10007b20, i8* %v3_10007b18, align 1
  %v0_10007b24 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007b24 = add i32 %v0_10007b24, 1
  store i32 %v1_10007b24, i32* %r10.global-to-local, align 4
  %v3_10007b28 = load i16, i16* %v2_10007ac0, align 4
  %v4_10007b28 = zext i16 %v3_10007b28 to i32
  %v2_10007b2c = icmp slt i32 %v4_10007b28, %v1_10007b24
  %v3_10007b2c = icmp sgt i32 %v4_10007b28, %v1_10007b24
  %v4_10007b2c = icmp eq i32 %v4_10007b28, %v1_10007b24
  store i1 %v2_10007b2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007b2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b2c, label %dec_label_pc_10007ae4, label %dec_label_pc_10007b34

dec_label_pc_10007b34:                            ; preds = %dec_label_pc_10007ae4
  ret i32 %v2_10007ab8

; uselistorder directives
  uselistorder i32 %v4_10007b28, { 2, 1, 0 }
  uselistorder i32 %v1_10007b24, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10007ac8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10007ab0, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001b800.163 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001b800.163 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10007b38(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007b38:
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 5, i32* %r23.global-to-local, align 4
  store i32 6, i32* %r24.global-to-local, align 4
  store i32 14, i32* %r25.global-to-local, align 4
  store i32 7, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268467068, i32* @lr, align 4
  %v0_10007b78 = call i32 @function_100095a0()
  store i32 %v0_10007b78, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007b98.166 to i32), i32* @lr, align 4
  %v4_10007b94 = call i32 @function_10007f44(i32 ptrtoint ([3 x i8]* @global_var_1000b164.165 to i32), i32 2, i32 2)
  store i32 2, i32* @r3, align 4
  %v0_10007b9c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b9c, i32* @global_var_1001b808.167, align 4
  %v0_10007ba0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007ba0 = trunc i32 %v0_10007ba0 to i16
  store i16 %v1_10007ba0, i16* bitcast (i32* @global_var_1001b80c.168 to i16*), align 4
  store i32 268467112, i32* @lr, align 4
  %v0_10007ba4 = call i32 @function_100095a0()
  store i32 %v0_10007ba4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007bbc.170 to i32), i32* @lr, align 4
  %v3_10007bb8 = call i32 @function_10007f44(i32 ptrtoint (i32* @global_var_1000b168.169 to i32), i32 2, i32 2)
  store i32 29, i32* @r3, align 4
  %v0_10007bc0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007bc0, i32* @global_var_1001b810.171, align 4
  %v0_10007bc4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007bc4 = trunc i32 %v0_10007bc4 to i16
  store i16 %v1_10007bc4, i16* bitcast (i32* @global_var_1001b814.172 to i16*), align 4
  store i32 268467148, i32* @lr, align 4
  %v0_10007bc8 = call i32 @function_100095a0()
  store i32 %v0_10007bc8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007be0.174 to i32), i32* @lr, align 4
  %v3_10007bdc = call i32 @function_10007f44(i32 ptrtoint (i32* @global_var_1000b24c.173 to i32), i32 29, i32 29)
  store i32 7, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001b81c.175 to i16*), align 4
  %v0_10007bec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007bec, i32* @global_var_1001b818.176, align 4
  store i32 268467188, i32* @lr, align 4
  %v0_10007bf0 = call i32 @function_100095a0()
  store i32 %v0_10007bf0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c08.178 to i32), i32* @lr, align 4
  %v4_10007c04 = call i32 @function_10007f44(i32 ptrtoint ([8 x i8]* @global_var_1000b16c.177 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10007c0c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c0c, i32* @global_var_1001b868.179, align 4
  store i32 8, i32* %r27.global-to-local, align 4
  %v0_10007c14 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007c14 = trunc i32 %v0_10007c14 to i16
  store i16 %v1_10007c14, i16* bitcast (i32* @global_var_1001b86c.180 to i16*), align 4
  store i32 268467228, i32* @lr, align 4
  %v0_10007c18 = call i32 @function_100095a0()
  store i32 %v0_10007c18, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c30.182 to i32), i32* @lr, align 4
  %v4_10007c2c = call i32 @function_10007f44(i32 ptrtoint ([6 x i8]* @global_var_1000b174.181 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_10007c34 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c34, i32* @global_var_1001b870.183, align 4
  %v0_10007c38 = load i32, i32* %r23.global-to-local, align 4
  %v1_10007c38 = trunc i32 %v0_10007c38 to i16
  store i16 %v1_10007c38, i16* bitcast (i32* @global_var_1001b874.184 to i16*), align 4
  store i32 268467264, i32* @lr, align 4
  %v0_10007c3c = call i32 @function_100095a0()
  store i32 %v0_10007c3c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007c54.186 to i32), i32* @lr, align 4
  %v4_10007c50 = call i32 @function_10007f44(i32 ptrtoint ([5 x i8]* @global_var_1000b17c.185 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001b87c.187 to i16*), align 4
  %v0_10007c60 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c60, i32* @global_var_1001b878.188, align 4
  store i32 268467304, i32* @lr, align 4
  %v0_10007c64 = call i32 @function_100095a0()
  store i32 %v0_10007c64, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c7c.190 to i32), i32* @lr, align 4
  %v4_10007c78 = call i32 @function_10007f44(i32 ptrtoint ([7 x i8]* @global_var_1000b184.189 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10007c80 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007c80, i32* @global_var_1001b880.191, align 4
  %v0_10007c84 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007c84 = trunc i32 %v0_10007c84 to i16
  store i16 %v1_10007c84, i16* bitcast (i32* @global_var_1001b884.192 to i16*), align 4
  store i32 268467340, i32* @lr, align 4
  %v0_10007c88 = call i32 @function_100095a0()
  store i32 %v0_10007c88, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007ca0.194 to i32), i32* @lr, align 4
  %v4_10007c9c = call i32 @function_10007f44(i32 ptrtoint ([15 x i8]* @global_var_1000b18c.193 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_10007ca4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007ca4, i32* @global_var_1001b888.195, align 4
  %v0_10007ca8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007ca8 = trunc i32 %v0_10007ca8 to i16
  store i16 %v1_10007ca8, i16* bitcast (i32* @global_var_1001b88c.196 to i16*), align 4
  store i32 268467376, i32* @lr, align 4
  %v0_10007cac = call i32 @function_100095a0()
  store i32 %v0_10007cac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007cc4.198 to i32), i32* @lr, align 4
  %v4_10007cc0 = call i32 @function_10007f44(i32 ptrtoint ([9 x i8]* @global_var_1000b19c.197 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10007cc8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007cc8, i32* @global_var_1001b8e8.199, align 4
  %v0_10007ccc = load i32, i32* %r27.global-to-local, align 4
  %v1_10007ccc = trunc i32 %v0_10007ccc to i16
  store i16 %v1_10007ccc, i16* bitcast (i32* @global_var_1001b8ec.200 to i16*), align 4
  store i32 268467412, i32* @lr, align 4
  %v0_10007cd0 = call i32 @function_100095a0()
  store i32 %v0_10007cd0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007ce8.202 to i32), i32* @lr, align 4
  %v4_10007ce4 = call i32 @function_10007f44(i32 ptrtoint ([8 x i8]* @global_var_1000b1a8.201 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_10007cec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007cec, i32* @global_var_1001b8f0.203, align 4
  %v0_10007cf0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007cf0 = trunc i32 %v0_10007cf0 to i16
  store i16 %v1_10007cf0, i16* bitcast (i32* @global_var_1001b8f4.204 to i16*), align 4
  store i32 268467448, i32* @lr, align 4
  %v0_10007cf4 = call i32 @function_100095a0()
  store i32 %v0_10007cf4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007d0c.206 to i32), i32* @lr, align 4
  %v4_10007d08 = call i32 @function_10007f44(i32 ptrtoint ([17 x i8]* @global_var_1000b1b0.205 to i32), i32 16, i32 16)
  store i32 8, i32* @r3, align 4
  store i16 16, i16* bitcast (i32* @global_var_1001b894.207 to i16*), align 4
  %v0_10007d18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d18, i32* @global_var_1001b890.208, align 4
  store i32 268467488, i32* @lr, align 4
  %v0_10007d1c = call i32 @function_100095a0()
  store i32 %v0_10007d1c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007d34.210 to i32), i32* @lr, align 4
  %v4_10007d30 = call i32 @function_10007f44(i32 ptrtoint ([9 x i8]* @global_var_1000b1c4.209 to i32), i32 8, i32 8)
  store i32 21, i32* @r3, align 4
  %v0_10007d38 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d38, i32* @global_var_1001b898.211, align 4
  %v0_10007d3c = load i32, i32* %r27.global-to-local, align 4
  %v1_10007d3c = trunc i32 %v0_10007d3c to i16
  store i16 %v1_10007d3c, i16* bitcast (i32* @global_var_1001b89c.212 to i16*), align 4
  store i32 268467524, i32* @lr, align 4
  %v0_10007d40 = call i32 @function_100095a0()
  store i32 %v0_10007d40, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007d58.214 to i32), i32* @lr, align 4
  %v3_10007d54 = call i32 @function_10007f44(i32 ptrtoint (i32* @global_var_1000b26c.213 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001b8a4.215 to i16*), align 4
  %v0_10007d64 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d64, i32* @global_var_1001b8a0.216, align 4
  store i32 268467564, i32* @lr, align 4
  %v0_10007d68 = call i32 @function_100095a0()
  store i32 %v0_10007d68, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007d80.218 to i32), i32* @lr, align 4
  %v4_10007d7c = call i32 @function_10007f44(i32 ptrtoint ([18 x i8]* @global_var_1000b1d0.217 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001b8ac.219 to i16*), align 4
  %v0_10007d8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007d8c, i32* @global_var_1001b8a8.220, align 4
  store i32 268467604, i32* @lr, align 4
  %v0_10007d90 = call i32 @function_100095a0()
  store i32 %v0_10007d90, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007da8.222 to i32), i32* @lr, align 4
  %v4_10007da4 = call i32 @function_10007f44(i32 ptrtoint ([13 x i8]* @global_var_1000b1e4.221 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001b8b4.223 to i16*), align 4
  %v0_10007db4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007db4, i32* @global_var_1001b8b0.224, align 4
  store i32 268467644, i32* @lr, align 4
  %v0_10007db8 = call i32 @function_100095a0()
  store i32 %v0_10007db8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007dd0.226 to i32), i32* @lr, align 4
  %v4_10007dcc = call i32 @function_10007f44(i32 ptrtoint ([15 x i8]* @global_var_1000b1f4.225 to i32), i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10007dd4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007dd4, i32* @global_var_1001b8b8.227, align 4
  %v0_10007dd8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007dd8 = trunc i32 %v0_10007dd8 to i16
  store i16 %v1_10007dd8, i16* bitcast (i32* @global_var_1001b8bc.228 to i16*), align 4
  store i32 268467680, i32* @lr, align 4
  %v0_10007ddc = call i32 @function_100095a0()
  store i32 %v0_10007ddc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007df4.230 to i32), i32* @lr, align 4
  %v4_10007df0 = call i32 @function_10007f44(i32 ptrtoint ([20 x i8]* @global_var_1000b204.229 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  store i16 19, i16* bitcast (i32* @global_var_1001b8c4.231 to i16*), align 4
  %v0_10007e00 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e00, i32* @global_var_1001b8c0.232, align 4
  store i32 268467720, i32* @lr, align 4
  %v0_10007e04 = call i32 @function_100095a0()
  store i32 %v0_10007e04, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007e1c.234 to i32), i32* @lr, align 4
  %v4_10007e18 = call i32 @function_10007f44(i32 ptrtoint ([9 x i8]* @global_var_1000b218.233 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_10007e20 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e20, i32* @global_var_1001b8c8.235, align 4
  %v0_10007e24 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007e24 = trunc i32 %v0_10007e24 to i16
  store i16 %v1_10007e24, i16* bitcast (i32* @global_var_1001b8cc.236 to i16*), align 4
  store i32 268467756, i32* @lr, align 4
  %v0_10007e28 = call i32 @function_100095a0()
  store i32 %v0_10007e28, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007e40.238 to i32), i32* @lr, align 4
  %v4_10007e3c = call i32 @function_10007f44(i32 ptrtoint ([6 x i8]* @global_var_1000b224.237 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_10007e44 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e44, i32* @global_var_1001b8d0.239, align 4
  %v0_10007e48 = load i32, i32* %r23.global-to-local, align 4
  %v1_10007e48 = trunc i32 %v0_10007e48 to i16
  store i16 %v1_10007e48, i16* bitcast (i32* @global_var_1001b8d4.240 to i16*), align 4
  store i32 268467792, i32* @lr, align 4
  %v0_10007e4c = call i32 @function_100095a0()
  store i32 %v0_10007e4c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007e64.242 to i32), i32* @lr, align 4
  %v4_10007e60 = call i32 @function_10007f44(i32 ptrtoint ([7 x i8]* @global_var_1000b22c.241 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_10007e68 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e68, i32* @global_var_1001b8d8.243, align 4
  %v0_10007e6c = load i32, i32* %r24.global-to-local, align 4
  %v1_10007e6c = trunc i32 %v0_10007e6c to i16
  store i16 %v1_10007e6c, i16* bitcast (i32* @global_var_1001b8dc.244 to i16*), align 4
  store i32 268467828, i32* @lr, align 4
  %v0_10007e70 = call i32 @function_100095a0()
  store i32 %v0_10007e70, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007e88.246 to i32), i32* @lr, align 4
  %v4_10007e84 = call i32 @function_10007f44(i32 ptrtoint ([24 x i8]* @global_var_1000b234.245 to i32), i32 23, i32 23)
  store i16 23, i16* bitcast (i32* @global_var_1001b8e4.247 to i16*), align 4
  %v0_10007e94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007e94, i32* @global_var_1001b8e0.248, align 4
  ret i32 %v4_10007e84

; uselistorder directives
  uselistorder i16 23, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 21, { 0, 1, 5, 6, 7, 8, 9, 10, 11, 2, 12, 3, 13, 4, 14 }
  uselistorder i32 (i32, i32, i32)* @function_10007f44, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 2, 1, 9, 8, 7, 6, 5, 4, 3, 0 }
}

define i32 @function_10007ec0(i8* %arg1) local_unnamed_addr {
dec_label_pc_10007ec0:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10007ec0 = load i8, i8* %arg1, align 1
  %v3_10007ecc = icmp eq i8 %v3_10007ec0, 0
  %v0_10007ed0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007ecc, i32 %v0_10007ed0)
  br label %dec_label_pc_10007ed4

dec_label_pc_10007ed4:                            ; preds = %dec_label_pc_10007ed4, %dec_label_pc_10007ec0
  %v0_10007ed4 = phi i32 [ %v1_10007ed4, %dec_label_pc_10007ed4 ], [ 0, %dec_label_pc_10007ec0 ]
  %v1_10007ed4 = add i32 %v0_10007ed4, 1
  %v2_10007ed8 = add i32 %v1_10007ed4, %tmp
  %v3_10007ed8 = inttoptr i32 %v2_10007ed8 to i8*
  %v4_10007ed8 = load i8, i8* %v3_10007ed8, align 1
  %v3_10007edc = icmp eq i8 %v4_10007ed8, 0
  br i1 %v3_10007edc, label %dec_label_pc_10007ee4, label %dec_label_pc_10007ed4

dec_label_pc_10007ee4:                            ; preds = %dec_label_pc_10007ed4
  ret i32 %v1_10007ed4
}

define i32 @function_10007ee8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007ee8:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10007ee8 = load i8, i8* %arg1, align 1
  %v3_10007eec = icmp eq i8 %v2_10007ee8, 0
  br i1 %v3_10007eec, label %dec_label_pc_10007f38, label %dec_label_pc_10007ef4

dec_label_pc_10007ef4:                            ; preds = %dec_label_pc_10007ee8
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007ef8

dec_label_pc_10007ef8:                            ; preds = %dec_label_pc_10007ef8, %dec_label_pc_10007ef4
  %v0_10007ef8 = phi i32 [ %v1_10007ef8, %dec_label_pc_10007ef8 ], [ 0, %dec_label_pc_10007ef4 ]
  %v1_10007ef8 = add i32 %v0_10007ef8, 1
  store i32 %v1_10007ef8, i32* %r9.global-to-local, align 4
  %v2_10007efc = add i32 %v1_10007ef8, %tmp
  %v3_10007efc = inttoptr i32 %v2_10007efc to i8*
  %v4_10007efc = load i8, i8* %v3_10007efc, align 1
  %v3_10007f00 = icmp eq i8 %v4_10007efc, 0
  br i1 %v3_10007f00, label %dec_label_pc_10007f08, label %dec_label_pc_10007ef8

dec_label_pc_10007f08:                            ; preds = %dec_label_pc_10007ef8
  %v3_10007f08 = icmp eq i32 %v1_10007ef8, -1
  br i1 %v3_10007f08, label %dec_label_pc_10007f30, label %dec_label_pc_10007f10

dec_label_pc_10007f10:                            ; preds = %dec_label_pc_10007f08
  %phitmp = add i32 %v0_10007ef8, 2
  br label %dec_label_pc_10007f14

dec_label_pc_10007f14:                            ; preds = %dec_label_pc_10007f38, %dec_label_pc_10007f10
  %v0_10007f14 = phi i32 [ 1, %dec_label_pc_10007f38 ], [ %phitmp, %dec_label_pc_10007f10 ]
  store i32 %v0_10007f14, i32* %ctr.global-to-local, align 4
  %v2_10007f24.pre = load i32, i32* @r3, align 4
  %v2_10007f1c8 = load i8, i8* %arg1, align 1
  %v1_10007f2010 = add i32 %tmp, 1
  store i32 %v1_10007f2010, i32* %r4.global-to-local, align 4
  %v3_10007f2411 = inttoptr i32 %v2_10007f24.pre to i8*
  store i8 %v2_10007f1c8, i8* %v3_10007f2411, align 1
  %v0_10007f2812 = load i32, i32* @r3, align 4
  %v1_10007f2813 = add i32 %v0_10007f2812, 1
  store i32 %v1_10007f2813, i32* %r3.global-to-local, align 4
  %v0_10007f2c14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007f2c15 = add i32 %v0_10007f2c14, -1
  store i32 %v1_10007f2c15, i32* %ctr.global-to-local, align 4
  %v2_10007f2c16 = icmp eq i32 %v1_10007f2c15, 0
  br i1 %v2_10007f2c16, label %dec_label_pc_10007f30.loopexit, label %dec_label_pc_10007f1c.dec_label_pc_10007f1c_crit_edge

dec_label_pc_10007f1c.dec_label_pc_10007f1c_crit_edge: ; preds = %dec_label_pc_10007f14, %dec_label_pc_10007f1c.dec_label_pc_10007f1c_crit_edge
  %v1_10007f2817 = phi i32 [ %v1_10007f28, %dec_label_pc_10007f1c.dec_label_pc_10007f1c_crit_edge ], [ %v1_10007f2813, %dec_label_pc_10007f14 ]
  %v0_10007f1c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10007f1c = inttoptr i32 %v0_10007f1c.pre to i8*
  %v2_10007f1c = load i8, i8* %v1_10007f1c, align 1
  %v1_10007f20 = add i32 %v0_10007f1c.pre, 1
  store i32 %v1_10007f20, i32* %r4.global-to-local, align 4
  %v3_10007f24 = inttoptr i32 %v1_10007f2817 to i8*
  store i8 %v2_10007f1c, i8* %v3_10007f24, align 1
  %v0_10007f28 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007f28 = add i32 %v0_10007f28, 1
  store i32 %v1_10007f28, i32* %r3.global-to-local, align 4
  %v0_10007f2c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007f2c = add i32 %v0_10007f2c, -1
  store i32 %v1_10007f2c, i32* %ctr.global-to-local, align 4
  %v2_10007f2c = icmp eq i32 %v1_10007f2c, 0
  br i1 %v2_10007f2c, label %dec_label_pc_10007f30.loopexit, label %dec_label_pc_10007f1c.dec_label_pc_10007f1c_crit_edge

dec_label_pc_10007f30.loopexit:                   ; preds = %dec_label_pc_10007f1c.dec_label_pc_10007f1c_crit_edge, %dec_label_pc_10007f14
  %v0_10007f30.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007f30

dec_label_pc_10007f30:                            ; preds = %dec_label_pc_10007f30.loopexit, %dec_label_pc_10007f08
  %v0_10007f30 = phi i32 [ %v0_10007f30.pre, %dec_label_pc_10007f30.loopexit ], [ -1, %dec_label_pc_10007f08 ]
  store i32 %v0_10007f30, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007f30

dec_label_pc_10007f38:                            ; preds = %dec_label_pc_10007ee8
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007f14

; uselistorder directives
  uselistorder i32 %v0_10007f30, { 1, 0 }
  uselistorder i32 %v1_10007f2c, { 1, 0 }
  uselistorder i32 %v1_10007f28, { 1, 0 }
  uselistorder i32 %v1_10007ef8, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007f1c.dec_label_pc_10007f1c_crit_edge, { 1, 0 }
}

define i32 @function_10007f44(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007f44:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007f44 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10007f4c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007f44, i32 %v0_10007f4c)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007f54

dec_label_pc_10007f54:                            ; preds = %dec_label_pc_10007f54, %dec_label_pc_10007f44
  %v0_10007f54 = phi i32 [ %v1_10007f5c, %dec_label_pc_10007f54 ], [ 0, %dec_label_pc_10007f44 ]
  %v2_10007f54 = add i32 %v0_10007f54, %arg2
  %v3_10007f54 = inttoptr i32 %v2_10007f54 to i8*
  %v4_10007f54 = load i8, i8* %v3_10007f54, align 1
  %v4_10007f58 = add i32 %v0_10007f54, %arg1
  %v5_10007f58 = inttoptr i32 %v4_10007f58 to i8*
  store i8 %v4_10007f54, i8* %v5_10007f58, align 1
  %v0_10007f5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10007f5c = add i32 %v0_10007f5c, 1
  store i32 %v1_10007f5c, i32* %r9.global-to-local, align 4
  %v0_10007f60 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007f60 = add i32 %v0_10007f60, -1
  store i32 %v1_10007f60, i32* %ctr.global-to-local, align 4
  %v2_10007f60 = icmp eq i32 %v1_10007f60, 0
  br i1 %v2_10007f60, label %dec_label_pc_10007f64, label %dec_label_pc_10007f54

dec_label_pc_10007f64:                            ; preds = %dec_label_pc_10007f54
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10007f60, { 1, 0 }
  uselistorder i32 %v1_10007f5c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10007f68() local_unnamed_addr {
dec_label_pc_10007f68:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007f68 = load i32, i32* @r4, align 4
  store i32 %v0_10007f68, i32* %r0.global-to-local, align 4
  %v3_10007f68 = icmp eq i32 %v0_10007f68, 0
  store i32 %v0_10007f68, i32* %ctr.global-to-local, align 4
  %v0_10007f70 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007f68, i32 %v0_10007f70)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007f7c3 = load i32, i32* @r3, align 4
  %v5_10007f7c4 = inttoptr i32 %v2_10007f7c3 to i8*
  store i8 0, i8* %v5_10007f7c4, align 1
  %v0_10007f805 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007f806 = add i32 %v0_10007f805, 1
  store i32 %v1_10007f806, i32* %r9.global-to-local, align 4
  %v0_10007f847 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007f848 = add i32 %v0_10007f847, -1
  store i32 %v1_10007f848, i32* %ctr.global-to-local, align 4
  %v2_10007f849 = icmp eq i32 %v1_10007f848, 0
  br i1 %v2_10007f849, label %dec_label_pc_10007f88, label %dec_label_pc_10007f7c.dec_label_pc_10007f7c_crit_edge

dec_label_pc_10007f7c.dec_label_pc_10007f7c_crit_edge: ; preds = %dec_label_pc_10007f68, %dec_label_pc_10007f7c.dec_label_pc_10007f7c_crit_edge
  %v1_10007f8010 = phi i32 [ %v1_10007f80, %dec_label_pc_10007f7c.dec_label_pc_10007f7c_crit_edge ], [ %v1_10007f806, %dec_label_pc_10007f68 ]
  %v0_10007f7c.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10007f7c.pre to i8
  %v2_10007f7c = load i32, i32* @r3, align 4
  %v4_10007f7c = add i32 %v2_10007f7c, %v1_10007f8010
  %v5_10007f7c = inttoptr i32 %v4_10007f7c to i8*
  store i8 %extract.t, i8* %v5_10007f7c, align 1
  %v0_10007f80 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007f80 = add i32 %v0_10007f80, 1
  store i32 %v1_10007f80, i32* %r9.global-to-local, align 4
  %v0_10007f84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007f84 = add i32 %v0_10007f84, -1
  store i32 %v1_10007f84, i32* %ctr.global-to-local, align 4
  %v2_10007f84 = icmp eq i32 %v1_10007f84, 0
  br i1 %v2_10007f84, label %dec_label_pc_10007f88, label %dec_label_pc_10007f7c.dec_label_pc_10007f7c_crit_edge

dec_label_pc_10007f88:                            ; preds = %dec_label_pc_10007f7c.dec_label_pc_10007f7c_crit_edge, %dec_label_pc_10007f68
  %v0_10007f88 = load i32, i32* @r3, align 4
  ret i32 %v0_10007f88

; uselistorder directives
  uselistorder i32 %v1_10007f84, { 1, 0 }
  uselistorder i32 %v1_10007f80, { 1, 0 }
  uselistorder i32 %v0_10007f68, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007f7c.dec_label_pc_10007f7c_crit_edge, { 1, 0 }
}

define i32 @function_10007f8c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007f8c:
  %v3_10007f8c = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10007f8c, label %dec_label_pc_10007f98, label %dec_label_pc_10007fa0

dec_label_pc_10007f98:                            ; preds = %dec_label_pc_10007fbc, %dec_label_pc_10007f8c, %dec_label_pc_10007fa0
  ret i32 -1

dec_label_pc_10007fa0:                            ; preds = %dec_label_pc_10007f8c
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10007f98, label %dec_label_pc_10007fa8

dec_label_pc_10007fa8:                            ; preds = %dec_label_pc_10007fa0
  br label %dec_label_pc_10007fc4

dec_label_pc_10007fb8:                            ; preds = %dec_label_pc_10007fc4
  br label %dec_label_pc_10007fbc

dec_label_pc_10007fbc:                            ; preds = %dec_label_pc_10007fdc, %dec_label_pc_10007fb8
  %v0_10007fc41 = phi i32 [ %v1_10007fc8, %dec_label_pc_10007fdc ], [ 0, %dec_label_pc_10007fb8 ]
  %v1_10007fbc = add i32 %v0_10007fe0, 1
  %v1_10007fc0 = add i32 %v0_10007fc0, -1
  %v2_10007fc0 = icmp eq i32 %v1_10007fc0, 0
  br i1 %v2_10007fc0, label %dec_label_pc_10007f98, label %dec_label_pc_10007fc4

dec_label_pc_10007fc4:                            ; preds = %dec_label_pc_10007fbc, %dec_label_pc_10007fa8
  %v0_10007fc0 = phi i32 [ %v1_10007fc0, %dec_label_pc_10007fbc ], [ %arg2, %dec_label_pc_10007fa8 ]
  %v0_10007fe0 = phi i32 [ %v1_10007fbc, %dec_label_pc_10007fbc ], [ 0, %dec_label_pc_10007fa8 ]
  %v0_10007fc4 = phi i32 [ %v0_10007fc41, %dec_label_pc_10007fbc ], [ 0, %dec_label_pc_10007fa8 ]
  %v2_10007fc4 = add i32 %v0_10007fc4, %arg3
  %v3_10007fc4 = inttoptr i32 %v2_10007fc4 to i8*
  %v4_10007fc4 = load i8, i8* %v3_10007fc4, align 1
  %v1_10007fc8 = add i32 %v0_10007fc4, 1
  %v2_10007fcc = add i32 %v0_10007fe0, %arg1
  %v3_10007fcc = inttoptr i32 %v2_10007fcc to i8*
  %v4_10007fcc = load i8, i8* %v3_10007fcc, align 1
  %v4_10007fd4 = icmp eq i8 %v4_10007fcc, %v4_10007fc4
  br i1 %v4_10007fd4, label %dec_label_pc_10007fdc, label %dec_label_pc_10007fb8

dec_label_pc_10007fdc:                            ; preds = %dec_label_pc_10007fc4
  %v4_10007fd0 = icmp eq i32 %v1_10007fc8, %arg4
  br i1 %v4_10007fd0, label %dec_label_pc_10007fe0, label %dec_label_pc_10007fbc

dec_label_pc_10007fe0:                            ; preds = %dec_label_pc_10007fdc
  %v1_10007fe0 = add i32 %v0_10007fe0, 1
  ret i32 %v1_10007fe0

; uselistorder directives
  uselistorder i32 %v0_10007fc4, { 1, 0 }
  uselistorder label %dec_label_pc_10007f98, { 0, 2, 1 }
}

define i32 @function_10007fe8(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10007fe8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007fe8

dec_label_pc_10007fe8:                            ; preds = %dec_label_pc_10008004, %dec_label_pc_10007fe8, %bb
  %v0_10007fe8 = phi i32 [ %v0_10007fe8.pre, %bb ], [ %v1_10007fec, %dec_label_pc_10007fe8 ], [ %v1_10007fec, %dec_label_pc_10008004 ]
  %v1_10007fe8 = inttoptr i32 %v0_10007fe8 to i8*
  %v2_10007fe8 = load i8, i8* %v1_10007fe8, align 1
  %v1_10007fec = add i32 %v0_10007fe8, 1
  %v3_10007ff8 = icmp eq i8 %v2_10007fe8, 32
  br i1 %v3_10007ff8, label %dec_label_pc_10007fe8, label %dec_label_pc_10008004

dec_label_pc_10008004:                            ; preds = %dec_label_pc_10007fe8
  %v2_10007fe8.off = add i8 %v2_10007fe8, -9
  %tmp = icmp ult i8 %v2_10007fe8.off, 2
  br i1 %tmp, label %dec_label_pc_10007fe8, label %dec_label_pc_10008010

dec_label_pc_10008010:                            ; preds = %dec_label_pc_10008004
  %v3_10008010 = icmp eq i8 %v2_10007fe8, 45
  br i1 %v3_10008010, label %dec_label_pc_100080bc, label %dec_label_pc_10008018

dec_label_pc_10008018:                            ; preds = %dec_label_pc_10008010
  %v3_10008018 = icmp eq i8 %v2_10007fe8, 43
  br i1 %v3_10008018, label %dec_label_pc_10008114, label %dec_label_pc_10008020

dec_label_pc_10008020:                            ; preds = %dec_label_pc_10008018, %dec_label_pc_10008114
  %v0_100080b026 = phi i32 [ %v1_10007fec, %dec_label_pc_10008018 ], [ %v1_10008118, %dec_label_pc_10008114 ]
  %v0_100080405.in = phi i8 [ %v2_10007fe8, %dec_label_pc_10008018 ], [ %v2_10008114, %dec_label_pc_10008114 ]
  br label %dec_label_pc_1000802c

dec_label_pc_1000802c:                            ; preds = %dec_label_pc_100080bc, %dec_label_pc_10008020
  %v0_100080b025 = phi i32 [ %v1_100080c4, %dec_label_pc_100080bc ], [ %v0_100080b026, %dec_label_pc_10008020 ]
  %v0_100080404.in = phi i8 [ %v2_100080bc, %dec_label_pc_100080bc ], [ %v0_100080405.in, %dec_label_pc_10008020 ]
  %v0_10008104 = phi i32 [ 1, %dec_label_pc_100080bc ], [ 0, %dec_label_pc_10008020 ]
  %v1_1000803c = phi i32 [ -2147483648, %dec_label_pc_100080bc ], [ 2147483647, %dec_label_pc_10008020 ]
  %v2_1000802c = udiv i32 %v1_1000803c, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10008038 = mul i32 %v2_1000802c, %arg1
  %v2_1000803c = sub i32 %v1_1000803c, %v2_10008038
  br label %dec_label_pc_10008040

dec_label_pc_10008040:                            ; preds = %dec_label_pc_100080b0, %dec_label_pc_1000802c
  %v0_100080b0 = phi i32 [ %v1_100080b4, %dec_label_pc_100080b0 ], [ %v0_100080b025, %dec_label_pc_1000802c ]
  %v0_100080a4 = phi i32 [ %v0_1000809c17, %dec_label_pc_100080b0 ], [ 0, %dec_label_pc_1000802c ]
  %v0_10008094 = phi i32 [ %v0_100080f411, %dec_label_pc_100080b0 ], [ 0, %dec_label_pc_1000802c ]
  %v0_1000808c = phi i32 [ %v0_100080e89, %dec_label_pc_100080b0 ], [ 0, %dec_label_pc_1000802c ]
  %v1_10008080.in = phi i8 [ %v2_100080b0, %dec_label_pc_100080b0 ], [ %v0_100080404.in, %dec_label_pc_1000802c ]
  %v1_10008080 = zext i8 %v1_10008080.in to i32
  %v1_10008044 = add nsw i32 %v1_10008080, -48
  %fold = add nuw nsw i32 %v1_10008080, 208
  %v1_1000804c = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_1000804c, 10
  br i1 %tmp27, label %dec_label_pc_10008084, label %dec_label_pc_10008058

dec_label_pc_10008058:                            ; preds = %dec_label_pc_10008040
  %v1_10008058 = add nuw nsw i32 %v1_10008080, 191
  %v1_1000805c = urem i32 %v1_10008058, 256
  %tmp28 = icmp ult i32 %v1_1000805c, 26
  br i1 %tmp28, label %dec_label_pc_10008080, label %dec_label_pc_1000806c

dec_label_pc_1000806c:                            ; preds = %dec_label_pc_10008058
  %v1_1000806c = add nuw nsw i32 %v1_10008080, 159
  %v1_10008070 = urem i32 %v1_1000806c, 256
  %v2_10008074 = icmp ugt i32 %v1_10008070, 25
  br i1 %v2_10008074, label %dec_label_pc_100080e8, label %dec_label_pc_1000807c

dec_label_pc_1000807c:                            ; preds = %dec_label_pc_1000806c
  br label %dec_label_pc_10008080

dec_label_pc_10008080:                            ; preds = %dec_label_pc_10008058, %dec_label_pc_1000807c
  %v0_10008080 = phi i32 [ 55, %dec_label_pc_10008058 ], [ 87, %dec_label_pc_1000807c ]
  %v2_10008080 = sub nsw i32 %v1_10008080, %v0_10008080
  br label %dec_label_pc_10008084

dec_label_pc_10008084:                            ; preds = %dec_label_pc_10008040, %dec_label_pc_10008080
  %v1_100080ac = phi i32 [ %v1_10008044, %dec_label_pc_10008040 ], [ %v2_10008080, %dec_label_pc_10008080 ]
  %v2_10008084 = icmp slt i32 %v1_100080ac, %arg1
  br i1 %v2_10008084, label %dec_label_pc_1000808c, label %dec_label_pc_100080e8

dec_label_pc_1000808c:                            ; preds = %dec_label_pc_10008084
  %v1_1000808c = icmp slt i32 %v0_1000808c, 0
  br i1 %v1_1000808c, label %dec_label_pc_100080d0, label %dec_label_pc_10008094

dec_label_pc_10008094:                            ; preds = %dec_label_pc_1000808c
  %v3_10008094 = icmp ugt i32 %v0_10008094, %v2_1000802c
  br i1 %v3_10008094, label %dec_label_pc_100080d0, label %dec_label_pc_1000809c

dec_label_pc_1000809c:                            ; preds = %dec_label_pc_10008094
  %v4_1000809c = icmp eq i32 %v0_100080a4, %v2_1000802c
  br i1 %v4_1000809c, label %dec_label_pc_100080d8, label %dec_label_pc_100080a4

dec_label_pc_100080a4:                            ; preds = %dec_label_pc_100080d8, %dec_label_pc_1000809c
  %v2_100080a4 = mul i32 %v0_100080a4, %arg1
  %v2_100080ac = add i32 %v1_100080ac, %v2_100080a4
  store i32 %v2_100080ac, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100080b0

dec_label_pc_100080b0:                            ; preds = %dec_label_pc_100080d8, %dec_label_pc_100080d0, %dec_label_pc_100080a4
  %v0_1000809c17 = phi i32 [ %v2_1000802c, %dec_label_pc_100080d8 ], [ %v0_100080a4, %dec_label_pc_100080d0 ], [ %v2_100080ac, %dec_label_pc_100080a4 ]
  %v0_100080f411 = phi i32 [ %v2_1000802c, %dec_label_pc_100080d8 ], [ %v0_10008094, %dec_label_pc_100080d0 ], [ %v2_100080ac, %dec_label_pc_100080a4 ]
  %v0_100080e89 = phi i32 [ -1, %dec_label_pc_100080d8 ], [ -1, %dec_label_pc_100080d0 ], [ 1, %dec_label_pc_100080a4 ]
  %v1_100080b0 = inttoptr i32 %v0_100080b0 to i8*
  %v2_100080b0 = load i8, i8* %v1_100080b0, align 1
  %v1_100080b4 = add i32 %v0_100080b0, 1
  br label %dec_label_pc_10008040

dec_label_pc_100080bc:                            ; preds = %dec_label_pc_10008010
  %v1_100080bc = inttoptr i32 %v1_10007fec to i8*
  %v2_100080bc = load i8, i8* %v1_100080bc, align 1
  %v1_100080c4 = add i32 %v0_10007fe8, 2
  br label %dec_label_pc_1000802c

dec_label_pc_100080d0:                            ; preds = %dec_label_pc_10008094, %dec_label_pc_1000808c
  br label %dec_label_pc_100080b0

dec_label_pc_100080d8:                            ; preds = %dec_label_pc_1000809c
  %v3_100080d8 = icmp sgt i32 %v1_100080ac, %v2_1000803c
  br i1 %v3_100080d8, label %dec_label_pc_100080b0, label %dec_label_pc_100080a4

dec_label_pc_100080e8:                            ; preds = %dec_label_pc_10008084, %dec_label_pc_1000806c
  %v1_100080e8 = icmp slt i32 %v0_1000808c, 0
  br i1 %v1_100080e8, label %dec_label_pc_10008104, label %dec_label_pc_100080f0

dec_label_pc_100080f0:                            ; preds = %dec_label_pc_100080e8
  %v3_100080f0 = icmp eq i32 %v0_10008104, 0
  %v0_100080f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100080f0, i32 %v0_100080f8)
  %v0_100080fc = load i32, i32* %r5.global-to-local, align 4
  %v1_100080fc = sub i32 0, %v0_100080fc
  ret i32 %v1_100080fc

dec_label_pc_10008104:                            ; preds = %dec_label_pc_100080e8
  %v1_10008104 = xor i32 %v0_10008104, 1
  %v2_1000810c = sub nuw i32 -2147483648, %v1_10008104
  ret i32 %v2_1000810c

dec_label_pc_10008114:                            ; preds = %dec_label_pc_10008018
  %v1_10008114 = inttoptr i32 %v1_10007fec to i8*
  %v2_10008114 = load i8, i8* %v1_10008114, align 1
  %v1_10008118 = add i32 %v0_10007fe8, 2
  br label %dec_label_pc_10008020

; uselistorder directives
  uselistorder i32 %v2_100080ac, { 1, 0, 2 }
  uselistorder i32 %v1_100080ac, { 1, 0, 2 }
  uselistorder i32 %v1_10008080, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_100080a4, { 2, 0, 1 }
  uselistorder i32 %v0_100080b0, { 1, 0 }
  uselistorder i32 %v2_1000802c, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10007fec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10007fe8, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 11, 12, 13, 14, 1, 8, 15, 9, 16 }
  uselistorder i32 %arg1, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10008084, { 1, 0 }
  uselistorder label %dec_label_pc_10008080, { 1, 0 }
  uselistorder label %dec_label_pc_10008020, { 1, 0 }
}

define i32 @function_10008120(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008120:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_1000814c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10008154

dec_label_pc_10008154:                            ; preds = %dec_label_pc_10008180.dec_label_pc_10008154_crit_edge, %dec_label_pc_10008120
  %v0_10008158 = phi i32 [ %v0_10008158.pre, %dec_label_pc_10008180.dec_label_pc_10008154_crit_edge ], [ %arg3, %dec_label_pc_10008120 ]
  %v0_10008154 = phi i32 [ %v1_1000816c, %dec_label_pc_10008180.dec_label_pc_10008154_crit_edge ], [ %tmp, %dec_label_pc_10008120 ]
  store i32 1, i32* @r5, align 4
  store i32 268468580, i32* @lr, align 4
  %v4_10008160 = call i32 @function_100088b8(i32 %v0_10008158, i32 %v0_10008154, i32 1)
  %v0_10008164 = load i32, i32* @r31, align 4
  %v3_10008168 = icmp eq i32 %v4_10008160, 1
  %v1_1000816c = add i32 %v0_10008164, 1
  store i32 %v1_1000816c, i32* @r31, align 4
  %v0_10008174 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10008168, label %dec_label_pc_10008174, label %dec_label_pc_1000818c

dec_label_pc_10008174:                            ; preds = %dec_label_pc_10008154
  %v1_10008174 = add i32 %v0_10008174, 1
  store i32 %v1_10008174, i32* %r30.global-to-local, align 4
  %v0_10008178 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008178 = icmp sgt i32 %v0_10008178, %v1_10008174
  br i1 %v3_10008178, label %dec_label_pc_10008180, label %dec_label_pc_1000818c

dec_label_pc_10008180:                            ; preds = %dec_label_pc_10008174
  %v1_10008180 = inttoptr i32 %v0_10008164 to i8*
  %v2_10008180 = load i8, i8* %v1_10008180, align 1
  %v3_10008184 = icmp eq i8 %v2_10008180, 10
  br i1 %v3_10008184, label %dec_label_pc_1000818c, label %dec_label_pc_10008180.dec_label_pc_10008154_crit_edge

dec_label_pc_10008180.dec_label_pc_10008154_crit_edge: ; preds = %dec_label_pc_10008180
  %v0_10008158.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008154

dec_label_pc_1000818c:                            ; preds = %dec_label_pc_10008154, %dec_label_pc_10008180, %dec_label_pc_10008174
  %v1_10008194 = phi i32 [ %v1_10008174, %dec_label_pc_10008180 ], [ %v1_10008174, %dec_label_pc_10008174 ], [ %v0_10008174, %dec_label_pc_10008154 ]
  %tmp12 = icmp slt i32 %v1_10008194, 0
  %v1_1000818c = zext i1 %tmp12 to i32
  %v2_1000818c = ashr i32 %v1_10008194, 31
  %v3_1000818c = and i32 %v2_1000818c, -2
  %v4_1000818c = or i32 %v3_1000818c, %v1_1000818c
  %v2_10008194 = xor i32 %v4_1000818c, %v1_10008194
  %v2_1000819c = sub i32 %v4_1000818c, %v2_10008194
  %tmp13 = icmp slt i32 %v2_1000819c, 0
  %v1_100081a4 = zext i1 %tmp13 to i32
  %v2_100081a4 = ashr i32 %v2_1000819c, 31
  %v3_100081a4 = and i32 %v2_100081a4, -2
  %v4_100081a4 = or i32 %v3_100081a4, %v1_100081a4
  %v0_100081ac = load i32, i32* %r27.global-to-local, align 4
  %v2_100081ac = and i32 %v4_100081a4, %v0_100081ac
  store i32 %v0_1000814c, i32* @r31, align 4
  ret i32 %v2_100081ac

; uselistorder directives
  uselistorder i32 %v2_1000819c, { 1, 0 }
  uselistorder i32 %v4_1000818c, { 1, 0 }
  uselistorder i32 %v1_10008194, { 1, 2, 0 }
  uselistorder i32 %v1_1000816c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100088b8, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000818c, { 1, 2, 0 }
}

define i32 @function_100081c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100081c4:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_100081dc = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_100081e4 = call i32 @function_10008d9c()
  %v2_100081f0 = inttoptr i32 %v0_100081e4 to i32*
  store i32 0, i32* %v2_100081f0, align 4
  store i32 268468736, i32* @lr, align 4
  %v3_100081fc = call i32 @function_1000939c(i32 2, i32 2, i32 0)
  store i32 %v3_100081fc, i32* @r3, align 4
  %v3_10008204 = icmp eq i32 %v3_100081fc, -1
  store i32 %v3_100081fc, i32* @r31, align 4
  br i1 %v3_10008204, label %dec_label_pc_10008254, label %dec_label_pc_10008220

dec_label_pc_10008220:                            ; preds = %dec_label_pc_100081c4
  %v2_100081d0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268468792, i32* @lr, align 4
  %v0_10008234 = call i32 @function_1000919c()
  %v2_1000823c = ptrtoint i32* %stack_var_-40 to i32
  %v0_10008240 = load i32, i32* @r31, align 4
  store i32 268468808, i32* @lr, align 4
  %v3_10008244 = call i32 @function_100091d0(i32 %v0_10008240, i32 %v2_100081d0, i32 %v2_1000823c)
  store i32 268468816, i32* @lr, align 4
  %v0_1000824c = call i32 @function_10008680()
  br label %dec_label_pc_10008254

dec_label_pc_10008254:                            ; preds = %dec_label_pc_100081c4, %dec_label_pc_10008220
  %v0_10008254 = phi i32 [ 0, %dec_label_pc_100081c4 ], [ 134744072, %dec_label_pc_10008220 ]
  store i32 %v0_100081dc, i32* @r31, align 4
  ret i32 %v0_10008254

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_1000919c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000939c, { 27, 25, 26, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 0, 13, 12, 1, 11, 10, 9, 8, 2, 7, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_10008254, { 1, 0 }
}

define i32 @function_10008270(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008270:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10008270 = load i8, i8* %tmp, align 1
  %v3_1000827c = icmp eq i8 %v3_10008270, 0
  br i1 %v3_1000827c, label %dec_label_pc_10008294, label %dec_label_pc_10008284

dec_label_pc_10008284:                            ; preds = %dec_label_pc_10008270, %dec_label_pc_10008284
  %v0_10008284 = phi i32 [ %v1_10008284, %dec_label_pc_10008284 ], [ 0, %dec_label_pc_10008270 ]
  %v1_10008284 = add i32 %v0_10008284, 1
  %v3_10008288 = add i32 %v1_10008284, %arg3
  %v4_10008288 = inttoptr i32 %v3_10008288 to i8*
  %v5_10008288 = load i8, i8* %v4_10008288, align 1
  %v3_1000828c = icmp eq i8 %v5_10008288, 0
  br i1 %v3_1000828c, label %dec_label_pc_10008294, label %dec_label_pc_10008284

dec_label_pc_10008294:                            ; preds = %dec_label_pc_10008284, %dec_label_pc_10008270
  %v0_100082c411 = phi i32 [ 0, %dec_label_pc_10008270 ], [ %v1_10008284, %dec_label_pc_10008284 ]
  %v1_10008294 = icmp slt i32 %arg2, 0
  %v1_10008298 = add i32 %arg2, 1
  br i1 %v1_10008294, label %dec_label_pc_10008310, label %dec_label_pc_100082ac

dec_label_pc_100082ac:                            ; preds = %dec_label_pc_10008294, %dec_label_pc_10008310, %dec_label_pc_10008304
  %v2_100082b88 = phi i32 [ %v1_100082bc, %dec_label_pc_10008304 ], [ 0, %dec_label_pc_10008310 ], [ 0, %dec_label_pc_10008294 ]
  %v0_100082b06 = phi i32 [ %v1_100082b4, %dec_label_pc_10008304 ], [ %tmp16, %dec_label_pc_10008310 ], [ %tmp16, %dec_label_pc_10008294 ]
  %v0_100082ac = phi i32 [ %v0_100082f8, %dec_label_pc_10008304 ], [ 1, %dec_label_pc_10008310 ], [ %v1_10008298, %dec_label_pc_10008294 ]
  %v1_100082ac = add i32 %v0_100082ac, -1
  %v2_100082ac = icmp eq i32 %v1_100082ac, 0
  br i1 %v2_100082ac, label %dec_label_pc_100082fc, label %dec_label_pc_100082b0

dec_label_pc_100082b0:                            ; preds = %dec_label_pc_100082ac, %dec_label_pc_100082f4
  %v2_100082b8 = phi i32 [ 0, %dec_label_pc_100082f4 ], [ %v2_100082b88, %dec_label_pc_100082ac ]
  %v0_100082b0 = phi i32 [ %v1_100082b4, %dec_label_pc_100082f4 ], [ %v0_100082b06, %dec_label_pc_100082ac ]
  %v0_100082f8 = phi i32 [ %v1_100082f8, %dec_label_pc_100082f4 ], [ %v1_100082ac, %dec_label_pc_100082ac ]
  %v1_100082b0 = inttoptr i32 %v0_100082b0 to i8*
  %v2_100082b0 = load i8, i8* %v1_100082b0, align 1
  %v3_100082b0 = zext i8 %v2_100082b0 to i32
  %v1_100082b4 = add i32 %v0_100082b0, 1
  %v3_100082b8 = add i32 %v2_100082b8, %arg3
  %v4_100082b8 = inttoptr i32 %v3_100082b8 to i8*
  %v5_100082b8 = load i8, i8* %v4_100082b8, align 1
  %v6_100082b8 = zext i8 %v5_100082b8 to i32
  %v1_100082bc = add i32 %v2_100082b8, 1
  %v1_100082c0 = add nuw nsw i32 %v3_100082b0, 191
  %v1_100082c8 = urem i32 %v1_100082c0, 256
  %v2_100082cc = icmp ugt i32 %v1_100082c8, 25
  %v1_100082d0 = add nuw nsw i32 %v6_100082b8, 191
  %v1_100082d4 = urem i32 %v1_100082d0, 256
  %v2_100082d8 = icmp ugt i32 %v1_100082d4, 25
  br i1 %v2_100082cc, label %dec_label_pc_100082e4, label %dec_label_pc_100082e0

dec_label_pc_100082e0:                            ; preds = %dec_label_pc_100082b0
  %v1_100082e0 = or i32 %v3_100082b0, 96
  br i1 %v2_100082d8, label %dec_label_pc_100082ec, label %dec_label_pc_100082e8

dec_label_pc_100082e4:                            ; preds = %dec_label_pc_100082b0
  br i1 %v2_100082d8, label %dec_label_pc_100082ec, label %dec_label_pc_100082e8

dec_label_pc_100082e8:                            ; preds = %dec_label_pc_100082e0, %dec_label_pc_100082e4
  %v1_100082ec14 = phi i32 [ %v1_100082e0, %dec_label_pc_100082e0 ], [ %v3_100082b0, %dec_label_pc_100082e4 ]
  %v1_100082e8 = or i32 %v6_100082b8, 96
  br label %dec_label_pc_100082ec

dec_label_pc_100082ec:                            ; preds = %dec_label_pc_100082e0, %dec_label_pc_100082e4, %dec_label_pc_100082e8
  %v1_100082ec = phi i32 [ %v1_100082e0, %dec_label_pc_100082e0 ], [ %v3_100082b0, %dec_label_pc_100082e4 ], [ %v1_100082ec14, %dec_label_pc_100082e8 ]
  %v0_100082ec = phi i32 [ %v6_100082b8, %dec_label_pc_100082e0 ], [ %v6_100082b8, %dec_label_pc_100082e4 ], [ %v1_100082e8, %dec_label_pc_100082e8 ]
  %v4_100082ec = icmp eq i32 %v0_100082ec, %v1_100082ec
  br i1 %v4_100082ec, label %dec_label_pc_10008304, label %dec_label_pc_100082f4

dec_label_pc_100082f4:                            ; preds = %dec_label_pc_100082ec
  %v1_100082f8 = add i32 %v0_100082f8, -1
  %v2_100082f8 = icmp eq i32 %v1_100082f8, 0
  br i1 %v2_100082f8, label %dec_label_pc_100082fc, label %dec_label_pc_100082b0

dec_label_pc_100082fc:                            ; preds = %dec_label_pc_100082ac, %dec_label_pc_100082f4
  ret i32 -1

dec_label_pc_10008304:                            ; preds = %dec_label_pc_100082ec
  %v4_100082c4.le = icmp eq i32 %v0_100082c411, %v1_100082bc
  br i1 %v4_100082c4.le, label %dec_label_pc_10008308, label %dec_label_pc_100082ac

dec_label_pc_10008308:                            ; preds = %dec_label_pc_10008304
  %v2_10008308 = sub i32 %v1_100082b4, %tmp16
  ret i32 %v2_10008308

dec_label_pc_10008310:                            ; preds = %dec_label_pc_10008294
  br label %dec_label_pc_100082ac

; uselistorder directives
  uselistorder i32 %v1_100082f8, { 1, 0 }
  uselistorder i32 %v1_100082e0, { 1, 0 }
  uselistorder i1 %v2_100082d8, { 1, 0 }
  uselistorder i32 %v1_100082bc, { 1, 0 }
  uselistorder i32 %v3_100082b0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100082f8, { 1, 0 }
  uselistorder i32 %v0_100082b0, { 1, 0 }
  uselistorder i32 %v2_100082b8, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 5, 6, 7, 0, 4, 1, 2, 3 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100082fc, { 1, 0 }
  uselistorder label %dec_label_pc_100082ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100082e8, { 1, 0 }
  uselistorder label %dec_label_pc_100082b0, { 1, 0 }
  uselistorder label %dec_label_pc_100082ac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008284, { 1, 0 }
}

define i32 @function_1000831c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000831c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1000831c = load i8, i8* %arg1, align 1
  %v3_10008324 = icmp eq i8 %v2_1000831c, 0
  br i1 %v3_10008324, label %dec_label_pc_1000833c, label %dec_label_pc_1000832c

dec_label_pc_1000832c:                            ; preds = %dec_label_pc_1000831c, %dec_label_pc_1000832c
  %v0_1000832c = phi i32 [ %v1_1000832c, %dec_label_pc_1000832c ], [ 0, %dec_label_pc_1000831c ]
  %v1_1000832c = add i32 %v0_1000832c, 1
  %v2_10008330 = add i32 %v1_1000832c, %tmp
  %v3_10008330 = inttoptr i32 %v2_10008330 to i8*
  %v4_10008330 = load i8, i8* %v3_10008330, align 1
  %v3_10008334 = icmp eq i8 %v4_10008330, 0
  br i1 %v3_10008334, label %dec_label_pc_1000833c, label %dec_label_pc_1000832c

dec_label_pc_1000833c:                            ; preds = %dec_label_pc_1000832c, %dec_label_pc_1000831c
  %v0_1000835c = phi i32 [ 0, %dec_label_pc_1000831c ], [ %v1_1000832c, %dec_label_pc_1000832c ]
  %v1_1000833c = inttoptr i32 %arg2 to i8*
  %v2_1000833c = load i8, i8* %v1_1000833c, align 1
  %v3_10008344 = icmp eq i8 %v2_1000833c, 0
  br i1 %v3_10008344, label %dec_label_pc_1000835c, label %dec_label_pc_1000834c

dec_label_pc_1000834c:                            ; preds = %dec_label_pc_1000833c, %dec_label_pc_1000834c
  %v0_1000834c = phi i32 [ %v1_1000834c, %dec_label_pc_1000834c ], [ 0, %dec_label_pc_1000833c ]
  %v1_1000834c = add i32 %v0_1000834c, 1
  %v2_10008350 = add i32 %v1_1000834c, %arg2
  %v3_10008350 = inttoptr i32 %v2_10008350 to i8*
  %v4_10008350 = load i8, i8* %v3_10008350, align 1
  %v3_10008354 = icmp eq i8 %v4_10008350, 0
  br i1 %v3_10008354, label %dec_label_pc_1000835c, label %dec_label_pc_1000834c

dec_label_pc_1000835c:                            ; preds = %dec_label_pc_1000834c, %dec_label_pc_1000833c
  %v0_10008360 = phi i32 [ 0, %dec_label_pc_1000833c ], [ %v1_1000834c, %dec_label_pc_1000834c ]
  %v4_1000835c = icmp eq i32 %v0_1000835c, %v0_10008360
  br i1 %v4_1000835c, label %dec_label_pc_10008374, label %dec_label_pc_1000836c

dec_label_pc_1000836c:                            ; preds = %dec_label_pc_10008378, %dec_label_pc_1000835c
  ret i32 0

dec_label_pc_10008374:                            ; preds = %dec_label_pc_1000835c
  %v2_10008374 = icmp eq i32 %v0_1000835c, 0
  br i1 %v2_10008374, label %dec_label_pc_10008394, label %dec_label_pc_10008378

dec_label_pc_10008378:                            ; preds = %dec_label_pc_10008374, %dec_label_pc_10008390
  %v0_10008390 = phi i32 [ %v1_10008390, %dec_label_pc_10008390 ], [ %v0_1000835c, %dec_label_pc_10008374 ]
  %v0_10008380 = phi i32 [ %v1_10008384, %dec_label_pc_10008390 ], [ %arg2, %dec_label_pc_10008374 ]
  %v0_10008378 = phi i32 [ %v1_1000837c, %dec_label_pc_10008390 ], [ %tmp, %dec_label_pc_10008374 ]
  %v1_10008378 = inttoptr i32 %v0_10008378 to i8*
  %v2_10008378 = load i8, i8* %v1_10008378, align 1
  %v1_10008380 = inttoptr i32 %v0_10008380 to i8*
  %v2_10008380 = load i8, i8* %v1_10008380, align 1
  %v4_10008388 = icmp eq i8 %v2_10008378, %v2_10008380
  br i1 %v4_10008388, label %dec_label_pc_10008390, label %dec_label_pc_1000836c

dec_label_pc_10008390:                            ; preds = %dec_label_pc_10008378
  %v1_10008384 = add i32 %v0_10008380, 1
  %v1_1000837c = add i32 %v0_10008378, 1
  %v1_10008390 = add i32 %v0_10008390, -1
  %v2_10008390 = icmp eq i32 %v1_10008390, 0
  br i1 %v2_10008390, label %dec_label_pc_10008394, label %dec_label_pc_10008378

dec_label_pc_10008394:                            ; preds = %dec_label_pc_10008390, %dec_label_pc_10008374
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10008390, { 1, 0 }
  uselistorder i32 %v0_10008378, { 1, 0 }
  uselistorder i32 %v0_10008380, { 1, 0 }
  uselistorder label %dec_label_pc_10008378, { 1, 0 }
  uselistorder label %dec_label_pc_1000834c, { 1, 0 }
  uselistorder label %dec_label_pc_1000832c, { 1, 0 }
}

define i32 @function_1000839c(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000839c:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000839c = icmp eq i32 %arg3, 0
  %v4_100083a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100083a0, i32* %stack_var_-64, align 4
  %v5_100083a0 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_1000839c, label %dec_label_pc_100083bc, label %dec_label_pc_100083a8

dec_label_pc_100083a8:                            ; preds = %dec_label_pc_1000839c
  %v0_100083a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100083a8 = icmp eq i32 %v0_100083a8, 0
  store i1 %v3_100083a8, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_100083a8, label %dec_label_pc_100083b0, label %dec_label_pc_100083c8

dec_label_pc_100083b0:                            ; preds = %dec_label_pc_100083a8
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_100083b4 = add i32 %arg3, 1
  %v5_100083b4 = inttoptr i32 %v4_100083b4 to i8*
  store i8 0, i8* %v5_100083b4, align 1
  %v0_100083b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100083b8 = trunc i32 %v0_100083b8 to i8
  store i8 %v1_100083b8, i8* %tmp, align 1
  br label %dec_label_pc_100083bc

dec_label_pc_100083bc:                            ; preds = %dec_label_pc_10008448, %dec_label_pc_1000839c, %dec_label_pc_100083b0
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_100083c8:                            ; preds = %dec_label_pc_100083a8
  %v2_100083a8 = icmp sgt i32 %v0_100083a8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100083c8.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_100083a8, %v3_100083c8.not
  br i1 %brmerge, label %dec_label_pc_100083dc, label %dec_label_pc_10008490

dec_label_pc_100083dc:                            ; preds = %dec_label_pc_100083c8, %dec_label_pc_10008490
  %v0_100083e02 = phi i32 [ %v0_100083a8, %dec_label_pc_100083c8 ], [ %v1_10008490, %dec_label_pc_10008490 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100083c8 ], [ 1, %dec_label_pc_10008490 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100083e0

dec_label_pc_100083e0:                            ; preds = %dec_label_pc_1000840c.dec_label_pc_100083e0_crit_edge, %dec_label_pc_100083dc
  %v1_100083e4 = phi i32 [ %v1_100083e4.pre, %dec_label_pc_1000840c.dec_label_pc_100083e0_crit_edge ], [ 32, %dec_label_pc_100083dc ]
  %v0_100083e4 = phi i32 [ %v0_100083e4.pre, %dec_label_pc_1000840c.dec_label_pc_100083e0_crit_edge ], [ %v5_100083a0, %dec_label_pc_100083dc ]
  %v1_100083f4 = phi i32 [ %v0_100083e0.pre, %dec_label_pc_1000840c.dec_label_pc_100083e0_crit_edge ], [ %v0_100083e02, %dec_label_pc_100083dc ]
  %v2_100083e0 = udiv i32 %v1_100083f4, %arg2
  %v2_100083e4 = add i32 %v0_100083e4, %v1_100083e4
  store i32 %v2_100083e4, i32* %r11.global-to-local, align 4
  %v1_100083e8 = add i32 %v1_100083e4, -1
  store i32 %v1_100083e8, i32* %r10.global-to-local, align 4
  %v2_100083ec = mul i32 %v2_100083e0, %arg2
  %v3_100083f0 = icmp ult i32 %v1_100083f4, %arg2
  store i1 %v3_100083f0, i1* %cr6_eq.global-to-local, align 1
  %v2_100083f4 = sub i32 %v1_100083f4, %v2_100083ec
  store i32 %v2_100083f4, i32* %r9.global-to-local, align 4
  store i32 %v2_100083e0, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_100083f4, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_100083f4
  %v0_1000840c.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_1000840c = add i32 %v2_100083e4, 8
  %v4_1000840c = inttoptr i32 %v3_1000840c to i8*
  store i8 %v0_1000840c.off0, i8* %v4_1000840c, align 1
  %v0_10008410 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10008410, label %dec_label_pc_10008414, label %dec_label_pc_1000840c.dec_label_pc_100083e0_crit_edge

dec_label_pc_1000840c.dec_label_pc_100083e0_crit_edge: ; preds = %dec_label_pc_100083e0
  %v0_100083e0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100083e4.pre = load i32, i32* @r1, align 4
  %v1_100083e4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100083e0

dec_label_pc_10008414:                            ; preds = %dec_label_pc_100083e0
  %v0_10008414 = load i32, i32* %r8.global-to-local, align 4
  %v3_10008414 = icmp eq i32 %v0_10008414, 0
  br i1 %v3_10008414, label %dec_label_pc_1000841c, label %dec_label_pc_1000847c

dec_label_pc_1000841c:                            ; preds = %dec_label_pc_10008414
  %v0_1000841c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000841c = add i32 %v0_1000841c, 1
  store i32 %v1_1000841c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008420

dec_label_pc_10008420:                            ; preds = %dec_label_pc_1000847c, %dec_label_pc_1000841c
  %v1_10008428 = phi i32 [ %v1_10008424.pre, %dec_label_pc_1000847c ], [ %v1_1000841c, %dec_label_pc_1000841c ]
  %v2_10008420 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008420, i32* %r9.global-to-local, align 4
  %v2_10008424 = add i32 %v1_10008428, %v2_10008420
  %v3_10008424 = inttoptr i32 %v2_10008424 to i8*
  %v4_10008424 = load i8, i8* %v3_10008424, align 1
  %v5_10008424 = zext i8 %v4_10008424 to i32
  store i32 %v5_10008424, i32* %r0.global-to-local, align 4
  store i32 %v2_10008424, i32* %r9.global-to-local, align 4
  %v3_1000842c = icmp eq i8 %v4_10008424, 0
  br i1 %v3_1000842c, label %dec_label_pc_100084a4, label %dec_label_pc_10008434

dec_label_pc_10008434:                            ; preds = %dec_label_pc_10008420
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008438

dec_label_pc_10008438:                            ; preds = %dec_label_pc_10008438, %dec_label_pc_10008434
  %v0_10008438 = phi i32 [ %v1_10008438, %dec_label_pc_10008438 ], [ 0, %dec_label_pc_10008434 ]
  %v1_10008438 = add i32 %v0_10008438, 1
  store i32 %v1_10008438, i32* %r10.global-to-local, align 4
  %v2_1000843c = add i32 %v1_10008438, %v2_10008424
  %v3_1000843c = inttoptr i32 %v2_1000843c to i8*
  %v4_1000843c = load i8, i8* %v3_1000843c, align 1
  %v5_1000843c = zext i8 %v4_1000843c to i32
  store i32 %v5_1000843c, i32* %r0.global-to-local, align 4
  %v3_10008440 = icmp eq i8 %v4_1000843c, 0
  br i1 %v3_10008440, label %dec_label_pc_10008448, label %dec_label_pc_10008438

dec_label_pc_10008448:                            ; preds = %dec_label_pc_10008438
  %v3_10008448 = icmp eq i32 %v1_10008438, -1
  br i1 %v3_10008448, label %dec_label_pc_100083bc, label %dec_label_pc_10008450

dec_label_pc_10008450:                            ; preds = %dec_label_pc_10008448
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10008438, 2
  br label %dec_label_pc_10008454

dec_label_pc_10008454:                            ; preds = %dec_label_pc_100084a4, %dec_label_pc_10008450
  %v0_10008454 = phi i32 [ 1, %dec_label_pc_100084a4 ], [ %phitmp, %dec_label_pc_10008450 ]
  store i32 %v0_10008454, i32* %r10.global-to-local, align 4
  store i32 %v0_10008454, i32* %ctr.global-to-local, align 4
  %v2_1000845c24 = load i8, i8* %v3_10008424, align 1
  %v3_1000845c25 = zext i8 %v2_1000845c24 to i32
  store i32 %v3_1000845c25, i32* %r0.global-to-local, align 4
  %v1_1000846026 = add i32 %v2_10008424, 1
  store i32 %v1_1000846026, i32* %r9.global-to-local, align 4
  store i8 %v2_1000845c24, i8* %tmp, align 1
  %v0_1000846828 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000846829 = add i32 %v0_1000846828, 1
  store i32 %v1_1000846829, i32* %r11.global-to-local, align 4
  %v0_1000846c30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000846c31 = add i32 %v0_1000846c30, -1
  store i32 %v1_1000846c31, i32* %ctr.global-to-local, align 4
  %v2_1000846c32 = icmp eq i32 %v1_1000846c31, 0
  br i1 %v2_1000846c32, label %dec_label_pc_10008470, label %dec_label_pc_1000845c.dec_label_pc_1000845c_crit_edge

dec_label_pc_1000845c.dec_label_pc_1000845c_crit_edge: ; preds = %dec_label_pc_10008454, %dec_label_pc_1000845c.dec_label_pc_1000845c_crit_edge
  %v1_1000846833 = phi i32 [ %v1_10008468, %dec_label_pc_1000845c.dec_label_pc_1000845c_crit_edge ], [ %v1_1000846829, %dec_label_pc_10008454 ]
  %v0_1000845c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000845c = inttoptr i32 %v0_1000845c.pre to i8*
  %v2_1000845c = load i8, i8* %v1_1000845c, align 1
  %v3_1000845c = zext i8 %v2_1000845c to i32
  store i32 %v3_1000845c, i32* %r0.global-to-local, align 4
  %v1_10008460 = add i32 %v0_1000845c.pre, 1
  store i32 %v1_10008460, i32* %r9.global-to-local, align 4
  %v3_10008464 = inttoptr i32 %v1_1000846833 to i8*
  store i8 %v2_1000845c, i8* %v3_10008464, align 1
  %v0_10008468 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008468 = add i32 %v0_10008468, 1
  store i32 %v1_10008468, i32* %r11.global-to-local, align 4
  %v0_1000846c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000846c = add i32 %v0_1000846c, -1
  store i32 %v1_1000846c, i32* %ctr.global-to-local, align 4
  %v2_1000846c = icmp eq i32 %v1_1000846c, 0
  br i1 %v2_1000846c, label %dec_label_pc_10008470, label %dec_label_pc_1000845c.dec_label_pc_1000845c_crit_edge

dec_label_pc_10008470:                            ; preds = %dec_label_pc_1000845c.dec_label_pc_1000845c_crit_edge, %dec_label_pc_10008454
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_1000847c:                            ; preds = %dec_label_pc_10008414
  %v0_1000847c.pre = load i32, i32* @r1, align 4
  %v1_1000847c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000847c = add i32 %v1_1000847c.pre, %v0_1000847c.pre
  store i32 %v2_1000847c, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10008484 = add i32 %v2_1000847c, 8
  %v4_10008484 = inttoptr i32 %v3_10008484 to i8*
  store i8 45, i8* %v4_10008484, align 1
  %v1_10008424.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008420

dec_label_pc_10008490:                            ; preds = %dec_label_pc_100083c8
  %v1_10008490 = sub i32 0, %v0_100083a8
  store i32 %v1_10008490, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100083dc

dec_label_pc_100084a4:                            ; preds = %dec_label_pc_10008420
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008454

; uselistorder directives
  uselistorder i32 %v1_10008490, { 1, 0 }
  uselistorder i32 %v1_1000846c, { 1, 0 }
  uselistorder i32 %v1_10008468, { 1, 0 }
  uselistorder i32 %v0_10008454, { 1, 0 }
  uselistorder i32 %v1_10008438, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100083e0, { 1, 0 }
  uselistorder i32 %v1_100083f4, { 1, 0, 2 }
  uselistorder i32 %v1_100083e4, { 1, 0 }
  uselistorder i32 %v0_100083a8, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 6, 7, 2, 3, 5, 4, 9, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1000845c.dec_label_pc_1000845c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100083dc, { 1, 0 }
  uselistorder label %dec_label_pc_100083bc, { 0, 2, 1 }
}

define i32 @function_100084b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100084b0:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_100084c0 = icmp eq i32 %arg2, -2143521772
  %v2_100084d4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100084d4, i32* %stack_var_-32, align 4
  br i1 %v4_100084c0, label %dec_label_pc_10008534, label %dec_label_pc_100084f4

dec_label_pc_100084f4:                            ; preds = %dec_label_pc_100084b0
  %v3_100084f4 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_100084f4, label %dec_label_pc_1000850c, label %dec_label_pc_100084fc

dec_label_pc_100084fc:                            ; preds = %dec_label_pc_100084f4
  %v3_10008500 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10008500, label %dec_label_pc_10008528, label %dec_label_pc_10008554

dec_label_pc_1000850c:                            ; preds = %dec_label_pc_100084f4
  %v1_1000850c = xor i32 %arg2, -2143551488
  %v3_10008510 = icmp eq i32 %v1_1000850c, 29717
  br i1 %v3_10008510, label %dec_label_pc_10008544, label %dec_label_pc_10008518

dec_label_pc_10008518:                            ; preds = %dec_label_pc_1000850c
  %v3_1000851c = icmp eq i32 %v1_1000850c, 29718
  br i1 %v3_1000851c, label %dec_label_pc_1000854c, label %dec_label_pc_10008554

dec_label_pc_10008528:                            ; preds = %dec_label_pc_100084fc
  store i32 ptrtoint (i32* @global_var_10008530.250 to i32), i32* @lr, align 4
  %v2_1000852c = inttoptr i32 %arg3 to i32*
  %v3_1000852c = call i32 @function_10008f34(i32* %v2_1000852c, i32 %arg1)
  br label %dec_label_pc_1000853c

dec_label_pc_10008534:                            ; preds = %dec_label_pc_100084b0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10008538

dec_label_pc_10008538:                            ; preds = %dec_label_pc_1000854c, %dec_label_pc_10008544, %dec_label_pc_10008534
  store i32 268469564, i32* @lr, align 4
  %v0_10008538 = call i32 @function_10008fd0()
  br label %dec_label_pc_1000853c

dec_label_pc_1000853c:                            ; preds = %dec_label_pc_10008528, %dec_label_pc_10008538
  %storemerge = phi i32 [ %v0_10008538, %dec_label_pc_10008538 ], [ %v3_1000852c, %dec_label_pc_10008528 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008580

dec_label_pc_10008544:                            ; preds = %dec_label_pc_1000850c
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10008538

dec_label_pc_1000854c:                            ; preds = %dec_label_pc_10008518
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10008538

dec_label_pc_10008554:                            ; preds = %dec_label_pc_10008518, %dec_label_pc_100084fc
  %v0_10008564 = call i32 @__asm_mfcr()
  %v1_10008568 = and i32 %v0_10008564, 268435456
  %v3_10008568 = icmp eq i32 %v1_10008568, 0
  store i32 %v0_10008564, i32* %r31.global-to-local, align 4
  br i1 %v3_10008568, label %dec_label_pc_10008580, label %dec_label_pc_10008574

dec_label_pc_10008574:                            ; preds = %dec_label_pc_10008554
  %v0_10008574 = call i32 @function_10008d9c()
  %v0_10008578 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008578 = inttoptr i32 %v0_10008574 to i32*
  store i32 %v0_10008578, i32* %v2_10008578, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008580

dec_label_pc_10008580:                            ; preds = %dec_label_pc_10008554, %dec_label_pc_1000853c, %dec_label_pc_10008574
  %v0_10008584 = phi i32 [ %v0_10008564, %dec_label_pc_10008554 ], [ %storemerge, %dec_label_pc_1000853c ], [ -1, %dec_label_pc_10008574 ]
  ret i32 %v0_10008584

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008580, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000853c, { 1, 0 }
}

define i32 @function_10008598(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008598:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_100085ac = load i32, i32* @r4, align 4
  %v1_100085ac = add i32 %v0_100085ac, -12
  %v2_100085b0 = icmp ugt i32 %v1_100085ac, 2
  %v2_100085b8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100085b8, i32* %stack_var_-32, align 4
  br i1 %v2_100085b0, label %dec_label_pc_100085e4, label %dec_label_pc_100085d4

dec_label_pc_100085d4:                            ; preds = %dec_label_pc_10008598
  store i32 268469724, i32* @lr, align 4
  %v2_100085d8 = call i32 @function_1000861c(i32 3)
  store i32 %v2_100085d8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008604

dec_label_pc_100085e4:                            ; preds = %dec_label_pc_10008598
  %v0_100085e8 = call i32 @__asm_mfcr()
  %v1_100085ec = and i32 %v0_100085e8, 268435456
  %v3_100085ec = icmp eq i32 %v1_100085ec, 0
  store i32 %v0_100085e8, i32* %r31.global-to-local, align 4
  br i1 %v3_100085ec, label %dec_label_pc_10008604, label %dec_label_pc_100085f8

dec_label_pc_100085f8:                            ; preds = %dec_label_pc_100085e4
  %v0_100085f8 = call i32 @function_10008d9c()
  %v0_100085fc = load i32, i32* %r31.global-to-local, align 4
  %v2_100085fc = inttoptr i32 %v0_100085f8 to i32*
  store i32 %v0_100085fc, i32* %v2_100085fc, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008604

dec_label_pc_10008604:                            ; preds = %dec_label_pc_100085e4, %dec_label_pc_100085d4, %dec_label_pc_100085f8
  %v0_10008608 = phi i32 [ %v0_100085e8, %dec_label_pc_100085e4 ], [ %v2_100085d8, %dec_label_pc_100085d4 ], [ -1, %dec_label_pc_100085f8 ]
  ret i32 %v0_10008608

; uselistorder directives
  uselistorder label %dec_label_pc_10008604, { 2, 0, 1 }
}

define i32 @function_1000861c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000861c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10008634 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008634, i32* %stack_var_-32, align 4
  %v0_10008650 = call i32 @__asm_mfcr()
  %v1_10008654 = and i32 %v0_10008650, 268435456
  %v3_10008654 = icmp eq i32 %v1_10008654, 0
  store i32 %v0_10008650, i32* %r31.global-to-local, align 4
  br i1 %v3_10008654, label %dec_label_pc_1000866c, label %dec_label_pc_10008660

dec_label_pc_10008660:                            ; preds = %dec_label_pc_1000861c
  %v0_10008660 = call i32 @function_10008d9c()
  %v0_10008664 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008664 = inttoptr i32 %v0_10008660 to i32*
  store i32 %v0_10008664, i32* %v2_10008664, align 4
  br label %dec_label_pc_1000866c

dec_label_pc_1000866c:                            ; preds = %dec_label_pc_1000861c, %dec_label_pc_10008660
  %v0_1000867c = phi i32 [ %v0_10008650, %dec_label_pc_1000861c ], [ -1, %dec_label_pc_10008660 ]
  ret i32 %v0_1000867c

; uselistorder directives
  uselistorder label %dec_label_pc_1000866c, { 1, 0 }
}

define i32 @function_10008680() local_unnamed_addr {
dec_label_pc_10008680:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008698 = call i32 @__asm_mfcr()
  %v1_1000869c = and i32 %v0_10008698, 268435456
  %v3_1000869c = icmp eq i32 %v1_1000869c, 0
  store i32 %v0_10008698, i32* %r31.global-to-local, align 4
  br i1 %v3_1000869c, label %dec_label_pc_100086b4, label %dec_label_pc_100086a8

dec_label_pc_100086a8:                            ; preds = %dec_label_pc_10008680
  %v0_100086a8 = call i32 @function_10008d9c()
  %v0_100086ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100086ac = inttoptr i32 %v0_100086a8 to i32*
  store i32 %v0_100086ac, i32* %v2_100086ac, align 4
  br label %dec_label_pc_100086b4

dec_label_pc_100086b4:                            ; preds = %dec_label_pc_10008680, %dec_label_pc_100086a8
  %v0_100086c4 = phi i32 [ %v0_10008698, %dec_label_pc_10008680 ], [ -1, %dec_label_pc_100086a8 ]
  ret i32 %v0_100086c4

; uselistorder directives
  uselistorder label %dec_label_pc_100086b4, { 1, 0 }
}

define i32 @function_100086c8() local_unnamed_addr {
dec_label_pc_100086c8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100086e0 = call i32 @__asm_mfcr()
  %v1_100086e4 = and i32 %v0_100086e0, 268435456
  %v3_100086e4 = icmp eq i32 %v1_100086e4, 0
  store i32 %v0_100086e0, i32* %r31.global-to-local, align 4
  br i1 %v3_100086e4, label %dec_label_pc_100086fc, label %dec_label_pc_100086f0

dec_label_pc_100086f0:                            ; preds = %dec_label_pc_100086c8
  %v0_100086f0 = call i32 @function_10008d9c()
  %v0_100086f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100086f4 = inttoptr i32 %v0_100086f0 to i32*
  store i32 %v0_100086f4, i32* %v2_100086f4, align 4
  br label %dec_label_pc_100086fc

dec_label_pc_100086fc:                            ; preds = %dec_label_pc_100086c8, %dec_label_pc_100086f0
  %v0_1000870c = phi i32 [ %v0_100086e0, %dec_label_pc_100086c8 ], [ -1, %dec_label_pc_100086f0 ]
  ret i32 %v0_1000870c

; uselistorder directives
  uselistorder label %dec_label_pc_100086fc, { 1, 0 }
}

define i32 @function_10008710() local_unnamed_addr {
dec_label_pc_10008710:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008728 = call i32 @__asm_mfcr()
  %v1_1000872c = and i32 %v0_10008728, 268435456
  %v3_1000872c = icmp eq i32 %v1_1000872c, 0
  store i32 %v0_10008728, i32* %r31.global-to-local, align 4
  br i1 %v3_1000872c, label %dec_label_pc_10008744, label %dec_label_pc_10008738

dec_label_pc_10008738:                            ; preds = %dec_label_pc_10008710
  %v0_10008738 = call i32 @function_10008d9c()
  %v0_1000873c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000873c = inttoptr i32 %v0_10008738 to i32*
  store i32 %v0_1000873c, i32* %v2_1000873c, align 4
  br label %dec_label_pc_10008744

dec_label_pc_10008744:                            ; preds = %dec_label_pc_10008710, %dec_label_pc_10008738
  %v0_10008754 = phi i32 [ %v0_10008728, %dec_label_pc_10008710 ], [ -1, %dec_label_pc_10008738 ]
  ret i32 %v0_10008754

; uselistorder directives
  uselistorder label %dec_label_pc_10008744, { 1, 0 }
}

define i32 @function_10008758() local_unnamed_addr {
dec_label_pc_10008758:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008770 = call i32 @__asm_mfcr()
  %v1_10008774 = and i32 %v0_10008770, 268435456
  %v3_10008774 = icmp eq i32 %v1_10008774, 0
  store i32 %v0_10008770, i32* %r31.global-to-local, align 4
  br i1 %v3_10008774, label %dec_label_pc_1000878c, label %dec_label_pc_10008780

dec_label_pc_10008780:                            ; preds = %dec_label_pc_10008758
  %v0_10008780 = call i32 @function_10008d9c()
  %v0_10008784 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008784 = inttoptr i32 %v0_10008780 to i32*
  store i32 %v0_10008784, i32* %v2_10008784, align 4
  br label %dec_label_pc_1000878c

dec_label_pc_1000878c:                            ; preds = %dec_label_pc_10008758, %dec_label_pc_10008780
  %v0_1000879c = phi i32 [ %v0_10008770, %dec_label_pc_10008758 ], [ -1, %dec_label_pc_10008780 ]
  ret i32 %v0_1000879c

; uselistorder directives
  uselistorder label %dec_label_pc_1000878c, { 1, 0 }
}

define i32 @function_100087a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100087a0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100087b8 = call i32 @__asm_mfcr()
  %v1_100087bc = and i32 %v0_100087b8, 268435456
  %v3_100087bc = icmp eq i32 %v1_100087bc, 0
  store i32 %v0_100087b8, i32* %r31.global-to-local, align 4
  br i1 %v3_100087bc, label %dec_label_pc_100087d4, label %dec_label_pc_100087c8

dec_label_pc_100087c8:                            ; preds = %dec_label_pc_100087a0
  %v0_100087c8 = call i32 @function_10008d9c()
  %v0_100087cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100087cc = inttoptr i32 %v0_100087c8 to i32*
  store i32 %v0_100087cc, i32* %v2_100087cc, align 4
  br label %dec_label_pc_100087d4

dec_label_pc_100087d4:                            ; preds = %dec_label_pc_100087a0, %dec_label_pc_100087c8
  %v0_100087e4 = phi i32 [ %v0_100087b8, %dec_label_pc_100087a0 ], [ -1, %dec_label_pc_100087c8 ]
  ret i32 %v0_100087e4

; uselistorder directives
  uselistorder label %dec_label_pc_100087d4, { 1, 0 }
}

define i32 @function_100087e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100087e8:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100087fc = and i32 %arg2, 64
  %v3_100087fc = icmp eq i32 %v1_100087fc, 0
  br i1 %v3_100087fc, label %dec_label_pc_10008828, label %dec_label_pc_1000880c

dec_label_pc_1000880c:                            ; preds = %dec_label_pc_100087e8
  %v2_10008814 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008814, i32* %stack_var_-32, align 4
  %v0_10008824 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10008828

dec_label_pc_10008828:                            ; preds = %dec_label_pc_100087e8, %dec_label_pc_1000880c
  %v0_10008828 = phi i32 [ 0, %dec_label_pc_100087e8 ], [ %v0_10008824, %dec_label_pc_1000880c ]
  store i32 %v0_10008828, i32* @r5, align 4
  %v0_10008830 = call i32 @__asm_mfcr()
  %v1_10008834 = and i32 %v0_10008830, 268435456
  %v3_10008834 = icmp eq i32 %v1_10008834, 0
  store i32 %v0_10008830, i32* %r31.global-to-local, align 4
  br i1 %v3_10008834, label %dec_label_pc_1000884c, label %dec_label_pc_10008840

dec_label_pc_10008840:                            ; preds = %dec_label_pc_10008828
  %v0_10008840 = call i32 @function_10008d9c()
  %v0_10008844 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008844 = inttoptr i32 %v0_10008840 to i32*
  store i32 %v0_10008844, i32* %v2_10008844, align 4
  br label %dec_label_pc_1000884c

dec_label_pc_1000884c:                            ; preds = %dec_label_pc_10008828, %dec_label_pc_10008840
  %v0_1000885c = phi i32 [ %v0_10008830, %dec_label_pc_10008828 ], [ -1, %dec_label_pc_10008840 ]
  ret i32 %v0_1000885c

; uselistorder directives
  uselistorder label %dec_label_pc_1000884c, { 1, 0 }
  uselistorder label %dec_label_pc_10008828, { 1, 0 }
}

define i32 @function_10008860(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008860:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000886c = call i32 @function_100087e8(i32 577, i32 577)
  ret i32 %v2_1000886c
}

define i32 @function_10008870(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008870:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008888 = call i32 @__asm_mfcr()
  %v1_1000888c = and i32 %v0_10008888, 268435456
  %v3_1000888c = icmp eq i32 %v1_1000888c, 0
  store i32 %v0_10008888, i32* %r31.global-to-local, align 4
  br i1 %v3_1000888c, label %dec_label_pc_100088a4, label %dec_label_pc_10008898

dec_label_pc_10008898:                            ; preds = %dec_label_pc_10008870
  %v0_10008898 = call i32 @function_10008d9c()
  %v0_1000889c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000889c = inttoptr i32 %v0_10008898 to i32*
  store i32 %v0_1000889c, i32* %v2_1000889c, align 4
  br label %dec_label_pc_100088a4

dec_label_pc_100088a4:                            ; preds = %dec_label_pc_10008870, %dec_label_pc_10008898
  %v0_100088b4 = phi i32 [ %v0_10008888, %dec_label_pc_10008870 ], [ -1, %dec_label_pc_10008898 ]
  ret i32 %v0_100088b4

; uselistorder directives
  uselistorder label %dec_label_pc_100088a4, { 1, 0 }
}

define i32 @function_100088b8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100088b8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100088d0 = call i32 @__asm_mfcr()
  %v1_100088d4 = and i32 %v0_100088d0, 268435456
  %v3_100088d4 = icmp eq i32 %v1_100088d4, 0
  store i32 %v0_100088d0, i32* %r31.global-to-local, align 4
  br i1 %v3_100088d4, label %dec_label_pc_100088ec, label %dec_label_pc_100088e0

dec_label_pc_100088e0:                            ; preds = %dec_label_pc_100088b8
  %v0_100088e0 = call i32 @function_10008d9c()
  %v0_100088e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100088e4 = inttoptr i32 %v0_100088e0 to i32*
  store i32 %v0_100088e4, i32* %v2_100088e4, align 4
  br label %dec_label_pc_100088ec

dec_label_pc_100088ec:                            ; preds = %dec_label_pc_100088b8, %dec_label_pc_100088e0
  %v0_100088fc = phi i32 [ %v0_100088d0, %dec_label_pc_100088b8 ], [ -1, %dec_label_pc_100088e0 ]
  ret i32 %v0_100088fc

; uselistorder directives
  uselistorder label %dec_label_pc_100088ec, { 1, 0 }
}

define i32 @function_10008900(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008900:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008918 = call i32 @__asm_mfcr()
  %v1_1000891c = and i32 %v0_10008918, 268435456
  %v3_1000891c = icmp eq i32 %v1_1000891c, 0
  store i32 %v0_10008918, i32* %r31.global-to-local, align 4
  br i1 %v3_1000891c, label %dec_label_pc_10008934, label %dec_label_pc_10008928

dec_label_pc_10008928:                            ; preds = %dec_label_pc_10008900
  %v0_10008928 = call i32 @function_10008d9c()
  %v0_1000892c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000892c = inttoptr i32 %v0_10008928 to i32*
  store i32 %v0_1000892c, i32* %v2_1000892c, align 4
  br label %dec_label_pc_10008934

dec_label_pc_10008934:                            ; preds = %dec_label_pc_10008900, %dec_label_pc_10008928
  %v0_10008944 = phi i32 [ %v0_10008918, %dec_label_pc_10008900 ], [ -1, %dec_label_pc_10008928 ]
  ret i32 %v0_10008944

; uselistorder directives
  uselistorder label %dec_label_pc_10008934, { 1, 0 }
}

define i32 @function_10008948(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10008948:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008960 = call i32 @__asm_mfcr()
  %v1_10008964 = and i32 %v0_10008960, 268435456
  %v3_10008964 = icmp eq i32 %v1_10008964, 0
  store i32 %v0_10008960, i32* %r31.global-to-local, align 4
  br i1 %v3_10008964, label %dec_label_pc_1000897c, label %dec_label_pc_10008970

dec_label_pc_10008970:                            ; preds = %dec_label_pc_10008948
  %v0_10008970 = call i32 @function_10008d9c()
  %v0_10008974 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008974 = inttoptr i32 %v0_10008970 to i32*
  store i32 %v0_10008974, i32* %v2_10008974, align 4
  br label %dec_label_pc_1000897c

dec_label_pc_1000897c:                            ; preds = %dec_label_pc_10008948, %dec_label_pc_10008970
  %v0_1000898c = phi i32 [ %v0_10008960, %dec_label_pc_10008948 ], [ -1, %dec_label_pc_10008970 ]
  ret i32 %v0_1000898c

; uselistorder directives
  uselistorder label %dec_label_pc_1000897c, { 1, 0 }
}

define i32 @function_10008990(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008990:
  %r31.global-to-local = alloca i32, align 4
  %v0_100089a8 = call i32 @__asm_mfcr()
  %v1_100089ac = and i32 %v0_100089a8, 268435456
  %v3_100089ac = icmp eq i32 %v1_100089ac, 0
  store i32 %v0_100089a8, i32* %r31.global-to-local, align 4
  br i1 %v3_100089ac, label %dec_label_pc_100089c4, label %dec_label_pc_100089b8

dec_label_pc_100089b8:                            ; preds = %dec_label_pc_10008990
  %v0_100089b8 = call i32 @function_10008d9c()
  %v0_100089bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100089bc = inttoptr i32 %v0_100089b8 to i32*
  store i32 %v0_100089bc, i32* %v2_100089bc, align 4
  br label %dec_label_pc_100089c4

dec_label_pc_100089c4:                            ; preds = %dec_label_pc_10008990, %dec_label_pc_100089b8
  %v0_100089d4 = phi i32 [ %v0_100089a8, %dec_label_pc_10008990 ], [ -1, %dec_label_pc_100089b8 ]
  ret i32 %v0_100089d4

; uselistorder directives
  uselistorder label %dec_label_pc_100089c4, { 1, 0 }
}

define i32 @function_100089d8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100089d8:
  %r31.global-to-local = alloca i32, align 4
  %v3_100089d8 = icmp eq i32 %arg2, 0
  br i1 %v3_100089d8, label %dec_label_pc_10008a18, label %dec_label_pc_10008a00

dec_label_pc_10008a00:                            ; preds = %dec_label_pc_100089d8
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10008a18, label %dec_label_pc_10008a08

dec_label_pc_10008a08:                            ; preds = %dec_label_pc_10008a00
  %v0_10008a08 = call i32 @function_10008d9c()
  %v2_10008a10 = inttoptr i32 %v0_10008a08 to i32*
  store i32 22, i32* %v2_10008a10, align 4
  %v0_10008a3c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008a38

dec_label_pc_10008a18:                            ; preds = %dec_label_pc_10008a00, %dec_label_pc_100089d8
  %v0_10008a1c = call i32 @__asm_mfcr()
  %v1_10008a20 = and i32 %v0_10008a1c, 268435456
  %v3_10008a20 = icmp eq i32 %v1_10008a20, 0
  store i32 %v0_10008a1c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008a20, label %dec_label_pc_10008a38, label %dec_label_pc_10008a2c

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_10008a18
  %v0_10008a2c = call i32 @function_10008d9c()
  %v0_10008a30 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008a30 = inttoptr i32 %v0_10008a2c to i32*
  store i32 %v0_10008a30, i32* %v2_10008a30, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008a38

dec_label_pc_10008a38:                            ; preds = %dec_label_pc_10008a18, %dec_label_pc_10008a08, %dec_label_pc_10008a2c
  %v0_10008a3c = phi i32 [ %v0_10008a1c, %dec_label_pc_10008a18 ], [ %v0_10008a3c.pre, %dec_label_pc_10008a08 ], [ -1, %dec_label_pc_10008a2c ]
  ret i32 %v0_10008a3c

; uselistorder directives
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10008a38, { 2, 0, 1 }
}

define i32 @function_10008a50() local_unnamed_addr {
dec_label_pc_10008a50:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008a68 = call i32 @__asm_mfcr()
  %v1_10008a6c = and i32 %v0_10008a68, 268435456
  %v3_10008a6c = icmp eq i32 %v1_10008a6c, 0
  store i32 %v0_10008a68, i32* %r31.global-to-local, align 4
  br i1 %v3_10008a6c, label %dec_label_pc_10008a84, label %dec_label_pc_10008a78

dec_label_pc_10008a78:                            ; preds = %dec_label_pc_10008a50
  %v0_10008a78 = call i32 @function_10008d9c()
  %v0_10008a7c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008a7c = inttoptr i32 %v0_10008a78 to i32*
  store i32 %v0_10008a7c, i32* %v2_10008a7c, align 4
  br label %dec_label_pc_10008a84

dec_label_pc_10008a84:                            ; preds = %dec_label_pc_10008a50, %dec_label_pc_10008a78
  %v0_10008a94 = phi i32 [ %v0_10008a68, %dec_label_pc_10008a50 ], [ -1, %dec_label_pc_10008a78 ]
  ret i32 %v0_10008a94

; uselistorder directives
  uselistorder label %dec_label_pc_10008a84, { 1, 0 }
}

define i32 @function_10008a98(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008a98:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008ab0 = call i32 @__asm_mfcr()
  %v1_10008ab4 = and i32 %v0_10008ab0, 268435456
  %v3_10008ab4 = icmp eq i32 %v1_10008ab4, 0
  store i32 %v0_10008ab0, i32* %r31.global-to-local, align 4
  br i1 %v3_10008ab4, label %dec_label_pc_10008acc, label %dec_label_pc_10008ac0

dec_label_pc_10008ac0:                            ; preds = %dec_label_pc_10008a98
  %v0_10008ac0 = call i32 @function_10008d9c()
  %v0_10008ac4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008ac4 = inttoptr i32 %v0_10008ac0 to i32*
  store i32 %v0_10008ac4, i32* %v2_10008ac4, align 4
  br label %dec_label_pc_10008acc

dec_label_pc_10008acc:                            ; preds = %dec_label_pc_10008a98, %dec_label_pc_10008ac0
  %v0_10008adc = phi i32 [ %v0_10008ab0, %dec_label_pc_10008a98 ], [ -1, %dec_label_pc_10008ac0 ]
  ret i32 %v0_10008adc

; uselistorder directives
  uselistorder label %dec_label_pc_10008acc, { 1, 0 }
}

define i32 @function_10008ae0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ae0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008af8 = call i32 @__asm_mfcr()
  %v1_10008afc = and i32 %v0_10008af8, 268435456
  %v3_10008afc = icmp eq i32 %v1_10008afc, 0
  store i32 %v0_10008af8, i32* %r31.global-to-local, align 4
  br i1 %v3_10008afc, label %dec_label_pc_10008b14, label %dec_label_pc_10008b08

dec_label_pc_10008b08:                            ; preds = %dec_label_pc_10008ae0
  %v0_10008b08 = call i32 @function_10008d9c()
  %v0_10008b0c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008b0c = inttoptr i32 %v0_10008b08 to i32*
  store i32 %v0_10008b0c, i32* %v2_10008b0c, align 4
  br label %dec_label_pc_10008b14

dec_label_pc_10008b14:                            ; preds = %dec_label_pc_10008ae0, %dec_label_pc_10008b08
  %v0_10008b24 = phi i32 [ %v0_10008af8, %dec_label_pc_10008ae0 ], [ -1, %dec_label_pc_10008b08 ]
  ret i32 %v0_10008b24

; uselistorder directives
  uselistorder label %dec_label_pc_10008b14, { 1, 0 }
}

define i32 @function_10008b28(i32* %arg1) local_unnamed_addr {
dec_label_pc_10008b28:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008b44 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008b44, i32* @r30, align 4
  %v2_10008b4c = load i32, i32* %arg1, align 4
  store i32 %v2_10008b44, i32* @r3, align 4
  %v3_10008b58 = icmp eq i32 %v2_10008b4c, -1
  br i1 %v3_10008b58, label %dec_label_pc_10008b60, label %dec_label_pc_10008b74

dec_label_pc_10008b60:                            ; preds = %dec_label_pc_10008b28
  %v0_10008b60 = call i32 @function_10008d9c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008b6c = inttoptr i32 %v0_10008b60 to i32*
  store i32 9, i32* %v2_10008b6c, align 4
  %v0_10008bb8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008bb4

dec_label_pc_10008b74:                            ; preds = %dec_label_pc_10008b28
  %v3_10008b74 = call i32 @function_1000a104(i32 %v2_10008b44, i32 ptrtoint ([3 x i8]* @global_var_1000a0fc.252 to i32))
  %v0_10008b7c = call i32 @function_1000a0fc()
  %v0_10008b84 = load i32, i32* @r31, align 4
  %v1_10008b84 = inttoptr i32 %v0_10008b84 to i32*
  %v2_10008b84 = load i32, i32* %v1_10008b84, align 4
  store i32 %v2_10008b84, i32* @r29, align 4
  store i32 -1, i32* %v1_10008b84, align 4
  store i32 %v2_10008b44, i32* @r3, align 4
  %v2_10008b94 = call i32 @function_1000a104(i32 %v2_10008b44, i32 1)
  %v0_10008b98 = load i32, i32* @r31, align 4
  %v1_10008b98 = add i32 %v0_10008b98, 12
  %v2_10008b98 = inttoptr i32 %v1_10008b98 to i32*
  %v3_10008b98 = load i32, i32* %v2_10008b98, align 4
  store i32 %v3_10008b98, i32* @r3, align 4
  store i32 268471200, i32* @lr, align 4
  %v0_10008b9c = call i32 @function_10009768()
  %v0_10008ba0 = load i32, i32* @r31, align 4
  store i32 %v0_10008ba0, i32* @r3, align 4
  store i32 268471208, i32* @lr, align 4
  %v0_10008ba4 = call i32 @function_10009768()
  store i32 268471216, i32* @lr, align 4
  %v0_10008bac = call i32 @function_10008680()
  store i32 %v0_10008bac, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008bb4

dec_label_pc_10008bb4:                            ; preds = %dec_label_pc_10008b60, %dec_label_pc_10008b74
  %v0_10008bb8 = phi i32 [ %v0_10008bb8.pre, %dec_label_pc_10008b60 ], [ %v0_10008bac, %dec_label_pc_10008b74 ]
  ret i32 %v0_10008bb8

; uselistorder directives
  uselistorder i32 %v2_10008b44, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10008bb4, { 1, 0 }
}

define i32 @function_10008bcc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008bcc:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_10008bcc = load i32, i32* @lr, align 4
  store i32 %v0_10008bcc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268471276, i32* @lr, align 4
  %v2_10008be8 = call i32 @function_100087e8(i32 18432, i32 18432)
  store i32 %v2_10008be8, i32* @r29, align 4
  %v1_10008bec = icmp slt i32 %v2_10008be8, 0
  br i1 %v1_10008bec, label %dec_label_pc_10008cc4, label %dec_label_pc_10008bf4

dec_label_pc_10008bf4:                            ; preds = %dec_label_pc_10008bcc
  %v2_10008bf4 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10008bf4, i32* @r4, align 4
  store i32 268471292, i32* @lr, align 4
  %v1_10008bf8 = call i32 @function_1000a4d8(i32 %v2_10008bf4)
  %v1_10008bfc = icmp slt i32 %v1_10008bf8, 0
  br i1 %v1_10008bfc, label %dec_label_pc_10008c20, label %dec_label_pc_10008c04

dec_label_pc_10008c04:                            ; preds = %dec_label_pc_10008bf4
  %v0_10008c04 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268471320, i32* @lr, align 4
  %v2_10008c14 = call i32 @function_10008598(i32 %v0_10008c04)
  %tmp5 = icmp sgt i32 %v2_10008c14, -1
  br i1 %tmp5, label %dec_label_pc_10008c40, label %dec_label_pc_10008c20

dec_label_pc_10008c20:                            ; preds = %dec_label_pc_10008c04, %dec_label_pc_10008bf4
  %v0_10008c20 = call i32 @function_10008d9c()
  store i32 0, i32* @r31, align 4
  store i32 %v0_10008c20, i32* @r28, align 4
  %v1_10008c30 = inttoptr i32 %v0_10008c20 to i32*
  %v2_10008c30 = load i32, i32* %v1_10008c30, align 4
  store i32 %v2_10008c30, i32* @r29, align 4
  store i32 268471352, i32* @lr, align 4
  %v0_10008c34 = call i32 @function_10008680()
  %v0_10008c38 = load i32, i32* @r29, align 4
  %v1_10008c38 = load i32, i32* @r28, align 4
  %v2_10008c38 = inttoptr i32 %v1_10008c38 to i32*
  store i32 %v0_10008c38, i32* %v2_10008c38, align 4
  br label %dec_label_pc_10008cc4

dec_label_pc_10008c40:                            ; preds = %dec_label_pc_10008c04
  store i32 48, i32* @r3, align 4
  store i32 268471368, i32* @lr, align 4
  %v0_10008c44 = call i32 @function_100095a0()
  store i32 %v0_10008c44, i32* %r31.global-to-local, align 4
  %v3_10008c48 = icmp eq i32 %v0_10008c44, 0
  br i1 %v3_10008c48, label %dec_label_pc_10008c9c, label %dec_label_pc_10008c50

dec_label_pc_10008c50:                            ; preds = %dec_label_pc_10008c40
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10008c54 = load i32, i32* @r29, align 4
  %v2_10008c54 = inttoptr i32 %v0_10008c44 to i32*
  store i32 %v0_10008c54, i32* %v2_10008c54, align 4
  %v0_10008c58 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008c58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c58 = add i32 %v1_10008c58, 4
  %v3_10008c58 = inttoptr i32 %v2_10008c58 to i32*
  store i32 %v0_10008c58, i32* %v3_10008c58, align 4
  %v0_10008c5c = load i32, i32* %r0.global-to-local, align 4
  %v1_10008c5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c5c = add i32 %v1_10008c5c, 16
  %v3_10008c5c = inttoptr i32 %v2_10008c5c to i32*
  store i32 %v0_10008c5c, i32* %v3_10008c5c, align 4
  %v0_10008c60 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008c60 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c60 = add i32 %v1_10008c60, 8
  %v3_10008c60 = inttoptr i32 %v2_10008c60 to i32*
  store i32 %v0_10008c60, i32* %v3_10008c60, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10008c68 = icmp ugt i32 %tmp, 511
  %v1_10008c6c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c6c = add i32 %v1_10008c6c, 20
  %v3_10008c6c = inttoptr i32 %v2_10008c6c to i32*
  store i32 %tmp, i32* %v3_10008c6c, align 4
  br i1 %v2_10008c68, label %dec_label_pc_10008c7c, label %dec_label_pc_10008c74

dec_label_pc_10008c74:                            ; preds = %dec_label_pc_10008c50
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10008c78 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c78 = add i32 %v1_10008c78, 20
  %v3_10008c78 = inttoptr i32 %v2_10008c78 to i32*
  store i32 512, i32* %v3_10008c78, align 4
  br label %dec_label_pc_10008c7c

dec_label_pc_10008c7c:                            ; preds = %dec_label_pc_10008c50, %dec_label_pc_10008c74
  %v0_10008c7c = load i32, i32* %r31.global-to-local, align 4
  %v1_10008c7c = add i32 %v0_10008c7c, 20
  %v2_10008c7c = inttoptr i32 %v1_10008c7c to i32*
  %v3_10008c7c = load i32, i32* %v2_10008c7c, align 4
  store i32 268471432, i32* @lr, align 4
  %v2_10008c84 = call i32 @function_100096f8(i32 1, i32 %v3_10008c7c)
  %v3_10008c88 = icmp eq i32 %v2_10008c84, 0
  %v1_10008c8c = load i32, i32* @r31, align 4
  %v2_10008c8c = add i32 %v1_10008c8c, 12
  %v3_10008c8c = inttoptr i32 %v2_10008c8c to i32*
  store i32 %v2_10008c84, i32* %v3_10008c8c, align 4
  br i1 %v3_10008c88, label %dec_label_pc_10008c94, label %dec_label_pc_10008cb8

dec_label_pc_10008c94:                            ; preds = %dec_label_pc_10008c7c
  %v0_10008c94 = load i32, i32* @r31, align 4
  store i32 %v0_10008c94, i32* @r3, align 4
  store i32 268471452, i32* @lr, align 4
  %v0_10008c98 = call i32 @function_10009768()
  br label %dec_label_pc_10008c9c

dec_label_pc_10008c9c:                            ; preds = %dec_label_pc_10008c40, %dec_label_pc_10008c94
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10008ca8.255 to i32), i32* @lr, align 4
  %v0_10008ca4 = call i32 @function_10008680()
  %v0_10008ca8 = call i32 @function_10008d9c()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10008cb0 = inttoptr i32 %v0_10008ca8 to i32*
  store i32 12, i32* %v2_10008cb0, align 4
  br label %dec_label_pc_10008cc4

dec_label_pc_10008cb8:                            ; preds = %dec_label_pc_10008c7c
  %v0_10008cc0 = call i32 @function_1000a0fc()
  br label %dec_label_pc_10008cc4

dec_label_pc_10008cc4:                            ; preds = %dec_label_pc_10008bcc, %dec_label_pc_10008c9c, %dec_label_pc_10008c20, %dec_label_pc_10008cb8
  store i32 %v0_10008bcc, i32* %r0.global-to-local, align 4
  %v0_10008cc8 = load i32, i32* @r31, align 4
  ret i32 %v0_10008cc8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_100096f8, { 41, 42, 26, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 0, 27, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_10008680, { 17, 16, 15, 35, 34, 33, 32, 30, 31, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 14, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_10008cc4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10008c9c, { 1, 0 }
  uselistorder label %dec_label_pc_10008c7c, { 1, 0 }
}

define i32 @function_10008cdc(i32* %arg1) local_unnamed_addr {
dec_label_pc_10008cdc:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_10008ce0 = load i32, i32* @lr, align 4
  store i32 %v0_10008ce0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008cf8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008cf8, i32* @r3, align 4
  %v3_10008d04 = call i32 @function_1000a104(i32 %v2_10008cf8, i32 ptrtoint ([3 x i8]* @global_var_1000a0fc.252 to i32))
  %v0_10008d0c = call i32 @function_1000a0fc()
  br label %dec_label_pc_10008d10

dec_label_pc_10008d10:                            ; preds = %dec_label_pc_10008d4c, %dec_label_pc_10008cdc
  %v0_10008d10 = load i32, i32* @r31, align 4
  %v1_10008d10 = add i32 %v0_10008d10, 4
  %v2_10008d10 = inttoptr i32 %v1_10008d10 to i32*
  %v3_10008d10 = load i32, i32* %v2_10008d10, align 4
  store i32 %v3_10008d10, i32* %r0.global-to-local, align 4
  %v1_10008d14 = add i32 %v0_10008d10, 8
  %v2_10008d14 = inttoptr i32 %v1_10008d14 to i32*
  %v3_10008d14 = load i32, i32* %v2_10008d14, align 4
  store i32 %v3_10008d14, i32* %r9.global-to-local, align 4
  %v3_10008d18 = icmp ugt i32 %v3_10008d14, %v3_10008d10
  br i1 %v3_10008d18, label %dec_label_pc_10008d4c, label %dec_label_pc_10008d20

dec_label_pc_10008d20:                            ; preds = %dec_label_pc_10008d10
  %v1_10008d20 = inttoptr i32 %v0_10008d10 to i32*
  %v2_10008d20 = load i32, i32* %v1_10008d20, align 4
  store i32 %v2_10008d20, i32* @r3, align 4
  %v1_10008d24 = add i32 %v0_10008d10, 12
  %v2_10008d24 = inttoptr i32 %v1_10008d24 to i32*
  %v3_10008d24 = load i32, i32* %v2_10008d24, align 4
  %v1_10008d28 = add i32 %v0_10008d10, 20
  %v2_10008d28 = inttoptr i32 %v1_10008d28 to i32*
  %v3_10008d28 = load i32, i32* %v2_10008d28, align 4
  store i32 %v3_10008d28, i32* @r5, align 4
  store i32 268471600, i32* @lr, align 4
  %v4_10008d2c = inttoptr i32 %v2_10008d20 to i32*
  %v5_10008d2c = call i32 @function_1000a54c(i32* %v4_10008d2c, i32 %v3_10008d24, i32 %v3_10008d28, i32 %v3_10008d14)
  %v2_10008d30 = icmp sgt i32 %v5_10008d2c, 0
  br i1 %v2_10008d30, label %dec_label_pc_10008d40, label %dec_label_pc_10008d38

dec_label_pc_10008d38:                            ; preds = %dec_label_pc_10008d20
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10008d78

dec_label_pc_10008d40:                            ; preds = %dec_label_pc_10008d20
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008d44 = load i32, i32* @r31, align 4
  %v2_10008d44 = add i32 %v1_10008d44, 8
  %v3_10008d44 = inttoptr i32 %v2_10008d44 to i32*
  store i32 %v5_10008d2c, i32* %v3_10008d44, align 4
  %v0_10008d48 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008d48 = load i32, i32* @r31, align 4
  %v2_10008d48 = add i32 %v1_10008d48, 4
  %v3_10008d48 = inttoptr i32 %v2_10008d48 to i32*
  store i32 %v0_10008d48, i32* %v3_10008d48, align 4
  %v0_10008d4c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008d4c

dec_label_pc_10008d4c:                            ; preds = %dec_label_pc_10008d10, %dec_label_pc_10008d40
  %v1_10008d60 = phi i32 [ %v0_10008d10, %dec_label_pc_10008d10 ], [ %v0_10008d4c.pre, %dec_label_pc_10008d40 ]
  %v1_10008d4c = add i32 %v1_10008d60, 4
  %v2_10008d4c = inttoptr i32 %v1_10008d4c to i32*
  %v3_10008d4c = load i32, i32* %v2_10008d4c, align 4
  store i32 %v3_10008d4c, i32* %r9.global-to-local, align 4
  %v1_10008d50 = add i32 %v1_10008d60, 12
  %v2_10008d50 = inttoptr i32 %v1_10008d50 to i32*
  %v3_10008d50 = load i32, i32* %v2_10008d50, align 4
  store i32 %v3_10008d50, i32* %r11.global-to-local, align 4
  %v2_10008d54 = add i32 %v3_10008d50, %v3_10008d4c
  store i32 %v2_10008d54, i32* @r29, align 4
  %v1_10008d58 = add i32 %v2_10008d54, 8
  %v2_10008d58 = inttoptr i32 %v1_10008d58 to i16*
  %v3_10008d58 = load i16, i16* %v2_10008d58, align 2
  %v4_10008d58 = zext i16 %v3_10008d58 to i32
  %v2_10008d5c = add i32 %v4_10008d58, %v3_10008d4c
  store i32 %v2_10008d5c, i32* %r0.global-to-local, align 4
  store i32 %v2_10008d5c, i32* %v2_10008d4c, align 4
  %v0_10008d64 = load i32, i32* @r29, align 4
  %v1_10008d64 = add i32 %v0_10008d64, 4
  %v2_10008d64 = inttoptr i32 %v1_10008d64 to i32*
  %v3_10008d64 = load i32, i32* %v2_10008d64, align 4
  store i32 %v3_10008d64, i32* %r0.global-to-local, align 4
  %v1_10008d68 = load i32, i32* @r31, align 4
  %v2_10008d68 = add i32 %v1_10008d68, 16
  %v3_10008d68 = inttoptr i32 %v2_10008d68 to i32*
  store i32 %v3_10008d64, i32* %v3_10008d68, align 4
  %v0_10008d6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10008d6c = load i32, i32* %r11.global-to-local, align 4
  %v2_10008d6c = add i32 %v1_10008d6c, %v0_10008d6c
  %v3_10008d6c = inttoptr i32 %v2_10008d6c to i32*
  %v4_10008d6c = load i32, i32* %v3_10008d6c, align 4
  store i32 %v4_10008d6c, i32* %r0.global-to-local, align 4
  %v3_10008d70 = icmp eq i32 %v4_10008d6c, 0
  br i1 %v3_10008d70, label %dec_label_pc_10008d10, label %dec_label_pc_10008d78

dec_label_pc_10008d78:                            ; preds = %dec_label_pc_10008d4c, %dec_label_pc_10008d38
  store i32 %v2_10008cf8, i32* @r3, align 4
  %v2_10008d80 = call i32 @function_1000a104(i32 %v2_10008cf8, i32 1)
  store i32 %v0_10008ce0, i32* %r0.global-to-local, align 4
  %v0_10008d88 = load i32, i32* @r29, align 4
  ret i32 %v0_10008d88

; uselistorder directives
  uselistorder i32 %v1_10008d60, { 1, 0 }
  uselistorder i32 %v0_10008d10, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10008cf8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008d4c, { 1, 0 }
}

define i32 @function_10008d9c() local_unnamed_addr {
dec_label_pc_10008d9c:
  ret i32 ptrtoint (i32* @global_var_1001b76c.257 to i32)
}

define i32 @function_10008da8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008da8:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10008db0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268471740, i32* @lr, align 4
  %v1_10008db8 = call i32 @function_1000a98c(i32 %v2_10008db0)
  %v3_10008dc0 = load i32, i32* %stack_var_-24, align 4
  %v2_10008dc4 = add i32 %v3_10008dc0, %tmp
  %v1_10008dcc = mul i32 %v2_10008dc4, 10000
  %v1_10008dd8 = and i32 %v1_10008dcc, 2147483632
  ret i32 %v1_10008dd8
}

define i32 @function_10008de0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008de0:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10008de0 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_10008de0, label %dec_label_pc_10008df4, label %dec_label_pc_10008df0

dec_label_pc_10008df0:                            ; preds = %dec_label_pc_10008de0
  %v0_10008df0 = call i32 @function_1000ab50()
  store i32 %v0_10008df0, i32* @r3, align 4
  br label %dec_label_pc_10008df4

dec_label_pc_10008df4:                            ; preds = %dec_label_pc_10008de0, %dec_label_pc_10008df0
  %v1_10008df4 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008df4, i32* %r9.global-to-local, align 4
  %v4_10008df4 = icmp eq i32 %v1_10008df4, 0
  %v2_10008df8 = add i32 %arg3, %arg2
  store i32 %v2_10008df8, i32* %r4.global-to-local, align 4
  %v0_10008dfc = load i32, i32* @r3, align 4
  %v2_10008dfc = add i32 %v0_10008dfc, %arg3
  store i32 %v2_10008dfc, i32* %r10.global-to-local, align 4
  br i1 %v4_10008df4, label %dec_label_pc_10008e24, label %dec_label_pc_10008e04

dec_label_pc_10008e04:                            ; preds = %dec_label_pc_10008df4
  %v1_10008e04 = urem i32 %v2_10008dfc, 4
  %v3_10008e04 = icmp eq i32 %v1_10008e04, 0
  br i1 %v3_10008e04, label %dec_label_pc_10008e0c, label %dec_label_pc_10008e58

dec_label_pc_10008e0c:                            ; preds = %dec_label_pc_10008e70.dec_label_pc_10008e0c_crit_edge, %dec_label_pc_10008e04
  %v1_10008e18.pre = phi i32 [ %v1_10008e18.pre.pre, %dec_label_pc_10008e70.dec_label_pc_10008e0c_crit_edge ], [ %v2_10008dfc, %dec_label_pc_10008e04 ]
  %v0_10008e0c = phi i32 [ %v1_10008e70, %dec_label_pc_10008e70.dec_label_pc_10008e0c_crit_edge ], [ %v1_10008df4, %dec_label_pc_10008e04 ]
  store i32 %v0_10008e0c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008e10

dec_label_pc_10008e10:                            ; preds = %dec_label_pc_10008e10, %dec_label_pc_10008e0c
  %v1_10008e18 = phi i32 [ %v2_10008e1c, %dec_label_pc_10008e10 ], [ %v1_10008e18.pre, %dec_label_pc_10008e0c ]
  %v0_10008e10 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008e10 = add i32 %v0_10008e10, -4
  %v2_10008e10 = inttoptr i32 %v1_10008e10 to i32*
  %v3_10008e10 = load i32, i32* %v2_10008e10, align 4
  %v1_10008e14 = add i32 %v0_10008e10, -8
  %v2_10008e14 = inttoptr i32 %v1_10008e14 to i32*
  %v3_10008e14 = load i32, i32* %v2_10008e14, align 4
  store i32 %v3_10008e14, i32* %r9.global-to-local, align 4
  store i32 %v1_10008e14, i32* %r4.global-to-local, align 4
  %v2_10008e18 = add i32 %v1_10008e18, -4
  %v3_10008e18 = inttoptr i32 %v2_10008e18 to i32*
  store i32 %v3_10008e10, i32* %v3_10008e18, align 4
  %v0_10008e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e1c = load i32, i32* %r10.global-to-local, align 4
  %v2_10008e1c = add i32 %v1_10008e1c, -8
  %v3_10008e1c = inttoptr i32 %v2_10008e1c to i32*
  store i32 %v0_10008e1c, i32* %v3_10008e1c, align 4
  store i32 %v2_10008e1c, i32* %r10.global-to-local, align 4
  %v0_10008e20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e20 = add i32 %v0_10008e20, -1
  store i32 %v1_10008e20, i32* %ctr.global-to-local, align 4
  %v2_10008e20 = icmp eq i32 %v1_10008e20, 0
  br i1 %v2_10008e20, label %dec_label_pc_10008e24, label %dec_label_pc_10008e10

dec_label_pc_10008e24:                            ; preds = %dec_label_pc_10008e10, %dec_label_pc_10008e70, %dec_label_pc_10008df4
  %v0_10008e24 = load i32, i32* @r11, align 4
  %v1_10008e24 = urem i32 %v0_10008e24, 8
  store i32 %v1_10008e24, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10008e24, 4
  br i1 %tmp, label %dec_label_pc_10008e3c, label %dec_label_pc_10008e30

dec_label_pc_10008e30:                            ; preds = %dec_label_pc_10008e24
  %v0_10008e30 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008e30 = add i32 %v0_10008e30, -4
  %v2_10008e30 = inttoptr i32 %v1_10008e30 to i32*
  %v3_10008e30 = load i32, i32* %v2_10008e30, align 4
  store i32 %v1_10008e30, i32* %r4.global-to-local, align 4
  %v1_10008e34 = add nsw i32 %v1_10008e24, -4
  store i32 %v1_10008e34, i32* %r5.global-to-local, align 4
  %v1_10008e38 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008e38 = add i32 %v1_10008e38, -4
  %v3_10008e38 = inttoptr i32 %v2_10008e38 to i32*
  store i32 %v3_10008e30, i32* %v3_10008e38, align 4
  store i32 %v2_10008e38, i32* %r10.global-to-local, align 4
  %v0_10008e3c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008e3c

dec_label_pc_10008e3c:                            ; preds = %dec_label_pc_10008e24, %dec_label_pc_10008e30
  %v0_10008e44 = phi i32 [ %v1_10008e24, %dec_label_pc_10008e24 ], [ %v0_10008e3c.pre, %dec_label_pc_10008e30 ]
  %v3_10008e3c = icmp eq i32 %v0_10008e44, 0
  br i1 %v3_10008e3c, label %dec_label_pc_10008e7c, label %dec_label_pc_10008e44

dec_label_pc_10008e44:                            ; preds = %dec_label_pc_10008e3c
  store i32 %v0_10008e44, i32* %ctr.global-to-local, align 4
  %v2_10008e4c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e48

dec_label_pc_10008e48:                            ; preds = %dec_label_pc_10008e48, %dec_label_pc_10008e44
  %v2_10008e4c = phi i32 [ %v3_10008e4c, %dec_label_pc_10008e48 ], [ %v2_10008e4c.pre, %dec_label_pc_10008e44 ]
  %v0_10008e48 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008e48 = add i32 %v0_10008e48, -1
  %v2_10008e48 = inttoptr i32 %v1_10008e48 to i8*
  %v3_10008e48 = load i8, i8* %v2_10008e48, align 1
  store i32 %v1_10008e48, i32* %r4.global-to-local, align 4
  %v3_10008e4c = add i32 %v2_10008e4c, -1
  %v4_10008e4c = inttoptr i32 %v3_10008e4c to i8*
  store i8 %v3_10008e48, i8* %v4_10008e4c, align 1
  store i32 %v3_10008e4c, i32* %r10.global-to-local, align 4
  %v0_10008e50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e50 = add i32 %v0_10008e50, -1
  store i32 %v1_10008e50, i32* %ctr.global-to-local, align 4
  %v2_10008e50 = icmp eq i32 %v1_10008e50, 0
  br i1 %v2_10008e50, label %dec_label_pc_10008e7c, label %dec_label_pc_10008e48

dec_label_pc_10008e58:                            ; preds = %dec_label_pc_10008e04
  %v1_10008e58 = sub nsw i32 4, %v1_10008e04
  store i32 %v1_10008e58, i32* %ctr.global-to-local, align 4
  %v2_10008e60 = sub i32 %arg3, %v1_10008e58
  store i32 %v2_10008e60, i32* @r11, align 4
  %v1_10008e648 = add i32 %v2_10008df8, -1
  %v2_10008e649 = inttoptr i32 %v1_10008e648 to i8*
  %v3_10008e6410 = load i8, i8* %v2_10008e649, align 1
  store i32 %v1_10008e648, i32* %r4.global-to-local, align 4
  %v3_10008e6812 = add i32 %v2_10008dfc, -1
  %v4_10008e6813 = inttoptr i32 %v3_10008e6812 to i8*
  store i8 %v3_10008e6410, i8* %v4_10008e6813, align 1
  store i32 %v3_10008e6812, i32* %r10.global-to-local, align 4
  %v0_10008e6c14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e6c15 = add i32 %v0_10008e6c14, -1
  store i32 %v1_10008e6c15, i32* %ctr.global-to-local, align 4
  %v2_10008e6c16 = icmp eq i32 %v1_10008e6c15, 0
  br i1 %v2_10008e6c16, label %dec_label_pc_10008e70, label %dec_label_pc_10008e64.dec_label_pc_10008e64_crit_edge

dec_label_pc_10008e64.dec_label_pc_10008e64_crit_edge: ; preds = %dec_label_pc_10008e58, %dec_label_pc_10008e64.dec_label_pc_10008e64_crit_edge
  %v3_10008e6817 = phi i32 [ %v3_10008e68, %dec_label_pc_10008e64.dec_label_pc_10008e64_crit_edge ], [ %v3_10008e6812, %dec_label_pc_10008e58 ]
  %v0_10008e64.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008e64 = add i32 %v0_10008e64.pre, -1
  %v2_10008e64 = inttoptr i32 %v1_10008e64 to i8*
  %v3_10008e64 = load i8, i8* %v2_10008e64, align 1
  store i32 %v1_10008e64, i32* %r4.global-to-local, align 4
  %v3_10008e68 = add i32 %v3_10008e6817, -1
  %v4_10008e68 = inttoptr i32 %v3_10008e68 to i8*
  store i8 %v3_10008e64, i8* %v4_10008e68, align 1
  store i32 %v3_10008e68, i32* %r10.global-to-local, align 4
  %v0_10008e6c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e6c = add i32 %v0_10008e6c, -1
  store i32 %v1_10008e6c, i32* %ctr.global-to-local, align 4
  %v2_10008e6c = icmp eq i32 %v1_10008e6c, 0
  br i1 %v2_10008e6c, label %dec_label_pc_10008e70, label %dec_label_pc_10008e64.dec_label_pc_10008e64_crit_edge

dec_label_pc_10008e70:                            ; preds = %dec_label_pc_10008e64.dec_label_pc_10008e64_crit_edge, %dec_label_pc_10008e58
  %v0_10008e70 = load i32, i32* @r11, align 4
  %v1_10008e70 = call i32 @__asm_rlwinm.(i32 %v0_10008e70, i32 29, i32 3, i32 31)
  store i32 %v1_10008e70, i32* %r9.global-to-local, align 4
  %v4_10008e70 = icmp eq i32 %v1_10008e70, 0
  br i1 %v4_10008e70, label %dec_label_pc_10008e24, label %dec_label_pc_10008e70.dec_label_pc_10008e0c_crit_edge

dec_label_pc_10008e70.dec_label_pc_10008e0c_crit_edge: ; preds = %dec_label_pc_10008e70
  %v1_10008e18.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e0c

dec_label_pc_10008e7c:                            ; preds = %dec_label_pc_10008e48, %dec_label_pc_10008e3c
  %v0_10008e7c = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10008e7c

; uselistorder directives
  uselistorder i32 %v1_10008e70, { 1, 2, 0 }
  uselistorder i32 %v1_10008e6c, { 1, 0 }
  uselistorder i32 %v3_10008e68, { 1, 2, 0 }
  uselistorder i32 %v1_10008e50, { 1, 0 }
  uselistorder i32 %v3_10008e4c, { 1, 2, 0 }
  uselistorder i32 %v1_10008e24, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10008e20, { 1, 0 }
  uselistorder i32 %v2_10008e1c, { 1, 2, 0 }
  uselistorder i32 %v1_10008e04, { 1, 0 }
  uselistorder i32 %v2_10008dfc, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 9, 1, 6, 2, 8, 3, 7, 4 }
  uselistorder i32* %r10.global-to-local, { 6, 0, 9, 1, 5, 2, 7, 3, 8, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 2, 0, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_10008e64.dec_label_pc_10008e64_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008e3c, { 1, 0 }
  uselistorder label %dec_label_pc_10008e24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008df4, { 1, 0 }
}

define i32 @function_10008e84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008e84:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10008e84 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008e84, i32* %r9.global-to-local, align 4
  %v4_10008e84 = icmp eq i32 %v1_10008e84, 0
  %v1_10008e8c = add i32 %arg1, -4
  store i32 %v1_10008e8c, i32* %r11.global-to-local, align 4
  %v1_10008e90 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10008e94 = call i32 @__asm_rlwimi(i32 %v1_10008e90, i32 16, i32 0, i32 15)
  %v2_10008e94 = trunc i32 %v1_10008e94 to i8
  br i1 %v4_10008e84, label %dec_label_pc_10008ebc, label %dec_label_pc_10008e9c

dec_label_pc_10008e9c:                            ; preds = %dec_label_pc_10008e84
  %v0_10008e9c = load i32, i32* %r11.global-to-local, align 4
  %v1_10008e9c = urem i32 %v0_10008e9c, 4
  %v3_10008e9c = icmp eq i32 %v1_10008e9c, 0
  br i1 %v3_10008e9c, label %dec_label_pc_10008e9c.dec_label_pc_10008ea4_crit_edge, label %dec_label_pc_10008eec

dec_label_pc_10008e9c.dec_label_pc_10008ea4_crit_edge: ; preds = %dec_label_pc_10008e9c
  %v0_10008ea4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008ea4

dec_label_pc_10008ea4:                            ; preds = %dec_label_pc_10008f04.dec_label_pc_10008ea4_crit_edge, %dec_label_pc_10008e9c.dec_label_pc_10008ea4_crit_edge
  %v0_10008ea8.pre = phi i32 [ %v0_10008e9c, %dec_label_pc_10008e9c.dec_label_pc_10008ea4_crit_edge ], [ %v0_10008ea8.pre.pre, %dec_label_pc_10008f04.dec_label_pc_10008ea4_crit_edge ]
  %v0_10008ea4 = phi i32 [ %v0_10008ea4.pre, %dec_label_pc_10008e9c.dec_label_pc_10008ea4_crit_edge ], [ %v1_10008f04, %dec_label_pc_10008f04.dec_label_pc_10008ea4_crit_edge ]
  store i32 %v0_10008ea4, i32* %ctr.global-to-local, align 4
  %v1_10008eac = sext i8 %v2_10008e94 to i32
  br label %dec_label_pc_10008ea8

dec_label_pc_10008ea8:                            ; preds = %dec_label_pc_10008ea8, %dec_label_pc_10008ea4
  %v0_10008ea8 = phi i32 [ %v1_10008eb4, %dec_label_pc_10008ea8 ], [ %v0_10008ea8.pre, %dec_label_pc_10008ea4 ]
  %v1_10008ea8 = add i32 %v0_10008ea8, 4
  store i32 %v1_10008ea8, i32* %r9.global-to-local, align 4
  %v4_10008eac = inttoptr i32 %v1_10008ea8 to i32*
  store i32 %v1_10008eac, i32* %v4_10008eac, align 4
  %v2_10008eb0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008eb0 = add i32 %v2_10008eb0, 4
  %v4_10008eb0 = inttoptr i32 %v3_10008eb0 to i32*
  store i32 %v1_10008eac, i32* %v4_10008eb0, align 4
  %v0_10008eb4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008eb4 = add i32 %v0_10008eb4, 4
  store i32 %v1_10008eb4, i32* %r11.global-to-local, align 4
  %v0_10008eb8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008eb8 = add i32 %v0_10008eb8, -1
  store i32 %v1_10008eb8, i32* %ctr.global-to-local, align 4
  %v2_10008eb8 = icmp eq i32 %v1_10008eb8, 0
  br i1 %v2_10008eb8, label %dec_label_pc_10008ebc, label %dec_label_pc_10008ea8

dec_label_pc_10008ebc:                            ; preds = %dec_label_pc_10008ea8, %dec_label_pc_10008f04, %dec_label_pc_10008e84
  %v0_10008ebc = load i32, i32* %r5.global-to-local, align 4
  %v1_10008ebc = urem i32 %v0_10008ebc, 8
  store i32 %v1_10008ebc, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10008ebc, 4
  br i1 %tmp, label %dec_label_pc_10008ed0, label %dec_label_pc_10008ec8

dec_label_pc_10008ec8:                            ; preds = %dec_label_pc_10008ebc
  %v1_10008ec8 = sext i8 %v2_10008e94 to i32
  %v2_10008ec8 = load i32, i32* %r11.global-to-local, align 4
  %v3_10008ec8 = add i32 %v2_10008ec8, 4
  %v4_10008ec8 = inttoptr i32 %v3_10008ec8 to i32*
  store i32 %v1_10008ec8, i32* %v4_10008ec8, align 4
  store i32 %v3_10008ec8, i32* %r11.global-to-local, align 4
  %v0_10008ecc = load i32, i32* @r5, align 4
  %v1_10008ecc = add i32 %v0_10008ecc, -4
  store i32 %v1_10008ecc, i32* @r5, align 4
  br label %dec_label_pc_10008ed0

dec_label_pc_10008ed0:                            ; preds = %dec_label_pc_10008ebc, %dec_label_pc_10008ec8
  %v0_10008ed0 = phi i32 [ %v1_10008ebc, %dec_label_pc_10008ebc ], [ %v1_10008ecc, %dec_label_pc_10008ec8 ]
  %v3_10008ed0 = icmp eq i32 %v0_10008ed0, 0
  %v0_10008ed4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008ed0, i32 %v0_10008ed4)
  %v0_10008ed8 = load i32, i32* @r5, align 4
  store i32 %v0_10008ed8, i32* %ctr.global-to-local, align 4
  %v0_10008edc = load i32, i32* %r11.global-to-local, align 4
  %v1_10008edc = add i32 %v0_10008edc, 3
  store i32 %v1_10008edc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008ee0

dec_label_pc_10008ee0:                            ; preds = %dec_label_pc_10008ee0, %dec_label_pc_10008ed0
  %v3_10008ee0 = phi i32 [ %v4_10008ee0, %dec_label_pc_10008ee0 ], [ %v1_10008edc, %dec_label_pc_10008ed0 ]
  %v4_10008ee0 = add i32 %v3_10008ee0, 1
  %v5_10008ee0 = inttoptr i32 %v4_10008ee0 to i8*
  store i8 %v2_10008e94, i8* %v5_10008ee0, align 1
  store i32 %v4_10008ee0, i32* %r9.global-to-local, align 4
  %v0_10008ee4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008ee4 = add i32 %v0_10008ee4, -1
  store i32 %v1_10008ee4, i32* %ctr.global-to-local, align 4
  %v2_10008ee4 = icmp eq i32 %v1_10008ee4, 0
  br i1 %v2_10008ee4, label %dec_label_pc_10008f10, label %dec_label_pc_10008ee0

dec_label_pc_10008eec:                            ; preds = %dec_label_pc_10008e9c
  %v1_10008eec = sub nsw i32 4, %v1_10008e9c
  store i32 %v1_10008eec, i32* %ctr.global-to-local, align 4
  %v1_10008ef4 = load i32, i32* %r5.global-to-local, align 4
  %v2_10008ef4 = sub i32 %v1_10008ef4, %v1_10008eec
  store i32 %v2_10008ef4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008ef8

dec_label_pc_10008ef8:                            ; preds = %dec_label_pc_10008ef8, %dec_label_pc_10008eec
  %v3_10008ef8 = phi i32 [ %v1_10008efc, %dec_label_pc_10008ef8 ], [ %v0_10008e9c, %dec_label_pc_10008eec ]
  %v4_10008ef8 = add i32 %v3_10008ef8, 4
  %v5_10008ef8 = inttoptr i32 %v4_10008ef8 to i8*
  store i8 %v2_10008e94, i8* %v5_10008ef8, align 1
  %v0_10008efc = load i32, i32* %r11.global-to-local, align 4
  %v1_10008efc = add i32 %v0_10008efc, 1
  store i32 %v1_10008efc, i32* %r11.global-to-local, align 4
  %v0_10008f00 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008f00 = add i32 %v0_10008f00, -1
  store i32 %v1_10008f00, i32* %ctr.global-to-local, align 4
  %v2_10008f00 = icmp eq i32 %v1_10008f00, 0
  br i1 %v2_10008f00, label %dec_label_pc_10008f04, label %dec_label_pc_10008ef8

dec_label_pc_10008f04:                            ; preds = %dec_label_pc_10008ef8
  %v0_10008f04 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008f04 = call i32 @__asm_rlwinm.(i32 %v0_10008f04, i32 29, i32 3, i32 31)
  store i32 %v1_10008f04, i32* %r9.global-to-local, align 4
  %v4_10008f04 = icmp eq i32 %v1_10008f04, 0
  br i1 %v4_10008f04, label %dec_label_pc_10008ebc, label %dec_label_pc_10008f04.dec_label_pc_10008ea4_crit_edge

dec_label_pc_10008f04.dec_label_pc_10008ea4_crit_edge: ; preds = %dec_label_pc_10008f04
  %v0_10008ea8.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008ea4

dec_label_pc_10008f10:                            ; preds = %dec_label_pc_10008ee0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10008f04, { 1, 2, 0 }
  uselistorder i32 %v1_10008f00, { 1, 0 }
  uselistorder i32 %v1_10008efc, { 1, 0 }
  uselistorder i32 %v1_10008ee4, { 1, 0 }
  uselistorder i32 %v4_10008ee0, { 1, 2, 0 }
  uselistorder i32 %v1_10008ebc, { 2, 1, 0 }
  uselistorder i32 %v1_10008eb8, { 1, 0 }
  uselistorder i32 %v1_10008eb4, { 1, 0 }
  uselistorder i32 %v1_10008e9c, { 1, 0 }
  uselistorder i32 %v0_10008e9c, { 2, 1, 0 }
  uselistorder i8 %v2_10008e94, { 0, 3, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_10008ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10008ebc, { 1, 0, 2 }
}

define i32 @function_10008f14(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10008f14:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10008f14 = add i32 %arg1, -1
  %v1_10008f18 = sub i32 %v2_10008f14, %tmp
  store i32 %v1_10008f18, i32* %r9.global-to-local, align 4
  %v2_10008f1c4 = load i8, i8* %arg2, align 1
  %v1_10008f206 = add i32 %tmp, 1
  store i32 %v1_10008f206, i32* %r4.global-to-local, align 4
  %v3_10008f247 = icmp eq i8 %v2_10008f1c4, 0
  store i1 %v3_10008f247, i1* %cr7_eq.global-to-local, align 1
  %v5_10008f288 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10008f1c4, i8* %v5_10008f288, align 1
  %v0_10008f2c9 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008f2c9, label %dec_label_pc_10008f30, label %dec_label_pc_10008f1c.dec_label_pc_10008f1c_crit_edge

dec_label_pc_10008f1c.dec_label_pc_10008f1c_crit_edge: ; preds = %dec_label_pc_10008f14, %dec_label_pc_10008f1c.dec_label_pc_10008f1c_crit_edge
  %v0_10008f1c.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10008f28.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008f1c = inttoptr i32 %v0_10008f1c.pre to i8*
  %v2_10008f1c = load i8, i8* %v1_10008f1c, align 1
  %v1_10008f20 = add i32 %v0_10008f1c.pre, 1
  store i32 %v1_10008f20, i32* %r4.global-to-local, align 4
  %v3_10008f24 = icmp eq i8 %v2_10008f1c, 0
  store i1 %v3_10008f24, i1* %cr7_eq.global-to-local, align 1
  %v4_10008f28 = add i32 %v1_10008f20, %v2_10008f28.pre
  %v5_10008f28 = inttoptr i32 %v4_10008f28 to i8*
  store i8 %v2_10008f1c, i8* %v5_10008f28, align 1
  %v0_10008f2c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008f2c, label %dec_label_pc_10008f30, label %dec_label_pc_10008f1c.dec_label_pc_10008f1c_crit_edge

dec_label_pc_10008f30:                            ; preds = %dec_label_pc_10008f1c.dec_label_pc_10008f1c_crit_edge, %dec_label_pc_10008f14
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008f1c.dec_label_pc_10008f1c_crit_edge, { 1, 0 }
}

define i32 @function_10008f34(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008f34:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008f38 = load i32, i32* @lr, align 4
  store i32 %v0_10008f38, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008f48 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268472156, i32* @lr, align 4
  %v3_10008f58 = call i32 @function_100084b0(i32 1076655123, i32 %v2_10008f48, i32 %v2_10008f48)
  %v2_10008f5c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008f5c, i32* @r4, align 4
  store i32 %v3_10008f58, i32* @r30, align 4
  %v3_10008f60 = icmp eq i32 %v3_10008f58, 0
  %v0_10008f68 = load i32, i32* @r31, align 4
  br i1 %v3_10008f60, label %dec_label_pc_10008f70, label %dec_label_pc_10008fb8

dec_label_pc_10008f70:                            ; preds = %dec_label_pc_10008f34
  %v1_10008f68 = add i32 %v0_10008f68, 17
  %v3_10008f88 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10008f88, i32* %r0.global-to-local, align 4
  %v2_10008f8c = add i32 %v0_10008f68, 4
  %v3_10008f8c = inttoptr i32 %v2_10008f8c to i32*
  store i32 %tmp7, i32* %v3_10008f8c, align 4
  %v0_10008f90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008f90 = load i32, i32* @r31, align 4
  %v2_10008f90 = inttoptr i32 %v1_10008f90 to i32*
  store i32 %v0_10008f90, i32* %v2_10008f90, align 4
  %v0_10008f94 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008f94 = load i32, i32* @r31, align 4
  %v2_10008f94 = add i32 %v1_10008f94, 8
  %v3_10008f94 = inttoptr i32 %v2_10008f94 to i32*
  store i32 %v0_10008f94, i32* %v3_10008f94, align 4
  %v0_10008f98 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008f98 = load i32, i32* @r31, align 4
  %v2_10008f98 = add i32 %v1_10008f98, 12
  %v3_10008f98 = inttoptr i32 %v2_10008f98 to i32*
  store i32 %v0_10008f98, i32* %v3_10008f98, align 4
  %v3_10008f9c = load i32, i32* @r31, align 4
  %v4_10008f9c = add i32 %v3_10008f9c, 16
  %v5_10008f9c = inttoptr i32 %v4_10008f9c to i8*
  store i8 %tmp4, i8* %v5_10008f9c, align 1
  %v1_10008fa0 = load i32, i32* @r31, align 4
  %v2_10008fa0 = add i32 %v1_10008fa0, 52
  %v3_10008fa0 = inttoptr i32 %v2_10008fa0 to i32*
  store i32 %tmp3, i32* %v3_10008fa0, align 4
  %v1_10008fa4 = load i32, i32* @r31, align 4
  %v2_10008fa4 = add i32 %v1_10008fa4, 56
  %v3_10008fa4 = inttoptr i32 %v2_10008fa4 to i32*
  store i32 %tmp2, i32* %v3_10008fa4, align 4
  store i32 268472236, i32* @lr, align 4
  %v6_10008fa8 = sext i8 %tmp4 to i32
  %v8_10008fa8 = call i32 @function_1000abec(i32 %v1_10008f68, i32 %v2_10008f5c, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10008fa8, i32 %tmp7)
  store i32 268472248, i32* @lr, align 4
  %v3_10008fb4 = call i32 @function_10008e84(i32 %v8_10008fa8, i32 0, i32 13)
  %v0_10008fbc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008fb8

dec_label_pc_10008fb8:                            ; preds = %dec_label_pc_10008f34, %dec_label_pc_10008f70
  %v0_10008fbc = phi i32 [ %v3_10008f58, %dec_label_pc_10008f34 ], [ %v0_10008fbc.pre, %dec_label_pc_10008f70 ]
  store i32 %v0_10008f38, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008fbc

; uselistorder directives
  uselistorder i32 %v2_10008f48, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 6, 23, 24, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 21, 22, 25, 26, 2, 27, 28, 3, 29, 30, 4, 31, 32, 5 }
  uselistorder label %dec_label_pc_10008fb8, { 1, 0 }
}

define i32 @function_10008fd0() local_unnamed_addr {
dec_label_pc_10008fd0:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008fd0 = load i32, i32* @r4, align 4
  %v3_10008fd0 = icmp eq i32 %v0_10008fd0, 1
  %v0_10008fe0 = load i32, i32* @r3, align 4
  store i32 %v0_10008fe0, i32* %r27.global-to-local, align 4
  %v0_10008fe8 = load i32, i32* @r5, align 4
  store i32 %v0_10008fe8, i32* @r31, align 4
  br i1 %v3_10008fd0, label %dec_label_pc_1000900c, label %dec_label_pc_10008ff0

dec_label_pc_10008ff0:                            ; preds = %dec_label_pc_10008fd0
  %v3_10008ff0 = icmp eq i32 %v0_10008fd0, 2
  br i1 %v3_10008ff0, label %dec_label_pc_1000902c, label %dec_label_pc_10008ff8

dec_label_pc_10008ff8:                            ; preds = %dec_label_pc_10008ff0
  %v3_10008ff8 = icmp eq i32 %v0_10008fd0, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10008ff8, label %dec_label_pc_10009034, label %dec_label_pc_10009018

dec_label_pc_1000900c:                            ; preds = %dec_label_pc_10008fd0
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10009034

dec_label_pc_10009018:                            ; preds = %dec_label_pc_10008ff8
  %v0_10009018 = call i32 @function_10008d9c()
  store i32 -1, i32* @r28, align 4
  %v2_10009024 = inttoptr i32 %v0_10009018 to i32*
  store i32 22, i32* %v2_10009024, align 4
  br label %dec_label_pc_1000911c

dec_label_pc_1000902c:                            ; preds = %dec_label_pc_10008ff0
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10009034

dec_label_pc_10009034:                            ; preds = %dec_label_pc_10008ff8, %dec_label_pc_1000900c, %dec_label_pc_1000902c
  %v1_10009034 = inttoptr i32 %v0_10008fe8 to i32*
  %v2_10009034 = load i32, i32* %v1_10009034, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000903c = add i32 %v0_10008fe8, 4
  %v2_1000903c = inttoptr i32 %v1_1000903c to i32*
  %v3_1000903c = load i32, i32* %v2_1000903c, align 4
  store i32 %v3_1000903c, i32* %r9.global-to-local, align 4
  %v1_10009040 = add i32 %v0_10008fe8, 17
  store i32 %v1_10009040, i32* @r4, align 4
  %v1_10009044 = add i32 %v0_10008fe8, 8
  %v2_10009044 = inttoptr i32 %v1_10009044 to i32*
  %v3_10009044 = load i32, i32* %v2_10009044, align 4
  %v2_10009048 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009048, i32* @r3, align 4
  %v2_10009050 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10009034, i32* %stack_var_-72, align 4
  store i32 268472448, i32* @lr, align 4
  %v0_1000907c = call i32 @function_1000ab50()
  %v0_10009080 = load i32, i32* %r27.global-to-local, align 4
  %v0_10009084 = load i32, i32* @r30, align 4
  store i32 268472468, i32* @lr, align 4
  %v3_10009090 = call i32 @function_100084b0(i32 %v0_10009080, i32 %v0_10009084, i32 %v2_10009050)
  store i32 %v3_10009090, i32* @r28, align 4
  %v3_10009094 = icmp eq i32 %v3_10009090, 0
  br i1 %v3_10009094, label %dec_label_pc_1000909c, label %dec_label_pc_1000911c

dec_label_pc_1000909c:                            ; preds = %dec_label_pc_10009034
  %v0_1000909c = load i32, i32* @r30, align 4
  %v3_100090a0 = icmp eq i32 %v0_1000909c, -2144570348
  br i1 %v3_100090a0, label %dec_label_pc_100090a8, label %dec_label_pc_10009118

dec_label_pc_100090a8:                            ; preds = %dec_label_pc_1000909c
  %v0_100090a8 = call i32 @function_10008d9c()
  store i32 %v0_100090a8, i32* @r29, align 4
  %v0_100090b8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100090c0 = inttoptr i32 %v0_100090a8 to i32*
  %v2_100090c0 = load i32, i32* %v1_100090c0, align 4
  store i32 %v2_100090c0, i32* @r30, align 4
  store i32 268472524, i32* @lr, align 4
  %v3_100090c8 = call i32 @function_100084b0(i32 %v0_100090b8, i32 1076655123, i32 %v2_10009050)
  %v3_100090cc = icmp eq i32 %v3_100090c8, 0
  br i1 %v3_100090cc, label %dec_label_pc_100090dc, label %dec_label_pc_100090d4

dec_label_pc_100090d4:                            ; preds = %dec_label_pc_100090a8
  %v0_100090d4 = load i32, i32* @r30, align 4
  %v1_100090d4 = load i32, i32* @r29, align 4
  %v2_100090d4 = inttoptr i32 %v1_100090d4 to i32*
  store i32 %v0_100090d4, i32* %v2_100090d4, align 4
  br label %dec_label_pc_1000911c

dec_label_pc_100090dc:                            ; preds = %dec_label_pc_100090a8
  %v0_100090dc = load i32, i32* @r31, align 4
  %v1_100090dc = add i32 %v0_100090dc, 8
  %v2_100090dc = inttoptr i32 %v1_100090dc to i32*
  %v3_100090dc = load i32, i32* %v2_100090dc, align 4
  %v1_100090e4 = call i32 @__asm_rlwinm(i32 %v3_100090dc, i32 0, i32 19, i32 20)
  %v1_100090e8 = call i32 @__asm_rlwinm(i32 %v3_10009044, i32 0, i32 19, i32 20)
  store i32 %v1_100090e8, i32* %r9.global-to-local, align 4
  %v4_100090ec = icmp eq i32 %v1_100090e4, %v1_100090e8
  br i1 %v4_100090ec, label %dec_label_pc_100090f4, label %dec_label_pc_10009108

dec_label_pc_100090f4:                            ; preds = %dec_label_pc_100090dc
  %v1_100090f4 = and i32 %v3_100090dc, 768
  store i32 %v1_100090f4, i32* %r9.global-to-local, align 4
  %v3_100090f4 = icmp eq i32 %v1_100090f4, 0
  br i1 %v3_100090f4, label %dec_label_pc_10009118, label %dec_label_pc_100090fc

dec_label_pc_100090fc:                            ; preds = %dec_label_pc_100090f4
  %v1_100090fc = call i32 @__asm_rlwinm(i32 %v3_10009044, i32 0, i32 22, i32 23)
  %v0_10009100 = load i32, i32* %r9.global-to-local, align 4
  %v4_10009100 = icmp eq i32 %v0_10009100, %v1_100090fc
  br i1 %v4_10009100, label %dec_label_pc_10009118, label %dec_label_pc_10009108

dec_label_pc_10009108:                            ; preds = %dec_label_pc_100090dc, %dec_label_pc_100090fc
  store i32 -1, i32* @r28, align 4
  %v1_10009110 = load i32, i32* @r29, align 4
  %v2_10009110 = inttoptr i32 %v1_10009110 to i32*
  store i32 22, i32* %v2_10009110, align 4
  br label %dec_label_pc_1000911c

dec_label_pc_10009118:                            ; preds = %dec_label_pc_1000909c, %dec_label_pc_100090fc, %dec_label_pc_100090f4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000911c

dec_label_pc_1000911c:                            ; preds = %dec_label_pc_10009034, %dec_label_pc_10009108, %dec_label_pc_100090d4, %dec_label_pc_10009018, %dec_label_pc_10009118
  %v0_10009120 = load i32, i32* @r28, align 4
  ret i32 %v0_10009120

; uselistorder directives
  uselistorder i32 %v0_10008fe8, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_100084b0, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000911c, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10009118, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009108, { 1, 0 }
  uselistorder label %dec_label_pc_10009034, { 2, 1, 0 }
}

define i32 @function_10009134(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009134:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000913c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000913c, i32* @r4, align 4
  store i32 268472648, i32* @lr, align 4
  %v1_10009144 = bitcast i32* %stack_var_-24 to i8*
  %v2_10009144 = call i32 @function_1000ac20(i8* %v1_10009144)
  %v3_10009148 = icmp eq i32 %v2_10009144, 0
  br i1 %v3_10009148, label %dec_label_pc_10009158, label %dec_label_pc_10009154

dec_label_pc_10009154:                            ; preds = %dec_label_pc_10009134
  %v3_10009154 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10009158

dec_label_pc_10009158:                            ; preds = %dec_label_pc_10009134, %dec_label_pc_10009154
  %v0_10009164 = phi i32 [ -1, %dec_label_pc_10009134 ], [ %v3_10009154, %dec_label_pc_10009154 ]
  ret i32 %v0_10009164

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009158, { 1, 0 }
}

define i32 @function_10009168(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009168:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000917c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472716, i32* @lr, align 4
  %v2_10009188 = call i32 @function_1000a454(i32 2, i32 %v2_1000917c)
  ret i32 %v2_10009188

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000919c() local_unnamed_addr {
dec_label_pc_1000919c:
  %stack_var_-24 = alloca i32, align 4
  %v0_100091a4 = load i32, i32* @r3, align 4
  store i32 %v0_100091a4, i32* %stack_var_-24, align 4
  %v2_100091b0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472768, i32* @lr, align 4
  %v2_100091bc = call i32 @function_1000a454(i32 3, i32 %v2_100091b0)
  ret i32 %v2_100091bc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100091d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100091d0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100091e4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472820, i32* @lr, align 4
  %v2_100091f0 = call i32 @function_1000a454(i32 6, i32 %v2_100091e4)
  ret i32 %v2_100091f0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009204(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009204:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009218 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268472880, i32* @lr, align 4
  %v2_1000922c = call i32 @function_1000a454(i32 15, i32 %v2_10009218)
  ret i32 %v2_1000922c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 26, 13, 14, 5, 15, 6, 16, 7, 8, 9, 10, 11, 17, 12, 18, 19, 1, 20, 21, 2, 22, 23, 3, 24, 25, 4 }
}

define i32 @function_10009240(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009240:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009254 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472928, i32* @lr, align 4
  %v2_1000925c = call i32 @function_1000a454(i32 4, i32 %v2_10009254)
  ret i32 %v2_1000925c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009270(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009270:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009284 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268472984, i32* @lr, align 4
  %v2_10009294 = call i32 @function_1000a454(i32 10, i32 %v2_10009284)
  ret i32 %v2_10009294

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100092a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100092a8:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100092bc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268473048, i32* @lr, align 4
  %v2_100092d4 = call i32 @function_1000a454(i32 12, i32 %v2_100092bc)
  ret i32 %v2_100092d4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_100092e8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100092e8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100092fc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473104, i32* @lr, align 4
  %v2_1000930c = call i32 @function_1000a454(i32 9, i32 %v2_100092fc)
  ret i32 %v2_1000930c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 5, 11, 12, 1, 13, 2, 14, 3, 15, 6, 7, 8, 16, 9, 17, 30, 18, 19, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 31, 32, 33, 10 }
}

define i32 @function_10009320(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009320:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009334 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268473168, i32* @lr, align 4
  %v2_1000934c = call i32 @function_1000a454(i32 11, i32 %v2_10009334)
  ret i32 %v2_1000934c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009360(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009360:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009374 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268473228, i32* @lr, align 4
  %v2_10009388 = call i32 @function_1000a454(i32 14, i32 %v2_10009374)
  ret i32 %v2_10009388

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000939c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000939c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100093b0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473280, i32* @lr, align 4
  %v2_100093bc = call i32 @function_1000a454(i32 1, i32 %v2_100093b0)
  ret i32 %v2_100093bc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a454, { 5, 1, 0, 4, 6, 10, 7, 9, 8, 3, 2 }
}

define i32 @function_100093d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100093d0:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10009400, label %dec_label_pc_100093ec

dec_label_pc_100093ec:                            ; preds = %dec_label_pc_100093d0
  %v0_100093ec = call i32 @function_10008d9c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100093f8 = inttoptr i32 %v0_100093ec to i32*
  store i32 22, i32* %v2_100093f8, align 4
  %v0_1000940c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009408

dec_label_pc_10009400:                            ; preds = %dec_label_pc_100093d0
  %v0_10009400 = call i32 @function_10009550()
  store i32 %v0_10009400, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009408

dec_label_pc_10009408:                            ; preds = %dec_label_pc_100093ec, %dec_label_pc_10009400
  %v0_1000940c = phi i32 [ %v0_1000940c.pre, %dec_label_pc_100093ec ], [ %v0_10009400, %dec_label_pc_10009400 ]
  ret i32 %v0_1000940c

; uselistorder directives
  uselistorder label %dec_label_pc_10009408, { 1, 0 }
}

define i32 @function_1000941c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000941c:
  store i32 268473396, i32* @lr, align 4
  %v3_10009430 = call i32 @function_10008e84(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10009448(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009448:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10009448 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10009448, label %dec_label_pc_10009474, label %dec_label_pc_10009464

dec_label_pc_10009464:                            ; preds = %dec_label_pc_10009448
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10009474, label %dec_label_pc_1000946c

dec_label_pc_1000946c:                            ; preds = %dec_label_pc_10009464
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_100094a4.lr.ph, label %dec_label_pc_10009474

dec_label_pc_10009474:                            ; preds = %dec_label_pc_1000946c, %dec_label_pc_10009464, %dec_label_pc_10009448
  %v0_10009474 = call i32 @function_10008d9c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009480 = inttoptr i32 %v0_10009474 to i32*
  store i32 22, i32* %v2_10009480, align 4
  %v0_10009514.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009510

dec_label_pc_100094a4.lr.ph:                      ; preds = %dec_label_pc_1000946c
  %v2_10009494 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10009494, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_100094a422 = add i32 %v2_10009494, 128
  %v3_100094a423 = inttoptr i32 %v2_100094a422 to i32*
  store i32 0, i32* %v3_100094a423, align 4
  %v0_100094a824 = load i32, i32* %r11.global-to-local, align 4
  %v1_100094a825 = add i32 %v0_100094a824, -1
  store i32 %v1_100094a825, i32* %r11.global-to-local, align 4
  %v1_100094ac26 = mul i32 %v1_100094a825, 4
  %v1_100094b027 = load i32, i32* %r8.global-to-local, align 4
  %v2_100094b028 = add i32 %v1_100094b027, %v1_100094ac26
  store i32 %v2_100094b028, i32* %r9.global-to-local, align 4
  %v0_100094b429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100094b430 = add i32 %v0_100094b429, -1
  store i32 %v1_100094b430, i32* %ctr.global-to-local, align 4
  %v2_100094b431 = icmp eq i32 %v1_100094b430, 0
  br i1 %v2_100094b431, label %dec_label_pc_100094b8, label %dec_label_pc_100094a4.dec_label_pc_100094a4_crit_edge

dec_label_pc_100094a4.dec_label_pc_100094a4_crit_edge: ; preds = %dec_label_pc_100094a4.lr.ph, %dec_label_pc_100094a4.dec_label_pc_100094a4_crit_edge
  %v2_100094b032 = phi i32 [ %v2_100094b0, %dec_label_pc_100094a4.dec_label_pc_100094a4_crit_edge ], [ %v2_100094b028, %dec_label_pc_100094a4.lr.ph ]
  %v0_100094a4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_100094a4 = add i32 %v2_100094b032, 4
  %v3_100094a4 = inttoptr i32 %v2_100094a4 to i32*
  store i32 %v0_100094a4.pre, i32* %v3_100094a4, align 4
  %v0_100094a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100094a8 = add i32 %v0_100094a8, -1
  store i32 %v1_100094a8, i32* %r11.global-to-local, align 4
  %v1_100094ac = mul i32 %v1_100094a8, 4
  %v1_100094b0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100094b0 = add i32 %v1_100094b0, %v1_100094ac
  store i32 %v2_100094b0, i32* %r9.global-to-local, align 4
  %v0_100094b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100094b4 = add i32 %v0_100094b4, -1
  store i32 %v1_100094b4, i32* %ctr.global-to-local, align 4
  %v2_100094b4 = icmp eq i32 %v1_100094b4, 0
  br i1 %v2_100094b4, label %dec_label_pc_100094b8, label %dec_label_pc_100094a4.dec_label_pc_100094a4_crit_edge

dec_label_pc_100094b8:                            ; preds = %dec_label_pc_100094a4.dec_label_pc_100094a4_crit_edge, %dec_label_pc_100094a4.lr.ph
  %v0_100094bc.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_100094b8 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_100094b8, i32* @r3, align 4
  store i32 %v0_100094bc.pre, i32* @r4, align 4
  %v0_100094c0 = call i32 @function_10009550()
  %v1_100094c4 = icmp slt i32 %v0_100094c0, 0
  br i1 %v1_100094c4, label %dec_label_pc_1000950c, label %dec_label_pc_100094cc

dec_label_pc_100094cc:                            ; preds = %dec_label_pc_100094b8
  %v0_100094d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100094d8 = call i32 @function_10009528(i32 ptrtoint (i32* @global_var_1001b8f8.260 to i32), i32 %v0_100094d0)
  %v2_100094e4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268473596, i32* @lr, align 4
  %v4_100094f8 = call i32 @function_1000ace0(i32 %v0_100094d0, i32* nonnull %stack_var_-296, i32 %v2_100094e4)
  %v1_100094fc = icmp slt i32 %v4_100094f8, 0
  br i1 %v1_100094fc, label %dec_label_pc_1000950c, label %dec_label_pc_10009504

dec_label_pc_10009504:                            ; preds = %dec_label_pc_100094cc
  %v3_10009504 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10009504, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009510

dec_label_pc_1000950c:                            ; preds = %dec_label_pc_100094cc, %dec_label_pc_100094b8
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009510

dec_label_pc_10009510:                            ; preds = %dec_label_pc_10009504, %dec_label_pc_10009474, %dec_label_pc_1000950c
  %v0_10009514 = phi i32 [ %v3_10009504, %dec_label_pc_10009504 ], [ %v0_10009514.pre, %dec_label_pc_10009474 ], [ -1, %dec_label_pc_1000950c ]
  ret i32 %v0_10009514

; uselistorder directives
  uselistorder i32 %v1_100094b4, { 1, 0 }
  uselistorder i32 %v2_100094b0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10009510, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100094a4.dec_label_pc_100094a4_crit_edge, { 1, 0 }
}

define i32 @function_10009528(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009528:
  %v1_10009528 = add i32 %arg2, -1
  %v1_1000952c = call i32 @__asm_rlwinm(i32 %v1_10009528, i32 29, i32 3, i32 29)
  %v1_10009530 = urem i32 %v1_10009528, 32
  %v2_10009534 = add i32 %v1_1000952c, %arg1
  %v3_10009534 = inttoptr i32 %v2_10009534 to i32*
  %v4_10009534 = load i32, i32* %v3_10009534, align 4
  %v3_1000953c = shl i32 1, %v1_10009530
  %v2_10009540 = and i32 %v4_10009534, %v3_1000953c
  %v2_10009544 = icmp ne i32 %v2_10009540, 0
  %v5_10009548 = zext i1 %v2_10009544 to i32
  ret i32 %v5_10009548
}

define i32 @function_10009550() local_unnamed_addr {
dec_label_pc_10009550:
  %r0.global-to-local = alloca i32, align 4
  %v0_10009550 = load i32, i32* @r4, align 4
  %v1_10009550 = add i32 %v0_10009550, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10009558 = call i32 @__asm_rlwinm(i32 %v1_10009550, i32 29, i32 3, i32 29)
  %v1_1000955c = urem i32 %v1_10009550, 32
  %v1_10009560 = load i32, i32* @r3, align 4
  %v2_10009560 = add i32 %v1_10009560, %v1_10009558
  %v3_10009560 = inttoptr i32 %v2_10009560 to i32*
  %v4_10009560 = load i32, i32* %v3_10009560, align 4
  %v0_10009564 = load i32, i32* %r0.global-to-local, align 4
  %v3_10009564 = shl i32 %v0_10009564, %v1_1000955c
  store i32 %v3_10009564, i32* %r0.global-to-local, align 4
  %v2_10009568 = or i32 %v3_10009564, %v4_10009560
  store i32 %v2_10009568, i32* %v3_10009560, align 4
  ret i32 0
}

define i32 @function_10009578(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009578:
  %v1_10009578 = add i32 %arg2, -1
  %v1_10009580 = call i32 @__asm_rlwinm(i32 %v1_10009578, i32 29, i32 3, i32 29)
  %v1_10009584 = urem i32 %v1_10009578, 32
  %v2_10009588 = add i32 %v1_10009580, %arg1
  %v3_10009588 = inttoptr i32 %v2_10009588 to i32*
  %v4_10009588 = load i32, i32* %v3_10009588, align 4
  %v3_1000958c = shl i32 -2, %v1_10009584
  %v4_1000958c = sub nsw i32 32, %v1_10009584
  %v5_1000958c = lshr i32 -2, %v4_1000958c
  %v6_1000958c = or i32 %v5_1000958c, %v3_1000958c
  %v2_10009590 = and i32 %v6_1000958c, %v4_10009588
  store i32 %v2_10009590, i32* %v3_10009588, align 4
  ret i32 0
}

define i32 @function_100095a0() local_unnamed_addr {
dec_label_pc_100095a0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100095a0 = load i32, i32* @r3, align 4
  %v3_100095a0 = icmp eq i32 %v0_100095a0, 0
  br i1 %v3_100095a0, label %dec_label_pc_100095bc.thread, label %dec_label_pc_100095bc

dec_label_pc_100095bc.thread:                     ; preds = %dec_label_pc_100095a0
  br label %dec_label_pc_100095c8

dec_label_pc_100095bc:                            ; preds = %dec_label_pc_100095a0
  %v3_100095c0 = icmp ugt i32 %v0_100095a0, -8
  br i1 %v3_100095c0, label %dec_label_pc_100096d0, label %dec_label_pc_100095c8

dec_label_pc_100095c8:                            ; preds = %dec_label_pc_100095bc.thread, %dec_label_pc_100095bc
  %v0_100095cc16 = phi i32 [ 1, %dec_label_pc_100095bc.thread ], [ %v0_100095a0, %dec_label_pc_100095bc ]
  %v1_100095cc = add i32 %v0_100095cc16, 4
  store i32 ptrtoint (i32* @global_var_1001b7d8.261 to i32), i32* @r29, align 4
  store i32 %v1_100095cc, i32* %stack_var_-40, align 4
  %v0_100095dc = call i32 @function_1000a0fc()
  %v2_100095e4 = ptrtoint i32* %stack_var_-40 to i32
  %v3_100095ec = call i32 @function_10009998(i32* inttoptr (i32 268547840 to i32*), i32 %v2_100095e4)
  store i32 %v3_100095ec, i32* %r31.global-to-local, align 4
  %v0_100095f8 = call i32 @function_1000a0fc()
  %v3_100095fc = icmp eq i32 %v3_100095ec, 0
  br i1 %v3_100095fc, label %dec_label_pc_10009604, label %dec_label_pc_100096b4.thread

dec_label_pc_100096b4.thread:                     ; preds = %dec_label_pc_100095c8
  br label %dec_label_pc_100096c8

dec_label_pc_10009604:                            ; preds = %dec_label_pc_100095c8
  %v3_10009608 = load i32, i32* @global_var_1001b75c.264, align 4
  store i32 %v3_10009608, i32* %r31.global-to-local, align 4
  %v3_1000960c = load i32, i32* %stack_var_-40, align 4
  %v2_10009610 = icmp ult i32 %v3_1000960c, %v3_10009608
  br i1 %v2_10009610, label %dec_label_pc_10009628, label %dec_label_pc_10009618

dec_label_pc_10009618:                            ; preds = %dec_label_pc_10009604
  %v1_1000961c = sub i32 0, %v3_10009608
  %v2_10009618 = add i32 %v3_10009608, -1
  %v1_10009620 = add i32 %v2_10009618, %v3_1000960c
  %v2_10009624 = and i32 %v1_10009620, %v1_1000961c
  store i32 %v2_10009624, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009628

dec_label_pc_10009628:                            ; preds = %dec_label_pc_10009604, %dec_label_pc_10009618
  %v0_10009634 = call i32 @function_1000a0fc()
  %v0_10009638 = load i32, i32* %r31.global-to-local, align 4
  store i32 268473920, i32* @lr, align 4
  %v1_1000963c = call i32 @function_1000a91c(i32 %v0_10009638)
  %v3_10009640 = icmp eq i32 %v1_1000963c, -1
  br i1 %v3_10009640, label %dec_label_pc_10009660, label %dec_label_pc_10009648

dec_label_pc_10009648:                            ; preds = %dec_label_pc_10009628
  %v1_10009648 = add i32 %v1_1000963c, 3
  %v1_1000964c = call i32 @__asm_rlwinm(i32 %v1_10009648, i32 0, i32 0, i32 29)
  store i32 %v1_1000964c, i32* @r30, align 4
  %v4_10009650 = icmp eq i32 %v1_1000964c, %v1_1000963c
  br i1 %v4_10009650, label %dec_label_pc_10009660, label %dec_label_pc_10009658

dec_label_pc_10009658:                            ; preds = %dec_label_pc_10009648
  %v2_10009658 = sub i32 %v1_1000964c, %v1_1000963c
  store i32 268473952, i32* @lr, align 4
  %v1_1000965c = call i32 @function_1000a91c(i32 %v2_10009658)
  br label %dec_label_pc_10009660

dec_label_pc_10009660:                            ; preds = %dec_label_pc_10009648, %dec_label_pc_10009628, %dec_label_pc_10009658
  %v0_10009668 = call i32 @function_1000a0fc()
  %v0_1000966c = load i32, i32* @r30, align 4
  %v3_1000966c = icmp eq i32 %v0_1000966c, -1
  br i1 %v3_1000966c, label %dec_label_pc_100096d0, label %dec_label_pc_100096b4

dec_label_pc_100096b4:                            ; preds = %dec_label_pc_10009660
  store i32 ptrtoint (i32* @global_var_1001b7d8.261 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001b700 to i32), i32* @r29, align 4
  %v0_10009688 = call i32 @function_1000a0fc()
  %v0_1000968c = load i32, i32* @r31, align 4
  %v0_10009690 = load i32, i32* @r30, align 4
  %v0_10009694 = load i32, i32* @r29, align 4
  store i32 268474012, i32* @lr, align 4
  %v3_10009698 = inttoptr i32 %v0_10009694 to i32*
  %v4_10009698 = call i32 @function_10009b1c(i32* %v3_10009698, i32 %v0_10009690, i32 %v0_1000968c)
  %v0_1000969c = load i32, i32* @r29, align 4
  %v2_100096a4 = inttoptr i32 %v0_1000969c to i32*
  %v3_100096a4 = call i32 @function_10009998(i32* %v2_100096a4, i32 %v2_100095e4)
  store i32 %v3_100096a4, i32* %r31.global-to-local, align 4
  %v0_100096b0 = call i32 @function_1000a0fc()
  %v3_100096b4 = icmp eq i32 %v3_100096a4, 0
  br i1 %v3_100096b4, label %dec_label_pc_100096c8.thread, label %dec_label_pc_100096c8

dec_label_pc_100096c8.thread:                     ; preds = %dec_label_pc_100096b4
  br label %dec_label_pc_100096d0

dec_label_pc_100096c8:                            ; preds = %dec_label_pc_100096b4, %dec_label_pc_100096b4.thread
  %v0_100096c8.pr6 = phi i32 [ %v3_100095ec, %dec_label_pc_100096b4.thread ], [ %v3_100096a4, %dec_label_pc_100096b4 ]
  %v3_100096bc = load i32, i32* %stack_var_-40, align 4
  %v2_100096c0 = inttoptr i32 %v0_100096c8.pr6 to i32*
  store i32 %v3_100096bc, i32* %v2_100096c0, align 4
  %v0_100096c4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100096c4 = add i32 %v0_100096c4, 4
  store i32 %v1_100096c4, i32* @r31, align 4
  %v3_100096c8 = icmp eq i32 %v1_100096c4, 0
  br i1 %v3_100096c8, label %dec_label_pc_100096d0, label %dec_label_pc_100096e0

dec_label_pc_100096d0:                            ; preds = %dec_label_pc_100096c8.thread, %dec_label_pc_100096c8, %dec_label_pc_10009660, %dec_label_pc_100095bc
  %v0_100096d0 = call i32 @function_10008d9c()
  %v2_100096d8 = inttoptr i32 %v0_100096d0 to i32*
  store i32 12, i32* %v2_100096d8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100096e0

dec_label_pc_100096e0:                            ; preds = %dec_label_pc_100096c8, %dec_label_pc_100096d0
  %v0_100096e4 = phi i32 [ %v1_100096c4, %dec_label_pc_100096c8 ], [ 0, %dec_label_pc_100096d0 ]
  ret i32 %v0_100096e4

; uselistorder directives
  uselistorder i32 %v1_100096c4, { 1, 0, 2 }
  uselistorder i32 %v1_1000964c, { 1, 0, 2 }
  uselistorder i32 %v1_1000963c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009608, { 1, 0, 2, 3 }
  uselistorder i32 %v3_100095ec, { 1, 0, 2 }
  uselistorder i32 %v0_100095a0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_100096e0, { 1, 0 }
  uselistorder label %dec_label_pc_100096d0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10009660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009628, { 1, 0 }
  uselistorder label %dec_label_pc_100095c8, { 1, 0 }
}

define i32 @function_100096f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100096f8:
  %v3_100096f8 = icmp eq i32 %arg1, 0
  %v2_10009708 = mul i32 %arg2, %arg1
  store i32 %v2_10009708, i32* @r31, align 4
  br i1 %v3_100096f8, label %dec_label_pc_10009734, label %dec_label_pc_10009714

dec_label_pc_10009714:                            ; preds = %dec_label_pc_100096f8
  %v2_10009714 = udiv i32 %v2_10009708, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000971c = icmp eq i32 %v2_10009714, %arg2
  br i1 %v4_1000971c, label %dec_label_pc_10009734, label %dec_label_pc_10009724

dec_label_pc_10009724:                            ; preds = %dec_label_pc_10009714
  %v0_10009724 = call i32 @function_10008d9c()
  %v2_1000972c = inttoptr i32 %v0_10009724 to i32*
  store i32 12, i32* %v2_1000972c, align 4
  br label %dec_label_pc_10009750

dec_label_pc_10009734:                            ; preds = %dec_label_pc_10009714, %dec_label_pc_100096f8
  store i32 %v2_10009708, i32* @r3, align 4
  store i32 268474172, i32* @lr, align 4
  %v0_10009738 = call i32 @function_100095a0()
  %v0_1000973c = load i32, i32* @r31, align 4
  store i32 %v0_10009738, i32* @r30, align 4
  %v3_10009740 = icmp eq i32 %v0_10009738, 0
  br i1 %v3_10009740, label %dec_label_pc_10009750, label %dec_label_pc_1000974c

dec_label_pc_1000974c:                            ; preds = %dec_label_pc_10009734
  store i32 268474192, i32* @lr, align 4
  %v3_1000974c = call i32 @function_10008e84(i32 0, i32 %v0_1000973c, i32 %v0_1000973c)
  br label %dec_label_pc_10009750

dec_label_pc_10009750:                            ; preds = %dec_label_pc_10009734, %dec_label_pc_10009724, %dec_label_pc_1000974c
  %v0_10009754 = load i32, i32* @r30, align 4
  ret i32 %v0_10009754

; uselistorder directives
  uselistorder i32 %v0_1000973c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009750, { 2, 0, 1 }
}

define i32 @function_10009768() local_unnamed_addr {
dec_label_pc_10009768:
  %v0_10009768 = load i32, i32* @r3, align 4
  %v3_10009768 = icmp eq i32 %v0_10009768, 0
  br i1 %v3_10009768, label %dec_label_pc_10009854, label %dec_label_pc_10009780

dec_label_pc_10009780:                            ; preds = %dec_label_pc_10009768
  %v1_10009784 = add i32 %v0_10009768, -4
  %v2_10009784 = inttoptr i32 %v1_10009784 to i32*
  %v3_10009784 = load i32, i32* %v2_10009784, align 4
  store i32 %v3_10009784, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_10009798 = call i32 @function_1000a0fc()
  %v0_100097a0 = load i32, i32* @r28, align 4
  store i32 268474284, i32* @lr, align 4
  %v4_100097a8 = call i32 @function_10009b1c(i32* nonnull @global_var_1001b700, i32 %v1_10009784, i32 %v0_100097a0)
  %v3_100097b0 = load i32, i32* @global_var_1001b75c.264, align 4
  store i32 %v4_100097a8, i32* @r29, align 4
  %v1_100097b8 = inttoptr i32 %v4_100097a8 to i32*
  %v2_100097b8 = load i32, i32* %v1_100097b8, align 4
  store i32 %v2_100097b8, i32* @r27, align 4
  %v1_100097bc = mul i32 %v3_100097b0, 8
  %v2_100097c0 = icmp ult i32 %v2_100097b8, %v1_100097bc
  br i1 %v2_100097c0, label %dec_label_pc_100097f4, label %dec_label_pc_100097c8

dec_label_pc_100097c8:                            ; preds = %dec_label_pc_10009780
  store i32 ptrtoint (i32* @global_var_1001b978.265 to i32), i32* @r28, align 4
  %v0_100097d8 = call i32 @function_1000a0fc()
  store i32 268474340, i32* @lr, align 4
  %v1_100097e0 = call i32 @function_1000a91c(i32 0)
  %v0_100097e4 = load i32, i32* @r31, align 4
  %v4_100097e4 = icmp eq i32 %v0_100097e4, %v1_100097e0
  br i1 %v4_100097e4, label %dec_label_pc_100097fc, label %dec_label_pc_100097ec

dec_label_pc_100097ec:                            ; preds = %dec_label_pc_100097c8
  %v0_100097f0 = call i32 @function_1000a0fc()
  br label %dec_label_pc_100097f4

dec_label_pc_100097f4:                            ; preds = %dec_label_pc_10009780, %dec_label_pc_100097ec
  br label %dec_label_pc_10009850

dec_label_pc_100097fc:                            ; preds = %dec_label_pc_100097c8
  %v0_100097fc = load i32, i32* @r29, align 4
  %v1_100097fc = add i32 %v0_100097fc, 4
  %v2_100097fc = inttoptr i32 %v1_100097fc to i32*
  %v3_100097fc = load i32, i32* %v2_100097fc, align 4
  %v3_10009800 = icmp eq i32 %v3_100097fc, 0
  br i1 %v3_10009800, label %dec_label_pc_10009810, label %dec_label_pc_10009808

dec_label_pc_10009808:                            ; preds = %dec_label_pc_100097fc
  %v1_10009808 = add i32 %v0_100097fc, 8
  %v2_10009808 = inttoptr i32 %v1_10009808 to i32*
  %v3_10009808 = load i32, i32* %v2_10009808, align 4
  %v2_1000980c = add i32 %v3_100097fc, 8
  %v3_1000980c = inttoptr i32 %v2_1000980c to i32*
  store i32 %v3_10009808, i32* %v3_1000980c, align 4
  %v0_10009810.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009810

dec_label_pc_10009810:                            ; preds = %dec_label_pc_100097fc, %dec_label_pc_10009808
  %v0_10009810 = phi i32 [ %v0_100097fc, %dec_label_pc_100097fc ], [ %v0_10009810.pre, %dec_label_pc_10009808 ]
  %v1_10009810 = add i32 %v0_10009810, 8
  %v2_10009810 = inttoptr i32 %v1_10009810 to i32*
  %v3_10009810 = load i32, i32* %v2_10009810, align 4
  %v1_10009814 = add i32 %v0_10009810, 4
  %v2_10009814 = inttoptr i32 %v1_10009814 to i32*
  %v3_10009814 = load i32, i32* %v2_10009814, align 4
  %v3_10009818 = icmp eq i32 %v3_10009810, 0
  br i1 %v3_10009818, label %dec_label_pc_10009828, label %dec_label_pc_10009820

dec_label_pc_10009820:                            ; preds = %dec_label_pc_10009810
  %v2_10009820 = add i32 %v3_10009810, 4
  %v3_10009820 = inttoptr i32 %v2_10009820 to i32*
  store i32 %v3_10009814, i32* %v3_10009820, align 4
  br label %dec_label_pc_1000982c

dec_label_pc_10009828:                            ; preds = %dec_label_pc_10009810
  store i32 %v3_10009814, i32* @global_var_1001b700, align 4
  br label %dec_label_pc_1000982c

dec_label_pc_1000982c:                            ; preds = %dec_label_pc_10009820, %dec_label_pc_10009828
  %v0_10009834 = call i32 @function_1000a0fc()
  %v0_10009838 = load i32, i32* @r27, align 4
  %v1_10009838 = load i32, i32* @r29, align 4
  %v0_10009840 = load i32, i32* @r31, align 4
  %v2_10009838 = sub i32 12, %v0_10009838
  %v1_1000983c = add i32 %v2_10009838, %v1_10009838
  %v2_10009840 = sub i32 %v1_1000983c, %v0_10009840
  store i32 268474440, i32* @lr, align 4
  %v1_10009844 = call i32 @function_1000a91c(i32 %v2_10009840)
  br label %dec_label_pc_10009850

dec_label_pc_10009850:                            ; preds = %dec_label_pc_100097f4, %dec_label_pc_1000982c
  %v0_10009850 = call i32 @function_1000a0fc()
  br label %dec_label_pc_10009854

dec_label_pc_10009854:                            ; preds = %dec_label_pc_10009768, %dec_label_pc_10009850
  %.0 = phi i32 [ undef, %dec_label_pc_10009768 ], [ %v0_10009850, %dec_label_pc_10009850 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10009810, { 1, 0 }
  uselistorder i32 (i32)* @function_1000a91c, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009854, { 1, 0 }
  uselistorder label %dec_label_pc_10009850, { 1, 0 }
  uselistorder label %dec_label_pc_1000982c, { 1, 0 }
  uselistorder label %dec_label_pc_10009810, { 1, 0 }
  uselistorder label %dec_label_pc_100097f4, { 1, 0 }
}

define i32 @function_10009868(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009868:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_10009868 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_10009868, label %dec_label_pc_10009884, label %dec_label_pc_10009890

dec_label_pc_10009884:                            ; preds = %dec_label_pc_10009868
  store i32 ptrtoint ([3 x i8]* @global_var_10009888.269 to i32), i32* @lr, align 4
  %v0_10009884 = call i32 @function_10009768()
  br label %dec_label_pc_1000989c

dec_label_pc_10009890:                            ; preds = %dec_label_pc_10009868
  %v3_10009890 = icmp eq i32 %arg1, 0
  br i1 %v3_10009890, label %dec_label_pc_1000989c, label %dec_label_pc_100098a8

dec_label_pc_1000989c:                            ; preds = %dec_label_pc_10009890, %dec_label_pc_10009884
  %storemerge = phi i32 [ 0, %dec_label_pc_10009884 ], [ %arg2, %dec_label_pc_10009890 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268474528, i32* @lr, align 4
  %v0_1000989c = call i32 @function_100095a0()
  store i32 %v0_1000989c, i32* @r28, align 4
  br label %dec_label_pc_10009980

dec_label_pc_100098a8:                            ; preds = %dec_label_pc_10009890
  %v1_100098a8 = add i32 %arg2, 7
  %v1_100098ac = add i32 %arg1, -4
  store i32 %v1_100098ac, i32* %r27.global-to-local, align 4
  %v1_100098b0 = call i32 @__asm_rlwinm(i32 %v1_100098a8, i32 0, i32 0, i32 29)
  store i32 %v1_100098b0, i32* @r31, align 4
  %v2_100098b4 = inttoptr i32 %v1_100098ac to i32*
  %v3_100098b4 = load i32, i32* %v2_100098b4, align 4
  store i32 %v3_100098b4, i32* @r30, align 4
  %v2_100098b8 = icmp ugt i32 %v1_100098b0, 11
  br i1 %v2_100098b8, label %dec_label_pc_100098c4, label %dec_label_pc_100098c0

dec_label_pc_100098c0:                            ; preds = %dec_label_pc_100098a8
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_100098c4

dec_label_pc_100098c4:                            ; preds = %dec_label_pc_100098a8, %dec_label_pc_100098c0
  %v0_10009944 = phi i32 [ %v1_100098b0, %dec_label_pc_100098a8 ], [ 12, %dec_label_pc_100098c0 ]
  %v3_100098c4 = icmp ugt i32 %v0_10009944, %v3_100098b4
  br i1 %v3_100098c4, label %dec_label_pc_100098cc, label %dec_label_pc_10009944

dec_label_pc_100098cc:                            ; preds = %dec_label_pc_100098c4
  %v0_100098d8 = call i32 @function_1000a0fc()
  %v0_100098e0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100098e0 = load i32, i32* @r30, align 4
  %v2_100098e0 = add i32 %v1_100098e0, %v0_100098e0
  %v1_100098e4 = load i32, i32* @r31, align 4
  %v2_100098e4 = sub i32 %v1_100098e4, %v1_100098e0
  %v4_100098ec = call i32 @function_10009a38(i32* nonnull @global_var_1001b700, i32 %v2_100098e0, i32 %v2_100098e4)
  store i32 %v4_100098ec, i32* %r27.global-to-local, align 4
  %v0_100098f8 = call i32 @function_1000a0fc()
  %v3_100098fc = icmp eq i32 %v4_100098ec, 0
  br i1 %v3_100098fc, label %dec_label_pc_10009910, label %dec_label_pc_10009904

dec_label_pc_10009904:                            ; preds = %dec_label_pc_100098cc
  %v0_10009904 = load i32, i32* @r30, align 4
  %v2_10009904 = add i32 %v0_10009904, %v4_100098ec
  %v1_10009908 = load i32, i32* @r28, align 4
  %v2_10009908 = add i32 %v1_10009908, -4
  %v3_10009908 = inttoptr i32 %v2_10009908 to i32*
  store i32 %v2_10009904, i32* %v3_10009908, align 4
  br label %dec_label_pc_10009980

dec_label_pc_10009910:                            ; preds = %dec_label_pc_100098cc
  %v0_10009910 = load i32, i32* @r31, align 4
  %v1_10009910 = add i32 %v0_10009910, -4
  store i32 %v1_10009910, i32* @r3, align 4
  store i32 268474648, i32* @lr, align 4
  %v0_10009914 = call i32 @function_100095a0()
  store i32 %v0_10009914, i32* @r3, align 4
  store i32 %v0_10009914, i32* @r31, align 4
  %v3_10009918 = icmp eq i32 %v0_10009914, 0
  br i1 %v3_10009918, label %dec_label_pc_10009920, label %dec_label_pc_10009928

dec_label_pc_10009920:                            ; preds = %dec_label_pc_10009910
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009980

dec_label_pc_10009928:                            ; preds = %dec_label_pc_10009910
  %v0_10009928 = load i32, i32* @r28, align 4
  store i32 %v0_10009928, i32* @r4, align 4
  %v0_1000992c = load i32, i32* @r30, align 4
  %v1_1000992c = add i32 %v0_1000992c, -4
  store i32 %v1_1000992c, i32* @r5, align 4
  store i32 268474676, i32* @lr, align 4
  %v0_10009930 = call i32 @function_1000ab50()
  %v0_10009934 = load i32, i32* @r28, align 4
  store i32 %v0_10009934, i32* @r3, align 4
  store i32 268474684, i32* @lr, align 4
  %v0_10009938 = call i32 @function_10009768()
  %v0_1000993c = load i32, i32* @r31, align 4
  store i32 %v0_1000993c, i32* @r28, align 4
  br label %dec_label_pc_10009980

dec_label_pc_10009944:                            ; preds = %dec_label_pc_100098c4
  %v1_10009944 = add i32 %v0_10009944, 28
  %v3_10009948 = icmp ugt i32 %v1_10009944, %v3_100098b4
  br i1 %v3_10009948, label %dec_label_pc_10009980, label %dec_label_pc_10009950

dec_label_pc_10009950:                            ; preds = %dec_label_pc_10009944
  store i32 ptrtoint (i32* @global_var_1001b7d8.261 to i32), i32* @r29, align 4
  %v0_1000995c = call i32 @function_1000a0fc()
  %v0_10009964 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009964 = load i32, i32* @r31, align 4
  %v2_10009964 = add i32 %v1_10009964, %v0_10009964
  %v1_10009968 = load i32, i32* @r30, align 4
  %v2_10009968 = sub i32 %v1_10009968, %v1_10009964
  store i32 268474740, i32* @lr, align 4
  %v4_10009970 = call i32 @function_10009b1c(i32* nonnull @global_var_1001b700, i32 %v2_10009964, i32 %v2_10009968)
  %v0_10009978 = call i32 @function_1000a0fc()
  %v0_1000997c = load i32, i32* @r31, align 4
  %v1_1000997c = load i32, i32* @r28, align 4
  %v2_1000997c = add i32 %v1_1000997c, -4
  %v3_1000997c = inttoptr i32 %v2_1000997c to i32*
  store i32 %v0_1000997c, i32* %v3_1000997c, align 4
  br label %dec_label_pc_10009980

dec_label_pc_10009980:                            ; preds = %dec_label_pc_10009944, %dec_label_pc_10009928, %dec_label_pc_10009920, %dec_label_pc_10009904, %dec_label_pc_1000989c, %dec_label_pc_10009950
  %v0_10009984 = load i32, i32* @r28, align 4
  ret i32 %v0_10009984

; uselistorder directives
  uselistorder i32 %v1_10009964, { 1, 0 }
  uselistorder i32 %v4_100098ec, { 1, 0, 2 }
  uselistorder i32 %v1_100098e0, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001b700, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_100095a0, { 2, 1, 0, 7, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 4, 3, 8, 6, 5 }
  uselistorder i32 ()* @function_10009768, { 4, 3, 7, 6, 5, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10009980, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_100098c4, { 1, 0 }
}

define i32 @function_10009998(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009998:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10009998 = inttoptr i32 %arg2 to i32*
  %v2_10009998 = load i32, i32* %v1_10009998, align 4
  %v1_1000999c = add i32 %v2_10009998, 3
  store i32 %v1_1000999c, i32* %r9.global-to-local, align 4
  %v1_100099a0 = call i32 @__asm_rlwinm(i32 %v1_1000999c, i32 0, i32 0, i32 29)
  %v2_100099a4 = icmp ugt i32 %v1_100099a0, 11
  br i1 %v2_100099a4, label %dec_label_pc_10009a28.preheader, label %dec_label_pc_100099ac

dec_label_pc_100099ac:                            ; preds = %dec_label_pc_10009998
  br label %dec_label_pc_10009a28.preheader

dec_label_pc_10009a28.preheader:                  ; preds = %dec_label_pc_10009998, %dec_label_pc_100099ac
  %storemerge20 = phi i32 [ 12, %dec_label_pc_100099ac ], [ %v1_100099a0, %dec_label_pc_10009998 ]
  %v0_10009a0c = phi i32 [ 12, %dec_label_pc_100099ac ], [ %v1_100099a0, %dec_label_pc_10009998 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_10009a285 = icmp eq i32 %storemerge2, 0
  br i1 %v3_10009a285, label %dec_label_pc_10009a30, label %dec_label_pc_100099b8

dec_label_pc_100099b8:                            ; preds = %dec_label_pc_10009a28.preheader, %dec_label_pc_10009a24
  %v0_10009a24 = phi i32 [ %storemerge, %dec_label_pc_10009a24 ], [ %storemerge2, %dec_label_pc_10009a28.preheader ]
  %v1_100099b8 = inttoptr i32 %v0_10009a24 to i32*
  %v2_100099b8 = load i32, i32* %v1_100099b8, align 4
  store i32 %v2_100099b8, i32* %r10.global-to-local, align 4
  %v2_100099bc = icmp ult i32 %v2_100099b8, %v0_10009a0c
  br i1 %v2_100099bc, label %dec_label_pc_10009a24, label %dec_label_pc_100099c4

dec_label_pc_100099c4:                            ; preds = %dec_label_pc_100099b8
  %v1_100099c4 = add i32 %v0_10009a0c, 44
  %v2_100099c8 = icmp ult i32 %v2_100099b8, %v1_100099c4
  br i1 %v2_100099c8, label %dec_label_pc_100099d0, label %dec_label_pc_10009a0c

dec_label_pc_100099d0:                            ; preds = %dec_label_pc_100099c4
  %v1_100099d0 = add i32 %v0_10009a24, 4
  %v2_100099d0 = inttoptr i32 %v1_100099d0 to i32*
  %v3_100099d0 = load i32, i32* %v2_100099d0, align 4
  store i32 %v3_100099d0, i32* %r11.global-to-local, align 4
  %v3_100099d4 = icmp eq i32 %v3_100099d0, 0
  br i1 %v3_100099d4, label %dec_label_pc_100099e4, label %dec_label_pc_100099dc

dec_label_pc_100099dc:                            ; preds = %dec_label_pc_100099d0
  %v1_100099dc = add i32 %v0_10009a24, 8
  %v2_100099dc = inttoptr i32 %v1_100099dc to i32*
  %v3_100099dc = load i32, i32* %v2_100099dc, align 4
  %v2_100099e0 = add i32 %v3_100099d0, 8
  %v3_100099e0 = inttoptr i32 %v2_100099e0 to i32*
  store i32 %v3_100099dc, i32* %v3_100099e0, align 4
  %v0_100099e4.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10009a00.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100099e4

dec_label_pc_100099e4:                            ; preds = %dec_label_pc_100099d0, %dec_label_pc_100099dc
  %v0_10009a00 = phi i32 [ %v2_100099b8, %dec_label_pc_100099d0 ], [ %v0_10009a00.pre, %dec_label_pc_100099dc ]
  %v0_100099e4 = phi i32 [ %v0_10009a24, %dec_label_pc_100099d0 ], [ %v0_100099e4.pre, %dec_label_pc_100099dc ]
  %v1_100099e4 = add i32 %v0_100099e4, 8
  %v2_100099e4 = inttoptr i32 %v1_100099e4 to i32*
  %v3_100099e4 = load i32, i32* %v2_100099e4, align 4
  %v1_100099e8 = add i32 %v0_100099e4, 4
  %v2_100099e8 = inttoptr i32 %v1_100099e8 to i32*
  %v3_100099e8 = load i32, i32* %v2_100099e8, align 4
  %v3_100099ec = icmp eq i32 %v3_100099e4, 0
  store i32 %v0_10009a00, i32* %r11.global-to-local, align 4
  br i1 %v3_100099ec, label %dec_label_pc_10009a00, label %dec_label_pc_100099f4

dec_label_pc_100099f4:                            ; preds = %dec_label_pc_100099e4
  %v2_100099f8 = add i32 %v3_100099e4, 4
  %v3_100099f8 = inttoptr i32 %v2_100099f8 to i32*
  store i32 %v3_100099e8, i32* %v3_100099f8, align 4
  br label %dec_label_pc_10009a14

dec_label_pc_10009a00:                            ; preds = %dec_label_pc_100099e4
  store i32 %v3_100099e8, i32* %arg1, align 4
  br label %dec_label_pc_10009a14

dec_label_pc_10009a0c:                            ; preds = %dec_label_pc_100099c4
  %v2_10009a0c = sub i32 %v2_100099b8, %v0_10009a0c
  store i32 %v2_10009a0c, i32* %v1_100099b8, align 4
  br label %dec_label_pc_10009a14

dec_label_pc_10009a14:                            ; preds = %dec_label_pc_10009a00, %dec_label_pc_100099f4, %dec_label_pc_10009a0c
  %v0_10009a14 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009a14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10009a14 = sub i32 %v1_10009a14, %v0_10009a14
  store i32 %v2_10009a14, i32* %r9.global-to-local, align 4
  %v0_10009a18 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10009a18, i32* %v1_10009998, align 4
  %v0_10009a1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10009a1c = add i32 %v0_10009a1c, 12
  ret i32 %v1_10009a1c

dec_label_pc_10009a24:                            ; preds = %dec_label_pc_100099b8
  %v1_10009a24 = add i32 %v0_10009a24, 4
  %storemerge.in = inttoptr i32 %v1_10009a24 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10009a28 = icmp eq i32 %storemerge, 0
  br i1 %v3_10009a28, label %dec_label_pc_10009a28.dec_label_pc_10009a30_crit_edge, label %dec_label_pc_100099b8

dec_label_pc_10009a28.dec_label_pc_10009a30_crit_edge: ; preds = %dec_label_pc_10009a24
  br label %dec_label_pc_10009a30

dec_label_pc_10009a30:                            ; preds = %dec_label_pc_10009a28.dec_label_pc_10009a30_crit_edge, %dec_label_pc_10009a28.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_100099e4, { 1, 0 }
  uselistorder i32 %v2_100099b8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10009a24, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10009a0c, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10009a14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100099e4, { 1, 0 }
  uselistorder label %dec_label_pc_100099b8, { 1, 0 }
  uselistorder label %dec_label_pc_10009a28.preheader, { 1, 0 }
}

define i32 @function_10009a38(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009a38:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10009a38 = load i32, i32* %arg1, align 4
  store i32 %v2_10009a38, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_10009a40 = add i32 %arg3, 3
  %v3_10009ac43 = icmp eq i32 %v2_10009a38, 0
  br i1 %v3_10009ac43, label %dec_label_pc_10009acc, label %dec_label_pc_10009a48

dec_label_pc_10009a48:                            ; preds = %dec_label_pc_10009a38, %dec_label_pc_10009ac0
  %v0_10009ac0 = phi i32 [ %v3_10009ac0, %dec_label_pc_10009ac0 ], [ %v2_10009a38, %dec_label_pc_10009a38 ]
  %v1_10009a48 = inttoptr i32 %v0_10009ac0 to i32*
  %v2_10009a48 = load i32, i32* %v1_10009a48, align 4
  %v2_10009a4c = sub i32 %v0_10009ac0, %v2_10009a48
  %v1_10009a50 = add i32 %v2_10009a4c, 12
  %v3_10009a54 = icmp ugt i32 %v1_10009a50, %arg2
  br i1 %v3_10009a54, label %dec_label_pc_10009ac0, label %dec_label_pc_10009a5c

dec_label_pc_10009a5c:                            ; preds = %dec_label_pc_10009a48
  %v4_10009a54 = icmp eq i32 %v1_10009a50, %arg2
  br i1 %v4_10009a54, label %dec_label_pc_10009a64, label %dec_label_pc_10009acc

dec_label_pc_10009a64:                            ; preds = %dec_label_pc_10009a5c
  %v1_10009a64 = call i32 @__asm_rlwinm(i32 %v1_10009a40, i32 0, i32 0, i32 29)
  %v2_10009a68 = icmp ult i32 %v2_10009a48, %v1_10009a64
  br i1 %v2_10009a68, label %dec_label_pc_10009acc, label %dec_label_pc_10009a70

dec_label_pc_10009a70:                            ; preds = %dec_label_pc_10009a64
  %v1_10009a70 = add i32 %v1_10009a64, 44
  %v2_10009a74 = icmp ult i32 %v2_10009a48, %v1_10009a70
  br i1 %v2_10009a74, label %dec_label_pc_10009a7c, label %dec_label_pc_10009ab0

dec_label_pc_10009a7c:                            ; preds = %dec_label_pc_10009a70
  %v0_10009a7c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009a7c = add i32 %v0_10009a7c, 4
  %v2_10009a7c = inttoptr i32 %v1_10009a7c to i32*
  %v3_10009a7c = load i32, i32* %v2_10009a7c, align 4
  %v3_10009a80 = icmp eq i32 %v3_10009a7c, 0
  br i1 %v3_10009a80, label %dec_label_pc_10009a90, label %dec_label_pc_10009a88

dec_label_pc_10009a88:                            ; preds = %dec_label_pc_10009a7c
  %v1_10009a88 = add i32 %v0_10009a7c, 8
  %v2_10009a88 = inttoptr i32 %v1_10009a88 to i32*
  %v3_10009a88 = load i32, i32* %v2_10009a88, align 4
  %v2_10009a8c = add i32 %v3_10009a7c, 8
  %v3_10009a8c = inttoptr i32 %v2_10009a8c to i32*
  store i32 %v3_10009a88, i32* %v3_10009a8c, align 4
  %v0_10009a90.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009a90

dec_label_pc_10009a90:                            ; preds = %dec_label_pc_10009a7c, %dec_label_pc_10009a88
  %v0_10009a90 = phi i32 [ %v0_10009a7c, %dec_label_pc_10009a7c ], [ %v0_10009a90.pre, %dec_label_pc_10009a88 ]
  %v1_10009a90 = add i32 %v0_10009a90, 8
  %v2_10009a90 = inttoptr i32 %v1_10009a90 to i32*
  %v3_10009a90 = load i32, i32* %v2_10009a90, align 4
  %v1_10009a94 = add i32 %v0_10009a90, 4
  %v2_10009a94 = inttoptr i32 %v1_10009a94 to i32*
  %v3_10009a94 = load i32, i32* %v2_10009a94, align 4
  %v3_10009a98 = icmp eq i32 %v3_10009a90, 0
  br i1 %v3_10009a98, label %dec_label_pc_10009aa8, label %dec_label_pc_10009aa0

dec_label_pc_10009aa0:                            ; preds = %dec_label_pc_10009a90
  %v2_10009aa0 = add i32 %v3_10009a90, 4
  %v3_10009aa0 = inttoptr i32 %v2_10009aa0 to i32*
  store i32 %v3_10009a94, i32* %v3_10009aa0, align 4
  ret i32 %v2_10009a48

dec_label_pc_10009aa8:                            ; preds = %dec_label_pc_10009a90
  %v1_10009aa8 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009aa8 = inttoptr i32 %v1_10009aa8 to i32*
  store i32 %v3_10009a94, i32* %v2_10009aa8, align 4
  ret i32 %v2_10009a48

dec_label_pc_10009ab0:                            ; preds = %dec_label_pc_10009a70
  %v2_10009ab0 = sub i32 %v2_10009a48, %v1_10009a64
  %v1_10009ab8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009ab8 = inttoptr i32 %v1_10009ab8 to i32*
  store i32 %v2_10009ab0, i32* %v2_10009ab8, align 4
  ret i32 %v1_10009a64

dec_label_pc_10009ac0:                            ; preds = %dec_label_pc_10009a48
  %v1_10009ac0 = add i32 %v0_10009ac0, 4
  %v2_10009ac0 = inttoptr i32 %v1_10009ac0 to i32*
  %v3_10009ac0 = load i32, i32* %v2_10009ac0, align 4
  store i32 %v3_10009ac0, i32* %r11.global-to-local, align 4
  %v3_10009ac4 = icmp eq i32 %v3_10009ac0, 0
  br i1 %v3_10009ac4, label %dec_label_pc_10009ac4.dec_label_pc_10009acc.loopexit_crit_edge, label %dec_label_pc_10009a48

dec_label_pc_10009ac4.dec_label_pc_10009acc.loopexit_crit_edge: ; preds = %dec_label_pc_10009ac0
  br label %dec_label_pc_10009acc

dec_label_pc_10009acc:                            ; preds = %dec_label_pc_10009a38, %dec_label_pc_10009ac4.dec_label_pc_10009acc.loopexit_crit_edge, %dec_label_pc_10009a5c, %dec_label_pc_10009a64
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10009ac0, { 1, 2, 0 }
  uselistorder i32 %v0_10009a90, { 1, 0 }
  uselistorder i32 %v1_10009a64, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10009a48, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v0_10009ac0, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10009acc, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10009a90, { 1, 0 }
  uselistorder label %dec_label_pc_10009a48, { 1, 0 }
}

define i32 @function_10009ad4(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009ad4:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10009ad4 = icmp eq i32 %arg3, 0
  %v2_10009ad8 = add i32 %arg2, 4
  %v3_10009ad8 = inttoptr i32 %v2_10009ad8 to i32*
  store i32 %arg4, i32* %v3_10009ad8, align 4
  %v2_10009adc = add i32 %arg2, 8
  %v3_10009adc = inttoptr i32 %v2_10009adc to i32*
  store i32 %arg3, i32* %v3_10009adc, align 4
  br i1 %v3_10009ad4, label %dec_label_pc_10009aec, label %dec_label_pc_10009ae4

dec_label_pc_10009ae4:                            ; preds = %dec_label_pc_10009ad4
  %v2_10009ae4 = add i32 %arg3, 4
  %v3_10009ae4 = inttoptr i32 %v2_10009ae4 to i32*
  store i32 %arg2, i32* %v3_10009ae4, align 4
  br label %dec_label_pc_10009af0

dec_label_pc_10009aec:                            ; preds = %dec_label_pc_10009ad4
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10009af0

dec_label_pc_10009af0:                            ; preds = %dec_label_pc_10009ae4, %dec_label_pc_10009aec
  %v3_10009af0 = icmp eq i32 %arg4, 0
  %v0_10009af4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009af0, i32 %v0_10009af4)
  %v2_10009af8 = add i32 %arg4, 8
  %v3_10009af8 = inttoptr i32 %v2_10009af8 to i32*
  store i32 %arg2, i32* %v3_10009af8, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 4, 3 }
  uselistorder label %dec_label_pc_10009af0, { 1, 0 }
}

define i32 @function_10009b00(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009b00:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10009b00 = icmp eq i32 %arg3, 0
  br i1 %v3_10009b00, label %dec_label_pc_10009b10, label %dec_label_pc_10009b08

dec_label_pc_10009b08:                            ; preds = %dec_label_pc_10009b00
  %v2_10009b08 = add i32 %arg3, 4
  %v3_10009b08 = inttoptr i32 %v2_10009b08 to i32*
  store i32 %arg2, i32* %v3_10009b08, align 4
  br label %dec_label_pc_10009b14

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009b00
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10009b14

dec_label_pc_10009b14:                            ; preds = %dec_label_pc_10009b08, %dec_label_pc_10009b10
  %v2_10009b14 = add i32 %arg2, 8
  %v3_10009b14 = inttoptr i32 %v2_10009b14 to i32*
  store i32 %arg3, i32* %v3_10009b14, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009b14, { 1, 0 }
}

define i32 @function_10009b1c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009b1c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10009b34 = load i32, i32* %arg1, align 4
  store i32 %v2_10009b34, i32* @r31, align 4
  %v2_10009b38 = add i32 %arg3, %arg2
  store i32 %v2_10009b38, i32* %r3.global-to-local, align 4
  %v3_10009b4c7 = icmp eq i32 %v2_10009b34, 0
  %v1_10009b508 = add i32 %v2_10009b34, 12
  %tmp69 = icmp uge i32 %v1_10009b508, %arg2
  %or.cond10 = or i1 %v3_10009b4c7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10009b5c, label %dec_label_pc_10009b44

dec_label_pc_10009b44:                            ; preds = %dec_label_pc_10009b1c, %dec_label_pc_10009b44
  %v0_10009ba411 = phi i32 [ %v3_10009b48, %dec_label_pc_10009b44 ], [ %v2_10009b34, %dec_label_pc_10009b1c ]
  store i32 %v0_10009ba411, i32* %r11.global-to-local, align 4
  %v1_10009b48 = add i32 %v0_10009ba411, 4
  %v2_10009b48 = inttoptr i32 %v1_10009b48 to i32*
  %v3_10009b48 = load i32, i32* %v2_10009b48, align 4
  store i32 %v3_10009b48, i32* @r31, align 4
  %v3_10009b4c = icmp eq i32 %v3_10009b48, 0
  %v1_10009b50 = add i32 %v3_10009b48, 12
  %tmp6 = icmp uge i32 %v1_10009b50, %arg2
  %or.cond = or i1 %v3_10009b4c, %tmp6
  br i1 %or.cond, label %dec_label_pc_10009b5c, label %dec_label_pc_10009b44

dec_label_pc_10009b5c:                            ; preds = %dec_label_pc_10009b44, %dec_label_pc_10009b1c
  %v0_10009b98.lcssa = phi i32 [ 0, %dec_label_pc_10009b1c ], [ %v0_10009ba411, %dec_label_pc_10009b44 ]
  %v0_10009ba4.lcssa = phi i32 [ %v2_10009b34, %dec_label_pc_10009b1c ], [ %v3_10009b48, %dec_label_pc_10009b44 ]
  %v3_10009b4c.lcssa = phi i1 [ %v3_10009b4c7, %dec_label_pc_10009b1c ], [ %v3_10009b4c, %dec_label_pc_10009b44 ]
  br i1 %v3_10009b4c.lcssa, label %dec_label_pc_10009c14, label %dec_label_pc_10009b64

dec_label_pc_10009b64:                            ; preds = %dec_label_pc_10009b5c
  %v1_10009b64 = inttoptr i32 %v0_10009ba4.lcssa to i32*
  %v2_10009b64 = load i32, i32* %v1_10009b64, align 4
  %v2_10009b68 = sub i32 %v0_10009ba4.lcssa, %v2_10009b64
  %v1_10009b6c = add i32 %v2_10009b68, 12
  %v3_10009b70 = icmp ugt i32 %v1_10009b6c, %v2_10009b38
  br i1 %v3_10009b70, label %dec_label_pc_10009c14, label %dec_label_pc_10009b78

dec_label_pc_10009b78:                            ; preds = %dec_label_pc_10009b64
  %v4_10009b70 = icmp eq i32 %v1_10009b6c, %v2_10009b38
  %v2_10009b7c = add i32 %v2_10009b64, %arg3
  store i32 %v2_10009b7c, i32* @r29, align 4
  br i1 %v4_10009b70, label %dec_label_pc_10009b84, label %dec_label_pc_10009bb4

dec_label_pc_10009b84:                            ; preds = %dec_label_pc_10009b78
  %v3_10009b84 = icmp eq i32 %v0_10009b98.lcssa, 0
  br i1 %v3_10009b84, label %dec_label_pc_10009c08, label %dec_label_pc_10009b8c

dec_label_pc_10009b8c:                            ; preds = %dec_label_pc_10009b84
  %v1_10009b8c = add i32 %v0_10009b98.lcssa, 12
  %v4_10009b90 = icmp eq i32 %v1_10009b8c, %arg2
  br i1 %v4_10009b90, label %dec_label_pc_10009b98, label %dec_label_pc_10009c08

dec_label_pc_10009b98:                            ; preds = %dec_label_pc_10009b8c
  %v1_10009b98 = inttoptr i32 %v0_10009b98.lcssa to i32*
  %v2_10009b98 = load i32, i32* %v1_10009b98, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10009ba0 = add i32 %v0_10009b98.lcssa, 8
  %v2_10009ba0 = inttoptr i32 %v1_10009ba0 to i32*
  %v3_10009ba0 = load i32, i32* %v2_10009ba0, align 4
  %v2_10009ba8 = add i32 %v2_10009b98, %v2_10009b7c
  store i32 %v2_10009ba8, i32* @r29, align 4
  %v5_10009bac = call i32 @function_10009b00(i32* %arg1, i32 %v0_10009ba4.lcssa, i32 %v3_10009ba0, i32 %v2_10009b38)
  store i32 %v5_10009bac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009c08

dec_label_pc_10009bb4:                            ; preds = %dec_label_pc_10009b78
  %v1_10009bb4 = add i32 %v0_10009ba4.lcssa, 4
  %v2_10009bb4 = inttoptr i32 %v1_10009bb4 to i32*
  %v3_10009bb4 = load i32, i32* %v2_10009bb4, align 4
  %v3_10009bb8 = icmp eq i32 %v3_10009bb4, 0
  br i1 %v3_10009bb8, label %dec_label_pc_10009bf0, label %dec_label_pc_10009bc0

dec_label_pc_10009bc0:                            ; preds = %dec_label_pc_10009bb4
  %v1_10009bc0 = inttoptr i32 %v3_10009bb4 to i32*
  %v2_10009bc0 = load i32, i32* %v1_10009bc0, align 4
  %v2_10009bc4 = sub i32 %v3_10009bb4, %v2_10009bc0
  %v1_10009bc8 = add i32 %v2_10009bc4, 12
  %v4_10009bcc = icmp eq i32 %v2_10009b38, %v1_10009bc8
  br i1 %v4_10009bcc, label %dec_label_pc_10009bd4, label %dec_label_pc_10009bf0

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009bc0
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10009be0 = add i32 %v2_10009bc0, %v2_10009b7c
  store i32 %v2_10009be0, i32* @r29, align 4
  store i32 %v3_10009bb4, i32* @r31, align 4
  %v5_10009be8 = call i32 @function_10009b00(i32* %arg1, i32 %v3_10009bb4, i32 %v0_10009b98.lcssa, i32 %v2_10009b38)
  store i32 %v5_10009be8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009c08

dec_label_pc_10009bf0:                            ; preds = %dec_label_pc_10009bc0, %dec_label_pc_10009bb4
  %v2_10009bf0 = add i32 %v0_10009ba4.lcssa, %arg3
  store i32 %v2_10009bf0, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268475400, i32* @lr, align 4
  %v5_10009c04 = call i32 @function_10009ad4(i32* %arg1, i32 %v2_10009bf0, i32 %v0_10009b98.lcssa, i32 %v3_10009bb4)
  store i32 %v5_10009c04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009c08

dec_label_pc_10009c08:                            ; preds = %dec_label_pc_10009b8c, %dec_label_pc_10009b84, %dec_label_pc_10009bd4, %dec_label_pc_10009b98, %dec_label_pc_10009bf0
  %v0_10009c08 = load i32, i32* @r31, align 4
  store i32 %v0_10009c08, i32* @r30, align 4
  %v0_10009c0c = load i32, i32* @r29, align 4
  %v2_10009c0c = inttoptr i32 %v0_10009c08 to i32*
  store i32 %v0_10009c0c, i32* %v2_10009c0c, align 4
  br label %dec_label_pc_10009c30

dec_label_pc_10009c14:                            ; preds = %dec_label_pc_10009b64, %dec_label_pc_10009b5c
  %v2_10009c14 = add i32 %v2_10009b38, -12
  %v3_10009c14 = inttoptr i32 %v2_10009c14 to i32*
  store i32 %arg3, i32* %v3_10009c14, align 4
  %v0_10009c18 = load i32, i32* %r3.global-to-local, align 4
  %v1_10009c18 = add i32 %v0_10009c18, -12
  store i32 %v1_10009c18, i32* @r30, align 4
  %v0_10009c1c = load i32, i32* %r11.global-to-local, align 4
  %v0_10009c20 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10009c20, i32* %r3.global-to-local, align 4
  %v0_10009c24 = load i32, i32* @r31, align 4
  store i32 268475440, i32* @lr, align 4
  %v4_10009c2c = inttoptr i32 %v0_10009c20 to i32*
  %v5_10009c2c = call i32 @function_10009ad4(i32* %v4_10009c2c, i32 %v1_10009c18, i32 %v0_10009c1c, i32 %v0_10009c24)
  store i32 %v5_10009c2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009c30

dec_label_pc_10009c30:                            ; preds = %dec_label_pc_10009c08, %dec_label_pc_10009c14
  %v0_10009c34 = load i32, i32* @r30, align 4
  store i32 %v0_10009c34, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009c34

; uselistorder directives
  uselistorder i32 %v3_10009bb4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10009b6c, { 1, 0 }
  uselistorder i32 %v0_10009ba4.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10009b98.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10009b48, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10009b38, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 4, 9, 10, 11, 1, 2, 3, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_10009b00, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009c30, { 1, 0 }
  uselistorder label %dec_label_pc_10009c08, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10009b44, { 1, 0 }
}

define i32 @function_10009c48(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009c48:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r25, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10009c80 = load i32, i32* bitcast (i32** @global_var_1001b70c.272 to i32*), align 4
  %v2_10009c8c27 = load i8, i8* %arg1, align 1
  %v3_10009c8c28 = zext i8 %v2_10009c8c27 to i32
  %v1_10009c9029 = mul nuw nsw i32 %v3_10009c8c28, 2
  %v2_10009c9430 = add i32 %v1_10009c9029, %v3_10009c80
  %v3_10009c9431 = inttoptr i32 %v2_10009c9430 to i16*
  %v4_10009c9432 = load i16, i16* %v3_10009c9431, align 2
  %v1_10009c9834 = and i16 %v4_10009c9432, 32
  %v3_10009c9835 = icmp eq i16 %v1_10009c9834, 0
  br i1 %v3_10009c9835, label %dec_label_pc_10009ca0, label %dec_label_pc_10009c88

dec_label_pc_10009c88:                            ; preds = %dec_label_pc_10009c48, %dec_label_pc_10009c88
  %v0_10009cc036 = phi i32 [ %v1_10009c88, %dec_label_pc_10009c88 ], [ %tmp, %dec_label_pc_10009c48 ]
  %v1_10009c88 = add i32 %v0_10009cc036, 1
  store i32 %v1_10009c88, i32* %r31.global-to-local, align 4
  %v1_10009c8c = inttoptr i32 %v1_10009c88 to i8*
  %v2_10009c8c = load i8, i8* %v1_10009c8c, align 1
  %v3_10009c8c = zext i8 %v2_10009c8c to i32
  %v1_10009c90 = mul nuw nsw i32 %v3_10009c8c, 2
  %v2_10009c94 = add i32 %v1_10009c90, %v3_10009c80
  %v3_10009c94 = inttoptr i32 %v2_10009c94 to i16*
  %v4_10009c94 = load i16, i16* %v3_10009c94, align 2
  %v1_10009c98 = and i16 %v4_10009c94, 32
  %v3_10009c98 = icmp eq i16 %v1_10009c98, 0
  br i1 %v3_10009c98, label %dec_label_pc_10009ca0, label %dec_label_pc_10009c88

dec_label_pc_10009ca0:                            ; preds = %dec_label_pc_10009c88, %dec_label_pc_10009c48
  %v0_10009cc0.lcssa = phi i32 [ %tmp, %dec_label_pc_10009c48 ], [ %v1_10009c88, %dec_label_pc_10009c88 ]
  %v2_10009c8c.lcssa = phi i8 [ %v2_10009c8c27, %dec_label_pc_10009c48 ], [ %v2_10009c8c, %dec_label_pc_10009c88 ]
  %v3_10009ca0 = icmp eq i8 %v2_10009c8c.lcssa, 43
  br i1 %v3_10009ca0, label %dec_label_pc_10009cc0, label %dec_label_pc_10009ca8

dec_label_pc_10009ca8:                            ; preds = %dec_label_pc_10009ca0
  %v3_10009ca8 = icmp eq i8 %v2_10009c8c.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_10009ca8, label %dec_label_pc_10009cc0, label %dec_label_pc_10009cc4

dec_label_pc_10009cc0:                            ; preds = %dec_label_pc_10009ca0, %dec_label_pc_10009ca8
  %storemerge = phi i32 [ 1, %dec_label_pc_10009ca8 ], [ 0, %dec_label_pc_10009ca0 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_10009cc0 = add i32 %v0_10009cc0.lcssa, 1
  store i32 %v1_10009cc0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009cc4

dec_label_pc_10009cc4:                            ; preds = %dec_label_pc_10009ca8, %dec_label_pc_10009cc0
  %v1_10009cc4 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_10009cc4 = icmp eq i32 %v1_10009cc4, 0
  br i1 %v4_10009cc4, label %dec_label_pc_10009cd0, label %dec_label_pc_10009cc4.dec_label_pc_10009d0c_crit_edge

dec_label_pc_10009cc4.dec_label_pc_10009d0c_crit_edge: ; preds = %dec_label_pc_10009cc4
  %v0_10009d0c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009d0c

dec_label_pc_10009cd0:                            ; preds = %dec_label_pc_10009cc4
  %v0_10009cd0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009cd0 = inttoptr i32 %v0_10009cd0 to i8*
  %v2_10009cd0 = load i8, i8* %v1_10009cd0, align 1
  %v0_10009cd4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10009cd4 = add i32 %v0_10009cd4, 10
  store i32 %v1_10009cd4, i32* %r30.global-to-local, align 4
  %v3_10009cd8 = icmp eq i8 %v2_10009cd0, 48
  br i1 %v3_10009cd8, label %dec_label_pc_10009ce0, label %dec_label_pc_10009d00

dec_label_pc_10009ce0:                            ; preds = %dec_label_pc_10009cd0
  %v1_10009ce0 = add i32 %v0_10009cd0, 1
  %v2_10009ce0 = inttoptr i32 %v1_10009ce0 to i8*
  %v3_10009ce0 = load i8, i8* %v2_10009ce0, align 1
  %v4_10009ce0 = zext i8 %v3_10009ce0 to i32
  store i32 %v1_10009ce0, i32* %r31.global-to-local, align 4
  %v1_10009ce4 = add i32 %v0_10009cd4, 8
  store i32 %v1_10009ce4, i32* %r30.global-to-local, align 4
  %v1_10009ce8 = or i32 %v4_10009ce0, 32
  %v3_10009cf0 = icmp eq i32 %v1_10009ce8, 120
  br i1 %v3_10009cf0, label %dec_label_pc_10009cf8, label %dec_label_pc_10009d00

dec_label_pc_10009cf8:                            ; preds = %dec_label_pc_10009ce0
  %v1_10009cf8 = mul i32 %v1_10009ce4, 2
  store i32 %v1_10009cf8, i32* %r30.global-to-local, align 4
  %v1_10009cfc = add i32 %v0_10009cd0, 2
  store i32 %v1_10009cfc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009d00

dec_label_pc_10009d00:                            ; preds = %dec_label_pc_10009ce0, %dec_label_pc_10009cd0, %dec_label_pc_10009cf8
  %v0_10009db415 = phi i32 [ %v1_10009ce0, %dec_label_pc_10009cf8 ], [ %tmp, %dec_label_pc_10009cd0 ], [ %v1_10009ce0, %dec_label_pc_10009ce0 ]
  %v0_10009d00 = phi i32 [ %v1_10009cf8, %dec_label_pc_10009cf8 ], [ %v1_10009cd4, %dec_label_pc_10009cd0 ], [ %v1_10009ce4, %dec_label_pc_10009ce0 ]
  %tmp22 = icmp slt i32 %v0_10009d00, 17
  br i1 %tmp22, label %dec_label_pc_10009d0c, label %dec_label_pc_10009d08

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009d00
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009d0c

dec_label_pc_10009d0c:                            ; preds = %dec_label_pc_10009cc4.dec_label_pc_10009d0c_crit_edge, %dec_label_pc_10009d00, %dec_label_pc_10009d08
  %v0_10009db414 = phi i32 [ %tmp, %dec_label_pc_10009cc4.dec_label_pc_10009d0c_crit_edge ], [ %v0_10009db415, %dec_label_pc_10009d00 ], [ %v0_10009db415, %dec_label_pc_10009d08 ]
  %v1_10009d20 = phi i32 [ %v0_10009d0c.pre, %dec_label_pc_10009cc4.dec_label_pc_10009d0c_crit_edge ], [ %v0_10009d00, %dec_label_pc_10009d00 ], [ 16, %dec_label_pc_10009d08 ]
  %v1_10009d0c = add i32 %v1_10009d20, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10009d14 = icmp ugt i32 %v1_10009d0c, 34
  br i1 %v2_10009d14, label %dec_label_pc_10009dac, label %dec_label_pc_10009d1c

dec_label_pc_10009d1c:                            ; preds = %dec_label_pc_10009d0c
  %v2_10009d20 = udiv i32 -1, %v1_10009d20
  store i32 %v2_10009d20, i32* @r29, align 4
  %v2_10009d24 = mul i32 %v2_10009d20, %v1_10009d20
  %v1_10009d28 = sub i32 -1, %v2_10009d24
  %v1_10009d2c = urem i32 %v1_10009d28, 256
  store i32 %v1_10009d2c, i32* @r27, align 4
  %v0_10009d38.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009d38

dec_label_pc_10009d34:                            ; preds = %dec_label_pc_10009da0, %dec_label_pc_10009d88
  %v1_10009d3c.pre = phi i32 [ %v1_10009d40, %dec_label_pc_10009da0 ], [ %v1_10009d3c.pre.pre, %dec_label_pc_10009d88 ]
  %v0_10009d3c.pre = phi i32 [ %v2_10009da4, %dec_label_pc_10009da0 ], [ %v0_10009d3c.pre.pre, %dec_label_pc_10009d88 ]
  %v0_10009d34 = phi i32 [ %v1_10009d44, %dec_label_pc_10009da0 ], [ %v0_10009d34.pre, %dec_label_pc_10009d88 ]
  br label %dec_label_pc_10009d38

dec_label_pc_10009d38:                            ; preds = %dec_label_pc_10009d1c, %dec_label_pc_10009d34
  %v0_10009db412 = phi i32 [ %v0_10009db414, %dec_label_pc_10009d1c ], [ %v0_10009d34, %dec_label_pc_10009d34 ]
  %v0_10009d44 = phi i32 [ %v0_10009d38.pre, %dec_label_pc_10009d1c ], [ %v0_10009d34, %dec_label_pc_10009d34 ]
  %v1_10009d40 = phi i32 [ %v2_10009d20, %dec_label_pc_10009d1c ], [ %v1_10009d3c.pre, %dec_label_pc_10009d34 ]
  %v0_10009da0 = phi i32 [ 0, %dec_label_pc_10009d1c ], [ %v0_10009d3c.pre, %dec_label_pc_10009d34 ]
  %v1_10009d38 = inttoptr i32 %v0_10009d44 to i8*
  %v2_10009d38 = load i8, i8* %v1_10009d38, align 1
  %v3_10009d38 = zext i8 %v2_10009d38 to i32
  %v3_10009d3c = icmp ugt i32 %v0_10009da0, %v1_10009d40
  %v1_10009d44 = add i32 %v0_10009d44, 1
  store i32 %v1_10009d44, i32* %r31.global-to-local, align 4
  %v1_10009d48 = add nsw i32 %v3_10009d38, -48
  %v1_10009d4c = or i32 %v3_10009d38, 32
  %v1_10009d50 = urem i32 %v1_10009d48, 256
  %tmp23 = icmp ult i32 %v1_10009d50, 10
  br i1 %tmp23, label %dec_label_pc_10009d70, label %dec_label_pc_10009d60

dec_label_pc_10009d60:                            ; preds = %dec_label_pc_10009d38
  %tmp24 = icmp ult i32 %v1_10009d4c, 97
  br i1 %tmp24, label %dec_label_pc_10009d70, label %dec_label_pc_10009d6c

dec_label_pc_10009d6c:                            ; preds = %dec_label_pc_10009d60
  %v1_10009d60 = add nsw i32 %v1_10009d4c, -87
  %v1_10009d6c = urem i32 %v1_10009d60, 256
  br label %dec_label_pc_10009d70

dec_label_pc_10009d70:                            ; preds = %dec_label_pc_10009d60, %dec_label_pc_10009d38, %dec_label_pc_10009d6c
  %v1_10009da4 = phi i32 [ 40, %dec_label_pc_10009d60 ], [ %v1_10009d50, %dec_label_pc_10009d38 ], [ %v1_10009d6c, %dec_label_pc_10009d6c ]
  %v1_10009d70 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009d70 = icmp slt i32 %v1_10009da4, %v1_10009d70
  br i1 %v2_10009d70, label %dec_label_pc_10009d78, label %dec_label_pc_10009dac

dec_label_pc_10009d78:                            ; preds = %dec_label_pc_10009d70
  br i1 %v3_10009d3c, label %dec_label_pc_10009d88, label %dec_label_pc_10009d7c

dec_label_pc_10009d7c:                            ; preds = %dec_label_pc_10009d78
  %v1_10009d7c = load i32, i32* @r27, align 4
  %v0_10009d80.not = icmp ne i32 %v0_10009da0, %v1_10009d40
  %tmp25 = icmp ule i32 %v1_10009da4, %v1_10009d7c
  %or.cond = or i1 %tmp25, %v0_10009d80.not
  br i1 %or.cond, label %dec_label_pc_10009da0, label %dec_label_pc_10009d88

dec_label_pc_10009d88:                            ; preds = %dec_label_pc_10009d7c, %dec_label_pc_10009d78
  %v0_10009d88 = call i32 @function_10008d9c()
  %v0_10009d8c = load i32, i32* @r28, align 4
  %v1_10009d8c = load i32, i32* @r26, align 4
  %v2_10009d8c = and i32 %v1_10009d8c, %v0_10009d8c
  store i32 %v2_10009d8c, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_10009d98 = inttoptr i32 %v0_10009d88 to i32*
  store i32 34, i32* %v2_10009d98, align 4
  %v0_10009d34.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009d3c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10009d3c.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009d34

dec_label_pc_10009da0:                            ; preds = %dec_label_pc_10009d7c
  %v2_10009da0 = mul i32 %v1_10009d70, %v0_10009da0
  %v2_10009da4 = add i32 %v2_10009da0, %v1_10009da4
  store i32 %v2_10009da4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009d34

dec_label_pc_10009dac:                            ; preds = %dec_label_pc_10009d70, %dec_label_pc_10009d0c
  %v0_10009db4 = phi i32 [ %v0_10009db414, %dec_label_pc_10009d0c ], [ %v0_10009db412, %dec_label_pc_10009d70 ]
  %v0_10009dac = load i32, i32* @r25, align 4
  %v3_10009dac = icmp eq i32 %v0_10009dac, 0
  br i1 %v3_10009dac, label %dec_label_pc_10009db8, label %dec_label_pc_10009db4

dec_label_pc_10009db4:                            ; preds = %dec_label_pc_10009dac
  %v2_10009db4 = inttoptr i32 %v0_10009dac to i32*
  store i32 %v0_10009db4, i32* %v2_10009db4, align 4
  br label %dec_label_pc_10009db8

dec_label_pc_10009db8:                            ; preds = %dec_label_pc_10009dac, %dec_label_pc_10009db4
  %v0_10009db8 = load i32, i32* @r26, align 4
  %v3_10009db8 = icmp eq i32 %v0_10009db8, 0
  %v0_10009dbc = load i32, i32* @r28, align 4
  %v1_10009dbc = sub i32 0, %v0_10009dbc
  %tmp40 = lshr i32 %v1_10009dbc, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_10009dfc.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_10009db8, label %dec_label_pc_10009dec, label %dec_label_pc_10009dd4

dec_label_pc_10009dd4:                            ; preds = %dec_label_pc_10009db8
  %v3_10009dd4 = icmp ugt i32 %v0_10009dfc.pre.pre, %tmp41
  br i1 %v3_10009dd4, label %dec_label_pc_10009ddc, label %dec_label_pc_10009dec

dec_label_pc_10009ddc:                            ; preds = %dec_label_pc_10009dd4
  %v0_10009ddc = call i32 @function_10008d9c()
  %v2_10009de4 = inttoptr i32 %v0_10009ddc to i32*
  store i32 34, i32* %v2_10009de4, align 4
  %v0_10009de8 = load i32, i32* @r31, align 4
  store i32 %v0_10009de8, i32* %r8.global-to-local, align 4
  %v0_10009dec.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009dec

dec_label_pc_10009dec:                            ; preds = %dec_label_pc_10009db8, %dec_label_pc_10009dd4, %dec_label_pc_10009ddc
  %v0_10009dfc.pre = phi i32 [ %v0_10009dfc.pre.pre, %dec_label_pc_10009dd4 ], [ %v0_10009de8, %dec_label_pc_10009ddc ], [ %v0_10009dfc.pre.pre, %dec_label_pc_10009db8 ]
  %v0_10009dec = phi i32 [ %v0_10009dbc, %dec_label_pc_10009dd4 ], [ %v0_10009dec.pre, %dec_label_pc_10009ddc ], [ %v0_10009dbc, %dec_label_pc_10009db8 ]
  %v3_10009dec = icmp eq i32 %v0_10009dec, 0
  br i1 %v3_10009dec, label %dec_label_pc_10009df8, label %dec_label_pc_10009df4

dec_label_pc_10009df4:                            ; preds = %dec_label_pc_10009dec
  %v1_10009df4 = sub i32 0, %v0_10009dfc.pre
  store i32 %v1_10009df4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009df8

dec_label_pc_10009df8:                            ; preds = %dec_label_pc_10009dec, %dec_label_pc_10009df4
  %v0_10009dfc = phi i32 [ %v1_10009df4, %dec_label_pc_10009df4 ], [ %v0_10009dfc.pre, %dec_label_pc_10009dec ]
  ret i32 %v0_10009dfc

; uselistorder directives
  uselistorder i32 %v0_10009dfc.pre, { 1, 0 }
  uselistorder i32 %v0_10009dfc.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_10009da4, { 1, 0 }
  uselistorder i32 %v1_10009d50, { 1, 0 }
  uselistorder i32 %v1_10009d4c, { 1, 0 }
  uselistorder i32 %v1_10009d44, { 1, 0 }
  uselistorder i32 %v3_10009d38, { 1, 0 }
  uselistorder i32 %v0_10009da0, { 1, 0, 2 }
  uselistorder i32 %v1_10009d40, { 0, 2, 1 }
  uselistorder i32 %v0_10009d34, { 1, 0 }
  uselistorder i32 %v2_10009d20, { 1, 0, 2 }
  uselistorder i32 %v1_10009cf8, { 1, 0 }
  uselistorder i32 %v1_10009ce4, { 1, 0, 2 }
  uselistorder i8 %v2_10009c8c.lcssa, { 1, 0 }
  uselistorder i32 %v1_10009c88, { 0, 2, 3, 1 }
  uselistorder i32 %v3_10009c80, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 26, { 3, 0, 1, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009df8, { 1, 0 }
  uselistorder label %dec_label_pc_10009dec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009db8, { 1, 0 }
  uselistorder label %dec_label_pc_10009d70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009d38, { 1, 0 }
  uselistorder label %dec_label_pc_10009d0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009d00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009cc4, { 1, 0 }
  uselistorder label %dec_label_pc_10009cc0, { 1, 0 }
  uselistorder label %dec_label_pc_10009c88, { 1, 0 }
}

define i32 @function_10009e10() local_unnamed_addr {
dec_label_pc_10009e10:
  %stack_var_-40 = alloca i32, align 4
  %v2_10009e28 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10009e34 = load i32, i32* @r3, align 4
  store i32 %v0_10009e34, i32* @r31, align 4
  store i32 %v2_10009e28, i32* @r3, align 4
  %v3_10009e40 = call i32 @function_1000a104(i32 %v2_10009e28, i32 ptrtoint ([3 x i8]* @global_var_1000a0fc.252 to i32))
  %v0_10009e48 = call i32 @function_1000a0fc()
  %v3_10009e50 = load i32, i32* @global_var_1001b750.275, align 4
  %v3_10009e54 = icmp eq i32 %v3_10009e50, 0
  br i1 %v3_10009e54, label %dec_label_pc_10009e68, label %dec_label_pc_10009e5c

dec_label_pc_10009e5c:                            ; preds = %dec_label_pc_10009e10
  %v0_10009e5c = load i32, i32* @r31, align 4
  %v3_10009e64 = call i32 @unknown_0(i32 %v0_10009e5c, i32 268566528)
  br label %dec_label_pc_10009e68

dec_label_pc_10009e68:                            ; preds = %dec_label_pc_10009e10, %dec_label_pc_10009e5c
  store i32 %v2_10009e28, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_10009e70 = call i32 @function_1000a104(i32 %v2_10009e28, i32 1)
  store i32 %v2_10009e70, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009e78.277 to i32), i32* @lr, align 4
  %v1_10009e74 = call i32 @function_1000a068(i32 %v2_10009e70)
  %v0_10009e8c = load i32, i32* @r31, align 4
  %v1_10009e90 = call i32 @function_1000a49c(i32 %v0_10009e8c)
  ret i32 %v1_10009e90

; uselistorder directives
  uselistorder i32 %v2_10009e28, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000a104, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_10009e68, { 1, 0 }
}

define i32 @function_10009e94(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009e94:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10009e94 = icmp eq i32 %arg1, 0
  br i1 %v3_10009e94, label %dec_label_pc_1000a048, label %dec_label_pc_10009ec4.lr.ph

dec_label_pc_10009ec4.lr.ph:                      ; preds = %dec_label_pc_10009e94
  %v2_10009eb8 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10009eb8, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10009ec442 = add i32 %v2_10009eb8, 132
  %v3_10009ec443 = inttoptr i32 %v2_10009ec442 to i32*
  store i32 0, i32* %v3_10009ec443, align 4
  %v0_10009ec844 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ec845 = add i32 %v0_10009ec844, -1
  store i32 %v1_10009ec845, i32* %r11.global-to-local, align 4
  %v1_10009ecc46 = mul i32 %v1_10009ec845, 4
  %v1_10009ed047 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009ed048 = add i32 %v1_10009ed047, %v1_10009ecc46
  %v0_10009ed449 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009ed450 = add i32 %v0_10009ed449, -1
  store i32 %v1_10009ed450, i32* %ctr.global-to-local, align 4
  %v2_10009ed451 = icmp eq i32 %v1_10009ed450, 0
  br i1 %v2_10009ed451, label %dec_label_pc_10009ed8, label %dec_label_pc_10009ec4.dec_label_pc_10009ec4_crit_edge

dec_label_pc_10009ec4.dec_label_pc_10009ec4_crit_edge: ; preds = %dec_label_pc_10009ec4.lr.ph, %dec_label_pc_10009ec4.dec_label_pc_10009ec4_crit_edge
  %v2_10009ed052 = phi i32 [ %v2_10009ed0, %dec_label_pc_10009ec4.dec_label_pc_10009ec4_crit_edge ], [ %v2_10009ed048, %dec_label_pc_10009ec4.lr.ph ]
  %v0_10009ec4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009ec4 = add i32 %v2_10009ed052, 8
  %v3_10009ec4 = inttoptr i32 %v2_10009ec4 to i32*
  store i32 %v0_10009ec4.pre, i32* %v3_10009ec4, align 4
  %v0_10009ec8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ec8 = add i32 %v0_10009ec8, -1
  store i32 %v1_10009ec8, i32* %r11.global-to-local, align 4
  %v1_10009ecc = mul i32 %v1_10009ec8, 4
  %v1_10009ed0 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009ed0 = add i32 %v1_10009ed0, %v1_10009ecc
  %v0_10009ed4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009ed4 = add i32 %v0_10009ed4, -1
  store i32 %v1_10009ed4, i32* %ctr.global-to-local, align 4
  %v2_10009ed4 = icmp eq i32 %v1_10009ed4, 0
  br i1 %v2_10009ed4, label %dec_label_pc_10009ed8, label %dec_label_pc_10009ec4.dec_label_pc_10009ec4_crit_edge

dec_label_pc_10009ed8:                            ; preds = %dec_label_pc_10009ec4.dec_label_pc_10009ec4_crit_edge, %dec_label_pc_10009ec4.lr.ph
  %v0_10009eec.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ed8 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10009ed8, i32* @r29, align 4
  store i32 %v2_10009ed8, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_10009eec.pre, i32* %stack_var_-440, align 4
  %v0_10009ef0 = call i32 @function_10009550()
  store i32 %v0_10009ef0, i32* %r3.global-to-local, align 4
  %v1_10009ef4 = icmp slt i32 %v0_10009ef0, 0
  br i1 %v1_10009ef4, label %dec_label_pc_1000a050, label %dec_label_pc_10009efc

dec_label_pc_10009efc:                            ; preds = %dec_label_pc_10009ed8
  %v2_10009efc = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10009efc, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268476176, i32* @lr, align 4
  %v3_10009f0c = call i32 @function_100089d8(i32 0, i32 %v2_10009ed8, i32 %v2_10009efc)
  store i32 %v3_10009f0c, i32* %r3.global-to-local, align 4
  %v3_10009f10 = icmp eq i32 %v3_10009f0c, 0
  br i1 %v3_10009f10, label %dec_label_pc_10009f18, label %dec_label_pc_1000a050

dec_label_pc_10009f18:                            ; preds = %dec_label_pc_10009efc
  store i32 %v2_10009efc, i32* %r3.global-to-local, align 4
  %v2_10009f20 = call i32 @function_10009528(i32 %v2_10009efc, i32 17)
  store i32 %v2_10009f20, i32* %r3.global-to-local, align 4
  %v3_10009f24 = icmp eq i32 %v2_10009f20, 0
  br i1 %v3_10009f24, label %dec_label_pc_10009f44.lr.ph, label %dec_label_pc_1000a010

dec_label_pc_10009f44.lr.ph:                      ; preds = %dec_label_pc_10009f18
  store i32 %v2_10009eb8, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10009ec443, align 4
  %v0_10009f4833 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009f4834 = add i32 %v0_10009f4833, -1
  store i32 %v1_10009f4834, i32* %r11.global-to-local, align 4
  %v1_10009f4c35 = mul i32 %v1_10009f4834, 4
  %v1_10009f5036 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009f5037 = add i32 %v1_10009f5036, %v1_10009f4c35
  %v0_10009f5438 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f5439 = add i32 %v0_10009f5438, -1
  store i32 %v1_10009f5439, i32* %ctr.global-to-local, align 4
  %v2_10009f5440 = icmp eq i32 %v1_10009f5439, 0
  br i1 %v2_10009f5440, label %dec_label_pc_10009f58, label %dec_label_pc_10009f44.dec_label_pc_10009f44_crit_edge

dec_label_pc_10009f44.dec_label_pc_10009f44_crit_edge: ; preds = %dec_label_pc_10009f44.lr.ph, %dec_label_pc_10009f44.dec_label_pc_10009f44_crit_edge
  %v2_10009f5041 = phi i32 [ %v2_10009f50, %dec_label_pc_10009f44.dec_label_pc_10009f44_crit_edge ], [ %v2_10009f5037, %dec_label_pc_10009f44.lr.ph ]
  %v0_10009f44.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009f44 = add i32 %v2_10009f5041, 8
  %v3_10009f44 = inttoptr i32 %v2_10009f44 to i32*
  store i32 %v0_10009f44.pre, i32* %v3_10009f44, align 4
  %v0_10009f48 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009f48 = add i32 %v0_10009f48, -1
  store i32 %v1_10009f48, i32* %r11.global-to-local, align 4
  %v1_10009f4c = mul i32 %v1_10009f48, 4
  %v1_10009f50 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009f50 = add i32 %v1_10009f50, %v1_10009f4c
  %v0_10009f54 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f54 = add i32 %v0_10009f54, -1
  store i32 %v1_10009f54, i32* %ctr.global-to-local, align 4
  %v2_10009f54 = icmp eq i32 %v1_10009f54, 0
  br i1 %v2_10009f54, label %dec_label_pc_10009f58, label %dec_label_pc_10009f44.dec_label_pc_10009f44_crit_edge

dec_label_pc_10009f58:                            ; preds = %dec_label_pc_10009f44.dec_label_pc_10009f44_crit_edge, %dec_label_pc_10009f44.lr.ph
  store i32 %v2_10009ed8, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_10009f60 = call i32 @function_10009550()
  store i32 %v0_10009f60, i32* %r3.global-to-local, align 4
  %v1_10009f64 = icmp slt i32 %v0_10009f60, 0
  br i1 %v1_10009f64, label %dec_label_pc_1000a050, label %dec_label_pc_10009f6c

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f58
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10009f74 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268476284, i32* @lr, align 4
  %v4_10009f78 = call i32 @function_1000ace0(i32 17, i32* null, i32 %v2_10009f74)
  store i32 %v4_10009f78, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_10009f78, -1
  br i1 %tmp30, label %dec_label_pc_10009fac, label %dec_label_pc_10009f84

dec_label_pc_10009f84:                            ; preds = %dec_label_pc_10009f6c
  %v0_10009f84 = call i32 @function_10008d9c()
  store i32 %v0_10009f84, i32* %r3.global-to-local, align 4
  %v1_10009f8c = inttoptr i32 %v0_10009f84 to i32*
  %v2_10009f8c = load i32, i32* %v1_10009f8c, align 4
  store i32 %v2_10009f8c, i32* @r28, align 4
  store i32 %v0_10009f84, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268476320, i32* @lr, align 4
  %v3_10009f9c = call i32 @function_100089d8(i32 2, i32 %v2_10009efc, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10009fa4 = load i32, i32* @r28, align 4
  %v1_10009fa4 = load i32, i32* @r29, align 4
  %v2_10009fa4 = inttoptr i32 %v1_10009fa4 to i32*
  store i32 %v0_10009fa4, i32* %v2_10009fa4, align 4
  %v0_1000a064.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a054

dec_label_pc_10009fac:                            ; preds = %dec_label_pc_10009f6c
  %v3_10009fac = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_10009efc, i32* @r28, align 4
  %v3_10009fb8 = icmp eq i32 %v3_10009fac, 1
  br i1 %v3_10009fb8, label %dec_label_pc_10009fc0, label %dec_label_pc_10009ff4

dec_label_pc_10009fc0:                            ; preds = %dec_label_pc_10009fac
  store i32 %v2_10009eb8, i32* %r3.global-to-local, align 4
  store i32 268476364, i32* @lr, align 4
  %v2_10009fc8 = call i32 @function_1000a8d4(i32 %v2_10009eb8, i32 %v2_10009eb8)
  store i32 %v2_10009fc8, i32* %r3.global-to-local, align 4
  store i32 %v2_10009fc8, i32* @r31, align 4
  %v0_10009fd0 = call i32 @function_10008d9c()
  store i32 %v0_10009fd0, i32* %r3.global-to-local, align 4
  store i32 %v0_10009fd0, i32* @r29, align 4
  %v1_10009fe0 = inttoptr i32 %v0_10009fd0 to i32*
  %v2_10009fe0 = load i32, i32* %v1_10009fe0, align 4
  store i32 %v2_10009fe0, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268476396, i32* @lr, align 4
  %v3_10009fe8 = call i32 @function_100089d8(i32 2, i32 %v2_10009efc, i32 0)
  store i32 %v3_10009fe8, i32* %r3.global-to-local, align 4
  %v0_10009fec = load i32, i32* @r28, align 4
  %v1_10009fec = load i32, i32* @r29, align 4
  %v2_10009fec = inttoptr i32 %v1_10009fec to i32*
  store i32 %v0_10009fec, i32* %v2_10009fec, align 4
  %v0_1000a01c.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a01c

dec_label_pc_10009ff4:                            ; preds = %dec_label_pc_10009fac
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268476420, i32* @lr, align 4
  %v3_1000a000 = call i32 @function_100089d8(i32 2, i32 %v2_10009efc, i32 0)
  br label %dec_label_pc_1000a010

dec_label_pc_1000a010:                            ; preds = %dec_label_pc_10009f18, %dec_label_pc_10009ff4
  store i32 %v2_10009eb8, i32* %r3.global-to-local, align 4
  store i32 268476440, i32* @lr, align 4
  %v2_1000a014 = call i32 @function_1000a8d4(i32 %v2_10009eb8, i32 %v2_10009eb8)
  store i32 %v2_1000a014, i32* %r3.global-to-local, align 4
  store i32 %v2_1000a014, i32* @r31, align 4
  br label %dec_label_pc_1000a01c

dec_label_pc_1000a01c:                            ; preds = %dec_label_pc_10009fc0, %dec_label_pc_1000a010
  %v0_1000a01c = phi i32 [ %v0_1000a01c.pr, %dec_label_pc_10009fc0 ], [ %v2_1000a014, %dec_label_pc_1000a010 ]
  %v3_1000a01c = icmp eq i32 %v0_1000a01c, 0
  br i1 %v3_1000a01c, label %dec_label_pc_1000a048, label %dec_label_pc_1000a024

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_1000a01c
  %v3_1000a034 = load i32, i32* %stack_var_-440, align 4
  %v0_1000a038 = call i32 @__asm_mfcr()
  store i32 %v0_1000a038, i32* %r3.global-to-local, align 4
  %v1_1000a03c = call i32 @__asm_rlwinm(i32 %v0_1000a038, i32 30, i32 31, i32 31)
  %v2_1000a040 = add i32 %v3_1000a034, %v1_1000a03c
  store i32 %v2_1000a040, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a054

dec_label_pc_1000a048:                            ; preds = %dec_label_pc_1000a01c, %dec_label_pc_10009e94
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a054

dec_label_pc_1000a050:                            ; preds = %dec_label_pc_10009efc, %dec_label_pc_10009ed8, %dec_label_pc_10009f58
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a054

dec_label_pc_1000a054:                            ; preds = %dec_label_pc_1000a048, %dec_label_pc_1000a024, %dec_label_pc_10009f84, %dec_label_pc_1000a050
  %v0_1000a064 = phi i32 [ 0, %dec_label_pc_1000a048 ], [ %v2_1000a040, %dec_label_pc_1000a024 ], [ %v0_1000a064.pre, %dec_label_pc_10009f84 ], [ -1, %dec_label_pc_1000a050 ]
  ret i32 %v0_1000a064

; uselistorder directives
  uselistorder i32 %v1_10009f54, { 1, 0 }
  uselistorder i32 %v2_10009efc, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_10009ed4, { 1, 0 }
  uselistorder i32 %v2_10009eb8, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 2, 7, 0, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 21, 22, 3, 24, 23, 18, 19, 20, 1 }
  uselistorder i32* %r11.global-to-local, { 9, 8, 5, 0, 1, 7, 6, 4, 2, 3 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 9, 8, 5, 0, 1, 7, 6, 4, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000a8d4, { 1, 0 }
  uselistorder i32 17, { 2, 33, 34, 3, 35, 4, 17, 18, 5, 6, 19, 20, 21, 7, 22, 8, 9, 10, 11, 23, 0, 24, 1, 25, 26, 12, 27, 13, 28, 29, 30, 31, 32, 14, 15, 16 }
  uselistorder label %dec_label_pc_1000a054, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a050, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a01c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a010, { 1, 0 }
  uselistorder label %dec_label_pc_10009f44.dec_label_pc_10009f44_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009ec4.dec_label_pc_10009ec4_crit_edge, { 1, 0 }
}

define i32 @function_1000a068(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a0b8:
  %v3_1000a0bc = load i32, i32* @global_var_1001b760.279, align 4
  %v3_1000a0c0 = icmp eq i32 %v3_1000a0bc, 0
  br i1 %v3_1000a0c0, label %dec_label_pc_1000a0d0, label %dec_label_pc_1000a0c8

dec_label_pc_1000a0c8:                            ; preds = %dec_label_pc_1000a0b8
  %v2_1000a0cc = load i32, i32* @r4, align 4
  %v3_1000a0cc = call i32 @unknown_0(i32 268566528, i32 %v2_1000a0cc)
  store i32 %v3_1000a0cc, i32* @r3, align 4
  br label %dec_label_pc_1000a0d0

dec_label_pc_1000a0d0:                            ; preds = %dec_label_pc_1000a0b8, %dec_label_pc_1000a0c8
  %v3_1000a0d4 = load i32, i32* @global_var_1001b764.280, align 4
  %v3_1000a0d8 = icmp eq i32 %v3_1000a0d4, 0
  br i1 %v3_1000a0d8, label %dec_label_pc_1000a0d0.dec_label_pc_1000a0e8_crit_edge, label %dec_label_pc_1000a0e0

dec_label_pc_1000a0d0.dec_label_pc_1000a0e8_crit_edge: ; preds = %dec_label_pc_1000a0d0
  %v0_1000a0f8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a0e8

dec_label_pc_1000a0e0:                            ; preds = %dec_label_pc_1000a0d0
  %v2_1000a0e4 = load i32, i32* @r4, align 4
  %v3_1000a0e4 = call i32 @unknown_0(i32 268566528, i32 %v2_1000a0e4)
  br label %dec_label_pc_1000a0e8

dec_label_pc_1000a0e8:                            ; preds = %dec_label_pc_1000a0d0.dec_label_pc_1000a0e8_crit_edge, %dec_label_pc_1000a0e0
  %v0_1000a0f8 = phi i32 [ %v0_1000a0f8.pre, %dec_label_pc_1000a0d0.dec_label_pc_1000a0e8_crit_edge ], [ %v3_1000a0e4, %dec_label_pc_1000a0e0 ]
  ret i32 %v0_1000a0f8

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a0e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0d0, { 1, 0 }
}

define i32 @function_1000a0fc() local_unnamed_addr {
dec_label_pc_1000a0fc:
  ret i32 0
}

define i32 @function_1000a104(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a104:
  %v0_1000a104 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a104
}

define i32 @function_1000a108(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a108:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268476716, i32* @lr, align 4
  %v1_1000a128 = call i32 @function_10008598(i32 1)
  %v3_1000a12c = icmp eq i32 %v1_1000a128, -1
  br i1 %v3_1000a12c, label %dec_label_pc_1000a134, label %dec_label_pc_1000a154

dec_label_pc_1000a134:                            ; preds = %dec_label_pc_1000a108
  %v0_1000a138 = load i32, i32* @r30, align 4
  store i32 268476744, i32* @lr, align 4
  %v3_1000a144 = call i32 @function_100087e8(i32 ptrtoint ([10 x i8]* @global_var_1000b284.281 to i32), i32 %v0_1000a138)
  %v1_1000a148 = load i32, i32* @r31, align 4
  %v4_1000a148 = icmp eq i32 %v3_1000a144, %v1_1000a148
  br i1 %v4_1000a148, label %dec_label_pc_1000a154, label %dec_label_pc_1000a150

dec_label_pc_1000a150:                            ; preds = %dec_label_pc_1000a134
  %v1_1000a150 = call i32 @function_1000ada4(i32 %v3_1000a144)
  br label %dec_label_pc_1000a154

dec_label_pc_1000a154:                            ; preds = %dec_label_pc_1000a108, %dec_label_pc_1000a134, %dec_label_pc_1000a150
  %v0_1000a164 = phi i32 [ %v1_1000a128, %dec_label_pc_1000a108 ], [ %v3_1000a144, %dec_label_pc_1000a134 ], [ %v1_1000a150, %dec_label_pc_1000a150 ]
  ret i32 %v0_1000a164

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100087e8, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_10008598, { 0, 7, 2, 1, 13, 12, 11, 10, 9, 8, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000a154, { 2, 1, 0 }
}

define i32 @function_1000a168(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a168:
  %v3_1000a188 = load i32, i32* @global_var_1001b768.282, align 4
  %v3_1000a18c = icmp eq i32 %v3_1000a188, 0
  br i1 %v3_1000a18c, label %dec_label_pc_1000a1b0, label %dec_label_pc_1000a1d4

dec_label_pc_1000a1b0:                            ; preds = %dec_label_pc_1000a168
  store i32 1, i32* @global_var_1001b768.282, align 4
  store i32 4096, i32* @global_var_1001b75c.264, align 4
  br label %dec_label_pc_1000a1d4

dec_label_pc_1000a1d4:                            ; preds = %dec_label_pc_1000a1b0, %dec_label_pc_1000a168
  %v0_1000a1e4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a1e4
}

define i32 @function_1000a1e8(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a1e8:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000a200 = mul i32 %arg2, 4
  %v2_1000a204 = add i32 %tmp, %v1_1000a200
  %v0_1000a208 = load i32, i32* @r9, align 4
  store i32 %v0_1000a208, i32* @global_var_1001b754.284, align 4
  %v1_1000a20c = add i32 %v2_1000a204, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000a20c, i32* @global_var_1001b758.285, align 4
  store i32 %arg6, i32* @global_var_1001b764.280, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000a22c = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000a234 = icmp eq i32 %v1_1000a20c, %v2_1000a22c
  br i1 %v4_1000a234, label %dec_label_pc_1000a23c, label %dec_label_pc_1000a240

dec_label_pc_1000a23c:                            ; preds = %dec_label_pc_1000a1e8
  store i32 %v2_1000a204, i32* @global_var_1001b758.285, align 4
  br label %dec_label_pc_1000a240

dec_label_pc_1000a240:                            ; preds = %dec_label_pc_1000a1e8, %dec_label_pc_1000a23c
  %v2_1000a240 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268477008, i32* @lr, align 4
  %v3_1000a24c = call i32 @function_10008e84(i32 %v2_1000a240, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001b758.285, align 4
  br label %dec_label_pc_1000a25c

dec_label_pc_1000a25c:                            ; preds = %dec_label_pc_1000a25c, %dec_label_pc_1000a240
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000a240 ], [ %v1_1000a260, %dec_label_pc_1000a25c ]
  %v1_1000a25c = inttoptr i32 %storemerge to i32*
  %v2_1000a25c = load i32, i32* %v1_1000a25c, align 4
  %v1_1000a260 = add i32 %storemerge, 4
  %v3_1000a264 = icmp eq i32 %v2_1000a25c, 0
  br i1 %v3_1000a264, label %dec_label_pc_1000a26c, label %dec_label_pc_1000a25c

dec_label_pc_1000a26c:                            ; preds = %dec_label_pc_1000a25c
  store i32 %v1_1000a260, i32* %r29.global-to-local, align 4
  %v1_1000a29812 = inttoptr i32 %v1_1000a260 to i32*
  %v2_1000a29813 = load i32, i32* %v1_1000a29812, align 4
  %v3_1000a29c16 = icmp eq i32 %v2_1000a29813, 0
  br i1 %v3_1000a29c16, label %dec_label_pc_1000a2a4, label %dec_label_pc_1000a274

dec_label_pc_1000a274:                            ; preds = %dec_label_pc_1000a26c, %dec_label_pc_1000a294
  %v0_1000a288 = phi i32 [ %v1_1000a294, %dec_label_pc_1000a294 ], [ %v1_1000a260, %dec_label_pc_1000a26c ]
  %v0_1000a27c = phi i32 [ %v2_1000a298, %dec_label_pc_1000a294 ], [ %v2_1000a29813, %dec_label_pc_1000a26c ]
  %v2_1000a274 = icmp ugt i32 %v0_1000a27c, 14
  br i1 %v2_1000a274, label %dec_label_pc_1000a294, label %dec_label_pc_1000a27c

dec_label_pc_1000a27c:                            ; preds = %dec_label_pc_1000a274
  %v1_1000a27c = mul i32 %v0_1000a27c, 8
  %v2_1000a284 = add i32 %v1_1000a27c, %v2_1000a240
  store i32 %v2_1000a284, i32* @r3, align 4
  store i32 %v0_1000a288, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268477076, i32* @lr, align 4
  %v0_1000a290 = call i32 @function_1000ab50()
  %v0_1000a294.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a294

dec_label_pc_1000a294:                            ; preds = %dec_label_pc_1000a274, %dec_label_pc_1000a27c
  %v0_1000a294 = phi i32 [ %v0_1000a288, %dec_label_pc_1000a274 ], [ %v0_1000a294.pre, %dec_label_pc_1000a27c ]
  %v1_1000a294 = add i32 %v0_1000a294, 8
  store i32 %v1_1000a294, i32* %r29.global-to-local, align 4
  %v1_1000a298 = inttoptr i32 %v1_1000a294 to i32*
  %v2_1000a298 = load i32, i32* %v1_1000a298, align 4
  %v3_1000a29c = icmp eq i32 %v2_1000a298, 0
  br i1 %v3_1000a29c, label %dec_label_pc_1000a2a4, label %dec_label_pc_1000a274

dec_label_pc_1000a2a4:                            ; preds = %dec_label_pc_1000a294, %dec_label_pc_1000a26c
  %v1_1000a2a8 = call i32 @function_1000aef4(i32 %v2_1000a240)
  store i32 %v1_1000a2a8, i32* @r3, align 4
  store i32 268477104, i32* @lr, align 4
  %v1_1000a2ac = call i32 @function_1000a168(i32 %v1_1000a2a8)
  %v3_1000a2b4 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000a2b4, label %dec_label_pc_1000a2bc, label %dec_label_pc_1000a2c0

dec_label_pc_1000a2bc:                            ; preds = %dec_label_pc_1000a2a4
  br label %dec_label_pc_1000a2c0

dec_label_pc_1000a2c0:                            ; preds = %dec_label_pc_1000a2a4, %dec_label_pc_1000a2bc
  %v0_1000a2c8 = phi i32 [ %tmp27, %dec_label_pc_1000a2a4 ], [ 4096, %dec_label_pc_1000a2bc ]
  store i32 %v0_1000a2c8, i32* @global_var_1001b75c.264, align 4
  %v3_1000a2cc = icmp eq i32 %tmp26, -1
  br i1 %v3_1000a2cc, label %dec_label_pc_1000a2d4, label %dec_label_pc_1000a308

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a2c0
  store i32 268477144, i32* @lr, align 4
  %v1_1000a2d4 = call i32 @function_1000a80c(i32 268566528)
  store i32 %v1_1000a2d4, i32* %r29.global-to-local, align 4
  store i32 268477152, i32* @lr, align 4
  %v0_1000a2dc = call i32 @function_1000a77c()
  %v4_1000a2e0 = icmp eq i32 %v1_1000a2d4, %v0_1000a2dc
  br i1 %v4_1000a2e0, label %dec_label_pc_1000a2e8, label %dec_label_pc_1000a324

dec_label_pc_1000a2e8:                            ; preds = %dec_label_pc_1000a2d4
  store i32 268477164, i32* @lr, align 4
  %v1_1000a2e8 = call i32 @function_1000a7c4(i32 %v0_1000a2dc)
  store i32 %v1_1000a2e8, i32* %r29.global-to-local, align 4
  store i32 268477172, i32* @lr, align 4
  %v0_1000a2f0 = call i32 @function_1000a734()
  %v4_1000a2f4 = icmp eq i32 %v1_1000a2e8, %v0_1000a2f0
  br i1 %v4_1000a2f4, label %dec_label_pc_1000a2fc.thread, label %dec_label_pc_1000a324

dec_label_pc_1000a2fc.thread:                     ; preds = %dec_label_pc_1000a2e8
  br label %dec_label_pc_1000a354

dec_label_pc_1000a308:                            ; preds = %dec_label_pc_1000a2c0
  %v4_1000a30c = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000a30c, label %dec_label_pc_1000a314, label %dec_label_pc_1000a324

dec_label_pc_1000a314:                            ; preds = %dec_label_pc_1000a308
  br label %dec_label_pc_1000a324

dec_label_pc_1000a324:                            ; preds = %dec_label_pc_1000a314, %dec_label_pc_1000a308, %dec_label_pc_1000a2e8, %dec_label_pc_1000a2d4
  store i32 268477236, i32* @lr, align 4
  %v2_1000a330 = call i32 @function_1000a108(i32 0, i32 32768)
  store i32 268477252, i32* @lr, align 4
  %v2_1000a340 = call i32 @function_1000a108(i32 1, i32 32770)
  store i32 268477268, i32* @lr, align 4
  %v2_1000a350 = call i32 @function_1000a108(i32 2, i32 32770)
  br label %dec_label_pc_1000a354

dec_label_pc_1000a354:                            ; preds = %dec_label_pc_1000a2fc.thread, %dec_label_pc_1000a324
  %v0_1000a360 = load i32, i32* @r30, align 4
  %v1_1000a360 = inttoptr i32 %v0_1000a360 to i32*
  %v2_1000a360 = load i32, i32* %v1_1000a360, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000a360, i32* inttoptr (i32 268547844 to i32*), align 4
  %v0_1000a380 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000a380, i32* @global_var_1001b760.279, align 4
  br i1 false, label %dec_label_pc_1000a388, label %dec_label_pc_1000a400

dec_label_pc_1000a388:                            ; preds = %dec_label_pc_1000a354, %dec_label_pc_1000a388
  br i1 undef, label %dec_label_pc_1000a388, label %dec_label_pc_1000a400

dec_label_pc_1000a400:                            ; preds = %dec_label_pc_1000a388, %dec_label_pc_1000a354
  %v0_1000a3ac = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a3ac)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000a410 = call i32 @function_10008d9c()
  %v2_1000a418 = inttoptr i32 %v0_1000a410 to i32*
  store i32 0, i32* %v2_1000a418, align 4
  %v0_1000a444 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a444)
  %v0_1000a450 = call i32 @function_10009e10()
  ret i32 %v0_1000a450

; uselistorder directives
  uselistorder i32 %v2_1000a298, { 1, 0 }
  uselistorder i32 %v1_1000a294, { 2, 1, 0 }
  uselistorder i32 %v1_1000a260, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000a240, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_10009e10, { 0, 3, 2, 1 }
  uselistorder i1 false, { 0, 5, 6, 7, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 (i32, i32)* @function_1000a108, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 40, 0, 5, 6, 21, 7, 8, 22, 23, 9, 10, 24, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 1, 27, 28, 29, 2, 30, 31, 32, 33, 34, 3, 35, 36, 37, 38, 39, 4 }
  uselistorder i32* @r9, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_1000a388, { 1, 0 }
  uselistorder label %dec_label_pc_1000a354, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a294, { 1, 0 }
  uselistorder label %dec_label_pc_1000a274, { 1, 0 }
  uselistorder label %dec_label_pc_1000a240, { 1, 0 }
}

define i32 @function_1000a454(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a454:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a46c = call i32 @__asm_mfcr()
  %v1_1000a470 = and i32 %v0_1000a46c, 268435456
  %v3_1000a470 = icmp eq i32 %v1_1000a470, 0
  store i32 %v0_1000a46c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a470, label %dec_label_pc_1000a488, label %dec_label_pc_1000a47c

dec_label_pc_1000a47c:                            ; preds = %dec_label_pc_1000a454
  %v0_1000a47c = call i32 @function_10008d9c()
  %v0_1000a480 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a480 = inttoptr i32 %v0_1000a47c to i32*
  store i32 %v0_1000a480, i32* %v2_1000a480, align 4
  br label %dec_label_pc_1000a488

dec_label_pc_1000a488:                            ; preds = %dec_label_pc_1000a454, %dec_label_pc_1000a47c
  %v0_1000a498 = phi i32 [ %v0_1000a46c, %dec_label_pc_1000a454 ], [ -1, %dec_label_pc_1000a47c ]
  ret i32 %v0_1000a498

; uselistorder directives
  uselistorder label %dec_label_pc_1000a488, { 1, 0 }
}

define i32 @function_1000a49c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a49c:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000a4b0

dec_label_pc_1000a4b0:                            ; preds = %dec_label_pc_1000a4b0.backedge, %dec_label_pc_1000a49c
  %v0_1000a4bc = call i32 @__asm_mfcr()
  %v1_1000a4c0 = and i32 %v0_1000a4bc, 268435456
  %v3_1000a4c0 = icmp eq i32 %v1_1000a4c0, 0
  store i32 %v0_1000a4bc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a4c0, label %dec_label_pc_1000a4b0.backedge, label %dec_label_pc_1000a4cc

dec_label_pc_1000a4cc:                            ; preds = %dec_label_pc_1000a4b0
  %v0_1000a4cc = call i32 @function_10008d9c()
  %v0_1000a4d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a4d0 = inttoptr i32 %v0_1000a4cc to i32*
  store i32 %v0_1000a4d0, i32* %v2_1000a4d0, align 4
  br label %dec_label_pc_1000a4b0.backedge

dec_label_pc_1000a4b0.backedge:                   ; preds = %dec_label_pc_1000a4cc, %dec_label_pc_1000a4b0
  br label %dec_label_pc_1000a4b0
}

define i32 @function_1000a4d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a4d8:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000a4e4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000a4e4, i32* @r29, align 4
  %v0_1000a4ec = load i32, i32* @r4, align 4
  store i32 %v0_1000a4ec, i32* @r30, align 4
  %v0_1000a4fc = call i32 @__asm_mfcr()
  %v1_1000a500 = and i32 %v0_1000a4fc, 268435456
  %v3_1000a500 = icmp eq i32 %v1_1000a500, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000a4fc, i32* @r31, align 4
  br i1 %v3_1000a500, label %dec_label_pc_1000a51c, label %dec_label_pc_1000a510

dec_label_pc_1000a510:                            ; preds = %dec_label_pc_1000a4d8
  %v0_1000a510 = call i32 @function_10008d9c()
  %v0_1000a514 = load i32, i32* @r31, align 4
  %v2_1000a514 = inttoptr i32 %v0_1000a510 to i32*
  store i32 %v0_1000a514, i32* %v2_1000a514, align 4
  br label %dec_label_pc_1000a534

dec_label_pc_1000a51c:                            ; preds = %dec_label_pc_1000a4d8
  %v3_1000a51c = icmp eq i32 %v0_1000a4fc, 0
  store i32 %v0_1000a4fc, i32* @r28, align 4
  br i1 %v3_1000a51c, label %dec_label_pc_1000a530, label %dec_label_pc_1000a534

dec_label_pc_1000a530:                            ; preds = %dec_label_pc_1000a51c
  %v0_1000a524 = load i32, i32* @r30, align 4
  store i32 268477748, i32* @lr, align 4
  %v4_1000a530 = call i32 @function_1000aaa0(i32* nonnull %stack_var_-104, i32 %v0_1000a524, i32 0)
  br label %dec_label_pc_1000a534

dec_label_pc_1000a534:                            ; preds = %dec_label_pc_1000a51c, %dec_label_pc_1000a510, %dec_label_pc_1000a530
  %v0_1000a538 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a538

; uselistorder directives
  uselistorder i32 %v0_1000a4fc, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a534, { 2, 0, 1 }
}

define i32 @function_1000a54c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a54c:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000a560 = call i32 @function_1000a5dc()
  store i32 %v0_1000a560, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000a560, 1
  br i1 %tmp18, label %dec_label_pc_1000a5c4, label %dec_label_pc_1000a56c

dec_label_pc_1000a56c:                            ; preds = %dec_label_pc_1000a54c
  %v0_1000a56c = load i32, i32* @r31, align 4
  %v2_1000a56c = add i32 %v0_1000a56c, %v0_1000a560
  store i32 %v2_1000a56c, i32* %r29.global-to-local, align 4
  %v2_1000a5b43 = icmp ult i32 %v0_1000a56c, %v2_1000a56c
  br i1 %v2_1000a5b43, label %dec_label_pc_1000a574, label %dec_label_pc_1000a5c4

dec_label_pc_1000a574:                            ; preds = %dec_label_pc_1000a56c, %dec_label_pc_1000a574
  %v1_1000a584 = phi i32 [ %v2_1000a5b0, %dec_label_pc_1000a574 ], [ %v0_1000a56c, %dec_label_pc_1000a56c ]
  %v1_1000a5b810.in = phi i32 [ %v2_1000a5b0, %dec_label_pc_1000a574 ], [ %v0_1000a56c, %dec_label_pc_1000a56c ]
  %v1_1000a5bc11.in = phi i32 [ %v2_1000a5b0, %dec_label_pc_1000a574 ], [ %v0_1000a56c, %dec_label_pc_1000a56c ]
  %v1_1000a5b810 = add i32 %v1_1000a5b810.in, 11
  %v1_1000a5bc11 = add i32 %v1_1000a5bc11.in, 19
  %v1_1000a574 = add i32 %v1_1000a584, 4
  %v2_1000a574 = inttoptr i32 %v1_1000a574 to i32*
  %v3_1000a574 = load i32, i32* %v2_1000a574, align 4
  store i32 %v3_1000a574, i32* %r11.global-to-local, align 4
  %v1_1000a578 = add i32 %v1_1000a584, 12
  %v2_1000a578 = inttoptr i32 %v1_1000a578 to i32*
  %v3_1000a578 = load i32, i32* %v2_1000a578, align 4
  %v1_1000a57c = add i32 %v1_1000a584, 16
  %v2_1000a57c = inttoptr i32 %v1_1000a57c to i16*
  %v3_1000a57c = load i16, i16* %v2_1000a57c, align 2
  %v4_1000a57c = zext i16 %v3_1000a57c to i32
  store i32 %v4_1000a57c, i32* %r5.global-to-local, align 4
  %v1_1000a580 = add i32 %v1_1000a584, 18
  %v2_1000a580 = inttoptr i32 %v1_1000a580 to i8*
  %v3_1000a580 = load i8, i8* %v2_1000a580, align 1
  %v4_1000a580 = zext i8 %v3_1000a580 to i32
  store i32 %v4_1000a580, i32* %r9.global-to-local, align 4
  store i32 %v3_1000a578, i32* %v2_1000a574, align 4
  %v0_1000a588 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a588 = load i32, i32* @r31, align 4
  %v2_1000a588 = inttoptr i32 %v1_1000a588 to i32*
  store i32 %v0_1000a588, i32* %v2_1000a588, align 4
  %v0_1000a58c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a58c = trunc i32 %v0_1000a58c to i8
  %v2_1000a58c = load i32, i32* @r31, align 4
  %v3_1000a58c = add i32 %v2_1000a58c, 10
  %v4_1000a58c = inttoptr i32 %v3_1000a58c to i8*
  store i8 %v1_1000a58c, i8* %v4_1000a58c, align 1
  %v0_1000a590 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a590 = trunc i32 %v0_1000a590 to i16
  %v2_1000a590 = load i32, i32* @r31, align 4
  %v3_1000a590 = add i32 %v2_1000a590, 8
  %v4_1000a590 = inttoptr i32 %v3_1000a590 to i16*
  store i16 %v1_1000a590, i16* %v4_1000a590, align 2
  %v0_1000a594 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a594 = add i32 %v0_1000a594, -19
  store i32 %v1_1000a594, i32* %r5.global-to-local, align 4
  store i32 268477852, i32* @lr, align 4
  %v3_1000a598 = call i32 @function_10008de0(i32 %v1_1000a5b810, i32 %v1_1000a5bc11, i32 %v1_1000a594)
  %v0_1000a59c = load i32, i32* @r31, align 4
  %v1_1000a59c = add i32 %v0_1000a59c, 8
  %v2_1000a59c = inttoptr i32 %v1_1000a59c to i16*
  %v3_1000a59c = load i16, i16* %v2_1000a59c, align 2
  %v4_1000a59c = zext i16 %v3_1000a59c to i32
  store i32 %v4_1000a59c, i32* %r5.global-to-local, align 4
  store i32 268477868, i32* @lr, align 4
  %v3_1000a5a8 = call i32 @function_10008de0(i32 %v0_1000a59c, i32 %v0_1000a59c, i32 %v4_1000a59c)
  %v0_1000a5ac = load i32, i32* @r31, align 4
  %v1_1000a5ac = add i32 %v0_1000a5ac, 8
  %v2_1000a5ac = inttoptr i32 %v1_1000a5ac to i16*
  %v3_1000a5ac = load i16, i16* %v2_1000a5ac, align 2
  %v4_1000a5ac = zext i16 %v3_1000a5ac to i32
  %v2_1000a5b0 = add i32 %v4_1000a5ac, %v0_1000a5ac
  store i32 %v2_1000a5b0, i32* @r31, align 4
  %v1_1000a5b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a5b4 = icmp ult i32 %v2_1000a5b0, %v1_1000a5b4
  br i1 %v2_1000a5b4, label %dec_label_pc_1000a574, label %dec_label_pc_1000a5b4.dec_label_pc_1000a5c4.loopexit_crit_edge

dec_label_pc_1000a5b4.dec_label_pc_1000a5c4.loopexit_crit_edge: ; preds = %dec_label_pc_1000a574
  %v0_1000a5c8.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a5c4

dec_label_pc_1000a5c4:                            ; preds = %dec_label_pc_1000a56c, %dec_label_pc_1000a5b4.dec_label_pc_1000a5c4.loopexit_crit_edge, %dec_label_pc_1000a54c
  %v0_1000a5c8 = phi i32 [ %v0_1000a560, %dec_label_pc_1000a54c ], [ %v0_1000a5c8.pre.pre, %dec_label_pc_1000a5b4.dec_label_pc_1000a5c4.loopexit_crit_edge ], [ %v0_1000a560, %dec_label_pc_1000a56c ]
  ret i32 %v0_1000a5c8

; uselistorder directives
  uselistorder i32 %v2_1000a5b0, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000a59c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a584, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000a56c, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000a560, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10008de0, { 1, 0, 2 }
  uselistorder i32 11, { 0, 29, 28, 1, 9, 10, 11, 12, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 4, 24, 25, 7, 5, 26, 27, 8, 6 }
  uselistorder label %dec_label_pc_1000a5c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a574, { 1, 0 }
}

define i32 @function_1000a5dc() local_unnamed_addr {
dec_label_pc_1000a5dc:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a5e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a5e0, i32* %stack_var_-48, align 4
  %v5_1000a5e0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000a5e0, i32* %r9.global-to-local, align 4
  %v0_1000a5ec = load i32, i32* @r5, align 4
  %v1_1000a5ec = add i32 %v0_1000a5ec, 30
  %v1_1000a5f0 = call i32 @__asm_rlwinm(i32 %v1_1000a5ec, i32 0, i32 0, i32 27)
  store i32 %v5_1000a5e0, i32* @r31, align 4
  %v1_1000a600 = load i32, i32* @r1, align 4
  %v3_1000a600 = sub i32 %v1_1000a600, %v1_1000a5f0
  %v4_1000a600 = inttoptr i32 %v3_1000a600 to i32*
  store i32 %v4_1000a5e0, i32* %v4_1000a600, align 4
  %v0_1000a604 = load i32, i32* @r4, align 4
  store i32 %v0_1000a604, i32* @r28, align 4
  %v0_1000a608 = load i32, i32* @r5, align 4
  store i32 %v0_1000a608, i32* @r23, align 4
  %v0_1000a60c = load i32, i32* @r3, align 4
  store i32 %v0_1000a60c, i32* @r22, align 4
  %v1_1000a610 = add i32 %v3_1000a600, 23
  %v1_1000a614 = call i32 @__asm_rlwinm(i32 %v1_1000a610, i32 0, i32 0, i32 27)
  store i32 %v1_1000a614, i32* @r27, align 4
  store i32 %v1_1000a614, i32* %r4.global-to-local, align 4
  %v0_1000a624 = call i32 @__asm_mfcr()
  %v1_1000a628 = and i32 %v0_1000a624, 268435456
  store i32 %v1_1000a628, i32* %r9.global-to-local, align 4
  %v3_1000a628 = icmp eq i32 %v1_1000a628, 0
  store i32 %v0_1000a624, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a628, label %dec_label_pc_1000a640, label %dec_label_pc_1000a634

dec_label_pc_1000a634:                            ; preds = %dec_label_pc_1000a5dc
  %v0_1000a634 = call i32 @function_10008d9c()
  %v0_1000a638 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a638 = inttoptr i32 %v0_1000a634 to i32*
  store i32 %v0_1000a638, i32* %v2_1000a638, align 4
  br label %dec_label_pc_1000a64c

dec_label_pc_1000a640:                            ; preds = %dec_label_pc_1000a5dc
  %v3_1000a640 = icmp eq i32 %v0_1000a624, -1
  store i32 %v0_1000a624, i32* @r24, align 4
  br i1 %v3_1000a640, label %dec_label_pc_1000a64c, label %dec_label_pc_1000a654

dec_label_pc_1000a64c:                            ; preds = %dec_label_pc_1000a640, %dec_label_pc_1000a634
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a718

dec_label_pc_1000a654:                            ; preds = %dec_label_pc_1000a640
  %v0_1000a654 = load i32, i32* @r28, align 4
  store i32 %v0_1000a654, i32* %r29.global-to-local, align 4
  store i32 %v1_1000a614, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* @r26, align 4
  %v2_1000a6fc12 = add i32 %v0_1000a624, %v1_1000a614
  %v1_1000a70013 = load i32, i32* @r23, align 4
  %v2_1000a70014 = add i32 %v1_1000a70013, %v0_1000a654
  store i32 %v2_1000a70014, i32* %r10.global-to-local, align 4
  %v2_1000a70415 = icmp ult i32 %v1_1000a614, %v2_1000a6fc12
  %v1_1000a70817 = add i32 %v0_1000a654, 19
  store i32 %v1_1000a70817, i32* @r3, align 4
  %v1_1000a70c18 = add i32 %v1_1000a614, 19
  store i32 %v1_1000a70c18, i32* @r4, align 4
  br i1 %v2_1000a70415, label %dec_label_pc_1000a668, label %dec_label_pc_1000a714

dec_label_pc_1000a668:                            ; preds = %dec_label_pc_1000a654, %dec_label_pc_1000a6b0
  %v0_1000a66819 = phi i32 [ %v2_1000a6f8, %dec_label_pc_1000a6b0 ], [ %v1_1000a614, %dec_label_pc_1000a654 ]
  %v1_1000a668 = add i32 %v0_1000a66819, 16
  %v2_1000a668 = inttoptr i32 %v1_1000a668 to i16*
  %v3_1000a668 = load i16, i16* %v2_1000a668, align 2
  %v4_1000a668 = zext i16 %v3_1000a668 to i32
  %v1_1000a66c = add nuw nsw i32 %v4_1000a668, 7
  store i32 %v1_1000a66c, i32* %r9.global-to-local, align 4
  %v1_1000a670 = call i32 @__asm_rlwinm(i32 %v1_1000a66c, i32 0, i32 0, i32 28)
  %v0_1000a674 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a674 = add i32 %v1_1000a670, %v0_1000a674
  store i32 %v3_1000a674, i32* %r11.global-to-local, align 4
  %v1_1000a678 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000a678 = icmp ugt i32 %v3_1000a674, %v1_1000a678
  br i1 %v3_1000a678, label %dec_label_pc_1000a680, label %dec_label_pc_1000a6b0

dec_label_pc_1000a680:                            ; preds = %dec_label_pc_1000a668
  %v0_1000a680 = load i32, i32* @r22, align 4
  %v0_1000a684 = load i32, i32* @r25, align 4
  %v0_1000a688 = load i32, i32* @r26, align 4
  store i32 268478100, i32* @lr, align 4
  %v4_1000a690 = call i32 @function_1000a854(i32 %v0_1000a680, i32 %v0_1000a684, i32 %v0_1000a688, i32 0)
  %v0_1000a694 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a694 = load i32, i32* @r28, align 4
  %v4_1000a694 = icmp eq i32 %v0_1000a694, %v1_1000a694
  br i1 %v4_1000a694, label %dec_label_pc_1000a69c, label %dec_label_pc_1000a714

dec_label_pc_1000a69c:                            ; preds = %dec_label_pc_1000a680
  %v0_1000a69c = call i32 @function_10008d9c()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000a6a8 = inttoptr i32 %v0_1000a69c to i32*
  store i32 22, i32* %v2_1000a6a8, align 4
  %v0_1000a71c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a718

dec_label_pc_1000a6b0:                            ; preds = %dec_label_pc_1000a668
  %v2_1000a670 = trunc i32 %v1_1000a670 to i16
  %v0_1000a6b0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a6b0 = inttoptr i32 %v0_1000a6b0 to i32*
  %v2_1000a6b0 = load i32, i32* %v1_1000a6b0, align 4
  store i32 %v2_1000a6b0, i32* %r9.global-to-local, align 4
  %v1_1000a6b4 = add i32 %v0_1000a6b0, 4
  %v2_1000a6b4 = inttoptr i32 %v1_1000a6b4 to i32*
  %v3_1000a6b4 = load i32, i32* %v2_1000a6b4, align 4
  store i32 %v3_1000a6b4, i32* %r10.global-to-local, align 4
  %v1_1000a6b8 = add i32 %v0_1000a6b0, 8
  %v2_1000a6b8 = inttoptr i32 %v1_1000a6b8 to i32*
  %v3_1000a6b8 = load i32, i32* %v2_1000a6b8, align 4
  store i32 %v3_1000a6b8, i32* @r25, align 4
  %v1_1000a6bc = add i32 %v0_1000a6b0, 12
  %v2_1000a6bc = inttoptr i32 %v1_1000a6bc to i32*
  %v3_1000a6bc = load i32, i32* %v2_1000a6bc, align 4
  store i32 %v3_1000a6bc, i32* @r26, align 4
  %v2_1000a6c0 = inttoptr i32 %v0_1000a674 to i32*
  store i32 %v2_1000a6b0, i32* %v2_1000a6c0, align 4
  %v0_1000a6c4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a6c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a6c4 = add i32 %v1_1000a6c4, 4
  %v3_1000a6c4 = inttoptr i32 %v2_1000a6c4 to i32*
  store i32 %v0_1000a6c4, i32* %v3_1000a6c4, align 4
  %v0_1000a6c8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a6c8 = add i32 %v0_1000a6c8, 8
  %v2_1000a6c8 = inttoptr i32 %v1_1000a6c8 to i32*
  %v3_1000a6c8 = load i32, i32* %v2_1000a6c8, align 4
  store i32 %v3_1000a6c8, i32* %r9.global-to-local, align 4
  %v1_1000a6cc = add i32 %v0_1000a6c8, 12
  %v2_1000a6cc = inttoptr i32 %v1_1000a6cc to i32*
  %v3_1000a6cc = load i32, i32* %v2_1000a6cc, align 4
  store i32 %v3_1000a6cc, i32* %r10.global-to-local, align 4
  %v3_1000a6d0 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000a6d0 = add i32 %v3_1000a6d0, 16
  %v5_1000a6d0 = inttoptr i32 %v4_1000a6d0 to i16*
  store i16 %v2_1000a670, i16* %v5_1000a6d0, align 2
  %v0_1000a6d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a6d4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a6d4 = add i32 %v1_1000a6d4, 8
  %v3_1000a6d4 = inttoptr i32 %v2_1000a6d4 to i32*
  store i32 %v0_1000a6d4, i32* %v3_1000a6d4, align 4
  %v0_1000a6d8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a6d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a6d8 = add i32 %v1_1000a6d8, 12
  %v3_1000a6d8 = inttoptr i32 %v2_1000a6d8 to i32*
  store i32 %v0_1000a6d8, i32* %v3_1000a6d8, align 4
  %v0_1000a6dc = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a6dc = add i32 %v0_1000a6dc, 18
  %v2_1000a6dc = inttoptr i32 %v1_1000a6dc to i8*
  %v3_1000a6dc = load i8, i8* %v2_1000a6dc, align 1
  %v2_1000a6e0 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a6e0 = add i32 %v2_1000a6e0, 18
  %v4_1000a6e0 = inttoptr i32 %v3_1000a6e0 to i8*
  store i8 %v3_1000a6dc, i8* %v4_1000a6e0, align 1
  %v0_1000a6e4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a6e4, i32* %r29.global-to-local, align 4
  %v0_1000a6e8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a6e8 = add i32 %v0_1000a6e8, 16
  %v2_1000a6e8 = inttoptr i32 %v1_1000a6e8 to i16*
  %v3_1000a6e8 = load i16, i16* %v2_1000a6e8, align 2
  %v4_1000a6e8 = zext i16 %v3_1000a6e8 to i32
  %v1_1000a6ec = add nsw i32 %v4_1000a6e8, -19
  store i32 %v1_1000a6ec, i32* @r5, align 4
  store i32 268478196, i32* @lr, align 4
  %v0_1000a6f0 = call i32 @function_1000ab50()
  %v0_1000a6f4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a6f4 = add i32 %v0_1000a6f4, 16
  %v2_1000a6f4 = inttoptr i32 %v1_1000a6f4 to i16*
  %v3_1000a6f4 = load i16, i16* %v2_1000a6f4, align 2
  %v4_1000a6f4 = zext i16 %v3_1000a6f4 to i32
  %v2_1000a6f8 = add i32 %v4_1000a6f4, %v0_1000a6f4
  store i32 %v2_1000a6f8, i32* %r30.global-to-local, align 4
  %v1_1000a6fc.pre = load i32, i32* @r24, align 4
  %v0_1000a700.pre = load i32, i32* @r28, align 4
  %v0_1000a708.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a6fc = add i32 %v1_1000a6fc.pre, %v1_1000a614
  %v1_1000a700 = load i32, i32* @r23, align 4
  %v2_1000a700 = add i32 %v1_1000a700, %v0_1000a700.pre
  store i32 %v2_1000a700, i32* %r10.global-to-local, align 4
  %v2_1000a704 = icmp ult i32 %v2_1000a6f8, %v2_1000a6fc
  %v1_1000a708 = add i32 %v0_1000a708.pre, 19
  store i32 %v1_1000a708, i32* @r3, align 4
  %v1_1000a70c = add i32 %v2_1000a6f8, 19
  store i32 %v1_1000a70c, i32* @r4, align 4
  br i1 %v2_1000a704, label %dec_label_pc_1000a668, label %dec_label_pc_1000a714

dec_label_pc_1000a714:                            ; preds = %dec_label_pc_1000a654, %dec_label_pc_1000a6b0, %dec_label_pc_1000a680
  %v1_1000a714 = phi i32 [ %v0_1000a694, %dec_label_pc_1000a680 ], [ %v0_1000a654, %dec_label_pc_1000a654 ], [ %v0_1000a708.pre, %dec_label_pc_1000a6b0 ]
  %v0_1000a714 = phi i32 [ %v1_1000a694, %dec_label_pc_1000a680 ], [ %v0_1000a654, %dec_label_pc_1000a654 ], [ %v0_1000a700.pre, %dec_label_pc_1000a6b0 ]
  %v2_1000a714 = sub i32 %v1_1000a714, %v0_1000a714
  store i32 %v2_1000a714, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a718

dec_label_pc_1000a718:                            ; preds = %dec_label_pc_1000a69c, %dec_label_pc_1000a64c, %dec_label_pc_1000a714
  %v0_1000a71c = phi i32 [ %v0_1000a71c.pre, %dec_label_pc_1000a69c ], [ -1, %dec_label_pc_1000a64c ], [ %v2_1000a714, %dec_label_pc_1000a714 ]
  %v0_1000a718 = load i32, i32* @r1, align 4
  %v1_1000a718 = inttoptr i32 %v0_1000a718 to i32*
  %v2_1000a718 = load i32, i32* %v1_1000a718, align 4
  store i32 %v2_1000a718, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000a71c

; uselistorder directives
  uselistorder i32 %v2_1000a6f8, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000a6b0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a670, { 1, 0 }
  uselistorder i32 %v0_1000a624, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000a614, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 8, 9, 10, 0, 3, 4, 5, 6, 7, 11, 12, 1, 13, 2, 14, 15 }
  uselistorder i32 22, { 0, 1, 2, 3, 10, 4, 5, 11, 12, 6, 7, 13, 8, 14, 9, 15 }
  uselistorder i32 7, { 22, 36, 10, 11, 17, 12, 13, 18, 19, 14, 20, 21, 0, 23, 1, 24, 2, 25, 15, 26, 16, 27, 3, 28, 4, 29, 30, 31, 5, 32, 33, 6, 34, 35, 7, 8, 9, 37 }
  uselistorder i32 19, { 17, 18, 1, 2, 0, 12, 13, 14, 3, 6, 7, 15, 16, 8, 9, 10, 11, 19, 20, 21, 22, 4, 5 }
  uselistorder i32* @r26, { 15, 16, 17, 8, 9, 10, 24, 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32* @r25, { 21, 22, 23, 14, 15, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 24, 25, 26, 27, 0, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* @r24, { 0, 16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 17, 20, 1, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* @r27, { 27, 19, 20, 42, 43, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 23, 21, 22, 2, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 1, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i32 23, { 9, 6, 10, 0, 1, 7, 8, 2, 3, 4, 5 }
  uselistorder i32* @r22, { 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* @r23, { 12, 0, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* @r1, { 7, 8, 2, 3, 4, 1, 5, 0, 9, 6, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 14, 15, 16, 25, 21, 23, 22, 24, 0, 27, 26, 1, 2, 3, 19, 20, 17, 18, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 28 }
  uselistorder i32 27, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 30, { 9, 10, 6, 2, 1, 0, 7, 8, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000a718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a714, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a668, { 1, 0 }
}

define i32 @function_1000a734() local_unnamed_addr {
dec_label_pc_1000a734:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a74c = call i32 @__asm_mfcr()
  %v1_1000a750 = and i32 %v0_1000a74c, 268435456
  %v3_1000a750 = icmp eq i32 %v1_1000a750, 0
  store i32 %v0_1000a74c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a750, label %dec_label_pc_1000a768, label %dec_label_pc_1000a75c

dec_label_pc_1000a75c:                            ; preds = %dec_label_pc_1000a734
  %v0_1000a75c = call i32 @function_10008d9c()
  %v0_1000a760 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a760 = inttoptr i32 %v0_1000a75c to i32*
  store i32 %v0_1000a760, i32* %v2_1000a760, align 4
  br label %dec_label_pc_1000a768

dec_label_pc_1000a768:                            ; preds = %dec_label_pc_1000a734, %dec_label_pc_1000a75c
  %v0_1000a778 = phi i32 [ %v0_1000a74c, %dec_label_pc_1000a734 ], [ -1, %dec_label_pc_1000a75c ]
  ret i32 %v0_1000a778

; uselistorder directives
  uselistorder label %dec_label_pc_1000a768, { 1, 0 }
}

define i32 @function_1000a77c() local_unnamed_addr {
dec_label_pc_1000a77c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a794 = call i32 @__asm_mfcr()
  %v1_1000a798 = and i32 %v0_1000a794, 268435456
  %v3_1000a798 = icmp eq i32 %v1_1000a798, 0
  store i32 %v0_1000a794, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a798, label %dec_label_pc_1000a7b0, label %dec_label_pc_1000a7a4

dec_label_pc_1000a7a4:                            ; preds = %dec_label_pc_1000a77c
  %v0_1000a7a4 = call i32 @function_10008d9c()
  %v0_1000a7a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a7a8 = inttoptr i32 %v0_1000a7a4 to i32*
  store i32 %v0_1000a7a8, i32* %v2_1000a7a8, align 4
  br label %dec_label_pc_1000a7b0

dec_label_pc_1000a7b0:                            ; preds = %dec_label_pc_1000a77c, %dec_label_pc_1000a7a4
  %v0_1000a7c0 = phi i32 [ %v0_1000a794, %dec_label_pc_1000a77c ], [ -1, %dec_label_pc_1000a7a4 ]
  ret i32 %v0_1000a7c0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a7b0, { 1, 0 }
}

define i32 @function_1000a7c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a7c4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a7dc = call i32 @__asm_mfcr()
  %v1_1000a7e0 = and i32 %v0_1000a7dc, 268435456
  %v3_1000a7e0 = icmp eq i32 %v1_1000a7e0, 0
  store i32 %v0_1000a7dc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a7e0, label %dec_label_pc_1000a7f8, label %dec_label_pc_1000a7ec

dec_label_pc_1000a7ec:                            ; preds = %dec_label_pc_1000a7c4
  %v0_1000a7ec = call i32 @function_10008d9c()
  %v0_1000a7f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a7f0 = inttoptr i32 %v0_1000a7ec to i32*
  store i32 %v0_1000a7f0, i32* %v2_1000a7f0, align 4
  br label %dec_label_pc_1000a7f8

dec_label_pc_1000a7f8:                            ; preds = %dec_label_pc_1000a7c4, %dec_label_pc_1000a7ec
  %v0_1000a808 = phi i32 [ %v0_1000a7dc, %dec_label_pc_1000a7c4 ], [ -1, %dec_label_pc_1000a7ec ]
  ret i32 %v0_1000a808

; uselistorder directives
  uselistorder label %dec_label_pc_1000a7f8, { 1, 0 }
}

define i32 @function_1000a80c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a80c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a824 = call i32 @__asm_mfcr()
  %v1_1000a828 = and i32 %v0_1000a824, 268435456
  %v3_1000a828 = icmp eq i32 %v1_1000a828, 0
  store i32 %v0_1000a824, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a828, label %dec_label_pc_1000a840, label %dec_label_pc_1000a834

dec_label_pc_1000a834:                            ; preds = %dec_label_pc_1000a80c
  %v0_1000a834 = call i32 @function_10008d9c()
  %v0_1000a838 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a838 = inttoptr i32 %v0_1000a834 to i32*
  store i32 %v0_1000a838, i32* %v2_1000a838, align 4
  br label %dec_label_pc_1000a840

dec_label_pc_1000a840:                            ; preds = %dec_label_pc_1000a80c, %dec_label_pc_1000a834
  %v0_1000a850 = phi i32 [ %v0_1000a824, %dec_label_pc_1000a80c ], [ -1, %dec_label_pc_1000a834 ]
  ret i32 %v0_1000a850

; uselistorder directives
  uselistorder label %dec_label_pc_1000a840, { 1, 0 }
}

define i32 @function_1000a854(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a854:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000a854 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000a880 = call i32 @__asm_mfcr()
  %v1_1000a884 = and i32 %v0_1000a880, 268435456
  %v3_1000a884 = icmp eq i32 %v1_1000a884, 0
  store i32 %v0_1000a880, i32* %r31.global-to-local, align 4
  store i32 %v0_1000a880, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a884, label %dec_label_pc_1000a8a8, label %dec_label_pc_1000a898

dec_label_pc_1000a898:                            ; preds = %dec_label_pc_1000a854
  %v0_1000a898 = call i32 @function_10008d9c()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000a8a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a8a0 = inttoptr i32 %v0_1000a898 to i32*
  store i32 %v0_1000a8a0, i32* %v2_1000a8a0, align 4
  %v0_1000a8ac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a8ac

dec_label_pc_1000a8a8:                            ; preds = %dec_label_pc_1000a854
  %v3_1000a890 = icmp eq i32 %v0_1000a880, 0
  br i1 %v3_1000a890, label %dec_label_pc_1000a8b8, label %dec_label_pc_1000a8ac

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a8a8, %dec_label_pc_1000a898
  %v0_1000a8ac = phi i32 [ %v0_1000a880, %dec_label_pc_1000a8a8 ], [ %v0_1000a8ac.pre, %dec_label_pc_1000a898 ]
  %tmp = icmp slt i32 %v0_1000a8ac, 0
  %v1_1000a8b0 = zext i1 %tmp to i32
  %v2_1000a8b0 = ashr i32 %v0_1000a8ac, 31
  %v3_1000a8b0 = and i32 %v2_1000a8b0, -2
  %v4_1000a8b0 = or i32 %v3_1000a8b0, %v1_1000a8b0
  br label %dec_label_pc_1000a8c0

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a8a8
  %v3_1000a8b8 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a8c0

dec_label_pc_1000a8c0:                            ; preds = %dec_label_pc_1000a8ac, %dec_label_pc_1000a8b8
  %v0_1000a8d0 = phi i32 [ %v4_1000a8b0, %dec_label_pc_1000a8ac ], [ %v3_1000a8b8, %dec_label_pc_1000a8b8 ]
  store i32 %v0_1000a854, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a8d0

; uselistorder directives
  uselistorder i32 %v0_1000a8ac, { 1, 0 }
  uselistorder i32 %v0_1000a880, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 13, 2, 11, 3, 12, 4, 5 }
  uselistorder label %dec_label_pc_1000a8c0, { 1, 0 }
}

define i32 @function_1000a8d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a8d4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a8ec = call i32 @__asm_mfcr()
  %v1_1000a8f0 = and i32 %v0_1000a8ec, 268435456
  %v3_1000a8f0 = icmp eq i32 %v1_1000a8f0, 0
  store i32 %v0_1000a8ec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a8f0, label %dec_label_pc_1000a908, label %dec_label_pc_1000a8fc

dec_label_pc_1000a8fc:                            ; preds = %dec_label_pc_1000a8d4
  %v0_1000a8fc = call i32 @function_10008d9c()
  %v0_1000a900 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a900 = inttoptr i32 %v0_1000a8fc to i32*
  store i32 %v0_1000a900, i32* %v2_1000a900, align 4
  br label %dec_label_pc_1000a908

dec_label_pc_1000a908:                            ; preds = %dec_label_pc_1000a8d4, %dec_label_pc_1000a8fc
  %v0_1000a918 = phi i32 [ %v0_1000a8ec, %dec_label_pc_1000a8d4 ], [ -1, %dec_label_pc_1000a8fc ]
  ret i32 %v0_1000a918

; uselistorder directives
  uselistorder label %dec_label_pc_1000a908, { 1, 0 }
}

define i32 @function_1000a91c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a91c:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000a938 = load i32, i32* @global_var_1001b780.290, align 4
  %v3_1000a93c = icmp eq i32 %v3_1000a938, 0
  br i1 %v3_1000a93c, label %dec_label_pc_1000a944, label %dec_label_pc_1000a950

dec_label_pc_1000a944:                            ; preds = %dec_label_pc_1000a91c
  store i32 268478792, i32* @lr, align 4
  %v1_1000a944 = call i32 @function_1000af10(i32 0)
  %v1_1000a948 = icmp slt i32 %v1_1000a944, 0
  br i1 %v1_1000a948, label %dec_label_pc_1000a970, label %dec_label_pc_1000a944.dec_label_pc_1000a950_crit_edge

dec_label_pc_1000a944.dec_label_pc_1000a950_crit_edge: ; preds = %dec_label_pc_1000a944
  %v0_1000a950.pre = load i32, i32* @r30, align 4
  %v3_1000a954.pre = load i32, i32* @global_var_1001b780.290, align 4
  br label %dec_label_pc_1000a950

dec_label_pc_1000a950:                            ; preds = %dec_label_pc_1000a944.dec_label_pc_1000a950_crit_edge, %dec_label_pc_1000a91c
  %v3_1000a954 = phi i32 [ %v3_1000a954.pre, %dec_label_pc_1000a944.dec_label_pc_1000a950_crit_edge ], [ %v3_1000a938, %dec_label_pc_1000a91c ]
  %v1_1000a95c = phi i32 [ %v0_1000a950.pre, %dec_label_pc_1000a944.dec_label_pc_1000a950_crit_edge ], [ %arg1, %dec_label_pc_1000a91c ]
  %v3_1000a950 = icmp eq i32 %v1_1000a95c, 0
  store i32 %v3_1000a954, i32* @r31, align 4
  br i1 %v3_1000a950, label %dec_label_pc_1000a974, label %dec_label_pc_1000a964

dec_label_pc_1000a964:                            ; preds = %dec_label_pc_1000a950
  %v2_1000a95c = add i32 %v1_1000a95c, %v3_1000a954
  store i32 268478824, i32* @lr, align 4
  %v1_1000a964 = call i32 @function_1000af10(i32 %v2_1000a95c)
  %tmp6 = icmp sgt i32 %v1_1000a964, -1
  br i1 %tmp6, label %dec_label_pc_1000a964.dec_label_pc_1000a974_crit_edge, label %dec_label_pc_1000a970

dec_label_pc_1000a964.dec_label_pc_1000a974_crit_edge: ; preds = %dec_label_pc_1000a964
  %v0_1000a978.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a974

dec_label_pc_1000a970:                            ; preds = %dec_label_pc_1000a964, %dec_label_pc_1000a944
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000a974

dec_label_pc_1000a974:                            ; preds = %dec_label_pc_1000a964.dec_label_pc_1000a974_crit_edge, %dec_label_pc_1000a950, %dec_label_pc_1000a970
  %v0_1000a978 = phi i32 [ %v0_1000a978.pre, %dec_label_pc_1000a964.dec_label_pc_1000a974_crit_edge ], [ %v3_1000a954, %dec_label_pc_1000a950 ], [ -1, %dec_label_pc_1000a970 ]
  ret i32 %v0_1000a978

; uselistorder directives
  uselistorder i32 %v3_1000a954, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000af10, { 1, 0 }
  uselistorder label %dec_label_pc_1000a974, { 2, 0, 1 }
}

define i32 @function_1000a98c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a98c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a9a4 = call i32 @__asm_mfcr()
  %v1_1000a9a8 = and i32 %v0_1000a9a4, 268435456
  %v3_1000a9a8 = icmp eq i32 %v1_1000a9a8, 0
  store i32 %v0_1000a9a4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a9a8, label %dec_label_pc_1000a9c0, label %dec_label_pc_1000a9b4

dec_label_pc_1000a9b4:                            ; preds = %dec_label_pc_1000a98c
  %v0_1000a9b4 = call i32 @function_10008d9c()
  %v0_1000a9b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a9b8 = inttoptr i32 %v0_1000a9b4 to i32*
  store i32 %v0_1000a9b8, i32* %v2_1000a9b8, align 4
  br label %dec_label_pc_1000a9c0

dec_label_pc_1000a9c0:                            ; preds = %dec_label_pc_1000a98c, %dec_label_pc_1000a9b4
  %v0_1000a9d0 = phi i32 [ %v0_1000a9a4, %dec_label_pc_1000a98c ], [ -1, %dec_label_pc_1000a9b4 ]
  ret i32 %v0_1000a9d0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a9c0, { 1, 0 }
}

define i32 @function_1000a9d4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a9d4:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268478972, i32* @lr, align 4
  %v3_1000a9f8 = call i32 @function_10008e84(i32 %arg2, i32 0, i32 104)
  %v2_1000a9fc = load i32, i32* %arg1, align 4
  %v1_1000aa00 = add i32 %tmp, 4
  %v2_1000aa00 = inttoptr i32 %v1_1000aa00 to i32*
  %v3_1000aa00 = load i32, i32* %v2_1000aa00, align 4
  store i32 %v3_1000aa00, i32* %r10.global-to-local, align 4
  %v1_1000aa04 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa04 = inttoptr i32 %v1_1000aa04 to i32*
  store i32 %v2_1000a9fc, i32* %v2_1000aa04, align 4
  %v0_1000aa08 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000aa08 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa08 = add i32 %v1_1000aa08, 4
  %v3_1000aa08 = inttoptr i32 %v2_1000aa08 to i32*
  store i32 %v0_1000aa08, i32* %v3_1000aa08, align 4
  %v0_1000aa0c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa0c = add i32 %v0_1000aa0c, 8
  %v2_1000aa0c = inttoptr i32 %v1_1000aa0c to i32*
  %v3_1000aa0c = load i32, i32* %v2_1000aa0c, align 4
  %v1_1000aa10 = add i32 %v0_1000aa0c, 12
  %v2_1000aa10 = inttoptr i32 %v1_1000aa10 to i32*
  %v3_1000aa10 = load i32, i32* %v2_1000aa10, align 4
  store i32 %v3_1000aa10, i32* %r10.global-to-local, align 4
  %v1_1000aa14 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa14 = add i32 %v1_1000aa14, 8
  %v3_1000aa14 = inttoptr i32 %v2_1000aa14 to i32*
  store i32 %v3_1000aa0c, i32* %v3_1000aa14, align 4
  %v0_1000aa18 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000aa18 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa18 = add i32 %v1_1000aa18, 12
  %v3_1000aa18 = inttoptr i32 %v2_1000aa18 to i32*
  store i32 %v0_1000aa18, i32* %v3_1000aa18, align 4
  %v0_1000aa1c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa1c = add i32 %v0_1000aa1c, 16
  %v2_1000aa1c = inttoptr i32 %v1_1000aa1c to i32*
  %v3_1000aa1c = load i32, i32* %v2_1000aa1c, align 4
  %v1_1000aa20 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa20 = add i32 %v1_1000aa20, 16
  %v3_1000aa20 = inttoptr i32 %v2_1000aa20 to i32*
  store i32 %v3_1000aa1c, i32* %v3_1000aa20, align 4
  %v0_1000aa24 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa24 = add i32 %v0_1000aa24, 20
  %v2_1000aa24 = inttoptr i32 %v1_1000aa24 to i32*
  %v3_1000aa24 = load i32, i32* %v2_1000aa24, align 4
  %v1_1000aa28 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa28 = add i32 %v1_1000aa28, 20
  %v3_1000aa28 = inttoptr i32 %v2_1000aa28 to i32*
  store i32 %v3_1000aa24, i32* %v3_1000aa28, align 4
  %v0_1000aa2c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa2c = add i32 %v0_1000aa2c, 24
  %v2_1000aa2c = inttoptr i32 %v1_1000aa2c to i32*
  %v3_1000aa2c = load i32, i32* %v2_1000aa2c, align 4
  %v1_1000aa30 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa30 = add i32 %v1_1000aa30, 24
  %v3_1000aa30 = inttoptr i32 %v2_1000aa30 to i32*
  store i32 %v3_1000aa2c, i32* %v3_1000aa30, align 4
  %v0_1000aa34 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa34 = add i32 %v0_1000aa34, 28
  %v2_1000aa34 = inttoptr i32 %v1_1000aa34 to i32*
  %v3_1000aa34 = load i32, i32* %v2_1000aa34, align 4
  %v1_1000aa38 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa38 = add i32 %v1_1000aa38, 28
  %v3_1000aa38 = inttoptr i32 %v2_1000aa38 to i32*
  store i32 %v3_1000aa34, i32* %v3_1000aa38, align 4
  %v0_1000aa3c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa3c = add i32 %v0_1000aa3c, 32
  %v2_1000aa3c = inttoptr i32 %v1_1000aa3c to i32*
  %v3_1000aa3c = load i32, i32* %v2_1000aa3c, align 4
  %v1_1000aa40 = add i32 %v0_1000aa3c, 36
  %v2_1000aa40 = inttoptr i32 %v1_1000aa40 to i32*
  %v3_1000aa40 = load i32, i32* %v2_1000aa40, align 4
  store i32 %v3_1000aa40, i32* %r10.global-to-local, align 4
  %v1_1000aa44 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa44 = add i32 %v1_1000aa44, 32
  %v3_1000aa44 = inttoptr i32 %v2_1000aa44 to i32*
  store i32 %v3_1000aa3c, i32* %v3_1000aa44, align 4
  %v0_1000aa48 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000aa48 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa48 = add i32 %v1_1000aa48, 36
  %v3_1000aa48 = inttoptr i32 %v2_1000aa48 to i32*
  store i32 %v0_1000aa48, i32* %v3_1000aa48, align 4
  %v0_1000aa4c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa4c = add i32 %v0_1000aa4c, 48
  %v2_1000aa4c = inttoptr i32 %v1_1000aa4c to i32*
  %v3_1000aa4c = load i32, i32* %v2_1000aa4c, align 4
  %v1_1000aa50 = add i32 %v0_1000aa4c, 52
  %v2_1000aa50 = inttoptr i32 %v1_1000aa50 to i32*
  %v3_1000aa50 = load i32, i32* %v2_1000aa50, align 4
  store i32 %v3_1000aa50, i32* %r10.global-to-local, align 4
  %v1_1000aa54 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa54 = add i32 %v1_1000aa54, 48
  %v3_1000aa54 = inttoptr i32 %v2_1000aa54 to i32*
  store i32 %v3_1000aa4c, i32* %v3_1000aa54, align 4
  %v0_1000aa58 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000aa58 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa58 = add i32 %v1_1000aa58, 52
  %v3_1000aa58 = inttoptr i32 %v2_1000aa58 to i32*
  store i32 %v0_1000aa58, i32* %v3_1000aa58, align 4
  %v0_1000aa5c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa5c = add i32 %v0_1000aa5c, 56
  %v2_1000aa5c = inttoptr i32 %v1_1000aa5c to i32*
  %v3_1000aa5c = load i32, i32* %v2_1000aa5c, align 4
  %v1_1000aa60 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa60 = add i32 %v1_1000aa60, 56
  %v3_1000aa60 = inttoptr i32 %v2_1000aa60 to i32*
  store i32 %v3_1000aa5c, i32* %v3_1000aa60, align 4
  %v0_1000aa64 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa64 = add i32 %v0_1000aa64, 64
  %v2_1000aa64 = inttoptr i32 %v1_1000aa64 to i32*
  %v3_1000aa64 = load i32, i32* %v2_1000aa64, align 4
  %v1_1000aa68 = add i32 %v0_1000aa64, 68
  %v2_1000aa68 = inttoptr i32 %v1_1000aa68 to i32*
  %v3_1000aa68 = load i32, i32* %v2_1000aa68, align 4
  store i32 %v3_1000aa68, i32* %r10.global-to-local, align 4
  %v1_1000aa6c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa6c = add i32 %v1_1000aa6c, 64
  %v3_1000aa6c = inttoptr i32 %v2_1000aa6c to i32*
  store i32 %v3_1000aa64, i32* %v3_1000aa6c, align 4
  %v0_1000aa70 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000aa70 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa70 = add i32 %v1_1000aa70, 68
  %v3_1000aa70 = inttoptr i32 %v2_1000aa70 to i32*
  store i32 %v0_1000aa70, i32* %v3_1000aa70, align 4
  %v0_1000aa74 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa74 = add i32 %v0_1000aa74, 72
  %v2_1000aa74 = inttoptr i32 %v1_1000aa74 to i32*
  %v3_1000aa74 = load i32, i32* %v2_1000aa74, align 4
  %v1_1000aa78 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa78 = add i32 %v1_1000aa78, 72
  %v3_1000aa78 = inttoptr i32 %v2_1000aa78 to i32*
  store i32 %v3_1000aa74, i32* %v3_1000aa78, align 4
  %v0_1000aa7c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa7c = add i32 %v0_1000aa7c, 80
  %v2_1000aa7c = inttoptr i32 %v1_1000aa7c to i32*
  %v3_1000aa7c = load i32, i32* %v2_1000aa7c, align 4
  %v1_1000aa80 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa80 = add i32 %v1_1000aa80, 80
  %v3_1000aa80 = inttoptr i32 %v2_1000aa80 to i32*
  store i32 %v3_1000aa7c, i32* %v3_1000aa80, align 4
  %v0_1000aa84 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000aa84 = add i32 %v0_1000aa84, 88
  %v2_1000aa84 = inttoptr i32 %v1_1000aa84 to i32*
  %v3_1000aa84 = load i32, i32* %v2_1000aa84, align 4
  %v1_1000aa88 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000aa88 = add i32 %v1_1000aa88, 88
  %v3_1000aa88 = inttoptr i32 %v2_1000aa88 to i32*
  store i32 %v3_1000aa84, i32* %v3_1000aa88, align 4
  ret i32 %v3_1000a9f8

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 80, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000aaa0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000aaa0:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000aaa4 = load i32, i32* @lr, align 4
  store i32 %v0_1000aaa4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268479176, i32* @lr, align 4
  %v3_1000aac4 = call i32 @function_10008e84(i32 %arg2, i32 0, i32 88)
  %v0_1000aac8 = load i32, i32* @r28, align 4
  %v1_1000aac8 = inttoptr i32 %v0_1000aac8 to i32*
  %v2_1000aac8 = load i32, i32* %v1_1000aac8, align 4
  store i32 %v2_1000aac8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000aad0 = load i32, i32* @r29, align 4
  %v2_1000aad0 = add i32 %v1_1000aad0, 4
  %v3_1000aad0 = inttoptr i32 %v2_1000aad0 to i32*
  store i32 %v2_1000aac8, i32* %v3_1000aad0, align 4
  %v0_1000aad4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000aad4 = load i32, i32* @r29, align 4
  %v2_1000aad4 = inttoptr i32 %v1_1000aad4 to i32*
  store i32 %v0_1000aad4, i32* %v2_1000aad4, align 4
  %v0_1000aad8 = load i32, i32* @r28, align 4
  %v1_1000aad8 = add i32 %v0_1000aad8, 4
  %v2_1000aad8 = inttoptr i32 %v1_1000aad8 to i32*
  %v3_1000aad8 = load i32, i32* %v2_1000aad8, align 4
  store i32 %v3_1000aad8, i32* %r0.global-to-local, align 4
  %v1_1000aadc = load i32, i32* @r29, align 4
  %v2_1000aadc = add i32 %v1_1000aadc, 12
  %v3_1000aadc = inttoptr i32 %v2_1000aadc to i32*
  store i32 %v3_1000aad8, i32* %v3_1000aadc, align 4
  %v0_1000aae0 = load i32, i32* @r28, align 4
  %v1_1000aae0 = add i32 %v0_1000aae0, 8
  %v2_1000aae0 = inttoptr i32 %v1_1000aae0 to i32*
  %v3_1000aae0 = load i32, i32* %v2_1000aae0, align 4
  store i32 %v3_1000aae0, i32* %r0.global-to-local, align 4
  %v1_1000aae4 = load i32, i32* @r29, align 4
  %v2_1000aae4 = add i32 %v1_1000aae4, 16
  %v3_1000aae4 = inttoptr i32 %v2_1000aae4 to i32*
  store i32 %v3_1000aae0, i32* %v3_1000aae4, align 4
  %v0_1000aae8 = load i32, i32* @r28, align 4
  %v1_1000aae8 = add i32 %v0_1000aae8, 12
  %v2_1000aae8 = inttoptr i32 %v1_1000aae8 to i16*
  %v3_1000aae8 = load i16, i16* %v2_1000aae8, align 2
  %v4_1000aae8 = zext i16 %v3_1000aae8 to i32
  store i32 %v4_1000aae8, i32* %r0.global-to-local, align 4
  %v1_1000aaec = load i32, i32* @r29, align 4
  %v2_1000aaec = add i32 %v1_1000aaec, 20
  %v3_1000aaec = inttoptr i32 %v2_1000aaec to i32*
  store i32 %v4_1000aae8, i32* %v3_1000aaec, align 4
  %v0_1000aaf0 = load i32, i32* @r28, align 4
  %v1_1000aaf0 = add i32 %v0_1000aaf0, 16
  %v2_1000aaf0 = inttoptr i32 %v1_1000aaf0 to i32*
  %v3_1000aaf0 = load i32, i32* %v2_1000aaf0, align 4
  store i32 %v3_1000aaf0, i32* %r0.global-to-local, align 4
  %v1_1000aaf4 = load i32, i32* @r29, align 4
  %v2_1000aaf4 = add i32 %v1_1000aaf4, 24
  %v3_1000aaf4 = inttoptr i32 %v2_1000aaf4 to i32*
  store i32 %v3_1000aaf0, i32* %v3_1000aaf4, align 4
  %v0_1000aaf8 = load i32, i32* @r28, align 4
  %v1_1000aaf8 = add i32 %v0_1000aaf8, 20
  %v2_1000aaf8 = inttoptr i32 %v1_1000aaf8 to i32*
  %v3_1000aaf8 = load i32, i32* %v2_1000aaf8, align 4
  store i32 %v3_1000aaf8, i32* %r0.global-to-local, align 4
  %v1_1000aafc = load i32, i32* @r29, align 4
  %v2_1000aafc = add i32 %v1_1000aafc, 28
  %v3_1000aafc = inttoptr i32 %v2_1000aafc to i32*
  store i32 %v3_1000aaf8, i32* %v3_1000aafc, align 4
  %v0_1000ab00 = load i32, i32* @r28, align 4
  %v1_1000ab00 = add i32 %v0_1000ab00, 24
  %v2_1000ab00 = inttoptr i32 %v1_1000ab00 to i32*
  %v3_1000ab00 = load i32, i32* %v2_1000ab00, align 4
  store i32 %v3_1000ab00, i32* %r0.global-to-local, align 4
  %v0_1000ab04 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ab04 = load i32, i32* @r29, align 4
  %v2_1000ab04 = add i32 %v1_1000ab04, 32
  %v3_1000ab04 = inttoptr i32 %v2_1000ab04 to i32*
  store i32 %v0_1000ab04, i32* %v3_1000ab04, align 4
  %v0_1000ab08 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ab08 = load i32, i32* @r29, align 4
  %v2_1000ab08 = add i32 %v1_1000ab08, 36
  %v3_1000ab08 = inttoptr i32 %v2_1000ab08 to i32*
  store i32 %v0_1000ab08, i32* %v3_1000ab08, align 4
  %v0_1000ab0c = load i32, i32* @r28, align 4
  %v1_1000ab0c = add i32 %v0_1000ab0c, 28
  %v2_1000ab0c = inttoptr i32 %v1_1000ab0c to i32*
  %v3_1000ab0c = load i32, i32* %v2_1000ab0c, align 4
  store i32 %v3_1000ab0c, i32* %r0.global-to-local, align 4
  %v1_1000ab10 = load i32, i32* @r29, align 4
  %v2_1000ab10 = add i32 %v1_1000ab10, 44
  %v3_1000ab10 = inttoptr i32 %v2_1000ab10 to i32*
  store i32 %v3_1000ab0c, i32* %v3_1000ab10, align 4
  %v0_1000ab14 = load i32, i32* @r28, align 4
  %v1_1000ab14 = add i32 %v0_1000ab14, 32
  %v2_1000ab14 = inttoptr i32 %v1_1000ab14 to i32*
  %v3_1000ab14 = load i32, i32* %v2_1000ab14, align 4
  store i32 %v3_1000ab14, i32* %r0.global-to-local, align 4
  %v1_1000ab18 = load i32, i32* @r29, align 4
  %v2_1000ab18 = add i32 %v1_1000ab18, 48
  %v3_1000ab18 = inttoptr i32 %v2_1000ab18 to i32*
  store i32 %v3_1000ab14, i32* %v3_1000ab18, align 4
  %v0_1000ab1c = load i32, i32* @r28, align 4
  %v1_1000ab1c = add i32 %v0_1000ab1c, 36
  %v2_1000ab1c = inttoptr i32 %v1_1000ab1c to i32*
  %v3_1000ab1c = load i32, i32* %v2_1000ab1c, align 4
  store i32 %v3_1000ab1c, i32* %r0.global-to-local, align 4
  %v1_1000ab20 = load i32, i32* @r29, align 4
  %v2_1000ab20 = add i32 %v1_1000ab20, 52
  %v3_1000ab20 = inttoptr i32 %v2_1000ab20 to i32*
  store i32 %v3_1000ab1c, i32* %v3_1000ab20, align 4
  %v0_1000ab24 = load i32, i32* @r28, align 4
  %v1_1000ab24 = add i32 %v0_1000ab24, 40
  %v2_1000ab24 = inttoptr i32 %v1_1000ab24 to i32*
  %v3_1000ab24 = load i32, i32* %v2_1000ab24, align 4
  store i32 %v3_1000ab24, i32* %r0.global-to-local, align 4
  %v1_1000ab28 = load i32, i32* @r29, align 4
  %v2_1000ab28 = add i32 %v1_1000ab28, 56
  %v3_1000ab28 = inttoptr i32 %v2_1000ab28 to i32*
  store i32 %v3_1000ab24, i32* %v3_1000ab28, align 4
  %v0_1000ab2c = load i32, i32* @r28, align 4
  %v1_1000ab2c = add i32 %v0_1000ab2c, 48
  %v2_1000ab2c = inttoptr i32 %v1_1000ab2c to i32*
  %v3_1000ab2c = load i32, i32* %v2_1000ab2c, align 4
  store i32 %v3_1000ab2c, i32* %r0.global-to-local, align 4
  %v1_1000ab30 = load i32, i32* @r29, align 4
  %v2_1000ab30 = add i32 %v1_1000ab30, 64
  %v3_1000ab30 = inttoptr i32 %v2_1000ab30 to i32*
  store i32 %v3_1000ab2c, i32* %v3_1000ab30, align 4
  %v0_1000ab34 = load i32, i32* @r28, align 4
  %v1_1000ab34 = add i32 %v0_1000ab34, 56
  %v2_1000ab34 = inttoptr i32 %v1_1000ab34 to i32*
  %v3_1000ab34 = load i32, i32* %v2_1000ab34, align 4
  %v1_1000ab38 = load i32, i32* @r29, align 4
  %v2_1000ab38 = add i32 %v1_1000ab38, 72
  %v3_1000ab38 = inttoptr i32 %v2_1000ab38 to i32*
  store i32 %v3_1000ab34, i32* %v3_1000ab38, align 4
  store i32 %v0_1000aaa4, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000aac4

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 19, 13, 14, 2, 21, 15, 0, 1, 12, 16, 17, 18, 3, 4, 5, 6, 7, 8, 20, 9, 10, 11 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 40, { 7, 0, 4, 1, 5, 6, 3, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 2, 3, 0, 1 }
  uselistorder i32 24, { 18, 19, 4, 5, 43, 44, 45, 38, 39, 40, 6, 7, 8, 9, 10, 12, 13, 14, 15, 11, 16, 17, 0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 3 }
  uselistorder i32 20, { 26, 27, 17, 18, 19, 20, 28, 29, 30, 31, 21, 5, 0, 1, 22, 23, 2, 24, 25, 32, 33, 6, 34, 35, 36, 37, 38, 39, 40, 41, 7, 42, 43, 44, 45, 46, 47, 8, 48, 49, 50, 51, 52, 53, 54, 9, 55, 56, 57, 58, 59, 60, 61, 62, 10, 63, 64, 65, 66, 67, 11, 68, 69, 70, 71, 12, 72, 13, 73, 74, 3, 14, 75, 76, 77, 4, 15, 78, 79, 80, 81, 82, 83, 16, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 }
  uselistorder i32 16, { 75, 76, 64, 65, 77, 78, 79, 80, 81, 20, 74, 66, 159, 160, 82, 83, 46, 47, 48, 67, 115, 112, 68, 69, 49, 23, 71, 72, 18, 0, 19, 1, 2, 73, 3, 70, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 24, 143, 144, 145, 146, 147, 84, 85, 26, 86, 87, 4, 88, 89, 90, 25, 91, 92, 28, 93, 94, 95, 96, 97, 27, 32, 98, 99, 100, 5, 101, 102, 6, 7, 21, 104, 103, 29, 31, 30, 36, 105, 106, 107, 8, 108, 109, 9, 10, 22, 111, 110, 33, 35, 34, 11, 37, 113, 12, 13, 114, 116, 117, 38, 118, 119, 120, 121, 122, 14, 123, 39, 124, 125, 126, 15, 127, 130, 131, 128, 129, 132, 133, 16, 134, 40, 135, 136, 137, 17, 138, 141, 142, 139, 140, 148, 149, 150, 151, 41, 152, 153, 154, 43, 155, 42, 156, 45, 157, 44, 158 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000ab50() local_unnamed_addr {
dec_label_pc_1000ab50:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000ab50 = load i32, i32* @r5, align 4
  %v1_1000ab50 = call i32 @__asm_rlwinm.(i32 %v0_1000ab50, i32 29, i32 3, i32 31)
  store i32 %v1_1000ab50, i32* %r9.global-to-local, align 4
  %v4_1000ab50 = icmp eq i32 %v1_1000ab50, 0
  %v0_1000ab54 = load i32, i32* @r4, align 4
  %v1_1000ab54 = add i32 %v0_1000ab54, -4
  store i32 %v1_1000ab54, i32* %r4.global-to-local, align 4
  %v0_1000ab58 = load i32, i32* @r3, align 4
  %v1_1000ab58 = add i32 %v0_1000ab58, -4
  store i32 %v1_1000ab58, i32* @r11, align 4
  br i1 %v4_1000ab50, label %dec_label_pc_1000ab80, label %dec_label_pc_1000ab60

dec_label_pc_1000ab60:                            ; preds = %dec_label_pc_1000ab50
  %v1_1000ab60 = urem i32 %v1_1000ab58, 4
  %v3_1000ab60 = icmp eq i32 %v1_1000ab60, 0
  br i1 %v3_1000ab60, label %dec_label_pc_1000ab68, label %dec_label_pc_1000abbc

dec_label_pc_1000ab68:                            ; preds = %dec_label_pc_1000abdc.dec_label_pc_1000ab68_crit_edge, %dec_label_pc_1000ab60
  %v1_1000ab74.pre = phi i32 [ %v1_1000ab58, %dec_label_pc_1000ab60 ], [ %v1_1000ab74.pre.pre, %dec_label_pc_1000abdc.dec_label_pc_1000ab68_crit_edge ]
  %v0_1000ab68 = phi i32 [ %v1_1000ab50, %dec_label_pc_1000ab60 ], [ %v1_1000abdc, %dec_label_pc_1000abdc.dec_label_pc_1000ab68_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000ab60 ], [ %v2_1000abc4, %dec_label_pc_1000abdc.dec_label_pc_1000ab68_crit_edge ]
  store i32 %v0_1000ab68, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ab6c

dec_label_pc_1000ab6c:                            ; preds = %dec_label_pc_1000ab6c, %dec_label_pc_1000ab68
  %v1_1000ab74 = phi i32 [ %v2_1000ab78, %dec_label_pc_1000ab6c ], [ %v1_1000ab74.pre, %dec_label_pc_1000ab68 ]
  %v0_1000ab6c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ab6c = add i32 %v0_1000ab6c, 4
  %v2_1000ab6c = inttoptr i32 %v1_1000ab6c to i32*
  %v3_1000ab6c = load i32, i32* %v2_1000ab6c, align 4
  %v1_1000ab70 = add i32 %v0_1000ab6c, 8
  %v2_1000ab70 = inttoptr i32 %v1_1000ab70 to i32*
  %v3_1000ab70 = load i32, i32* %v2_1000ab70, align 4
  store i32 %v3_1000ab70, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ab70, i32* %r4.global-to-local, align 4
  %v2_1000ab74 = add i32 %v1_1000ab74, 4
  %v3_1000ab74 = inttoptr i32 %v2_1000ab74 to i32*
  store i32 %v3_1000ab6c, i32* %v3_1000ab74, align 4
  %v0_1000ab78 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ab78 = load i32, i32* @r11, align 4
  %v2_1000ab78 = add i32 %v1_1000ab78, 8
  %v3_1000ab78 = inttoptr i32 %v2_1000ab78 to i32*
  store i32 %v0_1000ab78, i32* %v3_1000ab78, align 4
  store i32 %v2_1000ab78, i32* @r11, align 4
  %v0_1000ab7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab7c = add i32 %v0_1000ab7c, -1
  store i32 %v1_1000ab7c, i32* %ctr.global-to-local, align 4
  %v2_1000ab7c = icmp eq i32 %v1_1000ab7c, 0
  br i1 %v2_1000ab7c, label %dec_label_pc_1000ab80, label %dec_label_pc_1000ab6c

dec_label_pc_1000ab80:                            ; preds = %dec_label_pc_1000ab6c, %dec_label_pc_1000abdc, %dec_label_pc_1000ab50
  %.1 = phi i32 [ undef, %dec_label_pc_1000ab50 ], [ %v2_1000abc4, %dec_label_pc_1000abdc ], [ %.0, %dec_label_pc_1000ab6c ]
  %v1_1000ab80 = urem i32 %.1, 8
  store i32 %v1_1000ab80, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000ab80, 4
  br i1 %tmp, label %dec_label_pc_1000ab98, label %dec_label_pc_1000ab8c

dec_label_pc_1000ab8c:                            ; preds = %dec_label_pc_1000ab80
  %v0_1000ab8c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ab8c = add i32 %v0_1000ab8c, 4
  %v2_1000ab8c = inttoptr i32 %v1_1000ab8c to i32*
  %v3_1000ab8c = load i32, i32* %v2_1000ab8c, align 4
  store i32 %v1_1000ab8c, i32* %r4.global-to-local, align 4
  %v1_1000ab90 = add nsw i32 %v1_1000ab80, -4
  store i32 %v1_1000ab90, i32* @r5, align 4
  %v1_1000ab94 = load i32, i32* @r11, align 4
  %v2_1000ab94 = add i32 %v1_1000ab94, 4
  %v3_1000ab94 = inttoptr i32 %v2_1000ab94 to i32*
  store i32 %v3_1000ab8c, i32* %v3_1000ab94, align 4
  store i32 %v2_1000ab94, i32* @r11, align 4
  %v0_1000ab98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000ab98

dec_label_pc_1000ab98:                            ; preds = %dec_label_pc_1000ab80, %dec_label_pc_1000ab8c
  %v0_1000ab98 = phi i32 [ %v1_1000ab80, %dec_label_pc_1000ab80 ], [ %v0_1000ab98.pre, %dec_label_pc_1000ab8c ]
  %v3_1000ab98 = icmp eq i32 %v0_1000ab98, 0
  %v0_1000ab9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ab98, i32 %v0_1000ab9c)
  %v0_1000aba0 = load i32, i32* @r5, align 4
  store i32 %v0_1000aba0, i32* %ctr.global-to-local, align 4
  %v0_1000aba4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000aba4 = add i32 %v0_1000aba4, 3
  store i32 %v1_1000aba4, i32* %r4.global-to-local, align 4
  %v0_1000aba8 = load i32, i32* @r11, align 4
  %v1_1000aba8 = add i32 %v0_1000aba8, 3
  store i32 %v1_1000aba8, i32* %r9.global-to-local, align 4
  %v1_1000abac9 = add i32 %v0_1000aba4, 4
  %v2_1000abac10 = inttoptr i32 %v1_1000abac9 to i8*
  %v3_1000abac11 = load i8, i8* %v2_1000abac10, align 1
  store i32 %v1_1000abac9, i32* %r4.global-to-local, align 4
  %v3_1000abb013 = add i32 %v0_1000aba8, 4
  %v4_1000abb014 = inttoptr i32 %v3_1000abb013 to i8*
  store i8 %v3_1000abac11, i8* %v4_1000abb014, align 1
  store i32 %v3_1000abb013, i32* %r9.global-to-local, align 4
  %v0_1000abb415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000abb416 = add i32 %v0_1000abb415, -1
  store i32 %v1_1000abb416, i32* %ctr.global-to-local, align 4
  %v2_1000abb417 = icmp eq i32 %v1_1000abb416, 0
  br i1 %v2_1000abb417, label %dec_label_pc_1000abe8, label %dec_label_pc_1000abac.dec_label_pc_1000abac_crit_edge

dec_label_pc_1000abac.dec_label_pc_1000abac_crit_edge: ; preds = %dec_label_pc_1000ab98, %dec_label_pc_1000abac.dec_label_pc_1000abac_crit_edge
  %v3_1000abb018 = phi i32 [ %v3_1000abb0, %dec_label_pc_1000abac.dec_label_pc_1000abac_crit_edge ], [ %v3_1000abb013, %dec_label_pc_1000ab98 ]
  %v0_1000abac.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000abac = add i32 %v0_1000abac.pre, 1
  %v2_1000abac = inttoptr i32 %v1_1000abac to i8*
  %v3_1000abac = load i8, i8* %v2_1000abac, align 1
  store i32 %v1_1000abac, i32* %r4.global-to-local, align 4
  %v3_1000abb0 = add i32 %v3_1000abb018, 1
  %v4_1000abb0 = inttoptr i32 %v3_1000abb0 to i8*
  store i8 %v3_1000abac, i8* %v4_1000abb0, align 1
  store i32 %v3_1000abb0, i32* %r9.global-to-local, align 4
  %v0_1000abb4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000abb4 = add i32 %v0_1000abb4, -1
  store i32 %v1_1000abb4, i32* %ctr.global-to-local, align 4
  %v2_1000abb4 = icmp eq i32 %v1_1000abb4, 0
  br i1 %v2_1000abb4, label %dec_label_pc_1000abe8, label %dec_label_pc_1000abac.dec_label_pc_1000abac_crit_edge

dec_label_pc_1000abbc:                            ; preds = %dec_label_pc_1000ab60
  %v1_1000abbc = sub nsw i32 4, %v1_1000ab60
  store i32 %v1_1000abbc, i32* %ctr.global-to-local, align 4
  %v1_1000abc4 = load i32, i32* @r5, align 4
  %v2_1000abc4 = sub i32 %v1_1000abc4, %v1_1000abbc
  br label %dec_label_pc_1000abc8

dec_label_pc_1000abc8:                            ; preds = %dec_label_pc_1000abc8.dec_label_pc_1000abc8_crit_edge, %dec_label_pc_1000abbc
  %v2_1000abd0 = phi i32 [ %v1_1000abd4, %dec_label_pc_1000abc8.dec_label_pc_1000abc8_crit_edge ], [ %v1_1000ab58, %dec_label_pc_1000abbc ]
  %v0_1000abc8 = phi i32 [ %v0_1000abc8.pre, %dec_label_pc_1000abc8.dec_label_pc_1000abc8_crit_edge ], [ %v1_1000ab54, %dec_label_pc_1000abbc ]
  %v1_1000abc8 = add i32 %v0_1000abc8, 4
  %v2_1000abc8 = inttoptr i32 %v1_1000abc8 to i8*
  %v3_1000abc8 = load i8, i8* %v2_1000abc8, align 1
  %v1_1000abcc = add i32 %v0_1000abc8, 1
  store i32 %v1_1000abcc, i32* %r4.global-to-local, align 4
  %v3_1000abd0 = add i32 %v2_1000abd0, 4
  %v4_1000abd0 = inttoptr i32 %v3_1000abd0 to i8*
  store i8 %v3_1000abc8, i8* %v4_1000abd0, align 1
  %v0_1000abd4 = load i32, i32* @r11, align 4
  %v1_1000abd4 = add i32 %v0_1000abd4, 1
  store i32 %v1_1000abd4, i32* @r11, align 4
  %v0_1000abd8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000abd8 = add i32 %v0_1000abd8, -1
  store i32 %v1_1000abd8, i32* %ctr.global-to-local, align 4
  %v2_1000abd8 = icmp eq i32 %v1_1000abd8, 0
  br i1 %v2_1000abd8, label %dec_label_pc_1000abdc, label %dec_label_pc_1000abc8.dec_label_pc_1000abc8_crit_edge

dec_label_pc_1000abc8.dec_label_pc_1000abc8_crit_edge: ; preds = %dec_label_pc_1000abc8
  %v0_1000abc8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000abc8

dec_label_pc_1000abdc:                            ; preds = %dec_label_pc_1000abc8
  %v1_1000abdc = call i32 @__asm_rlwinm.(i32 %v2_1000abc4, i32 29, i32 3, i32 31)
  store i32 %v1_1000abdc, i32* %r9.global-to-local, align 4
  %v4_1000abdc = icmp eq i32 %v1_1000abdc, 0
  br i1 %v4_1000abdc, label %dec_label_pc_1000ab80, label %dec_label_pc_1000abdc.dec_label_pc_1000ab68_crit_edge

dec_label_pc_1000abdc.dec_label_pc_1000ab68_crit_edge: ; preds = %dec_label_pc_1000abdc
  %v1_1000ab74.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000ab68

dec_label_pc_1000abe8:                            ; preds = %dec_label_pc_1000abac.dec_label_pc_1000abac_crit_edge, %dec_label_pc_1000ab98
  %v0_1000abe8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000abe8

; uselistorder directives
  uselistorder i32 %v1_1000abdc, { 1, 2, 0 }
  uselistorder i32 %v1_1000abd8, { 1, 0 }
  uselistorder i32 %v1_1000abd4, { 1, 0 }
  uselistorder i32 %v0_1000abc8, { 1, 0 }
  uselistorder i32 %v2_1000abc4, { 2, 1, 0 }
  uselistorder i32 %v1_1000abb4, { 1, 0 }
  uselistorder i32 %v3_1000abb0, { 1, 2, 0 }
  uselistorder i32 %v1_1000ab80, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000ab7c, { 1, 0 }
  uselistorder i32 %v2_1000ab78, { 1, 2, 0 }
  uselistorder i32 %v1_1000ab60, { 1, 0 }
  uselistorder i32 %v1_1000ab58, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 30, 31, 26, 28, 27, 29, 3, 4, 34, 35, 32, 33, 36, 37, 24, 25, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 18, 19, 22, 23, 2 }
  uselistorder label %dec_label_pc_1000abac.dec_label_pc_1000abac_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab98, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab80, { 1, 0, 2 }
}

define i32 @function_1000abec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000abec:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268479496, i32* @lr, align 4
  %v0_1000ac04 = call i32 @function_1000ab50()
  %v0_1000ac0c = load i32, i32* @r28, align 4
  %v1_1000ac0c = load i32, i32* @r29, align 4
  %v2_1000ac0c = add i32 %v1_1000ac0c, %v0_1000ac0c
  ret i32 %v2_1000ac0c

; uselistorder directives
  uselistorder i32* @r28, { 7, 8, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 1, 68, 69, 70, 71, 72, 73, 290, 291, 292, 293, 294, 2, 43, 44, 45, 6, 46, 254, 255, 256, 257, 258, 259, 260, 261, 262, 276, 277, 278, 279, 9, 10, 11, 12, 13, 74, 75, 14, 15, 16, 17, 18, 25, 26, 27, 28, 19, 3, 20, 21, 22, 23, 24, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 76, 77, 78, 79, 80, 81, 82, 4, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 282, 280, 281, 283, 284, 5, 285, 286, 287, 288, 289 }
}

define i32 @function_1000ac20(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000ac20:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000ac20 = icmp eq i8* %arg1, null
  br i1 %v3_1000ac20, label %dec_label_pc_1000acd8, label %dec_label_pc_1000ac28

dec_label_pc_1000ac28:                            ; preds = %dec_label_pc_1000ac20
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000ac3c.pre = load i32, i32* bitcast (i32** @global_var_1001b70c.272 to i32*), align 4
  br label %dec_label_pc_1000ac38

dec_label_pc_1000ac38:                            ; preds = %dec_label_pc_1000ac28, %dec_label_pc_1000acb0
  %v0_1000acb0 = phi i32 [ 0, %dec_label_pc_1000ac28 ], [ %v2_1000acb8, %dec_label_pc_1000acb0 ]
  %v0_1000acb4 = phi i32 [ 1, %dec_label_pc_1000ac28 ], [ %v1_1000acb4, %dec_label_pc_1000acb0 ]
  %v0_1000ac38 = phi i32 [ %tmp, %dec_label_pc_1000ac28 ], [ %v0_1000ac383, %dec_label_pc_1000acb0 ]
  %v1_1000ac38 = inttoptr i32 %v0_1000ac38 to i8*
  %v2_1000ac38 = load i8, i8* %v1_1000ac38, align 1
  %v3_1000ac38 = zext i8 %v2_1000ac38 to i32
  %v1_1000ac40 = mul nuw nsw i32 %v3_1000ac38, 2
  %v2_1000ac44 = add i32 %v1_1000ac40, %v3_1000ac3c.pre
  %v3_1000ac44 = inttoptr i32 %v2_1000ac44 to i16*
  %v4_1000ac44 = load i16, i16* %v3_1000ac44, align 2
  %v1_1000ac48 = and i16 %v4_1000ac44, 8
  %v3_1000ac48 = icmp eq i16 %v1_1000ac48, 0
  br i1 %v3_1000ac48, label %dec_label_pc_1000acd8, label %dec_label_pc_1000ac50

dec_label_pc_1000ac50:                            ; preds = %dec_label_pc_1000ac38
  br label %dec_label_pc_1000ac68

dec_label_pc_1000ac58:                            ; preds = %dec_label_pc_1000ac68
  %v1_1000ac6c = mul i32 %v1_1000acb8, 10
  %v2_1000ac74 = add i32 %v3_1000ac68, %v1_1000ac6c
  %v1_1000ac58 = add i32 %v2_1000ac74, -48
  %v1_1000ac5c = add i32 %v0_1000aca0, 1
  %v2_1000ac60 = icmp sgt i32 %v1_1000ac58, 255
  br i1 %v2_1000ac60, label %dec_label_pc_1000acd8, label %dec_label_pc_1000ac68

dec_label_pc_1000ac68:                            ; preds = %dec_label_pc_1000ac58, %dec_label_pc_1000ac50
  %v1_1000acb8 = phi i32 [ %v1_1000ac58, %dec_label_pc_1000ac58 ], [ 0, %dec_label_pc_1000ac50 ]
  %v0_1000aca0 = phi i32 [ %v1_1000ac5c, %dec_label_pc_1000ac58 ], [ %v0_1000ac38, %dec_label_pc_1000ac50 ]
  %v1_1000ac68 = inttoptr i32 %v0_1000aca0 to i8*
  %v2_1000ac68 = load i8, i8* %v1_1000ac68, align 1
  %v3_1000ac68 = zext i8 %v2_1000ac68 to i32
  %v1_1000ac70 = mul nuw nsw i32 %v3_1000ac68, 2
  %v2_1000ac78 = add i32 %v1_1000ac70, %v3_1000ac3c.pre
  %v3_1000ac78 = inttoptr i32 %v2_1000ac78 to i16*
  %v4_1000ac78 = load i16, i16* %v3_1000ac78, align 2
  %v5_1000ac78 = zext i16 %v4_1000ac78 to i32
  %v1_1000ac7c = and i32 %v5_1000ac78, 8
  %v3_1000ac7c = icmp eq i32 %v1_1000ac7c, 0
  br i1 %v3_1000ac7c, label %dec_label_pc_1000ac84, label %dec_label_pc_1000ac58

dec_label_pc_1000ac84:                            ; preds = %dec_label_pc_1000ac68
  %v2_1000ac84 = icmp sgt i32 %v0_1000acb4, 3
  br i1 %v2_1000ac84, label %dec_label_pc_1000ac9c, label %dec_label_pc_1000ac8c

dec_label_pc_1000ac8c:                            ; preds = %dec_label_pc_1000ac84
  %v3_1000ac8c = icmp eq i8 %v2_1000ac68, 46
  br i1 %v3_1000ac8c, label %dec_label_pc_1000ac94, label %dec_label_pc_1000acd8

dec_label_pc_1000ac94:                            ; preds = %dec_label_pc_1000ac8c
  %v1_1000ac94 = add i32 %v0_1000aca0, 1
  br label %dec_label_pc_1000acb0

dec_label_pc_1000ac9c:                            ; preds = %dec_label_pc_1000ac84
  %v3_1000ac9c = icmp eq i8 %v2_1000ac68, 0
  %v1_1000aca0 = add i32 %v0_1000aca0, 1
  br i1 %v3_1000ac9c, label %dec_label_pc_1000acb0, label %dec_label_pc_1000aca8

dec_label_pc_1000aca8:                            ; preds = %dec_label_pc_1000ac9c
  %v1_1000aca8 = and i32 %v5_1000ac78, 32
  %v3_1000aca8 = icmp eq i32 %v1_1000aca8, 0
  br i1 %v3_1000aca8, label %dec_label_pc_1000acd8, label %dec_label_pc_1000acb0

dec_label_pc_1000acb0:                            ; preds = %dec_label_pc_1000aca8, %dec_label_pc_1000ac9c, %dec_label_pc_1000ac94
  %v0_1000ac383 = phi i32 [ %v1_1000aca0, %dec_label_pc_1000aca8 ], [ %v1_1000aca0, %dec_label_pc_1000ac9c ], [ %v1_1000ac94, %dec_label_pc_1000ac94 ]
  %v1_1000acb0 = mul i32 %v0_1000acb0, 256
  %v1_1000acb4 = add nuw nsw i32 %v0_1000acb4, 1
  %v2_1000acb8 = or i32 %v1_1000acb8, %v1_1000acb0
  store i32 %v2_1000acb8, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000acb4, 5
  br i1 %tmp10, label %dec_label_pc_1000ac38, label %dec_label_pc_1000acc4

dec_label_pc_1000acc4:                            ; preds = %dec_label_pc_1000acb0
  %v0_1000acc4 = load i32, i32* @r4, align 4
  %v3_1000acc4 = icmp eq i32 %v0_1000acc4, 0
  %v0_1000accc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000acc4, i32 %v0_1000accc)
  %v0_1000acd0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000acd0 = load i32, i32* @r4, align 4
  %v2_1000acd0 = inttoptr i32 %v1_1000acd0 to i32*
  store i32 %v0_1000acd0, i32* %v2_1000acd0, align 4
  ret i32 1

dec_label_pc_1000acd8:                            ; preds = %dec_label_pc_1000ac8c, %dec_label_pc_1000aca8, %dec_label_pc_1000ac38, %dec_label_pc_1000ac58, %dec_label_pc_1000ac20
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000acb8, { 1, 0 }
  uselistorder i32 %v1_1000acb4, { 1, 0 }
  uselistorder i32 %v0_1000aca0, { 0, 1, 3, 2 }
  uselistorder i32 5, { 20, 21, 22, 35, 23, 24, 36, 37, 2, 1, 0, 38, 3, 4, 39, 25, 26, 27, 28, 40, 5, 7, 41, 29, 42, 6, 30, 43, 8, 31, 44, 9, 32, 45, 10, 12, 46, 11, 47, 33, 48, 14, 49, 13, 34, 50, 16, 51, 15, 19, 52, 18, 53, 17, 54, 55, 56, 57, 58 }
  uselistorder i8 0, { 3, 7, 0, 8, 9, 5, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 2, 30, 31, 32, 33, 4, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i8 46, { 1, 2, 0 }
  uselistorder i32 8, { 119, 3, 133, 134, 56, 38, 39, 57, 58, 59, 60, 61, 62, 137, 138, 11, 135, 136, 12, 123, 122, 120, 121, 104, 105, 106, 124, 125, 126, 127, 128, 129, 4, 40, 41, 42, 5, 139, 6, 63, 64, 65, 66, 67, 68, 28, 29, 43, 30, 31, 44, 32, 33, 45, 46, 7, 8, 9, 47, 48, 50, 51, 34, 52, 15, 53, 55, 54, 49, 89, 69, 70, 71, 72, 73, 74, 75, 35, 76, 77, 78, 79, 80, 81, 82, 83, 36, 84, 85, 86, 87, 88, 90, 16, 91, 92, 93, 94, 95, 13, 96, 97, 98, 99, 14, 100, 101, 102, 103, 17, 107, 18, 108, 19, 109, 20, 110, 21, 111, 22, 112, 23, 113, 114, 24, 115, 25, 116, 26, 117, 27, 118, 0, 1, 10, 130, 131, 37, 132, 2 }
  uselistorder i32 255, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 68, 30, 9, 29, 2, 3, 6, 5, 0, 10, 17, 18, 19, 20, 21, 11, 22, 23, 24, 12, 13, 25, 26, 27, 4, 28, 14, 1, 15, 7, 31, 32, 33, 34, 35, 8, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 16, 67 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 8, 7, 3, 9, 10, 11, 12 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000acd8, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000ac38, { 1, 0 }
}

define i32 @function_1000ace0(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ace0:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000ace4 = load i32, i32* @lr, align 4
  store i32 %v0_1000ace4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000acf0 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000ad00 = add i32 %tmp, 4
  store i32 %v1_1000ad00, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000ad08 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000ad08, i32* @r3, align 4
  br i1 %v3_1000acf0, label %dec_label_pc_1000ad30, label %dec_label_pc_1000ad10

dec_label_pc_1000ad10:                            ; preds = %dec_label_pc_1000ace0
  %v2_1000ad10 = load i32, i32* %arg2, align 4
  store i32 %v2_1000ad10, i32* %r0.global-to-local, align 4
  store i32 268479772, i32* @lr, align 4
  %v0_1000ad18 = call i32 @function_1000ab50()
  %v0_1000ad1c = load i32, i32* @r31, align 4
  %v1_1000ad1c = add i32 %v0_1000ad1c, 132
  %v2_1000ad1c = inttoptr i32 %v1_1000ad1c to i32*
  %v3_1000ad1c = load i32, i32* %v2_1000ad1c, align 4
  store i32 %v3_1000ad1c, i32* %r0.global-to-local, align 4
  %v1_1000ad28 = add i32 %v0_1000ad1c, 136
  %v2_1000ad28 = inttoptr i32 %v1_1000ad28 to i32*
  %v3_1000ad28 = load i32, i32* %v2_1000ad28, align 4
  store i32 %v3_1000ad28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ad30

dec_label_pc_1000ad30:                            ; preds = %dec_label_pc_1000ace0, %dec_label_pc_1000ad10
  store i32 268479824, i32* @lr, align 4
  %v0_1000ad4c = call i32 @function_1000af44()
  %v0_1000ad50 = load i32, i32* @r30, align 4
  %v3_1000ad50 = icmp eq i32 %v0_1000ad50, 0
  store i32 %v0_1000ad4c, i32* @r31, align 4
  br i1 %v3_1000ad50, label %dec_label_pc_1000ad8c, label %dec_label_pc_1000ad60

dec_label_pc_1000ad60:                            ; preds = %dec_label_pc_1000ad30
  %v1_1000ad58 = icmp slt i32 %v0_1000ad4c, 0
  %v1_1000ad60 = add i32 %v0_1000ad50, 4
  store i32 %v1_1000ad60, i32* @r3, align 4
  %v2_1000ad64 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000ad64, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000ad58, label %dec_label_pc_1000ad8c, label %dec_label_pc_1000ad70

dec_label_pc_1000ad70:                            ; preds = %dec_label_pc_1000ad60
  %v3_1000ad70 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000ad70, i32* %r0.global-to-local, align 4
  %v2_1000ad74 = inttoptr i32 %v0_1000ad50 to i32*
  store i32 %v3_1000ad70, i32* %v2_1000ad74, align 4
  store i32 268479868, i32* @lr, align 4
  %v0_1000ad78 = call i32 @function_1000ab50()
  %v1_1000ad84 = load i32, i32* @r30, align 4
  %v2_1000ad84 = add i32 %v1_1000ad84, 136
  %v3_1000ad84 = inttoptr i32 %v2_1000ad84 to i32*
  %v0_1000ad88 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ad88 = load i32, i32* @r30, align 4
  %v2_1000ad88 = add i32 %v1_1000ad88, 132
  %v3_1000ad88 = inttoptr i32 %v2_1000ad88 to i32*
  store i32 %v0_1000ad88, i32* %v3_1000ad88, align 4
  %v0_1000ad90.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ad8c

dec_label_pc_1000ad8c:                            ; preds = %dec_label_pc_1000ad60, %dec_label_pc_1000ad30, %dec_label_pc_1000ad70
  %v0_1000ad90 = phi i32 [ %v0_1000ad4c, %dec_label_pc_1000ad60 ], [ %v0_1000ad4c, %dec_label_pc_1000ad30 ], [ %v0_1000ad90.pre, %dec_label_pc_1000ad70 ]
  store i32 %v0_1000ace4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ad90

; uselistorder directives
  uselistorder i32 %v0_1000ad4c, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000ab50, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 3, 13, 6, 28, 29, 2, 4, 5, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 7, 8, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* @r30, { 145, 146, 147, 148, 0, 127, 1, 31, 32, 33, 149, 152, 150, 151, 128, 129, 130, 122, 123, 124, 125, 126, 131, 132, 136, 133, 134, 135, 7, 8, 9, 10, 11, 12, 13, 2, 14, 34, 3, 15, 22, 16, 17, 18, 4, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 5, 42, 43, 6, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 138, 139, 137, 140, 141, 142, 143, 144 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* @r31, { 1, 292, 293, 294, 269, 2, 270, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 301, 302, 295, 7, 296, 297, 298, 299, 300, 65, 66, 271, 272, 273, 274, 275, 276, 261, 262, 263, 264, 265, 266, 267, 268, 277, 278, 279, 283, 280, 281, 282, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 97, 3, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 18, 19, 20, 21, 112, 113, 114, 115, 116, 22, 23, 24, 25, 26, 27, 37, 38, 39, 40, 41, 42, 43, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 4, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 117, 118, 119, 120, 121, 122, 123, 124, 125, 0, 5, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 6, 284, 285, 286, 287, 288, 289, 290, 291 }
  uselistorder label %dec_label_pc_1000ad8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ad30, { 1, 0 }
}

define i32 @function_1000ada4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000add8.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000adbc = call i32 @function_1000a0fc()
  %v2_1000adc4 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000adc4, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000addc33 = add i32 %v2_1000adc4, 124
  %v4_1000addc34 = inttoptr i32 %v3_1000addc33 to i32*
  store i32 0, i32* %v4_1000addc34, align 4
  %v0_1000ade035 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ade036 = add i32 %v0_1000ade035, -1
  store i32 %v1_1000ade036, i32* %r9.global-to-local, align 4
  %v0_1000ade437 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ade438 = add i32 %v0_1000ade437, -1
  store i32 %v1_1000ade438, i32* %ctr.global-to-local, align 4
  %v2_1000ade439 = icmp eq i32 %v1_1000ade438, 0
  br i1 %v2_1000ade439, label %dec_label_pc_1000ade8, label %dec_label_pc_1000add8.dec_label_pc_1000add8_crit_edge

dec_label_pc_1000add8.dec_label_pc_1000add8_crit_edge: ; preds = %dec_label_pc_1000add8.lr.ph, %dec_label_pc_1000add8.dec_label_pc_1000add8_crit_edge
  %v1_1000ade040 = phi i32 [ %v1_1000ade0, %dec_label_pc_1000add8.dec_label_pc_1000add8_crit_edge ], [ %v1_1000ade036, %dec_label_pc_1000add8.lr.ph ]
  %v0_1000addc.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000addc.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000add8 = mul i32 %v1_1000ade040, 4
  %v3_1000addc = add i32 %v1_1000add8, %v1_1000addc.pre
  %v4_1000addc = inttoptr i32 %v3_1000addc to i32*
  store i32 %v0_1000addc.pre, i32* %v4_1000addc, align 4
  %v0_1000ade0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ade0 = add i32 %v0_1000ade0, -1
  store i32 %v1_1000ade0, i32* %r9.global-to-local, align 4
  %v0_1000ade4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ade4 = add i32 %v0_1000ade4, -1
  store i32 %v1_1000ade4, i32* %ctr.global-to-local, align 4
  %v2_1000ade4 = icmp eq i32 %v1_1000ade4, 0
  br i1 %v2_1000ade4, label %dec_label_pc_1000ade8, label %dec_label_pc_1000add8.dec_label_pc_1000add8_crit_edge

dec_label_pc_1000ade8:                            ; preds = %dec_label_pc_1000add8.dec_label_pc_1000add8_crit_edge, %dec_label_pc_1000add8.lr.ph
  store i32 %v2_1000adc4, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000adf0 = call i32 @function_10009550()
  %v3_1000adf4 = icmp eq i32 %v0_1000adf0, 0
  br i1 %v3_1000adf4, label %dec_label_pc_1000adfc, label %dec_label_pc_1000ae0c

dec_label_pc_1000adfc:                            ; preds = %dec_label_pc_1000ade8
  store i32 268480012, i32* @lr, align 4
  %v3_1000ae08 = call i32 @function_100089d8(i32 1, i32 %v2_1000adc4, i32 0)
  br label %dec_label_pc_1000ae0c

dec_label_pc_1000ae0c:                            ; preds = %dec_label_pc_1000ade8, %dec_label_pc_1000adfc
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000ae10 = load i32, i32* @global_var_1001b774.293, align 4
  %v3_1000ae14 = icmp eq i32 %v3_1000ae10, 0
  br i1 %v3_1000ae14, label %dec_label_pc_1000ae1c, label %dec_label_pc_1000ae44

dec_label_pc_1000ae1c:                            ; preds = %dec_label_pc_1000ae0c
  store i32 1, i32* @global_var_1001b774.293, align 4
  br label %dec_label_pc_1000ae24

dec_label_pc_1000ae24:                            ; preds = %dec_label_pc_1000aea0, %dec_label_pc_1000ae1c
  store i32 ptrtoint (i32* @global_var_1001b6d8.291 to i32), i32* %r29.global-to-local, align 4
  %v0_1000ae30 = call i32 @function_1000a0fc()
  store i32 268480060, i32* @lr, align 4
  %v1_1000ae38 = call i32 @function_1000af8c(i32 6)
  %v0_1000ae40 = call i32 @function_1000a0fc()
  %v3_1000ae48.pre = load i32, i32* @global_var_1001b774.293, align 4
  br label %dec_label_pc_1000ae44

dec_label_pc_1000ae44:                            ; preds = %dec_label_pc_1000ae0c, %dec_label_pc_1000ae24
  %v0_1000aebc = phi i32 [ %v3_1000ae10, %dec_label_pc_1000ae0c ], [ %v3_1000ae48.pre, %dec_label_pc_1000ae24 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000ae4c = icmp eq i32 %v0_1000aebc, 1
  br i1 %v3_1000ae4c, label %dec_label_pc_1000ae8c.lr.ph, label %dec_label_pc_1000aebc

dec_label_pc_1000ae8c.lr.ph:                      ; preds = %dec_label_pc_1000ae44
  %v2_1000ae58 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001b774.293, align 4
  store i32 ptrtoint (i32* @global_var_1000ae6c.295 to i32), i32* @lr, align 4
  %v3_1000ae68 = call i32 @function_10008e84(i32 %v2_1000ae58, i32 0, i32 140)
  store i32 %v2_1000adc4, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000addc33, i32* %r9.global-to-local, align 4
  %v2_1000ae9425 = add i32 %v2_1000adc4, 256
  %v3_1000ae9426 = inttoptr i32 %v2_1000ae9425 to i32*
  store i32 -1, i32* %v3_1000ae9426, align 4
  %v0_1000ae9827 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae9828 = add i32 %v0_1000ae9827, -1
  store i32 %v1_1000ae9828, i32* %r11.global-to-local, align 4
  %v0_1000ae9c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae9c30 = add i32 %v0_1000ae9c29, -1
  store i32 %v1_1000ae9c30, i32* %ctr.global-to-local, align 4
  %v2_1000ae9c31 = icmp eq i32 %v1_1000ae9c30, 0
  br i1 %v2_1000ae9c31, label %dec_label_pc_1000aea0, label %dec_label_pc_1000ae8c.dec_label_pc_1000ae8c_crit_edge

dec_label_pc_1000ae8c.dec_label_pc_1000ae8c_crit_edge: ; preds = %dec_label_pc_1000ae8c.lr.ph, %dec_label_pc_1000ae8c.dec_label_pc_1000ae8c_crit_edge
  %v1_1000ae9832 = phi i32 [ %v1_1000ae98, %dec_label_pc_1000ae8c.dec_label_pc_1000ae8c_crit_edge ], [ %v1_1000ae9828, %dec_label_pc_1000ae8c.lr.ph ]
  %v1_1000ae90.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000ae94.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ae8c = mul i32 %v1_1000ae9832, 4
  %v2_1000ae90 = add i32 %v1_1000ae8c, %v1_1000ae90.pre
  store i32 %v2_1000ae90, i32* %r9.global-to-local, align 4
  %v2_1000ae94 = add i32 %v2_1000ae90, 132
  %v3_1000ae94 = inttoptr i32 %v2_1000ae94 to i32*
  store i32 %v0_1000ae94.pre, i32* %v3_1000ae94, align 4
  %v0_1000ae98 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae98 = add i32 %v0_1000ae98, -1
  store i32 %v1_1000ae98, i32* %r11.global-to-local, align 4
  %v0_1000ae9c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae9c = add i32 %v0_1000ae9c, -1
  store i32 %v1_1000ae9c, i32* %ctr.global-to-local, align 4
  %v2_1000ae9c = icmp eq i32 %v1_1000ae9c, 0
  br i1 %v2_1000ae9c, label %dec_label_pc_1000aea0, label %dec_label_pc_1000ae8c.dec_label_pc_1000ae8c_crit_edge

dec_label_pc_1000aea0:                            ; preds = %dec_label_pc_1000ae8c.dec_label_pc_1000ae8c_crit_edge, %dec_label_pc_1000ae8c.lr.ph
  store i32 268480184, i32* @lr, align 4
  %v4_1000aeb4 = call i32 @function_1000ace0(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000ae24

dec_label_pc_1000aebc:                            ; preds = %dec_label_pc_1000ae44
  %v3_1000aebc = icmp eq i32 %v0_1000aebc, 2
  br i1 %v3_1000aebc, label %dec_label_pc_1000aec4, label %dec_label_pc_1000aed0

dec_label_pc_1000aec4:                            ; preds = %dec_label_pc_1000aebc
  store i32 3, i32* @global_var_1001b774.293, align 4
  br label %dec_label_pc_1000aed0

dec_label_pc_1000aed0:                            ; preds = %dec_label_pc_1000aebc, %dec_label_pc_1000aec4
  %v3_1000aed0 = phi i32 [ %v0_1000aebc, %dec_label_pc_1000aebc ], [ 3, %dec_label_pc_1000aec4 ]
  %v1_1000aed8 = icmp ne i32 %v3_1000aed0, 3
  call void @__pseudo_cond_branch(i1 %v1_1000aed8, i32 268480236)
  store i32 4, i32* @global_var_1001b774.293, align 4
  %v1_1000aee8 = call i32 @function_1000a49c(i32 127)
  ret i32 %v1_1000aee8

; uselistorder directives
  uselistorder i32 %v1_1000ae9c, { 1, 0 }
  uselistorder i32 %v1_1000ae98, { 1, 0 }
  uselistorder i32 %v1_1000ade4, { 1, 0 }
  uselistorder i32 %v1_1000ade0, { 1, 0 }
  uselistorder i32 %v2_1000adc4, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000a49c, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 5, 30, 90, 93, 94, 95, 96, 88, 91, 92, 45, 98, 97, 7, 99, 100, 101, 63, 64, 1, 6, 46, 47, 48, 2, 50, 51, 52, 53, 54, 8, 55, 31, 56, 9, 49, 87, 32, 57, 58, 60, 59, 61, 33, 34, 35, 62, 3, 65, 66, 67, 68, 10, 36, 11, 69, 70, 13, 37, 12, 71, 72, 38, 73, 14, 15, 16, 74, 75, 39, 76, 17, 18, 19, 77, 21, 40, 4, 20, 78, 23, 79, 41, 22, 80, 81, 82, 24, 42, 25, 83, 84, 26, 43, 27, 85, 86, 28, 44, 29, 89 }
  uselistorder i32 (i32, i32*, i32)* @function_1000ace0, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 70, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 76, 77, 78, 12, 71, 13, 80, 14, 15, 16, 17, 18, 81, 19, 74, 82, 75, 83, 79, 20, 21, 22, 84, 23, 24, 25, 26, 27, 28, 29, 30, 72, 31, 32, 33, 34, 35, 36, 37, 38, 73, 39, 40, 41, 42, 43, 44, 45, 46, 47, 85, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder i32 (i32, i32, i32)* @function_10008e84, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 202, 37, 0, 1, 55, 56, 203, 57, 204, 58, 205, 27, 2, 3, 4, 38, 103, 115, 206, 104, 28, 59, 39, 60, 30, 29, 31, 61, 62, 105, 41, 40, 106, 107, 63, 108, 5, 6, 109, 110, 35, 111, 42, 112, 64, 194, 68, 67, 66, 65, 43, 7, 8, 113, 114, 69, 44, 70, 71, 73, 72, 74, 46, 45, 75, 76, 77, 78, 79, 80, 32, 36, 116, 179, 9, 33, 180, 10, 117, 118, 119, 120, 121, 122, 123, 11, 12, 13, 14, 15, 16, 81, 124, 47, 125, 126, 127, 128, 129, 17, 18, 19, 20, 21, 22, 82, 130, 48, 131, 132, 133, 134, 135, 83, 137, 136, 23, 24, 84, 138, 49, 139, 140, 141, 142, 143, 85, 145, 144, 25, 26, 86, 146, 50, 147, 148, 149, 150, 151, 152, 153, 87, 154, 155, 51, 156, 157, 158, 159, 160, 89, 161, 88, 162, 163, 164, 165, 167, 168, 169, 166, 90, 170, 52, 171, 172, 173, 91, 92, 175, 176, 177, 174, 93, 178, 53, 181, 182, 183, 184, 185, 186, 187, 94, 188, 54, 95, 96, 189, 190, 97, 98, 191, 192, 193, 99, 100, 195, 196, 101, 102, 197, 198, 199, 200, 34, 201 }
  uselistorder i32* @global_var_1001b774.293, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 38, 39, 0, 40, 2, 1, 3, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 4, 31, 5, 32, 33, 34, 35, 36 }
  uselistorder i32 (i32, i32, i32)* @function_100089d8, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_10009550, { 2, 0, 1, 4, 3 }
  uselistorder i32* @r4, { 73, 74, 75, 70, 71, 76, 32, 1, 33, 8, 34, 83, 82, 4, 5, 77, 79, 80, 69, 78, 9, 6, 72, 10, 11, 12, 7, 35, 36, 81, 13, 14, 15, 37, 19, 20, 21, 16, 17, 18, 3, 64, 65, 66, 67, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 0, 2, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68 }
  uselistorder i32 6, { 12, 13, 58, 1, 14, 15, 24, 16, 17, 25, 26, 27, 2, 28, 0, 29, 30, 31, 32, 18, 3, 33, 34, 19, 4, 35, 20, 36, 21, 37, 38, 39, 5, 40, 41, 42, 6, 43, 44, 45, 46, 47, 22, 7, 48, 49, 50, 51, 52, 23, 8, 53, 54, 55, 9, 10, 11, 56, 57 }
  uselistorder i32 4, { 126, 0, 1, 356, 357, 358, 359, 360, 66, 67, 361, 362, 127, 363, 364, 2, 188, 189, 147, 148, 190, 191, 193, 365, 372, 3, 4, 5, 6, 7, 335, 337, 336, 333, 334, 304, 305, 306, 307, 338, 339, 340, 341, 342, 343, 344, 345, 346, 8, 149, 9, 75, 150, 151, 366, 367, 368, 128, 369, 370, 371, 10, 192, 129, 11, 194, 195, 196, 197, 198, 130, 131, 152, 132, 153, 154, 155, 78, 74, 156, 157, 158, 159, 12, 161, 162, 168, 169, 160, 170, 69, 171, 68, 76, 173, 77, 174, 175, 176, 177, 178, 172, 163, 164, 165, 166, 167, 297, 179, 133, 80, 79, 81, 180, 181, 182, 70, 183, 71, 184, 185, 186, 187, 72, 199, 200, 13, 201, 202, 203, 82, 204, 205, 14, 15, 83, 206, 84, 86, 85, 207, 208, 16, 209, 210, 91, 211, 212, 17, 18, 90, 213, 87, 89, 88, 214, 215, 216, 217, 19, 218, 219, 220, 221, 134, 222, 20, 223, 224, 21, 225, 93, 226, 92, 135, 227, 228, 229, 230, 22, 231, 232, 233, 234, 136, 235, 23, 236, 237, 24, 238, 95, 239, 94, 137, 240, 241, 242, 25, 243, 244, 245, 246, 100, 247, 248, 26, 27, 99, 249, 250, 28, 96, 98, 97, 251, 252, 29, 253, 254, 105, 255, 30, 31, 256, 104, 257, 101, 258, 103, 102, 259, 260, 261, 262, 32, 264, 265, 138, 266, 267, 268, 110, 269, 33, 34, 139, 263, 109, 106, 108, 107, 270, 271, 272, 273, 274, 140, 141, 35, 276, 277, 142, 278, 279, 280, 115, 281, 36, 37, 143, 275, 114, 111, 113, 112, 282, 283, 284, 121, 38, 39, 285, 286, 40, 287, 288, 289, 120, 41, 42, 116, 290, 117, 119, 118, 291, 292, 293, 294, 295, 296, 144, 123, 122, 298, 299, 300, 301, 302, 303, 145, 125, 124, 43, 308, 309, 44, 45, 310, 311, 46, 47, 312, 313, 48, 49, 314, 315, 50, 51, 316, 317, 52, 53, 318, 319, 54, 320, 55, 321, 322, 56, 57, 323, 324, 58, 59, 325, 326, 60, 61, 327, 328, 62, 63, 329, 330, 64, 331, 332, 347, 348, 349, 350, 351, 352, 73, 353, 65, 354, 355, 146 }
  uselistorder i32 32, { 15, 16, 42, 31, 32, 22, 23, 11, 12, 29, 30, 24, 0, 1, 2, 13, 33, 14, 34, 3, 4, 5, 6, 18, 25, 19, 26, 17, 7, 8, 9, 10, 20, 21, 27, 28, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 31, { 1, 2, 26, 27, 15, 28, 29, 3, 4, 0, 5, 30, 31, 16, 17, 18, 19, 22, 23, 20, 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 25 }
  uselistorder i32 ()* @function_1000a0fc, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000aed0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae8c.dec_label_pc_1000ae8c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae44, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000add8.dec_label_pc_1000add8_crit_edge, { 1, 0 }
}

define i32 @function_1000aef4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aef4:
  %v1_1000aef4 = add i32 %arg1, 28
  %v2_1000aef4 = inttoptr i32 %v1_1000aef4 to i32*
  %v3_1000aef4 = load i32, i32* %v2_1000aef4, align 4
  store i32 %v3_1000aef4, i32* @global_var_1001b778.296, align 4
  %v1_1000af04 = add i32 %arg1, 44
  %v2_1000af04 = inttoptr i32 %v1_1000af04 to i32*
  %v3_1000af04 = load i32, i32* %v2_1000af04, align 4
  store i32 %v3_1000af04, i32* @global_var_1001b77c.297, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 43, 14, 15, 5, 6, 16, 13, 42, 7, 9, 10, 11, 12, 8, 3, 4, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 33, 34, 35, 1, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000af10(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af10:
  store i32 %arg1, i32* @global_var_1001b780.290, align 4
  %v0_1000af38 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000af38)
  %v1_1000af40 = call i32 @function_1000afbc(i32 12)
  ret i32 %v1_1000af40

; uselistorder directives
  uselistorder i32 12, { 16, 44, 45, 24, 25, 46, 47, 48, 49, 103, 104, 105, 106, 6, 101, 107, 0, 1, 7, 102, 5, 17, 18, 8, 26, 50, 51, 19, 52, 53, 54, 20, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 9, 39, 22, 23, 40, 10, 41, 43, 42, 34, 97, 55, 56, 57, 58, 59, 60, 11, 61, 62, 63, 64, 65, 66, 67, 12, 68, 69, 70, 71, 72, 73, 74, 75, 76, 13, 77, 78, 79, 80, 81, 82, 83, 84, 85, 14, 86, 15, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001b780.290, { 1, 0, 2 }
}

define i32 @function_1000af44() local_unnamed_addr {
dec_label_pc_1000af44:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000af5c = call i32 @__asm_mfcr()
  %v1_1000af60 = and i32 %v0_1000af5c, 268435456
  %v3_1000af60 = icmp eq i32 %v1_1000af60, 0
  store i32 %v0_1000af5c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000af60, label %dec_label_pc_1000af78, label %dec_label_pc_1000af6c

dec_label_pc_1000af6c:                            ; preds = %dec_label_pc_1000af44
  %v0_1000af6c = call i32 @function_10008d9c()
  %v0_1000af70 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af70 = inttoptr i32 %v0_1000af6c to i32*
  store i32 %v0_1000af70, i32* %v2_1000af70, align 4
  br label %dec_label_pc_1000af78

dec_label_pc_1000af78:                            ; preds = %dec_label_pc_1000af44, %dec_label_pc_1000af6c
  %v0_1000af88 = phi i32 [ %v0_1000af5c, %dec_label_pc_1000af44 ], [ -1, %dec_label_pc_1000af6c ]
  ret i32 %v0_1000af88

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 36, 51, 27, 28, 35, 37, 29, 52, 41, 39, 42, 40, 38, 53, 54, 30, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 47, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 46, 40, 32, 3, 45, 44, 36, 30, 43, 2, 14, 16, 13, 15, 21, 1, 0, 42, 41, 35, 34, 33, 31, 29, 28, 27, 26, 25, 24, 23, 22, 20, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000af78, { 1, 0 }
}

define i32 @function_1000af8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af8c:
  %v0_1000af8c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268480420, i32* @lr, align 4
  %v0_1000afa0 = call i32 @function_10008710()
  %v0_1000afa8 = load i32, i32* @r29, align 4
  store i32 %v0_1000af8c, i32* @lr, align 4
  %v2_1000afb8 = call i32 @function_100087a0(i32 %v0_1000afa0, i32 %v0_1000afa8)
  ret i32 %v2_1000afb8

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100087a0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10008710, { 0, 3, 2, 1 }
}

define i32 @function_1000afbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000afbc:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000afd0 = call i32 @function_10008d9c()
  %v0_1000afd4 = load i32, i32* @r29, align 4
  %v2_1000afd4 = inttoptr i32 %v0_1000afd0 to i32*
  store i32 %v0_1000afd4, i32* %v2_1000afd4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_10008d9c, { 24, 15, 52, 14, 34, 13, 12, 11, 10, 33, 32, 31, 9, 8, 5, 7, 6, 37, 36, 21, 22, 51, 50, 49, 48, 30, 29, 28, 47, 35, 26, 1, 0, 46, 45, 27, 25, 44, 4, 17, 19, 16, 18, 23, 3, 2, 43, 42, 41, 40, 39, 38, 20 }
  uselistorder i32* @r29, { 292, 293, 313, 314, 315, 11, 12, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 316, 317, 318, 319, 320, 0, 60, 294, 295, 296, 297, 291, 298, 1, 299, 300, 301, 302, 303, 304, 13, 14, 15, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 2, 117, 3, 118, 4, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 5, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 6, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 190, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 7, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 8, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 9, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 306, 305, 307, 308, 309, 10, 310, 311, 312 }
}

define i32 @function_1000aff0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aff0:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001b594.278 to i32), i32* %r31.global-to-local, align 4
  %v3_1000b00c = load i32, i32* @global_var_1001b594.278, align 4
  %v3_1000b010 = icmp eq i32 %v3_1000b00c, -1
  br i1 %v3_1000b010, label %dec_label_pc_1000b02c, label %dec_label_pc_1000b018

dec_label_pc_1000b018:                            ; preds = %dec_label_pc_1000aff0, %dec_label_pc_1000b018
  %v0_1000b018 = phi i32 [ %v3_1000b020, %dec_label_pc_1000b018 ], [ %v3_1000b00c, %dec_label_pc_1000aff0 ]
  call void @__pseudo_call(i32 %v0_1000b018)
  %v0_1000b020 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b020 = add i32 %v0_1000b020, -4
  %v2_1000b020 = inttoptr i32 %v1_1000b020 to i32*
  %v3_1000b020 = load i32, i32* %v2_1000b020, align 4
  store i32 %v1_1000b020, i32* %r31.global-to-local, align 4
  %v3_1000b024 = icmp eq i32 %v3_1000b020, -1
  br i1 %v3_1000b024, label %dec_label_pc_1000b02c, label %dec_label_pc_1000b018

dec_label_pc_1000b02c:                            ; preds = %dec_label_pc_1000b018, %dec_label_pc_1000aff0
  %v0_1000b03c = load i32, i32* @r3, align 4
  ret i32 %v0_1000b03c

; uselistorder directives
  uselistorder i32 %v3_1000b020, { 1, 0 }
  uselistorder i32 -4, { 0, 13, 14, 15, 7, 8, 9, 10, 11, 12, 16, 17, 1, 2, 3, 4, 5, 6 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 133, 134, 0, 36, 89, 255, 10, 11, 12, 256, 90, 257, 8, 9, 91, 92, 13, 93, 37, 38, 248, 76, 39, 191, 40, 41, 42, 43, 44, 192, 193, 194, 195, 196, 201, 45, 268, 266, 46, 258, 259, 77, 94, 260, 16, 17, 95, 265, 14, 15, 176, 3, 78, 249, 250, 32, 135, 264, 261, 47, 136, 96, 137, 18, 19, 138, 139, 140, 35, 48, 141, 142, 74, 97, 98, 99, 100, 197, 198, 20, 21, 22, 101, 199, 200, 102, 79, 75, 202, 203, 49, 50, 51, 52, 262, 263, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 267, 66, 143, 103, 23, 204, 205, 104, 1, 105, 106, 144, 67, 68, 107, 2, 108, 24, 109, 69, 110, 25, 206, 80, 145, 111, 81, 146, 147, 148, 112, 149, 150, 70, 153, 113, 27, 114, 26, 115, 154, 116, 71, 155, 156, 157, 117, 118, 151, 152, 82, 158, 84, 159, 160, 83, 161, 162, 163, 164, 165, 85, 166, 167, 72, 168, 169, 119, 28, 120, 29, 170, 171, 172, 173, 73, 174, 175, 121, 122, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 33, 34, 207, 208, 209, 210, 211, 123, 124, 212, 213, 214, 215, 216, 217, 218, 220, 219, 30, 221, 222, 224, 223, 31, 225, 226, 125, 227, 228, 126, 229, 230, 231, 232, 233, 4, 234, 5, 235, 236, 6, 237, 7, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 127, 128, 251, 129, 252, 130, 131, 253, 254, 132, 86, 87, 88 }
  uselistorder i32 1, { 160, 485, 958, 596, 597, 671, 670, 252, 248, 251, 250, 247, 249, 674, 673, 672, 37, 0, 944, 945, 946, 947, 520, 38, 959, 960, 961, 962, 488, 487, 486, 39, 40, 45, 46, 44, 192, 454, 675, 200, 201, 419, 395, 484, 483, 677, 676, 448, 447, 449, 446, 445, 450, 598, 207, 208, 210, 209, 678, 366, 338, 599, 679, 50, 48, 47, 49, 600, 542, 966, 963, 683, 682, 681, 680, 333, 330, 335, 334, 332, 331, 601, 965, 684, 818, 819, 820, 595, 821, 521, 34, 35, 36, 440, 438, 439, 23, 24, 26, 27, 25, 199, 503, 685, 478, 964, 489, 602, 603, 688, 687, 686, 146, 143, 144, 145, 142, 147, 202, 543, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 785, 702, 701, 434, 435, 704, 703, 29, 28, 30, 873, 494, 31, 32, 33, 967, 968, 86, 84, 87, 85, 69, 70, 68, 71, 72, 73, 705, 604, 706, 58, 57, 59, 605, 707, 432, 433, 544, 708, 60, 455, 197, 492, 193, 217, 336, 83, 159, 198, 709, 329, 278, 479, 481, 480, 456, 710, 394, 711, 246, 786, 712, 196, 829, 830, 495, 496, 505, 831, 832, 504, 833, 715, 714, 713, 20, 16, 17, 21, 15, 19, 22, 18, 1, 823, 822, 824, 825, 874, 875, 493, 876, 877, 717, 716, 834, 835, 836, 606, 837, 51, 52, 53, 54, 941, 942, 523, 522, 943, 482, 782, 784, 783, 607, 838, 497, 452, 451, 453, 948, 491, 490, 839, 840, 498, 499, 506, 841, 11, 12, 13, 14, 878, 211, 212, 213, 214, 215, 216, 899, 74, 77, 76, 75, 879, 441, 444, 443, 442, 55, 56, 507, 545, 787, 788, 608, 789, 790, 609, 791, 792, 794, 798, 799, 795, 796, 797, 800, 610, 801, 611, 612, 802, 613, 614, 803, 809, 810, 530, 665, 725, 724, 723, 722, 721, 720, 719, 718, 471, 460, 467, 468, 472, 461, 470, 473, 463, 457, 458, 464, 459, 469, 462, 466, 465, 804, 805, 615, 806, 807, 616, 808, 157, 148, 151, 153, 155, 154, 156, 150, 149, 158, 152, 793, 617, 436, 437, 935, 618, 508, 477, 475, 476, 474, 880, 726, 43, 41, 42, 547, 811, 546, 812, 619, 620, 621, 814, 815, 813, 524, 816, 622, 623, 624, 625, 626, 627, 817, 531, 737, 736, 735, 734, 668, 733, 732, 731, 730, 729, 728, 727, 66, 63, 64, 5, 6, 7, 8, 61, 62, 65, 67, 628, 629, 548, 630, 550, 549, 525, 739, 738, 631, 529, 826, 632, 827, 828, 500, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 532, 752, 751, 750, 749, 748, 747, 746, 745, 744, 743, 742, 741, 740, 203, 204, 205, 206, 842, 646, 843, 844, 845, 846, 847, 3, 526, 848, 849, 2, 850, 851, 852, 853, 755, 754, 666, 667, 753, 195, 194, 918, 921, 919, 527, 920, 161, 922, 923, 924, 647, 648, 854, 855, 856, 857, 649, 509, 533, 858, 551, 552, 756, 390, 383, 393, 386, 392, 384, 385, 382, 369, 380, 381, 377, 378, 379, 375, 376, 372, 373, 371, 370, 374, 389, 391, 368, 367, 387, 388, 859, 860, 861, 650, 510, 534, 862, 553, 554, 555, 757, 262, 259, 263, 273, 253, 255, 265, 264, 276, 266, 260, 274, 275, 270, 271, 272, 268, 261, 269, 267, 277, 258, 257, 256, 254, 863, 864, 865, 866, 651, 501, 511, 535, 867, 556, 557, 558, 559, 560, 761, 760, 759, 758, 314, 309, 318, 324, 307, 311, 321, 312, 322, 319, 323, 325, 326, 327, 315, 310, 308, 328, 320, 313, 317, 316, 306, 868, 869, 870, 871, 652, 502, 512, 536, 872, 561, 562, 563, 564, 565, 566, 567, 568, 569, 765, 764, 763, 762, 404, 399, 408, 414, 397, 401, 411, 402, 412, 409, 413, 415, 416, 417, 405, 400, 398, 418, 410, 403, 407, 406, 396, 881, 882, 883, 884, 885, 886, 889, 887, 888, 890, 891, 892, 653, 893, 513, 537, 894, 895, 896, 528, 897, 898, 768, 767, 766, 173, 162, 171, 163, 178, 187, 177, 185, 180, 181, 182, 183, 172, 184, 186, 167, 168, 188, 189, 190, 175, 174, 191, 176, 179, 170, 169, 166, 165, 164, 900, 901, 902, 654, 514, 538, 903, 770, 769, 118, 116, 127, 135, 136, 129, 137, 131, 122, 140, 132, 128, 138, 139, 130, 133, 124, 134, 121, 120, 119, 115, 117, 141, 126, 125, 123, 904, 905, 906, 908, 909, 907, 515, 539, 910, 570, 571, 572, 771, 294, 281, 292, 301, 280, 279, 296, 304, 299, 297, 290, 282, 298, 302, 303, 286, 287, 295, 293, 300, 283, 305, 291, 289, 288, 284, 285, 911, 912, 913, 915, 916, 914, 516, 540, 917, 573, 574, 575, 776, 775, 774, 773, 772, 110, 95, 108, 113, 94, 88, 112, 114, 93, 102, 105, 96, 109, 89, 91, 92, 100, 101, 111, 90, 97, 107, 106, 104, 103, 98, 99, 925, 926, 655, 927, 928, 929, 656, 657, 541, 930, 576, 577, 777, 355, 350, 343, 352, 361, 339, 340, 364, 354, 356, 357, 359, 348, 351, 362, 363, 349, 353, 358, 360, 345, 344, 365, 347, 346, 341, 342, 931, 580, 932, 933, 578, 934, 658, 659, 579, 778, 229, 220, 218, 230, 228, 231, 222, 225, 226, 227, 221, 224, 223, 219, 936, 583, 937, 938, 581, 939, 660, 661, 582, 779, 243, 234, 232, 244, 242, 245, 236, 239, 240, 241, 235, 238, 237, 233, 4, 584, 585, 586, 587, 588, 589, 590, 591, 592, 940, 593, 594, 80, 79, 78, 81, 517, 82, 518, 9, 949, 662, 953, 663, 954, 950, 951, 952, 955, 956, 423, 427, 431, 420, 430, 421, 426, 425, 424, 422, 429, 428, 957, 664, 519, 10, 781, 780, 337, 669 }
  uselistorder label %dec_label_pc_1000b018, { 1, 0 }
}

define i32 @function_1000b040() local_unnamed_addr {
dec_label_pc_1000b040:
  %v0_1000b058 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b058

; uselistorder directives
  uselistorder i32* @r3, { 22, 12, 164, 165, 166, 13, 21, 167, 88, 0, 89, 31, 174, 19, 20, 3, 25, 168, 170, 30, 171, 172, 173, 155, 29, 156, 9, 18, 158, 160, 159, 169, 32, 146, 33, 34, 90, 26, 15, 91, 92, 93, 94, 95, 96, 97, 98, 99, 14, 28, 4, 16, 100, 1, 2, 5, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 58, 6, 59, 60, 17, 147, 148, 149, 10, 150, 151, 7, 67, 68, 69, 70, 71, 72, 73, 74, 11, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 139, 140, 8, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 152, 153, 154, 157, 161, 162, 163, 24, 23, 27 }
}

define i32 @function_1000b05c() local_unnamed_addr {
entry:
  store i32 268480620, i32* @lr, align 4
  %v0_1000b068 = call i32 @function_100000b8()
  ret i32 %v0_1000b068

; uselistorder directives
  uselistorder i32 0, { 802, 203, 803, 38, 204, 142, 804, 205, 805, 806, 36, 37, 807, 808, 809, 0, 745, 746, 747, 77, 76, 748, 810, 811, 812, 39, 813, 814, 815, 816, 506, 206, 207, 373, 752, 753, 143, 754, 817, 19, 507, 508, 818, 819, 820, 821, 208, 509, 510, 511, 512, 513, 514, 515, 78, 523, 524, 822, 823, 209, 841, 842, 210, 847, 849, 135, 850, 211, 848, 1, 824, 825, 79, 826, 827, 212, 144, 213, 828, 829, 42, 43, 830, 831, 832, 214, 835, 836, 837, 40, 41, 838, 839, 840, 478, 479, 480, 481, 482, 80, 483, 484, 485, 202, 486, 81, 757, 759, 23, 760, 44, 761, 758, 755, 756, 2, 729, 725, 726, 727, 728, 136, 3, 764, 762, 763, 137, 765, 766, 730, 731, 732, 733, 734, 215, 735, 736, 767, 768, 216, 769, 145, 770, 779, 780, 82, 771, 772, 773, 774, 775, 776, 777, 778, 4, 5, 365, 374, 375, 376, 45, 46, 377, 6, 217, 749, 378, 379, 380, 381, 382, 383, 384, 385, 218, 386, 851, 852, 853, 854, 855, 856, 857, 858, 516, 517, 47, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 387, 487, 607, 833, 834, 388, 389, 537, 621, 390, 843, 83, 844, 800, 795, 801, 796, 688, 845, 846, 391, 392, 538, 539, 540, 48, 84, 541, 542, 64, 543, 545, 544, 140, 488, 489, 7, 68, 24, 69, 25, 622, 70, 623, 26, 27, 624, 71, 28, 85, 219, 220, 20, 21, 546, 738, 739, 740, 741, 89, 87, 86, 742, 88, 91, 90, 372, 92, 547, 49, 548, 549, 550, 781, 93, 782, 783, 551, 552, 50, 94, 553, 8, 95, 649, 96, 625, 393, 394, 99, 395, 396, 397, 398, 399, 134, 400, 221, 401, 402, 405, 403, 98, 404, 222, 406, 407, 408, 409, 410, 100, 411, 412, 149, 413, 414, 366, 72, 416, 417, 418, 419, 420, 421, 53, 54, 422, 423, 51, 52, 424, 425, 426, 427, 428, 429, 148, 146, 434, 435, 223, 436, 430, 431, 432, 433, 437, 22, 367, 368, 438, 439, 97, 440, 441, 442, 447, 448, 449, 450, 147, 451, 452, 101, 453, 454, 455, 456, 457, 458, 443, 102, 444, 445, 103, 446, 224, 415, 626, 459, 141, 460, 461, 225, 462, 463, 464, 465, 466, 150, 467, 468, 55, 56, 469, 470, 471, 57, 58, 472, 473, 474, 9, 475, 226, 227, 228, 476, 229, 17, 16, 15, 14, 13, 12, 151, 477, 490, 491, 492, 494, 105, 493, 104, 495, 496, 107, 497, 106, 498, 10, 230, 231, 18, 501, 499, 500, 138, 232, 233, 234, 235, 236, 502, 237, 503, 504, 152, 238, 505, 29, 554, 565, 555, 11, 556, 557, 558, 559, 139, 560, 561, 562, 563, 564, 30, 108, 63, 62, 109, 566, 59, 241, 567, 239, 240, 153, 568, 74, 689, 690, 73, 691, 110, 692, 75, 693, 111, 569, 112, 570, 242, 571, 572, 573, 243, 574, 575, 576, 577, 244, 578, 579, 580, 154, 155, 156, 157, 158, 159, 160, 161, 581, 582, 113, 583, 584, 245, 585, 586, 587, 588, 589, 590, 246, 591, 592, 593, 170, 162, 163, 164, 165, 166, 167, 168, 169, 114, 594, 595, 247, 596, 597, 598, 599, 248, 602, 603, 60, 601, 600, 249, 604, 605, 606, 171, 172, 173, 174, 175, 176, 177, 115, 608, 609, 250, 610, 611, 612, 613, 251, 616, 617, 61, 615, 614, 252, 618, 619, 620, 178, 179, 180, 627, 628, 253, 629, 630, 117, 116, 631, 254, 632, 633, 634, 635, 636, 637, 638, 118, 639, 640, 641, 181, 642, 643, 255, 644, 65, 66, 645, 119, 646, 647, 648, 256, 182, 183, 184, 185, 120, 650, 257, 651, 652, 653, 654, 258, 655, 656, 657, 187, 186, 658, 259, 659, 660, 121, 661, 260, 662, 663, 664, 665, 666, 667, 668, 669, 670, 261, 671, 672, 673, 188, 189, 190, 191, 674, 122, 675, 262, 676, 677, 678, 679, 680, 681, 682, 683, 684, 263, 685, 686, 687, 192, 193, 194, 195, 694, 695, 696, 697, 123, 698, 264, 699, 700, 701, 702, 703, 265, 704, 705, 706, 196, 197, 198, 199, 127, 126, 707, 708, 266, 31, 125, 124, 709, 710, 711, 267, 32, 712, 713, 714, 715, 128, 200, 132, 131, 716, 717, 33, 130, 129, 718, 719, 720, 34, 721, 722, 723, 724, 133, 201, 737, 743, 744, 750, 751, 784, 67, 785, 786, 268, 787, 788, 789, 790, 791, 792, 793, 794, 797, 35, 798, 799, 859, 860, 861, 369, 370, 371, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880 }
  uselistorder i32* @lr, { 8, 684, 685, 686, 655, 687, 688, 689, 690, 691, 692, 693, 694, 652, 10, 695, 304, 305, 9, 656, 657, 306, 307, 308, 309, 310, 311, 704, 705, 709, 710, 711, 712, 713, 714, 715, 717, 706, 708, 696, 697, 698, 699, 700, 701, 702, 703, 658, 660, 659, 621, 622, 623, 624, 625, 626, 661, 662, 663, 664, 668, 665, 666, 667, 11, 12, 601, 566, 567, 602, 448, 13, 220, 14, 15, 603, 604, 653, 16, 17, 18, 19, 20, 21, 22, 716, 23, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 707, 24, 25, 26, 27, 28, 29, 326, 650, 327, 669, 479, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 512, 480, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 107, 108, 109, 110, 111, 112, 113, 114, 82, 83, 84, 85, 86, 87, 481, 482, 483, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 0, 237, 238, 239, 240, 241, 242, 259, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 4, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 5, 357, 358, 359, 360, 361, 362, 1, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 429, 422, 423, 424, 425, 426, 427, 428, 2, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 460, 453, 454, 455, 456, 457, 458, 459, 3, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 586, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 607, 608, 609, 606, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 654, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
